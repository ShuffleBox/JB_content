Well, hello, everyone.
This is Brunch with Brent.
Joining me today is Daniel Foray.
Daniel, how are you doing?
I'm doing pretty good.
How are you doing?
Yeah, I'm doing great.
It's good to hear your voice.
For those who don't know you, I think many, many do.
Daniel is the founder of Elementary OS and also a regular co-host on User Error.
For those who haven't dove into User Error yet, can you give us a bit of a sense of what
goes on there?
Yeah.
I think my favorite way to describe User Error is it's like if you got your nerd friends
and went out to the pub and then just talked about whatever random stuff you thought up,
that's kind of what the podcast is.
How could that not be lovely, right?
Yeah, it's a lot of fun.
Yeah, it seems like you guys have a lot of fun.
Joining you there is Joe Resington and Popey as well, who I've had a chat with here on
Brunch as well.
I don't know how you guys do it, but there's this dynamic between the three of you that's
just so lovely to listen to.
How does that feel on your end?
I appreciate you saying that.
I think it's good, too.
We've obviously met in real life before and actually had silly conversations in a pub,
so it's fun to see that we can do a show with that same dynamic and we all get along really
well and we're friends.
It's just fun.
It doesn't feel like work to me in any way.
That always means you're doing the right thing, I think.
I don't think I know the story of how that all started.
You mentioned that you did get a chance to be in person together and to be at a pub and
do kind of the same thing.
Was that before it started or after, or how did that sort of all come to be?
Yeah, so I've actually known Alan for quite a while because I've gone to a few different
canonical sponsored conferences.
I used to go to the Ubuntu Developer Summit when that was a thing, and then also I've
gone to a couple of the Snap events and some other things like that, and then I've met
up with him at other events like we went to Linux App Summit, and I don't remember if
I've seen him at Gwadek, but we just end up going to a lot of the same conferences.
Then I met Joe at Linux Northwest, but I've only got to see him in person once.
That I guess was the previous one last year, I would imagine, right?
Yeah, yeah.
I think probably you and I just missed each other.
I flew in late.
I actually missed most of the conference last year, and I think you and I just missed each
other.
We haven't got a chance to sort of meet in person yet, which I was looking forward to
this year, but we'll see what happens.
I agree with you in that meeting in person, especially when you're co-hosting a podcast
together of that style, is so essential, isn't it?
Yeah, it's so different, I think, when you interact with people online and you kind of
only see their work persona, I guess, and then once you meet them in person, there's
just a different level of connection you have with them.
I think that's why it's so important to do these kind of conferences and things, if you're
going to work with that person in the future in any capacity, it always helps to have some
level of camaraderie with them and know that we're all working in a common interest.
I don't know if there's a lofty way to put it or anything other than just knowing that
you guys are cool with each other.
Yeah, that goes a long way for sharing ideas and sharing space and obviously some audio
too.
So yeah, I definitely support that anytime you can do it.
You did mention that you had met Alan quite a little while ago through some Ubuntu related
stuff.
I would imagine those were some of the earlier years of elementary OS, is that sort of the
beginning of when you got to meet him and start all of that?
Yeah, and even before that, and I'm not sure if a whole lot of people know, but I used
to do a contract work for Ubuntu during the Unity years.
I'm not sure how much of that work still exists in Ubuntu, but a lot of the iconography and
things like that.
I worked with Matthew Paul Thomas on the Ubiquity design for choosing the different kinds of
installation setups and so I did a decent amount of design work for Canonical way back
in the day.
Nice.
I had no idea and I suppose that makes a lot of sense now and I would imagine informed
a lot of what you're doing these days.
Yeah, it's kind of interesting.
I guess in some ways it was almost the other way around where I started doing like elementary
icons and it was at a time when Ubuntu was really looking at their major rebranding shift,
like they were going from like the whole brown and orange kind of thing and then into more
of the purple and orange stuff and one of the lead designers at the time, David Siegel,
reached out to me and he was like, hey, I like what you're doing with the elementary
icon stuff.
Do you think you could make a version for Ubuntu and propose that?
So I did and then it was kind of like through that that I ended up getting to do a lot of
work in Ubuntu and kind of like influence things a little bit.
Well, that sounds super fun.
It seems to me as well that it sort of fits with what I've seen as one of your personal
themes which is just rich collaboration throughout.
Does that feel like that's a thread that makes sense?
Yeah, definitely.
And I'm really happy to be able to be a part of a bunch of different things and like over
the years kind of getting started with like the GNOME and doki people and doing elementary
and then I've done some work, just a little bit of design work for like Martin Winpress
on the Ubuntu MATE stuff and so it's fun to just kind of get involved in different places
and I think it is kind of like, you know, everybody tries to make it that everybody's
competing with each other, but we're all kind of more of like a family and everybody wants
to work together and make everything better for everybody.
Yeah, that's what I'm learning more and more as I get a bit more integrated into our sort
of Linux and open source community is that it definitely feels massive and has a lot
of people in it and that's a wonderful thing, but at the same time somehow we've managed
to make it feel like a little close family at the same time and I find that really impressive
and also just really cool and it sounds like you're echoing that sentiment exactly.
Yeah, absolutely.
I wanted to ask you a little bit more about sort of your design background because it
seems to me like that's not necessarily, you know, when we think of contributing to projects
and things like that, we often quickly go to sort of the developer standpoint, but can
you walk us a little bit through your history?
I know you're really strong in design and so where did that start for you and how did
that move into the software world?
I guess if I had to like really point out like the first time I started getting into
like visual design stuff, it was as a kid, my uncle was into like game development and
he loved the programming side, but he hated like sprite work and stuff like that and so
he kind of would like push it off on the me a little bit and go, hey man, you know, if
you can come up with some cool artwork, like we can make a game together and yeah, so I
started doing some of that kind of stuff and just trying to like learn, you know, how to
do spriting for that kind of stuff and then I ended up from there kind of continuing some
of that like modding on different games and stuff.
There was this game called Little Fighter and it was interesting in the way that you
could easily go in and change all the sprites and everything was like scripted for all the
action so it wasn't that hard to like do custom characters and stuff like that so I really
got into that and like modding that kind of thing and then when Windows XP was kind of
the big thing then it seemed like there was a decent modding community there around like
I can't remember what all the little extensions were but there was like things for like docs
and adding shadows to the windows and like there was a bunch of Windows XP mods out and
so I was always really interested in that kind of like modding visual design kind of
stuff and then when I saw Karora Linux with the Compiz XGL demo and the 3D spinning cube
like that was for me it was like oh my god this is the ultimate playground and getting
into that stuff and then starting to see that like oh well in Windows you can kind of change
the way that stuff looks but it always acts like Windows and then in this new kind of
Linux playground like not only can you change the way stuff looks but you can change the
way it acts and that's like a whole different level because you're getting into like user
experience design and not just visual design right so that was really big for me was kind
of discovering like how flexible desktop Linux is and and getting to kind of actually move
into not just how things look but how they work too.
It sounds like a nice gradual progression that has a lot of space to keep you really
fascinated and interested in continuing the learning curve that sounds really really great.
You mentioned sort of running into Karora there and then having Linux sort of open up
the world for you.
How did you first get introduced to Linux or even the open source concept?
Was it someone who shared that with you or how did that go for you?
You know what it was?
It was...
Do you remember dig.com?
Yes, I do.
Yeah, so it was on dig and I can't remember if it just popped up in like the technology
I almost called it the technology subreddit that's how like gone dig is like it was like
the technology section of dig or whatever and right and yeah it just popped up there
one day as like oh you could do this and you could just put this thing on a CD and like
you don't even install it or anything and you know I knew like what an operating system
was because I had technical family members and like the idea of like oh well you know
you're installing a different version of Windows or you know we knew some people had Macs and
so I got like what that idea was but I don't think I had ever heard of Linux before that.
So did you just kind of download it and throw it on a CD and you knew enough to sort of
figure that out or do you have a mentor sort of helping you out either online or off?
No it was totally it was just you know knowing enough to burn a CD and then popping it in
and and going oh you know this is crazy and then like kind of diving into it and then
I was reading more about it and found out that it was built on Gentoo and I was like
oh what's Gentoo and I looked into that and I downloaded the whole like Gentoo manual
and printed it out and like this big spiral binder.
That sounds pretty dedicated and to start near near Gentoo is quite the adventure as
well.
Yeah well it was you know I had no idea so I think it was such a learning experience
though to like set up a Gentoo install you know when you're starting from from nothing
and you're like wow this is really hard but you like learn oh okay well there's so many
different components in an operating system and you're like okay I need something to manage
the network and I need something to do the login screen and I need a desktop environment
and I need a package manager and you kind of realize like oh okay like this is more
complicated than it seems on the surface and there's so many different choices you can
make and then what I actually got me into Ubuntu was finding out I was trying to work
on like an updates manager for Gentoo because I was like this is really complicated and
I didn't really have any development chops I was just kind of like trying to jam something
together in Python and I don't think I ever got very far but and then I saw that Ubuntu
had an updates manager and I was like that's it I'm switching Ubuntu I don't even know
what it is.
But it sounds like you kind of tripped over an accidental like initiation into really
learning the different pieces that it takes to put a distribution together and it sounds
like that happened early on for you which isn't isn't everybody's sort of path into
Linux but I would imagine that would inform what you're doing today in a really meaningful
way.
Because for me it was about figuring out how to put together a different operating system
it wasn't really about just using the operating system and so going through the stuff with
Gentoo was I wasn't intimidated by at all because my my goal wasn't to just like pop
something in and have it up and running it was to build something you know.
It sounds like you were looking for a playground at that time yeah absolutely and having fallen
on to a Gentoo was totally totally fine and and really fun actually I would imagine.
Yeah challenging challenging for sure but but fun and yeah it's a it's a wild world
with how how complex a Gentoo install can get.
I'll take your word for it I will say I'm uninitiated there but but everyone I know
who've who have dove into trying a Gentoo install have really have always said they've
really benefited from it so that's that's again another sort of check mark in the Gentoo
learning sphere I suppose.
What was the progression then into forming elementary because it sounds like you moved
from there to Ubuntu because it sounded easier in some ways or had some features that you
wanted but how did that evolve for you into making something of your own?
Yeah so I think from there I'm not sure how much I was doing like icons and stuff before
I switched to Ubuntu I can't really remember but I know that once I got on Ubuntu I think
that's when things really kicked off more and I was doing a lot more work with iconography
and then I got involved somehow with Gnome Dew and there was another one it was called
Gloobus or something like that and it was like a preview app.
That's a great name.
Yeah it was like there was so much wild stuff happening at that time and so it's just kind
of getting involved with different teams that were doing interesting things that were like
oh I want that app and then turns out I can talk to the people that are making it and
maybe get some things that I want built in there.
What a gift of open source right that you could reach out to the people just making
it I think that's really great.
Yeah it's such a wild concept and I think what's really cool is that that's still the
way it is today.
It wasn't like at that time it was kind of this weird pioneer Wild West time I think
compared to now but I think that it's still the case that you can just kind of get involved
with stuff and start talking to people who are making things and it's always awesome
to see when you're using something like on GitHub nowadays and then the author just like
will come in and like leave a comment and be like oh you're having this problem because
you did this and if you try this configuration it's like wow that guy made that thing and
he took the time to come like comment on my thing like that is so great.
And also I think and you will obviously have more personal experience than me on this one
but I think that's an essential part of all of this as well there's I would imagine from
your perspective some close connection that you get with users that maybe you wouldn't
get if you were behind some kind of some kind of wall of you know a developer wall or a
designer wall.
Do you appreciate that most days that close connection from the perspective of the person
creating?
Yeah absolutely and you know sometimes it's overwhelming because you know there's only
one of me and like you're not scalable yeah and it's tough and there's so many people
that want really personal help that sometimes I'm just not able to provide but I think that
is super important to me to make sure that people know that like if they go through the
proper channels that it's not impossible for them to get a hold of someone who's working
on that thing and that will talk to them and ask questions and spend time to make sure
that they're having a good time.
I've had that experience and it's it seems really special when you get that kind of attention
so but I distracted you there a little bit because you were talking about sort of your
trajectory into elementary and founding elementary and how those ideas started.
Let's see so we're picking up with getting involved with some different open source projects
and then I think it was around that time that I had like some kind of ideas about how these
things might fit together more and kind of like an idea around how a desktop environment
might look and you know it was kind of crazy at the time like I had these like sketches
where there was like three docs on each side of the screen and like this one did devices
and this one has your favorites and this one's your apps and they're all you know coming
in and out of context and then like little other pop-up bubbles and like it was it was
complicated but it was just like doing some like real exploration about like if we didn't
think about what a desktop environment supposed to look like how would we do it and I was
doing tons of mock-ups and looking at different applications and just kind of like trying
to throw away all the assumptions and make something different and one that got a lot
of attention was I did some design work related to the file browser Nautilus and I think it
was OMG Ubuntu who kind of picked it up and talked about it and then a developer reached
out to me and was like hey that's really cool let's build that and so we made like this
big patch set for Nautilus and we went to go try to push it upstream and like at the
time being like a young guy who has no idea how like software development works I was
kind of like I guess put off because they were like no we're not gonna merge that and
I was like why what the hell we work so hard and it was you know like ill-considered and
the patches were huge and you know it's totally understandable now from the perspective of
like an upstream maintainer why like you need to make sure that stuff you're merging in
is like good quality and has like a really well considered design direction and it fits
in with the rest of the application and stuff like that but it was kind of like that thing
where it was kind of like okay well maybe I don't want to kind of leave it up to someone
else if they're gonna merge in that code maybe we should start working on our own stuff and
so we kind of built a little community around doing something different and building a different
desktop environment and it just kind of took off from there with the applications and the
desktop environment and then we went to like okay we have all this stuff and we need a
way to present it all together to people because these things are all made to fit together
and so doing a distro is kind of the natural progression and not necessarily an easy decision
either because there's a lot of well you really got to be committed to make a distribution
last long term and last long term it has right I think you started that back in was it 2007
ish around there yeah that's when I started getting involved with like the design stuff
and the icons but we didn't do our first OS release for a while I think I think we're
coming up on nine years now I think it'll be at the end of this month that's still impressive
really when you think about all the work that goes into something like that I think that's
worth congratulating and you should have a I suppose virtual party to celebrate thanks
yeah I don't you know I don't even know if we were thinking about that at the time I
don't know if we thought about like how long it would take to do everything we wanted to
do I think we're just kind of like this is we want to build some stuff and then just
like kept going but it is one of those things where you see when we first registered the
App Center project on Launchpad and then how long it took from when we registered that
project to like okay now we've done all these different things and different toolkits have
come out we've migrated all our development to GitHub and and it took so long before we
actually delivered like the first version of App Center to users and I think that a
lot of people maybe don't realize that sometimes it takes years to deliver some of these products
oh man yeah but there's and you think this is probably just my assumption but there's
far more work that happens sort of on the on the background that nobody ever sees then
then what ends up sort of being shown to users right there's a lot of as you mentioned all
that setup and ideas and marketing and all this all this stuff on the back end yeah totally
and you know that's something we've tried to expose a little bit more in in blog posts
when we're doing something that's like I think the last one we did is when we did the new
design for the login and lock screen we wrote about because it took us a couple years to
finally ship it and so we wrote about like why and like all the different events that
we attended like there was a meetup with the gnome design team in London that Cassidy went
out to and started talking about all this stuff and then it was like these are all the
different branches that we've worked on and like all the different concerns about why
we wanted to do the redesign and like this is why it took us two years you know and and
this is why this is what we came up with so just kind of giving people a peek into that
process yeah is helpful both for users to understand well why does it take so long but
also to understand that they should keep sort of being excited about it because there is
stuff happening and I think the thing that at least many people appreciate about that
approach is that it seems to me like you have a really strong you know you and the team
have a really strong philosophy behind what you're doing and you kind of stick to that
and make it take as long as it takes to make it right yeah definitely and you know sometimes
there there is stuff where we're looking at it and we're going okay like the first idea
we had for this is too ambitious and we're gonna have to pivot to something smaller so
that we can deliver something sooner and and so that's you know sometimes we do that what's
an example maybe of that I would say that like App Center itself is a good example of
that because you know from the very inception of the project we had this idea of like and
this is not a novel idea at all but of you know we want developers to be able to publish
their apps to elementary OS faster than they currently can because right now we're I mean
right now but back then we're waiting you know six months or if we're based on an LTS
we're waiting up to two years you know before users can get a new version of an app and
that's really not good but the first version of App Center that we shipped it was just
the front end it was just the package manager so it didn't have any of that publishing stuff
in it and it took us a while and a crowdfunder and a sprint and and all kinds of stuff before
we were actually able to ship the publishing back end and so and and I think we're still
kind of working towards that goal because it wasn't really until recently where we said
okay we're going all in on Flatpak and so even though we have like a publishing back
end that functions to really deliver on what we think App Center should be like we had
to wait for some new technologies to emerge and mature and and so you know it's always
evolving and and sometimes things take a long time I think it just exposes just how difficult
some of these problems were tackling are and maybe difficult is the wrong word but it let
you know you mentioned waiting for a technology to come out to make it feel right and to match
up with where you were trying to head it seems a wild maybe that's the only way to put it
that you know we can have these visions and yet it take lots and lots and lots and lots
of effort to get there and years sometimes to see those come to fruition and and yet
still be completely worth it I imagine you guys still think it's completely worth it
oh yeah totally and you know it's funny I don't mean to talk about App Center so much
but it's just something that like it was so it's topical I guess yeah it's so involved
in and so complicated but when we were kind of going through working on like the App Store
component of it something that people kept bringing up was like well Ubuntu tried this
and it didn't work out and like why do you think you could do it you know and Ubuntu
couldn't do it and that's something that was totally different though was like the technology
landscape was different and when Canonical tried it I don't think products like stripe
really existed or certainly not at the scale that they do today so it was like just having
like some other company that made a product that allows you to build the thing that you
want to build is a completely different game hmm yeah sometimes being too early to the
game is a detriment I suppose that's where the luck comes in right coming in at just
the right time when the technologies are maybe aligning like stars and making it more possible
than it was previously even for for some people that do good work like Canonical sometimes
it's just not quite the right time yeah and and then especially in this landscape too
where something that I think all of us as far as like people who build desktops are
kind of working towards is like Wayland and just the general theme of like sandboxing
and containerization and it's something that's been you know worked towards for years and
we get a little bit closer each year and it's it's still far off seeming but it's it's something
that if we didn't start and we didn't have the ideas of where this should go and didn't
start making that steady progress that you know it's not something that can be shipped
right away it's something that where you have to be looking far ahead so how then do you
and the team stay motivated long term knowing some of these projects you know just just
take a long time I think you gotta bounce around honestly like there are some things
where it's like you know okay I'm working on this stuff where it's it's kind of a long
game and it's it's not necessarily as exciting and so I gotta have my projects that are like
little wins and so you know I work on those things and then I go okay now I want to work
on like a small visual design refresh or maybe some different icons or you know some little
things that are kind of exciting and fun or little bite size issues little tweaks here
and there things that I can ship now so that way it's kind of like switching back and forth
so I'm not I'm not always just like okay I'm working on this thing and it'll be great five
years from now right because you need some immediate wins to keep I guess that energy
up and that I don't know to celebrate more often perhaps yeah and I think to keep people
engaged too because you know it was something that we ran into I think within the last year
where we'd see people on reddit go oh elementary there that's definitely dead there's there's
nothing happening over there yeah and and we were like what you know we're working every
single day on stuff and then you see like oh okay well it's because we're not shipping
that often and so we kind of changed the way our release cycle works and so now we're pushing
out little updates to things all throughout the life cycle the operating system instead
of just like delivering a product and then waiting two years and delivering another product
sounds like a really delicate balance because we were mentioning earlier you know wanting
to only send something out there when it's ready and yet I could see why that those little
sort of external blips of you know sending stuff out there is helpful how do you kind
of match those two that sounds like a challenge yeah I think the kind of way that we've dealt
with it is we have things that are like okay we know this is a long-term goal and we know
that this is something that we're going to kind of work on with the intention that it's
not being shipped this cycle and then we have other things that are like oh you know there's
no reason we can't ship this this cycle so it's just kind of like separating the two
out and knowing which one a product is it really helps there so same idea like the small
wins versus the big wins right yeah but I think a really important part of it is like
we were talking about before is kind of tightening the feedback loop from when someone reports
an issue or has a feature request and if it's something that doesn't require a whole new
technology stack to develop being able to go oh yeah you know we can push that update
out within like a month or whatever is really big and if it's like an issue report and you're
able to fix it within like a day or two like people love that and it feels so good to be
able to like go man that's so cool that I was able to fix your thing and now you're
using it and then you know people are excited about it and like that that just feels really
good to be able to do things really quickly I'm smiling over here and I it wasn't even
done to me so I can see why it feels good can you tell me a little bit more about the
team that you're working with regularly I mean I mean I know you have Cassidy who's
sort of close to you but there's a lot of people in the community that are putting some
time into elementary as well what has that been like yeah so you know I'm not sure how
much everybody knows but we have a couple people on payroll and we are payrolls kind
of gone back and forth we've had some people that were on part-time then moved to doing
like contracts and you know contracts come and go and then we've done bug bounties also
so it can be kind of hard sometimes to separate as far as like who's being paid for what work
and things like that but I'd say that at any given time there's probably 20 30 active developers
in the community doing something we've got some people that are really long time contributors
like Jeremy Wooten is our maintainer for files and I think he's like one of the only people
that is like a dedicated maintainer for an app right now so it's actually really cool
to have like we know that no matter what like Jeremy's gonna keep files going and and so
it can it can be really nice to be able to count on that but then we have like Quarantine
Noel is one of our longtime desktop developers and he is like all over the place and in a
good way like you know you never you never necessarily know what he's working on because
he is always looking at like the next thing and knows like what the new technologies are
and stuff so that's really cool because he brings that insight back in and he's really
good at working with upstreams and he's actually done a lot of work where it's like okay well
in order to have this feature in our app we need to build it in the upstream library so
I'm gonna go up there for a couple months and work on it up there and then come back
so it's really cool to have people like that in the community that sounds great I would
imagine having different types of personalities and different types of expertise and different
types of ways that people work if you can manage that can all come around to be really
beneficial yeah definitely I think that you know diversity is strength absolutely and
trying to make everybody work the same way just wouldn't it wouldn't help so I think
it's nice that people are different and they have different ideas and different concerns
and I think it really shows in the product when you have people that care about lots
of different things I would imagine too that that can sometimes be challenging to you know
I'm just trying to think like you know you let someone go work upstream for a few months
and that's just what they want to do and you just have to have faith that they're sort
of doing the right thing does that present challenges sometimes I would imagine it does
you know I'd say not as often as you'd think I feel like that our community is really good
about building consensus and I don't know how many times that we've really had like
major conflicts or anything like that in recent history so it seems to be going pretty well
and I think that you know everybody communicates really well which is always super important
and just making sure that everything's everybody's on the same page about where we want to be
is I think the most helpful thing and having kind of general themes or like I'm sure Cassidy
would advocate for you know like personas where you have like okay you know let's make
sure that we're keeping in mind how people who interact primarily with the keyboard think
of this thing and then let's also make sure we're keeping in mind like how this thing
will work when all the applications are in sandbox containers and you know having having
kind of these little themes that guide where we go I think helps keep everything cohesive
that's a really nice way to think about it and hadn't occurred to me before because we
sort of I don't know lean on seeing software in the way that we use it but I've learned
that repeatedly by simply you know throwing my laptop in front of someone else and just
watching how they do things is always completely different than how I do it so I love that
idea of these profiles and I imagine that could be applied in more than just software
as well yeah I think so I imagine that people use that in in lots of everyday scenarios
and I think personas is a pretty widely used UX pattern no matter what industry you're
in mm-hmm can I ask how I don't know it just seems to me from what I know of the ways that
you and the team work and just getting a chance to talk to you guys personally sometimes and
hearing you on a variety of podcasts that you just it seems like you bring a lot of
heart to what you're doing and a lot of sort of I don't know humanity maybe to it and so
it's not it doesn't seem like it's just about the software it seems like it's more about
the collaborations and and making people feel good about every step of the way I'm just
curious how it seems like a deep part of your person but how do you how have you cultivated
that with others and and I'm sure that gives back to you in many ways yeah I guess I would
say that is a big part of kind of the I feel like brand identity such a cold way to describe
something where like the goal is you want people to have a good time you know and if
if people aren't having a good time then like why are we even doing this and I think that
that's something that you know we we want to be part of like when people interact with
our brand accounts that it's this definitely an idea of like okay people are having a good
time or they're having a bad time and like how can we make sure that people are having
a good time and kind of looking at things that way I think in the way that people feel
about what they're doing helps to make those kind of decisions and leads to another another
little Cassidy thing is he would probably say delightful moments and making sure that
things are fun or the things feel good and when you're interacting with them and whether
that's through the software or through interacting with another person in the community or through
a brand account or an email or whatever just kind of having that idea of people feeling
good is is I think important yeah I think you nailed it when you said you know bringing
heart to it it's it feels like often in our you know software is an easy place to to be
really cerebral but it feels like that the counterbalance of bringing some some heart
and some empathy to every single interaction within it I can't can't do anything but be
helpful yeah yeah definitely and you know it's it's funny like as much as we like to
think that as humans were there were so in like our frontal cortex or whatever you know
like our we're so logical but when it really comes down to it like so much of how we interact
with the world is how we feel about it and how we feel can often override like the more
logical parts of our brain I would argue that design you know that's the very focus of design
is to make people feel good about the things they're interacting with I imagine you agree
yeah I would say that that's a big part of it and you can kind of see how if if your
design doesn't make people feel good how they'll kind of figure out a way to do what feels
more comfortable or feels better or easier for them and I think there's like that classic
example of the photo where there's a walkway and there's some grass next to it and there's
a path that people have walked through the grass and just kind of like you know this
is your your design versus this is this is what feels natural for the user and where
they wanted to go yeah I think they call those desire paths right and I love that term because
it sort of shows well this is what people want to do naturally and so if your design
is doing something different than that then you're missing the mark yeah and I think that
you know Cassidy's been diving into that a lot recently with some user surveys and doing
a little bit of research and you know we're looking at especially at how people especially
people who are used to the Linux desktop really want to customize things and want to make
things feel their own and as software developers that could be really difficult because that
introduces some complexity and some kind of randomness or uncertainty into the software
and so we're kind of looking at ways of okay how can we make things feel more belonging
to the person who's using the software but in a way that is a little more known ahead
of time so that we can kind of build and design around it and so we're looking at things like
different colors and making sure that we're really designing around different font sizes
and that people really want to do like a dark theme now so we're looking into like okay
well how how do we do a dark theme in a way that doesn't really mess with application
developers who are wanting to do their own unique visual design identities in their apps
and so just kind of thinking through this thing of like what we really don't want is
to end up in a situation where we've done nothing to accommodate people who want it
to feel their own and so it's the most broken it can possibly be.
Yeah it sounds like a really challenging balance that I would imagine is not you know it's
not a certain thing to know where you should land in that balance and I would imagine taking
the approach that you are with being careful and yet listening as well is the right one
you know to tread lightly but also do things with intention.
Yeah you know something that took us I think quite a few years to articulate was when to
decide between whether something should be like a user setting or preference or not and
the most recent iteration that we've landed on is that if it's something that is a design
or engineering decision that we shouldn't leave that up to the people using the software
but if it's something that helps make the software more accessible to more people or
more palatable to more people then that's something that we want to enable people to
make things the way that they need them to be in order to use the software.
Those are nice lenses to look through actually.
If you wanted to send a question out there to the community something you might like
them to think about or something you want them to go see or maybe something to interact
with what would you like to send out there?
You know something that that's been a really big topic for us for a really long time is
kind of challenging people to financially support open source software and you know
it doesn't have to be elementary or elementary OS either like that's not even the thing it's
you know if you really benefit from some piece of open source software then try to find a
way to support its development to make sure that its existence is continued and so if
you haven't thought about that before and there's something that you really love you
should you know look into that and make sure that that thing continues to exist and continues
to get developed.
What does it mean when someone when someone does that like what are the effects that happen
on on your end?
What does it enable maybe as a way to look at it?
For us you know when people pay for downloads of elementary OS like that becomes my paycheck
you know that's how I eat and pay rent and all that stuff so before as we were kind of
ramping the company up this was something that I could only work on after I got home
from my day job and if I didn't have any other obligations with family or friends or anything
like that and you know I'm fortunate enough that I don't have any like really serious
obligations as far as like family members who are ill or people that I have to support
or anything like that but there are a lot of people out there who do have those obligations
and they would love to work on open source software but they can't do it unless it's
a job for them and so making sure that either like organizations who are empowered to do
some hiring or people who are struggling on the weekends to try to turn something from
a hobby into a job if we can support those people and empower them to lose the day job
and make their career working on open source software then I think everyone benefits there.
Does it feel like that would make encouraging people to work on open source software not
feel so much like a compromise or maybe like you know a side gig like was true for you
previously?
Yeah and you know it's definitely so many things change when it goes from just a hobby
to a career path and you know one of those things is like if I wanted to go to a conference
I had to take that week off of work and so that means like do I have enough money to
pay my bills if I do that you know?
Can I actually do that financially and not only that but okay now if I can do that will
the event sponsor me because maybe I don't have enough money to pay for my own travel
to go there and so going from that position as a hobby where it's like maybe I just can't
even participate to now I'm in a position where it's like this is my job to participate
and so you know getting together the funds as part of the company budget and I don't
have to worry about taking the time off work and having that ability means that I can go
interact with some people that are developing very important technologies and spend that
time to bring maybe a different perspective or to take back home a lot of knowledge and
it really changes what gets delivered in a really big way.
Sounds like a real catalyst to improving well a your you know a developer's well-being to
not have to worry all the time about you know where they're going to spend their time and
the compromises and and you know if they can have food on the table but also in accelerating
ideas and integrations and some collaborations and stuff so yeah what a catalyst to doing
some amazing things and if it's spread out throughout the users widely then it's it's
actually not a big hit for any one of them but yet makes a massive difference on your
end I would imagine.
Yeah you know the the very first time that I went to Ubuntu Developer Summit I was in
a position where I wasn't going to be able to go because that means that I would miss
a paycheck that means that I wouldn't be able to pay rent and somebody else offered to sponsor
me to be there and he was like how much do you need to to be able to make it and so someone
else's generosity absolutely changed my life because I think that if I wasn't at that conference
then I don't know if I would have ended up actually doing that contract work for canonical
and having the opportunity to get more involved with Ubuntu and I think that I wouldn't be
in the same place at all so definitely if you can if you can help somebody else and
it doesn't have to be in such a big way you know that that's obviously a huge help but
like you said if it's spread out between a lot of people and a lot of people do a little
bit then you can absolutely change people's lives.
The way I sometimes try to look at it and maybe I'm in a certain position but you know
I as a photographer I'm a freelancer and I use 100% open source software for the work
that I do so that enables me to make my own living off of how I'm using these tools and
so I try to sort of mentally just set aside a little tiny piece of what I'm taking home
to try to give back because without those tools I couldn't do the things I'm doing and
especially not in the ways that I would like to do them so it feels to me like it supports
you know the people on the ground who are doing it but it also supports the ideas that
we believe in and the collaborations that we think should happen more in the world so
it feels like a really important thing so if anybody can do it that would be great and
I'll commit actually to giving a little bit this week too before this releases so hopefully
someone else can too.
Yeah yeah and you know for anybody that thinks that you know oh I'm just one person it's
not that big of a difference I think the last time I checked the stats we're at a little
bit over 1% of the people who download elementary OS choose to pay anything for it so that 1%
of people enables us to deliver it to the other 99% so your small one time contribution
is actually huge and it allows a whole lot of people to access open source software that
they never would have been able to before.
The thing that's interesting to me is imagine what could happen with 2% or 5% right what
would that change?
Yeah yeah definitely be able to expand our our staff quite a bit yeah and then just some
some great catalyst to some great things so let's let's try to make that happen collectively
for all projects really Dan if if you wanted to send people where could they go to get
in touch with you and get connected?
You know I think I let my website expire so that's no longer a good way to go but I'm
I'm pretty active on Twitter so I think the best way is is to follow me on Twitter I'm
at daniel4a on Twitter.
Okay great and we'll see what happens your website maybe I'll nudge you here and there
to try to get it back yeah it just proves to me that that you're human which is well
Dan thanks so much for sitting down with me and having a chat I really appreciate it yeah
absolutely thanks for having me on the show.
