Hello, everyone. It's Brunch with Brent. Again, I'm so pleased to be joined by Jason Spizak.
How are you?
I am fantastic. That was the world's shortest intro. I was expecting you to go on and be
like, I'm the man of myth, the legend. And you may have heard him on some TV shows and
video games. And I was just kind of glad you didn't do any of that, because it's always
weird and embarrassing to hear what you've done before, like, you talk. And it's kind
of weird.
I find it way more fun to have you do that, actually.
Yeah, I've done nothing. Go to IMDb.com. There it is. I just, whatever tickles your fancy.
We should give those listeners who might not know you a little bit of a background. Of
course, we will dive into some of that during our conversation, so I won't give too much.
What do you mean they don't know me? How could they not know me? I'm so offended. I'm leaving
this conversation right now.
So if anyone has picked up yet, Jason may be a professional voice actor, would you say?
You know, what's so funny is I have a t-shirt that says that I may be a professional voice
actor someday. Yeah, I mean, I started out doing Linux, I mean, even before, almost at
the same time I started out doing voiceover, but I've been doing voiceover professionally
for 22 years, and my first experience with Linux was in 1997. So I think they are exactly
about the same time, pretty much.
That's amazing that you kind of fell into two great things all at once and that they're
still with you. Like, 20 years is not a short period of time, right?
Yeah, because I couldn't get any jobs in voiceover when I started. Yeah, that's why. And then
I was like, I need something to do to make me busy. Oh, Linux, hey, that's really hard.
And so give us a little bit of background of that Linux scuff, because you've been involved
in a few projects. And what were those like? What were they?
Yeah, I think you mean to say a few failures. I very first got involved with Joseph Cheek.
He was the guy who founded Redmond Linux. And this was about the time that Windows XP
had come out. And Linux had a GUI. It had X Windows and KDE 1.2 or something around
that time. And Caldera Linux was still around. And Joseph had worked for Microsoft for a
little while as a tester and then had worked for Caldera for a while and then decided he
wanted to do his own Linux distribution. And I saw it on the internets and was like, that's
cool. It's going to look like Windows and try to get Windows users away from Windows.
And it's going to mimic XP. It's going to have like a My Computer and that whole thing
so that they will be sweet talked away and be using Linux.
Wow, was I young and naive. Boy, just saying that out loud.
You know what, Daddy? We're going to build our own operating system and it's going to
be better than Windows and they're going to just use ours instead. I don't care if there's
no software. It's just better.
So Joseph and I, you know, I was co-founder, I guess, of Redmond Linux. He was the coder
and I did a bunch of the icons, graphic design and a bunch of user interface suggestions
for him and some sales advice. The name of Redmond Linux we changed to Lycoris Linux,
which was probably my singular most singularly largest marketing failure of my entire life.
Lycoris is a flower. L-Y-C-O-R-I-S. And what an odd name for a product. It was about that
time Windows was coming out. Windows was basically a Linux distribution that was one letter different
than Windows just because the guy who started it wanted to get sued.
And did.
Yeah, and did. And it was on the Walmart $199 PC. And so we changed our name to Lycoris
just so we could be a little, not get sued, like maybe that was part of it I think at
the time and changed our branding a little bit so we thought it would be much cooler.
Because you felt like Redmond was a bit like...
On the nose?
A bit challenging, like it was looking for some problems basically.
Yeah, or difficult to spell because apparently Lycoris is so easy to spell. I really don't
know what we were thinking. I have no clue. It had less letters. I got no clue. And we
wanted to get on the Walmart $199 PC too as well. I actually went to see a guy named Rich
who was in charge of the OEM that was making the Walmart $199 PC at the time. He's in California.
And I went there and basically tried to get him to put us on the machine too because Windows
was selling at Walmart, Walmart.com, and we were not. And we're like, come on, we can
do this, we can get on here too. They gave us $1 per license to put Lycoris on those
PCs.
Wow.
And we got, I thought it was, it's an okay deal. It's an okay deal. We got this. We're
going to be on Walmart.com. We're going to be fine. And it's like, I was such an idiot.
It's slightly more than zero.
Yeah, it's only slightly more than zero. And we were hand printing the license cards because
Joseph had the idea that licensing Linux was the way to make revenue. And while I didn't
necessarily wholeheartedly agree, I was like, I don't really have another idea. So, we did.
And we hand printed cards on cardstock, license cards, and then printed out labels as license
keys because he came from Microsoft where it was all about license keys and everything.
And I didn't really love that part of it, but I thought, well, what else am I going
to charge Rich for? I mean, what do I tell him? If there's no license key in the box,
how do I charge for this operating system? We couldn't really come up with another way.
And that was the way that Rich and everybody else who was an OEM for Microsoft knew and
understood how things go. License keys. I mean, they got it, right?
Well, I have a question about that, though, because that was based on Linux. Does that
conflict with the open source license then?
No, because we had the source code available for download all the time, anytime.
I see. So, you can license the actual product but still have the, ah, interesting.
And the license was the license key for your install of Lycoris Linux with the icons and
the rest. I mean, kind of like RHEL does it now, right? Where they charge you for their
icons and their brand and access to certain repositories and things like that. So, yeah,
that was back in, I think, 2001 was the time we made that deal. And we were like, yeah,
they could download it for free. I think we also let people download the OS for free to
test it and everything, just the way it was. What we didn't want was people just reproducing
the CD on LinuxCD.com. And we did worry about that, but only from a branding perspective
that if you don't protect your trademark, you lose it. And then what do you have, right?
So, again, this is a bit of an antiquated way of thinking. I'm not saying I think this
way now, of course, but I'm trying to get into the mindset of the decisions we were
making at the time. And it was the wrong way to do it. And it didn't succeed, really. I
mean, we sold, I don't know, like a couple hundred licenses. You made a couple hundred
bucks. Woo! And how many hours does this take you to build these, you know, RPMs and everything?
And eventually, you know, that operating system went by the wayside. There's just no way to
maintain it and build a company off of that kind of business model. It didn't work. Then
I monkeyed around with a tablet PC OS for a little while and then got involved on the
side with Symphony OS because I had done this thing called the Mezzo Desktop, M-E-Z-Z-O.
And it was the idea that the four corners of the desktop were hot corners and you could
go into them and you'd get your files in one corner, your apps in another corner. And this
is long before Noam Schell had that thing where you could go up to the corner to get
your activities and this is years before that.
Yeah, I mean, you see that today in KDE, like I use that every once in a while. And on Mac
OS, actually, I used to use it all the time, right?
Well, you're welcome.
Thank you. But that's the interesting thing about Linux that I've noticed in the last,
you know, X number of decades is that often some of these ideas come to Linux first and
then they kind of get ripped off from there, right?
It wasn't a new idea. When I went through the treatise of the Mezzo Desktop and the
principles of desktop usability, I was riffing off of other people's white papers or academia
about what the usefulness areas of the desktop are. But I was putting them into practice
with a user interface that was eventually rolled into Symphony OS because it was like
a web-based OS prior to Chrome OS. You know, it was this web-based OS, Symphony OS was.
You're just arriving way too early, that's all.
Yes, I appreciate your verbiage. So, we were building that out of, I can't remember what
toolkit that Symphony OS was built out of, but on my own machine, I had built a precursor
to Chrome OS which launched all of the web apps that Google had at the time, Google Calendar
and everything, using FVWM2. So, it kind of works like Chrome OS did before they went
with the central dock icon bar when it looked a little bit more like Windows when the Chrome
OS icons were at the bottom. I was doing that years before Chrome OS came out. I have screenshots
of it and everything where I had an OS because I was like, everything should be web-based.
In 2001 or 2002, I built a web app out of Zope, which was a Python-based database to
run a technical recruiting firm like Dice.com. I built it, which became Plone, but it's Zope
at the time. It was basically an entire web application and it ran off of a Red Hat 5.2,
not RHEL 5.2, but Red Hat 5.2 server and it was using terminal servers to all get to that
box and then it was just using a web browser. At the time, that was just like unheard of.
I think Sun was doing their Java thin client at the time in real apps, not web apps. So,
I was just really early on the, hey, web apps are going to be huge curve. That's the kind
of work I did on that and ended up getting rolled into Symphony OS and that was also
a huge failure. Then I got really busy in VoiceOver and just use Linux on my own machines
forever and have used KDE since 1.2 with the Kotlin icons.
Tell me the Cole's Notes version of how you ever got to Linux in the first place. Obviously,
you have this deep appreciation for it and desire to forward it, but where did that ever
come from?
I always loved to build things. I was hugely into Legos when I was a kid and I always loved
to just create things, very much a builder. When I came in contact with Linux for the
first time, it was a Red Hat CD in either the back of a book or a magazine. I can't
remember. It wasn't Linux format because it wasn't around then, but like that. It might
have been Linux Journal. It's possible. I was like, what is this? It looks like Windows.
I think it was on the magazine at the time. I can't remember. It might have been before
that. I swear it would have been a book. Anyway, I'm like, this is interesting. What's this
about? I had a PC at the time that I had built myself to play MechWarrior. That's the only
reason you build PCs. Let's be perfectly honest.
You need some motivation, right?
I had it put up to my Sound Blaster and my giant 32-inch tube television. I would play
it in my living room and it would shake the neighbors. Oh, yeah. I popped the CD in. Yes,
it was a CD at the time. I had to have a boot floppy, but it was a CD at the time. I was
just so enamored with the fact that there could be something else as an operating system
that wasn't Windows.
I love that feeling.
It opened up a passageway in my brain that went, oh, you haven't been walking on the
sidewalk. You've been walking on the platform above the sidewalk. You are an idiot. It really
opened my eyes as opposed to just building the hardware with my hands, which is one layer
of building, that the idea that the operating system and software was its own universe inside
this machine doing its thing and there became the idea that this universe could be free
and open.
And shortly after that, I was really interested in what Linux was, that it came out of Minix
and that it was Linus Torvalds' side project that he decided to build. And I'm reading
this and I'm like, and then what happened? He gave the code out on the internets and
people all worked together. What?
Which is so completely the opposite of the paradigm at the time.
Completely opposite. And it blew me away because it was the beginning of what I now call digital
independence. It was the beginning of the idea for me, obviously open source start software
with GNU foundation, everything that didn't start with Linux per se. But it was my first
experience with the idea that you have all the source code. You're not beholden to a
corporate entity to run your computer, to license the software. And if you make a change
and you improve the software, if you have an idea, it can be contributed back to the
greater whole for everybody. So to me, it was a micro example of human knowledge. Patents
are not, they're not what happens to human knowledge for millennia, thousands of centuries.
When a human gets an idea, he shares it with another human and then she shares it with
somebody else. And then she gives it to her kids and then he shares it to his kids. And
then you basically have the volume of human knowledge accelerated our ability to enforce
our will upon nature at such a pace because of the interconnections and sharing. That's
why we are the dominant species on the planet, not just luck, but our ability to communicate
and share ideas and then share knowledge because of that allows us to solve problems that there's
just no way you could solve them if your knowledge died with the last person that knew a certain
thing. You know, fast forward centuries into the future and here we are. So that's why
Linux has such a snowball rolling downhill effect when it comes to software for computer
and then the ecosystem around it is because it's basically a representation of what happens
with human knowledge without any restrictions. If you don't have patents and if you don't
have arbitrary lines between, you know, boundaries between countries or whatever, you know, we
share ideas with each other and just to make the sum total of that knowledge better for
everyone. Well, that's why it works. That's why it works. And that bit me in the leg.
I'm like, okay, this is awesome. So it's the embodiment of what human knowledge and sharing
is normally in software, which part of this point hadn't been. And it was digital freedom
or what I call digital independence. And that's huge because I could see the future developing
around me that the internet would soon be everything. Fax machines were just on their
way out. And I was like, okay, if everything happens inside the computer and wires that
connect us, he who controls the wires and the computer controls everything will control
the knowledge of the world. So we can't let that be a company, especially not Microsoft.
They were awful, awful from a business practice perspective, not just a convicted monopolist,
but good night. It was just so rude, just so rude. And that's what kept me coming back
after failure, after failure, after failure was it's incumbent upon me as a member of
the human society to get this into the hands of as many humans as possible because armed
with this, we can be bolstered against a future of oligarchy and digital oppression. It's
the only weapon we're going to have. And I just knew early on that if I could contribute
to that in some way, my children and their children would have the silent weaponry with
which to arm themselves to win that battle against digital oppression. And everything
else is tangential to that.
Did you feel at the time when you were first coming to these ideas that there were people
around you that felt the same? Or did you feel kind of alone in those ideas?
Yeah, I felt alone. I didn't go to lugs a lot. The reason was because I always just
was on the internet and connected with somebody else, like Joseph or whoever I was working
with on a project. At the time, there was always someone like minded out there on the
internet. I mean, you know, everybody's connected to it. So that's what it's for. Right. That's
his job. So it was not hard for me to find like minded people and, and then work with
them like within minutes of meeting them. I'm like, here's what we need to do. We need
to have a web based OS. So like, okay, slow down, Jay.
But it sounds like some of those ideas were sort of visionary. And so it sounds like,
I don't know if I'd go that far. Maybe that's over generous, but we'll use it. I mean, that
icons on the Linux desktop need to be pretty. Yeah, maybe I was like one of the earlier
guys to figure that out.
But also a necessary thing to adopt, you know, for the greater population, you know, is just
making things simpler. And yeah, but to me, that seems so obvious that perhaps, you know,
I wouldn't call it visionary, I would just say, these are the pieces in front of us.
And maybe I'm not good at creating pieces, but connecting the pieces. I'm pretty good
at that, seeing those type of pathways. I just think the human brain is really good
at doing that anyway, but I could just kind of see where things were going. And, you know,
but I think a lot of people see where they're going, and they don't do anything about it.
It's not that this is a major leap in any way. It's just the follow on of a conclusion.
There's a lot of science fiction writers who knew it way before I knew it. I mean, they
probably knew it before I even saw the things in front of me, you know, but the idea that
you would then be spurred to action, which is one of the things that makes the open source
community so great, is like Home Assistant, for example, or even WireGuard. These are
modern examples of, and Linux has this nomenclature of scratching an itch, right, that the developer
is like, I don't want to use Alexa. I don't want to have Google in my house, Amazon, Google,
whoever, and I just, you know, going to build this thing so that my gadgets can talk to
each other and I can live a modern, you know, would you like me to do that for you, Mr.
Stock? Like, everybody wants that. So, let's, I want that. Let's do that. But how quickly
it can become useful is because everybody else shares, and it's like actionable. Code
is actionable.
Well, one thing about, you know, you mentioned Home Assistant. Well, you mentioned two things.
You mentioned Home Assistant and WireGuard. So, I just dove into my first WireGuard project
this week, actually, and it has gone so amazingly well that I was like, oh, everybody needs
this. You know, like, even the commercial platforms are like far worse. It's like, what
a gift, right?
It's crazy. I did not, until I heard it on your show, I had never heard about it until
I heard it on Linux Unplugged. And it changed my life. I was helping my dad, putting up
some Home Assistant stuff in his place. And I went, like, you know, he's like, how am
I going to know if the door is open when I'm not home, you know, or something. And I said,
well, I could give you access to this interface and it can pop up notifications on your phone
and all this cool stuff. But that means that I have to open your house up to the internet.
You know, like, and there was this thing, well, then that means we need a VPN or that
means whatever, we need to get an SSL certificate. And even then, you know, it's going to be
attacked from the outside world because that port is open. And then I just stopped for
a second and I went, Linux Unplugged told me about this thing called WireGuard. Excuse
me for one second. And like 30 minutes less than that later, I'm on my cell phone on LTE,
connecting that app to the Home Assistant server that you can't get to any other way,
unless I have it on my phone.
Isn't that incredible?
Are you kidding me? Are you kidding? Are you joking, people?
It's so unbelievable.
Oh, your gosh.
See, and that's what I find important is like, you're still giddy like that first moment
you discovered Linux, right? It's like, it just continues. It's such a beautiful thing.
Every time. It's like a present that's on a day that's not my birthday. Every time.
And then in the back of my head when I say that, having been a developer of like a project
that's trying to make money or in order to stay afloat, not make money to line your pockets,
but to make money so that a project can continue, how difficult that is in a world where the
most ideals are so prevalent with patents and neoliberalism, capitalism not having anything
to do with the political liberalism, but having to do with the guys that are around in the
70s who were like, free market economies are everything, neoliberal economics, that we
struggle to find a reason to pay for something that's free or struggle as people who provide
open source code to say, this is how much this is worth and there's a social contract
here that you use this and your dad can access his house now, but did you PayPal the WireGuard
guy? Did you sign up to his Patreon? Did you what? And that's why I really appreciate what
Daniel and friends are doing at elementary, trying to put a store in the OS that says,
would you like to pay for this? Because it's an option and make it super, super easy not
to guilt people into doing it, which is the wrong methodology, but to say it's worth something
to me and for you to have the ability to say that it's worth something to me. And the internet
tip jar software, there's a bunch of them out there, but nobody's quite gotten it to
the point where it's pennies, it's 25 cents, it's whatever from a billion people and I
can do my job. Credit card companies still stand in the way of that a lot because of
the fees for transactions.
Of course.
But once we get there, that gateway is one of the things that open source needs because
I don't think anybody wants to go to work. I don't think any software developer really,
unless they really love their job, wants to deal with a boss that is like, yeah, your
open source project is cool, but this, I need you to do this now because of my company that
you may not agree with its mission completely because you're not saving the world, but it
pays your bills. And I think it would be lovely to have these super talented people not have
to have this be their side hustle because I think that, and maybe that's not true. It's
possible that some people love their side hustle so much because they hate their job.
I'm an actor and so I understand human nature really, really pretty darn well and it's possible
that if you turn this, once you turn open source projects into someone's job, it loses
the magic for them the same way as if your hobby became your small business. That doesn't
work for everybody. And it could be a gift to the open source community that these things
are people's side hustles. Not going to overlook that, but it would be nice to make sure that
people who put their time and effort into something are compensated because when you
work really hard and you deal with open source communities, they can be a little unruly and
a little demanding. Just ask Mancero, you know, what do you mean we're going to put
in a different office suite? I'm going to kill you. And you're like, but you're my community.
Well they care. That's why they're being so difficult to handle and work with. It would
be nice to know that remuneration is available. It would be very nice. And that's why I feel
like the elementary project is pushing the envelope in the right direction in that they're
not forcing anyone. They're just providing an option that's very easy. Just make the
title bars like windows. I think you'll be okay. So to bring it back a little bit, because
I did, I took you on a little bit of a sidebar there. Tell me a little bit then about how
you brought all of that into the Simple PC because that's a bit of a different project
from the others.
I didn't. Just kidding. It's gone.
Totally different.
Yeah. There was a person who lived across the street where their office was across the
street from a place that I had an office and she, her name is Barbara. She's an amazing
person and she had taken over a PC recycling company that would take people's old PCs and
recycle them. Either part them out or sell the parts on eBay. There's a couple of vendor
type online sites that also sell to Windows integrators where they need a piece for a
PC and they need to replace that because they can't just buy a new PC because the software
on it won't run on the most recent OS and so they like to make sure they keep older
PCs running with parts. So there's a market for that. And she had taken it over from her
son who got off way more than he could chew. And I just went in there one day and I was
looking around and I'm like, you have shelves upon shelves of old computer parts. First
of all, as a guy who used to build computers, this is so cool.
But as a guy who has a bit of a business mind, albeit obviously a failed one, I thought,
this could be a business model. Why don't we just create a case that's universal because
a lot of these things are not MATXs. They're specialty type motherboards. Why don't we
make something where we've got blocks where the screws might go because they might be
in slightly different places depending upon the motherboard pattern. And we make it so
that it could fit any one of these size motherboards from any one of these things. And I just went
around with a measuring tape and I got what the largest size would need to be to accommodate
anything from that down lower and then designed the space for the power supply and then made
it out of recycled plastic because I really wanted to do the right thing for the environment
because keeping PC parts out of landfills or anywhere is the only way that we're going
to be able to live on a healthy planet because we keep generating e-waste nonstop. And the
more lives you can give a CPU, the more lives you can give a motherboard, nine lives, you're
doing the right thing for your children's children and those you love.
So I took this design and I made it out of recycled plastic. I actually had a prototype
built out of cardboard. Very cool pictures. I could finally maybe I'll send one to you.
And I did some of the thermal dynamics in the case to make sure that it could pull enough
air through the front to shoot it out the back and then this thing wouldn't boil. Because
plastic is notoriously heat cloistering, meaning it doesn't really like to let the heat out.
It's slow. If you build the whole thing out of aluminum, it will radiate the heat out.
But this is an all plastic case with no metal to transmit the heat anywhere.
So I was like, okay, I'll take this, see if I can get this idea going and then we need
the business piece. So what if you could keep this PC for a year and have a year warranty.
So if it breaks down anytime during the year, you send us back the whole computer and we
send you out a whole new one. We're not responsible for your data. The disclaimer on the warranty
is back your stuff up because you're sending us the whole thing and we're just giving doing
full on replacement. And then we can always take it apart, take the parts that work and
put them into a new one. Well, so it's recycled parts to begin with. So there's no difference
there.
And you just continue that cycle, right? It's like recycle, recycle, recycle. Yeah.
And you just continue that cycle literally forever and ever and ever and ever. And you
only take out the parts that don't work.
Correct. Right. And if the case is fine, we just reuse the case. And after the one year
warranty is up, you can still send it back to us to get a discount of X dollars towards
your new one. So it's always good for a turn in. It's always good for an exchange. Basically,
because I'm figuring these cases, I probably won't change the look of these cases because
motherboards are fairly standard. They don't change dramatically in shape too often. And
we'll just get the parts that will fit. And that's a pretty good business model and we'll
charge 99 bucks because there's just enough money in 99 bucks for me to make money off
of these units after the assembly, after everything else. We'll still make them pay for shipping
because they could ask for one on the other side of the country and like the margins so
thin, forget it. And put regular Ubuntu on this because Ubuntu itself, there's plenty
of support out there in the world through forums and everything else that we will not
offer software support because the hardware is so cheap. You just get that from the community.
And out of that money, we will give a percentage of it divided up to all the open source projects
that went into making the simple PC. So we would give money to Ubuntu, we would give
money to Debian, we would give money, a portion of that to, there's a foundation under which
LibreOffice and a bunch of others can take disbursement. That's where they get some of
their funds. And I think LibreOffice is on its own, but there's another umbrella foundation
that multiple projects fall under. I can't remember the name of it, but it's a nonprofit.
And we're making that donation on their behalf, on the user's behalf. So I don't have to depend
on the user to start up elementary or whatever it is and then take money out of their wallet.
I'm making that when they buy. That's at least something. It's not the continual source of
revenue that people need in order to live, but it's something. And we make that donation
as a business. That's a charitable donation. In most instances, it's actually a tax write-off.
So this works for everybody. It's great.
The Raspberry Pi I saw coming out at that time.
Oh, no.
And I was like, everybody was asking, like, can your PC have wireless? And I'm like, well,
you can plug a USB wireless in the back. These are old PCs. They're like Pentiums, you know.
And I'm like, they're not nearly as energy efficient as a Raspberry Pi. The Raspberry
Pi is going to have built-in wireless coming around the corner. Okay. This doesn't make
any sense. So I did simple for a while. One of my biggest markets I was trying to push
is for like computer classrooms and places where they need the PCs to all look nice instead
of just getting crappy recycled PCs. And then they get that back-end support and that warranty
so they feel good about it. That never really took off. And maybe because Microsoft and
Dell are dumping free PCs on schools. I don't know. So I didn't have those big buyer numbers.
And I also saw the Raspberry Pi coming around the corner and thought this takes way less
wattage. It's going to be wireless. It's going to be as fast as this thing is soon. You know,
because these are old computers, although not technically, you know, because Intel Pentium
can crush things a lot quicker and everything. But it's, you know, it's the trade-offs. So
I decided to shut it off, shut Simple down. We honored anybody who sent us a warranty
machine and nobody really did actually.
That's a good thing. That's a nice one.
One person sent us a warranty machine the whole time because they used to make PCs better
and that was it. So I haven't given up loving on Linux or starting a business doing Linux.
It's just I've never really made any of them self-sustaining, which to me would be the
goal. And every time it doesn't work out, I think to myself, maybe it's the way I'm
approaching this. Maybe I'm still too stuck in the neoliberalist mindset and a capitalist
mindset. Maybe there's another human knowledge aggregate community way to do this. And anytime
I see something like the Pine64 guys who are like, this phone's not perfect, but here,
let's make it the best phone it can be. Or, hey, this laptop is not perfect. I'm not Dell.
It's inexpensive. Let's make this the best it can be. I get heartened by that because
I think it's somewhere close to that, that it may find its legs or it may never. And
the only place that Linux can really work out well is if you build your own stuff and
buy recycled stuff and that's its super sweet spot. What's wrong with that? And to be fair,
System76, which ships great stuff, they're going to start making their own laptop cases
and they're going to start moving away from ODM boxes they did with Thelio. And maybe
there is a room for an Apple-like Linux company that makes its own OS. I don't know. It just
seems like there's a lot of expense there. They're saved a lot of expense because they
don't have to build the OS. There's a lot of it they don't have to do.
Yeah, and it fits for some people, right? But there's so many of these ideas that you've
shared that hit me in a really deep place because they're ideas that I've thought of
for a really long time. I'm talking to you right now in an X220 and the only reason I'm
on an X220 is because it's a wonderful computer from eons ago if you look at some of the modern
stuff coming out.
I mean, imagine how cool it would be to take the guts of that X220 out and just put a new
screen in it that's, you know, an IPS display real nice.
Well, you know, what's interesting is Alex from self-hosted, he just helped me take an
X250 and replace the screen in it with an IPS that's 1080p and replace the keyboard
and stuff like this. So, you know, that's the beauty of some of these, the computers
with some of the old mindset of like being well built.
You mean not the throwaway mindset? Yeah.
Exactly. Right. And also being modular. I feel like that if we can, you know, if we
can continue back to that place and have these laptops just continuously perpetuate, what
a beautiful thing. And like, okay, maybe it doesn't fit for me anymore because the photos
that I produce in my photography camera can't deal with this laptop. But there is like about,
you know, 70% of the population who's doing computing and they're just browsing the web
and looking at email and stuff in this X220.
Well, that's where the Chromebook stole your thunder because the Chromebook was literally
that that's the market share. And it's sliding into enterprise a little bit now, which is
interesting to see. But after Microsoft was just like, well, we'll give up. We just like
the cloud. But it feels like the Chromebook is the perfect Linux laptop. At least it is
for me because I just, I don't know, a week ago I gave Matt, who is the Mr. Chromebox,
the gentleman who makes the firmware, the core boot firmware for Chromebooks. I sent
him a new Chromebook so that he could put the firmware on there and then get a few models
checked off the list. I run a Chromebook with a core boot, you know, from Matt's firmware.
And that's Mr. Chromebox, if you're listening and you want to run a great laptop for any
expensive. And a lot of the firm, like, but my particular laptop, there are no issues
with suspend, resume, sound, literally nothing. He works pretty tightly with the gallium project,
I think, to get gallium on there. But I just run KDE neon and I don't have any trouble.
This thing is three years old. It is humming right along. It's got a 15 inch IPS display.
I love it to death. My eyes aren't good enough for the high def displays anymore. I'm like,
what do you mean? No, I can totally see that. Is that, oh, no, that's an F, not an M. Oh,
I'm totally screwed. Oh, I just sent that email and I told somebody to F you instead
of M you. That's not very good. It's going to cost me money. And I figured, well, why
not go this route? Just take the firmware screws out. And it had an actually an M2 SST,
thankfully, which is why, probably why it's so quick and nice. And I just upgraded that
to a 128. It was a 32. But a lot of them come with 64 now. And if you have your own home
server and you're just syncing files back and forth, or you're connecting via SFTP,
you don't need a lot of storage on your machine. You just don't because you're going to run
out anyway. You should put it in the closet somewhere.
We just end up hoarding data anyways, right? So you may as well hoard it in the right place.
Yeah. Hoard it with your coats. We know that you own a lot of coats. I know because your
closets so big. Are those coats hiding data?
But why the Chromebook and not like one of the old like Lenovo laptops? Is it the size?
Is it like, what is it about supporting a big business like that? Because it feels
It's not the size. It was actually, well, a little bit of the size.
It always is, right?
It is. That's what I've been told. It's always the size. I like the simplicity of it. Inside,
there's just this little board. I don't even think there's a fan. It's fairly light for
the size. It's a 15-inch and it's just super simple. It was also really expensive. I think
it was like just over 200 bucks. It was pretty new at the time. I bought it refurbished,
but it was pretty darn new at the time because people buy Chromebooks and they don't like
them and then they send them back or whatever.
I get like tons of battery life in this thing because they're engineered for long battery
life and it doesn't have more power than I need, hence giving up the battery life. Also,
I had never done it and I was like, oh, I need to flash one of these Chromebooks with
core boot because right now I need to do the world a favor. There needs to be more core
boot out there. Lockdown firmware is not okay. It was partly an experiment for me. Once this
thing gets long in the tooth, I'm seriously considering possibly System76 something, but
I need something that's quiet, like no fan and super thin. I don't know. Sometimes maybe
my standards get in the way of the right choice, but I don't know.
That hits exactly one of the challenges that I see in the world these days is like, okay,
we have things that are worth supporting like Linux and all of those kinds of things, but
so often butts heads with the big sort of corporate giant out there, right?
Also, you can't be talked into spending more than you think something is worth. It's very
difficult to do and the only things that are cheap are the ones that are controlled by
those corporate giants.
Yeah, because of external, some of the cost is externalized.
Right. If you had a comparable priced laptop to the XPS 13 and you knew you were going
to have that support and you knew that you were going to have all that stuff, which again,
System76 gets close to this. So, like I said, they might be, you know, but prior to that,
you'd look at your Linux laptop choices and be like, what am I doing spending that on
that? You know, for what? You know, and it's funny how much that seems to be top of the
list for some people, a lot of people. I'm not saying everyone because there's plenty
of people who don't care. They just want to be, you know, have the freedom.
And that comes back to the question of why do we want Linux to be mainstream? You and
I talked about this before. What is it that makes me want to not proselytize, but share
this with someone because I know it's good. Digital independence is good. And I likened
it to like, it's a constitution. The GPL is like the way that we would run our country,
right? In theory, it's the set of rules by which we run our digital country. And we're
thinking, okay, these are the rules. And if I can just, everybody plays by these rules,
then everybody benefits. So I've got this really cool piece of software and I'm sharing
it with you, not because it's cheap, not because it's free, but because it's going to give
you a little digital independence. And if you're digitally independent and I'm digitally
independent, the more of us that we are, we all benefit. It's not just because it's free.
So it's not just money, it's not just the reason I know we share open source projects
with each other. So that's what I was alluding to when I said that you feel like compelled
to share this with people. And what's the reason for this compulsion for all these years?
And it's the ability to give someone else digital independence because you love them
and you care about them and you care about the outcome for them and the rest of your
fellow human beings. That's why you're doing it. It's not because it's free.
I'm not sure that's in the business model of some of these more capitalistic style endeavors.
Well, you have a lot of people who will say, capitalism inherently is not bad. It's the
abuse of it that's bad. Meaning the idea that we all have jobs and we can pay for our mortgages
and our house and our car and send our kid to school because that's paid for partly with
these commercial entities donating these beautiful computers to the schools. I mean, the capitalism
has its way of giving back to you too.
But one of the things that open source software does and the constitution of open source land
allows us to have is a check on greed. And that is a very unpopular thing to say that
I'm not socialist. I'm not capitalist. I'm not free market. I'm not anything. I think
capitalism is great. It gives us innovation when there are laws against greed, when there
are social contracts against greed because there have to be limits. There are limits
to the earth's resources. There are limits to how much land a single human being needs.
There are limits to how much water and how much electricity and there are limits. And
when you say, nope, our economy has no limits, you're just lying to yourself because it does
have a limit. You're going to hit it and a lot of people are going to suffer and there
will be a lot of suffering while you aren't because you're greedy. And that's not the
kind of world I want to live in or my kids either. So I feel like that's one of the things
that these open source licenses give us, a check on greed. And that's one of the reasons
why I think we all like them because as soon as you start to be an abusive, greedy turd
nogget, we can take the code and do something not greedy with it. Or there's only so much
you can charge before you realize that you can't because anybody has the code. So that's
all you need. You just need a check on greed. And patents ensure that that can't happen
because you can be as greedy as you want for your EpiPen because no one else can make one.
And we're past the point where patents are useful regardless of software or anything
because to get us out of the challenges of climate change, we need to have a moratorium
on all patents in building replacements for Portland cement, replacements for new energy.
But we have this stupid mindset that patenting it will make people rush to make it. No, you're
going to rush to make it because otherwise your kids are dead. Your kids' kids are going
to be suffering majorly. That's why you're going to make it. You're going to make it
because it's going to make the world a better place and save some lives and everything.
But you're hampered. The speed of human knowledge sharing is hampered by the monopoly on that
idea. We're past. The internet made the patents useless, basically is what I'm trying to say
out loud.
Which is a good thing. And so how do you instill like massive innovation? Is it in that patent
system or is it in the open source system? And I think we can all agree that...
No, you have it. Well, open source generally doesn't have patents operating inside it.
We join the open invention network. We do everything we can just to make the patent
rules go away so we can build, so we can do things. Has open source come up with anything
cool that commercial software hasn't? Well, I think the answer to that is yes. So what
was the impetus for that then? To get your patent pay off? Did you need everybody to
not build it while you were building it so that you could build it? Well, then how was
it possible? It was possible because that's what human endeavor is. It's discovering the
unknown. It's creating what hasn't yet been created. It's building a better mousetrap.
It's saying, I did this more efficiently. Hey, see here, Brent, I actually have this
on my house and it's super efficient. And then you go back to your house and you make
your plumbing that way. That's what humanity has been doing for millennia and patents are
just in the way now because anybody anywhere can share their knowledge. And you don't need
a capital impetus to do that. You don't. You just need to want to save your child's life
if you're a doctor to make up a new medicine or care about someone else besides yourself.
You know, I read a very unfortunate stat recently of, you know, it's one of those stats just
gets worse every year of something insane like the 24 richest people in the world have
more than like the lower three and a half billion or something like that. It's like,
how did we even get here? And how is this serving anyone? It's not. It's not serving
anyone but 24 people. Well, serving 28 people. But it's easy. There's just no limit to greed.
And greed sounds like, you know, I'm not a religious person. I'm not at all. I'm an atheist.
I made a documentary called The Unbelievers with Richard Dawkins and Lawrence Krauss.
I was the producer. It's not greed in the classical sense. It's just literally having
more than you need. And not just more than you need, but multiple, multiple millions
of times more than any human needs. And like, I'm okay with things that would normally be
greedy. Like if we just closed our eyes right now and said, anyone in the world can make
$500,000 a year, but no more. There's a whole bunch of people for which they'd be like,
that is plenty of money. Oh, man. What could I do with $500,000 a year if I don't live
in San Francisco? There's a whole bunch of people who are like, that's just not enough.
Well, those are the people that we have a problem. We have some kind of problem. And
if I pegged that number to inflation, and it just wrote out, you know, for the rest
of the year, what would we do with all that extra money? You know, we'd have a great society.
Why do you need that much more? Well, I need another house. I need ski trips. I need all
this. Well, the reason that you need that is probably because you got the money to blow
maybe, or you're not feeling very philanthropic because you didn't really give anything away.
I mean, you can live a great life for, I mean, what? $750,000 then. We'll up it to that.
A million dollars. That's the most you can make, $1 million a year. Everybody listening
to this right now, that's the most you can make. I put a cap at $1 million. Are you going
to be okay making a million dollars a year? Is anybody listening to this not going to
be okay with that? If you are, you're in the incredible freaking minority. You are. And
if I paid everybody listening to this a million dollars a year, we could do that with the
amount of wealth that's squirreled away.
Yeah. And still have extra.
We'll have extra because your schools would be amazing then. Where else would the rest
of the money in the economy go? Wouldn't disappear. It'd still be there. We'd have amazing schools.
You'd have plenty of money left over because there'd be no reason to keep it.
Well, listeners, we're going to take a tiny break here for now, so stay tuned for part
two coming this Friday. That's only three days away from more of my great conversation
with Jason Spizak. We'll see you on the other side.
