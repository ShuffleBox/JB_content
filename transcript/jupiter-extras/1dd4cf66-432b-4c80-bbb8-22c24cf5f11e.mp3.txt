What really excites me though is to introduce
our keynote speaker.
Our keynote speaker is Thomas Cameron.
He currently works as AWS's solution architect,
but he's been doing Linux since before AWS existed.
And he's been a long time speaker at Texas Linux Fest.
And I'm really excited to bring him here
to kick off our Saturday presentations,
talking about the state of the union of Linux.
Thank you.
Thank you.
Thank you.
Thank you guys very much. I appreciate it.
It is truly an honor to be here.
I've been involved with Texas Linux Fest for years
and it's fantastic to be here up on the main stage.
And I appreciate you all being here.
Definitely, you know, welcome and thank you so much
for being here on a Saturday morning.
I know that if you're like me,
you'd rather probably be, you know,
carefully inspecting the backs of your eyelids right now,
but I do appreciate you being here.
Just out of curiosity,
how many folks are here from outside of the DFW area?
Wow.
That is phenomenal.
Thank you even more than for traveling to be here.
That's amazing.
So who am I and why should you care?
Should you care?
I don't know.
We'll see.
A little bit about me.
As mentioned earlier, my name is Thomas Cameron.
I started in the IT industry in 1993.
Raise your hand if you were not born yet in 1993.
Okay.
To me, very honestly,
I still sort of feel like Linux
is this new upstart cool technology, you know?
But the reality is it's been around
for a very, very long time.
I have an interesting path
or I had an interesting path to get here.
I actually started out as a police officer.
I was a volunteer
and then a non-sworn corrections officer
and then a sworn police officer.
Spent about eight years in law enforcement.
Realized that I qualified for food stamps
and changed careers into IT.
So back in the day,
I started out as a Novell certified NetWare engineer.
All right, I'm dating myself, yeah.
And I have fond memories of upgrading
a 2.5 megabit per second ArtNet network
to a blazing fast four megabit per second
token ring environment.
All right.
So my point here is I'm not thumping my chest
and saying I'm anything special because I'm not.
I've just been around for a while.
And I think I've got some pretty impressive scars.
Started with Slackware Linux.
When it comes to Linux,
I started with Slackware Linux back in 1995.
I was actually working for Microsoft at the time.
Don't hold that against me.
I was working during the launch of Windows 95.
I was a technical development engineer
at one of the support facilities.
And there was this guy who worked for me
named Tim Goldenberg.
And I will never forget this kid.
This kid who's now 47 years old.
He was talking about Linux.
And we were all learning Windows 95
and we were learning how to integrate 95
into the NT networks, NT 351 and NT 40 beta,
which is pretty cool.
And he kept talking about how Linux was so cool
and it was really up and coming.
And I had drunk the Kool-Aid, honestly.
And I turned to him and I was like,
Tim, man, Unix is dead.
Windows is the future.
And he kept on and kept on and kept on.
And I finally said, dang it, Tim.
What I'm gonna do is I'm gonna set up one machine
with Windows NT 351.
And I'm gonna set up another machine with Linux.
Didn't know anything about Linux at the time.
But I'm gonna set up Linux and I'm gonna prove to you
that NT is the superior platform.
You can see how that turned out.
So I spent several days, I mean, probably like a week
trying to get Slackware Linux installed
on I think at the time it was a Pentium 90 with,
I wanna say that I had splurged and spent about $450
to get it up to eight megabytes of memory, megabytes.
And I finally, I mean, I had gone through all the
trying to figure out F disk for Linux
as opposed to F disk for DOS.
What do you mean swap partition?
What the hell are you talking about?
Swap is a file, everybody, what?
Boot and root and there's no drive letters.
What the hell's the matter with you people?
So I finally, after a week, complete the installation
and it doesn't crash out.
You go complete installation and it's gonna reboot.
And it rebooted and it came up to a login prompt.
And I was like, what the hell do I do now?
So playing around with Linux,
one of the things that actually blew me away
that made me convinced that maybe Tim was right
was and it's silly, echo one greater than
slash proc slash sys slash net slash ipv4
slash ip underscore forward.
I could turn on and turn off routing in the kernel
from the command line.
On my NT machine, if I had two network cards
or I had a network card and a modem
because back then we were working on modems.
If I had to turn routing on, it said,
I've accepted your changes, now reboot.
I know it's silly, but that was one of the things
that made me go, holy crap, this is pretty cool.
So that's sort of how I got started with Linux.
I was certified as a Red Hat certified engineer
back in 1999 on Red Hat Linux 6.1.
I had written a training guide for Red Hat Linux,
about a 450 page training guide.
I owned a small company that did IT consulting and training.
And we developed a training program
that attracted organizations like Compaq.
Compaq did Red Hat training with me.
You guys, some of the older folks in here
will remember Deja News.
Remember the aggregator for Usenet?
They sent their staff to come train.
The US Department of the Treasury Internal Revenue Service
sent their people to train.
I was very conflicted about that.
Especially when I got the phone call,
ring, ring, ring,
Cameron Technical Services, can I help you?
This is Agent Jones with the Internal Revenue Service
Division of Criminal Investigations.
Who am I speaking with, please?
Thomas.
I understand you do Linux training, is that correct?
And I'm thinking, what the hell could I have possibly done?
I have some of my agents that need to get Linux training
because we do forensics around seized computers.
Said, you like doing that, don't you?
And he goes, oh, I live for it.
So, you know, an interesting time back in the 90s
doing Linux training and consulting,
because it was so new.
Interesting little trivia bit.
I am Turbo Linux certified instructor number 001.
Has anyone ever even used Turbo Linux?
Long time ago, right?
Yeah, so my company,
because I had done all this training material
around Red Hat Linux,
my company was contracted by Turbo Linux for a few months
and we developed a training program, put it all together,
wrote the guides, I delivered the first class,
did a train the trainer,
and within like three months they reorganized
and did away with training.
But damn it, I am number one.
I worked for Red Hat for about 14 years.
I was a solution architect,
and then I worked my way up from solution architect
to senior to principal to senior principal
to chief architect for the central US.
And then the last four years that I was there,
I was an evangelist for Red Hat Enterprise Linux globally.
Great experience, great company.
I got a lot of Red Hat friends in the audience.
I really enjoyed it, but it was time for a change,
so I did move over to Amazon Web Services
about two and a half months ago,
so I'm still really, really new to AWS.
I do want to make very clear,
I am here as a community member only.
I do not claim to represent AWS,
certainly don't claim to represent Red Hat.
I will talk about experiences,
but my opinions are my own, and they may be wrong.
So, as I said earlier,
I don't claim to be particularly wise.
I've just been doing this for a long time
and I've seen a lot of crazy stuff.
So, to talk about what's going on,
I think we kind of have to talk about where we came from.
And so to talk about where we came from,
you need to understand the past
to understand where we're going.
As I alluded to earlier, when I got started with Linux,
I loved it because it was so different
from anything that I had done before.
Real honestly, everything that I'd done previously
was it was software that I'd gotten from work,
or it was software that I got a spare copy
because we used it in the data center or whatever.
And I always sort of had this feeling of,
you know, really, I didn't pay for these licenses,
don't really care because I'm not gonna pay
250 bucks for an office suite in 1995 or whatever.
But it was amazing because I could use it,
I could download it, I could play around with it,
and it was totally okay.
It was free software, and that was fantastic.
From a technical perspective,
one of the things that blew me away about Linux
was that it was natively multi-user.
And if you think about it, like when I got started in 1995,
the only multi-user service that was out there,
the only multi-user operating system
that was out there for x86 for PCs was,
anyone remember?
Citrix.
You remember Citrix, the Citrix terminal server?
Does anyone remember how much that cost?
It was insanely expensive.
And here, I had this distro that I could download,
the floppies, and install,
and I had multi-user with actual user accounts
and multiple people could be logged on,
it was no big deal.
So that was a huge, huge change,
and it was really powerful.
Windows, which is what we all knew on the desktop,
used cooperative multitasking.
And cooperative multitasking means
when an application gets launched,
that application basically says,
I'm gonna run, and when I'm done,
I'm going to turn control over
to the next process that runs.
Anyone see a flaw with that logic?
If an application crashed and it never got to the part
where it said, okay, now you can go,
there's a reason that control delete
is the most famous key sequence in the universe.
And sometimes that didn't work
and you end up having to hit the power button, right?
So with Linux, you actually had this operating system
that went, no, no, no, I'm in charge.
I will let you go, process,
until such time as I deem that you need to stop,
and then I will time slice the next process.
So this preemptive multitasking was like,
holy cow, it doesn't crash much.
Don't get me wrong, I remember the ping of death, right?
I've crashed Linux machines,
but my point is it was like,
it was this incredible operating system
that was solid and multi-user,
and networking was native.
It wasn't an add-on.
If you remember back in the Windows 3.1
and Windows for Workgroups timeframe,
anyone remember Trumpet Windsock, right?
Just cut with the veins, not against.
You know, I mean, it was a pain.
It was a pain to get IP networking.
It was a pain to get dial-up.
It was a pain to do all of those things,
and you had to get these add-ons to make it work,
and even then, you're still running a 16-bit OS
that was, you know, cranky and clunky
and a pain in the butt.
So the OS was pretty awesome.
Hardware, it's a little challenging.
Anybody remember, and this is kind of an eye chart,
but you remember the 8-bit ISA bus?
And then we got 16-bit ISA that ran at eight megahertz.
Woo-hoo!
We were in high cotton.
And then we moved into microchannel architecture,
which is an abomination from IBM
that we shall not mention again.
And then it evolved over time.
We moved into extended ISA or ISA,
so we finally got to 32-bit.
Remember Visa Local Bus?
Visa Local Bus video cards?
Man, that was, ooh, that was awesome!
And then they were, no, no, we're gonna do PCI now.
And then, oh, no, no, no, AGP is the way to go,
and AGP is gonna win, I thought.
This PCI thing, no.
Well, okay, so maybe I wasn't too correct about that.
And then we finally moved into the PCI Express stuff.
But this was a smoking hot video card back in the day.
This was an amazing video card.
This was a Trident video card.
Those chips right there, 128K of memory each, baby.
That was a one meg video card.
800 by 600, whether you needed it or not.
And for those of us who worked in the data center,
AHA 1542, baby.
16-bit bus, and I know it's kinda hard to see
because these colors are washed out,
but there are banks and banks of jumpers
where we had to set I.O. addresses,
IRQs, DMA addresses, SCSI IDs,
whether it was gonna terminate on the wire
or terminate on the card, and all of it was black magic.
We tried to figure this stuff out,
and you'd get on the news groups
and figure out what the hell this thing was
and finally get it working and not touch it ever again.
And ribbon cables, 50-pin ribbon cables
that we plugged into the hard drives,
and you couldn't forget the terminator.
Because if you didn't have a terminator,
your SCSI signal would reflect off the end of the wire,
and it would screw up your whole SCSI chain.
And sometimes it'd come loose just because, screw you.
And stuff would go haywire.
And, you remember these?
Seagate ST, what is it, 30, I don't even remember,
31200 or something like that?
Yeah, 31230N.
This is a SCSI hard drive.
Again, you can't really see it that well,
but there's a jumper bank right there.
We had to set jumpers on the hard drives
to give them SCSI IDs.
And if you got them wrong, you had a bad day.
This hard drive that I've got up here,
I remember buying one for a Novell server.
It's 1.05 gigabyte.
$2400?
For one gigabyte.
This is 128 gigabytes.
Cost about, I don't know, 20 bucks,
and I got it for free at a conference.
And this has better throughput than that hard drive.
I can put, in fact, I have on my desktop PC,
I have a hard drive that's 4,000 times larger than this.
And it cost me less than 200 bucks.
So, again, it's been an incredible journey.
Sound cards.
Sound Blaster 16, baby.
You had to, again, set jumpers for IRQ,
IO ports, memory addresses, all that crazy stuff.
And you had to understand all of those things
because you oftentimes had to either compile the kernel
with the correct settings for these things,
or at least know what the settings were
to set a config file or something like that.
And don't forget, as I said, we started using modems.
And yet again, we had to set jumpers
to set what COM port it was emulating or whatever.
But you'll notice on this one, this modem,
this was a badass modem, this was a 14.4.
This was some high speed back in the day.
But there's no jumpers on there.
You know why?
It's a win modem.
The spawn of Satan.
Because it was all software configurable.
And we didn't, a lot of times Linux
just didn't have the drivers for win modems.
So huge challenges there.
And then there was the monitor.
And the reason that I have smoke coming out of the monitor
is that in the early days,
does anyone remember XF86 config?
Right, you would have to run XF86 config
before you could start X.
And you had to tell X,
you had to generate a config file.
You had to define the mode lines.
You had to define the X and Y, start and stop.
You had to define the refresh rate.
You had to define all this kind of stuff.
You could literally go in and tell the electron gun
to shoot to the left or to the right or up or down
and even to keystone and to do the in and out
and all that stuff.
And if you didn't pay attention to the warnings,
you could get a 14 inch monitor
that said it was good for 800 by 600 and go,
I wonder if it'll do 1024 by 768.
And XF86 config would go, yeah, sure, let's try it.
Click, start X.
Oh crap.
So yeah, the early days were pretty crazy.
Kids these days with their auto configuring PCI devices.
Damn you.
That's right.
But yeah, things were really different.
And in a lot of ways, honestly,
I'm really glad I lived through the painful days.
I'm really glad that I had to configure
all these crazy things.
I'm really glad that I had to walk uphill both ways
in the snow to get to school because I learned a lot.
I really did, I learned a lot.
My first distro was Slackware.
And that was challenging.
It was really tough to get Slackware to play nice.
And I'm glad that I did.
And when I started, we had Usenet.
We had Usenet.
And maybe if you lived in a big city,
there was a lug close by.
You guys remember the comp.os.linux hierarchy?
Comp.os.linux.misc was the place
that you would go to ask questions.
How many folks remember using Claws?
Gnoos, yeah, Silfeed?
For those of you who are younger than my IT career,
these are old open source tools
that we used to access Usenet.
Usenet was sort of like a precursor
to bulletin boards, I guess, or mailing lists.
But so you would use Usenet
and you could post questions and people would reply.
And the thing that was amazing was
I would see people replying
whose names I saw scrolling by as the kernel booted.
That was pretty amazing,
that the people who were helping
were literally the folks who were writing the code.
And they were willing to help.
And Usenet is where I started to understand
what open source was really about.
And I'll talk more about that in a little while.
Mailing lists, this is funny.
David, you're on this.
This is the oldest archive that I could find
for the Central Texas Linux Users Group mailing list.
David and I are actually trading conversations
back there for Fedora Core 4.
So we're talking about that stuff.
I couldn't find any older archives.
I wanna say ct-lug lost a hard drive back in like 05
and the archives went away.
But so yeah, it was heady times.
Just out of curiosity, how many folks are members of lugs?
Not many.
I'll talk more about that in a little while too.
The early distros were crazy.
Yggdrasil, yeah, Yggdrasil.
Slackware is the oldest surviving
and it's not just surviving, it's thriving.
The oldest surviving distro is Slackware.
Then you had Red Hat and SUSE and Debian.
Mandrake, remember Mandrake Linux
before it became Mandriva, before it died, I think.
TAMU Linux, Texas A&M University, gig of Aggies.
Whoop, yeah, sorry.
So Mark Ewing was one of the computer science guys
at Texas A&M University.
He came up with, and that's TAMU Linux
over there on the right-hand side.
He developed the Tux logo.
And I have actually communicated with him over the years
because I've used his logo for a couple of things
and I always pinged him and just said, is it cool?
And he always responds back and says,
please quit sending me these emails.
I've already told everyone they can use it,
but you know, I just wanna say, SLS.
Remember SLS Linux?
Yeah, that's old, I do.
Now, so that's where we came from.
Who were we back in the 90s?
What do you see on this page?
More importantly, what do you not see on this page?
Oh, and this sucks, I'm sorry,
the brightness is all washed out.
Any chance we could turn off the front lights?
If it's easily done, if we could turn off the front lights,
that would be awesome.
Because I think this is really important.
They're all gray beards, like me.
I have become.
But more importantly, what do we not see here?
Ooh, that wasn't quite what I meant, but I like it.
More importantly, what do we not see?
People of color, women, young people.
That's a big problem, folks,
and I'll talk more about that in a little while.
So, what were we doing back in the day?
Well, mostly web and edge of network type of stuff, right?
We were doing DNS and DHCP and file services with NFS
and Samba, anyone remember Samba?
I freaking loved Samba.
You know, print services, email services, stuff like that.
I mean, kind of a cheap Unix replacement
is really what we were.
Why was Linux so successful, do you suppose?
Is it because Linux was awesome
and it worked right out of the box every time, everywhere,
and was super high performance?
No, because it really wasn't in the early days.
But it was good enough.
It was good enough.
And it was free, as in beer, because at the time,
myself included, most people didn't understand
or really even care that much about free as in speech.
And again, I'll talk about that in a little while.
And people were passionate about it.
People became really fired up.
I was one of them, I've made a career
out of working with Linux,
and I'm insanely grateful to the community
to be able to have done so.
Do we remember the distro wars?
Yeah.
Tribalism at its best, right?
You know, you can see the our blessed homeland
versus those barbarous wastes.
Our dear leader versus their savage tyrant.
It was all about mine is better than yours
and you ain't got mine.
And it did some really, really shitty stuff.
People would ask, what's the best distro?
Which distro should I use?
What's going on?
Well, thank you very much for asking.
Let me just tell ya.
What's the best distro?
Well, you want enterprise support
and a really long life cycle?
Well, clearly Red Hat Enterprise Linux
is the best distro.
You want enterprise support and maybe not as long,
but really good community and really docs?
Well, obviously LTS Ubuntu is the best distro.
Do you want the latest and greatest packages,
bleeding edge technology
that's really, really close to upstream?
Well, obviously Fedora is the best distro.
Do you want a stable long-term release,
but you don't wanna pay for it?
Well, clearly CentOS is the best distro.
Do you want an amazing desktop experience
that just works, has all the multimedia,
everything's fine and flashy
and you just click next, next, next, and it's fine?
Well, obviously Linux Mint is the best distro.
Do you want a distro that's optimized
for cloud computing and virtualization workloads?
Well, clearly Amazon Linux is the best distro.
Do you want a highly technical distribution
for power users that is insanely configurable?
Well, Gentoo is clearly the best distro,
except, wait a minute,
maybe Linux from scratch may make more sense.
And you remember I was talking about the easy to use,
maybe MX Linux or Monjaro.
Maybe that might, hmm, you know what?
You keep saying that word.
I do not think it means what you think it means.
Folks, adopting a distro like a religion is stupid.
I've been guilty.
I'm not saying I'm not stupid.
I'm saying I've gotten enough scars
that I don't do that anymore.
Try a bunch of them, force yourself to learn them.
Put whatever, put Ubuntu on your machine, exclusively.
Don't dual boot, put it on and force yourself
to live with it for a month or two.
Then change over to Slackware, then change over to CentOS,
then change over to Arch, then change, learn.
Get good at it so that you can have informed decisions.
At the end of the day, folks, it's a kernel,
GLibc or similar, look into your utilities
and a bunch of applications.
The best distro is the one that does what you need
at the best cost, you know?
So I'm kind of done with that, that whole
mine's better than yours thing.
So where are we now?
You know what?
We've won.
Linux has won.
We're not winning, we've won.
We are literally everywhere.
The Linux kernel runs Android.
How many folks use Android phones?
Yep, okay, I mean, we're everywhere.
The cloud, public clouds, are mostly built on Linux.
And I don't mean just a bunch of Linux instances running,
I mean the server infrastructure is running Linux,
except for Microsoft, but you know, whatever.
Containers, containerization, the new hotness, right?
This is all cool stuff.
Containers are just Linux processes.
Serverless isn't.
It's running on Linux.
It's running on a server,
you just don't have to mess with it.
Always remember, there is no cloud.
There's just somebody else's computers.
So Linux is being used to track and manage
the planes over US airspace.
8,000 to 10,000 planes at any given time over US airspace,
they're being tracked by a cluster of Linux machines.
I fly a lot.
To me, ain't much more mission critical than that.
You know, so we're there.
Linux powers the US Bradley fighting vehicle
and the Zumwalt class destroyer.
I'm really mixed about that.
I mean, honestly, I'm really mixed about that.
My hope is that they're never used,
that there are never shots fired in anger,
but I know better.
If they are, I am confident in our troops
and that technology.
Just out of curiosity, how many folks in here are millennials?
No, no, no, I'm not gonna bust on you guys.
I'm gonna quote Admiral McRaven,
who was the head of Navy Special Forces,
think Navy SEALs, and he said,
people talk smack about millennials,
they say that they're soft,
they've never seen them in a firefight in Afghanistan.
So even though I joke a lot about being a gray beard,
and I do a lot of jokes about get off of my lawn,
I'm real happy with the next generation of folks in IT.
I'm really impressed by what I see.
And the final, I think most important proof that we've won,
IBM is spending $34 billion
for legitimacy in the Linux game.
It's the biggest software acquisition that's ever happened.
And everybody, every major tech company out there
is contributing to open source.
Google, Intel, Microsoft, Red Hat, IBM, AMD, SUSE,
many, many, many, many, many, many more.
Linux runs about 90% of the public cloud.
Linux runs about 82% of the world's smartphones.
About 62% of the embedded market is Linux.
About 99% of the supercomputer market is Linux.
So we've won, and that's a pretty cool place to be.
Linux developers are so mainstream.
Now, like I said earlier,
I asked how many folks are members of Lugs,
and there's a pretty small group.
And just out of curiosity, for those who are in Lugs,
growing or shrinking?
Shrunk and then it's growing again.
I used to worry a lot about shrinking Lugs.
It used to really worry me, but then it hit me.
We used to have to band together for support.
We needed each other because there were so few of us,
there were so few resources that we got together
and we formed tribes in a good way.
Not in the negative tribalism I was talking about earlier,
but we formed tribes and that was a good thing.
We're not rare anymore, we're everywhere, right?
So we don't have the need.
It's awesome to be at Texas Linux Fest.
It's amazing to see all of you here.
And I love that I'm a part of this community,
and I love that you're a part of the community with me,
but we're not as isolated as we once were.
So there's not so much of a need for Lugs anymore,
which kind of makes me sad, but I kind of understand it.
And the other thing that is changing,
although not fast enough,
this is a picture from Flock to Fedora, it's 2017, I think.
And again, I'm sorry that the lights are bright
and you kind of can't see it,
but there's a really, really cool thing that I see here.
There are people of color, there are women,
there are folks with disabilities.
We are getting more inclusive.
We're not there yet, but we're getting more inclusive.
We're getting more inclusive, and that is phenomenal.
There's still a lot of room for improvement
in diversity and inclusion,
and I think that we need to pay attention to that.
And I want to make something really clear.
Diversity is inviting someone to the dance.
And I talk to folks and they're like,
oh, no, no, we work for diversity.
We have hiring requirements that, you know,
X percentage of people who come in are people of color,
or women, or disabled, or blah, blah, blah, blah, blah.
Okay, that's fine.
Inclusion is asking them to dance.
Just because you have hired, you know,
X percentage of whatever group doesn't mean
that you are including them in your business.
There are way too many examples.
You can go to Reddit and find example after example
after example of brogrammer culture,
of token diversity, and more stories about discrimination
and outright harassment than you could shake a stick at.
Don't be that guy, or girl.
There are a ton of organizations out there
that really work hard to do diversity in tech.
There's Out in Tech for the LGBT community,
People of Color in IT, Chick Tech,
which is an organization that I've done
some volunteer work with in Austin and I love,
Brown Girls in Tech, Girls Who Code,
Trans Tech Social, and TGI Tech for kids who code.
And it's not just about LGBT, or women,
or it's also about disabilities, right?
And disabilities don't just mean
the ones that you can see, okay?
Neurodiversity is a really important topic.
There are a lot of folks who are terrified
to talk about things like mental health issues in tech,
right?
I have bipolar folks, it's scary to say that,
but it's important to break down the barriers.
Mine's controlled by medication, thank God,
but people need to feel safe in tech.
And we as a community have done a phenomenal job
in the past of bringing people in and including them.
Let's extend that.
So where are we going?
Man, I've given up on peering at the crystal ball.
How many folks go back and read the predictions
from the previous December every year?
And right, that's the reaction, belly laugh.
But there are some things that are kind of obvious.
Intel actually went down last quarter in sales,
in data center sales.
That is like a category 15 hurricane in the industry.
I mean, people, Intel just doesn't miss quarters,
so that's pretty crazy.
But the server virtualization market
is still expecting to grow.
So what does that say?
Public cloud, public cloud is taking over the universe.
People are not building private data centers
at anywhere near the rate that they used to.
And if you look at, this is actually energy absorption,
hmm, what's in Northern Virginia?
Well, yeah, yeah, NSA, but over and above that,
it's the US East region for AWS.
And if you look at cloud as a percentage
of that absorption, look at how much of the megawatts
that are being absorbed are being done by cloud providers.
Cloud is eating the universe.
And look at the data centers that are under construction.
That was in 2018.
So it's all moving towards cloud.
And this kind of sucks, but the days of the Linux admin
are mostly gone.
If you go to your favorite job site
and do a search for Linux admin,
I went to LinkedIn jobs and put in Austin
and did Linux admin, and you can see,
there were a few results, man, 46 results.
If I was looking for a Linux admin job,
I would call that a fairly target rich environment.
That's all right, I like that.
But then I put in cloud architect, 245.
Then I backed off and I said,
well, just give me all Linux in Austin.
And I was like, man, that's pretty cool.
1500 results for Linux.
That's developers, admins, sales, whatever.
And then I did the same thing for cloud, 4,000,
just in Austin.
In Dallas, in the DFW Metroplex, it's more by a bunch.
Employers expect cloud competency.
But Linux is a huge underlying component of that.
So I'm not at all saying, oh, screw Linux, go cloud.
No, what I'm saying is you have an advantage right now.
But you need to understand all the things that Linux does,
sort of architecturally, right?
You need to actually understand networking
because cloud is very much about networking,
setting up virtual private clouds
and subnets and things like that.
You need to understand storage.
And I mean, block storage.
I mean, file storage, like NFS and Gluster
and things like that, and also object storage.
You need to understand those technologies.
Those are all built on Linux, folks, but understand them.
You need to understand application services
because the days of somebody
who just does Linux are gone.
You need to, at the very least,
understand the concepts of programming
and software development.
I will never be a good developer.
I mean, that's a whole other career path, honestly.
And this old dog doesn't wanna learn those new tricks,
if I'm being really blunt.
But I understand enough about software development
that I can have intelligent conversations.
Containerization is taking over the universe.
Go see David Sarine's story on,
or presentation on containerization later on.
And so you need to understand how containers work,
and you need to understand, let me go back one.
You need to understand orchestration.
So for Kubernetes and things like that,
you need to at least be understanding how it works
and preferably learn how to do it.
You need to learn enough about code
to be able to speak intelligently about it.
And everything should be infrastructure as code.
Everything should be automated.
If you are SSH-ing into machines
and doing bespoke one-off stuff, you're doing it wrong.
And security.
Did I mention security?
You really need to understand security.
I think that we're going to see
a lot more special purpose distros.
Things like what Core OS has done,
Atomic did before that went away,
Photon OS, things like that.
So I think you're going to see special purpose distros.
I think that that's coming.
Fedora and RHEL are doing some really cool things
around modularity, having a very slow-moving core
but very rapid-moving app streams.
That's neat technology.
I think you're going to see a lot more around that.
I will say, and this irritates me,
be aware of what I call cloud washing.
Doing the same thing that you do in a data center
except virtualizing it in Amazon or Azure
or Google Cloud Engine or Rackspace is fine.
There is a place for it, but it's not cloud.
That's just hosting, okay?
Be aware of that.
And don't let yourself go down the path of,
oh no, I still do infrastructure stuff
but I'm calling it cloud, and then all of a sudden
you're unemployable because you don't know cloud.
Because of all of the changes that I mentioned,
I think that the Linux community is morphing and blending,
and I think that that is a very, very good thing.
Meetups and lugs and things like that
are amazing ways to cross-pollinate
the ability to go to a Kubernetes meetup,
the ability to go to a containerization meetup,
the ability to go to a Python meetup
is a great way to cross-pollinate,
learn additional things, and to grow.
And I think that we have the ability to do good things
on an even broader scale.
The most proud that I have ever been
to be a part of this community
has when I've gone to events
and I've seen things like this girl in Bogota, Colombia
who was born without an arm,
there's no way her family could afford a prosthetic.
So a dude with a Red Hat machine,
a Fedora machine actually,
and 3D printing software, open source 3D printing software,
and some donated materials built her a prosthetic arm.
And he does that for kids all throughout Colombia.
One laptop per child,
that is one of the most amazing things.
It wasn't ultimately successful,
but it did do a lot of good and drive down
the costs for computing for underprivileged kids.
We have to remember, folks,
that that which has been given freely to us,
we need to pass along.
We have a responsibility.
I'm here because I have a responsibility
to those of you who have come behind me.
I hope that you will use your experience
and take responsibility for the folks who come after you.
We have to empower folks coming into technology.
We have to enrich lives.
We have to make things better.
We have to include,
and I think that will make the world a better place.
Thank you very much for having me today,
and enjoy the rest of the conference.
And enjoy the rest of the conference.
