Hello, everyone. Welcome to Brunch with Brent. My name is Brent Gervais. Joining me today
is Kyle Rankin. Kyle, how are you doing?
I'm doing well. How about yourself?
Doing great. Thanks so much for joining me today. I really appreciate it. Some of maybe
our community members would know you, Kyle, for you currently are the chief security officer
at Purism, and I believe vice president as well. Is that accurate?
That is correct. Yeah. Many hats.
That's kind of how it goes, right? You also have quite a history with the Linux Journal.
You're a tech editor there for something like 10 years and freelance columnist there for
a long time.
Yes, it's pretty crazy, especially when you think about, you know, if you're a columnist,
that means you're writing something new every month.
Right.
And my column was all about a new tip, or a tech tip, or, you know, hack or something
like that every month. And the first year, no problem. Second year, still pretty much
no problem. On the third year, when you're looking at every month to write something
new that you've never written about before, it really becomes a challenge at that point.
Did you find that helped you kind of grow your skill set because you're constantly hunting
for something kind of curious or something new or novel?
It's true. Sometimes people would ask me if I'd ever considered writing full time. And
I said, no, there's no way I could write full time because I need to work in technology
just to have enough new information to write about. You could sort of tell when I was really
engaged at whatever I was doing at work because I would instantly have, you know, five or
six or seven column ideas that would play out over the next year, you know, and flesh
it out with other ones in between.
Nice. I guess you would probably keep a running list of kind of those ideas and pluck them
as they seem appropriate for the writing that you're doing. That sounds like a lot of fun.
Well, at the beginning, I had a year or so mapped out already.
That seems like a luxury.
Exactly. Yeah. At some point, the well runs dry and you do find yourself every month saying,
yeah, and the other challenge is, you know, let's say we're going five or six years into
this. The next challenge is, wait, did I write about this? I don't remember anymore.
Of course. Right. Right. Right. Our memory is only so good.
Yeah. Yeah. So I would find myself coming up with an idea and then looking and finding
Nope, nope. I already wrote about that four years ago.
Oh, wait. Past me already thought of that.
Yeah, exactly.
That's funny. And do you find yourself sort of missing that in your everyday now?
I do. I miss the Linux journal community in particular. They were always very supportive.
And I would always get really good feedback. I mean, I know sometimes tech writers get
the opposite where the only feedback they get is someone correcting them or giving them
a nice well actually to the gut. But yeah, in my case, it was always pretty positive
when I got feedback at all. You know, usually you're just sort of writing into a void. But
that's the thing I think I miss the most is you would go to a conference and every now
and then you would run into someone who's like, Oh, I read your column. I really enjoyed,
you know, such and such an article you wrote, you know, just kind of really gratifying that
would give you that extra bit of fuel to continue on for another year.
Did that kind of connection also make you realize how many people you were having an
impact on? Because sometimes as writers or even podcasters, we don't always know how
many people are reaching or how profound that impact can be. Was that something that hit
you?
Most definitely. Because without that, for example, if I hadn't gone to various free
software Linux conferences, I would have never even really known that anybody read my column
except for the occasional email I would get or something. But yeah, meeting actual people
and, you know, in some cases, a number of people that, you know, got to know me through
my writing, and they would recall different things that I wrote in the past. And yeah,
it really built this kind of interesting set of community to where now there's a couple
of conferences that pre coronavirus, you know, I would go to annually. And you sort of run
across the same group of people that you met initially, just because it said, Hey, hey,
your name sounds familiar. Oh, I've read your column before, you know, that sort of thing.
That's amazing. It's also nice to hear that that community is still sort of reaching out
to you in a way. To use a big word, one of the tragedies when projects change or shift
or sort of change, you know, change directions is that sometimes the community doesn't know
where to go anymore. So I'm glad to hear that they're still finding you here and there.
Yeah, well, and it helps that right now the Linux journal site is still online. At one
point when it shut down, it was unclear whether that would be the case. And there's a lot
of it. I mean, I got so many solicitations from people to mirror it or to offers to host
it and all of that sort of thing, which of course, you know, I, I had nothing to do with
that one way or the other. There's I was just a editor and columnist. But fortunately, because
it's still online, you know, there's still quite a few people that come across these
articles because, you know, at one point, I even considered the idea of maybe sort of
rounding up all of the articles that were still relevant, which I started reviewing
them and it turned out there are quite a few, even some that were, you know, almost 10 years
old that still were as, as usable today. And I considered maybe like doing some sort of
ebook or, you know, something like that. But yeah, so because they're still online, I'm
getting still, you know, people that come across, I mean, I come across my articles
sometimes when I'm trying to look up how to do something. And I realized, oh, wait,
I already wrote that for a Linux journal, you know, seven years ago or whatever.
And I think that's sort of in a nutshell, part of what can be a little bit challenging
about our internet decentralized world is that some of this great information just sort
of disappears sometimes and somehow maintaining that reference, especially with the number
and the quality of articles that was in a place like Linux journal just seems valuable.
And so, I mean, I guess that's the way back machine, you know, but if we can somehow maintain
those, I think you're on the right track with that sort of thinking, but it's not always
obvious how to accomplish it.
Oh, you're absolutely right. And yeah, thank goodness for sites like the Wayback Machine
that archive some of this stuff. And thankfully they started archiving shortly after some
of my early GeoCities attempts on the internet. So they didn't capture those, thank goodness.
And then all of the stuff they capture for the most part is ready to survive forever.
I think you're beginning to date yourself there a little bit with that GeoCities mention.
That's right. Drop the GeoCities mention and hey, tell me about your first laptop. Well,
it was the size of a VHS tape, you know, oh, you know, let me tell you what those are.
Oh, yeah. Luckily, I can relate to all of those. But for those who don't know the Linux
journal and sort of the history and the let's say the trials and tribulations that went
through, can you give us sort of the the Coles notes version? Because it was around for a
long time and it was really important for a lot of people. And yet today we don't we
don't have it anymore. So can you give us the quick, quick sort of version? Because
I know it kind of hit you personally as well. If you want the full, you know, unabridged
story, I gave a couple of talks on the subject called the death and resurrection of Linux
journal. I gave a keynote at Freenote live on that subject, but the clip notes version
of it is, you know, Linux journal started shortly after the announcement of the Linux
journal. And so it pretty much tracked the history of Linux itself, and started, you
know, relatively relatively modestly, and grew pretty rapidly along with Linux, Linux,
and it sort of became this mirror of Linux for a long time. And then I joined about at
this point, maybe 12 years ago, I guess, and started writing as a columnist. And this was
during the heyday. So I interviewed to be a columnist at a Linux World Expo conference
back when they did those, if I remember correctly, it was the same one where IBM was spray painting
tux penguins on the sidewalk, just to date that a little bit. That's awesome. Yeah, so
that was, you know, that was that brief period of that period of time where IBM had become,
you know, before that, they were sort of like the the original 800 pound gorilla that everyone
was thought was evil. And then at that point, they embraced Linux, and everyone just just
sort of changed their minds almost overnight, you know, because at the time, we needed 800
pound gorilla in our corner. And you could argue now that Microsoft this is, you know,
we're seeing something similar. Yeah, even news today, right? Something similar. Yeah,
you could argue that Microsoft's doing the same thing now, because they've sort of traditionally
followed in IBM's footsteps as far as that goes. But anyway, yeah, so back to Linux journals.
So started there, then and sort of along with the heyday of Linux, where you started seeing
it very easily show up in corporations, you didn't really have to fight to get it installed,
there was, you know, professional support options, Red Hat was huge, they went public,
that sort of thing. And then, you know, if we fast forward, maybe five, six years, the
publishing industry itself was undergoing a lot of problems. For example, borders had
closed their shops and periodicals that were getting a lot of revenue from just store shelf
sales, including Linux journal, you know, had some had some trouble there. Because at
that point, you had a couple of, you know, you had small book retailers, and Barnes & Noble
were pretty much the only games in town if you were a magazine. So the Linux journal
made the difficult decision to go digital only at shortly after that, just because they
needed to make ends meet, you know, I mean, it's very expensive. The publishing costs
kept going up. It's very expensive to print and ship magazines. So they were digital only,
that was very controversial. But it was necessary to survive. And then fast forward, another
handful of years, and it basically just I, there's a lot of analysis about why but just
the community changed a bit. And the way that we were approaching the community was really
based more on sort of traditional, the traditional core audience, because that was the most vocal
audience of ours, and the one that really was was supportive of us the most. But in
the meantime, we didn't really branch out into what had become the greater Linux community,
at least in the way that we really should. And as a result, that combined with the fact
that it's easier to pick up new readers, if you have a magazine on a shelf that they can
see, like, Oh, what's this? And then, Oh, I want to subscribe. So in the absence of
those things, it was kind of challenging. And we ultimately ran out of steam announced
that we were closing up shop, which is really difficult. And then in the last minute, we
were we were resurrected someone, private internet access came in and, and save the
company. And so we sort of had this opportunity for rebirth. And so all of us, you know, that
were involved were really excited, you know, because right before that, I had written this
really heartfelt sort of eulogy for Linux journal, sort of encapsulating the last 10
years. So we came back, and we really started focusing on on learning all the lessons that
got us there and started, you know, turning things around. And I was very excited about
the future of it. And then just sort of out of the blue, a number of months in, we got
word that everything needed to be shut down, that we weren't quite to the point where we
could make it 100% on our own. Although, arguably, we probably could have with a little bit more
headway to prepare. But yeah, so it's just sort of the the cord was pulled. And then
we died a second time, man. So then I wrote a second eulogy, you know, about a maybe year
and a half after the first one, which is weird, because I had already said everything I wanted
to say before. So I ended up calling the column the awkward goodbye, because it really reminded
me of, you know, if you've ever gone to a restaurant with somebody, and you know, you
you eat, you have a great time. And well, back remember when you went to restaurants
with people? Yeah. So if we can go back in time to when that happened, and you would
you would eat with people that you didn't live with. And then when you were done, you
go out and go out to the front of the restaurant, right? And you would say your goodbyes. If
you're close friends, you would hug, remember, we would hug people. So you would hug people,
or you would shake your hand back when we did that, then you'd say goodbye, and you'd
leave. But then every now and then, you both would realize, oh, wait, we're both parked
in the same area. So we just did our goodbyes, we did our really good goodbyes. And now we
have to awkwardly walk to the same parking lot, you know, and then you get to your your
cars or whatever. And then you're deciding, well, what do we do now? You know, do we just
high five? Or do we wave? Or do we just like, repeat the whole thing? Yeah, repeat the whole
thing? Or do we just kind of like, like, ignore each other while we're walking? I mean, what
it's super awkward. And that's, that's sort of what writing that column reminded me of,
because I'd already said goodbye. And now I'm trying to do it again. I don't know. So
I mostly just talked about the concept itself. And awkwardly, awkwardly, close down the column.
And I would imagine was pretty emotional for you to, you know, trying to bring it back.
And it sounds like PIA was sort of a funding body there in a way, and then it just sort
of disappeared. And having that lack of control sometimes can be really challenging for the
people involved who are putting their hearts into it, right?
I can't speak for everyone. But at least for me, I think the biggest emotional hit was
the first time. Because we didn't know how the story was going to go. So for as far as
we knew, it was dead for good. And so I sort of went through the grieving process, then
and did, you know, all of the soul searching I was going to do. And honestly, I would say
that it's the death of Linux Journal, that that was at least partially if not mostly
instrumental in me making the decision to go work at Purism full time.
Oh, wow.
Yeah, because before that, you know, I've been involved with Purism on the sidelines
and sort of behind the scenes since the beginning. So I wrote one of the first reviews of the
Librem 15 laptop when it was still in the crowdfunding phase. I met with Todd in person.
And apparently, the laptop he had for me to review was like the Librem 15 prototype, like
there was one, you know. And so we're sitting there and I think, you know, I'm sort of feeling
him out to see, you know, what kind of person sort of is starting this company? Is this
the real deal? And he's sort of feeling me out a little bit to say, hey, do I trust giving
this guy my one laptop that I have? In any case, he did let me review it. And I wrote
what I consider to be a fair review, talking about the pros and cons. But what really interested
me about Purism at the time was that Todd really seemed like the real deal because,
you know, a lot of times in this community, you see people that know the right words to
say and know how to sort of rally the community by saying the right things. But you know that
they're not really they don't really believe it or they, you know, don't have any history
with it. But, you know, I discovered, no, he's the real deal. He believes what he's
saying and there's a future here with this. So from that point on, I sort of on the on
the background, I would, you know, sort of work behind the scenes, emailing him, giving
advice and helping out with various things, including some of the internal PRS projects
early on. And then every now and then we would talk back and forth, hey, you know, maybe
I should go work there. But it never you know, the timing just wasn't right. And then once
Linux journal died, and I was sort of grieving that I started looking at my own life, I guess,
my first eulogy for Linux journal started off as like a eulogy, and then it turned into
a rant by the end. And while I was ranting, you know, at, you know, the community is maybe
lost its way. And we're, you know, we've changed and what's going on. I realized, you know,
I'm kind of pointing some fingers at myself, too, because, you know, I felt like I haven't
been doing enough to support this thing. I really cared about, you know, I'm spending
my days job, you know, doing perfectly fine things, but, you know, an interesting work,
but it was just sort of traditional system and work. And the companies that I was working
for didn't necessarily forward free software or Linux in any way, other than the fact that
I use them.
So it sounds like there was a bit of a disconnect between your own personal ideals and where
you were putting most of your time.
Oh, most definitely. Yeah. I mean, I realized, you know, I was fortunate enough in the way
that I've worked my career so far that I could make the choice to work, you know, somewhere
that aligned with my ideals and that I should if I can. And again, I had, you know, worked
long enough in the industry and built enough of a career that I was fortunate to be able
to make that kind of choice, which, you know, not everyone can. But the timing was right.
And I realized, no, I need to I should be spending eight hours a day or more, you know,
forwarding my beliefs instead of, you know, just on the side, writing some articles here
and there.
There are always sacrifices that come with sort of making that leap, I would imagine.
Although, you know, here you are today doing still amazing work, doing that kind of stuff.
So good for you for sort of re-evaluating what was important to you. And it sounds like
Linux Journal had a major part in that for you and sort of was a nice segue for you to
move into purism. And I'm curious about what purism is in your everyday now. You're putting
your main focus on security.
It's interesting, because I'm in an executive role. Sometimes when you work at a startup,
especially their startups often, I mean, you know, purism has been around long enough,
I don't know that it necessarily qualifies as a startup anymore. But a lot of times when
you work for a small company or startup, there tends to be title inflation, where, you know,
someone who would be a manager is now a director and someone who'd be a director is now a VP.
And so I mean, I this happened to me as well, you know, you just you start sort of in you
have, you don't necessarily have the roles and responsibilities of the title, but you
have the title.
Someone has to have the title, right?
Exactly. Someone has to have the title and you you are the head of a department. So let's
give you a VP or now a C level title, you know. And in this case, though, it's a little
different because it's, you know, it ends up actually having a lot of executive responsibilities,
which I was expecting, of course. But yeah, so my day to day really varies because on
some days I'm working full time on security related work. And then so some days I have
sort of the chief security officer hat on. And then other days, I sort of have the company
vice president hat on. By that I mean, it just sort of looking at the overall machine
that we have as a company, just sort of helping every department wherever there needs to be
help, I suppose, is a way to put it. So there's a lot of times where, you know, you may have
a team that is working on getting something done, but they need someone with responsibility
for the company to make a decision. Should we go this way or that way? Both ways are
equally valid. They have pros and cons. What should we do? And without the answer, they
maybe are blocked and can't go forward. So in some cases, some days I spend my days answering
those kinds of questions. So they just unblock teams. And other days, you know, I may need
to put on the hat as a as a leader of a particular team just to help get something done, just
because they need extra help on a project or something. Every day is a little bit different,
actually.
And I would imagine that's that's what keeps it interesting for you. If you're sort of
in a position that's the same every day, you know, day in and day out, that can get sort
of old pretty fast, I would imagine, which, which you've alluded to, like, you know, you've
automated yourself out of many jobs in the past. But in this case, it sounds like there's
always something new thrown at you that can keep you sort of curious and interested and
really quite valuable, really.
Never really a dull moment. I can say that for sure. There's always something, you know,
there's always a new challenge, something new to work on and always definitely new things
to learn. You know, I've learned about all kinds of other disciplines, not just learning
more about either systems administration in the past or security. But just, you know,
anything from marketing to, you know, we're we're a hardware company, we sell hardware
and just that whole supply chain, all the operations and all the things required with
sourcing hardware and selling hardware and all of that's all been, you know, just fascinating.
And because I work with so many smart people who are just experts in whatever the field
is that that they happen to be responsible for, I have this great I love learning new
things. And so I constantly have this opportunity to learn from people who really know what
they're talking about.
I would imagine a place like purism, because of its strong ideals and commitment to those
ideals, you know, a lot of free software ideals and open source ideals as well would attract
a certain kind of person who someone like you or I or so many of our listeners would
just love to be surrounded by that kind of person. Would you say that is sort of accurate
versus some of your past corporate experiences, for instance?
Almost universally. In fact, I, I can't think of anywhere I've been where I have spent more
time in chat having conversations about ethics than we have here. You know, it's, it's really
interesting. Whenever we are deciding, making some new decision about some way to go, whatever
it is, whether it's a new product, software, that sort of thing. One of the foremost things
that ends up coming up is, is how does this fit in with the overall free software ethos?
How does this fit in with our own ethics beyond that with respect to privacy and security?
Are we taking freedom away from our customers or giving them more freedom? That sort of
thing. It's just, it's wonderful to also have so many people in the company that already
understand all of those issues. So, I mean, it's not universal, but we do have a great
number of people who are already experts in free software licenses and understand all
of that background. So, you know, when we're discussing things like licensing or how we
treat a particular piece of software, a lot of us are already on the same page.
Do you find that ends up, you know, because you're practicing those kinds of questioning
skills professionally, that it also helps you personally to kind of look at those topics
in your own personal life?
It certainly helps reinforce looking through the lens of your, whatever your personal values
are. If you're doing it at work for something that you could argue is maybe is less important
than how you treat your personal values and yourself, right? It definitely sort of reinforces
that if you're spending your time at work thinking about your corporate values and how
that affects people, it certainly spills over into thinking about how you deal with everyone
in your daily life. Especially if the ethics, if there's crossover in the ethics, you know,
just treating, making sure that people are treated fairly, that you care about people's
privacy, things like that.
One of the reasons I mentioned that was something that kind of gave me a smile when I was just
exploring through your website. And you mentioned on there that some of your sort of explorations
in Linux and open source and free software led to changing the way that you shave, which
I laughed at because I sort of approached the exact same thing and went through the
same trajectory as you did. So I was like, Oh, that's so, it's so great because some
of what we believe in with where we put our time, you know, into open source software
and all of that, and hardware, of course, in your case, sort of spills into other areas
of our life that are seemingly inconsequential, but they can equally bring us great joy, I
think.
I would say that safety razors and that whole technology and the advance of that technology
beat the issues we have with proprietary software by a number of decades. But you can follow
that history, right? You're right. I changed how I shaved, largely because of my free software
values.
That's a great quote.
I was using a Mach 3, like a lot of people did at the time it had just come out and use
it for a while. And then, you know, a number of years later, I was locked in, I had to
buy razor blades just from one company, that sort of thing. And time went by, and I found
out that they had decided to switch to a new, they had upgraded, you know, to a new version.
They left you behind.
Yeah, I had like four blades and two aloe strips or something, I don't know. I had
a choice then, I could continue to try to get my old blades, which are already super
expensive or, you know, move to the new one. And I tried the new one, and I didn't really
like it, and the blades were more expensive, and it was okay. But then I got to the point
where I said, you know, I'm just going to use the old one. And I stopped being able
to source locally, those razor blades, at least the official ones, you know, I think
they eventually they were able to make some knockoffs that worked. But I couldn't find
compatible razor blades. And I'm sitting there thinking, I'm trying to find compatible razor
blades. I got vendor locked in with shaving. You know, this is ridiculous. This is against
everything I stand for. Around the same time, I read this article about, you know, it was
from this website called the art of manliness. And it was about it was about how your grandpa
used to shave or something like that. And I discovered, wait, there's safety razors.
And wait, those razor blades are cross compatible. They, you know, they have a standard public
domain compatibility between all of them, you know, and, and that's it. That's what
I have to do. And so I ended up just diving headfirst, I guess, pun always intended, into
shaving with a safety razor. I ended up writing a whole article about this topic for Linux
Journal, even talking about I mean, pretty much the 10 years of Linux Journal is just
a brain dump for me, one way or the other. But yeah, because it really is this case where
you see why cross compatibility is better for the consumer and lock in is almost never
better. It always creates a better situation because it requires competition. And so, you
know, in the case of safety razors, I can buy a pack of 100 safety razors for $10. And
that pack of 100 safety razors will last me for two, maybe three years, maybe longer now
that we're all in lockdown and you don't shave as much, you know, when you work from home,
that's the first thing to go. Yeah. But yeah, I mean, so it's amazing, you know, instead
of $3 a blade or whatever people pay nowadays, I you know, I feel sorry for those people
just like I feel sorry for them when they when they're locked into some vendor that's
charges them a whole lot of money for stuff. I just love the parallel between those two
worlds. And it's like the open source ideas came a long time before software did, you
know, and we need to not forget about that. It's sort of a human ideal before it's a software
or hardware, computer hardware ideal. So we can apply it in many areas in our lives. That's
for sure. I mean, I'm seeing it all over the place. For instance, I recently, you know,
two years ago, I remodeled my kitchen. And the popular thing to do now with kitchen sinks
is to have a you know, you get a new countertop and do it we've saved up forever. And finally,
we're gonna get a new countertop and you know, in our house and everything. So we save up,
we do that. And then the question comes, well, how many holes are you going to drill in your
countertop? Of course. And so like, Okay, well, let me think about this. Well, you know what,
I will do the single hole sink, or the single hole faucet. So that way, later on, someone
could choose to drill a new hole if they wanted to, but they wouldn't be stuck with a hole
that they had to plug. Well, that means you get one of those large single hole faucets
that have the little pull down sprayer instead of the separate separate sprayer, right? Well,
what I discovered, because I'm a home brewer, and before I had a regular kitchen sink in
regular kitchen faucet, and a regular kitchen sink has one of those little aerators that
you can unscrew, and there's it's threaded with a standard thread. And I had a water
cooling system to cool my wort when I was brewing, before I would put it in a fermenter.
And it was designed to screw on to one of those threaded faucets like you would have
on a kitchen faucet. Well, when I up, quote unquote, upgraded, I discovered that the new
world of kitchen faucets is all proprietary. It really is. No, it is. And so I have this
worthless now. I mean, I had to modify it to hook up to a to a garden hose because they
haven't gotten their hands on making garden hoses proprietary yet. Because like it's followed
me into my kitchen now my kitchen, even the kitchen sink is proprietary. They're trying
to take everything over, which just makes you know, to bring him back a little bit,
which just makes some of the work that purism is doing feel really quite important. And
there are other people doing that similar work. I think we've got an amazing community
who's pushing really hard to implement these ideals as much as possible. And in many ways,
it feels like we're lucky enough to be winning the sort of open source software game. And
it feels like you're on the sort of trailblazing side of the hardware game. Does that feel
pretty rewarding for you? It's definitely rewarding. I mean, it's at the time that we're
facing now, it's extra important, because for a while, and this kind of also goes hand
in hand with that grieving session I had with Linux Journal, went out of business,
but it goes to sort of the sense that the community has changed. And it's not in a bad
way. It's just the community is made up of different people. So for instance, 20-30 years
ago, technology was not very ubiquitous, not everyone had a computer with internet access.
But these days, it's more or less expected. I mean, there's some expectation that someone
has a computer in their pocket with forever internet connectivity at all times now. But
beyond that, even with free software, it has also become more ubiquitous. So when I got
started, you had to fight your way to get Linux installed in a company, you had to justify
using it for a file server or any kind of server at all, a web server. But then, starting
in, let's say, like 2005 or so, or even before that, but let's say around that time was sort
of this golden era where it was just assumed, well, yeah, Linux is a completely viable option
for anything you might want to do on the server side. Beyond that, free and open source software
was a viable option for software. There's a point in time before that where that was
considered, well, why would you want to see the source code that's not desirable? But
now it's sort of second nature. So you have this whole generation of people that grew
up and became adults in a world where they had instant access to technology, native access
to technology, and lived in a world where free software and open source software was
just an expectation. You'd see a project and, oh, I want to contribute to that, and you
expected that there would probably be source code on GitHub or some other repository that
you could edit, which all of that is great, but there's a downside to it, which is people
who grew up in that world now don't really understand why vendor lock-in would be a problem
because they've never really experienced vendor lock-in in the same kind of way in that it
was, how vendors can use it to restrict you. Because at this point, people, a lot of vendors
are still sort of building their influence and their power and haven't really, the other
shoe hasn't dropped yet in many cases for how vendors can misuse lock-in to affect the
choices of their customers.
I feel like we're seeing a different kind of vendor lock-in these days. And to me, that
feels like a vendor lock-in of services. Like if you look at the Googles and the, I don't
know, those kind of large surveillance capitalism style entities, it brings the conversation
in a whole other direction because we're not just talking hardware and software anymore.
We're talking sort of the kind of things that touch our everyday lives.
You may point out, well, if you use this product, this particular product will lock you into
this ecosystem where you have to only get products from the same vendor because that's
the only way it's compatible. And a lot of people these days would say, well, so what
does that matter? It's not a big deal.
Or if you start using this vendor, you will not be able to change to a different vendor
without a lot of pain and difficulty. And they'll say, well, but why does that matter?
And it's simply because they grew up in a world where there was a lot of ubiquitous
compatible technology due to the success of Linux in the free and open source software
movements that they could appreciate an internet with open protocols that were ubiquitous and
were cross compatible.
But now it's more important than ever to have, for example, stuff that Purism is doing to
try to forward those ideals and to build products that don't have vendor lock-in because it's
almost an assumption. People don't necessarily even know the risks because they haven't lived
through the downsides. And so they are, in some cases, unaware of the world and the effects
that their choices have.
So one thing that we try to do with Purism is when we're designing a product, we heavily
factor in whether this would lock a customer into us as a vendor. And if it will, we actively
avoid using that technology. It's a completely sort of different approach, especially when
it comes to security than most vendors take.
If you were to ask some average person in information security to design a product that
was for high security to protect a user from something, they would take a very sort of
paternalistic approach to it that sort of maybe looks down on the user a little bit
as maybe a child where the vendor is the adult who can save them from themselves, that sort
of thing, and build a solution where the user has to come to the vendor for everything.
They have to anchor all of their trust in the vendor because the vendor knows best.
Almost all of the solutions you see out there are based on that because those engineers
who designed them didn't really think about the same kind of free software ethics that
we do. And it's also in the vendor's advantage to lock a customer in.
But because we don't have any desire to lock the customer in, when we're designing these
security measures, we have a completely different playbook and we end up coming up with completely
different technologies to achieve a similar goal.
But in many cases, it would be to our advantage in some ways to try to lock in people or do
all of that sort of things that we don't agree with.
But in other ways, we have an advantage that a lot of other companies don't because there
are things that we're willing to do that they would never be willing to do, such as build
technology that's compatible with a competitor's technology just so that we have interoperability
or build a technology that puts the user in control and doesn't require them to come to
us for everything just because that matches with our ethics.
Yeah, it seems like with that paradigm shift comes real innovation simply out of need to
make it possible to match the ideals. And I think that's really honorable.
Well, a good example of it, I guess, is the first project I did for PureZone when I started
full time, which was work on the Librem key, which is a USB security token we have and
integration with this secure boot software called Heads, which is a different approach
to sort of a traditional secure boot software that your average laptop might have as an
option today.
So the way that the traditional solution works is the vendor has keys that they sign and
each system has a list of trusted certificates that they can use to validate a software as
it boots. If it matches signatures, they allow it to run. If it doesn't match, they don't
allow it to run. Early on when this was put in place, the free software community kind
of went up in arms because they thought, well, this is going to stop people from booting
Linux. That never really happened. And it probably wasn't necessarily going to happen.
Who knows? But it didn't happen. What happened instead was that major Linux vendors such
as Red Hat and Canonical had to go to Microsoft and get their software approved and signed
so that it could boot with secure boot enabled because you either have a choice of having
it on or off, trusted or insecure.
So we didn't want the customer to have to come to us or go to Microsoft to get a signature
to be allowed to secure their boot process. So we took an approach where the keys that
we use to sign software, we don't necessarily sign it in the same traditional way, but the
keys that we use are customer controlled keys.
User generated, right?
Yeah, they can generate them. We generate some at the factory that are temporary just
to protect the user in shipment. And when they get the laptop, we encourage them to
change them completely with their own keys and make it as easy as we can to do it. But
it required a completely different approach than you traditionally would have and a lot
of extra work and a lot of extra engineering to do it. But the end result to us is at least
a lot better because it puts the user in full control of their computer, which we don't
feel like a user should have to come to us and anchor their trust in us wholly for them
to be safe.
That's amazing. I think as someone who really, you know, I really care about those things
and understand how difficult they are to implement and also to have accepted widely, especially
when it's such a different, you know, a change of mentality with how some of this is working.
I think pushing the envelope in this area is really valuable. So thank you for doing
the hard work. That's for sure.
I want to ask you if there's anything you feel about purism that is either about its
products or its culture or its values that you feel is at all sort of misrepresented
or misunderstood in the wider either Linux community or in the public eye?
I suppose one of the main things that I see and I've seen, I saw this from almost the
very beginning before I even worked at Purism, was that this whole Linux community has been
hurt so many times by companies that come in and say the right words but don't actually
believe in the movement, who then take advantage of sort of the good nature and the efforts
of the free software community without either contributing back or, you know, using it at
the beginning and then sort of doing a bait and switch. I mean, you could argue a lot
of open core projects are kind of this approach to of getting the free software community
to provide initial free labor to build a product when they're in the seed round. And then once
they have a proof of concept, they – a lot of these companies get Series A funding or
Series B funding and then at that point, they hire up some of the top contributors and pay
them to work on a proprietary product, you know, that they're going to sell and ultimately
kind of abandon the original.
So this has happened time and time again with the community and so that the community just
really been hurt over and over again. Purism has gone to a lot of extremes to demonstrate
that it believes what it says and going as far as incorporating as a social purpose corporation
so the ethics are, you know, we're legally bound to the ethics. So an investor can't
force us to abandon them for profit. But even with all of that, because the community has
been hurt so many times, it's natural to conclude, well, this is a – Purism is yet
another company that is saying the right words but doesn't actually believe it and they
say things but they don't really want to follow through. They have all of the, you
know, there's an assumption that pretty much every company has nefarious intentions. So
I suppose the biggest thing to clear up if necessary is that, you know, I see this applied
to Purism from the very beginning, like when Todd first said our goal is to make a laptop
that for example has free software firmware. We want it to run core boot. We had people
including some people that were like core boot developers at the time said you're lying.
You have no intention of ever doing that. You will never do that. You're just saying
it to sell laptops. Even after, you know, they put a job description out to hire a full-time
core boot developer, they said the same stuff even after they hired the position and started
working on it. Same sort of thing. I mean, the only thing that actually silenced that
kind of critique was shipping a laptop that had core boot on, you know, shipping it.
Exactly right. But I think in some ways you're always going to have those skeptics because
it's some of this has never been done before. And so maybe it means you're headed in the
right direction.
I mean, yeah, I mean, it's all very difficult. You know, I mean, we're doing in some cases
like we've run into similar things with the phone because we have these huge ambitions
that are long term goals with the phone that are really difficult to do and incredibly
challenging because in many cases that means we have to do everything from scratch because
it's so different from what's out there. I mean, I've had conversations with many people
on the subject over the years. And what I've discovered is ultimately the only thing that
really silences critics, at least most of them, is doing the thing.
I think it's going in amazing places. And I hope that it continues to go in amazing
places. It seems like you have wonderful people working on all this stuff. So I'm sure some
really amazing things will come out of it. One question I want to ask is whether you
have an ask of the community or of listeners, something maybe you'd like them to see, go
see something you'd like them to try or something you'd like them to think about.
So I have something I want to say to two different sides of the community that are sort of both
part of the overall Linux or free software community, which is, you know, what I've noticed
and this is something I realized in my soul searching about Linux Journal was that what's
happened is as technologies become more ubiquitous and everyone just sort of now grows up and
is using computers. Well, that hasn't always been the case. And when it wasn't, people
who were in the free software community were people to get that kind of knowledge to develop
software to use computers. It was not very accessible. And so it attracted, well, it
attracted nerds. I consider myself among them. You kind of had to be a nerd to be willing
to spend the time isolated in front of a computer, learning all of this arcane knowledge to contribute
to this community and to build software. Well, if you fast forward, you know, 20 years, 30
years from that, the world's a completely different place and technology is ubiquitous.
Computers are ubiquitous and programming is ubiquitous and very accessible. You don't
have to spend years in a basement, you know, in front of a green and black screen to develop
software anymore. It's very accessible. And as a result, as part of that, you have a way
more diverse non-nerd group of people who have entered the technology realm, technology
careers and the free software community as a byproduct of that. Well, it's created this
culture clash. And so I liken it to these nerds who decided to throw a party and it's
a Dungeons and Dragons party and they have this really great campaign and they're having
a lot of fun and word gets out to everybody else that, hey, I heard this really great
party is on such and such a street, this address. And then you have the rest of the school show
up and like all of the jocks and all the everything else, everybody else shows up to this party
and they're like, oh, wow, this party sucks. And they, you know, throw a kegger in the
middle of this Dungeons and Dragons campaign. Right. And so I would say that that's sort
of what's happened in our community now where we have completely diverse group in the free
software community. So you have everything ranging from the traditional diehard, nerdy
geeks like myself, and you have people that have average social skills and come from a
completely different background. I mean, it wasn't that common 30 years ago for someone
to say, well, yeah, I want you to go to business school, honey, and get your degree. And then
I want you to be a tech entrepreneur. It was more like be a doctor or a lawyer or something.
But now a lot of people are doing this. So you have a lot of people with MBAs. I mean,
there's this whole notion of people being a brogrammer. They're crushing their code
and crushing beer cans against their head and stuff.
I've never heard that before. That's hilarious.
I mean, can you imagine 30 years ago, someone doing that? It just wasn't the culture. So
anyway, all that to say, we have this culture clash now. And what I want to say to both
groups, I guess, is one is to recognize that everyone's in the same community, whether
you're this old diehard geek that knows all of these original kind of truths about free
software, or you're someone who's just come into the community more recently and who isn't
aware of these things. One, both groups are part of the community. And number two, what
I would say to the people who were the hardcore original members of this community is to guide
the people who have just entered this community, teach them about the original ethics and the
original things that you take for granted that you learned that they were never exposed
to in a very understanding way.
Sometimes I see people in the community use these sorts of things as almost like a litmus
test, or are you geeky enough to be in this community, that sort of thing, which is pretty
worthless in my mind. So I would beg people that have been for a while, use your knowledge
of all these things beneficially to the community, to all the newcomers in it, to explain to
them why all these values matter, make them relevant. The people who have just joined
the community, I would ask them to please be patient with all of these hardcore old
geeks who are still learning all of these new social rules that they're being exposed
to now that this community is very diverse, people of all kinds of backgrounds. If you're
new to the community and you're very extroverted, then you also take certain things for granted.
Just like the hardcore geeks may take knowledge of the Four Freedoms for granted, people who
are very extroverted may take for granted that it's easy to talk to other people, it's
easy to have a conversation and not really understand that sort of thing. I guess the
final thing is I would also go back to the original group and ask them to please try
to be more open to learning these new social protocols. I see a lot of times flare ups
in the community that really come down to certain people digging in their heels and
saying, you know what, I don't want to know what new social rules are. I don't want to
follow any sort of new protocol. I'm also incapable of doing it, which I don't buy because
the same kind of person could recite verbatim the coming of age ceremony in Klingon and
will get into a flame war about proper mailing list etiquette. God forbid you pop post on
their mailing list. They memorize all of these very complex rules of social engagement. So
having empathy and social skills for regular human beings is not beyond them. It's just
a matter of putting in the effort.
Yeah, I feel like the thing to remember there is that we're all chasing very similar goals
and we just have to communicate a little bit and understand each other to get there together.
And also the value in community managers. We've gotten to know a few here and they are
golden. It's not a skill that was necessarily recognized early on in software development.
But man, does it ever feel important these days?
Yeah, more important than ever, because, you know, we finally realized that that contribution
to a community isn't simply I wrote some code and submitted it. You know, there's all of
these different ways the community needs contribution. You know, everything from that code is very
useful, but also documentation, also solid bug reports. Also, I mean, there's 50 different
levels of contribution in most of those areas we were lacking in, in a great way. We weren't
necessarily lacking in the code.
Well, Kyle, if people wanted to get connected with you to say hi, or otherwise share a little
bit of social connection, where can they find you?
If you are part of the Fediverse, you can reach me at Kyle at Libram.one. If you use
like Mastodon or clients like that. And if you use something like Twitter, you can see
me at Kyle Rankin with no space. And I also have a personal website that is at kylrank.in.
Which I love. Kyle, thanks so much for your time. This was a lovely chat. I really enjoyed
it and hope we get to chat soon again.
