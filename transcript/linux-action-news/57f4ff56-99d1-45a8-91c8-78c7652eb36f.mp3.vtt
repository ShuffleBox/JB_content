WEBVTT

00:00.000 --> 00:08.480
Hello and welcome to Linux Action News Episode 240 for May 11th, 2022.

00:08.480 --> 00:09.480
I'm Chris.

00:09.480 --> 00:10.480
And I'm Wes.

00:10.480 --> 00:11.480
Hello, Wes.

00:11.480 --> 00:13.000
Let's do the news.

00:13.000 --> 00:16.720
This week we have a special edition of the show.

00:16.720 --> 00:22.860
Sometimes a news event is just so extraordinary we have to focus the episode to just get you

00:22.860 --> 00:26.280
the most valuable information possible.

00:26.280 --> 00:30.440
Today's Linux Action News is one of those episodes.

00:30.440 --> 00:37.100
As we publish, NVIDIA has just announced a new long-term effort to work upstream to release

00:37.100 --> 00:42.680
an open source kernel driver and related code for their GPUs.

00:42.680 --> 00:45.160
Let that sink in for a moment.

00:45.160 --> 00:49.560
The historic nature of this announcement really cannot be overstated.

00:49.560 --> 00:55.560
What we know at this time is that NVIDIA's plans start with a focus on CUDA and compute

00:55.560 --> 01:00.520
the goal for 3D display by the end of the year.

01:00.520 --> 01:07.060
This work is not only the result of a significant change in thinking at NVIDIA, but also years

01:07.060 --> 01:10.960
of interfacing with internal Red Hat staff.

01:10.960 --> 01:16.840
Christian Schaller is the director for desktop, graphics, infotainment, and more at Red Hat.

01:16.840 --> 01:22.980
He's been there for nearly 10 years and has been directly involved in the nouveau project.

01:22.980 --> 01:27.560
He joined us earlier to discuss the details of NVIDIA's announcement from the Red Hat

01:27.560 --> 01:28.560
perspective.

01:28.560 --> 01:34.160
We started by asking him how long Red Hat has been involved behind the scenes to make

01:34.160 --> 01:35.160
this happen.

01:35.160 --> 01:41.400
Yeah, we've been probably talking with NVIDIA, I mean, we have had the bigger discussion

01:41.400 --> 01:45.400
with NVIDIA around this for literally for years, pushing them towards this.

01:45.400 --> 01:48.540
But I mean, in terms of this concrete effort that is now coming to fruition, I would say

01:48.540 --> 01:52.280
that we've been working more intensively on it for at least three months.

01:52.280 --> 01:56.600
Is the upside for Red Hat that there is a good amount of RHEL systems out there doing

01:56.600 --> 01:58.160
compute with NVIDIA GPUs?

01:58.160 --> 02:02.640
I mean, the upside for RHEL is, A, there is a lot of those systems out there, and this

02:02.640 --> 02:06.360
announcement will make it easier for us to support that.

02:06.360 --> 02:10.680
I mean, one sort of growing customer request, of course, is that they want to enable secure

02:10.680 --> 02:12.560
boot on their systems.

02:12.560 --> 02:16.320
And the fact that NVIDIA driver hasn't been signed up to this point has been a major point

02:16.320 --> 02:19.760
of contention for enabling secure boot.

02:19.760 --> 02:25.480
So it sort of means that we can get to a point where it is possible to have a signed driver

02:25.480 --> 02:27.540
for NVIDIA.

02:27.540 --> 02:33.360
The other thing that we feel is hugely valuable is that as part of this, right, we can have

02:33.360 --> 02:39.160
more shared infrastructure between the open source stack and NVIDIA's binary stack.

02:39.160 --> 02:42.360
Because when you've been using Nuvo for the last few years or tested it, you probably

02:42.360 --> 02:47.840
realize that the performance you get out of Nuvo is not particularly impressive.

02:47.840 --> 02:52.880
And the reason for that is that we have never been able to reclock the GPU to make use of

02:52.880 --> 02:54.120
the power.

02:54.120 --> 02:59.360
So one thing maybe your listeners are not aware of is that ever since NVIDIA started

02:59.360 --> 03:03.440
signing their firmware, the only reason Nuvo has been able to support anything has because

03:03.440 --> 03:09.840
NVIDIA has been releasing a special firmware for Nuvo to enable us to initialize the hardware.

03:09.840 --> 03:15.160
The problem with this firmware was that it didn't have all the knobs and whistles because

03:15.160 --> 03:18.040
NVIDIA was slowly working to redo things.

03:18.040 --> 03:19.400
So we couldn't reclock with that.

03:19.400 --> 03:22.360
So a big thing coming out of this announcement will be that, you know, regardless of the

03:22.360 --> 03:25.600
details of how things look out, we will be able to have a shared firmware eventually

03:25.600 --> 03:29.760
between the open source stack, including Nuvo, and the binary stack, which means that we

03:29.760 --> 03:31.400
can do the reclocking.

03:31.400 --> 03:35.200
It certainly means that we will have a situation on the NVIDIA side looking, you know, pretty

03:35.200 --> 03:38.320
close to, for instance, what you can see on the AMD side where there is a closed source

03:38.320 --> 03:39.580
AMD driver.

03:39.580 --> 03:42.980
But for most people, the open source AMD driver is more than good enough.

03:42.980 --> 03:44.640
And that's what I'm abusing.

03:44.640 --> 03:49.240
So if I'm understanding you, there will still be a role for the Nuvo driver and for the

03:49.240 --> 03:52.760
NVIDIA driver, even if the NVIDIA components are open source.

03:52.760 --> 03:53.760
Exactly.

03:53.760 --> 03:59.200
I mean, the thing that is sort of unclear is, well, or what we know for sure is that

03:59.200 --> 04:03.300
whatever ends up being the future, it's not going to be today's Nuvo.

04:03.300 --> 04:07.200
It's going to probably be that we work with NVIDIA to sort of create some sort of new

04:07.200 --> 04:14.480
shared kernel driver that, you know, will be based on what they're open sourcing.

04:14.480 --> 04:16.000
But it probably won't be exactly that.

04:16.000 --> 04:21.920
And that will then go upstream into the kernel and for Turing hardware newer, because this

04:21.920 --> 04:28.200
thing only affects Turing on newer, that will then be eventually the new open source kernel

04:28.200 --> 04:30.880
graphics driver for NVIDIA GPUs.

04:30.880 --> 04:34.760
That sounds like a lot of ongoing collaboration with NVIDIA.

04:34.760 --> 04:35.760
Yeah.

04:35.760 --> 04:41.040
I know you can't read minds, but could you help me try to wrap my head around why the

04:41.040 --> 04:42.960
change of heart and direction here?

04:42.960 --> 04:47.240
Was it just pressure about things like Secure Boot and look, our customers want this.

04:47.240 --> 04:52.600
And so NVIDIA is trying to make a partner happy or is this some bigger land shift?

04:52.600 --> 04:54.040
I think it's a bigger mind shift.

04:54.040 --> 05:00.200
I think they have sort of realized that, you know, sticking with their current model beyond

05:00.200 --> 05:04.520
just, you know, the practical concerns about like, how do you do Secure Boot and so on,

05:04.520 --> 05:07.200
generates a lot of extra work and effort for them to write.

05:07.200 --> 05:11.040
I mean, and it creates sort of a constant source of conflict with the kernel community

05:11.040 --> 05:15.780
around, you know, GPL only headers and all this kind of things.

05:15.780 --> 05:18.840
So I think this is sort of been something they've been working on for quite a while

05:18.840 --> 05:24.040
before they sort of publicly shared with us that they were working on it, because it will

05:24.040 --> 05:29.720
make their life easier and our life easier.

05:29.720 --> 05:34.320
And by basically, like, you know, not having to sort of fight with the Linux community

05:34.320 --> 05:38.440
in some sense about this.

05:38.440 --> 05:41.480
It still feels like there's a big shift there.

05:41.480 --> 05:45.920
Do you know, have there been other vendors partnering with NVIDIA on this effort?

05:45.920 --> 05:49.280
Is it just been primarily a Red Hat NVIDIA effort?

05:49.280 --> 05:52.120
I would say it's primarily a Red Hat NVIDIA effort.

05:52.120 --> 05:53.480
And the reason for that is pretty simple.

05:53.480 --> 05:57.840
I mean, there is no other Linux company out there who has significant resources on the

05:57.840 --> 05:58.840
graphics side.

05:58.840 --> 06:06.180
I mean, of course, I assume the other distros will be packaging this stuff.

06:06.180 --> 06:10.920
But in terms of actually contributing upstream, I mean, if you look at both the kernel graphics

06:10.920 --> 06:14.160
subsystem and Mesa and so on, you will see that, you know, there's Red Hat engineers

06:14.160 --> 06:17.960
involved and, of course, engineers from other companies, but not necessarily from other

06:17.960 --> 06:20.000
Linux distributions.

06:20.000 --> 06:21.000
Right.

06:21.000 --> 06:22.000
Do we know license details?

06:22.000 --> 06:23.000
Like, is it MIT?

06:23.000 --> 06:24.000
Is it GPL, I guess?

06:24.000 --> 06:25.000
It must be GPL.

06:25.000 --> 06:26.000
Yes, it will be.

06:26.000 --> 06:31.080
I think they do licensing it, GPL, MIT, I think was.

06:31.080 --> 06:32.080
OK.

06:32.080 --> 06:33.080
Yeah.

06:33.080 --> 06:34.560
So the bits that touch the kernel will be GPL.

06:34.560 --> 06:35.560
Yeah.

06:35.560 --> 06:36.560
All right.

06:36.560 --> 06:37.560
That makes sense.

06:37.560 --> 06:42.560
So, of course, an added benefit here for NVIDIA in the long term is that they will be able

06:42.560 --> 06:49.480
to take advantage of all those GPL-only kernel APIs that so far has been off-limits to them.

06:49.480 --> 06:50.480
Hmm.

06:50.480 --> 06:52.800
I hadn't even really considered it from that angle.

06:52.800 --> 06:56.480
This will make their engineers' life easier, too.

06:56.480 --> 06:57.480
Yeah.

06:57.480 --> 06:58.480
Yeah, exactly.

06:58.480 --> 06:59.480
Uh-huh.

06:59.480 --> 07:00.480
That makes a lot of sense.

07:00.480 --> 07:04.080
I mean, I'm still kind of putting the picture, like, this just seems like a real commitment

07:04.080 --> 07:07.200
here, because if they're working with the Nuvoo driver, too, down the road, or they're

07:07.200 --> 07:11.040
willing to work with Red Hat to shape that into something new, it sounds like they're

07:11.040 --> 07:17.840
willing to commit almost an undefined amount of engineering time to this, just sort of

07:17.840 --> 07:18.840
ongoing engineering time.

07:18.840 --> 07:19.840
Yeah.

07:19.840 --> 07:20.840
No, I mean, definitely.

07:20.840 --> 07:25.320
I mean, this is going to be their primary way of supporting Linux going forward, right?

07:25.320 --> 07:30.160
I mean, the binary driver will continue living on, I mean, especially because for pre-turing

07:30.160 --> 07:33.640
chipsets, that's the only driver that will be available from NVIDIA.

07:33.640 --> 07:35.320
Ah, okay.

07:35.320 --> 07:37.720
So there are certain chipsets that the new stuff won't work with.

07:37.720 --> 07:38.720
Yeah.

07:38.720 --> 07:46.160
So, I mean, you need a GPU from 2018 or newer to take advantage of this.

07:46.160 --> 07:50.120
So I mean, it's definitely a big effort, and they have, you know, they are committed,

07:50.120 --> 07:54.160
and they've been working very closely with us for quite some time now, not just on this,

07:54.160 --> 07:55.160
right?

07:55.160 --> 07:59.320
We have almost weekly meetings with them, for instance, on making sure that NVIDIA and

07:59.320 --> 08:02.100
Valiant support is top-notch.

08:02.100 --> 08:03.800
Is this the fruit of that?

08:03.800 --> 08:07.680
Well, I think that the reason why they reached out to us maybe beforehand is because we have

08:07.680 --> 08:10.160
sort of established a strong relationship with them over the last few years.

08:10.160 --> 08:14.600
I mean, I think it's sort of the initial effort that we started working closely on was, you

08:14.600 --> 08:18.800
know, the GLVND effort when we put in place infrastructure to allow Mesa and the binary

08:18.800 --> 08:19.800
driver to coexist.

08:19.800 --> 08:20.800
Right.

08:20.800 --> 08:24.080
I feel like that was sort of like the proving ground, and it sort of set the tone in some

08:24.080 --> 08:25.080
sense.

08:25.080 --> 08:28.160
And then we have been working together on, you know, discussing these things, discussing

08:28.160 --> 08:35.680
how we can improve Nuvo, and then how we work around Nuvo with them, and of course, a lot

08:35.680 --> 08:37.440
of discussion about compute, too, right?

08:37.440 --> 08:38.440
How do we package?

08:38.440 --> 08:39.920
Getting bigger and bigger, right.

08:39.920 --> 08:40.920
Yeah.

08:40.920 --> 08:41.920
Yeah.

08:41.920 --> 08:46.800
So, Christian, maybe you can refresh my memory because it feels like it's been ancient history

08:46.800 --> 08:47.800
now.

08:47.800 --> 08:55.840
Was NVIDIA's initial reaction, would you characterize it as unhappy with the Nuvo driver attempt?

08:55.840 --> 09:00.760
I'm wondering, have we seen a complete arc from, we're skeptical of this thing all the

09:00.760 --> 09:06.720
way to now we're contributing to it, or am I misremembering that a little bit?

09:06.720 --> 09:12.120
I don't know that I can say that they were, you know, statedly skeptical.

09:12.120 --> 09:16.880
I mean, I think maybe, and this is purely from, call it a subjective perspective, this

09:16.880 --> 09:20.840
was not what NVIDIA said, but I think maybe they at times were a little bit concerned

09:20.840 --> 09:24.920
that Nuvo made their business model a bit harder.

09:24.920 --> 09:31.440
I mean, you know, they often offered their GPUs in different market segments, and historically

09:31.440 --> 09:35.920
they even shut off certain features through the driver.

09:35.920 --> 09:40.960
So I think that probably fueled some skepticism, but over the years they have sort of moved

09:40.960 --> 09:44.620
away from limiting things through the driver.

09:44.620 --> 09:49.640
So I don't think that's a current concern for them, but of course, it definitely was

09:49.640 --> 09:52.000
something that maybe colored things in the early years.

09:52.000 --> 09:53.000
Yeah.

09:53.000 --> 09:55.360
You know, their approach and things change.

09:55.360 --> 10:00.200
So can you describe from your understanding how this is going to roll out from like say

10:00.200 --> 10:04.680
a Fedora user's perspective, just sort of a kind of basics of how they're going to see

10:04.680 --> 10:05.680
this rollout?

10:05.680 --> 10:06.680
Yeah.

10:06.680 --> 10:10.840
So what you will probably see happen is that, I mean, I expect relatively quickly, you know,

10:10.840 --> 10:16.840
after day's release today, they will, we will have it packaged in Fedora.

10:16.840 --> 10:21.560
And of course, if you're using Fedora to run CUDA based stuff, then you can of course start

10:21.560 --> 10:25.040
making use of that right away.

10:25.040 --> 10:29.480
And then of course, you will see a sort of steady stream of updates coming out from NVIDIA

10:29.480 --> 10:34.200
towards the end of the year, adding more features and then, you know, ramping up the graphics

10:34.200 --> 10:35.880
side of it.

10:35.880 --> 10:41.360
And we will keep packaging that in Fedora, although of course, it's still an auto tree

10:41.360 --> 10:42.360
driver.

10:42.360 --> 10:43.360
I mean, to be clear about that, right?

10:43.360 --> 10:46.400
So it's not, so there will still be, you know, some challenges around that fact.

10:46.400 --> 10:50.600
But then in parallel with that, of course, we will be working with them and I mean, it

10:50.600 --> 10:54.000
will happen in public, because it's not about just Red Hat and NVIDIA, right?

10:54.000 --> 10:59.640
It's also about making sure we work openly with the existing Novo community and Mesa

10:59.640 --> 11:02.080
community in general.

11:02.080 --> 11:05.740
To come up with like, how can this look in the long run?

11:05.740 --> 11:09.960
And how can we make sure that we have something that is, you know, suits all of NVIDIA's

11:09.960 --> 11:14.440
needs and that suits all of the Mesa open source community's needs.

11:14.440 --> 11:15.440
Hmm.

11:15.440 --> 11:16.440
Okay.

11:16.440 --> 11:20.560
You know, I have noticed recently, and I think Michael, our beloved Pharaonix also noticed

11:20.560 --> 11:26.000
recently, there has been some compute specific code being submitted to the Linux kernel.

11:26.000 --> 11:29.000
So this is all going upstream, it's not Fedora specific.

11:29.000 --> 11:31.080
No, it's all going upstream.

11:31.080 --> 11:36.520
I mean, as you can see from reading their blog post about this, I mean, the driver from

11:36.520 --> 11:41.560
day one is publishing it on GitHub.

11:41.560 --> 11:45.160
And then of course, part of the work with us, right, is, I mean, part of the reason

11:45.160 --> 11:47.440
why we also want to do this shared driver is to get this upstream.

11:47.440 --> 11:51.480
I mean, that will make life so much easier for everyone if it becomes the actual upstream

11:51.480 --> 11:56.000
driver eventually that we have here and that is worked on by us and by community members

11:56.000 --> 11:59.440
in general and of course, by NVIDIA engineers.

11:59.440 --> 12:04.820
This really feels like every now and then in Linux, we've had these things that were

12:04.820 --> 12:08.640
just these mountains that would just seem like they were going to be this way forever

12:08.640 --> 12:10.080
and would never change.

12:10.080 --> 12:12.480
And then one day they change.

12:12.480 --> 12:14.660
And then we look on, okay, what's the next thing?

12:14.660 --> 12:17.280
And I think for a lot of people, the next thing has always been, well, we got to get

12:17.280 --> 12:18.640
that NVIDIA driver open source.

12:18.640 --> 12:19.640
That's got to be the next thing.

12:19.640 --> 12:22.280
That would really make life a lot easier for folks.

12:22.280 --> 12:23.280
And now what?

12:23.280 --> 12:24.760
Now what are we going to complain about?

12:24.760 --> 12:26.360
Yeah, no, exactly.

12:26.360 --> 12:31.840
I mean, you know, one thing I put a lot of blood, sweat, and tears into ever since joining

12:31.840 --> 12:36.600
Red Hat is of course trying to beef up what we do around Fedora workstation and dealing

12:36.600 --> 12:40.520
with NVIDIA driver has sort of, I mean, you know, we've worked with NVIDIA around GLWD

12:40.520 --> 12:44.960
and so on because that was a critical point in making things smoother, but this will eventually

12:44.960 --> 12:53.440
allow us to make NVIDIA an equally easy solution to work with as today with Intel and AMD, right?

12:53.440 --> 12:57.440
Because it's, you know, upstream drivers, everything should work out of the box.

12:57.440 --> 13:00.760
Since we're using the same firmware that NVIDIA is using for their closed source drivers,

13:00.760 --> 13:06.040
it means that you don't get these kinds of delays that we, for instance, had with Novo.

13:06.040 --> 13:12.000
And for me, this is sort of a huge step forward just in making Linux install and set up a

13:12.000 --> 13:13.000
lot easier.

13:13.000 --> 13:18.000
I feel that often if people these days try out Linux and trip up, it's often about like

13:18.000 --> 13:21.160
either, you know, don't even knowing that you need to get this separate driver from

13:21.160 --> 13:27.880
NVIDIA and then like, hey, why is my graphics performance so slow?

13:27.880 --> 13:29.480
Or just having trouble still with it.

13:29.480 --> 13:34.400
I mean, I think things have gotten a lot better thanks to, you know, getting things packaged

13:34.400 --> 13:38.160
up and then made available to NOMO Software for us and so on and other people have put

13:38.160 --> 13:43.560
it under ISOs to make it easier, but this will sort of, you know, remove all the needs

13:43.560 --> 13:48.360
for all these kind of weird special casing and relying on third-party repositories and

13:48.360 --> 13:49.840
all these kinds of things.

13:49.840 --> 13:50.840
Yeah.

13:50.840 --> 13:55.000
I mean, it feels like it's going to be a true, once we kind of see the full fruits of the

13:55.000 --> 13:57.840
labor down, sounds like towards the end of the year and maybe beyond, we're going to

13:57.840 --> 14:02.360
see a smoother desktop Linux experience than we've ever seen before, it sounds like.

14:02.360 --> 14:09.080
And Red Hat is, I feel like this is a great example of Red Hat really doing something

14:09.080 --> 14:14.200
at the, doing the really hard long-term work, especially you and people over there, you

14:14.200 --> 14:19.080
know, doing this long, hard-term work to make this possible for all Linux systems.

14:19.080 --> 14:22.920
So I mean, I know everybody's super grateful and I want to say personally, thank you, because

14:22.920 --> 14:25.600
I have some NVIDIA cards right here in the studio and this is going to make life easier

14:25.600 --> 14:26.600
for us.

14:26.600 --> 14:30.360
Is there anything we haven't touched on that you think might be relevant to the discussion?

14:30.360 --> 14:33.560
I mean, there's so much up in the air right now, any more clarity we could give?

14:33.560 --> 14:37.160
No, I think it takes just, of course, one bigger reminder is that, you know, this is

14:37.160 --> 14:39.120
not going to be an overnight fix, as we talked about.

14:39.120 --> 14:42.800
NVIDIA's driver leaves some time to start supporting all the graphics cases and of course,

14:42.800 --> 14:46.480
it will take time to do this rewrite to get everything upstream.

14:46.480 --> 14:51.920
So people should expect to be a little bit patient before this is available, but this

14:51.920 --> 14:55.320
will allow us to resolve a lot of items.

14:55.320 --> 15:01.060
And it also allows us in my team to spend our resources better, because at the moment

15:01.060 --> 15:07.320
we have Ben Skaggs, who's been a Novo maintainer, more or less working full-time on Novo.

15:07.320 --> 15:10.940
And a lot of that is sort of just, you know, in collaboration with NVIDIA, but still sort

15:10.940 --> 15:13.160
of trying to figure out how things work and so on.

15:13.160 --> 15:17.360
And I know we can maybe have him more help push Envelope forward as opposed to just sort

15:17.360 --> 15:19.600
of trying to keep Novo alive.

15:19.600 --> 15:20.600
Right.

15:20.600 --> 15:22.280
Yeah, that could be.

15:22.280 --> 15:25.280
That might be something that's, yeah, I appreciate you underscoring that.

15:25.280 --> 15:27.720
Because that could be a long-term benefit of this as well.

15:27.720 --> 15:32.640
And it seems like this is going to improve the situation for laptops too, that come with

15:32.640 --> 15:34.040
NVIDIA cards in them.

15:34.040 --> 15:37.860
And hopefully we'll be able to focus on things like, you know, maybe next year, the year

15:37.860 --> 15:42.400
after that, we're really nailing energy usage or something like that and fixing sleep and

15:42.400 --> 15:43.400
things.

15:43.400 --> 15:44.400
Yeah, exactly.

15:44.400 --> 15:47.600
I mean, and it means that, you know, we will all be sharing the same infrastructure and

15:47.600 --> 15:53.720
then, you know, this will be a lot easier for the desktop environments, right?

15:53.720 --> 15:56.360
Because eventually you can, for the most part, rely on the MESA stack for everything.

15:56.360 --> 16:00.880
So you don't need to have a special case or deal with all that OpenGL implementation

16:00.880 --> 16:04.760
behaves a bit differently in so many cases and all these kind of things that creates

16:04.760 --> 16:05.760
pain.

16:05.760 --> 16:10.160
I mean, I think overall, I'm also just excited because I think it will allow us to more quickly

16:10.160 --> 16:15.160
move forward with new features like, you know, one other big effort for graphics that we

16:15.160 --> 16:21.040
have at Reddit at the moment, right, is trying to get HDR support plumbed through the system.

16:21.040 --> 16:24.320
And that's one of these things where, you know, we need kernel drivers updated to support

16:24.320 --> 16:25.320
it.

16:25.320 --> 16:26.680
We need GNOME Shell updated to support it.

16:26.680 --> 16:29.880
We need the GTK and Qt updated to support it.

16:29.880 --> 16:33.480
So it's sort of like, and we need MESA updated to support it, we need open source Vulkan

16:33.480 --> 16:34.480
drivers to support it.

16:34.480 --> 16:38.920
So I mean, it's sort of like you need touching everywhere and then, of course, having NVIDIA

16:38.920 --> 16:42.640
being such a critical part of the graphic ecosystem not being something we can touch,

16:42.640 --> 16:46.840
but instead we have to then constantly wait for NVIDIA themselves to do updates in the

16:46.840 --> 16:50.040
binder driver means that we can, you know, push these things forward a lot easier.

16:50.040 --> 16:51.040
Right.

16:51.040 --> 16:54.360
And it's also just going to make that story better for the distributions, right?

16:54.360 --> 16:57.920
Because end users, especially new ones that are adopting Linux, they don't really appreciate

16:57.920 --> 17:00.320
where the delay is in the feature set.

17:00.320 --> 17:03.880
They don't understand that there's another vendor that has to release code.

17:03.880 --> 17:07.280
They got their desktop distro and they want that feature and they don't really care why

17:07.280 --> 17:08.280
it doesn't work.

17:08.280 --> 17:09.280
Yeah.

17:09.280 --> 17:12.520
Well, that may be a thing of the past in the near future.

17:12.520 --> 17:15.040
Christian, thanks for helping explain all of this.

17:15.040 --> 17:16.040
This is really exciting.

17:16.040 --> 17:17.960
Yeah, I'm really excited too.

17:17.960 --> 17:23.040
So I hope to hope, of course, also people who are listening in, if you are interested

17:23.040 --> 17:26.800
in helping out, I mean, you know, the Mesa community is always happy for any contributors

17:26.800 --> 17:28.920
to come along and help out.

17:28.920 --> 17:34.360
Like any open source project, there are a lot more tasks and people at any given time.

17:34.360 --> 17:35.360
No kidding.

17:35.360 --> 17:37.320
We'll put some links out to help people find all that.

17:37.320 --> 17:38.320
Thank you, Christian.

17:38.320 --> 17:39.320
Thank you.

17:39.320 --> 17:45.240
And I want to take a moment and thank our sponsors for making this reporting possible.

17:45.240 --> 17:46.240
Thank you to Linode.

17:46.240 --> 17:52.760
Go to linode.com slash land to get $100 in 60 day credit on a new account.

17:52.760 --> 17:58.840
Linode offers just the best options for developers, businesses and Linux users that don't want

17:58.840 --> 18:03.000
the complexity of hyperscalers and don't need their endless options.

18:03.000 --> 18:06.320
Linode's how we run everything we've built for the last few years in the cloud.

18:06.320 --> 18:07.960
And you can tell when you use the product.

18:07.960 --> 18:08.960
They love Linux.

18:08.960 --> 18:11.920
It's what got them going 19 years ago.

18:11.920 --> 18:16.200
And now they have some of the best services, 11 data centers around the world, 30 to 50

18:16.200 --> 18:19.720
percent cheaper than the hyperscalers that are trying to lock into their platform.

18:19.720 --> 18:24.900
They got some of the best performance, the absolute best support, and I love great features

18:24.900 --> 18:31.140
like their object storage, their clean, simple API, command line tools, cloud firewall, backups

18:31.140 --> 18:32.140
and more.

18:32.140 --> 18:33.520
So go build something.

18:33.520 --> 18:35.160
Go learn something.

18:35.160 --> 18:36.380
Try it and support the show.

18:36.380 --> 18:39.960
Get $100 by going to linode.com slash land.

18:39.960 --> 18:42.480
That's $100 for 60 days on a new account.

18:42.480 --> 18:51.840
Linux.ting.com and a big thank you to Ting for sponsoring Linux Action News.

18:51.840 --> 18:57.640
If you're sick of overpaying cell service like I was back in 2013, go to Linux.ting.com.

18:57.640 --> 19:01.440
I've been a customer since then because it's the smarter way to do mobile.

19:01.440 --> 19:07.800
Ting offers nationwide coverage, a great mix of plans and fast data on LTE and 5G on the

19:07.800 --> 19:13.040
big nationwide carrier networks, but you're interfacing with Ting, who was recently named

19:13.040 --> 19:16.420
number one by Consumer Reports in 2021.

19:16.420 --> 19:19.920
And Ting has great customer service and no contracts ever.

19:19.920 --> 19:23.840
They got a plan that works for just about anybody out there, and you're going to start

19:23.840 --> 19:25.320
saving right away.

19:25.320 --> 19:28.180
So when you go to Linux.ting.com, you check your current phone.

19:28.180 --> 19:31.900
If it's compatible, they're going to give you $25 in service credit.

19:31.900 --> 19:35.360
But if you're ready to pull the trigger and buy a new phone, they'll give you $25 towards

19:35.360 --> 19:36.360
a new device as well.

19:36.360 --> 19:39.120
You're going to be amazed how simple and quick it is to get started.

19:39.120 --> 19:42.960
They have a fantastic dashboard, and the plans are so straightforward, you're going to grok

19:42.960 --> 19:44.360
it right away.

19:44.360 --> 19:45.360
Go try it out.

19:45.360 --> 19:49.960
See why I've been using it since 2013 and why Consumer Reports says they're the best.

19:49.960 --> 19:55.640
Linux.ting.com.

19:55.640 --> 20:00.200
After we wrapped, Christian mentioned he believes this is also going to be a huge benefit for

20:00.200 --> 20:03.360
Vulkan video encoding and decoding as well.

20:03.360 --> 20:06.760
That's something I hadn't even considered or gotten excited about yet.

20:06.760 --> 20:08.560
I can only imagine, right?

20:08.560 --> 20:12.300
You got to figure that the improvements and innovation we're going to see as this code

20:12.300 --> 20:15.640
begins to land upstream is just going to multiply.

20:15.640 --> 20:18.240
Like we might not even have a full picture yet.

20:18.240 --> 20:23.800
This might just be the biggest story in Linux for 2022 that might continue to evolve with

20:23.800 --> 20:25.600
new developments all the time.

20:25.600 --> 20:27.280
I think no doubt there is more to come.

20:27.280 --> 20:31.400
So we'll keep an eye on this and everything else in the world of free and open source

20:31.400 --> 20:32.400
software.

20:32.400 --> 20:36.720
Also, be sure you go to linuxactionnews.com slash subscribe for all the ways to get new

20:36.720 --> 20:37.720
episodes.

20:37.720 --> 20:42.120
And linuxactionnews.com slash contact for ways to keep in touch.

20:42.120 --> 20:44.240
Don't miss out on the new Office Hours show.

20:44.240 --> 20:47.920
We have a summer of projects here at Jupiter Broadcasting and we're covering the details

20:47.920 --> 20:51.280
in each episode, officehours.hair, to get it.

20:51.280 --> 20:55.960
As for us, well, we'll be back next week with our take on the latest Linux and open source

20:55.960 --> 20:56.960
news.

20:56.960 --> 20:57.960
Thanks for joining us.

20:57.960 --> 21:13.840
That's all the news for this week.

