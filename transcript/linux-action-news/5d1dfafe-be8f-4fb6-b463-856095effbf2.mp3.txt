Hello and welcome to Linux Action News, episode 219 recorded on December 11th, 2021.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
We start this week with good news for GNOME users.
Just recently landing in GNOME 42's development branch is a long awaited feature.
So here's the deal, Wes.
Up until now, GNOME has been making a compromise of sorts.
It's been compressing pointer motion events so that they are synchronized to the monitor
refresh rate, which can be anywhere from 30 hertz to 144 events per second.
It depends on your particular display.
Some of my monitors are 144, a couple of them are 30, and that would set the compression
rate.
So you could really only get as many motion pointer events as your monitor was supporting.
That was the limiting factor.
But to better handle software rendering at rates higher than the native refresh rate
of your monitor, GNOME 42 is changing things up for the better.
Yeah, especially depending on your application, Wes.
So what has changed now is in version 42 and forward, GNOME will allow input events to
happen at their full input rate, regardless of the monitor refresh setting.
Now, of course, not all applications on the desktop will benefit from this change.
But applications that use the device input velocity, like as a measurement, like drawing
applications, they need as much granularity as possible.
And when events are compressed, that actually tampers with the application's calculations
of velocity, or really any application that just might render faster than say a 60 hertz
or 30 hertz monitor.
So without this change, those types of applications would spend multiple cycles, multiple frames
without seeing a motion event.
Obviously here games are another big application type that's going to benefit from this.
To keep the required calculations to a minimum, though, Mudder now caches a set of rectangles
that approximates the visible uncovered area of the actor beneath the pointer.
Now these are in the same coordinate space as input events, so comparisons are direct.
And if the pointer moves outside the expressed region, or the cache is dropped by some other
means, the actor is just looked up again, and then that new area added back to the cache.
What's landing in GNOME 42 may or may not end up being the final fix for all this, though.
The applied fix is pretty robust, but unfortunately still temporary.
A better solution is being proposed at the Wayland Library level, but, well, that's unlikely
to be ready before GNOME 42.
I'll take even a temporary fix for right now.
Carlos has done some good work here, and I'd be really interested to know, Carlos, if this
work was inspired by perhaps, oddly enough, the Steam Deck.
I'm wondering if things like this perhaps played a role in Valve's choice to go with
Plasma instead of GNOME, which would be a bit simpler for new users.
I don't know, but perhaps Carlos could reach out at linuxactionnews.com slash contact and
let us know.
But we did want to take a moment and mention that our friends over at the FreeBSD Project
released version 12.3 this week.
This is the fourth release of the Stable 12 branch, and some of the highlights include
updates to various networking drivers, several updates to upstream contributed software,
and several user applications getting improvements, and of course, those great kernel bug fixes.
Though we do realize that many of you have already moved on to FreeBSD 13, we wanted
to note the 12.3 milestone here on the show.
Systemd 250 is gearing up for release near the Christmas holiday this year, and this
week the first release candidate shipped packed full of new great gifts.
Systemd homed will now default to ButterFS's Zstandard compression, and this is a change
inspired by Fedora's recent decision to switch to Zstandard by default.
And quite excitingly, Systemd homed now makes use of UID mapped mounts.
Well, if the kernel and the file system underneath support it, files will now be internally owned
by the nobody user and then dynamically mapped to the UID used locally on the system via
that fancy new UID mapping mount logic that was added in recent kernels, something we've
talked about here on Linux Action News.
There's also support for encrypted and authenticated credentials, a whole bunch of new settings
for unit files, such as network interface restrictions, and just a whole lot more.
We'll have a link to the release notes and a write up by Michael Horrible in the show
notes.
Linode is fast and reliable cloud hosting.
You've got to try it for your next project.
It's what I've used for years, especially now that Linode has been rolling out these
MVME PCI storage upgrades on their rigs.
Oh, it's time to try it, right?
The nice thing too about Linode is it does give you that extra safety layer.
So if, like a lot of my friends out there this week, you had to do some surprise patches
on your systems, I have a little bit of like extra insurance with Linode because not only
can I manually create a snapshot, but I have just turned on the auto backup.
And the thing that I really appreciate about Linode's UI is that auto backup stuff is really
easy to just kind of suss out and see what the state of your system's backups are.
Like when it was last taken, how many backups you can go back, all of that is made super
easy to see, super easy to understand when you log in.
And that kind of peace of mind and information makes it easier for me to proceed.
Of course, the ability to just like click snapshot right now is super great as well.
And the nice thing about Linode is the dashboard's fast, the machines are fast, everything's
really quick.
So that little extra time you'll take to go into the dashboard and create that snapshot,
it's totally worth it.
And the nice thing is their API is fantastic.
You can do a lot of this stuff programmatically, or if you just like to go my route a little
lazier, use their command line tool for this kind of stuff.
Seriously think about it.
You could even have the command line tool on the server you're managing.
So you fire off the snapshot from that box and then you proceed.
There's a lot of ways and a lot of places and a lot of different types of hosting out
there.
But nobody gets it like Linode with 11 data centers around the world, 40 gigabit connections
coming into the hypervisors and 18 years plus now of doing this.
I mean, they just keep getting better and better and they've really stepped it up over
the last few years and they blew me away.
And now they've got a customer for life.
I want you to try it and take advantage of that $100 offer.
Go to linode.com slash LAN, get $100 for 60 days on a new account and you really do support
the show.
It makes a big difference for me, it makes a big difference for you and everybody wins.
linode.com slash LAN.
And thank you to Ting, linux.ting.com.
If you're sick of overpaying for cell service, go see how much you could save and then get
$25 off of that by going to linux.ting.com.
I've been a customer since 2013 and it's just a smarter way to do mobile.
It's how mobile should have to be done in the US if we had some decent regulations or
some real competition out there.
But because we got a duopoly, you really don't get to see these kind of features unless you
have somebody that comes along and brings it all together.
That's what Ting does.
They're an MVNO or a mobile virtual network operator.
They get access to the big carrier networks, but they get to layer on their superior customer
service and their superior pricing model because they don't have to pay for digging the holes
in the ground to stand up those towers.
And this Christmas marks the first year one of my kids gets a cell phone.
It's one of those things I've debated a lot about, but now that they are getting into
after school events and sports and all these kinds of things, it's becoming more and more
necessary.
And there's just no other way I'm going to go than Ting.
I love Ting's simplicity.
You can get plans to start at $10 a month, plans with unlimited talk and text and just
the right amount of data that you need.
And every plan gets access to Ting's award winning customer service with nationwide LTE
and 5G coverage, plus the freedom of no contracts ever.
It's simple to switch to Ting and it's quick.
So go to linux.ting.com.
See if your current phone will work, it probably will create an account and pick the plan that's
right for you.
And then Ting's going to send you a SIM card and you're going to get active in minutes.
Go see how simple it is and take 25 bucks off linux.ting.com.
And now we wanted to take a few moments to talk about the biggest news story this week.
The new vulnerability that's been found in the popular open source project, Log4j.
Any Java application that takes advantage of Log4j and uses the official JVM version
11 or older is impacted.
Putting that another way, it's just a huge amount of software.
Initially discovered as a Minecraft exploit, researchers have demonstrated that many popular
products and services are vulnerable.
Maybe the most infamous is simply just changing the name of one's iPhone to exploit this issue
on iCloud.
That's pretty bad.
Of course, some of us also recall the Apache Foundation tweeted that Log4j is being used
on the Mars Linux copter.
Not an easy patch, I imagine.
Thankfully though, I don't think there are too many remote connections on Mars just yet.
In short, this vulnerability stems from the fact that Log4j supports evaluating certain
lookup values before it actually writes to the log.
The most dangerous of these performs a remote JNDI lookup on a user-controlled value.
Yeah, that stands for the Java Naming and Directory Interface.
It provides an API for applications to interact with remote objects like, say, a remote lookup
in an LDAP server.
So if your application logged user-provided strings and this lookup functionality is enabled,
after a few steps, an attacker can successfully execute arbitrary code on the remote host.
Yeah, here's how that might work.
First, an attacker sends in some malicious data with one of these lookup values encoded
in it.
Then, if the server logs that data in a request, which is super common, I mean, you gotta log
user input when you're trying to track down bugs and issues later on.
Well, that malicious payload directs the server to perform a remote lookup at an attacker-controlled
address.
And yeah, LDAP is a big one you see in a lot of these example attacks that have been put
up on GitHub.
That triggers the vulnerability, log4j, the library, goes out and makes that request.
And because it's an attacker-controlled server, well, the response from that server contains
a path to a Java class file.
Well, that gets downloaded and then injected into the running server process, which, boom,
remote code execution right there.
Boom, indeed.
I'm just picturing the process the researchers went through to kind of piece all this together.
Clearly, they had some good insights on how this works.
But it's a rough one.
I mean, there's patches out, right?
But we all know this.
I hate it.
You hate it.
Everybody hates it.
But a lot of services are going to be impacted by this.
And it is versions of JVM that have been out since 2006, which means a lot of old enterprise
software is going to be impacted by it.
And I was hearing from friends and listeners all weekend that they were rushing to patch
this up over their Saturday.
Unfortunately, it's also present in a whole bunch of products that have been around for
a long time.
But Java is just everywhere, and we know those things don't get updated very regularly, if
at all.
No, no.
I think it's one of those situations where people just think of it as part of the infrastructure
and they build their applications on top of it and why ever touch it.
Even though we're only talking Java 11 here, that was from 2019.
That's actually not that long ago.
This whole thing is also about open source funding, right?
I mean, here we are again, with multiple billion dollar companies being exposed because some
small little piece of open source infrastructure hasn't really been getting funding or attention.
Yeah, this is one of those where the memes kind of put it in perspective, oddly enough.
So we'll link to a repo that collected some of the best and there's a lot of them, but
it's like these little bits of open source software that can just topple an entire empire.
And there have been several high profile examples of this one just recently in NPM.
And I actually think we're getting to a point where some of these companies like your Googles
and your Microsofts and your Apples and your Samsungs, they're actually willing to pay
developers to fix this stuff.
But it's tricky.
We've experienced this just on our own little small scale here at JB, that when you try
to pay open source developers for their time, it's not just a simple thing.
There's often international things you got to sort through.
And some developers, a lot more than you'd expect, are very picky or very restricted
in how they can get paid.
And some of them have moral obligations about what companies they will or will not work
with.
A lot of times PayPal is on the list of companies that open source developers, especially the
free software developers, just refuse to work with.
And additionally, Google and Amazon, they're not going to go and log for Jay's Patreon
and become a Patreon supporter in one of their tiers, right?
That's not how these massive companies work.
They live in the land of invoices, POs, and ACH payments, not PayPal payments, not Patreon
payments, not GitHub sponsors.
That's just not what these companies do.
They have finance departments.
They don't have individuals that have PayPal accounts that go support some developer.
So we need a way that's not a big foundation or some law firm, but some platform that lets
developers get paid in the language, in the means that these companies want to do it.
And I know this sounds odd, but I can tell you from being on this end, there has been
multiple situations where we're like, we don't have a way to pay this guy because he doesn't
want to work with PayPal or there's this restriction because of the country he's in.
And it's so much more complicated than just send them a tip.
And it gets even more complicated when you have these companies with policies and procedures
and they're used to interfacing with other businesses, not individuals.
It's a really hard problem to solve.
Yeah, you're right about that.
And you point out that sometimes foundations, maybe some sort of nonprofit, sometimes that
can work, but it also comes with its whole host of own challenges.
And it doesn't seem like it's scaled successfully.
It's those have been reactionary moves when we discover something like openness, self-vulnerability,
then we'll set up some sort of foundational structure that provides a support infrastructure.
But in the meantime, there's thousands of different open source projects out there that
aren't on anyone's radar that go along for a decade and never get any funding, just like
this one.
I'm not sure there is an easy answer, unfortunately, although, hmm, maybe, what if we start making
these patches NFTs?
There you go, NFT for a pull request, or you know what, it could be even simpler, Wes.
It could just be like a screenshot.
Yeah.
Screenshot of the get diff.
Perfect.
Yeah, they'll make 70, 80K and their whole year of development will be funded.
Why didn't they think of that?
I don't know.
Maybe until the NFT thing comes along, maybe you'd like to join a network wide membership
that we now have here, which includes every episode of Linux Action News ad free.
We're just getting that added to the feed right now.
If you go to Jupiter.party, you can sign up and for a limited time, I'm applying a holiday
discount that takes $2 off the price for a year.
It's just the price of two show memberships, but you get access to all the special feeds
for all the shows we produce here at Jupiter Broadcasting.
And it's the only way to get Linux Action News ad free.
So go to Jupiter.party and sign up for a membership.
And also you can give the gift of a Jupiter membership.
We have a gift membership option there, brand new.
We've got it all worked out.
You select the date range and you can give the gift of a Jupiter Broadcasting membership
or pick one up for yourself and take two bucks off.
It's already preloaded when you hit the link at Jupiter.party.
You've asked for it and we're finally delivering a membership.
Thank you for everyone who supports us.
We really do appreciate it.
And even if you're not in a position to support us with a network membership, we still appreciate
every single time you download the show and listen.
So be sure you go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And linuxactionnews.com slash contact for ways to keep in touch.
Check out JupiterGarage.com, just a few rando swag bags remaining.
Go grab them while you can at JupiterGarage.com.
And hey, check us out again next Monday.
We'll be back with our weekly take on the latest Linux and open source news.
Thanks for joining us.
And that's all the news for this week.
