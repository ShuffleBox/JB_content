WEBVTT

00:00.000 --> 00:16.160
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.160 --> 00:20.400
This is episode 87, recorded on January 5th, 2019.

00:20.400 --> 00:21.400
I'm Chris.

00:21.400 --> 00:22.400
And I'm Joe.

00:22.400 --> 00:23.400
Hello, Joe.

00:23.400 --> 00:24.400
I'm not laughing at our names.

00:24.400 --> 00:29.380
I'm laughing at the fact that it is the year 2019, which seems ridiculous, like it's something

00:29.380 --> 00:30.880
from a sci-fi book.

00:30.880 --> 00:34.760
But you know, we start things off with a story this week that I bet we'll be hearing about

00:34.760 --> 00:37.440
for maybe the entire year.

00:37.440 --> 00:39.760
It's Raspberry Pi joining the RISC-V Foundation.

00:39.760 --> 00:44.560
Yeah, this is very exciting, but we don't have that much information at this point.

00:44.560 --> 00:48.940
All we know is that Raspberry Pi have joined as a silver member.

00:48.940 --> 00:51.960
And really, all we've got to go on is a tweet.

00:51.960 --> 00:56.360
And they say that they're hoping to contribute to maturing the Linux kernel and Debian port

00:56.360 --> 00:59.880
for the world's leading free and open instruction set architecture.

00:59.880 --> 01:02.280
Now why would they want to do that, Joe?

01:02.280 --> 01:07.160
Well, everyone is asking, when are we going to get a RISC-V Raspberry Pi?

01:07.160 --> 01:11.000
And they've hinted that the next Raspberry Pi is going to be different.

01:11.000 --> 01:15.060
But I think that this is not a 2019 situation, is it?

01:15.060 --> 01:16.480
We're talking longer term.

01:16.480 --> 01:22.000
It takes a lot longer than that to actually go through the whole design and manufacturing

01:22.000 --> 01:23.000
process.

01:23.000 --> 01:25.160
So maybe 2020, if we're lucky.

01:25.160 --> 01:26.160
I hope you're wrong, Joe.

01:26.160 --> 01:27.160
I hope you're dead wrong, Joe.

01:27.160 --> 01:29.720
I hope it is a 2019 project.

01:29.720 --> 01:35.240
And if RISC-V has released the specs, they could, in theory, have been working on a board.

01:35.240 --> 01:41.600
I think the reason why I hope it's going to be sooner than later is for competitive reasons.

01:41.600 --> 01:46.180
It's true that Raspberry Pi is a brand, and they have a whole platform, and it's hard

01:46.180 --> 01:47.640
to contend with that.

01:47.640 --> 01:53.880
But as time goes on, the wider community is becoming more and more aware of more competitive,

01:53.880 --> 01:57.420
maybe even more capable Linux development boards.

01:57.420 --> 02:03.480
And if they don't ship something pretty impressive in 2019, I'm a little worried that they may

02:03.480 --> 02:05.160
lose their market leadership.

02:05.160 --> 02:09.480
Well, that's why I don't think they're going to ship RISC-V, because I don't think that

02:09.480 --> 02:11.000
it's got the performance that they need.

02:11.000 --> 02:16.360
They need to ship a board that is more performant than the current Raspberry Pi 3B+.

02:16.360 --> 02:20.520
And I don't think that that's going to happen with RISC-V necessarily.

02:20.520 --> 02:22.840
Certainly not at the $35 price point.

02:22.840 --> 02:28.360
Although they do have that huge buying power now, so maybe they could force that price

02:28.360 --> 02:31.600
down a little bit, but I just can't see it happening.

02:31.600 --> 02:37.160
I think that we're going to get a more powerful ARM-based Pi, possibly with better networking,

02:37.160 --> 02:39.400
possibly with faster USB.

02:39.400 --> 02:44.760
To get us through 2019, and then 2020, they drop this new, totally different system.

02:44.760 --> 02:46.320
Yeah, which would be amazing.

02:46.320 --> 02:49.960
But they've been hinting the next Raspberry Pi is going to be pretty different.

02:49.960 --> 02:50.960
That's true.

02:50.960 --> 02:53.440
They have hinted that, and I hope that I'm wrong.

02:53.440 --> 02:59.600
I hope that they've been working with RISC-V for a long time, and are almost ready to drop

02:59.600 --> 03:06.920
it and come spring, we'll get a RISC-V-based Pi, and it'll be super powerful and at $35.

03:06.920 --> 03:14.160
But I just can't see how all those pieces fit together, but then I'm not on the inside.

03:14.160 --> 03:16.640
Maybe there are ways that they've made that happen.

03:16.640 --> 03:19.440
And if they can, that would be so good for RISC-V.

03:19.440 --> 03:23.880
It would mean that they would just drive forward the adoption so much, because they could potentially

03:23.880 --> 03:27.680
sell hundreds of thousands of these very, very quickly.

03:27.680 --> 03:32.640
And think about the benefits upstream to Debian, and overall the benefits to Linux upstream

03:32.640 --> 03:34.220
for RISC-V support.

03:34.220 --> 03:38.900
The benefits alone to the Linux ecosystem would be huge.

03:38.900 --> 03:43.880
The reason why I really hope it's this next product, and the more you talk about it, the

03:43.880 --> 03:48.320
more I think you're probably right, and the more I think I'm being a little ambitious.

03:48.320 --> 03:53.520
But the reason why I feel like it'd be really great is it's such perfect timing to contribute

03:53.520 --> 03:55.760
those improvements back upstream.

03:55.760 --> 04:00.300
And just to keep the RISC-V momentum going, and Linux support momentum going, if you could

04:00.300 --> 04:06.160
have a large user base, like the Raspberry Pi potential purchasers in the Raspberry Pi

04:06.160 --> 04:07.640
community, that's a pretty big user base.

04:07.640 --> 04:11.400
I would definitely buy one of these RISC-V Raspberry Pis, I mean just think about that

04:11.400 --> 04:12.400
for a moment.

04:12.400 --> 04:17.760
A RISC-V powered Raspberry Pi, that's a great idea.

04:17.760 --> 04:22.480
I would totally buy that product, even if it was $75 I'd buy that product.

04:22.480 --> 04:26.520
And if even a few hundred thousand people thought that, it doesn't have to be millions,

04:26.520 --> 04:30.360
even a few hundred thousand thought that, that could result in significant upstream

04:30.360 --> 04:35.240
improvements to Linux's total support for the RISC-V platform.

04:35.240 --> 04:38.240
I hope that happens in 2019, I think that's important.

04:38.240 --> 04:42.360
Well it would be great, and if that did happen, and they did put out a Pi that was RISC-V

04:42.360 --> 04:48.720
based, it would mean that at first we'd only have their own OS, Braspbian, which is effectively

04:48.720 --> 04:52.880
Debian, but then potentially we'd see ports of other, you know, we'd probably get an Arch

04:52.880 --> 04:56.720
version for it, and various other distros as well.

04:56.720 --> 05:02.880
Oh absolutely, yeah absolutely, of course, I think that's the best part about this.

05:02.880 --> 05:07.320
And it really gets me excited for non-Intel platforms for Linux for 2019.

05:07.320 --> 05:12.480
So maybe things will go in a good direction, but long term, if I'm patient, we're probably

05:12.480 --> 05:14.000
going to get some great results.

05:14.000 --> 05:17.760
Maybe you're right, maybe it won't be 2019, maybe it is 2020, but in the end we'll probably

05:17.760 --> 05:19.440
still get the same benefit.

05:19.440 --> 05:22.720
Well something that gives me hope that they are taking the whole open source thing a little

05:22.720 --> 05:27.600
bit more seriously these days is that they finally managed to get the driver for the

05:27.600 --> 05:32.040
touchscreen, the official Raspberry Pi touchscreen, into the mainline kernel for the upcoming

05:32.040 --> 05:33.040
4.21 release.

05:33.040 --> 05:40.600
Yeah, this is the 7 inch touchscreen monitor, it's like an 800x480 display, and it's a decent

05:40.600 --> 05:47.880
touchscreen really, it's got like 10 finger touch support and all of that, but until 4.21

05:47.880 --> 05:52.480
we haven't had mainline support, and that driver enables support for the touchscreen.

05:52.480 --> 05:57.480
The patch itself is like 200 lines of code, you will have to be running that 4.21 kernel,

05:57.480 --> 06:00.520
but that's pretty close, it'll be here sooner than we think.

06:00.520 --> 06:04.280
Yeah, this is long overdue, but it's good to see it finally happening.

06:04.280 --> 06:09.000
Well while we're talking about alternatives to Intel architectures, MIPS is going open

06:09.000 --> 06:10.000
source.

06:10.000 --> 06:13.840
Yeah, this happened over the holidays, kind of after we'd recorded our holiday specials,

06:13.840 --> 06:18.840
so it's not exactly new news at this point, but it is very good news I think, because

06:18.840 --> 06:25.440
it means that we've got a competitor to RISC-V, which is presumably only going to drive innovation.

06:25.440 --> 06:30.320
Absolutely, and it looks like a company called Wave Computing is pushing this forward, they

06:30.320 --> 06:32.160
write on their blog.

06:32.160 --> 06:37.520
Under the MIPS open program, participants will have full access to most recent versions

06:37.520 --> 06:45.480
of 32-bit and 64-bit MIPS ISAs, free of charge, with no licensing or royalty fees.

06:45.480 --> 06:50.640
Additionally, participants in the MIPS program will be licensed under MIPS's hundreds of

06:50.640 --> 06:54.040
existing worldwide patents, everybody loves that.

06:54.040 --> 06:59.240
The open initiative will help greatly expand the existing MIPS ecosystem, they write, which

06:59.240 --> 07:06.160
is comprised of thousands of developers and hundreds of academic institutions worldwide.

07:06.160 --> 07:09.800
The MIPS architecture I think does have a pretty large install base, Joe, I mean, you

07:09.800 --> 07:14.760
look at a lot of routers that are in everybody's homes and small business routers, a lot of

07:14.760 --> 07:19.960
those are MIPS-based, switches, a lot of those are MIPS-based, but I can't help but feel

07:19.960 --> 07:23.060
maybe they should have done this a few years ago.

07:23.060 --> 07:28.320
This whole thing is really positioned at AI and machine learning about how MIPS has a

07:28.320 --> 07:29.320
play in the future.

07:29.320 --> 07:36.520
In fact, Wave Computing themselves is an AI machine learning company, and they just early

07:36.520 --> 07:43.820
December raised $86 million in a Series E round of investment, which brings the total

07:43.820 --> 07:50.840
investment into the company at more than $200 million in VC funding to back this company,

07:50.840 --> 07:55.240
which claims to be powering the next generation of AI.

07:55.240 --> 07:56.240
That's their pitch.

07:56.240 --> 07:58.840
And they're going to do that with MIPS, good luck with that.

07:58.840 --> 08:03.360
That's what they say, they say they're going to combine their system with MIPS.

08:03.360 --> 08:09.860
They have a very buzz-heavy explanation on their website, they say, by combining the

08:09.860 --> 08:16.440
data flow of Wave Computing's architecture with its MIPS-embedded RISC multi-threaded

08:16.440 --> 08:22.320
CPU cores and IP, which I don't think stands for Internet Protocol in this case, Wave Computing

08:22.320 --> 08:28.560
has been named Frost and Sullivan's 2018 machine learning industry technology innovation leader

08:28.560 --> 08:33.880
and recognized by CEO Application Magazine as one of the top 25 artificial intelligence

08:33.880 --> 08:34.880
providers.

08:34.880 --> 08:40.440
Combined with MIPS, we now have 400 granted and pending patents for hundreds of customers

08:40.440 --> 08:41.440
worldwide.

08:41.440 --> 08:46.520
In other words, they have some sort of proprietary IP machine learning system that will be powered

08:46.520 --> 08:49.720
by RISC multi-threaded CPU cores.

08:49.720 --> 08:53.920
That's pretty much all they say, you got to parse a lot to just get down to that.

08:53.920 --> 08:58.440
But the question is, will anyone else start using MIPS as a result of this?

08:58.440 --> 09:03.320
Because MIPS is legacy at this point, RISC-V is this new shiny thing that's getting all

09:03.320 --> 09:05.200
the attention.

09:05.200 --> 09:08.040
So does it really matter that they're doing this?

09:08.040 --> 09:09.160
Who knows?

09:09.160 --> 09:12.420
They'd have to have some sort of massive market demonstration, wouldn't they?

09:12.420 --> 09:13.760
Something that really proves it out?

09:13.760 --> 09:17.680
Well, we'd like to think about this as open source and freedom and all of that.

09:17.680 --> 09:21.800
But the reality is, the kind of companies who are going to take advantage of this don't

09:21.800 --> 09:23.640
really care about that aspect.

09:23.640 --> 09:25.720
They just care that it's free as in beer.

09:25.720 --> 09:31.000
And if they're going to make a router or whatever, then not have to pay anyone for the license

09:31.000 --> 09:38.220
to use the instruction set, well, that is potentially going to end up with a lot of

09:38.220 --> 09:44.320
lower end routers and stuff like that being made with it, which I suppose is good in a

09:44.320 --> 09:49.440
way, but it's not exactly going to drive a ton of innovation, I don't think.

09:49.440 --> 09:53.760
But this AI stuff potentially could, I don't know.

09:53.760 --> 09:56.560
It sounds like an easy way to get VC funding to me.

09:56.560 --> 09:57.560
Just say AI.

09:57.560 --> 10:00.640
It used to be VR and stuff, now it's AI, machine learning.

10:00.640 --> 10:01.640
And blockchain.

10:01.640 --> 10:02.640
Yeah, blockchain.

10:02.640 --> 10:04.700
Although that's not doing very well, as we know.

10:04.700 --> 10:09.000
I think they have a good chunk of money.

10:09.000 --> 10:13.000
Like you commonly like to say about Mozilla, they have a fair chunk of money to spend on

10:13.000 --> 10:16.880
this and they could drive this forward and they could surprise us yet.

10:16.880 --> 10:22.160
But I think the people this will be probably the most applicable to will be the ones that

10:22.160 --> 10:27.080
have a DeLorean that can go back in time when MIPS was still really relevant and proceed

10:27.080 --> 10:28.080
forward.

10:28.080 --> 10:33.200
They really should have done this five, three maybe at the minimum years ago.

10:33.200 --> 10:37.020
And this feels like a catch up move now, for better or for worse, we'll see.

10:37.020 --> 10:41.240
They may still yet pull this one off and they have some money to burn trying to do it.

10:41.240 --> 10:44.760
But it appears that they're not the only ones with some money to burn.

10:44.760 --> 10:50.920
Yeah, the good old EU are going to put some money into bug bounties for 14 open source

10:50.920 --> 10:51.920
projects.

10:51.920 --> 10:52.920
Yeah, how about that?

10:52.920 --> 10:56.760
The European Commission in January will be funding 14 bug bounty programs in hopes of

10:56.760 --> 11:00.320
sniffing out vulnerabilities in different open source projects.

11:00.320 --> 11:06.240
It starts with a few favorites having varying levels of rewards and end dates and different

11:06.240 --> 11:13.600
platforms FileZilla, Apache, Notepad++, PuTTY, VLC Media Player.

11:13.600 --> 11:17.280
They're all starting this week, January 7.

11:17.280 --> 11:22.200
Now this whole initiative stems back to the free and open software audit project that

11:22.200 --> 11:29.040
first kicked off after the Heartbleed vulnerability was discovered in OpenSSL back in 2014, which

11:29.040 --> 11:30.920
doesn't feel like it was that long ago, really.

11:30.920 --> 11:31.920
It doesn't.

11:31.920 --> 11:36.200
It feels like a couple of years ago, but no, I think we're getting old, man.

11:36.200 --> 11:39.960
I think that might be true.

11:39.960 --> 11:46.300
PuTTY and Drupal, they have the two largest bug bounties, 102,000 and 101,000 respectively.

11:46.300 --> 11:48.500
And the timeframes of the bug bounties also vary.

11:48.500 --> 11:52.880
PuTTY's bug bounty program will remain active until December 15, while Drupal's will go

11:52.880 --> 11:55.480
until October 15 of 2020.

11:55.480 --> 11:58.060
So that's considerably longer.

11:58.060 --> 12:02.240
But I'm not convinced this is money well spent in the least.

12:02.240 --> 12:05.160
In fact, I'm worried this could cause developer burnout.

12:05.160 --> 12:10.360
But because all these bugs will get raised, and then they won't necessarily get fixed.

12:10.360 --> 12:12.600
It'll just be more workload on the devs.

12:12.600 --> 12:13.600
Exactly.

12:13.600 --> 12:15.680
This seems like it could have massive reception.

12:15.680 --> 12:20.400
When you have a government running a bug bounty program, people are going to notice that.

12:20.400 --> 12:22.720
And you're going to have a lot of people going after that.

12:22.720 --> 12:25.760
And let's say they find lots of great juicy bugs.

12:25.760 --> 12:26.940
Okay, yay.

12:26.940 --> 12:31.800
But none of this money goes to pay a single developer to fix those bugs.

12:31.800 --> 12:36.720
You'll just get bug trackers packed full of really critical bugs, with no one working

12:36.720 --> 12:38.360
on them.

12:38.360 --> 12:44.440
And it seems like this money would be much better well spent hiring a few developers

12:44.440 --> 12:47.320
to fix this stuff in these open source projects.

12:47.320 --> 12:52.400
Like sure, do the bug bounty thing, but set a few hundred thousand aside to hire actual

12:52.400 --> 12:53.400
developers too.

12:53.400 --> 12:58.260
Yeah, this is a shame really, it feels a little bit sort of knee jerk and not like they've

12:58.260 --> 13:03.080
thought it through properly, that it's not enough to just find the bugs.

13:03.080 --> 13:09.280
They should really have set up a proper system where you only get paid if you fix the bugs.

13:09.280 --> 13:14.940
Or as you say, maybe two systems, set aside some more money for people who can then actually

13:14.940 --> 13:19.720
fix them and maybe have it be twice as much as it is to find it or whatever.

13:19.720 --> 13:24.200
Because this ultimately, I mean, there will be some benefit from it, but it's ultimately

13:24.200 --> 13:26.760
not going to be as much benefit as we could have.

13:26.760 --> 13:28.840
Yeah, I'm definitely conflicted about this.

13:28.840 --> 13:31.180
I see the value in bug bounty programs.

13:31.180 --> 13:35.200
But in this particular case, it needs to be a more comprehensive program.

13:35.200 --> 13:39.360
I feel like if nothing changes, and this is the only way government figures out how to

13:39.360 --> 13:44.720
spend money on open source, then it's a failure and it's doomed to fizzle out and not produce

13:44.720 --> 13:46.080
anything.

13:46.080 --> 13:51.200
But if they can figure out how to make a comprehensive approach, where maybe some of this money is

13:51.200 --> 13:56.220
going towards development activity to fix these problems, then that starts to secure

13:56.220 --> 13:59.680
government systems, that starts to secure public systems.

13:59.680 --> 14:03.080
That's money well spent from the administrative level.

14:03.080 --> 14:06.360
Then all of a sudden, it's something I would be really impressed by and say we should adopt

14:06.360 --> 14:07.900
here in the US.

14:07.900 --> 14:11.440
Maybe this is early days, and it will develop into something like that.

14:11.440 --> 14:15.400
Maybe they will receive some of this feedback and make changes.

14:15.400 --> 14:16.400
Or maybe not.

14:16.400 --> 14:19.400
We just have to wait and see as so often with these kinds of stories.

14:19.400 --> 14:24.840
But it's a good first start finding these bugs and reporting them at least gives users

14:24.840 --> 14:26.920
information to make decisions.

14:26.920 --> 14:29.040
And it lets developers know what needs to be addressed.

14:29.040 --> 14:32.200
Whether they can address it or not, it's good to at least identify those problems.

14:32.200 --> 14:36.320
So from that perspective, I'm at least glad something like this is going on.

14:36.320 --> 14:38.360
And these are pretty good projects to start with.

14:38.360 --> 14:43.800
Yeah, I mean, the dream is that governments will spend money writing free software in

14:43.800 --> 14:46.120
the first place.

14:46.120 --> 14:47.460
But I think that's a long way off.

14:47.460 --> 14:51.520
This is, as you say, a first step, maybe towards that one day.

14:51.520 --> 14:56.240
Well, for the story that made me the most uncomfortable this week, it appears that Mozilla

14:56.240 --> 15:02.640
spent the holiday season, quote unquote, experimenting with more ads in Firefox.

15:02.640 --> 15:07.920
Yeah, this is one of the snippets on the new tab page, which you can disable but is enabled

15:07.920 --> 15:09.240
by default.

15:09.240 --> 15:14.240
And Mozilla claim that it's not an advert, because it's effectively an affiliate link.

15:14.240 --> 15:15.560
But there's a bit of a blurred line there.

15:15.560 --> 15:18.400
It's kind of splitting as to say it's not an advert.

15:18.400 --> 15:22.720
And it's a bit disappointing, but then again, Mozilla needs to make money.

15:22.720 --> 15:27.240
The huge stash of cash that they've got at the moment isn't going to last forever.

15:27.240 --> 15:29.600
And Google will eventually pull the plug on them.

15:29.600 --> 15:32.960
So they need to do some experiments with bringing in new revenue.

15:32.960 --> 15:37.480
And we saw them do that with the VPN thing before, which was effectively an affiliate

15:37.480 --> 15:39.000
link.

15:39.000 --> 15:45.680
And this time, it's a hotel booking and getting a free Amazon gift card, which it's not too

15:45.680 --> 15:46.680
offensive.

15:46.680 --> 15:52.200
It's not like gambling sites and, you know, porn and stuff like that.

15:52.200 --> 15:54.280
There is a bit of an offensive element to it.

15:54.280 --> 15:55.280
I kind of disagree.

15:55.280 --> 15:56.280
All right.

15:56.280 --> 15:59.640
So just I want to make sure everybody's clear what we're talking about here.

15:59.640 --> 16:05.800
Just recently, about 25% of the United States audience who was using the latest version

16:05.800 --> 16:07.180
of Firefox.

16:07.180 --> 16:11.960
It's a decent chunk of people, but it's not all of the Firefox users in the United States.

16:11.960 --> 16:17.280
What they were seeing is a booking.com snippet that ran for five days and ended on December

16:17.280 --> 16:18.280
30th.

16:18.280 --> 16:24.720
But what is kind of offensive about it is the manipulative tone that was there.

16:24.720 --> 16:26.640
So picture it, you're on your new tab page.

16:26.640 --> 16:31.240
The ad appears at the bottom of Firefox's new tab page on your desktop version with

16:31.240 --> 16:36.600
a little message in a gray box and it says, find a hotel.

16:36.600 --> 16:41.360
And it's got a button on it that you can click that will take you to a booking.com page.

16:41.360 --> 16:45.840
And the button says, are you ready to schedule that next family reunion?

16:45.840 --> 16:48.080
Here's a thank you from Firefox.

16:48.080 --> 16:54.160
Book your next hotel stay on booking.com today and get a free $20 Amazon gift card.

16:54.160 --> 16:56.240
Happy holidays from Firefox.

16:56.240 --> 16:58.000
Some restrictions apply.

16:58.000 --> 17:04.080
And there was also a second version of that message that read, for the holidays, we have

17:04.080 --> 17:07.080
a little something just for using Firefox.

17:07.080 --> 17:13.240
Book your next hotel stay on booking.com today and get a free $20 Amazon gift card.

17:13.240 --> 17:15.200
Happy holidays from Firefox.

17:15.200 --> 17:16.400
Restrictions apply.

17:16.400 --> 17:19.200
And Firefox is positioning this as not an ad.

17:19.200 --> 17:25.160
They say the snippet was an experiment to provide more value to Firefox users through

17:25.160 --> 17:28.060
offers provided by a partner.

17:28.060 --> 17:30.780
It was not a paid placement or an advertisement.

17:30.780 --> 17:35.720
We are continually looking for ways to say thank you for using Firefox.

17:35.720 --> 17:40.640
In a similar vein, earlier this month, we offered Firefox users a free opportunity to

17:40.640 --> 17:43.840
enjoy a live concert from Phosphorescent.

17:43.840 --> 17:48.860
In addition to adding value to Firefox users, these efforts are intended to support an open

17:48.860 --> 17:50.460
ecosystem.

17:50.460 --> 17:55.280
When users see such offers, no data is being shared with partners until users have made

17:55.280 --> 17:58.020
a choice to enter a relationship.

17:58.020 --> 18:00.520
We hope this strategy sets a positive example.

18:00.520 --> 18:02.320
It's a little creepy, Joe.

18:02.320 --> 18:07.520
It's advertising, but they're telling you it's a gift.

18:07.520 --> 18:11.240
They literally say it was not a paid placement or advertisement.

18:11.240 --> 18:15.120
We're continually looking for more ways to say thanks for using Firefox.

18:15.120 --> 18:16.120
It's a free gift.

18:16.120 --> 18:19.920
Well, yeah, it was an affiliate link.

18:19.920 --> 18:25.520
And they should have just owned that fact that, yeah, we are experimenting with affiliate

18:25.520 --> 18:26.520
links now.

18:26.520 --> 18:29.400
They could maybe get an Amazon one going in there.

18:29.400 --> 18:32.720
That works out really well, doesn't it, for everyone?

18:32.720 --> 18:33.720
Yeah, yeah.

18:33.720 --> 18:34.720
What could go wrong there?

18:34.720 --> 18:36.760
I mean, I like the idea.

18:36.760 --> 18:43.360
The dream is like an artisan group at the Mozilla Corporation making intelligent choices

18:43.360 --> 18:48.920
with small batch advertisement deals, organically sourced with no data transferred, protecting

18:48.920 --> 18:55.080
everybody in the whole process, and somehow providing a solid revenue stream for Firefox

18:55.080 --> 19:00.360
and lining Firefox users up exactly with what they want, like hotels and live concerts.

19:00.360 --> 19:04.380
I mean, the idea, Joe, it's just so gosh darn beautiful I want to cry.

19:04.380 --> 19:08.960
And I just love it so much because Firefox, they must continue.

19:08.960 --> 19:09.960
But it sounds like horseshit.

19:09.960 --> 19:10.960
It sounds like complete horseshit.

19:10.960 --> 19:12.320
It never works like that.

19:12.320 --> 19:14.100
It's always about trying to make a buck.

19:14.100 --> 19:21.240
And it feels like the worst timing possible, with WebKit totally dominating the web.

19:21.240 --> 19:29.600
And now Microsoft announcing that they're switching Edge over to Blink, man, it's really

19:29.600 --> 19:33.640
just the worst time ever to be messing around with this kind of stuff.

19:33.640 --> 19:37.220
And I understand they've got to make money, and I appreciate that struggle.

19:37.220 --> 19:41.360
But whew, not the best time to be the browser known for having ads.

19:41.360 --> 19:45.160
Do you think that maybe in a couple of years people will refer to Firefox as, oh, that's

19:45.160 --> 19:49.440
that browser with the Casper mattresses adverts and Squarespace and everything?

19:49.440 --> 19:51.400
It could be.

19:51.400 --> 19:52.400
But they're GIFs.

19:52.400 --> 19:53.400
They're not advertisements.

19:53.400 --> 19:54.400
Yeah.

19:54.400 --> 20:00.880
Well, one way that Mozilla found to cut costs was to more or less get rid of Thunderbird.

20:00.880 --> 20:05.920
And we thought that that was kind of the end for it, and it would kind of fizzle out and

20:05.920 --> 20:06.920
die.

20:06.920 --> 20:12.200
But then Ryan Sipes, who's co-hosted this show with us a long time ago, or with me at

20:12.200 --> 20:15.160
least, he was hired as their community manager.

20:15.160 --> 20:19.920
And he seems to be doing good things over there, because it's looking good for Thunderbird

20:19.920 --> 20:20.920
in 2019.

20:20.920 --> 20:27.760
Yeah, 2019 could shape up to be a year where they see their team grow to 14 members, improvements

20:27.760 --> 20:34.400
in the UI, but also some lower level of re-architecting to make things a little more multi-process.

20:34.400 --> 20:40.920
And improved support for Gmail, including Gmail label support, which as Ryan writes

20:40.920 --> 20:45.520
here in the blog post, reality is Gmail is just one of the largest email providers out

20:45.520 --> 20:46.520
there.

20:46.520 --> 20:47.520
So we need to support them better.

20:47.520 --> 20:53.320
Better UI, re-architecting to support multi-processors a bit better, and improved Gmail support,

20:53.320 --> 20:58.040
that's going to make Thunderbird a little more competitive, if nothing else.

20:58.040 --> 21:04.120
I guess that kind of sounds like faint praise when I say it out loud, I suppose.

21:04.120 --> 21:08.080
Well and potential improvements around email encryption and stuff, which has got to be

21:08.080 --> 21:09.080
good.

21:09.080 --> 21:10.440
Yes, that would be really good.

21:10.440 --> 21:14.520
How much longer do we have to wait until we have a decent implementation in our email

21:14.520 --> 21:15.520
clients for GPG?

21:15.520 --> 21:20.160
Like, it's 2019, let's have this solved, please, before 2020 arrives.

21:20.160 --> 21:24.560
But it feels a bit of an antiquated idea to have a standalone mail client to me.

21:24.560 --> 21:27.560
Surely everyone's using webmail at this point.

21:27.560 --> 21:28.560
Maybe I'm wrong.

21:28.560 --> 21:30.440
Certainly in enterprise, I suppose I might be wrong.

21:30.440 --> 21:33.960
But even then, a lot of companies using G Suite, aren't they?

21:33.960 --> 21:38.720
So it just seems like a kind of legacy product at this point.

21:38.720 --> 21:39.720
Perhaps.

21:39.720 --> 21:43.160
But that's Thunderbird's fault to begin with, really.

21:43.160 --> 21:45.520
It's their fault for sitting around for so long.

21:45.520 --> 21:50.440
And then, frankly, competitively speaking, getting their ass kicked by web apps.

21:50.440 --> 21:51.440
Think about that.

21:51.440 --> 21:57.040
A native desktop mail client got its ass kicked by webmail.

21:57.040 --> 21:58.040
It's not good.

21:58.040 --> 21:59.360
It's not a pretty picture.

21:59.360 --> 22:01.880
Gmail shouldn't be the largest mail client.

22:01.880 --> 22:04.000
It shouldn't be the reality of it.

22:04.000 --> 22:05.680
It should be open source Thunderbird.

22:05.680 --> 22:08.140
An open source free email client?

22:08.140 --> 22:11.640
If you would have told my folks back in the day that were dialing up to check their Juno

22:11.640 --> 22:15.640
email that something free would come along that could do everything Thunderbird could

22:15.640 --> 22:16.720
do, they would have switched immediately.

22:16.720 --> 22:18.960
It was Thunderbird's game to lose.

22:18.960 --> 22:21.320
And they lost it.

22:21.320 --> 22:26.000
And so now, we just have to wait and see if in 2019, if they can make these improvements

22:26.000 --> 22:27.000
and bring it back.

22:27.000 --> 22:28.000
I hope so.

22:28.000 --> 22:29.920
Because I think it's better in a native mail client.

22:29.920 --> 22:33.160
That's something I've just, in the last three months, have switched up to again as I've

22:33.160 --> 22:35.320
gone back to using all native mail clients.

22:35.320 --> 22:37.160
And it's just, I like it so much better.

22:37.160 --> 22:38.800
The performance is better.

22:38.800 --> 22:41.480
Offline mail capabilities, obviously nice.

22:41.480 --> 22:44.360
Having your calendar with you is great.

22:44.360 --> 22:45.360
It's just the way to go.

22:45.360 --> 22:48.560
So I hope Thunderbird is able to turn it around because they should be setting the pace, not

22:48.560 --> 22:49.560
catching up.

22:49.560 --> 22:52.800
Yeah, I was a little bit worried at one point that they were going to go away.

22:52.800 --> 22:56.880
Because I set my dad up with Thunderbird, it must be about five, six, maybe even more

22:56.880 --> 22:59.540
years ago on Windows.

22:59.540 --> 23:02.400
And I've never heard any problems regarding that.

23:02.400 --> 23:03.680
And he's just been using it.

23:03.680 --> 23:08.800
And I'd hate to have to try and migrate him to something else with that many emails on

23:08.800 --> 23:09.800
Thunderbird.

23:09.800 --> 23:10.800
Yep, it's good.

23:10.800 --> 23:13.440
Thunderbird is a good email client.

23:13.440 --> 23:18.560
And that's why it should have a better market presence and much wider adoption than it has.

23:18.560 --> 23:21.520
So I really hope they can fix that because it's a shame.

23:21.520 --> 23:25.500
And I think they just didn't make it competitive enough.

23:25.500 --> 23:28.260
And those of us that liked a traditional mail client, we were happy.

23:28.260 --> 23:32.800
But people who wanted something new or different or whatever Gmail is offering the other ones,

23:32.800 --> 23:34.440
they just didn't offer that.

23:34.440 --> 23:35.920
And maybe that can change a bit.

23:35.920 --> 23:37.920
Maybe the UI can change.

23:37.920 --> 23:43.520
But when it comes to catching up, there's one project that has a whole lot of catching

23:43.520 --> 23:44.520
up to do.

23:44.520 --> 23:45.520
And that is FreeBSD.

23:45.520 --> 23:50.740
The tables have turned, my friends, after years of all of us being told that the only

23:50.740 --> 23:56.160
one and true implementation for the ZFS file system was on FreeBSD.

23:56.160 --> 24:03.360
It turns out that they'll be rebasing their implementation of ZFS on the ZFS for Linux

24:03.360 --> 24:04.360
project.

24:04.360 --> 24:07.400
Well, yeah, because obviously Linux is way better than FreeBSD.

24:07.400 --> 24:09.080
Everyone knows that.

24:09.080 --> 24:10.080
Everybody knows that.

24:10.080 --> 24:11.080
All right.

24:11.080 --> 24:15.680
Well, that's our trolling for the probably for the whole year.

24:15.680 --> 24:17.080
This is actually kind of big news.

24:17.080 --> 24:21.680
In fact, I'm still trying to parse what this is really going to mean like long term.

24:21.680 --> 24:26.180
I've invited somebody who's involved in the ZFS leadership to join us on a future Linux

24:26.180 --> 24:29.800
Unplugged to really break this down and talk about what that's going to mean downstream

24:29.800 --> 24:31.080
for distributions.

24:31.080 --> 24:33.240
So look for that in a future Linux Unplugged.

24:33.240 --> 24:36.080
But right now, here's what we do know.

24:36.080 --> 24:42.240
The past few years, the vast majority of new development in ZFS has taken place in Delphix

24:42.240 --> 24:45.320
OS or in ZFS on Linux.

24:45.320 --> 24:50.560
Delphix OS simply because they're one of the main contributors to ZFS and ZFS on Linux

24:50.560 --> 24:55.120
simply because of the massive install base of Linux.

24:55.120 --> 25:01.580
And earlier this year, Delphix announced that they will be moving their work to the ZFS

25:01.580 --> 25:03.600
on Linux code base.

25:03.600 --> 25:09.460
What FreeBSD and the Lumos and many other downstream projects that ship ZFS were basing

25:09.460 --> 25:15.160
their implementation of ZFS on is that Delphix stuff and that stuff that made into Lumos,

25:15.160 --> 25:17.920
not the ZFS on Linux stuff.

25:17.920 --> 25:23.240
The issue is there's some work that's been done in ZFS on Linux and bug fixes that haven't

25:23.240 --> 25:30.280
made it upstream to the other projects, things like encryption and issues like bugs that

25:30.280 --> 25:35.280
would cause lockups that have been fixed on ZFS for Linux and not upstream.

25:35.280 --> 25:38.760
The ZFS for Linux has been getting better and better over time.

25:38.760 --> 25:41.300
Yeah, it sounds like it's stagnated.

25:41.300 --> 25:45.200
And this is a pragmatic decision that they just had to take.

25:45.200 --> 25:51.280
And I would imagine that they've taken it through gritted teeth, but it had to happen.

25:51.280 --> 25:55.240
And I suppose the BSD people are generally more pragmatic, aren't they?

25:55.240 --> 25:58.940
With the whole permissive licensing and everything.

25:58.940 --> 26:03.960
So it shouldn't be a surprise, but it's still excellent trolling material.

26:03.960 --> 26:04.960
It is.

26:04.960 --> 26:06.680
It really is.

26:06.680 --> 26:10.460
And they have a few things in their favor here.

26:10.460 --> 26:15.120
One thing is that they have consensus at a leadership level that this is the direction

26:15.120 --> 26:16.120
to go.

26:16.120 --> 26:20.960
The other thing that they have in their favor is IX Systems is willing to put personnel

26:20.960 --> 26:23.900
behind quality testing this.

26:23.900 --> 26:27.120
In fact, in the original announcement, they talk about some of the testing that IX will

26:27.120 --> 26:32.720
be doing about moving test suites over from the free BSD version to the Linux version,

26:32.720 --> 26:35.040
merging some of those changes upstream.

26:35.040 --> 26:41.640
And as you and I are recording this episode, there is a new ZFS on BSD project, which is

26:41.640 --> 26:44.460
based on ZFS for Linux.

26:44.460 --> 26:48.680
The way free BSD worked before is they pulled from Illumos down into free BSD, and then

26:48.680 --> 26:52.780
they worked on it in their own little fiefdom.

26:52.780 --> 26:58.560
Now they're going to essentially do the same thing, but with ZFS on Linux as their upstream.

26:58.560 --> 27:02.800
And the neat thing is that IX is sort of helping with some of this with TrueOS.

27:02.800 --> 27:05.600
I talked about it after I went to meet BSD.

27:05.600 --> 27:12.840
It's like a BSD system that IX Systems maintains that is essentially free BSD at the core,

27:12.840 --> 27:17.160
but can be used to quickly build other kinds of free BSD distros and build stuff on top

27:17.160 --> 27:18.160
of it.

27:18.160 --> 27:21.440
And that's what they're using for like their free NAS and true NAS appliances.

27:21.440 --> 27:26.560
That's what Chris Moore and his team are using to build their Trident desktop.

27:26.560 --> 27:31.640
It's sort of like a meta distribution that you can create your own different free BSD

27:31.640 --> 27:32.920
based distros from.

27:32.920 --> 27:39.200
And with that, they are helping test and quality assure this transition.

27:39.200 --> 27:43.840
And it looks like the upstream project ZFS on BSD has already been set up.

27:43.840 --> 27:47.680
The code's very much a work in progress, but the folks at IX Systems have begun spinning

27:47.680 --> 27:53.080
up daily snapshots of their free BSD TrueOS platform with the new ZFS code that's based

27:53.080 --> 27:54.680
on the ZFS for Linux.

27:54.680 --> 27:56.800
So it's happening very fast.

27:56.800 --> 28:00.440
This is a perfect example of why they made those changes to TrueOS in the first place

28:00.440 --> 28:03.200
so that they could be agile.

28:03.200 --> 28:07.760
And immediately after this announcement was made, it's available for testing.

28:07.760 --> 28:11.920
So if you are one of those unfortunate people stuck using free BSD, you can get testing

28:11.920 --> 28:12.920
this straight away.

28:12.920 --> 28:20.840
Yeah, it turns out one of the larger implementations right now of ZFS is actually on RHEL and CentOS.

28:20.840 --> 28:24.400
So yeah, I have so, so many questions after this.

28:24.400 --> 28:27.660
That's why I'm going to just dedicate some time in Linux Unplugged to like really deep

28:27.660 --> 28:33.280
diving into this and what this means for ButterFS and all of that.

28:33.280 --> 28:34.920
This is fascinating for me.

28:34.920 --> 28:37.040
But all of that is for future content.

28:37.040 --> 28:39.840
For now, that'll bring us to the end of this week's Linux Action News.

28:39.840 --> 28:44.400
You can go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

28:44.400 --> 28:48.040
And go to linuxactionnews.com slash contact for ways to get in touch with us.

28:48.040 --> 28:52.520
We'll be back next Monday with our weekly take on the latest Linux and open source news.

28:52.520 --> 28:54.360
I'm at Chris LAS.

28:54.360 --> 28:56.040
I'm at Joe Racington.

28:56.040 --> 28:58.680
Thank you for joining us and we will see you next week.

28:58.680 --> 29:27.320
See you later.

