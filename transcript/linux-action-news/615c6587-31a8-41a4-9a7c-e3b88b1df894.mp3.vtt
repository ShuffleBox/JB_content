WEBVTT

00:00.000 --> 00:08.300
Hello, and welcome to Linux Action News, episode 164, recorded on November 22nd, 2020.

00:08.300 --> 00:09.300
I'm Chris.

00:09.300 --> 00:10.300
And I'm Wes.

00:10.300 --> 00:11.300
Hello, Wes.

00:11.300 --> 00:17.680
And we should say happy birthday to the GIMP project, which turned 25 years old this weekend.

00:17.680 --> 00:18.680
Never looking better, GIMP.

00:18.680 --> 00:24.620
All right, Wes, let's do the news and let's start with YouTube DL back up on GitHub.

00:24.620 --> 00:25.780
And aren't we glad?

00:25.780 --> 00:30.800
Now, if you don't remember, GitHub received a controversial DMCA takedown request from

00:30.800 --> 00:37.300
the Recording Industry Association of America, better known as the RIAA, way back on October

00:37.300 --> 00:38.300
23rd.

00:38.300 --> 00:40.240
Yes, I do recall.

00:40.240 --> 00:42.160
We were rather upset about it, if I recall.

00:42.160 --> 00:43.880
Indeed, we were.

00:43.880 --> 00:49.300
The DMCA takedown letter back then from the RIAA argued that YouTube DL was being used

00:49.300 --> 00:54.440
to circumvent the technological protection of streaming services such as YouTube.

00:54.440 --> 00:59.720
And then they went on to argue also that it could reproduce and distribute music videos

00:59.720 --> 01:02.120
and sound recordings without authorization.

01:02.120 --> 01:05.240
That was like the big, oh my gosh, what?

01:05.240 --> 01:07.440
But really, maybe not so much.

01:07.440 --> 01:09.680
Well, yeah, let's be a little more specific.

01:09.680 --> 01:16.840
The RIAA used section 1201 of the Digital Millennium Copyright Act or the DMCA to claim

01:16.840 --> 01:22.200
that YouTube DL was breaking copyright by providing a tool to circumvent copyrighted

01:22.200 --> 01:23.460
material.

01:23.460 --> 01:28.640
Even if YouTube DL itself didn't contain any copyright infringing code directly.

01:28.640 --> 01:29.640
Yeah.

01:29.640 --> 01:30.640
Yeah.

01:30.640 --> 01:31.640
Yeah.

01:31.640 --> 01:33.080
Well, here's what happened.

01:33.080 --> 01:37.000
Just a little bit after last week's show, GitHub said that YouTube DL did not actually

01:37.000 --> 01:40.640
break that section 1201 of the DMCA.

01:40.640 --> 01:45.440
And it cited a letter that it received, GitHub had received from the EFF.

01:45.440 --> 01:50.560
And they did a fantastic job of doing a great defense for YouTube DL.

01:50.560 --> 01:56.560
And I think they played a big role in helping explain to both GitHub and maybe future interested

01:56.560 --> 02:00.120
parties in the technical aspects of this case.

02:00.120 --> 02:02.320
And I think maybe save the day a little bit.

02:02.320 --> 02:03.660
You really have to give it to the EFF.

02:03.660 --> 02:10.440
The lawyers argued that YouTube DL could never be taken down because of section 1201 at all.

02:10.440 --> 02:14.280
Because YouTube DL itself doesn't actually circumvent any kind of copyright protection

02:14.280 --> 02:16.280
system in the first place.

02:16.280 --> 02:20.840
Yeah, I like this quote from their letter.

02:20.840 --> 02:26.060
As the federal court recently ruled, one does not circumvent access control by using a publicly

02:26.060 --> 02:27.600
available password.

02:27.600 --> 02:32.360
And that's really what it came down to, the code in YouTube DL that was, quote unquote,

02:32.360 --> 02:33.680
circumventing the copyright protections.

02:33.680 --> 02:41.120
Well, really, it was all just relying on public information that you get when you visit YouTube.com.

02:41.120 --> 02:44.480
Computers are hard, Wes, and it's hard for the RIAA to understand it.

02:44.480 --> 02:45.740
It always has been.

02:45.740 --> 02:50.680
We also talked a little bit in our coverage about GitHub's response to this, and if they

02:50.680 --> 02:53.520
could have done things a little differently, and it does seem like they're going to make

02:53.520 --> 02:54.520
some changes.

02:54.520 --> 02:58.480
Yeah, I think they noticed that maybe they weren't quite prepared for this particular

02:58.480 --> 02:59.480
case.

02:59.480 --> 03:04.880
And they've now decided to establish a $1 million developer defense fund that the company

03:04.880 --> 03:10.740
plans to use to protect developers against unwarranted DMCA section 1201 takedown claims.

03:10.740 --> 03:12.520
So this is pretty specific, I think.

03:12.520 --> 03:17.360
Yeah, it's sort of like, it's sort of like plugging a leak instead of fixing it, though.

03:17.360 --> 03:21.440
Really what would be amazing is if instead of a million dollars, if Microsoft could invest

03:21.440 --> 03:24.140
10 million dollars in just getting the DMCA fixed.

03:24.140 --> 03:27.040
But this is a great first step.

03:27.040 --> 03:30.320
It sort of felt that when GitHub received this notice, you know, they felt like they

03:30.320 --> 03:31.320
didn't have a lot of options.

03:31.320 --> 03:34.800
They just took it down to play it safe, figuring, all right, I guess this gets sorted out in

03:34.800 --> 03:35.800
court.

03:35.800 --> 03:39.820
But now they're going to hire technical and legal experts along with some independent

03:39.820 --> 03:46.080
specialists who will from now on review all DMCA section 1201 takedown claims going forward

03:46.080 --> 03:49.480
to ensure they're compliant with the DMCA and to protect open source developers from

03:49.480 --> 03:50.760
needless litigation.

03:50.760 --> 03:55.040
So presumably, and we can't say until this happens, but presumably this this board would

03:55.040 --> 03:59.620
have just found that no, YouTube DL is not infringing or not doing anything.

03:59.620 --> 04:05.420
This is a complicated issue, these DMCA takedowns, because as you and I found in our own research

04:05.420 --> 04:10.840
for the show, there are established, well known open source projects that actually use

04:10.840 --> 04:16.220
DMCA takedown to maybe stop somebody who's taken a fork of the project and closed it

04:16.220 --> 04:21.320
up and is charging weird money for it or is embedding spyware or maybe brand stealing.

04:21.320 --> 04:24.360
There are legitimate uses for projects.

04:24.360 --> 04:28.780
And so GitHub didn't want to just completely throw out the whole system, but they wanted

04:28.780 --> 04:32.320
to at least try to give the developers a fighting chance, it seems like, from this.

04:32.320 --> 04:36.760
In most cases, they're not going to pull it off the web unless it's absolutely necessary,

04:36.760 --> 04:41.720
like they're going to try their best to just maybe remove an infringing component or contact

04:41.720 --> 04:45.960
the developer directly and get them in some sort of dialogue first.

04:45.960 --> 04:49.640
Those are all really positive improvements.

04:49.640 --> 04:52.680
But it just seems like this maybe just isn't the right tool for this function for what

04:52.680 --> 04:53.680
people are looking at.

04:53.680 --> 04:56.080
The DMCA is just not the right tool for this particular function.

04:56.080 --> 05:00.200
I think we've seen that there's a lot of problems with it over the years, unfortunately, little

05:00.200 --> 05:01.760
to no action to fix it.

05:01.760 --> 05:04.840
Very nice, though, to see YouTube DL back up and online.

05:04.840 --> 05:09.260
And so far from what we can tell, they didn't have to remove any cypher algorithms or anything

05:09.260 --> 05:13.320
that was all that core to the project.

05:13.320 --> 05:17.880
They just had to get rid of those example videos that were copyrighted music.

05:17.880 --> 05:18.880
Right.

05:18.880 --> 05:21.480
They had some of those test cases set up to download copyrighted music.

05:21.480 --> 05:22.480
Those are gone.

05:22.480 --> 05:25.240
And with that, they're back online.

05:25.240 --> 05:30.720
There have been rumors of a six billion dollar Seuss IPO this week.

05:30.720 --> 05:36.920
It all got kicked up by Bloomberg, who's reporting that EQT is planning an IPO for Sousa.

05:36.920 --> 05:40.840
If you don't recall, EQT is a Swedish based private equity firm.

05:40.840 --> 05:46.440
You might not recall because over the years, Sousa has had more than a few owners.

05:46.440 --> 05:52.520
First it was acquired by Novell in 2004, then AttachMate with some Microsoft funding bought

05:52.520 --> 05:55.480
Novell and Sousa in 2010.

05:55.480 --> 06:00.720
This was followed in short order in 2014 when Micro Focus purchased AttachMate and Sousa

06:00.720 --> 06:03.680
was spun off as an independent division.

06:03.680 --> 06:09.340
Then EQT finally got involved and purchased Sousa from Micro Focus for 2.5 billion in

06:09.340 --> 06:11.000
March of 2019.

06:11.000 --> 06:15.880
2.5 billion, which means that if this IPO turns out to be legitimate and if it does

06:15.880 --> 06:21.040
turn out to be approximately six billion dollars, EQT, well, they're doing pretty well for

06:21.040 --> 06:22.040
themselves.

06:22.040 --> 06:23.040
And it seems like it's possible.

06:23.040 --> 06:29.040
They've been pretty successful under EQT and Q3 revenue reported in September 2020 increased

06:29.040 --> 06:31.440
14% year over year.

06:31.440 --> 06:35.880
It seems they've also had a pretty big jump in whale clients, you know, clients that are

06:35.880 --> 06:42.200
worth more than a million dollars, 35% increase there and a 50% jump in bookings year over

06:42.200 --> 06:43.200
year.

06:43.200 --> 06:44.880
So they potentially are doing really well.

06:44.880 --> 06:49.080
And if the feedback is any indication I get on Koda radio, there's more people using Sousa

06:49.080 --> 06:53.160
than ever, because my inbox is crying from all of the lizards telling me how great it

06:53.160 --> 06:54.160
is.

06:54.160 --> 06:58.920
But Bloomberg has been saying that this IPO is just in the very, very, very early stages

06:58.920 --> 07:01.940
and nothing really may even come of this.

07:01.940 --> 07:04.000
But Sousa was kind of coy when asked about it.

07:04.000 --> 07:05.000
Of course.

07:05.000 --> 07:08.640
Folks said, we don't comment on these kinds of things, but it'd be pretty great to see

07:08.640 --> 07:09.640
it.

07:09.640 --> 07:12.400
I mean, Sousa has done really well for themselves recently.

07:12.400 --> 07:15.760
They also didn't they just acquire Rancher Labs?

07:15.760 --> 07:16.760
Indeed they did.

07:16.760 --> 07:17.760
Yeah.

07:17.760 --> 07:19.540
I mean, they're stepping up their game.

07:19.540 --> 07:23.160
They do really well in the European Union, maybe not as well as in the States.

07:23.160 --> 07:24.160
So we don't talk about it.

07:24.160 --> 07:25.340
We hear about it a little less over here.

07:25.340 --> 07:29.780
But you know, I like that there's another big enterprise competitor in the Linux space

07:29.780 --> 07:30.780
out there.

07:30.780 --> 07:33.800
And maybe an IPO could be a new steady state for Sousa.

07:33.800 --> 07:35.280
I guess we'll see.

07:35.280 --> 07:40.160
Well, speaking of revenue, Ubuntu maker Canonical Holdings Limited recently submitted their

07:40.160 --> 07:41.360
UK financial report.

07:41.360 --> 07:43.000
Now this is for last year.

07:43.000 --> 07:48.520
This is for December 31st, 2019, the pre-COVID era times, and they generated around 22% more

07:48.520 --> 07:50.040
revenue than 2018.

07:50.040 --> 07:54.320
But the maybe important note here is they seem to have still operated at a loss, albeit

07:54.320 --> 07:56.320
more narrowly than in prior years.

07:56.320 --> 07:57.320
Yeah.

07:57.320 --> 08:04.520
The documents show their 2019 revenue at 119 million US dollars, up from 97 million the

08:04.520 --> 08:06.140
prior year.

08:06.140 --> 08:10.100
That means their operating loss came in at just $2 million, which, hey, that's a lot

08:10.100 --> 08:15.680
better than the 11 million for 2018, and similar losses in recent years.

08:15.680 --> 08:16.680
Yeah.

08:16.680 --> 08:20.440
Now remember, these numbers are a little out of date, as we're almost in December of 2020.

08:20.440 --> 08:24.960
But at the time of this information submitted, Canonical's average headcount for 2018 was

08:24.960 --> 08:31.580
473, which is up prior from the 437 the year before.

08:31.580 --> 08:33.820
And they added close to 40 more employees.

08:33.820 --> 08:39.460
But that's still down from their 500 plus headcount before the restructuring that happened

08:39.460 --> 08:40.600
a few years ago.

08:40.600 --> 08:46.300
The report does note some concerns over the COVID-19 pandemic, but that's primarily from

08:46.300 --> 08:50.720
impacts to their clients, not directly to Canonical themselves, since by and large,

08:50.720 --> 08:55.000
they've got a global distributed workforce that's already working from home.

08:55.000 --> 09:13.600
Long story short, they anticipate weathering the current COVID-19 climate just fine.

09:13.600 --> 09:38.520
Not only are they entrenched members of the Linux community, but they're also just Linux

09:38.520 --> 09:39.520
users themselves.

09:39.520 --> 09:49.960
And that's why Canonical is so important to Canonical, because it's the only way to get

09:49.960 --> 10:03.440
to the root of the entire machine.

10:03.440 --> 10:06.880
But sometimes you want it easy, and I did that recently.

10:06.880 --> 10:07.880
I did it.

10:07.880 --> 10:14.980
I've been debating for months, maybe even a year, about trying out this Azurecast, which

10:14.980 --> 10:21.920
is this big one-stack open source radio station for the web that lets you manage DJ accounts

10:21.920 --> 10:24.000
and set up automated streaming schedules.

10:24.000 --> 10:28.080
It's like everything you need for a radio station in one open source package.

10:28.080 --> 10:31.880
And I've debated setting it up, like I said, for a long, long time.

10:31.880 --> 10:35.660
But I finally did it this weekend because I was on Linode and I saw in their app marketplace,

10:35.660 --> 10:40.720
they have a one-click deployment and it deploys things like Liquid Soap, IceCast, ShoutCast,

10:40.720 --> 10:45.540
NGINX, PHP, InfluxDB, Redis, all stuff that I would have had to set up.

10:45.540 --> 10:46.920
And it does it in a single click.

10:46.920 --> 10:48.280
It took like 10 seconds.

10:48.280 --> 10:52.240
And one of the things that's really cool about Linode is because they get you guys is whenever

10:52.240 --> 10:55.080
they can, they try to give you options on the underlying distro.

10:55.080 --> 11:00.000
So like for this particular one-click deployment, I have the option of deploying it on Debian

11:00.000 --> 11:05.360
or Ubuntu 2004, which to match some of our other cloud instances, I chose Ubuntu 2004,

11:05.360 --> 11:06.360
which is fantastic.

11:06.360 --> 11:14.080
And now I've got a Ubuntu 2004, dedicated CPU, four CPU cores, eight gigs of RAM in

11:14.080 --> 11:19.160
Dallas, Texas that's set up and ready to be an online radio station that our community

11:19.160 --> 11:20.160
could use.

11:20.160 --> 11:23.640
And we could have community DJs and the lup lug could tie into all of it.

11:23.640 --> 11:28.160
I mean, there's so much potential, something I was thinking about doing for so long.

11:28.160 --> 11:30.480
And with that one click, I finally pulled the trigger and I did it.

11:30.480 --> 11:32.720
And now the potential is kind of limitless.

11:32.720 --> 11:36.120
And that's just scratching the surface of what Linode is capable of, just scratching

11:36.120 --> 11:37.120
the surface.

11:37.120 --> 11:42.600
And they cost 30 to 50% less than major cloud providers like AWS or Google or your Azure.

11:42.600 --> 11:48.400
So you get a real nice balance of super nice modern technology features, a great dashboard

11:48.400 --> 11:54.200
to manage it all, a good citizen in the Linux community, price to performance ratio, uptime,

11:54.200 --> 11:55.200
support is fantastic.

11:55.200 --> 12:00.620
Like it's all there and you can just get a little taste of it at linode.com slash LAN.

12:00.620 --> 12:03.440
Get a $100 60 day credit towards your new account.

12:03.440 --> 12:07.200
That's linode.com slash LAN.

12:07.200 --> 12:12.440
With the introduction of Apple's new M1 chip, Docker's facing a few technical hurdles to

12:12.440 --> 12:15.880
get Docker desktop running nicely on these new Macs.

12:15.880 --> 12:20.240
Not only is there a brand new architecture, but there's also a new hypervisor framework.

12:20.240 --> 12:24.140
Yeah, and I think probably a lot of us are familiar with this Rosetta technology that

12:24.140 --> 12:25.640
Apple has released.

12:25.640 --> 12:30.840
Rosetta 2 allows ARM Macs to run x86 code.

12:30.840 --> 12:34.840
But that doesn't get you all the way to getting Docker and Docker desktop up and running on

12:34.840 --> 12:35.840
the Mac.

12:35.840 --> 12:40.160
Under the hood of Docker desktop, there's an actual virtual machine on the Mac side.

12:40.160 --> 12:41.160
They do that.

12:41.160 --> 12:43.440
I mean, you got to run Linux somehow, right?

12:43.440 --> 12:46.480
I mean, I guess they do that because yeah, there's no other way to run it on Mac OS and

12:46.480 --> 12:48.360
there's no other way to do on Apple hardware.

12:48.360 --> 12:52.860
But now with the M1 chip and Big Sur, there's this new hypervisor framework.

12:52.860 --> 12:57.440
They apparently will have to re-plumb Docker desktop to this new hypervisor framework,

12:57.440 --> 13:00.840
which does feature M1 acceleration, but means new code.

13:00.840 --> 13:04.800
Right, so you might actually have the Docker side in the user land of Mac OS running, but

13:04.800 --> 13:08.160
then you've got to connect that all up and integrate the changes from the changes to

13:08.160 --> 13:09.160
the hypervisor.

13:09.160 --> 13:15.000
Yeah, there's also a little issue of their CI pipeline doesn't have any ARM Macs in

13:15.000 --> 13:16.000
it yet.

13:16.000 --> 13:17.000
Oh, right.

13:17.000 --> 13:19.520
I mean, how do you test it if you're not running on M1s?

13:19.520 --> 13:23.680
They know it in here that they have 25 Mac minis that they use for automated testing

13:23.680 --> 13:26.700
of Docker desktop.

13:26.700 --> 13:27.700
Isn't that funny?

13:27.700 --> 13:32.080
Yeah, although it doesn't sound like they got any of the ARM developer machines.

13:32.080 --> 13:36.080
They say now that Apple's made the announcement, we can get some hardware in, which is an interesting

13:36.080 --> 13:37.080
aside.

13:37.080 --> 13:38.660
So you have the hypervisor framework.

13:38.660 --> 13:43.040
Of course, you have the CI pipeline that needs to have some ARM Macs in it to do testing.

13:43.040 --> 13:49.800
But there's also that wiggling issue of all of the underpinning open source projects that

13:49.800 --> 13:51.360
Docker relies on, like Go.

13:51.360 --> 13:53.860
Yeah, things like Go for the back end of Docker desktop.

13:53.860 --> 13:54.860
That's what it's written in.

13:54.860 --> 13:58.840
And Electron for the Docker dashboard, where you can go and view all the Docker desktop

13:58.840 --> 13:59.840
content.

13:59.840 --> 14:04.560
Now, these projects are hard at work getting that sorted out, but that has to happen.

14:04.560 --> 14:08.000
Get tested and then actually integrated into Docker desktop before you'll see it running

14:08.000 --> 14:10.080
anytime soon on your M1 laptop.

14:10.080 --> 14:12.960
Meanwhile, I'm over here running containers like it's just no big thing.

14:12.960 --> 14:15.960
I'm running on my Linux box.

14:15.960 --> 14:21.660
Purism has finally began shipping its mass produced model of the Librem 5.

14:21.660 --> 14:26.460
Much like with their Librem laptops, the Librem 5 features external hardware kill switches

14:26.460 --> 14:30.040
for both the cellular modem and Wi-Fi and Bluetooth connections.

14:30.040 --> 14:31.040
Right.

14:31.040 --> 14:33.220
And this is what they call their production model.

14:33.220 --> 14:35.880
So this is the one that shouldn't have rattly parts.

14:35.880 --> 14:38.840
This is the one that should be going to a majority of the backers.

14:38.840 --> 14:41.600
The Kickstarter, I think, was 2017.

14:41.600 --> 14:44.400
So this has been a little while in the making.

14:44.400 --> 14:49.280
And what we've kind of seen during this time is Pine 64 came along and lapped them.

14:49.280 --> 14:54.740
But notably, Purism ended up developing sort of an ecosystem of mobile technology, which

14:54.740 --> 14:57.000
may end up being their most significant contribution here.

14:57.000 --> 15:02.560
They invested heavily into bringing Posh, which is a form factor, you know, desktop

15:02.560 --> 15:08.400
UI, Lib Handy, Squawk, Squawk bar, or the squeak board, I think it was called.

15:08.400 --> 15:09.400
I can't remember exactly.

15:09.400 --> 15:13.760
But they brought a couple of particularly nice applications in this adaptive UI for

15:13.760 --> 15:18.300
GTK and some of their desktop technologies over the mobile space that projects like Pine

15:18.300 --> 15:20.160
Phone and others can take advantage of.

15:20.160 --> 15:21.160
Right.

15:21.160 --> 15:25.340
Sort of been a development board, if you will, for some of these technologies, even if most

15:25.340 --> 15:27.400
folks haven't actually got a Librem 5 just yet.

15:27.400 --> 15:32.500
I mean, I'm a little underwhelmed and disappointed just in the whole thing.

15:32.500 --> 15:39.360
So after all of this time, after all of this years of hard work, we got this sort of unceremonious

15:39.360 --> 15:43.020
blog post, kind of a quick and tidy blog post, like we've reached this milestone that we've

15:43.020 --> 15:45.480
been promising for all these years.

15:45.480 --> 15:48.320
And you don't really see like you haven't seen like YouTube seeded with some development

15:48.320 --> 15:52.020
units or you don't see a ton of people posting their pictures of receiving them.

15:52.020 --> 15:53.020
You do see some, though.

15:53.020 --> 15:55.760
So it does seem to be getting out in people's hands this time.

15:55.760 --> 15:56.760
That's nice.

15:56.760 --> 15:59.180
I mean, if we remember, we were all kind of surprised and disappointed when it turned

15:59.180 --> 16:00.180
out.

16:00.180 --> 16:03.640
No, they still needed more processing that they hadn't launched with the mass produced

16:03.640 --> 16:04.640
model.

16:04.640 --> 16:08.240
But they're not taking the victory lap, I would expect.

16:08.240 --> 16:13.700
I wonder if the victory wasn't as sweet as they were expecting, because Todd, Todd Weaver,

16:13.700 --> 16:17.920
the founder and CEO of Purism, he just has kind of like a PS little addendum, a single

16:17.920 --> 16:22.600
paragraph little addendum to the blog post announcing the launch.

16:22.600 --> 16:27.680
And they tout features that, well, frankly, PinePhone has now, like convergence and kill

16:27.680 --> 16:33.400
switches, which when they announced the Librem 5 were kind of a cutting edge idea, but have

16:33.400 --> 16:35.220
already been implemented by somebody else now.

16:35.220 --> 16:40.140
And now we also see Dell is looking at implementing kill switches in Dell laptops, too.

16:40.140 --> 16:43.780
So again, kind of taking some of their unique value there.

16:43.780 --> 16:47.960
I wonder what it's like now after all these years of the Kickstarter and here we are with

16:47.960 --> 16:48.960
the production model.

16:48.960 --> 16:51.880
I wonder, is the Purism team celebrating this victory?

16:51.880 --> 16:53.100
Because it's notable.

16:53.100 --> 16:54.400
They finally got this thing shipping.

16:54.400 --> 16:59.040
Yeah, maybe it has a, you know, kind of a big, chunky form factor.

16:59.040 --> 17:03.480
And yeah, maybe it has an IOT CPU that's kind of a killer on the battery life.

17:03.480 --> 17:07.520
But they have achieved actually creating something that seemed nearly impossible.

17:07.520 --> 17:13.900
And that is a free Linux running phone that, I mean, it's getting close to a usable standpoint.

17:13.900 --> 17:18.200
When I saw some of the videos that they released that to my eye didn't seem to be edited, seem

17:18.200 --> 17:22.560
to actually be performing quite well, like the UI may have even had some sort of video

17:22.560 --> 17:23.560
acceleration.

17:23.560 --> 17:24.560
Yeah.

17:24.560 --> 17:25.820
And they've clearly put in a lot of work over the years.

17:25.820 --> 17:27.280
It's a non-trivial project.

17:27.280 --> 17:29.560
It seems like it's gotten to a pretty good state.

17:29.560 --> 17:35.040
And yet, as a company, they're not really projecting much of a win here.

17:35.040 --> 17:37.000
And I say that's too bad.

17:37.000 --> 17:39.000
I say tip of the hat to them.

17:39.000 --> 17:40.000
It's impressive.

17:40.000 --> 17:41.640
It took a lot longer than we'd like to see.

17:41.640 --> 17:44.780
You know, they raised $2.2 million.

17:44.780 --> 17:49.720
People were really, really hopeful from the sort of build from scratch, following an open

17:49.720 --> 17:51.320
source free software ethos.

17:51.320 --> 17:53.680
It doesn't run Android, doesn't run iOS.

17:53.680 --> 17:58.160
It's running their PureOS and you could probably conceivably flash it with other things.

17:58.160 --> 18:01.000
I think I'll be curious to see, do we get a new version?

18:01.000 --> 18:04.100
You know, they've spent a lot of time figuring out some of the manufacturing sides, getting

18:04.100 --> 18:06.400
the base software layer working.

18:06.400 --> 18:10.800
But is what has happened with the lead from five, does that put them in a place where

18:10.800 --> 18:14.140
folks want to see what they can do on a second model?

18:14.140 --> 18:19.900
You got to figure, as a team, as they're building this thing, it's the entire times.

18:19.900 --> 18:23.100
It's learning new things, the entire process, right?

18:23.100 --> 18:24.960
It's a learning experience.

18:24.960 --> 18:28.300
And so when you get to the end of it, you know how to build a phone now and you've got

18:28.300 --> 18:31.220
to look at that and go, well, we could build something so much better now.

18:31.220 --> 18:37.160
They have to, as a team, be thinking, what's the Librem 6 look like or something like that.

18:37.160 --> 18:40.980
And that could be where it gets really interesting because now you've got an experienced team.

18:40.980 --> 18:45.360
You have yet another iteration of the software that lands on a new iteration of the hardware.

18:45.360 --> 18:46.360
Right.

18:46.360 --> 18:47.360
They can catch up a little.

18:47.360 --> 18:48.560
The pipeline is not going to be quite as long.

18:48.560 --> 18:51.540
I mean, so the final product will be a little closer to what you might expect.

18:51.540 --> 18:56.680
If I had an ideal scenario, it would be that Purism takes this victory, as it seems to

18:56.680 --> 19:03.080
be, and is able to kind of own the higher end of the free phone market.

19:03.080 --> 19:06.600
Imagine if we had a scenario where there was a kind of Cadillac free phone that had all

19:06.600 --> 19:08.080
the latest cutting edge features.

19:08.080 --> 19:09.080
Maybe a decent camera.

19:09.080 --> 19:10.080
Yeah.

19:10.080 --> 19:13.240
And then you have like the Pine phone that, I mean, they could differentiate there and

19:13.240 --> 19:17.740
have multiple products too, but you had a Pine phone that was $200 or less, a real development

19:17.740 --> 19:23.280
hacker kit that you could throw any OS on, and it really was a hardware platform to showcase

19:23.280 --> 19:24.280
free software.

19:24.280 --> 19:27.680
And Purism could really kind of focus on that high end phone with an integrated software

19:27.680 --> 19:29.480
stack approach that we see from other companies.

19:29.480 --> 19:30.480
Right.

19:30.480 --> 19:33.800
You want a premium phone, but you want one that's privacy focused.

19:33.800 --> 19:34.800
I'd love to see that.

19:34.800 --> 19:38.240
I think, how amazing would it be, say, four or five years down the road, you're looking

19:38.240 --> 19:41.240
at this and you're going, hmm, what should I get?

19:41.240 --> 19:47.440
A Librem 7 or a Librem 8 or the Pine 64 version 6 or whatever it would be at that point.

19:47.440 --> 19:48.440
Which one should I get?

19:48.440 --> 19:50.200
They're both really a great option.

19:50.200 --> 19:51.200
Wouldn't that be nice?

19:51.200 --> 19:53.640
Because we're getting to that point with Linux laptops now.

19:53.640 --> 19:54.640
We are.

19:54.640 --> 19:57.160
I mean, it's surprising to say a little bit, but we really are.

19:57.160 --> 20:00.560
So maybe it's possible.

20:00.560 --> 20:04.520
Congratulations to Todd and his team on shipping the production hardware.

20:04.520 --> 20:10.120
I also even saw reports of super responsive support from Purism.

20:10.120 --> 20:14.880
Somebody had an issue where they couldn't get their newly received production quote

20:14.880 --> 20:17.980
unquote model Librem 5, it wouldn't charge.

20:17.980 --> 20:21.400
There was an issue like something about using like USB C to C or something.

20:21.400 --> 20:25.800
I guess Purism support got right back to them right away and told them just use a C to A

20:25.800 --> 20:28.200
cable and it'll charge no problem.

20:28.200 --> 20:29.200
Interesting.

20:29.200 --> 20:30.200
Problem solved.

20:30.200 --> 20:31.200
His new phone's charging.

20:31.200 --> 20:32.200
He's up and playing with it.

20:32.200 --> 20:34.880
Well, those are the kind of steps they'll need to get right if there's a bright future

20:34.880 --> 20:37.280
ahead.

20:37.280 --> 20:38.280
Linux.ting.com.

20:38.280 --> 20:42.320
The next generation of Ting Mobile is here and I have been waiting to tell you guys about

20:42.320 --> 20:43.320
this.

20:43.320 --> 20:47.640
I'm a longtime fan of Ting and they just made things so much better.

20:47.640 --> 20:53.560
You can get talk and text for just $10 a month, data plans starting at just $15 and unlimited

20:53.560 --> 20:54.560
starting at $45.

20:54.560 --> 20:58.920
So whether you use two or 20 gigabytes a month, there's a perfecting plan for you and your

20:58.920 --> 21:01.260
family and no need to worry.

21:01.260 --> 21:03.880
Everything we love about Ting is staying the same.

21:03.880 --> 21:06.720
You still get access to Ting's award winning customer service.

21:06.720 --> 21:08.520
I rave about them all the time.

21:08.520 --> 21:14.240
You still get access to nationwide LTE and 5G coverage, plus the number one thing we

21:14.240 --> 21:17.080
all love, no contracts ever.

21:17.080 --> 21:18.320
You just get more choice now.

21:18.320 --> 21:22.640
Ting Mobile customers can now choose from three different plans based on their data

21:22.640 --> 21:25.720
needs and you know, it's really simple to switch to Ting.

21:25.720 --> 21:30.340
Pretty much any phone will work from the latest iPhone to any Android phone you can pretty

21:30.340 --> 21:33.800
much think of this modern and even a few surprises too.

21:33.800 --> 21:37.880
You could check out phones they have directly, but just start by going to linux.ting.com.

21:37.880 --> 21:42.000
Check your current phone, see if that'll work, create an account, pick the plan that's right

21:42.000 --> 21:44.740
for you and then Ting will send you a SIM card.

21:44.740 --> 21:48.000
You pop that in your phone and you activate it in minutes.

21:48.000 --> 21:52.620
Cutting your phone bill in half has never been easier with Ting Mobile's brand new plans.

21:52.620 --> 21:54.840
There's never been a better time to try Ting.

21:54.840 --> 21:59.160
So bring your phone or get a brand new and just start by going to linux.ting.com.

21:59.160 --> 22:01.320
Choose smarter, choose Ting Mobile.

22:01.320 --> 22:03.040
They really did this right.

22:03.040 --> 22:06.920
Everything you love and expect from Ting Mobile remains the same while you can also get all

22:06.920 --> 22:08.880
this great new stuff.

22:08.880 --> 22:13.960
No contracts, top notch account tools, great dashboard, great customer service.

22:13.960 --> 22:18.080
You can even bring your own phone if it's working for you and now plans that will fit

22:18.080 --> 22:19.080
your needs.

22:19.080 --> 22:22.400
The next generation of Ting means there's literally never been a better time to try

22:22.400 --> 22:23.640
Ting Mobile.

22:23.640 --> 22:28.600
Just go to linux.ting.com and a big thank you and a big congratulations to Ting for

22:28.600 --> 22:29.720
their big upgrades.

22:29.720 --> 22:34.040
These are really great to see and it's great to give you guys the opportunity to try it.

22:34.040 --> 22:37.040
Linux.ting.com.

22:37.040 --> 22:41.700
Since the layoffs at Mozilla earlier this year and with some Mozilla projects seemingly

22:41.700 --> 22:47.120
in jeopardy, it's nice to see some good news about Servo, which this week announced it's

22:47.120 --> 22:49.040
heading off to the Linux Foundation.

22:49.040 --> 22:50.040
Right.

22:50.040 --> 22:51.040
This is really nice to see.

22:51.040 --> 22:56.220
We were kind of wondering because Servo holds a special place in a lot of our hearts.

22:56.220 --> 23:02.840
Its mission is to provide an independent modular, embeddable web engine that's written in Rust.

23:02.840 --> 23:07.080
And the great thing about it is since its creation in 2012, it's pretty successfully

23:07.080 --> 23:13.080
contributed to new web standards and specifications and it's kind of made a dent in the web universe

23:13.080 --> 23:14.480
in a short time.

23:14.480 --> 23:16.040
And we really didn't want to see that go away.

23:16.040 --> 23:19.680
Yeah, it's been an important aspect where, you know, the folks at Mozilla at least previously

23:19.680 --> 23:23.080
could experiment in what the future of browsers might look like.

23:23.080 --> 23:24.080
Yeah.

23:24.080 --> 23:28.240
Now this move does come with other changes in particular in project governance.

23:28.240 --> 23:32.760
The Servo project will be gaining a board and a technical steering committee to help

23:32.760 --> 23:35.480
guide the project's future.

23:35.480 --> 23:38.320
I'm not so sure how I'm feeling about this.

23:38.320 --> 23:40.160
You don't think that's what they needed?

23:40.160 --> 23:47.700
Well, I think Servo was an engineer-led, technology-first group that was building some really impressive

23:47.700 --> 23:50.540
stuff that was leading by example.

23:50.540 --> 23:56.500
And I don't generally see that kind of outcome from something that's designed by committee.

23:56.500 --> 24:00.040
And that's essentially what we're transitioning to is something that was engineer-led to something

24:00.040 --> 24:01.800
that will now be committee-led.

24:01.800 --> 24:05.760
Do you wonder is this just how the Linux Foundation runs their project and that's why these changes

24:05.760 --> 24:09.400
are happening or if there was some interest from the project as well?

24:09.400 --> 24:13.160
Or is this in a response to a hole that was being filled by Mozilla in some capacity and

24:13.160 --> 24:16.200
now they're just formalizing it as a governance structure?

24:16.200 --> 24:18.840
Because you think about if they were part of a company, there's a governance structure

24:18.840 --> 24:21.160
as part of that company that manages certain stuff.

24:21.160 --> 24:22.160
Right, right.

24:22.160 --> 24:25.080
Either way, I'm not thrilled with this news.

24:25.080 --> 24:31.880
I was kind of hoping for a future where maybe like the go-to embedded web browser on the

24:31.880 --> 24:34.200
GNOME desktop would be Servo-powered.

24:34.200 --> 24:35.200
Wouldn't that be nice?

24:35.200 --> 24:36.520
I mean, besides just being in Rust.

24:36.520 --> 24:40.480
Yeah, and I also really like seeing something else that's new and innovative that could

24:40.480 --> 24:46.840
be competitive potentially with WebKit in certain use cases in certain applications.

24:46.840 --> 24:52.080
And it doesn't necessarily take any of that away from Servo, but I do kind of worry about

24:52.080 --> 24:53.640
stagnation.

24:53.640 --> 24:54.640
But we'll see.

24:54.640 --> 24:56.600
I'm also curious, you know, what will the adoption look like?

24:56.600 --> 25:00.440
Will that be improved now that they've split from Mozilla or will it just make things more

25:00.440 --> 25:01.600
difficult?

25:01.600 --> 25:04.680
You know, previously the Firefox and Servo teams were kind of connected right at the

25:04.680 --> 25:05.680
hip.

25:05.680 --> 25:06.680
Now there's a little more separation.

25:06.680 --> 25:10.400
Will they still be pulling in good ideas from Servo into the next generation of Firefox?

25:10.400 --> 25:11.400
You do wonder, right?

25:11.400 --> 25:16.320
Because you don't want to see Firefox's cutting-edge features take a hit as a result.

25:16.320 --> 25:19.200
No, you know, I mean, say what you will about Firefox.

25:19.200 --> 25:23.040
It oftentimes is a great web browser and part of that has been some of the neat ideas that

25:23.040 --> 25:24.040
were developed in Servo.

25:24.040 --> 25:27.720
Flipside, though, you just said it a moment ago, and I wonder if there isn't something

25:27.720 --> 25:28.720
to it.

25:28.720 --> 25:35.000
And that is by being part of the Linux Foundation and not part of Mozilla, they've essentially

25:35.000 --> 25:36.800
become vendor neutral.

25:36.800 --> 25:40.400
And that could be a driver for adoption.

25:40.400 --> 25:41.400
Sure, right.

25:41.400 --> 25:44.800
If there's some other folks out there who adopt Servo, who help build it and use it,

25:44.800 --> 25:46.800
well, they could take the project in a whole new direction.

25:46.800 --> 25:51.960
Well, the Epiphany maintainer on GNOME is reminding us this week why having an independent

25:51.960 --> 25:57.680
voice in the standards discussion is so important and just having some additional leverage on

25:57.680 --> 25:58.680
the web.

25:58.680 --> 26:02.200
January 4th, 2021, something major is happening.

26:02.200 --> 26:06.200
Google is blocking all sign-ins to Google accounts from embedded browser frameworks,

26:06.200 --> 26:11.340
things like Electron and potentially WebKit and WebKit adjacent browsers, which is why

26:11.340 --> 26:13.840
the Epiphany maintainer is bringing this up.

26:13.840 --> 26:16.440
Yeah, his summary goes something like this.

26:16.440 --> 26:21.920
Google will attempt to block logins from Chrome embedded framework based apps and other non-Chrome

26:21.920 --> 26:24.280
non-supported browsers.

26:24.280 --> 26:29.800
Presumably non-supported browsers includes non-Safari WebKit.

26:29.800 --> 26:34.000
Considering how much time I spend trying to develop user agent quirks to suppress Google's

26:34.000 --> 26:41.000
unsupported browser warnings on Gmail, Google Docs, etc., I guess we will find out on January

26:41.000 --> 26:42.000
4th.

26:42.000 --> 26:46.000
I can think of a lot of users that would be upset if all of a sudden they couldn't use

26:46.000 --> 26:49.920
their web browser to log into Google accounts.

26:49.920 --> 26:55.600
Google is trying to convince everyone, that's why they made a blog post about this in August.

26:55.600 --> 27:00.640
They're trying to convince everyone to use OAuth and they're also going to put the screws

27:00.640 --> 27:02.720
locked down on Electron users.

27:02.720 --> 27:07.360
That's where the Chromium embedded framework, if you're using an Electron app that may be

27:07.360 --> 27:13.040
like a mail app that uses Google Mail and signs into it inside embedded in the application,

27:13.040 --> 27:14.040
that's not going to work.

27:14.040 --> 27:17.340
They're going to have to do that thing where they forward you to Google and it pops up

27:17.340 --> 27:20.680
a little window, you log in and you say, allow all of the access.

27:20.680 --> 27:26.120
The issue is, on Gnome Shell and on Plasma Desktop, that itself is an embedded browser

27:26.120 --> 27:27.720
which Google may block.

27:27.720 --> 27:29.200
So that's really sticky.

27:29.200 --> 27:33.360
Yeah, I mean, Google's side of the story is that they're concerned about phishing attempts.

27:33.360 --> 27:37.000
When you've got an embedded browser window, well, it's got access to all your details

27:37.000 --> 27:41.360
if you're doing the sign-in process through Google.

27:41.360 --> 27:45.280
I can see why that might be a concern, but it's a little bit of a catch-22 that you first

27:45.280 --> 27:50.040
have to change your user agent to get any of their sites to work in a reliable fashion,

27:50.040 --> 27:53.840
but then here they are saying, if you change your user agent and lie to us, we'll block

27:53.840 --> 27:54.840
you.

27:54.840 --> 27:56.560
Yeah, that's also grounds for getting blocked.

27:56.560 --> 28:00.960
And that's really a shame because, going back to Epiphany again, the developer there has

28:00.960 --> 28:06.480
just stopped declaring its Epiphany in its user agent string for compatibility reasons.

28:06.480 --> 28:07.480
That's just it.

28:07.480 --> 28:10.060
Now, I think if they were willing to keep that in there, from Google's perspective,

28:10.060 --> 28:12.240
they're not trying to block major supported browsers.

28:12.240 --> 28:17.720
In fact, they call it out that they will continue to support things like Firefox, but I think

28:17.720 --> 28:21.360
they're missing the point that for many of their applications, that's a substandard experience

28:21.360 --> 28:22.360
already.

28:22.360 --> 28:28.800
Michael summarizes this email that he's sent to the WebKit developer list, trying to just

28:28.800 --> 28:30.480
remind everybody about this impending doom.

28:30.480 --> 28:32.840
He says, what should WebKit do about this?

28:32.840 --> 28:35.040
He goes on to say, I don't know.

28:35.040 --> 28:40.660
Nothing has happened yet, so I guess we could wait and see what happens on January 4th.

28:40.660 --> 28:41.940
Maybe this won't affect us at all.

28:41.940 --> 28:48.000
But my fear is that January 4th will arrive, we will be blocked, and then more user agent

28:48.000 --> 28:50.980
quirks and fixes will not work.

28:50.980 --> 28:54.800
And even if WebKit is not blocked, we can be confident that on January 4th, we will

28:54.800 --> 28:57.880
see a sad day for browser diversity.

28:57.880 --> 28:58.880
That's just it.

28:58.880 --> 29:02.400
This is a terrible reminder, regardless of what happens, that Google controls a whole

29:02.400 --> 29:05.000
bunch of the internet and the way you get to the internet.

29:05.000 --> 29:06.640
It's not how it's supposed to work, man.

29:06.640 --> 29:08.040
It's not how the web works.

29:08.040 --> 29:09.040
Not my web.

29:09.040 --> 29:10.040
No way.

29:10.040 --> 29:12.880
So we'll see what happens, January 4th is the deadline.

29:12.880 --> 29:16.320
And like I like to say on this program, we'll keep an eye on it.

29:16.320 --> 29:21.380
And that's why you should head over to LinuxActionNews.com slash subscribe for all the ways to get those

29:21.380 --> 29:22.480
future episodes.

29:22.480 --> 29:25.320
And while you're there, go over to the contact page, there's a link at the top of the site

29:25.320 --> 29:27.600
and send us your feedback on the show.

29:27.600 --> 29:30.920
Also, check out self-hosted.show slash 32.

29:30.920 --> 29:36.320
We tried out a self-hosted Google Photos replacement that actually works.

29:36.320 --> 29:41.520
We'll be back next Monday with our weekly take on the latest Linux and open source news.

29:41.520 --> 30:06.960
Thanks for joining us and we will see you next week.

