WEBVTT

00:00.000 --> 00:16.360
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.360 --> 00:22.000
This is episode 93, recorded on February 17th, 2019. I'm Chris.

00:22.000 --> 00:23.000
And I'm Joe.

00:23.000 --> 00:27.180
Hello, Joe. It's good to be connected with you. And I'm looking over the news this week.

00:27.180 --> 00:32.040
And I say we start with the story we all saw coming, especially if you followed the Google

00:32.040 --> 00:37.360
News recently, and maybe even got yourself one of those Google Home Hubs, you knew this

00:37.360 --> 00:38.360
was coming.

00:38.360 --> 00:44.200
Yeah, Android Things is no longer going to be about actual Internet of Things. It's going

00:44.200 --> 00:49.640
to pivot to be more about smart speakers and displays, which I suppose technically are

00:49.640 --> 00:54.480
Internet of Things devices, but not exactly what we thought when Google announced this.

00:54.480 --> 01:01.560
No, if you remember, I think it was 2015's IO, where Google announced the Android of

01:01.560 --> 01:06.760
Things platform, a versatile embedded and open source operating system designed to run

01:06.760 --> 01:11.040
on low power and low memory systems.

01:11.040 --> 01:17.060
Now today, it's essentially still that same operating system, but with a particular focus.

01:17.060 --> 01:20.800
Google announced they're going to transform the Android of Things from a public developer

01:20.800 --> 01:27.320
platform to a, quote, platform for their OEM partners, end quote, to develop things like

01:27.320 --> 01:32.720
smart speakers and smart displays. As a result, moving forward, it won't support production

01:32.720 --> 01:38.760
systems on modules, which the industry calls SOMs, which are very common systems that are

01:38.760 --> 01:44.080
based around a Qualcomm chipset or maybe a MediaTek hardware. It won't support those.

01:44.080 --> 01:49.120
Instead, it's more for custom development systems for custom smart screens and custom

01:49.120 --> 01:53.960
smart speakers, which is really another way of saying it's a dedicated OS for the Google

01:53.960 --> 01:54.960
Assistant.

01:54.960 --> 01:58.960
Yeah, although they are going to keep supporting the Raspberry Pi, which I think is just a

01:58.960 --> 02:01.000
safe face more than anything.

02:01.000 --> 02:06.680
This feels like half an announcement because there is the whole like all the other devices

02:06.680 --> 02:12.320
in the entire IoT ecosystem that don't have an operating system answer that we don't have

02:12.320 --> 02:17.020
right now. If you just got one of those Google Home Hubs with a seven inch screen and a nice

02:17.020 --> 02:20.760
huge white bezel, I picked one up. I wanted to try it out.

02:20.760 --> 02:25.800
That's running the Chromecast OS, which is originally based on Gentoo. That's what's

02:25.800 --> 02:32.340
on these devices. These newer devices aren't even using Android things. They're using Google's

02:32.340 --> 02:37.720
Chromecast platform. And I think it might not only just be a comment on their long term

02:37.720 --> 02:42.940
commitment to Android, but perhaps it's an admission that if you're working with this

02:42.940 --> 02:47.640
kind of constrained environment, a more closer to the metal platform is appropriate.

02:47.640 --> 02:53.560
Well, yeah, instead of Android, which is just huge and bloated, why not use proper GNU slash

02:53.560 --> 02:59.680
Linux, which is essentially what they're going to go for or even something completely different

02:59.680 --> 03:06.240
like future, which we think of as a phone OS, but might well end up being more suited

03:06.240 --> 03:08.640
to Internet of Things devices.

03:08.640 --> 03:13.640
Perhaps it's like there is some looming announcement just in the near future that we're waiting

03:13.640 --> 03:14.640
for.

03:14.640 --> 03:17.320
Yeah, it does very much feel like that. And it's something we're definitely going to have

03:17.320 --> 03:21.600
to keep an eye on. And something that I've been keeping an eye on for a while now are

03:21.600 --> 03:26.320
these Windows 10 ARM laptops. And from the moment they were announced, I wondered, will

03:26.320 --> 03:31.560
you be able to run proper Linux on them? And it turns out that at least on some of them

03:31.560 --> 03:34.520
now you can with a bit of an asterisk.

03:34.520 --> 03:39.760
All right, so we're talking three machines, essentially, right now, the ASUS NovaGo, the

03:39.760 --> 03:45.760
HBMV X2, and Lenovo Meeks? Mix? 630? How do you say that one?

03:45.760 --> 03:46.760
Meeks, I think.

03:46.760 --> 03:52.080
Meeks? Okay. Yeah, so you've got like three systems right now. And then in there, there's

03:52.080 --> 03:58.540
a couple of different sets of supported hardware. It's a little touch and go. For example, as

03:58.540 --> 04:02.920
of February 19th, none of the computers support the following features when you're running

04:02.920 --> 04:09.880
Ubuntu. Wi-Fi, hardware accelerated graphics, or access to onboard storage. So it's early

04:09.880 --> 04:16.600
days right now. But the folks behind the ARCH64 laptops open source project on GitHub have

04:16.600 --> 04:24.260
come up with a way to install Ubuntu 1804 LTS on some of these Windows 10 ARM laptops.

04:24.260 --> 04:29.400
And big picture, this is very important. Just like you want to know if you can go into a

04:29.400 --> 04:34.040
store and maybe pick up a couple of different x86 laptops that can run Linux, you want to

04:34.040 --> 04:37.160
make sure that you can pick up a couple of different ARM laptops.

04:37.160 --> 04:42.160
You know, this reminds me of the whole kerfuffle about Secure Boot. And when that first was

04:42.160 --> 04:45.560
introduced and everyone was panicking, oh, you're not going to be able to run Linux on

04:45.560 --> 04:53.680
laptops anymore. And now, as Microsoft kind of moves over to ARM for their consumer devices,

04:53.680 --> 04:57.640
that was my first thought, oh, are we going to be able to run Linux on them? And that's

04:57.640 --> 05:01.920
why I think this is important. It's very early, as you said, and they're not particularly

05:01.920 --> 05:06.940
useful at the moment. But the fact that we are actually, as a Linux community, making

05:06.940 --> 05:12.080
some strides to make Linux work on them, I think that's a real important step and a really

05:12.080 --> 05:13.080
important thing.

05:13.080 --> 05:18.560
I cannot agree more with any of that. I feel like we got really, really, really close where

05:18.560 --> 05:24.720
you could buy a ThinkPad laptop, and for the most part, you would be able to run Linux

05:24.720 --> 05:28.080
on it. You could go into a store and you could buy a Dell laptop if they sell in there, and

05:28.080 --> 05:30.320
for the most part, you could run Linux on it, or even an HP laptop.

05:30.320 --> 05:34.600
Yeah, I was going to say even the cheap ones, you can just go into a computer store, and

05:34.600 --> 05:40.480
if it's only Intel graphics, the chances are maybe the Wi-Fi card might not work, but otherwise,

05:40.480 --> 05:41.480
it's going to work fine.

05:41.480 --> 05:46.440
Right. That was it. It was once everything kind of got standardized around the Intel

05:46.440 --> 05:50.600
stuff, you had a pretty good shot that Linux was going to work just fine on it. And it

05:50.600 --> 05:55.280
was going to just be the edge cases around the video and maybe the Wi-Fi. And we sort

05:55.280 --> 06:01.360
of hit the reset button with these ARM machines, and there's a lot of compelling market reasons

06:01.360 --> 06:07.420
to go with ARM. Most consumers don't need the power that an i5, an i7, or maybe even

06:07.420 --> 06:12.560
an i3 processor brings them. Most consumers are perfectly happy just browsing the web

06:12.560 --> 06:17.240
with something that an ARM processor can provide and also bring them maybe 10 hours of battery

06:17.240 --> 06:18.240
life.

06:18.240 --> 06:23.720
As ever, Windows is inevitably going to come with Windows problems, and to have that life

06:23.720 --> 06:28.840
boat of being able to install Linux on it, I think is great, and it potentially brings

06:28.840 --> 06:34.040
people into our community in the first place. How often have people thought that their machine

06:34.040 --> 06:38.320
was broken because Windows had slowed down to the point where it was unusable, and then

06:38.320 --> 06:43.000
you install Ubuntu or Mint or whatever, Fedora on there, and suddenly they feel like they've

06:43.000 --> 06:48.640
got a new laptop. I'm sure that a lot of people listening to this have converted people, whereas

06:48.640 --> 06:52.640
if they've got these ARM machines that up until now has been impossible to install Linux

06:52.640 --> 06:55.040
on, then they're just stuck with Windows.

06:55.040 --> 07:01.660
Right. And as the IT guy for the whole family, basically, I love the idea of having a few

07:01.660 --> 07:06.320
solid vendors to recommend. Like, hey, when you go to Costco, why don't you pick up the

07:06.320 --> 07:12.960
HP MVX3 or 5 or whatever it is at some point in the future, go grab that machine, and then

07:12.960 --> 07:17.120
the next time I'm out there, I'll load Ubuntu MATE on there, and you'll have a perfectly

07:17.120 --> 07:22.620
fast secure environment where you can go browse Facebook or you can go browse Twitter and go

07:22.620 --> 07:24.840
be vain or whatever it is.

07:24.840 --> 07:31.200
At the end of the day, I love the possibilities here because there's such a great argument

07:31.200 --> 07:36.640
to be made for ARM on a laptop like this for people that don't need to edit video or whatever

07:36.640 --> 07:41.000
it might be. They just simply need a system that can browse the web, have great battery

07:41.000 --> 07:47.520
life and run a secure operating system. And that's the number one argument I go to my

07:47.520 --> 07:53.000
family with for a system like this, is I can get you something that runs great, runs all

07:53.000 --> 07:58.320
the things you need. And in the past, it was maybe Firefox and I'd say, well, we're going

07:58.320 --> 08:03.000
to switch it to LibreOffice or maybe you can use Google Docs or even Office 365. But those

08:03.000 --> 08:08.520
things are beginning to shift now. Now it's, well, yeah, you can totally Facebook still.

08:08.520 --> 08:12.840
Yeah, Twitter, Instagram, you can go read all of those things or go view all of those

08:12.840 --> 08:19.200
things on this Linux system. In a big way, it's the argument we used to have in the past.

08:19.200 --> 08:26.640
Get people on Windows to run open source applications like Firefox, like LibreOffice or GIMP. And

08:26.640 --> 08:33.080
then when they make that migration, they make that switch to Linux, when they choose Linux,

08:33.080 --> 08:37.040
these applications they'll end up using will be the exact applications they were using

08:37.040 --> 08:41.160
on Windows. All of this is in play now, but it's at the hardware level. It's something

08:41.160 --> 08:48.240
they can go buy at the Best Buy or whatever local electronic store. I think it's a great

08:48.240 --> 08:53.880
continuation of that perfect value for Linux. And maybe, at least for people like me who

08:53.880 --> 08:59.600
do tech support, once they get Wi-Fi, once they get Bluetooth, it'll be the perfect solution.

08:59.600 --> 09:04.760
Nice subliminal message in there with the choose Linux plug. Well done. But people will

09:04.760 --> 09:09.560
definitely be screaming at their headphones, but what about Chrome OS? Well, Chrome OS

09:09.560 --> 09:13.480
is basically what you've described there, but it's got the proprietary Google stuff

09:13.480 --> 09:17.420
in it. And wouldn't it be nicer for people to have something that performs as well as

09:17.420 --> 09:22.740
Chrome OS on an ARM device, but that is propaganda slash Linux and respects their freedom?

09:22.740 --> 09:27.480
It's capitalism, Joe. It's capitalism. You've got all of these companies out there, Dell,

09:27.480 --> 09:32.360
HP, et cetera, et cetera, Asus. They still want to make products and they still want

09:32.360 --> 09:38.000
to sell them to consumers. They need something to power that. And Chrome OS will get a niche,

09:38.000 --> 09:43.200
a niche of their base, but they need to sell to more people than that. And I think that's

09:43.200 --> 09:46.000
where this has a much larger role.

09:46.000 --> 09:50.040
Well that's all for the future, but if you're stuck on Windows right now, then you might

09:50.040 --> 09:55.280
well be using the Windows subsystem for Linux. And if you are, then you should definitely,

09:55.280 --> 09:58.400
definitely not disable your antivirus.

09:58.400 --> 10:02.840
At least according to a Microsoft developer who is involved in their antivirus program,

10:02.840 --> 10:07.440
which they have invested a lot of time and money into. I have to be honest, if I'm ever

10:07.440 --> 10:13.100
on a Windows system, I do not run antivirus. Maybe on Windows 10 I do because it's turned

10:13.100 --> 10:19.120
on by default it sounds like. But people are looking for a solution to the disk I.O. issues

10:19.120 --> 10:23.960
with the Windows subsystem. The main performance shortcoming for the Windows subsystem for

10:23.960 --> 10:30.480
Linux has been in the area of disk I.O. The CPU and system benchmarks that Ferronix has

10:30.480 --> 10:36.380
done routinely show us that the Windows 10 subsystem for Linux with Ubuntu and other

10:36.380 --> 10:42.120
distributions does actually perform quite well. But when it comes to the area of disk

10:42.120 --> 10:48.180
writes and reads, it is dramatically slower than the bare metal Linux installations that

10:48.180 --> 10:53.640
Michael compares it to. Disabling the Windows Defender or other antivirus systems that might

10:53.640 --> 10:58.880
be on your Windows box kind of fixes it, but it's not a hundred percent fix.

10:58.880 --> 11:04.240
What I've seen reports of up to five times the disk I.O. performance just by disabling

11:04.240 --> 11:10.920
antivirus. But I've also seen reports of NPM dependencies being flagged as malware, which

11:10.920 --> 11:18.480
I assume are correct. So I'm conflicted about what I would advise someone on this.

11:18.480 --> 11:23.160
Yeah. And I find this whole story really interesting because it's exposing a fundamental flaw

11:23.160 --> 11:28.320
with the Windows subsystem for Linux, and that is the Windows disk I.O. system. It's

11:28.320 --> 11:35.240
horribly slow. And the fact that the Windows Defender impacts that even a little bit is

11:35.240 --> 11:41.280
pretty remarkable here because if you zoom out and read what the story is, it is Microsoft

11:41.280 --> 11:47.780
warning you, dear user of Windows, that open source is so dangerous. You could have installed

11:47.780 --> 11:52.800
something from maybe the node.js repository that would have given you some malware. It

11:52.800 --> 11:58.080
would have tried to mine some Monero. And it is so dangerous that you need to run the

11:58.080 --> 12:03.720
Windows subsystem for Linux. We make Linux safer. Even if it makes it 10 to 15 percent

12:03.720 --> 12:09.680
slower, we make Linux safer. In fact, Rich Turner of Microsoft issued a fresh warning

12:09.680 --> 12:14.200
on not disabling Windows Defender, even for the Windows subsystem for Linux. In fact,

12:14.200 --> 12:20.200
he pleads with you not to exclude your Linux directories because as of the I.O. performance

12:20.200 --> 12:26.240
coming short, Rich says we're working across several teams right now to figure out an effective

12:26.240 --> 12:31.520
solution for the performance issue, despite the performance impact. In the meantime, we

12:31.520 --> 12:37.280
recommend patience. So despite the performance impact, they're working on the performance

12:37.280 --> 12:40.760
impact. Just need patience, Joe. Just need patience.

12:40.760 --> 12:45.040
But you can't trust the open source software. Anyone can write stuff for it and anyone can

12:45.040 --> 12:50.240
read it as well. Definitely don't want to trust that. It does feel like old Microsoft,

12:50.240 --> 12:54.440
this, doesn't it? And, you know, we said before that Microsoft is not one thing. It is a big

12:54.440 --> 12:59.320
umbrella of many different departments. And there are tons of people working over there

12:59.320 --> 13:04.480
who really believe in software freedom or at least open source. And even if that's just

13:04.480 --> 13:09.960
for the pragmatic reasons. But then there are clearly some people who have that old

13:09.960 --> 13:17.120
opinion who believe that the proprietary way of doing things is better. And I have never

13:17.120 --> 13:23.740
ever once used antivirus on Linux. Supposedly, it's good to use if you interact with people

13:23.740 --> 13:28.800
on Windows and you don't want to kind of forward Windows malware onto them. But I think if

13:28.800 --> 13:33.280
you're running Windows and your malware detection doesn't catch it, well, that's your fault,

13:33.280 --> 13:39.040
not mine. I don't know. Is that, is it too much ivory tower thinking of me there to not

13:39.040 --> 13:43.800
worry about malware protection on the next? My response to that is that it's a big old.

13:43.800 --> 13:47.520
It depends. Like if you're if you're working on your workstation where you're developing

13:47.520 --> 13:53.320
your application, that's one thing. If you're deploying on a server, that's a whole other

13:53.320 --> 13:57.280
thing. Like there's a place for anti-malware on a server, but you better not be depending

13:57.280 --> 14:02.400
on a Windows defender to protect your server. One thing that I did note in these release

14:02.400 --> 14:07.520
notes here is that they've enabled now the ability to browse your Windows subsystem for

14:07.520 --> 14:12.080
Linux file system from Explorer. Essentially, you fire up bash, you go to the directory

14:12.080 --> 14:17.880
that you want to browse, and then you launch explore.exe in that directory. That's not

14:17.880 --> 14:23.400
the interesting part. The interesting part is how Microsoft is pulling this magic trick

14:23.400 --> 14:29.200
off. They're using the 9P protocol. You know, I know what you're thinking. Chris, what's

14:29.200 --> 14:35.920
that? What's the 9P protocol? It's a network protocol developed for the Plan 9 system from

14:35.920 --> 14:42.800
Bell Labs way, way back in the day. And they're using that now to facilitate file requests

14:42.800 --> 14:47.200
from Windows to the Linux subsystem. They say they've modified the Windows subsystem

14:47.200 --> 14:53.320
for Linux at NIT daemon to include the 9P server. The server contains protocols that

14:53.320 --> 14:59.280
support the Linux metadata, including permissions, which is not a one to one translation to what

14:59.280 --> 15:05.480
Windows NTFS permissions are. There is a Windows service and a driver that acts as a client

15:05.480 --> 15:13.040
and talks to the 9P server, which is running as its own Windows subsystem for Linux instance.

15:13.040 --> 15:18.560
The client and server communicate over AF Unix sockets. And since Windows subsystem

15:18.560 --> 15:23.960
for Linux allows interops between a Windows application and a Linux application using

15:23.960 --> 15:29.840
AF Unix sockets, it all works. As of right now, the files are only accessible when the

15:29.840 --> 15:34.400
distro is running. So you have to have the Windows subsystem for Linux up and going and

15:34.400 --> 15:41.640
accessing the Linux files is treated as the same as accessing a network resource. So it's

15:41.640 --> 15:48.640
the same backslash, backslash, Windows subsystem for Linux. So it's WSL dollar sign Ubuntu

15:48.640 --> 15:52.880
or whatever the name of your system is. And then you get into the file system. So any

15:52.880 --> 15:58.840
limitations or rules for when you're accessing a network file system in Explorer will apply

15:58.840 --> 16:03.480
to accessing the Windows subsystem for Linux files. So there's some trade offs there, but

16:03.480 --> 16:08.680
it's, it's pretty cool. You know, reading about all of this made me think that the subsystem

16:08.680 --> 16:18.680
is either this amazingly architected and put together system, or it is the biggest ugliest

16:18.680 --> 16:20.680
hack in history.

16:20.680 --> 16:26.960
Either way, it shows you that the Windows disk IO system is not nearly as cool as Linux.

16:26.960 --> 16:31.800
Yeah, we know that much. Well, enough Microsoft talk. Let's get down to some serious enterprise

16:31.800 --> 16:39.880
Linux. And Red Hat satellite is going to standardize on Postgres, and unsurprisingly, drop MongoDB.

16:39.880 --> 16:44.240
This is a fascinating story from a lot of different angles. But when you look at it,

16:44.240 --> 16:53.160
it's been in motion since mid 2016. In mid 2016, in fact, around September, there is

16:53.160 --> 16:57.840
an upstream change with the pulp project, which is really kind of responsible for the

16:57.840 --> 17:04.560
repository management aspects of Red Hat Enterprise Linux and the whole satellite server. In 2016,

17:04.560 --> 17:09.680
on September 13, they're on their mailing list, they're writing about moving their backend

17:09.680 --> 17:17.840
from MongoDB to Postgres. So Red Hat's known this is coming since September of 2016. Now

17:17.840 --> 17:24.320
I believe this accelerated in January when Red Hat began to distance themselves from

17:24.320 --> 17:29.400
the MongoDB project. On their blog, they continue to say the reasons for the directions that

17:29.400 --> 17:34.280
we are going there is we feel that Postgres is a better solution for the types of data

17:34.280 --> 17:39.360
and the usage that satellite requires. Well, you know, that's very true. And in the past,

17:39.360 --> 17:44.020
they were kind of using a mixed scenario. When I originally deployed Red Hat satellite,

17:44.020 --> 17:51.080
it was, I believe, if memory serves, using the Oracle database. So that was a really

17:51.080 --> 17:55.640
long time ago. And now they've kind of been in this hybrid situation where there's some

17:55.640 --> 18:01.600
Postgres and there's some MongoDB. But with pulp going over to Postgres, it just seems

18:01.600 --> 18:05.360
like Red Hat didn't really have any choice. And they eventually were going to have to

18:05.360 --> 18:11.800
make this change. And the MongoDB relicensing just sort of facilitated the need here.

18:11.800 --> 18:15.440
Yeah, so it's not black and white here. It's not just because of that change to the server

18:15.440 --> 18:21.240
side public license. There are strong technical reasons for this, but it was probably something

18:21.240 --> 18:25.960
that may have taken a bit longer if it weren't for that move and it weren't for them basically

18:25.960 --> 18:27.440
having to drop MongoDB.

18:27.440 --> 18:33.960
Yeah, I think that's basically it. But this is all in the context of Amazon launching

18:33.960 --> 18:40.080
AWS DocumentDB and DigitalOcean launching their own fully managed hosted Postgres.

18:40.080 --> 18:46.680
Yeah, it's not a great time for MongoDB anymore, is it? It seems that Postgres is winning.

18:46.680 --> 18:53.400
Now DigitalOcean, they're not quite up there with AWS and Azure and Google Cloud, but they

18:53.400 --> 18:58.800
certainly want to be, don't they? And introducing something like this really puts a stake in

18:58.800 --> 19:04.160
the ground of saying, we are a serious player in this cloud market. We're not just $5 droplets

19:04.160 --> 19:06.560
for people wanting to mess around with Nextcloud.

19:06.560 --> 19:11.720
No, they're pitching this as a totally managed database solution, not a Postgres database

19:11.720 --> 19:16.120
solution, but managed database. Now they say they're starting with Postgres, but managed

19:16.120 --> 19:21.400
database enables developers of all skill levels to quickly and easily spin up a performance

19:21.400 --> 19:28.920
database cluster. And I like this hook here. Get ready for this. Best of all, you don't

19:28.920 --> 19:35.880
need to know anything about Linux or specific DevOps maintenance tasks. And now apparently

19:35.880 --> 19:40.360
they're in a position now where they can sell entire hosted database services that are hassle-free.

19:40.360 --> 19:45.280
And they write, a significant advantage to a managed database is saving time, lots of

19:45.280 --> 19:50.160
time. You can quickly deploy a database and we'll handle the rest. Never worry again about

19:50.160 --> 19:55.760
security patches to the OS or the database engine. Once a new version or a patch is available,

19:55.760 --> 20:02.400
simply click a button and enable it. I don't know, Joe, the old sysadmin in me is dying

20:02.400 --> 20:03.400
a little bit today.

20:03.400 --> 20:07.080
Well, we had a big discussion about this on Late Night Linux a couple of episodes ago

20:07.080 --> 20:13.400
and I came to the conclusion that it can be a good thing to use managed databases and

20:13.400 --> 20:17.920
effectively lock yourself into certain cloud providers as long as you're not completely

20:17.920 --> 20:23.560
dependent on them. And I think that for DigitalOcean to grow and to continue to compete in the

20:23.560 --> 20:25.680
market, they have to do stuff like this.

20:25.680 --> 20:30.780
I kind of think it's a positive overall for open source because DigitalOcean writes about

20:30.780 --> 20:37.640
adding Redis and MySQL down the road. And that is great because we're not talking about

20:37.640 --> 20:43.360
the DigitalOcean database service. We're talking about Postgres. We're talking about Redis.

20:43.360 --> 20:49.060
So this is like move your data anywhere kind of stuff. And this is where the cloud needs

20:49.060 --> 20:50.060
to go.

20:50.060 --> 20:56.880
And I hope that it pushes Azure and it pushes AWS to stay mainline as much as possible with

20:56.880 --> 21:02.080
upstream open source projects because data portability I think is going to be the absolute

21:02.080 --> 21:07.120
key when people move all of their workloads to the cloud. And DigitalOcean is essentially

21:07.120 --> 21:13.020
just offering a fully managed Postgres or MySQL installation where they do the patches,

21:13.020 --> 21:17.560
they do the upgrades, they provide all the backend stuff, but you're just using standard

21:17.560 --> 21:20.760
stuff here as a developer. And I think that is the way to do it.

21:20.760 --> 21:25.400
Well, I'd be surprised if Redis does actually make it onto DigitalOcean because they've

21:25.400 --> 21:30.280
made similar license changes, although it's not quite as egregious as what MongoDB have

21:30.280 --> 21:36.040
done. But I don't know, maybe something like MariaDB might be more likely. But we'll see.

21:36.040 --> 21:42.400
From the local section of the news this week, there is some warnings for Void Linux users.

21:42.400 --> 21:46.280
Void is no longer in control of the voidlinux.eu domain.

21:46.280 --> 21:52.360
Well, this isn't a huge surprise, is it, given that back in May last year, the original founder

21:52.360 --> 21:58.160
of Void went AWOL and presumably took this domain with him. And much like Solus have

21:58.160 --> 22:01.880
done, they've had to switch their domain over. Now they've gone for voidlinux.org, which

22:01.880 --> 22:04.600
kind of makes more sense as a domain to me.

22:04.600 --> 22:08.920
Yeah, absolutely. And they write on this really brief post on their website, they write, at

22:08.920 --> 22:15.040
this time, please assume that anything involving voidlinux.eu is not related to Void Linux

22:15.040 --> 22:21.000
and should be considered potentially malicious. Well, when I read that, I had to go browse.

22:21.000 --> 22:26.920
I had to go see what it was, Joe. You know what I mean? So I popped in the old browser.

22:26.920 --> 22:32.000
I did a private session because I'm a gentleman. And it's just a domain squatting page. It's

22:32.000 --> 22:33.000
nothing right now.

22:33.000 --> 22:36.440
Yeah, I was looking for something interesting. But yeah, as you say, someone's bought it

22:36.440 --> 22:38.500
and it's just like coming soon sort of thing.

22:38.500 --> 22:43.320
So stand by. And maybe they'll find it within their hearts to donate it to the Void Linux

22:43.320 --> 22:44.320
project. Wouldn't that be nice?

22:44.320 --> 22:48.760
Well, you never know. Maybe a philanthropist has bought it and is going to give it back

22:48.760 --> 22:54.680
to them. But it seems unlikely to me. So in the meantime, yeah, make sure that it's voidlinux.org.

22:54.680 --> 22:58.680
But it does just go to show that with these smaller projects that don't have the governance

22:58.680 --> 23:06.200
in place, you can get these serious problems. And we talked about it last year. But it just

23:06.200 --> 23:10.400
turns me off using these smaller distros. And it shouldn't do. And you know, how are

23:10.400 --> 23:15.440
you going to get another big distro if you don't start out small? But I don't know, I'd

23:15.440 --> 23:21.640
just stick to Ubuntu, Fedora, Debian, Arch even, you know, well-established projects.

23:21.640 --> 23:26.040
No, I completely follow. You know, it's a tough thing because you want to recommend

23:26.040 --> 23:30.840
something to start with when people are trying out Linux and you feel responsible for that

23:30.840 --> 23:36.440
recommendation. And it is getting harder and harder to recommend those quote unquote, homegrown

23:36.440 --> 23:42.320
boutique Linux distros. Even though sometimes that's where the coolest innovation is happening,

23:42.320 --> 23:47.000
like the neatest thing that's solving that edge case problem happens at those boutique

23:47.000 --> 23:53.080
distro levels. And you want to see that continue. At the same time, you don't want to see a

23:53.080 --> 23:59.000
repeat of Corora or Void Linux or Solus. It's kind of getting to the point where I feel

23:59.000 --> 24:07.200
like the safest recommendation is mainstream Linux. I recommend big Linux now, Joe, if

24:07.200 --> 24:08.200
there is such a thing.

24:08.200 --> 24:12.460
Yeah, which is a shame because as you say, things like Void Linux are actually doing

24:12.460 --> 24:18.840
something technically very different from the big distros. But do you recommend them

24:18.840 --> 24:24.160
to people? I don't know, the kind of people who you would recommend them to probably are

24:24.160 --> 24:27.960
not going to have a problem migrating off them. You're not going to recommend Void Linux

24:27.960 --> 24:35.200
to your grandma, are you? Whereas putting Fedora or Ubuntu on there, or even Debian,

24:35.200 --> 24:39.400
or even something like Manjaro or something, you could imagine, but not something like

24:39.400 --> 24:45.040
super technical like Void Linux. So it's probably not that much of a problem, but it's still

24:45.040 --> 24:46.780
something to consider.

24:46.780 --> 24:52.520
And while there is a Linux for the rest of us, there's also now a cryptocurrency for

24:52.520 --> 24:56.360
the rest of us, I guess, at least according to JP Morgan.

24:56.360 --> 25:02.640
Yeah, JPM coin, which is not a cryptocurrency as we know it. It's not traded openly. It's

25:02.640 --> 25:08.480
what they call a stable coin. So it is backed by JP Morgan to be equivalent to the US dollar

25:08.480 --> 25:13.760
at all times. So it's not going to fluctuate in value. And it's not even open to their

25:13.760 --> 25:19.020
standard customers. It's a few of their corporate customers. So it's not quite as big a deal

25:19.020 --> 25:25.760
as some people are making it, but it is nevertheless a huge financial institution getting on board

25:25.760 --> 25:31.520
with both blockchain and digital payment technology. And it's them dipping their toe in the water,

25:31.520 --> 25:36.400
but it's still it's kind of like, you know, one small toe dip in the water one giant leap

25:36.400 --> 25:37.400
for the industry.

25:37.400 --> 25:43.840
Yeah, I mean, it is facilitating between institution transfers. So JP Morgan Chase is developing

25:43.840 --> 25:48.920
a new cryptocurrency called the JPM coin, whose value will be tied specifically to the

25:48.920 --> 25:56.520
US dollar. And the new cryptocurrency is built on top of the quorum blockchain technology,

25:56.520 --> 26:03.200
which is a variant or in other words, a fork of Ethereum, which has been modified to serve

26:03.200 --> 26:09.660
the needs of big banks like JP Morgan specifically. Ethereum's network throughput is limited to

26:09.660 --> 26:16.400
roughly 15 to 20 transactions per second. But quorum improves on that by at least as

26:16.400 --> 26:24.040
they say, an order of magnitude, comfortably handling hundreds of transactions per second.

26:24.040 --> 26:28.840
And you have to wonder, what's this really about? Because it's not a public blockchain.

26:28.840 --> 26:32.400
So you lose some of the value there. And that's really the big question is how valuable is

26:32.400 --> 26:39.760
this without a public ledger. But at the same time, you do gain a mathematically reliable

26:39.760 --> 26:44.720
way to transfer funds. So there is some value here, we just don't really know how far this

26:44.720 --> 26:49.520
is going to go. But it is totally a new breed of cryptocurrency, which is stable because

26:49.520 --> 26:54.440
it's pegged to the dollar and backed by a massive financial institution. I think we

26:54.440 --> 26:58.440
all knew it was going to go this way. But now we actually have it.

26:58.440 --> 27:05.040
Well, I for one, welcome this because if it means that when I get paid by an American

27:05.040 --> 27:10.680
company, that payment happens immediately, rather than having to wait a day or so for

27:10.680 --> 27:16.800
all of the legacy systems to catch up with the fact that a number needs to be subtracted

27:16.800 --> 27:23.760
from one bank account and added to another one, then just I welcome this. These big banks

27:23.760 --> 27:31.440
need to embrace this technology and get out of the 20th century and into the 21st century

27:31.440 --> 27:37.280
and make payments actually work instantaneously rather than going through all this clearing.

27:37.280 --> 27:41.880
No kidding, I completely agree. And if you strip away all the hype around blockchain

27:41.880 --> 27:48.080
and Bitcoin and all of that, and you just say cryptographically verifiable transactions

27:48.080 --> 27:53.840
that can be ledged in a way that is audible by other parties, that's a sellable idea.

27:53.840 --> 27:58.960
You take away all the other stuff around cryptocurrency and you just focus on that aspect of it, banks

27:58.960 --> 28:02.280
are going to love that. Oh, and they also love the fact they didn't have to actually

28:02.280 --> 28:07.640
R&D the whole thing. They can just go fork some open source project and they can get

28:07.640 --> 28:11.520
running. I mean, this would have taken them 20 years to develop and they've done this

28:11.520 --> 28:16.920
in, you know, a matter of no time. So we'll see where it goes. My sense is it starts small

28:16.920 --> 28:21.680
as you know, in little, little, and when I say little, it could be millions of dollars,

28:21.680 --> 28:26.600
but transactions between institutions transferring funds, and then it just grows from there over

28:26.600 --> 28:27.600
time.

28:27.600 --> 28:30.200
Yeah, I don't think that everyone's going to be using this for mainstream banks this

28:30.200 --> 28:35.480
year is probably five years out, maybe more than that. But it's the foundation for these

28:35.480 --> 28:41.040
old institutions embracing what's essentially just a new database technology.

28:41.040 --> 28:45.480
However, I want to caution something in the audience. It's, it's pretty easy to get

28:45.480 --> 28:51.440
blase about this, and sort of gloss over blockchain news, and it's it's easy to kind of just tune

28:51.440 --> 28:56.160
this all out. But if you zoom out and look at the big picture here, what we are talking

28:56.160 --> 29:02.600
about is open source fundamentally affecting the way that massive international financial

29:02.600 --> 29:08.700
institutions transfer money around the world. And that's going to be influenced by open

29:08.700 --> 29:14.460
source software. Open source is touching every aspect of our lives these days,

29:14.460 --> 29:22.320
as it should, because apart from the deep social and political reasons for using free

29:22.320 --> 29:28.240
software and open source, it's just fundamentally a better way to do things. And time and time

29:28.240 --> 29:33.760
again, we're seeing pragmatic uses of open source.

29:33.760 --> 29:37.960
As that world evolves and changes, we will cover it every single week go to Linux at

29:37.960 --> 29:43.640
LinuxActionNews.com slash subscribe for all the ways to get new episodes and go to LinuxActionNews.com

29:43.640 --> 29:47.280
slash contact for ways to get in touch with us. Also, if you're well networked in the

29:47.280 --> 29:51.360
open source world, Linux Academy is hiring an instructor recruiter, somebody to help

29:51.360 --> 29:56.740
us grow our training architect team from around 30 to over 100. We need somebody that can

29:56.740 --> 30:01.520
find the best in open source because that's what our students expect. Go to Linux Academy.com

30:01.520 --> 30:06.040
slash careers if that's you. We'll be back next Monday with our weekly take on the latest

30:06.040 --> 30:11.840
Linux and open source news. I'm at Chris LAS. I'm at Joel Ressington. Thank you for joining

30:11.840 --> 30:36.600
us and we will see you next week. See you later.

