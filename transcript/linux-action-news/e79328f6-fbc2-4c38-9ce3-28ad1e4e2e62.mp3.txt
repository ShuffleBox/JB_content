Hello, and welcome to Linux Action News.
Episode 155, recorded on September 20th, 2020.
I'm Chris.
And I'm Joe.
Hello, Joe.
Good to be connected with you.
And we start this week with a brand new shiny GNOME.
Yeah, there's quite a lot of GNOME news this week, but yeah, 3.38, Orbis, has been released.
Lots of small improvements that add up to a pretty good GNOME release.
Absolutely.
As a result of six months of hard work by the GNOME community, 27,000 changes, 901 different
contributors.
And for users of the desktop, there's a lot of quality of life improvements.
I'll tell you the couple that jump out to me is the revamped screen capture app is great.
They've redone the way screen recording works using PipeWire now.
That's really awesome to see that because you know I'm a big PipeWire fan.
We just recently did a update on PipeWire with the developer in Linux Unplugged 3.70
and just totally refreshed my excitement for the way PipeWire is going.
So it's great to see efficiencies built into GNOME now, just thanks to the hard work that's
gone into PipeWire.
But I'll tell you the one that surprised me, Joe.
This time around, I decided to spend a little time with GNOME Maps.
And I got to say, I really like, and I think they're using OpenStreetMap, I really like
the way it displays street labels and highway labels.
It is clearer and easier to read than Google Maps.
And it's nice having it in a native app.
And I've never given Maps really a fair shake.
I just thought, oh, this is interesting.
But unless I was using this on a phone, I don't really get it.
But now when I was trying to like research a route and stuff, I just found it the easiest
to read and the fastest because it's right there on my device.
I actually really like it.
I've been using it on Fedora 33 for a couple of weeks.
For me, what stands out are the little changes they've made, like adding restart as an option
in the system menu and allowing you to put the battery percentage next to the icon.
It's just those little things that GNOME 3 is now so mature that they can focus on adding
those little details to it and tweaking it in little ways to just polish all of the rough
edges off.
I like the ratio we're getting with these releases.
There is a solid ratio of back end performance improvements that are still in that noticeable
category, which if you think about often time, software improvements for performance are
really minor and their net effect can sometimes be felt, but individual fixes aren't typically
felt.
But we are still in that phase with GNOME Shell where individual fixes can still be
felt.
And that's exciting because as an end user, I know that each release gets a little bit
better.
But if you mix in the UI improvements, the quality of life improvements with that, and
I think you get a good ratio and it makes the desktop kind of compelling for somebody
like me who's been on Plasma for a while, I'm looking at this thinking when it ships
in the distros I end up using, I may actually switch back to GNOME with this release.
Also in part because GNOME Web is becoming a more usable secondary browser for me.
I have my primary browser, I have three browsers, I just got so many accounts that I log into
I got like work browsing, personal browsing and fun browsing, or just like I want to have
a web page up or maybe this is just an inbox and that's where the tertiary or secondary
browser comes in and GNOME Web is kind of getting there for me.
There's been a number of improvements in this cycle and I can't believe I'm actually saying
this, but it's kind of appealing to me.
I did play around with the applications grid and how you can reorder it now and you can
drag icons on top of each other and make folders.
I found that a little bit buggy, like once I'd made a folder I had to go back to the
desktop and then back into the application grid for it to work.
This was on the daily image of Ubuntu 2010 though, so I'm not sure exactly where that
bug lies.
Hopefully it'll be fixed by the time it comes out, but I do like that customization because
GNOME traditionally hasn't been that customizable, so anything that adds customizability is going
to be good in my book.
True, and while we're talking about issues with 3.38, keep in mind this one also ships
with a new tracker.
That's the file system indexer.
This could be fine, but it also could have some performance trade-offs.
I have not properly tested this yet.
I'm not saying that it does.
I'm saying this is an area that requires further testing and monitoring here at JB and then
I'll be able to report on the full impact, but it's going to take a little bit because
you got to build up this index, you got to use it for a while, so this is one of those
things where performance implications of this might not be felt until weeks into usage of
3.38.
However, the project seems to be pretty happy about it, and they say some of the major improvements
in Tracker 3 is that the search engine and database make the Flatpak application sandbox
more secure by allowing control over what kinds of data your apps can search and query,
so you have a little more control there as well, or potentially as an end user I would
think you could just turn it off and say Tracker can't index this app at all, if that's your
preference.
But you know, I tried this out on my little Vivo book, which is pretty old, I think it's
like a second generation i3, so it's really not very powerful, and it did feel a bit sluggish,
but then I logged out, changed the session to Xubuntu, and it was much faster.
I know, okay, maybe that's not the target hardware for it, but it's still, for all the
performance improvements, it's still not going to compete with something like XFCE.
Do you think you perceive just the rendering time, like animating things in and out, as
a performance difference, where I would assume in XFCE there is no fade in or fade out of
menus of any such, it's just as fast as it can render to the screen?
That could be it, possibly.
It could be just a feeling, but even websites seem to be quicker, as if there was just more
resources to go around, because this laptop I'm talking about, it's an old i3, it's only
got 4 gigabytes of RAM, not upgradable, so you really need something light, and it could
be perception.
I don't know, I didn't do any benchmarks, but I just went back into XFCE and just felt
much more at home, and things just felt much quicker.
Yeah, fair enough.
I mean, I could see there's probably not only your experience with it and your familiarity
with it, but I could see on a lower end system the GPU's doing less stuff, maybe it does
render things a little faster.
For me, I'm comparing it to Plasma as my daily driver, but I'm also very familiar with Gnome
Shell, and so I see this as a performance improvement from where I've been at, which
is kind of funny, so that's my experience, it's like, oh, this is great.
Yeah, well I'm sure on my 10th Gen i5 desktop it would be absolutely fine, but I wanted
to test it on some older hardware to see how these performance improvements have worked,
and I think it is faster than it once was, but it still just can't compete with desktops
that are just older-fashioned, I suppose.
I'm curious what your older-fashioned preference thinks about the new Gnome versioning scheme,
so get ready for this.
The next version of Gnome due to be released in March 2021 will be Gnome 40.
Well, one thing is it's going to stop people saying 3.38 when they mean 3.38, so that's
good.
And I think that it ultimately makes more sense.
At first I thought, this is ridiculous, what are you doing?
But then if you actually read what Emmanuel Bassi says about this in his post on the Gnome
Discourse, you realize that it does make sense, because I was expecting Gnome 4 to be when
they changed to GTK 4, but what he's saying is that they don't want to have huge changes
happen at specific milestone numbers.
They want it to be much more incremental, and they don't want to have a huge change
like from Gnome 2 to Gnome 3, which was just a complete paradigm shift.
They want to gradually introduce things, and making it 40.1.2.3 makes more sense to do
that, I think.
Yeah, that's a compelling argument.
I will admit my reaction was also sort of like, what the hell, and then my second reaction
was, have they talked to the OpenSUSE folks who are trying to undo the 4.2 versioning
scheme that they came up with?
Maybe they should synchronize.
Don't even get me started on OpenSUSE.
I could not tell you what version they want of anything, I'd have to look it up.
At least with Gnome, it was obvious that this is 38 now, and you know that the even numbers
are stable releases, the odd numbers are development releases.
But Emmanuel makes the point in this post as well, that those even odd numbering things
don't really make any sense anymore, because everything's developed with continuous integration
and stuff that no one's really using the development releases anymore.
No, the more and more of the world is moving to rolling.
Rolling or CI.
It is.
I know.
I'm just teasing you a little bit.
Honestly, I think you've got to read this post, because he does lay it out in such logical
detail, and you might be thinking, no, that's just ridiculous if you only read the headline
like I did, and it sounds like you did as well, but I was convinced by this.
And he says in that post as well, we're not changing the way GTK is versioned.
So that kind of when you realize, okay, yeah, that would have been confusing to have Gnome
4 and GTK 4, but not really have them be one in the same and not have them connected.
He preemptively answers in this post his question.
This is nonsensical.
Why do you want to change the versioning scheme at all?
It's just numbers.
And his answer is, numbers, like words, have meaning and tell a story.
With a change in the versioning scheme, we wish to communicate the fact that Gnome doesn't
see major versions of the development platform as the driving force behind major changes
in the user experience, and that radical changes to the user experience are going to be introduced
progressively, so that we can refine and iterate them over time, instead of dumping them in
our user's lap.
So what this really means for end users of Gnome Desktop is in March 2021, what it says
in the Gnome version in the about section of Gnome Control Center, we'll say 40.
That's really the end user impact here.
Yeah, and there won't be a huge change when GTK 4 comes.
They're going to try and make it less of a huge upsetting change.
Maybe this is more reflective of the position Gnome has as a bit of a workstation OS on
almost every OEM system that ships with Linux right now.
Well, yeah, and every big distro that's shipping a desktop is shipping Gnome.
But also making this workstation grade is finally addressing the extensions.
I think there's a clear market for Gnome Shell extensions.
They add clear utility and value to my desktop experience, and it seems many others.
And so there is a bit of an initiative to reboot the project's approach to extensions.
Yeah, and they're calling it extensions rebooted.
What is extensions rebooted?
It is an attempt to address the myriad of issues around the Gnome Shell extension ecosystem.
Primarily, they want to build a process around how extensions are accepted into the extensions
website and how they are supported.
Rather than being the free for all that it has been, they want some order out of the
chaos.
And I don't know if this is manifesting so much as like, here's a stable Gnome extensions
API for you to use.
But it may manifest as proper documentation on how extensions work and reasonable expectations
to be an extensions developer, how to participate in the Gnome extensions community, a CI pipeline
that has a virtual machine on the back end that can spin the desktop up in multiple versions
and test these things, centralizing extensions for break testing on the Gnome GitLab space,
and potentially maybe even creating a forum for extension developers and extension writers
to work together for a Gnome release cycle.
They all kind of go off into their own individual extension islands right now, and then just
rush to update.
There's some collaboration, but not nearly as much as there could be.
And if maybe the project could even facilitate just those things, I could see that potentially
going a really long way.
Yeah, just starting the conversation and getting people together could be enough to at least
improve the situation where you're not worrying whether your extensions are going to break
every update.
Yeah, very much so.
Sharing some of that work to get the extensions working with the next release could be a huge
relief for the community.
And if this initiative really, like you say, does nothing other than just get these individual
developers talking to each other and collaborating, that made itself just be a success and improve
the situation on Gnome.
I mean, if I had a checklist of things I'd love to see, it'd be everything we just discussed.
And also, here's a stable API for you to use.
You just might not be there.
And maybe I'm just naive, but it seems like that would be fantastic.
But absent of that, all of this initiative seems like it really could get us a long way
to improving that experience, which as a potential switcher back to Gnome Shell, making sure
the extensions I choose stick around really matters to me.
Because I have put a ton of work into whittling down the ones I use to just the essentials.
And the ones I stick with, I really want, I really want.
But I always know in the back of my mind, it's a risk that they could go away with the
next release.
Yeah, I always worry about that when I'm using Gnome every day.
Now you're more worried about what's going on with Chromebooks.
How do you think you say this one, lacrosse?
I think I would say lacrosse, as in the game, where you have those sticks with the baskets
on them, maybe.
Yeah, I would prefer it to be Lacroix, which I wish I had right now.
But this kind of has been spotted by 9to5Google, who caught changes in the upstream ChromeOS
code, right?
Yeah, this has kind of been filtering through various news sites with different people picking
up on different aspects of it over the last couple of weeks.
But it caught my attention this week.
And the crux of it is that Google are in the process of decoupling Chrome, the browser,
from ChromeOS.
And that means that they can be updated independently.
So what Google is doing is creating a Linux desktop that runs a web browser application.
Yeah, rather than it being completely baked into it.
Like we saw with Firefox OS, where you could only update the browser by updating the whole
system, which didn't make any sense.
But with Google's frequent updates with Chromebooks, that's not really been a problem up until
now.
But maybe they're thinking longer term here, that once they stop supporting a particular
Chromebook, the OS doesn't get any updates, but they can at least update the browser potentially,
if it's decoupled.
That has to be part of this.
Some Chromebooks, you know, eight years of support.
That's a long time to update the OS.
So I could also see wanting to decouple that just for testing purposes and shipping purposes.
But something else that's kind of interesting in this story is part of what's making this
possible for Googles to do with a fully accelerated setup the way they want is utilizing Wayland.
So in this new, separated Linux distro with a Chrome browser on top of it, all of the
native 3D accelerated experience that they guarantee on a Chromebook today is going to
be delivered with Chrome on Wayland.
Yeah.
When I was reading this, it was almost like I could hear your bell ringing in my head
when I saw that.
I thought, hmm, this means that Chrome, which is the most popular browser and let's face
it is very well used on Linux, not by me personally as a full time browser, but nevertheless it's
still installed.
But it means that Chrome on Linux is going to get first class support from Google.
They're going to really care about this on Wayland as well.
This is good news for the Linux desktop if you use Chrome.
And I have to caveat that.
Obviously there are a lot of people who will only use free software and default to Firefox,
but I think there's a lot of people out there on the Linux desktop running the Chrome browser
and this is very good news for those people.
Yeah.
It seems to me that you could look at this as potentially Google acknowledging that there
is a important division of users that they want for their browser that are on the Linux
desktop and the best way to deliver the best version of Chrome is to focus on the Linux
desktop app and then ship that on their Chrome OS distro.
They note in their lacrosse documents that they do expect there to be a slight performance
impact by this change because instead of it all being one integrated piece where the browser
is literally integrated with their display manager, Chrome browser will have to use APIs
to now communicate with its Chrome host OS.
And so they warn of maybe a one to two millisecond skew in performance.
Now I don't know really at the end of the day how you even know if you're a Chrome OS
user this has happened.
It may just be one day Chrome OS updates and they've just separated the two and there's
really no obvious front end user experience to it.
But I agree with you.
I think this is great news for Chrome users of Linux and to me it suggests that Google
sees a larger market here that they need to address and that their current half-assed
approach to Chrome on Linux is insufficient and this is them getting their game together
for the Linux desktop and that to me is even a louder signal than this what seems to be
a much overlooked move for Chrome OS.
I disagree.
I'm afraid I don't think they particularly care about the Linux desktop.
I know that it's growing and it's a valuable segment of the market because there's a lot
of developers and IT professionals and all the rest of it is in Linux but I think there
are far far more people using Chrome OS and I think that it's much more of a sort of happy
byproduct that it's going to be good for the Linux desktop.
I don't think that was forefront in their mind at all.
I think it was all about Chrome OS and making that easier to update and support longer term.
Maybe that is extremely possible.
The one thing that gives me pause with that is they knew going in to building these Chromebooks
and building Chrome OS and signing up for eight years of support they knew this would
be a problem.
Those engineers at Google are very clever.
And so they've now decided to fundamentally change the way they architect that OS in a
radical way and it's a pretty big shift and something's driving that.
It's either the technology to enable that only now recently exists, Wayland, or they've
had a rethink of how they're treating the Linux ecosystem in general and they just want
to forgive the saying essentially kill two browser birds with one browser stone.
Maybe.
Maybe.
Linux.ting.com.
What is Ting?
It's simple wireless.
Just six dollars a month plus your usage on top of that.
What I love about it for me is I'm here at the studio pretty much all the time.
Maybe it's a problem.
And then I head home and in both locations I'm on Wi-Fi.
Why would I pay for data when I'm not using it?
And I'm pretty good at thinking stuff to my phone too.
So that's also like for the tech crowd a leg up.
You pay for what you use a fair price for how much you talk, text and data you use.
They have nationwide coverage, three different carriers coast to coast you can choose from.
I currently am on Verizon but in the past T-Mobile was better for where I sat but I'm
in a new location now.
And something I love about Ting is no contracts.
They don't lock you into a commitment.
You could try Ting risk-free.
Start by going to linux.ting.com.
You'll get a $25 service credit or $25 towards a device and they have a really easy way for
you to check your phone.
When you go to linux.ting.com there's a check your phone link right there.
Just put in your information and that'll give you a pretty good snapshot of your starting
position with Ting.
And then once you do sign up, because I think you'll probably want to when you look at the
pricing, you're in complete control.
You can see your usage at a glance.
You can set usage alerts which is really handy for kid devices.
Think about that too for family members who are not heavy phone users but you want them
to stay connected.
Ting is perfect.
I'm looking at you mom.
And people love using Ting because the customer support is there when you need it.
That dashboard makes things simple and they have a bunch of great devices to choose from.
From a SIM card by itself all the way up to the Galaxy S10 down to a flip phone.
They have the flip phone.
You can also get the iPhone SE directly from Ting but I think a lot of people in our audience
they bring a device because then you can take that $25 credit, you apply it to your account
and it'll likely cover your first month because like the average Ting bill is $23 a month.
You just get started at linux.ting.com.
Well bad news for anyone who was waiting for Firefox send to come back and even worse news
if you also used Firefox notes.
Yeah, double whammy this week.
Now Firefox send was my favorite of the recent tools when they looked like they were going
into different service categories.
And I think it got a loyal audience and I'd used it several times but unfortunately Mozilla
writes some abusive users were beginning to use send to ship malware and conduct spear
phishing attacks.
So this summer they took send offline to address that and they're just kind of leaving it offline.
And I always wondered when they launched it how are they were going to solve this problem.
Yeah, exactly.
You didn't have to sign up or anything.
It was so convenient to use.
It just seemed obvious that it would be abused.
Now it is an open source project so someone may conceivably fork it.
There are some neat like command line implementations already out there and I'll just give a friendly
plug for magic wormhole little quick command line app that I love to send files to folks
just peer to peer.
And notes was a browser extension that you could use to sync text between your computer
and your phone and it was all encrypted and everything and it was well loved by a small
number of people by the sounds of things.
But I just don't think that it had the adoption to justify its existence, which we have to
expect to see more of this as Mozilla have shed a bunch of staff, they're looking to
cut costs, they're going to be casualties.
It sort of makes sense and I think Mozilla is pretty upfront about it in this post.
They say it was essentially us working out our sync back end and we needed a project
that wasn't people's super important passwords.
So it was notes but you know we figured out the tech and now we don't really have the
resources to run it and I think it's pretty fair on that one.
And send also in the grand scheme of things is it looks like a high cost low return kind
of project and it's completely fair they killed it.
One could argue maybe should never have launched but that's a separate discussion and I would
love to see some projects fork this and people have their own self-hosted implementations
of it.
So that's not a bad contribution to the world in the end.
Yeah we can add it to our self-hosted pocket instances.
Oh hang on, still waiting for the source code on that one.
You know they get a lot of goodwill with that one.
But you know I've got a friend who's somewhat interested in Linux and hasn't quite made
the switch yet and he said to me that he used both of these and he was very annoyed that
they were being shut down and it was just yeah okay thanks Mozilla, yet more disappointment.
Yeah that's completely understandable from an end user standpoint who's relying on this.
I think what you're seeing here is Mozilla's had to make some hard choices and we're still
watching the fallout from that.
Yeah and I think there's going to be a lot more hard choices to come and ultimately that's
probably good.
They should be focusing on their core products, the browser, maybe Thunderbird as well and
the products that are going to make the money, the services and everything, not on all of
these folly ideas I suppose you could say.
And I think there are going to be more casualties here as they realize that they have to cut
costs and focus more.
And ultimately that's the only thing that's going to save them I think long term is focus.
That's the scope of the problem we're talking about.
It's not lost on me and it's not lost on Joe that almost every week there is another piece
to the story about Mozilla on this show and that's remarkable if you think about it.
That is the unwinding of a very complicated story that we are all seeing play out in front
of us happening in real time and this is another piece in that chain.
And I suspect the links earlier made these links inevitable.
It doesn't mean that Firefox isn't still shipping.
In fact Firefox 81 is now rolling out to users of the Play Store on Android.
Yeah and this is something that you need to update to.
If you've been stuck on 68 deliberately because you know that a bunch of things have changed
and let's face it they're not improvements it's a bad idea to stick on 68.
You need to update because simply being connected to the same LAN as an attacker and having
the browser open is enough to make you pretty vulnerable.
Sticking around on version 68 that's something that people are doing on the Android platform
right now?
Yeah there was a huge gap between Firefox 68 on Android and Firefox 79 where they were
keeping 68 updated while they worked on 79 and then they dropped 79 and pretty much
everyone hated it because they just pulled out all the features and so at least my understanding
is there are a bunch of people who are still stuck on 68 kind of waiting for things to
shake out a little bit but really you'd be foolish to do so now with this vulnerability
out there.
The developer that found this Chris Mobley has released a proof of concept so there's
that aspect of this as well which means this is easier for malintended developers let's
say to replicate.
The target just simply has to have the Firefox application running on the phone.
That's it.
You don't need to access any malicious website.
You don't have to click any malicious link.
There's no man-in-the-middle application required.
They can just simply be in a coffee shop the classic cliche coffee shop on the Wi-Fi and
the malicious intender can trick Firefox on your phone into triggering Android's intent
URIs with zero user interaction.
Now the good news is Chris has already reported this issue directly to Mozilla and it's encouraging
to see that they responded right away.
He writes they were quite pleasant to work with providing some good info on where exactly
they think the bug came from and he goes on to say that if you find a Firefox bug he definitely
recommends sending it straight to them.
He says the process was very easy the team members are smart and friendly and it was
a good way to support the project and it helped shape the way people use the web.
That is great to hear that when Mozilla does find out about an issue they seem to handle
it with a lot of grace.
I'm not surprised to hear that at all I've often heard a lot of good things about the
people working at Mozilla.
Well get ready to live with the new Microsoft normal they have submitted a series of patches
to the Linux kernel with the aim being to create a complete virtualization stack with
Linux with the Microsoft hypervisor.
We're talking here Linux running in the root partition with direct access to hardware that
doesn't require Windows for Hyper-V.
Yeah these patches are just RFC request for comments at this stage so this isn't happening
just yet but this is the very first beginnings of it and as you say this means that once
all this gets pushed into the kernel you won't have to have Windows on the root partition
of Hyper-V you can have a complete Linux stack asterisk apart from Hyper-V running on Azure
or potentially other places like maybe Windows subsystem for Linux.
Maybe.
Someone else interesting in this RFC is Microsoft's principal software engineer acknowledged publicly
that quote we drew inspiration from the Zen code in Linux noting that Hyper-V's architecture
is more similar to Zen than it is to KVM.
I just think that's noteworthy having that acknowledgement on the public record that
Zen inspired Hyper-V and a lot of people have good things to say about Hyper-V.
Yeah and it's yet more acknowledgement from Microsoft that Linux is very important and
we'll link to a register article about this and there's something towards the end of it
that really jumped out at me and that was that Windows 10 is on a path to becoming hybrid
Windows slash Linux system and it made me think about how years ago people would predict
that the next version of Windows would be Linux based and they just cut away all the
dead wood all the old compatibility kind of do an Apple pretty much and maybe have some
sort of compatibility layer but base their desktop on Linux and I also know that's ridiculous
that couldn't happen but the more I read about WSL 2 and Azure and Hyper-V the more I think
that maybe just maybe that is where they're going but they're not going to do it overnight
they're not going to have a big Apple style reveal and that's it we're getting rid of
x86 and going to ARM and just deal with it over two years.
It's going to be just creeping bit by bit they'll make the developer story better and
better with the Linux kernel and they'll put more and more stuff over to that until eventually
the NT stuff will just fall by the wayside and you'll end up with a Linux desktop.
I mean is that crazy of me to think that?
I think so I mean I don't want to be the guy that was like no it's never going to happen
and then like in two years it happens but I think this is all about Azure still and
yeah these changes will definitely eventually trickle down to desktop Windows 10 but if
you look at this I believe what they are trying to do is solve a problem for Azure customers
and that is right now if you go run VMs on Azure even if they're Linux VMs underneath
it all they're running on a Windows box and that ultimately has performance limitations
especially when you're trying to scale and that is a limiting factor I think in my opinion
what do I know for Azure and now they can offer a quote complete virtualization stack
with Linux end quote I think that's a key thing for them and along with that they've
also ported Intel's open source cloud hypervisor tool which is a virtual machine monitor written
in rust that normally runs on KVM but they've ported it over to Hyper-V but it's early still
but I think it's an indicator of where their head is at with this is they're looking at
this very much from a services offering standpoint I could see it trickling down all the way
to desktop but I don't know if it has as much practice there because in reality you kind
of achieve this with dual booting right I mean in a way so I don't know for sure I think
it could indicate a future trend line but I'm still not buying the rumor that one day
we're gonna see an official desktop Linux for Microsoft I just I think the GPL is not
necessarily attractive to them in the desktop context in the server side development tools
area I think they're comfortable with it now I don't see that with them on the desktop
yet and going all Linux and shipping the Linux environment means touching a lot of GPL code
yes but they're already doing that they're already shipping Linux kernel updates via
Windows update yeah because it's GPL 2 not 3 and maybe they were worried that it might
switch over to 3 and that would cause them a lot more problems but it's pretty clear
that at least while Torvalds are still around it's going to be GPL 2 and I can't imagine
the Linux Foundation wanting to go the GPL 3 route yeah and so that problem seems to
be solved and I'm not talking two years that's ridiculous I'm talking 10 plus years I'm talking
very very slowly piecemeal bit by bit it starts to rely more and more on the Linux kernel
I don't know I still think it's it's unlikely but it's it seems that it's possible it now
looks like it's possible for the first time to me and the question I think is what happens
if the kernel team says nice but no thanks will Microsoft run their own fork of the kernel
that seems like something they are capable of doing they already do with Azure sphere
so perhaps they would do this for Azure virtualization options as they would just be a Microsoft
kernel and you're right you're like at that point they're so deep in a GPL code that I
think my concern may not be founded because they're about as GPL as it's going to get
now they're right in there with the kernel you know I don't think that these patches
will be rejected because as long as it doesn't affect anything else then it doesn't really
matter and as long as the code is up to scratch and Microsoft's got enough experience now
with dealing with Torvalds and team I don't think that that's going to be a problem right
and they're a valuable member of the Linux Foundation which pays a couple of those paychecks
on the Linux kernel team and I think it's a clever strategy to go in and say it's a
lot like Zen it's you know it's like Zen but with some differences I suppose and whatever
happens with that story and everything else we've been tracking this week we'll keep you
updated we'll keep an eye on it go to linuxactionnews.com subscribe for all the ways to get this particular
show but maybe even better yet go get the all Jupiter broadcasting shows feed you can
get it on the main site or just search in your podcast client not only do you get this
show but anything new we launch you'll get it there first and you can go to linuxactionnews.com
slash contact for ways to get in touch with us we'll be back next Monday with our weekly
take on the latest Linux and open source news you can find me at chrislass.com and you can
find me at joelress.com thanks for joining us and we will see you next week see you later
