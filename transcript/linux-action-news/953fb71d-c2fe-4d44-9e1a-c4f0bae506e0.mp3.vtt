WEBVTT

00:00.000 --> 00:16.240
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.240 --> 00:20.380
This is episode 54, recorded on May 20th, 2018.

00:20.380 --> 00:21.380
I'm Chris.

00:21.380 --> 00:22.380
And I'm Joe.

00:22.380 --> 00:23.380
Hello, Joe.

00:23.380 --> 00:26.640
You don't happen to be doing this week's episode from your watch.

00:26.640 --> 00:31.800
Not quite, but I have been playing with my smartwatch, which I've dug out of the drawer,

00:31.800 --> 00:36.440
to play with Asteroid OS, which has reached version 1.0.

00:36.440 --> 00:43.620
And Asteroid OS is an alternative ROM for smartwatches that is Linux-based and completely

00:43.620 --> 00:44.620
open source.

00:44.620 --> 00:47.800
Yeah, you say Linux-based, I say it's based on some of the best.

00:47.800 --> 00:49.660
It's the open embedded platform.

00:49.660 --> 00:56.040
It's OpenPKG, Wayland, Qt 5, SystemD, BlueZ, and your favorite, Pulse Audio.

00:56.040 --> 00:59.840
Yeah, it's kind of like a proper Linux box on your wrist.

00:59.840 --> 01:02.880
It's very strange that they even talk about being able to run Docker on it.

01:02.880 --> 01:07.240
Yeah, that's my favorite part is if you want to run Docker on your watch, go for it.

01:07.240 --> 01:12.260
It's pretty feature complete, at least in the screenshots, and the device range is pretty

01:12.260 --> 01:13.260
complete as well.

01:13.260 --> 01:19.680
It'll run on the LG G Watch, the LG G Watch Urbane, the LG G Watch R, the Asus ZenWatch

01:19.680 --> 01:23.280
1 through 3, which I happen to have the ZenWatch 3, so I'm looking forward to that, and the

01:23.280 --> 01:24.960
Sony SmartWatch 3.

01:24.960 --> 01:26.920
So which in that batch did you have?

01:26.920 --> 01:33.040
I have the Sony SmartWatch 3, which unfortunately is the one that is least well supported.

01:33.040 --> 01:40.620
There's no haptic, and it's a little bit buggy, which kind of sucks, but I used it

01:40.620 --> 01:43.620
for a day, and it was great.

01:43.620 --> 01:49.680
It's not as complete feature-wise as, say, Wear OS, which used to be called Android

01:49.680 --> 01:53.480
Wear, but I don't need those apps and things.

01:53.480 --> 01:56.200
All I need is notifications on my wrist, really.

01:56.200 --> 02:01.300
The only thing it's missing on my particular watch is haptic, which is a kind of crucial

02:01.300 --> 02:02.300
thing for me.

02:02.300 --> 02:06.920
I want it to vibrate so I can then look at the watch, and if they could get that working

02:06.920 --> 02:12.500
on my particular one, then I'd be all over this, and I'd be using it every day.

02:12.500 --> 02:17.160
And is this syncing to your Android device using their companion app on your phone?

02:17.160 --> 02:21.400
Yes, which I went looking for in the Play Store and couldn't find, and then, oh no,

02:21.400 --> 02:22.400
it's in F-Droid.

02:22.400 --> 02:24.760
Oh, that's a kind of win.

02:24.760 --> 02:28.340
It's actually surprisingly complete for a 1.0 release.

02:28.340 --> 02:33.640
It does support phone notifications, it has an alarm, a calculator, a music remote control,

02:33.640 --> 02:36.560
a stopwatch, a timer, weather forecasts.

02:36.560 --> 02:42.420
In addition to that, it's in 20 languages, which is pretty damn impressive for a 1.0,

02:42.420 --> 02:49.380
and it comes with an SDK with examples and tutorials that help developers get started.

02:49.380 --> 02:52.480
So I'm definitely going to throw it on the ZenWatch 3.

02:52.480 --> 02:57.120
Yeah, and if you don't have one of the compatible watches, you can run it in an emulator.

02:57.120 --> 02:59.920
I think even in QEMU, you can get it running.

02:59.920 --> 03:00.920
So that's pretty cool.

03:00.920 --> 03:01.920
Right?

03:01.920 --> 03:04.120
Yeah, that is another way to play around with this if you don't have a watch to load it

03:04.120 --> 03:05.120
on.

03:05.120 --> 03:08.920
It's just really impressive they've gotten this far in a 1.0, and it just keeps that

03:08.920 --> 03:14.640
age-old truth alive in 2018 that you can put Linux on anything, and these watches are probably

03:14.640 --> 03:15.640
ripe for it.

03:15.640 --> 03:17.840
I'll be really excited to see where this project goes.

03:17.840 --> 03:20.960
Yeah, you might say it's one to watch.

03:20.960 --> 03:22.920
You had to do that.

03:22.920 --> 03:29.760
Speaking of fails, eFail was big news this week, and it really kind of got advertised

03:29.760 --> 03:32.400
as doom and gloom for OpenPGP and S-MIME.

03:32.400 --> 03:38.600
In fact, the EFF went as far as saying, disable OpenPGP in your email client.

03:38.600 --> 03:39.600
Stop using it.

03:39.600 --> 03:44.160
Yeah, it was kind of alarming what the EFF said about it, but having listened to Wes

03:44.160 --> 03:49.000
and you talk about it on TechSnap, I'm a little bit less concerned now.

03:49.000 --> 03:52.560
There are fairly straightforward ways to mitigate this.

03:52.560 --> 03:56.160
Check out TechSnap.systems.368 for Wes's complete breakdown.

03:56.160 --> 04:00.660
There is some things to consider, especially if you're using S-MIME or Enigmail, which

04:00.660 --> 04:05.040
is probably the takeaway for our audience is Enigmail is somewhat impacted by this.

04:05.040 --> 04:09.820
The researchers released a PDF with all of the email clients and services that are not

04:09.820 --> 04:16.760
properly implementing a specific function of GNU PG called Modification Detection Code,

04:16.760 --> 04:17.760
or MDC.

04:17.760 --> 04:23.600
It's been a standard for almost 18 years, and that check would have prevented the automatic

04:23.600 --> 04:27.840
decryption of emails that Enigmail is vulnerable to.

04:27.840 --> 04:32.120
Now, you probably should disable HTML email for now, maybe disable Enigmail.

04:32.120 --> 04:35.860
The safest bet is continue encrypting your email.

04:35.860 --> 04:40.520
Just encrypt outside of your email client and decrypt outside your email client.

04:40.520 --> 04:46.680
That is the best way to mitigate this, but that puts one more barrier up, and it means

04:46.680 --> 04:50.400
that people are less likely to encrypt their emails, doesn't it?

04:50.400 --> 04:55.920
Obviously there are people who have to encrypt them because they're in certain circumstances,

04:55.920 --> 05:01.480
journalists and whistleblowers, that sort of thing, but isn't the goal to have everybody

05:01.480 --> 05:05.440
encrypt their emails all the time?

05:05.440 --> 05:07.600
This just makes it harder for people to do that.

05:07.600 --> 05:11.480
I don't encrypt any of my emails, and I don't think you do, do you?

05:11.480 --> 05:12.880
I have from time to time.

05:12.880 --> 05:15.240
I maintain a Keybase profile as well.

05:15.240 --> 05:17.240
I'm Chris Lass on there.

05:17.240 --> 05:18.940
I'll tell you, I think you're right.

05:18.940 --> 05:23.040
If you make it more difficult, less people will use it.

05:23.040 --> 05:29.520
The hardest thing about encryption is the math can be solid, but the implementation

05:29.520 --> 05:34.680
of the math can be flawed, and that implementation is really what makes the difference.

05:34.680 --> 05:41.120
If you are really reliant on robust encryption, you have to also be very aware of how it's

05:41.120 --> 05:42.120
implemented.

05:42.120 --> 05:46.320
As an example, Signal is generally considered a well-implemented protocol, but the desktop

05:46.320 --> 05:52.960
implementation of Signal on Windows was recently discovered to have cached plain text chats

05:52.960 --> 05:56.640
that were outside the encryption scheme because of an implementation flaw.

05:56.640 --> 06:01.400
Signal, the protocol, 100% solid, but the way it was implemented on the Windows desktop

06:01.400 --> 06:02.400
wasn't.

06:02.400 --> 06:06.560
That's what's happened here with these mail clients, and that's a point that Proton Mail

06:06.560 --> 06:12.520
tried to make in the wake of all of this is, this is why we implement GNU PG encryption

06:12.520 --> 06:17.200
specifically like this, and they outline all of that on their blog, which we also analyzed

06:17.200 --> 06:20.920
in that episode of TechSnap, but I think it drives home the point that if you really are

06:20.920 --> 06:24.680
going to be dependent on this, you have to be a connoisseur of the implementation of

06:24.680 --> 06:25.680
the math.

06:25.680 --> 06:28.160
Well, it's interesting you mentioned Signal.

06:28.160 --> 06:32.720
It feels like that's where people are going for their encrypted communication is apps

06:32.720 --> 06:39.800
like that, a more modern approach to encrypted messaging rather than good old-fashioned email,

06:39.800 --> 06:46.200
and I feel that with each big story like this, a lot of people will only hear the headline

06:46.200 --> 06:53.080
and not necessarily dig into it and think mistakenly that GPG has got the problem in

06:53.080 --> 06:58.920
it or OpenPGP or whatever, and that means that maybe they'll be less likely to use that

06:58.920 --> 07:04.720
kind of encryption, and it'll push them more to these sort of centralized apps rather than

07:04.720 --> 07:09.480
the truly decentralized communication method that we've had for all these years, which

07:09.480 --> 07:10.480
is email.

07:10.480 --> 07:12.520
Yeah, there definitely could be that effect.

07:12.520 --> 07:19.680
The implementation size, the momentum behind OpenPGP and GNU PG encrypted emails is so

07:19.680 --> 07:20.680
large.

07:20.680 --> 07:23.080
There are old-school folks out there that that's how they've been communicating for

07:23.080 --> 07:27.440
a really long time, and they know how to do it right, and I don't think they're going

07:27.440 --> 07:28.440
to be switching away.

07:28.440 --> 07:32.600
So it's not like we're all just going to see it disappear, but I do think probably new

07:32.600 --> 07:36.080
people coming online today or people that are getting into encryption because all of

07:36.080 --> 07:39.400
a sudden they have something that they need to keep private, I bet you're right.

07:39.400 --> 07:41.200
They're going more to things like Signal.

07:41.200 --> 07:46.600
They're not going to Thunderbird with Enigma, and then setting up GPG keys and all of that.

07:46.600 --> 07:47.760
I doubt it.

07:47.760 --> 07:49.560
I don't know if it's necessarily better, though.

07:49.560 --> 07:51.920
I think I would probably be happier if they were.

07:51.920 --> 07:56.040
Yeah, it'd be interesting to hear how much of the audience uses encryption for their

07:56.040 --> 07:57.040
emails.

07:57.040 --> 08:01.400
So do get in contact, linuxactionnews.com.com It appears after the GNOME development community

08:01.400 --> 08:07.620
received some feedback, they decided to roll back a somewhat controversial decision earlier

08:07.620 --> 08:13.440
in the week to remove the ability for Nautilus to launch binary applications.

08:13.440 --> 08:15.360
This caused quite a big stink, didn't it?

08:15.360 --> 08:16.360
I had emails.

08:16.360 --> 08:17.360
It was all over Telegram.

08:17.360 --> 08:18.900
It was all over Reddit.

08:18.900 --> 08:22.680
It was people saying, oh, look, typical GNOME behavior, removing features just because they

08:22.680 --> 08:25.140
think people don't need them.

08:25.140 --> 08:31.080
And at least this time they actually did listen, and they are bringing this feature back while

08:31.080 --> 08:32.960
they're not taking it away, I suppose.

08:32.960 --> 08:39.120
It is something that was a bit short-sighted of them, I think, to not consider that some

08:39.120 --> 08:44.520
people do need to execute scripts and binaries from their file manager.

08:44.520 --> 08:45.520
Or app images.

08:45.520 --> 08:48.360
Yeah, app images is a perfect example of that.

08:48.360 --> 08:54.880
And OK, I said need to, yeah, you can open the terminal CD to the directory and run it

08:54.880 --> 08:55.880
that way.

08:55.880 --> 08:59.320
But most people just want a double-click job done, don't they?

08:59.320 --> 09:03.740
You know what was funny is the day that this story broke, I bought a game called Everspace

09:03.740 --> 09:06.560
off of GOG.com and downloaded it.

09:06.560 --> 09:07.560
And you know what it was?

09:07.560 --> 09:11.680
It was a binary file that I double-clicked on in my file manager, and then it ran me

09:11.680 --> 09:14.520
through an installer the day that the story broke.

09:14.520 --> 09:19.920
And this would have affected bin files, run files, shell scripts, dot app image files,

09:19.920 --> 09:20.920
dot desktop files.

09:20.920 --> 09:23.980
If you just have a dot desktop file you want to execute.

09:23.980 --> 09:26.720
And I think the rationale for this was a couple things.

09:26.720 --> 09:32.000
Number one, if they are removing desktop icons from Nautilus, it probably makes sense to

09:32.000 --> 09:33.600
take this functionality out as well.

09:33.600 --> 09:36.760
And then additionally, there's an unquestionable improvement in security.

09:36.760 --> 09:41.720
A lot of users that are going to get some crypto ware around on their system or something

09:41.720 --> 09:44.720
that runs as user privilege are going to be because they downloaded it and double-clicked

09:44.720 --> 09:47.400
that file and it executed.

09:47.400 --> 09:51.240
If you take that ability away from the users and say, no, you have to go through the launcher

09:51.240 --> 09:56.560
or GNOME software, then you're going to substantially improve the security of the desktop for your

09:56.560 --> 09:57.560
average user.

09:57.560 --> 10:01.560
I'm just not a big fan of building a Linux desktop anymore for the average basic user.

10:01.560 --> 10:05.420
I don't think that's our core demographic, and I think we make a very powerful operating

10:05.420 --> 10:09.920
system less appealing as a tool to people that do want to use it to get complicated

10:09.920 --> 10:10.960
jobs done.

10:10.960 --> 10:16.440
So I'm never really on board with that rationale, but I can follow it to a certain logical conclusion.

10:16.440 --> 10:18.240
But I think I agree with you.

10:18.240 --> 10:20.520
It feels pretty disconnected from reality.

10:20.520 --> 10:25.660
Now they did respond to the feedback and decided to halt for now, but discussions are ongoing

10:25.660 --> 10:29.120
about maybe removing this functionality in the future.

10:29.120 --> 10:33.080
And the use case that they cite, which we'll have linked in the show notes, linuxactionnews.com

10:33.080 --> 10:37.460
slash 54, is an obvious one.

10:37.460 --> 10:41.540
It involves somebody who has some scripts that they double click on and run while they're

10:41.540 --> 10:43.580
working on other things.

10:43.580 --> 10:48.360
It's something you would see in any office anywhere in the world.

10:48.360 --> 10:52.760
And they apparently didn't consider this use case.

10:52.760 --> 10:54.360
I am shocked by that.

10:54.360 --> 11:00.100
I'm shocked that they talk about, they use language like, well, nobody is doing this,

11:00.100 --> 11:04.400
and nobody should be running software that way, and nobody downloads a binary anymore.

11:04.400 --> 11:07.300
That's just not acceptable.

11:07.300 --> 11:10.040
That kind of language is surprising to me.

11:10.040 --> 11:12.220
Yeah, it's just disconnected.

11:12.220 --> 11:15.280
But there's such a simple solution here.

11:15.280 --> 11:21.560
What happens on Android if you try and download a random APK and install it?

11:21.560 --> 11:24.820
It says, this install has been blocked by default.

11:24.820 --> 11:28.960
You have to go into your settings and change it if you want to install it.

11:28.960 --> 11:30.360
And why not just do that?

11:30.360 --> 11:34.840
Why not just have it buried in the settings somewhere that you have to enable it specifically?

11:34.840 --> 11:38.560
And that means that the average user probably will never do that.

11:38.560 --> 11:42.600
But power users, developers, whatever you want to call them, would just know to go in,

11:42.600 --> 11:43.840
change one setting, job done.

11:43.840 --> 11:46.860
Yeah, I think that's a pretty straightforward and almost obvious solution.

11:46.860 --> 11:48.560
And you could integrate that with GNOME software.

11:48.560 --> 11:51.520
I think that would be a pretty sensible place to put that.

11:51.520 --> 11:53.160
And it'd be straightforward.

11:53.160 --> 11:57.920
I guess I want to wrap this with, I do appreciate that they push this stuff forward because

11:57.920 --> 12:01.400
it's nice to have a desktop out there doing that.

12:01.400 --> 12:05.640
They have a responsibility in my eye that perhaps they don't feel they have.

12:05.640 --> 12:11.240
And that is the lion's share of the large distributions now ship GNOME as the default

12:11.240 --> 12:12.520
desktop environment.

12:12.520 --> 12:16.680
That as a Linux community is our foot forward now, is the GNOME desktop.

12:16.680 --> 12:21.560
And if they remove desktop icons, or they remove the ability to launch binaries from

12:21.560 --> 12:27.200
the file manager, then it will be simply another extension that the distributions will pile

12:27.200 --> 12:29.760
on on the version of GNOME that ships.

12:29.760 --> 12:34.040
And it's going to perpetuate this issue where we become dependent on extensions.

12:34.040 --> 12:38.120
And then they're going to put themselves into a corner when it comes time to roll GNOME

12:38.120 --> 12:39.120
4.

12:39.120 --> 12:43.720
And they either have to fundamentally break all extensions to have a multi process architecture,

12:43.720 --> 12:48.000
or they maintain compatibility with extensions, and GNOME remains a single threaded desktop

12:48.000 --> 12:49.000
environment.

12:49.000 --> 12:50.760
Well, at least they have rolled back this change.

12:50.760 --> 12:52.680
And it does show that they listen to the community.

12:52.680 --> 12:54.760
Yeah, it does seem like they're taking a steady hand.

12:54.760 --> 12:58.640
And maybe that is an acknowledgement of that responsibility that it's on so many large distributions

12:58.640 --> 12:59.640
now.

12:59.640 --> 13:06.240
But they are more receptive and taking things a little slower.

13:06.240 --> 13:08.280
deo.co action.

13:08.280 --> 13:11.640
Go there to that landing page, that there page, and that's DigitalOcean's way to get

13:11.640 --> 13:16.280
you $100 in credit when you sign up for a new account.

13:16.280 --> 13:20.640
DigitalOcean is infrastructure that you can spin up in less than 55 seconds.

13:20.640 --> 13:22.920
They have SSDs on all of their rigs.

13:22.920 --> 13:25.920
Depending on what you want, you can mix and match the resources as well.

13:25.920 --> 13:29.600
If you need a lot of CPU or you want more disk, you can do that.

13:29.600 --> 13:32.760
And they have data centers all over the world.

13:32.760 --> 13:34.840
And they have some really great features, too.

13:34.840 --> 13:38.800
I love this back end networking stuff they have that they call private networking.

13:38.800 --> 13:42.160
I call it back end networking, really, because think of it like this.

13:42.160 --> 13:45.920
You can have one box that's public facing, has a public IP address, and then you can

13:45.920 --> 13:50.680
have three or four systems sitting behind that on a private internal data center network

13:50.680 --> 13:52.520
that doesn't have a public address.

13:52.520 --> 13:56.280
But your machine that's on the public face could still communicate with it.

13:56.280 --> 13:59.920
And that's great for backups or a database or if you want to proxy something.

13:59.920 --> 14:03.960
Or something I've played around with recently is a NAS system that's connected to a NextCloud

14:03.960 --> 14:07.920
instance running on a Fedora 28 Cloud Droplet.

14:07.920 --> 14:09.560
DigitalOcean has so many different options.

14:09.560 --> 14:13.320
You can deploy an entire stack or a base Linux system and build it up.

14:13.320 --> 14:18.320
They have a super smooth, easy-to-use interface for pros or for beginners.

14:18.320 --> 14:20.920
And they have an API that's clean, simple, and well-documented.

14:20.920 --> 14:24.360
Now, perhaps you're not a developer, so that doesn't matter to you.

14:24.360 --> 14:28.720
But it does mean there's a ton of great open source applications already written that you

14:28.720 --> 14:33.320
can use, integrate into your Linux desktop or on your mobile device, and manage all of

14:33.320 --> 14:34.320
your Droplets.

14:34.320 --> 14:35.880
It's pretty cool.

14:35.880 --> 14:41.580
And you can start with $100 free credit when you go to dio.co slash action.

14:41.580 --> 14:47.120
That's dio.co slash action.

14:47.120 --> 14:50.440
It's been a good week for gaming, especially on Android.

14:50.440 --> 14:55.120
Now instead of needing a Steam link box to stream your games from your big, beefy gaming

14:55.120 --> 14:58.720
PC, you can just install an app on Android and away you go.

14:58.720 --> 15:03.520
Yeah, as long as your PC is connected to Ethernet, you have to have a good connection on the

15:03.520 --> 15:04.680
PC side at least.

15:04.680 --> 15:09.000
And if your Android device is on 5 gigahertz Wi-Fi, you'll be able to play games on your

15:09.000 --> 15:13.360
mobile using a Bluetooth Steam controller or any other Bluetooth gamepad device that

15:13.360 --> 15:16.100
you can get paired to your phone.

15:16.100 --> 15:21.920
And Valve says that apps could support up to 4K at 60 frames per second, but for the

15:21.920 --> 15:25.680
most part, you're going to see most games streaming to your phone at 1080p, 60 frames

15:25.680 --> 15:26.680
per second.

15:26.680 --> 15:29.920
Yeah, I wonder if phones are really the target for this, because it would kind of make more

15:29.920 --> 15:34.040
sense to use a bigger screen like with a tablet or even with an Android box plugged into a

15:34.040 --> 15:35.040
TV, wouldn't it?

15:35.040 --> 15:40.240
Yeah, I am biting at the chomp, as they say, to get the Nvidia Shield TV version of this.

15:40.240 --> 15:41.560
It's an Android TV box.

15:41.560 --> 15:47.600
It's wired in, and it's got a very high-end processor, so it should be able to do 4K.

15:47.600 --> 15:50.400
Not that my TV is, but that's where I want to try this.

15:50.400 --> 15:51.400
And think about it.

15:51.400 --> 15:55.400
I could have one PC, and I confirmed with Valve that it will run on Linux.

15:55.400 --> 16:01.600
I don't know if it does today, but their intention is to allow you to stream Linux Steam games

16:01.600 --> 16:02.860
to these apps.

16:02.860 --> 16:06.480
So it's not going to be a mutually exclusive thing to Windows.

16:06.480 --> 16:10.400
And it's not actually exclusive to Android either, it is going to be coming to iOS, but

16:10.400 --> 16:12.120
we don't talk about that on this show.

16:12.120 --> 16:15.600
Well, yeah, I think Apple is just, they're taking their time.

16:15.600 --> 16:18.480
They're really committed to gaming, Joe.

16:18.480 --> 16:22.360
But then again, Apple isn't the only one having App Store problems this week.

16:22.360 --> 16:28.160
Yeah, so some malware was found in the Snap Store and quickly removed, to be fair, and

16:28.160 --> 16:30.760
it wasn't that harmful.

16:30.760 --> 16:35.560
It was a cryptocurrency miner, so it pegged your CPU and wasted a load of battery life

16:35.560 --> 16:36.560
or energy.

16:36.560 --> 16:41.760
It didn't steal any information as far as we can tell at this stage.

16:41.760 --> 16:48.800
But it is illustrative of a potential problem with how the whole Snap ecosystem works.

16:48.800 --> 16:51.880
I don't think it's necessarily unique to the Snap ecosystem.

16:51.880 --> 16:58.280
I think it's just one of the things you deal with when you have an open submission process.

16:58.280 --> 17:03.960
Traditionally on Linux, it's a system that's designed for and by system administrators.

17:03.960 --> 17:08.600
You have a group of small individuals that are choosing what software gets packaged up

17:08.600 --> 17:11.520
and blessed and then put in the repositories.

17:11.520 --> 17:15.440
And you as a user just assume that these people that have blessed the software have done their

17:15.440 --> 17:17.480
job and you install it.

17:17.480 --> 17:20.520
And it's worked really, really well for a long time.

17:20.520 --> 17:27.680
But in the world of Docker Hub and Snap Stores and App Images, anybody can create one of

17:27.680 --> 17:30.220
these and anybody could submit one of these.

17:30.220 --> 17:34.040
But I think the interesting takeaway from what happened in the case of the Snap Store is

17:34.040 --> 17:37.360
the conversation it seems to have sparked within Canonical after the fact.

17:37.360 --> 17:40.240
Yeah, I think the most interesting aspect of this is that they're going to be adding

17:40.240 --> 17:45.500
verified publishers, which means that when you go looking for a Snap, there'll be some

17:45.500 --> 17:52.220
sort of check mark, blue tick or whatever for developers that are considered trusted.

17:52.220 --> 17:58.560
And so you will know whether you're taking a risk or not with the Snap that you're downloading.

17:58.560 --> 18:00.880
And this seems to me to be an absolute no brainer.

18:00.880 --> 18:03.880
And I wonder why they didn't implement this from the beginning.

18:03.880 --> 18:07.080
I wouldn't be surprised over the next couple of years if there's a few of these learning

18:07.080 --> 18:12.080
processes as they get into this for the first time and really do something at this scale.

18:12.080 --> 18:13.920
There's just certain things you learn.

18:13.920 --> 18:19.240
It's in a way, it's like both Flatpak and Snaps have now had their rite of passage.

18:19.240 --> 18:24.520
Flatpak was being used on the Pirate Bay to distribute pirated Windows games with wine

18:24.520 --> 18:27.160
and DOS box or whatever wrapped up in them.

18:27.160 --> 18:34.360
And now Snaps have been used to bundle a crypto miner that poses as a system demon.

18:34.360 --> 18:37.640
It's sort of in a way like milestones, everybody.

18:37.640 --> 18:38.640
Congratulations.

18:38.640 --> 18:41.240
Yeah, it's like a coming of age almost.

18:41.240 --> 18:42.240
Yeah.

18:42.240 --> 18:48.340
Speaking of coming of age, it seems more and more distributions are dropping i386 support.

18:48.340 --> 18:50.160
No more 32-bit for you.

18:50.160 --> 18:53.240
Yeah, we've reported on this over the last few weeks.

18:53.240 --> 18:58.600
And now the latest Ubuntu flavor to drop 32-bit images is Kubuntu.

18:58.600 --> 19:01.200
You really do wonder what's going to happen with this.

19:01.200 --> 19:03.480
Are they going to drop the whole archive?

19:03.480 --> 19:08.800
There's a lot of discussion going on still, and we're going to continue to follow this.

19:08.800 --> 19:15.160
I've had people say to me that they're using loads of 32-bit atom machines and stuff.

19:15.160 --> 19:19.120
And I think it would be a mistake to drop the archive at this point.

19:19.120 --> 19:22.740
But if they're going to drop it for the 2024 release, I think now is the time to prepare

19:22.740 --> 19:27.680
people and just say, look, stay on 18.04 if you want to use 32-bit machines.

19:27.680 --> 19:29.720
And you've got three years to migrate off to another distro.

19:29.720 --> 19:30.720
Yeah, I agree.

19:30.720 --> 19:33.240
Now is the time to be having this conversation.

19:33.240 --> 19:35.280
They got to get this squared away.

19:35.280 --> 19:37.100
And I don't know if Kubuntu has much choice.

19:37.100 --> 19:42.060
If the rest of Ubuntu goes this way, unless they want to maintain their own fork of all

19:42.060 --> 19:46.140
of the 32-bit stuff, this is just the way the wind is blowing.

19:46.140 --> 19:50.320
So I don't know how much of it is Kubuntu saying we're dropping 32-bit as it is saying

19:50.320 --> 19:52.640
32-bit is just going away.

19:52.640 --> 19:55.680
Well that does remain to be seen with regards to the archive.

19:55.680 --> 20:00.460
Because if they do keep it around, then you will be able to use a net install or a minimal

20:00.460 --> 20:07.060
image to build up a Kubuntu desktop or any of the other flavors who have dropped 32-bit.

20:07.060 --> 20:08.480
That might be the way things go.

20:08.480 --> 20:11.240
I like the way the Kubuntu project is handling this, though.

20:11.240 --> 20:17.120
Valerie in the message says, look, we still have 18.04, 1, 2, et cetera, that we have

20:17.120 --> 20:18.220
to QA.

20:18.220 --> 20:23.240
We still have three years of supporting this LTS even if we are dropping 32-bit support.

20:23.240 --> 20:25.020
So please keep helping us test.

20:25.020 --> 20:27.020
And I think it's good to remind people of that.

20:27.020 --> 20:30.340
At this stage, regardless of which way it goes, there's still going to be machines out

20:30.340 --> 20:33.180
there for years running a version that's 32-bit today.

20:33.180 --> 20:38.620
Yeah, maybe I should dig out my 32-bit on the laptop and do some testing.

20:38.620 --> 20:40.780
But let's end with a quick one then.

20:40.780 --> 20:44.440
Ubuntu 18.04 is now in the Windows 10 App Store.

20:44.440 --> 20:47.940
So they are keeping up with the latest release there.

20:47.940 --> 20:50.900
It's not something that's going away, the Windows subsystem for Linux.

20:50.900 --> 20:51.900
Yeah.

20:51.900 --> 20:57.140
And as a point of clarification, you now have two entries, Ubuntu, which is Ubuntu 16.04,

20:57.140 --> 21:00.100
and then there now will be an Ubuntu 18.04 entry separately.

21:00.100 --> 21:03.620
So they're keeping both of them in there for the Windows subsystem for Linux.

21:03.620 --> 21:07.180
Yeah, it's almost like they didn't think that through, did they?

21:07.180 --> 21:09.580
Well, I'm off to Texas.

21:09.580 --> 21:12.820
June 8 through the 9th is Texas Linux Fest in Austin.

21:12.820 --> 21:17.620
And if you're in the area and want to get some barbecue and hang out, join our Texas

21:17.620 --> 21:21.580
Telegram group, jupitabroadcasting.com slash texas.

21:21.580 --> 21:23.900
We'll be planning meetups there, coordinating times.

21:23.900 --> 21:28.100
We like to keep it fluid, and that's the best way we've found to do it, jupitabroadcasting.com

21:28.100 --> 21:29.100
slash texas.

21:29.100 --> 21:32.560
Plus, I'll have the rover tracker on me the whole way down to Tejas.

21:32.560 --> 21:36.960
So if you want to follow me and meet up along the way, jupitabroadcasting.com slash rover.

21:36.960 --> 21:41.060
And go to linuxactionnews.com slash subscribe for all the ways to get new episodes of this

21:41.060 --> 21:42.380
show every week.

21:42.380 --> 21:45.720
And linuxactionnews.com slash contact for ways to get in touch.

21:45.720 --> 21:50.420
You can support the whole network at the Patreon page, patreon.com slash Jupiter signal.

21:50.420 --> 21:54.100
We'll be back next Monday with our weekly take on Linux and open source news.

21:54.100 --> 21:55.860
I'm at Chris LAS.

21:55.860 --> 21:57.260
I'm at Joe Rissington.

21:57.260 --> 22:00.380
Thank you for joining us, and we will see you next week.

22:00.380 --> 22:18.700
See you later.

