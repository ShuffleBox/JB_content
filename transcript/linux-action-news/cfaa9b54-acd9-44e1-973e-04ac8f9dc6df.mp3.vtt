WEBVTT

00:00.000 --> 00:08.920
Hello and welcome to Linux Action News, episode 181, recorded on March 21st, 2021.

00:08.920 --> 00:09.920
I'm Chris.

00:09.920 --> 00:10.920
And I'm Wes.

00:10.920 --> 00:11.920
Hello, Wes.

00:11.920 --> 00:12.920
Let's do the news.

00:12.920 --> 00:15.440
We start this week with Ubuntu Touch.

00:15.440 --> 00:21.840
And while we don't often cover individual releases, OTA-16 is noteworthy for several

00:21.840 --> 00:22.840
reasons.

00:22.840 --> 00:23.840
Get this, Wes.

00:23.840 --> 00:27.940
Nearly four years ago, almost exactly, just a couple of weeks from now, that canonical

00:27.940 --> 00:31.100
dropped Ubuntu Touch and just it was essentially a code drop.

00:31.100 --> 00:33.680
And then that became an independent project.

00:33.680 --> 00:36.440
I can't believe it's been four years already.

00:36.440 --> 00:41.080
But also noteworthy right now is there's some new fresh hardware landing in the hands of

00:41.080 --> 00:48.240
Ubuntu Touch users, including the new Volaphone, which is now actually shipping and can absolutely

00:48.240 --> 00:49.240
run Ubuntu Touch.

00:49.240 --> 00:54.400
Well, with all this excitement, Dalton Durst joined us to discuss the release.

00:54.400 --> 00:57.960
And it sounds like new hardware or not, there's something for everyone.

00:57.960 --> 01:02.240
If you're a longtime user of Ubuntu Touch, this is the release where you say, huh, I

01:02.240 --> 01:06.400
didn't notice a lot, but for some reason this feels better.

01:06.400 --> 01:12.200
So with the news of this new release itself, the new hardware and a lot more, we asked

01:12.200 --> 01:17.400
why is the project calling this their second biggest release yet?

01:17.400 --> 01:22.820
This is the second largest release ever because a fourth, a quarter of all of the packages

01:22.820 --> 01:26.000
that make up Ubuntu Touch changed.

01:26.000 --> 01:30.060
But at the same time, you're going to download this release, you're an Ubuntu Touch user,

01:30.060 --> 01:36.020
you download like 83 megabytes of changes, which for a 350 megabyte install is a kind

01:36.020 --> 01:37.880
of big.

01:37.880 --> 01:41.760
And you say, well, what the heck changed here?

01:41.760 --> 01:43.580
And you would think that'd be a bad thing.

01:43.580 --> 01:47.600
But really that, we'd feel successful if you said that.

01:47.600 --> 01:56.720
Because this is the release where we upgraded from Qt 5.9 to Qt 5.12, which required changing,

01:56.720 --> 01:58.480
it feels like everything.

01:58.480 --> 02:01.120
I bet.

02:01.120 --> 02:04.980
I think if I recall, it also kind of gets you in line for eventually the transition

02:04.980 --> 02:09.120
from 16.04 base to an Ubuntu 20.04 base.

02:09.120 --> 02:10.120
Exactly.

02:10.120 --> 02:13.920
So that's where we're looking right now is we got to get off 16.04.

02:13.920 --> 02:20.200
Of course, elephant in the room is that Ubuntu 16.04 is almost out of mainstream support

02:20.200 --> 02:22.200
next month.

02:22.200 --> 02:26.760
We're going to keep shipping a few images, a few updates using 16.04.

02:26.760 --> 02:32.540
But our focus is on moving all of our software to 20.04 so that we can successfully release

02:32.540 --> 02:37.660
Ubuntu Touch and hopefully no one notices the difference.

02:37.660 --> 02:41.880
That's the funny thing you and I were talking about before we sat down to record is it's

02:41.880 --> 02:47.480
kind of a success if you migrate from 16.04 to 20.04 and the end user can't really tell.

02:47.480 --> 02:54.600
But with iOS or Android, it's a flagship marketing event with an entirely new UI sometimes dropped

02:54.600 --> 02:55.600
in.

02:55.600 --> 02:57.240
It's a much different beast.

02:57.240 --> 03:03.600
Yeah, it's an interesting difference between how you can develop an open source versus

03:03.600 --> 03:06.280
developing for marketing sometimes.

03:06.280 --> 03:12.280
You say that you're an agile shop and you can make changes iteratively, but that just

03:12.280 --> 03:14.760
doesn't happen sometimes.

03:14.760 --> 03:20.240
I think I'd rather get the innovation as the developers complete it rather than waiting

03:20.240 --> 03:23.880
for a keynote up on a stage on some arbitrary date.

03:23.880 --> 03:27.320
But there's a couple of other new things I've noticed that have landed in here.

03:27.320 --> 03:32.200
The Morph browser is the default browser and it received a bunch of great upgrades this

03:32.200 --> 03:33.200
cycle.

03:33.200 --> 03:37.240
It made changes to the way the downloads work.

03:37.240 --> 03:42.740
So now when you download a file, you get a recent downloads page that shows you what's

03:42.740 --> 03:47.960
going on, what's about to finish, what has finished, more in line with other browsers

03:47.960 --> 03:52.760
and certainly, well, not quite with other mobile browsers, but so it's unique to us

03:52.760 --> 03:53.760
there.

03:53.760 --> 03:54.760
Yeah, that's pretty nice.

03:54.760 --> 03:55.760
That is really great.

03:55.760 --> 03:56.760
All right.

03:56.760 --> 04:02.080
So then there was another thing you were talking about and that was getting new applications

04:02.080 --> 04:04.280
into Ubuntu Touch.

04:04.280 --> 04:07.440
That has been made a little bit easier this cycle.

04:07.440 --> 04:08.440
Yeah.

04:08.440 --> 04:13.800
So Clickable has been getting iterative improvements, well, basically it feels like since forever.

04:13.800 --> 04:20.400
Clickable is our all in one, one stop shop tool for developing Ubuntu Touch apps.

04:20.400 --> 04:25.540
So you can create new applications with it, build your applications and even deploy them

04:25.540 --> 04:28.480
to the store all using Clickable.

04:28.480 --> 04:34.280
And in recent updates, we got a new feature called Clickable IDE, which allows you to

04:34.280 --> 04:42.680
run, well, basically random graphical applications such as a full IDE for developing Ubuntu Touch

04:42.680 --> 04:44.520
applications like Qt Creator.

04:44.520 --> 04:45.520
So how do I do that?

04:45.520 --> 04:51.160
Yeah, you can go to clickable-ut.dev to get the information on how to get started using

04:51.160 --> 04:52.160
Clickable.

04:52.160 --> 04:53.160
Super easy to install.

04:53.160 --> 04:56.240
We also got some new devices in recent times.

04:56.240 --> 05:00.520
Wes and I have had our eye on the Pixel 3a and rumor has it you have some hands on experience

05:00.520 --> 05:01.520
with that one.

05:01.520 --> 05:06.960
Yeah, I got a Pixel 3a XL and secret, secret, you can just tell the installer, oh yeah,

05:06.960 --> 05:07.960
don't worry.

05:07.960 --> 05:09.320
This is actually a 3a XL.

05:09.320 --> 05:15.480
We're working on that, but for now you can just install the 3a image on the XL and things

05:15.480 --> 05:17.620
are a little big, but it works.

05:17.620 --> 05:25.920
But it is a fast device even compared to everything else that we have, which is very interesting

05:25.920 --> 05:26.920
and fun to use.

05:26.920 --> 05:27.920
Hi, Alfred.

05:27.920 --> 05:28.920
I know you're listening.

05:28.920 --> 05:31.500
Thanks for making it.

05:31.500 --> 05:35.680
So that's a great one that I think a lot of people have and might be interested in learning

05:35.680 --> 05:40.920
about, but you can also go to devices.ubuntu-touch.io to see if your device is supported because

05:40.920 --> 05:42.800
we've got a lot of them out there right now.

05:42.800 --> 05:44.800
Yeah, the 3a seems like a great one to try on.

05:44.800 --> 05:46.760
I also saw the Volaphone.

05:46.760 --> 05:50.480
Yes, the Volaphone has landed in people's hands.

05:50.480 --> 05:58.800
It is a device that some SKUs have shipped with Ubuntu Touch pre-installed, which like

05:58.800 --> 06:03.760
the PinePhone before, it is just a really exciting experience and a little nerve-wracking.

06:03.760 --> 06:05.920
Oh boy, is the image going to work?

06:05.920 --> 06:08.580
Is everything situated?

06:08.580 --> 06:12.300
It feels so good when people start getting them in their hands and they say, man, this

06:12.300 --> 06:13.300
is great.

06:13.300 --> 06:14.720
Hey, I've got some feedback for you.

06:14.720 --> 06:18.340
It's just, it's a great experience every time.

06:18.340 --> 06:21.940
And then last but not least, tell me a little bit about what happens now.

06:21.940 --> 06:27.280
Work begins on OTA-17, which starts, I would imagine, more work continuing the transition

06:27.280 --> 06:28.280
to 2004?

06:28.280 --> 06:29.280
Yes.

06:29.280 --> 06:36.720
So we're working on bringing things together between, we have a few different branches

06:36.720 --> 06:39.840
kind of of Ubuntu Touch development right now.

06:39.840 --> 06:45.120
The standard Android 9 and mainline for different types of devices.

06:45.120 --> 06:50.800
So trying to bring all of those back together so that they all go on to Ubuntu 2004 in one

06:50.800 --> 06:55.800
big group and we don't need to deal with all this different branching stuff.

06:55.800 --> 07:03.120
But we've also got people working to improve our infrastructure and how we do releases

07:03.120 --> 07:07.280
so that we can make 2004 as smooth as possible.

07:07.280 --> 07:09.880
Thanks to Dalton for getting us up to date.

07:09.880 --> 07:17.160
That URL to check if your device is compatible is devices.ubuntu-touch.io.

07:17.160 --> 07:20.520
There's more details in their recent Ubuntu Touch Q&A as well.

07:20.520 --> 07:24.600
Of course, we'll have that linked in the show notes.

07:24.600 --> 07:26.120
Linux.ting.com.

07:26.120 --> 07:30.920
This is how I do mobile and it's never been a better time to try out Ting.

07:30.920 --> 07:35.560
And if you're a budget minded individual, check out Ting's set five plan.

07:35.560 --> 07:40.240
For just $25 a month, you get unlimited talk and text.

07:40.240 --> 07:44.920
You get five gigabytes of LTE or 5G data or all the data can be used as a hotspot.

07:44.920 --> 07:50.640
You get nationwide LTE coverage and 5G where it's available for no contract at $25.

07:50.640 --> 07:54.240
Really to make that work, all you have to do is sync your music and your podcast before

07:54.240 --> 07:59.240
you hit the road and you can pretty much make that work and have wireless for $25 a month.

07:59.240 --> 08:02.800
But if you need two gigs or you need a lot more than that, there's a perfect Ting plan

08:02.800 --> 08:03.800
for you.

08:03.800 --> 08:08.400
Every plan gets access to Ting's award winning customer service, the best in the business

08:08.400 --> 08:11.160
and their nationwide access to networks.

08:11.160 --> 08:15.140
I personally have been relying more on the Verizon network as time goes on, but I've

08:15.140 --> 08:19.940
been a Ting customer forever, so I can tell you there is real benefit in multi network

08:19.940 --> 08:23.860
coverage with just one company to interface and manage it all.

08:23.860 --> 08:27.640
But just go to linux.ting.com to check your current phone because with all those different

08:27.640 --> 08:30.840
networks, your phone is likely going to work.

08:30.840 --> 08:35.400
And if you go to linux.ting.com, you get $25 in credit and it's simple.

08:35.400 --> 08:36.400
The process is easy.

08:36.400 --> 08:40.400
They have a really easy quick UI to check your phone and when everything checks out,

08:40.400 --> 08:45.160
they just send you a SIM card, you pop that in your existing phone and you're cutting

08:45.160 --> 08:47.200
your phone bill in half or more, right?

08:47.200 --> 08:50.200
It's never been easier either with Ting's new plans.

08:50.200 --> 08:51.680
They have some great prices now.

08:51.680 --> 08:53.600
It's the next generation of Ting mobile.

08:53.600 --> 08:54.880
It's here right now.

08:54.880 --> 08:59.000
Go see how much you could save and get $25 off at linux.ting.com.

08:59.000 --> 09:02.920
It's never been a better time to try Ting mobile.

09:02.920 --> 09:06.480
Bring your phone, get $25 off and support the show.

09:06.480 --> 09:12.080
Choose smarter, choose Ting mobile, linux.ting.com.

09:12.080 --> 09:16.900
GNOME 40 is right around the corner with the release candidate shipping last week and the

09:16.900 --> 09:21.020
official GNOME 40 debut on track for this week.

09:21.020 --> 09:26.160
And as you might expect with a major release, there's going to be a few bumps.

09:26.160 --> 09:31.000
To try to smooth things out though, Sri Ramakrishna has authored a blog post preparing extension

09:31.000 --> 09:34.780
developers for porting their code to GNOME 40.

09:34.780 --> 09:39.160
Extension developers, there's a bit of PSA also in here for regular GNOME end users.

09:39.160 --> 09:40.580
We'll get to all of that.

09:40.580 --> 09:44.240
There's just been significant changes in GNOME Shell and specifically in the way that the

09:44.240 --> 09:46.380
overview function works.

09:46.380 --> 09:50.680
And so the team wanted people to understand there are some changes that are likely going

09:50.680 --> 09:55.680
to, well, there are some changes mandatory to make extensions work in GNOME 40.

09:55.680 --> 10:00.960
To help with those updates, community member JustPerfection has created a porting guide

10:00.960 --> 10:05.320
that you can use to learn how to modify your extension to work with the GNOME 40 Shell

10:05.320 --> 10:06.840
release.

10:06.840 --> 10:10.840
Because of the amount of changes and the fact that some distros for now are just going to

10:10.840 --> 10:17.100
stick with GNOME 3.38, the GNOME project has decided to enforce version checking again

10:17.100 --> 10:18.100
with extensions.

10:18.100 --> 10:19.620
This is something that they used to do.

10:19.620 --> 10:24.440
It's been off for a while and GNOME 40 Shell will check to make sure that the extension

10:24.440 --> 10:29.240
has implicitly said it is compatible with 40, which means the developers will have to

10:29.240 --> 10:34.760
go in and update their extension to say, yes, I'm compatible even if no other changes are

10:34.760 --> 10:35.760
required.

10:35.760 --> 10:41.160
The end result means that as an end user right now or soon after GNOME 40 is released, when

10:41.160 --> 10:45.880
you go to the GNOME extensions website, there's not a lot listed there, although just about

10:45.880 --> 10:49.480
one or two get added every single day during the development cycle right now.

10:49.480 --> 10:50.480
But there won't be a lot.

10:50.480 --> 10:54.080
Some of your favorite extensions will not yet be updated because there is this implicit

10:54.080 --> 10:58.520
requirement that they at least go in and say it's compatible with 40, if not fix something

10:58.520 --> 10:59.800
to make it work with 40.

10:59.800 --> 11:04.040
So you're going to see limited extensions around GNOME 40's release.

11:04.040 --> 11:08.960
But it's nice to see the project trying to communicate this and smooth those bumps out

11:08.960 --> 11:13.520
and prepare the way for GNOME 40 extensions and sort of set the expectations for both

11:13.520 --> 11:19.160
developers and for end users, which I think is a step up from the way things used to be

11:19.160 --> 11:20.160
with extensions.

11:20.160 --> 11:21.440
This seems like a nice improvement here.

11:21.440 --> 11:25.440
I hope this is a trend that continues and we see a little more back and forth between

11:25.440 --> 11:29.080
the extension development community and changes coming upstream from GNOME.

11:29.080 --> 11:32.160
I mean, it's always a little unfortunate when there's breaking changes.

11:32.160 --> 11:36.480
But in this world, in the desktop space, we kind of need that if we're going to advance.

11:36.480 --> 11:39.920
And I don't think any of us are really happy with the status quo of extensions.

11:39.920 --> 11:43.840
So maybe there'll be better integration with CI testing systems.

11:43.840 --> 11:47.360
I think there's also some efforts around, you know, GNOME OS and boxes to make testing

11:47.360 --> 11:51.040
these things easier so that there are more paths, people can get out ahead of this release

11:51.040 --> 11:54.440
and hopefully make all of our favorite extensions actually work.

11:54.440 --> 12:00.280
It's positive to see the team actually considering ways to automate extension integration testing

12:00.280 --> 12:04.200
and to give that information back to developers while at the same time.

12:04.200 --> 12:06.560
So that's like a technical thing they're actually trying to solve, right?

12:06.560 --> 12:07.560
Good to see that.

12:07.560 --> 12:11.920
But while at the same time, they're also trying to create a community space for extension

12:11.920 --> 12:16.320
developers to communicate directly with each other and share ideas.

12:16.320 --> 12:20.900
And they've been laying the groundwork for that for about a year now, close to it.

12:20.900 --> 12:25.600
And I think those things combined with this implicit attempt to smooth these transition

12:25.600 --> 12:31.240
bumps out with a transition guide and a blog post that draws attention to it is a much

12:31.240 --> 12:36.560
more aggressive strategy at making the extension experience better on GNOME Shell.

12:36.560 --> 12:41.640
Without fundamentally re-architecting the way GNOME Shell does extensions, they're trying

12:41.640 --> 12:46.060
to get a lot of the benefits of areas you can improve without having to address that

12:46.060 --> 12:47.360
core problem.

12:47.360 --> 12:50.080
And I actually think it's a pretty clever strategy.

12:50.080 --> 12:54.360
Yeah, well, I don't know that that, unfortunately, the underpinnings will be able to change anytime

12:54.360 --> 12:55.360
soon.

12:55.360 --> 12:58.400
And I think there's always going to be a certain amount of decoupling that extensions have,

12:58.400 --> 12:59.400
right?

12:59.400 --> 13:01.400
They are third party, they're independently developed, they're developed on their own

13:01.400 --> 13:03.220
timelines and tracks.

13:03.220 --> 13:07.440
But if you can make that tooling so that if you do have time, if it is maintained, if

13:07.440 --> 13:11.360
you make it easy from the get go and acknowledge, yeah, we're breaking your stuff, but here's

13:11.360 --> 13:12.360
how to keep up to date.

13:12.360 --> 13:17.280
You know, I've seen it argued a lot that GNOME Shell should have a stable API that extensions

13:17.280 --> 13:18.280
can use.

13:18.280 --> 13:21.280
You know, Plasma has something similar to that.

13:21.280 --> 13:24.440
But the counter argument that I've seen to that is, yeah, okay, maybe there's a place

13:24.440 --> 13:25.600
for some of that.

13:25.600 --> 13:31.220
But oftentimes, extensions are being developed more on the edges, on the new features of

13:31.220 --> 13:36.580
GNOME that haven't really stabilized yet, that wouldn't have an API yet anyways.

13:36.580 --> 13:41.220
That's often where extension developers are kind of pushing the edge and kind of monkeying

13:41.220 --> 13:44.600
with stuff that you wouldn't typically consider stable yet.

13:44.600 --> 13:49.840
And I think that was an interesting argument for there is a place to let extension developers

13:49.840 --> 13:55.120
innovate where a very static, stable API would be beneficial, but perhaps somewhat limiting.

13:55.120 --> 13:59.380
So it's not that it's not without merit, it's just that there is also benefits to the way

13:59.380 --> 14:00.380
it works now.

14:00.380 --> 14:03.480
And when you're making a stable API, you want it to work, right?

14:03.480 --> 14:06.680
Because you're going to hopefully not break that again, it will be set in stone.

14:06.680 --> 14:12.640
So I do hope that GNOME can get there or get to a similar place, but got to figure it out

14:12.640 --> 14:13.640
first.

14:13.640 --> 14:16.700
One of the other things the community is getting figured out right now is how the heck we're

14:16.700 --> 14:23.840
going to use legacy X11 only applications in our bright Wayland only future.

14:23.840 --> 14:26.420
And it seems there's an important update in that regard.

14:26.420 --> 14:31.520
This week marked the inaugural release of X Wayland 21.1.

14:31.520 --> 14:35.560
X Wayland, of course, is an X server that runs inside Wayland and provides backwards

14:35.560 --> 14:40.200
compatibility for those legacy X apps that just never got updates to use Wayland.

14:40.200 --> 14:43.200
Yeah, there could be some classics that never will see any updates.

14:43.200 --> 14:44.560
And we're going to want to keep those around.

14:44.560 --> 14:48.760
But there's like a big elephant in the room here.

14:48.760 --> 14:55.080
Xorg itself really isn't getting much love and no one's really stepping up for the next

14:55.080 --> 14:57.520
version to get released.

14:57.520 --> 15:00.200
And it's now long overdue for an update.

15:00.200 --> 15:05.900
So Red Hat engineers have devised a plan for standalone X Wayland releases that are separated

15:05.900 --> 15:11.480
from the rest of the Xorg server code base to at least get the updated X11 client on

15:11.480 --> 15:14.440
Wayland support out to end users.

15:14.440 --> 15:18.380
This fix or I guess you could say solution is something that Fedora may actually ship

15:18.380 --> 15:23.840
soon in version 34 and one that Ubuntu even has an eye on for future integration with

15:23.840 --> 15:24.840
their distro.

15:24.840 --> 15:30.720
This really seems like a sign of the times for X11 and perhaps its next and last chapter.

15:30.720 --> 15:35.480
I don't know, but with no plans for another release and most of the work that is being

15:35.480 --> 15:41.040
done happening on X Wayland anyway, at least a big chunk before long, I think we might

15:41.040 --> 15:47.320
start thinking of this as the X Wayland project rather than Xorg.

15:47.320 --> 15:48.920
Leno.com slash land.

15:48.920 --> 15:53.600
Go there to get a $100 60 day credit towards a new account and of course support the show.

15:53.600 --> 15:55.100
Yeah, $100.

15:55.100 --> 15:56.360
You can really try out Leno.

15:56.360 --> 16:00.580
They make cloud computing simple, affordable and accessible.

16:00.580 --> 16:05.120
They are the largest independent cloud computing provider and they make it easy to get your

16:05.120 --> 16:07.440
idea online fast.

16:07.440 --> 16:12.280
No matter what skill level you are at or what technology stack you use, Leno can help your

16:12.280 --> 16:14.580
ideas come to life on the web.

16:14.580 --> 16:20.120
If you need a personal web server, a blog or a portfolio, maybe a game server or VPN,

16:20.120 --> 16:21.640
Leno has you covered.

16:21.640 --> 16:25.400
And if you need the scale for a business application or something that goes viral, they can handle

16:25.400 --> 16:26.860
that as well.

16:26.860 --> 16:31.160
They have systems that reliably serve millions of visitors all the time.

16:31.160 --> 16:35.120
But unlike entry level hosting services that lock you into their platform, Leno gives you

16:35.120 --> 16:40.380
full back end access to customize, control the server to fit your needs.

16:40.380 --> 16:43.740
Leno has a lot of rigs to choose from and did you know that some of those rigs have

16:43.740 --> 16:47.040
dedicated AMD epic processors?

16:47.040 --> 16:52.440
Cloud Spectator did a recent survey of the different providers, AWS, Azure, Google Cloud,

16:52.440 --> 16:55.760
Alibaba, Digital Ocean and of course Leno.

16:55.760 --> 16:58.740
They looked at all of them and guess what?

16:58.740 --> 17:00.500
The paper they released shows it.

17:00.500 --> 17:02.460
Leno is fast.

17:02.460 --> 17:07.560
Leno is super fast for database use, their super fast CPUs that are a notch above everybody

17:07.560 --> 17:13.880
else's, their AMD systems really scream and additionally, which is just as important,

17:13.880 --> 17:19.360
not only are they high performance, but Cloud Spectator's study shows they are consistently

17:19.360 --> 17:20.840
high performers as well.

17:20.840 --> 17:23.080
I think that matters a lot.

17:23.080 --> 17:27.960
Leno has a lot to choose from, from $5 rigs to custom super machines, so that $100 credit

17:27.960 --> 17:30.660
will get you far and let you really try it out.

17:30.660 --> 17:33.760
Go see why they are our cloud provider.

17:33.760 --> 17:36.600
Everything we've built for JB 3.0 is hosted on Leno.

17:36.600 --> 17:40.960
Go see why, Leno.com slash LAN.

17:40.960 --> 17:46.960
For years now, we've been watching and waiting as Google has gradually developed their Fuchsia

17:46.960 --> 17:49.680
operating system from the ground up.

17:49.680 --> 17:55.840
Now evidence has appeared pointing to Google's Fuchsia OS getting its first and second proper

17:55.840 --> 17:56.920
release.

17:56.920 --> 18:02.520
Despite not running on Linux, Google has also recently unveiled the proposal for how Fuchsia

18:02.520 --> 18:08.680
could still run apps written for Linux platforms, including Android applications, while still

18:08.680 --> 18:11.000
maintaining security and safety.

18:11.000 --> 18:15.360
We talked about that recently, but now what we're seeing is it looks like there's going

18:15.360 --> 18:19.600
to be another way besides just having to go get all the source code and build it for yourself,

18:19.600 --> 18:23.440
but actual real releases.

18:23.440 --> 18:27.240
The only release that Fuchsia has had so far have been ones that have been released internally

18:27.240 --> 18:32.120
to Google staff, but now it looks like those of us in the public could get our hands on

18:32.120 --> 18:33.120
it.

18:33.120 --> 18:38.960
At the end of January, a new branch was created in the Fuchsia project entitled releases slash

18:38.960 --> 18:39.960
F1.

18:39.960 --> 18:45.160
Over the past few months, a few dozen code changes have been selectively added to this

18:45.160 --> 18:49.160
F1 branch, all of them coming from the main branch.

18:49.160 --> 18:55.280
This is the same process that's happened before all the other previous Fuchsia internal releases.

18:55.280 --> 18:56.880
So it seems like something's up.

18:56.880 --> 19:02.640
Yeah, you're going to have F1 and then you'll have an F2 branch and then an F3 branch.

19:02.640 --> 19:07.720
And these are the final getting ready to go releases that we're going to see hit the public.

19:07.720 --> 19:12.780
I mean, I'm not particularly looking forward to loading Fuchsia up in the emulator and

19:12.780 --> 19:18.440
giving it a go, but part of me is just kind of, I'm just so looking forward to finally

19:18.440 --> 19:22.080
getting it out there so we can see what it is, see what it's capable of and get an idea

19:22.080 --> 19:25.640
of where it fits in the ecosystem and just get answers to some of the questions we've

19:25.640 --> 19:27.560
had about Fuchsia for a long time.

19:27.560 --> 19:30.360
I think you're saying you want to know what Linux is up against.

19:30.360 --> 19:31.880
That's exactly what I want to know.

19:31.880 --> 19:34.540
Well here's what you can probably expect.

19:34.540 --> 19:37.680
We know Google has a pattern of milestone releases.

19:37.680 --> 19:41.240
They've already released F1 and are working on F2 right now.

19:41.240 --> 19:46.560
There seems to be about six weeks or so between these releases and actually they're already

19:46.560 --> 19:48.840
tagging some things for F3.

19:48.840 --> 19:49.840
Hmm.

19:49.840 --> 19:54.640
I'm no Googler, but I just, I feel like the sooner I know about this, the better.

19:54.640 --> 20:01.040
I'm hoping maybe we'll hear more about Google's intentions with Fuchsia at Google IO 2021.

20:01.040 --> 20:02.040
Maybe.

20:02.040 --> 20:04.680
I mean, that might actually be a long shot.

20:04.680 --> 20:05.680
It may happen.

20:05.680 --> 20:09.760
We'll see, but I know you and you probably just want to know if you can run it on your

20:09.760 --> 20:15.680
Raspberry Pi and you might just be installing it with the Raspberry Pi Imager, which has

20:15.680 --> 20:20.200
just had a new release with some nice additions for power users.

20:20.200 --> 20:24.820
The biggest new feature is the release of a hidden advanced options panel.

20:24.820 --> 20:29.920
Just press control shift X and you can change some things about the OS you're about to flash.

20:29.920 --> 20:31.080
What can you change?

20:31.080 --> 20:35.800
Well first off you can enable SSH right there out of the box, set up the default hostname,

20:35.800 --> 20:40.600
configure Wi-Fi or some more fiddly bits like disabling overscan or setting the setting

20:40.600 --> 20:41.600
the right time zone.

20:41.600 --> 20:46.640
Oh, it's so good to see this because headless is such a common use case for a Raspberry

20:46.640 --> 20:47.640
Pi.

20:47.640 --> 20:50.200
And these are things right out of the gate that you need to set up and you're either

20:50.200 --> 20:54.680
setting up a keyboard and a monitor temporarily to turn this stuff on, or you know how to

20:54.680 --> 21:00.160
change the file on the default image to enable SSH, but either way it's, it's cumbersome.

21:00.160 --> 21:05.240
It's manual and it's just so cool to see it built into the Imager.

21:05.240 --> 21:11.080
Also really happy to see that they have now integrated in MVME drives as a target device.

21:11.080 --> 21:14.360
So that's, that's really handy because you and I have switched to a workflow where we

21:14.360 --> 21:17.320
use those to boot these devices because it's much faster.

21:17.320 --> 21:20.960
It's nice to see them add some features aimed at advanced users for a change.

21:20.960 --> 21:27.240
I don't really use the Pi Imager much myself, but I'd love to see other Imagers like Etcher

21:27.240 --> 21:28.920
get inspired by these features.

21:28.920 --> 21:34.240
Well that sounds nice, but I think what we really need is a cross distro standard because

21:34.240 --> 21:37.020
right now there's a bunch of OSs that have something similar.

21:37.020 --> 21:42.120
You can drop config files or file name the right thing in a certain directory say, but

21:42.120 --> 21:46.520
they all do it a little bit differently and most of them aren't nearly this discoverable

21:46.520 --> 21:47.920
or easy to use.

21:47.920 --> 21:49.760
You're right of course Wes.

21:49.760 --> 21:52.480
Something every distro bought into would, would really work.

21:52.480 --> 21:57.880
You know, sounds like a problem for SystemD to solve.

21:57.880 --> 22:01.480
Well maybe, maybe not, but you know there is a lot that happens every single week and

22:01.480 --> 22:05.160
what we try to do here is capture the things that matter the most and distill it down for

22:05.160 --> 22:08.040
you in a nice digestible package.

22:08.040 --> 22:09.280
Delicious you might say.

22:09.280 --> 22:13.400
So check out linuxactionnews.com slash subscribe for all the ways to get new episodes.

22:13.400 --> 22:17.420
And linuxactionnews.com slash contact for ways to get in touch.

22:17.420 --> 22:21.880
And be sure you catch episode 396 of Linux Unplugged.

22:21.880 --> 22:27.020
We get the inside story of how Linux made it into JPL and eventually onto the surface

22:27.020 --> 22:28.140
of Mars.

22:28.140 --> 22:32.160
As for us here on Earth, we'll be back next Monday with our weekly take on the latest

22:32.160 --> 22:34.400
Linux and open source news.

22:34.400 --> 22:36.760
Thanks for joining us and we will see you next week.

