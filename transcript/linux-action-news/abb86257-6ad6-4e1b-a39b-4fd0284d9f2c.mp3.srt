1
00:00:00,000 --> 00:00:09,680
Hello, and welcome to Linux Action News, episode 130, recorded on November 3rd, 2019. I'm Chris.

2
00:00:09,680 --> 00:00:10,680
And I'm Joe.

3
00:00:10,680 --> 00:00:14,640
Hello, Joe. Good to be connected with you again. I hope you're feeling at least somewhat

4
00:00:14,640 --> 00:00:15,640
better.

5
00:00:15,640 --> 00:00:18,000
Somewhat, but not 100%, but I'll soldier on.

6
00:00:18,000 --> 00:00:22,760
Hey, when there's big news to talk about, someone has to do it, Joe. And this week we're

7
00:00:22,760 --> 00:00:27,000
going to kick things off with Fedora 31, which is officially here.

8
00:00:27,000 --> 00:00:33,640
Now, you've been all over this. I know you're a huge Fedora user. I am much more of an Ubuntu-based

9
00:00:33,640 --> 00:00:40,520
distro user. But I did check this out, and it does seem very smooth and very professional,

10
00:00:40,520 --> 00:00:42,840
at least the Workstation edition that I checked out.

11
00:00:42,840 --> 00:00:48,000
Right. A big part of that is thanks to GNOME 3.34. Also under the hood, a bunch of other

12
00:00:48,000 --> 00:00:54,720
updates, including a big one, which is remaining Python 2 packages that were in Fedora 30 are

13
00:00:54,720 --> 00:00:59,280
now pulled. So they're not in 31 anymore. So a lot of Python 2 things might break.

14
00:00:59,280 --> 00:01:05,800
As well as a big change to cgroups. They went from version one, Joe, to version two.

15
00:01:05,800 --> 00:01:07,720
Which did break some stuff for you, right?

16
00:01:07,720 --> 00:01:12,720
Yeah, it does. It does because Docker containers use version one. There is a, I think it's

17
00:01:12,720 --> 00:01:16,600
a boot flag. We're going to dig into it for this week's Linux Unplugged. But there's like

18
00:01:16,600 --> 00:01:21,980
a boot parameter or something you can pass to Fedora and say, hey, boot with cgroups

19
00:01:21,980 --> 00:01:26,560
version one and then things start working. But in the Wiki for Fedora, they state like

20
00:01:26,560 --> 00:01:31,160
somebody's got to make this change. This version two is a better standard. And it's been around

21
00:01:31,160 --> 00:01:37,520
for years now, but nobody's adopting it. It's a chicken and egg problem. And so Fedora decided

22
00:01:37,520 --> 00:01:39,680
to lay the egg here. Somebody had to.

23
00:01:39,680 --> 00:01:43,840
Well, yeah. And the whole point of Fedora is to push things forward. That's its raison

24
00:01:43,840 --> 00:01:44,840
d'etre as a distro.

25
00:01:44,840 --> 00:01:49,320
Yeah. If I could have one criticism, which has otherwise been a fantastic release. I've

26
00:01:49,320 --> 00:01:52,960
got it running on a couple of machines and it is really fun to play around with Wayland

27
00:01:52,960 --> 00:02:00,160
and it is smooth. The one thing is under certain workloads, it feels a touch slower than Ubuntu

28
00:02:00,160 --> 00:02:05,720
and the fonts are maybe just a touch off from where they are in Ubuntu. A couple of rough

29
00:02:05,720 --> 00:02:11,160
edges. If I were only going to recommend one release between Fedora and Ubuntu for this

30
00:02:11,160 --> 00:02:17,580
round, I probably would give the win to Ubuntu 19.10. That said, if you're willing to invest

31
00:02:17,580 --> 00:02:22,560
a little bit of time into Fedora workstation, you can close some of those gaps. I've done

32
00:02:22,560 --> 00:02:26,720
it on my machine and I'm really, really happy with the results, but I also ended up changing

33
00:02:26,720 --> 00:02:31,600
out how the fonts render. I had to look into what my scheduler was and all these kinds

34
00:02:31,600 --> 00:02:35,400
of things that you just don't really worry about when you're on an Ubuntu system that's

35
00:02:35,400 --> 00:02:40,400
on X11, that sometimes can catch you when you switch to a Fedora system with Wayland

36
00:02:40,400 --> 00:02:45,560
that maybe has a couple of other performance regressions. Michael Larbell has done a pretty

37
00:02:45,560 --> 00:02:49,880
good job as always of doing the different benchmarks of Clear Linux and Ubuntu and the

38
00:02:49,880 --> 00:02:53,600
latest Fedora and really seeing where everything stacks up. I'll try to throw a link to that

39
00:02:53,600 --> 00:02:55,320
in the show notes for people that love the numbers.

40
00:02:55,320 --> 00:02:58,560
Did you try out Toolbox, the new container system?

41
00:02:58,560 --> 00:03:02,880
This was one of the big things I looked forward to in the 31 release. It's been around in

42
00:03:02,880 --> 00:03:07,600
Silverblue for a little bit, but now it's available for Fedora workstation. To back

43
00:03:07,600 --> 00:03:12,560
up for those of you who are not familiar, this is a simple tool for launching and managing

44
00:03:12,560 --> 00:03:17,200
personal workspace containers. You can do development, or what I do is I experiment

45
00:03:17,200 --> 00:03:20,440
with different applications to talk about on these shows.

46
00:03:20,440 --> 00:03:27,240
In the past, even really until just recently, I end up with a whole bunch of stuff installed.

47
00:03:27,240 --> 00:03:31,120
Sometimes they're outside the package management system. They're maybe something that uses

48
00:03:31,120 --> 00:03:34,800
its own package management or it's something I built so I could talk about it in Linux

49
00:03:34,800 --> 00:03:39,940
Unplugged or try it and talk about it in this show. It kind of creates cruft over time.

50
00:03:39,940 --> 00:03:45,580
This is solved by just simply running Toolbox and then doing Toolbox Enter. You enter into

51
00:03:45,580 --> 00:03:50,840
a command line environment that is a contained environment that feels and looks just like

52
00:03:50,840 --> 00:03:56,500
your regular command line. It uses your user and password, so it's the same UID. Everything

53
00:03:56,500 --> 00:04:00,820
works there. You can get access to the file system. You can create new toolboxes from

54
00:04:00,820 --> 00:04:06,080
within it. You still have DNF. All of the things that you like about using Fedora on

55
00:04:06,080 --> 00:04:10,760
the command line are inside this toolbox, but you're only mucking up this contained

56
00:04:10,760 --> 00:04:14,400
environment. You just drop right out and you're back on your regular host system.

57
00:04:14,400 --> 00:04:17,640
I've only started using it, but I think this is going to be a great way for me to experiment

58
00:04:17,640 --> 00:04:22,680
with things because it's also really easy to just cut off a clean environment so I can

59
00:04:22,680 --> 00:04:27,720
try an application in a fully clean environment that doesn't have all of these other crazy

60
00:04:27,720 --> 00:04:29,440
things installed.

61
00:04:29,440 --> 00:04:33,580
There's other tools out there to accomplish this. Also, Canonical has Multipass, which

62
00:04:33,580 --> 00:04:38,400
does this with VMs and makes setting up whole VM systems really super simple. Toolbox is

63
00:04:38,400 --> 00:04:42,560
just at the container level, but it's quick and it's using a lot of their tech like Podman

64
00:04:42,560 --> 00:04:43,560
on the backend.

65
00:04:43,560 --> 00:04:48,120
It is really easy to set up as well. I just typed Toolbox Enter, and then it prompted

66
00:04:48,120 --> 00:04:54,920
me through all the setup of it all and everything and setting up the first container. It just

67
00:04:54,920 --> 00:05:00,560
couldn't have been simpler. It seems to me that this is really going to hook in devs.

68
00:05:00,560 --> 00:05:06,920
Specifically, if you're developing applications for RHEL, then running Fedora 31 with this

69
00:05:06,920 --> 00:05:09,520
feature seems like a no-brainer to me.

70
00:05:09,520 --> 00:05:13,560
Allowing you to spin up a bunch of different containers like you would virtual workspaces

71
00:05:13,560 --> 00:05:21,120
is brilliant, but the real closing of the Uncanny Valley gap that they did with Toolbox

72
00:05:21,120 --> 00:05:25,080
is the fact that it's so easy to get access to your home directory. It uses your existing

73
00:05:25,080 --> 00:05:30,000
username and permissions, and a lot of the command line tools just act like you're just

74
00:05:30,000 --> 00:05:34,120
inside your regular native system, but it's all in that container.

75
00:05:34,120 --> 00:05:38,080
That brilliant integration with using Toolbox to just sit on top of it to manage it all

76
00:05:38,080 --> 00:05:44,720
and make it really dead easy is a winning recipe. It's something they needed out of

77
00:05:44,720 --> 00:05:49,760
necessity for Silverblue, but it adds a lot of value to Workstation too. That landed in

78
00:05:49,760 --> 00:05:54,980
31, along with not only the Nome Shell improvements, but new kernel and a bunch of other good stuff.

79
00:05:54,980 --> 00:06:00,120
If you're on Wayland, Firefox by default now runs on Wayland, and that is a real treat.

80
00:06:00,120 --> 00:06:05,300
I kind of knew that I was running on Wayland, but I didn't think about it. Things just worked

81
00:06:05,300 --> 00:06:09,600
absolutely perfectly for me. It seems they've really nailed it. Granted, this was just an

82
00:06:09,600 --> 00:06:15,040
all-Intel system, but even so, they've really made it a slick experience now, I think.

83
00:06:15,040 --> 00:06:20,440
I think the other thing that's worth mentioning is if you are using Linux as your Workstation

84
00:06:20,440 --> 00:06:27,680
to get your job done, and you wonder about the release cadence of Fedora, I was so blown

85
00:06:27,680 --> 00:06:34,720
away with my laptop's smooth upgrade. I had Fedora 30 on there, and man, we have messed

86
00:06:34,720 --> 00:06:40,160
with the audio subsystem. We've got a bunch of custom jack stuff. I've got Steam games.

87
00:06:40,160 --> 00:06:46,360
I've got two different eGPUs, NVIDIA AMD and AMD that I hook up to this thing, and it has

88
00:06:46,360 --> 00:06:52,560
an Intel graphics card, so I've really messed around with the video driver stuff. I've excluded

89
00:06:52,560 --> 00:06:57,720
PCI devices and then re-included them at different times for pass-through and virtualization.

90
00:06:57,720 --> 00:07:03,040
I've loaded so many different apps for these shows. I really abused this install. I had

91
00:07:03,040 --> 00:07:08,960
RPM fusion repos, flat packs out the yin-yang, snaps installed for days. I thought for sure

92
00:07:08,960 --> 00:07:14,360
this upgrade would fail, and it dutifully went down and pulled down every single package

93
00:07:14,360 --> 00:07:18,040
at an incredible pace, because I think it downloaded three or four at a time. It ran

94
00:07:18,040 --> 00:07:22,960
through a transaction check, has you reboot, does another transaction check, and then it

95
00:07:22,960 --> 00:07:27,980
just sat there and it upgraded 5,000 packages, and I just watched it fly across my screen

96
00:07:27,980 --> 00:07:34,080
faster than I could read it, and then it rebooted, and I logged in, and it was like nothing had

97
00:07:34,080 --> 00:07:38,820
really changed other than I just had new versions of everything. My extensions were all still

98
00:07:38,820 --> 00:07:44,720
working in Gnome Shell. My preferred theme, background icons, the way my terminals laid

99
00:07:44,720 --> 00:07:49,560
out when I open it, all of that remained the same. Everything helped, except for the time

100
00:07:49,560 --> 00:07:55,720
it took to upgrade, which was probably about 30 minutes all in. It was a non-disruptive

101
00:07:55,720 --> 00:07:59,880
upgrade. They've really nailed this, and I've been doing this for years now on servers.

102
00:07:59,880 --> 00:08:05,080
I have a couple of servers that I just have a wild bet with a past version of Chris who

103
00:08:05,080 --> 00:08:09,320
used to have to manage servers for a living. I'm teasing him now by running Fedora on some

104
00:08:09,320 --> 00:08:14,640
servers and just laughing as I upgrade them to the next release. This is the first time

105
00:08:14,640 --> 00:08:19,020
when it comes to the server that I hit pause and I'm waiting a little bit, but I'm going

106
00:08:19,020 --> 00:08:24,120
full steam ahead on the laptop, and it's worked out really good, but this cgroup's change

107
00:08:24,120 --> 00:08:28,360
is just enough that I'm just waiting for a little bit since we run a lot of containers

108
00:08:28,360 --> 00:08:29,360
here at the studio.

109
00:08:29,360 --> 00:08:32,440
But you do also have your desktop machine, so that's why you were able to take the risk

110
00:08:32,440 --> 00:08:33,440
on the laptop.

111
00:08:33,440 --> 00:08:39,200
Yeah, although I put the desktop machine on Fedora as well. I went all in, Joe. I still

112
00:08:39,200 --> 00:08:44,680
have all the studio systems on Ubuntu LTS, and definitely while the performance is shaking

113
00:08:44,680 --> 00:08:48,560
out the way it is, that's going to remain for a long time. I don't really see that changing.

114
00:08:48,560 --> 00:08:53,720
I think for media production, you really can't beat Ubuntu LTS. But for a workstation in

115
00:08:53,720 --> 00:08:59,720
the past, I kind of preferred Arch. This is like one step removed. I got a new term that

116
00:08:59,720 --> 00:09:03,000
I think should take off. Arch distros are like roller coasters.

117
00:09:03,000 --> 00:09:04,000
Right.

118
00:09:04,000 --> 00:09:11,480
Yeah, and Fedora, it's like a rolling distro, but the really big changes have these ornamental

119
00:09:11,480 --> 00:09:17,240
dates where something is blessed as a new version of something, and radical changes

120
00:09:17,240 --> 00:09:21,600
are all accepted at this time, and it's a clear delineation on when that breaking point

121
00:09:21,600 --> 00:09:27,380
is. Whereas rolling distros just sort of roll that in over time. Like Arch has a change

122
00:09:27,380 --> 00:09:31,240
that's coming that if you haven't made a correction, which has been needed to be done for quite

123
00:09:31,240 --> 00:09:35,080
a while, you're going to get left out here pretty soon. With Fedora, those happen at

124
00:09:35,080 --> 00:09:39,840
the actual release number changes, but in the meantime, you're still getting new Firefox,

125
00:09:39,840 --> 00:09:44,160
you're getting a new kernel, you're getting a lot of new user land applications. You're

126
00:09:44,160 --> 00:09:48,840
just not getting a new shell. Your major shell changes and your version breaking things like

127
00:09:48,840 --> 00:09:55,760
going from cgroups 1 to 2, going from Python 2 to 3, those are declared at the major version

128
00:09:55,760 --> 00:10:00,280
numbers, and that just works better for me. I just like that process, and I can totally

129
00:10:00,280 --> 00:10:03,540
relate to why people like Manjaro, because I think it gets you some of that with Arch

130
00:10:03,540 --> 00:10:07,840
as well. A little bit slower of that roll, but still get the fresh good stuff.

131
00:10:07,840 --> 00:10:11,380
So if Arch is a rollercoaster distro, then you never told me. What's Fedora?

132
00:10:11,380 --> 00:10:16,000
It's a near roller, Joe. It's a near roller. It's not quite rolling, but it's near rolling

133
00:10:16,000 --> 00:10:21,380
because you do get new underpinnings, you do get new good stuff, but the breaking happens

134
00:10:21,380 --> 00:10:26,200
at the major versions. And so that's just about the right pace for me. It always has

135
00:10:26,200 --> 00:10:31,680
been. I've always liked installing the intermediary releases of LTSs. It wasn't until I tried

136
00:10:31,680 --> 00:10:38,200
doing silly media production on Linux Joe that I realized I was crazy. But for the workstation,

137
00:10:38,200 --> 00:10:39,200
still get away with it.

138
00:10:39,200 --> 00:10:44,480
Well, whether you're using Fedora or Ubuntu or one of the other distros, they're all using

139
00:10:44,480 --> 00:10:49,840
the Linux kernel, and that's what makes them all so rock solid. And what makes the kernel

140
00:10:49,840 --> 00:10:55,240
rock solid is continuous integration. And finally, it seems like we are settling on

141
00:10:55,240 --> 00:11:00,280
a standard for that with Kernel CI becoming part of the Linux Foundation.

142
00:11:00,280 --> 00:11:04,400
Yeah, I wonder if this won't be the de facto standard. The goal with a continuous integration

143
00:11:04,400 --> 00:11:09,640
system like this is to catch all of the low hanging fruit that humans just can't be bothered

144
00:11:09,640 --> 00:11:14,480
to spend time doing all the different hardware testing variations. Kernel CI is a community

145
00:11:14,480 --> 00:11:20,640
based open source distributed test automation system. They focus on upstream kernel development.

146
00:11:20,640 --> 00:11:25,640
It was originally started in 2014 as a side project by a few engineers who were doing

147
00:11:25,640 --> 00:11:32,480
the testing at home in their spare time. But a variety of hardware and labs have been created

148
00:11:32,480 --> 00:11:37,720
over time and contributed to turn this thing into something that's really quite consequential.

149
00:11:37,720 --> 00:11:43,480
But they really didn't have all of the governance structure in place or the processes around

150
00:11:43,480 --> 00:11:47,600
accepting all of the hardware and financial contributions, and really to kind of extend

151
00:11:47,600 --> 00:11:50,880
this thing to make it the de facto standard. So I think the goal here is by bringing it

152
00:11:50,880 --> 00:11:57,380
under the Linux Foundation, this could become the de facto way to test this. We'll see other

153
00:11:57,380 --> 00:12:04,060
organizations that are downstream from the upstream kernel project have their own methodologies

154
00:12:04,060 --> 00:12:08,420
I think they're quite happy with. And I don't think this would necessarily negate them.

155
00:12:08,420 --> 00:12:12,760
They could just perhaps augment the work. Like Canonical and Red Hat, and SUSE with

156
00:12:12,760 --> 00:12:18,200
open QA have systems they're quite happy with. But a lot of them, and I had an interview

157
00:12:18,200 --> 00:12:22,500
not too long ago on Linux Unplugged about this, a lot of them have their focuses. Some

158
00:12:22,500 --> 00:12:26,600
focus on certain types of hardware differences, others focus on trying to capture network

159
00:12:26,600 --> 00:12:30,880
events. So a lot of times you'll find the testing systems are really good at catching

160
00:12:30,880 --> 00:12:36,180
a particular type of low hanging fruit. And so it's not always necessarily a bad thing

161
00:12:36,180 --> 00:12:40,840
to have multiple of them. It would just be nice if they could somehow pass data between

162
00:12:40,840 --> 00:12:45,000
them in some way, which that doesn't seem to be in this. But perhaps by being under

163
00:12:45,000 --> 00:12:49,360
the Linux Foundation, this might become the largest one and the de facto standard.

164
00:12:49,360 --> 00:12:53,440
I think that's pretty likely, especially given that the likes of Red Hat have signed on to

165
00:12:53,440 --> 00:12:58,560
this and thrown their support behind it, despite having their own CI systems themselves.

166
00:12:58,560 --> 00:13:03,520
Yeah, not just Red Hat. It seems Collabra was a pretty significant contributor to this

167
00:13:03,520 --> 00:13:09,480
initiative. Also on the list, surprise, surprise, Microsoft, not really all that surprising,

168
00:13:09,480 --> 00:13:15,240
and the civil infrastructure platform as well as foundries.io were involved in all of this

169
00:13:15,240 --> 00:13:19,680
coming under the Linux Foundation wing. If somebody out there is making a chart of all

170
00:13:19,680 --> 00:13:24,240
of the foundations and projects that have joined the Linux Foundation in 2019, please

171
00:13:24,240 --> 00:13:27,440
share it with me. I imagine that makes for an interesting graphic.

172
00:13:27,440 --> 00:13:32,440
What we need is something like that Linux distro one that's on Wikipedia, I think, where

173
00:13:32,440 --> 00:13:35,080
it shows you the timeline and how they all split off and everything.

174
00:13:35,080 --> 00:13:40,840
Yeah, I can almost picture it now, Joe. It's a beautiful graph that has one huge umbrella

175
00:13:40,840 --> 00:13:45,280
all above it. But this is nothing wrong about continuous integration testing. This is great

176
00:13:45,280 --> 00:13:47,680
to see, unlike our next story.

177
00:13:47,680 --> 00:13:52,880
Yeah, this is a bit of a complicated one. But TechCrunch have reported that Hoard, the

178
00:13:52,880 --> 00:14:00,080
webmail software, has got a serious vulnerability in it that has just not been fixed.

179
00:14:00,080 --> 00:14:04,920
It actually took me a couple of moments before I even recalled what Hoard was. But oh, yes,

180
00:14:04,920 --> 00:14:09,160
I remember. Hoard is one of the most popular free and open source webmail systems there

181
00:14:09,160 --> 00:14:10,160
is.

182
00:14:10,160 --> 00:14:13,080
No, it's not Squirrel Mail. It's Hoard. And it's built and maintained by a core team of

183
00:14:13,080 --> 00:14:17,880
developers with contributors from all over the open source community. I think it's really

184
00:14:17,880 --> 00:14:21,640
popular in universities. That's a big one. But a lot of mail providers will also just

185
00:14:21,640 --> 00:14:28,080
sort of rewrap it. And it appears that a security researcher discovered a rather significant

186
00:14:28,080 --> 00:14:33,640
vulnerability where an attacker could scrape and download a victim's entire inbox in Hoard

187
00:14:33,640 --> 00:14:38,000
by clicking a malicious link in an email. So you receive an email, you click that link,

188
00:14:38,000 --> 00:14:41,560
and in the background, your entire big old inbox is downloaded.

189
00:14:41,560 --> 00:14:48,560
Yeah, this was reported by Newman Osdemair back in May. He opened a ticket for it. And

190
00:14:48,560 --> 00:14:53,560
seemingly nothing has happened since. Now, I emailed him to try and get some clarification

191
00:14:53,560 --> 00:14:58,640
on this. And he emailed me back very quickly. So I'm very appreciative of that. And he said

192
00:14:58,640 --> 00:15:04,600
that Hoard had made some efforts to fix this, but they hadn't done it properly. But then

193
00:15:04,600 --> 00:15:09,760
I also asked him if he'd reported it via their security at Hoard.org email address. And he

194
00:15:09,760 --> 00:15:14,640
said that he couldn't remember, but that there was no need for that because they have a bug

195
00:15:14,640 --> 00:15:21,540
tracking system. But that reminded me of the VLC story where the developer of VLC was saying

196
00:15:21,540 --> 00:15:28,080
that people had reported things in the wrong way. And that made it very hard for them to

197
00:15:28,080 --> 00:15:33,600
deal with it because they have a process. And if security researchers don't kind of

198
00:15:33,600 --> 00:15:38,700
follow that process, it can sometimes fall through the cracks. And maybe that's what's

199
00:15:38,700 --> 00:15:39,700
happened here.

200
00:15:39,700 --> 00:15:44,040
Yeah, it could be because they have a process to flag something when it comes through a

201
00:15:44,040 --> 00:15:48,340
particular kind of channel. It's unclear when Jan Schneider was contacted a core developer

202
00:15:48,340 --> 00:15:52,680
of the project. They said that the vulnerabilities have, quote, the vulnerabilities have indeed

203
00:15:52,680 --> 00:15:58,240
been fixed, won't be fixed, or didn't even exist anymore at the time of this reporting,

204
00:15:58,240 --> 00:16:04,400
end quote. I don't know. That really adds to the complication of the story because they

205
00:16:04,400 --> 00:16:09,640
have indeed been fixed, won't be fixed, or didn't exist anymore at the time of the reporting.

206
00:16:09,640 --> 00:16:12,720
I guess that means that it was a problem, but it's been fixed.

207
00:16:12,720 --> 00:16:17,080
Yeah, but then won't be fixed. That's very confusing. So I actually emailed Jan as well.

208
00:16:17,080 --> 00:16:21,120
Unfortunately, I haven't heard back from him. So who knows? But that's a very confusing

209
00:16:21,120 --> 00:16:22,920
quote in this story.

210
00:16:22,920 --> 00:16:27,200
Yeah. I imagine that they're quite busy right now because they have been slow to respond.

211
00:16:27,200 --> 00:16:30,620
And there's probably just a lot they're dealing with. The thing is, is people get really worked

212
00:16:30,620 --> 00:16:34,980
up about these kinds of issues. So they're probably not too happy. If this guy did find

213
00:16:34,980 --> 00:16:38,840
legitimate issue, they're probably not too happy he didn't follow the official process.

214
00:16:38,840 --> 00:16:42,960
At the same time, it's completely understandable that somebody might think filing a bug and

215
00:16:42,960 --> 00:16:47,820
trying to make a big stink and draw their attention to that bug is the appropriate process.

216
00:16:47,820 --> 00:16:52,080
And I don't know how to really solve those two things, but I can see it from both their

217
00:16:52,080 --> 00:16:53,080
perspectives.

218
00:16:53,080 --> 00:16:57,680
I think it is still pretty widely used, isn't it? Hoard. It's funny you mentioned Squirrel.

219
00:16:57,680 --> 00:17:02,600
Like I remember way back in the day, my first kind of cPanel hosting account that had your

220
00:17:02,600 --> 00:17:06,600
two options, either Squirrel or Hoard. When you looked into the webmail, I never knew

221
00:17:06,600 --> 00:17:07,840
which one was best.

222
00:17:07,840 --> 00:17:11,880
I always found SquirrelMail to be a lot simpler and Hoard was a lot more complete. You know,

223
00:17:11,880 --> 00:17:15,200
it's a larger piece of software. And also Hoard went down the white label route as well,

224
00:17:15,200 --> 00:17:18,720
which I think served them pretty well. I'm reading the bug right now as we're chatting

225
00:17:18,720 --> 00:17:23,720
and the bug report is still marked as unconfirmed and does not show as resolved.

226
00:17:23,720 --> 00:17:29,080
But it's funny that something Newman said to me in his email is that all webmail software

227
00:17:29,080 --> 00:17:33,720
has critical vulnerabilities and that he recommends using Gmail or Outlook instead.

228
00:17:33,720 --> 00:17:34,720
Really?

229
00:17:34,720 --> 00:17:38,680
Yeah. And it made me think about how Exim has had a couple of pretty serious security

230
00:17:38,680 --> 00:17:44,260
flaws in it recently. And it just feels like the arguments for hosting your own email just

231
00:17:44,260 --> 00:17:49,120
seem to be getting thinner and thinner, really. And just giving up and just giving into the

232
00:17:49,120 --> 00:17:55,480
tide and just going with something like Gmail or G Suite or whatever just seems to make

233
00:17:55,480 --> 00:17:56,480
more sense now.

234
00:17:56,480 --> 00:18:00,920
And I don't want to say that because email is supposed to be this federated, completely

235
00:18:00,920 --> 00:18:06,720
open standard thing that anyone can host. But I just feel like we're almost fighting

236
00:18:06,720 --> 00:18:08,140
a losing battle here.

237
00:18:08,140 --> 00:18:13,840
I have definitely felt that way myself. I think that has made me consider alternatives

238
00:18:13,840 --> 00:18:19,840
from self-hosting, but also things like ProtonMail, which are sort of, I think, a nice little

239
00:18:19,840 --> 00:18:24,400
in the middle. They seem to be really focused on privacy and security, but they're not an

240
00:18:24,400 --> 00:18:28,880
advertising company. It's a nice medium there.

241
00:18:28,880 --> 00:18:32,700
So there are other solutions out there besides just the big providers. It's just how much

242
00:18:32,700 --> 00:18:38,200
can you really trust the other ones? Google is obviously investing a lot of money into

243
00:18:38,200 --> 00:18:44,080
Gmail and they have a lot of engineers designing those apps, the web and mobile. Does Proton

244
00:18:44,080 --> 00:18:48,480
have those same resources? Not necessarily. So you do have to weigh those pros and cons.

245
00:18:48,480 --> 00:18:54,320
Which is why the ProtonMail iOS app is going open source with the Android app hopefully

246
00:18:54,320 --> 00:18:56,560
to follow as soon as the audit's finished.

247
00:18:56,560 --> 00:19:01,280
Yeah, the real story here is not only are they open sourcing their mobile applications,

248
00:19:01,280 --> 00:19:06,640
the audit has been done by a well-known third party auditing organization who did a comprehensive

249
00:19:06,640 --> 00:19:11,360
report that I actually sat down and read last night before the show and it was pretty telling.

250
00:19:11,360 --> 00:19:15,480
And I'm really, I'm really impressed because not all companies would put this out there

251
00:19:15,480 --> 00:19:20,360
because when you get a comprehensive audit done, they'll find something. They always

252
00:19:20,360 --> 00:19:26,640
find something. They found seven low risk vulnerabilities in the iOS app. No real major,

253
00:19:26,640 --> 00:19:31,340
major issues were identified, but one which would provide an attacker unauthorized access

254
00:19:31,340 --> 00:19:37,000
to the customer's data without having physical access to the device. Additionally, a lot

255
00:19:37,000 --> 00:19:42,340
of the vulnerabilities were found in essentially account escalation vulnerabilities where people

256
00:19:42,340 --> 00:19:48,360
could escalate to higher paid tier accounts by abusing the app. So those kinds of bugs

257
00:19:48,360 --> 00:19:53,160
were found. And now the Android application is going through the same process. When it's

258
00:19:53,160 --> 00:19:57,920
done, if like the iOS application, it'll be released as a GPL application.

259
00:19:57,920 --> 00:20:03,840
You know, I found that very interesting that the iOS app is GPL three or later, which is

260
00:20:03,840 --> 00:20:09,120
full blown copyleft, but you can't really put copyleft apps in the app store, the Apple

261
00:20:09,120 --> 00:20:14,680
app store, because the Apple terms of service are incompatible with copyleft and the GPL.

262
00:20:14,680 --> 00:20:19,760
So it means that they must have a different license on the one that's actually in the

263
00:20:19,760 --> 00:20:25,440
iOS store versus what's on GitHub, which is not hugely consequential, but I just found

264
00:20:25,440 --> 00:20:26,440
it interesting.

265
00:20:26,440 --> 00:20:30,720
And Chanel is too, right? Because this is a big step. It takes a lot of money and a

266
00:20:30,720 --> 00:20:36,040
lot of effort to get this audited, then to fix everything, and then to turn the code

267
00:20:36,040 --> 00:20:40,880
all over and GPL it at that. So that's a pretty big commitment. And I think it goes back to

268
00:20:40,880 --> 00:20:45,200
the conversation we were just having. How do they compete with Google at scale who has

269
00:20:45,200 --> 00:20:50,440
time and money and networking resources to throw at a mail application? Well, they write

270
00:20:50,440 --> 00:20:55,280
on their blog, by making our code available to the world and with the help of our bug

271
00:20:55,280 --> 00:21:00,400
bounty program, we can leverage the global Proton community to make our software as secure

272
00:21:00,400 --> 00:21:03,760
as possible. And yeah, that's, you know, of course they're going to say that, but I think

273
00:21:03,760 --> 00:21:08,720
that's what it is. They're going to leverage the benefits of open source to get their app

274
00:21:08,720 --> 00:21:13,080
audited at a scale that Google just couldn't simply dream of unless they were to open source

275
00:21:13,080 --> 00:21:16,960
their Gmail applications. I think it's pretty great. In fact, it's making me reconsider

276
00:21:16,960 --> 00:21:22,880
Proton Mail for a future project I have. I had been tempted just for the lulls to see

277
00:21:22,880 --> 00:21:26,880
what it would be like to self host email again because I used to set up mail servers all

278
00:21:26,880 --> 00:21:32,040
the time. I got to say though, I'm going to give Proton Mail another pass and see what

279
00:21:32,040 --> 00:21:36,400
they have to offer. I like, I like what they're talking. I like what they're doing. And if

280
00:21:36,400 --> 00:21:41,400
that Android app ships and it's also GPLed, I'm going to, I'm going to really be impressed

281
00:21:41,400 --> 00:21:46,120
because then they've matched actions to their words. What about site kit for your WordPress

282
00:21:46,120 --> 00:21:49,080
sites that you're self hosting? Google says it's all the rage.

283
00:21:49,080 --> 00:21:53,920
Yeah, Google asked the question, who is site kit for? And they say, it makes it easy for

284
00:21:53,920 --> 00:21:58,640
WordPress site owners to understand how the site is doing and what to do next. And as

285
00:21:58,640 --> 00:22:03,000
a WordPress site owner, it gives you convenient and easy access to relevant stats directly

286
00:22:03,000 --> 00:22:09,380
in your WordPress dashboard. And no source code editing and all the Google goodness,

287
00:22:09,380 --> 00:22:13,800
how to give Google all the data from every visitor to your website in one nice handy

288
00:22:13,800 --> 00:22:19,920
WordPress extension, which is open source to be fair, but I don't think I'll be installing

289
00:22:19,920 --> 00:22:20,920
this.

290
00:22:20,920 --> 00:22:27,320
I love your skepticism on this. You know why I laugh is because I assumed that like a lot

291
00:22:27,320 --> 00:22:30,520
of WordPress sites, they're already using all of this. They're already using Google

292
00:22:30,520 --> 00:22:33,980
analytics. They're already trying to plug it into Google search. So they've gone into

293
00:22:33,980 --> 00:22:38,240
Google search console before. They probably have that identification process they've gone

294
00:22:38,240 --> 00:22:42,880
through. A lot of sites are using AdSense and you want to know what your page speed

295
00:22:42,880 --> 00:22:48,120
rankings are. So that way you can place well in the Google search. And so in a way I kind

296
00:22:48,120 --> 00:22:52,800
of see the logic of it because you log into WordPress and you get like a heads up data

297
00:22:52,800 --> 00:22:57,740
dashboard of the health of your website from Google's perspective. And if your website

298
00:22:57,740 --> 00:23:04,120
traffic is impacted a lot by Google search, maybe this makes sense. It also is a freaky

299
00:23:04,120 --> 00:23:09,080
dystopian version of the web that I wish we had never arrived at. It really shouldn't

300
00:23:09,080 --> 00:23:16,040
matter how happy Google is with your site. It shouldn't matter so much that you want

301
00:23:16,040 --> 00:23:20,040
a heads up dashboard so that every moment you log in, you're up to date.

302
00:23:20,040 --> 00:23:24,760
It just goes to show how terrible I am at marketing that I don't have any of that stuff

303
00:23:24,760 --> 00:23:31,240
for late night Linux. It's probably like really badly SEO'd. But I'd rather have it that way

304
00:23:31,240 --> 00:23:34,460
than give Google all the data somehow.

305
00:23:34,460 --> 00:23:37,760
Not only is it nice for users because you're not tracking them as much, but it speeds the

306
00:23:37,760 --> 00:23:41,000
site up. And there's really only one metric that matters, and that's how the podcast is

307
00:23:41,000 --> 00:23:44,840
doing. If you're a podcast, a lot of times they're getting it from the feed, they're

308
00:23:44,840 --> 00:23:50,080
using a mobile app. And so website analytics don't really tell you even part of the story

309
00:23:50,080 --> 00:23:51,080
necessarily.

310
00:23:51,080 --> 00:23:55,040
Yeah. And text-based ads on the website, I mean, no one ever goes to the website anyway.

311
00:23:55,040 --> 00:23:58,120
And if they do, they're almost certainly using uBlock Origin or something.

312
00:23:58,120 --> 00:24:02,200
But if I was like a TechCrunch WordPress site, because TechCrunch runs on WordPress, this

313
00:24:02,200 --> 00:24:04,920
might be the name of the game for them, right? This could be a big deal.

314
00:24:04,920 --> 00:24:11,120
Yeah, RMG Ubuntu, I think that's also WordPress. And maybe they would be using it as well.

315
00:24:11,120 --> 00:24:16,120
I can see that it is hugely useful, but it just, dystopian is the word for it. Just reading

316
00:24:16,120 --> 00:24:21,400
through it, just how they make it all so easy to integrate all this stuff. And it just,

317
00:24:21,400 --> 00:24:23,920
it just made my skin crawl reading through it.

318
00:24:23,920 --> 00:24:28,040
Yeah. They integrate milestone notifications into WordPress to give you updates on how

319
00:24:28,040 --> 00:24:33,160
your website's doing, which could also be bad news from time to time. But so, you know,

320
00:24:33,160 --> 00:24:38,280
in a month, you get a 31% traffic increase, you get a notification in WordPress saying,

321
00:24:38,280 --> 00:24:43,720
congrats on more website visitors, and it has a nice sun logo with a cloud, and it gives

322
00:24:43,720 --> 00:24:50,720
you a nice little stat, which in some cases may also be a bad stat. But that's, they pitch

323
00:24:50,720 --> 00:24:55,960
it as staying informed as to how the health of your website is doing. Again, because the

324
00:24:55,960 --> 00:25:01,280
sole metric they're going by is at least how your website's doing as far as Google's concerned,

325
00:25:01,280 --> 00:25:07,680
which is an important metric. But SiteKit's a good name. That's Chris trying to be positive,

326
00:25:07,680 --> 00:25:11,400
Joe. Actually, it sounds like an Apple product name, SiteKit. Doesn't that sound like something

327
00:25:11,400 --> 00:25:12,400
Apple would make?

328
00:25:12,400 --> 00:25:16,600
It does a little bit, yeah. But it's interesting that they've gone for the Apache 2 license.

329
00:25:16,600 --> 00:25:22,080
It kind of shows the difference between them and ProtonMail somehow. That ProtonMail go

330
00:25:22,080 --> 00:25:28,040
for GPL3 or later, which is like as full blown copy left as you can get, versus the much

331
00:25:28,040 --> 00:25:30,600
more permissive Apache 2 that Google have gone for here.

332
00:25:30,600 --> 00:25:34,480
Joe, you need a podcast called Reading the Licensing Tea Leaves, where you can interpret

333
00:25:34,480 --> 00:25:39,640
the motivations of multinational organizations by the licenses they choose for their individual

334
00:25:39,640 --> 00:25:46,800
projects. I think what you're seeing is this is a tool to facilitate usage of their services.

335
00:25:46,800 --> 00:25:52,600
So it's not the core product, but it's like a product facilitator. So yeah, Apache, that's

336
00:25:52,600 --> 00:25:53,600
fine.

337
00:25:53,600 --> 00:25:54,600
Yeah, I suppose so.

338
00:25:54,600 --> 00:25:58,400
Well, you know what isn't fine? Missing out on an episode of Linux Action News. So go

339
00:25:58,400 --> 00:26:02,840
to linuxactionnews.com slash subscribe for all the ways to get new episodes every single

340
00:26:02,840 --> 00:26:03,840
week.

341
00:26:03,840 --> 00:26:06,840
And go to linuxactionnews.com slash contact for ways to get in touch with us.

342
00:26:06,840 --> 00:26:11,120
And hey, if you're looking for some work, Linux Academy is hiring from sysadmins to

343
00:26:11,120 --> 00:26:16,880
trainers. They have a bunch of positions open. Check out jobs.leaver.co slash Linux Academy.

344
00:26:16,880 --> 00:26:21,160
A lot of them are remote. Some of them are in Texas. There may be a position just for

345
00:26:21,160 --> 00:26:22,160
you.

346
00:26:22,160 --> 00:26:25,360
We'll be back next Monday with our weekly take on the latest Linux and open source news.

347
00:26:25,360 --> 00:26:27,040
I'm at Chris LAS.

348
00:26:27,040 --> 00:26:28,600
I'm at Joe Rissington.

349
00:26:28,600 --> 00:26:31,000
Thanks for joining us. And we'll see you next week.

350
00:26:31,000 --> 00:26:57,680
We'll see you later.

