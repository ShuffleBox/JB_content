Hello and welcome to Linux Action News, episode 259, recorded on September 21st, 2022. I'm
Chris.
And I'm Wes.
Hello, Wes from Southern Oregon. Let's do the news.
We start this week with some great news for GNOME users. Version 43 has been released.
Something at this point typical, but always great to see improvements include work on
Wayland, plus more apps making the migration from GTK 3 to GTK 4. But GNOME 43 also has
some new privacy settings, including a screen that provides information about the security
of your physical hardware, its configuration, and the firmware.
Yeah, we've covered some of that work that made that possible a few weeks back in Linux
Action News, and it's an area I think we'll see some significant future development as
well. So it's definitely worth keeping an eye on as different hardware vendors get on
board and the GNOME team works further on the UI. I think the biggest user facing feature
has got to be that new quick settings menu. The new design will undoubtedly work well
on mobile devices if those exist for GNOME and should be easy to use by most new users.
And Wes, you mentioned that steady march towards GTK 4. Yeah, well, I mean, that really was
a big focus this cycle. Here's just kind of an example of some of the apps that got migrated
to GTK 4 this cycle. Files, Maps, Logs, Builder, Console, and the initial setup wizard, amongst
others.
It wasn't just users scoring some updates this time around, though. No, developers also
get a lot out of 4.3, including a huge builder update, a range of enhancements to developer
libraries, including GTK, GLib, LibEdueta, and a whole lot more. In light of all these
updates, well, the GNOME project has put together a special page to cover the updates developers
in particular need to know. We'll have a link to that in the notes.
GNOME 76 has launched a significant redesign to their Thaleo desktop this week. This update
includes an overhaul of the internals, of course, but also the most significant chassis
design change since the original launch of the Thaleo four years ago. The biggest change
appearance wise for the Colorado built Linux desktop? Well, it's the removal of its famous
wood veneer, replaced now by a sleek user replaceable accent panel. True, and that could
be a wood panel or it could be a custom design. We have a fully loaded unit in the studio,
and we've had it for a few weeks running a series of tests and different workloads on
it to get an idea of what this kind of system is capable of. We have a ton of data and notes
that we'll share in an upcoming Koda Radio and Linux Unplugged episode.
In the meantime, though, you can check out the lineup for yourself and get more details
over at System76.com. And hey, while you're at it, check out our buddy Michael Dominic's
review that just went live over on his blog.
Rust in the Linux kernel dominated the local headlines again this week. And well, that's
because at the 2022 Linux kernel maintainer summit, Miguel Ojeda updated the attendees
on when we could expect to actually see Rust land in the Linux kernel.
And it seems the answer to that question is soon, soon indeed. Linus Torvalds spoke up
at the beginning of the session to say that he plans to accept Rust patches for the 6.1
kernel, which should be released sometime mid December, at least unless Linus hears
some strong objections.
It's funny because everyone was expecting the 6.0 kernel to be the big release, but
it's kind of looking like it's really going to be 6.1 that is the real barn burner kernel
release. And maybe just kind of a bit awkwardly, the subject of older kernel developers who
don't want to learn Rust and what to do about them came up once again. And Linus repeated
that for now, maintainers would be able to say they don't want to deal with Rust and
not have to. But others suggested that like it or not, they might at least need to learn
how to do some Rust traces to debug problems when they come up after they touch their projects.
But it seems the reality is, and Linus underscored this himself, all of this is going to take
years. People will have time to adapt.
As for when Rust will become mandatory for the kernel to build, Linus's answer to that
one was quote, when the hardware he has requires it.
I guess that's fair. He said that that would kind of indicate that Rust has been a success
for kernel development. And you know what, that might just happen sooner than later.
There's already talk of Asahi Linux using Rust for their new GPU driver. And efforts
are currently underway to port Intel's E1000 Linux network driver over to Rust. So sure,
it will take some time. But don't worry, Linus wants everyone to be reassured. And he joked
that Rust wasn't so bad because quote, it's not Pearl.
A few days ago, Canonical announced a new partnership with Asus IoT to certify Ubuntu
Linux for their devices.
Now that sounds like a pretty good partnership. And like that name suggests, this is Asus's
division focused on Internet of Things hardware. And the hardware will be certified for Ubuntu
2004 LTS. That's the previous Ubuntu LTS, as the current one is 2204.
Using the previous major release, well, seems to be pretty standard in the IoT space at
this point. Often, that's because development lead times at hardware partners aren't always
as fast as we might like.
Yeah, that seems kind of fair. It does take a lot of time and a lot of work to create
hardware, it just moves slower. So we know the first device, it's going to be the Asus
PE100A, which they call an intelligent edge computer. It's powered by an NXP iMX8M SoC.
It's got four gigs of RAM and 16 gigabytes of eMMC storage. Well, that should be just
enough for that Firefox snap.
After six months of development, Java 19 is here. Now, technically, Java 19 doesn't actually
ship any major new features. That's because everything that is arriving is either still
a preview or an incubator. But let's ignore those technicalities for the moment because
there's a lot of fascinating work that deserves to be talked about. That includes some fancy
pattern matching that's been added, as well as a method for more efficient and convenient
access to non Java libraries. But above those hidden away in the list are what I think are
two real gems.
First of all, of course, the JDK has been ported to Linux on RISC-V. So I think we all
know a huge feature of the JVM is that well, minus the architecture specific system API
concerns, you get a write once run anywhere platform. And now with 19, they've extended
that to the RISC-V world.
The second item, well, it might just be ushering in a new world of concurrency for JVM based
languages. And that's the introduction of virtual threads, which are lightweight threads
that hopefully will dramatically reduce the effort of writing, maintaining and crucially
observing high throughput concurrent applications. Now just a little background context before
virtual threads were added, each thread in a Java app was mapped directly to a regular
operating system thread. Now, this usually isn't a problem. JVM doesn't necessarily need
to be concerned with things like direct scheduling and managing context switching and different
threads on different cores. But if you have a really high throughput application, an application
with a lot of complicated IO that maybe depends on other systems that can take a variable
time to respond to you, well, in that case, you can end up blocking the underlying OS
thread. And that can really hurt the scalability of your application. Over the years, there's
been a few different techniques that have evolved to handle this, all of them implementing
some kind of asynchronous programming abstraction. And yeah, there are some libraries and frameworks
to do that on Java already. But they come with some downsides, especially around observability.
There's also some languages that have taken the approach of just sort of directly labeling
a new segment of the world as async. That's the style adopted by Python and JavaScript.
This can work quite well, but does sometimes leave the developer living in two worlds at
once where you've got the code implemented in a synchronous style. And you've got this
other code over here that's implemented in the asynchronous style. Virtual threads are
taking the approach already used by languages like Golang and Erlang or Elixir. In this
case, the underlying virtual machine, the JVM, it handles figuring out if you're calling
a function that's going to block on some IO. And it can figure out that should be made
async all on its own. That means for an application developers, they can just go back to writing
code that looks just like synchronous code. But under the hood, the JVM makes it scale.
Now, virtual threads are still in preview. This is early days. It'll probably take a
while for a lot of underlying frameworks and libraries to get updated to take full advantage.
But this is a new approach to concurrency for Java. And there's a real hope here that
this should make writing high performance applications a lot simpler, both on the engineering
side up front, and when you have to debug it in production later. I think we could all
use a little improvement there.
Linode.com slash LAN go there to get $100 in 60 day credit on a new account. And it's
a great way to support the show. Linode is fast, reliable cloud hosting developers trust
Linode and Linux geeks love it. That's really how we've built and run everything that we
deploy in the cloud for the last couple of years. Linode is even a huge part of the infrastructure
that we use when I go on the road. And of course, Linode makes it possible for us to
go on the road. I first discovered Linode at a Texas Linux fest. They were like, one
of the few vendors that took this really early event serious and made it possible with both
their support, and just, you know, throwing bodies at it and being there. And I thought,
you know, they're not getting a lot from this, but they are investing in the community. I
thought that's, that's worth checking out. I put them on the back of my mind next time
I'm building something, I'm going to try them out. And sure enough, I did just that. I tried
out Linode for myself for my own personal stuff that I was building, and I loved it.
And when Jupiter Broadcasting went independent, Linode was one of the first names I called
because I was such a happy customer. And now, you know what, it's been over three years.
Wow, wow, that's incredible. And Linode has been a big part of that story. Linode has
been a big part of the story of us going independent. And really the infrastructure we've built
that has really been competitive is thanks to Linode. And they're 30 to 50% cheaper than
the big hyperscalers that want to lock you into their crazy platforms, where they got
weird names for everything. And Linode has the best performance. This is shown over and
over again by third party reports, you can find them online, I've done some testing myself.
And they have 11 data centers for you to choose from, with great features like object storage,
cloud firewall, and VLAN support that lets you span a private network across multiple
regions with Linode, some powerful stuff there. And of course, if you ever need help with
support, if you ever need to do any data recovery, they have clear, easy to understand backups.
And your infrastructure management tools are going to work great with Linode just as we
do it already. So go build something, go learn something and try it for yourself. And it's
a great way to support the show while you're getting 100 bucks at lino.com slash land go
get that 60 day credit, kick the tires for yourself and support the show. It's lino.com
slash LAN collide.com slash LAN collide is endpoint security that just uses the most
powerful untapped resource in it, the end user, when you're trying to achieve security
goals, whether it's for yourself or a third party audit, maybe it's new leadership, I
have been there. The conventional wisdom is to treat every device like Fort Knox, you
know what I'm talking about. Old school device management tools like MDMs that force disruptive,
playful agents onto employees devices that slows down performance and treats privacy
as an afterthought. And let's be honest, sometimes introduces their own security vulnerabilities.
That's the way things have always been done. And it turns it admins and end users into
enemies that creates this weird energy. It's not good. And often, it'll result in sort
of like the shadow it projects where somebody who knows just enough to be dangerous will
help everybody get set up on Dropbox or something like that. And then you walk in one day, and
discover your users are all violating your policy. collide does things differently. Instead
of forcing changes on users collide sends them security recommendations via slack collide
will automatically notify your team when their devices are insecure, and then give them a
step by step instruction on how to solve the problem. And by reaching out to employees
via friendly slack dm and educating them about company policies, collide can help you build
a culture in which everyone contributes to security, because everyone understands how
and why to do it. And for it admins, collide provides a single dashboard that lets you
monitor the security of your entire fleet. Maybe they're on a Mac, maybe they're on Windows,
or maybe they're on Linux. Yep, you can manage it all and see at a glance which employees
have their disk encrypted their OS up to date, a password manager installed, and it just
makes it easy to prove compliance to yourself, your auditors leadership customers, whoever
it be. So that's collide user centered cross platform and security for teams that slack,
you can meet your compliance goals by putting users first. So visit collide.com slash LAN
to find out how. And if you follow that link, and you sign up, even for just the you know,
the old free activated trial there, they're going to give you a goodie bag that includes
a free t shirt. So you don't even have to bump into us on the meetup to get some free
swag. You just go to collide.com slash LAN. That's k o l i d e.com slash LAN.
Just as we are sitting down to record today, framework, the famously user upgradable laptop
manufacturer, they've announced the new framework laptop, Chromebook Edition. And as you might
suspect, this is the framework team's spin on a fully blessed Google Chromebook. The
framework Chromebook will get up to eight years of Chrome OS updates. You can download
Android apps from Google Play, access Linux apps with Christine, and even use Steam on
Chrome OS Alpha.
Yeah, and in terms of specs, you're going to find a 12th Gen Intel i5 1240 p processor,
with four physical cores, eight virtual CPU cores, and the capability of a 30 watt sustained
performance load. And like other Chrome OS devices, it includes the Titan C security
chip that's responsible for verified boot. It seems there's also the open source embedded
controller and firmware with core boot that we've come to expect from framework.
Something you don't see on many Chromebooks, though this system will support those framework
modules. So users can add USB CA, HDMI, DisplayPort, or even Ethernet.
There's no doubt this thing's going to be like the ultimate Chromebook. It's got that
nice high resolution screen too. But the cost, it just seems like it's a bit too high for
a Chromebook. It starts at 1000 US greenbacks. And that's before you've done any upgrades,
or you've added any of those fancy modules. And I gotta say the early feedback in their
community form, it's a bit mixed on that price point.
It also appears that the existing framework laptops, well, they can't be reflashed to
support Chrome OS. And that Titan security chip, well, it's only available on the motherboard
that ships in the framework Chromebook.
Yeah, okay. All right. That's a bit unfortunate. And that's the least it seems to be the way
it is right now. And the Chromebook motherboard, you just can't go buy it on its own. Like
you can all of the other framework laptop motherboards. So you couldn't just assemble
it or maybe even do some kind of swap. If you have an existing framework and you wanted
to turn it into a Chromebook, that option is just not available to you, even though
you might have expected it from this company.
Yeah, it all makes it seem that maybe framework is saying they're trying to enter a new market
with this one. That might make sense. I mean, we just covered that Google is killing their
Pixelbook. Maybe there is a hole in this market that framework is aiming to fill.
Yeah, I could see that. And it does seem that Google engineers worked very closely with
framework to get this thing certified to make sure it meets all of the requirements that
every Chromebook meets. So I could see the logic in that. Instead of it, instead of doing
their own hardware, Google decides to partner with a few hardware experts and build Pixelbook
like devices. However, I don't know if framework is the one that I would have picked. Because
this to me seems a lot more like a Google product than a framework product. It just
sort of seems like on day one, they just had to jump through all these hoops to make this
a Google blessed device. And so the result is as a customer, I'm kind of disappointed
that you can't just swap out the motherboard like you can with all the other framework
stuff or you can't just get this bios or those types of things. And also it just seems a
bit odd and kind of frustrating that framework can manage to sell laptops pre loaded with
Windows one of the trickiest operating systems in the world. And now Chrome OS, but they
still struggle to ship a laptop pre installed with Linux. What's that about? And I just
can't shake the feeling like this is just not the future direction any of us expected
framework to go. Google and Chromebooks don't really strike me as an ally to the right to
repair. It feels akin to selling self assembled cigarettes to kids, and then celebrating
the fact that well, the kids can take the cigarettes apart and learn how they work.
Well, great. Okay. But you're still selling them something that is toxic and going to
get them hooked on something we don't want them hooked on. I don't know. Like I said,
it's early days. Maybe these details get worked out as framework. Here's customer feedback.
I don't know. I guess sometimes you just have to learn things the hard way. And maybe this
is one of those moments. Hardware is hard. And I think if you were to look at the upshot
on this, at least now there is a somewhat very kind of customizable laptop that you
can run Chrome OS on and you're going to get eight years of support. That's not so bad
at all. So there's that. We'll keep an eye on this, kind of see where this goes, see
if it develops into something a little more appealing. And we'll let you know about that
and everything else going on in the world of Linux from the road or not. Check out linuxactionnews.com
slash subscribe for all the ways to get new episodes and linuxactionnews.com slash contact
for ways to keep in touch. Our West Coast meetups are happening right now. I'm on the
road to come see you. So join meetup.com slash Jupiter broadcasting for one of our events
and let us know you're going to be there. If you can't make a meetup, just meet us back
here next week for our take on the latest Linux and open source news. Thanks for joining
us. That's all the news for this week.
