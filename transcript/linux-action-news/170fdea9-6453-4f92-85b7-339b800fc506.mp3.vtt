WEBVTT

00:00.000 --> 00:09.220
Hello, and welcome to Linux Action News, episode 244, recorded on June 8th, 2022.

00:09.220 --> 00:10.220
I'm Chris.

00:10.220 --> 00:11.220
And I'm Wes.

00:11.220 --> 00:12.220
Hello, Wes.

00:12.220 --> 00:13.780
Let's do the news.

00:13.780 --> 00:16.460
We start with the lizard party this week.

00:16.460 --> 00:22.620
SUSECON 2022 is live as we record, and one of the first things announced, the SUSE Linux

00:22.620 --> 00:25.740
Enterprise 15 Service Pack 4.

00:25.740 --> 00:29.420
Yeah, don't call it a point release.

00:29.420 --> 00:34.600
No, it's a service pack, but really grabbing the headlines for this release is their back-end

00:34.600 --> 00:38.800
switch to the open-source NVIDIA kernel driver.

00:38.800 --> 00:42.480
Now mind you, this is really more for server usage at this point, not for desktops and

00:42.480 --> 00:43.480
gaming.

00:43.480 --> 00:48.720
Yeah, SUSE's reason for using the open-source NVIDIA GPU kernel driver at this point is

00:48.720 --> 00:56.460
really their focus on the cloud-native world, saying, quote, SLEE 15 SP4 is the first major

00:56.460 --> 00:58.640
Linux distribution to deliver it.

00:58.640 --> 01:01.500
Oh, they're clearly excited about that.

01:01.500 --> 01:03.540
And I guess, I mean, fair play, right?

01:03.540 --> 01:08.200
The NVIDIA open GPU kernel driver is already considered production-ready, at least for

01:08.200 --> 01:14.340
data-centered GPUs with the R515 proprietary user-space driver components.

01:14.340 --> 01:19.020
And rounding out some of the other new features, SUSE Linux Enterprise 15 SP4 does meet Google's

01:19.020 --> 01:24.680
SLSA for supply chain compliance, I know you were worried about that, and it adds support

01:24.680 --> 01:30.580
for AMD secure virtualization encrypted state, well, and really a lot more.

01:30.580 --> 01:37.640
And less than 24 hours after SLEE 15 dropped, OpenSUSE Leap 15.4 has already been released.

01:37.640 --> 01:43.840
Yeah, as you're probably already aware, OpenSUSE Leap 15.4 is built from the same sources as

01:43.840 --> 01:47.320
SLEE 15 SP4.

01:47.320 --> 01:53.340
OpenSUSE Leap 15.4 introduces Leap Micro 5.2, which is the newest version of their lightweight

01:53.340 --> 01:58.380
operating system designed for containers and virtualized workloads, you guessed it, in

01:58.380 --> 01:59.380
the cloud.

01:59.380 --> 02:03.880
This latest Leap also introduces improved multimedia codec installation via Cisco's

02:03.880 --> 02:11.620
OpenH264, open source graphics driver improvements, and the inclusion of the NVIDIA RTX 30 signed

02:11.620 --> 02:13.780
firmware packages.

02:13.780 --> 02:20.660
Rounding out the workstation experience, 15.4 includes KDE Plasma 524, GNOME 41, Enlightenment

02:20.660 --> 02:28.560
0.25, and Mate 126.

02:28.560 --> 02:32.940
Back in March, we covered the beta release of Element Call, the voice and video conferencing

02:32.940 --> 02:37.720
solution that's powered by Matrix, but one of the issues we observed was the lack of

02:37.720 --> 02:43.840
end-to-end encryption, and it seems this week, that's been fixed.

02:43.840 --> 02:48.640
Yeah, now initially the Element team shipped with end-to-end encryption disabled because

02:48.640 --> 02:53.480
it limited their ability to debug the new feature, and anyone who's tried to debug,

02:53.480 --> 02:59.240
you know, an API call over HTTPS that you don't control will totally get that.

02:59.240 --> 03:04.560
But with the beta phase kind of wrapping up, and the need for that kind of low-level debugging

03:04.560 --> 03:10.520
being judged as low, the team has felt comfortable enabling end-to-end encryption, which means

03:10.520 --> 03:15.960
your calls over Matrix can only be decrypted by the sender and the receiver, there's no

03:15.960 --> 03:19.200
man in the middle with the keys to your call.

03:19.200 --> 03:25.240
I like that, and the Element team also announced support for spatial audio, saying it was one

03:25.240 --> 03:29.600
of the most fun features to work on, so it allows you to move a video participant around

03:29.600 --> 03:33.100
their tiles, you can move them around on your screen, and when you have this experimental

03:33.100 --> 03:39.120
spatial audio feature enabled, each participant's audio will sound as if it's coming from where

03:39.120 --> 03:42.200
their tile is positioned on your screen.

03:42.200 --> 03:46.800
But the feature that really caught my attention is this walkie-talkie mode.

03:46.800 --> 03:51.640
This release introduces a whole new experimental way of communicating on Element call.

03:51.640 --> 03:55.760
When creating a call, you have the option to choose between a standard video call that

03:55.760 --> 04:00.900
we're all used to, or this new walkie-talkie call option.

04:00.900 --> 04:06.280
If you opt for that version, videos are disabled and everyone is muted by default.

04:06.280 --> 04:10.520
To speak, you gotta push the push to talk button, which you can do either by pressing

04:10.520 --> 04:14.920
it on the screen directly, or by holding the space bar if you're on a test stop.

04:14.920 --> 04:20.520
The catch, though, is that just like a real, physical walkie-talkie or two-way radio, only

04:20.520 --> 04:23.240
one person can speak at a time.

04:23.240 --> 04:26.720
When someone else is speaking, your push to talk button will be disabled, and if you try

04:26.720 --> 04:30.100
to push it, you'll hear a nice little warning beep.

04:30.100 --> 04:33.360
In the announcement, they kind of explained some of the motivation for introducing this

04:33.360 --> 04:34.720
feature.

04:34.720 --> 04:39.320
They say that, well, there's a lot of people out there, such as taxi drivers, truckers,

04:39.320 --> 04:44.000
construction workers, emergency services personnel, and so on, that are just, they're used to

04:44.000 --> 04:46.480
using radio communications.

04:46.480 --> 04:51.000
And they'd like to move away from traditional hardware and on to secure encrypted software

04:51.000 --> 04:54.320
solutions that they can run on any device they choose.

04:54.320 --> 04:57.320
Yeah, that makes sense.

04:57.320 --> 05:02.220
And it's just kind of neat to see how quickly the Element and Matrix folks can iterate now

05:02.220 --> 05:05.600
that they've got some of the bones in place, you know, once you've kind of got the spec

05:05.600 --> 05:10.100
figured out, you start developing these features, I don't think this will be the last neat little

05:10.100 --> 05:13.680
addition built on top of the new calling abilities.

05:13.680 --> 05:18.160
I could also see a dedicated lightweight app that sort of just implemented that feature,

05:18.160 --> 05:22.240
at least, you know, before it rolls out to more clients.

05:22.240 --> 05:23.240
That'd be great.

05:23.240 --> 05:25.120
I'm surprised we're not using a walkie-talkie right now, Wes.

05:25.120 --> 05:29.720
I mean, you could picture like an Android app that's just a big button.

05:29.720 --> 05:31.960
It's just a radio button, right?

05:31.960 --> 05:33.200
I think that'd be a great one.

05:33.200 --> 05:35.000
I'd use the crap out of that with my kids.

05:35.000 --> 05:37.080
Yeah, I think we all would.

05:37.080 --> 05:40.800
I mean, who wants that background noise and breathing anyway?

05:40.800 --> 05:45.120
We should also note that there's lots of work going on to embed Element Call into Element

05:45.120 --> 05:47.040
itself.

05:47.040 --> 05:49.720
Replacing Jitsi is the default conferencing system.

05:49.720 --> 05:53.800
But before you get too excited, this is a two-step process.

05:53.800 --> 05:57.200
First you've got to embed Element Call kind of in the same way that Jitsi is embedded

05:57.200 --> 05:58.200
today.

05:58.200 --> 06:02.000
So you can get rid of Jitsi and then have an embedded Element Call that basically functions

06:02.000 --> 06:04.860
mostly the same way as Jitsi did before.

06:04.860 --> 06:09.800
After that, it's gonna get embedded in a much more tightly integrated way so that it shares

06:09.800 --> 06:15.400
the same underlying matrix stack as the parent Element app, which means you can share access

06:15.400 --> 06:22.000
control and an encryption verification, all the rest of those nice Element features.

06:22.000 --> 06:23.000
And that's not it.

06:23.000 --> 06:26.520
I mean, that's all we're going to highlight today, but there is a lot going on over at

06:26.520 --> 06:30.920
Element and even more so somehow in the wider matrix ecosystem.

06:30.920 --> 06:35.200
Things have just really shifted in the next gear of adoption, and if you haven't yet tried

06:35.200 --> 06:41.040
it, now might be a great time.

06:41.040 --> 06:45.960
Just a double heads up for you, starting with Fedora 34 users, well, I regret to inform

06:45.960 --> 06:48.760
you that your time to move on has arrived.

06:48.760 --> 06:55.600
Fedora 34 reached its end of life a couple of days ago, as we record June 7th, 2022.

06:55.600 --> 07:00.280
And for Ubuntu 21.10 users, well, your clock is ticking too, but you do have just a bit

07:00.280 --> 07:01.280
longer.

07:01.280 --> 07:06.720
21.10 reaches end of life on July 14th, 2022.

07:06.720 --> 07:10.480
Now the good news is that I have heard from multiple folks in the audience that the upgrades

07:10.480 --> 07:16.760
from the latest Fedora and Ubuntu from those end of life releases has actually been pretty

07:16.760 --> 07:21.840
smooth on average.

07:21.840 --> 07:28.960
And a quick little update on the much-anticipated HP Dev1, the popOS-powered AMD-based Linux

07:28.960 --> 07:29.960
laptop.

07:29.960 --> 07:34.240
Not only is it available for ordering now, but shipments seem to be going out pretty

07:34.240 --> 07:35.240
darn quick.

07:35.240 --> 07:41.800
For those of you not familiar with the HP Dev1, the system ships in one default configuration,

07:41.800 --> 07:49.440
which is equipped with an 8-core AMD Ryzen 7 Pro processor, 1TB of PCI and BME storage,

07:49.440 --> 07:51.620
and 16GB of RAM.

07:51.620 --> 07:59.960
That comes with a 14-inch 1000-nit 1080p display at the price point of $1,099, and is only

07:59.960 --> 08:02.840
available in the US for now.

08:02.840 --> 08:06.480
If that piques your interest, you can catch the dev perspective from Michael Dominic's

08:06.480 --> 08:13.580
first hands-on Encoderadio 469, and an old Linux Saltz take this coming Sunday on Linux

08:13.580 --> 08:18.800
Unplugged 462.

08:18.800 --> 08:32.920
Linode makes it possible, simple, affordable, accessible to all of us, enterprises or individuals,

08:32.920 --> 08:36.880
to deploy and manage your projects in the cloud.

08:36.880 --> 08:40.380
Everything we've built in the last couple of years here at JB, we've done it up on Linode.

08:40.380 --> 08:42.960
Our latest projects, they're done on Linode.

08:42.960 --> 08:47.000
Linode's been at this for nearly 19 years, iterating to make it better and better.

08:47.000 --> 08:51.160
And they have some of the best performance with 11 data centers around the world.

08:51.160 --> 08:55.360
Back in May, they launched their managed database service.

08:55.360 --> 08:56.360
That's a great service.

08:56.360 --> 08:59.880
It gives developers access to some popular databases in the cloud, and it shifts some

08:59.880 --> 09:03.400
of the responsibility of maintenance and monitoring onto Linode.

09:03.400 --> 09:07.680
And this week, they're rounding out the offering with Postgres and MongoDB.

09:07.680 --> 09:09.880
And I'm not kidding you.

09:09.880 --> 09:12.080
I'm taking this one, and I'm going to go for it.

09:12.080 --> 09:16.280
I think we're going to move some of our databases to their managed Postgres.

09:16.280 --> 09:20.900
We love Postgres, and I love the way Linode runs their infrastructure.

09:20.900 --> 09:24.800
So you put those two things together, and I think that's just going to make it great.

09:24.800 --> 09:25.800
And you know what?

09:25.800 --> 09:28.320
The reliability for us has been 100%.

09:28.320 --> 09:29.720
And the monitoring is fantastic.

09:29.720 --> 09:34.500
We recently deployed JupyterTube, our PeerTube instance, and I get all kinds of interesting

09:34.500 --> 09:37.880
metrics in their dashboard and alerts when things go a little awry.

09:37.880 --> 09:39.800
It's been really nice.

09:39.800 --> 09:43.440
And I hear from you out there all the time that they have the best support in the business.

09:43.440 --> 09:44.880
So go get that $100.

09:44.880 --> 09:49.680
Build something, try something, learn something, and support the show.

09:49.680 --> 09:55.240
You go to linode.com slash LAN.

09:55.240 --> 10:00.040
Jupyter.party, become a member, support independent content, and get access to all the show's

10:00.040 --> 10:05.240
special feeds, including an ad-free feed of Linux Action News.

10:05.240 --> 10:12.800
That's Jupyter.party to support all the Jupyter broadcasting shows.

10:12.800 --> 10:17.280
And our final story might have been the biggest surprise this week.

10:17.280 --> 10:23.240
As part of Apple's Worldwide Developer Conference, taking place as we record, they've updated

10:23.240 --> 10:28.720
their developer documentation and revealed a tool that enables x86 applications to run

10:28.720 --> 10:36.320
on ARM, but not just Apple's version of ARM, no, any ARM system modern enough to support

10:36.320 --> 10:40.720
at least version 8.2 of the ARM instruction set.

10:40.720 --> 10:48.440
Most of us know this as Rosetta 2, and it's been shipping on M1 Macs since M1 Macs shipped.

10:48.440 --> 10:54.520
And it enables those computers to run code that's built for x86 machines, and those

10:54.520 --> 10:56.080
are ARM-based systems.

10:56.080 --> 11:01.440
But what seems to be new here is Apple has created a Rosetta binary for Linux, intended

11:01.440 --> 11:09.320
to enable running x86 Linux containers and x86 Linux applications on an Apple SOC.

11:09.320 --> 11:15.320
And what's really surprising here is it does not require an Apple CPU, which kind of puts

11:15.320 --> 11:20.120
to bed the myth that Apple's system on a chip had something special baked in specifically

11:20.120 --> 11:24.400
to enable Rosetta and to enable Rosetta's impressive performance.

11:24.400 --> 11:30.980
But no, it seems that what you really need is just a goshdarn modern ARM CPU.

11:30.980 --> 11:32.240
Performance is what we're talking about here.

11:32.240 --> 11:38.040
I mean, that's the big deal, a speed improvement for containers with x86 code in there is going

11:38.040 --> 11:44.160
to be massive because so far, that compatibility has been achieved with slow QMU emulation

11:44.160 --> 11:47.600
that is emulating an entire x86 system.

11:47.600 --> 11:51.740
What's just not so clear is how useful this will be ultimately for those of us running

11:51.740 --> 11:54.740
Linux that aren't on a Mac.

11:54.740 --> 12:01.740
It seems like you might expect getting a Mac with macOS Ace Ventura installed to get access

12:01.740 --> 12:03.920
to the Rosetta Linux binary.

12:03.920 --> 12:08.240
This is definitely early days, but what we've gleaned from the documentation and from some

12:08.240 --> 12:12.960
of the intrepid adventurers who are testing this out is that functionally, you first have

12:12.960 --> 12:15.760
to install Rosetta on the Mac.

12:15.760 --> 12:21.200
Then you mount a shared directory that contains the Rosetta Linux binary into your Linux

12:21.200 --> 12:22.660
virtual machine.

12:22.660 --> 12:29.000
That gets you this shiny new Rosetta Linux binary, which really is an ARM Linux ELF executable

12:29.000 --> 12:30.480
that Apple has created.

12:30.480 --> 12:35.880
But to get it to actually work, you have to do some registration funny business in your

12:35.880 --> 12:38.240
Linux system.

12:38.240 --> 12:45.080
This is done using a feature added to Linux way back in kernel 2.1.43 and later named

12:45.080 --> 12:46.080
the bin-format-misc-module.

12:46.080 --> 12:52.000
According to the patch notes at the time, this feature enables a system administrator

12:52.000 --> 12:57.520
to register interpreters for various binary formats based on a magic number or their file

12:57.520 --> 13:02.900
extension and then cause the appropriate interpreter to be invoked whenever a matching file is

13:02.900 --> 13:03.900
executed.

13:03.900 --> 13:08.200
So, you know, once you've set this up, you've got Rosetta mounted in, you've got it registered

13:08.200 --> 13:13.080
with the system, your kernel is going to see that you're trying to execute an x86 binary

13:13.080 --> 13:17.520
and automatically call the Rosetta to run it for you.

13:17.520 --> 13:22.640
Yeah, it's interesting to see it go this direction.

13:22.640 --> 13:28.640
And it kind of also seems to suggest that Apple plans to keep Rosetta 2 around a lot

13:28.640 --> 13:33.760
longer than they did version one for the PowerPC to Intel transition.

13:33.760 --> 13:35.580
We'll see really where this goes.

13:35.580 --> 13:40.080
What would really be great is to see Apple open this up to the wider ecosystem to publish

13:40.080 --> 13:44.440
this up on GitHub or something like that, ship this as a standalone component that doesn't

13:44.440 --> 13:48.460
require Mac OS so that way developers could put it into their containers while they're

13:48.460 --> 13:53.600
composing them and perhaps would ease the transition from Intel to ARM.

13:53.600 --> 13:56.760
But I won't hold my breath for that one.

13:56.760 --> 14:00.600
If it does happen, though, we'll let you know about that or well, anything else that happens

14:00.600 --> 14:02.640
in the world of Linux and open source news.

14:02.640 --> 14:08.360
So be sure you go to LinuxActionNews.com slash subscribe for all the ways to get new episodes.

14:08.360 --> 14:12.960
And LinuxActionNews.com slash contact for ways to get in touch.

14:12.960 --> 14:16.840
Don't miss this week's episode of Office Hours, a special guest stops by and tells

14:16.840 --> 14:22.240
us about a new open source podcasting app for Android and iOS.

14:22.240 --> 14:27.960
As for us, we'll be back next week with our take on the latest Linux and open source news.

14:27.960 --> 14:28.960
Thanks for joining us.

14:28.960 --> 14:48.400
That's all the news for this week.

