1
00:00:00,000 --> 00:00:16,680
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

2
00:00:16,680 --> 00:00:20,960
This is episode 50, recorded on April 22nd, 2018.

3
00:00:20,960 --> 00:00:21,960
I'm Chris.

4
00:00:21,960 --> 00:00:22,960
And I'm Joe.

5
00:00:22,960 --> 00:00:23,960
Hello, Joe.

6
00:00:23,960 --> 00:00:28,500
It's good to be connected with you, especially on a week when we have so many new releases.

7
00:00:28,500 --> 00:00:30,320
Let's kick it off with Triskel 8.

8
00:00:30,320 --> 00:00:36,600
Yes, hot on the heels of the last release, 7, which was released in November 2014.

9
00:00:36,600 --> 00:00:39,160
So three and a half years ago.

10
00:00:39,160 --> 00:00:40,160
Hmm.

11
00:00:40,160 --> 00:00:44,640
And this is based on Ubuntu 16.04.

12
00:00:44,640 --> 00:00:47,320
And what's coming up next week, Ubuntu 18.04.

13
00:00:47,320 --> 00:00:52,240
So it's kind of a little bit out of date, which is a real shame because this is a great

14
00:00:52,240 --> 00:00:53,880
release of Triskel.

15
00:00:53,880 --> 00:00:59,920
It's now based on Marte, which as we know is a rock solid desktop that I love second

16
00:00:59,920 --> 00:01:02,520
only to XFCE for me.

17
00:01:02,520 --> 00:01:05,120
And I could use this distro as a daily driver.

18
00:01:05,120 --> 00:01:11,360
Yes, it's completely free software, but it turns out that I don't tend to use that much

19
00:01:11,360 --> 00:01:12,520
non free software.

20
00:01:12,520 --> 00:01:16,080
And if you want to install Chrome, well, spoiler, you can actually do that on this.

21
00:01:16,080 --> 00:01:18,800
I've tried it just for the lulz and it worked absolutely perfectly.

22
00:01:18,800 --> 00:01:19,800
Huh.

23
00:01:19,800 --> 00:01:20,800
You know, I'm actually kind of surprised, Joe.

24
00:01:20,800 --> 00:01:22,400
I thought you'd be more impressed.

25
00:01:22,400 --> 00:01:25,880
You run Triskel as a sort of a validation testing against hardware all the time.

26
00:01:25,880 --> 00:01:28,640
So you are a kind of a frequent Triskel user.

27
00:01:28,640 --> 00:01:32,320
And something based on 16.04 is going to be supported for a few more years.

28
00:01:32,320 --> 00:01:37,600
And they do say in the post, they're going to be hot to trot on 8.0 based on 18.04.

29
00:01:37,600 --> 00:01:41,280
They think they're going to have it out pretty close to the 18.04 release.

30
00:01:41,280 --> 00:01:45,740
And the other thing that strikes me is who's using Triskel Linux that wants the totally

31
00:01:45,740 --> 00:01:46,740
latest stuff?

32
00:01:46,740 --> 00:01:51,280
Because you got to bear in mind this is shipping with the Linux Libre kernel, which we talked

33
00:01:51,280 --> 00:01:52,880
about last week.

34
00:01:52,880 --> 00:01:54,920
And it's 4.4 by default.

35
00:01:54,920 --> 00:01:57,040
It's not like you're looking for the latest software here.

36
00:01:57,040 --> 00:01:58,520
Well, I don't think that's fair.

37
00:01:58,520 --> 00:02:02,640
Just because you're into 100% freedom doesn't necessarily mean you're not interested in

38
00:02:02,640 --> 00:02:04,920
the latest versions of stuff.

39
00:02:04,920 --> 00:02:09,580
What if you've got a really new laptop that needs a newer kernel?

40
00:02:09,580 --> 00:02:14,280
And what if you rely on applications that have been revved in the last couple of years

41
00:02:14,280 --> 00:02:17,760
significantly and have features that you depend on?

42
00:02:17,760 --> 00:02:22,600
It's I don't think it's fair to kind of put those people in a box of just, oh, they want

43
00:02:22,600 --> 00:02:24,040
crusty old stuff or whatever.

44
00:02:24,040 --> 00:02:25,880
Because look at this release.

45
00:02:25,880 --> 00:02:28,200
Look at the desktop that's in front of you.

46
00:02:28,200 --> 00:02:34,720
It's a really nice professional looking Marte implementation that's based on Ubuntu, but

47
00:02:34,720 --> 00:02:36,200
just happens to be totally free.

48
00:02:36,200 --> 00:02:38,560
I think that it's not their fault.

49
00:02:38,560 --> 00:02:41,840
I'm not blaming them because obviously they are lacking developer resources here.

50
00:02:41,840 --> 00:02:44,880
And that's why it's taken so long to get this out the door.

51
00:02:44,880 --> 00:02:49,640
And hopefully this release will generate enough buzz to then attract a few more developers

52
00:02:49,640 --> 00:02:55,880
in and hopefully get this next version out that's based on 18.04 within the next year

53
00:02:55,880 --> 00:02:58,200
or so and play catch up.

54
00:02:58,200 --> 00:03:03,320
You know, funny enough, I think you might have just described the ideal PureOS user.

55
00:03:03,320 --> 00:03:10,000
Really because PureOS is based on Debian, but it's using Gnome 3 and Wayland.

56
00:03:10,000 --> 00:03:15,240
It's much more modern, but it goes for the same sort of user where they're free and Libre

57
00:03:15,240 --> 00:03:17,120
software only.

58
00:03:17,120 --> 00:03:21,840
Privacy is a huge part of PureOS, and it's backed by Purism.

59
00:03:21,840 --> 00:03:26,000
So you may be a PureOS user, not a Triskel user, Joe.

60
00:03:26,000 --> 00:03:31,240
Yeah, but Gnome, no thanks, whereas Marte, yes, please.

61
00:03:31,240 --> 00:03:34,440
Hey, now save the Gnome commentary for later in the show.

62
00:03:34,440 --> 00:03:36,400
Yeah, I suppose.

63
00:03:36,400 --> 00:03:39,920
But Triskel to me seems more relevant than it ever has done.

64
00:03:39,920 --> 00:03:45,640
People are starting to really care about software freedom because it goes hand in hand with

65
00:03:45,640 --> 00:03:46,640
privacy.

66
00:03:46,640 --> 00:03:51,080
And so it seems like maybe this stuff was a little bit forgotten in the past, but in

67
00:03:51,080 --> 00:03:54,520
the past few years, people have started to pay more attention to this.

68
00:03:54,520 --> 00:03:57,640
Companies like Purism have come along and capitalized on that.

69
00:03:57,640 --> 00:04:04,120
And it seems that if they can keep this momentum going and get this version nine out as soon

70
00:04:04,120 --> 00:04:07,240
as possible, then they could potentially get some real traction with it.

71
00:04:07,240 --> 00:04:08,420
So fingers crossed.

72
00:04:08,420 --> 00:04:09,440
You know that I do agree with.

73
00:04:09,440 --> 00:04:13,760
You and I both kicked the tires on this release to just do a little bit of prep for the show.

74
00:04:13,760 --> 00:04:17,760
And I was really pleasantly surprised with their implementation of the Marte desktop.

75
00:04:17,760 --> 00:04:19,680
You would think they've been shipping this thing for years.

76
00:04:19,680 --> 00:04:20,900
It looks so good.

77
00:04:20,900 --> 00:04:22,840
So it's a solid release.

78
00:04:22,840 --> 00:04:27,960
And if Triskel is appealing to you and you're okay with the 1604 base, I would encourage

79
00:04:27,960 --> 00:04:29,600
you to go to the website and give it a go.

80
00:04:29,600 --> 00:04:31,480
I was pleasantly surprised when I tried it.

81
00:04:31,480 --> 00:04:32,480
What about you, Joe?

82
00:04:32,480 --> 00:04:33,720
Yeah, I wasn't that surprised.

83
00:04:33,720 --> 00:04:37,500
The one thing is the menu, they're going for the old school menu, and it'd be nice if they'd

84
00:04:37,500 --> 00:04:42,360
integrated Brisk, which as we know in Ubuntu, Marte is an option now and it's a really great

85
00:04:42,360 --> 00:04:47,180
menu, which I think it is possible to get it running in Triskel, but it's not there

86
00:04:47,180 --> 00:04:48,180
by default.

87
00:04:48,180 --> 00:04:51,760
So that's the only sort of little thing I would say they ought to change.

88
00:04:51,760 --> 00:04:54,240
But hopefully in the next release, they'll do that.

89
00:04:54,240 --> 00:04:55,240
Fair enough.

90
00:04:55,240 --> 00:04:58,960
I didn't notice that because I've been too busy running React OS this weekend.

91
00:04:58,960 --> 00:05:00,520
I'm a bit of a fanboy now, Joe.

92
00:05:00,520 --> 00:05:01,520
Yeah.

93
00:05:01,520 --> 00:05:04,360
So this is a completely open source operating system, but it's not based on Linux.

94
00:05:04,360 --> 00:05:10,020
It is its own thing and it aims for binary compatibility with Win32.

95
00:05:10,020 --> 00:05:12,920
So it's essentially open source Windows.

96
00:05:12,920 --> 00:05:18,400
Now I was really disappointed that I could not get this to run on any of my machines,

97
00:05:18,400 --> 00:05:20,960
but I understand that you got it running in a virtual machine.

98
00:05:20,960 --> 00:05:21,960
Yeah, I did.

99
00:05:21,960 --> 00:05:27,800
In VMware Player set up to run a Windows VM, I managed to get the latest React OS to boot,

100
00:05:27,800 --> 00:05:29,400
which just came out.

101
00:05:29,400 --> 00:05:35,200
It's React OS 0.4.8, and there is a ton of cool stuff.

102
00:05:35,200 --> 00:05:36,400
It's peak Windows.

103
00:05:36,400 --> 00:05:41,120
If you liked Windows 2000 era Windows, but you like some of the control panel functionality

104
00:05:41,120 --> 00:05:47,280
of Windows 98, but you like NT compatibility and stability, React OS is trying to aim for

105
00:05:47,280 --> 00:05:48,280
that.

106
00:05:48,280 --> 00:05:52,880
Now they haven't gotten there with the stability, but when you download the ISO, it's tiny.

107
00:05:52,880 --> 00:05:56,640
Once it's installed on your system, it takes 500 megabytes of hard drive space.

108
00:05:56,640 --> 00:05:59,140
It can operate in 96 megabytes of RAM.

109
00:05:59,140 --> 00:06:00,640
It's been written from scratch.

110
00:06:00,640 --> 00:06:08,200
It has over 100 active developers contributing to it, and it is blazing fast.

111
00:06:08,200 --> 00:06:13,440
I have not used an operating system this fast, including even Windows 7 in classic mode on

112
00:06:13,440 --> 00:06:18,840
modern hardware with an SSD is not as fast as React OS was, which makes sense.

113
00:06:18,840 --> 00:06:22,720
It's a slim early days OS, but it's so great.

114
00:06:22,720 --> 00:06:28,080
It's this weird alternate dimension of Windows where when you go in there and say you want

115
00:06:28,080 --> 00:06:33,960
to turn on anti-aliasing, well, in the Microsoft world, that would be using clear type.

116
00:06:33,960 --> 00:06:39,860
But in React OS, because it's free software, you see all of these familiar free tools to

117
00:06:39,860 --> 00:06:45,160
do anti-aliasing, or when you go set up the quote network time in Windows, it's actually

118
00:06:45,160 --> 00:06:47,760
pointing to pool.ntp.org.

119
00:06:47,760 --> 00:06:54,820
It's using like open source community resources and technology, and it's on top of this weirdo

120
00:06:54,820 --> 00:06:59,320
Frankenstein version of Windows that's faster and cleaner and more efficient than Windows

121
00:06:59,320 --> 00:07:01,140
ever was.

122
00:07:01,140 --> 00:07:02,140
It's remarkable.

123
00:07:02,140 --> 00:07:06,160
I got to say, Joe, I've never run React OS until today.

124
00:07:06,160 --> 00:07:11,700
I did it for this show, and I am going to be an avid follower of this project now because

125
00:07:11,700 --> 00:07:15,880
it's perfect for somebody who occasionally might need Windows compatibility with something,

126
00:07:15,880 --> 00:07:19,820
and if they can get there, if they can make it stable and they can make it work, this

127
00:07:19,820 --> 00:07:21,520
is going to be a remarkable project.

128
00:07:21,520 --> 00:07:25,120
I think it's going to be a true challenger to desktop Linux if they can get there.

129
00:07:25,120 --> 00:07:29,160
I think that's going a bit far because they've got a long way to go to make it totally stable

130
00:07:29,160 --> 00:07:33,640
and support as much hardware as Linux does, but with this release, what really jumped

131
00:07:33,640 --> 00:07:39,500
out at me is that now they're supporting Vista, Windows 8, and Windows 10 software, and so

132
00:07:39,500 --> 00:07:44,580
I was very keen to try and get some of the big hunking proprietary music applications

133
00:07:44,580 --> 00:07:50,640
that I use in Windows to try and get my electric drums working and the amp modelers and stuff

134
00:07:50,640 --> 00:07:55,240
that I make my music with, but I just could not get it running on hardware, and that was

135
00:07:55,240 --> 00:07:56,940
so disappointing.

136
00:07:56,940 --> 00:08:01,320
That's why I didn't really bother with a VM because you're never going to be able to do

137
00:08:01,320 --> 00:08:05,000
that kind of stuff with USB, and you're going to have latency issues and all the rest of

138
00:08:05,000 --> 00:08:06,000
it.

139
00:08:06,000 --> 00:08:07,000
Yeah.

140
00:08:07,000 --> 00:08:09,040
I don't really think it's ever going to get there either, but if it could somehow, it

141
00:08:09,040 --> 00:08:12,360
would be really remarkable because, so as an example, another thing that landed in the

142
00:08:12,360 --> 00:08:18,780
new release in 0.48 is this new NTFS driver that came up during a couple of Google summers

143
00:08:18,780 --> 00:08:24,960
of code, a couple of them accumulated in new code that landed in ReactOS for the NTFS driver.

144
00:08:24,960 --> 00:08:29,320
You've got free type 2.9 baked into this thing, but then there's other things in here that

145
00:08:29,320 --> 00:08:34,320
are really kind of cool like support for Extended 2 and Extended 3.

146
00:08:34,320 --> 00:08:35,440
Why not?

147
00:08:35,440 --> 00:08:36,960
Why not have that built in?

148
00:08:36,960 --> 00:08:40,240
And it's like a power user's version of Windows Explorer.

149
00:08:40,240 --> 00:08:42,240
It's better than Windows Explorer ever was.

150
00:08:42,240 --> 00:08:46,800
It's like a cross between Dolphin and Windows Explorer, and I was able to get a couple of

151
00:08:46,800 --> 00:08:51,600
Win32 apps to run, but I was so taken away by the whole OS and how fast it was, how simple

152
00:08:51,600 --> 00:08:57,500
and clean it was, and how Windows has really changed over the years from what I consider

153
00:08:57,500 --> 00:09:03,160
peak Windows, which is around Windows 2000 professional desktop as a professional Windows

154
00:09:03,160 --> 00:09:04,160
workstation.

155
00:09:04,160 --> 00:09:05,160
I really loved it.

156
00:09:05,160 --> 00:09:08,320
I thought that was when they did a great job, and this is it.

157
00:09:08,320 --> 00:09:09,840
That's what ReactOS is.

158
00:09:09,840 --> 00:09:14,440
So to see this new release land, to see it be really great, I can see it going two ways.

159
00:09:14,440 --> 00:09:15,880
I think you're probably right.

160
00:09:15,880 --> 00:09:19,760
It's never going to quite get to the level that Linux is in terms of hardware support

161
00:09:19,760 --> 00:09:22,840
or even robust architecture support.

162
00:09:22,840 --> 00:09:27,220
But if you can nail that hardware or if you can get it in VMware, it really is quite impressive,

163
00:09:27,220 --> 00:09:31,400
and it's an amazing statement of what open source development is capable of, a complete

164
00:09:31,400 --> 00:09:33,840
re-implementation of peak Windows.

165
00:09:33,840 --> 00:09:38,360
Yeah, who knew that Linux Action News would be your preeminent ReactOS podcast, but there

166
00:09:38,360 --> 00:09:39,360
we go.

167
00:09:39,360 --> 00:09:41,800
It is part of that open source world after all.

168
00:09:41,800 --> 00:09:42,800
Yeah.

169
00:09:42,800 --> 00:09:47,520
Well, speaking of the open source world, the German government is going to be using NextCloud

170
00:09:47,520 --> 00:09:49,080
on quite a big scale.

171
00:09:49,080 --> 00:09:54,240
I guess there was a pilot program running with about 5,000 users since October 2016.

172
00:09:54,240 --> 00:09:55,680
I hadn't heard much about it.

173
00:09:55,680 --> 00:09:57,780
That's not too uncommon.

174
00:09:57,780 --> 00:10:04,080
But now it looks like that pilot program is going to get rolled out to 300,000 users in

175
00:10:04,080 --> 00:10:06,280
different federal agencies.

176
00:10:06,280 --> 00:10:10,400
This is coming from Der Spiegel, which is a famous paper from over there, and they confirmed

177
00:10:10,400 --> 00:10:17,320
that the focus of this is to construct a private cloud for the German federal government to

178
00:10:17,320 --> 00:10:22,360
address concerns within the government for a platform that is fully controlled, that

179
00:10:22,360 --> 00:10:28,560
would not allow access to data by any third party, and was fully GDPR compliant.

180
00:10:28,560 --> 00:10:33,080
Yeah, the NextCloud guys must be rubbing their hands at this GDPR stuff, because I presume

181
00:10:33,080 --> 00:10:36,000
that it's not just going to be Germany who's going to be looking at them, there's going

182
00:10:36,000 --> 00:10:37,800
to be other governments all over Europe.

183
00:10:37,800 --> 00:10:41,800
Yeah, kind of funny, on the other side of the pond over here in the States, our federal

184
00:10:41,800 --> 00:10:45,280
government agencies are going more and more with AWS.

185
00:10:45,280 --> 00:10:50,160
That's been a big trend with the CIA and other agencies that want to have a secure public

186
00:10:50,160 --> 00:10:56,300
cloud is they've been contracting with Amazon to build them a private version of AWS.

187
00:10:56,300 --> 00:11:01,200
This route seems way more sustainable, way better, and they can run it on their own internal

188
00:11:01,200 --> 00:11:02,200
servers.

189
00:11:02,200 --> 00:11:05,640
I guess it's a different scale, but I really like to see the direction of the German government

190
00:11:05,640 --> 00:11:07,520
here going with NextCloud for this kind of thing.

191
00:11:07,520 --> 00:11:10,840
And they could even probably afford to hire a few developers to contribute to areas that

192
00:11:10,840 --> 00:11:11,840
they feel might need it.

193
00:11:11,840 --> 00:11:13,360
Well, that was my next point.

194
00:11:13,360 --> 00:11:16,520
With 300,000 users, that is a good stress test, isn't it?

195
00:11:16,520 --> 00:11:20,880
And it means that little corner cases and bugs that people didn't even know about will

196
00:11:20,880 --> 00:11:25,360
be found, and they'll presumably have the budget to fix them, and then we will all benefit

197
00:11:25,360 --> 00:11:26,360
as a result.

198
00:11:26,360 --> 00:11:29,080
I wonder if I'll bump into anyone from NextCloud at Linux Fest Northwest.

199
00:11:29,080 --> 00:11:34,480
I'd love to pick their brain about this development, because you have to wonder if that recent

200
00:11:34,480 --> 00:11:40,080
announced end-to-end encryption on a per-folder basis, and NextCloud Talk as well, didn't play

201
00:11:40,080 --> 00:11:42,080
a role in sealing this deal.

202
00:11:42,080 --> 00:11:44,160
Oh, I would have thought that would be a big part of it.

203
00:11:44,160 --> 00:11:46,440
I mean, the end-to-end encryption, definitely.

204
00:11:46,440 --> 00:11:48,480
The talk stuff, maybe not.

205
00:11:48,480 --> 00:11:53,200
I mean, it's an attractive feature, but I think that the end-to-end encryption is huge,

206
00:11:53,200 --> 00:11:57,620
isn't it, in terms of enterprise, and in this case, government.

207
00:11:57,620 --> 00:11:59,600
You need to have that to be enterprise-grade.

208
00:11:59,600 --> 00:12:01,200
Yeah, I completely agree.

209
00:12:01,200 --> 00:12:05,640
Although, I think Dropbox shows us you don't necessarily need to have end-to-end encryption,

210
00:12:05,640 --> 00:12:10,040
but this story may also be showing us that it could be the thing that seals the deal,

211
00:12:10,040 --> 00:12:15,800
that little extra that pushes it over the edge.

212
00:12:15,800 --> 00:12:17,160
Last.ting.com.

213
00:12:17,160 --> 00:12:20,120
Go there to sign up for mobile that is smarter than unlimited.

214
00:12:20,120 --> 00:12:22,020
It's pay-for-what-you-use wireless.

215
00:12:22,020 --> 00:12:23,160
Think about this for a second.

216
00:12:23,160 --> 00:12:27,840
It's $6 for the line, and then you just pay for the minutes, the messages, and the megabytes

217
00:12:27,840 --> 00:12:28,840
that you use.

218
00:12:28,840 --> 00:12:32,520
Ting has a GSM and a CDMA network that you can choose from, and that means they have

219
00:12:32,520 --> 00:12:36,000
a bunch of devices they support, so check their BYOD page.

220
00:12:36,000 --> 00:12:40,880
If you go to last.ting.com and you bring a device, they will give you $25 in service

221
00:12:40,880 --> 00:12:41,880
credit.

222
00:12:41,880 --> 00:12:44,000
That's likely going to pay for more than your first month.

223
00:12:44,000 --> 00:12:48,440
The average Ting bill is just $23 per month per phone.

224
00:12:48,440 --> 00:12:53,980
That's nationwide coverage, pay-for-what-you-use, no contracts, no service agreements.

225
00:12:53,980 --> 00:12:58,040
They have a great control panel that lets you manage everything, see your usage at a

226
00:12:58,040 --> 00:13:01,240
glance, and you can also set usage alerts.

227
00:13:01,240 --> 00:13:04,520
They have a great range of devices since they have the two different network technologies

228
00:13:04,520 --> 00:13:08,560
to choose from, and you can rest assured that Ting's a great mobile service provider because

229
00:13:08,560 --> 00:13:14,840
they just rocked the Consumer Reports rankings in 2017 that came out just a bit ago.

230
00:13:14,840 --> 00:13:17,400
It's a great report, and you can see it on Ting's website.

231
00:13:17,400 --> 00:13:19,080
Go to last.ting.com.

232
00:13:19,080 --> 00:13:21,560
They are a strong contender, and then they wrap it all up.

233
00:13:21,560 --> 00:13:23,280
They back it up, if you will.

234
00:13:23,280 --> 00:13:26,600
They back that thing up with great customer service.

235
00:13:26,600 --> 00:13:30,880
Tell people who really help, and right now you can go to last.ting.com, and you can grab

236
00:13:30,880 --> 00:13:36,760
the Motorola E4 Plus for $134 US greenbacks, no contract, no service agreement, out the

237
00:13:36,760 --> 00:13:37,760
door.

238
00:13:37,760 --> 00:13:38,760
You own the device.

239
00:13:38,760 --> 00:13:43,260
It's got a 13 megapixel camera, 2 gigabytes of RAM, a 5,000 milliamp battery, and that

240
00:13:43,260 --> 00:13:46,820
Moto UI is thin, and they keep that thing up to date.

241
00:13:46,820 --> 00:13:57,120
For $134, no contract, no service agreement, you're good to go, last.ting.com.

242
00:13:57,120 --> 00:14:01,360
Okay let's talk about our favorite company again, Microsoft, and they have announced

243
00:14:01,360 --> 00:14:03,160
an operating system.

244
00:14:03,160 --> 00:14:04,160
It's based on Linux.

245
00:14:04,160 --> 00:14:05,160
It's not a big thing.

246
00:14:05,160 --> 00:14:08,560
Yeah, it's just the next big thing from Microsoft that's going to ship on tens of billions of

247
00:14:08,560 --> 00:14:11,760
devices a year if their predictions work out.

248
00:14:11,760 --> 00:14:16,760
I had a great chance to actually chat with the people behind Azure Sphere OS, and they

249
00:14:16,760 --> 00:14:19,560
would like you to think of it as a three-part solution.

250
00:14:19,560 --> 00:14:21,940
It's an MCU hardware device.

251
00:14:21,940 --> 00:14:25,920
It's a secured operating system that's powered by the Linux kernel, and then it's a cloud

252
00:14:25,920 --> 00:14:30,800
service that performs metrics, data collection, and a support channel for updates that last

253
00:14:30,800 --> 00:14:31,800
10 years.

254
00:14:31,800 --> 00:14:37,840
And the idea is you can build an IoT product around this MCU, and that ranges from stuff

255
00:14:37,840 --> 00:14:42,360
like a coffee pot that just needs a simple real-time operating system to something more

256
00:14:42,360 --> 00:14:43,640
sophisticated.

257
00:14:43,640 --> 00:14:46,840
And while I was talking to Microsoft, I said, why not Windows?

258
00:14:46,840 --> 00:14:50,080
Windows seems like that would have been the route of Microsoft of the past.

259
00:14:50,080 --> 00:14:54,600
You know, cram NT down on this thing and call it Windows ROT.

260
00:14:54,600 --> 00:14:55,600
So why Linux?

261
00:14:55,600 --> 00:15:02,000
And they said, simply enough, we couldn't get Windows down to that size, and quite frankly,

262
00:15:02,000 --> 00:15:05,240
hardware manufacturers want to get innovating right now.

263
00:15:05,240 --> 00:15:07,560
They want something that they can start building on top of.

264
00:15:07,560 --> 00:15:11,360
They don't have to call some bureaucrat at Microsoft and say, please sir, can I have

265
00:15:11,360 --> 00:15:13,120
a license for your Windows source code?

266
00:15:13,120 --> 00:15:17,120
I'd love you to share the code with me so I can build my next product, sir.

267
00:15:17,120 --> 00:15:18,480
They don't want that.

268
00:15:18,480 --> 00:15:21,360
The market that they're trying to sell to just simply is not interested in that when

269
00:15:21,360 --> 00:15:24,520
they can go grab the Linux source code and start building tomorrow.

270
00:15:24,520 --> 00:15:28,640
So they have to be using Linux, essentially, to be competitive in the market and to get

271
00:15:28,640 --> 00:15:30,200
down to the size they want.

272
00:15:30,200 --> 00:15:34,200
But keep in mind, there's other things at this level that Microsoft is implementing

273
00:15:34,200 --> 00:15:36,040
that are outside of Linux.

274
00:15:36,040 --> 00:15:41,120
They brought over some of the boot validation and security code from the Xbox system and

275
00:15:41,120 --> 00:15:46,440
the crash metrics and update systems from Windows to layer it into this OS.

276
00:15:46,440 --> 00:15:50,360
So there's some additional Microsoft innovation mixed in here.

277
00:15:50,360 --> 00:15:54,120
This is by no means the Linux that we're used to, is it?

278
00:15:54,120 --> 00:15:59,120
At the core, it is Linux 4.9, straight up GPL Linux 4.9, and they're using containers

279
00:15:59,120 --> 00:16:04,080
and namespaces to do isolation of processes and to keep everything secure.

280
00:16:04,080 --> 00:16:06,320
But when it boots, that's Microsoft technology.

281
00:16:06,320 --> 00:16:09,720
When it crashes and has an error report, that's Microsoft technology.

282
00:16:09,720 --> 00:16:14,120
The cloud services it's connecting back, obviously, Microsoft technology.

283
00:16:14,120 --> 00:16:17,240
But in a way, that's what the market wants.

284
00:16:17,240 --> 00:16:22,720
It's what Microsoft's great at, Azure and 10 years of support, combined with what open

285
00:16:22,720 --> 00:16:25,240
source is great at, the Linux kernel.

286
00:16:25,240 --> 00:16:28,520
Microsoft has really brought those two things together with this product, and they're selling

287
00:16:28,520 --> 00:16:34,200
it to people that are not necessarily great at building these things, creating this aspect

288
00:16:34,200 --> 00:16:35,200
of the product.

289
00:16:35,200 --> 00:16:39,920
So Microsoft is kind of solving a problem for the crockpots and sous vide machines of

290
00:16:39,920 --> 00:16:42,560
the future that must connect to Wi-Fi.

291
00:16:42,560 --> 00:16:48,120
But once again, this is just more pragmatic use of open source by Microsoft, who are a

292
00:16:48,120 --> 00:16:53,440
company who needs to make money, and like many, many companies out there who need to

293
00:16:53,440 --> 00:17:00,160
implement solutions, a profitable way to do that is to take advantage of open source.

294
00:17:00,160 --> 00:17:04,780
And you've got a lot of people kicking up a stink about this, saying that it's embrace

295
00:17:04,780 --> 00:17:08,880
extend extinguish and all that, but I'm just not buying that anymore.

296
00:17:08,880 --> 00:17:12,400
The bottom line is that open source makes business sense.

297
00:17:12,400 --> 00:17:16,360
Microsoft is a business that is historically quite good at making money.

298
00:17:16,360 --> 00:17:21,880
And so they are moving with the times and getting into IoT a very sensible way using

299
00:17:21,880 --> 00:17:22,880
Linux.

300
00:17:22,880 --> 00:17:26,980
Yeah, and I think the capitalist hard truth of the matter is, it's just going to sell

301
00:17:26,980 --> 00:17:31,560
more if it's Linux at the core instead of Windows, and Microsoft is aware of that.

302
00:17:31,560 --> 00:17:35,000
And it comes down to just those simple market dynamics.

303
00:17:35,000 --> 00:17:38,920
It definitely isn't embrace extend and extinguish simply because if they extinguish it, then

304
00:17:38,920 --> 00:17:41,600
they won't be able to make money off it anymore.

305
00:17:41,600 --> 00:17:46,760
Microsoft of 2018 knows how to make money off of Linux free software and open source.

306
00:17:46,760 --> 00:17:49,600
And if they extinguish it, there goes their revenue stream.

307
00:17:49,600 --> 00:17:54,520
Yeah, and the idea that they're somehow controlling Linux or open source seems to be absolutely

308
00:17:54,520 --> 00:17:55,520
nonsense to me.

309
00:17:55,520 --> 00:18:00,220
Yes, they've contributed patches that are specific to Azure, but the rest of us who

310
00:18:00,220 --> 00:18:04,520
aren't using Azure, we're not using those patches, and we'll just happily carry on using

311
00:18:04,520 --> 00:18:08,160
AWS or DigitalOcean or on premises or whatever.

312
00:18:08,160 --> 00:18:12,640
So I just don't understand all the hatred towards Microsoft.

313
00:18:12,640 --> 00:18:18,200
Yes, they've got this horrible history of calling Linux a cancer, and the patent shakedowns

314
00:18:18,200 --> 00:18:20,320
with Android and all the rest of that.

315
00:18:20,320 --> 00:18:24,860
But in terms of what they've been doing with the subsystem for Linux, and that Linux based

316
00:18:24,860 --> 00:18:31,520
switch OS that they were using internally on Azure, and now this, it's all just pragmatism.

317
00:18:31,520 --> 00:18:36,300
It's all just them making money with Linux, and I don't think they've got evil intentions

318
00:18:36,300 --> 00:18:42,500
beyond making tons of money using open source, like someone like Red Hat is doing.

319
00:18:42,500 --> 00:18:48,400
They are a company who are making tons of money using open source, and Microsoft see

320
00:18:48,400 --> 00:18:52,240
that and see that the future is with open source.

321
00:18:52,240 --> 00:18:53,800
You've mentioned free software a couple of times.

322
00:18:53,800 --> 00:18:59,360
You're never going to hear them use that term, but they're interested in using Linux to make

323
00:18:59,360 --> 00:19:02,360
money like so many other people are.

324
00:19:02,360 --> 00:19:03,360
That's exactly it.

325
00:19:03,360 --> 00:19:05,320
There's a couple of school of thoughts.

326
00:19:05,320 --> 00:19:10,480
Microsoft is trying to squish Linux down into some sort of controllable form that they have

327
00:19:10,480 --> 00:19:16,920
great influence over, and then the other school of thought is that Microsoft is a clever calculating

328
00:19:16,920 --> 00:19:21,580
business that has figured out different revenue paths based on what the consumer market that

329
00:19:21,580 --> 00:19:23,600
they serve is demanding.

330
00:19:23,600 --> 00:19:27,180
My experience shows me that whatever route is going to make a company more money, they're

331
00:19:27,180 --> 00:19:32,760
likely to take, and in this case, simply shipping Linux, supporting open source on Azure and

332
00:19:32,760 --> 00:19:39,680
on now Azure Sphere OS and the Windows subsystem for Linux is truly about selling to customers

333
00:19:39,680 --> 00:19:41,120
that are asking for those things.

334
00:19:41,120 --> 00:19:44,720
If they didn't have customers demanding them, they probably wouldn't be making them, but

335
00:19:44,720 --> 00:19:46,940
they are, and so they're happy to sell to them.

336
00:19:46,940 --> 00:19:48,400
That's always been the case.

337
00:19:48,400 --> 00:19:53,860
If you go way back into Microsoft's history, Microsoft began making money selling desktop

338
00:19:53,860 --> 00:19:56,660
software for the Macintosh.

339
00:19:56,660 --> 00:19:58,840
You understand that they didn't care.

340
00:19:58,840 --> 00:20:02,760
They're happy to make software for any platform that has customers.

341
00:20:02,760 --> 00:20:06,440
If your platform has customers, Microsoft will make something for you.

342
00:20:06,440 --> 00:20:11,160
That is in the DNA of this company way, way, way back before the good old Linux versus

343
00:20:11,160 --> 00:20:12,160
Windows wars.

344
00:20:12,160 --> 00:20:16,640
Yeah, but people are still going to write about them and use M dollar sign and stuff

345
00:20:16,640 --> 00:20:17,640
like that, aren't they?

346
00:20:17,640 --> 00:20:19,080
It's never going to get away from that.

347
00:20:19,080 --> 00:20:21,080
Embrace Linux Dagwish!

348
00:20:21,080 --> 00:20:22,080
Yeah.

349
00:20:22,080 --> 00:20:28,120
All right, so Google have announced yet another messaging service and they've shut down, well

350
00:20:28,120 --> 00:20:33,440
not shut down, but they're pausing investment in yet another product.

351
00:20:33,440 --> 00:20:36,960
So Allo was something that they released a year or two ago.

352
00:20:36,960 --> 00:20:41,960
It was this cool new chat application and they've decided that yeah, they don't really

353
00:20:41,960 --> 00:20:43,360
want to spend any more money on that.

354
00:20:43,360 --> 00:20:47,720
It's only got 50 million users compared to the how many billion using Facebook Messenger

355
00:20:47,720 --> 00:20:48,720
and WhatsApp.

356
00:20:48,720 --> 00:20:53,180
So it's been a colossal failure as usual.

357
00:20:53,180 --> 00:20:57,760
But the difference this time is that it's not just going to be this standalone app that

358
00:20:57,760 --> 00:20:59,160
they have complete control over.

359
00:20:59,160 --> 00:21:04,360
They're going to work with the carriers to implement something that is much closer to

360
00:21:04,360 --> 00:21:08,820
what you have in the iOS world with iMessage.

361
00:21:08,820 --> 00:21:13,040
The only thing that was more obvious than Canonical's failure to gain traction in the

362
00:21:13,040 --> 00:21:18,040
mobile market was Google's launch of Allo was just everyone knew it was going to fail

363
00:21:18,040 --> 00:21:20,200
before it even went out the door.

364
00:21:20,200 --> 00:21:23,320
Before it even got around to some of these devices, we knew this was going to fail.

365
00:21:23,320 --> 00:21:24,720
This is not a big surprise.

366
00:21:24,720 --> 00:21:30,440
The issue that I have with is this total focus on RCS because what it feels like, as you

367
00:21:30,440 --> 00:21:33,040
just alluded to, is iOS envy.

368
00:21:33,040 --> 00:21:37,120
And whenever Google gets trapped in iOS envy, they don't do good.

369
00:21:37,120 --> 00:21:38,760
RCS sounds cute.

370
00:21:38,760 --> 00:21:41,520
The idea is iMessage for everyone.

371
00:21:41,520 --> 00:21:46,120
We can send you rich text messages about your flight status, and you don't have to have

372
00:21:46,120 --> 00:21:48,000
any particular application.

373
00:21:48,000 --> 00:21:53,780
The only problem is this little itsy bitsy thing that comes up from time to time called

374
00:21:53,780 --> 00:21:55,000
the carriers.

375
00:21:55,000 --> 00:21:57,760
RCS is completely controlled by the carriers.

376
00:21:57,760 --> 00:22:01,200
We will go back to SMS hell times 10.

377
00:22:01,200 --> 00:22:07,040
And this is also a great way to control, track, and monitor users because it all flows through

378
00:22:07,040 --> 00:22:08,040
the carriers.

379
00:22:08,040 --> 00:22:11,680
There's no end-to-end encryption, my friends, because the carriers have to be able to intercept

380
00:22:11,680 --> 00:22:12,680
that.

381
00:22:12,680 --> 00:22:15,140
And of course, they're happy to take a government search warrant as well.

382
00:22:15,140 --> 00:22:19,000
And you never know how the carriers will implement any of this because if MMS and SMS are to

383
00:22:19,000 --> 00:22:21,440
teach us anything, it's horrible hacks.

384
00:22:21,440 --> 00:22:25,520
And if you've ever worked in a data center where there is a system that is bringing SMS

385
00:22:25,520 --> 00:22:29,840
messages from one carrier to another carrier, you know exactly what I'm talking about.

386
00:22:29,840 --> 00:22:31,400
You know how bad this is.

387
00:22:31,400 --> 00:22:33,420
And the carriers cannot be trusted with this.

388
00:22:33,420 --> 00:22:35,720
They have never even fixed the existing systems.

389
00:22:35,720 --> 00:22:41,240
And the idea that because Google has iMessage envy, they're willing to subject their users

390
00:22:41,240 --> 00:22:45,720
to yet another round of messaging hell, I think tells us everything we need to know

391
00:22:45,720 --> 00:22:48,720
about Google's capability to deliver on this product.

392
00:22:48,720 --> 00:22:52,600
This is clearly a problem they're not capable of solving in a way that is user-friendly.

393
00:22:52,600 --> 00:22:56,260
RCS on its face seems like a good idea.

394
00:22:56,260 --> 00:23:02,600
But the issue comes down to every single carrier in the entire world has to get the implementation

395
00:23:02,600 --> 00:23:03,600
right.

396
00:23:03,600 --> 00:23:09,560
And you have to hope that these carriers in some countries won't arbitrarily block when

397
00:23:09,560 --> 00:23:13,300
the Russian government or the Iranian government comes knocking and says this person is no

398
00:23:13,300 --> 00:23:14,860
longer allowed to communicate.

399
00:23:14,860 --> 00:23:17,340
Because carriers, they never do that kind of thing.

400
00:23:17,340 --> 00:23:22,120
I think what really kind of has me riled up about this is they had this problem solved

401
00:23:22,120 --> 00:23:23,320
with Google Talk.

402
00:23:23,320 --> 00:23:28,040
They had this problem solved before any other messaging application was successful.

403
00:23:28,040 --> 00:23:33,580
Before Telegram, before Viber, before WhatsApp, before iMessage, there was Google Talk.

404
00:23:33,580 --> 00:23:38,880
And it was based on XMPP, which, by the way, works great on mobile now.

405
00:23:38,880 --> 00:23:40,960
They could have integrated that into everything.

406
00:23:40,960 --> 00:23:43,540
It was already integrated into Gmail.

407
00:23:43,540 --> 00:23:45,140
They could have integrated into Google Docs.

408
00:23:45,140 --> 00:23:47,920
They could have put Google Talk everywhere.

409
00:23:47,920 --> 00:23:48,920
And they could have owned it.

410
00:23:48,920 --> 00:23:49,920
It was great.

411
00:23:49,920 --> 00:23:50,920
I was on it.

412
00:23:50,920 --> 00:23:52,040
A lot of people were on it.

413
00:23:52,040 --> 00:23:54,440
They blew it because they couldn't control it.

414
00:23:54,440 --> 00:23:58,440
And since then, they have subjected their user base to different arbitrary messaging

415
00:23:58,440 --> 00:24:01,560
platforms almost every other Android release.

416
00:24:01,560 --> 00:24:06,200
And now, they're going to subject us to more carrier whims just like we have with the Android

417
00:24:06,200 --> 00:24:07,200
releases themselves.

418
00:24:07,200 --> 00:24:08,200
Well, exactly.

419
00:24:08,200 --> 00:24:14,040
Who in their right mind would embrace this at this point, once it becomes a standard

420
00:24:14,040 --> 00:24:17,960
or once it becomes more common on Android devices?

421
00:24:17,960 --> 00:24:21,880
You'd be a fool, like you would have been a fool to embrace Allo and get all your friends

422
00:24:21,880 --> 00:24:22,880
chatting on that.

423
00:24:22,880 --> 00:24:27,580
I mean, the bottom line is that Google have consistently failed with messaging.

424
00:24:27,580 --> 00:24:31,320
And they've consistently shown that when they are failing with a product, they will just

425
00:24:31,320 --> 00:24:33,840
can it in an instant almost.

426
00:24:33,840 --> 00:24:36,280
Google Reader is the one that everyone always talks about.

427
00:24:36,280 --> 00:24:40,900
But believe me, there have been so many more that have affected me personally.

428
00:24:40,900 --> 00:24:44,640
And it just comes down to fool me once, shame on you and all that.

429
00:24:44,640 --> 00:24:52,220
You cannot expect to invest too much in any new Google product or service.

430
00:24:52,220 --> 00:24:56,860
And they should have, well, maybe, as you say, stuck with Google Talk.

431
00:24:56,860 --> 00:24:58,520
Or maybe they should just give up.

432
00:24:58,520 --> 00:25:02,520
And I mean, this kind of is them giving up, isn't it, because it's them giving up on having

433
00:25:02,520 --> 00:25:06,240
their own standalone application that they're completely in control of.

434
00:25:06,240 --> 00:25:12,600
And they are transferring this control over to the carriers and want to work with them.

435
00:25:12,600 --> 00:25:17,480
But ultimately, this is just them throwing in the towel, it looks like.

436
00:25:17,480 --> 00:25:21,640
I know some people listening are going to get upset that I'm sort of crapping on RCS

437
00:25:21,640 --> 00:25:22,640
a bit.

438
00:25:22,640 --> 00:25:27,480
And I agree, in an ideal setup where it gets implemented well and it gets wide adoption

439
00:25:27,480 --> 00:25:34,400
on iPhone and Sailfish OS and Ubuntu Touch, then, OK, RCS is something I'm willing to

440
00:25:34,400 --> 00:25:35,400
talk about.

441
00:25:35,400 --> 00:25:39,260
But in the meantime, I'm starting to think this is something the platform vendors like

442
00:25:39,260 --> 00:25:44,800
Google and Apple and the carriers just shouldn't be involved in and let somebody else run the

443
00:25:44,800 --> 00:25:45,800
messaging.

444
00:25:45,800 --> 00:25:49,320
And it could be cross-platform, like Telegram, like WhatsApp, like everything that has a

445
00:25:49,320 --> 00:25:51,060
large user base.

446
00:25:51,060 --> 00:25:54,480
Maybe we'll see adoption in the iPhone for RCS.

447
00:25:54,480 --> 00:25:58,840
Everything tells me it's going to be slow coming, though, because iMessage already solves

448
00:25:58,840 --> 00:26:02,280
this problem for Apple's users, and that tends to be all they need.

449
00:26:02,280 --> 00:26:05,640
And if you look at the situation for Android users, it's poor.

450
00:26:05,640 --> 00:26:11,340
Oftentimes the default SMS app has been perverted in some way by the manufacturer, sometimes

451
00:26:11,340 --> 00:26:12,900
completely replaced.

452
00:26:12,900 --> 00:26:16,840
You go into the Play Store, you start looking for alternatives, you come across Google Voice,

453
00:26:16,840 --> 00:26:18,920
that sends you down a rabbit hole that's hell.

454
00:26:18,920 --> 00:26:22,540
You end up trying to text with people that doesn't support MMS, so you go back to another

455
00:26:22,540 --> 00:26:24,280
text messaging application.

456
00:26:24,280 --> 00:26:28,560
You find Hangouts, except for Hangouts is dropping SMS support, so then you go to Allo,

457
00:26:28,560 --> 00:26:30,580
and now Allo's being ended.

458
00:26:30,580 --> 00:26:34,940
So it's a really bad situation for Google's users, and it's shameful that they haven't

459
00:26:34,940 --> 00:26:36,040
solved this already.

460
00:26:36,040 --> 00:26:41,080
And they had it completely solved, in my opinion, with Google Talk, but I digress.

461
00:26:41,080 --> 00:26:43,680
It's really just a sad state of affairs.

462
00:26:43,680 --> 00:26:45,760
Maybe we'll see RCS adoption, but I'm doubtful.

463
00:26:45,760 --> 00:26:47,280
Well, you never know.

464
00:26:47,280 --> 00:26:50,680
Well, a quick catch-up then about GNOME Shell and this memory leak.

465
00:26:50,680 --> 00:26:56,160
It has now been fixed, and with the imminent release of Ubuntu 18.04, Will Cook has put

466
00:26:56,160 --> 00:27:00,300
a shout-out for people to get testing these fixes.

467
00:27:00,300 --> 00:27:05,080
And there's even talk that it might get backported into the previous version of GNOME as well.

468
00:27:05,080 --> 00:27:11,760
So it seems that the big fuss that was brought up has actually worked, and this has been

469
00:27:11,760 --> 00:27:12,760
fixed.

470
00:27:12,760 --> 00:27:15,040
So maybe you can switch back to it on your OBS machine, eh?

471
00:27:15,040 --> 00:27:18,760
I am definitely excited to give it a go, and I do hope they backport it.

472
00:27:18,760 --> 00:27:22,360
I guess a lot of people would say, eh, memory leak isn't fair, although that's what all

473
00:27:22,360 --> 00:27:23,680
the headlines are.

474
00:27:23,680 --> 00:27:26,800
But it's more like a misalignment between memory systems.

475
00:27:26,800 --> 00:27:31,480
There is a fantastic post that I will have in the show notes, linuxactionnews.com slash

476
00:27:31,480 --> 00:27:32,480
50.

477
00:27:32,480 --> 00:27:34,360
I think it'll be the last link that breaks it down.

478
00:27:34,360 --> 00:27:38,280
If you want to read the whole thing, it's fascinating to see all these different camps

479
00:27:38,280 --> 00:27:39,660
come together.

480
00:27:39,660 --> 00:27:42,540
So the author of the post I have linked is from Endless.

481
00:27:42,540 --> 00:27:47,120
Of course, there was also some really great input from a developer at Red Hat and from

482
00:27:47,120 --> 00:27:52,260
a developer at Canonical as well as a bunch of community members that contributed to solving

483
00:27:52,260 --> 00:27:53,880
what everybody just said was a memory leak.

484
00:27:53,880 --> 00:27:57,640
And it kind of looked like one, because you could trigger it very easily.

485
00:27:57,640 --> 00:28:01,520
If you just hit the super key and got the GNOME overview and you just kept hitting that

486
00:28:01,520 --> 00:28:07,880
sucker, you would actually cause your memory usage to continually climb, which looks like

487
00:28:07,880 --> 00:28:11,360
a classic memory leak, and that's why it's been termed that everywhere.

488
00:28:11,360 --> 00:28:14,920
But that's not actually what's going on.

489
00:28:14,920 --> 00:28:19,000
As you probably know, GNOME 3 is based heavily on JavaScript and the extensions are based

490
00:28:19,000 --> 00:28:20,200
on JavaScript.

491
00:28:20,200 --> 00:28:24,360
And traditionally, JavaScript objects track who they own in memory.

492
00:28:24,360 --> 00:28:28,600
So when the garbage collector to clean up the memory is launched, it checks that and

493
00:28:28,600 --> 00:28:31,760
it finds all the dependent objects, cleans them up.

494
00:28:31,760 --> 00:28:32,880
Easy peasy.

495
00:28:32,880 --> 00:28:34,720
But here's the problem.

496
00:28:34,720 --> 00:28:37,120
That doesn't work for C objects.

497
00:28:37,120 --> 00:28:39,360
C objects don't track who owns them.

498
00:28:39,360 --> 00:28:43,480
Instead, they only track how many owners they have.

499
00:28:43,480 --> 00:28:47,480
That's the traditional reference counting mechanism, and it works fine in C land because

500
00:28:47,480 --> 00:28:49,680
C is not garbage collected.

501
00:28:49,680 --> 00:28:54,680
To the garbage collector, however, the C objects look all disjointed, disconnected, like they

502
00:28:54,680 --> 00:28:57,680
have no dependencies, like they all are on their own little island.

503
00:28:57,680 --> 00:29:01,500
So it doesn't go clean them all up because it doesn't know the order of operation.

504
00:29:01,500 --> 00:29:07,300
It just goes, destroys the root one, and would leave all of these other objects in memory.

505
00:29:07,300 --> 00:29:11,720
So while it wasn't necessarily a memory leak, things weren't getting cleaned up properly.

506
00:29:11,720 --> 00:29:15,800
And there's different ways to address this, like you can schedule a garbage cleanup, and

507
00:29:15,800 --> 00:29:18,760
you can do different approaches to take care of this.

508
00:29:18,760 --> 00:29:23,580
But the biggest offender to the memory leak was really these objects piling up to be garbage

509
00:29:23,580 --> 00:29:28,400
collected, and then these child objects that would get completely ignored by the garbage

510
00:29:28,400 --> 00:29:29,400
collector.

511
00:29:29,400 --> 00:29:32,680
So more of a misbehavior than it is a leak.

512
00:29:32,680 --> 00:29:36,600
And now what they've done is they've queued garbage collection every time an object is

513
00:29:36,600 --> 00:29:38,400
marked for destruction.

514
00:29:38,400 --> 00:29:43,760
What that means is they've scheduled garbage collection to go in as part of the main loop

515
00:29:43,760 --> 00:29:45,040
whenever it's idle.

516
00:29:45,040 --> 00:29:47,320
So there's an idle callback that happens.

517
00:29:47,320 --> 00:29:49,640
And when that idles, that means there's nothing really going on.

518
00:29:49,640 --> 00:29:51,440
The main thread's not doing anything.

519
00:29:51,440 --> 00:29:53,340
So hey, anybody have some idle work for me?

520
00:29:53,340 --> 00:29:54,400
It checks in.

521
00:29:54,400 --> 00:29:58,900
When that happens, the garbage collector will be executed, and it will go through and do

522
00:29:58,900 --> 00:30:02,240
a whole bunch of scheduled cleanup and take care of that stuff.

523
00:30:02,240 --> 00:30:03,640
So it should stay on top of it.

524
00:30:03,640 --> 00:30:05,620
Now the early results look good.

525
00:30:05,620 --> 00:30:09,560
It seems like this is working, and it's keeping memory usage down.

526
00:30:09,560 --> 00:30:11,680
There could be some performance overhead.

527
00:30:11,680 --> 00:30:14,280
There could be some secondary results from this.

528
00:30:14,280 --> 00:30:18,160
So a lot of different projects have been calling for testing this week, especially, as Joe

529
00:30:18,160 --> 00:30:23,440
just mentioned, 1804 is just around the corner, which is really a showcase for Gnome.

530
00:30:23,440 --> 00:30:28,000
But it's great just to see folks from Red Hat contributing, of course, Canonicals, Daniel

531
00:30:28,000 --> 00:30:29,560
Van Vought, I think.

532
00:30:29,560 --> 00:30:31,000
I can't remember his last name.

533
00:30:31,000 --> 00:30:34,340
He was also helping test some of the deep issues in the mutter.

534
00:30:34,340 --> 00:30:36,520
He's continuing to work there as well.

535
00:30:36,520 --> 00:30:41,440
It's just a really great sort of cross-project collaboration that came together.

536
00:30:41,440 --> 00:30:45,160
Some people provided great stats and memory usage information.

537
00:30:45,160 --> 00:30:46,640
Other people provided code.

538
00:30:46,640 --> 00:30:49,800
Lots of people provided additional information on the bug reports.

539
00:30:49,800 --> 00:30:53,920
It took a few weeks, but they really got somewhere that shows some considerable progress.

540
00:30:53,920 --> 00:30:57,980
And they've made other improvements that should actually make Gnome Shell smoother, unrelated

541
00:30:57,980 --> 00:30:59,600
to this memory misbehavior.

542
00:30:59,600 --> 00:31:03,220
Yeah, it's great to see so many different people and organizations coming together to

543
00:31:03,220 --> 00:31:04,220
fix this.

544
00:31:04,220 --> 00:31:06,560
But it does need to be tested.

545
00:31:06,560 --> 00:31:12,120
And so if you are a Gnome user, especially if you're running the Ubuntu 1804 dailies,

546
00:31:12,120 --> 00:31:16,740
then you can go out and get the devs and get these fixes installed and get it tested and

547
00:31:16,740 --> 00:31:18,000
report any problems that you have.

548
00:31:18,000 --> 00:31:22,120
Yeah, and of course, we'll be covering the 1804 release as well as all of the news next

549
00:31:22,120 --> 00:31:26,160
week and a brief report from my adventures at Linux Fest Northwest.

550
00:31:26,160 --> 00:31:30,960
So go to linuxactionnews.com slash subscribe for all the ways to get new episodes every

551
00:31:30,960 --> 00:31:31,960
single week.

552
00:31:31,960 --> 00:31:35,400
And go to linuxactionnews.com slash contact to get in touch with us.

553
00:31:35,400 --> 00:31:39,160
And you can support the entire network, our future projects, our current projects and

554
00:31:39,160 --> 00:31:42,160
more at patreon.com slash jupitersignal.

555
00:31:42,160 --> 00:31:45,940
We'll be back next Monday with our weekly take on the latest Linux and open source news.

556
00:31:45,940 --> 00:31:47,580
I'm at Chris LAS.

557
00:31:47,580 --> 00:31:49,040
I'm at Joe Rissington.

558
00:31:49,040 --> 00:31:51,680
Thank you for joining us and we'll see you next week.

559
00:31:51,680 --> 00:32:08,000
Until then, have a great day, and we'll see you later.

