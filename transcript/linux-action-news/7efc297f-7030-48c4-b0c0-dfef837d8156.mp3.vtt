WEBVTT

00:00.000 --> 00:16.400
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.400 --> 00:21.240
This is episode 62, recorded on July 15, 2018.

00:21.240 --> 00:22.240
I'm Chris.

00:22.240 --> 00:23.240
And I'm Joe.

00:23.240 --> 00:24.240
Hello, Joe.

00:24.240 --> 00:28.160
We kick things off this week with Arch's turn in the barrel.

00:28.160 --> 00:32.800
It appears there was malware found in the Arch user repository.

00:32.800 --> 00:34.080
Not a huge surprise, really.

00:34.080 --> 00:37.960
Well, actually, the surprise is that it's taken this long for malware to appear in the

00:37.960 --> 00:41.460
AUR because anyone can upload software there.

00:41.460 --> 00:45.000
So you would assume that people would have tried this before.

00:45.000 --> 00:49.180
Yeah, you know, I wouldn't be surprised if there has been stuff in the past that maybe

00:49.180 --> 00:52.120
just didn't get attention like things do now.

00:52.120 --> 00:56.800
Also though, I do recall from my days of installing Arch that when you get to that point of installing

00:56.800 --> 01:01.720
software from the AUR, they're pretty careful about walking you through how to build a package

01:01.720 --> 01:03.560
from the AUR by hand.

01:03.560 --> 01:07.560
So that way, you know how package builds work and you kind of know what to look out for.

01:07.560 --> 01:11.720
So there may be a little more baked in vigilance in the user base of the AUR, possibly.

01:11.720 --> 01:17.320
Yeah, but that assumes that people actually read the manual and pay attention to it.

01:17.320 --> 01:21.560
Surely, most people just go through that once and then just, ah, it's fine.

01:21.560 --> 01:22.560
I'll just trust it.

01:22.560 --> 01:25.800
If there's a problem, there'll be a Reddit thread about it or something.

01:25.800 --> 01:28.000
Okay, there's a little bit of that.

01:28.000 --> 01:29.000
Yeah.

01:29.000 --> 01:31.520
Plus there's also when you go to the AUR website, there's a comment section.

01:31.520 --> 01:33.400
So you know, you always give that a scan too.

01:33.400 --> 01:36.840
If anybody's in there shouting malware, you know, you move on.

01:36.840 --> 01:41.040
But this obviously ties in with the recent stories about the Snap Store with the Crypto

01:41.040 --> 01:42.800
Miner and Docker Hub as well.

01:42.800 --> 01:44.560
Again, that was crypto mining.

01:44.560 --> 01:47.920
This time it wasn't crypto mining, though, although it may have been laying the groundwork

01:47.920 --> 01:48.920
for it.

01:48.920 --> 01:51.200
It was just really a hardware survey, wasn't it?

01:51.200 --> 01:56.160
A little bit like what Ubuntu have done, only without telling people this time.

01:56.160 --> 01:59.600
Yeah, without the permission or the anonymity.

01:59.600 --> 02:01.320
So there's those aspects to it.

02:01.320 --> 02:06.520
But it is kind of funny to see that it just wanted machine ID, the output of uname-a,

02:06.520 --> 02:12.040
your CPU information, output from the Pacman database of installed packages, and then the

02:12.040 --> 02:16.320
systemctl list systemd units to figure out what you're running by default.

02:16.320 --> 02:18.240
And that's all it wanted.

02:18.240 --> 02:19.240
No big deal.

02:19.240 --> 02:20.240
Send that up to a pastebin file.

02:20.240 --> 02:21.240
That's it.

02:21.240 --> 02:22.240
No big deal.

02:22.240 --> 02:26.640
Yeah, but that was probably to ascertain what the best method to get crypto mining software

02:26.640 --> 02:28.720
on people's machines was.

02:28.720 --> 02:32.480
Oh, no, no, no, Joe, you completely misunderstand.

02:32.480 --> 02:36.720
This was simply designed to give these users the best experience possible the next time

02:36.720 --> 02:38.720
they install something from the AUR.

02:38.720 --> 02:39.720
That's all.

02:39.720 --> 02:44.280
But just for a little bit of the details here, Zactor appears to be the username of the AUR

02:44.280 --> 02:46.780
who modified a package on June 7th.

02:46.780 --> 02:52.720
The package, AcroRead, hmm, I wonder what that could be, was changed to run this script

02:52.720 --> 02:57.520
and it set up a systemd unit to start itself up and do the collection in the background

02:57.520 --> 03:00.160
for you automatically for your convenience.

03:00.160 --> 03:04.760
But obviously that script that it's calling can be changed on the remote server at any

03:04.760 --> 03:06.920
time to do whatever he wants it to do.

03:06.920 --> 03:11.000
So yeah, clearly crypto mining was the plan here, I think.

03:11.000 --> 03:15.480
But it does beg the question, what can we do about this long term?

03:15.480 --> 03:22.600
If we're moving to this system of repositories that anyone can upload to or that are certainly

03:22.600 --> 03:28.200
less curated than they traditionally have been with the repos, we need to put some safeguards

03:28.200 --> 03:29.760
in place, don't we?

03:29.760 --> 03:34.360
Or is it just the Wild West, like we have with Windows, or we have had it with Windows

03:34.360 --> 03:38.840
in the past where it's just random executables downloaded from websites?

03:38.840 --> 03:44.280
I don't know if they're comparable, like for example, snaps have confinement in most cases.

03:44.280 --> 03:48.400
So this script wouldn't have been able to get to the system information because it wouldn't

03:48.400 --> 03:50.480
have had access to that information.

03:50.480 --> 03:55.000
So they may not be one to one comparable here, just like a Docker container only has access

03:55.000 --> 03:56.480
to the things that are within a container.

03:56.480 --> 04:01.960
So you can put malware in a container, but it doesn't get on the system unless there's

04:01.960 --> 04:04.320
other exploits which it can chain on top of.

04:04.320 --> 04:09.720
So in this particular case, it is a little more reflective of the earlier model that

04:09.720 --> 04:10.720
the AUR represents.

04:10.720 --> 04:14.760
I mean, it's been around for much longer than anything we just mentioned, Docker Hub or

04:14.760 --> 04:17.420
the Snap Store or Flatpaks and Flat Hub.

04:17.420 --> 04:20.280
It's been around for a very long time now.

04:20.280 --> 04:22.880
And it's always been anyone can contribute.

04:22.880 --> 04:27.140
That's sort of why it's called the Arch User Repository, they try to put it in the name.

04:27.140 --> 04:30.680
And I don't necessarily think it means we need to fix it.

04:30.680 --> 04:35.560
I just think it means that we have to continue education when you start to use any one of

04:35.560 --> 04:36.880
those services.

04:36.880 --> 04:40.240
And each one kind of has to be taken in its own way.

04:40.240 --> 04:43.640
And that's why some people consider it dangerous to install things from the AUR.

04:43.640 --> 04:45.560
I never was one of those people.

04:45.560 --> 04:50.600
But all those people who always said it's dangerous can now point to this and say, hey,

04:50.600 --> 04:52.440
look, I was right.

04:52.440 --> 04:56.680
But I go back to my core point when we talked about Docker Hub and the Snap Store is it's

04:56.680 --> 05:02.980
really up to the users that are installing the software to do the due diligence, to look

05:02.980 --> 05:08.800
into it, and to just do a quick cursory check of basic things like the user account, the

05:08.800 --> 05:14.520
user views, and in the case of the AUR, the package build file, and just do that cursory

05:14.520 --> 05:15.520
work.

05:15.520 --> 05:16.720
It doesn't take very long.

05:16.720 --> 05:20.080
And it is so worth it because you could avoid something like this.

05:20.080 --> 05:21.120
I think they're really worth it.

05:21.120 --> 05:24.760
I think they're very worth it because they make software and free software in particular

05:24.760 --> 05:26.760
more available to more people.

05:26.760 --> 05:29.200
You just have to do that due diligence.

05:29.200 --> 05:34.840
But hang on a second, you said that users need to be more proactive and everything.

05:34.840 --> 05:39.080
But part of the appeal for me of Linux is that I can give it to someone like my mom

05:39.080 --> 05:45.000
and just say, don't install anything other than from the GUI App Store and you'll be

05:45.000 --> 05:46.240
absolutely fine.

05:46.240 --> 05:55.440
But if you start then putting snaps and whatever into that GUI App Store and then trying to

05:55.440 --> 05:59.660
tell people that they are responsible for it, that's where the line gets a bit fuzzy

05:59.660 --> 06:00.660
for me.

06:00.660 --> 06:03.320
I don't know if we're there yet.

06:03.320 --> 06:07.600
Generally speaking, say you look at GNOME software on the Ubuntu desktop, the software

06:07.600 --> 06:11.700
that gets featured there is hand-selected by staff at Canonical.

06:11.700 --> 06:18.640
So there is a human there that is curating that carousel when you're in GNOME software,

06:18.640 --> 06:19.640
for example.

06:19.640 --> 06:25.240
So you give this to mom or a family member and they stick to the stuff that's advertised,

06:25.240 --> 06:27.040
I think they're always going to be OK.

06:27.040 --> 06:28.840
And that might just have to be the solution.

06:28.840 --> 06:33.520
The end users, what they get is sort of a more curated experience.

06:33.520 --> 06:37.120
But if you're going to the AUR, you're beyond the end user phase.

06:37.120 --> 06:41.360
And then I think that's where you can say, all right, there's a little more onus on you

06:41.360 --> 06:42.360
now.

06:42.360 --> 06:45.600
You're opting to go to this more advanced, just like if you're using Docker Hub.

06:45.600 --> 06:47.520
You're beyond the end user stage.

06:47.520 --> 06:53.640
And so now, just like when you become an advanced car driver or a pilot or whatever, when you

06:53.640 --> 06:56.920
advance something like that, there's more responsibilities you take on.

06:56.920 --> 06:57.920
That's just how it works.

06:57.920 --> 07:01.880
Yeah, and you say if you're using the AUR, if you're using Arch, you're beyond the end

07:01.880 --> 07:02.880
user at that point.

07:02.880 --> 07:03.880
And Hergros!

07:03.880 --> 07:06.800
Yeah, I suppose, or Manjaro maybe.

07:06.800 --> 07:11.680
But even then, if you're beyond, you know, maybe I shouldn't say this, but if you're

07:11.680 --> 07:18.560
beyond sort of Ubuntu, Fedora even, then you're kind of getting into the enthusiast side of

07:18.560 --> 07:23.160
things and then you kind of should be responsible for what you're installing, I suppose.

07:23.160 --> 07:27.760
Well, something that end users won't be touching but machines will be deploying is this

07:27.760 --> 07:30.720
new minimal Ubuntu that was released this week.

07:30.720 --> 07:32.920
Yeah, another minimal Ubuntu.

07:32.920 --> 07:37.200
I think there are two or three of them, so that's a bit confusing.

07:37.200 --> 07:41.200
But this is an image that is designed to be run in the cloud, isn't it?

07:41.200 --> 07:45.960
Designed to be spun up hundreds at a time by orchestration software.

07:45.960 --> 07:52.440
And the whole point of it is to be slim, boot fast, but be Ubuntu underneath and have Snap

07:52.440 --> 07:56.400
and Apt and you can build whatever system you want on top of it.

07:56.400 --> 07:58.680
So it's kind of the best of both worlds.

07:58.680 --> 08:03.240
And it's kind of an attempt to compete with the likes of Alpine Linux, isn't it?

08:03.240 --> 08:06.800
Yeah, and that's why I'm glad we finally are seeing this.

08:06.800 --> 08:12.580
Maybe even I'd say a little late, because it's exactly where Ubuntu needed to be about

08:12.580 --> 08:13.580
a year ago.

08:13.580 --> 08:16.560
So that way they could be really as part of where Alpine's at now.

08:16.560 --> 08:19.640
However, they're still in a really strong position, so I wouldn't say it's too little

08:19.640 --> 08:20.640
too late.

08:20.640 --> 08:22.700
In fact, the results may have been worth the wait.

08:22.700 --> 08:27.580
For the Docker Hub image, it's a 29 megabyte image.

08:27.580 --> 08:30.840
That's remarkable, because you're really not missing out on anything.

08:30.840 --> 08:35.840
You could apt-get install htop if you wanted to and have a much better process fewer.

08:35.840 --> 08:38.040
Like it's real Ubuntu.

08:38.040 --> 08:43.300
And that kind of goes to what I've been noticing about Ubuntu on a wider scale is they're not

08:43.300 --> 08:47.680
going through these thousands of different product differentiating categories.

08:47.680 --> 08:51.300
Like I'm starting to lose track right now over at the Red Hat camp.

08:51.300 --> 08:56.400
You've got Red Hat, you've got CentOS, you've got Fedora Atomic, but now we've also got

08:56.400 --> 08:59.520
Fedora Core OS, which isn't a big transition.

08:59.520 --> 09:02.680
And then out there kind of outside all of this, you have Scientific Linux.

09:02.680 --> 09:07.680
Like it's nebulous to me exactly what's going on, while at the meantime, I'm also using

09:07.680 --> 09:11.760
Fedora Cloud and Fedora Server, and I don't know where that's going.

09:11.760 --> 09:16.120
And then over on the OpenSUSE camp, it's really a mess in the SUSE area when you want to get

09:16.120 --> 09:19.160
into Kubernetes or containerization or OpenStack.

09:19.160 --> 09:22.400
There's different vertical stacks of SUSE for each one of those solutions.

09:22.400 --> 09:26.400
Then you've got OpenSUSE, you've got multiple iterations of that, two of them, plus main

09:26.400 --> 09:32.360
SUSE has two iterations, SUSE Enterprise for the desktop and SUSE Enterprise for the server.

09:32.360 --> 09:33.620
It's mind-blowing.

09:33.620 --> 09:38.440
But when you get to Ubuntu, there is one Ubuntu 18.04.

09:38.440 --> 09:42.800
Now there's a mini version of it called Minimal, and there's the version you can install on

09:42.800 --> 09:47.460
your desktop, and there's the version you can deploy on a VPS or on physical hardware.

09:47.460 --> 09:49.820
It's all the same version.

09:49.820 --> 09:51.340
It's all the same operating system.

09:51.340 --> 09:55.640
There's one Ubuntu 18.04, just like there's one Ubuntu 16.04.

09:55.640 --> 10:00.880
It's much easier to understand, and it feels like these other distros that have these different

10:00.880 --> 10:05.920
vertical slices, these differentiators are really just a sell into different markets,

10:05.920 --> 10:07.380
and it just adds confusion.

10:07.380 --> 10:10.080
It feels like a model from the 90s that Microsoft created.

10:10.080 --> 10:15.480
Well, Ubuntu was always about Linux for human beings, and that philosophy seems to have

10:15.480 --> 10:18.500
continued into their cloud offerings, doesn't it?

10:18.500 --> 10:21.820
Just keep it as simple as possible and just have one Ubuntu.

10:21.820 --> 10:27.080
I suppose it gets a little more complicated with Ubuntu core, but certainly with stuff

10:27.080 --> 10:32.540
like this, you could take this minimal image that is supposed to be competing with the

10:32.540 --> 10:37.240
likes of Alpine, and you could, in theory, install a full Ubuntu desktop on top of it,

10:37.240 --> 10:40.800
and it wouldn't be much different from what you can download as an ISO.

10:40.800 --> 10:44.960
I was joking with Will about that on Late Night Linux, and he said, don't do that.

10:44.960 --> 10:46.160
I'm almost tempted to do it.

10:46.160 --> 10:50.120
I still haven't got around to it, but the point remains, doesn't it, that you just have

10:50.120 --> 10:54.600
one Ubuntu, and that seems to be a very strong strategy.

10:54.600 --> 10:59.700
Yeah, and so these images are 50% the size of the standard Ubuntu server image, and they

10:59.700 --> 11:03.700
boot 40% faster, and I know people will write in, and they will say, well, how much faster

11:03.700 --> 11:04.880
does it need to boot, guys?

11:04.880 --> 11:08.600
At this point, it's pretty quick, but it was made really clear to me when I was having

11:08.600 --> 11:13.540
a conversation with someone who works inside AWS, and he was talking about how they're

11:13.540 --> 11:18.560
trying to shave down seconds off of spinning up thousands of instance at once.

11:18.560 --> 11:25.520
They'll turn on 1,000 Ubuntu servers at once, and that boot up time makes a huge difference,

11:25.520 --> 11:31.280
and if you do analysis of some postmortems from Netflix outages, the boot time of their

11:31.280 --> 11:36.880
Linux servers, because it's thousands that have to wait and boot, really stacks up, and

11:36.880 --> 11:41.940
it creates this massive outage window where they've had to engineer around this problem,

11:41.940 --> 11:46.800
and so if Canonical can shave that boot time off the top, like just by default, when you

11:46.800 --> 11:50.580
use this image, you're going to get a 40% faster boot.

11:50.580 --> 11:55.200
That makes real-world differences to companies like Netflix and others that have infrastructure

11:55.200 --> 11:56.640
on virtual systems.

11:56.640 --> 12:00.400
But you do have to wonder, by the time you've built the other stuff that you need on top

12:00.400 --> 12:04.480
of this image, whether you're going to still have that 40% saving.

12:04.480 --> 12:06.680
I think it really depends on the workload, doesn't it?

12:06.680 --> 12:09.100
Yeah, and it also depends on how you're using this.

12:09.100 --> 12:13.160
These could be images that are inside containers, so they're sitting on a, you know, who knows

12:13.160 --> 12:17.360
what base system, but these containers themselves can fire up faster when needed to respond

12:17.360 --> 12:18.580
to customer demand.

12:18.580 --> 12:19.660
That matters, too.

12:19.660 --> 12:23.720
And you can build really specific systems, like think serverless.

12:23.720 --> 12:26.040
You hear things like AWS Lambda tossed around.

12:26.040 --> 12:27.940
It's a big hype right now.

12:27.940 --> 12:31.520
In fact, we've done some experiments with just doing different things on the back end,

12:31.520 --> 12:33.400
just spinning up a serverless infrastructure.

12:33.400 --> 12:38.300
A week ago, I think it was, we talked about Rattlesnake OS, how they're building their

12:38.300 --> 12:42.320
self-updating infrastructure around serverless on AWS Lambda.

12:42.320 --> 12:46.800
Well, serverless is really just a way for you to execute a function, get a result back,

12:46.800 --> 12:47.980
and move on.

12:47.980 --> 12:53.120
And that's all powered by Linux systems on the back end spinning up instantly, creating

12:53.120 --> 12:57.680
an environment for your code, executing it, delivering you the result, and then destroying

12:57.680 --> 12:58.680
themselves.

12:58.680 --> 12:59.760
That's all serverless is.

12:59.760 --> 13:03.000
And the faster you can spin those up, the more requests you can take, and obviously

13:03.000 --> 13:04.560
the more margins you make.

13:04.560 --> 13:06.360
But then you go back to the Alpine issue.

13:06.360 --> 13:09.440
Is this too late from Ubuntu and Canonical?

13:09.440 --> 13:12.280
Have they already lost out to Alpine in this space?

13:12.280 --> 13:15.520
Yeah, I think that is the big question that we just won't know.

13:15.520 --> 13:16.960
We'll have to wait and see.

13:16.960 --> 13:19.200
They have an ecosystem.

13:19.200 --> 13:24.160
Developers seem to enjoy using Ubuntu on the desktop, laptop, and then on the server

13:24.160 --> 13:25.360
and cloud.

13:25.360 --> 13:30.200
So that may translate to adoption of Ubuntu Minimal for containers and for other deployments.

13:30.200 --> 13:35.480
So maybe that momentum will carry this, but Alpine has quite a bit of momentum now as

13:35.480 --> 13:36.480
well.

13:36.480 --> 13:38.080
I think it's kind of up in the air.

13:38.080 --> 13:44.800
Yeah, I think that that is a big part of it, having the same system on your laptop as that's

13:44.800 --> 13:46.440
running in your container.

13:46.440 --> 13:52.460
Just that familiarity with how everything works and the little differences between distros,

13:52.460 --> 13:56.600
it makes it more attractive to me to stick with Ubuntu in the cloud.

13:56.600 --> 14:00.120
So maybe this is enough for them, but I suppose we'll have to see.

14:00.120 --> 14:05.720
But as we know, the cloud all runs on Python these days, and there's been a big shift over

14:05.720 --> 14:07.280
at the project.

14:07.280 --> 14:12.360
Its benevolent dictator for life has decided to step down.

14:12.360 --> 14:16.280
Yeah, Guido van Rossum has had enough after all these years.

14:16.280 --> 14:20.400
He's decided that he's going to remain a developer for the time being, but he's had enough of

14:20.400 --> 14:21.920
being the leader.

14:21.920 --> 14:26.200
Too much politics going on, and he's stepping down, and he's not naming a successor either.

14:26.200 --> 14:28.840
He's just kind of saying, up to you guys, do what you want.

14:28.840 --> 14:31.760
Yeah, that's actually literally what he's saying in his announcement on the mailing

14:31.760 --> 14:32.760
list.

14:32.760 --> 14:33.760
It's, you're on your own now.

14:33.760 --> 14:35.400
Have at it.

14:35.400 --> 14:40.680
This is really after what was a hell of a process to bring a new feature into Python

14:40.680 --> 14:43.340
that was rather controversial.

14:43.340 --> 14:49.000
And as all community discussions go, it got a little heated, especially these days, and

14:49.000 --> 14:51.520
it's called the PEP572 mess.

14:51.520 --> 14:57.680
You may have seen this go by, especially if you're an LWN subscriber or if you attended

14:57.680 --> 15:05.520
Python Language Summit 2018 this year, where it was a significant topic of conversation.

15:05.520 --> 15:10.840
The basic idea behind this PEP feature was a way to do assignments and expressions, which

15:10.840 --> 15:13.480
makes writing some code constructs easier.

15:13.480 --> 15:20.140
C has this, so does Go, but there was a lot of debate on if this feature needed to even

15:20.140 --> 15:21.600
be in Python.

15:21.600 --> 15:25.400
You know, there was a common feeling that we've been around for 28 years and we haven't

15:25.400 --> 15:26.400
needed this feature.

15:26.400 --> 15:30.480
There was also different camps on how the syntax should be implemented, some really

15:30.480 --> 15:32.700
strong opinions on syntax.

15:32.700 --> 15:34.720
Everybody really had an opinion on syntax.

15:34.720 --> 15:37.860
And it may have gotten in the development channel a little earlier than it should have,

15:37.860 --> 15:44.100
which upset some people, and it all led to a very voiceless conversation that at the

15:44.100 --> 15:49.240
end of it appears to have left their benevolent dictator feeling like he needs a very long

15:49.240 --> 15:50.240
vacation.

15:50.240 --> 15:52.680
Do you think it's a knee-jerk reaction from him?

15:52.680 --> 15:58.520
I know this dragged on for a little bit, but now that it's over with, just him almost mic

15:58.520 --> 16:04.240
dropping at this point, surely after this long he could maybe just take a vacation for

16:04.240 --> 16:10.280
a couple of weeks and then come back, rather than just say he's out and get on with it.

16:10.280 --> 16:12.640
It just seems a little bit strange to me.

16:12.640 --> 16:16.400
Yeah, I almost wonder if he feels like the position isn't necessary anymore.

16:16.400 --> 16:18.680
He writes, I'm not going to appoint a successor.

16:18.680 --> 16:23.440
And then he also writes, so what are you all going to do, create a democracy, anarchy,

16:23.440 --> 16:25.860
a dictatorship, a federation?

16:25.860 --> 16:30.040
He sort of points out that his opinion hasn't been as necessary over the last few years

16:30.040 --> 16:33.680
and that the project has a certain amount of momentum and there's already kind of voting

16:33.680 --> 16:37.160
going on on different things that maybe they can just figure it out.

16:37.160 --> 16:41.560
I don't know, because if it was a total mic drop, he wouldn't then later on offer to mentor

16:41.560 --> 16:44.480
people like he does and say he's going to stick around.

16:44.480 --> 16:49.120
I think in a way he kind of handled it in the best way possible if he's totally done.

16:49.120 --> 16:54.800
He got them through this controversial storm, got them on the other end of this thing, and

16:54.800 --> 16:58.800
then once they're there and things have settled, he's saying, all right, I'm stepping away

16:58.800 --> 16:59.800
now.

16:59.800 --> 17:03.360
Like he could have left in the middle of it when he was probably peak upset, but instead

17:03.360 --> 17:07.280
he waited until he got on the other end of it, things settled a bit, and then said, okay,

17:07.280 --> 17:11.720
I'm leaving, I'll be around, I can do some mentoring, but I'm not the benevolent dictator

17:11.720 --> 17:12.720
anymore.

17:12.720 --> 17:16.280
There's no doubt that he's been responsible with it, but it does still strike me as strange

17:16.280 --> 17:20.480
after all that time, but maybe he was kind of done with it already and this just pushed

17:20.480 --> 17:21.480
him over the edge.

17:21.480 --> 17:24.200
Yeah, I could see that, especially if you have a feeling like your position has been

17:24.200 --> 17:25.640
less and less relevant over the years.

17:25.640 --> 17:28.840
I could see it kind of coming to that, and maybe this is the best way for it to happen.

17:28.840 --> 17:36.200
I'll be watching this with a lot of interest though, because this is a longstanding community

17:36.200 --> 17:41.440
project that has a huge legacy and a lot of importance, and now what are they going to

17:41.440 --> 17:42.440
do?

17:42.440 --> 17:43.440
What are they going to do next?

17:43.440 --> 17:44.440
Do they fall apart?

17:44.440 --> 17:45.440
Do they form into something new?

17:45.440 --> 17:46.720
Do we see massive changes?

17:46.720 --> 17:47.720
Will there be a fork?

17:47.720 --> 17:52.120
Like there could be some really interesting developments over the rest of this year with

17:52.120 --> 17:53.120
Python.

17:53.120 --> 17:59.880
Last,.ting.com, it's smarter than unlimited because you only pay for what you use.

17:59.880 --> 18:01.520
So when you use less, you pay less.

18:01.520 --> 18:05.920
The average Ting bill is just $23 per month per phone.

18:05.920 --> 18:09.200
It's a fair price for however much you talk, text, and data you use.

18:09.200 --> 18:12.920
Ting has nationwide coverage, CDMA, and GSM.

18:12.920 --> 18:16.800
There's no contracts nor the termination fee, so you can try it out and rest assured that

18:16.800 --> 18:19.640
for some reason it doesn't work for you, you're not stuck.

18:19.640 --> 18:20.920
I love that too.

18:20.920 --> 18:24.280
I have MiFi devices that I can turn off if I know I'm not going to be traveling for a

18:24.280 --> 18:25.280
while.

18:25.280 --> 18:29.600
It's a great system because if you don't want to, you never have to talk to a human being.

18:29.600 --> 18:34.200
You can do it all through their really nice control panel, but if you prefer to talk to

18:34.200 --> 18:37.880
a human being or you need to, they have great customer service.

18:37.880 --> 18:41.640
They have support for some of the best phones because they have CDMA and GSM and a ton of

18:41.640 --> 18:44.960
devices that you could probably bring with you, so check their BYOD page.

18:44.960 --> 18:45.960
They have a lot.

18:45.960 --> 18:49.120
And up on their blog right now, I'll point this out, this is really nice.

18:49.120 --> 18:50.540
They have up like a term sheet.

18:50.540 --> 18:54.940
It's not quite as generic as that, but they have up a bunch of different terms and definitions

18:54.940 --> 18:59.120
for fiber optic networking, which has different things in it than traditional networking.

18:59.120 --> 19:01.300
It's just a really handy post.

19:01.300 --> 19:03.520
Start though by going to last.ting.com.

19:03.520 --> 19:07.760
That supports the show and it gets you $25 off a device or if you bring one, it'll give

19:07.760 --> 19:10.080
you $25 in service credit.

19:10.080 --> 19:14.440
And then you just pay for what you use, a fair price for however much you talk, text,

19:14.440 --> 19:15.440
and data you use.

19:15.440 --> 19:16.440
last.ting.com.

19:16.440 --> 19:24.760
Okay, so let's talk about Firefox, specifically for Android.

19:24.760 --> 19:26.240
And is this good news?

19:26.240 --> 19:27.240
Is this bad news?

19:27.240 --> 19:28.240
I don't know.

19:28.240 --> 19:33.520
It's entering a maintenance phase while they rebuild it from scratch on different technologies.

19:33.520 --> 19:37.440
Yeah, the Android components technologies, which is a collection of Android libraries

19:37.440 --> 19:42.060
that can be used to build browser-like applications, which probably means not Gecko.

19:42.060 --> 19:48.280
So one part of me is a little concerned, but the Mozilla development team has been killing

19:48.280 --> 19:49.320
it lately.

19:49.320 --> 19:52.320
Like Firefox has been better than ever.

19:52.320 --> 19:56.400
And so I kind of have faith that they know what they're doing here.

19:56.400 --> 20:01.440
And it's nice that they will still be pushing bug fixes for critical bugs and security fixes

20:01.440 --> 20:03.600
to the version of Firefox that's on Android.

20:03.600 --> 20:06.600
So maintenance does mean security fixes for a bit.

20:06.600 --> 20:10.560
Just no major new features, which is probably great for guys like you, Joe.

20:10.560 --> 20:15.180
Yeah, I don't mind no new features, but most people do.

20:15.180 --> 20:19.240
But what concerns me a little bit about this and makes me think that it might be bad news

20:19.240 --> 20:22.720
is that you're going to have homogenization here.

20:22.720 --> 20:25.760
It's like on iOS, there's a version of Firefox, right?

20:25.760 --> 20:27.520
But it's not based on Gecko.

20:27.520 --> 20:29.300
It's not really Firefox, is it?

20:29.300 --> 20:35.200
It's just Mozilla wrapping their stuff around Apple technologies.

20:35.200 --> 20:37.460
And you've got the same thing here with Android now.

20:37.460 --> 20:43.760
They're going to use, albeit open source stuff from Android, but it's not going to be their

20:43.760 --> 20:44.940
own thing, is it?

20:44.940 --> 20:51.320
It's going to be just their brand stuck on a collection of existing Android technologies.

20:51.320 --> 20:55.480
Maybe that's unfair because it's obviously going to take a lot more work than that sounds,

20:55.480 --> 20:59.520
but it's not going to be as differentiated as it is now.

20:59.520 --> 21:01.860
What doth make the browser you ask?

21:01.860 --> 21:08.200
Is it the experience around the browser like password and bookmark sync and built-in features

21:08.200 --> 21:13.920
like pocket and blocking of certain kinds of ads and tracking and maybe containers in

21:13.920 --> 21:20.240
the future for different accounts, or is it the rendering engine, WebKit versus Gecko?

21:20.240 --> 21:24.840
I would argue that it is not the latter.

21:24.840 --> 21:29.920
I would argue that it is actually the experience around the web browser now, not so much the

21:29.920 --> 21:30.920
actual rendering.

21:30.920 --> 21:31.960
I don't think users care.

21:31.960 --> 21:34.060
I think that's pretty obvious on its face.

21:34.060 --> 21:38.600
And the reality is that when you use the components of the platform, you inherit the additional

21:38.600 --> 21:42.840
benefits of new features that the platform provider creates.

21:42.840 --> 21:48.240
In Apple's case, it's iOS, and in Google's case, it's Android, and they're consistently

21:48.240 --> 21:50.600
making investments in that technology stack.

21:50.600 --> 21:54.760
And also it means that you have to do a lot less testing, don't you?

21:54.760 --> 21:59.360
If you're using the same rendering engine, you know that a website that works on Chrome

21:59.360 --> 22:01.560
is almost certainly going to work on Firefox.

22:01.560 --> 22:06.880
And as you say, then you've got the other added value there with the syncing and stuff.

22:06.880 --> 22:10.240
So I do see the argument, but it just feels a bit sad to me.

22:10.240 --> 22:15.820
It's not like Mozilla haven't got a few quid to spend on this, but I suppose they have

22:15.820 --> 22:21.140
to divert their resources where they're required and where it makes sense to do so.

22:21.140 --> 22:26.160
But it was always nice to have proper Firefox on Android.

22:26.160 --> 22:28.960
And now it feels like we're not going to have that anymore.

22:28.960 --> 22:29.960
I agree.

22:29.960 --> 22:33.800
And it reminds us of the massive dominance that WebKit now has.

22:33.800 --> 22:39.120
Well yeah, Chrome is just default everywhere, seemingly.

22:39.120 --> 22:45.720
On Windows, Edge is just nowhere at this point, and Firefox is just trailing behind.

22:45.720 --> 22:50.840
And even on Linux, how many people who use Linux on their desktop or laptop use Chrome

22:50.840 --> 22:51.840
as their main driver?

22:51.840 --> 22:52.840
Yeah, it's a good portion.

22:52.840 --> 22:57.200
I mean, I think Firefox is still pretty well represented because it's the default still

22:57.200 --> 22:58.460
on a lot of distros.

22:58.460 --> 23:03.660
And I'll just note, too, I'm using WebKit as kind of shorthand for a lot of the WebKit-based

23:03.660 --> 23:06.720
rendering engines like Google's own.

23:06.720 --> 23:08.600
There's sort of a large category.

23:08.600 --> 23:13.320
WebKit itself has kind of become rather fractured in the last five years, but it's still kind

23:13.320 --> 23:15.280
of all the same beast.

23:15.280 --> 23:19.840
And so when we had Trident and Gecko as sort of the last standout rendering engines now,

23:19.840 --> 23:24.440
it seems like as long as Firefox remains relevant on the desktop, Gecko will still have an important

23:24.440 --> 23:25.440
place.

23:25.440 --> 23:28.280
But I think this is just Mozilla being practical here.

23:28.280 --> 23:35.300
It seems that a Gecko-based standalone browser on the Android platform was either unsustainable

23:35.300 --> 23:37.720
or just not popular enough to matter.

23:37.720 --> 23:43.240
And so perhaps they can make this change and see an increase in users as a result, which

23:43.240 --> 23:46.120
will make them a relevant player on the Android platform.

23:46.120 --> 23:47.120
And that's good for everybody.

23:47.120 --> 23:51.200
Well, I really hope so, but I'm not holding my breath, I'm afraid.

23:51.200 --> 23:54.540
This next story stands out personally for me because it's like they ripped the carpet

23:54.540 --> 23:55.540
out from underneath me.

23:55.540 --> 24:02.620
I was about to go on the air Tuesday for Linux Unplug and cover ARM's new Get the Fax campaign

24:02.620 --> 24:07.880
against RISC-V. And right as I was preparing to go on air, I realized they'd pulled the

24:07.880 --> 24:12.320
whole thing down, but it started really as a shot across the bow.

24:12.320 --> 24:14.060
Well, that's one way to look at it.

24:14.060 --> 24:20.440
Another way is a very long-term death rattle maybe from ARM, looking over at what RISC-V

24:20.440 --> 24:28.400
are doing and how that is an open standard and how it may eventually eat ARM's lunch.

24:28.400 --> 24:32.080
It was very misjudged, there's no doubt about that.

24:32.080 --> 24:34.680
And it really played their hand, didn't it?

24:34.680 --> 24:37.240
Talk about not keeping your cards close to your chest.

24:37.240 --> 24:40.680
It was basically them just admitting all the stuff they're worried about, wasn't it?

24:40.680 --> 24:44.800
Yeah, they really try to raise five concerns before you go design your own system on a

24:44.800 --> 24:45.800
chip.

24:45.800 --> 24:51.240
They say that the portions that RISC solve by being open source really only solve a small

24:51.240 --> 24:55.720
part of the overall problem and that when you're investing in a commercial processor,

24:55.720 --> 24:58.840
it's more than just having access to the designs.

24:58.840 --> 25:03.680
And they say RISC-V doesn't yet have a large developer ecosystem like ARM does, so that's

25:03.680 --> 25:05.600
a disadvantage.

25:05.600 --> 25:10.120
And there's risk of fragmentation with something that's open source.

25:10.120 --> 25:15.760
They also point out that it's not very mature yet, at least not as mature as ARM is obviously.

25:15.760 --> 25:20.080
And that there could be some greater design costs with RISC-V due to potential revalidation

25:20.080 --> 25:22.880
if you have to modify the original ISA.

25:22.880 --> 25:28.200
So just avoid the whole thing, ARM says, and stick with ARM because better to the devil

25:28.200 --> 25:30.320
you know than the devil you don't.

25:30.320 --> 25:34.000
Can you imagine Intel coming out with something similar about ARM?

25:34.000 --> 25:36.880
I mean, maybe back in their scrappy days.

25:36.880 --> 25:41.680
Maybe they'd be saying this kind of stuff in meetings, maybe with clients that are under

25:41.680 --> 25:48.600
NDA or something, but I cannot imagine them even at any point saying this stuff publicly.

25:48.600 --> 25:52.800
Yeah, that's why I was really ramping up to have a go at them on Tuesday.

25:52.800 --> 25:58.200
But it appears there was some sort of internal staff revolt, as different outlets are calling

25:58.200 --> 26:02.000
it, that prompted them to pull the page down before it really got very far.

26:02.000 --> 26:06.840
Well, you can imagine how many internal emails must have been sent going, what are you doing

26:06.840 --> 26:08.000
exactly with this?

26:08.000 --> 26:09.240
Yeah, really, no kidding.

26:09.240 --> 26:15.680
Miguel Itacaza on Twitter said, ARM's negative campaign against RISC-V can only backfire.

26:15.680 --> 26:19.840
The Gnomon Xamarin co-founder also said, their points are kind of weak.

26:19.840 --> 26:25.400
This was attempted before against open source, and all it achieved was egg on people's faces.

26:25.400 --> 26:27.000
And that's exactly what's happened here.

26:27.000 --> 26:28.560
It's classic.

26:28.560 --> 26:33.060
You go after open source because you try to say it's fragmented, it's hard to predict,

26:33.060 --> 26:38.080
go with us, we're safe, we're commercial, it just always comes across as looking petty

26:38.080 --> 26:39.560
and looking defensive.

26:39.560 --> 26:43.560
And what do you think about how they backtracked on it by just pulling the website down, and

26:43.560 --> 26:46.360
now there's just a blank page there?

26:46.360 --> 26:50.200
I thought that was great.

26:50.200 --> 26:51.760
Like just nothing.

26:51.760 --> 26:52.760
Nothing to see here.

26:52.760 --> 26:53.760
Nope.

26:53.760 --> 26:54.760
Nothing ever here.

26:54.760 --> 26:55.760
Don't worry about a thing.

26:55.760 --> 27:00.040
And unfortunately, archive.org didn't manage to cache the page.

27:00.040 --> 27:04.200
So I think it might be lost to history apart from the odd screenshot here and there.

27:04.200 --> 27:08.480
But I don't know, I think that probably it was a good strategy to just pull it down and

27:08.480 --> 27:12.080
pretend that it hadn't happened, rather than a big apology or anything that's just going

27:12.080 --> 27:13.520
to drag it out.

27:13.520 --> 27:17.280
Because we're talking about it now, but we'll probably, or certainly a lot of people will

27:17.280 --> 27:19.760
have forgotten about it in another few months, I would have thought.

27:19.760 --> 27:23.440
Yeah, but now we definitely know it's on their radar, and they're a little worried about

27:23.440 --> 27:24.440
it.

27:24.440 --> 27:25.960
Yeah, it's rattled their cage, hasn't it?

27:25.960 --> 27:27.720
And that's good.

27:27.720 --> 27:32.840
It's made RISC-V more legitimate as a architecture, isn't it?

27:32.840 --> 27:33.840
Maybe so.

27:33.840 --> 27:35.120
I don't think ARM's going anywhere.

27:35.120 --> 27:36.400
So I don't think they have to worry.

27:36.400 --> 27:41.320
But you know, there may be a portion of their market that they end up losing to RISC-V as

27:41.320 --> 27:42.720
it starts to bear fruit.

27:42.720 --> 27:45.160
So they really should be kind of concerned.

27:45.160 --> 27:46.560
I think there's legitimacy to it.

27:46.560 --> 27:50.080
Yeah, I mean, this is not going to affect their, at least for the time being, their

27:50.080 --> 27:54.560
snapdragons and stuff in the high end smartphones and the clusters in the data center.

27:54.560 --> 28:00.160
This is the IoT stuff, the real low power, low level stuff where RISC-V can potentially

28:00.160 --> 28:01.820
compete with them.

28:01.820 --> 28:05.220
And that is often the bread and butter of a company, isn't it?

28:05.220 --> 28:07.600
We talk about the flagships, and that's the exciting stuff.

28:07.600 --> 28:13.480
But really, it's the low cost stuff and low power stuff that they're pumping out loads

28:13.480 --> 28:15.080
of that actually makes them the money.

28:15.080 --> 28:18.240
Yeah, it's the fight for IoT is what it is.

28:18.240 --> 28:22.040
It's the fight for the future revenues of the IoT revolution.

28:22.040 --> 28:27.440
Yeah, and you have to be forward thinking because maybe RISC-V will get to a point where

28:27.440 --> 28:31.340
it can compete with snapdragons and stuff at some point.

28:31.340 --> 28:36.440
And they don't want to just be snoozing like Intel have been doing for the past 10 years.

28:36.440 --> 28:40.640
Debian caught our attention this week when they joined KDE's advisory board.

28:40.640 --> 28:44.160
Looks like they're also joining other distributions like Ubuntu and OpenSUSE.

28:44.160 --> 28:48.520
Yeah, yet more people embracing KDE and Plasma.

28:48.520 --> 28:52.240
You've been going on about it long enough, and obviously, Debian must have been listening

28:52.240 --> 28:53.240
to the shows, eh?

28:53.240 --> 28:56.040
Yeah, I'm sure that's what it is.

28:56.040 --> 29:01.840
You know, KDE has really been a great platform on Debian for a long time, and so they've

29:01.840 --> 29:03.760
had a strong relationship for a long time.

29:03.760 --> 29:07.440
And I think the two projects really consider this formalizing that relationship.

29:07.440 --> 29:12.200
In fact, the Debian project leader Chris Lam wrote, the KDE Plasma desktop environment

29:12.200 --> 29:17.120
is fully supported within Debian, and thus the Debian project is extremely excited to

29:17.120 --> 29:23.800
be formally recognizing the relationship between itself and KDE, especially how that will greatly

29:23.800 --> 29:27.480
increase and facilitate our communication and collaboration.

29:27.480 --> 29:32.180
I wonder what this means in terms of the Debian defaults, because for a long time Gnome was

29:32.180 --> 29:36.800
a default, then they changed to XFCE briefly, and I was cheering that decision.

29:36.800 --> 29:42.320
But I wonder, does it mean maybe we might get Plasma as a default in the Debian installer?

29:42.320 --> 29:47.320
Well, we are all sliding into that Wayland future, Joe, so maybe.

29:47.320 --> 29:52.080
Maybe they're thinking down the road at some point they'll want something that's really

29:52.080 --> 29:54.120
feature complete on Wayland.

29:54.120 --> 29:58.540
But in the meantime, I just see it as a formalizing of something that's probably been sort of

29:58.540 --> 30:00.720
unofficial for a long time.

30:00.720 --> 30:07.440
If it led to Plasma as the default on Debian, I would be 100% for that.

30:07.440 --> 30:09.080
That sounds like a wicked good combo.

30:09.080 --> 30:11.440
Well, they could do a lot worse than Plasma as default.

30:11.440 --> 30:15.960
I've grown to really respect what they've been doing, and it's not quite enough to drag

30:15.960 --> 30:20.400
me away from XFCE at this point, but it gets more and more attractive every time I look

30:20.400 --> 30:21.400
at it.

30:21.400 --> 30:24.960
And if something like that were to ever happen, or anything else that does happen in the world

30:24.960 --> 30:28.600
of Linux and open source, you know where to catch it every single week, and you can do

30:28.600 --> 30:33.600
that by going to linuxactionnews.com slash subscribe for all the ways to get new episodes.

30:33.600 --> 30:37.620
And you can go to linuxactionnews.com slash contact for ways to get in touch with us.

30:37.620 --> 30:42.360
And you can support the whole network over at our Patreon page, patreon.com slash jupitersignal.

30:42.360 --> 30:46.060
We'll be back next Monday with our weekly take on the latest Linux and open source news.

30:46.060 --> 30:47.480
I'm at Chris Ellis.

30:47.480 --> 30:49.040
I'm at Joe Ressington.

30:49.040 --> 30:51.680
Thank you for joining us, and we will see you next week.

30:51.680 --> 31:19.680
See you later.

