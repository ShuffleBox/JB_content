Hello, and welcome to Linux Action News, episode 174, recorded on January 31st, 2021. I'm Chris.
And I'm Wes.
Hello, Wes. Let's do the news.
And we start with Google suspending the Element app from the Play Store, without notice to
the team behind the Matrix chat client. Early on, the Element developers received a generic
update from the Google Play policy team, citing that the app had been removed due to content
which contravenes their terms of use. Not exactly clear.
No. And within a short period of time, the Element developers submitted a detailed appeal
to reiterate that Element is a generic chat app for connecting to a global Matrix communication
network, just as Chrome is a generic web browser for connecting to the web, and Google does
not control the content on the web, Element does not control the content on Matrix. You
think Google might understand that?
You would think.
Back over on their blog, the Element team noted that, to enforce our terms of use on
the Matrix servers we run, as the Element team behind Element, we have a formal trust
and safety team hired full time who are dedicated to investigating and tracking abuse reports.
So I think that means they take these things seriously, even if perhaps they miss some,
as happens time to time.
I think one can't help but take in the context in which this is happening. Applications are
seeing huge growth in this area, ginormous growth right now. And there's also groups
like the Wall Street Bets folks that are moving to platforms that are decentralized, that
have been targeted on platforms like Discord and are moving around. But the user base for
Matrix and Element, a client for Matrix, has grown to include open source projects, nonprofit
groups, even governments. The German and French government authorities currently use Element
to communicate as do parts of the US and UK governments, if you can believe it.
So this impact was felt beyond just the Wall Street Bets folks or a few open source projects.
It was felt pretty significantly. And I can't help but see Google's moves here as a bit
sinister. Not only do they compete in the enterprise chat landscape, so they are essentially
a competitor with Element, which makes this a little precarious, but one can't help but
wonder if maybe the goal here was just a slow adoption of Element a bit. They've had a fivefold
increase in user signups recently. And I recently read about a sysadmin at American Airlines
who was in the process of testing Matrix and Element for internal use at American Airlines.
And as they put it, quote, there are big players with clout that take issue to instability
such as this. He goes on to say, how can I rely on my company using Element when it gets
pulled? Not cool, Google. It creates this doubt around this application and it kind
of creates a label.
Yeah, absolutely. I mean, you just can't imagine this happening with one of the more established
platforms. And that makes it feel like Google didn't really take the time or is acting sort
of ignorantly of what Element and Matrix is, even though, you know, the folks at Google
are highly technical. And I'm sure many of them have a deep understanding of these, which
just adds more confusion.
Yeah, indeed, indeed. And it was sort of this non-communicado situation as well. It happens
on a Friday and then they just piss off for the weekend. And time goes by while this thing's
just not in the apps for more than 24 hours.
Thankfully, we do have an update, though. After more than a day of nothing but silence
from Google, the Element developers received a phone call from a Google VP who explained
the suspension was triggered by a report of extremely abusive content accessible on the
main matrix.org server.
This trust and safety team had already acted on it before they even talked to Google, though,
does appear that Google Play moderation squad is now in contact with the matrix.org team.
Hopefully that keeps communication lines open and keeps this from happening again. I can
appreciate that that can be sometimes tricky, you know, just like it's often unfortunately
difficult to report security vulnerabilities to the right place. Perhaps Google didn't
know where to look, although I imagine it's not that hard to find.
Well, and it's not clear to me what an app store's role is in moderating a chat network
like Matrix. It's never been the case that email clients must be moderated for the types
of emails that can be found on Gmail. IRC clients don't have the same restrictions put
on them. Telegram? Signal? I mean, the list goes on and on. So it's really kind of unclear
why Element would be abused here to begin with. Now, as of the morning of this recording,
the app is back on the Play Store. But, you know, you said it, Wes, and I think it shows
the fact that this escalated from a ticket where they tried to send more information
in to silence until a VP calls out of the blue. I think that's significant, but I think
the long-term damage has been done. Element has lost an unknown amount of users during
an intense amount of signup time for them, but it's Google's reputation, I think, that's
going to suffer the most long-term because everybody's watching this situation really
closely right now with what's going on with Wall Street Bets and privacy. And this is
a really, really closely watched situation. And Google did this in front of all of us.
In front of all of us, we've been watching this happen, watching them delete bad reviews
of the Robinhood app. And now we're watching them, Google, the tech company that's supposedly
smarter than any other with the most data in the world, accidentally pull down one of
the communication tools with the most potential in our lifetime. I mean, Matrix is a powerful
thing, and Element's going to harness that. And I think ultimately that's what I love
about this Wall Street Bets and GameStop story. The average non-techie people are learning
about the control the platform owners like Google or YouTube have. And I think they're
learning the value as a result of that of open distributed systems. It's like a lesson
for the normies who couldn't care less about this stuff before. And I think this is a trend
that will serve Linux well because ultimately when you boil down, you want a platform under
your control where people can't revoke applications or prevent you from trading or whatever it
might be, it's going to be distributed and open source systems and a Linux desktop. And
I think it's an interesting trend that ultimately will probably lead to more Linux users.
You know, I think that's just right. I was feeling very grateful that, you know, Android
has F-Droid in this instance, and hopefully some more folks found out about that. For
a while, maybe it hadn't been an issue. We didn't have to care that there were only a
couple of places to get these things because for the most part, you could get whatever
you want. Sure, they might disappear occasionally. These days, that seems to be changing. And
I'm glad that there are options like Linux and F-Droid where you can still find the applications
that you want to use regardless of what Google or Apple thinks that you might want to run.
Next up in security news, a now fixed sudo vulnerability allowed any local user to gain
root privileges on Linux and other Unix-like operating systems without requiring authentication.
This is big news because what sudo does is at the heart of system administration on many
Linux distributions and Unix-based systems because effectively, sudo allows a user to
run a program as another user, most commonly the root user. And anytime you're giving out
root access, it's a big deal.
This week, a serious heap-based buffer overflow was disclosed for sudo. And it's been given
the name Baron SameEdit by its discoverer. The bug can be leveraged to elevate privileges
to root even if you're not in the sudoers file. And of course, as I mentioned, user
authentication is not required to exploit the bug. The fruit hangs low.
The vulnerability is tracked as CVE-2021-3156 and was discovered by security researchers
from Qualys who disclosed it on January 13th and did a good job this time making sure that
patches were available before going public, which is quite important.
The Baron SameEdit bug can be exploited by an attacker who has gained access to a low
privileged account, which is what makes this such a big deal and why we're talking about
it now. And the CVE notes that a bug in the code that removes the escape characters will
read beyond the last character of a string if it ends with an unescaped backslash character.
Under normal circumstances, the bug would be harmless since sudo has escaped all the
backslashes in the command's arguments. However, due to a different bug, this time in the command
line parsing code, it is possible to run sudo edit with either the dash s or dash i options,
setting a flag that indicates shell mode is enabled. Uh oh, because a command is not actually
being run, sudo does not escape special characters. Finally, a code that decides whether to remove
the escape characters did not check whether a command is actually being run, just that
the shell flag is set. This inconsistency is what makes the bug exploitable.
Yeah, and making matters kind of worse here and more serious is this bug has a long tail.
The vulnerability was introduced to sudo almost nine years ago in July of 2011, and it essentially
affects all default configurations of the stable version. Using these exploits, the
researchers were able to obtain full root privileges on multiple Linux distributions,
even current ones like Debian 10, Ubuntu 2004, and Fedora 33. And like I said, it goes all
the way back. It goes back nine years. So this is kind of a serious one that people
are going to have to patch for.
Yikes. Though it only allows escalation of privilege and not remote code execution, which
is important to point out, one could see how this could be leveraged in an attack. If botnet
operators say brute force low level service accounts, the vulnerability could be abused
in the second stage of an attack to help intruders easily gain root access and then full control
over a hacked server. Thankfully, the pseudo contributors have fixed the vulnerability
in version 1.9.5 patch 2. And this is one basically everyone needs to patch for.
Yeah, special thank you to Bleeping Computer for their help in this reporting. We'll have
a link to their write up in the show notes.
Linode.com slash LAN. Go there to receive a $100 60 day credit towards your new account
and you support the show. Linode is our cloud hosting provider. They make cloud computing
simple, affordable, and accessible for anyone. Simplify your cloud infrastructure with Linode's
Linux virtual machines and tools to make it all possible. Now, you know, we run all of
our back end infrastructure for any of the new stuff we built for JB 3.0 on Linode. But
something I don't talk a lot about is how I personally use Linode and I use Linode myself
because well, quite frankly, it costs 30 to 50% less than any other major cloud provider.
So why would Knights based on a company that founded a real passion for Linux and its technology
that made it possible for virtual machines to even be a thing. They saw that back in
2003 before anybody else really was in the market before it was even really called cloud
computing. So I grok that because we've been following Linux's journey for about the same
amount of time. But I also really like that they give me the tools to make it possible
to do things that get me going quick. Like I set up a rust server recently. No, not not
that rust, the game rust, where you can have a persistent world online and I want something
my kids and their friends can play on that I know is safe. And they have a one click
deployment in their app marketplace. You set a cap for how many players are allowed and
any of the other customizations you might want for the game server, all in the deployment
screen. And then you hit deploy and it's up and running. It's so slick. It is so quick.
And now we have a place to hang out together online. Even when I'm on the road, I'll be
able to play with my kids on our own rust instance. And there's a lot of other applications
back end infrastructure tools, other games that are just one click away in their app
marketplace. So get started by going to leno.com slash LAN, get that $100 credit and then start
deploying applications or your own bare servers and build it up on your own. But you get started
at leno.com slash LAN. That's leno.com slash LAN. A big thanks to Linode for sponsoring
Linux Action News. And thanks to everybody who supports the show and makes it possible
for us to give it away free by visiting leno.com slash LAN.
An update on Rocky Linux this week. Parts of the puzzle to make that project sustainable
have recently fallen into place. Gregory Kurtzer, co-founder of the CentOS Linux distribution,
has founded a new startup called ControlIQ, which will act as a sponsoring company for
Rocky Linux. We should be clear here, though, that Rocky Linux is to be the beneficiary
of ControlIQ's revenue, not its source.
Yeah, the company describes itself as suppliers of a full technology stack, integrating the
key capabilities of enterprise, hyperscale, cloud computing and high performance computing.
When you dig through their website, it seems like they have a particular focus on HPC deployment.
But when asked by Jim Salter at Ars Technica about the relationship between ControlIQ and
Rocky Linux, a representative of ControlIQ responded that Rocky was community based and
that ControlIQ was supplying the initial capital for expenses, legal and other startup costs.
Yeah, really, ControlIQ is one of three current tier one sponsors identified by the Rocky
Linux project, along with Amazon Web Services and Mattermost. Rocky Linux is generally expected
to be widely available in Q2 2021 with a first release candidate expected sometime at the
end of March.
ControlIQ is an interesting company. You can see how their interests would align with a
distribution like Rocky Linux, but it's early still. Nothing's really established where
Cloud Linux has an organization that's been doing this for years behind them.
Sure, right. Yeah, they were already shipping their own sort of rail derivative. Whereas
I think at this point, you know, some of the work in the HPC sector and Gregory's work,
they were consuming the old centos. So they're starting fresh.
But with a lot of momentum. I mean, they're really getting things rolling. And they're
talking about their first release. And I think there is demand or appetite. I think there's
a market for something like this, an enterprise distribution that's community driven. That's
one of the things that I think people really like about Debian and why they deploy Debian
on their servers, is there's not a corporation that's going to mess around or meddle with
things.
It's a neutral, open organization.
Yeah, I think that is appealing in itself. And that gives Rocky an edge. Plus, you know,
Gregory being the original co-founder of centos, trying to remember to say centos, it matters,
I think.
Yeah, you know, it adds that flame from before and I think adds an air of credibility about
the nature of it being community based and driven. But on this one, only time will tell.
Now, I'm wondering, Chris, did you see that interesting article over at the Register this
week, The Killing of Centos, where they had an interview with a Centos board member who
shared some interesting perspectives?
Yeah, how could I not with a title like that? We'll put a link to that in the show notes.
It's definitely worth a read. You know what jumped out at me about that article? Because
there's nothing too new in there. But what the Register did is they did a really good
job of demonstrating the duality of Red Hat's position with Centos Stream. In there, they
get the board member to clearly state that RHEL is for production. If you're running
in production, you should be using RHEL. But then just a couple of paragraphs later, they
get the same person to defend the Stream, say, no, Stream is for production. No, Stream's
totally fine. You know, I guess for you. It just shows that this isn't a cohesive decision
that's been made. And there's some, I think there's probably the most frank answers we've
seen about any of this stuff are in some of their answers.
That interview is linked in our show notes, linuxactionnews.com slash 174. Well, thinking
long term, Linux kernel maintainer Greg Croa Hartman has responded to complaints that the
current promise of two years of stability for the Linux kernel 5.10 release is not enough,
complaining that support is not automatic but requires commercial help. Version 5.10
of the kernel was released back in December and designated a long term maintenance release,
which generally means six years of support with important bug fixes and security patches.
That complaining came from Broadcom's Scott Brandon. He spotted the release table and
he had questions he sent into the mailing list about the support lifecycle. I think
that's what set all this off. Did you see that?
Yeah, he wrote, the 5.10 LTS kernel being officially LTS supported for two years presents
a problem. Why would anyone select a 5.10 kernel with two year LTS when the 5.4 kernel
has a six year LTS? A two year declaration is just not LTS anymore.
Now this is Greg's area, you see. So he's not going to have this. First, he refuted
the idea that two years is not LTS. He says a normal stable kernel is dropped after the
next release happens, making their lifespan about four months long. So two years is much
longer than four months. So thereby, it is a long term supported kernel. Second, he said
that every year they go through the same thing. The support is likely to be increased, but
only after companies pledge to back it. He's got to see companies put in or else it's just
not worth his time.
He went on to explain that I want to see companies using the kernel and most importantly, updating
their devices with it to know if it is worth keeping around for longer than two years.
I also hopefully want to see those companies will help me out in the testing and maintenance
of that kernel version in order to make supporting it for six years actually possible.
Greg also said that, you know, Samsung could be a little bit better in this area. He basically
said it. He added that he doesn't recommend using a single kernel version for more than
two years on systems that you're going to actively support and maintain. And he blamed
customer unfriendly SOC vendors for providing millions of lines of out of tree code that
is specific to one kernel. So the question is, will 510 get six years of LTS support?
Well, Greg explained that so far the jury is still out for 510 and asked, are you willing
to help me with this? If not, why are you willing to hope that others are going to do
your work for you?
I'm talking to some companies, but I'm not yet willing to commit to anything in public
because no one has committed to me.
Yeah, I think that's fair. And it's a tricky situation because everybody wants the benefits,
but it doesn't seem like they particularly want to put the work in. And how can they
really do this without vendors like Samsung and some of the other SOC manufacturers on
board?
When you think about it, this is a great deal of work. I mean, the rest of the kernel community
in many ways has moved on to the next release, as you pointed out, right? It's there for
four months and then you go on to the next release and work on that. Having to keep up,
do all these backports, making sure those get done correctly, sometimes having to do
significant changes when kernel structures have changed. That's not work that should
be done for free.
Now, it really, it makes me realize that when it's safe to go back out into public and we
can go to community events again, it's all of our duty to buy Greg a beer when we see
him or whatever beverage of his choice. You know, this is, he is doing the people's work
with these LTS kernels. And even to get something that's two years, you know, a two year stability
window in terms of ABI whatnot, that is a big, big deal. If we could get it to six years
by getting some vendors on board, I think that could have some, some really positive
ramifications for people that are building devices and new technology platforms off the
Linux kernel.
It also feels more natural in that, you know, we should do it if there's interest because
folks need it and will use it and kind of establish that first and then you can justify
the work.
That's what the takeaway is by Greg a beer. Definitely. And of course, check out linuxactionnews.com
slash subscribe for all the ways to get new episodes and linuxactionnews.com slash contact
for ways to get in touch. Hey, you can help us test. Join the coder happy hour this Monday,
5 PM Pacific, 8 PM Eastern. We're going to test out our recently improved PeerTube live
stream setup and we could use your help. We need to build out a bit of the peer to peer
network. So join me over there at jblive.tv and we'll have more details. Help test the
new revolution in video streaming. All you have to do is show up and watch. Don't worry.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us and we'll see you right back here next week.
