Hello, and welcome to Linux Action News, episode 199, recorded on July 25th, 2021.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
We wanted to start this week with a story you might have seen circulating around.
And that's a recently disclosed denial of service vulnerability in SystemD.
So what's been disclosed here is a SystemD bug that allows any unprivileged user on your
local system to exploit a vulnerability that crashes SystemD and then causes your kernel
to panic.
Yikes.
What makes matters a little bit worse is that this vulnerability was introduced in SystemD
version 2.20, released way back in April of 2015.
So I think it's fair to say it's been widely deployed at this point.
Thankfully, though, the Qualys team reports that once they found this vulnerability, they
pretty much immediately began working with upstream.
It's fascinating looking at the disclosure timeline.
It seems that they sent a CV advisory to Red Hat on June 9th of this year, and then Red
Hat got to work.
But the notes don't really indicate that they sent out a notice to any other Linux distribution,
which because it's SystemD, maybe that wasn't necessarily needed in this case.
For their part, Red Hat product security and SystemD's developers have pretty much immediately
patched the whole.
Looking at that timeline, they seem to be on it, at least this time.
Now here's the reality and why we wanted to talk about this at the top of the show.
It's making a lot of headlines.
It's making a lot of news.
It's not necessarily a huge deal.
And we just wanted you to have the facts.
It's an exploit that requires that local attacker has to mount a file system at an extremely
long path that messes with SystemD.
And while yes, it is an issue and you should check for updates, testing seems to indicate
that the vulnerability is not present in all Linux distros.
It does seem to be in Debian 10, Red Hat derivatives, and Ubuntu derivatives.
So it covers a lot, so check for updates.
Well soon, you can just upgrade right to Debian 11.
This week, the team announced their release date for the much anticipated new version.
Indeed, it's known as Bullseye.
Debian 11 has been set for an August 14th release.
You know what's also kind of news with this story?
The speed of everything.
Right.
With the Debian 11 full freeze just last week, I don't think we expected a firm date to be
set point so soon.
No way.
No.
Prior Debian releases, just for context, have taken up to a few months past the freeze point
before they were released.
Yeah, that's kind of what I was thinking.
Like, okay, all right, you guys are really on it.
And it does look like a really good release, Wes.
Debian 11 is going to have a lot of goodies, Linux 5.10, and that's the LTS version of
the Linux kernel.
And of course, you got all the package improvements and updates since Debian 10 launched about
two years ago.
So, of course, we'll cover the release here in the show.
And then when Debian 11 does release, we will cover that right here in Linux Action News
and we will have a review of the release in Linux Unplugged.
While we don't have much to share on this, we did want to give you a brief update on
Audacity this week.
Muse Group, the new owners of the free software audio editor, published an updated privacy
policy and an apology.
An apology, huh?
Well, that's interesting, I suppose.
The update itself addresses the main points of criticism leveled against the previous
version of the privacy policy.
And in particular, there's several points that were changed.
That provision about being 13 years or older to use Audacity, that's just been completely
removed.
They've added a broader explanation for air reporting and the update checking functionality
to the policy.
They also clarified that the full IP address is never stored, not even like a hashed version
of it, and that the collecting personal data for law enforcement paragraph makes it clear
that no additional data is collected.
So problem solved, I guess, Wes?
I think it remains to be seen if this revised privacy policy and the apology itself will
result in a calming down of the situation.
Only time will tell.
We have a couple of hardware stories this week.
First up, some follow up on the Steam Deck from last week.
We now know that all models feature socketed M.2 storage.
Valve notes that it's not necessarily user accessible or replaceable.
But I mean, you can't help but wonder how long until some user out there buys the lowest
tier storage deck and puts like two terabytes of storage or some crazy amount of storage
in there.
It seems like it's going to happen.
Stop putting ideas in my head, you.
And while we're speaking of storage, a Valve designer clarified that the videos you've
maybe seen from IGN with the Steam Deck playing actual games, well, all of those were apparently
done off a micro SD card.
Yeah, I think Valve's trying to make a statement that they have a really fast SD card reader
in there.
So if you put a high speed SD card in there, you're going to have an OK time.
And you think about that.
That's like demoing it to the press for the first time and they were OK running it off
an SD card.
That feels like a statement or an act of desperation.
I guess we'll know once we see the deck.
That same designer on Twitter also made it clear that the Steam Deck could just play
games off of an external SSD because it is just a PC after all.
But how did we get to that handheld PC running Linux?
It all started back in July 2012 when Valve's Gabe Newell mentioned his concerns about Windows
8, stating he felt it would be a catastrophe for everyone in the PC space.
Their concerns over the Windows 8 App Store and the new Windows UI kicked off something
of a revolution inside Valve.
I can't believe it was July of 2012.
I clearly, clearly remember the moment.
It's just crystallized in my memory.
And in that spirit, Liam over at Gaming on Linux has an impressive write up of the rise
of Steam on Linux.
And it is quite literally a timeline that is worth your time.
Indeed.
It's been a long and fascinating nine plus years now for Valve and for Linux.
And Liam nailed it in that write up.
I did mention we have two hardware stories.
The second hardware story this week is the Framework laptop.
It is now shipping and the press reviews have started to hit the internet.
So we've done a little bit of a meta analysis of the coverage.
If you don't recall, the Framework is a fully modular laptop that you can put together yourself
starting at 750 USD.
And it seems to have been a hit overall in the reviews.
Gizmodo noted the performance was on par with other laptops of its same class, although
with shorter battery life than most.
Seemed like by quite a bit.
CNET reviewers noted though that they loved being able to switch the side that a given
port is on based on where they needed to attach a cable.
I think that's a fantastic idea.
Wow, I already have too many laptops that have different ports from different sides
and I can't keep it straight.
I need this.
I know this right there.
I'm like, yes, I love that idea.
Just as a concept, no more having to fish that cable around.
They also note over at CNET that each Framework part has a QR code on it and a short URL to
take you to all of the info you need about it and the grand plan is here hopefully one
day to have replacement parts and upgrade parts and Frameworks even talked about a market
where you could trade these parts on and upgrade and exchange.
And it's partially for that reason I think that PC World called it the ultimate write
to repair laptop.
So it really does seem initial impressions have been fairly good, although it is still
definitely early days for the hardware.
Don't worry though, we'll be keeping an eye on it.
Might even just opt to pick one up for an in-studio review someday.
Leno.com slash LAN.
Go there to get $100 in 60 day credit towards a new account and go there to support the
show.
You know, Leno is our cloud server provider.
They started in 2003 as one of the very first companies in cloud computing.
Now 18 years later, Leno is the largest independent open cloud provider in the world with 11 global
data centers serving nearly a million customers and businesses around the globe.
But Leno's mission remains unchanged.
Since the day it started, their mission has been to make cloud computing simple, affordable
and accessible to all.
And that's led to a best in class experience and why we host everything on Leno.
It's easy to use, of course.
It has a very powerful clean cloud dashboard, but they also offer things like S3 compatible
object storage, a powerful DNS manager, lock storage, of course, Kubernetes support, one
click application deployments and super fast networking.
In fact, Leno owns the connections between their data centers.
They are their own ISP.
And with pricing 30 to 50 percent cheaper than other major cloud providers, it's worth
checking out.
And you know, 66 percent of companies save money working with a mix of alternative cloud
providers instead of just relying on one hyperscaler.
Leno can be part of your multi cloud strategy.
And if you ever run into any trouble getting anything set up, Leno comes with amazing 24
seven customer support by phone or ticket.
And Leno is making our Jupiter Colony reunion road trip possible with meet ups in Salt Lake
City, Denver and more all along the way powered by Leno.
So go use our one hundred dollars to test your system to build something or to learn.
You got to go check out Leno for yourself and take advantage of that special offer.
They're dedicated to offering the best in virtualized cloud computing.
If it runs on Linux, it runs on Leno at Leno dot com slash land.
Linux dot ting dot com.
If you're sick of overpaying for cell service, go see how much you could save and then take
twenty five off that at Linux dot ting dot com ting is an MBNO or a mobile virtual network
operator.
And what that really means is the ting mobile customers get access to the big carrier networks,
but with way better customer service at a lower cost.
With ting mobile, you get the same coast to coast coverage as you would with the big guys.
You just pay less.
That's why I've been a ting customer since 2013.
Ting has stayed flexible and nimble with my various patterns of usage over the years like
no carrier could ever dream of.
And Ting's plans are simple and straightforward, like their new set 12 plan, 12 gigs of data,
unlimited talk and text for thirty five bucks a month.
And if you follow Ting on Twitter at Ting FTW, they're giving away five hundred dollars
in gift cards for use of either Best Buy or Amazon.
So go follow them at Ting FTW for more details and get access to that.
Now, if you need two gigs or 20 gigs or a lot more than that, Ting's got a perfect plan
for you.
Every plan gets access to Ting's award winning customer service with nationwide LTE and 5G
coverage.
But the best thing about Ting, never any contracts, no contracts, no contracts.
It's simple to switch to Ting, too, pretty much any phone will work.
So just head to Linux.ting.com, check out your current phone, create an account, pick
the plan that's right for you.
Once everything is set, Ting will send you a SIM card.
You pop that in your phone.
You get activated in minutes.
Cutting your phone bill in half has never been easier with Ting's brand new plans.
It truly is the next generation of Ting mobile.
It's here.
Go see how much you could save and then take twenty five bucks off that.
Linux.ting.com.
We've been keeping an eye on Google's Fuchsia project for years now, and it seems with Fuchsia
out in the open, Google's becoming a bit more relaxed about their engineers talking
more freely about the OS.
To that end, Rubber Duck Engineering, a weekly web show hosted by Fuchsia software engineer
Adam Barth, and Flutter engineer Eric Seidel recorded a dedicated episode about the current
state of Fuchsia.
You'll have links to the entire chat in our show notes.
But of course, we grabbed a few clips for you all.
We thought maybe these clips would shed light on aspects of Fuchsia that are a little more
noteworthy to us Linux users, including the unique way that Fuchsia acquires software.
Here's Adam Barth on that point.
So over here, I just put this thing up.
I'm going to run LS.
So what's interesting is not what happened in this window, but what happened in this
window.
OK.
So this prior to me running LS, this system did not have LS on it.
It just in the time I hit enter, it discovered an implementation of LS and basically installed
it on the device.
And now I have LS.
It seems Fuchsia has a new way of managing software, applying some of the concepts and
lessons learned from the web.
It's more like a cache and an install.
So in other operating systems, installation is a pull, like a push mechanism, right?
You like type app get install a thing, right?
And then you got it.
And if you want to get rid of it, you say uninstall the thing.
So here the idea is the entire universe of software is available to you at your fingertips.
All you need to do is mention it, then it'll come and run on your device.
And when it's done, it'll or you run out of space in your cache, it'll disappear and float
away.
And when you run it again, it'll come back when you need it.
It's a concept of ephemeral software.
Another way Fuchsia differs from Linux is the security model around its kernel known
as Zircon.
Another thing is like the kernel has no notion of user.
So in Windows, there's a very elaborate access control system where every object is associated
with a security identifier, an access control list, and there's a thing.
Linux every process has a user ID and a group ID and the kernel makes lots of like checks
against that.
So Zircon just has none of that, has no concept of user whatsoever.
The way it does access checks is just do you have a handle to this thing?
If so, great.
If not, no way.
And never missing an opportunity to make it easy to bring your existing software stack
to Fuchsia, Google has plumbed in Wayland support.
We have a Wayland adapter so we can run software that knows how to speak to Wayland.
But it's not like we have a separate Wayland server running.
That thing just knows how to tell Scenic what the thing wanted to do in Wayland.
And does that Wayland adapter run separate from Scenic?
Yeah.
So you sort of imagine like a service-oriented architecture.
So on one end it exposes Wayland and then on the other end it just talks to Scenic just
like any other client talks to Scenic.
And if Wayland support's not enough for you, it seems that porting your existing applications
from Linux to Fuchsia could actually be very straightforward, especially if your application
already runs on Windows.
The good rule of thumb is if the program knows how to run both on Linux and on Windows, then
porting it to Fuchsia is relatively easy.
If it only knows how to run on Linux, then depending on what it's doing, it can be a
little tricky.
So we have a compatibility layer we call POSIX Lite, which contains the parts of POSIX that
we think don't negatively impact security, and then we provide that interface on top
of the underlying Fuchsia primitives.
And our favorite moment from the stream, when a live viewer asked if Fuchsia could one day
replace desktop Linux.
But I also think it's important to realize that people always want to look at these things
in a zero-sum fixed way, like is this going to replace X, like is this going to replace
Linux on the desktop or whatever.
I think even more in a, there's like more to be had, right?
If you have a system that's different than Linux, it's maybe different for other things,
and maybe there's new things that you could do with it that are either difficult to do
with Linux or awkward, or you might benefit from a different application.
And so I think it's more useful to think about like, what are the new things that you could
do with this that are possibly additive as opposed to replace it?
I think that really nails it right there.
What are the new things that it could do additive?
Because Fuchsia truly feels like a lessons learned project for Google.
In the Skunk Works, the engineers wanted to build something that they learned a little
bit from Linux, they learned a little bit from Windows, they learned from deploying
software on the web, and they wanted to bring it all into one place.
And notable how easy it is to move software over to Fuchsia.
Yeah, that's a little bit surprising, but I guess you got to have something to run on
there.
Yeah, you need software, right?
And get a little Wayland support, some basic POSIX support, and you're pretty much good
to go.
We'll see where it goes.
You never know, but there's so much going on every single week, and we try to distill
it down for you in a very consumable way.
So make sure you get every single episode by going to linuxactionnews.com slash subscribe
for all the ways to get them new episodes.
And linuxactionnews.com slash contact to let us know how we're doing.
Hey, maybe share the show.
If you know someone who works in IT and needs to stay up to date, send them a link to a
recent episode that you really liked.
Join us for meetups in Salt Lake City and Denver coming up soon.
Meetup.com slash Jupiter Broadcasting.
As for us, we'll be back next Monday with our weekly take on the latest Linux and open
source news.
Thanks for joining us, and we will see you next week.
