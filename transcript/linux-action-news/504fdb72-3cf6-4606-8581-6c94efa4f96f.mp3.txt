Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 36, recorded on January 14th, 2018.
I'm Chris.
And I'm Joe.
Hello, Joe.
Good to be connected with you again.
Sounds like it's going to be the spring of open source in Barcelona.
Yeah, so we had bad news last year about Munich, but now we've got good news regarding Barcelona.
It looks like they are going to first switch to using open source applications and then
replace Windows with Linux, which is exactly the right way they should be doing it.
And hopefully it's going to be done properly this time and will be a shining example to
other governments around the world.
I do think it has a good chance of that, because from my read, they seem to be going about
this the right way.
The city has plans for 70% of its software budget to be invested in open source software
in the coming year.
They're creating a transition period, which will come to an end in the spring of 2019.
And the city of Barcelona will start outsourcing IT projects to local small and medium sized
enterprises.
So it's going to be a boost for local IT businesses as well.
They'll come in, help them set up new infrastructure.
They'll also be talking to 65 new developers to build different software programs that
they need to be moved over to these new systems.
Yeah, and crucially, that will end up open source, won't it, rather than the usual case
of it being proprietary.
And they're going with a mainline Linux distro.
They're going to be using Ubuntu.
And they have already been trialing about 1000 Ubuntu desktops as a lead up to this.
They're not going their own way.
They're not going to go build their own distribution where they have their own version of LibreOffice.
They're going with standard stuff.
And they'll also be switching to Firefox and LibreOffice in place of Internet Explorer
and Microsoft Office.
It's as if they looked at what Munich did and just decided, well, let's not do any of
that.
Let's do it properly.
Let's listen to what people criticize Munich for doing.
And hopefully, this is now going to be the new poster child.
Yeah, maybe one of the benefits of Munich's switch and then now eventual switch away from
Linux being so in the public is it gave other places an opportunity to learn.
That's a decent silver lining.
Well, there had to be one, didn't there?
Well, Joe, after a year and a half of development, the Nextcloud project seems to be very excited
to announce Nextcloud Talk.
Yeah, we've kind of seen this coming, haven't we, because of the partnership with Spreed.
And it's essentially integrating those type of services into Nextcloud.
And so now it's available for the Nextcloud 13 beta.
It's not available in the version 12, the stable version at the moment, but it's pretty
easy to install it, especially if you've got snaps available.
I checked this out by installing Ubuntu Server and just didn't install any extras apart from
Open SSH, SSH DIN, pseudo snap install, Nextcloud, dash dash, edge to get the 13 beta.
Few seconds later, Nextcloud's up and running, all the databases set up and everything.
I was really, really impressed by that.
I was able to check it out just with virtually no effort at all.
Yeah, I did the same thing.
That was amazing.
I did a clean install of Ubuntu on a droplet, and then I snap installed the Nextcloud dash
dash edge, like you mentioned, and within moments it's up and running.
And on top of that, there's easy ways to configure certain settings inside the snap, like the
SSL port or increasing the PHP memory limit.
They're just easy, simple snap commands that make all the adjustments.
So I kicked the tires.
I was pretty interested in this.
It's offering something that the open source world desperately needs.
First of all, it's built around cool tech using H.265 based video encoding, they say.
The main features are really the independence that it brings you.
It's self-hosted real-time VoIP communication, even with mobile apps that will send push
notifications so you can answer on a mobile app.
So aside from the fact that they're using cool encoding technology and that it's 100%
private and all the calls are peer-to-peer encrypted, they're promising something big
here because it's a collaboration tool, too.
It's a real potential Slack killer if they can pull it all off because you can bring
in your calendar, your contacts, your synced files, all the things that Nextcloud's good
at and you can bring them into this real-time video chat environment and just collaborate
the hell out of stuff.
He said the word if there and it is a big if because, okay, this is new, it only runs
on the beta version of Nextcloud server, but I just could not get these mobile apps to
work.
I installed it on a couple of my tablets and tried to get a chat going and this is all
on my LAN.
I wasn't even going out to the internet and it just would not work.
It was just black screens and just nothing happening.
That said, in the browser on a proper laptop, it was working fine and I tested that out
and it was minimal lag and all the rest of it as you'd expect over the LAN, but I think
it's disappointing that they've made this big fanfare about it and yet you install the
mobile apps and just nothing.
I mean, did you try the mobile apps as well as the desktop?
I only tried the desktop.
I'm not a huge fan of the Nextcloud mobile app right now, so it's particularly worse
on iOS in my opinion than it is on Android, so I don't bother with it, but I would consider
giving it another go.
It's been a while, so I might, Joe, I might give it another go before I take down the
Nextcloud instance because I probably should check in on it, but the promise is big.
The idea that you could get a push notification to your phone and answer a video call on your
mobile device, I'm always looking for ways to not use the phone system, so I like that
and it's self-hosted.
My problem was it seemed to be rather unreliable in Chrome, and I ended up having to switch
to Firefox to use it.
Fair enough.
That's fine.
I don't mind, but I was a little disappointed because a lot of the people I would be calling
would be in Chrome, and so I may try to recreate some of that and see if I maybe had something
wrong.
Maybe it was an extension conflict too, but I found it to be early.
It's got the beta label, but the backend technology, the fact that it's based on the stuff that
Spreeds worked on, well, Spreeds is a pretty legit operation that hosts some really large
video conferencing solutions, so it seems like the fundamental core technology should
be there.
The stuff around it just might need more time to bake.
Yeah, and it is definitely something we need, as you said.
We need something that is totally self-hosted.
That said, if you want to pay them for enterprise solutions, they can do that, but the kind
of people who are listening to this, certainly me, I could easily spin it up on a droplet
and get it going, and maybe we could potentially move away from using things like Mumble and
Discord, but I think it is a little bit early at this stage.
I think we're looking at another few months at least before we can do that.
They also promised the possibility of connecting it to a SIP bridge, and that brings in a lot
of possibilities in a podcast network for looping in random guests that might be on
the phone, but for a business, you're doing a conference call, everybody's on, and you
need to bring somebody in over a SIP connection, which could be a landline.
That could be a great feature.
So there's some stuff they're doing in here, and Frank blogged about this a little bit
recently and talked a little bit about where they're going, and you can find that on Frank's
blog, just Google search for Frank Karleszek, and read through his plans for the future
of this.
I like where they're going.
I like that it's all open source, and now we just sit back and wait for it to bake and
get polished.
Yeah, no doubt Noah's going to be all over this.
One thing I was surprised to see you all over is Google AMP, and I'm actually really glad
we're slotting this in the show, because it's something I've been thinking a lot about in
the last couple of weeks, and it looks like Google is trying to make some improvements
to AMP.
Yeah, it's something I've been thinking about for a couple of years, actually, since it
first launched, and I became aware of it.
If you don't know what it is, it's accelerated mobile pages, and what it means is pre-cached
and pre-loaded mobile web pages hosted by Google, hosting other people's content, which
from a user perspective makes it amazing.
You search for something, you see an article, you click on it, instantly it's open, and
you can start reading.
There's none of this waiting for images to load, and it's all really optimized.
From a user perspective, I have no complaints.
The technology is awesome.
It works really, really well.
However, there is a key problem with it.
All of the files, the HTML files and everything, are hosted on Google servers.
People do a Google search, and then they go to what is essentially a Google site, even
though it might be from a newspaper, The Guardian or whatever.
It's actually hosted on Google servers, and that keeps people trapped in the Google bubble,
the Google infrastructure.
A lot of web developers have come together recently and written an open letter saying
that they're not happy about that.
Google have made some changes, but I don't think they've gone far enough with those changes.
By far the largest complaint is that AMP takes over your URLs.
When the user looks at the URL of the website in the web browser, they're not seeing your
website name, and publishers hate that.
Google writes in their AMP blog, and pay attention to the language that they chose to use it.
It feels like they're trying to come across as folksy.
They write, we are huge fans of meaningful URLs, ourselves, and we recognize that the
situation isn't ideal, and many of y'all agree.
It's certainly the number one piece of feedback we hear about for AMP.
We embarked on a multi-month long effort, and today we finally feel confident that we
found a solution, as recommended by the W3C tag, we intend to implement a new version
of AMP caching based on an emerging web packet standard.
So it's good to see them trying to fix this number one problem, the URL problem, and as
a user I do like AMP pages, it's great that they load fast, but as a publisher, I hate
it.
I hate it with a passion.
It is poison for the web, it centralizes the web around Google search, it presumes that
the entire world only uses Google search, and it removes independence from publishers.
It's taking away publishers independence.
It would be like somebody re-hosting all of our podcasts on their infrastructure.
You wouldn't get any of the metrics, they re-encode the file and it sounds like crap,
like Stitcher does this, and I hate it.
And this is what Google's doing to the entire web, and it's also the wrong solution.
The real solution is for publishers to make their websites better and make their websites
faster.
That's the solution.
This is a hack to that that centralizes control around Google.
It moves the web in Google, takes independence away from publishers, and doesn't actually
address the core problem that people just need to build better websites.
Yeah, and this huge list of web developers have said that there's nothing wrong with
prioritizing fast loading sites in search results.
That's a good thing, but they're saying that you shouldn't have to be locked into Google's
infrastructure to do that.
You should be able to implement your own solutions and, as you say, make your websites better,
not have these huge JavaScript-laden beasts of websites that on mobile can take, especially
if you've got a fairly flaky 3G signal, they can take minutes sometimes to load.
And supposedly mobile-optimized sites, you must have been experiencing this for years.
That's why I can see why you're a bit torn on it, because you are on mobile internet
most of the time, aren't you?
So AMP must be amazing for you.
There are little things that bug me about it.
It doesn't scroll right in my web browser.
There's things like that, but you're right.
Overall, it's a nice thing to have.
If you could just choose where everything got cached, like if I could implement AMP
for Jupyter broadcasting, but say that all of the cache comes from Scale Engine, well,
then I'm a lot happier.
And maybe that will happen one day, but you have to keep in mind the core thing Google's
offering is performance.
And the best way they can offer that is by hosting the content.
Oh, and by the way, it also happens to work, they can kind of insert some ads here and
there.
But don't pay too much attention to that.
And, you know, it's not about the ads.
Not about the ads.
Yeah, not to mention that they can see every single webpage that you're looking at and
build up even more profile about you.
And it always comes back to the same thing.
They're an ad agency, and they want to serve you relevant ads.
Let's just try a thought experiment, Joe.
What if Mozilla was rolling something like this out?
Would some of these concerns be alleviated?
Some of them.
But if Mozilla were rolling it out, then I would like to see them offer a self-hosted
solution for people like us, you know, at Jupyter broadcasting, as you say, using something
like Scale Engine.
Right, because if Google is prioritizing faster websites regardless in the search results,
then it sort of washes itself out in the marketplace.
Get your site fast enough, and even if you're self-hosting your AMP site, or whatever Mozilla
would call it, as long as you're fast enough, then you get listed in the search results
high.
Yeah, but even if you were relying completely on Mozilla, I would rather trust them than
Google.
DigitalOcean.com.
Go over there, create an account, and then apply our promo code, here's the thing, and
you get a $10 credit, and then you can get a rig spun up in less than 55 seconds.
Their base rate is $5 a month.
So you could run that thing two months for free with our promo code.
DigitalOcean is an all SSD cloud.
Every system you deploy, from the $5 a month one to the one that's hundreds of gigs of
RAM, it's all using SSDs.
You can increase the storage.
You can also add things like block storage and object storage.
They have a really simple API, but my favorite feature of DigitalOcean, you know what it
is, is the dashboard.
DigitalOcean.com, use our promo code, here's the thing, spin up a machine, and try out
the new Nextcloud 13.
In less than 55 seconds, you can have an Ubuntu system ready.
You SSH into it, and then you use the snap that we mentioned earlier, and I would bet
within about five minutes, you could be trying out Nextcloud 13 and the new Nextcloud Talk
plugin.
The pricing's super straightforward.
My favorite machine is three cents an hour, two gigs of RAM, two CPUs, 40 gigabytes of
SSD, and three terabytes of transfer.
DigitalOcean.com.
Create an account.
Use our promo code, here's the thing.
A big thank you to DigitalOcean for sponsoring Linux Action News.
DigitalOcean.com.
Promo code, here's the thing.
Okay, so Ubuntu 17.10.
This is a story that I'd kind of been avoiding really because I thought that it wasn't a
very big deal.
So before Christmas, Canonical pulled the link to the 17.10 ISO and told people just
use the LTS instead for now.
And that was because of an issue with the UEFI on certain laptops.
And I didn't really talk about it much at the time because I thought, well, it's going
to be fixed soon.
But here we are in the second week of January, and it's only finally been fixed.
And so they've put up this new 17.10.1 ISO image.
And so that's been fixed kind of, and it just surprises me that it took so long.
I think that Meltdown and Spectre have a lot to do with why it took so long, but at least
it's fixed now.
Yeah, that's just what I was going to say.
I bet they're working on 17.10, this bug comes up, they go, okay, we got some problem.
Certain laptops, we have the SPI kernel driver turned on, we got to re-spin this with that
thing turned off, we got to come up with a software fix for people that have bricked
their laptops.
You know, kind of a hectic moment, pull the links, and then boom, you're hit with Meltdown
and Spectre in the middle of all of this.
And it's the holidays.
So people are going away for the holidays, they're traveling, it's New Year's.
It's just the worst time to be hit with two things like this, that you don't plan for
this kind of stuff.
It's not like you just have dozens of developers standing by ready to leap into action.
They're all doing something else.
They already have a day job, they're already working on the next release.
It must have been a crazy stressful time over at Canonical during the holidays.
Yeah.
But I've heard some criticism that, well, if all they had to do was disable the driver,
why did it take them a couple of weeks to do this?
Three weeks, nearly.
Yeah, I suppose that's a good question.
And these respins, the 17.10.1 ISOs, don't have the Meltdown patch in there.
They're still vulnerable.
You have to update them immediately after you install them.
Yeah, that was a bit of a surprise, really.
But I suppose it's not that hard to update straight after installing.
But it has somewhat killed the momentum, maybe, for 17.10, hasn't it?
Because obviously it's got the new GNOME desktop and everything, and 17.04 was fast approaching
end of life.
So there would be a lot of people looking to upgrade.
And I suppose most people would do a sort of in-place upgrade rather than a fresh install
from the ISO.
But it was really bad timing for them, this, I think.
I agree.
And the SPI kernel driver serial peripheral interface, easy for me to say, is a really,
really basic, doesn't require any kind of crazy logic, shouldn't have really been a
big problem.
But of course, it was a combination of factors.
And it's really basic stuff.
A lot of people were giving Canonical a hard time for turning that driver on, because I
believe it is marked experimental upstream.
And a lot of people were giving them a hard time.
So I read up on the kernel documentation about the SPI kernel driver, and I'm shocked that
it was able to cause this problem, really.
It's super basic.
And if you want interesting reading after the show, go Google the SPI kernel driver,
and have a good read.
Well presumably you weren't reading about it on LKML.org this week.
Oh man, have the BSD guys been giving me a hard time about this story, Joe.
We actually noticed for TechSnap, because we were researching stuff for Spectre and
Meltdown, and the Linux kernel mailing list was not loading.
I had to go to archive.org to get this stuff.
And I thought, okay, well, you know, Meltdown's a huge story right now.
Maybe a lot of people are reading the mailing list trying to piece together a history.
Nope.
Nope.
That's not what it was at all.
Nope.
Nope.
It was the last thing I expected.
It's because the back end was hosted in Jasper Span's house, and he's out on vacation, which
looked like a really nice vacation, and he lost power.
And the system rebooted.
And it wouldn't boot back up.
And then to add insult to injury, that power outage took out his motherboard, and that
meant that he had no machine, even when he got back, he couldn't get it going again.
So I think he still, as we record this, are syncing data up to a VPS.
You know, the funny thing in this story, too, is it sits behind the Linux kernel mailing
list, sits behind a layer of Cloudflare, then a layer at DigitalOcean, which is where a
lot of the front end aspects of the website are stored, and then, then at Jasper's house.
So it's like a three-layer dip of hosting, but the core fundamental, like, huge amount
of emails, like the gigs and gigs and gigs and gigs of years of emails, that's at his
house.
And so there's other caches, you can still, there's other official caches that are online
right now that you can go read, but Jasper's was down.
And as we are recording at this moment, I think he's, he's about halfway through the
other thing, but now he's going to a VPS.
Yeah, and so it's really just the archive of this, isn't it?
It's not interrupting any work that's happening.
The actual mailing list itself is still working.
It's just this huge archive that people like us link to and read.
Yeah.
And as you say, there are other archives of it, but this is really the go-to for most
people.
So it's a huge surprise that a key part of that infrastructure was hosted in someone's
home.
Oh yeah.
I heard about it from the BSD guys out there in the audience, and our own Alan Jude was
giving me a hard time in the back channel about how BSD hosted on this massive data
center infrastructure that's very fancy.
And I will note that Jasper got a lot of offers via Twitter.
You can just go read his feed from a bunch of different hosting providers that are saying
we will host it for you.
We would be happy to host that for you.
He doesn't seem to be too inclined to take any of them up on that offer.
Maybe he's trying to be sort of politically safe with the Linux kernel mailing list, but
he's got a lot of offers rolling in right now to host it.
It just reminds me of that quote, we're not going to be big and professional like GNU.
Well this is kind of proving that, isn't it?
I suppose so.
Although at the same time, doesn't it seem like ARM's getting a little more professional?
Fedora seems to have taken note.
Yeah.
So it's looking like the next version of Fedora 28 will promote ARM to be a primary architecture.
It's not for sure, but it is looking good, I think, that that is going to happen.
But it's only for the server version.
It's not for the workstation, which kind of makes sense, doesn't it?
Because not many people are really running a workstation on ARM.
What are your thoughts about the Raspberry Pi?
Because that's pretty popular for Ubuntu Mate, and they have the Raspberry Pi Foundation
now has their spin of Linux.
Seems like Fedora would work pretty good on something like that, a nice lean Fedora workstation.
I mean, I see this as a server play.
This is clearly a server play for Fedora here, probably an indication of where Red Hat Enterprise
is going to go.
I mean, still, though, the desktop, you know, the Raspberry Pi is usable.
Really?
Have you really used it?
I mean, no discredit to the work that people like Martin Winpress have done with Ubuntu
Mate on it.
It's kind of just about usable, but realistically, it is painful to use a Raspberry Pi as a desktop
machine.
I tend to agree.
But it does seem to be something people are doing because it's getting downloaded an awful
lot.
Yeah, that's true.
That's true.
You're right that this is where RHEL is headed.
And finally, after years of promise, we're getting decent ARM hardware that is data center
ready.
And so it just makes a lot of sense for Fedora to be leading the charge like this.
I wonder if some of the Fedora developers are a little spurred on now by the recent
Meltdown Inspector stuff.
Maybe just adds a little extra momentum to something like this.
Every time I read about Fedora Workstation and Fedora Atomic, I get pretty curious about
where they're going specifically with Fedora Atomic.
So if you're out there using it as a desktop, let me know how that works at Chris LAS.
Can you use flat packs and snaps on Fedora Atomic?
I'd love to know at Chris LAS, if people are out there using it as a desktop because it's
awfully appealing to me as a production workstation OS.
It's certainly not designed that way, is it Atomic?
It's very much designed for containerization, isn't it?
That's my understanding.
But I have seen several people recently mentioned that they're using it as their desktop, that
it's early days, but they're trying it out as a desktop.
That's fascinating to me.
Linux people, they'll just do whatever they want with it.
And we'll tell you about it every single week.
Go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And go to linuxactionnews.com slash contact for ways to get in touch with us.
Yeah, and speaking of Spectre and Meltdown, we did a great rundown and breakdown specifically
on the performance impacts in the latest episode of TechSnap, TechSnap 3.51.
You can find that at techsnap.systems.
Check out the new TechSnap program.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Rissington.
Thank you for joining us, and we'll see you next week.
See you later.
