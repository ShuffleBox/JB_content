WEBVTT

00:00.000 --> 00:16.360
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.360 --> 00:20.880
This is episode 84, recorded on December 16, 2018.

00:20.880 --> 00:21.880
I'm Chris.

00:21.880 --> 00:22.880
And I'm Joe.

00:22.880 --> 00:23.880
Hello, Joe.

00:23.880 --> 00:25.040
It's good to be connected with you.

00:25.040 --> 00:27.600
We have a good batch of stories this week.

00:27.600 --> 00:33.000
One that, I got to say, our first story didn't think we'd be hearing maybe until Intel was

00:33.000 --> 00:34.520
on the ropes.

00:34.520 --> 00:37.960
But it looks like Intel could be working on open sourcing their FSP.

00:37.960 --> 00:42.560
Yeah, now, it's easy to get excited about this, but I do think we have to temper our

00:42.560 --> 00:48.160
expectations slightly because this is only the first talk of this.

00:48.160 --> 00:52.980
And it's not the only proprietary component that makes an Intel system boot.

00:52.980 --> 00:56.280
But it is a very good potential first step.

00:56.280 --> 00:57.280
Right.

00:57.280 --> 00:58.280
So just really quick.

00:58.280 --> 01:02.080
The FSP, just so everybody's on the same page, that stands for the Firmware Support Package.

01:02.080 --> 01:03.280
And you probably guessed what that does.

01:03.280 --> 01:07.800
It initializes the CPU, the memory controller, and some of the chipset stuff.

01:07.800 --> 01:10.520
It's a pretty important piece of an Intel motherboard.

01:10.520 --> 01:13.960
So it would be a big contribution if it was made open source.

01:13.960 --> 01:18.580
This information and this possibility is coming from Michael Laribel from Fronix, who was

01:18.580 --> 01:21.000
down at an Intel event.

01:21.000 --> 01:24.920
And some of what he saw at this event syncs up with my experience when I was on the Intel

01:24.920 --> 01:27.120
campus just a couple of months ago.

01:27.120 --> 01:31.720
And when I was there, I had a genuine sense, and I talked about this on Linux Unplugged,

01:31.720 --> 01:38.200
that Intel wanted to rebuild a bridge with the open source community after the fiasco

01:38.200 --> 01:43.600
that was Meltdown and Spectre and how some of those projects were or were not notified.

01:43.600 --> 01:46.980
And honestly, some of those projects, like the Linux kernel developers, that are still

01:46.980 --> 01:51.980
very frustrated with Intel for essentially making them fix their problem.

01:51.980 --> 01:58.280
And I had a distinct sense talking to the staff and watching their presentations that

01:58.280 --> 02:01.160
they are trying to look at ways of repairing that relationship.

02:01.160 --> 02:02.620
Well, that's the thing, though.

02:02.620 --> 02:07.080
Is this just paying lip service to the idea of open sourcing this stuff?

02:07.080 --> 02:09.680
Because it's not going to happen overnight, is it?

02:09.680 --> 02:17.040
And making positive noises to journalists like Michael is making us talk about it, right?

02:17.040 --> 02:18.040
Yeah, yeah.

02:18.040 --> 02:20.560
It also is a dangerous thing to play with, though, isn't it?

02:20.560 --> 02:26.680
He told Michael in the interview that we'll likely hear more in quarter one of next year.

02:26.680 --> 02:31.240
He indicates that they're getting customer demand for Intel to open this thing up.

02:31.240 --> 02:36.640
If that is retroactive on stuff that's shipping today or if it's only on future Intel products

02:36.640 --> 02:38.520
and boards, we don't know.

02:38.520 --> 02:42.440
But it sounds like if this is going to happen, we're going to hear more about it early next

02:42.440 --> 02:43.440
year.

02:43.440 --> 02:48.080
Well, something you have to consider is that Intel has about 16,000 people working on software

02:48.080 --> 02:55.680
alone, which is about twice the number of people who work at AMD in all departments.

02:55.680 --> 02:58.440
So they do have a huge software department over Intel.

02:58.440 --> 03:02.600
And of course, we know about Clear Linux, but that's not all they're working on over

03:02.600 --> 03:03.600
there.

03:03.600 --> 03:05.880
They haven't got all those people working on one distro.

03:05.880 --> 03:10.100
They're contributing a lot to the Linux kernel, and they need to stay relevant in the software

03:10.100 --> 03:13.040
world in order to sell their hardware.

03:13.040 --> 03:17.280
And really, the data center is where open sourcing things like the FSP are going to

03:17.280 --> 03:23.280
make the difference because people are taking security so seriously these days.

03:23.280 --> 03:29.880
And you just can't really be sure at the moment that your systems, all your servers are properly

03:29.880 --> 03:34.000
secure because it's running this proprietary code to boot them up.

03:34.000 --> 03:37.120
You can run completely free software thereafter.

03:37.120 --> 03:41.760
But if that processor needs this proprietary code, then you just have no idea, do you?

03:41.760 --> 03:47.240
And so it would be nice for us to have it on our machines, on our laptops and everything

03:47.240 --> 03:49.200
as a kind of byproduct of this.

03:49.200 --> 03:55.000
But I think really that's where this is focused and where we're going to see it first with

03:55.000 --> 03:59.200
the Xeons and stuff rather than the i3s and i5s and i7s.

03:59.200 --> 04:02.260
Yeah, I could definitely see this taking off in the data center first.

04:02.260 --> 04:03.260
That makes a lot of sense.

04:03.260 --> 04:07.920
And kind of going along with those large data center workloads, Intel also just released

04:07.920 --> 04:13.660
the Deep Learning Reference Stack, which they say is a highly tuned stack of Linux that's

04:13.660 --> 04:16.880
built for the cloud and the cloud-native environments.

04:16.880 --> 04:20.240
And you've probably guessed, it's built around clear Linux OS.

04:20.240 --> 04:25.480
Yeah, something we've been hearing an increasing amount about, and I think it's going to be

04:25.480 --> 04:27.400
the hot distro for next year.

04:27.400 --> 04:29.320
Bit of a spoiler for our predictions there.

04:29.320 --> 04:31.380
No, that's not actually one of my official predictions.

04:31.380 --> 04:32.820
Maybe it should have been.

04:32.820 --> 04:36.760
But yeah, this is kind of a little bit buzzword bingo, isn't it?

04:36.760 --> 04:43.040
But fundamentally, what Intel have done here is put together a stack, as they're calling

04:43.040 --> 04:49.720
it, of the various components needed to do this deep learning computing, which is essential

04:49.720 --> 04:52.480
to the kind of next phase.

04:52.480 --> 04:58.640
I suppose we're already into this phase, aren't we, of computing, that it's all about AI,

04:58.640 --> 05:05.440
and you need to do the learning to feed that AI in order to do all of the different applications

05:05.440 --> 05:06.440
that we need.

05:06.440 --> 05:08.680
Self-driving cars is the one that everyone goes for.

05:08.680 --> 05:09.680
Well, there's so many, though.

05:09.680 --> 05:11.240
I mean, there's so many things.

05:11.240 --> 05:12.240
It's not just self-driving cars.

05:12.240 --> 05:13.240
Yeah.

05:13.240 --> 05:18.640
I was really surprised by this, because this is so abstract to me.

05:18.640 --> 05:23.440
I don't do anything with machine learning or artificial intelligence, so to me, it doesn't

05:23.440 --> 05:27.160
seem like it's a real thing that's driving a lot of interest.

05:27.160 --> 05:30.320
But I was just at System76's factory.

05:30.320 --> 05:35.640
In fact, I just got back yesterday, and I had several side conversations with them.

05:35.640 --> 05:39.920
And one of the things that's driving them building these massive Thalia workstations

05:39.920 --> 05:44.160
is they are having new customers that want to get into machine learning that are coming

05:44.160 --> 05:48.840
to Linux because it's the best platform to do this, sort of like a lot of 3D printers

05:48.840 --> 05:51.320
have started selling Linux boxes.

05:51.320 --> 05:57.440
And the thing is these customers don't really know how to set this up.

05:57.440 --> 05:59.160
They're not normal Linux users.

05:59.160 --> 06:03.560
They're not familiar with how to install packages or use a Docker image, even.

06:03.560 --> 06:07.280
So the thing that Intel is trying to solve here is that particular problem.

06:07.280 --> 06:12.800
This clear Linux OS-based stack, it comes optimized, of course, for the Intel processors.

06:12.800 --> 06:16.920
But it's also set up and ready to work with TensorFlow and other tools that people are

06:16.920 --> 06:20.280
familiar with, even if they're not familiar with working with Linux.

06:20.280 --> 06:22.060
And that's the problem they're trying to solve here.

06:22.060 --> 06:26.920
That's really the same problem System76 is trying to solve with Pop OS and their metapackaging

06:26.920 --> 06:32.720
system where you can install things like TensorFlow or R and get going with machine learning,

06:32.720 --> 06:36.320
which is typically very hard to set up if you're new to Linux.

06:36.320 --> 06:37.640
The market is out there.

06:37.640 --> 06:40.080
It's just, to me, I'm blind to it.

06:40.080 --> 06:43.120
But I know that your buddy and mine, Wes Payne, likes to play around with the machine learning

06:43.120 --> 06:45.840
from time to time, likes to have himself a little machine learning.

06:45.840 --> 06:49.920
And from our chats, it sounds like Linux is really one of the best platforms to be doing

06:49.920 --> 06:50.920
this on.

06:50.920 --> 06:51.920
Yeah.

06:51.920 --> 06:52.920
Well, it's all math-based, isn't it?

06:52.920 --> 06:53.920
So, of course, he's going to be interested.

06:53.920 --> 06:54.920
Yeah.

06:54.920 --> 06:55.920
He is such a math geek.

06:55.920 --> 06:56.920
Yeah.

06:56.920 --> 06:58.760
And I mentioned self-driving cars there.

06:58.760 --> 07:01.260
Well, Uber have been pushing that forward.

07:01.260 --> 07:07.000
And they have now brought their Horovod project, which is distributed deep learning, to the

07:07.000 --> 07:09.680
Linux Foundation's Deep Learning Foundation.

07:09.680 --> 07:12.360
It's a little bit like Foundation Inception, that, isn't it?

07:12.360 --> 07:13.360
Yeah, it is.

07:13.360 --> 07:14.920
Foundation within Foundation.

07:14.920 --> 07:17.120
That seems to be their thing these days, a foundation for everything.

07:17.120 --> 07:21.600
But the LF Deep Learning Foundation has some serious players at least attached on their

07:21.600 --> 07:22.600
website.

07:22.600 --> 07:28.400
AT&T's on there, Red Hat, ZTE, Nokia, Intel's on there, and a bunch of others.

07:28.400 --> 07:32.800
And it seems like just since this Uber announcement about a month ago, other projects are throwing

07:32.800 --> 07:34.540
in now too.

07:34.540 --> 07:38.880
Some of them which are designed for cloud providers specifically, but a lot of them

07:38.880 --> 07:44.400
circle back to TensorFlow, including some contributions from Amazon and IBM and NVIDIA.

07:44.400 --> 07:47.800
Well, the reason this has got some attention this week is because it was kind of officially

07:47.800 --> 07:54.240
announced at the KubeCon and CloudNativeCon conference right there in Seattle, where you

07:54.240 --> 07:55.880
are.

07:55.880 --> 07:57.920
And you guys actually talked about that, didn't you?

07:57.920 --> 08:02.440
The Kubernetes side of things on TechSnap 392 this past week.

08:02.440 --> 08:03.560
Indeed, we did.

08:03.560 --> 08:06.760
We tried to cover some of the top stories out of there that you need to know about if

08:06.760 --> 08:09.880
you're just trying to stay up to date with Kubernetes.

08:09.880 --> 08:12.140
We didn't really bother explaining what Kubernetes is.

08:12.140 --> 08:14.000
We have an episode dedicated to that.

08:14.000 --> 08:16.760
So instead, we just tried to keep everybody up to date.

08:16.760 --> 08:19.980
It's sort of a newsier edition of the TechSnap program.

08:19.980 --> 08:22.080
But this is the way the industry is going now, isn't it?

08:22.080 --> 08:27.760
That we've got such powerful machines available, and the orchestration software is so good

08:27.760 --> 08:36.080
that you can do this distributed deep learning and push things forward to what feels like

08:36.080 --> 08:38.840
a kind of scary future.

08:38.840 --> 08:42.240
But the good part about it is it's all running Linux.

08:42.240 --> 08:43.240
That's true.

08:43.240 --> 08:48.080
I think, and a lot of the stuff at KubeCon this week that we talked about in TechSnap

08:48.080 --> 08:53.880
is also about just using multiple cloud providers, so that way you can distribute your risk.

08:53.880 --> 09:00.400
And also use those same exact tools to just manage your own boxes on premises.

09:00.400 --> 09:04.740
And to be able to go from on premises up to a cloud provider that might be two or three

09:04.740 --> 09:09.640
different cloud providers, but you're using one set of tools to deploy all those servers

09:09.640 --> 09:15.280
and to set up their software, set up their loads, set up the virtual machines, and manage

09:15.280 --> 09:21.360
and maintain them from one console across multiple cloud providers and your own local

09:21.360 --> 09:22.360
boxes.

09:22.360 --> 09:23.360
That's a big deal.

09:23.360 --> 09:28.880
But if you think about it, it's sort of helping avoid vendor lock-in into the cloud by becoming

09:28.880 --> 09:31.080
this common platform.

09:31.080 --> 09:33.920
And that's an interesting story, and that's one of the things we try to touch on.

09:33.920 --> 09:39.720
Well, that's very much the present and future of computing, but the past of it is 32-bit

09:39.720 --> 09:46.680
x86, which we've seen over the last couple of years, distro after distro abandoning.

09:46.680 --> 09:52.880
But there was kind of a bridge within Linux between 64-bit and 32-bit, which it looks

09:52.880 --> 09:55.640
like might well be going away sometime soon.

09:55.640 --> 09:59.480
Yeah, a bit of a shame that this didn't get more traction now that I've done some reading

09:59.480 --> 10:00.480
into this.

10:00.480 --> 10:04.760
I never really bothered because no distro really ships with support for this.

10:04.760 --> 10:10.000
But we're talking here about the x32 sub-architecture, and it did a neat trick.

10:10.000 --> 10:16.080
It was a software variant of x86-64, so it would run the processor in 64-bit mode, so

10:16.080 --> 10:19.920
you get the advantages of your CPU in 64-bit mode.

10:19.920 --> 10:23.880
But it would use 32-bit pointers and 32-bit math.

10:23.880 --> 10:30.940
The idea is to get the advantage of an x86-64 style system without the extra memory usage

10:30.940 --> 10:33.240
that goes along with it.

10:33.240 --> 10:38.120
But it came along about six years ago, and we were just a little too late at that point.

10:38.120 --> 10:42.480
Few distributions supported it, and the number of users that actually use it seems to be

10:42.480 --> 10:44.660
very small.

10:44.660 --> 10:49.520
So one of the kernel developers is now proposing to eventually remove it.

10:49.520 --> 10:54.280
And the way that process works in the Linux kernel is it gets flagged to broken or not

10:54.280 --> 10:55.280
supported.

10:55.280 --> 10:57.280
You've seen this if you've ever built your own kernel and gone through that menu.

10:57.280 --> 10:59.760
You'll see these, in big brackets, broken.

10:59.760 --> 11:00.760
They move it to broken.

11:00.760 --> 11:02.240
The idea is you're supposed to stop using it.

11:02.240 --> 11:06.000
It's no longer officially supported, and then it sort of phases out from there.

11:06.000 --> 11:07.600
Just imagine if this had taken off.

11:07.600 --> 11:11.800
You could run at least an extra Electron app with your 32 gigs of RAM.

11:11.800 --> 11:12.800
Yeah.

11:12.800 --> 11:13.800
Hey, that's good.

11:13.800 --> 11:14.800
You know?

11:14.800 --> 11:16.240
Maybe that'll keep it around.

11:16.240 --> 11:19.560
Or we'll all be running Fuchsia, and it won't matter, Joe.

11:19.560 --> 11:22.800
Yeah, we keep getting these teasers from Google about Fuchsia, don't we?

11:22.800 --> 11:28.560
And this week, it's that the Fuchsia SDK has shown up in the Android open source project.

11:28.560 --> 11:31.480
And there's also this mysterious Fuchsia device.

11:31.480 --> 11:36.880
Yeah, it almost feels like one shoe after another getting dropped here.

11:36.880 --> 11:43.120
In a commit posted this last week to Android's source code management system, two Fuchsia-related

11:43.120 --> 11:48.120
repos popped up in the manifest for the Android open source project.

11:48.120 --> 11:52.720
So if you're not familiar with that, the manifest is used to inform Google's download tools

11:52.720 --> 11:57.120
of what repo should be included with the base AOSP.

11:57.120 --> 11:58.680
So that's what that manifest file describes.

11:58.680 --> 12:02.000
And that manifest file was updated to include these new repos.

12:02.000 --> 12:08.080
So as part of that base AOSP now, you're getting these two different Fuchsia repos.

12:08.080 --> 12:11.680
And when you install the Android emulator, it will pull those things down.

12:11.680 --> 12:16.120
The two repos in question are still a little mysterious because they're essentially empty.

12:16.120 --> 12:17.640
But there is a couple of clues.

12:17.640 --> 12:22.920
One of them is platform Fuchsia SDK, which is pretty clear it's gonna be the SDK for

12:22.920 --> 12:24.000
Fuchsia.

12:24.000 --> 12:27.880
And it appears based on other posting, it's gonna be a huge repo.

12:27.880 --> 12:32.720
The second repo, which is the one Joe was just talking about, is the most interesting.

12:32.720 --> 12:37.200
That is the device Google Fuchsia repo.

12:37.200 --> 12:42.120
And that device is a Google created device that runs Fuchsia.

12:42.120 --> 12:46.440
And it's going to be managed by some sort of Android code base, maybe Android Studio

12:46.440 --> 12:47.960
itself in the emulator or something like that.

12:47.960 --> 12:53.200
In fact, it very likely could be the device that would be in the Android Studio emulator.

12:53.200 --> 12:57.040
That emulator actually has its own repo, its own device class in AOSP.

12:57.040 --> 13:01.200
So that could be what we're seeing here is they're preparing folks the ability to create

13:01.200 --> 13:04.440
applications on Fuchsia using Android Studio.

13:04.440 --> 13:05.920
Yeah, that was my read on it.

13:05.920 --> 13:07.400
It's not an actual device.

13:07.400 --> 13:12.320
It's this kind of virtual device in the emulator, which is a key part of development, isn't

13:12.320 --> 13:13.320
it?

13:13.320 --> 13:14.320
You need to have that in the emulator.

13:14.320 --> 13:18.440
And now it's just going to be part of Android open source projects.

13:18.440 --> 13:25.280
So that is kind of a, it seems like a small step, but it's also a giant leap at the same

13:25.280 --> 13:26.280
time.

13:26.280 --> 13:27.280
I don't know.

13:27.280 --> 13:31.040
It's very much, it's like if you see a construction project of a building, right?

13:31.040 --> 13:36.520
And once the actual building starts to go up, it's relatively quick, but there's a lot

13:36.520 --> 13:38.520
of groundwork goes into it first.

13:38.520 --> 13:43.400
The foundations and all the drainage and everything that's, you know, you're just looking at a

13:43.400 --> 13:45.840
construction site that's just doing nothing seemingly.

13:45.840 --> 13:52.960
And then bang, suddenly the building appears and that's what Google's been doing with Fuchsia.

13:52.960 --> 13:57.480
And this is one of those important steps and it's not a big flashy display, you know, we're

13:57.480 --> 14:02.240
not flashing it on a phone and checking it out and being able to make YouTube videos

14:02.240 --> 14:04.480
about it and all the rest of it.

14:04.480 --> 14:05.480
It's the plumbing, isn't it?

14:05.480 --> 14:07.520
It's the foundational work.

14:07.520 --> 14:08.520
Yeah.

14:08.520 --> 14:09.520
Yeah.

14:09.520 --> 14:14.320
And it also gives us an insight into what their strategy is going to be for developer

14:14.320 --> 14:15.640
adoption.

14:15.640 --> 14:17.360
And I think this is a cunning one.

14:17.360 --> 14:22.920
They're just apparently going to bake it into the existing tools that people already have

14:22.920 --> 14:28.200
for creating Android apps, which is also likely a clue that there's going to be some way to

14:28.200 --> 14:30.520
move Android applications over to Fuchsia.

14:30.520 --> 14:31.520
Well, yeah.

14:31.520 --> 14:34.320
Why force people to change the tools they're using?

14:34.320 --> 14:38.000
And they're almost sort of sneaking it in by the back door, aren't they?

14:38.000 --> 14:41.440
If you're keeping up to date with the tools that you've already been using, then it's

14:41.440 --> 14:43.640
suddenly just going to appear there.

14:43.640 --> 14:44.640
Yeah.

14:44.640 --> 14:47.520
I think our predictions episode is going to be a fun one this year.

14:47.520 --> 14:48.520
I got to say.

14:48.520 --> 14:52.600
I've been keeping a list and checking it twice and they're coming up soon for the holidays.

14:52.600 --> 14:55.080
I'm going to have to do some in Linux Unplugged, too.

14:55.080 --> 14:56.080
I don't know.

14:56.080 --> 14:58.040
I feel like I'm feeling confident about my predictions this year.

14:58.040 --> 15:01.120
Well, I'm going to give you another one and that's that we're not going to see an actual

15:01.120 --> 15:04.440
consumer device shipping with Fuchsia in 2019.

15:04.440 --> 15:05.440
It's too early.

15:05.440 --> 15:09.560
There's too much foundational plumbing work left to do and I don't think that that's going

15:09.560 --> 15:10.560
to happen this year.

15:10.560 --> 15:13.200
But that's an unofficial prediction that I'm not putting on the record.

15:13.200 --> 15:14.200
All right.

15:14.200 --> 15:17.780
If it was on the record, I'd argue, what about beta builds for Pixel devices?

15:17.780 --> 15:22.000
But that's maybe a conversation for a different show because we still have new software to

15:22.000 --> 15:23.000
talk about.

15:23.000 --> 15:28.920
Our cousins over at the FreeBSD project have the brand new FreeBSD 12 they've released

15:28.920 --> 15:31.960
and there's really something in here for just about every BSD user.

15:31.960 --> 15:35.540
This does feel like it's not like a huge flashy release, is it?

15:35.540 --> 15:36.920
This 12.0.

15:36.920 --> 15:42.000
It's much more of a they've improved various small bits.

15:42.000 --> 15:48.000
It kind of almost reminds me of elementary OS where you had that ridiculously long post

15:48.000 --> 15:54.240
for Juno where it was just so many small features that add up to something huge.

15:54.240 --> 15:57.680
And that's kind of how this FreeBSD release feels to me.

15:57.680 --> 16:01.080
It's not like this huge showstopping release, is it?

16:01.080 --> 16:02.080
Yeah, it's kind of like I was saying.

16:02.080 --> 16:03.600
There's something there for every BSD user.

16:03.600 --> 16:07.680
If I was a BSD user, the couple of things that I like are the improvements to Beehive

16:07.680 --> 16:14.320
so you can do NVMe device emulation and they've also now have the ability to run Beehive,

16:14.320 --> 16:17.800
which is their kind of KVM competitor, their virtualization system.

16:17.800 --> 16:20.720
You can run it itself within a jail, which is pretty nice.

16:20.720 --> 16:22.400
That's a cool security feature.

16:22.400 --> 16:26.500
And packet filter is now usable within jails and they have a great packet filter system.

16:26.500 --> 16:30.040
So there's just a ton of stuff in here, but our buddies over at the BSD show, they did

16:30.040 --> 16:34.800
a real good coverage on it over at BSD Now episode 276.

16:34.800 --> 16:40.120
They did a full, as you would expect, a BSD Now style full rundown of the new release.

16:40.120 --> 16:46.260
And come on, let's not forget the most important feature, KDE 5.12.5, which is the LTS but

16:46.260 --> 16:50.000
not quite the latest point release, but you know, it's BSD, we'll forgive them.

16:50.000 --> 16:51.120
Yeah, that's actually not bad.

16:51.120 --> 16:55.600
You could get a nice modern plasma LTS desktop on free BSD.

16:55.600 --> 16:58.640
Nothing wrong with that if Linux doesn't float your boat.

16:58.640 --> 17:01.040
Yeah, it's not for me, I'm afraid.

17:01.040 --> 17:04.920
Yeah, but you know, it probably makes a decent XFCE workstation there, Joe.

17:04.920 --> 17:07.200
Yeah, I might have to check that out actually.

17:07.200 --> 17:08.200
I don't know.

17:08.200 --> 17:12.400
I'm happy enough with the mix, but yeah, I thought we'd better give a shout out to our

17:12.400 --> 17:13.400
BSD cousins.

17:13.400 --> 17:20.640
And go check out BSD Now 276 for their completely in-depth take on the new release.

17:20.640 --> 17:25.060
And check out linuxactionnews.com slash subscribe for all the ways to get new episodes of this

17:25.060 --> 17:26.060
here show.

17:26.060 --> 17:29.440
And go to linuxactionnews.com slash contact for ways to get in touch with us.

17:29.440 --> 17:36.380
And for you Linux Academy students, from December 16th through December 26th, 2018, Linux Academy

17:36.380 --> 17:42.000
is donating $1 to St. Jude Children's Research Hospital for each learning activity that you

17:42.000 --> 17:43.000
complete.

17:43.000 --> 17:48.320
So you can help others while learning at the same time and also earn gems on the platform.

17:48.320 --> 17:54.280
Yeah, great way to avoid your relatives learning some useful stuff and helping out some children.

17:54.280 --> 17:58.520
Right, so we'll be back next Monday with our end of year review.

17:58.520 --> 17:59.520
Looking forward to that.

17:59.520 --> 18:01.360
I am at Chris LAS.

18:01.360 --> 18:03.000
I'm at Joe Ressington.

18:03.000 --> 18:05.880
Thank you for joining us and we will see you next week.

18:05.880 --> 18:21.880
Have a great night, y'all, and have a great night, y'all, and have a great night, y'all.

18:21.880 --> 18:38.280
Bye.

