Hello, and welcome to Linux Action News, episode 263, recorded on October 19, 2022. I'm Chris.
And I'm Wes.
Hello, Wes. Let's do the news.
We start this week with Google solving the big problem of not having enough operating
systems. Called KataOS and aimed at what Google calls secure embedded systems running ambient
machine learning workloads.
I think I dig their jive here, though. It's, it's a new OS for a new type of workload with
a different focus. We'll get into this. They want something that is hyper focused on the
embedded hardware that is doing what they call this ambient machine learning, kind of
always monitoring the environment, taking in data constantly, sensors galore. And on
top of that, they want to build it with some modern technologies that are a little more
verifiable, and a little more hip and their announcement they write, KataOS provides a
verifiably secure platform that protects users privacy, because it's logically impossible
for applications to breach the kernels hardware security protections, and the system components
are verifiably secured. KataOS is also implemented almost entirely in rust, which provides a
strong starting point for software security, since it eliminates an entire class of bugs,
such as off by one errors and buffer overflows.
Guess that means fuchsia is old and busted now, or maybe just destined for smart speakers.
KataOS on the other hand, well, it's part of Google's Project Sparrow, which is something
of a demonstration project, which combines KataOS with a secured hardware platform built
on top of RISC-V. The GitHub repo for KataOS, well, it's been extant for a couple of months
now, but as we record, just two days ago, it was updated with a full readme and a lot
more details. We'll have a link for the curious in the show notes. The current GitHub
release, well, it includes most of the KataOS core pieces to hear it from Google, including
the frameworks they use for Rust, an alternate root server written in Rust, and more. Google
also says their goal is to open source all of Project Sparrow when the time is right.
But in the meantime, they're focusing a lot on KataOS and how it's built and how what
they say it's critical for this new generation of embedded devices that are going to collect
this data constantly. They must be what Google says, quote, mathematically proven to keep
the data secure. In this case, Google's trying to meet those lofty goals by building on top
of SEL4, which is an advanced microkernel that's been notable for having comprehensive
formal verification, way beyond what any popular commercial operating system is really using
these days, and doing so without compromising performance, at least to hear the project
talk about it. Then on top of your small verifiable microkernel, they use a framework called
Camkiz to build all of your system components. That's because Camkiz, well it's a software
development and runtime framework designed to build secure microkernel based operating
systems.
They might be on to something here. And some of that is really what draws I think a bright
distinction line between say, Fuchsia and CataOS or what exists out there today is they're
really bringing all of this together.
All the exciting technology aside, the real question here with any Google platform or
operating system, how much adoption will this see outside of Google? And how much support
will it get once it's no longer a fun new research project? Well, of course, only time
can tell on that one. But why not send us a boost with your best guess?
Security researchers in Germany alerted the SUSE development team to buffer overwrite
issues they found in the Linux kernel that they could trigger just with Wi-Fi packets.
The SUSE team quickly then informed the Linux kernel security team who jumped into action.
During the team's research, aided by Intel, they found multiple problems in the WLAN stack,
also exploitable over the air.
Now we don't have all the details just yet, but looking at the commit series, it seems
the code that got fixed all came from the first quarter of 2019 with the bulk of the
issues being introduced in the 5.1 or 5.2 kernel. So unfortunately, I think that means
these flaws have likely shipped in plenty of distributions by now.
Yeah, we've got five separate CVEs related to this by my account. The good news is Linus
has already merged the patches in the Linux 6.1, which just hit RC this weekend. We'll
have more details on that in a few minutes. But also, you're going to have to wait for
distro makers who will need to backport those fixes to their kernels that aren't based
on 6.1, at least not yet. And well, I just have a terrible feeling for all those Android
users out there who are maybe lucky enough to get Android based on Linux 5. I just doubt
they're going to see any updates for this. And they're walking around scanning for Wi-Fi
all the time.
Really all Linux users will need to be vigilant when using Wi-Fi these days. A buffer override
triggered remotely by a malicious Wi-Fi packet. Yeah, that's no fun. The most serious flaw
here, it seems to be triggered when just scanning for open APs.
Now as for public exploits that people have seen actually in the wild, none have been
spotted so far. But it won't take long. There are several proofs of concepts that are posted
online on GitHub and various places shared in security threads. They're getting linked
around already. I was able to find a fully working tool rather quickly this morning when
doing a little research for this story.
So that's what's been happening with my laptop. Garnet, Chris. Now on the plus side, we do
expect patches to get backported pretty quickly. So good time to keep an eye on your updates.
Mozilla has given us a reason to cover Firefox this week. A brand new version 106 is getting
a lot of attention by most people for its much improved PDF viewer. And it does have
support now for text writing, drawing and signatures.
And I'll be honest, that sounds pretty nice. But what we think is fantastic are the improvements
to the Fox's WebRTC capabilities. Firefox is now using LibWebRTC 103 with better screen
sharing support for Wayland users and lower CPU usage. Also on Wayland, Firefox 106 now
has gesture support for swiping right or left to go back and forwards in the browser.
You know, if we're honest, Firefox's lagging WebRTC has been a bit of a challenge for us
here at Jupiter Broadcasting. And I've got to imagine for all of you out there also living
the virtual meeting lifestyle.
Yeah, seeing them get up to date on that LibWebRTC library, I think is great. That was an area
where I felt like Firefox was lagging behind the Chromium based browsers, and otherwise
has been crushing it recently. Also in web browser news this week, the impervious browsers
public alpha was released and as of now, it's only available for Mac and Linux platforms.
This new browser bills itself as a suite of peer to peer tools for various things like
communication, data transport, payments, that sort of stuff. It's all built directly into
the web browser along with a secure messenger, support for group video calls, live collab
doc editing, decentralized identities, and even Bitcoin lightning support. I'm not sure
really where this one's going, but they're offering an awful lot and you can find out
more at impervious.ai and we'll have a link to the project's GitHub in the notes.
If all goes as planned, Fedora 37 is scheduled to release mid next week, and the project
is throwing a virtual release party. Good news, you're invited. The project says that
the virtual release party is a great way to learn more about the latest Fedora Linux
release, but more importantly, it's your chance to spend time with the wonderful Fedora community.
They hope to include informational sessions that will feature updates about things like
Fedora Core OS, the new installer interface preview, and let you meet some new project
members. The event takes place on November 4th and 5th. Registration is free, and of
course, we'll have a link in the notes.
Linode.com slash LAN. Go there to get $100 in 60-day credit on a new account, and it's
a great way to support the show. Linode is fast, reliable cloud hosting, and they've
been a longtime sponsor of Linux Action News because our audience loves Linode. They become
passionate customers once they sign up. It's why we run everything over there because we
love it too. Everything we've built in the last couple of years that runs in the cloud,
it runs on Linode. I think the best part is how they've built their business up. Over
19 years nearly, they've had to just build a really good competitive business. That means
things like their support department have real humans all day, every day. That means
their system performs, right? All their systems, their network connections, the hard drives,
the CPUs, even their GPU rigs, which I just recently had the fortune to actually try one
out. And they're 30% to 50% cheaper than the hyperscalers out there that want to lock you
into their crazy esoteric platforms with their crazy names for everything. And I think they
outperform all of those hyperscalers, and independent studies have shown that as well.
With that $100, you can go find out for yourself. Today, Linode has 11 data centers and a dozen
more coming next year with great features such as object storage and cloud firewalls
and backups and Kubernetes and Terraform support and so much more, as well as one-click deployments
for things like Nextcloud, game servers, blog servers, web servers, control panels, their
marketplace is packed full of good stuff. So go try something. Go learn something. Go
build something and try it out while you support the show. Linode.com slash LAN. That's Linode.com
slash LAN.
And a thank you to Kalyde. Kalyde.com slash LAN. Kalyde is endpoint security that uses
the most important, powerful, untapped resource in IT, the end users. When you're trying to
achieve security goals for yourself, for a new boss, for an auditor, been there. The
conventional wisdom has been to lock every single device down, old school style, like
MDMs that force disruptive agents onto employees' devices that make them run slow or sometimes
incompatible with apps and often introduce security issues of their own. You know it's
true. It's like the old way of doing IT, and it puts IT and end users kind of at odds.
Kalyde does things differently. Instead of forcing changes on users, Kalyde sends them
security recommendations via Slack. Kalyde will automatically notify your team when their
devices are insecure and then give them step by step instructions on how to solve that
problem. And by reaching out to employees via a friendly Slack DM and educating them
about company policies, Kalyde helps you build a culture in which everyone contributes to
security because everyone understands how and why to do it. And for IT admins, Kalyde
gives you a dashboard for days. You can monitor the security of your entire fleet. It can
be on Macs, Windows, and of course, beautiful Linux. You can see at a glance which employees
have their disks encrypted, if they have their OS updates installed, a password manager,
etc. Just making it easy to run reports and prove compliance to your auditors, customers,
leadership, and yourself. So that's Kalyde. User-centered, cross-platform, endpoint security
for teams that slack. You can meet your compliance goals by putting users first.
Just visit Kalyde.com slash LAN to find out how. You go there, you sign up for a free
trial, they're going to hook you up with a goody bag that includes a t-shirt. I don't
know if that t-shirt has a picture of my face on it. I wouldn't expect that. I don't know
why you thought it would. But you get one when you go to Kalyde.com slash LAN and you
activate a free trial. That's K-O-L-I-D-E.com slash L-A-N.
We wrap up today by looking ahead a bit at the Linux 6.1 release and the path to get
there. It seems Linus has been getting just a bit frustrated with all the last minute
commits coming in this time around, writing, quote, let me just say, that after I got my
machine sorted out, caught up with the merge window, I was somewhat frustrated with various
late pull requests. I've mentioned this before, but it's really quite annoying to get quite
a few pull requests in the last few days of the merge window.
He then continued with a bit more insight into why he can find it just so annoying.
He says, quote, yes, the merge window is two weeks, but that's very much to allow me time
to look things over. Not two weeks to hurriedly put together a branch that you send to Linus
on Friday of the second week. The whole do an all nighter to get the paper in the day
before the deadline is something that should have gone out the window after high school.
Not for kernel development.
Well we do want our kernel developers to be healthy, happy, and well rested. Linus also
seems to be trying to manage expectations a little around Rust. While true, 6.1 will
feature initial Rust support, he describes that support as, quote, the initial Rust scaffolding,
no actual real Rust code in the kernel yet, but the infrastructure is there.
Yeah, and that seems fair and probably a good idea. We saw things get really crazy with
the 6.0 cycle when it sounded like maybe the initial Rust support would get in there and
then they pulled way back when we discovered it wouldn't land in there. And I think we
need to set the expectations here. This is just the beginning of Rust support, but we
really will probably get pretty excited when something is actually written in Rust shipping
inside the kernel. That's probably the moment to really celebrate.
You know, once we can use a driver, say, that's written in Rust on some real hardware we have
in front of us, perhaps?
Yeah, exactly. So the stuff in 6.1 that we're going to dig into will probably be the things
that we suspect will impact day to day Linux users the most. There's a lot of work going
into improve AMD platforms on Linux, specifically the Zen4 processors. And of course, one of
the big ones for us is the improvements to ButterFS. Kernel 6.1 introduces async buffer
writes with more than twice the throughput for file operations.
We've also seen some chatter that 6.1 might just end up as the next LTS release of the
kernel, which could be just in time for a future Debian stable release, among others.
After being prompted on the kernel mailing list, Linux stable maintainer Greg Groh-Hartman
commented, I usually pick the, quote, last kernel of the year, and based on the regular
release cycle, yes, 6.1 will be that kernel. But I can't promise anything until it's released
for obvious reasons.
Fair enough. Linux 5.15 LTS is last year's long term kernel version. That is currently
set to be maintained through October 2023. Now that can be extended if there's enough
interest and people that are willing to help Greg maintain that. And if Linux 6.1 did become
the next LTS, that would be supported at least through December 2025. So if everything stays
on course with the current development cycle for 6.1, we will likely see the final version
ship either December 4th or 11th of 2022. So we'll just keep an eye on all of this because
it's moving fast and there's a lot still to be worked out. And we'll share the relevant
updates on the kernel and everything else going on in the world of Linux and open source.
So check out linuxactionnews.com slash subscribe for all the ways to get every episode. And
linuxactionnews.com slash contact for ways to get in touch. And we just recently reviewed
the newly updated Thaleo workstation from system 76. Go check out our review in Linux
Unplugged 480. We'll be back next week with our take on the latest Linux and open source
news.
