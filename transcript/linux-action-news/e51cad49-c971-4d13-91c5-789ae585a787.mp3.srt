1
00:00:00,000 --> 00:00:08,960
Hello and welcome to Linux Action News, episode 171 recorded on January 10th, 2021.

2
00:00:08,960 --> 00:00:09,960
I'm Chris.

3
00:00:09,960 --> 00:00:10,960
And I'm Wes.

4
00:00:10,960 --> 00:00:11,960
Hello, Wes.

5
00:00:11,960 --> 00:00:12,960
Let's do the news.

6
00:00:12,960 --> 00:00:17,520
And let's start with a story we previously covered on Linux Action News 143, which is

7
00:00:17,520 --> 00:00:21,600
that LTS versions of Qt aren't going closed source.

8
00:00:21,600 --> 00:00:24,400
Now, it's actually finally happening.

9
00:00:24,400 --> 00:00:28,080
As you might expect, this has gotten a lot of upset in the community, even though we

10
00:00:28,080 --> 00:00:31,080
did know this was coming.

11
00:00:31,080 --> 00:00:32,080
It's kind of important.

12
00:00:32,080 --> 00:00:33,760
Qt has become really important.

13
00:00:33,760 --> 00:00:37,760
I mean, not only is it the basis for the Plasma desktop, but in general, it's an application

14
00:00:37,760 --> 00:00:41,920
framework that's available under an open source and a commercial license.

15
00:00:41,920 --> 00:00:46,980
And it was around a year ago that the Qt company stated its plan to make the LTS releases commercial

16
00:00:46,980 --> 00:00:52,420
only, along with some other changes designed to encourage open source users to contribute

17
00:00:52,420 --> 00:00:54,560
or or buy a license.

18
00:00:54,560 --> 00:01:00,320
Yeah, we learned more about this in a mailing list post from a senior VP over at the Qt

19
00:01:00,320 --> 00:01:06,040
company who wrote that with Qt 6 released and the first patch release coming soon, it's

20
00:01:06,040 --> 00:01:11,980
time to enter the commercial only LTS phase for Qt 5.15 LTS.

21
00:01:11,980 --> 00:01:16,960
All the existing branches remain publicly visible, but they will be closed for new commits.

22
00:01:16,960 --> 00:01:21,680
Now, closing happened on the 5th of January, and they've actually set up a separate internal

23
00:01:21,680 --> 00:01:25,680
repository for any cherry picks and changes that need to go in.

24
00:01:25,680 --> 00:01:28,500
But you'll need a commercial license to get to that.

25
00:01:28,500 --> 00:01:34,880
So in addition to getting the full releases of these additional like 5.15.3 upcoming LTS

26
00:01:34,880 --> 00:01:40,000
patch release, you can also go get individual commits if you need to and if you've paid.

27
00:01:40,000 --> 00:01:44,280
Now, the source code to Qt 5.15 is out there.

28
00:01:44,280 --> 00:01:46,800
It came out in May of 2020.

29
00:01:46,800 --> 00:01:52,480
It remains available for developers to use, but the Qt company themselves won't be making

30
00:01:52,480 --> 00:01:54,640
future additions available for free.

31
00:01:54,640 --> 00:01:59,040
That doesn't mean that open source maintainers can't fix a bug or a security issue that comes

32
00:01:59,040 --> 00:02:00,460
along.

33
00:02:00,460 --> 00:02:06,200
But it does mean until they adopt Qt 6, we essentially have double the work for fixing

34
00:02:06,200 --> 00:02:07,200
bugs.

35
00:02:07,200 --> 00:02:11,660
And I think the core issue here is that essentially Qt 6 doesn't support many of the add on modules

36
00:02:11,660 --> 00:02:14,020
that can be found in 5.15.

37
00:02:14,020 --> 00:02:18,840
There's a lot of cleanup work and refactoring that's still intended to be done for Qt 6

38
00:02:18,840 --> 00:02:19,840
as well.

39
00:02:19,840 --> 00:02:23,160
So it's not really in a state where developers are going to want to adopt it, especially

40
00:02:23,160 --> 00:02:24,800
for something like Plasma.

41
00:02:24,800 --> 00:02:30,600
And much like when Qt 5 came along, it wasn't until like 5.2 or 5.3 that the Plasma desktop

42
00:02:30,600 --> 00:02:32,720
actually started adopting it.

43
00:02:32,720 --> 00:02:34,040
You'll probably see the same thing here.

44
00:02:34,040 --> 00:02:39,540
It's going to take Qt 6.2 or 6.3 before developers are really comfortable maintaining it.

45
00:02:39,540 --> 00:02:42,860
And that means in the meantime, Wes, unless I'm misunderstanding something here, they're

46
00:02:42,860 --> 00:02:47,360
essentially just running on unsupported quote unquote version of Qt.

47
00:02:47,360 --> 00:02:49,000
Well they have to support it themselves at least.

48
00:02:49,000 --> 00:02:50,000
Right.

49
00:02:50,000 --> 00:02:53,400
That's that's the choice is while you're working on getting to the next major release, which

50
00:02:53,400 --> 00:02:56,840
has perhaps some breaking changes, just some new updates, some missing stuff you've got

51
00:02:56,840 --> 00:03:02,440
to provide filler for, you also have to decide, well, am I just not touching anything that

52
00:03:02,440 --> 00:03:03,800
I'm currently running on?

53
00:03:03,800 --> 00:03:05,280
Or are there bugs that need to be fixed?

54
00:03:05,280 --> 00:03:08,940
And if so, that's additional time taken away from development to catch up with the new

55
00:03:08,940 --> 00:03:10,000
major release.

56
00:03:10,000 --> 00:03:13,600
So you've got to wonder, maybe this time around, it'll take even a little longer.

57
00:03:13,600 --> 00:03:16,720
Yeah, so it's not an ideal situation for developers.

58
00:03:16,720 --> 00:03:19,840
For end users, I don't think it's going to really impact you much.

59
00:03:19,840 --> 00:03:23,800
The desktop environment and application developers are going to pretty much insulate you from

60
00:03:23,800 --> 00:03:25,300
this transition.

61
00:03:25,300 --> 00:03:32,600
And one nice thing is Qt 5.15 does a lot of the early work to get your application or

62
00:03:32,600 --> 00:03:35,180
whatever it might be ready for Qt 6.

63
00:03:35,180 --> 00:03:40,120
So if in the meantime, developers spend that time just getting up to Qt 5.15, which is

64
00:03:40,120 --> 00:03:48,060
the current last five series, if they just get in to just decent shape with 5.15, they're

65
00:03:48,060 --> 00:03:52,180
going to be in a really good position to transition to Qt 6 when the community does decide to

66
00:03:52,180 --> 00:03:55,080
make that transition because that early legwork will have been done.

67
00:03:55,080 --> 00:03:56,760
This is all definitely new.

68
00:03:56,760 --> 00:04:00,020
You can tell that in some of the tones on the mailing list and just in the fact that

69
00:04:00,020 --> 00:04:01,540
there are so many unknowns.

70
00:04:01,540 --> 00:04:06,600
Now I'm sure we'll be reporting on this again in future Qt releases.

71
00:04:06,600 --> 00:04:12,280
Switching over to the GNOME and GTK side of the Linux desktop, there's been a lot of feedback

72
00:04:12,280 --> 00:04:15,800
and criticism about changes coming in GNOME Shell 40.

73
00:04:15,800 --> 00:04:20,260
Alan Day has authored a blog post that we will have a link to in the show notes that

74
00:04:20,260 --> 00:04:25,720
addresses a lot of the comments, a lot of the concerns, and shows the latest development

75
00:04:25,720 --> 00:04:27,720
snapshot of what they're working on.

76
00:04:27,720 --> 00:04:31,200
And it's probably worth visiting the show notes for this link if you're interested because

77
00:04:31,200 --> 00:04:33,040
there's a video in bed.

78
00:04:33,040 --> 00:04:37,000
And I think he's really trying to address all of the criticism and kind of explain the

79
00:04:37,000 --> 00:04:39,400
rationale as best he can.

80
00:04:39,400 --> 00:04:41,040
And I think he won me over.

81
00:04:41,040 --> 00:04:46,320
Reading through this, Wes, I feel like the GNOME team is listening and is even kind of

82
00:04:46,320 --> 00:04:49,800
changing what they had planned a little bit to address some of the feedback.

83
00:04:49,800 --> 00:04:55,200
Yeah, I mean, to quote Alan, a good portion of the comments that we've had about the design

84
00:04:55,200 --> 00:04:59,520
reflect concerns about existing workflows being disrupted.

85
00:04:59,520 --> 00:05:04,280
We understand these concerns, and an effort has been made to limit the scale and disruptiveness

86
00:05:04,280 --> 00:05:06,320
of the updated design.

87
00:05:06,320 --> 00:05:10,900
And as a result, the changes that are being introduced are actually quite limited.

88
00:05:10,900 --> 00:05:14,680
Everything about the shell remains the same, except for the overview.

89
00:05:14,680 --> 00:05:15,680
Right.

90
00:05:15,680 --> 00:05:20,840
And he also touches on that they're improving the touchpad gestures, so if you have a laptop

91
00:05:20,840 --> 00:05:26,080
with a touchpad, you'll be able to navigate the GNOME Shell better.

92
00:05:26,080 --> 00:05:29,760
The personalized app grid that's coming, the fact that app icons will be in the window

93
00:05:29,760 --> 00:05:33,840
overview, and they've improved the app titles just in general in GNOME 40, which will show

94
00:05:33,840 --> 00:05:36,800
the full title now when you're hovering over its launcher.

95
00:05:36,800 --> 00:05:40,640
You bring all these improvements together, and I really like what he's talking about.

96
00:05:40,640 --> 00:05:45,640
But here's the fundamental difference between GNOME and Plasma.

97
00:05:45,640 --> 00:05:49,080
If this was a Plasma change, they'd take this feedback in and they'd say, all right, we're

98
00:05:49,080 --> 00:05:51,320
just going to leave both options available.

99
00:05:51,320 --> 00:05:53,400
We're going to default to this new behavior.

100
00:05:53,400 --> 00:05:57,360
But if you already have it set the old way, or you want to set it that way, that's just

101
00:05:57,360 --> 00:05:58,360
fine with us.

102
00:05:58,360 --> 00:06:00,840
And honestly, I think I prefer that.

103
00:06:00,840 --> 00:06:03,800
It is nicer from a user experience perspective.

104
00:06:03,800 --> 00:06:04,800
I get that, right?

105
00:06:04,800 --> 00:06:05,800
You don't have to change.

106
00:06:05,800 --> 00:06:06,800
You don't have to keep up with it.

107
00:06:06,800 --> 00:06:12,520
But on the other side, it can be a major pain, and we also all love to complain when things

108
00:06:12,520 --> 00:06:16,400
go wrong, when things crash, or just when the new features we really do want are delayed

109
00:06:16,400 --> 00:06:21,320
in development, and keeping things nice and trim and, you know, focusing on one way of

110
00:06:21,320 --> 00:06:22,320
doing it.

111
00:06:22,320 --> 00:06:23,560
And that certainly simplifies.

112
00:06:23,560 --> 00:06:25,320
Yeah, I definitely understand.

113
00:06:25,320 --> 00:06:29,680
And it's less like quality testing they have to do and whatnot, because there's different,

114
00:06:29,680 --> 00:06:32,560
you know, there's less code pass, there's less ways for things to be displayed on the

115
00:06:32,560 --> 00:06:33,560
screen.

116
00:06:33,560 --> 00:06:34,560
And it's simpler overall.

117
00:06:34,560 --> 00:06:36,080
I mean, I grok all of that.

118
00:06:36,080 --> 00:06:39,980
But with open source software, I feel like in some cases, we don't always have to make

119
00:06:39,980 --> 00:06:43,500
these dramatic all but all or nothing changes.

120
00:06:43,500 --> 00:06:49,180
If we could rally the support for supporting both ways, and people are willing to contribute

121
00:06:49,180 --> 00:06:53,360
their time, it would be nice if there was a facility or a way for the project to entertain

122
00:06:53,360 --> 00:06:54,360
the idea.

123
00:06:54,360 --> 00:06:58,520
It's not like corporate software development, where everything has to, you know, equal a

124
00:06:58,520 --> 00:06:59,880
certain return on value.

125
00:06:59,880 --> 00:07:02,960
And you can only have so many developers on a project, because otherwise, they're not

126
00:07:02,960 --> 00:07:05,280
getting enough return on that.

127
00:07:05,280 --> 00:07:07,420
And with open source, it's not that way at all.

128
00:07:07,420 --> 00:07:11,240
You could have people that just want to keep something alive, or just want to have a certain

129
00:07:11,240 --> 00:07:12,240
work.

130
00:07:12,240 --> 00:07:15,240
I mean, that's why Maté exists in the first place, right?

131
00:07:15,240 --> 00:07:18,760
And it just seems like we could have that flexibility, and it feels like maybe the plasma

132
00:07:18,760 --> 00:07:21,440
project would be a little more willing to consider that.

133
00:07:21,440 --> 00:07:25,300
But you do open yourselves up to who's going to maintain that, right?

134
00:07:25,300 --> 00:07:30,800
And perhaps if internally, if in the regular contribution community, there were a push

135
00:07:30,800 --> 00:07:33,920
for that, then perhaps you could have that argument.

136
00:07:33,920 --> 00:07:39,320
Right now, Alan notes that, well, they're not planning on supporting keeping it around

137
00:07:39,320 --> 00:07:41,840
the old design at all, mostly because of the work.

138
00:07:41,840 --> 00:07:44,880
So perhaps if people stepped in to contribute that work, that could change.

139
00:07:44,880 --> 00:07:47,840
But there could be community extensions, everyone's favorites.

140
00:07:47,840 --> 00:07:51,940
They do say that they're happy to work with extension developers to help make this happen.

141
00:07:51,940 --> 00:07:56,040
Maybe keep something like a vertical dash of your desktops on the side instead, or where

142
00:07:56,040 --> 00:07:57,840
your icons are.

143
00:07:57,840 --> 00:07:59,680
Those all seem like plausible options.

144
00:07:59,680 --> 00:08:00,940
That's a pretty solid compromise.

145
00:08:00,940 --> 00:08:05,800
If they're willing to be essentially even just non-hostile towards an extension developer,

146
00:08:05,800 --> 00:08:10,240
reverting the behavior, if they don't take that as a slight or an insult to their design,

147
00:08:10,240 --> 00:08:12,240
that's a pretty big win.

148
00:08:12,240 --> 00:08:15,160
And that kind of facilitates what I said, somebody who has the passion could make that

149
00:08:15,160 --> 00:08:17,800
extension and maintain it and problem solved.

150
00:08:17,800 --> 00:08:20,480
I like that they're at least open with the idea.

151
00:08:20,480 --> 00:08:25,240
Also, if you are a crazy user like me and you have a couple of vertical screens, it

152
00:08:25,240 --> 00:08:29,240
appears that they're doing work to make sure all of this new stuff, the overview stuff,

153
00:08:29,240 --> 00:08:31,080
works just fine on vertical displays as well.

154
00:08:31,080 --> 00:08:34,680
I was happy to see that because people have given them a hard time for being so touched

155
00:08:34,680 --> 00:08:35,680
focused.

156
00:08:35,680 --> 00:08:38,560
But when you look at some of these design decisions, it actually seems like it's going

157
00:08:38,560 --> 00:08:41,880
to make it work a lot better as a desktop show.

158
00:08:41,880 --> 00:08:45,940
I think that might be a side benefit of keeping things simple, too, is it's clear here that

159
00:08:45,940 --> 00:08:51,160
they're doing a lot of testing and thinking and exploring and all of that is time constrained.

160
00:08:51,160 --> 00:08:54,140
Where we go from here, though, is they're going to develop this in a branch with the

161
00:08:54,140 --> 00:08:59,680
new design, open it up to testing, have a quote unquote intensive period of bug fixing

162
00:08:59,680 --> 00:09:04,320
and evaluation prior to any UI freeze, somewhere in about a month's time.

163
00:09:04,320 --> 00:09:07,640
So more to come soon.

164
00:09:07,640 --> 00:09:11,720
Linode dot com slash land, go there to get a one hundred dollar 60 day credit towards

165
00:09:11,720 --> 00:09:14,560
a new account and go there to support the show.

166
00:09:14,560 --> 00:09:19,800
Linode is our cloud hosting provider and just this weekend we spun up a brand new instance

167
00:09:19,800 --> 00:09:22,240
and I think this one could have some real mileage.

168
00:09:22,240 --> 00:09:24,840
At first we just wanted to test PeerTube 3.0.

169
00:09:24,840 --> 00:09:25,840
New release came out.

170
00:09:25,840 --> 00:09:29,560
We're going to talk about it in the show and we wanted to have some hands on experience.

171
00:09:29,560 --> 00:09:32,340
Linode makes it so simple to do this kind of thing.

172
00:09:32,340 --> 00:09:37,840
We had an Ubuntu LTS 2004 machine deployed in probably about three minutes and then you're

173
00:09:37,840 --> 00:09:41,000
up and going with an SSH session pretty quick after that.

174
00:09:41,000 --> 00:09:46,520
We deployed the software and within moments, really, from just from idea to execution,

175
00:09:46,520 --> 00:09:47,520
we're done.

176
00:09:47,520 --> 00:09:52,780
And when you start to use it, you start realizing this has some potential and Linode makes it

177
00:09:52,780 --> 00:09:57,520
really easy for even a group like us who may have some traffic on an instance like this

178
00:09:57,520 --> 00:09:58,700
to easily manage it.

179
00:09:58,700 --> 00:10:01,280
They have node balancers to help with the traffic.

180
00:10:01,280 --> 00:10:04,080
Additionally, Linode has object storage.

181
00:10:04,080 --> 00:10:09,040
So we can use object storage with PeerTube to only use as much space as we need to host

182
00:10:09,040 --> 00:10:10,800
the video files we currently have.

183
00:10:10,800 --> 00:10:18,520
Instead of having to carve off like some big 40 gig or 80 gig or let's be honest, terabyte

184
00:10:18,520 --> 00:10:22,600
volume storage and we just pay for it all the time, we can use object storage, which

185
00:10:22,600 --> 00:10:28,280
is a great S3 compatible way to store your files online and of course Linode supports

186
00:10:28,280 --> 00:10:29,280
that.

187
00:10:29,280 --> 00:10:31,840
Linode.com slash LAN.

188
00:10:31,840 --> 00:10:36,000
That gives you the $100 60 day credit and then you can really cook with some gas because

189
00:10:36,000 --> 00:10:40,640
like a basic rig is like five bucks a month and they go all the way up from there to multiple

190
00:10:40,640 --> 00:10:43,000
GPUs and dedicated CPUs.

191
00:10:43,000 --> 00:10:45,180
But every machine has super fast SSDs.

192
00:10:45,180 --> 00:10:47,560
They have 11 data centers around the world.

193
00:10:47,560 --> 00:10:51,480
We chose to deploy in Dallas, so it's a nice central location in the US for our PeerTube

194
00:10:51,480 --> 00:10:52,480
instance.

195
00:10:52,480 --> 00:10:56,500
And I trust Linode because they're the largest independently owned cloud provider.

196
00:10:56,500 --> 00:11:02,880
They started in 2003 as one of the first companies in cloud computing, three years before AWS

197
00:11:02,880 --> 00:11:04,920
and other enterprise providers.

198
00:11:04,920 --> 00:11:08,040
And I love them because they've supported the Linux ecosystem for a long time.

199
00:11:08,040 --> 00:11:12,200
Events, projects and even these here humble podcasts, they're dedicated to offering the

200
00:11:12,200 --> 00:11:13,680
best virtualized cloud computing.

201
00:11:13,680 --> 00:11:16,000
If it runs on Linux, it runs on Linode.

202
00:11:16,000 --> 00:11:19,880
So thanks to Linode for running all of the Jupiter broadcasting workload, our new backend

203
00:11:19,880 --> 00:11:24,000
infrastructure and for hooking our audience up with a $100 60 day credit when they go

204
00:11:24,000 --> 00:11:26,360
to Linode.com slash LAN.

205
00:11:26,360 --> 00:11:32,000
Well, that didn't take long.

206
00:11:32,000 --> 00:11:37,960
Early work is already underway on reverse engineering the Apple M1 GPU.

207
00:11:37,960 --> 00:11:44,080
Alyssa Rosenzweig, who is known for her work on reverse engineering ARM GPUs, and in particular

208
00:11:44,080 --> 00:11:50,140
her work working on Panfrost, the open source driver stack for some Mali GPUs, well, she's

209
00:11:50,140 --> 00:11:54,000
recently taken an interest in Apple's latest graphics chip.

210
00:11:54,000 --> 00:11:59,140
This work is really being focused around the Ashi Linux project, which is Hector Martin

211
00:11:59,140 --> 00:12:04,480
and his team's effort to create a distribution for the Linux that supports the M1 out of

212
00:12:04,480 --> 00:12:05,480
the box.

213
00:12:05,480 --> 00:12:11,440
But ultimately, their goal is to create a Mesa driver for the M1 GPU and upstream all

214
00:12:11,440 --> 00:12:12,560
of their code.

215
00:12:12,560 --> 00:12:14,080
So things would just work?

216
00:12:14,080 --> 00:12:15,800
Wow, that would be nice.

217
00:12:15,800 --> 00:12:16,800
It would.

218
00:12:16,800 --> 00:12:17,800
Yes.

219
00:12:17,800 --> 00:12:19,920
Because could you imagine Linux on that without a GPU?

220
00:12:19,920 --> 00:12:23,280
No, I mean, I guess maybe a server.

221
00:12:23,280 --> 00:12:27,960
Anyway, after getting a Mac OS environment set up that was friendly enough for reverse

222
00:12:27,960 --> 00:12:31,880
engineering, because, you know, turns out the Mac OS kernel, not the Linux kernel, you

223
00:12:31,880 --> 00:12:36,140
got to do things a little bit differently over there, Alyssa was able to get poking

224
00:12:36,140 --> 00:12:38,500
around at shader binaries.

225
00:12:38,500 --> 00:12:44,640
Some early takeaways from that work are that the Apple M1 GPU is scalar for all bit sizes,

226
00:12:44,640 --> 00:12:51,200
hardware scheduling is being used, and that it looks like it is a super scalar architecture.

227
00:12:51,200 --> 00:12:55,960
And that, by and large, most of the cleverness is actually in the hardware design and not

228
00:12:55,960 --> 00:13:01,320
in some super magic optimizing compiler that Apple's got, which hopefully is good news

229
00:13:01,320 --> 00:13:02,320
for her further efforts.

230
00:13:02,320 --> 00:13:03,320
Right.

231
00:13:03,320 --> 00:13:05,680
It doesn't mean they have to come up with all those tricks in software, if they can

232
00:13:05,680 --> 00:13:09,840
just get the hardware working, it should be decent performance.

233
00:13:09,840 --> 00:13:15,400
So that work for the Ashi Linux project is up on GitHub right now.

234
00:13:15,400 --> 00:13:20,280
I was in conversation with Wendell from Level One Techs and of course, Level One Linux recently

235
00:13:20,280 --> 00:13:23,760
about his thoughts on the state of graphics on Linux.

236
00:13:23,760 --> 00:13:29,180
And I wanted to get his take on the effort being put in to get the GPU for the M1 platform

237
00:13:29,180 --> 00:13:30,840
functional under Linux.

238
00:13:30,840 --> 00:13:34,240
This is what he had to say.

239
00:13:34,240 --> 00:13:38,000
I mean, OK, ARM is exciting, but we're jumping the gun here a little bit.

240
00:13:38,000 --> 00:13:39,000
Save that effort.

241
00:13:39,000 --> 00:13:45,400
Just put it in the jar, put it in a bottle and wait until real ARM, not Apple's sort

242
00:13:45,400 --> 00:13:49,460
of beer goggles ARM comes out, because ARM is amazing.

243
00:13:49,460 --> 00:13:54,360
And if Apple did it like I mean, technically, Microsoft did it first, but Apple did it first

244
00:13:54,360 --> 00:13:57,960
correctly, which was we want to build a laptop that's a genuinely good user experience.

245
00:13:57,960 --> 00:13:59,960
Microsoft, I'll tell you exactly what the problem is.

246
00:13:59,960 --> 00:14:02,960
I can sum it up for you because they did ARM first, Windows RT.

247
00:14:02,960 --> 00:14:08,640
The only thing Microsoft was thinking was, wow, we can make a really cheap Windows device.

248
00:14:08,640 --> 00:14:09,720
We can mass produce these.

249
00:14:09,720 --> 00:14:10,880
We can print these like money.

250
00:14:10,880 --> 00:14:12,420
It's going to be great.

251
00:14:12,420 --> 00:14:14,280
They weren't thinking about a good user experience.

252
00:14:14,280 --> 00:14:15,280
Yeah.

253
00:14:15,280 --> 00:14:17,000
And you're saying that's the part Apple got, right?

254
00:14:17,000 --> 00:14:22,000
Yeah, that's the part that Apple was relentlessly focusing on because it's the operating system

255
00:14:22,000 --> 00:14:23,320
tied with ARM.

256
00:14:23,320 --> 00:14:30,720
And so that level of dedication, that zeal, that, you know, insane focus on positive user

257
00:14:30,720 --> 00:14:31,720
experience.

258
00:14:31,720 --> 00:14:36,680
I think once we've got that hardware in ARM for mass consumption, which is coming, good

259
00:14:36,680 --> 00:14:41,780
performant ARM, then the enthusiasts can adopt that and we can build whatever, because it

260
00:14:41,780 --> 00:14:45,960
just seems folly to me to try to reverse engineer something that somebody doesn't want to be

261
00:14:45,960 --> 00:14:49,000
open with because they're constantly going to kneecap you.

262
00:14:49,000 --> 00:14:52,680
They're constantly going to undermine your efforts and it's like, oh, this, you know,

263
00:14:52,680 --> 00:14:53,680
this piece of hardware is amazing.

264
00:14:53,680 --> 00:14:55,360
I want to run my own software on it.

265
00:14:55,360 --> 00:14:59,460
We've seen exactly how hostile Apple is to that in the iPhone ecosystem.

266
00:14:59,460 --> 00:15:00,460
We don't have to guess.

267
00:15:00,460 --> 00:15:02,720
We don't have to hope that they're going to do the right thing.

268
00:15:02,720 --> 00:15:08,560
We already know that they have no interest in participating in the open source ecosystem.

269
00:15:08,560 --> 00:15:13,080
They are open source hostile when you look at licenses like the GPL.

270
00:15:13,080 --> 00:15:19,080
We should not in any way try to do anything with their hardware that, you know, they don't

271
00:15:19,080 --> 00:15:24,000
sanction for that reason because it's, it ultimately potentially is wasted effort.

272
00:15:24,000 --> 00:15:27,440
And if that effort were put towards something better for the ecosystem, something like what,

273
00:15:27,440 --> 00:15:34,920
you know, the pine people are doing, it would be a much better effort for the overall community,

274
00:15:34,920 --> 00:15:35,920
I think.

275
00:15:35,920 --> 00:15:41,240
If you want more Wendell, well then join us for this week's Linux Unplugged episode 388,

276
00:15:41,240 --> 00:15:46,040
where Wendell goes in depth on the future of Linux on the Intel platform.

277
00:15:46,040 --> 00:15:51,200
Speaking of graphics on the Nvidia side of things, it appears Nvidia is getting prepared

278
00:15:51,200 --> 00:15:54,720
to support hardware accelerated X Wayland.

279
00:15:54,720 --> 00:16:02,120
X Wayland is what makes it possible for traditional X11 type applications to run under a Wayland

280
00:16:02,120 --> 00:16:03,280
session.

281
00:16:03,280 --> 00:16:08,520
And now an Nvidia developer has submitted a merge request to the X server GitLab titled

282
00:16:08,520 --> 00:16:12,560
support for hardware accelerated rendering and proprietary Nvidia driver for X Wayland,

283
00:16:12,560 --> 00:16:15,560
which seems to be pretty clear what that is intended to do.

284
00:16:15,560 --> 00:16:21,160
It's two patches that are included in there that also work in tandem with an upcoming

285
00:16:21,160 --> 00:16:23,560
Nvidia proprietary driver.

286
00:16:23,560 --> 00:16:29,520
They'll work to enable GL and Vulkan rendering with X Wayland.

287
00:16:29,520 --> 00:16:34,160
Once that driver is out, this code should just work with that driver and things should

288
00:16:34,160 --> 00:16:37,160
just start working automatically.

289
00:16:37,160 --> 00:16:41,160
It's interesting to see Nvidia's efforts here, you know, they'd previously done some other

290
00:16:41,160 --> 00:16:44,440
work trying to improve Wayland support last December.

291
00:16:44,440 --> 00:16:48,660
And also this month, a different Nvidia engineer made some contributions to Mesa.

292
00:16:48,660 --> 00:16:52,740
So clearly there's stuff going on behind the scenes.

293
00:16:52,740 --> 00:16:56,840
As for the performance of these recent changes, though, well, they expect it to be on par

294
00:16:56,840 --> 00:17:00,920
with native X11, at least based on benchmarks so far.

295
00:17:00,920 --> 00:17:06,400
Although there is an annoying extra copy required for windowed applications, but the impact

296
00:17:06,400 --> 00:17:11,520
doesn't appear to be significant and you shouldn't see it for most full screen applications.

297
00:17:11,520 --> 00:17:12,760
Which covers a lot of games, really.

298
00:17:12,760 --> 00:17:13,760
It sure does.

299
00:17:13,760 --> 00:17:17,400
And so there's that, there's the aspect of being able to play games on Nvidia hardware

300
00:17:17,400 --> 00:17:20,080
under Wayland that obviously matters.

301
00:17:20,080 --> 00:17:26,600
But there's also just the preservation of software, software that maybe has a GPU component

302
00:17:26,600 --> 00:17:31,800
that's designed for X11 that the developers never rewrote to support Wayland or whatever

303
00:17:31,800 --> 00:17:37,380
the case might be, which is probably going to be a considerable amount of applications.

304
00:17:37,380 --> 00:17:42,320
It's really nice to know that Nvidia users with that proprietary GPU driver, some of

305
00:17:42,320 --> 00:17:46,640
whom have to use it for their workloads, will have access to the software with full acceleration

306
00:17:46,640 --> 00:17:47,640
still.

307
00:17:47,640 --> 00:17:49,080
I think this is a really big step.

308
00:17:49,080 --> 00:17:55,960
It's taken a long time for Nvidia to get here, but with probably within between now and the

309
00:17:55,960 --> 00:18:00,880
end of spring or beginning of summer, we're going to have a just works out of the box

310
00:18:00,880 --> 00:18:01,880
experience.

311
00:18:01,880 --> 00:18:04,840
It's great to see it coming.

312
00:18:04,840 --> 00:18:08,280
Datadog.com slash Linux Action News.

313
00:18:08,280 --> 00:18:09,280
Datadog is great.

314
00:18:09,280 --> 00:18:13,840
They're the unified monitoring and analytics platform that gives you comprehensive visibility

315
00:18:13,840 --> 00:18:16,860
into your cloud, hybrid and multi-cloud environments.

316
00:18:16,860 --> 00:18:21,560
You can quickly analyze the performance of your Linux servers in real time with beautiful

317
00:18:21,560 --> 00:18:22,760
customizable dashboards.

318
00:18:22,760 --> 00:18:26,080
In fact, go to their website just so you can see these dashboards.

319
00:18:26,080 --> 00:18:30,200
It makes it easy to troubleshoot Linux issues in seconds with a unified view of your metrics,

320
00:18:30,200 --> 00:18:33,280
images and logs all in one place.

321
00:18:33,280 --> 00:18:38,080
The Datadog clipboard lets you streamline performance and outage investigations by capturing

322
00:18:38,080 --> 00:18:42,560
relevant views of your infrastructure and applications across the entire stack in one

323
00:18:42,560 --> 00:18:43,720
place.

324
00:18:43,720 --> 00:18:47,920
And they have just turnkey integrations for over 400 technologies.

325
00:18:47,920 --> 00:18:52,120
And you can even use Datadog to monitor just key Linux metrics alongside with data from

326
00:18:52,120 --> 00:18:57,440
the rest of your stack to get full visibility into the health and performance of your entire

327
00:18:57,440 --> 00:18:58,600
infrastructure.

328
00:18:58,600 --> 00:19:04,080
So start a Datadog trial today by visiting datadog.com slash Linux Action News.

329
00:19:04,080 --> 00:19:08,940
You start your free trial, you create one dashboard and you'll get a free Datadog t-shirt.

330
00:19:08,940 --> 00:19:12,120
So that's datadog.com slash Linux Action News.

331
00:19:12,120 --> 00:19:17,480
Create that dashboard and get that free t-shirt and go there to support the show and our sponsor.

332
00:19:17,480 --> 00:19:20,220
Keeps our humble podcast free for listeners like you.

333
00:19:20,220 --> 00:19:24,400
So thanks to Datadog for sponsoring the show and thanks to all of our listeners who visit

334
00:19:24,400 --> 00:19:29,880
datadog.com slash Linux Action News.

335
00:19:29,880 --> 00:19:37,460
A free, decentralized, federated and peer-to-peer video platform just had a major release.

336
00:19:37,460 --> 00:19:42,320
That's right, PeerTube version 3 is here and it had one new feature that really caught

337
00:19:42,320 --> 00:19:43,440
our eye.

338
00:19:43,440 --> 00:19:47,140
Very excited to see live stream support officially land.

339
00:19:47,140 --> 00:19:51,440
It's a minimalist and efficient peer-to-peer live stream system that seems to be working

340
00:19:51,440 --> 00:19:52,440
pretty great.

341
00:19:52,440 --> 00:19:58,760
We have test footage live streaming to about a dozen people right now and they're all over

342
00:19:58,760 --> 00:20:00,560
the world.

343
00:20:00,560 --> 00:20:05,440
From right here in the US of A on the West Coast to the Netherlands, people are streaming

344
00:20:05,440 --> 00:20:09,240
this and uploading individual chunks of the stream to each other.

345
00:20:09,240 --> 00:20:10,800
Yeah, it's really quite neat.

346
00:20:10,800 --> 00:20:16,000
It uses web torrents so it takes some pressure off the creator, hey in this case us, so our

347
00:20:16,000 --> 00:20:19,680
upload could be a little bit less and then everyone watching the video can share chunks

348
00:20:19,680 --> 00:20:22,600
with folks who haven't got quite as far as they have.

349
00:20:22,600 --> 00:20:25,380
It's impressive that this all works live.

350
00:20:25,380 --> 00:20:28,880
It's so great too because we haven't thrown a ton of resources at it.

351
00:20:28,880 --> 00:20:34,880
We have a two-core CPU, four gigs of RAM, Linode running this and we were actually able

352
00:20:34,880 --> 00:20:41,520
to sustain two streams, two live streams at the same time, just barely and if you're just

353
00:20:41,520 --> 00:20:46,080
using it as a PeerTube instance on its own, it takes storage for the videos and it takes

354
00:20:46,080 --> 00:20:50,400
the CPU when it's transcoding them to the various formats, but once everything's done

355
00:20:50,400 --> 00:20:53,000
and it's just sitting there, it's not a big impact.

356
00:20:53,000 --> 00:20:59,520
It actually is going to be pretty straightforward for open source projects like Debian to have

357
00:20:59,520 --> 00:21:02,080
a YouTube in a box.

358
00:21:02,080 --> 00:21:03,240
It's like old YouTube.

359
00:21:03,240 --> 00:21:04,720
It's nice, clean and simple.

360
00:21:04,720 --> 00:21:08,560
It has your video feed, it has subscriptions, it has trending videos.

361
00:21:08,560 --> 00:21:15,680
You can even get an RSS feed for your subscriptions and it has all of the basic features of YouTube,

362
00:21:15,680 --> 00:21:20,480
but in this case, it could be DebianTube and it's just Debian stuff and it's their project

363
00:21:20,480 --> 00:21:26,000
videos and past conference videos and talks and maybe even walkthroughs and then when

364
00:21:26,000 --> 00:21:30,960
there's a Debian conf, you know where to go because you go to the DebianTube and it really

365
00:21:30,960 --> 00:21:34,600
is a YouTube in a box and the setup, well, I mean, just a few minutes.

366
00:21:34,600 --> 00:21:35,960
Yeah, not a big deal.

367
00:21:35,960 --> 00:21:40,080
I mean, we were kind of using on what's been our standard in Ubuntu LTS and then pretty

368
00:21:40,080 --> 00:21:43,720
much everything in Docker and while I don't know that it was officially supported, it

369
00:21:43,720 --> 00:21:49,040
was least documented in their community area of documentation, a lot of good documentation

370
00:21:49,040 --> 00:21:50,260
for getting set up.

371
00:21:50,260 --> 00:21:54,360
So there was a Docker compose file pretty much ready to go with a little customization

372
00:21:54,360 --> 00:21:58,920
or they've got some very nice robust docs if you want to go the classic way that's built

373
00:21:58,920 --> 00:22:03,760
on robust technologies like Postgres and Redis and TypeScript.

374
00:22:03,760 --> 00:22:07,240
So it seems like a lot of good things in there.

375
00:22:07,240 --> 00:22:09,480
Comes with a nice configuration with Let's Encrypt, of course.

376
00:22:09,480 --> 00:22:13,560
So really once we got DNS pointed, everything was up and running in no time.

377
00:22:13,560 --> 00:22:17,760
And if you've ever done a live stream on YouTube or even if you haven't, it's pretty straightforward.

378
00:22:17,760 --> 00:22:22,900
You go to publish video and one of the options now is just a live tab.

379
00:22:22,900 --> 00:22:26,200
You click on that and it gives you the RTMP server information.

380
00:22:26,200 --> 00:22:33,360
It gives you the key to use and you put that in, what we did was OBS on Linux and hit start

381
00:22:33,360 --> 00:22:34,360
streaming.

382
00:22:34,360 --> 00:22:39,320
That's really all there is to it and the main difference between using this and something

383
00:22:39,320 --> 00:22:42,800
like Twitch or YouTube besides the fact that it's totally free, decentralized and completely

384
00:22:42,800 --> 00:22:49,080
under your control is that it's a little slower because if you think about how this is working,

385
00:22:49,080 --> 00:22:55,320
the server is doing the bulk of the encoding but then that work is then shared amongst

386
00:22:55,320 --> 00:22:56,320
the client.

387
00:22:56,320 --> 00:23:00,920
So first you have to wait for the server to receive the signal, then the server has to

388
00:23:00,920 --> 00:23:05,420
transcode that and send that out to the clients and then the clients send that out to their

389
00:23:05,420 --> 00:23:10,080
peers and so it just takes slightly longer and the latency can be somewhere in our testing

390
00:23:10,080 --> 00:23:15,880
between 25 seconds to maybe as much as a minute depending on how long the stream has been

391
00:23:15,880 --> 00:23:16,880
going.

392
00:23:16,880 --> 00:23:19,160
You know, honestly, that's not a deal breaker.

393
00:23:19,160 --> 00:23:20,680
It's nice to have low latency.

394
00:23:20,680 --> 00:23:23,360
Maybe that'll be something that improves in future releases.

395
00:23:23,360 --> 00:23:26,960
This is kind of brand new but pretty much no hiccups.

396
00:23:26,960 --> 00:23:29,240
I mean, we had a decent little stream going.

397
00:23:29,240 --> 00:23:34,480
I had several of them right here on my own laptop and I can even change resolutions to

398
00:23:34,480 --> 00:23:38,720
a different transcode, you know, down from 720 to 360.

399
00:23:38,720 --> 00:23:39,720
Worked pretty well.

400
00:23:39,720 --> 00:23:43,760
But again, it features that kind of thing you can do on YouTube where you stream and

401
00:23:43,760 --> 00:23:47,200
then when you're done, the stream is still available for playback automatically.

402
00:23:47,200 --> 00:23:50,320
That's great for talks and all of the conferences that have gone online.

403
00:23:50,320 --> 00:23:54,560
I could see it being useful in all kinds of education sectors, you know, you're delivering

404
00:23:54,560 --> 00:23:55,560
it right now.

405
00:23:55,560 --> 00:23:59,040
Now it's automatically backed up, ready to go for watching later.

406
00:23:59,040 --> 00:24:01,200
Totally could be killer for education in schools.

407
00:24:01,200 --> 00:24:04,480
They could even run it on their own LAN, have it behind the firewall.

408
00:24:04,480 --> 00:24:06,320
It's just their stuff.

409
00:24:06,320 --> 00:24:09,280
You can brand it and you can theme it as a plug-in system.

410
00:24:09,280 --> 00:24:14,480
I mean, I'm really, really impressed with how far they've gotten in just three releases.

411
00:24:14,480 --> 00:24:19,960
Every single release has been really remarkable and this one is just absolutely up there.

412
00:24:19,960 --> 00:24:20,960
We're setting one up.

413
00:24:20,960 --> 00:24:25,280
We're playing with different ideas and how we could use it as a podcast network because

414
00:24:25,280 --> 00:24:29,440
I've got a few ideas, if nothing else, just like a way to have a canonical archive where

415
00:24:29,440 --> 00:24:32,420
things haven't been pulled down by YouTube.

416
00:24:32,420 --> 00:24:36,900
It's pretty exciting because I remember when we first started doing the very early live

417
00:24:36,900 --> 00:24:41,280
streaming at Jupiter Broadcasting, it required that the end users all had flash.

418
00:24:41,280 --> 00:24:43,120
Oh, those were the dark days.

419
00:24:43,120 --> 00:24:47,280
Yeah, and there was so many weird ways to try to get it working.

420
00:24:47,280 --> 00:24:53,100
And now we're at a point in time where you can get a YouTube in a box that also supports

421
00:24:53,100 --> 00:24:56,440
live streaming and it's remarkable.

422
00:24:56,440 --> 00:24:59,640
And really, you don't have to have incredible horsepower to throw at it.

423
00:24:59,640 --> 00:25:02,820
Of course, that's going to scale depending on how many videos and how many users you

424
00:25:02,820 --> 00:25:03,820
have.

425
00:25:03,820 --> 00:25:06,000
But the PeerTube project has knocked it out of the park.

426
00:25:06,000 --> 00:25:07,040
It's really great to see this.

427
00:25:07,040 --> 00:25:11,120
And they say now they're going to focus on refinement in version 4 and they think they

428
00:25:11,120 --> 00:25:14,720
have a few things that they want to make a little more streamlined and they want to bring

429
00:25:14,720 --> 00:25:18,920
a little more user customizing like features in there and stuff like that.

430
00:25:18,920 --> 00:25:24,040
They say centralized platforms give a little power over the display of videos, newest,

431
00:25:24,040 --> 00:25:27,980
most viewed, just that category, the look of the platform.

432
00:25:27,980 --> 00:25:32,160
Those might all be functionalities that we could change in maybe PeerTube v4.

433
00:25:32,160 --> 00:25:33,160
I don't know.

434
00:25:33,160 --> 00:25:34,160
But yeah, you're right.

435
00:25:34,160 --> 00:25:37,720
We could add more branding, make it a little more of our own or change some of the fundamental

436
00:25:37,720 --> 00:25:40,040
behavior of how videos get ranked, say.

437
00:25:40,040 --> 00:25:41,040
You never know.

438
00:25:41,040 --> 00:25:42,760
Maybe one day we'll have a Jupiter tube.

439
00:25:42,760 --> 00:25:44,120
You never know.

440
00:25:44,120 --> 00:25:49,920
But what I know is you should check out LinuxActionNews.com slash subscribe for all the ways to get new

441
00:25:49,920 --> 00:25:51,920
episodes of this here show.

442
00:25:51,920 --> 00:25:56,600
And we love hearing from you, LinuxActionNews.com slash contact for all the ways to get in touch.

443
00:25:56,600 --> 00:26:01,320
Hey, what are you doing on Monday's 5pm Pacific, 8pm Eastern?

444
00:26:01,320 --> 00:26:05,960
Because you should be listening to Coder's Happy Hour, the new time slot, improved time

445
00:26:05,960 --> 00:26:07,920
slot for Coder Radio.

446
00:26:07,920 --> 00:26:09,720
Grab a robe, maybe a beverage.

447
00:26:09,720 --> 00:26:10,720
Join us there.

448
00:26:10,720 --> 00:26:15,000
We'll be back next Monday with our weekly take on the latest Linux and open source news.

449
00:26:15,000 --> 00:26:16,000
Thanks for joining us.

450
00:26:16,000 --> 00:26:33,280
And we will see you next week.

