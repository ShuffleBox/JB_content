WEBVTT

00:00.000 --> 00:09.320
Hello, and welcome to Linux Action News Episode 195, recorded on June 27, 2021.

00:09.320 --> 00:10.320
I'm Chris.

00:10.320 --> 00:11.320
And I'm Wes.

00:11.320 --> 00:12.320
Hello, Wes.

00:12.320 --> 00:13.320
Let's do the news.

00:13.320 --> 00:17.340
We start with the release of Rocky Linux 8.4.

00:17.340 --> 00:21.560
As you may recall, Rocky Linux was one of the first traditional CentOS alternatives

00:21.560 --> 00:27.940
announced, and this week the gold master of their first release shipped.

00:27.940 --> 00:34.660
Rocky Linux 8.4 is binary compatible, of course, with Red Hat Enterprise Linux 8.4, making

00:34.660 --> 00:39.840
it possible to run apps built for Red Hat Enterprise Linux on Rocky Linux, in theory,

00:39.840 --> 00:41.520
without too much trouble.

00:41.520 --> 00:42.520
Developers love that.

00:42.520 --> 00:46.960
The Green Obsidian was its code name, also known as Rocky 8.4.

00:46.960 --> 00:49.680
And it's pretty great to see this milestone.

00:49.680 --> 00:53.400
This was one of the first we saw crop up, and now we've seen them reach this very important

00:53.400 --> 00:54.400
moment.

00:54.400 --> 00:58.040
The team has a gift as part of this milestone.

00:58.040 --> 01:03.720
There is a migration script that existing RHEL 8.4 users can install and migrate to

01:03.720 --> 01:04.720
Rocky Linux.

01:04.720 --> 01:09.680
Now, beware, any distribution that's had its core repositories altered, removed, duplicated,

01:09.680 --> 01:12.280
maybe overwritten, you're going to have a bad time.

01:12.280 --> 01:17.160
You may just totally have a broke system, so be careful and back up.

01:17.160 --> 01:21.680
And another gotcha could be that Secure Boot is yet to be supported in Rocky 8.4, but the

01:21.680 --> 01:25.040
good news is there is the team is working on that.

01:25.040 --> 01:31.200
Clearly, still early days overall for Rocky Linux, and yeah, the team acknowledges that.

01:31.200 --> 01:35.480
But it does seem like a pretty good start and some momentum in community being built

01:35.480 --> 01:36.480
here.

01:36.480 --> 01:42.880
Looking back, 8.4 took seven months to go from a newly formed community all the way

01:42.880 --> 01:50.100
till today, where we've got a release available, not only for x86, but also ARM 64.

01:50.100 --> 01:55.280
For its users, free community support is available through the Rocky Linux Mattermost, IRC, and

01:55.280 --> 01:56.520
the forums.

01:56.520 --> 02:00.480
And if you need something a little bit beyond that, paid commercial support is currently

02:00.480 --> 02:03.400
available through CIQ.

02:03.400 --> 02:09.560
Sticking with our theme of commercial support, Ubuntu maker Canonical has announced they'll

02:09.560 --> 02:16.160
support open source Blender on Windows, Mac, and Linux.

02:16.160 --> 02:23.560
This really all starts, though, back in May of 2020 with the release of Blender 2.83.

02:23.560 --> 02:28.760
And with that release, the Blender Foundation announced the start of their long term support

02:28.760 --> 02:30.720
pilot program.

02:30.720 --> 02:36.320
That's a program aimed at ensuring that long lasting Blender projects can still be executed

02:36.320 --> 02:41.040
using a stable version of Blender that doesn't change out from under them, but still have

02:41.040 --> 02:46.080
that Blender version get some of those critical fixes and patches throughout a two year support

02:46.080 --> 02:47.080
lifespan.

02:47.080 --> 02:50.200
You can see how handy that could be for a Hollywood production that might be taking

02:50.200 --> 02:52.920
three or four years to actually create some of the visual effects.

02:52.920 --> 02:54.120
That's not uncommon.

02:54.120 --> 02:59.040
Well, just recently, on June 2nd, Blender 2.93 was released.

02:59.040 --> 03:04.080
This is the second release to enter this long term support program by the Blender Foundation.

03:04.080 --> 03:09.720
And then this week, Canonical announced that they've partnered up with the Blender Foundation

03:09.720 --> 03:16.480
to offer paid enterprise support around the long term support versions of Blender.

03:16.480 --> 03:22.040
Canonical says the support offering will include Blender LTS releases across Linux distributions,

03:22.040 --> 03:24.680
Microsoft Windows and Mac OS.

03:24.680 --> 03:29.600
Canonical's engineers will engage directly with customers to provide comprehensive technical

03:29.600 --> 03:36.040
support to users and they go on to say Canonical will manage the entire support process, including

03:36.040 --> 03:39.440
integration with Blender support infrastructure.

03:39.440 --> 03:43.840
And if you're already an Ubuntu Advantage customer, well, this is just one more support

03:43.840 --> 03:46.320
offering baked right in.

03:46.320 --> 03:53.200
As for what this new offering might cost, well, the standard 24 by 5 support package

03:53.200 --> 03:56.760
starts at $500 USD per year.

03:56.760 --> 04:01.120
Or if you need advanced coverage, 24x7 support, that's $1000.

04:01.120 --> 04:06.020
Yeah, that's for those really demanding directors that need immediate support when something

04:06.020 --> 04:07.520
isn't wrong with VFX.

04:07.520 --> 04:11.960
But honestly, in terms of enterprise price points, well, those really aren't too bad.

04:11.960 --> 04:16.560
Five hundred for the standard, a thousand a year for the high touch plan.

04:16.560 --> 04:17.840
That's actually a pretty good deal.

04:17.840 --> 04:21.120
And it seems like a clever move on Canonical's part.

04:21.120 --> 04:27.040
I could see Blender being really popular with Ubuntu workstations and Ubuntu based workstations.

04:27.040 --> 04:31.060
So what Canonical is doing here is tying all of this together.

04:31.060 --> 04:34.440
And they're also saying at the same time, our engineers are going to handle your cross

04:34.440 --> 04:36.940
platform support issues as well.

04:36.940 --> 04:41.280
Does this mean there are now folks working at Canonical who get paid to just play around

04:41.280 --> 04:43.600
with Blender in between those support calls?

04:43.600 --> 04:44.600
Maybe.

04:44.600 --> 04:47.040
We'll have to watch the job postings and see what comes out.

04:47.040 --> 04:50.320
But in the meantime, Canonical is making a move to be one of the best supported Linux

04:50.320 --> 04:52.840
distributions on the RISC-V platform.

04:52.840 --> 04:58.200
Ubuntu now supports two RISC-V boards from Sci-Fi, the Hi-Fi Unleashed and the Hi-Fi

04:58.200 --> 04:59.200
Unmatched.

04:59.200 --> 05:04.720
Now, of course, we've covered Sci-Fi pretty extensively on the show in the past.

05:04.720 --> 05:09.000
And just recently, they were in the news with rumors that Intel was looking to acquire the

05:09.000 --> 05:10.800
company.

05:10.800 --> 05:16.160
But in a blog post this week, Canonical wrote, Canonical's team is engaged in an ongoing

05:16.160 --> 05:21.440
process of porting Ubuntu to Hi-Fi boards backed by the Sci-Fi engineering team as part

05:21.440 --> 05:24.760
of a long term collaboration between the two companies.

05:24.760 --> 05:29.960
Canonical goes on to say that RISC-V has a lot of potential and is becoming a competitive

05:29.960 --> 05:32.960
ISA in multiple markets.

05:32.960 --> 05:39.280
And that meant porting Ubuntu to RISC-V to become a reference OS for early adopters was

05:39.280 --> 05:40.280
kind of a no brainer.

05:40.280 --> 05:42.120
Yeah, at least according to Canonical.

05:42.120 --> 05:46.320
And I see this here, and I think there's a couple of notable words in that quote of theirs,

05:46.320 --> 05:47.320
ongoing process.

05:47.320 --> 05:49.280
So this is a long term thing.

05:49.280 --> 05:50.280
And they're collaborating.

05:50.280 --> 05:52.080
The two companies are working together.

05:52.080 --> 05:54.840
So you would think that potentially suggests future boards.

05:54.840 --> 05:56.800
There may be some collaboration there.

05:56.800 --> 06:00.640
So right now, practically speaking, there's essentially three Ubuntu images available

06:00.640 --> 06:02.340
for Sci-Fi users.

06:02.340 --> 06:09.600
The unleashed supports Ubuntu 21.04 and 20.04, and the unmatched can run 21.04.

06:09.600 --> 06:15.200
Well, just maybe sometime soon, we'll have more RISC-V boards laying around next to our

06:15.200 --> 06:17.880
Raspberry Pis or running in a server somewhere.

06:17.880 --> 06:22.320
And if you're developing for that, seems like at least right now, Ubuntu is probably the

06:22.320 --> 06:25.080
logical choice.

06:25.080 --> 06:29.440
In just a horrifying story that we wanted you to be aware of, Western Digital is recommending

06:29.440 --> 06:34.680
that customers unplug their MyBook Live storage devices from the internet until further notice,

06:34.680 --> 06:40.520
while the company investigates unexplained compromises that may have entirely wiped data

06:40.520 --> 06:43.520
from devices worldwide.

06:43.520 --> 06:49.040
Mass incidents of disk wiping came to light in a thread on Western Digital support forum.

06:49.040 --> 06:56.560
To make matters worse, so far, there are no reports of that deleted data later being restored.

06:56.560 --> 07:01.420
The affected model known as MyBook Live uses an ethernet cable to connect to your local

07:01.420 --> 07:02.560
network.

07:02.560 --> 07:07.160
And then from there, users can remotely access their files and make configuration changes

07:07.160 --> 07:11.120
and maybe a whole lot more through Western Digital's cloud infrastructure.

07:11.120 --> 07:16.000
Yeah, and there's a wrinkle in this story, and that is that Western Digital stopped supporting

07:16.000 --> 07:19.400
the MyBook Live in 2015.

07:19.400 --> 07:23.960
Multiple users reported that the data loss coincided with a factory reset that had been

07:23.960 --> 07:28.600
performed on their devices, and one person posted a log that showed some unexplained

07:28.600 --> 07:30.960
behavior occurring on Wednesday.

07:30.960 --> 07:35.680
This is just unacceptable, and unfortunately, as we record right now, there's just limited

07:35.680 --> 07:39.380
information available, so it makes it really hard for us to make any kind of determination

07:39.380 --> 07:42.880
we can relay to you about what is causing this mass destruction.

07:42.880 --> 07:47.840
Western Digital's statement, well, it kind of implies that maybe customer accounts were

07:47.840 --> 07:53.200
compromised individually, and so it's a onesie-twosie thing, but then the support forums would seem

07:53.200 --> 07:54.200
to indicate otherwise.

07:54.200 --> 07:55.200
I don't know.

07:55.200 --> 08:00.680
I mean, if this event was triggered by some server-side process on their infrastructure,

08:00.680 --> 08:05.440
I'd have a lot of questions about why that is even possible.

08:05.440 --> 08:10.720
I mean, the stories of people losing their insurance policies or budgets, personal pictures,

08:10.720 --> 08:14.360
business data, that's just rough to read.

08:14.360 --> 08:19.640
If you know anyone that this has happened to, maybe a good moment to try and help if

08:19.640 --> 08:24.880
you can get some sort of self-hosted or Linux-powered solution that they actually have complete

08:24.880 --> 08:29.880
control over, maybe with your help, and one that can't be wiped remotely.

08:29.880 --> 08:30.880
Lino.com.

08:30.880 --> 08:46.100
Go there to get $100 in 60-day credit towards a new account and support the show.

08:46.100 --> 08:49.600
Our friends at Lino make this possible, and when you go there, it's letting them know

08:49.600 --> 08:51.600
you heard it right here.

08:51.600 --> 08:53.420
You thank them for supporting us.

08:53.420 --> 08:58.760
And you can try out Linode with $100 for real and see why they are our cloud hosting provider

08:58.760 --> 08:59.760
of choice.

08:59.760 --> 09:00.760
They're fast.

09:00.760 --> 09:05.200
They have a great UI, and they have a ton of features that we love, and 11 data centers

09:05.200 --> 09:06.200
around the world.

09:06.200 --> 09:11.360
Linode has been doing this since 2003, and over the years, they've slowly built it into

09:11.360 --> 09:17.860
the best place to run virtualized Linux, and they have impressive support for various technologies

09:17.860 --> 09:20.240
you can use to manage your cloud at scale.

09:20.240 --> 09:21.560
You know, like Terraform?

09:21.560 --> 09:26.240
Terraform's well-known and widely used to manage infrastructure as code, and Linode

09:26.240 --> 09:30.680
is making an eBook available that will help you understand the underlying concepts of

09:30.680 --> 09:33.960
how it could be significant for you to leverage your infrastructure.

09:33.960 --> 09:37.600
A free eBook will have that linked in the show notes, but go try them out.

09:37.600 --> 09:42.280
And if you ever run into any trouble, they're fancy, super great, totally the best support

09:42.280 --> 09:43.280
ever.

09:43.280 --> 09:44.280
And I mean it.

09:44.280 --> 09:45.280
They really are great.

09:45.280 --> 09:50.640
With 24-7 support, by phone or ticket, and along with hundreds of guides and tutorials,

09:50.640 --> 09:52.440
they're going to help you get started.

09:52.440 --> 09:56.200
I love all of the guides, because they inspire me to build things, too.

09:56.200 --> 10:00.840
And often, it's just one click away, with several applications you can deploy with very

10:00.840 --> 10:03.960
little effort, or build it up from the ground up and learn something.

10:03.960 --> 10:08.480
And remember, without $100 credit, it's never been a better time to learn.

10:08.480 --> 10:10.480
Linode.com slash LAN.

10:10.480 --> 10:13.120
Go there and find out why we think they're just the best.

10:13.120 --> 10:17.800
Check out their S3 compatible object storage, which could up your backup game, or maybe

10:17.800 --> 10:20.560
just be a great way to run a static website.

10:20.560 --> 10:24.160
Super fast networking, and machines that are blazing fast.

10:24.160 --> 10:25.800
Go see why we use them for everything.

10:25.800 --> 10:33.160
Linode.com slash LAN.

10:33.160 --> 10:36.380
And thank you to our long time supporters over at Ting.

10:36.380 --> 10:42.720
Go to linux.ting.com and get $25 off a great plan or a great phone.

10:42.720 --> 10:45.840
Ting just makes mobile so much simpler.

10:45.840 --> 10:50.320
Stop banging your head against all of these confusing plans with these weird small print

10:50.320 --> 10:51.520
items.

10:51.520 --> 10:53.400
Just go to linux.ting.com.

10:53.400 --> 10:55.640
Check out their Set 12 plan.

10:55.640 --> 11:01.000
It gives you 12 gigs of data with unlimited talk and text for $35 a month.

11:01.000 --> 11:04.800
And they have plans that are perfect for families, or plans that are great for individuals that

11:04.800 --> 11:07.720
don't use data or need all the data.

11:07.720 --> 11:12.340
Ting's got every plan covered with their award winning customer service, Nationwide

11:12.340 --> 11:15.160
LTE and 5G coverage.

11:15.160 --> 11:20.380
I'm impressed as a Ting customer how real the 5G promise has been after years of hype.

11:20.380 --> 11:26.640
It's in my neighborhood, and it's mind blowing, 100 megabits on Ting 5G.

11:26.640 --> 11:27.680
It's so great.

11:27.680 --> 11:31.120
And I have the freedom of no contract.

11:31.120 --> 11:33.200
No contract ever with Ting.

11:33.200 --> 11:36.820
So go pick Ting right now and choose from one of their great networks.

11:36.820 --> 11:40.760
It's simple to switch to Ting, pretty much any phone will work because they've got lots

11:40.760 --> 11:46.120
of compatibility, and you can just get started by going to linux.ting.com.

11:46.120 --> 11:50.640
Check your current phone, create the account, get the plan that's just right for you, and

11:50.640 --> 11:52.480
then Ting will send you a SIM card.

11:52.480 --> 11:56.440
Cutting your phone bill in half has never been easier with Ting's new plans.

11:56.440 --> 12:00.000
The next generation of Ting mobile, it's here, and it's better than ever.

12:00.000 --> 12:10.520
Go see how much you can save and then take $25 off at linux.ting.com.

12:10.520 --> 12:15.760
Windows 11 is making a lot of news this week, but one of the issues that has caught the

12:15.760 --> 12:22.720
attention of Linux users is Microsoft's requirement that computers running Windows 11 must have

12:22.720 --> 12:27.200
a TPM chip and it must be enabled.

12:27.200 --> 12:33.240
The TPM is a chip connected to your main motherboard, and what makes it special is a collection

12:33.240 --> 12:39.080
of registers called platform configuration registers or PCRs.

12:39.080 --> 12:43.600
When the system is reset, these registers are initialized and then during the boot process,

12:43.600 --> 12:48.400
the system will generate cryptographic hashes of the various boot components and then pass

12:48.400 --> 12:51.300
those hashes back to the old TPM.

12:51.300 --> 12:56.440
Any modifications to the boot components thereafter will then change the value of all those hashes

12:56.440 --> 12:59.440
and then change the values recorded in the TPM.

12:59.440 --> 13:02.980
This is basically called measured boot because you're measuring all the different components

13:02.980 --> 13:08.120
going on and then down the line that lets you detect changes or do things like restrict

13:08.120 --> 13:11.040
access if you're not in the right measured state.

13:11.040 --> 13:15.700
BitLocker, for example, leverages the TPM to ensure that volumes can only be decrypted

13:15.700 --> 13:19.960
if the system booted as expected by all those measurements in the TPM.

13:19.960 --> 13:25.940
Now why this is a concern to Linux users is many systems built to run Linux don't bother

13:25.940 --> 13:30.680
putting TPM in because it's not something currently used by Linux and so these machines,

13:30.680 --> 13:35.120
which might otherwise be great dual booters, will just simply be left out.

13:35.120 --> 13:40.200
And not all Windows PCs have TPM necessarily turned on either and that can be tricky for

13:40.200 --> 13:44.880
average users but the primary concern here is creating a generation of PCs that might

13:44.880 --> 13:50.400
leave Linux out or I guess, Wes, it wouldn't be all Linux, it would just be any Linux that

13:50.400 --> 13:51.920
hasn't been signed by Microsoft.

13:51.920 --> 13:58.480
Yeah, because in conjunction with the TPM is our old friend Secure Boot and the goal

13:58.480 --> 14:03.680
here is kind of partially to combine these two technologies together because Secure Boot

14:03.680 --> 14:07.400
allows the firmware to validate your boot loader before executing it, right?

14:07.400 --> 14:11.240
It's the bit that has your computer say, well, is this new OS you want to boot signed by

14:11.240 --> 14:16.840
Microsoft or well, technically signed by whatever keys I am happened to be told to trust, otherwise

14:16.840 --> 14:18.960
I won't boot it.

14:18.960 --> 14:23.240
Now that works pretty well but if you're also worried about firmware attacks and Microsoft

14:23.240 --> 14:28.040
says they are, well, the firmware itself could be backdoored and you would have no way to

14:28.040 --> 14:31.900
really verify that Secure Boot function correctly and that's where some of these boot attacks

14:31.900 --> 14:36.000
come from and that's where the TPM comes into play because it turns out you can use that

14:36.000 --> 14:40.560
TPM to measure the Secure Boot state and detect if that changes and just further add boot

14:40.560 --> 14:41.560
security.

14:41.560 --> 14:44.640
Yeah, that's why they work well together and that's why some Linux vendors have been open

14:44.640 --> 14:49.600
to implementing this and obviously making sure that your boot environment is secure

14:49.600 --> 14:55.200
and verified is critical and that is a real world use case, especially one appealing to

14:55.200 --> 14:56.200
enterprise.

14:56.200 --> 14:58.840
However, all of that said, because I just want to play devil's advocate for those who

14:58.840 --> 15:03.600
are concerned here, all of what I've just said aside, I think the reality is Microsoft

15:03.600 --> 15:08.600
has been pushing this particular technology stack for over a decade and the fact that

15:08.600 --> 15:13.400
it's taken this long for all of the pieces to be turned on because they had some requirements

15:13.400 --> 15:17.280
in Windows 10 but it didn't have to be on by default, they've slowly been turning the

15:17.280 --> 15:21.840
temperature up on this particular issue for about a decade now.

15:21.840 --> 15:25.500
And that makes me think it's not a customer driven issue because if it was enterprise

15:25.500 --> 15:30.200
customers knocking on Satya Nadella's door saying we need more security, Microsoft would

15:30.200 --> 15:33.700
have flipped these bits on immediately, maybe even enterprise versions would have it on

15:33.700 --> 15:35.140
by default.

15:35.140 --> 15:36.920
This would have already been a solved problem.

15:36.920 --> 15:42.560
The very fact that they've drugged this out for so long and have done this very slow incremental

15:42.560 --> 15:49.440
approach actually makes me think this is a Microsoft driven feature for Microsoft motivations,

15:49.440 --> 15:53.880
which I just can't help but think perhaps some might be to leave some systems in a state

15:53.880 --> 15:58.680
where they're more like ARM systems, where they come with an x86 OS, perhaps that's been

15:58.680 --> 16:03.940
subsidized by a vendor relationship and it's always going to run that particular x86 OS.

16:03.940 --> 16:07.840
Maybe it's a Linux, maybe it's something like Chrome OS, more than likely it's something

16:07.840 --> 16:09.220
like Windows 10.

16:09.220 --> 16:10.940
And that has to be part of the motivation here.

16:10.940 --> 16:14.160
So I do understand the Linux users who are concerned about this.

16:14.160 --> 16:17.380
The flip side, I think Wes, and I wonder if you agree with this, is it feels like the

16:17.380 --> 16:22.600
Linux vendor ecosystem is healthy enough at this point that even if some Windows vendors

16:22.600 --> 16:29.440
make the decision either via laziness or intentionally to lock out other operating systems, it's

16:29.440 --> 16:31.840
almost a non-issue to me because of these other vendors.

16:31.840 --> 16:32.840
Yeah, you're right.

16:32.840 --> 16:37.600
I mean, we've got a lot more options in the Linux space than we once did, including some

16:37.600 --> 16:40.720
bigger vendors that themselves are happy to ship Linux.

16:40.720 --> 16:44.160
So I don't see them shutting it out anytime soon.

16:44.160 --> 16:48.760
But it is a little bit worrying that we're seeing more of a closed walled off garden

16:48.760 --> 16:52.120
approach on the regular PC side of the fence as well.

16:52.120 --> 16:57.440
I mean, as Apple's been arguing in court lately, yes, it is more secure if you restrict what

16:57.440 --> 17:00.720
you can run on your computer, but I don't think that's a trade-off we've all agreed

17:00.720 --> 17:02.800
to make on some of these more traditional platforms.

17:02.800 --> 17:06.400
Yeah, I couldn't have said it better myself.

17:06.400 --> 17:13.040
We have seen so much of mobile UI and mobile use paradigm infect the desktop.

17:13.040 --> 17:17.160
And then we've kind of now, within the last couple of years, rounded the corner and found

17:17.160 --> 17:18.580
the right balance there.

17:18.580 --> 17:22.280
And I just don't want to see that same mobile creep happen when it comes to locking down

17:22.280 --> 17:24.480
boot environments, locking down our machines.

17:24.480 --> 17:28.480
That's been a mistake, I think, in the mobile universe, at least for some phones and some

17:28.480 --> 17:29.680
types of devices.

17:29.680 --> 17:33.760
And I just hate to see backward steps taken in the PC industry, making that aspect more

17:33.760 --> 17:34.760
like mobile.

17:34.760 --> 17:39.040
Now, I should note that even in the worst case here, where you can only boot Microsoft

17:39.040 --> 17:43.320
software, for the moment, they are signing some distributions, bootloaders, right?

17:43.320 --> 17:47.160
You'll be able to boot Ubuntu on one of these machines in theory, no problem, at least if

17:47.160 --> 17:49.360
booting from USB is enabled in the firmware.

17:49.360 --> 17:52.880
Yeah, and it seems like they've been a good faith player in that space for a while.

17:52.880 --> 17:54.600
They have a good track record there.

17:54.600 --> 17:59.840
So it's not alarm bells, but maybe slightly concerning to see a trend going in this direction.

17:59.840 --> 18:02.560
And good luck getting your Arch install booting up on there.

18:02.560 --> 18:06.560
And our last story is one that we've been watching develop for a long time.

18:06.560 --> 18:11.480
TrueNAS Scale 2106 Beta is now available.

18:11.480 --> 18:13.880
TrueNAS Scale is something kind of special.

18:13.880 --> 18:17.400
It's like FreeNAS, but not based on BSD.

18:17.400 --> 18:20.240
In fact, it's based on Debian Linux.

18:20.240 --> 18:22.600
There's kind of a range of these products now, Wes.

18:22.600 --> 18:23.760
Maybe we can help break them down.

18:23.760 --> 18:24.760
All right.

18:24.760 --> 18:30.000
Well, at the base, you've got TrueNAS, the free public base version, TrueNAS Core.

18:30.000 --> 18:35.480
Now, this was previously known as FreeNAS, and that's probably what you know it as best.

18:35.480 --> 18:39.800
Then there was sort of the traditional TrueNAS, which is like the commercial big brother of

18:39.800 --> 18:40.960
traditional FreeNAS.

18:40.960 --> 18:43.080
That's TrueNAS Enterprise.

18:43.080 --> 18:47.000
Both of those are based on FreeBSD as usual.

18:47.000 --> 18:53.960
And then as of January 2021, when we learned about this, there's TrueNAS Scale providing

18:53.960 --> 18:59.240
open source hyper converged infrastructure, including Linux containers and virtual machines.

18:59.240 --> 19:02.280
And yeah, that one is powered by Debian.

19:02.280 --> 19:07.720
That caught my attention because I liked FreeNAS and by extension, TrueNAS quite a bit, but

19:07.720 --> 19:09.880
honestly felt a little bit lost.

19:09.880 --> 19:13.200
Many times something went a little sideways and I needed to actually go down to the command

19:13.200 --> 19:14.200
line.

19:14.200 --> 19:18.360
But now, with something based on Debian, using tools that I'm familiar with, it's kind of

19:18.360 --> 19:20.000
marrying the best of both worlds.

19:20.000 --> 19:25.040
So we gave it a go before the show, popped it on a machine and demoed it for a bit, and

19:25.040 --> 19:26.720
I'm really impressed with the interface.

19:26.720 --> 19:30.560
It's using their new slick UI that they've been developing for a little while, and it

19:30.560 --> 19:36.640
makes it outrageously simple to set up a ZFS pool and then start installing applications

19:36.640 --> 19:42.520
via Docker, which opens them up to a huge, huge, huge community of applications.

19:42.520 --> 19:45.080
Yeah, I think the flexibility of this is pretty key.

19:45.080 --> 19:49.000
I mean, they've had a lot of experience as a company making these UIs, managing your

19:49.000 --> 19:54.040
basic simple NAS devices, but they really stress here that TrueNAS Scale is all about

19:54.040 --> 19:55.040
the scale.

19:55.040 --> 19:58.720
You can take just a single node and it's still super simple for you as a home user to get

19:58.720 --> 19:59.720
set up.

19:59.720 --> 20:02.440
But if your needs start growing, maybe you're a small business and you get some additional

20:02.440 --> 20:06.920
locations, you can actually scale these systems out both individually on the compute side

20:06.920 --> 20:09.200
and individually on the storage side.

20:09.200 --> 20:13.880
And I think maybe part of what makes that quote-unquote scale happen is I think there's

20:13.880 --> 20:18.080
some Kubernetes happening in the background because I noticed when I was deploying an

20:18.080 --> 20:22.080
image, there was some Kubernetes commands executing on the console.

20:22.080 --> 20:26.040
Yeah, I mean, it's got all the Linux hits, Docker, Kubernetes, and KVM.

20:26.040 --> 20:27.880
Yeah, I was going to say.

20:27.880 --> 20:32.120
And of course, a little bit of ZFS on the side with a nice UI and then their support

20:32.120 --> 20:33.560
from IX Systems.

20:33.560 --> 20:35.080
I think it's a pretty compelling product.

20:35.080 --> 20:39.200
I think it's everything I ever wanted from TrueNAS and FreeNAS, but now it's based on

20:39.200 --> 20:41.760
Linux and this is really worth taking a look.

20:41.760 --> 20:42.760
Check out TrueNAS Scale.

20:42.760 --> 20:44.760
We'll have a link in the show notes.

20:44.760 --> 20:49.740
It's a pretty solid product and it's really, I could see the ideal small business server.

20:49.740 --> 20:51.280
You put this on there.

20:51.280 --> 20:54.700
We started talking about the Western Digital Livebook.

20:54.700 --> 20:58.440
This is such a great example of an appliance you could build out of an x86 computer with

20:58.440 --> 20:59.920
a couple of hard drives.

20:59.920 --> 21:04.800
Our test rig had three hard drives and it just saw all the disk and made a nice pool

21:04.800 --> 21:07.040
that we could use and start taking advantage of right away.

21:07.040 --> 21:09.040
It probably took 15 minutes to set up.

21:09.040 --> 21:13.000
Now, this is still beta, of course, but if you're interested in another contender in

21:13.000 --> 21:16.560
the space, maybe give it a go and provide IX Systems some feedback.

21:16.560 --> 21:17.700
Yeah, they would love that.

21:17.700 --> 21:21.240
And we'll keep an eye on things and keep testing it as they finish it up.

21:21.240 --> 21:25.360
In the meantime, go to linuxactionnews.com slash subscribe for all the ways to get new

21:25.360 --> 21:26.360
episodes.

21:26.360 --> 21:31.760
You can visit linuxactionnews.com slash contact for ways to get in touch, but please no TrueNAS

21:31.760 --> 21:34.080
scale bug reports.

21:34.080 --> 21:35.680
Meetup.com slash Jupiter Broadcasting.

21:35.680 --> 21:40.240
We have two meetups coming up in early August in Salt Lake City and in Denver.

21:40.240 --> 21:42.440
And if you can go, we'd love to know.

21:42.440 --> 21:47.400
So join us at meetup.com slash Jupiter Broadcasting and sign up for one of those two meetups.

21:47.400 --> 21:52.800
And just to note, there'll be a slightly delayed episode next week, but you should still have

21:52.800 --> 21:57.560
your weekly Linux news on Monday with our take on everything that happened in Linux

21:57.560 --> 21:58.560
and open source.

21:58.560 --> 22:25.640
Thanks for joining us and we'll see you next week.

