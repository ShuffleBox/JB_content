1
00:00:00,000 --> 00:00:09,680
Hello, and welcome to Linux Action News, episode 258, recorded on September 14, 2022, I'm

2
00:00:09,680 --> 00:00:10,680
Chris.

3
00:00:10,680 --> 00:00:11,680
And I'm Wes.

4
00:00:11,680 --> 00:00:12,680
Hello, Wes.

5
00:00:12,680 --> 00:00:14,760
Let's do the news.

6
00:00:14,760 --> 00:00:19,880
We start this week with the malware story that's leading headlines around the world

7
00:00:19,880 --> 00:00:21,360
of Linux.

8
00:00:21,360 --> 00:00:28,080
Dubbed ShikiTega by the AT&T Alien Labs researchers who discovered it, it got that name for its

9
00:00:28,080 --> 00:00:34,600
extensive use of the popular ShikiTega polymorphic encoder, which allows the malware to adapt

10
00:00:34,600 --> 00:00:36,680
its code and avoid detection.

11
00:00:36,680 --> 00:00:43,700
Yeah, so the report says that using this encoder, the malware runs through several decode loops.

12
00:00:43,700 --> 00:00:48,720
Each loop, kind of like an onion, decodes the next layer until the final shellcode payload

13
00:00:48,720 --> 00:00:51,520
is decoded and executed.

14
00:00:51,520 --> 00:00:56,320
Once the malware is on the system and executed, it also downloads something called Metal,

15
00:00:56,320 --> 00:01:01,200
which is a Metasploit interpreter that gives the attacker the ability to control the affected

16
00:01:01,200 --> 00:01:02,200
system.

17
00:01:02,200 --> 00:01:05,600
Now, the AT&T researchers who discovered all this didn't say exactly how the initial

18
00:01:05,600 --> 00:01:13,200
infection occurs, but did say that ShikiTega exploits two known vulnerabilities in Linux

19
00:01:13,200 --> 00:01:16,200
that were disclosed back in 2021.

20
00:01:16,200 --> 00:01:19,320
A great reminder to keep those systems patched.

21
00:01:19,320 --> 00:01:25,040
Now, the most common use of systems that do get exploited, well, of course, it's to run

22
00:01:25,040 --> 00:01:31,200
the open source multi-cryptocurrency miner application known as XMRIG.

23
00:01:31,200 --> 00:01:36,880
But as you mentioned there, Chris, they also install a powerful Metasploit package that

24
00:01:36,880 --> 00:01:43,120
gives attackers a few different capabilities, including controlling a webcam, stealing credentials,

25
00:01:43,120 --> 00:01:47,840
firing up reverse shells, or just installing whatever additional packages they feel like.

26
00:01:47,840 --> 00:01:52,240
Yeah, at that point, the box is basically theirs and to further reduce the chances of

27
00:01:52,240 --> 00:01:57,120
getting caught, and to avoid the detection by a lot of different network security products,

28
00:01:57,120 --> 00:02:02,960
the attackers behind ShikiTega use the legitimate cloud hosting service infrastructure out there

29
00:02:02,960 --> 00:02:05,840
as their command and control systems.

30
00:02:05,840 --> 00:02:07,840
Sneaky, sneaky.

31
00:02:07,840 --> 00:02:13,040
Now, that choice does cost more money and puts the operators of the malware at risk

32
00:02:13,040 --> 00:02:16,040
of being traced and identified by law enforcement.

33
00:02:16,040 --> 00:02:19,560
But it offers better stealthiness and compromised systems.

34
00:02:19,560 --> 00:02:24,000
I mean, most enterprises these days already have a lot of traffic to cloud systems.

35
00:02:24,000 --> 00:02:25,840
It just makes it a lot harder to identify.

36
00:02:25,840 --> 00:02:31,400
Yeah, and you're not likely to just block all of AWS or something like that.

37
00:02:31,400 --> 00:02:35,920
The AT&T researchers report a sharp rise in Linux malware this year in general, and they've

38
00:02:35,920 --> 00:02:41,800
been advising system admins to just get your patches, get your security updates, use endpoint

39
00:02:41,800 --> 00:02:47,040
detection, and take regular backups of your most important data.

40
00:02:47,040 --> 00:02:50,040
Seems like good advice to us to hear more of our thoughts on the matter.

41
00:02:50,040 --> 00:02:58,940
Go check out episode 474 of Linux Unplugged.

42
00:02:58,940 --> 00:03:09,280
After 3800 commits and nearly a year in development, OpenWRT 2203 has been released.

43
00:03:09,280 --> 00:03:14,160
For those of you who don't know, the OpenWRT project is a Linux operating system that targets

44
00:03:14,160 --> 00:03:15,980
embedded devices.

45
00:03:15,980 --> 00:03:21,120
It can be a complete replacement for vendor-supplied firmware on a wide range of wireless routers

46
00:03:21,120 --> 00:03:24,460
and non-network devices as well.

47
00:03:24,460 --> 00:03:28,480
One of the highlights this time around is Firewall 4.

48
00:03:28,480 --> 00:03:33,920
That's the new default firewall, and it's based on NF tables, finally retiring their

49
00:03:33,920 --> 00:03:38,560
old IP tables-based Firewall 3 system.

50
00:03:38,560 --> 00:03:44,880
OpenWRT 2203 also adds support for more than 180 new devices.

51
00:03:44,880 --> 00:03:49,280
That brings the total number of supported devices to more than 1500.

52
00:03:49,280 --> 00:03:53,320
It also includes some shiny new WiFi 6 gear.

53
00:03:53,320 --> 00:03:55,280
That is really nice to see.

54
00:03:55,280 --> 00:04:02,480
So under the hood of 2203, you got Linux 5.10, BusyBox 1.35, and they're happy to report

55
00:04:02,480 --> 00:04:05,080
that the 2038 problem has been handled.

56
00:04:05,080 --> 00:04:08,760
There's also just some other great features in this release like the new kernel subsystem

57
00:04:08,760 --> 00:04:13,240
for network switches, that could be really interesting, and obviously the most important

58
00:04:13,240 --> 00:04:18,560
new update, the Lucy Bootstrap design, now supports dark mode.

59
00:04:18,560 --> 00:04:19,560
Finally!

60
00:04:19,560 --> 00:04:24,680
Maybe that means I won't have to do everything on the command line anymore.

61
00:04:24,680 --> 00:04:30,660
But jokes aside, there's a lot of good stuff that came together to make this a solid release.

62
00:04:30,660 --> 00:04:35,960
That 2038 problem in particular, well that impacted 32-bit systems, and it was actually

63
00:04:35,960 --> 00:04:40,060
solved upstream in the muscle C library.

64
00:04:40,060 --> 00:04:45,000
But being at the base of most packages, that meant getting the fix in place required a

65
00:04:45,000 --> 00:04:48,440
rebuild of nearly all user space applications.

66
00:04:48,440 --> 00:04:55,280
With that work done though, if you've deployed a past release of OpenWRT, you can upgrade

67
00:04:55,280 --> 00:04:58,340
your system using sysupgrade.

68
00:04:58,340 --> 00:05:04,200
They say your configuration should be preserved in quote unquote most cases, so maybe do a

69
00:05:04,200 --> 00:05:09,120
backup first.

70
00:05:09,120 --> 00:05:11,320
You know what's in your digital wallet?

71
00:05:11,320 --> 00:05:15,160
Well maybe like most of us, you don't even have a digital wallet.

72
00:05:15,160 --> 00:05:22,440
But the Linux Foundation aims to change that with the newly announced OpenWRT Foundation.

73
00:05:22,440 --> 00:05:28,560
The Linux Foundation writes quote the OpenWRT Foundation or OWF will help to develop open

74
00:05:28,560 --> 00:05:33,980
source software to increase interoperability between digital wallets.

75
00:05:33,980 --> 00:05:37,800
Now this is a pretty nebulous announcement, we couldn't get some of the details we wanted

76
00:05:37,800 --> 00:05:39,360
for you guys.

77
00:05:39,360 --> 00:05:43,320
I don't know of a ton of these digital wallets out there, let alone needing to make them

78
00:05:43,320 --> 00:05:44,320
interoperate.

79
00:05:44,320 --> 00:05:48,240
It doesn't seem that the Linux Foundation has any intention to create a new standard,

80
00:05:48,240 --> 00:05:54,000
and the OWF will not publish a wallet of its own, rather their goal is to just bring the

81
00:05:54,000 --> 00:05:59,720
community together to build an open source software engine they say, that can be used

82
00:05:59,720 --> 00:06:02,460
by anyone to create digital wallets.

83
00:06:02,460 --> 00:06:07,740
The Linux Foundation's Executive Director Jim Zimlin said this quote, we are convinced

84
00:06:07,740 --> 00:06:11,760
that digital wallets will play a critical role for digital societies.

85
00:06:11,760 --> 00:06:15,240
Open software is the key to interoperability and security.

86
00:06:15,240 --> 00:06:20,200
We are delighted to host the OpenWRT Foundation and excited for its potential.

87
00:06:20,200 --> 00:06:28,320
The OWF is a brainchild of Daniel Goldschider, CEO of open banking startup Yes.com.

88
00:06:28,320 --> 00:06:33,240
So today's announcement reveals there's actually a broad array of buy-in from multiple different

89
00:06:33,240 --> 00:06:41,520
industry players, including Okta, Ping Identity, Accenture, CVS Health, and the OpenID Foundation,

90
00:06:41,520 --> 00:06:45,600
among a few other different public and private entities.

91
00:06:45,600 --> 00:06:50,480
Well if you want to know more about the OpenWRT Foundation, it was featured in a keynote presentation

92
00:06:50,480 --> 00:06:55,880
at the Open Source Summit in Europe, which in theory will have a video released to the

93
00:06:55,880 --> 00:07:03,880
public sometime, maybe, when they get to it.

94
00:07:03,880 --> 00:07:10,660
Also announced at the Open Source Summit Europe, the Linux Foundation is launching Linux Foundation

95
00:07:10,660 --> 00:07:11,660
Europe.

96
00:07:11,660 --> 00:07:19,120
And today we're announcing a new structure at the Linux Foundation, our Linux Foundation

97
00:07:19,120 --> 00:07:21,280
Europe Entity.

98
00:07:21,280 --> 00:07:29,160
This is an organization based in Europe of European incorporation that will allow European

99
00:07:29,160 --> 00:07:36,320
organizations to participate regionally here and have reciprocity with the Linux Foundation

100
00:07:36,320 --> 00:07:39,080
globally around the world.

101
00:07:39,080 --> 00:07:43,660
The Linux Foundation also announced the results of their first ever survey of the European

102
00:07:43,660 --> 00:07:44,920
open source community.

103
00:07:44,920 --> 00:07:50,440
They report that nearly half, 47%, of respondents said the value of open source software to

104
00:07:50,440 --> 00:07:54,840
their organization has increased over the previous 12 months.

105
00:07:54,840 --> 00:08:00,240
However, only 29% of survey participants said they have seen an increase in contribution

106
00:08:00,240 --> 00:08:04,720
efforts at their organization over the past 12 months.

107
00:08:04,720 --> 00:08:08,760
Closing this gap, however, will be part of the Linux Foundation Europe's mission, according

108
00:08:08,760 --> 00:08:14,040
to them, with messaging aimed at not only about how to contribute to open source, but

109
00:08:14,040 --> 00:08:21,760
why an organization should contribute to open source.

110
00:08:21,760 --> 00:08:27,200
Well the Linux Foundation racked up yet another win this week when the company formerly known

111
00:08:27,200 --> 00:08:34,380
as Facebook announced that they'd be transferring the PyTorch project to the Linux Foundation.

112
00:08:34,380 --> 00:08:40,560
For a bit of context, as of August 2022 PyTorch was one of the world's five fastest growing

113
00:08:40,560 --> 00:08:47,200
open source software communities, alongside big names like the Linux Kernel and Kubernetes.

114
00:08:47,200 --> 00:08:50,840
So you're probably not surprised to hear that PyTorch is by far one of the world's

115
00:08:50,840 --> 00:08:55,360
most important and successful machine learning software projects today.

116
00:08:55,360 --> 00:09:00,960
And so it's become pretty clear that it's outgrowing its place of origin in many ways.

117
00:09:00,960 --> 00:09:05,160
And the project noted in the announcement, quote, we are excited to work with project

118
00:09:05,160 --> 00:09:11,040
maintainers, contributors, and the community to transition PyTorch to a neutral home where

119
00:09:11,040 --> 00:09:15,040
it can continue to enjoy strong growth and rapid innovation.

120
00:09:15,040 --> 00:09:20,000
The announcement, made by Mark Zuckerberg himself on Facebook, makes it clear that the

121
00:09:20,000 --> 00:09:24,840
new board and members will come from the commercial community, including representatives from

122
00:09:24,840 --> 00:09:29,760
Google, Amazon, NVIDIA, AMD, and Microsoft.

123
00:09:29,760 --> 00:09:34,800
Meaning they've made the official transition from the project that is seen as belonging

124
00:09:34,800 --> 00:09:39,880
to one company to now it's a project owned by all the big companies.

125
00:09:39,880 --> 00:09:43,440
And there's really a lot of big foundation energy coming off the Linux Foundation folks

126
00:09:43,440 --> 00:09:44,480
over all of this.

127
00:09:44,480 --> 00:09:50,340
They are stressing that this move makes PyTorch more industry neutral.

128
00:09:50,340 --> 00:09:54,680
And they believe that it's vital for future growth writing, quote, by creating a neutral

129
00:09:54,680 --> 00:10:00,400
home, the PyTorch Foundation, we are collectively locking in a future of transparency, communal

130
00:10:00,400 --> 00:10:08,480
governance and unprecedented scale for all.

131
00:10:08,480 --> 00:10:12,560
We've got some bad news for you Chromebook enthusiasts out there.

132
00:10:12,560 --> 00:10:16,020
It looks like the Google Pixelbook is no more.

133
00:10:16,020 --> 00:10:20,920
With reports surfacing that not only has Google canceled the upcoming Chromebook, but it's

134
00:10:20,920 --> 00:10:24,840
also disbanded the team who are working on it.

135
00:10:24,840 --> 00:10:28,240
This might be a bit of a surprise, there were some hints that Google was working on a new

136
00:10:28,240 --> 00:10:32,680
Pixelbook as recently as last year's Google IO.

137
00:10:32,680 --> 00:10:39,480
But like so many Google products, the main problem here was the high price.

138
00:10:39,480 --> 00:10:46,040
Add to that the lack of sales and just generally not a lot of interest for an expensive Chromebook.

139
00:10:46,040 --> 00:10:49,100
And I don't think this really is that surprising.

140
00:10:49,100 --> 00:10:53,240
It's kind of a repeat of a story we've seen a few too many times.

141
00:10:53,240 --> 00:10:57,880
Google makes something that's actually pretty good, but it doesn't really commit and no

142
00:10:57,880 --> 00:11:01,880
one buys it and it eventually gets canceled.

143
00:11:01,880 --> 00:11:08,720
Same old, same old news at 11.

144
00:11:08,720 --> 00:11:10,360
Linode.com slash LAN.

145
00:11:10,360 --> 00:11:13,400
Go there to get $100 in 60 day credit on a new account.

146
00:11:13,400 --> 00:11:16,400
That's a great way to support the show while you're getting yourself something.

147
00:11:16,400 --> 00:11:21,080
Linode is fast and reliable cloud hosting with the absolute best support in the business.

148
00:11:21,080 --> 00:11:24,180
Real humans every day, all day long.

149
00:11:24,180 --> 00:11:28,580
Linode's architected in a way where they had to compete on the merits of their business,

150
00:11:28,580 --> 00:11:32,080
the quality of their service and their customer service.

151
00:11:32,080 --> 00:11:36,420
And that's probably why we run everything on Linode because that culture has permeated

152
00:11:36,420 --> 00:11:43,800
deep into Linode and it makes everything stable, reliable, fast, easy dashboard, great API,

153
00:11:43,800 --> 00:11:45,920
good documentation.

154
00:11:45,920 --> 00:11:51,120
When you start at the point of we have to compete on the merits of our product, it really

155
00:11:51,120 --> 00:11:52,760
makes the whole thing great.

156
00:11:52,760 --> 00:11:57,160
I just really connect with that and they've been doing this for nearly 19 years.

157
00:11:57,160 --> 00:12:02,480
They're not a big player in this market because they got a bunch of crazy funding and so they

158
00:12:02,480 --> 00:12:06,560
just built something overnight and just tried to get as much users as possible to then make

159
00:12:06,560 --> 00:12:08,440
it profitable.

160
00:12:08,440 --> 00:12:10,440
That's not why Linode's big.

161
00:12:10,440 --> 00:12:16,800
Linode isn't my favorite place to host services because they built a book business first that

162
00:12:16,800 --> 00:12:21,360
needed a lot of infrastructure and so then they started reselling their excess capacity

163
00:12:21,360 --> 00:12:24,640
and that's not how they did it.

164
00:12:24,640 --> 00:12:26,000
You know what I'm going to say.

165
00:12:26,000 --> 00:12:27,500
They did it by building something great.

166
00:12:27,500 --> 00:12:31,700
That's why they're willing to give you $100 to go try it out, to kick the tires and see

167
00:12:31,700 --> 00:12:36,120
what Linode can do for you and they're 30% to 50% cheaper than those hyperscalers out

168
00:12:36,120 --> 00:12:37,120
there.

169
00:12:37,120 --> 00:12:39,760
They have 11 data centers around the world for you to choose from.

170
00:12:39,760 --> 00:12:44,800
Great features such as S3 compatible object storage, cloud firewall, simple clear backups,

171
00:12:44,800 --> 00:12:49,680
Kubernetes support, Terraform support, Ansible support, I could go on and on.

172
00:12:49,680 --> 00:12:52,320
You've got a price to performance ratio that's going to work for you.

173
00:12:52,320 --> 00:12:53,320
You're really going to like it.

174
00:12:53,320 --> 00:12:57,720
So go build something, go learn something, and try it for yourself while you support

175
00:12:57,720 --> 00:12:58,720
the show.

176
00:12:58,720 --> 00:13:00,460
Go to linode.com slash LAN.

177
00:13:00,460 --> 00:13:04,880
Get that $100 in 60 day credit and kick the tires for yourself.

178
00:13:04,880 --> 00:13:06,880
See what we've been talking about.

179
00:13:06,880 --> 00:13:12,240
Linode.com slash LAN.

180
00:13:12,240 --> 00:13:15,280
And a big thank you to Kalyde for making this episode possible.

181
00:13:15,280 --> 00:13:18,120
Kalyde.com slash LAN.

182
00:13:18,120 --> 00:13:23,500
Kalyde is endpoint security that uses the most powerful untapped resource in IT.

183
00:13:23,500 --> 00:13:25,280
The end users.

184
00:13:25,280 --> 00:13:28,280
If you're trying to achieve security goals, maybe it's for yourself, maybe it's for a

185
00:13:28,280 --> 00:13:30,920
third party audit, maybe it's for a boss.

186
00:13:30,920 --> 00:13:35,640
The conventional wisdom is you got to treat every device like it's Fort Knox.

187
00:13:35,640 --> 00:13:41,280
Old school device management tools like MDMs, they force disruptive agents onto your devices.

188
00:13:41,280 --> 00:13:43,600
They make the computers run slower.

189
00:13:43,600 --> 00:13:45,260
They often are restrictive.

190
00:13:45,260 --> 00:13:50,160
And sometimes, if not always, they seem to bring their own vulnerabilities with them.

191
00:13:50,160 --> 00:13:56,500
It just has a way of pitting the users against IT.

192
00:13:56,500 --> 00:13:59,040
I don't like that vibe.

193
00:13:59,040 --> 00:14:00,040
It's not good.

194
00:14:00,040 --> 00:14:02,060
You don't want the two camps to be enemies.

195
00:14:02,060 --> 00:14:05,700
You don't want to bring in something that creates its own security problems and then

196
00:14:05,700 --> 00:14:09,160
users perform their own shadow IT to get around it.

197
00:14:09,160 --> 00:14:12,440
That always breaks down.

198
00:14:12,440 --> 00:14:14,560
Kalyde does things differently.

199
00:14:14,560 --> 00:14:21,820
Instead of forcing changes on users, Kalyde sends them security recommendations via Slack.

200
00:14:21,820 --> 00:14:25,920
Kalyde will automatically notify your team when their devices are insecure and give them

201
00:14:25,920 --> 00:14:29,480
step-by-step instructions on how to solve the problem.

202
00:14:29,480 --> 00:14:33,720
By reaching out to employees via friendly Slack DM and then educating them about company

203
00:14:33,720 --> 00:14:38,800
policies, Kalyde can help you build a culture in which everyone contributes to security

204
00:14:38,800 --> 00:14:44,120
because everyone understands how and why to do it.

205
00:14:44,120 --> 00:14:47,640
And for IT admins, Kalyde provides a single dashboard that lets you monitor the security

206
00:14:47,640 --> 00:14:48,640
of your entire fleet.

207
00:14:48,640 --> 00:14:52,680
Maybe they're on a Mac, Windows, or yeah, of course, Linux.

208
00:14:52,680 --> 00:14:57,640
You can see at a glance which employees have their disks encrypted, their OS up to date,

209
00:14:57,640 --> 00:15:01,280
and a password manager installed, making it easy to prove compliance to your auditors,

210
00:15:01,280 --> 00:15:03,540
your customers, or leadership.

211
00:15:03,540 --> 00:15:09,080
So that's Kalyde, user-centered cross-platform end security for teams that Slack.

212
00:15:09,080 --> 00:15:13,000
You can meet your compliance goals by putting users first.

213
00:15:13,000 --> 00:15:17,360
Visit Kalyde.com slash LAN to find out how.

214
00:15:17,360 --> 00:15:20,480
And when you go there, they're going to hook you up with a free goodie bag that includes

215
00:15:20,480 --> 00:15:23,720
a t-shirt just for activating a free trial.

216
00:15:23,720 --> 00:15:26,400
That's right, free swag for a free trial.

217
00:15:26,400 --> 00:15:38,520
So that's K-O-L-I-D-E.com slash L-A-N, Kalyde.com slash LAN.

218
00:15:38,520 --> 00:15:43,100
As we record, the Linux Plumbers Conference is underway.

219
00:15:43,100 --> 00:15:47,840
It's built as the premier event for developers working at all levels of the Linux plumbing

220
00:15:47,840 --> 00:15:54,240
layers and often focuses on new features and systems being built for Linux.

221
00:15:54,240 --> 00:16:00,800
This year, it's taking place in person and remote in Dublin, Ireland.

222
00:16:00,800 --> 00:16:04,960
And as you might expect, an event like this is very technical.

223
00:16:04,960 --> 00:16:10,400
The information density in the videos that we have linked in the notes is extreme.

224
00:16:10,400 --> 00:16:14,480
And something else that won't surprise you, I bet, is Rust in the Kernel is one of the

225
00:16:14,480 --> 00:16:17,300
more popular topics this year.

226
00:16:17,300 --> 00:16:22,000
And specifically a talk that was given by a Western Digital staffer.

227
00:16:22,000 --> 00:16:25,000
So my name is Andreas and I'm with Western Digital.

228
00:16:25,000 --> 00:16:31,160
And I'm going to talk about work I've been doing on an NVMe driver written in Rust.

229
00:16:31,160 --> 00:16:36,840
Now you might ask yourself, why are they working on a Rust-based NVMe kernel driver when the

230
00:16:36,840 --> 00:16:40,560
existing C-based driver is in pretty good shape?

231
00:16:40,560 --> 00:16:44,160
Well, there are actually a few pretty good reasons.

232
00:16:44,160 --> 00:16:49,480
To start, it's just a relatively straightforward job without a lot of weird, complicated corner

233
00:16:49,480 --> 00:16:50,640
cases.

234
00:16:50,640 --> 00:16:55,560
It's also a good test because this is a high-performance code path, so it can kind of put Rust to the

235
00:16:55,560 --> 00:16:57,080
test.

236
00:16:57,080 --> 00:17:02,600
It's also pretty widely deployed and easy to test, and that existing C implementation,

237
00:17:02,600 --> 00:17:08,520
well, it can function as a mature reference implementation to compare the new guy to.

238
00:17:08,520 --> 00:17:15,220
And very impressively, the early Rust code that was on demo at the talk, it's keeping

239
00:17:15,220 --> 00:17:19,320
up with the tried and true C-based driver.

240
00:17:19,320 --> 00:17:29,480
We see that for the SN840 drive, we do around 700 IOPS and for the Optane drive, we do twice

241
00:17:29,480 --> 00:17:30,480
that number.

242
00:17:30,480 --> 00:17:35,840
And you can see the C in the Rust driver perform quite similarly.

243
00:17:35,840 --> 00:17:41,240
And in what seems like a great indication of just how fast the progress has been here,

244
00:17:41,240 --> 00:17:47,780
that new Rust driver can actually achieve the maximum throughput possible on the drive.

245
00:17:47,780 --> 00:17:58,680
In the unloaded system, both drivers are able to push the drives to their rated specification.

246
00:17:58,680 --> 00:17:59,680
Thank you.

247
00:17:59,680 --> 00:18:00,680
Thank you.

248
00:18:00,680 --> 00:18:07,820
There were also other Rust goodies demonstrated, including a File 9 server, modern OpenCL features

249
00:18:07,820 --> 00:18:13,580
using Rust, but the conference itself, the Linux Plumbers Conference, it spans all aspects

250
00:18:13,580 --> 00:18:14,780
of Linux plumbing.

251
00:18:14,780 --> 00:18:19,960
It's not just a Rust event, and it has been live streaming the entire time.

252
00:18:19,960 --> 00:18:23,440
Yeah, just right over on their YouTube channel.

253
00:18:23,440 --> 00:18:24,760
It's pretty easy to find.

254
00:18:24,760 --> 00:18:29,840
And if you do take a look, you'll find a treasure trove of technical videos, talks,

255
00:18:29,840 --> 00:18:33,160
debates, and a whole lot more.

256
00:18:33,160 --> 00:18:38,160
One thing that caught my eye was a new development with IO U-Ring.

257
00:18:38,160 --> 00:18:43,880
Now if you've forgotten, IO U-Ring is a mechanism for quickly performing a batch of operations

258
00:18:43,880 --> 00:18:48,080
within the kernel on behalf of a userspace process.

259
00:18:48,080 --> 00:18:52,280
You can kind of think of it as something of the new default mechanism if you need to perform

260
00:18:52,280 --> 00:18:56,480
multiple syscalls all at once.

261
00:18:56,480 --> 00:19:03,120
Now early on, as the name might suggest, the main use case for IO U-Ring has been asynchronous

262
00:19:03,120 --> 00:19:09,480
I-O, where expensive context switches between userspace and kernelspace can be a real limitation

263
00:19:09,480 --> 00:19:12,360
and add to your latency.

264
00:19:12,360 --> 00:19:19,120
But much like friend of the show EBPF, IO U-Ring has started to find a myriad of different

265
00:19:19,120 --> 00:19:25,360
use cases in the kernel, including a fascinating recent attempt at implementing block devices

266
00:19:25,360 --> 00:19:27,080
in userspace.

267
00:19:27,080 --> 00:19:31,880
And at the Plumbers conference this week, we learned of yet another potential use area

268
00:19:31,880 --> 00:19:37,040
that the kernel could benefit from this model, spawning new processes.

269
00:19:37,040 --> 00:19:42,000
This new work comes from Josh Triplett, a former notable Intel Linux engineer and co-lead

270
00:19:42,000 --> 00:19:44,080
of the Rust language team.

271
00:19:44,080 --> 00:19:46,280
He's been focused on build systems recently.

272
00:19:46,280 --> 00:19:50,820
And if you've ever worked in that space, you know these build systems spawn a huge number

273
00:19:50,820 --> 00:19:51,820
of processes.

274
00:19:51,820 --> 00:19:57,560
So as it stands now, spawning a process consists of basically three steps.

275
00:19:57,560 --> 00:20:01,560
You create the new process, you twiddle the attributes of the new process, and then you

276
00:20:01,560 --> 00:20:03,100
load the new process image.

277
00:20:03,100 --> 00:20:05,440
And for this, well, we presently have three choices.

278
00:20:05,440 --> 00:20:09,760
You can fork, vFork, and you can POSIX spawn.

279
00:20:09,760 --> 00:20:15,480
VFork is by far the most common of those methods, going back to the early days of Unix.

280
00:20:15,480 --> 00:20:19,600
But it comes with a fair bit of complexity and overhead.

281
00:20:19,600 --> 00:20:23,720
That's where those other two mechanisms come in, vFork and POSIX spawn.

282
00:20:23,720 --> 00:20:29,240
They do allow you to avoid some of those downsides, but that too comes at a price.

283
00:20:29,240 --> 00:20:33,920
POSIX spawn, for instance, only permits a very limited set of twiddling.

284
00:20:33,920 --> 00:20:40,420
And well, vFork is considered so unsafe that it's difficult to recommend to anyone but

285
00:20:40,420 --> 00:20:42,640
an expert.

286
00:20:42,640 --> 00:20:50,760
And so, thus was born, IO U-Ring Spawn, a mechanism for launching empty new processes

287
00:20:50,760 --> 00:20:53,920
with an associated IO U-Ring.

288
00:20:53,920 --> 00:20:59,800
The goal here is to handle the pre-exec steps when you're launching a new process entirely

289
00:20:59,800 --> 00:21:03,760
in the kernel, with no user space required.

290
00:21:03,760 --> 00:21:09,120
Eliminating the need for calling fork, or even vFork, and eliminating some of the overhead

291
00:21:09,120 --> 00:21:12,280
that comes from having to copy page table information.

292
00:21:12,280 --> 00:21:19,120
Now, we should probably stress here that this work is really just getting started, but early

293
00:21:19,120 --> 00:21:25,240
benchmarks show that IO U-Ring Spawn is much faster than fork or POSIX spawn, and it's

294
00:21:25,240 --> 00:21:32,240
even up to 10% faster than vFork while being a whole lot safer and more flexible.

295
00:21:32,240 --> 00:21:38,800
And, according to Josh, he and Jens Axbo, the IO U-Ring and block device subsistent

296
00:21:38,800 --> 00:21:43,400
maintainer, and as we've mentioned here on the show, something of a performance optimization

297
00:21:43,400 --> 00:21:49,840
wizard himself, well, they have plans in the works to speed things up even more.

298
00:21:49,840 --> 00:21:52,080
I love that.

299
00:21:52,080 --> 00:21:58,160
You get a real sense that there are some performance hounds on the job these days, and they are

300
00:21:58,160 --> 00:22:04,720
laying the foundation for massive optimizations that no doubt will benefit the enterprise,

301
00:22:04,720 --> 00:22:08,560
but are absolutely going to benefit everyday Linux users as well.

302
00:22:08,560 --> 00:22:13,520
You really see the work of the future getting started today at the Plumbers Conference,

303
00:22:13,520 --> 00:22:18,100
and this is just one of those chances we have as free software users to watch this stuff

304
00:22:18,100 --> 00:22:23,040
get made and discussed and demonstrated and debated in real time.

305
00:22:23,040 --> 00:22:26,680
You can really follow the leading edge of development, so check out the links in the

306
00:22:26,680 --> 00:22:30,480
show notes, and of course, we'll keep an eye on all of it and everything in the world of

307
00:22:30,480 --> 00:22:34,600
Linux and open source, so don't miss a single episode of Linux Action News.

308
00:22:34,600 --> 00:22:40,140
Go over to linuxactionnews.com slash subscribe for all the ways to get new episodes.

309
00:22:40,140 --> 00:22:45,920
And linuxactionnews.com slash contact to let us know about exciting new use cases for IO

310
00:22:45,920 --> 00:22:48,260
U-Ring that you're considering.

311
00:22:48,260 --> 00:22:51,160
And we are hitting the road for our West Coast tour.

312
00:22:51,160 --> 00:22:55,400
If you're up and down the I-5 corridor, check out meetup.com slash Jupiter Broadcasting

313
00:22:55,400 --> 00:22:57,000
and sign up for one of our meetups.

314
00:22:57,000 --> 00:22:58,520
We'd love to see you.

315
00:22:58,520 --> 00:23:02,920
But don't worry, even if you can't make it, this show will be back next week with our

316
00:23:02,920 --> 00:23:07,120
take on the latest Linux and open source news.

317
00:23:07,120 --> 00:23:26,400
Thanks for joining us, and that's all the news for this week.

