Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 53, recorded on May 13, 2018.
I'm Chris.
And I'm Joe.
Hello, Joe.
It's good to be connected with you.
Happy Yankee Mother's Day to you, all the moms out there and all the dude moms.
And let's kick off a big show with Linux apps officially being announced for Chrome OS by
Google this week.
Yeah, this is something that we've been reporting on for what feels like weeks or months at
this point.
But now with Google IO comes the official announcement, although there's not much information
about it.
But at least we know it's definitely happening, that you can actually try it now.
With some dev builds of Chrome OS, you can run proper Linux applications.
Yeah, it appears that Google has created a virtual machine that was designed from scratch
for Chromebooks.
At least this is their claim.
And they say it'll start in seconds and integrate completely with typical Chromebook features.
You'll be able to launch Linux apps with a click of an icon.
The windows can be moved around, files can be opened directly from apps, and there's
a preview that's coming to Pixelbooks soon.
But maybe don't get your hopes up too much.
Yeah, it's going to be the end of the year at least by the time this is actually stable
and completely working.
And even then, it's only going to be on a few high-end Chromebooks that are very expensive.
And at that point, if you're going to spend $1,000 on a machine, aren't you better off
buying a proper Linux machine?
I don't know.
I'm not really too surprised that it's only going to work on the nicer Chromebooks.
What's really happening here is they've created a VM called CROSVM, C-R-O-S-V-M.
And it's using Linux's KVM hypervisor.
So that tells you you're going to have to have some resources, some power to actually
make this thing work.
And you're going to see it trickle out for a bit, and I wouldn't be surprised if the
enterprising community members out there don't get this working in other Chromebooks.
But around July 31, Chrome OS 68 is due.
That's when the beta stuff, like the quote-unquote stable but still kind of beta, you know how
Google does things, that's when that lands, is on version 68, which will be around July
31.
They say, they being folks from Google that spoke with the register, that they're still
having issues getting graphics and sound drivers to play ball.
And on some models, it's trickier than on other models.
And there could be some tweaking required before you'll be able to just fire up Linux
if you get started early.
But like Joe was saying, the quote-unquote fairly stable version isn't expected until
Chrome 71, which is the end of the year.
Maybe by then, you'll see more powerful Chromebook shipping, another iteration, another generation
of Chromebooks.
We may bring that bar up just with the next batch of hardware.
But wasn't the whole point of Chromebooks that they were inexpensive, didn't need much
RAM, didn't need much storage.
And now if you're going to need to have at least four or eight or 16 gigs of RAM and
loads of storage to store all these applications, they're just going to get so expensive that
I return to my original point.
Don't you want a proper laptop at that point?
It does put the Pixelbook into more perspective.
Why has Google been shipping $1,000 Chromebook?
You can start to see some of the reasons.
I don't know, Joe.
I think we're seeing a gold rush here in a way.
You have Microsoft shipping the Windows subsystem for Linux.
You've got Dell shipping the Sputnik laptops.
And now you've got Google working hard to make Linux apps possible on Chromebooks.
They're all trying to get to that dev sweet spot where they can sell a machine to a software
developer.
And they all think they have a different crack on it.
Google's crack is simplicity, replaceability, cloud storage.
But I tend to agree with you.
If they go down this route, they're going to have to redefine what makes a Chromebook
a Chromebook because you're going to need more storage and you're likely going to need
more RAM.
Chrome itself takes quite a bit of system resources.
So to run complicated applications on top of that, I think you will have to redefine
what a Chromebook means.
To me, a Chromebook is something that someone who's never really had a laptop before would
use.
It's a browser and that's pretty much all it was historically.
My mother-in-law has got one and happily uses it and talks to my wife and all the rest of
it on Hangouts and has a great time and it's secure and simple and easy to use.
To target it at a developer, I just don't really see why a developer would want a Chrome
OS device because you could just install Chrome on an XPS 13 or whatever and you're going
to have a broadly similar experience plus way more.
I can see why they want to go after the developers because it is a lucrative market but it just
seems misguided to me.
See, I disagree.
I think this is the brilliance of Google's strategy.
You start out small and simple and you build up from there and with Linux as the base,
they have a lot of potential.
They can get brand trust and recognition for creating laptops that are reliable and easy
to reload and are fairly safe for average users and have maybe the term simplicity implied
to them.
Those are fundamentals that appeal to people that just want to get their job done, that
just want to get work done and there's a lot of developers out there that fit in that category.
If the device is sophisticated enough to do their job but simple enough to stay out of
their way, it's going to be appealing.
But then the other aspect of Chromebooks that is I think pretty important to remember is
the centralized management of them which is extremely appealing to schools, universities
and enterprises.
So you start looking at fleet machines that are cheap to buy in bulk so you can buy standard
universal chargers, standard universal VGA or whatever kind of projector adapter you
might need and you have an orchestration management suite that sits on top of all of them that
lets your enterprise, school, university, whatever manage them from one central point.
It becomes very appealing to these groups to start issuing them as standard machines
and as they become more capable, why not?
Like there becomes less and less reason to do so.
And at the same time, they're converging on that mindset of I just need a machine that
can get my work done and if now I can run Sublime Text or Atom Editor or Visual Studio
Code and I can have Chrome, I'm pretty much good to go.
Yeah, I suppose I was thinking about this from the wrong angle then because I'm thinking
about freelance developers who wouldn't be interested in this but as you say, yes, when
you take into consideration that orchestration and deploying this on a large scale to a lot
of developers or students, then yeah, that suddenly makes more sense.
Maybe I'm not smarter than Google after all then.
Well, it looks like they're finally outsmarting OEMs or at least putting their feet to the
fire with some changes that were sort of under the wire from Google IO this week.
Yeah, this came out of the What's New in Android Security talk from Google IO.
And what Google are doing here is mandating that if you're going to be part of the Android
Partner Program, you're going to have to commit to regular security patches.
We don't know whether that means monthly but you would have thought so, wouldn't you?
I hope so.
I am very elated by this news.
This is something that I have really given Google a hard time about for a long time.
In my personal opinion, this should have been the way these agreements worked from day one.
And I think Google felt differently.
They thought for market adoption reasons that they could backfill this problem.
And so maybe they're right, maybe I was right, but these are changes that will be landing
as of Android P.
So if you're on a release before Android P, I'm sorry to say this will not apply to you,
but there is a silver lining.
When you finally get a P or newer Android device, you're going to take advantage of
a bunch of things that Google's been working on for years.
You've heard us talk about Project Treble before.
That's the modular piece that allows the drivers for the system on a chip and those components
to be developed separately from the Android layer.
And in this talk, they tried to couch this whole thing.
They tried to ease the blow by going through the history of we've been working on Treble,
making this possible.
We're trying to get this easier and easier for OEMs, but if you want to continue to be
our partner, you will begin to patch your devices.
Now we don't know how Google's going to vet this to know if they actually fix the issue
because that's also something we've talked about in the past is sometimes these patches
quote unquote don't fix all of the problems.
And we also don't know if Google has any provisions in place to reprimand partners or set a very
specific timeline.
But early days are looking good and you'll likely be able to find the talk online within
the next couple of days to get the details yourself.
But in the talk, they say, we've been working with our OEMs to build this patching into
our agreements.
Now this is a reality.
It'll lead to a massive increase in the number of devices and users receiving regular security
patches.
And that was Google's head of Android Platform Security.
I am very, very excited to hear that news.
I have been waiting for many Google IOs for them to address this specific problem.
I suspected it was coming when they announced Treble and now this is the other shoe dropping.
But isn't this going to create a two tier system where you've got the more expensive
phones which are part of the partner program and then all of the other cheap ones that
aren't and they won't commit to this.
And so if you can't afford to buy an expensive phone, you're just not going to get any security
updates.
I don't know.
I think we already have that today.
You generally have your premier Android devices from Samsung and other manufacturers that
do get updates, your sort of category leading devices that stay patched because that's what
that customer base wants.
And then you have the lower tier devices which just get neglected.
That's reality today.
With this new security system, they have to comply as part of the partner agreement.
So from here on forward, if they want to ship any new versions of Android with the Google
apps and all of the Play API stuff that is blessed by Google, they have to play ball.
But there's nothing stopping them shipping an old version which we've seen many, many
times before.
You can go and buy a phone now that's got security holes in it that's never going to
get patched.
You do also have to wonder if this is going to lead to some new agreements with some alternative
ROMs that people might just start shipping on their devices instead.
Possibly.
We saw that with CyanogenMod and that didn't end well.
Maybe second time around it might go better.
I don't know if Lineage are particularly interested in doing that, but maybe one ROM maker might
be.
It wouldn't really appeal to me.
This appeals to me.
Having security patches, having the Linux device in my pocket that is connected to the
internet 24-7, it really strongly appeals to me to have it updated and secure.
So now this is something I'll be looking for when I'm shopping for Android devices in the
future.
But you may be shopping for an Android device that you didn't even know was running Android.
At least if Google has their way, Android Things 1.0 is now available for developers
to build commercial IoT products.
How long before Stallman starts calling this Android Stings?
Probably already has.
Yeah, so this is for their IoT devices.
It's a paired down version of Android that will run with very low resources, as little
as 32 megabytes of RAM, which is significantly less than standard Android.
And it is designed for, well, Internet of Things devices, trying to push it to the billions
of devices trying to connect absolutely everything.
There's a gold rush in that area, and Google wants a part of it.
Yeah, we've seen Ubuntu Core, which addresses this.
We've seen Azure Sphere OS, which is addressing this.
And now we're seeing 1.0 of Android Things, which doesn't have a large hardware partnership
to promote.
Doesn't have a huge deep bench of devices.
You can just go load it on.
But it does have one card up its sleeve, and that's support for the Raspberry Pi 3 Model
B.
Now, I saw a screenshot of this on Twitter today.
You've been trying it out on your Raspberry Pi.
Yeah, this is where it's so perfectly Google.
It's great, because you log in to the Android Things dashboard, and you just start creating
a custom image for a device.
And then you can download a little utility that works on Linux, also available for the
Mac and Windows.
And it flashes an SD card with everything you need for Android IoT.
And then you boot the Raspberry Pi.
It connects back up to your account and starts downloading test images or apps that you've
built for it.
It's pretty slick.
And within five minutes, I had a Raspberry Pi that was connecting back to Google's developer
dashboard that was ready for me to turn it into whatever I wanted.
Big question everyone in the audience will be asking is, is Google's dashboard a dashboard
for days?
It's not quite a dashboard for days, but it does have a cool feature that's a lot like
Google Docs, where I could share a creation.
So just to play around, I shared it with you.
So now, like in Google Docs, you add a collaborator.
I added you.
And you can go in there and start mucking around with my Raspberry Pi image, and you
could actually deploy a new image to my Raspberry Pi.
Yeah, this does seem very developer friendly, but there was a big red flag as far as I could
see.
And that was that they were talking about long-term support, and then they said three
years.
Yeah.
Yeah, where Azure Sphere OS is 10 years, I think Ubuntu Core is five years.
That's a little short for a device that you buy and then put in your home, integrate into
your home.
Three years is a little short.
But I suppose it's early days, maybe, and people are replacing these at a higher frequency.
That's the best I can come up with.
Yeah, contributing yet more to the e-waste problem.
It just seems three years is, for a phone, OK, the kind of old hat.
But for something like a thermostat is the go-to, isn't it, for IoT?
A thermostat you have for 20 or 30 years, not three.
Yeah, or light switches, things like that that get built into your wall.
And I think that's my major problem with the Android Things platform, is if I was going
to put on my business consultancy hat and somebody was asking me about building a product
around an IoT platform, my main issue with Android would be it's too nascent still.
They're making a ton of changes to Android right now.
And Android IoT is an offshoot of something that's undergoing massive change, especially
with Fuchsia in the background.
We don't really know where that's going, where that's going to lead Android.
I wouldn't bet the farm on this.
I might bet the farm on Azure Sphere OS or Ubuntu Core.
But Android, Internet of Things, the only thing I like about it is it gives me a lot
of shortcuts.
I can get up and running fast.
There's a lot of system on a chip and system on a module makers who are building for Android
already.
And Google has a massive infrastructure for me to take advantage of.
But three years and Android's nascent nature in this area really turned me off.
Yeah, Fuchsia was the first thing I thought about here.
I thought that was going to be the new platform that they do stuff like this with.
It just seems to be the elephant in the room here.
blast.ting.com.
It's smarter than unlimited.
If you use less, you pay less.
But more than that, I can personally say I am very glad that I'm taking Ting with me
on the road trip down to Texas in a couple of weeks.
They have a CDMA and a GSM network.
That means when I'm on the road, my business is going to be connected.
I have to have internet connectivity to do what I do.
You guys obviously know that, and that's why I choose Ting.
And here's the other part that I am very appreciative.
I've only had to use it once while I was on the road, but they stuck with me.
Their customer support is top notch.
I figured after 45 minutes, they'd bail on me.
Sorry, sir.
It's a device.
We'll get you out a new one.
They hung on the line the entire time while we tried different stuff.
And what I really came to appreciate is these are geeks at Ting.
They're geeks, and they really like this stuff.
And if you're willing to work, they're willing to work with you.
They have a great control panel.
They have fantastic customer support.
So I feel like I have a support net underneath me when I go out on the road.
But here's something that's kind of cool that's coming down from Ting right now.
You can buy a device directly from Ting, and it comes clean.
It's the base OS.
You just do whatever you want with it, or you can bring your own.
And because they have CDMA and GSM, I'd check their BYOD page.
There's probably a good chance your device is going to be compatible.
But if you're looking for a new one, they just launched the Moto Z2.
Now what's familiar about that Moto Z2?
It's the one that supports Moto Mods, where you can hook up different cameras or speakers
or all the different things, like the JBL Sound Boost 2.
All can be snapped in.
Ting is now offering that device.
And if you go to lass.ting.com, you'll get $25 off.
But for a limited time, you can save up to $150 on the Z2.
More details on Ting's blog.
Start by going to lass.ting.com, and then jump around from there.
That's lass.ting.com.
It wasn't just Google I.O. that happened this past week, also the Red Hat Summit happened.
And coming out of that, we finally had some clarification on what's happening with Core
OS since Red Hat bought it.
Yeah.
So Core OS is going to continue, but not as we know it.
Red Hat will be integrating Core OS Tectonics, which is its Kubernetes distribution, into
Red Hat Enterprise.
Also key, its Enterprise Container Registry System, and of course, its big dog, Container
Linux, which is the lightweight cluster Linux distribution, all of which will be rolled
into Red Hat's primary container and Kubernetes-based software portfolio.
There is one popular omission from Core OS not making it into mainline Red Hat Enterprise,
and that's Rocket, the container standard that is an alternative to Docker.
Instead, that will become a community-supported container technology.
Now the big question that I always had when Red Hat acquired Core OS is what happens to
Project Atomic, which tries to accomplish some of the same goals?
Well, Container Linux and Project Atomic, which is built around the lightweight containerized
operating system Atomic Host, will be united into Red Hat's Core OS, all folded into one.
This is from a Red Hat employee, quote, Red Hat Core OS will preserve the best from both
offerings.
Ultimately, though, what's really happening here is Red Hat Core OS will supersede Atomic
Host and Container Linux.
Now I don't know if that's true across the board or just in enterprise implementations.
I think those projects will continue as community efforts, and that's something I'm going to
reach out to those different projects and try to get clarification on over the next
couple of weeks.
They're all just getting back from Red Hat Summit right now, otherwise I would have tried
to pin them down for this episode, but I will try to follow up on that when they have time.
But here's what we do know, there will be an upstream community version of Core OS,
as Fedora is sort of like to Red Hat Enterprise Linux, and it's all kind of still a work in
progress.
I think those details are still forming.
And Project Atomic will eventually just be phased away, it sounds like.
But the code itself will live on as other parts of Red Hat Enterprise Linux because
it's still great code.
It's not like the code's been wasted.
I'm going to have to steal Michael's joke here.
I really hope they call the upstream version Fedora Core OS.
I know.
It would be really kind of the perfect opportunity to bring it back because it always was a little
punchier with that core in there.
Red Hat Core OS will provide the new foundation though for Red Hat OpenShift Container Platform
RHOCP, and I mention that because you're going to hear a lot more about that and Red Hat
OpenShift Online and the Red Hat OpenShift dedicated.
Stay tuned for more information on those in the future.
But this is really for customers who want what's called an immutable infrastructure
where you can destroy a system and spin up a system, the data stays intact, the individual
servers are more like cattle than they are pets, and Red Hat's pushing hard into this
area.
And one of the things that they talked about at Red Hat Enterprise Summit is they're hearing
from customers they want automatic updates, which surprised me.
But in a world of containerization and virtual machines and separate data stores, I could
see it.
And that's really where Red Hat's trying to get to is deliver reliable, solid, enterprise-grade
automatic updates.
And that's what all of this is playing into, that and immutable infrastructure, deploying
systems across open and public clouds and closed clouds and on-premises, it's all one
big effort that they're trying to get to to make infrastructure just a detail, an implementation
detail.
Instead of thinking about racking a massive server in a rack, you just think about clicking
a button and all of the software behind the scenes deploys everything.
Well, as usual, this is just Red Hat staying on top of market trends.
They didn't get to be the biggest open source company by just resting on their laurels and
never changing.
And they're kind of just at that right size, aren't they, where they can afford to make
these purchases and integrate these other technologies into what they're already doing.
But also, they're small enough to be agile with it.
Yeah, Canonical and others may have gotten there first.
I mean, look at CoreOS as an example.
They were there quite a while ago.
But you have to give credit to Red Hat for not letting this pass by them.
And then when they do act, they're acting very quickly.
I think the whole story around Project Atomic and what happens with Container Linux as a
community project and all of that is still a little fuzzy.
And if I could have only one criticism in all of this is it really feels like Red Hat
is trying to please everyone in a way that Microsoft used to, which I think cost them
greatly.
And there's one key phrase that Red Hat is promising.
They say, no users or communities will be left behind, which, man, that's a solid statement.
And that's something that you could take to the bank and as an enterprise makes you feel
good.
But as a customer watching from the outside, I look at that and go, well, at some point,
at some point, you have to cut off dead weight and you have to focus.
And so what I do see here is a very convoluted message.
And when you add in things like Fedora and CentOS, it gets even more convoluted.
And if I could have any one critique, it would be it feels like they're trying to please
too many people at once.
But when you're making $3 billion a year, you can afford to try to please a lot of people.
And like you said, Joe, this is Red Hat being savvy and responding to the demands of the
market.
And I think the components of CoreOS they're integrating are going to be real sellers.
And I think it's going to do well for Red Hat Enterprise Linux.
And if I was a Red Hat Enterprise Linux administrator, I'd be very happy to see that Red Hat is staying
on top of this.
They're keeping RHEL and all of the things I love about Red Hat.
But they're expanding into this area, in fact, in some big ways, like with Microsoft.
Yeah, they've been working with Microsoft to bring OpenShift to Azure.
Right.
Red Hat OpenShift, which is Red Hat's Kubernetes platform on Microsoft Azure, which is Microsoft's
public cloud.
And that initially is like, oh, interesting, OK, that sounds kind of logical.
But it's deeper than that.
They are offering fully managed services on Azure for people running Red Hat.
Think about that for a moment.
Microsoft is going to be managing Red Hat Enterprise servers running on Azure.
And they're creating a system where you can move infrastructure between on-premises up
into Azure, over onto DigitalOcean, back down to your own system, and at Red Hat Summit.
Red Hat's director of developer experience showed off a hybrid cloud using an on-site
rack, and then an Azure rack in Texas, and Amazon Web Services in Ohio.
And then using Kubernetes, Red Hat demonstrated that you can load balance across all three
clouds automatically and in real time.
Pretty big for people that have a large on-premises deployment but need a little extra infrastructure
from time to time, which is a lot of companies.
And now you can build for Red Hat on-premises and deploy up to Azure.
And sitting on top of all of this is the fact that Azure was just recently certified by
the Australian government for use with Australian government private information.
They have the certification that they give out to only a few cloud hosting providers,
and now Azure is one of them, which I think is one of the reasons Red Hat wanted to get
this in the bag.
Now, I'm sure there's plenty of people out there thinking, Red Hat causing up to Microsoft,
I don't like that.
But this is the reality of enterprise computing now, that Microsoft are a huge part of it,
and companies like Red Hat have no choice but to make these deals with them.
Here's another way to reframe Microsoft's motivations in this deal.
Microsoft just wants to sell Azure services and software subscriptions to people that
are creating software that runs on the cloud, because that's a way bigger market than the
home consumer PC.
As an example, Visual Studio Enterprise and Visual Studio Professional subscribers, Microsoft
customers, as part of this new deal with Red Hat now, will receive Red Hat Enterprise Linux
credits.
Developers will be able to deploy Red Hat Enterprise servers as just part of their built-in
package they get now, and they can deploy.NET, Java, or any other open source framework
on those Red Hat Enterprise servers running on Azure that Microsoft's paying the bill
for.
It's corporate synergy.
Kumbaya, Joe, doesn't it feel great?
Speaking of synergies, you're going to get more Linux on your Windows, even if it's a
Windows ARM system.
Yeah, this is quite surprising.
We've seen the Windows subsystem for Linux as part of Windows 10 since almost the beginning
of Windows 10.
And also we've seen Windows 10 being shipped on ARM-based devices fairly recently.
But I never expected those ARM devices to be capable of running the subsystem for Linux,
because you've already got this compatibility layer going on between x86 and ARM.
And now you're going to have this other compatibility layer between the NT kernel and the Linux
userland.
I can't see this working particularly well.
Can you?
Well, they were talking about it at this week's Build conference, because aside from Google
I.O. and aside from Red Hat Summit, there was also the Microsoft Build conference this
week.
And NeoWin spotted a presentation where Microsoft was showing off Ubuntu running on a Windows
10 ARM computer, which if you think about the way it works, if you recall, they're not
emulating with the Windows subsystem for Linux.
They're translating like Wine does.
It's taking a call and it's rerouting it to the Windows equivalent of that call.
And if you're doing that with 64 and 32 bit x86 applications, it's really the same math
just with that call redirection on top of it.
There's got to be some overhead there, though, surely.
I would think so.
And I would not want to use that as my daily driver.
But again, if you're on the command line with these small apps, that's not so bad.
The overhead there might be barely noticeable.
Possibly.
I mean, if you're just using it as a replacement for PuTTY, which I would imagine quite a lot
of people are, then you're probably not going to notice.
Yeah.
But the 12 hour battery life is sort of making it all worth it.
Yeah, I suppose.
And again, this is new Microsoft that we keep talking about.
And it keeps annoying the, shall we say, traditionalists in the Linux community.
I think we just have to accept this, don't we?
I guess so.
They're embracing it.
I suppose so.
I mean, companies will go where the profits flow.
And I did watch the keynote and different presentations from Build and more than a few
times I saw Linux up on stage.
It's still weird to me.
It's still really strange.
Or I saw them using SSH a lot, which is always very odd.
And all in on the Raspberry Pi, too.
Lots of demos with the Raspberry Pi, which I found to be, well, like I was watching a
Google IO keynote, not a Microsoft keynote.
So it is definitely a different time, right?
It's just where the money is.
Yeah.
I wonder how much Microsoft stuff you're going to see when you go down to Texas Linux Fest.
Oh, that's right.
I'll be heading down there.
Texas Linux Fest is June 8th through the 9th.
And I'm heading out around the end of May to make the long trek down there.
So if you're in the Austin area, come say hi.
I'll be setting up a Telegram group.
But I'll also have the Rover tracker with me.
So if you're along my route, reach out over Telegram or Twitter, and maybe we can meet
up along the way.
That'll all be tracked over at jupitabroadcasting.com slash rover.
And I'll have the Texas Linux Fest Meetup Telegram group at some point.
If you go to jupitabroadcasting.com slash telegram, I'll probably announce it in our main channel.
And while I'm on the road, the show will go on.
So check out every single episode of Linux Action News by going to linuxactionnews.com
slash subscribe for all the ways to get new episodes.
And go to linuxactionnews.com slash contact for ways to get in touch.
And please consider supporting the entire network and all of our great open source and
Linux coverage at patreon.com slash jupitersignal.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris Ellis.
I'm at Joel Rissington.
Thank you for joining us, and we will see you next week.
Have a great day.
Bye-bye.
See you later.
Bye-bye.
