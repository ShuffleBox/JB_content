Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 60, recorded on July 1st, 2018.
I'm Chris.
And I'm Joe.
Hello, Joe.
It's good to be connected with you.
And we have huge news, lots to get into this week.
So let's start down at the infrastructure level, the chip level, if you will.
Yes, Psi5, who are the predominant company producing RISC-V chips and boards, have come
out and said that they can do better than ARM when it comes to power efficiency.
That's quite the claim.
Yeah, the California-based Psi5 announced the availability of the E2 Core IP series
of chips, which are configurable microcontroller cores that use less power and can cost less
than, say, an ARM processor.
So remember, Psi5 licenses its chip designs to other companies, which then customize them
for manufacturing on their own inside their own products.
But compared to ARM, they have a much more open approach to the designs of the actual
CPUs.
And the E2 series extends Psi5's product line with two new standard cores, the E21, which
is a mainstream performance core for microcontrollers, sensors, motion things, Internet of Things
types of devices.
But then there's also the E20, which is a power-efficient standard core designed for
more mixed devices, like finite state controls and devices like open and controlling of DAMs.
You combine that with their previously announced desktop-level designs, which are built first
for Linux, and the whole range is open.
The whole range, the spec, the design, all of it is open.
And some of them are Linux-first devices.
Except that they've run into a bit of criticism recently for not being quite as open as people
hoped they would be.
Joe, I know.
The devil is always in the details.
You hear all these good things, and then somebody comes along and points out the well, actually.
So this is Ron Minnick.
He has been working with the Core Boot project for more than a decade.
He spearheads the effort to getting Core Boot on new Chrome OS devices at Google.
And he commented recently on the Hi5 chips.
He says, the Hi5 is really no more open today than your average ARM SoC.
In fact, it may be even less open than the Power Chips.
He says, I realize there's been a lot of hope that RISC-V implied general openness.
But open instruction sets do not necessarily result in open implementations.
An open implementation of RISC-V will require a commitment on the part of a company to open
up at all levels, not just the instruction set.
And if you dig down here, it turns out there is this issue with the DRAM controller and
the fact that the timing for the DRAM has to be set on boot every single time by proprietary
firmware.
However, it seems that Ron talking about this may have actually worked because Sci-5 are
now promising to open source all that stuff.
Yeah, talk about a really fast response on Sci-5's part.
And I wonder why it took a cage rattling to even get here.
But Sci-5 has commented on this saying that they are committed to supporting an open source
community and they're pleased to report that after discussions with IP partners, they're
going to be able to release all of the code.
The source code for the FSBL, including the DDR initialization, will be available shortly.
We can attest here that there is no other firmware run by the system during boot.
This is quite a relief to me because I'd pinned so many hopes on RISC-V as the future of computing.
Not right now.
It's ready for mainstream use, but it's Linux first, as you said, and it's supposed to be
completely open.
And when I first heard about it not being open, I was really disappointed by that.
So I'm really hoping that you make good on these promises and that we can actually get
some properly free software running, free hardware sometime soon that can compete with
x86.
Well, OK, maybe that's a bit of a dream, but at least can compete with ARM, right?
It's so close.
It's so close.
Like, look at the Hi5 Unleashed, the U540.
It's really almost there.
It's a five core, 1.5 gigahertz CPU.
It's fully Linux capable.
It's got gigabit ethernet, eight gigabytes of DDR4 RAM.
It's got a micro SD card reader, and it's around $1,000 today before it's even hit mass
market scale.
That's pretty dang close to a standard desktop or especially a standard ARM device.
If this is today, 2018, then imagine where we could be in 2020 for $1,000.
It could be a very competitive system.
And the fact that they are building this with Linux first and apparently even going back
and fixing rough areas that needed to be addressed is a very positive sign, I think.
So I say it's still worth following because it's getting more and more promising.
Yeah, but you're not going to be able to dual boot and play Fortnite on it, are you?
That's what I have a mobile device for.
In the meantime, at least I'll be sending emails potentially a little more securely.
Yeah, the EFF have announced start TLS everywhere, which they are hoping is going to be to email
as let's encrypt is to HTTPS.
Right.
So it's really all about start TTLS, which is an addition to SMTP, which really allows
one email server to say to the other, hey, I just want to connect to you over an encrypted
communications channel.
And then the recipient email server will say, sure, let's negotiate an encrypted communications
channel.
The server set up the channels and the emails delivered securely so that anybody listening
on the traffic between the servers only sees the encrypted data.
But keep in mind, start TTLS is not a replacement for secure end to end solutions completely.
Instead, it really allows email service providers and administrators to provide a baseline measure
of security just against outside adversaries in general and provides authentication and
verification.
Yeah, because the problem this is aiming to solve is that start TLS is used by a lot of
servers, but because they're not validating the certificates that they're using, then
they may as well not be.
Yeah, this lack of validation almost makes it pointless.
And as a result, the ecosystem is kind of stuck in this whole chicken and egg problem.
No one validates certificates because the other party often doesn't have a valid one.
And the long tail of mail servers that continue to use invalid certificates because no one's
validating them anyway.
So who wants to fix it when no one's really doing it right in the very first place?
But that's where this effort really comes in.
Start TLS to the rescue here.
If everyone can use start TLS with a let's encrypt back end to automatically get a valid
certificate from let's encrypt, then when you implement this at day one, you'll have
a valid certificate, then it's all of a sudden it's worth verifying and checking.
The more servers that have valid certificates, the more reason there is to verify and check
and you sort of solve this chicken and egg problem.
Now obviously this isn't going to replace end to end encryption, but if you have to
use email, then it's way better if you've got start TLS configured properly and working.
So it's a good initiative by the EFF to do this, I think.
They're kind of expanding a little bit here, but they're expanding in the right directions
as far as I'm concerned.
Okay, well, let's shift gears completely and talk about a story that got a lot of attention
in the last couple of days.
Gen2's GitHub organization was compromised.
Yeah, a malicious actor took control and locked the developers out.
And so that's a go to GitHub support.
And thankfully it was disabled pretty quickly and now it seems to be almost fixed.
It's not quite back up yet, but they have sorted out all of the malicious commits and
everything and they're just dealing with the pull requests as we record this.
It's quite embarrassing for Gen2, isn't it?
Really this is all hands to yellow alert.
We're not full red alert here because the GitHub organization that got hacked was a
mirror of this project's upstream source and work, including the stuff that touches the
distributions and all of that was not affected by this.
So it sucks and it's embarrassing, but it didn't actually impact the core source code
of the project.
And to Gen2's credit, because these things do happen, their response has been outstanding.
In fact, one of the best responses I've seen from a Linux distribution.
They have status pages.
They have a Wiki entry that's a post-mortem as they learn more and they're keeping their
GitHub users updated as well.
And they're clearly documenting their current interactions with the GitHub organization.
It's really done responsibly.
So I have to give Gen2 credit for that because bad things happen and when you consider how
many Linux distributions are out there, the fact that their infrastructure isn't attacked
and compromised more often is pretty remarkable.
And when it is, I think Gen2's response here should be looked at as a model.
It sucks that it happened, but how they're handling the response is top notch.
But surely no one's using Gen2 these days anyway, they've all moved over to Arch, haven't
they?
Oh, that hurts.
That hurts.
That hurts, Joe.
That hurts.
Obviously not because people cared.
Surely no one would be dumb enough to run a server on Gen2 or anything.
Hey now.
You know I've done that.
You know I've done that.
The project has really handled this well and the information was spread wide and far.
So there does still seem to be interest in the old Gen2 project, even if people like
me have stopped using it on their servers.
That was years ago, Joe.
I was a different person then.
dio.co slash action.
That's where you go to get a $100 credit over at DigitalOcean.
Now, I'd be sitting here and I'd be pretty amped about a $10 credit, because that's what
it used to be.
But when crazy DigitalOcean blow out the doors and took it up to $100, I thought there's
only going to be maybe a week of this, maybe two weeks, maybe three weeks.
I don't know.
Maybe they forgot.
Maybe they forgot they're giving away $100.
I don't know what the explanation is because it's too much.
It's too much.
You can do an incredible amount at DigitalOcean for just $10.
But with the $100 credit, you can actually take things to the next level.
Try out their flexible droplets.
I just deployed one this weekend.
You mix and match the resources most appropriate for your needs.
They also have dedicated CPU droplets.
Now hypothetically, let's say you were going to set up a PeerTube alternative to totally
crush YouTube.
You would want the dedicated CPU droplets because you get raw performance on those suckers.
So figure out which one works best for you and your application.
And just get started by visiting do.co action with an easy-to-use dashboard, a well-documented
API, clustered deployments, global availability, data centers all over the world, enterprise
grade SSDs for every single droplet, 40 gigabit connections coming into those Linux boxes
that are running KVM with an entire open source stack, do.co action.
Let's talk about Amazon, AWS, and their desktop as a service.
So that used to be just Windows 7 and Windows 10, but we don't care about that.
But now they have launched Amazon Linux 2 with a Marte desktop, which you can run on
almost any device.
This is Amazon taking Linux very, very seriously indeed.
Yeah.
They've launched the Amazon Linux workspace that runs Linux 2, like Joe just mentioned,
and you get Marte, Firefox, Evolution, Pigeon, LibreOffice, and there's a few extra things
you can install, including development tools that are great for developing for AWS, surprise,
surprise.
They try to really kind of pigeonhole it to four particular types of workloads.
They say it's going to be great for people that are looking for a productivity environment
for LibreOffice, or if you want to run something in kiosk mode and economically deploy applications
that run in kiosk mode, it'd be great for that.
And for quote, unquote, Linux workloads, which they define as data science, machine learning,
engineering, and other Linux-friendly workloads.
Engineering is a pretty big category, so I like that they consider data science and engineering
Linux workloads.
And then of course, the desktop environment, which is a combination of workspaces and Amazon
Linux 2 that makes it great for all of this, and they include GCC, Mono, and Java, so you
can build, test, and deploy your applications to the AWS infrastructure from your AWS Linux
desktop, Joe.
Well, of course.
It could be quite handy though, I can imagine.
It means that you can take your Linux desktop with you anywhere and just log in, done.
You don't have to worry about backups, you don't have to worry about migrating data to
new machines when you upgrade hardware or whatever.
So that kind of seems appealing.
But then, I don't know, about losing control of my computing like this, I don't think as
a personal user I'd be interested.
I could imagine this being very popular in the enterprise though.
Yeah, it's funny you say that.
It's definitely not really for personal use, although I've been trying it all week, and
I'll talk about that here in a second.
But I have witnessed something fascinating in my time in the industry, and that is sort
of this ebb and flow.
We've started with time-sharing and remote systems, and then we ebbed towards personal
computers, getting them as fast as possible, getting as much local resources as possible,
and then we sort of flowed back into time-shared computing, but we call it cloud computing
now.
When I was really getting my start in the industry, it was when DOS was still the primary
desktop, if you can believe it.
That's how old I am, I know.
When I first started in IT, my job was to convert DOS stations into remote windowed
terminal environments, and the way we did this was with these really basic thin clients.
They would run Windows CE, and then later they would run Linux, and they would connect
to a much more powerful central server with a full desktop environment.
That was in the early 90s and then into the late 90s.
And then in the 2000s, it was really a focus on getting really fast PCs and desktops.
Later on, it was the bring-your-own-device phenomenon.
But as things kind of settled down, I have heard from more and more audience members
who do their entire job in a remote Amazon session, and I've even heard from some of
them that were doing them in Linux Monte sessions, testing them for Amazon for over a year.
This has been in the works, and they were off the record running this as their daily
driver for a year.
And I thought, okay, well, maybe one day Amazon's going to announce this.
Maybe one day this will come out, but it's been a year.
It's not happening.
And then this week, they dropped this huge bomb.
If you have an AWS account and you're current on all of your payments, you can go spin up
a Monte desktop on Amazon's infrastructure.
And that means you get 800 megabytes up and down download.
That means you get incredible CPU performance.
That means you get the speed of the AWS infrastructure as your desktop.
And you can spin these things up.
You can clone them.
You can set up a master image, and you can attach them to your Active Directory so you
can authenticate with the same user accounts that you've been using throughout your entire
corporation.
I mean, this is a slick system, and it works really well.
There's just one major flaw.
There's no Linux client to connect.
They have a Windows client.
They have a Mac client.
They have an iOS and Android client.
They even have a web client.
But if you're on Linux, no client for you.
Doesn't matter if you even try the web client.
No client for you.
People have tried to get it working under Wine.
There's a tutorial to use gaming on Linux.
There's a tutorial to use Crossover Office.
You can't get it working with stock Wine without a whole bunch of tweaks.
No client for Linux.
So you got to bust out a Mac to test this thing?
You bastard.
How dare you?
Yeah, basically to try the full-fledged client.
I mean, I initially tried it on an iOS device, and that was just painful.
But to really spend some time, I busted out a Mac to build out the whole environment and
loaded XFCE.
Nice.
How did that go?
Well, I couldn't quite figure out how to change the default login environment because they're
not using, like, GDM or anything like that.
And they're not using, like, the defaults when you could go into Etsy and change your
default X session.
They're not using that stuff.
So I wasn't able to make it the default desktop environment.
But it's essentially RHEL.
It's their version of RHEL.
So I was able to add the extra repository.
So I had started installing all kinds of additional applications on this thing.
Had a lot of fun with it, really.
It's a real utilitarian setup.
It is MATE without any frills.
It's pretty basic.
It's got very limited software installed by default.
But if you're willing to have some fun and you're willing to add the extra repositories
and things like that that are just normal for RHEL, you can get pretty far.
You do kind of hit a wall when it comes to things like Telegram and Slack and more kind
of modern work environment required software.
But even that's actually possible to get working.
So what did you think of the implementation of MATE then?
Boring, but functional.
And something I think I'll probably keep around for a little while, I get a couple of months.
I have this free tier account where I can run it for a few months for free.
And they've included this feature that they've had with some other implementations on AWS.
But it's nice to see it by default with the workspaces where if I log out, after an hour
of inactivity, it automatically suspends the workspace.
So it's not sitting there running up the clock.
OK.
Because I asked a prominent MATE developer, I think you can guess who.
I think we asked the same person.
Yeah.
And I asked him if I can quote him.
And he said yes.
And he said that is the worst implementation of MATE he'd seen.
Yeah, I'd say that's a fair interpretation.
I mean, to me, it seems utilitarian.
My understanding is that Amazon used the inspiration of an upstream MATE developers set up to build
this desktop.
And it's not that it's bad because, I mean, stock MATE itself isn't that awful.
It's just it's basic and utilitarian.
But at the same time, you can modify a lot of that.
It's pretty easy to snap into an existing organization.
And you can get like 700 megabytes down, 700 megabytes up with like two milliseconds of
latency.
So it's got its disadvantages, but it also has its advantages.
I think the lack of a Linux client, though, is shameful.
Not only has there been ongoing community requests since 2014 to make a Linux client
and a commitment by one of the AWS development teams to actually add this as a feature.
The real shameful aspect of this is to really use this, you have to have a fully licensed
copy of Windows or Mac OS on a Mac, which is ridiculous.
What's the point of that?
Why not allow folks to use super cheap, nice, economical implementations of, say, the XFCE
desktop or Ubuntu MATE that allows them to then remote in to their organization's desktop.
Not having a Linux client takes out the number one economic advantage of this.
I just had a great conversation while I was in Texas with a listener, their entire organization.
More than 100 desktops do just this.
They connect in on a daily basis to Amazon's workspaces, and they run their entire environment
in a virtual desktop.
And all of those machines are Windows boxes.
Not because they want them to be Windows boxes, but because that's how they could get the
official client at an economical scale that worked with large business purchasing contracts.
So they bought a hundred Dell workstations to run a remote desktop client that remotes
into Amazon.
And then what's the point?
If they could make a Linux version, you could save a ton of money.
And you could have it on a whole range of devices.
Yeah, that does seem silly having to pay for a Windows license on top of this.
Surely they're going to sort that out sooner rather than later.
In the meantime, if you want to go play with it, you can play around for free.
And if you have a paid AWS account, you could mess around with their power instance.
It's four CPUs, 16GB of RAM, 100GB of storage, and then their crazy fast AWS internet.
There's a lot you can do here.
Also, it made me realize as a desktop Linux user, I could potentially use this to spin
up Windows 7 instances or Windows 10 instances to bang out the occasional Windows thing.
So it's kind of got me just re-looking at hosted desktops and maybe rebuilding my own
once again.
Well, maybe Google's looking over at this thinking, hmm, we should get into that.
They certainly have reaffirmed their commitment to Linux this week by upping their membership
of the Linux Foundation to the platinum level, meaning half a million dollars a year.
Yeah, $500,000 a year going to the Linux Foundation, which is the highest level of membership in
the Linux Foundation's nonprofit organization.
They were a silver membership, I think, before, which still is $100,000 a year.
But platinum members, as part of that, get access to a lot more, apparently including
the Linux Foundation board.
A member of Google's team, Google's head of open source strategy, she'll be joining the
Linux Foundation's board of directors after this reaffirmation of their commitment to
Linux.
The first thing I thought of when I heard this was Fuchsia and how Google is seemingly
desperate to get rid of the Linux kernel in all of its devices, certainly with the phones
and with the Chromebooks, which may come together, we talked about that last week, under Fuchsia.
That's kind of a long-term goal for them.
But then you have to think about the cloud side of things, and that really is why they're
doing this.
It's not really about Android and Chrome OS, I don't think.
I agree.
You don't pay the Linux Foundation $500,000 to further development of MIR.
You join the Linux Foundation to assert some level of influence over the rest of the industry.
As an example, Google is joining AT&T, Cisco, Fujitsu, Hitachi, Huawei, IBM, Intel, Microsoft,
NEC, Oracle, Qualcomm, Samsung, and VMware as Platinum members.
But the Linux Foundation in totality now has over 800 members at all levels, so keep all
of that in mind.
Google will now be one of the biggest contributors, but they're really just one, sitting amongst
Cisco and IBM and Intel and AT&T.
But it is about influence.
It is about getting access.
And that's why when I hear these announcements, I'm excited, and I feel like it'll further
the interest of Linux in business.
It doesn't really fire me up.
It's very much a power play.
You have to wonder to what extent Tencent joining the Linux Foundation at this same
level has influenced this decision by Google to up their commitment here.
Because Tencent is a huge Chinese company that are massive in the cloud there, they're
growing.
They're starting to have real influence over the industry.
And you wonder if Google wanted to keep up with them by doing this, but then you would
imagine that it's probably been quite a while in development, this decision.
I don't think that they would have just done this with a couple of days notice.
Yeah, the pragmatist in me says, you're probably right, Joe.
It's probably been in the works for months.
But then the conspiracy bacon person inside me goes, well, actually, how much is this?
It's just a response to Microsoft.
Because Microsoft A, already a platinum level member, B, just bought GitHub, and C, has
been making meme images with heart emojis all day long for things that are open source.
And Google's sitting back going, man, we're kind of losing this open source narrative
to Microsoft.
Maybe we should make a big investment.
Because along with this $500,000 check that they wrote, they also released this sort of
glowing PR statement.
And it goes a little bit like this.
Open source is an essential part of Google's culture, and we've long recognized the potential
of open ecosystems to grow quickly, which, of course, is a hint towards Android, claiming
that the monster fragmentation that is Android is a nod to open ecosystems.
I love how they reframe that.
It continues.
We want things to be more resilient and adaptable in the face of change, and we want to create
better software.
The Linux Foundation is a fixture in the open source community.
Full stop.
Let's stop right here.
No, it's not.
It is a full fixture in the commercial industry.
It is a full fixture in Payne, Linus, Torvalds, and we all appreciate that.
But in the community of open software developers and free software developers, it is but a
footnote.
And then they continue.
By working closely with the organization, we can better engage the community at large
and continue to build a more inclusive ecosystem where everyone can benefit.
Again, none of that is true.
By working closely with the Linux Foundation, they can better engage with the corporate
side of money makers off of Linux, free software, and open source.
And I'm not saying that's a bad thing.
That's why it's here.
Richard Stallman himself is okay with people making money off of free software.
And this part about building a more inclusive ecosystem where everyone can benefit, I'll
believe that when I see Fuchsia.
Show me the source to Fuchsia.
Show me that you've licensed it in the GPL.
Then I'm going to believe that statement.
Right now, when you write a yearly $500,000 check to the Linux Foundation, what you're
getting from me as part of the Linux community is an acknowledgement that you're helping
Linus the Torvald's salary and helping further the interests of commercial Linux.
Not a bad thing, but I'm not opening up my pants to Google for this.
Okay.
But what about their investment in KaiOS, which they've done this week?
KaiOS, I think that's how you say it, K-A-I-O-S, which is what Firefox OS ended up being after
that died.
It shows that they do care about open source, doesn't it?
Or does it just show that they care about getting their apps on systems that are too
low powered and cheap to run Android because it's so bloated?
KaiOS, which is powering those new banana phones from Nokia, like the ones from the
Matrix that you guys probably heard about a few weeks ago or maybe even months ago now,
where the phone slides down and it looks like the old school Matrix phone, but a little
more modern.
Well, it's running KaiOS.
So it's already on some devices in India.
In fact, it's one of the number one mobile OSes in India already.
And now it's shipping on these Nokia devices, which are available to Joe but not to us slackers
over here in the States apparently.
And they're running this KaiOS, which turns out to be a fork of Firefox OS just without
all of the pesky source.
You know, don't ask them about that because they're quote unquote working on it right
now.
They've been quote unquote working on it for months and they just haven't gotten around
to publishing the source code, which I think I was just lamenting last week about Fuchsia
OS and when you change the license to something much more permissive, then everyone else loses.
Well, here we are one week later and we have KaiOS and Google just spent $22 million to
make sure they could get the Google apps on the devices that you were going to buy to
avoid the Google ecosystem, at least me.
That was actually what appealed to me is you have these traditional non-smart phone Linux
powered devices that have GPS, they have LTE, they have Wi-Fi hotspot.
They have basic phone functionality in a device that has 20 days of standby time.
And one of the other perks was no tie in to the Google tracking system.
But all of that has changed with this $22 million investment because you're going to
get Google apps built into this thing, Google Maps, Gmail, et cetera.
Which for you is a bad thing, but for the users is not because a lot of people want
that stuff.
Surely most people do.
Right.
Absolutely.
It's definitely a good thing.
You know, Google Maps, YouTube, Google search on your phone is generally a good thing.
It gives you more access to information.
I just kind of lost out because this was sort of a safe haven I could, I could maybe jump
to where my phone could be like my phone used to be when I was in my twenties.
In my twenties, the phone was just something I kept in my pocket for days and on the weekends
I'd plug it in and then I would unplug it on Monday and I would use my phone.
And I just kind of missed that because I just, you know, a little nostalgic for that.
And this was sort of the answer.
I mean, it was a matrix style phone.
Like what could be more of the nineties?
But Google, Google recognized that fact and they decided to swoop in and give them basically
$22 million, which they couldn't resist.
Which is such chump change to Google.
I mean, they get fined way more than that regularly.
This is just back of the sofa rummaging for them.
But this is very important for them because it's potentially reaching the next billion
as people keep saying.
It's them getting their apps on feature phones that are incredibly cheap compared with smartphones
to markets where people simply can't afford an iPhone or an Android device.
Yeah.
I don't disagree.
Tim, don't you kind of feel like this is an acknowledgement by the market and by the biggest
market player, Google, that Firefox OS was onto something, that there was value there?
I mean, maybe $22 million worth of value?
Well, evidently it does have some value to them, but I don't think it's specifically
Firefox OS.
I think it's just that this is an OS which will work on a feature phone and Android is
too bloated.
As I said before, it's just too big.
We've tried twice now to make affordable Android phones with low amounts of RAM and everything,
but they just cannot get that price low enough because you can't make hardware cheap enough
that is capable of running Android and having anything other than a horrendous experience.
So they needed some other route into that market and this appears to be their best bet.
I don't think it's necessarily a massive vote of confidence in it in particular.
No.
You just described the market pressure for Fuchsia, didn't you?
Damage-o.
Well, indeed, we'll have to see what actually becomes of Fuchsia and whether or not not
being based on Java and all of that stuff means that it can actually run on much lower
end hardware.
I'm not holding my breath on that and Google loves a hedge, don't they?
They love to hedge their bets and that's why they've got like 10 messaging services or
whatever because they just always back a few different horses and then see which one of
them actually works out and then just kill the other stuff.
And so they might well, if Fuchsia works out, just kill KaiOS and just start shipping Fuchsia,
but they've got different groups competing within the same company and that probably
is quite a good strategy because it means that they all want to keep their jobs so they
want to make the thing as good as possible.
The decision year.
Like 2018 for Google is where they're hedging their bets and positioning themselves to go
anywhere.
Chrome OS with Linux apps, an investment in Fuchsia, doubling down on Linux Foundation's
yearly contribution while in the background, $22 million is getting kicked over to KaiOS.
Like 2018 right now, what we are watching at the midway point is Google at a fork in
the road and I would bet within the next year or so they're going to make a hard decision
and double down on a certain direction.
Right now we are witnessing them line everything up to see which is the best route.
No way.
They'll never make a decision.
They've got enough money to just keep throwing it at different bets and they can wait a few
years.
I don't think we're going to see a decision within a year or two on this.
I think that they've got enough options to just keep them all as options and try a little
bit here, try a little bit there, see how that does, see how that does.
I just don't think you're going to get them, for example, killing Fuchsia or killing Chrome
OS or killing Android.
That's not how Google works.
Look at them historically.
They just have multiple competing products from the same company.
Yeah, you know what?
Fair enough.
I can't argue that.
You make a good point.
I guess there's only one way.
We just have to wait and see and we'll keep covering it.
LinuxActionNews.com slash subscribe for all the ways to get new episodes of this here
podcast.
Yeah.
And LinuxActionNews.com slash contact.
If you want to get in touch and tell us how wrong we are.
And you can also support what we're doing at our Patreon page, Patreon.com slash Jupiter
Signal.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Rissington.
Thank you for joining us and we'll see you next week.
See you later.
