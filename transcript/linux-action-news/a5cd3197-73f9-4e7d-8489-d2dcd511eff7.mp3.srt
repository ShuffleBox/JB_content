1
00:00:00,000 --> 00:00:08,320
Hello and welcome to Linux Action News, episode 204, recorded on August 28th, 2021.

2
00:00:08,320 --> 00:00:09,320
I'm Chris.

3
00:00:09,320 --> 00:00:10,320
And I'm Wes.

4
00:00:10,320 --> 00:00:12,880
Hello, Wes from Albuquerque, New Mexico.

5
00:00:12,880 --> 00:00:13,880
Let's do the news.

6
00:00:13,880 --> 00:00:16,640
We start this week with the Linux kernel.

7
00:00:16,640 --> 00:00:22,760
With releases becoming more and more anticipated in recent years, 5.14 has seen a considerable

8
00:00:22,760 --> 00:00:27,400
amount of attention, in part because much of the focus this time around has been on

9
00:00:27,400 --> 00:00:29,560
security and performance improvements.

10
00:00:29,560 --> 00:00:33,760
Yeah, you're right about that, Wes, there does seem to be more hype building with each

11
00:00:33,760 --> 00:00:34,760
release.

12
00:00:34,760 --> 00:00:38,760
And the kernel team has been pretty good about releasing every nine to 10 weeks.

13
00:00:38,760 --> 00:00:43,720
But I feel like 5.14 is getting a little extra attention for a good reason because this release

14
00:00:43,720 --> 00:00:47,360
cycle features that new core scheduling functionality that's been in the works for the past few

15
00:00:47,360 --> 00:00:52,000
years by multiple vendors with the aim of securing symmetric multithreaded systems and

16
00:00:52,000 --> 00:00:56,000
help mitigate processor level vulnerabilities like Spectre and Meltdown.

17
00:00:56,000 --> 00:00:59,920
Now just to put this in perspective, this feature alone, and there's a bunch in 5.14,

18
00:00:59,920 --> 00:01:03,380
but this feature alone, the core scheduling functionality, is enough that it caught the

19
00:01:03,380 --> 00:01:07,600
attention of Sean Michael Kerner over at TechCrunch who wrote up a rather lengthy article for

20
00:01:07,600 --> 00:01:11,200
their general tech audience about a new Linux kernel release.

21
00:01:11,200 --> 00:01:15,120
Unexpected indeed, but I can understand it.

22
00:01:15,120 --> 00:01:18,200
This one feature alone is kind of a big deal.

23
00:01:18,200 --> 00:01:23,800
That thousand foot view is that the new functionality of core scheduling is trying to limit things

24
00:01:23,800 --> 00:01:30,120
so that an untrusted task can't run on the same CPU core as a trusted task.

25
00:01:30,120 --> 00:01:34,920
And that kind of thing is rather important if you're a large public cloud who wants to

26
00:01:34,920 --> 00:01:40,440
keep hyperthreading enabled so you can sell all those virtual CPUs.

27
00:01:40,440 --> 00:01:45,720
Another area of security innovation in Linux 5.14 is a feature that's been in development

28
00:01:45,720 --> 00:01:51,440
for over a year and a half and that should help protect system memory in a far better

29
00:01:51,440 --> 00:01:53,760
way than before.

30
00:01:53,760 --> 00:01:58,400
Now you may already know that attacks against Linux, and other operating systems, often

31
00:01:58,400 --> 00:02:02,400
target memory as a primary attack surface to exploit.

32
00:02:02,400 --> 00:02:08,120
But with this new kernel, there's now a new capability known as MemFD Secret, which will

33
00:02:08,120 --> 00:02:13,700
enable an application running on a Linux system to create a memory range that is inaccessible

34
00:02:13,700 --> 00:02:31,560
to anyone else, I mean, we mean anyone here, including the kernel.

35
00:02:31,560 --> 00:02:52,880
And finally, after what seems like years, Dell's hardware privacy laptop features, which

36
00:02:52,880 --> 00:02:56,840
I think is like some setting for the screen or something, is finally in there after what

37
00:02:56,840 --> 00:03:00,120
seems like a decade of them developing it.

38
00:03:00,120 --> 00:03:03,040
So if you have one of those Dell laptops or you're thinking about one now, you're going

39
00:03:03,040 --> 00:03:05,480
to have mainline kernel support for that as well.

40
00:03:05,480 --> 00:03:06,800
There's just a ton of stuff in this one.

41
00:03:06,800 --> 00:03:10,400
We'll have a link with all of the details in the show notes, of course.

42
00:03:10,400 --> 00:03:15,280
Now we just have to wait back and see when this ships in a Linux distro near us.

43
00:03:15,280 --> 00:03:20,240
Fedora and OpenSUSE have said they're already making plans.

44
00:03:20,240 --> 00:03:24,640
The notable and loved QEMU project had a new release this week.

45
00:03:24,640 --> 00:03:28,840
QEMU, if you don't know, is an open source machine emulator and virtualizer.

46
00:03:28,840 --> 00:03:35,040
X86 and 6.1 landed and it sees a lot of new and improved work for emulated device support.

47
00:03:35,040 --> 00:03:40,040
But what we love to see is specific work was put into PowerPC, including extending the

48
00:03:40,040 --> 00:03:44,520
number of CPU cores and RISC-V.

49
00:03:44,520 --> 00:03:48,760
And of course, like every great release, there is new features for X86 that landed.

50
00:03:48,760 --> 00:03:54,520
So don't worry, X86 is still getting tons of support and they got to clean up, you know.

51
00:03:54,520 --> 00:03:56,280
Every release, they got to do some cleanup.

52
00:03:56,280 --> 00:04:00,840
This time, they got rid of some old CPU targets like the Moxie CPU.

53
00:04:00,840 --> 00:04:01,840
Never heard of it.

54
00:04:01,840 --> 00:04:02,840
Sorry.

55
00:04:02,840 --> 00:04:03,880
Sorry for you Moxie users.

56
00:04:03,880 --> 00:04:08,840
And Unicore32, which when I first read, I thought was Unicorn32 and I actually felt

57
00:04:08,840 --> 00:04:09,840
bad.

58
00:04:09,840 --> 00:04:10,840
But then I saw it was just Unicore32.

59
00:04:10,840 --> 00:04:11,840
That sounds lame.

60
00:04:11,840 --> 00:04:14,800
So of course, they removed support for that.

61
00:04:14,800 --> 00:04:18,320
And as always, every release sees some bug fixes.

62
00:04:18,320 --> 00:04:23,480
One of my favorite recent projects has another great update.

63
00:04:23,480 --> 00:04:32,040
CompWire 0.3.34 is out and maintains compatibility with the previous 0.3.x releases.

64
00:04:32,040 --> 00:04:38,520
I think the notable highlights for this release has got to include Bluetooth battery status

65
00:04:38,520 --> 00:04:45,080
support for headset profiles, including support for Apple extensions.

66
00:04:45,080 --> 00:04:52,400
Good news for you AirPod users, you can now get battery status info on your Linux desktop.

67
00:04:52,400 --> 00:04:58,240
They've also added fast stream codec support amongst a whole bunch of other new features

68
00:04:58,240 --> 00:04:59,800
and bug fixes.

69
00:04:59,800 --> 00:05:04,520
And just a general note of perhaps some things to come in the not too distant future, CodeWeavers,

70
00:05:04,520 --> 00:05:09,360
the longtime supporters and developers of wine have another job opening for a quote,

71
00:05:09,360 --> 00:05:14,520
general wine developer, who will obviously work on Proton and wine.

72
00:05:14,520 --> 00:05:18,360
And we wanted to mention this because when CodeWeavers makes a hire like this, well,

73
00:05:18,360 --> 00:05:20,480
the community tends to see big results upstream.

74
00:05:20,480 --> 00:05:21,720
Yeah, no kidding.

75
00:05:21,720 --> 00:05:26,680
I mean, Valve hired CodeWeavers to build the wine compatibility layer into the Steam client

76
00:05:26,680 --> 00:05:34,000
for Linux, which is what we now call Proton, and that has had a huge effect on Linux gaming.

77
00:05:34,000 --> 00:05:39,100
And really, this is how the hard work in free software often gets done.

78
00:05:39,100 --> 00:05:45,060
Now if you think this might be a job for you, you'll need strong C skills, familiarity with

79
00:05:45,060 --> 00:05:51,920
developing on Linux, and of course, zero exposure to that evil Microsoft code base.

80
00:05:51,920 --> 00:05:55,000
If that sounds right, consider applying.

81
00:05:55,000 --> 00:05:59,120
CodeWeavers says the position can be done remotely, or if you'd like, join them in their

82
00:05:59,120 --> 00:06:02,520
Minnesota office.

83
00:06:02,520 --> 00:06:06,440
We recently talked about Microsoft, Google and others partnering up with the Linux Foundation

84
00:06:06,440 --> 00:06:13,280
to bring eBPF, the new and very exciting Linux kernel technology to other platforms.

85
00:06:13,280 --> 00:06:16,080
So this week, the first eBPF Summit kicked off.

86
00:06:16,080 --> 00:06:17,080
All right.

87
00:06:17,080 --> 00:06:24,080
So there is no better way but to start off eBPF Summit and with fantastic news.

88
00:06:24,080 --> 00:06:28,200
Last week, we announced the formation of the eBPF Foundation.

89
00:06:28,200 --> 00:06:34,320
Facebook, Google, iSurveillance, Microsoft and Netflix, we've all come together as founding

90
00:06:34,320 --> 00:06:37,460
members to create the eBPF Foundation.

91
00:06:37,460 --> 00:06:42,100
It is part of the Linux Foundation and will enable even better collaboration between the

92
00:06:42,100 --> 00:06:50,380
various eBPF projects and also ensure eBPF itself can grow and expand to additional platforms.

93
00:06:50,380 --> 00:06:54,540
An example of this is the expansion to the Windows kernel, which we'll hear more about

94
00:06:54,540 --> 00:06:57,480
in one of the talks later on.

95
00:06:57,480 --> 00:07:04,200
Commercial interest in eBPF, often just called BPF, seems extremely high.

96
00:07:04,200 --> 00:07:09,020
Corporations and open source projects from across the entire spectrum of the industry

97
00:07:09,020 --> 00:07:14,760
attended this summit, from the Rust community to giant corporations like Apple.

98
00:07:14,760 --> 00:07:15,760
They're all in.

99
00:07:15,760 --> 00:07:21,760
Before we do that, however, I'd like to discuss why the Linux kernel team at Apple loves BPF.

100
00:07:21,760 --> 00:07:26,080
There are inherent risks with running kernel modules that run third party code in the Linux

101
00:07:26,080 --> 00:07:27,080
kernel.

102
00:07:27,080 --> 00:07:31,640
Kernel modules have full access to all kernel data structures and kernel functions.

103
00:07:31,640 --> 00:07:37,840
BPF programs, on the other hand, are limited to the BPF virtual machine, BPF helper functions,

104
00:07:37,840 --> 00:07:40,960
and are verified by the in-kernel BPF verifier.

105
00:07:40,960 --> 00:07:47,360
This makes them easier to audit and greatly reduces the impact of bugs and vulnerabilities.

106
00:07:47,360 --> 00:07:54,000
We also love that BPF programs reduce our usage of heavy, out-of-tree kernel bypass

107
00:07:54,000 --> 00:07:59,560
frameworks, large modules, and modules that are running third party code that we have

108
00:07:59,560 --> 00:08:00,920
to audit.

109
00:08:00,920 --> 00:08:07,400
We also love that we can reduce these modules into small BPF programs that are dedicated

110
00:08:07,400 --> 00:08:11,960
to a certain type of processing, such as XP programs for packet processing, probes and

111
00:08:11,960 --> 00:08:17,720
trace points for event tracing, and socket filters for filtering network traffic.

112
00:08:17,720 --> 00:08:21,560
Watching a lot of the introductions of these talks, the excitement around the technology

113
00:08:21,560 --> 00:08:22,560
is palatable.

114
00:08:22,560 --> 00:08:25,920
I mean, you can just like, it's almost, if we had smell-o-vision, you could smell the

115
00:08:25,920 --> 00:08:27,340
excitement coming off of them.

116
00:08:27,340 --> 00:08:32,640
The presenters are just totally stoked about what they can do with BPF and the troubles

117
00:08:32,640 --> 00:08:34,240
it's going to save them.

118
00:08:34,240 --> 00:08:39,200
However, I can't help but watch this and feel like what we are seeing here is institutionalized

119
00:08:39,200 --> 00:08:43,080
harvesting of innovation in Linux and open source.

120
00:08:43,080 --> 00:08:47,440
Because other, you know, other projects have done BPF before too, but it seems like industrialized

121
00:08:47,440 --> 00:08:51,840
harvesting of innovation that is then funneled through the Linux Foundation and their paying

122
00:08:51,840 --> 00:08:55,000
partners into commercial products.

123
00:08:55,000 --> 00:08:59,920
And I worry that this is being done now at a scale that is beyond anything the original

124
00:08:59,920 --> 00:09:02,080
vision of free software ever considered.

125
00:09:02,080 --> 00:09:05,520
Yeah, I'm kind of of two minds on this.

126
00:09:05,520 --> 00:09:10,920
On one side, it seems like this is the natural course of, if eBPF shows itself to be a very

127
00:09:10,920 --> 00:09:15,920
useful technology in a whole range of domains, it makes sense that if it's open source and

128
00:09:15,920 --> 00:09:20,200
people can use it or learn from it or take it as an example, of course they're going

129
00:09:20,200 --> 00:09:21,240
to do that.

130
00:09:21,240 --> 00:09:25,800
But what kind of rubs me the wrong way is we don't get to do this in the Linux community

131
00:09:25,800 --> 00:09:27,440
from, say, the Windows kernel.

132
00:09:27,440 --> 00:09:31,840
They've got some neat ideas there too, but we don't get to take from their basket.

133
00:09:31,840 --> 00:09:32,880
You might've just nailed it.

134
00:09:32,880 --> 00:09:34,240
What was bothering me about this?

135
00:09:34,240 --> 00:09:38,220
Because I recognize and I totally appreciate, you know, it's free software and if they comply

136
00:09:38,220 --> 00:09:41,320
with the license, they can do what they want with it.

137
00:09:41,320 --> 00:09:43,800
That's the name of the game, that's the deal, et cetera, et cetera.

138
00:09:43,800 --> 00:09:46,800
But you're right, there's an unbalanced unfairness to it.

139
00:09:46,800 --> 00:09:51,120
And there's also sort of this legitimacy that the Linux Foundation gives to the process

140
00:09:51,120 --> 00:09:55,360
by being such a generous donor to the Linux Foundation.

141
00:09:55,360 --> 00:09:58,200
You know, they get these perks that we don't really talk about very often.

142
00:09:58,200 --> 00:10:04,840
But it seems like honestly, if just eBPF came over to the Windows kernel and that was it,

143
00:10:04,840 --> 00:10:09,120
and Microsoft does give a talk on that, that we'll have linked in the show notes.

144
00:10:09,120 --> 00:10:12,540
If that was it, that would be worth the thousands of dollars of membership they've paid.

145
00:10:12,540 --> 00:10:17,160
Just that one set of features alone added to their operating system make any penny,

146
00:10:17,160 --> 00:10:20,820
any dime they've ever spent with the Linux Foundation totally valuable and worth it.

147
00:10:20,820 --> 00:10:27,920
And I just see this as kind of like an industrialized farming of free software innovations.

148
00:10:27,920 --> 00:10:34,000
And I worry that if we're constantly robbing Peter to pay Paul, eventually the open source

149
00:10:34,000 --> 00:10:37,400
ecosystem that's generating all these innovations will suffer.

150
00:10:37,400 --> 00:10:39,800
And it just doesn't seem sustainable.

151
00:10:39,800 --> 00:10:43,860
And I know it's not as bad as a picture as I'm painting, but there's something about

152
00:10:43,860 --> 00:10:48,760
watching this happen with eBPF where we've watched this project from birth to now this

153
00:10:48,760 --> 00:10:51,120
stage that is rubbing me the wrong way.

154
00:10:51,120 --> 00:10:54,000
And I think you got pretty close to nailing what it is.

155
00:10:54,000 --> 00:10:59,940
First containers, now eBPF, something tells me this won't be the last innovative Linux

156
00:10:59,940 --> 00:11:04,000
kernel feature that jumps ship.

157
00:11:04,000 --> 00:11:05,400
Linode.com slash LAN.

158
00:11:05,400 --> 00:11:10,000
Go there to get $100 in 60 day credit on a new account and you go there to support the

159
00:11:10,000 --> 00:11:11,000
show.

160
00:11:11,000 --> 00:11:14,360
This show is made possible by you taking advantage of our sponsors offered.

161
00:11:14,360 --> 00:11:17,240
Linode is one that we enthusiastically endorse because we use it.

162
00:11:17,240 --> 00:11:20,640
We've been using Linode for two and a half years and really just about everything we've

163
00:11:20,640 --> 00:11:25,920
built has just gone right on Linode and that's because they got the mix right.

164
00:11:25,920 --> 00:11:30,440
Good performance, 11 data centers around the world, a straightforward dashboard, a powerful

165
00:11:30,440 --> 00:11:35,600
DNS manager, and you know, of course, like some really fast systems to choose from.

166
00:11:35,600 --> 00:11:40,740
They have dedicated CPU systems with AMD epic processors, crazy fast native SSDs, 40 gigabit

167
00:11:40,740 --> 00:11:42,560
connections coming into them hypervisors.

168
00:11:42,560 --> 00:11:43,880
I mean, it's fast.

169
00:11:43,880 --> 00:11:47,980
And then we also use their S3 object storage a whole bunch for all kinds of different applications.

170
00:11:47,980 --> 00:11:53,040
I had a chance to work side by side with some from the Linode team and I realized not that

171
00:11:53,040 --> 00:11:57,480
I was totally eye spying their screens or anything, but I totally noticed that they

172
00:11:57,480 --> 00:12:01,680
were using next cloud on Linode and they I asked them about it and they said yes, they

173
00:12:01,680 --> 00:12:05,380
are also using their S3 compatible object storage.

174
00:12:05,380 --> 00:12:11,120
That is such a killer combo and I can say that it works next cloud on Linode using their

175
00:12:11,120 --> 00:12:15,220
object storage as the back end storage mechanism for next cloud.

176
00:12:15,220 --> 00:12:16,220
It's fireman.

177
00:12:16,220 --> 00:12:20,520
We've been using it for just over a year now and it's rocking and we use it every day in

178
00:12:20,520 --> 00:12:21,520
production.

179
00:12:21,520 --> 00:12:22,520
We're transferring files around.

180
00:12:22,520 --> 00:12:26,540
Man, have we been using the crap out of it on this road trip.

181
00:12:26,540 --> 00:12:30,120
So they've just got so many great features and so many great arrangements of software

182
00:12:30,120 --> 00:12:31,120
and hardware.

183
00:12:31,120 --> 00:12:34,760
You can do one click deployments in their marketplace and get an entire setup going

184
00:12:34,760 --> 00:12:35,760
in just a few minutes.

185
00:12:35,760 --> 00:12:38,780
And if you just need something like a five dollar a month rig because maybe you just

186
00:12:38,780 --> 00:12:41,560
want to do like an SSH jump post and a sync thing box.

187
00:12:41,560 --> 00:12:43,200
I use a five dollar machine for that.

188
00:12:43,200 --> 00:12:44,200
It's great.

189
00:12:44,200 --> 00:12:48,760
Honestly, their pricing is just fantastic, 30 to 50 percent cheaper than other major

190
00:12:48,760 --> 00:12:49,760
cloud providers.

191
00:12:49,760 --> 00:12:53,860
There's really a lot to check out and you'll see that Linode's community support runs deep

192
00:12:53,860 --> 00:12:55,880
when you go over there and you check out their social media.

193
00:12:55,880 --> 00:12:58,100
So I just like you to go take it all in.

194
00:12:58,100 --> 00:13:01,960
Go take advantage of that one hundred dollars, 60 day credit on your new account and you

195
00:13:01,960 --> 00:13:02,960
support the show.

196
00:13:02,960 --> 00:13:03,960
You keep Linux action news going.

197
00:13:03,960 --> 00:13:08,600
So you go to linode.com slash LAN, get one hundred dollars and 60 day credit and support

198
00:13:08,600 --> 00:13:09,600
the show.

199
00:13:09,600 --> 00:13:13,480
That's linode.com slash LAN.

200
00:13:13,480 --> 00:13:14,600
Linux dot ting dot com.

201
00:13:14,600 --> 00:13:18,520
If you're sick of overpaying for cell service and who wouldn't be, go see how much you could

202
00:13:18,520 --> 00:13:22,940
save and then take twenty five bucks off of that and you support this year's show.

203
00:13:22,940 --> 00:13:24,960
Linux dot ting dot com.

204
00:13:24,960 --> 00:13:25,960
Here's the deal.

205
00:13:25,960 --> 00:13:29,960
Ting is an MVNO or a mobile virtual network operator and I have been a customer since

206
00:13:29,960 --> 00:13:31,280
2013.

207
00:13:31,280 --> 00:13:37,240
So I know to my core what that means is I get the same networks as the nation's coast

208
00:13:37,240 --> 00:13:38,480
to coast big networks.

209
00:13:38,480 --> 00:13:41,280
I get all access to that, but I pay Ting's rates.

210
00:13:41,280 --> 00:13:44,520
I pay Ting's prices because Ting's not the company that's digging the holes and putting

211
00:13:44,520 --> 00:13:45,680
the towers in.

212
00:13:45,680 --> 00:13:48,360
They are a mobile virtual network operator.

213
00:13:48,360 --> 00:13:52,040
You get the same coast to coast coverage as you would, but you just pay less for it.

214
00:13:52,040 --> 00:13:55,440
That's why I've stuck with them and they've been flexible with my various usage patterns

215
00:13:55,440 --> 00:13:59,760
when I'm on the road from time to time or when I'm at home and when I'm at home my Ting

216
00:13:59,760 --> 00:14:03,360
bills are so ridiculously low.

217
00:14:03,360 --> 00:14:05,080
I love that about Ting.

218
00:14:05,080 --> 00:14:08,440
I have to say they have more plans now too than when I first signed up.

219
00:14:08,440 --> 00:14:10,880
Like they have plans now that just meet everybody's needs.

220
00:14:10,880 --> 00:14:13,120
I think their new set 12 plan is a real winner.

221
00:14:13,120 --> 00:14:18,440
You get 12 gigabytes of data with unlimited talk and text for 35 bucks a month and you

222
00:14:18,440 --> 00:14:21,720
can put other lines on there for just super low rates.

223
00:14:21,720 --> 00:14:23,480
Ting really has this figured out.

224
00:14:23,480 --> 00:14:27,200
A good family plan is hard to find and you can go find one that will address your family's

225
00:14:27,200 --> 00:14:28,800
need with their flex plans.

226
00:14:28,800 --> 00:14:34,040
That's a huge deal because you get access to the big nationwide carriers including 5G

227
00:14:34,040 --> 00:14:35,320
at Ting's rates.

228
00:14:35,320 --> 00:14:38,880
So if you use two gigs or 20 gigs or maybe a lot more there's going to be a Ting plan

229
00:14:38,880 --> 00:14:42,380
that will work for you and it's really simple to switch to Ting.

230
00:14:42,380 --> 00:14:45,520
Pretty much any phone is going to work because they do support so many networks.

231
00:14:45,520 --> 00:14:48,000
So get started by going to linux.ting.com.

232
00:14:48,000 --> 00:14:49,000
Check out your current phone.

233
00:14:49,000 --> 00:14:52,760
They've got a really easy web page you put in your information for your phone and it

234
00:14:52,760 --> 00:14:54,440
checks the compatibility.

235
00:14:54,440 --> 00:14:55,520
You're pretty much done in minutes.

236
00:14:55,520 --> 00:14:58,600
They'll send you a SIM card once that arrives you pop that in you do a couple more things

237
00:14:58,600 --> 00:15:02,360
online and you're good to go because of course they've got a great dashboard to manage all

238
00:15:02,360 --> 00:15:03,360
of it.

239
00:15:03,360 --> 00:15:04,360
That's how we roll around here.

240
00:15:04,360 --> 00:15:07,780
Cutting your phone bill has never been easier with Ting's new plans.

241
00:15:07,780 --> 00:15:11,120
So go check them out at linux.ting.com.

242
00:15:11,120 --> 00:15:19,000
It's the next generation of Ting mobile and you can get 25 bucks off that at linux.ting.com.

243
00:15:19,000 --> 00:15:25,760
Alyssa Rosenweig has been working on reverse engineering the Apple M1 GPU since January

244
00:15:25,760 --> 00:15:33,360
has now posted a screenshot of quote gnome shell on the Apple M1 bare metal.

245
00:15:33,360 --> 00:15:39,420
A terminal in that screenshot shows that it's running a pre-release of the 514 kernel, Debian

246
00:15:39,420 --> 00:15:43,680
Linux and GNOME 3.38.4.

247
00:15:43,680 --> 00:15:46,360
No sadly not GNOME 40.

248
00:15:46,360 --> 00:15:53,220
She went on to note that no it's not GPU accelerated but honestly it's usable.

249
00:15:53,220 --> 00:16:01,480
Not great but usable on a near mainline kernel and if missing most drivers is this snappy

250
00:16:01,480 --> 00:16:06,120
when everything else is done Asahi Linux will run like a dream.

251
00:16:06,120 --> 00:16:09,960
They seem to be getting excited over at Ashi Linux like I think they're feeling the momentum

252
00:16:09,960 --> 00:16:14,560
build and she further explained that the kernel that they used included patches for the pin

253
00:16:14,560 --> 00:16:20,640
control subsystem PCIe and the work in progress display driver that gets display USB and Ethernet

254
00:16:20,640 --> 00:16:21,640
all up and going.

255
00:16:21,640 --> 00:16:26,160
Those drivers are at least there if not complete yet.

256
00:16:26,160 --> 00:16:30,640
She described it as a nice milestone on the way to building a complete DCP driver.

257
00:16:30,640 --> 00:16:36,760
Now this DCP is a co-processor for the GPU in Apple Silicon Macs and obviously getting

258
00:16:36,760 --> 00:16:43,980
full GPU acceleration on these M1 Macs is critical to a nice polished usable Linux desktop

259
00:16:43,980 --> 00:16:47,800
and the team seems to be making good progress really with the trickiest bit for future Linux

260
00:16:47,800 --> 00:16:52,280
M1 users possibly being matching compatible firmware.

261
00:16:52,280 --> 00:16:55,880
Earlier this month the project lead Hector Martin said that Linux would only support

262
00:16:55,880 --> 00:17:02,760
specific firmware versions since the DCP interface is not stable and changes with every Mac OS

263
00:17:02,760 --> 00:17:03,760
version.

264
00:17:03,760 --> 00:17:11,400
If you were on the internet this week it was hard to miss the celebration of Linux's 30th

265
00:17:11,400 --> 00:17:12,400
birthday.

266
00:17:12,400 --> 00:17:16,320
Fitting really since the internet is powered by Linux.

267
00:17:16,320 --> 00:17:23,460
Although commonly accepted that Linux's birthday is August 25th there is some dispute.

268
00:17:23,460 --> 00:17:29,800
The first news group post is from August 25th with headers and all that to confirm the date.

269
00:17:29,800 --> 00:17:36,560
But there is also a 0.01 release that was never released publicly only in private to

270
00:17:36,560 --> 00:17:39,760
a few people who had already shown interest.

271
00:17:39,760 --> 00:17:43,760
Unfortunately none of those emails survive.

272
00:17:43,760 --> 00:17:50,140
But you can still find the September 17th date in the tar file of that release.

273
00:17:50,140 --> 00:17:54,440
In a post celebrating the anniversary Red Hat said that quote the reason that Linux

274
00:17:54,440 --> 00:17:59,400
has been arguably the most successful operating system of all time is due to the fact that

275
00:17:59,400 --> 00:18:06,240
its license allowed copying, improvement, distribution and required sharing of changes.

276
00:18:06,240 --> 00:18:12,640
In a throwback quote from Linus he also noted the importance of the license saying I actually

277
00:18:12,640 --> 00:18:18,280
originally released Linux with complete sources under a non GPL copyright that was actually

278
00:18:18,280 --> 00:18:21,760
much more restrictive than the GPL.

279
00:18:21,760 --> 00:18:28,200
It required that all sources always be available and it also didn't allow any money to be exchanged

280
00:18:28,200 --> 00:18:30,160
for Linux at all.

281
00:18:30,160 --> 00:18:35,440
He went on to say I changed the copyright to the GPL within roughly half a year.

282
00:18:35,440 --> 00:18:40,680
It quickly became evident that my original copyright was so restrictive that it prohibited

283
00:18:40,680 --> 00:18:44,080
some entirely valid uses.

284
00:18:44,080 --> 00:18:48,960
Making Linux GPL was definitely the best thing I ever did.

285
00:18:48,960 --> 00:18:53,560
Hmm interesting and it was it was also a good read over the register that had an interview

286
00:18:53,560 --> 00:18:59,160
with Greg KH to note the 30th anniversary and Greg has such a pragmatic view of everything

287
00:18:59,160 --> 00:19:04,760
he's still very much head down working kind of answers but there was a specific exchange

288
00:19:04,760 --> 00:19:07,760
in there that we will link to that caught our attention.

289
00:19:07,760 --> 00:19:12,800
The register asked do the Linux maintainers see any other technology projects in a competitive

290
00:19:12,800 --> 00:19:20,480
light e.g. Google's fuchsia effort if not why not and if so how does that inform decisions.

291
00:19:20,480 --> 00:19:26,600
Greg answered with I would love some real competition in operating system kernels.

292
00:19:26,600 --> 00:19:30,280
We lost some good feedback loops when we'd work with the BSD kernel developers in the

293
00:19:30,280 --> 00:19:36,060
past but unfortunately most of them went to work for Apple and disappeared.

294
00:19:36,060 --> 00:19:41,160
Some of the ideas in fuchsia look interesting and I've talked with the developers there

295
00:19:41,160 --> 00:19:47,560
about some of them maybe our eventual future future won't be so disastrous after all maybe

296
00:19:47,560 --> 00:19:52,360
a little competitive kick in the butt is exactly what the kernel needs not that it's not doing

297
00:19:52,360 --> 00:19:57,320
great the competition always seems to make things better either way a lot's going to

298
00:19:57,320 --> 00:20:00,680
happen and there's a lot to keep track of and we do it every single week so go to Linux

299
00:20:00,680 --> 00:20:05,360
action news dot com slash subscribe for all the ways to get new episodes and Linux action

300
00:20:05,360 --> 00:20:09,200
news dot com slash contact for ways to get in touch.

301
00:20:09,200 --> 00:20:13,340
And don't miss my short appearance on the Linode YouTube channel.

302
00:20:13,340 --> 00:20:17,400
They caught up with me while I was in Denver and that video is now up on their YouTube

303
00:20:17,400 --> 00:20:20,280
channel and I remain on the road.

304
00:20:20,280 --> 00:20:24,020
You can see my journey live at colony tracker dot live.

305
00:20:24,020 --> 00:20:29,320
As for us we'll be back next Monday with our weekly take on the latest Linux and open source

306
00:20:29,320 --> 00:20:30,320
news.

307
00:20:30,320 --> 00:20:43,640
Thanks for joining us and that's all the news for this week.

