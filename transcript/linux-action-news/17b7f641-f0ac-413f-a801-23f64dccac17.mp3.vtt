WEBVTT

00:00.000 --> 00:10.040
Hello, and welcome to Linux Action News, Episode 267, recorded on November 16th, 2022.

00:10.040 --> 00:11.040
I'm Chris.

00:11.040 --> 00:12.040
And I'm Wes.

00:12.040 --> 00:13.040
Hello, Wes.

00:13.040 --> 00:14.840
Let's do the news.

00:14.840 --> 00:22.800
We start this week with the release of Fedora 37, with GNOME 43, and now, official support

00:22.800 --> 00:25.680
for the Raspberry Pi 4.

00:25.680 --> 00:27.880
And you know that caught my attention.

00:27.880 --> 00:33.200
The work to officially get Fedora on the Pi 4 has been going on for a number of years.

00:33.200 --> 00:38.320
And I think one of the main issues was the lack of accelerated graphics.

00:38.320 --> 00:46.580
So with V3D now upstream, and included in Fedora 37, that problem has been solved.

00:46.580 --> 00:49.740
So I gave it a go recently on my Pi 400.

00:49.740 --> 00:52.600
And that's the one that's a Raspberry Pi built into the keyboard.

00:52.600 --> 00:57.040
And even though I was using a USB thumb drive, so I, you know, load times for some applications

00:57.040 --> 01:02.760
aside, I still was seeing some of the best performance on a Pi yet.

01:02.760 --> 01:06.540
The GTK interface just really felt like I was on a standard desktop.

01:06.540 --> 01:10.180
The elements when you click them, the way the windows draw, really snappy.

01:10.180 --> 01:14.160
I think the Fedora project has really delivered here.

01:14.160 --> 01:20.040
This release of Fedora is also shipping enhancements to wired networking on the CM4.

01:20.040 --> 01:28.560
And as you said, Chris, accelerated graphics using the V3D GPU for both OpenGL ES and Vulkan,

01:28.560 --> 01:33.400
which is probably making the biggest impact on the performance that you're seeing there.

01:33.400 --> 01:37.520
Now, there are a few caveats that people should be aware of.

01:37.520 --> 01:44.680
Yeah, the biggest one for me was Wi-Fi on the Pi 400 is still considered, quote, out

01:44.680 --> 01:47.800
of scope for 37's release.

01:47.800 --> 01:52.560
It is waiting on firmware to be upstreamed from the vendor, which at this point is really

01:52.560 --> 01:53.560
kind of an unknown.

01:53.560 --> 01:59.040
So you'll have to use the Ethernet port on the Pi 400.

01:59.040 --> 02:06.440
Another thing to be aware of that also bites us, only the official CM4 I.O. board is supported

02:06.440 --> 02:07.560
right now.

02:07.560 --> 02:12.640
Other carrier boards should work, but that's going to depend on the particular vendor's

02:12.640 --> 02:13.640
implementation.

02:13.640 --> 02:19.560
And to keep things in the theme with the broader 37 release, hardware-based media decoding

02:19.560 --> 02:24.240
for H.264 is out of scope for this release.

02:24.240 --> 02:29.200
So just got to keep those caveats in mind when picking an OS for your Pi 4.

02:29.200 --> 02:34.000
But with those aside, I think this already makes a pretty compelling development workstation

02:34.000 --> 02:40.960
for anyone working on an IoT platform or developers that are targeting ARM servers.

02:40.960 --> 02:45.440
And if some of those dependencies land upstream, you could really see that list of caveats

02:45.440 --> 02:48.160
getting smaller pretty quickly.

02:48.160 --> 02:56.080
The 37 release also saw the project officially add two new additions, Fedora Core OS and

02:56.080 --> 02:58.080
Fedora Cloud is back.

02:58.080 --> 03:01.960
Yeah, OK, so Fedora Core OS, that probably rings a bell.

03:01.960 --> 03:06.960
That's a successor to what you might even remember as Atomic Host, perhaps.

03:06.960 --> 03:12.480
And as you've probably guessed, it provides automatic atomic updates with rollbacks.

03:12.480 --> 03:15.560
And it's really focused at container-based workloads.

03:15.560 --> 03:19.360
And the cloud edition, well, that provides a Fedora base to run in public or private

03:19.360 --> 03:20.360
clouds.

03:20.360 --> 03:24.540
In fact, AMIs will be available in the AWS Marketplace later this week.

03:24.540 --> 03:27.720
And the community channels are available now.

03:27.720 --> 03:32.820
On the desktop side of things, Fedora workstation ships GNOME 43 with the latest and greatest

03:32.820 --> 03:38.520
version of the GTK toolkit, and Firefox's language packs, well, they've finally been

03:38.520 --> 03:45.120
split into sub-packages, keeping things leaner and meaner.

03:45.120 --> 03:47.220
If you'd like more, well, don't worry.

03:47.220 --> 03:51.600
We did a complete review in Linux Unplugged 484.

03:51.600 --> 03:59.480
Well, nothing makes us feel more awkward in the free software community than talking about

03:59.480 --> 04:03.320
the great work over at Facebook slash Meta.

04:03.320 --> 04:08.040
And this week, they're finally announcing Sapling, a new Git-compatible source control

04:08.040 --> 04:09.160
client.

04:09.160 --> 04:13.300
In the announcement, they acknowledge how critical Git and other distributed version

04:13.300 --> 04:17.680
control systems have become to modern development workflows.

04:17.680 --> 04:23.320
In fact, Sapling started life as an extension to the Mercurial version control system, before

04:23.320 --> 04:28.640
eventually growing into what Meta describes as a scalable, user-friendly tool over the

04:28.640 --> 04:31.400
past 10 years.

04:31.400 --> 04:34.180
Here's where they kind of zero in on the goods in the announcement.

04:34.180 --> 04:40.080
They say, quote, Sapling is a source control system used at Meta that emphasizes usability

04:40.080 --> 04:41.920
and scalability.

04:41.920 --> 04:46.320
Git and Mercurial users will find that many of the basic concepts are familiar, and that

04:46.320 --> 04:52.080
workflows like understanding your repository, working with stacks of commits, and recovering

04:52.080 --> 04:57.760
from mistakes are substantially easier when used with our Sapling-compatible server and

04:57.760 --> 05:01.600
a virtual file system we hope to open source in the future.

05:01.600 --> 05:06.800
Sapling can serve Meta's internal repository with tens of millions of files, and tens of

05:06.800 --> 05:14.400
millions of commits, and tens of millions of branches.

05:14.400 --> 05:20.040
I can't believe it, but it's apparently already that time of the year.

05:20.040 --> 05:25.660
Google has kicked off the 2023 Summer of Code program.

05:25.660 --> 05:31.760
It's the 19th consecutive year of funding open source development over the summer.

05:31.760 --> 05:36.120
And Google says they've reviewed the feedback from the 2022 program, and they're going to

05:36.120 --> 05:39.000
make some tweaks for next year.

05:39.000 --> 05:43.360
Seems like up first is increased flexibility in the project links.

05:43.360 --> 05:50.360
Instead of a set 12 weeks for everyone, they're now going to allow a 10 to 22 week range.

05:50.360 --> 05:55.800
They also have more options for the project's time commitments, and in another big change,

05:55.800 --> 06:03.600
expanding beyond students and making the program available to anyone new to open source development.

06:03.600 --> 06:09.720
That seems like a big deal and a great addition to the Google Summer of Code program.

06:09.720 --> 06:14.800
It could potentially open this up to many more open source projects.

06:14.800 --> 06:22.840
So if you're interested in applying for the program, we'll put a link in the show notes.

06:22.840 --> 06:26.960
Checking in on the progress of Rust landing in the Linux kernel.

06:26.960 --> 06:32.680
With the initial Rust infrastructure support landing in Linux 6.1, the next obvious question

06:32.680 --> 06:36.360
is when should we expect complete support?

06:36.360 --> 06:41.960
Well, this past Thursday, Miguel Olieda, leading the Rust for Linux effort, sent out a set

06:41.960 --> 06:44.600
of 28 patches.

06:44.600 --> 06:50.240
Miguel writes in the patch notes, quote, this patch series is the first batch of changes

06:50.240 --> 06:55.120
to upstream the rest of the Rust support.

06:55.120 --> 07:01.280
That combined with everything else already in Linux Next, well, could mean seeing full

07:01.280 --> 07:08.640
Rust support ready for the 6.2 merge window next month, though I don't know if I bet my

07:08.640 --> 07:15.160
sats on that.

07:15.160 --> 07:19.040
Go there to get $100 in 60-day credit on a new account, and it's a great way to support

07:19.040 --> 07:20.040
the show.

07:20.040 --> 07:23.920
Linode is fast, reliable cloud hosting with the best support in the business.

07:23.920 --> 07:26.120
Real humans all day, every day.

07:26.120 --> 07:30.960
And they're 30% to 50% cheaper than the hyperscalers that want to lock you into their platform

07:30.960 --> 07:33.300
and give you all these crazy upsells constantly.

07:33.300 --> 07:36.120
On top of that, Linode does better performance.

07:36.120 --> 07:37.720
They've got 11 data centers today.

07:37.720 --> 07:42.000
They're adding a dozen more next year, and they have great features like object storage,

07:42.000 --> 07:48.780
cloud firewall, backups, Kubernetes support, Terraform, Ansible, all of that and more.

07:48.780 --> 07:50.320
Linode is what we use.

07:50.320 --> 07:51.320
You're going to love it.

07:51.320 --> 07:53.040
So go to linode.com slash LAN.

07:53.040 --> 07:57.760
Get that $100 in 60-day credit, kick the tires for yourself, and support the show.

07:57.760 --> 08:04.160
Linode.com slash LAN.

08:04.160 --> 08:07.480
And also, thank you to Collide.

08:07.480 --> 08:11.920
Collide is an endpoint security solution that uses the most powerful, untapped resource

08:11.920 --> 08:15.080
in IT, end users.

08:15.080 --> 08:19.080
When you're trying to achieve security goals, whether for a third party audit or for your

08:19.080 --> 08:23.960
own compliance standards, the conventional wisdom is to treat every device like Fort

08:23.960 --> 08:25.760
Knox.

08:25.760 --> 08:31.240
Old school device management tools like MDMs force disruptive agents onto employee devices

08:31.240 --> 08:35.680
that slow performance and treat privacy as an afterthought.

08:35.680 --> 08:41.240
Their way of doing things turns IT admins and end users into enemies and creates its

08:41.240 --> 08:47.400
own security problems because users turn to shadow IT just to do their jobs.

08:47.400 --> 08:49.200
Collide does things differently.

08:49.200 --> 08:56.840
Instead of forcing changes on users, Collide sends them security recommendations via Slack.

08:56.840 --> 09:01.240
Collide will automatically notify your team when their devices are insecure and give them

09:01.240 --> 09:06.000
step-by-step instructions on how to solve the problem.

09:06.000 --> 09:11.240
By reaching out to employees via a friendly Slack DM and educating them about company

09:11.240 --> 09:17.280
policies, Collide can help you build a culture in which everyone contributes to security

09:17.280 --> 09:21.760
because everyone understands how and why to do it.

09:21.760 --> 09:27.200
For IT admins, Collide provides a single dashboard that lets you monitor the security of your

09:27.200 --> 09:33.160
entire fleet, whether they're running on Mac, Windows, or Linux.

09:33.160 --> 09:38.080
You can see at a glance which employees have their disks encrypted, OSs up to date, and

09:38.080 --> 09:43.920
password manager installed, making it easy to prove compliance to your auditors, customers,

09:43.920 --> 09:44.920
and leadership.

09:44.920 --> 09:54.360
So, that's Collide, user-centered, cross-platform, endpoint security for teams that Slack.

09:54.360 --> 09:58.560
You can meet your compliance goals by putting users first.

09:58.560 --> 10:02.040
Visit collide.com slash LAN to find out how.

10:02.040 --> 10:08.040
If you follow that link, I'll hook you up with a goodie bag, including a t-shirt, just

10:08.040 --> 10:10.680
for activating a free trial.

10:10.680 --> 10:18.400
That's K-O-L-I-D-E dot com slash LAN.

10:18.400 --> 10:25.440
Today as we record, Microsoft has released version 1.0 of the Windows subsystem for Linux.

10:25.440 --> 10:34.040
Now, to be clear, this is the 1.0 of WSL 2.0, so it's 2.0's 1.0.

10:34.040 --> 10:36.360
What's confusing about that?

10:36.360 --> 10:40.640
Absolutely nothing at all, that's just par for the course for Microsoft.

10:40.640 --> 10:46.360
But here's a quick little timeline of the history of WSL.

10:46.360 --> 10:53.400
Six years ago, way back on August 2nd, 2016, WSL saw its initial release.

10:53.400 --> 11:00.240
Now, this was WSL version 1, which relied on some fancy Windows kernel translation layers

11:00.240 --> 11:03.600
to emulate the Linux kernel API.

11:03.600 --> 11:07.560
That worked pretty well, but there were some problems that the translation layer approach

11:07.560 --> 11:09.840
just couldn't really resolve.

11:09.840 --> 11:18.680
So then, three years later, June 12th, 2019, the first version of WSL 2 was released.

11:18.680 --> 11:24.760
This was transitioned from running that translation layer to instead running a full-blown real

11:24.760 --> 11:28.120
Linux kernel in a hypervisor.

11:28.120 --> 11:37.560
And that is what got us to today, November 16th, 2022, and the 1.0 release of WSL 2.0.

11:37.560 --> 11:44.840
Yeah, and you know, 2.0's 1.0 is not really a big significant release in terms of features.

11:44.840 --> 11:50.620
The release log includes three relatively minor changes, I suppose you could say.

11:50.620 --> 11:54.320
One of which is literally just the removal of the preview label.

11:54.320 --> 12:00.060
But in doing so and hitting this milestone, it means that WSL is now generally available

12:00.060 --> 12:03.120
to all Windows Store users.

12:03.120 --> 12:05.960
That's a pretty big change for the public.

12:05.960 --> 12:10.280
If you weren't already nerdy or curious enough to go poking around and enable extra settings

12:10.280 --> 12:16.720
to get access to it, it means now that WSL is just generally available to a whole bunch

12:16.720 --> 12:18.360
more Windows users.

12:18.360 --> 12:23.080
I've got to think that's kind of a good thing.

12:23.080 --> 12:28.260
Looking at the heart of WSL, it's powered by Linux kernel 5.15.

12:28.260 --> 12:35.920
But with Linux 6.1 now in the late RC stage, and 6.1 being slated to be the next LTS release,

12:35.920 --> 12:43.640
well, one can likely surmise that WSL 2.0 will be rebased on 6.1 sometime next year.

12:43.640 --> 12:46.040
Yeah, that is a little bit of a wait.

12:46.040 --> 12:52.700
But you know, I think something like WSL, you know, ideally the 1.0 release is not some

12:52.700 --> 12:56.340
big earth shattering release, it should be safe and stable.

12:56.340 --> 12:58.240
That's what a 1.0 should be.

12:58.240 --> 13:01.880
And if you look back at the development cycle, it does seem like a lot of the last really

13:01.880 --> 13:08.080
big changes to WSL, they landed in like the 0.7 release cycle.

13:08.080 --> 13:13.000
And since then, with all of the subsequent releases to this point, it seems that Microsoft's

13:13.000 --> 13:16.840
really just been trying to work out the kinks and smooth things out.

13:16.840 --> 13:23.160
And you know, on the kernel, something tells me that WSL users probably don't care that

13:23.160 --> 13:26.000
much about the specific kernel version.

13:26.000 --> 13:30.320
As long as the functionality to make their WSL work and whatever app that they need to

13:30.320 --> 13:33.520
do work is there, I think they're probably happy.

13:33.520 --> 13:37.080
But it does have me wondering how usable it all is now.

13:37.080 --> 13:41.760
Kind of makes me think that maybe you and I should give Windows 11 an honest try, you

13:41.760 --> 13:47.520
know, put WSL 2.0 on there, 2.0, 1.0, of course, get the new terminal.

13:47.520 --> 13:51.320
Maybe the audience could recommend a package manager, really anything the audience could

13:51.320 --> 13:53.400
recommend to make it a usable experience.

13:53.400 --> 13:58.000
But you and I load it up and see if we can't make it a workstation that meets our requirements

13:58.000 --> 14:00.840
as Linux users.

14:00.840 --> 14:04.720
A little hesitant for what I'm about to agree to.

14:04.720 --> 14:05.720
But yeah, yeah, right.

14:05.720 --> 14:11.200
I mean, it probably would be a good idea to get an update on what that experience is like.

14:11.200 --> 14:15.980
I know we both tried it, both Windows 11 and WSL 2.0, but I haven't used either of them

14:15.980 --> 14:18.600
in ages, let alone together.

14:18.600 --> 14:24.200
I do need to clarify though, I for one, I do care what version my kernel is.

14:24.200 --> 14:27.920
Yeah, that's going to be a point of pride, you know, midway into next year when they're

14:27.920 --> 14:29.800
still on 5.15.

14:29.800 --> 14:33.840
And we've got like rust and all of that kind of good goodness in our kernels on our modern

14:33.840 --> 14:39.200
systems will be like, well, if you weren't done WSL, I actually kind of have the sense

14:39.200 --> 14:44.880
that this 1.0 for 2.0 is not the only WSL news, maybe even this week.

14:44.880 --> 14:45.880
I'm not sure.

14:45.880 --> 14:48.160
It seems that Microsoft has some more in store.

14:48.160 --> 14:52.440
One of the Microsoft program managers for WSL, Craig Lowen, he tweeted right around

14:52.440 --> 14:57.960
when we started recording that they have some quote, other exciting news coming very soon

14:57.960 --> 15:02.160
in regards to the Windows subsystem for Linux.

15:02.160 --> 15:06.680
So we'll keep an eye on that and everything else going on in the world of Linux and open

15:06.680 --> 15:07.680
source news.

15:07.680 --> 15:12.400
So the best thing you can do is go to linuxactionnews.com slash subscribe for all the ways to get our

15:12.400 --> 15:13.400
new episodes.

15:13.400 --> 15:19.240
And linuxactionnews.com slash contact to let us know what kernel you're running.

15:19.240 --> 15:23.800
Did we miss a story this week? Boost in with a new podcast app from newpodcastapps.com

15:23.800 --> 15:26.280
and tell us what you'd like to hear us cover.

15:26.280 --> 15:31.400
And you'll hear it when we're back next week with our take on the latest Linux and open

15:31.400 --> 15:33.200
source news.

15:33.200 --> 15:52.200
Thanks for joining us and that's all the news for this week.

