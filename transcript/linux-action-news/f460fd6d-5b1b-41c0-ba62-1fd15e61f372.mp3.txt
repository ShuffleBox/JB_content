Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 96, recorded on March 10th, 2019. I'm Chris.
And I'm Joe.
Hello, Joe. Good to be connected with you live from Scale17x here in Pasadena, California.
We have so much to get into this week, some of which I've actually got a chance to talk
to the people involved with the stories. But let's start out with a brand new fresh release
of Ubuntu Touch.
Yeah, it's not a massive release, but it is important in a sense of they are really starting
to polish the OS now and concentrating on the Morph browser, which given that there
aren't that many apps available and you're using the web for quite a lot of things is
very important.
I'm just happy to see that they launched an experimental system-wide dark theme.
Yeah, I thought you might notice that one, yeah.
I like the name of their app store too. It's called the Open Store, which I thought was
kind of nice. They say during this cycle too, they re-enabled automated testing on their
continuous integration system. And then they watched as some packages failed to build,
which then they got to working on those things. I think it's nice to see them improving things
like testing, automated testing, and also traditional testing. But as a project, one
of the things that strikes me that you don't often see is how clearly they call out the
individual contributors. And even in the changelog, they don't break it out by date or a bug number,
they break it out by contributor. And then they individually list which each contributor
of the project got into this particular release. And I don't really see that very often.
Yeah, they're very community focused. The whole thing is very much community effort,
isn't it? And I remember when they first took over after Canonical dropped the project,
suddenly my perspective changing on it and being much more forgiving of it as a community
project rather than as a commercial one. But they really have continued over the months
and years to make it more and more stable, better and better and more and more viable
as a platform. It's very tricky to compete with iOS and Android, obviously. But I think
that there is quite a large niche market for this. And as they continue to get better,
hopefully they will get an OEM deal because that's the hump they need to get over. They
need to have this shipping on an actual device that isn't flashed after market. And are they
going to be able to do that? I really hope so.
Yeah, that's a wait and see thing. But I think for me, one of the reasons I like to keep
talking about this project is it's a brilliant example of open source doing something commercial
software can't. And that is over time, slowly, methodically growing a project, growing a
community, adding features, and just plugging away at something that doesn't necessarily
have an immediate commercial success tied to it. There's not like a three year plan
here to make a billion dollars. And that's not something the commercial mobile space
will even bother with anymore. There's just no company that could afford to do that. And
it's something open source is uniquely good at because they can play that really long
game.
Yeah, well, you reports definitely are playing the long game with Ubuntu Touch. And I suppose
you could say the same of purism.
Purism is making headlines this week when they announced, get ready for it, convergence.
They say we are now announcing that purism's PureOS is convergent, and has laid the foundation
for all future applications to run on both the Librem 5 phone and the Librem laptops
from the same PureOS release.
Well, I'm sitting here podcasting, recording and I'm going to edit it on my phone that
they shipped to me. Oh, no, hang on. They haven't actually shipped the phone yet. How
can they be convergent?
I mean, so there's a couple of things here. I think they're getting a lot of feedback
that the term convergence has been tossed around before and that they didn't invent
it, which fair enough. Their version of convergence is it they say it's a term used to describe
similar functioning of an app across different platforms. They say many software companies
have been eager to make their software convergent because it brings a consistent look and feel,
as well as the exact same functionality for apps to run on your phone and your computer.
So they are kind of acknowledging in that particular statement that other companies
have tried this.
Well, the couple of videos they've got on this post really do show that the GNOME applications
can be resized and kind of dynamically adapt to the different form factors. So I suppose
it's not all hype, but I am still somewhat skeptical that you're going to be able to
get a proper mobile experience and a laptop desktop experience with the same applications.
Well, Purism had a booth here at Scale17x. And I had a chance to chat a couple of times
with Todd Weaver, the CEO and founder, but also Kyle Rankin, who's their chief of security
officer. And he gave me a solid, comprehensive overview of their new Purism boot system.
But we did chat briefly about these convergent stuff because, you know, it's in the news
and I knew we were going to be talking about this. And he says this really goes back to
the work they've been doing for quite a while now on Lib Handy, which is a mobile adaptive
presentation library for GTK Plus and GNOME. They've been involved with that for a while.
And they've already packaged it up for Pure OS. And I believe it's also upstream in the
Debian repository. And there's some flat packs of it as well. This is kind of like a library
that GTK developers can use to make their applications responsive, sort of like a web
app can be responsive, where you can resize your web browser, and the web application
will rescale to match the size of the window. This is a similar functionality for GTK applications.
And they seem to believe in it pretty heavily. And it does seem like a solid contribution
to the upstream GNOME project, because this isn't just a Purism thing. This is something
they're contributing upstream. And it's kind of nice functionality to have. Even if we're
kind of laughing about using the name convergence and this theoretical world where we're using
the same applications on the Librem 5 phone and the desktops, like we can kind of poke
fun at that idea. But the core actual effort, like the manifestation of this vision is an
upstream library now that GTK developers can use to resize apps and make it responsive.
That's cool.
Oh, it is. And they're very keen to open source absolutely everything they do and try and
get as much upstream as possible. And it is really good to see that in a project. But
here's the but. They haven't shipped a phone yet. They're hyping something which doesn't
actually exist yet. And I'm sure that once the phone ships and we see it in action, it
will be impressive. But it just feels too early to be doing this. And they are just
so good at building the hype train, aren't they? We just end up talking about them all
the time.
Yeah, this is part of that. This is something they've been working on for a while. And it's
sort of strategically messaged at the right time as they're building towards something
here. Side note, I did get my hands on the libram five dev kit here at scale.
And how was PRS running on that then?
Well, I couldn't answer that. They didn't have it booting. In fact, they'd remove the
battery, I think in part to make sure it wouldn't power on and also to reduce the weight, because
the battery is quite large. It's a it's like a, you know, just a dev kit. So it's not like
a custom designed flat battery. It's a it looks like a big old battery. And the object
itself was pretty large in the hand because it's not quite cut down to size yet. And there's
heat sinks attached to the back of it and stuff like that. But the screens about the
size of the like the pixel of the large pixel.
Oh, the XL or whatever?
Yeah, yeah, the XL. But yeah, I was a little disappointed. It wasn't booting. I was I was
hoping that since since it'd been about a month since Fossum by the time they got to
scale, they'd have a functional one.
That does add to my skepticism, I must say, because I thought that by now they'd have
something very functional on that dev kit and not having a battery in it. That doesn't
look good to me.
No, no, I felt the same way. However, talking to Kyle, their chief security officer, he
seemed really sharp and the things that they're thinking about and trying to build look pretty
good. So they they may have a they may have a good team there might just things might
just end up being on a protracted schedule, you know, and maybe that's OK. Maybe we end
up we might still end up getting the same end product just might take a lot longer.
Well, anyone who's listened to user error would know that I would have been checking
it out. I would have grabbed my anchor battery and the relevant cable and slightly plugged
it in and had a good play with it.
That's clever.
Yeah, I'm surprised you didn't think of that. Oh, well.
Just a couple of more stories that are rounding out the mobile Linux landscape and one that
may be coming to a device near you.
Yeah, MaruOS 0.6 has been released. And although this is primarily mobile, it's running on
my Nexus 5, for example, and you can also run it on a Nexus 5X. What's really great
about it is it's a lineage based ROM, but then you plug in a screen and a keyboard and
mouse and suddenly you have a Debian desktop with Xfce.
Well slow down there sport. Isn't it news with this release? I could be wrong, but I
thought it was this one where they finished rebuilding and rebasing on a slimmed down
lineage like that's kind of one of the new features, isn't it?
Yeah, it was just based on the Android open source project before, whereas now it's based
on lineage, which gives you a couple of extra lineage features. And it also makes it more
portable to other devices. And although we haven't actually seen any new devices yet,
the whole point of this is that it's going to be much easier to do so. So we should see
some soon, hopefully.
I kind of chuckle over here, but that is the idea and it does make sense that we'll get
there.
But as I said, I've been checking this out and it is great. I've been following the project
for a couple of years now and it always just amazes me that you can have a Debian desktop.
I mean, it's not that complicated. It's just running in containers and sharing the kernel.
And so because you've got this ancient kernel on a Nexus 5, it means you don't have things
like snaps working properly. And there are a few other things that don't work, like audio.
But it is still amazing to me that it's not even particularly laggy, this Debian desktop.
Obviously it uses the best desktop environment in the world, XFCE, so it's going to be super
smooth. But it is surprising on a device of this age and power and RAM and specs generally,
that you can have a fully functional Linux desktop and it actually work well.
Yeah, fair enough. That is true. That is surprising. I know that one of the other things that they
added with this release is you can now hook up a mouse or keyboard over USB, where in
the past you were limited to Bluetooth devices. Did you get a chance to try that?
No, I've just got a little Bluetooth keyboard with a little touchpad on it that I always
use for it. So no, I haven't tried that. And I didn't get around to trying the Chromecast
support either, which means that you don't actually have to plug in a screen anymore.
So I really am keen to test it, but I don't have a Chromecast. I'll have to go around
to my parents' place and check it out on their Chromecast.
Well congratulations to the Maroo Project for getting 0.6 out. That's kind of making
me want to go get the old Nexus out of the drawer and give it a go. You can get the latest
version on their download page as well as a guide to walk you through the entire process,
which we have linked in the show notes at linuxactionnews.com slash 96.
Well on the more mainstream side of the Android street, this week on the Android developers
blog, Google have posted about a new monetization method for devs, which involves giving users
the option to watch video adverts instead of actually paying for things.
Have you ever seen this? We've got like a free game and you die or something happens
and it's like, watch a video and get extra gems or get another replay or resume your
progress and if you watch the video, it's like a 30 second Google ads ad video thing
and then it takes you back to the game and you get whatever reward, whatever incentive
they promise to make you watch that ad. This is on my kids' games all the time too. They'll
just sit there and watch the videos. They love it. They think it's a great deal. So
far this has been up to each individual developer to implement in their own fancy, however they
want to do it. And so what Google's doing now is, hey, let's just give you a system
wide Google play based API to do this and then we can all make money. And the only people
that lose are the users, Joe, the users win by getting cool rewards in their games.
Google play is excited to announce the rewarded products, a new product type now available
in the open beta in your play console have added developers.
It does feel like some black mirror episode or something, doesn't it? Where you saw forced
to watch these videos.
Yeah, I actually think it's going to be horrible for Android because there's already so much
pressure for all of the apps to be free and all of these weirdo ways they try to monetize.
This is sort of like a blessed way now and you're just going to get tons and tons of
Google ads videos and Google's making money on both ends of the deal because when you
put it on the Google ads network, they're making money and when you do a transaction
through the Google play API, they're taking a cut. So it's just wonderful for them.
It really is them doubling down on it being a sort of budget OS though, isn't it? It's
not premium like iOS where you just expected to spend the couple of bucks or whatever for
the app. This is just them really accepting that it is a second rate monetization system.
It seems that way to me and it also seems like it's going to lead to a lot more advertisements
on the platform.
I do wonder if you've got root and add away, whether you'll be able to say, yes, I'll watch
the video and then it just won't load and it'll skip it.
I hope so. That would be great actually. Not that I want to steal or anything like that,
but also I don't want ads on my phone. I really don't. I don't like having ads on my mobile
device. And so I would be much more inclined to root after years and years now of not rooting.
This would probably put me back into that camp.
The thing is though, it looks like this is going to be an option for people. It's either
pay and have this freemium model and pay for your rewards or go the advertising route.
It's kind of choice, which is good, isn't it?
Well, it's up to the developer. It's up to the developer if they want to offer that.
I would love for that to be the way it goes, Joe, but I'm skeptical.
Yeah, I suppose they'll have metrics, won't they? These devs for how many people actually
are paying for these add-ons in the apps and it's probably not a lot of people on Android.
And so I think this is going to be very popular with them.
Well the consumer market might be a hot mess for Google, but the enterprise market seems
like it could be shaping up quite nicely for Google's Glass. Yes, Google Glass, a new generation
even.
Yeah, we talked about this way back on episode 11 of Linux Action News when they had a kind
of second generation at the time, Google Glass, which was very much aimed at industry. And
now there are some leaks of a second generation of that device, essentially the third generation
of Google Glass, which means it obviously must have done well for them. And they have
finally found the niche for Google Glass.
Just as an aside, one of the things about this story that jumps out to me is now we
have the second most prominent augmented reality product in the market that is focused solely
at the enterprise. Recently, Microsoft announced HoloLens 2, which also is focused at the
enterprise. And now here we have Google Glass Enterprise Edition. And these latest leaks
seem to indicate it's a nice upgrade. First of all, the biggest change is USB-C. You're
getting USB-C for charging. That seems pretty nice. But according to 9to5Google, there's
other things that are pretty big upgrade in this thing too. It's going to go with a Snapdragon
710. It's going to have onboard LTE 802.11ac. The camera is going to go from an 8 megapixel
sensor to a 32 megapixel sensor with 4K video recording. They're also upgrading the RAM
from 2 gigs to 3 gigs. It's essentially a mid to high range Android smartphone in a
very specific form factor that wraps around your brain noodle.
And so, of course, this means yet more Linux in industry and enterprise, not only on the
device itself, but also you've got to figure it's connecting to servers and uploading the
data and downloading the data. And the chances are that's going to be running on Linux probably
on AWS or at least in the cloud somewhere.
Oh, yeah, for sure. It's Linux all the way down. And let's also be clear, this isn't
going to stay in the enterprise forever. Soon we'll be all walking around with Linux computers
connected to the cloud wrapped around our head. I'm not sure how I feel about that.
But why don't we change gears and talk about the biggest story of the week? And that is
Microsoft announcing the open sourcing of Windows calculator.
Now that's how everyone has covered this, right? The fact that, oh, it's just a joke
and it's the most minor part of Windows. But there's actually a more nuanced take on this.
And it's right there in Microsoft's post about this. And they say, reviewing the calculator
code is a great way to learn about the latest Microsoft technologies like Universal Windows
Platform, XAML, and Azure Pipelines. And that is the crux of this. It's not just them doing
it for fun. It's to try and entice devs in and to say, look, this is an example of some
of the legacy code of actually doing the calculation stuff. But here's how it actually ties into
Windows 10. This is the example code that you can then use to build your applications
to learn about how to build applications. And so it's a way of pulling people in. And
therefore, I think it's a very smart move by Microsoft.
Yeah, it is. It is a great way to sort of dip your toes in without it being overwhelming.
And the thing is, is that it's sort of a fascinating application. Because in some ways, it's a
very modern designed Windows application. But some elements of it, like core parts of
the code base, go all the way back to 1995. I was chatting with Mark Goodner, who is the
program manager for Visual Studio at Microsoft here at scale. And he and I were joking about
what's going to be the next application that Microsoft is going to open source. And he
and I are pulling for it to be Minesweeper. I think that'd be pretty awesome.
Solitaire, maybe.
One of the things that is interesting about this is there is already a whole bunch of
issues that has been submitted against this. In fact, Microsoft has already merged some
of the community fixes into the upstream code base. It is, in all senses, a genuine open
source project now.
It's weird to think that, isn't it? That Microsoft have got a properly open source project of
any kind, never mind all of the other ones they've got. If you told us that 10 years
ago, we would have just not believed you.
Yeah, pretty much. I would be really actually fascinated to see if they open source future
versions. And will this ship in the next major version of Windows, the next major version
of calc.exe that gets updated? Will it be this version that has been patched by community
members? My sense is it will be. And then we will have an official Microsoft Windows
application that is being modified, improved and updated by the open source community.
It's not a big deal when it's calc.exe. But if it's MMC.exe, or something that's much
more significant, like a control panel applet or something, that all of a sudden starts
to become a very big deal.
Could it possibly be the tip toeing towards open sourcing the whole shell, if not the
NT kernel? Seems unlikely, but it's what a lot of people hope.
I'm not going that far yet. I'm not going that far. It could end here. And I think it's
worth remembering it's MIT licensed. It's not like they're GPLing all the things here.
I still don't believe they're building towards a Windows shell that runs on top of a Linux
device. At least not yet. I think today it's just calc.exe.
However, like many, many efforts out of Microsoft, when you dig into it, you realize this has
been in the works for a really long time. Like just the basics were up on GitHub back
in January. We're only finding out about it now. But things like Visual Studio Code and
.NET Core were in works for four or five years before they were ever public. So whatever
their next move is, it's already been in the works for quite a while. And when we find
out about it, it'll be after months and months of them working on it. So it's a weird thing
to think about. But right now, the next move is already well underway. And it's just up
to us to figure out what it is.
Well, I'm going to go out on a limb and have a wild prediction that they will open source
the whole shell. And then within a couple of days, someone will get it running on the
next.
I tell you what, if they package that up, I give it a go. Why not? I've tried crazier
things.
So, before we get out of here then, I know you're going to talk about it on LUP in a
couple of days. But what's the kind of take home message from your experience at scale
then?
Well, first and foremost, it was awesome to see everybody. Thank you, everybody that came
out and said hi, and joined the meetup. We had a great dinner. But my overall big theme
about this year's scale was the cloud. And I don't even think it was intentional on the
part of the scale organizers. I just think it's what the community contributed as talks.
And even the talks that weren't specifically about the cloud had tangential connections
to the cloud. There was representation there from Purism and System76 for the Linux desktop,
but the hallway track this year was the best it's ever been.
There was elements to this year's scale that I think were just, first of all, should be
replicated by all other conferences, but just made it one of the best scales ever. I'm going
to talk more about it on Linux Unplugged because we also had Wes and Elle. They were here with
me and want to get their thoughts on it too. We'll do a little story time on this week's
Linux Unplugged.
I look forward to it. But I'm not surprised that it was all about the cloud because follow
the money. That's where the money is in Linux, right? So people are going to be talking about
that.
Yeah, we'll be talking about that and a lot more. And so will we, Joe. Go to linuxactionnews.com
slash subscribe to your audience member for all the ways to get new episodes of this here
show.
And go to linuxactionnews.com slash contact for ways to get in touch.
And we're doing more study groups. We have one coming up on March 17th for Kubernetes
and much, much more. Go to meetup.com slash Jupiter Broadcasting for our MeetSpace meetups
and our online virtual study group meetups.
And if you're anywhere near Reading in the UK, on Saturday the 16th of March, so coming
up very soon, the Ubuntu podcast we're having a get together and I'll be at that. So come
and say hello.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Rissington.
Thank you for joining us and we'll see you next week.
See you later.
