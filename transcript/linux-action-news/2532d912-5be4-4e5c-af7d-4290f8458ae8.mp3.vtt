WEBVTT

00:00.000 --> 00:10.240
Hello, and welcome to Linux Action News, episode 178, recorded on February 28, 2021. I'm Chris.

00:10.240 --> 00:11.240
And I'm Wes.

00:11.240 --> 00:13.200
Hello, Wes. Let's do the news.

00:13.200 --> 00:18.520
This week, Red Hat announced yet another way to get no-cost access to Red Hat Enterprise

00:18.520 --> 00:22.040
Linux, but it's only for those who qualify.

00:22.040 --> 00:27.260
No, you're not experiencing déjà vu. This is an additional program from the one they

00:27.260 --> 00:32.640
expanded in January, where they brought the production count up to 16 for developers.

00:32.640 --> 00:38.600
This is seemingly perhaps an olive branch to people who use RHEL in production of open

00:38.600 --> 00:42.940
source software or for infrastructure that supports open source software. But there's

00:42.940 --> 00:46.040
a couple of hoops you got to jump through to qualify.

00:46.040 --> 00:51.520
Hoop number one is you have to email Red Hat to be approved. You've got to actually tell

00:51.520 --> 00:55.280
them you're interested in this program and then, in theory, go through the process, sign

00:55.280 --> 00:59.320
up, make an account until you get access to all those goodies.

00:59.320 --> 01:04.560
I think Red Hat's Jason Brooks made their intention clear with this quote.

01:04.560 --> 01:09.700
We want to make sure that those organizations engaged with open source have access to RHEL

01:09.700 --> 01:13.680
as they build and test the future of open source software.

01:13.680 --> 01:18.500
And I think this point is kind of important. To me, it kind of sounds like you have to

01:18.500 --> 01:25.800
email them and kind of ask and justify why you should deserve access to this. And then

01:25.800 --> 01:29.400
they will review it and then decide if you qualify.

01:29.400 --> 01:32.840
They do say who gets it when they're kind of talking, trying to set expectations on

01:32.840 --> 01:37.940
their site. They say the program is available exclusively to open source projects and other

01:37.940 --> 01:43.420
organizations that support the production of open source software. They go on to say

01:43.420 --> 01:49.440
generally all software distributed under a Fedora approved license is considered open

01:49.440 --> 01:56.300
source for the purpose of this program. Projects sponsored by for-profit companies can also

01:56.300 --> 02:01.900
be eligible for RHEL for open source infrastructure subscriptions with the caveat that subscriptions

02:01.900 --> 02:06.800
obtained through the program must be used solely for independent project infrastructure.

02:06.800 --> 02:10.980
So there's a couple of gotchas in there and I have a few additional questions on top of

02:10.980 --> 02:16.940
that, Wes. Like what happens if my company is sponsoring open source software today and

02:16.940 --> 02:22.560
we develop open source software for a couple of years and then we stop? Maybe the developers

02:22.560 --> 02:27.900
leave or the project's over. Do we then have to email Red Hat and get a quote to pay for

02:27.900 --> 02:32.360
our licenses? Do we get to keep those licenses that were issued to us even though we no longer

02:32.360 --> 02:37.300
support open source software? And how do I format this email when I write in asking,

02:37.300 --> 02:40.860
please, sir, can I have some free Linux? How do I format that email?

02:40.860 --> 02:44.420
You can tell there are definitely going to be those questions. They even note way down

02:44.420 --> 02:48.820
at the bottom of their blog post, we realize this program doesn't cover situations where

02:48.820 --> 02:54.480
open source projects are using public CI infrastructure provided by third parties. This and other

02:54.480 --> 02:59.500
programs are still being worked on. That's a pretty big hole here.

02:59.500 --> 03:03.820
Yeah, it is. That hole is big enough that it's an entire market or two of users. And

03:03.820 --> 03:08.920
then you combine the hassle of having to email in and beg for your Linux. I think this is

03:08.920 --> 03:15.900
enough of a barrier that people will just use Rocky Linux or they'll use cloud Linux.

03:15.900 --> 03:19.460
They're not going to bother with these games because if you're thinking about it, you're

03:19.460 --> 03:23.980
spending up some VMs for some infrastructure. Are you really going to mess with this sort

03:23.980 --> 03:31.220
of loan to you Linux where it's sort of vague and not really clear what happens down the

03:31.220 --> 03:32.220
road long term?

03:32.220 --> 03:34.960
And yes, you get access to things like the forums, but you don't actually get support

03:34.960 --> 03:39.380
with this. It's self-serve support. Well, I can get that with every other Linux distribution

03:39.380 --> 03:40.380
as well.

03:40.380 --> 03:46.060
Well, they did sort of dangle support for some organizations. We may also be able to

03:46.060 --> 03:51.580
offer no cost support depending on the scope and nature of the organization, which that's

03:51.580 --> 03:57.100
kind of just more questions to my mind. This might be useful for people and organizations

03:57.100 --> 04:01.900
and projects that are in the Red Hat ecosystem pretty closely already. They had a quote from

04:01.900 --> 04:06.300
folks at GNOME who appreciate having this access. And maybe if you're already administrating

04:06.300 --> 04:09.440
a lot of Red Hat boxes, you're using those tools all the time. And now you can just do

04:09.440 --> 04:13.860
that for the open source you're involved with. Okay. I mean, that's probably a good thing,

04:13.860 --> 04:19.200
but I agree with you. The value proposition, if you don't need, you're not insistent on

04:19.200 --> 04:22.660
having access to real RHEL, I'm not sure I get it.

04:22.660 --> 04:26.900
I think your point's well taken that if you're producing software that's going to run on

04:26.900 --> 04:30.500
RHEL, that's just made your life easier. And that's totally worth acknowledging. And it

04:30.500 --> 04:34.420
is good to see because this is going to cover those areas a little bit more completely where

04:34.420 --> 04:39.700
the developer program didn't really make sense. And so I do want to commend them for that

04:39.700 --> 04:43.700
because my criticism of the developer program was it meant a lot of use cases were going

04:43.700 --> 04:49.300
to kind of be shoehorned as a developer, like infrastructure. But now this is going to make

04:49.300 --> 04:54.420
that a little more clear. But they also say this isn't going to work for a large list

04:54.420 --> 05:00.140
of organizational types, academic institutions. This doesn't really solve their problem. Healthcare

05:00.140 --> 05:06.520
organizations does not solve their problem. There's a lot of categories of firms like

05:06.520 --> 05:11.540
that that are not going to qualify for this. And I think Red Hat's answer there is pretty

05:11.540 --> 05:17.340
clear. You should just buy commercial RHEL. You have a use case for commercial RHEL in

05:17.340 --> 05:21.340
those cases. And I don't know if I completely agree, at least in the academic sense. What

05:21.340 --> 05:22.340
is your thought?

05:22.340 --> 05:27.860
Well, yeah. So they do say Red Hat is continuing to explore new programs for traditional nonprofits

05:27.860 --> 05:32.700
and academic institutions and government entities. So I think they acknowledge that maybe in

05:32.700 --> 05:36.820
some of those cases it might make sense. You know, there's a lot of folks who are on CentOS

05:36.820 --> 05:41.500
or people involved with scientific Linux perhaps for a while that are already in that ecosystem

05:41.500 --> 05:45.460
probably could use some free RHEL to support scientific research, say.

05:45.460 --> 05:49.700
Yeah. You know, actually, it's funny you mentioned scientific Linux. There are signs of life

05:49.700 --> 05:55.140
again with that project post CentOS news. And that's interesting to develop. And it

05:55.140 --> 05:58.500
is good that they kind of acknowledge that government was one that I didn't mention.

05:58.500 --> 06:03.940
And it's clearly a huge one for them. Government and academic could use a solution here. And

06:03.940 --> 06:10.460
I think then it would be a little more complete. But they're going to need support packages.

06:10.460 --> 06:11.460
It's going to be tricky.

06:11.460 --> 06:15.580
I think it's hard to blur that line of which organizations do or don't. I think that's

06:15.580 --> 06:20.980
part of the reason they're trying to set some clear or not so clear guidance from the start

06:20.980 --> 06:22.240
with this new program.

06:22.240 --> 06:26.820
It does make a little more sense than the developer program. I'll give them that. And

06:26.820 --> 06:30.860
this is it's almost cliche to say at this point, but it is the elephant in the room.

06:30.860 --> 06:36.100
So I'm going to just say it. This totally should have been flushed out before the CentOS

06:36.100 --> 06:41.860
announcement. I grok that the intention was to get the news out to CentOS users as fast

06:41.860 --> 06:46.980
as possible so they could start planning. And that is an honorable intention. But man

06:46.980 --> 06:51.140
oh man, if the left and the right hand couldn't have worked a little bit more together on

06:51.140 --> 06:55.340
this one to kind of package this up. Imagine this now in its full context. You've got the

06:55.340 --> 06:59.700
expanded 16 production system developer program. You've got this where it's not really limited

06:59.700 --> 07:04.540
to any amount of systems. It's more about the type of industry or job function and type

07:04.540 --> 07:09.300
of system. Yeah. But it's opened up to a lot more people. Yeah. Now then you also still

07:09.300 --> 07:13.900
have CentOS stream, right? It's not like CentOS is gone. And so if the announcement was, hey,

07:13.900 --> 07:18.180
you've got all these ways where you can actually just run RHEL how you used to run CentOS.

07:18.180 --> 07:23.740
And by the way, CentOS is transitioning in a year. Plus that would have been a totally

07:23.740 --> 07:29.440
different story than CentOS is going away as you love it. And then months of really

07:29.440 --> 07:35.460
nothing while projects sprung up to replace what they took away before the complete picture

07:35.460 --> 07:39.940
was out in the public. Meanwhile, behind the scenes, all knowing that this was going to

07:39.940 --> 07:44.940
happen, the Red Hat staff knew this was the direction they were going in with these RHEL

07:44.940 --> 07:50.300
programs, but just simply failed to execute in a way that communicated it properly. And

07:50.300 --> 07:56.060
instead they just took one on the chin and lost reputation and lost the faith of the

07:56.060 --> 07:59.860
open source community. Yeah. You know, here they even explicitly say that this is something

07:59.860 --> 08:05.860
they are, they were already doing with organizations. They knew they needed to clean this up. Yeah.

08:05.860 --> 08:10.980
But it's here now. And by the end of 2021, once CentOS has gone to stream, it's, there's

08:10.980 --> 08:14.900
going to be a clear delineations now. It's still kind of fuzzy between all of them. Well,

08:14.900 --> 08:20.420
you know, Alma Linux just put out an RC1. Tracking the CentOS clones as they land here

08:20.420 --> 08:27.340
on the show. Well, while we're talking about Red Hat, OpenShift 4.7 landed this week. And

08:27.340 --> 08:31.620
the notable thing here really is Red Hat is attempting to simplify the migration of virtual

08:31.620 --> 08:38.100
machines to containers and also just migrating from your maybe quote unquote legacy VM stack

08:38.100 --> 08:43.300
into OpenShift. Well, those virtual machines, they might not even be running Linux because

08:43.300 --> 08:47.660
according to Red Hat's Peter Lauterbach, the OpenShift team has been working closely with

08:47.660 --> 08:54.660
Microsoft on this one too. One other thing I want to talk about is that we've done virtualization

08:54.660 --> 08:59.940
validation with Microsoft. This has actually been the case since we actually GA'd the product

08:59.940 --> 09:06.540
several releases ago. So anything that's supported from Windows 2012 R2 onwards all the way up

09:06.540 --> 09:13.820
to Windows 10 is a supported validated configuration, not only from Red Hat, but from Microsoft

09:13.820 --> 09:14.820
as well.

09:14.820 --> 09:19.820
I'll take anything that makes managing Windows a little easier.

09:19.820 --> 09:23.740
Leno dot com slash land. Go there to get a one hundred dollars 60 day credit towards

09:23.740 --> 09:29.620
a new account. Yeah, I said one hundred dollars. I know it's great. Leno provides virtual servers

09:29.620 --> 09:34.660
to make it easy and affordable to host anything you want in the cloud. We use them for all

09:34.660 --> 09:40.020
of the new infrastructure as JB 3.0. I started a couple of years ago personally using them.

09:40.020 --> 09:44.340
And then when the opportunity to go independent came and I knew I'd need a whole new generation

09:44.340 --> 09:49.780
of infrastructure, Leno was the obvious choice. 30 to 50 percent cheaper than places like

09:49.780 --> 09:55.280
AWS or Google. But they've been around since 2003. So they've honed this machine. They

09:55.280 --> 10:01.140
know what they're doing. SSD storage, 40 gigabit connections, a super easy to use UI to manage

10:01.140 --> 10:04.780
everything. Wes and I were messing with things over the weekend and I knew Wes was up to

10:04.780 --> 10:08.020
something because I started seeing the emails come in with some of their built in monitoring

10:08.020 --> 10:12.500
tools. You get alerts when certain events happen, which is always a great way to kind

10:12.500 --> 10:16.340
of get an indication that something's going on on your box. But of course, it was just

10:16.340 --> 10:21.100
Wes being awesome. But, you know, I was thinking we talk a lot about how we use it for hosting.

10:21.100 --> 10:25.700
But something I don't mention a lot is it's a great way to learn. And with our one hundred

10:25.700 --> 10:31.420
dollar credit, when you go to Leno.com slash LAN, you can build a configuration of performance

10:31.420 --> 10:36.500
and distribution and server location that's perfect for you. So you get great performance

10:36.500 --> 10:41.060
and a platform to learn on. Think about maybe cybersecurity. This is something you could

10:41.060 --> 10:46.200
really, really use hands on experience with. And not everyone has a dozen different rigs

10:46.200 --> 10:49.900
of different compute power and software stacks that they can mess around with. But with our

10:49.900 --> 10:53.780
one hundred dollar credit, you could really get a lot of runway there and learn something

10:53.780 --> 10:59.060
fundamental about cybersecurity. There's so many great opportunities to learn there.

10:59.060 --> 11:03.140
But perhaps, perhaps it's worth seeing if you could extend your existing infrastructure

11:03.140 --> 11:07.540
with Linode. Maybe cloud monitoring that you roll yourself with something like Zabbix.

11:07.540 --> 11:13.280
They have a one click app deployment for enterprise class open source monitoring. Zabbix is an

11:13.280 --> 11:18.500
all in one monitoring solution that you can deploy on Linode and then monitor your systems

11:18.500 --> 11:23.980
from the cloud. Try it out with our one hundred dollar credit and see how far you can get.

11:23.980 --> 11:28.260
Leno.com slash LAN. Go there, support the show and get that one hundred dollar credit.

11:28.260 --> 11:33.380
And a big thank you to Leno for sponsoring independent content like this here show. Leno.com

11:33.380 --> 11:35.900
slash LAN.

11:35.900 --> 11:41.180
Well I know you don't need yet another laptop, Chris. But what if I told you about a new

11:41.180 --> 11:48.060
modular repairable laptop that doesn't look too bad either? This week, the framework team

11:48.060 --> 11:53.780
unveiled their first product, the framework laptop, a thin, lightweight, high performance

11:53.780 --> 11:59.180
13.5 inch notebook that can be upgraded, customized and repaired.

11:59.180 --> 12:04.820
Modular, repairable, upgradable, customizable. These are not usually the terms you hear thrown

12:04.820 --> 12:08.860
around for a modern laptop anymore, so it definitely caught our attention. Let's talk

12:08.860 --> 12:15.220
a little bit about the specs. 11th gen Intel core processors in there. Optional Wi-Fi 6E,

12:15.220 --> 12:20.920
up to 64 gigabytes of DDR4 RAM, four terabytes of storage. It can go up to four terabytes

12:20.920 --> 12:25.940
of storage, which is Gen 4 NVME storage. And then, of course, like Wes said, it's thin,

12:25.940 --> 12:32.460
lightweight, got that 13.5 inch screen, which is running at a three by two screen ratio.

12:32.460 --> 12:37.740
But the standout item here, like the feature, the headline feature of the framework laptop

12:37.740 --> 12:42.060
supposedly is going to be this expansion card system, which is one of these things that

12:42.060 --> 12:47.540
could be both brilliant and also disastrous, depending on how it's implemented. The idea

12:47.540 --> 12:53.460
is you have these modules that have ports that can be interplaced with each other. USB-C

12:53.460 --> 12:58.980
is the back end connectivity, so you can get DisplayPort in there, micro SD, fast storage,

12:58.980 --> 13:05.060
a high end headphone, amp, or just a USB-C port itself. Like you mix and match the modules

13:05.060 --> 13:09.300
as you want. And that's going to be one of its strongest features, differentiators, you

13:09.300 --> 13:10.300
could say.

13:10.300 --> 13:14.420
So that is providing these modules get built and are there third parties that are interested

13:14.420 --> 13:20.420
in. In theory, this is all open and anyone could build a module. Question is, will they?

13:20.420 --> 13:25.340
Now for upgrades, both storage and Wi-Fi are socketed and there's two slots of upgradable

13:25.340 --> 13:30.840
memory. Even the entire main board can be swapped if you want to support a new CPU gen.

13:30.840 --> 13:36.100
That's forward looking, I like it. High use parts like the battery, screen, keyboard and

13:36.100 --> 13:41.900
color customizable magnetic attach bezels are also easy to replace. There's even QR

13:41.900 --> 13:46.020
codes on each item that take you directly to guides on their site.

13:46.020 --> 13:51.140
That's all pretty nice. And I'm starting to get a picture here of this laptop that I buy

13:51.140 --> 13:56.980
once and then I upgrade for two or three cycles perhaps, and I can get different modules.

13:56.980 --> 14:05.160
The Linux support story in here is a little tricky. It's there, there is Linux support,

14:05.160 --> 14:10.700
but it's it's not like a headline feature of this thing. It was mentioned once in their

14:10.700 --> 14:15.020
post. Yeah. In the DIY edition of the laptop, which should honestly probably be what I'd

14:15.020 --> 14:19.160
want to get anyways, but see, they know. Yeah. Yeah. Otherwise it's like windows 10 home

14:19.160 --> 14:24.420
or windows 10 pro depending on who you are, but they're going to have the DIY DIY edition

14:24.420 --> 14:27.860
for those of you who do prefer to install your own Linux. I don't even think it's going

14:27.860 --> 14:32.320
to come preloaded, but all the parts, if you look at this thing, Intel processor, Intel

14:32.320 --> 14:37.300
wifi, it's, it's all going to be supported by Linux. That's like, they don't have to

14:37.300 --> 14:42.100
do much. And because the interconnect is likely using USB-C for all the different modules,

14:42.100 --> 14:46.580
that's also going to work with Linux. We'll be fine. But it does remind me of my, one

14:46.580 --> 14:54.400
of my all time favorite laptops was the Apple power book, Pismo and wall street generations.

14:54.400 --> 15:00.060
They were, they were pretty cool laptops because they had these interchangeable modular base,

15:00.060 --> 15:06.700
two of them, and you could change out the DVD drive for a battery. You could put a hard

15:06.700 --> 15:13.060
disk in the slot, or if you were like me and we're a baller, you took two batteries and

15:13.060 --> 15:17.620
you put them both in the module bay and you got all day battery life out of this laptop.

15:17.620 --> 15:25.220
It was awesome. Rocking like Mac OS classic nine or something really old. I mean, this

15:25.220 --> 15:30.020
is a long time ago, but back then I grok the benefit of a modular laptop. It was like,

15:30.020 --> 15:38.060
great to have. And so you're right. This would speak to me if you could do things like pop

15:38.060 --> 15:44.860
in a graphics card, right? That's the kind of stuff. I appreciate that the CPU is socketed.

15:44.860 --> 15:48.140
I'd love to see that more in modern laptops in the memory and all that, and the storage

15:48.140 --> 15:52.340
is all socketed and even the motherboard is replaceable, but that's only as long as it

15:52.340 --> 15:57.780
fits within those thermal envelopes and that power profile. And there will be a point one

15:57.780 --> 16:01.680
or two CPU generations down the road where that's likely no longer going to be the case.

16:01.680 --> 16:06.300
And you'll only get so much runway out of that replacing the motherboard CPU set up.

16:06.300 --> 16:10.580
Yeah, but it's better than what we've got now, right? Yeah. I mean, even if you could

16:10.580 --> 16:15.580
buy one generation of motherboard CPU after your generation, that'd be great. That really,

16:15.580 --> 16:19.240
cause that really would be, I mean, yeah, I'd like to see them do this. You know, they're

16:19.240 --> 16:24.900
not really taking orders yet. It's still in the pre-order stage, but I looked at the crew

16:24.900 --> 16:28.040
behind this and I thought, because that's what's going to make or break some fantasy

16:28.040 --> 16:29.040
like this.

16:29.040 --> 16:31.900
Who's actually trying to make this thing? It's a nice vision, but.

16:31.900 --> 16:37.620
Yeah, well it is. And they acknowledge that they're making big claims. They say that consumer

16:37.620 --> 16:43.260
electronics is littered with the graves of companies with grand ideas and failed executions.

16:43.260 --> 16:47.180
The proof is going to be in the products. And they then go on to talk about what a great

16:47.180 --> 16:53.500
team they have, which right now seems to be around 13 officially with about nine open

16:53.500 --> 16:59.780
positions. Some of them rather critical, but I looked at their founder and I looked at

16:59.780 --> 17:06.140
their system software engineer and they have some serious credentials, Wes. They have been

17:06.140 --> 17:11.740
around. The founder spent years at Oculus and then even spent some years at Facebook

17:11.740 --> 17:17.340
after the acquisition working on both software and hardware teams. Same with the main software

17:17.340 --> 17:22.860
engineer. Seemed like they were both directly responsible for essentially every Oculus product

17:22.860 --> 17:30.640
we've ever seen. And the other people on the team have experience from ASUS, Google, Dell.

17:30.640 --> 17:34.100
There's others that they come from some decent pedigree.

17:34.100 --> 17:38.660
And organizations that are building and shipping products, right? I think that's what stands

17:38.660 --> 17:41.740
out here is it does seem like a team of people who've done this before have been through

17:41.740 --> 17:48.660
successful releases of products and have clearly learned a lot. I think my main question is,

17:48.660 --> 17:53.560
what's the market for this going to be? They're shooting pretty high here. I don't know what

17:53.560 --> 17:58.680
kind of funding they have or what that runways look like and how much success do they need

17:58.680 --> 18:03.100
to really make it here is going to be a question. Now, I think there has been more interest

18:03.100 --> 18:07.500
in the general public and right to repair laws, repairability in general. Maybe this

18:07.500 --> 18:12.900
stands out. I think what might make it or break it though is how thin does it really

18:12.900 --> 18:15.540
end up being and are the aesthetics up to par?

18:15.540 --> 18:19.620
Yeah. And then you got the nice things like how good is the keyboard? How's the screen

18:19.620 --> 18:23.700
look? How's the track bad? How's the Wi-Fi reception? There's a lot that goes into a

18:23.700 --> 18:24.700
good laptop.

18:24.700 --> 18:26.420
Yeah. Does Bluetooth actually connect?

18:26.420 --> 18:34.300
Yeah. It's a harder job than we could probably even imagine, but they do seem to have those

18:34.300 --> 18:39.100
credentials. I'm very skeptical. I'd love to see something like this and even if it

18:39.100 --> 18:44.020
just sort of pushed the industry or if it gave the folks over at System76 some ideas

18:44.020 --> 18:48.300
they could do with a laptop, I'd be happy, right? I'm probably never going to buy this

18:48.300 --> 18:51.460
laptop, but I'd love to see them push the market a little bit.

18:51.460 --> 18:54.980
Right. At least hopefully this signals to other companies out that there might be some

18:54.980 --> 18:55.980
interest here.

18:55.980 --> 19:00.940
Well, something Google's been showing some interest in is funding Linux Kernel Security

19:00.940 --> 19:05.780
Development. Google and the Linux Foundation have announced plans to fund two full-time

19:05.780 --> 19:11.020
maintainers to exclusively focus on Linux Kernel Security Development, Gustavo Silva

19:11.020 --> 19:12.020
and Nathan Chancellor.

19:12.020 --> 19:16.660
Chancellor, who's been working on the Kernel for four and a half years, will be focused

19:16.660 --> 19:23.260
on triaging and fixing bugs in Clang and LLVM while working on establishing continuous integration

19:23.260 --> 19:29.300
systems to support that work. Now, this doesn't really sound like working on the Kernel, but

19:29.300 --> 19:34.020
once those compiler aims are well established, Chancellor plans to begin adding features

19:34.020 --> 19:39.680
and polish to the Kernel using those compiler technologies. He was quoted in the announcement

19:39.680 --> 19:45.060
as saying, I hope that more and more people will start to use the LLVM compiler infrastructure

19:45.060 --> 19:50.860
project and contribute fixes to it and the Kernel. It will go a long way towards improving

19:50.860 --> 19:53.820
Linux security for everyone.

19:53.820 --> 19:58.940
As for Gustavo, he'll be focused full-time on eliminating several classes of buffer overflows

19:58.940 --> 20:04.740
by transforming all instances of zero-length and one-element arrays into flexible array

20:04.740 --> 20:10.180
members, which is the preferred and least error-prone mechanism to declare those variables.

20:10.180 --> 20:16.380
Additionally, he is actively focusing on fixing bugs before they hit mainline, while also

20:16.380 --> 20:22.380
proactively developing defense mechanisms that cut off whole classes of vulnerabilities.

20:22.380 --> 20:27.620
He's well qualified for this work, he sent his first Kernel patch in 2010, and today

20:27.620 --> 20:32.980
is an active member of the Kernel Self-Protection Project. He's consistently one of the top

20:32.980 --> 20:39.980
five most active Kernel developers since 2017, with more than 2,000 commits in mainline.

21:02.980 --> 21:09.980
He's also one of the top five most active Kernel developers since 2017, with more than

21:32.980 --> 21:39.980
2,000 commits in mainline.

22:02.980 --> 22:20.940
There's a shiny new version of Firefox out this week, and while we don't cover every

22:20.940 --> 22:24.140
release, this one seemed pretty special.

22:24.140 --> 22:29.740
Version 86 is out, and one of their headline features is Total Cookie Protection, which

22:29.740 --> 22:36.220
they say is a major privacy advance in Firefox. It's essentially creating a cookie jar for

22:36.220 --> 22:38.380
each website, and I love that term.

22:38.380 --> 22:41.740
I know, there are consequences to this, but that's one of those features that made me

22:41.740 --> 22:44.340
think, why haven't we always been doing this?

22:44.340 --> 22:49.500
86 also has simultaneous picture-in-picture mode for multiple videos, which is going to

22:49.500 --> 22:55.020
be fantastic for me because my security cameras on LadyJupes are all RTSP video feeds that

22:55.020 --> 23:01.300
I can pop out now into multiple independent players. Very excited about that. I actually

23:01.300 --> 23:07.100
have switched back to Firefox recently, and I've seen notable performance improvements

23:07.100 --> 23:09.580
even from the last time I tried it out.

23:09.580 --> 23:14.160
One of the performance improvements you might notice this time around is they've moved Canvas

23:14.160 --> 23:18.420
Drawing and WebGL to the GPU process. That makes sense.

23:18.420 --> 23:24.380
That's going to be really nice. Some improvements to reader mode and also printing land in this

23:24.380 --> 23:29.740
version. But really, for me, it's all about the picture-in-picture mode, the cookie protection,

23:29.740 --> 23:34.580
and taking those rendering processes and moving them to the GPU. You bring all of that together,

23:34.580 --> 23:37.660
and I think it's one of these releases of Firefox where if you haven't tried it out

23:37.660 --> 23:42.700
for a while, it is definitely worth checking in because it's going to be noticeable.

23:42.700 --> 23:47.300
You know, I gave that multiple picture-in-picture mode a shot, and it works pretty well. I'm

23:47.300 --> 23:50.980
kind of impressed with that functionality in general. It feels pretty seamless, and

23:50.980 --> 23:55.460
honestly, regardless of the Linux desktop that I use it on, it just works, and that's

23:55.460 --> 23:56.460
impressive.

23:56.460 --> 24:02.300
Yeah. You know, in this release, they consolidated the way they do video decoding in Firefox

24:02.300 --> 24:06.300
and not only improved performance, but actually managed to improve security and how they do

24:06.300 --> 24:07.300
it as well.

24:07.300 --> 24:11.500
You know, I've been using Firefox a lot more myself, and you mentioned those reader mode

24:11.500 --> 24:15.780
improvements. Honestly, that's one of the reasons. It's been built in forever now, and

24:15.780 --> 24:19.380
it just keeps working. I try to use it on basically every site.

24:19.380 --> 24:24.260
And on that theme of being back on Firefox for a bit, I really don't have any extensions

24:24.260 --> 24:29.040
anymore that are not available for Firefox, and the ones that I have used in Chrome and

24:29.040 --> 24:34.300
I am now using in Firefox, I find small little things that seem like they are either better

24:34.300 --> 24:39.300
integrated with Firefox or just the way it's all handled seems to work better in Firefox

24:39.300 --> 24:43.460
than it does for the same exact extension. There's a handful of them in Chrome.

24:43.460 --> 24:45.780
You know, I have the same experience.

24:45.780 --> 24:49.320
I don't know what they're doing there, Wes, but I like it, and I've been really impressed

24:49.320 --> 24:55.060
it's nice to make it theme and make it look like my desktop. It feels more like a native

24:55.060 --> 24:57.940
Linux desktop web browser to me than Chrome does now.

24:57.940 --> 25:00.720
Chrome will always be a bit alien, I think.

25:00.720 --> 25:05.160
You know, I'd be interested to know if the audience has noticed what we're talking about.

25:05.160 --> 25:09.140
Go to linuxactionnews.com slash contact for all the ways to get in touch.

25:09.140 --> 25:14.220
And linuxactionnews.com slash subscribe for all the ways to get new episodes.

25:14.220 --> 25:17.220
If you're curious about the tricks and tips we have for sticking with Linux after all

25:17.220 --> 25:22.620
these years, check out Linux Unplugged 394 at linuxunplug.com slash 394.

25:22.620 --> 25:27.980
We'll be back next Monday with our weekly take on the latest Linux and open source news.

25:27.980 --> 25:48.300
Thanks for joining us, and we will see you next week.

