1
00:00:00,000 --> 00:00:09,240
Hello, and welcome to Linux Action News, episode 215, recorded on November 14th, 2021.

2
00:00:09,240 --> 00:00:10,240
I'm Chris.

3
00:00:10,240 --> 00:00:11,240
And I'm Wes.

4
00:00:11,240 --> 00:00:12,240
Hello, Wes.

5
00:00:12,240 --> 00:00:13,240
Let's do the news.

6
00:00:13,240 --> 00:00:18,240
We start this week with the curious case of the latest Raspberry Pi OS, now based on Debian

7
00:00:18,240 --> 00:00:21,760
11, which was released back on August 14th, 2021.

8
00:00:21,760 --> 00:00:26,820
Yeah, I think this latest version of the Raspberry Pi OS did take a bit longer than I think the

9
00:00:26,820 --> 00:00:31,520
team was hoping, Simon Long detailed in the release notes that some significant efforts

10
00:00:31,520 --> 00:00:40,520
went into bringing the Raspberry Pi OS's desktop environment, LXDE, from GTK 2 to GTK 3, and

11
00:00:40,520 --> 00:00:43,160
now running on top of GNOME's Mutter project.

12
00:00:43,160 --> 00:00:47,980
Yeah, writing about that, Simon said, quote, up until now, most of the desktop had been

13
00:00:47,980 --> 00:00:51,040
using version 2 of the GTK toolkit.

14
00:00:51,040 --> 00:00:54,840
But increasing numbers of Debian applications are using GTK 3.

15
00:00:54,840 --> 00:00:59,560
So to try and keep things consistent, we've upgraded all of our software and the desktop

16
00:00:59,560 --> 00:01:01,480
itself to the newer version.

17
00:01:01,480 --> 00:01:08,360
Yeah, so GTK 3 was released on February 10th, 2011.

18
00:01:08,360 --> 00:01:13,400
At this point, and with the launch of the LXQ project, I think a lot of us in the community

19
00:01:13,400 --> 00:01:17,560
just sort of assumed LXDE would never get ported to GTK 3.

20
00:01:17,560 --> 00:01:18,560
I certainly had.

21
00:01:18,560 --> 00:01:24,440
Yeah, I mean, the amount of work it was going to be to port LXDE from GTK 2 to GTK 3 was

22
00:01:24,440 --> 00:01:29,000
cited way back when as one of the reasons to launch LXQ in the first place.

23
00:01:29,000 --> 00:01:31,040
Yeah, you're right.

24
00:01:31,040 --> 00:01:36,520
But you know, if you want to stick with LXDE, there is no road to the wayland future paved

25
00:01:36,520 --> 00:01:38,040
in GTK 2.

26
00:01:38,040 --> 00:01:43,080
Simon notes, quote, one of the changes which was prompted by the move to GTK 3 is that

27
00:01:43,080 --> 00:01:47,120
we're now using the new window manager called Mutter instead of the open box window manager

28
00:01:47,120 --> 00:01:50,120
used in previous releases, end quote.

29
00:01:50,120 --> 00:01:54,320
So along with some nice to have effects, Mutter also means that future versions of Raspberry

30
00:01:54,320 --> 00:01:58,160
Pi OS will be wayland compatible in theory.

31
00:01:58,160 --> 00:02:04,000
They're not there yet, but Mutter and GTK 3 kind of lay the groundwork for that.

32
00:02:04,000 --> 00:02:07,760
There are some complications, though, because the window manager is responsible for drawing

33
00:02:07,760 --> 00:02:11,640
the title bar and the window frame around all of your application windows.

34
00:02:11,640 --> 00:02:15,780
But Mutter is a compositing window manager, which means that rather than individually

35
00:02:15,780 --> 00:02:20,540
drawing window frames right onto the existing windows on the screen, it draws all the windows

36
00:02:20,540 --> 00:02:25,520
to a memory buffer off screen first, where it can create a complete image of the entire

37
00:02:25,520 --> 00:02:26,520
screen.

38
00:02:26,520 --> 00:02:28,720
And then that whole image is sent to the hardware to be displayed.

39
00:02:28,720 --> 00:02:32,560
Right, but that composition happens in memory.

40
00:02:32,560 --> 00:02:36,080
And we have to remember these are Raspberry Pis we're talking about here, and not all

41
00:02:36,080 --> 00:02:37,560
of them have a lot of RAM.

42
00:02:37,560 --> 00:02:43,240
So one drawback to Mutter's approach here is it needs comparatively a lot of RAM.

43
00:02:43,240 --> 00:02:48,360
So it seems that Mutter can only run on Raspberry Pis with two gigs or more.

44
00:02:48,360 --> 00:02:53,480
As a result, on Raspberry Pis with less, the older open box window manager will still be

45
00:02:53,480 --> 00:02:54,480
used.

46
00:02:54,480 --> 00:02:57,720
I suspect that right there might be one of the reasons it took so long for this work

47
00:02:57,720 --> 00:02:58,720
to get done.

48
00:02:58,720 --> 00:03:01,800
It just wasn't going to be viable on some of those low end systems.

49
00:03:01,800 --> 00:03:04,320
Yeah, there's so many questions around this.

50
00:03:04,320 --> 00:03:06,000
Like how long did it take?

51
00:03:06,000 --> 00:03:10,520
All these things I want to ask, linuxactionnews.com slash contact, let's get in touch.

52
00:03:10,520 --> 00:03:14,000
But I will reach out myself and try to find out because I agree, like, there had to be

53
00:03:14,000 --> 00:03:15,000
a factor.

54
00:03:15,000 --> 00:03:19,320
They kind of waited until enough of their devices had enough RAM to actually take advantage

55
00:03:19,320 --> 00:03:21,080
of this stuff.

56
00:03:21,080 --> 00:03:26,320
Along with that question, I also would like to know, are they essentially becoming the

57
00:03:26,320 --> 00:03:28,720
de facto caretaker of LXDE now?

58
00:03:28,720 --> 00:03:31,040
And are they okay with that?

59
00:03:31,040 --> 00:03:35,320
Did they consider switching to LXQt and supporting that project instead of having to do all this

60
00:03:35,320 --> 00:03:37,680
work perhaps by themselves?

61
00:03:37,680 --> 00:03:40,080
Yeah, that's a that's a good question, too.

62
00:03:40,080 --> 00:03:42,240
So we'll try to get answers to those relatively soon.

63
00:03:42,240 --> 00:03:46,360
But while looking into the new release, we did see some reports of various compatibility

64
00:03:46,360 --> 00:03:51,240
issues, including some hats and new versions of libraries that are not yet compatible with

65
00:03:51,240 --> 00:03:53,640
some of the Pi specific applications out there.

66
00:03:53,640 --> 00:03:56,960
So you're going to need to check to make sure that whatever you're using on your Raspberry

67
00:03:56,960 --> 00:04:00,000
Pi is compatible with Debian 11.

68
00:04:00,000 --> 00:04:04,020
And in some cases, you may have to wait until the developers have had time to update their

69
00:04:04,020 --> 00:04:06,880
software to be compatible with Debian 11.

70
00:04:06,880 --> 00:04:11,200
Indeed, these issues were enough that Tom's Hardware wrote in their own coverage of this

71
00:04:11,200 --> 00:04:16,300
release that quote, right now you should treat Bullseye as a curiosity and hold off using

72
00:04:16,300 --> 00:04:18,120
it as your daily driver.

73
00:04:18,120 --> 00:04:21,120
If you have mission critical projects, stick with Buster.

74
00:04:21,120 --> 00:04:24,720
It's tried and tested with two years of updates and improvements.

75
00:04:24,720 --> 00:04:27,320
All of your hats and cameras will work with Buster.

76
00:04:27,320 --> 00:04:32,320
Whereas with Bullseye, they might if the software developers had the time they need to update

77
00:04:32,320 --> 00:04:37,680
their drivers, which many have not.

78
00:04:37,680 --> 00:04:42,040
If you told me about a year ago or more that we'd be following enterprise Linux releases

79
00:04:42,040 --> 00:04:46,080
as closely as we are now, I'd probably have had a laugh.

80
00:04:46,080 --> 00:04:51,380
But 2021 is the make it or break it year for the post traditional CentOS transition.

81
00:04:51,380 --> 00:04:54,160
So we've been paying closer attention this year.

82
00:04:54,160 --> 00:04:59,600
And let's start with the release of RHEL 8.5, which out of the gate, the release notes touch

83
00:04:59,600 --> 00:05:05,280
on collaboration with Microsoft in multiple areas, including SQL Server and.NET 6, which

84
00:05:05,280 --> 00:05:07,280
was also just recently released.

85
00:05:07,280 --> 00:05:11,520
Now the ability to run SQL Server on RHEL is definitely not new.

86
00:05:11,520 --> 00:05:15,760
But what is new is having it supported by a system role.

87
00:05:15,760 --> 00:05:16,760
What's a system role?

88
00:05:16,760 --> 00:05:20,640
Well, you can think of them as a collection of Ansible roles and modules that provide

89
00:05:20,640 --> 00:05:25,220
a stable and consistent configuration interface for RHEL, something you can automate around

90
00:05:25,220 --> 00:05:28,400
and lets you manage multiple instances at scale.

91
00:05:28,400 --> 00:05:31,320
Now Microsoft SQL is included in that collection.

92
00:05:31,320 --> 00:05:32,320
Indeed.

93
00:05:32,320 --> 00:05:37,000
And reading between the lines, it kind of, well, I don't know exactly.

94
00:05:37,000 --> 00:05:42,080
But I got the strong hint that there was a little more collaboration than normal between

95
00:05:42,080 --> 00:05:45,000
Microsoft and Red Hat around this release.

96
00:05:45,000 --> 00:05:50,520
And some of that was around getting.NET 6 into RHEL 8.5, which is a pretty new release.

97
00:05:50,520 --> 00:05:55,060
And it seems that Microsoft may be hoping that their new.NET six month release schedule

98
00:05:55,060 --> 00:05:59,360
means more frequent updates to.NET that's being packaged up by the distros.

99
00:05:59,360 --> 00:06:04,020
It was a big kumbaya, but don't fear all these Microsoft things, of course, are just optional.

100
00:06:04,020 --> 00:06:07,880
And like every major release, there's lots of updates to all of the packages throughout

101
00:06:07,880 --> 00:06:09,560
the entire distribution.

102
00:06:09,560 --> 00:06:14,700
Also notable is something product manager Siddharth Nagar said, quote, RHEL 9 is actually

103
00:06:14,700 --> 00:06:17,640
our first major release tied closely to Stream.

104
00:06:17,640 --> 00:06:19,580
Yeah, look at Stream go.

105
00:06:19,580 --> 00:06:22,600
Not only is it going way up in the repository stats.

106
00:06:22,600 --> 00:06:24,900
So I mean, there's actual users out there.

107
00:06:24,900 --> 00:06:30,280
But Stream has quickly become the collaboration point for the entire RHEL ecosystem this year,

108
00:06:30,280 --> 00:06:32,200
which is exactly what they wanted to happen.

109
00:06:32,200 --> 00:06:37,020
Speaking of which, one of the big differentiators of the new RHEL clones is how well can they

110
00:06:37,020 --> 00:06:39,920
keep up with Red Hat Enterprise Linux?

111
00:06:39,920 --> 00:06:42,500
Seems that Alma Linux is doing pretty good right now.

112
00:06:42,500 --> 00:06:49,040
They're clearly leading the pack, having just released Alma Linux 8.5 just two days

113
00:06:49,040 --> 00:06:51,400
after RHEL 8.5.

114
00:06:51,400 --> 00:06:56,200
No word yet on Rocky Linux 8.5.

115
00:06:56,200 --> 00:07:00,800
Speaking of things enterprises love, Canonical has made it a little easier to run Ubuntu

116
00:07:00,800 --> 00:07:05,760
virtual machines on Apple Silicon Macs with the latest version of MultiPass.

117
00:07:05,760 --> 00:07:09,120
If you're not familiar with it, MultiPass is a slick tool that Canonical has been making

118
00:07:09,120 --> 00:07:14,680
for a little while that lets you quickly stand up Ubuntu instances inside a host native virtual

119
00:07:14,680 --> 00:07:15,680
environment.

120
00:07:15,680 --> 00:07:18,840
So I recently gave it a go on an M1 Mac mini.

121
00:07:18,840 --> 00:07:21,040
And I have to say, I was impressed.

122
00:07:21,040 --> 00:07:23,200
It was very fast to set up.

123
00:07:23,200 --> 00:07:28,200
And I had an Ubuntu VM running that I could SSH into probably from installing the tool

124
00:07:28,200 --> 00:07:31,160
to getting the VM up and going in under a minute.

125
00:07:31,160 --> 00:07:36,040
Well, in addition to that Apple Silicon support, the new MultiPass release also introduces

126
00:07:36,040 --> 00:07:41,260
aliases, which lets you link commands in the virtual machine to your host terminal session.

127
00:07:41,260 --> 00:07:42,540
I like that a lot.

128
00:07:42,540 --> 00:07:44,600
So it's essentially like an alias on steroids.

129
00:07:44,600 --> 00:07:47,240
So you can have commands that you type in your host terminal.

130
00:07:47,240 --> 00:07:51,920
So you just randomly open up a terminal and type it and execute it inside that Ubuntu

131
00:07:51,920 --> 00:07:52,920
VM.

132
00:07:52,920 --> 00:07:56,420
That's that's like almost container level access to my VMs.

133
00:07:56,420 --> 00:08:02,080
On top of that, MultiPass 1.8 makes LexD the default back end on Linux, improves support

134
00:08:02,080 --> 00:08:06,240
for the Monte desktop environment, and of course has the typical collection of nice

135
00:08:06,240 --> 00:08:07,560
to have bug fixes.

136
00:08:07,560 --> 00:08:11,640
Canonical also adds that with this update, MultiPass is now supported on every major

137
00:08:11,640 --> 00:08:12,640
desktop platform.

138
00:08:12,640 --> 00:08:17,120
And they point out that that gives developers a consistent environment, regardless of the

139
00:08:17,120 --> 00:08:21,900
desktop OS they choose to use, they can just run it all in MultiPass.

140
00:08:21,900 --> 00:08:25,800
Also this week marked the release of QMU62 RC0.

141
00:08:25,800 --> 00:08:29,900
This is the first release candidate for a big update to a project that plays a very

142
00:08:29,900 --> 00:08:33,360
important role in the open source Linux virtualization stack.

143
00:08:33,360 --> 00:08:36,880
And this new release includes support for Apple Silicon and has a lot more important

144
00:08:36,880 --> 00:08:39,360
RISC-V updates included as well.

145
00:08:39,360 --> 00:08:43,660
And speaking of Apple Silicon, lead Asahi Linux developer Hector Martin has managed

146
00:08:43,660 --> 00:08:48,520
to get KDE Plasma up and running on an M1 Pro MacBook Pro 14 inch.

147
00:08:48,520 --> 00:08:50,680
It's a lot of pros, Wes.

148
00:08:50,680 --> 00:08:53,560
It's all software rendered at this point we should mention.

149
00:08:53,560 --> 00:08:58,360
And more work is needed for Wi-Fi and trackpad and several other devices, but storage and

150
00:08:58,360 --> 00:09:01,580
other PCI devices are looking pretty good.

151
00:09:01,580 --> 00:09:04,960
If you're starting to feel like this is a lot of M1, what's going on here?

152
00:09:04,960 --> 00:09:06,360
Everybody talking about Apple Silicon.

153
00:09:06,360 --> 00:09:07,760
I think you're not alone.

154
00:09:07,760 --> 00:09:11,960
In fact, Hector tweeted kind of addressing this and why he works so hard to port Linux

155
00:09:11,960 --> 00:09:13,120
to Apple hardware.

156
00:09:13,120 --> 00:09:14,720
And he said, here's an example.

157
00:09:14,720 --> 00:09:19,640
I've had this test machine running with GLX gears with software rendering pushing 60%

158
00:09:19,640 --> 00:09:23,360
CPU usage all night with the lid closed and the display on.

159
00:09:23,360 --> 00:09:29,680
And he says, the machine is barely warm to the touch and still nearly silent.

160
00:09:29,680 --> 00:09:32,240
This is why I'm porting Linux to the M1.

161
00:09:32,240 --> 00:09:38,960
He also joked he'd come up with a Plasma setup that was, quote, notch compatible.

162
00:09:38,960 --> 00:09:44,320
But RFS fans are following some proposed on disk format changes to the free file system.

163
00:09:44,320 --> 00:09:48,900
Prominent file system developer Joseph Basak is working on an extensive set of patches

164
00:09:48,900 --> 00:09:53,480
that will address some of the, quote, more painful parts to the file system's design.

165
00:09:53,480 --> 00:09:58,240
Yeah, he's doing this work under the extent tree v2 label.

166
00:09:58,240 --> 00:10:02,800
And to date, it looks like about 80 patches, but it seems like that could just be the start.

167
00:10:02,800 --> 00:10:04,760
And this is going to be a long term thing.

168
00:10:04,760 --> 00:10:09,040
Over the next year, Joseph is working towards changes to address the locking contention

169
00:10:09,040 --> 00:10:14,040
on global routes and the issue of block group items being spread throughout the extent tree.

170
00:10:14,040 --> 00:10:17,920
In total, I think you'll probably see more than a year's worth of work here.

171
00:10:17,920 --> 00:10:21,080
And there's still a lot that needs to be done just to prepare.

172
00:10:21,080 --> 00:10:25,720
Unfortunately, there's just no way around the fact that some of these improvements will

173
00:10:25,720 --> 00:10:28,180
require on disk format changes.

174
00:10:28,180 --> 00:10:32,760
So users will eventually need to convert their butter fs file systems to the updated format

175
00:10:32,760 --> 00:10:38,880
when the time comes, and when they eventually get the new version from the distribution.

176
00:10:38,880 --> 00:10:42,480
If you're curious to learn more, Joseph goes into some excellent details and defines a

177
00:10:42,480 --> 00:10:47,320
lot of core butter fs file system terms in his blog post, which we'll have linked in

178
00:10:47,320 --> 00:10:48,640
the show notes.

179
00:10:48,640 --> 00:10:49,980
It's really worth a read.

180
00:10:49,980 --> 00:10:53,120
He takes some time to point out what their options were, why they went with the path

181
00:10:53,120 --> 00:10:54,120
that he's trying.

182
00:10:54,120 --> 00:11:00,720
And I think overall, it just shows a real investment in one of our favorite file systems.

183
00:11:00,720 --> 00:11:04,920
Linode.com slash LAN, go there to get $100 in 60 day credit on a new account.

184
00:11:04,920 --> 00:11:06,880
And of course, you're going there to support the show.

185
00:11:06,880 --> 00:11:09,920
So it's Linode.com slash LAN.

186
00:11:09,920 --> 00:11:12,360
Linode is the Linux geeks cloud.

187
00:11:12,360 --> 00:11:13,360
It's so great.

188
00:11:13,360 --> 00:11:14,360
We host everything there.

189
00:11:14,360 --> 00:11:19,000
We have 11 data centers worldwide, and they've been hard at work for 18 years to build the

190
00:11:19,000 --> 00:11:24,200
best service possible to just make it great to run your application on Linux.

191
00:11:24,200 --> 00:11:28,000
And they obviously have really good performance or else we wouldn't host everything we've

192
00:11:28,000 --> 00:11:29,760
built for the last couple of years there.

193
00:11:29,760 --> 00:11:33,000
I'm a performance hound.

194
00:11:33,000 --> 00:11:37,600
Only I'm sniffing out performance, you know, like Levi sniffs out treats, I sniff out performance.

195
00:11:37,600 --> 00:11:39,240
And Linode definitely checks that box.

196
00:11:39,240 --> 00:11:44,800
In fact, I have been really impressed with how much I can even load on the $5 a month

197
00:11:44,800 --> 00:11:45,800
Linode.

198
00:11:45,800 --> 00:11:52,080
I have I originally set up a Linode to do sync thing between the studio and the RV.

199
00:11:52,080 --> 00:11:55,380
So that way I had like an intermediary box that could like kind of cash stuff and then

200
00:11:55,380 --> 00:11:58,520
really blast it down to the RV when I get a connection.

201
00:11:58,520 --> 00:12:00,460
And Linode has super fast network connection.

202
00:12:00,460 --> 00:12:02,800
So that's absolutely solid.

203
00:12:02,800 --> 00:12:06,880
But then as time has gone on, I've done things like I've also used this now as a jump host.

204
00:12:06,880 --> 00:12:08,360
I also use it now.

205
00:12:08,360 --> 00:12:12,480
I just set this up over the weekend to set up a Starbound server so I could play Starbound

206
00:12:12,480 --> 00:12:14,160
with the kids on our own server.

207
00:12:14,160 --> 00:12:18,060
And it's so great for that kind of stuff because I already had Docker all set up because that

208
00:12:18,060 --> 00:12:19,820
just takes seconds to get going.

209
00:12:19,820 --> 00:12:24,040
They have one click deployments for all kinds of game servers or productivity services or

210
00:12:24,040 --> 00:12:26,680
development servers that you might want to use.

211
00:12:26,680 --> 00:12:29,640
And they have the best customer support in the business.

212
00:12:29,640 --> 00:12:31,960
So if you ever run into any problems, they can help you.

213
00:12:31,960 --> 00:12:34,900
And then on top of that, if you'd just like to do it yourself, they got a ton of great

214
00:12:34,900 --> 00:12:39,240
guides so you can stand up the system on your own and follow a guide if you ever get stuck.

215
00:12:39,240 --> 00:12:42,720
They've been rolling out blazing fast new MVME based block storage.

216
00:12:42,720 --> 00:12:48,360
They have a super flexible S3 compatible object storage and the easy to use dashboard brings

217
00:12:48,360 --> 00:12:49,360
it all together.

218
00:12:49,360 --> 00:12:52,560
So not only do I have confidence that I'm going to figure out anything that I want to

219
00:12:52,560 --> 00:12:57,460
do in there, literally everyone on the JB team also knows how to use that dashboard.

220
00:12:57,460 --> 00:12:59,780
It's intuitive and it's accessible.

221
00:12:59,780 --> 00:13:03,540
But then one of the things that I found that I have used on a more day to day basis is

222
00:13:03,540 --> 00:13:04,680
their API.

223
00:13:04,680 --> 00:13:10,560
As time goes on, I probably in totality do more via the API than I actually do via their

224
00:13:10,560 --> 00:13:11,560
dashboard.

225
00:13:11,560 --> 00:13:12,560
It's really great.

226
00:13:12,560 --> 00:13:15,560
So I know I could say that I can go on about it and tell you how great it is and how we

227
00:13:15,560 --> 00:13:16,960
use it and whatnot.

228
00:13:16,960 --> 00:13:19,620
But I think the best thing to do is try it yourself.

229
00:13:19,620 --> 00:13:21,200
And that's why they're giving you $100.

230
00:13:21,200 --> 00:13:23,100
You can actually really try it.

231
00:13:23,100 --> 00:13:25,840
So head over to linode.com slash LAN.

232
00:13:25,840 --> 00:13:33,200
Go grab that $100 in credit and support the show linode.com slash LAN.

233
00:13:33,200 --> 00:13:38,880
And thank you to Ting for making Linux action news possible, linux.ting.com.

234
00:13:38,880 --> 00:13:42,920
If you're sick of overpaying for self service, and you should be, go see how much you can

235
00:13:42,920 --> 00:13:47,440
save and then take 25 bucks off that at linux.ting.com.

236
00:13:47,440 --> 00:13:48,640
Here's the secret sauce.

237
00:13:48,640 --> 00:13:49,800
Ting is an MVNO.

238
00:13:49,800 --> 00:13:52,020
They're a mobile virtual network operator.

239
00:13:52,020 --> 00:13:56,240
That means that Ting invests in areas like customer service, great rates, competitive

240
00:13:56,240 --> 00:14:00,160
plans and not digging holes in the ground to stand up towers.

241
00:14:00,160 --> 00:14:02,580
But they get to run on those towers.

242
00:14:02,580 --> 00:14:06,680
So they can offer nationwide coverage and a great mix of plans and fast data rates at

243
00:14:06,680 --> 00:14:10,440
both LTE and 5G for prices that are going to blow your mind.

244
00:14:10,440 --> 00:14:14,880
And then they back that up with fantastic customer service and the best dashboard in

245
00:14:14,880 --> 00:14:15,880
the industry.

246
00:14:15,880 --> 00:14:19,640
I'm big on that stuff, because honestly, sometimes I just don't have the energy to call customer

247
00:14:19,640 --> 00:14:20,640
support.

248
00:14:20,640 --> 00:14:22,400
I don't know what it is about me.

249
00:14:22,400 --> 00:14:23,520
Maybe I'm just not a big phone person.

250
00:14:23,520 --> 00:14:24,960
I think that's probably it.

251
00:14:24,960 --> 00:14:27,320
So I don't like calling in customer support.

252
00:14:27,320 --> 00:14:30,840
And that, by the way, is also why Ting has worked so good for me.

253
00:14:30,840 --> 00:14:34,800
I have been a customer since 2013, and I don't like making calls.

254
00:14:34,800 --> 00:14:37,960
So I picked plans that optimize for that.

255
00:14:37,960 --> 00:14:41,160
But if you are the opposite, if you're like making phone calls all the time or doing a

256
00:14:41,160 --> 00:14:45,680
lot of text, they have lots of plans, lots of ways to get unlimited calls and texts.

257
00:14:45,680 --> 00:14:48,080
So it's really just what works well for you.

258
00:14:48,080 --> 00:14:49,080
Maybe you need a lot of data.

259
00:14:49,080 --> 00:14:50,880
They got plans for that as well.

260
00:14:50,880 --> 00:14:53,160
And it's so simple to switch to Ting.

261
00:14:53,160 --> 00:14:56,560
Pretty much any phone will work because of their multi network support.

262
00:14:56,560 --> 00:14:59,200
So just go over to linux.ting.com.

263
00:14:59,200 --> 00:15:02,740
Check out your current phone, create an account and pick the plan that's right for you.

264
00:15:02,740 --> 00:15:05,000
When everything lines up, Ting will send you a SIM card.

265
00:15:05,000 --> 00:15:08,560
You pop that sucker into your phone once you get it, and you're going to be active in minutes

266
00:15:08,560 --> 00:15:09,560
on the Ting network.

267
00:15:09,560 --> 00:15:14,680
Cutting your phone bill in half has never been easier with Ting's brand new plans and

268
00:15:14,680 --> 00:15:15,800
brand new prices.

269
00:15:15,800 --> 00:15:26,440
Go see how much you could save and then take 25 bucks off that linux.ting.com.

270
00:15:26,440 --> 00:15:29,520
Have you pre-ordered a Steam Deck, brace yourself.

271
00:15:29,520 --> 00:15:32,080
We have some less than stellar news.

272
00:15:32,080 --> 00:15:36,720
Valve has pushed the release back to February 2022.

273
00:15:36,720 --> 00:15:41,120
A couple of days ago, Valve sent out an email to pre-order customers informing them that

274
00:15:41,120 --> 00:15:44,680
the Steam Deck release was going to be delayed by two months.

275
00:15:44,680 --> 00:15:45,680
All right.

276
00:15:45,680 --> 00:15:46,680
Okay.

277
00:15:46,680 --> 00:15:49,560
Yeah, Valve says in their shipping update, we're sorry about this.

278
00:15:49,560 --> 00:15:53,420
We did our best to work around the global supply chain issues.

279
00:15:53,420 --> 00:15:57,840
But due to material shortages, components aren't reaching our manufacturing facilities

280
00:15:57,840 --> 00:16:00,800
in time for us to meet initial launch dates.

281
00:16:00,800 --> 00:16:05,260
They do note that all reservation holders will keep their place in line, but dates will

282
00:16:05,260 --> 00:16:06,260
shift back accordingly.

283
00:16:06,260 --> 00:16:10,940
You know, Michael Larbell over at Fronix actually kind of points out a sort of decent silver

284
00:16:10,940 --> 00:16:13,120
lining to this news, though.

285
00:16:13,120 --> 00:16:18,920
Like he says, this two extra months will allow Valve more time to optimize their Linux stack,

286
00:16:18,920 --> 00:16:23,040
optimize Proton, continue work on the RADV Vulkan driver, as well as the other components

287
00:16:23,040 --> 00:16:24,040
that make up SteamOS.

288
00:16:24,040 --> 00:16:29,960
It may also give some game developers a little extra time to get their stuff ready as well.

289
00:16:29,960 --> 00:16:34,560
And speaking of, we did get some new details about the Steam Deck and its Arch-powered

290
00:16:34,560 --> 00:16:37,400
operating system from the Deck developers directly.

291
00:16:37,400 --> 00:16:38,520
Yeah, we did.

292
00:16:38,520 --> 00:16:43,200
On Friday, Valve hosted the Steam Deck Development Livestream, really targeted at developers

293
00:16:43,200 --> 00:16:45,200
who are porting games over to the Deck.

294
00:16:45,200 --> 00:16:48,480
And it's pretty informative, so we'll have a link to the full stream in the show notes.

295
00:16:48,480 --> 00:16:50,960
Along with learning that SteamOS will use Pipewire.

296
00:16:50,960 --> 00:16:53,280
I mean, hey, how could they not?

297
00:16:53,280 --> 00:16:57,720
Valve shared that SteamOS 3 would be made available to the general public in the near

298
00:16:57,720 --> 00:16:58,720
future.

299
00:16:58,720 --> 00:17:03,080
So do you plan to release SteamOS as a standalone, general purpose OS?

300
00:17:03,080 --> 00:17:07,800
Yeah, we definitely plan on releasing SteamOS as a separate operating system.

301
00:17:07,800 --> 00:17:09,120
We don't have exact timing on that.

302
00:17:09,120 --> 00:17:11,400
Again, it's really kind of the same answer as Big Picture.

303
00:17:11,400 --> 00:17:15,600
We're really focused on making sure that Steam Deck is a great experience.

304
00:17:15,600 --> 00:17:17,780
But we hope to release it to other platforms soon.

305
00:17:17,780 --> 00:17:22,520
Like Fedora Silverblue and others, it seems SteamOS will have a read-only system partition

306
00:17:22,520 --> 00:17:28,240
and utilize OS tree-like updates for safe and reversible system upgrades.

307
00:17:28,240 --> 00:17:31,840
Will SteamOS have a read-only, immutable OS file system?

308
00:17:31,840 --> 00:17:32,840
Yes.

309
00:17:32,840 --> 00:17:38,960
So by default, the updates, the OS updates will be distributed as a whole OS image.

310
00:17:38,960 --> 00:17:42,760
But you can enter a developer mode, which will let you modify the file system and install

311
00:17:42,760 --> 00:17:45,000
packages like a normal distribution.

312
00:17:45,000 --> 00:17:50,480
That could make SteamOS a compelling Arch desktop, even outside of the Deck.

313
00:17:50,480 --> 00:17:53,920
And definitely something we'll be digging into in the future.

314
00:17:53,920 --> 00:17:58,340
Even with this file system design, Valve said you will be able to load third-party apps

315
00:17:58,340 --> 00:18:00,000
like any other Linux PC.

316
00:18:00,000 --> 00:18:04,720
Yeah, so you can totally install any game like you would on the Steam desktop.

317
00:18:04,720 --> 00:18:09,020
You install the application and then add it to Steam and it'll show up just like it would

318
00:18:09,020 --> 00:18:10,400
on a regular PC.

319
00:18:10,400 --> 00:18:15,720
So this stream focused on developers actually gave us the first real nuanced explanation

320
00:18:15,720 --> 00:18:20,860
of some of the compatibility issues developers can expect when bringing their Windows game

321
00:18:20,860 --> 00:18:23,320
over to Linux utilizing Proton.

322
00:18:23,320 --> 00:18:27,600
It's pretty common for a new title to work perfectly out of the box without any work

323
00:18:27,600 --> 00:18:29,580
needed on the developer's part.

324
00:18:29,580 --> 00:18:33,880
That being said, the overall surface area is quite big and there's no shortage of gaps

325
00:18:33,880 --> 00:18:35,400
left to cover.

326
00:18:35,400 --> 00:18:39,180
Running into Proton coverage issues could mean a delay before a newly released title

327
00:18:39,180 --> 00:18:40,920
can be enjoyed on Deck.

328
00:18:40,920 --> 00:18:45,520
Here's some general tips on technology choices that might help avoid those gaps.

329
00:18:45,520 --> 00:18:51,200
We understand those are only likely to be useful for a project in early stages of planning.

330
00:18:51,200 --> 00:18:55,480
A good rule of thumb is that there is more room for error in Proton when the game uses

331
00:18:55,480 --> 00:19:00,680
massive external libraries, as opposed to code that it includes in its own build.

332
00:19:00,680 --> 00:19:05,740
For example, a built-in browser engine like the Chromium Embedded Framework is less likely

333
00:19:05,740 --> 00:19:08,320
to have issues than MSHTML.

334
00:19:08,320 --> 00:19:12,600
In general, we don't recommend launcher Windows, but if you have one, a library such

335
00:19:12,600 --> 00:19:17,680
as Qt is trivial to support, unlike something like.NET WPF.

336
00:19:17,680 --> 00:19:23,040
For video playback, libvpx or bink are better alternatives than Media Foundation.

337
00:19:23,040 --> 00:19:28,040
Complex or invasive anti-temper or anti-cheat frameworks can be hard or even impossible

338
00:19:28,040 --> 00:19:32,240
to support properly without direct involvement from their provider.

339
00:19:32,240 --> 00:19:35,960
Another thing that can be a huge help is for our team to be able to test and debug the

340
00:19:35,960 --> 00:19:37,220
game pre-release.

341
00:19:37,220 --> 00:19:43,440
We also got our first in-depth explanation on Valve's view of native Linux games versus

342
00:19:43,440 --> 00:19:45,120
just targeting Proton.

343
00:19:45,120 --> 00:19:50,580
On the graphics side, the latest APIs like DX11 and 12 are supported through purpose-built

344
00:19:50,580 --> 00:19:52,460
drivers based on Vulkan.

345
00:19:52,460 --> 00:19:56,720
If there is a choice between the two APIs, things are now at a point where DX12 through

346
00:19:56,720 --> 00:20:01,100
Proton tends to be a better experience in cases where it's also a better experience

347
00:20:01,100 --> 00:20:02,460
on Windows.

348
00:20:02,460 --> 00:20:08,460
Unlike DX12, DX11 translation is heavily reliant on dynamic shader recompilation, which can

349
00:20:08,460 --> 00:20:09,700
induce stutter.

350
00:20:09,700 --> 00:20:15,240
To address this, we have developed a robust shader precaching system as part of Steam.

351
00:20:15,240 --> 00:20:19,260
It lets all the needed permutations be processed before the game starts.

352
00:20:19,260 --> 00:20:23,320
This system is currently being improved for the deck so that the processing is done on

353
00:20:23,320 --> 00:20:26,860
our servers ahead of time, as opposed to the user's machine.

354
00:20:26,860 --> 00:20:32,920
For Proton as a whole, graphics API translation also tends to be the main source of significant

355
00:20:32,920 --> 00:20:34,080
CPU overhead.

356
00:20:34,080 --> 00:20:39,220
This has been a bit of a discussion like on Linux Unplugged, but it seems genuinely the

357
00:20:39,220 --> 00:20:45,320
Valve folks don't have a particular dog in this hunt beyond just looking for the least

358
00:20:45,320 --> 00:20:48,580
friction possible for game developers.

359
00:20:48,580 --> 00:20:52,480
And you get the impression they've seen some really half-assed Vulkan ports in their time.

360
00:20:52,480 --> 00:20:55,980
And so you get a general message from the stream, and that is, if you're going to go

361
00:20:55,980 --> 00:20:59,460
Vulkan for your Linux port, you really need to go all-in.

362
00:20:59,460 --> 00:21:04,260
That the biggest opportunity to improve Proton performance is to target Vulkan directly.

363
00:21:04,260 --> 00:21:08,900
It's no small task, and as such, we only recommend it in cases where it would make sense to also

364
00:21:08,900 --> 00:21:12,100
focus on Vulkan as your primary API for Windows.

365
00:21:12,100 --> 00:21:16,380
I think the most positive thing I took away from this Valve event was that every Linux

366
00:21:16,380 --> 00:21:21,860
gamer's gaming experience is about to be changed forever, even if you never own a deck.

367
00:21:21,860 --> 00:21:25,380
The very first one has to do with Proton testing, and people are wondering if it's going to

368
00:21:25,380 --> 00:21:27,740
be part of the game submission process moving forward.

369
00:21:27,740 --> 00:21:33,660
Yes, actually, we're going to wrap that up into the deck-verified testing that happens

370
00:21:33,660 --> 00:21:37,700
before game release, which will give us a pretty good opportunity to uncover some of

371
00:21:37,700 --> 00:21:40,980
these Proton issues before the game makes its way to users.

372
00:21:40,980 --> 00:21:41,980
That's huge.

373
00:21:41,980 --> 00:21:46,900
Valve will work with game developers before they've released their game to make sure it

374
00:21:46,900 --> 00:21:48,340
works with Proton.

375
00:21:48,340 --> 00:21:52,980
Not every developer will take them up on that offer, but it does mean a lot more games are

376
00:21:52,980 --> 00:22:00,420
going to run on Linux on day one, and that's a huge improvement for everyone using Linux,

377
00:22:00,420 --> 00:22:02,220
deck or no deck.

378
00:22:02,220 --> 00:22:05,940
It's great to see that, and we'll follow these developments and everything else in the world

379
00:22:05,940 --> 00:22:10,580
of Linux and open source, so be sure you go to linuxactionnews.com slash subscribe for

380
00:22:10,580 --> 00:22:12,460
all the ways to get new episodes.

381
00:22:12,460 --> 00:22:16,740
And linuxactionnews.com slash contact for ways to get in touch.

382
00:22:16,740 --> 00:22:21,700
Swag bags are back, and now a new swag bag with the Jupiter Broadcasting Journal.

383
00:22:21,700 --> 00:22:23,220
That's the J.B. Journal.

384
00:22:23,220 --> 00:22:25,660
Go check it out at JupiterGarage.com.

385
00:22:25,660 --> 00:22:30,780
We'll be back next Monday with our weekly take on the latest Linux and open source news.

386
00:22:30,780 --> 00:22:51,820
Thanks for joining us, and that's all the news for this week.

