1
00:00:00,000 --> 00:00:16,020
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

2
00:00:16,020 --> 00:00:20,400
This is episode 63, recorded on July 22nd, 2018.

3
00:00:20,400 --> 00:00:21,400
I'm Chris.

4
00:00:21,400 --> 00:00:22,400
And I'm Joe.

5
00:00:22,400 --> 00:00:23,400
Hello, Joe.

6
00:00:23,400 --> 00:00:30,560
I'm so excited to be connected with you, and I am elated to announce that Reaper 5.93 is

7
00:00:30,560 --> 00:00:32,400
now available for Linux.

8
00:00:32,400 --> 00:00:33,400
What, what, what?

9
00:00:33,400 --> 00:00:34,880
Wait, let's stop here for a second.

10
00:00:34,880 --> 00:00:35,880
What's Reaper?

11
00:00:35,880 --> 00:00:41,560
Reaper is a proprietary piece of audio software that you and Noah absolutely love, and I won't

12
00:00:41,560 --> 00:00:45,880
touch with the barge pole because up to now it's been some dodgy binary downloaded from

13
00:00:45,880 --> 00:00:46,880
a website somewhere.

14
00:00:46,880 --> 00:00:48,840
Well, tell people how you really feel, Joe.

15
00:00:48,840 --> 00:00:50,280
Yeah, that's exactly it.

16
00:00:50,280 --> 00:00:54,920
Actually, in fact, I don't talk a lot about it because I felt like it could go away at

17
00:00:54,920 --> 00:00:59,760
any moment, and so I didn't want to get people's hopes up, but Reaper is proprietary.

18
00:00:59,760 --> 00:01:01,520
Let's make sure that's totally clear.

19
00:01:01,520 --> 00:01:02,520
Joe just mentioned it.

20
00:01:02,520 --> 00:01:06,640
It is proprietary, and there are free software solutions like Ardour.

21
00:01:06,640 --> 00:01:11,000
It's a DAO or a digital audio workstation or a DAW, however people might pronounce that,

22
00:01:11,000 --> 00:01:13,500
and it's a full featured one at that.

23
00:01:13,500 --> 00:01:18,360
Reaper is really enterprise grade, and we've been using it at Jupiter Broadcasting since

24
00:01:18,360 --> 00:01:23,360
January, and I think Noah's been using it for about a year-ish, more than that, and

25
00:01:23,360 --> 00:01:24,600
I switched everything over.

26
00:01:24,600 --> 00:01:28,840
When I edit a show and I record a show, it's all done on Reaper under Linux now, and it

27
00:01:28,840 --> 00:01:33,460
was one of the last components that let me go 100% Linux.

28
00:01:33,460 --> 00:01:38,180
Every show produced in the studio is recorded and has been recorded since January at least

29
00:01:38,180 --> 00:01:43,600
with Reaper, but today they're making the Linux build officially available.

30
00:01:43,600 --> 00:01:48,240
Now it does require GTK 3, although if you want to hack on it a bit, you actually can't

31
00:01:48,240 --> 00:01:49,840
make it work with GTK 2.

32
00:01:49,840 --> 00:01:55,360
I don't know why you would want to, but you can, and you need to either be on a 64-bit

33
00:01:55,360 --> 00:02:02,880
x86 platform or an ARM 7 platform like a Raspberry Pi, which is pretty cool because I have definitely

34
00:02:02,880 --> 00:02:10,400
been considering building a Raspberry Pi 3-based backup recorder using Reaper because why not?

35
00:02:10,400 --> 00:02:13,400
So the Linux build is still considered experimental.

36
00:02:13,400 --> 00:02:18,480
It works with also jack and pulse audio, as well as one of Reaper's great features, dummy

37
00:02:18,480 --> 00:02:21,640
audio interfaces where you can loop audio around.

38
00:02:21,640 --> 00:02:27,240
It also has an open control surface API that has a ton of user-developed extensions that

39
00:02:27,240 --> 00:02:31,240
are available to control different surfaces or initiate remote recordings and all those

40
00:02:31,240 --> 00:02:35,080
kinds of things, and it's a full-featured multi-track recorder.

41
00:02:35,080 --> 00:02:41,600
In the Jupiter Broadcasting Studio, I have a Behringer X32 mixer, 32 channels plus 32

42
00:02:41,600 --> 00:02:42,600
inputs.

43
00:02:42,600 --> 00:02:48,880
This is a big mixer, and it all connects into a Reaper workstation running Kubuntu 18.04,

44
00:02:48,880 --> 00:02:52,720
and Reaper is able to actualize every one of those channels.

45
00:02:52,720 --> 00:02:55,160
I can record each channel independently.

46
00:02:55,160 --> 00:02:58,440
I can apply different effects, and if you have more than a two-core processor, you can

47
00:02:58,440 --> 00:03:01,480
do some really great mixing in Reaper in real time.

48
00:03:01,480 --> 00:03:04,800
I mean, this is some serious enterprise-grade software here.

49
00:03:04,800 --> 00:03:09,080
I've been using it to produce shows for seven months, like this one right now is being recorded

50
00:03:09,080 --> 00:03:13,360
my end on Reaper through my mixer on Linux.

51
00:03:13,360 --> 00:03:16,860
This is a big deal that they've been working on for a while that before we weren't really

52
00:03:16,860 --> 00:03:18,300
supposed to be talking about.

53
00:03:18,300 --> 00:03:22,440
They didn't really want to tell anybody that you could do this, and now they're making

54
00:03:22,440 --> 00:03:23,480
it official.

55
00:03:23,480 --> 00:03:28,020
And the big thing is it's dang near feature parity with the Mac and Windows versions.

56
00:03:28,020 --> 00:03:30,080
It's just dang, it's like perfect, Joe.

57
00:03:30,080 --> 00:03:31,440
It's perfect.

58
00:03:31,440 --> 00:03:32,680
I'm kind of excited.

59
00:03:32,680 --> 00:03:34,720
So what makes this different from Ardour then?

60
00:03:34,720 --> 00:03:39,320
Why would you choose a proprietary solution over a free software one like Ardour, which

61
00:03:39,320 --> 00:03:43,240
I understand is pretty much feature complete and could do all of the stuff that you've

62
00:03:43,240 --> 00:03:44,240
just said?

63
00:03:44,240 --> 00:03:45,240
Yeah.

64
00:03:45,240 --> 00:03:49,660
And if I was making music, I definitely would be skewed towards Ardour, 100%.

65
00:03:49,660 --> 00:03:54,520
But I'm recording vocals and audio, and I'm trying to split things out onto multiple tracks

66
00:03:54,520 --> 00:03:55,740
in real time.

67
00:03:55,740 --> 00:03:59,640
And then I want to export out individual tracks into FLAC files, and I want to have a whole

68
00:03:59,640 --> 00:04:01,880
open source workflow.

69
00:04:01,880 --> 00:04:04,480
Ironically, Reaper gives me that.

70
00:04:04,480 --> 00:04:09,720
When it records in real time, it's always recording to a WAV file that I can grab at

71
00:04:09,720 --> 00:04:12,600
any point, even if the recorder crashes.

72
00:04:12,600 --> 00:04:13,600
So it's architected.

73
00:04:13,600 --> 00:04:18,800
The recording mechanism is architected in a way that is conducive to podcast production.

74
00:04:18,800 --> 00:04:20,760
With music, you're sitting there, you're recording a program.

75
00:04:20,760 --> 00:04:25,160
Yeah, man, it sucks if your program crashes, but you can pick back up and you can keep

76
00:04:25,160 --> 00:04:26,160
playing.

77
00:04:26,160 --> 00:04:31,280
But with a production like this, if our programs were to crash and we were to lose our entire

78
00:04:31,280 --> 00:04:34,960
conversation, you and I would seriously be like, ah, maybe we should just call it this

79
00:04:34,960 --> 00:04:35,960
week.

80
00:04:35,960 --> 00:04:38,920
And then we would sit there and grouse for a bit, and we would load it back up, and we

81
00:04:38,920 --> 00:04:41,680
would have to rerecord the whole episode.

82
00:04:41,680 --> 00:04:47,040
But with the way that Reaper is architected, it's saving to your hard drive in real time.

83
00:04:47,040 --> 00:04:49,600
And you can go in there and say, you know what I want you to do, Reaper?

84
00:04:49,600 --> 00:04:54,480
I want you to save to multiple hard drives at the same time, because I want to have redundancy

85
00:04:54,480 --> 00:04:56,960
with these recordings, which I love.

86
00:04:56,960 --> 00:05:02,600
So I can record to an SSD and a RAID in this rig that I have for Reaper, and it gives me

87
00:05:02,600 --> 00:05:06,820
that peace of mind that if this application were to ever lock up and crash on me, I've

88
00:05:06,820 --> 00:05:09,440
got two separate real time backups.

89
00:05:09,440 --> 00:05:14,080
But I'll mention this, just speaking of stability, this instance of Reaper has been running on

90
00:05:14,080 --> 00:05:18,600
this Kubuntu 1804 machine for 60 days without issue.

91
00:05:18,600 --> 00:05:21,440
I have not even closed the application in 60 days.

92
00:05:21,440 --> 00:05:25,240
I close the project, I create a new one, and I record, in part because I have been on the

93
00:05:25,240 --> 00:05:28,840
road for almost two months, remoting into these systems.

94
00:05:28,840 --> 00:05:32,800
They have to be absolutely rock solid reliable, because when I'm on the road, I can't really

95
00:05:32,800 --> 00:05:34,280
troubleshoot these things.

96
00:05:34,280 --> 00:05:36,560
And Reaper has been so solid.

97
00:05:36,560 --> 00:05:40,960
So while Ardour is great, and it's open, and I've actually contributed to Ardour before,

98
00:05:40,960 --> 00:05:45,560
and I may again, this is perfect for recording vocals, recording podcasts.

99
00:05:45,560 --> 00:05:49,960
And what gets me super excited, and the reason why I'm really kind of, I've just been bursting

100
00:05:49,960 --> 00:05:54,360
at the seams to talk about Reaper, is because I feel like it can move the needle on podcast

101
00:05:54,360 --> 00:05:56,280
production on Linux.

102
00:05:56,280 --> 00:06:00,680
This software makes Linux a great podcast production platform.

103
00:06:00,680 --> 00:06:02,740
Yeah, but it's proprietary, so I don't care.

104
00:06:02,740 --> 00:06:03,740
So let's move on.

105
00:06:03,740 --> 00:06:06,680
Let's talk about Atari and their VCS.

106
00:06:06,680 --> 00:06:12,800
They posted an update and an FAQ this week, which I think on LUP you felt quite positive

107
00:06:12,800 --> 00:06:15,440
about, but I don't, I'm afraid.

108
00:06:15,440 --> 00:06:17,000
I'm curious why you're concerned.

109
00:06:17,000 --> 00:06:21,520
So yeah, Atari, over on their Medium page, has posted an update saying they're going

110
00:06:21,520 --> 00:06:25,880
with the AMD Bristol Ridge family of APUs, and they talk about the thermal reasons and

111
00:06:25,880 --> 00:06:28,820
the performance gains and losses for that.

112
00:06:28,820 --> 00:06:32,820
They talk about building the different hardware and the UI elements, and building out their

113
00:06:32,820 --> 00:06:36,840
Atari store, and creating technical requirements for submitting apps.

114
00:06:36,840 --> 00:06:38,320
This all looks pretty positive.

115
00:06:38,320 --> 00:06:44,480
We've gotten details on Atari OS, which is a customized version of the Linux kernel that

116
00:06:44,480 --> 00:06:50,200
they're calling Atari OS, and even some details on how you can load your own OS inside a hypervisor

117
00:06:50,200 --> 00:06:54,260
that gives you full access to the GPU and disk and things like that.

118
00:06:54,260 --> 00:06:57,920
So if you want to just load straight, standard Linux on this thing, you're going to be able

119
00:06:57,920 --> 00:06:58,920
to.

120
00:06:58,920 --> 00:07:02,520
I read this whole thing, checking off all the boxes for me, Joe, perfectly happy with

121
00:07:02,520 --> 00:07:06,040
the multiple hundreds of dollars I've now committed to my crowd funder.

122
00:07:06,040 --> 00:07:07,040
I'm not concerned at all.

123
00:07:07,040 --> 00:07:09,040
No, no, Joe, I'm not nervous.

124
00:07:09,040 --> 00:07:10,040
Okay.

125
00:07:10,040 --> 00:07:14,880
Well, eight gigabytes of RAM, up from the four that they originally said, that's got

126
00:07:14,880 --> 00:07:16,640
to be a good thing.

127
00:07:16,640 --> 00:07:20,640
However, it's not the hardware that I have a problem with, it's this software situation.

128
00:07:20,640 --> 00:07:26,560
The fact that they are running their own hypervisor, they're writing their own hypervisor here,

129
00:07:26,560 --> 00:07:28,600
which is a custom version of Linux.

130
00:07:28,600 --> 00:07:32,920
If you want to boot your own version of Linux on the machine, then it's not going to have

131
00:07:32,920 --> 00:07:34,160
full hardware access.

132
00:07:34,160 --> 00:07:38,000
Okay, the hypervisor is going to give it pass through to the GPU and all the rest of it,

133
00:07:38,000 --> 00:07:43,240
but you're not going to be able to completely put your own operating system on this thing,

134
00:07:43,240 --> 00:07:48,720
which means that when their support dries up, when the company goes bust, you're not

135
00:07:48,720 --> 00:07:52,520
going to get any security updates for that hypervisor bit, which is crucially important.

136
00:07:52,520 --> 00:07:56,920
Well, I would completely agree with you, Joe, except for I don't believe anything they wrote

137
00:07:56,920 --> 00:07:57,920
there.

138
00:07:57,920 --> 00:08:02,880
When I read Atari OS Virtualizer, I quite literally translated that in my brain as KVM.

139
00:08:02,880 --> 00:08:06,200
I would expect it just to be standard KVM virtual machines.

140
00:08:06,200 --> 00:08:08,920
Nobody would be stupid enough to write their own, right?

141
00:08:08,920 --> 00:08:13,920
I would think so, especially when it's kind of an Ubuntu derivative to begin with, which

142
00:08:13,920 --> 00:08:17,120
comes with that and you're using a modern kernel.

143
00:08:17,120 --> 00:08:20,760
It would literally be lunacy to try to recreate your own hypervisor.

144
00:08:20,760 --> 00:08:22,160
KVM is fantastic.

145
00:08:22,160 --> 00:08:23,160
It's really good.

146
00:08:23,160 --> 00:08:26,120
So you would be nuts not to use that.

147
00:08:26,120 --> 00:08:29,920
But they talk about the process of being in secure mode and stuff like that, which makes

148
00:08:29,920 --> 00:08:35,680
me think that maybe it's going to have a secure boot that you can't turn off and it won't

149
00:08:35,680 --> 00:08:40,780
boot anything apart from the implementation of this hypervisor, which you potentially

150
00:08:40,780 --> 00:08:42,720
can't change.

151
00:08:42,720 --> 00:08:45,040
It's still not exactly clear, is it?

152
00:08:45,040 --> 00:08:50,320
There's almost more questions raised by this Q&A, FAQ, whatever you want to call it, than

153
00:08:50,320 --> 00:08:51,320
are answered.

154
00:08:51,320 --> 00:08:52,320
Right.

155
00:08:52,320 --> 00:08:55,120
And to your earlier point about long term, like if this doesn't work out, what happens

156
00:08:55,120 --> 00:08:57,520
to the hardware, this is the point of concern.

157
00:08:57,520 --> 00:08:59,160
I think you've identified it here.

158
00:08:59,160 --> 00:09:00,160
And I'll say this.

159
00:09:00,160 --> 00:09:05,240
It seems like what they're doing is they are creating their own signed boot system.

160
00:09:05,240 --> 00:09:09,720
And the way it will work is it will check the internal disk for a signed operating system,

161
00:09:09,720 --> 00:09:11,120
and it will load that.

162
00:09:11,120 --> 00:09:16,000
But before it checks the internal disk, it will check all of the USB subsystems to see

163
00:09:16,000 --> 00:09:20,880
if there is a device attached that has a loadable system.

164
00:09:20,880 --> 00:09:25,720
And in this FAQ, they say they're going to release example code based on standard upstream

165
00:09:25,720 --> 00:09:27,660
Ubuntu on how to do that.

166
00:09:27,660 --> 00:09:32,920
But you'll essentially have an external USB drive with a loadable Linux system on there

167
00:09:32,920 --> 00:09:35,080
that will be an open spec.

168
00:09:35,080 --> 00:09:40,160
And if it's detected at boot time, it'll boot that first before it even checks the internal

169
00:09:40,160 --> 00:09:43,160
disk on this Atari VCS.

170
00:09:43,160 --> 00:09:48,000
And they claim that when it boots that external drive, you'll have full access to the disk,

171
00:09:48,000 --> 00:09:52,880
the GPU, the network, that the virtualizer will pass it all through.

172
00:09:52,880 --> 00:09:53,880
That is legitimate.

173
00:09:53,880 --> 00:09:54,880
That is how it works.

174
00:09:54,880 --> 00:09:58,640
Because if you think about it, the kernel is the one that's doing the driver enumeration

175
00:09:58,640 --> 00:10:00,080
to the virtual operating system.

176
00:10:00,080 --> 00:10:01,400
Well, guess what?

177
00:10:01,400 --> 00:10:02,400
News.

178
00:10:02,400 --> 00:10:05,680
The kernel is also what's doing the enumeration to the actual host operating system.

179
00:10:05,680 --> 00:10:08,000
So it's the same job for the kernel either way.

180
00:10:08,000 --> 00:10:09,600
And it has the same plumbing either way.

181
00:10:09,600 --> 00:10:11,200
And so it is actually very performant.

182
00:10:11,200 --> 00:10:12,440
It works very well.

183
00:10:12,440 --> 00:10:13,680
So you will have a good experience.

184
00:10:13,680 --> 00:10:15,180
And on that, you could load Kodi.

185
00:10:15,180 --> 00:10:18,460
You could load Plex or VLC, whatever you want to watch.

186
00:10:18,460 --> 00:10:20,240
You could load that on that external experience.

187
00:10:20,240 --> 00:10:21,560
And it should be pretty good.

188
00:10:21,560 --> 00:10:25,160
But when you detach that drive, it then goes into this signed mode where it has to be a

189
00:10:25,160 --> 00:10:26,840
signed operating system.

190
00:10:26,840 --> 00:10:30,720
So that way, you can load up the quote unquote experience where you have the store, you can

191
00:10:30,720 --> 00:10:32,520
buy apps and that kind of stuff.

192
00:10:32,520 --> 00:10:35,960
Yeah, and by the time we've moved on to kernel six and seven, and this thing's still running

193
00:10:35,960 --> 00:10:39,000
kernel four dot something, that'll be fun, won't it?

194
00:10:39,000 --> 00:10:40,000
That's a good point.

195
00:10:40,000 --> 00:10:43,960
I mean, after they're done, after they get this thing out, assuming they managed to ship

196
00:10:43,960 --> 00:10:46,320
it, they're going to have to be good stewards of a platform.

197
00:10:46,320 --> 00:10:49,960
They're going to have to deliver updates in a consistent manner.

198
00:10:49,960 --> 00:10:53,820
And because they didn't base it off of something like SteamOS, because they are rolling their

199
00:10:53,820 --> 00:10:56,960
own OS, they will be responsible for that.

200
00:10:56,960 --> 00:11:00,920
And we just won't know how they do until it's shipped, because obviously, we just have to

201
00:11:00,920 --> 00:11:01,920
wait and see.

202
00:11:01,920 --> 00:11:03,120
But I hope they can nail it.

203
00:11:03,120 --> 00:11:08,520
If you think about it, because they didn't build some crazy, esoteric, ARM-based platform

204
00:11:08,520 --> 00:11:13,520
with some custom GPU, they should be able to do this.

205
00:11:13,520 --> 00:11:15,440
It's all upstream.

206
00:11:15,440 --> 00:11:21,040
So they just have to repackage all of the hard work the upstream developers have done

207
00:11:21,040 --> 00:11:26,960
in a consumer-friendly way and ship it over what I assume will be an HTTP connection to

208
00:11:26,960 --> 00:11:28,840
these Atari VCS boxes.

209
00:11:28,840 --> 00:11:31,960
It should technically be possible.

210
00:11:31,960 --> 00:11:32,960
I guess we'll wait and see.

211
00:11:32,960 --> 00:11:36,800
Well, let's hope it's HTTPS rather than HTTP, but yeah.

212
00:11:36,800 --> 00:11:39,960
I hope it's Telnet, Joe, and I want it to stay that way.

213
00:11:39,960 --> 00:11:42,280
Well, we'll see.

214
00:11:42,280 --> 00:11:46,260
I look forward to hearing about your adventures with it when it finally arrives.

215
00:11:46,260 --> 00:11:48,720
I will give you a full report when I get the machine.

216
00:11:48,720 --> 00:11:51,720
But in the meantime, let's talk about our mobiles.

217
00:11:51,720 --> 00:11:56,160
If there was one thing that could really be a game changer, it would be the Librem 5 being

218
00:11:56,160 --> 00:11:59,360
a success, and we've got a progress update from Purism.

219
00:11:59,360 --> 00:12:01,440
Yeah, which is kind of a mixed bag, really.

220
00:12:01,440 --> 00:12:07,400
They're making some good progress with the software, but it looks like the prototype

221
00:12:07,400 --> 00:12:13,300
hardware has slipped from their original predicted date, which means presumably the final delivery

222
00:12:13,300 --> 00:12:14,460
is going to slip.

223
00:12:14,460 --> 00:12:20,680
They were saying January or certainly early 2019 for the final product, but that's looking

224
00:12:20,680 --> 00:12:22,840
increasingly unlikely now, isn't it?

225
00:12:22,840 --> 00:12:24,840
I think we've got two things to talk about here.

226
00:12:24,840 --> 00:12:29,200
So first of all, yeah, the dev boards have missed their shipping window of June.

227
00:12:29,200 --> 00:12:33,720
It looks like maybe they've been punted a month or so as a few things get worked out.

228
00:12:33,720 --> 00:12:39,120
But one thing that is jumping out at me, and this is the second one, is there is an issue

229
00:12:39,120 --> 00:12:44,120
I see developing here that also plagued the Ubuntu mobile project.

230
00:12:44,120 --> 00:12:49,800
And that is that they're building everything around a different version of the system on

231
00:12:49,800 --> 00:12:53,180
a chip than what they hope will ship in the final phone.

232
00:12:53,180 --> 00:13:00,000
So right now they are working with iMX6 system on a chip images, but eventually they want

233
00:13:00,000 --> 00:13:06,360
to actually ship the iMX8 based development boards, which have some significant improvements.

234
00:13:06,360 --> 00:13:12,200
And they're hoping that they can build it around the iMX6 and then bring it up to date

235
00:13:12,200 --> 00:13:13,840
to work with the iMX8.

236
00:13:13,840 --> 00:13:19,880
But the issue as of right now is you have very basic main kernel support for the iMX8

237
00:13:19,880 --> 00:13:21,240
board.

238
00:13:21,240 --> 00:13:24,860
Early days, it's hard to get Linux fully running and what does work doesn't include the graphic

239
00:13:24,860 --> 00:13:26,640
stack and things like that.

240
00:13:26,640 --> 00:13:31,000
Now it could technically work out, but in the case of Ubuntu mobile, this turned out

241
00:13:31,000 --> 00:13:36,480
to be a very costly calculation before they shipped it on some hardware that ended up

242
00:13:36,480 --> 00:13:41,040
being not well received because of a lot of rough edges that didn't materialize until

243
00:13:41,040 --> 00:13:43,280
they were on a newer version of the system on a chip.

244
00:13:43,280 --> 00:13:45,640
Yeah, that is definitely a concern.

245
00:13:45,640 --> 00:13:51,680
But have you actually tried out the QEMU image that they have put out there for you to test?

246
00:13:51,680 --> 00:13:53,640
No, I did not try it out.

247
00:13:53,640 --> 00:13:54,640
Did you give it a go?

248
00:13:54,640 --> 00:13:55,640
I didn't realize they had.

249
00:13:55,640 --> 00:13:59,880
Yeah, it's one of the many, many links in this update on their blog.

250
00:13:59,880 --> 00:14:02,720
If you follow it, there's pretty clear instructions how to get it running.

251
00:14:02,720 --> 00:14:07,480
I used boxes because that's just such an easy GUI to use.

252
00:14:07,480 --> 00:14:12,040
And I tried it on a really old laptop first and it was just terrible.

253
00:14:12,040 --> 00:14:13,920
So I thought, okay, I better try it on a decent laptop.

254
00:14:13,920 --> 00:14:18,400
It turns out you need more than four gigabytes of RAM on your laptop to be able to actually

255
00:14:18,400 --> 00:14:19,400
run this.

256
00:14:19,400 --> 00:14:20,400
Oh boy.

257
00:14:20,400 --> 00:14:21,400
Yeah.

258
00:14:21,400 --> 00:14:25,320
So it means that I can't run it on my old test hardware to run it on some decent hardware,

259
00:14:25,320 --> 00:14:27,480
but it was all right.

260
00:14:27,480 --> 00:14:31,560
It wasn't perfectly smooth, but then you have to assume that that's kind of hardware acceleration

261
00:14:31,560 --> 00:14:32,800
issues and stuff like that.

262
00:14:32,800 --> 00:14:38,680
But you did get a glimpse at the UI and the UI is very minimal.

263
00:14:38,680 --> 00:14:39,880
It's hard to describe really.

264
00:14:39,880 --> 00:14:44,720
You've got just an arrow at the bottom that you click and then that brings up an overlay

265
00:14:44,720 --> 00:14:47,720
of shortcuts on the left-hand side.

266
00:14:47,720 --> 00:14:49,760
And there are not many of them to start with.

267
00:14:49,760 --> 00:14:54,880
There's a browser and a calendar and a terminal, which is good.

268
00:14:54,880 --> 00:14:58,880
Obviously the first thing I did, open the terminal, apt-get update, dist-upgrade, yeah,

269
00:14:58,880 --> 00:14:59,880
that's working fine.

270
00:14:59,880 --> 00:15:00,880
Install VLC.

271
00:15:00,880 --> 00:15:03,320
So it's a proper Linux box, which is what we expected.

272
00:15:03,320 --> 00:15:05,040
It's pure OS.

273
00:15:05,040 --> 00:15:09,800
But the problem is you've got this phone screen that's in portrait mode and none of the

274
00:15:09,800 --> 00:15:11,960
applications are optimized for it yet.

275
00:15:11,960 --> 00:15:15,600
You can only see a little bit of the screen before you're having to scroll sideways.

276
00:15:15,600 --> 00:15:21,120
And it's just very much a work in progress, which you'd kind of expect, but that's kind

277
00:15:21,120 --> 00:15:22,960
of a red flag as well, isn't it?

278
00:15:22,960 --> 00:15:26,920
At this stage, they should be a little bit further on now.

279
00:15:26,920 --> 00:15:32,560
It's not even six months until they're planning to ship these things if they want to hit their

280
00:15:32,560 --> 00:15:33,560
original date.

281
00:15:33,560 --> 00:15:37,760
Okay, maybe you might say eight or nine if they slip a little bit, but I would really

282
00:15:37,760 --> 00:15:41,600
have hoped to have seen it a little bit further along than this at this stage.

283
00:15:41,600 --> 00:15:44,080
The clock is definitely ticking and there's more work to be done.

284
00:15:44,080 --> 00:15:48,160
I mean, there is patches they're trying to submit upstream to support things like Redshift.

285
00:15:48,160 --> 00:15:51,080
They're trying to work with Epiphany to render better on the screen.

286
00:15:51,080 --> 00:15:55,960
But I think you bring up a good point is so many of these applications are optimized for

287
00:15:55,960 --> 00:16:02,600
a widescreen aspect ratio and the phone experience is predominantly portrait.

288
00:16:02,600 --> 00:16:06,160
This is going to be, I think, long-term their biggest source of pain.

289
00:16:06,160 --> 00:16:10,620
Once they get the basic OS going, once they get their Wayland client working, once they

290
00:16:10,620 --> 00:16:15,760
get their Gnome Shell working, they're going to have to solve this problem.

291
00:16:15,760 --> 00:16:21,800
And I just, I feel like that's the rabbit hole that never truly ends.

292
00:16:21,800 --> 00:16:26,720
I wish them the best, but that's where I almost have to ask myself, would you be happy with

293
00:16:26,720 --> 00:16:32,440
some basic applications, Telegram or messaging, phone calls, and then you can plug it into

294
00:16:32,440 --> 00:16:38,720
an HDMI port and you can just use those applications in their regular aspect ratio on a real computer?

295
00:16:38,720 --> 00:16:41,000
You know, that original convergent stream?

296
00:16:41,000 --> 00:16:42,640
I could make that work, Joe.

297
00:16:42,640 --> 00:16:43,640
I could live with that reality.

298
00:16:43,640 --> 00:16:50,840
Well, if I were them, high up my list of priorities would be making screen rotate work flawlessly.

299
00:16:50,840 --> 00:17:02,960
Dio.co.co action, get a $100 credit at DigitalOcean when you sign up with a new account, Dio.co.co

300
00:17:02,960 --> 00:17:03,960
action.

301
00:17:03,960 --> 00:17:04,960
That's the URL to go to.

302
00:17:04,960 --> 00:17:09,360
Now, you can deploy a pre-built application or maybe just like a stack, like go for the

303
00:17:09,360 --> 00:17:14,080
lamp stack, or maybe you want to mess around with MongoDB, Node.js or Docker.

304
00:17:14,080 --> 00:17:20,760
You can click one button and all of the essentials get deployed, like the base Linux machine

305
00:17:20,760 --> 00:17:25,400
and the appropriate software sources, the appropriate software installations.

306
00:17:25,400 --> 00:17:30,000
One of the best experiences I ever had on DigitalOcean was when I just deployed an Ubuntu

307
00:17:30,000 --> 00:17:35,640
LTS stack with Docker because I had recently just gone through the process of building

308
00:17:35,640 --> 00:17:36,640
that.

309
00:17:36,640 --> 00:17:41,000
And so I was able to go through and kind of check how they did it, and it was spot on,

310
00:17:41,000 --> 00:17:42,360
like perfectly done.

311
00:17:42,360 --> 00:17:44,560
And that's when I really got a sense that they know what they're doing.

312
00:17:44,560 --> 00:17:49,320
They work upstream with these individual projects to make sure that they're working within their

313
00:17:49,320 --> 00:17:50,320
expectations.

314
00:17:50,320 --> 00:17:51,320
And that's a big part.

315
00:17:51,320 --> 00:17:55,960
And that makes a big, big, big difference when you're deploying this software.

316
00:17:55,960 --> 00:17:57,920
They're working with the FreeBSD project.

317
00:17:57,920 --> 00:17:59,640
They're working with Canonical.

318
00:17:59,640 --> 00:18:01,280
They're working with the Docker project.

319
00:18:01,280 --> 00:18:02,800
They're working with the Ghost project.

320
00:18:02,800 --> 00:18:06,740
They're working with each individual project to make sure that what they're deploying is

321
00:18:06,740 --> 00:18:09,920
how the projects would expect it and matches documentation.

322
00:18:09,920 --> 00:18:10,920
It's brilliant.

323
00:18:10,920 --> 00:18:15,080
And when you sign up with a $100 credit, you can deploy a super big system.

324
00:18:15,080 --> 00:18:17,320
My favorite one is $0.03 an hour.

325
00:18:17,320 --> 00:18:21,660
My Nextcloud and my Mumble instance, all on $0.03 an hour.

326
00:18:21,660 --> 00:18:25,000
But you can get something as low as $5 a month.

327
00:18:25,000 --> 00:18:26,000
Could you imagine?

328
00:18:26,000 --> 00:18:30,640
$5 a month for what used to be thousands of dollars a month in a data center.

329
00:18:30,640 --> 00:18:35,480
Plus they have baked-in monitoring cloud firewalls so you can block traffic at the network level

330
00:18:35,480 --> 00:18:37,360
so it never has to hit your machine.

331
00:18:37,360 --> 00:18:41,920
And team management, which has been amazing to work with because we have members in our

332
00:18:41,920 --> 00:18:44,780
audience that want to help us build infrastructure.

333
00:18:44,780 --> 00:18:49,080
We have super talented people, so I can use these team management and account tools to

334
00:18:49,080 --> 00:18:53,240
work with different individuals in our community so they have full control over the machines

335
00:18:53,240 --> 00:18:54,240
that they need.

336
00:18:54,240 --> 00:18:56,180
And I have backups going all the time.

337
00:18:56,180 --> 00:18:57,180
It's super easy to do.

338
00:18:57,180 --> 00:18:58,240
That's one checkbox.

339
00:18:58,240 --> 00:19:00,620
And snapshots before we make any big changes.

340
00:19:00,620 --> 00:19:04,640
And monitoring to make sure we're always as fast as possible.

341
00:19:04,640 --> 00:19:06,160
I combine all that together.

342
00:19:06,160 --> 00:19:09,720
You'd think I spend tons and tons and tons of time a week managing this, but Digital

343
00:19:09,720 --> 00:19:10,960
Ocean makes it so easy.

344
00:19:10,960 --> 00:19:15,080
And then you combine that with things like block storage, data centers all over the world,

345
00:19:15,080 --> 00:19:20,040
SSDs for every machine, and a super, super nice interface to manage all of it.

346
00:19:20,040 --> 00:19:21,440
And you can't go wrong.

347
00:19:21,440 --> 00:19:25,000
Just start by going to do.co.co action.

348
00:19:25,000 --> 00:19:34,960
OK, so it's been a fairly bad week for Google because the EU have decided to fine them $5

349
00:19:34,960 --> 00:19:41,680
million for antitrust violations in Android, specifically that they have been forcing manufacturers

350
00:19:41,680 --> 00:19:49,360
to install the Google search app and the Chrome browser if they want to have the Play Store.

351
00:19:49,360 --> 00:19:56,080
Also they've been making payments to manufacturers and mobile carriers to make them install just

352
00:19:56,080 --> 00:19:58,100
the Google search app.

353
00:19:58,100 --> 00:20:04,340
And I think most egregiously, they've been forcing manufacturers to not ship any other

354
00:20:04,340 --> 00:20:10,920
version of Android or any other OS if they want to ship Android on any of their phones.

355
00:20:10,920 --> 00:20:13,240
That for me is worth the $5 billion fine alone.

356
00:20:13,240 --> 00:20:17,360
I just have to say, I am so torn about this particular situation.

357
00:20:17,360 --> 00:20:22,600
I would love to hear the audience's reaction LinuxActionNews.com slash contact.

358
00:20:22,600 --> 00:20:25,000
But the key bit in here, you just you mentioned it.

359
00:20:25,000 --> 00:20:30,360
It's the key bit is you have to bundle Google search and Chrome as a condition to get access

360
00:20:30,360 --> 00:20:31,520
to the Play Store.

361
00:20:31,520 --> 00:20:36,440
I believe looking at this entire thing, this is the straw that broke the camel's back.

362
00:20:36,440 --> 00:20:39,360
That really is the part where they're playing heavy handed.

363
00:20:39,360 --> 00:20:43,200
And there is a bit in here that I think is fascinating for our audience and I want to

364
00:20:43,200 --> 00:20:44,520
draw attention to it.

365
00:20:44,520 --> 00:20:48,560
They talk about Android forks and they talk specifically about how Google has tried to

366
00:20:48,560 --> 00:20:52,960
squash them and they call out Amazon's Fire OS.

367
00:20:52,960 --> 00:20:55,360
So I want to pull this out and read this for the audience.

368
00:20:55,360 --> 00:21:02,200
They write in 2012 and 2013, Amazon tried to license to device manufacturers its Android

369
00:21:02,200 --> 00:21:04,600
fork called Fire OS.

370
00:21:04,600 --> 00:21:09,680
It wanted to cooperate with manufacturers to increase its chances of commercial success

371
00:21:09,680 --> 00:21:12,460
and manufacturers were interested.

372
00:21:12,460 --> 00:21:17,880
But due to Google's restrictions, manufacturers could not launch Fire OS on even a single

373
00:21:17,880 --> 00:21:18,880
device.

374
00:21:18,880 --> 00:21:22,800
They would have lost the right to sell Android phones with key Google apps.

375
00:21:22,800 --> 00:21:30,080
Nowadays, very few devices run with Fire OS, namely only those manufactured by Amazon themselves.

376
00:21:30,080 --> 00:21:33,000
This is not a proportionate outcome.

377
00:21:33,000 --> 00:21:38,100
So this discussion is in serious danger of getting pretty political here and I'm fairly

378
00:21:38,100 --> 00:21:41,520
libertarian I think when it comes to these things.

379
00:21:41,520 --> 00:21:45,280
And so I think that if people want to ship your product, the Play Store, then it's fair

380
00:21:45,280 --> 00:21:48,240
enough to impose certain restrictions on them.

381
00:21:48,240 --> 00:21:53,800
I think they may be a bit heavy handed to force Chrome and Google search, but where

382
00:21:53,800 --> 00:21:58,680
it crosses the line is stopping manufacturers from shipping other OSes on other devices

383
00:21:58,680 --> 00:22:00,800
that have got nothing to do with you.

384
00:22:00,800 --> 00:22:04,400
And you know, that really is fair enough.

385
00:22:04,400 --> 00:22:08,080
That's what I said at the top of this, they should be stopped from doing that.

386
00:22:08,080 --> 00:22:12,400
And the interesting thing here is that they haven't been given very long at all to fix

387
00:22:12,400 --> 00:22:13,400
this, have they?

388
00:22:13,400 --> 00:22:19,720
No, and I kind of feel like this is a punishment for success to a degree.

389
00:22:19,720 --> 00:22:26,000
Maybe this is because of the time I've recently spent in Texas, but I don't really believe

390
00:22:26,000 --> 00:22:30,520
anything Google has done in the last five years has been anything other than addressing

391
00:22:30,520 --> 00:22:36,360
shortcomings to compete with iOS, because iOS is a fully integrated solution.

392
00:22:36,360 --> 00:22:39,680
And that sounds like a douchebag term, but it really matters.

393
00:22:39,680 --> 00:22:43,520
It means the people that are creating the CPU and the GPU are talking to the people

394
00:22:43,520 --> 00:22:46,440
that are creating the operating system, that are creating the drivers, that are creating

395
00:22:46,440 --> 00:22:51,040
the App Store, that are then going out and making relationships with certain application

396
00:22:51,040 --> 00:22:52,560
developers.

397
00:22:52,560 --> 00:22:57,820
It very much is an integrated stack, and you don't see the EU going after Apple for bundling

398
00:22:57,820 --> 00:22:59,960
Safari and the App Store.

399
00:22:59,960 --> 00:23:04,640
It's almost a punishment for success simply because of the massive degree of success that

400
00:23:04,640 --> 00:23:06,440
they have achieved here.

401
00:23:06,440 --> 00:23:11,280
And Google's position there is really without stewardship, without heavy-handed management,

402
00:23:11,280 --> 00:23:14,200
open source projects and platforms could become a hot mess.

403
00:23:14,200 --> 00:23:19,680
And without their clever guidance, Android would be a dumpster fire.

404
00:23:19,680 --> 00:23:21,120
That is such a spurious argument though.

405
00:23:21,120 --> 00:23:24,540
I mean, okay, look around at the rest of the open source ecosystem.

406
00:23:24,540 --> 00:23:29,120
There's quite a lot of fragmentation there, but the best stuff floats to the top and becomes

407
00:23:29,120 --> 00:23:30,120
the most popular.

408
00:23:30,120 --> 00:23:31,120
Yeah.

409
00:23:31,120 --> 00:23:37,640
And the irony is the very Linux kernel that they have based Android around, which is GPL2

410
00:23:37,640 --> 00:23:39,840
and about as free as they come.

411
00:23:39,840 --> 00:23:45,640
And yet somehow Android has been a success, but yet Google manages to argue that they

412
00:23:45,640 --> 00:23:48,160
are concerned about the decision.

413
00:23:48,160 --> 00:23:53,280
They say that without the careful balance they have struck with Android, it would send

414
00:23:53,280 --> 00:23:59,680
a troubling signal in favor of proprietary systems over open platforms.

415
00:23:59,680 --> 00:24:06,920
And that if the EU does this, open source loses and closed software like iOS will win.

416
00:24:06,920 --> 00:24:09,600
But Android is mostly closed source these days anyway, isn't it?

417
00:24:09,600 --> 00:24:14,840
If you buy an actual phone that's blessed by Google, all the play stuff is proprietary.

418
00:24:14,840 --> 00:24:15,840
Yes.

419
00:24:15,840 --> 00:24:16,840
Okay.

420
00:24:16,840 --> 00:24:21,080
The AOSP stuff underneath is open source, but they're trying to make it as proprietary

421
00:24:21,080 --> 00:24:22,240
as possible, aren't they?

422
00:24:22,240 --> 00:24:23,240
Yeah.

423
00:24:23,240 --> 00:24:24,720
That's the irony of Google's argument here.

424
00:24:24,720 --> 00:24:29,600
You see all the stuff that is open and free is the stuff that they try to lock down with

425
00:24:29,600 --> 00:24:33,160
the Play services, the Play API, and the Play Store.

426
00:24:33,160 --> 00:24:36,020
And they're trying to centralize it around Chrome and the Play Store.

427
00:24:36,020 --> 00:24:38,680
But Android is not the only solution here.

428
00:24:38,680 --> 00:24:40,540
You have iOS, which is pretty strong.

429
00:24:40,540 --> 00:24:42,560
You have others in the wings, of course.

430
00:24:42,560 --> 00:24:45,520
We recall that Google just recently invested in a competitor.

431
00:24:45,520 --> 00:24:47,800
Perhaps that has something to do with this.

432
00:24:47,800 --> 00:24:52,320
All of it is out there now, and you really see Google's tenuous position and their tenuous

433
00:24:52,320 --> 00:24:55,220
control over the Android ecosystem.

434
00:24:55,220 --> 00:25:00,680
And their argument is, the more control that we have exerted, the better it is for consumers.

435
00:25:00,680 --> 00:25:04,880
And you know, I can't necessarily argue with that core premise.

436
00:25:04,880 --> 00:25:08,760
Well, surprisingly enough, I agree with my beloved EU on this.

437
00:25:08,760 --> 00:25:09,760
Really?

438
00:25:09,760 --> 00:25:13,320
I thought you felt this was Microsoft 2.0, that they were being ridiculous here.

439
00:25:13,320 --> 00:25:15,680
Well, my first reaction to this was, what?

440
00:25:15,680 --> 00:25:19,360
This is just heavy-handed authoritarianism.

441
00:25:19,360 --> 00:25:24,360
But then when you really look through it, and specifically that third point, which I

442
00:25:24,360 --> 00:25:29,920
keep coming back to about not allowing the freedom to ship other OSes, that is where

443
00:25:29,920 --> 00:25:31,000
they've really crossed the line.

444
00:25:31,000 --> 00:25:38,400
If it was only forcing the bundling of Chrome and the Google search, then I'd be kind of

445
00:25:38,400 --> 00:25:39,840
much lighter on Google.

446
00:25:39,840 --> 00:25:45,600
But forcing manufacturers to only ship your product, or take your ball and go home with

447
00:25:45,600 --> 00:25:48,200
you, that's just not on as far as I'm concerned.

448
00:25:48,200 --> 00:25:49,980
Ideally, I don't disagree with you.

449
00:25:49,980 --> 00:25:53,880
But from a market practice standpoint, I have to look at Android.

450
00:25:53,880 --> 00:25:58,000
When I think of those first devices that shipped, the ones with the little balls that you would

451
00:25:58,000 --> 00:26:03,600
move around the UI with, to what we have now, Google really did start from an idealistic

452
00:26:03,600 --> 00:26:04,800
standpoint.

453
00:26:04,800 --> 00:26:08,320
Every major app on the phone was really an open-source app.

454
00:26:08,320 --> 00:26:14,200
And then over time, because of the realities of OEMs and what bastards they are, and carriers

455
00:26:14,200 --> 00:26:20,800
and what jerks they are, Google has slowly become more closed and more dogmatic about

456
00:26:20,800 --> 00:26:23,020
what they require.

457
00:26:23,020 --> 00:26:28,520
And I don't really feel like it's been out of malice, I feel like it's been out of what

458
00:26:28,520 --> 00:26:32,880
delivers the most consistent and competitive Android experience.

459
00:26:32,880 --> 00:26:36,040
I can't believe I'm going to say this, but I think I side with Google.

460
00:26:36,040 --> 00:26:40,540
I feel like this thing is overreaching, and that what Google has done over time has gotten

461
00:26:40,540 --> 00:26:45,400
more pragmatic and been responding to the competitive nature that iOS brings to the

462
00:26:45,400 --> 00:26:46,480
field.

463
00:26:46,480 --> 00:26:53,760
And as an iOS user, the changes they have made have, over time, made me consider using

464
00:26:53,760 --> 00:26:58,040
Android as my primary phone operating system more and more.

465
00:26:58,040 --> 00:27:01,920
And I wish we could just remove free software and open source from the conversation altogether

466
00:27:01,920 --> 00:27:07,440
and just look at it from what they offer consumers as features and a consistent experience.

467
00:27:07,440 --> 00:27:11,120
Well, if you take the open source and free software aspects away, then iOS is clearly

468
00:27:11,120 --> 00:27:12,120
better.

469
00:27:12,120 --> 00:27:13,120
There's no doubt.

470
00:27:13,120 --> 00:27:15,280
As you said, they control the whole stack.

471
00:27:15,280 --> 00:27:17,880
Of course, it's going to be a better experience.

472
00:27:17,880 --> 00:27:18,960
Features wise, I don't know.

473
00:27:18,960 --> 00:27:22,960
It feels like it kind of goes back and forth on that front.

474
00:27:22,960 --> 00:27:29,700
But yeah, from my fairly limited experience of iOS, it is way more stable and just better

475
00:27:29,700 --> 00:27:31,280
all around than Android.

476
00:27:31,280 --> 00:27:32,760
But it's not customizable.

477
00:27:32,760 --> 00:27:34,180
It's not at all open source.

478
00:27:34,180 --> 00:27:36,120
So that's why I use Android.

479
00:27:36,120 --> 00:27:39,160
But there's no doubt that something Google have done recently is good.

480
00:27:39,160 --> 00:27:44,440
And that is the data transfer project where they've teamed up with Microsoft, Twitter,

481
00:27:44,440 --> 00:27:49,120
and Facebook to enable you to transfer your data between the services without having to

482
00:27:49,120 --> 00:27:50,600
download it and re-upload it.

483
00:27:50,600 --> 00:27:53,960
And it's all open source and it's potentially going to grow beyond those services, which

484
00:27:53,960 --> 00:27:54,960
is good.

485
00:27:54,960 --> 00:27:58,760
This is a big deal if it takes off.

486
00:27:58,760 --> 00:28:04,780
If it takes off, it solves a problem that really cloud computing has failed to address

487
00:28:04,780 --> 00:28:06,640
in an embarrassing way.

488
00:28:06,640 --> 00:28:11,240
With traditional applications, it just seems ridiculous to even point this out, like obvious.

489
00:28:11,240 --> 00:28:16,400
But with a traditional application, I could open up, say, K-Write, and I could say, Joe

490
00:28:16,400 --> 00:28:20,280
smells like beans, and I could save that to a text file.

491
00:28:20,280 --> 00:28:26,120
And then I could go open that up with Libre Docs or whatever, a different text editor,

492
00:28:26,120 --> 00:28:30,580
Sublime Text, and I could just read the file because it's on my file system.

493
00:28:30,580 --> 00:28:32,600
Like that's just how computers work.

494
00:28:32,600 --> 00:28:36,960
But in cloud computing, we've really sort of just submitted ourselves to these data

495
00:28:36,960 --> 00:28:37,960
silos.

496
00:28:37,960 --> 00:28:43,400
Well, apparently, good guy Google is trying to push forward the data liberation front

497
00:28:43,400 --> 00:28:47,800
to the next level, where you can move your data between services.

498
00:28:47,800 --> 00:28:50,280
And they call out different use cases.

499
00:28:50,280 --> 00:28:56,160
Say for example, you have all of your photos on Google Photos, but a new photo book services

500
00:28:56,160 --> 00:28:59,240
launches and you want to move your photos over.

501
00:28:59,240 --> 00:29:03,640
Google will facilitate that ability through this initiative.

502
00:29:03,640 --> 00:29:08,320
Or let's say you're using a chat network, and they've changed their terms of services,

503
00:29:08,320 --> 00:29:12,280
and you no longer like those terms of services, but you would like to move over your message

504
00:29:12,280 --> 00:29:17,760
history and your pictures to a new service where you do agree with their terms of service.

505
00:29:17,760 --> 00:29:20,520
This is supposed to facilitate that as well.

506
00:29:20,520 --> 00:29:21,600
We'll have a link in the show notes.

507
00:29:21,600 --> 00:29:25,600
Go over to linuxactionnews.com slash 63 for details.

508
00:29:25,600 --> 00:29:28,680
But I read through the white paper for you, so that way you don't have to.

509
00:29:28,680 --> 00:29:32,160
And the way this really works is pretty good.

510
00:29:32,160 --> 00:29:34,800
It kind of checks out, guys, I got to say.

511
00:29:34,800 --> 00:29:36,720
Everything is encrypted in transit.

512
00:29:36,720 --> 00:29:38,080
Everything is encrypted at rest.

513
00:29:38,080 --> 00:29:41,240
I know that's your number one concern, and they've taken care of that.

514
00:29:41,240 --> 00:29:48,080
The only real blocker for different cloud services to participate is they have to build

515
00:29:48,080 --> 00:29:53,120
what is essentially a connector or a translator, so that way they can take the standard REST

516
00:29:53,120 --> 00:29:56,560
based API and they can translate it to their services.

517
00:29:56,560 --> 00:29:57,960
But Google's going to work on this.

518
00:29:57,960 --> 00:30:02,000
It started as a small skunks works project in Chicago, actually, and now it's really

519
00:30:02,000 --> 00:30:06,440
developed into a full-fledged initiative that has involved Google reaching out to Microsoft

520
00:30:06,440 --> 00:30:12,480
and Facebook and others and really building an industry-wide standard that may facilitate

521
00:30:12,480 --> 00:30:18,080
you one day going into one social network and saying, I want to transfer all of my information

522
00:30:18,080 --> 00:30:21,720
to a different network, or one service to another service.

523
00:30:21,720 --> 00:30:22,880
Doesn't have to be social.

524
00:30:22,880 --> 00:30:25,360
It could be anything.

525
00:30:25,360 --> 00:30:28,720
It's legitimately awesome, and it could be great, especially when you start considering

526
00:30:28,720 --> 00:30:34,520
things like Google Drive, Dropbox, OneDrive, and photo services, and all of these include

527
00:30:34,520 --> 00:30:37,000
a facility for you to download them as well.

528
00:30:37,000 --> 00:30:43,000
It's really about standardizing a interface that can talk between the services, and it's

529
00:30:43,000 --> 00:30:45,840
all done with a translator on each end of each service.

530
00:30:45,840 --> 00:30:50,880
So you have a limited buy-in right now, but potentially this could pick up some traction

531
00:30:50,880 --> 00:30:53,200
because you're seeing some wide adoption initially.

532
00:30:53,200 --> 00:30:59,840
I had this dawning realization a few years ago that open standards for data is potentially

533
00:30:59,840 --> 00:31:05,140
more important than open source or free software because it's not much use having a completely

534
00:31:05,140 --> 00:31:12,200
open source text editor or word processor if the resulting files can't be read anywhere

535
00:31:12,200 --> 00:31:13,520
else, right?

536
00:31:13,520 --> 00:31:19,160
And so it's almost better to use proprietary software that is using open standards than

537
00:31:19,160 --> 00:31:24,720
free software that isn't or isn't using a widely adopted standard.

538
00:31:24,720 --> 00:31:29,640
I say almost because I know there's a lot of purists or whatever, and this isn't them

539
00:31:29,640 --> 00:31:34,520
saying that they're moving to open standards, but it's probably the best that we're going

540
00:31:34,520 --> 00:31:38,200
to get in a sort of pragmatic view of the world.

541
00:31:38,200 --> 00:31:44,040
You're not going to get Facebook and Twitter and Google and Microsoft to all of a sudden

542
00:31:44,040 --> 00:31:50,400
open up their APIs and make everything completely open standards and interoperable.

543
00:31:50,400 --> 00:31:54,880
But this sort of bridging software here, I think realistically is the best we're going

544
00:31:54,880 --> 00:31:55,880
to get.

545
00:31:55,880 --> 00:32:00,120
So that's why I think, well, be grateful for what you get at the end of the day.

546
00:32:00,120 --> 00:32:03,800
I like some of the screenshots that we'll have linked in the show notes where they show

547
00:32:03,800 --> 00:32:06,680
exporting Google photos over to Microsoft.

548
00:32:06,680 --> 00:32:11,160
That's just, I don't know, it's just neat to see Google blogging that.

549
00:32:11,160 --> 00:32:15,640
But it really does depend on each service creating what Google calls an adapter.

550
00:32:15,640 --> 00:32:17,840
But the backend mechanisms, they check out.

551
00:32:17,840 --> 00:32:22,480
Like I said, I read through it all, and they're using things like OAuth for the authorization,

552
00:32:22,480 --> 00:32:27,200
and they're using perfect forward secrecy where each item you have has a unique key

553
00:32:27,200 --> 00:32:31,240
which is generated for each transfer, and they have a framework which allows partners

554
00:32:31,240 --> 00:32:35,880
to support any authorization mechanism they choose, which enables partners to leverage

555
00:32:35,880 --> 00:32:41,400
their existing user account database and their existing security infrastructure for authorizing

556
00:32:41,400 --> 00:32:42,400
accounts.

557
00:32:42,400 --> 00:32:47,840
So Google's really trying to do this in a way that is very friendly to third party interfaces,

558
00:32:47,840 --> 00:32:51,520
including even like their graphics and all of that when you're accepting all of this.

559
00:32:51,520 --> 00:32:57,600
It's a good system, and it really could be a file system for the web for some of our

560
00:32:57,600 --> 00:32:59,000
most popular services.

561
00:32:59,000 --> 00:33:05,320
It's never, ever going to replace having control over your own data and having your own files.

562
00:33:05,320 --> 00:33:09,520
But for the users out there that live online, that live on their mobile devices, that live

563
00:33:09,520 --> 00:33:17,040
on Chromebooks, that live on cloud services, this may finally enable them to move data

564
00:33:17,040 --> 00:33:19,560
between competing services.

565
00:33:19,560 --> 00:33:23,800
And in the white paper, Google specifically calls that out and says that's something they're

566
00:33:23,800 --> 00:33:25,360
trying to enable.

567
00:33:25,360 --> 00:33:30,280
Somebody changes a policy and they want to move to a competing service, this is supposed

568
00:33:30,280 --> 00:33:31,360
to enable that.

569
00:33:31,360 --> 00:33:32,360
So we'll see.

570
00:33:32,360 --> 00:33:38,280
This is over at opensource.googleblog.com, and they call it the Data Transfer Project,

571
00:33:38,280 --> 00:33:42,520
an open source platform for promoting universal data portability.

572
00:33:42,520 --> 00:33:46,640
Yeah, and this is clearly due to the GDPR stuff.

573
00:33:46,640 --> 00:33:50,600
So it's another win for the EU, but let's not go on about that too much.

574
00:33:50,600 --> 00:33:54,280
Let's end the news with Slackware turning 25.

575
00:33:54,280 --> 00:33:57,800
It's the oldest actively developed Linux distribution.

576
00:33:57,800 --> 00:34:01,360
And having installed it last night, yeah, you can tell.

577
00:34:01,360 --> 00:34:06,040
Yeah, that is exactly my interpretation as well.

578
00:34:06,040 --> 00:34:10,400
And not necessarily a bad way, like it's kind of awesome in a certain way, like I really

579
00:34:10,400 --> 00:34:11,400
appreciate it.

580
00:34:11,400 --> 00:34:16,480
But you really feel the ethos of Slackware, you know, it's supposed to be simple.

581
00:34:16,480 --> 00:34:22,200
And that simplicity in this instance is really being the removal of barriers between you

582
00:34:22,200 --> 00:34:24,320
and the Unix experience.

583
00:34:24,320 --> 00:34:28,360
It's really all about that Unix experience with Slackware as close as you can get with

584
00:34:28,360 --> 00:34:29,360
a Linux distro.

585
00:34:29,360 --> 00:34:34,060
I mean, it all got started in July of 1993.

586
00:34:34,060 --> 00:34:38,020
It was really aimed to be the most Unix-like Linux distribution.

587
00:34:38,020 --> 00:34:43,360
And the team has managed 30 releases over the years, with the latest being 14.2 on June

588
00:34:43,360 --> 00:34:48,160
30, 2016, which is based on the 4.14 kernel.

589
00:34:48,160 --> 00:34:50,000
I love Slackware.

590
00:34:50,000 --> 00:34:53,360
It has been a constant in my Linux life.

591
00:34:53,360 --> 00:34:56,200
And of course, original SUSE's were based off of it.

592
00:34:56,200 --> 00:35:02,680
And the name, in 1994, for an interview with Linux Journal, the then 27-year-old benevolent

593
00:35:02,680 --> 00:35:08,200
dictator of Slackware said, I think I named it Slackware because I didn't want people

594
00:35:08,200 --> 00:35:11,880
to take it all that seriously at first.

595
00:35:11,880 --> 00:35:17,520
Which I don't know, when you think about 25 years afterwards, it just makes me like it

596
00:35:17,520 --> 00:35:18,520
more even.

597
00:35:18,520 --> 00:35:23,400
You're talking to someone who's running XFCE, so I don't like change for its own sake.

598
00:35:23,400 --> 00:35:26,240
And I do appreciate that Slackware hasn't changed much.

599
00:35:26,240 --> 00:35:28,960
It's kept very much to its original principles.

600
00:35:28,960 --> 00:35:34,640
But on the other hand, it really makes you appreciate Fedora, Ubuntu, other distros

601
00:35:34,640 --> 00:35:39,760
like that, and how far we've come, and how much polish has been added to the whole experience.

602
00:35:39,760 --> 00:35:45,120
Yeah, either way, 25 years and still being famous for its simplicity, only Linux could

603
00:35:45,120 --> 00:35:46,120
deliver that.

604
00:35:46,120 --> 00:35:47,120
I love it, Joe.

605
00:35:47,120 --> 00:35:48,120
I love Slackware.

606
00:35:48,120 --> 00:35:51,280
Even though I'm not a daily user of it, I have so much respect for the project.

607
00:35:51,280 --> 00:35:56,320
Well, a project we have a lot of respect for is Firefox, and we made an error last time,

608
00:35:56,320 --> 00:35:58,200
so we need to correct that error.

609
00:35:58,200 --> 00:36:02,320
We were talking about them making changes on Android, and we incorrectly said that they

610
00:36:02,320 --> 00:36:08,020
were moving away from Gecko as a rendering engine to WebKit, but they're not, so we needed

611
00:36:08,020 --> 00:36:09,020
to make that correction.

612
00:36:09,020 --> 00:36:12,800
Yeah, it actually looks like a great initiative, and it's one that I'll be following in the

613
00:36:12,800 --> 00:36:13,800
future.

614
00:36:13,800 --> 00:36:15,600
And as things develop, we'll keep you posted.

615
00:36:15,600 --> 00:36:19,900
Go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

616
00:36:19,900 --> 00:36:23,120
And go to linuxactionnews.com slash contact for ways to get in touch.

617
00:36:23,120 --> 00:36:27,160
Yeah, and you can support the whole network and everything we're doing over at patreon.com

618
00:36:27,160 --> 00:36:28,160
slash jupitersignal.

619
00:36:28,160 --> 00:36:32,480
We'll be back next Monday with our weekly take on the latest Linux and open source news.

620
00:36:32,480 --> 00:36:33,920
I'm at Chris LAS.

621
00:36:33,920 --> 00:36:35,320
I'm at Joe Rissington.

622
00:36:35,320 --> 00:36:38,280
Thank you for joining us, and we will see you next week.

623
00:36:38,280 --> 00:36:54,200
Have a good night, sir.

