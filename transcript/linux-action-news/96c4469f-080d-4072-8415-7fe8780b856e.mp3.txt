Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 88, recorded on January 13th, 2019.
I'm Chris.
And I'm Joe.
Hello, Joe.
It's good to be connected with you.
In fact, it's good for all of us because soon we may get to choose our own Linux on Chrome
OS, which is based on Linux.
Linuxception.
Yeah, this thing that was formerly called Crostini, which is now just called Linux on
Chrome OS, means that you can use Debian apps within Chrome OS, but now they are looking
to expand that to be different distros.
It's not going to be particularly easy to do it.
It's going to take a bit of admin skill.
But then I suppose the kind of people who are looking to install these Linux apps probably
have those skills.
Well, here's the details.
I was reading through how they're going to do this.
And it's really down to device administrators, they'll be able to designate a URL for Chrome
OS to download the Linux distro of choice, and then does a hash to make sure it got the
right file.
And if you need it, it's also intended for a license key to get that you can fetch a
license key from that URL to be present.
I don't know what that license key is going to be used for.
And it's not quite clear if you need to make modifications to a specific Linux OS or distro
to get it to work on the Chrome OS Crostini environment.
But the basic principles are put it up on an HTTP location, give the URL via the device
administrator tool.
And then Chrome OS when you go to install Linux support when you when you go to enable
that as a user just pulls it from that location and loads it.
And then it's just part of regular old Chrome OS.
So it looks like to start with, at least this is only going to be available to managed users.
So it's not going to be for everyone.
Yeah, I wouldn't be too surprised though, if people on the internet figure out a way
to get to that parameter.
They've already, they quote unquote, the people on the internet have already looked through
the available beta source code.
And there doesn't really seem to be a way at first pass.
But I feel confident that they'll figure that out.
In a few months, we may even have a story that reads something like Chrome OS subreddit
figures out how to custom specify a URL for Linux distro.
I have a sense it's gonna happen.
The question I have is why do you need to have different distros supported as opposed
to Debian?
What is there that's available for other distros that isn't available for Debian?
Apart from some of the proprietary stuff, maybe?
I think you got to keep in mind the audience for this feature, which is developers.
So it isn't so much about the application availability, like if you're just using this
to install GIMP, it probably doesn't matter.
But if you're using this to actually build software, you want a specific environment.
That's why the Windows subsystem for Linux exists.
You want maybe an Ubuntu environment if you're deploying on an Ubuntu server up in the cloud.
That's the angle the Sputnik team went after with the Dell XPS 13 and Windows subsystem,
like I mentioned, and I think what made the MacBook so popular amongst web developers
is you get the command line, you get something that you can easily SSH into, and now the
next stage of that that is taking what really made MacBooks popular is now you can have
your own environment.
So it's not just a Bash shell anymore.
It's a Bash shell in your preferred development environment.
I don't know.
Maybe that's really, really valuable.
Maybe but I always come back to the same argument of if you want a proper GNU slash Linux laptop,
then buy one from Dell or System76 or Entryware or whatever.
Why bother buying Chrome OS and then trying to kind of force this potentially quite sketchy
Linux app support on top of it?
Surely Chrome OS should just stay as this simplified platform and then we've got a proper
GNU slash Linux for everyone else.
Yeah, good points.
And I have to say, I really like seeing Linux be a headline feature that all these companies
are going after to add to their platforms.
That's pretty cool to watch.
But there is that skeptical side of me that looks at this and I think, who's the target
market?
It seems like it's too simple of an operating system.
Chrome OS is too simple and you wouldn't really want to build software on a Chromebook.
That's going to be slow and not very appealing.
You would probably just end up SSHing into your development box and doing the work on
a much more powerful system.
I don't quite get it.
On the flip side, I want this feature as an end user.
I'm looking forward to trying this out someday on a Chromebook.
I've never really considered getting one, but this is kind of pushing me over the edge.
It does make me a bit sad though that this is how Linux on the desktop has succeeded
in this totally lockdown controlled by Google way and that they're kind of feeding us piecemeal
little bits here and there, network, file, share support, and then Linux app support
and then other distros and it's kind of all on their terms rather than with traditional
desktop Linux where we've just had so much choice and control and that control has just
been given away to Google and I just wish that this isn't how desktop Linux had succeeded.
In some ways, I'd rather it not succeed than succeed like this.
Well, the good news is we still have traditional desktop Linux.
So for those of us that want that feature set, it's not going away anytime soon.
But I think we've always wondered what was going to be the success pathway for desktop
Linux to get into consumers' hands.
Who was going to put hardware in stores and incentivize salesmen to actually sell it?
Who was going to subsidize the hardware so it could be competitive in a low-end consumer
market where they're not willing to spend very much money?
And what company would have the development resources to build that platform?
The number of companies that can do that in 2019 and in 2018 and the last few years is
about five and one of them is Google.
I just can't see another pathway to mainstream consumers without going through one of the
top six or so tech companies at this point.
Maybe if Amazon had done something like this.
And I think in the end, users are generally better off with the exception of all of the
horribly disturbing privacy violations that really could have their own weekly news podcast.
And for those of us who still want traditional private, secure, customizable, enterprise-grade
Linux, it's going to be out there.
Yeah, that's true.
And most of those distros are going to be developed on GitHub, aren't they?
Hey-oh, yeah, well, if Microsoft has their way.
And here we are, early 2019, and Microsoft is already just wrecking GitHub by announcing
two major updates that frankly make it more accessible to developers.
Unlimited free private repositories and a new simpler enterprise offering.
You can't really argue with free, Joe.
I know.
You can't argue with that.
You do have to wonder why they've done it.
And it's presumably because of the success of GitLab.
And I think this will attract people over.
It's these free private repos, it's only for small teams.
So you can only have three people at once contributing to them.
So it's not really going to cost them that much money, but I think it is going to earn
them quite a lot of goodwill amongst kind of small-time hobbyists and whatnot.
Yep.
And I think Microsoft can afford to do this.
And it was the reason, well, one of three reasons that I was paying for GitHub.
I have private repositories that I use for notes.
I have note apps that saved to GitHub for me.
I don't really need that to be public.
And there's nothing really all that interesting in there.
So I paid for a GitHub account to have a private repo.
I don't really need to do that when my renew comes up.
I can use it for free now.
I think this is a good move to keep GitHub competitive.
I don't think it's a game changer, but I think it's a necessary move for them to stay competitive.
And it shows that they're willing to still be nimble.
This enterprise stuff, it's nice.
They have a new unified product for Enterprise Cloud, which used to be called GitHub Business
Cloud, and their new Enterprise Server update, which all looks really good.
They're doing the right stuff for business and for the general public.
But you're right.
This isn't a game changer, but it's good to see.
Well, something that assured it's going to be a game changer is that Homebrew has now
come to Linux.
Had you even really heard of Homebrew before this story?
Yeah, I'd heard of it, but I'd not used it.
It's traditionally how you manage software on a Mac if you are nerdy and want to install
things like Git and whatnot.
If you're a command line person on the Mac, then you use Homebrew.
Yeah, I mean, the Mac doesn't really have a traditional package manager like we think
of.
They have a way to install packages, but it's not connected to like an online repo where
you can search for packages and then update all your packages on the command line.
So Homebrew was exactly that.
It was a package manager developed by the community, and it's been around for a while.
It's pretty good for what you get, it's got a pretty good software selection, and it stays
fairly up to date on everything.
It makes using the Mac tolerable, to be honest with you.
But things are now changing a bit, because with the new release, version 1.90, they have
added Homebrew on Linux, known as Linuxbrew, and this also includes support for the Windows
subsystem for Linux, which means technically Homebrew has now also come to Windows 10.
So you might be asking, why would I want Homebrew on Linux?
Good question.
It's really all about not having to have root access.
That's really what it comes down to.
If you're on like a shared system where you don't have root access, Homebrew can just
run out of your home directory.
So you can have a pretty functional package manager without having to have administrative
access to the box.
It can either be installed in your home directory, which is nice.
It may include when you install it recent versions of glibc and gcc, depending on how
old your distro is, which is another nice thing about Homebrew.
If you have a super out of date distro, it may still be supported by Homebrew.
And you can install packages via Homebrew that don't conflict with your operating system
packages.
It can get a little messy, but I assume if you're running a rig like that, you know what
you're doing.
And so depending on how old your rig is, it may pull down its own libraries, or it may
just use your system version, and keeps them all in your home directory, unless you specify
otherwise.
And it makes it nice and easy and tidy.
It's worth mentioning it's beta support right now in version 2.0.
They plan to land official Linux support.
You know what I would use it is I tried out those Amazon virtual Linux desktops.
They're pretty neat.
We talked about it weeks and weeks and weeks ago on Linux Action News.
And the thing is, is it has a very limited package set.
And you could load this on one of those instances, one of those virtual desktops, and just start
installing packages all day long.
That's pretty neat.
Well, speaking of Amazon, I think the only way I can describe the next story is shots
fired at MongoDB.
Savage.
It's a savage move by Amazon.
They basically set up their own MongoDB ripoff called AWS DocumentDB, and I predict it's
going to be a smashing success.
I think it will be successful.
Yeah, absolutely.
Looking at the specs of it and what it can actually do, it's a completely managed database
solution, which takes a lot of the work and effort out for you, and it's got all the backups
sorted out.
It's distributed over different data centers.
It's lightning fast.
I can see people moving away from MongoDB to this in their droves.
Yeah, and as the famous saying goes, nobody gets fired for choosing AWS.
Now, it's worth pointing out, MongoDB does have their own managed database as a service,
but it launched in 2017, and in their most recent results, Mongo said they had about
6,200 customers using the service.
That's not going to compete with AWS.
There's probably more than that already on AWS.
Yeah, they probably had more beta testers than that.
But it is yet more vendor lock-in, isn't it?
That's where I would be concerned to use this.
I think a lot of companies won't care about that because they are just totally wedded
to AWS.
But at least if you were using MongoDB on AWS, you can extract your data and run it
on premises, whereas once it's locked into this, it's going to be that bit harder to
do so.
They also, to make things easier for you to get in and get all that nice lock-in, they're
introducing a MongoDB compatibility layer, which is essentially compliant with MongoDB
3.6's API.
Before they changed their license, which we covered a few weeks ago, just like we predicted
in that episode, Amazon froze that code base, they forked right there and said, here's your
compatibility layer.
We'll implement our own database, but we will support MongoDB 3.6's API.
Savage.
There's a bit of a war of words as well, isn't there, between Amazon and MongoDB?
MongoDB are saying that, oh, it's a poor man's MongoDB and it's a rip-off.
And Amazon are saying, well, this is a proper professional version of it that's actually
going to work properly.
Yeah, well really, I was reading a quote in the register from Amazon's non-relational
database VP, Sean Bice, and the register says he makes no bones about the fact that Amazon
spent a lot of time looking at how to support MongoDB workloads, thought about that a lot,
and then ultimately decided to build a new purpose-built document database from the ground
up, end quote, that supported the MongoDB APIs.
And then throughout the rest of the article, there's like little jibes at their availability
and their scalability and their regional limitations and things like that just kind of sprinkled
throughout the whole article.
Amazon clearly has a more competitive product built off the backs of years of developers
contributing to open source, and they're just like, all right, thanks for the fish.
So long.
This is very much aimed at enterprise, though.
I mean, you only have to look at the resources that they offer, starting from 15 gigabytes
of RAM up to nearly 500 gigabytes.
This is not your sort of $10 droplet situation, is it?
No.
I mean, cost is definitely going to be a consideration, which is maybe where the MongoDB service
can remain competitive.
This is really like all other AWS services.
It's pricing on demand.
And the one thing is they don't charge for the inbound, so getting data into your document
DB instance, they don't charge you for.
But there is an IO rate.
There's the storage rate.
There's a lot of cost in here, including backup.
And it's a cost that enterprises are willing to pay for to have really, really reliable
infrastructure.
But it's so cost prohibitive for some companies that they may start with other document databases
and just remain on them because of the initial startup cost.
But for the enterprises that can afford it, I think this is going to be very, very successful.
If you look at the companies that are already using Amazon document DB, like Capital One,
Dow Jones, and the Washington Post, as well as many others, this is going to be a massive
success.
I know I said that at the start of the story, but I really think Amazon's going to have
a win here.
And we really, as an open source community, need to take a hard look at this because this
is a product that is a rip off of something that open source developers have contributed
to for years.
I don't know.
Maybe I'm wrong.
Is this a rip off or not?
Let me know.
LinuxActionNews.com slash contact.
I'd really like to get the audience's take on that because to me it feels like Amazon's
playing a little dirty here.
But they're also a capitalist based company.
They're trying to be competitive.
I can't really argue with them wanting to make money and everything was free and open.
And so as long as they make that MongoDB compatibility API Apache licensed, they're good.
The back end implementation can be closed and owned by Amazon for eternity.
And the API layer that is MongoDB compatible can stay open source, everybody's happy.
Yeah, MongoDB have really shot themselves in the foot there, changing the license to
try and stop this sort of thing because it's happened anyway.
By everybody being happy, I mean MongoDB is not going to be happy.
And you wonder now, just speculation corner here on Linux Action News, which is something
we don't do very often, did they know at the time this was in the works?
Was that maybe part of the story that didn't come out at the time, is that they knew Amazon?
Because surely Amazon's been working on this for a while.
In some of the reports, they say three years.
Yeah, at least two I read.
So you would imagine that they got wind of it.
And maybe that did influence their decision.
Yeah, yeah.
I don't know.
It's hard to say.
They didn't say at the time.
So I get end speculation corner, but I thought that was interesting.
Yeah.
Well, some good news coming out of the LVFS project this week is that Phoenix have joined
them.
Yes, the makers of really widely used firmwares.
They're a huge firmware vendor.
Anybody using a ThinkPad right now?
They're probably using Phoenix code in the main board.
They've been working with Lenovo, Phoenix has, and their ODMs on LVS support for a while.
This was kind of hinted when Richard, the main guy behind the LVS project, announced
Lenovo was on board.
There was an implication, kind of like a little sneaky message in there, that there was another
big vendor about to be announced.
This is it.
This is a big deal because Richard hopes that, big picture, other downstream vendors like
Tuxedo and Star Labs will be able to take advantage of LVFS without having to work back
and forth with their upstream ODMs like Clevo.
Interesting though that System76 and Intraware are not in that list.
Yeah, there's been a little bit of back and forth.
I'm not going to say beef, but getting on for beef between Huzy and those companies
you mentioned.
It's not a huge surprise that he didn't link to them.
But hopefully they'll be able to take advantage of this.
Getting that firmware update through your software manager really feels like a first
class desktop Linux experience, so I hope so too.
And the more of these companies who get on board, the more momentum there is and hopefully
that will mean that eventually we'll have all of the hardware companies on board and
we'll just be able to update firmware for every device that we've got.
That would be nice.
Even if it is proprietary software, at least if you're getting updates, it's better than
not.
This is how I felt for a while.
If we're going to turn all of these chips into mini computers running operating systems
and firmware, then we better keep them secure and up to date.
It's a responsibility we have as end users and the companies making this stuff and this
enables that.
So it's a pretty big deal and I love to just see every few weeks Richard has another post
about another win for that project.
It's so great to see that and every time the story comes up after the announcement of IBM
buying Red Hat, I think to myself in the back of my mind, yep, this is another one of those
Red Hat projects that we really don't want to go away.
I really want this to stick around.
Just keeping tally.
Not that I'm worried.
No, I'm not worried.
No, no.
It could go wrong, right?
Although if I was an Ethereum Classic user, I would be very worried this last week.
The Ethereum Classic network suffered one of those famous 51% attacks.
Yeah, it's not clear if that's exactly what it was, but it was something akin to a 51%
attack.
It was a lot of transactions that were double spent basically, which meant that whoever
was doing this attack made off with the best part of half a million dollars worth of Ethereum
Classic.
Yeah, so this is also called a rollback attack and a rollback attack generates a new fork
of the blockchain essentially.
This causes nodes to replace the original blockchain, the one that was supposed to be
the agreed upon blockchain, with the new one that makes it possible for attackers to reverse
previously made transactions.
So you could reverse transactions to go in their favor.
They're essentially getting the majority of the network to adopt a new ledger and they
have retroactively tilted that register in their favor, like an accounting register.
Rollback attacks require control of a substantial fraction of the total horsepower though.
So it really takes some machinery devoted to generating the blockchain to get that power,
to have that level of consensus.
And to the network's credit, a lot of people noticed this was going on pretty quickly,
one of them being Coinbase.
Yeah, and they suspended trading on it very, very quickly.
But it's funny that we're talking about Ethereum Classic here rather than Ethereum because
Ethereum Classic was created out of controversy in the first place because there was a huge
theft of Ethereum and at the time there was a lot of debate within the community, should
we fork the blockchain and basically give everyone their money back or should we not?
And it was decided that they would fork that blockchain, give everyone their money back
and that was Ethereum.
And the kind of diehard purists who said, no, that's not right, you just have to roll
with it, that carried on as Ethereum Classic.
I guess in theory, the smaller the network, the easier it would be to get a substantial
control of it if you have access to a lot of horsepower.
Yeah, and it seems that Ethereum Classic was just about the right size where it was worth
doing, but it was also possible to do because you couldn't really do that with Bitcoin,
for example, because it's just too many people mining it.
Although there really is a quick fix that exchanges and large pools can make to prevent
this is they can just increase the number of confirmation blocks, which takes longer
and then makes it much harder to have a majority control.
It still feels like we're in the early days of cryptocurrencies to me.
Some people would argue and say that it's all about to tank and by the end of this year
or maybe next year, it'll all be worth nothing and it'll just be proved to be a pyramid scheme.
But this feels like teething issues to me.
We need to work out this stuff before we can get to a point where it's actually used by
normal people.
And I know that people were kind of starting to get that way when Bitcoin got up to around
twenty thousand dollars.
But since that's kind of gone back down to various lows that I don't even want to think
about how low it is.
But since then, people have lost it, you know, normal people have lost interest.
But I think we need to go through these issues and work out ways to get around them if we're
ever going to get to a situation where cryptocurrencies are taken seriously and just part of everyday
life like using a visa card.
Right.
It's growing pains.
Not that you asked, but it's almost thirty five hundred dollars right now as we record.
I was looking I was trying to try to get some perspective on what does it take for a new
currency to be adopted?
Like what is just the the average time?
And I I didn't go back to gold and I didn't go very far.
But looking at countries that have made currency switches right now, it typically takes some
of these smaller countries about six months on average to like transition to the new currency.
Then the public takes about two years for the old currency to be worked out.
But cryptocurrency is a totally different piece.
Like these other these other currencies are backed by a government, by a central authority,
which makes implementation straightforward.
They tell you to use this currency and you have to use that currency to pay your taxes
like you've got no choice.
But with cryptocurrency, it's like Linux distros.
There's tons to pick from.
They're open source, they're organic, they go in different directions.
Sometimes they make mistakes.
It's a totally different beast than a government controlled currency.
And it may never work out, or it may take a generation to work out the kinks for the
people's currency.
Well, I remember reading quite a lot about this a year or so ago and coming to the conclusion
that we wouldn't have one cryptocurrency to rule them all, we'd end up with thousands
all kind of interacting with each other and having micropayments here and there.
So it just feels too early to know exactly where we're going to be, whether or not we're
going to end up with Bitcoin or Ethereum or whatever becoming just the one that's used
or whether everyone will have their own currency and they'll just be traded, I suppose, like
the fiat currencies that we have now.
I think that's got to be what happens.
If cryptocurrency ever got legitimate, where it was maybe even a little sexy for a company
to use it, you can imagine the Amazon coin.
And your Xbox tokens and your Google Play Store currency could all be cryptocurrency
that the user isn't even aware of.
It's all white labeled and done with GUIs for the end user.
But on the back end, it's their own cryptocurrency that they could even play the markets with
and all kinds of really horrifying stuff.
But it just seems like naturally, that's the way it's going to go.
If anybody can make their own cryptocurrency, you just have to be big enough for adoption
for it to be successful.
And if they get legitimate, why wouldn't that happen?
It's going to become the internet funny money.
And in a way, it'll be good because in theory, consumers could trade between platforms.
If you have an Amazon coin and you no longer want to use Amazon Prime and you want to go
subscribe to Google YouTube Music, in theory, you would be able to transfer your crypto
Amazon coin over using an exchange into your Google account, perhaps.
Maybe that'd be the upside for consumers.
But it's going to be a weird, weird sort of dystopian sci-fi future when that happens.
Everybody will have their own internet tokens.
Yeah.
Or maybe it'll just crash and just keep using the dollar and the pound and the euro and
stuff.
Buy gold, Joe.
Yeah.
Could you imagine?
That'd be such a great native ad, like if we had gold ads on this show.
Well, either way, it turns out, we'll cover it here on the show, if it takes over the
world or it fizzles out, whenever it matters, we'll cover it on Linux Action News.
Go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And go to linuxactionnews.com slash contact for ways to get in touch with us.
And just a quick note, the live shows at Linux Academy are back.
Anthony, the CEO, and I will be hosting three live shows over the next three weeks.
Get all the details at linuxacademy.com slash live, with new stuff being launched each live
stream.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Ressington.
Thank you for joining us.
And we will see you next week.
We'll see you later.
