Hello, and welcome to Linux Action News, episode 215, recorded on November 14th, 2021.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
We start this week with the curious case of the latest Raspberry Pi OS, now based on Debian
11, which was released back on August 14th, 2021.
Yeah, I think this latest version of the Raspberry Pi OS did take a bit longer than I think the
team was hoping, Simon Long detailed in the release notes that some significant efforts
went into bringing the Raspberry Pi OS's desktop environment, LXDE, from GTK 2 to GTK 3, and
now running on top of GNOME's Mutter project.
Yeah, writing about that, Simon said, quote, up until now, most of the desktop had been
using version 2 of the GTK toolkit.
But increasing numbers of Debian applications are using GTK 3.
So to try and keep things consistent, we've upgraded all of our software and the desktop
itself to the newer version.
Yeah, so GTK 3 was released on February 10th, 2011.
At this point, and with the launch of the LXQ project, I think a lot of us in the community
just sort of assumed LXDE would never get ported to GTK 3.
I certainly had.
Yeah, I mean, the amount of work it was going to be to port LXDE from GTK 2 to GTK 3 was
cited way back when as one of the reasons to launch LXQ in the first place.
Yeah, you're right.
But you know, if you want to stick with LXDE, there is no road to the wayland future paved
in GTK 2.
Simon notes, quote, one of the changes which was prompted by the move to GTK 3 is that
we're now using the new window manager called Mutter instead of the open box window manager
used in previous releases, end quote.
So along with some nice to have effects, Mutter also means that future versions of Raspberry
Pi OS will be wayland compatible in theory.
They're not there yet, but Mutter and GTK 3 kind of lay the groundwork for that.
There are some complications, though, because the window manager is responsible for drawing
the title bar and the window frame around all of your application windows.
But Mutter is a compositing window manager, which means that rather than individually
drawing window frames right onto the existing windows on the screen, it draws all the windows
to a memory buffer off screen first, where it can create a complete image of the entire
screen.
And then that whole image is sent to the hardware to be displayed.
Right, but that composition happens in memory.
And we have to remember these are Raspberry Pis we're talking about here, and not all
of them have a lot of RAM.
So one drawback to Mutter's approach here is it needs comparatively a lot of RAM.
So it seems that Mutter can only run on Raspberry Pis with two gigs or more.
As a result, on Raspberry Pis with less, the older open box window manager will still be
used.
I suspect that right there might be one of the reasons it took so long for this work
to get done.
It just wasn't going to be viable on some of those low end systems.
Yeah, there's so many questions around this.
Like how long did it take?
All these things I want to ask, linuxactionnews.com slash contact, let's get in touch.
But I will reach out myself and try to find out because I agree, like, there had to be
a factor.
They kind of waited until enough of their devices had enough RAM to actually take advantage
of this stuff.
Along with that question, I also would like to know, are they essentially becoming the
de facto caretaker of LXDE now?
And are they okay with that?
Did they consider switching to LXQt and supporting that project instead of having to do all this
work perhaps by themselves?
Yeah, that's a that's a good question, too.
So we'll try to get answers to those relatively soon.
But while looking into the new release, we did see some reports of various compatibility
issues, including some hats and new versions of libraries that are not yet compatible with
some of the Pi specific applications out there.
So you're going to need to check to make sure that whatever you're using on your Raspberry
Pi is compatible with Debian 11.
And in some cases, you may have to wait until the developers have had time to update their
software to be compatible with Debian 11.
Indeed, these issues were enough that Tom's Hardware wrote in their own coverage of this
release that quote, right now you should treat Bullseye as a curiosity and hold off using
it as your daily driver.
If you have mission critical projects, stick with Buster.
It's tried and tested with two years of updates and improvements.
All of your hats and cameras will work with Buster.
Whereas with Bullseye, they might if the software developers had the time they need to update
their drivers, which many have not.
If you told me about a year ago or more that we'd be following enterprise Linux releases
as closely as we are now, I'd probably have had a laugh.
But 2021 is the make it or break it year for the post traditional CentOS transition.
So we've been paying closer attention this year.
And let's start with the release of RHEL 8.5, which out of the gate, the release notes touch
on collaboration with Microsoft in multiple areas, including SQL Server and.NET 6, which
was also just recently released.
Now the ability to run SQL Server on RHEL is definitely not new.
But what is new is having it supported by a system role.
What's a system role?
Well, you can think of them as a collection of Ansible roles and modules that provide
a stable and consistent configuration interface for RHEL, something you can automate around
and lets you manage multiple instances at scale.
Now Microsoft SQL is included in that collection.
Indeed.
And reading between the lines, it kind of, well, I don't know exactly.
But I got the strong hint that there was a little more collaboration than normal between
Microsoft and Red Hat around this release.
And some of that was around getting.NET 6 into RHEL 8.5, which is a pretty new release.
And it seems that Microsoft may be hoping that their new.NET six month release schedule
means more frequent updates to.NET that's being packaged up by the distros.
It was a big kumbaya, but don't fear all these Microsoft things, of course, are just optional.
And like every major release, there's lots of updates to all of the packages throughout
the entire distribution.
Also notable is something product manager Siddharth Nagar said, quote, RHEL 9 is actually
our first major release tied closely to Stream.
Yeah, look at Stream go.
Not only is it going way up in the repository stats.
So I mean, there's actual users out there.
But Stream has quickly become the collaboration point for the entire RHEL ecosystem this year,
which is exactly what they wanted to happen.
Speaking of which, one of the big differentiators of the new RHEL clones is how well can they
keep up with Red Hat Enterprise Linux?
Seems that Alma Linux is doing pretty good right now.
They're clearly leading the pack, having just released Alma Linux 8.5 just two days
after RHEL 8.5.
No word yet on Rocky Linux 8.5.
Speaking of things enterprises love, Canonical has made it a little easier to run Ubuntu
virtual machines on Apple Silicon Macs with the latest version of MultiPass.
If you're not familiar with it, MultiPass is a slick tool that Canonical has been making
for a little while that lets you quickly stand up Ubuntu instances inside a host native virtual
environment.
So I recently gave it a go on an M1 Mac mini.
And I have to say, I was impressed.
It was very fast to set up.
And I had an Ubuntu VM running that I could SSH into probably from installing the tool
to getting the VM up and going in under a minute.
Well, in addition to that Apple Silicon support, the new MultiPass release also introduces
aliases, which lets you link commands in the virtual machine to your host terminal session.
I like that a lot.
So it's essentially like an alias on steroids.
So you can have commands that you type in your host terminal.
So you just randomly open up a terminal and type it and execute it inside that Ubuntu
VM.
That's that's like almost container level access to my VMs.
On top of that, MultiPass 1.8 makes LexD the default back end on Linux, improves support
for the Monte desktop environment, and of course has the typical collection of nice
to have bug fixes.
Canonical also adds that with this update, MultiPass is now supported on every major
desktop platform.
And they point out that that gives developers a consistent environment, regardless of the
desktop OS they choose to use, they can just run it all in MultiPass.
Also this week marked the release of QMU62 RC0.
This is the first release candidate for a big update to a project that plays a very
important role in the open source Linux virtualization stack.
And this new release includes support for Apple Silicon and has a lot more important
RISC-V updates included as well.
And speaking of Apple Silicon, lead Asahi Linux developer Hector Martin has managed
to get KDE Plasma up and running on an M1 Pro MacBook Pro 14 inch.
It's a lot of pros, Wes.
It's all software rendered at this point we should mention.
And more work is needed for Wi-Fi and trackpad and several other devices, but storage and
other PCI devices are looking pretty good.
If you're starting to feel like this is a lot of M1, what's going on here?
Everybody talking about Apple Silicon.
I think you're not alone.
In fact, Hector tweeted kind of addressing this and why he works so hard to port Linux
to Apple hardware.
And he said, here's an example.
I've had this test machine running with GLX gears with software rendering pushing 60%
CPU usage all night with the lid closed and the display on.
And he says, the machine is barely warm to the touch and still nearly silent.
This is why I'm porting Linux to the M1.
He also joked he'd come up with a Plasma setup that was, quote, notch compatible.
But RFS fans are following some proposed on disk format changes to the free file system.
Prominent file system developer Joseph Basak is working on an extensive set of patches
that will address some of the, quote, more painful parts to the file system's design.
Yeah, he's doing this work under the extent tree v2 label.
And to date, it looks like about 80 patches, but it seems like that could just be the start.
And this is going to be a long term thing.
Over the next year, Joseph is working towards changes to address the locking contention
on global routes and the issue of block group items being spread throughout the extent tree.
In total, I think you'll probably see more than a year's worth of work here.
And there's still a lot that needs to be done just to prepare.
Unfortunately, there's just no way around the fact that some of these improvements will
require on disk format changes.
So users will eventually need to convert their butter fs file systems to the updated format
when the time comes, and when they eventually get the new version from the distribution.
If you're curious to learn more, Joseph goes into some excellent details and defines a
lot of core butter fs file system terms in his blog post, which we'll have linked in
the show notes.
It's really worth a read.
He takes some time to point out what their options were, why they went with the path
that he's trying.
And I think overall, it just shows a real investment in one of our favorite file systems.
Linode.com slash LAN, go there to get $100 in 60 day credit on a new account.
And of course, you're going there to support the show.
So it's Linode.com slash LAN.
Linode is the Linux geeks cloud.
It's so great.
We host everything there.
We have 11 data centers worldwide, and they've been hard at work for 18 years to build the
best service possible to just make it great to run your application on Linux.
And they obviously have really good performance or else we wouldn't host everything we've
built for the last couple of years there.
I'm a performance hound.
Only I'm sniffing out performance, you know, like Levi sniffs out treats, I sniff out performance.
And Linode definitely checks that box.
In fact, I have been really impressed with how much I can even load on the $5 a month
Linode.
I have I originally set up a Linode to do sync thing between the studio and the RV.
So that way I had like an intermediary box that could like kind of cash stuff and then
really blast it down to the RV when I get a connection.
And Linode has super fast network connection.
So that's absolutely solid.
But then as time has gone on, I've done things like I've also used this now as a jump host.
I also use it now.
I just set this up over the weekend to set up a Starbound server so I could play Starbound
with the kids on our own server.
And it's so great for that kind of stuff because I already had Docker all set up because that
just takes seconds to get going.
They have one click deployments for all kinds of game servers or productivity services or
development servers that you might want to use.
And they have the best customer support in the business.
So if you ever run into any problems, they can help you.
And then on top of that, if you'd just like to do it yourself, they got a ton of great
guides so you can stand up the system on your own and follow a guide if you ever get stuck.
They've been rolling out blazing fast new MVME based block storage.
They have a super flexible S3 compatible object storage and the easy to use dashboard brings
it all together.
So not only do I have confidence that I'm going to figure out anything that I want to
do in there, literally everyone on the JB team also knows how to use that dashboard.
It's intuitive and it's accessible.
But then one of the things that I found that I have used on a more day to day basis is
their API.
As time goes on, I probably in totality do more via the API than I actually do via their
dashboard.
It's really great.
So I know I could say that I can go on about it and tell you how great it is and how we
use it and whatnot.
But I think the best thing to do is try it yourself.
And that's why they're giving you $100.
You can actually really try it.
So head over to linode.com slash LAN.
Go grab that $100 in credit and support the show linode.com slash LAN.
And thank you to Ting for making Linux action news possible, linux.ting.com.
If you're sick of overpaying for self service, and you should be, go see how much you can
save and then take 25 bucks off that at linux.ting.com.
Here's the secret sauce.
Ting is an MVNO.
They're a mobile virtual network operator.
That means that Ting invests in areas like customer service, great rates, competitive
plans and not digging holes in the ground to stand up towers.
But they get to run on those towers.
So they can offer nationwide coverage and a great mix of plans and fast data rates at
both LTE and 5G for prices that are going to blow your mind.
And then they back that up with fantastic customer service and the best dashboard in
the industry.
I'm big on that stuff, because honestly, sometimes I just don't have the energy to call customer
support.
I don't know what it is about me.
Maybe I'm just not a big phone person.
I think that's probably it.
So I don't like calling in customer support.
And that, by the way, is also why Ting has worked so good for me.
I have been a customer since 2013, and I don't like making calls.
So I picked plans that optimize for that.
But if you are the opposite, if you're like making phone calls all the time or doing a
lot of text, they have lots of plans, lots of ways to get unlimited calls and texts.
So it's really just what works well for you.
Maybe you need a lot of data.
They got plans for that as well.
And it's so simple to switch to Ting.
Pretty much any phone will work because of their multi network support.
So just go over to linux.ting.com.
Check out your current phone, create an account and pick the plan that's right for you.
When everything lines up, Ting will send you a SIM card.
You pop that sucker into your phone once you get it, and you're going to be active in minutes
on the Ting network.
Cutting your phone bill in half has never been easier with Ting's brand new plans and
brand new prices.
Go see how much you could save and then take 25 bucks off that linux.ting.com.
Have you pre-ordered a Steam Deck, brace yourself.
We have some less than stellar news.
Valve has pushed the release back to February 2022.
A couple of days ago, Valve sent out an email to pre-order customers informing them that
the Steam Deck release was going to be delayed by two months.
All right.
Okay.
Yeah, Valve says in their shipping update, we're sorry about this.
We did our best to work around the global supply chain issues.
But due to material shortages, components aren't reaching our manufacturing facilities
in time for us to meet initial launch dates.
They do note that all reservation holders will keep their place in line, but dates will
shift back accordingly.
You know, Michael Larbell over at Fronix actually kind of points out a sort of decent silver
lining to this news, though.
Like he says, this two extra months will allow Valve more time to optimize their Linux stack,
optimize Proton, continue work on the RADV Vulkan driver, as well as the other components
that make up SteamOS.
It may also give some game developers a little extra time to get their stuff ready as well.
And speaking of, we did get some new details about the Steam Deck and its Arch-powered
operating system from the Deck developers directly.
Yeah, we did.
On Friday, Valve hosted the Steam Deck Development Livestream, really targeted at developers
who are porting games over to the Deck.
And it's pretty informative, so we'll have a link to the full stream in the show notes.
Along with learning that SteamOS will use Pipewire.
I mean, hey, how could they not?
Valve shared that SteamOS 3 would be made available to the general public in the near
future.
So do you plan to release SteamOS as a standalone, general purpose OS?
Yeah, we definitely plan on releasing SteamOS as a separate operating system.
We don't have exact timing on that.
Again, it's really kind of the same answer as Big Picture.
We're really focused on making sure that Steam Deck is a great experience.
But we hope to release it to other platforms soon.
Like Fedora Silverblue and others, it seems SteamOS will have a read-only system partition
and utilize OS tree-like updates for safe and reversible system upgrades.
Will SteamOS have a read-only, immutable OS file system?
Yes.
So by default, the updates, the OS updates will be distributed as a whole OS image.
But you can enter a developer mode, which will let you modify the file system and install
packages like a normal distribution.
That could make SteamOS a compelling Arch desktop, even outside of the Deck.
And definitely something we'll be digging into in the future.
Even with this file system design, Valve said you will be able to load third-party apps
like any other Linux PC.
Yeah, so you can totally install any game like you would on the Steam desktop.
You install the application and then add it to Steam and it'll show up just like it would
on a regular PC.
So this stream focused on developers actually gave us the first real nuanced explanation
of some of the compatibility issues developers can expect when bringing their Windows game
over to Linux utilizing Proton.
It's pretty common for a new title to work perfectly out of the box without any work
needed on the developer's part.
That being said, the overall surface area is quite big and there's no shortage of gaps
left to cover.
Running into Proton coverage issues could mean a delay before a newly released title
can be enjoyed on Deck.
Here's some general tips on technology choices that might help avoid those gaps.
We understand those are only likely to be useful for a project in early stages of planning.
A good rule of thumb is that there is more room for error in Proton when the game uses
massive external libraries, as opposed to code that it includes in its own build.
For example, a built-in browser engine like the Chromium Embedded Framework is less likely
to have issues than MSHTML.
In general, we don't recommend launcher Windows, but if you have one, a library such
as Qt is trivial to support, unlike something like.NET WPF.
For video playback, libvpx or bink are better alternatives than Media Foundation.
Complex or invasive anti-temper or anti-cheat frameworks can be hard or even impossible
to support properly without direct involvement from their provider.
Another thing that can be a huge help is for our team to be able to test and debug the
game pre-release.
We also got our first in-depth explanation on Valve's view of native Linux games versus
just targeting Proton.
On the graphics side, the latest APIs like DX11 and 12 are supported through purpose-built
drivers based on Vulkan.
If there is a choice between the two APIs, things are now at a point where DX12 through
Proton tends to be a better experience in cases where it's also a better experience
on Windows.
Unlike DX12, DX11 translation is heavily reliant on dynamic shader recompilation, which can
induce stutter.
To address this, we have developed a robust shader precaching system as part of Steam.
It lets all the needed permutations be processed before the game starts.
This system is currently being improved for the deck so that the processing is done on
our servers ahead of time, as opposed to the user's machine.
For Proton as a whole, graphics API translation also tends to be the main source of significant
CPU overhead.
This has been a bit of a discussion like on Linux Unplugged, but it seems genuinely the
Valve folks don't have a particular dog in this hunt beyond just looking for the least
friction possible for game developers.
And you get the impression they've seen some really half-assed Vulkan ports in their time.
And so you get a general message from the stream, and that is, if you're going to go
Vulkan for your Linux port, you really need to go all-in.
That the biggest opportunity to improve Proton performance is to target Vulkan directly.
It's no small task, and as such, we only recommend it in cases where it would make sense to also
focus on Vulkan as your primary API for Windows.
I think the most positive thing I took away from this Valve event was that every Linux
gamer's gaming experience is about to be changed forever, even if you never own a deck.
The very first one has to do with Proton testing, and people are wondering if it's going to
be part of the game submission process moving forward.
Yes, actually, we're going to wrap that up into the deck-verified testing that happens
before game release, which will give us a pretty good opportunity to uncover some of
these Proton issues before the game makes its way to users.
That's huge.
Valve will work with game developers before they've released their game to make sure it
works with Proton.
Not every developer will take them up on that offer, but it does mean a lot more games are
going to run on Linux on day one, and that's a huge improvement for everyone using Linux,
deck or no deck.
It's great to see that, and we'll follow these developments and everything else in the world
of Linux and open source, so be sure you go to linuxactionnews.com slash subscribe for
all the ways to get new episodes.
And linuxactionnews.com slash contact for ways to get in touch.
Swag bags are back, and now a new swag bag with the Jupiter Broadcasting Journal.
That's the J.B. Journal.
Go check it out at JupiterGarage.com.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us, and that's all the news for this week.
