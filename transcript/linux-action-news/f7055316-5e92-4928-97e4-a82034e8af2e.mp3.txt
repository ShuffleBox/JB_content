Hello, and welcome to Linux Action News, our weekly take on Linux and the open-source world.
This is episode 52, recorded on May 6th, 2018.
I'm Chris.
And I'm Joe.
Hello, Joe, and congratulations on the one-year mark.
And we kick it off this week with a goodbye to 32-bit.
Yes, the march of progress continues.
And this week, we've learned that Ubuntu Mate and Ubuntu Budgie are both dropping 32-bit
ISOs going forwards with the 1810 cycle.
So 1804 is going to be the last 32-bit ISOs that you're going to have for those two flavors
of Ubuntu.
I would imagine that other flavors will follow suit this week, but right now, I think they're
the only ones that are confirmed.
So do we really care about this?
Do we have any 32-bit-only machines at this point that are even worth using?
I don't think I could say that I personally care.
But I was surprised to see that Ubuntu Mate was one of the first leading the charge here.
Because when I think of Mate, I think of it as a distribution for systems that maybe are
a little older that you want to get some new life into.
But when you look at the project's rationale, it's pretty hard to argue with this.
One thing to remember, starting with 1804, it's still early days, but they are getting
hardware telemetry back now.
And that's starting to give the project some early indications, including the fact that
a lot of people that are installing the 32-bit version of Ubuntu are doing so on 64-bit hardware.
So they look at that, and they also look at the fact that really nothing 32-bit has shipped
for 10 years, and that those resources could be spent maybe supporting the ARM version
even better.
And when you consider that only 10% of Ubuntu Mate users are even using the 32-bit version,
I really can't argue with their logic or their rationale.
But I imagine it will definitely impact some folks in our audience.
Because really, 32-bit hardware is still perfectly good as long as it boots and powers on, and
you just want to browse the web.
But the world is moving on.
What about you, Joe?
Don't you have a 32-bit machine kicking around?
I do.
It's not something that I use regularly.
I only really test lightweight distros on it occasionally, and older distros.
It's a very old machine.
I think it was one of the last laptops made that wasn't a netbook that was 32-bit only.
And I just can't really do much with it.
Even if you get, say, even Lubuntu running on it, yes, you can get that running.
You can get a browser up.
But most websites are so heavy these days that it's just painful to use anything, especially
anything multimedia or anything like that.
I mean, maybe if you're just reading PDFs or just reading RSS feeds or something, it
makes sense.
But if you really, really want to set something like that up, you can do it with an Ubuntu
minimal installation, and all the packages are still there to get what is effectively
Ubuntu Budgie or Ubuntu Mate.
It's really just the ISOs that they are not going to be making available now.
So I don't think it's as big an issue as some people would like to say, but we saw this
last year, didn't we?
This ending of 32-bit support with Arch and various other distros.
And I think 2018 is the year that 32-bit will just die altogether, really, apart from the
odd specialist distro, maybe.
But one thing you mentioned there about Ubuntu Mate being associated with old hardware, that's
something that Martin Winpress is very keen to not have happen, that association.
Because as far as he's concerned, it is just a modern distro.
And okay, it might have a traditional paradigm, but that doesn't mean that it is aimed at
low-end hardware.
I think something like Lubuntu with LXD or LXQt, that is aimed at low-end hardware.
But don't say that about Mate.
You might upset him.
Or your favorite, Ubuntu.
Actually, that's one of my favorite things about Ubuntu Mate, is that you can take advantage
of absolutely modern hardware and have that traditional paradigm workflow for whichever
one that you potentially like, because you can switch between a bunch of different layouts.
It's one of the tools they have built into the distro.
So it really accommodates that.
But I think it still has, Mate itself might have that association.
Perhaps not Ubuntu Mate, but Mate itself.
But you look at this, it's really about the economics for the project.
There is less to test.
There is less security surface that they have to worry about.
There is a simplification in the code that they're shipping.
And there is a focus for the project.
Not to mention, it makes it easier from a QA standpoint, because they can focus on 64-bit
hardware and stop trying to keep some 32-bit old machine alive that the project may not
even have available to them.
32-bit hardware is getting scarcer and scarcer.
So there is all of these economic factors that make the project more efficient, it helps
them get their job done better, and it gives them a simplification, which you know they
could always use.
It's too hard of an opportunity to pass up.
And like you said earlier, I think we're going to see this spread.
Yeah, I wonder if we're going to be sitting here next week talking about all the other
flavors maybe.
I don't know.
But one flavor that you wouldn't expect it to be would be Lubuntu.
And they made the news this week on one of the Jupiter Broadcasting shows, didn't they,
on Ask Noah, when Simon Quigley came on and announced that finally they're moving to LXQt
for the main version in 1810.
This is a great milestone to see because the project's been working on this for like three
years.
We're going to finally see it happen in Lubuntu 1810.
It'll be the first release to ship with LXQt as default.
Simon goes into details on Ask Noah.
But the basics are is that the primary goal here is to offer users a lightweight computing
environment that will run on machines that have a wide range of hardware, some older
hardware as well as more modern hardware, but use a mature LXQt environment.
Now you probably guessed that Qt in there is Qt, which is a modern toolkit that the
Plasma desktop is built off of.
So you get a lot of the benefits of Plasma's desktop, the Qt 5 toolkit, on a lightweight,
faster, fast, simple desktop environment.
I don't know if it's there for me personally, but I am really watching this with a lot of
anticipation.
I could see after the 1804 release cycle, so my next distro could easily see be powered
by LXQt.
Well, I had a quick look at Lubuntu Next, the 1804 version today, and I was quite impressed
with it.
It's been a while since I checked in with LXQt, and it's come a long way.
There are a few things that are slightly not right for me, and things that could be worked
on, and they've got, well, two years before the next LTS.
So I can kind of see where you're coming from with this, because it's just so lightweight
and simple.
And because it is based on Qt 5, it means that it is modern, and you're going to have
all of the benefits with high DPI support and all the rest of it that Qt brings.
And they could not stay on LXDE for another LTS after this one, because LXDE is just totally
dead at this point, isn't it?
The only people who are interested in maintaining it are the Raspberry Pi Foundation, and is
that really relevant?
I suppose it is to the however many million Raspberry Pis they've sold, but to the rest
of us in the Linux community, I think we just have to accept that LXDE is dead.
I have a real soft spot for it, because it is so lightweight.
I've loved it on low-end hardware, but I think you just have to accept the future, much like
with the 32-bit thing going away.
You just have to accept LXDE going away, and it seems to be an admirable replacement to
me.
I agree, and I wouldn't be surprised if the Raspberry Pi Foundation doesn't just embrace
the Qt version down the road.
When this transition is complete in the 18.10 timeframe, we're going to see the discontinuation
of Lubuntu Next.
It'll just become main Lubuntu, and the current LXDE version, the 18.04, will become known
as Lubuntu Classic.
I do wonder how long that's going to last, though.
I wouldn't have thought until the next LTS.
Yeah, I'm not going to bet against you on that one.
Well, speaking of things that might not be sticking around for a while, it seems the
Korora project has run into some troubles.
Yeah, now this is a real shame, because Korora is a great distro, as far as I'm concerned,
or it was, maybe we have to talk about it in the past tense at this point.
Because it takes Fedora and just removes all the fiddling, and it's got a really great
default package set, and just all of the defaults generally are really easy, and I think it
is the ideal introduction to Fedora for new users.
So now that it's probably going to go away, that kind of sucks.
Yeah, this week the project took to their blog and said for the foreseeable future,
they will have no updates, they will not be tracking Fedora 28.
Now the repositories will stay online, but there's not going to be any new packages or
updates.
They need to take a breather.
They say they have to just take a break, and they will keep the servers online with the
intention to come back eventually.
Yeah, and there's a comment on Reddit from one of the Korora developers, which basically
says that the lead dev just disappeared.
Yeah, I saw that thread too.
And I read through it and was shaking my head almost the entire time.
Not because I was disappointed, but because I feel like I've seen this before.
Anyone who's done some distro hopping in their day has run into a distro that they just love,
and then the project comes to an end.
And the story often starts with a lead of the project that is really the vision person,
the primary driver of the project, and it just becomes too much because of internet
trolls or responsibilities or insert various life reasons, and they go AFK for an extended
period of time.
And then you have the lieutenants of the project who do an admiral job just keeping things
running for as long as they can, maintaining packages.
As long as all the services stay online and the domains are paid for, they can kind of
keep things moving.
And it just sort of slowly devolves into a demoralized story where the rest of the team
becomes burned out.
They feel like they can't affect change.
And of course, the entire time, they're trying to keep everything public-facing, looking
all great and smiley faces.
But the even deeper troubling thing here is Korora is just one of many stories this week.
In fact, another one is Void Linux.
Void Linux is going through almost the same exact issue.
Their project leader has gone MIA.
The remaining core team doesn't have access to some of the essential infrastructure tools
like their GitHub page and the domain names for the most popular domain.
It's just an awful situation.
And Void Linux and Korora Linux have very similar stories here.
It's enough to put you off using a small distro altogether, isn't it?
Just in case something like this happens.
Yeah, I'd really hope not, Joe.
But I've gotten several notes from listeners this week who have said just that, that they
feel like they've been burned by going with a small distro.
And if you think about what that means, that's very dangerous because Linux thrives in an
environment where any idea is technically capable of succeeding.
We wouldn't have Ubuntu MATE.
We wouldn't have elementary OS.
We wouldn't have a bunch of other distributions that started with one or two people, in some
cases just one person, if people didn't take a chance on a small distribution.
At the same time, as Linux becomes more of the operating system for your new developers,
the web developers or your sys admins and your DevOps category labels that people like
to toss around, as Linux becomes that OS, the tolerance for this level of failure where
the OS you're using just becomes unsupported is going to be low.
And I think it will force a consolidation to larger distributions, which is sort of
creating big Linux.
Maybe we've always been there, but I've always had the feeling that a new idea, something
like a Solus could come along and be disruptive and just on its technical merits could get
a decent user following.
But Solus is a great example.
Elementary OS is another where, yes, there is some governance in place, but both of those
projects are very much driven by one person.
And if that one person's circumstances change, then who knows what can happen with it, especially
if those circumstances change quickly.
And as we know, that can happen in life.
And so you do worry about them.
And that does put me off moving over to one of those types of distributions, even though
Solus is technically absolutely brilliant.
I mean, EO package as a package manager is just so fast and so straightforward and powerful
at the same time.
And not to mention all of the GUI tools that Ikey's built on that as well.
But I'm just reluctant to invest in it until it gets to a certain size and it can't get
to a certain size if people don't invest in it.
And so you get this vicious circle happening.
And I think that you might be right that it's very difficult for smaller distros to break
through and become the next major one.
So I actually want to nitpick a bit on what you just said.
I would not compare Solus and elementary OS anymore in light of what we're seeing with
Void and Karora.
So in my eyes, a distribution like elementary OS has several clear paths to monetization.
Maybe they're not making as much money as they'd like with the App Center.
And maybe a lot of folks aren't adding a dollar amount when they hit that download.
But there are clear built-in paths to revenue to make a distribution sustainable.
And as a result, they've slowly added staff.
There's only a couple of people that are technically full-time, maybe even one.
But they have a structure in place that gives a path to revenue as their user base increases.
Then you look at distributions like Karora and Void Linux and perhaps Solus.
I'm not sure what the situation is there.
They have a Patreon, I suppose, where there's not a clear path to revenue sustainability.
And I think that's what actually makes the difference.
I'm going to be honest.
You look at podcasts.
Podcasts that have advertisers stick around for decades.
Podcasts that don't have advertisers stick around for maybe 60 episodes.
It's the same thing.
When you put all of yourself into making something, having a path to revenue sustainability makes
the difference between you disappearing and sticking around.
And I know, as GNU slash Linux users, we hate to admit that money, good old capitalism plays
a role here.
But it, I think, does.
So I think the lesson from Void and Karora is that if a distribution doesn't have a clear
path to long-term sustainability when it comes to revenue, it's risky to bet on that distribution.
It doesn't mean that you shouldn't use the distribution.
I think it's great.
I love Arch Linux as an example.
But I think it's something you at least have to factor into your decision when it's part
of your workflow or your development setup or perhaps a production environment.
You have to consider these factors.
Well, that is true.
But one of the greatest things about Linux is that you can migrate over to another distro
relatively easily.
In some cases, it can just be copy your home directory over.
Job done.
Switching from Ubuntu to Fedora, say, it can be so easy to migrate.
And if you're on a smaller distro and then things go wrong with it, then you've always
got that backup of the many other big distros that are rock solid.
That's not always the case.
So take Void Linux, for example.
One of the things that is standout about Void is that it doesn't use systemd.
There are less and less choices.
I mean, it's coming down to Dev1, FreeBSD, Gen2, and several others that don't use systemd,
and that's it.
So there were unique aspects amongst others, not just the failure to use systemd or the
neglect to use systemd or the decision, but there were other factors about Void.
But I think that's something to consider.
There are certain distributions that offer something no other distribution does, much
like I feel Solus does as well and elementary OS, that there really is no one-to-one transition
in the Linux community.
It's about as disruptive as moving from, say, Mac OS to Linux.
I don't know, though.
I can see your point that it is maybe not quite as easy as I'm saying, but if you can
get the same desktop environment on a different system, then it can be broadly similar.
Yes, some of your workflow might change, but you can at least get it looking similar and
laid out and get all your files in the same places.
Maybe less so with something like Void, which is quite different, but certainly if you're
looking at something that's based on Ubuntu, I mean, to go from elementary, well, I suppose
again that's a bad example because of Pantheon, but yeah, maybe I'm wrong and maybe you're
right.
I don't know, Joe.
As you started describing, I thought, really, most of these end users are probably just
firing up a web browser once the desktop session starts, so maybe it matters less and less.
It's really on the server where it matters more now.
Yeah.
Well, a web browser and a terminal, I think.
Fair enough.
To be fair.
Yeah.
Absolutely.
LinuxAcademy.com.
Go there to learn more about Linux Academy.
Start this show and sign up for a free seven-day trial to a platform that is built by Linux
enthusiasts and packed full of information to teach you more about everything built around
Linux and the core essentials.
Linux Academy is a full-featured training library with everything you need to learn
new skills and advance your career.
With self-paced, in-depth video courses on every Linux, cloud, and DevOps topic, my favorite
feature is the hands-on, scenario-based labs.
Well, maybe my second favorite feature then would be the instructor mentoring full-time
human beings that are ready to help and happy to do so.
And when they're not helping you, they're constantly adding and revising content on
Linux Academy.
Linux Academy just released 21 new courses and a couple of cool new features for learning
AWS, including some quests and challenges, 150 hands-on learning activities, and a new
episode of Scale Your Code, which I used to talk about quite a while ago, which is a one-on-one
interview that they do with people in the industry where you can pick up the things
they've learned, how to scale, how to build a team, how to create a culture in a large
IT environment.
Scale Your Code has all of that, and it's part of Linux Academy.
It's just one of the many things that makes your subscription valuable, plus the practice
exams and quizzes, which will help you get ready for the big certification exams.
Linuxacademy.com slash unplugged.
Go there, free seven-day trial, and support the show.
Linuxacademy.com slash unplugged.
Okay, let's talk about Fedora 28 that was released this week, and there's a lot to cover
here.
Workstation, server, atomic host, even atomic workstation.
So I think it makes sense to start with the desktop version that they call workstation,
and it's a pretty solid release, isn't it?
Solid.
The jury is still out.
I'm pretty impressed so far.
Nothing like I've ever experienced would be the way I would put it.
This is Fedora, but not like you know it.
In a weird way, it's just like you know it.
If you've been using Fedora release after release, this is a pretty incremental update.
If you've been using a different distribution and you haven't tried Fedora out for three
or four releases, your mind is gonna be blown.
For the first time, they're making it easy for users to just turn on third-party software
repositories, like RPM Fusion, like the proprietary Nvidia driver, like Chrome.
When you launch software and it has a blue drop-down box that comes up and says, would
you like to turn on third-party repositories?
You hit yes or enable, and now you have all of the software.
All of the software that in every review for the last, well, since Fedora first shipped
a release, I complained was a pain in the arse for people to install, is now just a
click away.
One click, and now you can search for Chrome in the GNOME software, and you can install
not Chromium, you can install Chrome on Fedora after you've just installed it from the ISO.
If you decide maybe you've made a bad moral decision, you go into the software sources
preferences or whatever they call it, and it's a big red remove button.
You click that, and all of that proprietary garbage is gone.
Yeah, Fedora, but not as we know it.
I think that's the only way to describe it, because Fedora has been known as being a freedom
loving distribution.
It's not quite FSF standards, but it is very much known for being the free software distribution.
For them to make it so easy, personally, I think it's a great decision, because it's
opt-in, and you could easily say, no thanks, I'll stick with free software only, but it
just makes it so much more accessible.
It's one of the things that has put me off before.
Yes, okay, I do know how to get RPM fusion working and all the rest of it, but to make
it so easy, it's suddenly a much more appealing prospect to run this on the desktop.
You got to look at this from the software developer's perspective, where they have to
test in Chrome as part of their job.
They have to use machine learning as part of their job.
That's why they were provided a laptop with an NVIDIA card in it to begin with.
Fedora is just simply trying to address that need, while also not diminishing the experience
for users who don't want any of that crap installed, and they've really walked the line
here in a way that, after all of the years of really begging for this from the project,
I never imagined it would be done so well.
They've implemented it in a way that doesn't offend people that just want free software,
but yet they've made the experience simple and clear enough for those who've just switched
to Fedora and want to get to work.
I'm really impressed, and that polish extends to all aspects of Fedora 28's release.
It is a cohesive experience.
Let's focus on the server and cloud spins for a moment, because this is becoming a more
and more compelling aspect of Fedora.
I have had a Fedora 24 cloud install up on Digital Ocean since Fedora 24 came out, and
I loaded Nextcloud inside a Docker container.
Now one of the things I've been doing, like a test lab, is upgrading that sucker every
single Fedora release since 24.
I upgraded it this weekend to 28.
I have yet to have anything break.
I always reboot the whole system and make sure Nextcloud's working.
Granted, it's a test lab machine, but that is a lot of upgrades I have done now.
And I think that's maybe the bigger story here.
So there is a small support window for Fedora releases, and I think that's kind of the cloud
that hangs over Fedora when you go to use it in production.
And to address that, the project is taking on a lot of different tracks that sort of
make that release window irrelevant.
So they have modularity, which maybe we can talk about more in a moment.
And then they have made a ton of improvements to DNF.
And then they have these cloud and server spins, or additions, if you will.
The cloud edition is a minimal install that's great on a VPS.
I put it on a Digital Ocean droplet, and I loaded Cockpit onto that sucker, and I've
been managing now for years, actual years now, upgrade after upgrade, running Nextcloud.
So this weekend, after having just another terrific Fedora experience, I made the decision
to consolidate three of my systems down to one Fedora 28 system, managed all with Cockpit,
using containers and virtualization.
And it's a really top-notch experience.
First of all, one of the things that I appreciate as a former sysadmin is the documentation
around Fedora has really built up over the years.
And it's not hurt by the fact that a lot of those commands you can use on CentOS, and
you can use on Red Hat Enterprise Linux.
So there's just so much documentation these days.
Like peak Ubuntu documentation, I feel like that's where Fedora is reaching now.
But the confidence they've given me now in release after release upgrades, working, has
really changed my thinking about the support window.
And then you combine modularity, which you got more information recently when you had
a chat with Matthew Miller.
Yeah, I had a great chat with him on the first episode of Late Night Linux Extra, which is
a new show that I've started, latenightlinux.com, get the plug in.
And it is something that I could see a lot of people really using.
He talked about people using different versions of Node, for example.
And if you upgrade to a new version of Fedora, you don't necessarily want to upgrade the
version of the software that you run in.
And having that modularity does mean that it is less painful to have such a short support
window.
Right.
And the idea there is you could just install a version of Node.js and then the OS can float.
Now you combine that with containers and virtualization, and upgrades start to become less and less
relevant.
They're more of an implementation detail than they are the core of what's running all of
your applications.
I've now gone through several releases and I'm still running the same exact Nextcloud
setup and everything's working great.
And the base OS has made considerable changes in the meantime.
And it's really just completely unaware, Nextcloud is just completely unaware of any of it happening.
And so really in summary, I'm so impressed with Fedora on the server now that I'm going
to consolidate several of my different VPSs into one running on Fedora 28, using Cockpit
to manage those containers and those VMs.
And I'll just keep upgrading the base OS and continue to use Cockpit to manage it, which
is a fantastic remote web GUI.
It's nothing like the webman of the past.
It's really one of the best remote administration implementations I've ever seen from not only
a functionality standpoint and integration standpoint, but also from a security design
standpoint.
And it's something I don't think the project is getting enough credit for.
It is something that back in the day we would have been blowing our minds over.
And now we're like, oh yeah, whatever, it's just something Fedora has.
No, you should really go look at Cockpit.
It's pretty great.
Now all of that said, I'm still not putting on my workstation.
In fact, there was sort of a thrill I had.
I had my Kubuntu workstation in front of me with a bunch of SSH windows into Fedora boxes
this weekend.
That was my weekend.
And I'm not switching out my main workstation, because when it comes to GUI applications
and desktop environments, they are less forgiving about some of these upgrades.
It's less transactional.
There's more esoteric configurations and extensions or applets.
And I just still don't trust a eight or nine or 10 month window for my distribution and
my desktop environment.
I want that to be static and stable so I can get my work done.
But my server, where things are containerized and isolated and virtualized, that's a different
story these days.
It's sort of flipped for me.
And it is a very stock experience, isn't it?
Similarly with the spins, I tried out the XFCE spin and it looks very much like stock
XFCE.
It's not quite 100% stock, but it's much closer than something like Xubuntu that I'm used
to.
And I don't know, you can see a distro like Ubuntu taking GNOME and adding some real value
there.
Whereas Fedora, I suppose the value is that it is more or less just upstream GNOME.
Yeah, and I think you can make a pretty good argument for both, especially from an end
user standpoint.
But I like it.
I kind of appreciate that they do that.
And I think they have a really good implementation of GNOME 328.
It's a solid release.
And I've talked about this extensively in Linux Unplugged, but they have done some real
pioneering work to make Thunderbolt 3 better than it is on any other desktop platform.
And that is one of the most impressive things you have to give Fedora 28.
And you're starting to see that materialized in other GNOME-based distributions, but they
pioneered the work on Bolt.
And I, as a user of Thunderbolt, really appreciate their work in that particular area.
So it's a great desktop.
It's a solid release.
I'm just not really looking forward to upgrading it all the time.
And there's promises of modularity.
There's promises of atomic workstation.
But they're just not there yet for a workstation use.
And that's kind of what I keep coming back to with Fedora.
It's getting better in all of these areas.
But for workstation, professional use, I don't know if it's there yet.
I bet a lot of people in the audience are using it right now and think I'm just crazy.
But it's just my personal opinion.
When you have to upgrade every nine or so months, it's not a great situation.
I would almost prefer to see something like Fedora rolling.
And I know raw hides a thing, but I would like to see an official Fedora rolling where
I could maybe pin certain things, like maybe a whole metapackage group like Plasma or my
web browser.
I could pin to specific versions and get back ports from Red Hat Enterprise Linux.
And I could have other parts that are rolling and moving.
I know it sounds crazy, but I think if any project could pull that off right now, it's
Fedora.
Well, you're talking to someone sitting in front of Zubuntu 16.04 still.
I haven't upgraded my main workstation.
And I'm not going to for a while.
16.04 is fine and I'll upgrade it to 18.04 in good time and then probably stick on that
for another couple of years.
So this model is very much not for me, but I can see the appeal of it.
If you are a developer, if you want the latest stuff all the time, but you don't want to
have the real bleeding edge like Arch, it seems to be sitting somewhere in the middle
of that.
I disagree because I think you could flip it around.
You don't have to just subscribe to the latest stuff.
See, I think if they pull this off right, you could sit on a Fedora workstation and
say, I want this specific version of XFCE.
I want this specific version of Audacity, this specific version of FFmpeg.
But you can let LS and all the GNU tools roll.
I don't care about the GNU tools.
Keep my grep fresh.
But I definitely want to make sure I only have this version of XFCE for as long as it's
supported in RHEL.
But I could have the Fedora version of LS.
And I think that would actually work for you pretty well.
Well, that feels a bit speculative.
And you mentioned the Atomic workstation.
They've changed the name to Silverblue, at least that's the code name for now.
I think that it's nowhere near being ready at this point for daily use, certainly for
most people, but it is good to see them innovating and thinking long term and not just being
stale.
They need to do stuff like this, don't they?
Yeah.
And one of the really interesting things about Atomic is it's created in an era of big infrastructure.
So you can like one click deploy it to Amazon.
It is available as a droplet, one click droplet on DigitalOcean.
The latest version Fedora 28, when you go to quote unquote download Fedora Atomic, there
are options on the Fedora Atomic project page to just spin it up on a VM or you can download
the ISO.
It really is a distribution that's created to run like in a VM or in virtualization.
I gave it a go and it's so cool.
I was doing things like Atomic run and then I would say like the name of a container.
And maybe that in this case, the container was cockpit.
I would say Atomic run cockpit and it would go out and pull down all of the individual
dependencies as containers and build all of this Docker stuff up and run it all in containers
and spin it up for me.
But at the same time, it was outputting like the file system changes.
So while there was a lot of container magic happening, I was very connected to the actual
work that was being done on my file system.
And I don't know how to really quantify that other than just saying that's the kind of
output and an interface that really gives me confidence in a system.
The magic scripts work and I also get output on everything they just did.
And I really had the sense that if I was building out a Red Hat shop right now and I knew we
were going to use a lot of CentOS and Red Hat Enterprise Linux, Fedora Atomic would
absolutely be a contender in this space.
It's a neat idea.
The core idea here is the base OS can be updated in transactional updates.
Something goes wrong, you just move back.
All of the applications, even some of your administrative tools, are in containers.
And they sort of float independently of your base operating system.
So you can do flip upgrades, bring a system completely up to date and not even touch your
containers.
They still stay connected.
They're still talking to their storage.
And the idea here is your release windows kind of go away.
And you just keep the transactional updates going over time and the system just runs until
the hardware dies.
Yeah, it is a huge release and there's a lot of moving parts with Fedora these days.
Yeah, I'm going to plug again for you.
Go check out Late Night Linux Extra because Joe had Matthew Miller on there to kind of
explain all of it in their own language.
And it clicks.
It really clicks when he talks about it.
Also, bonus mention, Daniel Foray is on there to talk about the next version of elementary
OS as well.
So go check that out.
And also while we're plugging, go get every single episode of Linux Action News, linuxactionnews.com
slash subscribe for all the ways to get the new episodes.
And linuxactionnews.com slash contact for ways to get in touch.
And please consider supporting the whole network at patreon.com slash Jupiter signal.
We've recently posted some studio tours and an exclusive Alan Jude hosted episode of Tech
Snap.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris Elias.
I'm at Joe Rissington.
Thank you for joining us and we will see you next week.
Have a great night, sir.
