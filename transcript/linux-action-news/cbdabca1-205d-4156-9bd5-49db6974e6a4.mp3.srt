1
00:00:00,000 --> 00:00:09,320
Hello, and welcome into Linux Action News, episode 176, recorded on February 14th, 2021.

2
00:00:09,320 --> 00:00:10,320
I'm Chris.

3
00:00:10,320 --> 00:00:11,320
And I'm Wes.

4
00:00:11,320 --> 00:00:12,320
Hello, Wes.

5
00:00:12,320 --> 00:00:16,200
From a very snowy Pacific Northwest, let's do the news.

6
00:00:16,200 --> 00:00:20,840
And let's start with this week's storm in a teacup, again, in an attempt to give you

7
00:00:20,840 --> 00:00:25,440
a little context to a story you might have seen going around.

8
00:00:25,440 --> 00:00:30,880
An Azure customer was outraged after finding himself on the receiving end of an unexpected

9
00:00:30,880 --> 00:00:35,040
LinkedIn message from Ubuntu maker Canonical this week.

10
00:00:35,040 --> 00:00:40,920
The user, Luca Bongiorni, had spun up an instance of the Linux distro on an Azure corporate

11
00:00:40,920 --> 00:00:44,560
subscription in order to test out some new tooling.

12
00:00:44,560 --> 00:00:50,160
Shortly afterwards, however, a message turned up from an enterprise development representative

13
00:00:50,160 --> 00:00:55,400
at Canonical with the ominous phrase, I saw that you spun up an Ubuntu image on Azure.

14
00:00:55,400 --> 00:01:01,260
I noticed that not quite the thing I think the user wanted to see.

15
00:01:01,260 --> 00:01:05,240
He went on to say, though, the creepiest thing to him was that it was a direct contact on

16
00:01:05,240 --> 00:01:09,660
his private LinkedIn account, which he doesn't mingle with his corporate email address, which

17
00:01:09,660 --> 00:01:13,200
means that Canonical either hunted that down, totally possible, that's a standard sales

18
00:01:13,200 --> 00:01:14,400
tactic.

19
00:01:14,400 --> 00:01:18,840
Or Microsoft had somehow linked those things on the backend, reminder, Microsoft owns LinkedIn,

20
00:01:18,840 --> 00:01:21,280
and just sort of provided that as a value add.

21
00:01:21,280 --> 00:01:26,540
He was clearly disturbed by this in part because of how he was contacted.

22
00:01:26,540 --> 00:01:29,920
And Microsoft and Canonical have obviously become good chums.

23
00:01:29,920 --> 00:01:33,560
They just recently boasted about their one year anniversary partnership and what a great

24
00:01:33,560 --> 00:01:35,240
kumbaya it is.

25
00:01:35,240 --> 00:01:39,760
But I don't think this is unique to Microsoft and Canonical.

26
00:01:39,760 --> 00:01:45,120
If you look at the terms of service for Azure, there is a little sentence in there that says,

27
00:01:45,120 --> 00:01:51,720
and if you purchase or use a marketplace offering, we may share with the publisher of such an

28
00:01:51,720 --> 00:01:58,580
offering your contact information and details about the transaction and your usage.

29
00:01:58,580 --> 00:02:02,500
And of course, if you go look at Ubuntu's legal details, they've got a whole section

30
00:02:02,500 --> 00:02:06,800
talking about their ability to market our products or services to you.

31
00:02:06,800 --> 00:02:10,920
Yeah, and even even this guy who was upset, he acknowledges, okay, the data sharing in

32
00:02:10,920 --> 00:02:13,300
some ways is sort of understandable.

33
00:02:13,300 --> 00:02:17,280
These are our cloud products, but he says it should be made clear.

34
00:02:17,280 --> 00:02:18,340
And I kind of agree with him.

35
00:02:18,340 --> 00:02:23,120
On the Azure marketplace, it maybe maybe say when you're just choosing to deploy, 1804,

36
00:02:23,120 --> 00:02:25,880
maybe mention, hey, by the way, we're gonna let Canonical know.

37
00:02:25,880 --> 00:02:29,440
He claims he would not have done the deployment if I had known someone who quote, stalked

38
00:02:29,440 --> 00:02:31,600
me outside of corporate channels, he said.

39
00:02:31,600 --> 00:02:33,640
He wouldn't have done it.

40
00:02:33,640 --> 00:02:37,960
To me, I look at this, Wes, and I think, all right, there's probably more of a middle ground

41
00:02:37,960 --> 00:02:38,960
here.

42
00:02:38,960 --> 00:02:40,280
I mean, I know Canonical released a statement about it.

43
00:02:40,280 --> 00:02:41,280
Yes, they did.

44
00:02:41,280 --> 00:02:46,360
They wrote that, as per the Azure terms and conditions, Microsoft shares with Canonical,

45
00:02:46,360 --> 00:02:51,360
the publisher of Ubuntu, the contact details of developers launching Ubuntu instances on

46
00:02:51,360 --> 00:02:52,460
Azure.

47
00:02:52,460 --> 00:02:57,960
These contact details are held in Canonical's CRM in accordance with privacy rules.

48
00:02:57,960 --> 00:03:04,240
On February 10th, a new Canonical sales representative contacted one of these developers via LinkedIn

49
00:03:04,240 --> 00:03:07,040
with a poor choice of words.

50
00:03:07,040 --> 00:03:12,080
In light of this incident, Canonical will be reviewing its sales training and policies.

51
00:03:12,080 --> 00:03:16,960
Kind of a blame the new guy and a training opportunity excuse in there.

52
00:03:16,960 --> 00:03:21,280
And I'm not really trying to say they need to be excusing this behavior.

53
00:03:21,280 --> 00:03:27,800
I think this is just kind of the reality of a corporate style service like this.

54
00:03:27,800 --> 00:03:30,960
You know, I think, Wes, in some ways, it sort of shows us again that we're at the intersection

55
00:03:30,960 --> 00:03:35,360
of open source ideals and the business world realities, which we were just at last week

56
00:03:35,360 --> 00:03:36,360
as well.

57
00:03:36,360 --> 00:03:37,360
Yeah, exactly.

58
00:03:37,360 --> 00:03:40,860
You know, if this was some sort of proprietary database, perhaps, that I'd paid a subscription

59
00:03:40,860 --> 00:03:46,040
to and was then launching through the marketplace on Azure, I wouldn't be surprised at all about

60
00:03:46,040 --> 00:03:47,040
this.

61
00:03:47,040 --> 00:03:52,640
But the fact that it's Ubuntu and Canonical, which we mostly associate with openness, free

62
00:03:52,640 --> 00:03:55,080
software, that's a little bit different.

63
00:03:55,080 --> 00:03:59,200
But of course, they are also a business trying to make a bunch of money running Ubuntu on

64
00:03:59,200 --> 00:04:00,480
the cloud, and they do.

65
00:04:00,480 --> 00:04:04,280
Yeah, and in a way, you could see there's multiple incentives for Microsoft.

66
00:04:04,280 --> 00:04:08,440
I mean, clearly, the two companies, tighter than ever.

67
00:04:08,440 --> 00:04:11,520
But Microsoft surely extends this to other partners as well.

68
00:04:11,520 --> 00:04:13,120
And you could imagine chewing the other foot here.

69
00:04:13,120 --> 00:04:17,560
If I was selling a service, I'd want to know too, maybe not even to upsell, just to try

70
00:04:17,560 --> 00:04:20,880
to provide you with support and make sure you're having a good experience with the product

71
00:04:20,880 --> 00:04:22,680
you're choosing to run.

72
00:04:22,680 --> 00:04:26,120
And in a way, sort of say, if you need help, don't come to us.

73
00:04:26,120 --> 00:04:29,860
You know, it's sort of a preemptive, these are the guys you need to talk to move that

74
00:04:29,860 --> 00:04:31,280
they're doing here.

75
00:04:31,280 --> 00:04:35,920
And it's also got to be, it's got to, in a way, be a great perk for Canonical to be on

76
00:04:35,920 --> 00:04:36,920
the Azure marketplace.

77
00:04:36,920 --> 00:04:41,000
So Microsoft can use this as a reason to be there because we'll send you sales leads,

78
00:04:41,000 --> 00:04:44,840
we'll hand you a sales lead every time somebody deploys your software.

79
00:04:44,840 --> 00:04:47,400
That's a pretty big incentive for companies.

80
00:04:47,400 --> 00:04:50,720
And I kind of don't know what this guy was expecting when you're on a commercial platform

81
00:04:50,720 --> 00:04:51,720
like Azure.

82
00:04:51,720 --> 00:04:55,720
I get that the creep factor here is that you were tracked down on LinkedIn.

83
00:04:55,720 --> 00:05:02,320
But again, it's just sort of this super voysterous denouncement of Microsoft immediately when

84
00:05:02,320 --> 00:05:05,080
the situation ends up being a lot more nuanced.

85
00:05:05,080 --> 00:05:08,560
And I don't want to come on the show and be a Microsoft defender here, but this just seems,

86
00:05:08,560 --> 00:05:11,960
again, kind of like just traditional business practices.

87
00:05:11,960 --> 00:05:14,520
And in a way, gives us a data point.

88
00:05:14,520 --> 00:05:18,360
It gives us a data point why Microsoft doesn't need to buy Canonical here.

89
00:05:18,360 --> 00:05:22,640
They can work together and make money and still independently do what each other does

90
00:05:22,640 --> 00:05:23,640
best.

91
00:05:23,640 --> 00:05:26,440
So it seems like they're plenty close already.

92
00:05:26,440 --> 00:05:31,160
Well a few items we've been covering on this show are actually landing this week that you

93
00:05:31,160 --> 00:05:32,840
probably want to keep an eye out for.

94
00:05:32,840 --> 00:05:39,360
If you're a plasma user, one of those is 521, which should release this week.

95
00:05:39,360 --> 00:05:43,440
GNOME 40 has gotten a lot of attention lately, and rightly so.

96
00:05:43,440 --> 00:05:47,840
But 521 looks to be one of the best plasma releases ever.

97
00:05:47,840 --> 00:05:52,920
Couple of just off the top of my head features that I'm excited about are the new app launcher,

98
00:05:52,920 --> 00:05:55,520
improvements to K-Runner, you can pin it now.

99
00:05:55,520 --> 00:05:57,360
There's a new theme called Breeze Twilight.

100
00:05:57,360 --> 00:06:00,920
There's the new plasma system monitor app that is really slick.

101
00:06:00,920 --> 00:06:06,320
Tons of Wayland improvements, including mixed refresh rate display, and other performance

102
00:06:06,320 --> 00:06:09,920
improvements, stability improvements that have been packed into 521.

103
00:06:09,920 --> 00:06:15,860
If like us, you just can't wait, an easy way to try it out is to grab KDE Neon, which has

104
00:06:15,860 --> 00:06:20,200
a stable Ubuntu base, but that fresh hot plasma goodness.

105
00:06:20,200 --> 00:06:23,200
I think that's a funny way to put it.

106
00:06:23,200 --> 00:06:27,080
And Wes and I are going to try it out, so tune in to Linux Unplugged for our hands-on

107
00:06:27,080 --> 00:06:28,080
this week.

108
00:06:28,080 --> 00:06:30,440
And just a side note, there's some KATE improvements.

109
00:06:30,440 --> 00:06:33,640
That's the text editor in plasma, or one of the text editors.

110
00:06:33,640 --> 00:06:38,560
KATE is 20 years old and is more amazing than ever.

111
00:06:38,560 --> 00:06:43,000
It's a fantastic open source software success story where a product doesn't have to make

112
00:06:43,000 --> 00:06:46,200
a ton of revenue, but it can get 20 years of development.

113
00:06:46,200 --> 00:06:51,080
And now when I need a lightweight, super fast, native binary that can be a text editor that

114
00:06:51,080 --> 00:06:56,240
has marked down syntax support, or pretty much any syntax support highlighting you'd

115
00:06:56,240 --> 00:07:01,160
want, KATE is my go-to, and some nice features are landing in 521.

116
00:07:01,160 --> 00:07:06,020
I'm just glad we got you to stop talking about nano.

117
00:07:06,020 --> 00:07:09,480
Another item we've been keeping a watch on for you lands this week.

118
00:07:09,480 --> 00:07:14,880
That's Linux 5.11, and it is heavy on new features because this is the first stable

119
00:07:14,880 --> 00:07:22,480
kernel after the LTS release, and also the first major stable kernel of 2021.

120
00:07:22,480 --> 00:07:26,200
Included in there is all kinds of interesting features, but let's start in the world of

121
00:07:26,200 --> 00:07:27,640
file systems.

122
00:07:27,640 --> 00:07:31,920
Something I was happy to see was that the ButterFS file system has a couple new mount

123
00:07:31,920 --> 00:07:38,160
options intended to help with the rather unwelcome task of rescuing data off of a corrupted file

124
00:07:38,160 --> 00:07:39,160
system.

125
00:07:39,160 --> 00:07:42,640
This has been something that's been a little tricky sometimes, maybe even requiring help

126
00:07:42,640 --> 00:07:46,500
from the mailing list if you've got a severely corrupted drive.

127
00:07:46,500 --> 00:07:50,840
Now there'll be a couple of new rescue mount options you can add that will hopefully make

128
00:07:50,840 --> 00:07:52,580
things a little bit simpler.

129
00:07:52,580 --> 00:07:56,760
Nice to see that when you're in a tricky situation, it's nice to have a few more options to get

130
00:07:56,760 --> 00:07:58,080
your data back.

131
00:07:58,080 --> 00:08:02,640
Another feature that caught my eye was syscall user dispatch, which actually we've talked

132
00:08:02,640 --> 00:08:05,080
about a little bit before.

133
00:08:05,080 --> 00:08:10,200
And that's a new system for intercepting system calls made by some Windows programs under

134
00:08:10,200 --> 00:08:15,960
Wine, they basically sidestep a whole bunch of APIs, try to perform syscalls directly.

135
00:08:15,960 --> 00:08:21,840
And it mostly happens in the context of digital rights management, DRM or anti-cheating schemes.

136
00:08:21,840 --> 00:08:26,920
Syscall user dispatch allows for efficiently redirecting system calls for just a portion

137
00:08:26,920 --> 00:08:27,920
of a binary.

138
00:08:27,920 --> 00:08:31,480
So you can just sort of hook in the game, just the part that's trying to do the anti-cheat

139
00:08:31,480 --> 00:08:32,480
system.

140
00:08:32,480 --> 00:08:36,280
And then the system calls get redirected from just going to the underlying system back to

141
00:08:36,280 --> 00:08:38,920
Wine so that Wine can handle them properly.

142
00:08:38,920 --> 00:08:42,440
I have been looking forward to that.

143
00:08:42,440 --> 00:08:46,460
Now also some hardware support, some of us have been looking forward to LANs, lots of

144
00:08:46,460 --> 00:08:51,480
new ARM hardware support, finally the support for that failed OUYA Android game console

145
00:08:51,480 --> 00:08:53,280
that's shipping.

146
00:08:53,280 --> 00:08:57,960
You ThinkPad users will appreciate the new Palm Sensor detection support that is being

147
00:08:57,960 --> 00:08:59,560
added by Lenovo.

148
00:08:59,560 --> 00:09:04,020
And you Dell users are going to like the fact that Dell is exposing some BIOS configuration

149
00:09:04,020 --> 00:09:10,240
settings via SysFS to allow manipulating some Dell settings deep down inside via Linux.

150
00:09:10,240 --> 00:09:16,340
And while we're in the world of hardware, complete Wi-Fi 6 support LANs in 5.11 with

151
00:09:16,340 --> 00:09:17,340
Wi-Fi 6E.

152
00:09:17,340 --> 00:09:21,180
Yeah, that's some of that fancy 6 gigahertz stuff.

153
00:09:21,180 --> 00:09:26,440
Also if you've got a Ryzen or Epic chip, well that should be five to six percent faster

154
00:09:26,440 --> 00:09:30,680
out of the box with the brand new kernel, which boy, if that isn't a reason to upgrade.

155
00:09:30,680 --> 00:09:31,680
No kidding.

156
00:09:31,680 --> 00:09:34,240
Yeah, that's like new hardware almost.

157
00:09:34,240 --> 00:09:35,240
That's great.

158
00:09:35,240 --> 00:09:40,820
Speaking of new hardware, the Intel XE graphics are looking great on Linux 5.11 as well with

159
00:09:40,820 --> 00:09:45,080
some nice performance improvements.

160
00:09:45,080 --> 00:09:46,900
Linode.com slash LAN.

161
00:09:46,900 --> 00:09:52,420
Go there to get a $100 60 day credit towards a new account and of course support the show.

162
00:09:52,420 --> 00:09:54,680
Linode is our cloud hosting provider.

163
00:09:54,680 --> 00:09:57,920
All of the JB 3.0 infrastructure runs on Linode.

164
00:09:57,920 --> 00:10:00,200
My personal stuff runs on Linode.

165
00:10:00,200 --> 00:10:04,000
They started in 2003 as one of the first companies in cloud computing.

166
00:10:04,000 --> 00:10:07,120
Three years before AWS and the other enterprise providers.

167
00:10:07,120 --> 00:10:08,660
So they know how to do this right.

168
00:10:08,660 --> 00:10:13,160
They have focused in on a few things and they rock at those things.

169
00:10:13,160 --> 00:10:17,280
They're still independently owned today and now they're dedicated to offering the best

170
00:10:17,280 --> 00:10:19,360
virtualized cloud computing out there.

171
00:10:19,360 --> 00:10:22,840
If it runs on Linux, it runs on Linode.

172
00:10:22,840 --> 00:10:26,800
And personally, one of the things I love about Linode is how many different Linux distributions

173
00:10:26,800 --> 00:10:27,800
they support.

174
00:10:27,800 --> 00:10:33,720
The Arch, the CentOS, of course some Debian releases, some Fedora releases, OpenSUSE,

175
00:10:33,720 --> 00:10:36,480
several versions of Ubuntu, Debian, and more.

176
00:10:36,480 --> 00:10:39,000
But what I really get about them is their passion for Linux.

177
00:10:39,000 --> 00:10:41,620
They try things nobody else is doing.

178
00:10:41,620 --> 00:10:44,320
And you know they have one click application deployments.

179
00:10:44,320 --> 00:10:47,520
And you may even know they have a one click WordPress deployment.

180
00:10:47,520 --> 00:10:51,480
But what you might not know about is something a little different that they have in their

181
00:10:51,480 --> 00:10:52,480
marketplace.

182
00:10:52,480 --> 00:10:55,920
It's called open light speed WordPress.

183
00:10:55,920 --> 00:10:59,120
This is the WordPress I deploy.

184
00:10:59,120 --> 00:11:01,300
It's blazing fast.

185
00:11:01,300 --> 00:11:03,560
The web server is the cache.

186
00:11:03,560 --> 00:11:10,640
It's the open light speed project with PHP, MySQL, and WordPress all integrated into their

187
00:11:10,640 --> 00:11:11,640
cache.

188
00:11:11,640 --> 00:11:15,240
It gives you metrics and crazy fast performance and you combine that with Linode's object

189
00:11:15,240 --> 00:11:20,960
storage and you will have the fastest WordPress website you have ever used.

190
00:11:20,960 --> 00:11:22,520
There's a lot of functionality with WordPress.

191
00:11:22,520 --> 00:11:26,480
The only penalty is usually that performance and you can solve that with this stack.

192
00:11:26,480 --> 00:11:30,160
I'll have a link to that in the show notes so you can see what I've been talking about.

193
00:11:30,160 --> 00:11:34,360
That's the one I've used for some of my personal projects and it's the one I would use for

194
00:11:34,360 --> 00:11:35,760
JB today.

195
00:11:35,760 --> 00:11:40,180
But of course they have GPU compute, object storage like I mentioned, and then a cloud

196
00:11:40,180 --> 00:11:44,520
dashboard to manage all of this that makes it super straightforward, simple to get backup,

197
00:11:44,520 --> 00:11:45,960
simple to deploy.

198
00:11:45,960 --> 00:11:47,700
You don't have to be an expert.

199
00:11:47,700 --> 00:11:52,440
But if you are, you can dig under the hood just a little bit and get access to all of

200
00:11:52,440 --> 00:11:53,440
the tools.

201
00:11:53,440 --> 00:11:56,240
I really like that about Linode and I think you will too.

202
00:11:56,240 --> 00:11:59,480
I appreciate them supporting projects and I appreciate them supporting this show.

203
00:11:59,480 --> 00:12:05,320
So show them a little love, go to linode.com slash lan, get that $100 60 day credit and

204
00:12:05,320 --> 00:12:06,320
support the show.

205
00:12:06,320 --> 00:12:09,600
It's a great way to say thanks to Linode for sponsoring Linux Action News.

206
00:12:09,600 --> 00:12:13,120
That's linode.com slash lan.

207
00:12:13,120 --> 00:12:18,800
In local Linux news this week, System76 has finally started revealing some details about

208
00:12:18,800 --> 00:12:22,320
their custom keyboard they've been teasing us about.

209
00:12:22,320 --> 00:12:25,160
Configurable keyboard hype mode begins, Wes.

210
00:12:25,160 --> 00:12:29,320
I now have a new appreciation for how geeky people are about keyboards after we restarted

211
00:12:29,320 --> 00:12:33,340
the Coderadio program and I'm kind of down.

212
00:12:33,340 --> 00:12:36,080
I think System76 could nail this.

213
00:12:36,080 --> 00:12:41,120
It appears they're going to call it the launch, so it's a System76 launch configurable keyboard

214
00:12:41,120 --> 00:12:45,840
and they say it'll be the quote ultimate user controlled keyboard experience and it's open

215
00:12:45,840 --> 00:12:48,440
source down to the PCB and mechanical design.

216
00:12:48,440 --> 00:12:51,000
The firmware will also be open source.

217
00:12:51,000 --> 00:12:56,680
It'll be manufactured out of milled aluminum using two solid blocks of aluminum and then

218
00:12:56,680 --> 00:13:01,960
a powder coated finish and the keyboard also supports a detachable lift bar, a customizable

219
00:13:01,960 --> 00:13:06,680
layout, swappable keycaps and even the switches can be swapped out with any MX compatible

220
00:13:06,680 --> 00:13:08,200
footprint.

221
00:13:08,200 --> 00:13:13,720
As for connectivity, well you can connect via USB-C or USB-A and you'll find two of

222
00:13:13,720 --> 00:13:16,480
each of those ports on the keyboard.

223
00:13:16,480 --> 00:13:22,160
The keyboard firmware supports independent RGB lighting to create your own RGB LED patterns

224
00:13:22,160 --> 00:13:25,880
and all of the software and firmware is open source.

225
00:13:25,880 --> 00:13:31,320
Even better, firmware updates can be obtained by our favorite FWAPD and the design files,

226
00:13:31,320 --> 00:13:33,040
well they're also open.

227
00:13:33,040 --> 00:13:35,280
So I think I see a couple of positive developments out of this.

228
00:13:35,280 --> 00:13:38,340
I mean obviously number one there is that they're working upstream with the Linux vendor

229
00:13:38,340 --> 00:13:39,960
firmware service.

230
00:13:39,960 --> 00:13:42,960
That's really cool to see, but think about it Wes.

231
00:13:42,960 --> 00:13:46,820
If you're gonna build a machine, if you're gonna build a full computer and you've never

232
00:13:46,820 --> 00:13:51,040
built a laptop before, you've never built something that complicated, isn't it a bit

233
00:13:51,040 --> 00:13:55,000
of a brilliant strategy to start with a keyboard because not only do you have to nail that

234
00:13:55,000 --> 00:13:59,600
and you learn so much, but that is a product that anyone can buy.

235
00:13:59,600 --> 00:14:04,480
They don't have to be an existing System76 customer and it's an obvious upsell to any

236
00:14:04,480 --> 00:14:07,320
future System76 machine.

237
00:14:07,320 --> 00:14:11,240
You'll see every configuration page going forward have the optional System76 launch

238
00:14:11,240 --> 00:14:12,240
keyboard.

239
00:14:12,240 --> 00:14:14,080
It fits very nicely in their arsenal.

240
00:14:14,080 --> 00:14:17,840
It's an easy way to get started out with the brand if you're interested in that and it's

241
00:14:17,840 --> 00:14:22,480
just a great way for them to flex their manufacturing muscles, go through the process one more time.

242
00:14:22,480 --> 00:14:27,560
I mean, you know, the Thaleo is still new in many ways, so this should help refine those

243
00:14:27,560 --> 00:14:28,560
processes.

244
00:14:28,560 --> 00:14:31,840
I know they've learned a lot already and I'm sure they'll learn even more with this.

245
00:14:31,840 --> 00:14:35,440
Yeah, and of course the Thaleo is beautiful.

246
00:14:35,440 --> 00:14:41,960
I'm sure they figured a lot, but they're still shipping another manufacturer's motherboard

247
00:14:41,960 --> 00:14:47,040
and mainboards, whereas they are building this one here and when they get to build the

248
00:14:47,040 --> 00:14:50,680
whole thing from the ground up, what we see is a lot of our boxes are checked.

249
00:14:50,680 --> 00:14:54,040
I mean, the way we're even finding out about this really is because it's on GitHub and

250
00:14:54,040 --> 00:14:59,580
we can just see the information and that is pretty telling on how I think they're going

251
00:14:59,580 --> 00:15:00,840
to run this thing.

252
00:15:00,840 --> 00:15:02,160
I like the potential here.

253
00:15:02,160 --> 00:15:04,440
Of course, I'm a big fan of System76.

254
00:15:04,440 --> 00:15:09,640
They've been a sponsor on this show, obviously, but I think this is an indication of how serious

255
00:15:09,640 --> 00:15:15,960
they're taking open Linux hardware and this is a long journey they're going to have to

256
00:15:15,960 --> 00:15:20,200
go down to build these things, but this is a super important step and it's not even something

257
00:15:20,200 --> 00:15:25,480
Apple got right for a long time, so it's brilliant they're starting here and I know for you,

258
00:15:25,480 --> 00:15:28,160
it's going to mean you can finally get your RGB game on.

259
00:15:28,160 --> 00:15:33,780
Finally, I was just waiting for a keyboard that supported Rust.

260
00:15:33,780 --> 00:15:39,280
Also in the local section this week, it looks like AMD is hiring more than a few engineers

261
00:15:39,280 --> 00:15:43,640
and perhaps this is thanks in part to their increasing sales in the enterprise and the

262
00:15:43,640 --> 00:15:48,160
high-performance area where Linux is very successful for them and they've been pretty

263
00:15:48,160 --> 00:15:54,560
good lately at delivering reliable Linux support, but there is some notable room for improvement

264
00:15:54,560 --> 00:16:00,560
that we've touched on and others like Michael Larbell at Ferronix have touched on and perhaps

265
00:16:00,560 --> 00:16:04,360
there is some more staffing that could be done to actually improve that stuff.

266
00:16:04,360 --> 00:16:08,980
Well, it seems that's the direction AMD is going because based on recent job postings,

267
00:16:08,980 --> 00:16:12,120
it seems that AMD is trying to make strides in several areas.

268
00:16:12,120 --> 00:16:17,400
AMD is looking for a manager to oversee all their Linux kernel and virtualization development.

269
00:16:17,400 --> 00:16:21,440
The manager will oversee the engineers working on designing, implementing, and testing the

270
00:16:21,440 --> 00:16:24,200
Linux features for AMD CPUs.

271
00:16:24,200 --> 00:16:25,200
Hmm.

272
00:16:25,200 --> 00:16:26,200
Hmm.

273
00:16:26,200 --> 00:16:27,940
I like the sound of that Wes.

274
00:16:27,940 --> 00:16:33,640
Also this next one, Linux Technical Lead, the engineering lead will have a workload

275
00:16:33,640 --> 00:16:39,680
that includes coordinating with OEM partners and tier one Linux distributions around new

276
00:16:39,680 --> 00:16:41,920
features and components.

277
00:16:41,920 --> 00:16:46,040
I don't know what they consider a tier one Linux distribution, but this was an area with

278
00:16:46,040 --> 00:16:48,520
the 6000 series that they specifically got some feedback.

279
00:16:48,520 --> 00:16:54,040
Hey, it'd be great if you worked with a few more distros to help get support on day one

280
00:16:54,040 --> 00:16:55,040
shipping.

281
00:16:55,040 --> 00:16:58,920
It sounds like this role, this technical lead, will do just that working with quote tier

282
00:16:58,920 --> 00:17:03,400
one Linux distributions, which is really probably going to be what a lot of the derivatives

283
00:17:03,400 --> 00:17:04,400
are based off of.

284
00:17:04,400 --> 00:17:07,780
So that will have a trickle down effect of some sorts, excuse the term.

285
00:17:07,780 --> 00:17:11,100
But on top of that, it seems that they're also going to attempt to keep partners and

286
00:17:11,100 --> 00:17:16,000
distributions up to date with future AMD developments and Linux support.

287
00:17:16,000 --> 00:17:20,060
And if none of that sounds like it's up your alley, well maybe the fact that they're also

288
00:17:20,060 --> 00:17:24,420
hiring for Linux engineering and systems architect roles and a whole bunch of other traditional

289
00:17:24,420 --> 00:17:28,240
software and hardware engineering might be more your cup of tea.

290
00:17:28,240 --> 00:17:32,680
And credit to Michael Larbrel, he noted something I think is worth discussing here.

291
00:17:32,680 --> 00:17:36,840
He says that a lot of these new job descriptions begin with a very key phrase, and that is

292
00:17:36,840 --> 00:17:42,520
quote, step up to a new organization built to engage more strategically and deeply with

293
00:17:42,520 --> 00:17:46,120
technical teams of our commercial customers.

294
00:17:46,120 --> 00:17:50,080
Now he says what's interesting about that is he only sees those opening lines on their

295
00:17:50,080 --> 00:17:58,160
current Linux job postings, not on other organizational job openings right now, which kind of implies

296
00:17:58,160 --> 00:18:05,240
I think, Wes, that there's a bit of a restructuring in AMD to kind of institutionalize and sustainably

297
00:18:05,240 --> 00:18:07,120
develop and support Linux.

298
00:18:07,120 --> 00:18:09,240
Ah, that would be nice to see.

299
00:18:09,240 --> 00:18:12,400
I mean, clearly Linux has a lot of support going for AMD.

300
00:18:12,400 --> 00:18:16,880
There's more and more of a partnership with graphics drivers taking up a huge amount of

301
00:18:16,880 --> 00:18:19,220
the kernel these days.

302
00:18:19,220 --> 00:18:21,000
That's got to be a good sign.

303
00:18:21,000 --> 00:18:24,880
One other piece that really caught my eye is that there are a number of firmware engineering

304
00:18:24,880 --> 00:18:32,040
job openings mentioning Coreboot, including some noting this role enables Coreboot technology

305
00:18:32,040 --> 00:18:33,840
on AMD products.

306
00:18:33,840 --> 00:18:36,560
Maybe more Coreboot support coming soon.

307
00:18:36,560 --> 00:18:41,440
And one last note about AMD stuff here and the Linux 5.11 release, which is coming out

308
00:18:41,440 --> 00:18:49,100
this week, that 5.11 release has initial enablement for the new Ryzen 5000 series laptops, which

309
00:18:49,100 --> 00:18:50,680
are due this quarter.

310
00:18:50,680 --> 00:18:56,000
So if you get a brand new Ryzen 5000 laptop in the next few weeks, be sure you're running

311
00:18:56,000 --> 00:18:59,820
a distro that has Linux 5.11 or later on there.

312
00:18:59,820 --> 00:19:04,940
Or maybe you won't be running Linux at all on that shiny new hardware because Google

313
00:19:04,940 --> 00:19:10,640
has been developing Fuchsia, an operating system that is distinctly not based on Linux.

314
00:19:10,640 --> 00:19:16,360
The latest proposal for Fuchsia shows just how this not Linux operating system might

315
00:19:16,360 --> 00:19:21,600
get the ability to run unmodified programs intended for both Linux and Android.

316
00:19:21,600 --> 00:19:27,400
And I don't think we're too surprised that they're going to try to get application compatibility.

317
00:19:27,400 --> 00:19:32,400
What we are surprised by in this announcement, or at least this proposal, is that Fuchsia

318
00:19:32,400 --> 00:19:34,600
is going to accomplish it differently than we expected.

319
00:19:34,600 --> 00:19:39,640
If you look at Chrome OS today, they're using a project called ArcVM to run Android applications

320
00:19:39,640 --> 00:19:41,600
unmodified on Chrome OS.

321
00:19:41,600 --> 00:19:46,280
And I think a lot of people suspected it'd be some kind of Google Linux virtual machine

322
00:19:46,280 --> 00:19:48,920
that would bring compatibility to Fuchsia.

323
00:19:48,920 --> 00:19:54,680
And we've gotten these indications along the way that perhaps Fuchsia is going to be an

324
00:19:54,680 --> 00:19:56,600
Android replacement.

325
00:19:56,600 --> 00:19:59,900
And so that's why we kind of assumed they would solve this problem.

326
00:19:59,900 --> 00:20:02,960
But it doesn't seem they're going to do it with a VM, Wes.

327
00:20:02,960 --> 00:20:07,840
No, this week we learned in a proposal that there's an alternative solution available

328
00:20:07,840 --> 00:20:11,120
for Fuchsia to run programs meant for Android and Linux.

329
00:20:11,120 --> 00:20:15,200
Instead of actually running a whole darn Linux kernel, Fuchsia would gain a system called

330
00:20:15,200 --> 00:20:20,880
Starnix, which would act as a translator between instructions for the Linux kernel and instructions

331
00:20:20,880 --> 00:20:23,160
for Fuchsia's Zircon kernel.

332
00:20:23,160 --> 00:20:24,160
It's not wine.

333
00:20:24,160 --> 00:20:25,720
Don't call it an emulator.

334
00:20:25,720 --> 00:20:31,920
But it's kind of detailed in this proposal what they sort of see the use case for.

335
00:20:31,920 --> 00:20:36,480
For example, they say Android applications contain native code modules that have been

336
00:20:36,480 --> 00:20:38,160
compiled for Linux.

337
00:20:38,160 --> 00:20:43,200
In order to run this software on Fuchsia, we need to be able to run binaries without

338
00:20:43,200 --> 00:20:44,200
modifying them.

339
00:20:44,200 --> 00:20:50,640
For example, we will run low-level test binaries from Android's source tree, as well as binaries

340
00:20:50,640 --> 00:20:52,880
from the Linux test project.

341
00:20:52,880 --> 00:20:57,240
This says to me that we might be seeing Google trying to get Fuchsia to have deep support

342
00:20:57,240 --> 00:20:58,760
for Android apps, right?

343
00:20:58,760 --> 00:21:03,040
Sometimes, you know, a lot of times even, it's just a whole bunch of Java.

344
00:21:03,040 --> 00:21:06,680
But if you're doing stuff, maybe targeting some machine learning API, something a little

345
00:21:06,680 --> 00:21:12,680
more performance intensive, or just custom, you could be shipping some C or C++ code in

346
00:21:12,680 --> 00:21:13,680
there.

347
00:21:13,680 --> 00:21:16,520
And of course, you're going to need support for a different OS.

348
00:21:16,520 --> 00:21:21,920
Yeah, it's worth reading the link in the show notes, linuxactionnews.com, slash 176.

349
00:21:21,920 --> 00:21:25,920
Because if you read the whole thing, I think you just inevitably walk away with the sense

350
00:21:25,920 --> 00:21:30,300
that they are clearly going after Android, and potentially, this is what they're going

351
00:21:30,300 --> 00:21:31,920
to run on their servers too.

352
00:21:31,920 --> 00:21:37,440
But all that said, this Starnix stuff is only a proposal right now.

353
00:21:37,440 --> 00:21:42,880
There is a significant amount of work needing to be done to get anything resembling proper

354
00:21:42,880 --> 00:21:48,600
compatibility here, and it's potentially possible that they may still end up just solving this

355
00:21:48,600 --> 00:21:49,600
with a VM.

356
00:21:49,600 --> 00:21:50,600
Right.

357
00:21:50,600 --> 00:21:51,600
We have that technology.

358
00:21:51,600 --> 00:21:52,600
And it's interesting.

359
00:21:52,600 --> 00:21:53,920
I mean, this is a common approach.

360
00:21:53,920 --> 00:22:00,940
FreeBSD has an emulation layer available for Linux, and WSL 1 sort of took this approach.

361
00:22:00,940 --> 00:22:06,600
But of course, they ultimately went back to virtualization with WSL 2.

362
00:22:06,600 --> 00:22:11,120
I think a lot of it will depend on just how different Fuchsia and Zircon are, and how

363
00:22:11,120 --> 00:22:15,920
much of a mess it is to actually make that translation happen.

364
00:22:15,920 --> 00:22:17,760
Linux.ting.com.

365
00:22:17,760 --> 00:22:20,440
New year, new plans, same great service.

366
00:22:20,440 --> 00:22:26,280
I've been a Ting customer forever, and I can tell you with confidence, now is the best

367
00:22:26,280 --> 00:22:27,960
time ever to join Ting.

368
00:22:27,960 --> 00:22:32,920
It's new, refreshed plans, but still everything you love about them.

369
00:22:32,920 --> 00:22:37,200
If you use two gigs or 20 gigs a month, there is a perfect Ting plan for you.

370
00:22:37,200 --> 00:22:39,320
They have multiple carriers to choose from.

371
00:22:39,320 --> 00:22:41,960
I'm currently on a mix of AT&T and Verizon.

372
00:22:41,960 --> 00:22:43,200
I can actually change it up.

373
00:22:43,200 --> 00:22:44,200
This is great.

374
00:22:44,200 --> 00:22:48,780
And there's no need to worry about any weird bills or contracts, because Ting gives you

375
00:22:48,780 --> 00:22:51,720
the freedom of no contracts ever.

376
00:22:51,720 --> 00:22:55,120
And when people refer you to Ting, the first thing they're always going to mention is the

377
00:22:55,120 --> 00:22:57,320
crazy low bills.

378
00:22:57,320 --> 00:23:00,040
That's like the number one thing people love about Ting.

379
00:23:00,040 --> 00:23:05,160
But number two on that list is their top rated customer support.

380
00:23:05,160 --> 00:23:08,080
Nobody in the mobile business does support like Ting.

381
00:23:08,080 --> 00:23:10,160
But sometimes it really matters.

382
00:23:10,160 --> 00:23:17,440
One time I was stuck out in North Dakota parked in a parking lot, a gravel parking lot, stuck

383
00:23:17,440 --> 00:23:19,280
with a no data MiFi.

384
00:23:19,280 --> 00:23:24,340
And the Ting rep worked with me for two hours while we got everything troubleshot and brought

385
00:23:24,340 --> 00:23:25,340
to resolution.

386
00:23:25,340 --> 00:23:28,720
They went way above and beyond anything they needed to do.

387
00:23:28,720 --> 00:23:32,920
And now, Ting customers can choose from different mobile plans that are based on your specific

388
00:23:32,920 --> 00:23:34,000
data needs.

389
00:23:34,000 --> 00:23:37,120
And it's super, super simple to switch to Ting.

390
00:23:37,120 --> 00:23:40,720
Pretty much any phone works because they have so many networks that they support.

391
00:23:40,720 --> 00:23:47,760
Just start by going to linux.ting.com support this show and get $25 of Ting credit.

392
00:23:47,760 --> 00:23:50,960
You can buy you can buy your SIM, I don't know what you're going to do with that.

393
00:23:50,960 --> 00:23:54,880
Maybe you're going to pay for your first month because average Ting bill is less than $25.

394
00:23:54,880 --> 00:23:55,880
I don't know.

395
00:23:55,880 --> 00:24:00,360
But you make the decision when you go to linux.ting.com you can pick up a phone or bring your own.

396
00:24:00,360 --> 00:24:01,360
Just check your compatibility.

397
00:24:01,360 --> 00:24:03,200
It's super simple to do.

398
00:24:03,200 --> 00:24:04,800
Perhaps you just need a new SIM.

399
00:24:04,800 --> 00:24:08,960
Ting will send you one, you pop it into your phone and you get activated in minutes.

400
00:24:08,960 --> 00:24:12,880
Cutting your phone bill in half has never been easier with Ting's new plans.

401
00:24:12,880 --> 00:24:16,480
The next generation of Ting Mobile is here and see how much you could save by going to

402
00:24:16,480 --> 00:24:19,420
linux.ting.com.

403
00:24:19,420 --> 00:24:24,700
If you are on Wi-Fi and you can sync your music and your podcasts, that small little

404
00:24:24,700 --> 00:24:27,880
tweak will blow your mind how much you can save.

405
00:24:27,880 --> 00:24:34,120
Why pay more for the same networks when you can use them and save by going to linux.ting.com.

406
00:24:34,120 --> 00:24:42,720
And a big thank you to Ting for sponsoring this episode of Linux Action News, linux.ting.com.

407
00:24:42,720 --> 00:24:47,740
We're going to finish up this week with a few items we think might be worth your time

408
00:24:47,740 --> 00:24:50,400
after the show and what we're calling homework.

409
00:24:50,400 --> 00:24:56,760
And the first is the story about a 24 year old kernel bug was finally found.

410
00:24:56,760 --> 00:24:57,840
This is a tale.

411
00:24:57,840 --> 00:24:59,840
It is a journey.

412
00:24:59,840 --> 00:25:03,480
We'll have it linked at linuxactionnews.com slash 176.

413
00:25:03,480 --> 00:25:09,200
The chief information officer at an e-commerce platform in Greece called Scouts made really

414
00:25:09,200 --> 00:25:10,640
quite the discovery.

415
00:25:10,640 --> 00:25:12,120
And it is well detailed.

416
00:25:12,120 --> 00:25:17,080
We won't go into too many details just here, but they thought they'd found a bug in our

417
00:25:17,080 --> 00:25:20,520
sink, but oh no, turned out to be so much more.

418
00:25:20,520 --> 00:25:22,880
We also have a little SSH homework for you.

419
00:25:22,880 --> 00:25:26,360
No, not the show, the actual SSH.

420
00:25:26,360 --> 00:25:29,880
You probably are familiar at least roughly with SSH tunnels.

421
00:25:29,880 --> 00:25:33,640
But we've seen a visual guide going around the internet this week that we think is pretty

422
00:25:33,640 --> 00:25:37,640
keen and we wanted you kids to have it, so we put a link for it in the show notes.

423
00:25:37,640 --> 00:25:43,520
It is a great way to learn and understand how these very handy SSH tunnels really work

424
00:25:43,520 --> 00:25:46,040
and all the different things you can do with them.

425
00:25:46,040 --> 00:25:49,840
And your last item in the links this week for you to follow up on, if you'd like, is

426
00:25:49,840 --> 00:25:54,780
if you have some time to burn at least, the FOSDEM 2021 videos from their virtual event

427
00:25:54,780 --> 00:25:57,080
are starting to pop up online now.

428
00:25:57,080 --> 00:26:01,760
But if you do check those out and spot something you think we should cover in one of those

429
00:26:01,760 --> 00:26:05,280
videos, be sure to let us know on our contact page.

430
00:26:05,280 --> 00:26:06,280
Indeed.

431
00:26:06,280 --> 00:26:10,640
Also, check out linuxactionnews.com slash subscribe for all the ways to get new episodes.

432
00:26:10,640 --> 00:26:15,080
And linuxactionnews.com slash contact for that contact page I mentioned.

433
00:26:15,080 --> 00:26:20,320
Jupiter Broadcasting's first swag item in more than two years has launched and it is

434
00:26:20,320 --> 00:26:22,600
called The Coder.

435
00:26:22,600 --> 00:26:28,200
The Coder.shop, look and feel comfortable while kicking ass, life is better in a Coder

436
00:26:28,200 --> 00:26:30,320
radio robe.

437
00:26:30,320 --> 00:26:35,580
We'll be back next Monday with our weekly take on the latest Linux and open source news.

438
00:26:35,580 --> 00:26:55,720
Thanks for joining us and we will see you next week.

