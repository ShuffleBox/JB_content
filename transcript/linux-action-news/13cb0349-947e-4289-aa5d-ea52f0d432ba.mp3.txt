Hello, and welcome to Linux Action News Episode 187, recorded on May 2nd, 2021.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
Our top story this week is Fedora 34, which was just released last Tuesday.
There are many reasons to give Fedora 34 a look, but one of them that might interest
you is that Fedora 34 will be the basis for the next release of Red Hat Enterprise Linux,
the upcoming RHEL 9.
Now, of course, before we get to that point, we're going to need a new version of CentOS
Stream.
We're on 8 right now.
We'll need to get to Stream 9, which we're told to expect sometime Q2 2021.
That's coming up.
I mean, that's right now.
That is now, isn't it?
Sooner than it seems.
And back to Fedora 34 itself, the workstation spin is getting a lot of the attention this
release cycle because it features the new GNOME 40.
That's the big release that has the new horizontal layout, also features GTK 4 and a ton of updated
apps in the GNOME ecosystem.
It's getting a lot of attention just for that alone.
Another huge change this time around is a new default sound server.
Yeah, so long PulseAudio, hello PipeWire.
This is a big change, but Fedora has been here before way back in 2007 and Fedora 8.
That was when Fedora switched to PulseAudio the first time, so it had a pretty good run.
New stuff is the name of the game for Fedora 34.
Some Fedora releases feel really incremental and others feel huge.
You know, GNOME 40, PipeWire is big, but for the plasma spin, Fedora 34 is the version
where plasma went to Wayland by default.
That was big for several reasons.
Number one, it's a big statement.
Now, both major spins of Fedora are Wayland first, but number two is it drove a lot of
additional Wayland improvements within the plasma project to get things ready for 34,
so it meant all plasma users benefited and everyone got improved Wayland support, which
is really nice to see.
Enough of that desktop nonsense, I know what our audience wants, and it's nitty gritty
system details, one of those this time around is the enabling of ButterFS transparent compression
by default.
I mean, at least if you're using ButterFS, that is.
And of course you might be because the last Fedora release saw the switch to using ButterFS
by default.
So this is a big sign that things are going well and they're comfortable twiddling a
few settings.
Now, this is much like PipeWire, it's one of those changes you just shouldn't have to
notice if everything goes well, except maybe it'll be a little bit faster to access things
off your file system.
It also means less SSD writes if you use it on an SSD because the compression means less
actual individual writing and it could expand and extend the life of your disk and maybe
even slightly reduce power consumption.
Well, if you're worried about your memory usage, good news for you, Fedora is continuing
their development of early out of memory detection in user space.
Now, before they'd rolled out early OOMD, but that's now being switched to system D
OOMD.
Yeah, that's right.
System D has a daemon for that.
I know that you could roll your eyes and all system D swallows another project, but it
seems like it kind of makes sense to put it here.
And it seems like the configuration is a lot more straightforward this way, too.
Definitely.
And you're right.
I mean, system D is already setting things up, managing C groups, and that's a big part
of what enables system D OOMD to work so well.
Also part of that is the Linux pressure stall information that it's got access to now.
Thanks to Facebook rounding out the low level changes, we were pretty impressed with the
cleanup work being done for grub configuration.
Fedora runs on all kinds of systems with different methods of booting.
But when you were doing things on EFI, that was in particular a little bit messy, but
they've standardized, they've cleaned things up, and now you should have a consistent experience
no matter where you're running Fedora, what type of server or workstation environment
you can look at exactly the same place to find your grub dot CFG, although here's hoping
you don't have to.
Yeah, that is a really, really nice change.
There's a ton of stuff in this release, though, West.
We just scratched the surface here.
If you want more details, then do check out our in-depth review in Linux Unplugged 403.
And now an update on our top story from last week that involved that University of Minnesota
kernel ban.
We've sourced some of this news from LWN, but I take you back to April 20th, 2021, when
the world became aware of a research program that had been conducted out of the University
of Minnesota that involved submitting intentionally buggy patches for inclusion into the Linux
kernel.
As you probably would figure, there's been some updates since last episode.
A paper that was resulting from all of this work, that research paper that was going to
be revealed at the IEEE symposium at the end of May, that's been withdrawn.
That's off.
They're not doing that anymore.
Various letters have gone back and forth between the Linux Foundation and the university, and
a giant audit has kicked off.
So really, we need to kind of go through all of this because some of these details really
matter.
And we have more information than we had last week that I think fills in a lot of this stuff.
And one of those details that's worth making really clear right now is that the most recent
patch from early April, that was from a totally different developer, not connected to the
hypocrite research paper.
The patches for the paper, those were submitted back in August of 2020.
But that said, the recent patches' poor code quality along with its source led kernel maintainers
to suspect that maybe the effort to submit intentionally malicious patches was still
ongoing.
Now, since then, it has become apparent that is not the case.
But by the time the full story became clear, well, the discussion was already well underway.
The fundamental issue was is that the university violated the kernel team's trust by conducting
this research.
So essentially, all patches became suspect.
On April 22nd, the Linux Foundation and the Technical Advisory Board sent a letter to
the university researchers outlining how the situation should be addressed in their view.
The letter asked for a complete disclosure of the buggy patches sent as part of the project.
And it also asked the team to withdraw the paper that was resulting from this work.
In response, the researchers posted an open letter apologizing to the community, followed
by a few days later, a summary of the work they did as part of the Hypocrite Commits
project.
They outlined five patches submitted overall from two sock puppet accounts.
But one of them was an ordinary bug fix that was sent from the wrong sock puppet account
by mistake.
Of the remaining four patches, one of them was an attempt to insert a bug that was itself
buggy.
So the patch was actually valid.
And the other three contained real bugs.
None of the three were accepted by maintainers, though the reasons for rejection were not
always the bugs necessarily themselves in question.
Yeah, some of those were just things like basic code quality and style.
So while the researchers had managed to find some potential issues in the kernel, their
execution and attention to detail in all of this research got in the way of any potential
insights that we might have gathered.
And that's, that's really unfortunate, because as you mentioned, it has cost both the time
of the kernel community and the trust.
Yeah.
I mean, it was not only the time to review patches that were essentially worthless, but
now the massive undertaking of reviewing all of the patches ever from the university.
That's pretty wild.
So you want to talk about time sick now it's 190 patches that have been identified.
And they're still going through all of them.
So far, things look pretty acceptable.
And those that are acceptable, they're keeping them, they're not just like throwing stuff
out.
And it does turn out some of them are a little trickier to rip out than maybe originally
thought and they're going to require another pass.
But we'll see the review is not yet complete.
And in there, there are also some that probably shouldn't have been merged in the first place.
And that's kind of one interesting aspect of this whole conversation is that while we
like how fast the kernel develops, I mean, we all want to get the shiny new features
or hardware enablement at some level, that rapid pace of development might be incompatible
with the other serious goal of good rigorous patch review and just having a low number
of bugs overall.
Yeah, it leaves that sinking feeling that potentially the model is a little vulnerable
because you have maintainers who are very overworked.
That doesn't in itself right there when you just stop and we think about what a time precious
resource kernel maintainers are, that itself doesn't feel very maintainable.
And then when you look at the velocity of development on the kernel, which is just,
it's mind boggling.
We covered some of the numbers last week.
Mind boggling.
Yeah.
I mean, we'll see if there are any changes to the kernel development process as a result
of this whole embarrassing little kerfuffle.
But with the paper no longer being presented and rightfully so, I'm kind of a little worried
that the conversation has been more about punishment than prevention.
Linode.com slash LAN.
Linode is the largest independent cloud computing provider, and they are our cloud computing
provider.
No matter what skill level you're at or what technology stack you use, Linode can help
your ideas come to life on the web.
And if you ever run into any trouble, if it's your production system that's critical for
your work, or if it's just a system you like to play Minecraft on, Linode has amazing 24
seven customer support by phone or by ticket.
And they have hundreds of guides and tutorials.
In fact, in the show notes, my friends, I'll link you to a guide on getting Twitch in a
box up and running on Linode.
If you want to self host a live stream service, you should check out Owncast, which you can
deploy in one click on Linode.
It's great for just getting a stream up and going.
And it's a great way to use that $100 credit when you go to Linode.com slash LAN.
New accounts can sign up at Linode.com slash LAN and get $100 for 60 days.
Once you're on, you can find out Linode is easy to use and has powerful tools and a great
cloud dashboard.
And I love their S3 compatible object storage.
What a simple way to back up your configuration or maybe a few systems on your LAN to object
storage in their cloud.
Or a great way to have a static website that loads crazy fast with no crazy weird web server
in front that loads all this stuff, I'm looking at you WordPress.
That's really cool.
And it makes you look great for a portfolio too when you have a crazy fast static website.
They also have cloud firewalls and all of those one click applications beyond just Owncast.
And what I love about Linode is they're super fast networking, 11 data centers worldwide
and they are their own ISP.
There's so much to like about Linode that you need that $100.
So go to Linode.com slash LAN, get $100 for a new account for 60 days and try out all
the great things we're always going on about and see why Linode is where we host everything
for Jupiter Broadcasting 3.0, linode.com slash LAN.
There have been several important updates in the land of Enterprise Linux this week.
And first, let's note the arrival of Red Hat Enterprise Linux 8.4, which Red Hat described
as a system designed to be deployed on the computing edge.
I guess that's our sign that AI and blockchain aren't hip anymore because Red Hat is pushing
this so hard as an OS that's great for the edge.
Which is funny because I just don't completely agree with their assessment, but it is what
it is.
What everyone seems to be really excited about this week, though, are the CentOS clones.
Rocky Linux 8.3 RC1 was released over the weekend.
I think they were targeting for a Friday release and it ended up landing on Saturday, but on
the same weekend.
Rocky Linux, of course, is one of the first distributions that was announced after CentOS's
development track switched to Stream from the traditional release model.
Since the founding of the project to the end of last year, Rocky Linux has seen some growth,
considerable growth.
Their Slack channels have exploded.
Their interest has really grown and the project has announced this milestone release with
the following statement saying, Rocky Linux Enterprise Software Foundation is pleased
to announce the general availability of Rocky Linux 8.3.
What I think is kind of neat, Wes, is it has support for ARM64 and of course x86-64.
Also did you see in here, because I mean this is the state of Red Hat Enterprise Linux 8,
which this is based on, that it's still Rockin' Kernel 4.18.
Yeah, that was a solid kernel.
I might even still have a machine running it.
We have one even older in the studio.
We have a machine Rockin' Kernel 4.15, an 1804 machine, so we actually do have that
beat.
The desktop environment is GNOME 3.3.2, so there's that, I suppose.
Hey, that almost sounds surprisingly modern.
Almost, but then 40 comes along and makes everything look old again.
Well, while you're talking about making things look old again, Alma Linux, yet that other
RHEL clone, released a beta of 8.4.
So if you're excited about the things Red Hat talked about in the arrival of 8.4, well
Alma Linux right now looks like your best bet.
Rocky is still plain catch up.
Yeah, so there is a couple of things when you're looking at what sets these CentOS replacements
apart.
One is the governance structure, which both Alma Linux and Rocky Linux are now community
driven, although I think Rocky Linux probably more so, just out of its nature.
But also how does it track Red Hat Enterprise Linux releases, and what is the delay there?
What I think Alma Linux is saying with their 8.4 beta is we're going to try to be as close
to RHEL's official releases as possible.
And they're doing something else that I think is also going to be a nice differentiator,
is they're kind of setting up obvious support conduits.
So if you get Alma Linux going, you got it in production, and now all of a sudden this
website that you built is making an income and it's important to you, there is a route
you can take to call up support when something breaks.
Or maybe you deploy these as some part of your back end infrastructure and one day they
became valuable to you.
You can kind of step into a support cycle with SLAs and 24 by 7 incident support.
It's kind of a nice package because you get community control, theoretically, I mean I
think that's still fully materializing.
They appear to be releasing pretty quickly in line with main RHEL, and now they have
this hey if you want it support package, much like Ubuntu LTS has.
Yeah, that sounds pretty nice in theory, but we don't have a lot of details yet on exactly
how this will work or what it will cost.
I'm sort of assuming it'll be cheaper than RHEL though, right?
It seems like it should be, or else what's really the value here?
Yeah, they say the details will be available in May 2021, a multi-tiered support system.
So at least some of those you'd think are presumably cheaper, but yeah, otherwise people
just buy RHEL.
That's a great point, Wes.
Ubuntu also has a warning out to folks this week for 21.04 breaking older machines with
EFI.
A patch is in route or probably already out now, but you'd have to have an ISO that has
it applied.
This problem mostly affected older machines like a 2012 MacBook Air and some older ThinkPad
models, but it was enough for Ubuntu to delay the rollout of that little notification prompting
you to upgrade just on the off chance that it might affect your computer and render it
unbootable.
And there is a workaround that people could use if they really want 21.04 right now.
Yeah, you'll just need to go copy the EFI boot files from a working 20.04 ISO.
And while we're still in Ubuntu land, it's been 370 days since Ubuntu 20.04's release
on April 23rd, 2020, and this week we got the first beta for elementary OS 6, which
is based on Ubuntu 20.04 and looks really sharp with completely revamped notifications
and a major shift in several ways they build the OS, including how you get it installed.
Yeah, there's a brand new installer for elementary OS, which should bring faster and more straightforward
installs for both regular old end users, but also for OEMs.
The elementary team also notes here that they would really appreciate a lot of testing across
different hardware and configurations, so if you do have a non-primary machine laying
around you don't mind trying a beta on, maybe give elementary OS 6 beta a shot.
Yeah, you don't have to be a master developer to run through the installer and provide the
team some feedback if you hit a bug.
It's a great way to help out.
I should note though, if you want to help out from the ARM side just right now, as far
as I know, there's no early builds of this beta for ARM systems, so keep an eye out.
You'll have to wait a little bit, I think.
But when you do get it on a system that is supported, you get some really nice new updates
to the look and feel of elementary OS 6.
There's a ton of things under the hood, because for elementary OS users, Wes, they're getting
everything that comes with 2004, plus the new look, plus the new Flatpak integration
with App Center, and this new style sheet that just looks really slick.
Yeah, system-wide accent colors that you can tweak to your preference, that sounds pretty
nice, and they're finally introducing a dark style preference, that's dark mode, for the
first time, which I'm definitely excited to try.
There's also a redesigned system settings view, where they'd also love some feedback.
Linux.ting.com.
If you're sick of overpaying for your cell service, go see how much you could save, and
then take $25 off that at Linux.ting.com.
I also know a good family plan is hard to find, and Ting's newest Flex plan addresses
that particular pain point in a really customer-friendly way.
You can add as many lines on your account as you need for just $10 a line.
Every line has unlimited texts and calls, and every line shares the same pool of data.
If you need two gigs or 20 gigs, there's a perfect Ting plan just for you, LTE and 5G,
and every plan gets access to Ting's award-winning customer service.
With nationwide LTE and 5G coverage, it means you've got three networks to choose from,
and a ton of great possible coverage.
And that also means it's simple to bring just about any device to Ting.
With that wide network support, that's a lot of compatibility.
So get started by going to Linux.ting.com.
Check your current phone, create an account, pick the plan that you think is right for
you.
Next up, Ting will send you a SIM card, you'll pop it in your phone and get activated in
minutes.
Getting your phone bill in half has never been easier with Ting's new plans.
The next generation of Ting Mobile is here, so go see how much you could save and take
$25 off at Linux.ting.com.
Well now for a story we're still learning more about, a series of new Spectre-like exploits
that bypass all previous mitigations.
Thanks to Tom's Hardware for the help with our reporting on this story.
Researchers from the University of Virginia and University of California San Diego have
published a paper describing three new types of potential Spectre attacks using vulnerabilities
of micro-op caching.
The team of researchers, led by Ashish Venkat, discovered that hackers can potentially steal
data when a CPU fetches commands from the micro-op cache.
And that's a problem, since all modern AMD CPUs and Intel CPUs since 2011 and since 2017
on the AMD side use micro-op caches.
So all of them in theory are vulnerable to this hypothetical attack.
I do couch it, but I think it's also important to recognize it goes back quite a ways.
And more bad news!
Researchers believe that mitigating these new vulnerabilities will cause even more significant
performance penalties than we had the first time around.
Oh boy, I think the good thing to keep in mind here is that we really have no idea how
easy these are to actually exploit in the real world.
The damage may be limited to very directed attacks, people that are extremely motivated.
The research will tell us more soon, but at this stage, I'm in the wait and see mode.
I know you, living dangerously.
Spectre mitigations disabled.
And logged in as root, Wes.
You know me.
Well, if you'd like to know more, the researchers will be presenting at ISCA next month and
we'll have the white paper linked in the show notes.
Well you might just be running Linux on a platform that may not be affected by any of
this, that Apple Silicon.
One quick but important step on the road to getting Linux fully working on the M1 is of
course the GPU driver.
Well the Asahi Linux team is now able to run OpenGL workloads like GLX Gears and GLMark2
on the M1 with a fully open source stack.
Hey, it's not just running, they're also passing about 75%, that's a C, of the OpenGL ES 2.0
tests that are used to establish Chronos conformance.
The really big news this week is that stuff that is working, the compiler and the driver,
are now upstreamed to Mesa.
This GPU work really is key to getting Linux working on Apple Silicon in any meaningful
way.
We'll have a link to the blog post that captures a lot of the journey of reverse engineering
that went on to figure out what does work and what does not work on these custom Apple
GPUs.
Yeah, just to bounce off that, Wes.
If you are kind of interested in this stuff, one of the things that's captured in that
journey is the discovery that Apple's custom GPUs, while they've culled them and made them
really specific, they still support older APIs that are way outside Metal, which is
Apple's proprietary graphics API.
So they have support in there for OpenGL stuff directly.
I guess the question is how far does that go, right?
Yeah, right.
The Asahi team are wondering just how many of those are there and could we leverage them
to implement some non-Metal APIs that otherwise they just wouldn't be able to?
Well, you can leverage our RSS feed to embrace a free and open source podcast ecosystem by
going to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And linuxactionnews.com slash contact for ways to get in touch.
And things might be sold out right now over at jupytergarage.com, but keep an eye out.
Some limited classic retro last swag is going up for sale at jupytergarage.com.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us and we will see you next week.
