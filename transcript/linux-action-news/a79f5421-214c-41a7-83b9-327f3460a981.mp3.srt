1
00:00:00,000 --> 00:00:15,760
Up first, a few headlines we thought you should know about.

2
00:00:15,760 --> 00:00:19,920
Starting with Linux 5.10 getting a big bump to its support cycle.

3
00:00:19,920 --> 00:00:25,480
Linux 5.10 is the latest long-term support kernel, but when it was announced, it promised

4
00:00:25,480 --> 00:00:31,200
only two years of maintenance till the end of 2022 or so.

5
00:00:31,200 --> 00:00:38,080
And for comparison, some prior kernels like 5.4 or 4.19 or even 4.14, those are all getting

6
00:00:38,080 --> 00:00:40,920
support well into 2024.

7
00:00:40,920 --> 00:00:46,980
This stands out in my mind specifically because I recall Greg KH saying, if some companies

8
00:00:46,980 --> 00:00:51,440
step up, we'll extend this longer, but I'm just not going to commit to it right now until

9
00:00:51,440 --> 00:00:52,880
we have that support.

10
00:00:52,880 --> 00:00:53,880
Well guess what?

11
00:00:53,880 --> 00:00:54,880
That support showed up.

12
00:00:54,880 --> 00:00:58,520
Companies seem to have stepped up and helped with testing and other things of that nature

13
00:00:58,520 --> 00:01:03,480
and Linux 5.10 will now be maintained until the end of 2026.

14
00:01:03,480 --> 00:01:09,660
That means Linux 5.10 gets six years of stable point releases and well that's great because

15
00:01:09,660 --> 00:01:14,160
we're going to see a lot of projects that are based on this kernel now and it's a nice

16
00:01:14,160 --> 00:01:15,800
modern kernel.

17
00:01:15,800 --> 00:01:22,200
In fact, we've already seen some like Debian 11 and the next Google Android operating system.

18
00:01:22,200 --> 00:01:25,640
Another quick headline for you Visual Studio Code users out there and yeah, your buddies

19
00:01:25,640 --> 00:01:30,520
Chris and Wes know not everyone's using Visual Studio Code but sure seems popular and a new

20
00:01:30,520 --> 00:01:35,200
release is notable for those of us living in the Linux desktop future.

21
00:01:35,200 --> 00:01:40,360
The April update introduced a feature you may not have noticed because it's not on by

22
00:01:40,360 --> 00:01:44,860
default, but if you're a Visual Studio Code user on Wayland, you're going to want to get

23
00:01:44,860 --> 00:01:47,140
the April update pretty quick.

24
00:01:47,140 --> 00:01:53,280
This release includes an update to VS Code's Electron base, bringing it to version 12.

25
00:01:53,280 --> 00:01:58,200
Version 12 of Electron is a major release for us Linux users because it includes Chromium

26
00:01:58,200 --> 00:02:01,800
89, which has Wayland support.

27
00:02:01,800 --> 00:02:06,200
Now like I said, it's not on by default, but we will have a link in the show notes.

28
00:02:06,200 --> 00:02:07,200
You can enable it.

29
00:02:07,200 --> 00:02:10,840
I've tried it with my setup and it works pretty well, but a little disclaimer.

30
00:02:10,840 --> 00:02:16,120
If you have a mixed DPI setup, you may have a weird cursor or menu sizing issue, so be

31
00:02:16,120 --> 00:02:21,480
aware of that, but otherwise, a nice update and one more step towards that all Wayland

32
00:02:21,480 --> 00:02:22,480
future.

33
00:02:22,480 --> 00:02:28,440
Speaking of open source Linux graphics, Michael Larable over at Ferronix has spotted a new

34
00:02:28,440 --> 00:02:34,960
GPU driver in the works, but this one isn't for a GPU that you can't even buy right now.

35
00:02:34,960 --> 00:02:43,640
No, this driver is for VMware's SVGA v3 next gen virtual PCI graphics adapter, providing

36
00:02:43,640 --> 00:02:48,560
host backed graphics acceleration for those VMware virtual machines.

37
00:02:48,560 --> 00:02:52,400
All you VMware users out there celebrate and you probably already know, but VMware has

38
00:02:52,400 --> 00:02:57,680
a longstanding series of these SVGA drivers that are actually backed by a mainline free

39
00:02:57,680 --> 00:03:02,280
software driver built into the kernel, and that's how this third version will work as

40
00:03:02,280 --> 00:03:03,280
well.

41
00:03:03,280 --> 00:03:09,000
Of course, v3 is aiming for efficiency and modernization improvements, and yes, it looks

42
00:03:09,000 --> 00:03:13,380
like there are indeed some performance improvements with v3.

43
00:03:13,380 --> 00:03:15,000
That's nice to see.

44
00:03:15,000 --> 00:03:22,680
Also in v3 is support for accelerated guest graphics on ARM64, although it's still unclear

45
00:03:22,680 --> 00:03:25,480
what the state of Vulkan support might be.

46
00:03:25,480 --> 00:03:29,720
And one last quick headline for today, we have some notable updates on the University

47
00:03:29,720 --> 00:03:31,200
of Minnesota affair.

48
00:03:31,200 --> 00:03:35,960
The Colonel Technical Advisory Board, also known as the TAB, has released their report.

49
00:03:35,960 --> 00:03:40,200
It includes a timeline of events in which they know when the actual hypocrite commits

50
00:03:40,200 --> 00:03:41,200
happened.

51
00:03:41,200 --> 00:03:42,880
It has a breakdown of the patches.

52
00:03:42,880 --> 00:03:47,400
And even some Twitter discussion from November and December that seemed to have discussed

53
00:03:47,400 --> 00:03:52,640
and debated the ethics of the research, which that time lines up November, December.

54
00:03:52,640 --> 00:03:56,120
That lines up with when the paper was accepted by the IEEE.

55
00:03:56,120 --> 00:04:01,200
The TAB report concludes with a few suggestions about how the community, with the university

56
00:04:01,200 --> 00:04:07,640
included, can move forward, including establishing an internal review process by an experienced

57
00:04:07,640 --> 00:04:11,720
kernel developer for patches that are submitted from the University of Minnesota, with the

58
00:04:11,720 --> 00:04:15,840
TAB noting that this is a practice that's already quite common in a number of companies

59
00:04:15,840 --> 00:04:18,040
and organizations.

60
00:04:18,040 --> 00:04:23,320
The TAB also recommended the creation of a best practices document for researchers working

61
00:04:23,320 --> 00:04:25,400
with the kernel community.

62
00:04:25,400 --> 00:04:29,560
And the TAB is going to work with some outside researchers to help get that drafted.

63
00:04:29,560 --> 00:04:33,520
Some guidelines could be good, you know, some rules that researchers can follow.

64
00:04:33,520 --> 00:04:38,260
Additionally, this week, the IEEE released a statement on the research paper itself.

65
00:04:38,260 --> 00:04:42,080
It appears the paper was reviewed by four individuals in the fall and received a very

66
00:04:42,080 --> 00:04:49,000
positive overall rating, questionably putting it in the top 5% of submitted papers.

67
00:04:49,000 --> 00:04:53,260
The reviewers did note that the fact that a malicious actor can attempt to intentionally

68
00:04:53,260 --> 00:04:58,700
add a vulnerability to an open source project is not new, but also acknowledged that the

69
00:04:58,700 --> 00:05:05,000
authors provide several new insights by describing why this might be easier than expected and

70
00:05:05,000 --> 00:05:09,760
why it might be difficult for maintainers to detect the problem.

71
00:05:09,760 --> 00:05:15,360
One of the program committee members briefly mentioned a possible ethical concern in their

72
00:05:15,360 --> 00:05:20,600
review, but that comment was not significantly discussed any further at the time, and IEEE

73
00:05:20,600 --> 00:05:23,040
acknowledges that they missed that.

74
00:05:23,040 --> 00:05:28,180
Their statement concludes with some actions to be taken by IEEE itself to help ensure

75
00:05:28,180 --> 00:05:35,320
that ethically-questionable papers are not accepted in the future.

76
00:05:35,320 --> 00:05:38,400
Before we get to the discussion story this week, we wanted to tell you about our friends

77
00:05:38,400 --> 00:05:41,660
that make this show possible, like Linode.

78
00:05:41,660 --> 00:05:45,000
Head over to linode.com slash lan.

79
00:05:45,000 --> 00:05:49,040
They are the largest independent cloud computing provider, and no matter what skill level you're

80
00:05:49,040 --> 00:05:51,320
at, you're going to find it works great for you.

81
00:05:51,320 --> 00:05:53,420
That's where we host everything.

82
00:05:53,420 --> 00:05:56,800
When we're building a new mail server for our community, we host it on Linode.

83
00:05:56,800 --> 00:06:00,760
When it was time to fire up the next cloud instance, we put it on Linode.

84
00:06:00,760 --> 00:06:05,640
Web servers, CDN, all of it, and Linode has object storage as well, so if you want some

85
00:06:05,640 --> 00:06:09,600
storage up in the cloud without a machine running in front of it, that's definitely

86
00:06:09,600 --> 00:06:11,440
something worth looking into.

87
00:06:11,440 --> 00:06:15,840
But I just love Linode for all of the great options they have for spinning up a classic

88
00:06:15,840 --> 00:06:16,840
VPS.

89
00:06:16,840 --> 00:06:20,600
I like getting SSH access into the machine and building what I might want to build from

90
00:06:20,600 --> 00:06:24,520
the ground up, but I completely respect and understand the people that just want to click

91
00:06:24,520 --> 00:06:28,760
one button and deploy, because Linode has a bunch of options for that, and they have

92
00:06:28,760 --> 00:06:31,520
done the work to make that work great.

93
00:06:31,520 --> 00:06:36,520
And if you run into any trouble, Linode comes with 24-7 customer support by phone or by

94
00:06:36,520 --> 00:06:37,520
ticket.

95
00:06:37,520 --> 00:06:41,520
And they have tons of guides and tutorials as well, and really their dashboard is so

96
00:06:41,520 --> 00:06:45,300
straightforward and easy to use, it's pretty self-explanatory.

97
00:06:45,300 --> 00:06:49,320
And there's a lot of great things about Linode, but what I love about Linode is they're easy

98
00:06:49,320 --> 00:06:50,320
to use.

99
00:06:50,320 --> 00:06:52,400
So if you're just not a server expert, you're fine.

100
00:06:52,400 --> 00:06:55,900
But if you are, if you know what you're doing, they don't get in your way.

101
00:06:55,900 --> 00:07:01,380
And striking that balance, that's like the perfect balance, and it's very hard to do.

102
00:07:01,380 --> 00:07:03,920
But then again, Linode's been doing this since 2003.

103
00:07:03,920 --> 00:07:08,400
They focused on one thing, and they've made sure they do it really, really well.

104
00:07:08,400 --> 00:07:12,440
Now they have super fast networking, crazy fast machines, 11 data centers worldwide,

105
00:07:12,440 --> 00:07:16,740
native SSDs on everything, I mean, it really screams.

106
00:07:16,740 --> 00:07:20,120
And they have plans that start around $5 a month, and you can go up from there with lots

107
00:07:20,120 --> 00:07:24,660
of memory, CPU, GPU, storage, depending on what you need.

108
00:07:24,660 --> 00:07:27,120
So you really probably just want to check it out for yourself.

109
00:07:27,120 --> 00:07:32,160
Sign up today by going to linode.com slash LAN and get a $100 60-day credit towards your

110
00:07:32,160 --> 00:07:33,200
new account.

111
00:07:33,200 --> 00:07:37,280
That's real money you can work with there to try out Linode and put it in production

112
00:07:37,280 --> 00:07:38,780
and put it through its paces.

113
00:07:38,780 --> 00:07:42,600
See how hard it is to use or how easy it is for you, and also see what its performance

114
00:07:42,600 --> 00:07:43,600
is like.

115
00:07:43,600 --> 00:07:46,520
And I think you'll find Linode is one of the fastest hosting providers out there.

116
00:07:46,520 --> 00:07:51,560
So go to linode.com slash LAN, get that $100 60-day credit, and of course, support the

117
00:07:51,560 --> 00:07:52,560
show.

118
00:07:52,560 --> 00:07:55,100
linode.com slash LAN.

119
00:07:55,100 --> 00:08:02,120
And support the show and get a way better cell phone plan at linux.ting.com, linux.ting.com,

120
00:08:02,120 --> 00:08:06,200
go there, see how much you could save, and then take 25 bucks off of that.

121
00:08:06,200 --> 00:08:11,200
Ting's new set 12 plan, which gives you 12 gigs of data, unlimited talk and unlimited

122
00:08:11,200 --> 00:08:15,040
text is just $35 a month.

123
00:08:15,040 --> 00:08:16,840
Keep your noodle around that.

124
00:08:16,840 --> 00:08:21,760
12 gigs, man, if you just sync your podcasts and your music and do your app updates on

125
00:08:21,760 --> 00:08:25,880
WiFi, 12 gigs is going to be way more than you're going to need, and unlimited talks

126
00:08:25,880 --> 00:08:28,240
and text, that's what's up for 35 bucks.

127
00:08:28,240 --> 00:08:33,000
But they have good family plans as well that let you share pooled data, and of course,

128
00:08:33,000 --> 00:08:37,940
every plan gets LTE and 5G because Ting's got multiple networks you can choose from.

129
00:08:37,940 --> 00:08:41,600
That's one of the power user moves about Ting is you can move over to Ting, and then you

130
00:08:41,600 --> 00:08:43,600
pick the network that's best in your area.

131
00:08:43,600 --> 00:08:47,520
That's the power move, they need to call it like the Ting slide, you know, you slide into

132
00:08:47,520 --> 00:08:51,160
a better network deal, you pay less and you get to pick the network.

133
00:08:51,160 --> 00:08:53,240
That's like the Ting slide, they can just take that.

134
00:08:53,240 --> 00:08:55,080
I'm an idea guy, I'm going to give it to them.

135
00:08:55,080 --> 00:08:58,320
Head over there right now and check it out at linux.ting.com.

136
00:08:58,320 --> 00:09:03,000
Every plan gets access to Ting's award-winning customer service, their nationwide LTE and

137
00:09:03,000 --> 00:09:08,020
5G service, which amazingly, I cannot believe how many places have popped up 5G, respect

138
00:09:08,020 --> 00:09:11,040
to the carriers, they're actually rolling that stuff out.

139
00:09:11,040 --> 00:09:15,280
But the best thing about Ting is no contracts ever.

140
00:09:15,280 --> 00:09:18,360
Three great networks to choose from, and it's simple to switch to Ting.

141
00:09:18,360 --> 00:09:21,160
And with all those networks, it probably means your phone already works.

142
00:09:21,160 --> 00:09:22,160
So go find out.

143
00:09:22,160 --> 00:09:27,080
Head over to linux.ting.com, check your current phone, create an account, and pick the plan

144
00:09:27,080 --> 00:09:28,080
that's right for you.

145
00:09:28,080 --> 00:09:32,520
Then Ting will send you a SIM card, you pop that sucker in and you get activated in minutes.

146
00:09:32,520 --> 00:09:36,800
Cutting your phone bill in half has never been easier with Ting's new plans.

147
00:09:36,800 --> 00:09:41,040
So go check it out at linux.ting.com.

148
00:09:41,040 --> 00:09:48,240
Now for our discussion story today, free software darling Audacity has new owners.

149
00:09:48,240 --> 00:09:53,880
And along with those new owners, a fresh controversy about telemetry.

150
00:09:53,880 --> 00:09:58,640
Earlier this week, we learned Audacity had been purchased by The Muse Group.

151
00:09:58,640 --> 00:10:04,160
An explanatory video was posted by Martin Curie, also known as Tantacruel, content of

152
00:10:04,160 --> 00:10:08,040
which was confirmed by the Audacity team to us via email.

153
00:10:08,040 --> 00:10:13,040
Yeah, they didn't add much in that email other than they were both nervous and excited.

154
00:10:13,040 --> 00:10:17,560
But the controversy you just mentioned, well, that controversy has become the predominant

155
00:10:17,560 --> 00:10:18,560
story now.

156
00:10:18,560 --> 00:10:22,400
It's centered around this first big patch to Audacity by The Muse Group.

157
00:10:22,400 --> 00:10:26,180
It's third party tracking code for Google Analytics and Yandex.

158
00:10:26,180 --> 00:10:33,200
And as one commenter on the poll request noted, currently over 99.9% of reactions to the original

159
00:10:33,200 --> 00:10:35,320
commit are negative.

160
00:10:35,320 --> 00:10:38,660
Clearly the users are overwhelmingly opposed to it.

161
00:10:38,660 --> 00:10:43,900
If this gets added, this will be a massive middle finger to people who have used Audacity

162
00:10:43,900 --> 00:10:50,320
all these years and will most likely result in a loss of users or maybe put another way,

163
00:10:50,320 --> 00:10:51,320
fork.

164
00:10:51,320 --> 00:10:56,240
Now, we should note that this poll request, which showed up on Audacity's GitHub earlier

165
00:10:56,240 --> 00:11:02,920
this week, would have tracking disabled by default and require the user to opt in.

166
00:11:02,920 --> 00:11:07,680
The author of the request, Dmitry Videnko, explained that Universal Google Analytics

167
00:11:07,680 --> 00:11:13,960
would be used to track the following events, session start and end, errors, especially

168
00:11:13,960 --> 00:11:18,480
those coming from the SQLite 3 database engine, which they're now using to store all your

169
00:11:18,480 --> 00:11:24,640
recordings, usage information for things like effects, sound generators, and analysis tools,

170
00:11:24,640 --> 00:11:29,280
as well as what file formats are used for import, export, and of course that regular

171
00:11:29,280 --> 00:11:33,040
old OS and Audacity version information.

172
00:11:33,040 --> 00:11:37,440
In addition to all that, there'd also be a UUID stored on your local machine that'd be

173
00:11:37,440 --> 00:11:44,000
used to identify sessions, and the web analytics service Yandex Metrica would be used to estimate

174
00:11:44,000 --> 00:11:45,480
daily active users.

175
00:11:45,480 --> 00:11:50,760
All right, so that's the facts, and so now some analysis and opinion.

176
00:11:50,760 --> 00:11:53,000
This change has just not gone down well.

177
00:11:53,000 --> 00:11:57,100
The main issue seemingly being the use of Google Analytics and Yandex instead of maybe

178
00:11:57,100 --> 00:12:03,260
an open source solution, it seems as though the Muse group either didn't understand and

179
00:12:03,260 --> 00:12:10,580
appreciate how the free software community would receive this kind of change, or perhaps

180
00:12:10,580 --> 00:12:13,720
not as generously, they just didn't care.

181
00:12:13,720 --> 00:12:18,580
You know, you could really kind of understand from a business how this comes about.

182
00:12:18,580 --> 00:12:22,520
You have a group of people, they take over something they're not intimately familiar

183
00:12:22,520 --> 00:12:26,880
with, they want to be a good steward, they have limited resources, and the first question

184
00:12:26,880 --> 00:12:29,280
that comes up is where do we focus our time?

185
00:12:29,280 --> 00:12:32,640
I mean, Muse groups talked already about redoing the UI, and I like their thoughts on that.

186
00:12:32,640 --> 00:12:36,960
I think it has some real potential, but they have to approach this practically.

187
00:12:36,960 --> 00:12:40,560
From the product owner and developer perspective, I think it's definitely understandable why

188
00:12:40,560 --> 00:12:43,280
you'd want more information about what's going on.

189
00:12:43,280 --> 00:12:48,480
You're new to the community, you want to prioritize what resources you have, and really free and

190
00:12:48,480 --> 00:12:52,960
open source software is kind of a dark area where you don't have that, but if you're working

191
00:12:52,960 --> 00:12:56,880
on other services, especially web services, backend services, you've got logs, you've

192
00:12:56,880 --> 00:13:01,080
got instrumentation, you have your own metrics and telemetry that you can embed, it's kind

193
00:13:01,080 --> 00:13:03,920
of a natural extension if you've worked in any of those other areas.

194
00:13:03,920 --> 00:13:04,920
Yeah, I agree.

195
00:13:04,920 --> 00:13:09,580
You can see how they arrive there from a business decision, and I believe Muse's other products

196
00:13:09,580 --> 00:13:12,760
in the Muse group use this Google Analytics package.

197
00:13:12,760 --> 00:13:15,760
So I think it's kind of understandable.

198
00:13:15,760 --> 00:13:18,880
I think a big component of this is people don't like the fact that Google's involved.

199
00:13:18,880 --> 00:13:20,960
They don't want their information going to Google.

200
00:13:20,960 --> 00:13:22,720
But I'm not sure if that's enough.

201
00:13:22,720 --> 00:13:27,600
Like I think some people just question if this is necessary at all.

202
00:13:27,600 --> 00:13:32,520
Shouldn't a feature request or some, you know, an issue request be sufficient?

203
00:13:32,520 --> 00:13:38,680
Yeah, there's more than a few different arguments about why this particular PR is a bad idea.

204
00:13:38,680 --> 00:13:42,800
Some folks just don't like seeing Google or Yandex or any of these big third parties involved.

205
00:13:42,800 --> 00:13:46,040
And it would be interesting, what would the reception have been like if they were using

206
00:13:46,040 --> 00:13:48,520
a self-hosted analytics solution?

207
00:13:48,520 --> 00:13:52,000
Although I know there are other views out there that, well, then they could sort of

208
00:13:52,000 --> 00:13:53,520
collect whatever they want.

209
00:13:53,520 --> 00:13:57,680
And at least with some of these vendors, you have an idea of what that surface area is,

210
00:13:57,680 --> 00:13:59,520
even if you don't like whose hands it's in.

211
00:13:59,520 --> 00:14:00,520
The devil, you know.

212
00:14:00,520 --> 00:14:03,320
I mean, they're already collecting your information a million other ways, I suppose.

213
00:14:03,320 --> 00:14:06,640
Yeah, I'm not sure I agree with that, but I think that's the gist of the argument.

214
00:14:06,640 --> 00:14:08,600
I appreciate that this was going to be opt-in.

215
00:14:08,600 --> 00:14:11,760
I think that, you know, we just got to say that again, it's default, it's off.

216
00:14:11,760 --> 00:14:13,620
And I think that's notable.

217
00:14:13,620 --> 00:14:17,480
And I can understand wanting information about what effects get used, because some of these

218
00:14:17,480 --> 00:14:20,660
could really use some love and audacity, and there's a lot of elements of audacity that

219
00:14:20,660 --> 00:14:23,400
could use some time and attention.

220
00:14:23,400 --> 00:14:25,120
We use it as a daily tool.

221
00:14:25,120 --> 00:14:26,880
So we follow this pretty closely.

222
00:14:26,880 --> 00:14:31,440
And I think this is a good moment to point out why I like having as many of my tools

223
00:14:31,440 --> 00:14:36,360
free software as possible, because that's the only way our privacy is truly protected.

224
00:14:36,360 --> 00:14:40,880
I mean, yeah, sure, the Muse group could put this patch in, but if Audacity was a closed

225
00:14:40,880 --> 00:14:43,000
source app, we would have never found out about this.

226
00:14:43,000 --> 00:14:46,880
If this was some Adobe tool that was part of Creative Cloud, well, you just never know.

227
00:14:46,880 --> 00:14:47,960
You know, they would just ship it.

228
00:14:47,960 --> 00:14:49,680
It would be collecting information.

229
00:14:49,680 --> 00:14:53,420
But instead, this was discovered before it was even merged.

230
00:14:53,420 --> 00:14:57,060
So not only could you see that telemetry was being added, but you could see exactly what

231
00:14:57,060 --> 00:14:58,980
data was going to be collected.

232
00:14:58,980 --> 00:15:03,640
And that led to a big conversation and is where we are at now and developers are justifying

233
00:15:03,640 --> 00:15:07,440
their position and the community is hashing it out.

234
00:15:07,440 --> 00:15:10,920
Kyle Rankin, PRism's Chief Security Officer, has actually a pretty thought-provoking post

235
00:15:10,920 --> 00:15:15,560
on this that we'll link to, and it really kind of, it is a great example of why free

236
00:15:15,560 --> 00:15:20,240
software provides you a level of privacy and security that you really don't get from closed

237
00:15:20,240 --> 00:15:21,240
source software.

238
00:15:21,240 --> 00:15:25,200
But back to this, Wes, you know, I'm kind of left with two really uncomfortable ideas

239
00:15:25,200 --> 00:15:26,200
in my head.

240
00:15:26,200 --> 00:15:29,920
Number one, I don't like how the Muse group announced the acquisition of Audacity to begin

241
00:15:29,920 --> 00:15:34,080
with from their lead designer on a YouTube video.

242
00:15:34,080 --> 00:15:35,080
It's okay.

243
00:15:35,080 --> 00:15:38,920
But there wasn't a lot of room left for the Audacity community.

244
00:15:38,920 --> 00:15:40,280
It wasn't targeted at them.

245
00:15:40,280 --> 00:15:44,240
Yeah, there wasn't something that came from the Audacity team and as somebody who uses

246
00:15:44,240 --> 00:15:48,320
this as a daily tool, it just didn't leave me with a lot of confidence about how that

247
00:15:48,320 --> 00:15:49,320
aspect of it was handled.

248
00:15:49,320 --> 00:15:51,680
And that was a bit of a red flag right there.

249
00:15:51,680 --> 00:15:56,800
And then to see like their big first commit, their big first pull request is analytics

250
00:15:56,800 --> 00:16:01,280
tracking using third-party tools that it's going to be controversial on its face.

251
00:16:01,280 --> 00:16:05,360
I mean, you'd really have to be pretty tuned out to not know how people are going to react

252
00:16:05,360 --> 00:16:10,560
to suggesting that you take Google Analytics and you bake it into sort of the iconic free

253
00:16:10,560 --> 00:16:11,560
software audio editor.

254
00:16:11,560 --> 00:16:14,680
I think you might have hit on some of that right there.

255
00:16:14,680 --> 00:16:20,720
I wonder how tuned into the free software side of this whole thing the new owners are.

256
00:16:20,720 --> 00:16:24,960
If you just think of it as a very popular open source audio editor, well, I mean, none

257
00:16:24,960 --> 00:16:25,960
of that's changing, right?

258
00:16:25,960 --> 00:16:28,740
That they weren't talking about closing the source at all.

259
00:16:28,740 --> 00:16:34,680
But there's this whole other philosophical side of our community that I'm not sure all

260
00:16:34,680 --> 00:16:36,440
outsiders really appreciate.

261
00:16:36,440 --> 00:16:39,840
It sort of reminds me of when they started adding all that telemetry to Windows.

262
00:16:39,840 --> 00:16:41,480
Now, of course, that's proprietary.

263
00:16:41,480 --> 00:16:42,640
Because it's definitely different.

264
00:16:42,640 --> 00:16:46,800
But the way you modeled your computer, you know, I wasn't thinking in the past of old

265
00:16:46,800 --> 00:16:50,020
versions of Windows that would just be opening a whole bunch of random network connections

266
00:16:50,020 --> 00:16:52,520
behind my back without me asking it.

267
00:16:52,520 --> 00:16:55,140
After the new era, that changed and I had to adapt what I was thinking.

268
00:16:55,140 --> 00:16:59,080
And that's the kind of change I think that's upsetting to people in this version of Audacity.

269
00:16:59,080 --> 00:17:03,800
Even if you're totally okay with all the information going, it's just one new layer of am I being

270
00:17:03,800 --> 00:17:08,880
spied on calculus that up to now, free software has been free from.

271
00:17:08,880 --> 00:17:12,800
I don't know if I'm totally opposed to telemetry, because I feel like free software developers

272
00:17:12,800 --> 00:17:16,820
need to know what features are being used and how they should prioritize their very

273
00:17:16,820 --> 00:17:18,320
limited time.

274
00:17:18,320 --> 00:17:23,080
But there are projects that have successfully done tracking in a way that I am comfortable

275
00:17:23,080 --> 00:17:24,080
with.

276
00:17:24,080 --> 00:17:26,480
The sync thing project does a really good job of that.

277
00:17:26,480 --> 00:17:30,680
KDE actually has a pretty good metrics policy, it could use a little more filling out, but

278
00:17:30,680 --> 00:17:34,880
they've done a really good job of clearly defining what they're going to track and why.

279
00:17:34,880 --> 00:17:37,460
And I'm comfortable with both of them.

280
00:17:37,460 --> 00:17:41,540
And so it's not really, for me, I'm not black and white on this issue.

281
00:17:41,540 --> 00:17:46,100
There's a little gray for me, I can see where metrics collection can be useful.

282
00:17:46,100 --> 00:17:49,920
And I think Canonical came to a pretty good solution with how they do it with Ubuntu now.

283
00:17:49,920 --> 00:17:51,800
It's not too invasive and all of that.

284
00:17:51,800 --> 00:17:54,640
This on the other hand, I'm not as comfortable with.

285
00:17:54,640 --> 00:17:58,380
And because of that red flag, I mean, these are multiple red flags now, because it seems

286
00:17:58,380 --> 00:18:01,460
like this is something an outsider would do to free software.

287
00:18:01,460 --> 00:18:06,100
That makes me a little apprehensive about where things are going with Audacity.

288
00:18:06,100 --> 00:18:11,400
And lastly, Wes, I think what my concern is, and this goes back to them not really fully

289
00:18:11,400 --> 00:18:16,560
being insiders in the free software community, is most distributions are just going to patch

290
00:18:16,560 --> 00:18:19,940
this right out, regardless of what they do.

291
00:18:19,940 --> 00:18:21,520
They're going to patch this right out.

292
00:18:21,520 --> 00:18:27,280
And so desktop Linux usage is going to be underrepresented in their statistics, because

293
00:18:27,280 --> 00:18:30,240
most people install it from their repositories.

294
00:18:30,240 --> 00:18:35,100
And I don't know what the answer is to that, but I worry that it would give a unfair picture

295
00:18:35,100 --> 00:18:36,600
to the development team.

296
00:18:36,600 --> 00:18:39,740
And it seems like they might not be tuned in enough with the free software community

297
00:18:39,740 --> 00:18:44,200
to really appreciate the ramifications that might have on the kind of data they're getting

298
00:18:44,200 --> 00:18:45,200
back.

299
00:18:45,200 --> 00:18:46,200
That's a really good point.

300
00:18:46,200 --> 00:18:51,040
And it makes me wonder if we do need more standardization or best practices out there

301
00:18:51,040 --> 00:18:54,460
so that we can feel more comfortable with maybe some distros turning that on, getting

302
00:18:54,460 --> 00:18:55,920
better representation.

303
00:18:55,920 --> 00:18:58,740
Because clearly, we're not going to be able to totally avoid this problem.

304
00:18:58,740 --> 00:19:03,480
This is going to keep happening because it's so prevalent in just about all other software

305
00:19:03,480 --> 00:19:04,480
right now.

306
00:19:04,480 --> 00:19:06,760
And it seems like if we don't get ahead of it, we're just going to end up with a whole

307
00:19:06,760 --> 00:19:09,760
bunch of partial and non-ideal solutions.

308
00:19:09,760 --> 00:19:11,240
Yeah, I don't want every...

309
00:19:11,240 --> 00:19:15,920
Boy, I really don't like this because I really don't like my local applications needing any

310
00:19:15,920 --> 00:19:18,440
or using any kind of network resources.

311
00:19:18,440 --> 00:19:22,560
Sometimes I'm literally on the edge of connectivity and every little bit matters.

312
00:19:22,560 --> 00:19:26,560
And I don't want my applications reporting back some complicated analytics package to

313
00:19:26,560 --> 00:19:27,560
Google.

314
00:19:27,560 --> 00:19:30,760
Look, I'm just sending a little bit of JSON, a few megs.

315
00:19:30,760 --> 00:19:31,760
It's fine.

316
00:19:31,760 --> 00:19:32,760
No, I don't want it.

317
00:19:32,760 --> 00:19:36,720
There's that version of me out there, but I'm trying to figure out what a reasonable

318
00:19:36,720 --> 00:19:38,200
middle ground would be.

319
00:19:38,200 --> 00:19:42,120
And one idea that's been kicked around, which I do not agree with, but it's funny what we're

320
00:19:42,120 --> 00:19:47,640
getting to is, well, what about a centralized metric statement on Linux that has a standard

321
00:19:47,640 --> 00:19:50,520
API that application developers could use?

322
00:19:50,520 --> 00:19:54,840
And that would be free software that could be audited, that we could guarantee operates

323
00:19:54,840 --> 00:19:57,920
in a way that anonymizes the user.

324
00:19:57,920 --> 00:20:02,620
And it collects everything centrally instead of each application, sending things out over

325
00:20:02,620 --> 00:20:06,360
the internet, each one of them eating CPU and network cycles.

326
00:20:06,360 --> 00:20:09,640
And this demon kind of manages it all and then batches it up and sends it off when the

327
00:20:09,640 --> 00:20:11,320
machine's not busy.

328
00:20:11,320 --> 00:20:15,080
And you know what you end up with is exactly what Apple and Microsoft have done with their

329
00:20:15,080 --> 00:20:16,760
operating systems.

330
00:20:16,760 --> 00:20:17,760
System D, metrics D.

331
00:20:17,760 --> 00:20:18,760
Yeah.

332
00:20:18,760 --> 00:20:22,020
And nobody wants that, right?

333
00:20:22,020 --> 00:20:25,600
But the thing that really kind of I think stinks is this is going to be the way things

334
00:20:25,600 --> 00:20:26,880
go in the future.

335
00:20:26,880 --> 00:20:30,800
More applications are going to bake this kind of stuff in because developer time is precious.

336
00:20:30,800 --> 00:20:34,440
I guess the question then is, how do you feel about that trade-off?

337
00:20:34,440 --> 00:20:39,040
I mean, we really like using Audacity and it has a lot of great features.

338
00:20:39,040 --> 00:20:43,640
But as you acknowledged earlier, quite a few of them could use a little bit of loving.

339
00:20:43,640 --> 00:20:47,560
If these features, if this telemetry really helps make that happen, if it lets you have

340
00:20:47,560 --> 00:20:51,400
a voice in saying, these are the things I use, this is where you should spend some time.

341
00:20:51,400 --> 00:20:52,400
I don't know.

342
00:20:52,400 --> 00:20:53,680
Will you turn it on?

343
00:20:53,680 --> 00:20:56,360
Would you go grab the binary builds and opt in?

344
00:20:56,360 --> 00:20:57,700
I might.

345
00:20:57,700 --> 00:20:59,360
It does feel like a bit of a fair trade.

346
00:20:59,360 --> 00:21:02,280
I've gotten years of value out of this software.

347
00:21:02,280 --> 00:21:04,420
And there are some areas that could use some loving.

348
00:21:04,420 --> 00:21:11,120
And so if me participating in that got attention to those areas, maybe just a little bit more,

349
00:21:11,120 --> 00:21:13,240
that might be useful because I mean, how many users is it going to be?

350
00:21:13,240 --> 00:21:14,480
Tens of thousands that turn this on?

351
00:21:14,480 --> 00:21:15,480
Because remember, it's opt in.

352
00:21:15,480 --> 00:21:18,320
So, I mean, it's going to be a pretty small sample size.

353
00:21:18,320 --> 00:21:22,680
So you may actually have a representable impact on the data collected.

354
00:21:22,680 --> 00:21:25,280
And I wonder too, because it's going to be more and more of a thing.

355
00:21:25,280 --> 00:21:26,880
So I've got to come to this decision.

356
00:21:26,880 --> 00:21:30,240
And I'm definitely going to be the least comfortable with Google Analytics.

357
00:21:30,240 --> 00:21:33,920
I thought about this a little bit and thought to myself, would I feel better if they were

358
00:21:33,920 --> 00:21:35,920
hosting some open source analytics package?

359
00:21:35,920 --> 00:21:36,920
And I think I would.

360
00:21:36,920 --> 00:21:41,680
I actually think I would feel better about it because being part of Google Analytics

361
00:21:41,680 --> 00:21:45,640
feels like you're part of a wider surveillance network that now they say they're not going

362
00:21:45,640 --> 00:21:49,680
to do the cross domain stuff, but it's still at the end of the day being collected by Google,

363
00:21:49,680 --> 00:21:53,440
which I just believe Google is using that information to correlate other activity by

364
00:21:53,440 --> 00:21:54,440
me.

365
00:21:54,440 --> 00:21:55,880
It just seems like why wouldn't they?

366
00:21:55,880 --> 00:21:59,680
And I'm not super comfortable participating in that wider surveillance network, but I

367
00:21:59,680 --> 00:22:05,440
think I would be comfortable participating in a metric solution that they hosted that

368
00:22:05,440 --> 00:22:07,960
was a known open source package.

369
00:22:07,960 --> 00:22:13,000
But if they're not going to do that, I think in this instance, I probably will try to use

370
00:22:13,000 --> 00:22:16,880
it as a show of support for the team.

371
00:22:16,880 --> 00:22:21,480
Not really happy about it and not really a great first introduction to the music group.

372
00:22:21,480 --> 00:22:26,800
And I want to say also for the record, we have reached out to them to clear up any information

373
00:22:26,800 --> 00:22:28,240
and so far we have not heard back.

374
00:22:28,240 --> 00:22:33,720
Yeah, I think there was always going to be some event like this, different levels of

375
00:22:33,720 --> 00:22:38,800
severity perhaps, but some kind of confrontation maybe or just getting to know you with the

376
00:22:38,800 --> 00:22:41,840
music group and the existing user base.

377
00:22:41,840 --> 00:22:44,720
Guess we're just getting right to it with this one.

378
00:22:44,720 --> 00:22:45,720
We sure are.

379
00:22:45,720 --> 00:22:49,600
This is definitely going to be one to follow and no doubt about it, the conversation is

380
00:22:49,600 --> 00:22:50,720
not yet done.

381
00:22:50,720 --> 00:22:54,320
So we will follow it for you and all of the other developments in the world of Linux and

382
00:22:54,320 --> 00:22:55,320
free software.

383
00:22:55,320 --> 00:22:59,560
So go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

384
00:22:59,560 --> 00:23:03,920
And linuxactionnews.com slash contact for ways to get in touch.

385
00:23:03,920 --> 00:23:06,800
Check out what's for sale in the Jupiter Garage sale.

386
00:23:06,800 --> 00:23:11,680
At JupiterGarage.com there's new stuff up all the time and retro limited time stuff

387
00:23:11,680 --> 00:23:12,680
as well.

388
00:23:12,680 --> 00:23:17,880
We'll be back next Monday with our weekly take on the latest Linux and open source news.

389
00:23:17,880 --> 00:23:20,520
Thanks for joining us and we will see you next week.

