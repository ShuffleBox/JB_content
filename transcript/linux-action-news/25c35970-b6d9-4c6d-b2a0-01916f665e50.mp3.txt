Hello, and welcome to Linux Action News, episode 231, recorded on March 9th, 2022.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
We start this week with a dirty pipe.
The name for a new vulnerability disclosed this week that's supposed to imply similarities
to the recent dirty cow vulnerability, and perhaps provide some clues about this new
vulnerability's origins.
In this case, pipe refers to our beloved Unix pipelines.
Tracked as CVE-2022-0847, the vulnerability came to light when a developer for website
builder CM4ALL was troubleshooting a series of corrupted files that kept appearing on
a customer's Linux box.
After months of dead-end analysis, the dev finally figured out that the customer's corrupted
files were actually the result of a bug in the kernel.
The developer, Max Kellerman, not only found the source of the bug, but quickly created
an exploit based on it too.
The issue has been in the Linux kernel since Linux 5.8, and it allows for overriding data
in an arbitrary read-only file.
It's not good.
Yeah, it wasn't long until researchers out there had the nobody account overriding whatever
read-only files they wanted with a simple bash script.
No, it didn't matter if this was in a read-only snapshot or on a read-only file system for
that matter.
You could still overwrite it.
And that meant that the damage from dirty pipe?
It wasn't just limited to overriding files because, well, you can build on that.
You can create a cron job that runs and gives you a backdoor, you can add a new user account
to Etsy password and shadow, or you can just directly modify a script or even a set UID
binary to help give yourself a root account.
Yeah, really demonstrating that you have to build your systems in such a way that they
can be continuously updated.
And as you're probably also guessing right now, dirty pipe also afflicts Android, at
least Androids that are based on one of the vulnerable Linux kernel versions.
So as you might imagine, it's a little more complicated when it comes to Android because
of the various versions.
But put simply, the latest version of Android for the Pixel 6 and the Samsung Galaxy S22,
for instance, is impacted.
Those are on version 5.10 of the Linux kernel.
But for example, a Pixel 4, that's on Android 12, which runs on Linux 4.14.
That's unaffected.
So really, to check, what you need to do is take your device, go to Settings, About Phone,
and then check your Android version there, and it'll tell you which version of the Linux
kernel you're using.
Now, I'll be honest, my first instinct is to make a joke about ancient Android kernels
and whatever I may be running with my Pixel 3 in my pocket.
But I tried to give this a go on a few of my boxes.
And yeah, actually, I still have a few of those out there that had kernels that were
too old to be affected.
So I guess I'll shut up.
Yeah, but you did find a system that was vulnerable.
Yeah, on the flip side, a few of my boxes, I'd already done updates since this was released
and patched.
So those weren't.
But I'd spun up a 2110 box last week to be a Steam game server for a few friends.
And I hadn't touched it since then.
Turns out, yep, it was vulnerable, and it was pretty straightforward.
We'll have linked in the show notes to a quick little proof of concept exploit.
But it's maybe like a half page of some C code.
Copy and pasted that into vim on the server, wrote it out, gave it a quick compile with
gcc.
And then you just take that binary and you run it and you point it at another binary
in the system that's a setuid binary.
That was easy.
In this case, it was user bin su.
Run that as a totally unprivileged user, and boom, root account.
That'd be kind of handy if you ever forgot the pseudo password on that box, but you still
had another account on there.
You can fix that now.
Actually, I have to say, the developer did a really good job on the write up on this
one.
We don't always say this, and so this one is actually worth a read after you get done
listening to the show.
So we will have a link to that in the show notes.
And like Wes just said, we also have that exploit that you can try in your own system
if for some reason you want to pop one of your own boxes.
That'll also be linked in the show notes.
Well, it looks like we might be seeing a lot more kernel code inbound in the not so distant
future.
That's because AMD is hiring more Linux engineers, filling out various roles seemingly across
the organization from Linux semiconductor engineers to kernel virtualization experts
to just general systems and sys admins, a whole bunch more.
Yeah, I was pleased to see some specific focus on a position to apparently work with KVM
and QMU.
That's really cool.
I'm looking forward to see where that eventually ends up.
But you know, what's even more interesting if you kind of zoom out here is it was about
a year ago, maybe give or take a little bit that we were covering right here on the show,
a new internal organization inside AMD that was focused on commercial partners using Linux.
And so when you look at these job openings now that you're seeing and the spectrum that
they're covering, I think it's probably pretty fair to speculate that these new positions
are opening up as a result of the feedback and engagement that that organization has
gotten with those customers.
But here's what really strikes me.
It actually even kind of blows me away, Wes, is when you go to AMD's open jobs board, which
we'll have linked in the notes, and you use Linux as a keyword filter and say you limit
those results to just Austin, Texas, you'll get 229 open jobs that either list Linux as
a skill requirement or a primary function of the job at AMD.
And that number gets even a lot higher when you expand that to a worldwide search.
There's actually over 700 results.
Yeah, it's kind of amazing between stuff, you know, whether you're working on actually
tweaking kernel builds to work better with AMD hardware, or you're working on the virtualization
framework, or you're working to help clients engage with that hardware, or maybe you're
a BIOS engineer who's working on, you know, integration with the firmware level.
There's also a bunch of job openings aimed at optimizing machine learning frameworks
for AMD hardware.
And this all just kind of underscores that regardless of even if you're not a, you know,
a Linux focused hardware company, you just need Linux to run a big modern business.
I mean, some jobs that came up here are senior PHP developer, not because you know, Linux
is essential necessarily to the main part of your job, but because of course, what's
that PHP running on?
It's Linux.
Well the folks behind the most popular matrix client element have just announced element
call.
It's a new simple web based conferencing app that is, of course, built on top of matrix.
But don't worry, you don't need your own matrix server to use it.
But because this is matrix, if you do have your own server, well, yeah, you can self
host it there yourself and have an all in one integrated setup while still being able
to talk to anyone else anywhere on the wider matrix network.
I do love that feature.
So if you want to try it out to see what it's like, you can just get started by going to
call.element.io in just about any browser.
The team has worked really hard to support as many browsers as possible, even making
it a progressive web app on mobile.
Once you're in, I think you'll find a sensible, but quite usable video call client with a
couple of nice layout options, quick and really easy screen sharing.
I mean, even on, you know, an older Linux system with XFCE popped right into that screen
sharing.
And the other thing that of course is now table stakes, but still nice to see is the
ability to share that meeting via a link, sort of like how Zoom made so popular in the
before times.
Yeah, you don't even need an account to get started.
You can just log in as an automated anonymous user like we did, and that works just fine.
It's obviously a bit of an MVP, but what is there felt snappy and pretty much just worked
at least on the quick try we gave it.
But we should stress that this is very much in beta and has a ton of limitations, at least
for now.
Things like end-to-end encryption not yet being enabled, login if you are choosing to
use a login.
Well, that's limited to just using a single predefined server, whether that's the server
you're using to self host or the shared instance that call.element.io is using.
You also can't use the same user on multiple devices.
Not sure if that's ever going to be supported, but you can't right now.
And it's not really optimized, both in terms of the client, in terms of bandwidth, CPU
bandwidth, but also it only implements a full peer-to-peer mesh call.
With WebRTC, you've got some other options, things called selective forwarding units and
a few other tricks out there, which the big names in this space used to make things scale
a bit more.
Because if you have to send a copy of your video and audio to each single participant
in your call, yeah, that doesn't scale great.
And in testing, they've found that the implementation so far can support about eight people before
it starts to fall over.
Yeah.
So I don't think this is ready to replace those company-wide or project-wide or event
solutions that are using Jitsi right now.
It's just not quite there.
They do already have plans to address it, like Wes said.
They already have it kind of figured out.
It's just not implemented yet.
But if you don't need it for more than about five people, it's probably going to be just
fine for you.
And really, for just like two of us, it's totally great.
I mean, we're pretty picky about this kind of stuff.
And we found it really pretty usable.
Yeah, you know, it definitely was.
If we didn't already have a few different back channel methods to use while we're recording,
I think we could have definitely used element call to get this show done.
And I think it's probably only going to get better.
I mean, this is really excited.
Not that Jitsi hasn't worked.
I think the team acknowledges that Jitsi embedded as a widget has served really well to enable
this within the element platform.
But this new version, I mean, it's directly using matrix as the signaling layer, which
means some exciting stuff can happen.
I mean, it's a little funny right now.
This doesn't support chat, even though it's, you know, based on matrix and element, which
we think of as a chat app, but it can do so much more.
So chat's going to get added.
They're talking about adding, you know, moderation control, being able to mute or kick other
people out.
Some of the fancy stuff you expect from like Google Hangouts or Zoom, like being able to
blur your video or replace it with an image.
But the part I'm most excited for, this is getting directly integrated into element.
So you can have voice and video rooms or hold group calls right inside the app.
Linode.com slash LAN.
Go there to get $100 in 60 day credit on a new account and you go there to support the
show.
Linode is a great option for developers, IT experts, or those of you that are just getting
loaded.
No one gets fired for recommending Linode.
I mean, you don't want to have to hassle with the complexities that the hyperscalers try
to throw on to you just so you can just get locked into their platform.
Linode's a great option.
Not only that, but Linode has a better price and they have better performance.
It's not just me saying that.
That's actually something that's been researched and been proven out.
You can definitely tell just when you use Linode.
It's how we've built everything for the last couple of years.
When we run it in the cloud, we run it on Linode.
Even like us, Linode loves Linux.
They use it every single day.
They have people that run it on their desktop, they run it in their environments.
They're fans and you can see in the way they build things too.
You can spot it.
You know, that's really the base of why they even started Linode almost 19 years ago.
And now, geez, look at them go.
They've built the best system out there.
They've got 11 data centers around the world.
They've got brand new MVME PCIe storage on some of their systems.
Their high-end CPU boxes have AMD EPYC processors, 40 gigabit connections, because not only do
they have fast connections to the individual machines, but Linode is their own ISP.
And they've got some of the best support in the business.
It really is something special.
You bring it all together, you combine it with their great interface that makes it simple
to deploy an entire application stack or a system that you build up from the ground.
Whatever your performance, whatever your preference, whatever your style, you know, whatever you
want to do, you can do it at Linode.
I actually built myself an extremely custom from the ground up image twice on Linode,
and it's just been really handy.
Those two times in the last couple of years that I really needed that, it was great to
not only know that it was possible, but Linode was actually going to help me do it with documentation
and support too.
So go build something.
Go learn something and try it for yourself and support the show, linode.com slash lan.
Linux.ting.com.
If you're sick of overpaying for cell service, go see how much you could save and then take
25 bucks off of that by going to linux.ting.com.
Ting is a mobile virtual network operator.
That means they don't have to dig holes in the ground and fight with local regulators
to stand up towers.
They interface with the big carriers and nation to nation coverage, but you end up getting
way better customer service at a much lower cost.
Ting Mobile offers nationwide coverage with a great mix of plans, fast data on LTE or
5G, and no contracts ever.
And you know, Ting Mobile was recently named the number one carrier by Consumer Reports
in 2021.
That's probably why I have been a Ting customer since 2013.
I really appreciate all of their plans are simple and straightforward.
It's just a smarter way to do mobile.
It's how they'd have to do mobile in the States if the industry were to somehow reboot and
have to start today.
They'd have to compete like this.
They have straightforward, simple plans for individuals, families, and really small businesses.
I can attest to that.
It's a great option for small businesses and every plan gets access to Ting's award winning
customer service.
You get that nationwide LTE and 5G, you get that Ting support and Ting value, and your
phone's probably going to work because of their network support.
So it makes it really simple to switch to Ting.
Just head to linux.ting.com, check your current phone, create an account, pick the plans right
for you.
If you want to get a new phone, that linux.ting.com $25 discount could apply to a new phone as
well.
Sometimes it's worth treating yourself.
Either way, I say go to linux.ting.com to get started.
Once you're there, check things out.
I think you're going to be impressed.
It's a really great value.
Again, I mean, I've been a customer for like ever since 2013.
There's a reason for that.
Go try it out today and support the show, linux.ting.com.
Over the next few weeks, you'll likely see a lot written and said about Elementary OS
and its future.
That's because this week it became public that the two co-founders of Elementary OS
are in active discussions about their roles in the project going forward.
From what's been stated publicly so far, it seems the company behind the project has
been struggling since the start of the pandemic.
And for the last month or so, difficult discussions about future ownership have been ongoing.
We reached out to Cassidy James Blady and Daniel Foray for comment.
Yeah, and Danny relayed to us two things primarily.
Number one, that this is all still being worked out.
There's nothing really to report at this time, although you may notice some slowdowns on
GitHub and social media presence temporarily.
And the second thing that Danny really stressed is that Elementary is a volunteer community
first, and the company behind it is small, it doesn't have a lot of power.
And that the contributors are still there, they're still working, fixing bugs, responding
to issues, working on new features and all of that.
Cass also stressed that the contributors are continuing their work and Cass relayed to
us that there's still actually a lot of exciting things in the pipeline being worked on, and
that whatever happens, they'll make sure that the end users are taken care of.
Besides that commentary directly to us, there has been some discussion over on Reddit where
Blake Costner, a former Elementary OS staffer, said, quote, the situation is ongoing.
As with everything, there are two sides to the story, and I'd ask everyone to please
reserve judgment until the situation is resolved and the company has made an official statement.
That seems pretty reasonable, and it does seem like some changes are in store for Elementary
OS, but Danny and Cass do seem to have the user's best interest in mind as they try to
work through this new structure.
But for now, it's just too early to really know where things will end up and where things
are going to land.
Something tells me this won't help the project keep up with that soon-to-be-released Ubuntu
LTS, though.
But we're pulling for them.
Yeah, we'll keep an eye on this situation and everything going on in the world of Linux
and open source news, so be sure you check out linuxactionnews.com slash subscribe.
That way you get every single new episode when it releases.
And linuxactionnews.com slash contact to let us know how we're doing.
And we've announced an East Coast meetup on April 9th, 2022 in Raleigh, North Carolina.
For details, visit meetup.com slash Jupiter Broadcasting.
We'll be back next week with our take on the latest Linux and open source news.
Thanks for joining us, and that's all the news for this week.
