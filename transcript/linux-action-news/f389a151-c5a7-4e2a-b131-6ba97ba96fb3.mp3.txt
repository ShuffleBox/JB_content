Hello, and welcome to Linux Action News.
Episode 124, recorded on September 22nd, 2019.
I'm Chris.
And I'm Joe.
Hello, Joe.
Good to be connected with you.
And we start things off with some surprising news.
Richard Stallman has resigned from the FSF as well as from MIT.
Yeah, this was brewing for a good few days before Stallman actually resigned.
And that happened last Monday.
So it's kind of not exactly new news at this point.
And you guys did cover it on Linux Unplugged 3.19.
So we probably don't need to go into a huge amount of detail here.
But suffice to say, things finally caught up with Stallman.
Right.
My thinking on this is it isn't this one incident.
And I really liked the post.
I'll try to put a link in the show notes that Thomas Bushnell did on Medium.
He was, by his reckoning, and I think I agree, probably one of the developers that has worked
with RMS the longest.
And I think we have to acknowledge there was some bad reporting that happened here.
Absolutely.
There wasn't a concise, complete quote.
It was taken out of context.
However, truthfully, RMS has had plenty of opportunities to learn how to shut up when
it's necessary and hold his tongue.
And maybe that shouldn't be the reality of the world.
But that is, especially when somebody has the viewpoints of Richard Stallman, when he
has the leadership position that he does, he's responsible for relying too much on people's
careful reading of his notes.
He often, often has the defense, well, if you would carefully read what I said.
He's relied on that careful interpretation of a controversial stance for a very long
time.
And it isn't this one slightly misquoted incident.
It is a legacy of issues that even this individual, Thomas, who worked with RMS points out, it's
a larger problem.
And it wasn't that RMS was necessarily defending one individual.
It was interjected in a bigger, more important conversation about how to come to terms with
a history of MIT's institutional neglect of its responsibilities towards women and other
groups and their complicity with Ipstein.
That was the larger conversation, RMS derailed it with his comments that weren't really necessary.
And they were joking in that thread about how this was all going to go public.
So we better be careful with what we say.
And we've been having a laugh at his expense with the clips and everything that you used
to play on lap.
But really, we should have been doing more than that.
We've known for a long time that he's had these views that are just abhorrent and just
too simplistic.
And I think that we as a community should have done more.
And I think that the FSF should have done more, MIT should have done more.
And it shouldn't have got to this point where it's blowing up in this massive controversy.
It should have been dealt with a long time ago.
There should have been policy in place that stopped him being in charge for this long.
I want to make a couple of things clear.
I think, I agree, there probably should have been more that was done.
I think, and I'm not defending anyone here, but I think there's a bigger issue at play.
And it's a massive elephant in the room that we get close to talking about when we talk
about Linus and his outbursts, and when we talk about Richard Stallman and his behavior,
but we dance around it.
And it is that our community is packed full of neurodiversity.
We have people that are all over the place.
And that's part of why we have so many brilliant people in the open source and free software
community.
They're gifted, but they also see the world differently in some cases.
And I normally wouldn't say something like this on air, but I've been a part of this
community for over a decade, and I have met thousands of people in person.
And I've interviewed hundreds of developers.
And I can tell you that this is a observation I have made myself.
We have a bunch of really gifted people in our community, but that means sometimes they
behave different than what people consider the norm.
I think, in my personal opinion, most of us in the community kind of know this.
And so sometimes we've made allowances for behavior that wouldn't normally be considered
okay.
And I think maybe we've made a mistake there.
And by Richard taking this step himself, he's taken action before it got really, really
nasty.
And I think he's preserving the Free Software Foundation and the movement by doing this.
I think we'll look back with some history and some perspective, and we'll appreciate
the technical work that he did still.
And I think that's another thing that got him as much leverage and mileage is the technical
contributions both in code, but also in licensing and in free software.
And that sort of gave him a special treatment.
But by Richard Stallman moving aside, it means that we can also deal with other leaders that
also exhibit these sort of similar behaviors.
If he remained in place, it's sort of sending a signal that we allow that kind of behavior.
And so by RMS stepping aside, it sends a signal that if you're in a position of leadership,
especially a significant position of leadership, you're held to a high standard.
And we will actually make sure that you meet that high standard.
This is a bit of a, I think, a growing up for free software and for open source.
It's sort of a transition away from outbursts and certain types of thinking to a more mature
and modern.
And those kinds of transitions always end up leaving people behind.
And the people that get left behind generally are very upset.
But ultimately, it needs to happen.
And we've seen two very different things happen there, first with Linus Torvalds, who got
called out for some behavior that he'd been exhibiting.
And he took a step back, went away, and has come back now and has sorted himself out and
is still happily at the helm of Linux and everything's going fine.
So far, the kernel still seems to be pretty great.
Although I did have some issues with 5.2, I gotta say.
Well, yeah, that aside, the quality has been maintained.
And just because he's changed his management style doesn't mean that anything has changed
significantly technically.
Whereas Stormon is such a stubborn man, that people have tried to make him change and you
know, the whole insistence on calling it GNU slash Linux and all of that, he's just stuck
to his guns so much that he just cannot change, it seems.
And the world has changed and he's been left behind.
And he's been irrelevant as far as I'm concerned for a very, very long time now.
And I'm sort of glad, you know, put all of the controversy aside just from him as a man
and as a figurehead for the free software movement.
I'm very glad that he's now not going to be that figurehead anymore.
I wouldn't attribute feeling glad to this.
I think I recognize it was a necessity for the long term survival of the Free Software
Foundation, and MIT probably need to distance from as much of the scandal as they can.
But I don't really know what his involvement with GNU is going forward.
And he's still going to have quite a following, regardless of what people's opinions out there
might be, there will be people that continue to follow Richard Stallman, and he likely
could still get a pretty decent appearance fee to go to events.
After some time has passed, he may continue to talk about these issues, but now do so
without risking the Free Software Foundation.
Or perhaps he'll take this opportunity to retire.
Well, I do hope he retires, I think it's the right thing to do.
But I suspect you're right, and he will be back and we will hear more from him soon.
Right.
Time will tell.
Probably going to need a little bit of time.
People are still very upset.
It needs a cooling off period.
There's a larger conversation we need to have about neurodiversity.
That's my personal cause.
But I think now is not the right time to have it.
Right now, we need to respect that certain boundaries were crossed and let those people
have time.
And these other issues like what happens to RMS and the bigger conversation, we'll get
to.
When you think of diversity, though, you don't normally think of a knit system diversity,
but that is the very topic that the Debian project is struggling with.
And it all stems from what seems like a rather minor package in the grand scheme of things,
but the knock on effects of a decision could be massive.
Yeah, and that package is E login D. And this has reignited the system D debate in Debian,
which I thought was totally over, but apparently not.
Because when Debian adopted system D, they didn't completely drop support for other init
systems, but they just focused on system D. And a big part of the debate at the time leading
up to that decision was people saying that if you adopt system D, then you're going to
become completely dependent on it, and other things will just break.
And it seems that they were right, because now we're getting to a situation where things
are breaking, and a decision is probably going to have to be made here where either they
really focus on other init systems and making them work properly, or we can have a situation
where Debian is no longer the universal operating system and ports like, you know, BSD slash
Debian are just going to stop working and potentially go away.
Yeah, that's it.
And this issue has come to a head in such that Sam Hartman, the Debian project lead,
has had to step in and kind of set a state of where things are at in a public way, and
then ask for people to contribute to the conversation.
But a little bit of context here.
So the reason why E login D kicked off this whole wider conversation about staying diverse
with the init system or 100% focusing on system D is because E login D attempts to provide
an implementation of services needed by common desktops for system D login D. So your desktop
environments that require system D will still work and let you log in even if you don't
have system D. This thing kind of sits in there and pretends to be that system D layer.
Now it has a lot of complexities, including package conflicts and other changes in future
versions of Debian that we'll need addressing.
And so the maintainers have sort of come to loggerheads on this problem.
I'm summarizing, we'll have a full link in the show notes at linuxactionnews.com slash
124.
But Sam says the reason why the Debian project lead is stepping in is because the developers
have essentially exhausted themselves emotionally on this after years of complex interactions
and considerations.
You have an issue where people are emotionally exhausted.
And so that's resulting in these technical issues, which are holding up this larger conversation.
And of course, let's not forget the large dev1 shaped elephant in this room, dev1 forked
from Debian when the system D decision was made.
And the whole raison d'etre of dev1 is to maintain init diversity.
Yeah, yeah, I was thinking that same thing.
So what it really comes down to is, in a lot of ways, dropping E login D is this massive
decision because it's sort of a knock on effect of becoming a system D only distribution.
But if you want to maintain init diversity, then you're going to need a whole bunch of
maintainers to step up to keep all of this stuff working in future versions of Debian.
And you're going to need maintainers to work together, which currently they've sort of
stopped doing that.
So it really comes down to a pretty essential decision for the project.
And it shows that once you thought something was settled in a setup like Debian, it doesn't
necessarily mean it's settled forever.
But surely that's a good thing that you don't just make a decision and stick blindly to
it if it looks like it may have been the wrong decision.
And I think that Sam is going about this the right way, bringing this up as a topic that
needs to be discussed and trying to kickstart that discussion and potentially having all
the devs have their say in a general resolution.
Well wouldn't that be a fascinating process to watch?
Keep my eye out for that.
In the meantime, the rest of the systemd using world is moving forward with potentially a
radical new concept.
First he came for your audio subsystem, then he came for your init system, and now that
crazy Lenart's coming for your home directory.
And I think I like it.
Yeah, let's not forget that he also came for containers as well, systemd containerd, which
is still being worked on.
So systemd homed, this is Lenart's crazy new idea, whereby your home directory is going
to be a file.
No, a file on a Linux system?
Never heard of such a thing.
I want to make it clear that he's only talking about human user accounts, not the system
accounts.
There's a lot to this, but it's kind of brilliant.
When you look at a lot of the traditional problems of user management on a Linux system,
they start to get a lot more complicated when you have 5, 10, 15 systems, and when you need
to share files like NFS mounts and whatnot amongst these systems.
And there really hasn't been much change in the last 39 years around the concept of a
Unix home directory.
So systemd homed is a concept that reworks how home directories work in Linux.
And it's, at least in his recommendation, using strong Lux encryption by default, automatic
enumeration of UIDs, and hot, pluggable home directories, Joe.
How do you like them, Apples?
It's as if he's taken a look at how home directories work and just said, let's scrap that completely,
and let's design it as it should be for the 21st century, for 2019 into 2020.
He has a really good talk on this, which we have linked in the show notes.
And keep in mind, this is all early days.
And I'll also add right here towards the front, one of the goals of this new system would
be total compatibility with the old way of doing home directories and user accounts.
Here's a high level idea, though, of how it works.
Everything is contained in the home directory.
If a home directory exists on the system, the user exists.
So by laying out home folders with all of this information in a JSON format in the home
directory, it describes everything about the user's security and configuration to the host
operating system.
What Lenart is proposing here is that we separate user configuration from system configuration.
The user is a file, and changing system settings is separate from changing a user password
or moving their home directory or enabling or disabling a user account.
That's user level configuration stuff, not system configuration stuff.
So you break the two apart.
You use Lux encryption, and you tie that to the user's password.
So on a shared system, instead of having one password that everybody has to know, your
home directory is encrypted to your user password, which will break a few things, like SSH logins,
but proposes much better security.
Because this was an issue my wife has at her clinic, is they have to share the encryption
password amongst all of the staff at the clinic.
And then they have a separate password to log in, and then they have separate passwords
for the services.
It's a little bit over complex, and it seems a little backwards to share the encryption
password with everybody.
Then another issue, this is the last kind of key point, is this will solve a major security
issue on laptops.
And that is quite simply, when you log into your system and you have your drive unencrypted,
if you have a Lux encrypted home drive, like I have my Lux, my home partitions completely
Lux encrypted.
I enter a password before the system gets too far into booting, and then it mounts my
main disk and everything works.
However, when I put my laptop to sleep, which is pretty much what I do all the time, that
data remains unencrypted.
The encryption key is stored in memory.
It's open on the disk, and if somebody grabs your laptop while it's sleeping, that data
is unencrypted.
And now they have physical access to your laptop with the data unencrypted.
This system would change that.
Because it would be tied to the user's password, systemd homed would remove the key from memory
when you suspend or lock the laptop or desktop.
From a technical point of view, this sounds very impressive, but it is divisive, because
you can't just go and change something that's been around for the best part of 40 years
without controversy.
Right?
I mean, that's just inevitable.
And from the reaction that I've seen so far, it seems to be basically a 50-50 split between
people who think, great, this is an amazing, new, modern approach to home directories.
And then the other 50% of people think, no, this is terrible.
It's been fine for 40 years.
Let's just leave it as is, please.
I think you've got to cut out all of the knee-jerk reactions that just say, oh, here's systemd
doing another thing.
Because like many things with systemd, that's not really fair.
Systemd is kind of like the API that lets you address this stuff, but he's just basically
using Lux and PAM and all of the tools we already have to provide the functionality.
So there's that aspect.
But you've got to kind of ignore all the people that are like, oh, systemd gets even bigger.
Because it's really just pulling together a bunch of existing tools.
And that's just really the reality of it.
That's the case for a lot of things systemd does.
Here's the other thing.
Those people haven't had to manage dozens or hundreds of Linux and Unix systems.
It is at a whole other scale when you have to hack together some sort of centralized
LDAP system.
Or what I see most shops doing now is just marrying themselves to Active Directory and
just saying, you know what?
When it comes to our authentication, we're just going with Microsoft.
I am shocked at how prevalent that is.
Recently I've just been exposed to that just recently.
And I was shocked that that's such a common thing.
Because it's just solved.
It's easy to get it working with Linux.
You get central authentication.
You get the same common UIDs across all of the systems, which makes file permissions
work.
And it's easier to do deployments that way.
This is really about making this a configurable thing that can be managed, where you can query
user records.
You'll be able to entirely encapsulate a home directory on a thumb drive.
You take that thumb drive.
You sit down at a laptop.
You plug it in.
You now become a user on that system.
And everything is in that contained environment.
Your configuration, your authentication, your UID.
It can automatically translate to another UID on the system if that's already taken.
It's really smooth.
And then when you're done, you pop that thumb drive out.
Everything about that user is gone.
And something else I know a lot of our audience will appreciate is they're going for day one
YubiKey support for this, which is really kind of any PKCS 11 token device.
Not just the YubiKey, but sort of generally using the YubiKey as a term there on day one,
which I think would be a huge addition for Linux.
One other thing, Joe, is this needs to happen now.
Because if you look at different systems, they're already kind of...
It's a mishmash.
Like you have all of these strapped on ancillary systems, or you have like SSH keys which completely
do a bypass on this system.
It's kind of a...
It's a mess right now.
I don't know.
I really...
I guess the more I try to convince you, the more I'm convincing myself that this is kind
of...
This would be the most modern way to manage home directories in operating systems.
This is really fresh.
And I don't know if he's gotten a few ideas from other projects that I'm not familiar
with, but he's addressing several security issues as well as making it easier to centrally
manage and give people true portability between machines.
I like how you just assume that I'm against this.
Well, you were skeptical, I think.
And now I'm just getting more into it.
The more I think about it, I'm like, this would be pretty cool if Linux was the OS to
pull this off before anybody else.
Yeah, that would be cool.
I think that not making it the only way, not making it mandatory, I think that has to be
key here.
And it looks like that is going to be the case at least for now.
And I suppose we'll have to see how it works out.
But as long as you have the option to have a traditional home directory, then I don't
see a problem with it.
The problem I see is if we end up being forced into it, then I'm going to need a bit more
convincing, I think.
Yeah, fair enough.
And it sounds like that's the goal.
And it sounds like they're going to even try to make it portable between a system that
uses the new method and the old method.
But if you're scratching your head, or you think I'm crazy, or this sounds interesting
to you, I definitely recommend you check out the talk.
I'll have it linked in the show notes.
Lenart has slides that go into more detail, as well as he expands upon several points.
And like always, it's a very technically rich conversation.
So it's just fascinating to listen to.
Yeah, it's definitely worth a watch.
And so we've talked about the system D saga as that rolls on and on.
What about the Huawei and Google saga?
We've had a development this week with that.
We've got news that the Mate 30 Pro will ship, but it won't ship with Google's Android apps.
Huawei CEO of the consumer products division revealed on stage at a press event in Germany,
the company was forced to stop shipping the Google mobile services.
But but Joe, don't worry.
They've got the Huawei mobile services, the HMS core, it's ready to go.
It's just not quite the same thing.
Yeah, and there are going to be certain apps available through their app store.
But then some key ones that won't be.
So the expectation among a lot of the tech presses, well, presumably, people will be
able to flash their own Google apps, you know, take a phone, like the OnePlus 3T, unlock
the bootloader, it's trivial to install Google apps on that.
But with Huawei phones, it wasn't that long ago that they stopped letting you unlock your
bootloader, which seems like a decision they may regret now.
You know, the name like Pro 2, you kind of expect a little more and the Mate 30 Pro will
not ship with an unlockable bootloader.
There was some misreporting earlier in the week that suggested that perhaps it would.
However, that does not appear to be the case.
That must have been just a misreading of a statement by the CEO that was a little weird,
like we're going to offer customization, which who knows what that means that could be themes.
Also, Joe, I think what's notable here is they're really kind of locking themselves
in now because you could have sold the hardware and if you made it easy to unlock, then the
users that cared enough could have had an avenue to maybe load Google apps or different
ROM entirely.
And they're also trying to claim that their solution is good enough and just use that.
It's two complete BS answers like the reason they gave for not allowing the unlocking is
for security.
Well, and also for the whole support thing as well.
Once you start flashing custom ROMs, then you can get into a lot of trouble and end
up costing Huawei money to support that, which, you know, I could understand the argument
at the time.
I thought it was a bad move, but, you know, I could definitely understand it.
But the question I have for you is this.
What if they get away with it somehow?
What if there are enough apps and they can convince the big app makers to port their
apps over?
Wouldn't that be something?
If in the West they could ship a phone without the Google services?
Because we saw that happen with Amazon and, okay, they were very cheap devices, the cheap
tablets and a couple of phones, I think, that didn't do very well.
But those tablets seem to be doing all right for them.
But that's, you know, they're very cheap.
This is a high end, really nice phone.
And if they could somehow pull this off, I think it would actually be a very good thing
for the market.
Yeah, I can't disagree with that.
I think the mistaken reasoning here is calling these things apps, the Google apps versus
the Huawei apps.
It's not really the apps.
It's the APIs and the cloud service behind all of that.
Like the Google Play API delivers so much functionality to Android now that it is a
completely different product without it.
Now I know a lot of people in our audience are capable of running an Android phone without
the G apps perfectly fine.
I did it for a few weeks and I was amazed at the better battery life that I got.
But eventually, eventually I caved.
You know, I can't remember at the time if it was Google Maps or what it was.
But I had to, I had to install something that needed the Google Play API.
And once you make that change, it's like your phone becomes a completely different device,
including security updates directly from Google that are even broader now in Android 10.
It's not about the apps.
It's a false comparison.
And a lot of the apps that are good on the Android platform rely on Google's back end
APIs for push notifications or even for running in the background for an extended period of
time.
They're only available via Google's APIs.
And then there's the cloud infrastructure for text to speech and image recognition and
image enhancements when you use the camera and all of the things that Google does in
the cloud to make Android better are also gone.
So it's a much larger conversation than just the apps.
And that's why I think they're screwed because they'll always be on a less than OS if they
just ship Android.
Because the comparisons will be made between Android with Google apps and Android without
Google apps.
And it's just like how Samsung, even with their massive scale, has never been able to
fully compete.
I think Huawei will be in a similar position.
They'll get close, but they'll always have the Bigsby of voice assistance.
Yeah.
So basically, dream on, Joe.
It's not happening.
I don't know.
I don't know.
Maybe I'm crazy.
I think if they have their own, I don't know, maybe Linux based OS that was really great
that they just invested all this time in, then it would be their own unique product.
Maybe you'd have a better shot, especially if they could go after a market that was sick
and tired of all these smartphones and spying on you.
Maybe and they've still got their home market as well of Asia where Google is much less
important.
Yeah, absolutely.
It's a really good point.
They don't even need us, Joe, right?
But we all need Oracle because they've announced Oracle Autonomous Linux, which changes everything.
Wait, wait, oh, I'm sorry.
You got a correction here.
It changes nothing.
What?
You mean a version of Red Hat, essentially, that provisions itself, scales itself, tunes
itself, patches itself, all autonomously?
That's not going to completely change the market?
You mean like a CentOS box with central management or a really nice bash script?
I tease a little bit only because of just like how like full guns Larry was up on stage.
This is a quote from Larry Ellison.
If you're paying for IBM, you can stop.
One simple rule to prevent data theft, put your data in an autonomous system.
No human error, no data loss.
That's the big difference between us and AWS.
That doesn't make any sense.
You want to avoid data loss?
Have a good backup.
Yeah.
Yeah.
I mean, it does sound like a pretty good product that would do well in enterprise.
I could see it doing well, but just the way it's been pitched and it's sort of overblown
seems a bit strange to me.
I suppose you have to do that, don't you, if you're trying to sell stuff?
Yeah.
And I think the reason why it doesn't ring as powerful as a message to us is because
other vendors have gotten there first.
In fact, this was the whole premise of CoreOS.
This is the premise of Ubuntu Core, Fedora Silverblue, what will become of Fedora CoreOS.
Like yeah, yeah, this is something that the vendors have been thinking about for a while.
And what you've done is repackaged a solution that is already mostly theirs.
I don't mean to laugh, but it's just, it's like they really came at this like just trash
and everybody, but what they've brought to the market is really valuable if you're an
Oracle Cloud customer.
It's legitimately going to be nice on their infrastructure.
But for me, this rings as hollow as unbreakable Linux did when they announced that.
It was all the same big talk and it didn't really change much of the market.
It got users, it's still in use today.
Wikipedia says that as of 2016 at least, they had 15,000 customers subscribed to the support
program.
I'm curious to know what that number is in 2019.
So I don't have high expectations for this one, Joe.
But they had a cluster of Raspberry Pis that was basically a supercomputer running this
thing.
You telling me that didn't impress you?
Hmm, maybe.
Almost as much as the unofficial word on the street.
Just a quick follow up to last week, a new version of CentOS is out and I haven't tried
it myself, but word on the street is at the last moment, they got Raspberry Pi basic booting
support in there.
I don't think the video stuff is supported yet, but you can boot CentOS on a Raspberry
Pi.
That, that impresses me.
Yeah, we were talking last week about how we've been waiting for CentOS that's based
on RHEL 7.7.
And that has arrived now.
And also, it looks like CentOS 8 is just around the corner as well.
September 24 is what the wiki saying now for CentOS 8.
I am kind of excited about that version of CentOS because that's based on the version
of RHEL, which is based on Fedora 28.
Fedora 28 is the release where they enabled software modularity, they made it easier to
install third party drivers, they've updated it to a fairly recent version of Gnome, it
has improved virtual box support, it ships with newer versions of GCC, like it's a big
release of Fedora and looking back at it now, you can see that they were clearly trying
to get it pretty solid as a possible RHEL base.
So this next version of CentOS 8 is a pretty major upgrade.
And it's probably the first time ever that I've been excited about a CentOS release,
which is a really weird thing to say because it's like the least like hype distro out there.
But here I am, I can't wait.
Having a long term support version of Fedora 28 is going to be great.
And let's face it, what you're most excited about is finally being able to use DNF on
CentOS.
You absolutely 100% true.
That is the major thing that and I think I'm gonna be able to put on the Raspberry Pi 4,
but it's primarily it's DNF.
Well one last thing while we're talking about things that I'm looking forward to, we have
launched linuxheadlines.show and it is a Linux news podcast in under three minutes every
weekday.
You wouldn't think we could get much in there but you'd be surprised and in fact it gives
us an opportunity to cover stories that don't make it on Linux action news.
This is where we have the long conversations but the things that are happening every single
day linuxheadlines.show.
It really is a great way to stay up to date with what's going on in Linux and open source
every weekday.
So check it out, linuxheadlines.show.
And then be sure to get us every single week.
To do that go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And linuxactionnews.com slash contact for ways to get in touch with us.
Of course we'll be back next Monday with our weekly take on the latest Linux and open source
news.
I'm at Chris LAS.
I'm at Joel Ressington.
Thank you for joining us and we will see you next week.
Until then, have a great day and I'll talk to you later.
