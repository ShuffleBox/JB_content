WEBVTT

00:00.000 --> 00:16.060
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.060 --> 00:20.520
This is episode 37, recorded on January 21st, 2018.

00:20.520 --> 00:21.520
I'm Chris.

00:21.520 --> 00:22.520
And I'm Joe.

00:22.520 --> 00:27.240
Hello Joe, it's good to be connected with you, and man do we have a lot to cover this

00:27.240 --> 00:28.240
week.

00:28.240 --> 00:30.400
Let's start out with an open source classic.

00:30.400 --> 00:33.580
It's really getting to be a fine vintage too.

00:33.580 --> 00:36.600
Version 3.0 of the Wine Project is out.

00:36.600 --> 00:43.000
Yeah, after a year of development and 6,000 changes, there's a lot new in here, like Direct

00:43.000 --> 00:49.440
3D 10 and 11 support, and Android stuff as well.

00:49.440 --> 00:54.760
But in all honesty, as huge as this is, I haven't used Wine for years.

00:54.760 --> 00:57.660
Is it something you really use regularly still?

00:57.660 --> 01:00.120
From time to time, and I may even more.

01:00.120 --> 01:05.420
I mean, just for context, Wine was originally released on July 4th, 1993.

01:05.420 --> 01:08.080
And yes, that is 24 years ago.

01:08.080 --> 01:12.800
So it's just amazing to see them shipping 3.0 24 years ago.

01:12.800 --> 01:14.400
Talk about sticking with it.

01:14.400 --> 01:19.080
But some of the things I've seen prop up online make me think I may be taking another look

01:19.080 --> 01:20.080
at Wine.

01:20.080 --> 01:24.520
So version 3.0 supports Direct 3D 10 and 11.

01:24.520 --> 01:31.080
There is an improved Direct Write and Direct 2D support, which with that also brings support

01:31.080 --> 01:35.560
potentially for Adobe Photoshop CS 2018.

01:35.560 --> 01:37.760
I suppose that is quite big.

01:37.760 --> 01:44.640
But then again, every time I've ever used Wine, it's kind of, it's never quite right,

01:44.640 --> 01:45.640
is it?

01:45.640 --> 01:47.080
If you're talking about games, perhaps.

01:47.080 --> 01:53.760
But if you're talking about productivity applications, you're talking about your one-off executables

01:53.760 --> 01:55.680
that you need to do your job from time to time.

01:55.680 --> 01:59.800
I actually have found it to be pretty, actually, I won't even say pretty.

01:59.800 --> 02:01.800
When it does work, it's remarkable.

02:01.800 --> 02:02.800
It is remarkable.

02:02.800 --> 02:04.560
So yeah, it doesn't do everything.

02:04.560 --> 02:06.720
But what it does do, it blows me away now.

02:06.720 --> 02:10.900
And I'm saying this trying, like recently, I was just going through this whole spat of

02:10.900 --> 02:16.640
Windows applications that, for example, my Garmin navigation unit, which is a Windows-only

02:16.640 --> 02:19.840
application update, I was able to run that under Wine recently.

02:19.840 --> 02:23.760
And that's even communicating over the internet and with a USB device.

02:23.760 --> 02:25.880
I was very, very appreciative of that.

02:25.880 --> 02:28.800
Yeah, something like that you don't really want to be installing Windows for.

02:28.800 --> 02:33.820
But I think if you're spending a lot of time in something like Photoshop, does it really

02:33.820 --> 02:35.920
make sense to do it in Linux?

02:35.920 --> 02:38.500
Or does it make more sense to just dual boot?

02:38.500 --> 02:39.760
It's certainly what I would do.

02:39.760 --> 02:40.920
Yeah, I suppose so.

02:40.920 --> 02:43.160
So what do you think of the Android graphics driver?

02:43.160 --> 02:44.760
Yeah, now that is interesting.

02:44.760 --> 02:49.520
Although, as far as I know, that is only the x86 version of Android.

02:49.520 --> 02:53.560
So that is fairly limited in the number of devices that it supports.

02:53.560 --> 02:58.640
But it does represent a kind of step into the present.

02:58.640 --> 03:02.720
I was going to say future, but it's more the present, really, that you have to kind of

03:02.720 --> 03:04.360
support Android these days.

03:04.360 --> 03:08.040
And along those lines, this is also the version that officially supports Vulkan.

03:08.040 --> 03:12.380
Yeah, and that means that any games that are using Vulkan are going to work much better

03:12.380 --> 03:14.200
in Wine, which is good news.

03:14.200 --> 03:17.440
I suppose that's the main real use of this, isn't it?

03:17.440 --> 03:22.240
People who want to stick to Linux, but they really want to play some games that are just

03:22.240 --> 03:23.480
not available.

03:23.480 --> 03:28.600
Speaking of those Android users, those of you that have bought something from OnePlus

03:28.600 --> 03:32.440
in the last few months may need to take a look at your credit card statement.

03:32.440 --> 03:36.240
Yeah, now I did buy a OnePlus phone not all that long ago.

03:36.240 --> 03:39.640
But thankfully, I bought that off Gumtree, which is like your Craigslist.

03:39.640 --> 03:41.440
So no problem there.

03:41.440 --> 03:47.080
But yeah, this is the latest in a line of bad news coming from OnePlus, isn't it?

03:47.080 --> 03:54.200
So if you put your credit card info in the last, well, they say between mid-November

03:54.200 --> 03:56.600
and January 11, 2018.

03:56.600 --> 04:02.400
So it could be before that, you never know, then your info was compromised.

04:02.400 --> 04:05.760
So that really just does not look good for them.

04:05.760 --> 04:10.960
We had the spyware stuff, the backdoors, whatever.

04:10.960 --> 04:15.840
Now this, it's made me lose all confidence in OnePlus, I must say.

04:15.840 --> 04:19.960
It sounds like the root cause was a malicious script that was operating intermittently,

04:19.960 --> 04:25.760
capturing and sending data directly from the user's browser to the hackers.

04:25.760 --> 04:28.900
So it was probably something that was compromised on their website would be a safe assumption,

04:28.900 --> 04:30.320
but that is an assumption.

04:30.320 --> 04:32.160
And there are some caveats.

04:32.160 --> 04:35.840
If you bought something and paid via a saved credit card, something that you saved to your

04:35.840 --> 04:37.900
profile, you're not affected.

04:37.900 --> 04:41.960
And if you paid via the credit card via PayPal, you're not affected.

04:41.960 --> 04:45.060
And if you just paid via straight PayPal, you're not affected.

04:45.060 --> 04:50.040
So it seems it was something that was actively monitoring input on the user and then capturing

04:50.040 --> 04:51.040
that data.

04:51.040 --> 04:52.720
Well, this is what OnePlus saves.

04:52.720 --> 04:56.380
But how do we know that that is necessarily the truth?

04:56.380 --> 04:57.600
That might be what they think.

04:57.600 --> 05:02.640
But if someone was able to take control of a server that allowed them to capture that

05:02.640 --> 05:05.920
data, who knows what other data is being captured as well.

05:05.920 --> 05:11.560
And you would have thought probably the PayPal stuff is OK, but saved credit card information,

05:11.560 --> 05:14.280
I would be concerned, put it that way.

05:14.280 --> 05:20.080
If I had my credit card and hang on, I'm just thinking, I think I do have that was a long

05:20.080 --> 05:21.080
time ago.

05:21.080 --> 05:22.080
So now I'm OK.

05:22.080 --> 05:23.080
Hopefully I think that card's expired.

05:23.080 --> 05:24.080
Oh, good.

05:24.080 --> 05:25.080
You never know, though.

05:25.080 --> 05:26.640
It does give you pause, doesn't it?

05:26.640 --> 05:30.920
I think you're probably OK, Joe, just because if I'm reading between the lines, if I put

05:30.920 --> 05:36.440
my TechSnap hat on and my TechSnap goggles, what I'm reading here is that it was a website

05:36.440 --> 05:40.800
JavaScript vulnerability or something that was inserted on their web page and it was

05:40.800 --> 05:42.320
doing like a key logging.

05:42.320 --> 05:46.720
So the reason why saved credit cards are safe is because it wasn't their database that was

05:46.720 --> 05:47.720
breached.

05:47.720 --> 05:52.720
It was the actual action of users typing in their credit card that was captured.

05:52.720 --> 05:56.760
And so if you went via a method where you didn't type in your credit card, well, they

05:56.760 --> 06:00.200
may have captured other things on the site, but they didn't capture your credit card.

06:00.200 --> 06:04.520
Yeah, but again, if they were able to inject JavaScript into that page, then who knows

06:04.520 --> 06:05.960
what else they were able to do.

06:05.960 --> 06:12.120
But I think you're probably right, but I'm still skeptical of them because it's still

06:12.120 --> 06:16.640
quite vague what OnePlus is saying about it, saying mid-November, they don't know exactly

06:16.640 --> 06:20.680
when it was compromised and therefore they don't know exactly what happened.

06:20.680 --> 06:25.520
They haven't had time really to go through all the logs and work out exactly to what

06:25.520 --> 06:26.760
extent they were compromised.

06:26.760 --> 06:33.200
So I'm just thinking for my next phone now, I don't know because what else is there?

06:33.200 --> 06:41.200
That's got a nice big screen and is hackable and has got first class lineage support.

06:41.200 --> 06:42.560
I really don't know.

06:42.560 --> 06:45.440
And also, crucially, isn't ridiculously expensive.

06:45.440 --> 06:46.440
That's the main thing.

06:46.440 --> 06:51.280
Yeah, you do wonder when something like this happens, what would the reaction be if this

06:51.280 --> 06:57.320
was Motorola or Samsung or the Pixel phone when people ordered the Pixel phone or the

06:57.320 --> 06:58.880
iPhone?

06:58.880 --> 07:01.040
Imagine the outrage if this was the iPhone.

07:01.040 --> 07:06.080
And OnePlus says that they cannot apologize enough for letting something like this happen

07:06.080 --> 07:10.520
and that they are eternally grateful to have such a vigilant and informed community.

07:10.520 --> 07:12.200
And it pains to let you down.

07:12.200 --> 07:16.840
They say they've made contact or are attempting to make contact with all of the affected customers,

07:16.840 --> 07:20.680
which gives the implication that they seem to know exactly which customers were impacted

07:20.680 --> 07:21.680
by this.

07:21.680 --> 07:24.760
Perhaps they know which vulnerability was on their website and when they patched it

07:24.760 --> 07:27.740
and which orders took place during that window.

07:27.740 --> 07:32.080
And all measures they say are in place to help prevent such incidents from happening

07:32.080 --> 07:33.640
in the future.

07:33.640 --> 07:37.400
Well the easiest way to stop happening in the future is to not buy anything from them

07:37.400 --> 07:41.000
again, which is what I will do, unfortunately.

07:41.000 --> 07:44.760
Well speaking of no longer being a customer, at least if all of the news headlines are

07:44.760 --> 07:48.040
to be believed, Google will no longer be using Ubuntu.

07:48.040 --> 07:53.040
Yeah, so this is their internal not quite a distro that runs on some of the workstations

07:53.040 --> 07:58.760
within the company alongside Mac OS and Windows and Chrome OS on some of the others.

07:58.760 --> 08:04.680
And it was originally Ubuntu, which was based on Ubuntu, and now they're switching to Debian

08:04.680 --> 08:10.120
testing for the base of the distro, which isn't a huge change, is it, in reality?

08:10.120 --> 08:14.760
What's interesting, Joe, is all of this is coming out of a lightning talk at DebConf

08:14.760 --> 08:15.760
17.

08:15.760 --> 08:19.320
And there's a couple other details that were dropped in there, including Debian's been

08:19.320 --> 08:23.480
pretty heavily used at Google for a while now in different areas.

08:23.480 --> 08:26.480
And Google's been a longtime strong Debian supporter.

08:26.480 --> 08:32.160
In 2017, Debian credited Google for making their annual conference even possible in the

08:32.160 --> 08:33.160
first place.

08:33.160 --> 08:35.480
So there's been a pretty tight relationship there.

08:35.480 --> 08:42.960
And if you're basing an OS off of a base Linux distro, it does make a lot of sense, especially

08:42.960 --> 08:46.000
if you want rolling, to base it off Debian testing.

08:46.000 --> 08:49.200
Do you think that's what this boils down to, that they wanted something rolling rather

08:49.200 --> 08:52.360
than the Ubuntu snapshot way of doing it?

08:52.360 --> 08:55.720
I do, especially if you want your own rolling distribution.

08:55.720 --> 08:59.520
See that's what this is about, is Google wants their own rolling distribution.

08:59.520 --> 09:03.600
Google takes each Debian testing package, rebuilds it, tests it, and then files and

09:03.600 --> 09:04.820
fixes bugs.

09:04.820 --> 09:09.800
And once all of those are resolved, it integrates it into its own GLinux release candidate,

09:09.800 --> 09:11.180
which is what they're calling it now.

09:11.180 --> 09:13.460
And then that goes out into their own repos.

09:13.460 --> 09:17.080
And Google's building a real solution here, something that works for an entire in-house

09:17.080 --> 09:18.140
automation system.

09:18.140 --> 09:21.800
The new Linux images are automatically built from compressed tar format archives.

09:21.800 --> 09:27.160
And then these images are then placed on an HTTPS server, which the remote workers can

09:27.160 --> 09:31.440
access when they're in the Google complex or when they're working remote.

09:31.440 --> 09:36.200
And these are running Debian pre-seed files that automate portions of the host installation.

09:36.200 --> 09:40.240
So you can set down a laptop on the Google network, and the installation is fired up

09:40.240 --> 09:44.760
via network boot, uses Puppet to integrate all of the configuration management and set

09:44.760 --> 09:47.880
up all of the update paths and all of the source files.

09:47.880 --> 09:51.960
And according to different news reports, this entire thing can be done in 30 minutes.

09:51.960 --> 09:57.400
You take a bare laptop, you hook it into the network, and you can blast GLinux or blast

09:57.400 --> 09:59.240
gubuntu on there, whichever one you want.

09:59.240 --> 10:02.440
They're both still available, and the whole thing's ready to go in 30 minutes, managed

10:02.440 --> 10:03.440
by Puppet.

10:03.440 --> 10:06.680
And when you look at their infrastructure, when they're rebuilding individual packages

10:06.680 --> 10:13.760
already, maintaining their own repos, doing pixie boot network imaging, why not just create

10:13.760 --> 10:16.160
your own distro based off Debian at that point?

10:16.160 --> 10:17.780
That's just the next logical step.

10:17.780 --> 10:24.040
So you're not going in for these conspiracy theories that they are hedging against Ubuntu

10:24.040 --> 10:27.680
either going away or making more significant changes then?

10:27.680 --> 10:28.680
Hmm.

10:28.680 --> 10:29.680
I hadn't heard that.

10:29.680 --> 10:30.680
I mean, it would make sense too.

10:30.680 --> 10:34.640
That just seems like another benefit of doing this.

10:34.640 --> 10:38.640
And if you're going to be rebasing everybody's desktop on GNOME anyways, this is the time

10:38.640 --> 10:40.160
to make a change like this.

10:40.160 --> 10:42.240
Yeah, that's true, I suppose.

10:42.240 --> 10:47.240
If you're going to have to deal with major changes either way, then why not go back to

10:47.240 --> 10:53.040
the source rather than being something that's based off something that's based off Debian?

10:53.040 --> 10:56.000
Why not just base it off Debian in the first place?

10:56.000 --> 10:59.140
Control your own destiny.

10:59.140 --> 11:01.920
That's perfectly viable for large corporations like Google.

11:01.920 --> 11:06.560
For smaller businesses like Jupiter Broadcasting, I appreciate the curation and the maintenance

11:06.560 --> 11:07.700
and the care.

11:07.700 --> 11:10.800
And so it's just different solutions for different sized businesses.

11:10.800 --> 11:13.520
I'm surprised this hasn't happened already in some ways.

11:13.520 --> 11:16.720
I'm kind of tempted to just play around with and try it myself.

11:16.720 --> 11:22.840
Yeah, I'd quite like to try it out on my own systems, but unfortunately, it's not a distro,

11:22.840 --> 11:23.840
is it?

11:23.840 --> 11:26.400
You almost in a way have to respect the fact that this thing's never leaked, at least as

11:26.400 --> 11:27.400
far as I've seen.

11:27.400 --> 11:29.680
I've never seen an ISO available for download.

11:29.680 --> 11:34.200
They have gone to significant extents to prevent this thing from showing up in the public.

11:34.200 --> 11:38.880
Oh, well, here's hoping.

11:38.880 --> 11:40.660
Linux Academy dot com slash unplugged.

11:40.660 --> 11:43.680
Learn to build your own Linux distribution from the fundamentals all the way up to the

11:43.680 --> 11:46.920
things in the cloud that make you all the money and look good on the resume, self-paced

11:46.920 --> 11:50.900
in-depth video courses on every Linux cloud and DevOps topic.

11:50.900 --> 11:54.500
You get hands-on scenario-based labs that give you real experience so that way, not

11:54.500 --> 11:58.960
only do you test better because you've done it, but when you go to work in production,

11:58.960 --> 11:59.960
you've done it before.

11:59.960 --> 12:01.840
It's not your first time in production.

12:01.840 --> 12:02.880
That's always a good thing.

12:02.880 --> 12:06.240
And if you ever get stuck when you're working on any of the Linux Academy material, they

12:06.240 --> 12:09.140
have real-time human beings ready to help you.

12:09.140 --> 12:12.560
And if life's busy, I understand they have a course schedule, you set a time frame that

12:12.560 --> 12:15.120
helps you stick to it and set learning goals.

12:15.120 --> 12:18.320
And they have practice exams to help you get ready for the big test, flashcards forked

12:18.320 --> 12:22.320
by the community, and a community stacked full of Jupiter Broadcasting members.

12:22.320 --> 12:26.160
And they also have downloadable comprehensive study guides and lesson audio that you can

12:26.160 --> 12:27.160
listen to offline.

12:27.160 --> 12:31.360
And if you have a connection, maybe you're commuting on the bus or in the tube, well,

12:31.360 --> 12:33.680
they have iOS and Android apps as well.

12:33.680 --> 12:35.840
Linux Academy dot com slash unplugged.

12:35.840 --> 12:39.040
Go there to support the show and sign up for a free seven-day trial.

12:39.040 --> 12:42.840
Linux Academy dot com slash unplugged.

12:42.840 --> 12:49.680
Okay, so Meltdown and Spectre, the story that just will not go away.

12:49.680 --> 12:55.360
Let's start with an update from Greg Kh about where we are with the kernel and the question

12:55.360 --> 12:56.800
of is my machine vulnerable?

12:56.800 --> 12:58.720
Well, it's very straightforward.

12:58.720 --> 13:03.280
You just grep a certain directory and it tells you whether you're vulnerable or not.

13:03.280 --> 13:04.560
Or does it?

13:04.560 --> 13:07.080
Yeah, that does depend on your kernel.

13:07.080 --> 13:08.840
And we'll have a link in the show notes.

13:08.840 --> 13:13.320
Just go to Linux action news dot com slash 37 to get this link.

13:13.320 --> 13:14.480
And it's pretty neat.

13:14.480 --> 13:18.480
It just lists out all of the potential things that your CPU could be vulnerable for.

13:18.480 --> 13:23.520
I like this a lot because it just gives you a clear understanding unless you're not running

13:23.520 --> 13:25.200
a current kernel.

13:25.200 --> 13:27.200
Then it's well, then you don't get new things.

13:27.200 --> 13:33.280
Well, yeah, if you run in a distro kernel, like we are with Ubuntu, for example, then

13:33.280 --> 13:37.880
this just doesn't work, even though they have patched against Meltdown.

13:37.880 --> 13:40.440
There's not really this easy way to know that.

13:40.440 --> 13:41.440
Right.

13:41.440 --> 13:44.320
There is an elegance to how simple this is.

13:44.320 --> 13:48.240
This doesn't seem like a feature that would be impossible for the distro maintainers to

13:48.240 --> 13:49.240
backport, though.

13:49.240 --> 13:52.080
It's funny the tone that Greg's maintained throughout all this.

13:52.080 --> 13:54.720
He's been very down on distro kernels, isn't he?

13:54.720 --> 13:57.960
Yeah, in fact, there's a paragraph that I liked quite a bit.

13:57.960 --> 14:04.720
He says some quote unquote enterprise distributions did not backport the changes for this reporting.

14:04.720 --> 14:09.660
So if you're running one of those types of kernels, go bug the vendor to fix that.

14:09.660 --> 14:12.960
You really want a unified way of knowing the state of your system.

14:12.960 --> 14:16.800
Which kind of makes sense if you're working directly on the kernel, then you want people

14:16.800 --> 14:19.060
to use that version of it.

14:19.060 --> 14:22.800
You don't want people to be using something that's being changed.

14:22.800 --> 14:28.120
I think when it comes to Meltdown Inspector, the kernel team really wants a unified way

14:28.120 --> 14:30.200
for everybody to manage this.

14:30.200 --> 14:34.440
He goes as far as to say if your kernel doesn't have the sysfs directory or files, then there's

14:34.440 --> 14:37.600
obviously a problem and you need to upgrade your kernel.

14:37.600 --> 14:42.000
And I think the emphasis is we can't really fully address this unless everybody's on the

14:42.000 --> 14:43.000
same page.

14:43.000 --> 14:44.000
Well, yeah, that's true.

14:44.000 --> 14:47.820
Although, isn't the point of distros that they are different from each other?

14:47.820 --> 14:52.520
There is something that differentiates them from the other distros and you take something

14:52.520 --> 14:56.680
like Ubuntu, they've added value to the generic kernel, haven't they?

14:56.680 --> 14:59.680
I suppose the markets already sort of bared this out, right?

14:59.680 --> 15:02.200
Well, yeah, so it would seem.

15:02.200 --> 15:06.920
So Red Hat's having a bit of a back and forth depending on which particular lens you look

15:06.920 --> 15:08.480
at this situation.

15:08.480 --> 15:14.240
They are doing an about face, trying to save face and blame everything on Intel, or depending

15:14.240 --> 15:19.020
on who you ask, they're taking a unified approach to make sure everything is just exactly how

15:19.020 --> 15:23.320
the users expect it and we're waiting for things to come together upstream.

15:23.320 --> 15:25.200
Just depends on which lens you put on that day.

15:25.200 --> 15:30.800
Yeah, this is specifically this microcode update, which has come directly from Intel.

15:30.800 --> 15:37.200
And that is to mitigate against the specter side of things rather than meltdown.

15:37.200 --> 15:43.120
And Intel released this and I've patched a couple of my machines with it and it's worked

15:43.120 --> 15:49.400
fine, but there've been reports of random reboots and machines that won't boot at all.

15:49.400 --> 15:55.320
And Red Hat originally pushed it out and then they pulled it because it made sense to do

15:55.320 --> 15:56.320
that.

15:56.320 --> 15:58.120
It wasn't working properly.

15:58.120 --> 16:02.600
And people have kind of come down on them saying that they just want to offload the

16:02.600 --> 16:07.080
responsibility, which can you really blame them?

16:07.080 --> 16:12.480
It's this black box binary that just gets pushed out by Intel and you just have to trust

16:12.480 --> 16:14.120
that it's going to do what it's supposed to do.

16:14.120 --> 16:18.640
Yeah, it's actually encrypted and signed, so they can't even pull it apart and kind

16:18.640 --> 16:21.720
of deduce what it does.

16:21.720 --> 16:26.400
And so Red Hat in a statement said, the microcode was supplied to us and it did not cover all

16:26.400 --> 16:29.960
of the microprocessors that our customers possibly could use.

16:29.960 --> 16:33.600
It appears subsequently that there may have also been two versions that could have some

16:33.600 --> 16:34.700
regressions.

16:34.700 --> 16:37.940
We're looking at providing our customers with a consistent experience.

16:37.940 --> 16:42.120
It's very difficult for us to say in this case, but applying this package and two other

16:42.120 --> 16:46.200
cases, you can't just say talk to somebody else or in a third case, talk to another or

16:46.200 --> 16:47.400
fourth party.

16:47.400 --> 16:51.320
So what they're doing is they've decided to wait until there was a complete set of microcodes

16:51.320 --> 16:55.800
available and then wait for the community project to catch up and then once everything's

16:55.800 --> 17:00.160
all there and tested and known to work well, they're going to revisit it, which I think

17:00.160 --> 17:03.340
is probably Red Hat for saying then they'll republish it again.

17:03.340 --> 17:09.280
Until then, Red Hat is recommending that customers apply Spectre and Meltdown related patches

17:09.280 --> 17:14.540
and then contact their CPU vendors for the firmware updates specifically, like the microcode.

17:14.540 --> 17:19.940
This is such a delicate balancing act, isn't it, between security and stability.

17:19.940 --> 17:26.240
You kind of have to weigh up the risk and yes, there is this serious vulnerability, but

17:26.240 --> 17:29.160
what are the chances of it actually being exploited at this stage?

17:29.160 --> 17:35.240
There's more and more proof of concepts coming out as each day goes by, but do you sacrifice

17:35.240 --> 17:41.040
stability and performance and the fact that you might break things to mitigate against

17:41.040 --> 17:44.000
something that is just kind of theoretical?

17:44.000 --> 17:50.000
So I can see why they've taken this more conservative approach to patching.

17:50.000 --> 17:51.160
Seems pretty reasonable to me.

17:51.160 --> 17:55.120
It's a risk, but you got to weigh that against making your machine crash and I think that's

17:55.120 --> 17:58.400
also why I like the way Canonical is approaching this.

17:58.400 --> 18:03.680
This week they published candidate Ubuntu kernels that provide mitigations for Spectre

18:03.680 --> 18:09.360
variants 1 and 2, which the fact that they even have a potential mitigation to variant

18:09.360 --> 18:12.260
2 Spectre, I'm pretty impressed with, but they're not shipping it.

18:12.260 --> 18:13.720
They're not saying it's done yet.

18:13.720 --> 18:18.360
They've released candidate kernels for 1710, 1604, and 1404.

18:18.360 --> 18:20.480
Yeah, which is a very nice approach, isn't it?

18:20.480 --> 18:26.200
It means if you want to do on-premises testing, then you can do it before you deploy it to

18:26.200 --> 18:31.520
all of your workloads out there, rather than just pushing it out and letting all the users

18:31.520 --> 18:33.800
test it for you.

18:33.800 --> 18:41.120
It's available for those who want it and want to test it and really are prioritizing security.

18:41.120 --> 18:47.720
It looks like that testing is almost complete now and hopefully we will see this around

18:47.720 --> 18:50.360
about the time people are listening to this episode.

18:50.360 --> 18:54.620
You should also see a corresponding Intel microcode update for many of the Intel CPUs

18:54.620 --> 18:58.340
and eventually an AMD 64 microcode update as well.

18:58.340 --> 19:03.120
It's the combination of the software updates and the microcode updates together that actually

19:03.120 --> 19:07.000
mitigate most of the vulnerabilities as we know it.

19:07.000 --> 19:08.120
Or do they, Joe?

19:08.120 --> 19:15.360
Well, that's the thing, SkyfallAttack.com has cropped up and it says Skyfall and Solus.

19:15.360 --> 19:20.120
Not to be confused with Solus, of course, Ike's delighted by this name.

19:20.120 --> 19:27.560
It says more vulnerabilities in modern computers and it's basically saying that this is just

19:27.560 --> 19:32.200
the beginning, Meltdown and Spectre, and there's going to be more coming out and there's something

19:32.200 --> 19:34.640
under embargo that we're going to publish soon.

19:34.640 --> 19:38.560
It's all very speculative, but it's all very worrying at the same time.

19:38.560 --> 19:41.560
I feel bad for Ike, that's a lot of name collision.

19:41.560 --> 19:46.640
I guess the implication is that Skyfall and Solus are two speculative attacks based on

19:46.640 --> 19:50.600
the works highlighted in Meltdown and Spectre, but the full details are completely under

19:50.600 --> 19:52.820
an embargo but will be published soon.

19:52.820 --> 20:00.280
So watch this space, the website says, which is very teasy and obviously trying to generate

20:00.280 --> 20:01.280
hype.

20:01.280 --> 20:07.520
And can you really trust anyone who doesn't specify a background color on their website?

20:07.520 --> 20:08.960
Who can you trust then, Joe?

20:08.960 --> 20:09.960
Who can you trust?

20:09.960 --> 20:12.160
I say that because it looks gray with my theme.

20:12.160 --> 20:16.000
If people don't specify white as a background color, then I know that they are lazy web

20:16.000 --> 20:17.640
devs, but there we go.

20:17.640 --> 20:22.120
You are a true XFCE user to the core, my friend.

20:22.120 --> 20:26.920
It's a long story, but it's to do with my Firefox profile that I never fixed and I probably

20:26.920 --> 20:27.920
should fix it.

20:27.920 --> 20:33.200
So I've left it so that it does point that out to me, who's being lazy.

20:33.200 --> 20:40.800
But someone who has not been lazy are the team behind NHS Ubuntu, and then they changed

20:40.800 --> 20:43.340
it to NHOS.

20:43.340 --> 20:48.880
This was an Ubuntu-based distro that was very much aimed at the National Health Service

20:48.880 --> 20:50.940
here in the UK.

20:50.940 --> 20:56.160
And this gained a lot of attention after the huge ransomware attack last year that crippled

20:56.160 --> 20:58.720
a lot of the NHS infrastructure.

20:58.720 --> 21:04.620
And some people were hopeful that this would happen and that the NHS might change over

21:04.620 --> 21:07.920
to Linux, but I was always very skeptical.

21:07.920 --> 21:12.200
And I was always assuming that they were going to be shut down because of the NHS trademark,

21:12.200 --> 21:15.160
which they are very, very protective about.

21:15.160 --> 21:17.120
And sure enough, that has happened now.

21:17.120 --> 21:18.580
Yeah, that's a bit of a shame.

21:18.580 --> 21:24.880
The volunteer force behind NHOS wanted NHS Ubuntu to replace the current smart card verification

21:24.880 --> 21:29.980
system that was running on Windows, and ultimately have the operating system replace Windows

21:29.980 --> 21:32.320
on the desktop as well.

21:32.320 --> 21:36.900
And they went through trademark disputes, they made adjustments based on what they thought

21:36.900 --> 21:40.200
they needed to, and they got to the end of it.

21:40.200 --> 21:45.000
And well, they did what sort of reads as a rage quit, but a bit understandable when you

21:45.000 --> 21:46.440
look in the context.

21:46.440 --> 21:50.180
They feel like they were leveraged to negotiate with Microsoft, and that's why they got some

21:50.180 --> 21:52.320
attention but no official support.

21:52.320 --> 21:57.320
They never really felt like they were wanted other than wanted to get a better deal from

21:57.320 --> 21:59.040
Microsoft.

21:59.040 --> 22:03.260
We've seen that kind of negotiating tactic a lot where a government or a company gets

22:03.260 --> 22:07.320
locked into Microsoft and they don't really have an option to leave Microsoft, but they

22:07.320 --> 22:11.480
will flirt or threaten to flirt with switching to LibreOffice.

22:11.480 --> 22:15.080
And if you don't give us a great deal, we're going to switch to LibreOffice.

22:15.080 --> 22:19.040
And it seems like it's sort of a negotiating tactic when there's no real sincerity behind

22:19.040 --> 22:20.040
it.

22:20.040 --> 22:22.080
Now, you see, I'm just not having that at all.

22:22.080 --> 22:25.240
It's Marcus Boer who was the co-founder of this.

22:25.240 --> 22:31.040
He said that they'd used it as a negotiating tactic and everything, but I just think in

22:31.040 --> 22:34.160
reality it was just never going to happen.

22:34.160 --> 22:41.000
And they almost had some meetings with some higher-ups in the IT department of the NHS,

22:41.000 --> 22:47.360
but I just think that it was just a complete pipe dream of them to think that they were

22:47.360 --> 22:55.640
ever going to break the monopoly stranglehold that Microsoft has over the NHS, as they have

22:55.640 --> 22:58.080
over so many enterprises all over the world.

22:58.080 --> 22:59.080
Yeah, fair enough.

22:59.080 --> 23:03.000
People have established workflows and they got a job to get done.

23:03.000 --> 23:04.000
Yeah.

23:04.000 --> 23:09.760
And changing the infrastructure of something as huge as the NHS is not something that happens

23:09.760 --> 23:13.560
quickly, if at all, essentially.

23:13.560 --> 23:20.860
There's still tons of machines running XP even now in the NHS, and so you can't expect

23:20.860 --> 23:25.840
them to seriously consider changing major infrastructure over to Linux.

23:25.840 --> 23:29.760
It would be great if it would happen, and I would be all for it, but sometimes you just

23:29.760 --> 23:32.260
have to be a bit realistic with these things.

23:32.260 --> 23:37.000
That's why I follow stories out of Barcelona with so much interest, is how does the grand

23:37.000 --> 23:38.840
experiment work out?

23:38.840 --> 23:42.520
And we'll check back in on stories like that and many other stories in Linux and the open

23:42.520 --> 23:43.520
source world.

23:43.520 --> 23:48.060
Go to linuxactionnews.com slash subscribe for all the ways to get new episodes every

23:48.060 --> 23:49.360
single week.

23:49.360 --> 23:53.600
And go to linuxactionnews.com slash contact for ways to get in touch with us.

23:53.600 --> 23:57.800
And please consider supporting the entire network and giving us runways for future projects

23:57.800 --> 23:58.800
and much more.

23:58.800 --> 24:01.280
Go to patreon.com slash Jupiter signal.

24:01.280 --> 24:05.800
We'll be back next Monday with our weekly take on the latest Linux and open source news.

24:05.800 --> 24:07.280
I'm at Chris LAS.

24:07.280 --> 24:09.160
I'm at Joe Ressington.

24:09.160 --> 24:11.280
Thank you for joining us, and we'll see you next week.

24:11.280 --> 24:28.720
See you next time.

