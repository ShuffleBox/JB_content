WEBVTT

00:00.000 --> 00:11.420
Hello, and welcome to Linux Action News. Episode 256, recorded on August 31st, 2022. I'm Chris.

00:11.420 --> 00:12.420
And I'm Wes.

00:12.420 --> 00:15.620
Hello, Wes. Let's do the news.

00:15.620 --> 00:21.460
And we start with a project that is as universally loved in the Linux community as just about

00:21.460 --> 00:25.380
any project can be. FWPD.

00:25.380 --> 00:29.980
This week, Richard Hughes, the lead developer of FWPD, as well as its backend infrastructure,

00:29.980 --> 00:37.160
the Linux Vendor Firmware Service, announced the release of FWPD 1.8.4.

00:37.160 --> 00:42.720
A significant update, FWPD 1.8.4 not only includes bug fixes and support for some new

00:42.720 --> 00:49.560
hardware, but it notably also lays the groundwork for the ability to make changes to the system's

00:49.560 --> 00:53.160
BIOS from within Linux.

00:53.160 --> 00:59.920
Yeah, let that sink in for a minute. FWPD can now read your system BIOS settings and

00:59.920 --> 01:06.040
has the ability to actually change them if the user desires, and has the authorization

01:06.040 --> 01:08.080
to do so, I should say.

01:08.080 --> 01:12.700
And this ability is not only useful for some obvious reasons out there, but should also

01:12.700 --> 01:17.560
go towards this new Device Security Control Center page in future versions of GNOME, which

01:17.560 --> 01:23.480
is planned to expose important hardware information, like a security issue, should they exist.

01:23.480 --> 01:28.000
And according to Hughes, support is going to be limited, at least for now, to certain

01:28.000 --> 01:32.840
hardware, writing, quote, we currently support this on modern Lenovo and Dell platforms via

01:32.840 --> 01:37.400
the Firmware Attributes kernel interface. Other vendors just have to add that kernel

01:37.400 --> 01:41.360
WMI bridge, and it should mostly start magically working.

01:41.360 --> 01:45.320
You ThinkPad users out there will especially want to keep your eyes out for this update,

01:45.320 --> 01:49.480
since it includes support for the ThinkPad Thunderbolt 4 dock, as well as the ThinkPad

01:49.480 --> 01:55.800
Universal Smart Dock. Additional details on FWPD 1.8.4 can also be found via the link

01:55.800 --> 02:01.680
in our notes to Richard Hughes' blog.

02:01.680 --> 02:05.680
Well an update on Canonical's effort to make Ubuntu more appealing to gamers. They

02:05.680 --> 02:10.000
are continuing to make improvements to their Steam Snap, like resolving some graphics drivers

02:10.000 --> 02:15.000
issues, and now seem to be expanding out to other components for gaming.

02:15.000 --> 02:19.880
Now you might guess that Canonical had snapped up another game library, or maybe created

02:19.880 --> 02:27.200
a free interface to GOG. But you'd be wrong. The latest Linux gaming component to receive

02:27.200 --> 02:31.680
Snap treatment is now Feral Interactive's Game Mode.

02:31.680 --> 02:35.720
Yeah, you might remember Game Mode. That's their demon for automatically setting the

02:35.720 --> 02:40.360
CPU governor to performance mode, and then dynamically adjusting other system settings

02:40.360 --> 02:44.840
when a game is launched. And then it restores those settings back when you exit the game.

02:44.840 --> 02:51.840
And it looks like Canonical here just wants to snap up more of the gaming ecosystem.

02:51.840 --> 02:57.840
Reception in the Linux community seems to be a bit confused and hesitant. For their

02:57.840 --> 03:02.360
part though, Canonical has been making it pretty clear they want to invest in gaming

03:02.360 --> 03:08.800
on Ubuntu. They held a talk at the Libre Application Summit earlier this year, and opened two positions

03:08.800 --> 03:12.080
within the company focused on gaming.

03:12.080 --> 03:16.720
But I think it's safe to say that many of us sort of expected those efforts would be

03:16.720 --> 03:22.480
going into system optimizations, enabling newer drivers on Ubuntu, or maybe reaching

03:22.480 --> 03:24.720
out to developers and other partners.

03:24.720 --> 03:29.360
Yeah, I suppose we can hope that's kind of part of the plan. Maybe what we're seeing

03:29.360 --> 03:35.240
right now is a bit of a phase one, some basic groundwork that the team can then build on

03:35.240 --> 03:42.960
later. I guess we'll have to see, time will tell.

03:42.960 --> 03:50.200
Just a few days ago, Pine64 announced the Star64 single board computer prototype. And

03:50.200 --> 03:58.680
yeah, it's powered by a RISC-V based Star5 JH7110 64-bit processor.

03:58.680 --> 04:04.160
Alright, bring it on I say. Let's get more of these on the market. The Star64 will be

04:04.160 --> 04:10.560
available with four gigabytes and eight gigabytes of LPDDR4 RAM. And the Star64 will also feature

04:10.560 --> 04:16.560
an eMMC slot, a PCIe slot, and a microSD slot.

04:16.560 --> 04:24.880
The Star64 also features dual gigabit ports, Wi-Fi 6, an HDMI and MIPI display interface.

04:24.880 --> 04:34.640
And of course, the board also includes a 40-pin GPIO header, three USB 2.0 ports, one USB 3.0

04:34.640 --> 04:40.760
port, a 3.5 millimeter audio jack, and a power button.

04:40.760 --> 04:44.740
Well how about that, a power button. These small board computers are getting fancy indeed.

04:44.740 --> 04:51.000
Now we're still missing some, I would say, essential launch details. So in my opinion,

04:51.000 --> 04:56.080
it's a bit of a mini red flag. I have no doubt that ultimately Pine will ship this.

04:56.080 --> 05:01.040
My main question is how finished will it ever get? But that we'll have to wait and see.

05:01.040 --> 05:06.080
It does sound like interested developers might be able to receive their boards as early as

05:06.080 --> 05:13.760
in a few weeks. So we'll keep you posted.

05:13.760 --> 05:20.180
And a quick update on one of those apps that's always working for you in the background.

05:20.180 --> 05:28.240
Network Manager 1.40 has been released with Multi-Path TCP support. Multi-Path TCP has

05:28.240 --> 05:33.380
really come together in the kernel over the past two years, and it allows TCP connections

05:33.380 --> 05:39.600
to use multiple paths for greater performance, efficiency, and added redundancy.

05:39.600 --> 05:44.920
With recent kernels, the Multi-Path TCP functionality is in great shape, so it's really nice to

05:44.920 --> 05:49.740
see the Network Manager configuration side finally adding support.

05:49.740 --> 05:53.240
In addition to that, though, there's also been some generous cleanup around the Network

05:53.240 --> 06:01.040
Manager DHCP client code, support for configuring the IPv6 MTU, and improved carrier detection

06:01.040 --> 06:06.520
for you mobile users out there.

06:06.520 --> 06:11.760
Linode.com slash LAN. Go there to get $100 in 60-day credit on a new account, and it's

06:11.760 --> 06:14.040
a great way to support the show.

06:14.040 --> 06:18.720
Big thank you to Linode for their continued support of Linux Action News. Keeping us going,

06:18.720 --> 06:23.240
keeping us on the air, Linode is fast, reliable cloud hosting. I think it's the best in the

06:23.240 --> 06:26.880
business, and they have the best support in the business, and the best performance in

06:26.880 --> 06:27.880
the business.

06:27.880 --> 06:32.760
I know, big talk, but independent study after independent study has shown it over the years,

06:32.760 --> 06:37.200
and I've seen it with my own eyes, too. We just launched the new website, brand new website.

06:37.200 --> 06:41.960
It's up. If you haven't been to jupyterbroadcasting.com in a little while, go check it out.

06:41.960 --> 06:46.000
And yeah, it's running on Linode. We build it on Linode. We deploy it on Linode. All

06:46.000 --> 06:50.920
the infrastructure on Linode is part of our toolbag. It's how we get jobs done, and Linode's

06:50.920 --> 06:55.580
been around for nearly 19 years, building the absolute best way for you to run applications

06:55.580 --> 07:02.560
on Linux in the cloud, and they're 30 to 50% cheaper than those hyperscalers that just

07:02.560 --> 07:06.840
want to lock you into their cray-cray platform, and they're always trying to upsell you. They're

07:06.840 --> 07:12.280
always coming up with some new rebranded open source project and selling it to you for a

07:12.280 --> 07:16.440
few bucks, you know? It's always their game. That's not the game Linode plays, and they've

07:16.440 --> 07:21.240
structured themselves in a way where they are their own ISP. They can have a dedicated

07:21.240 --> 07:26.880
365 support staff. They got 11 data centers around the world, and then they have great

07:26.880 --> 07:33.440
complimentary features, stuff that makes sense, like S3 compatible object storage, cloud firewalls,

07:33.440 --> 07:38.480
bare metal boxes if you need them, and Kubernetes, Ansible, and Terraform support, so that way

07:38.480 --> 07:42.500
you can just snap this right into your existing infrastructure and potentially make it part

07:42.500 --> 07:47.240
of your multi-cloud strategy. So go try it out. Go build something. Go learn something.

07:47.240 --> 07:53.560
Go kick the tires. Go put that $100 to work and support the show. Linode.com slash LAN.

07:53.560 --> 08:02.760
One more time, for good luck, go there and keep us going. Linode.com slash LAN.

08:02.760 --> 08:08.440
And a big thank you to Kalyde. Kalyde.com slash LAN. Kalyde is an endpoint security

08:08.440 --> 08:14.800
solution that uses the most powerful untapped resource in IT. Your end users. When you're

08:14.800 --> 08:17.840
trying to achieve security goals, whether it's for a third party audit or your own

08:17.840 --> 08:22.160
compliance standards, I think the conventional wisdom is to treat every device like it's

08:22.160 --> 08:26.400
Fort Knox or something. You know, with old school device management tools like MDMs that

08:26.400 --> 08:32.080
just force disruptive agents onto employees' devices, slow them down, treat privacy as

08:32.080 --> 08:36.840
an afterthought, and often have their own set of security drawbacks. You know what I'm

08:36.840 --> 08:41.560
talking about. It also has a way of turning end users against the IT admins and kind of

08:41.560 --> 08:47.480
creates this baseline hostility between the two groups. Kalyde does things differently.

08:47.480 --> 08:53.240
Instead of forcing changes on users, Kalyde sends them security recommendations via Slack.

08:53.240 --> 08:57.560
Kalyde will automatically notify your team when their devices are insecure and give them

08:57.560 --> 09:02.140
step-by-step instructions on how to solve the problem. By reaching out to employees

09:02.140 --> 09:07.200
via a friendly Slack DM and educating them about company policies, Kalyde can help you

09:07.200 --> 09:12.000
build a culture in which everyone contributes to security, because everyone understands

09:12.000 --> 09:17.760
how and why to do it. And for IT admins, Kalyde provides a single dashboard that lets you

09:17.760 --> 09:22.320
monitor the security of your entire fleet. Maybe they're on a Mac, Windows, or Linux,

09:22.320 --> 09:27.340
you got it. You can see at a glance which employees have their disencrypted or OS up

09:27.340 --> 09:31.840
to date and a password manager installed, making it easy to prove compliance to your

09:31.840 --> 09:38.720
auditors, your customers, or even leadership or yourself. So that, that's Kalyde. User-centered,

09:38.720 --> 09:45.120
cross-platform, endpoint security for teams that Slack. You can meet your compliance goals

09:45.120 --> 09:50.400
by putting users first. Visit Kalyde.com slash LAN to find out how. Now when you go there,

09:50.400 --> 09:55.240
they're going to also hook you up with a goodie bag, including a free t-shirt, just for activating

09:55.240 --> 10:02.260
a free trial. You got to love that free swag. So it's K-O-L-I-D-E dot com slash L-A-N, Kalyde

10:02.260 --> 10:07.880
dot com slash LAN.

10:07.880 --> 10:14.600
And we end this week with Debian's problem with non-free firmware. The basic issue is

10:14.600 --> 10:19.960
that the use of downloadable firmware and computer hardware is on the rise, and most

10:19.960 --> 10:26.680
of that firmware is just not free software. The official Debian installer, however, only

10:26.680 --> 10:32.600
incorporates free software and thus free firmware, which leads to serious problems for many users

10:32.600 --> 10:35.800
attempting to get Debian up and running on a modern system.

10:35.800 --> 10:41.600
Right. You got a new piece of hardware. It's got some fancy stuff in there that, well,

10:41.600 --> 10:45.920
only has binary blobs. This has always been a gray area for Debian, and a lot of us who've

10:45.920 --> 10:49.480
used it for a long time know that installer image only has packages from the official

10:49.480 --> 10:54.320
main repository, which is software that's only conforming to the Debian free software

10:54.320 --> 10:59.360
guidelines. So it's going to be a more limited set. It's generally a pretty healthy set of

10:59.360 --> 11:04.200
software, but this is an area, hardware blobs, where it's just traditionally been a little

11:04.200 --> 11:08.200
weak. And the same team that's responsible for creating the official installer images

11:08.200 --> 11:14.920
that don't have that firmware, but they also create the unofficial images, which do have

11:14.920 --> 11:20.480
the firmware in there. And honestly, most of us are going to end up just going and getting

11:20.480 --> 11:25.240
those images to get Debian up and running on modern hardware.

11:25.240 --> 11:32.120
But as you might imagine, the status of unofficial adds a little confusion to things. So an internal

11:32.120 --> 11:38.200
discussion on how Debian should be handling this started earlier this year. Now that discussion

11:38.200 --> 11:42.840
is moving forward into the Debian general resolution process.

11:42.840 --> 11:49.640
Yeah, indeed, something can only be unofficially unofficial for so long. So discussions on

11:49.640 --> 11:54.760
how Debian should be handling this have been going on for a really long time. This is really

11:54.760 --> 11:59.880
being driven by a longtime contributor, Steve McIntyre, and recently he proposed a general

11:59.880 --> 12:05.080
resolution on how Debian is going to just handle this non-free firmware situation. Now

12:05.080 --> 12:08.680
there's a discussion period that's kicked off that'll last until September 3rd. And

12:08.680 --> 12:13.120
this resolution that he's proposed has three main options.

12:13.120 --> 12:19.320
First there's option A. Include non-free firmware packages on the official installation

12:19.320 --> 12:26.000
media. In this version of the proposal, firmware binaries would be normally enabled by default

12:26.000 --> 12:31.000
where needed for hardware support. But it would also suggest that Debian explore ways

12:31.000 --> 12:37.240
to let users disable that support at boot time if desired. Under option A, the Debian

12:37.240 --> 12:42.200
installer or live system would also have a means of informing the user about what firmware

12:42.200 --> 12:49.920
is loaded, whether that firmware be free or non-free. Finally, option A specifies that

12:49.920 --> 12:55.320
these new versions of the media would replace Debian's current official installation media,

12:55.320 --> 13:00.760
which as we noted, does not include non-free firmware packages as it stands right now.

13:00.760 --> 13:06.560
Then there's option B. Include non-free firmware onto the official installation media along

13:06.560 --> 13:12.600
similar lines to option A. The main difference with option B is that these new images would

13:12.600 --> 13:18.320
not replace the current Debian official installation media. Instead, these new images would be

13:18.320 --> 13:22.240
separate and complimentary non-free firmware images.

13:22.240 --> 13:28.100
Finally, there's proposal C, which is really just a simplified statement that supports

13:28.100 --> 13:33.280
the inclusion of non-free firmware for the installer, but leaves out all the fine details

13:33.280 --> 13:36.640
present in options A and B.

13:36.640 --> 13:41.280
In my opinion, anything other than option A seems like bending over backwards to suit

13:41.280 --> 13:47.800
the idealists, but that's not to be dismissive about the difficulty of that choice because

13:47.800 --> 13:54.040
Debian is a very principled distribution and they are frequently in this struggle of ideals

13:54.040 --> 14:00.240
over ease for end users. And this is one of those tricky problems because this probably

14:00.240 --> 14:04.960
affects new users to Linux more than the more experienced users that are going to be making

14:04.960 --> 14:07.080
this decision.

14:07.080 --> 14:13.320
And so this is a kind of representative of how Debian wants to be perceived by that class

14:13.320 --> 14:19.400
of user. And that's probably what I find the most fascinating about this decision. Ultimately,

14:19.400 --> 14:24.540
whatever they choose to do, I can obviously roll with. But I think it's really saying

14:24.540 --> 14:29.280
something about who Debian is targeting, who the people that are making these decisions

14:29.280 --> 14:31.600
feel that the project is targeting at least.

14:31.600 --> 14:37.080
Yeah, that does have some logic to it, right? I mean, most new users, well, they're still

14:37.080 --> 14:41.760
kind of figuring out all of our principles and ideals around free and open source software

14:41.760 --> 14:47.160
and some of the consequences that that can imply. And I agree with you, right? Like if

14:47.160 --> 14:50.880
you are concerned about that, which there's many legitimate reasons to be concerned about

14:50.880 --> 14:56.160
these binary blobs, having some kind of escape hatch, like a command line option to disable

14:56.160 --> 15:02.280
that at boot, that might just work. I do want to add here though, you know, I think sometimes

15:02.280 --> 15:07.480
when we discuss binary blobs, we think of fancy high end hardware. But another reason

15:07.480 --> 15:13.640
for wanting non free firmware, by default, might be accessibility. Say a blind user is

15:13.640 --> 15:18.040
running the installer in text to speech mode, but also needs audio firmware loaded to be

15:18.040 --> 15:21.040
able to actually drive the installer at all.

15:21.040 --> 15:25.280
Absolutely. And if they can't get the hardware activated, they can't even get the operating

15:25.280 --> 15:29.880
system installed. And you know, option A seems like the most straightforward, you just include

15:29.880 --> 15:36.360
the non free packages on the official installation media. The challenge seems to be that it requires

15:36.360 --> 15:41.040
changes to the installer to actually fully execute this. So that way the user can be

15:41.040 --> 15:45.360
properly notified. And in there, it seems like it's honestly pretty easy to add a check

15:45.360 --> 15:50.280
box. And if for legality reasons, they needed to have it download at the time when you check

15:50.280 --> 15:56.880
the box, that seems totally reasonable too. There is definitely a way to make this work

15:56.880 --> 16:04.080
for the end user. You know, in the case of assisted access, perhaps the project could

16:04.080 --> 16:07.880
make an effort if they choose not to bake it into the main image, perhaps the project

16:07.880 --> 16:13.440
could make an effort to try to put an information campaign out there that it does tell users

16:13.440 --> 16:18.520
that need that stuff. We do have an image for you, but you'll have to go get it here.

16:18.520 --> 16:21.840
I don't think that's a particularly great strategy, but maybe that's something they'll

16:21.840 --> 16:25.960
like to do if they don't choose option A. We'll see, we're going to be watching this

16:25.960 --> 16:30.260
story and if more information is shared publicly, we'll capture it and we'll share it with you

16:30.260 --> 16:34.680
and everything else going on in the world of Linux and open source. So don't miss an

16:34.680 --> 16:41.360
episode, go to linuxactionnews.com slash subscribe to stay up to date. And head over to linuxactionnews.com

16:41.360 --> 16:47.080
slash contact for all the ways to get in touch. I am so excited to say our new website has

16:47.080 --> 16:52.040
launched. Check it out and then get the entire behind the scenes story on how our community

16:52.040 --> 16:58.060
built our new website, office hours dot hair slash eleven. We'll be back next week with

16:58.060 --> 17:03.760
our take on the latest Linux and open source news. Thanks for joining us. That's all the

17:03.760 --> 17:18.840
news for this week.

