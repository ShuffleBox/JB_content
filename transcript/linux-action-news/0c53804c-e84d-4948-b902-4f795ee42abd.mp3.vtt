WEBVTT

00:00.000 --> 00:09.080
Hello, and welcome to Linux Action News, episode 233, recorded on March 23, 2022. I'm Chris.

00:09.080 --> 00:13.320
Wes has the week off, so we're just doing a flash update, and let's get into the news.

00:13.320 --> 00:17.980
And we'll start with a follow up that might really be connected to the most important

00:17.980 --> 00:22.020
story in my opinion we covered last year in Linux, and that was the University of Minnesota's

00:22.020 --> 00:26.740
hypocrite commits to the Linux kernel. We initially covered that in Linux Action News

00:26.740 --> 00:33.360
186, and now it seems we're having something of an official response from the kernel team.

00:33.360 --> 00:38.640
The Kernels Technical Advisory Board, TAB for short, has put together a set of guidelines

00:38.640 --> 00:43.520
for researchers who are studying how the kernel development community works or individual

00:43.520 --> 00:49.320
projects. This document that's been created by the TAB has just actually been merged into

00:49.320 --> 00:54.120
the main line of Linux 518, so it's actually going to be baked into the Linux kernel now.

00:54.120 --> 00:58.280
And it's really good to see this, but here's my take on the overall document. I printed

00:58.280 --> 01:02.360
it out, if you can hear it there. And I went through this thing, and you know, it seems

01:02.360 --> 01:05.760
pretty reasonable. It really does kind of just sort of describe itself as a set of best

01:05.760 --> 01:13.280
practices. There's no mechanism to enforce it necessarily. They're sort of appealing

01:13.280 --> 01:20.040
to the researchers' goodwill, I suppose. And it calls these researchers to disclose

01:20.040 --> 01:24.940
to a developer before a developer's project or that individual developer are targeted.

01:24.940 --> 01:29.720
It also asserts that these developers cannot just be targeted without some sort of consent.

01:29.720 --> 01:34.440
And the document outlines what is expected when a researcher submits a patch to the Linux

01:34.440 --> 01:39.200
kernel to fix whatever they might have found. And it's an extensive set of requests and

01:39.200 --> 01:44.340
asks, including in there is if you've never submitted to the Linux kernel before, maybe

01:44.340 --> 01:48.640
have somebody who has look at this first before you send it to us and waste our time. I mean,

01:48.640 --> 01:51.840
they don't say that part, but it's kind of implied.

01:51.840 --> 01:57.600
They also take some effort to link and point to ethics and research papers that have been

01:57.600 --> 02:03.720
published before. And overall, I get it. I like it. I think it's good to see this. And

02:03.720 --> 02:07.800
I think it's great that this actually lives in the Linux kernel. So there really can be

02:07.800 --> 02:13.260
no missing it. I think the linchpin of this is going to be if researchers actually follow

02:13.260 --> 02:20.120
these guidelines. But clearly, if they do, then they could expect probably a more cordial

02:20.120 --> 02:25.240
interaction with the Linux development team than if they don't.

02:25.240 --> 02:30.680
Activists are targeting Russians with what's been dubbed as open source protestware. And

02:30.680 --> 02:36.480
for better or for worse, this is getting some attention thanks to an MIT research review.

02:36.480 --> 02:42.160
They've taken a brief look at what they've dubbed as protestware from open source. And

02:42.160 --> 02:48.620
they have come to some questionable conclusions, I'd argue, but maybe they're not wrong.

02:48.620 --> 02:53.400
This is a quote from from their review. They say, quote, no tech firm has gone this far,

02:53.400 --> 02:57.680
but around two dozen open source software projects have, and they've been spotted adding

02:57.680 --> 03:03.360
code protesting the war. According to observers tracking the protest where movement, the open

03:03.360 --> 03:08.260
source software, or I'm sorry, they say open source software is software that anyone can

03:08.260 --> 03:14.320
modify and inspect, making it more transparent. And in this case, at least, more open to sabotage.

03:14.320 --> 03:18.700
Okay, they might not say it dramatically like that. But they, you know, hey, open source,

03:18.700 --> 03:24.240
it's more open to sabotage. And then they cite a couple of examples that are frankly

03:24.240 --> 03:29.880
hard to argue with. I think the one that they cite that is the most damning is the recent

03:29.880 --> 03:34.560
node IPC update. Node IPC helps you build neural networks. It's downloaded more than

03:34.560 --> 03:42.640
a million times in a week. And it had a quote unquote, a quote unquote, protest update slipped

03:42.640 --> 03:48.640
in there, I guess you could say, one that sort of described itself as a message of peace.

03:48.640 --> 03:53.780
But another that was supposedly hidden in there, watched for the user's IP. And when

03:53.780 --> 04:00.400
it detected a Russian IP, it triggered a script that wiped the user's drives, whatever they

04:00.400 --> 04:07.920
had permission to, it would wipe. And soon after that update was published, a GitHub

04:07.920 --> 04:14.240
post went viral claiming that the code had hit several NGOs that were documenting Russian

04:14.240 --> 04:20.840
war crimes with photos and videos. And this update designed to protest the war ended up

04:20.840 --> 04:28.840
wiping out the NGOs documents. They say that 30,000 messages and files detailing war crimes

04:28.840 --> 04:35.200
committed by Russia and the Ukrainian army and government officials were wiped out. And

04:35.200 --> 04:38.560
it's not even the first time that open source developers have sabotaged software in their

04:38.560 --> 04:44.840
own projects as a bit of a protest. In January, the author of the Colors JS, remember that?

04:44.840 --> 04:47.920
They added that infinite loop to their code that rendered any server that was running

04:47.920 --> 04:54.520
it useless until it was fixed. These are all things that the MIT research paper cites.

04:54.520 --> 05:02.400
And my take on this is that they're not wrong. I don't think it's an issue at scale, but

05:02.400 --> 05:08.520
it's enough of an issue that Pandora's box has now been opened. And there will be some

05:08.520 --> 05:14.360
in business and in institutions that just don't trust open source the same way. And

05:14.360 --> 05:19.600
while right now, today, it's being targeted against a group that we might disagree with,

05:19.600 --> 05:26.480
open source, as you know, is a worldwide phenomenon. And so, by my math, it's just simply inevitable

05:26.480 --> 05:30.840
that we'll find ourselves on the other side of some herd mentality one day. And these

05:30.840 --> 05:35.960
kinds of things, if they become normalized, will likely strike us.

05:35.960 --> 05:42.600
But some good news for at least you Risk 5 fans out there. Potentially great news, really.

05:42.600 --> 05:47.720
Psy5, one of the most ambitious groups behind pushing for the Risk 5 platform, they just

05:47.720 --> 05:54.940
begged another series of funding, $175 million in a series F round. That's a lot of rounds

05:54.940 --> 05:59.960
of funding, but a couple of details came out in this process that overall kind of leave

05:59.960 --> 06:08.640
me feeling pretty good. Psy5 was valued at $2.5 billion in this process. That's no joke.

06:08.640 --> 06:13.280
We've seen companies like Linode recently sell for $900 million, right? So the fact

06:13.280 --> 06:16.800
that Psy5 is valued at $2.5 billion shows you the industry thinks there's some real

06:16.800 --> 06:18.600
potential here.

06:18.600 --> 06:23.560
And overall, when you dig through it, at least the picture that Psy5 is painting, the funding

06:23.560 --> 06:27.920
situation looks pretty good because between some recent money they've raised, some of

06:27.920 --> 06:32.840
which hasn't even kicked in yet, and business revenue is actually doing pretty well too,

06:32.840 --> 06:37.580
they seem to be in good shape. At least, again, according to Psy5.

06:37.580 --> 06:45.360
My take is that it's about time. I mean, really, Psy5 has been around since 2015. They are

06:45.360 --> 06:50.440
core to the RISC-V game, and they've built a growing business out of this thing just

06:50.440 --> 06:55.280
day by day here. So it's really good to see them really getting some momentum now. They

06:55.280 --> 06:59.440
say they need to hire to keep up with all of this, and this funding is going to let

06:59.440 --> 07:06.320
them do this. Get this, though. Psy5 expects to double their 300-person staff in the next

07:06.320 --> 07:10.880
12 to 18 months. That's how they're going to keep up with demand, and that's why they

07:10.880 --> 07:15.960
need the funding. That's amazing. It's actually happening.

07:15.960 --> 07:20.160
With Ubuntu 22.04 just around the corner, it is great to see one major change getting

07:20.160 --> 07:28.880
finished up just before next month's Jellyfish release. So, Ubuntu 22.04 LTS will now default

07:28.880 --> 07:34.640
to using GNOME on Wayland when running the NVIDIA proprietary driver. I can't believe

07:34.640 --> 07:41.040
I just put all those words into a sentence. GNOME, Wayland, on NVIDIA, default. Now, this

07:41.040 --> 07:46.920
is only going to work if you have a card that can take advantage of the NVIDIA 510 series

07:46.920 --> 07:51.600
or newer driver. And if you're already on an AMD or Intel GPU, well, you're already

07:51.600 --> 07:57.080
set. Ubuntu Linux has been defaulting to GNOME on Wayland since 2104 for those of you with

07:57.080 --> 08:03.440
AMD graphics. But this is huge for NVIDIA users that use the proprietary driver, and

08:03.440 --> 08:08.440
it's the result of months of work by Red Hat, Canonical, and of course, NVIDIA. And I'm

08:08.440 --> 08:15.680
talking Zoom meetings or BlueJeans meetings, really, in reality, that went on and on forever

08:15.680 --> 08:19.200
that we'll never really know the full details of how hard people worked behind the scenes

08:19.200 --> 08:24.000
to make this happen. But we do know on NVIDIA's side, they've been working to address bugs

08:24.000 --> 08:29.040
for some time, and really what's helped make all of this possible is their implementation

08:29.040 --> 08:34.960
inside their proprietary driver of the generic buffer manager. Adding that support really

08:34.960 --> 09:00.880
unlocked all this.

09:00.880 --> 09:04.400
Linode is fast, reliable cloud hosting. You gotta try it. It's what we've been using

09:04.400 --> 09:09.160
for the last two and a half years to build anything that's audience facing. It's fast

09:09.160 --> 09:14.400
when I say it, I mean it. They've got 40 gigabit connections coming to the hypervisors, MVME

09:14.400 --> 09:18.520
storage for the disk, and AMD EPYC processors when you want something fast. They've been

09:18.520 --> 09:24.080
doing this for nearly 19 years, and it just keeps getting better and better. In particular,

09:24.080 --> 09:28.120
I have to say their object storage has been a lifesaver. Their cloud firewalls make managing

09:28.120 --> 09:32.720
traffic simple, and their interface makes it possible for anyone on our team to deploy

09:32.720 --> 09:37.840
a server. So go try it out for yourself, see why we use Linode for everything. Go to linode.com

09:37.840 --> 09:44.760
slash land, get $100 in 60 day credit, and of course, you support the show.

09:44.760 --> 09:49.240
Linux.ting.com. If you're sick of overpaying for cell service, go support the show and

09:49.240 --> 09:55.160
see how much you could save by going to linux.ting.com. Ting's an MVNO, that means you get access

09:55.160 --> 09:59.200
to the same networks as the big carriers, but with way better customer support at a

09:59.200 --> 10:03.160
lot lower of a cost. They have very simple plans. It's one of the reasons why I've been

10:03.160 --> 10:08.280
a customer since 2013. And their support is the best. That's what they get to focus on.

10:08.280 --> 10:14.280
In fact, Ting was named number one by Consumer Reports in 2021. I mean, there really is no

10:14.280 --> 10:18.280
smarter way to do mobile. You save money, you get better, simpler plans, and access

10:18.280 --> 10:22.600
to the best customer support with no contracts ever. And pretty much any phone is going to

10:22.600 --> 10:26.840
work with Ting because they support multiple networks. And it's super simple to switch.

10:26.840 --> 10:31.080
You can do it all on their website. Just get started at linux.ting.com. But check your

10:31.080 --> 10:34.840
current phone, create an account and pick the plan that's right for you. Ting will

10:34.840 --> 10:59.360
get you going in minutes. Get started, support the show and save 25 bucks at linux.ting.com.

10:59.360 --> 11:04.880
While it's actually happened, the first alpha to get Linux on the M1 Macs has shipped. The

11:04.880 --> 11:09.600
Asahi Linux team and Hector Martin announced this week that they are very excited for the

11:09.600 --> 11:15.080
public alpha to ship. It supports the current range of M1 machines with a few limitations

11:15.080 --> 11:20.420
in there. As we talked about before and prepared you for, there is no accelerated GPU support

11:20.420 --> 11:26.240
at this stage. Things like DisplayPort, Bluetooth, et cetera, they're not working. Some things

11:26.240 --> 11:30.360
like HDMI are hit and miss depending on the machine you're using. And at present, there

11:30.360 --> 11:35.040
is no support for the recently announced Mac Studio. None of that's too surprising. It's

11:35.040 --> 11:39.420
kind of what we expected all across the board. But now that it's actually gotten in the hands

11:39.420 --> 11:46.280
of end users, we're seeing a ton of positive reports. And for a lot of people, it seems

11:46.280 --> 11:51.040
that performance might even be better than expected. Michael Larble over at Ferronix

11:51.040 --> 11:54.840
noted this in his tests, which we'll have linked in the show notes. And he did pages

11:54.840 --> 11:59.600
of tests. But one of the things that stood out to me was this. He says, quote, even with

11:59.600 --> 12:03.360
there being power and performance work still ahead for being able to make the most out

12:03.360 --> 12:08.900
of the M1, these benchmarks with the Mac Mini did genuinely exceed my expectations for this

12:08.900 --> 12:14.160
early alpha state. Running Linux on the M1 MacBooks may be a bit less ideal due to also

12:14.160 --> 12:18.400
having to worry about the battery life and cooling concerns. But at least in the case

12:18.400 --> 12:24.120
of the Mac Mini, this was a great little platform for evaluating the early state of Linux on

12:24.120 --> 12:29.920
Apple Silicon. Now, here's my take, guys. I think what they've done in here is really

12:29.920 --> 12:35.440
clever. Asahi Linux has made it very simple to handle the Mac OS install on the Mac. It

12:35.440 --> 12:39.680
is designed to dual boot that, which I think is very smart in this phase, not only because

12:39.680 --> 12:44.800
Asahi Linux is not fully functional, but even long term, you're going to want that Mac install

12:44.800 --> 12:49.180
to do, I would imagine, firmware updates and things like that that Apple will only make

12:49.180 --> 12:55.560
available through their OS, of course. Right. And I think also I love the choice of fully

12:55.560 --> 12:59.400
embracing the dual boot mindset, because for some people, that's going to be the utility

12:59.400 --> 13:03.920
of these machines. A lot of people got a utility and still do get utility out of dual booting

13:03.920 --> 13:08.760
Linux and Windows. It's the same scenario here. But they've also accounted for those

13:08.760 --> 13:12.760
of us that are just going to want to run Linux full time. There's essentially a minimum viable

13:12.760 --> 13:19.160
Mac option in here where the Asahi Linux installer shrinks the Mac install down and then you

13:19.160 --> 13:24.560
can use the remainder, the bulk of the free space for the Linux install. Right now, Asahi

13:24.560 --> 13:30.160
Linux is really just a brilliant installer that sits on top of a slightly modified version

13:30.160 --> 13:34.960
of Arch. I tell you that so you know what you're getting into, but I also think that's

13:34.960 --> 13:40.580
really smart. Right now, this is for the domain of power users that are probably already comfortable

13:40.580 --> 13:49.040
using Arch Linux. And Arch Linux also means faster software update. So as the team upstreams

13:49.040 --> 13:53.760
driver improvements, you know, when they when they do get when Alyssa gets GPU acceleration

13:53.760 --> 13:58.480
working, or they get Bluetooth working, right, that's going to land upstream first. And that

13:58.480 --> 14:02.640
means it's going to come to Arch first, sort of the same mentality, I think that Valve

14:02.640 --> 14:08.960
had when they released the new deck with Arch, get those upstream improvements onto the hardware

14:08.960 --> 14:14.000
as fast as possible, because it makes the whole system more usable. But I have seen

14:14.000 --> 14:18.800
people out there that are actually doing NixOS, all kinds of different distros, because really

14:18.800 --> 14:24.240
it's it's it's using upstream bits that Asahi Linux is doing here. There's nothing proprietary

14:24.240 --> 14:29.340
to their installer. There does seem to be users discovering that some of Apple's tools

14:29.340 --> 14:35.040
are brittle in all of this. We actually had this bite that bite us on Linux unplugged.

14:35.040 --> 14:41.040
The project is getting reports and we saw it ourselves that the APFS resizers part is

14:41.040 --> 14:45.920
failing, probably due to some other type of file system corruption, either something that

14:45.920 --> 14:50.560
existed ahead of time, or something that the tool is introducing. There is a couple of

14:50.560 --> 14:55.000
options that we found. But if you don't, if you don't know to expect this, it's kind of

14:55.000 --> 14:59.920
a bummer because it breaks the whole installation process. And it leaves you with what appears

14:59.920 --> 15:05.600
to be a corrupted file system. However, in our case, disk first aid managed to just fix

15:05.600 --> 15:09.680
it when we put it off the recovery partition. And other users have reported that they just

15:09.680 --> 15:16.080
had to do a nuke and pave reinstall Mac OS. Not ideal, I grant you. And then they could

15:16.080 --> 15:20.280
proceed. I don't know, but we seem to have our file system problem solved on the MacBook

15:20.280 --> 15:24.280
that we are trying it on. We're going to put Linux on a MacBook Max. And we're going to

15:24.280 --> 15:29.400
give it another go on this coming Sunday's Linux unplugged. So join us live Sunday at

15:29.400 --> 15:34.640
noon Pacific 3pm Eastern at jblive.tv. If you want to see how our Asahi Linux attempt

15:34.640 --> 15:39.560
goes this time, I think it's going to go better now that we fix that file system problem.

15:39.560 --> 15:45.560
It is early days, right? No doubt about it. You got to acknowledge it. The value isn't

15:45.560 --> 15:50.040
there. There's absolutely no reason at this point to go buy a Mac with the intention of

15:50.040 --> 15:55.480
running Linux. That would be a silly thing to do. Don't do what Chris did and some of

15:55.480 --> 16:03.500
his friends. But I see a near future here where I'm going to have a headless, low power

16:03.500 --> 16:09.440
home Linux box running on M1 hardware in my future. This could really bring my home hosting

16:09.440 --> 16:15.040
game to a whole new level. I'm always going for the best performance per watt because

16:15.040 --> 16:19.880
for large portions of the year, my home runs off of solar energy. I have no grid hookup

16:19.880 --> 16:25.400
at all. And so it really makes a difference how much power something draws over the long

16:25.400 --> 16:31.000
haul. And so the M1 hardware has just been extremely attractive to me from a home server,

16:31.000 --> 16:34.880
low power, high performance standpoint. But there's just no way I was going to do with

16:34.880 --> 16:39.680
Mac OS as a server. So to see a saw Linux working on this, I'm extremely excited. GPU

16:39.680 --> 16:43.000
acceleration is still kind of far off in the distance, but that's clearly like the next

16:43.000 --> 16:48.060
major milestone along with some of the other hardware enablement. But it feels like we're

16:48.060 --> 16:51.200
on track here. And now that the public's getting their hands on it, it's going to accelerate

16:51.200 --> 16:56.640
the involvement. It may even accelerate people joining the Patreon and supporting the project.

16:56.640 --> 17:00.080
We'll have to see. We'll keep an eye on this and everything else in the world of free software

17:00.080 --> 17:04.920
and open source. So don't miss a single episode. Go to LinuxActionNews.com slash subscribe for

17:04.920 --> 17:08.400
all the ways to get new episodes. And we'd love your feedback. You can either send us

17:08.400 --> 17:14.040
a boost on a new podcast app that supports boosts or go to the contact page. Old school

17:14.040 --> 17:18.720
LinuxActionNews.com slash contact. And let's hang out. I wanted to let you know we do have

17:18.720 --> 17:25.240
a live stream coming up on March 31st at 4 p.m. in Seattle, 7 p.m. in New York, 11 p.m.

17:25.240 --> 17:29.240
London time. Again, that's March 31st. It's an ask me anything. If you've been having

17:29.240 --> 17:33.800
questions, you got thoughts, concerns, ideas, I don't know. Let me know. Come to the live

17:33.800 --> 17:37.380
stream and let's chat. I also have the mobile room going and I'm going to help people get

17:37.380 --> 17:41.600
Matrix set up because I know the onboarding can be a bit rough, but our Matrix community

17:41.600 --> 17:46.120
is awesome. Decentralized chat is the future and I want to help people get on board. And

17:46.120 --> 17:50.580
speaking of decentralized futures, I'm also giving away some Bitcoin to help you get started

17:50.580 --> 17:55.760
with boosts and value for value. So go get a new podcast app, newpodcastapps.com. I like

17:55.760 --> 18:00.240
Fountain. You need something that has a lightning wallet and I'll be giving away some Bitcoin

18:00.240 --> 18:04.800
to help you get started because I think it is the future of independent media and free

18:04.800 --> 18:10.600
software. Again, that's live March 31st, 4 p.m. in Seattle, 7 p.m. in New York, 11 p.m.

18:10.600 --> 18:15.080
London. I'd love to see you there. Of course, we'll be back next week with our take on the

18:15.080 --> 18:19.320
latest Linux and open source news. Thanks so much for joining us. And that's all the

18:19.320 --> 18:40.600
news for this week.

