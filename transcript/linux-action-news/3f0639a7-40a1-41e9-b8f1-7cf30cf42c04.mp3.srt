1
00:00:00,000 --> 00:00:16,360
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

2
00:00:16,360 --> 00:00:20,880
This is episode 84, recorded on December 16, 2018.

3
00:00:20,880 --> 00:00:21,880
I'm Chris.

4
00:00:21,880 --> 00:00:22,880
And I'm Joe.

5
00:00:22,880 --> 00:00:23,880
Hello, Joe.

6
00:00:23,880 --> 00:00:25,040
It's good to be connected with you.

7
00:00:25,040 --> 00:00:27,600
We have a good batch of stories this week.

8
00:00:27,600 --> 00:00:33,000
One that, I got to say, our first story didn't think we'd be hearing maybe until Intel was

9
00:00:33,000 --> 00:00:34,520
on the ropes.

10
00:00:34,520 --> 00:00:37,960
But it looks like Intel could be working on open sourcing their FSP.

11
00:00:37,960 --> 00:00:42,560
Yeah, now, it's easy to get excited about this, but I do think we have to temper our

12
00:00:42,560 --> 00:00:48,160
expectations slightly because this is only the first talk of this.

13
00:00:48,160 --> 00:00:52,980
And it's not the only proprietary component that makes an Intel system boot.

14
00:00:52,980 --> 00:00:56,280
But it is a very good potential first step.

15
00:00:56,280 --> 00:00:57,280
Right.

16
00:00:57,280 --> 00:00:58,280
So just really quick.

17
00:00:58,280 --> 00:01:02,080
The FSP, just so everybody's on the same page, that stands for the Firmware Support Package.

18
00:01:02,080 --> 00:01:03,280
And you probably guessed what that does.

19
00:01:03,280 --> 00:01:07,800
It initializes the CPU, the memory controller, and some of the chipset stuff.

20
00:01:07,800 --> 00:01:10,520
It's a pretty important piece of an Intel motherboard.

21
00:01:10,520 --> 00:01:13,960
So it would be a big contribution if it was made open source.

22
00:01:13,960 --> 00:01:18,580
This information and this possibility is coming from Michael Laribel from Fronix, who was

23
00:01:18,580 --> 00:01:21,000
down at an Intel event.

24
00:01:21,000 --> 00:01:24,920
And some of what he saw at this event syncs up with my experience when I was on the Intel

25
00:01:24,920 --> 00:01:27,120
campus just a couple of months ago.

26
00:01:27,120 --> 00:01:31,720
And when I was there, I had a genuine sense, and I talked about this on Linux Unplugged,

27
00:01:31,720 --> 00:01:38,200
that Intel wanted to rebuild a bridge with the open source community after the fiasco

28
00:01:38,200 --> 00:01:43,600
that was Meltdown and Spectre and how some of those projects were or were not notified.

29
00:01:43,600 --> 00:01:46,980
And honestly, some of those projects, like the Linux kernel developers, that are still

30
00:01:46,980 --> 00:01:51,980
very frustrated with Intel for essentially making them fix their problem.

31
00:01:51,980 --> 00:01:58,280
And I had a distinct sense talking to the staff and watching their presentations that

32
00:01:58,280 --> 00:02:01,160
they are trying to look at ways of repairing that relationship.

33
00:02:01,160 --> 00:02:02,620
Well, that's the thing, though.

34
00:02:02,620 --> 00:02:07,080
Is this just paying lip service to the idea of open sourcing this stuff?

35
00:02:07,080 --> 00:02:09,680
Because it's not going to happen overnight, is it?

36
00:02:09,680 --> 00:02:17,040
And making positive noises to journalists like Michael is making us talk about it, right?

37
00:02:17,040 --> 00:02:18,040
Yeah, yeah.

38
00:02:18,040 --> 00:02:20,560
It also is a dangerous thing to play with, though, isn't it?

39
00:02:20,560 --> 00:02:26,680
He told Michael in the interview that we'll likely hear more in quarter one of next year.

40
00:02:26,680 --> 00:02:31,240
He indicates that they're getting customer demand for Intel to open this thing up.

41
00:02:31,240 --> 00:02:36,640
If that is retroactive on stuff that's shipping today or if it's only on future Intel products

42
00:02:36,640 --> 00:02:38,520
and boards, we don't know.

43
00:02:38,520 --> 00:02:42,440
But it sounds like if this is going to happen, we're going to hear more about it early next

44
00:02:42,440 --> 00:02:43,440
year.

45
00:02:43,440 --> 00:02:48,080
Well, something you have to consider is that Intel has about 16,000 people working on software

46
00:02:48,080 --> 00:02:55,680
alone, which is about twice the number of people who work at AMD in all departments.

47
00:02:55,680 --> 00:02:58,440
So they do have a huge software department over Intel.

48
00:02:58,440 --> 00:03:02,600
And of course, we know about Clear Linux, but that's not all they're working on over

49
00:03:02,600 --> 00:03:03,600
there.

50
00:03:03,600 --> 00:03:05,880
They haven't got all those people working on one distro.

51
00:03:05,880 --> 00:03:10,100
They're contributing a lot to the Linux kernel, and they need to stay relevant in the software

52
00:03:10,100 --> 00:03:13,040
world in order to sell their hardware.

53
00:03:13,040 --> 00:03:17,280
And really, the data center is where open sourcing things like the FSP are going to

54
00:03:17,280 --> 00:03:23,280
make the difference because people are taking security so seriously these days.

55
00:03:23,280 --> 00:03:29,880
And you just can't really be sure at the moment that your systems, all your servers are properly

56
00:03:29,880 --> 00:03:34,000
secure because it's running this proprietary code to boot them up.

57
00:03:34,000 --> 00:03:37,120
You can run completely free software thereafter.

58
00:03:37,120 --> 00:03:41,760
But if that processor needs this proprietary code, then you just have no idea, do you?

59
00:03:41,760 --> 00:03:47,240
And so it would be nice for us to have it on our machines, on our laptops and everything

60
00:03:47,240 --> 00:03:49,200
as a kind of byproduct of this.

61
00:03:49,200 --> 00:03:55,000
But I think really that's where this is focused and where we're going to see it first with

62
00:03:55,000 --> 00:03:59,200
the Xeons and stuff rather than the i3s and i5s and i7s.

63
00:03:59,200 --> 00:04:02,260
Yeah, I could definitely see this taking off in the data center first.

64
00:04:02,260 --> 00:04:03,260
That makes a lot of sense.

65
00:04:03,260 --> 00:04:07,920
And kind of going along with those large data center workloads, Intel also just released

66
00:04:07,920 --> 00:04:13,660
the Deep Learning Reference Stack, which they say is a highly tuned stack of Linux that's

67
00:04:13,660 --> 00:04:16,880
built for the cloud and the cloud-native environments.

68
00:04:16,880 --> 00:04:20,240
And you've probably guessed, it's built around clear Linux OS.

69
00:04:20,240 --> 00:04:25,480
Yeah, something we've been hearing an increasing amount about, and I think it's going to be

70
00:04:25,480 --> 00:04:27,400
the hot distro for next year.

71
00:04:27,400 --> 00:04:29,320
Bit of a spoiler for our predictions there.

72
00:04:29,320 --> 00:04:31,380
No, that's not actually one of my official predictions.

73
00:04:31,380 --> 00:04:32,820
Maybe it should have been.

74
00:04:32,820 --> 00:04:36,760
But yeah, this is kind of a little bit buzzword bingo, isn't it?

75
00:04:36,760 --> 00:04:43,040
But fundamentally, what Intel have done here is put together a stack, as they're calling

76
00:04:43,040 --> 00:04:49,720
it, of the various components needed to do this deep learning computing, which is essential

77
00:04:49,720 --> 00:04:52,480
to the kind of next phase.

78
00:04:52,480 --> 00:04:58,640
I suppose we're already into this phase, aren't we, of computing, that it's all about AI,

79
00:04:58,640 --> 00:05:05,440
and you need to do the learning to feed that AI in order to do all of the different applications

80
00:05:05,440 --> 00:05:06,440
that we need.

81
00:05:06,440 --> 00:05:08,680
Self-driving cars is the one that everyone goes for.

82
00:05:08,680 --> 00:05:09,680
Well, there's so many, though.

83
00:05:09,680 --> 00:05:11,240
I mean, there's so many things.

84
00:05:11,240 --> 00:05:12,240
It's not just self-driving cars.

85
00:05:12,240 --> 00:05:13,240
Yeah.

86
00:05:13,240 --> 00:05:18,640
I was really surprised by this, because this is so abstract to me.

87
00:05:18,640 --> 00:05:23,440
I don't do anything with machine learning or artificial intelligence, so to me, it doesn't

88
00:05:23,440 --> 00:05:27,160
seem like it's a real thing that's driving a lot of interest.

89
00:05:27,160 --> 00:05:30,320
But I was just at System76's factory.

90
00:05:30,320 --> 00:05:35,640
In fact, I just got back yesterday, and I had several side conversations with them.

91
00:05:35,640 --> 00:05:39,920
And one of the things that's driving them building these massive Thalia workstations

92
00:05:39,920 --> 00:05:44,160
is they are having new customers that want to get into machine learning that are coming

93
00:05:44,160 --> 00:05:48,840
to Linux because it's the best platform to do this, sort of like a lot of 3D printers

94
00:05:48,840 --> 00:05:51,320
have started selling Linux boxes.

95
00:05:51,320 --> 00:05:57,440
And the thing is these customers don't really know how to set this up.

96
00:05:57,440 --> 00:05:59,160
They're not normal Linux users.

97
00:05:59,160 --> 00:06:03,560
They're not familiar with how to install packages or use a Docker image, even.

98
00:06:03,560 --> 00:06:07,280
So the thing that Intel is trying to solve here is that particular problem.

99
00:06:07,280 --> 00:06:12,800
This clear Linux OS-based stack, it comes optimized, of course, for the Intel processors.

100
00:06:12,800 --> 00:06:16,920
But it's also set up and ready to work with TensorFlow and other tools that people are

101
00:06:16,920 --> 00:06:20,280
familiar with, even if they're not familiar with working with Linux.

102
00:06:20,280 --> 00:06:22,060
And that's the problem they're trying to solve here.

103
00:06:22,060 --> 00:06:26,920
That's really the same problem System76 is trying to solve with Pop OS and their metapackaging

104
00:06:26,920 --> 00:06:32,720
system where you can install things like TensorFlow or R and get going with machine learning,

105
00:06:32,720 --> 00:06:36,320
which is typically very hard to set up if you're new to Linux.

106
00:06:36,320 --> 00:06:37,640
The market is out there.

107
00:06:37,640 --> 00:06:40,080
It's just, to me, I'm blind to it.

108
00:06:40,080 --> 00:06:43,120
But I know that your buddy and mine, Wes Payne, likes to play around with the machine learning

109
00:06:43,120 --> 00:06:45,840
from time to time, likes to have himself a little machine learning.

110
00:06:45,840 --> 00:06:49,920
And from our chats, it sounds like Linux is really one of the best platforms to be doing

111
00:06:49,920 --> 00:06:50,920
this on.

112
00:06:50,920 --> 00:06:51,920
Yeah.

113
00:06:51,920 --> 00:06:52,920
Well, it's all math-based, isn't it?

114
00:06:52,920 --> 00:06:53,920
So, of course, he's going to be interested.

115
00:06:53,920 --> 00:06:54,920
Yeah.

116
00:06:54,920 --> 00:06:55,920
He is such a math geek.

117
00:06:55,920 --> 00:06:56,920
Yeah.

118
00:06:56,920 --> 00:06:58,760
And I mentioned self-driving cars there.

119
00:06:58,760 --> 00:07:01,260
Well, Uber have been pushing that forward.

120
00:07:01,260 --> 00:07:07,000
And they have now brought their Horovod project, which is distributed deep learning, to the

121
00:07:07,000 --> 00:07:09,680
Linux Foundation's Deep Learning Foundation.

122
00:07:09,680 --> 00:07:12,360
It's a little bit like Foundation Inception, that, isn't it?

123
00:07:12,360 --> 00:07:13,360
Yeah, it is.

124
00:07:13,360 --> 00:07:14,920
Foundation within Foundation.

125
00:07:14,920 --> 00:07:17,120
That seems to be their thing these days, a foundation for everything.

126
00:07:17,120 --> 00:07:21,600
But the LF Deep Learning Foundation has some serious players at least attached on their

127
00:07:21,600 --> 00:07:22,600
website.

128
00:07:22,600 --> 00:07:28,400
AT&T's on there, Red Hat, ZTE, Nokia, Intel's on there, and a bunch of others.

129
00:07:28,400 --> 00:07:32,800
And it seems like just since this Uber announcement about a month ago, other projects are throwing

130
00:07:32,800 --> 00:07:34,540
in now too.

131
00:07:34,540 --> 00:07:38,880
Some of them which are designed for cloud providers specifically, but a lot of them

132
00:07:38,880 --> 00:07:44,400
circle back to TensorFlow, including some contributions from Amazon and IBM and NVIDIA.

133
00:07:44,400 --> 00:07:47,800
Well, the reason this has got some attention this week is because it was kind of officially

134
00:07:47,800 --> 00:07:54,240
announced at the KubeCon and CloudNativeCon conference right there in Seattle, where you

135
00:07:54,240 --> 00:07:55,880
are.

136
00:07:55,880 --> 00:07:57,920
And you guys actually talked about that, didn't you?

137
00:07:57,920 --> 00:08:02,440
The Kubernetes side of things on TechSnap 392 this past week.

138
00:08:02,440 --> 00:08:03,560
Indeed, we did.

139
00:08:03,560 --> 00:08:06,760
We tried to cover some of the top stories out of there that you need to know about if

140
00:08:06,760 --> 00:08:09,880
you're just trying to stay up to date with Kubernetes.

141
00:08:09,880 --> 00:08:12,140
We didn't really bother explaining what Kubernetes is.

142
00:08:12,140 --> 00:08:14,000
We have an episode dedicated to that.

143
00:08:14,000 --> 00:08:16,760
So instead, we just tried to keep everybody up to date.

144
00:08:16,760 --> 00:08:19,980
It's sort of a newsier edition of the TechSnap program.

145
00:08:19,980 --> 00:08:22,080
But this is the way the industry is going now, isn't it?

146
00:08:22,080 --> 00:08:27,760
That we've got such powerful machines available, and the orchestration software is so good

147
00:08:27,760 --> 00:08:36,080
that you can do this distributed deep learning and push things forward to what feels like

148
00:08:36,080 --> 00:08:38,840
a kind of scary future.

149
00:08:38,840 --> 00:08:42,240
But the good part about it is it's all running Linux.

150
00:08:42,240 --> 00:08:43,240
That's true.

151
00:08:43,240 --> 00:08:48,080
I think, and a lot of the stuff at KubeCon this week that we talked about in TechSnap

152
00:08:48,080 --> 00:08:53,880
is also about just using multiple cloud providers, so that way you can distribute your risk.

153
00:08:53,880 --> 00:09:00,400
And also use those same exact tools to just manage your own boxes on premises.

154
00:09:00,400 --> 00:09:04,740
And to be able to go from on premises up to a cloud provider that might be two or three

155
00:09:04,740 --> 00:09:09,640
different cloud providers, but you're using one set of tools to deploy all those servers

156
00:09:09,640 --> 00:09:15,280
and to set up their software, set up their loads, set up the virtual machines, and manage

157
00:09:15,280 --> 00:09:21,360
and maintain them from one console across multiple cloud providers and your own local

158
00:09:21,360 --> 00:09:22,360
boxes.

159
00:09:22,360 --> 00:09:23,360
That's a big deal.

160
00:09:23,360 --> 00:09:28,880
But if you think about it, it's sort of helping avoid vendor lock-in into the cloud by becoming

161
00:09:28,880 --> 00:09:31,080
this common platform.

162
00:09:31,080 --> 00:09:33,920
And that's an interesting story, and that's one of the things we try to touch on.

163
00:09:33,920 --> 00:09:39,720
Well, that's very much the present and future of computing, but the past of it is 32-bit

164
00:09:39,720 --> 00:09:46,680
x86, which we've seen over the last couple of years, distro after distro abandoning.

165
00:09:46,680 --> 00:09:52,880
But there was kind of a bridge within Linux between 64-bit and 32-bit, which it looks

166
00:09:52,880 --> 00:09:55,640
like might well be going away sometime soon.

167
00:09:55,640 --> 00:09:59,480
Yeah, a bit of a shame that this didn't get more traction now that I've done some reading

168
00:09:59,480 --> 00:10:00,480
into this.

169
00:10:00,480 --> 00:10:04,760
I never really bothered because no distro really ships with support for this.

170
00:10:04,760 --> 00:10:10,000
But we're talking here about the x32 sub-architecture, and it did a neat trick.

171
00:10:10,000 --> 00:10:16,080
It was a software variant of x86-64, so it would run the processor in 64-bit mode, so

172
00:10:16,080 --> 00:10:19,920
you get the advantages of your CPU in 64-bit mode.

173
00:10:19,920 --> 00:10:23,880
But it would use 32-bit pointers and 32-bit math.

174
00:10:23,880 --> 00:10:30,940
The idea is to get the advantage of an x86-64 style system without the extra memory usage

175
00:10:30,940 --> 00:10:33,240
that goes along with it.

176
00:10:33,240 --> 00:10:38,120
But it came along about six years ago, and we were just a little too late at that point.

177
00:10:38,120 --> 00:10:42,480
Few distributions supported it, and the number of users that actually use it seems to be

178
00:10:42,480 --> 00:10:44,660
very small.

179
00:10:44,660 --> 00:10:49,520
So one of the kernel developers is now proposing to eventually remove it.

180
00:10:49,520 --> 00:10:54,280
And the way that process works in the Linux kernel is it gets flagged to broken or not

181
00:10:54,280 --> 00:10:55,280
supported.

182
00:10:55,280 --> 00:10:57,280
You've seen this if you've ever built your own kernel and gone through that menu.

183
00:10:57,280 --> 00:10:59,760
You'll see these, in big brackets, broken.

184
00:10:59,760 --> 00:11:00,760
They move it to broken.

185
00:11:00,760 --> 00:11:02,240
The idea is you're supposed to stop using it.

186
00:11:02,240 --> 00:11:06,000
It's no longer officially supported, and then it sort of phases out from there.

187
00:11:06,000 --> 00:11:07,600
Just imagine if this had taken off.

188
00:11:07,600 --> 00:11:11,800
You could run at least an extra Electron app with your 32 gigs of RAM.

189
00:11:11,800 --> 00:11:12,800
Yeah.

190
00:11:12,800 --> 00:11:13,800
Hey, that's good.

191
00:11:13,800 --> 00:11:14,800
You know?

192
00:11:14,800 --> 00:11:16,240
Maybe that'll keep it around.

193
00:11:16,240 --> 00:11:19,560
Or we'll all be running Fuchsia, and it won't matter, Joe.

194
00:11:19,560 --> 00:11:22,800
Yeah, we keep getting these teasers from Google about Fuchsia, don't we?

195
00:11:22,800 --> 00:11:28,560
And this week, it's that the Fuchsia SDK has shown up in the Android open source project.

196
00:11:28,560 --> 00:11:31,480
And there's also this mysterious Fuchsia device.

197
00:11:31,480 --> 00:11:36,880
Yeah, it almost feels like one shoe after another getting dropped here.

198
00:11:36,880 --> 00:11:43,120
In a commit posted this last week to Android's source code management system, two Fuchsia-related

199
00:11:43,120 --> 00:11:48,120
repos popped up in the manifest for the Android open source project.

200
00:11:48,120 --> 00:11:52,720
So if you're not familiar with that, the manifest is used to inform Google's download tools

201
00:11:52,720 --> 00:11:57,120
of what repo should be included with the base AOSP.

202
00:11:57,120 --> 00:11:58,680
So that's what that manifest file describes.

203
00:11:58,680 --> 00:12:02,000
And that manifest file was updated to include these new repos.

204
00:12:02,000 --> 00:12:08,080
So as part of that base AOSP now, you're getting these two different Fuchsia repos.

205
00:12:08,080 --> 00:12:11,680
And when you install the Android emulator, it will pull those things down.

206
00:12:11,680 --> 00:12:16,120
The two repos in question are still a little mysterious because they're essentially empty.

207
00:12:16,120 --> 00:12:17,640
But there is a couple of clues.

208
00:12:17,640 --> 00:12:22,920
One of them is platform Fuchsia SDK, which is pretty clear it's gonna be the SDK for

209
00:12:22,920 --> 00:12:24,000
Fuchsia.

210
00:12:24,000 --> 00:12:27,880
And it appears based on other posting, it's gonna be a huge repo.

211
00:12:27,880 --> 00:12:32,720
The second repo, which is the one Joe was just talking about, is the most interesting.

212
00:12:32,720 --> 00:12:37,200
That is the device Google Fuchsia repo.

213
00:12:37,200 --> 00:12:42,120
And that device is a Google created device that runs Fuchsia.

214
00:12:42,120 --> 00:12:46,440
And it's going to be managed by some sort of Android code base, maybe Android Studio

215
00:12:46,440 --> 00:12:47,960
itself in the emulator or something like that.

216
00:12:47,960 --> 00:12:53,200
In fact, it very likely could be the device that would be in the Android Studio emulator.

217
00:12:53,200 --> 00:12:57,040
That emulator actually has its own repo, its own device class in AOSP.

218
00:12:57,040 --> 00:13:01,200
So that could be what we're seeing here is they're preparing folks the ability to create

219
00:13:01,200 --> 00:13:04,440
applications on Fuchsia using Android Studio.

220
00:13:04,440 --> 00:13:05,920
Yeah, that was my read on it.

221
00:13:05,920 --> 00:13:07,400
It's not an actual device.

222
00:13:07,400 --> 00:13:12,320
It's this kind of virtual device in the emulator, which is a key part of development, isn't

223
00:13:12,320 --> 00:13:13,320
it?

224
00:13:13,320 --> 00:13:14,320
You need to have that in the emulator.

225
00:13:14,320 --> 00:13:18,440
And now it's just going to be part of Android open source projects.

226
00:13:18,440 --> 00:13:25,280
So that is kind of a, it seems like a small step, but it's also a giant leap at the same

227
00:13:25,280 --> 00:13:26,280
time.

228
00:13:26,280 --> 00:13:27,280
I don't know.

229
00:13:27,280 --> 00:13:31,040
It's very much, it's like if you see a construction project of a building, right?

230
00:13:31,040 --> 00:13:36,520
And once the actual building starts to go up, it's relatively quick, but there's a lot

231
00:13:36,520 --> 00:13:38,520
of groundwork goes into it first.

232
00:13:38,520 --> 00:13:43,400
The foundations and all the drainage and everything that's, you know, you're just looking at a

233
00:13:43,400 --> 00:13:45,840
construction site that's just doing nothing seemingly.

234
00:13:45,840 --> 00:13:52,960
And then bang, suddenly the building appears and that's what Google's been doing with Fuchsia.

235
00:13:52,960 --> 00:13:57,480
And this is one of those important steps and it's not a big flashy display, you know, we're

236
00:13:57,480 --> 00:14:02,240
not flashing it on a phone and checking it out and being able to make YouTube videos

237
00:14:02,240 --> 00:14:04,480
about it and all the rest of it.

238
00:14:04,480 --> 00:14:05,480
It's the plumbing, isn't it?

239
00:14:05,480 --> 00:14:07,520
It's the foundational work.

240
00:14:07,520 --> 00:14:08,520
Yeah.

241
00:14:08,520 --> 00:14:09,520
Yeah.

242
00:14:09,520 --> 00:14:14,320
And it also gives us an insight into what their strategy is going to be for developer

243
00:14:14,320 --> 00:14:15,640
adoption.

244
00:14:15,640 --> 00:14:17,360
And I think this is a cunning one.

245
00:14:17,360 --> 00:14:22,920
They're just apparently going to bake it into the existing tools that people already have

246
00:14:22,920 --> 00:14:28,200
for creating Android apps, which is also likely a clue that there's going to be some way to

247
00:14:28,200 --> 00:14:30,520
move Android applications over to Fuchsia.

248
00:14:30,520 --> 00:14:31,520
Well, yeah.

249
00:14:31,520 --> 00:14:34,320
Why force people to change the tools they're using?

250
00:14:34,320 --> 00:14:38,000
And they're almost sort of sneaking it in by the back door, aren't they?

251
00:14:38,000 --> 00:14:41,440
If you're keeping up to date with the tools that you've already been using, then it's

252
00:14:41,440 --> 00:14:43,640
suddenly just going to appear there.

253
00:14:43,640 --> 00:14:44,640
Yeah.

254
00:14:44,640 --> 00:14:47,520
I think our predictions episode is going to be a fun one this year.

255
00:14:47,520 --> 00:14:48,520
I got to say.

256
00:14:48,520 --> 00:14:52,600
I've been keeping a list and checking it twice and they're coming up soon for the holidays.

257
00:14:52,600 --> 00:14:55,080
I'm going to have to do some in Linux Unplugged, too.

258
00:14:55,080 --> 00:14:56,080
I don't know.

259
00:14:56,080 --> 00:14:58,040
I feel like I'm feeling confident about my predictions this year.

260
00:14:58,040 --> 00:15:01,120
Well, I'm going to give you another one and that's that we're not going to see an actual

261
00:15:01,120 --> 00:15:04,440
consumer device shipping with Fuchsia in 2019.

262
00:15:04,440 --> 00:15:05,440
It's too early.

263
00:15:05,440 --> 00:15:09,560
There's too much foundational plumbing work left to do and I don't think that that's going

264
00:15:09,560 --> 00:15:10,560
to happen this year.

265
00:15:10,560 --> 00:15:13,200
But that's an unofficial prediction that I'm not putting on the record.

266
00:15:13,200 --> 00:15:14,200
All right.

267
00:15:14,200 --> 00:15:17,780
If it was on the record, I'd argue, what about beta builds for Pixel devices?

268
00:15:17,780 --> 00:15:22,000
But that's maybe a conversation for a different show because we still have new software to

269
00:15:22,000 --> 00:15:23,000
talk about.

270
00:15:23,000 --> 00:15:28,920
Our cousins over at the FreeBSD project have the brand new FreeBSD 12 they've released

271
00:15:28,920 --> 00:15:31,960
and there's really something in here for just about every BSD user.

272
00:15:31,960 --> 00:15:35,540
This does feel like it's not like a huge flashy release, is it?

273
00:15:35,540 --> 00:15:36,920
This 12.0.

274
00:15:36,920 --> 00:15:42,000
It's much more of a they've improved various small bits.

275
00:15:42,000 --> 00:15:48,000
It kind of almost reminds me of elementary OS where you had that ridiculously long post

276
00:15:48,000 --> 00:15:54,240
for Juno where it was just so many small features that add up to something huge.

277
00:15:54,240 --> 00:15:57,680
And that's kind of how this FreeBSD release feels to me.

278
00:15:57,680 --> 00:16:01,080
It's not like this huge showstopping release, is it?

279
00:16:01,080 --> 00:16:02,080
Yeah, it's kind of like I was saying.

280
00:16:02,080 --> 00:16:03,600
There's something there for every BSD user.

281
00:16:03,600 --> 00:16:07,680
If I was a BSD user, the couple of things that I like are the improvements to Beehive

282
00:16:07,680 --> 00:16:14,320
so you can do NVMe device emulation and they've also now have the ability to run Beehive,

283
00:16:14,320 --> 00:16:17,800
which is their kind of KVM competitor, their virtualization system.

284
00:16:17,800 --> 00:16:20,720
You can run it itself within a jail, which is pretty nice.

285
00:16:20,720 --> 00:16:22,400
That's a cool security feature.

286
00:16:22,400 --> 00:16:26,500
And packet filter is now usable within jails and they have a great packet filter system.

287
00:16:26,500 --> 00:16:30,040
So there's just a ton of stuff in here, but our buddies over at the BSD show, they did

288
00:16:30,040 --> 00:16:34,800
a real good coverage on it over at BSD Now episode 276.

289
00:16:34,800 --> 00:16:40,120
They did a full, as you would expect, a BSD Now style full rundown of the new release.

290
00:16:40,120 --> 00:16:46,260
And come on, let's not forget the most important feature, KDE 5.12.5, which is the LTS but

291
00:16:46,260 --> 00:16:50,000
not quite the latest point release, but you know, it's BSD, we'll forgive them.

292
00:16:50,000 --> 00:16:51,120
Yeah, that's actually not bad.

293
00:16:51,120 --> 00:16:55,600
You could get a nice modern plasma LTS desktop on free BSD.

294
00:16:55,600 --> 00:16:58,640
Nothing wrong with that if Linux doesn't float your boat.

295
00:16:58,640 --> 00:17:01,040
Yeah, it's not for me, I'm afraid.

296
00:17:01,040 --> 00:17:04,920
Yeah, but you know, it probably makes a decent XFCE workstation there, Joe.

297
00:17:04,920 --> 00:17:07,200
Yeah, I might have to check that out actually.

298
00:17:07,200 --> 00:17:08,200
I don't know.

299
00:17:08,200 --> 00:17:12,400
I'm happy enough with the mix, but yeah, I thought we'd better give a shout out to our

300
00:17:12,400 --> 00:17:13,400
BSD cousins.

301
00:17:13,400 --> 00:17:20,640
And go check out BSD Now 276 for their completely in-depth take on the new release.

302
00:17:20,640 --> 00:17:25,060
And check out linuxactionnews.com slash subscribe for all the ways to get new episodes of this

303
00:17:25,060 --> 00:17:26,060
here show.

304
00:17:26,060 --> 00:17:29,440
And go to linuxactionnews.com slash contact for ways to get in touch with us.

305
00:17:29,440 --> 00:17:36,380
And for you Linux Academy students, from December 16th through December 26th, 2018, Linux Academy

306
00:17:36,380 --> 00:17:42,000
is donating $1 to St. Jude Children's Research Hospital for each learning activity that you

307
00:17:42,000 --> 00:17:43,000
complete.

308
00:17:43,000 --> 00:17:48,320
So you can help others while learning at the same time and also earn gems on the platform.

309
00:17:48,320 --> 00:17:54,280
Yeah, great way to avoid your relatives learning some useful stuff and helping out some children.

310
00:17:54,280 --> 00:17:58,520
Right, so we'll be back next Monday with our end of year review.

311
00:17:58,520 --> 00:17:59,520
Looking forward to that.

312
00:17:59,520 --> 00:18:01,360
I am at Chris LAS.

313
00:18:01,360 --> 00:18:03,000
I'm at Joe Ressington.

314
00:18:03,000 --> 00:18:05,880
Thank you for joining us and we will see you next week.

315
00:18:05,880 --> 00:18:21,880
Have a great night, y'all, and have a great night, y'all, and have a great night, y'all.

316
00:18:21,880 --> 00:18:38,280
Bye.

