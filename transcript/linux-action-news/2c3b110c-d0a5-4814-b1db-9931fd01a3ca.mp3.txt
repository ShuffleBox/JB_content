Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 87, recorded on January 5th, 2019.
I'm Chris.
And I'm Joe.
Hello, Joe.
I'm not laughing at our names.
I'm laughing at the fact that it is the year 2019, which seems ridiculous, like it's something
from a sci-fi book.
But you know, we start things off with a story this week that I bet we'll be hearing about
for maybe the entire year.
It's Raspberry Pi joining the RISC-V Foundation.
Yeah, this is very exciting, but we don't have that much information at this point.
All we know is that Raspberry Pi have joined as a silver member.
And really, all we've got to go on is a tweet.
And they say that they're hoping to contribute to maturing the Linux kernel and Debian port
for the world's leading free and open instruction set architecture.
Now why would they want to do that, Joe?
Well, everyone is asking, when are we going to get a RISC-V Raspberry Pi?
And they've hinted that the next Raspberry Pi is going to be different.
But I think that this is not a 2019 situation, is it?
We're talking longer term.
It takes a lot longer than that to actually go through the whole design and manufacturing
process.
So maybe 2020, if we're lucky.
I hope you're wrong, Joe.
I hope you're dead wrong, Joe.
I hope it is a 2019 project.
And if RISC-V has released the specs, they could, in theory, have been working on a board.
I think the reason why I hope it's going to be sooner than later is for competitive reasons.
It's true that Raspberry Pi is a brand, and they have a whole platform, and it's hard
to contend with that.
But as time goes on, the wider community is becoming more and more aware of more competitive,
maybe even more capable Linux development boards.
And if they don't ship something pretty impressive in 2019, I'm a little worried that they may
lose their market leadership.
Well, that's why I don't think they're going to ship RISC-V, because I don't think that
it's got the performance that they need.
They need to ship a board that is more performant than the current Raspberry Pi 3B+.
And I don't think that that's going to happen with RISC-V necessarily.
Certainly not at the $35 price point.
Although they do have that huge buying power now, so maybe they could force that price
down a little bit, but I just can't see it happening.
I think that we're going to get a more powerful ARM-based Pi, possibly with better networking,
possibly with faster USB.
To get us through 2019, and then 2020, they drop this new, totally different system.
Yeah, which would be amazing.
But they've been hinting the next Raspberry Pi is going to be pretty different.
That's true.
They have hinted that, and I hope that I'm wrong.
I hope that they've been working with RISC-V for a long time, and are almost ready to drop
it and come spring, we'll get a RISC-V-based Pi, and it'll be super powerful and at $35.
But I just can't see how all those pieces fit together, but then I'm not on the inside.
Maybe there are ways that they've made that happen.
And if they can, that would be so good for RISC-V.
It would mean that they would just drive forward the adoption so much, because they could potentially
sell hundreds of thousands of these very, very quickly.
And think about the benefits upstream to Debian, and overall the benefits to Linux upstream
for RISC-V support.
The benefits alone to the Linux ecosystem would be huge.
The reason why I really hope it's this next product, and the more you talk about it, the
more I think you're probably right, and the more I think I'm being a little ambitious.
But the reason why I feel like it'd be really great is it's such perfect timing to contribute
those improvements back upstream.
And just to keep the RISC-V momentum going, and Linux support momentum going, if you could
have a large user base, like the Raspberry Pi potential purchasers in the Raspberry Pi
community, that's a pretty big user base.
I would definitely buy one of these RISC-V Raspberry Pis, I mean just think about that
for a moment.
A RISC-V powered Raspberry Pi, that's a great idea.
I would totally buy that product, even if it was $75 I'd buy that product.
And if even a few hundred thousand people thought that, it doesn't have to be millions,
even a few hundred thousand thought that, that could result in significant upstream
improvements to Linux's total support for the RISC-V platform.
I hope that happens in 2019, I think that's important.
Well it would be great, and if that did happen, and they did put out a Pi that was RISC-V
based, it would mean that at first we'd only have their own OS, Braspbian, which is effectively
Debian, but then potentially we'd see ports of other, you know, we'd probably get an Arch
version for it, and various other distros as well.
Oh absolutely, yeah absolutely, of course, I think that's the best part about this.
And it really gets me excited for non-Intel platforms for Linux for 2019.
So maybe things will go in a good direction, but long term, if I'm patient, we're probably
going to get some great results.
Maybe you're right, maybe it won't be 2019, maybe it is 2020, but in the end we'll probably
still get the same benefit.
Well something that gives me hope that they are taking the whole open source thing a little
bit more seriously these days is that they finally managed to get the driver for the
touchscreen, the official Raspberry Pi touchscreen, into the mainline kernel for the upcoming
4.21 release.
Yeah, this is the 7 inch touchscreen monitor, it's like an 800x480 display, and it's a decent
touchscreen really, it's got like 10 finger touch support and all of that, but until 4.21
we haven't had mainline support, and that driver enables support for the touchscreen.
The patch itself is like 200 lines of code, you will have to be running that 4.21 kernel,
but that's pretty close, it'll be here sooner than we think.
Yeah, this is long overdue, but it's good to see it finally happening.
Well while we're talking about alternatives to Intel architectures, MIPS is going open
source.
Yeah, this happened over the holidays, kind of after we'd recorded our holiday specials,
so it's not exactly new news at this point, but it is very good news I think, because
it means that we've got a competitor to RISC-V, which is presumably only going to drive innovation.
Absolutely, and it looks like a company called Wave Computing is pushing this forward, they
write on their blog.
Under the MIPS open program, participants will have full access to most recent versions
of 32-bit and 64-bit MIPS ISAs, free of charge, with no licensing or royalty fees.
Additionally, participants in the MIPS program will be licensed under MIPS's hundreds of
existing worldwide patents, everybody loves that.
The open initiative will help greatly expand the existing MIPS ecosystem, they write, which
is comprised of thousands of developers and hundreds of academic institutions worldwide.
The MIPS architecture I think does have a pretty large install base, Joe, I mean, you
look at a lot of routers that are in everybody's homes and small business routers, a lot of
those are MIPS-based, switches, a lot of those are MIPS-based, but I can't help but feel
maybe they should have done this a few years ago.
This whole thing is really positioned at AI and machine learning about how MIPS has a
play in the future.
In fact, Wave Computing themselves is an AI machine learning company, and they just early
December raised $86 million in a Series E round of investment, which brings the total
investment into the company at more than $200 million in VC funding to back this company,
which claims to be powering the next generation of AI.
That's their pitch.
And they're going to do that with MIPS, good luck with that.
That's what they say, they say they're going to combine their system with MIPS.
They have a very buzz-heavy explanation on their website, they say, by combining the
data flow of Wave Computing's architecture with its MIPS-embedded RISC multi-threaded
CPU cores and IP, which I don't think stands for Internet Protocol in this case, Wave Computing
has been named Frost and Sullivan's 2018 machine learning industry technology innovation leader
and recognized by CEO Application Magazine as one of the top 25 artificial intelligence
providers.
Combined with MIPS, we now have 400 granted and pending patents for hundreds of customers
worldwide.
In other words, they have some sort of proprietary IP machine learning system that will be powered
by RISC multi-threaded CPU cores.
That's pretty much all they say, you got to parse a lot to just get down to that.
But the question is, will anyone else start using MIPS as a result of this?
Because MIPS is legacy at this point, RISC-V is this new shiny thing that's getting all
the attention.
So does it really matter that they're doing this?
Who knows?
They'd have to have some sort of massive market demonstration, wouldn't they?
Something that really proves it out?
Well, we'd like to think about this as open source and freedom and all of that.
But the reality is, the kind of companies who are going to take advantage of this don't
really care about that aspect.
They just care that it's free as in beer.
And if they're going to make a router or whatever, then not have to pay anyone for the license
to use the instruction set, well, that is potentially going to end up with a lot of
lower end routers and stuff like that being made with it, which I suppose is good in a
way, but it's not exactly going to drive a ton of innovation, I don't think.
But this AI stuff potentially could, I don't know.
It sounds like an easy way to get VC funding to me.
Just say AI.
It used to be VR and stuff, now it's AI, machine learning.
And blockchain.
Yeah, blockchain.
Although that's not doing very well, as we know.
I think they have a good chunk of money.
Like you commonly like to say about Mozilla, they have a fair chunk of money to spend on
this and they could drive this forward and they could surprise us yet.
But I think the people this will be probably the most applicable to will be the ones that
have a DeLorean that can go back in time when MIPS was still really relevant and proceed
forward.
They really should have done this five, three maybe at the minimum years ago.
And this feels like a catch up move now, for better or for worse, we'll see.
They may still yet pull this one off and they have some money to burn trying to do it.
But it appears that they're not the only ones with some money to burn.
Yeah, the good old EU are going to put some money into bug bounties for 14 open source
projects.
Yeah, how about that?
The European Commission in January will be funding 14 bug bounty programs in hopes of
sniffing out vulnerabilities in different open source projects.
It starts with a few favorites having varying levels of rewards and end dates and different
platforms FileZilla, Apache, Notepad++, PuTTY, VLC Media Player.
They're all starting this week, January 7.
Now this whole initiative stems back to the free and open software audit project that
first kicked off after the Heartbleed vulnerability was discovered in OpenSSL back in 2014, which
doesn't feel like it was that long ago, really.
It doesn't.
It feels like a couple of years ago, but no, I think we're getting old, man.
I think that might be true.
PuTTY and Drupal, they have the two largest bug bounties, 102,000 and 101,000 respectively.
And the timeframes of the bug bounties also vary.
PuTTY's bug bounty program will remain active until December 15, while Drupal's will go
until October 15 of 2020.
So that's considerably longer.
But I'm not convinced this is money well spent in the least.
In fact, I'm worried this could cause developer burnout.
But because all these bugs will get raised, and then they won't necessarily get fixed.
It'll just be more workload on the devs.
Exactly.
This seems like it could have massive reception.
When you have a government running a bug bounty program, people are going to notice that.
And you're going to have a lot of people going after that.
And let's say they find lots of great juicy bugs.
Okay, yay.
But none of this money goes to pay a single developer to fix those bugs.
You'll just get bug trackers packed full of really critical bugs, with no one working
on them.
And it seems like this money would be much better well spent hiring a few developers
to fix this stuff in these open source projects.
Like sure, do the bug bounty thing, but set a few hundred thousand aside to hire actual
developers too.
Yeah, this is a shame really, it feels a little bit sort of knee jerk and not like they've
thought it through properly, that it's not enough to just find the bugs.
They should really have set up a proper system where you only get paid if you fix the bugs.
Or as you say, maybe two systems, set aside some more money for people who can then actually
fix them and maybe have it be twice as much as it is to find it or whatever.
Because this ultimately, I mean, there will be some benefit from it, but it's ultimately
not going to be as much benefit as we could have.
Yeah, I'm definitely conflicted about this.
I see the value in bug bounty programs.
But in this particular case, it needs to be a more comprehensive program.
I feel like if nothing changes, and this is the only way government figures out how to
spend money on open source, then it's a failure and it's doomed to fizzle out and not produce
anything.
But if they can figure out how to make a comprehensive approach, where maybe some of this money is
going towards development activity to fix these problems, then that starts to secure
government systems, that starts to secure public systems.
That's money well spent from the administrative level.
Then all of a sudden, it's something I would be really impressed by and say we should adopt
here in the US.
Maybe this is early days, and it will develop into something like that.
Maybe they will receive some of this feedback and make changes.
Or maybe not.
We just have to wait and see as so often with these kinds of stories.
But it's a good first start finding these bugs and reporting them at least gives users
information to make decisions.
And it lets developers know what needs to be addressed.
Whether they can address it or not, it's good to at least identify those problems.
So from that perspective, I'm at least glad something like this is going on.
And these are pretty good projects to start with.
Yeah, I mean, the dream is that governments will spend money writing free software in
the first place.
But I think that's a long way off.
This is, as you say, a first step, maybe towards that one day.
Well, for the story that made me the most uncomfortable this week, it appears that Mozilla
spent the holiday season, quote unquote, experimenting with more ads in Firefox.
Yeah, this is one of the snippets on the new tab page, which you can disable but is enabled
by default.
And Mozilla claim that it's not an advert, because it's effectively an affiliate link.
But there's a bit of a blurred line there.
It's kind of splitting as to say it's not an advert.
And it's a bit disappointing, but then again, Mozilla needs to make money.
The huge stash of cash that they've got at the moment isn't going to last forever.
And Google will eventually pull the plug on them.
So they need to do some experiments with bringing in new revenue.
And we saw them do that with the VPN thing before, which was effectively an affiliate
link.
And this time, it's a hotel booking and getting a free Amazon gift card, which it's not too
offensive.
It's not like gambling sites and, you know, porn and stuff like that.
There is a bit of an offensive element to it.
I kind of disagree.
All right.
So just I want to make sure everybody's clear what we're talking about here.
Just recently, about 25% of the United States audience who was using the latest version
of Firefox.
It's a decent chunk of people, but it's not all of the Firefox users in the United States.
What they were seeing is a booking.com snippet that ran for five days and ended on December
30th.
But what is kind of offensive about it is the manipulative tone that was there.
So picture it, you're on your new tab page.
The ad appears at the bottom of Firefox's new tab page on your desktop version with
a little message in a gray box and it says, find a hotel.
And it's got a button on it that you can click that will take you to a booking.com page.
And the button says, are you ready to schedule that next family reunion?
Here's a thank you from Firefox.
Book your next hotel stay on booking.com today and get a free $20 Amazon gift card.
Happy holidays from Firefox.
Some restrictions apply.
And there was also a second version of that message that read, for the holidays, we have
a little something just for using Firefox.
Book your next hotel stay on booking.com today and get a free $20 Amazon gift card.
Happy holidays from Firefox.
Restrictions apply.
And Firefox is positioning this as not an ad.
They say the snippet was an experiment to provide more value to Firefox users through
offers provided by a partner.
It was not a paid placement or an advertisement.
We are continually looking for ways to say thank you for using Firefox.
In a similar vein, earlier this month, we offered Firefox users a free opportunity to
enjoy a live concert from Phosphorescent.
In addition to adding value to Firefox users, these efforts are intended to support an open
ecosystem.
When users see such offers, no data is being shared with partners until users have made
a choice to enter a relationship.
We hope this strategy sets a positive example.
It's a little creepy, Joe.
It's advertising, but they're telling you it's a gift.
They literally say it was not a paid placement or advertisement.
We're continually looking for more ways to say thanks for using Firefox.
It's a free gift.
Well, yeah, it was an affiliate link.
And they should have just owned that fact that, yeah, we are experimenting with affiliate
links now.
They could maybe get an Amazon one going in there.
That works out really well, doesn't it, for everyone?
Yeah, yeah.
What could go wrong there?
I mean, I like the idea.
The dream is like an artisan group at the Mozilla Corporation making intelligent choices
with small batch advertisement deals, organically sourced with no data transferred, protecting
everybody in the whole process, and somehow providing a solid revenue stream for Firefox
and lining Firefox users up exactly with what they want, like hotels and live concerts.
I mean, the idea, Joe, it's just so gosh darn beautiful I want to cry.
And I just love it so much because Firefox, they must continue.
But it sounds like horseshit.
It sounds like complete horseshit.
It never works like that.
It's always about trying to make a buck.
And it feels like the worst timing possible, with WebKit totally dominating the web.
And now Microsoft announcing that they're switching Edge over to Blink, man, it's really
just the worst time ever to be messing around with this kind of stuff.
And I understand they've got to make money, and I appreciate that struggle.
But whew, not the best time to be the browser known for having ads.
Do you think that maybe in a couple of years people will refer to Firefox as, oh, that's
that browser with the Casper mattresses adverts and Squarespace and everything?
It could be.
But they're GIFs.
They're not advertisements.
Yeah.
Well, one way that Mozilla found to cut costs was to more or less get rid of Thunderbird.
And we thought that that was kind of the end for it, and it would kind of fizzle out and
die.
But then Ryan Sipes, who's co-hosted this show with us a long time ago, or with me at
least, he was hired as their community manager.
And he seems to be doing good things over there, because it's looking good for Thunderbird
in 2019.
Yeah, 2019 could shape up to be a year where they see their team grow to 14 members, improvements
in the UI, but also some lower level of re-architecting to make things a little more multi-process.
And improved support for Gmail, including Gmail label support, which as Ryan writes
here in the blog post, reality is Gmail is just one of the largest email providers out
there.
So we need to support them better.
Better UI, re-architecting to support multi-processors a bit better, and improved Gmail support,
that's going to make Thunderbird a little more competitive, if nothing else.
I guess that kind of sounds like faint praise when I say it out loud, I suppose.
Well and potential improvements around email encryption and stuff, which has got to be
good.
Yes, that would be really good.
How much longer do we have to wait until we have a decent implementation in our email
clients for GPG?
Like, it's 2019, let's have this solved, please, before 2020 arrives.
But it feels a bit of an antiquated idea to have a standalone mail client to me.
Surely everyone's using webmail at this point.
Maybe I'm wrong.
Certainly in enterprise, I suppose I might be wrong.
But even then, a lot of companies using G Suite, aren't they?
So it just seems like a kind of legacy product at this point.
Perhaps.
But that's Thunderbird's fault to begin with, really.
It's their fault for sitting around for so long.
And then, frankly, competitively speaking, getting their ass kicked by web apps.
Think about that.
A native desktop mail client got its ass kicked by webmail.
It's not good.
It's not a pretty picture.
Gmail shouldn't be the largest mail client.
It shouldn't be the reality of it.
It should be open source Thunderbird.
An open source free email client?
If you would have told my folks back in the day that were dialing up to check their Juno
email that something free would come along that could do everything Thunderbird could
do, they would have switched immediately.
It was Thunderbird's game to lose.
And they lost it.
And so now, we just have to wait and see if in 2019, if they can make these improvements
and bring it back.
I hope so.
Because I think it's better in a native mail client.
That's something I've just, in the last three months, have switched up to again as I've
gone back to using all native mail clients.
And it's just, I like it so much better.
The performance is better.
Offline mail capabilities, obviously nice.
Having your calendar with you is great.
It's just the way to go.
So I hope Thunderbird is able to turn it around because they should be setting the pace, not
catching up.
Yeah, I was a little bit worried at one point that they were going to go away.
Because I set my dad up with Thunderbird, it must be about five, six, maybe even more
years ago on Windows.
And I've never heard any problems regarding that.
And he's just been using it.
And I'd hate to have to try and migrate him to something else with that many emails on
Thunderbird.
Yep, it's good.
Thunderbird is a good email client.
And that's why it should have a better market presence and much wider adoption than it has.
So I really hope they can fix that because it's a shame.
And I think they just didn't make it competitive enough.
And those of us that liked a traditional mail client, we were happy.
But people who wanted something new or different or whatever Gmail is offering the other ones,
they just didn't offer that.
And maybe that can change a bit.
Maybe the UI can change.
But when it comes to catching up, there's one project that has a whole lot of catching
up to do.
And that is FreeBSD.
The tables have turned, my friends, after years of all of us being told that the only
one and true implementation for the ZFS file system was on FreeBSD.
It turns out that they'll be rebasing their implementation of ZFS on the ZFS for Linux
project.
Well, yeah, because obviously Linux is way better than FreeBSD.
Everyone knows that.
Everybody knows that.
All right.
Well, that's our trolling for the probably for the whole year.
This is actually kind of big news.
In fact, I'm still trying to parse what this is really going to mean like long term.
I've invited somebody who's involved in the ZFS leadership to join us on a future Linux
Unplugged to really break this down and talk about what that's going to mean downstream
for distributions.
So look for that in a future Linux Unplugged.
But right now, here's what we do know.
The past few years, the vast majority of new development in ZFS has taken place in Delphix
OS or in ZFS on Linux.
Delphix OS simply because they're one of the main contributors to ZFS and ZFS on Linux
simply because of the massive install base of Linux.
And earlier this year, Delphix announced that they will be moving their work to the ZFS
on Linux code base.
What FreeBSD and the Lumos and many other downstream projects that ship ZFS were basing
their implementation of ZFS on is that Delphix stuff and that stuff that made into Lumos,
not the ZFS on Linux stuff.
The issue is there's some work that's been done in ZFS on Linux and bug fixes that haven't
made it upstream to the other projects, things like encryption and issues like bugs that
would cause lockups that have been fixed on ZFS for Linux and not upstream.
The ZFS for Linux has been getting better and better over time.
Yeah, it sounds like it's stagnated.
And this is a pragmatic decision that they just had to take.
And I would imagine that they've taken it through gritted teeth, but it had to happen.
And I suppose the BSD people are generally more pragmatic, aren't they?
With the whole permissive licensing and everything.
So it shouldn't be a surprise, but it's still excellent trolling material.
It is.
It really is.
And they have a few things in their favor here.
One thing is that they have consensus at a leadership level that this is the direction
to go.
The other thing that they have in their favor is IX Systems is willing to put personnel
behind quality testing this.
In fact, in the original announcement, they talk about some of the testing that IX will
be doing about moving test suites over from the free BSD version to the Linux version,
merging some of those changes upstream.
And as you and I are recording this episode, there is a new ZFS on BSD project, which is
based on ZFS for Linux.
The way free BSD worked before is they pulled from Illumos down into free BSD, and then
they worked on it in their own little fiefdom.
Now they're going to essentially do the same thing, but with ZFS on Linux as their upstream.
And the neat thing is that IX is sort of helping with some of this with TrueOS.
I talked about it after I went to meet BSD.
It's like a BSD system that IX Systems maintains that is essentially free BSD at the core,
but can be used to quickly build other kinds of free BSD distros and build stuff on top
of it.
And that's what they're using for like their free NAS and true NAS appliances.
That's what Chris Moore and his team are using to build their Trident desktop.
It's sort of like a meta distribution that you can create your own different free BSD
based distros from.
And with that, they are helping test and quality assure this transition.
And it looks like the upstream project ZFS on BSD has already been set up.
The code's very much a work in progress, but the folks at IX Systems have begun spinning
up daily snapshots of their free BSD TrueOS platform with the new ZFS code that's based
on the ZFS for Linux.
So it's happening very fast.
This is a perfect example of why they made those changes to TrueOS in the first place
so that they could be agile.
And immediately after this announcement was made, it's available for testing.
So if you are one of those unfortunate people stuck using free BSD, you can get testing
this straight away.
Yeah, it turns out one of the larger implementations right now of ZFS is actually on RHEL and CentOS.
So yeah, I have so, so many questions after this.
That's why I'm going to just dedicate some time in Linux Unplugged to like really deep
diving into this and what this means for ButterFS and all of that.
This is fascinating for me.
But all of that is for future content.
For now, that'll bring us to the end of this week's Linux Action News.
You can go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And go to linuxactionnews.com slash contact for ways to get in touch with us.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Racington.
Thank you for joining us and we will see you next week.
See you later.
