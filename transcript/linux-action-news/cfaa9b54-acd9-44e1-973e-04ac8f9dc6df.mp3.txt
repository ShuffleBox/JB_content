Hello and welcome to Linux Action News, episode 181, recorded on March 21st, 2021.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
We start this week with Ubuntu Touch.
And while we don't often cover individual releases, OTA-16 is noteworthy for several
reasons.
Get this, Wes.
Nearly four years ago, almost exactly, just a couple of weeks from now, that canonical
dropped Ubuntu Touch and just it was essentially a code drop.
And then that became an independent project.
I can't believe it's been four years already.
But also noteworthy right now is there's some new fresh hardware landing in the hands of
Ubuntu Touch users, including the new Volaphone, which is now actually shipping and can absolutely
run Ubuntu Touch.
Well, with all this excitement, Dalton Durst joined us to discuss the release.
And it sounds like new hardware or not, there's something for everyone.
If you're a longtime user of Ubuntu Touch, this is the release where you say, huh, I
didn't notice a lot, but for some reason this feels better.
So with the news of this new release itself, the new hardware and a lot more, we asked
why is the project calling this their second biggest release yet?
This is the second largest release ever because a fourth, a quarter of all of the packages
that make up Ubuntu Touch changed.
But at the same time, you're going to download this release, you're an Ubuntu Touch user,
you download like 83 megabytes of changes, which for a 350 megabyte install is a kind
of big.
And you say, well, what the heck changed here?
And you would think that'd be a bad thing.
But really that, we'd feel successful if you said that.
Because this is the release where we upgraded from Qt 5.9 to Qt 5.12, which required changing,
it feels like everything.
I bet.
I think if I recall, it also kind of gets you in line for eventually the transition
from 16.04 base to an Ubuntu 20.04 base.
Exactly.
So that's where we're looking right now is we got to get off 16.04.
Of course, elephant in the room is that Ubuntu 16.04 is almost out of mainstream support
next month.
We're going to keep shipping a few images, a few updates using 16.04.
But our focus is on moving all of our software to 20.04 so that we can successfully release
Ubuntu Touch and hopefully no one notices the difference.
That's the funny thing you and I were talking about before we sat down to record is it's
kind of a success if you migrate from 16.04 to 20.04 and the end user can't really tell.
But with iOS or Android, it's a flagship marketing event with an entirely new UI sometimes dropped
in.
It's a much different beast.
Yeah, it's an interesting difference between how you can develop an open source versus
developing for marketing sometimes.
You say that you're an agile shop and you can make changes iteratively, but that just
doesn't happen sometimes.
I think I'd rather get the innovation as the developers complete it rather than waiting
for a keynote up on a stage on some arbitrary date.
But there's a couple of other new things I've noticed that have landed in here.
The Morph browser is the default browser and it received a bunch of great upgrades this
cycle.
It made changes to the way the downloads work.
So now when you download a file, you get a recent downloads page that shows you what's
going on, what's about to finish, what has finished, more in line with other browsers
and certainly, well, not quite with other mobile browsers, but so it's unique to us
there.
Yeah, that's pretty nice.
That is really great.
All right.
So then there was another thing you were talking about and that was getting new applications
into Ubuntu Touch.
That has been made a little bit easier this cycle.
Yeah.
So Clickable has been getting iterative improvements, well, basically it feels like since forever.
Clickable is our all in one, one stop shop tool for developing Ubuntu Touch apps.
So you can create new applications with it, build your applications and even deploy them
to the store all using Clickable.
And in recent updates, we got a new feature called Clickable IDE, which allows you to
run, well, basically random graphical applications such as a full IDE for developing Ubuntu Touch
applications like Qt Creator.
So how do I do that?
Yeah, you can go to clickable-ut.dev to get the information on how to get started using
Clickable.
Super easy to install.
We also got some new devices in recent times.
Wes and I have had our eye on the Pixel 3a and rumor has it you have some hands on experience
with that one.
Yeah, I got a Pixel 3a XL and secret, secret, you can just tell the installer, oh yeah,
don't worry.
This is actually a 3a XL.
We're working on that, but for now you can just install the 3a image on the XL and things
are a little big, but it works.
But it is a fast device even compared to everything else that we have, which is very interesting
and fun to use.
Hi, Alfred.
I know you're listening.
Thanks for making it.
So that's a great one that I think a lot of people have and might be interested in learning
about, but you can also go to devices.ubuntu-touch.io to see if your device is supported because
we've got a lot of them out there right now.
Yeah, the 3a seems like a great one to try on.
I also saw the Volaphone.
Yes, the Volaphone has landed in people's hands.
It is a device that some SKUs have shipped with Ubuntu Touch pre-installed, which like
the PinePhone before, it is just a really exciting experience and a little nerve-wracking.
Oh boy, is the image going to work?
Is everything situated?
It feels so good when people start getting them in their hands and they say, man, this
is great.
Hey, I've got some feedback for you.
It's just, it's a great experience every time.
And then last but not least, tell me a little bit about what happens now.
Work begins on OTA-17, which starts, I would imagine, more work continuing the transition
to 2004?
Yes.
So we're working on bringing things together between, we have a few different branches
kind of of Ubuntu Touch development right now.
The standard Android 9 and mainline for different types of devices.
So trying to bring all of those back together so that they all go on to Ubuntu 2004 in one
big group and we don't need to deal with all this different branching stuff.
But we've also got people working to improve our infrastructure and how we do releases
so that we can make 2004 as smooth as possible.
Thanks to Dalton for getting us up to date.
That URL to check if your device is compatible is devices.ubuntu-touch.io.
There's more details in their recent Ubuntu Touch Q&A as well.
Of course, we'll have that linked in the show notes.
Linux.ting.com.
This is how I do mobile and it's never been a better time to try out Ting.
And if you're a budget minded individual, check out Ting's set five plan.
For just $25 a month, you get unlimited talk and text.
You get five gigabytes of LTE or 5G data or all the data can be used as a hotspot.
You get nationwide LTE coverage and 5G where it's available for no contract at $25.
Really to make that work, all you have to do is sync your music and your podcast before
you hit the road and you can pretty much make that work and have wireless for $25 a month.
But if you need two gigs or you need a lot more than that, there's a perfect Ting plan
for you.
Every plan gets access to Ting's award winning customer service, the best in the business
and their nationwide access to networks.
I personally have been relying more on the Verizon network as time goes on, but I've
been a Ting customer forever, so I can tell you there is real benefit in multi network
coverage with just one company to interface and manage it all.
But just go to linux.ting.com to check your current phone because with all those different
networks, your phone is likely going to work.
And if you go to linux.ting.com, you get $25 in credit and it's simple.
The process is easy.
They have a really easy quick UI to check your phone and when everything checks out,
they just send you a SIM card, you pop that in your existing phone and you're cutting
your phone bill in half or more, right?
It's never been easier either with Ting's new plans.
They have some great prices now.
It's the next generation of Ting mobile.
It's here right now.
Go see how much you could save and get $25 off at linux.ting.com.
It's never been a better time to try Ting mobile.
Bring your phone, get $25 off and support the show.
Choose smarter, choose Ting mobile, linux.ting.com.
GNOME 40 is right around the corner with the release candidate shipping last week and the
official GNOME 40 debut on track for this week.
And as you might expect with a major release, there's going to be a few bumps.
To try to smooth things out though, Sri Ramakrishna has authored a blog post preparing extension
developers for porting their code to GNOME 40.
Extension developers, there's a bit of PSA also in here for regular GNOME end users.
We'll get to all of that.
There's just been significant changes in GNOME Shell and specifically in the way that the
overview function works.
And so the team wanted people to understand there are some changes that are likely going
to, well, there are some changes mandatory to make extensions work in GNOME 40.
To help with those updates, community member JustPerfection has created a porting guide
that you can use to learn how to modify your extension to work with the GNOME 40 Shell
release.
Because of the amount of changes and the fact that some distros for now are just going to
stick with GNOME 3.38, the GNOME project has decided to enforce version checking again
with extensions.
This is something that they used to do.
It's been off for a while and GNOME 40 Shell will check to make sure that the extension
has implicitly said it is compatible with 40, which means the developers will have to
go in and update their extension to say, yes, I'm compatible even if no other changes are
required.
The end result means that as an end user right now or soon after GNOME 40 is released, when
you go to the GNOME extensions website, there's not a lot listed there, although just about
one or two get added every single day during the development cycle right now.
But there won't be a lot.
Some of your favorite extensions will not yet be updated because there is this implicit
requirement that they at least go in and say it's compatible with 40, if not fix something
to make it work with 40.
So you're going to see limited extensions around GNOME 40's release.
But it's nice to see the project trying to communicate this and smooth those bumps out
and prepare the way for GNOME 40 extensions and sort of set the expectations for both
developers and for end users, which I think is a step up from the way things used to be
with extensions.
This seems like a nice improvement here.
I hope this is a trend that continues and we see a little more back and forth between
the extension development community and changes coming upstream from GNOME.
I mean, it's always a little unfortunate when there's breaking changes.
But in this world, in the desktop space, we kind of need that if we're going to advance.
And I don't think any of us are really happy with the status quo of extensions.
So maybe there'll be better integration with CI testing systems.
I think there's also some efforts around, you know, GNOME OS and boxes to make testing
these things easier so that there are more paths, people can get out ahead of this release
and hopefully make all of our favorite extensions actually work.
It's positive to see the team actually considering ways to automate extension integration testing
and to give that information back to developers while at the same time.
So that's like a technical thing they're actually trying to solve, right?
Good to see that.
But while at the same time, they're also trying to create a community space for extension
developers to communicate directly with each other and share ideas.
And they've been laying the groundwork for that for about a year now, close to it.
And I think those things combined with this implicit attempt to smooth these transition
bumps out with a transition guide and a blog post that draws attention to it is a much
more aggressive strategy at making the extension experience better on GNOME Shell.
Without fundamentally re-architecting the way GNOME Shell does extensions, they're trying
to get a lot of the benefits of areas you can improve without having to address that
core problem.
And I actually think it's a pretty clever strategy.
Yeah, well, I don't know that that, unfortunately, the underpinnings will be able to change anytime
soon.
And I think there's always going to be a certain amount of decoupling that extensions have,
right?
They are third party, they're independently developed, they're developed on their own
timelines and tracks.
But if you can make that tooling so that if you do have time, if it is maintained, if
you make it easy from the get go and acknowledge, yeah, we're breaking your stuff, but here's
how to keep up to date.
You know, I've seen it argued a lot that GNOME Shell should have a stable API that extensions
can use.
You know, Plasma has something similar to that.
But the counter argument that I've seen to that is, yeah, okay, maybe there's a place
for some of that.
But oftentimes, extensions are being developed more on the edges, on the new features of
GNOME that haven't really stabilized yet, that wouldn't have an API yet anyways.
That's often where extension developers are kind of pushing the edge and kind of monkeying
with stuff that you wouldn't typically consider stable yet.
And I think that was an interesting argument for there is a place to let extension developers
innovate where a very static, stable API would be beneficial, but perhaps somewhat limiting.
So it's not that it's not without merit, it's just that there is also benefits to the way
it works now.
And when you're making a stable API, you want it to work, right?
Because you're going to hopefully not break that again, it will be set in stone.
So I do hope that GNOME can get there or get to a similar place, but got to figure it out
first.
One of the other things the community is getting figured out right now is how the heck we're
going to use legacy X11 only applications in our bright Wayland only future.
And it seems there's an important update in that regard.
This week marked the inaugural release of X Wayland 21.1.
X Wayland, of course, is an X server that runs inside Wayland and provides backwards
compatibility for those legacy X apps that just never got updates to use Wayland.
Yeah, there could be some classics that never will see any updates.
And we're going to want to keep those around.
But there's like a big elephant in the room here.
Xorg itself really isn't getting much love and no one's really stepping up for the next
version to get released.
And it's now long overdue for an update.
So Red Hat engineers have devised a plan for standalone X Wayland releases that are separated
from the rest of the Xorg server code base to at least get the updated X11 client on
Wayland support out to end users.
This fix or I guess you could say solution is something that Fedora may actually ship
soon in version 34 and one that Ubuntu even has an eye on for future integration with
their distro.
This really seems like a sign of the times for X11 and perhaps its next and last chapter.
I don't know, but with no plans for another release and most of the work that is being
done happening on X Wayland anyway, at least a big chunk before long, I think we might
start thinking of this as the X Wayland project rather than Xorg.
Leno.com slash land.
Go there to get a $100 60 day credit towards a new account and of course support the show.
Yeah, $100.
You can really try out Leno.
They make cloud computing simple, affordable and accessible.
They are the largest independent cloud computing provider and they make it easy to get your
idea online fast.
No matter what skill level you are at or what technology stack you use, Leno can help your
ideas come to life on the web.
If you need a personal web server, a blog or a portfolio, maybe a game server or VPN,
Leno has you covered.
And if you need the scale for a business application or something that goes viral, they can handle
that as well.
They have systems that reliably serve millions of visitors all the time.
But unlike entry level hosting services that lock you into their platform, Leno gives you
full back end access to customize, control the server to fit your needs.
Leno has a lot of rigs to choose from and did you know that some of those rigs have
dedicated AMD epic processors?
Cloud Spectator did a recent survey of the different providers, AWS, Azure, Google Cloud,
Alibaba, Digital Ocean and of course Leno.
They looked at all of them and guess what?
The paper they released shows it.
Leno is fast.
Leno is super fast for database use, their super fast CPUs that are a notch above everybody
else's, their AMD systems really scream and additionally, which is just as important,
not only are they high performance, but Cloud Spectator's study shows they are consistently
high performers as well.
I think that matters a lot.
Leno has a lot to choose from, from $5 rigs to custom super machines, so that $100 credit
will get you far and let you really try it out.
Go see why they are our cloud provider.
Everything we've built for JB 3.0 is hosted on Leno.
Go see why, Leno.com slash LAN.
For years now, we've been watching and waiting as Google has gradually developed their Fuchsia
operating system from the ground up.
Now evidence has appeared pointing to Google's Fuchsia OS getting its first and second proper
release.
Despite not running on Linux, Google has also recently unveiled the proposal for how Fuchsia
could still run apps written for Linux platforms, including Android applications, while still
maintaining security and safety.
We talked about that recently, but now what we're seeing is it looks like there's going
to be another way besides just having to go get all the source code and build it for yourself,
but actual real releases.
The only release that Fuchsia has had so far have been ones that have been released internally
to Google staff, but now it looks like those of us in the public could get our hands on
it.
At the end of January, a new branch was created in the Fuchsia project entitled releases slash
F1.
Over the past few months, a few dozen code changes have been selectively added to this
F1 branch, all of them coming from the main branch.
This is the same process that's happened before all the other previous Fuchsia internal releases.
So it seems like something's up.
Yeah, you're going to have F1 and then you'll have an F2 branch and then an F3 branch.
And these are the final getting ready to go releases that we're going to see hit the public.
I mean, I'm not particularly looking forward to loading Fuchsia up in the emulator and
giving it a go, but part of me is just kind of, I'm just so looking forward to finally
getting it out there so we can see what it is, see what it's capable of and get an idea
of where it fits in the ecosystem and just get answers to some of the questions we've
had about Fuchsia for a long time.
I think you're saying you want to know what Linux is up against.
That's exactly what I want to know.
Well here's what you can probably expect.
We know Google has a pattern of milestone releases.
They've already released F1 and are working on F2 right now.
There seems to be about six weeks or so between these releases and actually they're already
tagging some things for F3.
Hmm.
I'm no Googler, but I just, I feel like the sooner I know about this, the better.
I'm hoping maybe we'll hear more about Google's intentions with Fuchsia at Google IO 2021.
Maybe.
I mean, that might actually be a long shot.
It may happen.
We'll see, but I know you and you probably just want to know if you can run it on your
Raspberry Pi and you might just be installing it with the Raspberry Pi Imager, which has
just had a new release with some nice additions for power users.
The biggest new feature is the release of a hidden advanced options panel.
Just press control shift X and you can change some things about the OS you're about to flash.
What can you change?
Well first off you can enable SSH right there out of the box, set up the default hostname,
configure Wi-Fi or some more fiddly bits like disabling overscan or setting the setting
the right time zone.
Oh, it's so good to see this because headless is such a common use case for a Raspberry
Pi.
And these are things right out of the gate that you need to set up and you're either
setting up a keyboard and a monitor temporarily to turn this stuff on, or you know how to
change the file on the default image to enable SSH, but either way it's, it's cumbersome.
It's manual and it's just so cool to see it built into the Imager.
Also really happy to see that they have now integrated in MVME drives as a target device.
So that's, that's really handy because you and I have switched to a workflow where we
use those to boot these devices because it's much faster.
It's nice to see them add some features aimed at advanced users for a change.
I don't really use the Pi Imager much myself, but I'd love to see other Imagers like Etcher
get inspired by these features.
Well that sounds nice, but I think what we really need is a cross distro standard because
right now there's a bunch of OSs that have something similar.
You can drop config files or file name the right thing in a certain directory say, but
they all do it a little bit differently and most of them aren't nearly this discoverable
or easy to use.
You're right of course Wes.
Something every distro bought into would, would really work.
You know, sounds like a problem for SystemD to solve.
Well maybe, maybe not, but you know there is a lot that happens every single week and
what we try to do here is capture the things that matter the most and distill it down for
you in a nice digestible package.
Delicious you might say.
So check out linuxactionnews.com slash subscribe for all the ways to get new episodes.
And linuxactionnews.com slash contact for ways to get in touch.
And be sure you catch episode 396 of Linux Unplugged.
We get the inside story of how Linux made it into JPL and eventually onto the surface
of Mars.
As for us here on Earth, we'll be back next Monday with our weekly take on the latest
Linux and open source news.
Thanks for joining us and we will see you next week.
