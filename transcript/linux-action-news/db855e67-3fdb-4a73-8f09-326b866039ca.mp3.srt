1
00:00:00,000 --> 00:00:09,800
Hello, and welcome to Linux Action News, episode 172 recorded on January 17th, 2021.

2
00:00:09,800 --> 00:00:10,800
I'm Chris.

3
00:00:10,800 --> 00:00:11,800
And I'm Wes.

4
00:00:11,800 --> 00:00:12,800
Hello, Wes.

5
00:00:12,800 --> 00:00:13,800
Let's do the news.

6
00:00:13,800 --> 00:00:16,360
And we start with Plasma's bright future.

7
00:00:16,360 --> 00:00:21,880
The currently in development 5.21, due for release sometime in early February, features

8
00:00:21,880 --> 00:00:25,800
some exciting improvements both in the UI and under the hood.

9
00:00:25,800 --> 00:00:30,360
Yeah, we wanted to give you an idea of what will be landing in distributions released

10
00:00:30,360 --> 00:00:31,360
around that time.

11
00:00:31,360 --> 00:00:35,480
And picking up on the UI side, there will be updates to the breeze theme that look really

12
00:00:35,480 --> 00:00:40,280
sharp, but also an overhaul to the kickoff menu, the default launcher menu that brings

13
00:00:40,280 --> 00:00:42,240
a two panel look to it.

14
00:00:42,240 --> 00:00:45,840
We'll have a link in the show notes so you can see the screenshots for that.

15
00:00:45,840 --> 00:00:51,240
And then a feature that I'm really excited to see besides dynamic audio indicators is

16
00:00:51,240 --> 00:00:56,880
an update to K-Runner, which is Plasma's built in application launcher with K-Runner anything

17
00:00:56,880 --> 00:01:02,740
in Plasma from launching an application to rebooting a computer to command anything can

18
00:01:02,740 --> 00:01:03,980
be done in K-Runner.

19
00:01:03,980 --> 00:01:07,680
And one of the things they're adding is the ability to pin applications to your K-Runner

20
00:01:07,680 --> 00:01:14,440
menu, which is just so nice because that's probably the primary way I interact with the

21
00:01:14,440 --> 00:01:16,920
Plasma desktop is through K-Runner.

22
00:01:16,920 --> 00:01:18,680
But there's some nice under the hood stuff, too.

23
00:01:18,680 --> 00:01:19,680
Oh, great.

24
00:01:19,680 --> 00:01:21,280
One more thing to customize.

25
00:01:21,280 --> 00:01:22,280
No, no, I kid.

26
00:01:22,280 --> 00:01:25,120
I also use K-Runner all the time.

27
00:01:25,120 --> 00:01:30,320
Under the hood, though, Plasma 5.21 will officially be the first version that integrates with

28
00:01:30,320 --> 00:01:31,800
system D at startup.

29
00:01:31,800 --> 00:01:33,880
I know it's kind of surprising it took this long.

30
00:01:33,880 --> 00:01:37,200
GNOME's been doing that for a while now on many distributions.

31
00:01:37,200 --> 00:01:40,680
What you might notice as a user is a much faster start time.

32
00:01:40,680 --> 00:01:43,860
And that's pretty nice when it's your main desktop.

33
00:01:43,860 --> 00:01:47,320
Under the hood, some of the stuff was important because it avoids process race conditions

34
00:01:47,320 --> 00:01:51,800
during startup, better session cleanup and some fancy integration with things like C

35
00:01:51,800 --> 00:01:54,120
groups that just wasn't possible before.

36
00:01:54,120 --> 00:01:55,840
Yeah, that's interesting.

37
00:01:55,840 --> 00:01:59,760
But even if you're not a system D fan, you're going to love the updates that are going into

38
00:01:59,760 --> 00:02:00,760
K-Win.

39
00:02:00,760 --> 00:02:05,040
The compositor now provides an option for you to choose two different modes, smooth

40
00:02:05,040 --> 00:02:08,920
animation or a lower latency experience.

41
00:02:08,920 --> 00:02:10,200
I can't wait to play with that.

42
00:02:10,200 --> 00:02:15,440
But also the work brings support for mixed refresh rate display setups on Wayland.

43
00:02:15,440 --> 00:02:21,760
In fact, a significant chunk of work around Wayland is going into this K-Win update, which

44
00:02:21,760 --> 00:02:24,000
is going to have ramifications upstream.

45
00:02:24,000 --> 00:02:27,920
It really does seem like there's a lot of great work going on in K-Win right now.

46
00:02:27,920 --> 00:02:30,600
And isn't that just a classically plasma option?

47
00:02:30,600 --> 00:02:34,960
And they even say it in the GitLab where they write that we have to choose between latency

48
00:02:34,960 --> 00:02:36,800
and stable animations.

49
00:02:36,800 --> 00:02:41,320
And given that we cannot make such decisions for the user, a new option has been introduced

50
00:02:41,320 --> 00:02:43,520
to set the desired latency level.

51
00:02:43,520 --> 00:02:48,360
By default, you get medium, but then you can choose to get more stable and smooth animations.

52
00:02:48,360 --> 00:02:51,000
Or if you just want speed, set it to reduce latency.

53
00:02:51,000 --> 00:02:52,360
Wow, you're right.

54
00:02:52,360 --> 00:02:55,400
This is quintessential plasma versus gnome difference.

55
00:02:55,400 --> 00:02:58,880
The gnome shell desktop would just be like, yeah, we're doing low latency.

56
00:02:58,880 --> 00:03:00,880
Or nope, we're doing super smooth animations.

57
00:03:00,880 --> 00:03:02,160
It's not user configurable.

58
00:03:02,160 --> 00:03:03,480
It's just baked in.

59
00:03:03,480 --> 00:03:06,400
And they could argue for consistency.

60
00:03:06,400 --> 00:03:07,400
It's nice to see it.

61
00:03:07,400 --> 00:03:11,560
There seems to be a acceleration of Wayland development too for K-Win.

62
00:03:11,560 --> 00:03:16,000
We had Nate Graham on Linux Unplugged 385 recently.

63
00:03:16,000 --> 00:03:21,200
And he does the This Week in KDE blog post where he kind of chronicles all of the just

64
00:03:21,200 --> 00:03:24,240
super great stuff going on in the plasma desktop right now.

65
00:03:24,240 --> 00:03:30,680
And one of the things he noted was the project as a whole really wanted to do a lot with

66
00:03:30,680 --> 00:03:32,520
Wayland in 2020.

67
00:03:32,520 --> 00:03:38,080
But it was when Fedora 34 announced that the plasma spin would become official and that

68
00:03:38,080 --> 00:03:42,800
the plasma spin would be switching to Wayland by default, it really kind of rallied the

69
00:03:42,800 --> 00:03:45,880
developers to really start cranking on that.

70
00:03:45,880 --> 00:03:52,320
And it's a good example of how a distribution plays a role in this ecosystem, a distribution

71
00:03:52,320 --> 00:03:57,200
like Fedora in this case, which is known for shipping kind of cutting edge open source

72
00:03:57,200 --> 00:03:59,320
free software to their users.

73
00:03:59,320 --> 00:04:04,060
Well that reputation means that when that news hit the developers, they knew they needed

74
00:04:04,060 --> 00:04:05,060
to get started.

75
00:04:05,060 --> 00:04:06,300
They needed to get that code upstream.

76
00:04:06,300 --> 00:04:07,640
They needed to get it in K-Win.

77
00:04:07,640 --> 00:04:10,840
And it kind of gave them a real goal to rally around.

78
00:04:10,840 --> 00:04:14,520
And it's a nice insight into how the ecosystem works, I think.

79
00:04:14,520 --> 00:04:18,920
And it's also great for us end users and awesome to see the K-Win support there.

80
00:04:18,920 --> 00:04:22,600
Even right now in 5.20, it's pretty good.

81
00:04:22,600 --> 00:04:27,360
It's daily drivable if you're on an Intel video card with a single screen, you're not

82
00:04:27,360 --> 00:04:28,520
really going to have a bad time.

83
00:04:28,520 --> 00:04:31,160
It's going to work pretty well for you with a few small things.

84
00:04:31,160 --> 00:04:33,600
So they're not too far.

85
00:04:33,600 --> 00:04:36,000
It does start to fall down when you go multi monitor right now.

86
00:04:36,000 --> 00:04:39,880
And it looks like that's where some of this work has gone in specifically to solve that.

87
00:04:39,880 --> 00:04:43,520
And of course, I'm going to be playing around with that lower latency.

88
00:04:43,520 --> 00:04:47,080
I'm going to have to set it to like lowest latency possible and see if I notice a difference.

89
00:04:47,080 --> 00:04:49,200
You want a fast but broken desktop.

90
00:04:49,200 --> 00:04:50,200
Got it.

91
00:04:50,200 --> 00:04:51,200
Oh, it cuts deep, Wes.

92
00:04:51,200 --> 00:04:52,200
That cuts deep.

93
00:04:52,200 --> 00:04:57,320
One feature we're not sure is going to make it into 5.21 is much improved fingerprint

94
00:04:57,320 --> 00:05:02,040
support in KDE Plasma, a fingerprint manager capable of registering multiple different

95
00:05:02,040 --> 00:05:05,920
fingerprints and support more widely across the desktop.

96
00:05:05,920 --> 00:05:09,160
And that last part is maybe what the hang up is.

97
00:05:09,160 --> 00:05:13,260
There's a nice MR over on their GitLab right now by Devin Lin, who's put together a lot

98
00:05:13,260 --> 00:05:17,560
of this, a really new shiny UI, which I'm excited to see in production.

99
00:05:17,560 --> 00:05:21,200
But there are some concerns from some of the developers, Nate Graham included, that Intel

100
00:05:21,200 --> 00:05:24,200
support is really wide across the whole Plasma desktop.

101
00:05:24,200 --> 00:05:27,600
You might encounter some password forms or similar where it's just not supported and

102
00:05:27,600 --> 00:05:30,080
it is in one and not in another.

103
00:05:30,080 --> 00:05:31,720
They're probably going to blame the team for that.

104
00:05:31,720 --> 00:05:36,520
It's going to be funny because if they solve for that, they will essentially have a superior

105
00:05:36,520 --> 00:05:42,040
implementation than Apple does with Touch ID on Mac OS because I've been on a Mac with

106
00:05:42,040 --> 00:05:47,160
Touch ID and there's dialog boxes that still require your password to say, install software

107
00:05:47,160 --> 00:05:49,920
or do an update that do not support the fingerprint reader.

108
00:05:49,920 --> 00:05:52,480
Could you imagine if Plasma beats Apple to that?

109
00:05:52,480 --> 00:05:53,480
Here's hoping.

110
00:05:53,480 --> 00:05:58,920
Well, recently is a holiday treat to us all, XFCE 4.16 was released.

111
00:05:58,920 --> 00:06:02,680
That release marked one year and four months of work for the team.

112
00:06:02,680 --> 00:06:05,400
As you can imagine, they're pretty excited about getting this one out.

113
00:06:05,400 --> 00:06:08,480
They had some big changes in the back end development too.

114
00:06:08,480 --> 00:06:12,080
They migrated over to GitLab during this release.

115
00:06:12,080 --> 00:06:16,000
And they also made some updates to their visual identity.

116
00:06:16,000 --> 00:06:20,920
They really kind of went after the way all of the icons looked and made a more consistent,

117
00:06:20,920 --> 00:06:23,480
maybe more of a long term look to them.

118
00:06:23,480 --> 00:06:24,480
And they're nice and sharp.

119
00:06:24,480 --> 00:06:28,080
But there's also some pretty decent under the hood improvements as well.

120
00:06:28,080 --> 00:06:31,280
Oh yeah, this feels like a well polished release.

121
00:06:31,280 --> 00:06:32,520
Here's an example.

122
00:06:32,520 --> 00:06:37,200
Support for fractional scaling was added to the display dialog and along with that comes

123
00:06:37,200 --> 00:06:41,580
highlighting the preferred mode of a display with an asterisk and adding aspect ratios

124
00:06:41,580 --> 00:06:42,580
next to resolutions.

125
00:06:42,580 --> 00:06:44,600
And I just like that attention to detail.

126
00:06:44,600 --> 00:06:47,100
Makes it feel like a well thought out feature.

127
00:06:47,100 --> 00:06:51,560
Also nice to see falling back to a working mode after a misconfiguration of the display

128
00:06:51,560 --> 00:06:54,420
layout has also been made more robust.

129
00:06:54,420 --> 00:06:57,920
And that's great because I really don't want to lose my whole desktop or have to unplug

130
00:06:57,920 --> 00:07:01,000
and replug some cables.

131
00:07:01,000 --> 00:07:07,320
Also included in 4.16, the file manager Thunar, which is one of my favorites, received a boatload

132
00:07:07,320 --> 00:07:12,720
of fixes and quite a few notable features, including pause for copy move operations.

133
00:07:12,720 --> 00:07:13,900
Fancy.

134
00:07:13,900 --> 00:07:18,200
Support for queued file transfer, remembering view settings per directory and support for

135
00:07:18,200 --> 00:07:20,280
transparency in GTK themes.

136
00:07:20,280 --> 00:07:21,280
Nice.

137
00:07:21,280 --> 00:07:25,200
Have you ever had a server that needed a desktop for some strange reason?

138
00:07:25,200 --> 00:07:27,240
Yeah, I have.

139
00:07:27,240 --> 00:07:32,840
XFCE is my go to in those kinds of situations where I want something that's fully functional,

140
00:07:32,840 --> 00:07:38,180
that feels like a really usable environment, but also is extremely conscientious about

141
00:07:38,180 --> 00:07:42,720
the disk space, about the resources, about really all of it, even make, you know, using

142
00:07:42,720 --> 00:07:44,640
it in a remote session.

143
00:07:44,640 --> 00:07:47,680
So I'm just pretty thrilled to see the team have another release.

144
00:07:47,680 --> 00:07:50,600
Took them a year and a bit to get it out, and it's great to see it here.

145
00:07:50,600 --> 00:07:51,880
Congratulations to them.

146
00:07:51,880 --> 00:07:56,920
Next up in the show, we've got a PSA for older Intel GPU users out there.

147
00:07:56,920 --> 00:07:57,920
Yeah.

148
00:07:57,920 --> 00:07:59,280
Anyone that had the Haswell GT1 graphics?

149
00:07:59,280 --> 00:08:04,360
Well, if you've been running a recent kernel, good chance you noticed that your GPU has

150
00:08:04,360 --> 00:08:07,280
been broken for about a half a year under Linux.

151
00:08:07,280 --> 00:08:09,920
It's kind of a hot mess of a situation.

152
00:08:09,920 --> 00:08:14,840
Yeah, well, Intel is generally well regarded for their Linux development practices, especially

153
00:08:14,840 --> 00:08:18,720
around things like integrated graphics and continuous integration and testing to make

154
00:08:18,720 --> 00:08:22,240
sure that stuff actually works by the time they've shipped it upstream.

155
00:08:22,240 --> 00:08:27,080
Unfortunately, while they were trying to mitigate a GPU vulnerability, kind of similar to the

156
00:08:27,080 --> 00:08:32,200
Spectre vulnerabilities, we've seen another attack where there's some leaks from GPU access

157
00:08:32,200 --> 00:08:37,840
that you need to go in, purge GPU state, and just introduces more performance penalties.

158
00:08:37,840 --> 00:08:43,180
And this time around, it also introduced your GPU hanging when you tried to boot.

159
00:08:43,180 --> 00:08:44,180
That's not good.

160
00:08:44,180 --> 00:08:47,000
That's kind of the last thing you expect.

161
00:08:47,000 --> 00:08:50,560
And the situation remained pretty bleak for about half a year.

162
00:08:50,560 --> 00:08:57,200
But there's a patch now that has a working driver and allows you to mitigate the security

163
00:08:57,200 --> 00:08:58,200
protections.

164
00:08:58,200 --> 00:09:03,600
You can pass a little bit of mitigations equal off type command at boot and it will disable

165
00:09:03,600 --> 00:09:11,480
the mitigations at runtime and should restore the former glory of your Haswell GT1 iGPU.

166
00:09:11,480 --> 00:09:14,720
Yeah, that's another area where it's very similar to Spectre.

167
00:09:14,720 --> 00:09:16,280
It is a different command line flag though.

168
00:09:16,280 --> 00:09:19,920
So if you have this particular chip and you're trying to mitigate this and Spectre vulnerability

169
00:09:19,920 --> 00:09:23,620
as well, that's two more things on your kernel command line.

170
00:09:23,620 --> 00:09:27,600
But if all goes well, these patches should be mainlined for Linux 5.12.

171
00:09:27,600 --> 00:09:32,560
And actually, ideally, the fix for this not booting your GPU bug will actually get picked

172
00:09:32,560 --> 00:09:35,440
up for 5.11 still, fingers crossed.

173
00:09:35,440 --> 00:09:38,920
And it seems like it's going to be backported to stable series of Linux all the way back

174
00:09:38,920 --> 00:09:42,840
to 5.7.

175
00:09:42,840 --> 00:09:44,820
Linode.com slash LAN.

176
00:09:44,820 --> 00:09:51,060
You go there to get a $100 60-day credit towards a new account and you support our podcast.

177
00:09:51,060 --> 00:09:53,200
Linode is our cloud server provider.

178
00:09:53,200 --> 00:09:55,980
We've got a whole fleet of Linodes now.

179
00:09:55,980 --> 00:10:00,240
We really just kind of have gone all in because they're perfect.

180
00:10:00,240 --> 00:10:04,920
Not only do I love all of their features like object storage and node balancers, which help

181
00:10:04,920 --> 00:10:08,200
us manage when something gets released and there's quite a bit of traffic.

182
00:10:08,200 --> 00:10:12,820
And the object storage is brilliant because it's S3 compatible, which means we can work

183
00:10:12,820 --> 00:10:16,620
with all kinds of different applications, but we can even mount it as a file system

184
00:10:16,620 --> 00:10:22,000
and just use the storage that we need so we can have the storage and the server detached.

185
00:10:22,000 --> 00:10:26,240
And that makes it so easy to manage things that are running in containers and applications

186
00:10:26,240 --> 00:10:29,820
that we want to spin up and not have to worry about allocating a ton of disk to the Linode

187
00:10:29,820 --> 00:10:30,920
that they're on.

188
00:10:30,920 --> 00:10:33,880
And it also means we can generate public URLs for those files.

189
00:10:33,880 --> 00:10:37,040
I just absolutely love Linode's object storage.

190
00:10:37,040 --> 00:10:41,080
But maybe you just need something simple, like a personal website where they got machines

191
00:10:41,080 --> 00:10:43,320
that start at $5 a month.

192
00:10:43,320 --> 00:10:47,760
But I don't know, maybe play around when you get a $100 credit.

193
00:10:47,760 --> 00:10:50,240
I mean, you could really see what Linode is capable of.

194
00:10:50,240 --> 00:10:54,040
They have systems with dedicated GPUs and dedicated CPUs.

195
00:10:54,040 --> 00:10:55,680
They've been in this for a long time.

196
00:10:55,680 --> 00:11:02,440
They started in 2003, pretty much the first company in what is now called cloud computing

197
00:11:02,440 --> 00:11:04,720
because they saw what Linux was capable of.

198
00:11:04,720 --> 00:11:08,920
And then as they've grown, they've supported the community projects like Kubuntu, events

199
00:11:08,920 --> 00:11:13,920
like Linux Fest Northwest, and now your humble Linux action news.

200
00:11:13,920 --> 00:11:16,340
They're independently owned and they've been founded on a love for Linux.

201
00:11:16,340 --> 00:11:17,640
You know I get that.

202
00:11:17,640 --> 00:11:19,960
And I love that it shows through their interface.

203
00:11:19,960 --> 00:11:21,560
I see the touches.

204
00:11:21,560 --> 00:11:25,040
And even if you're brand new to managing a server, they've built something that's easy

205
00:11:25,040 --> 00:11:27,220
enough for anyone to manage.

206
00:11:27,220 --> 00:11:30,960
Get a personal site or get something for your business set up in seconds.

207
00:11:30,960 --> 00:11:33,640
Just start at linode.com slash LAN.

208
00:11:33,640 --> 00:11:38,120
Get that $100, 60 day credit and you support the show.

209
00:11:38,120 --> 00:11:40,240
Thanks to Linode for sponsoring Linux Action News.

210
00:11:40,240 --> 00:11:45,680
And thanks to everyone for going to linode.com slash LAN.

211
00:11:45,680 --> 00:11:50,000
After a year in development, Wine 6.0 is here.

212
00:11:50,000 --> 00:11:53,980
And this release is something of a special one because it's dedicated to the memory of

213
00:11:53,980 --> 00:11:59,400
Ken Thomas' who passed away just before Christmas at the age of 51.

214
00:11:59,400 --> 00:12:04,120
Ken was an incredibly brilliant developer and the mastermind behind the Mac OS support

215
00:12:04,120 --> 00:12:07,300
in Wine, which boy, that is impressive.

216
00:12:07,300 --> 00:12:08,480
Definitely is.

217
00:12:08,480 --> 00:12:12,320
And the team says that they're going to miss his skills, his patience, and his sense of

218
00:12:12,320 --> 00:12:13,320
humor.

219
00:12:13,320 --> 00:12:19,200
There are some significant features in Wine 6.0, which include core modules built as PE

220
00:12:19,200 --> 00:12:20,200
executables.

221
00:12:20,200 --> 00:12:21,200
More on that in a moment.

222
00:12:21,200 --> 00:12:26,920
A new experimental direct 3D render that has Vulkan support, as well as direct show support

223
00:12:26,920 --> 00:12:30,300
and a new text console mode and a lot more.

224
00:12:30,300 --> 00:12:33,680
At this point, I think we might be taking Wine for granted a little bit.

225
00:12:33,680 --> 00:12:39,280
I mean, it took 15 years to get to version 1.0 and really actually get Windows applications

226
00:12:39,280 --> 00:12:43,880
and games really running on Linux and then eventually Mac OS as well.

227
00:12:43,880 --> 00:12:49,760
And these days, there's almost 28,000 different applications, games, basically anything you

228
00:12:49,760 --> 00:12:50,920
can run on Windows.

229
00:12:50,920 --> 00:12:51,920
There's a shot.

230
00:12:51,920 --> 00:12:53,000
It'll work in Wine.

231
00:12:53,000 --> 00:12:54,840
And that's just awesome.

232
00:12:54,840 --> 00:13:01,640
Yeah, some of even our production tools for audio editing, we've used Wine versions on

233
00:13:01,640 --> 00:13:03,280
occasion and they actually work.

234
00:13:03,280 --> 00:13:08,240
I noted in there that one of the things that 6.0 brings is PE executables.

235
00:13:08,240 --> 00:13:15,100
So this really comes into games that are checking for DLLs on the Windows disk for some kind

236
00:13:15,100 --> 00:13:22,040
of shenanigans, copy protection schemes that check for DLLs like kernel 32 and NTDLL.

237
00:13:22,040 --> 00:13:26,560
And they expect them to match a certain way.

238
00:13:26,560 --> 00:13:30,380
And if they don't, that's one of the things that can flag copy protection.

239
00:13:30,380 --> 00:13:36,660
And I guess this built in PE format for some of these things will make this check pass.

240
00:13:36,660 --> 00:13:40,520
And there's three states that it can possibly find out.

241
00:13:40,520 --> 00:13:42,520
It can find out that it's on a fake system.

242
00:13:42,520 --> 00:13:46,040
It can find out it's in the middle of an update and it can find out that somebody has replaced

243
00:13:46,040 --> 00:13:47,040
the files.

244
00:13:47,040 --> 00:13:48,680
And I guess it works better within those contexts.

245
00:13:48,680 --> 00:13:52,200
That was what I was able to grok, which seems like it's going to be great for gamers that

246
00:13:52,200 --> 00:13:55,300
have gotten the ban or something like that because copy protection was triggered.

247
00:13:55,300 --> 00:13:56,440
We've all heard those stories.

248
00:13:56,440 --> 00:13:59,440
Yeah, this is just adding more sadness, I guess.

249
00:13:59,440 --> 00:14:03,660
They've done a lot of interesting work sort of making PE executables work nicely, including

250
00:14:03,660 --> 00:14:08,020
some stuff where if you don't have a Windows API available, you can actually have a Linux

251
00:14:08,020 --> 00:14:10,980
style DLL linked file.

252
00:14:10,980 --> 00:14:15,820
And those two can talk so you can use leverage Unix APIs from your otherwise Windows focused

253
00:14:15,820 --> 00:14:16,820
code.

254
00:14:16,820 --> 00:14:17,820
That's neat.

255
00:14:17,820 --> 00:14:22,040
And I think it just means that from the game or applications perspective, it all just looks

256
00:14:22,040 --> 00:14:23,040
the same.

257
00:14:23,040 --> 00:14:25,440
Like what's actually in memory should be the same as the file and disk because they're

258
00:14:25,440 --> 00:14:28,080
no longer stored in different wrapping formats.

259
00:14:28,080 --> 00:14:29,080
Yeah.

260
00:14:29,080 --> 00:14:33,160
And also, I mean, just beyond that kind of copy protection stuff, which thankfully has

261
00:14:33,160 --> 00:14:36,480
never bit me, there's other improvements in here that are going to mean that your wine

262
00:14:36,480 --> 00:14:39,740
applications just launched from disk faster.

263
00:14:39,740 --> 00:14:42,880
Those of you who like to play some of the Blizzard games like Diablo or some of the

264
00:14:42,880 --> 00:14:46,420
others, there was an issue that prevented some of them from working.

265
00:14:46,420 --> 00:14:47,800
That has now been fixed.

266
00:14:47,800 --> 00:14:50,080
And then I was just trying out Destiny 2.

267
00:14:50,080 --> 00:14:52,800
So it's very exciting to see that has been fixed in here.

268
00:14:52,800 --> 00:14:54,840
There was a launch crash issue.

269
00:14:54,840 --> 00:15:00,080
However, in my testing with Wine 6.0 released this morning, I still was getting the crashes

270
00:15:00,080 --> 00:15:01,720
they said were fixed.

271
00:15:01,720 --> 00:15:04,560
So I may have something else going on.

272
00:15:04,560 --> 00:15:09,840
Speaking of slightly disappointing things, support for the obsolete 32 bit power PC architecture

273
00:15:09,840 --> 00:15:10,840
was removed.

274
00:15:10,840 --> 00:15:12,280
Hey, so long.

275
00:15:12,280 --> 00:15:14,360
But there's some good news in the same vein.

276
00:15:14,360 --> 00:15:19,920
There's now initial support for ARM64 on macOS for the shiny new Apple silicon.

277
00:15:19,920 --> 00:15:21,680
Wow, that just took about a minute.

278
00:15:21,680 --> 00:15:22,880
How about that?

279
00:15:22,880 --> 00:15:28,760
Also, display settings are now being retrieved through XRender 1.4 if it's available.

280
00:15:28,760 --> 00:15:34,320
And it means that wine is going to be smarter about multiple display orientations as well.

281
00:15:34,320 --> 00:15:38,920
So those applications will behave a little bit more like native applications.

282
00:15:38,920 --> 00:15:44,340
After last year's news about the future of the CentOS project, we saw a flurry of activity

283
00:15:44,340 --> 00:15:47,400
and speculation about various potential future rebuilds.

284
00:15:47,400 --> 00:15:53,360
One of the more prominent from Cloud Linux was called Project Linux.

285
00:15:53,360 --> 00:15:56,680
We didn't know much about it then and details are still scarce.

286
00:15:56,680 --> 00:16:01,840
But there have been some updates, including its new name, Alma Linux.

287
00:16:01,840 --> 00:16:03,800
Here's kind of what we do know at this point.

288
00:16:03,800 --> 00:16:09,440
The company Cloud Linux has about 10 years experience building their derivative of CentOS.

289
00:16:09,440 --> 00:16:12,760
They already have been doing this for their customers.

290
00:16:12,760 --> 00:16:18,160
And they claim now that they're going to release a version of that as a binary one to one compatible

291
00:16:18,160 --> 00:16:21,360
fork of RHEL 8 and future releases.

292
00:16:21,360 --> 00:16:28,160
They promise to provide an uninterrupted way to convert existing CentOS servers with absolutely

293
00:16:28,160 --> 00:16:31,240
zero downtime or need to reinstall anything.

294
00:16:31,240 --> 00:16:35,640
The company says that you'll be able to port an entire CentOS server fleet with a single

295
00:16:35,640 --> 00:16:41,040
command, no reinstallation and no reboots required.

296
00:16:41,040 --> 00:16:45,200
The name WESK is the Latin word for soul, by the way.

297
00:16:45,200 --> 00:16:49,440
But you did some digging into this and it seems like the biggest advantage they have

298
00:16:49,440 --> 00:16:54,440
is that they are leveraging that existing infrastructure they had for a product that

299
00:16:54,440 --> 00:16:58,080
they've been making that is really kind of targeted at VPSs.

300
00:16:58,080 --> 00:16:59,080
Is that right?

301
00:16:59,080 --> 00:17:02,760
Well, for folks who run those, you know, the folks running VPS providers, you've got a

302
00:17:02,760 --> 00:17:05,880
whole bunch of web servers running on the same host.

303
00:17:05,880 --> 00:17:10,480
You've got a particular set of problems and that's where Cloud Linux come in, right?

304
00:17:10,480 --> 00:17:13,680
They've got their own customized kernel, they've got some customized software that's targeted

305
00:17:13,680 --> 00:17:17,240
at exactly the space to make sure you can host, for instance, a whole bunch of websites

306
00:17:17,240 --> 00:17:21,960
where one person who's overloaded website or just poorly performing won't affect all

307
00:17:21,960 --> 00:17:22,960
the other guests.

308
00:17:22,960 --> 00:17:24,840
And yeah, that's that's pretty important.

309
00:17:24,840 --> 00:17:28,600
It is interesting, though, because there's no real direct comparison.

310
00:17:28,600 --> 00:17:33,600
I mean, they might leverage some of their work with Alma Linux for Cloud Linux, but

311
00:17:33,600 --> 00:17:37,680
if you're not in that space, that's not going to be the operating system for you.

312
00:17:37,680 --> 00:17:42,640
So this is, in some ways, entirely separate and just a new community effort as a way for

313
00:17:42,640 --> 00:17:44,960
Cloud Linux to give back.

314
00:17:44,960 --> 00:17:46,740
That is pretty great.

315
00:17:46,740 --> 00:17:51,560
But it is interesting that and I think they don't come directly at this, but their CEO

316
00:17:51,560 --> 00:17:57,920
does sort of acknowledge that they don't have a one to one path from what will be Alma Linux

317
00:17:57,920 --> 00:17:59,800
to their commercial product.

318
00:17:59,800 --> 00:18:02,960
It's not like they don't have an upsell upgrade path.

319
00:18:02,960 --> 00:18:05,560
And some people may see that as a really good thing.

320
00:18:05,560 --> 00:18:11,560
I worry a little bit about what it means for making it a sustainable effort for them, because

321
00:18:11,560 --> 00:18:14,560
you could say, oh, well, we already have the build infrastructure, we're already doing

322
00:18:14,560 --> 00:18:17,400
it for our product, so it doesn't take a lot of work.

323
00:18:17,400 --> 00:18:21,400
But I kind of call BS on that because it's sort of like Jupiter Broadcasting saying,

324
00:18:21,400 --> 00:18:26,360
yeah, we've got servers to encode our shows and it would be zero cost for us to just encode

325
00:18:26,360 --> 00:18:28,940
everybody else's podcast in the world that wants them.

326
00:18:28,940 --> 00:18:30,160
There's clearly a cost on that.

327
00:18:30,160 --> 00:18:34,180
There's an infrastructure cost, there's a staff cost, there's a real time commitment.

328
00:18:34,180 --> 00:18:38,080
And they're even promising to support it with over a million dollars per year.

329
00:18:38,080 --> 00:18:40,240
Now, who knows how long that will last.

330
00:18:40,240 --> 00:18:43,480
They also say that, you know, they will help out a lot, especially with their expertise

331
00:18:43,480 --> 00:18:46,260
in doing RHEL rebuilds already.

332
00:18:46,260 --> 00:18:51,180
But ideally, intentionally, it will be owned and governed by the community, at least to

333
00:18:51,180 --> 00:18:52,180
quote them.

334
00:18:52,180 --> 00:18:53,440
Well, that's interesting.

335
00:18:53,440 --> 00:18:58,540
And the governance aspect is something we're not really clear on yet, but they do seem

336
00:18:58,540 --> 00:19:00,700
like they want to have a lot of community involvement there.

337
00:19:00,700 --> 00:19:03,540
Their intentions seem really good at this point.

338
00:19:03,540 --> 00:19:08,800
And this is what's going to make for the differentiation between these different CentOS quote unquote

339
00:19:08,800 --> 00:19:11,760
replacements, if you will, because I still maintain that stream is going to work for

340
00:19:11,760 --> 00:19:13,040
a lot of people.

341
00:19:13,040 --> 00:19:18,960
But you'll have different clones come up and how they are monetized and sustainable and

342
00:19:18,960 --> 00:19:23,880
how they are governed are going to be some of their key differentiators that make them

343
00:19:23,880 --> 00:19:27,080
appealing or unappealing to people for different use cases.

344
00:19:27,080 --> 00:19:28,080
Absolutely.

345
00:19:28,080 --> 00:19:32,760
And actually, in an interview, Igor Slatsky, the CEO and founder, sort of said that, you

346
00:19:32,760 --> 00:19:37,360
know, I think the quote was around, well, nothing can really stop us except if no one

347
00:19:37,360 --> 00:19:40,120
uses our Alma Linux, you know, it's really up to the community.

348
00:19:40,120 --> 00:19:45,080
Will there be communities that form and actually are the soul of these efforts?

349
00:19:45,080 --> 00:19:48,480
And I think it's interesting that there are some different sectors, for instance, you

350
00:19:48,480 --> 00:19:51,520
know, cloud Linux, their expertise is all about the web hosting version of things.

351
00:19:51,520 --> 00:19:55,380
Whereas I think for Rocky Linux and some of the other folks, there's a large contingent

352
00:19:55,380 --> 00:20:00,640
of high performance computing and scientific efforts, people coming from those communities.

353
00:20:00,640 --> 00:20:03,880
Makes me wonder how this all shakes out and if there'll be any little differences between

354
00:20:03,880 --> 00:20:04,880
their approaches.

355
00:20:04,880 --> 00:20:05,880
Yeah.

356
00:20:05,880 --> 00:20:06,880
In the meantime, their website is up.

357
00:20:06,880 --> 00:20:09,080
We'll have that linked in the show notes.

358
00:20:09,080 --> 00:20:11,660
And right now the team is just working their butts off.

359
00:20:11,660 --> 00:20:13,480
They're trying to get this thing up and going.

360
00:20:13,480 --> 00:20:18,360
They, you know, they know there's a window of opportunity here to kind of grab the lead.

361
00:20:18,360 --> 00:20:21,840
And they've got a pretty good backstory to make them seem credible.

362
00:20:21,840 --> 00:20:27,560
And they're targeting for an end of January, early February first beta release.

363
00:20:27,560 --> 00:20:32,920
Also hopefully coming soon will be Podman 3.0 and it's got one feature I know you've

364
00:20:32,920 --> 00:20:33,920
been waiting for.

365
00:20:33,920 --> 00:20:37,560
Oh boy, me and millions of other users.

366
00:20:37,560 --> 00:20:42,120
Now if you're not familiar with Podman, it's a demonless container engine for managing

367
00:20:42,120 --> 00:20:46,040
OCI compliant containers on your Linux box akin to Docker.

368
00:20:46,040 --> 00:20:51,600
But it has been missing a Docker feature that a lot of the self-hosted community really

369
00:20:51,600 --> 00:20:54,160
wants to see before they switch over.

370
00:20:54,160 --> 00:20:58,120
And that's Docker Compose support, the command line utility that orchestrates multiple Docker

371
00:20:58,120 --> 00:21:02,340
containers for local deployments was missing with Podman.

372
00:21:02,340 --> 00:21:06,880
And now with version 3.0, the team has been working hard to get Docker Compose support

373
00:21:06,880 --> 00:21:07,880
into Podman.

374
00:21:07,880 --> 00:21:09,800
That's, I mean, that's huge for me.

375
00:21:09,800 --> 00:21:10,880
Game changer for me.

376
00:21:10,880 --> 00:21:17,060
And I know that you loaded the fresh code, gave the new build to try and saw how good

377
00:21:17,060 --> 00:21:18,240
or bad the support was.

378
00:21:18,240 --> 00:21:19,240
How did it go?

379
00:21:19,240 --> 00:21:21,080
Surprisingly well.

380
00:21:21,080 --> 00:21:25,000
I think the biggest drawback I noticed right out of the way was that there were no logs.

381
00:21:25,000 --> 00:21:28,620
You know, if you do an interactive Docker Compose up, normally you get to see all the

382
00:21:28,620 --> 00:21:31,060
logs for the containers you're running.

383
00:21:31,060 --> 00:21:37,080
Not so with the integration so far along, but you can just do a Podman logs, TACF, and

384
00:21:37,080 --> 00:21:40,160
then the name of the container just like normal and they're still there.

385
00:21:40,160 --> 00:21:43,840
They're just not shown through the interface of Docker Compose just yet.

386
00:21:43,840 --> 00:21:47,740
The other thing is there are a few missing features like renaming a container that's

387
00:21:47,740 --> 00:21:48,880
not yet available.

388
00:21:48,880 --> 00:21:53,120
So if you've done a, if you've started containers and then hit control C and stopped and try

389
00:21:53,120 --> 00:21:57,540
to bring them up again without doing a full Docker Compose down, you'll also run into

390
00:21:57,540 --> 00:21:58,640
some problems there.

391
00:21:58,640 --> 00:22:01,880
But none of those are really deal breakers because most of the time, once you've figured

392
00:22:01,880 --> 00:22:05,080
out what you're doing with Docker Compose, you do it in the background anyway and you

393
00:22:05,080 --> 00:22:08,040
just start all your services up.

394
00:22:08,040 --> 00:22:11,780
You mentioned at the top there that it's a Daemonless solution and that's been a big

395
00:22:11,780 --> 00:22:16,440
deal for Podman because it was really simple and clean and it sort of replaced where you

396
00:22:16,440 --> 00:22:20,400
might have previously done Docker run, you would do Podman run.

397
00:22:20,400 --> 00:22:23,800
And I think it's kind of been sort of a backend solution up to now, you know, it might be

398
00:22:23,800 --> 00:22:28,200
leveraged by things like Kubernetes or OpenShift or other systems that sit on top and want

399
00:22:28,200 --> 00:22:31,640
to run containers, but not re-implement everything themselves.

400
00:22:31,640 --> 00:22:36,280
Well in version 2.0, they added the Podman system service, which included this whole

401
00:22:36,280 --> 00:22:37,720
new REST API.

402
00:22:37,720 --> 00:22:39,300
Actually it's two REST APIs.

403
00:22:39,300 --> 00:22:44,560
There's a native Podman focused one and they added one that implemented basically the Docker

404
00:22:44,560 --> 00:22:45,680
REST API.

405
00:22:45,680 --> 00:22:47,100
And so that's how all of this works.

406
00:22:47,100 --> 00:22:50,440
There's a new service that you start just with systemd and then it's got a socket that

407
00:22:50,440 --> 00:22:53,240
looks just like the Docker socket.

408
00:22:53,240 --> 00:22:57,960
Docker Compose just thinks it's talking to Docker, it's using the same REST API calls.

409
00:22:57,960 --> 00:22:59,880
Podman handles it all under the hood.

410
00:22:59,880 --> 00:23:01,140
That's pretty brilliant.

411
00:23:01,140 --> 00:23:04,680
And the beauty of open source software when you need to implement compatibility like that.

412
00:23:04,680 --> 00:23:12,120
I guess like there's a caveat also that you could add to this is it's not currently implemented.

413
00:23:12,120 --> 00:23:13,340
Swarm support isn't currently implemented.

414
00:23:13,340 --> 00:23:17,080
So if you use swarm functionality with Docker, you're not going to have a good time with

415
00:23:17,080 --> 00:23:18,080
Podman.

416
00:23:18,080 --> 00:23:21,240
Obviously not an area that I'm concerned about in the slightest for me.

417
00:23:21,240 --> 00:23:25,160
I mean I'm really going to use this more like on our server and on my laptop.

418
00:23:25,160 --> 00:23:27,840
That's where this is going to be a big game changer for me.

419
00:23:27,840 --> 00:23:32,000
Not that I have any real issues with Docker, but I will say as somebody who kind of stays

420
00:23:32,000 --> 00:23:36,240
really current with Linux, I have definitely had releases where there has been no Docker

421
00:23:36,240 --> 00:23:40,680
support officially for a bit and I've had to wait around until the distribution was

422
00:23:40,680 --> 00:23:41,680
supported by upstream.

423
00:23:41,680 --> 00:23:45,280
Well yeah, I think there was a lot of disappointment with how long it took for Docker to get support

424
00:23:45,280 --> 00:23:50,160
for cgroups v2 and that just really wasn't an issue with Podman.

425
00:23:50,160 --> 00:23:53,800
I think for now though we'll still see Podman as sort of the, you know, a tool in the tool

426
00:23:53,800 --> 00:23:59,880
built of Linux users in the know, especially as they slowly add more porcelain on top here.

427
00:23:59,880 --> 00:24:04,160
And I think Docker still got the name recognition and the cross-platform support.

428
00:24:04,160 --> 00:24:07,640
So say you're a developer on a Mac laptop, I don't know that Podman is going to have

429
00:24:07,640 --> 00:24:11,880
a great option for you unless you want to run your own Linux VM, whereas Docker takes

430
00:24:11,880 --> 00:24:17,960
care of that plums at all so that you can kind of forget there's even Linux involved.

431
00:24:17,960 --> 00:24:21,080
Datadog.com slash Linux action news.

432
00:24:21,080 --> 00:24:26,760
Datadog is the powerful unified monitoring and analytics platform that gives you comprehensive

433
00:24:26,760 --> 00:24:30,600
visibility into your cloud, a hybrid setup and multi-cloud environments.

434
00:24:30,600 --> 00:24:35,320
Quickly analyze the performance of your Linux servers in real time with a customizable dashboard

435
00:24:35,320 --> 00:24:39,000
and it makes it a breeze to troubleshoot issues.

436
00:24:39,000 --> 00:24:43,280
Maybe your Linux box or an application has problems, zero in in seconds with a unified

437
00:24:43,280 --> 00:24:47,120
view of your metrics, your traces and your logs all in one place.

438
00:24:47,120 --> 00:24:52,000
You got to go to datadog.com slash Linux action news just to see the visuals of what I'm talking

439
00:24:52,000 --> 00:24:53,060
about.

440
00:24:53,060 --> 00:24:58,040
This kind of stuff is really what utilizes the power of having multiple systems and with

441
00:24:58,040 --> 00:25:03,080
the clipboard you can streamline performance outages and investigations by capturing relevant

442
00:25:03,080 --> 00:25:07,760
views of your infrastructure and applications all in a single heads up display right there

443
00:25:07,760 --> 00:25:13,480
on the dashboard and they have turnkey integrations for over 400 technologies.

444
00:25:13,480 --> 00:25:17,400
You could even use Datadog to monitor key Linux metrics right alongside the rest of

445
00:25:17,400 --> 00:25:21,800
your entire stack so you get the complete picture, get full visibility into health and

446
00:25:21,800 --> 00:25:24,500
performance of your entire infrastructure.

447
00:25:24,500 --> 00:25:30,240
So start your Datadog trial today by visiting datadog.com slash Linux action news.

448
00:25:30,240 --> 00:25:35,560
If you're having problems communicating with your team, Datadog gives you the metrics and

449
00:25:35,560 --> 00:25:37,460
the visuals to communicate.

450
00:25:37,460 --> 00:25:40,840
It was started by its founders because the dev team was having a hard time talking to

451
00:25:40,840 --> 00:25:44,800
the sysadmin team and from there they have built a brilliant product.

452
00:25:44,800 --> 00:25:49,720
So start your free trial, create one dashboard and you'll get a free Datadog t-shirt.

453
00:25:49,720 --> 00:25:54,400
That's datadog.com slash Linux action news and a big thank you to Datadog for sponsoring

454
00:25:54,400 --> 00:25:58,820
Linux action news and thanks to everybody who uses our sponsors offers, takes advantages

455
00:25:58,820 --> 00:26:03,960
of those offers and helps out the show and gets the free swag.

456
00:26:03,960 --> 00:26:08,800
Datadog.com slash Linux action news.

457
00:26:08,800 --> 00:26:13,480
Some unfortunate news for Chromium users this week as Google has announced they'll be limiting

458
00:26:13,480 --> 00:26:17,240
access from Chromium to some of their quote unquote private APIs.

459
00:26:17,240 --> 00:26:20,820
Yeah, this is pretty dramatic and drastic really.

460
00:26:20,820 --> 00:26:24,740
If you're like me and you use the Chromium browser package from your distribution and

461
00:26:24,740 --> 00:26:29,200
you rely on regular old Google Chrome syncing, well, you're either going to need to move

462
00:26:29,200 --> 00:26:34,720
to Google Chrome or switch to Firefox or another browser because Google is limiting that access.

463
00:26:34,720 --> 00:26:40,080
Just the straight up Chromium browser or other browsers that are derived on it.

464
00:26:40,080 --> 00:26:46,180
I guess they didn't realize this was something you could do according to their blog and then

465
00:26:46,180 --> 00:26:50,560
when they were conducting an audit realized it was possible and decided for security reasons

466
00:26:50,560 --> 00:26:55,720
they should shut it down, not to get you to move to Google Chrome proper, of course not.

467
00:26:55,720 --> 00:26:56,720
Of course not.

468
00:26:56,720 --> 00:27:01,920
This is kind of an upsetting reminder though that Chromium, I think we think about it a

469
00:27:01,920 --> 00:27:07,580
little differently than maybe Google does and that while it has a great built in Wenderer,

470
00:27:07,580 --> 00:27:12,500
all kinds of nice technology on it, things like missing click to call or Chrome sync,

471
00:27:12,500 --> 00:27:17,020
those are features you think about having in a modern browser and you just sort of think

472
00:27:17,020 --> 00:27:19,840
with Chrome or at least I think we like to tell ourselves with Chrome that all the stuff

473
00:27:19,840 --> 00:27:24,640
we use for the most part, besides like actual Google integration is the open source, is

474
00:27:24,640 --> 00:27:29,720
part of it, having an open source heritage, but not really.

475
00:27:29,720 --> 00:27:34,340
You know it's bad when I'm looking at Edge going, man, Microsoft just add sync support.

476
00:27:34,340 --> 00:27:37,840
That might be my go to blink based browser now.

477
00:27:37,840 --> 00:27:41,820
There is some, I guess, bit of a silver lining.

478
00:27:41,820 --> 00:27:48,080
If you use the sync service and you do switch to Chrome, your data will be there and if

479
00:27:48,080 --> 00:27:51,240
you don't switch to Chrome, but want your data, it'll be available in their takeout

480
00:27:51,240 --> 00:27:54,160
section and they'll continue to leave everything locally.

481
00:27:54,160 --> 00:27:59,320
It's not like they're going to wipe your profile data when they disable this feature, but nobody

482
00:27:59,320 --> 00:28:03,000
ever likes to see this stuff get removed, especially when the explanation is as dodgy

483
00:28:03,000 --> 00:28:05,580
as, oh, we didn't know it was possible.

484
00:28:05,580 --> 00:28:06,580
Give me a break.

485
00:28:06,580 --> 00:28:11,860
Well, speaking of breaks, Hector Martin and his team over at Asahi Linux caught a nice

486
00:28:11,860 --> 00:28:18,720
break this week with the release of macOS Big Sur 11.2 beta 2, which comes with full

487
00:28:18,720 --> 00:28:20,520
custom kernel support.

488
00:28:20,520 --> 00:28:25,520
Yeah, Hector Martin and his team are the group working, one of many groups working on getting

489
00:28:25,520 --> 00:28:29,280
Linux running on the Apple M1 platform.

490
00:28:29,280 --> 00:28:30,700
And this is huge.

491
00:28:30,700 --> 00:28:35,440
This is essentially blessed support from Apple to load your own kernel.

492
00:28:35,440 --> 00:28:39,520
And when Hector and I chatted for Linux Unplugged recently, I think it might've been off air,

493
00:28:39,520 --> 00:28:44,400
but he speculated with me that he may be able to get Linux booting on this thing by the

494
00:28:44,400 --> 00:28:48,000
end of January if Apple made this change in time.

495
00:28:48,000 --> 00:28:49,680
And here it is, they've made the change.

496
00:28:49,680 --> 00:28:52,000
So things are trending in the right direction.

497
00:28:52,000 --> 00:28:57,480
What once seemed like an impossible task at least has a starting line now.

498
00:28:57,480 --> 00:29:01,320
It's kind of fascinating to watch because clearly Apple didn't have to do this.

499
00:29:01,320 --> 00:29:04,480
They explicitly don't do this on iOS, right?

500
00:29:04,480 --> 00:29:09,080
And as we see with these, you know, M1 chips and future macOS lines, there's some convergence

501
00:29:09,080 --> 00:29:10,080
happening there.

502
00:29:10,080 --> 00:29:13,040
So I really could have seen them porting things over and just said, no, it runs our sign stuff.

503
00:29:13,040 --> 00:29:14,160
It's secure.

504
00:29:14,160 --> 00:29:15,840
You don't get to touch it.

505
00:29:15,840 --> 00:29:19,240
They're actually including the technology, not helping with drivers or anything else,

506
00:29:19,240 --> 00:29:21,880
of course, but letting us run Linux on there.

507
00:29:21,880 --> 00:29:23,560
And wow, that's nice to see.

508
00:29:23,560 --> 00:29:28,080
Yeah, it's interesting too, because they're not using like some custom UEFI implementation,

509
00:29:28,080 --> 00:29:33,480
but they're actually using the iBoot stuff that they do in fact use on iOS devices.

510
00:29:33,480 --> 00:29:36,640
So they very much are choosing to do this.

511
00:29:36,640 --> 00:29:42,880
It's hard to really know for sure if that is some kind of nod saying, yeah, go ahead.

512
00:29:42,880 --> 00:29:46,940
Or if it's more like we're building this in for folks like Microsoft.

513
00:29:46,940 --> 00:29:48,720
But either way, it leaves the door open for Linux.

514
00:29:48,720 --> 00:29:51,120
So it's nice to see them go after it.

515
00:29:51,120 --> 00:29:53,600
Good luck, Hector and Asahi Linux.

516
00:29:53,600 --> 00:29:55,920
Well that does bring us to the end of this week's episode.

517
00:29:55,920 --> 00:30:02,040
Check out linuxactionnews.com slash subscribe for all the ways to get new episodes and linuxactionnews.com

518
00:30:02,040 --> 00:30:04,600
slash contact for ways to get in touch.

519
00:30:04,600 --> 00:30:08,200
If you have some time Monday evening and want to hang out, join the new Coder happy hour.

520
00:30:08,200 --> 00:30:11,120
It starts at 5 p.m. Pacific, 8 p.m. Eastern.

521
00:30:11,120 --> 00:30:14,240
And you never know when friends like Wes Payne will be stopping by.

522
00:30:14,240 --> 00:30:18,760
But for us, we'll be back next Monday with our weekly take on the latest Linux in open

523
00:30:18,760 --> 00:30:19,760
source news.

524
00:30:19,760 --> 00:30:40,080
Thanks for joining us and we will see you next week.

