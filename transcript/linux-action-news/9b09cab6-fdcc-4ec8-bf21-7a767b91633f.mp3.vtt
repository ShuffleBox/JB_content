WEBVTT

00:00.000 --> 00:16.240
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.240 --> 00:20.280
This is episode 64, recorded on July 29th, 2018.

00:20.280 --> 00:21.280
I'm Chris.

00:21.280 --> 00:22.280
And I'm Joe.

00:22.280 --> 00:23.280
Hello, Joe.

00:23.280 --> 00:26.880
It's good to be connected with you, and let's start things off with a bit of strife over

00:26.880 --> 00:30.840
at the world's oldest surviving Linux distribution, Slackware.

00:30.840 --> 00:34.880
Yeah, we just talked about this last week, being 25 years old.

00:34.880 --> 00:39.720
And now it turns out that the lead dev has got some pretty serious financial problems.

00:39.720 --> 00:44.680
In a forum post on linuxquestions.org, Patrick writes that the store, the Slackware merch

00:44.680 --> 00:48.480
store, has been ripping me off horribly, and I'm very nearly broke.

00:48.480 --> 00:51.640
I have no evidence that they've ever done anything with donations besides their own

00:51.640 --> 00:52.640
pockets.

00:52.640 --> 00:54.440
I have not been paid money by them in two years.

00:54.440 --> 00:59.760
The last time he got paid was around the Slackware 14.2 release, which he believes he did not

00:59.760 --> 01:01.800
get a fair share of that.

01:01.800 --> 01:05.040
And what I read here is somebody who's frustrated.

01:05.040 --> 01:10.160
Patrick has been really dedicated to his work, and perhaps he hasn't been as focused on the

01:10.160 --> 01:13.360
business side of things, and that's kind of come around to bite him now.

01:13.360 --> 01:15.540
This is a very common story, isn't it?

01:15.540 --> 01:20.120
In open source, shock horror, people who are good at creating software and distros and

01:20.120 --> 01:23.880
cool projects aren't necessarily good when it comes to the financial stuff.

01:23.880 --> 01:25.720
Yeah, we can't all be Taylor Swift.

01:25.720 --> 01:26.800
I'll be completely honest.

01:26.800 --> 01:28.440
I am not a good businessman.

01:28.440 --> 01:34.040
I can make some podcasts, I can focus on some content, but I could be making way more money

01:34.040 --> 01:35.040
if I was a good businessman.

01:35.040 --> 01:36.800
And I don't mean to say that braggadociously.

01:36.800 --> 01:40.720
I'm saying that as I recognize my own failures and opportunities that I've missed out on

01:40.720 --> 01:45.360
simply because this is not a strong area for me, and if I were to project a little bit

01:45.360 --> 01:50.000
here, I'd say Patrick probably wanted to focus on Slackware and make Slackware the best it

01:50.000 --> 01:56.240
can be, which I'll say, having gave a go just a couple of months ago, Slackware is rocking

01:56.240 --> 01:57.240
still.

01:57.240 --> 01:58.240
Like, it's still really great.

01:58.240 --> 02:02.760
I'd say it's the best it's ever been, and he is a huge part of that, and think about

02:02.760 --> 02:05.440
what he's done for Linux in general as a whole.

02:05.440 --> 02:09.520
Yeah, there's no doubt, and having looked at it last week, I can see that it's still

02:09.520 --> 02:15.160
adhering to those fundamental principles that Patrick set out in the first place, and it

02:15.160 --> 02:21.200
is still a solid distro, but clearly the financial side of things is not his forte.

02:21.200 --> 02:25.820
And so it makes you wonder, would it be better for the likes of Slackware and these other

02:25.820 --> 02:31.200
projects that have had financial problems, would it be better for them to be under an

02:31.200 --> 02:36.360
umbrella organization like Conservancy or something similar, or maybe even Mozilla or

02:36.360 --> 02:37.360
whoever?

02:37.360 --> 02:38.360
I was thinking the same thing.

02:38.360 --> 02:40.520
Like, maybe that's the long-term solution.

02:40.520 --> 02:45.360
The short-term solution has been Patrick set up a PayPal account, we'll have a link in

02:45.360 --> 02:50.520
the show notes at linuxactionnews.com slash 64, and that's probably the immediate solution

02:50.520 --> 02:55.580
is help him fix the hole in his house and those kinds of issues, and then perhaps once

02:55.580 --> 03:01.040
he has some breathing room, he looks at doing something like just that, because if you think

03:01.040 --> 03:06.060
about the importance of Slackware, it's a monument in a way to Linux's history.

03:06.060 --> 03:13.240
It is a living monument that is still evolving and growing, and it deserves being preserved,

03:13.240 --> 03:16.000
and it should be done in whatever way Patrick is comfortable with.

03:16.000 --> 03:17.040
I think that's a key thing here.

03:17.040 --> 03:20.500
I don't want like some large organization like the Linux Foundation, which I've seen

03:20.500 --> 03:25.280
suggested by many online, swoop in and take ownership.

03:25.280 --> 03:29.760
I wouldn't mind them writing him a paycheck, I wouldn't mind another organization coming

03:29.760 --> 03:34.280
together to help him manage the bills and the business end of things, take care of expenses,

03:34.280 --> 03:38.360
but whatever that long-term solution is, it seems the short-term solution is to help Patrick

03:38.360 --> 03:42.280
out if you can, and then make room for Patrick to do what he thinks is best with Slackware,

03:42.280 --> 03:43.680
because he's been doing a great job so far.

03:43.680 --> 03:48.240
Yeah, he's been doing it for 25 years, so he's obviously doing something, right?

03:48.240 --> 03:52.740
And he mentioned possibly moving to Patreon, which I think probably makes more sense as

03:52.740 --> 03:58.400
it's more reliable and you can kind of see how much you're likely to get every month,

03:58.400 --> 04:02.440
but for now we've got this PayPal link, so do help him out if you can afford it.

04:02.440 --> 04:06.800
Well, I watched the dust up over this in real time on Twitter this week.

04:06.800 --> 04:11.400
There was a bit of outrage when it appeared that Google had rigged YouTube to load faster

04:11.400 --> 04:14.040
on Chrome than say on Firefox or Edge.

04:14.040 --> 04:18.800
Yeah, a lot of people saying that this is Google trying to force people onto Chrome

04:18.800 --> 04:24.500
and deliberately making the experience worse on other browsers, but it's not quite as simple

04:24.500 --> 04:25.500
as that, is it really?

04:25.500 --> 04:29.760
No, in fact, a good resource to go to in this case might be Mozilla's technical program

04:29.760 --> 04:34.800
manager, Chris Peterson, who claims that what you're really seeing here is the new Polymer

04:34.800 --> 04:41.880
redesign that YouTube did that relies on a deprecated Shadow DOM version 0 API, which

04:41.880 --> 04:44.500
is only available in Chrome.

04:44.500 --> 04:50.880
Now it results in a five times slower loading of the initial YouTube page.

04:50.880 --> 04:53.920
Subsequent page navigation is not impacted.

04:53.920 --> 04:56.680
Well, I must say that I struggled to reproduce this.

04:56.680 --> 04:59.360
I read about it and thought I hadn't really noticed that before.

04:59.360 --> 05:04.320
Let me check with Chrome and Firefox on the same machine and I just couldn't reproduce

05:04.320 --> 05:05.320
it.

05:05.320 --> 05:09.920
This idea of it taking five seconds to load just did not happen for me, I must say.

05:09.920 --> 05:11.720
Well, there's so many factors here.

05:11.720 --> 05:15.800
Not only do you have the connection and all the things in between you and YouTube servers,

05:15.800 --> 05:20.280
but then you also have the YouTube server load at the time and the load on your workstation

05:20.280 --> 05:21.960
at the time.

05:21.960 --> 05:27.480
It's almost impossible to notice unless you use tools to specifically measure performance

05:27.480 --> 05:30.720
that account for some of these things, which is exactly what Mozilla's technical program

05:30.720 --> 05:31.720
manager did.

05:31.720 --> 05:33.920
And so the numbers do bear out.

05:33.920 --> 05:39.440
Interestingly, Peterson also says that Polymer's latest version, which is this design methodology

05:39.440 --> 05:45.480
and technology, now supports both Shadow DOM 0 and version 1 APIs, but Google is still

05:45.480 --> 05:52.480
using the current version of Polymer, but using a deprecated API.

05:52.480 --> 05:56.560
That doesn't really make a lot of sense because if they just use the newer API that the current

05:56.560 --> 06:00.680
version of Polymer, they're using supports, then it would work fine on Edge, Firefox,

06:00.680 --> 06:02.120
Safari, et cetera.

06:02.120 --> 06:06.680
So do you think that there is some truth to this then and Google really do want to force

06:06.680 --> 06:07.680
people onto Chrome?

06:07.680 --> 06:09.740
That'd be some good conspiracy bacon.

06:09.740 --> 06:13.560
It feels more like a cost analysis on Google's part.

06:13.560 --> 06:18.580
We've done the work and we have a certain percentage of users, let's for fun say it's

06:18.580 --> 06:25.720
20%, 20% of our users are on Firefox and they will experience about a second more load time

06:25.720 --> 06:27.540
than the Chrome users.

06:27.540 --> 06:31.640
And then we'll eventually fix that problem once we push out the next version or something

06:31.640 --> 06:32.640
like that.

06:32.640 --> 06:36.960
It just feels like a cost analysis where it's almost unnoticeable who's really going to

06:36.960 --> 06:39.120
be running these benchmarks in the next couple of weeks.

06:39.120 --> 06:41.200
It's no big deal.

06:41.200 --> 06:44.800
And then everybody notices because YouTube's a huge site and so now it's a controversy.

06:44.800 --> 06:49.080
But the silver lining of the whole thing is I discovered, and I'll include a link in the

06:49.080 --> 06:52.760
show notes, an extension called YouTube Classic.

06:52.760 --> 06:56.280
This is what YouTube has needed to be for years.

06:56.280 --> 06:59.100
And I've been getting tweets from folks that heard me talk about it on Linux Unplugged

06:59.100 --> 07:01.140
last week who said they just love it.

07:01.140 --> 07:05.840
You install it in Firefox and it just makes YouTube so much better.

07:05.840 --> 07:08.700
No more dynamic comments and dynamic stuff loading.

07:08.700 --> 07:12.080
Everything just snaps like a, nearly like a static HTML site.

07:12.080 --> 07:19.000
I have heard some reports that when you uninstall the extension, the effects still remain.

07:19.000 --> 07:22.860
I have not verified that because I will never in my life be uninstalling this extension,

07:22.860 --> 07:24.440
but just buyer beware.

07:24.440 --> 07:25.440
I have heard that.

07:25.440 --> 07:28.440
But this really is something to consider if you're on Firefox.

07:28.440 --> 07:32.560
Just bypass all the shenanigans Google's doing and get a great static-like experience on

07:32.560 --> 07:33.560
YouTube.

07:33.560 --> 07:36.920
You've really sold that to me because I was going to install it to see if I could notice

07:36.920 --> 07:42.060
the difference, but then I couldn't see any difference between Firefox and Chrome.

07:42.060 --> 07:45.360
So I didn't see any point, but now that seems very attractive to me.

07:45.360 --> 07:49.040
It's just great because the sidebar loads instantly, the comments load instantly, everything

07:49.040 --> 07:50.440
just pops right in.

07:50.440 --> 07:53.180
You don't have to search around to get to your subscriptions.

07:53.180 --> 07:56.480
They include a link to YouTube TV if you're a YouTube TV subscriber, so you don't have

07:56.480 --> 07:58.280
to go hunt around for that anymore.

07:58.280 --> 08:00.880
Everything's just right there like it should be, a simple, clean design.

08:00.880 --> 08:05.600
Well, don't get too excited, Joe, because where Firefox giveth, it also taketh.

08:05.600 --> 08:10.640
Mozilla has announced it plans to remove some features from future versions of Firefox.

08:10.640 --> 08:16.400
Yeah, live bookmarks and the RSS reader, which I'm afraid to say, neither of which I've ever

08:16.400 --> 08:20.440
used before, so I'm not going to miss them, but I know a lot of people will.

08:20.440 --> 08:21.440
It's a pretty neat feature.

08:21.440 --> 08:28.360
You can have a folder in your bookmarks menu bar that the individual quote-unquote bookmarks

08:28.360 --> 08:30.080
are generated by an RSS feed.

08:30.080 --> 08:36.800
So like the news of a website, say you subscribe to linuxactionnews.com slash RSS, each episode

08:36.800 --> 08:39.960
would be represented as a bookmark in that folder.

08:39.960 --> 08:42.080
So you click right to it, it's really neat.

08:42.080 --> 08:45.880
And I didn't use it a ton myself, and they write here, after careful consideration of

08:45.880 --> 08:50.720
various options, which also included doing nothing or investing heavily in updating the

08:50.720 --> 08:55.320
code, we have decided to go ahead and remove the built-in feed support from Firefox.

08:55.320 --> 09:02.080
So along with the live bookmarks, they're also removing the built-in RSS feed reader.

09:02.080 --> 09:03.840
That I'm a little more partial to.

09:03.840 --> 09:07.920
I again don't use it a ton, but I have absolutely used it to double check RSS feeds in the past

09:07.920 --> 09:11.440
before I toss them into like a central reader or something.

09:11.440 --> 09:14.400
So I'm really going to miss that feature because Chrome doesn't have it either.

09:14.400 --> 09:19.320
Yeah, but surely this is the kind of functionality that can be brought back into Firefox via

09:19.320 --> 09:21.880
extensions if you need it.

09:21.880 --> 09:23.800
And so that makes more sense to me.

09:23.800 --> 09:28.800
If a tiny minority of users are using these features, then it makes sense to take them

09:28.800 --> 09:32.840
out and let those people bring them back in via extensions.

09:32.840 --> 09:33.840
Yep, exactly.

09:33.840 --> 09:34.840
I completely agree.

09:34.840 --> 09:39.400
And it makes sense to me that this would be, as they write, an outsized maintenance and

09:39.400 --> 09:44.900
security impact relative to the usage because you're pulling in live RSS feeds into these

09:44.900 --> 09:50.760
folders or into the browser and you have to constantly account for malicious things that

09:50.760 --> 09:54.600
could be in the feed or malicious embedded images and tracking.

09:54.600 --> 10:00.400
There's a lot of variables and I could definitely see it requiring a decent amount of attention.

10:00.400 --> 10:05.840
And it's such a unique and sort of edge case feature that I also find it pretty believable

10:05.840 --> 10:08.120
that not very many users use it.

10:08.120 --> 10:12.200
So this is one of those calculated decisions that Mozilla has to make from time to time.

10:12.200 --> 10:15.840
This should result in Firefox being better and more secure.

10:15.840 --> 10:22.080
And of course, this has absolutely nothing to do with pocket.

10:22.080 --> 10:23.880
Linuxacademy.com slash unplug.

10:23.880 --> 10:28.160
That's where you go to get a free seven day trial and you sign up and support the show.

10:28.160 --> 10:32.480
Linux Academy is an advanced training platform to teach you everything that runs Linux and

10:32.480 --> 10:33.960
that Linux runs on.

10:33.960 --> 10:39.680
They've just rolled out a ton of new Red Hat Enterprise content as well as AWS and Google

10:39.680 --> 10:40.940
Cloud content.

10:40.940 --> 10:45.800
They've also just launched a weekly Google Cloud show on their YouTube channel.

10:45.800 --> 10:50.960
And their CEO and founder, Anthony James, just posted a video today, a lightning guide

10:50.960 --> 10:53.840
on getting Docker going in five minutes.

10:53.840 --> 10:55.640
And that's just the stuff they're giving away for free.

10:55.640 --> 10:58.600
And when you become a subscriber, you'll see that they've been expanding their content

10:58.600 --> 11:01.320
library like crazy this year.

11:01.320 --> 11:06.200
They've expanded on Azure, AWS, the Google Cloud platform, and of course, Linux and all

11:06.200 --> 11:07.200
the essentials itself.

11:07.200 --> 11:10.680
In fact, that's an area that just got a large amount of refreshing.

11:10.680 --> 11:14.360
That's another thing that they're super committed to is keeping all of their content as up to

11:14.360 --> 11:16.400
date and as fresh as possible.

11:16.400 --> 11:18.560
That's part of what your subscription goes to.

11:18.560 --> 11:20.440
Linuxacademy.com slash unplug.

11:20.440 --> 11:23.600
Go there, sign up, get a free seven day trial and support the show.

11:23.600 --> 11:26.280
Linuxacademy.com slash unplugged.

11:26.280 --> 11:36.280
OK, let's talk about Germany and a local authority there moving away from Linux and back to Windows.

11:36.280 --> 11:37.480
Not Munich this time.

11:37.480 --> 11:38.480
It's a new one.

11:38.480 --> 11:43.800
It is Lower Saxony and it is yet more bad news for FOSS in Europe.

11:43.800 --> 11:48.720
I'm a bit surprised after the recent reporting back in January that the cost of Munich switching

11:48.720 --> 11:52.160
back to Windows is already over 100 million.

11:52.160 --> 11:57.840
So it's not necessarily going well, but yeah, the tax office has argued that this decision

11:57.840 --> 12:03.240
is driven simply by compatibility with field workers and teleworkers who overwhelmingly

12:03.240 --> 12:08.960
are using Windows while their openSUSE variants that they have on their office workstations

12:08.960 --> 12:11.000
are of an older generation.

12:11.000 --> 12:14.680
In fact, the workstations themselves are being replaced.

12:14.680 --> 12:20.240
They're aging out, which is sort of opening the door for a great deal on Windows 10 and

12:20.240 --> 12:21.980
an opportunity to switch away.

12:21.980 --> 12:26.360
The move is still in its early stages with Lower Saxony governments currently defining

12:26.360 --> 12:31.000
the framework conditions of the migration, but it's going to be followed by a preselection

12:31.000 --> 12:34.280
of possible solutions and then they'll begin to move.

12:34.280 --> 12:38.720
I don't know what's wrong with me, but in a way it almost feels necessary.

12:38.720 --> 12:44.440
Like like the move back to Windows isn't necessarily a loss anymore for GNU slash Linux.

12:44.440 --> 12:49.000
Like it might have been, say, 10 years ago when they started getting this underway.

12:49.000 --> 12:54.320
And you know, I do recall on the Linux Action Show clearly talking about these massive 13,000

12:54.320 --> 12:56.600
user migrations and what a great victory this was for Linux.

12:56.600 --> 13:00.040
And now, of course, here I am 10 years later saying, ah, this is no big deal.

13:00.040 --> 13:01.440
It's totally fine.

13:01.440 --> 13:04.280
But I feel like the environment has changed so much.

13:04.280 --> 13:08.780
Back then we were so focused on making sure that the desktop was successful and that the

13:08.780 --> 13:11.680
Tivoization of Linux didn't happen.

13:11.680 --> 13:16.240
Well, the Tivoization of Linux is what took Linux to the next level and it's now in everyone's

13:16.240 --> 13:19.120
pocket and Linux took over the server space.

13:19.120 --> 13:26.420
And so these minor losses or wins on the desktop just don't really feel as substantial anymore.

13:26.420 --> 13:30.800
And it feels like the long term momentum of the Linux desktop's still going in a great

13:30.800 --> 13:31.800
direction.

13:31.800 --> 13:33.220
The trend is good for us.

13:33.220 --> 13:36.600
And if Microsoft managed to convince a few bureaucrats that they should move back to

13:36.600 --> 13:39.600
Windows when they buy new PCs, so be it.

13:39.600 --> 13:43.760
Because chances are those PCs are going to be connecting to servers running Linux.

13:43.760 --> 13:49.280
Well, that is true, and it begs the question, is this the end of the myth that it's cheaper

13:49.280 --> 13:52.680
to use Linux instead of Windows in these enterprise installations?

13:52.680 --> 13:53.680
Yeah, maybe.

13:53.680 --> 13:57.020
I think you just touched on what it really is about this that I'm okay with.

13:57.020 --> 14:02.200
And that is I kind of feel like this is cleaning house of people that were sold on a dream.

14:02.200 --> 14:08.400
And that dream was switch to Linux and your total cost of IT will go way, way down because

14:08.400 --> 14:11.080
you won't be buying licenses every 10 years.

14:11.080 --> 14:12.080
It just doesn't really work like that.

14:12.080 --> 14:16.320
And the reality is that the business either go with a subscription plan and they spread

14:16.320 --> 14:23.020
that cost out, or they just budget for it every three to 10 years to refresh machines

14:23.020 --> 14:24.260
and software.

14:24.260 --> 14:27.480
And it's just part of the cost of doing business.

14:27.480 --> 14:29.160
And they are okay with that.

14:29.160 --> 14:30.840
That's the reality of that situation.

14:30.840 --> 14:35.480
And then once you build IT processes and tools around managing Windows, you just need to

14:35.480 --> 14:37.720
have people that know what they're doing.

14:37.720 --> 14:41.940
And it's essentially the same cost as running free software.

14:41.940 --> 14:42.940
That's the reality of it.

14:42.940 --> 14:45.960
Once you've initially purchased those licenses and have those systems deployed, if you have

14:45.960 --> 14:50.140
the right people in place managing it and the right software to manage it, it's one

14:50.140 --> 14:51.140
or the other.

14:51.140 --> 14:56.960
And so selling it solely on saving money or saving you from XYZ is a bit of a myth as

14:56.960 --> 14:57.960
you put it.

14:57.960 --> 15:01.660
And the reality is there's other advantages to using the Linux stack that I think now

15:01.660 --> 15:04.880
sell it and that creates that momentum I was talking about.

15:04.880 --> 15:08.680
Like it's great to be on that stack if you're deploying applications in the cloud.

15:08.680 --> 15:13.000
Why not develop and use the very operating system you're deploying your critical software

15:13.000 --> 15:14.000
on?

15:14.000 --> 15:19.200
That's an obvious value right there that the Linux desktop brings to a huge market.

15:19.200 --> 15:21.440
And there's many other examples of that.

15:21.440 --> 15:24.280
And so those legitimate work cases sell themselves now.

15:24.280 --> 15:29.040
But this myth that you're going to save $10,000 to $100,000 a year because you just switched

15:29.040 --> 15:32.200
to Linux, I kind of think that is dying.

15:32.200 --> 15:35.760
And it's perfectly fine with me because we have plenty of other good things going for

15:35.760 --> 15:36.760
us.

15:36.760 --> 15:40.240
And you can save however many bitcoins it works out to be when you don't get the ransomware

15:40.240 --> 15:42.560
that you otherwise would with Windows.

15:42.560 --> 15:43.560
Yeah, that's true.

15:43.560 --> 15:48.760
And I think you could make a legitimate argument that public funds shouldn't be spent on big

15:48.760 --> 15:53.260
commercial license contracts, that they should go towards free software that continues to

15:53.260 --> 15:54.260
improve that software.

15:54.260 --> 15:56.380
I think that's a great argument you could make.

15:56.380 --> 16:00.000
But for general businesses and people that just look at this from a numbers standpoint,

16:00.000 --> 16:03.000
yeah, we're just not winning that fight on that level anymore.

16:03.000 --> 16:06.520
But I think the security aspect is where we should be pushing this.

16:06.520 --> 16:10.800
That's the primary reason why I run Linux on the desktop.

16:10.800 --> 16:15.920
I do enjoy all the freedoms and the open source and all the rest of it, but I wouldn't feel

16:15.920 --> 16:19.700
comfortable using a Windows machine or even a Mac for that matter to log into my bank

16:19.700 --> 16:20.700
and stuff.

16:20.700 --> 16:23.500
I trust Linux where I don't trust Windows.

16:23.500 --> 16:30.600
And I think that it's far easier to convince enterprises and individuals when you go for

16:30.600 --> 16:37.000
a real pragmatic reason like that rather than this ideological reason of, as you say, spending

16:37.000 --> 16:39.980
public money to improve the software and everything.

16:39.980 --> 16:44.120
That's kind of a bit wishy-washy, whereas saying to people, this is going to be more

16:44.120 --> 16:47.600
secure, I think that's a far easier sell.

16:47.600 --> 16:49.360
And there's tons of versions of that.

16:49.360 --> 16:51.080
This is going to be more reliable.

16:51.080 --> 16:56.160
This is something that you can track publicly and plan for major changes and not get surprised

16:56.160 --> 16:58.520
by a commercial vendor's sudden change in direction.

16:58.520 --> 17:02.840
This is something that is sustainable that the vendor won't lose interest in.

17:02.840 --> 17:07.920
Like there's all kinds of advantages for workstations and servers that have nothing to do with performance

17:07.920 --> 17:09.340
or even security.

17:09.340 --> 17:14.060
So I think losing a couple of arguments here and there about total cost of ownership on

17:14.060 --> 17:19.240
a desktop in an environment where you have to potentially interact with the public and

17:19.240 --> 17:24.720
you have to interact with home employees who are on their home Windows boxes, that's just,

17:24.720 --> 17:27.960
you're never going to win that argument and we maybe shouldn't have tried.

17:27.960 --> 17:31.560
Well, one argument for moving over to Linux they definitely shouldn't be using and that

17:31.560 --> 17:37.120
is being able to revitalize old hardware, especially 32-bit hardware, because there

17:37.120 --> 17:40.920
is yet another reason to not use 32-bit Linux anymore.

17:40.920 --> 17:46.240
Ooh, that sounds grim and it is kind of true, although there is, again, a bit of a silver

17:46.240 --> 17:47.240
lining here.

17:47.240 --> 17:53.440
So this is really about protecting 32-bit processors against those side channel attacks

17:53.440 --> 17:55.960
that we've been talking about since January.

17:55.960 --> 18:03.740
And the technology that's now coming from the x86-64 side to the 32-bit side is kernel-based

18:03.740 --> 18:08.740
page table isolation, something we've talked a lot about in TechSnap that mitigates the

18:08.740 --> 18:10.980
meltdown CPU vulnerability.

18:10.980 --> 18:16.320
Now KPTI has been in the Linux kernel since about January and it's been in development

18:16.320 --> 18:18.100
much longer than that.

18:18.100 --> 18:23.440
But 32-bit support has been on the back burner really since the whole meltdown thing came

18:23.440 --> 18:26.200
into public light and they had to accelerate that project.

18:26.200 --> 18:33.520
But now, with the upcoming 4.19 kernel, KPTI is landing in the Linux 32-bit version of

18:33.520 --> 18:40.240
the kernel and Michael Irabel over at Voronix has some early benchmarks and they're devastating.

18:40.240 --> 18:45.760
Yeah, it's a real performance hit on a lot of applications.

18:45.760 --> 18:50.600
But you did say there's a silver lining, it can be disabled at boot time and it's not

18:50.600 --> 18:55.200
necessary to use it, but if you want to be 100% secure then it kind of is.

18:55.200 --> 19:00.560
And to me, this just feels like the death of 32-bit, really.

19:00.560 --> 19:01.720
It's time, isn't it?

19:01.720 --> 19:07.000
We've talked about various distros dropping 32-bit, now it just feels like it's time to

19:07.000 --> 19:08.000
put it to bed.

19:08.000 --> 19:11.880
Yeah, my only thought here is there still is room for improvement.

19:11.880 --> 19:18.400
When KPTI first landed on the 64 side of the kernel, it took, you know, months of updating

19:18.400 --> 19:22.720
additional patches and releases to really get the performance where they wanted it.

19:22.720 --> 19:26.820
That may still happen, maybe at a slower pace for 32-bit, but the other thing that I can't

19:26.820 --> 19:31.360
really help but think is, you know, if you're living on a 32-bit machine, if you maybe have

19:31.360 --> 19:35.440
one in the closet doing a web server or something like that, are you super worked up about the

19:35.440 --> 19:36.840
performance at this point?

19:36.840 --> 19:43.280
I mean, you know, it's like shaving off another 10%, maybe 15%, are you really all that concerned?

19:43.280 --> 19:48.320
And just like on 64-bit, it really strikes you when it's multiple IO subsystems that

19:48.320 --> 19:49.440
get stressed at once.

19:49.440 --> 19:53.960
So if you start stressing your CPU and your network card and you need to hit your disk

19:53.960 --> 19:57.500
a little bit, your workloads just drop off a cliff.

19:57.500 --> 20:00.040
It's really the same thing that started happening with 64-bit.

20:00.040 --> 20:05.120
They began working on multi-level areas of improvement in the kernel to fix that.

20:05.120 --> 20:09.820
There's still people working on that for the 64-bit kernel right now as we speak, so some

20:09.820 --> 20:14.560
of that may find its way down to 32-bit or it may just simply not have enough interest.

20:14.560 --> 20:19.840
Yeah, but that extra 10% or 15% makes a massive difference when you've got such limited resources

20:19.840 --> 20:21.320
in the first place.

20:21.320 --> 20:26.360
And so it could turn a potentially usable 32-bit machine into something that is just

20:26.360 --> 20:27.640
a nightmare to use.

20:27.640 --> 20:28.700
Yeah, I agree.

20:28.700 --> 20:33.400
If you're going to stick with 32-bit and you're not that concerned about meltdown, you may

20:33.400 --> 20:38.440
want to look into the no PTI option, which is a boot flag, which will disable that stuff

20:38.440 --> 20:39.440
at boot time.

20:39.440 --> 20:44.820
Yeah, and of course, a distro that I would run on old hardware like that, my go-to has

20:44.820 --> 20:48.880
always been Lubuntu, but maybe not for long.

20:48.880 --> 20:50.420
Times they are changing, Joe.

20:50.420 --> 20:52.560
This is over on the Lubuntu blog.

20:52.560 --> 20:58.500
Now when you think of Lubuntu, you might think of LXDE, but it's actually based on LXCute,

20:58.500 --> 21:02.620
which is a rebirth on newer Qt technologies.

21:02.620 --> 21:07.760
And they write about shifting their focus from providing a distribution for old hardware

21:07.760 --> 21:12.920
to a functional yet modular distribution focused on getting out of the way and letting users

21:12.920 --> 21:14.640
use their computer.

21:14.640 --> 21:19.200
And they talk a little bit about setting what they see as their difference here, because

21:19.200 --> 21:24.220
you may draw a comparison between Kubuntu and Lubuntu.

21:24.220 --> 21:29.340
Both are now Qt-based desktops on top of an Ubuntu 18.04 stack.

21:29.340 --> 21:35.440
So they took an 18.04.1 install with two gigabytes of RAM and one CPU core in QEMU, and they

21:35.440 --> 21:41.320
looked at an idle system with LibreOffice open and Firefox open just at the Lubuntu.me

21:41.320 --> 21:42.320
site.

21:42.320 --> 21:47.980
On Kubuntu, the system is using one gig of RAM and around 6% idle CPU.

21:47.980 --> 21:54.640
With the same setup and the same programs on a Lubuntu 32-bit install, they're using

21:54.640 --> 21:59.240
790 megabytes of RAM, and it's 7% of CPU.

21:59.240 --> 22:03.680
So a couple hundred megabytes of RAM savings, which some of that may be attributed to being

22:03.680 --> 22:10.740
on 32-bit, by the way, and 7%, 1% more CPU usage, which is the standout difference between

22:10.740 --> 22:12.200
Kubuntu and Lubuntu.

22:12.200 --> 22:17.520
Which is not a huge difference, really, especially when you take into account that 32-bit aspect

22:17.520 --> 22:18.520
with the RAM.

22:18.520 --> 22:22.280
It goes to show how lean the plasma desktop is these days.

22:22.280 --> 22:26.700
Yeah, and that would, I would assume, be a stock Kubuntu install, which if you were trying

22:26.700 --> 22:30.340
to make it run on a system, you'd probably rip out the file indexer.

22:30.340 --> 22:32.960
You'd probably turn the compositor off.

22:32.960 --> 22:37.640
There's areas of modularity where you can pull things out and make it use even less

22:37.640 --> 22:39.960
RAM and less disk space and less CPU.

22:39.960 --> 22:46.460
I've had it working on a now 11-year-old system that it's remarkable how well it performs.

22:46.460 --> 22:52.080
But I think there is more to LXQt than we have here in this blog post, which you really

22:52.080 --> 22:59.400
have is a simple minimal workspace that really is just modern technologies that get out of

22:59.400 --> 23:00.720
your way.

23:00.720 --> 23:04.880
There's one thing for plasma that you could argue is there's a lot going on in some areas

23:04.880 --> 23:07.760
where this is a more minimal approach.

23:07.760 --> 23:12.060
Yeah, there are clearly differences between the two desktops, and I don't think they will

23:12.060 --> 23:16.840
ever get away from this idea of it being for older hardware.

23:16.840 --> 23:20.480
But what is older hardware keeps changing, doesn't it?

23:20.480 --> 23:26.560
Of course, as we progress through time, something from 10 years ago is suddenly not as crusty

23:26.560 --> 23:30.480
as something from 10 years ago, five years ago, if you know what I mean.

23:30.480 --> 23:31.480
I do.

23:31.480 --> 23:35.080
And they're recognizing that fact, and they're trying to update their, I guess you could

23:35.080 --> 23:40.560
call it vision statement, for the reality that systems even from 10 years ago are 64-bit.

23:40.560 --> 23:46.160
The only issue I have with that is I think that reduces some of their competitive advantage.

23:46.160 --> 23:52.560
In a way, their competitive advantage would be that you could still get pretty good performance

23:52.560 --> 23:56.960
out of an older system as they begin to turn away some of those.

23:56.960 --> 24:00.620
I'm not sure, but to me, it seems to leave a question of, okay, what is your standout

24:00.620 --> 24:04.520
difference from main plasma, and how can you better refine that?

24:04.520 --> 24:08.680
I like this blog post they've taken here, and I like to think of it as a version one.

24:08.680 --> 24:12.600
In version two or three, I would like to see things that really actually make it standout.

24:12.600 --> 24:16.720
So when they say their main focus is shifting from providing a distribution for old hardware

24:16.720 --> 24:22.500
to a functional yet modern distribution focused on getting out of the way and letting users

24:22.500 --> 24:25.280
use their computer, I love that idea.

24:25.280 --> 24:26.360
I love that idea so much.

24:26.360 --> 24:29.840
I've also heard it, and I'm sure they've heard this criticism a thousand times now, from

24:29.840 --> 24:32.060
about 30 other distributions out there.

24:32.060 --> 24:39.200
It's almost like a copy and paste job, and it's a good intent, and it's a good starting

24:39.200 --> 24:42.820
point, and it's a statement I completely agree with.

24:42.820 --> 24:46.920
What I would like to see is some refinement in there on what they're doing that the 29

24:46.920 --> 24:50.160
other guys that also wrote that statement aren't already doing.

24:50.160 --> 24:52.680
I think you could make that same exact case for Linux Mint.

24:52.680 --> 24:54.960
I think you could make that same exact argument for Antegros.

24:54.960 --> 24:57.120
I think you could make that same exact case for Ubuntu Mate.

24:57.120 --> 25:01.000
I think you could make that same case for Ubuntu, Fedora, so on and so forth.

25:01.000 --> 25:05.120
Focused on getting out of the way and letting users do their work is practically the mantra

25:05.120 --> 25:09.820
for every desktop environment in existence, even the ones that don't get out of your way.

25:09.820 --> 25:14.720
So that could use some refinement and something that really makes it clear what makes Lubuntu

25:14.720 --> 25:15.880
standout.

25:15.880 --> 25:19.800
And I think they'll probably get there, and if you consider this as a starting point,

25:19.800 --> 25:22.400
this is a great intent and shows a lot of potential.

25:22.400 --> 25:27.440
Well, what could make them stand out is the fact that they're using the LXQt desktop,

25:27.440 --> 25:32.520
because Fedora might be dropping that soon if they don't get enough testing of that.

25:32.520 --> 25:39.080
So we might end up with Lubuntu being the only big distro, as it were, that is based

25:39.080 --> 25:40.080
on LXQt.

25:40.080 --> 25:43.700
You've got the Ubuntu base, which a lot of people like, and the LXQt desktop.

25:43.700 --> 25:47.040
So that might be a USP that's big enough for them.

25:47.040 --> 25:48.560
Yeah, I think that's pretty on point.

25:48.560 --> 25:51.600
And this is also still early days for LXQt.

25:51.600 --> 25:55.740
There's still much more to come, and that desktop may end up being a standout star that

25:55.740 --> 25:56.740
draws people in.

25:56.740 --> 26:00.720
Well, it is already pretty solid, and it's early days, as you say, and it seems like

26:00.720 --> 26:03.900
a prime candidate to me for your OBS machine.

26:03.900 --> 26:05.200
Maybe it'll finally stop crashing.

26:05.200 --> 26:08.080
Yeah, a lean, mean broadcasting workstation.

26:08.080 --> 26:09.360
I could see that.

26:09.360 --> 26:12.880
And like on a laptop on remote location where I really want to give all of my horsepower

26:12.880 --> 26:17.360
to my multitrack recorder, again, LXQt can make a lot of sense there.

26:17.360 --> 26:20.800
So we'll keep an eye on these developments and everything in the Linux and open source

26:20.800 --> 26:25.600
world, and you can get every single episode by going to linuxactionnews.com slash subscribe

26:25.600 --> 26:27.720
for all of the ways to get new episodes.

26:27.720 --> 26:31.600
Yeah, and you can go to linuxactionnews.com slash contact for ways to get in touch with

26:31.600 --> 26:32.600
us.

26:32.600 --> 26:36.720
And you can support the whole network and our shenanigans over at patreon.com slash Jupiter

26:36.720 --> 26:37.720
Signal.

26:37.720 --> 26:41.000
We'll be back next Monday with our weekly take on the latest Linux and open source news.

26:41.000 --> 26:42.600
I'm at Chris LAS.

26:42.600 --> 26:43.920
I'm at Joe Rissington.

26:43.920 --> 26:46.480
Thank you for joining us, and we will see you next week.

26:46.480 --> 27:05.080
See you later.

