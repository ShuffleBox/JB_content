Hello, and welcome to Linux Action News, episode 243, recorded on June 1st, 2022.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
We start this week with some good news.
The LVFS project has served more than 52 million firmware downloads to Linux users.
Now for a little perspective, that was just 25 million this time last year.
That's an impressive rate of growth.
It sure is.
And Red Hat's Richard Hughes is still running the project.
And he presented a bunch of different bits of data at the Embedded Recipes 2022 conference.
For instance, we learned that LVFS is up to more than 120 different hardware partners.
And more recently, LVFS kicked off the Flupd Friendly Firmware Initiative.
The goal with this new initiative is to help hardware partners that already have Flupd
plugins available.
You can imagine how this becomes a little more important with larger hardware manufacturing
adoption, like, say, Google's Chromebooks and other devices requiring Flupd support
as part of their certification process.
Also this week, speaking of Flupd, version 1.8.1 was released.
That's the back end software side to LVFS.
Among a range of bug fixes and improvements was support for more Thunderbolt and USB-C
blocks, which is really nice to see, because those devices, unfortunately, do require
firmware updates.
If you were a little quick to jump on the latest Linux release, 5.18, like a certain
Chris Fisher was, well, new benchmarkers out there may have noticed a performance regression.
Michael Larable over at Ferronix sure noticed it, and as he puts it, bisected it.
He sure did, in kind of his classic way.
He tracked it down to some memory management changes in Linux 5.18, and in particular,
the LRU cache disable change.
But thankfully, it turns out Red Hat's Marcelo Tosanti was already way ahead of him, and
back in March created a patch to fix the issue.
And like some of our most favorite patches, this one is just a really simple one-liner.
A simple but important change that's now on its way to the mainline kernel via Andrew
Morton's memory management patch series, and should be backported for Linux 5.18.
We'll have a link to more coverage by Ferronix if you're curious, including the benchmarks
that demonstrate the issue.
Following up on the recent open source NVIDIA driver news, the Nouveau project has begun
laying the groundwork to adapt its code into a standalone library.
So far, the work seems to be focused on restructuring the basic way that Nouveau's Mesa driver
code is generated, making it possible that that generated code can actually function
and live in a standalone library.
Red Hat's David Arlyle stated, quote, this just moves the code gen build into a separate
library.
This is just prep work for a future where another driver wants to reuse this code.
This isn't perfect for plugging into a Vulkan driver, but doing that requires more in-depth
surgery.
Yeah, and as Christian explained to us just a few weeks ago, NVIDIA is going to need several
open source user space components that can speak to all of the exposed kernel interfaces.
Yeah, really kind of seems that they would benefit by using as much of the Nouveau project
as possible.
And this is kind of just the first small step starting that effort.
Yeah.
I mean, I think this gives us our first real sense from the outside of just how much fundamental
work is ahead for this team.
You know, a glimpse of just all of the things that need to be done.
And maybe that's why personally to me, this is looking like a multi-year project at least.
Matrix fans were pleased to see the team at Rocket Chat announced plans to build new federated
features on top of the Matrix protocol.
If you're not familiar, you could consider Rocket Chat an open source alternative to
Slack, I suppose.
So this is pretty great to see because really, the last thing we needed is another standard
from another project and how we should federate all of our different chat systems.
And I think Rocket Chat was clever to acknowledge that they're going to benefit from the growing
network effect Matrix is seeing as well.
Yeah, right.
I mean, this move means Rocket Chat users should be able to communicate with anyone
who's already using a Matrix compatible chat client.
That means you don't have to throw out your existing clients, you don't have to throw
out your Rocket Chat infrastructure, but you still get all the benefits of a true cross
platform, secure, standards-based chat.
This really is so great.
And it sounds like the Rocket Chat team chose to use Dendrite for their Matrix backend.
That's a more modern backend of the server.
So that's a savvy choice on their part.
And they also touched on the importance of openness and users having control over their
own data.
And they mentioned in their release announcement that that need is growing now more than ever
stating quote, the European Union's recent Digital Markets Act to limit the market power
of large online chat and messaging platforms is evidence of this need.
Impressively just one week after Red Hat Enterprise 9's general availability, Alma Linux 9 is
now here and out.
Alma Linux 9 has now arrived.
Like the RHEL 9 it's based on, Alma Linux 9.0 ships kernel version 5.14 and contains
enhancements around cloud and container development and improvements to the web console cockpit.
This release also features additional security profiles that greatly improve SE Linux performance,
as well as Python 3.9, GCC 11, and the latest versions of LLVM, Rust, and Go.
Linode.com slash LAN, go there to get $100 in 60 day credit on a new account.
And of course you go there to support Linux Action News.
So it's linode.com slash LAN.
They make it simple, affordable, and accessible to deploy and manage your projects, your infrastructure
in the cloud.
And they do it better than anyone for a better price and better performance.
That's the bottom line right there.
They also have fantastic support.
I hear that all the time when the audience gets stuck, Linode's helped them out.
And they just posted a white paper, it's really a full report, and it's a free PDF download,
no email required, none of that stuff, I'll link it in the show notes, and they've gone
through in this report, a third party has, and they have benchmarked AWS, Azure, Google
Cloud, and Linode's GPU based virtual machines.
And they've done this using standardized and repeatable testing methodologies that they've
used for all different kinds of industry benchmarks, a wide range of workloads was tested, and
you can probably guess Linode always, always comes out on top.
They have systems powered by AMD epic processors, powerful GPUs, powerful GPU systems, and of
course they have MVME storage for boxes that just have incredible IOPS.
But if you're looking for something to just host a personal website, a blog, a portfolio,
a gaming server, or you're looking something that can handle millions of users, Linode's
got you there too.
They've got some of the best performance with 11 data centers you can choose from, something
that's going to be close to you or your customers, and they have great features on top of that
which have really brought our game up, like object storage, Terraform support, Ansible
support, Cloud Firewall, great simple to understand backups that are crazy easy to recover from,
all of that.
So go build something, go learn something, go support the show, go see why we deploy
all of our stuff on Linode.
Just go to linode.com slash LAN.
And this episode is made possible by your direct support, Jupiter.party.
You can support the network directly and support our independent content creation with your
membership.
As a thank you, you'll get access to ad-free versions of all of our shows, including Linux
Action News, as well as access to the special edition feeds.
It's Jupiter.party.
You go sign up, you get access to all the shows, and your support makes a real difference.
The NixOS project surprised those in the world who were not following the project's inner
workings closely when it announced a new release, version 2205, with a complete graphical installer.
Now in case you've never installed NixOS, traditionally the way you do it is a direct
process right on the command line.
This new graphical installer though, it's built atop the Colomaris installer framework.
Colomaris is a free and open source, independent, and distro agnostic installer.
If you've ever installed Garuda, Manjaro, Netrunner, KDE Neon, EndeavorOS, or used Debian's
live medium installer option, then you have probably used Colomaris.
And while no longer will you have to hunt for some special ISO, now the Plasma and GNOME
ISO images for NixOS feature a fully updated graphical installer.
Now you could still opt to grab the minimal ISO, which keeps that traditional command
line approach, if that's your style, but of course, Wes and I had to give this a go before
the show.
Yeah, you know us, we got to try the new Shiny.
I should say that as a new Nix user, I'm kind of impressed this is possible at all.
You know, when I started down the NixOS journey, I was kind of just taking it for granted that
much like the early days of Arch, this was going to be a command line process.
I don't mind that the NixOS install is actually pretty straightforward once you know, figure
out how Nix works at all.
But having an installer is a huge win for new users for quickly trying out system settings,
or just to start your system before you've gotten fully to grasp with the Nix expression
language.
And, you know, what also makes this really neat to my developer focused eyes is because
this is declarative, because it's Nix based, you can go take a look at the PR and see everything.
You don't have to go hunt through six different build things or a bunch of different repos
on GitHub or on some distribution specific server or source control system.
No, you can check out all the changes, all the patches that were needed, the sort of
custom Calamares extensions that were developed.
All of that is in one spot in one PR on GitHub.
And that that right there, it's the power of NixOS.
Yeah, that does make it really simple to understand everything that's happening behind the scenes.
I kind of like you was thinking, well, they're never going to do a graphical installer because
you kind of learn how Nix works by installing Nix.
You have to.
And so I thought, well, they're going to keep it this way forever because you got to learn
these basics to use the distro at all.
But we then kind of had a hint coming our way because the developer who ported this
to NixOS has been hanging out in our Nix nerds matrix chat room, which is a great chat room.
And they tease some of this, but it just wasn't really clear.
Would it actually ship?
When would it ship if it did?
And then, you know, it just dropped and it was we were all very excited.
And so I had a chance to ask them a couple of brief questions and just kind of find out
where they're going with this in our matrix room.
They go by Vlynx, and I asked them why they went to the trouble to bring a GUI installer
to such a pro user focused distro.
They replied, quote, My main goal was to make it easier for new people to install and try
NixOS, while also making it easier for others like me, who even though we could install
through the terminal, prefer a simple click through installation.
I can relate to that.
You know, I was becoming more comfortable with the idea and getting a little bit faster
each time and installing NixOS via the command line.
And once you kind of just even get casually familiar with it, you know, it's like a 15
minute install process.
It's not a big deal.
But I got to admit, after trying the GUI install approach, I do prefer that method.
For one, it's just kind of how I install pretty much almost every other distro.
And I tend to do something else while I'm installing a Linux distro.
It's not like the thing that has my sole focus, right?
So a GUI, it helps me kind of keep track of my state and keep an overview of what I'm
actually doing.
And so I asked Vlynx, like, is this something you plan to maintain over time?
Because I imagine once you release something like this out there to the wild, there's going
to be bug fixes that come in and you know, features that need to be added, right?
And you know, changes that might break things, maintenance to do, new NixOS releases to keep
up with.
But Vlynx responded, quote, I definitely plan to keep working on it and similar projects.
I've heard some people mention they'd like a way to import GitHub configs during installation.
So if I make more changes to the installer, that would probably be what I work on.
But I plan on ensuring that the installer stays stable for a while to come.
Now that it's been released, I plan to try to upstream some of the changes to the main
calamaris project as well.
That's great.
I mean, there's a few things that would be nice to see get tweaked over time, like just
small stuff like potentially the default image on the live session maybe could have a longer
power timeout because it's pretty likely that your system's going to start going to sleep
before the installs over.
So you got to wake it up right during installation.
Or if you're on Wi-Fi, if you're not plugged in, the installer will come up and say you
have no internet, so you can't proceed.
Even after you've connected to internet, you have to close the installer and relaunch it.
Small quality of life things, but you could see people making small patches over time
to clean this stuff up.
So I just think that's a fantastic answer.
And the fact that Vlynx is planning to upstream all of that stuff, too, means that these other
distros are going to get the benefit.
This is the stuff you just love about free software.
And also, Vlynx said, kind of implied with a few links, that they were working on some
other projects to make NixOS even more new user friendly.
Yeah, they noted, quote, I'm currently working on a graphical configuration editor.
Overall, I hope someday that even non-terminal users can take advantage of all the features
Nix and NixOS offer.
Yeah, we're going to have to throw a link to that Nix config editor in the show notes.
It sure looks neat.
I mean, I only took a very quick look at it, but I like where it's headed.
It's a simple NixOS configuration editor application, built with libidwaita, GTK4, and Realm 4,
that lets you adjust common Nix settings without having to totally understand exactly how to
compose a Nix expression yourself.
Yep, just one more thing that's going to make it even more approachable to folks.
And I get a real sense that these goals, they're not just like the goals of one developer in
the project.
I believe they're the goals of many developers in the project, and that they want to bring
Nix and NixOS to new users.
And maybe they're not really saying it out loud, but I kind of get a sense that they're
trying to appeal to a Fedora user.
Yeah, talking to them and reading through the discussions on GitHub, you really do get
that impression.
They want to offer one of the best development workstations in Linux, and these are some
of the steps they're taking to get there.
And I got to say, I'm kind of bolstered both by the support from the community after Valink's,
you know, sort of spearheaded this effort, and then also just how far this has come with
not that much support or involvement for the community.
I mean, that just says to me, some of the power and support from the NixOS environment
should really set up some future goals for success.
I agree.
And the tooling, like distro agnostic installers, just getting better and better to make this
stuff possible.
It's fascinating to watch.
It really is.
We, you know, NixOS has been around for a decade.
And all of a sudden, there is just all of this momentum here.
And more and more people, including us, have been checking it out.
It's just one of the many steps to making just the ultimate developer workstation, really
the power user workstation, and we just have more choices than ever.
We'll keep an eye on it, just like we do for everything in the free and open source world.
So be sure you go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And linuxactionnews.com slash contact to tell us all about the neat things you're doing
with NixOS.
We've got a summer of projects here at Jupiter Broadcasting, and we're documenting all of
it in Office Hours, my new show, officehours.hair.
As for this show, well, don't worry, we'll be back next week with our take on the latest
Linux and open source news.
Thanks for joining us.
And that's all the news for this week.
