Hello, and welcome to Linux Action News, episode 186, recorded on April 25, 2021.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
In our top story this week, the University of Minnesota has been banned from contributing
to the Linux kernel.
Over the past year, the university appears to have been conducting research on the kernel
and is weeks away from publishing a paper based on that research, titled
Stealthily Introducing Vulnerabilities in Open Source Software via Hypocrite Commits
Conducted in August of 2020, the research aimed to find what the researchers call immature
vulnerabilities, which are sections of code that could be slightly tweaked to introduce
a serious bug, like a use-after-free-memory issue.
The researchers then sent in those so-called hypocrite commits, which are small, stealthy
patches that attempt to fix a minor but real issue, while in fact upgrading an immature
vulnerability into a real vulnerability.
Fast forward from last year to early April 2021, when a new patch was submitted by a
PhD candidate at the University of Minnesota, it was a new, small, innocent-seeming patch.
Events developed further on the 19th when veteran kernel contributor Al Vero rebuked
that candidate for submitting a fix that does not fix anything.
In the email thread, he suggested this contribution pointed to two possibilities, writing
Plainly put, the patch demonstrates either a complete lack of understanding or somebody
not acting in good faith.
If it's the latter, may I suggest the esteemed sociologists to f**k off and stop testing
the reviewers with deliberately spewed excrements.
Al Vero suspected that the useless patch from the student was likely to be part of that
hypocrite commit research.
Greg K.H. seemed to agree and advise them not to waste the kernel maintainer's time
with such patches, writing
Please stop submitting known invalid patches.
Your professor is playing around with the review process in order to achieve a paper
in some strange and bizarre way.
This is not okay.
It's wasting our time and we will have to report this again to your university.
Seemingly unaware of the larger context around the previously conducted research, the initial
reaction from the university was defensive, claiming the kernel team was hostile to newbies.
That seems to have been something of a last straw for Greg, who stated he
will now have to ban all future contributions from your university and rip out your previous
contributions as they were obviously submitted in bad faith with the intent to cause problems.
After various back and forth exchanges, on April 24th, the research team released an
open letter to the Linux community, writing
We sincerely apologize for any harm our research group did to the Linux kernel community.
Our goal was to identify the issues with the patching process and ways to address them.
And we are very sorry that the method used in the hypocrite commits paper was inappropriate.
As many observers have pointed out to us, we made a mistake by not finding a way to
consult with the community and obtain permission before running this study.
We did that because we knew we could not ask the maintainers of Linux for permission or
they would be on the lookout for the hypocrite patches.
There also seems to be something of a small mob coming in for Greg.
There was much internal discussion on how best to handle the university's patches, both
past and future.
In particular, though, Brad Spangler seems to be calling for Greg KH to be removed from
the kernel's code of conduct committee.
It's probably worth pointing out that in my opinion, Brad's maybe not a good faith actor
in this.
He runs GR Security.
You can look them up.
You may recognize the name.
They're known for constantly butting heads with the Linux kernel developers.
I think there's bad blood there.
Yeah, I think you're right about that.
Where do things stand now, though?
Well, we're waiting for several things, including updates from the university's review of the
approval process and specifics on the hypocrite commits that were accepted.
Those details are being withheld right now.
The researchers claiming it would reveal identities of those involved, but it's made it hard
to have all the details we need to really analyze what happened here.
Yeah, they don't want to necessarily dock somebody further.
But the other things we're waiting for, I would point out, is the university was sent
a letter from the Linux Foundation on Friday, April 23rd, which outlines how they can regain
the trust essentially of the Linux kernel community.
And that's just kind of the answer right now from the team.
Respond to the letter and then we'll proceed.
So that's the facts.
Now for our analysis.
This started out to me anyway as a technical issue, but really it's become a human issue.
The kernel community's trust was violated.
They feel burned, time was wasted, and if things had gone differently, they might have
also just been embarrassed by this research.
They weren't given an opportunity to have a voice to change how it might have gone or
ask them not to do it in the first place.
Yeah, that's a good point.
And this would have been revealed, this big paper, soon at the IEEE Symposium on Security
and Privacy, which starts May 23rd.
So it would have been unveiled in front of a large audience.
It may have been a bit of a bombshell had this whole thing not happened.
If not for this kerfuffle we're now talking about, this paper kind of just would have
been a news item in itself.
It probably would have been on this show.
But now, well now the paper's kind of going to be a flop, isn't it?
It's going to be covered in kerfuffle stink.
And partly that may well be deserved.
But I have to ask, what about the questions the research was trying to address?
How vulnerable is the kernel to patches from malicious actors?
That's probably something we should ask, even if we don't think this line of research was
a good way to go about answering it.
Yeah, even if it's something that's further up the user stack, maybe it doesn't have quite
the resources.
I think that's kind of the downside to how the research team handled this is now the
reaction to it and the correction to it has prevented what is probably a pretty valuable
conversation.
And while we don't know everything right now and putting aside how the research was conducted,
it seems like reading through all of this that there was code that got accepted in 2020
and was not caught by the maintainer.
It might validate that this attack vector really is possible.
I'm sure we've known about this, right?
We know nation state actors have targeted the kernel before, but what we don't have
a great picture of is how well has that worked?
Now these were all pretty small, seemingly trivial patches, but I'd like to know more.
Yeah, and I think the researchers had them rolled back, they emailed in, oh no, we caught
something, we need to fix this, before it was actually committed to the actual kernel
tree.
It didn't seem like there was any, at least of these three, nothing made it to a distribution
or anything.
And they self-corrected before it went too far.
I would agree that it seems like if you take their paper at good faith here, that was always
their intent.
They didn't ever want to actually add new vulnerabilities to the kernel, they were just
trying to see if they could get maintainers to say, looks good.
In some senses, it's like, oh yeah, obviously.
If you pretend to be a good actor for a while and then you sneak in some code, a busy maintainer
is going to let that in.
That's not a big surprise, breaking news, ha ha.
But at the same time, it does kind of raise the question, could we build better tooling?
Is there something we could do that's maybe automated that would be checking for these
kinds of things?
And I think the real crime, the unspoken crime here that we haven't said out loud is they
burned kernel developer time.
They took, they used, they stole kernel developer time.
And those maintainers and the developers of the kernel are so busy that that should be
a crime against humanity.
And that's the unspoken part that we haven't said out loud yet, is that's really what happened
here.
And that's the crime they've committed essentially, because nothing ever made it into production.
Well on a happier note, while Greg was off dealing with that kerfuffle, Linus was hard
at work on a shiny new kernel.
That's right, after a week delay, the Linux 5.12 kernel has been released.
Linus Torvalds wrote in a brief announcement, thanks to everybody who made last week, very
calm indeed, which just makes me feel much happier about the final 5.12 release.
Linux 5.12 brings Intel variable rate refresh, Radeon RX 6000 series overclocking support,
and of course, mainline support for the Nintendo 64.
Linode.com slash LAN.
Go there to receive a $100 60-day credit towards your new account, and of course, you go there
to support the show.
Linode is the largest independent cloud computing provider.
But really, Linode is where you go if you just want to spin something up on the web
for yourself, for your company.
Maybe it's a portfolio, maybe it's the backend infrastructure for your company's website.
I've been using them for just over about two and a half years, and they're the only company
I recommend for people that want to host something online.
No matter what skill level you're at, or what technology stack you use, Linode can help
your ideas come to life on the web.
If you run into any trouble, well I've got good news.
They have the absolute best customer service, 24-7 by phone or ticket, they're going to
help you, along with hundreds of guides and tutorials to make sure you have the confidence
to put something into production.
And Linode is easy to use, while still being powerful.
They got started in 2003, and they have focused on one thing and one thing only, and made
it fantastic.
They've added features where it makes sense, like S3-compatible object storage, cloud firewalls,
and a great selection of simple one-click application deployments.
And all of it is backed by super fast networking, 11 data centers, crazy quick SSDs, AMD epic
CPUs for their dedicated CPU rigs, and of course, they have dedicated GPU machines and
systems that are just $5 a month.
That's why you got to go check it out for yourself.
There's so many good things you can do with Linode, so many different things you can try,
or can also just be a great platform to learn.
Go see why Jupiter Broadcasting has chosen to host everything we've built for JB 3.0
at Linode.
It's not even a question of where we're going to host it.
We know, before the conversation even gets started, we're going to host it at Linode.
So go to linode.com slash LAN, get that $100 60-day credit on your new account, and of
course, you support the show.
Linode.com slash LAN.
Right on schedule, Canonical released Ubuntu 21.04 this week.
It comes with GNOME 3.38.5 and is powered by the Linux 5.11 kernel.
It has some notable new defaults, including Wayland and private home directories, as well
as improved Active Directory integration and a new power mode selector in GNOME settings.
Yeah, the new power mode selector, it looks pretty good.
One of the great aspects, though, of a new Ubuntu release is there's a lot of flavors
that release as well.
So that's a lot to cover, but we want to give you a high level.
The new Ubuntu 21.04 features XFCE 4.16.
Ubuntu Budgie now comes with Budgie Desktop 10.5.2, Kubuntu comes with that delicious
Plasma 5.21, and Lubuntu has LXQt 0.16.0.
The mainline Ubuntu and all of the flavors will be supported until February 2022.
If you'd like our take on this new release, we gave it a spin over in Linux Unplugged.
Episode 402.
Also this week, Canonical shared new details on their recently reformed community team.
In a blog post, they wrote, over the past month or so, the beginnings of a new community
team has been taking shape inside Canonical with the specific purpose of serving the community.
On Friday, the team held a live stream to answer questions and featured a member of
the Yaru theme team as a special guest.
This was hopefully the first of regular streams.
If so, you can watch future events live on YouTube via the Ubuntu On-Air YouTube channel
and ask the team questions via Ubuntu discourse.
But all in all, it's a really good release.
Seems super solid.
GNOME 3.3.8 has gotten some nice refinements in this version.
And isn't it nice to see them back on Wayland?
I think we remember when they tried Wayland before and it didn't work out and now Canonical
is doing it in a way where they have time before the next LTS to work out the kinks.
I guess they've learned something.
I hope.
And I hope it works out for them.
But speaking of Wayland, Fedora 34 is just hours away from release as we record.
And there was a prior blocking bug before, but they fixed it.
They got it addressed.
And so in Friday's Go-No-Go meeting, they determined, yes, 34 is fit for release.
Among the changes in 34, of course, is the use of pipeline for all audio needs rather
than pulse audio.
But RFS transparent compression is now enabled by default.
SystemD OOMD is now handling those tight memory situations.
And the plasma spin is on Wayland by default, expanding Fedora's Wayland by default on the
top tier desktop spins.
Fedora 34 is also introducing an ARCH64 based Fedora KDE Plasma desktop spin.
And while that's a mouthful, something tells me you're pretty excited about it, Chris.
I'm thinking that's going on my Pi 400.
We'll have a complete review of the new release in Tuesday's Linux Unplugged, episode 403.
And just a quick note for you Red Hat fans out there, Red Hat Summit 2021 is taking place
this week, April 27th and 28th.
Well, believe it or not, also speaking of Wayland, Microsoft has shipped a preview version
of WSL with graphical Linux application support.
It's called WSLG for short, which is available in the latest Windows 10 Insider builds and
features an OpenGL accelerated rendering pipeline using a custom RDP virtual channel between
the Western RDP server and the client running on the Windows host.
And yet in this process, Microsoft has been upstreaming patches to free RDP.
That's not all though.
Also under the hood is a mini Linux distro, which Microsoft is spinning up behind the
scenes whenever a user launches a new Linux GUI app called CBL Mariner, which stands for
Common Base Linux.
It's also the distro Microsoft uses for containers in Azure's Kubernetes service.
Inside that distro is all the goodies you might need for a modern audio visual enabled
Linux desktop application from PulseAudio to Wayland.
And rather impressively, the open source WSL DVC plugin, which retrieves a list of Linux
GUI applications and creates links for them in the Windows start menu.
I don't know why Wes, but that was the part that surprised me the most because we knew
this graphical support was coming.
We had seen some of their early talks on it, but when I actually sat down on a Windows
box with this enabled and saw that there was like Audacity listed in the start menu that
was actually the Linux version, I guess it was just a level of integration beyond what
I expected.
Same here.
It really is impressive and it seems to be one of the goals they're striving through
throughout this whole WSL project is how do we make this as seamless as possible from
better file sharing across both services to now, yeah, we don't want to run applications
as if they're installed in Windows.
Also nice to see that they're adding a new set of command line tools to make it easier
to manage WSL.
I thought that was pretty nice.
I don't know if it's complete, though, because it seems like not everything was installed
properly when I used the command line tools, but I like where they're going because it's
going to make like just WSL dash dash install and you got a base system up and going.
You will need to be in the Windows Insider program to have access, but it is a big usability
improvement from the rather large set of obscure Windows command lines you otherwise have to
use to enabling features with disom, things like that to get it to work, which is not
as friendly for your Linux users out there.
This always stokes the debate of is this going to make people less inclined to use the Linux
desktop now that you can you can have WSLG on Windows, you can have three or four different
distros in terminal Windows and you can install Linux applications, your favorite Linux applications,
and run them with OpenGL acceleration.
Oh, and just kind of ironically, I suppose they're also going to be Wayland.
So when you run your Linux applications on Windows, you're using Wayland to make it possible.
That's how Microsoft is actually bridging the GUI gap, if you will, and I think that's
remarkable.
Well, this was kind of the last large gap.
I mean, yes, you could do it, but you had to hack it all together yourself.
This makes the whole thing feel a much more integrated as you touched on, but also more
of like a real distro.
I mean, it feels like, you know, Microsoft is shipping this sort of well contained and
thought through system that's kind of fully featured.
I mean, if Ubuntu 2104 wasn't running Wayland, I mean, they'd be behind Microsoft.
You burned Canonical.
But all kidding aside, the experience definitely isn't perfect yet.
I had more than a few issues, including WSLG not installing at all and requiring me to
totally remove WSL before I could get it working again.
And I know you ran into a few issues with setup as well.
Yep, essentially, it just was an incomplete installation because I was trying that new
command line tool, which, like I say, I think that's a good direction to go.
But when you're working with the early preview builds, it's it's beta.
It's definitely beta.
For instance, you also need to make sure you get upgraded specific drivers that enable
the sort of virtual GPU support to make this really efficient.
And at least in Ubuntu, you still have to install all of the sort of normal user land
libraries which adds, I don't know, another 700 megs to your little Linux distro there,
despite the fact that a lot of that's being handled by Microsoft.
There's just no doubt about it when you and I were going back and forth over chat as we
were getting our Windows boxes set up, it is kind of arcane.
When you set up a Windows box from scratch, from from zero, it feels like you've time
traveled back to the 90s.
And I totally appreciate that's not the experience for 99% of Windows consumers.
They buy a machine and Windows is loaded on it.
And so I'm never really going to voluntarily run Windows really, no matter how good WSL
gets.
I'm just kind of hopeful it means in the end we have more Linux users, at least in some
form.
Right.
I think that's kind of where we have to hope is maybe you're a gamer who really needs to
have Windows because that's where all of your games run the best.
Or perhaps you're at work and well, Windows is the workstation that's provided to you.
Maybe you even want to target Linux, but you didn't have a great way to do that.
You didn't have IT staff and you had to build you up a Linux development test workstation.
That's all taken care of for you now.
And it kind of seems like developing desktop Linux apps is one of the use cases Microsoft
has built this in mind.
Isn't that interesting?
They emphasize that a little bit in their video talking about this.
And you know what I think it's for?
What?
Microsoft Outlook.
Their Outlook developers aren't Linux desktop users, but I believe down in my core that
they're working on a brand new version of Outlook.
We already know they're working on an Electron version, but I think they're working on a
version that they're going to bring over to Linux.
The job one is getting the in-house Microsoft developers up to date with WSLG and then once
they have the infrastructure in place, they can actually start working on the Linux desktop
port.
I see your desktop Linux email client master plan.
If you'd like to learn more about WSLG without going through the pain of installing Windows,
you might want to check out a video we'll have linked from Microsoft product manager
Craig Llewellyn where he demos things like using gedit to browse and edit files on his
Windows system and record in WSL with audacity sound coming from the Windows host.
Linux.ting.com.
Go see how much you could save and get $25 off.
They have plans that'll work for a family or plans that'll work for an individual or
plans that'll work for your small business.
I love their new flex plan.
I think it's great because you can have as many lines as you need on your account and
then it's just $10 additional per line.
Every line gets unlimited texts and calls and every line shares the same pool of data
either LTE or glorious 5G.
If we use two gigs or 20 gigs or more, there's a perfect Ting plan for you and every plan
gets access to Ting's award winning, crushing it customer service and their nationwide LTE
and 5G network coverage and the best part, no contracts ever.
What I love about Ting is they have three different networks to choose from and right
now I'm on the Verizon network.
I've moved around depending on the coverage, but I love that they have so many different
options and here's a truth bomb for you.
It's simple to switch to Ting.
Pretty much any phone works because they support so many networks.
So here's what you do.
Get your Ninja outfit on and then head over to linux.ting.com.
Check your current phone, create an account, pick the plan that's right for you and when
you're all done, Ting will send you a SIM card that you pop in your phone and you get
activated in minutes.
So go try it out right now at linux.ting.com.
This past week, our little Linux powered helicopter made three successful flights on Mars.
And what's remarkable about all of this is that Linux, an open source, is at the core
of everything making this possible.
That right there is the team celebrating video sent back to the ground using FFmpeg to put
the process and prepare it for them.
And FFmpeg is one of thousands of open source projects inside these rovers and the rotocopter.
And that's something that JPL and GitHub CEO Nat Friedman wanted to recognize.
And so they worked with JPL to go through the list to look at all of the projects and
discover the nearly 12,000 developers on GitHub who contributed to different aspects of engineering
the new open source software stack.
And those developers they've identified will now have a swanky badge on their profile.
Definitely something to be proud of.
And I appreciate the work GitHub did here just because we know open source is long and
deep and maybe you contributed to some small library somewhere you have no idea and it
was on another planet.
At first, like skeptical pants, Chris was like, a badge, badges, we don't need no freaking
badges.
And then I realized, actually, Chris, if you were to browse somebody's GitHub profile and
you saw that badge on there, I actually think I'd be legit impressed.
And so then I actually kind of think it's neat and you're right, they did have to do
some digging.
It's kind of a cool story.
And I am just, I am just so thrilled that the three successful flights of this Linux
powered rotocopter and what a milestone that this is for Linux in general and in future
space missions.
I mean, we just, we just saw history right here.
I guess that's just what I love about doing this show.
There's history being made every single week and we try to capture it.
Go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And linuxactionnews.com slash contact for ways to get in touch.
You heard us mention it earlier.
Don't miss Linux Unplugged 403.
It's our review of Fedora 34 and why not join us live if you can make it?
Tuesday, 12pm Pacific, 3pm Eastern at jblive.tv.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us and we will see you next week.
