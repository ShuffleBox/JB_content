WEBVTT

00:00.000 --> 00:09.320
Hello, and welcome into Linux Action News, episode 176, recorded on February 14th, 2021.

00:09.320 --> 00:10.320
I'm Chris.

00:10.320 --> 00:11.320
And I'm Wes.

00:11.320 --> 00:12.320
Hello, Wes.

00:12.320 --> 00:16.200
From a very snowy Pacific Northwest, let's do the news.

00:16.200 --> 00:20.840
And let's start with this week's storm in a teacup, again, in an attempt to give you

00:20.840 --> 00:25.440
a little context to a story you might have seen going around.

00:25.440 --> 00:30.880
An Azure customer was outraged after finding himself on the receiving end of an unexpected

00:30.880 --> 00:35.040
LinkedIn message from Ubuntu maker Canonical this week.

00:35.040 --> 00:40.920
The user, Luca Bongiorni, had spun up an instance of the Linux distro on an Azure corporate

00:40.920 --> 00:44.560
subscription in order to test out some new tooling.

00:44.560 --> 00:50.160
Shortly afterwards, however, a message turned up from an enterprise development representative

00:50.160 --> 00:55.400
at Canonical with the ominous phrase, I saw that you spun up an Ubuntu image on Azure.

00:55.400 --> 01:01.260
I noticed that not quite the thing I think the user wanted to see.

01:01.260 --> 01:05.240
He went on to say, though, the creepiest thing to him was that it was a direct contact on

01:05.240 --> 01:09.660
his private LinkedIn account, which he doesn't mingle with his corporate email address, which

01:09.660 --> 01:13.200
means that Canonical either hunted that down, totally possible, that's a standard sales

01:13.200 --> 01:14.400
tactic.

01:14.400 --> 01:18.840
Or Microsoft had somehow linked those things on the backend, reminder, Microsoft owns LinkedIn,

01:18.840 --> 01:21.280
and just sort of provided that as a value add.

01:21.280 --> 01:26.540
He was clearly disturbed by this in part because of how he was contacted.

01:26.540 --> 01:29.920
And Microsoft and Canonical have obviously become good chums.

01:29.920 --> 01:33.560
They just recently boasted about their one year anniversary partnership and what a great

01:33.560 --> 01:35.240
kumbaya it is.

01:35.240 --> 01:39.760
But I don't think this is unique to Microsoft and Canonical.

01:39.760 --> 01:45.120
If you look at the terms of service for Azure, there is a little sentence in there that says,

01:45.120 --> 01:51.720
and if you purchase or use a marketplace offering, we may share with the publisher of such an

01:51.720 --> 01:58.580
offering your contact information and details about the transaction and your usage.

01:58.580 --> 02:02.500
And of course, if you go look at Ubuntu's legal details, they've got a whole section

02:02.500 --> 02:06.800
talking about their ability to market our products or services to you.

02:06.800 --> 02:10.920
Yeah, and even even this guy who was upset, he acknowledges, okay, the data sharing in

02:10.920 --> 02:13.300
some ways is sort of understandable.

02:13.300 --> 02:17.280
These are our cloud products, but he says it should be made clear.

02:17.280 --> 02:18.340
And I kind of agree with him.

02:18.340 --> 02:23.120
On the Azure marketplace, it maybe maybe say when you're just choosing to deploy, 1804,

02:23.120 --> 02:25.880
maybe mention, hey, by the way, we're gonna let Canonical know.

02:25.880 --> 02:29.440
He claims he would not have done the deployment if I had known someone who quote, stalked

02:29.440 --> 02:31.600
me outside of corporate channels, he said.

02:31.600 --> 02:33.640
He wouldn't have done it.

02:33.640 --> 02:37.960
To me, I look at this, Wes, and I think, all right, there's probably more of a middle ground

02:37.960 --> 02:38.960
here.

02:38.960 --> 02:40.280
I mean, I know Canonical released a statement about it.

02:40.280 --> 02:41.280
Yes, they did.

02:41.280 --> 02:46.360
They wrote that, as per the Azure terms and conditions, Microsoft shares with Canonical,

02:46.360 --> 02:51.360
the publisher of Ubuntu, the contact details of developers launching Ubuntu instances on

02:51.360 --> 02:52.460
Azure.

02:52.460 --> 02:57.960
These contact details are held in Canonical's CRM in accordance with privacy rules.

02:57.960 --> 03:04.240
On February 10th, a new Canonical sales representative contacted one of these developers via LinkedIn

03:04.240 --> 03:07.040
with a poor choice of words.

03:07.040 --> 03:12.080
In light of this incident, Canonical will be reviewing its sales training and policies.

03:12.080 --> 03:16.960
Kind of a blame the new guy and a training opportunity excuse in there.

03:16.960 --> 03:21.280
And I'm not really trying to say they need to be excusing this behavior.

03:21.280 --> 03:27.800
I think this is just kind of the reality of a corporate style service like this.

03:27.800 --> 03:30.960
You know, I think, Wes, in some ways, it sort of shows us again that we're at the intersection

03:30.960 --> 03:35.360
of open source ideals and the business world realities, which we were just at last week

03:35.360 --> 03:36.360
as well.

03:36.360 --> 03:37.360
Yeah, exactly.

03:37.360 --> 03:40.860
You know, if this was some sort of proprietary database, perhaps, that I'd paid a subscription

03:40.860 --> 03:46.040
to and was then launching through the marketplace on Azure, I wouldn't be surprised at all about

03:46.040 --> 03:47.040
this.

03:47.040 --> 03:52.640
But the fact that it's Ubuntu and Canonical, which we mostly associate with openness, free

03:52.640 --> 03:55.080
software, that's a little bit different.

03:55.080 --> 03:59.200
But of course, they are also a business trying to make a bunch of money running Ubuntu on

03:59.200 --> 04:00.480
the cloud, and they do.

04:00.480 --> 04:04.280
Yeah, and in a way, you could see there's multiple incentives for Microsoft.

04:04.280 --> 04:08.440
I mean, clearly, the two companies, tighter than ever.

04:08.440 --> 04:11.520
But Microsoft surely extends this to other partners as well.

04:11.520 --> 04:13.120
And you could imagine chewing the other foot here.

04:13.120 --> 04:17.560
If I was selling a service, I'd want to know too, maybe not even to upsell, just to try

04:17.560 --> 04:20.880
to provide you with support and make sure you're having a good experience with the product

04:20.880 --> 04:22.680
you're choosing to run.

04:22.680 --> 04:26.120
And in a way, sort of say, if you need help, don't come to us.

04:26.120 --> 04:29.860
You know, it's sort of a preemptive, these are the guys you need to talk to move that

04:29.860 --> 04:31.280
they're doing here.

04:31.280 --> 04:35.920
And it's also got to be, it's got to, in a way, be a great perk for Canonical to be on

04:35.920 --> 04:36.920
the Azure marketplace.

04:36.920 --> 04:41.000
So Microsoft can use this as a reason to be there because we'll send you sales leads,

04:41.000 --> 04:44.840
we'll hand you a sales lead every time somebody deploys your software.

04:44.840 --> 04:47.400
That's a pretty big incentive for companies.

04:47.400 --> 04:50.720
And I kind of don't know what this guy was expecting when you're on a commercial platform

04:50.720 --> 04:51.720
like Azure.

04:51.720 --> 04:55.720
I get that the creep factor here is that you were tracked down on LinkedIn.

04:55.720 --> 05:02.320
But again, it's just sort of this super voysterous denouncement of Microsoft immediately when

05:02.320 --> 05:05.080
the situation ends up being a lot more nuanced.

05:05.080 --> 05:08.560
And I don't want to come on the show and be a Microsoft defender here, but this just seems,

05:08.560 --> 05:11.960
again, kind of like just traditional business practices.

05:11.960 --> 05:14.520
And in a way, gives us a data point.

05:14.520 --> 05:18.360
It gives us a data point why Microsoft doesn't need to buy Canonical here.

05:18.360 --> 05:22.640
They can work together and make money and still independently do what each other does

05:22.640 --> 05:23.640
best.

05:23.640 --> 05:26.440
So it seems like they're plenty close already.

05:26.440 --> 05:31.160
Well a few items we've been covering on this show are actually landing this week that you

05:31.160 --> 05:32.840
probably want to keep an eye out for.

05:32.840 --> 05:39.360
If you're a plasma user, one of those is 521, which should release this week.

05:39.360 --> 05:43.440
GNOME 40 has gotten a lot of attention lately, and rightly so.

05:43.440 --> 05:47.840
But 521 looks to be one of the best plasma releases ever.

05:47.840 --> 05:52.920
Couple of just off the top of my head features that I'm excited about are the new app launcher,

05:52.920 --> 05:55.520
improvements to K-Runner, you can pin it now.

05:55.520 --> 05:57.360
There's a new theme called Breeze Twilight.

05:57.360 --> 06:00.920
There's the new plasma system monitor app that is really slick.

06:00.920 --> 06:06.320
Tons of Wayland improvements, including mixed refresh rate display, and other performance

06:06.320 --> 06:09.920
improvements, stability improvements that have been packed into 521.

06:09.920 --> 06:15.860
If like us, you just can't wait, an easy way to try it out is to grab KDE Neon, which has

06:15.860 --> 06:20.200
a stable Ubuntu base, but that fresh hot plasma goodness.

06:20.200 --> 06:23.200
I think that's a funny way to put it.

06:23.200 --> 06:27.080
And Wes and I are going to try it out, so tune in to Linux Unplugged for our hands-on

06:27.080 --> 06:28.080
this week.

06:28.080 --> 06:30.440
And just a side note, there's some KATE improvements.

06:30.440 --> 06:33.640
That's the text editor in plasma, or one of the text editors.

06:33.640 --> 06:38.560
KATE is 20 years old and is more amazing than ever.

06:38.560 --> 06:43.000
It's a fantastic open source software success story where a product doesn't have to make

06:43.000 --> 06:46.200
a ton of revenue, but it can get 20 years of development.

06:46.200 --> 06:51.080
And now when I need a lightweight, super fast, native binary that can be a text editor that

06:51.080 --> 06:56.240
has marked down syntax support, or pretty much any syntax support highlighting you'd

06:56.240 --> 07:01.160
want, KATE is my go-to, and some nice features are landing in 521.

07:01.160 --> 07:06.020
I'm just glad we got you to stop talking about nano.

07:06.020 --> 07:09.480
Another item we've been keeping a watch on for you lands this week.

07:09.480 --> 07:14.880
That's Linux 5.11, and it is heavy on new features because this is the first stable

07:14.880 --> 07:22.480
kernel after the LTS release, and also the first major stable kernel of 2021.

07:22.480 --> 07:26.200
Included in there is all kinds of interesting features, but let's start in the world of

07:26.200 --> 07:27.640
file systems.

07:27.640 --> 07:31.920
Something I was happy to see was that the ButterFS file system has a couple new mount

07:31.920 --> 07:38.160
options intended to help with the rather unwelcome task of rescuing data off of a corrupted file

07:38.160 --> 07:39.160
system.

07:39.160 --> 07:42.640
This has been something that's been a little tricky sometimes, maybe even requiring help

07:42.640 --> 07:46.500
from the mailing list if you've got a severely corrupted drive.

07:46.500 --> 07:50.840
Now there'll be a couple of new rescue mount options you can add that will hopefully make

07:50.840 --> 07:52.580
things a little bit simpler.

07:52.580 --> 07:56.760
Nice to see that when you're in a tricky situation, it's nice to have a few more options to get

07:56.760 --> 07:58.080
your data back.

07:58.080 --> 08:02.640
Another feature that caught my eye was syscall user dispatch, which actually we've talked

08:02.640 --> 08:05.080
about a little bit before.

08:05.080 --> 08:10.200
And that's a new system for intercepting system calls made by some Windows programs under

08:10.200 --> 08:15.960
Wine, they basically sidestep a whole bunch of APIs, try to perform syscalls directly.

08:15.960 --> 08:21.840
And it mostly happens in the context of digital rights management, DRM or anti-cheating schemes.

08:21.840 --> 08:26.920
Syscall user dispatch allows for efficiently redirecting system calls for just a portion

08:26.920 --> 08:27.920
of a binary.

08:27.920 --> 08:31.480
So you can just sort of hook in the game, just the part that's trying to do the anti-cheat

08:31.480 --> 08:32.480
system.

08:32.480 --> 08:36.280
And then the system calls get redirected from just going to the underlying system back to

08:36.280 --> 08:38.920
Wine so that Wine can handle them properly.

08:38.920 --> 08:42.440
I have been looking forward to that.

08:42.440 --> 08:46.460
Now also some hardware support, some of us have been looking forward to LANs, lots of

08:46.460 --> 08:51.480
new ARM hardware support, finally the support for that failed OUYA Android game console

08:51.480 --> 08:53.280
that's shipping.

08:53.280 --> 08:57.960
You ThinkPad users will appreciate the new Palm Sensor detection support that is being

08:57.960 --> 08:59.560
added by Lenovo.

08:59.560 --> 09:04.020
And you Dell users are going to like the fact that Dell is exposing some BIOS configuration

09:04.020 --> 09:10.240
settings via SysFS to allow manipulating some Dell settings deep down inside via Linux.

09:10.240 --> 09:16.340
And while we're in the world of hardware, complete Wi-Fi 6 support LANs in 5.11 with

09:16.340 --> 09:17.340
Wi-Fi 6E.

09:17.340 --> 09:21.180
Yeah, that's some of that fancy 6 gigahertz stuff.

09:21.180 --> 09:26.440
Also if you've got a Ryzen or Epic chip, well that should be five to six percent faster

09:26.440 --> 09:30.680
out of the box with the brand new kernel, which boy, if that isn't a reason to upgrade.

09:30.680 --> 09:31.680
No kidding.

09:31.680 --> 09:34.240
Yeah, that's like new hardware almost.

09:34.240 --> 09:35.240
That's great.

09:35.240 --> 09:40.820
Speaking of new hardware, the Intel XE graphics are looking great on Linux 5.11 as well with

09:40.820 --> 09:45.080
some nice performance improvements.

09:45.080 --> 09:46.900
Linode.com slash LAN.

09:46.900 --> 09:52.420
Go there to get a $100 60 day credit towards a new account and of course support the show.

09:52.420 --> 09:54.680
Linode is our cloud hosting provider.

09:54.680 --> 09:57.920
All of the JB 3.0 infrastructure runs on Linode.

09:57.920 --> 10:00.200
My personal stuff runs on Linode.

10:00.200 --> 10:04.000
They started in 2003 as one of the first companies in cloud computing.

10:04.000 --> 10:07.120
Three years before AWS and the other enterprise providers.

10:07.120 --> 10:08.660
So they know how to do this right.

10:08.660 --> 10:13.160
They have focused in on a few things and they rock at those things.

10:13.160 --> 10:17.280
They're still independently owned today and now they're dedicated to offering the best

10:17.280 --> 10:19.360
virtualized cloud computing out there.

10:19.360 --> 10:22.840
If it runs on Linux, it runs on Linode.

10:22.840 --> 10:26.800
And personally, one of the things I love about Linode is how many different Linux distributions

10:26.800 --> 10:27.800
they support.

10:27.800 --> 10:33.720
The Arch, the CentOS, of course some Debian releases, some Fedora releases, OpenSUSE,

10:33.720 --> 10:36.480
several versions of Ubuntu, Debian, and more.

10:36.480 --> 10:39.000
But what I really get about them is their passion for Linux.

10:39.000 --> 10:41.620
They try things nobody else is doing.

10:41.620 --> 10:44.320
And you know they have one click application deployments.

10:44.320 --> 10:47.520
And you may even know they have a one click WordPress deployment.

10:47.520 --> 10:51.480
But what you might not know about is something a little different that they have in their

10:51.480 --> 10:52.480
marketplace.

10:52.480 --> 10:55.920
It's called open light speed WordPress.

10:55.920 --> 10:59.120
This is the WordPress I deploy.

10:59.120 --> 11:01.300
It's blazing fast.

11:01.300 --> 11:03.560
The web server is the cache.

11:03.560 --> 11:10.640
It's the open light speed project with PHP, MySQL, and WordPress all integrated into their

11:10.640 --> 11:11.640
cache.

11:11.640 --> 11:15.240
It gives you metrics and crazy fast performance and you combine that with Linode's object

11:15.240 --> 11:20.960
storage and you will have the fastest WordPress website you have ever used.

11:20.960 --> 11:22.520
There's a lot of functionality with WordPress.

11:22.520 --> 11:26.480
The only penalty is usually that performance and you can solve that with this stack.

11:26.480 --> 11:30.160
I'll have a link to that in the show notes so you can see what I've been talking about.

11:30.160 --> 11:34.360
That's the one I've used for some of my personal projects and it's the one I would use for

11:34.360 --> 11:35.760
JB today.

11:35.760 --> 11:40.180
But of course they have GPU compute, object storage like I mentioned, and then a cloud

11:40.180 --> 11:44.520
dashboard to manage all of this that makes it super straightforward, simple to get backup,

11:44.520 --> 11:45.960
simple to deploy.

11:45.960 --> 11:47.700
You don't have to be an expert.

11:47.700 --> 11:52.440
But if you are, you can dig under the hood just a little bit and get access to all of

11:52.440 --> 11:53.440
the tools.

11:53.440 --> 11:56.240
I really like that about Linode and I think you will too.

11:56.240 --> 11:59.480
I appreciate them supporting projects and I appreciate them supporting this show.

11:59.480 --> 12:05.320
So show them a little love, go to linode.com slash lan, get that $100 60 day credit and

12:05.320 --> 12:06.320
support the show.

12:06.320 --> 12:09.600
It's a great way to say thanks to Linode for sponsoring Linux Action News.

12:09.600 --> 12:13.120
That's linode.com slash lan.

12:13.120 --> 12:18.800
In local Linux news this week, System76 has finally started revealing some details about

12:18.800 --> 12:22.320
their custom keyboard they've been teasing us about.

12:22.320 --> 12:25.160
Configurable keyboard hype mode begins, Wes.

12:25.160 --> 12:29.320
I now have a new appreciation for how geeky people are about keyboards after we restarted

12:29.320 --> 12:33.340
the Coderadio program and I'm kind of down.

12:33.340 --> 12:36.080
I think System76 could nail this.

12:36.080 --> 12:41.120
It appears they're going to call it the launch, so it's a System76 launch configurable keyboard

12:41.120 --> 12:45.840
and they say it'll be the quote ultimate user controlled keyboard experience and it's open

12:45.840 --> 12:48.440
source down to the PCB and mechanical design.

12:48.440 --> 12:51.000
The firmware will also be open source.

12:51.000 --> 12:56.680
It'll be manufactured out of milled aluminum using two solid blocks of aluminum and then

12:56.680 --> 13:01.960
a powder coated finish and the keyboard also supports a detachable lift bar, a customizable

13:01.960 --> 13:06.680
layout, swappable keycaps and even the switches can be swapped out with any MX compatible

13:06.680 --> 13:08.200
footprint.

13:08.200 --> 13:13.720
As for connectivity, well you can connect via USB-C or USB-A and you'll find two of

13:13.720 --> 13:16.480
each of those ports on the keyboard.

13:16.480 --> 13:22.160
The keyboard firmware supports independent RGB lighting to create your own RGB LED patterns

13:22.160 --> 13:25.880
and all of the software and firmware is open source.

13:25.880 --> 13:31.320
Even better, firmware updates can be obtained by our favorite FWAPD and the design files,

13:31.320 --> 13:33.040
well they're also open.

13:33.040 --> 13:35.280
So I think I see a couple of positive developments out of this.

13:35.280 --> 13:38.340
I mean obviously number one there is that they're working upstream with the Linux vendor

13:38.340 --> 13:39.960
firmware service.

13:39.960 --> 13:42.960
That's really cool to see, but think about it Wes.

13:42.960 --> 13:46.820
If you're gonna build a machine, if you're gonna build a full computer and you've never

13:46.820 --> 13:51.040
built a laptop before, you've never built something that complicated, isn't it a bit

13:51.040 --> 13:55.000
of a brilliant strategy to start with a keyboard because not only do you have to nail that

13:55.000 --> 13:59.600
and you learn so much, but that is a product that anyone can buy.

13:59.600 --> 14:04.480
They don't have to be an existing System76 customer and it's an obvious upsell to any

14:04.480 --> 14:07.320
future System76 machine.

14:07.320 --> 14:11.240
You'll see every configuration page going forward have the optional System76 launch

14:11.240 --> 14:12.240
keyboard.

14:12.240 --> 14:14.080
It fits very nicely in their arsenal.

14:14.080 --> 14:17.840
It's an easy way to get started out with the brand if you're interested in that and it's

14:17.840 --> 14:22.480
just a great way for them to flex their manufacturing muscles, go through the process one more time.

14:22.480 --> 14:27.560
I mean, you know, the Thaleo is still new in many ways, so this should help refine those

14:27.560 --> 14:28.560
processes.

14:28.560 --> 14:31.840
I know they've learned a lot already and I'm sure they'll learn even more with this.

14:31.840 --> 14:35.440
Yeah, and of course the Thaleo is beautiful.

14:35.440 --> 14:41.960
I'm sure they figured a lot, but they're still shipping another manufacturer's motherboard

14:41.960 --> 14:47.040
and mainboards, whereas they are building this one here and when they get to build the

14:47.040 --> 14:50.680
whole thing from the ground up, what we see is a lot of our boxes are checked.

14:50.680 --> 14:54.040
I mean, the way we're even finding out about this really is because it's on GitHub and

14:54.040 --> 14:59.580
we can just see the information and that is pretty telling on how I think they're going

14:59.580 --> 15:00.840
to run this thing.

15:00.840 --> 15:02.160
I like the potential here.

15:02.160 --> 15:04.440
Of course, I'm a big fan of System76.

15:04.440 --> 15:09.640
They've been a sponsor on this show, obviously, but I think this is an indication of how serious

15:09.640 --> 15:15.960
they're taking open Linux hardware and this is a long journey they're going to have to

15:15.960 --> 15:20.200
go down to build these things, but this is a super important step and it's not even something

15:20.200 --> 15:25.480
Apple got right for a long time, so it's brilliant they're starting here and I know for you,

15:25.480 --> 15:28.160
it's going to mean you can finally get your RGB game on.

15:28.160 --> 15:33.780
Finally, I was just waiting for a keyboard that supported Rust.

15:33.780 --> 15:39.280
Also in the local section this week, it looks like AMD is hiring more than a few engineers

15:39.280 --> 15:43.640
and perhaps this is thanks in part to their increasing sales in the enterprise and the

15:43.640 --> 15:48.160
high-performance area where Linux is very successful for them and they've been pretty

15:48.160 --> 15:54.560
good lately at delivering reliable Linux support, but there is some notable room for improvement

15:54.560 --> 16:00.560
that we've touched on and others like Michael Larbell at Ferronix have touched on and perhaps

16:00.560 --> 16:04.360
there is some more staffing that could be done to actually improve that stuff.

16:04.360 --> 16:08.980
Well, it seems that's the direction AMD is going because based on recent job postings,

16:08.980 --> 16:12.120
it seems that AMD is trying to make strides in several areas.

16:12.120 --> 16:17.400
AMD is looking for a manager to oversee all their Linux kernel and virtualization development.

16:17.400 --> 16:21.440
The manager will oversee the engineers working on designing, implementing, and testing the

16:21.440 --> 16:24.200
Linux features for AMD CPUs.

16:24.200 --> 16:25.200
Hmm.

16:25.200 --> 16:26.200
Hmm.

16:26.200 --> 16:27.940
I like the sound of that Wes.

16:27.940 --> 16:33.640
Also this next one, Linux Technical Lead, the engineering lead will have a workload

16:33.640 --> 16:39.680
that includes coordinating with OEM partners and tier one Linux distributions around new

16:39.680 --> 16:41.920
features and components.

16:41.920 --> 16:46.040
I don't know what they consider a tier one Linux distribution, but this was an area with

16:46.040 --> 16:48.520
the 6000 series that they specifically got some feedback.

16:48.520 --> 16:54.040
Hey, it'd be great if you worked with a few more distros to help get support on day one

16:54.040 --> 16:55.040
shipping.

16:55.040 --> 16:58.920
It sounds like this role, this technical lead, will do just that working with quote tier

16:58.920 --> 17:03.400
one Linux distributions, which is really probably going to be what a lot of the derivatives

17:03.400 --> 17:04.400
are based off of.

17:04.400 --> 17:07.780
So that will have a trickle down effect of some sorts, excuse the term.

17:07.780 --> 17:11.100
But on top of that, it seems that they're also going to attempt to keep partners and

17:11.100 --> 17:16.000
distributions up to date with future AMD developments and Linux support.

17:16.000 --> 17:20.060
And if none of that sounds like it's up your alley, well maybe the fact that they're also

17:20.060 --> 17:24.420
hiring for Linux engineering and systems architect roles and a whole bunch of other traditional

17:24.420 --> 17:28.240
software and hardware engineering might be more your cup of tea.

17:28.240 --> 17:32.680
And credit to Michael Larbrel, he noted something I think is worth discussing here.

17:32.680 --> 17:36.840
He says that a lot of these new job descriptions begin with a very key phrase, and that is

17:36.840 --> 17:42.520
quote, step up to a new organization built to engage more strategically and deeply with

17:42.520 --> 17:46.120
technical teams of our commercial customers.

17:46.120 --> 17:50.080
Now he says what's interesting about that is he only sees those opening lines on their

17:50.080 --> 17:58.160
current Linux job postings, not on other organizational job openings right now, which kind of implies

17:58.160 --> 18:05.240
I think, Wes, that there's a bit of a restructuring in AMD to kind of institutionalize and sustainably

18:05.240 --> 18:07.120
develop and support Linux.

18:07.120 --> 18:09.240
Ah, that would be nice to see.

18:09.240 --> 18:12.400
I mean, clearly Linux has a lot of support going for AMD.

18:12.400 --> 18:16.880
There's more and more of a partnership with graphics drivers taking up a huge amount of

18:16.880 --> 18:19.220
the kernel these days.

18:19.220 --> 18:21.000
That's got to be a good sign.

18:21.000 --> 18:24.880
One other piece that really caught my eye is that there are a number of firmware engineering

18:24.880 --> 18:32.040
job openings mentioning Coreboot, including some noting this role enables Coreboot technology

18:32.040 --> 18:33.840
on AMD products.

18:33.840 --> 18:36.560
Maybe more Coreboot support coming soon.

18:36.560 --> 18:41.440
And one last note about AMD stuff here and the Linux 5.11 release, which is coming out

18:41.440 --> 18:49.100
this week, that 5.11 release has initial enablement for the new Ryzen 5000 series laptops, which

18:49.100 --> 18:50.680
are due this quarter.

18:50.680 --> 18:56.000
So if you get a brand new Ryzen 5000 laptop in the next few weeks, be sure you're running

18:56.000 --> 18:59.820
a distro that has Linux 5.11 or later on there.

18:59.820 --> 19:04.940
Or maybe you won't be running Linux at all on that shiny new hardware because Google

19:04.940 --> 19:10.640
has been developing Fuchsia, an operating system that is distinctly not based on Linux.

19:10.640 --> 19:16.360
The latest proposal for Fuchsia shows just how this not Linux operating system might

19:16.360 --> 19:21.600
get the ability to run unmodified programs intended for both Linux and Android.

19:21.600 --> 19:27.400
And I don't think we're too surprised that they're going to try to get application compatibility.

19:27.400 --> 19:32.400
What we are surprised by in this announcement, or at least this proposal, is that Fuchsia

19:32.400 --> 19:34.600
is going to accomplish it differently than we expected.

19:34.600 --> 19:39.640
If you look at Chrome OS today, they're using a project called ArcVM to run Android applications

19:39.640 --> 19:41.600
unmodified on Chrome OS.

19:41.600 --> 19:46.280
And I think a lot of people suspected it'd be some kind of Google Linux virtual machine

19:46.280 --> 19:48.920
that would bring compatibility to Fuchsia.

19:48.920 --> 19:54.680
And we've gotten these indications along the way that perhaps Fuchsia is going to be an

19:54.680 --> 19:56.600
Android replacement.

19:56.600 --> 19:59.900
And so that's why we kind of assumed they would solve this problem.

19:59.900 --> 20:02.960
But it doesn't seem they're going to do it with a VM, Wes.

20:02.960 --> 20:07.840
No, this week we learned in a proposal that there's an alternative solution available

20:07.840 --> 20:11.120
for Fuchsia to run programs meant for Android and Linux.

20:11.120 --> 20:15.200
Instead of actually running a whole darn Linux kernel, Fuchsia would gain a system called

20:15.200 --> 20:20.880
Starnix, which would act as a translator between instructions for the Linux kernel and instructions

20:20.880 --> 20:23.160
for Fuchsia's Zircon kernel.

20:23.160 --> 20:24.160
It's not wine.

20:24.160 --> 20:25.720
Don't call it an emulator.

20:25.720 --> 20:31.920
But it's kind of detailed in this proposal what they sort of see the use case for.

20:31.920 --> 20:36.480
For example, they say Android applications contain native code modules that have been

20:36.480 --> 20:38.160
compiled for Linux.

20:38.160 --> 20:43.200
In order to run this software on Fuchsia, we need to be able to run binaries without

20:43.200 --> 20:44.200
modifying them.

20:44.200 --> 20:50.640
For example, we will run low-level test binaries from Android's source tree, as well as binaries

20:50.640 --> 20:52.880
from the Linux test project.

20:52.880 --> 20:57.240
This says to me that we might be seeing Google trying to get Fuchsia to have deep support

20:57.240 --> 20:58.760
for Android apps, right?

20:58.760 --> 21:03.040
Sometimes, you know, a lot of times even, it's just a whole bunch of Java.

21:03.040 --> 21:06.680
But if you're doing stuff, maybe targeting some machine learning API, something a little

21:06.680 --> 21:12.680
more performance intensive, or just custom, you could be shipping some C or C++ code in

21:12.680 --> 21:13.680
there.

21:13.680 --> 21:16.520
And of course, you're going to need support for a different OS.

21:16.520 --> 21:21.920
Yeah, it's worth reading the link in the show notes, linuxactionnews.com, slash 176.

21:21.920 --> 21:25.920
Because if you read the whole thing, I think you just inevitably walk away with the sense

21:25.920 --> 21:30.300
that they are clearly going after Android, and potentially, this is what they're going

21:30.300 --> 21:31.920
to run on their servers too.

21:31.920 --> 21:37.440
But all that said, this Starnix stuff is only a proposal right now.

21:37.440 --> 21:42.880
There is a significant amount of work needing to be done to get anything resembling proper

21:42.880 --> 21:48.600
compatibility here, and it's potentially possible that they may still end up just solving this

21:48.600 --> 21:49.600
with a VM.

21:49.600 --> 21:50.600
Right.

21:50.600 --> 21:51.600
We have that technology.

21:51.600 --> 21:52.600
And it's interesting.

21:52.600 --> 21:53.920
I mean, this is a common approach.

21:53.920 --> 22:00.940
FreeBSD has an emulation layer available for Linux, and WSL 1 sort of took this approach.

22:00.940 --> 22:06.600
But of course, they ultimately went back to virtualization with WSL 2.

22:06.600 --> 22:11.120
I think a lot of it will depend on just how different Fuchsia and Zircon are, and how

22:11.120 --> 22:15.920
much of a mess it is to actually make that translation happen.

22:15.920 --> 22:17.760
Linux.ting.com.

22:17.760 --> 22:20.440
New year, new plans, same great service.

22:20.440 --> 22:26.280
I've been a Ting customer forever, and I can tell you with confidence, now is the best

22:26.280 --> 22:27.960
time ever to join Ting.

22:27.960 --> 22:32.920
It's new, refreshed plans, but still everything you love about them.

22:32.920 --> 22:37.200
If you use two gigs or 20 gigs a month, there is a perfect Ting plan for you.

22:37.200 --> 22:39.320
They have multiple carriers to choose from.

22:39.320 --> 22:41.960
I'm currently on a mix of AT&T and Verizon.

22:41.960 --> 22:43.200
I can actually change it up.

22:43.200 --> 22:44.200
This is great.

22:44.200 --> 22:48.780
And there's no need to worry about any weird bills or contracts, because Ting gives you

22:48.780 --> 22:51.720
the freedom of no contracts ever.

22:51.720 --> 22:55.120
And when people refer you to Ting, the first thing they're always going to mention is the

22:55.120 --> 22:57.320
crazy low bills.

22:57.320 --> 23:00.040
That's like the number one thing people love about Ting.

23:00.040 --> 23:05.160
But number two on that list is their top rated customer support.

23:05.160 --> 23:08.080
Nobody in the mobile business does support like Ting.

23:08.080 --> 23:10.160
But sometimes it really matters.

23:10.160 --> 23:17.440
One time I was stuck out in North Dakota parked in a parking lot, a gravel parking lot, stuck

23:17.440 --> 23:19.280
with a no data MiFi.

23:19.280 --> 23:24.340
And the Ting rep worked with me for two hours while we got everything troubleshot and brought

23:24.340 --> 23:25.340
to resolution.

23:25.340 --> 23:28.720
They went way above and beyond anything they needed to do.

23:28.720 --> 23:32.920
And now, Ting customers can choose from different mobile plans that are based on your specific

23:32.920 --> 23:34.000
data needs.

23:34.000 --> 23:37.120
And it's super, super simple to switch to Ting.

23:37.120 --> 23:40.720
Pretty much any phone works because they have so many networks that they support.

23:40.720 --> 23:47.760
Just start by going to linux.ting.com support this show and get $25 of Ting credit.

23:47.760 --> 23:50.960
You can buy you can buy your SIM, I don't know what you're going to do with that.

23:50.960 --> 23:54.880
Maybe you're going to pay for your first month because average Ting bill is less than $25.

23:54.880 --> 23:55.880
I don't know.

23:55.880 --> 24:00.360
But you make the decision when you go to linux.ting.com you can pick up a phone or bring your own.

24:00.360 --> 24:01.360
Just check your compatibility.

24:01.360 --> 24:03.200
It's super simple to do.

24:03.200 --> 24:04.800
Perhaps you just need a new SIM.

24:04.800 --> 24:08.960
Ting will send you one, you pop it into your phone and you get activated in minutes.

24:08.960 --> 24:12.880
Cutting your phone bill in half has never been easier with Ting's new plans.

24:12.880 --> 24:16.480
The next generation of Ting Mobile is here and see how much you could save by going to

24:16.480 --> 24:19.420
linux.ting.com.

24:19.420 --> 24:24.700
If you are on Wi-Fi and you can sync your music and your podcasts, that small little

24:24.700 --> 24:27.880
tweak will blow your mind how much you can save.

24:27.880 --> 24:34.120
Why pay more for the same networks when you can use them and save by going to linux.ting.com.

24:34.120 --> 24:42.720
And a big thank you to Ting for sponsoring this episode of Linux Action News, linux.ting.com.

24:42.720 --> 24:47.740
We're going to finish up this week with a few items we think might be worth your time

24:47.740 --> 24:50.400
after the show and what we're calling homework.

24:50.400 --> 24:56.760
And the first is the story about a 24 year old kernel bug was finally found.

24:56.760 --> 24:57.840
This is a tale.

24:57.840 --> 24:59.840
It is a journey.

24:59.840 --> 25:03.480
We'll have it linked at linuxactionnews.com slash 176.

25:03.480 --> 25:09.200
The chief information officer at an e-commerce platform in Greece called Scouts made really

25:09.200 --> 25:10.640
quite the discovery.

25:10.640 --> 25:12.120
And it is well detailed.

25:12.120 --> 25:17.080
We won't go into too many details just here, but they thought they'd found a bug in our

25:17.080 --> 25:20.520
sink, but oh no, turned out to be so much more.

25:20.520 --> 25:22.880
We also have a little SSH homework for you.

25:22.880 --> 25:26.360
No, not the show, the actual SSH.

25:26.360 --> 25:29.880
You probably are familiar at least roughly with SSH tunnels.

25:29.880 --> 25:33.640
But we've seen a visual guide going around the internet this week that we think is pretty

25:33.640 --> 25:37.640
keen and we wanted you kids to have it, so we put a link for it in the show notes.

25:37.640 --> 25:43.520
It is a great way to learn and understand how these very handy SSH tunnels really work

25:43.520 --> 25:46.040
and all the different things you can do with them.

25:46.040 --> 25:49.840
And your last item in the links this week for you to follow up on, if you'd like, is

25:49.840 --> 25:54.780
if you have some time to burn at least, the FOSDEM 2021 videos from their virtual event

25:54.780 --> 25:57.080
are starting to pop up online now.

25:57.080 --> 26:01.760
But if you do check those out and spot something you think we should cover in one of those

26:01.760 --> 26:05.280
videos, be sure to let us know on our contact page.

26:05.280 --> 26:06.280
Indeed.

26:06.280 --> 26:10.640
Also, check out linuxactionnews.com slash subscribe for all the ways to get new episodes.

26:10.640 --> 26:15.080
And linuxactionnews.com slash contact for that contact page I mentioned.

26:15.080 --> 26:20.320
Jupiter Broadcasting's first swag item in more than two years has launched and it is

26:20.320 --> 26:22.600
called The Coder.

26:22.600 --> 26:28.200
The Coder.shop, look and feel comfortable while kicking ass, life is better in a Coder

26:28.200 --> 26:30.320
radio robe.

26:30.320 --> 26:35.580
We'll be back next Monday with our weekly take on the latest Linux and open source news.

26:35.580 --> 26:55.720
Thanks for joining us and we will see you next week.

