1
00:00:00,000 --> 00:00:09,660
Hello, and welcome to Linux Action News, episode 185, recorded on April 18th, 2021. I'm Chris.

2
00:00:09,660 --> 00:00:10,660
And I'm Wes.

3
00:00:10,660 --> 00:00:12,680
Hello, Wes. Let's do the news.

4
00:00:12,680 --> 00:00:17,320
And we start with news from Dell, who've announced they'll spin out their stake in

5
00:00:17,320 --> 00:00:22,340
VMware, with the two companies agreeing to continue to operate without major changes

6
00:00:22,340 --> 00:00:24,620
for the next five years.

7
00:00:24,620 --> 00:00:29,920
On a conference call for investors, Dell founder and CEO Michael Dell emphasized the short

8
00:00:29,920 --> 00:00:35,840
term benefits to shareholders, saying, as much as we grew the revenues of VMware, the

9
00:00:35,840 --> 00:00:41,080
market does not appear to appreciate a hardware-software combination.

10
00:00:41,080 --> 00:00:45,240
It's interesting to see Michael Dell flip his position from a total 180 in August of

11
00:00:45,240 --> 00:00:51,360
2019, when he was asked about why Dell EMC and VMware were good together. His explanation

12
00:00:51,360 --> 00:00:55,280
was companies like that combination of hardware and software.

13
00:00:55,280 --> 00:01:01,320
Yeah, look, I think customers have told us very clearly, they don't want to be systems

14
00:01:01,320 --> 00:01:07,040
integrators anymore. And they're looking for fewer partners and bringing together, you

15
00:01:07,040 --> 00:01:14,160
know, a broad set of capabilities across the infrastructure, security, client devices,

16
00:01:14,160 --> 00:01:21,320
the cloud, digital transformation, enabling all those capabilities for customers. They'd

17
00:01:21,320 --> 00:01:25,680
much rather work with one leading company than 20 or 30.

18
00:01:25,680 --> 00:01:29,560
Perhaps what Dell learned was that industries don't really like lock into hardware and

19
00:01:29,560 --> 00:01:33,800
software vendors at the same time. And maybe they want some flexibility there. But either

20
00:01:33,800 --> 00:01:38,120
way, we'll save that for the analysis. Back to the story details here. Like Wes said,

21
00:01:38,120 --> 00:01:42,560
this deal includes a five year agreement on the two businesses essentially just carrying

22
00:01:42,560 --> 00:01:49,120
on as they do today, followed by an automatic annual extension to the deal unless one of

23
00:01:49,120 --> 00:01:53,060
the companies says no more, we're calling it off. Dell, which is an important aspect

24
00:01:53,060 --> 00:01:59,320
of their revenue will continue to resell VMware products, makes up about 35% ish of their

25
00:01:59,320 --> 00:02:03,400
revenue right now. So you can imagine the sales department was pretty relieved to see

26
00:02:03,400 --> 00:02:05,220
that deal would stay in place.

27
00:02:05,220 --> 00:02:10,480
It's also worth noting that Michael Dell will keep his seat on VMware's board and retains

28
00:02:10,480 --> 00:02:15,700
the right to appoint another director. And while the announcement was made after markets

29
00:02:15,700 --> 00:02:23,280
closed, Dell shares popped 8% in after hours trading. VMware rose 1.5%. The deal is expected

30
00:02:23,280 --> 00:02:27,900
to close sometime in the fourth quarter of this year, but could still be called off if

31
00:02:27,900 --> 00:02:32,520
it isn't done by early 2022. If either of the companies backs out or if something goes

32
00:02:32,520 --> 00:02:34,720
pear shaped in any other way.

33
00:02:34,720 --> 00:02:40,180
I guess initially, the market seems to like this. Little birdies have been hinting to

34
00:02:40,180 --> 00:02:44,320
Wes and I behind the scenes that this was coming for a while. Our buddy Drew actually

35
00:02:44,320 --> 00:02:50,280
predicted this on Linux Unplugs annual predictions episode and VMware's leader, like they're

36
00:02:50,280 --> 00:02:56,320
what is now going to be their CEO, was hinting back in September of 2019 that maybe things

37
00:02:56,320 --> 00:03:01,220
would be just fine if the two companies spun off from each other. You could see that there

38
00:03:01,220 --> 00:03:06,280
was a need for some breathing room by VMware. The market's getting competitive for them.

39
00:03:06,280 --> 00:03:10,680
They do a lot today. They still have a very strong market share and a very good market

40
00:03:10,680 --> 00:03:16,640
position. However, companies like IBM and Red Hat and many others are coming for their

41
00:03:16,640 --> 00:03:22,440
lunch, their core bread and butter. And my read of this situation is they just needed

42
00:03:22,440 --> 00:03:27,620
more flexibility. They needed to divorce themselves from a particular hardware vendor and make

43
00:03:27,620 --> 00:03:32,100
themselves more universally available. I imagine that's exactly what they're going to achieve

44
00:03:32,100 --> 00:03:33,100
with this.

45
00:03:33,100 --> 00:03:36,900
They're a legacy company in many ways, or at least from an older era, who've been trying

46
00:03:36,900 --> 00:03:41,840
to establish themselves in the new world of cloud and the marketplaces there, and I think

47
00:03:41,840 --> 00:03:47,340
have made some good inroads. But being tied to other legacy companies like Dell that really

48
00:03:47,340 --> 00:03:53,600
are invested in non-cloud areas or EMC before that, maybe it's just holding them back. What's

49
00:03:53,600 --> 00:03:59,020
interesting is this announcement coming from Dell because it doesn't seem as advantageous

50
00:03:59,020 --> 00:04:00,020
for them.

51
00:04:00,020 --> 00:04:06,600
When they purchased EMC, when Dell purchased EMC, which included VMware, it was a 67 billion

52
00:04:06,600 --> 00:04:13,200
dollar transaction, the largest in tech history, just a ginormous acquisition. And VMware makes

53
00:04:13,200 --> 00:04:17,920
up a pretty big part of that EMC acquisition. It was like clearly a big part of why they

54
00:04:17,920 --> 00:04:22,960
bought it. And the idea was is Dell had now the hardware to do the storage, the compute

55
00:04:22,960 --> 00:04:27,240
and the software to do the virtualization. And if you want to go big centralized storage,

56
00:04:27,240 --> 00:04:32,040
they've got all this EMC tech as well. But it just didn't quite bloom into what I think

57
00:04:32,040 --> 00:04:38,320
they were expecting. And I do think that a big part of their core business today is on

58
00:04:38,320 --> 00:04:42,840
premises data centers, small business data centers, large businesses who want to run

59
00:04:42,840 --> 00:04:47,560
their own infrastructure. That's still their bread and butter. But obviously, as the world

60
00:04:47,560 --> 00:04:53,080
changes and a lot of these shops go to a hybrid setup, they have to have some sort of solution

61
00:04:53,080 --> 00:04:57,360
there. And they've got like three or four irons in that fire right now trying to solve

62
00:04:57,360 --> 00:05:02,000
that problem. And none of them really have anything to do with Dell. And so when you

63
00:05:02,000 --> 00:05:06,200
look at it from like what's VMware doing today and how is VMware positioning themselves?

64
00:05:06,200 --> 00:05:11,800
They were already kind of leaving Dell behind before this even happened. I'll be interested

65
00:05:11,800 --> 00:05:16,280
to see if anything changes with VMware's role at the Linux Foundation. You know, they do

66
00:05:16,280 --> 00:05:20,360
contribute a lot of things to open source and are involved in standards bodies and different

67
00:05:20,360 --> 00:05:27,600
organizations as an independent company. Are they going to be able to keep doing that?

68
00:05:27,600 --> 00:05:33,060
System 76, makers of Linux hardware, has announced they are developing Cosmic, the computer operating

69
00:05:33,060 --> 00:05:39,920
system main interface components, a set of in-house extensions developed for GNOME Shell.

70
00:05:39,920 --> 00:05:45,240
The initial release of Cosmic is due in June alongside with Pop! West 2104 and will be

71
00:05:45,240 --> 00:05:51,900
based on GNOME 3.38. Cosmic itself is not a fork of GNOME, which it has been described

72
00:05:51,900 --> 00:05:53,200
by as some.

73
00:05:53,200 --> 00:05:58,360
System 76 said it studied user behavior and sought to refine key elements of the desktop

74
00:05:58,360 --> 00:06:03,920
accordingly. Say, for example, the activities overview, the core navigation tool in the

75
00:06:03,920 --> 00:06:10,560
GNOME desktop. It's now been split under Cosmic into two views, one just for workspaces, open

76
00:06:10,560 --> 00:06:16,380
windows and virtual desktops, and one for launching applications. Cosmic is also adding

77
00:06:16,380 --> 00:06:23,560
a dock by default because, at least according to System 76, over 56% of Pop! West users

78
00:06:23,560 --> 00:06:26,920
already use Dash to Dock or Dash to Panel.

79
00:06:26,920 --> 00:06:33,900
We asked Karl if they consider Cosmic to be ultimately a fork of GNOME or just a set of

80
00:06:33,900 --> 00:06:35,560
super extensions.

81
00:06:35,560 --> 00:06:40,880
Cosmic is an extension that creates a unique user interface while maintaining compatibility

82
00:06:40,880 --> 00:06:47,000
with GNOME, GNOME extensions, and the GNOME app ecosystem. We haven't found anything that

83
00:06:47,000 --> 00:06:52,980
we want to do yet that requires a fork, and we hope doing so is not required. Avoiding

84
00:06:52,980 --> 00:06:57,400
forking makes our work useful to people in other distributions.

85
00:06:57,400 --> 00:07:03,320
I like hearing that. When asked if they just considered basing the whole thing on the Plasma

86
00:07:03,320 --> 00:07:05,720
desktop, which would let them customize some of this, Karl said,

87
00:07:05,720 --> 00:07:11,600
Most of our work over the years has been in GTK. It would be a much larger decision to

88
00:07:11,600 --> 00:07:16,640
port that work over. We spent some time investigating writing larger portions of the desktop from

89
00:07:16,640 --> 00:07:22,760
scratch and did look at Plasma, but we haven't been persuaded that we'd had a lot of value

90
00:07:22,760 --> 00:07:25,240
in either of those directions.

91
00:07:25,240 --> 00:07:29,800
Fair enough if your team is more of a GTK team. That just makes sense. So we gave it

92
00:07:29,800 --> 00:07:35,600
a go before the show today, and I'd say individually, the components that make up Cosmic on their

93
00:07:35,600 --> 00:07:41,640
own are subtle. They subtly change the GNOME shell experience. It still feels like core

94
00:07:41,640 --> 00:07:49,160
GNOME, but when you bring all of the Cosmic components together, it begins to feel still

95
00:07:49,160 --> 00:07:54,080
like GNOME, but a unique GNOME, differentiated from all of the other desktop experiences

96
00:07:54,080 --> 00:07:59,760
out there. And of course, it requires this new Cosmic experience, this extension that

97
00:07:59,760 --> 00:08:05,920
breaks out workspaces and applications into two individual windows. The whole experience

98
00:08:05,920 --> 00:08:10,520
that requires everything they've built, all of the extensions from tiling, window management,

99
00:08:10,520 --> 00:08:15,120
and now this Cosmic stuff, along with their theme, kind of really make it all shine and

100
00:08:15,120 --> 00:08:16,920
a unique experience.

101
00:08:16,920 --> 00:08:21,000
It takes a lot to make a GNOME experience that's out of this world.

102
00:08:21,000 --> 00:08:26,640
I guess that's true. And they've done a pretty good job. I'm not 100% sure that I like breaking

103
00:08:26,640 --> 00:08:31,400
out the overview of your windows and your applications. I actually think one of the

104
00:08:31,400 --> 00:08:37,920
nice things the GNOME team did was brought all of that into one interface. I don't know,

105
00:08:37,920 --> 00:08:39,000
we'll see.

106
00:08:39,000 --> 00:08:44,440
System 76 seems to be implying that they're using data and user surveys to drive some

107
00:08:44,440 --> 00:08:49,500
of these design decisions. So they may have somewhere that they're aiming for. We'll have

108
00:08:49,500 --> 00:08:54,760
to really wait till June and they release ISO images for that complete experience, though.

109
00:08:54,760 --> 00:08:59,480
I know there's been a lot of speculation about how System 76 would continue to have developed

110
00:08:59,480 --> 00:09:04,240
the GNOME desktop after all the work they've been putting in Pop OS and Pop Shell and adding

111
00:09:04,240 --> 00:09:08,600
these changes. And I think that's why there's so much conversation and confusion about,

112
00:09:08,600 --> 00:09:12,840
is this a fork? Because it seems like folks are worried that there might be a fork in

113
00:09:12,840 --> 00:09:17,120
the future here. But so far, it's kind of impressive how much they've been able to do

114
00:09:17,120 --> 00:09:18,120
just with extensions.

115
00:09:18,120 --> 00:09:23,560
Yeah, it makes you wonder if that isn't going to be a challenge for them as the GNOME team

116
00:09:23,560 --> 00:09:28,760
starts to address some of their extension shortcomings, but also begins to address other

117
00:09:28,760 --> 00:09:34,800
technological shortcomings in the GNOME Shell. Will System 76 have a hard time keeping up?

118
00:09:34,800 --> 00:09:39,800
And I guess, will Ubuntu? Because they are already basing this on GNOME 3.3.8. Well,

119
00:09:39,800 --> 00:09:44,380
my laptop over here is running GNOME 40. So that means to use this, I have to go back

120
00:09:44,380 --> 00:09:50,440
a version of GNOME, which all said, I probably wouldn't really lose much, you know, because

121
00:09:50,440 --> 00:09:53,960
they've got a nice experience here, but it already kind of puts them behind the ball.

122
00:09:53,960 --> 00:09:57,200
And it's not really their fault. That's just what Ubuntu, which they're based on, is doing.

123
00:09:57,200 --> 00:10:03,560
But what I see here is maybe the first signs that highly customizing GNOME like this does

124
00:10:03,560 --> 00:10:09,880
kind of put you behind a little bit. And with so much coming down the pipe to make the GNOME

125
00:10:09,880 --> 00:10:14,520
experience better, I'm kind of of the opinion that I want to be on the latest and greatest

126
00:10:14,520 --> 00:10:18,840
GNOME all the time. And maybe they can get it there, especially if Ubuntu gets it there.

127
00:10:18,840 --> 00:10:22,400
Maybe they just inherit all of that work. But right now, I'm wondering if we're just

128
00:10:22,400 --> 00:10:26,720
kind of seeing some of the early signs of when you go in heavy on customizations, you

129
00:10:26,720 --> 00:10:31,840
end up behind. I guess we'll have to wait till 2110 to find out. If you're curious,

130
00:10:31,840 --> 00:10:36,360
though, and you'd like to give the Cosmic components a try before the beta is out, you'll

131
00:10:36,360 --> 00:10:42,520
find the packages in the System76 POP PPA. Otherwise, the sources are on GitHub and in

132
00:10:42,520 --> 00:10:48,720
our show notes. But do keep in mind, this is far from the final product. System76 also

133
00:10:48,720 --> 00:10:54,960
says they're looking for Windows and Mac users to experience Cosmic firsthand. If that might

134
00:10:54,960 --> 00:11:02,960
be you or someone you know, you can help out by contacting UX at System76.com.

135
00:11:02,960 --> 00:11:08,360
Linode.com slash LAN. Go there to get a $100 60 day credit towards a new account. And of

136
00:11:08,360 --> 00:11:12,680
course, you go there to support the show. Did you know Linode is the largest independent

137
00:11:12,680 --> 00:11:17,300
cloud provider out there? They started in 2003 as one of the first companies in cloud

138
00:11:17,300 --> 00:11:23,200
computing three years, three years before AWS or other enterprise providers, and they

139
00:11:23,200 --> 00:11:29,040
are still independently owned and doing it right. They have refined it to an art and

140
00:11:29,040 --> 00:11:33,620
no matter what skill you're at, or whatever technology stack you use, Linode can help

141
00:11:33,620 --> 00:11:39,480
your ideas come to life on the web. If you run into any kind of trouble or any kind of

142
00:11:39,480 --> 00:11:46,720
problems, Linode comes with amazing, fantastic customer service 24 seven by phone or by ticket.

143
00:11:46,720 --> 00:11:50,160
They're going to help you if you've got one Linode or you got 100. They're going to make

144
00:11:50,160 --> 00:11:54,420
sure you get it taken care of. There's also hundreds of guides and tutorials to help you

145
00:11:54,420 --> 00:11:58,500
make sure you're getting things set up just right and have the confidence to actually

146
00:11:58,500 --> 00:12:03,280
put those things into production. That's what I love about their guides. Sometimes I just

147
00:12:03,280 --> 00:12:06,360
want to make sure I'm doing it right. And they got lots of good guides to help you do

148
00:12:06,360 --> 00:12:11,160
that and Linode is easy to use with a powerful cloud dashboard. And you can tell there's

149
00:12:11,160 --> 00:12:15,840
little hints in there that the people that build this stuff love Linux. And one of the

150
00:12:15,840 --> 00:12:19,480
features outside of just server hosting that I think is fantastic, even though they got

151
00:12:19,480 --> 00:12:24,240
11 data centers around the world, super fast 40 gigabit connections, crazy fast native

152
00:12:24,240 --> 00:12:31,800
SSDs, AMD epic processors for their dedicated CPU rigs. They also have s3 compatible object

153
00:12:31,800 --> 00:12:38,280
storage. Chew on that for a second. Just marinate that in your brain on what you could do with

154
00:12:38,280 --> 00:12:44,120
Linode s3 compatible object storage. And yeah, they got cloud firewalls. And of course, they

155
00:12:44,120 --> 00:12:49,800
got simple one click application deployments, and so much more. That's why you got to check

156
00:12:49,800 --> 00:12:56,640
it out yourself. So go to linode.com slash LAN, get that $100 60 day credit on your new

157
00:12:56,640 --> 00:13:01,380
account and kick the tires. See what I've been talking about and help make this show

158
00:13:01,380 --> 00:13:07,400
possible all at the same time. That's linode.com slash LAN.

159
00:13:07,400 --> 00:13:12,320
It should come as little surprise, especially given the recent news of Google allowing rust

160
00:13:12,320 --> 00:13:17,480
to be used for Android system level code, that engineers at the search giant are in

161
00:13:17,480 --> 00:13:23,080
support of rust being used in the Linux kernel. In addition to that this week, there was a

162
00:13:23,080 --> 00:13:27,680
rust RFC for the Linux kernel and that discussion is still taking place in the Linux kernel

163
00:13:27,680 --> 00:13:32,200
mailing list. We'll get back to that. But Google engineers, they wanted to optimize the

164
00:13:32,200 --> 00:13:37,960
moments and express their support on the Google security blog stating that we feel that rust

165
00:13:37,960 --> 00:13:44,400
is now ready to join C as a practical language for implementing the kernel. It can help us

166
00:13:44,400 --> 00:13:50,080
reduce the number of potential bugs and security vulnerabilities in privileged code while playing

167
00:13:50,080 --> 00:13:54,520
nicely with the core kernel and preserving its performance characteristics.

168
00:13:54,520 --> 00:14:00,720
Holy moly guacamole, Wes. This seems like this is actually happening. Linus's reaction

169
00:14:00,720 --> 00:14:07,440
to the RFC seems fairly positive, inquisitive, you might say. He definitely has some questions

170
00:14:07,440 --> 00:14:14,480
he wants answered. But he said, quote, on the whole, I don't hate it. But he also said

171
00:14:14,480 --> 00:14:20,320
that the runtime failure panic is a fundamental issue. So, Wes, I was hoping you kind of explain

172
00:14:20,320 --> 00:14:25,640
to us what this runtime failure panic is that Linus is referring to.

173
00:14:25,640 --> 00:14:31,080
I thought you might ask, but I'm going to punt to Steve Klabnik, Rust core team member

174
00:14:31,080 --> 00:14:36,360
who said on Hacker News that the short explanation, this code wasn't in its final form yet, but

175
00:14:36,360 --> 00:14:40,520
good enough to ask for a high level review. The review came back said, hey, this looks

176
00:14:40,520 --> 00:14:46,360
OK overall, but I have some questions. So really, the RFC never claimed to be in a shape

177
00:14:46,360 --> 00:14:50,600
to be immediately mergeable into the kernel. Part of the problem is about the way Rust

178
00:14:50,600 --> 00:14:55,460
panics. And this is kind of a big moment for Rust because up to now, yes, it has been used

179
00:14:55,460 --> 00:15:01,000
for some kernel development. Look at the Zircon kernel over in Fuchsia or Redux OS, but nothing

180
00:15:01,000 --> 00:15:07,320
quite as big in production as the Linux kernel. Of course, there are a lot of Rust applications.

181
00:15:07,320 --> 00:15:11,200
And in those, most of the time, those applications don't really handle the situation of running

182
00:15:11,200 --> 00:15:15,860
out of memory well. And you want something like a panic where you just kill that thread,

183
00:15:15,860 --> 00:15:20,800
give up, something's gone wrong, you don't have memory, try again or just crash the system.

184
00:15:20,800 --> 00:15:24,960
That's bad in the kernel. You don't want the kernel to die. The kernel is the one in charge

185
00:15:24,960 --> 00:15:28,840
of memory allocation. So you need it to get a reasonable result back and then be able

186
00:15:28,840 --> 00:15:31,640
to do something else to try to free up memory, whatever has to happen.

187
00:15:31,640 --> 00:15:34,680
Yeah, you definitely don't want it panicking while it's in the kernel.

188
00:15:34,680 --> 00:15:39,620
Definitely. But the nuance that got lost here was really the use of alloc, just the call

189
00:15:39,620 --> 00:15:43,760
in Rust to allocate memory, the normal one. That was just a temporary measure to speed

190
00:15:43,760 --> 00:15:48,500
up development. And that's why the RFC really wasn't meant to be merged as is. The point

191
00:15:48,500 --> 00:15:52,040
of this discussion is to say, yes, there's some work to do, we need to make the memory

192
00:15:52,040 --> 00:15:56,600
allocation do some fine tuning there as long as the rest of this looks good. And if it

193
00:15:56,600 --> 00:16:00,680
does look good, which at least sounds like to Linus and many other folks, it does in

194
00:16:00,680 --> 00:16:05,840
kernel Rust support is to the point that prototyping modules can start now. We can work out some

195
00:16:05,840 --> 00:16:10,720
more of that binding code, figure that out, get that, you know, up to Linus's satisfaction,

196
00:16:10,720 --> 00:16:12,400
but go start trying to use it.

197
00:16:12,400 --> 00:16:16,680
Well, and what Linus has identified as an issue here sounds like they also already think

198
00:16:16,680 --> 00:16:21,700
is an issue and are working towards solving. So that's pretty positive. Android is taking

199
00:16:21,700 --> 00:16:25,560
this a step further, right? They're doing like their Bluetooth stack in Rust. And you

200
00:16:25,560 --> 00:16:31,720
look at things that are inherently low hanging fruit, like the wireless driver support stack

201
00:16:31,720 --> 00:16:36,140
in the Linux kernel. And you wonder if maybe that wouldn't be better rewritten in a more

202
00:16:36,140 --> 00:16:40,420
memory safe language. But additionally, on top of all this, besides the what could be

203
00:16:40,420 --> 00:16:46,200
some nice technical advantages supporting Rust, there's the human advantage. It allows

204
00:16:46,200 --> 00:16:51,840
the kernel team, which skews a little older Wes to tap into new hype around Rust and maybe

205
00:16:51,840 --> 00:16:56,840
appeal to new developers that are willing to contribute to the kernel, but just don't

206
00:16:56,840 --> 00:17:00,360
like contributing in C, they want to contribute in Rust.

207
00:17:00,360 --> 00:17:04,600
Yeah, I think that despite Rust obviously having its own learning curve, you know, C

208
00:17:04,600 --> 00:17:10,680
is an old language, you might not know what resources to use. And just beyond all of that,

209
00:17:10,680 --> 00:17:14,360
Rust is modern. It's got a linter, it's got a package manager built right in. Now, you're

210
00:17:14,360 --> 00:17:17,260
not going to use all those things in the kernel world, it's definitely going to be different.

211
00:17:17,260 --> 00:17:21,360
But just as a language to learn and try to bridge to get someone who might just be doing,

212
00:17:21,360 --> 00:17:24,640
you know, web development on the side, but wants to start playing with the kernel, Rust

213
00:17:24,640 --> 00:17:25,640
seems like a good fit.

214
00:17:25,640 --> 00:17:30,800
Well, speaking of the kernel, if all goes as planned, we will have a brand new Linux

215
00:17:30,800 --> 00:17:36,520
5.12 next weekend. It was supposed to land this weekend, but after looking at everything,

216
00:17:36,520 --> 00:17:42,360
the team decided to put out one more release candidate and hold off on the release until

217
00:17:42,360 --> 00:17:47,240
next week, which all in all is probably a pretty good decision because the 5.12 release

218
00:17:47,240 --> 00:17:50,720
cycle has been kind of bumpy, slightly.

219
00:17:50,720 --> 00:17:55,240
Caution is good in a project like Linux kernel, but you can't fool me, Chris. I know you were

220
00:17:55,240 --> 00:18:01,320
just waiting for that N64 support, but you'll have to wait one more week. Don't worry, though.

221
00:18:01,320 --> 00:18:06,600
We'll have all the details about 5.12 in the next Linux Action News.

222
00:18:06,600 --> 00:18:12,280
Linux.ting.com. Ting is my mobile service provider, and it has never been a better time

223
00:18:12,280 --> 00:18:18,520
to try out Ting in all of the years I have ever used Ting. Linux.ting.com will get you

224
00:18:18,520 --> 00:18:23,400
$25 off. And I know it's hard to get a good family plan, too, and I want to mention this

225
00:18:23,400 --> 00:18:28,600
for everyone. Ting has solved this particular pain point. As many lines as you need on your

226
00:18:28,600 --> 00:18:35,000
account, it's just $10 per line. Every single line has unlimited texts and calls, and every

227
00:18:35,000 --> 00:18:40,360
line shares that same pool of data so you can budget and plan accordingly. And if you

228
00:18:40,360 --> 00:18:45,280
use two or 20 gigabytes or even more of data, there's a perfect Ting plan for you. Every

229
00:18:45,280 --> 00:18:50,880
plan gets access to Ting's award-winning customer service. Award-winning customer service.

230
00:18:50,880 --> 00:18:55,360
Not just like regular customer service, but like the extra good kind of customer service.

231
00:18:55,360 --> 00:18:58,480
And that matters. You'll notice that if they got good customer service, I'm going to tell

232
00:18:58,480 --> 00:19:02,720
you about it, and Ting does. Something else I love from a technical side, though, is they

233
00:19:02,720 --> 00:19:08,320
have nationwide LTE and 5G networks to choose from. I'm presently on the Verizon network,

234
00:19:08,320 --> 00:19:11,440
but there may be something in your area that has great signal, and they have all of the

235
00:19:11,440 --> 00:19:16,080
maps to help you figure it out. One thing about Ting to keep in mind is they keep things

236
00:19:16,080 --> 00:19:21,040
simple. It's really easy to switch to Ting, and it's really easy to get your new phone

237
00:19:21,040 --> 00:19:24,880
or an old phone set up. Pretty much any phone's going to work on Ting because they got so

238
00:19:24,880 --> 00:19:30,480
many dang networks. So just head to linux.ting.com to check your current phone, create an account,

239
00:19:30,480 --> 00:19:35,140
and pick up the plan that's just right for you. Right for you could be something very

240
00:19:35,140 --> 00:19:39,040
different than what I use, but that's the beautiful thing about Ting. You get what's

241
00:19:39,040 --> 00:19:42,080
right, they send you a SIM card, you pop it in, you go to their website, within minutes

242
00:19:42,080 --> 00:19:46,200
you're going. Really, that's it. Like the time it takes you to hear this, you could

243
00:19:46,200 --> 00:19:50,840
be up and running on Ting. Cut your phone bill in half in minutes and get started with

244
00:19:50,840 --> 00:19:56,120
Ting. Just go to linux.ting.com.

245
00:19:56,120 --> 00:20:01,640
The team behind Matrix, Element Matrix Services, also known as EMS, have announced they're

246
00:20:01,640 --> 00:20:08,120
launching a hosted bridge for Microsoft Teams. A single Microsoft Teams bridge supports unlimited

247
00:20:08,120 --> 00:20:14,120
users across unlimited channels. And the pricing is actually based on the number of active

248
00:20:14,120 --> 00:20:20,680
users that are using the bridge from Microsoft Teams at a cost of 50 cents per user per month.

249
00:20:20,680 --> 00:20:24,740
And then all of the other traffic and stuff related to that is free. But what's notable

250
00:20:24,740 --> 00:20:29,720
about this release, at least if you're not a Microsoft Teams user anyway, is that when

251
00:20:29,720 --> 00:20:35,660
they were asked if the bridge would be open source, they said no. The bridge itself is

252
00:20:35,660 --> 00:20:41,160
not going to drop into the open source matrix code anytime soon. This is an entirely new

253
00:20:41,160 --> 00:20:46,920
bridge that we've built exclusively for Element Matrix Services, which is the SaaS hosting

254
00:20:46,920 --> 00:20:52,240
platform we provide in order to keep the lights on for Matrix development and for Element

255
00:20:52,240 --> 00:20:53,240
in general.

256
00:20:53,240 --> 00:20:57,360
Yeah, they kind of make a joke about how if you're rich enough to pay for Teams, you're

257
00:20:57,360 --> 00:20:59,120
rich enough to pay for our bridge.

258
00:20:59,120 --> 00:21:03,600
You know, I have to give them some credit there. Matrix is pretty neat. It's definitely

259
00:21:03,600 --> 00:21:09,480
a useful product and you have to fund it somehow. I think this just caught some of us by surprise.

260
00:21:09,480 --> 00:21:15,160
Yeah, not going open source. Yeah, I agree. But I think when you look at the client for

261
00:21:15,160 --> 00:21:18,560
this, these are clients that use Teams that are trying to get to platforms maybe that

262
00:21:18,560 --> 00:21:23,520
Teams isn't on. Or another use case that I think they mentioned in their press announcement,

263
00:21:23,520 --> 00:21:28,440
but I know companies I've worked for would be all over this, is DR, disaster recovery,

264
00:21:28,440 --> 00:21:34,200
is it like maybe Teams is down option or a backup in searchable index of Teams. That's

265
00:21:34,200 --> 00:21:38,240
super valuable there too. And you don't even have to do it for all your users necessarily.

266
00:21:38,240 --> 00:21:44,440
So there's really, when you look at the customer base here, Wes, I think I see their logic.

267
00:21:44,440 --> 00:21:48,160
It would be nice if you could self-host this, right? Like if you could just run this on

268
00:21:48,160 --> 00:21:52,760
your own VPS or your own on-premises box, that would be ideal.

269
00:21:52,760 --> 00:21:56,160
And to that point, I suppose I should note that there's nothing stopping a willing developer

270
00:21:56,160 --> 00:22:00,400
out there for making an open source Teams bridge if they want. Although it's not going

271
00:22:00,400 --> 00:22:01,400
to be me.

272
00:22:01,400 --> 00:22:06,200
This is why friends just don't let friends use Teams.

273
00:22:06,200 --> 00:22:12,720
Speaking of Microsoft, Microsoft's WSL team has just shipped the latest Linux 5.10 series

274
00:22:12,720 --> 00:22:18,720
kernel to Windows Insiders. And the new update brings some nice to see improvements.

275
00:22:18,720 --> 00:22:23,800
The way Microsoft works on the Linux kernel is fascinating. They have a Linux system group

276
00:22:23,800 --> 00:22:28,400
that is responsible for creating the WSL2 kernel, as well as the ones that run on Azure

277
00:22:28,400 --> 00:22:34,400
and a lot of their other devices. They have like a department at Microsoft that is dedicated

278
00:22:34,400 --> 00:22:39,080
to Linux kernel development. And once they say they have a new version ready, they pass

279
00:22:39,080 --> 00:22:44,560
it on to the WSL team. The WSL team runs it through a series of tests. They test it internally

280
00:22:44,560 --> 00:22:49,680
extensively. And then once it's passed those tests, they ship it off to the Windows Insiders.

281
00:22:49,680 --> 00:22:54,280
Those crazy batch of living on the edge Windows users then pull down the latest Microsoft

282
00:22:54,280 --> 00:22:58,880
updates and in this one, they're going to get a Linux kernel update that will add Lux

283
00:22:58,880 --> 00:23:06,200
disk encryption. And with some nice WSL fancy command line love, you will be able to mount

284
00:23:06,200 --> 00:23:10,100
those Lux disks inside of a Windows host.

285
00:23:10,100 --> 00:23:16,340
This shiny new kernel also fixes a clock sync issue that caused WSL2 instances to have a

286
00:23:16,340 --> 00:23:21,760
different time than the actual time on the host machine. Not what you'd expect. Windows

287
00:23:21,760 --> 00:23:26,480
Insiders out there just need to run Windows update and they'll be upgraded to the latest

288
00:23:26,480 --> 00:23:32,360
kernel version. Microsoft shipping Linux kernels in Windows update. I'm still not used to

289
00:23:32,360 --> 00:23:36,880
it.

290
00:23:36,880 --> 00:23:41,160
And one last story in the Microsoft and Windows world. Thank you to Michael over at Ferronix

291
00:23:41,160 --> 00:23:45,880
for noting that Hangover had a new release. Hangover 0.65 is now available. Forgetting

292
00:23:45,880 --> 00:23:50,720
wine up and running with cross architecture support so you can enjoy the likes of Windows

293
00:23:50,720 --> 00:23:56,360
games and Windows applications under 64 bit arm and even IBM power hardware that's running

294
00:23:56,360 --> 00:23:57,360
Linux.

295
00:23:57,360 --> 00:24:01,600
Yeah, that's right. Hangover, of course, is the project that crafts wine with a modified

296
00:24:01,600 --> 00:24:10,460
QEMU and other bits, allowing x86 32 bit and 64 bit Windows programs to run on alternative

297
00:24:10,460 --> 00:24:16,760
architectures under Linux. But hey, who you call an alternative? As for Wednesday's release

298
00:24:16,760 --> 00:24:23,960
of Hangover 0.65, it now supports starting QEMU automatically if needed amongst a variety

299
00:24:23,960 --> 00:24:24,960
of other improvements.

300
00:24:24,960 --> 00:24:31,280
Well, if those massively powerful arm or even IBM power workstations ever do develop, we'll

301
00:24:31,280 --> 00:24:35,200
tell you about it and everything else that happens in the world of Linux. So just go

302
00:24:35,200 --> 00:24:39,400
to LinuxActionNews.com slash subscribe for all the ways to get new episodes.

303
00:24:39,400 --> 00:24:43,720
And LinuxActionNews.com slash contact for ways to keep in touch.

304
00:24:43,720 --> 00:24:47,740
And a special heads up for you Coder Radio fans. Just for this week, the live time has

305
00:24:47,740 --> 00:24:53,680
moved to Tuesday. Tuesday at 5pm Pacific, 8pm Eastern. It's a special live event. Come

306
00:24:53,680 --> 00:24:58,260
for Linux Unplugged and stay for Coder. That's one huge Tuesday.

307
00:24:58,260 --> 00:25:04,360
And we'll be back next Monday with our weekly take on the latest Linux and open source news.

308
00:25:04,360 --> 00:25:24,680
Thanks for joining us and we will see you next week.

