WEBVTT

00:00.000 --> 00:16.240
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.240 --> 00:20.280
This is episode 53, recorded on May 13, 2018.

00:20.280 --> 00:21.280
I'm Chris.

00:21.280 --> 00:22.280
And I'm Joe.

00:22.280 --> 00:23.280
Hello, Joe.

00:23.280 --> 00:24.460
It's good to be connected with you.

00:24.460 --> 00:28.220
Happy Yankee Mother's Day to you, all the moms out there and all the dude moms.

00:28.220 --> 00:33.000
And let's kick off a big show with Linux apps officially being announced for Chrome OS by

00:33.000 --> 00:34.200
Google this week.

00:34.200 --> 00:38.580
Yeah, this is something that we've been reporting on for what feels like weeks or months at

00:38.580 --> 00:39.760
this point.

00:39.760 --> 00:44.880
But now with Google IO comes the official announcement, although there's not much information

00:44.880 --> 00:45.880
about it.

00:45.880 --> 00:50.620
But at least we know it's definitely happening, that you can actually try it now.

00:50.620 --> 00:54.880
With some dev builds of Chrome OS, you can run proper Linux applications.

00:54.880 --> 00:58.800
Yeah, it appears that Google has created a virtual machine that was designed from scratch

00:58.800 --> 00:59.800
for Chromebooks.

00:59.800 --> 01:01.400
At least this is their claim.

01:01.400 --> 01:06.180
And they say it'll start in seconds and integrate completely with typical Chromebook features.

01:06.180 --> 01:08.920
You'll be able to launch Linux apps with a click of an icon.

01:08.920 --> 01:12.960
The windows can be moved around, files can be opened directly from apps, and there's

01:12.960 --> 01:16.180
a preview that's coming to Pixelbooks soon.

01:16.180 --> 01:17.880
But maybe don't get your hopes up too much.

01:17.880 --> 01:22.280
Yeah, it's going to be the end of the year at least by the time this is actually stable

01:22.280 --> 01:23.960
and completely working.

01:23.960 --> 01:28.840
And even then, it's only going to be on a few high-end Chromebooks that are very expensive.

01:28.840 --> 01:33.280
And at that point, if you're going to spend $1,000 on a machine, aren't you better off

01:33.280 --> 01:34.680
buying a proper Linux machine?

01:34.680 --> 01:35.680
I don't know.

01:35.680 --> 01:39.260
I'm not really too surprised that it's only going to work on the nicer Chromebooks.

01:39.260 --> 01:44.060
What's really happening here is they've created a VM called CROSVM, C-R-O-S-V-M.

01:44.060 --> 01:46.540
And it's using Linux's KVM hypervisor.

01:46.540 --> 01:50.460
So that tells you you're going to have to have some resources, some power to actually

01:50.460 --> 01:52.100
make this thing work.

01:52.100 --> 01:55.560
And you're going to see it trickle out for a bit, and I wouldn't be surprised if the

01:55.560 --> 01:58.960
enterprising community members out there don't get this working in other Chromebooks.

01:58.960 --> 02:03.800
But around July 31, Chrome OS 68 is due.

02:03.800 --> 02:07.740
That's when the beta stuff, like the quote-unquote stable but still kind of beta, you know how

02:07.740 --> 02:12.960
Google does things, that's when that lands, is on version 68, which will be around July

02:12.960 --> 02:14.600
31.

02:14.600 --> 02:18.560
They say, they being folks from Google that spoke with the register, that they're still

02:18.560 --> 02:22.760
having issues getting graphics and sound drivers to play ball.

02:22.760 --> 02:25.680
And on some models, it's trickier than on other models.

02:25.680 --> 02:28.720
And there could be some tweaking required before you'll be able to just fire up Linux

02:28.720 --> 02:30.640
if you get started early.

02:30.640 --> 02:34.560
But like Joe was saying, the quote-unquote fairly stable version isn't expected until

02:34.560 --> 02:38.520
Chrome 71, which is the end of the year.

02:38.520 --> 02:43.800
Maybe by then, you'll see more powerful Chromebook shipping, another iteration, another generation

02:43.800 --> 02:44.800
of Chromebooks.

02:44.800 --> 02:49.120
We may bring that bar up just with the next batch of hardware.

02:49.120 --> 02:53.640
But wasn't the whole point of Chromebooks that they were inexpensive, didn't need much

02:53.640 --> 02:55.960
RAM, didn't need much storage.

02:55.960 --> 03:01.720
And now if you're going to need to have at least four or eight or 16 gigs of RAM and

03:01.720 --> 03:07.440
loads of storage to store all these applications, they're just going to get so expensive that

03:07.440 --> 03:09.960
I return to my original point.

03:09.960 --> 03:11.920
Don't you want a proper laptop at that point?

03:11.920 --> 03:14.480
It does put the Pixelbook into more perspective.

03:14.480 --> 03:16.880
Why has Google been shipping $1,000 Chromebook?

03:16.880 --> 03:19.320
You can start to see some of the reasons.

03:19.320 --> 03:20.320
I don't know, Joe.

03:20.320 --> 03:23.520
I think we're seeing a gold rush here in a way.

03:23.520 --> 03:26.920
You have Microsoft shipping the Windows subsystem for Linux.

03:26.920 --> 03:29.400
You've got Dell shipping the Sputnik laptops.

03:29.400 --> 03:34.200
And now you've got Google working hard to make Linux apps possible on Chromebooks.

03:34.200 --> 03:38.320
They're all trying to get to that dev sweet spot where they can sell a machine to a software

03:38.320 --> 03:39.320
developer.

03:39.320 --> 03:41.700
And they all think they have a different crack on it.

03:41.700 --> 03:45.760
Google's crack is simplicity, replaceability, cloud storage.

03:45.760 --> 03:46.840
But I tend to agree with you.

03:46.840 --> 03:50.320
If they go down this route, they're going to have to redefine what makes a Chromebook

03:50.320 --> 03:53.920
a Chromebook because you're going to need more storage and you're likely going to need

03:53.920 --> 03:55.420
more RAM.

03:55.420 --> 03:58.380
Chrome itself takes quite a bit of system resources.

03:58.380 --> 04:03.240
So to run complicated applications on top of that, I think you will have to redefine

04:03.240 --> 04:04.780
what a Chromebook means.

04:04.780 --> 04:10.200
To me, a Chromebook is something that someone who's never really had a laptop before would

04:10.200 --> 04:11.200
use.

04:11.200 --> 04:15.320
It's a browser and that's pretty much all it was historically.

04:15.320 --> 04:19.040
My mother-in-law has got one and happily uses it and talks to my wife and all the rest of

04:19.040 --> 04:25.840
it on Hangouts and has a great time and it's secure and simple and easy to use.

04:25.840 --> 04:30.320
To target it at a developer, I just don't really see why a developer would want a Chrome

04:30.320 --> 04:36.680
OS device because you could just install Chrome on an XPS 13 or whatever and you're going

04:36.680 --> 04:40.840
to have a broadly similar experience plus way more.

04:40.840 --> 04:46.120
I can see why they want to go after the developers because it is a lucrative market but it just

04:46.120 --> 04:47.400
seems misguided to me.

04:47.400 --> 04:48.400
See, I disagree.

04:48.400 --> 04:50.440
I think this is the brilliance of Google's strategy.

04:50.440 --> 04:54.440
You start out small and simple and you build up from there and with Linux as the base,

04:54.440 --> 04:56.200
they have a lot of potential.

04:56.200 --> 05:00.760
They can get brand trust and recognition for creating laptops that are reliable and easy

05:00.760 --> 05:07.520
to reload and are fairly safe for average users and have maybe the term simplicity implied

05:07.520 --> 05:09.560
to them.

05:09.560 --> 05:13.200
Those are fundamentals that appeal to people that just want to get their job done, that

05:13.200 --> 05:17.120
just want to get work done and there's a lot of developers out there that fit in that category.

05:17.120 --> 05:21.880
If the device is sophisticated enough to do their job but simple enough to stay out of

05:21.880 --> 05:23.640
their way, it's going to be appealing.

05:23.640 --> 05:29.080
But then the other aspect of Chromebooks that is I think pretty important to remember is

05:29.080 --> 05:35.320
the centralized management of them which is extremely appealing to schools, universities

05:35.320 --> 05:36.840
and enterprises.

05:36.840 --> 05:41.920
So you start looking at fleet machines that are cheap to buy in bulk so you can buy standard

05:41.920 --> 05:46.840
universal chargers, standard universal VGA or whatever kind of projector adapter you

05:46.840 --> 05:51.480
might need and you have an orchestration management suite that sits on top of all of them that

05:51.480 --> 05:56.600
lets your enterprise, school, university, whatever manage them from one central point.

05:56.600 --> 06:00.440
It becomes very appealing to these groups to start issuing them as standard machines

06:00.440 --> 06:03.480
and as they become more capable, why not?

06:03.480 --> 06:05.680
Like there becomes less and less reason to do so.

06:05.680 --> 06:09.320
And at the same time, they're converging on that mindset of I just need a machine that

06:09.320 --> 06:14.680
can get my work done and if now I can run Sublime Text or Atom Editor or Visual Studio

06:14.680 --> 06:17.840
Code and I can have Chrome, I'm pretty much good to go.

06:17.840 --> 06:21.440
Yeah, I suppose I was thinking about this from the wrong angle then because I'm thinking

06:21.440 --> 06:26.680
about freelance developers who wouldn't be interested in this but as you say, yes, when

06:26.680 --> 06:31.960
you take into consideration that orchestration and deploying this on a large scale to a lot

06:31.960 --> 06:36.080
of developers or students, then yeah, that suddenly makes more sense.

06:36.080 --> 06:37.880
Maybe I'm not smarter than Google after all then.

06:37.880 --> 06:41.600
Well, it looks like they're finally outsmarting OEMs or at least putting their feet to the

06:41.600 --> 06:46.280
fire with some changes that were sort of under the wire from Google IO this week.

06:46.280 --> 06:51.200
Yeah, this came out of the What's New in Android Security talk from Google IO.

06:51.200 --> 06:55.760
And what Google are doing here is mandating that if you're going to be part of the Android

06:55.760 --> 07:00.840
Partner Program, you're going to have to commit to regular security patches.

07:00.840 --> 07:05.880
We don't know whether that means monthly but you would have thought so, wouldn't you?

07:05.880 --> 07:06.880
I hope so.

07:06.880 --> 07:08.880
I am very elated by this news.

07:08.880 --> 07:12.640
This is something that I have really given Google a hard time about for a long time.

07:12.640 --> 07:17.640
In my personal opinion, this should have been the way these agreements worked from day one.

07:17.640 --> 07:19.360
And I think Google felt differently.

07:19.360 --> 07:23.320
They thought for market adoption reasons that they could backfill this problem.

07:23.320 --> 07:27.480
And so maybe they're right, maybe I was right, but these are changes that will be landing

07:27.480 --> 07:29.480
as of Android P.

07:29.480 --> 07:33.840
So if you're on a release before Android P, I'm sorry to say this will not apply to you,

07:33.840 --> 07:35.340
but there is a silver lining.

07:35.340 --> 07:39.760
When you finally get a P or newer Android device, you're going to take advantage of

07:39.760 --> 07:42.180
a bunch of things that Google's been working on for years.

07:42.180 --> 07:44.520
You've heard us talk about Project Treble before.

07:44.520 --> 07:49.280
That's the modular piece that allows the drivers for the system on a chip and those components

07:49.280 --> 07:52.360
to be developed separately from the Android layer.

07:52.360 --> 07:54.680
And in this talk, they tried to couch this whole thing.

07:54.680 --> 07:59.320
They tried to ease the blow by going through the history of we've been working on Treble,

07:59.320 --> 08:00.440
making this possible.

08:00.440 --> 08:05.440
We're trying to get this easier and easier for OEMs, but if you want to continue to be

08:05.440 --> 08:08.840
our partner, you will begin to patch your devices.

08:08.840 --> 08:12.520
Now we don't know how Google's going to vet this to know if they actually fix the issue

08:12.520 --> 08:16.180
because that's also something we've talked about in the past is sometimes these patches

08:16.180 --> 08:18.680
quote unquote don't fix all of the problems.

08:18.680 --> 08:25.000
And we also don't know if Google has any provisions in place to reprimand partners or set a very

08:25.000 --> 08:26.480
specific timeline.

08:26.480 --> 08:30.120
But early days are looking good and you'll likely be able to find the talk online within

08:30.120 --> 08:32.560
the next couple of days to get the details yourself.

08:32.560 --> 08:37.720
But in the talk, they say, we've been working with our OEMs to build this patching into

08:37.720 --> 08:39.080
our agreements.

08:39.080 --> 08:41.120
Now this is a reality.

08:41.120 --> 08:46.240
It'll lead to a massive increase in the number of devices and users receiving regular security

08:46.240 --> 08:47.240
patches.

08:47.240 --> 08:49.480
And that was Google's head of Android Platform Security.

08:49.480 --> 08:52.240
I am very, very excited to hear that news.

08:52.240 --> 08:57.280
I have been waiting for many Google IOs for them to address this specific problem.

08:57.280 --> 09:01.120
I suspected it was coming when they announced Treble and now this is the other shoe dropping.

09:01.120 --> 09:05.320
But isn't this going to create a two tier system where you've got the more expensive

09:05.320 --> 09:11.160
phones which are part of the partner program and then all of the other cheap ones that

09:11.160 --> 09:13.680
aren't and they won't commit to this.

09:13.680 --> 09:18.320
And so if you can't afford to buy an expensive phone, you're just not going to get any security

09:18.320 --> 09:19.320
updates.

09:19.320 --> 09:20.320
I don't know.

09:20.320 --> 09:21.980
I think we already have that today.

09:21.980 --> 09:27.680
You generally have your premier Android devices from Samsung and other manufacturers that

09:27.680 --> 09:32.320
do get updates, your sort of category leading devices that stay patched because that's what

09:32.320 --> 09:33.980
that customer base wants.

09:33.980 --> 09:37.640
And then you have the lower tier devices which just get neglected.

09:37.640 --> 09:39.400
That's reality today.

09:39.400 --> 09:45.100
With this new security system, they have to comply as part of the partner agreement.

09:45.100 --> 09:48.840
So from here on forward, if they want to ship any new versions of Android with the Google

09:48.840 --> 09:53.920
apps and all of the Play API stuff that is blessed by Google, they have to play ball.

09:53.920 --> 09:56.960
But there's nothing stopping them shipping an old version which we've seen many, many

09:56.960 --> 09:57.960
times before.

09:57.960 --> 10:02.000
You can go and buy a phone now that's got security holes in it that's never going to

10:02.000 --> 10:03.000
get patched.

10:03.000 --> 10:06.440
You do also have to wonder if this is going to lead to some new agreements with some alternative

10:06.440 --> 10:09.680
ROMs that people might just start shipping on their devices instead.

10:09.680 --> 10:10.680
Possibly.

10:10.680 --> 10:13.860
We saw that with CyanogenMod and that didn't end well.

10:13.860 --> 10:15.880
Maybe second time around it might go better.

10:15.880 --> 10:20.960
I don't know if Lineage are particularly interested in doing that, but maybe one ROM maker might

10:20.960 --> 10:21.960
be.

10:21.960 --> 10:22.960
It wouldn't really appeal to me.

10:22.960 --> 10:24.000
This appeals to me.

10:24.000 --> 10:28.520
Having security patches, having the Linux device in my pocket that is connected to the

10:28.520 --> 10:32.840
internet 24-7, it really strongly appeals to me to have it updated and secure.

10:32.840 --> 10:36.680
So now this is something I'll be looking for when I'm shopping for Android devices in the

10:36.680 --> 10:37.680
future.

10:37.680 --> 10:43.400
But you may be shopping for an Android device that you didn't even know was running Android.

10:43.400 --> 10:48.660
At least if Google has their way, Android Things 1.0 is now available for developers

10:48.660 --> 10:51.680
to build commercial IoT products.

10:51.680 --> 10:55.000
How long before Stallman starts calling this Android Stings?

10:55.000 --> 10:56.000
Probably already has.

10:56.000 --> 10:58.440
Yeah, so this is for their IoT devices.

10:58.440 --> 11:04.160
It's a paired down version of Android that will run with very low resources, as little

11:04.160 --> 11:09.920
as 32 megabytes of RAM, which is significantly less than standard Android.

11:09.920 --> 11:15.680
And it is designed for, well, Internet of Things devices, trying to push it to the billions

11:15.680 --> 11:18.240
of devices trying to connect absolutely everything.

11:18.240 --> 11:21.720
There's a gold rush in that area, and Google wants a part of it.

11:21.720 --> 11:25.060
Yeah, we've seen Ubuntu Core, which addresses this.

11:25.060 --> 11:28.560
We've seen Azure Sphere OS, which is addressing this.

11:28.560 --> 11:35.200
And now we're seeing 1.0 of Android Things, which doesn't have a large hardware partnership

11:35.200 --> 11:36.360
to promote.

11:36.360 --> 11:39.700
Doesn't have a huge deep bench of devices.

11:39.700 --> 11:40.700
You can just go load it on.

11:40.700 --> 11:46.040
But it does have one card up its sleeve, and that's support for the Raspberry Pi 3 Model

11:46.040 --> 11:47.040
B.

11:47.040 --> 11:49.240
Now, I saw a screenshot of this on Twitter today.

11:49.240 --> 11:50.960
You've been trying it out on your Raspberry Pi.

11:50.960 --> 11:54.360
Yeah, this is where it's so perfectly Google.

11:54.360 --> 12:00.760
It's great, because you log in to the Android Things dashboard, and you just start creating

12:00.760 --> 12:02.640
a custom image for a device.

12:02.640 --> 12:06.880
And then you can download a little utility that works on Linux, also available for the

12:06.880 --> 12:08.220
Mac and Windows.

12:08.220 --> 12:13.000
And it flashes an SD card with everything you need for Android IoT.

12:13.000 --> 12:14.420
And then you boot the Raspberry Pi.

12:14.420 --> 12:18.680
It connects back up to your account and starts downloading test images or apps that you've

12:18.680 --> 12:20.480
built for it.

12:20.480 --> 12:21.540
It's pretty slick.

12:21.540 --> 12:26.800
And within five minutes, I had a Raspberry Pi that was connecting back to Google's developer

12:26.800 --> 12:30.280
dashboard that was ready for me to turn it into whatever I wanted.

12:30.280 --> 12:34.840
Big question everyone in the audience will be asking is, is Google's dashboard a dashboard

12:34.840 --> 12:35.840
for days?

12:35.840 --> 12:40.000
It's not quite a dashboard for days, but it does have a cool feature that's a lot like

12:40.000 --> 12:42.840
Google Docs, where I could share a creation.

12:42.840 --> 12:44.840
So just to play around, I shared it with you.

12:44.840 --> 12:47.520
So now, like in Google Docs, you add a collaborator.

12:47.520 --> 12:48.760
I added you.

12:48.760 --> 12:52.360
And you can go in there and start mucking around with my Raspberry Pi image, and you

12:52.360 --> 12:55.560
could actually deploy a new image to my Raspberry Pi.

12:55.560 --> 13:00.720
Yeah, this does seem very developer friendly, but there was a big red flag as far as I could

13:00.720 --> 13:01.720
see.

13:01.720 --> 13:04.920
And that was that they were talking about long-term support, and then they said three

13:04.920 --> 13:05.920
years.

13:05.920 --> 13:06.920
Yeah.

13:06.920 --> 13:11.240
Yeah, where Azure Sphere OS is 10 years, I think Ubuntu Core is five years.

13:11.240 --> 13:15.620
That's a little short for a device that you buy and then put in your home, integrate into

13:15.620 --> 13:16.880
your home.

13:16.880 --> 13:18.880
Three years is a little short.

13:18.880 --> 13:25.060
But I suppose it's early days, maybe, and people are replacing these at a higher frequency.

13:25.060 --> 13:26.400
That's the best I can come up with.

13:26.400 --> 13:29.760
Yeah, contributing yet more to the e-waste problem.

13:29.760 --> 13:34.220
It just seems three years is, for a phone, OK, the kind of old hat.

13:34.220 --> 13:38.680
But for something like a thermostat is the go-to, isn't it, for IoT?

13:38.680 --> 13:42.120
A thermostat you have for 20 or 30 years, not three.

13:42.120 --> 13:45.800
Yeah, or light switches, things like that that get built into your wall.

13:45.800 --> 13:50.220
And I think that's my major problem with the Android Things platform, is if I was going

13:50.220 --> 13:54.480
to put on my business consultancy hat and somebody was asking me about building a product

13:54.480 --> 14:00.440
around an IoT platform, my main issue with Android would be it's too nascent still.

14:00.440 --> 14:03.340
They're making a ton of changes to Android right now.

14:03.340 --> 14:08.760
And Android IoT is an offshoot of something that's undergoing massive change, especially

14:08.760 --> 14:10.440
with Fuchsia in the background.

14:10.440 --> 14:13.680
We don't really know where that's going, where that's going to lead Android.

14:13.680 --> 14:15.760
I wouldn't bet the farm on this.

14:15.760 --> 14:20.760
I might bet the farm on Azure Sphere OS or Ubuntu Core.

14:20.760 --> 14:25.520
But Android, Internet of Things, the only thing I like about it is it gives me a lot

14:25.520 --> 14:26.520
of shortcuts.

14:26.520 --> 14:27.600
I can get up and running fast.

14:27.600 --> 14:31.560
There's a lot of system on a chip and system on a module makers who are building for Android

14:31.560 --> 14:32.560
already.

14:32.560 --> 14:35.600
And Google has a massive infrastructure for me to take advantage of.

14:35.600 --> 14:40.280
But three years and Android's nascent nature in this area really turned me off.

14:40.280 --> 14:42.840
Yeah, Fuchsia was the first thing I thought about here.

14:42.840 --> 14:48.040
I thought that was going to be the new platform that they do stuff like this with.

14:48.040 --> 14:53.080
It just seems to be the elephant in the room here.

14:53.080 --> 14:54.320
blast.ting.com.

14:54.320 --> 14:55.600
It's smarter than unlimited.

14:55.600 --> 14:57.240
If you use less, you pay less.

14:57.240 --> 15:01.760
But more than that, I can personally say I am very glad that I'm taking Ting with me

15:01.760 --> 15:04.360
on the road trip down to Texas in a couple of weeks.

15:04.360 --> 15:06.880
They have a CDMA and a GSM network.

15:06.880 --> 15:09.480
That means when I'm on the road, my business is going to be connected.

15:09.480 --> 15:12.240
I have to have internet connectivity to do what I do.

15:12.240 --> 15:15.380
You guys obviously know that, and that's why I choose Ting.

15:15.380 --> 15:17.720
And here's the other part that I am very appreciative.

15:17.720 --> 15:21.780
I've only had to use it once while I was on the road, but they stuck with me.

15:21.780 --> 15:24.040
Their customer support is top notch.

15:24.040 --> 15:26.800
I figured after 45 minutes, they'd bail on me.

15:26.800 --> 15:27.800
Sorry, sir.

15:27.800 --> 15:28.800
It's a device.

15:28.800 --> 15:29.800
We'll get you out a new one.

15:29.800 --> 15:34.200
They hung on the line the entire time while we tried different stuff.

15:34.200 --> 15:37.200
And what I really came to appreciate is these are geeks at Ting.

15:37.200 --> 15:39.720
They're geeks, and they really like this stuff.

15:39.720 --> 15:41.880
And if you're willing to work, they're willing to work with you.

15:41.880 --> 15:43.380
They have a great control panel.

15:43.380 --> 15:45.600
They have fantastic customer support.

15:45.600 --> 15:48.920
So I feel like I have a support net underneath me when I go out on the road.

15:48.920 --> 15:51.300
But here's something that's kind of cool that's coming down from Ting right now.

15:51.300 --> 15:54.760
You can buy a device directly from Ting, and it comes clean.

15:54.760 --> 15:55.760
It's the base OS.

15:55.760 --> 15:58.120
You just do whatever you want with it, or you can bring your own.

15:58.120 --> 16:02.080
And because they have CDMA and GSM, I'd check their BYOD page.

16:02.080 --> 16:04.680
There's probably a good chance your device is going to be compatible.

16:04.680 --> 16:10.120
But if you're looking for a new one, they just launched the Moto Z2.

16:10.120 --> 16:12.960
Now what's familiar about that Moto Z2?

16:12.960 --> 16:17.920
It's the one that supports Moto Mods, where you can hook up different cameras or speakers

16:17.920 --> 16:21.420
or all the different things, like the JBL Sound Boost 2.

16:21.420 --> 16:23.680
All can be snapped in.

16:23.680 --> 16:25.480
Ting is now offering that device.

16:25.480 --> 16:28.880
And if you go to lass.ting.com, you'll get $25 off.

16:28.880 --> 16:33.400
But for a limited time, you can save up to $150 on the Z2.

16:33.400 --> 16:35.020
More details on Ting's blog.

16:35.020 --> 16:38.640
Start by going to lass.ting.com, and then jump around from there.

16:38.640 --> 16:39.640
That's lass.ting.com.

16:39.640 --> 16:47.560
It wasn't just Google I.O. that happened this past week, also the Red Hat Summit happened.

16:47.560 --> 16:52.120
And coming out of that, we finally had some clarification on what's happening with Core

16:52.120 --> 16:53.800
OS since Red Hat bought it.

16:53.800 --> 16:54.800
Yeah.

16:54.800 --> 16:57.280
So Core OS is going to continue, but not as we know it.

16:57.280 --> 17:03.040
Red Hat will be integrating Core OS Tectonics, which is its Kubernetes distribution, into

17:03.040 --> 17:04.480
Red Hat Enterprise.

17:04.480 --> 17:08.600
Also key, its Enterprise Container Registry System, and of course, its big dog, Container

17:08.600 --> 17:12.640
Linux, which is the lightweight cluster Linux distribution, all of which will be rolled

17:12.640 --> 17:17.920
into Red Hat's primary container and Kubernetes-based software portfolio.

17:17.920 --> 17:23.440
There is one popular omission from Core OS not making it into mainline Red Hat Enterprise,

17:23.440 --> 17:27.640
and that's Rocket, the container standard that is an alternative to Docker.

17:27.640 --> 17:32.240
Instead, that will become a community-supported container technology.

17:32.240 --> 17:36.800
Now the big question that I always had when Red Hat acquired Core OS is what happens to

17:36.800 --> 17:40.920
Project Atomic, which tries to accomplish some of the same goals?

17:40.920 --> 17:46.060
Well, Container Linux and Project Atomic, which is built around the lightweight containerized

17:46.060 --> 17:52.600
operating system Atomic Host, will be united into Red Hat's Core OS, all folded into one.

17:52.600 --> 17:57.160
This is from a Red Hat employee, quote, Red Hat Core OS will preserve the best from both

17:57.160 --> 17:58.160
offerings.

17:58.160 --> 18:03.360
Ultimately, though, what's really happening here is Red Hat Core OS will supersede Atomic

18:03.360 --> 18:05.720
Host and Container Linux.

18:05.720 --> 18:09.800
Now I don't know if that's true across the board or just in enterprise implementations.

18:09.800 --> 18:13.840
I think those projects will continue as community efforts, and that's something I'm going to

18:13.840 --> 18:18.080
reach out to those different projects and try to get clarification on over the next

18:18.080 --> 18:19.280
couple of weeks.

18:19.280 --> 18:22.320
They're all just getting back from Red Hat Summit right now, otherwise I would have tried

18:22.320 --> 18:26.960
to pin them down for this episode, but I will try to follow up on that when they have time.

18:26.960 --> 18:31.760
But here's what we do know, there will be an upstream community version of Core OS,

18:31.760 --> 18:35.520
as Fedora is sort of like to Red Hat Enterprise Linux, and it's all kind of still a work in

18:35.520 --> 18:36.520
progress.

18:36.520 --> 18:37.920
I think those details are still forming.

18:37.920 --> 18:42.200
And Project Atomic will eventually just be phased away, it sounds like.

18:42.200 --> 18:46.080
But the code itself will live on as other parts of Red Hat Enterprise Linux because

18:46.080 --> 18:47.080
it's still great code.

18:47.080 --> 18:48.600
It's not like the code's been wasted.

18:48.600 --> 18:50.640
I'm going to have to steal Michael's joke here.

18:50.640 --> 18:54.320
I really hope they call the upstream version Fedora Core OS.

18:54.320 --> 18:56.920
I know.

18:56.920 --> 19:00.920
It would be really kind of the perfect opportunity to bring it back because it always was a little

19:00.920 --> 19:02.840
punchier with that core in there.

19:02.840 --> 19:06.920
Red Hat Core OS will provide the new foundation though for Red Hat OpenShift Container Platform

19:06.920 --> 19:13.200
RHOCP, and I mention that because you're going to hear a lot more about that and Red Hat

19:13.200 --> 19:16.880
OpenShift Online and the Red Hat OpenShift dedicated.

19:16.880 --> 19:19.520
Stay tuned for more information on those in the future.

19:19.520 --> 19:23.600
But this is really for customers who want what's called an immutable infrastructure

19:23.600 --> 19:28.040
where you can destroy a system and spin up a system, the data stays intact, the individual

19:28.040 --> 19:33.280
servers are more like cattle than they are pets, and Red Hat's pushing hard into this

19:33.280 --> 19:34.280
area.

19:34.280 --> 19:37.600
And one of the things that they talked about at Red Hat Enterprise Summit is they're hearing

19:37.600 --> 19:42.440
from customers they want automatic updates, which surprised me.

19:42.440 --> 19:46.680
But in a world of containerization and virtual machines and separate data stores, I could

19:46.680 --> 19:47.680
see it.

19:47.680 --> 19:54.000
And that's really where Red Hat's trying to get to is deliver reliable, solid, enterprise-grade

19:54.000 --> 19:55.340
automatic updates.

19:55.340 --> 19:59.240
And that's what all of this is playing into, that and immutable infrastructure, deploying

19:59.240 --> 20:04.200
systems across open and public clouds and closed clouds and on-premises, it's all one

20:04.200 --> 20:10.320
big effort that they're trying to get to to make infrastructure just a detail, an implementation

20:10.320 --> 20:11.320
detail.

20:11.320 --> 20:15.640
Instead of thinking about racking a massive server in a rack, you just think about clicking

20:15.640 --> 20:19.000
a button and all of the software behind the scenes deploys everything.

20:19.000 --> 20:22.480
Well, as usual, this is just Red Hat staying on top of market trends.

20:22.480 --> 20:27.600
They didn't get to be the biggest open source company by just resting on their laurels and

20:27.600 --> 20:29.000
never changing.

20:29.000 --> 20:33.360
And they're kind of just at that right size, aren't they, where they can afford to make

20:33.360 --> 20:38.880
these purchases and integrate these other technologies into what they're already doing.

20:38.880 --> 20:41.800
But also, they're small enough to be agile with it.

20:41.800 --> 20:43.960
Yeah, Canonical and others may have gotten there first.

20:43.960 --> 20:45.840
I mean, look at CoreOS as an example.

20:45.840 --> 20:47.880
They were there quite a while ago.

20:47.880 --> 20:52.120
But you have to give credit to Red Hat for not letting this pass by them.

20:52.120 --> 20:55.440
And then when they do act, they're acting very quickly.

20:55.440 --> 20:59.800
I think the whole story around Project Atomic and what happens with Container Linux as a

20:59.800 --> 21:03.800
community project and all of that is still a little fuzzy.

21:03.800 --> 21:08.480
And if I could have only one criticism in all of this is it really feels like Red Hat

21:08.480 --> 21:13.520
is trying to please everyone in a way that Microsoft used to, which I think cost them

21:13.520 --> 21:14.520
greatly.

21:14.520 --> 21:17.480
And there's one key phrase that Red Hat is promising.

21:17.480 --> 21:22.720
They say, no users or communities will be left behind, which, man, that's a solid statement.

21:22.720 --> 21:26.040
And that's something that you could take to the bank and as an enterprise makes you feel

21:26.040 --> 21:27.040
good.

21:27.040 --> 21:31.380
But as a customer watching from the outside, I look at that and go, well, at some point,

21:31.380 --> 21:35.880
at some point, you have to cut off dead weight and you have to focus.

21:35.880 --> 21:40.860
And so what I do see here is a very convoluted message.

21:40.860 --> 21:48.120
And when you add in things like Fedora and CentOS, it gets even more convoluted.

21:48.120 --> 21:52.320
And if I could have any one critique, it would be it feels like they're trying to please

21:52.320 --> 21:54.420
too many people at once.

21:54.420 --> 21:59.480
But when you're making $3 billion a year, you can afford to try to please a lot of people.

21:59.480 --> 22:03.680
And like you said, Joe, this is Red Hat being savvy and responding to the demands of the

22:03.680 --> 22:04.680
market.

22:04.680 --> 22:08.740
And I think the components of CoreOS they're integrating are going to be real sellers.

22:08.740 --> 22:11.280
And I think it's going to do well for Red Hat Enterprise Linux.

22:11.280 --> 22:15.440
And if I was a Red Hat Enterprise Linux administrator, I'd be very happy to see that Red Hat is staying

22:15.440 --> 22:16.500
on top of this.

22:16.500 --> 22:19.640
They're keeping RHEL and all of the things I love about Red Hat.

22:19.640 --> 22:24.280
But they're expanding into this area, in fact, in some big ways, like with Microsoft.

22:24.280 --> 22:27.560
Yeah, they've been working with Microsoft to bring OpenShift to Azure.

22:27.560 --> 22:28.560
Right.

22:28.560 --> 22:33.160
Red Hat OpenShift, which is Red Hat's Kubernetes platform on Microsoft Azure, which is Microsoft's

22:33.160 --> 22:34.440
public cloud.

22:34.440 --> 22:38.880
And that initially is like, oh, interesting, OK, that sounds kind of logical.

22:38.880 --> 22:40.040
But it's deeper than that.

22:40.040 --> 22:45.860
They are offering fully managed services on Azure for people running Red Hat.

22:45.860 --> 22:48.000
Think about that for a moment.

22:48.000 --> 22:52.200
Microsoft is going to be managing Red Hat Enterprise servers running on Azure.

22:52.200 --> 22:57.440
And they're creating a system where you can move infrastructure between on-premises up

22:57.440 --> 23:04.400
into Azure, over onto DigitalOcean, back down to your own system, and at Red Hat Summit.

23:04.400 --> 23:09.080
Red Hat's director of developer experience showed off a hybrid cloud using an on-site

23:09.080 --> 23:15.240
rack, and then an Azure rack in Texas, and Amazon Web Services in Ohio.

23:15.240 --> 23:19.640
And then using Kubernetes, Red Hat demonstrated that you can load balance across all three

23:19.640 --> 23:23.560
clouds automatically and in real time.

23:23.560 --> 23:29.120
Pretty big for people that have a large on-premises deployment but need a little extra infrastructure

23:29.120 --> 23:32.280
from time to time, which is a lot of companies.

23:32.280 --> 23:36.400
And now you can build for Red Hat on-premises and deploy up to Azure.

23:36.400 --> 23:41.160
And sitting on top of all of this is the fact that Azure was just recently certified by

23:41.160 --> 23:47.280
the Australian government for use with Australian government private information.

23:47.280 --> 23:51.260
They have the certification that they give out to only a few cloud hosting providers,

23:51.260 --> 23:54.920
and now Azure is one of them, which I think is one of the reasons Red Hat wanted to get

23:54.920 --> 23:55.920
this in the bag.

23:55.920 --> 23:59.840
Now, I'm sure there's plenty of people out there thinking, Red Hat causing up to Microsoft,

23:59.840 --> 24:01.840
I don't like that.

24:01.840 --> 24:08.640
But this is the reality of enterprise computing now, that Microsoft are a huge part of it,

24:08.640 --> 24:12.920
and companies like Red Hat have no choice but to make these deals with them.

24:12.920 --> 24:17.420
Here's another way to reframe Microsoft's motivations in this deal.

24:17.420 --> 24:22.560
Microsoft just wants to sell Azure services and software subscriptions to people that

24:22.560 --> 24:26.700
are creating software that runs on the cloud, because that's a way bigger market than the

24:26.700 --> 24:29.160
home consumer PC.

24:29.160 --> 24:34.880
As an example, Visual Studio Enterprise and Visual Studio Professional subscribers, Microsoft

24:34.880 --> 24:40.800
customers, as part of this new deal with Red Hat now, will receive Red Hat Enterprise Linux

24:40.800 --> 24:41.800
credits.

24:41.800 --> 24:46.340
Developers will be able to deploy Red Hat Enterprise servers as just part of their built-in

24:46.340 --> 24:51.700
package they get now, and they can deploy.NET, Java, or any other open source framework

24:51.700 --> 24:56.040
on those Red Hat Enterprise servers running on Azure that Microsoft's paying the bill

24:56.040 --> 24:57.040
for.

24:57.040 --> 24:59.280
It's corporate synergy.

24:59.280 --> 25:01.280
Kumbaya, Joe, doesn't it feel great?

25:01.280 --> 25:05.400
Speaking of synergies, you're going to get more Linux on your Windows, even if it's a

25:05.400 --> 25:06.920
Windows ARM system.

25:06.920 --> 25:09.080
Yeah, this is quite surprising.

25:09.080 --> 25:13.880
We've seen the Windows subsystem for Linux as part of Windows 10 since almost the beginning

25:13.880 --> 25:15.260
of Windows 10.

25:15.260 --> 25:21.520
And also we've seen Windows 10 being shipped on ARM-based devices fairly recently.

25:21.520 --> 25:28.400
But I never expected those ARM devices to be capable of running the subsystem for Linux,

25:28.400 --> 25:36.280
because you've already got this compatibility layer going on between x86 and ARM.

25:36.280 --> 25:41.560
And now you're going to have this other compatibility layer between the NT kernel and the Linux

25:41.560 --> 25:42.560
userland.

25:42.560 --> 25:45.200
I can't see this working particularly well.

25:45.200 --> 25:46.200
Can you?

25:46.200 --> 25:50.440
Well, they were talking about it at this week's Build conference, because aside from Google

25:50.440 --> 25:55.600
I.O. and aside from Red Hat Summit, there was also the Microsoft Build conference this

25:55.600 --> 25:56.600
week.

25:56.600 --> 26:02.080
And NeoWin spotted a presentation where Microsoft was showing off Ubuntu running on a Windows

26:02.080 --> 26:06.920
10 ARM computer, which if you think about the way it works, if you recall, they're not

26:06.920 --> 26:09.580
emulating with the Windows subsystem for Linux.

26:09.580 --> 26:12.280
They're translating like Wine does.

26:12.280 --> 26:17.060
It's taking a call and it's rerouting it to the Windows equivalent of that call.

26:17.060 --> 26:22.920
And if you're doing that with 64 and 32 bit x86 applications, it's really the same math

26:22.920 --> 26:25.680
just with that call redirection on top of it.

26:25.680 --> 26:27.840
There's got to be some overhead there, though, surely.

26:27.840 --> 26:28.840
I would think so.

26:28.840 --> 26:31.960
And I would not want to use that as my daily driver.

26:31.960 --> 26:36.320
But again, if you're on the command line with these small apps, that's not so bad.

26:36.320 --> 26:38.480
The overhead there might be barely noticeable.

26:38.480 --> 26:39.480
Possibly.

26:39.480 --> 26:42.400
I mean, if you're just using it as a replacement for PuTTY, which I would imagine quite a lot

26:42.400 --> 26:44.960
of people are, then you're probably not going to notice.

26:44.960 --> 26:45.960
Yeah.

26:45.960 --> 26:49.080
But the 12 hour battery life is sort of making it all worth it.

26:49.080 --> 26:50.080
Yeah, I suppose.

26:50.080 --> 26:52.800
And again, this is new Microsoft that we keep talking about.

26:52.800 --> 26:58.440
And it keeps annoying the, shall we say, traditionalists in the Linux community.

26:58.440 --> 27:00.640
I think we just have to accept this, don't we?

27:00.640 --> 27:01.640
I guess so.

27:01.640 --> 27:02.640
They're embracing it.

27:02.640 --> 27:03.640
I suppose so.

27:03.640 --> 27:05.880
I mean, companies will go where the profits flow.

27:05.880 --> 27:10.560
And I did watch the keynote and different presentations from Build and more than a few

27:10.560 --> 27:12.800
times I saw Linux up on stage.

27:12.800 --> 27:13.900
It's still weird to me.

27:13.900 --> 27:15.040
It's still really strange.

27:15.040 --> 27:19.640
Or I saw them using SSH a lot, which is always very odd.

27:19.640 --> 27:22.000
And all in on the Raspberry Pi, too.

27:22.000 --> 27:27.380
Lots of demos with the Raspberry Pi, which I found to be, well, like I was watching a

27:27.380 --> 27:30.880
Google IO keynote, not a Microsoft keynote.

27:30.880 --> 27:32.680
So it is definitely a different time, right?

27:32.680 --> 27:33.680
It's just where the money is.

27:33.680 --> 27:34.680
Yeah.

27:34.680 --> 27:38.600
I wonder how much Microsoft stuff you're going to see when you go down to Texas Linux Fest.

27:38.600 --> 27:39.680
Oh, that's right.

27:39.680 --> 27:40.680
I'll be heading down there.

27:40.680 --> 27:44.040
Texas Linux Fest is June 8th through the 9th.

27:44.040 --> 27:48.080
And I'm heading out around the end of May to make the long trek down there.

27:48.080 --> 27:50.080
So if you're in the Austin area, come say hi.

27:50.080 --> 27:51.760
I'll be setting up a Telegram group.

27:51.760 --> 27:53.300
But I'll also have the Rover tracker with me.

27:53.300 --> 27:57.540
So if you're along my route, reach out over Telegram or Twitter, and maybe we can meet

27:57.540 --> 27:59.320
up along the way.

27:59.320 --> 28:03.300
That'll all be tracked over at jupitabroadcasting.com slash rover.

28:03.300 --> 28:06.720
And I'll have the Texas Linux Fest Meetup Telegram group at some point.

28:06.720 --> 28:11.280
If you go to jupitabroadcasting.com slash telegram, I'll probably announce it in our main channel.

28:11.280 --> 28:13.240
And while I'm on the road, the show will go on.

28:13.240 --> 28:17.440
So check out every single episode of Linux Action News by going to linuxactionnews.com

28:17.440 --> 28:20.520
slash subscribe for all the ways to get new episodes.

28:20.520 --> 28:24.200
And go to linuxactionnews.com slash contact for ways to get in touch.

28:24.200 --> 28:27.800
And please consider supporting the entire network and all of our great open source and

28:27.800 --> 28:31.320
Linux coverage at patreon.com slash jupitersignal.

28:31.320 --> 28:34.960
We'll be back next Monday with our weekly take on the latest Linux and open source news.

28:34.960 --> 28:36.340
I'm at Chris Ellis.

28:36.340 --> 28:37.640
I'm at Joel Rissington.

28:37.640 --> 28:40.440
Thank you for joining us, and we will see you next week.

28:40.440 --> 28:43.760
Have a great day.

28:43.760 --> 28:44.760
Bye-bye.

28:44.760 --> 28:45.760
See you later.

28:45.760 --> 29:10.760
Bye-bye.

