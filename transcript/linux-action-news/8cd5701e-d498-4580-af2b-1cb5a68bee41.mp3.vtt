WEBVTT

00:00.000 --> 00:08.360
Hello and welcome to Linux Action News Episode 210, recorded on October 10th, 2021.

00:08.360 --> 00:09.360
I'm Chris.

00:09.360 --> 00:10.360
And I'm Wes.

00:10.360 --> 00:11.360
Hello, Wes.

00:11.360 --> 00:12.360
Let's do the news.

00:12.360 --> 00:16.560
This week, we get to start with a significant milestone in the port of Linux to the Apple

00:16.560 --> 00:17.560
M1.

00:17.560 --> 00:24.480
The Asahi Linux team reports they have a full desktop up and working on the M1, with the

00:24.480 --> 00:27.520
small exception of GPU acceleration.

00:27.520 --> 00:30.640
Which they are working on diligently, they say.

00:30.640 --> 00:38.080
But they report that the CPU software acceleration is actually so fast on the M1 that the overall

00:38.080 --> 00:42.880
desktop experience still feels faster than something like the Rock Pro 64, which has

00:42.880 --> 00:44.600
native hardware acceleration.

00:44.600 --> 00:48.240
But no matter how you slice it, this is a major accomplishment.

00:48.240 --> 00:52.120
And with more driver work that's currently being done and already pending, it's just

00:52.120 --> 00:54.320
going to make the experience better and better.

00:54.320 --> 00:58.240
On top of that driver work, the developers are beginning to adapt and figure out the

00:58.240 --> 01:03.240
unique ways that Apple has set up some of their devices, like the NVMe disk, for example,

01:03.240 --> 01:07.300
which differs quite a bit from how it would work on an x86 box.

01:07.300 --> 01:09.080
That might make you worry then.

01:09.080 --> 01:13.640
What about future Apple hardware updates like the pending M1X or M2?

01:13.640 --> 01:18.940
Well, it looks like the compatibility situation with future hardware actually has the potential

01:18.940 --> 01:25.280
to be better than just about any other ARM platform Linux currently runs on.

01:25.280 --> 01:31.080
The project noted, quote, Apple is unique in putting emphasis on keeping hardware interfaces

01:31.080 --> 01:34.760
compatible across SOC generations.

01:34.760 --> 01:39.600
The UART hardware in the M1 dates all the way back to the original iPhone.

01:39.600 --> 01:43.920
This means we are in a unique position to be able to try writing drivers that will not

01:43.920 --> 01:50.400
only work for the M1, but may work unchanged on future chips as well.

01:50.400 --> 01:52.640
That would be remarkable.

01:52.640 --> 01:59.040
If they could potentially leverage future architectures with current drivers, that's

01:59.040 --> 02:00.040
pretty unheard of.

02:00.040 --> 02:04.320
And, you know, Apple's not doing this to make it easier for the team to port Linux.

02:04.320 --> 02:08.560
It's because it saves them a lot of work on future versions of their OS.

02:08.560 --> 02:12.680
It just happens to be a happy, unintended consequence of Apple making that experience

02:12.680 --> 02:14.000
better for themselves.

02:14.000 --> 02:17.560
It means we could have a unique experience for Linux users in the ARM world.

02:17.560 --> 02:22.180
And to be clear, it's never going to be as great as if all of the hardware was open source

02:22.180 --> 02:25.240
and we had free drivers upstream for everything.

02:25.240 --> 02:27.800
That would be the utopian ideal.

02:27.800 --> 02:30.760
But it could have been a lot worse when it comes to M1 town.

02:30.760 --> 02:37.000
In fact, the project states, quote, this is a very exciting opportunity in the ARM64 world.

02:37.000 --> 02:43.900
We won't know until Apple releases the M1, X, or M2, but if we succeed in making enough

02:43.900 --> 02:49.200
drivers forwards compatible to boot Linux on newer chips, that will make things like

02:49.200 --> 02:54.020
booting older distro installers possible on newer hardware.

02:54.020 --> 02:59.720
That is something people take for granted on x86, but it's usually impossible in the

02:59.720 --> 03:01.000
embedded world.

03:01.000 --> 03:04.000
We hope we can change that on these machines.

03:04.000 --> 03:09.680
There really are a surprising number of subsystems that make up a modern computer, and reading

03:09.680 --> 03:14.480
through this latest update, you get a very real sense of that.

03:14.480 --> 03:20.840
And while at first this task seemed nearly impossible, these days it seems like we might

03:20.840 --> 03:25.840
have a real working thing in just a matter of weeks.

03:25.840 --> 03:29.760
The team says now one of their next major tasks is to extend the basic installer they

03:29.760 --> 03:35.560
have right now aimed really just for developers into something official that might actually

03:35.560 --> 03:39.360
have wider usage among, quote, adventurous users.

03:39.360 --> 03:46.400
Well, Alyssa Rosenwig tweeted that the computer feels so fast that computers haven't been

03:46.400 --> 03:48.840
this fast since before she was born or something like that.

03:48.840 --> 03:51.080
Like it really, they are, the team is really excited.

03:51.080 --> 03:56.880
I'm excited because I think these have a lot of potential to be low power servers.

03:56.880 --> 03:58.800
You know, if you can get Linux running on these really well.

03:58.800 --> 04:04.280
A Mac mini maxed out CPU load is somewhere around 33, 36 watts.

04:04.280 --> 04:09.240
So it's competitive with some smaller board computers, but with just exponentially more

04:09.240 --> 04:10.240
horsepower.

04:10.240 --> 04:14.840
And so that's an area where I'm excited for the Asahi Linux team to succeed, but clearly

04:14.840 --> 04:16.900
they're shooting towards the desktop.

04:16.900 --> 04:20.160
And this installer, well, that's going to mean more and more people can try this out.

04:20.160 --> 04:21.960
Maybe we're going to get more bug reports.

04:21.960 --> 04:25.580
The initial version is going to guide you through resizing your Mac OS install.

04:25.580 --> 04:28.140
It's going to be intended to be a dual boot scenario.

04:28.140 --> 04:29.760
It makes space for Linux.

04:29.760 --> 04:32.960
It'll install their mini bootloader and U-boot.

04:32.960 --> 04:35.120
It'll set up an EFI partition for you.

04:35.120 --> 04:38.760
And then the installer will optionally install a pre-built distro and its bootloader.

04:38.760 --> 04:46.080
And well get this, initially it's going to be Arch by the way.

04:46.080 --> 04:51.680
Another platform we're watching with quite a bit of interest is RISC-V. Essential bits

04:51.680 --> 04:55.080
of support continue to land upstream in the kernel.

04:55.080 --> 05:00.600
And this week that list includes a significant enterprise and power user feature.

05:00.600 --> 05:01.600
No kidding.

05:01.600 --> 05:04.640
I mean, I could see how this would be important on a server and I could see how those of us

05:04.640 --> 05:07.860
that want to build a RISC-V workstation would love to see this too.

05:07.860 --> 05:15.540
And that is in Linux 5.16 KVM virtualization support for the RISC-V platform will land.

05:15.540 --> 05:21.720
This is a huge amount of work, work that's been going on for a while and has recently

05:21.720 --> 05:22.720
sped up.

05:22.720 --> 05:28.960
Some patches that came in, some final revisions that went through and it looks good for 5.16.

05:28.960 --> 05:34.080
And with faster and faster RISC-V processors on the long-term roadmap, having this hypervisor

05:34.080 --> 05:39.160
support in Linux soon means when these devices land, well, things should be ready to go in

05:39.160 --> 05:40.160
the kernel.

05:40.160 --> 05:49.000
And in user space, QEMU was already updated and has its RISC-V support in place.

05:49.000 --> 05:51.940
Canonical has announced and released Ubuntu Frame.

05:51.940 --> 05:54.000
That's for display purposes only.

05:54.000 --> 05:59.120
That's because Ubuntu Frame is a full-screen shell based on Wayland and offers compatibility

05:59.120 --> 06:05.520
with existing graphical toolkits such as Flutter, Qt, GTK, and of course, web-based apps.

06:05.520 --> 06:10.520
Frame is designed for interactive displays and offers interfaces to handle input from

06:10.520 --> 06:14.840
touch screens, keyboard, and a traditional mouse.

06:14.840 --> 06:19.600
Developers can get started building apps for Frame on any system that supports snaps and

06:19.600 --> 06:22.320
should make it pretty straightforward to get started.

06:22.320 --> 06:26.680
And of course, as you might expect, snaps play a pretty significant role in both application

06:26.680 --> 06:29.160
distribution and in security.

06:29.160 --> 06:33.240
And that means the display server and other system apps running on the Frame are isolated

06:33.240 --> 06:35.360
from the vendor's applications.

06:35.360 --> 06:38.960
This is done by leveraging snaps application confinement.

06:38.960 --> 06:43.940
Canonical also uses this to force apps to only talk to the Ubuntu Frame server via what

06:43.940 --> 06:46.760
Canonical calls a secure socket.

06:46.760 --> 06:50.640
The promise made to developers with Ubuntu Frame is basically that they won't have to

06:50.640 --> 06:55.720
waste time integrating and maintaining all the custom code that might typically be required

06:55.720 --> 06:57.720
to use Linux in this way.

06:57.720 --> 07:02.040
Instead, Canonical will do that and help manage the security.

07:02.040 --> 07:05.840
And while maybe not all that innovative and new technology that's being introduced here

07:05.840 --> 07:10.680
with the Ubuntu Frame, what is innovative about this is the stacking of technologies

07:10.680 --> 07:15.160
that Canonical is already really familiar with and then packaging all of that together

07:15.160 --> 07:21.120
and then niching down on a specific market and pitching a solution directly to them.

07:21.120 --> 07:25.360
That's a pretty clever package and that market wasn't going to put all these different technologies

07:25.360 --> 07:27.680
together and build their own solution.

07:27.680 --> 07:30.680
And Canonical can also provide support with the product.

07:30.680 --> 07:34.920
In fact, the Ubuntu Frame comes with 10 years of security updates when used in conjunction

07:34.920 --> 07:39.240
with Ubuntu Core and Canonical says it's already being used by at least one customer.

07:39.240 --> 07:43.600
The Lenovo Intelligent Devices Group is using the Ubuntu Frame in order to make it easier

07:43.600 --> 07:47.840
for customers to create smart retail and digital signage solutions.

07:47.840 --> 07:52.420
If you are interested, you can get more information in an upcoming webinar scheduled to take place

07:52.420 --> 07:53.600
on November 3rd.

07:53.600 --> 07:55.640
We have a link in the show notes.

07:55.640 --> 08:00.580
Another week, another desktop position is opening at Red Hat.

08:00.580 --> 08:04.800
This week, it's been spotted that the Red Hat desktop team is looking for a software

08:04.800 --> 08:07.160
engineer in Spain.

08:07.160 --> 08:13.180
The role will be responsible for quote, developing and maintaining containerization technologies

08:13.180 --> 08:16.800
for software development like Toolbox.

08:16.800 --> 08:21.920
They go on to say that you need a proficiency and go or see containers, certain kernel APIs

08:21.920 --> 08:24.600
and well, of course, the Linux desktop itself.

08:24.600 --> 08:31.120
What really seems like news here is the larger meta story around Red Hat continuing to hire

08:31.120 --> 08:36.600
and fill well-paying jobs to work on the Linux desktop.

08:36.600 --> 08:37.780
Absolutely.

08:37.780 --> 08:44.880
When Jim Whitehurst stepped down, I was vocal about my concerns that maybe IBM wouldn't

08:44.880 --> 08:48.360
be all that motivated in future investments in the Linux desktop.

08:48.360 --> 08:53.040
After all, they don't particularly sell a desktop product outside of some small commercial

08:53.040 --> 08:54.040
deployments.

08:54.040 --> 08:58.320
So I was really kind of worried that the bottom line, the bean counters would strike all of

08:58.320 --> 08:59.320
these investments.

08:59.320 --> 09:00.320
But I don't know.

09:00.320 --> 09:04.680
I mean, it's still early days since the announcement, but seems like we've been seeing week after

09:04.680 --> 09:08.680
week almost Red Hat is making direct investments in the Linux desktop.

09:08.680 --> 09:13.280
I also think it's kind of like a particularly good kind of sign that they're investing in

09:13.280 --> 09:18.640
a tool like Toolbox, which is just it's just a great resource for developers on a Linux

09:18.640 --> 09:20.340
workstation.

09:20.340 --> 09:23.920
It's one of those kind of invest in the developers kind of investments.

09:23.920 --> 09:29.200
Yeah, not only are they doubling down on some of our favorite technologies like Toolbox,

09:29.200 --> 09:33.120
they're also trying to solve some of the harder problems in the desktop space.

09:33.120 --> 09:39.520
I mean, just over the summer, we saw Red Hat hire two new graphics developers, announce

09:39.520 --> 09:45.000
a renewed investment in Pipewire and improving the video stack for Linux, open a position

09:45.000 --> 09:52.480
to finally improve HDR support, work directly with Nvidia to enable Wayland support in their

09:52.480 --> 09:59.260
driver, and hire a principal software engineer to work on LLVM and Clang.

09:59.260 --> 10:03.360
And that's on top of the numerous developers they already employ.

10:03.360 --> 10:09.480
Projects like GNOME, Fedora, LVFS, and so many others that make what we know today as

10:09.480 --> 10:12.480
the modern Linux desktop remotely possible.

10:12.480 --> 10:15.840
They play a pretty critical role in the ecosystem.

10:15.840 --> 10:19.840
So it was understandable to be concerned when Wider stepped down.

10:19.840 --> 10:24.040
I mean, we trust IBM with a role this important?

10:24.040 --> 10:25.040
But I agree.

10:25.040 --> 10:29.000
It's also really reassuring to see these positions open up.

10:29.000 --> 10:31.400
I mean, it's more than just words.

10:31.400 --> 10:37.120
It's real action and dollars that will result in some measurable benefits for all desktop

10:37.120 --> 10:38.840
Linux users.

10:38.840 --> 10:42.120
But that doesn't mean we're taking our eye off them.

10:42.120 --> 10:44.920
We're always watching.

10:44.920 --> 10:46.400
Linode.com slash LAN.

10:46.400 --> 10:50.880
Go there to get $100 in 60 day credit on a new account and you go there to support the

10:50.880 --> 10:51.880
show.

10:51.880 --> 10:53.440
We host everything these days on Linode.

10:53.440 --> 10:57.600
They have 11 data centers around the world and they've really refined this into a lean

10:57.600 --> 10:59.160
mean running machine.

10:59.160 --> 11:03.000
Some of the things that I love about Linode is their powerful DNS manager and their overall

11:03.000 --> 11:04.880
cloud dashboard to begin with.

11:04.880 --> 11:06.300
It makes it really quick to get started.

11:06.300 --> 11:08.500
I can go check on my system super fast.

11:08.500 --> 11:11.920
And also I'll often just log into Linode and look at the different systems they have to

11:11.920 --> 11:14.500
deploy or the different applications they have available.

11:14.500 --> 11:17.860
Like for example, they have Alma Linux and Rocky Linux now.

11:17.860 --> 11:21.120
So if that was something you were thinking about checking out, within a few seconds you

11:21.120 --> 11:22.120
could get that deployed.

11:22.120 --> 11:25.140
And if you're playing around with our $100 credit, that's a great way to learn.

11:25.140 --> 11:29.120
They also have one click deployment applications that make it really easy to get up and start

11:29.120 --> 11:32.520
with an entire stack built in an intelligent way.

11:32.520 --> 11:35.880
Like maybe you want to experiment with VS Code server.

11:35.880 --> 11:38.720
Why not have your own private editor up in the cloud?

11:38.720 --> 11:40.680
They make that possible with a single click.

11:40.680 --> 11:45.920
One of the features we're always finding new uses for is their S3 compatible object storage.

11:45.920 --> 11:49.320
Like for example, we use that with Nextcloud so that way our team can keep working when

11:49.320 --> 11:53.600
we're uploading files and we don't have to constantly manage and struggle with disk space

11:53.600 --> 11:54.600
usage.

11:54.600 --> 11:56.800
So it's one of those things you can really just go check out for yourself and really

11:56.800 --> 12:01.860
get a sense of why it's so great because it's not one particular feature or thing.

12:01.860 --> 12:06.500
It's everything about Linode combined with their fantastic customer support and their

12:06.500 --> 12:11.920
long term commitment to the Linux community, combined with great servers that have super

12:11.920 --> 12:17.040
high end hardware, 40 gigabit connections coming into the hypervisors, brand new PCIe

12:17.040 --> 12:22.400
MVB storage, AMD epic processors on the high end, and then honestly combining it with a

12:22.400 --> 12:27.080
great price, 30 to 50% cheaper than the other major cloud providers.

12:27.080 --> 12:30.600
Linode is dedicated to offering the best in virtualized cloud computing.

12:30.600 --> 12:33.280
If it runs on Linux, it runs on Linode.

12:33.280 --> 12:36.580
So go sign up today, linode.com slash lan.

12:36.580 --> 12:41.520
Get $100 in 60 day credit on your new account and you support Linux Action News.

12:41.520 --> 12:45.860
That's linode.com slash lan.

12:45.860 --> 12:49.360
And thank you to Ting, linux.ting.com.

12:49.360 --> 12:51.240
Ting is a mobile virtual network operator.

12:51.240 --> 12:54.680
That means instead of digging holes in the ground to put up towers, they're taking advantage

12:54.680 --> 13:00.560
of the existing large carrier networks and focusing on customer support and great deals.

13:00.560 --> 13:05.000
And Ting has a great mix of plans and fast data on LTE and 5G.

13:05.000 --> 13:07.040
Their plans are simple and straightforward.

13:07.040 --> 13:11.640
I've been a Ting customer since 2013, and I can tell you there's never been a better

13:11.640 --> 13:15.320
time to switch to Ting, the smarter version of mobile.

13:15.320 --> 13:19.560
If the carriers had to hit reset today and enter the market today, this is how they'd

13:19.560 --> 13:21.000
all have to do it.

13:21.000 --> 13:26.280
Ting has plans that start at like $10 a month and go up to like $55 a month.

13:26.280 --> 13:29.880
And they have great plans for family to let you mix and match what you need, like unlimited

13:29.880 --> 13:32.740
talk and text with just the right amount of data.

13:32.740 --> 13:36.920
And speaking of data, if you're just willing to download your podcast and sync your music

13:36.920 --> 13:41.240
and do that kind of stuff on Wi-Fi before you hit the road, you can save so much money

13:41.240 --> 13:42.240
a month with Ting.

13:42.240 --> 13:44.500
That could be a great little life hack right there.

13:44.500 --> 13:49.480
And every single plan gets access to Ting's award winning customer service with nationwide

13:49.480 --> 13:51.240
LTE and 5G coverage.

13:51.240 --> 13:54.680
But the best part, no contracts ever.

13:54.680 --> 13:56.360
And it's simple to switch to Ting.

13:56.360 --> 13:59.540
Pretty much any phone will work because they got so many networks they support.

13:59.540 --> 14:00.540
So get started.

14:00.540 --> 14:05.580
Head over to linux.ting.com, check your current phone, create an account, pick the plan that's

14:05.580 --> 14:06.580
right for you.

14:06.580 --> 14:09.800
Ting will send you a SIM card, you pop that sucker in and you're going to get activated

14:09.800 --> 14:10.860
in minutes.

14:10.860 --> 14:11.860
It's smooth.

14:11.860 --> 14:12.860
It's great.

14:12.860 --> 14:13.940
It's fantastic.

14:13.940 --> 14:15.640
It's linux.ting.com.

14:15.640 --> 14:18.400
The next generation of Ting mobile is here.

14:18.400 --> 14:26.960
Go see how much you could save and then take $25 off of that linux.ting.com.

14:26.960 --> 14:33.240
After a lot of smoke around a secret SUSE project, it seems we've got some real fire

14:33.240 --> 14:39.560
this week when Red Hat staffer and all around great guy Carl George noticed a new distro

14:39.560 --> 14:43.200
name showing up in the Apple repo logs.

14:43.200 --> 14:46.400
If you're not familiar with Apple, we'll have a link in the notes.

14:46.400 --> 14:54.600
Carl saw 38 hits for a rel-based distribution called SUSE Liberty Linux, a seemingly strong

14:54.600 --> 15:01.520
confirmation of a much rumored rebuild of Red Hat Enterprise Linux managed by SUSE.

15:01.520 --> 15:05.920
So dear listener, behind the scenes, we've been trying to confirm various rumors from

15:05.920 --> 15:12.320
various sources for weeks that SUSE had launched an internal skunkworks effort to create a

15:12.320 --> 15:17.560
Red Hat Enterprise clone like traditional CentOS shortly after the stream transition

15:17.560 --> 15:18.600
was announced.

15:18.600 --> 15:23.040
And while that does seem a little farfetched at first, it's actually, it's logically pretty

15:23.040 --> 15:26.880
possible when one sees that this could just be a potential expansion of their already

15:26.880 --> 15:31.100
existing enterprise service that they offer called Expanded Support.

15:31.100 --> 15:37.980
That service provides patch services for SUSE and Red Hat Enterprise systems, only they

15:37.980 --> 15:41.120
like to offer prices lower than if you were paying Red Hat directly.

15:41.120 --> 15:46.000
Yeah, so it would make sense to presume then that a lot of the backend infrastructure they

15:46.000 --> 15:50.240
needed to build all those rail packages was just already in place because they were working

15:50.240 --> 15:53.360
on this cheaper than Red Hat patching service.

15:53.360 --> 15:59.360
But I also seem to recall OpenSUSE tweeting some Tonya Harding memes teasing CentOS over

15:59.360 --> 16:00.640
the stream announcement.

16:00.640 --> 16:06.960
It occurs to me that wouldn't this offering kind of compete directly with their own SUSE

16:06.960 --> 16:08.840
Enterprise Linux offering?

16:08.840 --> 16:14.600
I mean, this move would kind of be putting themselves in the same position Red Hat was

16:14.600 --> 16:20.700
in forcing their expensive commercial Enterprise Linux distribution to compete with their free

16:20.700 --> 16:23.960
Enterprise Linux distribution.

16:23.960 --> 16:29.120
Isn't that exactly where Red Hat used to find itself with CentOS in the old days?

16:29.120 --> 16:30.760
You're completely right.

16:30.760 --> 16:31.760
That's pretty funny.

16:31.760 --> 16:37.900
Wow, they're recreating the same exact problem that Red Hat moved earth and mountains and

16:37.900 --> 16:41.520
rivers to get out of like, that's pretty ironic.

16:41.520 --> 16:45.360
And only this time, it's not even the same code base that their products based on or

16:45.360 --> 16:48.200
even based on a product that they control.

16:48.200 --> 16:51.780
But I'm actually just more struck by what almost seems like an implicit statement being

16:51.780 --> 16:54.500
made here by the Enterprise shop at SUSE.

16:54.500 --> 16:56.480
This is the business side of the house.

16:56.480 --> 17:01.640
And they're kind of implicitly stating with this move that RHEL is the de facto Enterprise

17:01.640 --> 17:03.480
operating system.

17:03.480 --> 17:08.040
And to be clear, there has been no official announcement yet.

17:08.040 --> 17:13.480
We'll keep an eye out, but these 38 hits in the repo logs line up exactly with the rumors

17:13.480 --> 17:18.720
we've been hearing, even down to the name.

17:18.720 --> 17:25.260
Also of note recently was an apparent decision made by CERN to stick with CentOS Stream.

17:25.260 --> 17:29.480
Many in the CentOS community have been watching to see where this influential group would

17:29.480 --> 17:30.480
end up.

17:30.480 --> 17:35.600
When the presentation delivered on September 15th on behalf of the CERN IT group, and we

17:35.600 --> 17:41.800
have the slides linked in the notes, the presentation gave a real clear eyed view of the overall

17:41.800 --> 17:44.400
CentOS picture we have today.

17:44.400 --> 17:48.260
And it seems they've been evaluating CentOS Stream for some time.

17:48.260 --> 17:51.100
And the results have been good.

17:51.100 --> 17:57.140
The group said, quote, going forward, we propose to target CentOS Stream 8 as the standard

17:57.140 --> 18:00.080
distribution for experiments.

18:00.080 --> 18:05.240
In particular, they liked having access to the latest software and tools from Red Hat,

18:05.240 --> 18:10.600
and that the rate of change, e.g. system updates, was not as scary as they initially thought.

18:10.600 --> 18:12.800
That's a direct quote.

18:12.800 --> 18:18.160
They also liked that the overall system update stability was great, and the feeling that

18:18.160 --> 18:24.480
the strong CentOS ecosystem meant that migrating to other options down the road would be, quote,

18:24.480 --> 18:28.580
straightforward if an issue with Stream did happen to arise.

18:28.580 --> 18:33.480
And their evaluations did show that CentOS Stream had a higher update frequency than

18:33.480 --> 18:39.360
traditional CentOS, and it also showed that they had faster iterations of smaller changes

18:39.360 --> 18:46.460
in Stream, but perhaps most importantly, they observed an overall much faster CVE response

18:46.460 --> 18:48.360
time in CentOS Stream.

18:48.360 --> 18:53.600
For those reasons and more, they concluded that CentOS Stream 8 would be a supported

18:53.600 --> 18:58.560
and recommended operating system for new installations, and they're already planning to recommend

18:58.560 --> 19:02.600
and support CentOS Stream 9 once released.

19:02.600 --> 19:05.000
Reading through the presentation, I found it to be pretty fascinating.

19:05.000 --> 19:08.240
It's a quick read too, so I don't know, I recommend it if you're interested in this

19:08.240 --> 19:09.240
stuff at all.

19:09.240 --> 19:14.920
But I think no matter how you shake this situation, this is a big, and I would argue, an important

19:14.920 --> 19:17.140
endorsement for CentOS Stream.

19:17.140 --> 19:21.840
If Cernit came out and said they were going a different direction, you know, that would

19:21.840 --> 19:24.040
have been a big loss for the project.

19:24.040 --> 19:28.600
And I think it suggests that some of these doom and gloom predictions that came after

19:28.600 --> 19:32.560
the Stream announcement, it might have been misplaced, maybe people should have waited

19:32.560 --> 19:36.680
a little bit to see how things shake out, because it seems overall, the Linux community

19:36.680 --> 19:42.000
now has better options than we ever did before any of this started, and we now actually have

19:42.000 --> 19:46.940
like a real enterprise Linux community forming at the distribution level, which I'm kind

19:46.940 --> 19:49.440
of shocked we didn't really have that before.

19:49.440 --> 19:55.360
It's a significant land shift in Linux's most critical market, and it's a shift for the

19:55.360 --> 19:56.360
better.

19:56.360 --> 19:57.360
I agree.

19:57.360 --> 20:00.360
And we're going to keep an eye on this and everything else that's going on these days.

20:00.360 --> 20:04.840
Check out linuxactionnews.com slash subscribe for all the ways to get new episodes.

20:04.840 --> 20:09.000
And linuxactionnews.com slash contact for ways to get in touch.

20:09.000 --> 20:11.480
And don't miss our Ubuntu 21.10 review.

20:11.480 --> 20:16.280
Yep, it's that time of year, and it's coming up this week in Linux Unplugged, episode 427.

20:16.280 --> 20:22.800
And we'll be back next Monday with our weekly take on the latest Linux and open source news.

20:22.800 --> 20:49.800
Thanks for joining us.

