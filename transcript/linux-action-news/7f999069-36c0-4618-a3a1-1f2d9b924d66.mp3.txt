Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 50, recorded on April 22nd, 2018.
I'm Chris.
And I'm Joe.
Hello, Joe.
It's good to be connected with you, especially on a week when we have so many new releases.
Let's kick it off with Triskel 8.
Yes, hot on the heels of the last release, 7, which was released in November 2014.
So three and a half years ago.
Hmm.
And this is based on Ubuntu 16.04.
And what's coming up next week, Ubuntu 18.04.
So it's kind of a little bit out of date, which is a real shame because this is a great
release of Triskel.
It's now based on Marte, which as we know is a rock solid desktop that I love second
only to XFCE for me.
And I could use this distro as a daily driver.
Yes, it's completely free software, but it turns out that I don't tend to use that much
non free software.
And if you want to install Chrome, well, spoiler, you can actually do that on this.
I've tried it just for the lulz and it worked absolutely perfectly.
Huh.
You know, I'm actually kind of surprised, Joe.
I thought you'd be more impressed.
You run Triskel as a sort of a validation testing against hardware all the time.
So you are a kind of a frequent Triskel user.
And something based on 16.04 is going to be supported for a few more years.
And they do say in the post, they're going to be hot to trot on 8.0 based on 18.04.
They think they're going to have it out pretty close to the 18.04 release.
And the other thing that strikes me is who's using Triskel Linux that wants the totally
latest stuff?
Because you got to bear in mind this is shipping with the Linux Libre kernel, which we talked
about last week.
And it's 4.4 by default.
It's not like you're looking for the latest software here.
Well, I don't think that's fair.
Just because you're into 100% freedom doesn't necessarily mean you're not interested in
the latest versions of stuff.
What if you've got a really new laptop that needs a newer kernel?
And what if you rely on applications that have been revved in the last couple of years
significantly and have features that you depend on?
It's I don't think it's fair to kind of put those people in a box of just, oh, they want
crusty old stuff or whatever.
Because look at this release.
Look at the desktop that's in front of you.
It's a really nice professional looking Marte implementation that's based on Ubuntu, but
just happens to be totally free.
I think that it's not their fault.
I'm not blaming them because obviously they are lacking developer resources here.
And that's why it's taken so long to get this out the door.
And hopefully this release will generate enough buzz to then attract a few more developers
in and hopefully get this next version out that's based on 18.04 within the next year
or so and play catch up.
You know, funny enough, I think you might have just described the ideal PureOS user.
Really because PureOS is based on Debian, but it's using Gnome 3 and Wayland.
It's much more modern, but it goes for the same sort of user where they're free and Libre
software only.
Privacy is a huge part of PureOS, and it's backed by Purism.
So you may be a PureOS user, not a Triskel user, Joe.
Yeah, but Gnome, no thanks, whereas Marte, yes, please.
Hey, now save the Gnome commentary for later in the show.
Yeah, I suppose.
But Triskel to me seems more relevant than it ever has done.
People are starting to really care about software freedom because it goes hand in hand with
privacy.
And so it seems like maybe this stuff was a little bit forgotten in the past, but in
the past few years, people have started to pay more attention to this.
Companies like Purism have come along and capitalized on that.
And it seems that if they can keep this momentum going and get this version nine out as soon
as possible, then they could potentially get some real traction with it.
So fingers crossed.
You know that I do agree with.
You and I both kicked the tires on this release to just do a little bit of prep for the show.
And I was really pleasantly surprised with their implementation of the Marte desktop.
You would think they've been shipping this thing for years.
It looks so good.
So it's a solid release.
And if Triskel is appealing to you and you're okay with the 1604 base, I would encourage
you to go to the website and give it a go.
I was pleasantly surprised when I tried it.
What about you, Joe?
Yeah, I wasn't that surprised.
The one thing is the menu, they're going for the old school menu, and it'd be nice if they'd
integrated Brisk, which as we know in Ubuntu, Marte is an option now and it's a really great
menu, which I think it is possible to get it running in Triskel, but it's not there
by default.
So that's the only sort of little thing I would say they ought to change.
But hopefully in the next release, they'll do that.
Fair enough.
I didn't notice that because I've been too busy running React OS this weekend.
I'm a bit of a fanboy now, Joe.
Yeah.
So this is a completely open source operating system, but it's not based on Linux.
It is its own thing and it aims for binary compatibility with Win32.
So it's essentially open source Windows.
Now I was really disappointed that I could not get this to run on any of my machines,
but I understand that you got it running in a virtual machine.
Yeah, I did.
In VMware Player set up to run a Windows VM, I managed to get the latest React OS to boot,
which just came out.
It's React OS 0.4.8, and there is a ton of cool stuff.
It's peak Windows.
If you liked Windows 2000 era Windows, but you like some of the control panel functionality
of Windows 98, but you like NT compatibility and stability, React OS is trying to aim for
that.
Now they haven't gotten there with the stability, but when you download the ISO, it's tiny.
Once it's installed on your system, it takes 500 megabytes of hard drive space.
It can operate in 96 megabytes of RAM.
It's been written from scratch.
It has over 100 active developers contributing to it, and it is blazing fast.
I have not used an operating system this fast, including even Windows 7 in classic mode on
modern hardware with an SSD is not as fast as React OS was, which makes sense.
It's a slim early days OS, but it's so great.
It's this weird alternate dimension of Windows where when you go in there and say you want
to turn on anti-aliasing, well, in the Microsoft world, that would be using clear type.
But in React OS, because it's free software, you see all of these familiar free tools to
do anti-aliasing, or when you go set up the quote network time in Windows, it's actually
pointing to pool.ntp.org.
It's using like open source community resources and technology, and it's on top of this weirdo
Frankenstein version of Windows that's faster and cleaner and more efficient than Windows
ever was.
It's remarkable.
I got to say, Joe, I've never run React OS until today.
I did it for this show, and I am going to be an avid follower of this project now because
it's perfect for somebody who occasionally might need Windows compatibility with something,
and if they can get there, if they can make it stable and they can make it work, this
is going to be a remarkable project.
I think it's going to be a true challenger to desktop Linux if they can get there.
I think that's going a bit far because they've got a long way to go to make it totally stable
and support as much hardware as Linux does, but with this release, what really jumped
out at me is that now they're supporting Vista, Windows 8, and Windows 10 software, and so
I was very keen to try and get some of the big hunking proprietary music applications
that I use in Windows to try and get my electric drums working and the amp modelers and stuff
that I make my music with, but I just could not get it running on hardware, and that was
so disappointing.
That's why I didn't really bother with a VM because you're never going to be able to do
that kind of stuff with USB, and you're going to have latency issues and all the rest of
it.
Yeah.
I don't really think it's ever going to get there either, but if it could somehow, it
would be really remarkable because, so as an example, another thing that landed in the
new release in 0.48 is this new NTFS driver that came up during a couple of Google summers
of code, a couple of them accumulated in new code that landed in ReactOS for the NTFS driver.
You've got free type 2.9 baked into this thing, but then there's other things in here that
are really kind of cool like support for Extended 2 and Extended 3.
Why not?
Why not have that built in?
And it's like a power user's version of Windows Explorer.
It's better than Windows Explorer ever was.
It's like a cross between Dolphin and Windows Explorer, and I was able to get a couple of
Win32 apps to run, but I was so taken away by the whole OS and how fast it was, how simple
and clean it was, and how Windows has really changed over the years from what I consider
peak Windows, which is around Windows 2000 professional desktop as a professional Windows
workstation.
I really loved it.
I thought that was when they did a great job, and this is it.
That's what ReactOS is.
So to see this new release land, to see it be really great, I can see it going two ways.
I think you're probably right.
It's never going to quite get to the level that Linux is in terms of hardware support
or even robust architecture support.
But if you can nail that hardware or if you can get it in VMware, it really is quite impressive,
and it's an amazing statement of what open source development is capable of, a complete
re-implementation of peak Windows.
Yeah, who knew that Linux Action News would be your preeminent ReactOS podcast, but there
we go.
It is part of that open source world after all.
Yeah.
Well, speaking of the open source world, the German government is going to be using NextCloud
on quite a big scale.
I guess there was a pilot program running with about 5,000 users since October 2016.
I hadn't heard much about it.
That's not too uncommon.
But now it looks like that pilot program is going to get rolled out to 300,000 users in
different federal agencies.
This is coming from Der Spiegel, which is a famous paper from over there, and they confirmed
that the focus of this is to construct a private cloud for the German federal government to
address concerns within the government for a platform that is fully controlled, that
would not allow access to data by any third party, and was fully GDPR compliant.
Yeah, the NextCloud guys must be rubbing their hands at this GDPR stuff, because I presume
that it's not just going to be Germany who's going to be looking at them, there's going
to be other governments all over Europe.
Yeah, kind of funny, on the other side of the pond over here in the States, our federal
government agencies are going more and more with AWS.
That's been a big trend with the CIA and other agencies that want to have a secure public
cloud is they've been contracting with Amazon to build them a private version of AWS.
This route seems way more sustainable, way better, and they can run it on their own internal
servers.
I guess it's a different scale, but I really like to see the direction of the German government
here going with NextCloud for this kind of thing.
And they could even probably afford to hire a few developers to contribute to areas that
they feel might need it.
Well, that was my next point.
With 300,000 users, that is a good stress test, isn't it?
And it means that little corner cases and bugs that people didn't even know about will
be found, and they'll presumably have the budget to fix them, and then we will all benefit
as a result.
I wonder if I'll bump into anyone from NextCloud at Linux Fest Northwest.
I'd love to pick their brain about this development, because you have to wonder if that recent
announced end-to-end encryption on a per-folder basis, and NextCloud Talk as well, didn't play
a role in sealing this deal.
Oh, I would have thought that would be a big part of it.
I mean, the end-to-end encryption, definitely.
The talk stuff, maybe not.
I mean, it's an attractive feature, but I think that the end-to-end encryption is huge,
isn't it, in terms of enterprise, and in this case, government.
You need to have that to be enterprise-grade.
Yeah, I completely agree.
Although, I think Dropbox shows us you don't necessarily need to have end-to-end encryption,
but this story may also be showing us that it could be the thing that seals the deal,
that little extra that pushes it over the edge.
Last.ting.com.
Go there to sign up for mobile that is smarter than unlimited.
It's pay-for-what-you-use wireless.
Think about this for a second.
It's $6 for the line, and then you just pay for the minutes, the messages, and the megabytes
that you use.
Ting has a GSM and a CDMA network that you can choose from, and that means they have
a bunch of devices they support, so check their BYOD page.
If you go to last.ting.com and you bring a device, they will give you $25 in service
credit.
That's likely going to pay for more than your first month.
The average Ting bill is just $23 per month per phone.
That's nationwide coverage, pay-for-what-you-use, no contracts, no service agreements.
They have a great control panel that lets you manage everything, see your usage at a
glance, and you can also set usage alerts.
They have a great range of devices since they have the two different network technologies
to choose from, and you can rest assured that Ting's a great mobile service provider because
they just rocked the Consumer Reports rankings in 2017 that came out just a bit ago.
It's a great report, and you can see it on Ting's website.
Go to last.ting.com.
They are a strong contender, and then they wrap it all up.
They back it up, if you will.
They back that thing up with great customer service.
Tell people who really help, and right now you can go to last.ting.com, and you can grab
the Motorola E4 Plus for $134 US greenbacks, no contract, no service agreement, out the
door.
You own the device.
It's got a 13 megapixel camera, 2 gigabytes of RAM, a 5,000 milliamp battery, and that
Moto UI is thin, and they keep that thing up to date.
For $134, no contract, no service agreement, you're good to go, last.ting.com.
Okay let's talk about our favorite company again, Microsoft, and they have announced
an operating system.
It's based on Linux.
It's not a big thing.
Yeah, it's just the next big thing from Microsoft that's going to ship on tens of billions of
devices a year if their predictions work out.
I had a great chance to actually chat with the people behind Azure Sphere OS, and they
would like you to think of it as a three-part solution.
It's an MCU hardware device.
It's a secured operating system that's powered by the Linux kernel, and then it's a cloud
service that performs metrics, data collection, and a support channel for updates that last
10 years.
And the idea is you can build an IoT product around this MCU, and that ranges from stuff
like a coffee pot that just needs a simple real-time operating system to something more
sophisticated.
And while I was talking to Microsoft, I said, why not Windows?
Windows seems like that would have been the route of Microsoft of the past.
You know, cram NT down on this thing and call it Windows ROT.
So why Linux?
And they said, simply enough, we couldn't get Windows down to that size, and quite frankly,
hardware manufacturers want to get innovating right now.
They want something that they can start building on top of.
They don't have to call some bureaucrat at Microsoft and say, please sir, can I have
a license for your Windows source code?
I'd love you to share the code with me so I can build my next product, sir.
They don't want that.
The market that they're trying to sell to just simply is not interested in that when
they can go grab the Linux source code and start building tomorrow.
So they have to be using Linux, essentially, to be competitive in the market and to get
down to the size they want.
But keep in mind, there's other things at this level that Microsoft is implementing
that are outside of Linux.
They brought over some of the boot validation and security code from the Xbox system and
the crash metrics and update systems from Windows to layer it into this OS.
So there's some additional Microsoft innovation mixed in here.
This is by no means the Linux that we're used to, is it?
At the core, it is Linux 4.9, straight up GPL Linux 4.9, and they're using containers
and namespaces to do isolation of processes and to keep everything secure.
But when it boots, that's Microsoft technology.
When it crashes and has an error report, that's Microsoft technology.
The cloud services it's connecting back, obviously, Microsoft technology.
But in a way, that's what the market wants.
It's what Microsoft's great at, Azure and 10 years of support, combined with what open
source is great at, the Linux kernel.
Microsoft has really brought those two things together with this product, and they're selling
it to people that are not necessarily great at building these things, creating this aspect
of the product.
So Microsoft is kind of solving a problem for the crockpots and sous vide machines of
the future that must connect to Wi-Fi.
But once again, this is just more pragmatic use of open source by Microsoft, who are a
company who needs to make money, and like many, many companies out there who need to
implement solutions, a profitable way to do that is to take advantage of open source.
And you've got a lot of people kicking up a stink about this, saying that it's embrace
extend extinguish and all that, but I'm just not buying that anymore.
The bottom line is that open source makes business sense.
Microsoft is a business that is historically quite good at making money.
And so they are moving with the times and getting into IoT a very sensible way using
Linux.
Yeah, and I think the capitalist hard truth of the matter is, it's just going to sell
more if it's Linux at the core instead of Windows, and Microsoft is aware of that.
And it comes down to just those simple market dynamics.
It definitely isn't embrace extend and extinguish simply because if they extinguish it, then
they won't be able to make money off it anymore.
Microsoft of 2018 knows how to make money off of Linux free software and open source.
And if they extinguish it, there goes their revenue stream.
Yeah, and the idea that they're somehow controlling Linux or open source seems to be absolutely
nonsense to me.
Yes, they've contributed patches that are specific to Azure, but the rest of us who
aren't using Azure, we're not using those patches, and we'll just happily carry on using
AWS or DigitalOcean or on premises or whatever.
So I just don't understand all the hatred towards Microsoft.
Yes, they've got this horrible history of calling Linux a cancer, and the patent shakedowns
with Android and all the rest of that.
But in terms of what they've been doing with the subsystem for Linux, and that Linux based
switch OS that they were using internally on Azure, and now this, it's all just pragmatism.
It's all just them making money with Linux, and I don't think they've got evil intentions
beyond making tons of money using open source, like someone like Red Hat is doing.
They are a company who are making tons of money using open source, and Microsoft see
that and see that the future is with open source.
You've mentioned free software a couple of times.
You're never going to hear them use that term, but they're interested in using Linux to make
money like so many other people are.
That's exactly it.
There's a couple of school of thoughts.
Microsoft is trying to squish Linux down into some sort of controllable form that they have
great influence over, and then the other school of thought is that Microsoft is a clever calculating
business that has figured out different revenue paths based on what the consumer market that
they serve is demanding.
My experience shows me that whatever route is going to make a company more money, they're
likely to take, and in this case, simply shipping Linux, supporting open source on Azure and
on now Azure Sphere OS and the Windows subsystem for Linux is truly about selling to customers
that are asking for those things.
If they didn't have customers demanding them, they probably wouldn't be making them, but
they are, and so they're happy to sell to them.
That's always been the case.
If you go way back into Microsoft's history, Microsoft began making money selling desktop
software for the Macintosh.
You understand that they didn't care.
They're happy to make software for any platform that has customers.
If your platform has customers, Microsoft will make something for you.
That is in the DNA of this company way, way, way back before the good old Linux versus
Windows wars.
Yeah, but people are still going to write about them and use M dollar sign and stuff
like that, aren't they?
It's never going to get away from that.
Embrace Linux Dagwish!
Yeah.
All right, so Google have announced yet another messaging service and they've shut down, well
not shut down, but they're pausing investment in yet another product.
So Allo was something that they released a year or two ago.
It was this cool new chat application and they've decided that yeah, they don't really
want to spend any more money on that.
It's only got 50 million users compared to the how many billion using Facebook Messenger
and WhatsApp.
So it's been a colossal failure as usual.
But the difference this time is that it's not just going to be this standalone app that
they have complete control over.
They're going to work with the carriers to implement something that is much closer to
what you have in the iOS world with iMessage.
The only thing that was more obvious than Canonical's failure to gain traction in the
mobile market was Google's launch of Allo was just everyone knew it was going to fail
before it even went out the door.
Before it even got around to some of these devices, we knew this was going to fail.
This is not a big surprise.
The issue that I have with is this total focus on RCS because what it feels like, as you
just alluded to, is iOS envy.
And whenever Google gets trapped in iOS envy, they don't do good.
RCS sounds cute.
The idea is iMessage for everyone.
We can send you rich text messages about your flight status, and you don't have to have
any particular application.
The only problem is this little itsy bitsy thing that comes up from time to time called
the carriers.
RCS is completely controlled by the carriers.
We will go back to SMS hell times 10.
And this is also a great way to control, track, and monitor users because it all flows through
the carriers.
There's no end-to-end encryption, my friends, because the carriers have to be able to intercept
that.
And of course, they're happy to take a government search warrant as well.
And you never know how the carriers will implement any of this because if MMS and SMS are to
teach us anything, it's horrible hacks.
And if you've ever worked in a data center where there is a system that is bringing SMS
messages from one carrier to another carrier, you know exactly what I'm talking about.
You know how bad this is.
And the carriers cannot be trusted with this.
They have never even fixed the existing systems.
And the idea that because Google has iMessage envy, they're willing to subject their users
to yet another round of messaging hell, I think tells us everything we need to know
about Google's capability to deliver on this product.
This is clearly a problem they're not capable of solving in a way that is user-friendly.
RCS on its face seems like a good idea.
But the issue comes down to every single carrier in the entire world has to get the implementation
right.
And you have to hope that these carriers in some countries won't arbitrarily block when
the Russian government or the Iranian government comes knocking and says this person is no
longer allowed to communicate.
Because carriers, they never do that kind of thing.
I think what really kind of has me riled up about this is they had this problem solved
with Google Talk.
They had this problem solved before any other messaging application was successful.
Before Telegram, before Viber, before WhatsApp, before iMessage, there was Google Talk.
And it was based on XMPP, which, by the way, works great on mobile now.
They could have integrated that into everything.
It was already integrated into Gmail.
They could have integrated into Google Docs.
They could have put Google Talk everywhere.
And they could have owned it.
It was great.
I was on it.
A lot of people were on it.
They blew it because they couldn't control it.
And since then, they have subjected their user base to different arbitrary messaging
platforms almost every other Android release.
And now, they're going to subject us to more carrier whims just like we have with the Android
releases themselves.
Well, exactly.
Who in their right mind would embrace this at this point, once it becomes a standard
or once it becomes more common on Android devices?
You'd be a fool, like you would have been a fool to embrace Allo and get all your friends
chatting on that.
I mean, the bottom line is that Google have consistently failed with messaging.
And they've consistently shown that when they are failing with a product, they will just
can it in an instant almost.
Google Reader is the one that everyone always talks about.
But believe me, there have been so many more that have affected me personally.
And it just comes down to fool me once, shame on you and all that.
You cannot expect to invest too much in any new Google product or service.
And they should have, well, maybe, as you say, stuck with Google Talk.
Or maybe they should just give up.
And I mean, this kind of is them giving up, isn't it, because it's them giving up on having
their own standalone application that they're completely in control of.
And they are transferring this control over to the carriers and want to work with them.
But ultimately, this is just them throwing in the towel, it looks like.
I know some people listening are going to get upset that I'm sort of crapping on RCS
a bit.
And I agree, in an ideal setup where it gets implemented well and it gets wide adoption
on iPhone and Sailfish OS and Ubuntu Touch, then, OK, RCS is something I'm willing to
talk about.
But in the meantime, I'm starting to think this is something the platform vendors like
Google and Apple and the carriers just shouldn't be involved in and let somebody else run the
messaging.
And it could be cross-platform, like Telegram, like WhatsApp, like everything that has a
large user base.
Maybe we'll see adoption in the iPhone for RCS.
Everything tells me it's going to be slow coming, though, because iMessage already solves
this problem for Apple's users, and that tends to be all they need.
And if you look at the situation for Android users, it's poor.
Oftentimes the default SMS app has been perverted in some way by the manufacturer, sometimes
completely replaced.
You go into the Play Store, you start looking for alternatives, you come across Google Voice,
that sends you down a rabbit hole that's hell.
You end up trying to text with people that doesn't support MMS, so you go back to another
text messaging application.
You find Hangouts, except for Hangouts is dropping SMS support, so then you go to Allo,
and now Allo's being ended.
So it's a really bad situation for Google's users, and it's shameful that they haven't
solved this already.
And they had it completely solved, in my opinion, with Google Talk, but I digress.
It's really just a sad state of affairs.
Maybe we'll see RCS adoption, but I'm doubtful.
Well, you never know.
Well, a quick catch-up then about GNOME Shell and this memory leak.
It has now been fixed, and with the imminent release of Ubuntu 18.04, Will Cook has put
a shout-out for people to get testing these fixes.
And there's even talk that it might get backported into the previous version of GNOME as well.
So it seems that the big fuss that was brought up has actually worked, and this has been
fixed.
So maybe you can switch back to it on your OBS machine, eh?
I am definitely excited to give it a go, and I do hope they backport it.
I guess a lot of people would say, eh, memory leak isn't fair, although that's what all
the headlines are.
But it's more like a misalignment between memory systems.
There is a fantastic post that I will have in the show notes, linuxactionnews.com slash
50.
I think it'll be the last link that breaks it down.
If you want to read the whole thing, it's fascinating to see all these different camps
come together.
So the author of the post I have linked is from Endless.
Of course, there was also some really great input from a developer at Red Hat and from
a developer at Canonical as well as a bunch of community members that contributed to solving
what everybody just said was a memory leak.
And it kind of looked like one, because you could trigger it very easily.
If you just hit the super key and got the GNOME overview and you just kept hitting that
sucker, you would actually cause your memory usage to continually climb, which looks like
a classic memory leak, and that's why it's been termed that everywhere.
But that's not actually what's going on.
As you probably know, GNOME 3 is based heavily on JavaScript and the extensions are based
on JavaScript.
And traditionally, JavaScript objects track who they own in memory.
So when the garbage collector to clean up the memory is launched, it checks that and
it finds all the dependent objects, cleans them up.
Easy peasy.
But here's the problem.
That doesn't work for C objects.
C objects don't track who owns them.
Instead, they only track how many owners they have.
That's the traditional reference counting mechanism, and it works fine in C land because
C is not garbage collected.
To the garbage collector, however, the C objects look all disjointed, disconnected, like they
have no dependencies, like they all are on their own little island.
So it doesn't go clean them all up because it doesn't know the order of operation.
It just goes, destroys the root one, and would leave all of these other objects in memory.
So while it wasn't necessarily a memory leak, things weren't getting cleaned up properly.
And there's different ways to address this, like you can schedule a garbage cleanup, and
you can do different approaches to take care of this.
But the biggest offender to the memory leak was really these objects piling up to be garbage
collected, and then these child objects that would get completely ignored by the garbage
collector.
So more of a misbehavior than it is a leak.
And now what they've done is they've queued garbage collection every time an object is
marked for destruction.
What that means is they've scheduled garbage collection to go in as part of the main loop
whenever it's idle.
So there's an idle callback that happens.
And when that idles, that means there's nothing really going on.
The main thread's not doing anything.
So hey, anybody have some idle work for me?
It checks in.
When that happens, the garbage collector will be executed, and it will go through and do
a whole bunch of scheduled cleanup and take care of that stuff.
So it should stay on top of it.
Now the early results look good.
It seems like this is working, and it's keeping memory usage down.
There could be some performance overhead.
There could be some secondary results from this.
So a lot of different projects have been calling for testing this week, especially, as Joe
just mentioned, 1804 is just around the corner, which is really a showcase for Gnome.
But it's great just to see folks from Red Hat contributing, of course, Canonicals, Daniel
Van Vought, I think.
I can't remember his last name.
He was also helping test some of the deep issues in the mutter.
He's continuing to work there as well.
It's just a really great sort of cross-project collaboration that came together.
Some people provided great stats and memory usage information.
Other people provided code.
Lots of people provided additional information on the bug reports.
It took a few weeks, but they really got somewhere that shows some considerable progress.
And they've made other improvements that should actually make Gnome Shell smoother, unrelated
to this memory misbehavior.
Yeah, it's great to see so many different people and organizations coming together to
fix this.
But it does need to be tested.
And so if you are a Gnome user, especially if you're running the Ubuntu 1804 dailies,
then you can go out and get the devs and get these fixes installed and get it tested and
report any problems that you have.
Yeah, and of course, we'll be covering the 1804 release as well as all of the news next
week and a brief report from my adventures at Linux Fest Northwest.
So go to linuxactionnews.com slash subscribe for all the ways to get new episodes every
single week.
And go to linuxactionnews.com slash contact to get in touch with us.
And you can support the entire network, our future projects, our current projects and
more at patreon.com slash jupitersignal.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Rissington.
Thank you for joining us and we'll see you next week.
Until then, have a great day, and we'll see you later.
