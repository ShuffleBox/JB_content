1
00:00:00,000 --> 00:00:15,880
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

2
00:00:15,880 --> 00:00:20,680
This is episode 35, recorded on January 7th, 2018.

3
00:00:20,680 --> 00:00:21,680
I'm Chris.

4
00:00:21,680 --> 00:00:22,680
And I'm Joe.

5
00:00:22,680 --> 00:00:23,680
Hello, Joe.

6
00:00:23,680 --> 00:00:24,840
Happy 2018.

7
00:00:24,840 --> 00:00:28,440
Let's kick off our first episode of the new year with some positive news.

8
00:00:28,440 --> 00:00:31,200
Yeah, UbiPorts are still going strong.

9
00:00:31,200 --> 00:00:36,260
They released during the holiday break OTA 3 for quite a lot of their devices.

10
00:00:36,260 --> 00:00:42,320
And even more exciting, they are working on Android support using Andbox.

11
00:00:42,320 --> 00:00:46,080
And this is something that I'm really happy to see.

12
00:00:46,080 --> 00:00:52,180
It's I think the major thing that Canonical got wrong with Ubuntu Touch was not working

13
00:00:52,180 --> 00:00:56,440
towards getting Android apps working and being quite stubborn about it and saying, no, we're

14
00:00:56,440 --> 00:00:58,240
a different platform.

15
00:00:58,240 --> 00:01:01,560
And there are a lot of philosophical reasons why they chose to do that.

16
00:01:01,560 --> 00:01:04,400
And I suppose there are technological arguments as well.

17
00:01:04,400 --> 00:01:07,040
Andbox wasn't as well developed back then.

18
00:01:07,040 --> 00:01:08,500
But enough of that.

19
00:01:08,500 --> 00:01:11,000
Looking forward, we're going to get Android apps on Ubuntu Touch.

20
00:01:11,000 --> 00:01:15,840
And suddenly, it's looking like a much better prospect to me in terms of something that

21
00:01:15,840 --> 00:01:18,280
I could actually use as a daily driver.

22
00:01:18,280 --> 00:01:24,380
Now in 2018, it seems obvious that you have to have solid Android app support.

23
00:01:24,380 --> 00:01:28,960
And this looks really good because it's not your old kind of Android app support.

24
00:01:28,960 --> 00:01:34,200
It's the new container version of Android app support where things run much faster.

25
00:01:34,200 --> 00:01:37,360
No longer do you have to emulate the entire hardware stack.

26
00:01:37,360 --> 00:01:39,280
So this is a new version.

27
00:01:39,280 --> 00:01:40,280
And it's a pretty cool project.

28
00:01:40,280 --> 00:01:42,600
So I'm really glad to see this land.

29
00:01:42,600 --> 00:01:44,140
This is also a general maintenance update.

30
00:01:44,140 --> 00:01:47,200
It's not just about early days of Android support.

31
00:01:47,200 --> 00:01:51,420
The updates also changed things over to using DuckDuckGo for search.

32
00:01:51,420 --> 00:01:53,980
They removed the Ubuntu store from the app scope.

33
00:01:53,980 --> 00:01:59,960
There's a lot of other nice little tidying changes that just keep the thing moving.

34
00:01:59,960 --> 00:02:03,460
And keeping it moving is really their best option right now.

35
00:02:03,460 --> 00:02:09,840
It's based on Ubuntu 15.10, which as you probably know, because of math, is no longer supported.

36
00:02:09,840 --> 00:02:15,000
So they're really doing tidying, winter cleaning, and getting things ready to move the entire

37
00:02:15,000 --> 00:02:18,880
project forward to a more sustainable version of their Ubuntu base.

38
00:02:18,880 --> 00:02:24,360
Yeah, this Anbox stuff and also Snaps that they're working on, they are both only going

39
00:02:24,360 --> 00:02:30,480
to be available in the 16.04 version of it, which is getting there.

40
00:02:30,480 --> 00:02:31,960
It's still pretty unstable.

41
00:02:31,960 --> 00:02:38,680
I've tried 16.04 and a Nexus 5 and it's not usable yet, but they don't claim that it is.

42
00:02:38,680 --> 00:02:41,200
And this is all very much work in progress.

43
00:02:41,200 --> 00:02:46,520
But as you say, the 15.04 version, this latest OTA of theirs, that is solid.

44
00:02:46,520 --> 00:02:48,320
It is working well.

45
00:02:48,320 --> 00:02:54,360
But it still has the problems that it had before for me.

46
00:02:54,360 --> 00:02:56,320
I'm much more positive about it now.

47
00:02:56,320 --> 00:03:01,440
It's a community project and it's not being sold as this consumer-ready operating system

48
00:03:01,440 --> 00:03:03,440
because they don't claim that, do they?

49
00:03:03,440 --> 00:03:09,500
They claim that it's still for developers, enthusiasts, and that's kind of how I've always

50
00:03:09,500 --> 00:03:10,500
seen it.

51
00:03:10,500 --> 00:03:11,500
I agree.

52
00:03:11,500 --> 00:03:12,500
And that's the sweet spot.

53
00:03:12,500 --> 00:03:17,620
And those of us who have things like the Nexus 5 or the Fairphone 2 or some of the BQ devices

54
00:03:17,620 --> 00:03:21,680
or even a Nexus 4, we can inject new life into these devices.

55
00:03:21,680 --> 00:03:26,760
My Nexus 5 is a great device and it's sort of a shame that Android has left it behind.

56
00:03:26,760 --> 00:03:32,880
And I love, love, love that projects like this give me something to play around with

57
00:03:32,880 --> 00:03:37,580
this old device that's now super easy to mod, it's super easy to get control of, I can find

58
00:03:37,580 --> 00:03:43,120
all kinds of extra parts for, I can buy them on eBay, the entire Nexus 5 for really cheap.

59
00:03:43,120 --> 00:03:48,200
It's a great playground device and if UbiPorts didn't do much more than just give new life

60
00:03:48,200 --> 00:03:53,920
to this phone, I'd be pretty happy just as a geek and maybe there's a market there.

61
00:03:53,920 --> 00:03:59,600
Maybe people like me represent a large enough market now that a community project can continue

62
00:03:59,600 --> 00:04:00,600
on.

63
00:04:00,600 --> 00:04:04,700
Yeah, don't forget the OnePlus One, of course, which was a really popular phone at the time.

64
00:04:04,700 --> 00:04:09,920
I've now moved on to a 3T, but I've still got my old OnePlus One and that is a perfect

65
00:04:09,920 --> 00:04:11,000
device to use with it.

66
00:04:11,000 --> 00:04:14,940
It's got three gigabytes of RAM, it's got a really powerful processor and there's no

67
00:04:14,940 --> 00:04:18,080
reason why it won't be able to run this and box stuff.

68
00:04:18,080 --> 00:04:22,400
And that I think is probably where I'm going to be testing it also on the Nexus 5 that

69
00:04:22,400 --> 00:04:23,400
I've got.

70
00:04:23,400 --> 00:04:25,000
But yeah, I'm really looking forward to this.

71
00:04:25,000 --> 00:04:30,520
Now just a quick note, as I wax on poetically about getting life into old devices, Project

72
00:04:30,520 --> 00:04:36,500
Andbox, which is the Android in a box project, doesn't necessarily work on all of the older

73
00:04:36,500 --> 00:04:41,480
devices like some of the BQ devices that were the lower-end BQ devices that supported Ubuntu

74
00:04:41,480 --> 00:04:42,480
Touch.

75
00:04:42,480 --> 00:04:45,480
You might not actually be able to run the Project Andbox stuff, which gives you Android

76
00:04:45,480 --> 00:04:46,480
apps.

77
00:04:46,480 --> 00:04:47,480
So keep that in mind.

78
00:04:47,480 --> 00:04:50,900
There is sort of a cutoff of usefulness if you want to be able to run Android apps on

79
00:04:50,900 --> 00:04:52,240
future Ubuntu Touch builds.

80
00:04:52,240 --> 00:04:56,000
Yeah, if you look at their website, anything that is a legacy device is not going to run

81
00:04:56,000 --> 00:04:58,520
this interesting stuff, unfortunately.

82
00:04:58,520 --> 00:05:02,000
Now this is interesting, giving life to your old routers.

83
00:05:02,000 --> 00:05:07,120
OpenWRT, it's a brand name at this point, and we have good news this week, the name

84
00:05:07,120 --> 00:05:09,520
itself is not going away.

85
00:05:09,520 --> 00:05:15,040
But there is a big merger coming between OpenWRT and LEDE.

86
00:05:15,040 --> 00:05:16,600
I think you mean routers.

87
00:05:16,600 --> 00:05:22,280
And I've always said it as lead, I don't know, it all encapsulates LEDE, but it doesn't really

88
00:05:22,280 --> 00:05:27,240
matter anymore because that is going away, that branding, and it's going back to OpenWRT,

89
00:05:27,240 --> 00:05:28,240
which is good.

90
00:05:28,240 --> 00:05:31,540
They've been talking about doing this since I think June of last year.

91
00:05:31,540 --> 00:05:36,920
So it's taken a long time to get all the details worked out, but now finally this is happening

92
00:05:36,920 --> 00:05:42,160
and they can all concentrate on code and making it work well instead of all this politics

93
00:05:42,160 --> 00:05:47,000
stuff that really just distracted from what they should have been doing, I think.

94
00:05:47,000 --> 00:05:52,640
Yeah, now if you used OpenWRT or LEDE, go check the link in the show notes so you get

95
00:05:52,640 --> 00:05:56,640
the details on how long you can expect your version to be supported.

96
00:05:56,640 --> 00:05:58,960
But here is the high level takeaway.

97
00:05:58,960 --> 00:06:04,560
They are merging projects, the name OpenWRT will remain sort of the forward facing project

98
00:06:04,560 --> 00:06:08,480
name, but the code base will really be based on LEDE.

99
00:06:08,480 --> 00:06:12,960
It's sort of a pretty good solid base and they list a whole bunch of reasons on the

100
00:06:12,960 --> 00:06:15,100
wiki why they're going to rebase on LEDE.

101
00:06:15,100 --> 00:06:18,840
So the name will be OpenWRT, but under the hood, it's LEDE.

102
00:06:18,840 --> 00:06:24,960
Yeah, it seems that when that split happened, most of the top developers went over to LEDE,

103
00:06:24,960 --> 00:06:25,960
didn't they?

104
00:06:25,960 --> 00:06:29,600
So it's not a surprise that that code base is in a better shape than the original OpenWRT

105
00:06:29,600 --> 00:06:30,600
one.

106
00:06:30,600 --> 00:06:31,600
Yeah, I agree.

107
00:06:31,600 --> 00:06:35,080
And I appreciate that they're sticking though with the OpenWRT name because routers are

108
00:06:35,080 --> 00:06:40,820
in that fringe where some people who are not necessarily followers of all of this stuff

109
00:06:40,820 --> 00:06:45,240
kind of get interested in this market and they want to reflash their router to make

110
00:06:45,240 --> 00:06:51,200
it more secure, to add functionality, whatever reason, and they go for things that they know

111
00:06:51,200 --> 00:06:56,340
the name of like DDWRT or OpenWRT or Tomato Router.

112
00:06:56,340 --> 00:06:59,980
There's just these names that have sort of populated out there and that's what they go

113
00:06:59,980 --> 00:07:01,120
search for.

114
00:07:01,120 --> 00:07:06,020
And so if you introduce another name at this point, the average consumer is never going

115
00:07:06,020 --> 00:07:07,020
to find you.

116
00:07:07,020 --> 00:07:12,280
And this sort of humble recognition on the open source project standpoint to say this

117
00:07:12,280 --> 00:07:17,300
is the brand that the average consumer recognizes and we're going to stick with it, even though

118
00:07:17,300 --> 00:07:22,360
the code base is LEED, I think it shows some cunning and cleverness.

119
00:07:22,360 --> 00:07:23,360
Well, yeah.

120
00:07:23,360 --> 00:07:25,320
Look at LibreOffice, for example.

121
00:07:25,320 --> 00:07:30,280
How many people, normals, not Linux geeks, install OpenOffice still?

122
00:07:30,280 --> 00:07:31,280
Oh, yeah.

123
00:07:31,280 --> 00:07:36,080
I know a ton of people because that brand is so strong and you can't just expect people

124
00:07:36,080 --> 00:07:38,160
to forget a brand that's quite well known.

125
00:07:38,160 --> 00:07:43,400
And as you say, no one really, well, a few people know about LEED, but OpenWRT, everyone

126
00:07:43,400 --> 00:07:44,400
knows.

127
00:07:44,400 --> 00:07:46,720
So yeah, I think it was the right decision, definitely.

128
00:07:46,720 --> 00:07:50,960
Now something not many of us know about, but we're learning more this week is Google's

129
00:07:50,960 --> 00:07:53,000
experimental Fuchsia OS.

130
00:07:53,000 --> 00:07:57,200
Yeah, the potential replacement for Android at some point.

131
00:07:57,200 --> 00:08:03,600
And it's not Linux based, there's no GPL inside, it's all nice and permissively licensed.

132
00:08:03,600 --> 00:08:07,040
It's very early days still, but there's a device that you can actually run it on if

133
00:08:07,040 --> 00:08:09,360
you've got $1,000 to drop on a Pixelbook.

134
00:08:09,360 --> 00:08:14,440
Yeah, it's Google's Pixelbook and you say it's an Android replacement, but they've actually

135
00:08:14,440 --> 00:08:20,040
been minimizing the ARM work and the Android UI work and they've been doubling down on

136
00:08:20,040 --> 00:08:23,200
supporting the latest version of the Pixel.

137
00:08:23,200 --> 00:08:25,120
So make of that as you will.

138
00:08:25,120 --> 00:08:26,960
I don't know what to make of it myself.

139
00:08:26,960 --> 00:08:32,020
Google's third operating system, which comes after Chrome and Android, documents describe

140
00:08:32,020 --> 00:08:36,080
it as targeting modern phones and modern personal computers.

141
00:08:36,080 --> 00:08:39,280
The OS, as Joe said, doesn't use a Linux kernel at all.

142
00:08:39,280 --> 00:08:44,700
It's got its own Google developed microkernel, which is called Magenta, and then they have

143
00:08:44,700 --> 00:08:48,920
different versions and the current version is called Zircon right now.

144
00:08:48,920 --> 00:08:54,800
And it uses Vulkan for the graphics layer and it uses Flutter for the SDK.

145
00:08:54,800 --> 00:08:59,440
And they say that if you write an app for Fuchsia OS, it'll run on Android or iOS potentially

146
00:08:59,440 --> 00:09:00,440
as well.

147
00:09:00,440 --> 00:09:03,200
It sounds an awful lot like Convergence to me.

148
00:09:03,200 --> 00:09:10,120
So right now they're supporting the Pixelbook as well as the Acer Switch Alpha 12 and old

149
00:09:10,120 --> 00:09:13,000
NUCs from 2015.

150
00:09:13,000 --> 00:09:17,960
And if you have one of those devices and you have a USB device that you're willing to quote

151
00:09:17,960 --> 00:09:21,440
unquote sacrifice, you can try out Fuchsia.

152
00:09:21,440 --> 00:09:26,640
And apparently when you flash Fuchsia installer to a USB thumb drive, it damages in a way

153
00:09:26,640 --> 00:09:29,320
that is irrecoverable.

154
00:09:29,320 --> 00:09:33,000
Really I was reading about that and I think it might just be a miscommunication because

155
00:09:33,000 --> 00:09:37,320
as far as I can see, it just DDs the image over it and destroys the partitioned layout

156
00:09:37,320 --> 00:09:38,320
and everything.

157
00:09:38,320 --> 00:09:39,320
That would make sense, right?

158
00:09:39,320 --> 00:09:42,400
But in Google's documentation, it says it's destructive to the USB device.

159
00:09:42,400 --> 00:09:45,000
So you have to take that warning.

160
00:09:45,000 --> 00:09:49,440
I might have to try this with a really cheap old USB device and see if I can format it

161
00:09:49,440 --> 00:09:53,520
again afterwards because that seems very odd to me that it would literally destroy it.

162
00:09:53,520 --> 00:09:54,520
All right.

163
00:09:54,520 --> 00:09:57,860
Well, let's talk about the thing that's on my mind is that Fuchsia's install process

164
00:09:57,860 --> 00:10:01,260
doesn't support any ARM based targets right now.

165
00:10:01,260 --> 00:10:06,320
So this whole thing about smartphones and tablets seems like a line to me because what

166
00:10:06,320 --> 00:10:10,240
it works on right now is x86 devices like old NUCs.

167
00:10:10,240 --> 00:10:12,460
Isn't that just easier to develop for?

168
00:10:12,460 --> 00:10:17,080
Because if you're going to develop on an x86 device and compile everything, it just makes

169
00:10:17,080 --> 00:10:22,000
it that bit easier and quicker to do while you're in this early development stage and

170
00:10:22,000 --> 00:10:25,400
then they can compile it for ARM later.

171
00:10:25,400 --> 00:10:26,400
I don't know.

172
00:10:26,400 --> 00:10:33,360
I mean, it is a shift in focus, but surely they can't be looking to x86 devices when

173
00:10:33,360 --> 00:10:35,640
ARM is just everywhere.

174
00:10:35,640 --> 00:10:40,700
We'll take this for what it is, but they originally were packaging the system UI as an APK to

175
00:10:40,700 --> 00:10:44,760
run on top of an Android phone for people to try out and they just kind of bailed on

176
00:10:44,760 --> 00:10:45,760
that.

177
00:10:45,760 --> 00:10:48,520
And now they're just working on the x86 like full desktop version of it.

178
00:10:48,520 --> 00:10:52,640
Well, it's always felt like a hedge, hasn't it, from Google because they've got Chrome

179
00:10:52,640 --> 00:10:56,160
OS that is really well developed at this stage.

180
00:10:56,160 --> 00:10:58,680
It is really well developed.

181
00:10:58,680 --> 00:11:02,720
It's just a hedge against the GPL, isn't it, really?

182
00:11:02,720 --> 00:11:06,840
That is what some people have suggested, is that this is Google's hedge against the GPL,

183
00:11:06,840 --> 00:11:10,880
specifically the GPL 3, and that this could just end up being a Chrome runtime.

184
00:11:10,880 --> 00:11:15,480
But there's not much danger of the kernel being re-licensed as GPL v3, is there?

185
00:11:15,480 --> 00:11:16,480
Not from what I've seen.

186
00:11:16,480 --> 00:11:19,800
It seems especially now with this new signing statement that we covered a few weeks ago,

187
00:11:19,800 --> 00:11:22,180
the GPL 2 is fairly locked in for the Linux kernel.

188
00:11:22,180 --> 00:11:24,600
That's why I don't really buy that it's GPL hedging.

189
00:11:24,600 --> 00:11:26,240
It feels like something else is happening.

190
00:11:26,240 --> 00:11:29,880
Well, is it not just that Google have got plenty of R&D money and they have to throw

191
00:11:29,880 --> 00:11:30,880
it at something?

192
00:11:30,880 --> 00:11:31,880
Who knows?

193
00:11:31,880 --> 00:11:33,120
It's all speculation, Joe.

194
00:11:33,120 --> 00:11:34,120
Here's mine.

195
00:11:34,120 --> 00:11:35,240
It's an Android killer.

196
00:11:35,240 --> 00:11:40,160
It's a project that was born to address all of the fundamental performance issues with

197
00:11:40,160 --> 00:11:43,240
Android that people like me see constantly.

198
00:11:43,240 --> 00:11:46,000
And they said, well, if we were going to fix all of this stuff, what kind of OS would we

199
00:11:46,000 --> 00:11:47,000
build?

200
00:11:47,000 --> 00:11:48,000
And it's this.

201
00:11:48,000 --> 00:11:52,840
In my estimation, Fuchsia OS is designed to sort of solve all of the Android problems,

202
00:11:52,840 --> 00:11:54,320
and they're going to see where it can go.

203
00:11:54,320 --> 00:11:55,320
But who knows?

204
00:11:55,320 --> 00:11:56,880
It's all rampant speculation.

205
00:11:56,880 --> 00:12:02,400
I think that sounds reasonable, and I think that a happy byproduct of how they're developing

206
00:12:02,400 --> 00:12:09,720
this is that it will probably be able to replace Chrome OS as well.

207
00:12:09,720 --> 00:12:11,000
Last.ting.com.

208
00:12:11,000 --> 00:12:12,420
It's a smarter way to do mobile.

209
00:12:12,420 --> 00:12:16,360
If you just want to do something simple with your mobile plan, Ting's the way to go.

210
00:12:16,360 --> 00:12:18,720
If you want to do something a little more complicated, well, stay tuned.

211
00:12:18,720 --> 00:12:20,220
I actually have advice for you, too.

212
00:12:20,220 --> 00:12:25,600
The average Ting bill for one device is about $23 a month per phone.

213
00:12:25,600 --> 00:12:28,840
It's $6 a month, and then your usage on top of that.

214
00:12:28,840 --> 00:12:32,440
Whatever Uncle Sam takes in your area, there's that to factor in, too, but it's $6 for the

215
00:12:32,440 --> 00:12:33,440
line.

216
00:12:33,440 --> 00:12:38,800
Now, $23 is like you, just you, which is lovely, but what if you have a family?

217
00:12:38,800 --> 00:12:39,800
What if you have a business?

218
00:12:39,800 --> 00:12:42,240
It's $6 per line after that.

219
00:12:42,240 --> 00:12:45,440
$6 for the line, and then just your usage on top of that.

220
00:12:45,440 --> 00:12:46,440
Last.ting.com.

221
00:12:46,440 --> 00:12:53,760
You can go there and get $25 off a device or $25 in service credits if you bring a Ting-compatible

222
00:12:53,760 --> 00:12:54,760
device.

223
00:12:54,760 --> 00:12:59,680
Now, they have CDMA and GSM networks, so go check their BYOD page.

224
00:12:59,680 --> 00:13:04,280
You may already be set, because then you get $25 in service credit, like I said, it's $23

225
00:13:04,280 --> 00:13:08,720
on average for a line, so you just paid for your first month.

226
00:13:08,720 --> 00:13:10,800
Oh, last.ting.com.

227
00:13:10,800 --> 00:13:15,440
Pay for what you use, nationwide coverage, no contracts, nor the termination fees.

228
00:13:15,440 --> 00:13:17,000
Now, here's another idea for Ting.

229
00:13:17,000 --> 00:13:21,240
If you have a security system or a monitoring system or something that's using just a little

230
00:13:21,240 --> 00:13:25,640
bit of data here and there, you can go get a $9 SIM card from Ting.

231
00:13:25,640 --> 00:13:26,640
Last.ting.com.

232
00:13:26,640 --> 00:13:32,580
$9 SIM card and then $25 in service credits means that you might be able to monitor something

233
00:13:32,580 --> 00:13:37,980
or check in on a camera feed or remotely connect to a system for months without having to pay

234
00:13:37,980 --> 00:13:39,360
anything out of pocket.

235
00:13:39,360 --> 00:13:40,960
That's how my buddy Chase does it.

236
00:13:40,960 --> 00:13:41,960
Last.ting.com.

237
00:13:41,960 --> 00:13:47,680
Okay, so there's no way we can ignore Meltdown and Spectre.

238
00:13:47,680 --> 00:13:49,360
We have to talk about this.

239
00:13:49,360 --> 00:13:53,920
Two major bugs, well, it's actually three major bugs with CPUs that affect all operating

240
00:13:53,920 --> 00:13:59,600
systems and pretty much all devices, apart from the Raspberry Pi, which is nice.

241
00:13:59,600 --> 00:14:00,980
Where do we start with it?

242
00:14:00,980 --> 00:14:06,440
I think there's no point talking about Windows and Mac OS and stuff, but with Linux, it's

243
00:14:06,440 --> 00:14:08,400
pretty big news for us, isn't it?

244
00:14:08,400 --> 00:14:13,320
Yeah, this is probably one of the biggest stories of 2018 right off the bat.

245
00:14:13,320 --> 00:14:14,320
So let's break it down.

246
00:14:14,320 --> 00:14:16,560
You've got Meltdown and you've got Spectre.

247
00:14:16,560 --> 00:14:21,520
Meltdown breaks the most fundamental isolation between user applications and the operating

248
00:14:21,520 --> 00:14:22,520
system.

249
00:14:22,520 --> 00:14:27,600
So the Meltdown attack allows a program to access memory and thus also things like your

250
00:14:27,600 --> 00:14:32,540
keys and your passwords and other elements of the programs you might be running and the

251
00:14:32,540 --> 00:14:33,600
operating system.

252
00:14:33,600 --> 00:14:34,600
That's Meltdown.

253
00:14:34,600 --> 00:14:35,600
And then there's Spectre.

254
00:14:35,600 --> 00:14:41,040
Now Spectre is the one we're going to be hearing a lot more throughout 2018, I suspect.

255
00:14:41,040 --> 00:14:44,480
Spectre breaks the isolation between different applications.

256
00:14:44,480 --> 00:14:50,560
It allows an attacker to trick otherwise error-free, bug-free programs, which may have followed

257
00:14:50,560 --> 00:14:53,920
best practices, into leaking their secrets.

258
00:14:53,920 --> 00:14:58,680
The safety checks of some of those best practices actually even make the situation worse.

259
00:14:58,680 --> 00:15:04,440
And it could come down to a fundamental design flaw that future processors will have to correct.

260
00:15:04,440 --> 00:15:07,700
Now Meltdown is being patched actively.

261
00:15:07,700 --> 00:15:13,880
Spectre doesn't necessarily have an upstream patch as of the recording of this program.

262
00:15:13,880 --> 00:15:18,980
There are different distributions that are shipping potential fixes to Spectre, but none

263
00:15:18,980 --> 00:15:22,820
of those have been upgraded into Linus's tree.

264
00:15:22,820 --> 00:15:26,900
And it's not even clear if those patches are going to work at this stage.

265
00:15:26,900 --> 00:15:31,280
With Meltdown, that seems quite clear that it is going to work.

266
00:15:31,280 --> 00:15:35,640
You're going to have a performance hit with certain workloads, especially data center

267
00:15:35,640 --> 00:15:38,440
workloads, not necessarily on the desktop.

268
00:15:38,440 --> 00:15:40,920
But with Spectre, we just don't know.

269
00:15:40,920 --> 00:15:44,120
It's not really patchable, is it?

270
00:15:44,120 --> 00:15:47,400
It's mitigation rather than full patches.

271
00:15:47,400 --> 00:15:53,560
And I suppose eventually there'll be workarounds to make us immune to it to some extent.

272
00:15:53,560 --> 00:15:59,480
But as you say, this is a fundamental problem with processors and how they work.

273
00:15:59,480 --> 00:16:05,320
The things that have made these processors so fast in the first place are being exploited.

274
00:16:05,320 --> 00:16:08,200
And it's fundamental, there's no other word for it.

275
00:16:08,200 --> 00:16:12,160
Briefly, one of the things that I find really fascinating about this story, and I'll go

276
00:16:12,160 --> 00:16:18,600
into a lot more detail in a future episode of TechSnap, but the core issues were discovered

277
00:16:18,600 --> 00:16:25,320
independently by two different Project Zero researchers who were not communicating initially.

278
00:16:25,320 --> 00:16:31,900
And Spectre and Meltdown were discovered independently, so they were sort of converging in on these

279
00:16:31,900 --> 00:16:32,900
different vulnerabilities.

280
00:16:32,900 --> 00:16:36,880
And that sort of adds to the confusion because they're similar, they were discovered around

281
00:16:36,880 --> 00:16:41,740
the same time, both of which were discovered by Project Zero engineers.

282
00:16:41,740 --> 00:16:49,120
But the core issues have been known to Intel and Project Zero since June of 2017.

283
00:16:49,120 --> 00:16:53,840
Now Google immediately started working with Intel, and Intel started researching the problem,

284
00:16:53,840 --> 00:16:55,800
trying to determine what the issue was.

285
00:16:55,800 --> 00:17:00,420
But what we know at this point is that some companies weren't brought into loop until

286
00:17:00,420 --> 00:17:03,920
Christmas Day, and some a little bit before that.

287
00:17:03,920 --> 00:17:10,400
And that initial disclosure wasn't planned until January 9th, which is several days from

288
00:17:10,400 --> 00:17:11,400
now.

289
00:17:11,400 --> 00:17:17,560
And so some companies, like Canonical, were caught off guard with the early public disclosures.

290
00:17:17,560 --> 00:17:20,360
But to be fair, that is not going to be the case for much longer.

291
00:17:20,360 --> 00:17:24,120
They said Tuesday the 9th is when they were planning to, they're going to try and do it

292
00:17:24,120 --> 00:17:25,120
before then.

293
00:17:25,120 --> 00:17:27,060
But if not, they'll definitely hit that deadline.

294
00:17:27,060 --> 00:17:30,280
So as you're listening to this, it's probably only one day away.

295
00:17:30,280 --> 00:17:31,560
But it's still not good.

296
00:17:31,560 --> 00:17:36,160
You'd hope that these companies would all work together a little more closely and a

297
00:17:36,160 --> 00:17:37,560
little earlier than this.

298
00:17:37,560 --> 00:17:42,000
I don't know why Canonical was left out of the loop for so long, because it seems Red

299
00:17:42,000 --> 00:17:43,000
Hat weren't, were they?

300
00:17:43,000 --> 00:17:46,100
Because their patches are all ready to go.

301
00:17:46,100 --> 00:17:48,720
If you're running a distro kernel, you might be covered already.

302
00:17:48,720 --> 00:17:51,680
But Greg Kh says in a post recently, check it for yourself.

303
00:17:51,680 --> 00:17:55,440
He's a little skeptical of some of these distro-conceived solutions.

304
00:17:55,440 --> 00:17:59,800
And he notes, at least for Spectre, nothing's actually been integrated upstream.

305
00:17:59,800 --> 00:18:03,600
But I want to go back in time a little bit to November 15th.

306
00:18:03,600 --> 00:18:05,560
And I want to talk about Kaiser.

307
00:18:05,560 --> 00:18:13,680
Now Kaiser was a set of patches that was being presented as early as November to solve side

308
00:18:13,680 --> 00:18:17,920
channel attacks with Intel devices and other types of devices.

309
00:18:17,920 --> 00:18:22,000
All told, the discussion around Kaiser was some of the early signs back in November that

310
00:18:22,000 --> 00:18:24,360
maybe something big was coming.

311
00:18:24,360 --> 00:18:27,860
Because everybody was all of a sudden on board, Linus and Greg.

312
00:18:27,860 --> 00:18:32,520
This whole set of patches that was going to reduce performance was being fast-tracked

313
00:18:32,520 --> 00:18:34,040
by the kernel developers.

314
00:18:34,040 --> 00:18:38,300
And nobody really talked about why or gave public time frames.

315
00:18:38,300 --> 00:18:40,540
But everybody was on board with Kaiser.

316
00:18:40,540 --> 00:18:45,880
And you can see some discussions at LWN.net on November 15th about some suggestions for

317
00:18:45,880 --> 00:18:51,580
hiding the kernel from user space, which were really the early groundwork for fixing this

318
00:18:51,580 --> 00:18:52,580
big problem.

319
00:18:52,580 --> 00:18:54,280
So it's been in development for months now.

320
00:18:54,280 --> 00:18:57,760
Yeah, and they redacted some comments from the code and everything, didn't they?

321
00:18:57,760 --> 00:19:01,840
Which was very unusual because it's usually so openly developed.

322
00:19:01,840 --> 00:19:06,840
Not only that, but there was also Linux kernel mailing lists post from an AMD developer that

323
00:19:06,840 --> 00:19:11,860
was talking about some vulnerability that AMD wasn't quite as susceptible to, that implied

324
00:19:11,860 --> 00:19:13,480
Intel was.

325
00:19:13,480 --> 00:19:17,600
And if you connected the dots, you could start to realize there's probably something big

326
00:19:17,600 --> 00:19:18,600
here.

327
00:19:18,600 --> 00:19:20,060
And that's exactly what the register did.

328
00:19:20,060 --> 00:19:23,920
And they ran with the story that said, hey, there could be a huge vulnerability here.

329
00:19:23,920 --> 00:19:26,980
And that pushed everybody's timetables up.

330
00:19:26,980 --> 00:19:29,960
Now I've seen some performance charts.

331
00:19:29,960 --> 00:19:38,120
And it really is obvious that once these patches for Meltdown are put in place, you get this

332
00:19:38,120 --> 00:19:42,200
immediate hit in performance for a lot of workloads.

333
00:19:42,200 --> 00:19:50,240
And you're talking about maybe 5%, maybe 10%, maybe as much as 30% extra compute power needed,

334
00:19:50,240 --> 00:19:54,800
which if you're running a lot of applications, if you're running a big company, that is a

335
00:19:54,800 --> 00:19:58,040
lot more money you're going to have to spend because of this.

336
00:19:58,040 --> 00:20:00,000
And it's all Intel's fault, isn't it?

337
00:20:00,000 --> 00:20:03,680
And there's talk of class action lawsuits.

338
00:20:03,680 --> 00:20:06,960
Could this be really serious for Intel, I wonder?

339
00:20:06,960 --> 00:20:10,960
It really gets down into the nuance because, of course, the kernel developers are making

340
00:20:10,960 --> 00:20:14,760
some assumptions that the processor will provide them for certain protections.

341
00:20:14,760 --> 00:20:17,920
So they take certain shortcuts for performance benefits.

342
00:20:17,920 --> 00:20:20,660
So where does the fault really lie?

343
00:20:20,660 --> 00:20:25,320
If you depend on the processor all the time, then you could say, well, that's a bad assumption

344
00:20:25,320 --> 00:20:26,400
to make.

345
00:20:26,400 --> 00:20:30,220
But of course, you could say that the processor should be designed fundamentally to protect

346
00:20:30,220 --> 00:20:33,160
against these sort of side channel attacks.

347
00:20:33,160 --> 00:20:36,800
I don't know if the lawsuits are going to get very far because they could get really

348
00:20:36,800 --> 00:20:39,260
marred down in semantics.

349
00:20:39,260 --> 00:20:41,200
It's early days right now.

350
00:20:41,200 --> 00:20:45,140
But if you follow Twitter and you just do a few searches on Meltdown, you'll start to

351
00:20:45,140 --> 00:20:50,280
see people that are tweeting about performance dropping through the floor, screenshots for

352
00:20:50,280 --> 00:20:54,920
login servers and database servers that are just totally tanking.

353
00:20:54,920 --> 00:20:58,000
It appears to be sort of a conflux of issues.

354
00:20:58,000 --> 00:21:04,160
If your workload stresses the network subsystem and the disk subsystem, then you really notice

355
00:21:04,160 --> 00:21:05,160
it.

356
00:21:05,160 --> 00:21:10,400
If you really need to nail the processor or nail the GPU, you don't really seem to have

357
00:21:10,400 --> 00:21:11,960
a big performance impact.

358
00:21:11,960 --> 00:21:16,040
But when it's multiple subsystems, that's really when things come to their knees.

359
00:21:16,040 --> 00:21:20,880
And I've been involved in some AWS customer support forums where essentially people are

360
00:21:20,880 --> 00:21:26,080
saying I have to completely upgrade to a whole new category of AWS hardware now.

361
00:21:26,080 --> 00:21:30,040
It's going to cost me way more money than I projected for 2018.

362
00:21:30,040 --> 00:21:31,440
And they're pretty upset about it.

363
00:21:31,440 --> 00:21:33,200
And rightfully so.

364
00:21:33,200 --> 00:21:39,120
If you suddenly have to do all your maths again for your projected revenue and spending

365
00:21:39,120 --> 00:21:45,560
and everything because of this, it's going to cost companies millions of dollars potentially.

366
00:21:45,560 --> 00:21:47,320
And it's all Intel's fault.

367
00:21:47,320 --> 00:21:52,160
You say there's nuance there and maybe the kernel people should have known about this.

368
00:21:52,160 --> 00:21:55,160
And yeah, I suppose there is that argument to be made.

369
00:21:55,160 --> 00:22:00,000
But for me, the hardware is at fault here.

370
00:22:00,000 --> 00:22:03,320
And the blame lies with Intel as far as I'm concerned.

371
00:22:03,320 --> 00:22:06,760
Well I'm going to dig more into speculative execution and all of that kind of stuff in

372
00:22:06,760 --> 00:22:08,200
the TechSnap program.

373
00:22:08,200 --> 00:22:10,480
And I suggest people stay tuned for that.

374
00:22:10,480 --> 00:22:16,040
But I agree, a lot of this is on Intel, especially the meltdown aspect of it, which is predominantly

375
00:22:16,040 --> 00:22:17,120
on Intel.

376
00:22:17,120 --> 00:22:21,280
But there are ARM and AMD systems that are potentially vulnerable to anything that does

377
00:22:21,280 --> 00:22:22,280
speculative execution.

378
00:22:22,280 --> 00:22:23,280
Yeah, that's true.

379
00:22:23,280 --> 00:22:25,820
So I suppose it isn't completely Intel's fault.

380
00:22:25,820 --> 00:22:33,000
It's just the industry's fault, I suppose, for trying to push on too fast and not stopping

381
00:22:33,000 --> 00:22:36,200
to think about the potential consequences of what they're doing.

382
00:22:36,200 --> 00:22:39,880
Well speaking of not fully thinking through of the consequences, Evan's war against the

383
00:22:39,880 --> 00:22:42,600
Software Freedom Conservancy just got a bit dirtier.

384
00:22:42,600 --> 00:22:48,320
Yeah, at first it seemed like the law center was offering an olive branch to Conservancy

385
00:22:48,320 --> 00:22:51,160
by saying that they were going to kind of drop the case.

386
00:22:51,160 --> 00:22:55,920
But they were going to do that by offering them a license to use the trademark by pretty

387
00:22:55,920 --> 00:23:00,040
much saying, it is our trademark, you are in the wrong, but we'll let you get away with

388
00:23:00,040 --> 00:23:01,040
it.

389
00:23:01,040 --> 00:23:03,240
And that didn't go down very well, did it?

390
00:23:03,240 --> 00:23:06,480
It really makes this whole thing way more complicated.

391
00:23:06,480 --> 00:23:12,320
I think a lot of us in the bleachers were hoping for something simple, a quick dismissal.

392
00:23:12,320 --> 00:23:16,240
And now with this fraud claim, that's just simply not going to happen.

393
00:23:16,240 --> 00:23:17,560
And I knew this was going to happen.

394
00:23:17,560 --> 00:23:19,800
I knew that Evan has been around for a while.

395
00:23:19,800 --> 00:23:22,720
He wouldn't just simply roll over.

396
00:23:22,720 --> 00:23:26,920
We knew it was going to be harder than this, but boy, at least myself and I think a lot

397
00:23:26,920 --> 00:23:29,960
of others were hoping just for a quick, easy dismissal.

398
00:23:29,960 --> 00:23:30,960
I'll say this.

399
00:23:30,960 --> 00:23:35,360
One thing that I find interesting in this whole spat is the Software Freedom Conservancy

400
00:23:35,360 --> 00:23:37,920
is much more verbose about what's going on.

401
00:23:37,920 --> 00:23:39,920
They're pretty quick with the blog post.

402
00:23:39,920 --> 00:23:46,240
They're pretty clear in their language and in linking to legal documents what's going

403
00:23:46,240 --> 00:23:47,660
on.

404
00:23:47,660 --> 00:23:55,100
It does make the Software Freedom Law Center feel like the aggressor and the Conservancy

405
00:23:55,100 --> 00:23:56,160
as the victim.

406
00:23:56,160 --> 00:23:59,160
And they're clearly just trying to document what's happening to them.

407
00:23:59,160 --> 00:24:03,640
Well, in the initial blog posts, Bradley, I think, said that they are very committed

408
00:24:03,640 --> 00:24:04,960
to transparency.

409
00:24:04,960 --> 00:24:09,700
And it is good to see that at least on one side, we're getting that transparency here.

410
00:24:09,700 --> 00:24:13,080
Let's take the last few moments of the show to talk about something that has been particularly

411
00:24:13,080 --> 00:24:16,080
difficult for Joe and I in the last couple of weeks.

412
00:24:16,080 --> 00:24:20,760
And that's the crazy ass price of Bitcoin in regards to our prediction recently.

413
00:24:20,760 --> 00:24:22,080
Yeah.

414
00:24:22,080 --> 00:24:28,280
So we recorded that prediction show quite a long time before it was aired.

415
00:24:28,280 --> 00:24:32,080
And Bitcoin was riding pretty high at that point.

416
00:24:32,080 --> 00:24:37,480
And then immediately after we recorded it, pretty much, it took a tumble down and down

417
00:24:37,480 --> 00:24:38,520
and down.

418
00:24:38,520 --> 00:24:43,660
And I had predicted that it wouldn't drop below 15,000 this year.

419
00:24:43,660 --> 00:24:46,840
And at the stroke of midnight, it was around 13,000.

420
00:24:46,840 --> 00:24:48,360
So I'm immediately wrong.

421
00:24:48,360 --> 00:24:52,680
To be fair, we did say that it's volatile and that it could go either way.

422
00:24:52,680 --> 00:24:54,040
But we're wrong.

423
00:24:54,040 --> 00:24:58,020
Another interesting thing when I listened back, you had said that you thought the high

424
00:24:58,020 --> 00:24:59,360
would be 100,000.

425
00:24:59,360 --> 00:25:03,360
And then you thought that the price on December 1 would be 103,000.

426
00:25:03,360 --> 00:25:06,640
So that kind of didn't make sense either.

427
00:25:06,640 --> 00:25:10,240
But this is the thing with Bitcoin, you can never really predict it, can you?

428
00:25:10,240 --> 00:25:18,280
And as I said last year, we could be facing, in December, 100,000, or we could be facing

429
00:25:18,280 --> 00:25:19,280
under 1,000.

430
00:25:19,280 --> 00:25:21,360
And there's just no way to know that.

431
00:25:21,360 --> 00:25:24,280
There's really two versions of me when it comes to this issue.

432
00:25:24,280 --> 00:25:26,880
Version one is the enthusiast.

433
00:25:26,880 --> 00:25:29,280
I just want to see cryptocurrencies succeed.

434
00:25:29,280 --> 00:25:32,700
And then version two is the Bitcoin investor.

435
00:25:32,700 --> 00:25:38,740
Now the Bitcoin investor in me thinks that Bitcoin long term is doomed unless they solve

436
00:25:38,740 --> 00:25:43,680
some fundamental issues, which Noah addresses in Ask Noah 42, The End of Bitcoin.

437
00:25:43,680 --> 00:25:47,680
Unless they address fundamental issues, Bitcoin is getting too expensive to operate.

438
00:25:47,680 --> 00:25:53,400
If you have like $20 or less in Bitcoin, you can't do anything with it.

439
00:25:53,400 --> 00:25:55,620
It's dark matter money.

440
00:25:55,620 --> 00:25:59,120
Because the transaction fees are becoming so expensive on the Bitcoin network that it

441
00:25:59,120 --> 00:26:01,480
costs about $20 to move a dollar.

442
00:26:01,480 --> 00:26:03,360
Yeah, but those issues can be fixed.

443
00:26:03,360 --> 00:26:09,360
You talked about last year about potentially caching stuff with databases.

444
00:26:09,360 --> 00:26:11,520
I think there are technical workarounds for that.

445
00:26:11,520 --> 00:26:17,320
And the blockchain technology itself is so fundamentally solid that I think that you're

446
00:26:17,320 --> 00:26:18,960
being too pessimistic here.

447
00:26:18,960 --> 00:26:23,760
I think that it might turn out to be a bubble, and it might turn out to be only worth 1,000

448
00:26:23,760 --> 00:26:24,760
or a few hundred or whatever.

449
00:26:24,760 --> 00:26:27,020
But I can't see it just being worth nothing.

450
00:26:27,020 --> 00:26:28,020
It's a negative outlook.

451
00:26:28,020 --> 00:26:30,280
I'll have a negative outlook until they address the issues.

452
00:26:30,280 --> 00:26:36,300
Once they address the issues, which they could do fairly simply, then my outlook will change.

453
00:26:36,300 --> 00:26:41,400
But I think Bitcoin is going to struggle, and the price will reflect that struggle until

454
00:26:41,400 --> 00:26:42,400
they solve these problems.

455
00:26:42,400 --> 00:26:46,560
Yeah, well, we'll keep an eye on it, and we'll report any major events that happen in the

456
00:26:46,560 --> 00:26:47,560
Bitcoin world.

457
00:26:47,560 --> 00:26:52,600
Yeah, and of course, the big lesson here is that the open source world is much, much,

458
00:26:52,600 --> 00:26:55,380
much larger than just Bitcoin.

459
00:26:55,380 --> 00:27:00,840
And you can get all of the news every single week at linuxactionnews.com slash subscribe.

460
00:27:00,840 --> 00:27:04,000
And you can go there for all of the ways to get every single episode.

461
00:27:04,000 --> 00:27:08,200
Yeah, and you can go to linuxactionnews.com slash contact for ways to get in touch with

462
00:27:08,200 --> 00:27:09,200
us.

463
00:27:09,200 --> 00:27:13,400
And you can support the entire network at patreon.com slash Jupiter signal, or go to

464
00:27:13,400 --> 00:27:18,320
Jupiter broadcasting.com slash stickers and get yourself a Linux action news sticker.

465
00:27:18,320 --> 00:27:20,680
Yeah, I've got one on my desktop machine.

466
00:27:20,680 --> 00:27:22,180
Looks pretty cool.

467
00:27:22,180 --> 00:27:26,200
So we'll be back next Monday with our weekly take on the latest Linux and open source news.

468
00:27:26,200 --> 00:27:27,760
I'm at Chris LAS.

469
00:27:27,760 --> 00:27:29,280
I'm at Joe Rissington.

470
00:27:29,280 --> 00:27:31,440
Thank you for joining us, and we'll see you next week.

471
00:27:31,440 --> 00:27:54,240
See you later.

