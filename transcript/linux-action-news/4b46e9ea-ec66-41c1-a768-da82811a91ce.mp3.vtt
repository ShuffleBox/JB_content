WEBVTT

00:00.000 --> 00:09.680
Hello, and welcome to Linux Action News, episode 146, recorded on February 23rd, 2020. I'm

00:09.680 --> 00:10.680
Chris.

00:10.680 --> 00:11.680
And I'm Joe.

00:11.680 --> 00:14.680
Hello, Joe. Good to be connected with you. And I got to say, I just barely made it. I

00:14.680 --> 00:17.600
was so busy installing the new Linux Defender from Microsoft.

00:17.600 --> 00:23.480
Yeah, they've announced a public preview of Microsoft Defender Advanced Threat Protection

00:23.480 --> 00:26.320
Antivirus for Linux. What?

00:26.320 --> 00:31.800
Finally, finally, now I can finally browse the web on my Linux box. I've been waiting.

00:31.800 --> 00:37.800
Okay, I might be joking a little bit. I actually have not installed this because it's not for

00:37.800 --> 00:43.000
me. It's not for you, Joe. It's for the enterprise. They write, we are aiming to protect the modern

00:43.000 --> 00:49.240
workplace environment across everything that is being Microsoft or non-Microsoft. We are

00:49.240 --> 00:55.280
protecting endpoints across Mac. And today, we're extending this endpoint to protect Linux

00:55.280 --> 00:57.440
and iOS and Android.

00:57.440 --> 01:04.520
So the idea is they are selling the concept of end-to-end device protection, regardless

01:04.520 --> 01:10.960
of its OS, all feeding sensor data, shared sensor data, back to this Microsoft protection

01:10.960 --> 01:17.160
system, which is going to be part of Microsoft Threat Protection Suite, MTP, which is a bundle

01:17.160 --> 01:18.160
of services.

01:18.160 --> 01:23.400
Now, I know this is a lot, but how Microsoft is talking about this is like next level.

01:23.400 --> 01:28.080
What makes Norton Antivirus look like your grandparents' antivirus? They write on the

01:28.080 --> 01:34.840
Microsoft blog, this is artificially intelligence-powered sensors all over the place, designed to stop

01:34.840 --> 01:41.320
attacks from spreading and auto-healing impacted assets. And they write one more that I just

01:41.320 --> 01:47.640
loved, coordinated defense to uncover the full attack kill chain can help block nation-state

01:47.640 --> 01:53.240
level attacks. So this is nation-state antivirus level here. That's pretty good, Joe.

01:53.240 --> 01:59.080
Yeah and it all ties into Azure as well, obviously. The way Microsoft are talking about this,

01:59.080 --> 02:06.800
they want to just control the whole antivirus security sector in enterprise. And they want

02:06.800 --> 02:13.680
ATP to be that box that you check on your compliance form. And I think that it's genius.

02:13.680 --> 02:21.320
I think that this really goes to show what a good CEO Satya Nadella is. This is a strategy

02:21.320 --> 02:26.380
to stay relevant in the enterprise over the next 10 or 15 years, while Windows on the

02:26.380 --> 02:32.640
desktop becomes less relevant and Windows Server becomes less relevant. And as the market

02:32.640 --> 02:38.320
changes, they're going to still be in the enterprise. Their salespeople will use that

02:38.320 --> 02:43.560
Microsoft name and they will stay relevant and stay making a ton of money.

02:43.560 --> 02:49.080
As we talk about this, I am of two clear minds, which are very much in conflict with each

02:49.080 --> 02:54.240
other. There's the version of me that wants to sit here and just yell how this is totally

02:54.240 --> 02:59.160
unnecessary. It's going to be a major impact on your performance. It's likely invasive

02:59.160 --> 03:03.800
in some way because of the amount of information it needs to collect to do this job properly.

03:03.800 --> 03:08.120
But then there's the enterprise, Chris, that knows that this means more people can now

03:08.120 --> 03:12.560
run Linux on their desktops because they can be compliant with corporate requirements.

03:12.560 --> 03:17.520
And as you just alluded to, often audit policies that they're held to, which is a really big

03:17.520 --> 03:22.540
deal to make a breaker. So it means no Linux for some companies. This change could now

03:22.540 --> 03:27.000
mean employees have an option they didn't have before. On that hand, I'm like, wow,

03:27.000 --> 03:33.240
that's great. And I can also see Microsoft's pitch here. If we have sensors on all of the

03:33.240 --> 03:40.840
endpoints, iOS, Android, Windows, Linux, and on your servers and on your cloud servers,

03:40.840 --> 03:47.040
then we're collecting all of that. We're using our training to analyze it and identify threats

03:47.040 --> 03:51.560
and then automatically shutting down services or blocking access proactively while alerting

03:51.560 --> 03:56.420
you. And only Microsoft can do it because only Microsoft has it across this entire range

03:56.420 --> 03:58.360
of devices and services.

03:58.360 --> 04:04.100
If I feel like software like that or a service like that is essential to my business, that's

04:04.100 --> 04:07.980
a pretty compelling argument. I would be drawn to that. Now there's that other side of me

04:07.980 --> 04:12.640
that's like screaming right now at how I would never want anything like this. But that's

04:12.640 --> 04:14.680
often the case for things that are designed for the enterprise.

04:14.680 --> 04:21.680
Well, yeah, I don't want anything to do with this, but I can see it being massively successful.

04:21.680 --> 04:26.000
This bundling of security products that Microsoft has will be rolled out in various different

04:26.000 --> 04:32.260
ways to existing subscribers to some of the Office 365 products, as well as others. But

04:32.260 --> 04:37.520
speaking of services, we have an update on one of Mozilla's much talked about services.

04:37.520 --> 04:43.640
Yeah, their VPN service, which is still invitation only and costs $4.99 per month, now has an

04:43.640 --> 04:45.240
Android app.

04:45.240 --> 04:51.160
As a reminder to everyone out there, the Firefox private network VPN is powered by Mulvad VPN.

04:51.160 --> 04:54.800
And they make claims on their website, which I just went through again this morning, that

04:54.800 --> 04:59.840
they do not log and monitor user data. And here's something else that's kind of interesting.

04:59.840 --> 05:04.800
They're using WireGuard for the back end connectivity. So this may end up being one of the largest

05:04.800 --> 05:09.480
commercial deployments of WireGuard to date. Now, be aware at this point, they do not have

05:09.480 --> 05:14.400
as many WireGuard servers as they do open VPN servers. As of this recording, they have

05:14.400 --> 05:19.640
169 WireGuard servers distributed throughout the world. So it's still a pretty good amount.

05:19.640 --> 05:23.640
But the Android app for the Firefox private network is using WireGuard to connect back

05:23.640 --> 05:28.660
to Mulvad. And they're wrapping it up in a pretty nice to use package that supports the

05:28.660 --> 05:34.380
Mozilla Corporation. $4.99 per month isn't bad, because when I looked into Mulvad, they

05:34.380 --> 05:37.720
seem like they check out like obviously, I don't have access to their logs and stuff.

05:37.720 --> 05:42.260
So I can't make full claims. But a lot of what they use, they have contributed back

05:42.260 --> 05:47.540
upstream and their own code that they've written, they've open sourced and posted on their GitHub.

05:47.540 --> 05:52.460
And I went through a lot of it and it looks really good. They seem at least solid to me

05:52.460 --> 05:57.540
like Mozilla has made a good choice as outwardly as you can judge these kinds of things.

05:57.540 --> 06:01.360
And $4.99 doesn't seem outrageous, does it? That seems to be about the going rate for

06:01.360 --> 06:04.000
a VPN service, at least a decent one.

06:04.000 --> 06:08.140
Sure that and WireGuard may actually be a little more performant than OpenVPN. So you

06:08.140 --> 06:14.380
may be able to argue this is one of the faster VPN services for Android. I wouldn't mind

06:14.380 --> 06:20.500
if the industry as a whole, tap the old brakes on the whole VPN thing, because it's a product

06:20.500 --> 06:25.900
that's sold in various different ways, often using scare tactics, sometimes proclaiming

06:25.900 --> 06:31.180
ways to pirate content and bypass region restrictions, which all of that feels a little gray area

06:31.180 --> 06:36.500
to me. But additionally, it's advocating for consolidating user traffic, which ultimately

06:36.500 --> 06:41.020
makes it more vulnerable to attack than having it distributed all over the place from people's

06:41.020 --> 06:42.820
local networks.

06:42.820 --> 06:46.580
So I kind of just I want us to think really carefully and be sure that when people are

06:46.580 --> 06:51.340
choosing VPN providers, they're really looking into them because there's a lot of flashy

06:51.340 --> 06:56.900
ones out there that make it really easy to one click VPN. Now, maybe that's a good thing

06:56.900 --> 07:01.200
for average users, but maybe we're running a risk of consolidating traffic and actually

07:01.200 --> 07:06.180
making people more vulnerable in the long term. What do I know? We'll have to just wait

07:06.180 --> 07:09.620
and see at least this one here seems legit. And it seems like they have a really easy

07:09.620 --> 07:15.020
to use implementation. Those two combinations hopefully will be a success for them.

07:15.020 --> 07:20.660
Did you see that video that Tom Scott made about VPNs about a month ago, maybe talking

07:20.660 --> 07:27.420
about some of the claims that they make and how HTTPS really does solve a lot of the problems

07:27.420 --> 07:29.780
that they claim they're solving with VPNs?

07:29.780 --> 07:31.500
No, no, I'll have to look that up.

07:31.500 --> 07:34.860
Yeah, it's a good video. I didn't learn a huge amount. But I think that he put it in

07:34.860 --> 07:40.300
very simple terms that non techie people can understand. So it's worth a watch.

07:40.300 --> 07:44.740
While we're still talking about VPNs, we should mention that private internet access is planning

07:44.740 --> 07:46.580
to open source their Android app.

07:46.580 --> 07:51.420
Yeah, the process has started. And they've also some of the dependencies and it's going

07:51.420 --> 07:56.380
to be happening shortly, according to their blog. And it's part of an overall strategy

07:56.380 --> 08:01.300
to open source everything we possibly can, which I think in this day and age of like

08:01.300 --> 08:06.220
you say, some of the VPN providers seeming a bit shady. I think it's good PR for them

08:06.220 --> 08:07.860
to have it all be open source.

08:07.860 --> 08:13.080
Yeah, absolutely. And I suspect that's why IVPN got in on it as well. They're open sourcing

08:13.080 --> 08:18.000
their applications for Android, Mac OS, iOS and Windows under the GPL three. And it does

08:18.000 --> 08:23.340
give me more confidence. Now, I don't still fully have a view into how they handle logs.

08:23.340 --> 08:27.660
And I'd be curious to see who's going to step forward on that. I don't even know how you

08:27.660 --> 08:33.180
would do that, how you could be publicly responsible and publicly prove that you're not logging

08:33.180 --> 08:35.740
out. Maybe somebody clever will think of it.

08:35.740 --> 08:40.180
Well, private internet access talk about having random audits. So that's one solution, at

08:40.180 --> 08:41.180
least for now.

08:41.180 --> 08:45.020
Yeah, I can see that. And I suppose it's just a matter of how you communicate the results

08:45.020 --> 08:48.420
and follow up if there's something found, I guess. Well, let's talk about turning it

08:48.420 --> 08:52.780
up to 11. Joe, get ready for that joke to be made for about a year.

08:52.780 --> 08:58.060
Yeah, this is the first developer preview of Android 11. And this is unusual for them

08:58.060 --> 09:02.820
in that they're calling it Android 11. It used to be the letter of the dessert. But

09:02.820 --> 09:07.300
since they've dropped that, I suppose they're not doing that anymore. So it's just Android

09:07.300 --> 09:09.460
11 developer preview.

09:09.460 --> 09:15.900
I think I like it now. I think I think I prefer this. It's just simpler and a little a little

09:15.900 --> 09:22.200
more serious, I guess. Android 11 has a whole bunch of changes, as you would expect. There's

09:22.200 --> 09:26.580
probably the most noticeable change in the notification area where they're going to have

09:26.580 --> 09:32.520
a dedicated conversations section in the UI. So there'll be a top level of your notification

09:32.520 --> 09:38.540
shade where you'll find ongoing conversations with quick ways to reply. Additionally, you're

09:38.540 --> 09:44.220
gonna love this, Joe. They're making an OS wide API for message and chat bubbles. So

09:44.220 --> 09:47.900
you can have chat bubbles all over your OS. I'm sure you'll love that.

09:47.900 --> 09:51.980
It doesn't make sense on a small phone screen. But I suppose on some of the big foldables

09:51.980 --> 09:55.340
that they're also now supporting. That kind of makes sense, maybe.

09:55.340 --> 09:59.060
Yeah, yeah. And it felt like a tablet to back in the day when I had Android on a tablet

09:59.060 --> 10:04.020
and a Samsung, it kind of worked. But I don't know, on a small, I want my phone smaller.

10:04.020 --> 10:08.180
So I'm just those kinds of things. I'm not super stoked about I am really happy to see

10:08.180 --> 10:12.540
improvements and notifications. And I'm happy to see the one time permission dialog box

10:12.540 --> 10:17.140
come to Android. So if you've used iOS before, you know this one, you launch an app. For

10:17.140 --> 10:20.900
the first time, it says, Hey, this app wants access to your location. Do you want to only

10:20.900 --> 10:25.420
allow it this time? Do you want to allow it only when you're using the app or just totally

10:25.420 --> 10:30.060
deny it? That's going to now be the modal dialog that comes up in Android 11. When you

10:30.060 --> 10:34.680
launch an application, similar things for not just location, but also your microphone

10:34.680 --> 10:40.380
and your camera. And with those, which is kind of a neat trick, you can now grant temporary

10:40.380 --> 10:45.940
one time access, which didn't exist before in Android, which has existed in iOS. And

10:45.940 --> 10:50.020
it's something that I think is the just right amount. I'm trying out an app one time. I

10:50.020 --> 10:54.540
have no idea if this thing's bogus or not. Only allow it this once, and then proceed.

10:54.540 --> 10:58.140
I think that's a great option. And it's nice to see that evolve over the last couple of

10:58.140 --> 10:59.140
Android releases.

10:59.140 --> 11:03.700
Yeah, that's the standout feature to me. I think it's needed that for quite some time.

11:03.700 --> 11:07.820
And it may not be original, but who cares? It's a great feature.

11:07.820 --> 11:09.940
I thought you were going to say scheduled dark theme.

11:09.940 --> 11:14.500
That's pretty cool, but I just have a dark theme all the time anyway. So yeah, I don't

11:14.500 --> 11:15.500
really want to schedule that.

11:15.500 --> 11:19.940
No, I'm not surprised. I'm not surprised. Also some new UI stuff around setting options

11:19.940 --> 11:25.020
for do not disturb and whatnot. It doesn't seem to me like it's a blow away release,

11:25.020 --> 11:30.760
but it appears there's just enough security tweaks that they've had to provide some backwards

11:30.760 --> 11:35.780
compatibility options for Android developers that aren't ready to totally modernize and

11:35.780 --> 11:40.940
11 eyes their app that they can throw in their code to let Android 11 know that they haven't

11:40.940 --> 11:45.940
gotten up to snuff yet and not abuse them as bad. I'll be curious to see if that works

11:45.940 --> 11:50.900
out and I'll be curious to see if app developers even bother updating their apps with that

11:50.900 --> 11:55.640
flag in there because a lot of times the new releases get neglected for so long that even

11:55.640 --> 12:00.300
something as simple as that often gets overlooked or adding support for a notch or whatever.

12:00.300 --> 12:06.020
But maybe, maybe those things are finally starting to shift on the old Android.

12:06.020 --> 12:10.420
Maybe one thing I'm not sure if this is in iOS, but something that's going to be really

12:10.420 --> 12:16.740
useful for me is when you put the phone into airplane mode, it doesn't disconnect Bluetooth

12:16.740 --> 12:22.620
by default, which used to sting me a lot when I would go into the tube, the underground

12:22.620 --> 12:28.780
trains here in London where we have no service down there, no signal. And so you either just

12:28.780 --> 12:34.300
leave it not on airplane mode and drain your battery or you have to pause your podcast,

12:34.300 --> 12:39.220
put it in airplane mode, re-enable Bluetooth, hear the ding and then start playing again.

12:39.220 --> 12:43.340
And now you won't have to do that on the tube or on airplanes.

12:43.340 --> 12:48.900
Fascinating. Interesting. So yeah, iOS did roll that out about the time the Apple watch

12:48.900 --> 12:52.940
came out because guess what? People were buying their Apple watches, turn it off their Bluetooth

12:52.940 --> 12:58.060
and then all of a sudden their watch that was totally dependent on a phone was dumb.

12:58.060 --> 13:01.540
And their AirPods will quit working. You know, these Apple users were not happy about it.

13:01.540 --> 13:06.740
So what iOS does is when you get to the control panel and you toggle off Bluetooth there,

13:06.740 --> 13:13.100
it disconnects most devices, but not certain devices like your watch, your headphones,

13:13.100 --> 13:17.220
things like that. If you go into the settings app, you go into the actual settings and go

13:17.220 --> 13:20.540
into the Bluetooth settings where you'd see all your pairings and stuff like that. And

13:20.540 --> 13:23.700
if you turn it off there, it actually completely turns off Bluetooth.

13:23.700 --> 13:29.660
All right. I don't know how I feel about it not killing all the radios though. It is a

13:29.660 --> 13:35.060
convenient feature, but I like the fact that with airplane mode you just toggle it and

13:35.060 --> 13:37.900
that's it. It's totally disconnected in theory at least.

13:37.900 --> 13:42.980
Yeah. Well this, when Apple made this change, I think it was probably one of the bigger

13:42.980 --> 13:48.340
upsets about that release of the OS. People were shocked by it and it was, it was a story.

13:48.340 --> 13:52.680
So I wouldn't be surprised if it isn't a little, although Android 11 will probably roll out

13:52.680 --> 13:55.620
so slow that I doubt it'll be, it probably won't hit as hard.

13:55.620 --> 14:01.680
Yeah. I mean, I'm still stuck on Android 9 with my old lineage release. So I'll probably

14:01.680 --> 14:07.140
get 10 around the time that 11 comes out. But they have now enabled screen recording

14:07.140 --> 14:12.700
from the kind of pull down menu. There's been a screen recorder built into lineage for quite

14:12.700 --> 14:17.700
some time, but it's not as easy as it will be on Android 11. So that's quite nice I think.

14:17.700 --> 14:23.180
Like to see more screen caps hitting Twitter in a feed near you. That's what I see people

14:23.180 --> 14:26.820
using their iOS device for though, like write notes or you won't believe what just happened

14:26.820 --> 14:30.660
and they'll screen record them recording or something. And then they posted on Twitter

14:30.660 --> 14:35.060
and it's always such a funny way to like get a longer message across. So you might start

14:35.060 --> 14:37.980
seeing that. It's a nice feature though when you're just trying to explain to somebody

14:37.980 --> 14:43.780
like go here, tap this and then select this item. You can just now flip that down, hit

14:43.780 --> 14:46.560
record, you do the action really quick and then in two seconds you can send it off to

14:46.560 --> 14:50.260
somebody over a message. Yeah, and it's just what the world needs, more vertical videos

14:50.260 --> 14:57.260
out there. Well, despite the JavaScript package repository, MPMs best efforts, they have yet

14:57.260 --> 15:03.540
to find a way to fully fund open source development. The ambitions were high and so far the deliveries

15:03.540 --> 15:08.980
have been low. Yeah, this is starting to irk people now because originally MPM had promised

15:08.980 --> 15:14.820
to launch an open source funding platform by the end of 2019. Well, here we are in late

15:14.820 --> 15:18.760
February and all they've managed to do is add the fund command. Yeah, they talked big.

15:18.760 --> 15:23.280
The plan was to really create a platform to fund all of these dependencies and make it

15:23.280 --> 15:28.860
worth people's time at least to contribute to the MPM repository. In fact, MPM Inc's

15:28.860 --> 15:32.620
co-founder and CTO back when they announced it said, quote, the problem we're solving

15:32.620 --> 15:37.660
is open source projects need funding and there are very few ways people can do that and get

15:37.660 --> 15:43.860
that information in front of people using their code. But like so many great ambitions,

15:43.860 --> 15:51.160
things can shift and change. I think you have to mention in this conversation that MPM went

15:51.160 --> 15:57.620
through a major change recently. Their CEO left and that's kind of a big shift. There

15:57.620 --> 16:03.940
was a leadership shuffle in general and the register contacted individuals at MPM like

16:03.940 --> 16:11.260
Darcy Clark who suggested that this is just a reaction of company initiatives being reevaluated,

16:11.260 --> 16:16.700
roadmaps getting adjusted and priorities changing. They had one plan, then new leadership comes

16:16.700 --> 16:21.240
in and now their plans have changed. And it's not that they're abandoning this, but they're

16:21.240 --> 16:27.000
obviously taking a lot slower approach. And I think you can kind of see that Joe in a

16:27.000 --> 16:32.260
phone call that the CTO and co-founder had with the register. He says, ecosystems that

16:32.260 --> 16:35.780
are sustainable won't happen overnight. A platform is a collection of features people

16:35.780 --> 16:40.380
use. We're continuing to work on this. I don't think anything has changed, but we're making

16:40.380 --> 16:45.020
steady progress and engaging with the community. I can appreciate that some folks, the progress

16:45.020 --> 16:51.140
might seem a little lackluster. And then he continues, funding open source projects is

16:51.140 --> 16:56.980
still a very big problem and it's still a very unsolved problem. And I wonder if they

16:56.980 --> 17:00.260
haven't had a leadership change and they didn't come in and think, you know, this is a big

17:00.260 --> 17:04.580
problem and we're not going to solve it. It's not our core competency. Let's scale this

17:04.580 --> 17:05.980
initiative back a little bit.

17:05.980 --> 17:08.620
Yeah, that seems to be exactly what they've done here.

17:08.620 --> 17:13.140
It's a really hard position for NPM that is dependent on a vibrant community that they

17:13.140 --> 17:16.380
really have to be careful how they interact with that community because they don't want

17:16.380 --> 17:21.120
to upset them and demotivate people from participating in creating code that makes their platform

17:21.120 --> 17:26.900
more valuable. At the same time, while they're making commitments, their leadership is changing.

17:26.900 --> 17:31.660
And so they go out and say one thing and then things change after that. And now they're

17:31.660 --> 17:34.980
kind of held to what they committed to, but held to the expectations of the new leadership.

17:34.980 --> 17:39.660
It's a really difficult spot for the staff that have to interact with that community.

17:39.660 --> 17:42.380
I hope leadership is able to appreciate that for them.

17:42.380 --> 17:47.220
Well, as an aside, this story made me think about the Linux Foundation and Harvard Labs

17:47.220 --> 17:52.980
report that came out that is attempting to quantify some of the most popular in terms

17:52.980 --> 17:59.020
of usage open source software and maybe identify better practices they could follow. It's a

17:59.020 --> 18:00.140
doozy, Joe.

18:00.140 --> 18:05.660
This had a focus on JavaScript and frameworks and that side of open source and the most

18:05.660 --> 18:11.580
popular and most widely used pieces of open source software are things that you wouldn't

18:11.580 --> 18:13.740
necessarily have heard of.

18:13.740 --> 18:19.820
Yeah, it's all the little bits that make the bigger things run. This is actually the second

18:19.820 --> 18:25.340
census they have done. Census one looked at system packages specifically for Debian to

18:25.340 --> 18:30.740
get a sense of how popular packages there are, assuming that other distros base off

18:30.740 --> 18:35.580
Debian, you kind of get a baseline. This second census that was run by a different group in

18:35.580 --> 18:40.860
the Linux Foundation wanted to look more at language level packages. The report discusses

18:40.860 --> 18:45.380
some of the challenges in that things are not named consistently, so it's hard to talk

18:45.380 --> 18:50.180
about them. And they also talk about how, like you just said, Joe, a lot of these little

18:50.180 --> 18:56.080
pieces of interdependency packages that people create don't really have the same level of

18:56.080 --> 19:03.460
eyes or auditing or even maybe even quality that you'd want in a production system.

19:03.460 --> 19:10.020
This isn't necessarily new news, but the report is attempting to actually quantify what that

19:10.020 --> 19:14.500
is. Like, what are they? What are the top 10 at least? And then this is just a first

19:14.500 --> 19:18.220
pass, the intention being to get a baseline to figure out what they can't quite get a

19:18.220 --> 19:22.220
hold of what they can't figure out and then take another pass at this again later.

19:22.220 --> 19:27.580
This all comes back to Heartbleed, the open SSL bug that was discovered in April of 2014.

19:27.580 --> 19:31.980
So nearly six years ago at this point. And shortly after that, the core infrastructure

19:31.980 --> 19:38.220
initiative was established. And the aim was to stop something like that happening again.

19:38.220 --> 19:44.660
Well, nearly six years later, we're not any closer really, it seems to avoiding the next

19:44.660 --> 19:45.860
Heartbleed.

19:45.860 --> 19:50.240
This doesn't really get us there. The Linux Foundation writes on their site, the report

19:50.240 --> 19:55.300
begins to give us an inventory of the most important shared software and potential vulnerabilities

19:55.300 --> 19:58.900
and is the first step to understand more about these projects so we can create tools and

19:58.900 --> 20:04.680
standards that result in trust and transparency in software. The argument the report makes

20:04.680 --> 20:09.840
is that free software now contributes to 80 90% of what runs the world even when you

20:09.840 --> 20:15.100
look at large commercial applications and services underneath them is a bunch of little

20:15.100 --> 20:19.860
individual open source components and free software components. And so their thinking

20:19.860 --> 20:24.100
here is they want to make this something that businesses can rely on. Like all of a sudden,

20:24.100 --> 20:27.740
it's become a big deal. It's really important that went from hobby software that people

20:27.740 --> 20:32.660
are scratching an itch to something that people are seriously using in business. And according

20:32.660 --> 20:37.600
to the census that they conducted, most of the people that contribute full time to open

20:37.600 --> 20:45.080
source are doing so under a large corporation like Intel, or Microsoft, or Red Hat, or others.

20:45.080 --> 20:51.100
This seems to be them establishing processes around this and realizing that you can't just

20:51.100 --> 20:56.420
kind of randomly look at software and decide what you're going to put your efforts into.

20:56.420 --> 21:00.900
You need to have a process of looking at what's most widely used and, and divert your resources

21:00.900 --> 21:07.660
appropriately, which is the kind of standard big business way to do things, which is kind

21:07.660 --> 21:11.680
of where the Linux Foundation fits into this whole ecosystem.

21:11.680 --> 21:17.160
Because of just that, I think this is particularly vulnerable to Foundation scope creep here.

21:17.160 --> 21:21.460
They're advocating in this consensus that all open source developers get on a big old

21:21.460 --> 21:24.760
Zoom call, I'm being facetious, they don't actually advocate that part, and come to a

21:24.760 --> 21:30.760
kumbaya on all naming schemes. And this is critical, Joe. The Linux Foundation believes

21:30.760 --> 21:35.860
that until one exists, quote, strategies for software security, transparency, and more

21:35.860 --> 21:42.220
will have a limited effect, organizations will remain categorically unable to communicate

21:42.220 --> 21:47.020
with each other, because of all the silly names that silly open source developers choose.

21:47.020 --> 21:49.460
Well, they do have something of a point, don't they?

21:49.460 --> 21:53.020
Yeah, but there's something of a point of having some fun. It's kind of like coming

21:53.020 --> 21:58.140
into a group that says, Hey, guys, you know, this entire open source software ecosystem

21:58.140 --> 22:02.300
that you've built over the last 20 years that now even by our own report says you run 80

22:02.300 --> 22:07.660
to 90% of the world's software, you've been doing it wrong. I agree. Could it be better?

22:07.660 --> 22:11.720
Could it be simpler? And I grant you here, we're not talking about distribution names.

22:11.720 --> 22:15.300
We're talking about names of libraries, names of MPM packages here.

22:15.300 --> 22:19.900
Well, what they're trying to do is solve a fundamental problem here. And I think we all

22:19.900 --> 22:25.480
agree that that problem is there. Heartbleed shows you that. So there has to be some way

22:25.480 --> 22:28.980
of solving it. If you've got a fundamental problem, then you maybe need a fundamental

22:28.980 --> 22:34.900
rethink of how it all works. And open source software may be successful, but it has this

22:34.900 --> 22:39.940
flaw in it that a lot of that older code just never gets looked at.

22:39.940 --> 22:44.240
So this is where I say foundation creep is very possible. Because when you start talking

22:44.240 --> 22:48.460
about things like how people name their software, you really start having to come up with a

22:48.460 --> 22:53.460
pretty big solution to that problem. And that's where the creep potential really comes in.

22:53.460 --> 23:00.020
Yeah, I think that this is somewhat over ambitious, but I can't say that I have a better solution

23:00.020 --> 23:01.020
for the problem.

23:01.020 --> 23:06.220
You know, ultimately, I think the tone of the report, and then also ZDNet's take on

23:06.220 --> 23:12.620
it, sort of has me upset. Because it seems like they're talking down to these developers

23:12.620 --> 23:16.740
who have contributed their time and their energy and years of their life into building

23:16.740 --> 23:21.100
software that Jeff Bezos and others can get super rich off. Here's a line from the ZDNet

23:21.100 --> 23:25.420
article that really got me fired up. Quote, in short, open source developers must start

23:25.420 --> 23:31.400
addressing the problems of legacy software. Maintaining code is never as much fun as developing

23:31.400 --> 23:38.380
new code, but it's necessary work, says blogger who's never written a line of code. I think

23:38.380 --> 23:44.200
it completely dismisses all of the hard work that so many open source developers do out

23:44.200 --> 23:48.860
of a labor of love, not because they want to back port fixes and software, but because

23:48.860 --> 23:54.660
their users need it. It is a huge part of what our distributions and upstream software

23:54.660 --> 24:00.280
projects spend a significant amount of resources on is maintaining old software that people

24:00.280 --> 24:05.560
don't want to leave. It's where a disproportionate amount of energy goes towards instead of creating

24:05.560 --> 24:10.580
new software, and it completely dismisses all of the effort that they do. Could it be

24:10.580 --> 24:16.580
better? Yes, especially in some of these NPM repos and things that are distributed amongst

24:16.580 --> 24:20.980
many, many applications that end up, oops, big vulnerability in there. Obviously, we

24:20.980 --> 24:25.700
have the data that shows it could be better. But this kind of whole tone throughout the

24:25.700 --> 24:30.160
report and throughout ZDNet's article, it treats open source developers like they're

24:30.160 --> 24:34.740
kids playing with their toys, and it's time for them to grow up and get serious. Meanwhile,

24:34.740 --> 24:39.420
at the same time saying they're responsible for contributing to all of this ecosystem

24:39.420 --> 24:43.380
that's made so much money. It's like they're complimenting and telling them they've changed

24:43.380 --> 24:47.060
the world at the same time telling them that they're not serious, and that they're not

24:47.060 --> 24:51.420
adults. I really just don't like the tone of it. And I think that's my core problem

24:51.420 --> 24:57.000
with the way the Linux Foundation is approaching all of this. I encourage anyone to go look

24:57.000 --> 25:00.860
at the link we'll have in the show notes for the Linux Foundation's official announcement

25:00.860 --> 25:05.160
about this. Go ahead and have a read of that. And tell me about how that's going to inspire

25:05.160 --> 25:10.620
more people to get into free software and open source. It's a boilerplate piece of PR.

25:10.620 --> 25:15.340
I see where you're coming from here. It does feel as if it's coming from people who don't

25:15.340 --> 25:21.380
necessarily have that experience of actually writing open source software. And maybe a

25:21.380 --> 25:26.720
better approach would be to put together a panel maybe of developers who have got a proven

25:26.720 --> 25:31.020
track record within the industry. Maybe that would be a better approach to this.

25:31.020 --> 25:35.580
I think that would be a good way to go. Because ultimately what we want out of this is code

25:35.580 --> 25:40.620
to be developed for free software and open source that patches security vulnerabilities

25:40.620 --> 25:43.740
and leaves people confident in the software. That's the ultimate goal.

25:43.740 --> 25:49.700
Well, at the complete other end of the spectrum from the Linux Foundation is the GNU project.

25:49.700 --> 25:52.380
And it appears to be business as usual for them.

25:52.380 --> 25:56.300
Yeah, and that's in light of the social contract we'd mentioned a couple of episodes ago that

25:56.300 --> 26:02.180
was submitted by the community, reviewed and modified, and then presented for contributors

26:02.180 --> 26:08.660
to agree upon. And they decided, no, we're going to just do business as usual. Thanks

26:08.660 --> 26:12.660
for the idea, though, guys. I don't know if you remember, Joe, but we went through that

26:12.660 --> 26:18.060
contract here on the air and it stated the four freedoms. It stated their goal of creating

26:18.060 --> 26:23.780
free software and said that anyone was allowed to participate. That was the near totality

26:23.780 --> 26:24.780
of the social contract.

26:24.780 --> 26:30.660
Yeah, and the deadline for either accepting or rejecting that was Monday the 24th. It's

26:30.660 --> 26:35.920
nearly Monday the 24th when we're recording this. And it seems that instead of accepting

26:35.920 --> 26:41.340
or rejecting it, they've just ignored it. Stormin is just saying, I'm the chief nuisance

26:41.340 --> 26:47.340
and I decide what happens. And it's just a reiteration, just writing down what has been

26:47.340 --> 26:52.020
the almost unspoken hierarchy before that he just calls all the shots.

26:52.020 --> 26:55.940
Well, this surely is resolved now. We can just file that one away as everyone has made

26:55.940 --> 27:03.940
their statements and I'm sure it won't come up again. Yeah, we'll see about that. Well,

27:03.940 --> 27:07.180
we keep track of that and all the other stories in Linux and open source. So why not get every

27:07.180 --> 27:11.900
single episode? Go to linuxactionnews.com slash subscribe for all the ways to get those.

27:11.900 --> 27:15.500
And you can go to linuxactionnews.com slash contact for ways to get in touch with us.

27:15.500 --> 27:20.100
Well, if you want something just a little extra, check out extras.show slash 57. Brent

27:20.100 --> 27:25.380
has brunch with Heather Ellsworth from Canonical and it was a fascinating chat.

27:25.380 --> 27:29.580
Yeah, well worth a listen. We'll be back next Monday with our weekly take on the latest

27:29.580 --> 27:35.020
Linux and open source news. I'm at Chris LAS. I'm at Joe Ressington. Thanks for joining

27:35.020 --> 27:55.540
us and we'll see you next week. See you later.

