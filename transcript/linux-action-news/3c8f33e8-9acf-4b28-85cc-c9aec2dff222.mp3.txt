Hello, and welcome to Linux Action News, episode 162, recorded on November 8, 2020.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
And let's start with the Raspberry Pi 400, the $70 Linux desktop PC that's essentially
an updated Raspberry Pi 4 in a keyboard form factor.
Over at Horace Technica, Jim Salter has a great breakdown, and he notes that the new
form factor, which apparently has been in the works ever since the introduction of the
official Raspberry Pi keyboard, addresses and enthusiastically supports the Pi 4's growing
use case as a replacement, or at least alternative to, the traditional desktop PC.
Now, isn't this interesting because it really kind of shows you what their game plan is.
We speculated when the Pi 4 came out that they're kind of positioning this as a desktop,
but now we have it all in a form factor.
The Pi 400 is special because it takes what is sort of famously the Raspberry Pi keyboard
and sticks a Raspberry Pi 4 in here, but it's not just a straight Pi 4 in a box.
They've built a custom motherboard, a custom heating solution, and they've managed to keep
the GPIO pins on the back.
I actually, I got one.
I got the kit, which includes, of course, the unit itself, a micro SD card slot preloaded
with Raspberry Pi OS, a power brick, an HDMI cord, an SD card adapter, and a really nice
book.
Wow.
So basically, you just need a monitor.
Yeah.
And that kit is $100, and it arrived at middle of the week.
So I've had it for a few days, and I really kind of put it through its paces.
And I have to say, I am happy with the end result.
It kind of makes a big difference having a Pi 4 just ready to go.
I don't have to carry my crash bag kit around anymore with an HDMI monitor and a keyboard
and a mouse and a cord in there and all the power adapters.
Right.
I mean, you're a heavily adopter, I think, of the Raspberry Pi platform, and this is
just all the more convenient.
Now, maybe space is a premium for you, but in my home office, I wouldn't mind just having
this on a shelf running as a server somewhere with easy access to a monitor if I need it.
You totally could do that.
This thing is surprisingly well built.
It feels very solid, and I'm really happy to say, even when you're putting it under
significant load, it doesn't get hot to the touch.
I didn't get, like, heat coming off the keyboard.
Oh, that's nice.
Yeah, like a laptop does that, right?
And this doesn't have that problem.
It doesn't have a headphone jack.
Well, that's too bad.
It does have two micro HDMI ports.
Is that what those are?
Yeah.
So you could drive dual 4K displays with this thing.
Fancy.
I only was pushing 1080p.
I'm very happy with that, and it performs really well there.
It has three USB ports on there, two are USB 3.0, and one is USB 2, which you could use
for, like, your mouse, and then one of those I just use as a USB audio interface.
That's how I go about it.
Gigabit Ethernet is really nice to have.
The power is delivered over USB-C. Great.
It doesn't have a power switch, so you are plugging or unplugging, or, like, Canna Kit
and others, they sell little switches that you plug your USB power cord into, and then
you plug that into the Pi, and you can use that as a power switch.
Probably old-fashioned, but I'd love to have a power button on this thing.
But I suppose it does keep things simple and maybe the cost down.
Yeah.
So this really harkens back to, like, my first computer was all inside a keyboard, and I
hooked it up to the back of a television screen, and there was no mouse to speak of, and it
had somewhat of a command line interface.
And when I saw this, it reminded me just when I started using it, even, and plugging things
into it.
And when my son asked me, hey, can you plug that into a TV, I was like, yes, you could.
Let me tell you a story, son.
Right?
I mean, it just seems like a very versatile platform.
It's easy to get started with.
It comes with basically everything you need, including a pretty impressive guidebook.
Yeah, it's the fourth edition of that.
They've included it with other kits, but this is an updated one.
I'm also happy to report that it boots right from USB 3 storage.
So if you don't want to use the microSD and you want to boot off of, like, a USB 3.0 SSD,
nothing required to configure it.
You can flash a Raspberry Pi image to that SSD and then just plug it in over USB 3, and
it'll boot right off that.
Oh, that is great, and should make things a lot easier if you want to try out different
distros.
Which I did.
I started, of course, with Raspberry Pi OS, which runs from the SD card, because I got
the kit.
And you can tell they've really eked out decent performance.
It's got a minimal desktop and a Debian base and has tools to configure the Raspberry Pi.
It feels like it's native OS.
They've done a really good job there, and I think it's going to be plenty for a lot
of people.
But not for I, Wes.
Not for I.
I first started out with, of course, Ubuntu 2010.
Naturally.
I decided to go with the full GNOME desktop, because that's something that the team put
a lot of effort into.
Well, and it's always interesting to see, you know, is the pie up for what you might
consider a standard Linux desktop these days?
I mean, it's totally usable.
And I think it really underscores that what now holds back the Raspberry Pi platform is
their storage medium.
I just I'm not I'm not 100% comfortable recommending this to friends and family and then have them
run everything off of an SD card because I know that a micro SD card has a limited write
lifespan.
It's cheap, easy to get started with, available, but also it's just not going to last that
long and it's slow.
And because you have so few types of IO, USB is really the primary IO on the Raspberry Pi,
dedicating one of those ports to your storage kind of stinks because you're also dedicating
the USB-C port to power.
So you're burning multiple ports.
What it really underscores is what we need is some way for storage that is a conventional
storage, maybe MVME disk like on the Pine, but some kind of storage that I can plug into
this thing that's fast and built into the motherboard and on the bus off of USB is really
what's got to come next for these things.
Because you could put eight gigs of RAM in the Pi 400 and that would be lovely.
And you could even put a much faster ARM CPU, that'd be great and be a noticeable improvement.
But it's still massively hindered by the storage choices.
It's really unfortunate.
You know, I put a very high-end Samsung MVME SSD and I'm still limited by what USB 3.0
can do for me.
And I'm burning one of my valuable ports too at the same time.
Right.
I think it works well at the low end of the market, but clearly there's folks who have
nice peripherals or using it for server-related tasks and you want to have access to these.
Maybe it's empty by default and then just an add-on later would also be nice if it was
fit right on the board.
So it would keep that handy form factor.
Yeah, and I think in IoT and in server work cases where IO isn't super intense, a really
fast SD card gets the job done.
Or in like a large cluster environment, you might use NetBoot and run off of network storage.
But when you're talking about the desktop and you're talking about getting it as a desktop
kit, $100...
Think about it, there's a $100 Linux PC that's well-built, well-supported and is really stable.
It's really a great proposition.
The only downside is, is, oh, by the way, that storage probably has about a year to
lifespan max, depending on your usage, and it's going to be real slow when you're loading
applications.
Yeah, that does bring the question of, this is someone's first Linux experience.
How far does the caveat of the Raspberry Pi go, especially if they're not really familiar
with their options?
We want Linux users to have a good first impression.
Yeah.
And I really, really could see myself using this long-term as a studio desktop machine
that's always ready to go with SSH, that always has like my email program on it, that has
a web browser that I'm logged into so I can get into stuff really quick.
It's low power, it's low heat, it's silent.
Seems natural for any kind of like kiosk, always available display setup.
I also put a Manjaro Plasma Edition on this, and I felt like, and I kind of suspected this
might be the case, and it seems to bear out in my testing, Plasma is a pretty good experience.
KWin is pretty clever about scaling down to different hardware.
And Raspberry Pi with Manjaro is a nice combination.
They go good together.
Lots of available software, a desktop environment that is certainly first class.
Modern CPU with some of the latest drivers.
And so I was able to use OpenGL accelerated graphics under KWin on the Pi 400, and I felt
like performance was really good.
We sometimes have, maybe it doesn't, isn't the smoothest at resizing Windows and stuff
like that, but man, when you combine that with the price tag, $70 if you don't need
the kit, 70 bucks, native Linux device, and silent, it's really nice.
And the experience for getting Ubuntu on this is first class.
I have to really give props to the Ubuntu team.
When you go to download the Raspberry Pi version, they have really nice pictures that show you
every Raspberry Pi that they support, and they already have updated with the Pi 400
on there.
That's nice.
So I found the picture of the Pi 400 and downloaded the ARM image, and that was that.
It was that easy.
This has got to be one of the nicest, most streamlined pre-built Linux boxes I've ever
seen.
Because silence and low power is big for me.
Those are big attributes.
And having gigabit ethernet means, at least in my use case, I'll have this thing just
set up as a terminal station.
We can jump on fake NAS, and we can do arch updates, and all kinds of stuff whenever we
need now.
I mean, I think it's just a great machine.
I thought I was going to give it away as a gift, but it's too nice.
It's too unique.
I'm keeping it.
I'm very happy with it.
I hope that means that we'll see this form factor stick around, because the Pis have
just been getting better and better, more available RAM, more horsepower.
And I could see maybe in the next, maybe a couple generations down the road, this might
be enough.
If you do a lot of things on your phone, you just occasionally need a desktop, it might
be enough.
Yeah, absolutely.
And I'll say this, the kit is going to make a great holiday gift.
If your use cases aren't high performance, if you don't need more than a couple of applications
at a time, and everything you need is ARM compatible.
So those are the big caveats right now.
But if you're comfortable with all those caveats, it's a big recommend.
Speaking of Linux hardware, it looks like Dell is set to add webcam and microphone kill
switches in future versions.
Now, this is interesting because I think we're all pretty familiar with some privacy oriented
niche devices out there like the Librem notebooks and Librem 5, where they have physical hardware
switches on the side.
But this might be something a little different because we're getting these details on what
could be landing in future Dell products, say in 2021, by source code in the Linux kernel.
Yeah, Michael Airbolt over at Ferronix got wind of this.
That's the Dell privacy driver sent out on Tuesday to the Linux kernel mailing list.
And really, it's all about manipulating the relevant LEDs and tracking the status of the
hardware based controls, whereas the actual toggling of the audio and video support is
handled by the hardware.
Yeah, so instead of like cutting out holes in the side of the laptop and having physical
toggle switches, which would never be waterproof, and you know me, Wes, I dream of a waterproof
laptop one day.
You sure do.
But instead, it is hardware controlled kill switches via an interface provided by the
kernel that is manipulated by keyboard combinations in the user space.
So you hit a key combo that signals to the kernel to then message to the hardware to
actually do the kill switching.
So it's not a software kill switch, it's a messaging system to signal the hardware kill
switch.
Yeah, this seems pretty clever.
You know, the kernel is just there sitting and passing messages back and forth.
And it seems like a good way to implement this.
Yeah, you wonder if it makes it somewhat possible, because if it's in user space, then potentially
a malicious application in user space could send those same signals.
But I would first of all, I would imagine Dell is probably engineered for that.
But second of all, I wonder if that wouldn't be a decent compromise, because think about
how niche down that is that, you know, you'd have to be going after a Dell model running
a certain version of this software stack on a certain version of the kernel for certain
hardware devices.
And that's really niche down.
That's like nation state level niche down for a vulnerability.
So maybe it's not a bad compromise.
And it also seems looking at the source code that Veronica called this out, there's some
indication that Dell is working on a privacy screen under this driver.
And it's not quite clear, but it seems this privacy screen would reduce the horizontal
and vertical viewing angles of the display.
So that onlookers couldn't clearly see the content of your screen like those privacy
screens that they have at banks, only built in and then enabled by the user with a key
combo.
Interesting.
Yeah.
Toggle this on or off.
Maybe adjust the viewing angles.
Interesting.
These future Dell Linux machines could be very competitive in multiple ways.
And it's interesting to see Dell pursue privacy as one of those ways to differentiate and
be competitive.
Clearly they think there's a market for it.
Yeah.
Well, I think they might be onto something, Wes.
Linode.com slash LAN, you go there to get a $100 60 day credit towards a new account
and you support the show.
Linode is our server provider of choice.
If we need to deploy a server for anything, even if it's just a test or learn a new skill,
we use Linode.
They started in 2003 as one of the first companies in cloud computing, three years before AWS,
because they were Linux users themselves and they saw where things were going.
We're about to have a story towards the end of the show.
That's a great example of when you are tapped into the Linux scene, you see where things
are going before the rest of the market does.
And that was Linode.
I've been using them exclusively for a couple of years, but I have followed them forever.
They're always at the same events I go to, like Linux Fest Northwest, they're sponsors
of the Kubuntu project.
In fact, they provide infrastructure for a lot of open source projects.
If you need to run something on Linux, you can probably run it on Linode.
They give you access to the backend infrastructure.
There's even guides, just this last week, I did this crazy setup where I reflashed a
production Linode to a custom distribution using their own tutorial.
Wow.
Yeah.
And it really worked, you know, they walked me through how to create a custom rescue boot
environment and then boot into that and then reflash the host disk using DD and they gave
you all the steps to do it because they're not afraid of giving you access to the backend
because they're Linux users themselves.
But if you're just a beginner, the UI is so simple and straightforward, you're gonna have
no problem getting started.
And they also have other services beyond servers, like load balancers and S3 compatible object
storage, which can be a real trick.
There are cloud provider and the price is great.
It starts at $5 a month, it's 30 to 50% cheaper than the big cloud providers out there.
So go check out Linode, linode.com slash LAN.
They're independently owned and they're founded on a love for Linux and now they're making
your humble podcast network right here, Jupiter Broadcasting possible.
And also a big thank you to everybody who goes to linode.com slash LAN.
You get that $100 60 day credit towards a new account and you let Linode know you heard
about it right here on Linux Action News, linode.com slash LAN.
There's big changes coming to Let's Encrypt's root certificate and they're warning that
as a result, about a third of Android devices could stumble next year.
Yeah, the register has a great write up on this, which we'll link to in the show notes,
but I just love the opening paragraph.
So I wanted to just read it for you.
Let's encrypt a certificate authority that puts the S into HTTPS for about 220 million
domains has issued a warning to users of older Android devices that their web surfing may
get choppy next year.
Uh oh.
Now what does all of this mean?
Okay, well to get a certificate authority started, you have to get some folks to trust
you, and it takes time to do that.
So from the start, Let's Encrypt had some support from Iden Trust who sort of cross
signed everything Let's Encrypt was doing, made it so that existing browsers, existing
computers, existing trust stores would accept these brand new Let's Encrypt certificates.
So they have like a co-signer.
Exactly.
Okay.
Like you might have on your home loan because well, no one trusts you.
Dad had to sign for, had to co-sign on my first car, I had no credit.
So naturally the next step was they made their own root certificate and applied for it to
be trusted with all the major software platforms.
And actually by July of 2018, their root certificate had been accepted by Microsoft, Google, Apple,
Mozilla, Oracle, and yes, even Blackberry.
And so it was no longer really necessary to have Iden Trust's root certificate vouch for
Let's Encrypt's character.
I love how this isn't an issue for Blackberry users, but of course the problem is that Android
devices are slow to update.
And so next year on September 1st, 2021, this root certificate that Let's Encrypt was initially
using, it relied on cross signing like Wes explained, and that's going to be wrapped
up and done, which means new certificates that have been issued since those Android
devices were built and shipped and presumably last updated, won't trust the certificates
from Let's Encrypt in this new era.
And so they just may not connect or they may issue some sort of error in their web browser.
And most notably, this includes version of Android prior to 7.11.
So that's actually a fair amount of them, it seems.
That lapse in trust will hit actually about a third of Android devices currently operating.
And with more than 2.5 billion active Android users, that impact could be noticeable, although
hopefully not by too many, those aging Android devices account for only about 1 to 5% of
internet traffic.
Yeah, I mean, it's maybe notable worth talking about.
And we could take action as as maybe the tech people in the family, I think you are and
I, a lot of us probably in the audience play that role too.
If we have family members that are on older Android devices, and they're just in a position
not to upgrade, one thing you could do that would help them is get them on Firefox.
It won't be affected by this issue.
Mozilla's all up to date.
They're going to be good to go if they put Firefox on their Android device.
Problem solved.
While it won't help you right now, Chrome will soon have its own dedicated certificate
root store.
Google has announced plans to run its own certificate root program for Chrome in a major
architectural shift for the company's web browser program.
Now, if you're not familiar, a root program or a root store is a list of root certificates
that operating systems and applications use to verify the integrity of a software program
during its installation routine.
Users like Chrome use root stores to check the validity of an HTTPS connection.
They do this by looking at the website's TLS certificate and checking if the root certificate
that was used to generate the TLS cert is included in the local root or program store.
And the notable thing here is that since Chrome's launch in 2009, it was using the underlying
platform's root store.
So that was always the root source.
But now according to a Wiki page, Google has announced plans to create their own store
named the Chrome root program.
And it will ship on all versions of Chrome on all platforms except for one.
Can you guess which platform?
Oh, something tells me it's iOS.
Yes, it's iOS.
It probably would get them kicked from the app store.
It's currently in the very early stages.
So that's why Wes said it's not going to solve your problem for now.
But you got to look at the market share of Chrome here.
And you know, by some estimations, 60% to 65%, it's the gateway to the internet.
And so these kinds of changes are going to have big impacts.
And you've got to assume Google's going to be more up to date with their root store than
some of these older platforms, some of these older OSs that users decide not to abandon.
Yeah, I mean, in some ways, it's just adding more control to the browser environment.
You can be sure that you've got the right up to date list of certs, kind of in the same
way that there's been a big push to DNS over HTTPS, you know, we're going to manage that
ourselves too.
We're not going to rely on whatever ancient DNS servers you're using.
It's funny you say that, because that's kind of also been the biggest source of pushback
again, is from enterprises, that same argument, where they say, well, hold on here.
We manage this very carefully at the enterprise level with a lot of intention.
And now you're just going to go bypass all of our hard work?
Like, we've put a lot of effort into this.
And this is kind of the ongoing battle as web browsers become more and more self-contained.
I mean, would it be that crazy to see a future where by default, Google just uses 8.8.8.8
for its DNS resolution and doesn't even bother using what's on your OS?
I could absolutely see a future where that happens.
And I could see enterprise IT admins hating that change.
I would hate that change.
I, on all of my lands, run a local DNS cache.
I know, I'm that guy.
But it just makes things faster.
And I like having machine names and all that kind of stuff.
I like naming my computers and being able to SSH to them by their name.
That's just good fun.
Or, you know, their URL and those kinds of changes, they rob you of that functionality.
But you hope maybe they'll make it opt-in.
Yeah, you know, if I can add some automation, some scripts that will install my custom certs
into their new store, I can handle it.
I think it's pretty easy, though, to see why they're doing something like this.
You can kind of understand and appreciate why Google feels like this is necessary in
light of the Android situation.
We kind of created the problem, and now this is sort of a weird way to fix it.
But you can see the logic.
It's still early days, though.
Google has published rules for their new root program and is asking people to start applying
to their whitelist now so that down the road, when they eventually do adopt this new program,
there will be a seamless transition.
I want you to explain this next one to us.
There's a lot of hype around BPF and eBPF.
eBPF is technology in the kernel that lets programmers execute custom bytecode within
the Linux kernel without having to change the kernel or load kernel modules.
And some people are talking about it like the core technology that's going to fuel a
billion dollar tool industry, and it appears it just got a lot easier to use.
Yeah, right now there are already many eBPF based startups building networking, security,
and performance products.
Yet all of them basically require customers to install LLVM, Clang, and the kernel header
dependencies.
And often that can be over 100 megs of storage just to get started using any of this.
And if you're looking at like router devices, edge devices, or even just tooling devices,
that's not insignificant.
And you know, one more layer to have to pull in your image.
So two new technologies, BTF and CoRE, eliminate these dependencies at runtime.
So not only making BPF more practical for embedded Linux environments, just as you're
talking about, but really just for adoption everywhere.
Now all right, those were acronyms before, but first we've got BTF.
Little confusing because it's the BPF type format.
Oh, it's got an acronym inside it.
I like that.
That's right.
And this provides struct information so that you can avoid needing to have Clang or the
kernel headers.
You've already got that struct information available to you.
Yeah.
Okay.
So that was CoRE, that's BPF Compile Once Run Everywhere, which allows compiled BPF bytecode
to be relocatable, avoiding the need for recompilation by LLVM.
Yeah.
Now, okay.
So imagine this as somebody who's trying to use BPF in their project, in their product.
Instead of requiring customers to install various heavyweight and sometimes brittle
dependencies, a BPF agent or some tool may now be just a single tiny little binary, a
tinary that works on the kernel, any kernel that has this BTF support.
So it seems like it means the job just got a lot simpler for developers, but additionally,
end users, consumers of the tools, it'll be a lot simpler of a dependency chain, just
a much simpler way to package, deliver, this kind of thing.
Yeah, exactly.
I mean, before you were recompiling stuff, you were building kernel modules, you were
making sure that all of this stuff could actually get loaded into your kernel.
You had to have all the dependencies set up and maintained.
And if you're just trying to add some product onto your Kubernetes infrastructure, that
might not be what you signed up for.
Yeah, that's right.
And Google has been using eBPF to run their data plane for the Google Kubernetes engine.
It's used at Facebook, it's used at Netflix.
This technology is, I think, relevant and there will be a lot of tools, maybe network
analyzers and whatnot that are built off of it.
So it's worth learning and it's one of those things we wanted to talk about now so that
way down the road, when future products are built on top of it, you know what's behind
the scenes.
If you want a whole bunch more information about eBPF and related technologies, just
check out Linux Unplugged, episode 293.
Yeah, I think it's a really cool technology and it's worth paying attention to and it's
just one listen away, linuxunplugged.com slash 293.
Well, that does bring us to the end of this week's Linux Action News.
Check out linuxactionnews.com slash subscribe for all the ways to get new episodes.
And linuxactionnews.com slash contact for ways to get in touch.
You know, join us during the Apple event this week if you're around.
The week this publishes over jblive.tv we'll have live event coverage and then we'll roll
right into Coder Radio.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us and we'll see you next week.
