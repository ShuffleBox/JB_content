WEBVTT

00:00.000 --> 00:08.440
Hello, and welcome to Linux Action News, episode 214, recorded on November 7th, 2021.

00:08.440 --> 00:09.440
I'm Chris.

00:09.440 --> 00:10.440
And I'm Wes.

00:10.440 --> 00:11.440
Hello, Wes.

00:11.440 --> 00:12.440
Let's do the news.

00:12.440 --> 00:16.280
And our first story this week is about a significant shift at GitHub.

00:16.280 --> 00:19.880
CEO Nat Friedman has announced he plans to step down.

00:19.880 --> 00:24.780
GitHub's Chief Product Officer, Thomas Tomka, will take over the role of CEO and report

00:24.780 --> 00:26.620
to Julia Luisen.

00:26.620 --> 00:29.880
I lead developer division at Microsoft.

00:29.880 --> 00:36.440
My team's mission is to build the tools and services that developers love and use every

00:36.440 --> 00:37.440
day.

00:37.440 --> 00:39.400
Coda radio listeners might recognize Luisen's name.

00:39.400 --> 00:42.080
She was the head of the developer division at Microsoft.

00:42.080 --> 00:45.980
And she was also directly involved with that last minute decision back in October to remove

00:45.980 --> 00:51.320
the hot reload functionality from the open source.net project for the sake of Visual

00:51.320 --> 00:52.980
Studio sales.

00:52.980 --> 00:56.560
Developers pushed back pretty hard on that attempt and Microsoft eventually reversed

00:56.560 --> 00:57.560
course.

00:57.560 --> 01:01.600
Luisen has since been promoted to president of Microsoft developer division, and she will

01:01.600 --> 01:02.600
now oversee GitHub.

01:02.600 --> 01:04.080
So it's a lot of names.

01:04.080 --> 01:09.760
So just to be clear, Tomka, the new CEO of GitHub, will be reporting to Luisen at Microsoft.

01:09.760 --> 01:14.540
Luisen has also been identified as a key player in Microsoft's overall open source strategy

01:14.540 --> 01:16.840
and their modern approach to developers.

01:16.840 --> 01:21.960
No matter how you slice this, this is a big change for a critical tool that the overall

01:21.960 --> 01:26.180
community, I mean, Linux users, developers, I mean, a huge community uses.

01:26.180 --> 01:30.200
When Microsoft first acquired GitHub, there was a lot of concern in the developer community.

01:30.200 --> 01:32.920
We weren't sure how that was going to roll.

01:32.920 --> 01:36.480
Having that in the captain's chair just made a lot of us feel better.

01:36.480 --> 01:40.480
Yeah, and then Friedman had been active in the Linux community since the 90s and involved

01:40.480 --> 01:42.640
with some of our favorite projects.

01:42.640 --> 01:47.280
Kind of made sense when he was then made CEO by Microsoft when they bought GitHub for 7.5

01:47.280 --> 01:49.240
billion back in 2018.

01:49.240 --> 01:52.920
Whoa, 7.5 billion still seems like a lot.

01:52.920 --> 01:53.920
It sure does.

01:53.920 --> 01:59.280
As for what he's doing post-GitHub, well, that didn't have a lot to say, but did share,

01:59.280 --> 02:04.280
quote, I'm moving on to my next adventure to support, advise, and invest in the founders

02:04.280 --> 02:08.360
and developers who are creating the future with technology and tackling some of the biggest

02:08.360 --> 02:09.920
opportunities of our day.

02:09.920 --> 02:12.920
Yeah, I think he still has about a month on the clock or such.

02:12.920 --> 02:14.800
But this is going to be an adjustment period.

02:14.800 --> 02:17.760
We don't really know a lot about Thomas Domka.

02:17.760 --> 02:21.800
We know that Nat hired him shortly after the Microsoft acquisition, and I'm pretty sure

02:21.800 --> 02:26.640
he was central in taking private repos free back in 2019.

02:26.640 --> 02:28.120
A lot of us like that.

02:28.120 --> 02:31.580
And Domka himself even admits in interviews that he doesn't really have the public profile

02:31.580 --> 02:34.560
that Nat had when he stepped into the CEO role.

02:34.560 --> 02:38.080
But he does stress in those same interviews that he does have the background of a developer

02:38.080 --> 02:42.640
and open source advocate, and that fits well into the overall line of GitHub CEOs of the

02:42.640 --> 02:43.640
past.

02:43.640 --> 02:48.620
He did also note that his overall style is a bit different, focusing more on execution

02:48.620 --> 02:53.600
rather than necessarily being a visionary.

02:53.600 --> 02:57.320
Sometimes it can really pay to find bugs, at least the right bugs for the right groups.

02:57.320 --> 03:01.320
Google announced this week it's upping its payments to security researchers who follow

03:01.320 --> 03:05.080
the correct channels and disclose new vulnerabilities in the Linux kernel.

03:05.080 --> 03:12.700
Yeah, for the next three months, Google will pay out $31,337 for vulnerabilities that can

03:12.700 --> 03:14.760
exploit privilege escalation.

03:14.760 --> 03:19.440
Or if you can demonstrate a previously unpatched vulnerability or a new exploit technique that

03:19.440 --> 03:20.440
could earn you $50,000.

03:20.440 --> 03:21.440
$50,000.

03:21.440 --> 03:26.040
I mean, you know, Wes, we follow these kernel stories pretty closely.

03:26.040 --> 03:29.600
I think we could find a new monetization strategy for the podcast.

03:29.600 --> 03:31.080
We could even live stream it.

03:31.080 --> 03:32.640
You find them all squash them.

03:32.640 --> 03:34.920
You better move quickly listening.

03:34.920 --> 03:36.240
We're coming for them.

03:36.240 --> 03:40.360
Google's effectively tripling their previous reward amounts and promises to honor this

03:40.360 --> 03:45.480
for at least the next three months, they hope the $31,000 and $50,000 reward levels will

03:45.480 --> 03:50.400
encourage more security researchers to explore the Linux kernel and report their findings.

03:50.400 --> 03:54.480
These kind of investments not only have a positive impact on Google's products, think

03:54.480 --> 03:59.840
Android and Chrome OS, but there are definitely some clear benefits for the entire Linux ecosystem

03:59.840 --> 04:01.080
as well.

04:01.080 --> 04:05.000
Setting up these kind of bounties seems like an excellent way for companies to give back

04:05.000 --> 04:09.400
since they are building their empires on top of free software after all, without necessarily

04:09.400 --> 04:14.160
having to be or hire a whole bunch of kernel developers directly.

04:14.160 --> 04:17.840
Sure would be great to see more companies follow in Google's example.

04:17.840 --> 04:22.680
But speaking of solving low level problems, this week, the scuttlebutt was around a new

04:22.680 --> 04:26.220
canonical tool to manage firmware updates.

04:26.220 --> 04:29.040
This new tool is being built in Flutter.

04:29.040 --> 04:34.040
And it sits on top of the well known FWAPD and of course, the wider Linux vendor firmware

04:34.040 --> 04:35.040
service.

04:35.040 --> 04:39.240
Not only does this seem to signal a deeper commitment to Flutter on canonicals part,

04:39.240 --> 04:44.800
but it's also notable to see them building out desktop tools with a canonical twist again.

04:44.800 --> 04:49.600
And it appears this new tool will be distributed as, you guessed it, a snap.

04:49.600 --> 04:53.760
Now, it seems work on the firmware updater tool actually began in August.

04:53.760 --> 04:57.840
If you're curious for more, there's some information provided in the most recent Ubuntu

04:57.840 --> 05:02.520
team update, which we'll have linked in the show notes.

05:02.520 --> 05:05.960
Just a quick update on the story we told you about recently, Hector Martin, the founder

05:05.960 --> 05:10.680
of Asahi Linux and the lead developer to port Linux to Apple's new SoC, has announced he's

05:10.680 --> 05:14.120
managed to get Linux booting on the new M1 Pro.

05:14.120 --> 05:18.960
Hector announced he booted to a shell with frame buffer and working USB ports.

05:18.960 --> 05:22.040
Next on the list to get working is Wi Fi and that SD card reader.

05:22.040 --> 05:25.660
And of course, there's still the whole PCI bring up and storage, but they really are

05:25.660 --> 05:27.000
doing the hard work here.

05:27.000 --> 05:30.300
And during Hector's live stream, he spent most of the day finding out that he really

05:30.300 --> 05:33.920
only had to add a single line of code to actually get things to boot.

05:33.920 --> 05:40.040
And that is this process right there, all day long for a tiny discovery, one thing at

05:40.040 --> 05:41.040
a time.

05:41.040 --> 05:47.200
It is early days, but the first results on the new chips seem positive for Linux.

05:47.200 --> 05:52.680
Fedora 35 was released this week, and you can find our in-depth review at linuxunblog.com

05:52.680 --> 05:58.520
slash 430, as well as our State of the Project chat with lead Matthew Miller.

05:58.520 --> 06:03.800
But today, we wanted to pull out one of the more newsworthy aspects of Fedora 35 and

06:03.800 --> 06:06.080
expand on it here.

06:06.080 --> 06:10.520
Wire Plumber ships as the new session manager for PipeWire, a change you really shouldn't

06:10.520 --> 06:14.960
even notice, but might have some huge ramifications long term.

06:14.960 --> 06:19.920
It's in Fedora today, but it will likely hit all distributions at one point.

06:19.920 --> 06:27.080
So on a new Linux system, applications and devices are represented to PipeWire as nodes.

06:27.080 --> 06:29.560
Nodes have in and out points called ports.

06:29.560 --> 06:34.280
These ports could be audio channels, video channels, multiple track channels, you get

06:34.280 --> 06:35.400
the idea.

06:35.400 --> 06:41.360
You can link these ports together to create a media pipeline, or commonly called a graph.

06:41.360 --> 06:45.800
Now configuring those nodes, saying the ports and creating links between them all, that's

06:45.800 --> 06:48.160
the job of the session manager.

06:48.160 --> 06:52.280
Session manager is responsible for orchestrating the media pipeline, if you want to be fancy

06:52.280 --> 06:53.720
about it.

06:53.720 --> 06:57.560
But something has to tell your applications that yeah, they can go ahead and send media

06:57.560 --> 06:58.800
to the speakers over there.

06:58.800 --> 07:03.440
And that's where Wire Plumber comes in, a PipeWire client that has the ability to control

07:03.440 --> 07:09.200
those nodes and ports and more, as explained by its lead developer, George Kyakiadakis.

07:09.200 --> 07:15.320
Now Wire Plumber is a modular session manager implementation for PipeWire.

07:15.320 --> 07:20.680
In the core, it provides an API that you can use to write any kind of tool that interacts

07:20.680 --> 07:22.200
with PipeWire.

07:22.200 --> 07:30.200
And on top of this API, we have built a daemon that is scriptable with Lua scripts.

07:30.200 --> 07:34.920
And in these Lua scripts, you can write some logic to tell Wire Plumber what to do with

07:34.920 --> 07:36.640
your media pipeline.

07:36.640 --> 07:43.280
So you can write your own scripts and provide some logic to orchestrate the media pipeline.

07:43.280 --> 07:48.560
So until Wire Plumber came along, PipeWire had been shipping in a fairly static default

07:48.560 --> 07:49.560
state.

07:49.560 --> 07:54.280
It was flexible, but it got the job done, switching over to a session manager to put

07:54.280 --> 07:59.760
the media pipeline all together, it creates a set of base tools, an API that will enable

07:59.760 --> 08:05.960
tools that are user friendly for anyone to use, and not just power AV wizards, anyone.

08:05.960 --> 08:10.580
But another fascinating thing about Wire Plumber is actually the story of how it came to be.

08:10.580 --> 08:14.480
Like so many things in desktop Linux land, it didn't really come to be just to give us

08:14.480 --> 08:16.480
something new and shiny on the desktop.

08:16.480 --> 08:21.000
A lot of this work is actually the result of development in other areas of Linux outside

08:21.000 --> 08:22.000
the desktop.

08:22.000 --> 08:26.280
Fedora project lead Matthew Miller shared some insights into that in our State of the

08:26.280 --> 08:27.280
Project chat.

08:27.280 --> 08:31.040
A lot of these things you're seeing are desktop related technologies, but they're actually

08:31.040 --> 08:36.760
hires related to an automotive initiative, which you'll see automotive keywords in a

08:36.760 --> 08:38.320
lot of these hires as well.

08:38.320 --> 08:42.320
And I don't have a lot of the details on that, but it is connected into things that are,

08:42.320 --> 08:48.000
you know, useful on the desktop, but also useful in other contexts as well.

08:48.000 --> 08:51.800
And you know, the more we can find things that tie all of these things together, the

08:51.800 --> 08:53.120
more we all benefit.

08:53.120 --> 08:57.920
You can imagine routing audio in a car in an infotainment system can be kind of tricky.

08:57.920 --> 09:02.360
You've got your input from an external client like a phone, you've got nav guidance, you've

09:02.360 --> 09:03.360
got voice prompts.

09:03.360 --> 09:07.040
Of course, you want to be able to take phone calls and override audio.

09:07.040 --> 09:08.400
Something has to manage all of that.

09:08.400 --> 09:13.040
And well, as a result, we get some cool tools on Linux, specifically, Collabra has been

09:13.040 --> 09:16.080
working on this since 2019.

09:16.080 --> 09:19.020
It's already been adopted by the automotive grade Linux project.

09:19.020 --> 09:23.600
So in many ways, what we're now getting in Fedora is production code is just now finally

09:23.600 --> 09:27.320
making its way to the desktop.

09:27.320 --> 09:33.280
On Friday, November 5, the LXQt team proudly announced the release of LXQt 1.0.

09:33.280 --> 09:38.720
The lightweight, cute desktop environment was in development for more than eight years.

09:38.720 --> 09:42.480
Notable areas of recent improvement include the file manager, the image viewer, and a

09:42.480 --> 09:46.280
whole bunch more throughout the lean and being desktop.

09:46.280 --> 09:51.040
We just wanted to pass on a hearty congratulations to the project after so many years of hard

09:51.040 --> 09:52.040
work.

09:52.040 --> 09:54.960
Linode.com slash LAN.

09:54.960 --> 09:59.620
Go there to get $100 in 60 day credit on a new account and go there to show your support

09:59.620 --> 10:00.720
for the show.

10:00.720 --> 10:04.920
Linode is the Linux geeks cloud with 11 data centers worldwide, and they've been hard at

10:04.920 --> 10:10.100
work for 18 years creating the best experience for running applications on Linux.

10:10.100 --> 10:13.760
If you'd like to build it yourself or deploy one of the many one click stacks, Linode has

10:13.760 --> 10:15.360
excellent options for you.

10:15.360 --> 10:17.240
And the performance is incredible.

10:17.240 --> 10:22.040
I would not host all of Jupiter Broadcasting's audience facing services on the node if it

10:22.040 --> 10:23.760
wasn't super fast.

10:23.760 --> 10:28.400
And recently, Linode has been rolling out screaming fast new MVME based block storage.

10:28.400 --> 10:33.360
They have super flexible S3 compatible object storage, and an easy to use dashboard that

10:33.360 --> 10:35.900
just really brings it all together.

10:35.900 --> 10:39.840
And after you've been using Linode for a minute, if you're like me, you'll start to really

10:39.840 --> 10:41.800
appreciate their API.

10:41.800 --> 10:46.480
From the best customer support, super fast rigs and networking, and a Linux culture that

10:46.480 --> 10:49.480
runs deep, there's many reasons to choose Linode.

10:49.480 --> 10:50.960
So let's put it over the top.

10:50.960 --> 10:53.840
Go grab $100 in credit and support the show.

10:53.840 --> 10:55.760
Linode.com slash LAN.

10:55.760 --> 11:00.800
Go there, support the show, and get yourself 60 days and $100 of credit for the world's

11:00.800 --> 11:03.400
best place to run Linux in the cloud.

11:03.400 --> 11:07.480
Linode.com slash LAN.

11:07.480 --> 11:08.480
Linux.ting.com.

11:08.480 --> 11:12.480
You know, Ting is a mobile virtual network operator, so that means Ting has invested

11:12.480 --> 11:15.560
in customer support and getting you a great value.

11:15.560 --> 11:20.280
And that means they have nationwide coverage, a great mix of plans and super fast LT and

11:20.280 --> 11:23.960
5G on multiple carriers that works best in your area.

11:23.960 --> 11:26.840
And Ting's plans are simple and straightforward.

11:26.840 --> 11:31.960
I've been a Ting customer since 2013, and that only happens when they get it right.

11:31.960 --> 11:34.420
And they just simply are the better way to do mobile.

11:34.420 --> 11:38.800
They have plans that start around $10 and top out around $55.

11:38.800 --> 11:43.360
And no matter if you need 12 gigs, 10 gigs, 1,000 gigs, they've got the right plan for

11:43.360 --> 11:44.360
you.

11:44.360 --> 11:48.200
And every plan gets access to Ting's award-winning customer service.

11:48.200 --> 11:51.280
And the best thing is no contracts ever.

11:51.280 --> 11:55.280
I also have to appreciate, even though it's been a long time, it's still super simple

11:55.280 --> 11:56.480
to switch to Ting.

11:56.480 --> 11:59.240
Pretty much any phone's going to work because they have so many networks.

11:59.240 --> 12:00.240
So just get started.

12:00.240 --> 12:03.960
Go to linux.ting.com, check your current phone, create an account, and pick the plan that's

12:03.960 --> 12:05.240
right for you.

12:05.240 --> 12:08.680
Ting will send you a SIM card, you pop that in your phone, and you're going to get activated

12:08.680 --> 12:09.800
in minutes.

12:09.800 --> 12:12.160
Cutting your phone bill in half has never been easier.

12:12.160 --> 12:15.200
With Ting's brand new plans, it's the next generation of Ting mobile.

12:15.200 --> 12:16.200
It's here.

12:16.200 --> 12:20.120
Go see how much you could save, and then take $25 off that.

12:20.120 --> 12:24.040
linux.ting.com.

12:24.040 --> 12:27.760
We wanted to bust a little FUD today with our last story.

12:27.760 --> 12:33.400
As last week came to a close, a Red Hat memo announcing plans to hire fewer senior engineers

12:33.400 --> 12:36.880
and some budget freezes leaked online.

12:36.880 --> 12:41.760
In an internal email sent on Wednesday by Timothy Kramer, SVP of software engineering

12:41.760 --> 12:47.520
to Red Hat managers, he directs hiring requisitions to be made at a lower level of seniority than

12:47.520 --> 12:48.520
usual.

12:48.520 --> 12:52.560
The email also touches on unfilled and backfilled positions that should be offered at reduced

12:52.560 --> 12:54.600
levels going forward.

12:54.600 --> 12:58.920
And without some context, it's kind of understandable why people would be concerned about this story.

12:58.920 --> 13:04.420
You know, if Red Hat is unable to offer competitive pay or hire senior people, that could limit

13:04.420 --> 13:08.920
the company's success and limit its access to talent, or even make it difficult to retain

13:08.920 --> 13:11.040
existing skilled employees.

13:11.040 --> 13:14.960
But I think when you understand the broader context, this story isn't quite as shocking.

13:14.960 --> 13:20.040
First of all, this appears to only pertain to one division inside Red Hat, led by Tim

13:20.040 --> 13:21.040
Kramer.

13:21.040 --> 13:22.040
Although a large one.

13:22.040 --> 13:26.880
Secondly, this is not the first time Red Hat has done something like this in the before

13:26.880 --> 13:28.680
IBM times.

13:28.680 --> 13:32.120
And I know some of you out there must have experienced this.

13:32.120 --> 13:36.500
Sometimes companies just get stuck in a bit of a culture of title creep.

13:36.500 --> 13:41.640
Over time, you end up with a few too many senior this is or a few too many heads of

13:41.640 --> 13:42.640
that.

13:42.640 --> 13:43.640
I've seen it a few times.

13:43.640 --> 13:44.640
Probably a lot of you have too.

13:44.640 --> 13:49.160
And a lot of companies end up having to deal with this in some way somehow.

13:49.160 --> 13:50.840
And it tends to never be easy.

13:50.840 --> 13:54.140
And it tends to also not be very clean.

13:54.140 --> 13:57.460
Sometimes departments experience intense growth for a period of time.

13:57.460 --> 14:01.880
And then that has to be realigned with like the longer term role for that department inside

14:01.880 --> 14:04.200
the larger organization.

14:04.200 --> 14:09.200
A spokesperson for Red Hat confirmed the authenticity of the leaked email and added that Kramer's

14:09.200 --> 14:12.480
team had hired almost 1000 new staffers.

14:12.480 --> 14:18.320
And Red Hat as a whole hired more than 2200 new associates this year, I guess essentially

14:18.320 --> 14:21.160
implying they've done enough for a while.

14:21.160 --> 14:26.240
And indeed, it seems for 2022, that hiring figure will be more like 200.

14:26.240 --> 14:30.320
You know, these ebbs and flows of companies are hard for those of us on the outside to

14:30.320 --> 14:31.840
really understand.

14:31.840 --> 14:36.120
And I've just seen some terrible takes on this story from basically anyone who could

14:36.120 --> 14:40.080
be bothered to just go get a quote from Red Hat on what the heck is going on here.

14:40.080 --> 14:41.840
Context matters in these stories.

14:41.840 --> 14:45.200
But also, I don't know if you've noticed this West, but there just seems to be like a voracious

14:45.200 --> 14:50.920
appetite in the Linux media for the whole IBM is destroying Red Hat narrative.

14:50.920 --> 14:55.480
And there doesn't seem to be much of an appetite at all for covering the hires the Red Hat

14:55.480 --> 15:01.400
made over the summer that will directly result in significant new desktop stuff.

15:01.400 --> 15:05.240
We recently highlighted some of them on a recent episode because we felt like they were

15:05.240 --> 15:06.240
getting very little coverage.

15:06.240 --> 15:10.680
But it just feels like people want to see Red Hat fail or at least people in the media

15:10.680 --> 15:14.320
do because in a way they're hoping for it because that's going to just generate a ton

15:14.320 --> 15:15.320
of clicks for them.

15:15.320 --> 15:16.720
I think you're right.

15:16.720 --> 15:21.520
We're almost sitting there waiting to interpret any news as if it's definitely IBM killing

15:21.520 --> 15:22.960
Red Hat this time, for sure.

15:22.960 --> 15:23.960
Right.

15:23.960 --> 15:28.400
Well, but almost also at the same time ignoring the positive news about the hires that they've

15:28.400 --> 15:31.920
done for like HDR support recently, just as an example.

15:31.920 --> 15:34.720
I find that to be selective and I don't know.

15:34.720 --> 15:35.720
I don't like it, West.

15:35.720 --> 15:36.720
Yeah.

15:36.720 --> 15:38.400
I mean, that's why we wanted to talk about this today.

15:38.400 --> 15:43.280
We wanted to try to provide some kind of counterbalance to those knee jerk just reactionary takes

15:43.280 --> 15:44.560
out there.

15:44.560 --> 15:48.600
Doesn't mean that we won't continue watching IBM and Red Hat closely.

15:48.600 --> 15:53.400
Just means you have to take it all in balance, the good, the bad and just the unknown.

15:53.400 --> 15:56.880
Something else to consider here, I think, is that this change does maybe open the door

15:56.880 --> 15:59.560
to some junior and mid-level developers.

15:59.560 --> 16:01.040
That's not necessarily a bad thing.

16:01.040 --> 16:02.040
Right.

16:02.040 --> 16:05.060
I mean, the more experienced staff, they have plenty of options right now if these changes

16:05.060 --> 16:06.560
don't work out for them.

16:06.560 --> 16:07.560
That's true.

16:07.560 --> 16:08.560
That's the hires market at the moment.

16:08.560 --> 16:10.280
So that's a fair point.

16:10.280 --> 16:15.320
And also just the previous hiring rate just doesn't seem sustainable, nearly a thousand

16:15.320 --> 16:16.320
in one department.

16:16.320 --> 16:17.320
That's a lot.

16:17.320 --> 16:21.080
I mean, it's a big department, but that's a lot for any company, even a large company.

16:21.080 --> 16:24.880
And while we're on the subject, Red Hat Enterprise 9's beta landed this week.

16:24.880 --> 16:28.280
This is the first rel that's really the fruits of sent off stream and really started with

16:28.280 --> 16:29.640
Fedora 34.

16:29.640 --> 16:35.960
That means WireGuard is in here, C Groups 2 by default, kernel live patching inside

16:35.960 --> 16:39.560
Cockpit, a.k.a. web consoles, they call it in rel, a bunch of stuff.

16:39.560 --> 16:43.680
It's a big release to be sure, so we'll be keeping an eye on that and a lot more.

16:43.680 --> 16:49.040
So be sure you get every new episode by subscribing at linuxactionnews.com slash subscribe.

16:49.040 --> 16:52.920
And linuxactionnews.com slash contact for ways to get in touch.

16:52.920 --> 16:57.440
Links to everything we talked about today are at linuxactionnews.com slash 214.

16:57.440 --> 17:02.520
We'll be back next Monday with our weekly take on the latest Linux and open source news.

17:02.520 --> 17:03.520
Thanks for joining us.

17:03.520 --> 17:19.440
And that's all the news for this week.

