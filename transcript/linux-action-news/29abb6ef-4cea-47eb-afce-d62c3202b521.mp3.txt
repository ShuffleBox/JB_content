Hello, and welcome to Linux Action News. Episode 254, recorded on August 17, 2022. I'm Chris.
And I'm Wes.
Hello, Wes. Let's do the news.
We start with Android 13. Once the makings of a big news cycle, these days Android has
matured to the point that yet another release is a fairly standard affair. Combine that
with the limited uptake of a new Android release, and sometimes, a new version goes totally
unnoticed by most. But, as we record, Android 13 is rolling out to Pixel devices, and then
soon to Samsung Galaxy devices, Asus, OnePlus, and others.
And most importantly, at least I think, it's landing upstream in AOSP right now, so that's
great to see. Actually, there's some stuff in here that is really good, including multi-language
support for apps, but also one I like to see a lot landing in Android 13, is official built-in
support for Bluetooth LE audio, so developers can now start using LE capabilities on compatible
devices. That means battery life on some of these Bluetooth LE devices is just going to
be mind-blowing. It's great to see that built in now. We're also seeing the beginning of
a new feature that's coming to Android, and developers need access to it now so they can
start baking support in, hopefully, to future versions of their apps. And this caught my
attention. It's called predictive back gesture. So, in Android 13, they've introduced a new
API where your app can tell the system how it's going to handle back events in advance.
In practice, they call it the ahead of time model. They say this new approach is part
of a multi-year effort to help prepare your apps to support the new predictive back gesture,
which is available in testing right now if you turn on the developer options. Another
headline feature this time around is tablet support. Google says 13 has been optimized
for large screen layouts, though, honestly, the implication in the release announcement
is a lot more work needs to be done around the tooling. Notification permissions and
photo library access are now more in line with the iOS style of asking the user for
permission first. Oh, I like that. I also like that application performance has got
a big boost in Android 13, thanks to some updates to the art runtime. And the good news
there is Google plans to ship those improvements to other versions of Android through Google
Play updates. It's great for those of you who use the Play services. And overall Android
13 looks like a really nice update, perhaps what Android 12 just should have been all
along. Google is asking developers to start testing now. And I think hopefully, since
this isn't really a life changing upgrade, we'll see a significant uptake from the hardware
vendors out there.
Just when we thought Linux was entering an era of gaming utopia, rolling release Linux
users discovered some bad news I'm afraid we're all going to have to deal with sometime
soon.
And it really touches on what should be the upstream responsibility for long term compatibility
and stable ABIs. And unfortunately, for some users, they're finding themselves trapped
right in the middle of that debate as their anti cheat enabled games began breaking after
recently updating to glibc version 2.36. The breakage stems from the DT underscore hash
section being dropped in the GNU C library altogether.
The GNU C library or glibc as it's often known, has traditionally supported two ways to get
your hash on DT underscore hash and the newer GNU underscore DT underscore hash. Now these
days most consider the GNU version to be better structured and DT GNU hash has been around
for a decade and a half at this point. But as you're probably already guessing since
we're talking about this, makers of anti cheat software are still relying on the old
non GNU version.
Yep, and once rolling Linux users like Arch users began updating their system, they got
that new version of glibc, the one that only has the GNU hash section. And well, understand
it's not just anti cheat games that are getting broken, other Linux apps are as well such
as lib strangle, but really anything that relies on the traditional DT underscore hash
section is breaking with glib 2.36 due to this change.
Over the past week and a half, this issue has been discussed pretty darn thoroughly
on Valve's Proton bug tracker. Thankfully for those on Arch Linux where the problem
was first reported, glibc 2.36-2 is currently in testing and reverts the earlier change
so both styles of hash are still included. And being those rolling release maniacs, Arch
users have already tested that testing package and confirmed that anti cheat enabled games
are once again working correctly.
As far as getting the fix upstream for this issue, or maybe just rolling the change back
upstream, well, it's not really clear what's going to happen right now. A Proton developer
at Valve says that the upstream glibc discussion on DT underscore hash isn't coming out in
the direction of prioritizing compatibility with pre-existing applications. They added
in a tweet thread, quote, every such instance contributes to damaging the idea of desktop
Linux as a viable target for third party developers.
I can definitely appreciate that. I mean, I don't want my games to break. But as ever
in Linux, there's multiple parties, multiple projects and multiple developers involved.
On the glibc side, there's definitely been some discussion about how best to address
this issue going forward. Carlos O'Donnell, a glibc steward said, quote, what I would
like to see is more feedback from the anti cheat teams about exactly what they need.
He also pointed out that, quote, depending on DT hash and specific loader semantics is
going to break at some point. To make this issue a little more complicated, although
perhaps also a potential avenue for a fix, is that the old style of hash is still marked
as required in the upstream specification. So a change at that layer might at least signal
to downstream consumers like anti cheat software that they really shouldn't rely on just the
old style of hash sticking around. And of course, because this is Linux, right now,
a lot of the control rests in the hands of distributions. Carlos also emphasized that
DT underscore GNU underscore hash was added way back in 2006, and has kind of been the
standard on Linux for the last 16 years. Also, this most recent glibc change was made to
allow distributions to choose how backwards compatible they want to be. So really, at
least from some perspectives in the glibc camp, the choice to have DT hash or not is
with distributions. If this breaks specific applications, then those developers need to
engage with those distribution ecosystems or adapt their software.
Yeah, it's stories like these, Wes, where I think the Valve developers are thinking
to themselves, well, I'm glad we built SteamOS because they're clearly going to mitigate
this at the distribution level, and other distribution makers are going to have to make
the same decision. There is some good news out there this week for Linux gamers, though.
Proton 7.0.4 shipped just a couple of days ago, and it brings a whole batch of new Windows
games to the Linux fun. It's not just better game compatibility, though. There's an exciting
lower-level improvement shipping with Proton 7.0.4. It's support for file system copy-on-write
behavior, at least for supported file systems like our dear ButterFS. The goal here is to
reduce space used by game prefixes, which is really nice to see for some of us on smaller
NVMe drives like me.
Linus Torvalds released the first release candidate of Linux 6.0 this week, officially
making this current cycle the big 6.0. But if you want to call this release 5.20 or whatever,
Linus said you can, quote, go right ahead.
Fun games aside, it is kind of nice to have that settled. Or, well, at least as settled
as anything is in the world of Linux. But, you know, we've talked a lot about how many
features are getting packed into this release, and there are a ton. But one of the things
that seems to have missed the RC window is Rust. Torvalds lamented about that a bit in
the release notes, writing, quote, I actually was hoping that we'd get some of the first
Rust infrastructure and the multigen LRU VM, but neither of them happened this time around.
He did emphasize, though, that, quote, there's always more releases.
Indeed, I hope so at least. I kind of find it a riot, though, to just watch the metastory
develop around Linux 6.0 and also to watch Linus consistently try to tamp down expectations
and just call this not a big deal constantly. But the media outlets, they're all in. They've
been playing all kinds of games this week, and I think you could be forgiven for actually
thinking the final version of Linux 6.0 had actually shipped. The headlines going around
are just totally detached from reality now. Here's a couple of examples from just the
last few days. ZDNet's headline, quote, Linux 6.0 arrives with performance improvements
and more Rust coming. The register also had a doozy. Linux 6.0 debuts missing some rusty
bits, making it sound like it's a shipped product. I assume just to get the clicks.
Maybe it's been a slow new cycle over the summer. I don't know. But none of it really
matters, I would guess, at least not to Linus. He wrote himself, quote, the kernel version
numbers are really entirely made up and have no intrinsic meaning. I don't know. I mean,
there is something to like. The numbers sure seem to matter to some people. He can keep
hammering that point away. But alas, I'm not sure it's really going to change everyone's
minds. This release cycle also left the kernel just 50 patches away from real time support
finally being integrated. But there appear to still be some roadblocks that kept those
patches out of the tree, at least for the 6.0 RC1 release. Yeah, unfortunately that
was one of the other big headline features for this release. But I think the other way
to look at that is we're just about 50 patches or so from this actually landing. So hopefully
this real time work will manage to cross the finish line later this year with Linux 6.1.
August 16th was Debian's 29th anniversary. So we wanted to send them a big happy birthday
from all of us here at Jupiter Broadcasting. The project is helping local Debian groups
worldwide plan Debian Day celebrations. If you're interested, we'll have a link to the
local Debian groups page in the notes.
Great way to support the show, Linode is fast, reliable cloud hosting with the best support
over the last 19 years. Nobody has them matched in this area. And they're 30-50% cheaper than
the hyperscalers that want to lock you into their crazy platforms and try to upsell you
every single day on all their little services that they all have to have cute little esoteric
names for. And by cute I mean horrible. But on top of that, Linode has the best performance.
They've got 11 data centers around the world you can choose from. And of course their interface
is simple, straightforward and easy to understand with great documentation and an API that lets
you do everything. And then they have a bunch of great features on top of that. Object storage,
cloud firewall, simple elegant backups, Kubernetes and Terraform and Ansible support and so much
more. And if you're a performance hound, your application needs a lot of throughput, go
check out Linode's MVME storage and dedicated AMD EPYC CPU rigs. So go build something,
go learn something, try it for yourself and support the show. You just go to linode.com
slash LAN. That gets you the $100 so you can really try the service. You can get a genuine
idea of what it's like to use it, what the performance is, what the feature set is and
you can get that for 60 days. Go lock it in and kick the tires. Go to linode.com slash
LAN. One more time, support the show, linode.com slash LAN.
Linode.com slash LAN. Collide is endpoint security that uses the most powerful untapped
resource in your entire organization, the end users. You know, when you're trying to
achieve security goals, maybe it's an internal goal, maybe it's one for a third party auditor.
I had to do that for years. Maybe it's just something the boss wants done. The traditional
approach is treating every device like it's Fort Knox. With old school tools like MDMs
that force disruptive agents onto employees' devices, Rex Performance makes the machines
feel like they're five years older than they really are and it turns IT admins and users
into enemies. Plus, a lot of these tools create their own security problems. Let's be real,
Collide does things differently. Instead of forcing changes on users, Collide sends them
security recommendations via Slack. Collide will automatically notify your team when their
device is insecure and it'll give them step-by-step instructions on how to solve those problems.
By reaching out to employees via a friendly Slack DM and educating them about company
policies, Collide can help you build a culture in which everyone contributes to security
because everyone understands how and why to do it. And for IT admins, Collide provides
a single dashboard that lets you monitor the security of your entire fleet. Maybe they're
on a Mac, maybe they're on Windows, or maybe they're on Linux. Doesn't matter. You can
see it all with a glance. See which employees have used disk encryption, which ones have
kept their OS up to date, if they have a password manager installed, it really makes it easy
to prove compliance to the auditors, to your customers, to leadership, whoever it be. So
that's Collide. User-centered, cross-platform, endpoint security for teams, Slack. You can
meet your compliance goals by putting users first. Visit collide.com slash LAN to find
out and when you go there, they're going to hook you up with a goody bag that includes
a free t-shirt just for activating a free trial. How great is that? So go to K-O-L-I-D-E
dot com slash L-A-N. That's collide.com slash LAN.
John Deere has famously been at the center of the right to repair fight for years now,
locking their farmers out of their own equipment, forcing the use of company service options.
Well, a new jailbreak announced at DEFCON by SICK codes might just tip the balance of
power in favor of the equipment owners. Under pressure from the right to repair movement,
John Deere had already announced some plans to open up some of its software to owners
of the equipment, but many had emphasized that this was just too little, too late.
And now the next shoe has dropped and surprise, surprise everyone. John Deere's embedded
systems, they're running old versions of Linux and Windows CE. So to develop this jailbreak,
SICK codes got his hands on numerous generations of John Deere tractor control touchscreen
consoles. He ultimately decided to just focus on a few models and SICK codes then decided
to solder controllers directly onto the circuit boards and eventually was able to bypass system
protections, even protections that John Deere had tried to recently update. Once set up,
he used an attack on a reboot check to restore the device as if it was being accessed by
a certified dealer. He found that when the system was in this mode, it would offer more
than 1.5 gigabytes worth of logs. And of course, this log data revealed the path to another
potential timing attack that he could use to get even deeper into the system.
And boy did it. Not only did SICK codes find that all the firmware's code is running as
root because of course it is, but it also turned out that once you were able to get
your own software onto the equipment, it would just accept whatever code you put on there
and happily execute it. SICK codes emphasized saying, the main bug is that nothing's encrypted
or checks on properly or anything like that.
It's impressive how fragile this empire is. This empire of service repair and locking
farmers out wasn't really that well protected once you got physical access to it. Kyle Waynes,
the CEO of iFixit and also a right to repair advocate himself, he attended SICK codes presentation
and he recounted the experience on Twitter saying, SICK codes has jailbroken a John Deere
and this is just the beginning. Turns out our entire food system is built on outdated
unpatched Linux and Windows CE hardware with LTE modems.
Yikes. Also, we should note that there's no patching around this flaw, so we suspect
this is really just the beginning for people who want to repair their tractors and other
farm equipment themselves. Also, now that we know with certainty that GPL software is
used on their equipment, you've got to wonder if John Deere has been in compliance with
the terms of that license.
I suspect we may find out in time. And yes, dear listener, they've already got doom running
on these devices. You have to wonder what else they're going to get running on these
John Deere tractors. What other functionality could they bring to these tractors? Could
we one day see an updated Linux distribution for tractors? Who knows, but the possibilities
are pretty endless, just like so many other things in the world of Linux and open source.
So we'll keep an eye on all of it. Be sure you go to linuxactionnews.com slash subscribe
for all the ways to get new episodes so you don't miss a thing. And linuxactionnews.com
slash contact for ways to get in touch. And be sure to go check out our buddy Alex from
Self Hosted on episode 190 of Late Night Linux recorded during the recent London Meetup.
As for us, well, we'll be back next week with our take on the latest Linux and open
source news. Thanks for joining us. And that's all the news for this week.
