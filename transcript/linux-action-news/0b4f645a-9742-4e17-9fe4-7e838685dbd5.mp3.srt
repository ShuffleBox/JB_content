1
00:00:00,000 --> 00:00:08,480
Hello, and welcome to Linux Action News, episode 201, recorded on August 8th, 2021.

2
00:00:08,480 --> 00:00:09,480
I'm Chris.

3
00:00:09,480 --> 00:00:10,480
And I'm Wes.

4
00:00:10,480 --> 00:00:15,440
Hello, Wes, from a very warm downtown Salt Lake City, let's do the news.

5
00:00:15,440 --> 00:00:21,300
As we approach the 30th anniversary of our dear Linux, Google's security team is taking

6
00:00:21,300 --> 00:00:25,760
a look at what might still be missing from the project.

7
00:00:25,760 --> 00:00:30,600
Google security team member Kees Cook wrote a blog post calling for more organizations

8
00:00:30,600 --> 00:00:35,280
to devote a greater number of engineers to the upstream Linux kernel.

9
00:00:35,280 --> 00:00:39,640
Besides acknowledging the need for more upstream kernel developers, the post also encourages

10
00:00:39,640 --> 00:00:46,080
vendors that are building devices and products around Linux to use the latest stable or LTS

11
00:00:46,080 --> 00:00:47,080
kernel.

12
00:00:47,080 --> 00:00:53,060
Noting that stable kernel releases see close to 100 new fixes each week, but given that

13
00:00:53,060 --> 00:00:58,080
rate of change, unfortunately, vendors are not consistently picking up the latest fixes.

14
00:00:58,080 --> 00:01:03,440
And in some cases, they're just trying to cherry pick the quote unquote, important ones.

15
00:01:03,440 --> 00:01:07,560
Realistically, Google's Android ecosystem contributed to a lot of the devices out there

16
00:01:07,560 --> 00:01:12,160
shipping in this cherry picked fix state with weird kernels.

17
00:01:12,160 --> 00:01:15,680
And so in that regard is good to actually see Google putting effort into this and drawing

18
00:01:15,680 --> 00:01:17,520
attention to this problem.

19
00:01:17,520 --> 00:01:21,840
And it legitimately does seem to be an area of focus for Google recently, even despite

20
00:01:21,840 --> 00:01:24,560
their increased efforts around fuchsia.

21
00:01:24,560 --> 00:01:29,840
This call for more engineers is in addition to Google's recent backing of rust in the

22
00:01:29,840 --> 00:01:35,520
Linux kernel, which is also initiative limited by manpower and one that Google is doing something

23
00:01:35,520 --> 00:01:37,100
about.

24
00:01:37,100 --> 00:01:40,960
So this blog post calling for more than just kernel developers, it makes a lot of sense.

25
00:01:40,960 --> 00:01:46,320
It also calls for more code review, it calls for more testing, it calls for more infrastructure

26
00:01:46,320 --> 00:01:48,000
around the Linux kernel.

27
00:01:48,000 --> 00:01:51,680
And it also draws attention to the shortage of engineers who can work on security and

28
00:01:51,680 --> 00:01:55,280
compiler tool chain development, a very complicated area.

29
00:01:55,280 --> 00:01:58,960
And when I was reading this post, I couldn't help but take away an underlying message that

30
00:01:58,960 --> 00:02:03,720
cook clearly feels that this one bug at a time technique vendors currently follow just

31
00:02:03,720 --> 00:02:09,120
isn't going to scale and something automated at a grander scale is required.

32
00:02:09,120 --> 00:02:14,040
Google estimates that the Linux kernel needs at least another 100 engineers focused on

33
00:02:14,040 --> 00:02:17,440
security and on those important tool chains.

34
00:02:17,440 --> 00:02:22,680
Now cook does partly blame the C programming language for some of this, saying with Linux

35
00:02:22,680 --> 00:02:28,440
written in C, it will continue to have a long tail of associated problems and that's one

36
00:02:28,440 --> 00:02:32,800
reason rust keeps coming up in regards to the Linux kernel.

37
00:02:32,800 --> 00:02:37,740
Even beyond the kernel, cook thinks that things like the MITRE common vulnerability and exposures

38
00:02:37,740 --> 00:02:42,800
list or CVE list used to track and assess the importance of security issues and bugs

39
00:02:42,800 --> 00:02:47,720
doesn't really think that's up to the task since not all security flaws actually get CVE

40
00:02:47,720 --> 00:02:48,720
assigned.

41
00:02:48,720 --> 00:02:51,960
And when they do, it's not always in a timely manner.

42
00:02:51,960 --> 00:02:56,240
As far as cook and the team at Google seem to see it, the only solution is to continually

43
00:02:56,240 --> 00:02:59,600
update to the latest version of the stable released kernel.

44
00:02:59,600 --> 00:03:05,000
As cook put it in the blog post, quote, performing continuous kernel updates faces enormous resistance

45
00:03:05,000 --> 00:03:08,320
within an organization due to fear of regression.

46
00:03:08,320 --> 00:03:11,000
I love the point that he makes in this post.

47
00:03:11,000 --> 00:03:15,280
He believes that the problem with updating is not that the kernel might cause a regression,

48
00:03:15,280 --> 00:03:20,480
it's that vendors don't have sufficient test coverage and automation to know if something

49
00:03:20,480 --> 00:03:21,960
is going to break.

50
00:03:21,960 --> 00:03:27,040
And cook points out that testing just has to take priority over individual fixes.

51
00:03:27,040 --> 00:03:30,840
Another issue with the whole mess we're in right now is that many vendors are still using

52
00:03:30,840 --> 00:03:35,280
old kernels and then are forced to backport whatever quote unquote important fixes that

53
00:03:35,280 --> 00:03:36,820
they identify.

54
00:03:36,820 --> 00:03:40,060
And that just means there's a whole bunch of redundant work going on as multiple engineers

55
00:03:40,060 --> 00:03:44,640
at different companies fix essentially the same problem.

56
00:03:44,640 --> 00:03:48,040
And unfortunately, this is not an issue going away.

57
00:03:48,040 --> 00:03:53,680
Cook notes that Google's fuzzing tool called Syscaller is currently reporting nearly 1000

58
00:03:53,680 --> 00:03:56,480
possible issues in the kernel.

59
00:03:56,480 --> 00:04:01,360
About 400 or so of those are fixed every year, and that's good, but the number is growing

60
00:04:01,360 --> 00:04:05,280
by over 100 per year as new ones are found.

61
00:04:05,280 --> 00:04:09,200
Also in Linux security news this week, your favorite web browser had a significant security

62
00:04:09,200 --> 00:04:14,640
flaw found that results in your site login info being sent in clear text and it seems

63
00:04:14,640 --> 00:04:18,360
the symptoms discovered have remained unreported for quite some years.

64
00:04:18,360 --> 00:04:21,880
So update your package cache because this one's going to need a patch.

65
00:04:21,880 --> 00:04:26,920
The venerable and irreplaceable Lynx browser, well at least the version from the Debian

66
00:04:26,920 --> 00:04:33,480
Experimental and Debian 8 Archive, will transmit a username and password in clear text even

67
00:04:33,480 --> 00:04:36,240
when the site in question is already using SSL.

68
00:04:36,240 --> 00:04:41,560
Yeah, when a user has a URL where they've prepended the username and password to it,

69
00:04:41,560 --> 00:04:45,240
Lynx just happily sends that in the clear text and you can easily pick it up with a

70
00:04:45,240 --> 00:04:46,240
tool like Wireshark.

71
00:04:46,240 --> 00:04:51,600
I mean, we're having some fun here, but in actuality, this may be a serious issue impacting

72
00:04:51,600 --> 00:04:54,800
some server side workloads and of course Richard Stallman.

73
00:04:54,800 --> 00:05:00,180
I guess we'll just have to put that week with Lynx challenge on hold for now.

74
00:05:00,180 --> 00:05:05,200
In more serious security news, Intel might have a series of patches that could improve

75
00:05:05,200 --> 00:05:08,400
security in your virtual machines.

76
00:05:08,400 --> 00:05:14,120
As part of their work around Trust Domain Extensions or TDX support for Lynx, Intel

77
00:05:14,120 --> 00:05:19,160
engineers are proposing a driver filter option which would allow administrators to set up

78
00:05:19,160 --> 00:05:24,400
allow and deny lists of drivers that can or cannot be loaded by a booted kernel.

79
00:05:24,400 --> 00:05:30,640
The goal here is to reduce the attack surface within a guest virtual machine while still

80
00:05:30,640 --> 00:05:34,600
using the same kernel as the host machine.

81
00:05:34,600 --> 00:05:39,120
When booting the guest, via the kernel command line, the admin can just specify the specific

82
00:05:39,120 --> 00:05:42,480
drivers that are allowed to be loaded by that kernel.

83
00:05:42,480 --> 00:05:46,760
Or alternatively, a list of drivers that kernel shouldn't load, depending on how you want

84
00:05:46,760 --> 00:05:47,760
to configure things.

85
00:05:47,760 --> 00:05:52,520
Now, don't worry, by default, Intel's proposal won't change any of the regular behavior

86
00:05:52,520 --> 00:05:57,220
of the kernel, but it would add a new handy framework that should make it straightforward

87
00:05:57,220 --> 00:06:01,860
to specify what kernel drivers are permitted without having to actually remove any modules

88
00:06:01,860 --> 00:06:31,720
from the virtual machine or even rebuild a custom kernel just for that.

89
00:06:32,240 --> 00:06:38,120
This new release brings another level of maturity to the project with plenty of new features.

90
00:06:38,120 --> 00:06:43,680
But the biggest user-facing change in this release has got to be support for Bluetooth

91
00:06:43,680 --> 00:06:49,080
audio devices automatically switching between headset and audio profiles.

92
00:06:49,080 --> 00:06:50,560
Hallelujah Wes!

93
00:06:50,560 --> 00:06:54,240
If you've ever been disappointed with the audio quality of a Bluetooth headset when

94
00:06:54,240 --> 00:06:59,600
you have paired it to your Lynx machine, this is just going to make such a huge difference.

95
00:06:59,600 --> 00:07:01,920
It is so fantastic to see this change.

96
00:07:01,920 --> 00:07:05,960
I remember when I got my first pair of Bluetooth headphones and tried them with Lynx before

97
00:07:05,960 --> 00:07:11,160
trying them with any other system, and I was legitimately worried they might be broken.

98
00:07:11,160 --> 00:07:12,720
It just sounded so bad.

99
00:07:12,720 --> 00:07:13,720
Oh man.

100
00:07:13,720 --> 00:07:18,560
I mean, okay, yeah, I was eventually able to fix it, but I know my way around PAVU control,

101
00:07:18,560 --> 00:07:21,460
and I don't think many Linux users really do.

102
00:07:21,460 --> 00:07:25,920
But for those who do, there are also some exciting improvements to support pro audio

103
00:07:25,920 --> 00:07:30,880
workflows in this release, including support for multiple sample rates, as well as a whole

104
00:07:30,880 --> 00:07:35,160
batch of general and performance-specific improvements.

105
00:07:35,160 --> 00:07:39,720
Another story that we've pledged to follow is Samsung's in-kernel Samba server.

106
00:07:39,720 --> 00:07:43,800
Because as you already know, turning your kernel into a file server always listening

107
00:07:43,800 --> 00:07:47,880
for remote connections is awesome and could never go wrong.

108
00:07:47,880 --> 00:07:52,800
But today, like a dirty web browser, Samba is implemented in user space.

109
00:07:52,800 --> 00:07:58,120
But the wizards over at Samsung have been pursuing an SMB file server implemented in

110
00:07:58,120 --> 00:08:04,560
kernel space, with an aim for better performance and wiring up new features such as RDMA support

111
00:08:04,560 --> 00:08:07,780
that can be implemented with ease inside the kernel.

112
00:08:07,780 --> 00:08:12,420
Another motivating factor for Samsung is achieving a smaller footprint and a narrower scope of

113
00:08:12,420 --> 00:08:15,120
features when compared to Samba.

114
00:08:15,120 --> 00:08:16,120
How's it going?

115
00:08:16,120 --> 00:08:21,080
Well, the seventh round of patches were posted this past Thursday, with the hopes of getting

116
00:08:21,080 --> 00:08:25,960
KSMBD, as they're calling it, upstreamed into the mainline kernel soon.

117
00:08:25,960 --> 00:08:31,960
Now, clearly, this is not a full Samba server meant to replace a big enterprise Samba installation

118
00:08:31,960 --> 00:08:34,760
doing a lot of complicated tasks.

119
00:08:34,760 --> 00:08:39,600
But while I can hear Chris laughing right now, I wouldn't be too surprised if this

120
00:08:39,600 --> 00:08:55,160
ends up on one of his Raspberry Pi's before long.

121
00:08:55,160 --> 00:09:14,080
So, let's get to it.

122
00:09:14,080 --> 00:09:17,400
This year alone, they've released custom images to general availability, making it easier

123
00:09:17,400 --> 00:09:22,000
for customers to create, store, and deploy one image across multiple machines.

124
00:09:22,000 --> 00:09:26,960
They added two free security solutions, including the Cloud Firewall and Private VLANs, and

125
00:09:26,960 --> 00:09:31,560
for developers, they've extended the tools to support Kubernetes, Terraform, and Ansible

126
00:09:31,560 --> 00:09:37,480
modules, all while having one of the cleanest and easiest to use UIs in the business.

127
00:09:37,480 --> 00:09:42,400
Linode lets you turn any idea into something you can actually bring to life on the web.

128
00:09:42,400 --> 00:09:46,900
And if you ever get in any trouble, well, they have the best support team.

129
00:09:46,900 --> 00:09:53,120
Their support team won five Stevie Awards, including the coveted People's Choice Award.

130
00:09:53,120 --> 00:09:55,160
There's nobody that doesn't like Linode.

131
00:09:55,160 --> 00:09:58,340
They have hundreds of guides and tutorials to help you get started as well, then once

132
00:09:58,340 --> 00:10:02,560
you're up and running, you can take advantage of those advanced features like S3 compatible

133
00:10:02,560 --> 00:10:06,720
object storage, and their super fast SSDs.

134
00:10:06,720 --> 00:10:11,720
Linode was recently reviewed by Cloud Spectator as having the fastest CPUs in the industry.

135
00:10:11,720 --> 00:10:16,880
I mean, they compared all of the major cloud providers, and Linode beat them all.

136
00:10:16,880 --> 00:10:20,880
Their one-click Minecraft server lets you specify features like NPCs, game mode, and

137
00:10:20,880 --> 00:10:25,040
critical game specifications with a simple one-click deployment.

138
00:10:25,040 --> 00:10:29,960
So go to linode.com slash LAN and get that $100 60-day credit on your new account, and

139
00:10:29,960 --> 00:10:30,960
you support the show.

140
00:10:30,960 --> 00:10:32,880
It's a great way to learn, too.

141
00:10:32,880 --> 00:10:36,600
If you want to try something, you could do a nice side-by-side comparison, kick it off

142
00:10:36,600 --> 00:10:44,040
on Linode, and pick the winner, linode.com slash LAN.

143
00:10:44,040 --> 00:10:46,440
Linux dot ting dot com.

144
00:10:46,440 --> 00:10:48,520
Are you sick of overpaying for cell service?

145
00:10:48,520 --> 00:10:49,520
Because you should be.

146
00:10:49,520 --> 00:10:54,480
The duopoly out there has wrecked the market, so Ting's here to bring us all a breath of

147
00:10:54,480 --> 00:10:55,480
fresh air.

148
00:10:55,480 --> 00:11:00,160
In fact, for a limited time, you can sign up for Ting's unlimited plan.

149
00:11:00,160 --> 00:11:03,560
Just pay $25 a month for the first three months.

150
00:11:03,560 --> 00:11:07,760
That's $20 off the standard unlimited plan, and it's quite the offer.

151
00:11:07,760 --> 00:11:09,520
Of course, there's a plan for everybody.

152
00:11:09,520 --> 00:11:14,720
Ting's set 12 plan gives you 12 gigs of data with unlimited talk and text for just $35

153
00:11:14,720 --> 00:11:15,720
a month.

154
00:11:15,720 --> 00:11:19,760
So, I know a good family plan is hard to find, and Ting's got you covered there.

155
00:11:19,760 --> 00:11:23,980
If you use 2 gigs, or if you use 20 gigs, there's a perfect Ting plan for you.

156
00:11:23,980 --> 00:11:29,720
And every plan gets access to Ting's award-winning customer service with nationwide LTE and 5G

157
00:11:29,720 --> 00:11:30,720
coverage.

158
00:11:30,720 --> 00:11:34,880
Plus, the freedom of no contracts covered.

159
00:11:34,880 --> 00:11:35,880
That's awesome.

160
00:11:35,880 --> 00:11:39,080
And there's three great networks to choose from, so it's simple to switch to Ting.

161
00:11:39,080 --> 00:11:41,720
Pretty much any phone will work with Ting.

162
00:11:41,720 --> 00:11:44,260
You just start by going to linux.ting.com.

163
00:11:44,260 --> 00:11:47,840
You get $25 off, and you can check your current phone, see if it's compatible.

164
00:11:47,840 --> 00:11:51,360
Create an account, pick the plan that's right for you, and then Ting will send you a SIM

165
00:11:51,360 --> 00:11:54,520
card that you pop in your phone, and you get activated in minutes.

166
00:11:54,520 --> 00:11:57,240
Their dashboard makes it simple, makes it straightforward.

167
00:11:57,240 --> 00:11:58,460
It sets the bar.

168
00:11:58,460 --> 00:12:03,520
And cutting your phone bill in half has never been easier with Ting's brand new plans.

169
00:12:03,520 --> 00:12:05,960
Go check out the new Shiny and save $25.

170
00:12:05,960 --> 00:12:08,480
It's the next generation of Ting Mobile.

171
00:12:08,480 --> 00:12:10,680
It's here, and it's awesome.

172
00:12:10,680 --> 00:12:19,720
Linux.ting.com Gaming isn't really a focus of this show,

173
00:12:19,720 --> 00:12:23,040
and not something we really plan to expand into.

174
00:12:23,040 --> 00:12:30,160
But it is an area of major Linux development this week, and the wider implications might

175
00:12:30,160 --> 00:12:34,580
be some of the biggest news in the Linux desktop for years.

176
00:12:34,580 --> 00:12:39,120
As the general tech sector begins to react to the Steam Deck, we're seeing more and

177
00:12:39,120 --> 00:12:43,840
more positive coverage of the Linux OS powering that hardware.

178
00:12:43,840 --> 00:12:50,360
Recently, Linus Sebastian of Linus Tech Tips visited Bell's office in Bellevue, Washington.

179
00:12:50,360 --> 00:12:57,120
And during that visit, Sebastian was given unprecedented access to Deck prototype hardware.

180
00:12:57,120 --> 00:13:02,120
Out of all the tests performed, something we've all been very interested in stood out.

181
00:13:02,120 --> 00:13:09,160
Plugging in a monitor via USB-C and getting access to that sweet, sweet Plasma desktop.

182
00:13:09,160 --> 00:13:13,000
I would like to try USB-C DisplayPort in.

183
00:13:13,000 --> 00:13:14,000
Is it worth a shot?

184
00:13:14,000 --> 00:13:15,000
All right.

185
00:13:15,000 --> 00:13:16,760
Hey, it should be fine.

186
00:13:16,760 --> 00:13:18,640
That's famous last words right there, hey?

187
00:13:18,640 --> 00:13:24,320
If it doesn't work, if this even makes it into the video, we're not...

188
00:13:24,320 --> 00:13:25,460
Just like that!

189
00:13:25,460 --> 00:13:30,880
So if you weren't already convinced that this is a full-fat PC, just in a handheld form

190
00:13:30,880 --> 00:13:33,200
factor, well, this should pretty much do it.

191
00:13:33,200 --> 00:13:34,200
So can I just...

192
00:13:34,200 --> 00:13:36,680
I'm gonna switch to external screen, right?

193
00:13:36,680 --> 00:13:37,680
That sounds right?

194
00:13:37,680 --> 00:13:41,080
Because it's not a laptop, but the OS we're running thinks it's a laptop.

195
00:13:41,080 --> 00:13:46,560
And if you were curious if it's gonna run 4K 60 hertz, that's your answer right there.

196
00:13:46,560 --> 00:13:47,560
I think...

197
00:13:47,560 --> 00:13:48,560
Ooh, it might be at 30 right now.

198
00:13:48,560 --> 00:13:49,560
It's hard to tell.

199
00:13:49,560 --> 00:13:50,560
I'm so used to...

200
00:13:50,560 --> 00:13:53,880
No, it's at 60 hertz!

201
00:13:53,880 --> 00:13:55,180
Freaking awesome!

202
00:13:55,180 --> 00:13:56,180
Just like that!

203
00:13:56,180 --> 00:13:58,040
How relieved are you guys right now?

204
00:13:58,040 --> 00:14:02,040
While watching the video, I was also really interested in getting a sense of the gaming

205
00:14:02,040 --> 00:14:03,040
performance.

206
00:14:03,040 --> 00:14:09,400
I mean, after all, I will probably use this more as a portable PC than a gaming console,

207
00:14:09,400 --> 00:14:13,800
but how well the Steam Deck Games is gonna make or break this device.

208
00:14:13,800 --> 00:14:15,640
The game's running really smoothly though.

209
00:14:15,640 --> 00:14:21,240
I've been extremely pleased with the gaming experience and everything I've tried so far.

210
00:14:21,240 --> 00:14:26,520
But I think the big breakthrough here, the one we see rippling throughout the tech press,

211
00:14:26,520 --> 00:14:32,200
is really on display in a different video on the Linus Tech Tips channel, the WAN show

212
00:14:32,200 --> 00:14:33,520
from August 6th.

213
00:14:33,520 --> 00:14:37,440
This is kind of like, it's like that, but on ROIDs, right?

214
00:14:37,440 --> 00:14:42,360
The smallest form factor gaming PC, because it's more than just a handheld console.

215
00:14:42,360 --> 00:14:45,100
It is a full-fledged PC.

216
00:14:45,100 --> 00:14:51,720
The fact that it has a USB-C docking connector on it means that you can power this thing,

217
00:14:51,720 --> 00:14:58,880
it's two USB power delivery off of a device that can run a display, peripherals, high-speed

218
00:14:58,880 --> 00:14:59,880
networking.

219
00:14:59,880 --> 00:15:01,040
The sky is the freaking limit.

220
00:15:01,040 --> 00:15:05,280
It is running a desktop-grade Linux operating system.

221
00:15:05,280 --> 00:15:11,280
All Valve has done is they've put a bunch of development work into their Proton, it's

222
00:15:11,280 --> 00:15:17,960
not an emulator, it's more like a translation layer between DirectX and, well, whether it's

223
00:15:17,960 --> 00:15:21,440
Vulkan or OpenGL, I guess it doesn't really matter, to Proton.

224
00:15:21,440 --> 00:15:24,020
Because both of those are supported on Linux.

225
00:15:24,020 --> 00:15:28,360
So they've put this development work into this kind of, this translation layer, and

226
00:15:28,360 --> 00:15:33,960
then this, you know, basically what is Steam big picture skin that runs on top of the translation

227
00:15:33,960 --> 00:15:38,440
layer to play your games, but other than that, it's just Linux.

228
00:15:38,440 --> 00:15:41,080
It's just, it's running freaking Linux.

229
00:15:41,080 --> 00:15:44,480
You know, unlike what Nintendo allows you to do, you can say, hey, look, I actually

230
00:15:44,480 --> 00:15:48,240
don't want to play games right now, and you can do whatever the f*** you want.

231
00:15:48,240 --> 00:15:49,840
That is so cool.

232
00:15:49,840 --> 00:15:52,920
It's just a computer, man.

233
00:15:52,920 --> 00:15:58,560
It was a major bug fix week over at the KDE project with many fixes to their core apps

234
00:15:58,560 --> 00:16:00,200
and the touchscreen experience.

235
00:16:00,200 --> 00:16:03,780
The project really appears to be making a solid effort to get things ready for the Steam

236
00:16:03,780 --> 00:16:04,780
Deck.

237
00:16:04,780 --> 00:16:10,080
Yeah, our friend Nate Graham notes in his most recent This Week in KDE blog post, we're

238
00:16:10,080 --> 00:16:13,600
really trying to improve the stability of our software now that it's starting to be

239
00:16:13,600 --> 00:16:17,760
used in more third-party products like the Steam Deck.

240
00:16:17,760 --> 00:16:22,600
The idea is that this will hopefully become a virtuous cycle of better and more stable

241
00:16:22,600 --> 00:16:27,160
products leading to more use, leading to even better and more stable products.

242
00:16:27,160 --> 00:16:30,240
And Linux gaming isn't all about Valve and the Steam Deck either.

243
00:16:30,240 --> 00:16:37,920
Lutris 0.5.9 Beta 1 is out and it's a killer update to this open source Linux game manager.

244
00:16:37,920 --> 00:16:43,620
And I think the really big feature here amongst a ton of stuff in this release is support

245
00:16:43,620 --> 00:16:45,860
for the Epic Game Store.

246
00:16:45,860 --> 00:16:50,260
But really, even if you don't have any Epic games, there's so much good stuff in this

247
00:16:50,260 --> 00:16:55,400
release of Lutris, it's worth checking out if you haven't grabbed Lutris in a while.

248
00:16:55,400 --> 00:17:01,720
Speaking of improvements, the schedule for this year's XDC21 X.org Developers Conference

249
00:17:01,720 --> 00:17:03,240
was posted this week.

250
00:17:03,240 --> 00:17:07,920
The conference is, once again, a virtual event, given the state of the pandemic.

251
00:17:07,920 --> 00:17:10,800
But thankfully, it's still going forward.

252
00:17:10,800 --> 00:17:16,000
Michael Arable over at Ferronix points out that Intel are again organizing much of the

253
00:17:16,000 --> 00:17:20,080
event, as well as Intel being the sole Platinum sponsor this time.

254
00:17:20,080 --> 00:17:22,840
Yeah, it's a bit of a shame to hear that.

255
00:17:22,840 --> 00:17:29,420
I wish this conference got more support because the list of topics alone is very impressive.

256
00:17:29,420 --> 00:17:33,640
And some of them, like several of them, I'd argue, are discussing hard problems that are

257
00:17:33,640 --> 00:17:36,720
critical to Linux's desktop success in the future.

258
00:17:36,720 --> 00:17:37,720
No kidding.

259
00:17:37,720 --> 00:17:40,440
We need some of these issues tackled.

260
00:17:40,440 --> 00:17:44,760
The event itself runs from the 15th to the 17th of September.

261
00:17:44,760 --> 00:17:48,240
Here's just a taste of some of those important topics.

262
00:17:48,240 --> 00:17:53,360
The current state of reverse engineering the GPU found in Apple's M1.

263
00:17:53,360 --> 00:17:55,960
Updates on the Raspberry Pi Vulkan driver.

264
00:17:55,960 --> 00:18:01,120
And perhaps directly to your point, Chris, David Edmondson with KDE will be talking about

265
00:18:01,120 --> 00:18:06,840
ongoing work and an early proof of concept for increasing Wayland robustness so if that

266
00:18:06,840 --> 00:18:11,640
compositor crashes, doesn't have to bring down your entire desktop session.

267
00:18:11,640 --> 00:18:14,160
Yes, please.

268
00:18:14,160 --> 00:18:16,600
And just like so many talks in there just look really good.

269
00:18:16,600 --> 00:18:19,520
Like they're clearly tackling these problems.

270
00:18:19,520 --> 00:18:23,880
They're thinking about things that I wondered if anybody was going to address and they are

271
00:18:23,880 --> 00:18:27,520
bringing up issues that, of course, I had never had any idea about.

272
00:18:27,520 --> 00:18:31,720
So again, it's the 15th to the 17th and we'll have a link for more information in the show

273
00:18:31,720 --> 00:18:32,720
notes on that.

274
00:18:32,720 --> 00:18:36,440
Seems like there could be a lot of good info, so we will try to keep an eye on it as well.

275
00:18:36,440 --> 00:18:39,980
Even if something develops out of there, of course, cover it for you.

276
00:18:39,980 --> 00:18:44,280
But before we go, I just wanted to say thank you to everyone who made it out to our Salt

277
00:18:44,280 --> 00:18:45,280
Lake City meetup.

278
00:18:45,280 --> 00:18:46,280
It was a blast.

279
00:18:46,280 --> 00:18:49,000
It's been a long time since we've been able to do something like this.

280
00:18:49,000 --> 00:18:51,960
And we had folks there that were just learning Linux for the first time.

281
00:18:51,960 --> 00:18:55,280
Like they came to the meetup because they wanted to understand more about Linux and

282
00:18:55,280 --> 00:18:57,040
they've heard there was this community.

283
00:18:57,040 --> 00:19:01,340
And so they came to our meetup and she had a great time and she walked away not only

284
00:19:01,340 --> 00:19:03,320
a listener but now a new Linux user.

285
00:19:03,320 --> 00:19:05,760
But of course, we also had security analysts there.

286
00:19:05,760 --> 00:19:06,760
We had developers.

287
00:19:06,760 --> 00:19:07,760
We had engineers.

288
00:19:07,760 --> 00:19:11,720
We had folks that made it from Wyoming, Montana, Idaho, all the Salt Lake City.

289
00:19:11,720 --> 00:19:13,440
And of course, we had locals.

290
00:19:13,440 --> 00:19:14,440
And Brent was there with me.

291
00:19:14,440 --> 00:19:20,280
He was the swag master handing out stickers and shirts, which were well received.

292
00:19:20,280 --> 00:19:23,680
There's some pictures of that on my Twitter feed at Chris Lass, if you want to see some

293
00:19:23,680 --> 00:19:24,680
of those.

294
00:19:24,680 --> 00:19:30,400
Or join our telegram group for frequent trip updates, jupitabroadcasting.com slash telegram.

295
00:19:30,400 --> 00:19:33,200
Yeah, how else are you going to get your Levi fix?

296
00:19:33,200 --> 00:19:37,000
We do have a few more shows from Salt Lake City, Coder Radio and Linux Unplugged.

297
00:19:37,000 --> 00:19:39,600
They will be live if everything goes as planned.

298
00:19:39,600 --> 00:19:43,580
So you can get the times for that at jupitabroadcasting.com slash calendar.

299
00:19:43,580 --> 00:19:48,360
But by the time we are recording the next Linux action news, we'll be just outside the

300
00:19:48,360 --> 00:19:49,600
Denver area.

301
00:19:49,600 --> 00:19:55,320
You can keep tabs on our journey over at colonytracker.live and hit that micro meetup link if you're going

302
00:19:55,320 --> 00:19:56,760
to be in our route.

303
00:19:56,760 --> 00:20:00,200
Maybe if the timing works out, we can catch up and grab a bite or say hi and get some

304
00:20:00,200 --> 00:20:01,200
swag.

305
00:20:01,200 --> 00:20:02,200
We have swag on board.

306
00:20:02,200 --> 00:20:05,920
Or if you have any hot route tips, if you see where we're going and think we should

307
00:20:05,920 --> 00:20:09,600
know about some construction or some problem along the way, that micro meetup form could

308
00:20:09,600 --> 00:20:12,000
technically work for that as well.

309
00:20:12,000 --> 00:20:16,280
But for this here podcast, you're going to want to go to linuxactionnews.com slash subscribe.

310
00:20:16,280 --> 00:20:19,440
So that way you get every new episode as we release it.

311
00:20:19,440 --> 00:20:23,900
And linuxactionnews.com slash contact for ways to keep in touch.

312
00:20:23,900 --> 00:20:27,800
If you enjoy Linux action news and you think you know someone who might also enjoy the

313
00:20:27,800 --> 00:20:31,520
show, maybe they're in the biz and they need to stay up to date on what's going on, send

314
00:20:31,520 --> 00:20:34,280
them a link to your favorite episode and help spread the word.

315
00:20:34,280 --> 00:20:40,640
We'll be back next Monday with our weekly take on the latest Linux and open source news.

316
00:20:40,640 --> 00:20:41,640
Thanks for joining us.

317
00:20:41,640 --> 00:21:02,080
And that's all the news for this week.

