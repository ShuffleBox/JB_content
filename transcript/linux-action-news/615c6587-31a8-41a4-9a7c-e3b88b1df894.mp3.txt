Hello, and welcome to Linux Action News, episode 164, recorded on November 22nd, 2020.
I'm Chris.
And I'm Wes.
Hello, Wes.
And we should say happy birthday to the GIMP project, which turned 25 years old this weekend.
Never looking better, GIMP.
All right, Wes, let's do the news and let's start with YouTube DL back up on GitHub.
And aren't we glad?
Now, if you don't remember, GitHub received a controversial DMCA takedown request from
the Recording Industry Association of America, better known as the RIAA, way back on October
23rd.
Yes, I do recall.
We were rather upset about it, if I recall.
Indeed, we were.
The DMCA takedown letter back then from the RIAA argued that YouTube DL was being used
to circumvent the technological protection of streaming services such as YouTube.
And then they went on to argue also that it could reproduce and distribute music videos
and sound recordings without authorization.
That was like the big, oh my gosh, what?
But really, maybe not so much.
Well, yeah, let's be a little more specific.
The RIAA used section 1201 of the Digital Millennium Copyright Act or the DMCA to claim
that YouTube DL was breaking copyright by providing a tool to circumvent copyrighted
material.
Even if YouTube DL itself didn't contain any copyright infringing code directly.
Yeah.
Yeah.
Yeah.
Well, here's what happened.
Just a little bit after last week's show, GitHub said that YouTube DL did not actually
break that section 1201 of the DMCA.
And it cited a letter that it received, GitHub had received from the EFF.
And they did a fantastic job of doing a great defense for YouTube DL.
And I think they played a big role in helping explain to both GitHub and maybe future interested
parties in the technical aspects of this case.
And I think maybe save the day a little bit.
You really have to give it to the EFF.
The lawyers argued that YouTube DL could never be taken down because of section 1201 at all.
Because YouTube DL itself doesn't actually circumvent any kind of copyright protection
system in the first place.
Yeah, I like this quote from their letter.
As the federal court recently ruled, one does not circumvent access control by using a publicly
available password.
And that's really what it came down to, the code in YouTube DL that was, quote unquote,
circumventing the copyright protections.
Well, really, it was all just relying on public information that you get when you visit YouTube.com.
Computers are hard, Wes, and it's hard for the RIAA to understand it.
It always has been.
We also talked a little bit in our coverage about GitHub's response to this, and if they
could have done things a little differently, and it does seem like they're going to make
some changes.
Yeah, I think they noticed that maybe they weren't quite prepared for this particular
case.
And they've now decided to establish a $1 million developer defense fund that the company
plans to use to protect developers against unwarranted DMCA section 1201 takedown claims.
So this is pretty specific, I think.
Yeah, it's sort of like, it's sort of like plugging a leak instead of fixing it, though.
Really what would be amazing is if instead of a million dollars, if Microsoft could invest
10 million dollars in just getting the DMCA fixed.
But this is a great first step.
It sort of felt that when GitHub received this notice, you know, they felt like they
didn't have a lot of options.
They just took it down to play it safe, figuring, all right, I guess this gets sorted out in
court.
But now they're going to hire technical and legal experts along with some independent
specialists who will from now on review all DMCA section 1201 takedown claims going forward
to ensure they're compliant with the DMCA and to protect open source developers from
needless litigation.
So presumably, and we can't say until this happens, but presumably this this board would
have just found that no, YouTube DL is not infringing or not doing anything.
This is a complicated issue, these DMCA takedowns, because as you and I found in our own research
for the show, there are established, well known open source projects that actually use
DMCA takedown to maybe stop somebody who's taken a fork of the project and closed it
up and is charging weird money for it or is embedding spyware or maybe brand stealing.
There are legitimate uses for projects.
And so GitHub didn't want to just completely throw out the whole system, but they wanted
to at least try to give the developers a fighting chance, it seems like, from this.
In most cases, they're not going to pull it off the web unless it's absolutely necessary,
like they're going to try their best to just maybe remove an infringing component or contact
the developer directly and get them in some sort of dialogue first.
Those are all really positive improvements.
But it just seems like this maybe just isn't the right tool for this function for what
people are looking at.
The DMCA is just not the right tool for this particular function.
I think we've seen that there's a lot of problems with it over the years, unfortunately, little
to no action to fix it.
Very nice, though, to see YouTube DL back up and online.
And so far from what we can tell, they didn't have to remove any cypher algorithms or anything
that was all that core to the project.
They just had to get rid of those example videos that were copyrighted music.
Right.
They had some of those test cases set up to download copyrighted music.
Those are gone.
And with that, they're back online.
There have been rumors of a six billion dollar Seuss IPO this week.
It all got kicked up by Bloomberg, who's reporting that EQT is planning an IPO for Sousa.
If you don't recall, EQT is a Swedish based private equity firm.
You might not recall because over the years, Sousa has had more than a few owners.
First it was acquired by Novell in 2004, then AttachMate with some Microsoft funding bought
Novell and Sousa in 2010.
This was followed in short order in 2014 when Micro Focus purchased AttachMate and Sousa
was spun off as an independent division.
Then EQT finally got involved and purchased Sousa from Micro Focus for 2.5 billion in
March of 2019.
2.5 billion, which means that if this IPO turns out to be legitimate and if it does
turn out to be approximately six billion dollars, EQT, well, they're doing pretty well for
themselves.
And it seems like it's possible.
They've been pretty successful under EQT and Q3 revenue reported in September 2020 increased
14% year over year.
It seems they've also had a pretty big jump in whale clients, you know, clients that are
worth more than a million dollars, 35% increase there and a 50% jump in bookings year over
year.
So they potentially are doing really well.
And if the feedback is any indication I get on Koda radio, there's more people using Sousa
than ever, because my inbox is crying from all of the lizards telling me how great it
is.
But Bloomberg has been saying that this IPO is just in the very, very, very early stages
and nothing really may even come of this.
But Sousa was kind of coy when asked about it.
Of course.
Folks said, we don't comment on these kinds of things, but it'd be pretty great to see
it.
I mean, Sousa has done really well for themselves recently.
They also didn't they just acquire Rancher Labs?
Indeed they did.
Yeah.
I mean, they're stepping up their game.
They do really well in the European Union, maybe not as well as in the States.
So we don't talk about it.
We hear about it a little less over here.
But you know, I like that there's another big enterprise competitor in the Linux space
out there.
And maybe an IPO could be a new steady state for Sousa.
I guess we'll see.
Well, speaking of revenue, Ubuntu maker Canonical Holdings Limited recently submitted their
UK financial report.
Now this is for last year.
This is for December 31st, 2019, the pre-COVID era times, and they generated around 22% more
revenue than 2018.
But the maybe important note here is they seem to have still operated at a loss, albeit
more narrowly than in prior years.
Yeah.
The documents show their 2019 revenue at 119 million US dollars, up from 97 million the
prior year.
That means their operating loss came in at just $2 million, which, hey, that's a lot
better than the 11 million for 2018, and similar losses in recent years.
Yeah.
Now remember, these numbers are a little out of date, as we're almost in December of 2020.
But at the time of this information submitted, Canonical's average headcount for 2018 was
473, which is up prior from the 437 the year before.
And they added close to 40 more employees.
But that's still down from their 500 plus headcount before the restructuring that happened
a few years ago.
The report does note some concerns over the COVID-19 pandemic, but that's primarily from
impacts to their clients, not directly to Canonical themselves, since by and large,
they've got a global distributed workforce that's already working from home.
Long story short, they anticipate weathering the current COVID-19 climate just fine.
Not only are they entrenched members of the Linux community, but they're also just Linux
users themselves.
And that's why Canonical is so important to Canonical, because it's the only way to get
to the root of the entire machine.
But sometimes you want it easy, and I did that recently.
I did it.
I've been debating for months, maybe even a year, about trying out this Azurecast, which
is this big one-stack open source radio station for the web that lets you manage DJ accounts
and set up automated streaming schedules.
It's like everything you need for a radio station in one open source package.
And I've debated setting it up, like I said, for a long, long time.
But I finally did it this weekend because I was on Linode and I saw in their app marketplace,
they have a one-click deployment and it deploys things like Liquid Soap, IceCast, ShoutCast,
NGINX, PHP, InfluxDB, Redis, all stuff that I would have had to set up.
And it does it in a single click.
It took like 10 seconds.
And one of the things that's really cool about Linode is because they get you guys is whenever
they can, they try to give you options on the underlying distro.
So like for this particular one-click deployment, I have the option of deploying it on Debian
or Ubuntu 2004, which to match some of our other cloud instances, I chose Ubuntu 2004,
which is fantastic.
And now I've got a Ubuntu 2004, dedicated CPU, four CPU cores, eight gigs of RAM in
Dallas, Texas that's set up and ready to be an online radio station that our community
could use.
And we could have community DJs and the lup lug could tie into all of it.
I mean, there's so much potential, something I was thinking about doing for so long.
And with that one click, I finally pulled the trigger and I did it.
And now the potential is kind of limitless.
And that's just scratching the surface of what Linode is capable of, just scratching
the surface.
And they cost 30 to 50% less than major cloud providers like AWS or Google or your Azure.
So you get a real nice balance of super nice modern technology features, a great dashboard
to manage it all, a good citizen in the Linux community, price to performance ratio, uptime,
support is fantastic.
Like it's all there and you can just get a little taste of it at linode.com slash LAN.
Get a $100 60 day credit towards your new account.
That's linode.com slash LAN.
With the introduction of Apple's new M1 chip, Docker's facing a few technical hurdles to
get Docker desktop running nicely on these new Macs.
Not only is there a brand new architecture, but there's also a new hypervisor framework.
Yeah, and I think probably a lot of us are familiar with this Rosetta technology that
Apple has released.
Rosetta 2 allows ARM Macs to run x86 code.
But that doesn't get you all the way to getting Docker and Docker desktop up and running on
the Mac.
Under the hood of Docker desktop, there's an actual virtual machine on the Mac side.
They do that.
I mean, you got to run Linux somehow, right?
I mean, I guess they do that because yeah, there's no other way to run it on Mac OS and
there's no other way to do on Apple hardware.
But now with the M1 chip and Big Sur, there's this new hypervisor framework.
They apparently will have to re-plumb Docker desktop to this new hypervisor framework,
which does feature M1 acceleration, but means new code.
Right, so you might actually have the Docker side in the user land of Mac OS running, but
then you've got to connect that all up and integrate the changes from the changes to
the hypervisor.
Yeah, there's also a little issue of their CI pipeline doesn't have any ARM Macs in
it yet.
Oh, right.
I mean, how do you test it if you're not running on M1s?
They know it in here that they have 25 Mac minis that they use for automated testing
of Docker desktop.
Isn't that funny?
Yeah, although it doesn't sound like they got any of the ARM developer machines.
They say now that Apple's made the announcement, we can get some hardware in, which is an interesting
aside.
So you have the hypervisor framework.
Of course, you have the CI pipeline that needs to have some ARM Macs in it to do testing.
But there's also that wiggling issue of all of the underpinning open source projects that
Docker relies on, like Go.
Yeah, things like Go for the back end of Docker desktop.
That's what it's written in.
And Electron for the Docker dashboard, where you can go and view all the Docker desktop
content.
Now, these projects are hard at work getting that sorted out, but that has to happen.
Get tested and then actually integrated into Docker desktop before you'll see it running
anytime soon on your M1 laptop.
Meanwhile, I'm over here running containers like it's just no big thing.
I'm running on my Linux box.
Purism has finally began shipping its mass produced model of the Librem 5.
Much like with their Librem laptops, the Librem 5 features external hardware kill switches
for both the cellular modem and Wi-Fi and Bluetooth connections.
Right.
And this is what they call their production model.
So this is the one that shouldn't have rattly parts.
This is the one that should be going to a majority of the backers.
The Kickstarter, I think, was 2017.
So this has been a little while in the making.
And what we've kind of seen during this time is Pine 64 came along and lapped them.
But notably, Purism ended up developing sort of an ecosystem of mobile technology, which
may end up being their most significant contribution here.
They invested heavily into bringing Posh, which is a form factor, you know, desktop
UI, Lib Handy, Squawk, Squawk bar, or the squeak board, I think it was called.
I can't remember exactly.
But they brought a couple of particularly nice applications in this adaptive UI for
GTK and some of their desktop technologies over the mobile space that projects like Pine
Phone and others can take advantage of.
Right.
Sort of been a development board, if you will, for some of these technologies, even if most
folks haven't actually got a Librem 5 just yet.
I mean, I'm a little underwhelmed and disappointed just in the whole thing.
So after all of this time, after all of this years of hard work, we got this sort of unceremonious
blog post, kind of a quick and tidy blog post, like we've reached this milestone that we've
been promising for all these years.
And you don't really see like you haven't seen like YouTube seeded with some development
units or you don't see a ton of people posting their pictures of receiving them.
You do see some, though.
So it does seem to be getting out in people's hands this time.
That's nice.
I mean, if we remember, we were all kind of surprised and disappointed when it turned
out.
No, they still needed more processing that they hadn't launched with the mass produced
model.
But they're not taking the victory lap, I would expect.
I wonder if the victory wasn't as sweet as they were expecting, because Todd, Todd Weaver,
the founder and CEO of Purism, he just has kind of like a PS little addendum, a single
paragraph little addendum to the blog post announcing the launch.
And they tout features that, well, frankly, PinePhone has now, like convergence and kill
switches, which when they announced the Librem 5 were kind of a cutting edge idea, but have
already been implemented by somebody else now.
And now we also see Dell is looking at implementing kill switches in Dell laptops, too.
So again, kind of taking some of their unique value there.
I wonder what it's like now after all these years of the Kickstarter and here we are with
the production model.
I wonder, is the Purism team celebrating this victory?
Because it's notable.
They finally got this thing shipping.
Yeah, maybe it has a, you know, kind of a big, chunky form factor.
And yeah, maybe it has an IOT CPU that's kind of a killer on the battery life.
But they have achieved actually creating something that seemed nearly impossible.
And that is a free Linux running phone that, I mean, it's getting close to a usable standpoint.
When I saw some of the videos that they released that to my eye didn't seem to be edited, seem
to actually be performing quite well, like the UI may have even had some sort of video
acceleration.
Yeah.
And they've clearly put in a lot of work over the years.
It's a non-trivial project.
It seems like it's gotten to a pretty good state.
And yet, as a company, they're not really projecting much of a win here.
And I say that's too bad.
I say tip of the hat to them.
It's impressive.
It took a lot longer than we'd like to see.
You know, they raised $2.2 million.
People were really, really hopeful from the sort of build from scratch, following an open
source free software ethos.
It doesn't run Android, doesn't run iOS.
It's running their PureOS and you could probably conceivably flash it with other things.
I think I'll be curious to see, do we get a new version?
You know, they've spent a lot of time figuring out some of the manufacturing sides, getting
the base software layer working.
But is what has happened with the lead from five, does that put them in a place where
folks want to see what they can do on a second model?
You got to figure, as a team, as they're building this thing, it's the entire times.
It's learning new things, the entire process, right?
It's a learning experience.
And so when you get to the end of it, you know how to build a phone now and you've got
to look at that and go, well, we could build something so much better now.
They have to, as a team, be thinking, what's the Librem 6 look like or something like that.
And that could be where it gets really interesting because now you've got an experienced team.
You have yet another iteration of the software that lands on a new iteration of the hardware.
Right.
They can catch up a little.
The pipeline is not going to be quite as long.
I mean, so the final product will be a little closer to what you might expect.
If I had an ideal scenario, it would be that Purism takes this victory, as it seems to
be, and is able to kind of own the higher end of the free phone market.
Imagine if we had a scenario where there was a kind of Cadillac free phone that had all
the latest cutting edge features.
Maybe a decent camera.
Yeah.
And then you have like the Pine phone that, I mean, they could differentiate there and
have multiple products too, but you had a Pine phone that was $200 or less, a real development
hacker kit that you could throw any OS on, and it really was a hardware platform to showcase
free software.
And Purism could really kind of focus on that high end phone with an integrated software
stack approach that we see from other companies.
Right.
You want a premium phone, but you want one that's privacy focused.
I'd love to see that.
I think, how amazing would it be, say, four or five years down the road, you're looking
at this and you're going, hmm, what should I get?
A Librem 7 or a Librem 8 or the Pine 64 version 6 or whatever it would be at that point.
Which one should I get?
They're both really a great option.
Wouldn't that be nice?
Because we're getting to that point with Linux laptops now.
We are.
I mean, it's surprising to say a little bit, but we really are.
So maybe it's possible.
Congratulations to Todd and his team on shipping the production hardware.
I also even saw reports of super responsive support from Purism.
Somebody had an issue where they couldn't get their newly received production quote
unquote model Librem 5, it wouldn't charge.
There was an issue like something about using like USB C to C or something.
I guess Purism support got right back to them right away and told them just use a C to A
cable and it'll charge no problem.
Interesting.
Problem solved.
His new phone's charging.
He's up and playing with it.
Well, those are the kind of steps they'll need to get right if there's a bright future
ahead.
Linux.ting.com.
The next generation of Ting Mobile is here and I have been waiting to tell you guys about
this.
I'm a longtime fan of Ting and they just made things so much better.
You can get talk and text for just $10 a month, data plans starting at just $15 and unlimited
starting at $45.
So whether you use two or 20 gigabytes a month, there's a perfecting plan for you and your
family and no need to worry.
Everything we love about Ting is staying the same.
You still get access to Ting's award winning customer service.
I rave about them all the time.
You still get access to nationwide LTE and 5G coverage, plus the number one thing we
all love, no contracts ever.
You just get more choice now.
Ting Mobile customers can now choose from three different plans based on their data
needs and you know, it's really simple to switch to Ting.
Pretty much any phone will work from the latest iPhone to any Android phone you can pretty
much think of this modern and even a few surprises too.
You could check out phones they have directly, but just start by going to linux.ting.com.
Check your current phone, see if that'll work, create an account, pick the plan that's right
for you and then Ting will send you a SIM card.
You pop that in your phone and you activate it in minutes.
Cutting your phone bill in half has never been easier with Ting Mobile's brand new plans.
There's never been a better time to try Ting.
So bring your phone or get a brand new and just start by going to linux.ting.com.
Choose smarter, choose Ting Mobile.
They really did this right.
Everything you love and expect from Ting Mobile remains the same while you can also get all
this great new stuff.
No contracts, top notch account tools, great dashboard, great customer service.
You can even bring your own phone if it's working for you and now plans that will fit
your needs.
The next generation of Ting means there's literally never been a better time to try
Ting Mobile.
Just go to linux.ting.com and a big thank you and a big congratulations to Ting for
their big upgrades.
These are really great to see and it's great to give you guys the opportunity to try it.
Linux.ting.com.
Since the layoffs at Mozilla earlier this year and with some Mozilla projects seemingly
in jeopardy, it's nice to see some good news about Servo, which this week announced it's
heading off to the Linux Foundation.
Right.
This is really nice to see.
We were kind of wondering because Servo holds a special place in a lot of our hearts.
Its mission is to provide an independent modular, embeddable web engine that's written in Rust.
And the great thing about it is since its creation in 2012, it's pretty successfully
contributed to new web standards and specifications and it's kind of made a dent in the web universe
in a short time.
And we really didn't want to see that go away.
Yeah, it's been an important aspect where, you know, the folks at Mozilla at least previously
could experiment in what the future of browsers might look like.
Yeah.
Now this move does come with other changes in particular in project governance.
The Servo project will be gaining a board and a technical steering committee to help
guide the project's future.
I'm not so sure how I'm feeling about this.
You don't think that's what they needed?
Well, I think Servo was an engineer-led, technology-first group that was building some really impressive
stuff that was leading by example.
And I don't generally see that kind of outcome from something that's designed by committee.
And that's essentially what we're transitioning to is something that was engineer-led to something
that will now be committee-led.
Do you wonder is this just how the Linux Foundation runs their project and that's why these changes
are happening or if there was some interest from the project as well?
Or is this in a response to a hole that was being filled by Mozilla in some capacity and
now they're just formalizing it as a governance structure?
Because you think about if they were part of a company, there's a governance structure
as part of that company that manages certain stuff.
Right, right.
Either way, I'm not thrilled with this news.
I was kind of hoping for a future where maybe like the go-to embedded web browser on the
GNOME desktop would be Servo-powered.
Wouldn't that be nice?
I mean, besides just being in Rust.
Yeah, and I also really like seeing something else that's new and innovative that could
be competitive potentially with WebKit in certain use cases in certain applications.
And it doesn't necessarily take any of that away from Servo, but I do kind of worry about
stagnation.
But we'll see.
I'm also curious, you know, what will the adoption look like?
Will that be improved now that they've split from Mozilla or will it just make things more
difficult?
You know, previously the Firefox and Servo teams were kind of connected right at the
hip.
Now there's a little more separation.
Will they still be pulling in good ideas from Servo into the next generation of Firefox?
You do wonder, right?
Because you don't want to see Firefox's cutting-edge features take a hit as a result.
No, you know, I mean, say what you will about Firefox.
It oftentimes is a great web browser and part of that has been some of the neat ideas that
were developed in Servo.
Flipside, though, you just said it a moment ago, and I wonder if there isn't something
to it.
And that is by being part of the Linux Foundation and not part of Mozilla, they've essentially
become vendor neutral.
And that could be a driver for adoption.
Sure, right.
If there's some other folks out there who adopt Servo, who help build it and use it,
well, they could take the project in a whole new direction.
Well, the Epiphany maintainer on GNOME is reminding us this week why having an independent
voice in the standards discussion is so important and just having some additional leverage on
the web.
January 4th, 2021, something major is happening.
Google is blocking all sign-ins to Google accounts from embedded browser frameworks,
things like Electron and potentially WebKit and WebKit adjacent browsers, which is why
the Epiphany maintainer is bringing this up.
Yeah, his summary goes something like this.
Google will attempt to block logins from Chrome embedded framework based apps and other non-Chrome
non-supported browsers.
Presumably non-supported browsers includes non-Safari WebKit.
Considering how much time I spend trying to develop user agent quirks to suppress Google's
unsupported browser warnings on Gmail, Google Docs, etc., I guess we will find out on January
4th.
I can think of a lot of users that would be upset if all of a sudden they couldn't use
their web browser to log into Google accounts.
Google is trying to convince everyone, that's why they made a blog post about this in August.
They're trying to convince everyone to use OAuth and they're also going to put the screws
locked down on Electron users.
That's where the Chromium embedded framework, if you're using an Electron app that may be
like a mail app that uses Google Mail and signs into it inside embedded in the application,
that's not going to work.
They're going to have to do that thing where they forward you to Google and it pops up
a little window, you log in and you say, allow all of the access.
The issue is, on Gnome Shell and on Plasma Desktop, that itself is an embedded browser
which Google may block.
So that's really sticky.
Yeah, I mean, Google's side of the story is that they're concerned about phishing attempts.
When you've got an embedded browser window, well, it's got access to all your details
if you're doing the sign-in process through Google.
I can see why that might be a concern, but it's a little bit of a catch-22 that you first
have to change your user agent to get any of their sites to work in a reliable fashion,
but then here they are saying, if you change your user agent and lie to us, we'll block
you.
Yeah, that's also grounds for getting blocked.
And that's really a shame because, going back to Epiphany again, the developer there has
just stopped declaring its Epiphany in its user agent string for compatibility reasons.
That's just it.
Now, I think if they were willing to keep that in there, from Google's perspective,
they're not trying to block major supported browsers.
In fact, they call it out that they will continue to support things like Firefox, but I think
they're missing the point that for many of their applications, that's a substandard experience
already.
Michael summarizes this email that he's sent to the WebKit developer list, trying to just
remind everybody about this impending doom.
He says, what should WebKit do about this?
He goes on to say, I don't know.
Nothing has happened yet, so I guess we could wait and see what happens on January 4th.
Maybe this won't affect us at all.
But my fear is that January 4th will arrive, we will be blocked, and then more user agent
quirks and fixes will not work.
And even if WebKit is not blocked, we can be confident that on January 4th, we will
see a sad day for browser diversity.
That's just it.
This is a terrible reminder, regardless of what happens, that Google controls a whole
bunch of the internet and the way you get to the internet.
It's not how it's supposed to work, man.
It's not how the web works.
Not my web.
No way.
So we'll see what happens, January 4th is the deadline.
And like I like to say on this program, we'll keep an eye on it.
And that's why you should head over to LinuxActionNews.com slash subscribe for all the ways to get those
future episodes.
And while you're there, go over to the contact page, there's a link at the top of the site
and send us your feedback on the show.
Also, check out self-hosted.show slash 32.
We tried out a self-hosted Google Photos replacement that actually works.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us and we will see you next week.
