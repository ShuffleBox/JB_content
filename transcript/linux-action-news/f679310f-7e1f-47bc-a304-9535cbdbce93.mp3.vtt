WEBVTT

00:00.000 --> 00:16.560
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.560 --> 00:20.940
This is episode 73, recorded on September 30th, 2018.

00:20.940 --> 00:21.940
I'm Chris.

00:21.940 --> 00:22.940
And I'm Joe.

00:22.940 --> 00:23.940
And welcome back, Chris.

00:23.940 --> 00:24.940
Hello, Joe.

00:24.940 --> 00:26.160
It's good to be connected with you.

00:26.160 --> 00:28.280
It's great to be co-hosting with you again.

00:28.280 --> 00:30.560
And I'm not the only one celebrating this week.

00:30.560 --> 00:34.720
Google turns 20, and Android turns 10 years old.

00:34.720 --> 00:38.280
Yeah, and there's an article on TechCrunch that brought this to my attention that's got

00:38.280 --> 00:40.900
a kind of rundown of the history of Android phones.

00:40.900 --> 00:44.300
It's not complete history, but it shows some significant milestones.

00:44.300 --> 00:47.520
And we really have come a long way, haven't we, since the beginning.

00:47.520 --> 00:52.840
I was going over a couple of the major ones that I remember, and I realized I was really

00:52.840 --> 00:54.800
into Android in the early days.

00:54.800 --> 00:56.840
I pretty much went through all of this.

00:56.840 --> 01:02.600
I remember when the Nexus One came out with its cool new OLED screen and nice design.

01:02.600 --> 01:07.640
And then when I got the Evo 4G with WiMAX, that really took things to the next level.

01:07.640 --> 01:12.680
I started really playing with ROMs, swapping out SIM cards, going with extended, crazy

01:12.680 --> 01:14.880
super batteries.

01:14.880 --> 01:19.600
And then I started to remember things transitioning into a competitive era with Apple, where they

01:19.600 --> 01:21.920
were really trying to match feature for feature.

01:21.920 --> 01:27.000
There was that weird release of Android that was really only meant for tablets.

01:27.000 --> 01:28.160
Do you remember all this stuff?

01:28.160 --> 01:32.540
Yeah, well, that was on the Motorola Zoom, Honeycomb, the version was.

01:32.540 --> 01:36.440
And I actually had a Motorola Zoom, and it was pretty cool to be on the bleeding edge

01:36.440 --> 01:37.780
for once.

01:37.780 --> 01:40.360
And it wasn't actually too bad.

01:40.360 --> 01:44.700
It was properly designed for a tablet, but it just seems that it never quite competed

01:44.700 --> 01:45.700
with the iPad, did it?

01:45.700 --> 01:49.500
Yeah, tablets never really took off the way everyone thought they were going to in general

01:49.500 --> 01:50.500
back then.

01:50.500 --> 01:54.840
They were out there, but they didn't replace the PC like everyone was claiming was going

01:54.840 --> 01:57.840
to happen, which I never really bought into.

01:57.840 --> 02:02.520
I do remember those sort of peak hardware Android release for me.

02:02.520 --> 02:06.880
And that was right around the time the Nexus 5X came out.

02:06.880 --> 02:11.860
I bought other phones after that, but the 5X was sort of my favorite Android phone.

02:11.860 --> 02:16.180
And it became really easy later on to swap in different ROMs and pretty well supported

02:16.180 --> 02:17.760
in the community in general out there.

02:17.760 --> 02:21.680
Well, for me, the Nexus 4 was that moment, really, because the price was so low compared

02:21.680 --> 02:24.320
to the competition for the specs that you got.

02:24.320 --> 02:28.880
And although they cut a few corners with the camera and stuff like that, it was still an

02:28.880 --> 02:31.400
amazing phone for the price.

02:31.400 --> 02:35.960
And that's why it ended up being the basis for so many projects like Ubuntu Touch and

02:35.960 --> 02:36.960
Sailfish.

02:36.960 --> 02:39.720
And there's so many ROMs still available for that phone.

02:39.720 --> 02:43.320
That was just one of the great things about the Nexus line in general is that it was a

02:43.320 --> 02:48.360
pretty good phone, well supported by Google, and then eventually the community for a price

02:48.360 --> 02:53.360
that was really competitive, cheaper than, say, a Pixel or a high-end Samsung or iPhone

02:53.360 --> 02:54.360
is today.

02:54.360 --> 02:58.260
Yeah, but then the 5X was where the price started to creep up.

02:58.260 --> 03:00.360
And then the 6 was ridiculously expensive.

03:00.360 --> 03:03.340
And then the 6P, again, was just stupidly expensive.

03:03.340 --> 03:09.140
And that's probably what led to the decline in popularity and ultimately them just getting

03:09.140 --> 03:14.740
rid of the Nexus line and replacing it with Pixel, which are premium, high-end phones

03:14.740 --> 03:16.720
for a high-end price.

03:16.720 --> 03:21.520
And here we are 10 years on, and the Pixel 3 is about to come out, and it's their 10-year

03:21.520 --> 03:22.520
flagship.

03:22.520 --> 03:24.420
So it's kind of crunch time for them, really.

03:24.420 --> 03:26.360
They have to deliver a good phone with this.

03:26.360 --> 03:27.360
Right.

03:27.360 --> 03:32.280
That is an interesting context in which we're going to see the Pixel 3 announced is 10 years

03:32.280 --> 03:37.700
of learning how to do Android and learning what phone hardware works and doesn't work.

03:37.700 --> 03:40.980
If it's not a great phone after 10 years, you do kind of have to wonder what's going

03:40.980 --> 03:41.980
on.

03:41.980 --> 03:42.980
I'm curious.

03:42.980 --> 03:44.760
I haven't made the jump since the 6P.

03:44.760 --> 03:48.520
The Pixel 3 was always the one I said since the day they launched the Pixel program.

03:48.520 --> 03:51.920
I'll wait for the third release because that's when they should have it nice and refined.

03:51.920 --> 03:53.900
So I'm particularly interested.

03:53.900 --> 03:56.080
But it's not all about Google's Android division.

03:56.080 --> 04:01.620
No, the 20-year-old company also has deep down in its bowels a strike team, if you will.

04:01.620 --> 04:03.160
It's called Project Zero.

04:03.160 --> 04:07.840
We've covered them a ton on the TechSnap program because they're super active in the security

04:07.840 --> 04:09.780
research area.

04:09.780 --> 04:14.060
And this week, they're accusing some Linux distributions you may have heard of, of leaving

04:14.060 --> 04:18.920
their users exposed to known kernel vulnerabilities for weeks.

04:18.920 --> 04:23.160
Which is funny that we've just talked about Android and then another division of Google

04:23.160 --> 04:26.960
criticizing distros for being tardy with patches.

04:26.960 --> 04:29.400
I mean, come on.

04:29.400 --> 04:31.440
Android is the worst example of that.

04:31.440 --> 04:32.440
Hey now, Joe.

04:32.440 --> 04:33.440
It's fair.

04:33.440 --> 04:37.840
If you have a Pixel phone, you get monthly security updates, which he actually criticizes

04:37.840 --> 04:39.480
in his blog post as well.

04:39.480 --> 04:43.020
He is Jan Horn, I believe is how you say his name.

04:43.020 --> 04:45.160
And he's a member of Google's Project Zero team.

04:45.160 --> 04:49.840
He's a researcher who discovered the meltdown and Spectre CPU flaws.

04:49.840 --> 04:55.080
And he's had a few harsh words for the maintainers of Ubuntu and Debian specifically.

04:55.080 --> 05:00.620
He says they need to raise their game on merging upstream kernel security fixes faster and

05:00.620 --> 05:02.680
shipping it to users faster.

05:02.680 --> 05:04.240
So do you think this is fair criticism?

05:04.240 --> 05:06.300
No, I think this is not fair criticism.

05:06.300 --> 05:08.520
So here's the timeline, essentially.

05:08.520 --> 05:10.620
It's a matter of weeks.

05:10.620 --> 05:15.400
This was discovered at CVE 2018-17-182.

05:15.400 --> 05:19.220
It was reported to the Linux kernel maintainers on September 12.

05:19.220 --> 05:24.480
And Linus, who was very productive back then, got it merged impressively fast in a single

05:24.480 --> 05:27.000
day after Horn reported the issue.

05:27.000 --> 05:32.480
And within days, it was also fixed in the upstream stable kernel releases 4.18, 9, and

05:32.480 --> 05:35.440
the other stables that came out that day.

05:35.440 --> 05:39.740
But Horn points out that some distributions, even though the upstream patch was available

05:39.740 --> 05:43.040
in a matter of days, have taken weeks to get them in their kernel.

05:43.040 --> 05:49.960
In fact, Debian even, he says, shipped a kernel based on 4.9, but didn't include the security

05:49.960 --> 05:50.960
fix.

05:50.960 --> 05:55.280
And Ubuntu shipped a kernel on August 27 without the fix.

05:55.280 --> 05:59.000
And he makes the point that when we have a security critical fix that's available in

05:59.000 --> 06:03.960
an upstream stable kernel, it can take weeks before the fix is actually available to end

06:03.960 --> 06:07.920
users, especially if the security impact is not announced publicly.

06:07.920 --> 06:11.040
But he says it's worse when it is announced publicly, because then people start working

06:11.040 --> 06:13.040
on exploits immediately.

06:13.040 --> 06:16.320
So that's why users are extra vulnerable, he makes the case.

06:16.320 --> 06:20.560
But he doesn't seem to understand about the QA process then, and the fact that you can't

06:20.560 --> 06:23.620
just push this stuff out and hope for the best.

06:23.620 --> 06:27.600
To that point, there's testing, but on top of that, there's a process here.

06:27.600 --> 06:32.440
And Canonical, for example, did respond to his blog post and said the fixes are scheduled

06:32.440 --> 06:35.200
to be released around Monday, October 1st.

06:35.200 --> 06:37.840
I have a link in the show notes, but they just had to go through a process, like you

06:37.840 --> 06:38.840
point out.

06:38.840 --> 06:42.560
And now it's tagged for release in the next batch of updates that go out.

06:42.560 --> 06:43.840
So it's really a matter of perspective.

06:43.840 --> 06:48.440
If you're the CTO at a company that has systems that are several years out of date, then weeks

06:48.440 --> 06:52.620
to get a fix out to end users is more than enough.

06:52.620 --> 06:57.000
But from Horn's perspective, down in the bowels of the Googleplex and Project Zero, where

06:57.000 --> 07:00.640
they're sitting on the strike team taking care of security issues like maniacs, hours

07:00.640 --> 07:01.640
are days.

07:01.640 --> 07:03.080
He's living an internet time.

07:03.080 --> 07:04.760
He wants it to go, go, go.

07:04.760 --> 07:09.260
We got the fix in, Linus got it merged, it's in the stable branch, everybody go.

07:09.260 --> 07:14.760
And I think some of his experience with Meltdown and Spectre is also coloring his view here.

07:14.760 --> 07:17.680
You have to take that into context as well.

07:17.680 --> 07:21.920
Red Hat was a distribution that was able to respond extremely quickly to the Meltdown

07:21.920 --> 07:25.640
vulnerability because they got a heads up directly from Intel.

07:25.640 --> 07:30.440
Other distributions, famously, some large distributions, did not get that direct heads

07:30.440 --> 07:34.880
up and had to hustle through the holidays in the middle of other things to get patches

07:34.880 --> 07:36.240
out to end users.

07:36.240 --> 07:41.120
And now they're being criticized by some of the same people involved for not responding

07:41.120 --> 07:42.320
fast enough.

07:42.320 --> 07:45.480
So in my opinion, I think Horn comes across a little skewed here.

07:45.480 --> 07:47.600
He's working on internet time.

07:47.600 --> 07:52.160
But I think his past experience with getting the Meltdown and Spectre fixes out have colored

07:52.160 --> 07:53.920
his perspective on this issue here.

07:53.920 --> 07:54.920
Well, exactly.

07:54.920 --> 08:01.600
And I would rather wait two or three weeks and have my server still work than have the

08:01.600 --> 08:04.440
fix straight away and have it potentially not.

08:04.440 --> 08:05.440
Yeah.

08:05.440 --> 08:08.840
And in the case of Debian, I think there's sort of an unspoken social contract there

08:08.840 --> 08:11.200
between the distro and the end user.

08:11.200 --> 08:15.160
And that is that Debian is going to take an even steady hand with this stuff.

08:15.160 --> 08:19.640
They'll get the software out in due time, but Debian's not rushing anything to end users.

08:19.640 --> 08:24.780
They try to make an exception for security, but that's your expectation as an end user.

08:24.780 --> 08:29.680
And in Ubuntu's case, they're going to have that thing shipped on October 1st or around

08:29.680 --> 08:30.680
there.

08:30.680 --> 08:34.040
But I think Horn should give them a little credit for having a live patch service that

08:34.040 --> 08:39.040
is available, I believe, up to three systems for free where you can just have immediate

08:39.040 --> 08:43.000
software updates that are a critical nature to the kernel delivered and live patch into

08:43.000 --> 08:45.360
your system without having to reboot.

08:45.360 --> 08:49.440
That kind of feature helps close that gaps I was talking about with enterprises where

08:49.440 --> 08:53.480
they go years without patching because they don't want to take down production.

08:53.480 --> 08:58.680
And making that system easily available, Red Hat has something similar, so does SUSE, they

08:58.680 --> 09:03.520
should get credit for that because that really makes a difference in the actual real world.

09:03.520 --> 09:04.520
Whereas I don't use that.

09:04.520 --> 09:06.080
I just reboot and cross my fingers.

09:06.080 --> 09:10.640
You know, I've been trying it out on a couple of systems this year since I set up the Ubuntu

09:10.640 --> 09:15.600
1804 workstations in the studio, and I completely forget about it until I realize I have it

09:15.600 --> 09:16.600
on.

09:16.600 --> 09:17.600
So, so far, it seems to be fine.

09:17.600 --> 09:18.600
There's my in-depth review.

09:18.600 --> 09:19.600
Nice.

09:19.600 --> 09:25.320
Yeah, I'll try it one of these days, but in the meantime, yeah, just cross my fingers.

09:25.320 --> 09:26.320
All right.

09:26.320 --> 09:31.000
Well, speaking of the kernel, last episode, Wes and I talked about Linus taking a break

09:31.000 --> 09:33.000
in the new code of conduct.

09:33.000 --> 09:37.520
And there's no doubt that that code of conduct has been a little bit divisive, shall we say.

09:37.520 --> 09:41.320
And there are those people who are very much against the adoption of it.

09:41.320 --> 09:44.800
And one of those people sent an email to the kernel mailing list about a week and a half

09:44.800 --> 09:48.360
ago that was, quite frankly, full of nonsense.

09:48.360 --> 09:53.260
But it seems to have been picked up on by quite a few people and for some reason has

09:53.260 --> 09:54.800
caused a bit of controversy.

09:54.800 --> 09:57.460
I think that's just because of how that email was written.

09:57.460 --> 09:59.120
It was strongly worded.

09:59.120 --> 10:03.440
It suggested that, quote, contract that had been established between the contributor and

10:03.440 --> 10:09.320
the kernel team had changed, that their original contributions took place during a meritocracy.

10:09.320 --> 10:10.920
And that has now changed.

10:10.920 --> 10:15.540
And therefore, they have the right to revoke their work based on copyright ownership.

10:15.540 --> 10:21.300
And it was all described in a very thick legalese that made it sound possible because it's perhaps

10:21.300 --> 10:23.360
even written by a lawyer.

10:23.360 --> 10:30.220
And I think that almost gave it some legitimacy in its own, even though the idea was bonkers.

10:30.220 --> 10:35.160
It took off like wildfire to a degree simply because of how it was written and the argument

10:35.160 --> 10:36.160
that was being made.

10:36.160 --> 10:38.260
But it is bonkers and nonsense.

10:38.260 --> 10:40.440
That's not how the GPL works, is it?

10:40.440 --> 10:47.620
If you release code under the GPL, then that is GPL code and people can do what they want

10:47.620 --> 10:52.480
with it as long as they obey the terms of the license, as long as, well, you know, they

10:52.480 --> 10:54.920
obey the GPL v2.

10:54.920 --> 11:00.400
So you can stop contributing and you can make further code that you write licensed however

11:00.400 --> 11:01.400
you want.

11:01.400 --> 11:06.500
And you can even take code that you have submitted to the kernel and is being approved and license

11:06.500 --> 11:10.840
it in a separate project because you're the copyright holder.

11:10.840 --> 11:14.280
But once you have made it GPLed, then that's it.

11:14.280 --> 11:15.280
There's no going back.

11:15.280 --> 11:18.360
You can't just pull it out of the kernel.

11:18.360 --> 11:21.560
You know, I'm not a lawyer and all of that, but I've read enough about this to know.

11:21.560 --> 11:24.360
I mean, my instincts told me that this was nonsense.

11:24.360 --> 11:28.840
And then having read about it, we shouldn't even really be talking about it, but it has

11:28.840 --> 11:33.000
spread and I felt that we should kind of try and stamp this out.

11:33.000 --> 11:34.000
Yeah.

11:34.000 --> 11:38.040
It has spread all the way to the Software Freedom Conservancy who thought it was necessary

11:38.040 --> 11:41.180
to reach out to their outside counsel.

11:41.180 --> 11:46.720
And then together they updated the copy left and GNU public license, a comprehensive tutorial

11:46.720 --> 11:47.720
and guide.

11:47.720 --> 11:52.360
And you could think of this guide as setting up a structure of expectations around what

11:52.360 --> 11:57.920
contributors and users can expect when using GPL software.

11:57.920 --> 12:02.240
And if you ever to take something to court, the court would likely operate, again, I'm

12:02.240 --> 12:07.120
not a lawyer, but would likely operate under the assumption that you agreed to that guideline

12:07.120 --> 12:11.200
as well as the actual terms of the GPL version two.

12:11.200 --> 12:13.200
So they updated their guideline in particular.

12:13.200 --> 12:17.520
They say a contributor may only modify the software and distribute that contribution

12:17.520 --> 12:22.920
if they have agreed to the full text of the GPL two and the contributor is of course free

12:22.920 --> 12:28.440
to make no future grants, but they cannot withdraw past grants.

12:28.440 --> 12:29.440
Yeah.

12:29.440 --> 12:34.180
The whole point of the GPL essentially, or one of the main points of it.

12:34.180 --> 12:40.080
So strange that this became such a story because it just is a non-story really.

12:40.080 --> 12:44.520
Well, that's perfect because there's a non-distribution with some news this week.

12:44.520 --> 12:50.800
KDE Neon has been re-based on Ubuntu 18.04 LTS, bionic beaver, and I'm elated.

12:50.800 --> 12:53.280
I've updated all of my Neon systems.

12:53.280 --> 12:56.920
Don't call it a distribution, but do upgrade if you're a Neon user because it's gone great

12:56.920 --> 12:57.920
so far for me.

12:57.920 --> 13:01.760
A few reports here and there, but the team really seems to have worked hard to make this

13:01.760 --> 13:03.640
as smooth as possible for end users.

13:03.640 --> 13:07.080
Yeah, and I tried it out on hardware today, installed absolutely fine, had a little play

13:07.080 --> 13:08.080
with it.

13:08.080 --> 13:09.880
Everything seemed to work perfectly.

13:09.880 --> 13:15.040
It's not very different in the experience that you had on 16.04 because obviously you

13:15.040 --> 13:19.200
got the latest KDE and you had that before, and so now it's just all of the innards have

13:19.200 --> 13:25.500
been updated to Ubuntu 18.04, so you've got the newer kernel and newer packages.

13:25.500 --> 13:30.000
So really, I suppose the highest praise that you can give it is that I don't notice any

13:30.000 --> 13:32.960
difference and presumably you haven't noticed much difference.

13:32.960 --> 13:37.560
I noticed a couple of small things because I've been following Nate Graham's weekly usability

13:37.560 --> 13:41.960
updates about Plasma, which cover all the small things that they've been working on.

13:41.960 --> 13:48.120
In fact, we had Nate Graham on Linux Unplugged last week, linuxunplugged.com.268.

13:48.120 --> 13:53.800
He comes on and talks about some of the efforts he's been focused on to improve usability

13:53.800 --> 13:56.160
for the Plasma desktop and make it more approachable.

13:56.160 --> 13:59.280
He's a former Apple engineer and he's been bringing some of that experience to the Plasma

13:59.280 --> 14:03.300
desktop, but he also gets into one of the number one questions I get whenever we talk

14:03.300 --> 14:08.040
about Neon, and that is, what's the difference between Kubuntu and Neon?

14:08.040 --> 14:12.200
And I'm just going to quickly go into this because at the core of it, I'm an advocate

14:12.200 --> 14:17.520
for Linux, and I think one of the best ways to get Linux out there on more desktops, especially

14:17.520 --> 14:21.760
workstation desktops, is a really great desktop experience.

14:21.760 --> 14:26.560
And I think Plasma right now is delivering that, and so I'm really just super enthusiastic

14:26.560 --> 14:28.260
about getting people to try it.

14:28.260 --> 14:32.800
And so if you want a workstation grade operating system, something that'd be great for development

14:32.800 --> 14:38.640
or in IT, or like I'm using Kubuntu here in production, you go with Kubuntu 18.04.

14:38.640 --> 14:41.800
It's long-term support from the bottom all the way up.

14:41.800 --> 14:46.960
The Ubuntu base, the Qt libraries that the Plasma desktop is based on, and then Plasma

14:46.960 --> 14:50.200
itself is an LTS release of the Plasma desktop.

14:50.200 --> 14:53.840
Kubuntu 18.04 is really rock solid.

14:53.840 --> 15:00.760
Neon is a bit more focused at developers who are working with Qt, or perhaps enthusiasts,

15:00.760 --> 15:07.000
or those that want the freshest desktop experience with a rock-solid reliable base.

15:07.000 --> 15:15.560
So KDE Neon is now based on Ubuntu 18.04 long-term support base OS, but the Plasma desktop is

15:15.560 --> 15:17.360
really fresh.

15:17.360 --> 15:21.280
Essentially as soon as the developers stamp it as stable and ready to go, you get the

15:21.280 --> 15:22.940
updates to your desktop.

15:22.940 --> 15:25.820
They have three editions for different use cases.

15:25.820 --> 15:30.520
The user edition is for those that want the latest released KDE software updated daily,

15:30.520 --> 15:33.720
but only released when it passes a QA test.

15:33.720 --> 15:35.520
So that's the version I have.

15:35.520 --> 15:40.040
And then they have two developer editions built from unstable and even Git branches.

15:40.040 --> 15:44.560
No QA checks, but it's for those that want to test or develop maybe a forthcoming software

15:44.560 --> 15:48.360
that you're going to release in a few months or a year on the Linux desktop, and so you

15:48.360 --> 15:50.720
want to be working with the latest stuff.

15:50.720 --> 15:54.200
And the other thing that's really cool about Neon is not only do they have a whole deb

15:54.200 --> 15:59.840
package archive that you could just work with, but they have ISOs and Docker images.

15:59.840 --> 16:04.600
And you can just play around with this stuff in a Docker image on your existing system.

16:04.600 --> 16:07.640
They also have snap packages they're working on where you're going to be able to snap install

16:07.640 --> 16:09.080
some of this stuff.

16:09.080 --> 16:13.120
They're going to be focusing more on that now that they're finished with the 18.04 rebase.

16:13.120 --> 16:15.320
So it's really fascinating.

16:15.320 --> 16:16.580
They don't like to call it a distro.

16:16.580 --> 16:21.720
It's more like a meta environment on top of Ubuntu 18.04 is how they like you to think

16:21.720 --> 16:22.720
about it.

16:22.720 --> 16:29.200
But for me, it makes for a killer desktop because I get fresh Plasma, stable Ubuntu,

16:29.200 --> 16:30.680
and recent user land applications.

16:30.680 --> 16:34.800
All right, I'm off my soapbox, but I just encourage everybody to go check one of these

16:34.800 --> 16:35.800
out.

16:35.800 --> 16:38.560
Well, if I was going to move to Plasma, I think Neon is what I would use because of

16:38.560 --> 16:42.520
that solid base, but the fresh desktop on top of it.

16:42.520 --> 16:48.400
And I know people who use KDE Neon for their work and rely on it, and maybe it's not quite

16:48.400 --> 16:51.040
as rock solid as Ubuntu, but it is pretty close.

16:51.040 --> 16:56.840
Yeah, you know, my closing thoughts on this is it's really the realization that Plasma

16:56.840 --> 17:02.160
now for many, many, many releases in a row has been getting better and better.

17:02.160 --> 17:05.660
And if there are regressions, they very quickly fix them.

17:05.660 --> 17:11.460
And so what we've got now is a desktop environment that's been in a refinement phase for maybe

17:11.460 --> 17:12.840
two years now.

17:12.840 --> 17:14.720
And that's why you're hearing more about it.

17:14.720 --> 17:19.160
That's why people are talking more about Neon and Kubuntu and other Plasma desktop-based

17:19.160 --> 17:23.280
distros, because the desktop environment itself is really matured.

17:23.280 --> 17:24.360
It's multi-threaded.

17:24.360 --> 17:26.120
It works well with your GPU.

17:26.120 --> 17:29.200
They're really far on their Wayland support.

17:29.200 --> 17:32.860
It's clean, and it's lower resources than you expect.

17:32.860 --> 17:35.720
So it's getting just a bit more attention these days.

17:35.720 --> 17:37.560
You really are in love with Plasma, aren't you?

17:37.560 --> 17:40.680
You know, it's made me really excited about the desktop again.

17:40.680 --> 17:43.480
I kind of just started back on, backing off, that's a tool.

17:43.480 --> 17:44.480
It's fine.

17:44.480 --> 17:45.480
It's okay.

17:45.480 --> 17:49.180
You know, it's a compromise is what I was starting to think from time to time.

17:49.180 --> 17:50.520
And now I'm just loving it.

17:50.520 --> 17:51.920
I just love setting up Plasma.

17:51.920 --> 17:53.660
I love getting it all tweaked the way I want.

17:53.660 --> 17:54.660
Just great.

17:54.660 --> 17:57.920
It's quite clear that you're in love with Plasma and Linux generally.

17:57.920 --> 18:04.680
And it seems that SAR Microsoft, and for good reason, it seems that at least half of Azure

18:04.680 --> 18:05.680
is running Linux.

18:05.680 --> 18:06.680
Yeah.

18:06.680 --> 18:12.080
They say it varies on the day because a lot of these workloads are, as they put it, elastic,

18:12.080 --> 18:15.440
but sometimes slightly over a half of Azure.

18:15.440 --> 18:24.400
So maybe like 60%, and usually about half in general of Azure VMs are running Linux.

18:24.400 --> 18:26.620
It suddenly all makes sense, doesn't it?

18:26.620 --> 18:33.360
Why Microsoft are so all in on Linux, trying to get Linux integrated into the Windows 10

18:33.360 --> 18:37.920
desktop as much as possible because they want people to use Azure.

18:37.920 --> 18:42.720
And if they're going to be running Linux on there, why not give them the tools to run

18:42.720 --> 18:44.700
Linux on the Windows 10 desktop?

18:44.700 --> 18:48.680
They say it's been a 10 year journey when they open sourced ASP.net and then just started

18:48.680 --> 18:50.520
seeing some of the benefits.

18:50.520 --> 18:57.000
And now they claim to have 20,000 Microsoft employees on GitHub and 200 open source projects

18:57.000 --> 18:58.320
that are out there.

18:58.320 --> 19:04.480
And all of this makes sense when you consider my saying that I have for Microsoft, all roads

19:04.480 --> 19:06.260
lead to Azure.

19:06.260 --> 19:08.080
That's the context in which you think of Microsoft.

19:08.080 --> 19:12.120
If you're trying to figure out what they're doing, all roads lead to Azure.

19:12.120 --> 19:18.900
And the embracing of Linux and open source that we've seen recently leads back to Azure.

19:18.900 --> 19:24.480
To that end, our friends here at Linux Academy have several Azure positions open, I am told,

19:24.480 --> 19:26.120
and they're full-time and remote.

19:26.120 --> 19:29.080
So I'll put a link in the show notes, linuxactionnews.com slash...

19:29.080 --> 19:30.080
73.

19:30.080 --> 19:31.080
Yeah.

19:31.080 --> 19:34.160
So we'll have a link in the show notes there if you are an Azure expert and are looking

19:34.160 --> 19:36.160
for some work because it seems to be growing quite a bit.

19:36.160 --> 19:40.600
I've seen some of the feedback that rolls in and people want to know more about it and

19:40.600 --> 19:44.220
it's hard to really wrap your head around how fast these services like AWS and Azure

19:44.220 --> 19:45.220
can grow.

19:45.220 --> 19:48.920
Well, that's the enterprise side of things, but end users will appreciate what Mozilla's

19:48.920 --> 19:53.200
been up to again this week with adding yet more features to Firefox.

19:53.200 --> 19:54.200
This one's pretty great.

19:54.200 --> 19:55.960
It's called Firefox Monitor.

19:55.960 --> 19:59.740
And I knew this was coming down the pipe because we've been covering the Have I Been Pwned

19:59.740 --> 20:03.920
service on TechSnap since it launched years ago.

20:03.920 --> 20:10.080
And they have been growing and becoming more of like a database API interface that some

20:10.080 --> 20:15.480
password managers like 1Password will interface with to see if you've been compromised.

20:15.480 --> 20:19.840
I don't know if you recall this service, Joe, but one of the many ways that they work is

20:19.840 --> 20:24.720
they collect leaked databases of usernames and passwords and they follow reports from

20:24.720 --> 20:27.320
companies of what user accounts have been breached.

20:27.320 --> 20:28.880
They mix it all together in their database.

20:28.880 --> 20:33.200
They track all of that amongst many other ways they collect information, all pretty

20:33.200 --> 20:35.840
sophisticated and interesting.

20:35.840 --> 20:39.360
And then they let you query it by like plugging in your email address on their website.

20:39.360 --> 20:44.840
And now they've been working on a way to let services like Firefox Monitor to check in

20:44.840 --> 20:45.960
for you.

20:45.960 --> 20:50.000
And they do it in a really clever way that doesn't reveal your credentials, doesn't leak

20:50.000 --> 20:51.300
the information.

20:51.300 --> 20:52.300
It's pretty sophisticated.

20:52.300 --> 20:54.320
We covered it in depth on TechSnap.

20:54.320 --> 20:58.320
And all you have to do is give your email address and it will check the Have I Been

20:58.320 --> 21:02.800
Pwned database to show if you need to worry about some of your data being compromised

21:02.800 --> 21:05.600
and where you might need to change your passwords.

21:05.600 --> 21:08.320
And now you can give it those credentials and it'll tell you in the future if they've

21:08.320 --> 21:10.240
been leaked somewhere.

21:10.240 --> 21:13.600
Mozilla asked people a couple of years ago about some of the new features that they could

21:13.600 --> 21:19.560
bring to Firefox and notifications about breaches in general was one of the most highly requested

21:19.560 --> 21:21.560
item on people's lists.

21:21.560 --> 21:22.960
And it's a nice system.

21:22.960 --> 21:27.320
I know it seems a little odd giving your credentials to a service and all of that, but it's a really

21:27.320 --> 21:31.360
well-built system that is very focused on your privacy.

21:31.360 --> 21:34.060
Check out the backlog of TechSnap if you're curious.

21:34.060 --> 21:39.640
But I find it kind of funny because in a way, this feels like Mozilla giving Chrome a bit

21:39.640 --> 21:44.120
of a kick in because this last week or two, there's been a lot of hubbub about Chrome

21:44.120 --> 21:49.000
auto logging you in and keeping Google cookies when you remove cookies.

21:49.000 --> 21:54.240
And in that same news cycle, Mozilla comes out with this Firefox monitor announcement

21:54.240 --> 21:58.080
where now they're going to proactively alert you about breaches and they do it in a really

21:58.080 --> 21:59.080
clever way.

21:59.080 --> 22:01.600
I got to tip my hat to Mozilla on this one.

22:01.600 --> 22:02.600
Well done.

22:02.600 --> 22:06.600
I got to tip my hat to them for telling me about something that I cannot believe this

22:06.600 --> 22:07.600
right.

22:07.600 --> 22:16.280
Did you know that on July 1st, 2008, MySpace leaked 360 million credentials, emails, passwords,

22:16.280 --> 22:18.120
and usernames?

22:18.120 --> 22:22.680
I'd forgotten about that one, but that's how popular MySpace was once upon a time.

22:22.680 --> 22:27.280
Yeah, that reminds us that MySpace was in fact a thing for a while.

22:27.280 --> 22:31.280
Not really relevant today because now those numbers just get thrown around like crazy,

22:31.280 --> 22:35.080
but that does show you that they had a heyday and I bet my credentials were in there at

22:35.080 --> 22:36.080
some point.

22:36.080 --> 22:40.240
I know I had a MySpace account, but never with autoplaying music.

22:40.240 --> 22:43.000
I'm afraid I was an offender there.

22:43.000 --> 22:45.280
Oh, I'm not surprised by that at all.

22:45.280 --> 22:50.880
All right, well, let's end with a quick community shout out.

22:50.880 --> 22:56.880
Mintcast, which is the podcast by the Linux Mint community for all users of Linux, which

22:56.880 --> 23:02.000
has been going for almost 10 years, needs new hosts.

23:02.000 --> 23:07.040
Rob and Isaac have had enough and they don't want to do it anymore, but they don't want

23:07.040 --> 23:10.000
to just stop because they were not the original hosts.

23:10.000 --> 23:13.800
It's had many, many hosts, including me, funnily enough.

23:13.800 --> 23:16.880
That was the first Linux podcast I ever appeared on.

23:16.880 --> 23:20.240
So I kind of owe them a bit of a debt, really.

23:20.240 --> 23:21.960
That's where I cut my teeth.

23:21.960 --> 23:28.000
So if you're interested in getting into Linux podcasting, if you like Linux Mint and know

23:28.000 --> 23:33.280
a little bit about it, they are going to help you take over, essentially.

23:33.280 --> 23:36.080
They're not just going to abandon it.

23:36.080 --> 23:41.760
On the latest episode, which we'll link to, they talk about how they want to kind of pass

23:41.760 --> 23:46.520
the torch on to new hosts and show them how they've been doing it.

23:46.520 --> 23:51.280
And I'm available to help a little bit if necessary as well with how to do the audio

23:51.280 --> 23:52.840
and everything.

23:52.840 --> 23:56.680
So if you've been thinking about starting a Linux podcast, contribute to an existing

23:56.680 --> 24:00.000
project rather than starting a new one is my advice.

24:00.000 --> 24:01.840
Get in touch with them.

24:01.840 --> 24:02.840
Everything's over at mintcast.org.

24:02.840 --> 24:05.080
That could be a great opportunity.

24:05.080 --> 24:06.080
And I agree.

24:06.080 --> 24:07.080
Let's keep the community strong.

24:07.080 --> 24:09.920
Now, this show is strong and will be out every single week.

24:09.920 --> 24:15.240
And you can grab new episodes at linuxactionnews.com slash subscribe for all the ways to get those.

24:15.240 --> 24:18.880
And you can go to linuxactionnews.com slash contact for ways to get in touch.

24:18.880 --> 24:25.360
And you can help amplify our community contributions by supporting us at Patreon.com slash JupiterSignal.

24:25.360 --> 24:28.840
We'll be back next Monday with our weekly take on the latest Linux and open source news.

24:28.840 --> 24:30.560
I'm at Chris LAS.

24:30.560 --> 24:32.040
I'm at Joe Roisington.

24:32.040 --> 24:34.800
Thank you for joining us and we'll see you next week.

24:34.800 --> 24:52.000
Take care.

