Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 48, recorded on April 8th, 2018.
I'm Chris.
And I'm Joe.
Hello, Joe.
It's good to be connected with you, especially on a day when we've got a big show and it
starts off with a big code cleanup in the Linux kernel.
Yeah, it's dropping support for quite a few very old and obscure architectures, none of
which I was really very familiar with, I must say.
Yeah, definitely some old hardware in here, probably things that most of us have never
even heard of, like Backfin and CRIs and FFRVs and things like that.
MR32R, obviously not very popular architectures anymore, but they had their day in the light.
Now, I think we all look at this as a good thing generally when these architectures aren't
widely used.
They're going to reduce the size of the kernel, which is always a common source of complaints.
Some say it reduces attack vector, others argue that.
But I think the more interesting aspect to this story is we often talk about how many
different architectures you can run Linux on.
We don't often talk about removing support, unless it's for like 32-bit support for x86.
This is the flip side to that, is there has to be a cleaning, a maintenance from time
to time.
And these are the kinds of things you never get to see in a commercial product.
It's all done behind the scenes.
But with Linux and the entire thing being done out in the open, we get to watch both
ends of this process.
Yeah, spring cleaning, if you will.
And it is necessary, really, you can't keep supporting these architectures forever.
And you mentioned 32-bit x86 there, you have to feel that that is coming.
Not anytime soon, you wouldn't have thought, but it can't be more than what, maybe another
10, 15 years max, really, before that's dropped, because that's just essentially obsolete.
And it's just the march of progress, isn't it?
These things happened.
And there might be a few of these systems that are still out there in embedded systems
or whatever.
But realistically, they can run older kernels, and maybe the last LTS or whatever, if necessary.
And really, how much life have they got left in them?
Probably not anything beyond the LTS kernel.
And otherwise, people just have to not really care about security if they don't want to
upgrade.
Well, speaking of the march of progress, we've also got to make room for new architectures.
We've talked about this before.
But this week, there's been some initial goodies landing in the most recent version of the
Linux kernel.
Yeah, RISC-V, which initially landed in 4.15, there's been some improvements in 4.17.
And keep in mind that this is the completely open royalty-free architecture, which I've
been pinning my hopes on for a totally free phone and routers and stuff like that.
So it's really great to see that there's improvements happening already.
So now in Linux kernel 4.17, there's support for dynamic F trace, they did some cleanup
to the atomic locking code, and module support loading is now enabled by default.
So it's still kind of early days with the things that we're implementing.
But they're things that are necessary and good to see.
The market is really picking up around RISC-V. There is a lot of momentum because like Joe
said, it's open source and royalty-free.
And there's three companies that appear to be the leaders, and Sci-5 is the leading of
those three.
They just closed $50 million in funding for their developer board that has kind of a unique
twist.
The idea here is they're gonna take the RISC-V processor architecture, royalty-free, so they
can rebuild and sell, and they're gonna make a processor board as a platform product.
I know that sounds crazy, but in simple terms, it's an app store where you choose the functionality
of that system, it downloads, it configures the RISC-V system for that functionality,
and out of the box, Bob's your uncle, you've now got a dedicated RISC-V board for a router
or to run a sign, a display.
The idea is they can build a couple of generic systems that just need a final configuration
that can be applied at the software level inside the CPU, which is something that the
RISC-V designers have promoted pretty heavily.
And then they'll just have different work cases or use cases in their quote-unquote
app store that you apply, boom, right onto the silicon.
Well, $50 million of VC funding really does inspire confidence in this company.
Yeah.
And so I'm glad to see that you've got them really pushing this forward because, like
I said, this is the real hope, isn't it, for a totally free device.
This is their third round of funding.
So I don't know their totals that they've raised here, but it shows that there is a
lot of investor interest in this market.
So this $50 million was a Series C round, so they've had an A and a B.
Yeah, and a pretty successful crowd funder for their development board as well.
So yeah, they're doing all right, which is good to see.
And also excellent RISC-V news this week is that Debian is now supported.
Yeah, 64-bit version of Debian for the RISC-V architecture.
It's early days, but it's essentially landed.
This was a post on the Debian mailing list, and it's here.
It's probably still got a lot of work to do, but it's actually here.
And it's bootable, it's unstable, but it's bootable.
Yeah, it's a huge step, isn't it, that we've got a real mainstream distribution that is
available.
As you say, early days, it's not working perfectly yet, but you know that that's just going to
continue to improve.
And we will hopefully, around the time that we've got affordable RISC-V hardware, have
a really good, solid version of Debian to run on it.
Speaking of kernel architectures and those architectures being free or not necessarily
free, how about one of the most popular architectures, x86, and running a special kernel that's going
to help you avoid all of those pesky alerts about patches for Meltdown and Spectre, amongst
other things.
Yeah, so the Linux Libre kernel, which is the totally blob-less, completely free software
kernel, they've decided that they're not going to alert you about the patches for Meltdown
and Spectre that require the proprietary microcode.
So they're very much prioritizing freedom over security, which is a huge surprise.
Not really.
So what they're doing with the GNU Linux Libre 4.16 kernel is they're taking the upstream
4.16 kernel and they're pulling out certain functionality, including just general microcode
update support.
So they're not specifically targeting Spectre and Meltdown.
It's just all microcode updates in the future, including future important updates, as well
as the ability to load binary-only modules, like NVIDIA drivers.
In the enterprise, I've had a lot of situations where a vendor has required a very specific
Linux kernel version and I've had to load the proprietary binary module.
So it sort of eliminates those use cases.
But on the other side, they have made changes to the firmware request code in the kernel,
potentially allowing some drivers to function better when they are capable of operating
without binary-only firmware in some cases.
So there is some take, but there's also some give.
And a lot of people have created a big stink about this and kind of for good reason.
But then again, is anybody accidentally using the Libre kernel?
I don't think so.
It's something that you're doing as a very conscious choice.
And so therefore you don't want these binaries that are proprietary and you've got no idea
what they're doing, even if it is going to supposedly increase your security.
I mean, we saw with the initial microcode updates that they were unstable and were a
bit useless and they ended up getting pulled.
So I don't think it's as much of a story as some people have made out, but it's something
certainly to be aware of if you are planning to use the Libre kernel.
Yep, I 100% agree with that.
You are intentionally running this kernel.
It's sometimes just a great way to validate that a piece of hardware like a new laptop
doesn't require any funky modules.
You know when you run this kernel, you are good to go if everything's working.
I'm not using this on my daily driver system and I'm not likely using this on a large virtual
environment either.
But it's nice to have it out there.
And for some folks that want raw performance without any meltdown, specter, microcode patch
slowdowns because they got to compute for days, this is a solution for them.
Yeah, who cares about security, eh?
dio.co slash action.
DigitalOcean is your cloud infrastructure on demand.
You can get started in seconds.
So when you go to dio.co slash action and sign up with a new account, you'll get $100
credit.
Now, that is a lot of DigitalOcean credit.
My favorite system is just three cents an hour and they've optimized the whole process
to save you time.
You can get systems up and running for testing and into production in minutes.
They have SSDs on every single system, 12 data centers all over the world, very well
positioned so that way you can place something near your users or near you so that way they
have unbelievable performance, 40 gigabit connections coming into these hypervisors,
Linux for the core, KVM for the virtualizer, and then a dashboard for days on top of all
of it, and a clear, easy to understand, well-documented API.
That's DigitalOcean in a snapshot, dio.co slash action.
You can deploy a base Linux system and build it from there or an entire application stack
like GitLab or Ghost, which is a killer WordPress replacement if you just need a simple, easy
blog or build out your entire infrastructure, host your business website.
Some of our favorite open source projects, entire backend and frontend, are hosted on
DigitalOcean, dio.co slash action.
Go try it out, get that $100 credit, build something fun, learn something new, and read
their clear documentation, dio.co slash action.
Okay, let's talk about Steam Machines.
This was a big story that turned out to maybe be a non-story this week, so Steam Machines
have disappeared from Valve's site, or at least that's what was reported, but then
Valve responded to that and said, no, it's fine, we're still doing it, we've just kind
of reorganized the site a bit, and yeah, they're not selling that well, but they're not dead,
it's fine, it's fine, they're not dead.
This is a hard one to read, so they've removed any possible way to navigate to them from
the front page, and they say, well, we've done that because user traffic was low.
Well, now user traffic's really going to be low, isn't it?
And it seems like maybe the solution there would be to make it more visible, but what
do I know?
I don't run the Steam store.
They also pulled down promotional language.
That was a little bit suspicious as well, and they did reveal that they've sold fewer
than 500,000 Steam Machines in seven monthish time, so that was a while ago, so we don't
know what the number is now, but it, in my sense, hasn't been that good.
So I think some of us have just sort of been anticipating this, and that's why the news
got so much traction, and Valve said, you know, it was just a routine cleanup, we were
just doing a routine cleanup, but we have taken a lot of feedback, and we've been real
heads down on addressing the shortcomings that we've observed with that rickety Linux.
Now I may have added a little emphasis there.
We think an important part of our efforts is our ongoing investment in making Vulkan
a competitive and well-supported graphics API, as well as making sure it has first-class
support on Linux platforms.
I solidly agree with that final statement there, that I completely agree with.
They essentially are trying to position as we came into this with a whole head of Steam
and thought we really had something great and developers were going to take off, but
then we realized that OpenGL was kind of crap on Linux, and then we realized that there
wasn't really a solid cross-platform competitive graphics API that competed with DirectX, so
we have to make that work first before we can make the whole Steam Machine thing work.
I do technically buy that argument.
I don't think it's going to work.
Do you think that anyone is really interested in running Steam games in a console-like form
factor?
It just seems that if you want to play Steam games, you're going to be doing that on a
PC or maybe with a PC running in a different room and then using a Steam Link.
I just don't see the market really for Steam Machines.
If you want to have a console, then people are going to get an Xbox or a PlayStation
or maybe even a Switch.
That's always been the core question with these Steam Machines, and I think the market
has shown us it's a bit of a mixed bag.
The Steam Link, as you just mentioned, has been a success for Valve, and they've sold
quite a few of them.
It's also about $100.
NVIDIA has their GeForce streaming stuff that they build into their NVIDIA cards on the
Windows platform and into their NVIDIA Shield TV.
You can stream from the NVIDIA Cloud PC games to an NVIDIA Shield TV.
Have you tried that?
Because I would always worry about latency there.
Yeah, it's not too bad.
You know, it really depends.
I am not a hardcore gamer like you are, Joe, but I didn't really have too many problems.
I played Batman Arkham City, and it looked great.
It played pretty well, but that game may be better positioned for it than sort of a twitchy
kind of first-person shooter where response time is really critical.
I'm not sure.
I can't speak to that, but it does seem that these companies are definitely pushing PC
games down to the TV.
Yeah, and SteamOS in and of itself was a hedge, wasn't it, against the possibility that Microsoft
would make it so that you could only install applications from the Microsoft App Store,
which we just haven't seen.
We've seen Windows 10 be as open as previous versions of Windows.
Open I don't mean as an open source, but I mean as in you can just download an exe and
run it.
You might get the odd warning or whatever, but you can install whatever you want.
And so really, SteamOS just hasn't really been relevant, has it?
I don't know any serious gamers who aren't sort of Linux first, if you know what I mean,
who are in the slightest bit interested.
If you're in the Linux world and you care about software freedom and you're running
Linux as a daily driver, then it makes sense to use Steam or Linux or SteamOS possibly.
But the kind of people who only care about gaming, they just don't care at all about
SteamOS.
They're like, based on Linux, why would you do that?
I don't think it's up to them to even care.
It's supposed to be an implementation detail on the part of Alienware or another provider,
just like the Xbox is running some old version of Windows underneath, but the users don't
care.
But to go back to your point about them hedging against Windows 10, I think that's the bigger
thing.
If I was going to bet a beer on what's really going on, my rampant speculation and personal
opinion would be the Windows 10 monster did not materialize, but Valve knows Microsoft
well enough to know that if they said they want to do it, they at some point will likely
get around to it.
They just take a very slow route to ease people into it, and so it's probably worth them continuing
to invest.
There's other benefits to investing in Vulkan besides the Linux desktop and Steam machines,
including Android and just helping crack the DirectX dominance.
So I don't really fully buy that they're doing this for desktop Linux or the future of Steam
machines more so than it's just a way to keep a hedge going in case they have to invest
all of their resources.
They could turn this thing into a pretty solid product within six months to a year, and that's
probably all they really need out of it right now.
Yeah, back burner is the phrase for that.
But we'll never know because they've obviously been using encrypted messengers to plan all
of their Steam machines maniacal plans, Joe.
Well, maybe not, but it made for a segue.
Yeah, well let's hope they weren't using Tor Messenger, which three years after launching
was still in beta and now has been abandoned.
There's been a lot of things leading to this, I think, the fact that it never got out of
beta, the fact that it wasn't the perfect messaging client because it had a quote unquote
metadata problem, as the project calls it.
But the real nail in the coffin here was that it's based on a project that is no longer.
Instant Bird was an open source messaging client developed in the Mozilla community,
and the lead developer in that Mozilla community announced last year he was stepping down,
wrapping up, hanging up the keyboard, he was done with the project.
And that really kind of sealed the fate of Tor Messenger.
I do wonder about this sort of general distrust of Tor that I seem to pick up from a lot of
people that people know that it is possible to work out some of the traffic and where
the traffic's coming from and that it's not totally foolproof.
And that kind of undermines faith in it, really, as a platform generally.
So I wonder to what extent that stopped people from adopting it.
And also the fact that there's just a million other messengers out there already that people
are using.
Did they really need another one?
Yeah, I definitely take your point.
And I think you're right.
I think the fact that this thing had a quote unquote metadata problem also sort of hurt
the brand of Tor, if you follow.
So this group that's supposed to be known for trying to keep you secure and private
online creates a messenger that essentially leaks metadata.
I mean, I use the term loosely leak, but that doesn't really play well to Tor trying to
protect your privacy.
Yeah, and in the meantime, we've seen the rise of Signal, and that's become really popular
with people who care about privacy.
So I think that it probably was a wise decision to just give up on this.
Mozilla's got another project in the works, though, and this is one that they really seem
to be passionate about.
It's bringing augmented reality and virtual reality to Firefox.
And they appear to be doing this with a dedicated augmented reality mixed reality browser called
Firefox reality.
Now am I some sort of old man or is it normal to not really have much interest in a mixed
reality or augmented reality or virtual reality browser?
It just feels very kind of 80s movie future, doesn't it, that really, I just, if I want
a browser, I just want a browser.
I don't see why it being in AR or VR.
I don't see any value add there.
I know this is something they've thought a lot about because I got a demo of Firefox
web VR, I think in 2013, 2014 at OSCON at the Mozilla booth, and they've been working
on it since then.
And I think they do a really bad job of explaining why this should exist.
And I've criticized them on the show before about the way they communicate.
They communicate like they're talking from one business to another business.
And it's totally the elegance of what they're trying to do is totally lost in the corporate
speak because they wax on about the future of the web and how it's going to be heavily
intertwined with virtual and augmented reality.
And that future is going to live through the browser.
And that's why they're building Firefox reality, a new kind of web browser designed from the
ground up to work with standalone virtual and augmented realities.
And the real purpose of this is in the augmented reality content creation process.
It's a very creative process.
You go in with some of the current editors and you actually edit in augmented reality.
You position things.
It's more like directing a movie and setting up a scene than it is writing code.
And what Mozilla's position here is locking all of this down to proprietary applications
that only work on Windows and the Mac would be a travesty.
And the best use of augmented reality is going to be like in enterprises and work cases where
people can focus on designing the augmented information around the office space they need
for the tools they're working on.
And they don't have to worry about creating some sort of proprietary application to run
it on Windows.
They can use open web standards and pop it in a web browser and people on Android, people
on Linux, people on Windows can all view the same augmented reality objects.
That seems like a good idea and you want that kind of thing to be an open source tool that
is cross platform.
And I agree that people should be focused on the content, not building applications.
And that you need somebody to do something like this if that's ever going to take off.
But I'm also like you, Joe, I just don't really ever see this going anywhere.
If it ever does, Mozilla needs to be pre-positioned and ready to run.
They need to have the groundwork laid.
And there needs to be some sort of standard ready to be proposed so that way something
open is adopted instead of something that's rammed down our throats by some major corporate
player.
But I still, I really have a hard time beyond the big picture getting worked up about this
and never see myself trying this unless something really changed.
Well, that's the key issue here, isn't it, that if you look at the situation right now,
it just seems like it's just way too early for this.
And it just seems totally irrelevant to right now.
But if you look at the mistakes that they made with Firefox OS, the major mistake was
waiting too late.
Android and iOS had already firmly cemented their place in the market.
Whereas with this, they're almost too early with it.
And it's way better to be too early than too late, right?
There's a lot of different use cases for stuff like this.
They're trying to build a framework, a standard, all of that with this.
And you could see use cases like on a phone, maybe you have an app.
You hold it up over a sign, uses the camera to capture the sign, and then it uses this
Firefox reality browser.
Maybe it's just a browser embed inside an app to do the translation and display the
translated text.
And the developers didn't have to ever worry about how to display that.
They just had to worry about how to do character recognition and do translation, which is a
very hard problem on its own.
I could see it.
I could.
But I think our hardware is going to have to get a lot better.
Hang on.
We've already got Google Translate for that.
What do we need an open source version for?
Yeah, what do we need an open source version for?
Famous last words.
Yeah, that's not running everything through Google servers, and so they know exactly what
we're up to.
Yeah.
What would be the point of that, eh?
Well, you can know exactly what's going on in the news, in the open source world every
single week.
Go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And go to linuxactionnews.com slash contact for ways to get in touch with us.
And while you're over on our site, linuxactionnews.com slash 48 for all of the links for anything
we talked about today, and consider supporting us on Patreon, patreon.com slash jupitersignal.
We'll be back next Monday with our weekly take on the latest Linux on open source news.
I'm at Chris LAS.
I'm at Joel Wessington.
Thank you for joining us, and we'll see you next week.
See you later.
