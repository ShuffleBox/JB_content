WEBVTT

00:00.000 --> 00:09.480
Hello, and welcome to Linux Action News, episode 113, recorded on July 7th, 2019.

00:09.480 --> 00:10.480
I'm Chris.

00:10.480 --> 00:11.480
And I'm Joe.

00:11.480 --> 00:12.480
Hello, Joe.

00:12.480 --> 00:13.480
Good to be connected with you.

00:13.480 --> 00:17.640
We kick off today's show with a couple of really important releases, starting with Debian

00:17.640 --> 00:18.640
10 Buster.

00:18.640 --> 00:23.240
Yeah, this is 25 months in development, and it's going to be supported for five years

00:23.240 --> 00:24.240
as well.

00:24.240 --> 00:25.800
So this is a pretty big deal.

00:25.800 --> 00:30.520
Yeah, Buster ships with several desktop applications and environments ready to go.

00:30.520 --> 00:34.680
Cinnamon 3.8, GNOME 3.30, Plasma 5.14.

00:34.680 --> 00:43.840
Of course, Joe's favorite, Xfce 4.12, Mate 1.20, as well as LXQt 14 and LXDE 0.99.2.

00:43.840 --> 00:49.600
But we default to GNOME with Buster, and that is now on top of Wayland instead of Xorg.

00:49.600 --> 00:55.000
Yeah, which is kind of surprising, because Debian is traditionally very conservative.

00:55.000 --> 01:00.880
But if even Debian think that Wayland is ready for mainstream, then what does that tell you?

01:00.880 --> 01:04.120
Is X just dead, finally?

01:04.120 --> 01:08.160
I don't know, man, because I installed the Xfce edition when I tried out Buster, and

01:08.160 --> 01:09.160
so I was using Xorg.

01:09.160 --> 01:11.040
So it's not dead for me.

01:11.040 --> 01:14.880
I actually gave two different goes at Debian 10.

01:14.880 --> 01:19.560
They have the live ISOs you can download, which are full live environments in a DVD.

01:19.560 --> 01:22.720
I grabbed, obviously, the Xfce one, but they have others.

01:22.720 --> 01:24.680
And then they have the net installs.

01:24.680 --> 01:28.120
I chose to try out Buster using both install methods.

01:28.120 --> 01:29.280
Did you get a chance to try it?

01:29.280 --> 01:31.760
Yeah, I went for the network install.

01:31.760 --> 01:36.420
And it was a bit fiddly, because I had to get the blob for my wireless card.

01:36.420 --> 01:41.520
But once I sorted that out, it was just plain sailing, really, super quick.

01:41.520 --> 01:42.520
And just Debian.

01:42.520 --> 01:43.520
I mean, that's the thing.

01:43.520 --> 01:46.820
It's not massively different from the last one, is it?

01:46.820 --> 01:48.880
It's just updated and just Debian.

01:48.880 --> 01:51.760
There's a couple of notable differences I'll touch on here in a second.

01:51.760 --> 01:56.560
But from my install experiences, I'm going to recommend people use the net install.

01:56.560 --> 01:58.860
You get a graphical installer either way.

01:58.860 --> 02:03.520
The one in the live environment is laid out slightly different than the graphical one

02:03.520 --> 02:05.080
for the net install.

02:05.080 --> 02:09.480
But it's perfectly functional, and it boots right into that graphical net installer right

02:09.480 --> 02:10.480
away.

02:10.480 --> 02:11.960
So that's definitely the way to go.

02:11.960 --> 02:13.840
And then you can choose your desktop and all of that stuff.

02:13.840 --> 02:18.980
But OK, Joe, here's a couple of the things that are different since version 9.

02:18.980 --> 02:23.320
For those of you that are in a security-focused environment, AppArmor, which is mandatory

02:23.320 --> 02:29.160
access controls for restricting programs capabilities, is now installed and enabled by default.

02:29.160 --> 02:36.280
Also, thanks to the reproducible builds project, over 91% of the source packages in Debian

02:36.280 --> 02:42.400
10 will build bit for bit identically to the binary packages, which is, as you know, a

02:42.400 --> 02:47.320
very important feature to verify the source and to protect against, say, malicious attempts

02:47.320 --> 02:51.960
to tamper with software in between the original source and the end user.

02:51.960 --> 02:54.240
Yeah, and it also has Secure Boot this time around.

02:54.240 --> 02:56.920
Yeah, and a total of 10 architectures are now supported.

02:56.920 --> 03:01.680
Not all of them support Secure Boot, but Debian itself now supports 10 total architectures.

03:01.680 --> 03:04.580
Yeah, it really is the universal operating system.

03:04.580 --> 03:09.080
But what I meant by it being the same old Debian is, although there's been some pretty

03:09.080 --> 03:15.520
major changes with that security stuff, the actual end user experience hasn't changed

03:15.520 --> 03:17.480
much at all, really.

03:17.480 --> 03:18.640
And I see that as good.

03:18.640 --> 03:24.060
If you are familiar with Debian and how it all works, the install is the same.

03:24.060 --> 03:29.920
The end product is, well, the GNOME that I had was just basically just stock GNOME 3.30.

03:29.920 --> 03:33.140
It feels just like Debian.

03:33.140 --> 03:36.120
I also tried out the Mate edition, which is perfectly fine and functional.

03:36.120 --> 03:40.460
And the XFCE edition does have Edwardia Dark installed by default.

03:40.460 --> 03:44.560
My walkaway impression from that was, this is the perfect desktop for Joe, because it's

03:44.560 --> 03:46.580
going to be supported for five years.

03:46.580 --> 03:51.400
And when they do an upgrade, you just get exactly what you expect.

03:51.400 --> 03:55.820
And with someone like yourself who runs a desktop that isn't updated super frequently,

03:55.820 --> 03:59.260
you pair that with a base operating system like Debian.

03:59.260 --> 04:03.640
I'm not clear on why you're not using this as your daily driver, actually.

04:03.640 --> 04:04.760
And you're not a big gamer either.

04:04.760 --> 04:07.600
So some of the gaming poles to Ubuntu aren't there for you.

04:07.600 --> 04:12.880
Well, I think what it is, right now, I could happily use Debian 10 Buster, no problem.

04:12.880 --> 04:19.000
But in a few years, it starts to feel a bit, even for me, a bit old and stale.

04:19.000 --> 04:21.560
Some of the applications just get left behind.

04:21.560 --> 04:25.360
And new features come along that I actually want.

04:25.360 --> 04:32.080
And for me, upgrading every couple of years with Ubuntu, a few months kind of behind the

04:32.080 --> 04:35.720
release, that feels like a good cadence for me.

04:35.720 --> 04:39.840
And I can cope with, say, two, two and a half year old software.

04:39.840 --> 04:41.920
But then I need to upgrade.

04:41.920 --> 04:45.240
I suppose I could do that with Debian as well.

04:45.240 --> 04:50.360
But I don't know, I'm just kind of stuck in this Ubuntu rut now.

04:50.360 --> 04:52.120
And well, it's not even a rut.

04:52.120 --> 04:54.780
I'm happily in that rut, if you know what I mean.

04:54.780 --> 04:57.720
And so I just don't really feel the need to change.

04:57.720 --> 05:02.720
But I could happily use Debian if Ubuntu just disappeared overnight.

05:02.720 --> 05:07.440
Another way to put rut is you found a really good workflow that's just working perfectly

05:07.440 --> 05:08.440
fine for you.

05:08.440 --> 05:12.240
There's no reason to toss the whole thing up in the air on a lark.

05:12.240 --> 05:13.240
I get that.

05:13.240 --> 05:14.240
Yeah, I get that.

05:14.240 --> 05:17.720
Well, I'm interested that I didn't try out the Xfce version, because traditionally, it's

05:17.720 --> 05:21.160
just been a very stock Xfce, which is really ugly.

05:21.160 --> 05:24.200
So I do need to check it out if they've actually themed it nicely this time.

05:24.200 --> 05:25.200
Oh, no, not by default.

05:25.200 --> 05:26.200
No.

05:26.200 --> 05:27.200
Oh, right, right, right.

05:27.200 --> 05:28.200
No, it's quite ugly.

05:28.200 --> 05:29.200
It's quite ugly.

05:29.200 --> 05:31.160
But it takes only just a few moments to tweak it.

05:31.160 --> 05:35.240
I guess your point, though, is taken when you said that it's almost too far on that

05:35.240 --> 05:41.200
slow spectrum, and you could jump on that upgrade cycle when the new, say, Debian 11

05:41.200 --> 05:42.200
ships.

05:42.200 --> 05:47.320
But Ubuntu does sort of have that sweet spot for you where you get a lot of those advantages.

05:47.320 --> 05:52.720
But if you need to pull in a PPA or a snap for that one thing, like, say, Telegram or

05:52.720 --> 05:57.520
Firefox that you want super current, because as an example, Debian 10 ships with the ESR

05:57.520 --> 05:58.520
version of Firefox.

05:58.520 --> 06:02.000
And that could be a great use case of you probably want the most current version of

06:02.000 --> 06:05.480
Firefox if possible, where you do strike that balance with Ubuntu.

06:05.480 --> 06:09.440
And that, in part, is why Fedora has worked so well for me, because it's even further

06:09.440 --> 06:11.960
up on that scale, but it's not at the arch level.

06:11.960 --> 06:17.280
It's curated still, it's release based, but it's very current packaging, very clean system.

06:17.280 --> 06:23.720
And so for me, Fedora has been that sort of perfect spot on the package current spectrum.

06:23.720 --> 06:26.600
And I can see where, for you, Ubuntu is a little bit further down, and then Debian

06:26.600 --> 06:28.280
is much, much further down on that spectrum.

06:28.280 --> 06:34.120
Yeah, well, you could argue that Ubuntu interim releases are similar to Fedora in that way.

06:34.120 --> 06:40.520
But I'm kind of Ubuntu LTS, and we've been kind of talking about it as if ignoring the

06:40.520 --> 06:41.520
interim releases.

06:41.520 --> 06:48.880
But yeah, I could happily recommend Fedora or, at the moment, 19.04 Ubuntu to some people,

06:48.880 --> 06:50.760
but I'm just that bit more conservative.

06:50.760 --> 06:53.600
But yeah, Debian, I think, is just too conservative for me.

06:53.600 --> 06:56.760
But I can see some people who I would highly recommend it for.

06:56.760 --> 06:59.280
And I know a bunch of people do use it happily.

06:59.280 --> 07:06.360
Yeah, especially the people that I'm thinking of like all of the things about Debian that

07:06.360 --> 07:07.560
maybe others might not like.

07:07.560 --> 07:08.880
They like the slow pace.

07:08.880 --> 07:11.560
They like the simple rate of change.

07:11.560 --> 07:15.600
There's a school district nearby here that has workstations that are set up on Debian

07:15.600 --> 07:16.960
with XFCE.

07:16.960 --> 07:23.240
And for the most part, those systems have gone unchanged for nearly a decade now.

07:23.240 --> 07:28.860
We've kept upgrading them, but there's been no massive change to the staff's workflow

07:28.860 --> 07:29.860
in nearly a decade.

07:29.860 --> 07:35.100
These systems are so old, but yet they're just barely under that 64-bit line or across

07:35.100 --> 07:36.100
that 64-bit line.

07:36.100 --> 07:38.820
So you could just keep going at it until they die.

07:38.820 --> 07:40.700
That's how they treat them at the school districts.

07:40.700 --> 07:47.560
And for them, XFCE on Debian has been the go-to stack now for that entire time.

07:47.560 --> 07:49.300
And I don't think they're complaining yet.

07:49.300 --> 07:54.240
Things could change for Debian when it comes to how they handle code names in the future.

07:54.240 --> 07:57.280
This is not really related to the release of Debian, but we'll have a link in the show

07:57.280 --> 08:04.120
notes if you're familiar with Debian's sources.list file where it pulls down its different packages

08:04.120 --> 08:05.520
from different sources.

08:05.520 --> 08:09.440
There's always kind of been a naming scheme in there for stable or testing, and there's

08:09.440 --> 08:14.460
discussions right now about maybe tweaking that to be specific to a release or maybe

08:14.460 --> 08:15.460
a date-based thing.

08:15.460 --> 08:20.640
It's evolving into a much larger conversation, LWN, as always, has a fantastic write-up that

08:20.640 --> 08:22.640
if you're interested, we'll have a link in the show notes.

08:22.640 --> 08:26.560
Yeah, and I was reading through that agreeing with a lot of it, so yeah, highly recommended.

08:26.560 --> 08:27.560
Yeah, me too.

08:27.560 --> 08:28.560
I was like, you know what?

08:28.560 --> 08:32.560
As somebody who tangentially uses Debian, I am so in this line of thinking.

08:32.560 --> 08:36.960
Now, for those of you on Chromebooks, there's been a really important release for you this

08:36.960 --> 08:37.960
week.

08:37.960 --> 08:42.280
Yeah, Gallium OS 3.0 has been released, and I've been waiting for this for a long time.

08:42.280 --> 08:49.760
I've got an old C720, the Acer Chromebook, which is a perfectly functional laptop.

08:49.760 --> 08:56.040
And that was stuck on the old version of Gallium OS 2.0, which was based on Ubuntu, well, Zubuntu

08:56.040 --> 09:01.160
really, 16.04, and now we've finally got an 18.04 version.

09:01.160 --> 09:02.800
And so I have upgraded to that.

09:02.800 --> 09:05.760
Well, I actually did it just a new compave, it was just easier.

09:05.760 --> 09:09.160
And well, a bit like Debian, it's not really changed much.

09:09.160 --> 09:13.880
It's just based on 18.04 now, and otherwise works really well.

09:13.880 --> 09:18.080
Yeah, they really kind of billed themselves as doing a lot of work under the hood.

09:18.080 --> 09:22.440
So the desktop environment, they pitch as an attractive full-featured desktop, which

09:22.440 --> 09:25.400
is based around XFCE, surprisingly.

09:25.400 --> 09:27.180
But it's under the hood that matters.

09:27.180 --> 09:31.200
They have a touchpad driver optimized for Chromebooks, kernel schedulers that are optimized

09:31.200 --> 09:36.640
for the type of CPU in Chromebooks, and they have SSD patches for particular types of Chrome

09:36.640 --> 09:41.400
devices that need them that other distros don't have, and then they have, quote, fixes

09:41.400 --> 09:47.800
for dozens of device-specific bugs, end quote, all while requiring less memory and disk space

09:47.800 --> 09:50.640
than a typical Linux distro install.

09:50.640 --> 09:53.720
So it's pretty competitive for these devices, and there's so many of these, like the one

09:53.720 --> 09:55.720
you have and many, many, many more out there.

09:55.720 --> 09:59.920
They have a ton of devices that they support, link in the show notes, and you can try it

09:59.920 --> 10:04.200
out in a live environment, and you can also dual boot, so you don't even have to nuke

10:04.200 --> 10:05.520
Chrome OS if you don't want.

10:05.520 --> 10:10.200
Yeah, and you can pick up some of these older Chromebooks for next to nothing now, and my

10:10.200 --> 10:14.920
one's only got two gigabytes of RAM, so it's kind of a bit limited, but if you look inside

10:14.920 --> 10:20.520
it, it's almost all battery, and the battery life, mine has started to fade now, but when

10:20.520 --> 10:25.520
I first picked it up secondhand, pretty cheap, I think I paid about 80 pounds for it or something.

10:25.520 --> 10:26.520
Wow.

10:26.520 --> 10:28.080
The battery life was amazing.

10:28.080 --> 10:31.960
It was just a perfect little media machine and browsing machine.

10:31.960 --> 10:33.040
Yeah, like seven hours.

10:33.040 --> 10:34.040
I had one too.

10:34.040 --> 10:35.640
I got like seven hours out of it.

10:35.640 --> 10:40.160
Yeah, exactly, which is like premium laptop style, and if all you're doing is a bit of

10:40.160 --> 10:45.360
web browsing and stuff, but you want that extra kind of functionality that you get with

10:45.360 --> 10:51.280
proper GNU slash Linux rather than Chrome OS, then gallium OS is just a no-brainer

10:51.280 --> 10:55.960
as far as I'm concerned, so it's great to see that the project is still going and still

10:55.960 --> 10:56.960
releasing.

10:56.960 --> 10:57.960
Absolutely.

10:57.960 --> 11:02.200
I'll just add, it makes for a great homework workstation because you can get actual Libre

11:02.200 --> 11:07.160
Office on this thing, and yeah, it's getting there now with Chromebooks and Chrome OS,

11:07.160 --> 11:09.600
but this is the real deal, so we'll have a link there.

11:09.600 --> 11:13.760
Check it out because it's so lightweight, they're so inexpensive that if you've got

11:13.760 --> 11:18.400
kids and you're worried about them damaging the machine, this is a little bit safer on

11:18.400 --> 11:19.400
the pocketbook.

11:19.400 --> 11:24.160
It's a little bit easier to swallow when an $80 Chromebook gets destroyed versus like

11:24.160 --> 11:25.400
a $900 laptop.

11:25.400 --> 11:30.320
Well, I suppose regardless of which laptop you use, you probably, if you're listening

11:30.320 --> 11:34.880
to this show, like to stay current with the news, and Mozilla has a new service that they're

11:34.880 --> 11:36.400
hoping will pique your interest.

11:36.400 --> 11:40.880
Yeah, the first I heard about this was in our Slack when Drew from our team posted that

11:40.880 --> 11:48.800
he had seen this pop up and offer this $5 a month ad-free news subscription, but then

11:48.800 --> 11:52.680
when you actually click through, it turns out that they haven't launched it yet and

11:52.680 --> 11:56.520
they're just trying to gauge interest with a survey, but it seems that this popped up

11:56.520 --> 12:00.480
for quite a few people because it certainly did the rounds in the tech press.

12:00.480 --> 12:06.560
Yeah, this comes not long after Apple began offering Apple News+, which is $10 per month,

12:06.560 --> 12:10.800
and I think others are working on similar solutions.

12:10.800 --> 12:14.600
It appears Mozilla is working with Scroll.

12:14.600 --> 12:15.600
Scroll is still in beta.

12:15.600 --> 12:19.640
It doesn't even have open signups yet, but the company says it offers an ad-free access

12:19.640 --> 12:24.640
to a variety of websites including BuzzFeed, Slate, Gizmodo, Media Group Properties, and

12:24.640 --> 12:26.360
Vox Media sites.

12:26.360 --> 12:31.480
And I think the kind of pitch to this particular news service is not only do you get ad-free

12:31.480 --> 12:36.840
access to the news sites, but the service will actually read the news, like they have

12:36.840 --> 12:42.400
a supposedly human sounding voice that reads the news to you and supports cross-platform

12:42.400 --> 12:45.460
syncing of the news articles that you've read.

12:45.460 --> 12:49.520
That's their value pitch and Mozilla would probably white label this as the assumption

12:49.520 --> 12:52.560
and offer it as part of their overall bundling.

12:52.560 --> 12:56.000
I have a lot of thoughts on this, Joe, but I'm kind of curious to know what your first

12:56.000 --> 12:57.000
takes are.

12:57.000 --> 13:00.600
Well, my first thought was, ah, so they're going to add this to the VPN thing as well

13:00.600 --> 13:01.600
then.

13:01.600 --> 13:05.720
So we're slowly starting to see this drip feed of the services, plural, that they're

13:05.720 --> 13:06.720
going to offer.

13:06.720 --> 13:10.440
And as for news, I don't know really.

13:10.440 --> 13:16.760
I think that $5 a month is not very much, but how much do you actually get for that?

13:16.760 --> 13:22.080
Whereas you compare it with Apple, which is, what, $10 a month and you get a whole bunch

13:22.080 --> 13:23.080
more.

13:23.080 --> 13:27.120
It's magazine subscriptions, essentially, which I've actually found to be valuable.

13:27.120 --> 13:32.240
I subscribed to Linux format, Outsider, Car and Driver, and a couple of other magazines

13:32.240 --> 13:37.840
now that I never would have read if there wasn't for some way for me to do it on a display

13:37.840 --> 13:41.680
that is super high resolution and makes it really lazy to push a button.

13:41.680 --> 13:46.640
I might do the same for Mozilla's and drop Apple's if it was competitive, but part of

13:46.640 --> 13:51.740
me at the same time has questions about really trying to monetize news as a service that

13:51.740 --> 13:55.600
feels dirty to me and also feels unnecessary.

13:55.600 --> 14:03.160
Because there's so many ways to get news between aggregators, Google's news site, Twitter,

14:03.160 --> 14:08.040
all of the established news outlets that have been around for 10, 20, 30 years.

14:08.040 --> 14:10.900
There's so many ways to get news.

14:10.900 --> 14:14.560
Who's like, oh man, I wish somebody would just put all this together in one spot for

14:14.560 --> 14:15.560
me.

14:15.560 --> 14:16.560
Really?

14:16.560 --> 14:17.560
That's what an RSS reader does.

14:17.560 --> 14:22.360
Well, obviously not for our audience, I don't think, because also podcasts are a great way

14:22.360 --> 14:27.400
to digest important news and it's an established medium that's obviously successful.

14:27.400 --> 14:31.280
I guess I would give it a go, but I'm a bit of a news hound because of our line of work.

14:31.280 --> 14:36.160
I would take issue with that it feels dirty to try and monetize news because it's being

14:36.160 --> 14:39.440
monetized by tracking and adverts at the moment.

14:39.440 --> 14:42.720
And surely a subscription service is a way better way to do it.

14:42.720 --> 14:44.200
Yeah, fair point.

14:44.200 --> 14:49.840
I guess really that comment comes from some sort of idealist news should be a loss.

14:49.840 --> 14:53.720
It should be something you do as a public service.

14:53.720 --> 14:57.280
We've taken dramatic efforts to take advertising out of this show.

14:57.280 --> 14:59.040
This is an ad free show.

14:59.040 --> 15:04.280
I think it's important, but I appreciate that it's just not possible as somebody who has

15:04.280 --> 15:05.880
also been on the other side of that.

15:05.880 --> 15:10.460
I understand and Mozilla would be a trusted source and your point's taken, I would prefer

15:10.460 --> 15:12.100
it over tracking.

15:12.100 --> 15:16.840
Did you also see though that another little bit of information, we got kind of some brand

15:16.840 --> 15:20.440
name now for the Firefox VPN service?

15:20.440 --> 15:23.400
Yeah, Firefox Private Network, FPN.

15:23.400 --> 15:25.880
It's a bit like a VPN, eh?

15:25.880 --> 15:32.040
Yeah, and they appear to be teasing three different price tiers right now, $5, $10,

15:32.040 --> 15:34.160
or $13 per month.

15:34.160 --> 15:40.300
There's been some ads online and in a podcast I listened to, Radio Lab, they recently had

15:40.300 --> 15:42.960
an ad for the new Firefox services.

15:42.960 --> 15:46.760
It never even mentioned the fact that Firefox was a web browser.

15:46.760 --> 15:49.680
I think I might dig that clip up and play it in this week's Linux Unplugged if I can

15:49.680 --> 15:50.680
find it.

15:50.680 --> 15:51.960
Because it was like a surreal moment.

15:51.960 --> 15:58.480
I'm hearing an ad for Firefox on a podcast and it's nothing about what Firefox does.

15:58.480 --> 16:00.080
So they're really making a fast pivot.

16:00.080 --> 16:03.840
Before they've even got everything lined up, before everything's done and finalized, they're

16:03.840 --> 16:05.680
already advertising the service.

16:05.680 --> 16:08.000
They're trying to move quick on this.

16:08.000 --> 16:10.640
And hearing that ad in that podcast, it struck me.

16:10.640 --> 16:15.880
Not only was it, again, nothing about what Firefox actually does, but it was advertising

16:15.880 --> 16:19.820
something that does not exist.

16:19.820 --> 16:20.820
It's not yet done.

16:20.820 --> 16:22.400
In fact, it's not even complete.

16:22.400 --> 16:23.400
They don't have final pricing.

16:23.400 --> 16:28.940
They don't even have the whole thing put together yet, but they're already advertising it.

16:28.940 --> 16:34.560
That to me indicates that they're trying to move really quick and they're, in probably

16:34.560 --> 16:38.760
a very calculated way, putting the cart before the horse and deciding, we got to get out

16:38.760 --> 16:42.880
there on the messaging and start this rebranding, start talking about this even before everything's

16:42.880 --> 16:44.160
lined up.

16:44.160 --> 16:45.480
I think that's really fascinating.

16:45.480 --> 16:51.680
It is a very aggressive approach and I wonder if it will backfire on them because my rule

16:51.680 --> 16:57.320
of thumb, and okay, I'm not the greatest marketer in the world, but my rule is do the thing,

16:57.320 --> 17:00.960
then talk about the thing, or at least have it ready to go.

17:00.960 --> 17:05.920
If you start building too much hype too soon, then it could potentially be a letdown, whereas

17:05.920 --> 17:12.480
if it's like, hey, here's this service, have at it, then it feels harder to disappoint

17:12.480 --> 17:13.680
people that way.

17:13.680 --> 17:14.680
I can see that.

17:14.680 --> 17:20.260
I think maybe it's about steering a brand into a new direction that's been known for

17:20.260 --> 17:25.320
one thing for so long, and they feel like to get people to see it as something else,

17:25.320 --> 17:28.040
it's going to take years, so might as well get started now.

17:28.040 --> 17:30.520
Maybe that's it, or maybe there's something they're trying to get out ahead of.

17:30.520 --> 17:35.240
Maybe some source of, this is all speculation, who knows, but maybe some source of income,

17:35.240 --> 17:36.840
or who knows?

17:36.840 --> 17:38.880
They seem like they're trying to get ahead of this thing in a big way.

17:38.880 --> 17:45.360
I'm kind of really fascinated to see how they pull it off, and there's hints of maybe this

17:45.360 --> 17:49.520
is something that could really work for me, but their timing's a little bad too, to be

17:49.520 --> 17:50.520
honest with you.

17:50.520 --> 17:51.720
They needed to do this two years ago.

17:51.720 --> 17:56.480
Yeah, or maybe a year ago when people started to really wake up to privacy and tracking

17:56.480 --> 18:00.360
and stuff and VPNs really took off.

18:00.360 --> 18:03.880
So it does feel a little bit late, but if they do it correctly, they do have that brand

18:03.880 --> 18:09.280
power that maybe it'll take off, but it'll be very interesting to see it.

18:09.280 --> 18:15.560
But meanwhile this week, they were called out, Mozilla, as a villain by the ISPA, which

18:15.560 --> 18:23.920
is an industry body that represents ISPs in the UK, and this is some serious, serious

18:23.920 --> 18:25.380
Streisand effect.

18:25.380 --> 18:31.080
This is great because Mozilla is a bad guy because they're introducing a way to bypass

18:31.080 --> 18:32.080
government filtering.

18:32.080 --> 18:38.220
So they're not a bad guy because they're doing monitoring and filtering and spying, they're

18:38.220 --> 18:44.000
a bad guy because they're creating tools to undermine filtering and monitoring, and it's

18:44.000 --> 18:45.800
all because of the children, Joe.

18:45.800 --> 18:50.680
So this is from the Internet Services Providers Association, and they write on their site,

18:50.680 --> 18:56.320
ironically, they are pleased to announce the finalist for the 2019 Internet Hero and Villain

18:56.320 --> 18:57.680
Awards.

18:57.680 --> 19:02.220
And this is following, they write, weeks of consultation and large range of nominations

19:02.220 --> 19:05.480
received via email and Twitter from the public.

19:05.480 --> 19:09.520
Well, I'm satisfied, Joe.

19:09.520 --> 19:15.560
It's interesting that they put Mozilla alongside Article 13 and President Donald Trump.

19:15.560 --> 19:20.160
I better not say anything about the last one, but I think we can all agree that Article

19:20.160 --> 19:25.000
13 was something of a misstep by the European Commission.

19:25.000 --> 19:30.760
So it's just weird, but I think this has really just shone a light on the fact that Mozilla

19:30.760 --> 19:39.880
is introducing DNSR over HTTPS, something that probably not that many people knew about,

19:39.880 --> 19:45.320
and people will be looking into now and finding guides on how to enable it.

19:45.320 --> 19:47.920
And so it's just spectacularly backfired for the ISPA.

19:47.920 --> 19:53.120
It has, and what's great is they've been called out on it and then they've doubled down on

19:53.120 --> 19:54.120
it.

19:54.120 --> 19:55.560
And they just sound ridiculous.

19:55.560 --> 19:56.560
They sound like fear mongers.

19:56.560 --> 20:02.560
They write, the debate over DNS over HTTPS is evidently a topic that polarizes opinion,

20:02.560 --> 20:04.680
a.k.a. people are disagreeing with us.

20:04.680 --> 20:06.520
However, our position is clear.

20:06.520 --> 20:12.320
The ISPA believes that bringing in DNS over HTTPS by default would be harmful for online

20:12.320 --> 20:16.560
safety, cybersecurity, and consumer choice.

20:16.560 --> 20:25.060
They never actually say how or why, although we can speculate that the filtering is online

20:25.060 --> 20:29.760
safety and cybersecurity is the monitoring aspect that it's preventing.

20:29.760 --> 20:39.560
In a nutshell, what HTTP over DNS is, or DOH, is simply sending your DNS requests over HTTPS

20:39.560 --> 20:43.480
at the application level to a predefined host.

20:43.480 --> 20:44.680
That's the technology.

20:44.680 --> 20:49.720
Additionally, the applications you use that look up a name online, as you likely know,

20:49.720 --> 20:51.760
are using your system's DNS.

20:51.760 --> 20:57.760
And that's configured in most home cases to be your ISP or whatever your corporate server

20:57.760 --> 20:59.480
is, et cetera, et cetera.

20:59.480 --> 21:05.400
But with DNS over HTTPS, it's controlled at the application level.

21:05.400 --> 21:10.320
So Firefox could be using an entirely different DNS server than Chrome is using, which is

21:10.320 --> 21:13.800
also building support for DNS over HTTPS.

21:13.800 --> 21:18.280
Because it's at the application level, it can be baked in or it can be user defined.

21:18.280 --> 21:20.640
It all depends on the application.

21:20.640 --> 21:24.720
As a complete aside, it's funny that the ISPA site is so bad.

21:24.720 --> 21:29.360
Not only have they not specified a background color, so you've got gray text on a gray background

21:29.360 --> 21:35.640
for me with my weird Firefox profile that's messed up, but also you've got this really

21:35.640 --> 21:39.560
annoying pop up about cookies that you just can't get rid of.

21:39.560 --> 21:45.400
And on a desktop, it's not too bad, but on my phone, it took up a major part of the screen

21:45.400 --> 21:46.800
and I was just infuriating.

21:46.800 --> 21:48.960
Normally, okay, they pop up, they're annoying.

21:48.960 --> 21:50.360
You click yes, go away, whatever.

21:50.360 --> 21:52.720
But this just wouldn't let you get rid of it.

21:52.720 --> 21:54.840
So so annoying.

21:54.840 --> 22:00.120
I'm pretty sure we're going to dig more into DNS over HTTPS because we've been experimenting

22:00.120 --> 22:01.120
a little bit.

22:01.120 --> 22:07.700
I'll just say members on our team have come up with ways to use DNS over HTTPS to say,

22:07.700 --> 22:10.980
get internet access while on a plane without having to pay for the extremely expensive

22:10.980 --> 22:12.600
internet service.

22:12.600 --> 22:19.280
The way DOH hides DNS queries inside a regular HTTPS traffic means that third party observers

22:19.280 --> 22:24.160
are unable to sniff that traffic and tell what the DNS queries are, where they're going,

22:24.160 --> 22:28.320
et cetera, and redirect them or capture them or even just monitor them, right?

22:28.320 --> 22:30.000
There's a lot of vulnerabilities in DNS.

22:30.000 --> 22:31.720
It's over plain text.

22:31.720 --> 22:33.440
It's something that's easily intercepted.

22:33.440 --> 22:35.080
It's something that's easily observed.

22:35.080 --> 22:36.200
This changes all of that.

22:36.200 --> 22:37.480
That's the advantage.

22:37.480 --> 22:41.320
The downside is it all comes to the implementation.

22:41.320 --> 22:47.520
It could be very easy to have every Firefox user's DNS over HTTPS traffic all going to

22:47.520 --> 22:52.840
Cloudflare and now Cloudflare has got millions and millions of Firefox users data, at least

22:52.840 --> 22:54.040
for their DNS queries.

22:54.040 --> 22:58.920
So there are downsides, but how it's implemented is separate from how the technology actually

22:58.920 --> 23:03.880
works, because you could set up your own proxy on a VPS somewhere and just use it yourself.

23:03.880 --> 23:05.520
That's what we've been doing internally for testing.

23:05.520 --> 23:07.520
Yeah, I was going to mention Cloudflare.

23:07.520 --> 23:11.040
That is unfortunate, and it's, to be honest, what I thought this was about at first, that

23:11.040 --> 23:14.620
they were pointing that, oh, they're putting it all through Cloudflare, but no, they don't

23:14.620 --> 23:15.620
even care about that.

23:15.620 --> 23:21.200
It's just the fact that Mozilla are potentially helping people get around blocks, but Mozilla

23:21.200 --> 23:24.600
have said that they're not implementing it by default anyway.

23:24.600 --> 23:27.560
So it's just something that users can do if they want to.

23:27.560 --> 23:31.800
But yeah, we're going to definitely have to talk more about this plane situation because

23:31.800 --> 23:36.160
I've got a couple of plane flights coming up where that'll be very useful to me.

23:36.160 --> 23:39.840
Yes, it is super, super useful when you've got something urgent you just need to send

23:39.840 --> 23:45.360
off a message and you know it's capable, but they're blocking it some way artificially.

23:45.360 --> 23:52.680
I think also what Mozilla's statement was is that DNS over HTTPS would not be enabled

23:52.680 --> 23:55.200
by default in the UK.

23:55.200 --> 23:58.720
Now that might mean everywhere, but the spokesperson for Mozilla specifically said it would not

23:58.720 --> 24:01.120
be enabled in the UK.

24:01.120 --> 24:05.920
It may still happen here in the US and Google's also a big proponent of this.

24:05.920 --> 24:11.880
They see it as a way to bypass filtering and restrictions and get more people onto their

24:11.880 --> 24:12.880
services.

24:12.880 --> 24:16.840
So Google's really into this and Mozilla sees it as a way to prevent censorship and filtering.

24:16.840 --> 24:23.800
So both browsers seem to be really near implementation and it's not clear which will be on by default

24:23.800 --> 24:24.800
and which won't.

24:24.800 --> 24:28.080
Well, I have a feeling I might well be implementing it at some point in the future.

24:28.080 --> 24:33.880
Yeah, I want to implement my own, but I'm not necessarily keen on a lot of applications

24:33.880 --> 24:37.000
doing this because this isn't just a web browser technology.

24:37.000 --> 24:38.160
Any application could do this.

24:38.160 --> 24:44.160
Telegram could bake this in Skype and there is a reason to have system level DNS and network

24:44.160 --> 24:45.160
level DNS.

24:45.160 --> 24:50.000
There's benefits to every application on your system talking to the same name resolution

24:50.000 --> 24:51.000
servers.

24:51.000 --> 24:56.400
It could get wonky for end users and produce unexpected results when maybe half your applications

24:56.400 --> 24:58.960
are talking to different DNS servers.

24:58.960 --> 25:04.920
I know they have ways to build in some accommodations for that, but Firefox is a pretty solid accommodation

25:04.920 --> 25:07.680
system for that very scenario and it's still not perfect.

25:07.680 --> 25:11.360
It does feel like early days for this, but it seems to be inevitable that this is the

25:11.360 --> 25:12.360
way we're all going to go.

25:12.360 --> 25:15.440
And I'm sure that these problems will get ironed out one way or another.

25:15.440 --> 25:21.600
You know what else is inevitable is I still feel like the fuchsia bomb is inevitable.

25:21.600 --> 25:26.400
And this week that just got turned up like a whole nother notch, Joe.

25:26.400 --> 25:28.440
I'm legitimately concerned about fuchsia.

25:28.440 --> 25:33.560
Yeah, this is Google's alternative OS that they've very seldom spoken about.

25:33.560 --> 25:37.660
We've heard little snippets here and there and mostly the code has done the talking.

25:37.660 --> 25:43.280
It's been in public repos and it's permissively licensed and essentially an alternative to

25:43.280 --> 25:44.280
Linux.

25:44.280 --> 25:45.280
Right.

25:45.280 --> 25:48.400
The public first found out about fuchsia in August of 2016 when they dumped a whole bunch

25:48.400 --> 25:49.400
of code.

25:49.400 --> 25:52.760
They dumped a whole bunch of code over the wall on GitHub and everything that we know

25:52.760 --> 25:57.440
about it really is either from a couple of statements by Google engineers, some early

25:57.440 --> 26:03.760
on that were incredibly in depth and others that have been in like Google IO keynotes

26:03.760 --> 26:04.760
and whatnot.

26:04.760 --> 26:09.440
But when you look at the actual source code, it sort of does all of the talking.

26:09.440 --> 26:15.040
It is clear that there is a lot being built here to make it the next generation Android

26:15.040 --> 26:16.840
with all kinds of devices.

26:16.840 --> 26:21.960
People will kind of talk about it as an IoT operating system, but so much of the tech

26:21.960 --> 26:25.520
in this is built for creating great desktop experiences.

26:25.520 --> 26:28.680
And when you look at the fact that one of their target devices is an Intel NUC, which

26:28.680 --> 26:32.360
is a desktop device, that doesn't seem like an IoT thing.

26:32.360 --> 26:37.440
Yeah, this is clearly about more than just IoT and more than just phones and desktops

26:37.440 --> 26:38.440
even.

26:38.440 --> 26:43.800
And so now you can go to fuchsia.dev and actually learn a fair bit about it.

26:43.800 --> 26:47.440
They haven't specified a background color for a part of it, so I'm annoyed about that.

26:47.440 --> 26:53.680
But apart from that, it is a good resource to kind of see where they want to go with

26:53.680 --> 26:54.680
this.

26:54.680 --> 26:58.480
And if they're going to continue to do this Android style throw over the wall, it means

26:58.480 --> 27:05.200
they're going to be in control of it potentially forever, or at least have significant control

27:05.200 --> 27:06.200
over it.

27:06.200 --> 27:10.360
So the topic of fuchsia really almost deserves its own dedicated show because there's so

27:10.360 --> 27:15.200
much going on here, because there's a lot happening around fuchsia that makes it viable

27:15.200 --> 27:16.200
down the road.

27:16.200 --> 27:22.800
For example, the adoption of Go and Flutter are technologies that are at home on fuchsia.

27:22.800 --> 27:27.720
And when fuchsia launches as a general available OS, these developers will be ready to pick

27:27.720 --> 27:28.720
up and get going.

27:28.720 --> 27:33.640
In fact, fuchsia also supports running Python and Rust as well as a bunch of other languages.

27:33.640 --> 27:39.040
But one of the really strong appeals to it is this process model where essentially everything

27:39.040 --> 27:40.220
is isolated.

27:40.220 --> 27:44.760
You can do away with containers now because it's just integrated into the way the operating

27:44.760 --> 27:46.280
system works.

27:46.280 --> 27:49.560
Even the file systems themselves live entirely within user space.

27:49.560 --> 27:54.440
They're not linked or loaded to the kernel, they're just simply user space processes that

27:54.440 --> 27:59.680
can be implemented as servers that other processes can then attach to.

27:59.680 --> 28:03.520
And they talk about you can do total modifications of these file systems and it's just a matter

28:03.520 --> 28:07.840
of killing a process and relaunching them, forget rebooting your operating system.

28:07.840 --> 28:11.960
And then you have the GPU driver architecture, which is called Magma.

28:11.960 --> 28:18.960
And these are also drivers that do not execute inside the kernel, but again, user space processes.

28:18.960 --> 28:21.620
And Magma is designed around Vulkan.

28:21.620 --> 28:28.360
And so you've got a lot of modern technologies that are kind of in a way, it's like Google

28:28.360 --> 28:32.960
looked at all of the mistakes and compromises they made with Android and Chrome OS and said

28:32.960 --> 28:38.640
to themselves, if we took every lesson we learned and built a new operating system,

28:38.640 --> 28:43.160
where we controlled it completely, even if it's open source, they're still doing the

28:43.160 --> 28:45.020
over the wall approach.

28:45.020 --> 28:50.720
And we build up an entire ecosystem around Go and Flutter and Dart.

28:50.720 --> 28:55.860
I mean, they support Python on the damn thing, like it's ready to go almost, it's so close.

28:55.860 --> 29:00.540
And this new website is loaded full of documents that we have a researcher pouring through

29:00.540 --> 29:03.000
right now to try to learn as much as we can.

29:03.000 --> 29:07.440
But there is more and more signs that Google is relatively far along with Fuchsia.

29:07.440 --> 29:09.920
And we don't have a lot of details yet.

29:09.920 --> 29:14.040
But one thing that stands out to me as a clear user interface that would be great on like

29:14.040 --> 29:20.280
a mobile device is this thing they call stories, which is a user facing logical container,

29:20.280 --> 29:25.640
encapsulating human activity, satisfied by one or more related modules.

29:25.640 --> 29:29.800
Stories allow the users to organize activities in ways they find natural.

29:29.800 --> 29:32.960
Stories are presented in a visual thing called a story shell.

29:32.960 --> 29:35.120
It's Microsoft's timeline feature.

29:35.120 --> 29:39.720
But in this whole shell around based around your, your activity in your timeline, and

29:39.720 --> 29:41.000
they call it story.

29:41.000 --> 29:42.460
That's not for IoT devices.

29:42.460 --> 29:43.460
Give me a break.

29:43.460 --> 29:47.920
No, that is clearly aimed at mobile and maybe kind of home assistance and stuff, which I

29:47.920 --> 29:52.040
suppose technically are IoT, but we're not talking about the low end thermostats and

29:52.040 --> 29:54.460
stuff like that.

29:54.460 --> 30:00.240
You said that it's as if they looked at the mistakes they made with Chrome OS and Android,

30:00.240 --> 30:04.200
but it's almost like they've taken an even bigger step back and looked at the mistakes

30:04.200 --> 30:12.160
of Unix and Linux and everything that we've known really, for the last like 40 odd years.

30:12.160 --> 30:18.240
And thinking about how to just reimplement it all completely from scratch with modern

30:18.240 --> 30:21.400
technologies and ideas, design ideas.

30:21.400 --> 30:27.240
There's also some fundamental differences in design philosophy, which kind of really

30:27.240 --> 30:35.080
puts fuchsia opposite to Linux and a is permissively licensed, which is going to make driver manufacturers

30:35.080 --> 30:40.000
very happy because they don't have to worry about, quote, GPL contamination, end quote.

30:40.000 --> 30:42.640
But there's the design of the kernel itself.

30:42.640 --> 30:46.600
Fuchsia is a microkernel and Linux is a monolithic kernel.

30:46.600 --> 30:50.520
And this is an age old debate that goes back like forever in the industry.

30:50.520 --> 30:55.600
And we're going to see these two things compete head to head on the world stage.

30:55.600 --> 31:00.760
And then, of course, last but not least, fuchsia will be controlled by Google with an ecosystem

31:00.760 --> 31:05.880
around it that it cultivates like Go and Flutter and Kubernetes and all of these things that

31:05.880 --> 31:10.820
make it applicable on mobile and server against Linux, which is developed by the entire world

31:10.820 --> 31:14.560
and not owned by a single person or controlled by a single company.

31:14.560 --> 31:18.600
And it's going to be on all these different fronts, totally different approaches going

31:18.600 --> 31:21.600
head to head, potentially when fuchsia launches.

31:21.600 --> 31:26.480
And it really does seem close, like they've been working on this for a long time.

31:26.480 --> 31:27.620
They're getting close.

31:27.620 --> 31:30.320
And what they do with it, we have yet to see.

31:30.320 --> 31:34.800
They've been downplaying what they would, they just say it's an experimental operating

31:34.800 --> 31:35.800
system.

31:35.800 --> 31:38.320
But they've invested so much tech into this.

31:38.320 --> 31:40.120
It seems it's clearly more than that.

31:40.120 --> 31:45.320
Yeah, it's potentially quite worrying, really, that they could use their vast resources,

31:45.320 --> 31:50.280
even spending a few hundred million on it wouldn't be that much to them.

31:50.280 --> 31:53.760
I mean, it's a bit more than pocket change, but it's still not very much.

31:53.760 --> 31:56.720
And what could you accomplish with that?

31:56.720 --> 32:01.800
And maybe they could just take over the world like Linux has.

32:01.800 --> 32:06.760
I mean, it might take them a little while, five, 10 plus years, but we could be in a

32:06.760 --> 32:12.040
situation in another decade where Linux is sort of playing second fiddle.

32:12.040 --> 32:13.760
I mean, look what happened with Firefox.

32:13.760 --> 32:18.040
Okay, that's a much smaller bit of software, relatively speaking.

32:18.040 --> 32:23.280
But Firefox was going strong and looking like it was going to take over.

32:23.280 --> 32:27.400
And then suddenly, Google comes along with the resources that they have to make Chrome

32:27.400 --> 32:31.080
and it just basically has wiped out Firefox.

32:31.080 --> 32:35.720
And what if that same thing happened with Linux and we ended up having this Android

32:35.720 --> 32:40.800
style operating system that's just thrown over the wall and yes, is open source, but

32:40.800 --> 32:45.320
fundamentally is just controlled by one giant company?

32:45.320 --> 32:47.360
It makes me a bit uncomfortable, really.

32:47.360 --> 32:50.240
To truly disrupt Linux, you just have to disrupt it on the server.

32:50.240 --> 32:52.400
I mean, I just toss that out there nonchalantly.

32:52.400 --> 32:53.960
That's a huge statement.

32:53.960 --> 32:57.160
But let's go with where you're taking this for a moment.

32:57.160 --> 33:00.320
There's some things about Fuchsia that I think are super appealing.

33:00.320 --> 33:04.440
First of all, Google has a clear demand for an efficient operating system, even if it's

33:04.440 --> 33:05.920
just in their data center.

33:05.920 --> 33:10.480
It's sort of that same reason I just tossed Kubernetes under the bus a moment ago.

33:10.480 --> 33:13.920
The reason that makes Kubernetes kind of appealing to people is Google has every incentive to

33:13.920 --> 33:17.520
make it work great for them if only they ever used it internally.

33:17.520 --> 33:21.120
And that kind of inherently makes it a great product because they're at such scale that

33:21.120 --> 33:23.760
they're solving problems people need solved.

33:23.760 --> 33:25.540
Fuchsia would provide them that same sort of utility.

33:25.540 --> 33:30.320
They could take Linux off of their own servers and put Fuchsia on there and they would grok

33:30.320 --> 33:36.720
the benefits of reducing the complexity now because you just get rid of things like namespaces

33:36.720 --> 33:42.600
and control groups and Docker as a concept goes away because every application is protected

33:42.600 --> 33:43.960
and isolated.

33:43.960 --> 33:47.280
And even the file systems are protected and isolated.

33:47.280 --> 33:52.440
It's really well designed for dense application servers that could run even more applications

33:52.440 --> 33:55.440
than we can now because you get rid of all these middle layers that make it possible

33:55.440 --> 33:57.500
and make them isolated.

33:57.500 --> 34:03.480
That right there could be enough to drive the market because that gets them more density

34:03.480 --> 34:06.240
out of their existing data center footprint.

34:06.240 --> 34:09.640
And if the operating system's free, it's pretty hard to turn down.

34:09.640 --> 34:14.440
If they make it easy enough to run Linux applications, it could be a slam dunk.

34:14.440 --> 34:18.080
Now that's a far, far, far maybe.

34:18.080 --> 34:20.160
I've yet to see anything really take Linux out.

34:20.160 --> 34:23.180
And most of the time what ends up happening is Linux adapts, incorporates the best and

34:23.180 --> 34:25.040
continues on.

34:25.040 --> 34:30.320
In this one case, because of who Google is, their market position and the way they're

34:30.320 --> 34:34.280
building this, yeah, it worries me.

34:34.280 --> 34:39.720
Because Fuchsia worries me 10 times more than the Windows subsystem for Linux does on Windows

34:39.720 --> 34:40.720
10.

34:40.720 --> 34:41.720
Way, way more.

34:41.720 --> 34:45.600
What this is represents a much bigger threat to me than anything that Microsoft is doing

34:45.600 --> 34:46.600
right now.

34:46.600 --> 34:50.040
There is another distinct possibility, though, and that is that Google will just do what

34:50.040 --> 34:54.280
they always do and spend a load of money developing something for ages and ages and then just

34:54.280 --> 34:55.280
drop it.

34:55.280 --> 34:56.280
Absolutely.

34:56.280 --> 34:57.280
And that's what I'm hoping for.

34:57.280 --> 34:58.840
That's what I'm betting on.

34:58.840 --> 35:02.720
Well, be sure to grab every single episode of Linux Action News.

35:02.720 --> 35:07.520
Check over to linuxactionnews.com slash subscribe for all the ways to get our new episodes.

35:07.520 --> 35:10.940
And linuxactionnews.com slash contact for ways to get in touch with us.

35:10.940 --> 35:14.380
And I want to mention that Linux Academy is hiring multiple positions, including Ruby

35:14.380 --> 35:17.600
on Rails developers, instructors, and many more.

35:17.600 --> 35:21.760
Go to linuxacademy.com, scroll all the way down at the bottom of the page, click Careers

35:21.760 --> 35:22.760
and it'll link you there.

35:22.760 --> 35:26.720
A lot of these positions are full time, remote, with full benefits.

35:26.720 --> 35:27.720
Come work with us.

35:27.720 --> 35:28.720
That'd be pretty awesome.

35:28.720 --> 35:32.180
We'll be back next Monday with our weekly take on the latest Linux and open source news.

35:32.180 --> 35:33.760
I'm at Chris LAS.

35:33.760 --> 35:35.120
I'm at Charles Ressington.

35:35.120 --> 35:38.000
Thank you for joining us and we will see you next week.

35:38.000 --> 36:04.680
Take care, bye-bye.

