WEBVTT

00:00.000 --> 00:16.280
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.280 --> 00:19.880
This is episode 60, recorded on July 1st, 2018.

00:19.880 --> 00:20.880
I'm Chris.

00:20.880 --> 00:21.880
And I'm Joe.

00:21.880 --> 00:22.880
Hello, Joe.

00:22.880 --> 00:23.880
It's good to be connected with you.

00:23.880 --> 00:27.240
And we have huge news, lots to get into this week.

00:27.240 --> 00:30.840
So let's start down at the infrastructure level, the chip level, if you will.

00:30.840 --> 00:37.160
Yes, Psi5, who are the predominant company producing RISC-V chips and boards, have come

00:37.160 --> 00:42.440
out and said that they can do better than ARM when it comes to power efficiency.

00:42.440 --> 00:43.440
That's quite the claim.

00:43.440 --> 00:47.240
Yeah, the California-based Psi5 announced the availability of the E2 Core IP series

00:47.240 --> 00:53.520
of chips, which are configurable microcontroller cores that use less power and can cost less

00:53.520 --> 00:55.600
than, say, an ARM processor.

00:55.600 --> 01:00.880
So remember, Psi5 licenses its chip designs to other companies, which then customize them

01:00.880 --> 01:04.600
for manufacturing on their own inside their own products.

01:04.600 --> 01:09.240
But compared to ARM, they have a much more open approach to the designs of the actual

01:09.240 --> 01:10.420
CPUs.

01:10.420 --> 01:15.980
And the E2 series extends Psi5's product line with two new standard cores, the E21, which

01:15.980 --> 01:22.160
is a mainstream performance core for microcontrollers, sensors, motion things, Internet of Things

01:22.160 --> 01:23.700
types of devices.

01:23.700 --> 01:28.400
But then there's also the E20, which is a power-efficient standard core designed for

01:28.400 --> 01:34.520
more mixed devices, like finite state controls and devices like open and controlling of DAMs.

01:34.520 --> 01:39.080
You combine that with their previously announced desktop-level designs, which are built first

01:39.080 --> 01:42.560
for Linux, and the whole range is open.

01:42.560 --> 01:46.780
The whole range, the spec, the design, all of it is open.

01:46.780 --> 01:49.840
And some of them are Linux-first devices.

01:49.840 --> 01:53.680
Except that they've run into a bit of criticism recently for not being quite as open as people

01:53.680 --> 01:54.680
hoped they would be.

01:54.680 --> 01:56.320
Joe, I know.

01:56.320 --> 01:57.640
The devil is always in the details.

01:57.640 --> 02:03.280
You hear all these good things, and then somebody comes along and points out the well, actually.

02:03.280 --> 02:04.280
So this is Ron Minnick.

02:04.280 --> 02:07.640
He has been working with the Core Boot project for more than a decade.

02:07.640 --> 02:12.280
He spearheads the effort to getting Core Boot on new Chrome OS devices at Google.

02:12.280 --> 02:14.440
And he commented recently on the Hi5 chips.

02:14.440 --> 02:20.760
He says, the Hi5 is really no more open today than your average ARM SoC.

02:20.760 --> 02:23.680
In fact, it may be even less open than the Power Chips.

02:23.680 --> 02:29.040
He says, I realize there's been a lot of hope that RISC-V implied general openness.

02:29.040 --> 02:34.700
But open instruction sets do not necessarily result in open implementations.

02:34.700 --> 02:40.100
An open implementation of RISC-V will require a commitment on the part of a company to open

02:40.100 --> 02:44.200
up at all levels, not just the instruction set.

02:44.200 --> 02:50.200
And if you dig down here, it turns out there is this issue with the DRAM controller and

02:50.200 --> 02:57.240
the fact that the timing for the DRAM has to be set on boot every single time by proprietary

02:57.240 --> 02:58.240
firmware.

02:58.240 --> 03:03.160
However, it seems that Ron talking about this may have actually worked because Sci-5 are

03:03.160 --> 03:06.080
now promising to open source all that stuff.

03:06.080 --> 03:09.920
Yeah, talk about a really fast response on Sci-5's part.

03:09.920 --> 03:13.620
And I wonder why it took a cage rattling to even get here.

03:13.620 --> 03:18.160
But Sci-5 has commented on this saying that they are committed to supporting an open source

03:18.160 --> 03:23.000
community and they're pleased to report that after discussions with IP partners, they're

03:23.000 --> 03:25.480
going to be able to release all of the code.

03:25.480 --> 03:31.060
The source code for the FSBL, including the DDR initialization, will be available shortly.

03:31.060 --> 03:36.140
We can attest here that there is no other firmware run by the system during boot.

03:36.140 --> 03:42.580
This is quite a relief to me because I'd pinned so many hopes on RISC-V as the future of computing.

03:42.580 --> 03:43.580
Not right now.

03:43.580 --> 03:48.720
It's ready for mainstream use, but it's Linux first, as you said, and it's supposed to be

03:48.720 --> 03:49.720
completely open.

03:49.720 --> 03:53.640
And when I first heard about it not being open, I was really disappointed by that.

03:53.640 --> 03:58.120
So I'm really hoping that you make good on these promises and that we can actually get

03:58.120 --> 04:04.240
some properly free software running, free hardware sometime soon that can compete with

04:04.240 --> 04:05.240
x86.

04:05.240 --> 04:08.400
Well, OK, maybe that's a bit of a dream, but at least can compete with ARM, right?

04:08.400 --> 04:09.400
It's so close.

04:09.400 --> 04:10.400
It's so close.

04:10.400 --> 04:13.300
Like, look at the Hi5 Unleashed, the U540.

04:13.300 --> 04:14.640
It's really almost there.

04:14.640 --> 04:18.460
It's a five core, 1.5 gigahertz CPU.

04:18.460 --> 04:19.900
It's fully Linux capable.

04:19.900 --> 04:24.100
It's got gigabit ethernet, eight gigabytes of DDR4 RAM.

04:24.100 --> 04:29.500
It's got a micro SD card reader, and it's around $1,000 today before it's even hit mass

04:29.500 --> 04:31.200
market scale.

04:31.200 --> 04:37.760
That's pretty dang close to a standard desktop or especially a standard ARM device.

04:37.760 --> 04:43.060
If this is today, 2018, then imagine where we could be in 2020 for $1,000.

04:43.060 --> 04:45.120
It could be a very competitive system.

04:45.120 --> 04:48.940
And the fact that they are building this with Linux first and apparently even going back

04:48.940 --> 04:53.600
and fixing rough areas that needed to be addressed is a very positive sign, I think.

04:53.600 --> 04:57.120
So I say it's still worth following because it's getting more and more promising.

04:57.120 --> 05:02.360
Yeah, but you're not going to be able to dual boot and play Fortnite on it, are you?

05:02.360 --> 05:04.240
That's what I have a mobile device for.

05:04.240 --> 05:07.960
In the meantime, at least I'll be sending emails potentially a little more securely.

05:07.960 --> 05:14.080
Yeah, the EFF have announced start TLS everywhere, which they are hoping is going to be to email

05:14.080 --> 05:16.880
as let's encrypt is to HTTPS.

05:16.880 --> 05:17.880
Right.

05:17.880 --> 05:23.960
So it's really all about start TTLS, which is an addition to SMTP, which really allows

05:23.960 --> 05:28.280
one email server to say to the other, hey, I just want to connect to you over an encrypted

05:28.280 --> 05:29.720
communications channel.

05:29.720 --> 05:33.960
And then the recipient email server will say, sure, let's negotiate an encrypted communications

05:33.960 --> 05:34.960
channel.

05:34.960 --> 05:38.960
The server set up the channels and the emails delivered securely so that anybody listening

05:38.960 --> 05:42.920
on the traffic between the servers only sees the encrypted data.

05:42.920 --> 05:48.280
But keep in mind, start TTLS is not a replacement for secure end to end solutions completely.

05:48.280 --> 05:53.040
Instead, it really allows email service providers and administrators to provide a baseline measure

05:53.040 --> 05:57.720
of security just against outside adversaries in general and provides authentication and

05:57.720 --> 05:58.720
verification.

05:58.720 --> 06:02.120
Yeah, because the problem this is aiming to solve is that start TLS is used by a lot of

06:02.120 --> 06:06.760
servers, but because they're not validating the certificates that they're using, then

06:06.760 --> 06:08.120
they may as well not be.

06:08.120 --> 06:12.240
Yeah, this lack of validation almost makes it pointless.

06:12.240 --> 06:16.160
And as a result, the ecosystem is kind of stuck in this whole chicken and egg problem.

06:16.160 --> 06:20.500
No one validates certificates because the other party often doesn't have a valid one.

06:20.500 --> 06:24.320
And the long tail of mail servers that continue to use invalid certificates because no one's

06:24.320 --> 06:25.720
validating them anyway.

06:25.720 --> 06:30.400
So who wants to fix it when no one's really doing it right in the very first place?

06:30.400 --> 06:33.800
But that's where this effort really comes in.

06:33.800 --> 06:35.760
Start TLS to the rescue here.

06:35.760 --> 06:41.520
If everyone can use start TLS with a let's encrypt back end to automatically get a valid

06:41.520 --> 06:46.980
certificate from let's encrypt, then when you implement this at day one, you'll have

06:46.980 --> 06:50.600
a valid certificate, then it's all of a sudden it's worth verifying and checking.

06:50.600 --> 06:54.680
The more servers that have valid certificates, the more reason there is to verify and check

06:54.680 --> 06:57.440
and you sort of solve this chicken and egg problem.

06:57.440 --> 07:01.040
Now obviously this isn't going to replace end to end encryption, but if you have to

07:01.040 --> 07:09.020
use email, then it's way better if you've got start TLS configured properly and working.

07:09.020 --> 07:12.160
So it's a good initiative by the EFF to do this, I think.

07:12.160 --> 07:16.520
They're kind of expanding a little bit here, but they're expanding in the right directions

07:16.520 --> 07:17.520
as far as I'm concerned.

07:17.520 --> 07:22.360
Okay, well, let's shift gears completely and talk about a story that got a lot of attention

07:22.360 --> 07:24.440
in the last couple of days.

07:24.440 --> 07:27.960
Gen2's GitHub organization was compromised.

07:27.960 --> 07:32.840
Yeah, a malicious actor took control and locked the developers out.

07:32.840 --> 07:35.080
And so that's a go to GitHub support.

07:35.080 --> 07:41.880
And thankfully it was disabled pretty quickly and now it seems to be almost fixed.

07:41.880 --> 07:47.260
It's not quite back up yet, but they have sorted out all of the malicious commits and

07:47.260 --> 07:51.400
everything and they're just dealing with the pull requests as we record this.

07:51.400 --> 07:54.480
It's quite embarrassing for Gen2, isn't it?

07:54.480 --> 07:56.240
Really this is all hands to yellow alert.

07:56.240 --> 08:01.600
We're not full red alert here because the GitHub organization that got hacked was a

08:01.600 --> 08:07.520
mirror of this project's upstream source and work, including the stuff that touches the

08:07.520 --> 08:10.960
distributions and all of that was not affected by this.

08:10.960 --> 08:16.100
So it sucks and it's embarrassing, but it didn't actually impact the core source code

08:16.100 --> 08:17.680
of the project.

08:17.680 --> 08:23.320
And to Gen2's credit, because these things do happen, their response has been outstanding.

08:23.320 --> 08:26.980
In fact, one of the best responses I've seen from a Linux distribution.

08:26.980 --> 08:28.840
They have status pages.

08:28.840 --> 08:33.380
They have a Wiki entry that's a post-mortem as they learn more and they're keeping their

08:33.380 --> 08:35.920
GitHub users updated as well.

08:35.920 --> 08:40.780
And they're clearly documenting their current interactions with the GitHub organization.

08:40.780 --> 08:42.600
It's really done responsibly.

08:42.600 --> 08:46.320
So I have to give Gen2 credit for that because bad things happen and when you consider how

08:46.320 --> 08:50.280
many Linux distributions are out there, the fact that their infrastructure isn't attacked

08:50.280 --> 08:53.080
and compromised more often is pretty remarkable.

08:53.080 --> 08:57.440
And when it is, I think Gen2's response here should be looked at as a model.

08:57.440 --> 09:00.680
It sucks that it happened, but how they're handling the response is top notch.

09:00.680 --> 09:04.320
But surely no one's using Gen2 these days anyway, they've all moved over to Arch, haven't

09:04.320 --> 09:05.320
they?

09:05.320 --> 09:06.320
Oh, that hurts.

09:06.320 --> 09:07.320
That hurts.

09:07.320 --> 09:08.320
That hurts, Joe.

09:08.320 --> 09:09.320
That hurts.

09:09.320 --> 09:11.240
Obviously not because people cared.

09:11.240 --> 09:14.560
Surely no one would be dumb enough to run a server on Gen2 or anything.

09:14.560 --> 09:15.560
Hey now.

09:15.560 --> 09:17.040
You know I've done that.

09:17.040 --> 09:18.400
You know I've done that.

09:18.400 --> 09:25.000
The project has really handled this well and the information was spread wide and far.

09:25.000 --> 09:29.280
So there does still seem to be interest in the old Gen2 project, even if people like

09:29.280 --> 09:31.280
me have stopped using it on their servers.

09:31.280 --> 09:33.240
That was years ago, Joe.

09:33.240 --> 09:37.120
I was a different person then.

09:37.120 --> 09:42.960
dio.co slash action.

09:42.960 --> 09:47.320
That's where you go to get a $100 credit over at DigitalOcean.

09:47.320 --> 09:51.600
Now, I'd be sitting here and I'd be pretty amped about a $10 credit, because that's what

09:51.600 --> 09:52.600
it used to be.

09:52.600 --> 09:56.700
But when crazy DigitalOcean blow out the doors and took it up to $100, I thought there's

09:56.700 --> 10:01.320
only going to be maybe a week of this, maybe two weeks, maybe three weeks.

10:01.320 --> 10:02.320
I don't know.

10:02.320 --> 10:03.320
Maybe they forgot.

10:03.320 --> 10:04.800
Maybe they forgot they're giving away $100.

10:04.800 --> 10:08.080
I don't know what the explanation is because it's too much.

10:08.080 --> 10:09.360
It's too much.

10:09.360 --> 10:13.560
You can do an incredible amount at DigitalOcean for just $10.

10:13.560 --> 10:16.960
But with the $100 credit, you can actually take things to the next level.

10:16.960 --> 10:18.440
Try out their flexible droplets.

10:18.440 --> 10:20.580
I just deployed one this weekend.

10:20.580 --> 10:23.640
You mix and match the resources most appropriate for your needs.

10:23.640 --> 10:27.200
They also have dedicated CPU droplets.

10:27.200 --> 10:31.320
Now hypothetically, let's say you were going to set up a PeerTube alternative to totally

10:31.320 --> 10:32.520
crush YouTube.

10:32.520 --> 10:38.260
You would want the dedicated CPU droplets because you get raw performance on those suckers.

10:38.260 --> 10:42.200
So figure out which one works best for you and your application.

10:42.200 --> 10:49.560
And just get started by visiting do.co action with an easy-to-use dashboard, a well-documented

10:49.560 --> 10:55.560
API, clustered deployments, global availability, data centers all over the world, enterprise

10:55.560 --> 11:00.600
grade SSDs for every single droplet, 40 gigabit connections coming into those Linux boxes

11:00.600 --> 11:09.920
that are running KVM with an entire open source stack, do.co action.

11:09.920 --> 11:14.920
Let's talk about Amazon, AWS, and their desktop as a service.

11:14.920 --> 11:19.600
So that used to be just Windows 7 and Windows 10, but we don't care about that.

11:19.600 --> 11:26.040
But now they have launched Amazon Linux 2 with a Marte desktop, which you can run on

11:26.040 --> 11:28.560
almost any device.

11:28.560 --> 11:32.280
This is Amazon taking Linux very, very seriously indeed.

11:32.280 --> 11:33.280
Yeah.

11:33.280 --> 11:37.920
They've launched the Amazon Linux workspace that runs Linux 2, like Joe just mentioned,

11:37.920 --> 11:43.440
and you get Marte, Firefox, Evolution, Pigeon, LibreOffice, and there's a few extra things

11:43.440 --> 11:48.160
you can install, including development tools that are great for developing for AWS, surprise,

11:48.160 --> 11:49.160
surprise.

11:49.160 --> 11:53.680
They try to really kind of pigeonhole it to four particular types of workloads.

11:53.680 --> 11:57.040
They say it's going to be great for people that are looking for a productivity environment

11:57.040 --> 12:02.560
for LibreOffice, or if you want to run something in kiosk mode and economically deploy applications

12:02.560 --> 12:04.920
that run in kiosk mode, it'd be great for that.

12:04.920 --> 12:11.640
And for quote, unquote, Linux workloads, which they define as data science, machine learning,

12:11.640 --> 12:16.200
engineering, and other Linux-friendly workloads.

12:16.200 --> 12:20.440
Engineering is a pretty big category, so I like that they consider data science and engineering

12:20.440 --> 12:21.440
Linux workloads.

12:21.440 --> 12:28.280
And then of course, the desktop environment, which is a combination of workspaces and Amazon

12:28.280 --> 12:33.800
Linux 2 that makes it great for all of this, and they include GCC, Mono, and Java, so you

12:33.800 --> 12:39.840
can build, test, and deploy your applications to the AWS infrastructure from your AWS Linux

12:39.840 --> 12:40.840
desktop, Joe.

12:40.840 --> 12:43.000
Well, of course.

12:43.000 --> 12:45.360
It could be quite handy though, I can imagine.

12:45.360 --> 12:50.120
It means that you can take your Linux desktop with you anywhere and just log in, done.

12:50.120 --> 12:53.280
You don't have to worry about backups, you don't have to worry about migrating data to

12:53.280 --> 12:56.820
new machines when you upgrade hardware or whatever.

12:56.820 --> 12:58.520
So that kind of seems appealing.

12:58.520 --> 13:02.920
But then, I don't know, about losing control of my computing like this, I don't think as

13:02.920 --> 13:04.440
a personal user I'd be interested.

13:04.440 --> 13:07.280
I could imagine this being very popular in the enterprise though.

13:07.280 --> 13:08.280
Yeah, it's funny you say that.

13:08.280 --> 13:11.360
It's definitely not really for personal use, although I've been trying it all week, and

13:11.360 --> 13:13.840
I'll talk about that here in a second.

13:13.840 --> 13:17.800
But I have witnessed something fascinating in my time in the industry, and that is sort

13:17.800 --> 13:19.840
of this ebb and flow.

13:19.840 --> 13:25.160
We've started with time-sharing and remote systems, and then we ebbed towards personal

13:25.160 --> 13:31.680
computers, getting them as fast as possible, getting as much local resources as possible,

13:31.680 --> 13:36.800
and then we sort of flowed back into time-shared computing, but we call it cloud computing

13:36.800 --> 13:37.800
now.

13:37.800 --> 13:42.000
When I was really getting my start in the industry, it was when DOS was still the primary

13:42.000 --> 13:43.000
desktop, if you can believe it.

13:43.000 --> 13:45.400
That's how old I am, I know.

13:45.400 --> 13:52.280
When I first started in IT, my job was to convert DOS stations into remote windowed

13:52.280 --> 14:00.320
terminal environments, and the way we did this was with these really basic thin clients.

14:00.320 --> 14:05.600
They would run Windows CE, and then later they would run Linux, and they would connect

14:05.600 --> 14:11.240
to a much more powerful central server with a full desktop environment.

14:11.240 --> 14:14.760
That was in the early 90s and then into the late 90s.

14:14.760 --> 14:21.720
And then in the 2000s, it was really a focus on getting really fast PCs and desktops.

14:21.720 --> 14:25.560
Later on, it was the bring-your-own-device phenomenon.

14:25.560 --> 14:31.520
But as things kind of settled down, I have heard from more and more audience members

14:31.520 --> 14:36.760
who do their entire job in a remote Amazon session, and I've even heard from some of

14:36.760 --> 14:42.520
them that were doing them in Linux Monte sessions, testing them for Amazon for over a year.

14:42.520 --> 14:47.240
This has been in the works, and they were off the record running this as their daily

14:47.240 --> 14:50.340
driver for a year.

14:50.340 --> 14:54.300
And I thought, okay, well, maybe one day Amazon's going to announce this.

14:54.300 --> 14:56.640
Maybe one day this will come out, but it's been a year.

14:56.640 --> 14:58.240
It's not happening.

14:58.240 --> 15:02.580
And then this week, they dropped this huge bomb.

15:02.580 --> 15:09.840
If you have an AWS account and you're current on all of your payments, you can go spin up

15:09.840 --> 15:13.600
a Monte desktop on Amazon's infrastructure.

15:13.600 --> 15:17.560
And that means you get 800 megabytes up and down download.

15:17.560 --> 15:20.880
That means you get incredible CPU performance.

15:20.880 --> 15:26.000
That means you get the speed of the AWS infrastructure as your desktop.

15:26.000 --> 15:27.440
And you can spin these things up.

15:27.440 --> 15:28.440
You can clone them.

15:28.440 --> 15:32.560
You can set up a master image, and you can attach them to your Active Directory so you

15:32.560 --> 15:36.640
can authenticate with the same user accounts that you've been using throughout your entire

15:36.640 --> 15:37.640
corporation.

15:37.640 --> 15:41.840
I mean, this is a slick system, and it works really well.

15:41.840 --> 15:44.560
There's just one major flaw.

15:44.560 --> 15:47.060
There's no Linux client to connect.

15:47.060 --> 15:48.400
They have a Windows client.

15:48.400 --> 15:49.400
They have a Mac client.

15:49.400 --> 15:51.860
They have an iOS and Android client.

15:51.860 --> 15:54.320
They even have a web client.

15:54.320 --> 15:56.920
But if you're on Linux, no client for you.

15:56.920 --> 15:58.360
Doesn't matter if you even try the web client.

15:58.360 --> 15:59.620
No client for you.

15:59.620 --> 16:01.960
People have tried to get it working under Wine.

16:01.960 --> 16:04.360
There's a tutorial to use gaming on Linux.

16:04.360 --> 16:06.660
There's a tutorial to use Crossover Office.

16:06.660 --> 16:09.720
You can't get it working with stock Wine without a whole bunch of tweaks.

16:09.720 --> 16:10.720
No client for Linux.

16:10.720 --> 16:14.280
So you got to bust out a Mac to test this thing?

16:14.280 --> 16:15.280
You bastard.

16:15.280 --> 16:16.280
How dare you?

16:16.280 --> 16:18.660
Yeah, basically to try the full-fledged client.

16:18.660 --> 16:22.480
I mean, I initially tried it on an iOS device, and that was just painful.

16:22.480 --> 16:27.060
But to really spend some time, I busted out a Mac to build out the whole environment and

16:27.060 --> 16:28.060
loaded XFCE.

16:28.060 --> 16:29.060
Nice.

16:29.060 --> 16:30.060
How did that go?

16:30.060 --> 16:33.980
Well, I couldn't quite figure out how to change the default login environment because they're

16:33.980 --> 16:37.040
not using, like, GDM or anything like that.

16:37.040 --> 16:41.160
And they're not using, like, the defaults when you could go into Etsy and change your

16:41.160 --> 16:42.160
default X session.

16:42.160 --> 16:43.600
They're not using that stuff.

16:43.600 --> 16:47.180
So I wasn't able to make it the default desktop environment.

16:47.180 --> 16:49.220
But it's essentially RHEL.

16:49.220 --> 16:50.620
It's their version of RHEL.

16:50.620 --> 16:53.160
So I was able to add the extra repository.

16:53.160 --> 16:56.300
So I had started installing all kinds of additional applications on this thing.

16:56.300 --> 16:57.580
Had a lot of fun with it, really.

16:57.580 --> 17:00.400
It's a real utilitarian setup.

17:00.400 --> 17:03.640
It is MATE without any frills.

17:03.640 --> 17:05.460
It's pretty basic.

17:05.460 --> 17:08.280
It's got very limited software installed by default.

17:08.280 --> 17:12.360
But if you're willing to have some fun and you're willing to add the extra repositories

17:12.360 --> 17:16.740
and things like that that are just normal for RHEL, you can get pretty far.

17:16.740 --> 17:21.040
You do kind of hit a wall when it comes to things like Telegram and Slack and more kind

17:21.040 --> 17:25.220
of modern work environment required software.

17:25.220 --> 17:27.520
But even that's actually possible to get working.

17:27.520 --> 17:30.180
So what did you think of the implementation of MATE then?

17:30.180 --> 17:32.340
Boring, but functional.

17:32.340 --> 17:36.860
And something I think I'll probably keep around for a little while, I get a couple of months.

17:36.860 --> 17:40.420
I have this free tier account where I can run it for a few months for free.

17:40.420 --> 17:45.300
And they've included this feature that they've had with some other implementations on AWS.

17:45.300 --> 17:49.980
But it's nice to see it by default with the workspaces where if I log out, after an hour

17:49.980 --> 17:53.460
of inactivity, it automatically suspends the workspace.

17:53.460 --> 17:55.860
So it's not sitting there running up the clock.

17:55.860 --> 17:56.860
OK.

17:56.860 --> 18:00.900
Because I asked a prominent MATE developer, I think you can guess who.

18:00.900 --> 18:02.580
I think we asked the same person.

18:02.580 --> 18:03.580
Yeah.

18:03.580 --> 18:05.940
And I asked him if I can quote him.

18:05.940 --> 18:06.980
And he said yes.

18:06.980 --> 18:11.460
And he said that is the worst implementation of MATE he'd seen.

18:11.460 --> 18:14.420
Yeah, I'd say that's a fair interpretation.

18:14.420 --> 18:16.540
I mean, to me, it seems utilitarian.

18:16.540 --> 18:24.340
My understanding is that Amazon used the inspiration of an upstream MATE developers set up to build

18:24.340 --> 18:25.700
this desktop.

18:25.700 --> 18:31.120
And it's not that it's bad because, I mean, stock MATE itself isn't that awful.

18:31.120 --> 18:33.860
It's just it's basic and utilitarian.

18:33.860 --> 18:37.060
But at the same time, you can modify a lot of that.

18:37.060 --> 18:40.960
It's pretty easy to snap into an existing organization.

18:40.960 --> 18:46.220
And you can get like 700 megabytes down, 700 megabytes up with like two milliseconds of

18:46.220 --> 18:47.220
latency.

18:47.220 --> 18:51.220
So it's got its disadvantages, but it also has its advantages.

18:51.220 --> 18:54.700
I think the lack of a Linux client, though, is shameful.

18:54.700 --> 19:00.460
Not only has there been ongoing community requests since 2014 to make a Linux client

19:00.460 --> 19:07.040
and a commitment by one of the AWS development teams to actually add this as a feature.

19:07.040 --> 19:13.780
The real shameful aspect of this is to really use this, you have to have a fully licensed

19:13.780 --> 19:20.220
copy of Windows or Mac OS on a Mac, which is ridiculous.

19:20.220 --> 19:21.640
What's the point of that?

19:21.640 --> 19:28.060
Why not allow folks to use super cheap, nice, economical implementations of, say, the XFCE

19:28.060 --> 19:35.140
desktop or Ubuntu MATE that allows them to then remote in to their organization's desktop.

19:35.140 --> 19:39.500
Not having a Linux client takes out the number one economic advantage of this.

19:39.500 --> 19:44.940
I just had a great conversation while I was in Texas with a listener, their entire organization.

19:44.940 --> 19:47.860
More than 100 desktops do just this.

19:47.860 --> 19:53.900
They connect in on a daily basis to Amazon's workspaces, and they run their entire environment

19:53.900 --> 19:55.480
in a virtual desktop.

19:55.480 --> 19:58.440
And all of those machines are Windows boxes.

19:58.440 --> 20:01.980
Not because they want them to be Windows boxes, but because that's how they could get the

20:01.980 --> 20:07.500
official client at an economical scale that worked with large business purchasing contracts.

20:07.500 --> 20:13.300
So they bought a hundred Dell workstations to run a remote desktop client that remotes

20:13.300 --> 20:14.300
into Amazon.

20:14.300 --> 20:15.860
And then what's the point?

20:15.860 --> 20:19.180
If they could make a Linux version, you could save a ton of money.

20:19.180 --> 20:22.180
And you could have it on a whole range of devices.

20:22.180 --> 20:26.700
Yeah, that does seem silly having to pay for a Windows license on top of this.

20:26.700 --> 20:29.820
Surely they're going to sort that out sooner rather than later.

20:29.820 --> 20:33.220
In the meantime, if you want to go play with it, you can play around for free.

20:33.220 --> 20:38.540
And if you have a paid AWS account, you could mess around with their power instance.

20:38.540 --> 20:46.460
It's four CPUs, 16GB of RAM, 100GB of storage, and then their crazy fast AWS internet.

20:46.460 --> 20:48.140
There's a lot you can do here.

20:48.140 --> 20:53.540
Also, it made me realize as a desktop Linux user, I could potentially use this to spin

20:53.540 --> 20:59.420
up Windows 7 instances or Windows 10 instances to bang out the occasional Windows thing.

20:59.420 --> 21:04.700
So it's kind of got me just re-looking at hosted desktops and maybe rebuilding my own

21:04.700 --> 21:05.700
once again.

21:05.700 --> 21:09.620
Well, maybe Google's looking over at this thinking, hmm, we should get into that.

21:09.620 --> 21:14.880
They certainly have reaffirmed their commitment to Linux this week by upping their membership

21:14.880 --> 21:19.540
of the Linux Foundation to the platinum level, meaning half a million dollars a year.

21:19.540 --> 21:28.380
Yeah, $500,000 a year going to the Linux Foundation, which is the highest level of membership in

21:28.380 --> 21:31.860
the Linux Foundation's nonprofit organization.

21:31.860 --> 21:37.380
They were a silver membership, I think, before, which still is $100,000 a year.

21:37.380 --> 21:43.160
But platinum members, as part of that, get access to a lot more, apparently including

21:43.160 --> 21:45.460
the Linux Foundation board.

21:45.460 --> 21:50.740
A member of Google's team, Google's head of open source strategy, she'll be joining the

21:50.740 --> 21:56.180
Linux Foundation's board of directors after this reaffirmation of their commitment to

21:56.180 --> 21:57.180
Linux.

21:57.180 --> 22:03.420
The first thing I thought of when I heard this was Fuchsia and how Google is seemingly

22:03.420 --> 22:11.140
desperate to get rid of the Linux kernel in all of its devices, certainly with the phones

22:11.140 --> 22:16.220
and with the Chromebooks, which may come together, we talked about that last week, under Fuchsia.

22:16.220 --> 22:18.940
That's kind of a long-term goal for them.

22:18.940 --> 22:24.580
But then you have to think about the cloud side of things, and that really is why they're

22:24.580 --> 22:25.820
doing this.

22:25.820 --> 22:28.900
It's not really about Android and Chrome OS, I don't think.

22:28.900 --> 22:29.940
I agree.

22:29.940 --> 22:35.180
You don't pay the Linux Foundation $500,000 to further development of MIR.

22:35.180 --> 22:43.420
You join the Linux Foundation to assert some level of influence over the rest of the industry.

22:43.420 --> 22:51.540
As an example, Google is joining AT&T, Cisco, Fujitsu, Hitachi, Huawei, IBM, Intel, Microsoft,

22:51.540 --> 22:56.220
NEC, Oracle, Qualcomm, Samsung, and VMware as Platinum members.

22:56.220 --> 23:02.300
But the Linux Foundation in totality now has over 800 members at all levels, so keep all

23:02.300 --> 23:03.580
of that in mind.

23:03.580 --> 23:09.380
Google will now be one of the biggest contributors, but they're really just one, sitting amongst

23:09.380 --> 23:13.540
Cisco and IBM and Intel and AT&T.

23:13.540 --> 23:15.860
But it is about influence.

23:15.860 --> 23:18.660
It is about getting access.

23:18.660 --> 23:23.220
And that's why when I hear these announcements, I'm excited, and I feel like it'll further

23:23.220 --> 23:27.740
the interest of Linux in business.

23:27.740 --> 23:30.760
It doesn't really fire me up.

23:30.760 --> 23:32.380
It's very much a power play.

23:32.380 --> 23:36.620
You have to wonder to what extent Tencent joining the Linux Foundation at this same

23:36.620 --> 23:42.160
level has influenced this decision by Google to up their commitment here.

23:42.160 --> 23:47.060
Because Tencent is a huge Chinese company that are massive in the cloud there, they're

23:47.060 --> 23:48.060
growing.

23:48.060 --> 23:51.540
They're starting to have real influence over the industry.

23:51.540 --> 23:57.460
And you wonder if Google wanted to keep up with them by doing this, but then you would

23:57.460 --> 24:02.580
imagine that it's probably been quite a while in development, this decision.

24:02.580 --> 24:07.700
I don't think that they would have just done this with a couple of days notice.

24:07.700 --> 24:10.620
Yeah, the pragmatist in me says, you're probably right, Joe.

24:10.620 --> 24:12.740
It's probably been in the works for months.

24:12.740 --> 24:18.700
But then the conspiracy bacon person inside me goes, well, actually, how much is this?

24:18.700 --> 24:21.060
It's just a response to Microsoft.

24:21.060 --> 24:27.500
Because Microsoft A, already a platinum level member, B, just bought GitHub, and C, has

24:27.500 --> 24:32.940
been making meme images with heart emojis all day long for things that are open source.

24:32.940 --> 24:37.220
And Google's sitting back going, man, we're kind of losing this open source narrative

24:37.220 --> 24:38.660
to Microsoft.

24:38.660 --> 24:41.420
Maybe we should make a big investment.

24:41.420 --> 24:48.740
Because along with this $500,000 check that they wrote, they also released this sort of

24:48.740 --> 24:50.580
glowing PR statement.

24:50.580 --> 24:53.020
And it goes a little bit like this.

24:53.020 --> 24:58.540
Open source is an essential part of Google's culture, and we've long recognized the potential

24:58.540 --> 25:07.020
of open ecosystems to grow quickly, which, of course, is a hint towards Android, claiming

25:07.020 --> 25:11.700
that the monster fragmentation that is Android is a nod to open ecosystems.

25:11.700 --> 25:12.860
I love how they reframe that.

25:12.860 --> 25:14.100
It continues.

25:14.100 --> 25:18.900
We want things to be more resilient and adaptable in the face of change, and we want to create

25:18.900 --> 25:20.420
better software.

25:20.420 --> 25:24.540
The Linux Foundation is a fixture in the open source community.

25:24.540 --> 25:25.540
Full stop.

25:25.540 --> 25:26.540
Let's stop right here.

25:26.540 --> 25:27.540
No, it's not.

25:27.540 --> 25:29.260
It is a full fixture in the commercial industry.

25:29.260 --> 25:34.020
It is a full fixture in Payne, Linus, Torvalds, and we all appreciate that.

25:34.020 --> 25:39.580
But in the community of open software developers and free software developers, it is but a

25:39.580 --> 25:40.580
footnote.

25:40.580 --> 25:41.960
And then they continue.

25:41.960 --> 25:47.940
By working closely with the organization, we can better engage the community at large

25:47.940 --> 25:53.380
and continue to build a more inclusive ecosystem where everyone can benefit.

25:53.380 --> 25:56.700
Again, none of that is true.

25:56.700 --> 26:00.660
By working closely with the Linux Foundation, they can better engage with the corporate

26:00.660 --> 26:05.700
side of money makers off of Linux, free software, and open source.

26:05.700 --> 26:07.640
And I'm not saying that's a bad thing.

26:07.640 --> 26:08.640
That's why it's here.

26:08.640 --> 26:13.100
Richard Stallman himself is okay with people making money off of free software.

26:13.100 --> 26:18.480
And this part about building a more inclusive ecosystem where everyone can benefit, I'll

26:18.480 --> 26:20.360
believe that when I see Fuchsia.

26:20.360 --> 26:21.760
Show me the source to Fuchsia.

26:21.760 --> 26:23.980
Show me that you've licensed it in the GPL.

26:23.980 --> 26:26.460
Then I'm going to believe that statement.

26:26.460 --> 26:31.140
Right now, when you write a yearly $500,000 check to the Linux Foundation, what you're

26:31.140 --> 26:34.660
getting from me as part of the Linux community is an acknowledgement that you're helping

26:34.660 --> 26:39.740
Linus the Torvald's salary and helping further the interests of commercial Linux.

26:39.740 --> 26:43.780
Not a bad thing, but I'm not opening up my pants to Google for this.

26:43.780 --> 26:44.780
Okay.

26:44.780 --> 26:48.220
But what about their investment in KaiOS, which they've done this week?

26:48.220 --> 26:54.600
KaiOS, I think that's how you say it, K-A-I-O-S, which is what Firefox OS ended up being after

26:54.600 --> 26:56.340
that died.

26:56.340 --> 26:59.620
It shows that they do care about open source, doesn't it?

26:59.620 --> 27:05.260
Or does it just show that they care about getting their apps on systems that are too

27:05.260 --> 27:09.100
low powered and cheap to run Android because it's so bloated?

27:09.100 --> 27:14.020
KaiOS, which is powering those new banana phones from Nokia, like the ones from the

27:14.020 --> 27:18.300
Matrix that you guys probably heard about a few weeks ago or maybe even months ago now,

27:18.300 --> 27:21.660
where the phone slides down and it looks like the old school Matrix phone, but a little

27:21.660 --> 27:22.660
more modern.

27:22.660 --> 27:24.820
Well, it's running KaiOS.

27:24.820 --> 27:27.220
So it's already on some devices in India.

27:27.220 --> 27:32.300
In fact, it's one of the number one mobile OSes in India already.

27:32.300 --> 27:38.220
And now it's shipping on these Nokia devices, which are available to Joe but not to us slackers

27:38.220 --> 27:40.060
over here in the States apparently.

27:40.060 --> 27:47.620
And they're running this KaiOS, which turns out to be a fork of Firefox OS just without

27:47.620 --> 27:49.260
all of the pesky source.

27:49.260 --> 27:53.540
You know, don't ask them about that because they're quote unquote working on it right

27:53.540 --> 27:54.540
now.

27:54.540 --> 27:57.940
They've been quote unquote working on it for months and they just haven't gotten around

27:57.940 --> 28:02.740
to publishing the source code, which I think I was just lamenting last week about Fuchsia

28:02.740 --> 28:08.900
OS and when you change the license to something much more permissive, then everyone else loses.

28:08.900 --> 28:15.380
Well, here we are one week later and we have KaiOS and Google just spent $22 million to

28:15.380 --> 28:19.040
make sure they could get the Google apps on the devices that you were going to buy to

28:19.040 --> 28:22.620
avoid the Google ecosystem, at least me.

28:22.620 --> 28:28.420
That was actually what appealed to me is you have these traditional non-smart phone Linux

28:28.420 --> 28:34.500
powered devices that have GPS, they have LTE, they have Wi-Fi hotspot.

28:34.500 --> 28:41.740
They have basic phone functionality in a device that has 20 days of standby time.

28:41.740 --> 28:46.360
And one of the other perks was no tie in to the Google tracking system.

28:46.360 --> 28:49.700
But all of that has changed with this $22 million investment because you're going to

28:49.700 --> 28:54.580
get Google apps built into this thing, Google Maps, Gmail, et cetera.

28:54.580 --> 28:58.700
Which for you is a bad thing, but for the users is not because a lot of people want

28:58.700 --> 28:59.700
that stuff.

28:59.700 --> 29:00.700
Surely most people do.

29:00.700 --> 29:01.700
Right.

29:01.700 --> 29:02.700
Absolutely.

29:02.700 --> 29:03.700
It's definitely a good thing.

29:03.700 --> 29:08.260
You know, Google Maps, YouTube, Google search on your phone is generally a good thing.

29:08.260 --> 29:11.140
It gives you more access to information.

29:11.140 --> 29:15.940
I just kind of lost out because this was sort of a safe haven I could, I could maybe jump

29:15.940 --> 29:20.940
to where my phone could be like my phone used to be when I was in my twenties.

29:20.940 --> 29:25.580
In my twenties, the phone was just something I kept in my pocket for days and on the weekends

29:25.580 --> 29:29.840
I'd plug it in and then I would unplug it on Monday and I would use my phone.

29:29.840 --> 29:33.300
And I just kind of missed that because I just, you know, a little nostalgic for that.

29:33.300 --> 29:34.700
And this was sort of the answer.

29:34.700 --> 29:36.780
I mean, it was a matrix style phone.

29:36.780 --> 29:39.240
Like what could be more of the nineties?

29:39.240 --> 29:44.700
But Google, Google recognized that fact and they decided to swoop in and give them basically

29:44.700 --> 29:47.780
$22 million, which they couldn't resist.

29:47.780 --> 29:49.340
Which is such chump change to Google.

29:49.340 --> 29:53.180
I mean, they get fined way more than that regularly.

29:53.180 --> 29:56.380
This is just back of the sofa rummaging for them.

29:56.380 --> 30:00.020
But this is very important for them because it's potentially reaching the next billion

30:00.020 --> 30:02.220
as people keep saying.

30:02.220 --> 30:07.740
It's them getting their apps on feature phones that are incredibly cheap compared with smartphones

30:07.740 --> 30:11.820
to markets where people simply can't afford an iPhone or an Android device.

30:11.820 --> 30:12.820
Yeah.

30:12.820 --> 30:13.820
I don't disagree.

30:13.820 --> 30:17.660
Tim, don't you kind of feel like this is an acknowledgement by the market and by the biggest

30:17.660 --> 30:22.220
market player, Google, that Firefox OS was onto something, that there was value there?

30:22.220 --> 30:25.260
I mean, maybe $22 million worth of value?

30:25.260 --> 30:29.580
Well, evidently it does have some value to them, but I don't think it's specifically

30:29.580 --> 30:30.580
Firefox OS.

30:30.580 --> 30:35.340
I think it's just that this is an OS which will work on a feature phone and Android is

30:35.340 --> 30:36.340
too bloated.

30:36.340 --> 30:38.340
As I said before, it's just too big.

30:38.340 --> 30:45.460
We've tried twice now to make affordable Android phones with low amounts of RAM and everything,

30:45.460 --> 30:50.780
but they just cannot get that price low enough because you can't make hardware cheap enough

30:50.780 --> 30:55.460
that is capable of running Android and having anything other than a horrendous experience.

30:55.460 --> 31:01.900
So they needed some other route into that market and this appears to be their best bet.

31:01.900 --> 31:06.780
I don't think it's necessarily a massive vote of confidence in it in particular.

31:06.780 --> 31:07.780
No.

31:07.780 --> 31:11.580
You just described the market pressure for Fuchsia, didn't you?

31:11.580 --> 31:12.580
Damage-o.

31:12.580 --> 31:18.940
Well, indeed, we'll have to see what actually becomes of Fuchsia and whether or not not

31:18.940 --> 31:23.500
being based on Java and all of that stuff means that it can actually run on much lower

31:23.500 --> 31:24.500
end hardware.

31:24.500 --> 31:28.260
I'm not holding my breath on that and Google loves a hedge, don't they?

31:28.260 --> 31:32.940
They love to hedge their bets and that's why they've got like 10 messaging services or

31:32.940 --> 31:38.340
whatever because they just always back a few different horses and then see which one of

31:38.340 --> 31:41.100
them actually works out and then just kill the other stuff.

31:41.100 --> 31:47.980
And so they might well, if Fuchsia works out, just kill KaiOS and just start shipping Fuchsia,

31:47.980 --> 31:55.220
but they've got different groups competing within the same company and that probably

31:55.220 --> 31:58.620
is quite a good strategy because it means that they all want to keep their jobs so they

31:58.620 --> 32:00.660
want to make the thing as good as possible.

32:00.660 --> 32:01.660
The decision year.

32:01.660 --> 32:07.220
Like 2018 for Google is where they're hedging their bets and positioning themselves to go

32:07.220 --> 32:08.220
anywhere.

32:08.220 --> 32:15.060
Chrome OS with Linux apps, an investment in Fuchsia, doubling down on Linux Foundation's

32:15.060 --> 32:23.620
yearly contribution while in the background, $22 million is getting kicked over to KaiOS.

32:23.620 --> 32:29.180
Like 2018 right now, what we are watching at the midway point is Google at a fork in

32:29.180 --> 32:33.980
the road and I would bet within the next year or so they're going to make a hard decision

32:33.980 --> 32:36.460
and double down on a certain direction.

32:36.460 --> 32:40.580
Right now we are witnessing them line everything up to see which is the best route.

32:40.580 --> 32:41.580
No way.

32:41.580 --> 32:42.580
They'll never make a decision.

32:42.580 --> 32:47.580
They've got enough money to just keep throwing it at different bets and they can wait a few

32:47.580 --> 32:48.580
years.

32:48.580 --> 32:51.940
I don't think we're going to see a decision within a year or two on this.

32:51.940 --> 32:57.760
I think that they've got enough options to just keep them all as options and try a little

32:57.760 --> 33:01.180
bit here, try a little bit there, see how that does, see how that does.

33:01.180 --> 33:05.660
I just don't think you're going to get them, for example, killing Fuchsia or killing Chrome

33:05.660 --> 33:08.100
OS or killing Android.

33:08.100 --> 33:09.260
That's not how Google works.

33:09.260 --> 33:10.340
Look at them historically.

33:10.340 --> 33:14.860
They just have multiple competing products from the same company.

33:14.860 --> 33:15.860
Yeah, you know what?

33:15.860 --> 33:16.860
Fair enough.

33:16.860 --> 33:17.860
I can't argue that.

33:17.860 --> 33:18.860
You make a good point.

33:18.860 --> 33:19.860
I guess there's only one way.

33:19.860 --> 33:21.860
We just have to wait and see and we'll keep covering it.

33:21.860 --> 33:26.940
LinuxActionNews.com slash subscribe for all the ways to get new episodes of this here

33:26.940 --> 33:27.940
podcast.

33:27.940 --> 33:28.940
Yeah.

33:28.940 --> 33:29.940
And LinuxActionNews.com slash contact.

33:29.940 --> 33:33.060
If you want to get in touch and tell us how wrong we are.

33:33.060 --> 33:38.180
And you can also support what we're doing at our Patreon page, Patreon.com slash Jupiter

33:38.180 --> 33:39.180
Signal.

33:39.180 --> 33:42.660
We'll be back next Monday with our weekly take on the latest Linux and open source news.

33:42.660 --> 33:44.460
I'm at Chris LAS.

33:44.460 --> 33:45.780
I'm at Joe Rissington.

33:45.780 --> 33:48.500
Thank you for joining us and we'll see you next week.

33:48.500 --> 34:05.100
See you later.

