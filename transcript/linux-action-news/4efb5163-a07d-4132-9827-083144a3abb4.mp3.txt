Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 102, recorded on April 21st, 2019. I'm Chris.
And I'm Joe.
Hello, Joe. Good to be connected with you, especially on a week that's packed with news.
Let's kick things off with the new Ubuntu 19.04 release.
You're not going to play that horrible disco duck tune.
I mean, I could. No, no, we keep it very serious here, Joe.
Yeah. So it's a pretty big release for them, even though it's an interim one. It's quite
important at least on the desktop, certainly with the performance improvements, which I
hear are massive.
You hear? You mean you didn't? You weren't like drawn in? You weren't tempted to give
it a go?
When you use Xfce day to day, the difference between incredibly slow and slightly less
slow doesn't really make much difference. And you get back on Xfce and it's like super
fast.
All right. Fair enough. Fair enough. Don't get me don't get me going yet. Let me just
say this. Yeah, it actually is. I have been running it for weeks and weeks. And what you
are really seeing with this release is the result of work from both upstream and downstream
developers. Memory enhancements, CPU optimization and even strange and small animation tweaks
really combined to make it feel very fast.
The Gnome shell on Ubuntu 1904 is the fastest Gnome shell I've experienced. The improved
performance is immediately noticeable. You combine that with Linux 5.0 under the hood,
which gives you AMD FreeSync support, touch screen support for Raspberry Pis. You also
get Mesa 19.0 in the stack, as well as the option to install the Nvidia proprietary drivers
during installation. All of that comes together to make 1904 really about performance.
Is it enough to tempt you back over to Gnome?
It certainly was enough to make me say, OK, I've got to give it a fair go for a while.
And I did. I've been running it, like I said, for probably really two months.
But now it's out. Are you going to stick with it or are you just going back to plasma?
OK, all right. Well, so I will say this, Joe, it's not it's not there quite yet for me.
It is such an improvement. It's really great. If you're a Gnome shell fan, this is this
is really great. It's just I've had a couple of situations where it still doesn't really
hold up for me. So I'm not switching back yet, but I am I am filled with respect for
what not only has the entire project pulled off, but for the contributions the different
upstream and downstream developers have made and for how far they've taken it in one release
cycle.
Fair enough. We've also got the flavors. They've all released their 1904 and there's not a
huge amount to say about many of them. Ubuntu Budgie seems to be probably the biggest in
terms of improvements and changes.
Yeah, well, one of the things that I liked about Budgie is they've switched out to the
Nemo file manager, which is just a great file manager with lots of nice features from the
good old days of Nautilus, as well as some as some like font and UI tweaks throughout.
It's a really solid release. Mate is also a really solid release. And I got to admit
Joe, Ubuntu 1904 is great.
Yeah, a few of the components have now been ported to GTK 3 and that effort continues.
I'm really hoping that by 2004, the whole thing is going to be ready for that. But otherwise,
pretty solid release. I don't think I'm going to really switch to it because I stick on
the LTSs, but it gives me hope for the next LTS definitely.
You've been trying to get me to try it out for, well, I don't know, two years now. And
it was ironically the performance improvements to GNOME 3.32 shell that got me to try out
XFCE. I got a taste for a faster GTK environment and then I wanted to go all in. And so I went
over to XFCE and I spent about 20 minutes configuring and was pretty happy with the
results. I think really part of what's turned me off for so long is I've been there done
that and all of the screenshots are very unappealing, but you don't have to go by the default config.
You can theme it yourself. And I spent, like I said, just a little bit of time doing that.
And I ended up with a very modern stack with a traditional desktop interface and I'm staying
for now at least. So 1904 was great, but at the end of it, I decided I think I'm going
to try out Manjaro XFCE edition. You said you don't like Manjaro because they hold the
updates back and stuff. I know. I don't like that as much, but I have heard so many nice
things about their XFCE default setup that I thought that seems like a pretty good place
to start for a modern implementation. And I kind of miss using a rolling release, at
least on my laptop. On my production machines, I'm just sticking with the LTS. 1804 has
been solid. The plasma desktop that I'm running on Kubuntu has been great. No problems, really.
And I think I'm just going to stick there for a while. And if my experiments with XFCE
result in something productive, maybe when it comes around to the next refresh cycle
for our studio computers, I might refresh them to XFCE.
Oh, that'll be a glorious, glorious day.
We'll hold a party for you.
Yeah, I'll have to fly in.
Yeah, we'll fly you out.
I can cut the ribbon and stuff. But this release isn't just about the desktop for Ubuntu. They
do focus a little bit on that, but it's kind of more about the cloud. Well, as they say,
from the cloud to the edge.
Right, which does include the developer. And they're very clear about that. They say in
here that in their big press release on their website that they've integrated the best of
OpenStack and Kubernetes and many more. So that way it's ready to go and they have their
optimized minimal Ubuntu 1904 images available for the major public cloud instances. And
then they sort of wax poetically about their reach and developer productivity thanks to
snaps and Visual Studio Code being one of the many popular snaps. And they highlight
the feature in 1904 where you can install multiple instances of the same snap, which
is great.
So you want to have maybe like a testing version and like a production version and the one
you're rolling out to your end users. And last but not least, they're saying, hey, by
the way, if you're a VMware user, we're now going to automatically install those old open
VM tools for you. And that way you get bi directional clipboard, easy sharing of files,
and of course, that graceful power management. Once you have all that set up, that's all
right out of the box. Now in 1904, you combine that with the performance improvements. And
they're trying to make a case here for the developer.
Being able to install those different versions of snaps reminds me quite a lot of what fedoras
do with modularity. Although it's kind of a different approach to it, it kind of gives
you the same result.
Yeah, I think the the nice thing about the snap approach is you're doing it in the deliverable
end result. And you have the container aspect of snaps where they're isolated from the rest
of the system. But it is obviously something that developers are looking for. You want
the testing version, you want the production version, you want the one that's rolling out.
But also, wouldn't it be great to have the ability to do a phased rollouts via the snap
store? I think that might be part of this as well. You know, you can learn a lot more
if you join their webinar on May 7. As we're recording that that's just a little bit out
there. And you can learn more by using the links in our show notes.
Yeah, linuxactionnews.com slash one zero two. But speaking of IoT, Mozilla have graduated
project things to its own proper project now, which they're calling web things. Now I must
admit that home automation and Internet of Things is not really for me. But I know you
are all over that with, you know, smart sockets and shouting at your Alexa and stuff. So is
this appealing to you?
It is. I felt like the IoT ecosystem is really early days. And I've been experimenting with
HomeKit and the Alexa solutions and the Google Home selection, trying to feel all of them
out seeing which one is more respecting of your privacy, which one chats the most and
whatnot. But none of them give me what I really want, which is 100% local control, like my
internet could be disconnected, and I can still manage these devices. Mozilla is pushing
us in that direction. So this initiative is both their effort behind pushing forward standards
that focus on security, privacy and interoperability, sort of like their wheelhouse. But it's also
a couple of components of software, primarily two different components, the web things gateway
and the web things framework. The web things gateway is interesting. It's a software distribution
for smart home gateways focused on privacy and security that you manage all of this locally,
including getting a web dashboard that gives you logs and stats. Say you have an IoT device
that monitors electrical usage. You could pull that in and generate real time graphs
and logs on that using this platform. And what's really fun about it is along with creating
a standard development kit, they've created images for the Raspberry Pi, and they're working
on an open WRT image. So you could load this on a lot of consumer routers, and you just
get the IoT gateway baked into it.
Yeah, that all sounds amazing. But you need the devices to support it. You've got tons
of these devices. Do any of them support this yet?
It's a bit mixed right now. So that's where the web things framework comes in. Now, this
is a set of libraries for like Node.js, Python, Java, Rust, Arduino kits, MicroPython, as
well as some third party libraries like IoT.js, and some APIs for the web. And some of these
work with some of the devices I have and some of them don't. And what these different libraries
do is say you can use a Python application to get a standard library to control the percentage
of brightness for a bulb or the color or whatever it might be. They give you a standard programming
interface to control this stuff. And then it's up to Mozilla to update the devices that
they support. And it's going to be hit and miss right now. And unfortunately, really,
this is really the story of the whole freaking IoT device market to begin with. It's not
like it's like solving it yet. But you could see where like, there's potential down the
road to solve it. Maybe do you really think that the manufacturers are going to settle
on this standard and not just have their own app and their own APIs that are all closed
and just force you to use their own walled garden? I think realistically, you're going
to have some vendors that go for price, and they're going to be really narrow and locked
in like they'll only work with the echo product or they'll only work with home kit. Then you'll
have devices that are a little more premium that support multiple standards and multiple
protocols, and they'll cost more money. But those of us that care, we'll be able to buy
those ones. And this may be one of the many standards and protocols and SDKs and API's
and etc, etc, that they support.
Well, once again, it feels like Mozilla is the organization to do this. I don't have
a huge interest in it personally. But I know that a lot of people do. And it's an area
where we need someone trustworthy like Mozilla to get involved and try and shepherd the whole
industry towards something that does use open standards and can use completely free software
if you want it to, and not have to interact with the huge tech companies like Apple, Amazon
and Google.
And what Mozilla has done here is what they're traditionally so good at is now they've set
the bar. This is now the new minimum, and now the industry can choose to step up or
not. And by creating standard libraries for Node.js, Python and many others, it's going
to have a good chance of getting an adoption. That's a pretty clever way to go. And Mozilla
is particularly good at some of this infrastructure stuff. In fact, that's why I'm pretty excited
about Pyodide, which is their initiative to bring the scientific community that uses Python
to the web, right into the browser.
Yeah, there have been quite a few attempts in the past to get Python running in the web
browser, but I don't think any of them have been as complete as Pyodide.
Well, and it goes back to Mozilla might be the right organization to back something like
this, which long term, when you're talking sustainability of a project over 10, 20 years,
really matters. And so you might be thinking, or I was at least, why do we need Python in
the web browser exactly? Well, they address that in their post. They say JavaScript doesn't
have a mature suite of data science libraries, and it's missing a number of features that
are useful for numeric computing. While we still think it's worthwhile to work on changing
that and moving JavaScript towards a data science ecosystem. In the meantime, we're
also taking a shortcut. We're meeting data scientists where they are by bringing the
popular and mature Python scientific stack to the browser. And what we really have here
is something called Pyodide. It gives a full standard Python interpreter that runs entirely
in the browser with full access to the browser's traditional web APIs. And think of it really
as three components. Number one, you download the source code of a Python interpreter, CPython,
and the scientific computing packages like NumPy. Then you apply a small set of changes
to make them work in the new environment. And then you compile them to WebAssembly. And
that's what Pyodide is doing in the browser. It's pretty clever. And you get everything
that CPython can do and that NumPy can bring.
It's funny that they say these files can be quite large. The total download is a huge
50 megabytes.
Yeah, I know, right? I mean, that is large from a web page standpoint, but it's small
from like, say, probably even a short YouTube video.
But it's not even much bigger than the Firefox binary for Windows. So that's why it is big,
as you say, by web standards. But once you've got it once, then as long as you don't clear
your cache, you're good to go from then on. And they're focusing on the scientific angle
here. But the first thing I thought about was education. And you've got how many kids
with Chromebooks these days? Being able to run Python right there in the browser seems
like it'd be very useful in the classroom.
Well, that was one of the points that Mozilla brings up in that post that we have linked.
As they say, this is sort of a long term defensive move for Python as well, because they're concerned
that if you can't take advantage of it in the browser, you are locked out of certain
use cases like Chromebooks and mobile. And that for Python to remain relevant long term,
they got to have some sort of presence in the browser. And you could maybe make that
argument. Right now, Python's doing better than I ever expected. It's interesting because
it's been around for a while. But just looking at the metrics from the Linux Academy students,
Python is intensely interesting to them. Python is an area that's bringing a lot of students
over to the Linux Academy platform right now so they can learn it. And I've heard more
and more of our listeners talking about Python. And the Kota Radio show gets more and more
emails about Python than it ever has before. All of the data that I can look at is suggesting
that Python is doing better than it ever has right now.
Well, I'm not surprised at all by that. Because, okay, it might not be the fastest and most
efficient language. And being interpreted means that obviously it's going to be way
slower than something that's compiled. But just look at any source code from Python.
It's so easy to read.
Yeah, it's approachable.
Exactly. It's therefore easy to write as well. And that's why it just seems obvious to me
that people would get into it and like it.
Well, everybody was talking about Python at the new OpenSSH 8.0 release party. You know,
I didn't see you there, Joe. I thought you were going to fly in for the big release party
this week.
No, I was too busy getting my boxes owned from using a slightly older version of OpenSSH.
I do love me some SCP. And so if you do as well, it's probably worth upgrading to version
8.0. This release contains a mitigation for a weakness in the SCP tool and protocol. This
is related to CVE-2019-6111. When copying a file from a remote system to a local directory,
SCP did not verify that the file names that the server had sent matched those requested
by the client. This could allow a hostile server to create an unexpected local file
that essentially contained attack content. This release adds a client-side check to the
file names sent from the server to make sure they actually match the original request.
But then they put this note in here, Joe, and this hits me hard and makes me feel like
an old man. And I hate this kind of stuff. They say this, the SCP protocol is outdated,
inflexible, and not readily fixed. We recommend the use of more modern protocols like SFTP
and rsync for file transfer instead. It's not that I can't use those tools. It's just
SCP is so handy. Like you install the, you're already going to use OpenSSH anyway. So you
install that and you get this fantastic SCP. Not that you don't get SFTP, but I don't know,
something about like a tool that I have just used for 20 years now, I'm being told, hey
old man, stop using one of your favorite tools. This is like the first time this has really
happened to me.
Yeah, I use SCP loads. I do use rsync a little bit.
Oh, it's great. rsync is incredible.
Oh yeah, but I don't know, there's just something about SCP. I just learned it before rsync
and so I just default to it.
Yeah, it's quick. It's muscle memory. I can send and receive SCP files around my network
in seconds, especially when you have keys and it's just, I love it more than going on
a Windows box and going to the run prompt and putting the server name and using the
whole UNC path. That feels old and clunky compared to using SCP. Not that I can't, again,
SFTP, rsync, it's fine. This is my moment though. Here we are, 2019, this is my moment.
It's like, hey old man, stop using this old SCP thing. I'm like, okay, all right. I'll
take that advice on. I'll do it. Just not going to do it without complaining.
Yeah, but this bug was pretty obscure. It was one specific use case and the server had
to be owned in the first place. It's not like this was some man in the middle or whatever.
Right, because you have to execute that file.
Yeah, and I can't see it being the biggest problem if your server is being owned to the
point where someone could exploit this. You've got way bigger problems to deal with than
that. I mean, it needed to be patched, obviously, and it's good that it has been now, but it
just seems like a relatively minor problem to me.
Generally they are in isolation. That's how this works. In isolation, each one of these
isn't a major issue, but it is not uncommon to chain multiple vulnerabilities together
to have an overall effect. So if you could somehow compromise a machine to be able to
execute files, but you just couldn't get files on the machine, you combine it with this attack
and now you've got a way to copy the file onto the machine and you've got a way to execute
it. You chain the two attacks together, Bob's your uncle, you now own the box.
And that's why it is important because security is more than just one vulnerability. Security
is an in-depth approach where multiple things in multiple layers have to be secure.
Well, it's good that this was patched so quickly. I mean, it's only been around since RCP, what,
30-odd years ago?
Yeah. Yeah, you know, relatively in terms of the age of the universe.
Yeah. But I'm not going to stop using SCP. So I just despite them for calling us old.
Good. You and me, SCP and Nano to the grave for life.
Yeah, man. Definitely. But will people stop using Chrome on Android? Well, if the EU has
anything to say about it, they're certainly going to have the choice.
It seems like they'll have the choice, but Google has found a way that's slightly more
clever than the old Microsoft approach. So they're going to have a screen after you receive
your Google device where you can select different apps that are randomly sorted based on popularity
and some random variable. But they're still installing Chrome by default.
If Chrome and Google search are all still installed by default, you would just also
now get the option to install Firefox or Edge or Opera or DuckDuckGo. And then if you do
install them, it will walk you through a series of steps that are not intuitive to set them
as the default. But it doesn't just immediately switch them to the default. You have to go
through additional hoops afterwards. So it's sort of, to me, a half-assed attempt to have
their cake and eat it too. You can, you'll get a prop now to install Firefox. That is
indeed an improvement. But Chrome's already there and set to the default when the device
arrives.
Yeah, it's like a welcome screen. You can put all the effort you want into it. People
are just going to close it immediately and not read it. It just feels like one of those,
yeah, next, whatever. And if you've got a next and a finish button and you've got Google
search and Google Chrome installed by default, then I think very few people are actually
going to take advantage of this, at least with the Microsoft one. I remember seeing
it and I remember trying it out and it was actually pretty good. It kind of prompted
you to actually think about installing something else. But this Android one just feels very
much like next, next, next finish. You know, just like people do with the location settings
and all the rest of that or all of the opt out of privacy stuff. I actually read all
of that stuff, but I don't think many people do.
And it literally is just a next, next, next screen. So that's why it feels like that,
because that's literally what it's going to be. And it comes across as install more
crap on your machine. But the other thing that's tricky here is if you read the verbiage
of the way Google talks about this, is the browsers have to be compatible with the absolute
latest version of Android that ships on that device. So if it's say the Pixel 4 and it's
coming with a brand, brand new version of Android that maybe Opera and Edge are not
ready for but only Firefox is, then the only thing in that list will be Firefox. So they
also have a technicality where that list will change depending on the compatibility with
the release of Android.
Do you think this is then weaseling out of the European Commission's ruling then? Or
is it a case of them obeying the letter of the law without obeying the spirit of it?
It seems to be indeed trying to obey the letter of the law. If it's the spirit, I don't know.
I'm so far removed from it. You know, I'd say that's up to each individual user to decide.
To me, it doesn't seem nearly as complete as what Microsoft did with Windows back in
the day, especially since Chrome is placed above all of the others in a separate category
where it says installed and then the alternatives are all listed below it. Same with Google
search. It feels like they're all second brands and you would just want to next next next
bastard because you're used to all this crap coming at you when you're setting up a new
device.
Yeah, I wonder if they're going to get away with it. You would have thought so. They would
have checked this stuff out before they put it out to the public. But it does feel a bit
wrong to do that. You've got Google just as you say on its own, and then just all these
other third party ones. Whereas with the Microsoft browser ballot, it was genuinely random. And
I would imagine a lot of people just went for the first one, whatever that was. Whereas
the first one here is Chrome. And so this is effectively pointless.
Do you know how many stories there have been recently with their switching their name to
Anthos for the Google Cloud platform? And with like this stuff, this monopoly stuff?
How many times a year now do do these stories come up? You're like, this really feels like
like a new Microsoft. This is like Microsoft when they're at their worst, when there was
a lot of people that were into Microsoft. But then there was like these fringe, crazy
free software users that were like, Microsoft's evil, and they're doing things that you don't
recognize. I feel like that's what's going on here with Google. Like this is a monopolistic
move that they're making. And they have a dominance over search. They have a dominance
over web advertising. They have a dominance with Chrome now. And they have a dominance
with Android. And they continue to behave in all of these different ways, just like
Microsoft did of the past. If you understand and appreciate Google's history, you will
understand how deeply ironic that is. They're like a young adolescent Microsoft. They have
to go through a maturity phase that perhaps we are now seeing Microsoft enter.
Yeah, I can't really disagree with that. It really does feel that way.
Well, thankfully, Joe, everything does change over time as we seem to bear witness. And
one of the things that I really appreciate so many years now into doing podcasting is
that all you need to listen to a podcast is an RSS feed. You don't even need a web browser.
It's just generally available as a standard spec. And you can get our feed at linuxactionnews.com
slash subscribe. We have the straight up RSS feed as well as many other ways to get this
show.
And you can go to linuxactionnews.com slash contact for ways to get in touch with us.
And if you've been thinking about subscribing to Linux Academy, do it right now. Go, go,
go just for a limited time. The $299 a year promo. That's a crazy good deal. It's like
33% off. Go take advantage of that. You'll lock it in. Go to linuxacademy.com and subscribe
to get the promo.
And if you're going to be at Linux Fest Northwest this week, then do come and say hello to us
and all the crew and go to meetup.com slash Jupiter broadcasting for some of the events
that we're organizing.
Yeah, I'll be barbecuing for you in the parking lot outside Lady Dupes. How would you not
want to come see that? And somehow, regardless of the barbecuing and the festing, we will
be back next Monday with our weekly take on the latest Linux and open source news. I am
at Chris LAS.
I'm at Joe Ressington.
Thank you for joining us and we will see you next week.
See you later.
