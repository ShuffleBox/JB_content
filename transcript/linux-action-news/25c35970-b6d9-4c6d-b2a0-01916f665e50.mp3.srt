1
00:00:00,000 --> 00:00:09,380
Hello, and welcome to Linux Action News, episode 231, recorded on March 9th, 2022.

2
00:00:09,380 --> 00:00:10,380
I'm Chris.

3
00:00:10,380 --> 00:00:11,380
And I'm Wes.

4
00:00:11,380 --> 00:00:12,380
Hello, Wes.

5
00:00:12,380 --> 00:00:14,540
Let's do the news.

6
00:00:14,540 --> 00:00:18,860
We start this week with a dirty pipe.

7
00:00:18,860 --> 00:00:24,340
The name for a new vulnerability disclosed this week that's supposed to imply similarities

8
00:00:24,340 --> 00:00:30,280
to the recent dirty cow vulnerability, and perhaps provide some clues about this new

9
00:00:30,280 --> 00:00:32,400
vulnerability's origins.

10
00:00:32,400 --> 00:00:37,720
In this case, pipe refers to our beloved Unix pipelines.

11
00:00:37,720 --> 00:00:44,420
Tracked as CVE-2022-0847, the vulnerability came to light when a developer for website

12
00:00:44,420 --> 00:00:50,220
builder CM4ALL was troubleshooting a series of corrupted files that kept appearing on

13
00:00:50,220 --> 00:00:52,760
a customer's Linux box.

14
00:00:52,760 --> 00:00:57,600
After months of dead-end analysis, the dev finally figured out that the customer's corrupted

15
00:00:57,600 --> 00:01:02,500
files were actually the result of a bug in the kernel.

16
00:01:02,500 --> 00:01:06,760
The developer, Max Kellerman, not only found the source of the bug, but quickly created

17
00:01:06,760 --> 00:01:08,440
an exploit based on it too.

18
00:01:08,440 --> 00:01:15,420
The issue has been in the Linux kernel since Linux 5.8, and it allows for overriding data

19
00:01:15,420 --> 00:01:17,440
in an arbitrary read-only file.

20
00:01:17,440 --> 00:01:18,920
It's not good.

21
00:01:18,920 --> 00:01:24,400
Yeah, it wasn't long until researchers out there had the nobody account overriding whatever

22
00:01:24,400 --> 00:01:27,240
read-only files they wanted with a simple bash script.

23
00:01:27,240 --> 00:01:31,840
No, it didn't matter if this was in a read-only snapshot or on a read-only file system for

24
00:01:31,840 --> 00:01:33,040
that matter.

25
00:01:33,040 --> 00:01:35,800
You could still overwrite it.

26
00:01:35,800 --> 00:01:38,400
And that meant that the damage from dirty pipe?

27
00:01:38,400 --> 00:01:42,160
It wasn't just limited to overriding files because, well, you can build on that.

28
00:01:42,160 --> 00:01:46,520
You can create a cron job that runs and gives you a backdoor, you can add a new user account

29
00:01:46,520 --> 00:01:52,840
to Etsy password and shadow, or you can just directly modify a script or even a set UID

30
00:01:52,840 --> 00:01:55,120
binary to help give yourself a root account.

31
00:01:55,120 --> 00:01:59,160
Yeah, really demonstrating that you have to build your systems in such a way that they

32
00:01:59,160 --> 00:02:01,600
can be continuously updated.

33
00:02:01,600 --> 00:02:05,960
And as you're probably also guessing right now, dirty pipe also afflicts Android, at

34
00:02:05,960 --> 00:02:09,360
least Androids that are based on one of the vulnerable Linux kernel versions.

35
00:02:09,360 --> 00:02:13,400
So as you might imagine, it's a little more complicated when it comes to Android because

36
00:02:13,400 --> 00:02:14,400
of the various versions.

37
00:02:14,400 --> 00:02:20,480
But put simply, the latest version of Android for the Pixel 6 and the Samsung Galaxy S22,

38
00:02:20,480 --> 00:02:23,940
for instance, is impacted.

39
00:02:23,940 --> 00:02:26,880
Those are on version 5.10 of the Linux kernel.

40
00:02:26,880 --> 00:02:32,680
But for example, a Pixel 4, that's on Android 12, which runs on Linux 4.14.

41
00:02:32,680 --> 00:02:33,680
That's unaffected.

42
00:02:33,680 --> 00:02:38,420
So really, to check, what you need to do is take your device, go to Settings, About Phone,

43
00:02:38,420 --> 00:02:41,920
and then check your Android version there, and it'll tell you which version of the Linux

44
00:02:41,920 --> 00:02:42,920
kernel you're using.

45
00:02:42,920 --> 00:02:48,240
Now, I'll be honest, my first instinct is to make a joke about ancient Android kernels

46
00:02:48,240 --> 00:02:52,600
and whatever I may be running with my Pixel 3 in my pocket.

47
00:02:52,600 --> 00:02:56,200
But I tried to give this a go on a few of my boxes.

48
00:02:56,200 --> 00:02:59,920
And yeah, actually, I still have a few of those out there that had kernels that were

49
00:02:59,920 --> 00:03:02,120
too old to be affected.

50
00:03:02,120 --> 00:03:03,920
So I guess I'll shut up.

51
00:03:03,920 --> 00:03:08,640
Yeah, but you did find a system that was vulnerable.

52
00:03:08,640 --> 00:03:13,560
Yeah, on the flip side, a few of my boxes, I'd already done updates since this was released

53
00:03:13,560 --> 00:03:14,560
and patched.

54
00:03:14,560 --> 00:03:15,560
So those weren't.

55
00:03:15,560 --> 00:03:20,800
But I'd spun up a 2110 box last week to be a Steam game server for a few friends.

56
00:03:20,800 --> 00:03:24,160
And I hadn't touched it since then.

57
00:03:24,160 --> 00:03:27,920
Turns out, yep, it was vulnerable, and it was pretty straightforward.

58
00:03:27,920 --> 00:03:31,080
We'll have linked in the show notes to a quick little proof of concept exploit.

59
00:03:31,080 --> 00:03:34,400
But it's maybe like a half page of some C code.

60
00:03:34,400 --> 00:03:38,200
Copy and pasted that into vim on the server, wrote it out, gave it a quick compile with

61
00:03:38,200 --> 00:03:39,200
gcc.

62
00:03:39,200 --> 00:03:42,840
And then you just take that binary and you run it and you point it at another binary

63
00:03:42,840 --> 00:03:45,880
in the system that's a setuid binary.

64
00:03:45,880 --> 00:03:46,880
That was easy.

65
00:03:46,880 --> 00:03:48,480
In this case, it was user bin su.

66
00:03:48,480 --> 00:03:52,760
Run that as a totally unprivileged user, and boom, root account.

67
00:03:52,760 --> 00:03:59,520
That'd be kind of handy if you ever forgot the pseudo password on that box, but you still

68
00:03:59,520 --> 00:04:01,520
had another account on there.

69
00:04:01,520 --> 00:04:03,240
You can fix that now.

70
00:04:03,240 --> 00:04:08,280
Actually, I have to say, the developer did a really good job on the write up on this

71
00:04:08,280 --> 00:04:09,280
one.

72
00:04:09,280 --> 00:04:13,160
We don't always say this, and so this one is actually worth a read after you get done

73
00:04:13,160 --> 00:04:14,160
listening to the show.

74
00:04:14,160 --> 00:04:15,760
So we will have a link to that in the show notes.

75
00:04:15,760 --> 00:04:20,320
And like Wes just said, we also have that exploit that you can try in your own system

76
00:04:20,320 --> 00:04:23,320
if for some reason you want to pop one of your own boxes.

77
00:04:23,320 --> 00:04:25,920
That'll also be linked in the show notes.

78
00:04:25,920 --> 00:04:34,600
Well, it looks like we might be seeing a lot more kernel code inbound in the not so distant

79
00:04:34,600 --> 00:04:35,600
future.

80
00:04:35,600 --> 00:04:42,160
That's because AMD is hiring more Linux engineers, filling out various roles seemingly across

81
00:04:42,160 --> 00:04:46,880
the organization from Linux semiconductor engineers to kernel virtualization experts

82
00:04:46,880 --> 00:04:51,200
to just general systems and sys admins, a whole bunch more.

83
00:04:51,200 --> 00:04:58,240
Yeah, I was pleased to see some specific focus on a position to apparently work with KVM

84
00:04:58,240 --> 00:04:59,880
and QMU.

85
00:04:59,880 --> 00:05:00,880
That's really cool.

86
00:05:00,880 --> 00:05:04,080
I'm looking forward to see where that eventually ends up.

87
00:05:04,080 --> 00:05:08,240
But you know, what's even more interesting if you kind of zoom out here is it was about

88
00:05:08,240 --> 00:05:14,200
a year ago, maybe give or take a little bit that we were covering right here on the show,

89
00:05:14,200 --> 00:05:20,360
a new internal organization inside AMD that was focused on commercial partners using Linux.

90
00:05:20,360 --> 00:05:24,160
And so when you look at these job openings now that you're seeing and the spectrum that

91
00:05:24,160 --> 00:05:28,400
they're covering, I think it's probably pretty fair to speculate that these new positions

92
00:05:28,400 --> 00:05:33,220
are opening up as a result of the feedback and engagement that that organization has

93
00:05:33,220 --> 00:05:34,880
gotten with those customers.

94
00:05:34,880 --> 00:05:36,900
But here's what really strikes me.

95
00:05:36,900 --> 00:05:41,900
It actually even kind of blows me away, Wes, is when you go to AMD's open jobs board, which

96
00:05:41,900 --> 00:05:47,240
we'll have linked in the notes, and you use Linux as a keyword filter and say you limit

97
00:05:47,240 --> 00:05:55,480
those results to just Austin, Texas, you'll get 229 open jobs that either list Linux as

98
00:05:55,480 --> 00:06:00,520
a skill requirement or a primary function of the job at AMD.

99
00:06:00,520 --> 00:06:06,760
And that number gets even a lot higher when you expand that to a worldwide search.

100
00:06:06,760 --> 00:06:08,920
There's actually over 700 results.

101
00:06:08,920 --> 00:06:15,120
Yeah, it's kind of amazing between stuff, you know, whether you're working on actually

102
00:06:15,120 --> 00:06:19,440
tweaking kernel builds to work better with AMD hardware, or you're working on the virtualization

103
00:06:19,440 --> 00:06:23,320
framework, or you're working to help clients engage with that hardware, or maybe you're

104
00:06:23,320 --> 00:06:27,300
a BIOS engineer who's working on, you know, integration with the firmware level.

105
00:06:27,300 --> 00:06:30,840
There's also a bunch of job openings aimed at optimizing machine learning frameworks

106
00:06:30,840 --> 00:06:32,920
for AMD hardware.

107
00:06:32,920 --> 00:06:36,720
And this all just kind of underscores that regardless of even if you're not a, you know,

108
00:06:36,720 --> 00:06:42,560
a Linux focused hardware company, you just need Linux to run a big modern business.

109
00:06:42,560 --> 00:06:49,000
I mean, some jobs that came up here are senior PHP developer, not because you know, Linux

110
00:06:49,000 --> 00:06:52,400
is essential necessarily to the main part of your job, but because of course, what's

111
00:06:52,400 --> 00:06:54,440
that PHP running on?

112
00:06:54,440 --> 00:06:57,880
It's Linux.

113
00:06:57,880 --> 00:07:02,560
Well the folks behind the most popular matrix client element have just announced element

114
00:07:02,560 --> 00:07:03,860
call.

115
00:07:03,860 --> 00:07:11,440
It's a new simple web based conferencing app that is, of course, built on top of matrix.

116
00:07:11,440 --> 00:07:16,200
But don't worry, you don't need your own matrix server to use it.

117
00:07:16,200 --> 00:07:21,560
But because this is matrix, if you do have your own server, well, yeah, you can self

118
00:07:21,560 --> 00:07:26,320
host it there yourself and have an all in one integrated setup while still being able

119
00:07:26,320 --> 00:07:30,640
to talk to anyone else anywhere on the wider matrix network.

120
00:07:30,640 --> 00:07:32,620
I do love that feature.

121
00:07:32,620 --> 00:07:35,720
So if you want to try it out to see what it's like, you can just get started by going to

122
00:07:35,720 --> 00:07:40,200
call.element.io in just about any browser.

123
00:07:40,200 --> 00:07:44,760
The team has worked really hard to support as many browsers as possible, even making

124
00:07:44,760 --> 00:07:47,320
it a progressive web app on mobile.

125
00:07:47,320 --> 00:07:52,920
Once you're in, I think you'll find a sensible, but quite usable video call client with a

126
00:07:52,920 --> 00:07:57,200
couple of nice layout options, quick and really easy screen sharing.

127
00:07:57,200 --> 00:08:02,560
I mean, even on, you know, an older Linux system with XFCE popped right into that screen

128
00:08:02,560 --> 00:08:04,040
sharing.

129
00:08:04,040 --> 00:08:07,740
And the other thing that of course is now table stakes, but still nice to see is the

130
00:08:07,740 --> 00:08:12,900
ability to share that meeting via a link, sort of like how Zoom made so popular in the

131
00:08:12,900 --> 00:08:13,900
before times.

132
00:08:13,900 --> 00:08:16,020
Yeah, you don't even need an account to get started.

133
00:08:16,020 --> 00:08:21,500
You can just log in as an automated anonymous user like we did, and that works just fine.

134
00:08:21,500 --> 00:08:26,440
It's obviously a bit of an MVP, but what is there felt snappy and pretty much just worked

135
00:08:26,440 --> 00:08:29,600
at least on the quick try we gave it.

136
00:08:29,600 --> 00:08:34,360
But we should stress that this is very much in beta and has a ton of limitations, at least

137
00:08:34,360 --> 00:08:35,500
for now.

138
00:08:35,500 --> 00:08:41,520
Things like end-to-end encryption not yet being enabled, login if you are choosing to

139
00:08:41,520 --> 00:08:42,520
use a login.

140
00:08:42,520 --> 00:08:46,620
Well, that's limited to just using a single predefined server, whether that's the server

141
00:08:46,620 --> 00:08:52,180
you're using to self host or the shared instance that call.element.io is using.

142
00:08:52,180 --> 00:08:55,400
You also can't use the same user on multiple devices.

143
00:08:55,400 --> 00:08:58,740
Not sure if that's ever going to be supported, but you can't right now.

144
00:08:58,740 --> 00:09:04,080
And it's not really optimized, both in terms of the client, in terms of bandwidth, CPU

145
00:09:04,080 --> 00:09:09,480
bandwidth, but also it only implements a full peer-to-peer mesh call.

146
00:09:09,480 --> 00:09:13,640
With WebRTC, you've got some other options, things called selective forwarding units and

147
00:09:13,640 --> 00:09:18,120
a few other tricks out there, which the big names in this space used to make things scale

148
00:09:18,120 --> 00:09:19,120
a bit more.

149
00:09:19,120 --> 00:09:23,220
Because if you have to send a copy of your video and audio to each single participant

150
00:09:23,220 --> 00:09:26,480
in your call, yeah, that doesn't scale great.

151
00:09:26,480 --> 00:09:31,820
And in testing, they've found that the implementation so far can support about eight people before

152
00:09:31,820 --> 00:09:34,320
it starts to fall over.

153
00:09:34,320 --> 00:09:35,320
Yeah.

154
00:09:35,320 --> 00:09:41,360
So I don't think this is ready to replace those company-wide or project-wide or event

155
00:09:41,360 --> 00:09:43,360
solutions that are using Jitsi right now.

156
00:09:43,360 --> 00:09:45,640
It's just not quite there.

157
00:09:45,640 --> 00:09:47,720
They do already have plans to address it, like Wes said.

158
00:09:47,720 --> 00:09:49,200
They already have it kind of figured out.

159
00:09:49,200 --> 00:09:50,980
It's just not implemented yet.

160
00:09:50,980 --> 00:09:54,760
But if you don't need it for more than about five people, it's probably going to be just

161
00:09:54,760 --> 00:09:56,200
fine for you.

162
00:09:56,200 --> 00:09:59,400
And really, for just like two of us, it's totally great.

163
00:09:59,400 --> 00:10:01,360
I mean, we're pretty picky about this kind of stuff.

164
00:10:01,360 --> 00:10:04,320
And we found it really pretty usable.

165
00:10:04,320 --> 00:10:06,920
Yeah, you know, it definitely was.

166
00:10:06,920 --> 00:10:11,960
If we didn't already have a few different back channel methods to use while we're recording,

167
00:10:11,960 --> 00:10:17,080
I think we could have definitely used element call to get this show done.

168
00:10:17,080 --> 00:10:19,280
And I think it's probably only going to get better.

169
00:10:19,280 --> 00:10:20,680
I mean, this is really excited.

170
00:10:20,680 --> 00:10:21,800
Not that Jitsi hasn't worked.

171
00:10:21,800 --> 00:10:27,440
I think the team acknowledges that Jitsi embedded as a widget has served really well to enable

172
00:10:27,440 --> 00:10:30,040
this within the element platform.

173
00:10:30,040 --> 00:10:35,320
But this new version, I mean, it's directly using matrix as the signaling layer, which

174
00:10:35,320 --> 00:10:37,760
means some exciting stuff can happen.

175
00:10:37,760 --> 00:10:39,720
I mean, it's a little funny right now.

176
00:10:39,720 --> 00:10:45,280
This doesn't support chat, even though it's, you know, based on matrix and element, which

177
00:10:45,280 --> 00:10:48,460
we think of as a chat app, but it can do so much more.

178
00:10:48,460 --> 00:10:49,720
So chat's going to get added.

179
00:10:49,720 --> 00:10:53,080
They're talking about adding, you know, moderation control, being able to mute or kick other

180
00:10:53,080 --> 00:10:54,580
people out.

181
00:10:54,580 --> 00:10:58,120
Some of the fancy stuff you expect from like Google Hangouts or Zoom, like being able to

182
00:10:58,120 --> 00:11:01,080
blur your video or replace it with an image.

183
00:11:01,080 --> 00:11:06,720
But the part I'm most excited for, this is getting directly integrated into element.

184
00:11:06,720 --> 00:11:16,280
So you can have voice and video rooms or hold group calls right inside the app.

185
00:11:16,280 --> 00:11:17,840
Linode.com slash LAN.

186
00:11:17,840 --> 00:11:22,080
Go there to get $100 in 60 day credit on a new account and you go there to support the

187
00:11:22,080 --> 00:11:23,080
show.

188
00:11:23,080 --> 00:11:27,800
Linode is a great option for developers, IT experts, or those of you that are just getting

189
00:11:27,800 --> 00:11:28,800
loaded.

190
00:11:28,800 --> 00:11:30,520
No one gets fired for recommending Linode.

191
00:11:30,520 --> 00:11:35,000
I mean, you don't want to have to hassle with the complexities that the hyperscalers try

192
00:11:35,000 --> 00:11:38,720
to throw on to you just so you can just get locked into their platform.

193
00:11:38,720 --> 00:11:39,720
Linode's a great option.

194
00:11:39,720 --> 00:11:43,360
Not only that, but Linode has a better price and they have better performance.

195
00:11:43,360 --> 00:11:44,480
It's not just me saying that.

196
00:11:44,480 --> 00:11:48,160
That's actually something that's been researched and been proven out.

197
00:11:48,160 --> 00:11:50,240
You can definitely tell just when you use Linode.

198
00:11:50,240 --> 00:11:52,600
It's how we've built everything for the last couple of years.

199
00:11:52,600 --> 00:11:55,700
When we run it in the cloud, we run it on Linode.

200
00:11:55,700 --> 00:11:58,280
Even like us, Linode loves Linux.

201
00:11:58,280 --> 00:11:59,480
They use it every single day.

202
00:11:59,480 --> 00:12:02,720
They have people that run it on their desktop, they run it in their environments.

203
00:12:02,720 --> 00:12:05,520
They're fans and you can see in the way they build things too.

204
00:12:05,520 --> 00:12:06,520
You can spot it.

205
00:12:06,520 --> 00:12:11,720
You know, that's really the base of why they even started Linode almost 19 years ago.

206
00:12:11,720 --> 00:12:13,940
And now, geez, look at them go.

207
00:12:13,940 --> 00:12:15,700
They've built the best system out there.

208
00:12:15,700 --> 00:12:18,060
They've got 11 data centers around the world.

209
00:12:18,060 --> 00:12:21,560
They've got brand new MVME PCIe storage on some of their systems.

210
00:12:21,560 --> 00:12:27,000
Their high-end CPU boxes have AMD EPYC processors, 40 gigabit connections, because not only do

211
00:12:27,000 --> 00:12:34,300
they have fast connections to the individual machines, but Linode is their own ISP.

212
00:12:34,300 --> 00:12:36,640
And they've got some of the best support in the business.

213
00:12:36,640 --> 00:12:38,260
It really is something special.

214
00:12:38,260 --> 00:12:41,400
You bring it all together, you combine it with their great interface that makes it simple

215
00:12:41,400 --> 00:12:47,720
to deploy an entire application stack or a system that you build up from the ground.

216
00:12:47,720 --> 00:12:51,120
Whatever your performance, whatever your preference, whatever your style, you know, whatever you

217
00:12:51,120 --> 00:12:52,760
want to do, you can do it at Linode.

218
00:12:52,760 --> 00:12:58,660
I actually built myself an extremely custom from the ground up image twice on Linode,

219
00:12:58,660 --> 00:12:59,780
and it's just been really handy.

220
00:12:59,780 --> 00:13:03,360
Those two times in the last couple of years that I really needed that, it was great to

221
00:13:03,360 --> 00:13:07,640
not only know that it was possible, but Linode was actually going to help me do it with documentation

222
00:13:07,640 --> 00:13:09,080
and support too.

223
00:13:09,080 --> 00:13:10,080
So go build something.

224
00:13:10,080 --> 00:13:15,480
Go learn something and try it for yourself and support the show, linode.com slash lan.

225
00:13:15,480 --> 00:13:22,720
Linux.ting.com.

226
00:13:22,720 --> 00:13:26,680
If you're sick of overpaying for cell service, go see how much you could save and then take

227
00:13:26,680 --> 00:13:30,520
25 bucks off of that by going to linux.ting.com.

228
00:13:30,520 --> 00:13:33,500
Ting is a mobile virtual network operator.

229
00:13:33,500 --> 00:13:36,580
That means they don't have to dig holes in the ground and fight with local regulators

230
00:13:36,580 --> 00:13:38,120
to stand up towers.

231
00:13:38,120 --> 00:13:41,980
They interface with the big carriers and nation to nation coverage, but you end up getting

232
00:13:41,980 --> 00:13:46,440
way better customer service at a much lower cost.

233
00:13:46,440 --> 00:13:52,000
Ting Mobile offers nationwide coverage with a great mix of plans, fast data on LTE or

234
00:13:52,000 --> 00:13:55,800
5G, and no contracts ever.

235
00:13:55,800 --> 00:13:59,040
And you know, Ting Mobile was recently named the number one carrier by Consumer Reports

236
00:13:59,040 --> 00:14:00,040
in 2021.

237
00:14:00,040 --> 00:14:03,920
That's probably why I have been a Ting customer since 2013.

238
00:14:03,920 --> 00:14:07,800
I really appreciate all of their plans are simple and straightforward.

239
00:14:07,800 --> 00:14:09,840
It's just a smarter way to do mobile.

240
00:14:09,840 --> 00:14:13,680
It's how they'd have to do mobile in the States if the industry were to somehow reboot and

241
00:14:13,680 --> 00:14:14,680
have to start today.

242
00:14:14,680 --> 00:14:16,400
They'd have to compete like this.

243
00:14:16,400 --> 00:14:21,080
They have straightforward, simple plans for individuals, families, and really small businesses.

244
00:14:21,080 --> 00:14:22,080
I can attest to that.

245
00:14:22,080 --> 00:14:26,080
It's a great option for small businesses and every plan gets access to Ting's award winning

246
00:14:26,080 --> 00:14:27,460
customer service.

247
00:14:27,460 --> 00:14:32,720
You get that nationwide LTE and 5G, you get that Ting support and Ting value, and your

248
00:14:32,720 --> 00:14:35,920
phone's probably going to work because of their network support.

249
00:14:35,920 --> 00:14:38,540
So it makes it really simple to switch to Ting.

250
00:14:38,540 --> 00:14:43,280
Just head to linux.ting.com, check your current phone, create an account, pick the plans right

251
00:14:43,280 --> 00:14:44,280
for you.

252
00:14:44,280 --> 00:14:49,520
If you want to get a new phone, that linux.ting.com $25 discount could apply to a new phone as

253
00:14:49,520 --> 00:14:50,520
well.

254
00:14:50,520 --> 00:14:51,520
Sometimes it's worth treating yourself.

255
00:14:51,520 --> 00:14:54,800
Either way, I say go to linux.ting.com to get started.

256
00:14:54,800 --> 00:14:56,480
Once you're there, check things out.

257
00:14:56,480 --> 00:14:58,000
I think you're going to be impressed.

258
00:14:58,000 --> 00:14:59,000
It's a really great value.

259
00:14:59,000 --> 00:15:03,200
Again, I mean, I've been a customer for like ever since 2013.

260
00:15:03,200 --> 00:15:04,640
There's a reason for that.

261
00:15:04,640 --> 00:15:11,940
Go try it out today and support the show, linux.ting.com.

262
00:15:11,940 --> 00:15:17,760
Over the next few weeks, you'll likely see a lot written and said about Elementary OS

263
00:15:17,760 --> 00:15:19,880
and its future.

264
00:15:19,880 --> 00:15:25,320
That's because this week it became public that the two co-founders of Elementary OS

265
00:15:25,320 --> 00:15:29,880
are in active discussions about their roles in the project going forward.

266
00:15:29,880 --> 00:15:34,320
From what's been stated publicly so far, it seems the company behind the project has

267
00:15:34,320 --> 00:15:37,280
been struggling since the start of the pandemic.

268
00:15:37,280 --> 00:15:43,560
And for the last month or so, difficult discussions about future ownership have been ongoing.

269
00:15:43,560 --> 00:15:47,560
We reached out to Cassidy James Blady and Daniel Foray for comment.

270
00:15:47,560 --> 00:15:51,120
Yeah, and Danny relayed to us two things primarily.

271
00:15:51,120 --> 00:15:54,240
Number one, that this is all still being worked out.

272
00:15:54,240 --> 00:15:58,160
There's nothing really to report at this time, although you may notice some slowdowns on

273
00:15:58,160 --> 00:16:01,840
GitHub and social media presence temporarily.

274
00:16:01,840 --> 00:16:05,760
And the second thing that Danny really stressed is that Elementary is a volunteer community

275
00:16:05,760 --> 00:16:11,520
first, and the company behind it is small, it doesn't have a lot of power.

276
00:16:11,520 --> 00:16:14,960
And that the contributors are still there, they're still working, fixing bugs, responding

277
00:16:14,960 --> 00:16:18,600
to issues, working on new features and all of that.

278
00:16:18,600 --> 00:16:22,480
Cass also stressed that the contributors are continuing their work and Cass relayed to

279
00:16:22,480 --> 00:16:27,040
us that there's still actually a lot of exciting things in the pipeline being worked on, and

280
00:16:27,040 --> 00:16:31,720
that whatever happens, they'll make sure that the end users are taken care of.

281
00:16:31,720 --> 00:16:37,840
Besides that commentary directly to us, there has been some discussion over on Reddit where

282
00:16:37,840 --> 00:16:45,160
Blake Costner, a former Elementary OS staffer, said, quote, the situation is ongoing.

283
00:16:45,160 --> 00:16:50,720
As with everything, there are two sides to the story, and I'd ask everyone to please

284
00:16:50,720 --> 00:16:58,080
reserve judgment until the situation is resolved and the company has made an official statement.

285
00:16:58,080 --> 00:17:01,480
That seems pretty reasonable, and it does seem like some changes are in store for Elementary

286
00:17:01,480 --> 00:17:05,640
OS, but Danny and Cass do seem to have the user's best interest in mind as they try to

287
00:17:05,640 --> 00:17:08,240
work through this new structure.

288
00:17:08,240 --> 00:17:12,360
But for now, it's just too early to really know where things will end up and where things

289
00:17:12,360 --> 00:17:14,180
are going to land.

290
00:17:14,180 --> 00:17:19,160
Something tells me this won't help the project keep up with that soon-to-be-released Ubuntu

291
00:17:19,160 --> 00:17:21,320
LTS, though.

292
00:17:21,320 --> 00:17:23,760
But we're pulling for them.

293
00:17:23,760 --> 00:17:28,000
Yeah, we'll keep an eye on this situation and everything going on in the world of Linux

294
00:17:28,000 --> 00:17:32,660
and open source news, so be sure you check out linuxactionnews.com slash subscribe.

295
00:17:32,660 --> 00:17:36,880
That way you get every single new episode when it releases.

296
00:17:36,880 --> 00:17:41,880
And linuxactionnews.com slash contact to let us know how we're doing.

297
00:17:41,880 --> 00:17:47,760
And we've announced an East Coast meetup on April 9th, 2022 in Raleigh, North Carolina.

298
00:17:47,760 --> 00:17:51,800
For details, visit meetup.com slash Jupiter Broadcasting.

299
00:17:51,800 --> 00:17:57,480
We'll be back next week with our take on the latest Linux and open source news.

300
00:17:57,480 --> 00:18:00,680
Thanks for joining us, and that's all the news for this week.

