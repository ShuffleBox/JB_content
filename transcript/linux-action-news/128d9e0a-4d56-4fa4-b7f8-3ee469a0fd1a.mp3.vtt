WEBVTT

00:00.000 --> 00:15.760
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:15.760 --> 00:20.520
This is episode 32, recorded on December 17th, 2017.

00:20.520 --> 00:21.520
I'm Chris.

00:21.520 --> 00:22.520
And I'm Joe.

00:22.520 --> 00:23.520
Hello, Joe.

00:23.520 --> 00:25.920
It's good to be connected with you once again.

00:25.920 --> 00:29.920
Amazon has a new Linux release to kick us off?

00:29.920 --> 00:30.920
What's this?

00:30.920 --> 00:37.440
Yeah, so Amazon Linux 2, which is really just for their EC2 cloud.

00:37.440 --> 00:43.080
But the big difference now is that unlike the previous version, you can run it on your

00:43.080 --> 00:46.980
own local machines if you want, albeit not on bare metal.

00:46.980 --> 00:53.000
This is Linux in 2017, early 2018, where when you release a new version of your custom Linux

00:53.000 --> 00:55.720
distro, you don't even bother with the ISO anymore.

00:55.720 --> 01:01.280
You release it on Docker Hub or as virtual machine images for VMware, VirtualBox, or

01:01.280 --> 01:04.240
Microsoft's Hyper-V for on solution deployment.

01:04.240 --> 01:06.280
So I decided, well, I'll give it a go before the show.

01:06.280 --> 01:09.880
And I deployed it in Docker on my local machine.

01:09.880 --> 01:14.060
And I would describe it as a very pared down Red Hat enterprise experience.

01:14.060 --> 01:17.800
And when I say pared down, I mean, it doesn't even have PS or top.

01:17.800 --> 01:21.120
It is a very basic command line system.

01:21.120 --> 01:26.160
And YUM has been configured to point to Amazon repositories for the updates and packages.

01:26.160 --> 01:30.400
But this support for running it locally is the big story here, I think.

01:30.400 --> 01:36.560
Because although you could run their previous version, which was, they called it Amazon

01:36.560 --> 01:42.080
Linux AMI, didn't they, 2017.09 was the latest release of it.

01:42.080 --> 01:47.000
It was effectively Amazon Linux 1, let's call it, even though it's not quite called that.

01:47.000 --> 01:50.080
But that one you could only run on EC2.

01:50.080 --> 01:55.480
And a lot of people criticize that because it meant that you had to develop your applications

01:55.480 --> 01:59.760
on one operating system and then deploy them on something completely different.

01:59.760 --> 02:05.400
And okay, it's not going to be 100% the same, the EC2 version and the Docker image that

02:05.400 --> 02:09.080
you're running locally, but it's going to be a lot more similar.

02:09.080 --> 02:14.280
And so it's interesting that they've done this, presumably because they want to draw

02:14.280 --> 02:20.800
more and more people away from RHEL and CentOS and potentially Ubuntu to use in their own

02:20.800 --> 02:21.800
Amazon Linux.

02:21.800 --> 02:22.800
Yeah, perhaps.

02:22.800 --> 02:25.880
Although I think it might be more to your first point that this is about creating a

02:25.880 --> 02:31.680
development environment locally that matches what you would deploy on Amazon's ECS or EC2

02:31.680 --> 02:32.680
infrastructure.

02:32.680 --> 02:39.940
So you have kernel 4.9 inside this thing, you have GCC 7.2.1, glibc 2.25.

02:39.940 --> 02:45.040
This is a base operating system, bare base metal operating system for you to build applications

02:45.040 --> 02:46.040
on top of.

02:46.040 --> 02:48.760
This isn't meant for hobbyist or enthusiast Linux users.

02:48.760 --> 02:53.440
This is truly built for people to just deploy applications on top of.

02:53.440 --> 02:58.560
They wanted to offer something around an LTS kernel that has system D support, they specifically

02:58.560 --> 03:03.000
call that out actually, and what they say newer tooling and software packages, such

03:03.000 --> 03:09.480
as Python, MariaDB, Node.js, that you can install from their Amazon Linux extra repository

03:09.480 --> 03:11.080
that's configured.

03:11.080 --> 03:15.440
And you mentioned the long-term support kernel, well, this is going to get five years of long-term

03:15.440 --> 03:17.400
support once we get the final release.

03:17.400 --> 03:23.920
Now, I wouldn't be too surprised if that 4.9 kernel holds it back in raw performance comparisons

03:23.920 --> 03:24.920
in the future.

03:24.920 --> 03:29.440
It's not that it's that old, so don't take it the wrong way, but in three or four years,

03:29.440 --> 03:30.440
it may be holding it back.

03:30.440 --> 03:35.560
In fact, if you look at some of the early benchmarks from Feronix, it already is sort

03:35.560 --> 03:41.360
of lagging behind the competition in raw performance in some instances, which I think is noteworthy

03:41.360 --> 03:44.800
since the entire purpose of this thing is to be a lean, mean performing machine.

03:44.800 --> 03:49.240
Yeah, if you compare it with clear Linux, that is doing a lot better on almost all of

03:49.240 --> 03:50.240
these benchmarks.

03:50.240 --> 03:53.240
Yeah, and SUSE even does better in some benchmarks as well.

03:53.240 --> 03:56.600
Yeah, but it's funny that Ubuntu kind of comes middle of the road, doesn't it?

03:56.600 --> 04:01.900
It's kind of, as you'd expect, it's quite full featured, but it's lean enough, and that's

04:01.900 --> 04:05.760
why it's a very popular cloud operating system, I think.

04:05.760 --> 04:08.440
So these Feronix benchmarks will be linked in the show notes.

04:08.440 --> 04:12.800
Go to linuxactionnews.com slash 32.

04:12.800 --> 04:16.420
Benchmarks aside, I think this is a pretty clever strategy on Amazon's part.

04:16.420 --> 04:19.880
You build it on something that's an industry standard, you make sure it's supported on

04:19.880 --> 04:24.880
your platform in particular, and now make it available for on-premises deployment.

04:24.880 --> 04:30.500
It's not going to be the biggest version of Linux next year, but if I was a shop that

04:30.500 --> 04:34.800
was looking to build an application that I was going to run on Amazon's infrastructure,

04:34.800 --> 04:38.680
I absolutely would consider this as the base for my operating system.

04:38.680 --> 04:43.180
Well, if you had an application to build, no doubt you'd be doing it on Windows 10 these

04:43.180 --> 04:46.520
days because it pretty much looks like Linux anyway, doesn't it?

04:46.520 --> 04:48.040
Wow, that hits close to home.

04:48.040 --> 04:53.160
It does after you install a different terminal, turn on all the classic stuff, add the Linux

04:53.160 --> 05:00.000
subsystem for Windows, install a Linux distribution, and now add the new OpenSSH client that's

05:00.000 --> 05:01.600
going to be built into Windows 10.

05:01.600 --> 05:06.520
Yeah, so that was part of the Windows subsystem anyway, but now you can just have that if

05:06.520 --> 05:07.660
that's all you need.

05:07.660 --> 05:12.440
If you don't need to do any development locally, but if you just need to SSH out to a server

05:12.440 --> 05:16.480
somewhere, instead of messing around with PuTTY, which people have been using for years,

05:16.480 --> 05:22.480
now you've got native OpenSSH, which is just one more domino of falling, isn't it?

05:22.480 --> 05:24.100
Yeah, it's available already.

05:24.100 --> 05:28.060
If you have the Fall Creators Update and you have a beta option mode, you can, I'm not

05:28.060 --> 05:32.060
a big Windows 10 user, as you can tell, but you can actually install this and not just

05:32.060 --> 05:38.560
the client, but maybe the bigger news for those of us that used to manage Windows servers,

05:38.560 --> 05:41.840
Microsoft's also including an OpenSSH server.

05:41.840 --> 05:45.960
I've spoken to a few Linux people about this and their reaction was, what?

05:45.960 --> 05:49.400
SSHing into a Windows box?

05:49.400 --> 05:51.280
It's like dogs and cats living together.

05:51.280 --> 05:53.280
The whole world's gone mad, isn't it?

05:53.280 --> 05:57.680
You know why it's useful is when you're building automation scripts that kick off with cron

05:57.680 --> 06:03.800
jobs, you SSH into a system, you grab a file, you SCP a file over.

06:03.800 --> 06:07.400
Windows machines, you always had to come up with some sort of convoluted or proprietary

06:07.400 --> 06:14.040
commercial SSH server that you would install and pay an annual fee to use, and it was kind

06:14.040 --> 06:15.720
of like OpenSSH.

06:15.720 --> 06:21.520
To have Microsoft build it is going to make Windows servers fit in with the automation

06:21.520 --> 06:24.860
tools that are being built for all the existing Linux and Unix systems.

06:24.860 --> 06:28.400
And you definitely want to be trusting your private keys with some proprietary SSH server,

06:28.400 --> 06:29.400
don't you?

06:29.400 --> 06:32.880
You know, that's the part of this that I couldn't even believe.

06:32.880 --> 06:35.880
This is the part where they surprised me.

06:35.880 --> 06:37.880
This is all being done in open source.

06:37.880 --> 06:42.940
In fact, they're working upstream with the official OpenSSH portable project, and they

06:42.940 --> 06:47.840
plan to upstream their code to that project, and they've posted everything at github.com

06:47.840 --> 06:52.480
slash PowerShell slash Win32 dash OpenSSH.

06:52.480 --> 06:54.120
Can you believe you're saying this to me?

06:54.120 --> 06:59.040
When you started podcasting all those years ago, can you even imagine conceivably talking

06:59.040 --> 07:00.560
about this kind of stuff?

07:00.560 --> 07:03.400
We've come so far.

07:03.400 --> 07:08.040
This out of almost all of them is the domino I'm the most afraid of.

07:08.040 --> 07:12.440
I have been in the production environment where this is the thing that I needed, but

07:12.440 --> 07:21.040
on top of that, the number one response online is sort of collectively, this is the new Microsoft.

07:21.040 --> 07:26.720
This is Microsoft is just building the best tool now, and they'll do whatever it takes.

07:26.720 --> 07:31.080
That sentiment has, I think, fully clicked in on the internet now.

07:31.080 --> 07:37.320
I think this is almost a bigger deal than them including the Linux subsystem for Windows,

07:37.320 --> 07:41.800
because you could see the strategic reason they did that.

07:41.800 --> 07:47.680
But with OpenSSH, this is genuinely just trying to make people's workflow on Windows a little

07:47.680 --> 07:48.680
bit better.

07:48.680 --> 07:53.320
The fact that you'll be able to SSH in and the communities already building if you had

07:53.320 --> 07:57.800
installed from the chocolatey repo, a little switcher to let you choose if you go into

07:57.800 --> 08:03.560
Command Prompt or PowerShell or Bash when you SSH into your Windows box.

08:03.560 --> 08:05.520
This really is a new era, Joe.

08:05.520 --> 08:12.160
It really is, and it just shows that open source has become the industry standard to

08:12.160 --> 08:16.040
the point where Microsoft just cannot ignore it anymore.

08:16.040 --> 08:21.920
And it does seem to be a recognition that if Windows 10 is going to be a competitive

08:21.920 --> 08:27.780
development workstation and administration platform, it's got to support these features.

08:27.780 --> 08:33.080
And I think this is really going to work in a way that may not be awesome for all Linux.

08:33.080 --> 08:37.480
When you combine the fact that you could now simultaneously, or at least very soon, I should

08:37.480 --> 08:43.960
say, run SUSE and Fedora and Ubuntu side by side on a Windows system, have native OpenSSH

08:43.960 --> 08:50.560
access, and still run best-of-breed applications like the best implementation maybe of Chrome

08:50.560 --> 08:55.360
or of Telegram on the desktop, and you get the Slack app, and then you have a decent

08:55.360 --> 08:59.940
version of Skype if for some horrible reason you have to use that, it's a pretty compelling

08:59.940 --> 09:03.760
workstation for people that just want to get their work done because now they've got Bash

09:03.760 --> 09:06.880
and they don't have to hassle with all these other little fiddly things.

09:06.880 --> 09:12.560
Yeah, not to mention when five o'clock rolls around, fire up Steam and get the AAA games

09:12.560 --> 09:13.560
running.

09:13.560 --> 09:17.400
I think it's going to be a pretty wide appeal, and that's what gives me pause because of

09:17.400 --> 09:19.920
course I want to see more people using desktop Linux.

09:19.920 --> 09:24.320
I know I mentioned this a couple of weeks ago, but I did try out Windows 10 for a bit

09:24.320 --> 09:27.640
for the Coderadio program and couldn't stick with it.

09:27.640 --> 09:32.260
It was fine, and I can really see why it would work for a lot of people, but it is Windows

09:32.260 --> 09:36.640
and there are still things that really bother me about that platform.

09:36.640 --> 09:39.560
But for others, it may not be as much of an annoyance for them.

09:39.560 --> 09:43.440
Yeah, I don't think that we're going to have Linux users going to Windows.

09:43.440 --> 09:47.560
I think it's more a case of this is going to keep people on Windows who may have possibly

09:47.560 --> 09:48.560
gone to Linux.

09:48.560 --> 09:50.040
Yeah, that's my thinking too.

09:50.040 --> 09:55.900
Well, us Linux users, Windows users, and even Mac users were united in our outrage at Mozilla's

09:55.900 --> 09:59.560
decision to just slip a little add-on into our Firefox.

09:59.560 --> 10:03.040
Yeah, now this is something that almost passed me by because I didn't actually notice it

10:03.040 --> 10:07.840
in Firefox, but then I read online the outrage about it.

10:07.840 --> 10:14.640
And so there's a TV show on the USA network called Mr. Robot, which coincidentally is

10:14.640 --> 10:17.520
about hacking and there's quite a lot of Linux in there.

10:17.520 --> 10:22.120
He actually runs Linux Mint on his home desktop, which is quite funny.

10:22.120 --> 10:24.840
Most of the time he uses Kali Linux though.

10:24.840 --> 10:31.160
And they have an ARG, an alternate reality game where there's all sorts of clues and

10:31.160 --> 10:34.600
it's kind of this deeper level to enjoy the show, which is okay, fair enough.

10:34.600 --> 10:37.460
I'm not really into that, but some people are.

10:37.460 --> 10:43.560
And they did this deal with Mozilla to push out this extension into people's browsers,

10:43.560 --> 10:47.840
which was mostly not turned on by default, although I've heard some reports that it was.

10:47.840 --> 10:50.240
That's a little bit unclear at this stage.

10:50.240 --> 10:57.680
That was part of the game without asking people and people were just understandably outraged

10:57.680 --> 10:58.680
about this.

10:58.680 --> 11:05.000
As I say, it passed me by until I read about it because it's removed on my machine, but

11:05.000 --> 11:07.760
I just can't believe that Mozilla would do this.

11:07.760 --> 11:09.120
That's my first reaction to Joe.

11:09.120 --> 11:13.400
And then my second reaction is you just wrote a huge check against all of the great will

11:13.400 --> 11:16.640
you just accumulated for Firefox 57 quantum.

11:16.640 --> 11:17.640
Yeah.

11:17.640 --> 11:21.280
All the people who were considering moving back or who have moved back.

11:21.280 --> 11:25.440
Now I'm thinking, well, hang on, if you're going to do stuff like this, why am I bothering?

11:25.440 --> 11:30.400
I put Firefox 57 on all of my systems except for this one machine I'm sitting in front

11:30.400 --> 11:34.840
of right now and it's at least paused my role a little bit.

11:34.840 --> 11:37.440
I'm not totally sure how I feel about this.

11:37.440 --> 11:43.840
I definitely am upset because the deal I had with Firefox is they were the anti-chrome

11:43.840 --> 11:47.800
and I was trying to get some insight into why Mozilla would do this.

11:47.800 --> 11:52.500
So I did some digging around and I follow some Mozilla employees and some Rust developers

11:52.500 --> 11:57.120
on Twitter and I've seen they're pretty upset as well.

11:57.120 --> 12:03.720
They've also claimed that Mozilla wasn't paid a dime for any of this, that this was the

12:03.720 --> 12:04.920
other way around.

12:04.920 --> 12:10.800
This was going to be a huge promotion for Firefox in the popular Mr. Robot series.

12:10.800 --> 12:17.280
And this was, I think, a desperate attempt to capitalize on good momentum.

12:17.280 --> 12:22.080
We've just got a great boost from 57, now we're going to be featured in Mr. Robot and

12:22.080 --> 12:26.520
the thinking must have been people would see this exclusive content tie in with the series

12:26.520 --> 12:30.880
when they watch the show and they would rush to download Firefox again and then they would

12:30.880 --> 12:31.880
stick with it.

12:31.880 --> 12:37.120
Well, that would make sense if it was a show that was as big as, say, The Walking Dead.

12:37.120 --> 12:42.840
But Mr. Robot is on a fairly small network, USA, and my understanding is, I don't know

12:42.840 --> 12:48.440
exact figures, but I think it gets under a million viewers, which is not very much.

12:48.440 --> 12:53.040
And okay, there's quite a lot of people watching on Amazon and Netflix, that sort of thing,

12:53.040 --> 12:57.320
on demand, but it's not a massive show.

12:57.320 --> 12:59.160
It's probably quite a technical audience.

12:59.160 --> 13:00.160
I certainly watch it.

13:00.160 --> 13:01.160
I think it's quite a good show.

13:01.160 --> 13:07.600
I think the third season has been very good, but I just don't see how it's worth burning

13:07.600 --> 13:09.000
this goodwill.

13:09.000 --> 13:14.400
If there's any TV audience out there that would not take this very well, it's the Mr.

13:14.400 --> 13:18.240
Robot television audience out of all of the television shows that have maybe have ever

13:18.240 --> 13:20.880
been created.

13:20.880 --> 13:25.600
So you can check anyway, if you are running Firefox, you can go to about colon studies

13:25.600 --> 13:31.880
in the URL bar and see if it's installed and there's a button there, update preferences,

13:31.880 --> 13:37.360
which takes you to about preferences and then hash privacy.

13:37.360 --> 13:42.520
And then you can untick the box for allow Firefox to send technical interaction data

13:42.520 --> 13:48.800
to Mozilla and also allow Firefox to install and run studies.

13:48.800 --> 13:54.000
Now this studies thing is how they managed to push this out to people without them noticing.

13:54.000 --> 13:57.480
And I cannot believe that that is on by default.

13:57.480 --> 14:01.400
What's the point of running a free software open source browser if the vendor can push

14:01.400 --> 14:06.480
plugins and add-ons and stuff and stuff that I don't need crap basically.

14:06.480 --> 14:10.880
So I urge people go to that and turn that stuff off if you want to be protected against

14:10.880 --> 14:11.880
this.

14:11.880 --> 14:13.400
And okay, it's not nefarious.

14:13.400 --> 14:14.400
It's not malware.

14:14.400 --> 14:17.760
Although people were very confused by it because it wasn't even clear that it was coming from

14:17.760 --> 14:19.320
this Mr. Robot show.

14:19.320 --> 14:22.600
It would just seem like this weird malware that had been added.

14:22.600 --> 14:28.640
But who knows, at the moment, Mozilla has been run by people who don't have nefarious

14:28.640 --> 14:35.080
intentions I don't think, but you never know if someone compromised their servers or something,

14:35.080 --> 14:37.320
this could be a mechanism to push stuff in.

14:37.320 --> 14:43.800
So this is just a catalog of errors from Mozilla, errors of judgment and technical errors, and

14:43.800 --> 14:45.760
I'm just very disappointed with them.

14:45.760 --> 14:49.680
I think it betrays a deep misunderstanding of their core base.

14:49.680 --> 14:53.320
The pocket stuff, I think, is what comes to people's mind is the first time this really

14:53.320 --> 14:54.320
happened.

14:54.320 --> 14:57.600
But since then, there's also been the clicks controversy, which only a few users in Germany

14:57.600 --> 15:02.400
were subjected to, but it was basically full on every URL you visit type surveillance with

15:02.400 --> 15:03.800
one of their partners.

15:03.800 --> 15:08.420
And I'm going to now be turning all of this stuff off on all my machines.

15:08.420 --> 15:12.240
And I've always left it on because I wanted to register as a Linux user.

15:12.240 --> 15:16.880
I wanted their metric servers to collect an active Linux instance and hoping that maybe

15:16.880 --> 15:21.120
some of those Windows users were turning it off, and us Linux users were leaving it on

15:21.120 --> 15:25.480
to show our vote to keep supporting Linux, and now I've got to turn it all off.

15:25.480 --> 15:27.480
And I find that to be really unfortunate.

15:27.480 --> 15:30.960
I would only be presuming what's going on over at Mozilla, but I really hope there is

15:30.960 --> 15:35.480
an honest reflection on this moment where they can say to themselves, we are clearly

15:35.480 --> 15:40.940
disconnected with the relationship that people have with our web browser, and we have now

15:40.940 --> 15:46.320
made three very glaring mistakes where we have violated their trust and their privacy,

15:46.320 --> 15:53.160
and we cannot build our brand around privacy, security, and web standards when we keep making

15:53.160 --> 15:54.160
these mistakes.

15:54.160 --> 15:55.840
Well, you mentioned Pocket.

15:55.840 --> 15:56.840
Don't worry.

15:56.840 --> 16:04.280
They acquired Pocket earlier this year, and they're going to open source it anytime now.

16:04.280 --> 16:05.360
Last.ting.com.

16:05.360 --> 16:09.780
Go there to support this show, but also get $25 in Ting service credits if you bring a

16:09.780 --> 16:13.200
device or get $25 off of a Ting cell phone.

16:13.200 --> 16:14.800
It's a smarter way to do mobile.

16:14.800 --> 16:19.160
The average Ting bill is just $23 per month per phone.

16:19.160 --> 16:23.180
It's $6 for your line, and then your usage on top of that.

16:23.180 --> 16:27.240
So if you have Wi-Fi at work and you have Wi-Fi at home, then you're really probably

16:27.240 --> 16:31.720
only using your mobile data on a day-to-day basis when you're commuting, at least mostly

16:31.720 --> 16:35.800
in my case, or maybe when a special occasion comes up and I'm out and about, I'm out Christmas

16:35.800 --> 16:36.800
shopping.

16:36.800 --> 16:41.080
So I love this system because it's sort of like hacking the system.

16:41.080 --> 16:44.580
I can get by some months and not make a phone call, and that's amazing.

16:44.580 --> 16:47.380
Sometimes I'll just do it all over Skype, or I'll do it all over Telegram.

16:47.380 --> 16:48.520
It's wonderful.

16:48.520 --> 16:50.520
It's a simple system for technical people.

16:50.520 --> 16:54.840
It's just pay for what you use, and they have CDMA and GSM systems.

16:54.840 --> 16:55.840
Go check it out.

16:55.840 --> 17:01.440
Go to last.ting.com, nationwide coverage, no contracts, pay for what you use, last.ting.com.

17:01.440 --> 17:09.200
All right, Chris, it's time to get our tinfoil hats on and time to start frying that conspiracy

17:09.200 --> 17:10.200
bacon.

17:10.200 --> 17:12.240
I do love my conspiracy bacon, Joe.

17:12.240 --> 17:16.200
Yeah, let's talk about the Intel management engine again.

17:16.200 --> 17:22.360
And so it's come out this week that starting with Intel management engine version 12, Intel

17:22.360 --> 17:26.440
are going to put a hardware lock to stop these downgrade attacks.

17:26.440 --> 17:31.080
So they're going to stop you overwriting the firmware.

17:31.080 --> 17:36.720
And that was one of the big attack vectors, but this is something that you had speculated

17:36.720 --> 17:42.200
was going to happen to stop people being able to disable the management engine in the first

17:42.200 --> 17:43.200
place.

17:43.200 --> 17:44.920
And it seems that you were right about that.

17:44.920 --> 17:47.400
Yeah, we weren't quite sure which direction would it go.

17:47.400 --> 17:52.940
Would they double down and try to prevent this, or would they offer a line of processors

17:52.940 --> 17:57.160
without the management engine, which would have been the much better scenario.

17:57.160 --> 18:01.720
I suppose if you really buy this concept that this is a fundamental feature you must have,

18:01.720 --> 18:05.520
and I acknowledge it probably is useful for some network administrators and businesses.

18:05.520 --> 18:06.520
Absolutely.

18:06.520 --> 18:10.480
But if you accept the fundamental fact that it's useful for all of the systems, then I

18:10.480 --> 18:14.680
guess you would just double down on securing it because otherwise it's an attack vector.

18:14.680 --> 18:16.560
But is this even going to work?

18:16.560 --> 18:18.480
Are people just going to find a way around it?

18:18.480 --> 18:22.020
Well, they thought they'd built an unhackable system before, I would imagine.

18:22.020 --> 18:24.180
So people generally find the weak spots.

18:24.180 --> 18:29.000
There may be a weak spot in the fact that OEMs have the option to turn this on or off.

18:29.000 --> 18:32.720
It ships as disabled by default for now.

18:32.720 --> 18:38.460
And then your HPs and Dells and Lenovo's of the world have to toggle it back on.

18:38.460 --> 18:43.260
I think this recent spate of stories about this has really gone to illustrate one thing.

18:43.260 --> 18:48.200
The Intel has got a lot of clever people working for them on this kind of stuff, but you cannot

18:48.200 --> 18:50.640
beat the wisdom of the crowds.

18:50.640 --> 18:55.760
And if you've got an entire world of people hacking this thing, they're going to find

18:55.760 --> 18:57.200
problems with it.

18:57.200 --> 19:03.800
And if it's not open, and if your whole outlook on it and your whole approach to it isn't

19:03.800 --> 19:09.800
an open wisdom of the crowds, many eyeballs approach, then you're going to keep running

19:09.800 --> 19:10.800
into these problems.

19:10.800 --> 19:16.760
And it's just essentially an arms race at this point because it's got enough publicity

19:16.760 --> 19:20.480
that no matter what Intel do now, there's going to be so many people hammering on it,

19:20.480 --> 19:25.160
trying to beat it to make a name for themselves at things like Black Hat Europe and stuff.

19:25.160 --> 19:26.280
They're creating demand.

19:26.280 --> 19:28.040
They're creating demand for a product.

19:28.040 --> 19:29.380
Yeah, exactly.

19:29.380 --> 19:34.160
And so they've got to give up at some point and either properly open source it, which

19:34.160 --> 19:38.020
doesn't seem likely, or offer proper hardware kill switches for it.

19:38.020 --> 19:39.920
That's the only solution.

19:39.920 --> 19:43.120
Purism has gotten a little bit of publicity out of this announcement as well.

19:43.120 --> 19:48.180
The Register went to Todd Weaver, the CEO of Purism, to get a quote about this.

19:48.180 --> 19:52.040
There is now a product category that is being defined by Intel.

19:52.040 --> 19:56.160
And it's ironic that they don't see it because they could sell to this very market themselves

19:56.160 --> 19:59.160
a product that doesn't have the management engine.

19:59.160 --> 20:03.720
Or is it just that we're trapped in this FOSS bubble that we care about this stuff?

20:03.720 --> 20:06.640
Yeah, I think it probably tints our view on this a bit.

20:06.640 --> 20:08.320
I think that's a fair question to ask.

20:08.320 --> 20:10.680
I don't necessarily think it means we're wrong, though.

20:10.680 --> 20:13.680
When you have a core fundamental piece of technology like this, history has shown us

20:13.680 --> 20:16.680
more eyes is almost always a good thing.

20:16.680 --> 20:20.600
And you'd kind of expect Intel to have that opinion as well since they've been around

20:20.600 --> 20:22.280
the tech industry for a little while.

20:22.280 --> 20:28.160
And these things almost never, ever end well for any company that goes down this path.

20:28.160 --> 20:30.800
But we just don't know all of their motivations in this as well.

20:30.800 --> 20:33.700
And we also don't know if this is the final say.

20:33.700 --> 20:38.240
Intel says they will likely toggle this to on by default in the near future and recommend

20:38.240 --> 20:41.240
that OEMs do that themselves today.

20:41.240 --> 20:46.080
They may also be somewhere in the boardroom drawing up plans right now for a management

20:46.080 --> 20:47.680
free version of the Intel chip.

20:47.680 --> 20:48.680
Who knows?

20:48.680 --> 20:50.100
We'll just have to wait and see where this thing goes.

20:50.100 --> 20:54.240
But right now, I'm not too surprised they've made this step, if maybe just a bit disappointed.

20:54.240 --> 20:55.240
Yeah.

20:55.240 --> 20:56.240
All right.

20:56.240 --> 21:00.920
Any update on this Conservancy and Software Freedom Law Center situation?

21:00.920 --> 21:06.040
This is a post on the Software Freedom Conservancy's blog from Bradley who runs the Conservancy.

21:06.040 --> 21:10.520
And it is confirming some things that people suspected and clarifying other things that

21:10.520 --> 21:12.580
people have speculated as well.

21:12.580 --> 21:18.080
And in it, he links to the full filing, where they are trying to just go for a dismissal.

21:18.080 --> 21:22.080
Essentially, they're building a case around three core points.

21:22.080 --> 21:28.080
Number one, the law center knew the Conservancy's name because they helped establish the Conservancy

21:28.080 --> 21:30.840
and provided legal counsel for six years.

21:30.840 --> 21:35.580
They have invited the Conservancy to many events where they promoted their services

21:35.580 --> 21:39.000
and even encouraged projects to seek them out.

21:39.000 --> 21:46.460
And the third tier is this is a personal vendetta between Eben Moglen and Bradley and Karen.

21:46.460 --> 21:51.880
And they make this case in a long 168-page legal filing.

21:51.880 --> 21:53.580
I read the entire thing.

21:53.580 --> 21:55.640
The most salacious page is 29.

21:55.640 --> 21:59.340
And if you want to read it yourself, you really only need to read the first 36 pages.

21:59.340 --> 22:06.800
But in these 36 pages, and then they give exhibits, they build a case of years of dialogue

22:06.800 --> 22:11.780
between the Conservancy and the law center where lots of grievances have been aired,

22:11.780 --> 22:14.820
but the trademark was never one of them.

22:14.820 --> 22:18.440
It's going to be very interesting to see what the law center comes back with against this

22:18.440 --> 22:24.640
because based on this evidence, it does seem like they don't have any case against this

22:24.640 --> 22:25.640
trademark, do they?

22:25.640 --> 22:30.540
Because as you say, there's been a lot of back and forth over the years, but this is

22:30.540 --> 22:32.820
the first time they've ever mentioned the trademark.

22:32.820 --> 22:37.120
So it just seems like a spurious suit to me.

22:37.120 --> 22:38.360
And they're filing.

22:38.360 --> 22:41.760
They make a pretty clear case that it's bad blood.

22:41.760 --> 22:47.540
But in some parts, they use very plain English about the situation in a way that does feel

22:47.540 --> 22:50.440
a bit like airing of dirty laundry.

22:50.440 --> 22:52.600
It's a little unfortunate to see this have to take place.

22:52.600 --> 22:57.860
And I think Bradley even reflects a bit in his post saying that the speculation and the

22:57.860 --> 23:01.600
energy that's gone towards people constructing narratives around this is energy that should

23:01.600 --> 23:03.100
go towards free software.

23:03.100 --> 23:04.760
I completely agree.

23:04.760 --> 23:11.740
Unfortunately, the ramifications, if the Freedom Software Law Center were successful, the ramifications

23:11.740 --> 23:16.080
would, would really split the open source community because we're talking about some

23:16.080 --> 23:20.140
projects that are under the conservancy umbrella that really matter to people.

23:20.140 --> 23:22.520
And if you go to their website, they have a list.

23:22.520 --> 23:27.680
And I guarantee you, there are projects on that list you care about.

23:27.680 --> 23:30.600
That is true, but I'm not worried somehow.

23:30.600 --> 23:37.000
I just don't think that there's enough of a case here to warrant any sleepless nights

23:37.000 --> 23:38.000
here.

23:38.000 --> 23:44.640
It's just a spat that's got out of control and I just think it's going to end quietly

23:44.640 --> 23:46.680
rather than in a big bang.

23:46.680 --> 23:52.480
But one thing that's missing from all of this update is the Linux kernel community enforcement

23:52.480 --> 23:58.840
statement stuff, which we speculated at the time was the kind of catalyst for this.

23:58.840 --> 24:00.760
But there's been no mention of that, has there?

24:00.760 --> 24:04.400
Yeah, because I think their position is that's not really what this is about.

24:04.400 --> 24:05.680
Do we believe that?

24:05.680 --> 24:06.680
I do.

24:06.680 --> 24:10.720
I do because the legal process started back in September, before the announcement was

24:10.720 --> 24:11.720
even made.

24:11.720 --> 24:16.360
I mean, I'm sure that the background work to that large agreement between all 200 kernel

24:16.360 --> 24:20.640
developers that had copyright, I'm sure that took a long time.

24:20.640 --> 24:23.720
So I'm sure Mr. Moglen was aware of it.

24:23.720 --> 24:29.160
But when you read the law center's blog, this feels more like it's a competitive, we want

24:29.160 --> 24:33.200
to start offering these types of services move and we don't like these people and less

24:33.200 --> 24:36.880
about the specifics around the kernel enforcement strategy.

24:36.880 --> 24:39.400
My only pause with all of this, Joe, is I think you're probably right.

24:39.400 --> 24:41.740
I think the Conservancy has a great case here.

24:41.740 --> 24:45.840
They're smart people and they're very direct in their legal filing.

24:45.840 --> 24:48.400
It's just that even Moglen is not new.

24:48.400 --> 24:52.360
He has been around for a long time and he really knows law.

24:52.360 --> 24:55.680
So if there was anybody I'd be afraid to go to war with in the courtroom, it would be

24:55.680 --> 24:56.680
him.

24:56.680 --> 24:59.980
Well, like I said last time, I just want to see an end to this as soon as possible.

24:59.980 --> 25:05.620
This just cannot be good for free software, open source, Linux, any of the stuff we talk

25:05.620 --> 25:08.240
about and cover and use every day.

25:08.240 --> 25:12.320
I just want to see this done and dusted and let's move on.

25:12.320 --> 25:13.600
Yeah, I completely agree.

25:13.600 --> 25:18.080
And hopefully the Conservancy's motion for a summary judgment here will be successful

25:18.080 --> 25:23.320
because that will be the least costly and most time efficient process if they are successful.

25:23.320 --> 25:24.320
Yeah.

25:24.320 --> 25:27.840
Okay, so let's end with some Jupyter broadcasting news.

25:27.840 --> 25:30.960
And there's been a reboot of TechSnap with you and Wes.

25:30.960 --> 25:35.660
Yeah, episode 348 just went out on the feeds a couple of days ago and that's where the

25:35.660 --> 25:36.660
reboot hits.

25:36.660 --> 25:38.240
Wes and I are rebuilding the show.

25:38.240 --> 25:41.740
We're going to be adding new stuff and we're hoping people get in on the ground floor.

25:41.740 --> 25:42.980
We're revamping the production.

25:42.980 --> 25:44.880
We've got a ton of stuff planned.

25:44.880 --> 25:49.640
New website as well, TechSnap.systems and you can put the RSS feed in your favorite

25:49.640 --> 25:54.580
podcast catcher, TechSnap.systems.rss.

25:54.580 --> 25:56.200
We're trying out some new stuff with the show.

25:56.200 --> 25:59.720
Took some lessons we've learned from Linux Action News and we're applying it to TechSnap

25:59.720 --> 26:04.240
and I'm trying out chapters and time coding in the podcast player.

26:04.240 --> 26:06.440
And people so far are really liking that.

26:06.440 --> 26:10.580
So when you look in a podcast player that supports it, everything's time coded.

26:10.580 --> 26:12.400
You can jump to those sections in the show.

26:12.400 --> 26:13.680
So we're doing some new stuff with it too.

26:13.680 --> 26:16.920
So it's just, I'd like some feedback on that as well if people want to check it out.

26:16.920 --> 26:21.400
But come on, the most important thing is no more BSD nonsense.

26:21.400 --> 26:23.040
It's two Linux users now.

26:23.040 --> 26:24.040
Yeah.

26:24.040 --> 26:28.760
So we might slip it in from time to time, rumor has it Alan Jude may make a wild appearance

26:28.760 --> 26:29.760
every now and then on the show.

26:29.760 --> 26:32.520
Oh yeah, you can't escape ZFS on that show, can you?

26:32.520 --> 26:35.040
You gotta go to Alan Jude when you got the hard ZFS questions.

26:35.040 --> 26:37.460
In the meantime, we hope you keep coming back to this show.

26:37.460 --> 26:41.600
Go to linuxactionnews.com slash subscribe for all the ways to get new episodes of this

26:41.600 --> 26:42.600
here show.

26:42.600 --> 26:46.060
And go to linuxactionnews.com slash contact for ways to get in touch.

26:46.060 --> 26:51.360
And please consider supporting the entire network at patreon.com slash jupitersignal.

26:51.360 --> 26:54.480
We'll be back next week with our special end of year wrap up show.

26:54.480 --> 26:56.120
I'm at Chris LAS.

26:56.120 --> 26:57.520
I'm at Joe Rissington.

26:57.520 --> 27:00.120
Thank you for joining us and we'll see you next week.

27:00.120 --> 27:22.560
See you later.

