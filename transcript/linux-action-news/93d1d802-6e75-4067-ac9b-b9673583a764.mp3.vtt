WEBVTT

00:00.000 --> 00:15.960
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:15.960 --> 00:20.120
This is episode 68, recorded on August 26, 2018.

00:20.120 --> 00:21.120
I'm Chris.

00:21.120 --> 00:22.120
And I'm Joe.

00:22.120 --> 00:23.120
Hello, Joe.

00:23.120 --> 00:24.280
It's great to be connected with you.

00:24.280 --> 00:28.960
We have some major milestones to get into this week, and let's start with Flatpak hitting

00:28.960 --> 00:30.880
version 1.0.

00:30.880 --> 00:33.960
Yes, talk about a major milestone.

00:33.960 --> 00:35.640
This is them setting their stall out, isn't it?

00:35.640 --> 00:40.280
Saying that Flatpak is ready for mainstream adoption now, mainstream use.

00:40.280 --> 00:41.280
It's 1.0.

00:41.280 --> 00:43.100
There's nowhere for them to hide now.

00:43.100 --> 00:50.280
This is the successor to the 0.10x series, which was first introduced in October of 2017.

00:50.280 --> 00:53.020
And there are many new features, which we will have linked in the show notes.

00:53.020 --> 00:57.460
But I wanted to call out a couple of my personal favorites, the new portals that allow apps

00:57.460 --> 01:02.560
to create sandboxes and then restart themselves so they've been maybe updated or they have

01:02.560 --> 01:03.560
new permissions.

01:03.560 --> 01:07.040
They'll be smarter about that and more on those portals in a moment.

01:07.040 --> 01:12.240
Apps can now also use D-Bus services better by giving specific names to the applications

01:12.240 --> 01:16.880
on the D-Bus rather than just trying to guess what the application ID means.

01:16.880 --> 01:22.360
And one of the cooler ones, apps can now request access to the host SSH agent to securely get

01:22.360 --> 01:26.120
access to a remote server or maybe even like a Git repository.

01:26.120 --> 01:30.520
There's a whole bunch of stuff in there, including one of my favorite ones, like Flatpak no longer

01:30.520 --> 01:35.880
requiring file systems that support extended attributes, hello Dropbox.

01:35.880 --> 01:39.400
And those portals, those portals are going to be great because they're more separated

01:39.400 --> 01:45.680
now from Flatpak and they've been moved to the XDG desktop portal project and they're

01:45.680 --> 01:47.620
working with snaps as well.

01:47.620 --> 01:52.000
And this is going to grant users the ability to say, deny access to my camera or allow

01:52.000 --> 01:56.160
access to my camera to a completely containerized secure application.

01:56.160 --> 01:57.280
It's great stuff.

01:57.280 --> 02:01.640
One thing that struck me about this is quite how many new features they've got in this

02:01.640 --> 02:02.640
1.0 release.

02:02.640 --> 02:05.540
And you do have to wonder, does this mean now they're at 1.0, they're going to slow

02:05.540 --> 02:09.940
down a bit or are they just going to keep adding more and more features all the time?

02:09.940 --> 02:15.080
It's nearly a weekly basis that I see some new use for Flatpak inside the larger GNOME

02:15.080 --> 02:16.640
project as well.

02:16.640 --> 02:20.800
And I bet a lot of the features that are being driven in Flatpak are coming from that tight

02:20.800 --> 02:22.160
integration.

02:22.160 --> 02:24.280
And I imagine that's going to continue.

02:24.280 --> 02:25.560
And you mentioned snaps there.

02:25.560 --> 02:28.240
I mean, that's kind of the elephant in the room here, isn't it?

02:28.240 --> 02:31.240
Snaps are progressing at a really, really fast pace.

02:31.240 --> 02:34.560
Canonical have thrown a lot of resources at snap.

02:34.560 --> 02:38.900
And so is this 1.0 a kind of response to that?

02:38.900 --> 02:41.720
Is it them saying, look, we're just as relevant too?

02:41.720 --> 02:45.840
Yeah, we've really seen a lot of wins for snap packages this entire year.

02:45.840 --> 02:50.400
I think almost on a weekly basis, you see some new project that everybody loves or some

02:50.400 --> 02:53.840
new commercial application that's now a snap package.

02:53.840 --> 02:58.880
What I find fascinating about this is this not really like this head-to-head dogfight

02:58.880 --> 03:03.180
over two different package formats, because they're both kind of working together.

03:03.180 --> 03:06.360
Snaps will be taking advantage of this XDG portal stuff.

03:06.360 --> 03:10.040
Poppy and I got into this a little bit on last week's Linux Unplugged.

03:10.040 --> 03:13.460
There's really a lot of cross-pollination happening here.

03:13.460 --> 03:18.720
And it's not the kind of head-to-head battle that you might see blogs sort of frame it

03:18.720 --> 03:19.720
as.

03:19.720 --> 03:21.760
There is a bit of friendly competition there.

03:21.760 --> 03:26.800
And you see them kind of spurring each other on and matching each other feature for feature.

03:26.800 --> 03:30.840
And that's the good thing about open source, they can collaborate while also being in competition

03:30.840 --> 03:31.920
with each other.

03:31.920 --> 03:36.600
And because all the code is out there in open source, you can take bits from each other

03:36.600 --> 03:39.580
and certainly inspiration from each other.

03:39.580 --> 03:42.680
And ultimately, everybody benefits as a result.

03:42.680 --> 03:46.120
And like I said, last time we talked about this, there's not going to be one winner.

03:46.120 --> 03:50.360
We're going to end up with snaps being great and flat packs being great and systems using

03:50.360 --> 03:51.360
a mixture of both.

03:51.360 --> 03:54.920
Well, congratulations to them, 1.0 is a major milestone.

03:54.920 --> 03:57.040
And now let's move to the petro coin.

03:57.040 --> 04:01.960
Joe's always looking for these stories that validate real world use cases for blockchain

04:01.960 --> 04:03.040
technology.

04:03.040 --> 04:04.560
You found a zinger this week, Joe.

04:04.560 --> 04:09.360
Yeah, it's certainly a real world implementation, but I'm not sure how much value it has.

04:09.360 --> 04:11.200
And so this is Venezuela.

04:11.200 --> 04:14.900
Now they have had economic problems for quite some time now.

04:14.900 --> 04:20.060
And their currency, their fiat currency has been going through hyperinflation.

04:20.060 --> 04:25.680
And so in an attempt to kind of stabilize that, they have introduced a state backed

04:25.680 --> 04:29.560
cryptocurrency and tied their fiat currency to it.

04:29.560 --> 04:35.040
Yeah, it's called the petro and it's based itself on like their oil basket of assets.

04:35.040 --> 04:40.740
And so their currency is pegged to a crypto coin, which is then pegged to a basket of

04:40.740 --> 04:42.160
oil assets.

04:42.160 --> 04:45.520
It's supposed to be a liquid asset reflective of the price of oil.

04:45.520 --> 04:49.260
And of course, there's a white paper on it, which you can go read and it will tell you

04:49.260 --> 04:53.520
basically nothing because this whole thing is an idea out of the president's office.

04:53.520 --> 04:57.640
But it bakes down to an attempt to lend some credibility and stability to the country's

04:57.640 --> 04:58.920
currency.

04:58.920 --> 05:02.700
And this crypto coin is how they're doing it, including apps for mobile devices to help

05:02.700 --> 05:05.960
do conversions and math.

05:05.960 --> 05:11.220
And it is kind of working right now, but it's very early days.

05:11.220 --> 05:13.980
The crypto coins really only existed since March.

05:13.980 --> 05:18.460
It is on some exchanges as of right now, but not many.

05:18.460 --> 05:24.100
And there is a lot of seeding, quote unquote, going on where people are investing, quote

05:24.100 --> 05:28.880
unquote, with currency that the government set aside and kept for itself.

05:28.880 --> 05:30.140
We'll see where all this goes.

05:30.140 --> 05:31.760
But it is it's happening.

05:31.760 --> 05:35.980
You have a country that is attempting to use a crypto coin and they're talking about it

05:35.980 --> 05:37.640
to their citizens.

05:37.640 --> 05:40.960
That seems like a big story, at least the beginning of one.

05:40.960 --> 05:45.280
Yeah, I've been watching this for months now and I've seen nothing but skepticism about

05:45.280 --> 05:46.680
it.

05:46.680 --> 05:51.720
But I thought it was finally worth mentioning because this is something new.

05:51.720 --> 05:54.400
This is a precedent being set here.

05:54.400 --> 06:00.420
This is the first government actually implementing a state backed cryptocurrency.

06:00.420 --> 06:05.440
This is not just people within a country using it and it becoming popular.

06:05.440 --> 06:08.520
This is officially sanctioned.

06:08.520 --> 06:14.000
And you wonder if this experiment goes badly, is that going to reflect badly on the rest

06:14.000 --> 06:19.840
of the whole cryptocurrency and blockchain world or will people chalk it off?

06:19.840 --> 06:21.720
I mean, I'm assuming it's going to go badly.

06:21.720 --> 06:25.460
I mean, just from what I've read, I've read nothing but skepticism.

06:25.460 --> 06:26.920
Nobody seems to be positive about it.

06:26.920 --> 06:27.920
No, they don't.

06:27.920 --> 06:32.200
I don't think it will spell doom for all crypto, though, because so many times I've seen these

06:32.200 --> 06:37.920
one off crazy ideas and they blow up and then they fizzle away.

06:37.920 --> 06:40.760
In the end, it's really hard to know how successful this thing is going to be.

06:40.760 --> 06:41.760
What do we know?

06:41.760 --> 06:43.560
Yeah, this is not our area of expertise.

06:43.560 --> 06:48.760
There's a couple of details of this that I would love to just have looked at further.

06:48.760 --> 06:56.360
The fact that they've pegged the value of a crypto coin to a physical asset is fascinating.

06:56.360 --> 06:59.600
So Bitcoin, you know, we often refer to Bitcoin as its value compared to the dollar.

06:59.600 --> 07:00.720
So it's pinned to the dollar.

07:00.720 --> 07:05.240
A Bitcoin is worth six thousand six hundred and eighty nine dollars right now as we record.

07:05.240 --> 07:07.680
It's pegged to the dollar's value.

07:07.680 --> 07:13.080
But the petro coin being pegged to this basket of oil assets, that's interesting.

07:13.080 --> 07:18.720
And then the fact that their fiat currency is pegged to the value of the cryptocurrency

07:18.720 --> 07:20.740
is also new territory.

07:20.740 --> 07:24.900
And those things, regardless of this whole shebang is successful or not, I'd love for

07:24.900 --> 07:29.120
people to look at those things particularly because it seems like, for better or worse,

07:29.120 --> 07:34.160
it gives the government full control over their own currency backed by a real physical

07:34.160 --> 07:35.160
asset.

07:35.160 --> 07:39.080
And again, I'm a Linux user, not an economist, but that seems worth studying.

07:39.080 --> 07:42.720
Yeah, well, it's definitely going to be one to keep an eye on.

07:42.720 --> 07:47.880
What is it about this time of year that means we have so many birthdays in the Linux and

07:47.880 --> 07:48.920
open source world?

07:48.920 --> 07:51.920
Is it that people launch a lot of stuff at the end of summer?

07:51.920 --> 07:54.400
They've been working throughout summer and then it was time to launch it?

07:54.400 --> 07:58.560
Yeah, maybe it's those final summer projects, the last days of summer, you're doing your

07:58.560 --> 07:59.560
code drop.

07:59.560 --> 08:00.560
Here it is.

08:00.560 --> 08:01.560
Here's my announcement.

08:01.560 --> 08:02.560
And we have a couple of great ones.

08:02.560 --> 08:05.800
This week is Linux's 27th birthday.

08:05.800 --> 08:07.240
And yes, Linux has two birthdays.

08:07.240 --> 08:09.600
Yeah, but this is the official one for my money.

08:09.600 --> 08:10.600
Yeah, you think so?

08:10.600 --> 08:17.280
So you have, okay, some people say it's October 5th, 1991, because that's when the original

08:17.280 --> 08:18.640
code was dropped.

08:18.640 --> 08:24.840
But then others say, like yourself, that it's really August 25th, 1991 is the actual birthday

08:24.840 --> 08:30.640
because that's when the announcement took place on the mailing list where Linus introduced

08:30.640 --> 08:36.200
his humble operating system that would only work on 386s and would only work with ATH

08:36.200 --> 08:37.200
clones.

08:37.200 --> 08:41.480
Yeah, and it wouldn't be big and professional like GNU and all that stuff.

08:41.480 --> 08:43.640
That for me is like the real milestone.

08:43.640 --> 08:45.720
And I think that's when we should really celebrate the birthday.

08:45.720 --> 08:46.720
Yeah.

08:46.720 --> 08:47.720
But 27 years, eh?

08:47.720 --> 08:48.720
Yeah.

08:48.720 --> 08:49.720
It's a long time.

08:49.720 --> 08:50.720
Yeah.

08:50.720 --> 08:51.820
And yet, I think there's still quite a future ahead of it.

08:51.820 --> 08:55.840
Something else even older this week, IRC hit 30.

08:55.840 --> 08:57.200
And yet we're kind of still using it.

08:57.200 --> 09:01.680
I use it occasionally, not as much as I used to, but there are some people and some projects.

09:01.680 --> 09:06.040
Okay, a lot of people have gone to things like Slack and Mattermost and whatever, but

09:06.040 --> 09:07.760
IRC is still going strong.

09:07.760 --> 09:12.200
There's often bridges to IRC, aren't there, from everything, from Matrix and everything.

09:12.200 --> 09:13.200
Oh yeah.

09:13.200 --> 09:14.200
IRC is actually really my favorite.

09:14.200 --> 09:17.100
It's not the one I use the most these days, but it's still my favorite.

09:17.100 --> 09:20.240
Something else that's interesting about some of these is these are born out of universities

09:20.240 --> 09:21.240
back then.

09:21.240 --> 09:24.040
That's where a lot of these projects came from, were universities.

09:24.040 --> 09:29.480
Whereas now, we see a lot of the stuff coming out of corporations, Googles and Amazons.

09:29.480 --> 09:34.440
You see these big projects like Kubernetes and whatnot that started at Google, where

09:34.440 --> 09:37.040
in the past, they were starting at universities like IRC did.

09:37.040 --> 09:40.800
Yeah, I think I'd be inclined to use IRC a bit more if they had Taylor Swift stickers

09:40.800 --> 09:41.800
like Telegraph.

09:41.800 --> 09:45.580
Yeah, T-Swift stickers makes everything better.

09:45.580 --> 09:50.680
And just recently, last week, Debian turned 25, announced by Ian Murdoch on August 16th,

09:50.680 --> 09:51.680
1993.

09:51.680 --> 09:55.760
And he was just looking for something better than the competition, something better than

09:55.760 --> 10:00.960
soft landing Linux system, which was founded by Peter MacDonald in May of 92.

10:00.960 --> 10:04.400
Yeah, and it was almost around the same time as Slackware, but Slackware has been around

10:04.400 --> 10:05.760
for just that little bit longer.

10:05.760 --> 10:07.560
We talked about that recently.

10:07.560 --> 10:13.000
And then last but not least on our list for this week, Gnome marks 21 years.

10:13.000 --> 10:18.080
They're celebrating their 21st birthday, and they're doing it by releasing Gnome 3.29.91,

10:18.080 --> 10:21.880
which is a second beta leading up to Gnome 3.30.

10:21.880 --> 10:26.400
Yeah, that looks like it's shaping up to be a pretty decent release with improvements

10:26.400 --> 10:33.440
to Network Manager, and they're also starting to talk about GTK4.

10:33.440 --> 10:34.440
Last.ting.com.

10:34.440 --> 10:36.400
Ting is smarter than unlimited.

10:36.400 --> 10:38.360
If you use less, you just pay for less.

10:38.360 --> 10:41.520
You don't have to try to guess how many minutes or messages you might use.

10:41.520 --> 10:43.160
You just pay for the ones you use.

10:43.160 --> 10:47.800
It's $6 to have a line, and then it's your minutes, your messages, and your megabytes,

10:47.800 --> 10:50.600
however much you talk, text, and data you use is what you pay.

10:50.600 --> 10:52.640
It's a system that's worked for me for over four years.

10:52.640 --> 10:57.320
I've been a happy Ting customer with three lines now for a long time because it's $6.

10:57.320 --> 11:02.440
I can have a phone, and I have two MiFis, one on CDMA and one on GSM, and I just keep

11:02.440 --> 11:03.440
them active.

11:03.440 --> 11:06.840
I could use the Ting control panel and turn services off when I don't want them, but it's

11:06.840 --> 11:08.160
$6 a month.

11:08.160 --> 11:12.440
The value there to have them available when I need data on either GSM or CDMA networks

11:12.440 --> 11:14.120
is worth that $6.

11:14.120 --> 11:15.120
And that's what I love about Ting.

11:15.120 --> 11:16.520
They got you covered nationwide.

11:16.520 --> 11:18.200
They have two different networks you get to choose from.

11:18.200 --> 11:21.720
There's no contract if you do want to turn stuff off for a bit, and it's all manageable

11:21.720 --> 11:24.560
through a great control panel where you can see your usage at a glance.

11:24.560 --> 11:27.800
You can take complete control of any individual aspects.

11:27.800 --> 11:32.140
And if you got kids, some of them might be kind of handy, is you can set usage alerts.

11:32.140 --> 11:35.400
Maybe when they get to like 5 or 10 gigs of data, get a usage about that.

11:35.400 --> 11:37.380
Hey, kid, go turn your Wi-Fi back on.

11:37.380 --> 11:38.920
That's usually what it is for my kid.

11:38.920 --> 11:42.520
And the thing I love about Ting is they have radically different customer service.

11:42.520 --> 11:44.160
It's better than anybody else's out there.

11:44.160 --> 11:48.520
And if you go to last.ting.com, not only are you supporting the show, but you're also going

11:48.520 --> 11:54.360
to get $25 off a device or $25 in service credit if you bring a device.

11:54.360 --> 11:57.280
They have a BYOD page where you can check your own.

11:57.280 --> 12:02.560
Now there's also a limited time back-to-school promo where you can get a $100 Ting credit

12:02.560 --> 12:07.720
when you get a Moto G6, which is a great phone, and they have details up on their blog.

12:07.720 --> 12:12.780
It's just $250 for this phone, and then you own it outright with no contract.

12:12.780 --> 12:15.180
There's no experience that Ting wants to flash on there.

12:15.180 --> 12:17.920
You can just get updates when they push updates.

12:17.920 --> 12:21.760
It's got a bright, beautiful screen for $250.

12:21.760 --> 12:27.140
And as a back-to-school promo, you can get $100 credit for $23 per month phone on average.

12:27.140 --> 12:29.960
That's $100 credit is going to last you for a long time.

12:29.960 --> 12:32.480
Now, if you don't qualify for a back-to-school promo, don't worry.

12:32.480 --> 12:36.960
If you go to last.ting.com, you still get a $25 service credit, which is likely going

12:36.960 --> 12:40.200
to pay for more than your first month of Ting service.

12:40.200 --> 12:41.900
That's how economical it is.

12:41.900 --> 12:44.680
And you got a bunch of devices you can buy directly or you can bring your own.

12:44.680 --> 12:47.440
Just get started by going to last.ting.com.

12:47.440 --> 12:55.680
Okay, let's talk about Intel and their microcode updates, and specifically the license that

12:55.680 --> 13:01.960
they released them under this week, but then changed their mind after quite a lot of pressure.

13:01.960 --> 13:05.840
After getting called out by Debian in particular on one of them and many others, there was

13:05.840 --> 13:09.980
a licensing term that got applied to the new microcode, amongst many things, like the fifth

13:09.980 --> 13:11.680
new provision in there was.

13:11.680 --> 13:17.460
You cannot publish or provide any software benchmark or comparison test results for anything

13:17.460 --> 13:18.760
at least that used microcode.

13:18.760 --> 13:23.180
Well, that would pretty much include all benchmarks for everything because microcode is running

13:23.180 --> 13:25.680
for every single instruction on the system.

13:25.680 --> 13:30.860
So it would have been a massive restriction on the entire benchmarking community if there

13:30.860 --> 13:32.000
is such a thing.

13:32.000 --> 13:36.220
And that rule applied to anything that used microcode.

13:36.220 --> 13:43.440
And since every instruction on your system uses microcode, it seemed to apply to everything.

13:43.440 --> 13:45.120
And people responded very strongly.

13:45.120 --> 13:49.240
Debian immediately refused to distribute that to their credit.

13:49.240 --> 13:54.140
And Intel thought about it a bit and looks like have changed things.

13:54.140 --> 13:59.100
The question I think that first pops into the mind, though, is how does this happen?

13:59.100 --> 14:02.980
How does language like this just show up in these microcode updates?

14:02.980 --> 14:05.620
Like it isn't anything really flashy either.

14:05.620 --> 14:10.460
It was a text file that gets added to the whole bundle and you just had to like read

14:10.460 --> 14:12.140
the included text files.

14:12.140 --> 14:15.340
Thankfully the people that are responsible for this stuff did.

14:15.340 --> 14:17.280
And in there is where you see this restriction.

14:17.280 --> 14:21.740
It's not up like on some new blog post where Intel's talking about a change in stance on

14:21.740 --> 14:24.040
benchmarks or anything like that.

14:24.040 --> 14:29.300
It's just this little text file that somehow a lawyer in Intel got included with the bundle

14:29.300 --> 14:32.160
of microcode that goes to distributors.

14:32.160 --> 14:33.160
How does that happen?

14:33.160 --> 14:38.380
Well, why it happened was clearly because they're worried about people benchmarking

14:38.380 --> 14:40.260
the difference before and after.

14:40.260 --> 14:46.600
Because these speculative execution workarounds and mitigations do have a fairly significant

14:46.600 --> 14:49.580
performance impact and they wanted to try and hush that.

14:49.580 --> 14:56.860
But how that managed to happen, how it went through legal and PR and stuff, it just beggars

14:56.860 --> 15:00.820
belief because clearly you're going to have a Streisand effect here.

15:00.820 --> 15:01.820
Yeah, exactly.

15:01.820 --> 15:02.820
And I think you nailed it.

15:02.820 --> 15:09.900
I think it was a fear that these series of microcode updates are going to lead to worsening

15:09.900 --> 15:14.100
and worsening performance and perhaps maybe even if we could speculate for a moment, there's

15:14.100 --> 15:17.780
more in the future that are going to worsen performance even more.

15:17.780 --> 15:21.100
But Intel wouldn't have been able to unilaterally apply this to all benchmarks.

15:21.100 --> 15:25.180
So this would have been a tool that they would have selectively used against certain individuals

15:25.180 --> 15:27.180
that they wanted to silence.

15:27.180 --> 15:32.980
That's a, I grant you an extreme take, but it seems like the most likely use for this

15:32.980 --> 15:35.160
tool that they were creating themselves.

15:35.160 --> 15:41.460
I've seen a lot of discussion about this over the last week and even before that about how

15:41.460 --> 15:45.860
if you look at someone like DigitalOcean, clearly they need to be applying these updates

15:45.860 --> 15:50.520
because of VMs and people breaking out of that into other VMs and stuff.

15:50.520 --> 15:55.560
But if you're just running this on your own machine, say your own laptop, there are people

15:55.560 --> 16:01.900
who say you don't really need to install this proprietary code and take the performance

16:01.900 --> 16:04.820
hit because the security risk is not that great.

16:04.820 --> 16:06.860
I mean, I do not subscribe to that.

16:06.860 --> 16:10.520
I will just update everything that I can.

16:10.520 --> 16:11.740
Just why not?

16:11.740 --> 16:15.820
It's better to be safe than sorry, but how do you feel?

16:15.820 --> 16:18.420
Are you doing these updates where available?

16:18.420 --> 16:19.980
I really have two thoughts on it.

16:19.980 --> 16:24.620
Number one, I don't consider these to be just security updates.

16:24.620 --> 16:28.780
Maybe some of these microcode updates are, but I generally consider these low-level firmware

16:28.780 --> 16:35.180
updates to be improvements, security, and maybe even fixes to stuff that could actually

16:35.180 --> 16:36.180
be really bad.

16:36.180 --> 16:43.180
I kind of look at it as like a vendor recalling a flaw in the core logic inside my machine.

16:43.180 --> 16:46.100
Sometimes they can make a mistake again, but sometimes they're trying to fix something

16:46.100 --> 16:49.140
that they've now identified since something's been out in the field for a while.

16:49.140 --> 16:52.020
So I try to look at microcode updates as a complex thing.

16:52.020 --> 16:57.660
And then the second part of it is I also have to be aware that there's a lot more computer

16:57.660 --> 16:59.860
in these individual chips than there used to be.

16:59.860 --> 17:02.860
These are getting to be very sophisticated chips with some of them even having their

17:02.860 --> 17:08.120
own operating systems and their own environments in there that need to be tended to.

17:08.120 --> 17:13.780
And I don't like that, but if I neglect them, the system may suffer for it.

17:13.780 --> 17:16.540
It's not as simple as it used to be, I guess is what I'm trying to say.

17:16.540 --> 17:22.840
And so when I consider all of those factors, I do tend to be pretty religious about applying

17:22.840 --> 17:25.120
these microcode updates and firmware updates.

17:25.120 --> 17:31.600
If I saw an MV and eDrive update come down, thanks to LVFS in the future, I would do a

17:31.600 --> 17:35.460
backup and then I would apply it because I am assuming that's a pretty important update

17:35.460 --> 17:38.060
to make sure that my disk is safe long-term.

17:38.060 --> 17:40.840
And that's just kind of my general outlook on these things.

17:40.840 --> 17:45.220
But I do understand wanting to avoid all of that and just assume if it's working, it's

17:45.220 --> 17:46.220
working.

17:46.220 --> 17:48.140
If it's broken, don't fix it.

17:48.140 --> 17:49.340
And you got to draw the line somewhere.

17:49.340 --> 17:53.780
It's one thing to keep your desktop OS up to date, but the individual components inside

17:53.780 --> 17:55.140
your PC?

17:55.140 --> 17:56.140
Where do we draw the line?

17:56.140 --> 17:59.340
I'd like to ask the audience to linuxactionnews.com slash contact.

17:59.340 --> 18:00.340
All right.

18:00.340 --> 18:03.180
Well, let's talk about the biggest story of the week.

18:03.180 --> 18:08.400
And again, this is proprietary software, but it's got a lot of people excited.

18:08.400 --> 18:10.840
We teased it last week, but now it's official.

18:10.840 --> 18:16.200
You're going to be able to play some at least Windows games on Steam for Linux officially.

18:16.200 --> 18:19.800
And they're calling it Steam Play, and they say it's powered by Proton.

18:19.800 --> 18:25.680
Now Proton is a wrapping up of Wine and other tools, some of them which we talked about

18:25.680 --> 18:33.020
last week, like DXVK, all into one subproject that then the Steam client sits on top of.

18:33.020 --> 18:37.260
So what many people speculated last week, including myself, that DXVK was going to be

18:37.260 --> 18:41.140
sort of at the core of this, turns out it's even more than that.

18:41.140 --> 18:45.340
Not only is it the core of Steam Play, it has been funded by Valve.

18:45.340 --> 18:49.580
They actually employed the DXVK developers since February of this year.

18:49.580 --> 18:55.500
And on top of that, they also help fund VKD3D, which is a direct 3D12 implementation based

18:55.500 --> 18:56.860
on Vulkan.

18:56.860 --> 18:59.180
And they've been contributing towards OpenVR.

18:59.180 --> 19:01.300
So the big question is why?

19:01.300 --> 19:03.200
Why are they doing this?

19:03.200 --> 19:07.820
We speculated that they started the whole Steam on Linux and Steam OS thing in the first

19:07.820 --> 19:14.420
place because of potential changes to Windows and moving to an App Store only software installation

19:14.420 --> 19:15.420
level.

19:15.420 --> 19:18.180
That turned out not to be the case.

19:18.180 --> 19:23.820
And so for a while, we've been thinking that Steam OS was pretty much dead.

19:23.820 --> 19:28.180
The market share for Linux in Steam hasn't been growing significantly.

19:28.180 --> 19:32.420
It kind of hovers around, what, 1%, if that.

19:32.420 --> 19:35.520
And so why are they putting these resources into this?

19:35.520 --> 19:40.620
It kind of doesn't make that much sense unless they see another potential change with Windows

19:40.620 --> 19:41.620
coming.

19:41.620 --> 19:42.620
Yeah, I follow you.

19:42.620 --> 19:46.500
I mean, some people have even said this is going to hurt native game development now.

19:46.500 --> 19:50.300
Developers will not be incentivized to release a Linux version anymore because they can just

19:50.300 --> 19:54.300
use Steam Play, as if developers were just on the edge of their seat to release a whole

19:54.300 --> 19:56.460
bunch of new games.

19:56.460 --> 19:59.020
I think this is part of a bigger strategy.

19:59.020 --> 20:04.200
I don't think it's 100% about Steam OS, and I don't think it's 100% about hedging against

20:04.200 --> 20:08.660
Windows going to ARM or Windows locking everything down to a store.

20:08.660 --> 20:16.460
I think it's about Valve having a store that when you buy a Steam game, you can play it

20:16.460 --> 20:18.860
on any of your devices.

20:18.860 --> 20:23.500
And it really kind of fits in with Steam Home Streaming as well.

20:23.500 --> 20:26.620
I kind of see all of this stuff as one and the same.

20:26.620 --> 20:30.580
With Steam Home Streaming, you could have a Windows PC in a closet that streams the

20:30.580 --> 20:34.800
game to the Steam client on your Linux box or on your Chromebook even.

20:34.800 --> 20:37.420
It's really just an H.264 video stream.

20:37.420 --> 20:41.020
And they also do that with a Steam link, so you could have them on your TV with a controller

20:41.020 --> 20:45.340
streaming off of a Windows PC or a Linux PC in your closet.

20:45.340 --> 20:47.900
And that's not about advancing any one particular agenda either.

20:47.900 --> 20:51.580
It's about you buy a game and you can play it across any platform, be it console, your

20:51.580 --> 20:55.020
desktop, your Linux box, your Mac, all of it.

20:55.020 --> 20:57.780
Because this also is being worked on on the Mac side too, by the way.

20:57.780 --> 20:59.020
I don't think we've mentioned that.

20:59.020 --> 21:04.020
But this stuff is also, they have a Mac build, haven't tested it, have tested the Linux version.

21:04.020 --> 21:07.260
And when I tested the Linux version, the impression I got is, this is about your games

21:07.260 --> 21:08.260
everywhere.

21:08.260 --> 21:09.460
It's not even really about Steam OS.

21:09.460 --> 21:11.860
And what was the performance like then?

21:11.860 --> 21:15.420
Presumably you've tried Windows games with Wine and stuff before.

21:15.420 --> 21:17.700
Is this significantly building on top of that?

21:17.700 --> 21:18.700
So it's been pretty good.

21:18.700 --> 21:23.020
I wouldn't say the performance blows me away, but the ease of use is great.

21:23.020 --> 21:25.580
When this landed, I went and bought Age of Empires.

21:25.580 --> 21:29.820
I don't own Age of Empires because I've never really been able to get it to work very well

21:29.820 --> 21:31.180
on Linux.

21:31.180 --> 21:35.500
And Microsoft's not going to re-release a game from the 90s on Linux.

21:35.500 --> 21:36.920
That's not happening.

21:36.920 --> 21:41.680
So I took this as an opportunity to buy it, because now I can finally play it reliably

21:41.680 --> 21:42.680
from my Steam library.

21:42.680 --> 21:47.340
I just install Steam, I switch over to the beta, I install Age of Empires, and I can

21:47.340 --> 21:48.340
play now.

21:48.340 --> 21:51.900
It's really straightforward and simple, and that matters.

21:51.900 --> 21:53.900
And that's the kind of market where I think this is going to be great for.

21:53.900 --> 21:57.340
The games that were never going to come to Linux anyways, I don't really care if it's

21:57.340 --> 21:58.340
not the best performance.

21:58.340 --> 22:00.580
I don't really need that for a game from the 90s.

22:00.580 --> 22:01.580
I can play it now.

22:01.580 --> 22:05.020
Well, that sounds like exactly what you need, yet more distractions.

22:05.020 --> 22:06.340
And more things from the 90s.

22:06.340 --> 22:13.220
Speaking of distractions and things from the 90s, there is now Windows 95 running inside

22:13.220 --> 22:15.500
an Electron app.

22:15.500 --> 22:16.500
The full thing.

22:16.500 --> 22:18.900
Yeah, this has done the rounds on Twitter and stuff this week.

22:18.900 --> 22:23.060
Everyone's talking about it, and it's funny that the developer apologizes everywhere he

22:23.060 --> 22:24.060
can.

22:24.060 --> 22:27.220
He's like, I'm sorry, I just had to do this, I couldn't resist.

22:27.220 --> 22:28.940
And it really is a blast from the past, isn't it?

22:28.940 --> 22:33.060
Although it does make you look at Windows 95 and think, well, certainly me.

22:33.060 --> 22:34.060
I'm looking at XFCE.

22:34.060 --> 22:38.760
It's really not very different from what I'm running as my desktop now, to be honest.

22:38.760 --> 22:40.700
It's not that much different.

22:40.700 --> 22:45.980
When you start getting into it, this is basically where we've been for a long time.

22:45.980 --> 22:48.860
And you can kind of understand why there's been some open source projects that have tried

22:48.860 --> 22:51.520
to throw the whole thing out and start over.

22:51.520 --> 22:54.900
And by the way, for those of you who grabbed this when it first started making the rounds,

22:54.900 --> 22:56.940
it's been updated a couple of times.

22:56.940 --> 22:58.260
And there's a couple of nice improvements.

22:58.260 --> 23:02.940
The ability to mount external disks, some more stats, a little bit of a code tweak.

23:02.940 --> 23:05.860
Everything seemed a little snappier, so you can grab it again.

23:05.860 --> 23:09.540
And then just download this Electron app and play around with Windows 95.

23:09.540 --> 23:11.260
Yeah, it's obviously been Electron.

23:11.260 --> 23:12.980
It's cross-platform as well.

23:12.980 --> 23:17.740
So if you can run it on Windows 10, if you want, or a Mac even.

23:17.740 --> 23:21.820
But it's funny that I swear I'd remembered this from before.

23:21.820 --> 23:24.560
And I looked it up, and sure enough, I found the link.

23:24.560 --> 23:29.620
Because this is based on JavaScript, I think it was the same as this web version before.

23:29.620 --> 23:31.020
So you don't even need an Electron app.

23:31.020 --> 23:33.620
You can just run it in the browser.

23:33.620 --> 23:35.220
We'll stick a link to that in the show notes.

23:35.220 --> 23:37.780
But that was from a good couple of years ago.

23:37.780 --> 23:39.460
But it is a bit of fun, isn't it?

23:39.460 --> 23:41.140
I don't think it's much more than that.

23:41.140 --> 23:46.860
And I've seen a bit of talk about how this is clearly copyright infringement.

23:46.860 --> 23:50.740
And so I would say grab it while you can, because it may well get pulled down.

23:50.740 --> 23:53.780
Yeah, I'm surprised Microsoft hasn't taken action yet.

23:53.780 --> 23:56.140
Maybe they'll be good about this.

23:56.140 --> 23:57.140
It really is a tribute.

23:57.140 --> 24:00.660
Nobody is using this to make it rich selling copies.

24:00.660 --> 24:02.700
It's a Windows 95 bundled in Electron app.

24:02.700 --> 24:05.280
Yeah, it's a bit of computer history, isn't it really?

24:05.280 --> 24:08.220
And it's a way to preserve that history.

24:08.220 --> 24:13.700
I would like something for Linux, like early GNOME desktops and KDE desktops all wrapped

24:13.700 --> 24:15.940
up in a system in an Electron app.

24:15.940 --> 24:17.100
The idea is actually valid.

24:17.100 --> 24:20.740
I don't know about a JavaScript virtual machine, maybe something else for the virtual machine.

24:20.740 --> 24:25.940
But the idea itself as a way to revisit historical software, I think kind of works.

24:25.940 --> 24:30.100
Yeah, but I would definitely disable the network because a lot of the old software is pretty

24:30.100 --> 24:31.860
riddled with security holes.

24:31.860 --> 24:35.300
No network and no access to the local file system by default.

24:35.300 --> 24:36.300
Yeah, yeah.

24:36.300 --> 24:40.020
All right, well check out linuxactionnews.com slash subscribe for all the ways to get new

24:40.020 --> 24:44.540
episodes where we'll be covering Linux, free software, the open source world, and more

24:44.540 --> 24:45.540
in future episodes.

24:45.540 --> 24:49.200
And go to linuxactionnews.com slash contact for ways to get in touch.

24:49.200 --> 24:53.300
And you can support the whole network effort over at our Patreon page, patreon.com slash

24:53.300 --> 24:54.300
Jupiter signal.

24:54.300 --> 24:57.900
We'll be back next Monday with our weekly take on the latest Linux and open source news.

24:57.900 --> 24:59.380
I'm at Chris LAS.

24:59.380 --> 25:01.060
I'm at Joel Rissington.

25:01.060 --> 25:02.060
Thank you for joining us.

25:02.060 --> 25:04.260
We will see you next week.

25:04.260 --> 25:30.380
Until then, I'm Joel Rissington and I'll talk to you later.

