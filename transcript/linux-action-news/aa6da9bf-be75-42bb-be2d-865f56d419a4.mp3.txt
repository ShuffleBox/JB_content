Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 89, recorded on January 20th, 2019.
I'm Chris.
And I'm Joe.
Hello, Joe.
It's good to be connected with you and let's kick things off with a story that just keeps
taking twist after turn after twist.
It's almost like a piece of fiction at this point.
It's the long twisted story of MongoDB and the bit of rejection it's getting from major
Linux distributions this week.
Yeah, it all started when they changed their license to the server side public license,
the SSPL.
And then last week we reported on Amazon rolling their own MongoDB compatible database called
DocumentDB, and now it's gone from bad to worse for MongoDB because it's being removed
from a few major distros.
Yeah, so the ball really got rolling when both Fedora and Debian announced they would
no longer be including it in their distribution.
And the quote from Tom Calloway over at Fedora is this, it is the belief of Fedora that the
SSPL is intentionally crafted to be aggressively discriminatory towards a specific class of
users.
Well, it's not an open source license, is it?
So they can't have it in open source projects.
Well, the MongoDB logic kind of goes like this.
This is a quote from their CTO and co-founder.
And Elliot explained, we believe that in today's world, linking has been superseded by the
provision of programs as services and the connection of programs over networks as the
main form of a program combination, where the GPL and all that, a lot of open source
licenses are really built around the idea of if you link to them.
But linking, they argue, is going away.
And re-hosting things and connecting to it over the network is the new normal.
He goes on to say, it is unclear whether existing copyleft licenses clearly apply to this form
of program combination.
And we intended the SSPL to be an option for developers to address this uncertainty.
Well, that is fair enough.
They do make a lot of good points.
But that doesn't change the fact that the way they've chosen to solve this problem is
by making a license that isn't open source.
And so these distros have no other choice but to remove it.
Talk about a rock and a hard place with MongoDB here, because they have the open source community
in the form of the distributions, essentially being forced to turn their backs on MongoDB.
And at the same time, on the commercial end of the spectrum, you've got companies like
Amazon launching DocumentDB, which gives a very compelling commercial alternative to
MongoDB.
It's a rough time to be that project right now and to be that company.
Well, except that you do have to ask, is anybody who's running a serious instance of MongoDB
really using the version in the repos of their distro, or are they using the MongoDB repos?
And realistically, that's probably the case with these major deployments.
So removing it from these distros isn't going to be a huge issue for a lot of the bigger
enterprise installations.
So maybe they're not that bothered, but I don't know, maybe it will hurt adoption in
the first place.
It seems like an opportunity for a snap package, Joe.
Yeah.
Well, we don't know whether it's going to actually be removed from Ubuntu yet, but it
sort of seems fairly likely that it will.
Although with the ZFS thing, they've put that in Ubuntu and got away with it, for want of
a better word.
True.
It's not in main Debian.
Well, much like Fedora pulling, it means it's getting pulled from RHEL.
It seems pretty likely that if it's getting pulled from the repository, it's probably
getting pulled from downstream Ubuntu.
But you're right, they have shown in the past, they're perfectly happy adding their own thing
and doing their own thing.
So it's possible it'll stick around.
Or they might use this opportunity to snap it up.
I mean, really, it does seem like a perfect opportunity.
Yeah.
And then it'll be available on multiple distros.
So you'd be able to get it relatively easily in Fedora, for example.
Well speaking of ZFS on Linux, there has been a lot of ups and downs recently.
So we covered all of the projects rebasing on the ZFS on Linux implementation.
That was huge news.
But then shortly after that, news came out that in the new 5.0 version of Linux, the
new kernel, the ZFS on Linux project could no longer build due to some kernel changes
that were made by the core developers.
Yeah.
So we're getting short of hostility coming from Greg Kh regarding ZFS.
Hostility?
Yeah, okay.
I mean, definitely annoyance.
There was lines in there like, my tolerance for ZFS is pretty non-existent.
That's pretty straightforward.
He then later on followed up with, sorry, no, we do not keep symbols exported for non-in-kernel
users.
And then another kernel developer chimed in saying that people should go use FreeBSD if
they care about ZFS.
So there was some back and forth, yes.
I think really Greg's annoyance was at the end of the day, like Sun made it impossible
to run it on Linux intentionally.
They were trying to make it hard.
And so his position is, why am I bending over backwards to make a file system work?
Even he says, even if it's the best file system to ever grace this planet, that's fantastic.
But given that the creators of that code placed it under a license that was specifically designed
not to be compatible with Linux, to prevent it from ever being used on Linux, well, you
can see why I really don't care about it.
Why would I?
He writes.
So yeah.
Okay.
I mean, that's, yeah.
Yeah, I think that's a system thing.
Yeah, I suppose so.
But there is a workaround, although it may possibly impact performance.
Well, essentially it just disables the vector instructions that were being used that got
taken away.
And that was to really just make checksumming faster.
So I suppose there's a possibility there'll be some performance hit there, but I'm not
sure.
It's not clear if it's only at build time.
I would not be surprised if we see some benchmarks soon that make it clear.
But at some point, either at the build process or perhaps when doing file system checksums,
there could be a performance hit.
We just don't know yet.
Well, I really hope there isn't a serious performance impact because we will never hear
the end of it from the BSD people.
Can you imagine?
It's based on Linux, but it runs best on FreeBSD.
Well, let's keep talking about the BSDs just for a moment here on the Linux Action News
program and talk about Project Trident, which just had their first stable release.
And for those of you that aren't keeping score at home, Project Trident is based on TrueOS.
And TrueOS itself, at least at the time of this release, was based on FreeBSD 13 Current.
So I managed to install this, but I didn't manage to boot it.
It looks from Twitter that you got on a bit better than I did.
Yeah, I did.
I've used it all morning, actually.
It's funny, I think what I said on Twitter was I went in with kind of low expectations
just because I was expecting it to be a really minimal, cute desktop that wasn't really ready
to go yet.
And this is their first stable release here, and TrueOS is kind of still new, and it's
all still kind of new.
And I went in with low expectations, and I got that sensation that I used to get from
distro hopping when I would move to a new distro that did things really differently
and it really impressed me.
I got that sensation.
And so I think it's very competitive for a particular type of workload.
It may still have some cooking it needs to do, but I was pretty impressed, Joe.
It's funny that it reminded you of a time many years ago because that was exactly the
feeling I got.
I didn't get as far as the desktop, but the whole experience around it felt like when
I first got into Linux, like 10, 11 years ago, from the download speed of the ISO, which
was somewhere around 200 kilobytes a second or whatever, it took hours and hours to download
this four point whatever gigabyte ISO.
And then the installer just felt very clunky and old school to me.
And then the fact that you go through the installation and then just won't boot.
And this is on the laptop that will run Trisco very happily.
It's just Intel, no Nvidia or anything like that.
So I was just not very impressed with it, really.
And I've had a bit of criticism, I think, for being down on BSD generally, or the BSDs.
And I don't think that's fair because things like FreeBSD clearly have a place and they
are excellent at some things, like basically all of the hardware that iX system sells,
for example, and network gear and Nasus and stuff.
It's absolutely perfect for that.
But in terms of the desktop, this Trident really, I think, shows how far behind Linux
they are.
It's really a shame you didn't get to go all the way to the desktop and use it for a bit
because I think some of my notes on here are very much like XFCE.
I think Joe would like this about it.
First of all, it has a Windows 7 sort of workflow look and feel.
And that's the first thing people said on Twitter, oh, I thought that was Windows 7
for a moment.
Yeah.
It's a little old.
It feels a little dated.
That might be fine for a workstation, though.
And it's got a few rough edges.
I've been on a VMware workstation kick, for better or for worse.
And so on my system, all of the bottom buttons of the installer get cut off.
I could just see the very, very, very, very top of the button.
And the first two buttons just shut the thing down to a command line.
It's like, all right, I'll try the other button.
Same exact result.
I had to just sit there and try the different buttons until I got the result I wanted.
So it took me a while to get through the installer.
But once I got it in, a couple of neat things stood out to me.
Number one, their file manager is kind of cool.
It's got built-in Git support.
So you can do Git check-ins and clone repos right in the file manager.
Pretty intelligently, they're using the LTS version of the Qt framework, version 5.12.0.
And the Qt-based desktop itself is very lean.
The Lumina desktop is fast.
It's easily configurable.
There is a control panel-like preferences area that has everything you'd want and not
too much.
And then, and I think maybe this just comes with all true OS-based systems, there's the
true OS sysadmin panel, which reminds me of Yast Lite.
It just does a few things, like manage volume snapshots and boot environments and set up
a few basic essentials about your computer, but that's it.
And last but not least, their update management tool ties in with those boot environments
and ZFS snapshots.
They're using ZFS in really clever ways that you don't even have to configure as an end
user to enable things like software rollbacks.
If your updates don't work, including the entire boot environment, so if the kernel
doesn't work or something gets borked with the boot manager, it can roll it back at a
file system level for you.
And it's just right there in the controls, you know, there's a mishmash of design looks
here and there.
And some things are a little odd, but everything's functional and it's, it performs great.
And I completely forgot that I was on a BSD-based system.
Oh, and it came with Telegram pre-installed.
So I was happy.
Telegram, right there, right there.
Oh, very nice, you're making me want to actually give this another go and try and get it working.
Because I've had a good experience with Ghost BSD before with the Mate desktop, but this
minimal Lumina desktop, I have tried not for a while.
So I would like to give that another go.
So all right, I'll try it on a different machine and see if I can get that to work.
Yeah, I think you might like it.
It's very XFCE in a lot of ways, but in just a very functional kind of way too.
And one other thing that's kind of nice is they have the AppCafe, which is a sort of
Synaptic-like GUI package manager.
And I could install things like Mumble and the Fish Shell in seconds.
Just I typed in Mumble, hit enter, showed up, installed it and downloaded all the Qt
4 dependencies required and everything loaded perfectly fine.
Same with the Fish Shell in seconds.
Are you really selling this to me?
Because Synaptic-like is how I want all my GUI software managers to be.
Yeah, it was peak package management software, I think.
Yeah, exactly, before all the bloat and everything.
All right, I'm definitely gonna have to give this a go then.
Well, if you want something really different, Android x86 has a pretty significant release
this week.
It's 8.1 R1, and there's several things in this that actually make it, I would say, ready
for the desktop.
I know it always kind of has been getting closer and closer, but now there's like things
like a proper taskbar and all that stuff.
Yeah, I've been following the development of this, and this is based on Android 8.1
Oreo, so it is one version behind.
But then most phones are, it's hard Android development.
You can't really criticize them too much for it.
And I've got a touchscreen laptop, a little 11-inch VivoBook, and that's what I always
test this on.
And again, as usual, worked perfectly on there.
And you've got that choice between either a touch-based interface like standard Android
or more of a traditional desktop interface with a taskbar and menu and everything that's
more mouse-based.
And also, worth noting, Joe, freeform window modes.
You can drag windows around.
They're not all full screen, too.
Yeah, so it really is a desktop-like experience.
Why you'd want to do that, I don't know.
It's just something of a curiosity, really, to me.
Surely no one can be actually using this as their daily machine.
Maybe for like a kiosk or appliance.
Maybe it's like in a business where you want people to fill out information when they come
in.
I don't know.
I'm just trying to think how I use this.
I like it.
I like messing around with it.
I use it for about a good solid couple of hours every release.
And I'm like, OK, good enough.
But I actually couldn't get this one to boot.
Maybe it's VMware Workstation.
I was trying everything out in VMware Workstation.
So maybe that's the issue.
So I didn't actually get to try it.
Did you get it to boot and try it?
Yeah, yeah, I booted it on hardware on this VivoBook, yeah.
Surely with all the laptops you've got lying around, I suppose you're on the road at the
moment.
Yeah, that's the thing.
I'm on the road.
So I got limited hardware.
So I was trying virtualization.
Yeah.
I don't know.
I'm somewhat tempted to put this on the VivoBook because I don't really have that much use
for that machine anymore because I recently bought a new laptop.
And so it's kind of a bit redundant.
And it would be nice, I suppose, to have essentially a large tablet with a keyboard.
So maybe I'll give it a go.
Yeah, I could see it on an x86-based tablet.
And maybe it's one of the several OSs I have on there, especially if you can have a GApps
equivalent.
And now I can get the Netflix app, and I can download videos for offline watching.
Now I'm starting to see a use case here.
But it's pretty backwoods.
I don't really know how many users are interested.
Maybe it's software development.
Maybe that's what it is.
Maybe it's for developers, Joe.
Maybe it's for people to develop Android software on big, fast computers.
Maybe in testing and things.
It does have the Play Store pre-installed.
So you can get things like Netflix.
I didn't actually try Netflix, but I assume you can get that.
You can certainly get most of the apps that I looked for.
I'd be surprised if it works.
There's probably some DRM thing in there that kicks in.
Yeah.
I'm going to have to try that then.
I kind of like talking about the other end of these releases, though, like post-market
OS.
Yeah, which is, as the name suggests, an aftermarket firmware for primarily phones, but some boards.
And the idea of it is that you'll get 10 years of support with it.
And it's not going to be based on Android.
It's going to be aiming for at least mainline kernels and very long-term support for devices
that otherwise have been completely abandoned by the original OEM.
Yeah.
And it looks like most of the user space Linux stuff is Alpine Linux right now.
In fact, one of the things they're working on is they've been based on the development
branch of Alpine Linux, which was good while they're developing software.
But I meant about once a month, everything would break in post-market OS.
And they have been spending a lot of time just integrating Alpine Linux updates without
really iterating on the operating system itself.
So to avoid substantial breakage, as they put it, they are rebasing on the Alpine stable
releases in the future.
And then they will have a package branch, which is based on the next Alpine release,
which is every six months or so.
Essentially, they're just going to match Alpine's release cadence.
But it's still very early days for this.
It's nowhere near something like Ubuntu Touch, for example, in terms of actual usability.
Yeah.
So for example, like the Nexus 5, they have a booting mainline kernel.
They've got accelerated graphics.
That's huge.
And they can actually communicate with the cellular modem.
But there's no working audio.
There's no calls happening.
I mean, it's really early days.
And there's hundreds of devices that they currently support at various levels like that.
In this update, they're adding a bunch of other devices, including some cool tablet
devices and some other ARM-based devices.
But it's all various levels of support.
And they're trying to get some basic goalposts in there, like get cell calls working and
things like that.
But so far, they haven't gotten there.
I do like their honest approach, though.
If you go to postmarketos.org, right there, the first thing you see is alpha version,
calls don't work, et cetera, only suitable for hackers.
So they're not trying to make any claims beyond that, which is good.
But it does show how hard this is to make a proper Linux system work on ARM.
Right.
But flip this around for a moment, Joe, on its head, and look at the Nexus 5.
That's been completely abandoned by the original creator.
There's zero support now from Google for the Nexus 5.
At least Post Market OS supports it to some degree.
So you could make the argument that they're supporting it better than the original creator.
The thing is with projects like this, too, is they have time.
They have time to work this out.
There's not a huge commercial product that they have to get to market and they don't
have to sell millions of copies of to be sustainable.
It really is an open source project that can take its time to build something and eventually
become something that can keep these devices going.
And if they only get to maybe, say, a dozen or so that are fully supported, well, then
they're better off than they would have been.
Yeah, that's true.
And you mentioned the Nexus 5 there.
Of course, you can run lineage on that.
But all the kernel and drivers and everything are seriously out of date and a potential
security risk, whereas the whole point of Post Market OS is to be up to date and secure.
And I suppose that is a good priority to have if you use that as a foundation.
And then once they get it up to a point where it is working really well with an interface
like Plasma Mobile, for example, then you'll have something that's actually really worth
using in the long term.
Did you see in this update, they also talk about getting XFCE 4 running on the Librem
5 dev kit board?
Yeah, I did see that and it warmed my heart to see XFCE running there, although in the
photo that's in this post, you have to scroll down a little way to see it.
If you expand that photo, you see something quite alarming, and that is a fan attached
to this Librem 5 dev kit.
Whoa, holy rotations, Batman.
That is that it looks also like it's been wired on there.
Perhaps they wired it.
Maybe they had to overclock it.
Let's give the benefit of the doubt here because this first of all, this dev board is large.
It's like four or five raspberry pies next to each other large.
It's big.
And there is a, what would you call that, a 40 millimeter fan.
It's a pretty small fan, might even be 20.
It's one of those real high pitched whiners.
And it has been suspended with stiff wire over the CPU heat sink in what appears to
be a desperate attempt to cool the CPU on the dev board.
You know, Joe, though, I got to say, looking at the screenshot here, they have the info
up on the screen and the CPU is running at 1.5 gigahertz, which double checked me, but
I think that's the clock speed it's supposed to be running at.
Yeah, I think that is stock.
So yeah, it's not even overclocked.
That is very alarming then.
Could it be that PureOS will be more efficient somehow?
And maybe that's something that I don't know post market need to work on.
I would say this, if you want to know what we're talking about, go to linuxactionnews.com
slash 89 and then go to the post market OS link, scroll down this post and look at this
photo of the XFCE desktop and then let us know what you think.
Linuxactionnews.com slash contact, legitimately, if I didn't know any better, I'd say this
is a really bad sign, but you know, this could be anything.
It could be anything.
So we'd love to have somebody talk us off the cliff.
Yeah, well, I'm hoping to speak to Todd at some point soon, the CEO of Todd Weaver of
PureOSM because we agreed a hot date on Valentine's Day.
It's true.
That's true.
Oh, by the way, just one more thing on the post market OS.
They also got Unity 8 working on top of post market, which is just, I don't know.
They say it runs great.
I'm sure it does.
It's a pretty neat project and I love the idea of it's Alpine based.
It's not necessarily like some clone of Android that they're trying to flash onto these phones,
which may actually be a lot easier.
It is its own unique thing that they're trying to breathe 10 years of life into a device
after it's been abandoned by a manufacturer.
And if they can even get that for a handful of devices, I think it's going to be a project
that is cherished.
Well, a project that was cherished by some people was the Firefox test pilot program,
which Mozilla have decided is no more.
I read this post, Joe, and I feel like if you're a student going into business communications,
you should go read this because it is a masterpiece in reframing failure as an epic success.
I'll give you a couple of quick choice quotes here because keep in mind, test pilot was
starting to get a bad name for a lot of, well, most people consider it an advertising mechanism,
fair or not.
And so it was time to get to get far, far away from it.
But this is how it's framed.
They say, we're proud to announce today that we're evolving our approach to experimentation
even further.
Test pilot was designed to harness the energy of our most passionate users.
Test pilot performed better than we could have ever imagined.
As a result of this program, we're now in a stronger position.
So today, we are announcing that we will be moving to a new structure that will demonstrate
our ability to innovate in exciting ways.
As a result, we're closing the test pilot program as we've known it.
Because it's such a success, Joe, it's been so incredibly blow the doors off successful,
we're ending it.
Well, to be fair, they do say now that everyone is responsible for maintaining the culture
of experimentation capitalized, Firefox has developed through this process.
So they're basically saying that instead of just having this small test pilot program,
now all the experiments will be part of Firefox.
Yeah.
And it sounds like it's actually a realignment inside Mozilla too, because here's the wording
you're going off.
You say, migrating to a new model doesn't mean we're doing fewer experiments.
In fact, we're doing even more with an exclamation mark.
The innovation process that led to products like Firefox Monitor are no longer the responsibility
of a handful of individuals, but rather the entire organization.
So read that as there was just a team that was responsible for test pilot and tried a
few things, and now we're just making that a company wide thing or a group wide thing.
So you're right, it's not only going to be a change in how Firefox delivers these features,
but it's going to be a structural change inside the Mozilla group too.
It just seems like a bad idea to me.
It was a great idea before that you could opt in to this program where you get these
new features, and you could test them out and help out the project with it.
They weren't inflicting these potentially bad features onto the entire user base.
And okay, they can do it with sort of staged rollouts and stuff, but it just seemed like
that was a great idea before.
And to get rid of it and move to a culture of experimentation just doesn't seem right
to me.
Yeah.
I mean, I got to assume they're going to do some sort of staged rollout.
They don't outline that in here, but I think it's safe to say the test pilot program caught
a few bad ideas before they rolled out to everybody.
And that's valuable.
I hope they do something like that.
It would be wise to do that, and I would imagine they're going to.
But you're right.
To me, it seems like it's extremely precarious times for Firefox with the changes coming
to Microsoft Edge and the total dominance that WebKit and Blink now seem to be approaching.
Firefox is in a bad position, and all of this, from the way they communicate it to the things
that they do, they're not making a compelling case.
And there's so many basics that they still get wrong on the different operating systems
on Windows, on Linux, and on Mac OS.
They failed to fully integrate with those host operating systems in a way that it makes
Firefox often the third browser for a lot of people.
And that's a really bad position.
I think they're really screwed because the way they communicate is so screwed.
It doesn't connect with any of us anymore.
They've completely lost us in the message.
And their priorities are so big, and their goals are so lofty, and their market share
is so small, and it just seems to be getting smaller.
I feel like it is essentially end of days for Firefox, unless people actively start
making a choice to run this browser.
I'm using it right now to do this show, but I can't make a difference alone.
And a handful of Linux users aren't going to make a difference either.
It has to be on the commercial platforms, and that's just not happening.
Man, you paint a very bleak picture for someone who's sitting here staring at Firefox right
now.
I really hope that they can turn it around, because I'd like it as a browser.
I prefer to use a completely open source, free software browser.
And I don't want to have to use Chrome, or even Chromium, really.
I've used Firefox for years and years and years, and I just want to keep using it.
So I really hope you're wrong.
I do too, because, in fact, I hope I'm really wrong, because it's not just they need to
survive.
They need to have a measurable, important percentage of the market, so that way they
have a real seat at the table.
They have power and leverage in the conversation about web standards.
And they don't have that if they don't have a sizable market share.
So it's not just like they have to be surviving.
They have to be thriving to really be successful.
I think maybe I'm losing faith in the side of Mozilla that doesn't necessarily have its
hands on the code as much.
I don't know.
You just look at all the stories we've covered.
But hopefully I'm wrong.
Time will tell, Joe.
Well, at least they're killing Adobe Flash support in the upcoming Firefox 69.
It's funny that you have to say Adobe Flash now.
That's how irrelevant it is.
You have to kind of specify which Flash you're talking about.
I guess so.
I mean, it feels like this has been a slow-moving development.
But the announcement from Adobe itself was back in 2017 that it planned to push Flash
into an end-of-life state.
So there's sort of been this 2017 announcement with a 2020 roadmap objective for Adobe.
And so this is actually right in step with that.
In fact, they're even coming in a little early.
Firefox 69 is scheduled to be released on September 9th.
So if you are in a corporation using Firefox where Flash is still relevant, I know that's
also in education.
For example, my kids' schools, Firefox on the machines, and they're using Flash apps.
Flash apps, Joe.
So they're going to have to brace themselves for this change.
And it'll be on September 9th that Firefox 69 ships on time.
Well, it's not just with Firefox.
It's happening with Chrome as well.
Flash is just on its way out.
So institutions like your kids' school that are using Flash, this is just going to force
their hand.
It's going to have to go another route, and it's going to end up costing a lot of money
probably to develop these apps and games and educational games and stuff.
So is the world, though, of software, Joe.
In fact, it's a reason why schools should be using open-source software.
Let's be honest.
This is where free software is extremely strong, especially in the education sector.
And I'll note it's not just Flash, a lot of great plugins.
The whole Netscape API for plugins is being deprecated.
And it's just time to go.
It's old.
It's insecure.
And this has been a massive transition for Firefox to make.
And in the day and age of HTML5 and everything we've got now with web apps and WebAssembly,
there's no excuse.
Just switch to something else.
And if you're going to switch, a little bit of Linux Action News advice, switch to free
software.
Here's a tagline, Joe.
This is from Linux Action News.
Everybody out there can take it.
It's all free to the community.
The tagline is this.
You migrate to free software, and you only have to migrate once.
Boom.
The sales write themselves.
Yeah.
Let's stick it on a t-shirt.
I like that idea.
You should do that real quick, Joe, before we publish this.
Or if somebody out there does that, just give us a cut.
In the meantime, if you've been listening for quite a while, you know the drill.
But if you're new here, linuxactionnews.com slash subscribe for all the ways to get new
episodes of this here show.
And go to linuxactionnews.com slash contact for ways to get in touch with us.
We'll be back next Monday with our weekly take on the latest Linux and open source
news.
I'm at Chris LAS.
I'm at Joe Wessington.
Thank you for joining us.
And we will see you next week.
See you later.
