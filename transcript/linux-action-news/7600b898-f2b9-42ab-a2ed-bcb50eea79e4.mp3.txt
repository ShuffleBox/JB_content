Hello, and welcome to Linux Action News, episode 218, recorded on December 5, 2021.
I'm Chris.
I'm Wes.
Hello, Wes.
Let's do the news.
We start with some fantastic news from the Blender project, which just released version
3.0, a significant update for the leading open source 3D modeling application.
3.0 introduces the Big Cycles 10 upgrade to its Cycles rendering engine.
Now, what that really means is performance and a lot of it.
And there's been some work in this version to also support special AMD hardware, Nvidia
hardware, and Apple's new SoC.
Really performance throughout this release seems to be one of the big takeaways.
Blender 3.0 features many animation improvements, faster opening of large files, the standard
compression of blend files, VR controller input improvements, and just a whole bunch
more.
Oh, man.
I actually could see a use case for VR with Blender.
That sounds kind of like a blast.
I noticed that Michael Arbel over at Ferronix is planning to publish some CPU and Nvidia
GPU benchmarks with the 3.0 release in the coming days.
So if you're interested, keep your eyes peeled for that.
But in a big way, many of these new features, they're just visual in nature.
And the Blender project has done a really solid job of posting a few videos that explain
what Blender is and really what the new goodies are, including their new features in six minutes.
It's definitely worth checking out.
We'll have a link to their channel in the show notes.
We've been covering the incredible growth of the Linux vendor firmware service since
its inception.
And this week, Richard Hughes of Red Hat announced he had just deployed the first bits of significant
new functionality since the launch of the project.
It's going to be called the best known configuration, and it will be in the next release of Fwupty.
It's a feature that really reflects the increased adoption of LVFS in the server hardware and
data center space.
The idea is vendors can flag their quote best configuration when a system has a lot of different
possible firmware packages from UFI to different types of controllers, network hardware, and
of course, just a wide array of other upgradable firmware and microcode that might be in a
modern data center rack.
Which is a problem that gets more complex when you also have various generations of
hardware out in production.
With Fwupty's best known configuration option, it's now easy to convey those recommendations
as a compatible set.
The option works for both upgrading and downgrading firmware, and you'll still have the ability
to bypass the best known configuration for a given system if you'd like to.
Fwupty 1.7.3 is due out before year's end, and should include support for this exciting
new functionality.
Linode dot com slash LAN.
Go there to get $100 in 60 day credit on a new account, and you go there to support the
show.
So that's Linode dot com slash LAN.
Linode provides virtual servers that make it easy and affordable for you to host anything
in the cloud.
If you're a gamer, Linode has a great DIY system, or you can do one of their easy one
click apps like Minecraft or a CSGO server.
Maybe you want to build your own website.
Most entry level hosting services are fine for a while, but eventually you want to be
in control.
You want to be able to do what you want, and you want to actually own your website.
Linode is your step up to a powerful, totally customizable cloud hosting.
If you're into gaming, maybe you want to build a website, or you just want to put something
up in the cloud and access it anywhere, Linode is there for you.
And they have VPN friendly virtual servers if you'd like to set it up as a VPN system.
And every plan comes with Linode's amazing human powered customer support.
If you need help, someone will pick up the phone, respond to your email, or reply to
you on social, 24-7-3-65.
Linode has a bunch of great features on top of their virtual hosting as well.
They have bare metal servers now rolling out, S3 compatible object storage, Kubernetes support,
a powerful DNS manager, VLAN support.
There's a great opportunity to learn.
They also have Alma Linux and Rocky Linux if you want to give those a go, as well as
just a bunch of great distros, all the great distros, as they say.
So go try it out for yourself and support the show.
It's linode.com slash LAN.
Go there to get $100 in 60 day credit on a new account, and go there to support the show.
It's linode.com slash LAN.
Linux.ting.com.
If you're sick of overpaying for cell service, go see how much you could save and then take
25 bucks off at linux.ting.com.
Ting's an MVNO or a mobile virtual network operator.
That means Ting mobile customers get access to the big carrier networks nationwide, but
they get Ting's great customer service and a lower cost for service.
Ting has all of the coverage, a great mix of plans, LTE, and 5G, but you interface with
Ting who can focus on customer support because they're not digging holes in the ground to
stand up towers.
And I say that, but really it's not just the holes in the ground, it's all of the local
regulations.
I had a past client who was in that business and it is mind blowing how much time and money
is wasted in just businesses there.
Just so many different people taking a little cut there.
Ting bypasses and resets all of that.
Ting operates on top of multiple carriers.
They become like a meta carrier and then you interface with them for customer support,
which is fantastic, the best in the business.
Or you can use their great dashboard to manage your account directly, which again, best in
the business.
I mean, these are things that have kept me with Ting since 2013.
I've had a Ting account, I've had a Ting plan active since 2013.
Ting mobile is just a smarter way to do it with plans that start at $10 a month and work
their way up depending on what you need.
You know that I love their set 12 plan, for example, you get 12 gigs of data and unlimited
talk and text for 35 bucks a month.
If you're a family, they got plans that'll work for you.
Every plan gets access to Ting's great customer service and no contracts, no contracts.
It's simple to switch to Ting too, pretty much any phone will work because they support
multiple networks.
So get started at linux.ting.com.
Check your current phone, see if it'll work, create an account, pick the plan that's right
for you.
Ting will then send you a SIM card, you pop that in your phone and you're gonna get active
in minutes.
It's a great way to do mobile.
It's a smarter way to do mobile and it's the next generation of Ting mobile.
Go see how much you could save and then take 25 bucks off of that.
It's time, linux.ting.com.
On Friday, December 3rd, Red Hat announced the release of CentOS Stream 9, which comes
just ahead of CentOS 8, reaching end of life at the end of the year.
In that announcement, Red Hat touched on where CentOS Stream fits in the enterprise ecosystem,
saying, quote, CentOS Stream is a continuous delivery distribution serving as the next
point release of RHEL.
Before a package is formally introduced to Stream, it undergoes a battery of tests and
checks both automated and manual to ensure it meets the stringent standards for packages
that are included in RHEL.
Updates posted to CentOS Stream are identical to those posted to the unreleased minor version
of Red Hat Enterprise Linux.
So to talk about CentOS 9 and Apple 9, Carl George from Red Hat is joining us.
Carl, welcome to Linux Action News.
Howdy.
So I noticed in the announcement for Stream 9, so let's start there, that they're using
the term now continuous delivery distribution.
What does that mean?
Really, the big change that happened was that we got rid of minor versions.
They're still a major version, but we're not batching up a whole lot of updates and delivering
them every six months as a CentOS 8.3, 8.4.
We originally tried to describe that as a roll-in release because it rolls from one
minor version to the other.
The kind of oversight there was that roll-in release is a well-established term that kind
of means no major versions and no EOL dates.
So that was kind of a slip up.
We've moved away from the roll-in release terminology.
What we're going with now is the continuously delivered model, which it still is a major
version and you're not upgraded from one major version to the next.
You still stay on that major version with those stability guarantees there, but you
just don't have any minor versions.
So there's no big update every six months that you have to plan out.
It just comes in a little out of time.
Yeah, that seems like the part that people have been confused about.
It's like, what exactly is going to change in my packages and how much are they going
to change?
Because that's really what matters here.
And that kind of mirrors the, I think that's where the new messaging is coming from is
it kind of mirrors the CICD workflows that a lot of development teams are moving towards
rather than having a massive relief with a whole bunch of changes.
Just deploy often, deploy regularly, so that way you know that it works all the time.
You can catch an upgrade that you have to make a swipe tweak to a config file or something.
You can do it right now and not have to figure out why that changed six months ago and go
figure it out then.
Right.
And that's not for professional sysadmins.
It's not really that big of a change because any sysadmin that was just applying updates,
even to a stable system like RHEL, and just apply the updates, reboot, and just cross
your fingers, that was never really responsible or recommended.
Professional sysadmins usually do, for a minor release, maybe they do snapshots for in-between
releases.
They at least have a maintenance window and they'll apply the updates on a non-production
system first to make sure that everything works as expected.
And really nothing's changed there.
You do the same thing with Stream and on a system like RHEL, maybe 99 times out of 100,
the updates apply perfectly fine.
And then on Stream, maybe 98 times out of 100.
It's not really that different.
Those are made up numbers, of course.
Right.
So Stream 9 seems like a very special release for one very kind of significant and only
ever going to be in this release kind of moment.
And that is Stream 8, and you can correct me if I'm wrong, but it seems like that's
where the idea of the CentOS Stream model was validated, was in Stream 8.
But Stream 8 was born in an era where CentOS was in a more traditional release model.
Stream 9 is the first CentOS release that is born in the now Stream era.
It's like a Stream-first distribution.
How does that change things in Stream 9 as a result of that?
Well, it makes things much better.
You're spot on with your description.
RHEL 8 launched first, and then we launched CentOS 8 and CentOS 8 Stream.
And it was kind of a proof of concept as far as the development workflows and how it's
built.
It's really bolted on after the fact.
We talk about rebuild distributions, and CentOS Stream 8 is still a rebuild distribution.
It's just rebuilt from the RHEL sources at a different point in time before they're released
as the public RHEL product.
With 9, how things change is that the RHEL maintainers actually are doing their builds
in CentOS first, and then RHEL basically forks off from that work later.
That's a big change.
It makes the development workflows make a lot more sense.
There's a lot less confusion, and it makes our contribution path a lot cleaner, which
is the biggest changes with CentOS Stream is that we wanted people to be able to contribute
to RHEL from outside the company.
And in order to do that, we had to open up our development processes, and that's what
Stream's really all about.
We started that with 8, kind of a proof of concept model, but we're still figuring it
out.
And with 9, that's really coming home, and we're getting a lot more contributions.
We actually have proper pull requests for the sources for Stream 9.
We had the contribution model in 8, but there was no actual pull request you could do.
Now those sources are in GitLab.
That same workflow model, you can do that now, and it's made things a lot smoother and
easier for people to understand, I think.
I'm kind of excited as our view, you know, we're onlookers on the side watching this
happen, and so much more of this is happening out, you know, not just behind the closed
doors of Red Hat.
So there's new contributions, but we also get to see that play out, which is exciting.
Yeah, it feels like in Stream 8, people really did take advantage of the model.
When it was announced, it was, this is a possible benefit.
People can participate in upstream RHEL now.
But I've actually seen several reports of Facebook and Alma Linux and others contributing
now to Stream, so it really does seem like it's gaining some traction in that regard.
Absolutely.
You know, with Facebook, they're using Stream directly.
They like it.
They like getting those updates faster, and I mentioned kind of the professional sysadmin
outlook of, you know, you apply updates in a less important area first, make sure they
work as expected, like a non-prod environment, a staging environment, and then you apply
the same updates in production.
That is, I don't know a lot about how their systems work, but I have a good feeling based
on clues externally that they take those kind of precautions, like most professional enterprise
organizations do.
And for the rebuilds, they have the big advantage now.
They have a huge advantage that traditional CentOS never had.
They can actually make changes rather than just having to accept what we call bug-for-bug
compatibility at face value.
Those communities, you know, they're focused on using it and consuming it.
They can, you know, there's definitely a community there, and they can help, okay, well, here's
how you set this thing up and here's how you do this.
But when you actually hit a bug, the answer a lot of times is just, well, the same bugs
in RHEL, so that's how it is.
You can work around it.
That's what you wanted, right?
Yeah.
That's what bug-for-bug compatibility gets you.
But now, you know, that was the way it was in, you know, traditional CentOS as well.
It was just, hey, if you can reproduce this bug on RHEL, then there's nothing we can do.
But now, you know, those distributions, and I've even seen it on the AlmaLinux FAQ, where
if you have a bug like that, you can actually go to CentOS, reproduce it there.
And if CentOS Stream, of course, reproduce it there, file a bug report, and even send
in a fix yourself to say, hey, here's the problem, here's how it's fixed.
Get that into the CentOS Stream first, and then that gets into the next RHEL minor release,
which then those rebuild distributions can rebuild into their own distributions and get
things fixed.
So, I'm looking at this chart, and I think you've put some of these together that kind
of explain how the different releases are based off of what versions of Fedora and etc.
And if I'm getting this right, it looks like Stream 9 is based off of Fedora 34, so it
means in there we're getting Pine64, RockPro 64 support now in Stream, and it also means
if anyone wants to try it out as a desktop, we have GNOME 40 and Pipewire in there, too.
Right.
I'm not going to guarantee any of all of those specific things.
I know GNOME 40 is in there.
The kernel changes a good bit, so not everything is identical as far as hardware support.
There may be more, there may be less.
Some things may not be supported.
I know that they're still building the Stream 9 kernel with ButterFest disabled, which unfortunately
I like ButterFest, a lot of other people do, but at this time the RHEL engineers aren't
prepared to support that in the product, so they're not going to put anything in Stream
9 that they're not prepared for to go into RHEL.
So hopefully in the future we can, you know, as Fedora keeps doing awesome things with
ButterFest and, you know, like our friend Neil keeps proving out awesome features and
things that it unlocks, hopefully, you know, RHEL customers see that and start demanding
that of Red Hat, and so that way, you know, it becomes worth our time to put, to re-enable
ButterFest and the RHEL kernel at some point in the future.
A little disappointing perhaps for us enthusiasts over here, but I can certainly appreciate
that, you know, you only want to support what you're committed to supporting that you know
won't cause more pain than gain.
Yeah, and it's a server OS.
It's not a desktop.
It's not focused at the desktop.
I just have dreams of an ultimate stream-based workstation one day.
Oh, me too.
I think that, I think they'd be really good, but, you know, like you said, one of the,
what they're prepared to support, sometimes I say we, sometimes I say they, you know,
I'm not directly working on RHEL.
I'm more on the CentOS side, and there's a lot of, you know, tons of people involved,
but one of the reasons that RHEL is so good and so stable as it is, is because of that
real strict, you know, mentality and that development process of we only ship a limited
number of packages.
We're going to support what we ship, you know, there's varying levels of support depending
on what repo is in the service level, but we're not going to put something in there
just because, oh, well, it might as well go in there.
No, that's not how you create a real stable distribution and how you create a good product
on that end.
Right.
That is the product right there.
Totally fair.
So let's talk a little bit about Apple 9.
So this is extra packages for enterprise Linux, and I know this is something you work directly
on and it fits in with the overall Red Hat 9 beta, Stream 9.
So could you just give a brief layman's explanation of what Apple is and why it's kind of a lifeline
for those of us that might be running older distributions, older enterprise Linuxes?
So Apple's been around for a while.
It stands for extra packages for enterprise Linux.
And what that is, is it is a sub-project of the Fedora project where whenever, like in
that chart you're referencing that's in the Stream 9 announcement, it kind of has lines
showing how Stream 9 development forked off from Fedora 34.
It wasn't every package in Fedora 34 that follows that model, it was a select subset
of packages.
Every package in Fedora that doesn't get selected to be in Stream 9 and then RHEL, they then
become eligible to be part of the Apple project, which is Fedora packages rebuilt to be compatible
with enterprise Linux.
That's been around for a while.
It's not a new thing with 9 or anything.
I don't remember the very first one.
I think it might have been Apple 4 for RHEL 4, but it is probably the most popular third
party repository for, I say third party, it's from the Fedora project, but it's still technically
third party because it's not from RHEL.
And it's probably the most popular repository and the qualifications for packages to get
into it, it's just what I said, anything that's in RHEL can't be in it.
So it has a reputation for being extremely safe and stable.
There's some third party repositories that you might add to a RHEL system that upgrade
packages in the base release that can cause problems with other packages installing or
instability and Apple doesn't do that at all.
It is strictly extra packages, only things that aren't in the distribution already.
We were just talking about how seriously Red Hat takes the support that they provide.
So there must be a lot of pressure on Apple to get that right if you're adding extra packages,
but like you say, you really don't want that to add any instability to your enterprise
system.
So how do you go about doing that?
And those extra packages, it's a very clear line of we're not allowing things that can
change the base distribution.
Apple to be clear is it's from Fedora.
It is not supported in any way, shape or manner at all other than, you know, supported is
a very overloaded term, but as far as actual paid RHEL support, it's not supported in any
way.
Now, Red Hat is supporting the project in a different way, kind of like they support
Fedora by providing resources and infrastructure and things like that.
In fact, just a few months ago, I think y'all covered it on land also that there's an announcement
that CPE, community platform engineering team inside Red Hat was going to staff Apple work.
That's the team I'm on and I am part of that staffing.
So we're having a few people on my team be allowed to primarily focus on Apple and getting
it ready, which is we're seeing the direct result of that now, Apple 9 is ready well
before the RHEL 9 launch.
And historically, that was something that happened after the fact, usually, I think,
you know, three to six months after a RHEL major release, the corresponding Apple repository
will come online.
And it was just, that was a side effect of it always kind of being everyone, something
everyone liked and wanted to work on, but it was never anyone's primary responsibility.
It was always just kind of a spare time thing.
And that's what Red Hat wants to change, because even though it's not supported, there are
a lot of customers that say, I'm not upgrading to the next major version of RHEL until these
other packages that I depend on are available.
I don't care that they're not supported, I just need them to exist.
And that's what Apple provides.
And that's why it's important for Red Hat, even though it doesn't directly affect anything
with support and with customers, it does affect the customers and what major version of RHEL
they can be using.
I think that, you know, there's so many different layers here.
And as you mentioned, support is an overloaded word, but that's what makes watching this
so fascinating.
You know, not only is there the business angle of Red Hat, but there's all these different
layers of people using it and relying on the open source ecosystem around it.
And another interesting thing is that a lot of times packages in Apple can sort of get
promoted to RHEL.
That's a gross oversimplification, but that's kind of how it works.
Basically a package can be in Apple, can get proven out and shown to work.
And as more and more, you know, customers depend on that, those customers can push eventually
and say, okay, well, we said we only cared about it being available, but now it's got
some problems and we really want more work on it.
And you know, we listen to our customers and if enough customers are pushing for that,
that's something that, you know, the RHEL product people can decide, this is something
that we're prepared to support and we'll add it to the distribution at which time it becomes
ineligible to be in Apple and it'll get retired there.
But then the maintainership switches from a Fedora package maintainer to a RHEL engineer
that'll maintain it at that point.
Thank you to Carl George for coming on and explaining all of that to us.
Sent Off Stream 9 really does seem like a special release, but there's a lot going on
and just a few more episodes left in the year.
So check out linuxactionnews.com slash subscribe for all the ways to get those new episodes
and linuxactionnews.com slash contact for ways to get in touch.
And don't miss Self-Hosted 59, where I attempt to give Portainer a try.
I'll let you check it out, selfhosted.show slash 59.
As for us, well, we'll be back next Monday with our weekly take on the latest Linux and
open source news.
Thanks for joining us.
That's all the news for this week.
