1
00:00:00,000 --> 00:00:15,760
This is KOTORadio, episode 425 for August 2nd, 2021.

2
00:00:15,760 --> 00:00:20,080
Hey friend, welcome in to Jupiter Broadcasting's weekly talk show, taking a pragmatic look

3
00:00:20,080 --> 00:00:24,860
at the art and the business of software development and the world of technology.

4
00:00:24,860 --> 00:00:27,320
This episode is brought to you by a cloud guru.

5
00:00:27,320 --> 00:00:32,400
You know cloud guru has them cloud playgrounds, Azure AWS, and Google's cloud in their sandboxes

6
00:00:32,400 --> 00:00:35,040
on their credit card, not yours.

7
00:00:35,040 --> 00:00:40,000
Get certified, get hired, get learning at a cloud guru.com.

8
00:00:40,000 --> 00:00:44,600
My name is Chris and joining us from actually, I'm not quite sure where, but he is joining

9
00:00:44,600 --> 00:00:45,600
us.

10
00:00:45,600 --> 00:00:46,600
It's our host, Mr. Dominic.

11
00:00:46,600 --> 00:00:47,600
Hello, Mike.

12
00:00:47,600 --> 00:00:49,640
Well, hello, Chris.

13
00:00:49,640 --> 00:00:52,320
Oh, hello.

14
00:00:52,320 --> 00:00:53,320
What happened?

15
00:00:53,320 --> 00:01:00,600
Well, like all developers, I have a date, I have a deadline, you know, a project plan,

16
00:01:00,600 --> 00:01:02,080
and it slips dramatically.

17
00:01:02,080 --> 00:01:07,040
Deadline, suggestion, you know, one in the same.

18
00:01:07,040 --> 00:01:11,080
Delusional expectation setting, maybe.

19
00:01:11,080 --> 00:01:13,840
But I mean, you had flights and stuff you had to make.

20
00:01:13,840 --> 00:01:17,200
And thank God for travel insurance.

21
00:01:17,200 --> 00:01:20,680
So I am Florida man for now.

22
00:01:20,680 --> 00:01:21,680
Wow.

23
00:01:21,680 --> 00:01:24,400
And was it a work thing or a personal thing?

24
00:01:24,400 --> 00:01:30,000
It was a complicated issue regarding plumbing at the place I was supposed to be going to.

25
00:01:30,000 --> 00:01:31,000
Oh, okay.

26
00:01:31,000 --> 00:01:32,000
Okay.

27
00:01:32,000 --> 00:01:33,000
All right.

28
00:01:33,000 --> 00:01:34,000
Okay.

29
00:01:34,000 --> 00:01:35,400
So destination plumbing was not in a good state.

30
00:01:35,400 --> 00:01:38,520
So you couldn't get there and take like a poo or something.

31
00:01:38,520 --> 00:01:40,080
That is exactly the scenario.

32
00:01:40,080 --> 00:01:43,960
I just wasn't going to, you know, turn this into bathroom hygiene radio.

33
00:01:43,960 --> 00:01:44,960
But yes.

34
00:01:44,960 --> 00:01:47,880
So, you know, I figure keep it classy right at the top of the show.

35
00:01:47,880 --> 00:01:48,880
The classy, right.

36
00:01:48,880 --> 00:01:54,800
So I was like, I don't know if this is the best move right now, given you can't poop.

37
00:01:54,800 --> 00:01:55,960
I am sorry to hear that.

38
00:01:55,960 --> 00:01:56,960
That's super frustrating.

39
00:01:56,960 --> 00:02:01,480
It's a mild exaggeration, but there were definitely some issues.

40
00:02:01,480 --> 00:02:03,440
That's always rough because you got everything all set up.

41
00:02:03,440 --> 00:02:06,520
You know, it's when you're moving to, it's one of those things where everybody's asking

42
00:02:06,520 --> 00:02:07,960
you, okay, when you're doing this, what's happening?

43
00:02:07,960 --> 00:02:12,600
So you've been telling everybody, everybody's got expectations, and it just gets a whole

44
00:02:12,600 --> 00:02:13,600
life of its own.

45
00:02:13,600 --> 00:02:18,360
And then, of course, things don't go through.

46
00:02:18,360 --> 00:02:21,440
So I got to ask, you know, I got to do the typical follow up question that's always super

47
00:02:21,440 --> 00:02:22,440
annoying.

48
00:02:22,440 --> 00:02:24,480
Do you have any idea when you're going to get in there?

49
00:02:24,480 --> 00:02:28,160
I think definitely not until after the school year at this point because school starts now

50
00:02:28,160 --> 00:02:29,160
next week.

51
00:02:29,160 --> 00:02:31,280
Oh, so it's going to be prolonged Florida, man.

52
00:02:31,280 --> 00:02:32,880
It's prolonged Florida, man.

53
00:02:32,880 --> 00:02:33,880
Wow.

54
00:02:33,880 --> 00:02:34,880
Wow.

55
00:02:34,880 --> 00:02:35,880
Wow.

56
00:02:35,880 --> 00:02:36,880
Okay.

57
00:02:36,880 --> 00:02:37,880
All right.

58
00:02:37,880 --> 00:02:38,880
Well, you know, you might as well stay through the winter and get the nice weather.

59
00:02:38,880 --> 00:02:39,880
That's right.

60
00:02:39,880 --> 00:02:42,160
This is the only email we have on on this particular topic.

61
00:02:42,160 --> 00:02:44,160
But spicy Chris wrote and I know you saw this.

62
00:02:44,160 --> 00:02:49,020
He says, after your effing gnome bashing, I thought I'd write you about an alternative

63
00:02:49,020 --> 00:02:50,660
I've been using for years.

64
00:02:50,660 --> 00:02:52,120
You've been gnome bashing, apparently.

65
00:02:52,120 --> 00:02:53,120
Not me, obviously.

66
00:02:53,120 --> 00:02:54,120
Of course, not me.

67
00:02:54,120 --> 00:02:57,020
Everybody knows that I've I've never said anything negative about gnome.

68
00:02:57,020 --> 00:03:01,000
So they're clearly just talking about it was all me.

69
00:03:01,000 --> 00:03:04,720
But spicy Chris says, just use the terminal, bro.

70
00:03:04,720 --> 00:03:06,380
The command line is thorough.

71
00:03:06,380 --> 00:03:10,140
It's got all kinds of combinations of text applications, and you can use things like

72
00:03:10,140 --> 00:03:14,680
Tmux and Vim and, you know, even got file managers if you want them.

73
00:03:14,680 --> 00:03:19,080
It's highly modular, highly customizable, integrates with scripts in the command line.

74
00:03:19,080 --> 00:03:20,080
Great.

75
00:03:20,080 --> 00:03:21,840
It's easy to write your own shell scripts when you need to.

76
00:03:21,840 --> 00:03:23,160
You never have to worry about the mouse.

77
00:03:23,160 --> 00:03:28,100
It reduces RSI injuries, and the UI never changes unless you want it to.

78
00:03:28,100 --> 00:03:30,800
And no one ever pulls the rug out from underneath you.

79
00:03:30,800 --> 00:03:33,340
You still will need to come up with a way to do a web browser, though.

80
00:03:33,340 --> 00:03:35,880
So just use the damn terminal if you want to use Linux.

81
00:03:35,880 --> 00:03:36,880
No, I don't know.

82
00:03:36,880 --> 00:03:37,880
I mean, sure.

83
00:03:37,880 --> 00:03:38,880
Terminal is great.

84
00:03:38,880 --> 00:03:39,880
I use terminal all the time.

85
00:03:39,880 --> 00:03:40,880
You know what he is?

86
00:03:40,880 --> 00:03:41,880
He's a Mac user.

87
00:03:41,880 --> 00:03:42,880
He doesn't want to admit it.

88
00:03:42,880 --> 00:03:43,880
Because this is what guys say.

89
00:03:43,880 --> 00:03:45,960
It's like, why do you even need to use the GUI on Linux?

90
00:03:45,960 --> 00:03:47,680
Just SSH into a Linux server.

91
00:03:47,680 --> 00:03:49,160
This is something we got into the show.

92
00:03:49,160 --> 00:03:54,160
It's like, just if you want to use Linux, use it on the server, SSH into it, and do

93
00:03:54,160 --> 00:03:55,160
it through a Mac.

94
00:03:55,160 --> 00:03:58,120
Or now Windows, too, I suppose people might say, but we haven't gotten that.

95
00:03:58,120 --> 00:03:59,240
I don't buy this.

96
00:03:59,240 --> 00:04:01,720
This sounds like this email from spicy Chris here.

97
00:04:01,720 --> 00:04:05,760
It sounds like something a younger version of me would say, like a little bit ignorant

98
00:04:05,760 --> 00:04:08,200
of people's history.

99
00:04:08,200 --> 00:04:16,480
I was born in the fires of graphical interfaces, literally born in the fires of building UIs.

100
00:04:16,480 --> 00:04:18,020
And I slogged it out.

101
00:04:18,020 --> 00:04:23,200
Every bad computer interface, every bad cell phone interface, every bad car infotainment

102
00:04:23,200 --> 00:04:24,200
interface.

103
00:04:24,200 --> 00:04:26,840
You see, son, I've lived through it all.

104
00:04:26,840 --> 00:04:31,920
And I haven't lived this long slogging through every bad UI design that could come up since

105
00:04:31,920 --> 00:04:33,040
UIs were a thing.

106
00:04:33,040 --> 00:04:38,440
And I haven't done all of it just to toss it all aside and use the command line.

107
00:04:38,440 --> 00:04:43,240
What has all of this sacrifice of time and patience and essentially beta testing for

108
00:04:43,240 --> 00:04:47,800
the next generation been if not to enjoy the fruits of my labor?

109
00:04:47,800 --> 00:04:49,760
So spicy Chris, you're wrong.

110
00:04:49,760 --> 00:04:54,240
While the terminal is awesome and it's completely worth learning, it should not be your only

111
00:04:54,240 --> 00:04:55,720
interface to your computer.

112
00:04:55,720 --> 00:04:58,800
This is not 1979.

113
00:04:58,800 --> 00:04:59,800
Just my take.

114
00:04:59,800 --> 00:05:01,120
Just my take.

115
00:05:01,120 --> 00:05:04,760
But I'm not also on the side of the camp that says you should never use the terminal on

116
00:05:04,760 --> 00:05:06,000
Linux.

117
00:05:06,000 --> 00:05:11,280
I think in an attempt to make the Linux more appealing, we try to pretend like the command

118
00:05:11,280 --> 00:05:13,040
line isn't necessary.

119
00:05:13,040 --> 00:05:15,960
And I think it gives people false impression of the situation.

120
00:05:15,960 --> 00:05:17,280
Little command line is good.

121
00:05:17,280 --> 00:05:21,520
I mean, I don't particularly like the writer's sentiment.

122
00:05:21,520 --> 00:05:28,800
I agree with you that it's kind of, I don't know, dismissive of people's concerns.

123
00:05:28,800 --> 00:05:34,320
The real answer is like, if you don't like GNOME, then like, you know, KDE exists, right?

124
00:05:34,320 --> 00:05:35,320
As people keep telling me.

125
00:05:35,320 --> 00:05:37,980
I mean, forget about, forget about GNOME for a second.

126
00:05:37,980 --> 00:05:44,200
What do you think about this idea that you should be able to use the computer without

127
00:05:44,200 --> 00:05:47,440
ever having to touch the command line?

128
00:05:47,440 --> 00:05:51,280
I think it's a bull**** goalpost because you can't even do that on the Mac.

129
00:05:51,280 --> 00:05:54,480
There's some things that if you want to change preferences, you have to write some com file

130
00:05:54,480 --> 00:05:55,480
from the command line.

131
00:05:55,480 --> 00:06:00,000
Well, and one of the big selling points of the Mac is, even though Apple doesn't push

132
00:06:00,000 --> 00:06:04,680
it as hard now, but certainly was back in the day, that it's Unix with a good UI.

133
00:06:04,680 --> 00:06:05,680
Well, that's whatever.

134
00:06:05,680 --> 00:06:06,680
Yeah.

135
00:06:06,680 --> 00:06:09,440
Everybody that ever writes in that says, if I want a GUI that's good, I use the Mac because

136
00:06:09,440 --> 00:06:10,440
it's got Bash.

137
00:06:10,440 --> 00:06:11,440
ZShell now, but yeah.

138
00:06:11,440 --> 00:06:13,040
But it's not a good Unix use.

139
00:06:13,040 --> 00:06:15,680
It's not a great user land, though.

140
00:06:15,680 --> 00:06:16,680
The Unix environment.

141
00:06:16,680 --> 00:06:17,680
It kind of stinks.

142
00:06:17,680 --> 00:06:18,680
Yeah.

143
00:06:18,680 --> 00:06:19,680
You load up homebrew and you're fine.

144
00:06:19,680 --> 00:06:20,680
I mean.

145
00:06:20,680 --> 00:06:21,680
Ish.

146
00:06:21,680 --> 00:06:22,680
Yeah.

147
00:06:22,680 --> 00:06:23,680
Yeah, it makes it better.

148
00:06:23,680 --> 00:06:24,680
It does make it better.

149
00:06:24,680 --> 00:06:25,680
Yeah.

150
00:06:25,680 --> 00:06:29,080
Liam, our carrier spy writes in and says, Mike is right.

151
00:06:29,080 --> 00:06:30,080
Congratulations.

152
00:06:30,080 --> 00:06:33,240
5G is basically, it's basically a lie.

153
00:06:33,240 --> 00:06:40,800
Um, you see what Liam says is ever since 4G LTE was deployed, the G's that you see like

154
00:06:40,800 --> 00:06:43,880
4G or 5G are really no longer relevant.

155
00:06:43,880 --> 00:06:50,960
LTE stands for longterm evolution, meaning its core is supposed to last for a long time.

156
00:06:50,960 --> 00:06:56,840
The 3GPP released LTE in 2008, and they create new incremental cellular releases roughly

157
00:06:56,840 --> 00:06:59,040
every one to two years.

158
00:06:59,040 --> 00:07:02,800
Since LTE, there have been some improvements for consumers, but most of the improvements

159
00:07:02,800 --> 00:07:08,960
are targeted towards industrial features such as IoT or vehicle to vehicle or vehicle to

160
00:07:08,960 --> 00:07:10,280
base station, right?

161
00:07:10,280 --> 00:07:11,280
Makes sense.

162
00:07:11,280 --> 00:07:13,560
Or like making it better indoors for people.

163
00:07:13,560 --> 00:07:18,680
4G slash 5G is perfectly capable of supporting people's day to day mobile broadband needs.

164
00:07:18,680 --> 00:07:23,040
The real challenge is convincing telecoms to meaningfully deploy it everywhere.

165
00:07:23,040 --> 00:07:24,040
Yeah.

166
00:07:24,040 --> 00:07:25,040
Yeah, really.

167
00:07:25,040 --> 00:07:27,280
You mean to like spend money on towers?

168
00:07:27,280 --> 00:07:28,280
What?

169
00:07:28,280 --> 00:07:29,280
Yeah.

170
00:07:29,280 --> 00:07:30,280
My bet is actually on LTE.

171
00:07:30,280 --> 00:07:34,160
I'm hoping that the, cause they are deploying some new towers and there are some new frequencies

172
00:07:34,160 --> 00:07:35,360
with 5G.

173
00:07:35,360 --> 00:07:39,000
So my hope is, is that they sell everybody on 5G.

174
00:07:39,000 --> 00:07:42,200
Apple's going to help and Google's going to help with the pixel six.

175
00:07:42,200 --> 00:07:44,080
They're all pushing 5G.

176
00:07:44,080 --> 00:07:47,840
So all of the rubes will get on 5G and then the LTE network will open up for guys like

177
00:07:47,840 --> 00:07:48,840
me.

178
00:07:48,840 --> 00:07:50,640
They'll just sell it to me for cheap.

179
00:07:50,640 --> 00:07:54,000
That's what they've done with the edge network and the 3G network as they've moved on is

180
00:07:54,000 --> 00:07:59,200
they've kind of opened those networks up to just flat rate pay, you know, one flat fee

181
00:07:59,200 --> 00:08:00,560
kind of plans.

182
00:08:00,560 --> 00:08:03,000
All the data you could want, that kind of stuff.

183
00:08:03,000 --> 00:08:04,640
So I'm all about that.

184
00:08:04,640 --> 00:08:08,760
I hope 5G takes off in that way just so the LTE network opens up.

185
00:08:08,760 --> 00:08:12,800
But 5GE, that is just LTE.

186
00:08:12,800 --> 00:08:13,800
That's good info Liam.

187
00:08:13,800 --> 00:08:14,800
Thank you.

188
00:08:14,800 --> 00:08:16,740
If you've got any other insights into the cellular industry, please do let us know.

189
00:08:16,740 --> 00:08:21,120
If you've got an area of biz that you're in that you think we would love an interesting

190
00:08:21,120 --> 00:08:24,920
insight into that most people aren't aware of, let us know.

191
00:08:24,920 --> 00:08:26,920
That's the kind of thing we love to get into the show.

192
00:08:26,920 --> 00:08:31,640
Coder dot show slash contact is where you go for that and we also love your responses

193
00:08:31,640 --> 00:08:32,640
to the show.

194
00:08:32,640 --> 00:08:33,640
Anything like that.

195
00:08:33,640 --> 00:08:36,800
And we should also mention, I don't know, did we say it in the show?

196
00:08:36,800 --> 00:08:40,640
I know we said it on the stream, but we're at a new live time now on Mondays.

197
00:08:40,640 --> 00:08:45,640
Both Mike and I are adjusting to it because A, he didn't move and B, I haven't slept for

198
00:08:45,640 --> 00:08:48,360
not just one night, I haven't slept for two nights.

199
00:08:48,360 --> 00:08:50,360
Two different reasons.

200
00:08:50,360 --> 00:08:54,760
So I actually fell asleep at 7am, but then we had the new show time.

201
00:08:54,760 --> 00:08:59,280
So ironically, if the show was at the old time this week, I could have slept more, but

202
00:08:59,280 --> 00:09:03,920
I had to get up to do the show at the new earlier time.

203
00:09:03,920 --> 00:09:04,920
It's the worst.

204
00:09:04,920 --> 00:09:05,920
But anyways.

205
00:09:05,920 --> 00:09:06,920
It's amazing.

206
00:09:06,920 --> 00:09:07,920
I know.

207
00:09:07,920 --> 00:09:08,920
But it's okay.

208
00:09:08,920 --> 00:09:09,920
I'll get my sleep.

209
00:09:09,920 --> 00:09:10,920
It's fine.

210
00:09:10,920 --> 00:09:11,920
I'll catch up.

211
00:09:11,920 --> 00:09:12,920
I'll probably take an afternoon nap.

212
00:09:12,920 --> 00:09:13,920
But yeah, so we have the new live time.

213
00:09:13,920 --> 00:09:18,960
It's at 10am Pacific, 1pm Eastern at jblive.tv on Mondays.

214
00:09:18,960 --> 00:09:22,080
And the next one that we'll do, I'll be on the road.

215
00:09:22,080 --> 00:09:26,200
I'll be on the way to Salt Lake City for our Salt Lake City meetup.

216
00:09:26,200 --> 00:09:28,340
And then from Salt Lake City, I head off to Denver.

217
00:09:28,340 --> 00:09:31,880
So we have a meetup on the 7th of August in Salt Lake City.

218
00:09:31,880 --> 00:09:35,280
And then we have a meetup on the 20th in Denver.

219
00:09:35,280 --> 00:09:38,880
And we will have that at meetup.com slash Jupiter broadcasting.

220
00:09:38,880 --> 00:09:40,260
Linode will be at the Denver one.

221
00:09:40,260 --> 00:09:47,480
We're going to the pin-dustry, which is an awesome, awesome basically adult fun zone.

222
00:09:47,480 --> 00:09:49,120
I mean not like that kind of adult.

223
00:09:49,120 --> 00:09:51,600
I mean like a fun zone built for adults.

224
00:09:51,600 --> 00:09:54,880
I don't know how else to phrase that.

225
00:09:54,880 --> 00:09:57,160
I didn't know we were taking this direction.

226
00:09:57,160 --> 00:10:00,680
Hey, I figured let's branch out, right?

227
00:10:00,680 --> 00:10:01,680
It's Jupiter at night.

228
00:10:01,680 --> 00:10:09,520
No, it's obviously got pinball, but it's got bowling, and it's a huge facility in the Denver

229
00:10:09,520 --> 00:10:10,520
area.

230
00:10:10,520 --> 00:10:12,200
So that's where we're going to have our meetup.

231
00:10:12,200 --> 00:10:15,120
Linode's going to be giving away raspberry pies.

232
00:10:15,120 --> 00:10:18,400
We're going to create some exclusive content from the road trip and releasing that in the

233
00:10:18,400 --> 00:10:23,040
extras feed towards the middle of end of September, whenever the hell I get back.

234
00:10:23,040 --> 00:10:24,300
That's all coming.

235
00:10:24,300 --> 00:10:30,120
So do join us next week because somehow I'll be pulling off some sort of technical miracle

236
00:10:30,120 --> 00:10:34,960
to live stream the show live from the road because it's going to be tight.

237
00:10:34,960 --> 00:10:37,580
We're going to have a full RV full of kids and humans.

238
00:10:37,580 --> 00:10:42,880
So it's going to be a feat on multiple levels, like trying to keep the business going while

239
00:10:42,880 --> 00:10:47,620
still going down the road, while also trying to take the kids on a family trip, while also

240
00:10:47,620 --> 00:10:53,200
trying to create content for the release once we get back.

241
00:10:53,200 --> 00:10:54,200
And doing the meetups.

242
00:10:54,200 --> 00:10:55,200
And the meetups.

243
00:10:55,200 --> 00:10:56,200
Oh my God.

244
00:10:56,200 --> 00:10:57,200
So let's see how all that goes.

245
00:10:57,200 --> 00:10:58,200
It's too much.

246
00:10:58,200 --> 00:10:59,200
Damn.

247
00:10:59,200 --> 00:11:02,040
I overdid it, didn't I?

248
00:11:02,040 --> 00:11:05,320
I'm realizing that now just before it all starts.

249
00:11:05,320 --> 00:11:06,320
We'll see.

250
00:11:06,320 --> 00:11:07,560
Maybe it'll turn out just fine.

251
00:11:07,560 --> 00:11:08,560
Maybe it'll be fine.

252
00:11:08,560 --> 00:11:09,560
Maybe.

253
00:11:09,560 --> 00:11:10,560
We'll see.

254
00:11:10,560 --> 00:11:14,680
Meetup.com slash Jupiter Broadcasting.

255
00:11:14,680 --> 00:11:17,200
Linode dot com slash Coder.

256
00:11:17,200 --> 00:11:21,080
Go there to get $100 in 60 day credit on a new account and you go there to support the

257
00:11:21,080 --> 00:11:22,080
show.

258
00:11:22,080 --> 00:11:27,000
This here Coder radio program is made possible because you go take advantage of our sponsor

259
00:11:27,000 --> 00:11:28,000
offers.

260
00:11:28,000 --> 00:11:30,520
That's a huge part of what keeps this show on the road itself.

261
00:11:30,520 --> 00:11:34,760
And Linode is one of those sponsors that we can enthusiastically endorse.

262
00:11:34,760 --> 00:11:39,000
Linode's been around since 2003 is one of the very first companies in cloud computing.

263
00:11:39,000 --> 00:11:40,000
I don't even know.

264
00:11:40,000 --> 00:11:44,920
I don't even think it was called cloud computing back then, but now 18 years later, it sure

265
00:11:44,920 --> 00:11:45,920
is.

266
00:11:45,920 --> 00:11:46,920
And they're still in the game.

267
00:11:46,920 --> 00:11:50,000
They're the largest independent open cloud provider in the world.

268
00:11:50,000 --> 00:11:53,800
They have 11 data centers around the world that you can choose from millions of customers

269
00:11:53,800 --> 00:11:59,160
and businesses, and they are still focused on making cloud computing simple, affordable

270
00:11:59,160 --> 00:12:00,720
and accessible to all.

271
00:12:00,720 --> 00:12:06,040
What I love about Linode is their infrastructure is bulletproof, rock solid fast.

272
00:12:06,040 --> 00:12:09,920
And if you want to just get an application up on the web and start working on a project,

273
00:12:09,920 --> 00:12:12,600
they have avenues you can take to do that super quick.

274
00:12:12,600 --> 00:12:17,820
Or if you want to deploy a couple of core infrastructure servers and build up applications

275
00:12:17,820 --> 00:12:21,980
on those servers and do it yourself, Linode makes that possible as well.

276
00:12:21,980 --> 00:12:26,540
They've really refined that dashboard of theirs to make this kind of gradient of usability

277
00:12:26,540 --> 00:12:29,200
super, super accessible.

278
00:12:29,200 --> 00:12:33,080
And then on top of that, they've layered in really great features like DDoS protection,

279
00:12:33,080 --> 00:12:39,360
cloud firewalls, VLAN support, a powerful DNS manager, an easy way to manage block storage.

280
00:12:39,360 --> 00:12:43,020
So if you need a little extra disk on a server, they could totally accommodate that.

281
00:12:43,020 --> 00:12:47,880
Or you can go the route that I often go is I take advantage of Linode's S3 compatible

282
00:12:47,880 --> 00:12:48,880
object storage.

283
00:12:48,880 --> 00:12:50,160
That stuff rocks.

284
00:12:50,160 --> 00:12:54,200
Not only is it super crazy fast, not only can you possibly generate a HTTP URL for every

285
00:12:54,200 --> 00:12:58,320
file in the object storage if you want with great permissions management, but it allows

286
00:12:58,320 --> 00:13:04,800
you to kind of grow, expand, and, I guess, contract your storage as you need it.

287
00:13:04,800 --> 00:13:07,040
And that is just one less thing to manage.

288
00:13:07,040 --> 00:13:10,360
How embarrassing is it when your system goes down because, like I had this happen with

289
00:13:10,360 --> 00:13:14,560
Nextcloud, I added a bunch of files and then I deleted a bunch of files thinking they'd

290
00:13:14,560 --> 00:13:18,840
be removed, but of course they were just being stored in the deleted recycle area of the

291
00:13:18,840 --> 00:13:19,840
server.

292
00:13:19,840 --> 00:13:22,160
So then when we added the next batch of files, we ran out of storage and the whole server

293
00:13:22,160 --> 00:13:23,160
went down.

294
00:13:23,160 --> 00:13:26,800
And you know, like who has time for that in the middle of the workday?

295
00:13:26,800 --> 00:13:27,880
Nobody.

296
00:13:27,880 --> 00:13:31,840
And so that's why I transitioned that system over, I'd say like I did it, of course we

297
00:13:31,840 --> 00:13:35,020
as a team did it, we transitioned it over to S3 object storage.

298
00:13:35,020 --> 00:13:37,680
And it's really accessible and approachable to something like Nextcloud because they have

299
00:13:37,680 --> 00:13:39,880
that kind of stuff built right in.

300
00:13:39,880 --> 00:13:42,960
Of course Linode also has more advanced features if that's your jam.

301
00:13:42,960 --> 00:13:44,880
Maybe you want to make it part of your multi-cloud setup.

302
00:13:44,880 --> 00:13:48,720
They've got Kubernetes support, Terraform support, and they just make all of it very,

303
00:13:48,720 --> 00:13:50,520
very straightforward.

304
00:13:50,520 --> 00:13:54,280
And then it's all sitting on top of super fast networking, super fast hardware that

305
00:13:54,280 --> 00:13:55,280
they keep up to date.

306
00:13:55,280 --> 00:13:59,320
They have their high-end CPU systems, their AMD EPYC processors, and then they wrap it

307
00:13:59,320 --> 00:14:05,000
all up with just the best support in the business, the best customer support there is by phone

308
00:14:05,000 --> 00:14:06,000
or ticket.

309
00:14:06,000 --> 00:14:08,640
And that's just a nice little insurance policy to have.

310
00:14:08,640 --> 00:14:10,760
So go grab our $100 and try it out.

311
00:14:10,760 --> 00:14:15,800
You could learn something, deploy something, or maybe you just want to just compare it.

312
00:14:15,800 --> 00:14:17,460
That $100 lets you kick the tires.

313
00:14:17,460 --> 00:14:21,700
So go to linode.com slash coder, get $100 and 60 day credit on a new account.

314
00:14:21,700 --> 00:14:23,200
And of course you support the show.

315
00:14:23,200 --> 00:14:27,680
That's linode.com slash coder.

316
00:14:27,680 --> 00:14:30,100
So I feel like talking a little ice cream.

317
00:14:30,100 --> 00:14:32,720
We have a new open source compiler.

318
00:14:32,720 --> 00:14:39,000
And if the developer from Stripe is to be believed, this new Sorbet compiler is 22 to

319
00:14:39,000 --> 00:14:44,840
even 170% faster than Ruby's default implementation.

320
00:14:44,840 --> 00:14:45,840
I like speed.

321
00:14:45,840 --> 00:14:46,840
Just maybe a quick background.

322
00:14:46,840 --> 00:14:48,240
Ruby is an interpreted language.

323
00:14:48,240 --> 00:14:50,960
It's like Python if Python were written by sane people.

324
00:14:50,960 --> 00:14:55,120
Unfortunately, it's not very popular because the entire Ruby community more or less was

325
00:14:55,120 --> 00:14:56,120
subsumed by Rails.

326
00:14:56,120 --> 00:15:01,000
Rails fell out of favor.

327
00:15:01,000 --> 00:15:02,000
Ruby is just so elegant.

328
00:15:02,000 --> 00:15:03,000
We could keep moving on.

329
00:15:03,000 --> 00:15:06,240
But it's an interpreted language is the point, right?

330
00:15:06,240 --> 00:15:09,840
But speed is a problem in interpreted languages.

331
00:15:09,840 --> 00:15:13,560
Sorbet is actually like Chris said, from the folks at Stripe.

332
00:15:13,560 --> 00:15:19,640
It is like a static, it was only, not only, but it's basically like a static analyzer

333
00:15:19,640 --> 00:15:22,720
that like adds some type checking and stuff like that to Ruby.

334
00:15:22,720 --> 00:15:24,920
Ruby is a dynamic language.

335
00:15:24,920 --> 00:15:30,400
And this is now a compiler based on that or kind of in parallel to that.

336
00:15:30,400 --> 00:15:34,960
It's powered by LLVM, which anyone who's done any development recently probably knows what

337
00:15:34,960 --> 00:15:35,960
LLVM is.

338
00:15:35,960 --> 00:15:36,960
We don't need to talk about it.

339
00:15:36,960 --> 00:15:40,920
If you don't know, it's a compiler.

340
00:15:40,920 --> 00:15:45,960
I mean, it's, it's a compiler, well, there's a great episode of ATV with Kurt Lassener.

341
00:15:45,960 --> 00:15:46,960
He explains the details.

342
00:15:46,960 --> 00:15:51,120
But think about it like Clang LLVM, if you've ever done any iOS development, you've used

343
00:15:51,120 --> 00:15:52,120
it.

344
00:15:52,120 --> 00:15:57,640
And actually I think, is this still, is this true on stock Ubuntu now that the default

345
00:15:57,640 --> 00:16:04,400
C++ compiler is based on the LLVM or is it still GCC?

346
00:16:04,400 --> 00:16:05,600
That I don't know.

347
00:16:05,600 --> 00:16:08,560
I know it is easy to get it on Ubuntu.

348
00:16:08,560 --> 00:16:12,480
They have it packaged up, but I don't think it's by default.

349
00:16:12,480 --> 00:16:13,480
Don't think so.

350
00:16:13,480 --> 00:16:14,480
At least not in 2004.

351
00:16:14,480 --> 00:16:20,560
Because at the Matabotter, we use LLVM and LLDB just to keep everything unified, right?

352
00:16:20,560 --> 00:16:26,400
So I'm not sure if that's like something I set up on our image of our stock Pop OS or

353
00:16:26,400 --> 00:16:27,400
if that's just how it is.

354
00:16:27,400 --> 00:16:28,400
I don't remember.

355
00:16:28,400 --> 00:16:29,400
And it is in the repo.

356
00:16:29,400 --> 00:16:31,740
So it's like one apt install away.

357
00:16:31,740 --> 00:16:34,080
What this does is exactly what it says on the tin, right?

358
00:16:34,080 --> 00:16:38,700
It is a compiler for Ruby that makes it damn fast.

359
00:16:38,700 --> 00:16:39,960
That is pretty cool.

360
00:16:39,960 --> 00:16:43,320
They are saying that they're using it in production.

361
00:16:43,320 --> 00:16:45,880
But they admonish you not to.

362
00:16:45,880 --> 00:16:46,880
So take that.

363
00:16:46,880 --> 00:16:49,880
Don't do as we do.

364
00:16:49,880 --> 00:16:50,880
Yes.

365
00:16:50,880 --> 00:16:54,400
He goes on with a pretty good conversation about why not do a JIT compiler, why not just

366
00:16:54,400 --> 00:16:57,120
improve the Ruby VM.

367
00:16:57,120 --> 00:17:00,800
And I think the reasons make a ton of sense.

368
00:17:00,800 --> 00:17:08,200
I wonder if this is really going to get too much adoption.

369
00:17:08,200 --> 00:17:13,680
I feel like the majority of people that I talk to that are using Ruby are using them

370
00:17:13,680 --> 00:17:21,320
for fairly, I mean, I'm going to say simple, but fairly run of the mill Ruby on Rails applications

371
00:17:21,320 --> 00:17:27,760
where this kind of thing certainly fast is good, but wouldn't necessarily be super helpful

372
00:17:27,760 --> 00:17:29,680
for the day to day problems they have.

373
00:17:29,680 --> 00:17:33,880
Also when you read their motivations as to why they decided to open source Sorbet, I

374
00:17:33,880 --> 00:17:37,720
mean, a lot of times people get into this stuff to scratch their own itch, but it doesn't

375
00:17:37,720 --> 00:17:42,080
sound like the core things that generally lead to a lot of community adoption.

376
00:17:42,080 --> 00:17:46,560
So the number one reason at the top of their list that they are open sourcing this now

377
00:17:46,560 --> 00:17:50,760
is that they had already shared it with a couple of people, a handful as they put it,

378
00:17:50,760 --> 00:17:53,920
and it was toilsome to manage who they shared it with and who they hadn't.

379
00:17:53,920 --> 00:17:55,560
So this just makes that easier.

380
00:17:55,560 --> 00:17:58,360
And then they have other things in here.

381
00:17:58,360 --> 00:18:05,000
Sometimes you get some improvements, just really just not super enthused about the community

382
00:18:05,000 --> 00:18:06,920
aspect of open sourcing.

383
00:18:06,920 --> 00:18:10,680
And it's much more a utility of, you know, it was just getting hard to track this, and

384
00:18:10,680 --> 00:18:11,840
we figured we put it out there.

385
00:18:11,840 --> 00:18:16,600
I mean, you know, it kind of depends on our internal data structures anyway, so we got

386
00:18:16,600 --> 00:18:17,600
all that figured out.

387
00:18:17,600 --> 00:18:20,320
We had a lot of it already done, so it was just sort of the last piece.

388
00:18:20,320 --> 00:18:21,600
It's just very blasé.

389
00:18:21,600 --> 00:18:28,320
Yeah, and then there's a Ruby community aspect of this of, you know, this is not going to

390
00:18:28,320 --> 00:18:34,680
shake the Ruby community to its core, I don't think, unless my perception of what's going

391
00:18:34,680 --> 00:18:37,280
on is very, very wrong, which I don't think it is.

392
00:18:37,280 --> 00:18:39,480
Do you think it could inspire some changes?

393
00:18:39,480 --> 00:18:44,360
Well, it's interesting because their model for type checking in Ruby, right, was not

394
00:18:44,360 --> 00:18:47,320
adopted by the Ruby core team.

395
00:18:47,320 --> 00:18:48,320
You can use one or the other.

396
00:18:48,320 --> 00:18:51,480
I think you can even kind of use them both together.

397
00:18:51,480 --> 00:18:54,440
But Ruby 3, spoilers for this, is going way deep.

398
00:18:54,440 --> 00:18:57,560
We covered this about six months ago, I think.

399
00:18:57,560 --> 00:19:03,600
Added type checking, Sorbet has had type checking, and they're kind of on parallel tracks.

400
00:19:03,600 --> 00:19:07,160
First of all, you have to need this, right?

401
00:19:07,160 --> 00:19:12,200
If you're just writing like a line of business Rails app, you don't need this, and this is

402
00:19:12,200 --> 00:19:16,880
just adding extra weirdness to your project.

403
00:19:16,880 --> 00:19:24,480
There's so much going on in the let's add type checking and performance improvements

404
00:19:24,480 --> 00:19:33,520
to an interpreted language space now that I'm kind of skeptical with some of this.

405
00:19:33,520 --> 00:19:34,800
Python has something like this too, right?

406
00:19:34,800 --> 00:19:39,080
They've added type checking to a point, or types to a point.

407
00:19:39,080 --> 00:19:42,440
To me, at some point, if you're taking an interpreter languages and writing a compiler

408
00:19:42,440 --> 00:19:46,520
for it, basically your problem is you probably shouldn't have been doing this stuff in the

409
00:19:46,520 --> 00:19:47,520
interpreted language.

410
00:19:47,520 --> 00:19:49,840
So that is exactly what I was going to say, yeah.

411
00:19:49,840 --> 00:19:50,840
Right.

412
00:19:50,840 --> 00:19:55,440
Well, it was fast to get a proof of concept, a V1 up in Ruby, because Ruby is a great language

413
00:19:55,440 --> 00:19:59,880
for developer efficiency, and they admit freely, if you read their blog, which is a really

414
00:19:59,880 --> 00:20:04,720
great blog, the Stripe developer blog, that they do lots of their projects in Go and I

415
00:20:04,720 --> 00:20:05,720
think Java.

416
00:20:05,720 --> 00:20:06,720
Java.

417
00:20:06,720 --> 00:20:07,720
Because they're fast.

418
00:20:07,720 --> 00:20:08,720
Yep.

419
00:20:08,720 --> 00:20:09,720
Yep.

420
00:20:09,720 --> 00:20:10,720
Yep.

421
00:20:10,720 --> 00:20:11,720
Which makes sense.

422
00:20:11,720 --> 00:20:14,720
At Stripe, their problem is performance and scalability, right?

423
00:20:14,720 --> 00:20:18,040
They're literally operating at, we process tons of payments in the world.

424
00:20:18,040 --> 00:20:21,400
Not only is that critical for them, but it's so, so critical for all the businesses that

425
00:20:21,400 --> 00:20:22,400
depend on Stripe.

426
00:20:22,400 --> 00:20:24,880
Like, that's mission critical stuff, payments, right?

427
00:20:24,880 --> 00:20:26,000
So they've got to get it right.

428
00:20:26,000 --> 00:20:31,520
And so when you read the post, and you kind of read into what they're saying, to me it

429
00:20:31,520 --> 00:20:34,400
looks like, well, exactly what you just said.

430
00:20:34,400 --> 00:20:37,480
They created a lot of this because it was quick to get going.

431
00:20:37,480 --> 00:20:41,680
But now they've got to keep it running because of the business critical nature, and the teams

432
00:20:41,680 --> 00:20:47,080
that are maintaining the existing Ruby stuff just desperately, urgently need things to

433
00:20:47,080 --> 00:20:48,440
run faster.

434
00:20:48,440 --> 00:20:54,960
And then they have, as they put it, a handful of teams that are using Java and Go in new

435
00:20:54,960 --> 00:20:57,000
areas that they've rebuilt.

436
00:20:57,000 --> 00:21:02,360
They say that Stripe's existing Ruby code base is many millions of lines of code and

437
00:21:02,360 --> 00:21:06,480
implement Stripe's most business critical workloads, i.e. the most core value stuff

438
00:21:06,480 --> 00:21:07,720
is written in Ruby.

439
00:21:07,720 --> 00:21:10,700
So that's why they're spending the time to make this better, even if they rewrite it

440
00:21:10,700 --> 00:21:11,700
one day.

441
00:21:11,700 --> 00:21:12,700
Yeah.

442
00:21:12,700 --> 00:21:13,700
You know, that's like the magical rewrite.

443
00:21:13,700 --> 00:21:17,240
You know, the refactor that's always, you know, one year away.

444
00:21:17,240 --> 00:21:20,720
Yeah, I don't know about that.

445
00:21:20,720 --> 00:21:21,720
I mean, I have the same problem.

446
00:21:21,720 --> 00:21:26,200
Well, actually, I literally had this problem in Ruby about a year and a half ago.

447
00:21:26,200 --> 00:21:30,320
I solved it by writing the component I needed in Rust and run another project C++.

448
00:21:30,320 --> 00:21:32,720
Right now I'm doing the same thing in Python.

449
00:21:32,720 --> 00:21:38,480
I have a thing that needs to be more performant, so I wrote one little stupid module in C++.

450
00:21:38,480 --> 00:21:42,200
Little stupid module that does, like, mission critical stuff that involves, like, processing

451
00:21:42,200 --> 00:21:44,440
a bunch of data.

452
00:21:44,440 --> 00:21:48,000
And it's just a native binary that the Python application will call into.

453
00:21:48,000 --> 00:21:50,400
I could see this being useful for some people in the audience.

454
00:21:50,400 --> 00:21:51,400
Oh, yeah.

455
00:21:51,400 --> 00:21:52,400
I think it is useful.

456
00:21:52,400 --> 00:21:56,080
So, yeah, we'll have a link in the show notes for that, and you could check out some of

457
00:21:56,080 --> 00:21:57,080
the...

458
00:21:57,080 --> 00:22:00,440
I mean, 170% faster?

459
00:22:00,440 --> 00:22:01,840
I don't care who you are.

460
00:22:01,840 --> 00:22:02,840
That gets your attention.

461
00:22:02,840 --> 00:22:05,480
If it's real, that gets your attention.

462
00:22:05,480 --> 00:22:08,740
We're gonna have to struggle with things that may or may not be real, but I can confirm

463
00:22:08,740 --> 00:22:12,840
that Linux Action News just hit 200 episodes.

464
00:22:12,840 --> 00:22:18,080
We have a sticker out for that, and also, I was just gonna mention, Self-Hosted just

465
00:22:18,080 --> 00:22:19,080
hit episode 50.

466
00:22:19,080 --> 00:22:24,120
Like, these young kids, Mike, we're sitting here at 425, and Self-Hosted just hit 50 episodes,

467
00:22:24,120 --> 00:22:25,800
Linux Action News just hit 200.

468
00:22:25,800 --> 00:22:27,400
Aww, they're so cute.

469
00:22:27,400 --> 00:22:28,400
I know.

470
00:22:28,400 --> 00:22:31,920
We have new stickers for both Self-Hosted and Linux Action News that are taken from

471
00:22:31,920 --> 00:22:36,520
the MP3 album art, which seems fitting for, like, milestone releases, and those are up

472
00:22:36,520 --> 00:22:42,360
at JupiterGarage.com, along with some new swag up there at JupiterGarage.com.

473
00:22:42,360 --> 00:22:47,200
I just want to recommend the Chris the Badger shirt.

474
00:22:47,200 --> 00:22:53,360
I can say that I am ordering several, because having your face on my chest has always been

475
00:22:53,360 --> 00:22:54,360
a dream of mine.

476
00:22:54,360 --> 00:22:59,240
Absolutely, and you know how I prefer that left boob of yours, so I think that's right

477
00:22:59,240 --> 00:23:00,240
where my head will be.

478
00:23:00,240 --> 00:23:02,120
Well, it does flop at a very unique angle.

479
00:23:02,120 --> 00:23:06,640
I've always thought it was a bit of a unique snowflake.

480
00:23:06,640 --> 00:23:07,920
So that's JupiterGarage.com.

481
00:23:07,920 --> 00:23:11,380
That's our swag store, and we're gonna get some more, you know, eventually, if we ever

482
00:23:11,380 --> 00:23:15,020
do another run on the coder robe, that's where it will go.

483
00:23:15,020 --> 00:23:16,520
Don't mention the coder robe.

484
00:23:16,520 --> 00:23:20,080
Irvine, Irving, he just wrote in, he said he loves his coder.

485
00:23:20,080 --> 00:23:22,400
He says it's his great, he works in it every day.

486
00:23:22,400 --> 00:23:26,340
The only thing he says we should do now is we should get an optional lint roller with

487
00:23:26,340 --> 00:23:30,200
it because since he started working in his coder, his cat's all over him, and now he

488
00:23:30,200 --> 00:23:31,440
needs to get the cat hair off it.

489
00:23:31,440 --> 00:23:34,320
Well, you know, the coder, I write 50% fewer bucks.

490
00:23:34,320 --> 00:23:35,320
I just want to say.

491
00:23:35,320 --> 00:23:36,320
Really?

492
00:23:36,320 --> 00:23:37,320
Yeah.

493
00:23:37,320 --> 00:23:38,320
It must be the arm support.

494
00:23:38,320 --> 00:23:41,800
You know, it's cut so that way it doesn't get in the way of typing.

495
00:23:41,800 --> 00:23:47,880
Okay, so this next story, it seems so freaking far out.

496
00:23:47,880 --> 00:23:52,720
I had to like go make sure you weren't trolling me when you linked this story up.

497
00:23:52,720 --> 00:23:53,720
Nice.

498
00:23:53,720 --> 00:23:58,520
This is Doctor Who level like Star Trek, like an actual thing in Star Trek, like this is

499
00:23:58,520 --> 00:24:05,920
nuts, a research team with dozens of scientists working in partnership with Google's quantum

500
00:24:05,920 --> 00:24:13,920
computing lab may have created the world's first time crystal.

501
00:24:13,920 --> 00:24:18,840
We're not kidding you, they've created a time crystal.

502
00:24:18,840 --> 00:24:25,400
Like a perpetual motion machine, a time crystal forever cycles between states without consuming

503
00:24:25,400 --> 00:24:27,240
energy.

504
00:24:27,240 --> 00:24:33,120
Scientists claim to have built this new phase of matter inside a quantum computer.

505
00:24:33,120 --> 00:24:40,960
If it is true, it is literally the magical breakthrough quantum computers have needed.

506
00:24:40,960 --> 00:24:46,360
So I know this sounds wild, and I know it sounds impossible, and there's white papers

507
00:24:46,360 --> 00:24:48,400
I will have linked in the show notes.

508
00:24:48,400 --> 00:24:56,000
It seems the Google team may have figured out what was once theoretical and actually

509
00:24:56,000 --> 00:25:01,320
created this thing in a quantum computer, and they called it a new phase of matter.

510
00:25:01,320 --> 00:25:05,760
It would be like having a snowflake that consistently cycled back and forth between two different

511
00:25:05,760 --> 00:25:09,060
configurations of its crystalline shape.

512
00:25:09,060 --> 00:25:12,840
It's a seven point lattice one moment and then say a 10 point lattice the next moment

513
00:25:12,840 --> 00:25:13,840
or whatever.

514
00:25:13,840 --> 00:25:17,120
Like if you could imagine a snowflake that does that, that's sort of how a time crystal

515
00:25:17,120 --> 00:25:18,120
is.

516
00:25:18,120 --> 00:25:22,840
What Google has done is potentially prove that humans can manufacture time crystals.

517
00:25:22,840 --> 00:25:26,540
In the words of the researchers themselves, quote, these results establish a scalable

518
00:25:26,540 --> 00:25:30,880
approach to studying non-equilibrium phases of matter on current quantum processors.

519
00:25:30,880 --> 00:25:37,960
OK, I'm really not following what any of that means, but it sounds like a really huge deal.

520
00:25:37,960 --> 00:25:40,960
Like people are freaking out in the scientific community about this.

521
00:25:40,960 --> 00:25:45,080
It means the doctor is back and the Daleks are coming.

522
00:25:45,080 --> 00:25:46,200
It's so hard to understand.

523
00:25:46,200 --> 00:25:50,160
I can barely even say the words to even wrap my head around it, right?

524
00:25:50,160 --> 00:25:55,640
It is super complicated, but it could mean that we have kind of a solution.

525
00:25:55,640 --> 00:25:59,480
If this is my understanding of it, we could have kind of a solution that we've needed

526
00:25:59,480 --> 00:26:03,080
to kind of take quantum computers into actual daily use.

527
00:26:03,080 --> 00:26:05,320
Well, I'm actually excited about this.

528
00:26:05,320 --> 00:26:08,480
Obviously people are writing about how this could be like the very, very baby steps, like

529
00:26:08,480 --> 00:26:12,920
a theoretical warp drive, which is nuts, but maybe not nuts, right?

530
00:26:12,920 --> 00:26:15,040
You'll be laughing at me.

531
00:26:15,040 --> 00:26:20,240
But really, will this finally enable us to automatically change our desktop background

532
00:26:20,240 --> 00:26:21,240
in GNOME?

533
00:26:21,240 --> 00:26:22,240
I can't believe you.

534
00:26:22,240 --> 00:26:25,160
I cannot believe you.

535
00:26:25,160 --> 00:26:29,640
First you dismiss all of their response and then you troll them again.

536
00:26:29,640 --> 00:26:30,640
It's amazing.

537
00:26:30,640 --> 00:26:31,640
That is savage.

538
00:26:31,640 --> 00:26:35,040
Kidding aside, this is a huge deal, right?

539
00:26:35,040 --> 00:26:41,920
It's so, it's so like, well, one, all right, this hasn't been peer reviewed, right?

540
00:26:41,920 --> 00:26:47,760
So this could be a fluke that would be very depressing, could be some kind of, you know,

541
00:26:47,760 --> 00:26:50,680
it needs to be a repeatable result to actually be accepted.

542
00:26:50,680 --> 00:26:55,440
But assuming like, I don't think Google would make this up and Princeton University certainly

543
00:26:55,440 --> 00:26:56,440
would.

544
00:26:56,440 --> 00:26:57,440
Right.

545
00:26:57,440 --> 00:26:58,440
Yeah.

546
00:26:58,440 --> 00:27:01,200
So this is like the beginning.

547
00:27:01,200 --> 00:27:06,400
We all might be dead listening to this when this actually matters, but this is the beginning

548
00:27:06,400 --> 00:27:09,480
of a whole new wave of computing, right?

549
00:27:09,480 --> 00:27:12,200
Thinking about quantum computing, the whole big deal is like multivalent states, right?

550
00:27:12,200 --> 00:27:14,360
It's not just ones and zeros anymore.

551
00:27:14,360 --> 00:27:19,880
So that, that's just like, literally everybody listening to the show will effectively be

552
00:27:19,880 --> 00:27:23,160
a dinosaur once this becomes big enough.

553
00:27:23,160 --> 00:27:26,800
Even if we're still around because this is a whole new way of computing.

554
00:27:26,800 --> 00:27:27,800
Yeah.

555
00:27:27,800 --> 00:27:28,800
Yeah.

556
00:27:28,800 --> 00:27:31,480
That sucks for us, but hey, if I get a flying car.

557
00:27:31,480 --> 00:27:32,480
Yeah, that's true.

558
00:27:32,480 --> 00:27:35,640
I mean, Google definitely thinks this is real.

559
00:27:35,640 --> 00:27:41,000
They've with Cornell University are publishing a white paper that we'll have linked in the

560
00:27:41,000 --> 00:27:47,480
show notes and in here they basically promised the moon in the, they say they'll demonstrate

561
00:27:47,480 --> 00:27:51,560
it and yeah, I mean, wild, but you're right.

562
00:27:51,560 --> 00:27:55,400
Even if, even if it was something they could start working on in the next 10 years, the

563
00:27:55,400 --> 00:27:58,280
industry wouldn't transition forever.

564
00:27:58,280 --> 00:28:00,000
So it's not going to, you're right.

565
00:28:00,000 --> 00:28:01,800
It's not going to really impact us.

566
00:28:01,800 --> 00:28:05,760
Maybe, maybe governments, you know, in large institution and research computers.

567
00:28:05,760 --> 00:28:09,840
So maybe it could have an, it could have an impact on our lives in the way that supercomputers

568
00:28:09,840 --> 00:28:13,400
do now where they're helping in research and spying on us.

569
00:28:13,400 --> 00:28:15,360
Yeah, exactly.

570
00:28:15,360 --> 00:28:16,360
Exactly.

571
00:28:16,360 --> 00:28:19,920
Datadog.com slash Coder Radio.

572
00:28:19,920 --> 00:28:25,360
Go there to get a 14 day free trial, support the show and get a free shirt after you create

573
00:28:25,360 --> 00:28:27,000
one dashboard.

574
00:28:27,000 --> 00:28:31,600
Datadog lets you analyze code level performance across your environment and troubleshoot issues

575
00:28:31,600 --> 00:28:37,140
faster than ever using Datadog's tools, like their continuous profiler that automatically

576
00:28:37,140 --> 00:28:40,100
collects profiles from your production servers all the time.

577
00:28:40,100 --> 00:28:44,540
So you can analyze your data quickly with minimal overhead, get your answers quickly

578
00:28:44,540 --> 00:28:46,660
and communicate that with your team.

579
00:28:46,660 --> 00:28:51,260
You get a unified picture of your environment by correlating code performance metrics with

580
00:28:51,260 --> 00:28:57,080
your other monitoring data from your entire stack, all in beautiful real time dashboards.

581
00:28:57,080 --> 00:29:03,120
And it gets even easier with over 450 integrations for tracing, log management and other enterprise

582
00:29:03,120 --> 00:29:07,880
applications you're probably already using that connect in with that continuous profiler.

583
00:29:07,880 --> 00:29:11,600
It's all in one product, all in one platform.

584
00:29:11,600 --> 00:29:15,780
Datadog enables you to pinpoint the root cause of issues faster than ever.

585
00:29:15,780 --> 00:29:21,560
So go try it out for free for 14 days by visiting datadog.com slash Coder Radio.

586
00:29:21,560 --> 00:29:25,880
For a limited time, if you start a free trial and you create one dashboard, you'll get a

587
00:29:25,880 --> 00:29:30,480
free Datadog t-shirt and I love free swag and I could definitely use a t-shirt right

588
00:29:30,480 --> 00:29:31,480
now.

589
00:29:31,480 --> 00:29:37,520
So go to datadog.com slash Coder Radio.

590
00:29:37,520 --> 00:29:41,200
There's one last article I wanted to talk to you about.

591
00:29:41,200 --> 00:29:44,660
It was emailed in to us a couple of times as a suggestion to get our take on it and

592
00:29:44,660 --> 00:29:47,620
it ran over at techcrunch.com.

593
00:29:47,620 --> 00:29:56,160
It's from Sean O'Mara and it's titled the end of open source question mark and the inflammatory

594
00:29:56,160 --> 00:29:59,440
title almost made me want to dismiss it immediately.

595
00:29:59,440 --> 00:30:04,880
But the root of what Sean writes about here is actually something that crossed my mind.

596
00:30:04,880 --> 00:30:10,640
So several weeks ago, well actually April, so it's been more than weeks, there was a

597
00:30:10,640 --> 00:30:17,300
ban by the Linux kernel team of the University of Minnesota for committing hypocrite commits

598
00:30:17,300 --> 00:30:23,940
that was commits to the Linux kernel that were intentionally buggy to create a problem.

599
00:30:23,940 --> 00:30:28,260
Now that code never shipped in production and when the kernel team found out they were

600
00:30:28,260 --> 00:30:33,320
doing this, which it was, they found out earlier in the year, they didn't find out in April,

601
00:30:33,320 --> 00:30:37,160
but there was another series of commits in April that they suspected might be part of

602
00:30:37,160 --> 00:30:39,680
that research renewed.

603
00:30:39,680 --> 00:30:45,560
The timing also worked out fantastically for the kernel team because by creating a huge

604
00:30:45,560 --> 00:30:49,760
issue in April about these hypocrite commits, even though they had occurred earlier in the

605
00:30:49,760 --> 00:30:55,600
year, they were able to get the talk that was scheduled at a security symposium canceled

606
00:30:55,600 --> 00:30:58,880
that was about these hypocrite commits to the Linux kernel.

607
00:30:58,880 --> 00:31:04,080
And essentially what happened is a trusted source at the University of Minnesota used

608
00:31:04,080 --> 00:31:09,600
a basic kind of crappy static analyzer to find obvious low-hanging fruit in the Linux

609
00:31:09,600 --> 00:31:11,420
kernel.

610
00:31:11,420 --> 00:31:16,720
And then it seems unclear but three to five times that we made it through the first pass

611
00:31:16,720 --> 00:31:25,000
of maintainers submitted patches that ostensibly seemed to fix that bug but were so complex

612
00:31:25,000 --> 00:31:30,360
and gross actually intentionally introduced other vulnerabilities when stacked with other

613
00:31:30,360 --> 00:31:32,360
elements in the code.

614
00:31:32,360 --> 00:31:36,640
Now that made it past the first level maintainer but never made it to Linus's tree.

615
00:31:36,640 --> 00:31:39,320
But the research is actually kind of valid.

616
00:31:39,320 --> 00:31:45,920
The research idea was can we exploit our position of trust to get vulnerabilities into a project

617
00:31:45,920 --> 00:31:52,380
like the Linux kernel even with its structured process of maintainers and all of that.

618
00:31:52,380 --> 00:31:54,260
And the answer is yes they could.

619
00:31:54,260 --> 00:31:56,440
They did it successfully.

620
00:31:56,440 --> 00:32:02,180
Now the big upset and the ban which dominated the headlines essentially killed the messenger

621
00:32:02,180 --> 00:32:04,300
of that research.

622
00:32:04,300 --> 00:32:09,160
And so the actual results were kind of put aside and instead the focus was put on how

623
00:32:09,160 --> 00:32:15,120
dare they violate the kernel team's trust and time with these hypocrite commits.

624
00:32:15,120 --> 00:32:19,200
And the discussion never really came back to was it valid research or not.

625
00:32:19,200 --> 00:32:23,820
And what Sean is saying over at TechCrunch is that when you look at the complexity of

626
00:32:23,820 --> 00:32:29,760
this particular problem abusing a trusted source to submit hypocrite commits that is

627
00:32:29,760 --> 00:32:34,560
a problem that is going to impact the entire open source ecosystem.

628
00:32:34,560 --> 00:32:38,100
Every free software project out there needs to be thinking about this.

629
00:32:38,100 --> 00:32:42,380
And the Linux kernel is probably the best suited to defend against something like this

630
00:32:42,380 --> 00:32:46,140
in terms of resources and structure and it was compromised.

631
00:32:46,140 --> 00:32:49,800
So what do you think is going to happen to something like NGINX or GREP or something

632
00:32:49,800 --> 00:32:53,700
lower in the stack that does maybe have only one maintainer.

633
00:32:53,700 --> 00:32:58,200
And so what Sean is saying is this is a huge problem and essentially open source is dead

634
00:32:58,200 --> 00:33:03,040
in the water security wise until they come up with a way to solve this problem.

635
00:33:03,040 --> 00:33:08,620
And he argues that the net result is projects that are large in scale are even worse off

636
00:33:08,620 --> 00:33:13,240
they are just utter unprepared to deal with this game changing hyperscale threat model

637
00:33:13,240 --> 00:33:14,240
he writes.

638
00:33:14,240 --> 00:33:20,860
He says the researchers were able to target and get their patches in in code that was

639
00:33:20,860 --> 00:33:23,280
reviewed by a maintainer.

640
00:33:23,280 --> 00:33:26,920
Maybe they didn't maybe they didn't review it fully who knows but essentially by abusing

641
00:33:26,920 --> 00:33:31,020
their insider position in the community the maintainer probably just took a quick glance

642
00:33:31,020 --> 00:33:34,880
at it and said well it's garbage but it'll fix the issue I suppose.

643
00:33:34,880 --> 00:33:38,160
So is this what do you think is open source essentially screwed unless they come up with

644
00:33:38,160 --> 00:33:41,600
a way to secure this end of the development chain.

645
00:33:41,600 --> 00:33:48,360
I saw the story in like early May and I kind of ignored it because one I'm sure this happens

646
00:33:48,360 --> 00:33:51,800
all the time with or without intent right.

647
00:33:51,800 --> 00:33:56,440
And I can personal experience right I have a lot of dependencies but a lot of PIP dependencies

648
00:33:56,440 --> 00:34:01,120
and people make mistakes when they update their thing or they don't realize they're

649
00:34:01,120 --> 00:34:06,080
breaking backwards compatibility with some other package you're relying on right.

650
00:34:06,080 --> 00:34:10,120
Great I mean there are tons of examples but like there was a intentional and I don't remember

651
00:34:10,120 --> 00:34:16,880
the part of the Heartbleed stuff where the gem for SSL on Ruby they just like killed

652
00:34:16,880 --> 00:34:22,340
a bunch of versions of it because it was exploited but that really screwed up a bunch of Rails

653
00:34:22,340 --> 00:34:27,040
projects for me and caused a lot of heartache it forced me to update faster than I wanted

654
00:34:27,040 --> 00:34:29,420
to.

655
00:34:29,420 --> 00:34:33,780
Also going to the proprietary side and I'm going to get to the point in a minute don't

656
00:34:33,780 --> 00:34:38,960
governments around the world either hoard zero days or in fact demand backdoors.

657
00:34:38,960 --> 00:34:43,680
Well and look what we just saw with the NSO group and the iPhones and Androids that were

658
00:34:43,680 --> 00:34:44,680
getting exploited.

659
00:34:44,680 --> 00:34:48,760
Yeah I mean isn't that just an intentional exploit.

660
00:34:48,760 --> 00:34:53,360
Yeah they're sitting on some exploit to take advantage of that in order to get past Blast

661
00:34:53,360 --> 00:34:58,500
or on iMessage which is the sandbox for iMessage they have to be using some exploit that Apple

662
00:34:58,500 --> 00:34:59,500
doesn't know about.

663
00:34:59,500 --> 00:35:07,060
Yeah I don't I kind of don't buy this I think this is a fun story because it yes the weird

664
00:35:07,060 --> 00:35:11,080
part it was university researchers who you might expect better from.

665
00:35:11,080 --> 00:35:12,080
Yeah.

666
00:35:12,080 --> 00:35:18,160
But this is like saying hey if I have the key to your liquor store I can rob you.

667
00:35:18,160 --> 00:35:24,420
Okay so you any contributor to any project could do this and this has been going on for

668
00:35:24,420 --> 00:35:29,040
decades literally right via you know government entities.

669
00:35:29,040 --> 00:35:33,480
That's my take and or just people that are dicks that are just you know doing stupid

670
00:35:33,480 --> 00:35:34,480
stuff to be a jerk.

671
00:35:34,480 --> 00:35:39,960
The thing is is we have more tooling now than ever to track changes and revert changes and

672
00:35:39,960 --> 00:35:42,720
revoke permissions or honest mistakes.

673
00:35:42,720 --> 00:35:43,720
Yeah absolutely.

674
00:35:43,720 --> 00:35:44,720
Heartbleed was not on purpose.

675
00:35:44,720 --> 00:35:50,040
Right I mean it feels like there's definitely a technological solution to this.

676
00:35:50,040 --> 00:35:55,480
We could have more tools that are checking patches and smarter and smarter like again

677
00:35:55,480 --> 00:35:59,640
I go back to Copilot wouldn't it be interesting if this was a problem Copilot was solving.

678
00:35:59,640 --> 00:36:03,240
But maybe there is some project governance here.

679
00:36:03,240 --> 00:36:07,160
It's so tricky when you have a project like the scale of the Linux kernel.

680
00:36:07,160 --> 00:36:09,280
There's no model to follow there.

681
00:36:09,280 --> 00:36:13,400
They're inventing how you manage a project of that scale every day.

682
00:36:13,400 --> 00:36:16,520
So it's hard to criticize how they manage it.

683
00:36:16,520 --> 00:36:21,600
But this is the thing right unless you're going to go full TNO you're trusting lots

684
00:36:21,600 --> 00:36:24,800
of people whenever you're building modern software.

685
00:36:24,800 --> 00:36:30,000
Even if even if you were pure like Microsoft stack only well one there it's open source

686
00:36:30,000 --> 00:36:34,360
now so it's really in the same league and two even when it wasn't I would argue is less

687
00:36:34,360 --> 00:36:40,480
secure because if you're just getting some proprietary you know binary library or binary

688
00:36:40,480 --> 00:36:45,200
blob or whatever the hell you're doing you don't know right no one else no one outside

689
00:36:45,200 --> 00:36:50,080
of the organization who's probably NDA'd out the butt has looked at that code.

690
00:36:50,080 --> 00:36:54,480
And yes I agree when you go to get hub and you pull down somebody's jam or somebody's

691
00:36:54,480 --> 00:36:58,120
pip project you should assume that everybody's a Russian spy.

692
00:36:58,120 --> 00:36:59,120
Naturally.

693
00:36:59,120 --> 00:37:00,120
Naturally.

694
00:37:00,120 --> 00:37:01,960
I mean what do you what do you what's the alternative.

695
00:37:01,960 --> 00:37:04,000
Are we going to all write everything in assembler ourselves.

696
00:37:04,000 --> 00:37:07,280
You're going to write the entire stack every time.

697
00:37:07,280 --> 00:37:12,360
You know Chris for the next three years I'm just working on my own custom file system.

698
00:37:12,360 --> 00:37:13,920
I call it butter F.S.

699
00:37:13,920 --> 00:37:21,160
Oh you know but this problem is it is the conundrum that is coming across in every aspect

700
00:37:21,160 --> 00:37:23,080
of technology right now.

701
00:37:23,080 --> 00:37:29,280
So like self hosting do you self host everything do you use Google for some things do you use

702
00:37:29,280 --> 00:37:33,120
iCloud when you have an iPhone or do you run next cloud and do you run that entire stuff

703
00:37:33,120 --> 00:37:34,120
yourself.

704
00:37:34,120 --> 00:37:38,360
You don't use Google App Engine that's for sure.

705
00:37:38,360 --> 00:37:42,200
Well that's just it isn't it it's actually a series of balances and compromises and picking

706
00:37:42,200 --> 00:37:46,940
and choosing what you put all the work into what you essentially are you could almost

707
00:37:46,940 --> 00:37:52,260
consider contracting out in a way outsourcing.

708
00:37:52,260 --> 00:37:56,420
It's a big balance now and so it is it is in just about all elements now.

709
00:37:56,420 --> 00:38:01,000
It's kind of a wild thing we're really creating a pretty significant interweb of dependency.

710
00:38:01,000 --> 00:38:02,520
What could go wrong.

711
00:38:02,520 --> 00:38:06,320
Well also I would be a little more afraid of proprietary systems.

712
00:38:06,320 --> 00:38:14,120
In fact it is probably my one big thing against you know Mac and iOS is Apple is a company

713
00:38:14,120 --> 00:38:18,880
that has proven super willing to bow to the Chinese government for all kinds of crazy

714
00:38:18,880 --> 00:38:19,880
right.

715
00:38:19,880 --> 00:38:27,480
Like sure why not some backdoor to iMessage or into iCloud for iCloud right.

716
00:38:27,480 --> 00:38:32,120
At least with the Linux kernel you know there's some crazy dude from somewhere in Libsyn or

717
00:38:32,120 --> 00:38:35,880
I'll some European Munich or something who's like no freedom ha.

718
00:38:35,880 --> 00:38:39,320
Yeah there's going to be there's going to be somebody that's checking it just to cover

719
00:38:39,320 --> 00:38:40,800
their own ass too right.

720
00:38:40,800 --> 00:38:43,820
There's so many different motivations for using that technology that somebody's just

721
00:38:43,820 --> 00:38:48,120
paranoid and when they discover something they'll make a blog post and become famous.

722
00:38:48,120 --> 00:38:54,320
Right exactly like there I am confident that there is some freedom bearded wizard in Europe

723
00:38:54,320 --> 00:38:59,960
somewhere who doesn't give a crap what the US or Chinese governments have to say and

724
00:38:59,960 --> 00:39:02,280
is going to look at all these patches.

725
00:39:02,280 --> 00:39:07,720
Yeah there is that there is that element of at the end of the day there's no one particular

726
00:39:07,720 --> 00:39:12,720
corporate interest that's twisting it and and making it into something and that is in

727
00:39:12,720 --> 00:39:17,760
a way it's a different kind of security right it's a different kind of trust like you can

728
00:39:17,760 --> 00:39:24,120
you can have confidence in the security of Windows 11 or iOS like you can have some confidence

729
00:39:24,120 --> 00:39:29,640
there but you know in the back of your mind like those kind of corporate vulnerabilities

730
00:39:29,640 --> 00:39:34,920
even if the code is pristine those kind of corporate vulnerabilities exist and it's just

731
00:39:34,920 --> 00:39:39,640
the nature of being in business at that size that's just the reality.

732
00:39:39,640 --> 00:39:43,680
It's just how it is and that's a different kind of trust where open source you can trust

733
00:39:43,680 --> 00:39:47,760
that that thing doesn't exist maybe there's flaws maybe somebody is submitting hypocrite

734
00:39:47,760 --> 00:39:51,400
commits but you can trust that it doesn't have those corporate flaws.

735
00:39:51,400 --> 00:39:55,840
Right and also like let's just take the crazier case which you I think you'll remember for

736
00:39:55,840 --> 00:39:59,320
sure because we covered it but a couple years ago there was a story where Facebook and Google

737
00:39:59,320 --> 00:40:04,160
and a bunch of the big tech companies here had to admit that they kind of got hammered

738
00:40:04,160 --> 00:40:09,640
they had a bunch of like Chinese spies working there yep yeah they're targets they're targets

739
00:40:09,640 --> 00:40:14,680
and so but in the open source world let's just say like you know Chris is a Chinese

740
00:40:14,680 --> 00:40:21,160
spy you can sound for that and he's like trying to infiltrate the podcasting world right he's

741
00:40:21,160 --> 00:40:26,880
gonna hack fireside or something well if it's open source somebody's gonna notice what the

742
00:40:26,880 --> 00:40:32,040
hell is this why is all the traffic going to like a Shenzhen that doesn't seem right

743
00:40:32,040 --> 00:40:36,280
proprietary you'd never know yeah right even Facebook didn't know that they had a handful

744
00:40:36,280 --> 00:40:41,440
of Chinese spooks there Google didn't know they had to get rid of them right the government

745
00:40:41,440 --> 00:40:46,800
had to help that Facebook thing are you aware that the first time you probably heard of

746
00:40:46,800 --> 00:40:50,860
the NSO group was actually a couple of years ago when a story came out that Facebook attempted

747
00:40:50,860 --> 00:40:55,360
to buy the Pegasus software so that way they could monitor iOS users outside of what the

748
00:40:55,360 --> 00:41:01,400
sandbox rules allow them to do I did not remember that but Pegasus yeah the very Pegasus software

749
00:41:01,400 --> 00:41:06,360
that is at the center of this whole NSO group controversy right now about hacking phones

750
00:41:06,360 --> 00:41:10,920
using zero-day exploits Facebook tried to get up to become a contractor and they turned

751
00:41:10,920 --> 00:41:17,400
them down they were turned down and this the reason we know this is it's an illegal deposition

752
00:41:17,400 --> 00:41:21,960
it's in court documents that it came out that's how we found out about this so it seems pretty

753
00:41:21,960 --> 00:41:28,660
legit and that's that's you cannot trust them you just cannot trust these companies that

754
00:41:28,660 --> 00:41:34,120
are living off of data they were willing to use spy malware to track users outside of

755
00:41:34,120 --> 00:41:41,960
what the iOS what iOS naturally allows for Wow I did not really I forgot about that that's

756
00:41:41,960 --> 00:41:48,280
whoo yeah that's really something and in the deposition to they're complaining you know

757
00:41:48,280 --> 00:41:51,720
the iPhone is just a lot harder to track the users and the Android phones are so we need

758
00:41:51,720 --> 00:41:57,080
to buy something for the iPhone so that way we can kind of get more data and Facebook

759
00:41:57,080 --> 00:42:02,560
is suing the NSO group I think it was some sort of anyways I'll put the link in the show

760
00:42:02,560 --> 00:42:06,320
notes I don't remember the details because like two years ago but never remember when

761
00:42:06,320 --> 00:42:11,160
police is just like sell software for money yeah those were the days oh here it is I just

762
00:42:11,160 --> 00:42:17,800
found the details so the spyware would have been inserted into the VPN software that Facebook

763
00:42:17,800 --> 00:42:24,800
bought a novel which was a VPN app that got pulled off of the App Store back in 2008 by

764
00:42:24,800 --> 00:42:31,460
Apple for violating data collection policies and in the NSO group the NSO group in their

765
00:42:31,460 --> 00:42:36,360
deposition in court said quote the Facebook representative stated that Facebook was concerned

766
00:42:36,360 --> 00:42:41,640
that its method for gathering user data through a novel project was less effective on Apple

767
00:42:41,640 --> 00:42:47,280
devices than on Android devices and they continued to say quote the Facebook representatives

768
00:42:47,280 --> 00:42:52,600
also stated that Facebook wanted to use purported capabilities of Pegasus to monitor users on

769
00:42:52,600 --> 00:42:59,160
Apple devices and were willing to pay for the ability to monitor a novo protect users

770
00:42:59,160 --> 00:43:04,800
a nova protect used to spy on you I love that Arwellian twisting too that's so great Facebook's

771
00:43:04,800 --> 00:43:14,040
just great so yeah yeah there is something to open source beyond just the kind of more

772
00:43:14,040 --> 00:43:18,120
flashier things that people talk about is that there's just at least nobody that's trying

773
00:43:18,120 --> 00:43:24,720
to hack your VPN to spy on you and if they if they are they get caught right there's

774
00:43:24,720 --> 00:43:29,220
another sinister side of the ANOVA story where Facebook ended up having to admit to they

775
00:43:29,220 --> 00:43:33,680
use the VPN traffic on people's phones to see what the new and up-and-coming apps were

776
00:43:33,680 --> 00:43:37,960
to either buy them or kill them right that's how they bought whatsapp yeah they just well

777
00:43:37,960 --> 00:43:43,200
there's a lot of traffic going on this thing let's get rid of it yeah hmm yep yep yep

778
00:43:43,200 --> 00:43:47,720
so they're creepy it's all really super creepy and so no I say it's not the end of open source

779
00:43:47,720 --> 00:43:52,120
I agree with you in fact it's probably just going to transition into a new phase because

780
00:43:52,120 --> 00:43:58,640
this kind of what do you call it lack of trust trust debt whatever we might have in large

781
00:43:58,640 --> 00:44:03,240
companies and institutions is going to drive market for the adoption of open source and

782
00:44:03,240 --> 00:44:07,940
companies are going to continue to be able to say you know this is our service XYZ brand

783
00:44:07,940 --> 00:44:13,320
new service super scalable service is backed by open source but I want to just throw a

784
00:44:13,320 --> 00:44:17,000
little monkey wrench in all that that's nice independent thinking did you see the story

785
00:44:17,000 --> 00:44:23,620
about the super militaristic raid on the Bitcoin boys up and I think it was a New Hampshire

786
00:44:23,620 --> 00:44:30,400
oh no really why why were they using too much power they refused to get a license to transmit

787
00:44:30,400 --> 00:44:35,580
money and the federal government's response to that was tactical assaults on their home

788
00:44:35,580 --> 00:44:38,680
the one lady they picked up was just like sleeping in her underwear and t-shirt they

789
00:44:38,680 --> 00:44:43,840
like told her if she moved they'd shoot her wow so you're saying I should probably store

790
00:44:43,840 --> 00:44:47,760
my crypto somewhere outside the studio I would definitely have a VPN that's for sure yeah

791
00:44:47,760 --> 00:44:56,320
oh boy hey coder qa members out there coder qa.co if you want to become a member and support

792
00:44:56,320 --> 00:45:00,480
the show you get a limited ad feed and you get the coder Lee report and we repost it

793
00:45:00,480 --> 00:45:04,080
over the weekend because only about half the members like got the auto-generated RSS feed

794
00:45:04,080 --> 00:45:10,900
so if you missed it check your feed again the coders the quotas no the quarters quota

795
00:45:10,900 --> 00:45:14,440
you understand what I'm saying there's a new coder QA out there for you members out there

796
00:45:14,440 --> 00:45:19,080
so go get it for the team I don't know the words are completely gone now it's like I

797
00:45:19,080 --> 00:45:23,360
haven't slept for two nights and I can't even get through yeah you think I'd never done

798
00:45:23,360 --> 00:45:28,120
it before well I do remember this to start wrapping us up I do know there's something

799
00:45:28,120 --> 00:45:32,320
else we should say like maybe you want to send anywhere anybody any place like a website

800
00:45:32,320 --> 00:45:36,640
or I don't know a damn Twitter page I don't know follow me at Dumanuco on Twitter you're

801
00:45:36,640 --> 00:45:40,800
giving away computers yeah I'm oh yes I forgot about that I always forget things yeah yeah

802
00:45:40,800 --> 00:45:43,920
we're giving away Thalios I have to write up the actual terms but it's another student

803
00:45:43,920 --> 00:45:48,680
contest I'll have it ready for next week that's nice yeah we know you're busy these days but

804
00:45:48,680 --> 00:45:52,360
that's pretty great if you're a student out there and you know what student couldn't use

805
00:45:52,360 --> 00:45:56,000
a Thalio keep an eye out for that I'm on the Twitter stu at Chris LES the network is at

806
00:45:56,000 --> 00:46:00,620
Jupiter signal and the whole show is at Coder radio show and that's like good for announcements

807
00:46:00,620 --> 00:46:05,960
news updates time changes at Coder radio show and the at Jupiter signal accounts good for

808
00:46:05,960 --> 00:46:12,080
that too we're live on Mondays now at 10 a.m. Pacific 1 p.m. Eastern over at JB live TV we'd

809
00:46:12,080 --> 00:46:16,000
love to have you hang out with us in the chat room we chat before and after the show follow

810
00:46:16,000 --> 00:46:19,940
the chat room during the show and we love getting your title suggestions too but of

811
00:46:19,940 --> 00:46:24,200
course we always appreciate you downloading subscribing and sharing the show with a friend

812
00:46:24,200 --> 00:46:27,800
thanks so much for tuning in this week's episode of the Coder radio program and we'll see you

813
00:46:27,800 --> 00:46:31,320
right back here next week

