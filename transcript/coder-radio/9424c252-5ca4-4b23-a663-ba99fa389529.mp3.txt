This is Kota Radio, episode 334, recorded on November 26th, Crazy 218.
Hey y'all, it's Chris and I'm fixing to do a Kota Radio from a Texas location in the future
for all you out there that are concerned about programming and maybe want to take a pragmatic
look at that and the art and the business of it even and maybe it's related technologies. My name
is Chris and pre-recorded in the future from the beautiful Pacific Northwest and I'm joined this
week by my established host, Mr. Dominic. Hello, Mike. Hello, Chris and this is Mike from the
future. No. Who's probably using his powers of darkness to make Swift run on every platform.
You know, when you and I talk to each other from the future, I get excited because there's so many
potentially amazing things that could yet to be happened. Those are my least favorite episodes
of Star Trek. Really? Really? Because nothing like the crazy comb badges and the beard.
Unless we have different facial hair. Right. My dream has been to have not a goatee, but like
an evil goatee. You know what I'm talking about? Oh, okay. Okay. See, in this episode, I thought
you had a mustache and I had the soul patch. Is that not this episode? Well, you are very
soulful, gentlemen. Well, I suppose, Mr. Dominic, but either way, we are both in the middle of
travel and so we are pre-recording an episode and a soul patch or not. Actually, I got a question
for you. Do you bring a razor with you? I do. It turns out I can totally bring my razor with me.
Electric or old school? I'm old school. Okay. Why? Are you electric? Yeah. I stashed.
Absolutely. Truth. A hundred percent truth. I stashed an electric razor at Linux Academy
and I would do this anywhere I go frequently. I have one at the RV, I have one at the studio,
and I have one in Texas. I just go get the cheapest electric razor possible from the store
and I buy one and I save it in the location I'm traveling. Truth. I keep a go bag in my trunk.
Oh, that's why the Qt Corporation has had such a hard time tracking you down.
Yeah. So, long-time listeners, meaning within the last 30 days,
or depending on when in the future. You know what, Chris, this is the future.
No, no. This Qt saga has been going on for like a solid six months at this point.
Let's not. This has been the 30 years war. All right. I don't even know where to begin.
I was evaluating using Qt for a recently launched product.
And then you talked about it on a fairly well-listened podcast.
I didn't know it was fairly well-listened. You didn't know? Okay.
I haven't asked for numbers in months because the less I know, the less liable I am.
True, true. Fair enough. No. So, there was a misunderstanding between myself and a sales rep
from Qt. Basically, it was about what defines an embedded device. Now, since my product's
completely public, I'm happy to discuss Gryphon. We all know Gryphon. I mention it every week
because, yay. Gryphon runs on Microsoft Surface tablets and other tablets with Linux, right?
It is a radar display software made in partnership with a wonderful company in North Carolina
who does radar display systems. Or, I'm sorry, radar hardware systems. We do the displays at
TMB. Right. TMB is the mad botter. Google it. Buy something. Unless you're from Qt, then don't.
Don't. Apparently.
Well, I wrote the application in Qt that I had to throw out after a conversation with a Qt sales rep
who told me that I needed an embedded license. Now, the initial version of this application
ran on Microsoft Surface tablets on Windows. I don't know about you, but there's nothing
embedded about an i7. Yeah, fair enough. That's a desktop PC. That's a desktop.
After months of back and forth, I finally got from on high, from the good folks in Boston,
what the hell they mean by embedded. Is this a phone call? Is this an email thread? What are we
talking about? This is a number of phone calls. It got down to, when they say embedded,
they consider embedded if I sell them the actual hardware. What? What? Sell who the hardware?
There was a fundamental misunderstanding. I do not resell Surface tablets. No. Or the
generic Linux tablet in my business. I am not a hardware vendor. I am a pure software vendor.
I would assume, ideally, it's the customer that's buying tablets and then deploying the software
on those tablets. To my specifications, yes. The original sales rep misunderstood that
and thought I was building these tablets and selling them. Like as integrated devices.
Right. So if I were, well, it's not just integrated devices though. So in a world where I bought,
let's say, a hundred Microsoft Surface Pros and then sold them to some, you know, the Navy,
let's just make up, make something up. Right. Then they claim I need a cute embedded license.
That's or you can go LGPL, but then, you know, the sales reps don't like to talk about it.
Actually, neither do you. Let's be honest. Yeah. It's got, I'm a little afraid of the LGPL.
I'm like, no, let's talk about BSD or MIT or Apache. Come on guys. Let's play ball here.
We can all be friends. Yeah. So, but that's not what I was doing. Right. So this is,
you know what, this is almost like a programming error where you have one little piece of data
that was wrong. Right. That led to a big problem. So the irony is I could totally have done what I
was doing in Qt and been fine. I wasted, well, I didn't waste, but you know, the original
couple of weeks in Q whatever it was a good proof of concept and it, I don't even know what to say.
Like I, the funny part is I still don't agree with them on the definition of embedded, right? Like,
but, but even that aside, so folks, if you were concerned and I do feel kind of bad because I
should have probably gone higher up on, you know, as a technical resource, certainly if you're
writing software, as long as you are not, you're fine. As long as you're dynamically linking,
basically, I met an attorney, this is not legal advice. Well, I appreciate that. They wanted to
actually clear the record with you. Yeah. That was several hours of phone conversations. So,
you know, if you look at like some of the most successful magazines in the world,
they might have an annual distribution of say 180, 200,000 unique. I think I'm going to yell that by
daddy here. Hang on. I'm just letting you know, I'm just putting things in perspective. So, you
know, that would be a successful magazine. Like maybe the world's most successful magazine might
make it. Wait, you said 180. Yeah. See the reality is they like to pretend like it's millions,
but people that actually are receiving the magazine, it's a hundred and eighty thousand.
A month. This explains a lot of the hate email I get. So our numbers, our numbers are much, much,
much, much, much higher than that. So you got to think of our numbers around the 500,000 mark. You
see, I just, I was just, I just dropped my pen. I was just doing a little quick math, but yeah.
So we have, we think about us like, think about it as like the most successful technology magazine
in the market. That's our reach. It's the most successful magazine in the world.
In the market. That's our reach. It's not like the world's most successful website,
like maybe ours, Technica, like technically because they get millions, but it's seriously ours.
I don't know. I'm just giving you an example. Yeah. Yeah. I mean, you're right. But like,
but it's, it's, it's, so it's, it's somewhere between like the most successful tech website
and the most successful magazine. So basically I subscribed to Linux user and developer and I'm,
I should believe, and it's weird that we're doing this on the air, but I should believe that we have
more distribution than they do without doubt. So this is the part where everybody gets the
right comments. Mike doesn't know how many people listen to the show because we don't focus on that.
That's not, Mike doesn't know how many people listen to the show. That's not what that's,
well, that's not what our whole network's about. That's all I thought it was like,
maybe like 2000 a month. Yeah. No, I'm looking, I'm, oh really? No, I'm looking, I thought it
was super low. Yeah. I, I thought we went, okay. I am looking at the most conservative numbers
I have right now. I'm not even, I'm not even looking at like the optimistic numbers where
maybe somebody downloads it at home and then continues listening at work. It is the most
conservative numbers you download behind a gnat. We're counting it once kind of thing.
What if they go into like Stitcher? We're not even counting. I've heard not counting
this is not counting a YouTube Stitcher or any video downloads either. Yeah. This explains when
I go to things like, like DevFest Florida. And if I wear like a coder t-shirt or a DMV shirt.
And by the way, I should mention, I should mention this is just for 2018,
right? So the, the show has had six years of run. Wait a minute. Cheesy Bacon saying we're
bigger than PC world. That's not possible. PC world's millions. It's gotta be. Well,
I mean, this is just one show on Jupiter broadcasting. Oh, see, let's not, let's not
get drunk now. He's like, no, no, I, I actually haven't released these numbers yet, but, um,
LAN just surpassed 2.2 million downloads for 2018 and Linux unplugged just surpassed
1 million downloads for 2018. Well, let me tell you something. Our original deal still stands.
I will be using these facts to advertise to you.
Yeah. All right. Moving forward. Yeah. It's been a, 2018 has been a really good year.
You know, we focused. What if it's all hate mail? I mean, I get like several thousand hate
mail. Actually, I'll say this. I feel like we've had the best Twitter engagement that we've ever
had on the show. Like, you know, we had a really good one that I didn't put in the notes, um,
regarding me being elderly and angry. I feel like, but I feel like the people that are engaging with
us on Twitter, like it's just like, it feels like a real genuine connection I'm having with somebody
else in the field. Like I've, I've the last like two months on Twitter for this show have been
great. They've been the best they've ever been. Yeah. I tell you what I, you know, I, it's funny
because time dilation aside, I was unavailable for one week. Yeah. And, uh, and you and I have been
tasting, we have to stop. Have you read the book salvation by Peter Hamilton yet? No. All right.
It's a sci-fi novel about this fabulous technology called portals, which, you know, what portals are.
All right. Is this on audible? Hold on. You've already got me. But imagine all the time you and
I spent in airport security and lounges and like just waiting to get on planes and on planes.
If you have to go to Texas, I have to go to Texas. I have to go to New York or North Carolina or
wherever. You just walk on and you're there five steps, you know, in, in a funny way,
in a really backwards, funny way. This is why I prefer to drive because I know I prefer to drive
completely. It takes way, way longer, but I'm immediately applying time to accomplishment.
Do you know what I mean? Like, well, I just listen, I get to, I get to like not be groped
by the TSA. That's my whole thing. You got to get pre. What do I search for on audible?
What do I, what should I say? Salvation by Peter Hamilton. I'll just put a link in the
chat. No. Yeah. I'm getting this. So this is, this is happening. It's so good. I mean, it's,
I was so mad. I didn't know it came out this year. I was so pissed because I went to buy the second
for the second. It's a trilogy. Yeah. I mean, I'm flying out on Sunday. This is what I'm going to
listen to. So it's 19 hours. Holy crap. I don't know. I've been, you know what? I dropped my
Kindle on so many planes. I got woken up by so many people saying, Mr. Are you okay? Really?
Best thing to do is to answer. That's a simple question with a very complicated answer.
I love that. I'm going to steal that. All right. I'm going to, I'm going to put a link to that in
the fact. If we ever do t-shirts or coffee cups again, we should say code radio. That's a simple
question with a very complicated. That is good. We should do. We, I actually said a client,
although you're stealing my sales pitch here, but that's yeah, that's good. I've been thinking we
should like do like a refresh on our look to like represent like, I agree. Yeah. We got to like
represent, right? Like the show has very 2012. It's very iOS like seven. Right. So we need to
refresh the look, but I, uh, we, yeah, we should talk more about that. Um, so me and Q are good
now. I'm sorry. Oh, I love you. Are you, I'm really not sorry. Actually. It's kind of your
fault, but let's just let it go. Yeah. There's been a lot of confusion there. So if you had a
time machine though, would you still be, I got to ask, would, if you had a time machine, would you
still be using cute? If you could go back now knowing what, you know, right. That's a good
question. Um, let me think about my answer. That is a simple question with a very complicated answer.
That's so true, right? So set it right up there. All right, let's jump to Leo. So Leo writes in,
he went over to a quarter radio, Nope. Coder dot show slash contact. He might've gone to
coder radio dot red dot com. Anyways, fun fact. I own the quarter radio domain so I could just
redirect that. You should. Yeah. Yeah. Dakota dot show. Uh, he says, hello, I love the show,
even though I'm not much of a programmer, I'm 24 and I'm turning 25 next year.
And my question is simple. Oh, I know, right? And then what I love is that he's 25 asking this,
he says, is it too late for me to get into programming in order to get a job? I've
dabbled with learning C plus plus in Java before, uh, and in my free time,
but due to events in my life, never passed the learning phase to the development phase.
What do you think? Is it, is it too late at 25? That's a simple question with a one word answer.
No, it's not too early. It's super not too late. It's super, super duper, not too late. If you
were writing this email and you were 40 years old, I would say it's not too late. I would give you
the exact same answer, right? It's, you know what, figure out what you want to do, what kind of
development you want to do, what technology you're passionate about. Obviously listen to JB, so you
might be a bit of a hippie. You might, your beer may be several feet long, but whatever, right?
Like if he, if you, um, maybe I wouldn't recommend diving directly into C plus plus,
although you said John, cause it's more ways to get hurt there. But you know, the future is,
well, as last as Chris would tell you with the home pot, no, it's rest. Oh, savage. No,
but really that was, that was brutal. You caught me off guard with that one. Misa very upset with
you, Chris. I mean, I don't know. We figure out what you want to do. Java's fine. I, although I
would say if you want to learn Java, take a look at Kotlin cause that's, I mean, we have a
story in the doc for the show that we're going to ignore it like we traditionally do, but Kotlin's
gaining momentum and mind share at a rate that's shocking. Right. It's so if you really like the
Java ecosystem, I would, um, maybe some Android Devon Kotlin, Chris, what do you think? Yeah. You
know, I actually feel like we should take a moment and maybe we should just reduce expectations. Um,
I feel like we need to, we need to have some lowered expectations
because when you're outside the industry, there is this mystique about software developers,
like they have God mode privileges in life where they can spontaneously create life from
applications. It's not how it works. In fact, Leo, if you're asking these questions, you're probably
further ahead than most people that were in actually already in the software development
field. And I don't mean to be, can you pass fizzbuzz? I don't mean to be disrespectful to
people listening to the show, but many people in the software development field don't have any
idea what they're doing and they're just Googling it as they go along. And if you're going to talk
about me directly, that's what Linux unplugged was for. Yes, I heard it the other week. You know,
it's just one of those things though where like you have to learn as you go. And if you're asking
these questions and you have a passion for this field, then you may be more qualified than 75%
of the people that are already in the field. The fact that you're listening to podcasts in
a show called Coder Radio, hell, if you were just listening to that awful BSD Now show,
that would be fine too. So I think Leo is probably better off than most people. And then he's asking
if he's too young at 25. Chris, I will bet you a beer. Leo, you should email me again, email me
directly and copy crazy man over here on it. We will send you fizzbuzz online. If you pass it,
Chris owes me a beer. And if you fail it, I owe him a beer. Dude, I bet you by Linux Fest Northwest,
he has a job. Oh, that's way away. I bet you by Jan one, he has a job. Yeah. Yeah. All right. So
the next one comes in from a guy named Ryan. He says, please discuss how you evaluate open source
libraries, frameworks, or software for inclusion in your own projects, especially if those projects
are part of a production system. Thanks. And keep up the awesome work. So I think what Mike does is
he, he evaluates them from a position of fear. That is correct. I curl up into a defensive crouch.
And unless I see the following letters, I ignore them. MIT, PSD, or Apache. And it better be Apache
too. I think that we should all make those businesses fail. Now, why? I, this seems unreasonable.
Well, we just talked about my whole thing with Q right? Like, cause the LG, it's hard and confusing
and it could cost you a lot of headaches. If you get it wrong, it's negative in the freedom.
Now that's just the licensing side thing. Yeah. Let's assume that you're not as a,
let's say conservative with my patented high pitch, which it makes me sad now that I know
how many people heard that. I should grab that. Somebody needs to grab that and send it to me.
Conservative? Go grab that. I'll soundboard it. You know, I will not pull in a gem or I'm using
gem, obviously Ruby gems, but let's just use the word gem to mean package, or we could just use
package. That hasn't been updated in like a year from GitHub. Oh God, dude. Cause I'm not crazy.
Oh, I mean, I don't do anything. And we've talked about this before. I don't do anything below
version 1.0. Sure. As rule, that's an arbitrary rule, but it helps me weed out the, like, for
instance, I have a package called Kurt Kurt's JS named after Kurt's from the heart of darkness.
That's a JavaScript package. It's 0.02 or 0.01 or 0.0. No, sorry, 0.0.2. So I wouldn't even ship
that. Um, it's on GitHub if you're really curious, but yeah, that, I mean, I don't know. I do tend
to like look at the code. I mean, I don't do a deep analysis of it. Um, but again, I am pretty
conservative on this. I tend to use packages. For instance, if I'm on Cocoa pods, I don't go off the
beaten path. I use packages that are generally accepted by the iOS community. If I'm in rails,
again, I tend to try to use the bigger gems. Um, I have rolled my own gems for private use or for
private customers once or twice, but I don't think that's really what you're asking about because
that's kind of a different ball game. Yeah. I don't know, Chris. I feel like in a way, this is
like, how much risk do you take on your dependencies is really what, what the, uh, what, uh, Ryan is
asking here, man. And I, I take very little. I, yeah, I, I, uh, I would agree that that's the way
to go. I just had a conversation this morning about a, uh, a series of different exploits that
are in different, um, repositories for, for a lot of different open source projects. We're thinking
about doing like a, uh, uh, uh, an overall recap for tech snap on like, these are all open source
projects that you use that have software repositories built into them that have
vulnerabilities. And it's just, can I just stop real quick? Yeah. So how many times are you going
to mention open SSL? Is it like one for open a cell or is it, or is it, is it chronological?
How many, I mean like how many different versions and like all of it, it's just, it's really
staggering. It's, it's humbling when you look at it. And I, I don't know, I don't know exactly how
to tackle it because the argument is a little stale at this point. It's the same argument you
could apply to Docker hub, the same argument you could apply to Ruby, the same argument you could
apply to snaps or flat packs, everything, every, every development platform has some sort of
package manager, right? That's why I'm trying to not say jam, but coding in Ruby this morning.
Yeah. Yeah. I, I know, I know. And West put it in a really good way. He's like,
right now we're still in the ascent of all of these platforms where they are trying to solve
a problem. They're optimistic. They're enthusiastic. They're, they're really pushing forward and it's
the ascent, but there will be a reckoning. There will be a winter where all of this comes due. And
the sysadmin, I don't know, it's not even the sysadmin. I was going to say the sysadmin in me,
but really it's the, maybe it's the, maybe it's the, maybe it's the sysadmin, but I don't know.
Maybe it's the, maybe it's the pen tester. Maybe it was the security auditor, whatever it is. Like
there's a part of me that is getting extremely anxious by all of the software that is built
on what feels like, if you'll excuse the cliche, a house of cards.
Yeah, I feel the same way. I wish in fact, one of us disagreed, but.
Yeah, I know, right?
I, I have come to the point where you gotta remember I, I've been doing this on a limited
number of platforms for a long time, right? So for instance, when I didn't like what happened to ASI
HTTP, which was a great networking platform on iOS back in the day, and we're going back to like
2010 here, I wrote my own called MD networking. And I used that for several years until Alamo
fire came out or actually wasn't even called Alamo fire. Alamo fire is the new version. It
was called AF networking, but I, I really don't like to have a bunch of little dependencies,
right? I just, I don't trust it.
Mm-hmm. Yeah. Yeah. And you get bit in the butt a few times and, you know, you develop that,
that persuasion. Ryan W writes into the show. He says, hey guys, great show. I started listening
a few months ago and loved the show. Finally, someone I can talk nerd with. He says, I just
wanted to provide some insight on the part of Coda radio about how Red Hat employees felt
let down as they didn't find out about the-
Somebody said Red Hat, take a shot.
I know, right? As they didn't find out about the announcement until well after the announcement
was made. Well, I worked at Intel and this happens all the time. Since IBM and Red Hat are public
companies on the stock market, they aren't allowed to say anything or warn their employees. You can
imagine insider trading and media leaks that would be possible if everyone was formed ahead of
time. Intel-
I did imagine I had my Robinhood app open ready to roll. Damn it.
Intel is the first public company I've worked at. So I've always felt a little let down when Intel
makes a big announcement like the hardware bugs found this year or our CEO getting fired out of
nowhere and product announcements that came what seemed like to me as an employee out of nowhere,
et cetera, et cetera. It goes on. I think that's just life in a public company. Unfortunately,
one thing that I think of, didn't Red Hat recently denounce ButterFS and then Facebook open source
all of their code, which includes ButterFS, which they clearly are using, which they think is a
great file system? I wonder if that was IBM's doing. And I bet both companies agreed they were
in talks at that point. Just a theory. I don't know. Well, I don't think any of that about
ButterFS is true. See our coverage of Project Stratus. Yeah, I don't buy that. I mean, I don't
want to get into the file system thing, but- You know, I'll just say from a recent acquisition
that I have some familiarity with that, yeah, you do go through the majority of the process without
informing the general staff. Now, in the case of the situation that I was familiar with, the general
staff had a solid 30 days, heads up, and nobody seemed to leak it. It did actually leak the morning
of the announcement, which was delayed by a week because I was in the hospital, not that I have
direct experience. So the company knew for a solid five weeks, like all staff knew. What kind of a
JB? Yeah, I am. Yeah, we all knew. Well, I had to let you guys know, of course. I didn't want to
surprise you and like- Well, I spent a month not making fun of Linux hippies. I thought I was
telegraphing that. I didn't want to get fired immediately like that, geez. So there are obviously
different ways of handling those kinds of announcements, and it changes as the company
scales. But I'm not, I don't know, man. I feel like the Red Hat thing was still a bit rushed,
like the staff is the number one asset of that company. And so if you piss them all off and they
leave, you've basically devalued the company. So you've got to handle that. Yeah, I mean,
you know, I have nothing nice to say about the Red Hat IBM thing. Not that this show has ever
been nice, but I feel like it's almost a waste. Now why? IBM is a bad company doing bad things.
Really? Really? Isn't this them? What about them seeing the light? No bullshit.
I will eat my hat if domestic and high wage country Red Hat employees don't get whacked.
What's your timeline here? I don't know what my timeline is. It all depends on the... See,
I am not a finance guy. It all depends on the financial machinations and contracts and things
like that. I just... I don't know. I knew some people who used to work for IBM. I've seen what
they can do when they decide... You know, IBM is effectively a consulting company.
And I have no disrespect for some of the great work they've done, Watson, things like that,
but they're bread and butter straight up consulting.
And sales, yeah. They're basically an offshoring shop,
which if you're a long time listener, you know I'm not a big fan, though I've learned to make
my peace. I will tell you... Can I take a side tangent here? Always. Always. Okay. So Disney...
I live in Florida now. Disney had a very large IT and development shop down here. It was there. It
was in-house. So it was Disney, whatever they called it, right? Cool. And they did what was
called in the papers as pulling an IBM. They fired all the Floridian workers and offshored everything
to India and the Far East. They framed it as pulling an IBM. The local news... Well,
you got to remember... I'm in the South, buddy. Yikes, though. That's... Yeah.
It's... And I have to say, that is not good for a tech community in any local area.
So I hope IBM is as good as their press release. That's all I'm going to say on it.
Wow. Wow. I don't know. I thought you'd be all on board, Mr. Business, Mr. Capitalist.
I thought you'd be all on board with this. I think you should rewind to 2014 and tell
me exactly how I feel about it. By the way, if you're a new listener, I urge you... What year
was Swift released? I urge you to listen to that WWC episode. We should do more live shows just
in case that happens. No, I don't think we should. In fact, I don't... I don't know, man. I agree
in one way, but the other way, it's like a cornerstone of these shows. We should...
I mean, you're Mr. Numbers today. I have to imagine that's one of our more popular episodes.
You know, I don't have numbers on that one. That is a good question.
I can tell you, I got a lot of interesting... And when I say interesting, I mean,
you know... Career ending.
Whenever you have an episode where someone can email you and say that you're a rapacious
capitalist who only cares about himself, and then another one can say that you're a communist hippie
who hates progress. You did a good episode right there. You hit a good mark. I think that we could
all make those businesses fail. That's a two RMS... Yeah, that's a double RMS.
So if you haven't heard it, say that I was a little surprised and upset by Swift.
Let's just go with that. Yeah. All right. Well, bringing us back to the end of 2018,
I have to ask you, what are you going to do? What are you going to do to make sure that 2019 isn't
yet another year where you struggle with hardware? Because I got to be honest, I think I'm pretty
much there, man. As of like three months ago, I think I landed on my ideal hardware setup.
I haven't been on this show bitching about my hardware setup. And the recent discussion I had
about the iPad Pro really only augments what I'm already doing. But you, on the other hand,
just burned through a couple of laptops and your prospects are looking bad. I just want to say for
the end of the year episode this year, I want to go through every machine I've destroyed this year.
Yeah. We should have some heart music underneath. Like the end of the Hunger Games where they fire
the cannons every time someone dies. Yeah. I currently do not have a laptop because of
time dilation, but when you hear this, I'm almost sure I will have a MacBook Pro. So I did acquire
a System76 Aurex when I got back to Florida. Thank you time dilation. And I have been reviewing it
and I do not like it. It is not a bad machine. It is not appropriate for my very heavy travel
schedule. All right. Back it up, back it up, back it up, back it up, back it up.
So what's the price range for this system?
According to the Fifth Amendment of the United States Constitution.
Oh really? You don't want to say because you're embarrassed how expensive it is.
It was, I was in MacBook Pro territory. Holy. It was. How much RAM? How much RAM?
32 gigs. Oh. All right. So I could just tell you, I tweeted it out. So it's not like it's a big deal.
Ah, geez. I got to go on my own Twitter. That's like, see, going on my own Twitter is like the
morning you wake up with a bottle of Hendrix next to you and you're like, oh no. And then all of a
sudden it's all Kara Swisher just right down the damn line. It really is. It's crazy. We're never
letting that die. You and her. We just can't. Although we agreed. Uh-uh. We got along. Yeah.
Recently it's been nice. I got to say. It's gotten pleasant. All right. So I have a problem here
because I don't use Twitter very much. Like looking at people's feeds other than replying.
I thought I posted a picture. Can I just link to that? Yes. Oh, here it is.
I conveniently didn't include the price. Hold on. Chris and Mike get old on Twitter real quick.
Let's see. Let me see. So it's a, yeah. How much is it? I just, I like how Coyote thinks Mike
802 was me. It is not me. No, no. I like that they're fighting though. He's fighting. He's
fighting like it is you. Oh, come on. Tell me the specs and let's see if I can guess it. And then
you tell me how close I get. All right. I'll just read it. Okay. Papa Wesley. That doesn't matter.
Right. Six a gigabyte GTX 10 60 with a 12 80 CUDA 15.6 mat 10 ADP. I did not go for the 4k
4.1 I seven blah, blah, blah. 12 friends. You went big on that. Oh, did I go big, Chris? Uh,
32 gigs. It was $30 off. I just want to say that, uh, 500 gig NVME $25 off, no additional M2 drive
and a 1.1 terabyte 2.5 SSD. Hmm. Huh. That's tricky. So you upped the CPU and you up the
storage and you compromised on the screen is what I'm hearing. Uh, actually on Linux, I,
I actually prefer the, uh, the map, uh, the 10 80 rather, but I mean, from like a price standpoint,
it's a compromise. Yeah. The 4ks sucks on the next, but we can keep going. Yeah. Yeah. So I'm
going to guess, um, so you said 512 MVNE 32 gigs of Ram 4.2 gigahertz. I seven 15.4 inch 10 ADP
display. How you didn't say, but remember prices, right? Rules here. Okay. I'm going to say,
I'm going to say $2,200. How did you just configure it? No, no. I just totally $2,232.9.
I brought up the receipt. Yeah. That's the sign. We buy too many computers, dude. I was like,
did he just like go into the thing and build it? Yeah. That's a bad sign. That's not a good. So
that's not something to be proud of. So I have no idea what's going on in the chat room,
but we're just going to ignore it. So I'm going to do a quick review of the Oryx pro people who
yell at me and read it every week for talking about hardware. Now that I know that you're a
vast minority of listeners, which Chris should never have told me, we're going to do this all
the time. Uh, it is a great machine. I actually like it a lot. Even it is not appropriate for me.
And let me tell you why I am not a hundred percent developer anymore. Oh, oh, here we go.
Right. I am half a sales guy because I have to travel as we know much of the chagrin of lady
Angela all the time, whether I'm driving somewhere else in Florida or flying to Texas or New Jersey
or Pennsylvania, wherever I'm going. Right. I need a machine that ha that is small enough that I can
fit in a briefcase and has battery life. That's long enough that if I get in a bind and I don't
have good access to a power outlet, I can function for at least like five or six hours. Yeah. And
that is unfortunately fairly common. Like you can even get unreliable power when you're traveling,
like that the whole rain, the plane may not have a plugin at all, or like you got to unplug at
certain points in time or you get a seat when you're waiting to board that doesn't have a plugin.
I mean, you know, last week we talked about, um, you know, my difficulties and travel with delays
and whatever. This was, this is the thing that pushed me over the edge. In addition to me frying
out my Gallego pro. So you, you, you kill a Gallego pro and your, your thought process is
I'll go order an Oryx. Have you ever noticed that I drink a lot? I'm half kidding. That would make
some sense. Yeah. So, okay. Longtime listeners know that I've had two perverse dreams pro level
tablets, which cost me $40,000 and laptops as desktops, but also with the battery life of
ultra books that has cost me. Actually, I think we're almost tied at this point. I think we're
getting there. The laptops are getting there. Yeah. I mean, I mean, to be fair, like, so when
you own a small business and you've got contractors and you've got employees, there's never really
like a wasted computer. I'm not trying to give you an excuse, but I'm just the irony. I am not
actually going to return the Oryx. It's just going to be given to a dev who works here. Yeah. Right.
Yeah. So it's like, it's not that it's, it's not, you can't say that it's money well spent,
but it's not a total loss either because now somebody else on your team has a new computer.
Right. So like, that's, I'm not saying that's how I justify it, but it's a factor. It is. And also
the tax write-off is a factor as well. Well, yeah. I mean, let's not go into that, but I mean,
you know, Chris, this has been a rough journey for me on this whole hardware stuff. It has. Yeah.
I really wanted it to be the case that I could buy one laptop
that would have the expansion capabilities and do everything I need.
And that's just not the case. Right. It's just wrong. Yeah. So I had to read.
You're crazy. You're wrong. And the answer is right in front of you and you just don't see it.
All right. Tell me what it is. No, no. I mean, I don't want to interrupt. I want to hear what
you did, but then I'm going to tell you how wrong it is. I can tell you what I did. I ordered the
Oryx because I was frustrated that my Gallego was dead. Sure. And, you know, I wanted a laptop.
I've been happy on Linux. The other the only other real alternative for me is a MacBook,
which tweet me tomorrow. I don't know. I mean, my Gallego was dead. I gave away my MacBook Pro
as people listen last week show now. So what option did I have? Are you going to tell me
about the USBC daisy chain dongle lifestyle? I am. Oh, get out of town. No, no, no. I am
going to tell you about it. I'm going to tell you about it. And you need to listen, son.
Now, I understand. OK. Yeah. It's not an intervention, though, right?
No, it is. It is. OK. OK. Let me hear it then. I mean, I appreciate that both you and I are
scheduled to attend a System 76 event in Denver, Colorado. And what I'm about to say, I don't I
don't think I don't think. Well, I'm not. Yeah. Yeah. No, you were going to. But now that I was
going to. But you can't weddings. And I don't think they appreciate any of it. No, no, no.
So here's the thing. You got to you just got to wrap your head around Thunderbolt three,
son. You just got it. You just got to embrace Thunderbolt three. So let me tell you something.
I got the iPad pro now, and that's where I have shunted all of my electron based application
workflows to the iPad where I have native applications and I have 24 hours of battery life.
Then on the old laptop, I have gone with a Lenovo ThinkPad T480 that has a Thunderbolt
three port and attached to that Thunderbolt three port. Brace yourself. I have an NVIDIA
GPU Lenovo doc. Oh, my God. You're going external GPU. I got an external GPU, baby, with two
monitors. Sick bastard. What are the specs on the GPU? Well, it's nothing. It's a GTX 1060,
I think. I mean, it's not it's not like it's not a blow your face off graphics.
But it means when I when I take the laptop and I unplug it from that Thunderbolt three cable,
I've got Intel everything and I've got like eight to nine hours of battery life in a Linux machine.
And it's a 1080p display. I give you that. But I've got Ethernet built in. I've got USB-A. I've
got USB-C. I've got Thunderbolt. And I have got one of the best keyboards I've ever had in a computer
ever. It is a great frickin keyboard. And whenever I come back to my office, I plug in. Bob's your
uncle. I've got a GPU. I've got two extra monitors. I've got a couple of USB devices. I've got some
big speakers and I'm good to go. And if I need to do something on the NVIDIA graphics, it's all
built in. The NVIDIA driver just detects it. I switch over from the Intel stuff to the NVIDIA
stuff. And Richard's my uncle. I'm off to work. And it it really is. I mean, it's just it's so
much it's so much simpler than what you're trying to get at. You are going at this from a 2002s
perspective. And in 2018, you get yourself a tablet that runs iOS, which iOS equals mainstream
applications. I travel like a maniac right now. That's one of the reasons we're even recording
right now is because as we record this, I'm in the air. And well, I mean, as it releases. So I
book all of these flights and I book where I park my car, the lot that I park my car at. I book the
rental when I get to Texas. I book the hotel. I book the flight. I book the lounge. I book
the food I want to eat on the flight. All of it is done with apps, not a Web page, not a program
with a Web, with a with an app that is probably a Web app inside an app, to be honest. But it is
an app. And I do all of that with my little toy computer that doesn't hook up to Thunderbolt,
that just does those things, it runs those proprietary service specific applications.
And then on my computer, where I can run anything I want, I have a Lenovo ThinkPad T480 that is
pretty powerful. It's got 32 gigs of RAM. It's got an i7 mobile processor in it.
It's got a terabyte NVME drive and a 1080p screen with, like I said, one of the best keyboards I've
ever used in a computer. And then if I need more than that, when I'm sitting down at my desk,
I hook it up over Thunderbolt 3. I go into a dock, multiple monitors, one of them is horizontal,
one of them is vertical, and I got an NVIDIA card built into the damn thing.
And I'm hooked up to Ethernet. And what you're trying to do, where you're trying to put all
the power in the laptop, it's never going to work, my friend. You've got to break it up.
But don't you have like, wait, wait, wait, wait.
It's never going to work.
No, I know it's not going to work. So my answer is tower,
travel laptop with good battery life, right?
Yeah, that would work. That would be great. That would also work.
So it's like Linux power tower, MacBook, or MacBook Pro.
Yeah.
That seems like the answer.
You're not including the tablet in there, though. So I think-
Well, and the tablet. I mean, the tablet is, ironically, I don't mention the tablet. The
tablet's what I use probably most of the time, right? If I'm tapping at an email, whatever.
Right. Or booking a flight.
But every once in a while, I need to like make a build on the fly or like SSH. Although,
ISSH we talked about last week. So things are changing. I will give you that. I just don't
feel like I'm there yet for the iPad to be my travel.
No, no, absolutely not. But I think trying to buy something like the Oryx Pro, it's just-
It was the wrong thought process for me. Now, if you just like want a laptop to move around
rooms, but you basically work at home or you work in an office, I actually think it's a great
dev state. Compiling, spoiler alert, we're doing a follow-up product to Alice. Compiling that on it
was really, really, really fast, but it doesn't have good battery life. At least not. And it does
have a clever thing where you can switch from Intel to the Nvidia card, which does improve
your battery life, but it's not enough for someone who travels like you and I do, I feel like.
Yeah. If you're moving from one room to another room, if you're doing a 30-minute meeting with
your laptop, it's great for that. If you have a power cord at your desk at work and you have a
power cord at your desk at home and you're moving your laptop between work and home, it's good. It's
great. It's great for that. I say that as I have an Oryx and a Bonobo out in the other room right
now and they're both hooked up to power. This is one of the weird situations where the Oryx
is a great machine for the people who work for me, but not for me. Because I'm the only guy who
actually goes on the road into the sales right now. Yeah. I mean, for me, I feel like you're
still not quite... I'm not hearing the gospel. You're not wrapping your head around the good
word of Thunderbolt 3. Well, so the thing is, is you invest in one dock and then you have multiple
machines that take advantage of that singular investment. So not that I emailed the Apple rep
that works with me during recordings, but I asked him to spec out and quote out a 15-inch Mac Pro
with a Radeon card. Is it that you're telling me that I should go... And I prefer the 13-inch form
factor for any laptop, frankly. In fact, the Gallardo... When you're in a hotel room, when
you're on an airplane, when do you need a video card? Have you ever needed a video card in those
particular instances? Well, there was that one time me and you were in that hotel room that we
don't talk about. Yeah. That thing is GPU accelerated for Intel as well. I was... Wow.
Jeez. Hey, all right. Hey, first-person VR virtual porn is extremely GPU intensive.
It's true. We've established that we've never actually met, so...
Actually, have we said that on air? We did on air. We did on air on the last show.
Well, I thought we did. That might've been pre-show for all I know.
Oh, geez. I know. That's why people got to show up over at jblive.tv and listen.
No. You actually make a tremendously money-saving point here. When I am traveling,
I am effectively a sales guy. I need to be able to run the software, but I don't necessarily
need to be able to build everything. You're in ration mode, in a way. You're just surviving.
Am I a MacBook Air customer? Well, no. You're an Intel video customer. Think about that,
because you can take a machine that is basic graphics with a good processor and a good amount
of RAM, and then when you get home, you plug it in over Thunderbolt 3, you got a nice GPU,
you're good to go. And it's working really good on Linux. I don't have a lot of experience with
Windows or Mac OS, but on Linux... It's terrible. It's terrible on Windows.
The only tip I give you on Linux is to make things really smooth is
is plug in the dock when your laptop is powered off and boot up that way.
So you don't... I mean, this is nothing to do with code radio, but it's just a tools episode.
You don't experience any latency with GPUs over USB Thunderbolt?
Well, no, it's not.
USB-C Thunderbolt.
So Thunderbolt 3 is a PCI connection. So the video card is on essentially like a PCI 4X
lane, which granted isn't 16X, but it's still better than what...
I thought it had like less throughput than a regular PCI Express.
It does, but it's still on the PCI bus. So it might be 2X or 4X depending on the laptop,
but it's still better than what the integrated graphics is.
It's nice. It even accelerates just the built-in screen. So even if I didn't have external
monitors, my built-in screen gets the graphics. It's doing round trip. There's enough bandwidth
that it can send the stuff to the GPU and the dock and then send the results back.
And then the Intel card must be doing some sort of buffer pass and it's just dumping
it on the screen. And I am able... Even on my built-in screen, I can take advantage of external
graphics.
So the specific use case I was thinking about and leaking from the top five here,
compiling ML.net on a laptop on the road, if I need to change something.
I guess you could always bring... So in the case of the Lenovo graphics dock, it is the
same size of an average Thunderbolt 3 dock. It's pretty small, but there's some huge docks,
like Blackmagic makes one.
The pain of doing that on the Galego was... I mean, it was significant. Because the Galego,
like you were saying, it's an i7, but it's an Intel i7. It was a serious process.
Yeah, yeah, yeah.
But on the Oryx, I mean, this is where I would be positive on the Oryx. It was lickety-split.
Right. That was the idea, right? Is you take advantage of the built-in. So I could... This
graphics GPU dock that I have for my ThinkPad, it would take up as much space in my bag as
an audio interface. I mean, it's no big deal. It's totally packable.
That's what you're saying.
I don't think you need to, right? I mean, I don't really think you need to. If you go
back to your desktop idea, you could also just remote desktop into a machine that has
a great built-in GPU. But then you need good remote connectivity. Which, I don't know, man,
that's tricky, like when you're doing like a...
Well, I always carry a MiFi, so it's like not...
Yeah, but it matters more like, okay, the demo is up, you got to do the demo, and you
got a few minutes. There's sometimes where it's really, really, really, really nice to
have that processing local, especially if you're on a deadline, if you're about to give
a demo. That's where having the local processing really matters.
I mean, once or twice a year, I get into these situations where I'm doing a demo, and there's
an error, and I notice it the night before the demo, and I want to fix it, recompile
the whole thing.
But the night before, you could do remote desktop.
Right.
So yeah, that might be a solution that works for you. You got to embrace it. You got to
think about it. You got to change the way you're thinking about this, because this isn't
going to... You can't go through 2019 like this. You can't do it.
This is a coder intervention. Somebody bang suggested.
You got to.
All right.
Yeah.
All right. Let's be positive. How about we go to the GitHub top programming languages
chart?
Oh, yeah. Where is this now?
The link from the show notes, 334.
I'll tell you what, you're talking about... Are you talking about the DigitalOcean survey
that they did?
I'm talking about the GitHub one.
No, there's no GitHub one linked in the show notes.
Yeah, there is.
No, there's not.
I'm looking at it.
No.
You're not in the right doc, buddy.
No, I'm in 334. What are you talking about?
I'm in 334.
Yeah. Yeah, I don't see you here. You're in...
I don't see you here.
This is the part of the show where Mike live slacks Chris the doc.
You got to give us credit though. For 334 episodes, we've actually never had that problem.
We've been working on a doc this whole time.
This whole thing, really, this is how you can tell how closely we follow the script on this show.
Yeah. That would be the doc that I just sent you.
A little sauce has been revealed, but it's for the better, I think.
I think the audience should know. Well, they should know.
Well, anyway, while Chris opens the doc, so the top three fastest growing languages
by contributors as of September 30th, 2018. Number one, guess.
In fact, it's good you didn't see the doc, Chris. Guess.
Oh, yeah, you're right.
I would normally say, if this was like three years ago-
It's not Rust. I may help you. It's not Rust.
No, I would have said that last year. I would have said that last year.
Okay.
But if this was three years ago, I would say JavaScript. Sure.
Nope. Not even top 10.
If this was last year, I would say Rust.
This year, I got two contenders in mind. And I don't feel-
Tell me the two before you make a pick.
All right. I don't feel strong about either one of them.
It's Go and Swift.
Go is in the top 10. Swift is not even.
Really? Really?
Kotlin.
No. Really?
Absolutely. According to GitHub, it has 2.6 times the contributors over last year.
Kotlin coming in for the win by a big margin.
Kotlin coming in hard. Before that, number two is HCL, which is a specialty thing.
Sure. That we don't cover here.
No. TypeScript. Pretty popular though.
Fucking TypeScript. Yeah.
I mean, I'm sorry. Linuxing TypeScript. Ah, geez.
PowerShell, though, number four, and then Rust at number fricking five.
All right. I have a bone to pick with number four.
Oh, yeah?
PowerShell scripts are effectively C-sharp scripts. That's-
Yeah. Fair enough.
It's, yeah.
Hello.
And number five-
I mean, if you're counting PowerShell scripts, then you better count Bash scripts.
As what? C?
If you were counting Bash, Bash would be number one on this list.
Oh, sure. All right. Fair enough. Yeah. I mean, their list is a little weird.
Yeah.
What I thought was really interesting here is though, top programming languages by contributors,
right? So the list we just did was top by growth.
Right? Who had the biggest growth year over year.
Yeah.
This is absolute top. Give me your number one. And you had it right last time.
Oh, JavaScript.
Dominant. Dominant. Yeah.
Number two.
Java.
Damn. Number three. Number three, we had a switch. We actually had a switcheroo here.
The current number three.
TypeScript?
Python. But who did it dethrone?
PHP.
PHP. Yes. Savage. All right. The current number... Holy shit. Current number... This
is a very confusing chart. Current number five. And we'll stop at number five. Number
six is C sharp. So it's not C sharp. Number five.
It's either PHP or TypeScript.
C++.
No. Oh, I didn't even get close.
And I attribute that to IoT. I think there's a lot of C++... There's been some sort of
renaissance.
Okay. Yeah, I could see that. Yeah. That makes sense.
TypeScript is number seven?
Okay.
And Objective-C.
Yeah.
Objective-C.
Oh, yeah? How's Objective-C doing? Good, right?
Things have been better.
Solid. It's doing real good.
Oh.
You know, we've hit some hard times.
Yeah. It gets even worse when you look at people that are contributing to the projects.
Like, obviously, Objective-C is not even on the radar.
It's so much worse. Objective-C has the only... All it has is legacy now, right?
Yeah.
Yeah. All right. And we'll do the last one.
Okay.
Top programming languages by repos created from 2008 to 2018.
Give me your number one.
So from 2008, it's got to be JavaScript.
Yes, JavaScript. By a mile.
Yeah, yeah.
Next.
Next is going to be... Next is going to be a gap, right? Because, like, nothing compares to
JavaScript.
There's the Grand Canyon between one and two.
Is there? Yeah, okay. Okay.
Yeah. Okay. Yeah.
You know, I'm going to say Google made the right call. I'm going to say it's Java.
It is Java.
Of course it's Java. They've had a good decade, really.
Yeah. And then going off this chart, it looks like after that, there is essentially a gulf.
After that is Python. And then way, way after that is PHP and Ruby.
Didn't really expect to see much else there.
But I don't know. We'll link to it in the show notes if you want to check it out.
Coder.show slash three, three, four.
Kotlin, though, is really the standout performer, isn't it? That's the kind of takeaway.
Yeah. Yeah. For new repos created, Kotlin's definitely very quickly gaining mindshare,
is how I would put it.
Yeah. Yeah. I don't know what to make of it. Because I can't help but think about
Kotlin with the context of Fuchsia. And Fuchsia is this potentially looming
total replacement for Android. And then would the Java apps be anything more than just a
supported runtime? Would there be a totally new way to create applications? There's so
many questions.
Yeah. So I think of Kotlin more as a way to clean up legacy Java, like Spring development
and things like that.
Right.
Make it a little easier to deal with. As you know, Chris, a couple years ago, or is it
one year, year and a half, something like that, two years, I had a project. I was working,
I think, with California or something like that, where I shipped a Spring app. And it
was an old Spring app. The way to update it was to actually switch it to Kotlin. And this
was when Kotlin just hit 1.0. To make it easier to deal with, easier to reason with, and just
writing tests against it was a lot easier. This is a large enterprise scale application.
And? You just leave me hanging?
I can't tell you what it did.
Oh, really? I'm like, okay, okay.
I can tell you that rewriting legacy Java code into Kotlin made life easier for everybody.
I can tell you that the Kotlin code was actually more performing because they were on Java 1.4.
Oh, really?
So, but we were able to, by leveraging Kotlin's ability to pull in the name of Java Jars,
we were able to still leverage some of the proprietary libraries they built.
Hmm. Hmm. You secret agent. You mysterious man.
No, that's not me. No, no, no, no. That is Alan Jude. I want to make this perfectly clear.
Oh, really?
And all I have to say is Putin 2020.
Yeah, I agree. I'm on board Putin 2020 and Putin Jude. Putin Jude.
You know, this might be why my TSA pre-check has not been approved yet. Now that you told
me about the listener numbers, what are the odds that there's not a TSA guy that says,
I don't know about this guy. Maybe we should make him take his shoes off and open his back.
Just in case for some Russian propaganda.
You never know, Mr. Dominic. In fact, if you have to run from the law,
there's only one place people should follow you, and that's probably besides coder.show
slash subscribe, but also.
At Dominic.
Yeah, there you go. There you go. You got it. You got it. I'm at Chris Elias, and those
adventures, like I talked about, are all linked and described at coder.show. That's the main
resource in this episode. Coder.show slash three, three, four. Thanks so much for tuning
this week's episode of the Coder Radio Program. We'd love to get your contact at our feedback
page. I don't know, you do the math on that. And we'd love to have you join us live, jblive.tv,
Jupiterbroadcasting.com slash calendar for that lifetime. Thanks so much for joining
us. See you right back here next week.
