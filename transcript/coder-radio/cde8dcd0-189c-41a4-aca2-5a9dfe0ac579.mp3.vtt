WEBVTT

00:00.000 --> 00:15.680
This is KOTORadio, episode 398 for January 25th, 2021.

00:15.680 --> 00:20.080
Hello friends and welcome into Jupiter Broadcasting's weekly talk show, taking a pragmatic look

00:20.080 --> 00:23.760
at the art and business of software development in the world of technology.

00:23.760 --> 00:27.480
This episode is brought to you by Cloud Guru, Cloud Guru now includes Cloud Playground,

00:27.480 --> 00:32.360
Azure AWS, or Google Cloud Sandboxes on ACG's credit card, not yours.

00:32.360 --> 00:36.000
Get certified, get hired, get learning at a cloudguru.com.

00:36.000 --> 00:44.480
My name is Chris and joining us like the established soldier in his fortress of Florida podcasting,

00:44.480 --> 00:45.480
it's Mike.

00:45.480 --> 00:46.480
Hello, Mike.

00:46.480 --> 00:47.480
Hello, Mr. Fisher.

00:47.480 --> 00:48.480
And how's the USA doing?

00:48.480 --> 00:52.520
See, I was trying to set it up.

00:52.520 --> 00:53.520
That's why I stumbled there.

00:53.520 --> 00:57.160
I was trying to set up in a way that wouldn't invoke the Jar Jar.

00:57.160 --> 00:58.280
It's always here.

00:58.280 --> 00:59.280
I know.

00:59.280 --> 01:00.280
I know.

01:00.280 --> 01:01.280
I know.

01:01.280 --> 01:02.280
I know.

01:02.280 --> 01:03.280
I know.

01:03.280 --> 01:05.920
So moving on from that, I got a new keyboard.

01:05.920 --> 01:06.920
Which one?

01:06.920 --> 01:07.920
This one.

01:07.920 --> 01:08.920
Hold on.

01:08.920 --> 01:10.220
I'm picking it up because the text is small.

01:10.220 --> 01:14.520
It is the Keychron K3.

01:14.520 --> 01:21.800
And this is a great one because it has Bluetooth or USB-C and it works on Mac or Windows slash

01:21.800 --> 01:22.800
Linux.

01:22.800 --> 01:23.800
There's a little switch.

01:23.800 --> 01:24.800
You choose it.

01:24.800 --> 01:25.800
Tell it what mode to be in.

01:25.800 --> 01:28.960
And it has really cool lighting effects just out of the box.

01:28.960 --> 01:31.520
I don't even know what I'd call this one right now, but it's rad.

01:31.520 --> 01:34.420
And the escape key lights up red, which is rad.

01:34.420 --> 01:35.420
And it's a little quieter.

01:35.420 --> 01:38.080
So it doesn't, it doesn't, you know, here, I'll do a little, I'm going to, I'll bring

01:38.080 --> 01:39.080
my mic down.

01:39.080 --> 01:40.080
You ready for this?

01:40.080 --> 01:45.800
I'll bring my mic down here and I'm going to turn off my gate and I'm going to do a

01:45.800 --> 01:46.800
little typing.

01:46.800 --> 01:47.800
Okay.

01:47.800 --> 01:48.800
This is me doing a little test typing.

01:48.800 --> 01:49.800
Oh my.

01:49.800 --> 01:51.760
You kind of get a sense for it.

01:51.760 --> 01:53.480
It's not, it's not super bad.

01:53.480 --> 01:55.780
You know, it's not, it's not like really mechanical.

01:55.780 --> 01:56.780
But it still has a good feel.

01:56.780 --> 01:57.780
It's a definite upgrade.

01:57.780 --> 02:02.840
It sounds like a great gateway drug for people ready to dip their toe into mechanical keyboards.

02:02.840 --> 02:05.520
Cause it's only like a 60% keyboard.

02:05.520 --> 02:08.880
So it just takes up so much less room in the full size keyboard that it's replacing right

02:08.880 --> 02:09.880
here.

02:09.880 --> 02:11.800
So I've gained room here in the studio.

02:11.800 --> 02:12.800
It's nice.

02:12.800 --> 02:14.880
You know, I can spread out like I was meant to.

02:14.880 --> 02:16.840
Well, we have some feedback.

02:16.840 --> 02:17.840
You all right over there?

02:17.840 --> 02:18.840
You good to get into it?

02:18.840 --> 02:19.840
You sounded a little quiet today.

02:19.840 --> 02:20.840
Oh, let's get into it.

02:20.840 --> 02:22.120
I'm ready to roll on this feedback.

02:22.120 --> 02:23.120
I don't know.

02:23.120 --> 02:24.120
We'll see.

02:24.120 --> 02:25.120
We'll see.

02:25.120 --> 02:26.120
All right.

02:26.120 --> 02:29.720
So Michael T writes in and he says, Hey, Chris and Mike, first time, long time.

02:29.720 --> 02:34.200
I wanted to call out an area of software development and activity that I don't think gets a lot

02:34.200 --> 02:36.680
of love on Coderadio or maybe JB in general.

02:36.680 --> 02:37.680
It's security.

02:37.680 --> 02:43.200
I'm a cybersecurity analyst threat hunter for a major healthcare organization and I'm

02:43.200 --> 02:45.320
writing Python and bash every day.

02:45.320 --> 02:50.120
I'm a long time Linux guy and my personal daily driver runs KDE neon.

02:50.120 --> 02:56.240
However, for security work, I found that the ultimate setup and mandated by our work policy

02:56.240 --> 02:59.280
is a must have Windows 10 base.

02:59.280 --> 03:07.040
That being said, most of my work day is spent in WSL two terminal with WSL two, maybe a

03:07.040 --> 03:09.880
little bit of team X and a solid VIM setup.

03:09.880 --> 03:14.880
This is my secret weapon for efficient programming and threat hunting at my day job.

03:14.880 --> 03:20.480
I cut through CSVs full of vulnerability data with ease, with a little bit of cut, grep

03:20.480 --> 03:21.740
and said commands.

03:21.740 --> 03:25.580
The PowerShell folks are constantly amazing, bewildered by the efficiency that I have.

03:25.580 --> 03:29.960
The Python work all takes place in VIM with the occasional ducks into VS code when managing

03:29.960 --> 03:31.160
large code bases.

03:31.160 --> 03:35.480
Essentially, Windows provides the foundation to deliver a fairly solid Linux experience.

03:35.480 --> 03:38.680
I don't love saying that, but it's really true with WSL two.

03:38.680 --> 03:43.320
I get all of my Linux peanut butter with the interoperability chocolate of Windows.

03:43.320 --> 03:46.200
Jeez, he's laying it on thick.

03:46.200 --> 03:49.800
Wasn't there some jackass like a few months ago who said that Windows 10 was the best

03:49.800 --> 03:51.800
Linux six row?

03:51.800 --> 03:53.880
Yeah, I think that was you.

03:53.880 --> 03:55.960
I think that was that jackass was you.

03:55.960 --> 03:56.960
You got me.

03:56.960 --> 04:00.560
In a way, it's it's unsettling for me to hear.

04:00.560 --> 04:05.240
I have to be honest, because this is what I convinced myself wasn't going to be a problem.

04:05.240 --> 04:06.240
It's a problem.

04:06.240 --> 04:11.160
He says it's just one guy's security work situation, but he'd love to hear more security

04:11.160 --> 04:13.400
stories on the network in the future.

04:13.400 --> 04:14.400
Keep up the great work, gents.

04:14.400 --> 04:16.600
Oh, it's not just one guy, Chris.

04:16.600 --> 04:17.680
I know.

04:17.680 --> 04:19.240
It's like the Robbros.

04:19.240 --> 04:20.480
Tweet about it and they will.

04:20.480 --> 04:21.480
They will come.

04:21.480 --> 04:22.480
Yeah.

04:22.480 --> 04:23.480
You think?

04:23.480 --> 04:24.480
You think?

04:24.480 --> 04:25.480
Wow.

04:25.480 --> 04:26.480
I mean, that's a powerful collective of people there.

04:26.480 --> 04:28.820
You could almost call them a demographic, if you would like.

04:28.820 --> 04:32.320
You could almost say that they're getting the best of both worlds.

04:32.320 --> 04:36.880
Yeah, which is a more apt analogy than one might think at first.

04:36.880 --> 04:40.640
Danelle writes in and this he's hoping to help you out with your terminal woes because

04:40.640 --> 04:44.120
I saw you tweeting, which I'd like to get an update about here in a minute.

04:44.120 --> 04:46.880
But Danelle writes and he says, hey, guys, I've been hearing y'all talk about terminal

04:46.880 --> 04:49.040
emulators for Mike on the Mac.

04:49.040 --> 04:54.560
And I don't recall anyone bringing up Accelerity, Acclarity, Accalosity.

04:54.560 --> 05:00.740
Anyways, it's a terminal that's written in Rust and is GPU accelerated.

05:00.740 --> 05:05.920
And it can run all the platforms Mike might like to use as Mac or his system 76 systems.

05:05.920 --> 05:08.600
I just wanted to toss another item into the conversation.

05:08.600 --> 05:09.600
Thanks Danelle.

05:09.600 --> 05:14.520
So I went and looked it up, Alacricity, I don't know, A-L-A-C-R-I-T-T-Y.

05:14.520 --> 05:15.520
It's called Alacrity.

05:15.520 --> 05:16.520
I've actually used it.

05:16.520 --> 05:17.520
Oh, yeah, of course, because TTY.

05:17.520 --> 05:20.960
As I just read it out loud, I, yes, Alacrity.

05:20.960 --> 05:24.400
I have heard of this now that we actually say the word and the name correctly.

05:24.400 --> 05:26.720
And I have it installed on my system.

05:26.720 --> 05:27.720
It's nice.

05:27.720 --> 05:28.720
It's nice.

05:28.720 --> 05:29.720
It's nice.

05:29.720 --> 05:30.720
I have it installed on the lemur.

05:30.720 --> 05:33.960
I haven't sold it on the Macs yet.

05:33.960 --> 05:34.960
I like it.

05:34.960 --> 05:35.960
It's fine.

05:35.960 --> 05:39.880
It's very fast and it can do some pretty fun stuff.

05:39.880 --> 05:46.640
It has like weird, I don't want to say graphical features, but I guess I do want to say graphical

05:46.640 --> 05:47.640
features.

05:47.640 --> 05:48.640
It's OK.

05:48.640 --> 05:49.640
Everything's connected.

05:49.640 --> 05:50.640
Right.

05:50.640 --> 05:51.640
So you had me try ITERM.

05:51.640 --> 05:52.640
Yes.

05:52.640 --> 05:54.120
I could see why you like ITERM.

05:54.120 --> 05:55.520
OK, but you didn't like it.

05:55.520 --> 05:57.480
I don't like ITERM and I think I know why.

05:57.480 --> 06:03.760
I'm coming from Mac terminal, so I kind of just haven't had the fancy like split my window

06:03.760 --> 06:07.560
thirty thousand times, whatever Linux presets.

06:07.560 --> 06:10.520
And it's just not I don't know, it just doesn't look as good to me.

06:10.520 --> 06:16.480
Alacrity actually looks as good and it is definitely it is fast right out of the box.

06:16.480 --> 06:17.480
We just launched it.

06:17.480 --> 06:18.960
It's a lot more minimal than ITERM, too.

06:18.960 --> 06:20.320
Yeah, it's a lot more minimal.

06:20.320 --> 06:25.640
I mean, I. I can't say use it all the time because I have like really dumb muscle memory

06:25.640 --> 06:31.120
on both machines where I'm like, oh, you know, command terminal on the Linux by maps

06:31.120 --> 06:32.960
command to to super.

06:32.960 --> 06:33.960
It's like a brain map.

06:33.960 --> 06:36.760
He's like, when I sit in front of Mac, I use this command to do this thing.

06:36.760 --> 06:37.760
Right.

06:37.760 --> 06:41.880
And I've made them similar enough that it's they're similar anyway, but yeah, I would

06:41.880 --> 06:42.880
suggest you check it out.

06:42.880 --> 06:43.880
It is open source.

06:43.880 --> 06:44.880
It is free.

06:44.880 --> 06:48.600
It is written in Rust, which means it's superior just, you know, on its face.

06:48.600 --> 06:49.600
Yeah.

06:49.600 --> 06:50.600
That's clear.

06:50.600 --> 06:52.840
Can I actually throw in a piece of hoopla here?

06:52.840 --> 06:53.840
Break in the format.

06:53.840 --> 06:54.840
Yeah.

06:54.840 --> 06:56.560
So little sad news.

06:56.560 --> 06:59.040
The inventor of Objective C died.

06:59.040 --> 07:00.040
Yeah.

07:00.040 --> 07:03.640
And I was shocked not to see much coverage of this.

07:03.640 --> 07:04.640
Yeah.

07:04.640 --> 07:07.480
Real minimal now that you mention it, that would be Dr. Cox.

07:07.480 --> 07:11.640
We talked about in Slack really briefly, and I probably saw a few people write about it

07:11.640 --> 07:12.640
in total.

07:12.640 --> 07:13.640
Maybe maybe a handful at most.

07:13.640 --> 07:14.640
Yeah.

07:14.640 --> 07:18.240
It's interesting to me because he he actually a lot of the ideas in Objective C are.

07:18.240 --> 07:25.800
You know, this is not my usual trolling, but even if you're not an Apple developer, they've

07:25.800 --> 07:27.280
they've come over, right?

07:27.280 --> 07:29.280
They've they've come over into their languages.

07:29.280 --> 07:30.280
Absolutely.

07:30.280 --> 07:31.280
Especially the early ideas.

07:31.280 --> 07:34.960
I'm not talking about, like, you know, the recent stuff, but the early foundational ideas,

07:34.960 --> 07:39.520
all the next step stuff that a lot of that inspires a lot of what people use today.

07:39.520 --> 07:41.800
So I was a little surprised and like, I missed it.

07:41.800 --> 07:44.560
It took me a day to see it and someone had to actually send it to me.

07:44.560 --> 07:45.560
So yeah.

07:45.560 --> 07:46.560
Rest in peace.

07:46.560 --> 07:47.560
Dr. Cox.

07:47.560 --> 07:48.700
Yeah, absolutely.

07:48.700 --> 07:49.700
I want to circle back.

07:49.700 --> 07:51.360
Were you having terminal woes earlier this week?

07:51.360 --> 07:55.440
Because I saw you tweeting about having some strange ass air messages in your terminal.

07:55.440 --> 08:04.560
So code signing, even when it's Apple's application, apparently my moving my Rosetta terminal into

08:04.560 --> 08:10.500
applications instead of into applications slash utilities, yeah, violates some sort

08:10.500 --> 08:16.400
of expectation that the code signing system has and it would just refuse to run.

08:16.400 --> 08:20.840
And was there any useful air that would be produced when this happened?

08:20.840 --> 08:27.120
It's the same crash as you would get for like you built a, you know, a GM version, right?

08:27.120 --> 08:30.560
A golden master version of your own application to distribute and you were testing it as a

08:30.560 --> 08:31.760
clean install.

08:31.760 --> 08:34.720
And oh, I messed up my signing certificates.

08:34.720 --> 08:41.320
So luckily I said, what's different about terminal than any other application you would

08:41.320 --> 08:42.600
generally install?

08:42.600 --> 08:45.440
Oh, it's not in applications.

08:45.440 --> 08:50.680
Let me just delete this version, duplicate it again in applications, utilities.

08:50.680 --> 08:53.680
We put the new one in Rosetta mode and see what happens.

08:53.680 --> 08:56.920
And sure enough, that was the entire problem.

08:56.920 --> 08:58.080
Now let me ask you something, though.

08:58.080 --> 09:02.080
Honestly, did you have a moment where you were like, this has got to be an M1 bug or

09:02.080 --> 09:03.560
is this because I'm on an M1?

09:03.560 --> 09:04.560
Well, right.

09:04.560 --> 09:07.640
The whole fact that I have to run a Rosetta terminal all the time.

09:07.640 --> 09:12.720
Actually what I ended up doing was I undid that and I duplicated it and I left the ARM

09:12.720 --> 09:13.720
terminal.

09:13.720 --> 09:17.680
I just named it ARM terminal and the other terminal, the Rosetta one is just named terminal.

09:17.680 --> 09:22.160
Yeah, because I almost never want the ARM terminal.

09:22.160 --> 09:25.520
It's going to be a nice day for you when all that stuff has finally been ported over and

09:25.520 --> 09:27.200
you just don't have to worry about this anymore.

09:27.200 --> 09:28.200
That would be amazing.

09:28.200 --> 09:32.220
Honestly though, this is seemingly, unless something has changed for you, this seems

09:32.220 --> 09:37.400
like the roughest aspect of the CPU transition and it's a pretty understandable one.

09:37.400 --> 09:39.080
Yeah, it was like a 15 minute fix.

09:39.080 --> 09:44.480
I got updated shipping information on the M1 mini that's coming in for Angela and it's

09:44.480 --> 09:48.280
scheduled to be delivered at the end of this week, so I may have hands on experience by

09:48.280 --> 09:49.400
next week's episode.

09:49.400 --> 09:55.560
And are we starting the M1 action show anytime soon?

09:55.560 --> 09:58.520
That's no, we're waiting for when they update the other machines that make that supposedly

09:58.520 --> 10:00.960
rumored G4 cube knockoff.

10:00.960 --> 10:05.040
Honestly, that's going to be where I have to really exercise a lot of self control.

10:05.040 --> 10:08.760
I will be there to tempt you mercilessly.

10:08.760 --> 10:11.540
We have more to talk about on that front, but I wanted to get to an email that came

10:11.540 --> 10:16.400
in from Steve because we'd asked about home testing setups and network setups and he says,

10:16.400 --> 10:21.540
hey guys, for my home server setup, I have six Raspberry Pis shoved into a rack.

10:21.540 --> 10:25.640
It's the one from C4 Labs called the Zebra case.

10:25.640 --> 10:29.480
He has six of them in there running 2004 Ubuntu LTS.

10:29.480 --> 10:34.840
One runs Pi-Hole, one's a WireGuard server, he has Pi VPN, he has a private Docker registry

10:34.840 --> 10:35.840
setup.

10:35.840 --> 10:40.580
He has four of the Pis running as Kubernetes clusters that he's bootstrapped with K3s.

10:40.580 --> 10:46.240
The cube cluster serves as my dev lab and I also run Drone.io in a cluster for my CICD

10:46.240 --> 10:47.240
pipelines.

10:47.240 --> 10:51.500
My last Pi runs a NAS server to provide persistent storage for my cube cluster.

10:51.500 --> 10:55.820
It's been nice to build this cluster over time and expand my skills on ops and sysadmin

10:55.820 --> 11:00.000
side of things without having to worry about scaling down cloud infrastructure when I'm

11:00.000 --> 11:01.600
not actively using it.

11:01.600 --> 11:05.320
Yeah, just a side note, I completely agree with that a little bit for the Raspberry Pis.

11:05.320 --> 11:08.320
When you're doing small scale training, it's just great for that because you can just leave

11:08.320 --> 11:10.800
them running and it's a low, even power impact.

11:10.800 --> 11:15.600
He says, I've created ansible roles and playbooks to provision most of the cluster's functionality.

11:15.600 --> 11:19.280
On a side note, I'm also super glad Coder Radio is back from the dead.

11:19.280 --> 11:24.360
Should we start a Deadpool to see when Mike destroys his shiny new M1 Air?

11:24.360 --> 11:27.440
Maybe the proceeds go to an open source project of the winner's choosing.

11:27.440 --> 11:28.440
All the best.

11:28.440 --> 11:29.440
Wow.

11:29.440 --> 11:32.000
I would say probably when the update's out.

11:32.000 --> 11:34.480
That's when you start your bets because then what else are you going to do but get the

11:34.480 --> 11:35.480
next upgrade?

11:35.480 --> 11:37.000
You got no choice.

11:37.000 --> 11:40.800
There does seem to be a correlation.

11:40.800 --> 11:45.080
I mean, sometimes you got to go to a lot of lengths for spousal approval.

11:45.080 --> 11:46.760
I'm just saying.

11:46.760 --> 11:47.760
Maybe that's not a factor.

11:47.760 --> 11:48.760
I don't know.

11:48.760 --> 11:49.760
Yeah.

11:49.760 --> 11:52.820
Well, not so much.

11:52.820 --> 11:53.820
You never know then.

11:53.820 --> 11:55.960
The game's afoot.

11:55.960 --> 12:01.660
Right now with the M1 MacBook Air, it's unlikely that I would be ditching it soon.

12:01.660 --> 12:04.680
But the actual thing he wrote about the Raspberry Pi, yeah, that's amazing.

12:04.680 --> 12:08.800
There are so many, like, just dumb uses I have for Raspberry Pis.

12:08.800 --> 12:11.880
Honestly, they're amazing and they're so cheap.

12:11.880 --> 12:12.880
Yeah.

12:12.880 --> 12:15.040
I run a lot of great services on them at home.

12:15.040 --> 12:19.560
Our last email of the week comes in from Javier and he has some thoughts on why we don't see

12:19.560 --> 12:20.560
more native Linux software.

12:20.560 --> 12:22.560
He's a big fan of the show and he's a QA member.

12:22.560 --> 12:27.680
He's been listening to JB since 2008, which is mind bending.

12:27.680 --> 12:31.240
And he's been getting deep into software development with Qt and realized a few reasons why we

12:31.240 --> 12:32.680
don't see more native Linux software.

12:32.680 --> 12:33.920
I'm curious to hear your thoughts on this.

12:33.920 --> 12:39.160
He says, number one, there's not really any good quality tutorials, books or video resources.

12:39.160 --> 12:41.780
And what's out there is not necessarily easy to find.

12:41.780 --> 12:46.160
Number two, some of the best resources are hidden away in conference talks that people

12:46.160 --> 12:47.160
don't know about.

12:47.160 --> 12:53.000
And number three, there's no massive marketing efforts in promoting these frameworks in various

12:53.000 --> 12:54.000
local areas.

12:54.000 --> 12:57.240
And that last one I thought was kind of like marketing the frameworks.

12:57.240 --> 13:00.080
But I guess, I guess there is some truth to that.

13:00.080 --> 13:04.280
Like there's a lot of really great free frameworks out there that nobody knows about.

13:04.280 --> 13:07.800
Yeah, I would say the Vala stuff is pretty interesting.

13:07.800 --> 13:12.160
This is going to be divisive, but I think the folks doing it the best are actually the

13:12.160 --> 13:15.840
elementary OS people, Cassidy and I think Daniel.

13:15.840 --> 13:16.840
Sure.

13:16.840 --> 13:17.960
They put a lot of work into that.

13:17.960 --> 13:19.280
They put a lot of work into it.

13:19.280 --> 13:21.040
They've made an app store that's easy to deal with.

13:21.040 --> 13:23.320
They have a blessed framework and you can do other stuff.

13:23.320 --> 13:25.800
But they have a blessed tool chain, which is Vala.

13:25.800 --> 13:31.240
They focused on some of the getting your feet wet stuff that, you know, I felt like the

13:31.240 --> 13:34.120
Ubuntu Software Center never really did.

13:34.120 --> 13:39.360
Qt is probably the best option, but I don't see a lot of Qt development that's not like

13:39.360 --> 13:44.840
enterprise development for like QNX, is that the weird car OS?

13:44.840 --> 13:45.840
Oh, yeah.

13:45.840 --> 13:46.840
Right.

13:46.840 --> 13:49.900
Or some kind of desktop software that you just need for multiple platforms.

13:49.900 --> 13:53.800
He kind of says that maybe what we ought to do is ask the community, and this is probably

13:53.800 --> 13:57.800
worth trying, is we ask you guys out there listening to the show to send in what you

13:57.800 --> 14:01.020
consider are the best resources to learn different frameworks.

14:01.020 --> 14:07.160
Maybe people could send links to videos for GTK, Qt, Flutter, PyTorch, TensorFlow, others,

14:07.160 --> 14:11.840
and maybe your favorite web and backend frameworks to use with electrons and maybe up on Linode.

14:11.840 --> 14:13.000
And then we could feature them here on the show.

14:13.000 --> 14:14.920
And it's not necessarily a bad idea.

14:14.920 --> 14:17.280
I think that could work at a small scale.

14:17.280 --> 14:20.640
I would be really interested to know what the audience works with that we don't mention

14:20.640 --> 14:21.640
much on air.

14:21.640 --> 14:26.280
And I'd love to just a brief explanation of how you use it, even if it's a high level.

14:26.280 --> 14:30.160
And if you went to coder.show slash contact and sent that in, that could be a good first

14:30.160 --> 14:31.160
step.

14:31.160 --> 14:32.720
And then maybe we go from there.

14:32.720 --> 14:36.760
There's probably a lot of good resources for learning too, which we'd love for you to share.

14:36.760 --> 14:41.940
I think though, you know, you look at something like Qt, they keep screwing the pooch when

14:41.940 --> 14:45.080
it comes to how they interface with the community.

14:45.080 --> 14:52.040
There's change now where to get access to older versions past Qt 6, you have to pay.

14:52.040 --> 14:57.480
It's untenable and the community is just going to fork the latest Qt 5 series for as long

14:57.480 --> 15:03.620
as they can until they can migrate to 6 after 6 has had several minor releases at a minimum.

15:03.620 --> 15:08.480
And it's those kind of actions that I think continuously turn people off is those kind

15:08.480 --> 15:10.320
of shenanigans with the licensing.

15:10.320 --> 15:17.280
And then GTK is an extremely opinionated desktop toolkit that really works best on the GNOME

15:17.280 --> 15:18.280
desktop.

15:18.280 --> 15:22.320
Of course you can bring it to other platforms, but that's really where Qt's a lot stronger.

15:22.320 --> 15:26.720
Flutter, you know, I've been wondering if we should have a conversation about it.

15:26.720 --> 15:31.320
It does come up and I'm wondering if the acceptance level is going up.

15:31.320 --> 15:34.880
So I'd be curious if anybody out there has any active Flutter projects that they could

15:34.880 --> 15:35.880
share some insights.

15:35.880 --> 15:37.360
It'd be a good way to go.

15:37.360 --> 15:40.440
Yeah, I was excited for Avalonia for a while there.

15:40.440 --> 15:43.760
I would be interested to see what people say, but I think we're going to get a lot of like

15:43.760 --> 15:47.040
hobbyists doing like GTK and stuff and that's totally cool.

15:47.040 --> 15:50.080
But I think the people working in the enterprise are just like, yeah, we use Qt or we use

15:50.080 --> 15:51.080
Electron.

15:51.080 --> 15:52.080
Right.

15:52.080 --> 15:53.080
That's that's fair.

15:53.080 --> 15:54.080
Well, I would like to know that, too.

15:54.080 --> 15:56.240
That'd be valid feedback as well.

15:56.240 --> 15:58.640
That would be coder.show slash contact.

15:58.640 --> 16:03.480
Let us know because I'd love insights on that as well.

16:03.480 --> 16:05.060
lino.com slash coder.

16:05.060 --> 16:08.680
Go there and receive a $100 60 day credit towards your new account.

16:08.680 --> 16:13.200
Linode is the largest independent cloud for developers and a $100 60 day credit is going

16:13.200 --> 16:16.000
to give you a lot of room to try things out.

16:16.000 --> 16:19.000
Linode has these boxes that are just unbelievably priced.

16:19.000 --> 16:24.040
I was doing a live stream from a box that's just their base rig $5 a month stream.

16:24.040 --> 16:28.080
It was amazing, like the power behind it, because all of the components are super fast.

16:28.080 --> 16:32.920
The disk IO, the network, the CPU, everything's really fast and the dashboard to set everything

16:32.920 --> 16:33.920
up is really quick.

16:33.920 --> 16:37.480
So if you get an idea for something and you just want to get off and get going, just run

16:37.480 --> 16:39.840
off and just create something.

16:39.840 --> 16:43.200
Well, Linode makes that really simple with their dashboard.

16:43.200 --> 16:48.280
It's just so nice when you can just have those kinds of barriers removed and get right to

16:48.280 --> 16:49.280
work.

16:49.280 --> 16:52.520
Well, I'll just quickly deploy an Ubuntu LTS system now and then I have this image that

16:52.520 --> 16:55.960
I attached to them that's full of tools and stuff that I need to set up and Linode gives

16:55.960 --> 17:01.600
me all of the little buttons to make that possible with 11 data centers around the world.

17:01.600 --> 17:03.520
Probably something that's going to work for you.

17:03.520 --> 17:07.560
Also maybe take a look at what you could do with object storage.

17:07.560 --> 17:10.000
It's become more and more valuable for us.

17:10.000 --> 17:15.460
Storage up in the cloud that's super fast that can be attached really simply, either

17:15.460 --> 17:21.880
just by a public URL or by something like a file system mount with fuse, which is a

17:21.880 --> 17:25.320
trick we're using for our new PeerTube instances that we've set up on Linode.

17:25.320 --> 17:30.780
We have a Linode front end box that does the actual web rendering and the video streaming,

17:30.780 --> 17:33.880
but all the video is stored on Linode's object storage.

17:33.880 --> 17:37.560
That way I don't have to keep trying to crank up the disk storage for my server.

17:37.560 --> 17:38.560
That's just silly.

17:38.560 --> 17:42.240
I'm just like, what am I supposed to like future cast how much I need to provision all

17:42.240 --> 17:43.240
the time?

17:43.240 --> 17:44.600
I just use object storage.

17:44.600 --> 17:46.860
It's S3 compatible and it's great.

17:46.860 --> 17:50.280
One of the best use cases for it is just hosting your own static website.

17:50.280 --> 17:54.120
You look really professional when your website just pops on the screen.

17:54.120 --> 17:57.600
Linode really provides the virtual servers that make it easy and affordable for you to

17:57.600 --> 17:58.600
host anything.

17:58.600 --> 18:02.640
If it's a personal site or something for your business, they can do that.

18:02.640 --> 18:07.160
They started in 2003 as one of the first companies in cloud computing, three years before AWS

18:07.160 --> 18:08.940
and other enterprise providers.

18:08.940 --> 18:12.900
And now they're still the largest independently owned cloud provider founded on a love for

18:12.900 --> 18:14.800
Linux and open source technologies.

18:14.800 --> 18:16.840
And now they're making shows like this possible.

18:16.840 --> 18:19.640
So get that $100 credit and see what you can do.

18:19.640 --> 18:26.000
Go to linode.com slash coder, get $100 in Linode credit on that new account and really

18:26.000 --> 18:29.860
just learn something, set something up, try out a project.

18:29.860 --> 18:32.160
Maybe one of their one click deployments is all you need.

18:32.160 --> 18:34.900
It's got a lot of apps, it's really easy to deploy.

18:34.900 --> 18:42.120
So try it out, try it out and support the show, linode.com slash coder.

18:42.120 --> 18:46.520
Let's do a little hoopla, a little bit of hoopla, hoopla follow up.

18:46.520 --> 18:52.020
The Corellium team is really hyping up the fact that they have ported Linux to the M1.

18:52.020 --> 18:54.600
So this got sent into the show a few times.

18:54.600 --> 18:57.780
I smell a marketing splash is what I smell.

18:57.780 --> 18:59.120
I'm not buying it.

18:59.120 --> 19:00.120
You think it's fabricated?

19:00.120 --> 19:02.840
No, I mean, it's true-ish.

19:02.840 --> 19:03.840
Go on.

19:03.840 --> 19:05.300
It's like half the story.

19:05.300 --> 19:11.400
So networking is provided via USB dongle, the video acceleration is non-existent.

19:11.400 --> 19:13.560
So it's all just frame buffer stuff.

19:13.560 --> 19:15.800
Performance is atrocious.

19:15.800 --> 19:21.500
It is a modification of the Ubuntu Raspberry Pi image to work on this using code that Corellium

19:21.500 --> 19:25.140
developed to get Linux running on the iPad.

19:25.140 --> 19:30.260
And they've kind of been developing this code and keeping it kind of to themselves as a

19:30.260 --> 19:31.660
special sauce project.

19:31.660 --> 19:34.480
So they kind of had a lot of it already done.

19:34.480 --> 19:38.180
And now it's this slow trickle process of seeing how much of this is actually legally

19:38.180 --> 19:39.800
touchable.

19:39.800 --> 19:45.080
And they have a developer who is learning right now for the first time how to interface

19:45.080 --> 19:49.220
with the kernel team upstream to try to submit some of this stuff.

19:49.220 --> 19:50.780
But some of it doesn't look usable.

19:50.780 --> 19:51.940
Some of it's questionable.

19:51.940 --> 19:52.940
Some of it may be great.

19:52.940 --> 19:56.360
I mean, there has been a lot of hard work done here, not to undercut that at all.

19:56.360 --> 20:01.440
It's technically a good feat, but it's being sold like Linux has arrived and an ISO is

20:01.440 --> 20:02.440
just any day away.

20:02.440 --> 20:04.440
And it is anything but that.

20:04.440 --> 20:08.480
This is a company that has another product in this realm.

20:08.480 --> 20:12.560
And this is an incredible way for them to get some name recognition out there.

20:12.560 --> 20:16.520
I had this long, really great conversation with Hector Martin weeks ago.

20:16.520 --> 20:21.600
And Hector Martin is the original guy who set off with an effort to port Linux to the

20:21.600 --> 20:29.600
M1 and launched a Patreon and now has a Linux distro dedicated to running on the M1 and

20:29.600 --> 20:30.920
has established a bit of a team.

20:30.920 --> 20:32.840
So it's a team now working on this.

20:32.840 --> 20:36.840
And I talked to him weeks and weeks ago about this.

20:36.840 --> 20:45.840
And he really wants to have a white room, totally clean, no legal issue kind of process.

20:45.840 --> 20:49.720
He wants everything to be upstreamable into the mainline Linux kernel.

20:49.720 --> 20:53.820
So he is now interfacing with Corellium's one developer who's really trying to do all

20:53.820 --> 20:56.200
of this to help him get that upstreamed.

20:56.200 --> 20:58.600
But it's still kind of like at this point, it's a long shot.

20:58.600 --> 21:00.680
He's not really getting any bites from the kernel team.

21:00.680 --> 21:03.680
I don't think anybody's really taking him seriously upstream yet.

21:03.680 --> 21:07.700
So it may, it sounds like it's close, but I think it's a lot further off than they're

21:07.700 --> 21:08.700
letting on.

21:08.700 --> 21:12.320
And the reason why they're not making that clear is well, hashtag hype.

21:12.320 --> 21:13.320
I could buy that.

21:13.320 --> 21:14.320
Okay.

21:14.320 --> 21:18.680
I saw the story a couple of times and I was like, okay, it's eventually going to happen.

21:18.680 --> 21:22.200
I don't think anyone's going to buy these M1 Macs to slap Ubuntu on though.

21:22.200 --> 21:23.200
Cause you know what?

21:23.200 --> 21:25.880
You're going to be fighting compatibility issues for years.

21:25.880 --> 21:27.760
You know, no video acceleration is a deal breaker.

21:27.760 --> 21:31.260
You're not going to spend that money on a Mac not to have it working.

21:31.260 --> 21:34.540
Also kind of ironic, I suppose.

21:34.540 --> 21:39.640
When I was talking to Hector, he had told me that he had planned around the end of January

21:39.640 --> 21:44.440
to essentially make the same splash because he thought he was pretty close to getting

21:44.440 --> 21:46.200
it booting.

21:46.200 --> 21:50.480
And his idea was this would be a great PR stunt for the distro and probably raise funds.

21:50.480 --> 21:54.780
So he was conceiving of doing something similar with, I think probably more noble intentions

21:54.780 --> 21:58.800
because he's just trying to raise awareness about the project where these people Corellium

21:58.800 --> 22:03.200
I think are trying to raise awareness about their business and their other products, which

22:03.200 --> 22:07.640
they're happy to link to you by the way, on their page where they talk about this work.

22:07.640 --> 22:12.480
They have a different like security research and app modeling testing that they'll do for

22:12.480 --> 22:13.480
you.

22:13.480 --> 22:16.500
So I don't think people should get too excited.

22:16.500 --> 22:19.600
We had a lot of people that resented it and they were like, it's almost here.

22:19.600 --> 22:20.600
Yeah.

22:20.600 --> 22:23.360
I think this is a ways away to say the least.

22:23.360 --> 22:27.860
We also heard from people that are on M1 minis that they were having issues with sleep.

22:27.860 --> 22:31.440
I guess the system would go to sleep within an hour and then never wake back up.

22:31.440 --> 22:37.140
That is being resolved in a current Mac OS beta as well as, this is why I want to talk

22:37.140 --> 22:40.920
about this because I felt like after trashing them so bad, we should follow up.

22:40.920 --> 22:45.160
Apple is fixing the content filter exclusion list that let Apple apps like the app store

22:45.160 --> 22:51.200
or maps and iCloud avoid firewall and VPN policies like they just weren't installed.

22:51.200 --> 22:52.800
Now that's being resolved.

22:52.800 --> 22:56.840
Apple apps will be compatible with VPN apps and no longer bypass firewall and other security

22:56.840 --> 23:02.760
tools, which I gave them a really hard time for on this show and I acknowledge that they're

23:02.760 --> 23:03.760
fixing it.

23:03.760 --> 23:04.760
So there's that.

23:04.760 --> 23:06.960
And now I'm sick of talking about them.

23:06.960 --> 23:09.460
But I felt like we should follow up.

23:09.460 --> 23:11.400
You're a fair minded journalist.

23:11.400 --> 23:15.640
Well after harping on them for it, you know, because one of the things that I stated is

23:15.640 --> 23:19.420
like what I don't like about the Mac is it feels like it's not under my control anymore.

23:19.420 --> 23:21.020
And I still feel that way to an extent.

23:21.020 --> 23:24.180
I have a really old Mac that I fire up every now and then.

23:24.180 --> 23:27.980
It just dominates my internet connection for a solid 20 minutes while like iCloud sync

23:27.980 --> 23:32.280
stuff that I don't even want synced and just all this junk comes down that I don't want

23:32.280 --> 23:38.640
with these background NS session, whatever processes that are just eating a bunch of

23:38.640 --> 23:40.840
bandwidth on my LTE connection.

23:40.840 --> 23:45.440
I still feel like the Mac is far out of my control in a lot of ways, but that's an area

23:45.440 --> 23:47.160
where Apple made it right.

23:47.160 --> 23:49.760
So I got to give them credit where credit is due.

23:49.760 --> 23:50.760
Okay.

23:50.760 --> 23:51.760
Okay.

23:51.760 --> 23:52.760
Very firm minded of you.

23:52.760 --> 23:53.760
Thank you.

23:53.760 --> 23:59.240
People have been writing in and they tell us that it's interesting to hear the Linux

23:59.240 --> 24:00.860
perspective on things.

24:00.860 --> 24:05.820
Like people really didn't quite understand what Linux users didn't like about electron.

24:05.820 --> 24:07.800
They just didn't really understand.

24:07.800 --> 24:10.720
So we got some feedback back in that said, yeah, thanks for explaining that from that

24:10.720 --> 24:12.000
perspective.

24:12.000 --> 24:15.720
So I want to show people that Linux users can be reasonable and admit that things are

24:15.720 --> 24:19.520
fixed when they get fixed.

24:19.520 --> 24:24.920
Just trying to, trying to keep it honest here at the Coder Radio program.

24:24.920 --> 24:27.440
You know what helps you know when things need to be fixed?

24:27.440 --> 24:29.640
Oh, nice.

24:29.640 --> 24:30.800
Data dog, baby.

24:30.800 --> 24:31.900
Data dog.

24:31.900 --> 24:32.900
That's right.

24:32.900 --> 24:35.920
Go to datadog.com slash Coder Radio.

24:35.920 --> 24:40.580
This here episode is brought to you by Datadog, the unified monitoring and analytics platform

24:40.580 --> 24:43.500
for the comprehensive visibility into your cloud setup.

24:43.500 --> 24:48.400
If you've got a hybrid cloud setup or on premises, quickly analyze the performance of your Linux

24:48.400 --> 24:53.400
servers in real time with customizable dashboards and troubleshoot Linux issues or application

24:53.400 --> 24:55.080
issues in seconds.

24:55.080 --> 24:59.320
The beautiful thing here is the way they visualize a unified view of your metrics, your traces

24:59.320 --> 25:00.440
and your logs.

25:00.440 --> 25:04.640
Imagine trying to communicate a performance issue or track something down with a stack

25:04.640 --> 25:06.600
that goes across everything.

25:06.600 --> 25:11.200
Your host operating system, your applications, your container environment.

25:11.200 --> 25:16.420
With all of that, they also offer integrations that make it really easy for a large stack

25:16.420 --> 25:17.920
of other technologies.

25:17.920 --> 25:20.840
Basically any major technology you've heard of in the industry.

25:20.840 --> 25:26.240
It's over 400 different applications and APIs that you can use with your data dog monitoring

25:26.240 --> 25:27.240
solution.

25:27.240 --> 25:31.880
So you bring that stack in with your overall stack that you're monitoring for your Linux

25:31.880 --> 25:33.760
systems and your applications.

25:33.760 --> 25:38.000
You get full visibility into the health and performance of all of it.

25:38.000 --> 25:40.200
And it's visualized so perfectly.

25:40.200 --> 25:44.380
You should really check out datadog.com slash Coder Radio to see what I'm saying.

25:44.380 --> 25:49.160
Go there and sign up and create a dashboard and you can do this under the trial.

25:49.160 --> 25:53.920
You'll get a free t-shirt as a way to say thanks for supporting the show at datadog.com

25:53.920 --> 25:55.420
slash Coder Radio.

25:55.420 --> 25:56.720
This solves the problem.

25:56.720 --> 26:02.360
I've seen everything at once at a high level, capturing that and then communicating it with

26:02.360 --> 26:03.360
your team.

26:03.360 --> 26:04.800
That's what Datadog is so great at.

26:04.800 --> 26:10.240
So check it out datadog.com slash Coder Radio.

26:10.240 --> 26:15.600
We talked about testing last week and Facebook had a post since then.

26:15.600 --> 26:18.960
They must be listening to the show, I imagine.

26:18.960 --> 26:24.480
Their Facebook engineering blog had a post that talks about how they do testing.

26:24.480 --> 26:28.720
I just pulled a couple of snips that I wanted to run past you.

26:28.720 --> 26:29.720
You ready for this?

26:29.720 --> 26:30.720
Bring it suck.

26:30.720 --> 26:31.720
Yeah.

26:31.720 --> 26:32.720
Okay.

26:32.720 --> 26:40.700
They say, while we use automated tests to detect regressions in product quality, until

26:40.700 --> 26:48.460
recently we had no means of automatically detecting whether a test itself was deteriorating.

26:48.460 --> 26:52.680
Automated tests are another piece of software that can become unreliable over time as the

26:52.680 --> 26:54.300
code base evolves.

26:54.300 --> 26:55.720
Exactly the point you were making last week.

26:55.720 --> 26:56.720
Yep.

26:56.720 --> 27:01.520
They go on to say, unreliable, also known as flaky tests, produce false or non-deterministic

27:01.520 --> 27:07.100
signals that undermine an engineer's trust and thus effectiveness of the entire regression

27:07.100 --> 27:08.360
testing process.

27:08.360 --> 27:10.520
But they got a solution for you.

27:10.520 --> 27:11.520
Oh, dear.

27:11.520 --> 27:12.520
You ready?

27:12.520 --> 27:13.520
They're going to solve your problem here.

27:13.520 --> 27:18.760
Thus, the right question to ask is not whether a particular test is flaky, but how flaky

27:18.760 --> 27:19.800
it is.

27:19.800 --> 27:25.080
To answer this question, we have developed a measure of test flakiness.

27:25.080 --> 27:30.920
The probabilistic flakiness score, using this measure, we can now test the tests to measure

27:30.920 --> 27:32.800
and monitor their reliability.

27:32.800 --> 27:36.800
Oh, dear God.

27:36.800 --> 27:40.280
So they're writing tests to test the tests.

27:40.280 --> 27:42.400
This is actually a solution that people are using.

27:42.400 --> 27:45.800
Wait a minute, but who tests the tests to test the tests?

27:45.800 --> 27:48.040
Well, you just keep adding people to your team, obviously.

27:48.040 --> 27:52.800
I'm pretty sure this is the plot of Inception.

27:52.800 --> 27:57.720
I love the idea because only Facebook, right, or any corporation where they really have

27:57.720 --> 28:01.920
no problem throwing bodies at something, oh, that just means we'll just need another eight

28:01.920 --> 28:05.880
hours of a developer's time, so that's fine.

28:05.880 --> 28:06.880
No cost of that.

28:06.880 --> 28:10.040
But that logic never comes to a terminal point.

28:10.040 --> 28:12.320
Well, they seem to think they figured it out.

28:12.320 --> 28:15.280
By testing the test, they can then predict the test flakiness.

28:15.280 --> 28:19.000
But how do you predict the flakiness of the test, the test, the original test?

28:19.000 --> 28:25.080
You watch how it scores things over time and how it trends, I suppose, suggest if the flakiness

28:25.080 --> 28:26.920
test is getting flaky.

28:26.920 --> 28:27.920
Whoa.

28:27.920 --> 28:28.920
Okay.

28:28.920 --> 28:30.560
Yeah, I know.

28:30.560 --> 28:31.560
This is their solution.

28:31.560 --> 28:37.560
And it really is, it is an endless problem of just throwing more resources at it.

28:37.560 --> 28:43.080
I feel like a lot of this stuff is we don't want to pay QA people, right?

28:43.080 --> 28:44.080
It just...

28:44.080 --> 28:45.080
Yeah.

28:45.080 --> 28:49.280
I'm not saying tests are bad, I'm just saying at some point, someone does have to actually

28:49.280 --> 28:53.920
look at your software and be like, well, all our tests pass, I mean, it redirected to Pornhub,

28:53.920 --> 28:56.540
but all our tests pass, you know?

28:56.540 --> 28:57.540
Come on.

28:57.540 --> 29:00.760
You know, but like Squirrely Dave points out, like in corporate America, it's not an outlandish

29:00.760 --> 29:02.920
idea just to throw more bodies at it.

29:02.920 --> 29:07.080
You know, I have had clients and I've worked at companies where the goal was to just grow

29:07.080 --> 29:08.080
endlessly.

29:08.080 --> 29:12.820
Now, not every place, obviously, I've been to, of course not, but some, they're just...

29:12.820 --> 29:15.060
There was no limit to the staff they were willing to add.

29:15.060 --> 29:18.160
They never thought like, well, maybe 50,000 is enough.

29:18.160 --> 29:19.160
Yeah.

29:19.160 --> 29:22.560
And Wes is saying in the chat that he thinks it's a find the right balance between automation

29:22.560 --> 29:23.560
human interaction.

29:23.560 --> 29:24.560
That's obviously true, right?

29:24.560 --> 29:25.560
Yeah.

29:25.560 --> 29:26.560
Yeah.

29:26.560 --> 29:31.360
And I'm coming at this from the Rails guy perspective where there was a time in the

29:31.360 --> 29:36.120
early aughts where people were like, you don't need QA people, you just can use all your

29:36.120 --> 29:38.400
automated progression tests and here's...

29:38.400 --> 29:39.400
Right.

29:39.400 --> 29:40.400
Okay.

29:40.400 --> 29:41.400
But here's the other argument.

29:41.400 --> 29:45.600
Why pay for, say, three QA people when you could pay for one developer to write tests?

29:45.600 --> 29:47.240
I would say because tests don't...

29:47.240 --> 29:48.240
Work?

29:48.240 --> 29:49.240
That's too far.

29:49.240 --> 29:50.240
No.

29:50.240 --> 29:51.240
Yeah.

29:51.240 --> 29:52.240
Yeah.

29:52.240 --> 29:55.080
I mean, but they don't count like the type of bugs that...

29:55.080 --> 29:56.080
I don't know, man.

29:56.080 --> 29:57.080
Maybe I'm just old school.

29:57.080 --> 29:59.400
I feel like someone needs to be looking at the software and manually going through like

29:59.400 --> 30:01.360
a script of what it's supposed to do.

30:01.360 --> 30:02.360
Yeah.

30:02.360 --> 30:08.280
I mean, like a post build checklist, I mean, that's what used to work, but I do think it

30:08.280 --> 30:09.280
is a balance.

30:09.280 --> 30:10.280
It's obviously a balance.

30:10.280 --> 30:11.280
Yeah.

30:11.280 --> 30:12.280
Yeah.

30:12.280 --> 30:13.280
It's high level stuff.

30:13.280 --> 30:18.560
And then hands on for the edge cases, Alexander wrote in on this topic, he said, I just want

30:18.560 --> 30:21.640
to give another perspective on the testing discussion.

30:21.640 --> 30:28.000
I work in finance writing for software for finance where correctness is a high priority.

30:28.000 --> 30:32.400
We do Java in the functional style of Haskell with lots of strong typing and strict separation

30:32.400 --> 30:35.680
of side effects and mutability when possible.

30:35.680 --> 30:41.240
In my experience, this catches the vast majority of bugs that would otherwise interact with

30:41.240 --> 30:42.240
us.

30:42.240 --> 30:45.920
But we still have to do TDD and unit tests.

30:45.920 --> 30:49.960
The reason we do this is the tests are helpful in the construction phase to make sure that

30:49.960 --> 30:54.200
we're still reasoning about our inputs and outputs of the functions in the right way

30:54.200 --> 30:59.120
and because this increases our confidence when we're refactoring at a later date.

30:59.120 --> 31:03.500
The second point can't be understated at all because we will regularly refactor and rip

31:03.500 --> 31:05.720
out large portions of our code.

31:05.720 --> 31:09.960
We can use these types as guardrails to make sure that we haven't swapped out the schematics

31:09.960 --> 31:12.480
of our code or make other changes.

31:12.480 --> 31:14.020
It's low risk for them.

31:14.020 --> 31:16.640
So testing helps with that kind of thing.

31:16.640 --> 31:17.640
Absolutely.

31:17.640 --> 31:18.640
I can see his point there.

31:18.640 --> 31:23.120
What Alexander is essentially, I think, trying to say is they have a bit more confidence

31:23.120 --> 31:27.280
when they're redoing large portions of their project because of these tests.

31:27.280 --> 31:28.280
And that makes a lot of sense.

31:28.280 --> 31:31.800
Like you're not trying to make sure everything works, but you want to make sure the thing

31:31.800 --> 31:33.240
launches and stands up.

31:33.240 --> 31:37.760
And if you can catch that in an automated fashion, why not save yourself the time?

31:37.760 --> 31:39.760
Yeah, I agree with that, right?

31:39.760 --> 31:40.760
Commercial.

31:40.760 --> 31:44.000
No, I think there's a bunch of stuff like that where the automated tests make a ton

31:44.000 --> 31:45.380
of sense.

31:45.380 --> 31:49.480
When you get to like the view layer, the UI layer, I really just, I don't...

31:49.480 --> 31:51.040
I know people are going to write in about Selenium.

31:51.040 --> 31:52.040
I've used Selenium.

31:52.040 --> 31:54.080
I just, I don't buy it.

31:54.080 --> 31:57.240
It's just easier to have someone run through the screens and make sure it actually does

31:57.240 --> 32:02.320
and looks the way it's supposed to in my crazy curmudgeonly opinion.

32:02.320 --> 32:04.760
Well, I accept it.

32:04.760 --> 32:06.400
I accept your curmudgeonly opinion.

32:06.400 --> 32:11.520
I really, the way I witnessed it, it really was a much, it was a different era of software

32:11.520 --> 32:17.760
development where QA was just part of the process.

32:17.760 --> 32:20.640
And they worked in kind of conjunction with IT.

32:20.640 --> 32:25.520
And I was there to help support there, especially on certain days.

32:25.520 --> 32:31.080
I worked in an environment once where a web application that allowed different contractors

32:31.080 --> 32:38.020
to come in and bid on state development projects, like for building like a school or a park

32:38.020 --> 32:41.240
or a sidewalk, you know, just all that kind of stuff.

32:41.240 --> 32:47.120
And so because it was dealing with state contracts, there was all of these really stringent regulations

32:47.120 --> 32:49.080
that they had to follow.

32:49.080 --> 32:51.940
And there was a lot of pressure to get that right.

32:51.940 --> 32:58.060
And I remember specifically like the QA team was like the last line of defense before we

32:58.060 --> 33:00.680
would flip something public.

33:00.680 --> 33:01.680
And there were deadlines.

33:01.680 --> 33:06.240
And if something broke, which did happen sometimes because it was a monster of an application,

33:06.240 --> 33:07.840
it was a really high stress situation.

33:07.840 --> 33:13.920
And we had to be able to roll back and the QA member that like approved that section

33:13.920 --> 33:15.880
would be held accountable for it, too.

33:15.880 --> 33:20.520
Like it got a little like, they got a little bit in your face about it even like, hey,

33:20.520 --> 33:21.520
what happened here?

33:21.520 --> 33:22.880
Where did the process break down?

33:22.880 --> 33:27.840
And then they would figure out where the QA process had failed them.

33:27.840 --> 33:31.800
And then they would alter the script so that in the future, that didn't happen.

33:31.800 --> 33:34.600
It was not a very rapid process.

33:34.600 --> 33:37.900
But over time, like they had QA members that worked there for several years that were like

33:37.900 --> 33:40.600
just really solid contributors.

33:40.600 --> 33:45.560
And eventually, they became contributors also like on just like UI suggestions, because

33:45.560 --> 33:48.480
they were really familiar with the product, but more familiar with it from a user's perspective

33:48.480 --> 33:50.520
than the developer perspective.

33:50.520 --> 33:53.760
And it became kind of a really good feedback loop.

33:53.760 --> 33:56.560
And so I was only there for about two years, really.

33:56.560 --> 33:59.080
So I don't know how it worked out ultimately.

33:59.080 --> 34:01.920
But that was my experience with something like that in a really kind of high pressure

34:01.920 --> 34:05.600
situation where they were just like our last line of defense.

34:05.600 --> 34:06.600
Yeah.

34:06.600 --> 34:07.600
And I think that's how it should be, right?

34:07.600 --> 34:11.760
QA is kind of the gatekeeper now, of course, they're going to get pressure because deadlines

34:11.760 --> 34:12.760
and stakeholders.

34:12.760 --> 34:13.760
Yes.

34:13.760 --> 34:14.760
Yeah.

34:14.760 --> 34:19.920
You got to make sure the stakeholders are taken care of stakeholders.

34:19.920 --> 34:21.320
You know who our stakeholders are?

34:21.320 --> 34:22.320
Who's that?

34:22.320 --> 34:23.320
The members.

34:23.320 --> 34:24.320
Oh, yeah.

34:24.320 --> 34:25.960
The coder QA team.

34:25.960 --> 34:31.840
And at QA, coder QA.co become one of our QA members, keep the show on the air, support

34:31.840 --> 34:37.120
the show, get a limited ad feed, and get the coderly report, which we have one out for

34:37.120 --> 34:40.720
last coder, or quarter, some of you call it.

34:40.720 --> 34:44.960
We have a special promo that I think will probably last until next episode.

34:44.960 --> 34:49.440
If you use the promo code 2021, it'll take two bucks off of your membership when you

34:49.440 --> 34:51.000
go to coder QA.co.

34:51.000 --> 34:55.040
I also want to remind you that our friends at a cloud guru, if you're looking at learning

34:55.040 --> 34:58.480
some stuff and want to start exploring around, find them on social media.

34:58.480 --> 35:03.700
It's just slash a cloud guru on YouTube, Twitter, Facebook, pretty much all the social media

35:03.700 --> 35:06.480
sites that you care about, it's just slash a cloud guru.

35:06.480 --> 35:09.720
Mr. Dominic, is there anything special you want to mention for this episode?

35:09.720 --> 35:12.000
No, just follow me at Dumiduco on Twitter.

35:12.000 --> 35:13.000
There you go.

35:13.000 --> 35:14.000
You can find him there.

35:14.000 --> 35:17.360
I am at Chris Lass, his company is at the Mad Botter Inc.

35:17.360 --> 35:23.040
The whole podcast network is at Jupiter Signal, and the show is at Coder Radio Show.

35:23.040 --> 35:29.320
We do this here podcast live on Mondays, starts at 5pm, 8pm Eastern at jblive.tv, and I would

35:29.320 --> 35:31.560
love to have you join us.

35:31.560 --> 35:35.900
Also we're getting really close to episode 400, so keep an ear out soon for announcements

35:35.900 --> 35:40.480
related to that, and links to everything we talked about today are at coder.show slash

35:40.480 --> 35:41.480
398.

35:41.480 --> 35:47.760
You're also going to find our contact form there as well as our RSS feed so you can pick

35:47.760 --> 35:52.760
a way that you like to subscribe to the show and get it every single week, while Monday

35:52.760 --> 35:53.760
means we're live.

35:53.760 --> 36:00.040
But you know, I really know that like the bulk of you, like 99.5% of you, you're listening

36:00.040 --> 36:01.040
on the download.

36:01.040 --> 36:04.240
So thank you for doing that, and if you'd like to help the show out, maybe you can't

36:04.240 --> 36:09.320
be a member, another great way that we totally appreciate is sharing the show with somebody.

36:09.320 --> 36:13.080
Word of mouth is the number one way podcasts are marketed, it's really the only effective

36:13.080 --> 36:14.200
way.

36:14.200 --> 36:17.080
So we could use that too, helps the show a lot.

36:17.080 --> 36:20.600
Thanks everyone for tuning in to this week's episode of the Coder Radio program, and we'll

36:20.600 --> 36:30.360
see you right back here next week.

