This is KOTORadio, episode 386, for November 2nd, 2020.
Hello friends and welcome into KOTORadio, Jupiter Broadcasting's weekly talk show
taking a pragmatic look at the art and business of software development and the
world of technology. This episode is brought to you by a Cloud Guru. A Cloud
Guru now includes Cloud Playgrounds, Azure AWS, and Google Cloud Sandboxes on
ACG's credit card, not yours. Get certified, get hired, get learning.
A CloudGuru.com. My name is Chris and joining us is our host, Mr. Dominic, with
no Florida jokes. Hello, Mike.
Hello, Chris. Hang on, I just got to push down on this beautiful single-serve
French press here. There we go. Feel that plunge.
Did you get your first bag of coffee of the month?
I did. You can hear me pouring it, I'm sure. Right from Kenya this month.
Oh, how is it?
I like it as an afternoon coffee. It's very earthy, very smooth, not very strong.
And you know, to start off my day, I really need the French baguette to the face
coffee.
Yeah, your breakfast coffee.
My only complaint is that this is a coffee you need to French press or pour
over. The AeroPress, you know, you have some loves that are like, you know,
Romeo and Juliet till the bitter end when you're choking on blood and
hemorrhaging internally.
Right.
Then you have some that are more like the movie Grease, where it's really just a
summer love. And that would be my relationship with the AeroPress.
That tends to be mine. My wife sticks with it. But here's what I say to you,
sir. If you're going to all the trouble being a fancy guy with your fancy mail
order coffee, what are you going to do? Not use the AeroPress when this
perfectly picked coffee arrives at your house? Like, you got to give it the best
treatment possible.
So this is one of the few times I wish this was a video show. I would show you
my single serve bamboo wood French press.
Oh, my God.
That is what I would do, sir.
Oh, I'll tell you what. I didn't sleep last night. I think maybe 45 minutes.
Oh.
Yeah. So I'm doing – when I have a night of no sleep, I have a pack of
sugar-free Red Bull that I go for. I don't bother with the coffee. I don't bother
with the caffeine pill. I go with the sugar-free Red Bull because, you know,
you just need the kick. I'm just trying to get myself through half the day,
and then I'm going to allow myself an opportunity for a nap in the afternoon.
But I just – I don't know. You know, it's just so much going on, and with the
election and everything, I just – my mind is going 100 miles per hour on work
stuff and world stuff, and boy, am I just looking forward to things settling
down a little bit.
Yeah, you're doing some live coverage of that on Unfilter, aren't you, or my –
I will be. Yes. Yes, I'm that crazy.
If I fall asleep during the show today, I guess I didn't get the Red Bull mix
right.
I'll just scream, Seuss, and you'll wake right up.
No doubt about that. We'll be getting to that. We'll be getting to that.
But we do have some Dark Matter Dev follow-up to get to.
This one is a Dark Matter Dev for decades.
He says, hello, guys. I'm a longtime listener of Coder Radio.
I recently listened to the discussion you had about Dark Matter developers
with Mike, and of course, I am one of those. I work for a global bank.
I use Java 8, an Oracle database, and ReactJS. The software we develop is a
software managing one of the bank's internal systems. It has a couple of
hundred users spread across the globe.
Of late, there is a large push inside the bank to, quote, adopt the cloud.
So recently, I've gotten to play with Kubernetes, OpenShift, Docker, et cetera.
All the developers in my team use cloud desktops for development.
Cloud desktops managed by the internal IT team, they're slow.
They break often, and they make life miserable for the developer.
I don't mean to laugh. I just didn't expect it to go that direction.
He says, but, you know, the job pays well. I have reasonably good job security,
and people I work with are some of the nicest out there.
My boss seems pretty great. We get along just fine, and COVID-19 hasn't
really affected our employment at all.
I've been a Dark Matter developer for a couple of decades.
I started programming COBOL systems on IBM mainframes and then moved on
to other technologies as time went on.
For me personally, the benefits of being a Dark Matter developer has
outweighed the costs. Granted, enterprise software isn't the most exciting
thing to work on. However, it has given me a reasonably good work-life balance
and given me the opportunity to travel to places and meet people I never would
have met growing up as a middle-class kid in India.
I listen to your podcast, so keep up with the technology news.
It's always interesting to listen to you and Mike talk about experiences
running a software business. Keep up the great work, and thanks to Mike
and you for producing entertaining and informative content.
Best regards, Mr. Anonymous.
Dark Matter developer for decades, and he says he looks back on it, Mike,
and says it was all worth it.
Yeah, sure, right. Different strokes for different folks.
I think it's a good data point for people listening that are in the
perpetual, should I go indie, should I work for myself, should I build my
own product and sell it directly, or should I go work for someone else?
That's why we started asking about kind of just getting people's input
and thoughts about being a Dark Matter developer, so we had a better
kind of database, you know, to pull from.
And JVP writes in as a Dark Matter developer.
Now, here's the thing. He's been programming for various jobs over the years,
but where he works now, he's been there for eight years, and the software
only runs on Windows, so he wanted to share a bit of a Windows perspective
that doesn't get a lot of attention here sometimes, I suppose.
It is the best Linux, this drill.
It hurts because it's becoming true.
Well, other than SUSE.
I got to focus. I'm going to get through this email.
Drew, do not edit his sigh of rage out.
We are going to address that. We are going to address that.
But first, he says our software runs only on Windows, so I want to share that perspective.
Windows 10 has the same bloat problems that other versions had, and it's
compounded by antivirus and anti-malware that gets more and more complex each year.
The antivirus software feels like a rootkit at this point, and since I don't
really have admin control on some processes, you simply can't just sit down
at a fresh install of Win 10 and compare it to anything else without at least
running it for two to four years, which is maybe the amount of time I spend
between IT upgrades at best.
This leads me to trying to do most of my work on my personal laptop running
Ubuntu because of these frustrations.
One of my horror stories has seen a message pop up that updates and rebooted
and was forced right in the middle of a presentation to a customer.
This actually happened to me, and I couldn't stop it from happening,
and I ended up having to return to the customer the next day.
When I contacted IT, he just said that there must have been a delayed update
for more than five days, and then there was nothing he could do about it.
Oh, my God.
You just feel like you have no governance over your computer when that happens.
He goes on.
Windows 10 has broke a lot of things in software terms.
People usually mention that Windows has a largely good legacy compatibility
and that rebasing would be unheard of because of this compatibility,
but honestly, all of the software that worked fine in previous systems,
like on Windows 2000 and XP, stopped working in Windows 7,
and then things changed even more with Windows 10.
Nobody in the industry took Windows 8 seriously, he says.
The idea that WSL could lead to a flipped architecture is one I think
isn't too far out there.
We've seen Microsoft be adept at changing strategies
for such a large corporation.
The move to Azure seems to be their number one priority,
and my two cents is that the strategy to drop Windows
and license revenue in order to be better positioned for Azure deployments
makes sense.
I think Microsoft would pivot quickly.
Well, as quick as a giant ship can, he says.
With all of these crews that worked together to turn the rudder,
they could get there.
They could easily create a reverse WSL that could run Linux
and support a reference architecture base with something like 90% compatibility
and functionality, something similar maybe to Proton on Linux.
Just think of the amount of money that they could throw at this versus Valve.
I don't know if the Windows license model is something that gets shareholders
excited anymore.
Keep up the good content, thanks, JVP.
I think his point in here about Windows 10 compatibility
and Windows compatibility getting hyped up,
every time we've talked about that, in the back of my mind,
I've always been like, is that really everyone's experience?
Because a large part of my IT career was solving compatibility issues
between Windows issues and software that corporations just had to run.
I agree with him here.
I think Windows 10 gets sort of like this Solaris-like credit for compatibility
that just isn't fully deserved.
There's some, for sure, but I don't think it's fully deserved.
Can we just exclude Windows 8?
Yeah.
And then I feel more correct in that it was compatible the whole time?
Yeah, and I'm still not biting on the storyline that Microsoft
is going to make a reverse WSL to make Windows run on Linux.
I don't know if I'm seeing that.
We'll see.
You know I was hot on it, and I feel bad that I forgot who wrote the post,
but there was that post we covered a few weeks ago basically saying...
It was Hayden.
It was Hayden, right, that people like me were on crack,
and yeah, I've seen the error of my ways.
Okay, I think this is our last Dark Matter Developer one.
This is Cold Fusion Hell.
That's a little redundant, but okay.
I know, right?
It's a cold fusion day in hell.
Anonymous writes, I wanted to give my two cents as a Dark Matter Developer.
I used to work at an MSP that only did government work.
Most of the devs worked their nine to five hours and were good at their jobs,
but had zero desire to learn more.
We had one modern application written C sharp,
but most of our work was supporting ancient web apps using CFML,
which, by the way, is Cold Fusion markup language.
It screws up my life, he says, in more colorful terms.
Having to use CFML along with its terrible sibling, Cold Fusion Server,
ended up being one of the main reasons I quit,
as I didn't want to get left behind technologically.
Now, this is something I've wondered if Dark Matter Developers worry about this,
is if they get stuck and strapped to these old techs
if they feel like the industry is leaving them behind.
Now, we haven't got a lot of emails that have said that,
but this one from Anonymous does seem to address that.
He goes on to say, CFML does have its perks.
It's super easy to create a decent database connection,
and the server GUI was simple to use,
but there are many reasons why it's not very popular.
Sort of like Seuss, he says.
Seriously, it's in there.
All this said, I think there's a direct correlation
between what a dev has to work on
and their desire to learn more and be better.
Working day in and day out on boring government applications is soul sucking.
Well, I'm glad you got out of Cold Fusion hell.
That was our Dark Matter Developer feedback,
and I felt like that was a pretty good batch.
We're still receiving your feedback.
We'll probably be featuring less and less in the show,
but we actually don't mind still receiving it.
It helps inform our opinion,
and if there was something particular that was great,
I'd promote it up to the show.
linode.com slash coder.
Go there for a $100 60-day credit towards a new account.
Linode is cloud hosting done just right.
If you're a total beginner,
they've got a way for you to get things done.
But if you're an expert, if you're a pro,
you know what you're doing with the server,
then Linode is unlike any other service out there.
They're going to give you full access to the backend
and control to your server so you can make it fit your needs.
They've got a DNS manager that'll let you switch
and change all of the DNS stuff you need.
The disk manager to set up new disks is great.
All of that is what I consider to be table stakes at Linode.
But on top of that, they have things like object storage
and Kubernetes support and Terraform support
and node balancers and alert integration.
See, they started in 2003 as one of the first companies
in cloud computing, so they've had some time
to figure out what customers really like.
I mean, this was three years before AWS.
They had people putting their infrastructure
in production three years before AWS,
and they're independently owned through all of it.
They were founded on a love for Linux
and open source technologies.
And I started using them a couple of years ago,
and now all of JB's infrastructure runs on that.
We have one physical server now.
When I started doing this with Mike 200 years ago,
we were still at the phase where the servers
were in racks in data centers.
And we actually had a two-week lead-up process
before we could get an additional server in the rack.
And then I actually had to pay for its power
and all of its transfer.
And now with Linode, you can get a $100 60-day credit,
and their base rigs start at $5 a month.
So if you just need something like an SSH jump host
or a VPN endpoint, that's great,
and you could do a lot of other things with that rig too.
But you can go with something that has a lot of CPUs
or a lot of GPUs.
What we do is we offload our encoding now.
Our editors submit a FLAC file to a server on Linode,
and then it does all of the heavy lifting,
all of the encoding to the various video versions
and audio versions, all server-side on a Linode.
So if you need something simple or you need something
with a lot of performance, they're going to have you covered.
And they're usually 30% to 50% cheaper
than any of the other big commercial providers,
so you'll save money too.
And they have a 99.9% SLA, so uptime is pretty great.
I don't think you're going to have any problems with that.
So with the prices, it's cheap enough to learn,
and you can dial it in for production
and still save a ton of money.
So go check them out.
They provide virtual servers that make it easy and affordable
for you to host anything in the cloud,
from games to applications to a resume
to your company's backend infrastructure.
It's all there.
Linode is dedicated to offering the best
virtualized cloud computing.
If it runs on Linux, it runs on Linode.
So go to linode.com slash coder.
You support the show.
You let them know you heard it here.
You get that $100 credit for a new account for 60 days,
and you get the whole process started.
You support the show, get something great, linode.com slash coder.
And a big thank you to Linode for sponsoring the Coder Radio program,
linode.com slash coder.
We touched on a couple of nerves right out of the gate.
Hans writes in, talking about being in development hell.
He says, hello, guys.
Love your show.
Please keep it up.
A couple of times over the recent episodes,
the topic of Apple's relationship to developers came up.
You postulated that they put users, profit,
and pretty much everything else above developers on their platform.
Well, I work on iOS apps for a living for a large corporation,
and I think Apple is doing a good job in a lot of areas.
They have great devices.
The annual iPhone update seems to be getting more marginal every year,
but it's still a pretty good update.
Swift is an awesome programming language.
Nobody likes square brackets and semicolons except Mr. Dominic.
Clearly, this email is written by an insane person.
Yeah, well, we'll get to that, too.
But that being said, here we go.
That all being said, Mike could not be more right.
He's healed.
Developers are clearly a second-class citizen on their systems.
However, what annoys me even more is they claim Mac OS is, quote,
the world's best system for developers.
The best system for developers?
My ass.
First of all, GNU userland tools eat their BSD counterparts
that ship with Mac OS for breakfast.
Ever found a Stack Overflow answer about how to do something with set or grep
and then realized it doesn't work on your Mac?
Then every year at WWDC, they tell us how they've rewritten half of Xcode
and how it's X percent faster.
Yet in 2020, it still crashes when I switch between Git branches,
can't reliably do incremental builds,
and overall, beach balls left and right, clogging up the whole system.
The spicy take right there.
And one I've heard echoed, I got to say.
But they don't stop there.
Not only do they force us to use their crappy IDE,
they also require us to run their CI machines on Mac OS,
an operating system without a headless mode
and without any reliable machine orchestration framework.
Administering Mac OS build server means regularly logging into a graphical user interface
to confirm dialogues or install updates by hand.
Could any system Windows Apart be less suitable for running a CI machine?
Or take Docker.
It runs on Mac OS, but the performance is light years worse than on Linux
because the absence of the Linux kernel means it has to resort to virtualization.
In my opinion, Mac OS is far from being, quote, the best choice for developers.
Linux obviously is.
Honestly, with the direction Microsoft is heading into,
I would even say Windows is starting to be a better choice than Mac OS.
I think developers use Macs because you need a Mac to publish apps on Apple's platform
and they're pretty sexy machines.
That's all.
Just my two cents, Hans.
Yeah, so one of the mysteries of the universe as far as I'm concerned
is how so much money and effort goes into Xcode
and it's always half busted.
It's got to be that they're constantly having to add stuff to keep up with the phone production, right?
New screen shapes, new features in chips,
and just stuff that they have to constantly be working to support in Xcode, I guess.
Well, I know Xcode got briefly better and then when Swift came out,
they had to add all the Swift support, which was just dog terrible in terms of performance.
Like, awful.
Now, that's because Swift is an inferior language.
Nailed that right off the bat.
Right.
In terms of the BSD tools, yeah, okay, but a couple years ago,
you had pointed out that when you're on a Mac,
you're generally using proprietary paid graphical tools, right?
And I think that your average developer working in a Mac full time
who doesn't like touch Linux in particular
doesn't really think in terms of like I'm going to script my way to glory
and pipe everything from crept to whatever, blah, blah, blah.
Now, some do, right?
When I work on a Mac, I still constantly get mad that ZShell is different than Bash
because I keep forgetting.
Sure.
I don't know, right?
I don't know why this is –
and Chris, you're going to have to correct me here.
I would think that like Apple would want developing iOS apps to be super not frustrating
considering it's actually an expensive thing to do and it's just a brutal marketplace.
But yeah, they seem – maybe it is just like the rapid cadence of iOS
that they have to keep adding crap to Xcode and it keeps bloating it.
I would suggest and it is an absolute crime that they don't sponsor this show,
JetBrains does have app code.
It is good.
It does suffer from the third party tool working in the Apple ecosystem curse
of every year they get hammered by Apple because they have to catch up.
But yeah, Xcode is awful.
I just had a problem this week where I was working on my Mac
and it was just inconvenient to like switch machines back to the Lemur
because it's just annoying.
But somehow in the background, the Mac App Store had updated Xcode,
which whatever, right?
But that breaks my command line tools like GCC, which I was coding in Ruby.
So that's kind of important because all the Ruby –
many of the gems have to compile C++ extensions or C extensions.
And that's just like a dumb problem to have.
I then had to open Xcode.
Like I just had to know that I had to do the Xcode select thing
and make sure like re-simulink or reinstalls whatever it had to do.
In my case, GCC, but there's a bunch of stuff it does.
That's really stupid.
Yeah, it feels old and busted.
It reminds me of the old days on Windows when like you need to install Visual Studio
if you would like to have C++ at all.
Yeah.
I mean, I'm obviously a little biased,
but I feel like Mac OS sort of lost its competitive edge
as a developer's workstation.
I think it really did offer something special early on.
Years ago, there wasn't really a great laptop solution.
I mean, when Macs really kind of started kicking off for developers
is when the Transition x86 came and Wi-Fi was rough on Linux.
Power management was rough on Linux.
The desktop UIs were new.
Plasma was just a new version.
Gnome Shell was just a new version.
And Apple came along and by the time x86 shipped on the Apple platform,
which is ironic because they're about to switch to ARM now,
but by the time the x86 Mac started to ship, Mac OS was in a good place.
Adobe was fully on board.
Microsoft was fully on board.
You could get a Mac with actual real legit Microsoft Office
and Adobe Photoshop and Internet Explorer
and whatever else you needed back then.
Yes, Internet Explorer was one of the things.
And you could get a real Unix command line.
Proprietary applications, polished UI, Unix command line.
That was a great combination and it sold millions of MacBooks,
no doubt about it.
But as time went on, the cloud became more and more dominated by Linux.
Shipping applications as containers became commonplace.
The desktop side of Linux got a lot better.
It got a lot more professional.
Vendors like Dell, HP, and Lenovo are all now selling Linux laptops.
System76 and companies like them have their game brought up to the next level.
They've spent this last decade iterating and learning like crazy.
And so you have this common runtime aspect,
this general technology platform that is Linux.
And it's so easy to get a Linux workstation for development set up and going
because you have repositories of software.
You have command line tools to install your software.
It's things developers love.
And Microsoft is quickly adopting much of this.
Meanwhile, Apple has been heads down on the iPhone.
And they just have let the Mac as a core concept kind of age.
They've updated the UI here and there.
They've updated the Mac line.
They're making a big investment in a transition to ARM.
But fundamentally, it's not going to change the fact that Mac OS just isn't
an ideal development platform anymore.
And you can spend time getting Mac OS tweaked and installing dozens of
third-party tools that will cost you a minimum of $5, go as high as $35,
and you'll need to get 10 of those installed.
You can kind of get there.
Or you can just like descend into homebrew hell, right?
Yeah, yes, absolutely right.
I think they've lost their competitive edge to a large degree.
And the transition to ARM will probably help, but not a full solution.
Oh, I think it's going to help a lot.
So I'm bringing you some Applewood bacon today.
Oh, really?
I set you right up for this.
You know, I was okay.
I mean, I was going to go lizard, but we'll go bacon.
Let's do it.
We do not eat or harm lizards in any way.
People do.
People do.
Fried lizard could be a thing.
It has burned into my brain with a smoky sort of sweet maple aroma that
they showed GNOME.
Yes, it's GNOME, not gnome.
Please don't get me all that.
And I'll put the link on their Apple Silicon demo.
I don't think the folks at Apple are stupid.
I think many of them are very smart developers, right?
And they know that they're by their own admission,
their biggest pro market is devs.
I think just like is always the case, Apple is a little slow to the game.
But I think they're going to do something Linuxy or maybe they'll embrace
the dark side of BSD even further.
Right?
I really don't think they're just going to see this market because they're
not stupid, right?
They're not going to.
They're not going to let Dell sell a bunch of XPS 13s
or System 76, but whatever, the Lemur, the Darter.
I don't see them giving this up this easily.
Now, I do see some sort of insane virtualization thing
because of the, I think, pretty impressive performance
they're going to get on Apple Silicon.
But I think people are ringing the death
bell a little early here.
Well, you're convincing me in two regards.
Number one, I vividly remember them demoing
GNOME Shell up on stage.
And they made a point.
Yeah, and they were particularly talking
about accelerated Linux virtualization.
Yeah, that, you're right.
And that does seem to indicate a bit of a tell,
I guess you could say.
The other thing is it is a classic Apple maneuver
to wait just a little too long to the point
where everybody's like, what the hell's going on here?
They've lost it.
They've dropped the ball here.
What's going on, Apple?
When you start having people in the technology crowd
that are talking like that, you wait another six months,
and that's usually when Apple will come up with something.
You've just seen them do this over and over again
over the decades.
They are often a little late, but they generally
execute really well.
And so I could see that also proving your point.
We'll have to see.
We may find out more.
But speaking of lizards, Hans did have a postscript.
He says, I've been laughing my ass off about the Seuss jokes,
but don't bash them.
It's not so bad.
I mean, yes, I'm from Germany.
That goes without saying, Hans.
And yes, I have a little bit of a corporate background
where I have to use it, he says.
But I think it's a rather well-made system.
And you said it himself.
He's a crazy guy.
So he's a Seuss guy.
So just a little data point for us.
And he's German, too, which also seems
to be quite common among the Seuss users.
Well, you know, when an IT person declares himself
in Germany, they actually hand you a Seuss laptop.
I don't know what's going on with you at this point,
because I'm getting tweets from you that I think
are just designed to troll me.
You even pinned a Seuss a tweet on your Twitter timeline.
I was wondering if you'd see that.
Oh, I noticed.
Oh, I noticed.
So I get this tweet the other night.
Hey, Chris, I'm moving another server to hashtag Seuss,
and it feels so good.
And of course, everybody on Twitter notices.
And I feel like perhaps the audience and I
need to stage some kind of intervention with you.
This only ends in you quitting Linux, I feel.
This is what happens.
You go this route, it ends in you quitting Linux.
All right, you know what?
I've been Perry Mason defending my reptilian client
for several weeks now.
What's the case for the prosecution?
What is wrong with open Seuss server?
I'm using Seuss as an umbrella.
Well, I'd say a couple of things.
It is an oddball distribution.
Some things are just done a little bit differently.
No other distribution has Yast, so it's sort of a sunk cost.
Anything you learn in Yast is not going to really apply
to any other distribution.
I'd say additionally, it feels old in a lot of ways.
It has some Slackware heritage, the layout, the design.
In some ways, it just feel old.
Additionally, one of the things that I've
noticed at a global level of the project,
and they're going to hate that I say this, but I mean, it's true.
They already hate you, don't worry.
They have a little bit of not invented here syndrome.
And it does result in great results and great products,
but it also results in them investing
a ton of time and effort into stuff that nobody ever touches.
I'll give you a couple of examples.
Open build service, absolutely brilliant.
It could be a public service for the free software community,
and it really hasn't seen much growth at all.
It's got adoption by some.
Nobody really, it never really gets traction, though.
If Canonical or Red Hat did the same thing,
it would be the number one thing in, like I mean, look.
When Flatpak and Snaps came out, it's all we talk about now.
Meanwhile, open SUSE build service
has been around for 200 years.
There's also things like, they try to do things
before anybody else, but nobody follows their lead,
because they're kind of insignificant.
So they don't really end up being a trendsetter,
so much as just different.
And their implementation of ButterFS
is a fantastic example of this.
Way ahead of the pack, first they were on RiserFS,
but nobody switched to that.
And then Hans turned out to be a murderer,
and not really working on the project
after he got sent to jail.
So they quietly transitioned off of RiserFS to ButterFS,
and they've been there for years.
And meanwhile, nobody used it.
And ZFS got more and more popular.
ZFS got notoriety on Ubuntu,
and Canonical built it into their LTS version of Linux.
And now, finally, after all these years,
because not by any doing of SUSE,
Fedora is now shipping ButterFS.
And Fedora can say, look, the SUSE guys did it,
and it was fine.
And that's about the extent of their contribution
and impact on shaping the landscape of desktop Linux.
And it's, I don't say this with joy,
I don't get any pleasure from this,
but just having observed SUSE,
they kind of just seem to be off into a world of their own.
They sometimes get it right,
and sometimes get it really kind of better
than anybody else.
But it doesn't really change anything.
It doesn't really change the way the rest of Linux works.
So it's not like you have some advantage
by being on SUSE and you learn how the new thing works
before anybody else is doing it.
You just learn how it works the SUSE way.
And that is even true of their ButterFS implementation.
They have their very own unique ButterFS implementation.
So I guess when I look at it,
I look at it as a bit of an oddball distro
that doesn't have a lot of community support,
that doesn't have a particularly strong brand
compared to its competitors, which are just dominant.
And I don't see a lot of density in cloud deployments either,
which I think is a bellwether for the future of the distro.
You don't see entire stacks of containers
built off of SUSE.
You don't see tens of thousands
or millions of deployments on AWS.
You have to go to a provider that really knows Linux
to get SUSE really, like Linode.
Linode has SUSE,
but that's because they're a bunch of Linux geeks.
And I think that has gotten a little better over time,
but it still pales in comparison to CentOS
or Debian or Ubuntu's deployment on VPSs and cloud services.
So that's part of it.
Yeah, I mean, I don't really see a market share
as something I necessarily care about.
Also, to be super clear, I'm talking about server side, right?
Right, right, right.
So, you know.
I mean, I think it's a decent product.
Yeah, I think you're a little dismissive
of the build service though.
I gotta be honest with you.
Yeah, well, just because like it hasn't gone anywhere.
Like it got some adoption and, you know,
like even some, like you might say,
competing projects use it.
And that is a cool statement
from like a community standpoint.
But beyond that,
like nobody's deploying software at scale with it
in a commercial space.
What do you mean it hasn't gone anywhere?
Of all like the competing products,
I mean, this is a risky opinion
because we're talking packaging now,
but I think it solves it in the best way.
No, I actually agree with you.
I think it does.
And I think it's the one that's most approachable
by the community.
Anybody, you don't have to be a SUSE user
to use the open SUSE build service.
You also forgot Rancher, right?
Now will they take it and make it SUSEfied?
I don't know.
I guess the bet is,
the bet is that they're gonna build up
a bigger and bigger presence on on-premises
and on some server cases,
and that there's an ecosystem there
that you could become an expert on
and kind of differentiate.
I guess that might be the bet.
The bet is there are basically two viable options
and the canonical people are gonna get really mad.
But right now there are really two viable options
for regulated spaces in the US
in terms of Linux distros.
Yeah, yeah.
It's RHEL, who is owned by IBM,
who is a consulting company, right?
That's automatically problematic for me.
And it's expensive.
And it's expensive.
And there's SUSE who has a much smaller presence here.
And let's not forget,
I am laying fiber optic cable and building a data center.
True.
So the way I would probably build that myself
is an Ubuntu or CentOS virtualizer host.
And then I would run SUSE and VMs for the applications
that need it.
Well, I will say buying hardware with SUSE on it,
or SUSE on it, is surprisingly challenging.
Kuzuntai is what they say when you ask for SUSE.
Yeah, they're like, did you mean Windows Server?
Ha ha ha.
Oh man, come on.
So that is fair, right?
Like that is one of,
I would say the largest downside of SUSE,
like it's weird to me that there are not more vendors
offering SUSE services,
which say that three times fast.
Because it is like one of the accepted,
like one of the two main accepted
for regulated spaces, distros.
Right?
It just is.
And the other one is RHEL, so.
Yeah, that is definitely true.
But I could also see maybe Ubuntu
eventually working into that space.
Well, Ubuntu is trying to get there, right?
It's just, you know, it takes time.
It's like you say SUSE is old and that's a problem.
It's a problem if you're looking at it
from an enthusiast perspective.
If you're looking at it from,
I never want to see a problem that hasn't already
been solved or in terms of infrastructure level, right?
Keeping these machines up, then that's a feature.
I think maybe old isn't the right way to put it
because of, you know, it's fresh packages, it's maintained.
It is an old methodology.
It's an old design principle of an operating system.
It's the early days of Linux way of thinking.
It's when we built Linux the way we built Slackware.
Wow, you've really got to go all the way to Slackware, huh?
I think, I believe that's what SUSE is based on.
I think it is too, actually.
Yeah.
And I think that it shows a little bit
compared to a Debian system or a RHEL system.
Right, so there's a bit of dissonance, right?
If you're coming from an Ubuntu background
and then you're in SUSE, it's like at some point
you have to unlearn what you have learned, right?
Like, I don't know, was that Yoda?
Probably.
But you really have to just let go.
You have to embrace the ask, you have to embrace Zipper
and you have to think in a more reptilian way.
But I got to tell you, it's very stable.
It's running fine.
We're using the build service.
I mean, we're early days of setting this all up.
But I don't know that I could ever not
be using the build service.
Even if in a year I'm like, ah, damn it, Chris, you are right.
We're running everything on Fedora or CentOS now, right?
I still would be trying to use the build service.
I could see that.
And I'm a little confused as to why
this is not a more common opinion in the community.
Me too, man.
I have really wondered that, because it
seems like a fantastic public service they're providing.
Yeah, it's like I had a client this past week,
so last week, right, call me and he
had a question from one of his internal IT guys
about packaging on Linux.
Because you know why?
It's just a pain in the butt.
Yeah, and there's too many options.
Too many options, and they all have weird trade-offs.
And they ended up just doing PPAs, private PPAs.
And for those listening who don't know,
the build service will create distribution packages
for all the major distros.
You give it your software, and it'll
handle the five different RPMs you'll
need for all the different Fedoras and the dev packages
and all of that.
Even if I did end up having Ubuntu servers in front
of the SUSE infrastructure, for instance,
I don't know why I wouldn't keep using the build
service on SUSE building for these other distros.
And maybe I'm a little backwards on this, but to me,
that is a bit of an indictment of SUSE
and their overall influence, that they have created
something so special that does absolutely have users
and does see growth, but it doesn't have the mindshare
and usage that it really should.
And if this was a Fedora-backed or a Red Hat-backed initiative
or a Linux Foundation initiative, I have a sense
it would have 10 times the recognition.
As a comparison, I bet you people
have heard of the Linux vendor service, the LVFS,
10 times more than they've heard of the open SUSE build service.
But not in Munich.
And now Plant City, Florida, the two strongholds.
You know, we got an email from a guy out of Florida,
and I think he's along your line of thinking here.
He says it's good for business and corporate development.
And honestly, I ran bank core servers on SUSE Enterprise
Server for a long time.
And it was just the eventual, like,
straw that broke the camel's back was it was an issue.
It was just a stupid issue in a DNS resolver library,
actually, that after a ton of time,
we were able to self-patch even.
But it just was the straw.
After we had resolved that particular issue,
I was just done deploying Sless.
But I did run it probably two and a half, three years
on more and more systems, especially for just one tech
managing all of those boxes.
There were some things I really liked about it.
So I don't think you're totally crazy.
But if you had hired me as a consultant
to help you build out a data center infrastructure,
I'd still be trying to advise you not to use SUSE.
It's interesting.
See, I could be wrong, right?
You might be able to convince me, though.
I mean, you're starting to kind of make me see it your way.
I'm starting to kind of see your perspective on it
and think, OK, I can see it working in this use case.
Because I do honestly might think
it does have its legitimate use cases.
I just don't think there's as many as all the other distros.
Well, see, so the failback position for me
is even if the core, like the internal infrastructure,
remains SUSE, I can use OBS to just build packages
for, like, Ubuntu.
And I'm fine.
Yeah.
And the reality is, between virtualization and containers,
it really doesn't matter what your host OS is.
It just doesn't anymore.
I mean, you can make it matter.
Docker all the things, right?
Yeah.
Exactly.
That's just it.
And really, as long as you're happy
and you can manage the base OS, then
it's really about the applications running
on top of that.
And you know how you can orchestrate those containers?
Oh, how's that?
Using Rancher, which is owned by SUSE.
Yes!
There you go.
Very good.
I had to get it in there.
Coder.show slash contact if you have thoughts on this topic.
Get the hell out of here.
Datadog.com slash Coder Radio.
Go there to get a 14-day free trial.
And if you put an agent on a machine, a free t-shirt, too.
Today's episode of Coder Radio is sponsored by Datadog,
the monitoring and analytics platform for cloud scale
infrastructure and applications.
See inside any stack, any app, at any scale, anywhere.
In 2010, Datadog's founder set out
to create a product that would reduce friction between
developers and system administration teams, which
they'd experienced in prior work.
You see Datadog's machine learning-based alerts,
customizable dashboards, and over 400
vendor-backed integrations make it
easy to unify disparate data sources
and pivot between correlated metrics and events
for faster troubleshooting.
By combining metrics, traces, and logs in one place,
in one dashboard, you can easily improve your application's
performance and keep an eye on what's going on.
Datadog also gives you observability
into containers, speaking about containers just a moment ago.
Get detailed insights into Docker performance
about what those containers are doing.
You can try Datadog for free and start a 14-day trial
and receive a free t-shirt once you install the agent
if you visit Datadog.com slash Coder Radio.
See how you can unify your monitoring today.
You can see it all in one place with Datadog.
Datadog.com slash Coder Radio.
So Mr. Dominic, you received your iPhone 12.
What do you think?
I think if I don't get a case within the next hour and a half,
I'm going to have a lot of problems.
So you just got this thing.
I just got it.
Yeah, this, I don't know if I should call it matte,
because I.
Come on now, give it your best.
Come on, you can do it.
This back, this back texture, it's
almost like it's designed to get me to spend
more money on Apple products.
There's some more bacon.
I cannot keep a grip on this damn thing.
Which one did you get?
I got the blue 12.
OK.
Oh, OK.
All right, the Pacific blue one, huh?
Pacific.
Is the blue as nice as it looks in the pictures?
I actually like it a lot, yeah.
And any noticeable improvements with the first few minutes
you've had it?
Yeah, I mean, I've had it about a couple hours.
It feels nice holding it.
The pictures are definitely significantly better.
Oh, really?
But my phone is the two models back.
So this is a nice upgrade.
So this is a nice upgrade for me.
It feels bigger, but I held them side by side.
I think it's because there's less bezel.
This is actually the first time I
did the transfer from one iPhone to another thing.
Usually I set it up manually.
And that has worked surprisingly well,
except I can't figure out how to get Authenticator
to transfer my stuff over.
The logging in the two factor takes forever now.
Yeah, I can't seem to get that working.
But that's probably because I'm dumb.
You're going to have to probably go rescan
QR codes and whatnot and just set them back up again.
Yeah, I found a thing on, like, because I
use Google Authenticator.
Oh, spoilers.
It seems to want me to scan multiple, like, every barcode.
Yeah.
That's going to be a process.
It's a good time.
Yeah, it's a lot of fun.
Yeah, and don't mess it up.
And don't forget.
I have decided to hold off.
I think I'm going to get the mini.
Interesting.
When I do get it.
I am on the upgrade program.
And technically, switching to the mini makes it cheaper.
So I think I'm going to go that route.
I'm a little worried about a downgrading camera.
Well, I can tell you with the Pro, I'm a little worried.
Like, I carry my iPhone in my pocket,
like my front pant pocket.
Yeah.
And I'm not sure that I would want to do that anymore.
Do you do screen in or screen out?
So it's in your pocket.
Which way is the screen facing?
Usually against my leg, if I remember.
Yeah.
So that way, if you bump into something,
you hit the back of the phone.
You hit the back of it.
But I'm thinking I'm going to have to do something.
So I'm just holding them side by side.
It's definitely taller.
I'm looking forward to a smaller phone,
because I know it's just going to fit anywhere
my current phone fits.
That phone's going to fit just even better.
And I have been waiting for a small, fast phone.
I don't want a compromised phone.
And there is a bit of a compromise with the cameras.
But other than that, this seems like a pretty solid little
phone.
And more than anything, that's what I'm excited about.
I also wonder if this might be the last iPhone
I get for a while.
Oh, jeez.
Because I could definitely see the ports going away
after this one.
Really?
Yeah.
I mean, if they're going to do it, right?
They introduced the MagSafe charger,
the wireless charging at a faster rate, 15 watts,
whoopty whoop.
Yeah, that's not that fast.
They've had wireless carplay for a while,
although I don't really know how much adoption it's gotten.
The AirPods, the HomePods, they're all wireless.
And they've switched the lightning cable
to USB-C on the other end.
So I think it's way more likely they just
go portless than it is they ever go to USB-C.
I freaking hope I'm wrong.
But we'll see.
We'll see.
I don't think we'll find out for a little bit.
So maybe I'll just hang out with a tiny little phone
for as long as it lasts, and then I'd be fine with that.
As we record, Apple has announced their ARM Mac event
takes place next week, the day after we record.
It's the second time they've done that to us.
You really pissed them off years ago, you know?
Oh, yeah.
Yeah, they're just sitting there in a rage, right?
Yeah.
Tim Cook.
Yeah.
Obviously, it's Tim Cook.
Yeah, so you're going to get your Silicon Macs?
Are you excited?
I might be too excited.
Really?
Really?
I'm really expecting this to be kind of a devastating blow
to the industry.
Ooh, you think the performance is going
to be that off the charts?
I think the battery life is going to be that off the charts.
Oh, you think they're going to be anything that's like, what,
18 hours?
I mean, what's off the charts?
I'm thinking we could hit the big 2.0.
20 hours?
I know it's crazy, but why go through all this hassle?
Yeah, I mean, I keep thinking back to the iPad
and how freaking fast the iPad Pro is.
And it's got no fan.
It's impossibly thin.
If you just gave that thing more cooling and more cores
and more battery, you could probably
get an iPad Pro to 24 hours of battery life
if you could just make it thick enough, like a laptop.
Right, see, my question is, are we going down
from a MacBook Air?
I think it's really coming down from a 13-inch MacBook Pro.
Or are we coming up from an iPad Pro?
That's where I'm getting a little confused.
I think also you're kind of counting on Apple
to do something that has not been in their, well,
hasn't always been in their nature.
And that is they've always gone thinner and lighter
when they can, with some recent exceptions,
like the MacBook Pro 16 and the new iPads.
But they've generally always got those suckers
as thin and light as possible.
So I feel like if it's possible, although I
could see them wanting to blow the doors off battery life,
I could also see them saying all-day battery
life is good enough.
We're just going to say it has all-day battery life.
And what that really will translate to is 8 to 12 hours.
And they'll just reduce space and weight instead
of going any further than that.
Again, it's GNOME, man.
It's GNOME.
I think they're going to want to have a developer story here
that this blows the pants off of their previous generation
products.
Yeah, the speculation is two laptops, a MacBook Air
and the MacBook 13.
I could see that the 13 one could be targeted right
at developers.
Or they could wait.
They could wait till they get to the bigger laptops.
And that's where they really put in the 20-hour battery life.
I don't know.
I guess we don't really need to speculate.
We'll find out soon enough.
What would it take for you to drop money on a new laptop,
though?
What would it take?
Truly nothing.
Just do a good job?
I mean, come on.
What, you're going to just do it?
I mean, I would be tempted if I were you, too.
I absolutely would.
I got to admit, I would be tempted.
I have no business need for it, so I can't justify it.
I mean, I guess there's some, what I would consider,
minuscule chance that they could really mess this up.
But that just doesn't seem likely, does it?
What if the Intel performance, like the x86 emulation,
is just dog crap slow?
And you've got to figure, like, 70% of the stuff you're using
at first is x86 emulated.
But that is the area where they know they have
to protect themselves, right?
Yeah.
Doesn't mean they can change the laws of physics.
Yeah, I mean, we'll see.
We'll see, right?
They could have, I mean, since they're building the silicon,
they can have cores dedicated to virtualization.
I mean, they could really go crazy with it if they wanted to.
That is, sorry.
Fine.
We'll have another helping of Applewood bacon.
I really didn't want to do this because I can feel.
Wow, you're lucky, man.
I don't always bring two helpings of bacon with me.
Oh, please.
I know LadyJuice has just like an entire smoker.
Got a whole fridge full.
I think that they wouldn't be doing this
without this being kind of an iMac circa 1990, whatever, move.
Whoa.
Whoa.
Really do.
I think Dell's going to be crapping their pants.
I think it's going to make all the Surface devices look
like jokes.
I just, it's going to make my iMac Pro feel really sad.
Yeah.
I don't know.
It feels like, remember in World of Warcraft,
if you ever played that for listeners,
you have your Purples, right?
Your epic gear from like Burning Legion.
Then you get a blue or a green and Lich King.
And it's like, oh, that's all garbage now.
So what would stop me from buying it?
There is actually one thing.
Son of a bitch of a butterfly keyboard.
Oh, well, there's no way.
There's no way.
That would be like suicide, right?
Yeah.
I don't know.
I think it's a lock.
You're going to have to use Big Sur.
You'll have no option but use Big Sur on those things.
Oh.
You know what though?
It's going to be like when they did all the candy cane crap.
They're just going to go back, right?
And they're going to undo it.
Have you moved to Catalina?
Oh, god.
Catalina is just lousy.
Well, everything in Catalina is in Big Sur.
No, I'm on Catalina.
OK.
Well, if you can survive it there, you'll be all right.
So Adium doesn't work in Catalina.
No.
No, because the 90s called, and they want their messenger back.
Adium.
What's wrong with Adium?
Nothing.
It's just like seriously old.
It's really old.
Oh, my god.
It's an IRC messenger.
What does it do?
Listen, I have a custom Adium theme
that I've been using for like 12 years.
Oh, I get it.
I get it.
It's just, do you remember when people were on AIM and ICQ?
You know I do.
That's how old Adium is.
Do you remember TextMate?
Because that's what I was.
Yeah, hell yeah.
OK.
So you know what the problem is?
When I'm on Mac, I want to go back in time, right?
Right, right.
Yeah.
And that's not very easy.
Not very easy.
And this is a whole other break with that compatibility
right there.
And part of what gives me the biggest pause is as a developer,
you could make the case that a great MacBook Pro could
be the perfect trifecta.
In an ideal situation, you could run Mac OS, Linux,
and Windows on one machine.
Talk about changing your game and getting
a lot of efficiency out of one piece of hardware.
And then the T1 and T2 chips came along,
and that dream sort of faded, and it became a dual OS.
Possible machine, still very valuable.
And now it's a single OS with virtualization,
and it'll never, ever be anything else.
And I mean, it's not that that's a big problem,
because if you're buying a Mac, you're not buying it
for anything else, really.
But for me, when I'm looking at my tools,
I like my laptop to be able to do multiple things.
And that's just a consideration now.
No boot camp's going to really be a drag.
It's fine, but I think it will be a factor for something.
This is the question, right?
Apple has, I'm trying to put this in a non-flamey way.
There's no non-flamey way, I'm just going to go for it.
Apple has effectively helped create the surge in Linux
desktop use among developers, right?
Oh!
So, I never would have considered it
if they didn't just decide to screw up
for several years, right?
So for them not to just come, and again,
by their own admission, over and over again,
their biggest pro market, one of their most important
market for the Mac, we're talking about our developers.
Yeah, although I think the developers they're talking about
are the developers that write for their ecosystem.
No, they talk about, they were talking about
web developers too, they had a whole thing.
Okay, all right.
Right, ATP was triumphal on it, right?
Okay.
I can't see a world where you get this laptop,
and then you like install Python,
and it's not like amazing, right?
No, I can see a world where Homebrew
doesn't work for a month.
Yes.
Although, they're probably not, right?
They're probably helping the Homebrew team out.
They may already have those Mac Minis.
I'm sure they do, right?
You know, it wasn't that hard to get those
if you wanted one.
Right.
I don't, I guess I'm trying, like,
unless they think this is gonna be like
the college kid dorm laptop,
but it's almost certainly gonna be way too expensive.
Yeah, that'll be something.
With no Intel tax, I wonder what their reason
for keeping the price high will be.
Juicy, thick margins.
What other reason could there be?
Our R&Ds, all the R&Ds they put into it.
That damn license we're gonna have to pay
Nvidia now for R&D.
Ah, I wonder, yeah.
No, I think Apple owns it perpetually.
They got a perpetual license.
Oh.
I'm like, huh.
Okay, Mr. Dominic.
I think we have to try to squeeze in
just a quick chat about the Raspberry Pi 400.
Before we do that, though,
because that's just news that broke today
as we're recording,
I also wanna get a mention in
that you are hiring at the Mad Botter.
Do you wanna give people deets on that?
Yeah, so we're hiring for a Python developer
experience in Flask preferred.
When we say Python, we always mean Python 3
because we are not, in fact, old ones from Lovecraft.
And bonus points if you like SUSE.
Wow, I can't believe that's in there now.
What has happened?
Oh, and you get a System76 workstation or a MacBook,
but almost always a System76.
It's your choice.
How about that?
He lets you choose.
You pick the tool.
So we'll have links and details in the show notes
at coder.show slash 386.
Well, we do have a lot more to get to,
but we're running a little long,
but I kinda wanted to capture your thoughts.
So I'm gonna talk about it tomorrow in Linux Unplugged.
But as the timing comes out,
this morning we woke up to the news
that there is now a Raspberry Pi desktop PC,
and it is a full Raspberry Pi built into,
a Raspberry Pi 4 that's actually 800 megahertz faster,
built into a keyboard with like the USB ports
and HDMI in the back of the keyboard.
It's amazing.
And it's $70, 70 bucks.
Yeah.
Four gigs of RAM, 1.8 gigahertz quad core CPU.
And you get the whole ecosystem of the Raspberry Pi,
all the images, the community.
It's huge.
I think it's great.
It reminds me of the Commodore 64.
Yes, you know, cause you could,
with this HDMI port, you could hook it up to your TV
and you could, you know,
I mean, that was my first computer in my room.
And I had it hooked up to a television,
like through the antenna connector on the back of the TV.
And I just put cartridges in that.
That was my experience with a computer at first.
And that could be all over again.
I mean, I also could see this as a cheap way
for people to learn Linux.
I could see that too, you know, cause 70 bucks.
And then you put Ubuntu on here
and you're playing with Linux now,
or, you know, come with Raspberry OS.
A good computer for a kid that you're trying to teach,
right, young kid, $70, yeah.
I'm just saying, I think this is pretty great.
So I don't know, I guess that's really all I had to say.
I'm very impressed.
I'm still kind of digesting the news
cause we record this kind of in the morning here
in the Pacific Northwest and this just came out.
But I also had that same,
that thought that reminded me of the 80 micro computers
that were plugged into TVs.
Yeah, I think this is great.
I mean, I'm always impressed every release
with the Raspberry Pi folks.
I actually, my four year old has a Raspberry Pi.
Now he's lobbying for the iMac Pro
because he overheard too many episodes of a certain podcast.
And yeah, but this is like the kind of,
when he's a little older,
whatever the successor to this model is,
is exactly perfect, right?
Cause right now I have the Raspberry Pi
in like a 3D printed case and.
Yeah, nice.
It's fastened to the wall.
Right, and they called it the Pi 400 desktop.
So I guess when the Pi 5 is out,
we could probably expect a Pi 500 desktop too.
So they'll probably keep iterating on this.
They now have this,
they have the Raspberry compute module,
which looks really cool,
which has just been updated for the Raspberry Pi 4.
And then they have the Raspberry Pi 4 eight gigabyte,
which I have one of those and that's pretty great.
Nice, now that's a lot of power for a Pi.
I really, I feel like it is.
I run it as a Plex server.
I have my markdown notes on there.
I have a home assistant running on that same instance
that it has hundreds of entries and entities in it,
doing lots of automations.
I mean, I run all of that right now off of a single Pi
and really have no complaints.
They're getting really impressive.
It just sort of blows my mind where we're at.
And it, I don't know,
something special about seeing it in a computer
that for a hundred dollars,
you can get the kit for a hundred dollars
and it includes just everything you need.
And then you just hook it right up to a TV
or a monitor that you have in the house already.
And you're off to the races.
You never know what you could see next from them.
I think they're working on these kinds of things.
I think it's pretty exciting.
Yeah, I think you're gonna see these in schools.
I'm pretty excited.
Oh, wouldn't that be interesting?
Wouldn't that be interesting?
Coder.show slash contact if you have thoughts on that.
Also a big thank you to our Coder QA team.
Go get the Coderly report.
You support the show.
And when you become a Coder QA member,
you get the limited ad feed,
which is available for you once you sign up.
That's at coderqa.co.
That's coderqa.co to support the show
and get that limited ad feed and the Coderly report.
Also, I wanna mention you can find a cloud guru on social.
YouTube, Facebook, Twitter,
it's all just slash a cloud guru.
They've managed to really nab that everywhere.
So it's really simple to find a cloud guru on social
if you wanna pick them up and follow them
because there's often good content on there as well.
You can find Mike on Twitter.
We'll have links to that.
The show's on Twitter as well.
And of course, so is the network at Jupiter Signal.
We do this show live on Mondays,
noon Pacific, 3 p.m. Eastern.
A lot of times there's stuff breaking.
There's news breaking.
I'm chatting with the chat room
before the show starts, about a half hour.
So usually about 11, 30 Pacific.
I'm getting on there and chatting with them
about the news that's break for the week.
And it's a good time.
Come join us, hang out live, name the show,
and all of that at jblive.tv,
noon Pacific, 3 p.m. Eastern.
Thanks so much for joining us on this episode of KOTOR Radio.
And we'll see you right back here next week.
KOTOR Radio is a proud sponsor of KOTOR Radio.
