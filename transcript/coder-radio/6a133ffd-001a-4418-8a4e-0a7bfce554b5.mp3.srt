1
00:00:00,000 --> 00:00:07,000
This is Koda Radio, episode 362 for June 17th, 2019.

2
00:00:31,000 --> 00:00:45,000
Hello and welcome to Koda Radio, Jupiter Broadcasting's weekly talk show that takes a pragmatic look at the art and business of software development and related technologies.

3
00:00:45,000 --> 00:00:53,000
My name is Wes and on the other line, well, it's that fighting Floridian, Mr. Michael Dominic. Welcome to the show, Mike.

4
00:00:53,000 --> 00:00:58,000
Thank you, Wes. And I think we have an often lover with us this week.

5
00:00:58,000 --> 00:01:04,000
Oh, yes. Rejoining us once again in corner number three, Mr. Chris Fisher.

6
00:01:04,000 --> 00:01:07,000
Guys? Oh, yeah, it's Koda Radio time, isn't it?

7
00:01:07,000 --> 00:01:08,000
Oh, it is. We're live.

8
00:01:08,000 --> 00:01:10,000
I mean, I was just in here doing work. I don't know what you guys are doing here.

9
00:01:10,000 --> 00:01:15,000
We got roped in, tied you up to the chair, put a microphone in your face, and now you're with us.

10
00:01:15,000 --> 00:01:22,000
Oh, man. I actually am really glad to be here because there's two topics, at least today, that I have many things to say on, but I feel like I've joined a new cult.

11
00:01:22,000 --> 00:01:27,000
I'm part of a cult member now and I can't wait to tell you guys about it. Life-changing stuff.

12
00:01:27,000 --> 00:01:32,000
You've been raving on it behind the scenes, but you haven't been willing to give us any more details than that.

13
00:01:32,000 --> 00:01:33,000
Save it for the show, you say.

14
00:01:33,000 --> 00:01:34,000
You know how I do.

15
00:01:34,000 --> 00:01:36,000
Yeah, that's pretty smart.

16
00:01:36,000 --> 00:01:39,000
I'm thinking it's HomePod 5 and 6, but that's just my guess.

17
00:01:39,000 --> 00:01:42,000
I can never get away from it.

18
00:01:42,000 --> 00:01:44,000
It's a whole HomePod-powered home theater system.

19
00:01:44,000 --> 00:01:49,000
You know, this HomePod thing is really taking a life of its own because, I kid you not, my wife told me yesterday, she said,

20
00:01:49,000 --> 00:01:52,000
darling, when you die, I'll bury you with one of the HomePods.

21
00:01:52,000 --> 00:01:54,000
HomePod and Levi, right? That's what you need.

22
00:01:54,000 --> 00:01:57,000
You know, Chris, I did join the HomePod club.

23
00:01:57,000 --> 00:02:02,000
Yeah. Okay. Now, be honest with me. Do you like it?

24
00:02:02,000 --> 00:02:07,000
I liked it for the one day I had it, and then my wife heard it and commandeered it.

25
00:02:07,000 --> 00:02:08,000
Oh, that good?

26
00:02:08,000 --> 00:02:10,000
Yeah, they're good.

27
00:02:10,000 --> 00:02:13,000
Yeah, they're good, so I have ordered a second HomePod.

28
00:02:13,000 --> 00:02:22,000
Honestly, if Apple would put Bluetooth in that thing or an aux in, I would graduate this from a joke meme thing to an actual serious recommendation.

29
00:02:22,000 --> 00:02:25,000
Yeah, for me, it's another product of theirs that I admire from afar.

30
00:02:25,000 --> 00:02:29,000
I've heard them. They do sound great. I would probably buy one, but it's useless to me.

31
00:02:29,000 --> 00:02:35,000
The reason why I got it, ultimately, is I took a bet that Apple was going to do more with this thing as time went on.

32
00:02:35,000 --> 00:02:40,000
Like, why would they put, like, an A8 processor in a speaker unless they had some serious intentions?

33
00:02:40,000 --> 00:02:48,000
And now you see with some of the updates that are coming to HomeKit cameras, the HomePods will now be doing on-network analysis of the images.

34
00:02:48,000 --> 00:02:49,000
Really?

35
00:02:49,000 --> 00:02:52,000
Just saying. HomePod gets more useful. Just saying.

36
00:02:52,000 --> 00:02:57,000
Apple is particularly good at that, though, right? I mean, they sort of, the longer-term enablement of features?

37
00:02:57,000 --> 00:03:03,000
Yeah. Yeah, I kind of feel like maybe if they were going to launch it today, though, they'd probably put a screen on there.

38
00:03:03,000 --> 00:03:09,000
Yeah, that's sort of the trend. Sort of the trend of things. But I missed you guys, so it's nice to be back.

39
00:03:09,000 --> 00:03:11,000
It's been a while since we've all been together.

40
00:03:11,000 --> 00:03:13,000
It's lovely to all be here today.

41
00:03:13,000 --> 00:03:14,000
Reunited.

42
00:03:14,000 --> 00:03:17,000
I see you've brought a little toy to the studio.

43
00:03:17,000 --> 00:03:18,000
You want to talk about it?

44
00:03:18,000 --> 00:03:20,000
Yeah, I'm kind of curious.

45
00:03:20,000 --> 00:03:24,000
Well, God, so close to the HomePods. This really makes me look bad.

46
00:03:24,000 --> 00:03:29,000
So I have an iPad. I think the audience knows that. And I think it's actually a pretty great work machine.

47
00:03:29,000 --> 00:03:33,000
I have ISH on there. I have WireGuard for my VPN.

48
00:03:33,000 --> 00:03:39,000
And there is a really great terminal application that I think it's called Tremulus. I can't remember the name.

49
00:03:39,000 --> 00:03:40,000
Tremulus.

50
00:03:40,000 --> 00:03:42,000
Yeah, I just have it on my home screen here.

51
00:03:42,000 --> 00:03:53,000
And this makes SSHing into multiple boxes just totally easy. And then when I found out that I could also add GitHub as just regular files,

52
00:03:53,000 --> 00:03:59,000
like you go in the files app and get access to GitHub repos, it's like, okay, this is actually starting to become a serious little work appliance for me.

53
00:03:59,000 --> 00:04:02,000
And I just happen to like the email and calendaring on iPad better than I do.

54
00:04:02,000 --> 00:04:03,000
Those just work?

55
00:04:03,000 --> 00:04:08,000
Better than they do on Linux. I just don't like going into the web page, and I don't like Thunderbird very much,

56
00:04:08,000 --> 00:04:10,000
and I don't like Evolution very much, and I don't like KML very much.

57
00:04:10,000 --> 00:04:14,000
I don't even consider using it. I just always use the web client. You're right. It's not native.

58
00:04:14,000 --> 00:04:20,000
No, and a lot of times I want to do extra things like I want to take an invoice and I want to export it out to a PDF for expenses,

59
00:04:20,000 --> 00:04:24,000
for expense tracking and whatnot. There's a lot of easy workflows on iOS to do that.

60
00:04:24,000 --> 00:04:31,000
So I added the Bridge keyboard to the iPad, which you may have heard of before. They make keyboards for lots of devices now.

61
00:04:31,000 --> 00:04:37,000
And it's a Bluetooth metal keyboard. The whole thing is a giant battery that charges over USB-C.

62
00:04:37,000 --> 00:04:41,000
So you can actually charge up the iPad a couple of times off your keyboard, which is pretty great.

63
00:04:41,000 --> 00:04:48,000
It's a backlit, full-cordy keyboard that has better key travel and is more comfortable to type on than the MacBook Pro keyboard,

64
00:04:48,000 --> 00:04:53,000
which I grant you is not a high benchmark. So I'm not saying it's the best keyboard ever.

65
00:04:53,000 --> 00:04:56,000
It's not ThinkPad quality, but it's definitely beyond MacBook quality.

66
00:04:56,000 --> 00:05:00,000
But what is really great about it, and I encourage you to go look it up, it's the Bridge keyboard.

67
00:05:00,000 --> 00:05:08,000
It makes the iPad like a full laptop. The screen has an arm that you can tilt at any angle you like.

68
00:05:08,000 --> 00:05:13,000
It is nice and metal, so it feels all really sturdy.

69
00:05:13,000 --> 00:05:16,000
The fit and finish, it looks like Apple could have made it, really.

70
00:05:16,000 --> 00:05:18,000
Oh, for sure. Yeah, absolutely. Take a look at it.

71
00:05:18,000 --> 00:05:23,000
If you've been thinking about just getting a little work appliance that is foolproof,

72
00:05:23,000 --> 00:05:28,000
like sometimes my displays are screwed up on my workstation or sometimes Comcast goes down,

73
00:05:28,000 --> 00:05:32,000
the iPad is kind of like my anxiety pill for that.

74
00:05:32,000 --> 00:05:37,000
I know that the iPad, I can open up this screen, it's always going to turn on, it's got an AT&T card in there,

75
00:05:37,000 --> 00:05:40,000
so it's always going to connect to the internet, even when Comcast goes down.

76
00:05:40,000 --> 00:05:44,000
I wonder, is this part of the advantage of it? I mean, it's getting more and more general purpose, right?

77
00:05:44,000 --> 00:05:51,000
But it was kind of started as a different type of computing, doing things differently with more limitations, but simplified.

78
00:05:51,000 --> 00:05:55,000
So it is tempting, right? You've got these Linux machines, and either they're kind of fussy to use

79
00:05:55,000 --> 00:05:59,000
or they're a machine you're using for sort of playing and testing.

80
00:05:59,000 --> 00:06:03,000
And not only can't you do that on the iPad, but you're not really drawn to.

81
00:06:03,000 --> 00:06:06,000
So you've left it alone as an isolated device just for certain workflows.

82
00:06:06,000 --> 00:06:10,000
Exactly. And kind of going back to something we've talked about a lot on this show,

83
00:06:10,000 --> 00:06:14,000
is it's really hard to get the perfect workstation. You've got to make a compromise somewhere.

84
00:06:14,000 --> 00:06:17,000
And this is sort of like an escape hatch for some of those compromises.

85
00:06:17,000 --> 00:06:19,000
But additionally, like we were talking about with the HomePod,

86
00:06:19,000 --> 00:06:22,000
you kind of can plan on Apple making this a lot better over time.

87
00:06:22,000 --> 00:06:26,000
So it starts, the iPad Pro, this 11-inch when they first shipped it.

88
00:06:26,000 --> 00:06:30,000
The reviews came out, the number one knock is no file storage access.

89
00:06:30,000 --> 00:06:32,000
You know, you can't hook up storage devices.

90
00:06:32,000 --> 00:06:39,000
Well now, in iOS 13, as we all know now, they're not only adding fantastic file external support,

91
00:06:39,000 --> 00:06:42,000
but they're adding local storage support, they're adding SMB support,

92
00:06:42,000 --> 00:06:46,000
but also additionally, they're making Safari a full desktop browser,

93
00:06:46,000 --> 00:06:50,000
which essentially now makes this, to me, just for my use, just as good as a Chromebook.

94
00:06:50,000 --> 00:06:55,000
And when this iPad Pro 11 was announced, it was at the same time the new Pixel was announced,

95
00:06:55,000 --> 00:06:59,000
that is a Chrome OS, really nice machine that I really considered,

96
00:06:59,000 --> 00:07:04,000
because Linux Academy is all in on the Google app side, and that's where we live.

97
00:07:04,000 --> 00:07:07,000
So I thought, well, maybe I should get a Google device.

98
00:07:07,000 --> 00:07:11,000
I bet that that wouldn't be that polished and that this would be limited,

99
00:07:11,000 --> 00:07:13,000
the iPad would be limited, but in a year or so, they would add more to it.

100
00:07:13,000 --> 00:07:15,000
And that's exactly what's happened.

101
00:07:15,000 --> 00:07:19,000
There is something to the approach, and I think we could all internalize this a little bit,

102
00:07:19,000 --> 00:07:25,000
of just solving the problems you can at the time, but the slow and steady pace of improvement,

103
00:07:25,000 --> 00:07:27,000
instead of just trying to launch everything at once.

104
00:07:27,000 --> 00:07:31,000
What it feels like with the iPad and the HomePod is the stuff they're rolling out now,

105
00:07:31,000 --> 00:07:37,000
they already had on the roadmap a year ago, but they just, they kept it in-house an extra year,

106
00:07:37,000 --> 00:07:40,000
they let it bake an extra year before they ship it.

107
00:07:40,000 --> 00:07:43,000
Right, they're not always playing the first to market sort of thing.

108
00:07:43,000 --> 00:07:47,000
They have enough of their own space to play in that they can afford to get it right.

109
00:07:47,000 --> 00:07:50,000
And I think, I think this might be why I'm starting to,

110
00:07:50,000 --> 00:07:54,000
there's certain things I just really like about Fedora, and I think it's some of that same,

111
00:07:54,000 --> 00:07:59,000
there's certain groundwork they lay down that I follow for a while, and then it lands in each release.

112
00:07:59,000 --> 00:08:01,000
Like, I just started playing around with PipeWire.

113
00:08:01,000 --> 00:08:05,000
You know, I've been watching that land now for a while, and it's been a slow, gradual build.

114
00:08:05,000 --> 00:08:11,000
It's an interesting, it's an interesting way to build a product, and there's just lots of different approaches,

115
00:08:11,000 --> 00:08:15,000
and I think that's the kind of approach that works well for me, a continuous, slow, gradual improvement.

116
00:08:15,000 --> 00:08:22,000
I'm wondering how that compares to some of the drama we saw over the approach to features in the GNOME desktop.

117
00:08:22,000 --> 00:08:27,000
Because some of the iPad development reminds me, you know, it's a little bit, it's a little bit slower,

118
00:08:27,000 --> 00:08:31,000
and, you know, there's plenty of drama around removing features or changing the look and feel of things,

119
00:08:31,000 --> 00:08:35,000
but it seems like the underlying philosophy was kind of similar, right?

120
00:08:35,000 --> 00:08:39,000
Get a few things right, minimize stuff, focus there, and eventually, as we've seen,

121
00:08:39,000 --> 00:08:43,000
some of the features we lost, they've come back in different or more refined ways.

122
00:08:43,000 --> 00:08:47,000
I kind of clearly do remember, like, around GNOME 3.12 or something, like, things really took a turn,

123
00:08:47,000 --> 00:08:49,000
and it just became a real steady, and same with Plasma.

124
00:08:49,000 --> 00:08:52,000
That's one of the things I think, why Plasma is so great right now.

125
00:08:52,000 --> 00:08:54,000
Certain product life cycles, it's pretty nice.

126
00:08:54,000 --> 00:08:56,000
So, I noticed you guys have been doing this challenge thing.

127
00:08:56,000 --> 00:08:58,000
This is, how come we never thought of this, Mike?

128
00:08:58,000 --> 00:08:59,000
It sounds kind of fun.

129
00:08:59,000 --> 00:09:00,000
Just a lot of work, though.

130
00:09:00,000 --> 00:09:02,000
Who has time for challenges?

131
00:09:02,000 --> 00:09:05,000
I know, it's a lot of work, and Wes does not make it easy.

132
00:09:05,000 --> 00:09:06,000
No.

133
00:09:06,000 --> 00:09:08,000
Well, I mean, you said you wanted a challenge.

134
00:09:08,000 --> 00:09:09,000
You know what?

135
00:09:09,000 --> 00:09:13,000
I got to say, this last one, you really got me.

136
00:09:13,000 --> 00:09:15,000
So, Reason ML.

137
00:09:15,000 --> 00:09:19,000
Much like Lawrence of Arabia, I went to OCaml.

138
00:09:19,000 --> 00:09:23,000
Now, I have never done anything in the OCaml world.

139
00:09:23,000 --> 00:09:26,000
If you don't know what I'm talking about when I say OCaml,

140
00:09:26,000 --> 00:09:29,000
it's because you are under the age of 50.

141
00:09:29,000 --> 00:09:35,000
Yeah, can you maybe, for the viewers not familiar with this obscure ML variant,

142
00:09:35,000 --> 00:09:39,000
maybe obscure is too strong a word in that I told you to use it,

143
00:09:39,000 --> 00:09:40,000
but can you break it down a little bit?

144
00:09:40,000 --> 00:09:43,000
What's the deal with OCaml, and how does Reason fit?

145
00:09:43,000 --> 00:09:46,000
Yeah, so OCaml is like a, it is a language itself,

146
00:09:46,000 --> 00:09:50,000
but also like a language that other languages interop with and work with.

147
00:09:50,000 --> 00:09:55,000
It's like a whole world that is deeply mature and deeply complicated.

148
00:09:55,000 --> 00:09:59,000
Reason ML, or I often see it written as Reason, so I'm not sure.

149
00:09:59,000 --> 00:10:01,000
It looks like the official name is Reason ML,

150
00:10:01,000 --> 00:10:04,000
but they call it Reason in some of their docs,

151
00:10:04,000 --> 00:10:11,000
is basically a, I'm going to say like dialect almost of OCaml

152
00:10:11,000 --> 00:10:15,000
that can compile to JavaScript.

153
00:10:15,000 --> 00:10:19,000
Because when we need to compile, there's only one thing we're compiling to.

154
00:10:19,000 --> 00:10:21,000
That's right, it's got to be JavaScript.

155
00:10:21,000 --> 00:10:25,000
And they have an entire, which I love by the way,

156
00:10:25,000 --> 00:10:30,000
an entire page that says what and why as the heading for the page.

157
00:10:30,000 --> 00:10:34,000
So I ended up having to actually read up on OCaml

158
00:10:34,000 --> 00:10:38,000
to understand what was going on here, right?

159
00:10:38,000 --> 00:10:44,000
Basically Reason is a JavaScript interoperable language,

160
00:10:44,000 --> 00:10:47,000
and it can also compile to native code

161
00:10:47,000 --> 00:10:51,000
like a more traditional OCaml type application.

162
00:10:51,000 --> 00:10:54,000
It is considered a systems language,

163
00:10:54,000 --> 00:10:58,000
much like let's say a Rust for instance,

164
00:10:58,000 --> 00:11:00,000
to an application development language like a, you know,

165
00:11:00,000 --> 00:11:03,000
a la, I don't know, C sharp, Objective-C, Java,

166
00:11:03,000 --> 00:11:05,000
most of the more common things.

167
00:11:05,000 --> 00:11:09,000
But holy crap is it fast.

168
00:11:09,000 --> 00:11:11,000
Now there's kind of two variants I found, Wes,

169
00:11:11,000 --> 00:11:13,000
and you can correct me where I'm wrong.

170
00:11:13,000 --> 00:11:16,000
There's the native where you're like literally writing native code

171
00:11:16,000 --> 00:11:19,000
that compiles, that just runs super fast.

172
00:11:19,000 --> 00:11:22,000
But then there's also this JavaScript interoperability

173
00:11:22,000 --> 00:11:27,000
using a, it gets better, intermediary layer called BuckleScript.

174
00:11:27,000 --> 00:11:29,000
Of course.

175
00:11:29,000 --> 00:11:30,000
Isn't that a fun name?

176
00:11:30,000 --> 00:11:33,000
So many, so many things here.

177
00:11:33,000 --> 00:11:36,000
You install Reason via NPM.

178
00:11:36,000 --> 00:11:37,000
Of course.

179
00:11:37,000 --> 00:11:39,000
Which, I mean, that does kind of fit though, right?

180
00:11:39,000 --> 00:11:41,000
I mean, that's how you install TypeScript for instance.

181
00:11:41,000 --> 00:11:42,000
Exactly, yeah.

182
00:11:42,000 --> 00:11:45,000
I found the install weirdly challenging.

183
00:11:45,000 --> 00:11:47,000
I ended up having to go into the Reason Discord and ask for help

184
00:11:47,000 --> 00:11:49,000
because I just couldn't get it to work.

185
00:11:49,000 --> 00:11:52,000
How responsive were they when you went into the community?

186
00:11:52,000 --> 00:11:55,000
They were very happy that people were using it.

187
00:11:55,000 --> 00:11:56,000
Oh, good.

188
00:11:56,000 --> 00:11:59,000
But it's not, I don't mean to say it's like a super small community at all.

189
00:11:59,000 --> 00:12:01,000
Actually, Reason is developed by the people who developed React.

190
00:12:01,000 --> 00:12:04,000
In other words, Facebook, right?

191
00:12:04,000 --> 00:12:09,000
And, oh, that is another flavor of Reason, React and React Native.

192
00:12:09,000 --> 00:12:11,000
So it's high level here.

193
00:12:11,000 --> 00:12:16,000
We have Reason running natively just like OCaml.

194
00:12:16,000 --> 00:12:20,000
We have Reason using BuckleScript

195
00:12:20,000 --> 00:12:23,000
running just like a JavaScript replacement, right?

196
00:12:23,000 --> 00:12:26,000
And indeed, just straight interrupt with JavaScript.

197
00:12:26,000 --> 00:12:29,000
We have Reason with React and Reason with React Native.

198
00:12:29,000 --> 00:12:34,000
It is actually a pretty cool, deeply complicated language.

199
00:12:34,000 --> 00:12:38,000
So, like, just getting set up I found hard, but that might just be me.

200
00:12:38,000 --> 00:12:40,000
Rocks, like the type system, right?

201
00:12:40,000 --> 00:12:43,000
So they give you what they feel are like their five top things.

202
00:12:43,000 --> 00:12:45,000
Rock solid type system.

203
00:12:45,000 --> 00:12:48,000
Yeah, so Reason doesn't want you to screw up, basically.

204
00:12:48,000 --> 00:12:49,000
Much like a Rust.

205
00:12:49,000 --> 00:12:52,000
So I found a very helpful comparison to Rust in general.

206
00:12:52,000 --> 00:12:58,000
Basically, it's not going to make it easier for you to do stupid things.

207
00:12:58,000 --> 00:13:01,000
For instance, there's no such thing as null, right?

208
00:13:01,000 --> 00:13:03,000
Anywhere you would think to use a null,

209
00:13:03,000 --> 00:13:06,000
you're going to be using there's an optional type in Reason.

210
00:13:06,000 --> 00:13:11,000
Now, you can put optionals everywhere and not write super tight code,

211
00:13:11,000 --> 00:13:14,000
but from what I was looking at reading all the samples

212
00:13:14,000 --> 00:13:17,000
and kind of playing with it on my own,

213
00:13:17,000 --> 00:13:20,000
it's not like Swift where everything is going to be optional, right?

214
00:13:20,000 --> 00:13:25,000
It's not, you know, Swift, you're slinging question marks all over the place.

215
00:13:25,000 --> 00:13:26,000
Right.

216
00:13:26,000 --> 00:13:29,000
In Reason, it's more like if you need to, you can.

217
00:13:29,000 --> 00:13:31,000
They say it's simple.

218
00:13:31,000 --> 00:13:33,000
I don't agree, but that's fine.

219
00:13:33,000 --> 00:13:34,000
Really?

220
00:13:34,000 --> 00:13:36,000
So what don't you find simple about it?

221
00:13:36,000 --> 00:13:39,000
I found the setup actually weirdly hard.

222
00:13:39,000 --> 00:13:42,000
It almost felt like there was a different setup process,

223
00:13:42,000 --> 00:13:44,000
particularly for the native stuff, right?

224
00:13:44,000 --> 00:13:47,000
The easiest setup was actually the Reason React.

225
00:13:47,000 --> 00:13:48,000
Interesting.

226
00:13:48,000 --> 00:13:51,000
Because there's a super helpful quick start

227
00:13:51,000 --> 00:13:55,000
that basically just gives you a template.

228
00:13:55,000 --> 00:14:01,000
But once I got it running, I mean, wow, it's fast.

229
00:14:01,000 --> 00:14:02,000
Yeah?

230
00:14:02,000 --> 00:14:03,000
Yeah.

231
00:14:03,000 --> 00:14:06,000
So the tooling is another thing I found interesting

232
00:14:06,000 --> 00:14:11,000
because NPM for native development is weird to me,

233
00:14:11,000 --> 00:14:14,000
but I think that's the direction we're just going in.

234
00:14:14,000 --> 00:14:15,000
Right.

235
00:14:15,000 --> 00:14:18,000
And then you have the other camp where not having it on NPM

236
00:14:18,000 --> 00:14:20,000
is a big downer for them, and they don't want to,

237
00:14:20,000 --> 00:14:23,000
it's like, oh, I have to install a separate build tool chain and stuff.

238
00:14:23,000 --> 00:14:24,000
Oh, sure, yeah, sure, sure.

239
00:14:24,000 --> 00:14:25,000
But you're right.

240
00:14:25,000 --> 00:14:27,000
Like, either you hate NPM or love NPM.

241
00:14:27,000 --> 00:14:30,000
Either way, it's kind of a pain.

242
00:14:30,000 --> 00:14:32,000
Yeah, no, it really was interesting.

243
00:14:32,000 --> 00:14:34,000
I mean, there were a few concepts that I pointed out in the doc.

244
00:14:34,000 --> 00:14:36,000
I am not going to go line by line through this,

245
00:14:36,000 --> 00:14:41,000
but in particular, I found the variant,

246
00:14:41,000 --> 00:14:43,000
basically it's a data structure in Reason,

247
00:14:43,000 --> 00:14:45,000
to be actually pretty cool.

248
00:14:45,000 --> 00:14:46,000
Yeah, I love their introduction.

249
00:14:46,000 --> 00:14:50,000
Behold, the crown jewel of Reason data structures.

250
00:14:50,000 --> 00:14:54,000
Most data structures in most languages are about this and that, right?

251
00:14:54,000 --> 00:14:56,000
Like an object with a couple fields,

252
00:14:56,000 --> 00:15:00,000
a variant allows us to express this or that.

253
00:15:00,000 --> 00:15:04,000
Yeah, and then you can do like fancy stuff with default cases.

254
00:15:04,000 --> 00:15:07,000
And the syntax is just super tight.

255
00:15:07,000 --> 00:15:11,000
Like, I could see if you were really worried about performance

256
00:15:11,000 --> 00:15:14,000
or wanted really hardcore safe functional,

257
00:15:14,000 --> 00:15:17,000
I guess, a hardcore safe functional replacement for your JavaScript,

258
00:15:17,000 --> 00:15:19,000
this would make a lot of sense.

259
00:15:19,000 --> 00:15:20,000
Like, there's actually, I put in the show notes,

260
00:15:20,000 --> 00:15:22,000
again, I'm not going to go too deep into it.

261
00:15:22,000 --> 00:15:26,000
But Ken Wheeler did a pretty good talk in 2018,

262
00:15:26,000 --> 00:15:30,000
where he's basically, in pretty blunt terms,

263
00:15:30,000 --> 00:15:32,000
recommending Reason as, you know,

264
00:15:32,000 --> 00:15:37,000
if you're writing large Node or NPM-based JavaScript code bases,

265
00:15:37,000 --> 00:15:40,000
consider using Reason for all the safety you basically get for free.

266
00:15:40,000 --> 00:15:44,000
It's a very similar argument to, I think, that Rust developers make, right?

267
00:15:44,000 --> 00:15:46,000
Like, yes, you have to follow these rules,

268
00:15:46,000 --> 00:15:49,000
and maybe every once in a while it's frustrating,

269
00:15:49,000 --> 00:15:54,000
but there's just like a whole category of error that you cannot actually commit.

270
00:15:54,000 --> 00:15:57,000
Right, and I mean, it might be a big helper, too,

271
00:15:57,000 --> 00:16:00,000
if you have a large team working on the same application

272
00:16:00,000 --> 00:16:02,000
coming from different backgrounds and perspectives,

273
00:16:02,000 --> 00:16:05,000
or you're, you know, coming back a year later to do an update

274
00:16:05,000 --> 00:16:07,000
on a project you may have worked with a client on

275
00:16:07,000 --> 00:16:09,000
and sort of forgot everything that was there.

276
00:16:09,000 --> 00:16:11,000
You've got these nice types laid out for you.

277
00:16:11,000 --> 00:16:12,000
It's true.

278
00:16:12,000 --> 00:16:13,000
It's got built-in pattern matching,

279
00:16:13,000 --> 00:16:15,000
all the standards you've come to find

280
00:16:15,000 --> 00:16:18,000
in, you know, functional ML style languages these days.

281
00:16:18,000 --> 00:16:22,000
I'm curious, Mike, the comparison to F Sharp,

282
00:16:22,000 --> 00:16:24,000
because F Sharp also has a lot of these goodies, you know,

283
00:16:24,000 --> 00:16:26,000
inspired by some of the same predecessors.

284
00:16:26,000 --> 00:16:28,000
And there's Fable, right?

285
00:16:28,000 --> 00:16:32,000
There's also a JavaScript compilation option.

286
00:16:32,000 --> 00:16:36,000
Do you have any insights into why you might choose one or the other,

287
00:16:36,000 --> 00:16:37,000
or if Reason is tempting to you?

288
00:16:37,000 --> 00:16:40,000
I know you're already in love with F Sharp.

289
00:16:40,000 --> 00:16:44,000
Yeah, F Sharp is, so actually,

290
00:16:44,000 --> 00:16:47,000
the whole F Sharp thing, whether I'm in love with it or not,

291
00:16:47,000 --> 00:16:49,000
I feel like Reason takes functional paradigms

292
00:16:49,000 --> 00:16:51,000
a lot more seriously than F Sharp does.

293
00:16:51,000 --> 00:16:54,000
In particular, F Sharp has a lot of escape valves, right?

294
00:16:54,000 --> 00:16:56,000
And a lot of that's a side effect of having to interrupt

295
00:16:56,000 --> 00:17:00,000
with C Sharp and the.NET platform.

296
00:17:00,000 --> 00:17:02,000
I know people are going to be mad.

297
00:17:02,000 --> 00:17:05,000
I don't think Fable's really a serious thing.

298
00:17:05,000 --> 00:17:08,000
Reason, in terms of the buckle script

299
00:17:08,000 --> 00:17:12,000
and the JavaScript interop, seems a lot more mature

300
00:17:12,000 --> 00:17:16,000
and, frankly, a lot more performant right now.

301
00:17:16,000 --> 00:17:18,000
There is some dependency on JavaScript engines,

302
00:17:18,000 --> 00:17:21,000
like everything else in the JavaScript world, but...

303
00:17:21,000 --> 00:17:23,000
Yes, of course, it depends on where you're running

304
00:17:23,000 --> 00:17:26,000
and how fast it is and how good the JIT is, probably.

305
00:17:26,000 --> 00:17:29,000
Right, I could almost see a progression, right?

306
00:17:29,000 --> 00:17:31,000
In fact, I'm working on something that I'm calling

307
00:17:31,000 --> 00:17:34,000
the functional gateway drug, where F Sharp is basically

308
00:17:34,000 --> 00:17:37,000
your core's light, and then, I don't know,

309
00:17:37,000 --> 00:17:40,000
something else is just moving up and up the chain

310
00:17:40,000 --> 00:17:44,000
until you end up at like Haskell, basically.

311
00:17:44,000 --> 00:17:46,000
Where Reason feels a few...

312
00:17:46,000 --> 00:17:48,000
It's almost stricter, right?

313
00:17:48,000 --> 00:17:50,000
I think that's maybe the right word,

314
00:17:50,000 --> 00:17:52,000
but I don't mean it in a negative way.

315
00:17:52,000 --> 00:17:54,000
Where F Sharp is basically, okay,

316
00:17:54,000 --> 00:17:56,000
you don't have to do this if you don't want to.

317
00:17:56,000 --> 00:17:59,000
Reason is, no, you definitely do.

318
00:17:59,000 --> 00:18:02,000
Having said that, it does interrupt with JavaScript, right?

319
00:18:02,000 --> 00:18:05,000
You could, in theory, break all of that.

320
00:18:05,000 --> 00:18:07,000
It took me a week to figure this out,

321
00:18:07,000 --> 00:18:10,000
but you can actually import native OCaml dependencies

322
00:18:10,000 --> 00:18:11,000
into Reason.

323
00:18:11,000 --> 00:18:13,000
Oh, very nice.

324
00:18:13,000 --> 00:18:16,000
You can leverage the existing OCaml ecosystem.

325
00:18:16,000 --> 00:18:19,000
Yeah, they call it ESI, but I think it's actually pronounced easy,

326
00:18:19,000 --> 00:18:24,000
E-S-Y, which is basically their package manager for OCaml.

327
00:18:24,000 --> 00:18:25,000
Excellent.

328
00:18:25,000 --> 00:18:26,000
Yeah.

329
00:18:26,000 --> 00:18:28,000
Sounds like you've had quite a little wild ride

330
00:18:28,000 --> 00:18:30,000
in the OCaml and Reason ecosystem.

331
00:18:30,000 --> 00:18:32,000
I feel like we went on a journey with Mike.

332
00:18:32,000 --> 00:18:34,000
Do you think you would actually use it?

333
00:18:34,000 --> 00:18:35,000
Are you interested?

334
00:18:35,000 --> 00:18:37,000
It's not like you found some of it tedious.

335
00:18:37,000 --> 00:18:38,000
I'm curious.

336
00:18:38,000 --> 00:18:40,000
People obviously love the OCaml compiler

337
00:18:40,000 --> 00:18:43,000
and having nice inferred types and a smart compiler

338
00:18:43,000 --> 00:18:45,000
that can help you do all this stuff

339
00:18:45,000 --> 00:18:47,000
without ideally getting in your way.

340
00:18:47,000 --> 00:18:50,000
Do you think you'd see yourself actually using this language?

341
00:18:50,000 --> 00:18:52,000
Probably not.

342
00:18:52,000 --> 00:18:54,000
Not because I think it's bad,

343
00:18:54,000 --> 00:18:57,000
but because I think it would be hard to sell to a client

344
00:18:57,000 --> 00:19:01,000
this somewhat esoteric language that isn't JavaScript,

345
00:19:01,000 --> 00:19:03,000
which is a thing they know.

346
00:19:03,000 --> 00:19:06,000
But I could see...

347
00:19:06,000 --> 00:19:10,000
I could see a world where Reason goes much more mainstream.

348
00:19:10,000 --> 00:19:13,000
And to be fair, I don't know usage numbers on it, right?

349
00:19:13,000 --> 00:19:15,000
So maybe it's just like I haven't seen it.

350
00:19:15,000 --> 00:19:17,000
Would you consider it if you weren't...

351
00:19:17,000 --> 00:19:20,000
I could see how maybe you wouldn't want to click a client

352
00:19:20,000 --> 00:19:22,000
or something where they would want...

353
00:19:22,000 --> 00:19:25,000
Maybe they would want to switch consultants later down the line.

354
00:19:25,000 --> 00:19:27,000
I'm just wondering if you might use it

355
00:19:27,000 --> 00:19:29,000
if you're building something for yourself

356
00:19:29,000 --> 00:19:32,000
or a service you were running where you maintained complete control

357
00:19:32,000 --> 00:19:34,000
that was just your project.

358
00:19:34,000 --> 00:19:36,000
I could definitely see a case where...

359
00:19:36,000 --> 00:19:38,000
Again, because it does interoperate JavaScript,

360
00:19:38,000 --> 00:19:40,000
so I could see some mission-critical business logic

361
00:19:40,000 --> 00:19:43,000
that just has to be right and can't have errors.

362
00:19:43,000 --> 00:19:46,000
Much like I currently use Rust and Rails applications,

363
00:19:46,000 --> 00:19:49,000
where this is important and it has to be right

364
00:19:49,000 --> 00:19:52,000
and I'm willing to sacrifice some dev time for it.

365
00:19:52,000 --> 00:19:54,000
Yeah, I could definitely see that.

366
00:19:54,000 --> 00:19:57,000
Excellent. Well, look at you being a sport, playing around.

367
00:19:57,000 --> 00:20:00,000
That was fun. So now is it your turn next?

368
00:20:00,000 --> 00:20:03,000
Yeah, next time we'll get my report on Kotlin.

369
00:20:03,000 --> 00:20:06,000
I give him easy languages on purpose now.

370
00:20:06,000 --> 00:20:08,000
That's a lot of setup, though.

371
00:20:08,000 --> 00:20:10,000
Speaking of setup, that could be a lot of setup to get going,

372
00:20:10,000 --> 00:20:12,000
unless you have anything installed already.

373
00:20:12,000 --> 00:20:15,000
You have to install a gigantic Java-based IDE.

374
00:20:15,000 --> 00:20:17,000
Yeah, that has been interesting.

375
00:20:17,000 --> 00:20:19,000
Oh, you already got it installed?

376
00:20:19,000 --> 00:20:22,000
You're not rushing the homework at the last minute, huh?

377
00:20:22,000 --> 00:20:24,000
I'm trying to, you know.

378
00:20:24,000 --> 00:20:28,000
I'm still working. I'm trying to get a little test Android app built to it.

379
00:20:28,000 --> 00:20:30,000
Oh, nice. So you're going the mobile app. Super cool.

380
00:20:30,000 --> 00:20:32,000
Well, I've been playing with just a little bit.

381
00:20:32,000 --> 00:20:35,000
I played with the command line, and they've got a nice little web client.

382
00:20:35,000 --> 00:20:37,000
You can try it right in the browser,

383
00:20:37,000 --> 00:20:39,000
because guess what? Kotlin also goes to JavaScript,

384
00:20:39,000 --> 00:20:41,000
because everything does these days.

385
00:20:41,000 --> 00:20:43,000
But I wanted to specifically try out playing with an app,

386
00:20:43,000 --> 00:20:46,000
because it's been, A, something I haven't done in a while,

387
00:20:46,000 --> 00:20:51,000
and B, I mean, Google's pushing using Kotlin for Android pretty hard.

388
00:20:51,000 --> 00:20:53,000
Because they hate Oracle.

389
00:20:53,000 --> 00:20:55,000
All right, Wes, so in two weeks from now,

390
00:20:55,000 --> 00:20:59,000
what journey down the functional primrose path am I taking?

391
00:20:59,000 --> 00:21:01,000
Do you want to keep going on the functional?

392
00:21:01,000 --> 00:21:03,000
Because you were right.

393
00:21:03,000 --> 00:21:06,000
You're giving me some a little more mainstream languages.

394
00:21:06,000 --> 00:21:08,000
I'm up for anything.

395
00:21:08,000 --> 00:21:11,000
I was kind of thinking, maybe you should use Go.

396
00:21:11,000 --> 00:21:13,000
Go? Okay. I've actually not really done Go.

397
00:21:13,000 --> 00:21:15,000
All right, Go sounds fun. Go.

398
00:21:15,000 --> 00:21:17,000
That's what I thought.

399
00:21:17,000 --> 00:21:19,000
And especially since we started you out on your journey

400
00:21:19,000 --> 00:21:21,000
with Kotler and with Erlang.

401
00:21:21,000 --> 00:21:22,000
It's true.

402
00:21:22,000 --> 00:21:25,000
Go is another language that's big on its concurrency primitives.

403
00:21:25,000 --> 00:21:27,000
And I'm really curious, too.

404
00:21:27,000 --> 00:21:30,000
And you've been playing with Rust, and while not the same, right?

405
00:21:30,000 --> 00:21:32,000
I mean, Go has a garbage collector. It's a little higher level.

406
00:21:32,000 --> 00:21:35,000
It still excels at a lot of those lower level systems sort of stuff,

407
00:21:35,000 --> 00:21:37,000
especially around networking tasks.

408
00:21:37,000 --> 00:21:39,000
So I could see it being pretty useful to you, Mike.

409
00:21:39,000 --> 00:21:41,000
Oh, the Rust versus Go thing, huh?

410
00:21:41,000 --> 00:21:42,000
I love it.

411
00:21:42,000 --> 00:21:43,000
I know.

412
00:21:43,000 --> 00:21:45,000
Here it comes. Here it comes.

413
00:21:45,000 --> 00:21:47,000
It's going to be a good episode.

414
00:21:47,000 --> 00:21:51,000
We're chatting offline about something that I think is kind of a significant

415
00:21:51,000 --> 00:21:54,000
change in the run of the show.

416
00:21:54,000 --> 00:22:00,000
Years ago, you can find episodes of Mike and I talking about how just simply

417
00:22:00,000 --> 00:22:06,000
distributing your software on Linux is this huge blocker for a lot of developers.

418
00:22:06,000 --> 00:22:11,000
They think, oh, maybe I could port my application to the Linux,

419
00:22:11,000 --> 00:22:13,000
and then I could ship it over there.

420
00:22:13,000 --> 00:22:16,000
And they start looking at the options, and it's a nightmare.

421
00:22:16,000 --> 00:22:18,000
This was especially true when we started the show,

422
00:22:18,000 --> 00:22:21,000
because Mike was looking around, and we were having a lot of conversations

423
00:22:21,000 --> 00:22:23,000
like, do I target for Unity specifically?

424
00:22:23,000 --> 00:22:25,000
Do I target for GNOME?

425
00:22:25,000 --> 00:22:26,000
Does it need to be cute?

426
00:22:26,000 --> 00:22:27,000
Ah, Unity.

427
00:22:27,000 --> 00:22:28,000
Yeah, I know.

428
00:22:28,000 --> 00:22:30,000
I know, Unity was a thing back then, remember?

429
00:22:30,000 --> 00:22:31,000
It's been a while.

430
00:22:31,000 --> 00:22:33,000
But in this time, a lot of things have shifted.

431
00:22:33,000 --> 00:22:40,000
You now have AppImage, Flatpak, and my favorite, Snaps.

432
00:22:40,000 --> 00:22:42,000
I kind of have a mix right now of containers and Snaps.

433
00:22:42,000 --> 00:22:44,000
So like a desktop application, I'm using Snaps.

434
00:22:44,000 --> 00:22:45,000
Sure.

435
00:22:45,000 --> 00:22:47,000
And server-side applications, I'm using containers.

436
00:22:47,000 --> 00:22:51,000
And then when I'm running Fedora, I use quite a bit of Flatpaks.

437
00:22:51,000 --> 00:22:54,000
But I find them to be great.

438
00:22:54,000 --> 00:23:00,000
I find them to be the solution that we were looking for all of those years ago.

439
00:23:00,000 --> 00:23:04,000
And now, if we could go back in time, and you could tell, hey,

440
00:23:04,000 --> 00:23:06,000
just wait a little bit, and then you can package it up as a Snap.

441
00:23:06,000 --> 00:23:07,000
It's coming.

442
00:23:07,000 --> 00:23:08,000
Right, it's coming.

443
00:23:08,000 --> 00:23:09,000
It's coming.

444
00:23:09,000 --> 00:23:10,000
And you have different options with Flatpaks.

445
00:23:10,000 --> 00:23:12,000
You could host your own repository.

446
00:23:12,000 --> 00:23:14,000
You can have your own private thing.

447
00:23:14,000 --> 00:23:16,000
The whole world doesn't even need to know about.

448
00:23:16,000 --> 00:23:18,000
And that works for some.

449
00:23:18,000 --> 00:23:22,000
And then with Snaps, you have the more traditional App Store-style model

450
00:23:22,000 --> 00:23:24,000
that developers are familiar with right now.

451
00:23:24,000 --> 00:23:26,000
There's a company you can go to for support.

452
00:23:26,000 --> 00:23:29,000
There's a central store that all of the users know about.

453
00:23:29,000 --> 00:23:31,000
So discovery is much easier.

454
00:23:31,000 --> 00:23:33,000
And messaging is much easier.

455
00:23:33,000 --> 00:23:35,000
And verification can happen on the platform side.

456
00:23:35,000 --> 00:23:37,000
And there's all these advantages to a central store,

457
00:23:37,000 --> 00:23:38,000
along with their own disadvantages.

458
00:23:38,000 --> 00:23:40,000
And then you've got the AppImage model,

459
00:23:40,000 --> 00:23:45,000
which is probably the most analogous to app on Mac.

460
00:23:45,000 --> 00:23:47,000
Especially like the original stuff.

461
00:23:47,000 --> 00:23:49,000
Yeah, where you download a DMG.

462
00:23:49,000 --> 00:23:51,000
And it's very close to other app bundles.

463
00:23:51,000 --> 00:23:54,000
An AppImage is like an app bundle that's self-contained.

464
00:23:54,000 --> 00:23:57,000
And it's kind of nice for certain applications.

465
00:23:57,000 --> 00:24:01,000
Etcher uses that, which is a GUI application to write to USB.

466
00:24:01,000 --> 00:24:02,000
Oh, yeah, great one, too.

467
00:24:02,000 --> 00:24:04,000
And that's a perfect application for AppImage.

468
00:24:04,000 --> 00:24:07,000
So each has their strengths and use cases.

469
00:24:07,000 --> 00:24:08,000
Honestly, it's funny, too.

470
00:24:08,000 --> 00:24:10,000
AppImage is, you know, we don't talk about it that much.

471
00:24:10,000 --> 00:24:13,000
But it is, any time I download one, I'm actually kind of pleased.

472
00:24:13,000 --> 00:24:14,000
Especially for trying something out.

473
00:24:14,000 --> 00:24:17,000
Because even with snaps, it's easy to remove, whatever.

474
00:24:17,000 --> 00:24:18,000
They're still at an installation step.

475
00:24:18,000 --> 00:24:21,000
It feels a little more like I'm doing something.

476
00:24:21,000 --> 00:24:22,000
And with an AppImage, you can just run it.

477
00:24:22,000 --> 00:24:24,000
And if you never want to run it again,

478
00:24:24,000 --> 00:24:26,000
it's one file to delete right off your file system.

479
00:24:26,000 --> 00:24:28,000
AppImage feels like a low commitment, right?

480
00:24:28,000 --> 00:24:29,000
Whereas a snap and a flat pack,

481
00:24:29,000 --> 00:24:31,000
you are now committed to that application.

482
00:24:31,000 --> 00:24:32,000
And you aren't, really.

483
00:24:32,000 --> 00:24:33,000
I get that, right?

484
00:24:33,000 --> 00:24:36,000
I mean, you can remove it just as easily.

485
00:24:36,000 --> 00:24:37,000
But it's a little more complicated.

486
00:24:37,000 --> 00:24:41,000
And it just seems a little closer to, I don't know, some bullshit Unix philosophy.

487
00:24:41,000 --> 00:24:45,000
Or just the parts, I understand how it works a little bit cleaner than a flat pack

488
00:24:45,000 --> 00:24:48,000
and snaps presented a little bit more to learn with the daemon running.

489
00:24:48,000 --> 00:24:50,000
And just, it's a more complicated system.

490
00:24:50,000 --> 00:24:54,000
And then last but not least, I was really pleased to see just recently

491
00:24:54,000 --> 00:24:59,000
that snaps have taken kind of a step towards even easier to install.

492
00:24:59,000 --> 00:25:02,000
Have you seen now that they have distro specific install pages?

493
00:25:02,000 --> 00:25:03,000
Yeah.

494
00:25:03,000 --> 00:25:04,000
This is really neat.

495
00:25:04,000 --> 00:25:05,000
And it makes it easier for the end user.

496
00:25:05,000 --> 00:25:08,000
Nothing really has to change for the developer who's packaging.

497
00:25:08,000 --> 00:25:10,000
But for the end user now, say you're on Linux Mint

498
00:25:10,000 --> 00:25:13,000
and you haven't yet jumped into snaps or you're on Fedora

499
00:25:13,000 --> 00:25:15,000
and you haven't gotten a snap set up yet,

500
00:25:15,000 --> 00:25:18,000
you can now get a specific screen that tells you,

501
00:25:18,000 --> 00:25:19,000
this is what you do on your distro.

502
00:25:19,000 --> 00:25:20,000
Here's the commands you run.

503
00:25:20,000 --> 00:25:22,000
If you want a copy-pasta, you can.

504
00:25:22,000 --> 00:25:26,000
And this will get snaps operating and get your first application up and going.

505
00:25:26,000 --> 00:25:30,000
If you're on a distro like, say, Fedora or Mint or something like that.

506
00:25:30,000 --> 00:25:32,000
And it's just reducing that barrier.

507
00:25:32,000 --> 00:25:34,000
The user goes through this experience.

508
00:25:34,000 --> 00:25:37,000
This screen one time to get this stuff set up.

509
00:25:37,000 --> 00:25:40,000
And then they can just snap install to their heart's content after that.

510
00:25:40,000 --> 00:25:45,000
It seems like a good move on the side of canonical and SnapCraft just to show.

511
00:25:45,000 --> 00:25:48,000
I mean, obviously, they've done a lot of work getting SnapD running

512
00:25:48,000 --> 00:25:52,000
and snaps running on many different distributions.

513
00:25:52,000 --> 00:25:53,000
This just seems to reinforce that.

514
00:25:53,000 --> 00:25:56,000
This isn't just a canonical thing or an Ubuntu thing, right?

515
00:25:56,000 --> 00:25:59,000
We have almost first class support for all these other things

516
00:25:59,000 --> 00:26:01,000
right on our main homepage.

517
00:26:01,000 --> 00:26:03,000
And that is a message I think is important, not just to end users.

518
00:26:03,000 --> 00:26:07,000
But ultimately, the bigger message is being sent to developers.

519
00:26:07,000 --> 00:26:11,000
Like, we're going to make it easier for consumers of your software

520
00:26:11,000 --> 00:26:12,000
to get it on their distro.

521
00:26:12,000 --> 00:26:14,000
This seems like an important moment to me, Mike.

522
00:26:14,000 --> 00:26:17,000
And I'm curious with your experience and reflection on all the things

523
00:26:17,000 --> 00:26:19,000
we've talked about over the years, what your thoughts are right now.

524
00:26:19,000 --> 00:26:24,000
So yeah, when I'm on pop, I'm basically, if it's not in the repo, I'm using snaps.

525
00:26:24,000 --> 00:26:28,000
I have a few things like the bot framework emulator

526
00:26:28,000 --> 00:26:30,000
that is distributed as an app image.

527
00:26:30,000 --> 00:26:35,000
But for instance, I use the JetBrains IDs, like RubyMod and IntelliJ.

528
00:26:35,000 --> 00:26:37,000
And those are all snaps for me.

529
00:26:37,000 --> 00:26:39,000
Nice.

530
00:26:39,000 --> 00:26:40,000
I love it.

531
00:26:40,000 --> 00:26:43,000
Every once in a while, you have to deal with the snap, tac-tac, classic thing.

532
00:26:43,000 --> 00:26:46,000
But I think this is great.

533
00:26:46,000 --> 00:26:49,000
The only weird thing I would say is I don't often use the GUI stores.

534
00:26:49,000 --> 00:26:50,000
Right.

535
00:26:50,000 --> 00:26:55,000
I'm usually going to SnapCraft and just finding out what is the actual package name.

536
00:26:55,000 --> 00:26:56,000
That's okay, though.

537
00:26:56,000 --> 00:26:58,000
I mean, you have both options, so whatever the user prefers.

538
00:26:58,000 --> 00:27:01,000
Right, and we're probably not necessarily the people.

539
00:27:01,000 --> 00:27:03,000
It's not always my instinct to even go try to use a GUI page

540
00:27:03,000 --> 00:27:05,000
because I'm installing packages I do it on the command line.

541
00:27:05,000 --> 00:27:06,000
Yeah.

542
00:27:06,000 --> 00:27:08,000
So using the perspective, though, of past Mike,

543
00:27:08,000 --> 00:27:12,000
when you remember you were considering how do I ship even for the Linux desktop.

544
00:27:12,000 --> 00:27:13,000
Sad developer Mike.

545
00:27:13,000 --> 00:27:15,000
Is this it, do you think?

546
00:27:15,000 --> 00:27:17,000
Is this the solution past Mike was looking for?

547
00:27:17,000 --> 00:27:21,000
Oh, are you trying to get me into a packaging flame war?

548
00:27:21,000 --> 00:27:23,000
We're already there, buddy.

549
00:27:23,000 --> 00:27:25,000
Yeah, I think that already happened.

550
00:27:25,000 --> 00:27:31,000
Well, you know what, I have to say that I don't use anything but snaps if I can avoid it.

551
00:27:31,000 --> 00:27:35,000
So I would, yeah, if I were to distribute a desktop Linux application,

552
00:27:35,000 --> 00:27:38,000
it would be via the snap format.

553
00:27:38,000 --> 00:27:41,000
And I would definitely put it in the GUI stores, right?

554
00:27:41,000 --> 00:27:44,000
I know that alternatives exist, right?

555
00:27:44,000 --> 00:27:45,000
Flat packs, things like that.

556
00:27:45,000 --> 00:27:47,000
But I just have no need for it.

557
00:27:47,000 --> 00:27:51,000
And honestly, I like the idea of snaps.

558
00:27:51,000 --> 00:27:52,000
I like that they're simple.

559
00:27:52,000 --> 00:27:55,000
And I was curious, in your estimation,

560
00:27:55,000 --> 00:28:00,000
is the Snap Store being controlled by Canonical a positive or a negative?

561
00:28:00,000 --> 00:28:01,000
No, I wish Canonical controlled more stuff.

562
00:28:01,000 --> 00:28:03,000
I'm the wrong guy to ask.

563
00:28:03,000 --> 00:28:04,000
Well, no, I don't think so.

564
00:28:04,000 --> 00:28:08,000
Because you're looking at it from a developer who wants to publish their software.

565
00:28:08,000 --> 00:28:11,000
And then you, I'm assuming, I don't want to speak for you,

566
00:28:11,000 --> 00:28:14,000
but I assume it's because then there's a company you can interface with.

567
00:28:14,000 --> 00:28:17,000
There are avenues to support.

568
00:28:17,000 --> 00:28:18,000
That is a thing.

569
00:28:18,000 --> 00:28:20,000
Like, to be honest, and this is such like a trivial thing,

570
00:28:20,000 --> 00:28:23,000
my biggest issue with desktop Linux as I use it today

571
00:28:23,000 --> 00:28:25,000
is that extensions kill GNOME constantly,

572
00:28:25,000 --> 00:28:28,000
which means I can't have nice things like changing browser backgrounds.

573
00:28:28,000 --> 00:28:30,000
I'm sorry, changing desktop backgrounds.

574
00:28:30,000 --> 00:28:32,000
Mm-hmm, which I love doing too.

575
00:28:32,000 --> 00:28:36,000
So I almost wish someone, I mean, I know the GNOME Foundation is huge,

576
00:28:36,000 --> 00:28:41,000
but I don't know, just as a pragmatic user who kind of doesn't have a dock

577
00:28:41,000 --> 00:28:46,000
in the GPL FOSS fight, I would rather stuff work

578
00:28:46,000 --> 00:28:52,000
and there be a vendor who you can call or even just email, right?

579
00:28:52,000 --> 00:28:54,000
It does feel different even on like a more surface level

580
00:28:54,000 --> 00:29:00,000
when you go to any of the documentation or the SnapCraft website.

581
00:29:00,000 --> 00:29:04,000
It feels very polished and you can tell there are people always thinking about it.

582
00:29:04,000 --> 00:29:06,000
And that's, with open source, I mean, that may be true,

583
00:29:06,000 --> 00:29:09,000
but when it's a volunteer basis, when it's community working together,

584
00:29:09,000 --> 00:29:12,000
sometimes there's not that same sort of top-down control

585
00:29:12,000 --> 00:29:15,000
that can provide a very polished, friendly appearance.

586
00:29:15,000 --> 00:29:19,000
I mean, I'm very impressed with the Flathub website

587
00:29:19,000 --> 00:29:21,000
and what that community has done.

588
00:29:21,000 --> 00:29:24,000
I mean, I'm using the hell out of Flatpaks on Fedora,

589
00:29:24,000 --> 00:29:27,000
and I may even, once everything's all set up,

590
00:29:27,000 --> 00:29:30,000
I may even give the edge, the user experience to the Flatpaks.

591
00:29:30,000 --> 00:29:31,000
Really?

592
00:29:30,000 --> 00:29:31,000
Yeah.

593
00:29:31,000 --> 00:29:32,000
How come?

594
00:29:32,000 --> 00:29:35,000
Well, once you're in, if you're willing to use the GUI,

595
00:29:35,000 --> 00:29:38,000
once you're in GNOME software, it's, well, same with Snaps.

596
00:29:38,000 --> 00:29:40,000
Really, it's all kind of abstracted.

597
00:29:40,000 --> 00:29:44,000
You don't really notice, but the one thing I feel about the difference

598
00:29:44,000 --> 00:29:48,000
with Flatpaks is I have had more consistent theme experience

599
00:29:48,000 --> 00:29:50,000
and faster launch times.

600
00:29:50,000 --> 00:29:53,000
I couldn't, I could not tell you, legitimately,

601
00:29:53,000 --> 00:29:56,000
on my computer that I use every single day,

602
00:29:56,000 --> 00:29:58,000
I couldn't tell you which applications are Flatpaks

603
00:29:58,000 --> 00:30:00,000
and which ones are from the repo,

604
00:30:00,000 --> 00:30:02,000
but I can tell you which ones are Snaps.

605
00:30:02,000 --> 00:30:05,000
But I still use them, but I can tell you which ones are the Snaps.

606
00:30:05,000 --> 00:30:07,000
Right, so it's not like it's a deal-breaker,

607
00:30:07,000 --> 00:30:09,000
but it is something you notice.

608
00:30:09,000 --> 00:30:12,000
So, but I think Mike represents bigger picture here.

609
00:30:12,000 --> 00:30:16,000
I think Mike represents what will be, if it's not already become,

610
00:30:16,000 --> 00:30:19,000
the vast, vast majority of Linux users.

611
00:30:19,000 --> 00:30:23,000
There is, there is really no, like, noob user

612
00:30:23,000 --> 00:30:28,000
that's going to understand that Windows is a piece of software

613
00:30:28,000 --> 00:30:30,000
that can be loaded and unloaded from a computer.

614
00:30:30,000 --> 00:30:33,000
Right, they don't even really have the concept of an operating system.

615
00:30:33,000 --> 00:30:35,000
I'm not making fun, like, it's just they don't care.

616
00:30:35,000 --> 00:30:37,000
You're not taught that if you haven't researched it.

617
00:30:37,000 --> 00:30:39,000
Yeah, they think it's part of the hardware.

618
00:30:39,000 --> 00:30:41,000
Right, there might be doctors that are geniuses,

619
00:30:41,000 --> 00:30:43,000
but they just don't care that the operating system

620
00:30:43,000 --> 00:30:45,000
is a changeable piece of software.

621
00:30:45,000 --> 00:30:48,000
And then on top of that, even if they did know you could change it,

622
00:30:48,000 --> 00:30:50,000
they'd have to know what Linux is.

623
00:30:50,000 --> 00:30:52,000
And they'd have to know what a Linux distribution is.

624
00:30:52,000 --> 00:30:54,000
And they'd have to be willing to format their computer

625
00:30:54,000 --> 00:30:56,000
and reload it and re-import their data.

626
00:30:56,000 --> 00:30:58,000
This type of new user I don't believe really exists.

627
00:30:58,000 --> 00:31:00,000
I think the newest user you kind of get is when

628
00:31:00,000 --> 00:31:04,000
someone who already runs Linux switches someone else to Linux.

629
00:31:04,000 --> 00:31:07,000
But people who are voluntarily switching to Linux are Mike,

630
00:31:07,000 --> 00:31:10,000
people like Mike, and system administrators,

631
00:31:10,000 --> 00:31:13,000
people in the IT field, that sector of the industry.

632
00:31:13,000 --> 00:31:16,000
Already interested and somewhat knowledgeable about computers.

633
00:31:16,000 --> 00:31:18,000
Know how to read Reddit, know how to use Google.

634
00:31:18,000 --> 00:31:20,000
Yeah, have some debugging skills.

635
00:31:20,000 --> 00:31:23,000
And be maybe even privileged enough to have multiple computers,

636
00:31:23,000 --> 00:31:27,000
so you can have a burner computer that you can load a new operating system on.

637
00:31:27,000 --> 00:31:30,000
This is the type of user that's switching to Linux.

638
00:31:30,000 --> 00:31:32,000
And I think that is a lot of developers.

639
00:31:32,000 --> 00:31:34,000
There's a lot of developers out there

640
00:31:34,000 --> 00:31:37,000
that are going to become the main user of Linux desktop.

641
00:31:37,000 --> 00:31:39,000
There's also, I think, maybe a third category.

642
00:31:39,000 --> 00:31:42,000
We have over here, people when I hire them,

643
00:31:42,000 --> 00:31:44,000
if they're not doing specifically Mac OS stuff,

644
00:31:44,000 --> 00:31:47,000
I do try to give them something like an S76

645
00:31:47,000 --> 00:31:50,000
or some other Linux computer because it's just a lot cheaper

646
00:31:50,000 --> 00:31:52,000
and I can upgrade them year over year

647
00:31:52,000 --> 00:31:57,000
instead of buying them another $2,000 laptop.

648
00:31:57,000 --> 00:32:01,000
And for support type workers, like customer service, things like that,

649
00:32:01,000 --> 00:32:04,000
having an intuitive way to install little applications,

650
00:32:04,000 --> 00:32:08,000
or dare I say applets, small apps,

651
00:32:08,000 --> 00:32:12,000
just getting an account rep to use aptitude or apt-get,

652
00:32:12,000 --> 00:32:14,000
whatever the current name is,

653
00:32:14,000 --> 00:32:20,000
is completely a non-starter, at least in my mind.

654
00:32:20,000 --> 00:32:24,000
But having them open the elementary store or the pop shop

655
00:32:24,000 --> 00:32:26,000
or the Ubuntu store is super easy.

656
00:32:26,000 --> 00:32:30,000
And even writing a batch script for them that does a couple snap installs,

657
00:32:30,000 --> 00:32:32,000
super easy, right?

658
00:32:32,000 --> 00:32:34,000
I can't disagree with that at all.

659
00:32:34,000 --> 00:32:37,000
And I think what the weird thing that's going to happen is,

660
00:32:37,000 --> 00:32:42,000
that type of user, that user base, likes there to be someone in charge.

661
00:32:42,000 --> 00:32:48,000
I would argue that Mike appreciates that there are employees at Canonical

662
00:32:48,000 --> 00:32:51,000
where their employment status and performance status

663
00:32:51,000 --> 00:32:55,000
is based on how certain things perform like snaps.

664
00:32:55,000 --> 00:32:58,000
There's nobody really doing that in the different communities

665
00:32:58,000 --> 00:33:00,000
for other package managers.

666
00:33:00,000 --> 00:33:02,000
If you think about it, that means there's people

667
00:33:02,000 --> 00:33:04,000
where their job is on the line to make this thing a success.

668
00:33:04,000 --> 00:33:06,000
There's a certain level of investment they can take.

669
00:33:06,000 --> 00:33:11,000
And that is a level of insurance that people in the sort of dev,

670
00:33:11,000 --> 00:33:14,000
sysadmin, you know, regular user category like.

671
00:33:14,000 --> 00:33:19,000
What's ironic is people are leaning far to the free software side.

672
00:33:19,000 --> 00:33:21,000
That's the antithesis of the things they like.

673
00:33:21,000 --> 00:33:23,000
They want anyone to be able to control it.

674
00:33:23,000 --> 00:33:25,000
They don't want centralized control.

675
00:33:25,000 --> 00:33:27,000
Which does have a certain benefit, right?

676
00:33:27,000 --> 00:33:30,000
If Canonical decides that they no longer want to pursue investing in snap program.

677
00:33:30,000 --> 00:33:34,000
And this is why there's a place for flat packs, app images, and snaps.

678
00:33:34,000 --> 00:33:37,000
Because there is a market for each of them to address.

679
00:33:37,000 --> 00:33:41,000
And I think snaps particularly address the mic type market.

680
00:33:41,000 --> 00:33:44,000
And I think that's really exciting because that is the type of market

681
00:33:44,000 --> 00:33:45,000
that is creating software.

682
00:33:45,000 --> 00:33:48,000
That's going to be shipping software on multiple platforms.

683
00:33:48,000 --> 00:33:50,000
And that means more software for all of us.

684
00:33:50,000 --> 00:33:51,000
They have a product to ship.

685
00:33:51,000 --> 00:33:53,000
They just need something easy to do.

686
00:33:53,000 --> 00:33:54,000
They want support.

687
00:33:54,000 --> 00:33:56,000
And it is interesting when you talk about the business relationship.

688
00:33:56,000 --> 00:33:57,000
Yeah, right.

689
00:33:57,000 --> 00:34:00,000
If mic is working hard and putting money on the line,

690
00:34:00,000 --> 00:34:02,000
investing and using the snap technology,

691
00:34:02,000 --> 00:34:05,000
it's good to know that the other party is similarly invested.

692
00:34:05,000 --> 00:34:08,000
So let me ask you a question because you guys are more false faithful than I am

693
00:34:08,000 --> 00:34:09,000
in that I'm not.

694
00:34:09,000 --> 00:34:12,000
I'm going to get a lot of great Reddit comments this week.

695
00:34:12,000 --> 00:34:14,000
Isn't it a good thing, right?

696
00:34:14,000 --> 00:34:16,000
Like isn't this just a sign that desktop –

697
00:34:16,000 --> 00:34:18,000
and I specifically mean desktop Linux.

698
00:34:18,000 --> 00:34:22,000
But like now that I could call Dell literally when we get off the line here

699
00:34:22,000 --> 00:34:24,000
and order a Sputnik XPS.

700
00:34:24,000 --> 00:34:28,000
Or I could call, you know, Emmet System 76 and get –

701
00:34:28,000 --> 00:34:29,000
who knows?

702
00:34:29,000 --> 00:34:31,000
Whatever they make, I'm probably going to buy it anyway

703
00:34:31,000 --> 00:34:32,000
because that's my role.

704
00:34:32,000 --> 00:34:34,000
We love you, Mike.

705
00:34:34,000 --> 00:34:39,000
Pre-installed and within an hour of me just like loading a few applications,

706
00:34:39,000 --> 00:34:44,000
I can have a completely functional development or support workstation

707
00:34:44,000 --> 00:34:47,000
for an employee at an engineering company, right,

708
00:34:47,000 --> 00:34:50,000
with a software engineering company where I would –

709
00:34:50,000 --> 00:34:51,000
and I'm going to go on a limp here.

710
00:34:51,000 --> 00:34:53,000
I would say like six years ago,

711
00:34:53,000 --> 00:34:55,000
my only option was to drive to the Apple store,

712
00:34:55,000 --> 00:35:00,000
buy them a Mac and pay, you know, several hundred dollars more at least,

713
00:35:00,000 --> 00:35:02,000
and probably get a lower spec machine.

714
00:35:02,000 --> 00:35:04,000
I mean, there were Linux machines, but they just –

715
00:35:04,000 --> 00:35:05,000
it wasn't what they are today.

716
00:35:05,000 --> 00:35:06,000
No, not at all.

717
00:35:06,000 --> 00:35:08,000
I mean, it was all compromise.

718
00:35:08,000 --> 00:35:10,000
Right, and not that prepackaged experience, right,

719
00:35:10,000 --> 00:35:12,000
where there's a vendor you can call and say,

720
00:35:12,000 --> 00:35:16,000
hey, you know, I blew something up, right?

721
00:35:16,000 --> 00:35:19,000
Hey, now, System 76 has been around for like 11 years.

722
00:35:19,000 --> 00:35:23,000
I don't – but you know, it's funny because there was that period of time,

723
00:35:23,000 --> 00:35:26,000
looking back at it now, where it was like we kind of had an XP moment

724
00:35:26,000 --> 00:35:29,000
where a lot of corporate desktops were shipping with like one –

725
00:35:29,000 --> 00:35:30,000
or something like that.

726
00:35:30,000 --> 00:35:31,000
Yeah.

727
00:35:31,000 --> 00:35:33,000
And now we've kind of – we've kind of entered a new period

728
00:35:33,000 --> 00:35:35,000
where everybody's using Gnome Shell.

729
00:35:35,000 --> 00:35:36,000
It's not true.

730
00:35:36,000 --> 00:35:37,000
Some people use SUSE.

731
00:35:37,000 --> 00:35:38,000
That's true.

732
00:35:38,000 --> 00:35:39,000
No, I'm saying not everybody,

733
00:35:39,000 --> 00:35:42,000
but like all the enterprise applications and desktops that ship,

734
00:35:42,000 --> 00:35:43,000
which is good.

735
00:35:43,000 --> 00:35:44,000
I think it's going to be a good thing.

736
00:35:44,000 --> 00:35:47,000
Why has no one fixed the if an extension blows up in Gnome Shell,

737
00:35:47,000 --> 00:35:48,000
the whole thing goes down?

738
00:35:48,000 --> 00:35:50,000
It's probably a deep architectural change, right?

739
00:35:50,000 --> 00:35:51,000
Oh, yeah, for sure.

740
00:35:51,000 --> 00:35:54,000
So that's like a flaw deep in the low level.

741
00:35:54,000 --> 00:35:56,000
Part and parcel of the single threaded business.

742
00:35:56,000 --> 00:35:57,000
Yeah.

743
00:35:57,000 --> 00:35:58,000
Do you want to explain that at all?

744
00:35:58,000 --> 00:36:00,000
We've talked about it on Linux Unplugged.

745
00:36:00,000 --> 00:36:04,000
It's essentially – it's all a single thread.

746
00:36:04,000 --> 00:36:05,000
It's all one process.

747
00:36:05,000 --> 00:36:10,000
The mutter, the desktop, the extensions,

748
00:36:10,000 --> 00:36:14,000
the JavaScript engine that renders the Gnome Shell interface,

749
00:36:14,000 --> 00:36:16,000
it's all one process.

750
00:36:16,000 --> 00:36:20,000
And so if any part of it crashes, the desktop restarts.

751
00:36:20,000 --> 00:36:24,000
And what's even more brilliant and scary is in the Wayland future,

752
00:36:24,000 --> 00:36:27,000
it will also be the display server.

753
00:36:27,000 --> 00:36:30,000
So your entire display goes down,

754
00:36:30,000 --> 00:36:34,000
which is why Canonical has opted to continue to ship X in their LTS release

755
00:36:34,000 --> 00:36:35,000
because –

756
00:36:35,000 --> 00:36:36,000
It crashes better.

757
00:36:36,000 --> 00:36:38,000
I mean, just the way it separated.

758
00:36:38,000 --> 00:36:39,000
It crashes better.

759
00:36:39,000 --> 00:36:40,000
That's the way to put it.

760
00:36:40,000 --> 00:36:44,000
The Linux desktop, it crashes better.

761
00:36:44,000 --> 00:36:46,000
I think we have a show title on that one.

762
00:36:46,000 --> 00:36:47,000
It crashes better.

763
00:36:47,000 --> 00:36:48,000
Yeah.

764
00:36:48,000 --> 00:36:51,000
So that's why – not to belabor this,

765
00:36:51,000 --> 00:36:53,000
but I think workflow and tools are pretty important.

766
00:36:53,000 --> 00:36:56,000
That's why I spent about a year on Plasma.

767
00:36:56,000 --> 00:36:57,000
Hey, I'm still there.

768
00:36:57,000 --> 00:36:58,000
Yeah, and it's really good.

769
00:36:58,000 --> 00:37:00,000
Our studio machine over there is still on it.

770
00:37:00,000 --> 00:37:05,000
But I've recently switched to XFCE just simply because I like GTK applications.

771
00:37:05,000 --> 00:37:10,000
I just want as least – I just want the little desktop I need around it.

772
00:37:10,000 --> 00:37:11,000
I need a file manager.

773
00:37:11,000 --> 00:37:12,000
I need some launchers.

774
00:37:12,000 --> 00:37:13,000
I need like a taskbar.

775
00:37:13,000 --> 00:37:15,000
I need a clock.

776
00:37:15,000 --> 00:37:17,000
And that's all I want, and that's what XFCE is.

777
00:37:17,000 --> 00:37:19,000
Super, super minimal.

778
00:37:19,000 --> 00:37:20,000
GTK.

779
00:37:20,000 --> 00:37:23,000
And that is rock solid.

780
00:37:23,000 --> 00:37:24,000
Rock solid.

781
00:37:24,000 --> 00:37:28,000
Like it uses – it sips the RAM and it just runs and runs and runs.

782
00:37:28,000 --> 00:37:30,000
And they've done this crazy thing where different things are different processes.

783
00:37:30,000 --> 00:37:31,000
It's just – it's wild.

784
00:37:31,000 --> 00:37:33,000
How traditional.

785
00:37:33,000 --> 00:37:36,000
So can we continue the derail, just briefly talk about eGPUs?

786
00:37:36,000 --> 00:37:37,000
Oh, yes.

787
00:37:37,000 --> 00:37:40,000
I mean, I see you bouncing in your chair.

788
00:37:40,000 --> 00:37:41,000
Join me.

789
00:37:41,000 --> 00:37:42,000
Oh, I have.

790
00:37:42,000 --> 00:37:43,000
I have.

791
00:37:43,000 --> 00:37:45,000
So I have joined the eGPU cult.

792
00:37:45,000 --> 00:37:52,000
I got – I started – I dipped my toes in the water when I got the Lenovo eGPU dock.

793
00:37:52,000 --> 00:37:57,000
Now, this is something that I thought is kind of a slam dunk because I wanted an NVIDIA

794
00:37:57,000 --> 00:38:00,000
card because it's just what I have the most experience with.

795
00:38:00,000 --> 00:38:02,000
And I wanted it to be compatible with my ThinkPad.

796
00:38:02,000 --> 00:38:05,000
So if a Lenovo makes a GPU dock.

797
00:38:05,000 --> 00:38:06,000
Kind of guaranteed compatible, right?

798
00:38:06,000 --> 00:38:07,000
Should work, right?

799
00:38:07,000 --> 00:38:10,000
So I ordered that sucker, and sure enough, it does work.

800
00:38:10,000 --> 00:38:11,000
And it was pretty remarkable.

801
00:38:11,000 --> 00:38:14,000
I could even get it to accelerate the internal display of the laptop.

802
00:38:14,000 --> 00:38:19,000
Now, is this using that funky extra port thing, or is it just standard Thunderbolt?

803
00:38:19,000 --> 00:38:20,000
Straight up Thunderbolt 3.

804
00:38:20,000 --> 00:38:21,000
Nice.

805
00:38:21,000 --> 00:38:23,000
It's a USB-C style connector.

806
00:38:23,000 --> 00:38:26,000
And it also offers a dock, so it's powering the laptop as well.

807
00:38:26,000 --> 00:38:27,000
Right.

808
00:38:27,000 --> 00:38:30,000
So it's the only cable on my laptop, which is really cool.

809
00:38:30,000 --> 00:38:31,000
That's just fantastic.

810
00:38:31,000 --> 00:38:32,000
Yeah, it's really – it's so good.

811
00:38:32,000 --> 00:38:36,000
And then it has Ethernet, and it has three USB ports.

812
00:38:36,000 --> 00:38:40,000
It has a sound card, and it has a couple of display ports and HDMI.

813
00:38:40,000 --> 00:38:43,000
And then it's got a NVIDIA – like, I think it's really not that great.

814
00:38:43,000 --> 00:38:48,000
It's like a – maybe a 1060 mobile in there.

815
00:38:48,000 --> 00:38:49,000
Right.

816
00:38:49,000 --> 00:38:51,000
It's not super fancy, but a big step up from integrated graphics.

817
00:38:51,000 --> 00:38:53,000
Yeah, integrated graphics built in.

818
00:38:53,000 --> 00:38:56,000
And so that's where I dipped my toes, and it felt liberating.

819
00:38:56,000 --> 00:39:00,000
All of a sudden, to be able to have, like, this laptop that has nine hours of battery life

820
00:39:00,000 --> 00:39:04,000
and all open source graphics, and then I plug in this thing,

821
00:39:04,000 --> 00:39:07,000
and I get remarkable performance on this tiny little machine.

822
00:39:07,000 --> 00:39:15,000
But Linux isn't super great at having a GPU just disappear.

823
00:39:15,000 --> 00:39:16,000
First of all, you have to power cycle.

824
00:39:16,000 --> 00:39:20,000
But second of all, even after you power cycle, sometimes when it powers back up,

825
00:39:20,000 --> 00:39:24,000
the – something in the stack goes crazy looking for the missing components.

826
00:39:24,000 --> 00:39:25,000
It's like, what?

827
00:39:25,000 --> 00:39:28,000
Why don't I have all these NVIDIA things installed if I don't have –

828
00:39:28,000 --> 00:39:30,000
and I know I have this module here.

829
00:39:30,000 --> 00:39:31,000
Like, what's going on?

830
00:39:31,000 --> 00:39:32,000
I've built this module.

831
00:39:32,000 --> 00:39:33,000
What's happening?

832
00:39:33,000 --> 00:39:34,000
And it just sits there and freaks out.

833
00:39:34,000 --> 00:39:39,000
And eventually, after about a couple of hours, one of the cores of the machine will –

834
00:39:39,000 --> 00:39:43,000
and the fan will be kicking up – will be completely pegged as it's searching for the missing NVIDIA card.

835
00:39:43,000 --> 00:39:45,000
So I thought, there's got to be a better way to do this.

836
00:39:45,000 --> 00:39:46,000
It's like a wounded animal.

837
00:39:46,000 --> 00:39:52,000
Once I cracked this problem, the floodgates of eGPU heaven opened up,

838
00:39:52,000 --> 00:39:53,000
and it is changing my life.

839
00:39:53,000 --> 00:39:55,000
And I'm not exaggerating when I say that.

840
00:39:55,000 --> 00:39:58,000
It is changing the way I test software.

841
00:39:58,000 --> 00:40:00,000
It's changing the way I test operating systems.

842
00:40:00,000 --> 00:40:03,000
It's changing everything about my workflow.

843
00:40:03,000 --> 00:40:05,000
I am so happy.

844
00:40:05,000 --> 00:40:06,000
So I've got to share this with you.

845
00:40:06,000 --> 00:40:08,000
This is sounding more and more like a legit cult.

846
00:40:08,000 --> 00:40:09,000
This is really great.

847
00:40:09,000 --> 00:40:16,000
So what I realized is the way you do virtualization PCI pass-through is you essentially –

848
00:40:16,000 --> 00:40:20,000
you find these PCI devices, and you dedicate them to the VM,

849
00:40:20,000 --> 00:40:23,000
and you blacklist them from the host operating system.

850
00:40:23,000 --> 00:40:24,000
Right.

851
00:40:24,000 --> 00:40:25,000
So they're the only one.

852
00:40:25,000 --> 00:40:26,000
They don't fight over it.

853
00:40:26,000 --> 00:40:27,000
Right.

854
00:40:27,000 --> 00:40:29,000
And then you go and you configure your VM, and you say, go grab these PCI devices.

855
00:40:29,000 --> 00:40:30,000
They're all yours.

856
00:40:30,000 --> 00:40:31,000
Have at it.

857
00:40:31,000 --> 00:40:35,000
Once you've done that, it's kind of depending on the device.

858
00:40:35,000 --> 00:40:37,000
There's a couple other things you have to mess around with.

859
00:40:37,000 --> 00:40:41,000
But once you've done that, you essentially have these devices dedicated to a virtual machine.

860
00:40:41,000 --> 00:40:44,000
And I thought, well, you know what would be pretty great?

861
00:40:44,000 --> 00:40:46,000
Why don't I dedicate the entire dock?

862
00:40:46,000 --> 00:40:52,000
So my dock with its USB ports, its sound card, its Ethernet, its GPU –

863
00:40:52,000 --> 00:40:55,000
It's almost like a separate motherboard you're jacking in there.

864
00:40:55,000 --> 00:40:56,000
Exactly.

865
00:40:56,000 --> 00:40:57,000
Exactly.

866
00:40:57,000 --> 00:40:58,000
Wow.

867
00:40:58,000 --> 00:41:00,000
Let me tell you, Wes, game changer.

868
00:41:00,000 --> 00:41:08,000
Because now I'm using a real, physical, mechanical keyboard.

869
00:41:08,000 --> 00:41:10,000
I'm using a full-size gaming mouse.

870
00:41:10,000 --> 00:41:16,000
I've got a 2K screen hooked up to this thing, and it's hooked up to the gigabit Ethernet.

871
00:41:16,000 --> 00:41:20,000
I've got big desktop speakers plugged into it.

872
00:41:20,000 --> 00:41:21,000
It's a full computer.

873
00:41:21,000 --> 00:41:24,000
And what you can do, because they're VMs, is you can clone them.

874
00:41:24,000 --> 00:41:27,000
So I built one, and then I've cloned it multiple times.

875
00:41:27,000 --> 00:41:31,000
So I've got a Win 10 version, and I've got an Ubuntu version.

876
00:41:31,000 --> 00:41:34,000
I've got a testing one that I can blow away for testing.

877
00:41:34,000 --> 00:41:37,000
Oh, yeah, for doing distro reviews or just testing some software.

878
00:41:37,000 --> 00:41:40,000
Wes Payne, I have used virtual machines since the 90s.

879
00:41:40,000 --> 00:41:50,000
I have used a PowerPC Macintosh running virtual PC, emulating an Intel, running Windows 98.

880
00:41:50,000 --> 00:41:55,000
I'm telling you, I have had virtual machines where there was an Intel add-on card that you plug into the machine,

881
00:41:55,000 --> 00:41:57,000
and it uses that to virtualize.

882
00:41:57,000 --> 00:42:02,000
I have built up huge VMware infrastructures that were mirrored across multiple data centers.

883
00:42:02,000 --> 00:42:05,000
I have experienced with virtualization.

884
00:42:05,000 --> 00:42:08,000
I have never experienced performance like this in a VM.

885
00:42:08,000 --> 00:42:12,000
If you sat down, and I just had my laptop tucked off to the side, and you sat down and used that computer,

886
00:42:12,000 --> 00:42:15,000
you would use it all day long and have no idea it's a VM.

887
00:42:15,000 --> 00:42:17,000
You would never, you would never, you would never, you would never know.

888
00:42:17,000 --> 00:42:18,000
That's beautiful.

889
00:42:18,000 --> 00:42:19,000
Yes.

890
00:42:19,000 --> 00:42:24,000
I'm going to try to get the product for you for the show notes, because this is the eGPU to get.

891
00:42:24,000 --> 00:42:32,000
If you are going to build your own eGPU, there's a bunch of pre-built ones out there, but they're really expensive.

892
00:42:32,000 --> 00:42:36,000
Like Razer Core is a good one, but it's very, very expensive.

893
00:42:36,000 --> 00:42:40,000
This is kind of expensive because, you know, you have to buy it in components.

894
00:42:40,000 --> 00:42:44,000
But I got the Mantis Venus eGPU.

895
00:42:44,000 --> 00:42:46,000
Check this thing out.

896
00:42:46,000 --> 00:42:51,000
It has, first of all, an open PCI slot, so I can put a much better video card in there.

897
00:42:51,000 --> 00:42:52,000
Oh, yes.

898
00:42:52,000 --> 00:42:56,000
Long story short, as soon as I started gaming, the docks started overheating and shutting down.

899
00:42:56,000 --> 00:42:58,000
So not really built for that.

900
00:42:58,000 --> 00:43:02,000
I made like this amazing breakthrough and started building up all these systems and started installing games

901
00:43:02,000 --> 00:43:04,000
because I thought, hey, let's make a gaming VM.

902
00:43:04,000 --> 00:43:06,000
Let's load it full of games, and then it starts crashing.

903
00:43:06,000 --> 00:43:08,000
But I wanted to go to AMD Graphics anyways.

904
00:43:08,000 --> 00:43:10,000
Oh, yeah, going on that side of the team.

905
00:43:10,000 --> 00:43:14,000
Yeah, yeah, because then I'm also going to build a Hackintosh VM.

906
00:43:14,000 --> 00:43:16,000
No, I was, okay, obviously that was lurking in the back of my mind.

907
00:43:16,000 --> 00:43:17,000
Oh, yeah, I'm going to do it.

908
00:43:17,000 --> 00:43:22,000
I'm going to have Windows 10, I'm going to have a Linux VM, and I'm going to have a Mac OS VM,

909
00:43:22,000 --> 00:43:25,000
and the host OS is Fedora 30 on my ThinkPad.

910
00:43:25,000 --> 00:43:26,000
That is beautiful.

911
00:43:26,000 --> 00:43:27,000
It is.

912
00:43:27,000 --> 00:43:28,000
I'll do a whole segment on it.

913
00:43:28,000 --> 00:43:32,000
I am so happy with everything you're saying, so I'm going to cry.

914
00:43:32,000 --> 00:43:33,000
It's so good.

915
00:43:33,000 --> 00:43:34,000
This is like Christmas.

916
00:43:34,000 --> 00:43:36,000
Check out this eGPU I got.

917
00:43:36,000 --> 00:43:43,000
First of all, it's got a 550-watt power supply in it, so it will deliver a full like 87 watts to the laptop.

918
00:43:43,000 --> 00:43:45,000
Again, single cable here.

919
00:43:45,000 --> 00:43:48,000
It's got gigabit Ethernet in the back of the thing.

920
00:43:48,000 --> 00:43:53,000
It's got three or two USB ports on the back, two USB ports on the front.

921
00:43:53,000 --> 00:43:57,000
So it is essentially, again, I'm going to be able to dedicate all of these to the VM.

922
00:43:57,000 --> 00:44:01,000
It's a full-fledged box, but here's the best part.

923
00:44:01,000 --> 00:44:07,000
I can't believe they did this, and I don't know any other eGPU enclosure that does this.

924
00:44:07,000 --> 00:44:15,000
Inside, they have a SSD slot, so you can mount an SSD inside the eGPU.

925
00:44:15,000 --> 00:44:16,000
Fantastic.

926
00:44:16,000 --> 00:44:20,000
Then you can put the VMs on that disk, and then I move that box around.

927
00:44:20,000 --> 00:44:23,000
I just have Vert Manager all set up on each host.

928
00:44:23,000 --> 00:44:24,000
I plug this thing in.

929
00:44:24,000 --> 00:44:28,000
I immediately get the graphics, and I've got all of the VM disks right there.

930
00:44:28,000 --> 00:44:30,000
You basically just need to plug in some compute.

931
00:44:30,000 --> 00:44:31,000
Wow.

932
00:44:31,000 --> 00:44:33,000
This is an interesting approach.

933
00:44:33,000 --> 00:44:36,000
I mean, it's kind of like having six machines in one.

934
00:44:36,000 --> 00:44:37,000
And you wouldn't know you're not.

935
00:44:37,000 --> 00:44:39,000
You would not know you're on a VM.

936
00:44:39,000 --> 00:44:43,000
You wouldn't know, because it has full GPU performance.

937
00:44:43,000 --> 00:44:48,000
You're using whatever keyboard you want, whatever mouse you want, whatever screen you want.

938
00:44:48,000 --> 00:44:50,000
This is the Thunderbolt dream come to life.

939
00:44:50,000 --> 00:44:51,000
It's so good.

940
00:44:51,000 --> 00:44:52,000
It's so good.

941
00:44:52,000 --> 00:44:53,000
It's great.

942
00:44:53,000 --> 00:44:55,000
So I'm going to set it up here at the studio.

943
00:44:55,000 --> 00:44:56,000
I'm going to set it up on my laptop.

944
00:44:56,000 --> 00:44:57,000
I can move it between.

945
00:44:57,000 --> 00:45:01,000
Now, I imagine it might kind of mess with those stale, funky OSes like Windows,

946
00:45:01,000 --> 00:45:05,000
but you could then use the Linux VMs when you're not even around the dock, too.

947
00:45:05,000 --> 00:45:08,000
And here is also the best part.

948
00:45:08,000 --> 00:45:11,000
Now I don't have any funky proprietary drivers on the host OS.

949
00:45:11,000 --> 00:45:13,000
So it's all Intel stack.

950
00:45:13,000 --> 00:45:14,000
That's nice.

951
00:45:14,000 --> 00:45:16,000
So no weird graphics driver issues.

952
00:45:16,000 --> 00:45:17,000
Everything sleeps fine.

953
00:45:17,000 --> 00:45:19,000
I have great battery life.

954
00:45:19,000 --> 00:45:23,000
All the proprietary garbage is in the VMs.

955
00:45:23,000 --> 00:45:24,000
That's a great way to do it.

956
00:45:24,000 --> 00:45:25,000
Wow.

957
00:45:25,000 --> 00:45:27,000
It's the best Linux desktop setup I have ever had,

958
00:45:27,000 --> 00:45:30,000
because you have the bulletproof open source stack,

959
00:45:30,000 --> 00:45:32,000
but you still get all the proprietary goodies, man.

960
00:45:32,000 --> 00:45:33,000
Yeah, you can game in there.

961
00:45:33,000 --> 00:45:34,000
Do whatever you need.

962
00:45:34,000 --> 00:45:35,000
I know.

963
00:45:35,000 --> 00:45:36,000
It's so good.

964
00:45:36,000 --> 00:45:38,000
And I really don't like Windows.

965
00:45:38,000 --> 00:45:41,000
That's the only thing I realized is I was setting up Windows, setting it up,

966
00:45:41,000 --> 00:45:43,000
and I'm like, I don't like using this.

967
00:45:43,000 --> 00:45:45,000
And it took me like two days, three days,

968
00:45:45,000 --> 00:45:47,000
because there are so many updates and stuff,

969
00:45:47,000 --> 00:45:50,000
and I was learning how to reuse Windows and set up the VM.

970
00:45:50,000 --> 00:45:53,000
In one evening, I got Ubuntu 19.04 installed with Steam and all the games.

971
00:45:53,000 --> 00:45:54,000
So much easier.

972
00:45:54,000 --> 00:45:55,000
Boom.

973
00:45:55,000 --> 00:45:58,000
Windows is at least better in a VM, because you can snapshot and clone it.

974
00:45:58,000 --> 00:46:00,000
I want to play around with WSL 2,

975
00:46:00,000 --> 00:46:02,000
and I want to play around with a new terminal and stuff.

976
00:46:02,000 --> 00:46:03,000
I don't want to be ignorant about it.

977
00:46:03,000 --> 00:46:04,000
But now I've got a nice safe space.

978
00:46:04,000 --> 00:46:06,000
In fact, this is the best way to use Windows, honestly,

979
00:46:06,000 --> 00:46:10,000
because, again, I'd say it's 95% physical performance.

980
00:46:10,000 --> 00:46:11,000
It's so great.

981
00:46:11,000 --> 00:46:14,000
It's a great way to use Windows, and you've got snapshots.

982
00:46:14,000 --> 00:46:16,000
It doesn't have to touch a real hardware.

983
00:46:16,000 --> 00:46:17,000
I am so in.

984
00:46:17,000 --> 00:46:19,000
So I've watched Mike for a little bit, because Mike got a nice box.

985
00:46:19,000 --> 00:46:21,000
Oh, and here's the other thing about that Mantis.

986
00:46:21,000 --> 00:46:27,000
The Mantis is using the same controller and USB controller as the Razer.

987
00:46:27,000 --> 00:46:29,000
So the Razer products are pretty good,

988
00:46:29,000 --> 00:46:32,000
and this is using the same hardware inside that the Razer boxes are.

989
00:46:32,000 --> 00:46:35,000
With a little more space, a little more power supply,

990
00:46:35,000 --> 00:46:37,000
and, of course, that Gigabit Ethernet, the USB hub,

991
00:46:37,000 --> 00:46:42,000
and that hard drive slot, it's the perfect VM box.

992
00:46:42,000 --> 00:46:44,000
I'll grant you, it's a lot of hardware to carry around

993
00:46:44,000 --> 00:46:45,000
to have a good VM experience.

994
00:46:45,000 --> 00:46:48,000
It's a little ridiculous, because there are ways to do it

995
00:46:48,000 --> 00:46:52,000
with like virtual NVIDIA GPU sharing and whatnot, all in one box.

996
00:46:52,000 --> 00:46:55,000
But to me, with my history of VMs

997
00:46:55,000 --> 00:46:57,000
and the things that I have experienced in the past

998
00:46:57,000 --> 00:47:00,000
to get decent virtualization, this doesn't feel like a compromise.

999
00:47:00,000 --> 00:47:01,000
This feels like a gift.

1000
00:47:01,000 --> 00:47:02,000
So I'm happy to carry it around.

1001
00:47:02,000 --> 00:47:04,000
I'm going to get like a bag.

1002
00:47:04,000 --> 00:47:05,000
I might even travel with it.

1003
00:47:05,000 --> 00:47:07,000
I'm so dang happy.

1004
00:47:07,000 --> 00:47:11,000
You know, it makes me think we could use this for some studio things, too.

1005
00:47:11,000 --> 00:47:12,000
I think you just plug it in.

1006
00:47:12,000 --> 00:47:15,000
Maybe it's got a VM for run, all the things here.

1007
00:47:15,000 --> 00:47:16,000
You could, couldn't you?

1008
00:47:16,000 --> 00:47:17,000
Yeah.

1009
00:47:17,000 --> 00:47:18,000
Oh, yeah.

1010
00:47:18,000 --> 00:47:20,000
You could put all the stuff that's on our Reaper machine here.

1011
00:47:20,000 --> 00:47:21,000
It could be in a VM.

1012
00:47:21,000 --> 00:47:25,000
Boy, I was kind of debating building like a big, beefy Linux desktop

1013
00:47:25,000 --> 00:47:27,000
and put a nice graphics card in it,

1014
00:47:27,000 --> 00:47:29,000
but I think I might just have to go this way.

1015
00:47:29,000 --> 00:47:30,000
It's so nice.

1016
00:47:30,000 --> 00:47:33,000
It's amazing what you'll get out of that ThinkPad.

1017
00:47:33,000 --> 00:47:35,000
It's totally different because you have the same exact machine.

1018
00:47:35,000 --> 00:47:36,000
Right.

1019
00:47:36,000 --> 00:47:37,000
It's a totally different experience.

1020
00:47:37,000 --> 00:47:38,000
It's mind-blowing.

1021
00:47:38,000 --> 00:47:40,000
Even if you just use it to accelerate the internal screen,

1022
00:47:40,000 --> 00:47:43,000
which then you've got to mess with the drivers and stuff.

1023
00:47:43,000 --> 00:47:45,000
So, Mike, how does that sound to you?

1024
00:47:45,000 --> 00:47:47,000
I mean, how's things in your setup?

1025
00:47:47,000 --> 00:47:49,000
This is my jam now.

1026
00:47:49,000 --> 00:47:50,000
This is your fault.

1027
00:47:50,000 --> 00:47:51,000
This is all on you.

1028
00:47:51,000 --> 00:47:52,000
This is my fault.

1029
00:47:52,000 --> 00:47:56,000
I've got to say, Chris, you took it several steps further than I did.

1030
00:47:56,000 --> 00:48:04,000
Yeah, I can't imagine, and in a week I'll probably buy a Mac Pro,

1031
00:48:04,000 --> 00:48:06,000
but I can't imagine buying another desktop now

1032
00:48:06,000 --> 00:48:08,000
because you can always slot out a new card in your eGPU.

1033
00:48:08,000 --> 00:48:10,000
And if you have a system like the Mantis here

1034
00:48:10,000 --> 00:48:14,000
where it's actually your USB dock, one cable in, that's fantastic.

1035
00:48:14,000 --> 00:48:15,000
And what?

1036
00:48:15,000 --> 00:48:17,000
I mean, this thing, it's like $300 right now?

1037
00:48:17,000 --> 00:48:19,000
Yeah, I mean, you do have to get your own video card too.

1038
00:48:19,000 --> 00:48:20,000
Sure, of course.

1039
00:48:20,000 --> 00:48:22,000
Which, you know, that's good and bad.

1040
00:48:22,000 --> 00:48:24,000
I think long-term it's good.

1041
00:48:24,000 --> 00:48:26,000
Yeah, a little more expensive up front, but you have choice, freedom,

1042
00:48:26,000 --> 00:48:28,000
and you can change it out when you need to.

1043
00:48:28,000 --> 00:48:33,000
Yeah, and there is some pretty decent video cards that are not a lot of money

1044
00:48:33,000 --> 00:48:36,000
that are still way better than what the Intel graphics is doing.

1045
00:48:36,000 --> 00:48:39,000
So you can, I mean, you don't have to get an $800 video card either.

1046
00:48:39,000 --> 00:48:41,000
A $100 video card would be good.

1047
00:48:41,000 --> 00:48:42,000
Yeah, totally.

1048
00:48:42,000 --> 00:48:44,000
Start with something that's easy, and then you can upgrade from there.

1049
00:48:44,000 --> 00:48:49,000
Unless you need to push 4K, then I understand, which I do not.

1050
00:48:49,000 --> 00:48:52,000
Well, I'm buying one of those fancy new Apple stands.

1051
00:48:52,000 --> 00:48:53,000
Not the monitor, just the stand.

1052
00:48:53,000 --> 00:48:54,000
Just the stand, yeah.

1053
00:48:54,000 --> 00:48:56,000
That has several K of pixels itself, don't you know?

1054
00:48:56,000 --> 00:48:57,000
Oh, I didn't.

1055
00:48:57,000 --> 00:48:58,000
No, it's good to know.

1056
00:48:58,000 --> 00:48:59,000
I imagine.

1057
00:48:59,000 --> 00:49:02,000
All stands must be $1,000 or more to be acceptable.

1058
00:49:02,000 --> 00:49:06,000
So now how is running the Mac OS VM on Linux?

1059
00:49:06,000 --> 00:49:12,000
I haven't done that yet, but I have seen it is happening more and more.

1060
00:49:12,000 --> 00:49:13,000
It's becoming a thing.

1061
00:49:13,000 --> 00:49:16,000
You better get it now before they stop running on the x86.

1062
00:49:16,000 --> 00:49:21,000
Yeah, although in Catalina they're introducing DriverKit,

1063
00:49:21,000 --> 00:49:24,000
and DriverKit is drivers in user space,

1064
00:49:24,000 --> 00:49:28,000
which might actually be an enabler for the Hackintosh community.

1065
00:49:28,000 --> 00:49:31,000
I don't know, but if there is a developer spec they can follow,

1066
00:49:31,000 --> 00:49:33,000
and there's a way to run user space drivers.

1067
00:49:33,000 --> 00:49:34,000
You're right.

1068
00:49:34,000 --> 00:49:37,000
I mean, that might be certainly more flexible than all the, you know,

1069
00:49:37,000 --> 00:49:39,000
hacky K extension hacking that's going on now.

1070
00:49:39,000 --> 00:49:40,000
Yeah, well, they're locking that stuff down, too.

1071
00:49:40,000 --> 00:49:41,000
Exactly.

1072
00:49:41,000 --> 00:49:42,000
They're really locking that down now.

1073
00:49:42,000 --> 00:49:44,000
In Catalina, the system partitions read-only.

1074
00:49:44,000 --> 00:49:46,000
They do APFS magic, baby.

1075
00:49:46,000 --> 00:49:47,000
Whoop.

1076
00:49:47,000 --> 00:49:49,000
Slicing it up, making it secure.

1077
00:49:49,000 --> 00:49:52,000
They're doing that, interestingly, in a time where there's a few Linux

1078
00:49:52,000 --> 00:49:54,000
distributions that are also doing that same approach.

1079
00:49:54,000 --> 00:49:56,000
It seems like maybe it's a sound strategy,

1080
00:49:56,000 --> 00:49:58,000
maybe something we should play with sometime.

1081
00:49:58,000 --> 00:50:00,000
Oh, oh, oh, oh, foreshadowing.

1082
00:50:00,000 --> 00:50:01,000
Yeah.

1083
00:50:01,000 --> 00:50:03,000
Maybe we could make a little project on make your own read-only system

1084
00:50:03,000 --> 00:50:05,000
or something.

1085
00:50:05,000 --> 00:50:08,000
Well, Mr. Dominic, thanks for letting me crash the party today.

1086
00:50:08,000 --> 00:50:09,000
Oh, I loved it.

1087
00:50:09,000 --> 00:50:10,000
It was great.

1088
00:50:10,000 --> 00:50:13,000
And thank you for joining the cult, the eGPU cult.

1089
00:50:13,000 --> 00:50:14,000
I know.

1090
00:50:14,000 --> 00:50:15,000
I'm going to succumb sooner or later.

1091
00:50:15,000 --> 00:50:18,000
Now, wasn't it, it was just a few weeks ago that,

1092
00:50:18,000 --> 00:50:21,000
I can't remember, but I remember you were running a contest for Earth Day

1093
00:50:21,000 --> 00:50:22,000
recently.

1094
00:50:22,000 --> 00:50:27,000
Yeah, we were running an Earth Day contest for students to basically pitch

1095
00:50:27,000 --> 00:50:31,000
and do a little bit of kind of like pre-development documentation and maybe

1096
00:50:31,000 --> 00:50:35,000
a little dev on a false solution to climate change.

1097
00:50:35,000 --> 00:50:38,000
We got a lot of submissions, and we finally have a winner.

1098
00:50:38,000 --> 00:50:43,000
Kyler Chin out of California is getting a System76 Galago Pro.

1099
00:50:43,000 --> 00:50:44,000
Congratulations.

1100
00:50:44,000 --> 00:50:45,000
That's awesome.

1101
00:50:45,000 --> 00:50:47,000
What was the winning entry?

1102
00:50:47,000 --> 00:50:51,000
Basically, AI, TensorFlow-powered AI resource management.

1103
00:50:51,000 --> 00:50:52,000
That's amazing.

1104
00:50:52,000 --> 00:50:53,000
Wow.

1105
00:50:53,000 --> 00:50:54,000
Actually, I could see that.

1106
00:50:54,000 --> 00:50:56,000
Yeah, it's actually very practical.

1107
00:50:56,000 --> 00:50:59,000
Yeah, even just some intelligent resource management can make a huge difference.

1108
00:50:59,000 --> 00:51:00,000
I hadn't really thought about that.

1109
00:51:00,000 --> 00:51:03,000
There is a place for FOSS and technology and software

1110
00:51:03,000 --> 00:51:04,000
to make a big difference there.

1111
00:51:04,000 --> 00:51:06,000
I will say it looked like a pretty sweet machine, too.

1112
00:51:06,000 --> 00:51:08,000
You had the specs posted up on your Twitter feed.

1113
00:51:08,000 --> 00:51:09,000
Oh, yeah, look at that.

1114
00:51:09,000 --> 00:51:10,000
And that's no slouch.

1115
00:51:10,000 --> 00:51:11,000
Holy smokes.

1116
00:51:11,000 --> 00:51:12,000
Holy smokes.

1117
00:51:12,000 --> 00:51:13,000
All right, so of course you got it installed with Pop!

1118
00:51:13,000 --> 00:51:14,000
OS.

1119
00:51:14,000 --> 00:51:15,000
That's how it rolls.

1120
00:51:15,000 --> 00:51:16,000
Naturally.

1121
00:51:16,000 --> 00:51:17,000
It's got 3.9 gigahertz.

1122
00:51:17,000 --> 00:51:18,000
Wow.

1123
00:51:18,000 --> 00:51:24,000
The 3.9 gigahertz with eight threads, 16 gigs of RAM, 240 gigabyte disk.

1124
00:51:24,000 --> 00:51:25,000
Nice.

1125
00:51:25,000 --> 00:51:26,000
Nice.

1126
00:51:26,000 --> 00:51:27,000
Oh, look at you.

1127
00:51:27,000 --> 00:51:30,000
Even getting the LCD recycling in there.

1128
00:51:30,000 --> 00:51:31,000
Look at you.

1129
00:51:31,000 --> 00:51:32,000
I'm a full hippie.

1130
00:51:32,000 --> 00:51:33,000
And you went 1904 with Pop!

1131
00:51:33,000 --> 00:51:34,000
OS.

1132
00:51:34,000 --> 00:51:37,000
And of course, it's the 14-inch 1080p display.

1133
00:51:37,000 --> 00:51:39,000
Because matte's the only way to go.

1134
00:51:39,000 --> 00:51:41,000
That's one functional laptop right there.

1135
00:51:41,000 --> 00:51:42,000
Yeah.

1136
00:51:42,000 --> 00:51:44,000
Yeah, that's a nice upgrade on the RAM there.

1137
00:51:44,000 --> 00:51:45,000
Very nice.

1138
00:51:45,000 --> 00:51:46,000
Very nice.

1139
00:51:46,000 --> 00:51:47,000
Congratulations.

1140
00:51:47,000 --> 00:51:48,000
Kyler, huh?

1141
00:51:48,000 --> 00:51:49,000
Kyler.

1142
00:51:49,000 --> 00:51:50,000
Kyler Chen, yeah.

1143
00:51:50,000 --> 00:51:51,000
Congratulations, Mike.

1144
00:51:51,000 --> 00:51:52,000
I think that was a great thing.

1145
00:51:52,000 --> 00:51:53,000
That's really good on you.

1146
00:51:53,000 --> 00:51:54,000
Look at that.

1147
00:51:54,000 --> 00:51:55,000
Yeah.

1148
00:51:55,000 --> 00:51:56,000
Mad Botter is doing their part.

1149
00:51:56,000 --> 00:51:57,000
We're doing our part.

1150
00:51:57,000 --> 00:52:02,160
You can find links to really, I think, all of that, right, over at coder.show slash 362.

1151
00:52:02,160 --> 00:52:04,360
And check out the Mad Botter Inc. on Twitter as well.

1152
00:52:04,360 --> 00:52:07,000
You can check the – Mike tweeted the specs over there, right?

1153
00:52:07,000 --> 00:52:09,000
Is that where he tweeted it?

1154
00:52:09,000 --> 00:52:10,000
That's right.

1155
00:52:10,000 --> 00:52:11,000
Yep.

1156
00:52:11,000 --> 00:52:14,280
Also, we should mention, if you're looking for work, Linux Academy is hiring.

1157
00:52:14,280 --> 00:52:16,560
They are hiring developers as well as other positions.

1158
00:52:16,560 --> 00:52:19,480
Some of them – most of them are remote work from home, too.

1159
00:52:19,480 --> 00:52:20,480
So –

1160
00:52:20,480 --> 00:52:21,480
And it's used in technologies.

1161
00:52:21,480 --> 00:52:23,920
You've probably heard of things like Node.js and Ruby on Rails.

1162
00:52:23,920 --> 00:52:24,920
Yep.

1163
00:52:24,920 --> 00:52:25,920
Yep.

1164
00:52:25,920 --> 00:52:26,920
Check it out.

1165
00:52:26,920 --> 00:52:27,920
LinuxAcademy.com.

1166
00:52:27,920 --> 00:52:29,280
If you scroll around the site, or you can go to LinuxAcademy.com slash careers, it links

1167
00:52:29,280 --> 00:52:31,440
you to a lever page where they are all listed.

1168
00:52:31,440 --> 00:52:32,440
Go over there.

1169
00:52:32,440 --> 00:52:35,600
And in there, when you apply, a little pro tip.

1170
00:52:35,600 --> 00:52:37,120
Let them know you heard about it here.

1171
00:52:37,120 --> 00:52:38,120
Ooh.

1172
00:52:38,120 --> 00:52:42,440
That probably improves your chances, I would imagine, because they're going to be more

1173
00:52:42,440 --> 00:52:45,200
motivated to hire people that listen to podcasts like this.

1174
00:52:45,200 --> 00:52:46,200
That's a real thing.

1175
00:52:46,200 --> 00:52:49,840
I mean, if you've been listening to all of Mike's wisdom for all these years, you know

1176
00:52:49,840 --> 00:52:51,200
what you're talking about at this point.

1177
00:52:51,200 --> 00:52:53,800
It shows genuine, like, passion.

1178
00:52:53,800 --> 00:52:56,800
For Objective-C, yeah.

1179
00:52:56,800 --> 00:53:00,000
Oh, man.

1180
00:53:00,000 --> 00:53:01,560
Never going to go away.

1181
00:53:01,560 --> 00:53:02,560
Never going to live that down.

1182
00:53:02,560 --> 00:53:04,520
No Objective-C forever.

1183
00:53:04,520 --> 00:53:08,240
Just always gives me flashbacks of that post-WWDC episode we did.

1184
00:53:08,240 --> 00:53:10,240
Just every time you do it, it gives me flashbacks.

1185
00:53:10,240 --> 00:53:14,280
I don't know what the individual episode numbers are, but I have a feeling that one did pretty

1186
00:53:14,280 --> 00:53:15,280
well.

1187
00:53:15,280 --> 00:53:16,280
Yeah.

1188
00:53:16,280 --> 00:53:18,880
I would imagine by now, people have figured it out and listened.

1189
00:53:18,880 --> 00:53:23,080
That was a great example of Chris trying to go with the flow and just try to keep the

1190
00:53:23,080 --> 00:53:25,040
show on the rails as much as possible.

1191
00:53:25,040 --> 00:53:26,040
Yeah.

1192
00:53:26,040 --> 00:53:27,040
Not my finest hour.

1193
00:53:27,040 --> 00:53:28,040
Oh.

1194
00:53:28,040 --> 00:53:29,040
Not my finest hour either.

1195
00:53:29,040 --> 00:53:30,040
Listen back.

1196
00:53:30,040 --> 00:53:31,040
I seem so young.

1197
00:53:31,040 --> 00:53:32,040
So unexperienced.

1198
00:53:32,040 --> 00:53:33,040
Oh, child.

1199
00:53:33,040 --> 00:53:35,200
That's what I say every time I hear it.

1200
00:53:35,200 --> 00:53:37,360
We were wizened now, though.

1201
00:53:37,360 --> 00:53:38,360
Seasoned is what I prefer.

1202
00:53:38,360 --> 00:53:39,360
Seasoned indeed, yes.

1203
00:53:39,360 --> 00:53:42,120
Like an ice cast iron pan.

1204
00:53:42,120 --> 00:53:43,120
Oh, thanks.

1205
00:53:43,120 --> 00:53:44,400
Thanks at last.

1206
00:53:44,400 --> 00:53:46,000
I think that's a compliment.

1207
00:53:46,000 --> 00:53:47,000
I'm not really sure.

1208
00:53:47,000 --> 00:53:48,000
Yeah.

1209
00:53:48,000 --> 00:53:52,480
You know, the show is live on a Monday, jblive.tv, jupiterbroadcasting.com slash calendar.

1210
00:53:52,480 --> 00:53:54,320
There may be some prerecording.

1211
00:53:54,320 --> 00:53:55,320
I don't know.

1212
00:53:55,320 --> 00:53:57,240
At some point, Wes and I have to travel to Texas.

1213
00:53:57,240 --> 00:53:58,240
Get to.

1214
00:53:58,240 --> 00:53:59,240
We get to travel to Texas.

1215
00:53:59,240 --> 00:54:00,240
Yes, we do adventure to Texas.

1216
00:54:00,240 --> 00:54:01,240
Yeah.

1217
00:54:01,240 --> 00:54:03,160
We're going to do a Texas adventure at the end of the month, but I don't know.

1218
00:54:03,160 --> 00:54:04,720
Is that actually going to impact recording?

1219
00:54:04,720 --> 00:54:07,520
I don't know if it actually will or not, but we'll chat offline.

1220
00:54:07,520 --> 00:54:11,200
The reason why I bring it up on air is because I want to let you know, we do really love

1221
00:54:11,200 --> 00:54:12,200
it when you join live.

1222
00:54:12,200 --> 00:54:13,200
Oh, it's lots of fun.

1223
00:54:13,200 --> 00:54:17,280
And you can get it in your time zone at jupiterbroadcasting.com slash calendar.

1224
00:54:17,280 --> 00:54:20,920
Now, if you, you know, maybe you can't make it or you want a backup method to make sure

1225
00:54:20,920 --> 00:54:25,040
you always get your Coder Radio, well, Coder Radio, we have an RSS feed.

1226
00:54:25,040 --> 00:54:26,040
We have a way to subscribe.

1227
00:54:26,040 --> 00:54:27,040
It's true.

1228
00:54:27,040 --> 00:54:28,040
We're on all the apps.

1229
00:54:28,040 --> 00:54:29,040
Coder.show slash subscribe.

1230
00:54:29,040 --> 00:54:33,400
And that's probably, you know, probably we always lead with the live stream, but the

1231
00:54:33,400 --> 00:54:39,560
reality is the vast, vast majority, like 99.9% are getting it on the RSS feed.

1232
00:54:39,560 --> 00:54:40,720
And we appreciate that.

1233
00:54:40,720 --> 00:54:44,480
So we have a Drew now, new full-time Jupiter Broadcasting member joined a couple of months

1234
00:54:44,480 --> 00:54:45,480
ago.

1235
00:54:45,480 --> 00:54:50,240
Uh, he, he, uh, brings it through the wash, cleans up, brings in Mike's local audio.

1236
00:54:50,240 --> 00:54:54,160
So I think, I hope people have noticed it's been sounding phenomenal lately.

1237
00:54:54,160 --> 00:54:56,160
I think Coder Radio has been sounding really great.

1238
00:54:56,160 --> 00:54:58,800
And a big part of that is, uh, is thanks to Drew.

1239
00:54:58,800 --> 00:54:59,800
He's a wizard.

1240
00:54:59,800 --> 00:55:03,000
And of course, thanks to Mike for being willing to record the audio there locally, cause it's

1241
00:55:03,000 --> 00:55:04,000
more hoops to jump through.

1242
00:55:04,000 --> 00:55:05,000
Way more hoops.

1243
00:55:05,000 --> 00:55:06,000
No worries.

1244
00:55:06,000 --> 00:55:07,000
But, uh, now we're pro sounding.

1245
00:55:07,000 --> 00:55:08,560
We're like, we're like getting up with NPR now.

1246
00:55:08,560 --> 00:55:11,320
I mean, I don't want to brag, but I'm really proud of you guys.

1247
00:55:11,320 --> 00:55:13,880
Planet Coder coming soon.

1248
00:55:13,880 --> 00:55:18,280
If you want more Mr. Michael Dominic, and I know you do because, well, I do.

1249
00:55:18,280 --> 00:55:20,080
You can find him on Twitter, Mike.

1250
00:55:20,080 --> 00:55:21,080
You're at?

1251
00:55:21,080 --> 00:55:22,080
At Dimenuco.

1252
00:55:22,080 --> 00:55:23,080
Chris, you're there too.

1253
00:55:23,080 --> 00:55:24,080
At Chris LAS.

1254
00:55:24,080 --> 00:55:26,600
And I'm at Westpane.

1255
00:55:26,600 --> 00:55:28,680
Thank you so much for joining us.

1256
00:55:28,680 --> 00:55:30,320
Please come back next week.

1257
00:55:30,320 --> 00:55:56,960
Hopefully see you then.

