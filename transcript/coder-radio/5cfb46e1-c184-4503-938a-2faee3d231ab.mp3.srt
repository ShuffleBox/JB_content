1
00:00:00,000 --> 00:00:07,000
This is KOTORadio, episode 346 for February 25th, 2019.

2
00:00:30,000 --> 00:00:40,000
Hi everyone and welcome to KOTORadio, Jupiter Broadcasting's weekly talk show, taking a pragmatic look at the art and the business of software development and its related technologies.

3
00:00:40,000 --> 00:00:50,000
My name is Chris, I'm here up in the beautiful, well, mostly beautiful Pacific Northwest, but that, that's not why we're joined here. It's not for me. It might be for Wes, actually.

4
00:00:50,000 --> 00:00:52,000
Oh, maybe, I hope so.

5
00:00:52,000 --> 00:00:56,000
That could be, but no, no, it's our host, Mr. Dominic. Hello, Mike!

6
00:00:56,000 --> 00:01:00,000
Mesa not running Linux today.

7
00:01:00,000 --> 00:01:10,000
The audience complained about Mike's mic, which is always hard for us to say, and so he shows up this week with a MacBook Air. This is what you do, you see?

8
00:01:10,000 --> 00:01:12,000
But he owns it right at the top of the show, let's be clear.

9
00:01:12,000 --> 00:01:16,000
Yeah, what did I say about letting the feedback get in our heads, though? I tried to give us all a pep talk on this.

10
00:01:16,000 --> 00:01:20,000
You did, except I listened to the recording.

11
00:01:20,000 --> 00:01:22,000
Yeah, yeah.

12
00:01:22,000 --> 00:01:24,000
And it sounded like I was live from a small airport.

13
00:01:24,000 --> 00:01:28,000
Yeah, it's interesting, there's audio differences.

14
00:01:28,000 --> 00:01:32,000
You know what, though, is you need some tactical cushioning, is what you need.

15
00:01:32,000 --> 00:01:38,000
Like, some curtains on that wall behind your monitor or something, you need some tactical sound insulation.

16
00:01:38,000 --> 00:01:40,000
We need to go storm his fortress in Florida.

17
00:01:40,000 --> 00:01:42,000
Just show up with a whole bunch of foam.

18
00:01:42,000 --> 00:01:44,000
I kind of just feel like that's what has to happen.

19
00:01:44,000 --> 00:01:46,000
I kind of think that's actually true.

20
00:01:46,000 --> 00:01:48,000
Would you come over and do like a studio makeover.

21
00:01:48,000 --> 00:01:50,000
Bring like a boom arm.

22
00:01:50,000 --> 00:01:52,000
If I vlogged, that would actually make for a cool vlog.

23
00:01:52,000 --> 00:01:54,000
We could call it pimp my room.

24
00:01:54,000 --> 00:01:56,000
Yeah, pimp your studio.

25
00:01:56,000 --> 00:01:58,000
Yeah, that'd be great.

26
00:01:58,000 --> 00:02:00,000
That's right, oh god, I forgot about that old show.

27
00:02:00,000 --> 00:02:02,000
I used to watch that show.

28
00:02:02,000 --> 00:02:04,000
Well, it's nice to be here with you guys.

29
00:02:04,000 --> 00:02:06,000
I'm going to be traveling again for the next couple of weeks.

30
00:02:06,000 --> 00:02:10,000
So, I don't know if I'll, I'm pretty sure I won't be on the show next week.

31
00:02:10,000 --> 00:02:12,000
And I'm not so sure about the show after that either.

32
00:02:12,000 --> 00:02:14,000
So, it's been fun hanging out with the two of you.

33
00:02:14,000 --> 00:02:18,000
It's been nice, and thanks for having me back on the show.

34
00:02:18,000 --> 00:02:20,000
It's been really nice.

35
00:02:20,000 --> 00:02:24,000
Does that mean we could be HomePod free for two weeks?

36
00:02:24,000 --> 00:02:28,000
You bastards, you keep bringing up the HomePod, not me.

37
00:02:28,000 --> 00:02:30,000
But let's just talk about it for a second.

38
00:02:30,000 --> 00:02:32,000
I suggest you get one started.

39
00:02:32,000 --> 00:02:34,000
That's the trick to make Mike's audio sound even better, right?

40
00:02:34,000 --> 00:02:36,000
If you play it on a HomePod.

41
00:02:36,000 --> 00:02:38,000
That's true.

42
00:02:38,000 --> 00:02:40,000
He does sound pretty good on the old HomePod.

43
00:02:40,000 --> 00:02:42,000
Hey, I'm not here to sell HomePods.

44
00:02:42,000 --> 00:02:44,000
But we are here to talk about many things.

45
00:02:44,000 --> 00:02:46,000
We've all brought something to the show, which is kind of fun.

46
00:02:46,000 --> 00:02:48,000
So, we each have something to share with the class.

47
00:02:48,000 --> 00:02:51,000
And mine was of the most minimal effort as possible.

48
00:02:51,000 --> 00:02:53,000
Actually, this isn't my chief contribution.

49
00:02:53,000 --> 00:02:55,000
But I did want to bring something I thought would fire Mike up.

50
00:02:55,000 --> 00:03:02,000
We were off air and on air recently talking about the cult of Swift.

51
00:03:02,000 --> 00:03:04,000
That has been really built up.

52
00:03:04,000 --> 00:03:07,000
Sort of as it's a mixture of the cult around Apple.

53
00:03:07,000 --> 00:03:12,000
And it's a mixture of, well, Swift is really appealing to language nerds.

54
00:03:12,000 --> 00:03:13,000
Would you agree with that?

55
00:03:13,000 --> 00:03:14,000
Oh, yeah.

56
00:03:14,000 --> 00:03:16,000
I mean, there's lots of new shiniest stuff in there.

57
00:03:16,000 --> 00:03:19,000
Well, and a lot of lessons learned are reflected in Swift.

58
00:03:19,000 --> 00:03:20,000
Yeah, exactly.

59
00:03:20,000 --> 00:03:21,000
It's a modern language.

60
00:03:21,000 --> 00:03:25,000
And so it has, I think, these things, and the fact that it's open source,

61
00:03:25,000 --> 00:03:28,000
have come together to create a bit of a Swift monster.

62
00:03:28,000 --> 00:03:34,000
Which, Mike, you have started to complain about incessantly.

63
00:03:34,000 --> 00:03:35,000
Started?

64
00:03:35,000 --> 00:03:36,000
It's been five years.

65
00:03:36,000 --> 00:03:37,000
I'm just saying.

66
00:03:37,000 --> 00:03:39,000
You were ahead of the curve on this one.

67
00:03:39,000 --> 00:03:43,000
However, this is where I thought it took a little bit of a change of conversation.

68
00:03:43,000 --> 00:03:49,000
Two rather noted commentators of this space, Marco Armit and John Gruber,

69
00:03:49,000 --> 00:03:53,000
John Gruber of Daring Fireball and Marco Armit of Overcast and other things,

70
00:03:53,000 --> 00:03:57,000
were tweeting, and I just wanted to just kind of go through the thread really quick.

71
00:03:57,000 --> 00:03:59,000
They say, add up all the time you've, this is Marco tweeting,

72
00:03:59,000 --> 00:04:03,000
and this is interesting when you think about people that are sticking with Objective-C

73
00:04:03,000 --> 00:04:04,000
or whatever their preferred language is.

74
00:04:04,000 --> 00:04:08,000
You could take the situation and apply it to you.

75
00:04:08,000 --> 00:04:10,000
Add up all the time you spent learning Swift from scratch,

76
00:04:10,000 --> 00:04:14,000
accommodating its strictness, fighting its buggy tools,

77
00:04:14,000 --> 00:04:16,000
migrating your code through language changes,

78
00:04:16,000 --> 00:04:21,000
and relearning APIs and conventions as they've changed over the last five years.

79
00:04:21,000 --> 00:04:23,000
I've spent zero time doing that.

80
00:04:23,000 --> 00:04:26,000
He says, I like to jump in when it's so old-born and slow-moving

81
00:04:26,000 --> 00:04:28,000
that nobody bothers to tell people to move to Swift

82
00:04:28,000 --> 00:04:32,000
because they're all busy geeking out over a new language.

83
00:04:32,000 --> 00:04:34,000
Which sounds a lot like Mike's outlook on it.

84
00:04:34,000 --> 00:04:38,000
But then Gruber falls in, and this is where I think he really touches on something

85
00:04:38,000 --> 00:04:40,000
that Mike's been talking about for a while.

86
00:04:40,000 --> 00:04:43,000
Noted Apple commentator John Gruber says,

87
00:04:43,000 --> 00:04:47,000
as an outsider who can program but has never seriously used either language,

88
00:04:47,000 --> 00:04:51,000
one thing that's obvious to me is that Swift has a vocal group of zealots,

89
00:04:51,000 --> 00:04:57,000
whereas Objective-C advocates are invariably very practical-minded.

90
00:04:57,000 --> 00:05:00,000
And here we are taking a pragmatic look at the art and software.

91
00:05:00,000 --> 00:05:01,000
Supposedly.

92
00:05:01,000 --> 00:05:02,000
Yeah.

93
00:05:02,000 --> 00:05:05,000
Marco chimes in that maybe because Objective-C was never a cool language

94
00:05:05,000 --> 00:05:09,000
by language nerds, it's always been an odd, obscure kind of charming language,

95
00:05:09,000 --> 00:05:12,000
weirdly full of brackets that you had to use for an Apple platform.

96
00:05:12,000 --> 00:05:14,000
Bracket life.

97
00:05:14,000 --> 00:05:17,000
Swift appeals far more to language nerds,

98
00:05:17,000 --> 00:05:20,000
bringing a larger degree of zealotry,

99
00:05:20,000 --> 00:05:24,000
which lines up with just about every other area of tech we see.

100
00:05:24,000 --> 00:05:27,000
So, yeah, you know, I'm going to let Wes go first.

101
00:05:27,000 --> 00:05:29,000
I have so many hot takes on this, Chris.

102
00:05:29,000 --> 00:05:30,000
They're on fire.

103
00:05:30,000 --> 00:05:31,000
Hot take. I like that.

104
00:05:31,000 --> 00:05:32,000
We've got hot takes now.

105
00:05:32,000 --> 00:05:36,000
It does seem like one of those areas where we see a certain purity aspect.

106
00:05:36,000 --> 00:05:39,000
Like there are things, there are many ways that Swift is a safer or better

107
00:05:39,000 --> 00:05:42,000
or perhaps better designed for more robust language

108
00:05:42,000 --> 00:05:46,000
than a lot of comparisons, particularly Objective-C.

109
00:05:46,000 --> 00:05:48,000
But that doesn't mean that the developer story is finished, right?

110
00:05:48,000 --> 00:05:51,000
A lot of the complaints that I see here are about some of the tooling

111
00:05:51,000 --> 00:05:54,000
and other changes or breaking API changes, etc.

112
00:05:54,000 --> 00:05:55,000
And those are all real pain.

113
00:05:55,000 --> 00:05:57,000
So I think you get the certain class of people that are like,

114
00:05:57,000 --> 00:05:59,000
in theory, this is so much better.

115
00:05:59,000 --> 00:06:03,000
It's kind of the same for, you know, like certain types of Haskell

116
00:06:03,000 --> 00:06:06,000
or other really obscure fancy type system type languages

117
00:06:06,000 --> 00:06:08,000
where, yes, there are a lot of benefits,

118
00:06:08,000 --> 00:06:11,000
but that doesn't mean it's the best choice to go write the app

119
00:06:11,000 --> 00:06:13,000
that you need to ship two weeks down the road.

120
00:06:13,000 --> 00:06:15,000
Mm-hmm. Mm-hmm. That's a very fair point.

121
00:06:15,000 --> 00:06:19,000
So I'm going to say something that's going to make Wes puke on his keyboard.

122
00:06:19,000 --> 00:06:24,000
Oh, no, it's the laptop, Wes. It's the laptop.

123
00:06:24,000 --> 00:06:27,000
Swift and Linux have something in common.

124
00:06:27,000 --> 00:06:29,000
Blah! Let's hear it.

125
00:06:29,000 --> 00:06:31,000
Well done.

126
00:06:31,000 --> 00:06:34,000
So at least as far as the Apple developer community is concerned,

127
00:06:34,000 --> 00:06:36,000
they're both new, right?

128
00:06:36,000 --> 00:06:39,000
And I think I tried to make this point in my Sleep Deprived

129
00:06:39,000 --> 00:06:42,000
against the Geneva Convention episode last week.

130
00:06:42,000 --> 00:06:47,000
But basically, you know, Marco can ignore Swift.

131
00:06:47,000 --> 00:06:50,000
First of all, let's just table stakes.

132
00:06:50,000 --> 00:06:52,000
I hate Swift, right?

133
00:06:52,000 --> 00:06:53,000
I hate Swift developers.

134
00:06:53,000 --> 00:06:55,000
I think they're bad people, and I want them to go away.

135
00:06:55,000 --> 00:06:57,000
So we've got that settled.

136
00:06:57,000 --> 00:06:58,000
Okay, good.

137
00:06:58,000 --> 00:07:03,000
But I've had to learn Swift because when you are a consultant,

138
00:07:03,000 --> 00:07:07,000
you cannot ever allow someone to just say,

139
00:07:07,000 --> 00:07:09,000
oh, well, I see that proposal they gave you,

140
00:07:09,000 --> 00:07:12,000
but they're using the, you know, pseudo-deprecated language.

141
00:07:12,000 --> 00:07:16,000
And since, you know, people lie, thank you, Tech Mahindra,

142
00:07:16,000 --> 00:07:18,000
they'll say they're using the deprecated language.

143
00:07:18,000 --> 00:07:23,000
And I'm just teasing certain offshore shops because I don't like them.

144
00:07:23,000 --> 00:07:28,000
The joke aside, it is the case that someone in Marco's position,

145
00:07:28,000 --> 00:07:32,000
being a product developer, someone who builds his own apps

146
00:07:32,000 --> 00:07:36,000
and doesn't sell consulting services, has a lot more freedom.

147
00:07:36,000 --> 00:07:38,000
I actually agree with everything he says,

148
00:07:38,000 --> 00:07:41,000
but it's just not tenable if you're a consultant

149
00:07:41,000 --> 00:07:43,000
and you're operating this competitive market,

150
00:07:43,000 --> 00:07:46,000
especially when you need to justify, you know,

151
00:07:46,000 --> 00:07:50,000
$120 to $150 an hour against some,

152
00:07:50,000 --> 00:07:52,000
and I'm just going to pick a country out of my head, India,

153
00:07:52,000 --> 00:07:57,000
Indian developers, you know, $20 or $15 to $20 an hour.

154
00:07:57,000 --> 00:07:58,000
Right.

155
00:07:58,000 --> 00:08:00,000
You can't allow them to have that,

156
00:08:00,000 --> 00:08:02,000
he's using old deprecated technology.

157
00:08:02,000 --> 00:08:05,000
Right, because they come in and say, no, it's a whole Swift-based project,

158
00:08:05,000 --> 00:08:07,000
it's nice and it's sexy and it's...

159
00:08:07,000 --> 00:08:09,000
Right, you'll have to throw his code out in a year.

160
00:08:09,000 --> 00:08:10,000
I've heard it all.

161
00:08:10,000 --> 00:08:12,000
Oh, yeah, yeah, yeah, yeah.

162
00:08:12,000 --> 00:08:15,000
Now, the positive way I tried to frame this last week,

163
00:08:15,000 --> 00:08:19,000
because I didn't want to, again, I didn't want to put my MAGA hat on again,

164
00:08:19,000 --> 00:08:25,000
was it is just the case that there are a lot of people who would love to be Marco

165
00:08:25,000 --> 00:08:28,000
and would love to be, like, famous in the iOS dev community,

166
00:08:28,000 --> 00:08:31,000
and they saw Swift as that opportunity.

167
00:08:31,000 --> 00:08:36,000
So, whenever someone tells you to adopt a technology,

168
00:08:36,000 --> 00:08:40,000
they have a reason to tell you that, right?

169
00:08:40,000 --> 00:08:42,000
No one's telling you the truth other than Chris.

170
00:08:42,000 --> 00:08:45,000
Chris's interest is to keep his hair as amazing as possible

171
00:08:45,000 --> 00:08:47,000
and to buy more HomePods.

172
00:08:47,000 --> 00:08:49,000
I've got to be honest, it's turning gray, it's starting to turn gray.

173
00:08:49,000 --> 00:08:51,000
No, you could be a silver fox, that's okay.

174
00:08:51,000 --> 00:08:52,000
Thank you.

175
00:08:52,000 --> 00:08:57,000
But, like, other than Chris and maybe Wes, because I think he's a true Linux triad,

176
00:08:57,000 --> 00:09:00,000
you can't trust anybody, you can't trust me at all.

177
00:09:00,000 --> 00:09:01,000
I didn't give you that.

178
00:09:01,000 --> 00:09:05,000
I don't like Swift because it created a disadvantage for me.

179
00:09:05,000 --> 00:09:09,000
I also don't like Swift because I think it's a bad implementation of ideas

180
00:09:09,000 --> 00:09:13,000
that are very good in languages such as Haskell and, ding, ding, ding, Rust.

181
00:09:13,000 --> 00:09:18,000
But I will write Swift, I have written tens of thousands of lines of Swift,

182
00:09:18,000 --> 00:09:22,000
because, unfortunately, the community is stupid

183
00:09:22,000 --> 00:09:25,000
and they decided to adopt a language that is in every way inferior to Objective-C.

184
00:09:25,000 --> 00:09:26,000
Wow.

185
00:09:26,000 --> 00:09:27,000
Go ahead, Wes.

186
00:09:27,000 --> 00:09:29,000
Oh, strong words.

187
00:09:29,000 --> 00:09:33,000
I like that he throws that in your court too, like, now try to defend that.

188
00:09:33,000 --> 00:09:36,000
Don't make me go install Swift again right here on Linux.

189
00:09:36,000 --> 00:09:38,000
Actually, I think I still have it installed.

190
00:09:38,000 --> 00:09:39,000
It actually works better on Linux.

191
00:09:39,000 --> 00:09:40,000
You know, this is the irony.

192
00:09:40,000 --> 00:09:42,000
You know where Swift falls apart?

193
00:09:42,000 --> 00:09:47,000
The minute you import Cocoa Touch, as soon as you have to use Cocoa,

194
00:09:47,000 --> 00:09:51,000
you realize, wow, this is just like really shitty Objective-C.

195
00:09:51,000 --> 00:09:54,000
Is that a limitation of the underlying APIs,

196
00:09:54,000 --> 00:09:58,000
like APIs that are better suited for Objective-C that haven't been ported?

197
00:09:58,000 --> 00:09:59,000
Yeah.

198
00:09:59,000 --> 00:10:02,000
It's called a limitation.

199
00:10:02,000 --> 00:10:06,000
I could see an alternate universe where they held Swift back for a few more years

200
00:10:06,000 --> 00:10:08,000
and re-implement, like Marzipan, right?

201
00:10:08,000 --> 00:10:13,000
They could have done Marzipan where it was totally oriented towards the Swift way of thinking.

202
00:10:13,000 --> 00:10:21,000
But instead, what they did was they basically made Swift wrappers to all the Objective-C,

203
00:10:21,000 --> 00:10:22,000
particularly UI calls.

204
00:10:22,000 --> 00:10:27,000
And the Cocoa UI is, you got to remember, we're going back to Next here.

205
00:10:27,000 --> 00:10:33,000
So we're talking 90s, late 80s, you know, pure 00.

206
00:10:33,000 --> 00:10:35,000
Remember, they used to have a Java interface.

207
00:10:35,000 --> 00:10:37,000
Am I the only person who remembers this?

208
00:10:37,000 --> 00:10:40,000
So it's really just not a good match.

209
00:10:40,000 --> 00:10:41,000
That's fair.

210
00:10:41,000 --> 00:10:43,000
Gosh.

211
00:10:43,000 --> 00:10:45,000
You know what I was going to mention?

212
00:10:45,000 --> 00:10:51,000
Yeah, it really is in the perspective of like Objective-C and other things early days.

213
00:10:51,000 --> 00:10:55,000
Like just today, I was reading a post about a developer.

214
00:10:55,000 --> 00:11:00,000
His name is Comp Nerd, but I don't think that's his real name, obviously.

215
00:11:00,000 --> 00:11:03,000
He is porting Swift to Windows.

216
00:11:03,000 --> 00:11:04,000
How about that one?

217
00:11:04,000 --> 00:11:05,000
Swift on Windows.

218
00:11:05,000 --> 00:11:06,000
Yeah, I guess I mean to stick.

219
00:11:06,000 --> 00:11:08,000
Why not?

220
00:11:08,000 --> 00:11:09,000
Yes, of course.

221
00:11:09,000 --> 00:11:12,000
Why can't Beelzebub and Satan get married?

222
00:11:12,000 --> 00:11:13,000
So I thought you'd like that.

223
00:11:13,000 --> 00:11:14,000
I thought you'd like that.

224
00:11:14,000 --> 00:11:17,000
He says, I finally, he writes on the Swift form.

225
00:11:17,000 --> 00:11:23,000
I finally managed to get the compiler, the support libraries, the runtime, the standard library,

226
00:11:23,000 --> 00:11:26,000
libdispatch, and all of that now working.

227
00:11:26,000 --> 00:11:28,000
Foundations to build on and run on Windows are in place.

228
00:11:28,000 --> 00:11:34,000
This is still dependent on a couple of patches that will no doubt need to be cleaned up before they are ready to be merged.

229
00:11:34,000 --> 00:11:35,000
OK, no, don't do this.

230
00:11:35,000 --> 00:11:36,000
No, no, no, no, no.

231
00:11:36,000 --> 00:11:37,000
It's happening.

232
00:11:37,000 --> 00:11:38,000
No.

233
00:11:38,000 --> 00:11:44,000
OK, if you want to develop for Windows and guys, this is confidential, so I hope nobody.

234
00:11:44,000 --> 00:11:46,000
You know, we don't have to tell anybody if you don't want to.

235
00:11:46,000 --> 00:11:48,000
Yeah, there's this language.

236
00:11:48,000 --> 00:11:50,000
It's called C sharp.

237
00:11:50,000 --> 00:11:52,000
It's great.

238
00:11:52,000 --> 00:11:55,000
Use that.

239
00:11:55,000 --> 00:11:59,000
It's even it's even it's even sort of not local.

240
00:11:59,000 --> 00:12:00,000
I don't know.

241
00:12:00,000 --> 00:12:01,000
What do you call that?

242
00:12:01,000 --> 00:12:04,000
Because it's like it's from the it's from the same place the operating system is.

243
00:12:04,000 --> 00:12:09,000
But I hear there's some weird relationship between Windows and C sharp.

244
00:12:09,000 --> 00:12:10,000
What do I know?

245
00:12:10,000 --> 00:12:12,000
Oh, yeah.

246
00:12:12,000 --> 00:12:13,000
It looks like it's getting close, though.

247
00:12:13,000 --> 00:12:19,000
He says there's a number of patches in flight across the board for the compiler foundation tests, the build system.

248
00:12:19,000 --> 00:12:22,000
But it's really a matter of polishing these patches up and getting them merged in.

249
00:12:22,000 --> 00:12:26,000
And then we should be pretty dang close.

250
00:12:26,000 --> 00:12:31,000
He's got a he's got a screenshot of PLU till running on Windows right here.

251
00:12:31,000 --> 00:12:33,000
That's terrifying.

252
00:12:33,000 --> 00:12:34,000
It is.

253
00:12:34,000 --> 00:12:36,000
That's kind of weird.

254
00:12:36,000 --> 00:12:40,000
I mean, you could be in a world where you, you know, use Swift to target every darn platform.

255
00:12:40,000 --> 00:12:44,000
Well, isn't the value of Swift on Windows similar to the value of Swift on Linux?

256
00:12:44,000 --> 00:12:45,000
Am I wrong there?

257
00:12:45,000 --> 00:12:47,000
I mean, it's just a different use case.

258
00:12:47,000 --> 00:12:48,000
Same argument.

259
00:12:48,000 --> 00:12:51,000
When I read Windows, I read Windows client operating system.

260
00:12:51,000 --> 00:12:52,000
Right.

261
00:12:52,000 --> 00:12:53,000
Swift on Linux.

262
00:12:53,000 --> 00:12:55,000
Ironically, Swift is not the way it's structured.

263
00:12:55,000 --> 00:13:01,000
Not a terrible language for like pure APIs.

264
00:13:01,000 --> 00:13:03,000
Like, I think Vapor actually makes sense.

265
00:13:03,000 --> 00:13:04,000
Right.

266
00:13:04,000 --> 00:13:07,000
Which is for those who don't know, Vapor is a Swift.

267
00:13:07,000 --> 00:13:11,000
I don't want to call it Ruby on Rails, but it's like a Web API development framework.

268
00:13:11,000 --> 00:13:12,000
Right.

269
00:13:12,000 --> 00:13:17,000
But before we leave this and get on to even more terrible things.

270
00:13:17,000 --> 00:13:19,000
I mean, come on, guys, am I crazy?

271
00:13:19,000 --> 00:13:22,000
Don't actually let me let me narrow that question on this one topic.

272
00:13:22,000 --> 00:13:25,000
Am I crazy?

273
00:13:25,000 --> 00:13:26,000
You know, here's where I come down on it.

274
00:13:26,000 --> 00:13:33,000
First of all, I really appreciate your honesty about like you can't there's like you can't necessarily trust the people that are selling you the project.

275
00:13:33,000 --> 00:13:37,000
I think that's a very that's a very honest perspective.

276
00:13:37,000 --> 00:13:41,000
It's insight you are giving to people that are hiring contractors to do this work in the future.

277
00:13:41,000 --> 00:13:45,000
So long as they don't use it against me, I think that was nice.

278
00:13:45,000 --> 00:13:57,000
I think I think what what gets me is real programs that sell can be built like a house of cards as long as they execute the function the customer expects.

279
00:13:57,000 --> 00:14:08,000
And we we end up signaling what what systems we use, like desktop operating system or what what languages we use as a way to belong to a tribe.

280
00:14:08,000 --> 00:14:10,000
Like we we signal these out there.

281
00:14:10,000 --> 00:14:15,000
My favorite my favorite language would be the one that I choose to use that does the job that thank you very much.

282
00:14:15,000 --> 00:14:17,000
I don't need to tell you about.

283
00:14:17,000 --> 00:14:18,000
So it is objective.

284
00:14:18,000 --> 00:14:32,000
Yeah, no, I'm just my point is it's like I like James Thompson tweeted I pick the team of not sharing a preference so I don't get dragged into a maelstrom of bullshit like like these are all these are all things to a means.

285
00:14:32,000 --> 00:14:34,000
And yeah, it's fine.

286
00:14:34,000 --> 00:14:37,000
It's fine to like the tools that you use because they work well.

287
00:14:37,000 --> 00:14:38,000
But yeah, that's what it is.

288
00:14:38,000 --> 00:14:45,000
And the customer, as long as the application runs and does what the customer expects, like good to go.

289
00:14:45,000 --> 00:14:49,000
Well, all right, I'm going to devil's advocate this a bit.

290
00:14:49,000 --> 00:15:00,000
While I think in the past, the argument that I made that I said that, like, you know, generic offshore consulting company makes against me for wanting to use Objective C, I think it's unfair.

291
00:15:00,000 --> 00:15:03,000
We are getting pretty long in the tooth now.

292
00:15:03,000 --> 00:15:11,000
And if something runs perfectly and works today, it seems pretty clear that Apple is going to drop the hammer on Objective C fairly soon.

293
00:15:11,000 --> 00:15:19,000
In fact, all this talk about our Max gets me a little shaky in the boots.

294
00:15:19,000 --> 00:15:22,000
Would you really either of you be OK, Green?

295
00:15:22,000 --> 00:15:25,000
Like if it was your decision, like let's take the VP over here.

296
00:15:25,000 --> 00:15:29,000
Chris, they want to hire somebody to build a Linux Academy iPad app.

297
00:15:29,000 --> 00:15:31,000
I don't even know if such a thing exists, to be honest with you.

298
00:15:31,000 --> 00:15:34,000
And you were in charge of vetting the proposal.

299
00:15:34,000 --> 00:15:38,000
Would you really greenlight an Objective C solution?

300
00:15:38,000 --> 00:15:40,000
I would. You would.

301
00:15:40,000 --> 00:15:44,000
Yeah, I would. You wouldn't be worried about having to be refactored.

302
00:15:44,000 --> 00:15:49,000
I'm not really dragged around by market trends when it comes to that kind of stuff.

303
00:15:49,000 --> 00:15:52,000
What I maybe prefer a swift, you know, a more something.

304
00:15:52,000 --> 00:15:58,000
Here's what I'll tell you. Here's what would make the decision for me is how how much does it take advantage of the iOS platform?

305
00:15:58,000 --> 00:16:02,000
Like how good does it look on the iPad? Does it take advantage of share share sheets and things like that?

306
00:16:02,000 --> 00:16:04,000
Does it properly integrate itself?

307
00:16:04,000 --> 00:16:06,000
Whichever one met that would be the ultimate decider.

308
00:16:06,000 --> 00:16:10,000
But if somebody came at me and said the whole thing's built in Swift, it's really great.

309
00:16:10,000 --> 00:16:14,000
It's using iCloud to store their progress so that way they can move between devices.

310
00:16:14,000 --> 00:16:16,000
It's using all native APIs.

311
00:16:16,000 --> 00:16:21,000
And somebody came to me with an Objective C one that wouldn't make the final decision for me.

312
00:16:21,000 --> 00:16:26,000
But I would be more inclined to go with the one that felt like it was based on more modern technology.

313
00:16:26,000 --> 00:16:31,000
So I may just think it may play a factor in the final decision if I had two competing and one was based on Swift.

314
00:16:31,000 --> 00:16:33,000
That would be kind of the tiebreaker.

315
00:16:33,000 --> 00:16:35,000
It's not the be all and you wouldn't look to that as your first thing.

316
00:16:35,000 --> 00:16:45,000
Right. You know, it's so funny, though, because right when Swift came out within like six months, it was a nonstarter going in pitching Objective C.

317
00:16:45,000 --> 00:16:49,000
And I think maybe because you guys are technical, you see that it's like not really that important.

318
00:16:49,000 --> 00:16:54,000
Right. That's right between. But that's not necessarily who's making the purchasing decisions.

319
00:16:54,000 --> 00:16:57,000
When you're in business or a client.

320
00:16:57,000 --> 00:17:01,000
Yeah. Oh, it's a it's a fun world we live in.

321
00:17:01,000 --> 00:17:04,000
Like, I mean, not just a just as an analogy.

322
00:17:04,000 --> 00:17:10,000
We don't need to talk about foldable phones, but I feel like foldable phones are sort of an example of the market leading the consumer.

323
00:17:10,000 --> 00:17:12,000
They think they know what the consumer wants.

324
00:17:12,000 --> 00:17:19,000
It's the sort of the same thing where people that are not necessarily technical, but they think they know what they need to want.

325
00:17:19,000 --> 00:17:22,000
They think they know they need to want Swift. It needs to be based on this.

326
00:17:22,000 --> 00:17:30,000
There's certain things which you and I have talked about, Mike, in like several contexts as a challenge is that there's some companies that can just claim they're using something new and hip.

327
00:17:30,000 --> 00:17:33,000
And a lot of time we've talked about it more like the Web development context.

328
00:17:33,000 --> 00:17:35,000
But it's the same thing on mobile.

329
00:17:35,000 --> 00:17:39,000
Wait, was that node you just mentioned? Yeah, I'm pretty sure we need that.

330
00:17:39,000 --> 00:17:43,000
IOS Linux Academy have to be using block chain somehow.

331
00:17:43,000 --> 00:17:46,000
Of course, every screen is rendered on the block.

332
00:17:46,000 --> 00:17:50,000
Of course. Oh, my gosh, you got to work in the block chain.

333
00:17:50,000 --> 00:17:52,000
You know, something else we've talked about.

334
00:17:52,000 --> 00:17:56,000
That's kind of like a topic that has evolved over the years in different contexts.

335
00:17:56,000 --> 00:17:59,000
Another one that has been an ongoing thing since the show really started.

336
00:17:59,000 --> 00:18:06,000
It was a it was a hot thing when the show started with the patent wars, patent wars, Samsung versus Apple and all that stuff.

337
00:18:06,000 --> 00:18:15,000
Well, now it's like now that we're like many years into this, it's apparently companies like Apple are just done with it.

338
00:18:15,000 --> 00:18:20,000
Apple plans to close its stores in the eastern district of Texas to fight against patent trolls.

339
00:18:20,000 --> 00:18:22,000
They're just going to close that. They're just going to. You know what?

340
00:18:22,000 --> 00:18:27,000
We're done. That way, we don't have jurisdiction in here. You know, I mean, you don't have jurisdiction over us.

341
00:18:27,000 --> 00:18:30,000
But like, I look at the jobs like the jobs. That's a bummer.

342
00:18:30,000 --> 00:18:36,000
That's the great part. I love it. You're fired. Go write your congressman.

343
00:18:36,000 --> 00:18:40,000
Yeah, I suppose that's a little bit of pressure. That is. I wonder if that'll work.

344
00:18:40,000 --> 00:18:48,000
It is funny, though, like these are seem like pretty perverse economic incentives that we end up generating by not not controlling for this at all.

345
00:18:48,000 --> 00:18:51,000
Yeah, I think this is actually the correct way to solve the problem.

346
00:18:51,000 --> 00:18:56,000
You do. I'm going to side with the big evil corporation. What about the jerbs?

347
00:18:56,000 --> 00:19:00,000
I don't care. Well, collateral damage, right? Like there are representatives.

348
00:19:00,000 --> 00:19:09,000
Remember, judges are elected. So people of eastern Texas, if you would like to keep your jobs, you might want to elect more skeptical judges on patent law, huh?

349
00:19:09,000 --> 00:19:15,000
Oh, hmm. There you go. Yeah, actually, I think it's you got to you got to you got to weed this corruption out.

350
00:19:15,000 --> 00:19:19,000
Although judges are only elected someplace. I don't know if it's not always universal. Some are appointed.

351
00:19:19,000 --> 00:19:24,000
Well, if they're appointed, you just vote the guys out who appoint them. Either way, that's you get the vote.

352
00:19:24,000 --> 00:19:27,000
But is that a large enough like it does the Apple store? Is that big? Is it that big?

353
00:19:27,000 --> 00:19:33,000
I know plenty of consumers who don't show up on a radar like that has to make a blip on some officials radar, right?

354
00:19:33,000 --> 00:19:39,000
That how long people like they'll drive a little farther and then in six months or by the next election, it'll be.

355
00:19:39,000 --> 00:19:45,000
Yeah, actually, they're opening one in Dallas. However, Texas is huge. So that's many, many hours away, probably.

356
00:19:45,000 --> 00:19:52,000
But yeah, I feel like you have to play a little hardball. Amazon does this, too, to their advantage.

357
00:19:52,000 --> 00:19:59,000
Well, I mean, that part's reasonable just because I'm sure their legal departments are kept constantly busy with all of these lawsuits.

358
00:19:59,000 --> 00:20:07,000
Yeah, I see. I don't know. Maybe this is a shocker first for Kota Radio and 346 episodes.

359
00:20:07,000 --> 00:20:16,000
Maybe I'm an extremist here or extremist. Sure. You know, I sort of want the maximum level of suffering to make the patent law change.

360
00:20:16,000 --> 00:20:20,000
Right. I want like people going on like welfare and not that I don't sympathize with people.

361
00:20:20,000 --> 00:20:24,000
I am all for I was on welfare. I'm all for poor people.

362
00:20:24,000 --> 00:20:30,000
I just like want these judges and politicians to wake up and stop taking the money from the legal lobby.

363
00:20:30,000 --> 00:20:36,000
I have been sued for this software patent infringement. I did not like it. Yeah. Right.

364
00:20:36,000 --> 00:20:44,000
Like, yeah, no, it was it's a shit way to hold down because really what happens, it's powerful companies use it to sort of silence or smell.

365
00:20:44,000 --> 00:20:50,000
No, it's not even powerful companies. Right. Like in my case, it was lawyers who bought up patents of bankrupt companies.

366
00:20:50,000 --> 00:20:56,000
The patent I allegedly violated was highlighting text, different colors. My V.S. code. That's actually what I meant.

367
00:20:56,000 --> 00:21:01,000
I mean, it's a good clarification. My definition of powerful is a company that can afford afford a few lawyers versus.

368
00:21:01,000 --> 00:21:07,000
Well, they are lawyers, so it's just free. Right. Right. Versus versus like, you know, a small business that just simply can't.

369
00:21:07,000 --> 00:21:12,000
You just have to fold. So, yeah, I do. And also, I think I'm going to say I think here I'll go on the record.

370
00:21:12,000 --> 00:21:17,000
I'm going to say it. I'm pro poor people, too. I am as well. I'm pro poor. I mean, I don't want to.

371
00:21:17,000 --> 00:21:22,000
I heard Alan jude isn't that with this BST guys are very. No, man. Yes.

372
00:21:22,000 --> 00:21:28,000
If you're feeling like it's time for a change, Linux Academy is hiring a full stack Ruby on Rails developer out there.

373
00:21:28,000 --> 00:21:33,000
Audience member, I'm not talking to you, Mike. I mean, I guess I get home. They are.

374
00:21:33,000 --> 00:21:40,000
Save me. Save me. They are looking they are looking to hire developer design and build and maintain efficient, reliable,

375
00:21:40,000 --> 00:21:45,000
reusable code. And there's a lot of work to be done. And it is actually a remote position.

376
00:21:45,000 --> 00:21:48,000
So Linux Academy is hiring for a full stack Ruby on Rails developer.

377
00:21:48,000 --> 00:21:53,000
We have a link in the show notes or you can go to Linux Academy dot com slash careers and click your way through there.

378
00:21:53,000 --> 00:21:58,000
There's a few other jobs open as well. They're looking really obviously surprise, surprise.

379
00:21:58,000 --> 00:22:04,000
Somebody who has experience with Ruby, CSS, HTML, those kinds of things. It's all listed in the job description.

380
00:22:04,000 --> 00:22:11,000
Standard stuff, though. Yeah. And there would be sometimes you would come down to the office for like company get togethers

381
00:22:11,000 --> 00:22:17,000
or like your onboarding process, but it actually would be a remote position as well. So something to check out if you're you're in there.

382
00:22:17,000 --> 00:22:21,000
And then we would see you at our get togethers. That's true. Don't don't tempt me, Frodo.

383
00:22:21,000 --> 00:22:30,000
You can hang out with us at the get togethers, the company get togethers. But wait, can I write the Rails app in Swift?

384
00:22:30,000 --> 00:22:37,000
So how did we get on the topic of serverless? I know this is something that three of us were talking about off air.

385
00:22:37,000 --> 00:22:41,000
Because everyone's talking about it, Chris. I know. It was you, Mike. It was you.

386
00:22:41,000 --> 00:22:45,000
You had a client that came to you and said, we want you to do this, but we want you to do it all serverless, huh?

387
00:22:45,000 --> 00:22:51,000
Isn't that what happened? So client's a strong word in this case. Potential? Sales lead?

388
00:22:51,000 --> 00:23:04,000
I had a random dude at a pub. All right. So in theory, I thought this is way more official.

389
00:23:04,000 --> 00:23:15,000
It could be. So in theory, this guy feels that it is completely possible and, in fact, desirable, which I agree with the first.

390
00:23:15,000 --> 00:23:21,000
And this is where we're going to lean on Wes a lot for the show, the second. Wes, I just keep throwing crap at you.

391
00:23:21,000 --> 00:23:26,000
That does seem to be the style now. That's my theme. Yes, it is.

392
00:23:26,000 --> 00:23:39,000
To write an entire large, what would be like, in my case, a Rails app, or if I'm really, really depressed, a.NET app in a serverless architecture.

393
00:23:39,000 --> 00:23:47,000
And I feel like we just need to define terms a little before I throw it to Wes and make him cover up for all my failures here.

394
00:23:47,000 --> 00:23:56,000
Serverless. I'm going to give a definition. Actually, you know what? We could argue about the definition first because I would call serverless.

395
00:23:56,000 --> 00:24:04,000
I don't believe I think that actually means nothing. I'm going to be a curmudgeon. There are lots of servers for serverless systems.

396
00:24:04,000 --> 00:24:11,000
In fact, they run on servers. For instance, if they're on Azure, they run on Windows.

397
00:24:11,000 --> 00:24:19,000
I can't remember the current version or sometimes Ubuntu. Right on AWS, they run on some form of Linux, whatever that weird Amazon distribution is.

398
00:24:19,000 --> 00:24:24,000
And if you're doing Java, they even run on their own Amazon JVM because Amazon doesn't want to get sued by Oracle.

399
00:24:24,000 --> 00:24:31,000
So. I don't. Maybe we should just back up.

400
00:24:31,000 --> 00:24:36,000
What does serverless actually mean to you guys? That's a really good place to see.

401
00:24:36,000 --> 00:24:39,000
I mean, that's you. And then, of course, what does it mean to the bloke in the pub?

402
00:24:39,000 --> 00:24:46,000
That's true, too. So I'll give you my rough, honest take of serverless and you guys tell me how off the mark I am.

403
00:24:46,000 --> 00:24:53,000
OK, so my my concept of what serverless is, is. Well, it's everything.

404
00:24:53,000 --> 00:25:03,000
It's not actually serverless, but you are giving a remote service like Lambda, for example, from Amazon jobs to execute and information to send back to an application that you're running.

405
00:25:03,000 --> 00:25:15,000
And so instead of you building up a server that does like the math or the processing or or pulls down a thousand bit bit bit bit maps and stitching them all together and then delivering that as a result.

406
00:25:15,000 --> 00:25:19,000
Instead of you building that application stack, you you give a job off to Lambda.

407
00:25:19,000 --> 00:25:24,000
Lambda does the work and delivers you the result back. So there's still servers involved.

408
00:25:24,000 --> 00:25:31,000
It's just they're hosting the servers and you have an application running somewhere that's sending information off and receiving information back.

409
00:25:31,000 --> 00:25:38,000
How far off am I? What do you think? I mean, by and large, at the at the high level, that's kind of it.

410
00:25:38,000 --> 00:25:46,000
Yeah. Yeah. I mean, it is horrible. I tend to think of the stuff that people seem to be most excited by is is the part you hit on where you're not running the server.

411
00:25:46,000 --> 00:25:52,000
You're not setting it up right. So you have to you have to write the application. So you have to still have some application has to run somewhere, though.

412
00:25:52,000 --> 00:25:56,000
Right. But it does run on servers. You just don't have to care about it.

413
00:25:56,000 --> 00:26:01,000
So it's really about like, what do you care about? What is your problem versus what is your platform and problem?

414
00:26:01,000 --> 00:26:06,000
And you could, in theory, have that application run on another Amazon service that then talks to Lambda, right?

415
00:26:06,000 --> 00:26:16,000
Right. So Lambo Lambda executes your code, basically. So you you set up your environment, configure it all, either ship the code or bundle an artifact or use their CI system to do that, whatever.

416
00:26:16,000 --> 00:26:23,000
And then you set up what events and what inputs you want to trigger and then you have the options of where you want to go.

417
00:26:23,000 --> 00:26:26,000
So it's a little you build these little step by step chains, right? So you have some sort of input.

418
00:26:26,000 --> 00:26:30,000
You have an API gateway maybe or you get you get information in, send information out.

419
00:26:30,000 --> 00:26:36,000
So on that part, I think you're totally right. And it's just can I do less and only have to write the stuff that's unique to me?

420
00:26:36,000 --> 00:26:41,000
I don't want to care about like making sure system D logging is there all the time. And where does that go?

421
00:26:41,000 --> 00:26:46,000
And how do I instrument that into into the cloud metrics? I don't know. I mean, I do know.

422
00:26:46,000 --> 00:26:49,000
But but you might not and you might not want to care about doing that.

423
00:26:49,000 --> 00:27:01,000
Right. And so so I guess so what you're saying is is serverless is you write the specific bits that are unique to you and sort of outsource all of the general.

424
00:27:01,000 --> 00:27:05,000
Yeah, yeah, exactly. And I mean, there's there's obviously like gradations.

425
00:27:05,000 --> 00:27:11,000
I think people think of Lambda is like the jumped out example, but all the orchestrating stuff, right?

426
00:27:11,000 --> 00:27:14,000
It's just like I want to think about less. I want this to auto scale.

427
00:27:14,000 --> 00:27:17,000
So it's a kind of a continuum of what exactly you're doing and how much you do. Right.

428
00:27:17,000 --> 00:27:21,000
So if you have a fully managed Kubernetes cluster, there are there are some aspects of serverless.

429
00:27:21,000 --> 00:27:28,000
Now, a lot of time you have longer running stuff. So that's that's a separate topic, too, is a lot of times in these you have constrained execution environments.

430
00:27:28,000 --> 00:27:32,000
So that even more so you don't even have like local temporary state often.

431
00:27:32,000 --> 00:27:35,000
You have to be totally stateless, at least in your Lambda design.

432
00:27:35,000 --> 00:27:38,000
OK, that would make sense to go.

433
00:27:38,000 --> 00:27:44,000
So I can answer for the I want to say bloke because I'd have to have a quokkani accent.

434
00:27:44,000 --> 00:27:51,000
See, that was terrible. See, that's why I don't. Wow. That went. Oh, boy. Yeah, that went very Irish very fast.

435
00:27:51,000 --> 00:27:57,000
This is a direct quote. I don't want to effing deal with SSH.

436
00:27:57,000 --> 00:28:06,000
This is oh, I should have mentioned he's an access developer. Oh, do we actually call them do we actually call them developers?

437
00:28:06,000 --> 00:28:12,000
Are they more like access pro users? Listen, I have learned to lighten up in the modern age.

438
00:28:12,000 --> 00:28:15,000
And whatever somebody identifies as is what I call them now.

439
00:28:15,000 --> 00:28:22,000
All right. Well, then I'm a hypercard developer. And if you need if you need something developed in 1984 hypercard, I'm your man.

440
00:28:22,000 --> 00:28:29,000
Actually, actually, actually, I'm a next step developer. Let me get my cube and let's do this.

441
00:28:29,000 --> 00:28:34,000
No, all kidding aside. And he's a listener. So I should. You know, he actually gave permission to talk about this.

442
00:28:34,000 --> 00:28:42,000
Great. It's it's an interest. And I told him I'd poke fun at him for access. It's.

443
00:28:42,000 --> 00:28:46,000
I actually thought he was nuts and West sent me straight at our slack.

444
00:28:46,000 --> 00:28:51,000
So listen to see Wes. This is an integral part of stopping me from telling people they're nuts.

445
00:28:51,000 --> 00:28:56,000
And the key part of this was, could you go all serverless for a new application that you're building?

446
00:28:56,000 --> 00:29:01,000
So you got hired to build the app. Well, we're not there yet.

447
00:29:01,000 --> 00:29:08,000
Let's just say theoretically. So here let's let me I could set the scene for you. Right. Cicely, 1834.

448
00:29:08,000 --> 00:29:21,000
So he's he is the lone I.T. admin slash developer for a medium ish small business in this county of Hillsborough here.

449
00:29:21,000 --> 00:29:26,000
OK, got it. They are running their entire business on access. Never seen that before.

450
00:29:26,000 --> 00:29:32,000
No, but access is the source of truth. OK. No, there there are definitely some problems.

451
00:29:32,000 --> 00:29:40,000
He's had quite a few three a.m. phone calls because they're they're in the agriculture industry and product needs to be shipped.

452
00:29:40,000 --> 00:29:46,000
Right. And shipping happens at night generally for reasons, I guess, of traffic or whatever.

453
00:29:46,000 --> 00:29:52,000
So it would be good for him if access didn't go down all the time.

454
00:29:52,000 --> 00:29:56,000
I don't know what to say. Right. Like that's that's that is the problem he wants to solve.

455
00:29:56,000 --> 00:30:09,000
His secondary problem is that he does not he is not permitted to hire a full time either dev or dev ops or admin, whatever Linux guy would be the term he would use, I imagine.

456
00:30:09,000 --> 00:30:16,000
So he needs to do this himself in terms of maintenance. He has zero Linux experience.

457
00:30:16,000 --> 00:30:24,000
When I say zero, I mean, he he says he has never written a bash script in his life of any kind.

458
00:30:24,000 --> 00:30:34,000
So I agree that maintaining the let's just say, a suzer, Ubuntu server is a it's just not a good idea for him in a production environment.

459
00:30:34,000 --> 00:30:39,000
Right. OK. Yeah. So he's looking for the ultimate lowest maintenance possible.

460
00:30:39,000 --> 00:30:49,000
He needs a turnkey solution. Right. So, I mean, given that we're coming from access.

461
00:30:49,000 --> 00:30:55,000
I actually think Wes was right, that serverless is not as crazy as I told him it was.

462
00:30:55,000 --> 00:31:02,000
It's going to cost a fortune, though, because I know what I pay for lambda and for Azure functions, but maybe it's worth it.

463
00:31:02,000 --> 00:31:09,000
I guess this is where like the cost benefit of how much is it worth to not deal with DevOps?

464
00:31:09,000 --> 00:31:14,000
Right. And you have to assume you're a person who doesn't know bash. You don't know how to do Docker.

465
00:31:14,000 --> 00:31:20,000
You you know, you don't know Kappa Scrono, one of those other DevOps Jenkins tools.

466
00:31:20,000 --> 00:31:26,000
Is it worth it and how can you maybe design this is where we throw it back to Wes putting him on the spot again.

467
00:31:26,000 --> 00:31:33,000
How would you design a serverless system to minimize your cost? So I think that's the big disadvantage of serverless at this juncture.

468
00:31:33,000 --> 00:31:40,000
Well, I think the other thing to keep in mind, too, is there's still going to be some call it whatever you want, but some some ops involved.

469
00:31:40,000 --> 00:31:45,000
Right. So how how familiar is the is the client with the platform?

470
00:31:45,000 --> 00:31:51,000
Because you might not have to go into a server, but you're certainly going to have to go, you know, use use the APIs of your cloud provider, maybe.

471
00:31:51,000 --> 00:31:58,000
Or at least use their dashboard to go investigate stuff because stuff will certainly go wrong or queues get backed up or, you know, whatever.

472
00:31:58,000 --> 00:32:11,000
So thinking about that and what is the bare minimum? And if you're not doing a lot, I mean, you can you can get you can get lambdas to be reasonably simple and relatively cheap, depending on how much how much RAM you need in particular.

473
00:32:11,000 --> 00:32:16,000
But distributed systems are just oftentimes more complex than monoliths.

474
00:32:16,000 --> 00:32:27,000
Right. So if you have like one or two, I mean, depends on the numbers. Those are just estimates. But if you have a couple of them just doing some simple stuff and it's easy to in your mind or like on a whiteboard and in five seconds, you could draw out the flow of information on what's happening.

475
00:32:27,000 --> 00:32:39,000
That's probably fine. You can reasonably understand that. But if you're trying to go serverless because you're scared of servers and you end up with this giant web that's super hard to to actually orchestrate and understand and get observability information out of.

476
00:32:39,000 --> 00:32:44,000
Well, maybe that's not worth it. Sounds like a nightmare. That would be a nightmare scenario for somebody.

477
00:32:44,000 --> 00:32:54,000
Right. And so my concern immediately off the bat was if you're serverless, that means you're effectively in some weird microservices world.

478
00:32:54,000 --> 00:33:02,000
And I'm going to use Azure functions as my baseline for pricing here because it's just too hard to keep switching between them.

479
00:33:02,000 --> 00:33:17,000
You pay by data and by processing. Right. So if function A has to call function B, it calls function C that calls a database, then calls function D, which calls a different database or perhaps the same database, you're paying for the database.

480
00:33:17,000 --> 00:33:24,000
You're paying for the bandwidth. You're paying for the processing. And I think you pay something on the database. I don't think storage plus throughput.

481
00:33:24,000 --> 00:33:32,000
Mm hmm. Sure. That that gets I mean, it starts off very cheap in a dev environment, but that can get very.

482
00:33:32,000 --> 00:33:39,000
Very pricey versus spinning up a D.O. droplet and just like Docker deploying a rails app, for example. Yeah, yeah, yeah.

483
00:33:39,000 --> 00:33:52,000
So the other thing, too, that you have to you have to figure is it's getting easier than ever to to manage something like that because they're not only is there one click deployments, which we've talked about before in our in our past ads,

484
00:33:52,000 --> 00:33:59,000
but there is systems to manage those machines. You don't even really have to get on the computer. I think you're hitting something pretty pretty good.

485
00:33:59,000 --> 00:34:06,000
There is probably something in the in the middle here is the right answer where like it's probably still a good idea to try to minimize state and keep things simple.

486
00:34:06,000 --> 00:34:15,000
But if you can just have a couple of servers that you run enough to handle what you think you're scaling is because that's one thing people like like about services that you also can scale it really fast.

487
00:34:15,000 --> 00:34:23,000
Right. If you if your cloud provider supports it, then it just scales with the number of requests or whatever. But that's not most people's problem, at least not right away.

488
00:34:23,000 --> 00:34:29,000
So if you can get away with a couple servers that are running, you got some nice whatever, you know, even if it's just an image that you made that you like.

489
00:34:29,000 --> 00:34:34,000
But if you can replace it easily, manage what's going on, use whatever they're built in monitoring, maybe.

490
00:34:34,000 --> 00:34:41,000
Yeah, you could really see cost and complexity getting away from you if if you don't do this right. And there are options out there.

491
00:34:41,000 --> 00:34:48,000
The problem is that they're not turnkey that is close to turnkey like digital ocean is about as easy as it's going to as it's going to get.

492
00:34:48,000 --> 00:34:59,000
And then if you knew to say deploy cockpit on top of an Ubuntu or Fedora droplet, you'd be able to deploy Docker and everything through services, whatever.

493
00:34:59,000 --> 00:35:03,000
You'd never SSH into the box. It has a console. So, yeah, right.

494
00:35:03,000 --> 00:35:09,000
But it's just a step. It's a step removed from turnkey. It requires some setup.

495
00:35:09,000 --> 00:35:19,000
So. Maybe. I mean, I don't know about that. I mean, I SSH into boxes like five or six times a day.

496
00:35:19,000 --> 00:35:38,000
Yeah, I mean, you really have work. I could see that if you're doing pure system administration, cockpit is a really nice graphical interface put together by Red Hat employees to manage Docker and packages and user accounts and partitions and, you know, all the all the standard stuff you'd want to manage in a server.

497
00:35:38,000 --> 00:35:44,000
We use it and not not extensively. The nice thing about it is it actually lets you also go in through SSH.

498
00:35:44,000 --> 00:35:50,000
Yeah, right. Yeah, you're not you're not trapped where you have to do everything through its system. It just automatically update with whatever.

499
00:35:50,000 --> 00:35:53,000
You can go edit a system service. You're good. I'll just pick it up. Yeah, it's nice like that.

500
00:35:53,000 --> 00:35:59,000
And it's built by the folks at Red Hat and they've built it in a cross distribution way. In fact, it works great.

501
00:35:59,000 --> 00:36:03,000
I use it on Fedora primarily, but it works quite well on Ubuntu.

502
00:36:03,000 --> 00:36:12,000
So my only complaint is it's kind of annoying to reverse proxy because it has some particulars about how it likes its path to be set up and it takes the obvious word that you would use as its name.

503
00:36:12,000 --> 00:36:21,000
But otherwise, it's been working really well. But I mean, I grant you I don't I don't think there's like a digital ocean droplet you can deploy with it preinstalled, which would be fantastic.

504
00:36:21,000 --> 00:36:26,000
But I don't think it's there. It's not it's not AWS Lambda easy. Right.

505
00:36:26,000 --> 00:36:33,000
Well, the other part, too, is like coming from a particular you'd own the whole stack. You would. It is funny, too.

506
00:36:33,000 --> 00:36:37,000
I don't think it's necessarily the way most people should do design or think about building systems.

507
00:36:37,000 --> 00:36:50,000
But I feel like we often underestimate you can get a surprising amount of reliability from from like a couple of servers, you know, if they if they if you don't ever touch them and they just sit there doing their job, especially the way you can build them now.

508
00:36:50,000 --> 00:37:00,000
We have a system called Orbital that really anything that matters is in a container. And then we have a shared storage that we've purchased separately from the machine that's attached.

509
00:37:00,000 --> 00:37:04,000
And a couple of times we've just blown away the host operating system and it's been fine.

510
00:37:04,000 --> 00:37:12,000
And that makes it it makes it a lot safer and it makes it like immutable isn't the right word, but it makes it close to it.

511
00:37:12,000 --> 00:37:20,000
And that's that's amazing compared to where I was at in I.T. 10 years ago, 15 years ago. It's it makes it much easier for people to get in.

512
00:37:20,000 --> 00:37:25,000
But yeah, he'd probably have to go take a few Linux Academy courses or something to figure it all out. That's the answer.

513
00:37:25,000 --> 00:37:28,000
Yeah. Well, I mean, it's not a turnkey thing. I'm probably either way, though, right?

514
00:37:28,000 --> 00:37:34,000
Like either you're reading a whole bunch about Lambda and then you have to figure out like I should not sell my Lambda application and get it running.

515
00:37:34,000 --> 00:37:43,000
That can be. So the thing is, is these cloud services are just their own form of I.T. complexity. You know, you can become an operating system expert or you can become like a cloud service.

516
00:37:43,000 --> 00:37:49,000
The hope is that it's enough of an abstraction boost that it's like worth your time. You get more leverage. Well, it seems to be.

517
00:37:49,000 --> 00:37:56,000
So I'm going to throw a monkey wrench into this. I'm surprised neither of you jumped on the this is yet again another Coder radio.

518
00:37:56,000 --> 00:38:02,000
We can't call this one a success story just yet. Jim, we'll get there. Where access is running a business.

519
00:38:02,000 --> 00:38:08,000
Yeah, you know, I mean, it's it's surprisingly pretty flexible. Yeah, I've seen it.

520
00:38:08,000 --> 00:38:13,000
Yeah, but I think those that gets I've heard too many have too many phone calls about. Yeah, we've been running on askers for 10 years.

521
00:38:13,000 --> 00:38:20,000
And yeah, between excess and Excel, you can get some you make some real dark dark arts.

522
00:38:20,000 --> 00:38:29,000
No, it definitely works for a while. I'm not trying to knock it. It's just I've seen I've seen core financial institution applications that manage the entire branch.

523
00:38:29,000 --> 00:38:37,000
Like every every check that somebody cashes, every receipt that gets printed, all run on access.

524
00:38:37,000 --> 00:38:43,000
That explains so much about my bank. I've been I've been startled where I've seen access in production.

525
00:38:43,000 --> 00:38:48,000
So I have built up a very strong reaction to it. It's very he's shaking right now.

526
00:38:48,000 --> 00:38:55,000
It is. It's rough. And then trying to migrate all that to SQL. And it was just so many times.

527
00:38:55,000 --> 00:39:03,000
I think I may have worked in the worst time of I.T. I may have because I started when we were transitioning from DOS.

528
00:39:03,000 --> 00:39:10,000
And I ended I ended right before orchestration management tools became a really popular thing.

529
00:39:10,000 --> 00:39:15,000
Like there were a few things like I got I got to believe Chef existed when I was around.

530
00:39:15,000 --> 00:39:20,000
But there wasn't like I don't think Ansible was a thing yet. Like there just wasn't a lot of tools like that.

531
00:39:20,000 --> 00:39:25,000
The culture around it hadn't really developed. Definitely. It was it was just a lot of roll your own solutions.

532
00:39:25,000 --> 00:39:31,000
And now you're stuck managing it all and supporting it all, which is a lot of what's still out in production to this day.

533
00:39:31,000 --> 00:39:36,000
Because, you know, people invest a lot of money back then. It's probably working OK enough enough not to change.

534
00:39:36,000 --> 00:39:43,000
I feel like I could do a lot more scale now. Like I could manage a lot more systems now than I used to manage.

535
00:39:43,000 --> 00:39:51,000
Like the fact that like at one point I was like responsible for like a few hundred three four hundred servers seemed like an unbelievable amount back then.

536
00:39:51,000 --> 00:39:55,000
But like they were physical servers. They were actual physical boxes in a rack.

537
00:39:55,000 --> 00:40:00,000
Right. And now they would be containers and VMS. And we were getting we definitely get into VMware.

538
00:40:00,000 --> 00:40:05,000
Yes, I and shared storage. But that was all still very new. It was very early versions of VMware.

539
00:40:05,000 --> 00:40:12,000
And yeah, I know it's all really different now. And so when you look at it wouldn't when you know the bloke in the pub is looking at it.

540
00:40:12,000 --> 00:40:21,000
I can appreciate wanting to avoid that legacy complexity because it just brought with it so much investment, so much time, so much hardware.

541
00:40:21,000 --> 00:40:30,000
But things have changed. And I know it sounds like it's not a solution, but throwing a system it's on Linode or if it's on DigitalOcean or if it's on AWS.

542
00:40:30,000 --> 00:40:41,000
But maybe just throwing it together yourself and owning that stack a little bit like Wes was talking about and then maybe using something like cockpit or whatever to manage it.

543
00:40:41,000 --> 00:40:45,000
It just seems like you'd have a lot more long term control over your costs.

544
00:40:45,000 --> 00:40:49,000
You'd have more control over the technology stack and you'd have more flexibility.

545
00:40:49,000 --> 00:40:54,000
You'd have a lot more flexibility on the types of applications you could run.

546
00:40:54,000 --> 00:41:01,000
That's, I think, a huge part of it. You're really going to lock yourself in to a particular vendor and a particular type of application architecture.

547
00:41:01,000 --> 00:41:05,000
And maybe that's OK. And if it works well for you, then that's great.

548
00:41:05,000 --> 00:41:11,000
I suppose it depends, too, on how well can you get access to tie in with whatever other systems that you actually want to tie it into.

549
00:41:11,000 --> 00:41:13,000
Serverless.

550
00:41:13,000 --> 00:41:15,000
It is funny to think about what you're talking about, though.

551
00:41:15,000 --> 00:41:20,000
Remember when you had to reinstall and you're just hoping the machine reboots and comes back up and actually picks everything up?

552
00:41:20,000 --> 00:41:23,000
Or maybe it has a nice enough like IPMI system where you can do it properly.

553
00:41:23,000 --> 00:41:29,000
Either an IPMI system or maybe finally your company had enough money where you could get like a nice IPK VM.

554
00:41:29,000 --> 00:41:30,000
Yeah.

555
00:41:30,000 --> 00:41:32,000
Or they could do like that fake ISO stuff. Those are still out there.

556
00:41:32,000 --> 00:41:33,000
Totally.

557
00:41:33,000 --> 00:41:39,000
I remember the day I could take an ISO image on my system as long as I had the right Java runtime version and the right web browser.

558
00:41:39,000 --> 00:41:40,000
Which is always old.

559
00:41:40,000 --> 00:41:47,000
Yeah, it was. And it was not the same version that the other company app needed, which was a different version of Java runtime, absolutely.

560
00:41:47,000 --> 00:41:53,000
Not to mention for a while Microsoft had their own Java runtime, which had another set of compatibility issues.

561
00:41:53,000 --> 00:41:55,000
J-sharp.

562
00:41:55,000 --> 00:42:02,000
But you could connect an ISO image as a virtual CD and you could over the Internet slowly reinstall the box.

563
00:42:02,000 --> 00:42:06,000
But these days you want a new one? Great. You want to blow one away? Fine.

564
00:42:06,000 --> 00:42:13,000
These days you deploy the entire OS image. The OS image is done like I would like an Ubuntu machine.

565
00:42:13,000 --> 00:42:19,000
And then you have an entire Ubuntu system ready to go. You don't have to install Ubuntu. It's a totally different thing.

566
00:42:19,000 --> 00:42:24,000
It feels like it's serverless now really. It really does feel like we're already in the land of serverless.

567
00:42:24,000 --> 00:42:30,000
And as somebody who deployed a lot of machines at the metal level, I wonder like how abstracted are we going to get?

568
00:42:30,000 --> 00:42:35,000
And serverless is yet another level of that abstraction. And we're getting pretty –

569
00:42:35,000 --> 00:42:36,000
We're climbing on up.

570
00:42:36,000 --> 00:42:41,000
We really are. We really are. I don't know. But you know, I guess that's just the way it goes.

571
00:42:41,000 --> 00:42:45,000
It seems like that's the way technology goes, right? It's not necessarily always a bad thing.

572
00:42:45,000 --> 00:42:48,000
It makes it more accessible. It makes Mike's job harder.

573
00:42:48,000 --> 00:42:54,000
And like you said, you would feel more comfortable being able to manage a larger cluster of machines because we've figured some things out.

574
00:42:54,000 --> 00:43:00,000
All right. Well, before we go, gentlemen, a couple of orders of business. So, help the guys out. Send them some feedback next week.

575
00:43:00,000 --> 00:43:03,000
So, that way they have more stuff to cover since I won't be here coding.

576
00:43:03,000 --> 00:43:07,000
Yeah. Maybe you're running a totally serverless application and you want to tell us how great it is.

577
00:43:07,000 --> 00:43:13,000
Or you think it's going to bring us to the end times. Coder.show slash contact. Let us know. We'd like to hear your feedback on that.

578
00:43:13,000 --> 00:43:17,000
We want more feedback into the show. Get some more emails into there.

579
00:43:17,000 --> 00:43:24,000
Also, I was going to mention, Wes and I are going to be at Scale 17X, which is just around the corner.

580
00:43:24,000 --> 00:43:30,000
Just around the corner. It is March 7th through the 10th. And I think, is that right?

581
00:43:30,000 --> 00:43:31,000
Yeah.

582
00:43:31,000 --> 00:43:35,000
Let me double check that because that's from memory. Yeah, March 7th through the 10th at the Pasadena Convention Center.

583
00:43:35,000 --> 00:43:41,000
Wes Payne and I will be there. We'll also be there with Elle. And we're doing a meetup.

584
00:43:41,000 --> 00:43:42,000
We're doing a meetup Saturday night.

585
00:43:42,000 --> 00:43:44,000
Oh, that's going to be fun.

586
00:43:44,000 --> 00:43:47,000
I think we're at 20-ish right now.

587
00:43:47,000 --> 00:43:48,000
Nice.

588
00:43:48,000 --> 00:43:52,000
So if you're thinking about hanging out with us for dinner when you go to Scale, meetup.com slash Jupiter Broadcasting.

589
00:43:52,000 --> 00:43:59,000
Go there. Join the meetup. So that way we can call the restaurant and let them know because we've just upped it to 20.

590
00:43:59,000 --> 00:44:03,000
I think we may up it to 30 if we have some people sign up. So that would be pretty good.

591
00:44:03,000 --> 00:44:05,000
Give us your feedback in person always. That's always good.

592
00:44:05,000 --> 00:44:06,000
Yeah.

593
00:44:06,000 --> 00:44:10,000
All right. Well, Mr. Dominic, where should people go get more Mike in their life throughout the week?

594
00:44:10,000 --> 00:44:16,000
I think we need a slogan there. More Mike in their life. No? You got nothing?

595
00:44:16,000 --> 00:44:18,000
Maximum Mike.

596
00:44:18,000 --> 00:44:20,000
Make it magic with Mike.

597
00:44:20,000 --> 00:44:25,000
That's actually not bad. That's not bad. What about you, Mr. Payne? Where can they get more you?

598
00:44:25,000 --> 00:44:27,000
At Wes Payne.

599
00:44:27,000 --> 00:44:28,000
Why don't you mention the TechSnap program?

600
00:44:28,000 --> 00:44:32,000
Oh, yeah. TechSnap.Systems. Stay tuned for a new episode coming later this week.

601
00:44:32,000 --> 00:44:38,000
Yeah. And if you're into home automation and some of the different open source options around that, check out this week's episode of Linux Unplugged.

602
00:44:38,000 --> 00:44:41,000
Wes is doing a breakdown of a couple of different options.

603
00:44:41,000 --> 00:44:45,000
We'll talk about them where we might use some of that in the studio and things like that.

604
00:44:45,000 --> 00:44:49,000
It's really cool what you can do. It's a fascinating topic. Lots of potential there.

605
00:44:49,000 --> 00:44:53,000
So that's LinuxUnplugged.com. Check out this week's episode.

606
00:44:53,000 --> 00:44:56,000
The guys will be live next Monday. JupiterBroadcasting.com slash calendar.

607
00:44:56,000 --> 00:45:01,000
For that information, you can watch it live at JBLive.TV and Coder.Show for all of our links.

608
00:45:01,000 --> 00:45:19,000
Thanks for joining us. See you next week.

