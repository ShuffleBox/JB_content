This is Kota Radio, episode 439, for November 8th, 2021.
Hello old friend and welcome back to Jupiter Broadcasting's weekly talk show, taking a
pragmatic look at the art in the business, software development, and the world of technology.
This episode is brought to you by Cloud Guru.
You know they have that cloud playground, Azure AWS, or Google Cloud Sandboxes on ACG's
credit card.
Not yours.
Get certified.
Get hired.
Get learning at cloudguru.com.
My name is Chris and joining us every single week is our Handsome as Hell host, hello Mr.
Dominic.
Well, how are you doing, you fine gentleman?
What an introduction.
I'm honored.
Well, I mean, I recognize game.
You know what I'm saying?
Takes one to know one.
I got butterflies today.
I'm a little nervous.
I woke up this morning and I had a shipping update notification.
You know, so I ordered that MacBook Pro M1 Max.
You know, I saved up my pennies, my Bitcoins, and I waited for them to rev the M1 platform
and I ordered it and it said, oh, you're going to get it December 24th.
And I thought, well, okay, that's fine.
I'm in no rush.
Then they updated it and said, you're going to get it November 24th.
And I thought, oh, all right, great.
And this morning the update came in and it says November 17th, which is like next week.
That's way too soon.
I am not ready for this.
I am actually nervous.
I'm not, I need to, first of all, I need to prepare the way I have not prepared the way
at all for this.
I have like a bunch of stuff I need to back up and archive off of my other machines.
I need to do backups.
I need to reorganize my entire desk.
I got it.
I just, I'm not ready for this because the other thing I am legitimately worried about
is what if I really, really, really, really like it and then like it's the only machine
I want to use.
And what does that mean?
And what does that make me?
And I'm still going through a lot of it right now.
And I thought I had like another few weeks to process this.
And then I wake up and I see it's coming and I think I'm the first guy ever who wishes
it was getting delayed and not accelerated.
So that's me this morning.
How are you?
Well, I'm definitely better than you, although I did acquire Age of Empires IV.
And I'm irritated that through all my parallel sorcery, I can't get that running because
of DirectX 12.
And apparently there's just so much crap in DirectX 12 that the VM folks can't make that
work.
And I think this is a great segue to our Python on Windows for 2021 thing because I can tell
you that Age of Empires is a required part of my life.
And if I can't get this running, that's going to be a problem.
So I know the secret incantations you need to unlock the compatibility powers when they
do become available.
So what you have to do is you're going to want to keep an eye on ProtonDB.
So when you see that that version of the game has a good rating on ProtonDB.
Now if you're on Linux, you're pretty much done.
If you're using the Mac, the next thing you got to watch for is Windows crossover office,
say they support that or have the version of wine that has the current version of all
the stuff you need.
I have done a little bit of reading about this because I was curious, like, what am
I going to do with all these GPU cores?
I'd like to be able to play a video game.
What a concept.
And it turns out there's other things I might want to play than what's an Apple arcade.
And so it seems as ludicrously stupid as it sounds, people are actually having good success
to a degree with crossover office running x86 Windows games on the new machines.
So if you want to do like seven layers of emulation and oh, sorry, not emulation.
I was just going to say it's not an emulator.
Wine is not an emulator.
Yeah, it's a translation, although the x86 stuff will absolutely be emulation.
So yeah, well, actually, maybe not.
Maybe M1 does actually execute some of the I don't know.
But either way, it's a lot of turtles.
Okay, but I'm on a Intel Xeon.
And the problem is actually that there is no direct translation for DirectX 12 into
either Metal or OpenGL that exists in the world today.
And if you go on the Parallels Forum, they're like, yeah, dude, what are you doing?
Isn't this like the classic problem?
Like now Apple is going to build some of the most competitive performance machines out
there.
And it's like when you're when you're investing in four grand in a laptop, it really should
be able to do absolutely everything.
Even if you only do some of those things occasionally, a tool at that price point should be comprehensive.
And video games is something I expect to have an expensive computer with a bunch of GPU cores.
So I don't know.
I guess the only solution is as shops decided to start supporting the Mac.
But it is very funny that we are now at a point where the situation is significantly
better on Linux for gaming than it is the Mac.
Especially with the M1 transition.
I mean, so I'm reading on your suggestion, the ProtonDB entry for AOE4.
It's not great.
This definitely reminds me of back in the early aughts getting World of Warcraft to
run on Ubuntu Brown Edition, whatever number that was, 8.10, 9.10, whatever.
But apparently there is some sorcery, but the textures, I guess, still kind of aren't
up to snuff.
I don't know.
I mean, I got to be honest with you, I don't play that many games anymore.
Yeah, like right when I got divorced, I did a lot of gaming, then I like went back to
the mean.
Like Age of Empires is so core to my desire to conquer the world.
I mean, to be Mark Zuckerberg, I mean, oh, God.
It's just my, it's one of my favorite games, right?
And this, I have seen very little of this.
I accidentally logged into my Microsoft account and it was like, yo, dog, we have AOE4 and
I was like, here's $60.
That's pretty much me and the new Metroid games.
Or if they do another Breath of the Wild based game with that same engine or something, it's
an absolute automatic buy from me.
That's where the Switch does scratch that itch.
It's like the guaranteed I'm going to sit down.
Switch is amazing.
Mm-hmm.
It's, and it works every time.
You know, every now and then there's like a super quick update or whatever, but they're
actually all pretty painless.
You know, can we inside baseball?
Yeah.
One of the reasons I didn't get an M1 Mac Pro is one, I kind of knew about AOE4 coming
out and I had a feeling I'd end up buying a Dell desktop.
And two, OLED Switch.
I have one of those crappy Switch minis because my kid has the good Switch.
And I don't know about you, but my old man vision on that little crappy screen.
Yeah, screen's no good.
It's not what's up, especially for Breath of the Wild.
Yeah.
Like I'm at the stupid temple with that, I don't know, octopus water dude, he's kicking
my ass.
Uh-huh.
Anyway, we're off the track here, but.
Good game.
The situation will improve with time.
No doubt about it.
As more M1s sell or M1 Pros and Maxes and as the Steam Deck comes out and more and more
development shops target Proton, the situation will improve.
But it does kind of stink still right now.
I've attempted to make the situation a little better by subscribing to GeForce Now game
streaming.
It's a choice.
My thought was instead of buying GPUs, I'll just subscribe to GeForce Now and they have
like RTX and they have 3080s, right?
It's Nvidia.
So they've got all the hardware.
You just run it on their systems.
And for the games that they support, it's pretty nice and it will connect to your Steam
library and your Epic accounts and it'll sync.
And so if you've bought something in Steam and they have the streaming rights to it,
you can play it through GeForce Now.
You don't have to like buy it again like you might with Stadia.
But the crux of the issue is most of the games I want to play right now, they don't have
streaming rights to.
So even though I own the game in Steam and I have a GeForce Now streaming account and
now I have Starlink so I can actually play games at home, I can't actually play the games
I want to play because those development shops don't want to license the streaming rights.
The fact that Microsoft Studios makes Age of Empires and it's not on the thing I just
subscribed to thinking I could stream it in Chrome on my fancy ass Mac, yeah.
It's part of the service, but you can't stream it to be super clear.
You have to download the XE.
I hate that.
You know the funny thing about gaming is like my neighbor recently said, my current neighbor,
oh I don't game.
I've never gamed.
I tried Pac-Man when it first came out and I just didn't like it.
It wasn't for me.
Never picked up a video game afterwards.
Not a gamer.
Not interested.
I said, oh really?
So you don't ever play any mobile games?
Oh, well.
I love, you know, and she rattles off like two or three games that she loves.
Yeah, she's like, of course everybody poops and therefore you're an Angry Birds or Jet
Pack Joyride.
I mean, come on.
Yeah.
But for me, it's like a lot of developers invest significantly in their work rig to
make it powerful and fast and maybe have a big screen.
And it's a lot of them actually make for really good gaming systems and I think it's a great
way to burn off stress, to get your mind off things without going out and spending a bunch
of money if you went out and bought dinner and went to a movie and went shopping or something.
Like it's a pretty economical way to get your head right sometimes.
So I don't know, I think people, you know, they shouldn't be so dismissive of it, but
let's move on because there are worse things in the world.
And one of the things we always talk about on the show recently, you really got to be
careful if you're working on a side project that you're not using any of your employer's
hardware, time, resources.
We talked about that a lot, but Dane got shut down hard, even though he did everything right.
He said, so I wanted to pass along, but sometimes even when you stick to your own personal hardware
and time, even when you buy the new hardware just for the projects, some employers hiring
contracts state that the company owns all code you produce, free time or not at all.
He says, some many rather enterprise level companies state that they own all of the code
you write while you're a salaried employee, regardless of the time of day or the hardware
used.
He says, sometimes you can talk with someone at these companies or file a request for a
specific project to be excluded from the employer's reach, but it's a conversation and they could
say no.
I was bitten by this and I had to stop my project.
These days, every side project is a public repository from the very beginning.
While employers could still make claims, I at least have goodwill on my side.
They can fork the repo and they'd look bad if they asked me to make it private or delete
it.
Of course, I suppose that's assuming people are even paying attention.
I know it's kind of a downer thing to think about, but it's something people need to be
really quite careful about.
If you can, perhaps even have that conversation pretty early into the process of getting the
job.
I would like to continue to contribute to open source projects and make sure that they're
comfortable with that.
An equivalent thing that we have here is some of the guys that participate in the network
that don't work for themselves, when they get new gigs, they'll have that conversation
with their employer.
Say, hey, I participate in these podcasts and they're kind of a big deal and I'm kind
of a big internet celebrity, are you okay with me?
I'm sure they say it just like that too.
Are you okay with me continuing to do it?
So everybody's on the same page and you always want to do that and try to get it documented
and maybe even note it down and date that and save that.
I don't know.
Do you have any other like don't get your ass taken from you kind of wisdom for people
to pass along?
Yeah.
As my reputation as a ruthless capitalist, I guess it's going to suffer now.
I have never heard of you being able to screw with someone's off time project if they don't
use your equipment, hardware, resources, blah, blah, blah.
Nor can I imagine a case where you really want to.
I get it.
It's great to be able to steal someone's talent, I guess.
Maybe that's too harsh.
But well, first of all, I'm sure it really comes down to what made it into like whatever
contract you signed when you came on board and how enforceable is that in your state?
So that's always going to be a variable.
Yeah.
I mean, this feels like the kind of thing that maybe exists.
I don't know.
Not a lawyer.
I don't want to delve into it too much, but I can't imagine this being like you, you know,
you're on Dell's website, you're looking at an XPS workstation, it's roughly eighteen
hundred dollars.
That is an NVIDIA 12 gig GPU.
That's not what I'm doing right now.
No, of course not.
And you know, you've written your own.
Let's say you've written the app that's going to make you know, bring the Windows App Store
to the forefront of the app stores.
One I would suggest you put down the vape pen or the martini glass, whichever your drug
of choice is.
But how can your employer take that?
And just I can say, like, I know I got a lot of crap and so did you a couple of months
and a half ago, whatever it was.
Even I think this is too evil.
People you pay them for, however, you know, for goals and for when they the hours they
work, you can't claim the rest of their life.
That's that's crazy to me.
Sorry, I've turned into a communist.
It's over.
Not only is it absolutely an overreach, but I am not surprised to learn that it's happening.
I could even see some lawyer kind of corporety justification being their work may have been
inspired by what they learned on the job.
The skill set they learned on the job may have helped them or inspired them with the
side project.
So therefore, you know, blah, blah, blah.
I could maybe see some sort of twisted logic like that.
I'm not justifying it.
Just these people are sick and twisted and they want everything.
And so I could see that being why it's like we're super evil and we're totally OK with
it.
That's just what it sounds like to me.
I'm sorry.
And that's that's bad.
I mean, yeah, this is a rabbit hole.
Right.
Because corporations have more and more power, pretty much have more power than governments
in some cases, in some areas, and they will take it as far as they can.
I mean, that's just always that's always how it's been.
You got to have things documented.
You got to be clear about things if you want to participate, if your employer does that.
I mean, it's easy for me to say here, but also consider looking for another job.
The market's pretty good right now.
It's like, you know, you buy Bitcoin when the price drops and you hold when the price
goes up.
And, you know, you got to like watch the market, you know, just like you are keen with your
crypto there, kid, be keen with the job market, too.
And maybe I'm not saying Dan should move on.
I'm sure he's very happy where he's at, but it is always something you should consider.
We got a couple of like tips and app recommendations and stuff.
Larry wrote in for visually impaired listeners, he says, I know you guys are a fan of Linux
and Rust.
He's a little unhappy with the state of screen readers on Linux, although I have heard that
Orca on Gnome and Wayland is improving recently, he says, but it's falling behind, especially
the stuff that you have on like Windows and Mac.
But there's a project that he'd like to bring to our attention and I don't really know how
to pronounce this one because it is spelled Y-G-G-D-R-A-S-I-L.
I thought we talked about this in Slack.
We are not reading from the Necronomicon.
I know, right?
On the air anymore.
Remember what happened last time?
My bad.
But we'll make you feel better that it's written in Rust.
I like my summoning the old ones to be memory safe, I do.
Exactly.
I will put a link to that in the show notes.
Just like the new Pop!
The West desktop environment.
Boom, I got it in there.
Oh, you did.
Oh, wow.
I thought we'd get through the whole episode and not bring it up.
You think it's real?
It is real, isn't it?
It's real.
I sent a whole list of questions off to Carl, but as of this morning, because this is Monday
morning, he hasn't gotten back to me.
And he's probably not going to.
I kind of knew it was going to go this way, to be honest with you.
In my Linux Unplugged predictions episode, I predicted they'd at least fork Gnome because
they're building on top of it quite a bit and then the base changes out underneath them
and then they have to rewrite everything and then they end up spending all their time doing
that.
But from scratch, written in Rust, I honestly could see it.
You know, so I think the knee-jerk reaction to that story is, oh great, another desktop
environment for Linux.
I gotta say, the Hacker News comments were rough.
You know, System76 sits in a very unique position that other free software desktop environments
don't have.
They have an extremely tight feedback loop with the people that they're selling hardware
to that runs these environments and then they're providing ongoing support.
So they have a real unique insight into how it's working for people, what works, what
doesn't work.
They have a much tighter feedback loop with actual customers that are paying for a product
and using the thing they're creating than just about anybody does except for Apple and
maybe Microsoft with the Surface and all the metrics they have in Windows.
But like on the Linux side, I don't really think any other free desktop environment has
that tight of a feedback loop with their end users.
Really that kind of puts somebody in the perfect position to learn what isn't working and iterate
quickly.
I mean, I don't know, I could see something that's a desktop environment that's Rust based,
maybe it sits on top of Mudder and has a bunch of GTK user land applications, essentially
a modern Maté, perhaps.
Oh, a modern Maté.
Why you gotta slap them with your backhand like that?
No, Maté is great.
It's just, it's old school, you know, or a modern, or retake on Budgie desktop or, you
know, whatever.
I just want to throw it out there.
Make Linux brown again.
Bring it back.
Now, there was some with the canonical guys.
If you really want to do it, if you're going to have that fight, steal their old branding,
brown to the core menu, brown taskbar, brown, right?
There is aspects of this that remind me of when canonical just went, ah, screw it.
We're doing Unity.
We can't stand this.
I think we're going to be covering this for three years.
Well, the one thing that'll be interesting to see is if they can make a nice power user
desktop.
Like the thing I think they kind of proved out with Pop OS is they're pretty good at
like sizing up a target audience and then building features for that target audience.
And I could see them continuing to just sort of execute on that, like the key bindings
for all the window management, the tiling, that kind of stuff, the performance modes.
That's all stuff that they've added that kind of makes the Ubuntu desktop a little more
out of the box power user friendly.
Well, moving right along, like you said earlier, we do have some Python on Windows love here
and maybe this will be useful for anyone else out there that's thinking about setting this
up.
Listener Chris P writes in and he created a guide that I thought was pretty dang good.
So we wanted to give it a shout out.
He says, I know you've had a few folks right in looking for help getting started with Python
on Windows.
I've seen a bunch of confusion swirling around of late with folks recommending various things,
including WSL as a cure all, which it isn't.
I mean, it is awesome, he says, but it's probably not the best way for a newbie to start coding
in Python.
So I wrote a blog post that I thought might help.
Now we don't always feature these, so you don't have to spam us with your blog posts.
But I thought that Listener Chris here did a great job.
So I wanted to toss a link in the show notes because it's just recently been updated.
So if you're looking for something that is current as of November 6, 2021 on getting
started with Python on Windows, well, he's got it for you.
And I will drop a link to this in the chat room if you're listening live and I'll put
a link to it in the show notes for those of you listening after the fact, which is 99
point nine eight percent of you.
And I don't know, I just think that's kind of a kind of a nice little resource there.
I don't suppose I have any comments on it.
Yeah, no, I think that's great.
If you're if you're living in Windows land or you're thinking of, let's say, your Windows
curious, this is the I mean, this is a great resource, you know, and not even being a big
Windows user anymore.
I know enough that I could follow that and I think I could get it set up so that passes
the bar.
And then last but not least, continue to trend of recommendations from the audience.
PowerShell on Linux DM recommended something that I think is pretty killer.
So last week, I kind of just got really excited about Bumper, which is an app for the Mac.
It replaces whatever you might have as your default browser as your default browser.
So you set Bumper as your default browser on the Mac and then whenever you click a hyperlink
anywhere in the OS, instead of launching a browser, it launches a super lightweight,
very quick icon menu with icons of each browser you have.
You select that icon, say Chrome, and then Bumper launches Chrome and sends Chrome the
link and opens the page in Chrome or whatever browser you choose.
And this is a great way for those of us that live the multi browser lifestyle to be really
intentional about what browsers open what links.
I love this.
I would love for somebody to make this for Linux, I very much would love to have it.
Well, DM says, hey, you can thank me later.
They have this for Android, so we'll put a link to this in the show notes.
It's called Better Open With and it lets you choose between the default or another app
you may have installed on Android for like browsers or email.
And I actually really like this because I think that the line on Android is like, never
ask me again or ask me every time I do a thing, which I just don't like.
And so Better Open With solves that.
And this is a really great little app.
So I will put a link to that in the show notes.
We'd love to get your emails too or your links or recommendations for great apps that make
any platform better to use, Windows, Linux, Mac OS, Android, iOS, let us know what you're
doing.
Go to coder.show slash contact.
I'll give you an example of kind of what I was thinking about, thinking about things
that make us a little more productive.
I really recommend you go on Amazon and you buy yourself a pack of NFC tags.
Have you tried this, Mike?
These NFC tags?
For customers, but not personally.
So either Android or iOS, but of course I have a little more experience now with iOS,
you can build actions based on these tags.
So for example, here in the studio, I have an NFC tag that when I touch the tip of my
phone and now in the later versions of iOS, it's all automatic.
There's no prompting, no interaction.
I tap the tip of my phone on this NFC tag and it changes my focus mode to recording
and that does a whole bunch of stuff on the back end, even turns on lights in the studio
and everything.
And then when I leave, I have another NFC tag that I can tap and it turns that focus
mode off.
And I have something at night when I'm going to bed and because my phone charger is near
the bed, I tap that NFC tag and it starts turning off the lights and you can do this
with shortcuts on iOS using the automations tab or you can do it with things like Home
Assistant.
There's a few options out there.
It's one of these little things that you can put these tags next to your charger or on
your desk where if say your phone starts buzzing, you could have a do not disturb tag that you
just pick your phone up, you tap this tag with it and now your device is no longer buzzing
at you.
You don't have to sit there and fiddle with unlocking it and pulling down a menu and anything
like that.
It's really kind of nice and it just moves things out a little bit.
So that's a tip for you right there.
Go get yourself some NFC tags.
They're super cheap.
They have nice ones.
They have cheap ones.
They all do the same.
And if you have any other recommendations for software productivity or little tweaks
to your work environment, I'd like to collect those.
So go to coder.show slash contact and send them in.
lino.com slash coder.
Go there to get $100 in 60 day credit on a new account and you go there to support the
show.
Lock that into your memory banks.
Go to lino.com slash coder.
Then when you need to host something in the cloud, not only can you use the best provider
to do it, but you can support the show.
You know, Linode is our hosting provider for everything since we've gone independent.
Every service, anything that faces the audience that we've built, anything that our team uses
to collaborate, we've deployed it all on Linode.
And there's a lot of reasons for that.
First of all, the infrastructure is super solid, like we just don't have downtime.
There's awesome performance.
That is maybe number one for me.
And I really have appreciated as time has gone on how we just focus on the project or
the service we're trying to stand up and not on all the little details of infrastructure.
That's what Linode nails.
You get 11 data centers to choose from and every service level is backed by the best
support in the business.
And man, when that matters, it makes all the difference.
You know, Linode has been focused on being the best at running things on Linux in the
cloud since 2003.
They've been at this for 18 years and they're independently funded and they got into it
because of a passion for the technology.
And you know, I can really relate with that and I suspect I don't have to tell you guys
out there that it makes a difference when a company is actually passionate about the
product they make.
You know, it's not just a group of bean counters that got together and figured out how they
could make a bunch of money in cloud and then launched a product that's backed by a bunch
of VCs.
They started because, well, they're geeks and they really liked this stuff and I think
long term that gets baked into every decision a company makes.
It's how they view the world, it's how they think about their product and when you zoom
out over 18 years, all those little decisions add up and it makes something truly unique.
So go try it out for yourself.
That $100 means you actually can try it and go see what I've been talking about and support
the show.
Linode.com.
I don't want to spend too much time on this, but all of the Apple press, there's so many
podcasts, so many websites and blogs and full time professionals, all they do is talk about
Apple and they're not talking about this horrendously cringy speech that Craig Federighi, everybody
loves Craig Federighi in the Mac community, in the Apple community.
He went out, did a talk about how bad sideloading is and I think because it was on LinkedIn,
nobody really bothered to watch it, but I did and it's really, really rough.
Essentially what's going on is Apple is taking issue with a new law that's in the works across
the pond.
It's called the Digital Markets Act and the Digital Markets Act requires the ability for
phones to have sideloading apps and Craig, you don't like that too much.
But today there is one provision of the DMA that I think deserves a little more consideration.
Specifically I want to talk today about sideloading and why requiring it on iPhone would be a
step backwards in our privacy and security journey.
He then takes 10 minutes to make a really tortured analogy about the security of a house
and allowing burglars to just come in and he says, we don't need this, these new provisions,
we don't need it because Apple's been getting it right.
Look how good we've been that proves we don't need sideloading.
Long story short, iPhone security approach has worked, but you don't have to take my
word for it because the security community regularly says things like this, quote, Apple's
iOS devices are the most secure consumer hardware ever made.
But let's look at some numbers because when we compare iOS to other platforms, a clear
story emerges.
Here's a graph showing third party data on malware infections by platform and you can
see iPhone barely registers.
But the level of attacks on other platforms is a different story.
One security firm found more than 5 million attacks per month on its clients using another
mobile platform, but there's never been this kind of widespread consumer malware attack
on iOS, never.
So what's the difference?
Well, the single biggest reason is that other platforms allow sideloading, done, done, done.
Yeah, sideloading is so dangerous because you see, even if it's off by default, people
could be socially engineered into turning it on and that essentially makes us all vulnerable.
And so he kind of brings it home back to this tortured house analogy he's been making the
entire time and really makes the pitch.
So now let's return back to our favorite house.
As you remember, you made a choice.
You wanted to protect your family, so you bought a really safe home with a really great
security system and you're really glad you did because since you first moved in, the
burglars have never been more creative or more plentiful and in the real world of cybersecurity,
this couldn't be more true.
Attackers are virtually dressing up as mailmen, building tunnels underground and trying to
scale your backyard walls with grappling hooks.
In this world, some of your neighbors are suffering repeated break-ins, but the home
you have has kept you safe.
But then that new law gets passed and in the noble pursuit of say more optimized package
delivery, your town requires everyone to build an always unlocked side door on the ground
floor of their homes.
Now some of your neighbors, they love this idea, but you're not so sure because you know
that once the side door is built, anyone can walk through it.
The safe house that you chose now has a fatal flaw in its security system and burglars are
really good at exploiting it.
In a nutshell, sideloading is that unlocked side door.
So there you go.
That's Apple's position and they are doubling down so hard on this.
That is not Apple's real position.
So if you want the good app store coverage, you got to read the financial press like a
market watch or Bloomberg because one of my favorite opinion pieces has been how much
does Apple make on the app store?
They're basically just quoting the epic lawyers and financial analyst, just mocking Tim Phil
Schiller on the stand being like, I don't know if it's profitable.
Well couldn't you infer that 30% of whatever number you admitted to as the revenue would
be $20 billion.
So you're saying 20 billion is not a profit.
I don't know, pulling teeth they had to admit that the section of their business, which
includes the app store is 70.1% profitable, but they refuse and they say not only do they
refuse, they say they simply do not have the accounting controls in the company to know
which percentage of that is in the app store.
Can't be known.
Can't be tracked.
It can't be known because you don't want to know, because if there's any record from
PricewaterhouseCoop or whoever their big five or big three accounting firm now is, that's
like subpoenable, right?
You don't want to know.
It's laughable.
Protecting a house, a very big house in Palo Alto with lots of shiny things.
How cringe is it?
How cringe is that?
It's cringe.
It's also cringe because it's like a web developer conference.
Yeah.
And he's the last one.
And it's the whole way it's set up is super cringe.
Like the audience at first doesn't really know to clap because the way it's set up sounds
bad.
It's 15 minutes of that.
It's 15 minutes of that.
And while I completely 100% agree with your take, their public position is going to be
what Craig just said, and Craig's going to go on all of these different Apple friendly
outlets and he's going to very earnestly say it's all about protecting.
And their core argument, what it really boils down to is in the name of choice, you're going
to strip away people's security and we offer choice, the choice to be secure.
If you don't want that, go get an Android phone.
So they claim that it's kind of like this reverse argument that in the name of choice,
you're actually taking away choice because you're removing the choice for people to choose
iOS as a platform designed the way they have it today.
It's interesting that he picks side loaning because I think there is like an actual security
argument there.
But what he fails to mention in that whole cringe worthy LinkedIn speech at this web
conference is like third party payment providers.
Like the one that Stripe is making, I believe it's Stripe, maybe it's PayPal.
One of them is making one for iOS that would avoid that 30% tax.
This is where you can tell that their entire argument is basically bull right?
Because they're trying to protect the 30% fee.
You know what it is, it's because of this digital markets act and this digital markets
act is going to enforce the ability to sideload on these platforms.
So that's why they're hitting this so hard.
See sideloading is great I think for them because it's hard.
The thing I think that would be the real boon or rather the thing that would damage them
is that they can't enforce using their AIP system and when I say can't enforce I mean
you can't even say it must be an option.
That would screw them over.
When I listen to this whole thing all I learned is okay they see their future as a middleman
for services and that's just too big a pie to give up.
So you know in South Korea there was a judgment that came down that said Apple and Google
must allow third-party payment systems and Google has responded and they've updated it
now and you can use a third-party payment.
You still publish your app to the Play Store.
You put in your API information for the payment system and it comes up on what looks like
a built-in Android payment screen like it looks completely legit but it's using the
payment provider you choose and I don't know if I have the numbers right but Google is
then putting like an 11% transaction charge on top of that so even though you're not going
through their payment system they're still charging like a like a 10% or something like
that cut to sell an app on Android if you go outside their system.
Yeah because this is about money and being a middleman is one of the best businesses
you can be in.
Right.
That's exactly it yeah.
I just say prepare yourselves because I think Apple's gonna fight this one for the reasons
you just said but saying the things that Craig just said like that's something that they
have been working on for a while and Craig hit it as hard as he could he gave it the
hardest sell he could and that's why when you watch it I do have a link in the show
notes when you watch it it's even cringier when you see him sometimes.
It's kind of unfortunate because I have to say I had a pretty good opinion of Craig Federighi
before this and this really just shows he's a really good corporate actor.
I mean I know he's also good you know apparently boss and technician all that kind of stuff
but you watch that video and tell me he's not out there selling.
It's really something.
Well I mean they follow their incentives right like any other corporate executives.
I don't know.
They can't go tell Wall Street that they're not going to collect this fee.
Maybe I'm too essentialist about it but.
Well let's put on our and is it and rind or is it rind?
And rant yeah.
Here put on your capitals hat for a second like they've built this platform.
You know they created this platform and now they have to keep the platform competitive
and they have to keep investing in it like they have to make this money because you know
that's how they're going to make money on the platform going forward.
Now they've sold the hardware and they still have costs.
I mean I don't I don't know.
I could see actually the way Google is doing it in South Korea.
I could see that being reasonable if it was like three percent.
Yeah this will be in court for five years.
Shortcut dot com slash coder.
Have you ever really been happy with your project management tool?
I mean most are either just too simple for a growing team or they're way too complex
for anyone to actually want to use them.
So someone has to constantly prod everyone to use the tool.
Shortcut formerly known as clubhouse.
They're different though.
They're different because they're worse.
Wait oh wait.
No.
No actually no.
No really.
It's quite better.
Shortcut is project management built specifically for software teams and they're fast.
It's intuitive.
It's flexible.
It's powerful and a lot of really nice positive adjectives that they've earned.
Trust me.
But let's look at some of their highlights so you can see what I'm talking about.
Shortcuts got team based workflows.
Individual teams can use shortcuts default workflows or customize them to match the way
they work.
They have organizational wide goals and roadmaps.
You can work in these workflows and see how they're automatically tied to larger company
goals.
And it just takes one click to move from a roadmap to a team's work or even individual
updates and vice versa.
And has tight VCS integrations so if you use GitHub or GitLab or Bitbucket, Shortcut ties
directly to those so you can update progress from the command line.
And speaking of keyboard friendly interfaces well Shortcut sets the bar.
In fact they have a power bar allowing you to do just virtually anything without touching
your mouse.
You can throw that thing in the trash.
Oh and iterations planning.
Set weekly priorities and then let Shortcut run the schedule for you with accompanying
burn down charts and other reporting.
So go give it a try and support the show.
Shortcut.com slash coder.
Again Shortcut.com slash coder.
Shortcut formerly known as Clubhouse because you shouldn't have to project manage your
project management.
Shortcut.com slash coder.
So now let's talk about.NET.
I think you're going to like this a lot more.
.NET 6 is out and I'm not even really in the.NET community and I'm pretty impressed by
this release.
Yeah.
I mean there you know there's a lot going on here.
There was a whole controversy about the live reload thing in VS Code.
I think that's been covered to death and I don't think we need to cover it.
But once again you know bottom line business incentives sometimes interfere with people's
other goals.
Hot Reload did make it though.
It is in.
It did make it and it was kind of a messy way it made it.
Yeah so it's you know.NET 6 it's a lot of quality of life improvements for you you honorable
C sharp developers working in the enterprise that will never be allowed to update it for
two years.
I don't there's nothing like there's the compile ahead of time stuff.
I have lots of skeptical thoughts about that.
And I say rightfully so they've kind of taken passes at this over the years although yeah
you know now they say they've really gotten it.
I think this is interesting.
So ahead of time compilation it essentially gives you some performance in some areas you
know reduce the startup time and things like that and the only downside is supposedly is
that these different implementations have always had all these different compromises
you've had to make.
So I don't know anything about this but I was reading through on Twitter and it seems
like there's several people that have been using this like several well-known developers
that have been using this in their environments for months now already.
In fact that theme is in several of the major features throughout.NET 6.
Microsoft in their release notes really stresses the fact that they've been running this in
production on Azure for months now but there's also like they've clearly worked with certain
developers in the.NET community and given them like kind of like hands-on time to get
them to start using.NET 6 a while ago.
And so they've been using it for a while and that's that is a very it's it's really interesting
how all in Microsoft is here in fact I recommend everybody read through the release notes because
they're in there talking about like how they're tracking Debian releases and timing the release
cadence with that and there's all kinds of like really deep thought through processes
that they're doing in the community and there's a shout out in there too for Apple development
support team that sent them some ARM Macs like months before their main release so that
way they could get working on.NET 6 compatibility for the M1.
In fact the whole ARM 64 support looks really good for Linux, Windows, and the Mac.
It seems like this is a release that's firing in all cylinders.
Yeah I'm trying I'm trying not to throw too much cold water on it.
I don't know I was reading through all these announcements and I just realized in the last
let's say five years C sharp has become such an just huge language.
There's so many different ways to do things.
One of the features that I would normally be excited about but I'm jaded is that this
.NET single binary for all platforms.
Oh yeah see I thought that was great.
I don't believe it.
There's gonna be a lot of restrictions on that.
And also like I could tell you at TMB we're doing some Maui development now.
It's very new.
Man that's where I was gonna go next.
Yeah Xamarin Forms because it's basically becoming Maui in some weird way is also kind
of busted now which Xamarin Forms you could argue has been busted for ever.
So I don't know I feel like you know.NET is a great development environment don't get
me wrong but Microsoft keeps like this is the Holy Grail.
It's not just Microsoft right.
It's right once run everywhere.
Java's been talking about this since the 90s.
Everybody's wanted this.
It's hard right.
It's always gonna be hard.
It's the reason I can't run Age of Empires 4 on my Mac.
I don't necessarily think it's gonna be as beautiful as they would have you see in their
somewhat odd very produced videos they've been producing over the last week.
They sure are.
I was actually because I was jumping around a little bit I was like whoa what is going
on here.
This is pretty interesting.
I mean I appreciate the effort on the production myself but you're right it is massive and
it's a bit overwhelming at this point and I can't really speak to the quality of any
of these things.
A lot of times with Microsoft it takes them three releases to kind of get it right and
then depending on the product they either go horizontal for a while and then it takes
them like another three releases to really get it right.
And so I don't know where we are in that phase with Microsoft because I don't have hands
on experience with this stuff.
Sure but like this isn't just like a Windows SDK release or like the language stuff I think
is fine.
Like my preference for languages to be smaller and somewhat simpler is like back to my Objective
C days and whatever.
Even Python I'm like Python 3.10 it's kind of getting larger I don't know.
The Maui stuff is it's like the holy grail.
If they actually pull it off where you don't have to think about the platform or the desktop
environment then they will have solved the problem a software engineering problem that
has since been up till now unsolvable.
The closest actual solution has been the web browser right the DOM but the DOM comes with
a lot of tradeoffs even today and you know November of 2021.
I'm skeptical because the claim is so big right.
And also the other big feature they're pushing in VS 2022 the kind of AI code assistant thing.
I don't like GitHub pilot.
I don't want that built into my editor.
I have lots of concerns about potential license violations if they regurgitate GPL code.
It's just not the kind of thing I would rather just better IntelliSense via you know semantic
just like the normal semantic crap that all these code completion things have been using
forever not AI scanning open GitHub repos.
That's my soapbox.
I know people are excited about it.
I follow you.
Let me see if I can wow you about Maui though just for a second.
Sure.
Because I guess what I would do is I would try to present to you that perhaps the table
is set differently now than all the promises since Java.
Because if you think about the scope of what Maui is promising when you just think about
how big of a job that is it almost seems impossible on its own right.
But if there was any company that would just stick with it for a while and throw tons of
resources at it and take on a crazy thing like that it would be Microsoft like Sun was
never Sun was never in that position.
No it wouldn't.
Wait wait wait wait wait.
They've owned Xamarin for how long now and Xamarin forms is still a wreck.
I'm sorry.
Right.
No I know.
I know.
But here's the thing.
Here's the thing.
This time it's different.
I think and of course this is the Linux hippie in me but this time it's different.
It's open source.
So even if Microsoft say Microsoft plows away at this for another five years and says you
know what everything through edge now WebAssembly Microsoft active WebAssembly we're done with
all this right.
It's just crazy.
It's open source.
There's so much community momentum now that they'll never let it go.
So it will never stop at this point.
Maui is going to outlive you and I.
Yeah.
Well of course.
I mean VB like ASP classic is still around.
I'm not saying it's going to die.
I'm just saying think about think about the task they are attempting to take here.
Let's take your five year timeline.
Let's say they're perfecting things on GNOME KDE you know all the whatever the GTK desktops
and they're perfecting Aqua.
Well I don't know man I was looking old in the tooth in five years will it still be Aqua.
Windows made the deal with the devil to support everything forever.
Trust me I was in the registry the other this morning it was terrible.
The platforms aren't going to stay still.
And I have done so much different development that I can tell you that even today Xamarin
has significant problems on Android and I don't care what you say I don't care what
third party library you want me to download you shouldn't have to write that Xamarin labs
crap it should either be in Xamarin or it should frankly not exist.
I was an early adopter of Xamarin when they were an independent company.
It was beautiful on iOS that had nothing to do with them.
That had everything to do with iOS was native code or rendering images.
You could not have a list view with images in it like a table view on Android without
it crashing either stuttering or on lower end phones just running out of memory and
blowing up.
And the answer was what they call at the time custom renders which is basically just give
up the advantage of cross platform and write a native view.
Which if you're going to do that do it in C++ and write everything native maintain your
own little gooey library or just use the native gooey widgets right just you can call back
into a C++ binary and actually have something that's good.
So I think I see what you're saying you're saying not only is it just obvious that the
task is too large of a scope and never going to be completed but history shows us that
by the time they get somewhere all of the other platforms will be changing and they'll
need to update.
Well there'll be a new platform right there'll be a new platform.
Constantly catching up constantly chasing.
Of course this is a problem even with what I colloquially call Xamarin classic which
was not with the form stuff for like they would always be especially right in the beginning
when they were independent racing to catch up with the IOS features that would come out
and there would be bugs and there would be issues and you'd have to patch and you'd be
running a pre-release versions.
I don't know I'm cautious sure so somebody says I think Xamarin is a good tool if you
know that you have let's say I can give you a real world example we know we want to target
Windows tablets and we may want to one day port to Android.
That's a use case where as long as you know what you're doing you avoid the edge cases
and Android but this idea that I'm going to write a single MSI or X here whatever the
binary format is going to be or app image right that's just going to magically render
these GUI elements correctly and look good and not feel like crap on all these different
platforms including GTK Linux and mobile seems insane to me.
I'd like to mention our friends at a cloud guru have a data preparation for Python course
Python can absolutely be a powerful tool for data preparation why not learn how to properly
use it.
So in their course they'll quickly cover how to connect to various database types jump
into using Panda Python packages for data preparation and they'll even look at examples
for cleansing data visualizations exploration and of course pre-processing data for machine
learning that is the air after all.
So I have a link in the show notes or you can go to cloudguru.com and search for data
preparation for Python again that's a cloudguru.com data preparation for Python or use the link
in the show notes.
We just kind of touched on it but we got to talk about it GitHub has a new CEO and really
it seems to me although I don't know but it seems like a kind of a new corporate oversight
structure as well so Nat Friedman is stepping down November 15th Thomas Domke is being promoted
to CEO he was hired by Nat shortly after Microsoft bought GitHub.
Domke will report to Julia Lewisohn Lewisohn was directly involved with that hot reload
drama that we kind of just skated right around earlier and Lewisohn was recently promoted
to president of Microsoft's developer division kind of a huge change now as a celebrity and
so when he became CEO I think the developer community went okay all right well okay we
got a buffer between Microsoft and GitHub and I don't know Domke Thomas but he himself
says he's not really the visionary type he's just more of the heads down worker type.
I kind of worry that without somebody who has a strong vision and a passion it could
be pretty easy to get rolled over by by corporate control in the new structure not that I would
have any experience with anything like this but you know that just seems like this leaves
GitHub in a little bit more of a precarious position not saying the sky is falling but
I'm left a little uneasy with this change what are your thoughts though maybe I'm wrong
I don't know what do you want GitHub to be trustworthy reliable I want to be able to
count on it like because so much of the community uses it I just don't want there to be any
kind of bad bait and switches well there's going to be the stuff that we've already seen
right somebody puts up a thing to rip DRM off or on region code DVDs or I don't remember
what it was exactly but you know the arm CA whatever it is since the cease and desist
and GitHub takes it down because Microsoft's an American company and has to you know honor
US court rulings and co-pilots already a thing co-pilot I think is bad and shouldn't exist
but that's my little pet peeve as I said before I actually am not super upset by what I see
people complaining about the idea that they would tie it closer to Azure and VS code I
really think that especially for junior developers you know Heroku was a game changer for Ruby
developers learning what to do and then they adopted other platforms I don't necessarily
think it's wrong if Microsoft wants to make a few you know a few nickels by saying here
dog we see you have a Python app or Java app or whatever dotnet six app and here's a button
we automatically did the configuration and we'll go ahead and spin up a lambda or whatever
they call their functions they call it Microsoft Azure functions or even just a straight up
Azure you know IAS or open to instance I guess I'm just not worried about that I worry about
the IP implications of code pilot I worry about all the legal stuff with like you get
in a lawsuit yeah I know I know but I'm I feel like that is a transitory risk boy I
just feels like GitHub has become one of the key pillars of the internet and you know we've
siloed up a lot of stuff into these islands and it feels like the GitHub islands it's
one that you know you got to pass through for a lot of internet stuff now I don't know
I like the idea of somebody that has a real solid personality I don't mean to be disrespectful
to Domka I don't know what he's like at all I've seen some interviews and he seemed kind
of you know like a nice guy I mean I just want to say and you know we have to deal with
the world as it is and we live in a world of pseudo monopolies and Titans right so
if somebody had to own GitHub I'm sure happiest Microsoft and not Oracle true I'm just saying
right like or or frankly even like you know Amazon who we've seen what they do to their
partners quote unquote on the marketplace I I don't know I mean even like Salesforce
has been a reasonable steward of Heroku granted the prices are ridiculous but so this new
corporate structure is such where Domka will report to Louis and and she's now the president
of Microsoft developer division I did a little bit of reading on her it seems like she's
been pretty integral to a lot of their open source stuff lately so I know her most recent
things kind of being kind of being in the middle of the hot reload drama but it seems
if you look beyond just that she was pretty key in the rollout of VS code and some of
the other open source stuff could just take like a minute to talk about the hot reload
thing because this is where I go back to being evil capitalist where dotnet wants to be flutter
what well okay one if it's a feature you think is good that's fine but now I know I think
it is actually a nice feature I think it's fine right I'm not it doesn't it's not something
that would be like a deal breaker for me but why is it necessarily evil if Microsoft was
like yeah man we sell this IDE for like I don't even remember what a visual studio license
costs I remember paying like two grand for them in the past why would it be crazy that
they would have features that are on their commercial product rather than just giving
everything away why would that even be like a problem perhaps the mistake was including
it at all and then taking it away yeah okay but in theory if there's another feature let's
call let's call it you know convert your code into vb6 or whatever and that was a paid feature
and you just had to pay for it why couldn't there be paid features and VS code well we've
gone down that route before and we actually got a few emails that said oh that'll never
happen for these reasons and then we got another email said it's already started so you go
figure I don't really know because I didn't follow closely enough but I guess conceptually
I don't necessarily disagree with you I think what people expect is if something if something's
open source and you contribute it it's kind of in there I guess I have a hard time really
kind of coming up with the complete picture because I just I simply didn't follow close
enough it seems like the main mistake was taking it away giving and taking and then
they really had no choice but to give it back yes you see I guess I'm just like really wanting
them to make a lot of money off making developers more productive without actually like reading
their code and like that's why I'm super down with the deploy to Azure button right I want
there to be whatever you know the equivalent of Visual Studio Enterprise Edition of VS
code even where it's like you pay 300 bucks a month or not a month but a year or five
whatever the number has to be so that they can say okay we are going to make money off
of selling you this product or giving it away as open source and then having kind of an
open core model I know that's a dirty word like the thing that really and I know I keep
hitting this that keeps me up at night is the code pilot stuff and then the new basically
code pilot equivalent in via Visual Studio proper that's the stuff where we're gonna
get into some really murky cases where I mean let's just put it out there if I write something
that code pilot violates the GPL on am I screwed because I committed it I put it out there
I guess technically wouldn't that liability hit me I would think so that would destroy
my whole business right overnight you better be checking every line that thing writes for
you it's not gonna save you much time that's the reason I won't use it right like that
isn't that kind of stuff the true true value of GitHub for Microsoft like the amount of
insights they get to development trends from from all aspects from people who are just
fantastic developers to up-and-coming languages and open source projects the GitHub from like
a data collection standpoint has got to be one of the most valuable sets of users on
the internet especially for a company like Microsoft who's building tools that targets
developers and and a hosting platform like it just seems almost almost invaluable amounts
of data and we don't really talk about GitHub from that standpoint but co-pilot shows us
in a very overt in our face way how they can use the information that's on their platform
and we're not always gonna like it in fact we probably won't know like it and this is
probably just the beginning because this is the real reason they must have bought it right
I think there's lots of reasons I bought it see I give them some credit one of the many
one of but I bet you it's if you put them all out there it's got to be on the list because
this isn't getting this kind of insight into developers is intensely valuable and this
is a great opportunity by the way for GitLab to email the show Chris at Jupiter broadcasting.com
let's talk I was gonna say do some advertising on this podcast because you know people are
gonna also be getting less and less comfortable with this arrangement oh I do I do wonder
though as GitHub becomes more and more convenient particularly for small developers and small
shops does the attractiveness of hope hosting a GitLab CE instance just kind of start to
go down I don't know I don't think so I think there's gonna be it's both ways it's not a
one or the other they'll be like a backlash yeah exactly exactly and it's getting easy
like Linode's got like a one-click you know one click boom you got GitLab you definitely
need to patch that one click one because there is an exploit that makes it rough do a non-invasive
DDoS attack holy smokes get it patched yeah you always got to do your updates especially
if the image hasn't been updated for a bit go do your updates now thankfully they are
very quick updates because they mirror the repos because it's Ruby you know what I'll
often do really myself is I'll start with the base system that's just like Ubuntu and
Docker and then just go from there myself I prefer it that way I would just before we
get out here I want to say thank you to our coder QA team our oh there will be some upgrades
in the near future and if you go to coderqa.co right now and sign up you can you'll be locking
in the price so you might want to join right now plus you get access to the coderly report
which comes out every quarter you get the limited ad feed but of course your support
in the show keeping us going make it happen help us pay for Drew's fine fine skills and
you can find the show at Coder Radio Show on Twitter I'm at Chris LAS where do you want
to send people Mr. Dominic go to alice.dev love it.dev should have had that forever
ago his company's at the mad bot or inky is at Dumanuco the network is at Jupiter signal
and links to what we talked about today are at coder.show slash four three Niner over
there at that website you'll find our RSS feed so you can subscribe and get every episode
our contact form we like to start every episode out with some feedback it warms us up gets
us spicy we need your emails get us thinking get us talking and give us your productivity
tips hacks etc coder.show slash contact and last but not least you can do it live with
us we do it Mondays at noon Pacific 3 p.m. Eastern at jblive.tv thanks so much for joining
us on this week's episode of the Coder Radio program and we'll see you right back here
next week.
