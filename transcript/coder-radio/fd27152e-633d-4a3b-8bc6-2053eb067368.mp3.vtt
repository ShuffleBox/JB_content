WEBVTT

00:00.000 --> 00:07.000
This is Koda Radio, episode 438 for November 1st, 2021.

00:15.000 --> 00:18.000
Hello friend and welcome in to Jupiter Broadcasting's weekly talk show,

00:18.000 --> 00:22.000
taking a pragmatic look at the art and the business of software development

00:22.000 --> 00:24.000
and the world of technology.

00:24.000 --> 00:26.000
This episode is brought to you by Cloud Guru.

00:26.000 --> 00:30.000
The Cloud Guru has the cloud playground, Azure, AWS and Google Cloud

00:30.000 --> 00:33.000
on ACG's credit card, not yours.

00:33.000 --> 00:37.000
Get certified, get hired, get learning at acloudguru.com.

00:37.000 --> 00:42.000
My name is Chris and joining us every single week relishing in the Jar Jar memes

00:42.000 --> 00:44.000
is our host, Mr. Dominic.

00:44.000 --> 00:45.000
Hello, Mike.

00:45.000 --> 00:47.000
What's up, Mr. Fisher?

00:47.000 --> 00:53.000
I can't believe that the internet is still making Jar Jar Binks a valid meme.

00:53.000 --> 00:59.000
It's like somehow you picked a winner a long time ago and it drives me crazy.

00:59.000 --> 01:03.000
Well, you know, I figured out that all the hate for Jar Jar, it wasn't hate.

01:03.000 --> 01:05.000
It was really love.

01:05.000 --> 01:09.000
Yeah, the Jar Jar meta meme that was going around this last week

01:09.000 --> 01:12.000
after the Facebook event was pretty choice, I got to say.

01:12.000 --> 01:14.000
A lot of people sent it to me.

01:14.000 --> 01:17.000
Like surprising amounts of people sent it to me.

01:17.000 --> 01:19.000
I'm like, yes, I get it.

01:19.000 --> 01:21.000
Why am I not surprised?

01:21.000 --> 01:23.000
Boy, what a weekend.

01:23.000 --> 01:26.000
Do you and the kid do the trick or treating thing down there in the Florida?

01:26.000 --> 01:27.000
We sure did.

01:27.000 --> 01:29.000
I was hanging out with Miles Morales.

01:29.000 --> 01:31.000
It was a good time.

01:31.000 --> 01:33.000
I had the weirdest experience.

01:33.000 --> 01:35.000
I'll try to just really quickly recap it.

01:35.000 --> 01:39.000
But because what it really comes down to is how corporations are twisting

01:39.000 --> 01:43.000
themselves in knots to cover their ass, but also still try to like do things

01:43.000 --> 01:46.000
to incentivize customers to show up to their events.

01:46.000 --> 01:50.000
So every year we have this family tradition where we pack up the RV

01:50.000 --> 01:53.000
and we go to this campground that has this big Halloween event.

01:53.000 --> 01:57.000
And they have site decoration competitions and pumpkin carving competitions

01:57.000 --> 01:59.000
and costume competitions.

01:59.000 --> 02:01.000
And they have this big trick or treating event.

02:01.000 --> 02:04.000
And everybody builds, you know, like into this whole event.

02:04.000 --> 02:06.000
Like it's everybody's participating.

02:06.000 --> 02:08.000
It's a nice community experience.

02:08.000 --> 02:10.000
But it involves people really being close to each other.

02:10.000 --> 02:13.000
So this year the company decided we're not doing anything.

02:13.000 --> 02:15.000
It's too risky because of the Rona.

02:15.000 --> 02:20.000
The problem is the campground is co-owned by another company, KOA.

02:20.000 --> 02:23.000
And the KOA folks say, you know, we want to do an event.

02:23.000 --> 02:25.000
So we're doing an event.

02:25.000 --> 02:29.000
And so there was this really weird kind of we're going to do stuff,

02:29.000 --> 02:31.000
but we're not going to tell you the details.

02:31.000 --> 02:34.000
That way you can't hold us accountable if anybody gets sick.

02:34.000 --> 02:36.000
And so nobody knew what was going on.

02:36.000 --> 02:40.000
It was all a bunch of indecision and like no information, which of course

02:40.000 --> 02:43.000
is the worst thing possible during a pandemic.

02:43.000 --> 02:47.000
And so that way you could never point to anything that was written that said,

02:47.000 --> 02:49.000
they said trick or treating would be at this time.

02:49.000 --> 02:51.000
They said site competitions would be at this time.

02:51.000 --> 02:52.000
They still wanted us all to do it.

02:52.000 --> 02:54.000
And they invited people there.

02:54.000 --> 02:56.000
They held the judging for the costumes.

02:56.000 --> 02:59.000
They did the judging for the sites.

02:59.000 --> 03:00.000
But they just never made it official.

03:00.000 --> 03:04.000
So that way they couldn't get in trouble if anybody got sick.

03:04.000 --> 03:08.000
And it just seems like such a backwards way to go about it.

03:08.000 --> 03:12.000
It's clearly a cover your ass move and not about protecting people at all.

03:12.000 --> 03:14.000
Classic big business.

03:14.000 --> 03:17.000
But I'm grateful that it happened, you know, because those yearly traditions

03:17.000 --> 03:20.000
are important and and it's outdoors.

03:20.000 --> 03:22.000
So I feel pretty good about it.

03:22.000 --> 03:23.000
And it was a lot of fun.

03:23.000 --> 03:25.000
It did end up working out pretty good.

03:25.000 --> 03:27.000
So we got some feedback this week.

03:27.000 --> 03:29.000
I was negligent last week when I was out in the woods.

03:29.000 --> 03:30.000
But now I'm back in the studio.

03:30.000 --> 03:34.000
I had time this morning to go through the inbox and I picked out a few that I

03:34.000 --> 03:35.000
thought we could be helpful with.

03:35.000 --> 03:43.000
So Nick, who is a longtime Linux user, has decided to order an M1 MacBook Pro.

03:43.000 --> 03:47.000
And he's a little concerned about this transition.

03:47.000 --> 03:48.000
And he wants a couple of tips from us.

03:48.000 --> 03:51.000
Number one, he'd like to know about any information you have about what he needs

03:51.000 --> 03:53.000
to run in Rosetta for development tools.

03:53.000 --> 03:57.000
And if there's any tips, tricks or applications we might recommend for him

03:57.000 --> 04:00.000
getting set up to develop on the M1 hardware.

04:00.000 --> 04:02.000
And he says, thanks for the shows.

04:02.000 --> 04:05.000
So I'm curious if you just have any quick things to pass along to him.

04:05.000 --> 04:07.000
I didn't think we need to spend a lot of time on this, but I do have a couple of

04:07.000 --> 04:09.000
handy resources.

04:09.000 --> 04:11.000
Yeah, I think we got an email like this last week.

04:11.000 --> 04:14.000
I mean, I just run Terminal in Rosetta all the time.

04:14.000 --> 04:19.000
That eliminates most of my, you know, like dependency issues or whatever.

04:19.000 --> 04:21.000
Honestly, that's kind of the biggest thing.

04:21.000 --> 04:24.000
I mean, it's not M1 related.

04:24.000 --> 04:28.000
But there are certainly apps that are useful if you're on Mac.

04:28.000 --> 04:30.000
Kaleidoscope is a good diffing tool.

04:30.000 --> 04:35.000
VS Code is not really a Mac app, but, you know, it's my editor of choice.

04:35.000 --> 04:37.000
Beyond that, that's kind of it.

04:37.000 --> 04:40.000
I mean, I basically work in Terminal VS Code, and if I really have a gnarly

04:40.000 --> 04:45.000
merge, although VS Codes get conflict tools are really good too, so.

04:45.000 --> 04:48.000
Nick didn't say what desktop environment he's switching from.

04:48.000 --> 04:49.000
Yes.

04:49.000 --> 04:53.000
So I don't know exactly what he expects in terms of window management.

04:53.000 --> 04:55.000
I'll have some notes on this in a bit.

04:55.000 --> 04:58.000
It's a little bit better in Monoray, but it's still pretty weak compared to

04:58.000 --> 05:00.000
like something like Plasma or even GNOME Shell.

05:00.000 --> 05:05.000
So back in March of 2020, I did a Chris Lastcast, which is just a thing I was

05:05.000 --> 05:09.000
doing for a bit, and I had tried like a month on the Mac or something like that.

05:09.000 --> 05:13.000
And I went through and what I did, and I think, Nick, I'm still suggesting all

05:13.000 --> 05:16.000
the tools that I have linked there, and I'll link to you that stuff in the show

05:16.000 --> 05:17.000
notes.

05:17.000 --> 05:24.000
I say set aside 80 bucks, $80 that you're going to spend on independent

05:24.000 --> 05:30.000
developer software and buy yourself a few nice apps that improve the Mac OS

05:30.000 --> 05:32.000
experience and make it less frustrating.

05:32.000 --> 05:35.000
And in my opinion, make it more of a workstation OS.

05:35.000 --> 05:42.000
Number one with a bullet for me that I absolutely miss every day on every other

05:42.000 --> 05:46.000
desktop environment and every other Linux Linux desktop environment are on

05:46.000 --> 05:51.000
Windows is an app called Bumper B-U-M-P-R.

05:51.000 --> 05:56.000
This little beauty, what it does is you set this as your default browser.

05:56.000 --> 06:00.000
And then when you click a link in any app, any app anywhere on your desktop,

06:00.000 --> 06:05.000
immediately a nice little menu that's very easy to click on that comes up

06:05.000 --> 06:07.000
right where your mouse is at.

06:07.000 --> 06:10.000
It has a icon list of all of your browsers.

06:10.000 --> 06:14.000
Now on a Mac, I'll have Chrome, Firefox, Edge, Safari.

06:14.000 --> 06:20.000
I may even have Safari testing version and Edge testing version, and I am very

06:20.000 --> 06:25.000
particular about what browsers I use for what apps and what sites.

06:25.000 --> 06:27.000
And this little bumper app, what it does is you click that link.

06:27.000 --> 06:29.000
It brings up the icons of your browsers.

06:29.000 --> 06:32.000
You choose the browser and it sends the link to that browser.

06:32.000 --> 06:37.000
My God, this is one of the best applications I have ever used on a computer.

06:37.000 --> 06:38.000
God bless it.

06:38.000 --> 06:39.000
Go get Bumper.

06:39.000 --> 06:43.000
Also, I have links to things in there like Bartender, which will take some of

06:43.000 --> 06:45.000
the unnecessary icons out of the menu.

06:45.000 --> 06:48.000
And you got to get I stat menus if you've ever put any of like the system

06:48.000 --> 06:51.000
monitoring tools and like your plasma tray or your genome shell.

06:51.000 --> 06:53.000
You got to go get I stat menus.

06:53.000 --> 06:54.000
It's a killer.

06:54.000 --> 06:55.000
There's just a whole link I'll have.

06:55.000 --> 06:58.000
I'll put a link to the Chris Lastcast where I covered that stuff.

06:58.000 --> 06:59.000
You don't necessarily need to listen.

06:59.000 --> 07:02.000
I linked everything to show notes, but you can listen where I go into more details.

07:02.000 --> 07:06.000
And then just a quick note before we move on from this.

07:06.000 --> 07:11.000
So I got the M1 Mac Mini in-house that I've bought to do Asahi Linux testing on.

07:11.000 --> 07:16.000
And until Asahi Linux is ready to go, I decided to give Mac OS on there a spin

07:16.000 --> 07:20.000
because I have not really had much hands on with the M1 systems.

07:20.000 --> 07:21.000
And yeah, it's fast, of course.

07:21.000 --> 07:23.000
It doesn't get loud at all.

07:23.000 --> 07:25.000
It's everything Micah said.

07:25.000 --> 07:27.000
I realized it's like this.

07:27.000 --> 07:29.000
It's like the weather.

07:29.000 --> 07:33.000
I can explain to you what it was like this morning when I got up and it was 28

07:33.000 --> 07:35.000
degrees outside Fahrenheit.

07:35.000 --> 07:38.000
And you can understand the water freezes at that temperature and there could be

07:38.000 --> 07:42.000
frost and that maybe you could see my breath and you can you can visualize that.

07:42.000 --> 07:43.000
Right.

07:43.000 --> 07:47.000
But there is a huge difference between visualizing what 28 degrees Fahrenheit

07:47.000 --> 07:50.000
feels like and what it's like to stand out there.

07:50.000 --> 07:54.000
It's like you can you can conceptually understand something and then you can

07:54.000 --> 07:56.000
experience something.

07:56.000 --> 07:57.000
That's what the M1 performance is like.

07:57.000 --> 08:01.000
You can understand what it's like to have something fast, but then you experience

08:01.000 --> 08:05.000
a different architecture and you see things that once you experience it, you

08:05.000 --> 08:07.000
really truly understand it.

08:07.000 --> 08:13.000
And I had that experience with Linux desktop virtualization on the M1 Mini

08:13.000 --> 08:15.000
using parallels.

08:15.000 --> 08:19.000
It uses vert IO for the graphics, so it's essentially doing graphics

08:19.000 --> 08:24.000
pass through like you might do if you had a dedicated graphics card.

08:24.000 --> 08:26.000
Assigned to a VM.

08:26.000 --> 08:30.000
Well, parallels does that little trick to get the graphics to the display, and

08:30.000 --> 08:35.000
then it uses a rendering interface and parallels that talks metal.

08:35.000 --> 08:41.000
And what you get is essentially a 3D accelerated desktop Linux experience.

08:41.000 --> 08:46.000
And it is one of the absolute best.

08:46.000 --> 08:48.000
No, not one of not one of.

08:48.000 --> 08:54.000
It's the best desktop virtualized Linux experience I've ever had.

08:54.000 --> 08:58.000
And my son sat down when I had a full screen up on the M1 Mac Mini and just

08:58.000 --> 09:02.000
started setting up Minecraft and just going about his business and he had no

09:02.000 --> 09:04.000
idea he was in a virtual machine at all.

09:04.000 --> 09:07.000
And I have I've even gone just to like see how far I could take it.

09:07.000 --> 09:11.000
I wouldn't got in a genome extension so I could have wobbly windows and it's

09:11.000 --> 09:12.000
using Wayland.

09:12.000 --> 09:17.000
It's all happening on Wayland in Fedora 35 and it's it's an incredible desktop

09:17.000 --> 09:18.000
virtualized experience.

09:18.000 --> 09:21.000
I've never experienced this with desktop Linux and I can't imagine what it's

09:21.000 --> 09:24.000
going to be like on the M1 Pro or M1 Max.

09:24.000 --> 09:27.000
So Nick, my advice to you is get brew.

09:27.000 --> 09:29.000
Go get those apps we suggested.

09:29.000 --> 09:34.000
Follow Mike's tips and then go get parallel 17 and put Linux in there.

09:34.000 --> 09:36.000
So you've got that too.

09:36.000 --> 09:37.000
It's a killer setup.

09:37.000 --> 09:41.000
Have you tried virtualizing desktop Linux on any of your M1 gear?

09:41.000 --> 09:42.000
I have not.

09:42.000 --> 09:43.000
No.

09:43.000 --> 09:44.000
Oh, you should give it a go.

09:44.000 --> 09:45.000
It's impressive.

09:45.000 --> 09:50.000
I think you get a genuine experience of what it's like to run desktop Linux on

09:50.000 --> 09:51.000
metal.

09:51.000 --> 09:53.000
You know, you get ironically metal.

09:53.000 --> 09:54.000
Get it?

09:54.000 --> 09:56.000
It's really good.

09:56.000 --> 09:59.000
Moving on, Corey is a long timer and he has a question for us.

09:59.000 --> 10:01.000
This this is big.

10:01.000 --> 10:02.000
All right.

10:02.000 --> 10:03.000
So he's he looks he's looking for some advice.

10:03.000 --> 10:05.000
He's been listening to the show forever.

10:05.000 --> 10:09.000
He's been doing 100 percent Salesforce development for the last five years.

10:09.000 --> 10:14.000
He was a dot net developer for that before that for about five years.

10:14.000 --> 10:16.000
And he's also followed the news very closely.

10:16.000 --> 10:19.000
So he's aware of all the different frameworks, libraries, design trends,

10:19.000 --> 10:20.000
et cetera.

10:20.000 --> 10:23.000
He doesn't necessarily understand them, but he's fully aware of them.

10:23.000 --> 10:27.000
But he wants to kind of move on and he's got a project idea.

10:27.000 --> 10:30.000
He says I have an idea for a small website for collectors of a certain brand

10:30.000 --> 10:32.000
of backpacks.

10:32.000 --> 10:36.000
These backpacks are released all the time and there are collector groups and

10:36.000 --> 10:37.000
tons of sellers.

10:37.000 --> 10:41.000
The one thing I have not seen is a single website where you can look up the

10:41.000 --> 10:42.000
previous released bags.

10:42.000 --> 10:46.000
I was thinking about building this myself with future enhancements being links

10:46.000 --> 10:50.000
to new bags that you can currently buy with affiliate links if possible.

10:50.000 --> 10:53.000
Among other future enhancements would be to allow people to post classifieds for

10:53.000 --> 10:56.000
the bags that they have so they can buy and sell bags from other people.

10:56.000 --> 11:00.000
So with these enhancements in mind, I was thinking just something like a basic

11:00.000 --> 11:03.000
wiki would not be appropriate.

11:03.000 --> 11:06.000
I'm also unsure of maybe like the legal requirements of something like this

11:06.000 --> 11:07.000
would take.

11:07.000 --> 11:09.000
I've seen other websites like this for Pokemon cards.

11:09.000 --> 11:13.000
And so it seems like if you follow the right legal process and disclaimers on

11:13.000 --> 11:18.000
the site and whatnot, I'm not too super concerned and I'd be willing to set up

11:18.000 --> 11:19.000
an LLC.

11:19.000 --> 11:21.000
I imagine I'd probably need a lawyer.

11:21.000 --> 11:26.000
But starting from scratch right now on a project like this is an overwhelming

11:26.000 --> 11:27.000
experience.

11:27.000 --> 11:31.000
There's probably 30,000 node frameworks and so much more.

11:31.000 --> 11:35.000
There's tons of ways to deploy apps, serverless, AWS, Linode, Azure, Heroku,

11:35.000 --> 11:36.000
et cetera.

11:36.000 --> 11:39.000
Picking a backend, a front end, a database, an auth provider, a hosting

11:39.000 --> 11:40.000
style.

11:40.000 --> 11:42.000
It's just too much.

11:42.000 --> 11:46.000
I'd love to build something modern that will both teach me something new and

11:46.000 --> 11:50.000
relevant in the marketplace, as well as be something that I could deploy myself.

11:50.000 --> 11:51.000
Sorry for the long email.

11:51.000 --> 11:54.000
I guess I'm looking for just some advice on what to do.

11:54.000 --> 11:56.000
I have a lot of anxiety and all the choices.

11:56.000 --> 11:57.000
Any feedback would be appreciated.

11:57.000 --> 12:00.000
Thanks for all the content, Corey.

12:00.000 --> 12:03.000
So he really doesn't even know where to start with this.

12:03.000 --> 12:05.000
And I'm wondering, how do you figure that out?

12:05.000 --> 12:09.000
Because it seems like a lot of this other stuff, serverless, AWS, Linode, you

12:09.000 --> 12:13.000
start to answer that once you figure out maybe how you're going to build the

12:13.000 --> 12:14.000
site.

12:14.000 --> 12:17.000
Yeah, this is kind of tough because there's almost not enough information

12:17.000 --> 12:18.000
provided.

12:18.000 --> 12:19.000
Even though it's a huge email?

12:19.000 --> 12:20.000
Yeah.

12:20.000 --> 12:21.000
Yeah.

12:21.000 --> 12:22.000
It's a tough one.

12:22.000 --> 12:23.000
Yeah, for sure.

12:23.000 --> 12:26.000
I mean, there's two general approaches you can take, right?

12:26.000 --> 12:30.000
You can start with some sort of platform, preferably open source, like a Wiki.

12:30.000 --> 12:32.000
He mentioned Wikis.

12:32.000 --> 12:37.000
Or you can just start rolling your own minimum viable use case and then Voltron

12:37.000 --> 12:39.000
it up as you go.

12:39.000 --> 12:40.000
True.

12:40.000 --> 12:43.000
I'd probably start with the Wiki, I guess.

12:43.000 --> 12:46.000
I say that with hesitation because I'm not sure it's true.

12:46.000 --> 12:52.000
Yeah, it does feel like what he does need is some kind of MVP that would attract

12:52.000 --> 12:53.000
attention.

12:53.000 --> 12:56.000
And then people who know this stuff might start working with him.

12:56.000 --> 12:58.000
But that's a long shot, too.

12:58.000 --> 12:59.000
Yeah.

12:59.000 --> 13:04.000
It seems like a possibility is if you just got started on something, then you

13:04.000 --> 13:07.000
pretty quickly start identifying what works and doesn't work.

13:07.000 --> 13:10.000
Yeah, I think you almost need like a punch list of like, these are the five

13:10.000 --> 13:11.000
features I must have.

13:11.000 --> 13:12.000
Yeah.

13:12.000 --> 13:16.000
Ignoring the possible tech stacks you could use or projects you could use and

13:16.000 --> 13:17.000
then look at projects.

13:17.000 --> 13:20.000
OK, what does these five things?

13:20.000 --> 13:24.000
And if the answer is none, then you go ahead and you start rolling around.

13:24.000 --> 13:28.000
I wonder maybe is the better approach to build the community first, like set up

13:28.000 --> 13:34.000
a discourse forum maybe or a discord server and start building a community and

13:34.000 --> 13:37.000
getting people to collaborate and give them feedback and ideas.

13:37.000 --> 13:40.000
That's actually not bad because some of the community may have already tackled

13:40.000 --> 13:43.000
the spare that know what to do.

13:43.000 --> 13:46.000
Yeah, I may be crashed and burned or have opinions.

13:46.000 --> 13:47.000
So he may have to build.

13:47.000 --> 13:50.000
I mean, a discord would be really straightforward, obviously.

13:50.000 --> 13:51.000
Also a discourse forum.

13:51.000 --> 13:56.000
You could pop on Linode, get our $100 credit and deploy discourse with like a

13:56.000 --> 13:59.000
single click and be probably ready to go in 15 minutes.

13:59.000 --> 14:03.000
Get your domain, set it up, start seeing if you can get people to chat with you

14:03.000 --> 14:09.000
about it, talk to you about it, maybe build out a few default forums with the

14:09.000 --> 14:13.000
categories you think people will be interested to chat about and see if it

14:13.000 --> 14:15.000
goes from there.

14:15.000 --> 14:17.000
I know it's kind of a slow approach, though, Corey.

14:17.000 --> 14:18.000
All right.

14:18.000 --> 14:19.000
I got a great one from Remy.

14:19.000 --> 14:22.000
I thought this was so, so great because I know people, you know, they've been

14:22.000 --> 14:26.000
hearing about the MacBooks and everybody's got notch envy.

14:26.000 --> 14:29.000
So Remy wrote in for Linux users that are feeling left out of the fun.

14:29.000 --> 14:32.000
He says you can have the best of both worlds.

14:32.000 --> 14:35.000
Gnome users can go grab this extension.

14:35.000 --> 14:36.000
Oh, Jesus.

14:36.000 --> 14:37.000
Are you looking at it?

14:37.000 --> 14:38.000
How great is this?

14:38.000 --> 14:39.000
I saw this the other week.

14:39.000 --> 14:41.000
Oh, my God.

14:41.000 --> 14:42.000
Okay.

14:42.000 --> 14:47.000
So it adds a totally useless notch to your Gnome shell.

14:47.000 --> 14:51.000
First of all, Chris opened the store.

14:51.000 --> 14:56.000
The few Gnome extensions that I use when I run Linux cause me enough heartache.

14:56.000 --> 14:59.000
Why would I ever put first of all, nobody should want the notch.

14:59.000 --> 15:03.000
Second of all, why would you install a Gnome extension for anything other than

15:03.000 --> 15:07.000
like your fancy and you want changing desktop backgrounds?

15:07.000 --> 15:08.000
I don't know.

15:08.000 --> 15:11.000
I do like that the FAQ has the first question.

15:11.000 --> 15:15.000
WTF, why would you create this ugly extension?

15:15.000 --> 15:19.000
And his answer is, please ask Apple why they create such an ugly notch on their laptop.

15:19.000 --> 15:21.000
Well, you know, they just did a patch, right?

15:21.000 --> 15:25.000
Where you can totally basically create fake bezels now.

15:25.000 --> 15:30.000
Seriously, there's a mode in my if you just I believe you may have installed

15:30.000 --> 15:32.000
Monterey or your machine has Monterey.

15:32.000 --> 15:33.000
Yeah, there is.

15:33.000 --> 15:34.000
I do have some Monterey.

15:34.000 --> 15:36.000
There are some setting in there too.

15:36.000 --> 15:39.000
You can regain the glory that is top bezels.

15:39.000 --> 15:40.000
Hey, you know what?

15:40.000 --> 15:41.000
I might try it.

15:41.000 --> 15:42.000
I just think this is hilarious.

15:42.000 --> 15:45.000
The thing that's creepy, though, is the notch.

15:45.000 --> 15:48.000
It has a very hit slight hit.

15:48.000 --> 15:52.000
You can see the camera lens and the green power light for the camera.

15:52.000 --> 15:54.000
And it's always on.

15:54.000 --> 15:55.000
I don't like that one bit.

15:55.000 --> 15:57.000
I put a link in the show notes.

15:57.000 --> 15:58.000
You guys got to go see this.

15:58.000 --> 15:59.000
It's so funny.

15:59.000 --> 16:04.000
Are you sure that's not like screen bleeding, making it look like the lights on?

16:04.000 --> 16:06.000
You know what I mean, like reflecting?

16:06.000 --> 16:07.000
No, I don't think so.

16:07.000 --> 16:10.000
I think the guy added just a very slight, subtle camera behind the glass kind of look.

16:10.000 --> 16:12.000
I think it's brilliant.

16:12.000 --> 16:13.000
So thanks, Remy.

16:13.000 --> 16:15.000
Dear Lord.

16:15.000 --> 16:16.000
I know.

16:16.000 --> 16:17.000
It's so good.

16:17.000 --> 16:18.000
Oh, this is the genome extension.

16:18.000 --> 16:19.000
Not your.

16:19.000 --> 16:20.000
OK, not the actual.

16:20.000 --> 16:21.000
Oh, yeah.

16:21.000 --> 16:22.000
Oh, yeah.

16:22.000 --> 16:23.000
OK, OK, OK.

16:23.000 --> 16:25.000
Linode.com slash coder.

16:25.000 --> 16:30.000
Go there to get one hundred dollars in 60 day credit on a new account and you go there to support this here show.

16:30.000 --> 16:32.000
Linode's where I host everything.

16:32.000 --> 16:35.000
If it runs on Linux, it runs on Linode.

16:35.000 --> 16:43.000
But with their powerful infrastructure, they started in 2003 as one of the very first companies in cloud computing.

16:43.000 --> 16:48.000
Now, 18 years later, they're the largest independent open cloud provider in the world.

16:48.000 --> 16:54.000
And they have 11 global data centers, certainly nearly a million customers around the globe.

16:54.000 --> 17:00.000
And they stayed focused on making cloud computing accessible, affordable and really quite approachable.

17:00.000 --> 17:03.000
They have a best in class experience over there.

17:03.000 --> 17:09.000
And, you know, I think it's easy to rattle off a couple of things about Linode that would be really appealing to you.

17:09.000 --> 17:12.000
Performance is obviously going to be top on that list.

17:12.000 --> 17:18.000
Value, 30 to 50 percent cheaper than the hyperscalers out there that want to lock you in.

17:18.000 --> 17:22.000
Their customer support is simply just the best in the business.

17:22.000 --> 17:30.000
The flexibility that the platform gives you and how it's grown with our usage over time, like we started as very kind of basic.

17:30.000 --> 17:33.000
We want our VPS type users.

17:33.000 --> 17:42.000
And then kind of learned how we can build infrastructure now in a way that's really kind of cloud first and super performant for our users.

17:42.000 --> 17:49.000
And doesn't require just this unbelievable upfront investment by JB that, quite frankly, I could never really afford.

17:49.000 --> 17:58.000
And I still get to have things like high availability in the performance and all of the stuff that I would get if I had just built out this incredible massive infrastructure.

17:58.000 --> 18:01.000
But when I look at the way Linode set up, there's really nothing I would do differently.

18:01.000 --> 18:05.000
They've really nailed it. I really, really like the way they deploy systems.

18:05.000 --> 18:09.000
I think it's very solid. I like the way their backup mechanisms work.

18:09.000 --> 18:15.000
And I really appreciate that their dashboard is simple enough that anyone on the team here at JB can use it.

18:15.000 --> 18:17.000
And they all have different skill levels.

18:17.000 --> 18:19.000
And it still works for all of them.

18:19.000 --> 18:26.000
And then when you get in there and dig around, you see things like DDoS protection and VLAN support and their powerful DNS manager.

18:26.000 --> 18:30.000
And that's stuff that I started to use more and more over time.

18:30.000 --> 18:33.000
But that's not really how I started using Linode.

18:33.000 --> 18:35.000
And I kind of think this could be a similar journey for yourself.

18:35.000 --> 18:38.000
I go over there, take advantage of that hundred dollars.

18:38.000 --> 18:48.000
That's a statement of confidence saying from Linode that they're going to give you a real amount of money to actually truly try the service and form a real opinion.

18:48.000 --> 18:50.000
Right. So go over there and just try this stuff.

18:50.000 --> 18:54.000
And also consider maybe this could be part of a multi-cloud strategy.

18:54.000 --> 18:57.000
That's another area where Linode can be really powerful.

18:57.000 --> 19:00.000
You know, that's something that 66 percent of companies are looking at right now.

19:00.000 --> 19:03.000
And Gardner did a bit of research around this.

19:03.000 --> 19:07.000
People are becoming more and more aware of vendor lock-in.

19:07.000 --> 19:10.000
I think a lot of our listeners, they already, you guys already get this.

19:10.000 --> 19:19.000
We understand how this works a little bit more than, you know, maybe your average out of touch high level CTO exec type person that maybe doesn't follow these things.

19:19.000 --> 19:21.000
No offense to you CTOs out there.

19:21.000 --> 19:24.000
But Linode's already got their head in that space.

19:24.000 --> 19:26.000
And so I think you'd be really impressed what they have to offer.

19:26.000 --> 19:29.000
So go sign up today, try it out, support the show and get a hundred dollars.

19:29.000 --> 19:36.000
So go to linode.com slash coder to create a new account, get the credit and actually try it out.

19:36.000 --> 19:39.000
I mean, with a hundred dollars, you can form a real opinion.

19:39.000 --> 19:44.000
Linode dot com slash coder.

19:44.000 --> 19:48.000
So this is a story that got sent into the show quite a bit, and I wanted to touch on it with you.

19:48.000 --> 19:59.000
And the general bent of the emails was, are we as developers giving power to platforms like Google and Facebook by creating things that draw in users?

19:59.000 --> 20:10.000
And this is coming after 10 days ago when a New York judge revealed that there were some new prosecution filings in a multistate antitrust lawsuit against Google.

20:10.000 --> 20:13.000
And there's a ton of details that came out some of these filings.

20:13.000 --> 20:19.000
Now, these are positions of people that are going after Google, but some of it's really gnarly,

20:19.000 --> 20:29.000
including positioning amps at AMP, Google AMP as a primary way to just create huge amounts of data for Google and squeezing out other services.

20:29.000 --> 20:34.000
It looks like there was some real hanky panky going on.

20:34.000 --> 20:41.000
They had Google had Project Bernanke, which took data from publishers for ads.

20:41.000 --> 20:49.000
And they would use that data from people who were buying ads on their platform and embedding those ads, and they would boost their own services with that.

20:49.000 --> 20:58.000
Project Nara created a, quote, not owned but operated walled garden for users if they use any Google service.

20:58.000 --> 21:02.000
There was in there a project called Project Jedi.

21:02.000 --> 21:08.000
I do like that one, which was allegedly meant to freeze out independent ad exchanges by using insider knowledge.

21:08.000 --> 21:14.000
Then there was Project Jedi Blue, which is one where Google conspired with Facebook.

21:14.000 --> 21:22.000
Yeah. Yeah. To parcel out goodies between themselves and lock out privacy measures.

21:22.000 --> 21:24.000
There is one hundred and seventy three page that's been unredacted.

21:24.000 --> 21:28.000
It's a filing that I'll have linked in the show notes.

21:28.000 --> 21:33.000
And the Twitter user that kind of went through this, that kind of kicked off this whole conversation, started the thread with.

21:33.000 --> 21:38.000
I've read through all one hundred and seventy three pages of the unredacted Google antitrust filing.

21:38.000 --> 21:43.000
And I have to say that either Google is screwed or society is screwed.

21:43.000 --> 21:51.000
And we're going to find out which. So what it says in here really is that Google set up all of these things that we've all kind of speculated.

21:51.000 --> 21:57.000
We've speculated that Google did apt to squeeze out ad blockers and collect data.

21:57.000 --> 22:03.000
We speculated that maybe they were creating a walled garden with Chrome and Google log in.

22:03.000 --> 22:11.000
We theorized that they were collaborating with Facebook to shut certain things down.

22:11.000 --> 22:13.000
I like how careful you're being right now. This is nice.

22:13.000 --> 22:19.000
But now here we are. And you see this. You see these court filings and these are just allegations.

22:19.000 --> 22:22.000
But you see these court filings and it's essentially everything that we speculated here.

22:22.000 --> 22:26.000
Yeah, these things really did happen. It was as bad as we thought it was.

22:26.000 --> 22:30.000
And maybe even worse. Like it's I think faster than Lime on Twitter had it.

22:30.000 --> 22:37.000
Like if Google doesn't pay for this. Society's screwed.

22:37.000 --> 22:40.000
Yeah, they're not going to. So I just think it's so funny.

22:40.000 --> 22:45.000
I mean, I just think it's so funny that we're going after Facebook, which is insidious.

22:45.000 --> 22:50.000
Why is it a one or the other kind of situation? I mean, I know why, but it makes me sad.

22:50.000 --> 22:55.000
I think it's because Google's played ball. Google's played ball with the federal government for a long time.

22:55.000 --> 22:59.000
Well, Facebook has too, though, actually. Yeah, they both do.

22:59.000 --> 23:07.000
I go back to this. I suspect when it comes to federal investigations, Apple and Google are pretty screwed.

23:07.000 --> 23:16.000
But when it comes to media really just digging in and doing actual investigative journalism, they've turned their attention to Facebook.

23:16.000 --> 23:20.000
They set up a group of 30 journalists who are all sharing documents that have been leaked to go through it.

23:20.000 --> 23:26.000
And each different publication is running with their different threads, just like the Snowden docs.

23:26.000 --> 23:34.000
When Edward Snowden started releasing documents first through Glenn Greenwald and through The Guardian,

23:34.000 --> 23:39.000
then they started divvying it out to the different news organizations and they created this group.

23:39.000 --> 23:44.000
And they've done the same thing here. There is a there is a coalition, an actual formed coalition,

23:44.000 --> 23:51.000
a actual documented formed coalition of journalists who are all focused on exposing Facebook.

23:51.000 --> 23:56.000
Now there's about 30 of them and they work for all these different outlets.

23:56.000 --> 24:01.000
And we got email into the show saying, I'm totally wrong on this, but I don't I don't I don't think so.

24:01.000 --> 24:09.000
And I don't care what people think. I am convinced they're going after Facebook right now because Facebook is competing for ad dollars.

24:09.000 --> 24:15.000
They are a media platform that is directly competing for ad dollars. Google.

24:15.000 --> 24:22.000
Absolutely competes for ad dollars, but it isn't a medium like television.

24:22.000 --> 24:28.000
I think the TV people and the papers, they see Facebook as a competitor directly,

24:28.000 --> 24:33.000
whereas they see Google as somebody that they can probably make a little money off of down the road.

24:33.000 --> 24:38.000
They're going to make money off of Google News. They're you know, they can use AdSense like it's a platform they could take advantage of.

24:38.000 --> 24:45.000
Google's day is coming, but Facebook is more a direct competitor to what these news organizations do.

24:45.000 --> 24:51.000
And so you're you're seeing what happens when journalists actually do their job.

24:51.000 --> 24:56.000
And they actually investigate because all this has been out there going on for years at Google,

24:56.000 --> 25:01.000
just like all the docs we've seen come out about Apple with their with their recent legal cases.

25:01.000 --> 25:06.000
That's all been out there for journalists to go uncover. But they all have friendly journalists.

25:06.000 --> 25:10.000
They all have, you know, lapdog journalists that, you know, they basically don't have to worry about it.

25:10.000 --> 25:13.000
Facebook doesn't have that privilege.

25:13.000 --> 25:19.000
I actually agree with that. Right. Like there's a business interest to take out Facebook for many of the other competitors.

25:19.000 --> 25:23.000
I would just like piggybacking on that. But then I have my own thing.

25:23.000 --> 25:27.000
I would argue that Apple is like somewhat benevolent, but also definitely self-serving.

25:27.000 --> 25:32.000
Bitch slapping of the ad revenue on mobile. Oh, yeah. Is more self-serving than benevolent.

25:32.000 --> 25:38.000
Right. It's pretty clear what's up. But, you know, I like old movies and longtime listeners will know this.

25:38.000 --> 25:43.000
I like like the old detective movies, the crime movies, the mafia movies, all that kind of thing.

25:43.000 --> 25:47.000
And I forgot which one it was. Was it the Untouchables?

25:47.000 --> 25:53.000
No, because it wasn't in color. But it was, you know, you know, like classic archetype where like one brother's a priest, one brother's a gangster.

25:53.000 --> 25:57.000
It's like I'm in the 40s now. So kids sit down.

25:57.000 --> 26:02.000
The mob guy has this line where he he tells his brother, well, how come you haven't been arrested?

26:02.000 --> 26:08.000
But, you know, so-and-so, Lorenzo, whatever has. And he says, because you can do whatever you want.

26:08.000 --> 26:15.000
But there are some things you can't do. And once you do them, you're you're done.

26:15.000 --> 26:19.000
Forget about the cops. The regular people are going to turn against you.

26:19.000 --> 26:25.000
Facebook, I would argue, whether you like it or not, has done and whether you think it's rational or not,

26:25.000 --> 26:31.000
has done lots of things that cannot be done, for instance, knowingly harming teenage girls.

26:31.000 --> 26:38.000
It's a big problem. Yeah. I know you tend to have a more rational, probably more correct attitude on the whole protect the children thing.

26:38.000 --> 26:43.000
I tend not to. I tend to be in the, you know, overreact camp.

26:43.000 --> 26:49.000
I mean, I think that I think that alone should be just like crucify them, make them honestly burn Instagram to the ground.

26:49.000 --> 26:56.000
If we came through all of this and we got some common sense regulation that said you got to be 18 years or older to use social media,

26:56.000 --> 27:02.000
I don't think I'd have a problem with that. Well, the other thing is I have many cousins and many relatives who are not 13.

27:02.000 --> 27:06.000
But, you know, all you have to do is say that you're 14 or 13 and you can use it.

27:06.000 --> 27:11.000
So I have my son's Gmail inbox added to my, you know, my browser.

27:11.000 --> 27:17.000
And he started getting tick tock emails, not that he checks his email, but he started getting tick tock emails, inviting him to tick tock.

27:17.000 --> 27:21.000
I don't think kids should be on social media, period. I don't think they should be at all.

27:21.000 --> 27:26.000
I think Facebook is boy, it's a real dichotomy. It's it's a lot of bad stuff.

27:26.000 --> 27:31.000
And if they've done a lot of bad things. But, you know, in our parents age,

27:31.000 --> 27:37.000
there were companies that were trying to sell cigarettes to to people that they knew were killing them.

27:37.000 --> 27:40.000
And they were still trying to sell them like there have been a lot of bad companies.

27:40.000 --> 27:45.000
They got slapped down. If you think of the tobacco companies, I don't know if it's a direct analogy, but I think that's what we're starting to see.

27:45.000 --> 27:50.000
And I think just Facebook, because they're the biggest social media platform, they're the first in line.

27:50.000 --> 27:59.000
But I think what we cannot under underappreciate is the media part in there in that social media.

27:59.000 --> 28:02.000
They are a media platform and that's why they're first. Absolutely.

28:02.000 --> 28:06.000
So what do you think about the general thrust of the emails that came in that said.

28:06.000 --> 28:14.000
By releasing apps on the Play Store or by taking advantage of Facebook ads, you're enabling these horrible companies,

28:14.000 --> 28:22.000
you're kind of you're giving them value. You are spending your time in your life adding value to Google or to Facebook.

28:22.000 --> 28:26.000
Well, since we're in old movies right now, I'm going to the untouchables from the 90s.

28:26.000 --> 28:30.000
Sean Connery's character. You can't be the only clean cop in the city.

28:30.000 --> 28:42.000
If all your competitors are taking advantage of social media advertising or of, you know, using Google's whatever magical search tools that you need for your app, whatever Firebase.

28:42.000 --> 28:47.000
I know lots of people who hate Google and use fire or use or used Firebase.

28:47.000 --> 28:50.000
You can't put yourself out. You can't unilaterally disarm.

28:50.000 --> 28:52.000
And I know there's open source alternatives, blah, blah, blah.

28:52.000 --> 28:57.000
But you're not going to get, you know, Joe Blow, who you want to sell something to, to sign up for Mattermost.

28:57.000 --> 29:02.000
It's just not happening. Well, and I wasn't going to go here, but this is actually where I've been personally struggling with.

29:02.000 --> 29:10.000
This is Facebook and Google, obviously, make a lot of really important open source contributions.

29:10.000 --> 29:17.000
My beloved ButterFest that I think is our only hope for a competitive workstation file system for Linux.

29:17.000 --> 29:19.000
ButterFest, you're my only hope.

29:19.000 --> 29:21.000
It's been made great again by Facebook.

29:21.000 --> 29:32.000
You know, like it's directly because Facebook is using it in production on tens of thousands of servers and they've hired like one of the lead ButterFest developers full time to work on it.

29:32.000 --> 29:37.000
And that has turned the file system around in the last five years.

29:37.000 --> 29:39.000
And that's just one of many contributions.

29:39.000 --> 29:41.000
Amazon does, too. It's tricky.

29:41.000 --> 29:55.000
If you are a PHP advocate slash developer and you really care about that, like as part of your identity, PHP, you kind of should like Facebook, at least their engineering team, because they have done a lot to get to make PHP still relevant.

29:55.000 --> 29:58.000
I just I'm just going to throw it out there, the hip hop VM, right?

29:58.000 --> 30:05.000
I'm trying to figure out a way to be grateful and comfortable with the engineers that work there.

30:05.000 --> 30:16.000
Well, disapproving of the outcome of the company, sort of like I have respect for the American people, but I'm very upset at the government and what its decisions it's made.

30:16.000 --> 30:20.000
I don't fault all of the American people completely, but yet at the same time, they are the ones that voted.

30:20.000 --> 30:22.000
So they there's a problem there.

30:22.000 --> 30:29.000
But like if Facebook were to dissolve tomorrow, what you'd have is a bunch of really great engineers that would just sort of disperse into the marketplace.

30:29.000 --> 30:38.000
I just want to say we're getting like dangerously close to like the Oppenheimer problem, right? The not the Nazi scientist problem, like great scientists, brilliant, awesome engineering.

30:38.000 --> 30:40.000
Too bad he did horrible things with it.

30:40.000 --> 30:43.000
But can we look and historically we have looked the other way, right?

30:43.000 --> 30:46.000
We've been like the Oppenheimer problem. Another somebody to make that a title.

30:46.000 --> 30:49.000
I'm trademarking that. Thank you.

30:49.000 --> 30:51.000
Yeah, that's interesting.

30:51.000 --> 31:01.000
Yeah. And that's a real thing that I struggle with, because a lot of the software I use is enabled by these very companies that I think in some ways do harm society.

31:01.000 --> 31:05.000
That is where I think about it, too, when these people are asking the questions via email.

31:05.000 --> 31:07.000
Coder dot show slash contact.

31:07.000 --> 31:13.000
I have that sort of same philosophy. It's sort of it's sort of like there's good things about publishing on YouTube like JB does.

31:13.000 --> 31:16.000
Right. But there's also bad things about it.

31:16.000 --> 31:22.000
And so I try to strike the right balance that I think is appropriate for the JB company, for my company.

31:22.000 --> 31:28.000
They own the roads, you know, and when we built the information superhighway, we privatized the roads.

31:28.000 --> 31:31.000
Standard rail, baby. Standard rail.

31:31.000 --> 31:35.000
Hey, how about a little Ruby async check in? I smell a little async in the air.

31:35.000 --> 31:41.000
Yeah. So I'll keep this relatively quick. I know Ruby is not our biggest, you know, demographically language here.

31:41.000 --> 31:48.000
But yeah, Ruby is getting an async gem, which it's not just some, you know, random third party gem from the bayou here.

31:48.000 --> 31:54.000
This is something that Matt, the creator of Ruby, actually invited to be part of the standard library.

31:54.000 --> 31:56.000
Are you technically considered in the bayou?

31:56.000 --> 32:00.000
No, I'm in the swamps. OK, swamps. OK, so bayou would be like Louisiana.

32:00.000 --> 32:04.000
Yeah, OK. Although I do have gator meat in my freezer. So who the hell knows what I'm doing?

32:04.000 --> 32:10.000
Have you had that before? Oh, yeah. I've had it very sparingly when I went to a special restaurant.

32:10.000 --> 32:13.000
But did you like it? Well, the way it was prepared, it was delicious, actually.

32:13.000 --> 32:17.000
Yeah, it's like a creamier chicken, usually, if it's done right. Wow.

32:17.000 --> 32:19.000
It shouldn't it shouldn't be astringent or like stringy.

32:19.000 --> 32:24.000
So now I just feel like I learned something new about you today.

32:24.000 --> 32:29.000
I've been down here a long time now. I've gone native.

32:29.000 --> 32:34.000
So anyway, asynchronous programming in Ruby. Right. So, yeah, this is interesting.

32:34.000 --> 32:38.000
It takes a different approach from, let's say, Python async.

32:38.000 --> 32:44.000
It uses the Ruby block pattern, which Ruby block is very similar to what you think a C block is.

32:44.000 --> 32:48.000
You know, it indents pass in the code.

32:48.000 --> 32:51.000
Huzzah. There's some magic going on behind the scene.

32:51.000 --> 32:56.000
There are helper libraries you could add to it. You could add a wait or async await.

32:56.000 --> 33:00.000
You can do a Redis. There's a Redis gem that you can tack on.

33:00.000 --> 33:07.000
But really, the meat and potatoes here is the async Ruby gem, which depending on, I guess, negotiation.

33:07.000 --> 33:14.000
Discussions, discussions, whatever between the standard library team and the folks who wrote this library may be part of the standard library,

33:14.000 --> 33:18.000
meaning you won't even have to require it or import it or anything.

33:18.000 --> 33:23.000
Other big thing going along with this async programming goodness is Ruby fibers.

33:23.000 --> 33:28.000
Now, this is going to be a gross oversimplification because it's Ruby.

33:28.000 --> 33:31.000
And I know a lot of you don't care.

33:31.000 --> 33:36.000
This is a quote from the documentation of fibers, simply an independent execution context that can be paused and resume programmatically.

33:36.000 --> 33:40.000
Doesn't that sound a lot like maybe a thread?

33:40.000 --> 33:44.000
And that's basically what they are. They are. And I know that's technically not correct.

33:44.000 --> 33:47.000
They may run on your main thread. It figures it out by itself.

33:47.000 --> 33:54.000
But the quick and dirty definition for like a working definition to talk at the pub is it is an abstraction on threads.

33:54.000 --> 34:00.000
The kind of the killer feature here is why you would use this set of threads is it has a transfer method,

34:00.000 --> 34:05.000
which makes it easy to transfer data safely from one fiber to another.

34:05.000 --> 34:11.000
Anybody who's done manual threading knows that passing data from one thread to another is where things can go wacky.

34:11.000 --> 34:17.000
I think this is a great feat of engineering. We're going to Oppenheimer this and I think it shouldn't exist.

34:17.000 --> 34:22.000
Really? Yeah. And I think it's one of those things that has been sort of neglected.

34:22.000 --> 34:27.000
So I think it was introduced in Ruby 1.9, but they're like breathing new life.

34:27.000 --> 34:31.000
And then now with async, too, I think there's some potential there.

34:31.000 --> 34:39.000
I think the ball, I don't know if I'm making a tortured analogy here, but I think the snowball has just begun to roll again.

34:39.000 --> 34:46.000
I'm sorry. Ruby needs to compete with, frankly, Python. I could see great uses for fibers.

34:46.000 --> 34:51.000
I can also see a bunch of, let's say, less experienced developers.

34:51.000 --> 34:56.000
We used to have a word for them. It began with an N, had two zeros in it, a B and a five or an S,

34:56.000 --> 34:59.000
depending on your particular levels of 90s hatred.

34:59.000 --> 35:03.000
And you're so elite. Exactly. One, three, three, seven forever.

35:03.000 --> 35:07.000
I can see this blowing up many, many projects because people do stupid things with them.

35:07.000 --> 35:12.000
Fair. And I suppose that is a risk for Ruby. But I like the Unix philosophy here.

35:12.000 --> 35:17.000
It's like you give the user the power to hurt themselves, but at the same time, they can also build what they need.

35:17.000 --> 35:20.000
It's like it's a double edged sword. You can't have one without the other.

35:20.000 --> 35:24.000
It seems like a pretty legit thing, but it's just when you frame it in that context.

35:24.000 --> 35:29.000
Yeah, I could see how it's a downside, but I just don't know if that's a big enough use case like the new user.

35:29.000 --> 35:34.000
It needs to be considered, though, but I don't know if it should should it hinder a powerful feature.

35:34.000 --> 35:42.000
Well, my concern is that some blogger with a gold MacBook is going to sit under a cherry blossom tree

35:42.000 --> 35:46.000
and run a blog post about how everything you should do should be in a fiber.

35:46.000 --> 35:53.000
Yeah. Which not only is that incorrect, but that will definitely bog down what is already a pretty slow programming language.

35:53.000 --> 36:03.000
And I know I know a lot of performance enhancements and I'm a Ruby fan, but I would be more excited about something like a new framework to make Ruby more relevant.

36:03.000 --> 36:08.000
In spaces where, frankly, Python marketer wise is kicking its ass.

36:08.000 --> 36:13.000
But that's just me. A ban. A legit async implementation.

36:13.000 --> 36:17.000
Yeah. Oh, I like I like the async. I'm down with async. That's huge, right? That's big.

36:17.000 --> 36:20.000
I like the async. I think that should go into standard lib. Yeah.

36:20.000 --> 36:24.000
And the way they do it, I think is very smart, having it done in blocks.

36:24.000 --> 36:31.000
The fiber thing, it's it's just easy enough that I think junior developers will overuse it.

36:31.000 --> 36:39.000
And I know I just know there's a hipster with a knit hat ready to write a blog post that's going to torture me for the next five years.

36:39.000 --> 36:45.000
You know, we were talking on the pre show because we stream the show live on Mondays and.

36:45.000 --> 36:53.000
Roblox was down for three days, they went down on the 27th and I don't think they got back up until the 30th and.

36:53.000 --> 36:59.000
It reminded me to recently remember when Facebook was down for like 24 hours or whatever it was.

36:59.000 --> 37:06.000
You find out afterwards because I was reading the sort of the first pass at a postmortem that Roblox had.

37:06.000 --> 37:12.000
You find out afterwards that like the tools they've built themselves broke because they depended on some fundamentals.

37:12.000 --> 37:18.000
They have some assumptions like name services would always be available. DHCP might always be available.

37:18.000 --> 37:28.000
And they ended up spending at least a day just fixing their tooling, just fixing the tools they built.

37:28.000 --> 37:32.000
So that way they could redeploy their infrastructure and get things back online again.

37:32.000 --> 37:43.000
And so, you know, I think your points well taken that if you give somebody a tool that can be used improperly and expect them to have enough experience to know better.

37:43.000 --> 37:51.000
Well, even in some seriously high production, high volume, really lots of money on the line kind of instances.

37:51.000 --> 37:57.000
People are building these things in a way where they're just devastated when there's some sort of fundamental assumption that works out to be incorrect.

37:57.000 --> 38:05.000
And these kind of things are the kind of problem that can exist for like a couple of years until you hit some sort of critical phase or critical mass and then just blow up.

38:05.000 --> 38:12.000
That's exactly what happened with Roblox. They said it was it wasn't necessarily actually even user scale.

38:12.000 --> 38:19.000
Although I think they do have a pretty impressive amount of active users, but it was scaling out of servers.

38:19.000 --> 38:27.000
And as they added more servers, some of the tooling they'd built themselves around communication started to fail.

38:27.000 --> 38:36.000
And then it just sort of created this load effect from that, which then kind of created this DDoS effect, which then just sort of broke everything.

38:36.000 --> 38:46.000
And, you know, you remember with the Facebook guys and gals, they couldn't even badge in their system was so broken, they they couldn't get the doors open.

38:46.000 --> 38:55.000
It's always DNS, even when it's not. I still blame DNS. DNS and BGP. They're always going to get you.

38:55.000 --> 39:02.000
OK, so I think Mac OS has lapped, I have to say, Linux in a really embarrassing way.

39:02.000 --> 39:12.000
And I think it's a fundamental workstation feature that makes these things stable machines for developers and for admins and content creators.

39:12.000 --> 39:17.000
It's actually something that's file system related, and that's why it really gets me.

39:17.000 --> 39:21.000
Because we've had great file systems on Linux for a while.

39:21.000 --> 39:34.000
And Mac OS rode that HFS train for so long, way longer than they should have in a modern MVME powered Mac era.

39:34.000 --> 39:42.000
And then like little file system ninjas in the middle of the night or sand as else.

39:42.000 --> 39:48.000
When you updated Mac OS, they swapped you over to APFS, but they didn't do a lot with it.

39:48.000 --> 39:51.000
They didn't do much. In fact, it was it was a boring implementation.

39:51.000 --> 39:57.000
But you could see the features and capabilities of APFS and you could see where maybe Apple would go with it.

39:57.000 --> 40:03.000
This is a couple of years ago, three years ago. But Linux didn't really do much.

40:03.000 --> 40:11.000
We had one major leap forward. The Fedora distribution switched their default file system over to ButterFS.

40:11.000 --> 40:20.000
And the reason why this matters is because this gives you, first of all, a file system that's built with SSD and MVME storage in mind.

40:20.000 --> 40:30.000
It gives you the ability to copy files on write. It gives you the capability to check some files, encrypt files, compress files, create volumes.

40:30.000 --> 40:34.000
It's a modern way where maybe you might not even directly interact with it.

40:34.000 --> 40:43.000
But the operating system tooling can use these file system features to create a bulletproof workstation experience.

40:43.000 --> 40:47.000
Back to Fedora, they've been experimenting with something called Silverblue.

40:47.000 --> 40:53.000
Which is an attempt to create a really solid Linux workstation that has safe updates.

40:53.000 --> 40:59.000
Applications are in a different space, kind of operates more like our cell phones do.

40:59.000 --> 41:08.000
Well, in macOS Monterey, Apple has made a transition like this, even though Linux had years to figure this out.

41:08.000 --> 41:16.000
It started in Catalina, Big Sur brought it forward, and Monterey has now finished the job.

41:16.000 --> 41:22.000
And what it is, is they, while you're installing Monterey, re-slice up your hard drive like a maniac.

41:22.000 --> 41:29.000
And they segregate the contents of the system files, which don't change, except during a macOS update.

41:29.000 --> 41:34.000
And they separate that out from anything else on your system that does change.

41:34.000 --> 41:41.000
Then they start running the system off of immutable snapshots.

41:41.000 --> 41:50.000
So when the system boots, it's actually booting from a snapshot that the operating system doesn't actually have the capability to modify.

41:50.000 --> 41:52.000
It's not even that it's read-only.

41:52.000 --> 42:00.000
It's that Apple did not build the ability for the operating system to make modifications to that system volume.

42:00.000 --> 42:02.000
And it's powerful.

42:02.000 --> 42:08.000
And what Apple does now, starting with Monterey, is when they download an OS update,

42:08.000 --> 42:12.000
they unmount the data volume and they unmount the system volume,

42:12.000 --> 42:17.000
so that way there's no way for the update to cause any problems at all.

42:17.000 --> 42:23.000
They perform the update, they run a series of checksums, and then they switch the snapshots over.

42:23.000 --> 42:28.000
So you have your running system snapshot, and now you have the new environment that's been updated.

42:28.000 --> 42:30.000
And then they boot from that.

42:30.000 --> 42:34.000
And if there's a problem, they can boot from the old snapshot environment.

42:34.000 --> 42:38.000
And they've done all of this in the background while you're updating your Mac to Monterey,

42:38.000 --> 42:42.000
thinking about, I don't know what, there's hardly any new features.

42:42.000 --> 42:48.000
It's an impressive step towards creating a bulletproof Mac OS install.

42:48.000 --> 42:52.000
And now it gives you, like the first way it's really noticeable by users,

42:52.000 --> 42:55.000
is it has that Chrome Power Wash feature now,

42:55.000 --> 43:00.000
where you can go in there and you can delete the OS and reinstall the OS,

43:00.000 --> 43:04.000
and all of your data remains, applications remain.

43:04.000 --> 43:09.000
It's a really advanced workstation thing that I think Linux will get to,

43:09.000 --> 43:13.000
but doesn't have yet unless you set it up yourself.

43:13.000 --> 43:18.000
And it is something you could set up with ButterFS or ZFS or LVM and maybe XFS.

43:18.000 --> 43:20.000
I don't know, you're crazy.

43:20.000 --> 43:22.000
But it doesn't work this cleanly.

43:22.000 --> 43:26.000
It wouldn't necessarily be integrated into the OS Update Manager like this is.

43:26.000 --> 43:30.000
It wouldn't necessarily be integrated into the bootloader like this is.

43:30.000 --> 43:36.000
And of course, this is cryptographically verified using Apple's suite of tools to do that.

43:36.000 --> 43:40.000
It's a really impressive layout.

43:40.000 --> 43:46.000
And you can visualize it with a link that I'll have in the show notes to see how Apple has done this.

43:46.000 --> 43:51.000
And I'm a little envious as a Linux user because I feel like we have all the fundamentals to do this and more.

43:51.000 --> 43:56.000
But there's just nobody that's really orchestrating that kind of thing.

43:56.000 --> 43:57.000
Fedora may get there.

43:57.000 --> 43:59.000
OpenSUSE may get there.

43:59.000 --> 44:02.000
Canonical is working on it with Ubuntu and ZFS.

44:02.000 --> 44:07.000
These distributions, it's possible to do snapshots when you install your packages and boot from different volumes.

44:07.000 --> 44:09.000
They're all working on it.

44:09.000 --> 44:12.000
But they're not all to the finish line yet.

44:12.000 --> 44:15.000
In fact, none of them are really at the finish line by my definition.

44:15.000 --> 44:20.000
And meanwhile, not only did Apple roll out a file system just flawlessly,

44:20.000 --> 44:26.000
where in Linux it's still a fragmented mess of ButterFS and Extended4 and Extended3 and everything else.

44:26.000 --> 44:31.000
But now over three different OS iterations, they've completely restructured the file system.

44:31.000 --> 44:34.000
And they've done it in a way that's super transparent.

44:34.000 --> 44:39.000
For example, the applications folder in Monterey is a lie.

44:39.000 --> 44:41.000
It's a lie.

44:41.000 --> 44:44.000
When you double click on the applications folder in Mac OS 12 Monterey,

44:44.000 --> 44:51.000
it is a mount of two different folders, the one from the system partition that is unmodifiable.

44:51.000 --> 44:55.000
And it overlays the one from your data partition.

44:55.000 --> 44:57.000
And it shows it in there like it's all one.

44:57.000 --> 45:03.000
And you never it never essentially as far as that layer of the operating system is concerned, it is one folder.

45:03.000 --> 45:07.000
But under the hood, they have this new linking term they're using.

45:07.000 --> 45:10.000
And I can't remember the term, but it's not like a symbolic link.

45:10.000 --> 45:14.000
It's they have some other term ports in the article I've linked in the show notes.

45:14.000 --> 45:18.000
And they're using that to fake out this application folder.

45:18.000 --> 45:21.000
It creates the illusion of a single folder.

45:21.000 --> 45:24.000
It's really clever.

45:24.000 --> 45:30.000
And it means that like if you're the if you're the family tech support person or something like that,

45:30.000 --> 45:34.000
you can go there and wipe somebody's computer, not worry about losing their apps and their data.

45:34.000 --> 45:40.000
In truth, I haven't tried Monterey yet, but I am already running a PFS Apple file system.

45:40.000 --> 45:42.000
It's fine. Works great.

45:42.000 --> 45:49.000
I mean, really, you know, you don't even really notice as a as just using the system.

45:49.000 --> 45:53.000
And perhaps that's maybe just a nod to their integration level, I suppose.

45:53.000 --> 45:58.000
The fact that they can do these they can do these things and you wouldn't know unless you read about it.

45:58.000 --> 46:02.000
There's a couple other things that I think make Monterey a pretty nice workstation.

46:02.000 --> 46:06.000
And by the way, this isn't me saying one's better than anything else.

46:06.000 --> 46:10.000
I just had a chance to give it a go and given you my report.

46:10.000 --> 46:13.000
It's nice to see low power mode land in Mac OS.

46:13.000 --> 46:15.000
It's about damn time.

46:15.000 --> 46:20.000
It makes a big difference on M1 hardware, but it does make some difference on Intel hardware.

46:20.000 --> 46:26.000
And what I don't know for sure yet, but what I'd love to see maybe somebody knows is.

46:26.000 --> 46:30.000
Some sort of API that apps could check with with Mac OS and ask, are you in low power mode?

46:30.000 --> 46:32.000
It's probably there some sort of framework or something.

46:32.000 --> 46:37.000
So apps could know maybe they should shut up when they're on low power mode.

46:37.000 --> 46:40.000
There's a little bit of more window management added.

46:40.000 --> 46:43.000
I mentioned this, which is nice to see this in Monterey.

46:43.000 --> 46:52.000
You can drag a window and say maybe you bring it from a really large monitor onto a small monitor or vice versa.

46:52.000 --> 46:56.000
Monterey will now appropriately resize it so it fits on the screen automatically.

46:56.000 --> 47:02.000
But additionally, there's now some more clicking and holding options on the green little.

47:02.000 --> 47:06.000
Maximize button, whatever they call it, the green stoplight.

47:06.000 --> 47:08.000
And now you have additional options in there.

47:08.000 --> 47:13.000
They started doing this before, but Monterey, you can now start managing split view from there.

47:13.000 --> 47:14.000
You can take over full screen.

47:14.000 --> 47:16.000
There's several options they've added.

47:16.000 --> 47:17.000
It's still pitiful.

47:17.000 --> 47:21.000
Still really requires an app like magnet to make it to make it work.

47:21.000 --> 47:23.000
But in short, you know, I'll just sum it up.

47:23.000 --> 47:29.000
I got the nice, the bad and the ugly for you in the nice to see.

47:29.000 --> 47:35.000
It's nice to see that Apple is trying to add as many feature parity as they can with iOS as they add features to iOS.

47:35.000 --> 47:37.000
So you got Airplay to Mac now.

47:37.000 --> 47:40.000
They've added variable refresh rate display support.

47:40.000 --> 47:42.000
Live text and photos is here.

47:42.000 --> 47:45.000
Finder can finally resume file copies.

47:45.000 --> 47:46.000
That's nice.

47:46.000 --> 47:52.000
The if I don't know how many people out there use this, but if you're primarily a Linux user, this is a really handy tool and finder.

47:52.000 --> 47:55.000
The go to folder command just looks better.

47:55.000 --> 47:56.000
It's faster.

47:56.000 --> 48:00.000
And now they support auto completing of passing like you can in the terminal.

48:00.000 --> 48:04.000
And that just brings up the gooey file manager to that spot on the file system.

48:04.000 --> 48:05.000
All right. That's the nice stuff.

48:05.000 --> 48:07.000
But here's the bad stuff.

48:07.000 --> 48:09.000
Some just not done yet.

48:09.000 --> 48:11.000
Universal Control's not there.

48:11.000 --> 48:13.000
There's features. It just feels like it's not finished.

48:13.000 --> 48:15.000
It's sort of surprising in that way.

48:15.000 --> 48:21.000
It's probably one of the most low key upgrades I've ever done on a Mac.

48:21.000 --> 48:26.000
I did an upgrade if they hadn't changed the background, which they change on you.

48:26.000 --> 48:29.000
I probably wouldn't even been able to tell you if it upgraded or not.

48:29.000 --> 48:33.000
They've ported Automator to work with the Automator workflow.

48:33.000 --> 48:37.000
They've tried that, you know, to import them to shortcuts because shortcuts is new in here.

48:37.000 --> 48:39.000
The shortcuts app is crazy bad.

48:39.000 --> 48:41.000
I don't know what Apple's doing with that.

48:41.000 --> 48:44.000
It looks like an electron app.

48:44.000 --> 48:45.000
It's just it's horrible.

48:45.000 --> 48:47.000
And here's the really bad stuff.

48:47.000 --> 48:49.000
Intel Macs are getting the shaft big time.

48:49.000 --> 48:54.000
I had an old old crusty MacBook that's now off the list.

48:54.000 --> 48:58.000
And some of these features are Apple Silicon only now.

48:58.000 --> 49:00.000
And it's kind of like, geez, really?

49:00.000 --> 49:03.000
Is the first OS after you announced it? OK.

49:03.000 --> 49:08.000
Also, notifications are still a damn disaster on Mac OS.

49:08.000 --> 49:11.000
Focus mode support helps reduce the noise.

49:11.000 --> 49:14.000
But my God, Apple, what are you doing with notifications?

49:14.000 --> 49:17.000
Go look at how plasma handles notifications, Apple.

49:17.000 --> 49:21.000
And then I don't know what the hell's going on here.

49:21.000 --> 49:24.000
Maybe the original developer, God bless, maybe they died.

49:24.000 --> 49:30.000
But terminal. It's the same from the early versions of Mac OS.

49:30.000 --> 49:32.000
I can't believe how bad Apple's terminal is.

49:32.000 --> 49:37.000
Microsoft has just schooled Apple on how to do a better terminal.

49:37.000 --> 49:43.000
And every single Linux desktop environment has a better terminal than the terminal that ships with Mac OS.

49:43.000 --> 49:49.000
And it's just like, dammit, Apple, that application terminal dot app, it sells Macs.

49:49.000 --> 49:54.000
It sells Macs. And it's like one of the worst apps on the OS.

49:54.000 --> 49:58.000
It's gotten some updates since the early versions of Mac OS.

49:58.000 --> 50:04.000
I kid. It legitimately has gotten some improvements, but it's an immediate upgrade to install iTerm.

50:04.000 --> 50:08.000
So I don't know why they don't give any effort at all to the terminal.

50:08.000 --> 50:11.000
It seems like it'd be a pretty low key project.

50:11.000 --> 50:13.000
They have a lot they could do.

50:13.000 --> 50:18.000
So even just putting somebody on it for a release cycle would make a huge difference.

50:18.000 --> 50:27.000
And then, of course, the other thing in the ugly section for my review is that some older Macs have been bricked after installing Monterey.

50:27.000 --> 50:30.000
So if you got a really old Mac, it might be worth holding off for a bit.

50:30.000 --> 50:34.000
But if you have a, you know, a new ish, you know, back to like.

50:34.000 --> 50:38.000
Twenty seventeen forward. It's a pretty easy upgrade.

50:38.000 --> 50:42.000
I installed it and everything's working fine. No, no compatibility issues.

50:42.000 --> 50:44.000
It wasn't a big deal.

50:44.000 --> 50:49.000
And, you know, I would do it alone for the finder improvements, to be honest with you, because there's several other things in there that are nice to have.

50:49.000 --> 50:54.000
Just be warned that because it has airplay now, it takes over Port 5000 on your Mac.

50:54.000 --> 51:00.000
So if you've got stuff running on Port 5000, you can go into the system preferences and turn off airplay format.

51:00.000 --> 51:04.000
Rap, really? Yeah. I do run stuff on 5000 all the time.

51:04.000 --> 51:08.000
Yeah, it's a thing. You know, there's that kind of stuff that comes along when they add these new features.

51:08.000 --> 51:11.000
I get the idea. I like the idea of having airplay on the Macs.

51:11.000 --> 51:14.000
You can send stuff to it seems kind of weird that they haven't had that.

51:14.000 --> 51:28.000
But I think that, you know, I've criticized Apple in years past for the early 2017 MacBooks that had the bad keyboard and just two ports and for not adding decent workstation features to Mac OS.

51:28.000 --> 51:31.000
And I really think they need up their terminal game.

51:31.000 --> 51:34.000
I think they could expose more of these file systems and finder.

51:34.000 --> 51:38.000
You know, wouldn't it be great if you could just right click on a file and say restore previous version?

51:38.000 --> 51:47.000
Why not? But I am also impressed with what you do get in the end is a pretty balanced system now that especially on M1 hardware.

51:47.000 --> 51:50.000
Really gets the most out of the hardware.

51:50.000 --> 51:57.000
For the most part, stays out of your way most the time and has a lot of really nice quality of life features.

51:57.000 --> 52:05.000
And it's backed by a pretty sound file system architecture that's going to keep your data as safe as that hardware can possibly keep it safe.

52:05.000 --> 52:10.000
You know, beyond hardware failure, the way they've architected that thing is really, really impressive.

52:10.000 --> 52:17.000
So I think actually moderate overall because it's not abrasive to upgrade to is actually one of the better releases in a while.

52:17.000 --> 52:21.000
And I look towards the Linux desktop.

52:21.000 --> 52:26.000
I always after I do these kinds of things and think, OK, what of this what I pull forward to Linux.

52:26.000 --> 52:30.000
And I think the file system architecture is definitely one of them.

52:30.000 --> 52:36.000
I think this low power mode, which we're kind of getting that in GNOME 41 and GNOME 40.

52:36.000 --> 52:43.000
But I think, you know, something more more system wide, those kinds of things would be really great to see come over to Linux desktop.

52:43.000 --> 52:54.000
And I just think that overall, if you're getting yourself one of these new Macs and you're going to be running Mac OS on it, I think I think it's going to be moderate is going to be a good release.

52:54.000 --> 53:02.000
And I would imagine you throw on your favorite virtualization tool on there and you can run some some pretty nice VMs, just they have to be ARM based VMs is the only thing.

53:02.000 --> 53:07.000
So that's kind of the thing about it. So you're going to try it or you're going to wait a while.

53:07.000 --> 53:10.000
I'm probably going to wait a few weeks. I think it's probably smart.

53:10.000 --> 53:16.000
I mean, there's no reason if there's nothing I wanted to give it a shot because I wanted to play around with the new file system stuff.

53:16.000 --> 53:19.000
And I figured we'll give it a go.

53:19.000 --> 53:26.000
I don't really have any like critical workloads on the Mac. So if something breaks, it doesn't really ruin my day.

53:26.000 --> 53:31.000
But that said, I also upgrade with abandon them on the systems that are absolutely critical to my workflow.

53:31.000 --> 53:36.000
I'm just that kind of person. Should probably wrap it up. But I want to say thanks to our members.

53:36.000 --> 53:40.000
You do have that new quarterly and you can go to Coder dot QA to sports.

53:40.000 --> 53:43.000
We did have a few people sign up last week. Hello, new members.

53:43.000 --> 53:49.000
You support the show. You get a limited ad feed. And of course, you do get that Coderly quarterly report.

53:49.000 --> 53:53.000
Coder QA dot co. You can become part of our QA team.

53:53.000 --> 53:57.000
Mr. Dominic, is there anywhere you want to send people? Yeah. Check out Alice at Alice Dot Dev.

53:57.000 --> 54:01.000
Hell, yeah. Go check out Alice and go find Mike on Twitter, too.

54:01.000 --> 54:06.000
At Dumanuco, the company's at the Mad Botter Inc. I'm over on the Twitter at Chris Ellis.

54:06.000 --> 54:10.000
And the podcast network is at Jupiter Signal and the show. Yeah, that's there, too.

54:10.000 --> 54:14.000
At Coder Radio Show, you find out about like, you know, releases and whatnot.

54:14.000 --> 54:18.000
And we do the show live. We do it on Mondays at noon Pacific, 3 p.m.

54:18.000 --> 54:24.000
Eastern at J.B. Life dot TV. Links to what we talked about today are at Coder dot show slash.

54:24.000 --> 54:27.000
What is it? Four, three, eight. That's the secret.

54:27.000 --> 54:31.000
You know, it just follows the episode numbers. Coder dot show slash episode number.

54:31.000 --> 54:36.000
So that's pretty simple, right? You can find our contact form over on our website.

54:36.000 --> 54:41.000
Also our RSS feed so you can subscribe in your choice because open podcast ecosystems rule.

54:41.000 --> 54:47.000
So you get the feed, put it in the app you like and maybe leave us a review at your favorite podcast service.

54:47.000 --> 54:49.000
If you get it that way, always helps out.

54:49.000 --> 54:52.000
Thanks so much for listening on this week's episode of the Coder Radio program.

54:52.000 --> 55:09.000
And we'll see you right back here next week.

