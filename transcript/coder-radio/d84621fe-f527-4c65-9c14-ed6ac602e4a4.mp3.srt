1
00:00:00,000 --> 00:00:07,000
This is Koda Radio, episode 360, for June 3rd, 2019.

2
00:00:31,000 --> 00:00:44,000
Hello and welcome to Koda Radio, Jupiter Broadcasting's weekly talk show that takes a pragmatic look at the art and business of software development and related technologies.

3
00:00:44,000 --> 00:00:56,000
My name is Wes, and I'm pleased to be joined on this day of WWDC by the one, the only, Mr. Michael Dominic, who I know is all riled up. Welcome, Mike.

4
00:00:56,000 --> 00:01:00,000
Thank you, Wes. I am. And how are you on this holiest of days in the year?

5
00:01:00,000 --> 00:01:08,000
You know, actually, I'm doing great. WWDC has been a lot of fun to watch. I mean, it's still going on right now as we're live.

6
00:01:08,000 --> 00:01:09,000
That's right.

7
00:01:09,000 --> 00:01:19,000
So we're missing a bit of it. But as I was preparing for today's show, I got to tune in. And while I do not currently own any Apple devices whatsoever, it's still just kind of fascinating.

8
00:01:19,000 --> 00:01:24,000
It shows a lot about like the state of the industry and then where they're going. Plus, they've had some big announcements today.

9
00:01:24,000 --> 00:01:28,000
Oh, yeah. Big as in huge.

10
00:01:28,000 --> 00:01:35,000
But before we get there, I mean, there's some other stuff to cover. We don't want that to eat the whole darn show today. Of course not.

11
00:01:35,000 --> 00:01:48,000
And before any of that news came out, I noticed from some of your tweets, I've inferred that you've kind of been struggling with the machine of yours that we're all a little disappointed you've had to fight so much with.

12
00:01:48,000 --> 00:02:02,000
Yeah, so sadness. If you check out DominicM.com, and I'll throw it in the doc, you'll see that I have been battling my System76 Thalios, fairly aggressive fan noise.

13
00:02:02,000 --> 00:02:12,000
And when I say aggressive, you know, I got to the point of downloading a decibel monitor and actually like putting my hand next to the machine or like putting it on top and measuring it in all different ways.

14
00:02:12,000 --> 00:02:22,000
I was hitting the high 40s to low 50s in decibels at idle, meaning nothing running, just like sitting there on, you know, your gnome desktop.

15
00:02:22,000 --> 00:02:24,000
Oh, that is that is loud.

16
00:02:24,000 --> 00:02:29,000
Right. So all the measurements I'm going to bring out here except for one are idle.

17
00:02:29,000 --> 00:02:36,000
So not spinning up Chrome, not like doing the show, not compiling code, right? Idle.

18
00:02:36,000 --> 00:02:44,000
And it's really a shame because I like the Thalio. It's such a beautiful tower, in my opinion. I know the word is a little controversial, but I like it.

19
00:02:44,000 --> 00:02:54,000
That it was just untenable for me to use it to do the show. And basically like conference calls, which I have four or five times a week.

20
00:02:54,000 --> 00:02:57,000
Yeah, that's kind of important when you're talking to your clients and possibly employees.

21
00:02:57,000 --> 00:03:04,000
Right. So especially now that we're fully remote, it's kind of just not OK for me not to be able to get a clear call through.

22
00:03:04,000 --> 00:03:10,000
So I ended up on Reddit and a bunch of forums basically digging through this problem.

23
00:03:10,000 --> 00:03:18,000
And it turns out because my first thought is, of course, you know, I had this problem a while ago and I just ignored it because I was using the Thalio for other stuff.

24
00:03:18,000 --> 00:03:21,000
And I thought, well, maybe mine is defective. Right. Like maybe there's something weird.

25
00:03:21,000 --> 00:03:24,000
This one needs to be tweaked, whatever. That's not the case.

26
00:03:24,000 --> 00:03:27,000
Right. No, that's not the case. There's a whole pile of people complaining.

27
00:03:27,000 --> 00:03:35,000
But even positive reviews of it mentioned the fan noise. Even my original review mentioned fan noise.

28
00:03:35,000 --> 00:03:38,000
Obviously, I think some people might be able to tolerate it a little better than I can.

29
00:03:38,000 --> 00:03:42,000
Part of it is because, you know, as you know, we're working on sound quality for all the shows.

30
00:03:42,000 --> 00:03:46,000
Right. So having a giant fan behind you is not great.

31
00:03:46,000 --> 00:03:49,000
Right. And this wasn't just the level you were provided behind the scenes.

32
00:03:49,000 --> 00:03:52,000
You'd provide some samples that we were all taking a look at.

33
00:03:52,000 --> 00:03:54,000
Yeah, we were all working on it in Slack.

34
00:03:54,000 --> 00:04:00,000
And it was it was pretty remarkably like you had to do a lot even to get it to the sort of acceptable phase, honestly.

35
00:04:00,000 --> 00:04:06,000
Yeah. So I ended up having to open the case and rewire the. So there's two fans.

36
00:04:06,000 --> 00:04:09,000
Technically, there's three because there's a GPU fan, but I didn't mess with that one.

37
00:04:09,000 --> 00:04:13,000
There's an intake fan at the bottom. There's the GPU fans.

38
00:04:13,000 --> 00:04:22,000
But the two fans we care about are that intake one at the bottom of the case and the CPU fan, which is like if you're looking at it, it's like at the top back.

39
00:04:22,000 --> 00:04:25,000
Right. And it's it's it's a CPU fan that you would expect to see.

40
00:04:25,000 --> 00:04:30,000
Right. So I'm very easy to open up. They did that really well.

41
00:04:30,000 --> 00:04:33,000
The hand screws work great. I did not have any problems.

42
00:04:33,000 --> 00:04:41,000
I ended up figuring out that for whatever reason, with the daughter board, that custom FOSS board that they use,

43
00:04:41,000 --> 00:04:50,000
it wasn't exactly honoring my changes in the BIOS for the fan curve, the fan speed curve, which is set fairly aggressively.

44
00:04:50,000 --> 00:04:55,000
So you could go twiddle and tweak settings in the BIOS. No observable effect.

45
00:04:55,000 --> 00:05:01,000
Which as a Mac guy, I can tell you how happy I am to be tweaking the BIOS and opening a case.

46
00:05:01,000 --> 00:05:04,000
Yeah, that's what users should have to do. Right. I'm already in a dark place.

47
00:05:04,000 --> 00:05:16,000
Right. So, you know, I figure out from reading Reddit and just like tweaking and seeing other people complaining that it looks like it's all this daughter board.

48
00:05:16,000 --> 00:05:23,000
So if I wire it to the motherboard, it being the CPU fan, I bet it will honor the BIOS settings.

49
00:05:23,000 --> 00:05:28,000
Oh, so you just sort of you just routed around. You said the daughter board, it's not working. It's driving the fan too hard.

50
00:05:28,000 --> 00:05:30,000
Let's try the actual BIOS control.

51
00:05:30,000 --> 00:05:35,000
Well, it was either that or, you know, Drew and I were going back and forth and slack talking about different fans I could buy.

52
00:05:35,000 --> 00:05:38,000
But that that's like crazy train. Right. That's.

53
00:05:38,000 --> 00:05:41,000
Yeah, that's that's even farther down the path of madness.

54
00:05:41,000 --> 00:05:43,000
Right. That's like just go buy a Mac Pro. Right.

55
00:05:43,000 --> 00:05:48,000
So I did that, which was a fairly non-involved installation.

56
00:05:48,000 --> 00:05:52,000
I mean, I don't have the there's Thaleo and Thaleo Major and I think there's one above it.

57
00:05:52,000 --> 00:05:57,000
I have the smallest case and a relatively large GPU.

58
00:05:57,000 --> 00:06:03,000
So I did have to like remove the GPU to be able to get my, you know, my hands in there and do everything.

59
00:06:03,000 --> 00:06:11,000
But you know what? Gotta love the industrial design, a lot of good cable management, the actual like hardware side of this.

60
00:06:11,000 --> 00:06:14,000
Though I don't think I should have had to do it was very easy.

61
00:06:14,000 --> 00:06:20,000
OK, so that's not it's not all bad. And if you were making some other hardware swap or upgrade, that'd be a success story.

62
00:06:20,000 --> 00:06:23,000
But you would have preferred not to have to open that thing up at all.

63
00:06:23,000 --> 00:06:29,000
Right. Like after I got it open, I noticed if I wanted to throw another SSD in here, man, would that be dirt simple.

64
00:06:29,000 --> 00:06:32,000
Like that would be the five, ten minute job. Super simple.

65
00:06:32,000 --> 00:06:38,000
But this is, you know, OK, so I wire it there, go into the BIOS and I start screen with the settings.

66
00:06:38,000 --> 00:06:46,000
And it turns out I was able to get it down to about 36 decibels, which is OK.

67
00:06:46,000 --> 00:06:50,000
It's barely acceptable, I think, for a desktop.

68
00:06:50,000 --> 00:06:57,000
The big caveat here was I did not rewire the intake fan because I was concerned about too much heat.

69
00:06:57,000 --> 00:06:59,000
Right. I only rewired the CPU fan.

70
00:06:59,000 --> 00:07:05,000
You were a little concerned. I mean, this is an expensive machine and you don't want to have it, you know, just melt down itself.

71
00:07:05,000 --> 00:07:10,000
Right. And the other thing is just like the way the cables run, the intake fan was just a lot harder to get to.

72
00:07:10,000 --> 00:07:16,000
That was going to be a much more in-depth operation there.

73
00:07:16,000 --> 00:07:20,000
So it was OK for a day or two.

74
00:07:20,000 --> 00:07:25,000
Then my wife, unbeknownst to me this morning, was cold.

75
00:07:25,000 --> 00:07:30,000
So she turned the air conditioner, because I remember Florida, so it's always like 90 degrees, right?

76
00:07:30,000 --> 00:07:32,000
So we always run central air.

77
00:07:32,000 --> 00:07:34,000
So you have AC cranked just 100 percent of the time.

78
00:07:34,000 --> 00:07:40,000
But she turned it down, meaning temperature higher, to 75 today.

79
00:07:40,000 --> 00:07:43,000
Remember, I did not touch the intake fan.

80
00:07:43,000 --> 00:07:49,000
Well, the intake fan felt the increase in temperature today and was right back up to about 45 by itself,

81
00:07:49,000 --> 00:07:53,000
even if the CPU fan didn't come on or barely came on with my new settings.

82
00:07:53,000 --> 00:07:54,000
Wow.

83
00:07:54,000 --> 00:08:00,000
So I ended up making the decision that it wasn't worth it for us to keep, us meaning you, me and Drew,

84
00:08:00,000 --> 00:08:06,000
to keep going back and forth with sample recordings, so I just disconnected the failure.

85
00:08:06,000 --> 00:08:09,000
Having said that, my fan hack does work,

86
00:08:09,000 --> 00:08:15,000
provided you are not already in a relatively hot ambient environment.

87
00:08:15,000 --> 00:08:22,000
And also, there is nothing that would stop you from rewiring the intake fan too.

88
00:08:22,000 --> 00:08:27,000
To their credit, a developer named Michael at System76 did reach out on Twitter.

89
00:08:27,000 --> 00:08:29,000
They are very aware of this issue.

90
00:08:29,000 --> 00:08:38,000
The GitHub issue is linked in the Twitter thread, and we can throw it in the show notes too.

91
00:08:38,000 --> 00:08:40,000
You know, they've known about the issue for a while.

92
00:08:40,000 --> 00:08:42,000
It is hard-coded in the Thaleo firmware.

93
00:08:42,000 --> 00:08:44,000
Oh, man, Ralph.

94
00:08:44,000 --> 00:08:49,000
There's no, like, gooey way or even, like, change a config file way to fix this.

95
00:08:49,000 --> 00:08:51,000
So would you have to, like, reflash that board or something?

96
00:08:51,000 --> 00:08:53,000
Well, they have to patch it, right?

97
00:08:53,000 --> 00:08:55,000
That's going to be the solution.

98
00:08:55,000 --> 00:08:59,000
There's also some question about, like, what is the acceptable number?

99
00:08:59,000 --> 00:09:06,000
I would openly admit that most people aren't doing podcasting and tons of conference calls on Thaleo,

100
00:09:06,000 --> 00:09:10,000
so I imagine maybe a lot of people are more tolerant than I would be.

101
00:09:10,000 --> 00:09:13,000
Yeah, if you just have it in the corner and you're trying to churn through some renders

102
00:09:13,000 --> 00:09:16,000
or, you know, compile a big code base, maybe you don't care.

103
00:09:16,000 --> 00:09:18,000
Or, like, under your desk, right?

104
00:09:18,000 --> 00:09:20,000
Like, if you don't have a carpeted floor, you could put it on the floor,

105
00:09:20,000 --> 00:09:23,000
and then you probably, you know, it's fine.

106
00:09:23,000 --> 00:09:25,000
It'll block some of the noise, at least.

107
00:09:25,000 --> 00:09:27,000
So, I don't know, right?

108
00:09:27,000 --> 00:09:31,000
Like, it is, you know, as I wrote in my post, it's a premium-priced product.

109
00:09:31,000 --> 00:09:34,000
I mean, that's not great.

110
00:09:34,000 --> 00:09:36,000
I hope they fix it.

111
00:09:36,000 --> 00:09:39,000
Right, that PR you linked to did look like they were actively investigating

112
00:09:39,000 --> 00:09:43,000
and even prepared something that might have worked for your issue.

113
00:09:43,000 --> 00:09:46,000
It's just, you know, it's not in the pipeline yet,

114
00:09:46,000 --> 00:09:49,000
and who knows when you'd actually be able to go get that applied to your machine.

115
00:09:49,000 --> 00:09:51,000
I don't even, I mean, I don't know what the, did they have,

116
00:09:51,000 --> 00:09:54,000
like, a firmware updater, so maybe it just rolls out that way?

117
00:09:54,000 --> 00:09:55,000
Yeah, I think it just rolls out.

118
00:09:55,000 --> 00:09:58,000
I think, ideally, it would roll out through the firmware updater.

119
00:09:58,000 --> 00:10:00,000
I think that's how, actually, they do it for them, all of them.

120
00:10:00,000 --> 00:10:03,000
Because there was an issue with the Galagos about a year ago

121
00:10:03,000 --> 00:10:05,000
where that's how they did it, just the firmware updater.

122
00:10:05,000 --> 00:10:06,000
Right, yeah.

123
00:10:06,000 --> 00:10:08,000
So, if they can actually get there, that'll be good,

124
00:10:08,000 --> 00:10:11,000
but it seems like it's taken a long time

125
00:10:11,000 --> 00:10:13,000
for this much information to really be available.

126
00:10:13,000 --> 00:10:17,000
And now that it's out and you can see sort of the open review process on GitHub,

127
00:10:17,000 --> 00:10:19,000
that speaks a lot to kind of the point of this board, right?

128
00:10:19,000 --> 00:10:22,000
They wanted to have this open firmware custom board

129
00:10:22,000 --> 00:10:24,000
so that instead of having to get, you know, secret code

130
00:10:24,000 --> 00:10:27,000
from the motherboard manufacturers to control the fan stuff,

131
00:10:27,000 --> 00:10:29,000
they could do it all in open source

132
00:10:29,000 --> 00:10:31,000
and with their own custom stuff that could be modified.

133
00:10:31,000 --> 00:10:34,000
It seems like we're just a little early in that process

134
00:10:34,000 --> 00:10:37,000
where it doesn't work great for the end user.

135
00:10:37,000 --> 00:10:40,000
Now, maybe down the line, that can change, and it is out in the open,

136
00:10:40,000 --> 00:10:42,000
so there's probably some room there.

137
00:10:42,000 --> 00:10:43,000
Still early days.

138
00:10:43,000 --> 00:10:44,000
Yeah, still early days.

139
00:10:44,000 --> 00:10:49,000
I mean, this is their first, you know, self-100% manufactured piece of hardware.

140
00:10:49,000 --> 00:10:53,000
I don't think, as problems go, this is the worst problem you could have,

141
00:10:53,000 --> 00:10:57,000
and I will be shocked if it's not tweakable via firmware update,

142
00:10:57,000 --> 00:11:02,000
since, you know, the fan curve is, again, currently hard-coded in the daughterboard.

143
00:11:02,000 --> 00:11:05,000
So, really just make a little known utility that I can change that,

144
00:11:05,000 --> 00:11:07,000
and life is great.

145
00:11:07,000 --> 00:11:10,000
So, ask me what solution I ended up going with

146
00:11:10,000 --> 00:11:12,000
that I'm talking to you on right now.

147
00:11:12,000 --> 00:11:16,000
I was going to say your fan noise doesn't sound bad at all today.

148
00:11:16,000 --> 00:11:22,000
Hmm, I'm a little suspicious that it might have something to do with Apple.

149
00:11:22,000 --> 00:11:23,000
Wrong.

150
00:11:23,000 --> 00:11:24,000
What are you using?

151
00:11:24,000 --> 00:11:28,000
I am using the Galago Pro with an eGPU.

152
00:11:28,000 --> 00:11:30,000
Is that right? Okay.

153
00:11:30,000 --> 00:11:31,000
Yeah.

154
00:11:31,000 --> 00:11:34,000
What GPU do you have in your eGPU setup?

155
00:11:34,000 --> 00:11:36,000
Oh, geez, we did an episode on it a few weeks ago.

156
00:11:36,000 --> 00:11:42,000
It is the Radeon Sapphire MX, or, yeah, 560, I think.

157
00:11:42,000 --> 00:11:43,000
Yeah, that's right.

158
00:11:43,000 --> 00:11:45,000
Yeah, in the OWC case,

159
00:11:45,000 --> 00:11:49,000
it's the Apple-recommended one that connects via Thunderbolt.

160
00:11:49,000 --> 00:11:54,000
I am, very ironically for something we're going to talk about later today, Wes,

161
00:11:54,000 --> 00:11:57,000
I think I'm bought in on the eGPU lifestyle now.

162
00:11:57,000 --> 00:11:58,000
Yeah, I'm getting really tempted,

163
00:11:58,000 --> 00:12:02,000
and part of me wants to build a big new honkin' Linux desktop.

164
00:12:02,000 --> 00:12:04,000
Another part of me wants to get something a little smaller

165
00:12:04,000 --> 00:12:07,000
and just go the eGPU route because I have this other, you know,

166
00:12:07,000 --> 00:12:08,000
I have a ThinkPad that I could use with it too.

167
00:12:08,000 --> 00:12:13,000
It just seems like an affordable choice that's working decently enough

168
00:12:13,000 --> 00:12:14,000
if you're all right with tinkering.

169
00:12:14,000 --> 00:12:16,000
Yeah, and it's not that much tinkering, really.

170
00:12:16,000 --> 00:12:18,000
Even on Linux, there's just like a little,

171
00:12:18,000 --> 00:12:21,000
I think you linked it a couple of weeks ago that I ended up using,

172
00:12:21,000 --> 00:12:23,000
a little bash script that just sets it up.

173
00:12:23,000 --> 00:12:25,000
The only big bug that I see on,

174
00:12:25,000 --> 00:12:28,000
I'm running a pop in 1904, so I've been to 1904,

175
00:12:28,000 --> 00:12:32,000
is you cannot like hot unplug your Thunderbolt eGPU.

176
00:12:32,000 --> 00:12:35,000
Yeah, I imagine your graphics card disappearing

177
00:12:35,000 --> 00:12:38,000
is probably an upsetting event to everything depending on that.

178
00:12:38,000 --> 00:12:41,000
Well, Mac actually handles it, and so does Windows.

179
00:12:41,000 --> 00:12:45,000
Well, where do you think you are, Mike? Come on.

180
00:12:45,000 --> 00:12:46,000
Yeah, I know, Jesus.

181
00:12:46,000 --> 00:12:49,000
You want stuff to work or do you want an open source operating system?

182
00:12:49,000 --> 00:12:50,000
In the words of Leonard Pottering,

183
00:12:50,000 --> 00:12:53,000
you're getting this free, stop complaining. Yeah, I got it.

184
00:12:53,000 --> 00:12:54,000
Yeah, that's great.

185
00:12:54,000 --> 00:12:57,000
All right, well, it's nice that that system is working

186
00:12:57,000 --> 00:12:59,000
and that the fan noise is an acceptable level.

187
00:12:59,000 --> 00:13:04,000
For my recording stuff, I've just had to move all my equipment out of the room,

188
00:13:04,000 --> 00:13:05,000
but that's not an ideal choice.

189
00:13:05,000 --> 00:13:07,000
That would have been much too simple.

190
00:13:07,000 --> 00:13:08,000
That would be much too simple.

191
00:13:08,000 --> 00:13:10,000
You got to fight. You want to make it a fight.

192
00:13:10,000 --> 00:13:12,000
That's right. I want the glory of battle.

193
00:13:12,000 --> 00:13:15,000
So I'm curious what you think about,

194
00:13:15,000 --> 00:13:17,000
let's just dive into WWDC

195
00:13:17,000 --> 00:13:22,000
and start with what is maybe the most exciting thing and the most relevant.

196
00:13:22,000 --> 00:13:24,000
The Thaleo not working out too great.

197
00:13:24,000 --> 00:13:27,000
You might be able to find something more to your liking

198
00:13:27,000 --> 00:13:30,000
in an Apple's new Mac Pro.

199
00:13:30,000 --> 00:13:33,000
You know, I really wish Chris was here so I could ask him for,

200
00:13:33,000 --> 00:13:35,000
what is it, $6,000?

201
00:13:35,000 --> 00:13:38,000
Yeah, that is the starting price of this new machine.

202
00:13:38,000 --> 00:13:39,000
Yes, that's right.

203
00:13:39,000 --> 00:13:42,000
You know, it's for show research. We need it.

204
00:13:42,000 --> 00:13:43,000
Yes, exactly.

205
00:13:43,000 --> 00:13:45,000
Xenics Academy will gladly pay for it.

206
00:13:45,000 --> 00:13:49,000
You know, honestly, it would probably make an excellent studio machine.

207
00:13:49,000 --> 00:13:52,000
No, actually, you know, while we were getting ready,

208
00:13:52,000 --> 00:13:56,000
I was kind of looking into the verge right up in the specs.

209
00:13:56,000 --> 00:13:59,000
Many developers are not going to need this machine.

210
00:13:59,000 --> 00:14:02,000
This does sound like kind of a audio production,

211
00:14:02,000 --> 00:14:04,000
particularly video production unit.

212
00:14:04,000 --> 00:14:05,000
Yeah, they're like,

213
00:14:05,000 --> 00:14:08,000
we heard you're disappointed we haven't made a media workstation,

214
00:14:08,000 --> 00:14:11,000
so we are going hard at making a media workstation.

215
00:14:11,000 --> 00:14:12,000
Like, super hard.

216
00:14:12,000 --> 00:14:13,000
Like, I like it.

217
00:14:13,000 --> 00:14:14,000
I mean, Wes, I got to be honest.

218
00:14:14,000 --> 00:14:18,000
If I did not, on a whim, start the eGPU Kool-Aid,

219
00:14:18,000 --> 00:14:21,000
I would probably be saving up for the next 10 years to buy one of these.

220
00:14:21,000 --> 00:14:24,000
Yeah, that's a big investment.

221
00:14:24,000 --> 00:14:28,000
Plus, you still need to buy their new fancy new screen at the same time.

222
00:14:28,000 --> 00:14:30,000
I'm sure you can reuse the screen you have,

223
00:14:30,000 --> 00:14:31,000
but that's just not the Apple way.

224
00:14:31,000 --> 00:14:33,000
It's just not the Apple way.

225
00:14:33,000 --> 00:14:35,000
Was there anything about the Mac Pro that stood out to you?

226
00:14:35,000 --> 00:14:37,000
I mean, first of all, it's not like some stupid shape, right?

227
00:14:37,000 --> 00:14:38,000
We should say that.

228
00:14:38,000 --> 00:14:40,000
It is a tower, effectively.

229
00:14:40,000 --> 00:14:43,000
It looks like, I mean, just a fancy high-end machine.

230
00:14:43,000 --> 00:14:44,000
Yeah, you could recognize that.

231
00:14:44,000 --> 00:14:45,000
Oh, that's a computer.

232
00:14:45,000 --> 00:14:46,000
Yeah, okay.

233
00:14:46,000 --> 00:14:48,000
It's like something you would buy on like Newegg, right?

234
00:14:48,000 --> 00:14:50,000
Like if you buy it for a custom case.

235
00:14:50,000 --> 00:14:51,000
It looks nice.

236
00:14:51,000 --> 00:14:54,000
It looks very much like the old cheese grater Mac Pro,

237
00:14:54,000 --> 00:14:56,000
which is what people want.

238
00:14:56,000 --> 00:14:58,000
Yeah, I like that callback.

239
00:14:58,000 --> 00:14:59,000
It's nice, yeah.

240
00:14:59,000 --> 00:15:03,000
It is massive overkill for all but the highest end of developers, I would say.

241
00:15:03,000 --> 00:15:05,000
Yes, this is not, you know, I mean,

242
00:15:05,000 --> 00:15:08,000
I think many people are willing, maybe not pleased,

243
00:15:08,000 --> 00:15:11,000
but willing to spend somewhere between, you know, $1,500 and $3,000

244
00:15:11,000 --> 00:15:15,000
on a nice workstation for something that just should last a couple of years

245
00:15:15,000 --> 00:15:18,000
and, you know, has decent graphics and nice peripherals and all that.

246
00:15:18,000 --> 00:15:21,000
This is not in that box at all.

247
00:15:21,000 --> 00:15:23,000
It really is like you're a serious professional.

248
00:15:23,000 --> 00:15:27,000
This is coming out of some business line budget somewhere

249
00:15:27,000 --> 00:15:31,000
because it's going to be, you know, it's going to be your main production tool.

250
00:15:31,000 --> 00:15:34,000
And if that's true, it seems awesome.

251
00:15:34,000 --> 00:15:37,000
Like I've known a few shops that have played around with buying, you know,

252
00:15:37,000 --> 00:15:41,000
like custom rigs designed for machine learning data science applications,

253
00:15:41,000 --> 00:15:44,000
which is boxes rigged with GPUs so that you can, you know, train and test,

254
00:15:44,000 --> 00:15:46,000
evaluate models faster right there on your desktop

255
00:15:46,000 --> 00:15:49,000
and not have to push it off to some cluster.

256
00:15:49,000 --> 00:15:52,000
For that space, this seems very competitive, right?

257
00:15:52,000 --> 00:15:57,000
And I'm sure other people working on stuff like ARKit, et cetera,

258
00:15:57,000 --> 00:16:00,000
these will be great machines for that internally too.

259
00:16:00,000 --> 00:16:03,000
Kind of. So you don't even need that much for ARKit.

260
00:16:03,000 --> 00:16:07,000
I mean, like the MacBook Pro that I have, the i9 with the Radeon

261
00:16:07,000 --> 00:16:12,000
or, hell, a Mac Mini with the eGPU I have will do you just fine on ARKit.

262
00:16:12,000 --> 00:16:15,000
But there's a little dirty, can I give you some inside baseball?

263
00:16:15,000 --> 00:16:17,000
Yeah, please do.

264
00:16:17,000 --> 00:16:22,000
If you are an independent Apple developer and you have a business account,

265
00:16:22,000 --> 00:16:24,000
you should not buy this.

266
00:16:24,000 --> 00:16:27,000
You can actually just lease them and they're much more affordable.

267
00:16:27,000 --> 00:16:29,000
You do like a three-year lease.

268
00:16:29,000 --> 00:16:31,000
Oh, yeah. What does that look like?

269
00:16:31,000 --> 00:16:35,000
You end up paying less as long as you're always going to be locked into Apple.

270
00:16:35,000 --> 00:16:37,000
That's kind of their...

271
00:16:37,000 --> 00:16:39,000
Right. As long as you're committed to like continually having

272
00:16:39,000 --> 00:16:41,000
one of these machines around.

273
00:16:41,000 --> 00:16:43,000
And you cannot lease the lowest end version.

274
00:16:43,000 --> 00:16:45,000
Ah, yeah.

275
00:16:45,000 --> 00:16:47,000
But they're doing that pretty aggressively with the iMac Pro,

276
00:16:47,000 --> 00:16:50,000
which if I wanted an iMac Pro, I would just lease it through my business.

277
00:16:50,000 --> 00:16:55,000
And it would actually be a much less significant purchase, end quotes.

278
00:16:55,000 --> 00:16:57,000
Especially the way I go through...

279
00:16:57,000 --> 00:16:59,000
I mean, there's a whole thing.

280
00:16:59,000 --> 00:17:02,000
I don't want to go on my eGPU tangent, but if this works out for me,

281
00:17:02,000 --> 00:17:06,000
really, I'm just going to buy a new laptop every year to like upgrade

282
00:17:06,000 --> 00:17:10,000
memory and processor and RAM because I only have 16 gigs.

283
00:17:10,000 --> 00:17:13,000
Yeah, then you've separated stuff. You can have two different upgrade cadences

284
00:17:13,000 --> 00:17:15,000
for your GPU system.

285
00:17:15,000 --> 00:17:17,000
Two cadences. Right.

286
00:17:17,000 --> 00:17:19,000
Yeah, that's really nice.

287
00:17:19,000 --> 00:17:21,000
One disappointing thing is no NVIDIA.

288
00:17:21,000 --> 00:17:23,000
Right? I was kind of surprised by that.

289
00:17:23,000 --> 00:17:26,000
They were playing up the expandability, right?

290
00:17:26,000 --> 00:17:30,000
It's so funny to think, but it's like, we brought PCI back to the Mac,

291
00:17:30,000 --> 00:17:34,000
which is ridiculous in some perspectives and nice in another perspective, right?

292
00:17:34,000 --> 00:17:37,000
I have never been so excited about PCI, though.

293
00:17:37,000 --> 00:17:40,000
I mean, it seems like they're doing it right, too.

294
00:17:40,000 --> 00:17:44,000
And Thunderbolt just sort of wired throughout the entire thing.

295
00:17:44,000 --> 00:17:47,000
It's definitely an IO monster.

296
00:17:47,000 --> 00:17:49,000
Yeah, it's an impressive machine.

297
00:17:49,000 --> 00:17:50,000
Yeah, I don't know.

298
00:17:50,000 --> 00:17:53,000
I can't imagine a day where I get to really play with one up close,

299
00:17:53,000 --> 00:17:55,000
and that's kind of the disappointing part.

300
00:17:55,000 --> 00:18:00,000
I don't need to edit or render a bunch of like native ProRes 8K.

301
00:18:00,000 --> 00:18:02,000
I'm sure if you do, that's pretty exciting.

302
00:18:02,000 --> 00:18:05,000
It's weird, though, because it seems like this is...

303
00:18:05,000 --> 00:18:08,000
When I was listening to it, honestly, I was excited.

304
00:18:08,000 --> 00:18:11,000
I did kind of grow up on Macs, and so I liked them.

305
00:18:11,000 --> 00:18:13,000
And for a long time, they were this, right?

306
00:18:13,000 --> 00:18:18,000
They were the sort of media professional designers or print or whatever industry.

307
00:18:18,000 --> 00:18:23,000
A Mac was like a creative person's workstation and a computer designed for them.

308
00:18:23,000 --> 00:18:26,000
It felt like they were trying to hearken back to that and embrace it.

309
00:18:26,000 --> 00:18:30,000
But at that price point, now that I think about it, it feels like maybe...

310
00:18:30,000 --> 00:18:32,000
It's exciting because it's new and it's great,

311
00:18:32,000 --> 00:18:34,000
and they're clearly committed to doing it right,

312
00:18:34,000 --> 00:18:36,000
but it's just not for us.

313
00:18:36,000 --> 00:18:38,000
So I had the same experience growing up.

314
00:18:38,000 --> 00:18:40,000
Macs were particularly the...

315
00:18:40,000 --> 00:18:42,000
It wasn't the cheese grater.

316
00:18:42,000 --> 00:18:45,000
It was like the G5 tower, whatever, the G4.

317
00:18:45,000 --> 00:18:48,000
It was like an aspirational thing for me.

318
00:18:48,000 --> 00:18:50,000
Back on the PowerPC days.

319
00:18:50,000 --> 00:18:52,000
Right, back in the PowerPC days.

320
00:18:52,000 --> 00:18:55,000
But I could never afford a Mac back then.

321
00:18:55,000 --> 00:18:59,000
I think they're aspirational devices and things you will sell to Pixar.

322
00:18:59,000 --> 00:19:05,000
So I could see a JB having one right to just do some super high-end renders

323
00:19:05,000 --> 00:19:08,000
every once in a while or just crank through some video assets

324
00:19:08,000 --> 00:19:10,000
when you guys are on the road.

325
00:19:10,000 --> 00:19:13,000
The sort of frustration, I guess, maybe captured a lot of this

326
00:19:13,000 --> 00:19:15,000
because I'm curious, I'm Apple curious.

327
00:19:15,000 --> 00:19:18,000
Actually, my very first smartphone was an iPhone,

328
00:19:18,000 --> 00:19:21,000
so that was my introduction to that world in the first place.

329
00:19:21,000 --> 00:19:23,000
So I spent many years on iOS.

330
00:19:23,000 --> 00:19:25,000
I'm not there now,

331
00:19:25,000 --> 00:19:28,000
but I keep looking on thinking about how do these devices fit?

332
00:19:28,000 --> 00:19:30,000
Do they make sense in my life?

333
00:19:30,000 --> 00:19:32,000
Some of the news around, let's say, like the Apple Watch

334
00:19:32,000 --> 00:19:34,000
becoming more of a standalone device.

335
00:19:34,000 --> 00:19:36,000
That's interesting because I don't have an iPhone.

336
00:19:36,000 --> 00:19:38,000
Maybe I will, but I just got a Pixel 3,

337
00:19:38,000 --> 00:19:41,000
so I'm not going to switch this generation at least.

338
00:19:41,000 --> 00:19:43,000
If I could use it on its own, though,

339
00:19:43,000 --> 00:19:46,000
it's clearly the only device in its class out there, right?

340
00:19:46,000 --> 00:19:48,000
So there's not a lot of choices.

341
00:19:48,000 --> 00:19:51,000
So it's frustrating that when Apple does something,

342
00:19:51,000 --> 00:19:55,000
if you can shape the ways that you want to interact with that device

343
00:19:55,000 --> 00:19:57,000
into the ways that they're designing for,

344
00:19:57,000 --> 00:20:00,000
they do it right and at such a level of design and thoughtfulness

345
00:20:00,000 --> 00:20:02,000
that no one else can touch.

346
00:20:02,000 --> 00:20:05,000
So it's frustrating to someone as an outsider who wants to use it.

347
00:20:05,000 --> 00:20:07,000
It doesn't quite feel like it's in the shape

348
00:20:07,000 --> 00:20:09,000
where it plays with the way I use computers yet,

349
00:20:09,000 --> 00:20:11,000
but it's getting close.

350
00:20:11,000 --> 00:20:14,000
And another way it's getting close is iPad OS,

351
00:20:14,000 --> 00:20:17,000
the new sort of grown-up version of iOS

352
00:20:17,000 --> 00:20:20,000
that has more iPad-focused features

353
00:20:20,000 --> 00:20:24,000
and regular old computer stuff like files and folders

354
00:20:24,000 --> 00:20:26,000
and SMB support.

355
00:20:26,000 --> 00:20:29,000
Yeah, this is probably the most exciting thing

356
00:20:29,000 --> 00:20:32,000
in this dub-dub for me.

357
00:20:32,000 --> 00:20:35,000
I really, really, really think most people working in factories

358
00:20:35,000 --> 00:20:39,000
and, like, offices and in sales and lots of places

359
00:20:39,000 --> 00:20:41,000
do not need computers anymore.

360
00:20:41,000 --> 00:20:44,000
They need, like, powerful tablets with, you know,

361
00:20:44,000 --> 00:20:47,000
so basically LTE chips, right, LTE SIM cards.

362
00:20:47,000 --> 00:20:51,000
Yeah, always on, just, you know, have all of your communication apps

363
00:20:51,000 --> 00:20:53,000
because that's 90% of what we're doing, right?

364
00:20:53,000 --> 00:20:55,000
It's sending emails, checking Slack, doing some web browsing,

365
00:20:55,000 --> 00:20:58,000
maybe a little bit of creative work on the side.

366
00:20:58,000 --> 00:21:00,000
Or, like, whatever, you're, you know, you're an inspector.

367
00:21:00,000 --> 00:21:02,000
You can already see this, actually.

368
00:21:02,000 --> 00:21:04,000
A lot of people do this already.

369
00:21:04,000 --> 00:21:08,000
But just, like, more powerful applications,

370
00:21:08,000 --> 00:21:10,000
I kind of think they're all going to be HTML5

371
00:21:10,000 --> 00:21:13,000
a la WebAssembly pretty soon.

372
00:21:13,000 --> 00:21:17,000
But you do need the OS to actually support, you know,

373
00:21:17,000 --> 00:21:19,000
the tablet as a real computing device

374
00:21:19,000 --> 00:21:22,000
and not, you know, a content consumption device.

375
00:21:22,000 --> 00:21:24,000
Right, and they have branched off, right?

376
00:21:24,000 --> 00:21:27,000
Tablets are doing a lot more or at least exploring different spaces

377
00:21:27,000 --> 00:21:30,000
than what you can do on the limited size and shape of a phone.

378
00:21:30,000 --> 00:21:31,000
That's another area.

379
00:21:31,000 --> 00:21:33,000
Like, there's not another tablet that I would,

380
00:21:33,000 --> 00:21:34,000
that I'm really interested in.

381
00:21:34,000 --> 00:21:36,000
And I've used iPads for a long time.

382
00:21:36,000 --> 00:21:37,000
I'm familiar with them.

383
00:21:37,000 --> 00:21:39,000
And they're, I mean, they're pretty great at it.

384
00:21:39,000 --> 00:21:43,000
You have had to accept that Apple basically wanted to reinvent the OS

385
00:21:43,000 --> 00:21:46,000
and start off with their, you know, their, like, user faces stuff

386
00:21:46,000 --> 00:21:49,000
and then add in redone and reworked primitives,

387
00:21:49,000 --> 00:21:51,000
things like the, you know, ways that you interact with files

388
00:21:51,000 --> 00:21:54,000
or USB drive support that you would expect on a traditional machine

389
00:21:54,000 --> 00:21:58,000
but hadn't been implemented in this new world of iOS.

390
00:21:58,000 --> 00:22:01,000
But it's getting closer, and you can see the day.

391
00:22:01,000 --> 00:22:03,000
And, you know, it'll be some straggling curve,

392
00:22:03,000 --> 00:22:05,000
but more and more of general purpose computing

393
00:22:05,000 --> 00:22:07,000
is being eaten by these devices.

394
00:22:07,000 --> 00:22:09,000
Yeah, I mean, and Apple can kind of take their time

395
00:22:09,000 --> 00:22:13,000
because, you know, Ubuntu Touch was never a real competitor.

396
00:22:13,000 --> 00:22:15,000
Android on tablets was always kind of crappy.

397
00:22:15,000 --> 00:22:16,000
Yeah, there is no competitor.

398
00:22:16,000 --> 00:22:18,000
Yeah, Windows is maybe the nearest thing,

399
00:22:18,000 --> 00:22:21,000
but they're a distant second.

400
00:22:21,000 --> 00:22:24,000
Mm-hmm, and I don't think they can yet compete with the,

401
00:22:24,000 --> 00:22:26,000
for all the pains it causes power users,

402
00:22:26,000 --> 00:22:30,000
the rethought interaction models and, like, ways of how computing works

403
00:22:30,000 --> 00:22:32,000
that I think is really appealing.

404
00:22:32,000 --> 00:22:34,000
All right, so a little bit personal.

405
00:22:34,000 --> 00:22:36,000
My father's a bit of a Luddite.

406
00:22:36,000 --> 00:22:38,000
He's not a computer-forward person.

407
00:22:38,000 --> 00:22:39,000
He can use them as a tool

408
00:22:39,000 --> 00:22:42,000
but isn't really interested in them other than that.

409
00:22:42,000 --> 00:22:45,000
Being disappointed in some of his local news available,

410
00:22:45,000 --> 00:22:49,000
the family got him an iPad this Christmas as a sort of like,

411
00:22:49,000 --> 00:22:51,000
oh, here, you know, we've got, like, the New York Times

412
00:22:51,000 --> 00:22:53,000
or whatever other subscriptions you want to put on there.

413
00:22:53,000 --> 00:22:55,000
You can have it right there.

414
00:22:55,000 --> 00:22:58,000
It was the first, like, new machine he'd used in a few years,

415
00:22:58,000 --> 00:23:02,000
and I don't know that many other, you know, a Surface or a Windows tablet,

416
00:23:02,000 --> 00:23:04,000
it just wouldn't have provided the same sort of ease

417
00:23:04,000 --> 00:23:06,000
and clarity of the interaction models

418
00:23:06,000 --> 00:23:10,000
that I think let him actually be successful at using the device.

419
00:23:10,000 --> 00:23:12,000
I came back and visited just recently,

420
00:23:12,000 --> 00:23:14,000
and he was sitting there on his tablet,

421
00:23:14,000 --> 00:23:17,000
and he was telling me about some hacking story reported in the New York Times.

422
00:23:17,000 --> 00:23:19,000
I was like, what? Are you the same person?

423
00:23:19,000 --> 00:23:20,000
Nice.

424
00:23:20,000 --> 00:23:23,000
And it's just because, like, that device is simplified and safe

425
00:23:23,000 --> 00:23:25,000
and lets him feel comfortable using it in a way

426
00:23:25,000 --> 00:23:27,000
that a more powerful machine probably wouldn't.

427
00:23:27,000 --> 00:23:29,000
Yeah, I think that makes a ton of sense.

428
00:23:29,000 --> 00:23:31,000
I mean, and also they're, you know,

429
00:23:31,000 --> 00:23:34,000
they're fairly easy to replace and service, right?

430
00:23:34,000 --> 00:23:36,000
That's a good point. You can just get a new one.

431
00:23:36,000 --> 00:23:38,000
You know where to take it.

432
00:23:38,000 --> 00:23:40,000
And if you're using all the iCloud stuff,

433
00:23:40,000 --> 00:23:42,000
then you know most of your data is going to be safe, too.

434
00:23:42,000 --> 00:23:44,000
You have a guaranteed configuration that you're developing to,

435
00:23:44,000 --> 00:23:48,000
or at least a small set of guaranteed configurations, right?

436
00:23:48,000 --> 00:23:50,000
So you don't have, like, a million different devices

437
00:23:50,000 --> 00:23:55,000
with, you know, a million different potential pieces of hardware

438
00:23:55,000 --> 00:23:58,000
or settings, blah, blah, blah.

439
00:23:58,000 --> 00:24:01,000
So I think the last thing, or the last two things,

440
00:24:01,000 --> 00:24:03,000
would be Project Catalyst,

441
00:24:03,000 --> 00:24:06,000
which was the artist formerly known as Marzipan.

442
00:24:06,000 --> 00:24:08,000
I don't have a lot here, Wes.

443
00:24:08,000 --> 00:24:11,000
It's okay, so you can bring your iPad apps to Mac.

444
00:24:11,000 --> 00:24:13,000
Right, that's the goal here, is you can take apps

445
00:24:13,000 --> 00:24:15,000
that have already been designed, is that right?

446
00:24:15,000 --> 00:24:18,000
So you have an app that's already running on iOS,

447
00:24:18,000 --> 00:24:20,000
and then through, I guess, Project Catalyst,

448
00:24:20,000 --> 00:24:23,000
you can get it up and running on the Mac.

449
00:24:23,000 --> 00:24:25,000
Yeah, I mean, I think in reality,

450
00:24:25,000 --> 00:24:29,000
the good Catalyst apps are going to be designed from the ground up.

451
00:24:29,000 --> 00:24:31,000
Right, that's the issue so far,

452
00:24:31,000 --> 00:24:33,000
is everyone seems to have a complaint that, like,

453
00:24:33,000 --> 00:24:37,000
yeah, okay, it does run, but it feels like a weird ported iOS app

454
00:24:37,000 --> 00:24:39,000
that doesn't fit desktop paradoxes.

455
00:24:39,000 --> 00:24:41,000
It doesn't fit with the platform, but, you know,

456
00:24:41,000 --> 00:24:44,000
the second thing they announced, Swift UI,

457
00:24:44,000 --> 00:24:48,000
which is a very React component-y way to build UI.

458
00:24:48,000 --> 00:24:49,000
Did you notice that?

459
00:24:49,000 --> 00:24:52,000
Yeah, I don't know quite how declarative

460
00:24:52,000 --> 00:24:54,000
or along that spectrum it will be.

461
00:24:54,000 --> 00:24:56,000
I haven't got enough chance to play with it, obviously,

462
00:24:56,000 --> 00:24:58,000
but it did, just from the few samples and interactions

463
00:24:58,000 --> 00:25:00,000
that they were showing, it did feel that way,

464
00:25:00,000 --> 00:25:04,000
which might make it kind of cool.

465
00:25:04,000 --> 00:25:06,000
I mean, that's always been my complaint

466
00:25:06,000 --> 00:25:11,000
with some of the more, you know, just old-fashioned UI sort of policies.

467
00:25:11,000 --> 00:25:13,000
I think that was why React took off so well,

468
00:25:13,000 --> 00:25:15,000
is you could just sort of say, like, here's what I want the page to be,

469
00:25:15,000 --> 00:25:19,000
here's how it should work, and you figure it out, library.

470
00:25:19,000 --> 00:25:21,000
Yeah, I mean, the.NET world has this.

471
00:25:21,000 --> 00:25:26,000
In fact, Xamarin used to be very common to do your UI

472
00:25:26,000 --> 00:25:28,000
in declarative C-sharp, basically,

473
00:25:28,000 --> 00:25:31,000
which looks an awful lot like what they're doing in Swift here.

474
00:25:31,000 --> 00:25:34,000
So this is, I think, Apple.

475
00:25:34,000 --> 00:25:37,000
It's pretty clear to me that Swift UI is,

476
00:25:37,000 --> 00:25:39,000
you know, let's say one or two reps from here

477
00:25:39,000 --> 00:25:41,000
are going to be the UI framework.

478
00:25:41,000 --> 00:25:44,000
Does that mean Objective-C is over with?

479
00:25:44,000 --> 00:25:47,000
I mean, are we really entering the era of Swift only?

480
00:25:47,000 --> 00:25:50,000
We're not there yet, but I would say in a refer to pour out your 40s

481
00:25:50,000 --> 00:25:52,000
and pour one out for Objective-C.

482
00:25:52,000 --> 00:25:55,000
Now, it's still, still, it could be possible that your logic

483
00:25:55,000 --> 00:25:57,000
could be written in Objective-C,

484
00:25:57,000 --> 00:25:59,000
because they still support C++, right?

485
00:25:59,000 --> 00:26:01,000
Ah, yes.

486
00:26:01,000 --> 00:26:04,000
I'm writing UX in Objective-C. Yeah, the end is nigh.

487
00:26:04,000 --> 00:26:07,000
You might have some, yeah, backend libraries that you're using,

488
00:26:07,000 --> 00:26:09,000
but the main thing that you're going to use to design

489
00:26:09,000 --> 00:26:11,000
the whole application will be Swift.

490
00:26:11,000 --> 00:26:13,000
It's going to be Swift, yeah.

491
00:26:13,000 --> 00:26:16,000
I mean, right now, Swift UI is not mandatory,

492
00:26:16,000 --> 00:26:19,000
or it wasn't clear in the keynote if it's mandatory.

493
00:26:19,000 --> 00:26:21,000
It doesn't seem like it is.

494
00:26:21,000 --> 00:26:23,000
But I think at this point, it's definitely something,

495
00:26:23,000 --> 00:26:25,000
if you're building a new, particularly iPad OS,

496
00:26:25,000 --> 00:26:28,000
or I keep wanting to say Marzipan Catalyst app,

497
00:26:28,000 --> 00:26:32,000
I would be hard-pressed to not look at that.

498
00:26:32,000 --> 00:26:37,000
Just from the demos they showed, it looks very powerful,

499
00:26:37,000 --> 00:26:40,000
and I imagine there's some performance gains

500
00:26:40,000 --> 00:26:43,000
in not having to load and unload nib files.

501
00:26:43,000 --> 00:26:47,000
Just my two cents, but, yeah.

502
00:26:47,000 --> 00:26:51,000
So speaking of things that are hyper-performant, Wes, I hate you.

503
00:26:51,000 --> 00:26:53,000
Yeah, you're a little mad at me,

504
00:26:53,000 --> 00:26:56,000
and I think in a good way, though, knowing you.

505
00:26:56,000 --> 00:26:59,000
It's good hate. It's good hate.

506
00:26:59,000 --> 00:27:01,000
So Wes turned me on to Elixir

507
00:27:01,000 --> 00:27:03,000
as part of our 7 Weeks 7 Languages.

508
00:27:03,000 --> 00:27:06,000
Yes, I did. Maybe you could tell us a little bit about Elixir.

509
00:27:06,000 --> 00:27:08,000
I know we've mentioned it on the show,

510
00:27:08,000 --> 00:27:11,000
but I think this is the deepest dive we've dared to do.

511
00:27:11,000 --> 00:27:15,000
Yeah, yeah. I failed to complete my GitHub assignment, of course,

512
00:27:15,000 --> 00:27:18,000
but I will post something after the show.

513
00:27:18,000 --> 00:27:22,000
I ended up digging deep into Elixir videos and Elixir tutorials.

514
00:27:22,000 --> 00:27:26,000
In particular, two comparisons to Ruby

515
00:27:26,000 --> 00:27:30,000
and some performance statistics.

516
00:27:30,000 --> 00:27:33,000
Ah, and one of the things I'm curious to see out of this

517
00:27:33,000 --> 00:27:36,000
is what you think, as an experienced Rubyist,

518
00:27:36,000 --> 00:27:38,000
if those comparisons really make sense

519
00:27:38,000 --> 00:27:41,000
or if it's just sort of surface level.

520
00:27:41,000 --> 00:27:44,000
Yeah, well, obviously, I'm not a big fan of benchmarks,

521
00:27:44,000 --> 00:27:46,000
but there's definitely...

522
00:27:46,000 --> 00:27:50,000
In fact, I linked to a blog post in the show notes

523
00:27:50,000 --> 00:27:52,000
comparing Elixir and Phoenix,

524
00:27:52,000 --> 00:27:55,000
which is their MVC-ish web development framework,

525
00:27:55,000 --> 00:27:57,000
an API development framework,

526
00:27:57,000 --> 00:28:00,000
and Ruby and Rails, which everybody knows what Rails is.

527
00:28:00,000 --> 00:28:04,000
And yeah, I mean, there's some significant performance increases,

528
00:28:04,000 --> 00:28:07,000
and the author makes just a tremendous argument

529
00:28:07,000 --> 00:28:10,000
that by virtue of being functional,

530
00:28:10,000 --> 00:28:13,000
but also just less magical than Ruby,

531
00:28:13,000 --> 00:28:16,000
Elixir is not only more performant,

532
00:28:16,000 --> 00:28:20,000
but you have less of the issues of a gem is no longer maintained

533
00:28:20,000 --> 00:28:24,000
or blows up or is incompatible with some new version of some other gem

534
00:28:24,000 --> 00:28:26,000
it depends on and you have a problem.

535
00:28:26,000 --> 00:28:30,000
Now, to be fair to Ruby and Rails, the disadvantage is obvious.

536
00:28:30,000 --> 00:28:33,000
Ruby and Rails are particularly designed for developer productivity

537
00:28:33,000 --> 00:28:36,000
and getting things done as quickly as you can.

538
00:28:36,000 --> 00:28:39,000
But damn, I mean, to me, it's not really an either-or.

539
00:28:39,000 --> 00:28:41,000
I know that's a click-baity way to do this.

540
00:28:41,000 --> 00:28:44,000
Right, yeah, of course. You have to choose the tool for the job.

541
00:28:44,000 --> 00:28:47,000
But maybe this is a new useful tool to you.

542
00:28:47,000 --> 00:28:49,000
Well, I think for crunching through data,

543
00:28:49,000 --> 00:28:53,000
for things like multi-channel messaging, i.e. bots,

544
00:28:53,000 --> 00:28:57,000
having Elixir components might make a lot of sense.

545
00:28:57,000 --> 00:29:01,000
Saving server costs, getting things done quickly,

546
00:29:01,000 --> 00:29:05,000
and just the guaranteed safety of being purely functional

547
00:29:05,000 --> 00:29:08,000
I think is pretty interesting.

548
00:29:08,000 --> 00:29:11,000
And its syntax is very Ruby-esque, so it was weird.

549
00:29:11,000 --> 00:29:14,000
As I was playing with it, it didn't feel that foreign to me.

550
00:29:14,000 --> 00:29:17,000
Right, and so in comparison, Elixir is based on Erlang,

551
00:29:17,000 --> 00:29:20,000
and they both run on the Beam VM.

552
00:29:20,000 --> 00:29:23,000
Erlang was developed out of Prolog, so the syntax is,

553
00:29:23,000 --> 00:29:26,000
if you haven't done Prolog, it's pretty darn wacky.

554
00:29:26,000 --> 00:29:29,000
So you're saying you felt pretty comfortable as a new developer coming in,

555
00:29:29,000 --> 00:29:33,000
not familiar really with the platform, and just sort of getting to work.

556
00:29:33,000 --> 00:29:37,000
Yeah, I did. I felt like it was pretty solid, pretty well-maintained.

557
00:29:37,000 --> 00:29:41,000
I mean, the documentation is some of the best documentation I've seen in a while.

558
00:29:41,000 --> 00:29:44,000
Yeah, you can tell the project really cares about that,

559
00:29:44,000 --> 00:29:48,000
which is great for bringing on new people into the project.

560
00:29:48,000 --> 00:29:53,000
Yeah, I would say the only somewhat downside I found is that it doesn't,

561
00:29:53,000 --> 00:29:55,000
and you can correct me if I'm wrong,

562
00:29:55,000 --> 00:29:58,000
it doesn't seem like it's a very popular language right now.

563
00:29:58,000 --> 00:30:01,000
No, I mean, the Beam's always been a bit of a niche,

564
00:30:01,000 --> 00:30:04,000
and Elixir is pretty darn new.

565
00:30:04,000 --> 00:30:07,000
Maybe not really that new, but on the scale of languages,

566
00:30:07,000 --> 00:30:09,000
it's still new and growing.

567
00:30:09,000 --> 00:30:12,000
It does seem like the community's pretty active.

568
00:30:12,000 --> 00:30:16,000
I think it might also fall in one of the sort of secret weapon camp where,

569
00:30:16,000 --> 00:30:18,000
you know, you might not use it at your big enterprise

570
00:30:18,000 --> 00:30:20,000
where you already have a Java application,

571
00:30:20,000 --> 00:30:25,000
but perhaps for someone with a small consultancy who has a little more choice,

572
00:30:25,000 --> 00:30:30,000
you know, like famously WhatsApp has been based on Erlang for a long time.

573
00:30:30,000 --> 00:30:33,000
And so you can see how in certain applications,

574
00:30:33,000 --> 00:30:35,000
as long as you're willing to put up with, you know,

575
00:30:35,000 --> 00:30:37,000
having to do a little extra work training on new people

576
00:30:37,000 --> 00:30:40,000
to get them familiar with the language, it might make your code easier.

577
00:30:40,000 --> 00:30:43,000
Like, I'm curious what you thought about the, you know,

578
00:30:43,000 --> 00:30:46,000
the sort of agent-based systems, message passing,

579
00:30:46,000 --> 00:30:48,000
having actors that you can use.

580
00:30:48,000 --> 00:30:52,000
Yeah, see, in a weird way, it all felt very old,

581
00:30:52,000 --> 00:30:54,000
but also very new to me.

582
00:30:54,000 --> 00:30:57,000
And to be honest, I actually bought a book on it.

583
00:30:57,000 --> 00:30:59,000
I'm going to be digging into it more.

584
00:30:59,000 --> 00:31:01,000
Really? That's fantastic.

585
00:31:01,000 --> 00:31:03,000
Because I may actually have a practical use for this.

586
00:31:03,000 --> 00:31:05,000
So I don't want to talk out of my butt too much.

587
00:31:05,000 --> 00:31:09,000
Do we need to extend this so that you can have another week in the challenge?

588
00:31:09,000 --> 00:31:12,000
Well, I think we don't,

589
00:31:12,000 --> 00:31:15,000
just because I might do something a little bigger.

590
00:31:15,000 --> 00:31:17,000
But I think I'm sold on Elixir, right?

591
00:31:17,000 --> 00:31:21,000
If the goal was to convince me that Elixir is something worth looking into,

592
00:31:21,000 --> 00:31:24,000
I, you know, just for example,

593
00:31:24,000 --> 00:31:28,000
I was reading the basically of this whole getting started basically book,

594
00:31:28,000 --> 00:31:29,000
right, on their website.

595
00:31:29,000 --> 00:31:31,000
And I read through the whole damn thing.

596
00:31:31,000 --> 00:31:34,000
And they very wisely assumed that the people

597
00:31:34,000 --> 00:31:37,000
who would be attracted to Elixir are Rubyists.

598
00:31:37,000 --> 00:31:40,000
So they kept comparing things to Ruby,

599
00:31:40,000 --> 00:31:42,000
which makes it very easy to kind of, okay,

600
00:31:42,000 --> 00:31:44,000
so this is, I forgot what the thing was,

601
00:31:44,000 --> 00:31:46,000
but this is like a Ruby, I think it was like a,

602
00:31:46,000 --> 00:31:50,000
some kind of, the way they do pattern matching differently, right?

603
00:31:50,000 --> 00:31:54,000
Where Ruby kind of does and doesn't, but that's the whole thing.

604
00:31:54,000 --> 00:31:55,000
No, you're right.

605
00:31:55,000 --> 00:31:58,000
I mean, pattern matching is kind of ubiquitous in the Elixir world.

606
00:31:58,000 --> 00:31:59,000
Right.

607
00:31:59,000 --> 00:32:02,000
So it's like, if you would have done this in Ruby,

608
00:32:02,000 --> 00:32:06,000
this is our much less code, simple, more functional way to do it,

609
00:32:06,000 --> 00:32:09,000
which is kind of, I got to say,

610
00:32:09,000 --> 00:32:14,000
I really am surprised that I haven't heard more about it.

611
00:32:14,000 --> 00:32:17,000
Although I could definitely see that building anything non-trivial in this,

612
00:32:17,000 --> 00:32:19,000
there's got to be some kind of learning curve here.

613
00:32:19,000 --> 00:32:21,000
Like I just reading through it, it was like, okay,

614
00:32:21,000 --> 00:32:24,000
so these are some pure functional techniques here, right?

615
00:32:24,000 --> 00:32:27,000
This is not functional, like F sharp is functional.

616
00:32:27,000 --> 00:32:28,000
This is really functional.

617
00:32:28,000 --> 00:32:29,000
Yeah.

618
00:32:29,000 --> 00:32:30,000
I mean, there is, you know,

619
00:32:30,000 --> 00:32:33,000
the VM has a lot of immutability sort of baked into it.

620
00:32:33,000 --> 00:32:35,000
So where, whereas say with the JVM,

621
00:32:35,000 --> 00:32:38,000
you can layer that on top in a more functional language,

622
00:32:38,000 --> 00:32:39,000
you don't really have the option.

623
00:32:39,000 --> 00:32:42,000
You have less escape routes, I think, on the beam.

624
00:32:42,000 --> 00:32:44,000
It is interesting though,

625
00:32:44,000 --> 00:32:48,000
I'm curious if when you get to try some more of the concurrency,

626
00:32:48,000 --> 00:32:49,000
because that seems like in particular,

627
00:32:49,000 --> 00:32:54,000
an area where Ruby really struggles and Elixir really shines.

628
00:32:54,000 --> 00:32:55,000
Yeah.

629
00:32:55,000 --> 00:32:56,000
And like, so does Node, right?

630
00:32:56,000 --> 00:32:58,000
So if you think about my use case of like chat bots

631
00:32:58,000 --> 00:32:59,000
for something like an Alice,

632
00:32:59,000 --> 00:33:04,000
that's an area where I would love more help.

633
00:33:04,000 --> 00:33:05,000
Yeah.

634
00:33:05,000 --> 00:33:07,000
And the nice, the advantage too, right,

635
00:33:07,000 --> 00:33:10,000
is that you have different concurrency models.

636
00:33:10,000 --> 00:33:13,000
So with Node, you know, you have this single core.

637
00:33:13,000 --> 00:33:15,000
Now I know, I realize there's multiple core aspects you can do

638
00:33:15,000 --> 00:33:17,000
with IO and other aspects of it,

639
00:33:17,000 --> 00:33:21,000
but your main code runs on a single core.

640
00:33:21,000 --> 00:33:23,000
Beam is kind of unique, not really unique,

641
00:33:23,000 --> 00:33:27,000
but somewhat unique in that it has preemptive multitasking as well.

642
00:33:27,000 --> 00:33:30,000
So you have some nice guarantees in terms of, you know,

643
00:33:30,000 --> 00:33:34,000
latencies and responses because one messed up really long task

644
00:33:34,000 --> 00:33:36,000
can't eat into the system

645
00:33:36,000 --> 00:33:38,000
in the way a cooperative multitasking system can have happened.

646
00:33:38,000 --> 00:33:40,000
I couldn't have said it better myself.

647
00:33:40,000 --> 00:33:42,000
So what did you think of, I think,

648
00:33:42,000 --> 00:33:47,000
the much easier assignment I gave you?

649
00:33:47,000 --> 00:33:53,000
Yeah, so you assigned me to TypeScript.

650
00:33:53,000 --> 00:33:55,000
It's honestly, it's been interesting.

651
00:33:55,000 --> 00:33:57,000
I've been having a lot of fun playing with it, so thank you.

652
00:33:57,000 --> 00:33:59,000
It was a good choice.

653
00:33:59,000 --> 00:34:01,000
It's a language I've been watching,

654
00:34:01,000 --> 00:34:04,000
but I hadn't directly interacted with.

655
00:34:04,000 --> 00:34:07,000
So my first stop was over to the playground they have,

656
00:34:07,000 --> 00:34:09,000
and that's just like a little web app

657
00:34:09,000 --> 00:34:10,000
where you type in some TypeScript

658
00:34:10,000 --> 00:34:13,000
and then it'll show you the output JavaScript

659
00:34:13,000 --> 00:34:15,000
and then you can run it there as well.

660
00:34:15,000 --> 00:34:18,000
And that was sort of in lieu of a REPL.

661
00:34:18,000 --> 00:34:20,000
It's always funny, like, playing with more static languages

662
00:34:20,000 --> 00:34:22,000
because I'm used to trying things out

663
00:34:22,000 --> 00:34:24,000
and just sort of opening up a REPL and playing around

664
00:34:24,000 --> 00:34:26,000
and, you know, kind of trying out basic evaluations

665
00:34:26,000 --> 00:34:29,000
and learning a little bit of the syntax.

666
00:34:29,000 --> 00:34:30,000
And that's just not the way.

667
00:34:30,000 --> 00:34:32,000
I mean, there is TS Node,

668
00:34:32,000 --> 00:34:34,000
which is a little TypeScript REPL on top of Node,

669
00:34:34,000 --> 00:34:36,000
so I got that installed and played there too.

670
00:34:36,000 --> 00:34:38,000
But it was kind of fun as someone who'd used

671
00:34:38,000 --> 00:34:41,000
other transpiled languages just to go look

672
00:34:41,000 --> 00:34:44,000
and see how some of the basic constructs, like,

673
00:34:44,000 --> 00:34:46,000
I think it's kind of educational even for people to look at

674
00:34:46,000 --> 00:34:48,000
just, like, the basic class stuff, right?

675
00:34:48,000 --> 00:34:50,000
So, like, TypeScript adds types to JavaScript,

676
00:34:50,000 --> 00:34:52,000
but it also incorporates a lot of the newer standards

677
00:34:52,000 --> 00:34:55,000
and proposals and changes to JavaScript,

678
00:34:55,000 --> 00:34:58,000
so it just feels kind of like a better,

679
00:34:58,000 --> 00:35:00,000
more polished JavaScript.

680
00:35:00,000 --> 00:35:04,000
But I found it interesting seeing how some of those constructs

681
00:35:04,000 --> 00:35:06,000
turn into JavaScript, and you can learn a little bit.

682
00:35:06,000 --> 00:35:09,000
You know, if you're not familiar with the weird

683
00:35:09,000 --> 00:35:11,000
prototypical inheritance structures

684
00:35:11,000 --> 00:35:12,000
and the way JavaScript works

685
00:35:12,000 --> 00:35:15,000
and how you can sort of model objects and that sort of stuff,

686
00:35:15,000 --> 00:35:19,000
looking at, like, a basic class and its compiled code,

687
00:35:19,000 --> 00:35:22,000
it honestly explains a lot, which is kind of neat.

688
00:35:22,000 --> 00:35:24,000
And you can see stuff like what structures

689
00:35:24,000 --> 00:35:26,000
are purely at compile time.

690
00:35:26,000 --> 00:35:28,000
Like, interfaces, for example, in TypeScript,

691
00:35:28,000 --> 00:35:30,000
they don't, you know, there's no generated output.

692
00:35:30,000 --> 00:35:32,000
It's all just stuff that the compiler uses

693
00:35:32,000 --> 00:35:33,000
to better check for you.

694
00:35:33,000 --> 00:35:36,000
So you can tell they spent a lot of time

695
00:35:36,000 --> 00:35:38,000
thinking and designing this really well.

696
00:35:38,000 --> 00:35:42,000
I also went on my own TypeScript journey about a year ago.

697
00:35:42,000 --> 00:35:45,000
Would you write TypeScript over JavaScript?

698
00:35:45,000 --> 00:35:49,000
I know you like ClojureScript, so I guess it's assuming

699
00:35:49,000 --> 00:35:52,000
you were, like, verboten for writing ClojureScript, right?

700
00:35:52,000 --> 00:35:54,000
Right, yeah, yeah, sure, yeah.

701
00:35:54,000 --> 00:35:56,000
So I think the problem you have with JavaScript

702
00:35:56,000 --> 00:35:58,000
is you sort of got to pick things.

703
00:35:58,000 --> 00:36:01,000
You got to pick which JavaScript and which tools.

704
00:36:01,000 --> 00:36:03,000
And you'll still have some of that with TypeScript.

705
00:36:03,000 --> 00:36:06,000
It's not like it totally solves all of those problems.

706
00:36:06,000 --> 00:36:09,000
But I think it sort of is a nice standard,

707
00:36:09,000 --> 00:36:12,000
because worst case, right, it is just a superset of JavaScript.

708
00:36:12,000 --> 00:36:14,000
So you kind of get, you know, the compiler doing a bunch

709
00:36:14,000 --> 00:36:18,000
of the nice stuff, so you get all the modern standard stuff.

710
00:36:18,000 --> 00:36:21,000
And you can have, you know, not only will it do

711
00:36:21,000 --> 00:36:24,000
a pretty decent job of inferring types automatically for you,

712
00:36:24,000 --> 00:36:27,000
so you get a little bit of extra safety almost for free,

713
00:36:27,000 --> 00:36:29,000
and you can turn off all the, like, harsh flags

714
00:36:29,000 --> 00:36:31,000
if you really don't want that stuff to, you know,

715
00:36:31,000 --> 00:36:33,000
to prevent you from actually emitting JavaScript.

716
00:36:33,000 --> 00:36:35,000
Like, yeah, yeah, yeah, I know, my algorithm is unsound,

717
00:36:35,000 --> 00:36:38,000
but I just, in practice, never hit the edge cases.

718
00:36:38,000 --> 00:36:41,000
Then just spit this out for me, TypeScript.

719
00:36:41,000 --> 00:36:45,000
I think it is probably a pretty good choice for, you know,

720
00:36:45,000 --> 00:36:49,000
if you don't have a reason to stick to standard JavaScript.

721
00:36:49,000 --> 00:36:52,000
It's well-supported, there's types for lots of libraries,

722
00:36:52,000 --> 00:36:57,000
and it, you know, as they say, it's JavaScript that scales.

723
00:36:57,000 --> 00:36:59,000
I can see that being true.

724
00:36:59,000 --> 00:37:03,000
You know, it does provide a lot of the niceties

725
00:37:03,000 --> 00:37:05,000
of a statically typed environment that can help

726
00:37:05,000 --> 00:37:07,000
sort of formalize things if you've got a diverse team

727
00:37:07,000 --> 00:37:09,000
with different backgrounds and different skill sets

728
00:37:09,000 --> 00:37:12,000
working all on the same large code base together.

729
00:37:12,000 --> 00:37:14,000
It seems like that would be an area

730
00:37:14,000 --> 00:37:16,000
where it particularly shines.

731
00:37:16,000 --> 00:37:18,000
It would also work, I think, for anyone who's sort of

732
00:37:18,000 --> 00:37:20,000
interested in this stuff but doesn't, you know,

733
00:37:20,000 --> 00:37:22,000
isn't comfortable going a little more off the beaten path

734
00:37:22,000 --> 00:37:24,000
with something like ClosureScript or PeerScript

735
00:37:24,000 --> 00:37:27,000
or, you know, any of the more functional

736
00:37:27,000 --> 00:37:29,000
or just extreme variants of languages

737
00:37:29,000 --> 00:37:31,000
that transpile the JavaScript.

738
00:37:31,000 --> 00:37:33,000
You get all these extra layers of type stuff,

739
00:37:33,000 --> 00:37:37,000
and I think a big plus and a big negative for me personally

740
00:37:37,000 --> 00:37:39,000
is that the rest of it is the same, right?

741
00:37:39,000 --> 00:37:42,000
So, like, all the basic constructs, it's just JavaScript.

742
00:37:42,000 --> 00:37:45,000
So, it's not a huge paradigm shift

743
00:37:45,000 --> 00:37:47,000
except for all the extra stuff you can do

744
00:37:47,000 --> 00:37:49,000
with the fancier compiler.

745
00:37:49,000 --> 00:37:51,000
Now, that's not really, I prefer some, you know,

746
00:37:51,000 --> 00:37:53,000
like, functional methods of thinking.

747
00:37:53,000 --> 00:37:55,000
So, I did do a little bit of playing around

748
00:37:55,000 --> 00:37:57,000
with some of the libraries available for TypeScript,

749
00:37:57,000 --> 00:37:59,000
like, I think it's like just FPTS,

750
00:37:59,000 --> 00:38:01,000
and there's one called Peerify.

751
00:38:01,000 --> 00:38:04,000
I don't know what is the current state of the art

752
00:38:04,000 --> 00:38:07,000
or which is the best, but you can tell that those things,

753
00:38:07,000 --> 00:38:09,000
you know, people are interested in that stuff

754
00:38:09,000 --> 00:38:11,000
and have ported some of the ideas from Haskell

755
00:38:11,000 --> 00:38:14,000
and other more serious statically typed languages.

756
00:38:14,000 --> 00:38:16,000
I feel roughly the same way.

757
00:38:16,000 --> 00:38:19,000
It almost doesn't go far enough

758
00:38:19,000 --> 00:38:22,000
for me to not just use JavaScript.

759
00:38:22,000 --> 00:38:24,000
Although, interesting, so given, if we throw ClosureScript

760
00:38:24,000 --> 00:38:27,000
back into my question from about two minutes ago,

761
00:38:27,000 --> 00:38:29,000
you would just go ClosureScript every day, right?

762
00:38:29,000 --> 00:38:31,000
Yes, I think I still would.

763
00:38:31,000 --> 00:38:33,000
I enjoyed using TypeScript.

764
00:38:33,000 --> 00:38:35,000
I was legitimately impressed with, you know,

765
00:38:35,000 --> 00:38:37,000
I just kind of got the standard VS Code

766
00:38:37,000 --> 00:38:39,000
sort of dev environment set up,

767
00:38:39,000 --> 00:38:41,000
and it's really nice,

768
00:38:41,000 --> 00:38:46,000
and I like how flexible the type system is.

769
00:38:46,000 --> 00:38:49,000
It's nice not to just have, like, the nominal sort of typing

770
00:38:49,000 --> 00:38:53,000
that you get with C Sharp or Java

771
00:38:53,000 --> 00:38:55,000
so that you can really, it feels closer

772
00:38:55,000 --> 00:38:58,000
to really modeling the data and the structures of stuff

773
00:38:58,000 --> 00:39:00,000
so that you can easily have interoperability

774
00:39:00,000 --> 00:39:02,000
and you don't have to get obsessed

775
00:39:02,000 --> 00:39:04,000
with making individual types for all these little things.

776
00:39:04,000 --> 00:39:07,000
You can kind of play along that spectrum as you need

777
00:39:07,000 --> 00:39:09,000
when you have, you know, when you're in the prototyping stage

778
00:39:09,000 --> 00:39:11,000
and stuff's a little more flexible,

779
00:39:11,000 --> 00:39:13,000
and then maybe you further refine those ideas

780
00:39:13,000 --> 00:39:16,000
of what types you're playing with as your system solidifies

781
00:39:16,000 --> 00:39:18,000
later down the path to production.

782
00:39:18,000 --> 00:39:21,000
So for a type system, I thought it did a really good job

783
00:39:21,000 --> 00:39:24,000
of just not getting in the way,

784
00:39:24,000 --> 00:39:29,000
but I don't particularly enjoy many of the standard

785
00:39:29,000 --> 00:39:31,000
object-oriented approaches to modeling problems,

786
00:39:31,000 --> 00:39:33,000
so that's a little bit of a barrier,

787
00:39:33,000 --> 00:39:35,000
and it felt like I was kind of shoehorning

788
00:39:35,000 --> 00:39:38,000
some of those functional stuff on top.

789
00:39:38,000 --> 00:39:42,000
So I would probably try to play with ClosureScript more often

790
00:39:42,000 --> 00:39:44,000
or just stay in that camp, and I think it's interesting

791
00:39:44,000 --> 00:39:47,000
because some of the problems that these are solving,

792
00:39:47,000 --> 00:39:49,000
they've taken very different routes

793
00:39:49,000 --> 00:39:51,000
because, you know, TypeScript's going the,

794
00:39:51,000 --> 00:39:53,000
all right, well, you're going to have big files,

795
00:39:53,000 --> 00:39:56,000
you have huge projects that are hard to keep in your head.

796
00:39:56,000 --> 00:39:58,000
We're going to help you by adding this nice rigid structure

797
00:39:58,000 --> 00:40:01,000
of typing to help you have a more well-founded program,

798
00:40:01,000 --> 00:40:04,000
validate things, check your back for you.

799
00:40:04,000 --> 00:40:06,000
I think the ClosureScript approach is basically to say,

800
00:40:06,000 --> 00:40:07,000
I mean, there is lots of stuff,

801
00:40:07,000 --> 00:40:09,000
and we can get into that in a different episode,

802
00:40:09,000 --> 00:40:11,000
but the basic approach is just like,

803
00:40:11,000 --> 00:40:13,000
let's have less of this, you know?

804
00:40:13,000 --> 00:40:15,000
Like, let's focus on simplicity and have a small program

805
00:40:15,000 --> 00:40:17,000
that you can understand,

806
00:40:17,000 --> 00:40:19,000
and you can then avoid those same mistakes.

807
00:40:19,000 --> 00:40:21,000
Yeah, no, I think it would be great one week

808
00:40:21,000 --> 00:40:23,000
to do a deep ClosureScript dive.

809
00:40:23,000 --> 00:40:26,000
You could teach us all the glory of ClosureScript,

810
00:40:26,000 --> 00:40:27,000
and I'm not even kidding.

811
00:40:27,000 --> 00:40:29,000
It's probably, you know,

812
00:40:29,000 --> 00:40:33,000
I am slowly coming to your functional way of thinking.

813
00:40:33,000 --> 00:40:36,000
More and more, I'm just tired of managing state, basically.

814
00:40:36,000 --> 00:40:38,000
Yeah, I mean, of course you have state.

815
00:40:38,000 --> 00:40:40,000
I think the key is just to sort of refine

816
00:40:40,000 --> 00:40:43,000
your interactions with it and reduce the ways

817
00:40:43,000 --> 00:40:46,000
that you can have error and sort of centralize that state.

818
00:40:46,000 --> 00:40:48,000
Actually, I'll provide in the show notes,

819
00:40:48,000 --> 00:40:50,000
there's a great little video from a recent Closure conference.

820
00:40:50,000 --> 00:40:53,000
All about solving problems the Closure way.

821
00:40:53,000 --> 00:40:56,000
And it's not, the whole talk is in JavaScript,

822
00:40:56,000 --> 00:40:57,000
so I think it's pretty approachable,

823
00:40:57,000 --> 00:40:59,000
and it talks to some of those things of, you know,

824
00:40:59,000 --> 00:41:02,000
like why some of these simple and functional techniques

825
00:41:02,000 --> 00:41:05,000
might help you reason about your code better.

826
00:41:05,000 --> 00:41:06,000
Couldn't have said it better myself.

827
00:41:06,000 --> 00:41:09,000
Okay, so we had Elixir and TypeScript.

828
00:41:09,000 --> 00:41:13,000
So we had one very functional language so far, right?

829
00:41:13,000 --> 00:41:15,000
And one language that really, really wants you

830
00:41:15,000 --> 00:41:17,000
to embrace the OO side of life.

831
00:41:17,000 --> 00:41:18,000
Is that fair?

832
00:41:18,000 --> 00:41:20,000
Yeah, mm-hmm.

833
00:41:20,000 --> 00:41:21,000
So what are we thinking for next week?

834
00:41:21,000 --> 00:41:23,000
Do you want to go first, or do you want me to go first?

835
00:41:23,000 --> 00:41:25,000
Hmm, let's have you go first.

836
00:41:25,000 --> 00:41:30,000
Well, I'm very tempted to do Opsi, just as a funeral.

837
00:41:30,000 --> 00:41:33,000
But I won't, because it's dumb and wasteful.

838
00:41:33,000 --> 00:41:37,000
I mean, I'll try to venture down any path you lay forth.

839
00:41:37,000 --> 00:41:40,000
It's not worth it, and it's just not worth it,

840
00:41:40,000 --> 00:41:42,000
because it's, yeah.

841
00:41:42,000 --> 00:41:43,000
I'm actually going to say Kotlin,

842
00:41:43,000 --> 00:41:46,000
because I'm honestly curious what you,

843
00:41:46,000 --> 00:41:49,000
as a very functional-oriented guy,

844
00:41:49,000 --> 00:41:51,000
are going to think about Kotlin,

845
00:41:51,000 --> 00:41:52,000
which is obviously not functional,

846
00:41:52,000 --> 00:41:56,000
but I think you might find some things you like.

847
00:41:56,000 --> 00:41:57,000
Hmm, okay, yeah.

848
00:41:57,000 --> 00:41:59,000
No, that sounds great, actually.

849
00:41:59,000 --> 00:42:01,000
I'm looking forward to that.

850
00:42:01,000 --> 00:42:03,000
Now for you, Mr. Dominic.

851
00:42:03,000 --> 00:42:08,000
Hmm, I've been wrestling with a few ideas,

852
00:42:08,000 --> 00:42:10,000
and I think I'm going to keep you on a little,

853
00:42:10,000 --> 00:42:13,000
the little corner of the world you're in at the moment.

854
00:42:13,000 --> 00:42:16,000
But now it's your turn to get to play in the JavaScript space.

855
00:42:16,000 --> 00:42:21,000
So I say let's have you try ReasonML.

856
00:42:21,000 --> 00:42:23,000
ReasonML?

857
00:42:23,000 --> 00:42:25,000
Oh, I am Googling it.

858
00:42:25,000 --> 00:42:28,000
I actually don't know this ReasonML.

859
00:42:28,000 --> 00:42:30,000
Okay, okay, so what is this like that I would know?

860
00:42:30,000 --> 00:42:32,000
Is this a JavaScript alternative now?

861
00:42:32,000 --> 00:42:33,000
Yes, it is.

862
00:42:33,000 --> 00:42:37,000
It's a new syntax basically on top of OCaml

863
00:42:37,000 --> 00:42:40,000
that compiles to JavaScript.

864
00:42:40,000 --> 00:42:42,000
So where it has gotten a lot of adoption,

865
00:42:42,000 --> 00:42:44,000
it's kind of come out of Facebook.

866
00:42:44,000 --> 00:42:46,000
A lot of the people behind React originally

867
00:42:46,000 --> 00:42:48,000
have been working on this.

868
00:42:48,000 --> 00:42:51,000
So there's even a version of React that runs on Reason.

869
00:42:51,000 --> 00:42:53,000
Oh my God, it works with NPM?

870
00:42:53,000 --> 00:42:54,000
Yeah.

871
00:42:54,000 --> 00:42:56,000
And they have a weird version of Mario written in it?

872
00:42:56,000 --> 00:42:57,000
Okay, okay.

873
00:42:57,000 --> 00:42:59,000
There's a lot to like about ReasonML,

874
00:42:59,000 --> 00:43:01,000
and there's many similarities to ClojureScript.

875
00:43:01,000 --> 00:43:04,000
So I'm kind of using you as a guinea pig here

876
00:43:04,000 --> 00:43:05,000
to tell me what you think about it.

877
00:43:05,000 --> 00:43:07,000
Now this looks like it runs in the browser.

878
00:43:07,000 --> 00:43:08,000
Yeah, it does.

879
00:43:08,000 --> 00:43:11,000
And I'm sure you could run it on Node as well.

880
00:43:11,000 --> 00:43:12,000
I've not tried that.

881
00:43:12,000 --> 00:43:13,000
Yeah, I see it.

882
00:43:13,000 --> 00:43:15,000
I see they're running it in a Node app here.

883
00:43:15,000 --> 00:43:17,000
That's a quick start.

884
00:43:17,000 --> 00:43:18,000
All right, well, it looks,

885
00:43:18,000 --> 00:43:21,000
and this time I'm going to finish my assignment,

886
00:43:21,000 --> 00:43:24,000
and I'll give you a hint at what it's going to be.

887
00:43:24,000 --> 00:43:25,000
Ooh.

888
00:43:25,000 --> 00:43:26,000
Are you ready?

889
00:43:26,000 --> 00:43:28,000
I'm dying to know.

890
00:43:28,000 --> 00:43:30,000
This is pod racing.

891
00:43:30,000 --> 00:43:31,000
Wait, what?

892
00:43:31,000 --> 00:43:32,000
Tell me more.

893
00:43:32,000 --> 00:43:33,000
Okay, pod racing.

894
00:43:33,000 --> 00:43:34,000
You had me at pod racing.

895
00:43:34,000 --> 00:43:35,000
What are you making here?

896
00:43:35,000 --> 00:43:38,000
I don't know yet, but it's going to be amazing.

897
00:43:38,000 --> 00:43:40,000
And if you beat the pod racing,

898
00:43:40,000 --> 00:43:43,000
you're going to see the most important character

899
00:43:43,000 --> 00:43:45,000
in all of the Star Wars universe.

900
00:43:45,000 --> 00:43:46,000
Oh, I think I know.

901
00:43:46,000 --> 00:43:48,000
I think I know who that might be.

902
00:43:48,000 --> 00:43:49,000
It's C-3PO.

903
00:43:49,000 --> 00:43:50,000
Ah, that's right.

904
00:43:50,000 --> 00:43:51,000
Of course it is.

905
00:43:51,000 --> 00:43:53,000
That beautiful, shiny bastard.

906
00:43:53,000 --> 00:43:56,000
Or I might try to do one of those Advent of Code things.

907
00:43:56,000 --> 00:43:58,000
Yeah, we'll figure that out.

908
00:43:58,000 --> 00:44:00,000
Yeah, maybe we can both do a couple

909
00:44:00,000 --> 00:44:01,000
in a few of these languages,

910
00:44:01,000 --> 00:44:05,000
and they can serve as just a simple little translation of stuff

911
00:44:05,000 --> 00:44:08,000
and see how different techniques exist.

912
00:44:08,000 --> 00:44:10,000
Really, actually, if we're smart,

913
00:44:10,000 --> 00:44:11,000
you know what we should do.

914
00:44:11,000 --> 00:44:13,000
We should do the same thing every week.

915
00:44:13,000 --> 00:44:14,000
Yeah, you're right. We probably should.

916
00:44:14,000 --> 00:44:15,000
Just pick the same stuff,

917
00:44:15,000 --> 00:44:17,000
and we'll implement it in all the languages we try.

918
00:44:17,000 --> 00:44:18,000
All the languages.

919
00:44:18,000 --> 00:44:20,000
So I'll just pick something from the Advent.

920
00:44:20,000 --> 00:44:21,000
You pick something from the Advent,

921
00:44:21,000 --> 00:44:23,000
and we'll just keep it consistent.

922
00:44:23,000 --> 00:44:24,000
Okay, that sounds great.

923
00:44:24,000 --> 00:44:25,000
Ooh, I'm getting excited already.

924
00:44:25,000 --> 00:44:27,000
I guess that means we should probably wrap it up.

925
00:44:27,000 --> 00:44:29,000
We both have new languages to install.

926
00:44:29,000 --> 00:44:30,000
That's right.

927
00:44:30,000 --> 00:44:33,000
That's going to be it for today's episode of Coda Radio.

928
00:44:33,000 --> 00:44:36,000
If you'd like links to everything we talked about,

929
00:44:36,000 --> 00:44:38,000
well, just go to the show notes.

930
00:44:38,000 --> 00:44:41,000
That's coder.show slash 360.

931
00:44:41,000 --> 00:44:43,000
Over at coder.show slash contact,

932
00:44:43,000 --> 00:44:45,000
you can find all the ways to get in touch.

933
00:44:45,000 --> 00:44:47,000
We love your feedback.

934
00:44:47,000 --> 00:44:49,000
You can send us an email that way.

935
00:44:49,000 --> 00:44:52,000
You can head on over to our subreddit,

936
00:44:52,000 --> 00:44:55,000
or you can find us both on Twitter.

937
00:44:55,000 --> 00:44:59,000
I'm at Westpane, and Mr. Dominic, you're at Dumanuco.

938
00:44:59,000 --> 00:45:03,000
The whole network is there too, at Jupyter Signal.

939
00:45:03,000 --> 00:45:05,000
If you follow them, that's a great way to stay in touch

940
00:45:05,000 --> 00:45:07,000
with all the new shows that we release

941
00:45:07,000 --> 00:45:09,000
and find out when we're live.

942
00:45:09,000 --> 00:45:13,000
Another method for that is jupyterbroadcasting.com slash calendar.

943
00:45:13,000 --> 00:45:18,000
We're here almost every single week, right around noon Pacific,

944
00:45:18,000 --> 00:45:20,000
and the app will convert it to you

945
00:45:20,000 --> 00:45:23,000
in whatever time zone you happen to prefer.

946
00:45:23,000 --> 00:45:25,000
Thank you all for joining us.

947
00:45:25,000 --> 00:45:27,000
We'll see you right here next week.

948
00:45:27,000 --> 00:45:36,000
and we'll see you next week.

949
00:45:36,000 --> 00:46:01,000
and we'll see you next week.

950
00:46:06,000 --> 00:46:11,000
.

