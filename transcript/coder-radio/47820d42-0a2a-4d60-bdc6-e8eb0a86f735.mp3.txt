This is KOTORadio, episode 442 for November 26.
Hello friends and welcome back to Jupiter Broadcasting's weekly talk show, taking a
pragmatic look at the art and the business of software development and the world of technology.
This episode is brought to you by a cloud guru, with a cloud guru you get that cloud
playground, Azure, AWS, and Google Cloud Sandboxes on ACG's credit card, not yours.
Get certified, get hired, get learning at acloudguru.com.
My name is Chris, and joining me stuffed full of turkey is our host, Mr. Dominic.
Hello Mike.
Oh, trip to fan.
Isn't it something?
It really is great.
I mean, my favorite thing is if I do get a great post-meal nap, but as we record right
now, I actually, I have not had my Thanksgiving meal yet.
We're recording on a Friday, after Thanksgiving, a little early for us, and what I have done
so far, and I'm curious if you've ever done this, is I just completed last night the test
turkey.
Do you ever do these test turkeys?
No, what the hell is a test turkey?
I know you're not a big testing guy, you know, but think of...
Listen, I'm on a good clean show, no rabbit punches, no shots below the belt.
Come on.
All right.
I'm sorry.
I'm sorry.
Especially so at the top, right?
So I deployed my family as QA members, and we test out the same size turkey, the brine,
and the cooking method that we're going to use that year, because unlike a sane person,
I kind of change it up every year.
Last year, I smoked the turkeys.
This year, I want to oven roast them, but I don't want dry breast meat.
So I wanted to get the full workflow worked out and tested before production day when
family's around.
So last night, we cooked up the turkey and deployed it to the children, and I collected
their feedback and got their input, and I am actually going to make a few adjustments
before the actual production turkey is deployed.
Not only is it like reduces my anxiety about turkey day, but I never end up having enough
turkey meat as it is, because for some reason, like the chef, you know, I never get to eat
enough, and then everybody takes some home, right?
So this way, I get enough turkey to make sandwiches.
I also like that you have a turkey deployment system here.
Oh, it's all we got it.
You got to even monitor the timing of it, too, because I got to make sure that I repeat
the brine window.
I don't want to like over brine it or under brine it on production day.
That's a big deal, right?
And I'm also going to match the resting time.
So I've kind of come up with a post oven resting strategy where the turkey will rest.
Then I will actually kind of bring up the dependencies of the meal, like, you know,
your green bean casserole and warm up the stuffing, get all of the meal dependencies
figured out and ready to go, and then deploy everything at once.
Oh, my God.
That's my strategy.
You got to take this stuff seriously, man.
So it's like a turkey continuous integration system there.
Yeah, it definitely is.
Yeah.
Well, once about 2 p.m. hits, yeah.
This is actually the first year in a long time I did not deep fry the turkey.
And it's also, on a perhaps related note, the first year I haven't gotten burned.
So I think I like roasting it.
I think this was much less painful.
It was a lot easier than smoking, too.
You're hardcore with the smoking.
Yeah.
This year, a montage went around of everybody's turkey fryers catching on fire.
And I thought, oh, let's go easy this year.
Let's go easy.
It's very good.
I didn't try to fry it because I found out that the turkey was still par frozen in the
middle.
And had I put that in a vat of oil, it would have exploded for sure.
Those two things do not like each other.
Water and oil.
All right.
Well, so we have a batch.
We have a batch of productivity tips.
So you're welcome, everybody.
By the time you're done listening to this episode, you're probably going to work faster,
make money faster, and probably owe it all to us.
So you are welcome.
Your deal for this show on Black Friday is you get a bunch of great tips.
And Jose wrote in essentially saying, for the love of God, use a clipboard manager.
You got to use a clipboard manager.
There's a bunch of options out there for Windows.
I use Ditto.
And for Mac OS, I recently started using Maccy, M-A-C-C-Y.
Ditto for Windows looks really nice because the Windows clipboard is obviously very basic.
But you add this little gem on there, you're pretty much rocking a power clipboard.
And this is something that I think us Plasma desktop users often take for granted.
This comes built into the Plasma desktop, and it's a nice one, too.
And I feel very limited when I'm on other desktop environments that don't have a clipboard
manager.
So it's just a real simple one right off the top.
I also will admit that the clipboard manager, when I don't have one, is the thing that I
tend to install after I've already needed it.
When I've been in a situation where I'm like, ah, if I just had a clipboard manager, I would
have that.
And then I'm like, all right, I should go get one.
And that's usually the point in which I install one on a Mac or if I'm, God forbid, on Windows.
I have not gotten on the clipboard manager thing.
Although I use, in Slack, you have that stupid account that's like your name.
It's like you.
Sure.
I use that as a ghetto version.
But I'm looking at this Maccy app.
This seems like just a much better way to do this.
Yeah, it's one of those things that as the more you use it, the more you realize how
handy it is.
Often you're like copying several things in order and you'd like to go back and get something
or have a place to temporarily store something.
Yeah, absolutely.
Well, and you're writing code.
It's all from Stack Overflow.
So, right.
Of course.
Yeah.
Yeah.
You want to be able to go back a few Stack Overflows.
Listener Michael says, I use an Elgato Stream Deck for development, not for streaming.
So I recently got a Elgato Steam Deck and I also got it to work using the Steam Deck
UI, which we'll have a link to that.
He says it's great.
I have buttons that launch programs.
So I've dedicated buttons for programs and I've automated rather large test environment
using a button and I fire one button off and half a dozen processes start up.
It's everything I need to simulate the system I'm working on.
Yeah, I could probably have made some sort of keyboard shortcut system in Gnome or something
else, but I just prefer having dedicated buttons on my desk for these things.
It saves me so much time and effort.
Plus, if I ever do need to use OBS, it's great for that.
The Elgato Stream Deck, I don't know if you've seen this, but it's this little box.
It has like these little OLED screens on there and you assign each one of them a function
on your machine.
Now apparently it's working in Linux too.
Thanks to some of the work of some friends of ours on the Mac and Windows, you could
just use the Elgato software.
I would be, I guess the term is remiss if I didn't mention how much Elgato has come
up recently for different things.
Elgato really seems to be getting a name out there for making pretty good products out
there.
So I would imagine the Stream Deck is probably one of those, not to be confused with the
Steam Deck.
Stream Deck, Steam Deck, two different things.
One's a keyboard, one's a game console.
Gab found a really useful bumper-like app for Linux.
I've talked about it on Linux Unplugged before, it's called Junction.
Bumper is the app that lets you choose which browser a link opens up in.
Junction goes even further because it includes things like your default file manager, your
default terminal, your web browser, all that kind of stuff.
You can really take it to the next level as you'd expect with a Linux app.
And so that is called Junction and it's on Flat Hub.
Just go search for Junction.
These are like little tools over the years that I've kind of just started to let myself
use.
I used to be a big, it's only the defaults and then deviate from there kind of guy.
But in order to use GNOME or Mac OS or Windows, I've just sort of resigned myself to implementing
a bunch of these kinds of tools.
You can't use a Mac anymore, a new Mac with the notch.
You can't use a new Mac without Bartender.
If you do, I'm sorry, but you're just not going to see some of your icons.
So there's little tools like this now or iStat menu.
How the hell do you know what's going on on the Mac if you don't have iStat menu?
You're going to launch activity?
You don't because activity monitor is pretty much terrible.
Yeah, it's awful.
There's these kinds of things.
Another one, like on the Mac, when you click on the calendar, you don't get a calendar.
When you click on the clock, I mean in the menu bar, you don't get a calendar anymore.
You get some stupid sidebar loaded with junk from the phone.
It's nonsense.
And so I've got a stupid little app in my menu bar that I can click and it gives me
a stupid calendar.
Stuff like this that's just built into Plasma or most of the stuff built into GNOME or Windows
even.
So I've started resigning myself to using some of these apps.
So I'm using Junction and Bumper now and Bartender and extensions up the wazoo on my GNOME desktop.
It's not a good life.
It's not.
It's bad over here.
You're getting a nickeled and dimed for every little app.
You got to load half a dozen extensions before your work environment's even useful anymore.
They break with every major upgrade.
It's not a good life.
You know, I can't get around it, but maybe I could feel a little better because Danny
wrote in and mentions that he's made a brown Ubuntu style theme for Soos Plasma desktop.
Yeah.
There you go.
So if you want your personal color scheme to be as brown as hell on Plasma, we'll have
a link in the show notes made by listener Danny.
If you've ever wondered what brown can do for you.
That's right.
Vold wrote in with a couple of Python related productivity tips.
He says, I've heard you guys mention Poetry for Python.
Definitely worth checking out.
It gives you a smooth development workflow like building the project, running commands
in a managed virtual environment, publishing packages on an index server is easy.
It's got lock file.
He says there's a lot of value in it.
He also says that the tool talks works particularly well.
And then get this brace yourself.
We had not one but two people write in and say they use Nix OS and Nix OS as the VM inside
Mac OS as a host for development.
So they're using the tools in Mac OS to like build stuff and edit stuff in the Nix OS virtual
machine.
Nix OS is a distribution built on top of the next package manager.
And the big thing that it's known for is it uses a declarative configuration system.
You essentially go in there and you declare everything and then build it.
If you're looking for a reproducible environment, that kind of stuff, it's great.
He says each project that he has, has its own development environment with its own Python
version.
And he ends up saving a lot of time because he doesn't have to worry about broken states
between projects after doing a brew update or something like that.
And he says, last but not least, Emacs org mode for note taking introduce Emacs lifestyle.
There you go.
There's a plug in there.
You knew it was coming, right?
You knew Emacs was going to show up.
I'd have been disappointed if it didn't, you know, because, you know, you're going to get
VS code.
You know, you're going to get that.
So you got to get the.
You got to get the OG.
Mm hmm.
Mm hmm.
Mm hmm.
We also have a link in here to the advanced Visual Studio code for Python developers handbook.
This is a massive resource and I cannot remember if we've talked about it on the show before,
but it was sent in recently.
I know you've seen this.
It's a gold mine.
I use a bunch of, well, I use a few of them.
A lot of it's to taste, but these are basically productivity tips and how to kind of configure
VS code to be the ultimate Python IDE.
Take what you want and don't use what you don't, right?
That's what's nice about it.
All right.
We got an email from Nick and Nick points out that, look, if you got RSI problems, you
got productivity problems.
You're not getting any work done.
And that is definitely true.
And he says, what I discovered, which really changed my RSI problem for me, I got a tip
from a friend in the VFX industry.
And it so far has eliminated my pain.
He says, I've switched to using a Wacom drawing tablet instead of a mouse.
So he's blasting around his machine using a tablet and a mouse, you know, the Wacoms
as a result to use it properly.
He sort of also had to hold himself differently, you know, assume better posture, he says,
and sort of stopped slouching because when you slouch, you can't really use the stylus
very well.
And he says, I don't know if everybody will benefit from this like I did, but these tablets
have gotten pretty cheap now.
They have good Linux support.
And if you have RSI issues, you should give it a go.
It made a big difference for Nick.
Something to try out there.
Who would have thunk?
Who would have thunk?
I've definitely seen editors using these tablets before.
I never thought about using them just to mouse around the UI.
I also find for RSI, just switching up the type of input device.
So I have a vertical Logitech mouse, which is great for RSI.
And that works by you move your entire arm instead of just your wrist.
So that's something to go check out.
And then when I get tired of that, I switch to using a trackpad.
And then when that wanes, I switch back to the mouse.
And I also just kind of move around between a lot of different systems.
And that helps, I think, too, just it's not the same ergonomics and sitting the same spot
every single time.
I think that helps too.
As a result of my RSI issues over the years, I have gotten a lot more serious about my
keyboards, and I've started buying nicer keyboards.
And I stopped using like the butterfly keyboard.
And I've been using like the System76 launch keyboard, or I'll get a keyboard that's specifically
built for ergonomics.
We talked a bit about this when the show first came back, because we really kind of went
deep into keyboards for a bit.
And I ended up with like a split ergonomic keyboard.
I can't remember the name right now.
But Microsoft also makes a pretty decent nice split one.
And I have found those work pretty well for me.
And if it's not a split keyboard, something that's mechanical, that has some actual travel,
because I'm an old man, and I grew up in the 80s, where you actually typed on these large
IBM keyboards, these things that were like skateboards, and you really typed on those
things.
And that's how I learned how to type.
And so I bottom out really bad on things like the butterfly.
And so something like the launch keyboard, or my keyboards upstairs, or my keyboards
at home, they have a lot more travel, or they're ergonomically built so that they're a lot
better for me.
And I found that helps too, but I could definitely see taking it up to the next notch with a
tablet.
Have you made any tweaks to how you sit, or how you work, or any gear you use for RSI
issues?
Not in a long time.
I mean, I use the launch keyboard.
I'm pretty much the same here, mechanical keyboards.
The biggest change I made was a couple of years ago when I went all in on standing desk.
So other than when I'm doing the show, I'm usually standing.
And the only reason I don't stand for the show is I tend to list a little bit while
I'm talking.
So I'm such a lazy, out of weight slob that I have to sit down after I've been standing
for a while, because I start moving around, and then I run out of breath.
Like I can't help but pace a little bit and stuff, and it's good for the energy level.
But when I'm speaking into a mic, it's just enough that I'm breathing a little heavy.
Because again, I've got to go for more walks, which is something I work on.
But it seems like it's never enough.
Never enough.
System76.com.
Do you hear those bells are ringing?
It is our friends over at System76, and they are clearly in the holiday spirit with their
special power up holiday sale up to three hundred and twenty dollars off select systems.
This is what I wait for every single year.
I never fear this year.
They're including a sweet power up fanny pack, too, so you can, you know, you can really
rock it.
And they've got a nice little System76 power up logo on there.
It's a unique piece of swag.
Also kind of great.
You know, that laptop that Mike just got, the Pangolin, guess what?
It's on sale right now.
You can get it for one hundred dollars off.
So that should really put a little salt in Mike's wound right there.
As for the Lema Pro, yeah, it's on sale.
The Darter Pro, my favorite rig, the Oryx Pro and the Gazelle.
I love the Gazelle.
That's also on sale.
And the one that's escaped me, but I've always wanted to try because I think it'd be so great
in the studio set up or in the RV set up or for a home server, the Meerkat, that tiny
little itty bitty Linux computer is on sale, too.
Also great to see the launch keyboard is back.
Ship dates are in December.
What a gift that would be.
Honestly, if somebody gave me a launch keyboard for the holidays, I would probably consider
that to be near a marriage proposal.
I'd rather have that than an engagement ring.
I'm just saying, ladies, it's back in stock.
It's truly my favorite keyboard.
In fact, I have it right here in front of me right now.
I'll type I love the System76 launch keyboard.
Keyboard.
Keyboard.
Keyboard.
There we go.
See, I got to move that key right there.
But that's the thing you can.
You can move these keys around.
It sounds great.
These are actually the little slightly quieter ones.
Of course, I have it right up against the microphone here.
I say go for the quieter ones if you're in office space and if you're in your own place
and you don't care, go for the louder ones because they have a fantastic feel.
I got a chance to put my hands on both of them.
The launch is back.
It's available right now.
Could be a great chance to get that.
But head over to System76.com if you've been on the fence, if you've been thinking maybe
now is the time to get a piece of hardware but you're looking for a deal, well, this
is it.
This is the sale of the year.
You can get it from System76.com.
They're building computers in Denver, Colorado, born to run Linux and they have their Power
Up Holiday sale going on right now.
Just go to System76.com and if you pick something up in the notes, tell them Coder Radio sent
you.
Let them know.
You heard about it here on the show.
The guy sent you.
Do me a favor there.
System76.com.
The Power Up Holiday sale is on now.
Go get a computer born to run Linux, a keyboard, or maybe some sweet swag.
System76.com.
Mr. Dominic went to Pallet Town and practiced some sequel alchemy.
Boy, that sounds like the start to a really good kid's novel, but that's not actually
what it is.
No, no, no.
So I did one of my beginner posts again.
I always call them Pallet Town because I'm a big nerd and you know the old Pokemon games.
Okay.
So I've been writing these posts and talking about Python a lot and the thing that people
have been kind of asking about is SQL alchemy, which is, if you don't know, it's the ORM
that most Python uses, right?
So if you're doing like Django or fast API, you're probably using SQL alchemy.
So yeah, this is just a couple quick tips on dealing with common performance issues.
I give you a little bit of setup.
I don't go through the trouble of setting up the entire project because I just don't
think it's necessary, but a couple of things, right?
So we won't go into too much detail because if you're not a Python developer, you're not
going to care, but Python has hybrid properties, which are basically other languages might
call them computed properties.
You know, it returns a value based on arbitrary Python function.
The very, very dumb example of this you could do is like full name would be like self dot
first name plus space self dot last name.
It's actually a lot more helpful than that, of course, because you don't want to create
unnecessary database columns and have to track everything here and there, especially if the
value you want is dependent on other values on the table.
Good stuff.
You can read about all about that there.
Deferred columns.
Exactly what it sounds like.
You load a model.
You don't want to load the entire model, usually, especially if you have, let's say, a profile
image or something.
In my Pokemon example, I give the Pokemon's image.
You do a deferred column and it won't immediately load the image.
In my case, it doesn't have to be an image, right?
There are some caveats to that, but in the most simple cases that you'll probably be
getting, it's going to be one of the better ways to go for large data objects.
The opposite of that is load only, where you specifically tell SQLAlchemy which columns
you want to load off a table, ignoring the others.
Pretty basic if you've ever dealt with an ORM before, but I was surprised to hear how
many people found it.
I think it's maybe the syntax, especially coming from something like Active Record,
but how many folks were having trouble understanding kind of the fundamentals of SQLAlchemy.
The next one I'm going to do is relationships in Python.
Not like, hey, do you want to go out tonight relationships, but, you know, has one belongs
to kind of thing.
So yeah, if you want to keep reading along, that's fine.
I'm doing these SQLAlchemy posts and probably going to dip a bit into fast API, but I'd
say we probably have like one a month coming, maybe a little more frequently, depending
on how busy I am.
And we have a link to that in the show notes.
You can go follow along with the series.
I mean, you know, some of this is simple stuff, but some of it actually results in pretty
decent performance gains because, you know, you're not doing a bunch of unnecessary database
queries and things like that.
I guess they're actually good little tips.
Yeah, I would say it's stuff that's simple once you know it, but then if you actually
don't know it, I mean, I'm sure people can write in horror stories about how when they
were super junior, they didn't understand why their query took forever, right?
Isn't that the thing?
It's like you just don't know what you don't know.
And it's a cliche thing to say, but it is very true.
It's ignorance, and it's the very thing you require.
If you knew everything and how hard things were, you wouldn't get into it.
You needed ignorance, but it's also it's also a challenge and you got to figure to like
it's good for you, you know, like putting this stuff out there, get the name associated
with working with Python, get some Google juice, hopefully, although that seems to be
rare these days.
Not that I'm bitter.
Does that still work, man?
It just burns me up because we got shows that have covered stuff that goes back years, right?
But we never show up in the search results when you're looking for that stuff ever like
Google has never properly figured out how to index and weigh podcasts in the whole scheme
of things.
And they went all in on figuring out YouTube.
You know, if they've got anything relevant on YouTube, they'll give you an embed right
there on the Google search.
But say somebody wanted to know this information and they do a search for it.
You're hoping they'll hit the blog post, right?
But wouldn't it be great if Google was actually good enough to say, by the way, this same
author was over here giving a verbal explanation of it.
It just feels like we haven't evolved it at all.
And I find it incredibly disappointing because, you know, there's a bunch of good stuff out
there that you just can't surface, really.
It's a lot of great free content on podcasts, for sure.
One day we'll write a really powerful Python script that'll go through, transcribe it all
and convert it into blog posts, and then we'll make it big.
And then Spotify will put it behind the paywall.
Leno.com slash coder.
Go there to get $100 in 60 day credit on a new account, you go there to support the show.
It's Leno.com slash coder.
Leno's how we run and build everything for the last couple of years.
Since we've gone independent, we've deployed it on the node.
And like Jupiter broadcasting, Leno loves Linux.
They use it every day in every environment.
It's the core of their tooling.
And that was the basis that they used to build the node 18 years ago.
And now, well, now they're the largest independent cloud provider in the world.
And over that 18 year period, they learned a few things.
And when you, you know this, when you're in business, and you're focused on something
for 18 years, you start to get better at it.
And over that time, Leno learned that customer support, it's totally critical.
They've invested in the absolute best customer support team there.
It's a big part of why I feel like, even though I never had a major issue, if I ever did,
I really do feel like Leno's got my back.
That makes me feel like my business is going to stay online.
I'm going to be able to continue to do business.
Also Leno sort of reflects on us a little bit because of their high performance, because
their speed is just fantastic.
I mean, I'm talking 40 gigabit connections into the hypervisors.
They are their own ISP.
These factors all play into like when you access a service for Jupiter broadcasting,
it's fast.
It responds.
And they have data centers all around the world, 11 of them.
So on top of all of that, they've got some of the best performance out there.
They've got great features like object storage, cloud firewall, backups that could be baked
right in.
The monitoring on their dashboard is really nice.
You log in and you get a nice snapshot of exactly where your system's at right now and
where it's been at recently, like performance wise and metrics wise.
And then on top of that, you can plug into their API and pull some of that information
right down and you could even use their Linode command line client if you wanted to.
I mean, there's like a lot of ways you can get to that stuff.
So as you grow, there become more options for how you manage your Linode infrastructure,
like Kubernetes or Terraform, the API, pre-built images that you can actually design and store
for yourself and then deploy them again, which is a really quick way to maybe do some R&D.
There's a lot out there.
There's a lot you can choose from, but it's not overwhelming.
We've built a dashboard that makes it clean, understandable and easy to get started.
So much so that literally everyone on our team has proficiency with the Linode dashboard.
When do you see that ever happen in a group of people?
It's pretty rare.
You know, again, 18 years.
They've learned how to build these things.
They've learned how to do it right.
So why don't you go build something, maybe go learn something, try something for yourself
and support the show.
Go to linode.com slash coder, get that $100 in 60 day credit, kick the tires for yourself
and support the show.
It's linode.com slash coder.
We were doing this here show and I was debating, was I going to get an M1?
Was I going to wait?
Did I want to even tempt into the Mac side of things?
Because it's a very sticky ecosystem and it's not an ecosystem that necessarily plays great
with what I have now, although I've managed to kind of walk that line over the years since
I have an iPhone.
It's, it's not a huge, huge deal, not a huge gap, but I was hesitant.
So when the M1 was announced, it was to me, clearly the consumer level machines of the
16 gigs of Ram limitation, eight CPU core, those kinds of things.
Okay.
That looks promising, but not for me yet.
So I started saving up my coins thinking obviously there's going to be something more powerful
around the corner.
They'll rev the laptops.
Probably a great time for me to get one because I've got a 2016 MacBook pro here, you know,
with the full on like OG butterfly keyboard.
My Z key just started going out on me.
This seems like a good time to replace this.
It's a nice leap.
And I wanted to get my experience with an M1 machine.
I put the order in a little bit after I hem and hawed about a little too long.
So I was sort of on a long shipping delay.
And in the meantime, in that window of time, as a business, we made the decision, well,
we'll purchase a M1 Mac mini for testing purposes of Asahi Linux.
So we can provide full coverage of that when they launch an installer, which is any day
now to get Linux on the M1 Mac mini, they are using the M1 Mac mini for their development.
So it makes sense that that's probably your best bet in terms of hardware to run Asahi
Linux as an M1 mini, because that's what they're using.
So we picked one up and I set it up and I realized, oh, damn, I didn't need to wait.
This is plenty fast.
This is plenty fast for me.
The M1 mini was, it's a nice little piece of machinery.
It really is truly nice.
And additionally, it doesn't even show up in my power stats.
It uses such a small amount of power, I can't actually tell when the M1 mini is powered
on or powered off in my solar stats.
I can tell when the monitor's on, I can tell when the monitor's off, but I cannot tell
when the minis are off and the mini performance is fantastic.
So when I got the mini and I realized it was this nice, I thought, holy, the M1 Macs is
going to be mind blowing.
And I watched the YouTube reviews and the YouTubers, their minds were blown.
Unbelievable performance.
So I got an M1 Macs, I ordered it with 10 cores, 8 performance, 2 efficiencies, 64 gigabytes
of RAM.
And he said, give it to me.
I'm ready to have the ultimate in performance workstation.
I took it out of the box and my first impression was an odd sense of sad nostalgia.
Holding it in my hands took me back to the titanium power book.
And that was like my first years in IT support.
It was a very formative time of my life.
That back then, it was an aspirational machine.
I could never afford back then in my early twenties, a titanium power book pro.
It was this machine that like the directors and the executives had and I'd be working
on their machines.
It was squared off just like this one was.
And I couldn't believe the overwhelming like time travel sense of nostalgia that hit me
when I picked this laptop up.
It was completely unexpected.
And immediately it gave me a connection to this laptop like I don't have with any other
piece of equipment that I own.
I couldn't believe it.
And I opened it up and my next reaction was, oh, I missed the touch bar.
Really?
Yeah.
I'm a horrible speller.
And the autocomplete was a fricking lifesaver.
And also the emoticon autocomplete was nice, too.
I am like horrible at spelling.
And so having anything that could give me an assist was appreciated.
What I'd like to see is the full size F key row and then just put the touch bar above
that.
I know it's crazy, but that is a little crazy.
You know, I started using this thing, Mike, and I I was expecting to just be blown away
by the performance.
I mean, everybody's just been raving about the performance of this thing.
And that is not what I got.
I mean, it's fast.
It's probably the fastest computer I've ever owned.
I mean, it probably does everything I've ever done with a computer the fastest I've ever
done it.
And that's impressive in a laptop.
And it does all of this.
I've never heard the fans yet.
I've had it for three weeks.
I've never heard the fans.
I've had three VMS going with four monitors attached while I'm browsing the Web and watching
a movie.
And I still did not hear the fans.
What happens is it just has unlimited headroom, like I have not been able to max it out.
I do not yet have the sense of I've ever put this computer under load, even though I've
put it under what would have been substantial load for an Intel machine.
It is fast in that sense, but I have this sense that it's not like, oh, man, everything's
different now.
It's like, oh, everything's finally as fast as it should have been.
That's my takeaway from it is, OK, well, this is about as fast as they should have been
for years.
And now they are that speed, which is great.
But it doesn't feel like five or 10 years down the road like I was expecting.
It feels like what today should be.
And what we've experienced so far was just inadequacy.
And now they've made up for that, and that's good.
But I just dropped a lot of coin on this machine expecting this to be like a five to 10 year
machine for me.
And it will be a long term machine, no doubt about it, especially since I can't even break
a sweat on it right now.
But it wasn't that like fundamental, the land has just shifted for me kind of machine.
There are a few things that make it really nice, like the way it handles multi monitors
is nice.
It's really nice.
Four screens being powered by a laptop and it doesn't even get warm to the touch is impressive
and doesn't make a sound.
It's legitimately absolutely silent.
And I am extremely picky about this kind of stuff because I record audio and I cannot
hear the machine.
Do you feel like you got your money's worth given your I wouldn't say disappointed, but
somewhat not blown away by the speed?
If I think of it as a desktop, maybe not.
But if I think of it as a laptop that is kicking the ass of any desktop I've ever used, yes.
You know what I mean?
Sure.
So if it's like the one computer, it makes sense because it's almost taking to two purchases
with four screens.
I can actually be running two different Linux VMs simultaneously and still have like a Mac
app going and doing plenty of stuff.
That feels like a workflow to work for me for a long time.
Like that's that's pretty damn nice.
And the thing that I just am blown away is like when I unplug those three external monitors,
the screen like doesn't even flicker.
It doesn't even like spaz out in the slightest and just those monitors and those windows
just get moved to the main screen completely without having a spaz attack.
That's nice.
Yes, it's remarkable.
And I can just be like, oh, I need another screen and I'll plug it in to one of the USB
C ports and I've got another screen and it just turns on and the other screens don't
freak out and it doesn't completely rearrange everything.
That is really nice.
And it's plugging and unplugging for monitors is something I do because I've got a USB C
Thunderbolt 3 dock with, you know, a bunch of monitors hanging off of it.
And I am impressed with Rosetta too.
No surprise there.
The only way I can tell I am running an Intel app is it takes a little bit extra to launch.
You know, it takes a few bounces in the dock and then it launches where everything else
launches instantly.
So you can tell if it's native because there's zero load time and if it's Intel, there's
a little bit of load time.
I imagine that's your experience.
Honestly, I think things have been pretty fast for me on Rosetta.
But see, I basically live in VSCode and Terminal and Slack, right?
So that's been the interesting thing for me is Electron apps perform like they're native.
VSCode and Slack and Discord and Element, they have all felt like native code.
Just super fast.
Really good performance.
If that's not an endorsement, I don't know what is.
It's sort of ridiculous that you've got to buy a near $4,000 laptop to get good VSCode
speed.
Well, we should say that because you have the max, right?
So you're not on the bottom of the ladder here.
No, I went all the way because that was always my intention is to be responsible and save
my moneys up and then pull it all in one big go and hope that lasts a few more years.
I don't know.
We'll see, right?
Because I feel like I'm in a worse spot than you in one sense that there's not really anybody
I can hand this machine down to if this doesn't work for me.
I can't even swallow that cost.
I'm going to just have to use this machine now and I am happy with it.
I am happy with it.
I'm just not blown away with it.
I think a lot of this is it's nice to have ports, but I should have always had these
ports.
It's great to have high performance.
I should have always had this performance.
It's nice to have it be silent, but honestly, I feel like for the last few years, these
machines should have this is what they should have been.
And I think Apple could have gotten there or at least closer.
I hate to say this, but I got to suspect Apple intentionally held back the MacBooks knowing
this transition was coming.
The reason why I say that is when you look at some of like the tear downs that I fix
it and like the Linus Media Group did in there, you can see there's easy steps they could
have done to make the cooling systems better on these systems.
And Apple didn't.
And then surprise, Apple used that exact cooling system when they launched the M1 version of
the MacBooks.
And it just, to me, seems like maybe these systems had been held back one more iteration
so that way they could get the new keyboard in the ARM Mac, you know, they could get that
improved function key row in there, you know, all of that.
It just seems like maybe they sat on it for a little bit longer than they should have.
It makes every other machine I own feel slow.
It really and it's really bad here in the studio because these systems are like from
2017, 2018 and 2016.
So these systems down here really, really feel like dogs.
It's not just the CPU.
It's also the fact that they have this unified memory architecture and they have these ridiculously
fast SSDs or MVMEs.
As a work machine, it is a very solid performer.
Mac OS, I think, is what holds it back.
I think the reason why it doesn't feel faster to me is Mac OS.
Yeah, Mac OS feels like it's in this weird, I don't know if it's a transitional state
or it's something neglected, unoptimized.
It doesn't feel like it matches or it's getting the same amount of attention as the hardware.
The very first thought I had when I booted it up was, that booted just as fast as my
last Mac and my last Mac from 2016.
You know, that and then it shuts down at the same speed my other Macs do.
OK, great.
You know, my Linux box boots up faster than my brand new Mac does.
Not that that's a metric of performance, but it's pervasive throughout the OS.
I mean, Mac OS is pretty solid in terms of stability.
I think it's holding this hardware back now.
And I suspect that if I were able to put Linux on this and it was fully accelerated, I suspect
I would realize more of the performance gains in the hardware.
Because the way this manifests to me is functions like processing things, that is remarkable.
It's like decompressing files, compressing files, building an application, any of that
kind of stuff, encoding audio or media or video, but bonkers fast.
But anything that involves the OS, just as slow as it was on your previous machine.
And it's just like it's unoptimized code or I don't know what.
It just does things a slow way, an inefficient way, I don't know.
But it does feel like it holds it back a little bit.
Now the nice part is, is that applications themselves are really fast, web pages even
feel like they load faster.
And something that was surprising to me is my internet feels faster just simply because
my web browsers are faster, which is a funny thing.
But it's been a little while since I've experienced that kind of change.
And that you do get that kind of experience from this.
While it's not like blow you away, it's like, oh, wow, huh, even the web feels faster.
This is definitely a direction the rest of the industry has to go.
They have to respond to these machines.
It's going to be tough.
Yeah, Intel and AMD are working on it.
Samsung says they've got a ARM chip that's going to be just as good as the M1 soon.
I know like Carl over at System76, he's kind of excited about RISC-V and there is some
more developments in that area.
But when I look at even the fastest RISC-V chips, they're like a gigahertz.
And I don't know if that's not the full picture.
The thing that kind of special sauce about these Apple chips is that they've grafted
so much of the x86 instruction set on top of their chip.
I'm running an Intel app and an ARM app right next to each other.
It gets easier.
Yeah, I just this is impossible, but it's easier to run an Intel application and an
ARM application on the same system than it is to run a 64-bit app and a 32-bit app.
That's what they've done here.
They've made it simpler than just trying to have 32-bit and 64-bit apps on the same system.
And they're entirely different CPU architectures.
I'm hoping they go somewhere with macOS itself to, I don't know, modernize it.
I mean, take a few pages out of Katie's book.
I just don't think they can.
No, I don't think they want to either.
I think somehow I almost wonder if it's like an act of debate over in Cupertino, like what's
is iPadOS going to become macOS or what's the...
There's another kind of world out there where they want their systems to be kind of like
NixOS declarative, or they want to be able to deploy their desktops, their workstations,
and their laptops using things like Ansible or some sort of centralized management system.
And macOS sucks so bad at all that kind of stuff, right?
Like you're still in the era where you could mass deploy Windows and Linux workstations,
but then when it comes time to work on the MacBook, you're either all in on the Apple
management system or you're just bespoke setting up that MacBook.
Maybe you've got a base image and then you're configuring all the apps on top of that.
And it's the same for me.
Like I can kind of centrally manage the configuration of a lot of the settings of my Linux desktops,
but then the MacBook comes along and it's like, well, I'm just going to burn an afternoon
setting this one up.
I got to go download a bunch of apps.
I got to go get a bunch of serial keys for these things.
I got to do it all by hand every single time.
It's tedious.
It feels like for a professional, it's fine to have that to work that way.
In fact, sometimes it's even fun to kind of experiment with different stuff and do new
apps and try new things on each setup.
Like that's what I'm doing with this MacBook in general.
But if I wanted to deploy these things on the regular or if I wanted to be able to quickly
recover from some sort of hardware failure or hardware swap, it just doesn't seem like
Mac OS is really suited for that.
Then you got like, Windows has a Linux subsystem, Chrome now lets you run Linux apps.
It'd be really nice if Apple acknowledged that Linux exists and that people are deploying
to Linux servers in production.
Like just accept that you don't sell the XServ anymore.
Acknowledge your own iCloud data center is full of Linux boxes.
Maybe even recognize that your own engineers are on Macs and they're deploying on Linux
and could use a Linux subsystem or something, right?
Something that makes Docker less of a piece of **** on Mac OS.
Well, I think that's why Terminal and Rosetta work so well, right?
And if you remember when they first demoed the M1s, they even showed that use case off.
You know, for me, this last week, my work setup, because I was testing things on a Raspberry
Pi compute module, was my Macbook on the table next to me, a headless compute module.
And it was actually a pretty great setup because I was testing out different containerized
applications that I was using for benchmarking for a self-hosted segment.
And I was looking up the information on the Macbook, getting the URLs and stuff like that
and had VS code using SFTP to connect to the compute module so I could edit all my Docker
compose files and VS code hit save.
And then I set iterm to do drop down terminal like I do in Linux, which is awesome.
So I have like a Quake style drop down terminal and I would, you know, execute the Docker
up, Docker compose up and whatever and, you know, I start testing stuff and I realized
this is a pretty slick workflow and yeah, it sucks that I had to set up a separate machine
that was an actual Linux box that had actual software on it, but you know, it's a $35 compute
module.
It took me like, it took me like a half hour to get the thing set up and going and then
I, I've been using it for two weeks.
It's amazing.
Yeah.
It really worked really well.
So I mean, it's a, it's a dumb way to do it, but you could re you could recreate that
with like a, a VPS or something like our VM machine as well, I suppose.
In all, I know we've mentioned this before on the show, but I have to give an honorable
mention to Parallels 17.
I thought for sure I'd go on the new Mac and I'd use UTM, which is a free open source virtualizer
for M1 hardware and it seems like it needs further investigation, but let me say the
folks over at Parallels really hit it out of the park with Parallels 17.
This thing shows up as essentially pass through hardware to the Linux guest, VFIO GPU pass
through to the Parallels VM.
So Linux, Linux is like full on given it it's all like it thinks everything's full 3d accelerated.
And then what Parallels is doing is using the metal API to render the VFIO input that
it got from the Linux guest.
So you're getting a 3d rendered metal interface on top of that.
And it screams, I mean, I'm talking full screen 4k resolution, Linux desktop environment,
full 3d acceleration.
Things looking great.
I've got wobbly windows going just to see how far I can push it.
And it absolutely top performance.
The only downside is you have to use ARM images because if you want native performance, you
have the whole stack has to be ARM.
And there are less Linux ARM packages out there, but it's pretty, it's pretty good.
It's pretty good.
So you got to be willing to live with an ARM Linux desktop, but if you use Parallels 17
and perhaps other virtualizers do this as well, I have not fully tested it.
Once I got a rocking setup, I was like, why change the thing?
This is, I actually dropped like a good chunk of change for Parallels after I had what I
have described before as the fastest virtualized Linux experience ever.
And I've even used it with GPU pass-through before.
It is just as good as GPU pass-through, absolutely.
And that to me was a huge game changer because it meant I didn't have to like have a limited
experience when I try out the Linux desktop and a VM, if I want to just try something
for a couple of hours, I can have a really good full 3D accelerated experience.
Now I've still got my ThinkPad.
I'm still using that for hardware, laptop tests, but you know, to have a quick 3D accelerated
VM, yes, please.
Thank you very much.
Don't mind if I do at all.
And UTM looks great, but Parallels 17, it was for me.
Yeah, that's actually the same VM I use, but I have not tried it on the M1 yet.
So there you go.
That's my reaction to finally getting the M1 Max.
Guess my takeaway would be, if I have one, is just get the Pro chip.
If you get one, get the M1 Pro.
That makes sense.
Like what's taking advantage of the Max right now.
And you know, we're having an M1 love fest here, but just a friendly reminder, if you
need to use Visual Studio proper for Windows or older.NET development, the ARM chips are
a deal breaker for you, even in the magic of Parallels.
What would be a real game changer for me would be if I saw Linux ships with 3D accelerated
support on the M1 Max, then I would really be over the moon with this laptop.
It seems to me because of that's a very normal work case for me.
That's a major way that this is limited.
It's saved by the fantastic VM performance that is truly the best I've ever experienced.
And it doesn't even put a load on the laptop.
That's the other nice thing.
It's like penalty free virtualization.
I can have a VM going on a second desktop all day, all night, and I'm not penalized
for it.
There's still plenty of overhead.
So that's really good to see.
I hope as time goes on and Asahi Linux ports that this laptop will get even better and
it'll become even more valuable to me because right now I'm very much in love with the physical
hardware.
It has a very special place.
When I hold it, it still feels really special to me.
And the performance for doing processing is just, it's mind blowing, just held back by
Mac OS.
And I think Apple could address that, but perhaps I won't have to wait.
Perhaps the Asahi Linux team will address it.
I'd love to hear anyone out there's take if they've gotten one, if they have any tips
or experience, coder.show slash contact.
Now I thought maybe we were going to get a little hardware update from you, but it seems
like the journey continues on your end for your new hardware.
The journey continues.
I didn't get enough time with the holiday and the kid being off of school to really,
to really open up the Pangolin.
Next week for sure, I'll probably have a review up and I'm actually, spoiler alert, going
to be trying out an XPS 13 in Windows and Linux.
That's a thing, huh?
That's a thing.
Wow.
That's a thing.
One of the current ones, one of the new ones?
Yeah.
The brand new new ones.
Yeah.
Tis the season.
It's the end of the year.
Yes.
Very good.
Good.
I'll be, I'll actually be really interested to hear that because I've always really liked
the XPS 13.
I felt like that's a good little piece of hardware and also a really good value.
Yeah.
This is, this is one of the, I mean, I don't want to extend it cause we'll talk about it
next week, but.
Sure.
A purchase entirely driven by the fact that I can't successfully VM windows on the M1,
which is just becoming more and more important.
So.
Well, very good.
I look forward to that.
Also, thank you to our members out there.
Our Coder QA team who keeps this show going, supports the show and gets a limited ad feed
and the Coderly report every quarter at Coder QA dot co.
All right.
Coder QA dot co.
We'd love to have you support the show and thank you everybody who does go find Mike
on Twitter.
He's at Dumanuco and his company's at the mad botter ink.
Is there anywhere else you'd like to send people this week?
Go to Alice dot dev.
If you want to get rid of some legacy data and move it to something new.
I like it.
Alice dot dev for that.
I'm at Chris LAS on the Twitters.
Oh, the network's at Jupiter signal and the show's at Coder radio show.
Kind of getting tired of the Twitters.
You know what?
Join our telegram.
Jupiter broadcasting dot com slash telegram.
How?
There's also a matrix colony dot Jupiter broadcasting dot com.
If you know Matrix, that's the server.
Love to have you over there.
Links to some of the stuff we talked about today at Coder dot show slash four four two.
We're normally live on Mondays.
We did this one as a special on Friday, but we'll be back at our regularly scheduled time
and our regularly scheduled live day next week.
So join us at three p.m. Eastern noon Pacific at JBLive dot TV.
Thanks so much for joining us on this edition of the Coder radio program, and we'll see
you right back here next week.
