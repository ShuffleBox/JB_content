This is KOTOR Radio, episode 445 for December 20th, 2021.
Hello friends and welcome in to Jupiter Broadcasting's weekly talk show, taking a pragmatic look
at the art and the business of software development and the world of technology.
I'm old man Chris and joining me every single week is my host with a surprise, Mr. Dominic.
Hello Mike.
Hello Chris.
How are you?
I'm pretty good.
I got things I have to say, but I feel like you're kind of like in a special place.
I'm a little envious of you.
We got stuff to hash out this episode.
That's all I'm saying.
But I've been seeing some tweets.
I've been seeing some pop OS upgrade tweets.
I mean, you've been popping off.
I've been popping off.
I just feel like we got to catch up.
A lot's happened since our last episode.
It feels like two weeks of stuff has happened since our last episode.
And I see you tweeting about using VMware workstation.
I'm your Linux guy.
I didn't know about any of this stuff.
So here's what happens when you're doing a ton, like a ton of Visual Studio work, Xamarin
forms to UWP to Android because that's my life.
And Parallels is just laggy as hell and you've got a beautiful system 76 Pangolin that you're
supposed to be reviewing.
There's like sitting sadly on your kitchen island.
He's giving you a look and you find out you're going to be home for a little while because
you have COVID.
Oh no.
Cheers.
Breakthrough.
Hashtag unfilter show.
Oh no.
Yeah.
I decided to say, okay, let me daily drive the Pangolin and let me see what the world's
like taking everything I do, not making any exceptions, right?
You know, no switching.
I actually put the iMac pro in a box in the garage.
That's serious commitment.
I brought out one of my old 1080, not old, but it's relatively new, but 1080P view sonic
monitors.
It's just 24 inch to like use it with the Pangolin.
And one of the first things I had to do is get windows on there in a VM because for one
of my main projects right now, we're doing a windows application is Xamarin forms, but
it goes to UWP as well as Android with a flask Python backend.
So obviously it's great to have bolt systems on local host.
If you're, you know, building both the application and the rest service that was surprisingly
good compared to what I was getting on my iMac pro in terms of the performance of the
windows VM.
The only hiccup was parallels of somehow convinced windows to allow me to install windows 11
where VMware workstation windows 11 vomited.
So I installed windows 10 that's probably fine.
I guess the whole TPM, it doesn't fake it out or whatever, but honestly, I mean, I opened
windows.
I do the whole shared shared file system thing where the post OS can go into the guest OS.
So all my command line tools, all my get all that stuff is on Linux anyway, and it's basically
an entire OS just cause I need to run visual studio and the build chain.
It was actually better.
For instance, on parallels, I had to make changes to the little XML file.
It's the app config on windows because of the where the parallels handles the file system
VMware workstation.
No such problem.
Okay.
Just to have it clear.
You were doing parallels on windows, but when you switched to Linux, you also switched to
VMware workstation.
No, I was doing parallels on Mac to run windows.
Oh, oh yeah.
Sure.
Sure.
Okay.
Gotcha.
So then I went to the Linux host, which is Papa West 2110 and just a, I got a license
for VM workstation pro.
It's beautiful.
I truly believe Linux makes such a great virtualization platform because the kernel just has like
all the plumbing right there.
And if you have a virtualization program that takes advantage of that or submits their own
upstream stuff, it works pretty great.
And then you get all the advantages of snapshots and all of that, but what is the price of
workstation pro?
It's gotta be like a couple of hundred bucks, right?
It's a 30 day trial.
I have no idea, but I don't remember that much sticker shock.
I think it's like a hundred bucks.
It might be a license though.
It might be an annual like see now some people in the audience are going to listen to this
and they're going to say, Oh no, just use boxes or just use vert manager.
It's free.
But I just completely disagree.
I think if workstation is working for you and it gives you a workflow that seems efficient
and you can wrap your head around and it's reproducible, it's worth the a hundred bucks.
It's like a no brainer.
Well, so I did actually start with boxes.
Oh really?
Okay.
And the performance was kind of lousy.
Okay.
Like there was actual like visual tearing, but workstation, I'm sure there's ways to
configure it, but workstation pro out of the box windows ran.
I mean, I've just put it in a different workspace on pop and it is pretty much near what I would
expect from a, you know, windows laptop, right?
Like a lower end windows laptop.
Love that.
Not low, low end, but like, you know, the lowest thing I would buy a 16 gig laptop.
You might also in this setup be benefiting from like a newer GPU and a newer Intel chip
with updated, you know, virtualization support and stuff.
So not an Intel chip though.
Right?
So the Pangolin is a whole, a pure AMD system.
Oh, okay.
Kind of thing though.
But yeah, more just, you know, newer hardware that just works better with virtualization
because before it was an older iMac, right?
It was an iMac pro.
Yeah.
Well, nice.
I'm glad you found it.
Good.
I'm looking forward to hearing more about that in the future.
It sounds like maybe we'll be hearing a bit of a review down the road after you've had
a chance to try it out for a bit.
I hope so.
You know, this isn't where I want the show to go and I don't really want it to be a lot
about this, but you know, just hearing you talk about getting sick again, I just, at what
point am I allowed to get really angry because this is really screwing up our industry and
just one of many.
And this just got really personal because we have a get together planned here at the
studio on the second.
And I think just out of an abundance of caution to watch where this thing goes, because something
that's spreading exponentially is kind of hard for us to wrap our head around.
I think I'm going to punt that meetup to the end of January just to give us time to see
where things stand.
It sucks so bad because we have this whole event planned because we're moving up to Tuesdays.
We're launching our new internal server infrastructure.
You know, we wanted to have a potluck and do the whole thing, go the full nine yards
after a year and a half of no events.
And I think I got to cancel it and I got to at least move it and maybe cancel it again.
And you know, you're not feeling well.
You're back at home.
I hope you're feeling OK.
I just can't believe we're still in this position, man.
I'm getting angry.
Well, I will say this is my second.
I mean, we shouldn't turn this into the COVID show, but this is my second go around with
COVID.
And this time has been I had one night where I was I kind of sweat through the sheets when,
you know, not in the fun way.
Right.
How can I put it?
I feel like I've had a mild hangover.
Make your jokes here.
YouTube commenters for it's been a while.
I actually it turned out when we did the show last week, I already had it.
I just didn't know.
Yeah.
And I just got demolished like Tuesday night.
I was like down for two days.
So for the record, I'm you know, I have the vaccine.
I did the two shots.
It's too early for me to get the booster, they said.
And you had it once before.
And I've had it once before in which I took a stroke because I have a heart condition.
Yeah, I was very concerned when I was told that the test was positive because obviously
that's you know.
Yeah, it's frustrating because it's it's risking our health and it is Christmas.
Yep.
It's the family holidays.
So once again, that's all getting screwed up and canceled out again.
Another year or a I hope people out there are taking care of themselves and taking taking
the mental space they need, however they can, because this is getting frustrating.
And we appreciate the how it's, you know, it's worse for a lot of people out there.
It could be worse for us, too.
But one day we will do a live meetup and I will actually show up this time.
Man, I tell you what, I've been actually jonesing to get down to Florida because it's freezing
out today.
It's cold.
It's gray.
It's hot here.
Oh, well, Miami is the center of Bitcoin right now in the United States.
And Alexander writes in with an idea on how to pay open source developers.
He says, how do companies pay folks and projects for open source work?
And this is something I brought up before because I have tried as a business, Jupiter
Broadcasting, and when working with Linux Academy on multiple occasions to pay developers.
When I was part of a larger company, you couldn't just say, yes, send them a PayPal payment
or something like that.
That's not how businesses work.
They have accounting departments and they do invoices and transfers and stuff like that.
Well, Alexander has a solution.
He says, how about Bitcoin?
I can't believe I was thinking it.
I mean, I think Bitcoin and cryptocurrencies on the whole are less compelling than the
blockchains themselves are and just likely are just Ponzi schemes in the most cases.
But you know, I really couldn't help but realize that Bitcoin would solve this because he says
there's no middlemen, there's no PayPal, there's nothing else to say who can or can't get money.
All one needs is just a wallet, a piece of software.
I don't know how it scales with legal entities out there, but couldn't this just be a killer
use for cryptocurrencies, large companies paying open source projects for their work?
What do you think, Mike?
Would you be willing to, you know, say you were younger version of you hacking on an
open source project?
Would you be willing to take a bit of a Bitcoin as payment?
Yeah, probably.
Why not?
Oh, what?
Hold on.
Oh, whoa.
I just fell out of my seat.
What?
I mean, after the way we hounded Web3 on this show, I thought for sure you'd come on here
and tell me to eff off and that you wouldn't even consider it now to take a fractional
Bitcoin as a payment for just open source work.
I was already doing.
Why not?
I mean, I'm getting nothing.
Would you hold it or would you cash it out?
I mean, I can tell you what I did.
Did you have Bitcoin at one point?
I did have some Bitcoin coins, plural.
Yeah.
Yeah.
Which today I could buy a Tesla.
I'm not saying this to brag, because I was very early in the mining when the Bitcoin
was around 25 cents, and I may have at one point held 100 Bitcoin.
Every piece of hardware that I am actively using except for the launch keyboard was paid
for with Bitcoin years ago in the studios.
So I cashed it out when it was like around 30,000 or maybe less than that, 14,000, 15,000,
and I basically invested it in studio gear.
I was having a really good conversation with Dave Jones from the podcast index, which I'm
going to play the entire chat in Linux Unplugged on January 9th.
We were going on and on about Web3, but he gave me a pretty solid and interesting example
for a quote unquote Web3-like technology.
Now that's not really what he calls it, but you could probably categorize it as one of
those things.
But here's what it is.
It's called the Hive blockchain.
It's a separate kind of version of the blockchain, but here's what's so freaking cool about it
is it rapidly updates.
I think like every three seconds or so, and you could embed a JSON payload in the blockchain.
So what you get is a decentralized message bus that's updated every three seconds and
anyone can check in on it and receive the messages.
And what they're using it for at podcast index as a new decentralized way to update podcast
players when there's a new episode.
Because the issue today is that all of us have apps that are banging on the podcast
RSS feed server, you know, maybe every few minutes to see if there's a new episode.
And you're doing it for every show you have and you're doing it every time the app is
running or like in the case say Overcast or probably Pocket Cast and Apple Podcasts, there's
a backend server that's doing that scraping and then sending down like a JSON update to
your phone.
If you think about it, it requires something constantly refreshing an RSS feed to see if
there's a new episode.
That's how your podcast catcher knows.
And when you say have a hundred thousand listeners, that's a lot of people hitting your web server
just to check an XML file.
And so what they've done is they're using the Hive blockchain as a message bus to let
the podcast clients know without having to bang on each individual feed all the time.
And that's just one example of a way they can use blockchain technology in a kind of
cool decentralized database way.
But how will they get their dynamic ad insertion?
The other tech they're working on, I'll just talk about this briefly because of the rest
it's in the interview, but the other tech they're working on and they have it set up
already is using the lightning payment rails that are on top of Bitcoin.
They have it set up where you can have a podcast app that has a wallet and you throw a hundred
Satoshis in there, whatever it is, being a big spender.
You can configure the app theoretically to then pay out to the podcaster as you listen.
So it just pays based on how many hours you listen to that podcast, maybe a few cents
every hour, 10 cents, whatever, 50 cents, whatever you thought was appropriate.
And in the background, the app is just doing that over the lightning network and it's sort
of streaming it to the podcast host as you listen, which is an interesting, I don't know
if Bitcoin is the currency you want to use, but that idea, you know, you could set limits
say no more than $20 a month goes to the podcasters I like, but the ones that I listened to the
most that month, they're the ones that get some funding.
And you could see that kind of technology being applied in other ways.
And what's enabling it is that lightning network that makes the transactions super quick, instant
at the speed of light and does it for super cheap.
And there's no middleman taking a cut there.
It totally bypasses things like PayPal or Patreon, which means it's more censorship
resistant.
It means it's international.
It's truly, it's something that everyone in the world has access to.
It's a level playing field.
And that I like about it.
But I think it would really only work in countries where access to getting in and out of Bitcoin
is easy.
Like here in the States and other places, there's the cash app from Square, which just
renamed and it's so stupid simple, you wouldn't even know you're working with Bitcoin.
You just, you know, you hit buy $10, takes the money out of your checking account and
buys a Bitcoin.
And then when you sell it for $20, takes the money out of Bitcoin and transfers it back
to your checking account.
And it's all in a UI that's so fricking simple, you just wouldn't think that's what's happening
on the back end.
But they've abstracted out all of those layers of technology, the blockchain and Bitcoin
and the payment system and all of it, the ACH transfer.
They've abstracted it all the way into this stupid easy app.
And then there's apps like Coinbase and all these others that give people around the world
access to this stuff, but it's still not ubiquitous.
But it's better than the US dollar is probably at this point in terms of access.
So maybe Alexander, but I think you'd have to get the devs to to accept it.
Like I didn't expect Mike to go with it.
So maybe more developers would know.
I actually thought I actually thought it would be a bit of an argument, but maybe people
are seeing the value.
You know, it helps when something's close to $50,000 in value.
We also talked about VR last week, metaverse and crypto currencies seem to have some connections.
And we asked if VR was was really a solution, you know, that could be used further.
And I didn't know it at the time.
But after that episode, I learned that the Home Assistant project uses Facebook's VR
meeting software for all of their meetings and they have a virtual whiteboard.
And Paulus, the head of the project, says it's great because he can view the body language
of the participants.
And here's the other thing.
He says it's faster.
VR meetings are faster because you're just sending the data about positioning of objects
and stuff and the renderings happening on your end.
You're not streaming the video.
You're just streaming the positional information and then an audio feed along with it.
And so he says, we don't have the issue you always have where you're talking over each
other because the latency is just that much faster.
So that sounds pretty compelling.
And so they're popping on these Quest headsets and they're getting in these meetings.
Well, our handsome editor, Drew, wrote in with thoughts on virtual reality says, I was
skeptical about VR at first, but I got hooked once I started playing with the Quest 2.
For those of you listening that don't know, Quest 2 is a standalone VR unit.
Runs Android and you don't need to have it hooked up to a PC, although you can get like
a hundred dollar cable and hook it up to a PC.
Drew continues, while I play a lot of standing action games, which are great for cardio,
there are quite a few relaxing options too, with lots of virtual environments you can
just visit and essentially with Google Earth, you can visit anything.
And besides that, I'd also recommend looking into painting and building apps.
Sounds like Drew's been getting his chill on with virtual reality.
And then the Home Assistant project says that it's made them more efficient as a remote
software development team.
They're sitting around a table again, they have a whiteboard again, their laptops and
screens are in VR, their keyboard is in the VR space, so they can actually see their keyboard,
they can see their laptop screen in the VR space, and the latency is better.
And now, so this latest version of Home Assistant that just shipped, they completely redesigned
the main configuration screen and they collaborated on all of that in this VR Horizons workspace
thing.
Is there actually something here finally?
Is maybe freaking meetings one of the killer apps for virtual reality?
Oh, good.
Finally, an excuse to have more meetings.
That's exactly what we all need.
Oh, yeah, right.
And this time you're really trapped.
I just picture like, you know, a significant other or like a kid walking in on you two
with the VR headset strapped on and you're sitting there in like some intense meeting,
maybe even giving somebody a what for.
Wait, will the VR know if I have no pants on?
It might, man.
The one thing I thought about was like, well, what if we podcasted in VR?
What if we had a virtual studio, right, and you were just like essentially sitting across
from me at the table in VR?
Hmm, could be interesting.
And I could also see it for chilling out, just going to like some really peaceful beach
or something for a bit and pretending like I wasn't trapped in a gray hellscape.
What I would say is podcasting, you know, bandwidth hell is bad enough with audio.
Mm hmm.
Mm hmm.
I can only imagine to really produce a good VR show.
You'd think so, right?
Although they claim since it's not streaming video, it's only streaming the positional
bits that it actually uses less bandwidth.
So that it just reconstructs, it basically draws on.
Hmm.
Yeah, it renders on each side.
I mean, I'd be down to try it.
I'd definitely give it a go.
The thing is, you know, I went and looked at like a Quest and the Quest 2 with the upgraded
strap and you know that you get all in there and it's like 700 bucks almost, which is the
price of the one that actually hooks up to the computer and looks great.
And then like if you want headphones to go with it, those are another hundred bucks.
And by the time you're done, it's like 800 bucks for this thing.
And it feels like if I drop 800 bucks on a Quest 2, it's next month Apple announces their
VR unit and it's going to be better because it's going to have like an M1 in it or something,
you know?
You know, they're going to do this.
It'll be like a pair of glasses that really look like glasses with like an M1 Mini Max
Pro Xeon.
Probably not Xeon, huh?
But yeah.
I love it.
I actually think they're going to do a VR headset first.
I do.
I think it'll have like pass through cameras, but I think the way they're going to get it
at first is going to be like the Quest.
Only it's going to be the iPhone version of the Quest with Apple processors and Apple
screens and probably better hand tracking.
They probably won't even bother with the controllers at first knowing Apple, especially if you
have the watch.
I would imagine they could really get some good tracking.
And I think, you know, they'll have faster processor and they have a better app store
and they now have Apple Arcade so they can strong arm all those developers into making
a VR version pretty quick.
I think it's a foregone conclusion they're going to do it.
Ah, yes.
VR across the road so you can watch your friends get splattered by a Mac truck.
How could you imagine?
Laura's death is still trauma.
Linode.com slash coder.
Go there to get one hundred dollars and sixty day credit on a new account and you go there
to support the show.
And you guys know that this show is made possible by you taking advantage of our sponsor offers.
And the great thing is Linode is one we can enthusiastically endorse.
You know, we're customers ourselves.
It all started when I met them back at Texas Linux Fest and decided I'm going to go sign
up.
I had recently just transitioned off a previous cloud provider.
I was between providers and in the market, if you will, and I discovered Linode.
I didn't fully appreciate at the time but now I realize it makes a difference that they've
been around since 2003.
Eighteen years they've remained an independent company that's independently funded.
They are the largest open cloud provider in the world with eleven data centers around
the world serving nearly a million customers.
But what's great is Linode's mission remains unchanged.
Their focus remains as good as ever.
They make cloud computing simple, affordable and accessible.
If you've been setting up servers for eighteen years or if you've just gotten into this and
you realize you need some infrastructure or maybe you realize, crap, we are just totally
dependent on one cloud provider and we need to get into some kind of multi-cloud setup,
Linode is great for you.
And you could take advantage of our hundred dollar offer to really try it out, to actually
put it through a test and see if it works for you.
Because with a hundred dollars, you're kicking the tires for real.
It's like going to the car dealership and they let you have the car for a month before
you buy it because they're so convinced you're going to buy the car, right?
Only the great thing about Linode is they're the best in value out there.
They're literally thirty to fifty percent cheaper than the hyperscalers that want to
lock you into their platform.
And Linode still has all the good stuff.
I'd say their dashboard is easier to use.
Their API is clear and easy to understand.
They have S3 compatible object storage, which I just use the hell out of.
They're rolling out bare metal servers for those of you that need that.
They've got cloud firewalls, DDoS protection, a powerful DNS manager, super fast 40 gigabit
connections to the machines.
And then, it's like a cherry on top, they've got the best customer support out there.
And that's the part I hear about over and over and over again from the audience.
I think people's first impressions when they try out Linode is, oh man, it's fast, yeah,
Chris was right.
It is great.
This is nice.
But then, you know, you've been using it for a while.
You start depending on it and you mess something up or something goes wrong.
The fact that they have that 365 support, that first tier support, they don't punch
you to somebody else, they don't put you in a queue, they stick with you until it's solved.
That has made a difference with our listeners every single time.
But you really got to go check it out and take advantage of that $100 for yourself.
Go see what it can do for you.
Sign up today at linode.com slash coder.
Get that $100 60-day credit on your new account and you support the show, linode.com slash
coder.
First up, Rails 7 is here and this is the version we've all been waiting for.
I mean, this is exciting because what I'm hearing, like, the number one, like, take
it all down to one thing that I'm hearing about Rails 7, no node required.
That seems big.
Yeah.
It's so good.
Yeah.
You don't have to have that entire NodeJS stack, which we all know that I love, and
Ah, great.
This seems like a monumental release.
I mean, this feels like this is one that has caught the attention of just about everyone that has ever been in the rail space.
It's a big change, although in a weird way, it's a change, but in a lot of ways it's going back, not technically, of course,
but kind of in philosophy to the original Rails ideal, which was it is one framework, batteries included, of course, gems, blah, blah, blah.
But that one person can build a decent web application and be at least competitive on, like, an indie level, right?
And DHH, the creator of Rails, has a blog post to that effect, the one person framework,
where before its embrace of some of these more advanced, if we're going to be nice, JavaScript practices and frameworks, not so good.
In fact, I would argue that, like, doing an Angular application in a Rails application was actually harder than just separating it out
and doing, like, an Angular application completely separate from just a Rails backend.
But, of course, you lost some of the beauty of Rails, which is, like, the easy forms, the easy ERB.
I don't know what the hell happened.
I have thoughts that are a little controversial on what happened between, like, Rails 5 and 6.
Basically, the Ruby Rails community really felt they needed to chase the JavaScript hipsters.
Many of them are the JavaScript hipsters, right?
A lot of them moved on.
Some of them moved on to Elm, whatever.
People will do their own thing.
Elixir Elm, right?
I don't understand why anyone would think this is a bad release.
And I haven't seen any negative coverage yet, except for the lull Rails is slow.
But, sure, I mean, when it's not as slow as it used to be, Django is roughly as slow, I mean, if not slower.
I mean, it's a high-level framework, right?
So, yeah, I like that post, too, from David Heimner-Hansen, the one-person framework.
That really put it all in perspective for me, and so I'll link it in the show notes,
because he talks a little bit, too, about how some of the security work they did at Hay has influenced this release.
But here's the bit that I thought resonated with me.
He says, the part that really excites me about this vision, though,
is how much closer it brings us to the ideal of the, quote, one-person framework,
a toolkit that is so powerful that it allows a single individual to create modern applications
upon which they might build a competitive business the way it used to be.
And he also adds, there's so much to learn these days.
If you want to be an expert in all the latest tools and techniques,
the conventional path, as paved by solutions extracted from the giant tech companies,
is a journey akin to the Oregon Trail.
You might die of dysentery before you ever get to your destination.
RAIL 7 seeks to be the wormhole that folds the time-learning-shipping continuum
and allows you to travel grand distances without knowing all of the physics of interstellar travel,
giving the individual rebel a fighting chance against the Empire.
You simply can't play by the same rules against an opponent exponentially stronger than you.
Man, that hit me in the feels.
Yeah, I wonder if that doesn't hit him in the feels, too, right?
Yeah.
We spent a lot of time at TMB chasing the JavaScript love parade.
And honestly, it's just not that important.
And I get why, like, listen, if you are starting a Twitter account
and you want to juice your followers, just throw a hashtag JavaScript in there.
Is that all you got to do?
Honestly, there's too much going on to get to the same types of sites
we've been able to build for a long time.
Too many layers of complexity.
I can't tell you how many times, like, for barely comprehensible reasons,
Webpack would just vomit in large-scale Rails applications that I had to work on.
And it would always be something really stupid.
And the answer is like, well, why is this actually better?
Like, why the hell do I need Angular or React in my Rails app
when I could just do this in ERB and cue the old man to get off my lawn?
We need a clip of that.
We need some old man yelling about getting off.
Somebody go and send it to us.
That's going to be trouble.
I don't think many of the new JavaScript front-end development stuff
are really advancements or worth their cost
if you're building line-of-business applications.
I just don't.
I think there's too much overhead.
And the truth is, one of the biggest advancements in JavaScript has been the DOM.
So you don't need a giant framework to get a lot of it, right?
The DOM and some of the nicer CSS stuff.
And it's basically trivial to pull in a nice CSS library of controls or whatever
that I'm more and more just like server-side rendering with some client side,
like, on the DOM JavaScript love.
Oh, man, I love it when you talk like this.
I know that's very old man-ish.
No, it gets me excited.
It saves just a ton of, basically, pain in the ass time.
No, I think all that's right.
But there's just in the back of my mind, I'm wondering now,
you're kind of looking at this from the outside because you're kind of all in on the Python now.
So you're seeing this over, you know, you're seeing Rails 7,
but you're looking at it now probably from more of a Python perspective, I would imagine.
That's fair.
I mean, so it's funny because Dave, my CTO, and I have been having conversations,
as we do because we're friends.
But, you know, more and more we've been releasing these products, right?
We released Alice, we're releasing WinkWink, create your own report tool coming out January.
Cool.
Hopefully, and you can make fun of me when January turns into April.
So we did this backwards.
We wrote kind of a front end, like a GUI demo, you know, see if people actually want this.
And I started writing the backend in FastAPI.
And we're looking at this.
And we were thinking, you know, all of the products we're developing,
we've had years in Rails and now we have a lot of experience in Python.
But like, he comes from a C background.
And when I say C, I mean C.
Okay.
Right.
You can take your plus and your plus and shove them both.
Although he did do C++.
He just, I don't know, apparently him and Linus are like, they're on the same page.
C Maximus.
No, he doesn't like C either.
He loves the web.
He is a can I do it on the DOM.
Okay.
It's the DOM and jQuery is where he lives.
Sure.
Kids these days.
He's like, you know, everything's going to the web anyway.
And he's not wrong.
I mean, it's just to the art and business.
But the way we see things scaling for us is not close more.
I mean, hire us for consulting, please.
But it's not chase the trendiest thing and get more consulting work.
Long time listeners know that's not the best idea.
And, you know, I can just talk about the dark days of mobile.
It's release pieces of productized or big packages of code that provide some set of value to potential customers or clients.
And either build them a custom solution based on that, which is basically what Alice is.
Right.
Like, we're doing a lot of one time conversions, too.
But the bigger jobs are, okay, we're going to put this as like a core and I'm going to build you some custom dashboard or some custom.
Everybody needs a dashboard.
I don't know what to say.
So true.
Everybody loves a dashboard.
They love them.
Everybody loves a dashboard.
I love them.
Yes, they want dashboards.
So that kind of having our own products that are flexible enough to be expanded.
I mean, do you remember OpenCore?
Oh, I remember OpenCore.
Gather around, children.
Stay a while and listen.
I feel like if the world could like not be in a state of constant collapse, go like one year without some major disaster.
That'd be great.
It would be great.
I don't remember the last time there wasn't one, but OK, it would be amazing.
I think it was 2007.
Yeah, I think so, too.
I feel like we're going to end up in the state of we have some sort of possibly open source suite of tools,
and then we're doing custom proprietary development on top of it and licensing a managing service for those tools.
A management service, I should say.
I remember OpenCore was a thing and then it just died.
But is that not the ideal of the old OpenCore?
You know what? Can I say something that's going to get me in trouble?
Get in trouble.
I like the model.
Why did it die?
I know it's like if I put it on Reddit, people are going to say, I mean, people are mean on Reddit anyway.
But why is it bad?
You know, it got associated with a bait and switch, I think.
I think you had a few bad big actors, essentially, that did a little bait and switch with the whole like realize and so surprised.
Now this is proprietary.
Or the other one that was super common was, yeah, the core is open source.
But to get anything intelligible out of it, you have to go proprietary, right?
Like that was so common, especially in my I.T. career.
Like primetime, it was open core, barely functional with like this decrepit command line interface that will give you results out of a printer.
Or here's our big enterprise suite that everyone could use and ties in with your active directory and cost ten thousand dollars a year.
OK, it's horrible that you said active directory because that's basically where I want to make it.
Of course.
So I feel like I'm retreading some sins of the past year.
No, I mean, there's some fundamentals.
If the core is truly open, infrastructure person or application developer can go grab something, run it, do a proof of concept,
actually get value out of it and then convince upper management, the CTO, et cetera, to spend money on the commercial product.
I think that's when open core is perfect.
Yeah. Isn't that the point?
That's not what a lot of people did, though.
That's not what happened.
You know, like it became a bad word because a lot of people made it too crippled or they did a little bait and switch on like the oh,
it was open, but now it's closed source.
Version three, version two was open source, but version three is closed source or some of that going on.
Well, what about like IntelliJ, right?
Like PyCharm, IntelliJ is JetBrains.
Most of you probably know this, but they make a whole suite of IDs, right?
PyCharm is their Python one.
They have PyCharm community, which is effectively free.
It is free.
It's straight up free.
But if you want some of the snazzier SQLAlchemy features, which is the ORM for Python, or if you want, there's a bunch of stuff in pro that you don't get.
But is that not also a version of open core where it's like you can have the base model?
But if you want the fancy one, you got to pay.
You know, I think what you've tapped into is core application with a side of services.
And now the services are the proprietary paid thing.
We just don't call it open core anymore.
Isn't this like Red Hat's original business model?
Yeah.
And I know Red Hat, that became a, maybe we shouldn't go there, but I have also watched Revolution OS, which if you haven't, great documentary.
You can ironically buy it on iTunes.
That is actually pretty ironic.
I think that we should all make those businesses fail.
Considering some of the people in that.
I enjoy streaming those folks on my Apple TV via iCloud.
I bet they would just love to hear that.
I bet they would love that.
We're way off here, but this is just like, I feel pretty strongly that open core, maybe I shouldn't use the branding, right?
But like, it just isn't evil.
Yeah.
Because I don't know, the way I make money is that businesses that are exponentially larger than mine pay me a premium to do their work for them or solve what sound like maybe silly problems in some cases.
But it turns out they have some regulatory compliance issue.
And like, if they do not fix this problem, they will be fined.
I've heard numbers that would like make you cry.
There's so many solutions that businesses can be provided that are just simply come down to, they don't know how to do a thing.
Thing is actually quite doable, but they don't know how to do thing.
So they will hire you for your knowing how to do thing.
And that's really, that's it.
It doesn't have to be like you're converting a Cobalt application to a PHP application.
Like, it doesn't have to be something like that.
Right.
You know, I don't know what I was trying to think while you were talking about it.
I was trying to think of another term besides open core that you could call it, but I'm drawing a blank.
Maybe somebody in the audience knows.
I might not even ever say the word open core, right?
Because nobody who doesn't listen to Jupiter broadcasting or like Flaws Weekly is going to know what the hell that means anyway.
So you could get that old crusty IT guy who they loop in as a stakeholder and, you know, he's wondering.
But yeah, I agree for the most part.
In 2003, he got burned by Red Hat and he swears to God he'll never again.
But you know what?
When you tell him that you're a Seuss fan, it'll probably calm down.
A lot of those guys like Seuss.
So is he German?
Shortcut.com slash coder.
Have you ever really been happy with your project management tool?
I know, right?
Most of them are too simple and really not getting the job done or they're so wickedly complex.
You almost need a full time staffer just to manage that and prod people to use it.
That's how Shortcut is different.
It used to be known as Clubhouse, but now it's Shortcut and it's a lot better.
It's project management built specifically for software teams.
It's fast, it's intuitive, flexible, powerful and really all the other things you want to hear from me about it.
I mean, it truly is those things.
Let's just look at a couple of highlights.
I think probably a lot of you are going to appreciate the team based workflows.
Yeah, individual teams could just use Shortcut's default workflows or customize them to match the way you work.
And they have organizational wide goals and roadmaps.
You can make sure that work in there is automatically tied into larger company goals.
Are you starting to get it?
Get everybody rowing in the same direction?
One click to move from a roadmap, then zoom all the way out or zoom all the way into an individual.
It's pretty slick and it has tight VCS integration.
So if you use GitHub or GitLab or Bitbucket, Shortcut ties directly to them.
So you can update your progress from the command line.
In fact, I have to say the keyboard friendly interface is something that they've really focused on.
I think it's kind of one of their unique features here.
It's super easy to navigate Shortcut with the keyboard.
They have a power bar allowing you to do virtually everything without touching your mouse.
Throw that thing away.
You're not going to need it with Shortcut.
I think iteration planning is genius.
You can set weekly priorities and then let Shortcut run a schedule for you with a company burn down charts and all the other reporting you need.
Man, go give it a try today and see what you can do.
Shortcut.com slash coder.
Again, Shortcut.com slash coder formerly known as Clubhouse.
Now it's Shortcut because you really shouldn't have to project manage your project management.
So go check out Shortcut.
Shortcut.com slash coder.
My Pop OS workstation.
I don't know if you know this.
It was on Twitter a while ago.
Yeah.
I gave somebody some young guy System 76.
I think it was a lemur.
He listens to the show.
He can correct me to make me a theme that looks like Snow Leopard.
OK, hold on.
Hold on.
You gave someone an entire computer to get a theme that looks like a version of Mac OS from like almost a decade ago.
It gets worse.
Sir, your moment has come.
I will give you a TMB swag pack, including stickers and a fracture print of Alice or one of the other ones, whichever ones I have, or the Fourth of July Mad Botter guy.
If you can update me for 2110.
Because in my heart and I need the right background.
Very important.
In my heart, it is 2011.
And that was peak Mac OS.
I'm sorry.
It's 2010.
Wow.
That was a decade ago.
Geez.
Yeah.
That's kind of a long time.
Mac OS has been on the bad side.
To be fair, I'm not running like I run it every once in a while as a joke.
I will say one thing I do like about Nob.
It is very easy to switch between like the regular.
I don't remember what they call it, but the GTK Plus themes and something weird.
But there's nothing like on a bad day when you're feeling down, when the Ronos got its black polished boot on your throat.
To pretend like it's 2010 and that you are in the mountains of Tibet with a majestic snow leopard.
You know, in a lot of ways, a nice up to date pop OS reminds me of where Mac OS was a decade ago.
You know, if it was like an alternate reality and they just gone a certainly just kind of a different direction more towards power users and less towards general iPhone users.
Because that's really what happened, right?
I mean, come on, Carl Steve Jobs, just give him some weed, right?
He was so close.
Put down the LSD, pick up the pot.
Yeah, I think if you look at it in that way, like Linux desktop is getting in a special space.
The only thing it doesn't have that Apple was really, really great at is that complete developer story with all the APIs and the way to distribute in a single way and monetize.
Sure, it does.
It does, you think?
Absolutely.
But it's because I remember as much as, you know, I might dream that it's 2010.
It's not 2010.
I'll be careful here because somebody is going to say, well, you can't do this.
But for all the practical line of business applications that I need for my business and I've been doing this since I was 19 is when I opened my business.
So every customer I've had, except for a few specialty tablet apps or phone apps in factories on the enterprise side, all of those applications, but for the ones that actually connect to hardware could be done as web apps.
And I don't mean Electron.
I mean straight up in the browser because I think Electron, you're buying another set of problems that Electron is great.
I use Electron apps all day long.
I feel like Electron is in many ways a transitional technology.
And we're going to wind up somewhere else.
I agree.
In fact, pathetically, I have been liking a fricking note taking app that is a web app.
And I can't believe I'm saying that.
I'm not even talking VS code yet.
Check out blankslate.io.
I'm going to do it right now.
Blankslate.io and it's just a quick place where you can capture notes, supports markdown.
And if you have like Grammarly as an extension, Grammarly can also spell check it, which I don't get in my local desktop applications.
And it's I mean, as far as like quit note, it's nice.
It's actually kind of nice.
And I can't believe I'm finding myself taking notes in a web browser now.
I just oh, but it's you're so right.
Do you know how I take my meeting notes?
It's a cutting edge technology paper.
It's a it's graph paper from Amazon.
Thank you, Jeff Bezos, for undercutting Staples.
Yep. And field notes.
And it's number two pencils also from Amazon.
Because again, Jeff Bezos, I don't know who makes number two pencils, but he really did a job on them.
I got an email from field notes and I felt like it was the please save us from Amazon email.
I got the same email right here.
You know, I've got I've got paper notes.
That's how I like to like if you say something I want to remember, I write it down.
But I got to admit, I didn't make the order on field notes because I've got a stack from Amazon of notebooks here.
Well, I used to and in fact, it just expired.
I used to do the field notes annual subscription.
That's what I was thinking on.
They got real into not just doing the regular like dot or graph paper and doing these weird like calendar notebooks.
So I feel bad about wasting paper because like the environment and all that.
And also, I mean, I mentioned field notes on the show years ago.
I love them. I love their notebooks.
But back when I ordered it, they just did graph paper.
What I want is like a mix and match my own subscription.
I like their reporter's notebook when I go to events.
It's like, you know, looks like the old newspaper kind.
I hate that one. So I'll give you mine if I find it.
OK, I mean, I just like it at events outside of that.
Not a big fan because it doesn't fit very well.
I don't mind the designs if they want to put a design on there.
But I just want something I can write stuff down real quick.
That's what I want. Well, I like that they fit in my pocket.
Absolutely. So like if I'm at a meeting and I just seem to oh, this you know, you got to call Bob.
Bob's number is, you know, 505 505.
Yep. Six, I guess you can do that.
Yeah. So it's the same thing. I can't control what I get.
And for me, for whatever reason, if I were to tap that same information into notes on my phone, it'd be gone in 10 minutes.
I'd never remember it if I write it down. I got a good shot at remembering it.
I once tried to be a Evernote power user.
Yep. I owe an apology.
I actually did to an Evernote customer service rep because they said that they could understand my handwriting.
They could not. But much like the Catholic school nun when I was in the third grade, it just wasn't the case.
I got to say, speaking of recognizing handwriting and print the new text recognition,
I think they call it live text or whatever in the whatever they call it in the new iOS update and photos.
Oh, man. So handy. Last night I was paying for a toll.
I drove on a toll road here and they needed my license plate number.
So I knew I had a picture with my car in it from a couple of days ago and I couldn't remember my license plate number.
So I just opened up photos, scrolled up, found the photo, tapped on the photo,
zoomed in and just highlighted the text right off my just highlighted my license plate and copied it right off the photo and then went back over to work.
Yeah. And it does, man. And I went right back over and pasted it in.
It's great. I often need my DL number and I often don't know it.
Yeah. Or like you take a picture of a sign, you know, it'll OCR that text. You can go in and get that.
It's actually pretty nice. You know what else is amazing in the new iOS?
What? It's merciless desire to kill the Mac.
Yeah. We knew this was coming.
Apple has released Swift Playgrounds now with support for actually creating apps on the iPad.
It only took, you know, forever. A decade.
Did it take forever? I just want to say Snow Leopard is very fresh in my mind.
So I would maybe calm down with that. It's only version four. It's only you're right.
It's only version four. So maybe four years took about four years.
So the scariest thing about this update for me personally is that my son theoretically can create an app to automatically screw with my pets.
Now what now? My son has an iPad. Yeah. But how does he screw with your pets?
I don't know. Tell me about this. Also, did you get a new kitty?
We did get a new kitten. Yes. Oh, congrats. It's adorable. I saw the picture on Twitter. It looks cute.
Like all cats, she notices when Visual Studio Code is open and that I haven't saved the file.
Of course. Immediately jumps up. Oh, no.
And there's a barrel roll on the keyboard. Look at me.
I also made the mistake of keeping the little glowy kind of rainbow.
Oh, yeah. I got that. I got that going right now. It's nice.
I like the pinwheel one, but I've changed it because I don't want to think about Mac because, you know, the breakup just happened.
Oh, and it draws the kitty's attention.
Trying to get the cats like, bam, smack, smack, smack, smack.
Cats like launch keyboards. You heard it here.
So no, what my kid likes to do is because we have a senile dog and a little dog who's like hyper aggressive against other dogs.
He likes to play. I made the mistake of downloading a National Geographic app for him.
They have like a kitty app. Wow.
And in this app, you can play different animal sounds. Oh, sure.
And one of the sounds is wolves howling. Uh oh. Kitty doesn't like that.
No, the cats are like, whatever, if you're an idiot, it's an iPad.
But the dogs? The dogs are like ready to go to war. Oh, yeah.
They're snarling. They're growling. They don't understand what's happening right now.
So in many ways, my dogs are the junior JavaScript developers of the house.
Right.
And my kid is an Objective C developer who refuses to work and it's just being better than them.
I mean, you know, this is this is the sign that the Mac could be replaced one day.
It is. Yeah.
Until an iOS device could create its own apps. Now it can make iPad and iPhone apps and iPhone apps and Mac apps.
Now it has the ability to replace the Mac. Now, they're not going to be very sophisticated, obviously.
It's early days. But this was the first step required.
That's what they said about Swift.
Doesn't it just seem obvious that Swift Playgrounds is eventually going to do an iMovie Final Cut kind of split too?
It just seems like what's going to happen. And it will be some kind of Xcode for iOS.
Yeah, I think what's going to happen is Swift Playgrounds is, yeah, exactly like iMovie Final Cut.
You're exactly right. It's going to gain functionality, but not fast enough to take out.
And, you know, Xcode on Mac will always have a place for your worthy enterprise. Right.
Well, and your big builds with all the M1 cores in there and whatnot or whatever they're going to be, you know.
I've read some frightening speculative pieces on how much more they can get out of the M1 without significantly increasing thermals.
If that's true.
And I've also heard speculation of like iCloud Xcode build too, which would sort of normalize that.
I just want to talk about it. Can we talk about iCloud Core Data again?
Yeah, I wouldn't touch that with the authors.
Yeah, but they got to figure out something now because all these Apple employees are staying home.
You see this. Apple has delayed the return to offices indefinitely,
which the reason why that's remarkable is because Tim Cook was thrown down earlier in the year about people.
People said, we don't want to come back. And they said, and now they're saying, oh, OK.
Not only that, here's a thousand dollars to go buy yourself something nice.
One Tim Cook is like every Mac Daddy ever. Here's a thousand bucks, honey.
Here you go. Yeah. And I will take my cancellation now, please, because I'm tired.
I feel like this is the right choice, right?
I mean, as I sit here and according to my doctor, almost certainly infected with Omicron,
which is just running through Florida because Florida.
And I mean, it's actually running through everywhere. That's why I'm thinking about I got it.
I got to postpone my meetup on the second. Yeah, I feel like I don't know.
I mean, can I fry some? I'm not even going to call it bacon because bacon is fun.
Oh, man, I brought all this bacon in, but I understand you don't want to waste.
No, I'm going to boil some cauliflower. All right. Good for you. OK, I hate cauliflower.
All right. But, you know, when you boil it, it makes it real good.
I'm pretty sure we've got like two more years of this crap.
I was doing the boiling. Oh, I heard you. It was beautiful.
Two more years of the lockdown, no more getting together, meetups, no more business stuff.
Yeah, this I mean, we're not fully locked down. I mean, I'm locked down for another like four days or three days.
I don't know. I don't think we're going to be having.
Like, there was no DevFest Florida, which is my conference I look forward to every year.
I don't think there was no Linux fest Northwest, and I don't think there's going to be one in April.
Is there? No, I don't think so. I like how every week we end here where we just lament.
I know. I know. I got a solution. It better not be Facebook VR.
I don't know why a podcaster from Seattle had to be the one to figure it out.
But the solution just have everyone test every day, rapid testing every day.
You test before you go to the event. You test before you go into the office.
You test before you go to school. You test before you go to a meetup. And if you're sick, you stay home.
And the thing is, is even if the testing only gets you when you're at your peak infection rate, it's going to get you the next day.
It's going to get everybody who are at that event if they also are rapid testing.
So if even if the testing doesn't catch it on day one, if everyone is practicing rapid testing, you'll catch it real quick.
It doesn't involve anyone injecting themselves. It doesn't involve anyone taking any medication.
It's got nothing to do with any kind of mass or social distancing.
You just test yourself. You test yourself every single day before you go out.
And that's all it would take. And you just print up the way I did the test of the doctor.
Don't want me to come to the weird medical reasons that Mike has.
I would have had to go to the hospital and he didn't want me to go. But you can buy them.
Yep. Yeah, you can. Yep. You can have someone deliver them to your door for like three bucks.
I paid the guy more because I felt bad, but I think Joe Biden ought to send everyone a Christmas card with a batch of federally funded testing.
I mean, we're willing to spend trillions on everything else and we have testing sites that we're setting up. Those are expensive.
This would be a real practical solution and that would still let people function.
I know I'm a genius and I'm sure I've thought of every single dynamic.
So let's have our COVID moment. Let's have our feefies, right? Let's have our feelings.
I could not have imagined if you had told me and let's say 20.
Early 2019, if you had said, Michael.
Thinking about the business for the next couple of years.
You're not going to go physically see clients for two years.
And you're not going to do any shows, trade shows right now, but you'd say you're putting me out of business.
I'd say, did I die? Right. My expectation would be, is it because I'm dead?
We're in this strange, I almost feel like holding pattern.
Like everybody, like I saw all the articles about Apple allowing remote work.
What were they going to do? Yeah. A sick workforce can't work.
I mean, it's not it's not even him being benevolent, right?
It's covering his own ass. If they force everyone to come in and then everyone gets Omicron at the office, that's on Tim Cook.
And then they can't work for two weeks. I mean, I don't know.
Not only does it wreck the productivity, but it also is, you know, hey, man, you made us come back and then we all got sick.
I mean, that sounds well, and then you potentially have liability and lawyers are fun.
The only real ray of hope is that perhaps the symptoms are lighter.
My neighbor had it and they believe it was the Omicron variant and it was mostly a cold for him, you know, a few days.
Yeah. Get your bacon out. I got you here. Oh, I knew it. You see, I was going to put it away.
All right. Welcome to Morgan Dominic. It's like Morgan Stanley, but we killed Stanley.
OK, we're going to have a party in Seattle. We're going to do it up right with some Denver pot.
I don't smoke pot, but I understand that Chris does. It is joking.
What I like is you might as well. I mean, why not? You're flying in for a little while. Enjoy yourself.
It's a big part of the tourism thing here. The worst part is I'm with my I could technically get a card, but it's I just chose not to.
We're celebrating a merger, a marriage, if you will. A marriage, a beautiful relationship.
I will say it's kind of a May, December situation. Microsoft by System 76.
I'm sorry, what? What? Why? Either I'm delirious because I'm dying of Omicron and I don't know it or.
I think this is that will change the world. Sure would think about this.
Windows 12. Exclamation point underscore OS. I do like it. I do like love you guys.
I like it. And then you just you show up. It's a pop desktop with a Windows icon.
You double click it and it's the Windows 11 experience inside Pop OS.
You just flip that crap, right? So it's it's a Linux desktop with the Linux subsystem for Windows.
And I'm telling you, that would work for me. Tell you what. All right. Well, you know, it was a week or so ago.
We launched Jupiter Party where you can go to sign up and become a network member and get access to all the special stuff.
So you get Coder QA for this show. You get the self hosted post show. You get the Linux unplugged live show, which is like two shows in one.
And you get Linux action news totally ad free at Jupiter Party.
And you can sign up right now until the end of the month. Then it expires.
But if you sign up right now, you get two dollars off for a year.
So the cost of two memberships. But with that two dollar discount, it's even cheaper.
And all the shows are now ad free, all ad free in that feed.
So go enjoy it. Support the network and all that at Jupiter Party.
You can also give it as a gift. If Coder is your jam, we appreciate our QA members more than ever.
You know what? You guys have been awesome this year. Thank you so much to the Coder QA squad.
You can become a member of this show at Coder QA dot co and support Coder Radio directly.
We appreciate all of that. And even if you can't financially support us, we love it that you've listened, you've downloaded, maybe showed up live once.
Or maybe you've shared the episode or maybe you've sent us a feedback form at some point.
Or maybe you've just been silently listening and enjoying the show. Either way, we're tremendously grateful for you doing that.
So thank you very much. Take care of yourselves out there.
Mr. Dominic, is there anywhere you want to send people this week as we wrap up?
Alice Dot Dev, as always. And if you are the snow leopard engineer for Gnome, hook them up.
This is your moment. Cook me up. It's time for a refresh time. The time is now.
Jump into action, sir. You can follow the show on Twitter at Coder Radio Show.
The conversation is always going in our network telegram. That's Jupiter Broadcasting dot com slash telegram.
And then, yes, if you're matrix brave, there is a Coder Radio section in there.
Our matrix server is Colony dot Jupiter Broadcasting dot com. You can join in there. There's Coder Radio feedback and all that kind of stuff.
And of course, links to everything we talked about today, our feedback feed page and our RSS feed at Coder dot show slash four four five.
Thanks for joining us. See you back here next week.
