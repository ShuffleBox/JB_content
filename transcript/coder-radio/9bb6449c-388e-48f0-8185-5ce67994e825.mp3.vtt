WEBVTT

00:00.000 --> 00:07.000
This is Coder Radio, episode 367, for July 22, 2019.

00:30.000 --> 00:34.000
Hello, everybody, and welcome to Coder Radio,

00:34.000 --> 00:40.000
Jupiter Broadcasting's weekly talk show that takes a pragmatic look at the art and business,

00:40.000 --> 00:44.000
software development, and related technologies.

00:44.000 --> 00:50.000
My name is Wes, and I'm very pleased to be joined by the one, the only, Mr. Michael Dominic.

00:50.000 --> 00:52.000
Welcome to the show, Mike.

00:52.000 --> 00:55.000
Hello, hello, Wes. How have you been?

00:55.000 --> 01:00.000
Oh, my, I'm doing great. You know, it's going to be somewhere in the 80s today out here in the Pacific Northwest,

01:00.000 --> 01:04.000
and that makes most people freak out, but there's been a heat wave in the U.S.,

01:04.000 --> 01:07.000
so we're all sitting pretty cool over here.

01:07.000 --> 01:10.000
How are you doing over in the swamplands of Florida?

01:10.000 --> 01:14.000
I am good. I actually just got back from a trip.

01:14.000 --> 01:17.000
I've been traveling since 4 a.m., so it's great. It's great.

01:17.000 --> 01:21.000
But, yeah, I am back in the swamp where I belong.

01:21.000 --> 01:24.000
That says everything I need to know about you, Mr. Dominic,

01:24.000 --> 01:28.000
because you showed up here nevertheless, and I think we've all been there.

01:28.000 --> 01:31.000
We know how terrible travel can be.

01:31.000 --> 01:32.000
Yes.

01:32.000 --> 01:33.000
That doesn't stop you, though.

01:33.000 --> 01:37.000
So, an example of that, last week we had an episode that we pre-recorded,

01:37.000 --> 01:41.000
which I enjoyed a lot, called The Functional First, and that was you helping me out.

01:41.000 --> 01:43.000
I was traveling. You accommodated me.

01:43.000 --> 01:46.000
So, the theme here, Mike's great. The show goes on.

01:46.000 --> 01:49.000
You can find it all at coder.show.

01:49.000 --> 01:53.000
You can subscribe, follow the RSS, and it'll always be delivered right to you.

01:53.000 --> 01:58.000
Speaking of Functional First, we got some feedback on that episode over at our subreddit.

01:58.000 --> 02:03.000
Yes, there's a subreddit, coderradio.reddit.com is how you find it.

02:03.000 --> 02:05.000
Friend of the show Tyler writes in,

02:05.000 --> 02:08.000
This was my favorite episode in a long time.

02:08.000 --> 02:10.000
Well, thank you, Tyler.

02:10.000 --> 02:16.000
As a C++ developer working on a large, primarily object-oriented code base,

02:16.000 --> 02:22.000
I've been writing ever more C++ as just a pipeline of data transformations.

02:22.000 --> 02:27.000
As you guys mentioned, you can get a lot of benefit, even in an OO situation,

02:27.000 --> 02:32.000
from wrapping a functional core, so to speak, up in an object package.

02:32.000 --> 02:37.000
Tyler goes further and actually recommends two talks that really changed the way he thought about some of this stuff,

02:37.000 --> 02:42.000
and the first one is one I've seen and really love and should have linked in the last episode,

02:42.000 --> 02:44.000
so you'll find it in the show notes for this episode,

02:44.000 --> 02:49.000
and that's Gary Bernhardt's talk, Functional Core Imperative Shell.

02:49.000 --> 02:53.000
And I think that's, I mean, that's just a great name, and it kind of describes a lot of the idea.

02:53.000 --> 02:57.000
Yes, you have to have side effects. Yes, you have to do imperative mutable stuff.

02:57.000 --> 03:03.000
But that can all live at the edges, and you can have a core of nicely defined peer functions,

03:03.000 --> 03:08.000
and that talk goes a long way to explaining all that stuff I was rambling on about last week.

03:08.000 --> 03:12.000
If you're interested in C++ stuff, he also recommends one more link,

03:12.000 --> 03:15.000
which is Postmodern Immutable Data Structures,

03:15.000 --> 03:18.000
which talks about how some of this stuff works in the C++ world.

03:18.000 --> 03:24.000
Yeah, I think one of the key things, the key takeaways we were trying to get through to people was,

03:24.000 --> 03:29.000
in terms of dipping into functional programming, you don't have to drink the Kool-Aid

03:29.000 --> 03:33.000
and go full Haskell or F-sharp or Clojure or whatever.

03:33.000 --> 03:38.000
You can take some of the concepts and the methodologies, or the strategies rather,

03:38.000 --> 03:43.000
and implement them and use them in, again, in this case, C++, right?

03:43.000 --> 03:47.000
Yeah, and I really appreciate your inputs on that episode for that reason,

03:47.000 --> 03:52.000
because I get to use some languages, I choose to use languages when I can

03:52.000 --> 03:55.000
that make it a little easier to be functional first,

03:55.000 --> 04:02.000
but you're actually selling software to real people who don't care about the technical details, right?

04:02.000 --> 04:05.000
They just want a product from you that works, and you just got to make it happen

04:05.000 --> 04:08.000
in whatever language it already exists.

04:08.000 --> 04:13.000
Yeah, they don't really care about it at all, to be honest with you.

04:13.000 --> 04:16.000
All right, well, if you guys want to send us feedback like Tyler did,

04:16.000 --> 04:20.000
and we would love that, we always appreciate feedback at the Coder Radio program.

04:20.000 --> 04:25.000
We don't always have time to read all of it on air, but we do read all of it.

04:25.000 --> 04:28.000
We take your links, your suggestions, your criticisms all to heart.

04:28.000 --> 04:33.000
Coder.show.com is the easiest way to get in touch.

04:33.000 --> 04:38.000
Now, of course, you can also find us on Twitter, and, well, I follow you, Mike.

04:38.000 --> 04:40.000
That's my admission for the day.

04:40.000 --> 04:44.000
I noticed you tweeting about something I didn't really expect,

04:44.000 --> 04:47.000
and I'm sorry if that's a judgment call that is maybe misplaced,

04:47.000 --> 04:50.000
but you were tweeting about Emacs the other day.

04:50.000 --> 04:51.000
Yes, I was.

04:51.000 --> 04:58.000
So little known fun fact, my first editor I used professionally was, in fact, Emacs,

04:58.000 --> 05:01.000
or I should say, yeah, semi-professionally.

05:01.000 --> 05:06.000
And then I got a job, and the guy was, let's just say,

05:06.000 --> 05:12.000
not neutral on the VIM Emacs war in favor of VIM, and literally did not allow Emacs.

05:12.000 --> 05:16.000
Like, not at all, just not even to enter the building.

05:16.000 --> 05:19.000
If you worked, if you were on the team, you used VIM.

05:19.000 --> 05:23.000
Wow, that's, you know, obviously I've seen things like that

05:23.000 --> 05:25.000
for more complete development environments.

05:25.000 --> 05:28.000
You know, if it's like, okay, well, we all use IntelliJ on the team,

05:28.000 --> 05:31.000
and we've configured our environment, and we keep all the stuff in source control.

05:31.000 --> 05:36.000
I get that, and I mean, that could work for VIM, too, but it's a little unusual.

05:36.000 --> 05:37.000
Yeah, it's interesting.

05:37.000 --> 05:41.000
So I've been kind of looking at Emacs again just to say, like, you know,

05:41.000 --> 05:44.000
it's always been just an itch I've wanted to scratch.

05:44.000 --> 05:47.000
And you actually sent me a link to something called SpaceMax,

05:47.000 --> 05:49.000
which is pretty interesting.

05:49.000 --> 05:53.000
Can you go into a little bit of what is this versus, let's say,

05:53.000 --> 05:57.000
proper good new Emacs, or maybe vanilla good new Emacs is more fair?

05:57.000 --> 06:01.000
Well, if you weren't lucky enough to kind of grow up with Emacs

06:01.000 --> 06:05.000
and experience learning how to use it, how to write a little bit of Elisp,

06:05.000 --> 06:10.000
how to configure things, well, it's pretty foreign as an environment in 2019,

06:10.000 --> 06:13.000
especially if you're coming from something like IntelliJ or VS Code.

06:13.000 --> 06:18.000
SpaceMax is an Emacs distribution, I guess.

06:18.000 --> 06:22.000
It focuses on the evil layer, the VIM emulation.

06:22.000 --> 06:26.000
So as a VIM user myself, I thought that was great.

06:26.000 --> 06:29.000
They basically just ship you like a very nicely configured Emacs

06:29.000 --> 06:31.000
right out of the box.

06:31.000 --> 06:35.000
And I should be clear, if you're an Emacs user, power user,

06:35.000 --> 06:38.000
someone who knows what they're doing and has their own Emacs file,

06:38.000 --> 06:41.000
okay, maybe this isn't for you, you've already figured that out.

06:41.000 --> 06:45.000
But when I was trying to learn and kind of play with Emacs a little bit,

06:45.000 --> 06:48.000
one of the driving reasons was playing with Clojure,

06:48.000 --> 06:51.000
and Emacs being a Lispy sort of environment,

06:51.000 --> 06:53.000
that's where a lot of the best plugins were.

06:53.000 --> 06:57.000
But I didn't know Emacs from the back of my hand whatsoever.

06:57.000 --> 07:01.000
Thankfully, SpaceMax was there for me and made it easy to install

07:01.000 --> 07:04.000
all the plugins I wanted and comes with a nice dark theme

07:04.000 --> 07:06.000
right out of the gate.

07:06.000 --> 07:08.000
So tell me a little more about VIM emulation,

07:08.000 --> 07:11.000
because that seems to be the biggest pushback I got

07:11.000 --> 07:13.000
when I started talking about this on Twitter was,

07:13.000 --> 07:17.000
but every machine you're going to SSH into probably has VIM on it.

07:17.000 --> 07:22.000
So Emacs has Evil, which is the extensible VI layer for Emacs,

07:22.000 --> 07:25.000
and it basically provides a whole bunch of key bindings

07:25.000 --> 07:26.000
that you're familiar with.

07:26.000 --> 07:29.000
Wait, it's called Evil? That's amazing.

07:29.000 --> 07:31.000
The free software community generates some of the best names,

07:31.000 --> 07:33.000
I've just got to say.

07:33.000 --> 07:35.000
It's not going to be like picture perfect compatible,

07:35.000 --> 07:37.000
you know, like if you're a master VIM user,

07:37.000 --> 07:40.000
there's probably some things that Evil doesn't have for you.

07:40.000 --> 07:42.000
But if you're just looking for a similar editing environment

07:42.000 --> 07:46.000
with similar VI style movements, well, boom,

07:46.000 --> 07:48.000
just look no further than Evil.

07:48.000 --> 07:51.000
So if you'd like to try Emacs and not sell your soul,

07:51.000 --> 07:54.000
you could, I guess, use SpaceMax or GNU Emacs,

07:54.000 --> 07:57.000
but I personally am going to drink that demon blood and go Evil.

07:57.000 --> 08:00.000
Yes, and so Evil is like a module you can install.

08:00.000 --> 08:04.000
You could use SpaceMax or just install Emacs from the repo.

08:04.000 --> 08:06.000
And that's what it's like when you're using SpaceMax too,

08:06.000 --> 08:07.000
I should say.

08:07.000 --> 08:09.000
So like you just install Emacs like usual.

08:09.000 --> 08:12.000
Installing SpaceMax is basically installing their pre-configured

08:12.000 --> 08:14.000
configuration directory for you, right?

08:14.000 --> 08:16.000
So they've set that all up ready to go,

08:16.000 --> 08:18.000
and then they've got some nice documentation guides

08:18.000 --> 08:20.000
to kind of guide you through that.

08:20.000 --> 08:23.000
And I'm sure I sound like a complete novice to anyone

08:23.000 --> 08:26.000
in our audience who's a master Emacs user.

08:26.000 --> 08:28.000
So if you have tips, if you've got better ways

08:28.000 --> 08:30.000
that Mike should be exploring,

08:30.000 --> 08:33.000
maybe SpaceMax is a horrible abomination in your eyes.

08:33.000 --> 08:34.000
Let us know.

08:34.000 --> 08:38.000
If you're a master Emacs user, does that make you an Emaster?

08:38.000 --> 08:41.000
Oh, I think it does.

08:41.000 --> 08:44.000
I am kind of curious, like what do you use it on the day to day?

08:44.000 --> 08:46.000
What's your preferred IE?

08:46.000 --> 08:50.000
Do you like a text editor or you want something more full featured?

08:50.000 --> 08:52.000
Where do you fall on that spectrum?

08:52.000 --> 08:54.000
Yeah, I am pretty deep into the JetBrains tool chain,

08:54.000 --> 08:58.000
although I have been leaning on VS Code a little more,

08:58.000 --> 09:02.000
which is why I'm like, well, maybe I could go back to like Emacs or Vim.

09:02.000 --> 09:06.000
It's funny because the more and more I'm thinking,

09:06.000 --> 09:10.000
I can't decide if I still like the big heavy IDEs or not,

09:10.000 --> 09:13.000
because there is something just like very nice about, you know,

09:13.000 --> 09:18.000
being on, you know, on a gnome terminal or terminal

09:18.000 --> 09:23.000
and just, you know, Viming open or VS coding a file

09:23.000 --> 09:24.000
and working with it right now.

09:24.000 --> 09:27.000
The problem is what I've done to my VS Code,

09:27.000 --> 09:30.000
it's gotten to the point of its own weird IDE

09:30.000 --> 09:34.000
for a bunch of languages and now it's written in Electron.

09:34.000 --> 09:35.000
Yeah, it sure is.

09:35.000 --> 09:36.000
I mean, I will say as an Electron app,

09:36.000 --> 09:39.000
VS Code is one of the snappier ones out there.

09:39.000 --> 09:41.000
I think it's one of the best, right.

09:41.000 --> 09:42.000
This is probably going to be a failed experiment

09:42.000 --> 09:44.000
and I'm just going to go back to, you know,

09:44.000 --> 09:46.000
insert JetBrains tools here,

09:46.000 --> 09:48.000
only because I've been using them a long time, right?

09:48.000 --> 09:52.000
They have RubyMine, they have RubyMine and PyCharm

09:52.000 --> 09:53.000
are kind of the two I use a lot.

09:53.000 --> 09:56.000
I occasionally use Sea Lion,

09:56.000 --> 09:59.000
although I find that one a little less polished than the others.

09:59.000 --> 10:01.000
That's one of the ones I have not actually tried.

10:01.000 --> 10:04.000
Yeah, well, it's just because there's like such a wide variety

10:04.000 --> 10:08.000
of C and C++ out there that I think when I last used it,

10:08.000 --> 10:11.000
Sea Lion wasn't exactly as mature as, say, a RubyMine

10:11.000 --> 10:15.000
or obviously IntelliJ, their Cadillac Java IDE

10:15.000 --> 10:17.000
I use anytime I'm doing Java.

10:17.000 --> 10:19.000
Cadillac is probably the best term.

10:19.000 --> 10:22.000
I don't know about you, but I think I've met developers

10:22.000 --> 10:24.000
who couldn't run Java C on the command line

10:24.000 --> 10:26.000
to save their lives.

10:26.000 --> 10:30.000
Yes, yes, I have to say I kind of hate Gradle

10:30.000 --> 10:33.000
without IntelliJ, so there is that.

10:33.000 --> 10:36.000
Even though now it is less crappy and just like, you know,

10:36.000 --> 10:39.000
what is it, Gradle build, Gradle install, whatever.

10:39.000 --> 10:40.000
Yeah, yeah, you're right.

10:40.000 --> 10:43.000
So does that mean you're like a comfortable

10:43.000 --> 10:45.000
VI-style key bindings user?

10:45.000 --> 10:47.000
Yeah, I'm pretty comfortable with Vim bindings.

10:47.000 --> 10:49.000
I do use them occasionally,

10:49.000 --> 10:52.000
like my RubyMine is set up with Vim bindings,

10:52.000 --> 10:55.000
which is, of course, imperfect, right?

10:55.000 --> 10:58.000
I'm not sure that I need everything I'm getting

10:58.000 --> 11:00.000
with the full IDE, right?

11:00.000 --> 11:03.000
And some of it's kind of obnoxious.

11:03.000 --> 11:04.000
RubyMine's a bad example,

11:04.000 --> 11:06.000
because I actually think that's one of the better ones.

11:06.000 --> 11:08.000
Actually, I'm interested in that.

11:08.000 --> 11:10.000
So let's circle back after you're done.

11:10.000 --> 11:11.000
Sure.

11:11.000 --> 11:14.000
Like Project Rider, which is their,

11:14.000 --> 11:15.000
and I'm only saying JetBrains stuff

11:15.000 --> 11:18.000
because I predominantly work in their tools,

11:18.000 --> 11:20.000
is their.NET IDE.

11:20.000 --> 11:23.000
For some reason, in one of the more recent updates,

11:23.000 --> 11:25.000
actually, I think it is the last one,

11:25.000 --> 11:27.000
they suggest a change that violates

11:27.000 --> 11:29.000
the Visual Studio style guide.

11:29.000 --> 11:31.000
So if you make the change it suggests,

11:31.000 --> 11:33.000
because it thinks you're violating the style,

11:33.000 --> 11:36.000
and then you open it in Visual Studio proper,

11:36.000 --> 11:37.000
Visual Studio complains.

11:37.000 --> 11:40.000
And it's like the dumbest thing about casing.

11:40.000 --> 11:41.000
What I know is people are going to write in,

11:41.000 --> 11:43.000
well, you can change that and have your own style guide.

11:43.000 --> 11:46.000
I do like to keep it just to.NET Core's

11:46.000 --> 11:49.000
default style guide for obvious reasons.

11:49.000 --> 11:50.000
Sure.

11:50.000 --> 11:51.000
So that's like mildly annoying to me,

11:51.000 --> 11:54.000
and it seems like it was just a decision that got made.

11:54.000 --> 11:57.000
Again, I think that is a tool that's going to get better,

11:57.000 --> 12:00.000
but it is one I think is actually their newest implementation

12:00.000 --> 12:03.000
of their IntelliJ platform.

12:03.000 --> 12:04.000
And it's particularly on Linux,

12:04.000 --> 12:07.000
it can be rough if you're trying to do Xamarin.

12:07.000 --> 12:11.000
In fact, if you Google Xamarin Android Forms on Linux,

12:11.000 --> 12:12.000
you will see my little mad botter guy,

12:12.000 --> 12:15.000
because it's me, in the support forums,

12:15.000 --> 12:17.000
trying to work it out with other people

12:17.000 --> 12:19.000
and the JetBrains folks,

12:19.000 --> 12:22.000
because there's a bunch of breaking issues.

12:22.000 --> 12:24.000
Interesting.

12:24.000 --> 12:27.000
So I was also curious there, you were talking about RubyMine,

12:27.000 --> 12:30.000
and I'm most familiar with their products through IntelliJ,

12:30.000 --> 12:33.000
where they've implemented a ton of really fancy

12:33.000 --> 12:36.000
static analysis of Java to make it, you know,

12:36.000 --> 12:39.000
it's a much more interactive environment,

12:39.000 --> 12:40.000
even though Java is so static.

12:40.000 --> 12:43.000
And it can generate tons of code boilerplate for you,

12:43.000 --> 12:45.000
and it can jump to definitions,

12:45.000 --> 12:47.000
and all kinds of much fancier features.

12:47.000 --> 12:49.000
How does that compare to RubyMine?

12:49.000 --> 12:52.000
I mean, Ruby's a much more dynamic language.

12:52.000 --> 12:54.000
Does it have all of those superpowers,

12:54.000 --> 12:56.000
or does it go about it in a different way?

12:56.000 --> 12:58.000
It does, yeah.

12:58.000 --> 13:00.000
So we can do some pretty advanced refactorings.

13:00.000 --> 13:02.000
And the one dirty thing about Ruby developers,

13:02.000 --> 13:04.000
particularly Rails developers,

13:04.000 --> 13:07.000
is Ruby is a nice, dynamic language

13:07.000 --> 13:10.000
that everybody uses hardcore linters for

13:10.000 --> 13:14.000
to basically enforce style and a bunch of rules.

13:14.000 --> 13:15.000
I'll give you an example.

13:15.000 --> 13:18.000
The most common one is something called RuboCop,

13:18.000 --> 13:20.000
which I'll link in the show notes.

13:20.000 --> 13:23.000
Oh, I am familiar with RuboCop, my friend.

13:23.000 --> 13:26.000
We've waged a few battles back and forth in my day.

13:26.000 --> 13:30.000
It goes too far into what I would consider opinion.

13:30.000 --> 13:33.000
Every time, okay, let's take this tangent.

13:33.000 --> 13:37.000
Every time Ruby comes out with a new one-line way to do something,

13:37.000 --> 13:40.000
the containers of RuboCop,

13:40.000 --> 13:42.000
just like something happens to them,

13:42.000 --> 13:46.000
they feel like that has to be the correct way to do it.

13:46.000 --> 13:49.000
And then it complains constantly at me

13:49.000 --> 13:51.000
that I'm not using the new fanciness,

13:51.000 --> 13:56.000
which if you have code bases that are relatively a couple years old,

13:56.000 --> 13:57.000
that can happen quite a lot.

13:57.000 --> 14:02.000
And if you're OCD like me and want to get rid of all those warnings, yeah.

14:02.000 --> 14:05.000
RubyMine has its own linter for Ruby,

14:05.000 --> 14:10.000
and it is much more basically one of the accepted Ruby style guides.

14:10.000 --> 14:13.000
I think it's a pretty reasonable accommodation

14:13.000 --> 14:17.000
to what an experienced Ruby developer would say is the, you know,

14:17.000 --> 14:21.000
accepted style, where RuboCop is, I don't know,

14:21.000 --> 14:23.000
I feel like it's the apple of linters.

14:23.000 --> 14:25.000
It's like pushing you forward, right?

14:25.000 --> 14:27.000
It's trying to get you to like update everything.

14:27.000 --> 14:31.000
Ah, so RubyMine, it's easy to have the benefits of a linter,

14:31.000 --> 14:34.000
especially as you say in a dynamic environment,

14:34.000 --> 14:36.000
but it's not the same sort of, you know, with RuboCop,

14:36.000 --> 14:38.000
you either got to do a lot of kind of careful tuning sometimes

14:38.000 --> 14:41.000
or make sure you only stick to the stable releases.

14:41.000 --> 14:46.000
And you might have to do some work integrated into a project,

14:46.000 --> 14:49.000
but maybe with RubyMine, you kind of just start using it,

14:49.000 --> 14:52.000
get the benefits and not have to make dramatic changes across your team.

14:52.000 --> 14:54.000
Yeah, I mean, the one big advantage of RuboCop though,

14:54.000 --> 14:57.000
because it does go so far into stylistic things,

14:57.000 --> 15:00.000
you could basically just make it your company style guide

15:00.000 --> 15:04.000
and say we all use RuboCop and warnings are not acceptable

15:04.000 --> 15:08.000
so that you don't have different styles in the same code base.

15:08.000 --> 15:10.000
But that assumes like a greenfield project.

15:10.000 --> 15:11.000
Yeah, that makes sense, right?

15:11.000 --> 15:14.000
And maybe you've probably integrated it into your CI system

15:14.000 --> 15:17.000
so it'll warn you as you go through it.

15:17.000 --> 15:20.000
Yeah, well, you could actually integrate it into VS Code,

15:20.000 --> 15:22.000
in particular in Atom.

15:22.000 --> 15:25.000
And actually, I think there's a plugin for RubyMine for RuboCop

15:25.000 --> 15:26.000
if you want to go that way.

15:26.000 --> 15:29.000
You know, I'm sensing a CoderRadio future special here,

15:29.000 --> 15:32.000
which is Mike pimps your Ruby setup,

15:32.000 --> 15:35.000
because I wouldn't mind it and I bet there's some audience members

15:35.000 --> 15:37.000
who wouldn't mind it either.

15:37.000 --> 15:40.000
All right, here's the key, spinning rims.

15:40.000 --> 15:42.000
Ooh, shiny.

15:42.000 --> 15:45.000
You know what else I bet is pretty shiny, Mr. Dominic?

15:45.000 --> 15:47.000
Not that you have one, but if you did,

15:47.000 --> 15:50.000
well, it'd probably be your Tinder profile

15:50.000 --> 15:56.000
and it would brag about your lead IDE setup, no doubt.

15:56.000 --> 15:59.000
I saw some news I wanted to ask you about

15:59.000 --> 16:02.000
because, you know, the app developer that you are,

16:02.000 --> 16:05.000
Tinder has now joined the growing backlash

16:05.000 --> 16:09.000
against App Store taxes by bypassing Google Play, right?

16:09.000 --> 16:11.000
So, instead of going through Google Play

16:11.000 --> 16:15.000
using the credit card stuff, paying that 30% tax,

16:15.000 --> 16:18.000
Tinder has joined companies like Spotify and Netflix

16:18.000 --> 16:20.000
and saying, hey, give us your credit card,

16:20.000 --> 16:22.000
we'll bill you directly.

16:22.000 --> 16:23.000
What's happening here, Mike?

16:23.000 --> 16:27.000
And is this a sign that something's going to have to finally change

16:27.000 --> 16:30.000
in the industry, or are these just the big players

16:30.000 --> 16:33.000
who can do it using their muscle and getting away with it?

16:33.000 --> 16:35.000
I think both of those things are true, right?

16:35.000 --> 16:39.000
I mean, you know, I've been, I don't want to use the word railing,

16:39.000 --> 16:41.000
but I guess railing is technically true,

16:41.000 --> 16:45.000
for years about how 30% for small businesses like myself

16:45.000 --> 16:47.000
is just too much money.

16:47.000 --> 16:50.000
And in the past, I think it was a weaker argument than it is today

16:50.000 --> 16:52.000
because, like, it just does not cost that much

16:52.000 --> 16:54.000
to host individual apps anymore.

16:54.000 --> 16:58.000
And, you know, credit card processing with things like Gumroad,

16:58.000 --> 17:00.000
which is where I used to sell my Mac apps,

17:00.000 --> 17:07.000
and frankly, Stripe's API is awesome and very affordable to use.

17:07.000 --> 17:09.000
It's ridiculous, right?

17:09.000 --> 17:12.000
Like, having said that, you know,

17:12.000 --> 17:14.000
if I were to release a mobile app soon,

17:14.000 --> 17:16.000
I would certainly not go through any of this effort

17:16.000 --> 17:19.000
to avoid the Apple tax or the Google Play tax

17:19.000 --> 17:21.000
because I'm not Tinder, right?

17:21.000 --> 17:24.000
I'm not, who's the other guy, Fortnite's doing it too, right?

17:24.000 --> 17:26.000
Oh, yeah, that's a big one too, right?

17:26.000 --> 17:29.000
I mean, plenty of people spend on gaming on mobile.

17:29.000 --> 17:31.000
And they're doing it on Google Play though.

17:31.000 --> 17:35.000
And they're, like, when it's millions of dollars, that 30%,

17:35.000 --> 17:37.000
I definitely see where they're coming from.

17:37.000 --> 17:40.000
I do wonder, and I'm sure they'll never tell us,

17:40.000 --> 17:43.000
classic, like, startup business development thing, right?

17:43.000 --> 17:45.000
This is the business part.

17:45.000 --> 17:48.000
The harder you make it for someone to purchase something in an app,

17:48.000 --> 17:52.000
every dialogue box, every field you require them to fill out,

17:52.000 --> 17:55.000
peel off some percentage of your purchasers.

17:55.000 --> 17:56.000
Right, right.

17:56.000 --> 17:58.000
If I can just hit pay, give you money right now through Google

17:58.000 --> 18:00.000
that I've already set up, that's a lot easier.

18:00.000 --> 18:02.000
We're all sick of entering credit card details.

18:02.000 --> 18:05.000
Right, which is, like, the primary advantage of the App Store

18:05.000 --> 18:08.000
in app purchase system, which is why, like,

18:08.000 --> 18:10.000
if I were to release, say, an iPad app,

18:10.000 --> 18:12.000
it would absolutely use Apple's IP.

18:12.000 --> 18:15.000
I would love to know what the leakage rate is, right, for Tinder.

18:15.000 --> 18:19.000
Like, let's say, let's just play numbers, 20,000 people a month,

18:19.000 --> 18:22.000
I don't use Tinder, I'm married, so I have no idea.

18:22.000 --> 18:25.000
Do you know how it works? What do you buy in Tinder?

18:25.000 --> 18:28.000
A lot of those dating apps, it's premium plans, right?

18:28.000 --> 18:31.000
So you get some base feature amount, but if you want to say,

18:31.000 --> 18:33.000
you know, you swiped left on someone,

18:33.000 --> 18:35.000
you said you weren't interested, but you messed that up

18:35.000 --> 18:37.000
and you want the ability to go back and undo it,

18:37.000 --> 18:40.000
well, pay $5 a month and then you can.

18:40.000 --> 18:43.000
Right, so, okay, so it's like a LinkedIn premium account almost.

18:43.000 --> 18:44.000
Exactly.

18:44.000 --> 18:46.000
Okay, well, what LinkedIn does in this case, actually,

18:46.000 --> 18:49.000
is they think it's slightly cheaper if you buy it on the website,

18:49.000 --> 18:52.000
but I think for Sales Navigator or something.

18:52.000 --> 18:54.000
But yeah, I would love to see, like, what per, like,

18:54.000 --> 18:59.000
if out of 20,000 people, they would normally close the IAP,

18:59.000 --> 19:02.000
you know, 15 or 10 or whatever,

19:02.000 --> 19:05.000
what is the new number going to be forcing them to go to the website

19:05.000 --> 19:07.000
and enter their credit card and do it that way?

19:07.000 --> 19:09.000
That is a great question.

19:09.000 --> 19:11.000
What do you think the right number is, right?

19:11.000 --> 19:14.000
Google should get some cut, maybe, for enabling the platform

19:14.000 --> 19:17.000
and, like, providing a whole bunch of APIs and stuff

19:17.000 --> 19:20.000
and payment systems, and if 32 much is unreasonable,

19:20.000 --> 19:23.000
I mean, should it be some sort of sliding scale

19:23.000 --> 19:25.000
or just a lower flat rate?

19:25.000 --> 19:27.000
It currently is a sliding scale, right?

19:27.000 --> 19:29.000
So if you do a subscription model

19:29.000 --> 19:33.000
and it's the annual one on the second year, it's 15% now.

19:33.000 --> 19:35.000
The problem is, and what I've seen,

19:35.000 --> 19:37.000
particularly like I'm trying to find,

19:37.000 --> 19:39.000
I'm on a quest, and we could talk about this in another show,

19:39.000 --> 19:43.000
for a very specific iPad app that I want when I travel,

19:43.000 --> 19:45.000
and if I can't find it, I'm just going to write it,

19:45.000 --> 19:48.000
because I keep needing the same thing every trip.

19:48.000 --> 19:50.000
But this is an app you would really just buy

19:50.000 --> 19:52.000
and not subscribe to, right?

19:52.000 --> 19:54.000
I mean, I'll just, you know, use an example,

19:54.000 --> 19:56.000
like, podcast players, all the big ones now,

19:56.000 --> 19:59.000
are making you subscribe to your podcast app,

19:59.000 --> 20:02.000
which, coming from at least my position of, like,

20:02.000 --> 20:05.000
having been a more traditional Mac developer in the past,

20:05.000 --> 20:08.000
makes no sense at all to me.

20:08.000 --> 20:10.000
Right. We've entered this era of,

20:10.000 --> 20:13.000
everything must be a subscription service.

20:13.000 --> 20:14.000
And for something that makes sense,

20:14.000 --> 20:16.000
and you want, like, continual revenue

20:16.000 --> 20:19.000
with the presumption that improvements will be coming to the product.

20:19.000 --> 20:20.000
But for a lot of things, you're like,

20:20.000 --> 20:22.000
I just want to buy a hammer.

20:22.000 --> 20:24.000
I have it. I need to do this one thing with it.

20:24.000 --> 20:26.000
If you never update it again, that's fine.

20:26.000 --> 20:28.000
Give me the hammer. I'll give you 10 bucks.

20:28.000 --> 20:31.000
Yeah. Like, I am, and this is Mike's tangent.

20:31.000 --> 20:33.000
I had to buy Office for somebody,

20:33.000 --> 20:35.000
for a relative this past week,

20:35.000 --> 20:36.000
because, you know, they're older.

20:36.000 --> 20:39.000
They didn't know. They just didn't. They couldn't do it.

20:39.000 --> 20:40.000
They needed a hammer.

20:40.000 --> 20:44.000
I went to the store to buy Office, to Best Buy.

20:44.000 --> 20:45.000
A physical store.

20:45.000 --> 20:47.000
Like, you got away from your computer.

20:47.000 --> 20:49.000
You found your keys. You got your wallet.

20:49.000 --> 20:52.000
You got in the car. You drove to the store.

20:52.000 --> 20:54.000
Then you walked down the aisle and located

20:54.000 --> 20:57.000
the physical boxed version of the software.

20:57.000 --> 20:58.000
Is that what you're saying?

20:58.000 --> 21:00.000
No, because there was no boxed version.

21:00.000 --> 21:01.000
Wow.

21:01.000 --> 21:03.000
So you were just left looking like an idiot,

21:03.000 --> 21:05.000
asking, do you have software here?

21:05.000 --> 21:06.000
You know what it is?

21:06.000 --> 21:09.000
It's just a key code. It's just a code, a license key.

21:09.000 --> 21:12.000
That's all it is. You're buying like, it looks like a gift card.

21:12.000 --> 21:15.000
And the best is, the salesman was killing himself

21:15.000 --> 21:17.000
to get me to buy Office 365,

21:17.000 --> 21:20.000
instead of the traditional, you know, small business,

21:20.000 --> 21:22.000
whatever it is, home business license.

21:22.000 --> 21:24.000
I stuck to my guns.

21:24.000 --> 21:27.000
Even when installing the, you know, the standalone,

21:27.000 --> 21:31.000
perpetual, whatever year, Office,

21:31.000 --> 21:34.000
it still required you to sign in with a Microsoft account.

21:34.000 --> 21:37.000
Then after you had just spent 200 and something dollars

21:37.000 --> 21:39.000
on this license, it tried to hit you up

21:39.000 --> 21:41.000
to sign up for Office 365 anyway.

21:41.000 --> 21:44.000
Of course it does.

21:44.000 --> 21:47.000
It's ridiculous. Can't you just buy Excel?

21:47.000 --> 21:49.000
It's just crazy to me.

21:49.000 --> 21:53.000
I, as a Linux user, I appreciate some aspects of Office 365,

21:53.000 --> 21:56.000
just for letting me operate in that environment in a nice way.

21:56.000 --> 21:57.000
But you're right, like it's just,

21:57.000 --> 21:59.000
it was one thing when these were additional models,

21:59.000 --> 22:02.000
you know, like, oh yeah, or if it makes more sense for you,

22:02.000 --> 22:05.000
here's this other way to use our products and pay for it.

22:05.000 --> 22:06.000
Great, fine.

22:06.000 --> 22:09.000
It does feel like they're just trying to deprecate the,

22:09.000 --> 22:14.000
you buy software and come close to kind of even something like

22:14.000 --> 22:16.000
own it anymore.

22:16.000 --> 22:20.000
Soon, I mean, it might be a figment of our past imaginations.

22:20.000 --> 22:22.000
Exactly, exactly.

22:22.000 --> 22:23.000
So what do you, I'll put the question to you.

22:23.000 --> 22:25.000
What do you think the right number ought to be

22:25.000 --> 22:27.000
for the App Store percentage?

22:27.000 --> 22:29.000
That's a good question.

22:29.000 --> 22:33.000
I don't think I have a hard number to say.

22:33.000 --> 22:35.000
How do you value the platform, right?

22:35.000 --> 22:38.000
Like, how do we make a good accounting of all the services that are provided?

22:38.000 --> 22:40.000
Because, I mean, obviously, they just get to say, right,

22:40.000 --> 22:43.000
like it's their platform.

22:43.000 --> 22:46.000
Well, we should actually know Spotify and a few other companies

22:46.000 --> 22:48.000
are suing because of this very issue.

22:48.000 --> 22:51.000
Right, so we may see.

22:51.000 --> 22:53.000
You know, when it's a healthy environment,

22:53.000 --> 22:55.000
when there are enough options,

22:55.000 --> 22:58.000
when they're actually making good investments,

22:58.000 --> 23:01.000
then a slightly higher fee would make a little more sense to me.

23:01.000 --> 23:05.000
But if it's just sort of a monopoly tax, you know,

23:05.000 --> 23:07.000
like, well, you have to play on our game,

23:07.000 --> 23:11.000
and we have a store you have to use, so here you go, pay us money now,

23:11.000 --> 23:13.000
that feels a little bit worse

23:13.000 --> 23:16.000
and doesn't really help the end user very much.

23:16.000 --> 23:19.000
I mean, and the side of it that is a little weird is like,

23:19.000 --> 23:21.000
just because I mentioned Spotify,

23:21.000 --> 23:25.000
where you are now competing with the platform vendor who you rely on,

23:25.000 --> 23:28.000
and they are taxing you 30% to compete with them.

23:28.000 --> 23:32.000
That's where I think it almost gets weird.

23:32.000 --> 23:37.000
In a way, I kind of don't care as much as I used to about the 30% cut.

23:37.000 --> 23:41.000
I just almost feel like if you are in the business of being a platform vendor,

23:41.000 --> 23:44.000
you should not also be an application or service vendor,

23:44.000 --> 23:46.000
which I know is like never going to happen.

23:46.000 --> 23:48.000
But you see what I'm saying,

23:48.000 --> 23:51.000
like the temptation to screw over your competitors

23:51.000 --> 23:54.000
is just a little too juicy, in my opinion.

23:54.000 --> 23:55.000
Yeah, you're right.

23:55.000 --> 24:01.000
There are some weird, maybe even perverse incentives at play here.

24:01.000 --> 24:04.000
So, all right, there's another topic I wanted to pick your brain about,

24:04.000 --> 24:09.000
and there's, I think, another set of perverse incentives at play.

24:09.000 --> 24:14.000
You brought this up in our off-show production chat,

24:14.000 --> 24:19.000
and that's the recent little Twitter storm over 10x engineers.

24:19.000 --> 24:24.000
What's going on, Mike, and what's a 10x engineer?

24:24.000 --> 24:25.000
Oh, that's a great question.

24:25.000 --> 24:31.000
So, what's going on is some startup guy whose name I don't recall,

24:31.000 --> 24:34.000
but it's kind of not super important for the story.

24:34.000 --> 24:36.000
Shikhar Karani.

24:36.000 --> 24:42.000
Founders, if you ever come across this rare breed of engineers, grab them.

24:42.000 --> 24:45.000
If you have a 10x engineer as part of your first few engineers,

24:45.000 --> 24:49.000
you increase the odds of your startup success significantly.

24:49.000 --> 24:52.000
So, first off, I don't know if I'm a 10x engineer,

24:52.000 --> 24:55.000
but if you are a startup founder and you see me and you just grab me,

24:55.000 --> 24:56.000
I might punch you.

24:56.000 --> 24:58.000
So, just bad advice.

24:58.000 --> 25:01.000
Yeah, I mean, 2019, you got to get consent now.

25:01.000 --> 25:04.000
You have to, like, maybe a brief written contract,

25:04.000 --> 25:07.000
general grabbing agreement or something, right?

25:07.000 --> 25:09.000
Yeah, so, okay.

25:09.000 --> 25:13.000
So, he's asserting that there are these magical people called 10x engineers.

25:13.000 --> 25:16.000
I think we've all heard this term for years now.

25:16.000 --> 25:21.000
I kind of don't know that they exist,

25:21.000 --> 25:26.000
but there are definitely people who are more, like,

25:26.000 --> 25:28.000
I call them math savvy than I am.

25:28.000 --> 25:31.000
Like, I would consider you one of these people.

25:31.000 --> 25:36.000
Like, you are able to go more down into the kind of mathematics fundamentals of things

25:36.000 --> 25:39.000
or is that just because you use Clojure and that's how I see it?

25:39.000 --> 25:40.000
Well, maybe.

25:40.000 --> 25:45.000
Where I tend to work with a little more abstraction,

25:45.000 --> 25:50.000
except when I go insane and start coding to boards, but we won't worry about that.

25:50.000 --> 25:52.000
I don't know.

25:52.000 --> 25:53.000
All right, let's take a step back.

25:53.000 --> 25:55.000
Have you ever met a 10x engineer?

25:55.000 --> 25:57.000
And if so, like, what is the profile of that person?

25:57.000 --> 25:58.000
Who is that person?

25:58.000 --> 26:03.000
Yeah, and that's what a lot of the threads kind of spend some time trying to suss out.

26:03.000 --> 26:08.000
And honestly, when I first saw it, it was kind of hard to tell how serious all of it really was.

26:08.000 --> 26:11.000
Now, I do think we've all met people,

26:11.000 --> 26:14.000
and I don't even want to say people because time and context, I think,

26:14.000 --> 26:19.000
is one of the key parts that isn't brought up enough in this discussion.

26:19.000 --> 26:23.000
But I think we've all been in context where there have been people around us

26:23.000 --> 26:26.000
who were able to accomplish an incredible amount, right?

26:26.000 --> 26:28.000
Either they knew the right things, they had the right tools,

26:28.000 --> 26:31.000
they were able to combine all of that together,

26:31.000 --> 26:36.000
they defeated distractions or questions and delivered the remarkable work.

26:36.000 --> 26:41.000
And I think it's reasonable to want to assess how that happens.

26:41.000 --> 26:46.000
But it's probably dangerous to enable too much cult of personality.

26:46.000 --> 26:52.000
There also seems to be a little bit of, is there like an exploitation factor here?

26:52.000 --> 26:57.000
I mean, obviously, you know, the employee-employer relationship is also at play.

26:57.000 --> 27:00.000
It just feels bad to me to even have the label.

27:00.000 --> 27:03.000
And I'm almost looking at it from another perspective of, you know,

27:03.000 --> 27:08.000
I think I tweeted something snarky about this when somebody mentioned it to me.

27:08.000 --> 27:11.000
I said it to you in Slack, that's right.

27:11.000 --> 27:17.000
What I really hear is, you know, the hot thing used to be full stack a couple years ago, right?

27:17.000 --> 27:20.000
And what I really heard when all these startup guys would say,

27:20.000 --> 27:24.000
I need a full stack engineer is I don't want to pay a back-end and a front-end engineer, right?

27:24.000 --> 27:27.000
I would like two jobs done for 1.25 or one.

27:27.000 --> 27:30.000
Right. I'd like to pay, yeah, approximately a little bit maybe,

27:30.000 --> 27:34.000
a little bit more maybe than one salary and do everything that I need, please.

27:34.000 --> 27:36.000
So, okay.

27:36.000 --> 27:41.000
You know, there definitely is the type of software developer who is very good at coding.

27:41.000 --> 27:44.000
And I think this is something some of the other people commenting on this brought up.

27:44.000 --> 27:52.000
But it's kind of, how can I say this politically correct, a gaping defecation hole.

27:52.000 --> 27:55.000
Yeah, you know, I've been lucky enough to work at some places in the past

27:55.000 --> 27:59.000
that had at least a talk about, you can argue about implementation,

27:59.000 --> 28:02.000
talk about like a no assholes policy, right?

28:02.000 --> 28:04.000
And the idea is even if you are this incredible engineer,

28:04.000 --> 28:08.000
like you don't get to dictate what happens, you don't get to be a jerk.

28:08.000 --> 28:11.000
And I think that plays into that personality aspect.

28:11.000 --> 28:14.000
Like there are so many skills that go involved.

28:14.000 --> 28:16.000
Like you might be able to sling code really well,

28:16.000 --> 28:18.000
but especially in like a larger enterprise environment,

28:18.000 --> 28:21.000
there's a lot of social aspects that are at least as important as that

28:21.000 --> 28:25.000
to the overall operating of a team or an organization.

28:25.000 --> 28:29.000
It also seems to be just sort of bad statistics sort of stuff.

28:29.000 --> 28:33.000
Like yes, clearly like there are people with different ranges of those skill sets, right?

28:33.000 --> 28:36.000
Some people are good at doing code review and mentoring.

28:36.000 --> 28:37.000
Some aren't.

28:37.000 --> 28:40.000
Some just want to be like down in the weeds and can write super fast,

28:40.000 --> 28:43.000
correct network stack implementation.

28:43.000 --> 28:45.000
And others are really good at modeling data pipelines, right?

28:45.000 --> 28:47.000
Well, there's all different skill sets.

28:47.000 --> 28:49.000
So we have to be careful how we judge that.

28:49.000 --> 28:51.000
It also seems like even within those skill sets,

28:51.000 --> 28:53.000
yes, there's a distribution of skill.

28:53.000 --> 28:57.000
Focusing on the 10x developer is one way to look at it.

28:57.000 --> 28:59.000
But shouldn't we also be looking at the other extreme?

28:59.000 --> 29:01.000
Like what are the problems going on?

29:01.000 --> 29:05.000
This is why I like to talk about functional programming so much as one aspect, I think.

29:05.000 --> 29:10.000
Like what are the problems going on that are preventing more of us from being more productive, right?

29:10.000 --> 29:11.000
Do we not have the right tools?

29:11.000 --> 29:15.000
Do we not have the right knowledge or assistance or skills?

29:15.000 --> 29:20.000
Maybe we can't all be 10x developers, but I think we can all be better than 1x.

29:20.000 --> 29:24.000
Yeah, I mean, I definitely think it's –

29:24.000 --> 29:29.000
you get dangerously close to things like process, expectations.

29:29.000 --> 29:32.000
You know, there's a lot of like management-y things.

29:32.000 --> 29:35.000
Like for instance, I'm thinking about this from a contracting perspective.

29:35.000 --> 29:38.000
Was the job just like massively underbid, right?

29:38.000 --> 29:40.000
Because no matter how good of a developer you are,

29:40.000 --> 29:43.000
you're never going to actually be successful in that job.

29:43.000 --> 29:45.000
Right, you've already set yourself up for failure.

29:45.000 --> 29:48.000
Are you running any form of waterfall?

29:48.000 --> 29:52.000
It's just not possible, at least for as long as I've been doing this,

29:52.000 --> 29:56.000
to actually have a customer who upfront knows everything they want.

29:56.000 --> 30:01.000
And then once you have a waterfall, and what I really mean by waterfall, I mean fixed bid,

30:01.000 --> 30:06.000
you're just going to end up in a fight because you do have to get paid for your work,

30:06.000 --> 30:10.000
but they may decide that they want something different, right?

30:10.000 --> 30:12.000
And you're always doing this hostage negotiation,

30:12.000 --> 30:15.000
which is why you should do agile hourly contracts all the time.

30:15.000 --> 30:19.000
It ends up being cheaper for the customer, less stress for you.

30:19.000 --> 30:24.000
It's a harder sell to people, like, you know, people who aren't really in the industry,

30:24.000 --> 30:27.000
but most anybody coming from an engineering background,

30:27.000 --> 30:31.000
unless they're like literally building bridges where it's a little different,

30:31.000 --> 30:34.000
is going to know that like an agile process is going to work better.

30:34.000 --> 30:38.000
And I know that's a big statement, and I'm happy to hear any feedback,

30:38.000 --> 30:43.000
but if you are like a waterfall guru and you can tell me like there's a way to do this, great.

30:43.000 --> 30:51.000
I have not seen it work because just the upfront cost of trying to even do any kind of that waterfall documentation

30:51.000 --> 30:54.000
is generally very high, and I have done it.

30:54.000 --> 30:56.000
I used to sell it as a service.

30:56.000 --> 30:57.000
You just don't know, right?

30:57.000 --> 31:02.000
Like the customer is never going to know everything that they want upfront.

31:02.000 --> 31:04.000
I mean, how could they? They haven't seen anything.

31:04.000 --> 31:05.000
Right, yeah.

31:05.000 --> 31:11.000
Yeah, I do like, I mean, what you're saying, I like the chances for more review, more flexibility.

31:11.000 --> 31:16.000
That's an interesting point, and I've certainly seen that go pretty wrong myself.

31:16.000 --> 31:23.000
One person whose thoughts I appreciated in this whole discussion was Antires of Redes fame,

31:23.000 --> 31:26.000
and he had a great blog post kind of detailing some of the,

31:26.000 --> 31:29.000
talks about some of the issues with how we're talking about the conversation in general,

31:29.000 --> 31:34.000
but then also just had a good list of how you might talk about programming productivity

31:34.000 --> 31:36.000
and some of the things that you might need, right?

31:36.000 --> 31:42.000
Like you got to know how to break things down into small tasks and be able to get those sub-tasks done,

31:42.000 --> 31:44.000
and so an example might be for you, Mike, right?

31:44.000 --> 31:50.000
Like if you've made Rails apps, web servers, web sort of backend apps, worked with databases, a whole bunch,

31:50.000 --> 31:53.000
that means there's a whole list of sub-tasks that are just cached for you, right?

31:53.000 --> 31:56.000
You're like, oh, okay, I need another REST endpoint.

31:56.000 --> 31:59.000
No problem, let me just bang that out in an hour or two, and it'll be done.

31:59.000 --> 32:03.000
But if you're coming from a different world, you're moving from the embedded environment, say,

32:03.000 --> 32:06.000
that's a lot to figure out for the first time.

32:06.000 --> 32:11.000
Yeah, I mean, and there's, I mean, I will say there are signs of good, or let's say above average developers, right?

32:11.000 --> 32:19.000
Like having a toolbox of scripts or like, I guess, in the world of Docker, container configuration files

32:19.000 --> 32:24.000
that you just have pre-ready to go and that you reliably use, right?

32:24.000 --> 32:29.000
Yeah, I mean, I can't tell you how many times I've set up Rails and DoKu and Postgres, right?

32:29.000 --> 32:32.000
Like, seriously, I must have done it hundreds of times by now.

32:32.000 --> 32:35.000
Even in openSUSE, place.

32:35.000 --> 32:37.000
Even in openSUSE.

32:37.000 --> 32:40.000
Yeah, he's got some other good points that are definitely worth checking out, you know,

32:40.000 --> 32:47.000
things like not chasing perfectionism and making sure you keep simplicity in mind.

32:47.000 --> 32:51.000
Dear audience, I'm sure you probably have some thoughts on this whole discussion debate

32:51.000 --> 32:57.000
and maybe some thoughts about what you value when trying to assess your fellow coders out there.

32:57.000 --> 33:04.000
If you do, please let us know. We'd love to hear it. coder.show slash contact.

33:04.000 --> 33:10.000
Mike, you've had a long day. I think that means we should take this moment to wrap up today's episode.

33:10.000 --> 33:14.000
If they want more of you, though, especially Sleep Deprived Mike, because he can be fun,

33:14.000 --> 33:18.000
well, you're also on Twitter, right? What's your handle again?

33:18.000 --> 33:21.000
Add to Minuko, but I will try not to be fun today.

33:21.000 --> 33:26.000
Yeah, that's probably best. You deserve a very long nap.

33:26.000 --> 33:31.000
I'm on Twitter as well. I'm at Wes Payne, and of course, the whole network's there too,

33:31.000 --> 33:33.000
at Jupiter Signal.

33:33.000 --> 33:39.000
If you want to subscribe to this show, well, that's just coder.show slash RSS for our direct RSS feed,

33:39.000 --> 33:43.000
and you can go to coder.show to find all the links for everything else you might want,

33:43.000 --> 33:49.000
including our back catalog, show notes for any particular episode, and links to just about everything else.

33:49.000 --> 33:52.000
If you want to check out other great Jupiter Broadcasting productions,

33:52.000 --> 33:56.000
just head on over to JupiterBroadcasting.com.

33:56.000 --> 34:00.000
Thank you all for joining us. We'll see you right back here next week.

34:00.000 --> 34:25.000
I'll see you next week.

34:30.000 --> 34:43.000
I'll see you next week.

