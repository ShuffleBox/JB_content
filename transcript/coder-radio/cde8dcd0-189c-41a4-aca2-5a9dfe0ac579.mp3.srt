1
00:00:00,000 --> 00:00:15,680
This is KOTORadio, episode 398 for January 25th, 2021.

2
00:00:15,680 --> 00:00:20,080
Hello friends and welcome into Jupiter Broadcasting's weekly talk show, taking a pragmatic look

3
00:00:20,080 --> 00:00:23,760
at the art and business of software development in the world of technology.

4
00:00:23,760 --> 00:00:27,480
This episode is brought to you by Cloud Guru, Cloud Guru now includes Cloud Playground,

5
00:00:27,480 --> 00:00:32,360
Azure AWS, or Google Cloud Sandboxes on ACG's credit card, not yours.

6
00:00:32,360 --> 00:00:36,000
Get certified, get hired, get learning at a cloudguru.com.

7
00:00:36,000 --> 00:00:44,480
My name is Chris and joining us like the established soldier in his fortress of Florida podcasting,

8
00:00:44,480 --> 00:00:45,480
it's Mike.

9
00:00:45,480 --> 00:00:46,480
Hello, Mike.

10
00:00:46,480 --> 00:00:47,480
Hello, Mr. Fisher.

11
00:00:47,480 --> 00:00:48,480
And how's the USA doing?

12
00:00:48,480 --> 00:00:52,520
See, I was trying to set it up.

13
00:00:52,520 --> 00:00:53,520
That's why I stumbled there.

14
00:00:53,520 --> 00:00:57,160
I was trying to set up in a way that wouldn't invoke the Jar Jar.

15
00:00:57,160 --> 00:00:58,280
It's always here.

16
00:00:58,280 --> 00:00:59,280
I know.

17
00:00:59,280 --> 00:01:00,280
I know.

18
00:01:00,280 --> 00:01:01,280
I know.

19
00:01:01,280 --> 00:01:02,280
I know.

20
00:01:02,280 --> 00:01:03,280
I know.

21
00:01:03,280 --> 00:01:05,920
So moving on from that, I got a new keyboard.

22
00:01:05,920 --> 00:01:06,920
Which one?

23
00:01:06,920 --> 00:01:07,920
This one.

24
00:01:07,920 --> 00:01:08,920
Hold on.

25
00:01:08,920 --> 00:01:10,220
I'm picking it up because the text is small.

26
00:01:10,220 --> 00:01:14,520
It is the Keychron K3.

27
00:01:14,520 --> 00:01:21,800
And this is a great one because it has Bluetooth or USB-C and it works on Mac or Windows slash

28
00:01:21,800 --> 00:01:22,800
Linux.

29
00:01:22,800 --> 00:01:23,800
There's a little switch.

30
00:01:23,800 --> 00:01:24,800
You choose it.

31
00:01:24,800 --> 00:01:25,800
Tell it what mode to be in.

32
00:01:25,800 --> 00:01:28,960
And it has really cool lighting effects just out of the box.

33
00:01:28,960 --> 00:01:31,520
I don't even know what I'd call this one right now, but it's rad.

34
00:01:31,520 --> 00:01:34,420
And the escape key lights up red, which is rad.

35
00:01:34,420 --> 00:01:35,420
And it's a little quieter.

36
00:01:35,420 --> 00:01:38,080
So it doesn't, it doesn't, you know, here, I'll do a little, I'm going to, I'll bring

37
00:01:38,080 --> 00:01:39,080
my mic down.

38
00:01:39,080 --> 00:01:40,080
You ready for this?

39
00:01:40,080 --> 00:01:45,800
I'll bring my mic down here and I'm going to turn off my gate and I'm going to do a

40
00:01:45,800 --> 00:01:46,800
little typing.

41
00:01:46,800 --> 00:01:47,800
Okay.

42
00:01:47,800 --> 00:01:48,800
This is me doing a little test typing.

43
00:01:48,800 --> 00:01:49,800
Oh my.

44
00:01:49,800 --> 00:01:51,760
You kind of get a sense for it.

45
00:01:51,760 --> 00:01:53,480
It's not, it's not super bad.

46
00:01:53,480 --> 00:01:55,780
You know, it's not, it's not like really mechanical.

47
00:01:55,780 --> 00:01:56,780
But it still has a good feel.

48
00:01:56,780 --> 00:01:57,780
It's a definite upgrade.

49
00:01:57,780 --> 00:02:02,840
It sounds like a great gateway drug for people ready to dip their toe into mechanical keyboards.

50
00:02:02,840 --> 00:02:05,520
Cause it's only like a 60% keyboard.

51
00:02:05,520 --> 00:02:08,880
So it just takes up so much less room in the full size keyboard that it's replacing right

52
00:02:08,880 --> 00:02:09,880
here.

53
00:02:09,880 --> 00:02:11,800
So I've gained room here in the studio.

54
00:02:11,800 --> 00:02:12,800
It's nice.

55
00:02:12,800 --> 00:02:14,880
You know, I can spread out like I was meant to.

56
00:02:14,880 --> 00:02:16,840
Well, we have some feedback.

57
00:02:16,840 --> 00:02:17,840
You all right over there?

58
00:02:17,840 --> 00:02:18,840
You good to get into it?

59
00:02:18,840 --> 00:02:19,840
You sounded a little quiet today.

60
00:02:19,840 --> 00:02:20,840
Oh, let's get into it.

61
00:02:20,840 --> 00:02:22,120
I'm ready to roll on this feedback.

62
00:02:22,120 --> 00:02:23,120
I don't know.

63
00:02:23,120 --> 00:02:24,120
We'll see.

64
00:02:24,120 --> 00:02:25,120
We'll see.

65
00:02:25,120 --> 00:02:26,120
All right.

66
00:02:26,120 --> 00:02:29,720
So Michael T writes in and he says, Hey, Chris and Mike, first time, long time.

67
00:02:29,720 --> 00:02:34,200
I wanted to call out an area of software development and activity that I don't think gets a lot

68
00:02:34,200 --> 00:02:36,680
of love on Coderadio or maybe JB in general.

69
00:02:36,680 --> 00:02:37,680
It's security.

70
00:02:37,680 --> 00:02:43,200
I'm a cybersecurity analyst threat hunter for a major healthcare organization and I'm

71
00:02:43,200 --> 00:02:45,320
writing Python and bash every day.

72
00:02:45,320 --> 00:02:50,120
I'm a long time Linux guy and my personal daily driver runs KDE neon.

73
00:02:50,120 --> 00:02:56,240
However, for security work, I found that the ultimate setup and mandated by our work policy

74
00:02:56,240 --> 00:02:59,280
is a must have Windows 10 base.

75
00:02:59,280 --> 00:03:07,040
That being said, most of my work day is spent in WSL two terminal with WSL two, maybe a

76
00:03:07,040 --> 00:03:09,880
little bit of team X and a solid VIM setup.

77
00:03:09,880 --> 00:03:14,880
This is my secret weapon for efficient programming and threat hunting at my day job.

78
00:03:14,880 --> 00:03:20,480
I cut through CSVs full of vulnerability data with ease, with a little bit of cut, grep

79
00:03:20,480 --> 00:03:21,740
and said commands.

80
00:03:21,740 --> 00:03:25,580
The PowerShell folks are constantly amazing, bewildered by the efficiency that I have.

81
00:03:25,580 --> 00:03:29,960
The Python work all takes place in VIM with the occasional ducks into VS code when managing

82
00:03:29,960 --> 00:03:31,160
large code bases.

83
00:03:31,160 --> 00:03:35,480
Essentially, Windows provides the foundation to deliver a fairly solid Linux experience.

84
00:03:35,480 --> 00:03:38,680
I don't love saying that, but it's really true with WSL two.

85
00:03:38,680 --> 00:03:43,320
I get all of my Linux peanut butter with the interoperability chocolate of Windows.

86
00:03:43,320 --> 00:03:46,200
Jeez, he's laying it on thick.

87
00:03:46,200 --> 00:03:49,800
Wasn't there some jackass like a few months ago who said that Windows 10 was the best

88
00:03:49,800 --> 00:03:51,800
Linux six row?

89
00:03:51,800 --> 00:03:53,880
Yeah, I think that was you.

90
00:03:53,880 --> 00:03:55,960
I think that was that jackass was you.

91
00:03:55,960 --> 00:03:56,960
You got me.

92
00:03:56,960 --> 00:04:00,560
In a way, it's it's unsettling for me to hear.

93
00:04:00,560 --> 00:04:05,240
I have to be honest, because this is what I convinced myself wasn't going to be a problem.

94
00:04:05,240 --> 00:04:06,240
It's a problem.

95
00:04:06,240 --> 00:04:11,160
He says it's just one guy's security work situation, but he'd love to hear more security

96
00:04:11,160 --> 00:04:13,400
stories on the network in the future.

97
00:04:13,400 --> 00:04:14,400
Keep up the great work, gents.

98
00:04:14,400 --> 00:04:16,600
Oh, it's not just one guy, Chris.

99
00:04:16,600 --> 00:04:17,680
I know.

100
00:04:17,680 --> 00:04:19,240
It's like the Robbros.

101
00:04:19,240 --> 00:04:20,480
Tweet about it and they will.

102
00:04:20,480 --> 00:04:21,480
They will come.

103
00:04:21,480 --> 00:04:22,480
Yeah.

104
00:04:22,480 --> 00:04:23,480
You think?

105
00:04:23,480 --> 00:04:24,480
You think?

106
00:04:24,480 --> 00:04:25,480
Wow.

107
00:04:25,480 --> 00:04:26,480
I mean, that's a powerful collective of people there.

108
00:04:26,480 --> 00:04:28,820
You could almost call them a demographic, if you would like.

109
00:04:28,820 --> 00:04:32,320
You could almost say that they're getting the best of both worlds.

110
00:04:32,320 --> 00:04:36,880
Yeah, which is a more apt analogy than one might think at first.

111
00:04:36,880 --> 00:04:40,640
Danelle writes in and this he's hoping to help you out with your terminal woes because

112
00:04:40,640 --> 00:04:44,120
I saw you tweeting, which I'd like to get an update about here in a minute.

113
00:04:44,120 --> 00:04:46,880
But Danelle writes and he says, hey, guys, I've been hearing y'all talk about terminal

114
00:04:46,880 --> 00:04:49,040
emulators for Mike on the Mac.

115
00:04:49,040 --> 00:04:54,560
And I don't recall anyone bringing up Accelerity, Acclarity, Accalosity.

116
00:04:54,560 --> 00:05:00,740
Anyways, it's a terminal that's written in Rust and is GPU accelerated.

117
00:05:00,740 --> 00:05:05,920
And it can run all the platforms Mike might like to use as Mac or his system 76 systems.

118
00:05:05,920 --> 00:05:08,600
I just wanted to toss another item into the conversation.

119
00:05:08,600 --> 00:05:09,600
Thanks Danelle.

120
00:05:09,600 --> 00:05:14,520
So I went and looked it up, Alacricity, I don't know, A-L-A-C-R-I-T-T-Y.

121
00:05:14,520 --> 00:05:15,520
It's called Alacrity.

122
00:05:15,520 --> 00:05:16,520
I've actually used it.

123
00:05:16,520 --> 00:05:17,520
Oh, yeah, of course, because TTY.

124
00:05:17,520 --> 00:05:20,960
As I just read it out loud, I, yes, Alacrity.

125
00:05:20,960 --> 00:05:24,400
I have heard of this now that we actually say the word and the name correctly.

126
00:05:24,400 --> 00:05:26,720
And I have it installed on my system.

127
00:05:26,720 --> 00:05:27,720
It's nice.

128
00:05:27,720 --> 00:05:28,720
It's nice.

129
00:05:28,720 --> 00:05:29,720
It's nice.

130
00:05:29,720 --> 00:05:30,720
I have it installed on the lemur.

131
00:05:30,720 --> 00:05:33,960
I haven't sold it on the Macs yet.

132
00:05:33,960 --> 00:05:34,960
I like it.

133
00:05:34,960 --> 00:05:35,960
It's fine.

134
00:05:35,960 --> 00:05:39,880
It's very fast and it can do some pretty fun stuff.

135
00:05:39,880 --> 00:05:46,640
It has like weird, I don't want to say graphical features, but I guess I do want to say graphical

136
00:05:46,640 --> 00:05:47,640
features.

137
00:05:47,640 --> 00:05:48,640
It's OK.

138
00:05:48,640 --> 00:05:49,640
Everything's connected.

139
00:05:49,640 --> 00:05:50,640
Right.

140
00:05:50,640 --> 00:05:51,640
So you had me try ITERM.

141
00:05:51,640 --> 00:05:52,640
Yes.

142
00:05:52,640 --> 00:05:54,120
I could see why you like ITERM.

143
00:05:54,120 --> 00:05:55,520
OK, but you didn't like it.

144
00:05:55,520 --> 00:05:57,480
I don't like ITERM and I think I know why.

145
00:05:57,480 --> 00:06:03,760
I'm coming from Mac terminal, so I kind of just haven't had the fancy like split my window

146
00:06:03,760 --> 00:06:07,560
thirty thousand times, whatever Linux presets.

147
00:06:07,560 --> 00:06:10,520
And it's just not I don't know, it just doesn't look as good to me.

148
00:06:10,520 --> 00:06:16,480
Alacrity actually looks as good and it is definitely it is fast right out of the box.

149
00:06:16,480 --> 00:06:17,480
We just launched it.

150
00:06:17,480 --> 00:06:18,960
It's a lot more minimal than ITERM, too.

151
00:06:18,960 --> 00:06:20,320
Yeah, it's a lot more minimal.

152
00:06:20,320 --> 00:06:25,640
I mean, I. I can't say use it all the time because I have like really dumb muscle memory

153
00:06:25,640 --> 00:06:31,120
on both machines where I'm like, oh, you know, command terminal on the Linux by maps

154
00:06:31,120 --> 00:06:32,960
command to to super.

155
00:06:32,960 --> 00:06:33,960
It's like a brain map.

156
00:06:33,960 --> 00:06:36,760
He's like, when I sit in front of Mac, I use this command to do this thing.

157
00:06:36,760 --> 00:06:37,760
Right.

158
00:06:37,760 --> 00:06:41,880
And I've made them similar enough that it's they're similar anyway, but yeah, I would

159
00:06:41,880 --> 00:06:42,880
suggest you check it out.

160
00:06:42,880 --> 00:06:43,880
It is open source.

161
00:06:43,880 --> 00:06:44,880
It is free.

162
00:06:44,880 --> 00:06:48,600
It is written in Rust, which means it's superior just, you know, on its face.

163
00:06:48,600 --> 00:06:49,600
Yeah.

164
00:06:49,600 --> 00:06:50,600
That's clear.

165
00:06:50,600 --> 00:06:52,840
Can I actually throw in a piece of hoopla here?

166
00:06:52,840 --> 00:06:53,840
Break in the format.

167
00:06:53,840 --> 00:06:54,840
Yeah.

168
00:06:54,840 --> 00:06:56,560
So little sad news.

169
00:06:56,560 --> 00:06:59,040
The inventor of Objective C died.

170
00:06:59,040 --> 00:07:00,040
Yeah.

171
00:07:00,040 --> 00:07:03,640
And I was shocked not to see much coverage of this.

172
00:07:03,640 --> 00:07:04,640
Yeah.

173
00:07:04,640 --> 00:07:07,480
Real minimal now that you mention it, that would be Dr. Cox.

174
00:07:07,480 --> 00:07:11,640
We talked about in Slack really briefly, and I probably saw a few people write about it

175
00:07:11,640 --> 00:07:12,640
in total.

176
00:07:12,640 --> 00:07:13,640
Maybe maybe a handful at most.

177
00:07:13,640 --> 00:07:14,640
Yeah.

178
00:07:14,640 --> 00:07:18,240
It's interesting to me because he he actually a lot of the ideas in Objective C are.

179
00:07:18,240 --> 00:07:25,800
You know, this is not my usual trolling, but even if you're not an Apple developer, they've

180
00:07:25,800 --> 00:07:27,280
they've come over, right?

181
00:07:27,280 --> 00:07:29,280
They've they've come over into their languages.

182
00:07:29,280 --> 00:07:30,280
Absolutely.

183
00:07:30,280 --> 00:07:31,280
Especially the early ideas.

184
00:07:31,280 --> 00:07:34,960
I'm not talking about, like, you know, the recent stuff, but the early foundational ideas,

185
00:07:34,960 --> 00:07:39,520
all the next step stuff that a lot of that inspires a lot of what people use today.

186
00:07:39,520 --> 00:07:41,800
So I was a little surprised and like, I missed it.

187
00:07:41,800 --> 00:07:44,560
It took me a day to see it and someone had to actually send it to me.

188
00:07:44,560 --> 00:07:45,560
So yeah.

189
00:07:45,560 --> 00:07:46,560
Rest in peace.

190
00:07:46,560 --> 00:07:47,560
Dr. Cox.

191
00:07:47,560 --> 00:07:48,700
Yeah, absolutely.

192
00:07:48,700 --> 00:07:49,700
I want to circle back.

193
00:07:49,700 --> 00:07:51,360
Were you having terminal woes earlier this week?

194
00:07:51,360 --> 00:07:55,440
Because I saw you tweeting about having some strange ass air messages in your terminal.

195
00:07:55,440 --> 00:08:04,560
So code signing, even when it's Apple's application, apparently my moving my Rosetta terminal into

196
00:08:04,560 --> 00:08:10,500
applications instead of into applications slash utilities, yeah, violates some sort

197
00:08:10,500 --> 00:08:16,400
of expectation that the code signing system has and it would just refuse to run.

198
00:08:16,400 --> 00:08:20,840
And was there any useful air that would be produced when this happened?

199
00:08:20,840 --> 00:08:27,120
It's the same crash as you would get for like you built a, you know, a GM version, right?

200
00:08:27,120 --> 00:08:30,560
A golden master version of your own application to distribute and you were testing it as a

201
00:08:30,560 --> 00:08:31,760
clean install.

202
00:08:31,760 --> 00:08:34,720
And oh, I messed up my signing certificates.

203
00:08:34,720 --> 00:08:41,320
So luckily I said, what's different about terminal than any other application you would

204
00:08:41,320 --> 00:08:42,600
generally install?

205
00:08:42,600 --> 00:08:45,440
Oh, it's not in applications.

206
00:08:45,440 --> 00:08:50,680
Let me just delete this version, duplicate it again in applications, utilities.

207
00:08:50,680 --> 00:08:53,680
We put the new one in Rosetta mode and see what happens.

208
00:08:53,680 --> 00:08:56,920
And sure enough, that was the entire problem.

209
00:08:56,920 --> 00:08:58,080
Now let me ask you something, though.

210
00:08:58,080 --> 00:09:02,080
Honestly, did you have a moment where you were like, this has got to be an M1 bug or

211
00:09:02,080 --> 00:09:03,560
is this because I'm on an M1?

212
00:09:03,560 --> 00:09:04,560
Well, right.

213
00:09:04,560 --> 00:09:07,640
The whole fact that I have to run a Rosetta terminal all the time.

214
00:09:07,640 --> 00:09:12,720
Actually what I ended up doing was I undid that and I duplicated it and I left the ARM

215
00:09:12,720 --> 00:09:13,720
terminal.

216
00:09:13,720 --> 00:09:17,680
I just named it ARM terminal and the other terminal, the Rosetta one is just named terminal.

217
00:09:17,680 --> 00:09:22,160
Yeah, because I almost never want the ARM terminal.

218
00:09:22,160 --> 00:09:25,520
It's going to be a nice day for you when all that stuff has finally been ported over and

219
00:09:25,520 --> 00:09:27,200
you just don't have to worry about this anymore.

220
00:09:27,200 --> 00:09:28,200
That would be amazing.

221
00:09:28,200 --> 00:09:32,220
Honestly though, this is seemingly, unless something has changed for you, this seems

222
00:09:32,220 --> 00:09:37,400
like the roughest aspect of the CPU transition and it's a pretty understandable one.

223
00:09:37,400 --> 00:09:39,080
Yeah, it was like a 15 minute fix.

224
00:09:39,080 --> 00:09:44,480
I got updated shipping information on the M1 mini that's coming in for Angela and it's

225
00:09:44,480 --> 00:09:48,280
scheduled to be delivered at the end of this week, so I may have hands on experience by

226
00:09:48,280 --> 00:09:49,400
next week's episode.

227
00:09:49,400 --> 00:09:55,560
And are we starting the M1 action show anytime soon?

228
00:09:55,560 --> 00:09:58,520
That's no, we're waiting for when they update the other machines that make that supposedly

229
00:09:58,520 --> 00:10:00,960
rumored G4 cube knockoff.

230
00:10:00,960 --> 00:10:05,040
Honestly, that's going to be where I have to really exercise a lot of self control.

231
00:10:05,040 --> 00:10:08,760
I will be there to tempt you mercilessly.

232
00:10:08,760 --> 00:10:11,540
We have more to talk about on that front, but I wanted to get to an email that came

233
00:10:11,540 --> 00:10:16,400
in from Steve because we'd asked about home testing setups and network setups and he says,

234
00:10:16,400 --> 00:10:21,540
hey guys, for my home server setup, I have six Raspberry Pis shoved into a rack.

235
00:10:21,540 --> 00:10:25,640
It's the one from C4 Labs called the Zebra case.

236
00:10:25,640 --> 00:10:29,480
He has six of them in there running 2004 Ubuntu LTS.

237
00:10:29,480 --> 00:10:34,840
One runs Pi-Hole, one's a WireGuard server, he has Pi VPN, he has a private Docker registry

238
00:10:34,840 --> 00:10:35,840
setup.

239
00:10:35,840 --> 00:10:40,580
He has four of the Pis running as Kubernetes clusters that he's bootstrapped with K3s.

240
00:10:40,580 --> 00:10:46,240
The cube cluster serves as my dev lab and I also run Drone.io in a cluster for my CICD

241
00:10:46,240 --> 00:10:47,240
pipelines.

242
00:10:47,240 --> 00:10:51,500
My last Pi runs a NAS server to provide persistent storage for my cube cluster.

243
00:10:51,500 --> 00:10:55,820
It's been nice to build this cluster over time and expand my skills on ops and sysadmin

244
00:10:55,820 --> 00:11:00,000
side of things without having to worry about scaling down cloud infrastructure when I'm

245
00:11:00,000 --> 00:11:01,600
not actively using it.

246
00:11:01,600 --> 00:11:05,320
Yeah, just a side note, I completely agree with that a little bit for the Raspberry Pis.

247
00:11:05,320 --> 00:11:08,320
When you're doing small scale training, it's just great for that because you can just leave

248
00:11:08,320 --> 00:11:10,800
them running and it's a low, even power impact.

249
00:11:10,800 --> 00:11:15,600
He says, I've created ansible roles and playbooks to provision most of the cluster's functionality.

250
00:11:15,600 --> 00:11:19,280
On a side note, I'm also super glad Coder Radio is back from the dead.

251
00:11:19,280 --> 00:11:24,360
Should we start a Deadpool to see when Mike destroys his shiny new M1 Air?

252
00:11:24,360 --> 00:11:27,440
Maybe the proceeds go to an open source project of the winner's choosing.

253
00:11:27,440 --> 00:11:28,440
All the best.

254
00:11:28,440 --> 00:11:29,440
Wow.

255
00:11:29,440 --> 00:11:32,000
I would say probably when the update's out.

256
00:11:32,000 --> 00:11:34,480
That's when you start your bets because then what else are you going to do but get the

257
00:11:34,480 --> 00:11:35,480
next upgrade?

258
00:11:35,480 --> 00:11:37,000
You got no choice.

259
00:11:37,000 --> 00:11:40,800
There does seem to be a correlation.

260
00:11:40,800 --> 00:11:45,080
I mean, sometimes you got to go to a lot of lengths for spousal approval.

261
00:11:45,080 --> 00:11:46,760
I'm just saying.

262
00:11:46,760 --> 00:11:47,760
Maybe that's not a factor.

263
00:11:47,760 --> 00:11:48,760
I don't know.

264
00:11:48,760 --> 00:11:49,760
Yeah.

265
00:11:49,760 --> 00:11:52,820
Well, not so much.

266
00:11:52,820 --> 00:11:53,820
You never know then.

267
00:11:53,820 --> 00:11:55,960
The game's afoot.

268
00:11:55,960 --> 00:12:01,660
Right now with the M1 MacBook Air, it's unlikely that I would be ditching it soon.

269
00:12:01,660 --> 00:12:04,680
But the actual thing he wrote about the Raspberry Pi, yeah, that's amazing.

270
00:12:04,680 --> 00:12:08,800
There are so many, like, just dumb uses I have for Raspberry Pis.

271
00:12:08,800 --> 00:12:11,880
Honestly, they're amazing and they're so cheap.

272
00:12:11,880 --> 00:12:12,880
Yeah.

273
00:12:12,880 --> 00:12:15,040
I run a lot of great services on them at home.

274
00:12:15,040 --> 00:12:19,560
Our last email of the week comes in from Javier and he has some thoughts on why we don't see

275
00:12:19,560 --> 00:12:20,560
more native Linux software.

276
00:12:20,560 --> 00:12:22,560
He's a big fan of the show and he's a QA member.

277
00:12:22,560 --> 00:12:27,680
He's been listening to JB since 2008, which is mind bending.

278
00:12:27,680 --> 00:12:31,240
And he's been getting deep into software development with Qt and realized a few reasons why we

279
00:12:31,240 --> 00:12:32,680
don't see more native Linux software.

280
00:12:32,680 --> 00:12:33,920
I'm curious to hear your thoughts on this.

281
00:12:33,920 --> 00:12:39,160
He says, number one, there's not really any good quality tutorials, books or video resources.

282
00:12:39,160 --> 00:12:41,780
And what's out there is not necessarily easy to find.

283
00:12:41,780 --> 00:12:46,160
Number two, some of the best resources are hidden away in conference talks that people

284
00:12:46,160 --> 00:12:47,160
don't know about.

285
00:12:47,160 --> 00:12:53,000
And number three, there's no massive marketing efforts in promoting these frameworks in various

286
00:12:53,000 --> 00:12:54,000
local areas.

287
00:12:54,000 --> 00:12:57,240
And that last one I thought was kind of like marketing the frameworks.

288
00:12:57,240 --> 00:13:00,080
But I guess, I guess there is some truth to that.

289
00:13:00,080 --> 00:13:04,280
Like there's a lot of really great free frameworks out there that nobody knows about.

290
00:13:04,280 --> 00:13:07,800
Yeah, I would say the Vala stuff is pretty interesting.

291
00:13:07,800 --> 00:13:12,160
This is going to be divisive, but I think the folks doing it the best are actually the

292
00:13:12,160 --> 00:13:15,840
elementary OS people, Cassidy and I think Daniel.

293
00:13:15,840 --> 00:13:16,840
Sure.

294
00:13:16,840 --> 00:13:17,960
They put a lot of work into that.

295
00:13:17,960 --> 00:13:19,280
They put a lot of work into it.

296
00:13:19,280 --> 00:13:21,040
They've made an app store that's easy to deal with.

297
00:13:21,040 --> 00:13:23,320
They have a blessed framework and you can do other stuff.

298
00:13:23,320 --> 00:13:25,800
But they have a blessed tool chain, which is Vala.

299
00:13:25,800 --> 00:13:31,240
They focused on some of the getting your feet wet stuff that, you know, I felt like the

300
00:13:31,240 --> 00:13:34,120
Ubuntu Software Center never really did.

301
00:13:34,120 --> 00:13:39,360
Qt is probably the best option, but I don't see a lot of Qt development that's not like

302
00:13:39,360 --> 00:13:44,840
enterprise development for like QNX, is that the weird car OS?

303
00:13:44,840 --> 00:13:45,840
Oh, yeah.

304
00:13:45,840 --> 00:13:46,840
Right.

305
00:13:46,840 --> 00:13:49,900
Or some kind of desktop software that you just need for multiple platforms.

306
00:13:49,900 --> 00:13:53,800
He kind of says that maybe what we ought to do is ask the community, and this is probably

307
00:13:53,800 --> 00:13:57,800
worth trying, is we ask you guys out there listening to the show to send in what you

308
00:13:57,800 --> 00:14:01,020
consider are the best resources to learn different frameworks.

309
00:14:01,020 --> 00:14:07,160
Maybe people could send links to videos for GTK, Qt, Flutter, PyTorch, TensorFlow, others,

310
00:14:07,160 --> 00:14:11,840
and maybe your favorite web and backend frameworks to use with electrons and maybe up on Linode.

311
00:14:11,840 --> 00:14:13,000
And then we could feature them here on the show.

312
00:14:13,000 --> 00:14:14,920
And it's not necessarily a bad idea.

313
00:14:14,920 --> 00:14:17,280
I think that could work at a small scale.

314
00:14:17,280 --> 00:14:20,640
I would be really interested to know what the audience works with that we don't mention

315
00:14:20,640 --> 00:14:21,640
much on air.

316
00:14:21,640 --> 00:14:26,280
And I'd love to just a brief explanation of how you use it, even if it's a high level.

317
00:14:26,280 --> 00:14:30,160
And if you went to coder.show slash contact and sent that in, that could be a good first

318
00:14:30,160 --> 00:14:31,160
step.

319
00:14:31,160 --> 00:14:32,720
And then maybe we go from there.

320
00:14:32,720 --> 00:14:36,760
There's probably a lot of good resources for learning too, which we'd love for you to share.

321
00:14:36,760 --> 00:14:41,940
I think though, you know, you look at something like Qt, they keep screwing the pooch when

322
00:14:41,940 --> 00:14:45,080
it comes to how they interface with the community.

323
00:14:45,080 --> 00:14:52,040
There's change now where to get access to older versions past Qt 6, you have to pay.

324
00:14:52,040 --> 00:14:57,480
It's untenable and the community is just going to fork the latest Qt 5 series for as long

325
00:14:57,480 --> 00:15:03,620
as they can until they can migrate to 6 after 6 has had several minor releases at a minimum.

326
00:15:03,620 --> 00:15:08,480
And it's those kind of actions that I think continuously turn people off is those kind

327
00:15:08,480 --> 00:15:10,320
of shenanigans with the licensing.

328
00:15:10,320 --> 00:15:17,280
And then GTK is an extremely opinionated desktop toolkit that really works best on the GNOME

329
00:15:17,280 --> 00:15:18,280
desktop.

330
00:15:18,280 --> 00:15:22,320
Of course you can bring it to other platforms, but that's really where Qt's a lot stronger.

331
00:15:22,320 --> 00:15:26,720
Flutter, you know, I've been wondering if we should have a conversation about it.

332
00:15:26,720 --> 00:15:31,320
It does come up and I'm wondering if the acceptance level is going up.

333
00:15:31,320 --> 00:15:34,880
So I'd be curious if anybody out there has any active Flutter projects that they could

334
00:15:34,880 --> 00:15:35,880
share some insights.

335
00:15:35,880 --> 00:15:37,360
It'd be a good way to go.

336
00:15:37,360 --> 00:15:40,440
Yeah, I was excited for Avalonia for a while there.

337
00:15:40,440 --> 00:15:43,760
I would be interested to see what people say, but I think we're going to get a lot of like

338
00:15:43,760 --> 00:15:47,040
hobbyists doing like GTK and stuff and that's totally cool.

339
00:15:47,040 --> 00:15:50,080
But I think the people working in the enterprise are just like, yeah, we use Qt or we use

340
00:15:50,080 --> 00:15:51,080
Electron.

341
00:15:51,080 --> 00:15:52,080
Right.

342
00:15:52,080 --> 00:15:53,080
That's that's fair.

343
00:15:53,080 --> 00:15:54,080
Well, I would like to know that, too.

344
00:15:54,080 --> 00:15:56,240
That'd be valid feedback as well.

345
00:15:56,240 --> 00:15:58,640
That would be coder.show slash contact.

346
00:15:58,640 --> 00:16:03,480
Let us know because I'd love insights on that as well.

347
00:16:03,480 --> 00:16:05,060
lino.com slash coder.

348
00:16:05,060 --> 00:16:08,680
Go there and receive a $100 60 day credit towards your new account.

349
00:16:08,680 --> 00:16:13,200
Linode is the largest independent cloud for developers and a $100 60 day credit is going

350
00:16:13,200 --> 00:16:16,000
to give you a lot of room to try things out.

351
00:16:16,000 --> 00:16:19,000
Linode has these boxes that are just unbelievably priced.

352
00:16:19,000 --> 00:16:24,040
I was doing a live stream from a box that's just their base rig $5 a month stream.

353
00:16:24,040 --> 00:16:28,080
It was amazing, like the power behind it, because all of the components are super fast.

354
00:16:28,080 --> 00:16:32,920
The disk IO, the network, the CPU, everything's really fast and the dashboard to set everything

355
00:16:32,920 --> 00:16:33,920
up is really quick.

356
00:16:33,920 --> 00:16:37,480
So if you get an idea for something and you just want to get off and get going, just run

357
00:16:37,480 --> 00:16:39,840
off and just create something.

358
00:16:39,840 --> 00:16:43,200
Well, Linode makes that really simple with their dashboard.

359
00:16:43,200 --> 00:16:48,280
It's just so nice when you can just have those kinds of barriers removed and get right to

360
00:16:48,280 --> 00:16:49,280
work.

361
00:16:49,280 --> 00:16:52,520
Well, I'll just quickly deploy an Ubuntu LTS system now and then I have this image that

362
00:16:52,520 --> 00:16:55,960
I attached to them that's full of tools and stuff that I need to set up and Linode gives

363
00:16:55,960 --> 00:17:01,600
me all of the little buttons to make that possible with 11 data centers around the world.

364
00:17:01,600 --> 00:17:03,520
Probably something that's going to work for you.

365
00:17:03,520 --> 00:17:07,560
Also maybe take a look at what you could do with object storage.

366
00:17:07,560 --> 00:17:10,000
It's become more and more valuable for us.

367
00:17:10,000 --> 00:17:15,460
Storage up in the cloud that's super fast that can be attached really simply, either

368
00:17:15,460 --> 00:17:21,880
just by a public URL or by something like a file system mount with fuse, which is a

369
00:17:21,880 --> 00:17:25,320
trick we're using for our new PeerTube instances that we've set up on Linode.

370
00:17:25,320 --> 00:17:30,780
We have a Linode front end box that does the actual web rendering and the video streaming,

371
00:17:30,780 --> 00:17:33,880
but all the video is stored on Linode's object storage.

372
00:17:33,880 --> 00:17:37,560
That way I don't have to keep trying to crank up the disk storage for my server.

373
00:17:37,560 --> 00:17:38,560
That's just silly.

374
00:17:38,560 --> 00:17:42,240
I'm just like, what am I supposed to like future cast how much I need to provision all

375
00:17:42,240 --> 00:17:43,240
the time?

376
00:17:43,240 --> 00:17:44,600
I just use object storage.

377
00:17:44,600 --> 00:17:46,860
It's S3 compatible and it's great.

378
00:17:46,860 --> 00:17:50,280
One of the best use cases for it is just hosting your own static website.

379
00:17:50,280 --> 00:17:54,120
You look really professional when your website just pops on the screen.

380
00:17:54,120 --> 00:17:57,600
Linode really provides the virtual servers that make it easy and affordable for you to

381
00:17:57,600 --> 00:17:58,600
host anything.

382
00:17:58,600 --> 00:18:02,640
If it's a personal site or something for your business, they can do that.

383
00:18:02,640 --> 00:18:07,160
They started in 2003 as one of the first companies in cloud computing, three years before AWS

384
00:18:07,160 --> 00:18:08,940
and other enterprise providers.

385
00:18:08,940 --> 00:18:12,900
And now they're still the largest independently owned cloud provider founded on a love for

386
00:18:12,900 --> 00:18:14,800
Linux and open source technologies.

387
00:18:14,800 --> 00:18:16,840
And now they're making shows like this possible.

388
00:18:16,840 --> 00:18:19,640
So get that $100 credit and see what you can do.

389
00:18:19,640 --> 00:18:26,000
Go to linode.com slash coder, get $100 in Linode credit on that new account and really

390
00:18:26,000 --> 00:18:29,860
just learn something, set something up, try out a project.

391
00:18:29,860 --> 00:18:32,160
Maybe one of their one click deployments is all you need.

392
00:18:32,160 --> 00:18:34,900
It's got a lot of apps, it's really easy to deploy.

393
00:18:34,900 --> 00:18:42,120
So try it out, try it out and support the show, linode.com slash coder.

394
00:18:42,120 --> 00:18:46,520
Let's do a little hoopla, a little bit of hoopla, hoopla follow up.

395
00:18:46,520 --> 00:18:52,020
The Corellium team is really hyping up the fact that they have ported Linux to the M1.

396
00:18:52,020 --> 00:18:54,600
So this got sent into the show a few times.

397
00:18:54,600 --> 00:18:57,780
I smell a marketing splash is what I smell.

398
00:18:57,780 --> 00:18:59,120
I'm not buying it.

399
00:18:59,120 --> 00:19:00,120
You think it's fabricated?

400
00:19:00,120 --> 00:19:02,840
No, I mean, it's true-ish.

401
00:19:02,840 --> 00:19:03,840
Go on.

402
00:19:03,840 --> 00:19:05,300
It's like half the story.

403
00:19:05,300 --> 00:19:11,400
So networking is provided via USB dongle, the video acceleration is non-existent.

404
00:19:11,400 --> 00:19:13,560
So it's all just frame buffer stuff.

405
00:19:13,560 --> 00:19:15,800
Performance is atrocious.

406
00:19:15,800 --> 00:19:21,500
It is a modification of the Ubuntu Raspberry Pi image to work on this using code that Corellium

407
00:19:21,500 --> 00:19:25,140
developed to get Linux running on the iPad.

408
00:19:25,140 --> 00:19:30,260
And they've kind of been developing this code and keeping it kind of to themselves as a

409
00:19:30,260 --> 00:19:31,660
special sauce project.

410
00:19:31,660 --> 00:19:34,480
So they kind of had a lot of it already done.

411
00:19:34,480 --> 00:19:38,180
And now it's this slow trickle process of seeing how much of this is actually legally

412
00:19:38,180 --> 00:19:39,800
touchable.

413
00:19:39,800 --> 00:19:45,080
And they have a developer who is learning right now for the first time how to interface

414
00:19:45,080 --> 00:19:49,220
with the kernel team upstream to try to submit some of this stuff.

415
00:19:49,220 --> 00:19:50,780
But some of it doesn't look usable.

416
00:19:50,780 --> 00:19:51,940
Some of it's questionable.

417
00:19:51,940 --> 00:19:52,940
Some of it may be great.

418
00:19:52,940 --> 00:19:56,360
I mean, there has been a lot of hard work done here, not to undercut that at all.

419
00:19:56,360 --> 00:20:01,440
It's technically a good feat, but it's being sold like Linux has arrived and an ISO is

420
00:20:01,440 --> 00:20:02,440
just any day away.

421
00:20:02,440 --> 00:20:04,440
And it is anything but that.

422
00:20:04,440 --> 00:20:08,480
This is a company that has another product in this realm.

423
00:20:08,480 --> 00:20:12,560
And this is an incredible way for them to get some name recognition out there.

424
00:20:12,560 --> 00:20:16,520
I had this long, really great conversation with Hector Martin weeks ago.

425
00:20:16,520 --> 00:20:21,600
And Hector Martin is the original guy who set off with an effort to port Linux to the

426
00:20:21,600 --> 00:20:29,600
M1 and launched a Patreon and now has a Linux distro dedicated to running on the M1 and

427
00:20:29,600 --> 00:20:30,920
has established a bit of a team.

428
00:20:30,920 --> 00:20:32,840
So it's a team now working on this.

429
00:20:32,840 --> 00:20:36,840
And I talked to him weeks and weeks ago about this.

430
00:20:36,840 --> 00:20:45,840
And he really wants to have a white room, totally clean, no legal issue kind of process.

431
00:20:45,840 --> 00:20:49,720
He wants everything to be upstreamable into the mainline Linux kernel.

432
00:20:49,720 --> 00:20:53,820
So he is now interfacing with Corellium's one developer who's really trying to do all

433
00:20:53,820 --> 00:20:56,200
of this to help him get that upstreamed.

434
00:20:56,200 --> 00:20:58,600
But it's still kind of like at this point, it's a long shot.

435
00:20:58,600 --> 00:21:00,680
He's not really getting any bites from the kernel team.

436
00:21:00,680 --> 00:21:03,680
I don't think anybody's really taking him seriously upstream yet.

437
00:21:03,680 --> 00:21:07,700
So it may, it sounds like it's close, but I think it's a lot further off than they're

438
00:21:07,700 --> 00:21:08,700
letting on.

439
00:21:08,700 --> 00:21:12,320
And the reason why they're not making that clear is well, hashtag hype.

440
00:21:12,320 --> 00:21:13,320
I could buy that.

441
00:21:13,320 --> 00:21:14,320
Okay.

442
00:21:14,320 --> 00:21:18,680
I saw the story a couple of times and I was like, okay, it's eventually going to happen.

443
00:21:18,680 --> 00:21:22,200
I don't think anyone's going to buy these M1 Macs to slap Ubuntu on though.

444
00:21:22,200 --> 00:21:23,200
Cause you know what?

445
00:21:23,200 --> 00:21:25,880
You're going to be fighting compatibility issues for years.

446
00:21:25,880 --> 00:21:27,760
You know, no video acceleration is a deal breaker.

447
00:21:27,760 --> 00:21:31,260
You're not going to spend that money on a Mac not to have it working.

448
00:21:31,260 --> 00:21:34,540
Also kind of ironic, I suppose.

449
00:21:34,540 --> 00:21:39,640
When I was talking to Hector, he had told me that he had planned around the end of January

450
00:21:39,640 --> 00:21:44,440
to essentially make the same splash because he thought he was pretty close to getting

451
00:21:44,440 --> 00:21:46,200
it booting.

452
00:21:46,200 --> 00:21:50,480
And his idea was this would be a great PR stunt for the distro and probably raise funds.

453
00:21:50,480 --> 00:21:54,780
So he was conceiving of doing something similar with, I think probably more noble intentions

454
00:21:54,780 --> 00:21:58,800
because he's just trying to raise awareness about the project where these people Corellium

455
00:21:58,800 --> 00:22:03,200
I think are trying to raise awareness about their business and their other products, which

456
00:22:03,200 --> 00:22:07,640
they're happy to link to you by the way, on their page where they talk about this work.

457
00:22:07,640 --> 00:22:12,480
They have a different like security research and app modeling testing that they'll do for

458
00:22:12,480 --> 00:22:13,480
you.

459
00:22:13,480 --> 00:22:16,500
So I don't think people should get too excited.

460
00:22:16,500 --> 00:22:19,600
We had a lot of people that resented it and they were like, it's almost here.

461
00:22:19,600 --> 00:22:20,600
Yeah.

462
00:22:20,600 --> 00:22:23,360
I think this is a ways away to say the least.

463
00:22:23,360 --> 00:22:27,860
We also heard from people that are on M1 minis that they were having issues with sleep.

464
00:22:27,860 --> 00:22:31,440
I guess the system would go to sleep within an hour and then never wake back up.

465
00:22:31,440 --> 00:22:37,140
That is being resolved in a current Mac OS beta as well as, this is why I want to talk

466
00:22:37,140 --> 00:22:40,920
about this because I felt like after trashing them so bad, we should follow up.

467
00:22:40,920 --> 00:22:45,160
Apple is fixing the content filter exclusion list that let Apple apps like the app store

468
00:22:45,160 --> 00:22:51,200
or maps and iCloud avoid firewall and VPN policies like they just weren't installed.

469
00:22:51,200 --> 00:22:52,800
Now that's being resolved.

470
00:22:52,800 --> 00:22:56,840
Apple apps will be compatible with VPN apps and no longer bypass firewall and other security

471
00:22:56,840 --> 00:23:02,760
tools, which I gave them a really hard time for on this show and I acknowledge that they're

472
00:23:02,760 --> 00:23:03,760
fixing it.

473
00:23:03,760 --> 00:23:04,760
So there's that.

474
00:23:04,760 --> 00:23:06,960
And now I'm sick of talking about them.

475
00:23:06,960 --> 00:23:09,460
But I felt like we should follow up.

476
00:23:09,460 --> 00:23:11,400
You're a fair minded journalist.

477
00:23:11,400 --> 00:23:15,640
Well after harping on them for it, you know, because one of the things that I stated is

478
00:23:15,640 --> 00:23:19,420
like what I don't like about the Mac is it feels like it's not under my control anymore.

479
00:23:19,420 --> 00:23:21,020
And I still feel that way to an extent.

480
00:23:21,020 --> 00:23:24,180
I have a really old Mac that I fire up every now and then.

481
00:23:24,180 --> 00:23:27,980
It just dominates my internet connection for a solid 20 minutes while like iCloud sync

482
00:23:27,980 --> 00:23:32,280
stuff that I don't even want synced and just all this junk comes down that I don't want

483
00:23:32,280 --> 00:23:38,640
with these background NS session, whatever processes that are just eating a bunch of

484
00:23:38,640 --> 00:23:40,840
bandwidth on my LTE connection.

485
00:23:40,840 --> 00:23:45,440
I still feel like the Mac is far out of my control in a lot of ways, but that's an area

486
00:23:45,440 --> 00:23:47,160
where Apple made it right.

487
00:23:47,160 --> 00:23:49,760
So I got to give them credit where credit is due.

488
00:23:49,760 --> 00:23:50,760
Okay.

489
00:23:50,760 --> 00:23:51,760
Okay.

490
00:23:51,760 --> 00:23:52,760
Very firm minded of you.

491
00:23:52,760 --> 00:23:53,760
Thank you.

492
00:23:53,760 --> 00:23:59,240
People have been writing in and they tell us that it's interesting to hear the Linux

493
00:23:59,240 --> 00:24:00,860
perspective on things.

494
00:24:00,860 --> 00:24:05,820
Like people really didn't quite understand what Linux users didn't like about electron.

495
00:24:05,820 --> 00:24:07,800
They just didn't really understand.

496
00:24:07,800 --> 00:24:10,720
So we got some feedback back in that said, yeah, thanks for explaining that from that

497
00:24:10,720 --> 00:24:12,000
perspective.

498
00:24:12,000 --> 00:24:15,720
So I want to show people that Linux users can be reasonable and admit that things are

499
00:24:15,720 --> 00:24:19,520
fixed when they get fixed.

500
00:24:19,520 --> 00:24:24,920
Just trying to, trying to keep it honest here at the Coder Radio program.

501
00:24:24,920 --> 00:24:27,440
You know what helps you know when things need to be fixed?

502
00:24:27,440 --> 00:24:29,640
Oh, nice.

503
00:24:29,640 --> 00:24:30,800
Data dog, baby.

504
00:24:30,800 --> 00:24:31,900
Data dog.

505
00:24:31,900 --> 00:24:32,900
That's right.

506
00:24:32,900 --> 00:24:35,920
Go to datadog.com slash Coder Radio.

507
00:24:35,920 --> 00:24:40,580
This here episode is brought to you by Datadog, the unified monitoring and analytics platform

508
00:24:40,580 --> 00:24:43,500
for the comprehensive visibility into your cloud setup.

509
00:24:43,500 --> 00:24:48,400
If you've got a hybrid cloud setup or on premises, quickly analyze the performance of your Linux

510
00:24:48,400 --> 00:24:53,400
servers in real time with customizable dashboards and troubleshoot Linux issues or application

511
00:24:53,400 --> 00:24:55,080
issues in seconds.

512
00:24:55,080 --> 00:24:59,320
The beautiful thing here is the way they visualize a unified view of your metrics, your traces

513
00:24:59,320 --> 00:25:00,440
and your logs.

514
00:25:00,440 --> 00:25:04,640
Imagine trying to communicate a performance issue or track something down with a stack

515
00:25:04,640 --> 00:25:06,600
that goes across everything.

516
00:25:06,600 --> 00:25:11,200
Your host operating system, your applications, your container environment.

517
00:25:11,200 --> 00:25:16,420
With all of that, they also offer integrations that make it really easy for a large stack

518
00:25:16,420 --> 00:25:17,920
of other technologies.

519
00:25:17,920 --> 00:25:20,840
Basically any major technology you've heard of in the industry.

520
00:25:20,840 --> 00:25:26,240
It's over 400 different applications and APIs that you can use with your data dog monitoring

521
00:25:26,240 --> 00:25:27,240
solution.

522
00:25:27,240 --> 00:25:31,880
So you bring that stack in with your overall stack that you're monitoring for your Linux

523
00:25:31,880 --> 00:25:33,760
systems and your applications.

524
00:25:33,760 --> 00:25:38,000
You get full visibility into the health and performance of all of it.

525
00:25:38,000 --> 00:25:40,200
And it's visualized so perfectly.

526
00:25:40,200 --> 00:25:44,380
You should really check out datadog.com slash Coder Radio to see what I'm saying.

527
00:25:44,380 --> 00:25:49,160
Go there and sign up and create a dashboard and you can do this under the trial.

528
00:25:49,160 --> 00:25:53,920
You'll get a free t-shirt as a way to say thanks for supporting the show at datadog.com

529
00:25:53,920 --> 00:25:55,420
slash Coder Radio.

530
00:25:55,420 --> 00:25:56,720
This solves the problem.

531
00:25:56,720 --> 00:26:02,360
I've seen everything at once at a high level, capturing that and then communicating it with

532
00:26:02,360 --> 00:26:03,360
your team.

533
00:26:03,360 --> 00:26:04,800
That's what Datadog is so great at.

534
00:26:04,800 --> 00:26:10,240
So check it out datadog.com slash Coder Radio.

535
00:26:10,240 --> 00:26:15,600
We talked about testing last week and Facebook had a post since then.

536
00:26:15,600 --> 00:26:18,960
They must be listening to the show, I imagine.

537
00:26:18,960 --> 00:26:24,480
Their Facebook engineering blog had a post that talks about how they do testing.

538
00:26:24,480 --> 00:26:28,720
I just pulled a couple of snips that I wanted to run past you.

539
00:26:28,720 --> 00:26:29,720
You ready for this?

540
00:26:29,720 --> 00:26:30,720
Bring it suck.

541
00:26:30,720 --> 00:26:31,720
Yeah.

542
00:26:31,720 --> 00:26:32,720
Okay.

543
00:26:32,720 --> 00:26:40,700
They say, while we use automated tests to detect regressions in product quality, until

544
00:26:40,700 --> 00:26:48,460
recently we had no means of automatically detecting whether a test itself was deteriorating.

545
00:26:48,460 --> 00:26:52,680
Automated tests are another piece of software that can become unreliable over time as the

546
00:26:52,680 --> 00:26:54,300
code base evolves.

547
00:26:54,300 --> 00:26:55,720
Exactly the point you were making last week.

548
00:26:55,720 --> 00:26:56,720
Yep.

549
00:26:56,720 --> 00:27:01,520
They go on to say, unreliable, also known as flaky tests, produce false or non-deterministic

550
00:27:01,520 --> 00:27:07,100
signals that undermine an engineer's trust and thus effectiveness of the entire regression

551
00:27:07,100 --> 00:27:08,360
testing process.

552
00:27:08,360 --> 00:27:10,520
But they got a solution for you.

553
00:27:10,520 --> 00:27:11,520
Oh, dear.

554
00:27:11,520 --> 00:27:12,520
You ready?

555
00:27:12,520 --> 00:27:13,520
They're going to solve your problem here.

556
00:27:13,520 --> 00:27:18,760
Thus, the right question to ask is not whether a particular test is flaky, but how flaky

557
00:27:18,760 --> 00:27:19,800
it is.

558
00:27:19,800 --> 00:27:25,080
To answer this question, we have developed a measure of test flakiness.

559
00:27:25,080 --> 00:27:30,920
The probabilistic flakiness score, using this measure, we can now test the tests to measure

560
00:27:30,920 --> 00:27:32,800
and monitor their reliability.

561
00:27:32,800 --> 00:27:36,800
Oh, dear God.

562
00:27:36,800 --> 00:27:40,280
So they're writing tests to test the tests.

563
00:27:40,280 --> 00:27:42,400
This is actually a solution that people are using.

564
00:27:42,400 --> 00:27:45,800
Wait a minute, but who tests the tests to test the tests?

565
00:27:45,800 --> 00:27:48,040
Well, you just keep adding people to your team, obviously.

566
00:27:48,040 --> 00:27:52,800
I'm pretty sure this is the plot of Inception.

567
00:27:52,800 --> 00:27:57,720
I love the idea because only Facebook, right, or any corporation where they really have

568
00:27:57,720 --> 00:28:01,920
no problem throwing bodies at something, oh, that just means we'll just need another eight

569
00:28:01,920 --> 00:28:05,880
hours of a developer's time, so that's fine.

570
00:28:05,880 --> 00:28:06,880
No cost of that.

571
00:28:06,880 --> 00:28:10,040
But that logic never comes to a terminal point.

572
00:28:10,040 --> 00:28:12,320
Well, they seem to think they figured it out.

573
00:28:12,320 --> 00:28:15,280
By testing the test, they can then predict the test flakiness.

574
00:28:15,280 --> 00:28:19,000
But how do you predict the flakiness of the test, the test, the original test?

575
00:28:19,000 --> 00:28:25,080
You watch how it scores things over time and how it trends, I suppose, suggest if the flakiness

576
00:28:25,080 --> 00:28:26,920
test is getting flaky.

577
00:28:26,920 --> 00:28:27,920
Whoa.

578
00:28:27,920 --> 00:28:28,920
Okay.

579
00:28:28,920 --> 00:28:30,560
Yeah, I know.

580
00:28:30,560 --> 00:28:31,560
This is their solution.

581
00:28:31,560 --> 00:28:37,560
And it really is, it is an endless problem of just throwing more resources at it.

582
00:28:37,560 --> 00:28:43,080
I feel like a lot of this stuff is we don't want to pay QA people, right?

583
00:28:43,080 --> 00:28:44,080
It just...

584
00:28:44,080 --> 00:28:45,080
Yeah.

585
00:28:45,080 --> 00:28:49,280
I'm not saying tests are bad, I'm just saying at some point, someone does have to actually

586
00:28:49,280 --> 00:28:53,920
look at your software and be like, well, all our tests pass, I mean, it redirected to Pornhub,

587
00:28:53,920 --> 00:28:56,540
but all our tests pass, you know?

588
00:28:56,540 --> 00:28:57,540
Come on.

589
00:28:57,540 --> 00:29:00,760
You know, but like Squirrely Dave points out, like in corporate America, it's not an outlandish

590
00:29:00,760 --> 00:29:02,920
idea just to throw more bodies at it.

591
00:29:02,920 --> 00:29:07,080
You know, I have had clients and I've worked at companies where the goal was to just grow

592
00:29:07,080 --> 00:29:08,080
endlessly.

593
00:29:08,080 --> 00:29:12,820
Now, not every place, obviously, I've been to, of course not, but some, they're just...

594
00:29:12,820 --> 00:29:15,060
There was no limit to the staff they were willing to add.

595
00:29:15,060 --> 00:29:18,160
They never thought like, well, maybe 50,000 is enough.

596
00:29:18,160 --> 00:29:19,160
Yeah.

597
00:29:19,160 --> 00:29:22,560
And Wes is saying in the chat that he thinks it's a find the right balance between automation

598
00:29:22,560 --> 00:29:23,560
human interaction.

599
00:29:23,560 --> 00:29:24,560
That's obviously true, right?

600
00:29:24,560 --> 00:29:25,560
Yeah.

601
00:29:25,560 --> 00:29:26,560
Yeah.

602
00:29:26,560 --> 00:29:31,360
And I'm coming at this from the Rails guy perspective where there was a time in the

603
00:29:31,360 --> 00:29:36,120
early aughts where people were like, you don't need QA people, you just can use all your

604
00:29:36,120 --> 00:29:38,400
automated progression tests and here's...

605
00:29:38,400 --> 00:29:39,400
Right.

606
00:29:39,400 --> 00:29:40,400
Okay.

607
00:29:40,400 --> 00:29:41,400
But here's the other argument.

608
00:29:41,400 --> 00:29:45,600
Why pay for, say, three QA people when you could pay for one developer to write tests?

609
00:29:45,600 --> 00:29:47,240
I would say because tests don't...

610
00:29:47,240 --> 00:29:48,240
Work?

611
00:29:48,240 --> 00:29:49,240
That's too far.

612
00:29:49,240 --> 00:29:50,240
No.

613
00:29:50,240 --> 00:29:51,240
Yeah.

614
00:29:51,240 --> 00:29:52,240
Yeah.

615
00:29:52,240 --> 00:29:55,080
I mean, but they don't count like the type of bugs that...

616
00:29:55,080 --> 00:29:56,080
I don't know, man.

617
00:29:56,080 --> 00:29:57,080
Maybe I'm just old school.

618
00:29:57,080 --> 00:29:59,400
I feel like someone needs to be looking at the software and manually going through like

619
00:29:59,400 --> 00:30:01,360
a script of what it's supposed to do.

620
00:30:01,360 --> 00:30:02,360
Yeah.

621
00:30:02,360 --> 00:30:08,280
I mean, like a post build checklist, I mean, that's what used to work, but I do think it

622
00:30:08,280 --> 00:30:09,280
is a balance.

623
00:30:09,280 --> 00:30:10,280
It's obviously a balance.

624
00:30:10,280 --> 00:30:11,280
Yeah.

625
00:30:11,280 --> 00:30:12,280
Yeah.

626
00:30:12,280 --> 00:30:13,280
It's high level stuff.

627
00:30:13,280 --> 00:30:18,560
And then hands on for the edge cases, Alexander wrote in on this topic, he said, I just want

628
00:30:18,560 --> 00:30:21,640
to give another perspective on the testing discussion.

629
00:30:21,640 --> 00:30:28,000
I work in finance writing for software for finance where correctness is a high priority.

630
00:30:28,000 --> 00:30:32,400
We do Java in the functional style of Haskell with lots of strong typing and strict separation

631
00:30:32,400 --> 00:30:35,680
of side effects and mutability when possible.

632
00:30:35,680 --> 00:30:41,240
In my experience, this catches the vast majority of bugs that would otherwise interact with

633
00:30:41,240 --> 00:30:42,240
us.

634
00:30:42,240 --> 00:30:45,920
But we still have to do TDD and unit tests.

635
00:30:45,920 --> 00:30:49,960
The reason we do this is the tests are helpful in the construction phase to make sure that

636
00:30:49,960 --> 00:30:54,200
we're still reasoning about our inputs and outputs of the functions in the right way

637
00:30:54,200 --> 00:30:59,120
and because this increases our confidence when we're refactoring at a later date.

638
00:30:59,120 --> 00:31:03,500
The second point can't be understated at all because we will regularly refactor and rip

639
00:31:03,500 --> 00:31:05,720
out large portions of our code.

640
00:31:05,720 --> 00:31:09,960
We can use these types as guardrails to make sure that we haven't swapped out the schematics

641
00:31:09,960 --> 00:31:12,480
of our code or make other changes.

642
00:31:12,480 --> 00:31:14,020
It's low risk for them.

643
00:31:14,020 --> 00:31:16,640
So testing helps with that kind of thing.

644
00:31:16,640 --> 00:31:17,640
Absolutely.

645
00:31:17,640 --> 00:31:18,640
I can see his point there.

646
00:31:18,640 --> 00:31:23,120
What Alexander is essentially, I think, trying to say is they have a bit more confidence

647
00:31:23,120 --> 00:31:27,280
when they're redoing large portions of their project because of these tests.

648
00:31:27,280 --> 00:31:28,280
And that makes a lot of sense.

649
00:31:28,280 --> 00:31:31,800
Like you're not trying to make sure everything works, but you want to make sure the thing

650
00:31:31,800 --> 00:31:33,240
launches and stands up.

651
00:31:33,240 --> 00:31:37,760
And if you can catch that in an automated fashion, why not save yourself the time?

652
00:31:37,760 --> 00:31:39,760
Yeah, I agree with that, right?

653
00:31:39,760 --> 00:31:40,760
Commercial.

654
00:31:40,760 --> 00:31:44,000
No, I think there's a bunch of stuff like that where the automated tests make a ton

655
00:31:44,000 --> 00:31:45,380
of sense.

656
00:31:45,380 --> 00:31:49,480
When you get to like the view layer, the UI layer, I really just, I don't...

657
00:31:49,480 --> 00:31:51,040
I know people are going to write in about Selenium.

658
00:31:51,040 --> 00:31:52,040
I've used Selenium.

659
00:31:52,040 --> 00:31:54,080
I just, I don't buy it.

660
00:31:54,080 --> 00:31:57,240
It's just easier to have someone run through the screens and make sure it actually does

661
00:31:57,240 --> 00:32:02,320
and looks the way it's supposed to in my crazy curmudgeonly opinion.

662
00:32:02,320 --> 00:32:04,760
Well, I accept it.

663
00:32:04,760 --> 00:32:06,400
I accept your curmudgeonly opinion.

664
00:32:06,400 --> 00:32:11,520
I really, the way I witnessed it, it really was a much, it was a different era of software

665
00:32:11,520 --> 00:32:17,760
development where QA was just part of the process.

666
00:32:17,760 --> 00:32:20,640
And they worked in kind of conjunction with IT.

667
00:32:20,640 --> 00:32:25,520
And I was there to help support there, especially on certain days.

668
00:32:25,520 --> 00:32:31,080
I worked in an environment once where a web application that allowed different contractors

669
00:32:31,080 --> 00:32:38,020
to come in and bid on state development projects, like for building like a school or a park

670
00:32:38,020 --> 00:32:41,240
or a sidewalk, you know, just all that kind of stuff.

671
00:32:41,240 --> 00:32:47,120
And so because it was dealing with state contracts, there was all of these really stringent regulations

672
00:32:47,120 --> 00:32:49,080
that they had to follow.

673
00:32:49,080 --> 00:32:51,940
And there was a lot of pressure to get that right.

674
00:32:51,940 --> 00:32:58,060
And I remember specifically like the QA team was like the last line of defense before we

675
00:32:58,060 --> 00:33:00,680
would flip something public.

676
00:33:00,680 --> 00:33:01,680
And there were deadlines.

677
00:33:01,680 --> 00:33:06,240
And if something broke, which did happen sometimes because it was a monster of an application,

678
00:33:06,240 --> 00:33:07,840
it was a really high stress situation.

679
00:33:07,840 --> 00:33:13,920
And we had to be able to roll back and the QA member that like approved that section

680
00:33:13,920 --> 00:33:15,880
would be held accountable for it, too.

681
00:33:15,880 --> 00:33:20,520
Like it got a little like, they got a little bit in your face about it even like, hey,

682
00:33:20,520 --> 00:33:21,520
what happened here?

683
00:33:21,520 --> 00:33:22,880
Where did the process break down?

684
00:33:22,880 --> 00:33:27,840
And then they would figure out where the QA process had failed them.

685
00:33:27,840 --> 00:33:31,800
And then they would alter the script so that in the future, that didn't happen.

686
00:33:31,800 --> 00:33:34,600
It was not a very rapid process.

687
00:33:34,600 --> 00:33:37,900
But over time, like they had QA members that worked there for several years that were like

688
00:33:37,900 --> 00:33:40,600
just really solid contributors.

689
00:33:40,600 --> 00:33:45,560
And eventually, they became contributors also like on just like UI suggestions, because

690
00:33:45,560 --> 00:33:48,480
they were really familiar with the product, but more familiar with it from a user's perspective

691
00:33:48,480 --> 00:33:50,520
than the developer perspective.

692
00:33:50,520 --> 00:33:53,760
And it became kind of a really good feedback loop.

693
00:33:53,760 --> 00:33:56,560
And so I was only there for about two years, really.

694
00:33:56,560 --> 00:33:59,080
So I don't know how it worked out ultimately.

695
00:33:59,080 --> 00:34:01,920
But that was my experience with something like that in a really kind of high pressure

696
00:34:01,920 --> 00:34:05,600
situation where they were just like our last line of defense.

697
00:34:05,600 --> 00:34:06,600
Yeah.

698
00:34:06,600 --> 00:34:07,600
And I think that's how it should be, right?

699
00:34:07,600 --> 00:34:11,760
QA is kind of the gatekeeper now, of course, they're going to get pressure because deadlines

700
00:34:11,760 --> 00:34:12,760
and stakeholders.

701
00:34:12,760 --> 00:34:13,760
Yes.

702
00:34:13,760 --> 00:34:14,760
Yeah.

703
00:34:14,760 --> 00:34:19,920
You got to make sure the stakeholders are taken care of stakeholders.

704
00:34:19,920 --> 00:34:21,320
You know who our stakeholders are?

705
00:34:21,320 --> 00:34:22,320
Who's that?

706
00:34:22,320 --> 00:34:23,320
The members.

707
00:34:23,320 --> 00:34:24,320
Oh, yeah.

708
00:34:24,320 --> 00:34:25,960
The coder QA team.

709
00:34:25,960 --> 00:34:31,840
And at QA, coder QA.co become one of our QA members, keep the show on the air, support

710
00:34:31,840 --> 00:34:37,120
the show, get a limited ad feed, and get the coderly report, which we have one out for

711
00:34:37,120 --> 00:34:40,720
last coder, or quarter, some of you call it.

712
00:34:40,720 --> 00:34:44,960
We have a special promo that I think will probably last until next episode.

713
00:34:44,960 --> 00:34:49,440
If you use the promo code 2021, it'll take two bucks off of your membership when you

714
00:34:49,440 --> 00:34:51,000
go to coder QA.co.

715
00:34:51,000 --> 00:34:55,040
I also want to remind you that our friends at a cloud guru, if you're looking at learning

716
00:34:55,040 --> 00:34:58,480
some stuff and want to start exploring around, find them on social media.

717
00:34:58,480 --> 00:35:03,700
It's just slash a cloud guru on YouTube, Twitter, Facebook, pretty much all the social media

718
00:35:03,700 --> 00:35:06,480
sites that you care about, it's just slash a cloud guru.

719
00:35:06,480 --> 00:35:09,720
Mr. Dominic, is there anything special you want to mention for this episode?

720
00:35:09,720 --> 00:35:12,000
No, just follow me at Dumiduco on Twitter.

721
00:35:12,000 --> 00:35:13,000
There you go.

722
00:35:13,000 --> 00:35:14,000
You can find him there.

723
00:35:14,000 --> 00:35:17,360
I am at Chris Lass, his company is at the Mad Botter Inc.

724
00:35:17,360 --> 00:35:23,040
The whole podcast network is at Jupiter Signal, and the show is at Coder Radio Show.

725
00:35:23,040 --> 00:35:29,320
We do this here podcast live on Mondays, starts at 5pm, 8pm Eastern at jblive.tv, and I would

726
00:35:29,320 --> 00:35:31,560
love to have you join us.

727
00:35:31,560 --> 00:35:35,900
Also we're getting really close to episode 400, so keep an ear out soon for announcements

728
00:35:35,900 --> 00:35:40,480
related to that, and links to everything we talked about today are at coder.show slash

729
00:35:40,480 --> 00:35:41,480
398.

730
00:35:41,480 --> 00:35:47,760
You're also going to find our contact form there as well as our RSS feed so you can pick

731
00:35:47,760 --> 00:35:52,760
a way that you like to subscribe to the show and get it every single week, while Monday

732
00:35:52,760 --> 00:35:53,760
means we're live.

733
00:35:53,760 --> 00:36:00,040
But you know, I really know that like the bulk of you, like 99.5% of you, you're listening

734
00:36:00,040 --> 00:36:01,040
on the download.

735
00:36:01,040 --> 00:36:04,240
So thank you for doing that, and if you'd like to help the show out, maybe you can't

736
00:36:04,240 --> 00:36:09,320
be a member, another great way that we totally appreciate is sharing the show with somebody.

737
00:36:09,320 --> 00:36:13,080
Word of mouth is the number one way podcasts are marketed, it's really the only effective

738
00:36:13,080 --> 00:36:14,200
way.

739
00:36:14,200 --> 00:36:17,080
So we could use that too, helps the show a lot.

740
00:36:17,080 --> 00:36:20,600
Thanks everyone for tuning in to this week's episode of the Coder Radio program, and we'll

741
00:36:20,600 --> 00:36:30,360
see you right back here next week.

