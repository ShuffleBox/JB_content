WEBVTT

00:00.000 --> 00:07.000
This is Koda Radio, episode 393? Wow.

00:15.000 --> 00:19.000
Hello everyone and welcome into Jupiter Broadcasting's weekly talk show.

00:19.000 --> 00:23.000
Taking a pragmatic look at the art and business of software development and its related technologies.

00:23.000 --> 00:27.000
This isn't William Shatner to the intro, but I'm not William Shatner.

00:27.000 --> 00:30.000
My name is Chris and this episode is brought to you by a Cloud Guru.

00:30.000 --> 00:32.000
A Cloud Guru now includes Cloud Break Playgrounds.

00:32.000 --> 00:36.000
So, you know, go spin up an Azure AWS or Google Cloud Sandbox.

00:36.000 --> 00:38.000
Boom! On their dime, not yours.

00:38.000 --> 00:42.000
Get certified, get hired, get learning at acloudguru.com.

00:42.000 --> 00:44.000
I already said my name, so there's that.

00:44.000 --> 00:46.000
I'll just introduce Mike. Hello, Mike.

00:46.000 --> 00:50.000
What's up, Chris? So I have three exciting things to tell you at the start of the show.

00:50.000 --> 00:51.000
Right off the bat.

00:51.000 --> 00:54.000
Is it winter solstice? Because hallelujah, right?

00:54.000 --> 00:57.000
Okay, four exciting things to tell you right at the start of the show.

00:57.000 --> 01:01.000
It is winter solstice, so let us all get our drums and strip naked and go into the forest.

01:01.000 --> 01:03.000
One, can you hear this?

01:03.000 --> 01:05.000
Oh, yeah.

01:05.000 --> 01:07.000
Cherry blues, baby.

01:07.000 --> 01:09.000
New keyboard?

01:09.000 --> 01:14.000
I bought the cherry blue version of the code keyboard I always use, but I did go for the smaller profile this time.

01:14.000 --> 01:16.000
And is that better?

01:16.000 --> 01:18.000
Yeah, because I have a smaller desk now.

01:18.000 --> 01:22.000
It sounds nice. I like the sound of it. I can tell.

01:22.000 --> 01:24.000
All right, what else you got for me?

01:24.000 --> 01:28.000
I am 100% on Linux again. I am on the Thaleo right now.

01:28.000 --> 01:31.000
I returned the MacBook Air, which I guess that's two things.

01:31.000 --> 01:35.000
And just to calm you down from all the excitement, can you hear this?

01:35.000 --> 01:39.000
That would be Suntory Japanese whiskey for our new evening edition of the show,

01:39.000 --> 01:41.000
because I do not have my son today.

01:41.000 --> 01:44.000
I like all these things. I like all these things.

01:44.000 --> 01:47.000
Wait, am I hearing angels? How strong is that?

01:47.000 --> 01:50.000
I had one thing in the studio is I had a spot left of gin,

01:50.000 --> 01:52.000
so I am having myself a half gin and tonic.

01:52.000 --> 01:54.000
It is the evening now. We are doing the show.

01:54.000 --> 02:00.000
We have the Coder Radio happy hour at 5 p.m., 8 p.m. Eastern.

02:00.000 --> 02:04.000
And then the show kicks off about a half hour after that,

02:04.000 --> 02:06.000
although today we recorded the Coderly.

02:06.000 --> 02:10.000
Just a reminder, if you would like to hear the Coderlys, you can subscribe.

02:10.000 --> 02:13.000
That's right. Become a member. Support the show.

02:13.000 --> 02:15.000
Keep us independent. All of that good stuff.

02:15.000 --> 02:19.000
CoderQA.co. Become part of our quality assurance team.

02:19.000 --> 02:22.000
And really, let's be honest, keeping us on the air is good QA.

02:22.000 --> 02:24.000
That's good QA.

02:24.000 --> 02:27.000
Yes, let me try all the crappy cross-platform frameworks for you.

02:27.000 --> 02:29.000
You're probably saving yourself a lot of money.

02:29.000 --> 02:31.000
Yeah, there you go.

02:31.000 --> 02:36.000
So first of all, I want to say a shout out to all my robe bros out there,

02:36.000 --> 02:38.000
and robe bros includes ladies,

02:38.000 --> 02:43.000
who wrote in and said that they are 100% on board with the robe idea.

02:43.000 --> 02:46.000
So today I am rocking again the Minimum Viable Robe.

02:46.000 --> 02:49.000
And after my research over the week,

02:49.000 --> 02:52.000
and based on the feedback I received from the robe bros,

02:52.000 --> 02:59.000
I think a more towel-like texture and less fluffy texture is the way to go.

02:59.000 --> 03:01.000
Still thinking smoking jacket.

03:01.000 --> 03:04.000
I think there's room for both, my friend. I think there's room for both.

03:04.000 --> 03:07.000
Okay. The Chris edition and the Mike edition, is that what we're thinking?

03:07.000 --> 03:09.000
Well, I think you could have editions.

03:09.000 --> 03:12.000
Like you could have the 2021 robe, right?

03:12.000 --> 03:15.000
And then there could be a 2022 robe, you know?

03:15.000 --> 03:16.000
Oh.

03:16.000 --> 03:19.000
And then like the smoking jacket, we could think about that.

03:19.000 --> 03:23.000
Maybe that's like a fall item that we update every fall, you know, the edition.

03:23.000 --> 03:24.000
The edition.

03:24.000 --> 03:27.000
Is it like the Apple Watch edition we're going to charge like five times as much?

03:27.000 --> 03:28.000
Yeah, we'll have the edition,

03:28.000 --> 03:32.000
which the only difference is like any logo we have on there is stitched in gold

03:32.000 --> 03:34.000
instead of the regular white.

03:34.000 --> 03:37.000
That'll be the difference.

03:37.000 --> 03:41.000
This robe thing, basically what I just need now is somebody to say,

03:41.000 --> 03:46.000
Chris, listen, you dummy, this is how you convert this into a sellable item.

03:46.000 --> 03:50.000
Because like I could find one off people to create as a coder robe, kind of.

03:50.000 --> 03:52.000
But then they don't like have a store to sell it.

03:52.000 --> 03:56.000
Like I need a way to go from stitch to sale.

03:56.000 --> 04:00.000
And then there's people waiting in the wings to buy this product.

04:00.000 --> 04:04.000
So somebody just needs to step up and work with me here to get this thing on the market.

04:04.000 --> 04:06.000
Because we got we got robe bros ready to roll.

04:06.000 --> 04:10.000
So for folks who just listen in and don't like hang out in the IRC or Telegram or whatever,

04:10.000 --> 04:11.000
he's not kidding.

04:11.000 --> 04:15.000
There are people who are chomping at the bit to get these damn ropes.

04:15.000 --> 04:17.000
Oh, I mean, we got a lot of email about it.

04:17.000 --> 04:18.000
A lot of email.

04:18.000 --> 04:22.000
Like, I was shocked at how much this robe idea has taken off.

04:22.000 --> 04:23.000
I think I'm onto something here.

04:23.000 --> 04:24.000
Everybody likes to be comfortable.

04:24.000 --> 04:26.000
You know, it's it might be winter solstice,

04:26.000 --> 04:29.000
but we still got a lot of action here in the winter to get a robe on the market.

04:29.000 --> 04:30.000
I think I mean, I can't really talk.

04:30.000 --> 04:33.000
I have a glass of whiskey, a mad bottle of polo shirt and no pants on.

04:33.000 --> 04:37.000
So that means it's time to do some feedback.

04:37.000 --> 04:39.000
So one of the other things we got a lot of emails about is keyboards.

04:39.000 --> 04:43.000
And I just have a couple of them just I'm just going to do a couple of them.

04:43.000 --> 04:46.000
Giorgio wrote in on the subject of keyboards.

04:46.000 --> 04:53.000
And he said that I also had that experience that Chris talked about where you start to you start to work with a good keyboard.

04:53.000 --> 05:02.000
And it's kind of life changing because you're interfacing with it so often that it is something nice that feels good to touch.

05:02.000 --> 05:07.000
It actually makes a noticeable improvement in your quality of life while working.

05:07.000 --> 05:12.000
So he says he was afraid to let go of the arrow keys, but he wanted a small 60 percent keyboard.

05:12.000 --> 05:17.000
But he went with the I think it's the Anna Pro or something and pro.

05:17.000 --> 05:19.000
I'll have a link in the show notes.

05:19.000 --> 05:25.000
There's a neat software trick, though, that lets you kind of map arrow key buttons on there and stuff in a way that works really well,

05:25.000 --> 05:28.000
he says, and has different Bluetooth channels.

05:28.000 --> 05:32.000
So you can you can actually pair it with four devices, has good backlighting.

05:32.000 --> 05:35.000
So it's right, right kind of in the sweet spot where I wanted something.

05:35.000 --> 05:38.000
So I'm going to be checking that out.

05:38.000 --> 05:44.000
But we also kind of got we also got some people that wrote in and explained what they use the custom keyboard firmwares for,

05:44.000 --> 05:47.000
including switch or keyboard layout.

05:47.000 --> 05:50.000
So that way they can use exceptionally small keyboards.

05:50.000 --> 05:53.000
Lots of really, really geeky stuff.

05:53.000 --> 05:55.000
And there's a little bit of a tip I have for you.

05:55.000 --> 05:59.000
If you're getting into Matrix, the chat program, not the movie.

05:59.000 --> 06:05.000
There is a mechanical keyboard matrix chat room where people are talking more about this.

06:05.000 --> 06:08.000
And I just joined it myself.

06:08.000 --> 06:11.000
And I love it because I think Matrix is starting to see some nice adoption.

06:11.000 --> 06:13.000
And this is a perfect community for it.

06:13.000 --> 06:17.000
And so I have a link to that in the show notes if you want to check that out.

06:17.000 --> 06:22.000
And then Oliver reminded us that there's actually a ThinkPad keyboard.

06:22.000 --> 06:30.000
It's essentially like the keyboard, the beloved keyboard from ThinkPads that's sold as a standalone product called the TrackPoint Keyboard 2.

06:30.000 --> 06:37.000
And I'd forgotten all about this, but I know, you know, Popey from from Canonical.

06:37.000 --> 06:39.000
He loves these things.

06:39.000 --> 06:40.000
I know he swears by it.

06:40.000 --> 06:43.000
Even has the TrackPoint, the little red nipple in the middle of the keyboard.

06:43.000 --> 06:45.000
Link to that in the show notes as well.

06:45.000 --> 06:48.000
Lots of good feedback on keyboards.

06:48.000 --> 06:52.000
There's people, people, too, that are just now kind of catching up.

06:52.000 --> 06:55.000
They're just like, oh, I have to respond to the keyboard stuff.

06:55.000 --> 06:56.000
It's cool.

06:56.000 --> 06:59.000
I'm not saying all of it's going to make it on air, but I will read it.

06:59.000 --> 07:02.000
And I do respond to a lot of it, too, when I'm going through and reading it.

07:02.000 --> 07:05.000
But we have to move from keyboards to chairs, Mike.

07:05.000 --> 07:12.000
Just a just a like offshoot of the conversation we started last week about work from home setups.

07:12.000 --> 07:18.000
Nicholas writes and he said you asked for feedback on how we changed our workspace while working from home this year.

07:18.000 --> 07:28.000
This one isn't directly related to interfacing with the computer, but I recently upgraded my chair, which, you know, I previously used for maybe two or three hours a day before working at home.

07:28.000 --> 07:31.000
But then had to increase that considerably.

07:31.000 --> 07:34.000
So I went from an executive style leather chair.

07:34.000 --> 07:40.000
I used to have one of those to a proper tasking chair, he says, with a steel is case sleep.

07:40.000 --> 07:44.000
And he goes on to say it made a huge difference to my back and neck pain.

07:44.000 --> 07:51.000
Having proper range of adjustments that you can make throughout the day is so much nicer than being stuck in the exact same position all day.

07:51.000 --> 07:58.000
So out of curiosity, what shares are you and Mike using?

07:58.000 --> 08:02.000
I I don't know if I want to start my answer so embarrassing.

08:02.000 --> 08:06.000
Do you do you have any kind of non embarrassing chair answer for him?

08:06.000 --> 08:13.000
Because mines are bad, minorly bad. I mean, up until like a week ago, I did.

08:13.000 --> 08:21.000
So I have recently moved and in the move, I broke both my standing desk because it turns out there is no good way to take out wood screws.

08:21.000 --> 08:28.000
Oh, and I was unable to fit my chair through a doorway, so I had to leave it behind.

08:28.000 --> 08:33.000
I am now currently sitting on a chair from Amazon. And yeah, it's not what you want.

08:33.000 --> 08:40.000
What happened to me is I got like one of those mesh net chairs from my office upstairs, and that does pretty good.

08:40.000 --> 08:47.000
I got like kind of a cheaper one, but I really it is pathetic in the studio.

08:47.000 --> 08:54.000
These chairs hurt. They hurt to sit in. They make a lot of noise, which you can often hear in the background of our audio is my chair noise.

08:54.000 --> 09:00.000
And they are cheap feeling like they feel like they're about to fall apart.

09:00.000 --> 09:04.000
But I bought a different series of chairs and none of them worked.

09:04.000 --> 09:09.000
And here I am, I'm like, well, blown like almost two hundred dollars on chairs and none of this works.

09:09.000 --> 09:14.000
And I just kind of gave up and stuck with the crap for a while. It's ridiculous.

09:14.000 --> 09:20.000
So the problem with good stuff I found is every time you like need to move either offices or house or whatever,

09:20.000 --> 09:25.000
the good stuff is very hard to disassemble and reassemble well.

09:25.000 --> 09:30.000
OK, so the chair I used to have was in the company's name is autonomous.

09:30.000 --> 09:35.000
And it's got like, you know, the fancy like lumbar support, you know, three adjustable positions.

09:35.000 --> 09:43.000
Then I had an uplift standing desk. And honestly, if I had to pick like if I was going to rebuy one,

09:43.000 --> 09:47.000
I think I would just deal with the shitty chair and I would get a standing desk.

09:47.000 --> 09:53.000
That's kind of been my thinking. I actually I actually just about a month or two ago got a standing desk.

09:53.000 --> 09:58.000
I haven't actually put it together yet because I'm planning to just redo my whole office.

09:58.000 --> 10:01.000
And that's the way I'm going to go. Just going to try to stand more while coding.

10:01.000 --> 10:07.000
I previously was doing a ton of standing and it does limit the back pain and the RSI.

10:07.000 --> 10:12.000
If you know the standing as I had is one of these motorized adjustable ones.

10:12.000 --> 10:18.000
It's like as you feel different during the day because I'm a you know, I'm a very picky pain in the ass.

10:18.000 --> 10:24.000
You can adjust it differently. The problem is it starts at five hundred dollars.

10:24.000 --> 10:29.000
And it's kind of a pain to set up. Yeah. And very, very heavy.

10:29.000 --> 10:33.000
So it's one of those things that it doesn't seem that bad when you take it in parts and you build it.

10:33.000 --> 10:37.000
But if you ever need to move it, one, it's probably not going to come apart well.

10:37.000 --> 10:46.000
At least that was my experience. And two, it's it's so heavy and so awkward that you probably can't fit it assembled through a doorway.

10:46.000 --> 10:58.000
So I'm sort of like right now, my my new setup is I have the Thaleo sitting on a very questionable placard to Amazon vinyl record holder.

10:58.000 --> 11:07.000
So, you know, if you hear a crash, I have an Amazon little computer desk that my twenty seven inch monitor is basically as big as I am sitting in an Amazon.

11:07.000 --> 11:11.000
So basically this episode is brought to you by Amazon Basics. Oh, man.

11:11.000 --> 11:16.000
It's been a good year for Amazon. They've they've. Bezos is the king.

11:16.000 --> 11:22.000
They're basically my short my store for anything but immediately fresh goods or something is essentially Amazon.

11:22.000 --> 11:27.000
When I was locked down, I had to order food from Amazon. I know I would do it.

11:27.000 --> 11:34.000
I I am fortunately stab. I got it. You know, I as I've documented on the show, I had a bit of an Uber Eats habit over the summer, which I had to break.

11:34.000 --> 11:38.000
It's not easy that I get gets expensive real quick. I was doing that, too.

11:38.000 --> 11:48.000
Yeah, we also had another email in about modifying home workspaces from Simon and he had a couple of really good items that people might want to consider purchasing for their desk area.

11:48.000 --> 11:54.000
And I can actually, funny enough, vouch for both of these. So Simon says responding to your workspace modifications.

11:54.000 --> 12:02.000
I wanted a second low cost screen and some flexibility for its placement, which is exactly what I wanted.

12:02.000 --> 12:16.000
So I went with the following two items, a tablet mount, and this is a tablet mount with a long gooseneck that you could kind of position the tablet anywhere you want and that clamps down on the desk.

12:16.000 --> 12:27.000
I have one of these and it's extremely useful for doing video calls from a tablet, which are often just simpler than doing video calls from a desktop.

12:27.000 --> 12:35.000
And so I got one of these as well for my work set up at home, and my wife uses it for her video calls and any client calls that she's done.

12:35.000 --> 12:45.000
And then the second item that Simon wanted to pass along is a 15 inch 1080p portable display.

12:45.000 --> 12:49.000
And I just got one of these as well. He likes his a little better than I like mine.

12:49.000 --> 12:58.000
And mine was, so this is $210 on Amazon. Mine was cheaper and it was 1440p.

12:58.000 --> 13:01.000
And I wanted that to match the native resolution of my laptop.

13:01.000 --> 13:11.000
However, the quality of both of the two that I have now bought, so I ended up spending more than I would have, I'm going to send one of them back, is trash.

13:11.000 --> 13:14.000
It's one of the worst screens I've ever looked at.

13:14.000 --> 13:22.000
The colors are horrible. The lighting is horrible. The mount screw holes show through like as little pressure points on the screen.

13:22.000 --> 13:30.000
They're bad. But what these things are, in the case of mine, like $150 or something, they're cheap, little portable screens.

13:30.000 --> 13:36.000
Not super bright, 500 nits, but you don't need a lot. And they come with a leather case like a tablet would.

13:36.000 --> 13:45.000
But this only is a monitor, but it comes presented like a tablet and it takes HDMI in or USB-C in or some of them take DisplayPort.

13:45.000 --> 13:52.000
And it is such an easy way to quickly add a second display with some decent resolution to a workspace.

13:52.000 --> 14:00.000
So if you have a laptop or you have a limited amount of space, you can get this mount that Simon's talking about, this gooseneck mount,

14:00.000 --> 14:06.000
and you combine it with one of these portable displays and you have yourself a really simple second screen.

14:06.000 --> 14:09.000
I actually just mounted mine to my monitor mount.

14:09.000 --> 14:15.000
And I like it a lot because it's essentially the same size and same resolution as my laptop.

14:15.000 --> 14:19.000
And I just really need it for text chats and terminal windows.

14:19.000 --> 14:22.000
I'm not using it to look at graphics or play games or anything like that.

14:22.000 --> 14:34.000
So I'm just living with the picture quality as it is. But these two items together, the portable monitor and the gooseneck are a really great way for somebody that needs a little bit of flexibility in their setup.

14:34.000 --> 14:37.000
They have really crappy speakers built into if you care.

14:37.000 --> 14:42.000
It is a nice quick way to get a second screen without having to spend, you know, big monitor money.

14:42.000 --> 14:48.000
And I'll have those linked in the show notes. If people are interested, just go to coder.show slash 393.

14:48.000 --> 14:50.000
All right. Now we're getting into the meat.

14:50.000 --> 14:52.000
Now we're getting into the good stuff here.

14:52.000 --> 14:54.000
The beef, the chicken, yes.

14:54.000 --> 14:55.000
Or the snake.

14:55.000 --> 14:58.000
Ricardo writes in, he says, Hello, Chris and Mike.

14:58.000 --> 15:00.000
First time caller, longtime listener.

15:00.000 --> 15:05.000
I'd like to take the opportunity to provide just a little bit of feedback on 392, seduced by the snake.

15:05.000 --> 15:13.000
I wonder what Mike will eventually report in 2021 when Python inevitably becomes too slow for ML work.

15:13.000 --> 15:17.000
Maybe forcing him to look under the hood and delve into other languages.

15:17.000 --> 15:20.000
Perhaps Python has a lot of community momentum.

15:20.000 --> 15:26.000
But will that last when you can have something like Julia that is both fast and easy to read?

15:26.000 --> 15:31.000
And if we're talking about machine learning, I guess maybe even Swift might be a better option.

15:31.000 --> 15:33.000
Shots fired.

15:33.000 --> 15:35.000
There's no need for hate speech.

15:35.000 --> 15:37.000
Wow. I mean, he's really thinking this.

15:37.000 --> 15:40.000
Python's not, you know, it's not gonna be fast enough for you.

15:40.000 --> 15:41.000
It's gonna be too damn slow.

15:41.000 --> 15:43.000
Are you doing a lot of ML?

15:43.000 --> 15:46.000
Yeah, we're actually kicking off a pretty significant ML project.

15:46.000 --> 15:51.000
So, OK, here's the dirty little secret about most Python libraries you use.

15:51.000 --> 15:54.000
Large portions of them are written in C or C++.

15:54.000 --> 16:02.000
And a certain maniac you all know and apparently like to know which keyboard we're all using can also write those in.

16:02.000 --> 16:03.000
Get ready for it.

16:03.000 --> 16:04.000
Are you ready?

16:04.000 --> 16:05.000
Rust.

16:05.000 --> 16:06.000
Oh, my God.

16:06.000 --> 16:09.000
Oh, my goodness.

16:09.000 --> 16:13.000
So when you need performance, it's either C++ or Rust.

16:13.000 --> 16:18.000
But for the just application logic, you can totally use Python.

16:18.000 --> 16:24.000
You have a good point that Python is not exactly the fastest language in the world, but neither was Ruby.

16:24.000 --> 16:29.000
I would argue a little bit that when I say ML, I mean TensorFlow.

16:29.000 --> 16:35.000
And Google has done a pretty significant job of making the TensorFlow libraries interface with Python very fast,

16:35.000 --> 16:38.000
granted by not writing them in Python for the most part.

16:38.000 --> 16:46.000
But that is one of the strengths of Python is that when you need it, it is super easy to interface with C, C++.

16:46.000 --> 16:49.000
And if you are a crab person like me, Rust.

16:49.000 --> 16:50.000
Yeah, great point.

16:50.000 --> 16:52.000
And I love that you got a Rust mention in there.

16:52.000 --> 16:53.000
We did get some.

16:53.000 --> 16:56.000
Yeah, and I'm not just I'm not just talking about FFI here, by the way.

16:56.000 --> 17:01.000
Right. Because, of course, I'm talking about like there's like the language native ways to do it.

17:01.000 --> 17:03.000
Although you could use FFI. There's nothing wrong with FFI.

17:03.000 --> 17:06.000
But we did get somebody wrote in said, you know, what about Rust?

17:06.000 --> 17:10.000
Oh, forget about Python. So there you go. You preemptively answered their question.

17:10.000 --> 17:13.000
I always have to mention Rust because. Yeah.

17:13.000 --> 17:16.000
Yeah. It's like the social contract with the Internet.

17:16.000 --> 17:19.000
Grav writes in and wants some help getting started with Mac development.

17:19.000 --> 17:22.000
He says, big fan of the show and hopped on with the relaunch.

17:22.000 --> 17:25.000
And it actually inspired me to pick up software development.

17:25.000 --> 17:30.000
Now he says, I'm starting with Python, but I think I'm really interested in learning how to develop for the M1.

17:30.000 --> 17:35.000
It seems like and maybe it's just me that Apple doesn't do a very good job of actually explaining

17:35.000 --> 17:39.000
how to learn how to code for the Macs, despite what Apple's documentation is bad.

17:39.000 --> 17:41.000
Who said that? Nobody ever.

17:41.000 --> 17:43.000
No, this would be the first time I've ever seen.

17:43.000 --> 17:48.000
And everybody there said that. No, I mean, they're the richest company in the world with pretty much unlimited funds.

17:48.000 --> 17:50.000
But who wants to write documentation? Yeah.

17:50.000 --> 17:55.000
He says, Do you have any tips on how to get started and follow my passion with software development?

17:55.000 --> 18:01.000
So he seems like he wants to get into this and he feels like maybe I should follow something I'm actually excited about developing for the M1.

18:01.000 --> 18:08.000
Sure. But yeah, you know, geez, like it feels like now is the hardest time ever trying to pick how to develop for the Mac.

18:08.000 --> 18:10.000
That's exactly what I was going to say.

18:10.000 --> 18:19.000
So you have picked the most difficult time to start developing for Mac OS, ignoring the M1 because the reason your problem.

18:19.000 --> 18:23.000
So like you could write Mac GUI apps in Python, no problem.

18:23.000 --> 18:28.000
The problem is many of those toolkits are not ready for the M1 right now.

18:28.000 --> 18:32.000
The other problem is Mac OS itself is transitioning as is like iOS.

18:32.000 --> 18:36.000
But the transition is a lot more dramatic on Mac OS.

18:36.000 --> 18:39.000
I mean, I've got to go a little deep in this for it to make sense.

18:39.000 --> 18:41.000
All right. Buckle up. All right.

18:41.000 --> 18:44.000
Back in the day, we had something called AppKit.

18:44.000 --> 18:48.000
AppKit had a separate app called I believe was Interface Builder.

18:48.000 --> 18:51.000
I think they still call it that now, but it's built into Xcode.

18:51.000 --> 18:54.000
And it used a system called Springs and Struts.

18:54.000 --> 19:00.000
That was basically if you've ever used NetBeans. So, yay, old reference.

19:00.000 --> 19:02.000
You know what I'm talking about.

19:02.000 --> 19:13.000
Then came this little darling called iOS, which had something called UIKit, which kind of used Springs and Struts, but not really and quickly evolved and blah, blah, blah, blah, blah.

19:13.000 --> 19:21.000
It was basically a much more modern implementation, not built off of, but certainly inspired by AppKit.

19:21.000 --> 19:25.000
A good example is the way table views worked in AppKit is basically insane.

19:25.000 --> 19:27.000
But the way they work in iOS is much easier.

19:27.000 --> 19:31.000
And in fact, they've simplified them again with the release of Swift.

19:31.000 --> 19:34.000
Mac OS is finally catching up, right?

19:34.000 --> 19:42.000
So, let's just say you're sitting there at Greenfield and you're saying, I'm going to build a Mac app to do whatever it is that you want to do, right?

19:42.000 --> 19:45.000
I don't know. Stock Chris's Twitter feed.

19:45.000 --> 19:49.000
You have several choices, and these are all native choices.

19:49.000 --> 19:51.000
You have the old school AppKit.

19:51.000 --> 19:56.000
That is probably not the right choice because it's obviously on the way out.

19:56.000 --> 20:05.000
You have Swift UI, which I didn't even mention, but it's like a more reactive programming version of doing it, right?

20:05.000 --> 20:08.000
So, it's more declarative UIs, things like that.

20:08.000 --> 20:12.000
But that is very new and kind of rough right now.

20:12.000 --> 20:19.000
You have the weird UIKit inspired additions to AppKit with the relative layout stuff.

20:19.000 --> 20:21.000
That's also on the way out.

20:21.000 --> 20:24.000
You also have, oh my God, Catalyst, is that it?

20:24.000 --> 20:28.000
Right? Where you could write an iOS app and run it on the Mac.

20:28.000 --> 20:31.000
That comes with tons of limitations, though.

20:31.000 --> 20:33.000
But that might be the least insane option.

20:33.000 --> 20:42.000
Because you're learning Python, eventually Q and the other vendors will let you do Python development on Mac.

20:42.000 --> 20:44.000
We'll get their crap together and support the M1.

20:44.000 --> 20:47.000
I wouldn't be surprised if that's like January.

20:47.000 --> 20:49.000
Yeah. Soon.

20:49.000 --> 20:51.000
So, maybe you just develop it in a third party toolkit.

20:51.000 --> 20:55.000
Now, things get rough if you want to go into the Mac App Store.

20:55.000 --> 21:02.000
Because now you have to be a little more careful about, well, does this toolkit, can I, see this, oh my God, app notarization.

21:02.000 --> 21:10.000
Can an application, a binary built in this toolkit, follow the Mac OS notarization guidelines?

21:10.000 --> 21:11.000
And I'm not going to go into that.

21:11.000 --> 21:17.000
But if you want to be on the App Store, your best bet is probably something that you know can do notarization.

21:17.000 --> 21:22.000
Yeah. Like, it sucks, right?

21:22.000 --> 21:25.000
This is the worst possible time to be doing this.

21:25.000 --> 21:31.000
I think, too, to truly have some level of success on Apple's platforms,

21:31.000 --> 21:35.000
you typically need to be skating to where their puck is going.

21:35.000 --> 21:40.000
And I would think now if you were going to build an app today for their platforms,

21:40.000 --> 21:49.000
I would be investing the technologies that let you deliver that app on iOS, Mac OS, iPad OS.

21:49.000 --> 21:53.000
You're probably going to see more success there just because that's where Apple is going to be putting their efforts

21:53.000 --> 22:00.000
in both probably back in development resources, but also in marketing and promotional resources.

22:00.000 --> 22:02.000
So you bring up a great point, Chris.

22:02.000 --> 22:03.000
There is a fourth option.

22:03.000 --> 22:08.000
Yeah. He just builds an iPad app, right, in Xcode and Swift UI.

22:08.000 --> 22:09.000
And ships it for the Mac.

22:09.000 --> 22:10.000
And just ships it on the M1.

22:10.000 --> 22:11.000
Yeah.

22:11.000 --> 22:15.000
Right. And now you're going to be limited because obviously it's an iPad app.

22:15.000 --> 22:18.000
But Chris is completely right that in a year,

22:18.000 --> 22:25.000
it's very obvious that they're going to keep blurring the lines between, you know, iPad and Mac.

22:25.000 --> 22:27.000
So I'd probably go that route. He's right.

22:27.000 --> 22:30.000
Yeah. And the reality is if you're successful at it,

22:30.000 --> 22:33.000
you'll be able to monetize it pretty straightforward in that dynamic.

22:33.000 --> 22:36.000
I mean, it doesn't work for every app for sure.

22:36.000 --> 22:40.000
Also, the iOS is such a bigger market too if you're actually trying to like sell it.

22:40.000 --> 22:41.000
Yeah. All right.

22:41.000 --> 22:43.000
So Dom writes in.

22:43.000 --> 22:49.000
He wanted to know if we had heard of another kind of organizational technique.

22:49.000 --> 22:53.000
He says, by the way, he's also someone in the market for a bathrobe.

22:53.000 --> 22:55.000
A lot of people were. I appreciate that.

22:55.000 --> 22:58.000
Everybody keep letting me know so I can gauge the interest.

22:58.000 --> 23:02.000
He says, you mentioned various agile techniques from time to time,

23:02.000 --> 23:07.000
but I wonder whether you're familiar with weighted shortest job first.

23:07.000 --> 23:10.000
OK. So I hadn't heard of this. Have you heard of this before?

23:10.000 --> 23:12.000
I have no idea what that is.

23:12.000 --> 23:14.000
OK. Well, he says the principle is simple.

23:14.000 --> 23:18.000
You work out the cost of delay, effectively the value of a piece of work,

23:18.000 --> 23:21.000
and then divide that by the effort it would take to deliver it.

23:21.000 --> 23:26.000
Repeat this for each item of work and see where it comes out with the highest number.

23:26.000 --> 23:31.000
If you don't know the cost of a delay or value for the effort, estimate it.

23:31.000 --> 23:32.000
You can do that however you like.

23:32.000 --> 23:38.000
But the best way I find to use is to use a certain sequence, abstracting that.

23:38.000 --> 23:41.000
So he says, and I abstract that problem somewhat using a nonlinear sequence,

23:41.000 --> 23:43.000
which will help you focus on what is really valuable.

23:43.000 --> 23:45.000
But he's really nerding out on this.

23:45.000 --> 23:50.000
He says the result gives me clarity and it helps me reach realizations.

23:50.000 --> 23:53.000
And it's been a quite useful exercise for me. So it's interesting.

23:53.000 --> 23:55.000
So he kind of looks at the effort.

23:55.000 --> 23:58.000
He looks at how much it's going to take and then he divides things up.

23:58.000 --> 24:03.000
And he also weighs in what's going to have the most impact if I delay it.

24:03.000 --> 24:07.000
And then it's essentially like a systematic approach to the squeaky wheel.

24:07.000 --> 24:11.000
It gets the grease. But he wanted to pass it along.

24:11.000 --> 24:13.000
Weighted shortest job first.

24:13.000 --> 24:15.000
I've never heard of that. It's an interesting approach.

24:15.000 --> 24:17.000
I like the name. I've got to say.

24:17.000 --> 24:18.000
I like it.

24:18.000 --> 24:21.000
We would like your feedback, including what you've done

24:21.000 --> 24:26.000
for your work from home setups over the year to make it a little better for you

24:26.000 --> 24:28.000
or whatever your new normal workspace is.

24:28.000 --> 24:32.000
I just posted some pictures of my current setup,

24:32.000 --> 24:36.000
instagram.com slash insta-chrislass.

24:36.000 --> 24:38.000
I don't Instagram much.

24:38.000 --> 24:39.000
You're on Instagram?

24:39.000 --> 24:43.000
Well, where do you post pictures now if you want to be able to link pictures to an album?

24:43.000 --> 24:45.000
Me? I post them in DMs on Tinder, but that's different.

24:45.000 --> 24:48.000
Yeah. I mean, I'm not, you know, like, so that's what I use it for.

24:48.000 --> 24:50.000
I'm like, I can put a link to that in the show notes,

24:50.000 --> 24:54.000
but I don't really otherwise use it.

24:54.000 --> 24:56.000
So it's not like a great way to get a hold of me.

24:56.000 --> 24:58.000
People do a try though.

24:58.000 --> 25:01.000
Yeah, everything's got DMs, Mike. Everything's got DMs.

25:01.000 --> 25:05.000
The best way if you want to get a hold of us is to go to coder.show slash contact

25:05.000 --> 25:10.000
and send us in your work from home setup mods and other topics we've talked about too.

25:10.000 --> 25:12.000
If you're catching up, you can still send us in your feedback

25:12.000 --> 25:14.000
because it's still nice to get people's thoughts

25:14.000 --> 25:18.000
and kind of get a snapshot of where the audience is on some of these topics.

25:18.000 --> 25:21.000
So even if you're in the back catalog and you feel like we've moved on,

25:21.000 --> 25:22.000
you can still send us a note.

25:22.000 --> 25:26.000
It won't necessarily make it on air, but we'll still take it and we'd love to read it.

25:26.000 --> 25:29.000
And if you want a bathrobe, Chris would really love to hear from you.

25:29.000 --> 25:31.000
That is for sure. That's going to the top of the list.

25:33.000 --> 25:35.000
Linode.com slash coder.

25:35.000 --> 25:38.000
Go there to get a $100 60-day credit towards a new account,

25:38.000 --> 25:40.000
and you go there to support the show.

25:40.000 --> 25:43.000
Linode is my cloud provider.

25:43.000 --> 25:46.000
I started using them a couple of years ago after I'd sold the business

25:46.000 --> 25:51.000
because I knew I wanted to separate out the work stuff and the personal stuff.

25:51.000 --> 25:54.000
And I tried Linode because I'd seen them around forever

25:54.000 --> 25:57.000
at a lot of the events I'd gone to,

25:57.000 --> 26:00.000
and we'd even kind of made eyes at each other a couple of times like,

26:00.000 --> 26:02.000
hey, you want to do something together?

26:02.000 --> 26:05.000
But at the time I had another sponsor, so just it didn't really fit.

26:05.000 --> 26:09.000
But I could sense that they were genuinely a member of the community,

26:09.000 --> 26:14.000
and I could sense that I was drawn to their kind of free wheel

26:14.000 --> 26:18.000
and independent style that lets Linux users go a little bit further

26:18.000 --> 26:20.000
than the other providers do,

26:20.000 --> 26:23.000
but also makes it totally approachable if you're not an expert.

26:23.000 --> 26:25.000
And I was like, I get that. I like what they're doing there.

26:25.000 --> 26:27.000
I'm going to have to check back in on this.

26:27.000 --> 26:30.000
So when I had a chance to set it up brand new for myself for the first time,

26:30.000 --> 26:31.000
I had to try them out.

26:31.000 --> 26:35.000
And I didn't get $100 60-day credit like you all do.

26:35.000 --> 26:36.000
I paid for it.

26:36.000 --> 26:41.000
But if you go to linode.com slash coder, you will get the 60-day $100 credit.

26:41.000 --> 26:44.000
But what I really get about them is their love for Linux and open source,

26:44.000 --> 26:49.000
and they support open source initiatives that I've benefited from,

26:49.000 --> 26:51.000
like Linux Fest Northwest.

26:51.000 --> 26:54.000
Like this year, not being able to go to these conferences,

26:54.000 --> 26:58.000
I am so grateful for the companies like Linode that made those events possible.

26:58.000 --> 27:00.000
And man, do I look forward to them coming back.

27:00.000 --> 27:02.000
And of course, they're sponsors of Kubuntu.

27:02.000 --> 27:04.000
I may get into Plasma a little bit later today.

27:04.000 --> 27:06.000
I think it's one of the great desktops for Linux out there,

27:06.000 --> 27:09.000
and they've been a sponsor of the Kubuntu project.

27:09.000 --> 27:12.000
They started in 2003 as one of the first companies in cloud computing

27:12.000 --> 27:14.000
because they saw where this technology was going.

27:14.000 --> 27:17.000
They understood what it could do, so they got there before anybody else.

27:17.000 --> 27:19.000
I can really respect that, too.

27:19.000 --> 27:23.000
And unlike entry-level hosting providers, they don't lock you into their platform.

27:23.000 --> 27:27.000
They let you get access to customize and control your server to fit your needs.

27:27.000 --> 27:30.000
And they have tons of easy-to-get-going stuff, too.

27:30.000 --> 27:34.000
You're just looking to get the base system deployed and then start using your application.

27:34.000 --> 27:38.000
They've got one-click deployments for tons of apps or base systems.

27:38.000 --> 27:42.000
Just over the weekend, I set up another Ubuntu LTS with Docker.

27:42.000 --> 27:48.000
And just from there, I'm up and running with my applications in minutes.

27:48.000 --> 27:49.000
Try it out.

27:49.000 --> 27:51.000
linode.com slash coder.

27:51.000 --> 27:53.000
Go there to support the show and get $100 credit.

27:53.000 --> 27:58.000
And thank you to Linode for making it possible for this show to be free.

27:58.000 --> 28:00.000
linode.com slash coder.

28:02.000 --> 28:03.000
All right, Mr. Dominic.

28:03.000 --> 28:08.000
We've been dancing around this for pretty much the whole episode.

28:08.000 --> 28:10.000
The snake love is super strong.

28:10.000 --> 28:13.000
We kind of made it official now on the show.

28:13.000 --> 28:18.000
But it actually senses, like, to me, based on some of the conversations we've had,

28:18.000 --> 28:23.000
I think this is a bigger change and shift for you than probably what we've even managed to convey on the show.

28:23.000 --> 28:26.000
Like, this is, like, foundational shift stuff here.

28:26.000 --> 28:32.000
Yeah, so I think if you are a Coderly subscriber, you can hear the business rationale for it.

28:32.000 --> 28:34.000
Wink, wink, nudge, nudge.

28:34.000 --> 28:42.000
But basically, long story short, I am going deep for myself and my company into Python.

28:42.000 --> 28:45.000
Just the CliffsNotes version, if you want the details, you have to subscribe.

28:45.000 --> 28:47.000
See, Chris, I'm trying to make us money.

28:47.000 --> 28:48.000
You know what?

28:48.000 --> 28:49.000
You're getting on your game.

28:49.000 --> 28:50.000
I can tell.

28:50.000 --> 28:51.000
I'm getting on my game.

28:51.000 --> 28:52.000
Look at this.

28:52.000 --> 28:55.000
Switching between a bunch of different software stacks kind of makes no sense.

28:55.000 --> 29:00.000
Rails has been great, but as we move into more embedded things, and we still do a bunch of Rails,

29:00.000 --> 29:03.000
so if you happen to be one of our Rails customers, don't freak out.

29:03.000 --> 29:11.000
But as we move into more embedded stuff, Python has become a bigger, just a hugely important part of the business

29:11.000 --> 29:13.000
as we're moving into more ML stuff.

29:13.000 --> 29:19.000
And actually, Rabot has been rewritten in Python, so there's a lot there.

29:19.000 --> 29:25.000
So real quick, some fun facts about Python for those of you who are toiling away in the Swift sulfur mines.

29:25.000 --> 29:26.000
Oh, yes.

29:26.000 --> 29:29.000
There is a schism between Python 2 and Python 3.

29:29.000 --> 29:32.000
I don't think we need to go into this because it's been years in the making,

29:32.000 --> 29:34.000
but basically, they're effectively different languages.

29:34.000 --> 29:39.000
I know someone's going to email in and say, well, technically not, but they're different, right?

29:39.000 --> 29:42.000
So when I say Python, I always mean Python 3.

29:42.000 --> 29:43.000
Right?

29:43.000 --> 29:48.000
I know that just from the Linux side, when systems transitioned from 2 to 3, it was a big deal.

29:48.000 --> 29:50.000
It was a disaster.

29:50.000 --> 29:53.000
Frameworks that I have been enjoying, Flask.

29:53.000 --> 29:57.000
For those who don't know, Flask is like the Sinatra equivalent for Python.

29:57.000 --> 30:02.000
Sinatra is a Ruby web development framework, very thin, very lean kind of.

30:02.000 --> 30:05.000
It gives you the basics, and you have to scaffold up to what you want.

30:05.000 --> 30:12.000
But thanks to Wes Payne for recommending FastAPI to me several months ago because, damn, I am loving FastAPI.

30:12.000 --> 30:13.000
Oh, great.

30:13.000 --> 30:15.000
Yeah, really cool framework.

30:15.000 --> 30:21.000
It gives you a lot of what you basically will need for a web application, but doesn't kind of get in your way.

30:21.000 --> 30:26.000
It's not super heavy, if that's a way I could say that.

30:26.000 --> 30:31.000
And then Q and I have a relationship that is troubled.

30:31.000 --> 30:34.000
I have spoken to their reps many times, including this week.

30:34.000 --> 30:36.000
Oh, really?

30:36.000 --> 30:40.000
We keep kind of buying each other drinks and dancing a little bit.

30:40.000 --> 30:42.000
Maybe we'll have a cigarette, whatever.

30:42.000 --> 30:46.000
But we just can't seal the deal.

30:46.000 --> 30:49.000
However, with Qt 6, I don't know.

30:49.000 --> 30:50.000
It's been working out.

30:50.000 --> 30:52.000
It's got better Python bindings.

30:52.000 --> 30:56.000
It now supports Metal on Apple platforms.

30:56.000 --> 31:02.000
They've done a lot for Vulkan as well and a lot for just kind of modernizing how they handle their UI stuff

31:02.000 --> 31:07.000
and modernizing and frankly making a lot more convenient their Python bindings.

31:07.000 --> 31:10.000
Yeah, they've really gotten a place where it solves some serious problems.

31:10.000 --> 31:15.000
Right, the problem being that everything being an Electron app is a bad idea.

31:15.000 --> 31:18.000
It just kills my soul, that's all.

31:18.000 --> 31:26.000
Well, I currently am negotiating a trial of the Qt 6 Python bindings, so I will report back.

31:26.000 --> 31:28.000
Oh, yeah, I'd love to know.

31:28.000 --> 31:30.000
So far, so interesting.

31:30.000 --> 31:35.000
Pylance, with all respect to my wonderful loves at JetBrains,

31:35.000 --> 31:40.000
there is absolutely no reason for PyCharm if you have VS Code and Pylance.

31:40.000 --> 31:47.000
Pylance, for those who don't know, is a kind of super-duper IntelliSense for Python and Visual Studio code.

31:47.000 --> 31:50.000
It is built on Microsoft's PyWrite.

31:50.000 --> 31:53.000
Doesn't really matter, but it's like their static analyzer thing.

31:53.000 --> 31:55.000
But this is fantastic.

31:55.000 --> 31:58.000
I have been putting it toe-to-toe with PyCharm.

31:58.000 --> 32:03.000
Now, I'm still more familiar with PyCharm because I've been using JetBrains for over a decade.

32:03.000 --> 32:06.000
Those who don't know, JetBrains makes a bunch of IDEs, right?

32:06.000 --> 32:10.000
PyCharm, RubyBind, IntelliJ, which is probably the one you actually know,

32:10.000 --> 32:14.000
and WebStorm, which is probably their worst one.

32:14.000 --> 32:16.000
This is a killer.

32:16.000 --> 32:22.000
VS Code with Pylance, I'm constantly impressed with the little mistakes it finds

32:22.000 --> 32:24.000
and the little suggestions it makes.

32:24.000 --> 32:28.000
And it's not even a 1.0 yet, it's a dev preview.

32:28.000 --> 32:33.000
I'm looking at their screenshots on their GitHub, and this looks killer.

32:33.000 --> 32:37.000
It's killer, and it can figure out what frameworks you're using and all that kind of stuff.

32:37.000 --> 32:43.000
So if you are a Python dev or you're like one of our writers learning Python,

32:43.000 --> 32:47.000
go ahead and try VS Code and go ahead and activate Pylance.

32:47.000 --> 32:49.000
I think that'll be enough for you.

32:49.000 --> 32:54.000
I should also add that the Python support in VS Code has line-by-line debugging support,

32:54.000 --> 32:56.000
and it is very good.

32:56.000 --> 33:01.000
So you can basically ladder up to a full IDE if you want to.

33:01.000 --> 33:02.000
That's nice.

33:02.000 --> 33:04.000
And it works great on Linux.

33:04.000 --> 33:06.000
Geez.

33:06.000 --> 33:08.000
And it weirdly renders fonts better than JetBrains.

33:08.000 --> 33:11.000
Sorry, guys, I'm going to say that every week until you fix it.

33:11.000 --> 33:12.000
JetBrains.

33:12.000 --> 33:13.000
And you know he loves you.

33:13.000 --> 33:14.000
I do love them.

33:14.000 --> 33:16.000
I've been a customer for over a decade.

33:16.000 --> 33:20.000
It's just the font rendering on Pop is not great.

33:20.000 --> 33:22.000
So I'm just looking at this Pylance.

33:22.000 --> 33:27.000
And yeah, this seems like it would be fantastic if you're just learning too.

33:27.000 --> 33:29.000
We'll put a link to that in the show notes.

33:29.000 --> 33:32.000
I mean, I guess we should talk about the snake in the room.

33:32.000 --> 33:33.000
Yeah, okay.

33:33.000 --> 33:38.000
I spent several years making fun of Python because I was a Ruby fanboy.

33:38.000 --> 33:43.000
And I am still somewhat disappointed that the Ruby community sort of kind of missed the boat

33:43.000 --> 33:45.000
on the ML stuff and this embedded stuff.

33:45.000 --> 33:47.000
Yes, there are projects out there.

33:47.000 --> 33:51.000
But compared to what the Python community has managed to do, it's not worth it.

33:51.000 --> 33:53.000
We're going deep on Python.

33:53.000 --> 33:54.000
I don't even know what to say.

33:54.000 --> 33:58.000
I don't mean for this to sound like it's going to sound.

33:58.000 --> 33:59.000
Okay.

33:59.000 --> 34:04.000
Well, so like from a business standpoint, sometimes it's nice to hitch your wagon to something that's flashy

34:04.000 --> 34:09.000
because you can kind of ride the coattails and get adoption because people are interested in the new tech.

34:09.000 --> 34:13.000
And I mean, I think that was legitimately part of your angle in the past.

34:13.000 --> 34:16.000
This is like on the other end of flashy.

34:16.000 --> 34:18.000
This is whatever the opposite of flashy is.

34:18.000 --> 34:19.000
Dull, right?

34:19.000 --> 34:24.000
It's just good standard home cooking.

34:24.000 --> 34:32.000
It's not getting featured much up on giant tech keynote stages that's going to drive a lot of product.

34:32.000 --> 34:41.000
Do you feel like that is going to be a challenge for how you market to customers, how you acquire new leads?

34:41.000 --> 34:45.000
Or am I just misreading the situation?

34:45.000 --> 34:49.000
You're right, but there are two different types of customers, right?

34:49.000 --> 34:55.000
There are the customers who might listen to shows like JB or ATP or, you know, the network or whatever who know what they want.

34:55.000 --> 34:56.000
Right.

34:56.000 --> 34:59.000
And they will say, I want this in flask.

34:59.000 --> 35:00.000
I want this in Django.

35:00.000 --> 35:02.000
I want this in rails, whatever.

35:02.000 --> 35:04.000
But there is a there's like the regular world.

35:04.000 --> 35:05.000
Right.

35:05.000 --> 35:06.000
I mean, God, I miss trade shows.

35:06.000 --> 35:11.000
Just just put that there who I'm never going to tell them what I'm doing this in unless they ask me.

35:11.000 --> 35:12.000
Right.

35:12.000 --> 35:20.000
But by standardizing, there's an internal benefit to us building our libraries, building our internal tools all in the same language.

35:20.000 --> 35:30.000
It makes not to sound like super like horrible, bougie capitalist here, but it saves me from the you know, there's this one dev who is the only person who knows how to do this.

35:30.000 --> 35:33.000
And when he or she leaves, I'm, you know, forked.

35:33.000 --> 35:34.000
Right.

35:34.000 --> 35:43.000
Well, also, I think I focus like I mean, focus and simplicity are really I think they pretty quickly translate to savings.

35:43.000 --> 35:46.000
And less cost overhead means more revenue.

35:46.000 --> 35:48.000
Less cost overhead means more profit, too.

35:48.000 --> 35:49.000
Right.

35:49.000 --> 35:50.000
Because the revenue stayed the same.

35:50.000 --> 35:51.000
Yeah.

35:51.000 --> 35:54.000
The other thing is the flashy stuff was always about mobile.

35:54.000 --> 35:55.000
Right.

35:55.000 --> 35:58.000
And I went into this in the quarterly episode a little more.

35:58.000 --> 36:04.000
But the type of customers I'm dealing with now don't really care about trying to get on TechCrunch.

36:04.000 --> 36:05.000
Right.

36:05.000 --> 36:09.000
They want their farm like I'm thinking of one in particular.

36:09.000 --> 36:14.000
They want their farm where they're, you know, picking their produce to be automated and to work.

36:14.000 --> 36:15.000
Right.

36:15.000 --> 36:19.000
Or they want their, you know, their maintenance factory to work.

36:19.000 --> 36:20.000
Right.

36:20.000 --> 36:31.000
And if we can build them something on other Raspberry Pis or some other embedded system hooking up to a flask, you know, up to a SUSE server, because, of course, running flask, they're super happy.

36:31.000 --> 36:32.000
Right.

36:32.000 --> 36:39.000
And that can all of those problems I just described are very Python is very suited to solve.

36:39.000 --> 36:42.000
What I love about it is it's so practical.

36:42.000 --> 36:52.000
It's so rooted in solving a real world problem that is kind of divorced from all of the hype and crazy stuff that goes on in the tech industry.

36:52.000 --> 36:54.000
And it's tried and true.

36:54.000 --> 36:57.000
And it is easy to wrap your head around.

36:57.000 --> 37:02.000
Like, sure, it's I mean, I kind of snicker at it being SUSE, but there is a server component there.

37:02.000 --> 37:03.000
It could be Debian, too.

37:03.000 --> 37:04.000
Right.

37:04.000 --> 37:05.000
Doesn't matter.

37:05.000 --> 37:06.000
Sure.

37:06.000 --> 37:07.000
Yeah.

37:07.000 --> 37:08.000
There's and that requires software development.

37:08.000 --> 37:17.000
There could be some support services that are like a support contract that is wrapped up in maintaining that server and the software that runs on that server.

37:17.000 --> 37:24.000
So there is there's there's obvious paths to ongoing revenue, but there's clearly lots of projects that are one off.

37:24.000 --> 37:30.000
And you're so right in that it means that you standardize on a skill set that it's much easier for you to find.

37:30.000 --> 37:41.000
It just seems like there's so many upsides because it even just clears up like having to having to have a bunch of different tools or having to have different operating systems like all of that just kind of collapses.

37:41.000 --> 37:42.000
Exactly.

37:42.000 --> 37:43.000
It also solves.

37:43.000 --> 37:45.000
So let me give you a real world problem.

37:45.000 --> 37:46.000
Right.

37:46.000 --> 37:51.000
So the first version of Rabot, our automation tool was written in Ruby.

37:51.000 --> 38:01.000
We quickly had a problem in that all of our customers or the majority of our newer customers are specifically requested Python.

38:01.000 --> 38:04.000
Oh, and yes, you can interface Ruby and Python for you.

38:04.000 --> 38:06.000
You know, FFI is wonderful, right?

38:06.000 --> 38:07.000
But it's not exactly clean.

38:07.000 --> 38:15.000
And as the code base was going to grow and we realized we had some technical debt that needed a big refactor, it was like, well, hang on.

38:15.000 --> 38:20.000
We have two guys here who are Ruby developers.

38:20.000 --> 38:26.000
One of them is manages all the devs and one of them is me, the president of the company who does all the sales effectively.

38:26.000 --> 38:27.000
Right.

38:27.000 --> 38:29.000
Maybe that's not what we should be doing.

38:29.000 --> 38:30.000
Right.

38:30.000 --> 38:36.000
Considering we're both booked out on ongoing Rails projects right now completely.

38:36.000 --> 38:43.000
But we have all these other developers who either already knew Python coming in or want to learn Python.

38:43.000 --> 38:44.000
Right.

38:43.000 --> 38:46.000
Who want to just retrain in Python from like mobile or whatever.

38:46.000 --> 38:47.000
That kind of help.

38:47.000 --> 38:48.000
That's kind of great.

38:48.000 --> 38:55.000
So then we can have a mentorship relationship where the folks who knew Python very well can help the people who didn't.

38:55.000 --> 39:00.000
And as we scaled up, we were able to over the years say, OK, well, we have one Python project now.

39:00.000 --> 39:04.000
So we're going to put the senior guy who knows Python on it and pair him with somebody who's done some Python.

39:04.000 --> 39:05.000
Right.

39:05.000 --> 39:10.000
And then we're going to just as people got better because these are all experienced developers.

39:10.000 --> 39:14.000
None of these are like, you know, super, you know, they're not green horns.

39:14.000 --> 39:15.000
So they've done a ton of Ruby.

39:15.000 --> 39:19.000
They've done a ton of, you know, whatever, usually C sharp.

39:19.000 --> 39:32.000
It ended up being that after I would say like three months, three to six months, we found that we'll actually as we became more familiar with some of the common Python packages and some of the tricks with how to like, you know, we had the email up performance.

39:32.000 --> 39:33.000
Right.

39:33.000 --> 39:41.000
How to optimize Python in certain situations, particularly embedded that institutional knowledge is now shared with everybody.

39:41.000 --> 39:49.000
And we're at the point where if somebody has a question, they just toss it into the general chat and slack and it gets answered in like five minutes and we're off to the races.

39:49.000 --> 39:53.000
Right. Right. So it's not it's not one guy that knows it.

39:53.000 --> 39:54.000
Everybody knows it.

39:54.000 --> 40:05.000
Right. It's the big schism right now is honestly the VS code people versus the Python people because we have a few older gentlemen who are like, you will you will pry my jet brains from my cold dead hands.

40:05.000 --> 40:07.000
Why am I not surprised?

40:07.000 --> 40:08.000
Yes.

40:08.000 --> 40:14.000
And that's the point that is also and of course it's even more beneficial when it's the same tooling.

40:14.000 --> 40:25.000
Right. Like one of the things that I really appreciate about Drew is we're all kind of using the same tools now and so and Drew's usually always figuring stuff out and when he figures out something new he shares it with Wes and I.

40:25.000 --> 40:30.000
And before we were all a team that that kind of thing never happened.

40:30.000 --> 40:48.000
So I know exactly what you're saying because it it's like the rising tide lifts all of the boats in the company and there is that is such a that's a great example of why flattening out the stack and simplifying has obvious returns that you won't even really think of when you're considering doing it.

40:48.000 --> 40:52.000
I mean you might that one but there's a lot you won't and I don't know if I would have thought of that.

40:52.000 --> 41:04.000
I could get I could give you another one just it's kind of related but since we're most of us with the like I'm kind of one of the Ruby holdouts because we just have new customers who have Ruby stuff right.

41:04.000 --> 41:14.000
But we now have like a document internal that is a list of these are packages that we think we should import in almost every let's say flash project that work well.

41:14.000 --> 41:19.000
And this is how we can quickly here's a script to quickly scaffold up a flask app the way we do it.

41:19.000 --> 41:24.000
Right. Right. So we're actually becoming more efficient over time and that's like next level stuff there.

41:24.000 --> 41:35.000
That's pretty good. That's pretty great. And you will quickly develop skills that will just be applicable to future future jobs assuming you figure out a target to the right client base.

41:35.000 --> 41:42.000
How's that going. I miss trade shows. Yeah yeah yeah sure.

41:42.000 --> 41:54.000
That's where like the hype train being turned up to 11 on some platforms can be beneficial because it's just sort of you know it creates a need that has to be solved for people to to make money solving.

41:54.000 --> 42:03.000
So listen if you have an iPad at a trade show and you can show a demo of like automating something that you think the people there need that they're not going to ask you what's written in.

42:03.000 --> 42:12.000
Yeah that's true. That's true. You know home assistant which is I think one of the coolest open source projects out there all Python.

42:12.000 --> 42:18.000
Well I think so. Yeah it's very it's a pretty complicated Python app. I'm sure it would be better if it was in rust though right.

42:18.000 --> 42:25.000
Of course right. Maybe one day there'll be a fork. So speaking of things that are going to be rewritten in rust.

42:25.000 --> 42:33.000
How's your how's your Microsoft edge on Linux experience going so far. I kid about the rest rewrite but I knew the segue.

42:33.000 --> 42:38.000
Honestly I think the only thing that could make it better is rewriting it in rust. Oh ha ha.

42:38.000 --> 42:44.000
Still so really really. I love it. It's my default on the thing doesn't even have sync yet. I can't I can't.

42:44.000 --> 42:52.000
I don't want to sink. Oh really. Why would I sink. Oh you got to be kidding me because well I mean do you use bookmarks.

42:52.000 --> 43:00.000
What are you nuts. OK. I use bookmarks. I pin two tabs Gmail which is my work email and Twitter.

43:00.000 --> 43:07.000
That's it. Yeah I guess. No I love it. It's fast. It does not spin up my failures fan quite as aggressively as Chrome which is odd

43:07.000 --> 43:13.000
because it's chromium under the hood. Although I'll point out I had to send you the link before the show.

43:13.000 --> 43:22.000
Wow. OK. Right. Right. Because on Chrome on the iMac Pro I had the podcast thing bookmarked.

43:22.000 --> 43:26.000
Yeah I will bookmark it right now. They need the damn sync though. That's what they need.

43:26.000 --> 43:31.000
I might actually because it is it is frustratingly decent I have to admit.

43:31.000 --> 43:37.000
And you basically get all the advantages of using Chrome without all of the stuff that Google's added that you know

43:37.000 --> 43:41.000
you know there's like a remote desktop protocol built into Chrome and there's a remote desktop server.

43:41.000 --> 43:48.000
Like Chrome is effectively an OS right. Yeah yeah it's gotten to be a bit much so I do like it there.

43:48.000 --> 43:54.000
I have it still installed but I have to say I haven't really been using it much because it it lacks the sync.

43:54.000 --> 44:01.000
So right now my whole setup is I got rid of the M1 Mac which people just on Twitter can't believe it.

44:01.000 --> 44:07.000
They don't believe me. No they're like now you're just you. Nobody returns an M1 Mac. Never.

44:07.000 --> 44:16.000
Honestly my workflow on POP is just more efficient and now granted I still can't change my desktop background automatically

44:16.000 --> 44:21.000
because we can't fix GNOME extensions. I'm sorry GNOME broken extensions.

44:21.000 --> 44:25.000
Yeah. Yeah. And people really don't like it when I say that on Twitter.

44:25.000 --> 44:28.000
I got it. There's a lot of like blowback that comes from that one.

44:28.000 --> 44:31.000
Well you know everybody wants it to be the year of the Linux desktop.

44:31.000 --> 44:35.000
And if you're coming on here and saying that it's not really there yet.

44:35.000 --> 44:42.000
You know in Vista you could automatically change your desktop background like every half hour just just like throwing that out there.

44:42.000 --> 44:50.000
You know I think there is some good indications that later in 2021 GNOME 40 will come out

44:50.000 --> 44:56.000
and they're going to start breaking some of the things off in independent threads like the input stuff and whatnot.

44:56.000 --> 45:04.000
So it could get there. But you know I think they were always kind of doomed when they didn't have a standard documented way

45:04.000 --> 45:08.000
to actually make an extension and have it like there's no API.

45:08.000 --> 45:13.000
Right. These are these are actual like hacks of the GNOME Shell.

45:13.000 --> 45:18.000
So it's actually for all my like dunking on it. It's kind of impressive.

45:18.000 --> 45:22.000
It doesn't crash more. Yeah there's people trying to work on this.

45:22.000 --> 45:26.000
You have elementary OS Pantheon is a GTK environment.

45:26.000 --> 45:31.000
You have Budgie. I thought Pantheon was pretty far from GNOME Shell these days though.

45:31.000 --> 45:36.000
I don't think they use the like the back end of GNOME Shell.

45:36.000 --> 45:41.000
OK. But I think they use a lot of the same like libraries and core technologies.

45:41.000 --> 45:46.000
But I think they have like their own compositor and whatnot. I'm not actually perfectly clear.

45:46.000 --> 45:50.000
Same with Budgie. I'm not. I know Budgie is also a GTK environment but I don't is it.

45:50.000 --> 45:55.000
I don't really understand how it's architected. Is it is it architected in such a way that panels

45:55.000 --> 46:01.000
and gizmos are separate processes or are they all one thread like GNOME Shell.

46:01.000 --> 46:05.000
Which is what at the end of the day Mike is really the problem.

46:05.000 --> 46:08.000
The problem is is that an extension is capable of taking out your desktop.

46:08.000 --> 46:15.000
And it's it's even significantly worse in the Wayland future that we're all heading towards.

46:15.000 --> 46:19.000
Because in the Wayland future Mudder is also your display server.

46:19.000 --> 46:27.000
And so when it crashes it takes out your entire session and you go back and it restarts.

46:27.000 --> 46:33.000
And it's a significant more of a crash than what you get now with X11.

46:33.000 --> 46:38.000
So as a guy who runs Linux like to do his job right.

46:38.000 --> 46:43.000
And I am a bit of an enthusiast but I'm not like you know if GNOME Shell crashed every day I would.

46:43.000 --> 46:46.000
The iMac would be hooked up so fast your head would spin. Right.

46:46.000 --> 46:50.000
Why is X11 not OK. Like why do we need to go to Mudder.

46:50.000 --> 46:54.000
So Mudder is is OK. Well let's let's back up.

46:54.000 --> 47:00.000
So Mudder is essentially a Wayland client. It talks Wayland.

47:00.000 --> 47:08.000
The thing about X11 the short version of it is that it's it needed to be it actually needed to be replaced about 20 years ago.

47:08.000 --> 47:10.000
Fair point. Fair point. It's very old.

47:10.000 --> 47:16.000
Architecturally it's very hacked together. Security is poor. Applications can spy on each other.

47:16.000 --> 47:23.000
There's there's significant vulnerabilities that have been patched but are kind of fundamental to how it operates at the same time.

47:23.000 --> 47:27.000
But also it's just not necessarily competitive anymore.

47:27.000 --> 47:33.000
Like if you have maybe like a full screen video on an X11 desktop say you're watching a YouTube video and you full screen it.

47:33.000 --> 47:38.000
If you've ever seen tearing in the video or when you're playing a video game and you've turned.

47:38.000 --> 47:41.000
Yeah. Yeah. That kind of stuff doesn't happen on Wayland.

47:41.000 --> 47:49.000
Wayland is extremely smooth. It's it's just like it takes a computer and just brings it to the next level in terms of interface responsiveness.

47:49.000 --> 47:57.000
And it's just done in a more modern way. But it requires that the projects that use Wayland implement their own interfaces essentially.

47:57.000 --> 48:01.000
There isn't like one display server. You build your own display server. Got it.

48:01.000 --> 48:10.000
OK. So that's where like things like Mir fit in now. That's the canonical project. Or like if you're big enough like Gnome Shell or Plasma you just build it into your compositor.

48:10.000 --> 48:18.000
And that's that's what Gnome Shell has done. But the problem is when Gnome Shell crashes Mudder crashes when Mudder crashes you lose your entire desktop session.

48:18.000 --> 48:22.000
You go log back in again. Everything's closed. It's significantly bad.

48:22.000 --> 48:31.000
And so I frickin love it man. I think System 76. Well it all actually starts. I'm going to give credit to where credit is due.

48:31.000 --> 48:44.000
Debian has been reliably producing a solid based distro for forever. Canonical has done a fantastic job repackaging that up into a product and into a fantastic desktop just on its own.

48:44.000 --> 48:50.000
And then the folks at System 76 have leveraged all of that hard work to really take things even to a finer level.

48:50.000 --> 49:03.000
By distro of choice. Yeah it's really nice. But my fundamental issue is I cannot tolerate my desktop having weird crashes or weird performance jankiness.

49:03.000 --> 49:15.000
And I also just was constantly struggling with my three monitor setup to the point where I'd often have to reboot my computer to get everything working again and very frustrating.

49:15.000 --> 49:28.000
And so I switched back to plasma and I don't generally go around telling you you should switch but it may be worth looking at because plasma is architected in a way that is much more modern.

49:28.000 --> 49:38.000
It's built out of all of these widgets and each one of them you know can crash and not take down the rest of the system they just individually go away and come back.

49:38.000 --> 49:47.000
It's of course all built around Qt. QML is a very common way for like just quick little nice applications to work.

49:47.000 --> 49:56.000
Plasma is a lot more stable. It just simply takes a lot more to take it out because of how it's architected.

49:56.000 --> 50:08.000
I just eventually went back and switched to that because it's more fiddly and I essentially just what I do is I spend a day going through and changing the settings for everything.

50:08.000 --> 50:22.000
I did do a video about it almost a year ago or so but I go even further than I did in that video now and I just kind of go through and I change the themes I change the color scheme I change fonts I change the default settings for everything.

50:22.000 --> 50:29.000
I set up my key bindings then it's good for as long as I keep the install and it just ticks away.

50:29.000 --> 50:41.000
Right now I'm running Fedora plasma because they have super fresh plasma packages in that spin of Fedora and I like to have really fresh plasma.

50:41.000 --> 50:49.000
KDE neon is also really great and you get essentially the Ubuntu LTS base and then rolling plasma.

50:49.000 --> 50:56.000
And plasma has been really good about respecting your settings and not changing them and not breaking things during upgrades.

50:56.000 --> 51:03.000
The machine that I'm talking to you on is like a two year old install and I've just upgraded all along and it's been fine.

51:03.000 --> 51:05.000
I pretty much upgrade on a weekly basis.

51:05.000 --> 51:18.000
And while it is not quite as refined as genome shell and some of the UI areas it is a little more practical and what it lets you do like the built in screenshot tool will be one of the best screenshot tools you've ever used.

51:18.000 --> 51:20.000
It has a built in launch bar.

51:20.000 --> 51:23.000
You know you do alt space bar and the K runner pops up.

51:23.000 --> 51:26.000
It's going to be the most powerful launcher you've ever used.

51:26.000 --> 51:27.000
It has console.

51:27.000 --> 51:29.000
It's terminal.

51:29.000 --> 51:33.000
It's like the best one of the best terminal emulators on Linux.

51:33.000 --> 51:34.000
It's just it's really good.

51:34.000 --> 51:47.000
It's just it's a high end workstation grade like industrial tool like you know when you go into a shop and you realize oh man these tools are way cooler and bigger than the tools that are in my garage or whatever.

51:47.000 --> 51:49.000
That's plasma.

51:49.000 --> 51:56.000
It's it's a big powerful tool and it has this concept of window and application rules.

51:56.000 --> 51:58.000
Oh man I love this.

51:58.000 --> 52:10.000
I've got one big horizontal 1440p display and then I've got two identical 1440p displays turned vertical to the sides.

52:10.000 --> 52:21.000
So I have one in the middle and then two on the sides and I have window rule set up in such a way that it makes managing them really straightforward.

52:21.000 --> 52:27.000
It will always open the window for slack or telegram or my web browser or my console or V.S.

52:27.000 --> 52:35.000
code exactly where I want it exactly on the desktop I want it on the exact monitor I want it every single time.

52:35.000 --> 52:48.000
And I love that kind of thing because I can basically just position the window where I want it and I can go into the menu and I can say remember all of these attributes about this window and apply it every time it launches at first startup.

52:48.000 --> 52:55.000
It doesn't apply it after that but you can also even choose apply it every time or just initially it's got all the options.

52:55.000 --> 52:58.000
And for me that kind of stuff is is powerful.

52:58.000 --> 53:09.000
You know it's nice like you go you click on the network manager icon to see what your Wi-Fi or network connection is and if you expand it out it gives you a real time graph of what you're in and out transfer is.

53:09.000 --> 53:11.000
It's just all that kind of stuff.

53:11.000 --> 53:24.000
There's there if you want to install a new theme there's a button that just goes out to the public repository and just gives you a list of all the possible themes and then you click a button and it downloads and installs the theme for you.

53:24.000 --> 53:33.000
It's it's nice and it feels fast and it scales really well to low end hardware and high end hardware.

53:33.000 --> 53:38.000
It it just simply it's not necessarily new user friendly.

53:38.000 --> 53:49.000
I tried to switch to it three times before it stuck and I'm you know I've been I have used plasma on and off since it was called KD and it was like a version two.

53:49.000 --> 54:00.000
And I still like had to really kind of stick with it now. Now when I switched back to it I really was like oh yeah this is where I'm staying and I'm just I'm done moving now.

54:00.000 --> 54:04.000
And the nice thing about plasma is you can pretty much get on any distro you want.

54:04.000 --> 54:09.000
So you pick the Linux base that suits you best and then you just put the plasma desktop on top of it.

54:09.000 --> 54:11.000
Yeah OK.

54:11.000 --> 54:14.000
But see I like all my pop fancy stuff right.

54:14.000 --> 54:17.000
Like my like my tiled windows I'm using now.

54:17.000 --> 54:22.000
Yeah I mean definitely you can do some of that in plasma but it's a different beast.

54:22.000 --> 54:24.000
It's a different beast and it wouldn't come out of the box.

54:24.000 --> 54:30.000
Right. So we should we should maybe talk about the little whatever it was.

54:30.000 --> 54:37.000
Well the back and forth on Twitter. This is why in Linux Unplugged I've made my prediction that System76 is going to fork GNOME.

54:37.000 --> 54:42.000
I think it could happen and I think they should consider it because in GNOME 40 there's some big UI changes going.

54:42.000 --> 54:52.000
And the back and forth that you and I saw on Twitter was essentially System76 and team commenting that you know we were involved in this design process

54:52.000 --> 54:57.000
and we don't feel like our feedback was heard and we're not happy with the end result and we don't want to ship that to our users.

54:57.000 --> 55:01.000
So how would that work if they were to fork it.

55:01.000 --> 55:04.000
I mean you could probably be a pretty minimal fork.

55:04.000 --> 55:09.000
You know you just essentially a step above what Canonical already does.

55:09.000 --> 55:14.000
You can apply a lot of vendor patches to GNOME Shell. So you just it's a step beyond that I think.

55:14.000 --> 55:18.000
Really you just you need you think about it.

55:18.000 --> 55:22.000
You need a System76 you need something consistent.

55:22.000 --> 55:25.000
And when they switched to Pop OS they got that right.

55:25.000 --> 55:31.000
They weren't like when they weren't dependent on Canonical shipping Unity and then all of a sudden they changed it one day on them

55:31.000 --> 55:36.000
and now they're shipping GNOME like they took their future into their own hands except for.

55:36.000 --> 55:42.000
Well that's kind of stuff where upstream wants to fundamentally change the way you navigate virtual desktops and running applications

55:42.000 --> 55:45.000
in a way that we fundamentally disagree with as a company.

55:45.000 --> 55:48.000
Well that's still kind of changing the rug pulling the rug out from underneath them isn't it.

55:48.000 --> 55:56.000
And the only way to really fix that is to be in control of your own upstream and just sync frequently with the project.

55:56.000 --> 56:01.000
I would definitely say that one of the maybe the differences that I can't speak for them

56:01.000 --> 56:06.000
but I just thought you know the companies like mine like I know another business owner here in the Tampa area

56:06.000 --> 56:15.000
who exclusively buys System76 machines for his employees like I do and certainly radical changes would not be appreciated right.

56:15.000 --> 56:21.000
Not ideal. People don't like it when you move where the interface elements are right.

56:21.000 --> 56:30.000
Now I guess one of my questions is if they were to fork it wouldn't that create a situation where their fork is always going to be behind.

56:30.000 --> 56:38.000
I don't know. I wonder. EndlessOS does something kind of like this already and then they kind of do these big sync ups.

56:38.000 --> 56:45.000
The question I would ask instead if I could change your question a little bit is would it be fine for them to ship something

56:45.000 --> 56:52.000
that doesn't get updated as often as main GNOME. What like what if PopOS just essentially updated with the LTS

56:52.000 --> 56:58.000
and that's when they ship their new version that you know during the LTS development cycle they'd sync to the latest version of GNOME Shell.

56:58.000 --> 57:07.000
I think that'd be fine. You look at Linux Mint and projects like that that essentially address this market that want something that remains consistent.

57:07.000 --> 57:13.000
They're perfectly happy with stuff like that. They're like CentOS users but not quite.

57:13.000 --> 57:18.000
Well I would almost wonder and I you know I don't know anything here but just spit balling.

57:18.000 --> 57:26.000
It almost seems like PopOS is becoming kind of its own thing even though it's technically like open to GNOME Shell under the under the hood.

57:26.000 --> 57:31.000
But I kind of see a world where they start writing like their own applications right.

57:31.000 --> 57:38.000
Yeah. That more closely tie into their you know their fancy tiling. Hell they're making a keyboard right.

57:38.000 --> 57:44.000
Right. So yeah. And you would think you would want to be able to build and integrate that into the desktop.

57:44.000 --> 57:47.000
You wouldn't want the upstream to be able to just like yank your chain all the time.

57:47.000 --> 57:54.000
No exactly. And I think I'd I'd definitely be in the market for a keyboard. I mean there's a lot of interest as we've seen from our audience.

57:54.000 --> 57:59.000
Chris we all know ropes and keyboards. You're always in the market. And so am I.

57:59.000 --> 58:10.000
If I could just wave a magic wand it would be a shop like System76 takes what they are doing with GNOME Shell but just ships plasma.

58:10.000 --> 58:18.000
Because because plasma is made up of widgets you could make it look a lot like GNOME Shell if you invest the time.

58:18.000 --> 58:26.000
And they could fundamentally ship a plasma desktop that they wouldn't have to really modify they would just customize.

58:26.000 --> 58:35.000
And they could probably really really refine a lot of the edges that I go through and set up myself and spend a day tweaking.

58:35.000 --> 58:42.000
And man would I find it compelling. And I would be willing to even buy like Pop OS commercially if it had that.

58:42.000 --> 58:45.000
I don't think they'd ever do that but I would love it.

58:45.000 --> 58:48.000
I think they're so deep into the to the GNOME Shell route though.

58:48.000 --> 58:53.000
I know and I think that's you know that's where their that's where their team's knowledge is and all of that.

58:53.000 --> 59:02.000
I totally get it. I totally do. But I think it has become a crime against Linux desktop users that somebody hasn't come along

59:02.000 --> 59:09.000
and properly shipped a well positioned plasma desktop because it is a really powerful tool.

59:09.000 --> 59:13.000
And I know I've gone on about this already on the show too much but I just I see where this can go for you.

59:13.000 --> 59:17.000
I can see how this can lead to frustration because I've been down the path you're on right now.

59:17.000 --> 59:23.000
And like as as somebody who still has just that I can't help I still have that bit of an advocate in me for Linux.

59:23.000 --> 59:27.000
I'm like warning friend there's going to be trouble down that road.

59:27.000 --> 59:34.000
You may just want to take a different route now. I know the mountain looks tall but in the long run it'll lead you to a beautiful valley.

59:34.000 --> 59:39.000
Well it's almost it's almost the classic software development problem that GNOME has the right.

59:39.000 --> 59:47.000
You have this awful technical debt and I have interviewed and spoken to people from the GNOME team on my other show before.

59:47.000 --> 59:57.000
I get it. They're good people. But like if you can't solve the extensions blow up your entire session problem maybe you need to do that first.

59:57.000 --> 01:00:06.000
Right. Like you have to pay down the debt. And the understanding I got from them and I've gotten from other people in the community is the demon is so powerful at this point

01:00:06.000 --> 01:00:11.000
that the young priests and the old priests have already jumped out the window. Yeah. The exorcist. Right.

01:00:11.000 --> 01:00:16.000
I think the problem is is that there's already so much momentum on this system.

01:00:16.000 --> 01:00:21.000
And because they never had like this this widgets concept that these plasmoids that are written in QML.

01:00:21.000 --> 01:00:26.000
Right. You know they never had an API where they all talk to each other. They never had that.

01:00:26.000 --> 01:00:35.000
Now you look at the SUSE desktop or the Ubuntu desktop or any any like popular GNOME desktop with the exception of Fedora.

01:00:35.000 --> 01:00:44.000
There's a lot of brand work that goes into that desktop that that utilizes these things that are officially not really supported.

01:00:44.000 --> 01:00:53.000
Like technically they're not even a fan of theming. They don't really want you changing the theme either because I know I've heard the links that system 76 had to go to.

01:00:53.000 --> 01:01:03.000
Yeah. Their idea is is that of course developers are building applications expecting to look like this on people's computers and they go switch the theme and then they bitch that something doesn't work right.

01:01:03.000 --> 01:01:11.000
I get it. Yeah. I have that problem all the time. Right. So but I will just like from a business perspective business.

01:01:11.000 --> 01:01:18.000
Mm hmm. We just went from Mac OS you know I mean it wasn't just but in business time it's not that long.

01:01:18.000 --> 01:01:28.000
Right. To standardizing on pop to now consider switching to KD or plasma would be crazy unacceptable.

01:01:28.000 --> 01:01:37.000
Right. I know. I know. I mean there you could install it alongside you just end up having like two terminal apps and stuff like that.

01:01:37.000 --> 01:01:42.000
Yeah. See that's like messed up. Yeah. It's not as good. It's not as good.

01:01:42.000 --> 01:01:54.000
I know I endlessly beat this horse but I almost hope they do fork it and maybe like try to try to exercise this demon or just like crazy idea.

01:01:54.000 --> 01:02:01.000
Build it into pop OS like the stupid feature like I'm sure I have my dumb feature of wanting to change the desktop background and I get it.

01:02:01.000 --> 01:02:05.000
That's a dumb feature. I just don't have it now and now my desktop doesn't crash all the time.

01:02:05.000 --> 01:02:13.000
But I'm sure there are for instance I used to use a Pomodoro extension that every update to know Michelle would crash my session all the time.

01:02:13.000 --> 01:02:22.000
Right. There's like lots of cases that are less stupid than the ones I'm advocating here where maybe you just need if you're going to fork it.

01:02:22.000 --> 01:02:27.000
Core functionality built into your fork that just does this right.

01:02:27.000 --> 01:02:33.000
And it's not an extension. I don't know how you would do it. I don't know enough about like developing for no Michelle.

01:02:33.000 --> 01:02:41.000
But it seems like the basics should be solvable in a way that isn't throw everything out and go to Katie.

01:02:41.000 --> 01:02:51.000
Yeah there must be a way to bake it in and maybe it's you break those things out into a separate app or something that runs alongside.

01:02:51.000 --> 01:02:55.000
Geary doesn't crash. Right. And Geary has a nice notifications and everything.

01:02:55.000 --> 01:03:00.000
I mean why why can't you just write an application for it and build it in theme it.

01:03:00.000 --> 01:03:07.000
I would think that'd be the direction they would go is they would they would build it in and probably still making extensions available

01:03:07.000 --> 01:03:13.000
because they'd probably try to keep it as compatible with good home shells possible because they get they get the benefits.

01:03:13.000 --> 01:03:20.000
It'd be fascinating to watch super tight line to walk and you wonder like if there wasn't just a better way to go with plasma.

01:03:20.000 --> 01:03:24.000
But I know I shouldn't beat the horse. I know I know.

01:03:24.000 --> 01:03:30.000
And I also totally appreciate that you just you know you finally got switched over to pop and standardized.

01:03:30.000 --> 01:03:34.000
You're not going to go try out budgie or you're not going to go try out plasma.

01:03:34.000 --> 01:03:37.000
I get it. I really don't think you should either.

01:03:37.000 --> 01:03:42.000
I worry about these limitations in good home shell pissing you off.

01:03:42.000 --> 01:03:47.000
I mean like well you know screw it for my machine. I'm going back to the Mac.

01:03:47.000 --> 01:03:50.000
But well but that would cause a cascade right.

01:03:50.000 --> 01:03:52.000
Once I did it that would be.

01:03:52.000 --> 01:03:54.000
Yeah it sets a message and tone.

01:03:54.000 --> 01:04:03.000
I actually kind of feel like good home shells on the right track to 40 looks like it's going to be a solid improvement and they've really been improving it a lot.

01:04:03.000 --> 01:04:12.000
I mean this situation that you are experiencing now was significantly worse in like the 308 310 era of good home show.

01:04:12.000 --> 01:04:19.000
OK and it's gotten to the point now where like one or two things don't work. But back in that era it was everything didn't work.

01:04:19.000 --> 01:04:36.000
It was it was a real train wreck. And the genome shell team has done I think a lot of hard work to get it not only in a lot better shape but also they have shored up a lot of the technical and kind of less than ideal ways that some of the G.P.

01:04:36.000 --> 01:04:42.000
pathways were designed and the overall the responsiveness as it has improved tremendously.

01:04:42.000 --> 01:04:50.000
And so it's in a much better shape. So I think in another year I think it still won't be fixed but I think it'll be probably 50 percent better.

01:04:50.000 --> 01:04:54.000
So at least it's going in the right direction. Right. Hey progress.

01:04:54.000 --> 01:04:59.000
I mean really if you look at it from like a five year cycle instead of a yearly cycle like I do.

01:04:59.000 --> 01:05:11.000
But if you look at it from more like you know you stick you stick with 2004 based systems until the next LTS comes out then it's actually it's like a it's a crap ton of work that goes in.

01:05:11.000 --> 01:05:14.000
It's like whoa look at all these improvements in the last five years.

01:05:14.000 --> 01:05:18.000
So it just kind of depends on how close you zoom in on it all.

01:05:18.000 --> 01:05:25.000
But it's fascinating the whole switch for your shop to Python and I hope we get to talk about it more here on the show.

01:05:25.000 --> 01:05:32.000
And we did talk a lot about some of the business reasons and some goals in 2021 that we both have in our quarterly report.

01:05:32.000 --> 01:05:35.000
You've mentioned it a couple of times and I've mentioned it.

01:05:35.000 --> 01:05:46.000
That is the special episode that we record for our coder QA members once a quarter when the quarter comes close to an end we recorded and it'll probably be published very soon as we record right now.

01:05:46.000 --> 01:05:52.000
It's not in the feeds yet but it will be very soon so you can become a member and you get access to that one and the previous one.

01:05:52.000 --> 01:05:56.000
There's been one other one so far and that's a coder QA dot co.

01:05:56.000 --> 01:06:03.000
You also support the show and get a limited ad feed which you may prefer as well.

01:06:03.000 --> 01:06:04.000
Go find Mike on Twitter.

01:06:04.000 --> 01:06:05.000
He's at Dumanoku.

01:06:05.000 --> 01:06:07.000
His company is at the Mad Botter Inc.

01:06:07.000 --> 01:06:11.000
I'm at Chris Lass and the podcast network is at Jupiter Signal.

01:06:11.000 --> 01:06:14.000
And yeah you guessed it.

01:06:14.000 --> 01:06:18.000
There's also a show Twitter that's at Coder Radio Show.

01:06:18.000 --> 01:06:20.000
Links to what we talked about today.

01:06:20.000 --> 01:06:21.000
Well I'm glad you asked.

01:06:21.000 --> 01:06:25.000
That's a coder dot show slash three ninety three some good stuff in there.

01:06:25.000 --> 01:06:28.000
Also over on that website you'll find our contact form.

01:06:28.000 --> 01:06:30.000
We'd love to hear from you.

01:06:30.000 --> 01:06:31.000
It's a big part of our show.

01:06:31.000 --> 01:06:34.000
You also see our RSS feeds and subscribe links.

01:06:34.000 --> 01:06:40.000
And then last but not least why don't you join us for the Coder happy hour live Mondays at 5 p.m. Pacific 8 p.m.

01:06:40.000 --> 01:06:41.000
Eastern at J.B.

01:06:41.000 --> 01:06:42.000
Live TV.

01:06:42.000 --> 01:06:45.000
Thanks so much for joining us on this week's episode of Coder Radio.

01:06:45.000 --> 01:06:55.000
We'll see you right back here next week.

