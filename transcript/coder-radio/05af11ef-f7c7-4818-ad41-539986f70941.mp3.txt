This is KOTORadio, episode 422 for July 12th, 2021.
Hello friend and welcome in to Jupiter Broadcasting's weekly talk show, taking a pragmatic look
at the art and the business of software development and the world of technology.
This episode is brought to you by Cloud Guru.
You know Cloud Guru has that cloud playground, Azure, AWS, or Google in their sandboxes on
their credit card, not on yours.
Get certified, get hired, get learning at acloudguru.com.
My name is Chris, but that don't matter because joining us like every single week is our host,
it's Mr. Dominic for a little bit longer from the Sunshine State.
Hello Mike.
Thank you for calling Florida.
We've got a Gator, we've got some IPAs.
I'm going to miss it.
You're going to miss it?
I'm going to miss it.
We've got the Stanley Cup again.
You know, there's something fun about you being our Florida guy, but when you go to
Jersey now, man, you know, Jersey's scary.
I don't know.
You know, like one, one time I was just driving along and I looked over there and I think
I saw some guy getting murdered just like from the road.
Like it was bad, man.
Oh, absolutely.
Every exit on the parkway, there's a guy getting shot in the back of the head, execution style.
Yeah.
The polite thing to do is to wave.
Just yeah, keep about, keep going on about your business.
Don't mind me.
We can do a, you know, an AB test real quick.
So the app store in Florida is, oh, bless your heart.
I'm sorry.
We can't accept your app.
In New Jersey it's, it's a nice app you got there.
Fortunately we had a problem.
We're going to need a 30% and we're going to come by every week.
I'm going to get a 30% we're going to need a $99 minimum a year.
Okay.
Capisce?
And if the rules change, screw you.
Pay us.
Okay.
Listen, you want to have a sit down?
Well we don't answer the phone.
Good luck.
Business.
Yeah.
So, um, what are you trying to make sure that I don't catch up to you?
Is that what you're trying to do over there?
Like I come on the air and tell you about my big old 17 gallon accident of water spilling
all over my electronics and you're like, hold my beer.
The worst part was, you know, there've been some jokes about perhaps certain spirits have
flown into Mac books.
Sure.
I was actually asleep.
It was actually water.
And let this be a lesson to you kids about having your nightstand way too close to your
bed and coding at night.
Oh, what happened?
I thought I was clever.
I was on my Lenovo X1 carbon, which I cannot recommend enough, by the way, if you're looking
for a windows machine.
And I believe, and folks in the chat will correct me, but I believe the carbon is one
of the fedora certified ones, right?
That's the one I got.
All right.
So I have, I have the windows version cause I'm, I was, I'm ironically, I don't need another
windows machine, but I'm on a windows project doing terrible things that I'm sad about because
they almost just whatever.
But you know, I'm coding at night.
I'm trying to catch up five year old schools out.
You can imagine that I do a lot of work at night.
Yeah.
So I'm getting tired.
I'm in bed.
I'm a little too lazy to go back into the other room.
So I'm like, okay, let me just close the laptop up, put it between the bed and the nightstand,
right?
There's a little gap there, a little negative space.
And I have my glass of water cause I go to, I mean, this is way too inside Mike's bedroom.
Although the coder leader, I'm picturing it though.
Picture it.
Yeah.
I have my Valeri.
Are you wearing, are you wearing?
Yeah.
Okay.
Tell me, go ahead.
My, my coder robe, right?
Of course.
Smoking a pipe.
Do you have like one of those little silk caps?
I do not, but I should, that's a, that's a great addition actually.
Yeah.
So, you know, I have my, my sleepy time tea and I was careful to move the tea away from
the edge of the nightstand thinking that the small cup of tea was the biggest threat.
Not the giant Linux 400 stein of water, no, no.
I love it.
I'm glad it was the stein though.
This was a very JB on brand destruction of a Lenovo laptop.
Everybody tells me you could spill water on these things.
They got drain holes in them.
They tell me.
Well, not if they're sideways and the water goes directly into the Thunderbolt ports.
Oh yeah.
Yeah.
You know, it was a, I turned it on and it, it, the fan feebly tried to kick up and it
made the screech and it, and it, after even a day in a giant bowl of rice, never, it's,
it's done.
Yeah.
And you know, they have all those little water sensors in there now where they can see if
I got wet.
So they know, they know.
Actually if you read the patent, those are called Mike sensors.
So now what?
Now what are you going to do?
Uh, nothing until I get to New Jersey cause yeah, listen, I can't survive going to sleep.
How do you think transit is for me?
Yeah.
I just wonder, are you going to do another X one or are you going to try something else?
It's an opportunity to try another rig.
I mean, it's not a great opportunity, but it's an opportunity.
I was thinking of it.
I was thinking of trying an XPS again.
I haven't had an XPS in four or five years, but see the thing with the XPS is I would
be tempted to try the Sputnik edition.
Why not dual boot?
Yeah.
Cause I'm not going to pay the stupid prices for the storage.
The other thing is I was looking at laptops right now, the prices are on crack.
Oh, are they because of all the supply issues or something?
Yeah.
If you want anything that's like not like mid range, if you want something nice, which
I don't know why I would cause they only last four weeks, but um.
Really at this point you should just be buying Chromebooks.
Let's be honest.
You know, I just, I got to put it up, but I just talked to the folks from shells on
the Mike Dominic show and that seems like the ideal situation for me, a Chromebook and
just a bunch of VMs running around in the cloud.
Yeah.
You got to wonder or even a tablet, you know, uh, it seems like that could be another route
to go.
Yeah.
An iPad, iPad pro with like a nice keyboard, but um, although now I'm a crack head for
my launch keyboard.
So.
Oh yeah.
I still feel and I paid full price.
I still feel the launch keyboard is the best keyboard I've ever owned.
Yeah.
I also paid full price last night though.
Could not sleep.
I have this problem where if I fall asleep and then get woken up within about 20, 30
minutes of falling asleep, I do not fall asleep again for the rest of the night.
I don't know if anybody else has this problem and if you figured out how to solve it, let
me know.
But like after two hours, it's just two and a half hours of just laying there.
I just gave up and I got up to work, but I grabbed the iPad and I brought up, I think
it's Termulus on there and um, SSH into my server and just spent the evening over a wire
guard connection, SSH into a server here at the studio, building out a website.
And it was great.
It just struck me like the, I really liked the, uh, the new multitasking stuff that's
in iOS 15 because I had, I had a couple of windows up.
I was checking a guide while also switching over to the terminal.
And I kind of feel like they've made some substantive improvements in iOS 15 on the
iPad in terms of multitasking.
And mostly what they did is they just added some stupid dots.
So I know where to drag stuff and I know where my dumb meat clicker needs to go.
That's all it took.
Have you played with it?
I have.
It's really going to, okay, can I just take a quick detour before I go into a full rant?
Yeah.
Someone suggested new merch for you, Chris, Coder sippy cups or water bottles.
I think that's a good, that's an easy one.
Something with a no tip base.
We got to get on that.
So okay.
The new iPad multitasking is so good that it pisses me off because of the dumb API restrictions
that iOS still has or iPad OS.
Of course they've never been closer to the star Trek dream of the tablet that you're
just like a commander Sulu, you know, throw this stuff up or it was a commander Sulu or
is it Lieutenant Sulu commander, right?
It depends on if it's star Trek six or if it's earlier in the, oh, that's right.
He gets a, he gets a promotion, but whatever.
Right.
And you know, I would love to hear from like full time, like I guess you could be a swift
iOS developer.
No, you can't.
You know why?
Because they don't exist.
There's a part of the story I didn't share chair.
I was on the iPad and I needed to retrieve this IRC log because, um, let's just say that
I had an incident during last week's Linux unplugged.
Oh boy.
Um, yeah.
A founder of a really kind of high focus, high attention, open source project came into
our IRC room and things got a little wild.
And after, after it all went, after it was all done, I thought to myself, you know what?
I want the logs of that because I want to be able to talk about it in the show and I
need to be able to prove it happened.
So I went to pull my log and it generated my IRC log all the way back to 2016.
That was like, it was like a T it's like a 260 megabyte text file.
Right.
Okay.
And nothing on iOS was having this and boy does like the file management fall down.
It's gotten a lot better.
But when you're trying to move around, like first of all, I needed to extract it from
a zip file.
When I needed to do something, yeah, no, it just started falling apart.
And even once I got it into its text form out of the zip file, none of the text editors
that I have on iOS could open it.
They all just kind of just crashed out.
Cause they have to use stupid URL schemes to open the, uh, yeah.
So I toss it, I toss it in Dropbox and I go open it up on my Linux desktop and K write.
And it opened like it was three lines of text.
I mean, it opened instantly.
It was, it was a total, absolute non-issue on my desktop.
And I struggled with it for 20 minutes on iOS and gave up.
So it's not all there.
Like this is the dumb thing though.
This isn't like a Linux master race case.
This is like iOS is based on macOS, right?
It's like the same core.
I know people will jump, but that's true.
It's just like a decision that they made was to limit iOS in this way for no reason, right?
It's fast enough.
It's fast enough to power.
But just the SDKs they make available, the APIs they make available, um, frankly they,
they, uh, hamstring the developers such that they can't do simple like open a 256 meg text
file.
Sorry, keep going.
It's just, it is kind of disappointing because it's, you know, an iPad pro and I would wager
that if I bought the new iPad pro with the 16 gigs of Ram option, this would likely still
be a problem.
And it's just kind of like, uh, sort of, it's sort of too bad.
What I ended up doing last night while I couldn't sleep was just a terminal, some web browser
and some chat.
And I mean, I just, I probably worked for three, three and a half hours without, without
any interruptions because it was the middle of the night.
It was so glorious.
And the iPad just chugged right along.
Chris, don't make me, don't make me install Xcode again.
Don't.
I am sorry.
All right.
Dan writes into the show.
He says, guys, I just listened to episode 421 and I wanted to confirm what I think Michael
said about the programming language of the future.
Sorry, Chris.
I don't know about Rust.
It's definitely going to be Java or TypeScript.
I'd love it to be Rust, but the community still doesn't get what it takes to succeed
in the enterprise ecosystem, i.e. being boring and stable to an extent like Go has become.
Rust just loves to pump out new releases and create too many nightly only features that
people can't keep track of.
And when that's paired with no LTS version, it makes Rust unappealing to the enterprise.
That's a point that I guess I don't really have a lot of insight into, so I hadn't really
considered it.
But I suppose it looks like Rust does move pretty quick right now.
Yeah, I could see how something like Go would be more appealing to an enterprise developer,
especially when you have projects that take years to build.
Yeah, I don't really have a lot more than I said last episode.
I mean, you know, to add here just that it's interesting since we started the show, enterprise
product managers who maybe don't have technical backgrounds in the 13 years we've been doing
this have learned one lesson, and possibly only one lesson.
Do not use esoteric technology that some weird vendor, some weird bespoke vendor local to
you does.
Use something super common that you can fire them and hire someone in India or wherever.
Or just some other local vendor, right?
So I mean, it's why Python is just a lot easier for me to sell now than Ruby, frankly.
Which Ruby is not even that weird of a technology.
It's just Python has the market share wise.
And so do you think part of that is your clients are doing the math saying, well, if I fire
this jackass, I can hire another guy and he'll pick it right back up?
Well, there's two levels of math, right?
Because you know, in our case, we're the Mad Botters, a small shop.
We've been around for a while, but we're, you know, we're still like, we're small.
So it's if we fire them.
But the more common case, because I think people like to be polite, is if you guys go
out of business or you sell for whatever reason, can we replace you?
You know, easily.
Right.
If you get a big fat paycheck.
Right.
That's a nice way to say it.
Yeah.
I mean, what they really mean is if we fire you.
Right.
Yeah.
Of course.
It's, you know, like rust.
There's just like, I've even like looked around.
There are rust vendors and they seem great, but they're awfully expensive.
It also just doesn't feel like that's the, that's not the place rust is at right now.
It is still new.
There is still a lot being figured out.
We're just now seeing major vendors.
Talk publicly about how they think they might incorporate it.
Like an example is Microsoft is considering rewriting aspects of the hyper V code for
Linux in rust, but they haven't done it yet, but they are discussing that.
And Google has just put forward an initiative and is helping pay for a developer to contribute
to rust for the Linux kernel full-time, but that's just begun, right?
It's early days for mainstream adoption still.
It's a lot of people are using it, but when you look at enterprises like Amazon and, and
Microsoft and Google, it's still early days.
Yeah.
And just for some real time followup from the chat room, X S X Sierra, Charlie 27, I'm
going to use, I don't know what you mean there, buddy, but okay.
Is saying a TypeScript is hot, but as rust and TypeScript in the same domain, obviously
they're not right.
But I can give you the perfect example that I'm using, right?
We're using Python as the high level business language, business logic language and C plus
plus as the underlying performing code and that you could use rust and something else.
I, in fact, I did that.
If you listen back maybe a year ago, I did something where it was Ruby as the business
logic with a rust, a native rust library for Linux that I wrote doing some, um, uh, Oh
my God.
The stupid 3d files.
I talk about them all.
STL.
No.
Oh my God.
A color OBJ.
I can't remember the name of the file format, but it's these color 3d it's the ones that
you use for 3d modeling.
I can't remember the name off the top of my head, but that was a case where the performance
calculations for the three graphics were done in rust, right?
Via a native library, via FFI.
But the general business logic of the application was done in Ruby because we're just, you know,
Ruby is just like an easier language to work in.
Right?
So yeah, especially if you've already done, you know, some pre-work in there like years
of Ruby.
Right?
Yeah.
All right.
So we've got a lot of conversation about the Apple store, Epic and antitrust.
But one of the things that I think a lot of people have missed is that Apple is no longer
a hardware company and they're not a software company and they're not even a services company.
Apple I think is selling an experience and the only tech company that is doing it, which
is a major reason why they are appealing to a lot of people.
Apple computers, watch, iPhone, iPad, home, everything integrates together messaging,
including SMS across all your devices, answer your phone from your watch or on your computer,
automate much of your house with home kit and turn on the lights with Siri with a voice
command while you're driving home.
This is the Apple worldview or maybe what you might call the experience.
And it's actually pretty nice when you buy into their entire ecosystem.
Part of that experience is the app store.
In my opinion, where Apple really went wrong was letting everything into the app store
and not curating the apps.
We end up with a lot of junk and a race to the bottom and allowing sideloading would
only worsen this problem.
That's an interesting point.
Sideloading would perhaps negatively impact the pricing on the platform.
What do you think of that?
I sort of separate it into two different spaces.
I think he's right in the consumer space that sideloading would only lead to a bunch of
piracy and a bunch of bullsh**, fair enough, lowering prices for developers.
I just want to say, though, that perhaps over the years, my perspective has changed.
I've gone from selling consumer apps to basically enterprise products.
I'm not sure what you call an app or a program these days, but I guess everything's an app,
right?
So apps.
All right.
Look, I have multiple customers that I have decked out with Surface Pro Xs and Surface
Pro tablets and even a couple of Surface Go's, not because Windows was the better platform
to work in, although in some cases it was because of hardware compatibility and drivers.
Not because we prefer working with Windows.
We don't.
Our primary, most of our stuff runs on Linux, but given our druthers, the client side environment
would be the DOM, the web browser, and then second to that, iOS.
It's just never worth it to deal with the enterprise provisioning for Apple where you
have to like code sign and go through their weird enterprise portal for just like a factory
or for like a farm or for like a hangar.
It's just never worth it when I can just tell someone to buy like 20 Surface tablets.
We write the thing, we code sign it, you know, we self sign their certificate and we can
just manage our own installation without going through a third party.
I know for those who haven't done it, that might seem petty, but Apple, even in the enterprise
still gets to decide what the hell you do.
And if I can just make a case or an example of a case from, was it 18 months ago when
Apple got pissed off at Facebook and you couldn't order a lunch if you were a Facebook employee
because the iPad app broke in the cafeteria because Apple just revoked the certificate.
That's, that's bull.
That shouldn't be the way things are, at least not in the enterprise.
A lot of their internal apps broke.
Just broke.
A lot of them.
Yeah.
That is my core issue, you know, cause I sell mostly B2B software.
If I could write iOS apps for iPad in particular and just like deploy them like I do, you know,
not on the app store, but the, uh, whatever private deployment mechanism without going
through Apple, I would probably in almost every case prefer iOS.
Yeah.
The thing is with the Microsoft Surfaces, let's be honest, it's not that hard of a sale
because they're probably already buying them for some users or they're buying something
in the windows ecosystem.
They probably already have an active directory system.
They probably already have group policy.
They already have audit procedures around the windows desktop.
So it's not a particularly hard sell to get them to, to deploy it on a, on a, on a surface.
Yeah, no.
I mean, I have a customer who's a huge Linux fan, JB fan, and you know, we ended up just
going windows for the simple reason that he needed a good touchscreen environment for
these tablets.
You bastard.
And you know, Ubuntu touch, uh, sorry, you know, it wasn't even considered, but like
the hurdles of like getting him enrolled in the enterprise program for iOS, it just like
no one wants to delay a project because you know, mom doesn't, you know, mother apple
doesn't want to let you do something right.
That's, that's ridiculous.
So.
All right.
Well he just wraps up and wraps up real quick with, I think part of the problem is that
everyone is thinking of each part of the experience as a separate thing and I want to pause right
here.
I've had the experience and I'm a, you know, I'm a daily iPhone user and I have an iPad
and I have the watch and over time I got the air pods.
Apple action show.
Right over, over time it's like you do get sucked in.
Just the air pods.
And the thing is so far, but the thing is in its own, it's not, it's not, it's not as
good of an experience.
So when my friends that maybe are Android users get an iPhone or get an iPad, they're
very frustrated.
They find it very limited.
They, they're very frustrated by the experience because I think it, it does require that you
kind of are all in on the entire experience, um, where all the pieces do fit together.
So he finishes with saying, I liken it to visiting Disney world.
You can buy a ticket at the gate when you get there and you can pack your own lunch
and you can wait in all the lines and you can still have a decent time or you can order
a package deal ahead of time, stay at a resort, eat in the restaurants with Disney characters
and skip the lines with fast passes and VIP tours.
Yes, it will cost some more and you will be at the mercy of a schedule, but you will get
more of the experience that Disney is trying to offer you and have a great vacation experience.
The Linux and Android experience can't even come close.
It's more like visiting a local county fair.
It seems like a good idea before you go and you'll have a good time, but it isn't anything
special.
Don't order the scallops.
Yep.
That's a pretty, I mean that guy, that guy's dropping bombs right there, Em.
You're dropping bombs.
So I will say the, the thing that keeps me locked into the Mac ecosystem, or I shouldn't
call it Mac, I should call it the Apple ecosystem, is not the incredibly amazing M1 chip.
And I don't care what you say on Reddit, it's still amazing and you guys have to accept
that.
Um, the beautiful sound quality of the home pods that Chris intentionally didn't mention,
the wonderful connectivity of the AirPods max and the incredible disappointment that
I feel with the iPad pro because Apple only do what it needs to do.
I think we're like at $3,000 worth of gear now, maybe $5,000 worth of gear so far.
Right.
But that's what it is.
Every, every piece of Apple hardware you buy, it's just like another hit of heroin, right?
Always using theme parks, very family friendly.
I'm going to go the other way.
At some point, you know, you're just, you're just turning tricks on the street corner for,
you know, honestly, I almost bought a purple iMac.
Do I need a purple iMac?
Does anybody think in the audience that I need a purple iMac?
Probably not.
No.
So I mean, it's just, it's a crack because you turn around and it's like, do you have
an, I see you have another Apple device.
Would you like us to magically set this up?
Oh, we see you have Apple music.
I, you know, I wouldn't even necessarily undersell it because if they, if they blew it every
time, every time you bought one of those products, you're like, oh, well, this sucks.
You would stop buying them.
Right.
But the thing is, is they are meeting or exceeding your expectations.
Now I'm not, I actually feel like there is also the flip side where you have people who
prefer to assemble things.
They prefer to build things.
They prefer to build a repair things.
We've had this conversation before and I feel like that doesn't get enough airtime in this
conversation because that is a large group of people, but it's just not where people
who are maybe heads down, very busy at work, managing a business, managing customers, managing
at such projects.
That's not where maybe their heads at.
So, and that's you and I, we're very much these days, we're very busy and we hear from
our audience who feel like they're very much in the same place, but there is, there is
a different kind of value in that stuff and I kind of look at it and I think to myself,
I just wish, I wish somebody could create like a machine that was close to a middle
ground of all this stuff, but he does, I do agree with the overall experience like you're
alluding to as well.
If you, if you want to fork out the cash for it, you know, like one of the things that
just as an example of this, it's pretty, pretty nice is if you got the watch and you've got
the Apple TV automatically without you having to do anything, the watch automatically just
becomes playback controller for the TV if it's not doing anything.
So you get play, pause, skip.
Wait, it does?
Yeah.
It's so great.
I have like three Apple TVs, I didn't wait.
So if I just really, yeah, it's cause what's happening is on your, you know, it's the same
thing on your iPhone.
When you go into the control center and you look at all the different airplay devices,
you can pop, you can pop in and control the Apple TV there too.
And when your phone detects it, your watch detects it and it's so nice and you maybe
have to do it once, maybe, and then it does it all the time.
And so if like my kids are watching TV and they're not listening to me, I just flick
my wrist up and hit the pause button.
Boom.
TV pauses instantly.
I went on a hunt for the remote and I didn't have to go like set up any config file or
set up any special DNS or do anything weird to my DHCP server.
It just works.
Wait, you didn't get to pop open nano and realize you don't have them installed?
That's the experience though that he's talking about there.
And I do agree.
It's, it is nice when it works.
By the way, if you use nano, please explain why.
I love nano.
It's great.
Get the f**k.
Really?
See, I'm already in New Jersey mode.
We were going to be bleeping a lot when I get back up there.
Linode.com slash coder.
Go there to get $100 in credit for a new account for 60 days and you support the show.
You know, Linode started in 2003, so they've been doing this for longer than I've been
podcasting.
That's a really long time.
They've been doing this for like 18 years.
Linode's like old enough to vote now.
They started before AWS and the other enterprisey big old like hyperscaler cloud guys got into
it, you know, with their big fancy offerings.
They were like, they were like late to the game.
Linode was there first and they're independently owned and they're founded on a love for Linux.
And now they're the largest independent cloud provider.
That's pretty awesome.
And one of the things they're doing that I, I think is just so indicative of how they
support the community is they're helping make our Jupiter colony reunion road trip possible.
We're meeting up with Salt Lake city and Denver.
That's that's being powered by Linode, both, both like in the money sense, but also like
in the technology sense, everything we host for Jupiter broadcasting since we've gone
to Indie has been on Linode.
And that's because it's fast.
They have a great dashboard.
They have fantastic 24 seven, amazing customer support.
Really.
I mean, these things all add up.
They have 11 data centers worldwide.
They own the connections between their data centers, Linode, man.
I think I was like, I mean, I don't remember the date exactly, but I think it was like
somewhere in 2017, 2018, they became their own ISP.
That's the advantage of being around for a long time.
And then just continually doubling down on your focus.
So they have these advantages that you kind of don't even really notice until you start
using it.
And they have super high end systems with like AMD epic processors.
And they also have just like $5 a month rigs that you can get a surprising amount of value
out of.
And you can look at their different options and mix and match some pieces that are upgraded
later.
And they're always a great deal, like 35, 50% less than some of the major cloud providers
out there.
You know, Linode just runs our backend so well that if I didn't tell you in these spots,
you wouldn't know because it's not like you're getting error pages and things aren't working.
Like everything's humming right along.
And one of the things we do to make our infrastructure scale with our user base is where we can, we
take advantage of Linode's S3 compatible object storage.
That means we kind of grow as our user base needs to.
And we also can use it for things like stashing assets in the cloud and generating public
URLs or serving up static websites super fast or offloading images to Linode.
And that makes just things really snappy.
There's so much you could learn, so much you can try.
And there's those one click application deployments, there's lots of those too.
So there's a lot of ways you could use that $100, have some fun, learn something and maybe
deploy something in production and support the show.
It's a great opportunity to do all of that.
So go to linode.com slash coder, get that $100 60 day credit on your new Linode account
and you support the show.
Thanks to Linode for sponsoring the Coder Radio program.
That's linode.com slash coder.
So I thought maybe by this week, all of the hoopla around Copilot would have just simmered
out, but it definitely has not.
And I didn't take this very seriously initially.
Neither did I.
I didn't even really bother trying it.
I just thought, okay.
Yeah.
I thought it was like a dumb toy.
Honestly, it was one of our little, okay, we need content.
Let's just throw it in.
Yeah.
Let's just talk about it.
It was like, it's weird.
It's new.
Like we weren't taking it very seriously, but it definitely has gotten a whole gamut.
It's gotten a lot of praise.
It's also gotten a lot of fire.
And I mean, I really don't even know what to think of it at this point.
I'm curious where you're at with it.
I sort of feel like this is either one of those things that I'm just going to completely
be wrong about.
I don't get it.
Like I get the concept, but everybody that I follow and you know, that follows me or
whatever on Twitter is like all pissed off about this.
I don't understand why it's a kind of bad idea that isn't working super well.
And like, there may be some licensing issues.
I don't know.
I'm not an attorney.
I personally don't understand how there could be, um, but like, oh, it reproduces stupid
bad code.
Well, yeah, it's just regurgitating code.
It's public available on GitHub.
What idiot would copy pasta code from GitHub or Stack Overflow?
Every developer ever is the right answer to that question, but we all pretend like we
don't.
So like, I don't know if, is it, I mean, could it be useful?
Maybe I don't honestly, I did not install it.
So this is one of those things like maybe I'm completely missing the boat.
I mean, my judgment's been so good with windows eight and Metro, right?
Well, I went out and I did some reading and I found a really comprehensive risk assessment
that's posted up on GitHub and I'll have it linked in the show notes.
And I really liked it.
You know, they started out talking about how Copilot is a generative model, meaning its
purpose is to generate output that is, that statistically resembles its input.
That's a very important aspect of when you think about how Copilot is going to work.
And so the, in other words, the goal is not exactly to reproduce the input because you
definitely don't really need a machine learning system to do that.
This model has a parameter called the temperature, which is a sliding scale between conservatism
and originality.
The higher you go towards originality, the less structured the output becomes.
It will gradually just become gibberish actually.
So GitHub controls the temperature of Copilot and they've presumably just been fine tuning
it based on, you know, the, the trialing that they're doing right now.
But the thing that's interesting about this, I guess I should say is if you prompt Copilot
over and over again with the same input, you won't always get the same result.
That's kind of interesting.
But yeah, I looked at this myself just from like what people are saying, cause I wanted
to figure out the licensing aspect of it and what they're saying, and I kind of see this
Mike is, well, it might be used for license washing where because it can regenerate things
almost really, really close to the original code, but with just like slight tweaks, you
could use this to output code that resembles very closely to the original GPL code with
just a few of the essentials tweaked, essentially reproducing the original thing very easily,
but under a different license now.
But why wouldn't, if that was your aim, why wouldn't you just like look at the GPL code
and then steal it anyway?
I'm not, and I have never done this, but I'm just saying like, or wouldn't it just be easier
to pay the people for like a private license, the GPL code I've done that.
I think maybe the other problem is that it could sort of slip in there and then somebody
comes along and sues you and says, Hey, that's GPL code.
Okay.
Well, don't you have to prove intent?
I mean, this is where not attorney is, right?
Can your defense be the computer, the computer typed it for me?
Is that a, well, what if I won't, what if like Coco or Coco touch, let's just say I'm
doing iOS development is ripping off some GPL code.
I know in that case, I'm not the obvious target to Sue, but how would I be liable for utilizing
that code?
It's just a tool I'm using to do my job, which shouldn't that not be me.
So that's where I wonder, because you look at, you look at these lawsuits we've seen
where even just like comments have come down to infringement, copying the comments and
I can defeat my own argument actually remember the old, uh, the patent troll that was hitting
all the iOS developers, the, uh, what is it?
Not PI start the, uh, Oh my God, the in app purchase guys.
This is from years ago.
Yeah.
Yeah.
Yeah.
So they were going after because Apple was allegedly infringing, but they were suing
the individual app developers.
So I guess you could, but I don't know.
It's it depends on how you look at it, right?
If you want this thing to large to write large portions of code, I think that's a real dumb
idea, but I could kind of see it working if you treat it sort of like the Gmail auto completion
when you're writing an email and it sort of suggests like the completion to the sentence.
It's like, it's like in cell, it's like a better version of IntelliSense if you think
of it that way, but I think the problem gets more complicated.
If it starts completing larger and larger blocks of code, you as a developer, it's your
responsibility to go back and check that and make sure it's legit and it just creates more
work.
Well, it should be against what?
Against the known universe of GPL code or you mean just that like works?
Yeah.
That's just that it seems sane because it doesn't always actually produce sane code.
Well, this is why I kind of, so I think when, when we first saw a copilot come out a couple
of weeks, so you and I sort of put it in there because we put it in there or whatever, but
like, I don't think, I mean, maybe I shouldn't speak for you.
I didn't take it super seriously.
No.
Yeah, I agree.
I kind of still don't.
Yeah.
I think maybe we got it right because I watched several videos and I read a lot of people
that wrote like their opinions about their usage of it and it seems some people have
a pretty good experience.
Some people have it producing really trivially bad code, obviously bad code just by looking
at it.
So I mean, then that means it's not a, that means maybe it has, let's just say an 80%
accuracy rate.
Maybe even 90% that still leaves doubt and it still means the human has to go back and
check the work.
That's why I think in smaller pieces and smaller little bits, sort of like an email autocomplete
like Gmail does.
Okay.
I could see it.
But if it's more like, you know, larger than that, anything larger than that, really, I
think it becomes more of a nuisance than it is a value.
We'll see.
I suppose it just gets better over time.
Yeah.
I'm sorry.
I just, I'm sorry.
The hard part of like the job of being a developer is not writing the actual code, right?
That's like a miss.
Like all those stupid movies or like the, you know, NCIS or CSI or whatever those dumb
cop shows are where the guy's like pounding away at 4,000 words a minute on a keyboard
that shatters, right?
Most of the time I'm working on graph paper because yes, I'm old and please don't send
me the tool that you think will replace my graph paper.
I've tried.
I'm currently trying to write one.
It's harder than you think because graph paper is amazing.
Get a hobby.
I have a hobby.
My hobby is writing iPad apps that I never ship.
I like it when you argue with yourself.
Is it a great, like Pat, I hate past Mike.
Yeah.
The arrogant prick that he was.
Yeah.
I mean he likes Sousa after all.
Oh, Sousa is great.
It's Sousa by the way, just so you, oh, our sponsor Linode will gladly give you an open
Sousa server.
That's true.
So just, you know.
Sousa.
It's what you want.
Yeah, I'll stand by that one.
Good job, past Mike.
No, it's just not that hard.
Like the writing, the code isn't hard.
It's figuring, like figuring out, I don't know, like should these models be coupled
together as a join in the database?
Maybe not.
Maybe locations and doors are different.
Right?
Like maybe, I don't know, maybe like what we call a car or a vehicle needs to be called
a truck.
What is a truck?
What constitutes an SUV?
Maybe we're working for an auto dealer is do we care about fighter jets versus bombers?
Is this the client going to come back and say, Hey man, awesome windows app.
Can I get it on my iPad?
Right?
Like there's a million things that can go wrong and none of them are, I can't write
a for loop fast enough.
So I don't know.
Yes.
Yes.
Yeah.
I completely agree.
I guess this is one of those things I feel like we should at least keep our eye on in
case.
Oh, absolutely.
Just to see where it goes.
Just maybe, maybe it gets better.
I could see them improving it over time as more and more users start using it.
I'm curious if like the EFF or somebody is going to sue them.
That's see, that's where I think this is going to go.
I suppose if you could, if you could demonstrate that somebody was reproducing GPL code essentially
and then licensing it as something else like MIT, maybe it's not GPL, but they, or I don't
think it's GPL, but they did reproduce the doom source code verbatim, right?
In comments at all.
Our friends over to Cloud Guru have a lot of, a lot of options for you to check out,
but this week I want to mention their Ansible best practices.
Now this is part of a Red Hat certified specialist program, and it's going to teach you everything
you know about Ansible and Ansible Tower, and as well as get you ready for an exam on
the topic.
So go over to our show notes at coder.show slash 422.
You'll see the ACG link in there and that'll take you directly to this course.
If you're planning on expanding your Ansible knowledge, you probably ought to check this
particular course out and all the other great courses over to Cloud Guru will have a link
for this one in particular at coder.show slash 422.
So speaking of Visual Studio code, how has the Live Share experience been going for you?
I know you were, I think you mentioned you were just starting to use that a bit and wondering
if you have any updates.
Yep.
We've been using it for about a month and it has been fabulous.
For those who don't know Live Share, how do we call this like a super, it's not really
a screen share.
It's like a...
And it's not, it's kind of like Google Docs but inside VS Code.
That's exactly right.
Google Docs.
But the key is, so I can give you a perfect case.
We had two guys, I was not one of the guys in this case, but one on Mac and one on Linux
and the Linux guy had the tool chain set up to actually build the code, the Mac guy didn't.
He was just coming into rubber ducky, second set of eyes.
He could hit F5, which is the shortcut in VS Code to build, and it built off of the
other guy's machine using his dependent, he didn't have to install all the dependencies.
But the code in his editor, it's Python, so the formatting's, it's the same.
But his key bindings, his color scheme, everything the way he wants in his VS Code, but the dependency
chain was from the other guy's machine.
That's awesome.
And they were live editing like Trista's Google Docs style, the code, running through it.
It makes me wonder if we could use it for show prep.
That's so nice.
And so it seems like it, it seems like it's, I mean, for that kind of collaboration, it's
gotta be pretty quick, pretty accurate.
Well pretty quick, and it has voice calling.
So you're talking to the person on the same connection.
Really?
Yeah, that's what it was.
What?
No way.
Really?
That's pretty neat.
I've done a few myself.
It's like, okay, what file are you in?
Wow.
I'm going through, I'm going through the page that we'll have link.
Oh yeah.
Look at that.
This is, this is, oh man, they're unstoppable.
You know how, you know how I've been going on about, about Apple, well geez, well Microsoft
is just crushing this area right now.
It really, and then you consider the whole GitHub angle of all of this.
This is some powerful, powerful stuff.
And then, and how long, how long have we been waiting for local applications?
Well call it native, even though it's an Electron app, native applications with this kind of
functionality where you could break out of your web browser and you didn't like, you
didn't have to be in a web app to get real time collab like that.
And we should, we should add an important point here.
You mentioned a Electron.
So this also crosses the streams between a VS proper on windows and VS code.
So what do you mean?
So you can cross the sessions.
So I can be on VS code on my Mac and someone can be on a windows 10 running visual studio
19 and that's fine.
Oh, okay.
That's nice too.
Huh?
Look at them.
They're just knocking down walls and barriers.
I'm going to have to give live share a try.
We'll have a link in the show notes and you know, anything we talk about in the show,
we always love to get your guys' feedback.
So when you go over to the website, you'll have the contact link there too.
Shout out to our Coder QA members out there who helped make this show possible.
You're going to get a new Coderly soon that's coming up.
And if you haven't joined our membership program over at Coder QA.co, you could join now and
get access to all the previous Coderlys and then you'll get the upcoming one.
We do one a quarter and I've already got a couple of topics set aside.
I haven't, I haven't shared what they are yet.
And so we'll, Mike and I will sync up before we record, but I got a couple ideas, but also
you get access to our limited ad feed as a member.
It's a new RSS feed that we generate just for you.
It's a bespoke feed and it's a, it's still the full production from Dr. Drew, just a
limited ads.
So you get all of that as a thank you over at Coder QA.co and thanks to our members.
I just have one last thing I just wanted to touch on in the show before we leave because
both you and I had been watching this drama play out and the Pentagon has officially killed
this $10 billion Jedi cloud contract.
And I feel like this is actually probably the biggest tech story of the last few years
that nobody's talking about.
I mean, it was weird how they got the contracts.
Yeah.
It's weird how it got killed.
I don't get, and I don't think the story's done.
I think we're going back to court.
Amazon was so all in.
So when they thought they had this thing, I think it was before Trump came into office
and Amazon was so all in, they built a second headquarters out in that area to just kind
of make them closer to the, to the heart of the operation.
And then Trump and Bezos had a, some sort of feud, I think because of the Washington,
I don't know.
The Washington post, right?
Post.
Yeah.
Yeah.
Anyways, so the contract ends up getting canceled maybe for better or for worse.
I mean, I've never been very happy with the idea that these private companies have these
$10 billion contracts with the defense industry.
It just felt whatever.
But I mean, I can think of one that would love a $10 billion contract.
Yeah.
No kidding.
Right?
If they need a podcast contract, let me know.
So then Microsoft ends up getting the deal.
Microsoft starts building up and staffing up for it.
You know?
I mean, can you imagine a 10 bill, even for a company like Microsoft, $10 billion deal,
you're staffing up, you're building out office space for that deal.
This is going to be like an aspect of your business for years.
And then the Pentagon calls up just a couple of weeks ago and says, we're actually going
to exercise that cancellation clause that we had etched in there at the last minute.
We're out.
And then it turns out in the background, there has basically been a Bezos led lawsuit and
legal challenge against this entire thing.
Basically putting it all on Trump and saying, you know, it's because he doesn't like me
that this whole thing got canceled.
And it seems like that thing is proceeding and it's created this wedge and the Pentagon
use that opportunity to cancel this whole damn thing.
And the reason why I think it's noteworthy is because whichever cloud provider ends up
with this, and now maybe several of them, is essentially going to get an indefinite
paycheck from the federal government.
Like that cloud provider is set for life because it's not like they're going to build out infrastructure
and then canceled a few years later.
So it's one of those things where I think they desperately want it because it's it's
a 10 billion dollar paycheck that's just going to keep paying out indefinitely.
It's a huge story.
The tech CEOs have gotten really powerful, too.
You know, Tim Cook, Colin, Nancy Bezos maneuvering this, you know, Pichai Pichai was working
with the White House on that acquisition of TikTok.
Like that was so weird, though, that they were just going to hand them and the White
House is just going to hand Microsoft an acquisition and like the tech CEOs are they're like the
big oil executives now only to have these cool guy personas.
Most of them.
Well, maybe.
Maybe not.
Yeah.
I mean, this is a bigger, bigger conversation for a different day.
I mean, something has definitely changed in just our industry, right?
I mean, it's interesting to see the oil companies.
I think of it as the railroads.
Right.
That's better.
That's a better analogy.
Right.
I mean, you're at a great rate.
You're taxed effectively to the big tech companies, if you're at all in the technology space.
And even if you're not right, even if you're in a different business, you're kicking up
to somebody.
Fair point.
Well, good luck on phase one of the moving.
I'm the only person moving to New Jersey.
This should be interesting.
Is there anything you want to mention before we get out of here?
If you need Python development done and or especially Objective C development, reach
on Twitter at Domenico.
Absolutely.
You can find the whole podcast over there, too, and the and the network.
All of it.
The podcast that's at Coder Radio Show, the network that's at Jupiter Signal.
I'm there, too, at Chris L.A.S.
Links to what we talked about today, Coder dot show slash four twenty two.
You'll find our contact page over there, our subscribe page.
We'd love to hear from you.
It's a big part of the show.
And of course, we'd love for you to subscribe and get the show every dang week.
And if you want to join us live for just a little bit longer, it's in the evenings on
Monday at five p.m. Pacific, eight p.m.
Eastern over JB live dot TV.
Thanks for joining us.
See you back here next week.
