This is Kota Radio, episode 413 for May 10th, 2021.
Hello friend, and welcome into Jupiter Broadcasting's weekly talk show, taking a pragmatic look
at the art in the business of software development and the whole damn world of technology.
This episode is brought to you by a cloud guru.
A cloud guru now includes Cloud Playground, Azure, AWS, or Google's environment on ACG's
credit card, not yours.
Get certified, get hired, get learning at acloudguru.com.
My name is Chris and our hostess with the mostest who's going to help me fight the banks
is Mr. Dominic.
Hello Mike.
Hello, and this episode is brought to you by Goldman Sachs.
Oh crap, we're not supposed to open with that.
Oh no, man.
I need your help to fight the establishment.
Although if we can get paid, that's just as good really, let's be honest.
Maybe that'll be our exit strategy from this whole podcasting thing, going big with the
banks.
Well, how's it going over there?
I have several things I want to check in on.
First and foremost, we are now weeks into Mike's X1 Carbon 11th, what is it, no, 9th
gen.
How is the X1 Carbon lifestyle treating you?
It's good.
Unfortunately, because of the tyranny that is iCloud Keychain, I could not get into either
Squadcast or IRC without getting busting out the Mac.
I think you mean the ecosystem.
Oh, it's a feature, right?
Yeah, it's the ecosystem, dude.
I'm told this is the benefit.
It's kind of a pain in the ass because I was putting the kid down, I was running late,
and I'm like, oh, God.
We should say Mike probably knows about Bitwarden and LastPass.
Mike does know about Bitwarden and LastPass.
I also know about some of the problems, particularly one of those, but let's not pick on anybody
in particular.
But yeah, can I tell you, I'm about four months into my, oh, I might be even longer into my
X1 now, maybe six months into my X1 Carbon.
And I checked the battery health this weekend, and I've been pretty good.
I'm pretty good about my batteries.
I at least, I at least am very mindful of not overcharging or leave my batteries dead.
And this thing's about maybe between four and five months old, and the battery health
is already at 94%.
And I can tell.
That seems quick.
It's very quick.
I'm not happy about it.
I am not pleased.
I'm taking proactive measures, but...
Are you running that Linux operating system?
Yeah, oh, yeah.
Yeah, it came with that on there.
So you're suggesting it's damaging the machine.
Well, I'm using the tools in that GNU slash Linux to preserve the battery for as long
as possible now.
I am deploying a series of tools in which will enable me to try to eek the most out
of it that I can, but I shouldn't have to.
I just shouldn't have to.
I don't know, man.
I try so hard, and then these things get away from me, and then I come back to them a few
months later, and I realize more damage has been done.
And then I build up this guilt that I'm a bad laptop daddy, and that I don't take proper
care of my laptops.
It's just...
It's a bad cycle.
Yeah.
Because you really don't want to charge it all the time, right?
That's the big secret.
Yeah.
Well, I'm pretty sure everybody who listens to this knows, but...
Yeah, I am.
And I pay attention to all my batteries.
It's more aggressive than I'd like to see.
You know?
I've...
I mean, unless the other tools are lying to me, I've got machines that are older than
that that have better batteries at this point.
I just don't really get it.
I suppose it's different for every machine and every battery, and the life cycle of each
battery is going to be different, too.
But I did it again, Mike.
You know?
I am a dumb man who can't think in long-term or short-term windows, mostly.
You know what I'm saying?
I could think for the next three days, and I can think for the next five years, but I
couldn't tell you for the next two weeks to three months.
I'm just a total mess at planning.
Do you suffer from this at all?
Would things especially get busy?
Yeah.
I would say long-time horizons feel more possible.
Short-time horizons feel...
It's like panic mode.
Do what you can.
Yeah.
Put out the fire.
Yeah.
Medium-time horizons get a little fuzzy.
Yeah.
Yeah.
But in what frame are you talking about here?
Well, you think about how Jupiter Broadcasting operates as a business, and our revenue stream,
a good portion of it comes from sponsors, right?
And sponsors work on this contract where you say, okay, we commit to doing this many episodes
for this long, or we'll do them in this order, or whatever.
There's all these details in these agreements.
And I've yet, and I've been doing this for a while, I've been doing sponsored content
for like 11 years, and I still have yet to properly schedule things like known family
trips or holidays into these contracts.
And so I find myself where I'm up against some travel, which for me is happening at
the end of May, and I haven't really accommodated for anything.
I don't really have any planning.
I just don't have the bandwidth to zoom way out and have this master scheduler who's aware
of when tech events are, and when news events are happening, and when big releases are,
and when trips are happening, and when schedules for sponsors, and when co-hosts want time
off, and all of this matrix of information that it's all floating around out there, I've
never been good at bringing it all together and coming out with a master JB timeline.
Like a master control program, if you wanted to say that, yeah.
And so instead I just end up scrambling constantly, and it creates more fires, and it makes going
on a trip, I need to prerecord seven shows.
It's just, that's not possible, not in a week, I can't do that.
Are we doing a special next week again?
I don't think so, I mean, I'll think about it, I'll talk to you, I don't know.
You can do it.
I mean, I don't mind doing some of it from the road too, because sometimes it's kind
of fun, you know, do Coder from the Road or something.
I just want to say, I think we have a WSL special on us.
We could.
We definitely could.
Yeah, I was thinking, it's funny you say that.
I was thinking just last night, it's like, you know, I spent a whole weekend in Windows
10 and screwing around with WSL, and I really don't feel like I relayed a lot of the experience.
I relayed like the highlights of the experience, but I don't know, I feel like I could have
done a better job communicating what that experience was like, because it's kind of
a pivotal thing that's happened, because I still see people chewing on it in various
community discussion areas.
Yeah, I'm super down with WSL.
I mean, let's not talk about it today, but I'm...
All right.
Yeah.
Yeah, we'll save it for the future.
Josh writes in, and he says, I have a question and a comment on Mike's obsession with.NET.
I want to know your thoughts on PowerShell as a viable contender with.NET, you know,
maybe in conjunction with it, because you're able to systematically call C-sharp methods
if you don't want to get dirty with pipes, and you can even integrate it with XAML to
make pretty GUIs.
I just wanted to mention it because it's been an obsession of mine, and Mike might find
it quite useful.
Keep continuing with the great show.
Josh, have you ever, now that you're, you know, smoking the Windows pipe over there,
have you thought about looking at PowerShell?
You know, when I'm in a public restroom, heating the Windows crack on a spoon, it's...
Yeah, that's exactly what's going on.
And this shows you my knowledge of drugs, so I'm pretty sure you don't do that with
crack that...
I think, whatever.
But yes, in fact, the long-defunct Mike Dominic show, we had the PowerShell for Linux dudes
on who were, well, that's their thing, right?
Yeah.
Right.
Right.
Good callback.
So, good callback.
That was maybe a year and a half ago.
Maybe a little less.
But I don't use PowerShell for a very boring reason, and the reason is I've been using
Bash for 4,000 years.
Well, and they've put so much work into making it possible to run Bash now.
That's where I was going to go with this.
I know if I were going to be a Windows-only admin and developer, sure, it'd be worth the
investment of PowerShell, and we absolutely have talked to people that feel it is that.
But when you're more mixed multi-platform, and you've got the option to just run Bash
on Windows, why wouldn't you?
Right.
And before anybody writes in, of course, I know when I'm on Mac, it's ZShell, right?
Screw that.
Get rid of that.
Put fish.
No, I'm just saying the Bash-esque, right?
The more Unix-y shells.
And also, with WSL and Linux, I kind of...
All right.
Today, I was working in Python and.NET and Ruby, because sleep is for people who like
to preserve their sanity.
Two of those things were in WSL.
You could probably guess the two.
And one of them was in Visual Studio.
But yet, all of the command line stuff was being done in WSL.
I actually prefer Penguin.
I know it's a paid distribution.
But again, another callback to the old MacDominic show.
What is it about Penguin you're liking?
Is it Debian-based?
It is Debian.
So you get apt.
You get apt.
They also have a bunch of easy setup commands for common development toolchains.
And they kind of smooth over some of the weirdness with crossing the file system boundary in
WSL, too.
Which when I say the file system boundary, I mean, if you go from, you know, like, slash
mount, blah, blah, blah, to slash mount slash win home, you're now in Windows World.
And that can get a little hinky.
They have a bunch of like, it's literally a command Penguin setup.
And you set up just like, what are you doing?
Like I'm doing Ruby, I'm doing Python, I'm doing dotnet.
But I'm doing dotnet on Docker and Linux, but I want to use Visual Studio as my IDE.
So set it up that way.
And slick.
It's the same apt commands that you were familiar with if you used Debian or Ubuntu, or pop.
But they basically have a script that, you know, it's a batch script, right?
It sequentially runs the commands and you have to consent to the, you know, it's the
same thing you've seen a million times, right?
You have to say, yes, I'm willing to allow you to install this blah, blah, blah, blah.
So this is a little embarrassing for me after 400 and however many episodes.
I don't know how to use databases on Windows.
So I use them all in WSL.
I think 490 million.
I love it.
Let's be honest, that's a better way to go.
Well, and that's what the servers look like anyway, right?
Yes.
Yeah, that's a good point.
I mean, ultimately that's where it's going to be running.
My ability to know a PSQL commands.
Super great.
My ability to run whatever the GUI client from Windows is, whose name I don't remember,
but someone will correct us in the comments for Postgres is zero.
I can do it on the command line.
I just don't know how to use that application.
So let's talk about Dart and Flutter because Grape writes in with a question about using
Dart and Flutter for their project.
Grape says, I can't seem to find a moderate take on this.
Everybody's either on the very, very positive side of using Dart and Flutter or on the very,
very negative side of using Dart and Flutter, and I'm not really expecting other people
to help me for my opinion, but I would like to know your thoughts on using something like
Dart and Flutter for a project that I'm working on to make a single code base for mobile and
desktop apps and potentially a progressive web app in the future.
Kind regards.
Thank you so much.
Grape.
Now, Flutter and Dart are Google technologies.
And I know you know that, Mike, but I'm just reminding the audience that that is traditionally
just been like the elephant in the room when it comes to using these technologies is they're
tied to Google.
And this week, I saw a piece that was released that specifically argued that's all the reason
you need to completely avoid Dart and Flutter is its dependence on Google.
Ergo, you would be dependent on Google and you must avoid that at all costs.
And I think that's some of the strongest criticism about using Dart and Flutter.
And I'm curious to know your thoughts on that particular like very hard line.
I mean, well, doesn't Google for Dart and Flutter have a deal with Canonical or did
I dream that up?
Yeah, well, it's I don't know if I don't know if how much of it's on paper, but Canonical
is committed that their future applications for Linux will be written in Flutter.
And they've also rewritten or begun rewriting their installer using Flutter for the Ubuntu
desktop.
Yeah, I mean, I found this question a little confusing when it came in, because is the
question, should you consider Flutter as a development toolkit?
And the answer is obviously yes.
But is it based on the technical merits, right?
And it depending on what you're trying, you know, the old use the best tool for the job,
or is this because it's from Google?
Should you not use it?
Was that?
Yeah, really, what they're trying to say is, do the people with the extreme opinion that
because it's Google, or do they have a point?
Is there a real risk of that of attaching yourself and your project, and maybe an income
stream, let's say to something that's a Google project?
I mean, the only one thing I would say is I usually don't like these arguments.
But Google has a nasty habit of killing development platforms.
And basically, every other product they've ever launched other than search and whatever
they used to murder Yelp.
So I personally have no problems with Flutter.
I have played with it a few times.
I've done it for the show, right?
We've talked about Flutter.
I keep plugging the show that in my show that no longer exists, but I had a Flutter guy
from Google on the M Dominic show rare Mike Dominic show, right?
Like it's, I have no animosity towards Flutter.
It's just I don't know, I have like 1000s of lines or more than that written in ionic.
And right now I'm doing a lot of stuff with dotnet Maui, but don't tell anybody.
And I kind of don't believe in Dart for reasons that are sort of lame.
If we want to go into that we can, like for me, it's not Flutter, it's Dart.
That's kind of the problem.
I tend to agree just because darts desktop Linux support is not super modern.
And that turns me off.
My major turn off on it is how do you do the math on the risk of Google eventually abandoning
this?
I don't think it's very likely because it's also tied to their fuchsia OS project, as
well as some of their internal application development.
So it seems like it, as far as a Google project goes, something like Dart and Flutter have
a pretty good long future.
And you've got at least 10 years, you could probably, I would imagine a runway.
Maybe maybe it's not.
Yeah, see, that's just it, though.
That is just it is I actually am not confident when I say that I start to question, I go
out maybe five, you know, maybe maybe in three years, they announced they're done.
And then they only announced, you know, support for another couple of years after that, like
who knows with Google?
That's the problem is who knows with Google.
Now that's it.
So that's my position.
And I specifically wanted to create a desktop application, multi platform desktop application.
And I wanted to potentially create something that could go on the web as well as a progressive
web app.
And I wanted something that felt like it was easy to get started in and very modern.
I'd be drawn to Flutter.
I did try it really briefly, and I am no expert by any means.
I mean, we're saying I'm talking just a test project.
But I myself was able to build a test project and get it running on desktop Linux.
And that did strike me.
And the other thing I loved about it is that you can do with, you know, a lot of things
now, but it's that ability to make changes and see a real time update as you're going
that is so appealing once you start building that way.
And Flutter enables that.
So I actually I kind of want to say what's the worst that could happen?
Because you're going to get at least a few years of runway out of this thing either way.
But it does make me uncomfortable saying it.
I don't think you're wrong.
I just think given the choice between like, Flutter and Angular, I would probably go with
the Angular because I mean, I'm not going to do the falsetto, I'll try business.
But like, Angular is a thing if your independent application doesn't work out, you can definitely
contract out for right in the enterprise, where Flutter I know there is a Flutter community
and they're very mad and they yell at me on Twitter, but it's just not as big.
I might have Google Reader PTSD, that might be a problem.
It's not just Reader anymore.
I mean, there's a lot of projects that are fading.
There was Google.
Oh, my God, what was the one years ago?
I spent time like trying to develop something, WAVE.
That was the one.
Me too.
And like, Google has a bad habit of saying they're going to open source great toolkits
to like revolutionize the way you work.
And then just killing them because it's Thursday and they had too much to drink, right?
There you go, trolls, I gave it to you.
But I mean, there's nothing wrong with Flutter.
A friend of mine, Hank, who's a very experienced developer, is doing a lot of stuff in Flutter
and he loves it.
I, for reasons that make a lot of sense to me, but we'll talk about on a different show
and back to doing just a crap ton of.NET and C++, and they're weirdly intermingled
in ways that architecturally makes sense, but with.NET 6 and Maui coming out.
And frankly, I would probably still pick Angular over Flutter just because I've been doing
it for N years.
And that's really the question the writer needs to ask himself, and I apologize for
forgetting the name.
If you're coming in, you know, virginal here, fine, pick whatever you fancy.
But if you're already an experienced developer in Angular or React or Vue or whatever, why
not leverage your skills to ship faster?
Yeah.
And you pointed out the community aspect, and that's something that I don't have a real
good grasp on, but I can guarantee you Flutter doesn't have the larger community.
So I think you make a good point there as well.
No, but I will say, just in defense before people say I'm talking, Flutter, like I've
also done it every year as like a, just like Mike is playing because he's bored and his
son decided it was time to watch PAW Patrol.
And you can get very productive very quickly in Flutter.
Like there is nothing technically wrong with Flutter as far as I can see, compared to the
other cross-platform, you know, Webby stuff.
That's a great benchmark.
Like, what can dad get done while a couple of episodes of something on Netflix are getting
watched?
Listen, while an entire city of adults who have to leave all their emergency services,
including the fire and police departments, up to a 10-year-old boy and a bunch of puppy
dogs, yes, what can dad get done while that is happening?
Yes.
And if you're not a parent, you don't know what PAW Patrol is, don't ever look.
No, you don't want to go down that hole.
Trust me, you're better off.
Lino.com slash coder.
Go there to support the show and go there to get $100 in 60-day credit towards a new
account and try all of the things I'm about to tell you about.
I mean, it really is the best way to spin up something in the cloud.
It's 30 to 50% cheaper than the other cloud providers out there, and they've been around
since 2003, so they really know what they're doing.
And they have hundreds of guides and tutorials to help you get started.
There's lots of good things in there.
And the nice thing about that is you can read a guide and make sure you've done something
right and that you've put it in production.
But you know what I always say, it's like it really kind of matters how good the support
is when you are in an emergency situation.
And that's a bar Linode meets over and over again.
I hear that from the audience who've tried out Linode, and they're blown away.
I've heard from people who have a $5 Linode, and I've also heard from people who are running
a lot of different systems on there, support's really good by phone or ticket, and that matters
when you put something into production.
They have S3 compatible object storage, and we use that for all kinds of innovative things.
Just recently, the Clonezilla project added built-in S3 backup, so you could image a system
right to object storage.
How great is that?
But the question I get from people who haven't tried Linode yet, and they know that I've
been using it for a couple of years now, so I've got some experience, is what's the big
differentiator between one of the other cloud providers?
Well, there's a lot you could choose from out there, but none of them are quite like
Linode.
None of them have all of the components together, the super fast networking, the extremely fast
rigs that just beat everybody else in performance, 11 data centers to choose from, really, really
high-end CPU systems with AMD EPYC processors if that's what you need, or extremely reasonably
priced systems for hosting a blog or a game server.
One click application deployments and all of that is just right there in their very
easy-to-use dashboard.
There's a lot to look at.
There's a lot to try.
So that's why I say you should really just go check it out for yourself and support the
show at the same time, because you're going to get $100 60-day credit.
So why not try it out and see what we've been saying?
See why it's what I've chosen now for a couple of years straight.
So go to linode.com slash coder, get that $100 60-day credit towards your new account.
It's a great way to get going.
There's all kinds of great project management applications you can self-host to if you want
to help organize your team.
That's how I started using one of them.
And then pretty soon, I put a real-time markdown collaboration tool called HedgeDock on there.
And then pretty soon after that, we had NextCloud.
And then pretty soon after that, we had just system after system, really, matrix emails
on there.
Our encoding systems are on there.
I mean, it's really been great because each system we can kind of customize just to the
way we need it.
And there's lots of distributions to choose from.
So go try it out right now.
See what I've been saying at linode.com slash coder.
All right.
This is just a mess.
This was sent into the show and I really feel for them.
A hacker accessed their AWS account and rang up a massive bill.
Did you see this?
Did I?
50k.
50k.
And they haven't heard back from Amazon.
I'm sorry.
I took a small heart attack there.
What did you say?
Yeah.
I know.
It's a lot of money.
It is.
And you know what else the guy said?
His bill is usually like around $1,000 a month.
So he was pretty shocked.
He was pretty shocked when he saw a $26,000 charge from AWS.
How could you imagine?
He opened up a support case immediately and somehow the case got posted twice.
Because of that, the support team marked both cases as duplicates.
Then he had to reopen and then it was resolved again as a duplicate.
And now he's just trying desperately to get a hold of someone at Amazon.
He's emailed people directly.
He doesn't know what to do.
Wait, the Python script wasn't super helpful.
I know, right?
You know, this reminds me of the time, one time when my employer gave me the login to
their AWS account so I could go learn.
And I didn't know anything about AWS at the time.
It was brand new, really.
So not a lot of people did.
And I rang up $2,000 and just idling, just left a machine idling on their account.
$2,000 bill for a machine doing nothing.
We remember years ago, I had this story with Azure and they were like, although I will
give Microsoft one thing, if you have a rep, like, hey man, I really don't want to pay
this $10,000 bill.
They're like, yeah, we don't care.
It's fine.
Yeah, that's good.
Although AWS, I will say, if it's an accident and you only do it once, in my experience,
they do usually cut you some sort of break.
Yeah, as long as you can get a hold of somebody.
That's his problem, right?
Hopefully.
Now he's tweeting about it.
He's posting it on Hacker News.
You know, sending it into podcasts.
It's going everywhere.
Get me Deckard.
I know.
You got to tell a story.
All right.
Here you go.
Stay a while and listen.
Children, we don't use platforms that we don't own until we have a developer, evangelist,
or rep that we have the direct contact to.
And not that he follows you on Twitter, but you can't DM him or her.
No, I want the man's or lady's email address.
You want to be able to call her if possible, but you don't want to be too pesky with that.
The email, DMs, private message, have an account, be assigned to a rep.
Because reps have magical admin consoles where they can make this crap go away.
Man, that is such a great, great point.
If you're going to bet the farm on somebody's platform, you better at least get a rep, right?
I think you just gave everyone their moment of value right there for the show, you know,
passing some sage wisdom.
So I want to run the story past you.
You and I have talked about Docker since the early days, like we have mentioned before.
I've been dying to talk about this, go ahead.
And you have commented early on, on questioning how they were going to earn real money long
term.
And then we've seen clearly this narrative build in the market analysis people, you know,
that class talk about how Docker is struggling to find a path to revenue, Docker can't figure
out how to monetize, etc, etc.
And we've seen all kinds of crazy trajectories where in quote unquote, enterprise software
companies will create large annual support contracts that you have to pay for.
And if you miss anything, you have to pay your missed time before you can get a new
support contract and all that kind of thing.
And Docker hasn't done that, even though they are very much an enterprise development tool.
But they do seem to have identified new pain points that their customers experience in
the Docker desktop for Mac and Windows, and specifically a lot of the feedback around
the Docker desktop application has been around how inconvenient the Docker update processes
and how problematic it has been for developers that are on constrained and metered connections.
And they've also heard a lot of complaints about how the Docker update process works.
And so what Docker has done is they've taken all of that feedback and figured out every
single pain point that they can monetize and now they have implemented a system that encourages
developers to skip updates by pain.
If you don't want to upgrade your Docker desktop today, you can pay to skip an update by becoming
a pro user.
Or if you're part of a team and or you have to just either update or continue to hit dismiss
every single day.
If you're part of a team that pays, a magical bit gets flipped and an option comes on in
the settings that allows you to suppress these notifications.
So it's time for another New Jersey story.
Okay.
Very good.
And by popular demand on Twitter, which tells you how many of our more Egon, this one's
for you.
Oh, Egon.
I don't know, man.
I don't know if he's out there anymore.
I'm starting to doubt it.
I'm pretty sure he's in IRC right now, actually.
Get a hobby.
That's right, Egon.
Get a hobby.
So gather around, children.
It seems an awful lot like, and Chris, we love Docker, right?
We had them on when they were still cloud nine.
Something like that.
Using lots of our infrastructures and containers these days.
Lots lots of containers.
A lot of mine is still too.
But it seems like that's a very stable setup you've got there.
Be a shame if there was an update and something happened to it.
Why don't you pay us for support?
Are you in the middle of a project and don't want to change your environment?
Pay for support and we won't upgrade everything on you.
This feels gross.
And this is where the audience is going to hate me.
You have to have a way to make money from your work going in.
The problem that they have is Docker...
We won't do the Deckard Cain thing again, but we really, really, really should.
They were a VPN hosting company, children.
And they were just trying to sell you VPNs and Docker was an easy way to deploy any development
stack.
They had never heard of Heroku.
And then Dooku came, built on Docker, screwing them over completely, because Linode will
give you a server for like five bucks.
I mean, it really does seem to like underscore that whole they can't figure out how to monetize
this thing and they're just pulling every little possible straw they can.
I mean, traditionally, you have paid to receive updates, not to avoid updates.
That's the core shift here.
But the thing that I think that is kind of inexcusable, because I can kind of understand
some kind of system like this, although 24 hour nagging is a bit much.
But they don't use the native OS notification API.
So you can't just like D&D your box and then avoid these annoying messages.
You know, I don't think that's better.
They are taking a problem they have because of some questionable monetization choices.
The way it happened was Docker being the product ended up being an accident for them.
They thought it was like a value add their secret sauce to their hosting thing.
Their directory, their tools around it.
Well, they had a bunch of crap, right?
They had a bunch of stuff they were trying to sell you.
And I'm not saying it was crap in terms of bad, but they I mean, ultimately, I bet if
they could have gone back, they wish Docker had been more proprietary.
Like maybe with this weird open source version that was gimped, but ultimately commercial,
because what they're effectively doing is, as you say, they're inverting the enterprise
software licensing model, instead of saying, All right, well, you know what, it's open
source up until this point, and now we're closed sourcing it and blah, blah, blah.
They're saying it is open source forever.
But if you don't want to get hammered by updates that destabilize your infrastructure, you
need to pay us, which I mean, sleaziness, right?
Yeah.
Or is it just me?
Where it crosses the line to kind of gross for me is when I read the blog, and they kind
of point by point, break down how they, quote, heard from our community about these problems.
And they kind of identified clay, they clearly, you can kind of see how the whole thing worked.
The team sat down and identified all of the complaints from user surveys and feedback,
and went line by line on the whiteboard and figured out how to turn each one of those
complaints into money.
And that's the part I really don't like.
And it doesn't really affect me because Docker desktop is Mac and Windows only.
But for this story, I gave it a go.
And it's, it's pretty good.
You know, it's pretty nice.
It's, it's not bad.
It's not great.
You know, I don't necessarily feel like I'm missing much by not having it.
But I could totally understand how developers who don't come from a Linux first background,
but want to take advantage of containers on their desktop of choice, would use a tool
like this.
And, you know, I'd be forced to go pro if I was in the middle of a project.
Like you say, I'm not gonna sit there and upgrade.
I just, I don't even do it now on Linux.
I don't upgrade Docker in the middle of some like review or something like that, unless
it's part of it.
But I am running OS two, like my grandfather before me.
That's how you should.
It's good OS, you know, it's OS two warp speed, if we all remember, the, the time OS two completely
blew my mind is I didn't realize this is how IBM did it with their mainframes.
But you take like the system 390 mainframes, they're some of their big boxes.
And in the front of the mainframe, or somewhere in the mainframe is an entirely separate 486
or at the time, that's what it was, it was probably something different PC, there's like
an entirely second PC inside the mainframe, a PC within the, well, the mainframe is not
a PC.
But you know what I'm saying?
And that machine, that old 486 that's inside the mainframe runs OS two.
And so when you connect to the mainframe, you do it through a terminal emulator on OS
two.
So when you turn on the screen that's on the front of the mainframe, which is kind of like
this big console area, that's this awesome, like sitting area that looks like a Batman
Batcave computer.
The screen is actually OS two and the keyboards connected to an OS two box with a terminal
that connects to the mainframe operating system.
It's pretty awesome.
That was my, that was my experience with OS two.
But I just think it's wild to see Docker doing this and I, I disagree with you on the notification
thing.
It's like fine, you want to nag me every 24 hours to update.
That's one thing.
But if you, if you integrate it with the OS, my desktop notification system, I can turn
those off while I'm working.
I can't turn this off while I'm working.
And that, that drives me nuts when applications implement their own notification system.
Just oh, not having it.
And you know, this was sent in to us via Twitter and, and the, the listener that sent it into
us was exactly in that situation.
He's like, I am in the middle of a project and you're telling me I have to pay not to
update right now?
I just restarted my computer.
That's all I did.
You know, I just rebooted it.
No, I restarted Docker desktop and I'm getting this prompt to upgrade or pay.
Give me a break.
I just want to say this.
If you run an enterprise software company, devs are moody folks, maybe annoying them
while they're in the middle of a project.
I think there's a non-zero chance they just don't like use your product again.
Yeah, that's definitely, actually, you know what, it's funny you say that because I'd
say one of the top responses I saw in comment sections was, well, hey, have you heard of
Podman?
Podman is this, you know, alternative.
Like I saw that a lot.
So people do start looking for another option and people start are very, people are so happy
in the comments to recommend the underdog alternative.
They'll just, you can always find it out there.
Datadog.com slash coder radio.
Analyze code level performance across your environment and troubleshoot issues faster
with Datadog.
Save time with Datadog and communicate.
Datadog's continuous profiler automatically collects profiles from your production servers
all the time so you can analyze any of your data quickly with minimal overhead.
You get a unified picture of your environment by correlating your code performance with
all of the other metrics from your entire stack in Datadog's beautiful real-time dashboards.
Go to datadog.com slash coder radio to get a 14-day free trial and to see these dashboards.
And what's brilliant about Datadog is they have over 450 different application integrations.
And then you get with that tracing and log management and that continuous profiler, all
of those products in one platform with real-time beautiful dashboards that enable you to pinpoint
the root cause of an issue faster than ever.
Reduce downtime, figure out performance issues and communicate with your team.
So try out Datadog's products for free for 14 days.
This is a great tool and you can get access to Datadog for 14 days for free by visiting
datadog.com slash coder radio.
And for a limited time, if you start a trial and you create one dashboard, you'll get a
free Datadog t-shirt.
Free t-shirt?
Free shirts?
Okay.
I don't, I haven't gotten a free shirt in years.
Been like too seriously, almost feels like 120 years actually.
I could use a t-shirt Datadog.
Datadog.
Go get one for me.
Datadog.com slash coder radio.
So I don't know if you're following, let's just cover this briefly just so we have captured
it.
I'm just showing some of the highlights that are coming out of the Apple versus Epic trial.
It's already underway.
I can't believe the speed that this thing's moving at.
And basically Epic's lawyers are arguing that iOS should just be more like macOS.
Still have strong security and privacy standards, but allow a gatekeeper type system where third
party applications can be run with some work.
They even suggest that Apple should make it kind of hard so that way you can't just roll
up on a third party app and install it, but that you have to go through a bit of a rigamarole.
That's what they want and that's going to be their core argument going through this
entire thing.
And then they're going to lay out all these examples of Apple not managing the app store
properly and argue that that's the reason that you should allow third party sideloading
on the iPhone.
You think they're going to be able to pull it off?
No.
Probably not, huh?
They have gotten some juicy, juicy deets out there though.
I like the hater raid for iMessage on Android.
That was unrelated to the actual question, but every time we feel like, well, why would
Apple be like that?
They're like that.
It also revealed a conversation where Apple was aware of some bogus versions of Xcode
getting some systems compromised and information compromised and Apple just couldn't really
be bothered to go through the problem of contacting all the individually affected people in their
own native languages, so they just kind of forgot about that.
I feel like we've been covering the story in a way for years, but it's been Mike's Conspiracy
Theory tinfoil hat hour, but Apple is the big company that we've always said they are
and things that don't make financial sense for them, they don't do.
You look at it though and I think they are going to face a reckoning and what happens
here will lay the ground for the next battle.
Just look at podcast subscriptions.
Apple doesn't have to pay a 30% tax when you subscribe.
Apple doesn't have to pay that fee, right?
For Apple, they're paying cost.
But if Spotify wanted to enable subscriptions to podcasts through the Spotify app on iOS,
they would have to give 30% of that subscription to Apple and then Spotify would have to take
their cut and then whatever's left would go to the podcaster and it's literally not tenable.
But because Apple owns the platform and Apple owns the payment process and Apple has the
customer by the balls, they can offer a competing service at a lower cost than anyone else on
the platform can.
And ultimately, I think that kind of combination of an issue is going to be problematic at
least for them.
Right.
But asking Apple not to use their insane platform control in a monopolistic way is like asking
my dog if I drop a steak on the floor not to eat it.
Yeah.
I mean, they built the platform, they built the app store and they built the payment information
and they got the customer to put their payment information into that platform.
Right.
Or it's like if you and I are in Colorado and we're at System76 and I'm drinking, asking
me not to buy five or six Thalios, it's going to happen, right?
So fighting me is only going to create a scene and that's what Epic's doing.
They're fighting Apple.
Apple's like, until someone stops us, until the farmer gets a rifle out and puts barbed
wire around the chicken coop, we're wolves, man.
We're eating all the chickens.
I don't know what to tell you.
Epic seems to be going for a bit of an emotional appeal, sort of like look at what's happening
here and Apple's kind of going for more of a just the facts kind of approach.
I'm sorry to gender.
I'm sorry for this.
But Chris, you and I were both boys in high school once.
Yeah, as far as I know.
Is it not true that the bigger, stronger boys tend to push around, dare I say, use their
better position against the weaker, nerdier boys?
I think you could even take the analogy even further.
Apple isn't a high school student.
Apple is the high school.
Apple is the administrative staff of a high school.
Oh, yeah.
And if the high school wants to sell cookies in the cafeteria, they're going to have a
monopoly on the cookie market in the cafeteria.
Yeah, it's why a Coca Cola in my high school cost weirdly like 350.
Yeah.
And why we have like these ginormous chocolate chip cookies that were clearly unhealthy for
teenagers to be eating the size of my face.
Why are you selling me soda at a 300% markup?
Oh, you need money.
Got it.
Yeah.
I wonder.
We'll see.
There's been a lot of little juicy things here and there coming up.
But ultimately, I love that apparently the epics lawyers epics lawyers are listening
to the Coderadio program because it was about six months ago that I suggested that Apple
should just do a gatekeeper style third party loading where you plug the phone in, it mounts
under finder.
Never gonna happen.
I know.
Never, ever gonna happen.
That's all it would take, though.
That's all it would take.
Best case scenario, you can use a different payment form in your apps.
That would be good, too.
That really that really would that would really be good.
And then Apple's going to trot out every horror story of some some group getting ripped off
and you know, they're going to do it.
Before we go, I wanted to just chat really quickly about remote work because it's just
been an ongoing topic for us.
And there was an article about the 10 best practices for remote software engineering.
You know, one of these standard, you know, things that we'll see from time to time.
And it's like, number one, work on things you care about.
Number two, define goals for yourself, that kind of stuff.
Right.
And what I found fascinating, we'll have a link to this in the show notes, is the hacker
news comments that if you read these from the perspective of a boss or manager should
scare you shitless from ever employing remote workers.
Like here's an example from someone from 14 days ago said, I stopped being able to get
work done at all when they transitioned to work from home.
It gradually tipped me into a low self esteem death spiral.
I tried lots of different approaches to fix it.
More accountability with my manager, new medication, more regular exercise, therapy, a bit of disability
leave.
I even moved to a bigger apartment where I could have my own office, but nothing got
me past my block.
I quit my job.
I spent six months studying and interviewing aggressively and got hired at a higher level
position at a different company.
Somebody responds, I'm in the same boat right now and goes on and on about how they just
can't get any work done.
More people.
In fact, hundreds of people in this hacker news thread, a lot of them complain about
ADHD, official diagnosis, my kids have it.
If something's interesting, I can focus, but when I work from home, remote work is the
worst for me.
Staying on task is a nightmare, this person says.
I've tried medication.
I was on Adderall for a while, but it just doesn't work for me.
When I get blocked, things are boring and it's painful.
I can't even function.
I've tried to stimulate myself.
I've tried to change my focus, but I get so sleepy and my work is absolute crap.
These are all people and I mean, Mike, you can see the link in the show notes.
This thing's full of hundreds of comments, 200 comments from people talking about how
they just can't function at home, about how they're struggling to get anything done.
Some of them are in very dark places and I feel like there is this dirty side to work
from home and homework and remote workers where it truly does not work for some individuals.
This last year and change, people that maybe didn't work so well for were forced into doing
and now we're starting to see more of those accounts because it's not people that were
electing to work from home necessarily, but had to now.
What I am seeing here is a clear sign to me that remote workers could be a huge risk and
that you have to pick very carefully for the right personality type to work in isolation
like that because this thread is full of misery.
So definitely working from home has been more challenging than it used to be for sure.
To the point of I've had to actually hire some childcare to get some crap in order.
When you sent me the link, let's just go through my mental state here.
I thought I was just going to dunk on a bunch of babies whining, but I kind of felt there
were pain.
I don't have any of those diagnosed ADHD and God bless people who do, but I also have a
very recent five-year-old, he just turned five actually a couple of weeks ago.
He sees Visual Studio, he sees Ruby Mine and PyCharm and what he sees is pretty colors
and why can't I do some?
Yeah, sure.
So that's tough.
I find myself working a lot of odd hours.
I find myself now that I have childcare kind of working from home in the mornings when
he's at school, but more and more, it's just easier to take the X1 or the MacBook, whichever
I'm working on that day or even the Lemur if I'm working on that to like not Starbucks,
but we have a local coffee shop that no one would care about if they didn't live in Lithia.
But it's tough.
I think part of it is the lack of childcare options and I know this is going to become
dad or radio if we don't stop soon, but that has been for me personally, tremendously disruptive
because all aftercare was canceled and I also went through a major life change in this last
period that made my home-bound childcare option did not work anymore.
Yeah, our kids were out of school for a huge chunk of time and there was a lot of juggling.
I totally also was going to dunk on all these people and then as I started reading, I understand
because it's even sometimes harder when you're self-employed because you got to kind of wake
up in the morning and you got to get stuff done, but nobody's making you do it.
And if you lose track of something, nobody's going to make sure that you didn't drop the
ball on something.
And so it makes tracking the details of what you're doing necessary and it makes self-motivation
necessary, which can be very hard things that are in short supply when you're stressed out
and stretched too thin.
And that's why I was complaining about my scheduling snafu earlier in the show because
it's like, I've just totally put myself in this situation now.
It's just a total EMP goes off in my schedule and I completely understand and I think what
people have to do is, this sounds so cliche, but they have to come up with a system.
They have to hold themselves accountable to come up with a system and a structure that
works for themselves because nobody else is going to create it.
And it's sink or swim sometimes and there's so many benefits to be able to work from home,
but I have absolutely found that there is some work that is just simply better done
in the office.
Absolutely.
Design, database design, I find anything where you need a chalkboard or a whiteboard.
And I will say, what was interesting to me about this article when you put it in our
Slack was I viewed this from a total like dad radio perspective, right?
Healthcare practicalities stresses you out over time, really tough.
But these folks with ADD and ADHD and there was a bunch of people with other kind of troubles.
I think there's a larger set of people than you or I have ever thought about, I can't
speak for you, but I have ever thought about that have a larger set of complications with
remote work.
I'm going to say problems, right?
They're not really problems there, they make it harder.
I don't know.
I'm hoping with the vaccine and everything, many of these go away, but you saw the thing
about Facebook, right?
They just said anybody who wants to work remotely may do so if they fill out a form and apply.
So I think this change, we've been talking about it for years, but I think the change,
this is the year of the Linux, I'm sorry, no, not that this is the year of the remote
work.
Yes, it is.
Absolutely.
There are places like Facebook that embrace it and then we'll see if they kind of pull
back like we've seen some shops do in the past or if they'll find a balance.
And I know for myself, one of the hardest things about getting motivated when I was
working from home for a company was that white space between meetings was just such a killer
because I couldn't start anything because I had a meeting in an hour and I just got
out of a meeting or something like that, a half hour, whatever it might be, or two hours
even.
It's just you really don't want to get in the groove of something if you're going to
have to stop in an hour and 45 minutes if it takes you a half hour to 15 minutes or
whatever to get in the groove.
And that killed me.
And the way I kind of overcame that, and it's not all that surprising, is I just started
blocking out more time and started rejecting a few meetings.
And I was surprised how far I could take that, but that is not good advice necessarily.
But sometimes your own mental health is worth it and that's just something to consider.
And I'd love to know your tips and tricks for managing and mitigating this kind of
stuff out there if you've kind of tackled this and come out on the other end of this
and have some wisdom to share or have any comments or questions on anything we've talked
about or anything you want to get in the show, please go to coder.show.com and share that
with us.
We have a contact form there you can fill out and it'll get right into our inboxes.
Both of us see it and then we try to read most of them on the air or try to reply to
them directly if we can.
Also a big thank you to our Coder QA team out there.
The new Coderly is out.
You support the show by becoming a Coder QA member at coderqa.co.
You get a limited ad feed and you also get the Coderly report.
And thank you to a Cloud Guru.
Our sponsor Cloud Guru is on social media.
They're just slash a Cloud Guru just about everywhere that is a social media site.
It's really simple slash a Cloud Guru.
Mr. Dominic's on social media.
Like I've never told you that.
He's at Dumanuco and his company is at the Mad Botter Inc.
Anything else you want to mention, Mike?
Yes, I'm opening a new company.
It's called the year of the Windows 7 desktop.
Hey man, that was a classic.
Just login themes for sure.
And we're going to do everything in real basic.
All right.
Links to what we talked about today are at coder.show slash lucky413.
That's where you'll find also the contact form.
You'll find links to our RSS feeds and all that kind of stuff is over at the coder.show.
It's a website.
It has stuff on there.
You can go check it out.
And then I'd love to have you join us live.
Hang out in our chat room and watch the whole live stream.
Get the full Coder experience.
It's the Coder Happy Hour.
It starts at 5 p.m. Pacific, 8 p.m. Eastern on Mondays over at jblive.tv.
Thanks so much for joining us on this week's episode of the Coder Radio Program and we'll
see you right back here next week.
