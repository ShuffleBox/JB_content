WEBVTT

00:00.000 --> 00:07.000
This is Koto Radio, episode 374 for September 9th, 2019.

00:31.000 --> 00:36.000
Hello, and welcome to Koto Radio, Jupiter Broadcasting's weekly talk show,

00:36.000 --> 00:42.000
taking a pragmatic look at the art and business of software development and related technologies.

00:42.000 --> 00:46.000
Sometimes it's just all about the related technologies, but you know what? Those are important.

00:46.000 --> 00:49.000
So important, well, I'm going to need some help.

00:49.000 --> 00:56.000
I'm Wes, of course, and I'm joined by our favorite rampaging Rubyist, Mr. Michael Dominick.

00:56.000 --> 00:57.000
Welcome back to the show, Mike.

00:57.000 --> 00:59.000
Hello, Wes. How are you?

00:59.000 --> 01:02.000
Oh, wonderful. Nice to be connected with you.

01:02.000 --> 01:07.000
There's a lot going on out in the software development ecosystem that we find ourselves in,

01:07.000 --> 01:10.000
so we better get on with our show today.

01:10.000 --> 01:13.000
I'd like to start things off with like a little correction, because you know what?

01:13.000 --> 01:19.000
We're here every week live spewing out our opinions, and oftentimes we get something wrong,

01:19.000 --> 01:22.000
either just totally by mistake or the wrong word comes out.

01:22.000 --> 01:27.000
So last week, we may have implied that the new macOS shell was going to be Phish,

01:27.000 --> 01:29.000
and I think we both wish that was true.

01:29.000 --> 01:32.000
I know I do, but no.

01:32.000 --> 01:36.000
Some very wise people gave us some feedback over at coderradio.reddit.com,

01:36.000 --> 01:42.000
and of course, as we've previously talked about and should well have known, that shell is ZSH.

01:42.000 --> 01:44.000
Yes, it is a Z shell. That's my bad.

01:44.000 --> 01:49.000
I just love Phish shells so much, I thought my dreams were coming true.

01:49.000 --> 01:50.000
Well, we can hope.

01:50.000 --> 01:54.000
And of course, if you'd like Phish on macOS, well, that's easily done.

01:54.000 --> 01:56.000
How do you usually install it?

01:56.000 --> 01:58.000
Is that from brew or elsewhere?

01:58.000 --> 01:59.000
Yeah, just brew.

01:59.000 --> 02:00.000
Easy.

02:00.000 --> 02:04.000
All right, well, let's hit a few more feedback items while we're here.

02:04.000 --> 02:07.000
Just a quick one from Juni.

02:07.000 --> 02:10.000
What if Perl 6?

02:10.000 --> 02:12.000
Last episode, you guys got on talking about shell scripting,

02:12.000 --> 02:15.000
interpreted languages, REPLs, and command line interfaces,

02:15.000 --> 02:20.000
and it really just made me think more about Perl 6.

02:20.000 --> 02:23.000
It's Lispier, it's got more metaprogramming and more of a focus on a REPL,

02:23.000 --> 02:26.000
and much more modern than Perl 5.

02:26.000 --> 02:29.000
After three to four years, it hasn't seen the light of day, though.

02:29.000 --> 02:31.000
Would you find it useful?

02:31.000 --> 02:35.000
Like a Python alternative for shorter but maybe more complicated scripts?

02:35.000 --> 02:37.000
Thanks for your opinion.

02:37.000 --> 02:38.000
So what about you, Mike?

02:38.000 --> 02:41.000
You know, I don't think we've talked much about Perl at all,

02:41.000 --> 02:45.000
besides, you know, maybe the odd joke or two that always ends up sneaking in.

02:45.000 --> 02:47.000
I don't think we have either, and we've been doing the show a long time.

02:47.000 --> 02:50.000
I mean, yeah, Perl is a language that has been around for a long time

02:50.000 --> 02:52.000
that I can tell you I have never used.

02:52.000 --> 02:54.000
What about you, Wes?

02:54.000 --> 02:57.000
Oh, no, I've used Perl 5 far more than I'd care to.

02:57.000 --> 02:59.000
There's a lot to like about it, honestly.

02:59.000 --> 03:01.000
There's a lot of really neat things, a lot of good Lisp influence.

03:01.000 --> 03:04.000
I think it's an interesting language.

03:04.000 --> 03:09.000
It just fell into a kind of strange niche where it was used in very clever ways,

03:09.000 --> 03:12.000
and there's so many different ways to say things, at least in Perl 5.

03:12.000 --> 03:15.000
It can be pretty hard, whereas it's easy to see a Python script

03:15.000 --> 03:17.000
and pick your way through that.

03:17.000 --> 03:20.000
A lot more complicated if you're not well acquainted with Perl.

03:20.000 --> 03:22.000
Perl 6, though, is kind of an interesting case.

03:22.000 --> 03:25.000
I've not actually played with it, and I think that's unfortunately true

03:25.000 --> 03:28.000
of many people who'd previously used some Perl 5,

03:28.000 --> 03:32.000
because it's just a very different language with the same name.

03:32.000 --> 03:36.000
Now, obviously, it's a big version change, but I don't know.

03:36.000 --> 03:38.000
I mean, you know my proclivities for name changes,

03:38.000 --> 03:41.000
but it seems like there's enough novelty in there.

03:41.000 --> 03:43.000
There's interesting stuff.

03:43.000 --> 03:46.000
It deserves consideration probably, at least as much as any random language does,

03:46.000 --> 03:49.000
and hasn't really seen that just because it's not exciting.

03:49.000 --> 03:52.000
It doesn't seem different enough maybe, or people just aren't interested

03:52.000 --> 03:54.000
because it's still got that Perl nomiker.

03:54.000 --> 03:56.000
And it's tough today, too, because I feel like we're coming out

03:56.000 --> 03:58.000
with like five languages a week now.

03:58.000 --> 04:00.000
Yes, and many of them have big corporate back-end, right?

04:00.000 --> 04:04.000
So this is kind of more of an old-school, open-source style language.

04:04.000 --> 04:07.000
And as we've seen less and less sort of, you know, like sysadmin stuff,

04:07.000 --> 04:09.000
people writing these quick little shell scripts,

04:09.000 --> 04:11.000
not in like a bigger language.

04:11.000 --> 04:13.000
Well, it's a different time.

04:13.000 --> 04:15.000
That it is.

04:15.000 --> 04:17.000
Here's something for you, Mike.

04:17.000 --> 04:19.000
Actually, something for me, too, of course.

04:19.000 --> 04:22.000
And that's some feedback from our friend Nuclear Nick,

04:22.000 --> 04:24.000
who's writing to us about Pry.

04:24.000 --> 04:28.000
In a previous episode, I was amazed to hear that Mike had never used Pry before.

04:28.000 --> 04:32.000
It's one of the first things I show off to people when introducing them to Ruby.

04:32.000 --> 04:34.000
And then you guys can go find it in the show notes.

04:34.000 --> 04:38.000
He's got a great little example of how you can use things like CD and LS

04:38.000 --> 04:41.000
and all the little affordances that are available in Pry,

04:41.000 --> 04:43.000
just to make it a little bit easier as you're exploring

04:43.000 --> 04:46.000
and trying to learn a new language.

04:46.000 --> 04:47.000
So what do you think, Mike?

04:47.000 --> 04:48.000
Are you willing to give it a try?

04:48.000 --> 04:50.000
I mean, just to gem and stall away.

04:50.000 --> 04:53.000
Yeah, I actually have to give that a shot.

04:53.000 --> 04:54.000
He's absolutely correct.

04:54.000 --> 04:56.000
I have not used it.

04:56.000 --> 04:58.000
I still have not used it, but you know what?

04:58.000 --> 05:01.000
I'll make it my homework for this week to give Pry a look.

05:01.000 --> 05:03.000
And if not, I'm sure more people will write in

05:03.000 --> 05:05.000
and we'll just have to keep shaming you right here on the show.

05:05.000 --> 05:10.000
Listen, just like Game of Thrones, just go shame, shame.

05:10.000 --> 05:11.000
You'll get there eventually.

05:11.000 --> 05:14.000
All right, well, here's something that I'm curious about your input on.

05:14.000 --> 05:17.000
That's our last little feedback item today from Justin,

05:17.000 --> 05:20.000
and he writes to us about learning web development.

05:20.000 --> 05:21.000
Hey, guys.

05:21.000 --> 05:25.000
I'm currently a senior at Purdue studying cybersecurity and web development.

05:25.000 --> 05:28.000
I'm in a weird place, though, because with web development,

05:28.000 --> 05:30.000
I didn't start in this major.

05:30.000 --> 05:32.000
I've just sort of jumped in now as a senior,

05:32.000 --> 05:36.000
and I don't have the past three years of classes and background.

05:36.000 --> 05:39.000
Instead, I learned all about IT and systems administration.

05:39.000 --> 05:42.000
Want a new Bantu box set up as a Kubernetes master with 20 nodes

05:42.000 --> 05:45.000
and your services configured, load balanced, and automatically backed up?

05:45.000 --> 05:46.000
Say no more.

05:46.000 --> 05:47.000
I got that.

05:47.000 --> 05:52.000
But want a three-page responsive website about your dog built with Bootstrap?

05:52.000 --> 05:55.000
That I can't do.

05:55.000 --> 05:58.000
I feel woefully unready, and I was wondering if either of you

05:58.000 --> 06:02.000
had suggestions for structured content around web dev design,

06:02.000 --> 06:04.000
things I could use to augment my learning.

06:04.000 --> 06:06.000
Thanks a bunch.

06:06.000 --> 06:08.000
Yeah, that's a really interesting question,

06:08.000 --> 06:11.000
and every once in a while we get a form of this question.

06:11.000 --> 06:15.000
I have to say, if you have this IT background, this IT administration,

06:15.000 --> 06:18.000
this kind of DevOps-y background, that's great, right?

06:18.000 --> 06:23.000
Everybody's looking for that guy who can do web dev plus DevOps.

06:23.000 --> 06:26.000
In terms of structured courses, there's obviously the Linux Academy stuff.

06:26.000 --> 06:29.000
It is a little more on that IT administration pathway.

06:29.000 --> 06:32.000
I think that's a fair characterization.

06:32.000 --> 06:34.000
At least most of the content.

06:34.000 --> 06:35.000
Yeah.

06:35.000 --> 06:38.000
I used to recommend, when we got this question years ago, Code School.

06:38.000 --> 06:41.000
They had a, particularly for front-end web development,

06:41.000 --> 06:46.000
they had a really good, I think they called it like Pathways of JavaScript.

06:46.000 --> 06:49.000
Unfortunately, when they got purchased by Pluralsight,

06:49.000 --> 06:52.000
they actually kind of shut down most of that style of content,

06:52.000 --> 06:54.000
which was interesting.

06:54.000 --> 07:01.000
I don't know of a structured class or format that I would recommend now.

07:01.000 --> 07:03.000
There's obviously Code Academy.

07:03.000 --> 07:05.000
There's boot camps, but then you have to pay,

07:05.000 --> 07:07.000
and you're just getting out of school.

07:07.000 --> 07:10.000
I would maybe look at Code Academy.

07:10.000 --> 07:13.000
In fact, if you do, I would encourage you to write back in,

07:13.000 --> 07:16.000
unless Wes has the silver bullet.

07:16.000 --> 07:18.000
No, unfortunately I don't.

07:18.000 --> 07:20.000
It can be one of those frustrating things,

07:20.000 --> 07:22.000
especially in web development where it moves so fast.

07:22.000 --> 07:25.000
There's plenty of outdated CSS and JavaScript tutorials out there,

07:25.000 --> 07:27.000
but that's probably not what you want.

07:27.000 --> 07:30.000
It's especially difficult when you're new and don't know how to filter

07:30.000 --> 07:34.000
what's good or old or outdated information just to find the best sources.

07:34.000 --> 07:37.000
So unfortunately, no, I don't have a super solid answer,

07:37.000 --> 07:40.000
but maybe our community can help.

07:40.000 --> 07:42.000
If you have any favorite web development courses,

07:42.000 --> 07:44.000
well, please do let us know and we'll pass it along,

07:44.000 --> 07:47.000
coder.show slash contact.

07:47.000 --> 07:49.000
I do like your point there, Mike, though.

07:49.000 --> 07:53.000
Having that IT background, that is going to be a huge plus,

07:53.000 --> 07:56.000
and you're probably just going to have to struggle through some things,

07:56.000 --> 07:58.000
keep playing with the web tech,

07:58.000 --> 08:00.000
and eventually you'll have enough of it under your belt

08:00.000 --> 08:02.000
that the rest will start to come easier.

08:02.000 --> 08:04.000
Your point, too, this front-end,

08:04.000 --> 08:07.000
particularly the front-end JavaScript-y framework stuff,

08:07.000 --> 08:11.000
is so aggressive with how quickly they're moving.

08:11.000 --> 08:16.000
I would rather be starting from his position of knowing IT administration

08:16.000 --> 08:18.000
and DevOps, at least to a point,

08:18.000 --> 08:20.000
if someone who studied it in school,

08:20.000 --> 08:22.000
because you're going to be relearning web technology.

08:22.000 --> 08:25.000
It's like our story coming up about TypeScript, right?

08:25.000 --> 08:27.000
Yes, exactly. That's key.

08:27.000 --> 08:29.000
You're going to have to relearn.

08:29.000 --> 08:31.000
It sounds like you've already got some good skills about learning to learn,

08:31.000 --> 08:33.000
being able to learn, so pick some stuff.

08:33.000 --> 08:35.000
If you can find some good tutorials,

08:35.000 --> 08:38.000
I would worry maybe a little bit less just right now

08:38.000 --> 08:40.000
about if it's exactly the best stack or tech,

08:40.000 --> 08:43.000
and once you've kind of got all the fundamentals done,

08:43.000 --> 08:46.000
you've done it once, it makes it a lot easier to jump ship.

08:46.000 --> 08:49.000
Speaking of TypeScript, nothing too deep here,

08:49.000 --> 08:54.000
but I just saw an interesting GitHub issue filed by Google,

08:54.000 --> 08:56.000
and I think this is kind of a fun case study

08:56.000 --> 09:00.000
of two giant organizations collaborating on open source

09:00.000 --> 09:03.000
and working together out in the open.

09:03.000 --> 09:07.000
So this is Google feedback on TypeScript 3.5.

09:07.000 --> 09:10.000
We recently upgraded Google to use TypeScript 3.5,

09:10.000 --> 09:12.000
and here's some feedback.

09:12.000 --> 09:14.000
Now, for background, they write,

09:14.000 --> 09:18.000
recall that Google is a mono repo of billions of lines of code.

09:18.000 --> 09:20.000
We use a single version of TypeScript

09:20.000 --> 09:23.000
and a single set of compiler flags across all teams

09:23.000 --> 09:26.000
and upgrade these simultaneously for everyone.

09:26.000 --> 09:27.000
So, oof.

09:27.000 --> 09:28.000
Nightmareland.

09:28.000 --> 09:29.000
That's a big undertaking already.

09:29.000 --> 09:30.000
Yeah.

09:30.000 --> 09:32.000
So we know and expect every TypeScript upgrade

09:32.000 --> 09:34.000
to involve some work, and, you know, honestly,

09:34.000 --> 09:36.000
improvements to the standard library are expected

09:36.000 --> 09:38.000
and welcomed by us,

09:38.000 --> 09:40.000
even though they often mean removing similar

09:40.000 --> 09:43.000
but incompatible things we have in our own code.

09:43.000 --> 09:47.000
However, TypeScript 3.5 was a lot more work for us

09:47.000 --> 09:49.000
than other recent upgrades.

09:49.000 --> 09:51.000
There were three main changes in 3.5

09:51.000 --> 09:53.000
that made it especially painful,

09:53.000 --> 09:55.000
and we believe most of these changes were intentional

09:55.000 --> 09:57.000
and intended to improve type checking,

09:57.000 --> 09:59.000
but we also believe the TypeScript team understands

09:59.000 --> 10:01.000
that type checking is always just a trade-off

10:01.000 --> 10:03.000
between safety and ergonomics,

10:03.000 --> 10:05.000
which that's just an interesting observation

10:05.000 --> 10:07.000
that doesn't always get made.

10:07.000 --> 10:09.000
So if you're interested, if you're a TypeScript user,

10:09.000 --> 10:11.000
I definitely recommend kind of just checking this out.

10:11.000 --> 10:13.000
It's interesting as an insight into, you know,

10:13.000 --> 10:15.000
how Google used this tech

10:15.000 --> 10:17.000
and just some of the back and forth between people

10:17.000 --> 10:19.000
from both organizations, you know,

10:19.000 --> 10:21.000
operating politely, nicely, productively.

10:21.000 --> 10:23.000
There's just a lot of, like, polite language here

10:23.000 --> 10:25.000
that you wouldn't even have to be necessarily

10:25.000 --> 10:27.000
to phrase it this way,

10:27.000 --> 10:29.000
but, you know, there's a breaking change,

10:29.000 --> 10:31.000
and they write,

10:31.000 --> 10:33.000
historically, when TypeScript has introduced

10:33.000 --> 10:35.000
type system changes like this, they were behind a flag.

10:35.000 --> 10:37.000
Suggestion, using a flag here

10:37.000 --> 10:39.000
would have allowed us to adapt to this change

10:39.000 --> 10:41.000
separately from the other breaking changes in 3.5.

10:41.000 --> 10:43.000
So there's no, you know, it's not like a bunch of blame.

10:43.000 --> 10:45.000
It's not being upset.

10:45.000 --> 10:47.000
It's all just very well articulated.

10:47.000 --> 10:49.000
Yeah, I mean, this is really the full-on

10:49.000 --> 10:51.000
open source dream here, right?

10:51.000 --> 10:53.000
And also, what happened to Dart?

10:53.000 --> 10:55.000
What happened to Dart?

10:55.000 --> 10:57.000
Oh, boy, that's an interesting question.

10:57.000 --> 10:59.000
That jumped right out at me when you put this

10:59.000 --> 11:01.000
one on the dock. I was like, huh.

11:01.000 --> 11:03.000
Must suck to be on the Dart team.

11:03.000 --> 11:05.000
I mean, there's so much going on in that space.

11:05.000 --> 11:07.000
And obviously, Google is

11:07.000 --> 11:09.000
a giant organization with lots of projects

11:09.000 --> 11:11.000
underway. Well, we should give the TypeScript

11:11.000 --> 11:13.000
team credit, right? They have,

11:13.000 --> 11:15.000
of all the, let's say,

11:15.000 --> 11:17.000
pseudo-JavaScript-y languages, CoffeeScript,

11:17.000 --> 11:19.000
Dart, TypeScript, we could keep

11:19.000 --> 11:21.000
going, but why?

11:21.000 --> 11:23.000
I think TypeScript has, I don't want to say

11:23.000 --> 11:25.000
it's become the standard if you're not using

11:25.000 --> 11:27.000
straight JavaScript, but

11:27.000 --> 11:29.000
I think it's, I wonder how you,

11:29.000 --> 11:31.000
what you're seeing, but what I'm seeing when I'm looking at

11:31.000 --> 11:33.000
people who are looking to employ

11:33.000 --> 11:35.000
people, people looking for contractors

11:35.000 --> 11:37.000
to do work, people looking to hire

11:37.000 --> 11:39.000
dev shops, if it's a front-end job,

11:39.000 --> 11:41.000
and if they're not just saying, hey, we need

11:41.000 --> 11:43.000
a web job done,

11:43.000 --> 11:45.000
they're asking for TypeScript specifically.

11:45.000 --> 11:47.000
Yeah, and I mean, I think

11:47.000 --> 11:49.000
it's becoming especially popular

11:49.000 --> 11:51.000
in the cases kind of that it was designed

11:51.000 --> 11:53.000
for, right? And that's big, large organizations,

11:53.000 --> 11:55.000
people like Microsoft and Google,

11:55.000 --> 11:57.000
who have a lot of engineers working on lots of

11:57.000 --> 11:59.000
projects and find that

11:59.000 --> 12:01.000
some of the additional structure and

12:01.000 --> 12:03.000
compile time checking provided by TypeScript

12:03.000 --> 12:05.000
is really helpful. Google's employee

12:05.000 --> 12:07.000
here says, I'd like to emphasize that

12:07.000 --> 12:09.000
we are very happy with TypeScript in

12:09.000 --> 12:11.000
general, and they're just hopeful that the feedback

12:11.000 --> 12:13.000
helps make it better. But you're right, I mean

12:13.000 --> 12:15.000
TypeScript has become, maybe

12:15.000 --> 12:17.000
not quite de facto, but

12:17.000 --> 12:19.000
something pretty close. And

12:19.000 --> 12:21.000
now with RMS talking at Microsoft

12:21.000 --> 12:23.000
and Google and Microsoft

12:23.000 --> 12:25.000
collaborating on GitHub together,

12:25.000 --> 12:27.000
I think we have entered the Kumbaya

12:27.000 --> 12:29.000
hippie age. Well, we can

12:29.000 --> 12:31.000
only hope, you know, hey,

12:31.000 --> 12:33.000
open source benefits everyone. That's right, keep it

12:33.000 --> 12:35.000
free. Unless, of course, you're on the App Store.

12:35.000 --> 12:37.000
Boom. You pointed

12:37.000 --> 12:39.000
at us this week to some

12:39.000 --> 12:41.000
interesting stories actually coming out of multiple outlets

12:41.000 --> 12:43.000
highlighting something you've been talking

12:43.000 --> 12:45.000
about on the show for literally

12:45.000 --> 12:47.000
years, Mike.

12:47.000 --> 12:49.000
And that's how Apple,

12:49.000 --> 12:51.000
what Apple does with competitor apps.

12:51.000 --> 12:53.000
Apple does something what they

12:53.000 --> 12:55.000
call Sherlocking, which has nothing to do with

12:55.000 --> 12:57.000
Benedict Cumberbatch or

12:57.000 --> 12:59.000
21B Baker Street, and has

12:59.000 --> 13:01.000
everything to do with an app that was called Sherlock,

13:01.000 --> 13:03.000
where they simply implemented

13:03.000 --> 13:05.000
its functionality in an old version. I think it was

13:05.000 --> 13:07.000
like Mac OS. Higer?

13:07.000 --> 13:09.000
Right, okay, so Sherlock

13:09.000 --> 13:11.000
was a third party app that you could

13:11.000 --> 13:13.000
use to go find stuff on your file

13:13.000 --> 13:15.000
system, right, or integrate with apps and stuff.

13:15.000 --> 13:17.000
Yeah, like Spotlight if you're a Mac user,

13:17.000 --> 13:19.000
right? Right.

13:19.000 --> 13:21.000
And they've continued to do this.

13:21.000 --> 13:23.000
They've kind of always done this, even back in like the

13:23.000 --> 13:25.000
Mac OS 9 days.

13:25.000 --> 13:27.000
It's one of these topics that

13:27.000 --> 13:29.000
I wanted to put on the show out of

13:29.000 --> 13:31.000
pure spite, because for years

13:31.000 --> 13:33.000
you would get feedback

13:33.000 --> 13:35.000
back in the bad old days when it was just

13:35.000 --> 13:37.000
Chris and I before you

13:37.000 --> 13:39.000
joined us with your radiance.

13:39.000 --> 13:41.000
I interloped, you know. No,

13:41.000 --> 13:43.000
you were like an angel descending.

13:43.000 --> 13:45.000
I want everybody to know that Wes

13:45.000 --> 13:47.000
is angelic.

13:47.000 --> 13:49.000
You have to be divine to

13:49.000 --> 13:51.000
be able to understand Clojure.

13:51.000 --> 13:53.000
I don't know about that, but I

13:53.000 --> 13:55.000
appreciate the compliment. Yeah, so Apple

13:55.000 --> 13:57.000
is like hyper aggressive at basically

13:57.000 --> 13:59.000
and I'm not going to do the whole lecture I used to,

13:59.000 --> 14:01.000
but commoditizing their compliments, right?

14:01.000 --> 14:03.000
Basically, there's a set

14:03.000 --> 14:05.000
amount of value per user that is

14:05.000 --> 14:07.000
available per iPhone. Apple makes sure

14:07.000 --> 14:09.000
they get the most of it. They aggressively

14:09.000 --> 14:11.000
drive down software prices.

14:11.000 --> 14:13.000
And if there is an app

14:13.000 --> 14:15.000
that is effectively a de facto standard

14:15.000 --> 14:17.000
for iOS or

14:17.000 --> 14:19.000
even Mac OS, they will just

14:19.000 --> 14:21.000
eventually implement that as part of the OS.

14:21.000 --> 14:23.000
Now you could argue, well, that's a better user

14:23.000 --> 14:25.000
experience. Maybe it is, maybe it isn't, but they have

14:25.000 --> 14:27.000
not been shy about just

14:27.000 --> 14:29.000
putting people out of business.

14:29.000 --> 14:31.000
And giving that iOS, particularly

14:31.000 --> 14:33.000
for all those years of mobile,

14:33.000 --> 14:35.000
was really the only platform

14:35.000 --> 14:37.000
that made any money for independent

14:37.000 --> 14:39.000
developers. Right, I mean, for a long time

14:39.000 --> 14:41.000
there had been, that had kind of been the success story,

14:41.000 --> 14:43.000
right? Here is the platform you can target

14:43.000 --> 14:45.000
and because in part of some of the things Apple

14:45.000 --> 14:47.000
has done to make it that way,

14:47.000 --> 14:49.000
it was a profitable marketplace, at least for a

14:49.000 --> 14:51.000
time. I think the best case is

14:51.000 --> 14:53.000
not Apple straight up Sherlocking

14:53.000 --> 14:55.000
your app, which does happen, but that has been

14:55.000 --> 14:57.000
happening less and less.

14:57.000 --> 14:59.000
But how about like if you're Spotify and they just

14:59.000 --> 15:01.000
make it, you know, financially

15:01.000 --> 15:03.000
disadvantageous and technically

15:03.000 --> 15:05.000
disadvantageous for users to

15:05.000 --> 15:07.000
use you as their preferred service

15:07.000 --> 15:09.000
over Apple's competitive service.

15:09.000 --> 15:11.000
This is

15:11.000 --> 15:13.000
going to be a huge deal as

15:13.000 --> 15:15.000
we go into more and more automated

15:15.000 --> 15:17.000
voice technologies where you don't

15:17.000 --> 15:19.000
have just like, you know, where it's like

15:19.000 --> 15:21.000
you know, Miss

15:21.000 --> 15:23.000
Miss A, I hope I'm trying

15:23.000 --> 15:25.000
not to trigger people's echoes,

15:25.000 --> 15:27.000
you know, Miss Echo, Echo, do this

15:27.000 --> 15:29.000
or hey,

15:29.000 --> 15:31.000
so and so, do that.

15:31.000 --> 15:33.000
The platform vendor

15:33.000 --> 15:35.000
gets to pick what software is

15:35.000 --> 15:37.000
actually run, right? There's very

15:37.000 --> 15:39.000
important defaults there, right?

15:39.000 --> 15:41.000
And they can make it like they can allow

15:41.000 --> 15:43.000
third parties were like, I think you can do

15:43.000 --> 15:45.000
hey, so and so play something on

15:45.000 --> 15:47.000
Spotify, but

15:47.000 --> 15:49.000
that's garbage, right? That's

15:49.000 --> 15:51.000
that's not nearly as good. There's no way just to set

15:51.000 --> 15:53.000
it to Spotify.

15:53.000 --> 15:55.000
So I think this is an important

15:55.000 --> 15:57.000
story, and I definitely want to get your perspective,

15:57.000 --> 15:59.000
but my only criticism of

15:59.000 --> 16:01.000
kind of the pieces we have here is that they

16:01.000 --> 16:03.000
focus a little bit, particularly the Washington Post

16:03.000 --> 16:05.000
went a little bit too much on straight up Sherlocking,

16:05.000 --> 16:07.000
which is terrible,

16:07.000 --> 16:09.000
but it's something that's happening less and less

16:09.000 --> 16:11.000
and they really should focus more on

16:11.000 --> 16:13.000
the platform vendor giving

16:13.000 --> 16:15.000
its applications an unfair advantage.

16:15.000 --> 16:17.000
And that could be anything from

16:17.000 --> 16:19.000
not charging themselves 30% to

16:19.000 --> 16:21.000
being able to use

16:21.000 --> 16:23.000
private APIs.

16:23.000 --> 16:25.000
Right? That's a big one.

16:25.000 --> 16:27.000
There's a lot to unpack here.

16:27.000 --> 16:29.000
There's another piece we'll have linked in the show notes from

16:29.000 --> 16:31.000
the Times, and they talk a lot more

16:31.000 --> 16:33.000
about some of the search algorithm and what's

16:33.000 --> 16:35.000
going on there, how changes get made

16:35.000 --> 16:37.000
and basically, you know, the impact of the

16:37.000 --> 16:39.000
small team that makes the decisions of

16:39.000 --> 16:41.000
how that algorithm works

16:41.000 --> 16:43.000
and point out some things that have changed.

16:43.000 --> 16:45.000
Way back when in 2018, if you searched

16:45.000 --> 16:47.000
podcast, say, then you'd have

16:47.000 --> 16:49.000
to wade through like 14 Apple apps

16:49.000 --> 16:51.000
before you even found the first

16:51.000 --> 16:53.000
non-Apple app. Now that we should know

16:53.000 --> 16:55.000
that's no longer the case, but it just goes

16:55.000 --> 16:57.000
to show there's a lot

16:57.000 --> 16:59.000
of power there. Yeah, I mean, and the other thing

16:59.000 --> 17:01.000
I think we both kind of forgot. It's not just

17:01.000 --> 17:03.000
search, right? It's also app store

17:03.000 --> 17:05.000
editorial if they decide to feature you.

17:05.000 --> 17:07.000
One running story we had for a long time was

17:07.000 --> 17:09.000
we used to track

17:09.000 --> 17:11.000
ex-Apple employees going independent

17:11.000 --> 17:13.000
and how quickly

17:13.000 --> 17:15.000
they became featured, even if their apps were kind of

17:15.000 --> 17:17.000
you know, didn't do much.

17:17.000 --> 17:19.000
That is like

17:19.000 --> 17:21.000
and I'll dig it out, but from 2015

17:21.000 --> 17:23.000
there was a pretty

17:23.000 --> 17:25.000
clear analysis, I think Marco Arment, but I could

17:25.000 --> 17:27.000
be wrong, so don't hold me to that, did that of when his

17:27.000 --> 17:29.000
app was featured and when it wasn't, and just the

17:29.000 --> 17:31.000
dramatic difference in revenue.

17:31.000 --> 17:33.000
So it is a hugely

17:33.000 --> 17:35.000
controlled

17:35.000 --> 17:37.000
ecosystem

17:37.000 --> 17:39.000
to work in as an independent business

17:39.000 --> 17:41.000
and I

17:41.000 --> 17:43.000
if that

17:43.000 --> 17:45.000
is something that I think just needs to be looked

17:45.000 --> 17:47.000
at, particularly, again, like the

17:47.000 --> 17:49.000
Spotify-like cases. Yeah, and it is

17:49.000 --> 17:51.000
interesting, like you don't, there's not a lot of communication

17:51.000 --> 17:53.000
either, right? So you may be working on some

17:53.000 --> 17:55.000
app that you think will be really successful and fills a hole

17:55.000 --> 17:57.000
in the ecosystem and Apple might come out

17:57.000 --> 17:59.000
a month after you launch it and they have

17:59.000 --> 18:01.000
their better built-in platform version.

18:01.000 --> 18:03.000
Yeah, but again, right, communication is another

18:03.000 --> 18:05.000
great point. Depending on who

18:05.000 --> 18:07.000
you are, and I myself had this experience

18:07.000 --> 18:09.000
where I had clients who were very much favored

18:09.000 --> 18:11.000
because they were bigger companies and Apple wanted their

18:11.000 --> 18:13.000
apps in the store, you could actually get

18:13.000 --> 18:15.000
quite a bit of hand-holding.

18:15.000 --> 18:17.000
And like you were allowed to kind of wink, wink, nudge, nudge

18:17.000 --> 18:19.000
bounce ideas, will this be acceptable, this not.

18:19.000 --> 18:21.000
But if you're just an indie, you're

18:21.000 --> 18:23.000
a lamb amongst wolves, basically.

18:23.000 --> 18:25.000
Right, no feedback, no responses,

18:25.000 --> 18:27.000
and just submit it

18:27.000 --> 18:29.000
and find out, follow the process, Mike.

18:29.000 --> 18:31.000
Exactly, yep. Well, that's

18:31.000 --> 18:33.000
disappointing. I know we've seen lots of other complaints, you know, there's similar

18:33.000 --> 18:35.000
platform problems

18:35.000 --> 18:37.000
like in other industries, for example, Amazon,

18:37.000 --> 18:39.000
right, there's been complaints

18:39.000 --> 18:41.000
of similar behavior where they're able to use

18:41.000 --> 18:43.000
all the access and data and behind-the-scenes

18:43.000 --> 18:45.000
knowledge they have and launch their own

18:45.000 --> 18:47.000
products to compete with whatever is successful on their

18:47.000 --> 18:49.000
existing marketplace. And

18:49.000 --> 18:51.000
more and more we see that, you know, this default,

18:51.000 --> 18:53.000
this platform effect, I think it's just going to be

18:53.000 --> 18:55.000
a continued problem as we shift

18:55.000 --> 18:57.000
ever more of the things that we consume to

18:57.000 --> 18:59.000
various platforms running

18:59.000 --> 19:01.000
online. So, Wes, making

19:01.000 --> 19:03.000
you king for a day, because I'm actually curious

19:03.000 --> 19:05.000
what you think about coming this from more of a, like, Linux

19:05.000 --> 19:07.000
Fosse perspective.

19:07.000 --> 19:09.000
Do you think it should just, like, should

19:09.000 --> 19:11.000
we put on our Elizabeth Warren hat and say, if

19:11.000 --> 19:13.000
you are the platform vendor, right, if you run the

19:13.000 --> 19:15.000
App Store, maybe you're just not allowed

19:15.000 --> 19:17.000
to have your own apps? I guess that's always the

19:17.000 --> 19:19.000
question. Like, where do you put the boundary, though? Because, like, what's an

19:19.000 --> 19:21.000
app and what's part of the base OS?

19:21.000 --> 19:23.000
You're so smart, I was going to trap you.

19:23.000 --> 19:25.000
Would you mandate that, like, there's

19:25.000 --> 19:27.000
something relevant between how you ship that, right, and

19:27.000 --> 19:29.000
there's, doesn't compete in the same way because it wouldn't

19:29.000 --> 19:31.000
show up in the App Store? So, basically, like,

19:31.000 --> 19:33.000
Microsoft saying Internet Explorer is part of Windows

19:33.000 --> 19:35.000
in 1990, whatever, 1999,

19:35.000 --> 19:37.000
yeah. Yeah, right, and there's going to be a bunch of

19:37.000 --> 19:39.000
problems there, too. Well, how about, like, the

19:39.000 --> 19:41.000
mail apps and the built-in apps on the iOS

19:41.000 --> 19:43.000
are never actually deleted

19:43.000 --> 19:45.000
even if you delete them? There

19:45.000 --> 19:47.000
are some questions, but that's a great point, and, like, Siri

19:47.000 --> 19:49.000
is part of the operating system.

19:49.000 --> 19:51.000
So, would this apply to Siri's

19:51.000 --> 19:53.000
skills?

19:53.000 --> 19:55.000
I think is the correct word for the API these days.

19:55.000 --> 19:57.000
And what about something like an Alexa?

19:57.000 --> 19:59.000
Mmm. Mmm.

19:59.000 --> 20:01.000
You know, it is tricky. There's not a lot of

20:01.000 --> 20:03.000
clear answers here, unfortunately.

20:03.000 --> 20:05.000
And I realize I just triggered, like, everybody's

20:05.000 --> 20:07.000
devices. Sorry. Whoopsie.

20:07.000 --> 20:09.000
So, I don't know. I don't know that

20:09.000 --> 20:11.000
what's happening now is what we want,

20:11.000 --> 20:13.000
but it's hard to say exactly

20:13.000 --> 20:15.000
what the best way to change this would be. Maybe

20:15.000 --> 20:17.000
there would be ways to have

20:17.000 --> 20:19.000
some degree of separation, not necessarily, like,

20:19.000 --> 20:21.000
a hard ban, but

20:21.000 --> 20:23.000
ways to make it so that those apps

20:23.000 --> 20:25.000
had to follow more of the same standards.

20:25.000 --> 20:27.000
But I don't know how you would impose

20:27.000 --> 20:29.000
that in a reasonable way, either, and that's a whole

20:29.000 --> 20:31.000
other question. Yeah, so speaking

20:31.000 --> 20:33.000
of things that are going to be painful.

20:33.000 --> 20:35.000
Oh, I don't know about that, Mike.

20:35.000 --> 20:37.000
Really? Because I have a feeling we have

20:37.000 --> 20:39.000
quite a few Python 2 developers in the audience.

20:39.000 --> 20:41.000
We probably do, and

20:41.000 --> 20:43.000
they've probably seen this post

20:43.000 --> 20:45.000
over on python.org.

20:45.000 --> 20:47.000
It's all about sun setting Python

20:47.000 --> 20:49.000
2. News is in.

20:49.000 --> 20:51.000
We have decided that January 1st,

20:51.000 --> 20:53.000
2020, will be the day that

20:53.000 --> 20:55.000
we sunset Python 2.

20:55.000 --> 20:57.000
That means that we will not improve it anymore

20:57.000 --> 20:59.000
after that day, even if

20:59.000 --> 21:01.000
someone finds a security problem.

21:01.000 --> 21:03.000
You should upgrade to Python 3

21:03.000 --> 21:05.000
as soon as you can, Mike. Not a problem.

21:05.000 --> 21:07.000
I'm already on Python 3. Yeah, right.

21:07.000 --> 21:09.000
If you're starting today, just stay away from

21:09.000 --> 21:11.000
Python 2. Just don't, you know, don't touch it.

21:11.000 --> 21:13.000
Stick with Python 3. You'll be way happier.

21:13.000 --> 21:15.000
It's better. It's getting support.

21:15.000 --> 21:17.000
It's getting feature improvements,

21:17.000 --> 21:19.000
and honestly, it's become a pretty nice

21:19.000 --> 21:21.000
language. Yeah, it is actually pretty nice

21:21.000 --> 21:23.000
to work in. I mean, it lacks the elegance and grace

21:23.000 --> 21:25.000
of Ruby, but other than that,

21:25.000 --> 21:27.000
it's fine. You know, it's

21:27.000 --> 21:29.000
not a tool for someone as sophisticated

21:29.000 --> 21:31.000
as you, Mike. It's a tool for us commoners,

21:31.000 --> 21:33.000
the rest of us out there. Well, right. Like, when you write

21:33.000 --> 21:35.000
Python, you don't weep at the beauty of your

21:35.000 --> 21:37.000
code. No, I'm too busy getting stuff done.

21:37.000 --> 21:39.000
Oh, I see

21:39.000 --> 21:41.000
what you did there. No,

21:41.000 --> 21:43.000
I know you're deeper in the Pythonista

21:43.000 --> 21:45.000
land than I am. Is this like, I feel

21:45.000 --> 21:47.000
like Python 2 has been on its last leg

21:47.000 --> 21:49.000
for a very long time. Yeah, well,

21:49.000 --> 21:51.000
OK, so I like the rationale

21:51.000 --> 21:53.000
here. Why are we doing this? We need

21:53.000 --> 21:55.000
to sunset Python 2 so we can help

21:55.000 --> 21:57.000
Python users. All right. I mean,

21:57.000 --> 21:59.000
that's a I like the sounds of that.

21:59.000 --> 22:01.000
We released Python 2 in

22:01.000 --> 22:03.000
2000, the year 2000.

22:03.000 --> 22:05.000
We realized a few years later

22:05.000 --> 22:07.000
that we needed to make big changes

22:07.000 --> 22:09.000
to improve Python. So in 2006,

22:09.000 --> 22:11.000
we started Python 3.

22:11.000 --> 22:13.000
Many people read most

22:13.000 --> 22:15.000
did not upgrade, and we did not

22:15.000 --> 22:17.000
want to hurt them. So for many years

22:17.000 --> 22:19.000
we've kept improving and publishing

22:19.000 --> 22:21.000
both Python 2 and

22:21.000 --> 22:23.000
Python 3. But this makes

22:23.000 --> 22:25.000
it hard to improve Python.

22:25.000 --> 22:27.000
Their improvements Python 2 can't handle

22:27.000 --> 22:29.000
and we have less time to work on making

22:29.000 --> 22:31.000
Python 3 better and

22:31.000 --> 22:33.000
faster. And honestly, yeah,

22:33.000 --> 22:35.000
I think this kind of just needed to happen.

22:35.000 --> 22:37.000
It's been one of those transitions. It's been

22:37.000 --> 22:39.000
going on for so long,

22:39.000 --> 22:41.000
right? I mean, at this point over a decade

22:41.000 --> 22:43.000
and for a long time, it felt like it just wasn't

22:43.000 --> 22:45.000
going to happen. You know, like none of the big

22:45.000 --> 22:47.000
the big tech giants were really using

22:47.000 --> 22:49.000
Python 3. It didn't feel like

22:49.000 --> 22:51.000
if you were a contractor or coming into an org,

22:51.000 --> 22:53.000
you could really go to Python 3 unless you

22:53.000 --> 22:55.000
were willing to personally go

22:55.000 --> 22:57.000
spend the hours to convert their code base.

22:57.000 --> 22:59.000
And there just weren't that many

22:59.000 --> 23:01.000
big success stories. I think a lot

23:01.000 --> 23:03.000
of that's changed though. Okay, so

23:03.000 --> 23:05.000
has it changed

23:05.000 --> 23:07.000
because, and this is me straight up asking,

23:07.000 --> 23:09.000
I actually don't know the answer. Is it changed because

23:09.000 --> 23:11.000
most new platforms

23:11.000 --> 23:13.000
and new organizations are just starting with Python

23:13.000 --> 23:15.000
3 or is it changing because there's been

23:15.000 --> 23:17.000
methodologies around migrating?

23:17.000 --> 23:19.000
I think there's a lot. Yeah, you have seen more

23:19.000 --> 23:21.000
more big players make the good

23:21.000 --> 23:23.000
calls and take on that technical debt and actually

23:23.000 --> 23:25.000
push forward. And so that's meant they've had

23:25.000 --> 23:27.000
hours of their own engineers that they can help if they

23:27.000 --> 23:29.000
do use open source projects. Some

23:29.000 --> 23:31.000
of them have then contributed as well as the communities

23:31.000 --> 23:33.000
move too. So more and more of the big

23:33.000 --> 23:35.000
popular libraries

23:35.000 --> 23:37.000
that people need are either compatible

23:37.000 --> 23:39.000
with both or in some cases only Python

23:39.000 --> 23:41.000
3 now. I think also some of the

23:41.000 --> 23:43.000
you know, the conversion code has gotten a little bit

23:43.000 --> 23:45.000
smoother over the years. So there's a nice

23:45.000 --> 23:47.000
two to three sort of script out there in the library

23:47.000 --> 23:49.000
that you can use to help ease the transition.

23:49.000 --> 23:51.000
And you've just at this point

23:51.000 --> 23:53.000
you have enough

23:53.000 --> 23:55.000
people out there using it, I guess. I don't know when

23:55.000 --> 23:57.000
that tipped or how you judge.

23:57.000 --> 23:59.000
And there's still a lot of holdouts, right?

23:59.000 --> 24:01.000
There's still popular libraries that maybe haven't

24:01.000 --> 24:03.000
haven't made the jump yet.

24:03.000 --> 24:05.000
I'm curious how it plays, you know,

24:05.000 --> 24:07.000
what part it plays in the larger Python

24:07.000 --> 24:09.000
resurgence we've seen as well.

24:09.000 --> 24:11.000
Because, you know, there's a time kind of like it was thought

24:11.000 --> 24:13.000
of along with Ruby. They both had their popular

24:13.000 --> 24:15.000
web frameworks in that space and sure it was

24:15.000 --> 24:17.000
doing lots of lots of math and science

24:17.000 --> 24:19.000
stuff. But those all kind of blocked away in

24:19.000 --> 24:21.000
you know, little research labs or universities

24:21.000 --> 24:23.000
somewhere. But these

24:23.000 --> 24:25.000
days Python's huge.

24:25.000 --> 24:27.000
The Python is now an

24:27.000 --> 24:29.000
anaconda. Yeah, I think it is.

24:29.000 --> 24:31.000
The other thing you've seen a lot of

24:31.000 --> 24:33.000
just at the same time

24:33.000 --> 24:35.000
is more Python type checking,

24:35.000 --> 24:37.000
right? So I think that kind of goes

24:37.000 --> 24:39.000
hand in hand. More big organizations

24:39.000 --> 24:41.000
are realizing people like Dropbox say that

24:41.000 --> 24:43.000
all right, well, we've committed ourselves to

24:43.000 --> 24:45.000
using this library where

24:45.000 --> 24:47.000
we've got a lot of code in it and

24:47.000 --> 24:49.000
we're having problems. So

24:49.000 --> 24:51.000
Dropbox just put out a great sort of

24:51.000 --> 24:53.000
summary of their journey to type checking four

24:53.000 --> 24:55.000
million lines of Python.

24:55.000 --> 24:57.000
They're obviously a big user

24:57.000 --> 24:59.000
and as they say,

24:59.000 --> 25:01.000
the dynamic typing in Python made code

25:01.000 --> 25:03.000
needlessly hard to understand and

25:03.000 --> 25:05.000
started to seriously impact productivity.

25:05.000 --> 25:07.000
So they've started

25:07.000 --> 25:09.000
using MyPy and it's

25:09.000 --> 25:11.000
a fascinating post because it kind of

25:11.000 --> 25:13.000
tells the story from when they just

25:13.000 --> 25:15.000
started using it as sort of a research project

25:15.000 --> 25:17.000
internally. But now they

25:17.000 --> 25:19.000
write like present day type checking and type

25:19.000 --> 25:21.000
hinting is a normal thing for numerous

25:21.000 --> 25:23.000
developers not only within Dropbox

25:23.000 --> 25:25.000
but just in the wider

25:25.000 --> 25:27.000
Python community. So in some senses it almost

25:27.000 --> 25:29.000
strikes me as what's been happening to the

25:29.000 --> 25:31.000
JavaScript community where you had this old language

25:31.000 --> 25:33.000
felt stagnant and you just get

25:33.000 --> 25:35.000
enough developer mass, developer

25:35.000 --> 25:37.000
time, interest, community

25:37.000 --> 25:39.000
building and you

25:39.000 --> 25:41.000
can modernize and change things and get people to

25:41.000 --> 25:43.000
actually adopt it. I think it does help

25:43.000 --> 25:45.000
too that really they're not, Python

25:45.000 --> 25:47.000
3 and 2 aren't like super different, you know?

25:47.000 --> 25:49.000
You get a print function instead

25:49.000 --> 25:51.000
of a print statement and then most of the rest of the other

25:51.000 --> 25:53.000
stuff is just pretty much straight

25:53.000 --> 25:55.000
up improvements. I don't know,

25:55.000 --> 25:57.000
just interesting, I just remember for years reading

25:57.000 --> 25:59.000
comments like, Python 2 to 3 is

25:59.000 --> 26:01.000
an example of a transition done very poorly

26:01.000 --> 26:03.000
that you shouldn't do. Yeah, that was

26:03.000 --> 26:05.000
my impression that like they were effectively

26:05.000 --> 26:07.000
different languages at this point because my Python

26:07.000 --> 26:09.000
experience has been, can't

26:09.000 --> 26:11.000
say entirely in 3 but you know, beyond

26:11.000 --> 26:13.000
just like little scripts that

26:13.000 --> 26:15.000
I inherited on like two projects.

26:15.000 --> 26:17.000
When I'm talking about like writing

26:17.000 --> 26:19.000
full scale applications in Python, it's

26:19.000 --> 26:21.000
only been 3. It's curious

26:21.000 --> 26:23.000
to me how long this took

26:23.000 --> 26:25.000
if that makes sense, right? Like someone in the chat

26:25.000 --> 26:27.000
room mentioned it's because like there's

26:27.000 --> 26:29.000
Oracle dependencies if you're an Oracle

26:29.000 --> 26:31.000
shop. That seems weird though because wouldn't

26:31.000 --> 26:33.000
Oracle just like also want to

26:33.000 --> 26:35.000
upgrade? Or am I missing some key

26:35.000 --> 26:37.000
like technical issue

26:37.000 --> 26:39.000
between 2 and 3? Well, I mean there's always

26:39.000 --> 26:41.000
just technical debt too, right? You gotta be willing to spend

26:41.000 --> 26:43.000
the time and therefore

26:43.000 --> 26:45.000
money to convert it. So it's

26:45.000 --> 26:47.000
the business? Yeah, exactly.

26:47.000 --> 26:49.000
It's the business. The art

26:49.000 --> 26:51.000
is clear, right? You just gotta move right on.

26:51.000 --> 26:53.000
Just do the work, right? Okay.

26:53.000 --> 26:55.000
So speaking of things that

26:55.000 --> 26:57.000
aren't business. Hey, do you want to play

26:57.000 --> 26:59.000
some Final Fantasy 7 using the.NET

26:59.000 --> 27:01.000
runtime? Yeah. Yeah, I do.

27:01.000 --> 27:03.000
Of course I do. You know I like.NET, Mike.

27:03.000 --> 27:05.000
Well then do I have the GitHub for you.

27:05.000 --> 27:07.000
The project

27:07.000 --> 27:09.000
PSX, X as in Xena,

27:09.000 --> 27:11.000
is an experimental C

27:11.000 --> 27:13.000
sharp emulator. You mean

27:13.000 --> 27:15.000
it's a C sharp PlayStation emulator?

27:15.000 --> 27:17.000
That's crazy. That's crazy. Yes, because

27:17.000 --> 27:19.000
emulating C sharp would be weird. Yes.

27:19.000 --> 27:21.000
No, I like that though. Wow.

27:21.000 --> 27:23.000
This actually looks pretty cool.

27:23.000 --> 27:25.000
It's new. It's pure C sharp. So

27:25.000 --> 27:27.000
that's kind of handy if you're interested in kind

27:27.000 --> 27:29.000
of seeing how that might be done. I don't know.

27:29.000 --> 27:31.000
A little bit of F sharp could have gotten in there if you asked me,

27:31.000 --> 27:33.000
but you know. Yeah.

27:33.000 --> 27:35.000
Yeah. Well, you gotta get the core stuff written in C

27:35.000 --> 27:37.000
sharp, right? And then maybe orchestrate it later with

27:37.000 --> 27:39.000
F sharp above. Could be. Could be.

27:39.000 --> 27:41.000
This is a sign that someone had a lot of time on his hands.

27:41.000 --> 27:43.000
Honestly, I love these little projects though,

27:43.000 --> 27:45.000
because there's such a, especially

27:45.000 --> 27:47.000
with like games, you know, you have

27:47.000 --> 27:49.000
the technical, the pure technical side

27:49.000 --> 27:51.000
of having to make the, you know, make the

27:51.000 --> 27:53.000
runtime, implement everything, get it all working.

27:53.000 --> 27:55.000
But hand in hand with that, it's almost

27:55.000 --> 27:57.000
like archeology, you know, because

27:57.000 --> 27:59.000
all these consoles did things differently, sort

27:59.000 --> 28:01.000
of bespoke custom targets

28:01.000 --> 28:03.000
and hardware and architecture choices.

28:03.000 --> 28:05.000
So you also gotta go, you know,

28:05.000 --> 28:07.000
figure out what they did,

28:07.000 --> 28:09.000
work backwards, and then try to implement

28:09.000 --> 28:11.000
something that acts the same way

28:11.000 --> 28:13.000
so that the game actually works. Yeah, and

28:13.000 --> 28:15.000
it's particularly video game emulators

28:15.000 --> 28:17.000
because I didn't get

28:17.000 --> 28:19.000
to dig into this one yet, but I'm definitely going

28:19.000 --> 28:21.000
to just out of morbid curiosity.

28:21.000 --> 28:23.000
There was a story we did a couple

28:23.000 --> 28:25.000
years back about a Game Boy Color emulator, Wes.

28:25.000 --> 28:27.000
And the guys working on the

28:27.000 --> 28:29.000
emulator found the ridiculous

28:29.000 --> 28:31.000
amount of hacks that the Nintendo

28:31.000 --> 28:33.000
programmers had to do just to

28:33.000 --> 28:35.000
get a Game Boy that ran in color.

28:35.000 --> 28:37.000
Like, there is some

28:37.000 --> 28:39.000
crazy stuff going on, particularly in this

28:39.000 --> 28:41.000
you know, in that like

28:41.000 --> 28:43.000
SNES PS1 kind

28:43.000 --> 28:45.000
of generation of video game console.

28:45.000 --> 28:47.000
Because remember, they were not working with

28:47.000 --> 28:49.000
very robust systems. No,

28:49.000 --> 28:51.000
not at all. You know, one of my favorite

28:51.000 --> 28:53.000
blogs is the people behind

28:53.000 --> 28:55.000
the Dolphin GameCube emulator.

28:55.000 --> 28:57.000
Oh yeah, oh yeah. They do such

28:57.000 --> 28:59.000
good work over there, and yeah, it's the same sort of stuff.

28:59.000 --> 29:01.000
You find out the fascinating, crazy

29:01.000 --> 29:03.000
details. Like, I believe the GameCube

29:03.000 --> 29:05.000
didn't have like a floating point

29:05.000 --> 29:07.000
stuff, so a lot of the math was done just as

29:07.000 --> 29:09.000
integers, so that's like a

29:09.000 --> 29:11.000
weird thing that they have to deal with and simulate

29:11.000 --> 29:13.000
and make work all of the time. So don't

29:13.000 --> 29:15.000
do your accounting on your GameCube

29:15.000 --> 29:17.000
emulator. Yeah, maybe not, maybe not.

29:17.000 --> 29:19.000
Yeah, one of my favorite stories, and

29:19.000 --> 29:21.000
this is kind of tangential, but did you

29:21.000 --> 29:23.000
know the Dreamcast was also a Windows

29:23.000 --> 29:25.000
box? Really?

29:25.000 --> 29:27.000
No, it did not. Yeah, I think it was a

29:27.000 --> 29:29.000
Windows CE.

29:29.000 --> 29:31.000
Oh, of course. But

29:31.000 --> 29:33.000
it had two modes. It had like a Windows mode and a

29:33.000 --> 29:35.000
non-Windows mode. As one might

29:35.000 --> 29:37.000
expect, that did not go well for Sega.

29:37.000 --> 29:39.000
Oh, what a time, yeah. But the people

29:39.000 --> 29:41.000
writing the emulators have to now emulate both

29:41.000 --> 29:43.000
environments, which is super

29:43.000 --> 29:45.000
interesting. Of course.

29:45.000 --> 29:47.000
Well, it looks like they've made a good

29:47.000 --> 29:49.000
start here. Don't

29:49.000 --> 29:51.000
go using this expecting to have a great time

29:51.000 --> 29:53.000
playing games, but if you're interested

29:53.000 --> 29:55.000
in learning C Sharp, or

29:55.000 --> 29:57.000
you know, maybe trying your hand at writing

29:57.000 --> 29:59.000
an emulator if you're already experienced in C

29:59.000 --> 30:01.000
Sharp, well, go check it out.

30:01.000 --> 30:03.000
If only there were one in Rust.

30:03.000 --> 30:05.000
Ah, yes. Well, maybe we can

30:05.000 --> 30:07.000
dream, or you can start working

30:07.000 --> 30:09.000
on it, Mike. Yeah, I have all that free

30:09.000 --> 30:11.000
time, yeah. I do have something to

30:11.000 --> 30:13.000
placate you. It's not in Rust, so I

30:13.000 --> 30:15.000
know, I know, I'm sorry, but

30:15.000 --> 30:17.000
it is written in Go, and

30:17.000 --> 30:19.000
it's a pick

30:19.000 --> 30:21.000
from one of our feedback items earlier.

30:21.000 --> 30:23.000
Yeah, that's right. Nuclear

30:23.000 --> 30:25.000
Nick recommends FZF,

30:25.000 --> 30:27.000
which is a fuzzy

30:27.000 --> 30:29.000
finder, right, for your terminal. So

30:29.000 --> 30:31.000
this goes hand in hand with what we talked about last time, which is

30:31.000 --> 30:33.000
just improving your command line experience,

30:33.000 --> 30:35.000
better ways to interact with the

30:35.000 --> 30:37.000
system. So if you haven't heard of

30:37.000 --> 30:39.000
FZF, well, go

30:39.000 --> 30:41.000
check it out. It's a general purpose command line

30:41.000 --> 30:43.000
fuzzy finder. You pull it up,

30:43.000 --> 30:45.000
it has a nice little curses

30:45.000 --> 30:47.000
style interface. You start typing, and

30:47.000 --> 30:49.000
it goes out, it's indexed to your system,

30:49.000 --> 30:51.000
and immediately brings you up options

30:51.000 --> 30:53.000
of, oh yeah, well, that text

30:53.000 --> 30:55.000
is found in this file, and it's got a nice little

30:55.000 --> 30:57.000
interface too, where you can sort of move between

30:57.000 --> 30:59.000
the files, and it's got a preview pane, so I think

30:59.000 --> 31:01.000
it works especially well

31:01.000 --> 31:03.000
for people listening to this show, who might have a lot

31:03.000 --> 31:05.000
of text-based source files

31:05.000 --> 31:07.000
laying around. Yeah, I'm going to have to start

31:07.000 --> 31:09.000
using this. Yeah, I was going to say, do you use any tools

31:09.000 --> 31:11.000
like this? Because I know you spend a decent amount of

31:11.000 --> 31:13.000
time, you know, playing around in the terminal.

31:13.000 --> 31:15.000
Yeah, I spend a lot of time in the terminal. I don't, I mean,

31:15.000 --> 31:17.000
Fish shell

31:17.000 --> 31:19.000
helps a little bit, but

31:19.000 --> 31:21.000
this is definitely going to be a more robust solution, because

31:21.000 --> 31:23.000
Fish shell can do some, you know, more advanced

31:23.000 --> 31:25.000
find and search stuff. But

31:25.000 --> 31:27.000
this is like taking that, and

31:27.000 --> 31:29.000
oh, it's a Vim plugin? Yes!

31:29.000 --> 31:31.000
Now I'm just getting excited.

31:31.000 --> 31:33.000
Oh, don't you love that? You know, that

31:33.000 --> 31:35.000
makes me think, not for today's show, but maybe sometime

31:35.000 --> 31:37.000
soon we should talk a little more about editor

31:37.000 --> 31:39.000
setups, and talk a bit

31:39.000 --> 31:41.000
more about Vim plugins, and what you like to use.

31:41.000 --> 31:43.000
And how I gave up on Emacs again.

31:43.000 --> 31:45.000
And how you, okay, yeah, well, alright, we're just going to

31:45.000 --> 31:47.000
have to slot that in. I think we've

31:47.000 --> 31:49.000
packed this show with enough this time, so let's

31:49.000 --> 31:51.000
get out of here, but please do join

31:51.000 --> 31:53.000
us again for another episode of Coder Radio. We do this

31:53.000 --> 31:55.000
show live pretty much every

31:55.000 --> 31:57.000
week. Now if you want to find out what time that is,

31:57.000 --> 31:59.000
JupiterBroadcasting.com slash calendar

31:59.000 --> 32:01.000
is the easiest way.

32:01.000 --> 32:03.000
It's 12pm Pacific, but I don't know

32:03.000 --> 32:05.000
what time that is for you. You're going to have to go

32:05.000 --> 32:07.000
find out yourself.

32:07.000 --> 32:09.000
If you want to find more information about

32:09.000 --> 32:11.000
us and the show, well, Coder.show

32:11.000 --> 32:13.000
slash 374 if you'd like to find

32:13.000 --> 32:15.000
all the links of the things we talked

32:15.000 --> 32:17.000
about today. And of course, there's

32:17.000 --> 32:19.000
also ways to get in touch. Easy

32:19.000 --> 32:21.000
buttons to subscribe to our RSS feed, or

32:21.000 --> 32:23.000
find us on any of the podcast apps

32:23.000 --> 32:25.000
out there. And last but not

32:25.000 --> 32:27.000
least, stay tuned for a new

32:27.000 --> 32:29.000
show coming to the Jupiter Broadcasting Network,

32:29.000 --> 32:31.000
self-hosted.show.

32:31.000 --> 32:33.000
It launches this week.

32:33.000 --> 32:35.000
You won't want to miss it. If you want

32:35.000 --> 32:37.000
more of Mike and I, well, we're both

32:37.000 --> 32:39.000
on Twitter, of course. I'm

32:39.000 --> 32:41.000
at Wes Payne, and Mike, you're at

32:41.000 --> 32:43.000
Jumanuku. Thank you all for joining us.

32:43.000 --> 32:45.000
We'll see you right here next week.

32:45.000 --> 32:51.000
We'll see you next week.

33:15.000 --> 33:21.000
we'll see you next week.

