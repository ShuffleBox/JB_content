This is KOTORadio, episode 377 for August 31st, 2020.
Hello friends, and welcome to KOTORadio,
Jupiter Broadcasting's weekly talk show,
taking a pragmatic look at the art and business
of software development and the world of technology.
This episode is brought to you by a cloud guru.
So many career possibilities in the cloud
and so little time.
ACG's learning paths help you take the right courses
to prepare for architect developer security
and many other high paying cloud jobs.
Get hired, get certified,
and get learning with paths tailored just for you.
Acloudguru.com.
And joining me this week, as always,
is our host, the delightful and wonderful
Mr. Michael Dominick.
Hello, Mike.
Hello, Chris.
Hello.
Hello, it's fun to be doing this live again.
It's got a whole energy to it.
It's beautiful.
Yeah, also, if I make a mistake, everybody, you know.
Yes, and you can record falsettos again,
so I'm sure you're happy.
Yes, I am quite happy.
There we go.
Well, we have so much to get into.
Want to say thank you, though, to our audience
that is live watching right now,
because we didn't really know when we'd be back
when we recorded the last one,
so we just kind of tossed it out there later on,
and enough people showed up that made it worth it.
So we have about 200-ish,
240-ish people watching right now.
Hello to all of you out there on the live streams
and in the chat room.
It's good to be here,
and if you're wondering what the heck is going on,
yeah, it's back.
Your podcatcher isn't lying to you.
The show is truly back.
Acloudguru and Jupiter Broadcasting
have made the mutual decision to separate
and restore Jupiter Broadcasting independent media status.
The demerger will allow for Jupiter Broadcasting
and Acloudguru to dedicate their resources
to specializing content that they do best,
Jupiter Broadcasting in creating Linux
and open source podcast content
catered to enthusiasts and industry professionals,
and Acloudguru in creating comprehensive
and hands-on multi-cloud computing,
Linux and DevOps training for businesses and individuals.
Acloudguru and Jupiter Broadcasting
share many commonalities,
such as the passion we have and respect
for each other's missions
and the investment we've made in creating
accessible, accurate, and engaging content
that makes a difference to the audience.
We also share a belief in the importance
of giving back to the open source community.
As such, Acloudguru will continue
its support of Jupiter Broadcasting
with a sponsorship arrangement
and will continue to explore
other content collaboration opportunities
in the future.
So there's a lot to talk about today,
including tons of going on in the news,
Jupiter Broadcasting's big news.
So, Mike, I thought something
we should start with, because we're still
kind of getting the wheels back on the cart here,
is the announcement that Coder Radio
is launching a membership program.
And this one's really by the seat of our pants,
I have to be honest with you, because
some planning just
hasn't been able to take place because of the state
of the agreements that were in place
and all of that work being done.
Mike and I started talking about it this morning,
just a little bit before we started the show.
And one of the things that we want to do is
we want to kind of give you
a piece of mind that this show
is not going away again.
Because I know that it can kind of
make you a little apprehensive
if the show went away once, it could happen again.
And as somebody who is now
launching his independent business again,
I'm thinking about it very much from a, well, how do we
make it a sustainable production
so that way we don't have
that issue again? And
one of the things that
will become more apparent
is one of the ways I'll be achieving
that is by taking on sponsors.
But one of the other ways I'm doing that is for a limited
set of our shows, we're launching
membership programs. And
we don't really have some
grand offering here.
We'll have an ad-free feed that
has no ads with the exception of ones
that are contractually obligated.
And on top of that, we're
going to do something kind of fun for our members
that we're going to call the Coderly
Report, Mike? Is it the Coderly
Report? Is that what we decided to call it?
That's going to be a fun name. Coderly. Coderly, like quarterly.
Yes. Coderly. Maybe that's the way
to do it. Yeah, and this
will be a quarterly members show
that sort of review of the trends and things that
we thought mattered over the last
quarter. We'll sort of just, you know, we'll
just, Mike and I will know because when it's the end of the business
quarter, it's time to do a Coderly.
Oh god.
That's going to be embarrassing
every time.
This is going to be bad. Every time you mispronounce
it fumbling every episode.
The Coder, the Coda, the Cuda,
Cuda, it's an NVIDIA thing we're doing, right?
So we're going to make this
all available to our members
even if I can't say it right.
And there's a URL you can go to.
CoderQA.co.
CoderQA.co where we'll have a link
in the show notes. And that membership
essentially is
our hope. Our goal with it is not to
make a bunch of money. It's not to be rich
with the show. It's not even to make the
revenue of a single sponsor.
It is our hope to get enough of you
and it will take several hundred of you, but it's enough
to hopefully get enough that we
can make sure an editor can
be paid to edit and produce
the show. That the fee to host the
show can be paid. That Mike and I get
something, even if it's just beer money,
for doing the show. So that way
the show doesn't run at a loss.
Say like this week when
we have a short ACG sponsor, which you just heard
a bit ago, and that's it. No other
sponsors. This is the sponsor, essentially
the audience. And so we want to make it
a production that is sustainable. And I
know this isn't the
perfect time to be asking this, but that is
actually the very reason I am asking. Because
the podcast advertising
market is going through a
massive reduction. A long
time coming one, in my opinion, as somebody who's
been podcasting for 15 years,
I think we have seen a bubble
recently where every single company
in the world has a podcast, every individual
has a podcast, tons of sponsorships,
and with
the COVID economy,
that is falling through the floor
right now. And I want
to make sure that we have something sustainable here.
When we bring sponsors on,
those are there because I know some of you
either are not interested in a membership
or would just prefer to
support the show by engaging with
our sponsors, which is a 100%
perfectly fine way to support the show.
If a membership is not for you,
I pledge to do my best
to do good ad reads that are sponsors
that we believe in, so you're not really
losing out anything. If you prefer a show
that is ad free, that helps
support the production and keeps the show going,
we'll have an option for you. And
that'll be at CoderQA.co.
So you can become part of the Coder Radio
QA team. And that's
what we're calling our members as our QA team.
I think what we'll do is
we'll set the price at $8
a month, but I'll do the same thing that
I did for Unplugged is I'll do a founder's
discount. So it'll be promo code
founder again, and
this time, instead of giving out a 100
because they went really quick.
Founder? No, Jar Jar.
J-R, J-R? Yeah. All right.
Okay. Yeah, no, all right. You gotta keep it on
brand, right? Right. So all lowercase,
all lowercase, J-A-R,
J-A-R, and that'll drop
the membership to $6 a month indefinitely.
And I will make 200
of those available because they went so quick last
time. So 200
of the Jar Jar promo codes to
make it $6 a month.
If you can't support us, just
spread the word about the show. Maybe leave a review from
time to time if you appreciate it or
engage with one of our sponsors.
And we are absolutely grateful.
We are grateful to have you listen, and we are grateful to have you
do that. If you are in a position where
you can support us and you'd kind of like to invest
to make sure that the show continues to go.
I mean, you know, Mike and I, as long as we can make this
work, we're going to do it. Because this show
had been running since 2013,
like a clock. And so
what we want to do now is just do
that again. We just want to repeat that again, but we want
to do it in a climate that makes it sustainable.
So that is at coderqa.co.
Every time you type in Jar Jar,
we so appreciate it.
You did
just lie to them. We were running
since 2012. You are lying.
Really? I muted and I went on
to the old Reddit.
Episode 1, June 11,
2012 is when we made the announcement.
Okay. Wow. Okay.
Yeah, I think I've said 2013
before as well. Well, now I know.
I'm glad you caught me. There you go.
Well, let's get to feedback. We're going to do that towards the top
of the show for a bit here. So coderradio.show
slash contact if you want to
send us your feedback or you can hit up either one
of us on Twitter. And we got a lot
of positive feedback
regarding the relaunch of the show. Surprise, surprise.
We kind of were hoping
that would happen, I'd say. But every time it
came in, it's still really great to see it because you're like, okay,
good. It was the right choice. Yes.
This isn't an embarrassing retraction
coming up, right? Good, good, good.
Yeah, we're definitely not in that territory.
I'd say we're very safe
and far from that territory.
What was the general sense you got that
people want to see in the show? A lot, actually.
So I
mistakenly threw this on Twitter thinking
only a few people would reply. I was
wrong.
There was a lot. Now, some of it's kind of like contradictory,
like, you know, make it
serious, make it funny, have more guests,
don't have guests, right?
A surprising amount of people
are interested in like
DevOps-y stuff.
Another one that really threw me for a loop was
a lot of people asked about the macOS
ARM transition, which I was genuinely
shocked with, considered the
amount of trolling I used to get,
which makes me think, did I corrupt
a bunch of you to Mac? Is that what happens?
So, I mean,
I will probably pick up an ARM Mac at
some point because I have to support software
that I wrote. The other thing was
specific
requests for Wes, which of course,
right, and for Wes to torture
me with languages of the week. Yeah.
So, might have to change that to
month. That was rough last time. People
like that, you know, they like that, and I could
see, I also would be down for a challenge
from time to time as well. Ooh,
party time. I mean, mine probably can't be as grand,
but maybe that'd be interesting.
Just gotta print hello Jar Jar.
I think I could
manage that. Of course, it depends on what you make
me print it in, I suppose, or with.
Objective rust.
I wondered if
you saw that story.
Four people sent it to me on Twitter, and two
people emailed me on Hay. We probably dropped
it in some chat thread somewhere too, I would imagine.
Yeah, I think actually West is.
So yeah, objective rust.
It is exactly what it sounds like on the tin.
You can interface rust and objective C.
What sort of
sick masochist would have seen this and
decided to try it? I don't know.
I hope someone in our audience
and I hope they write in with like a
a breathless justification.
Even I'm like, you know, this is probably
not what you needed. Yeah, because you take
the super wild language of objective C
and then marry it to the super strict
super safe rust and you
get cognitive dissonance.
I don't know. Sadness.
It's but it's fun. It's a good idea
if I guess you have tons
of objective C code and you want to now
start coding in rust. Yeah.
Yeah, I'd love to hear somebody do that.
I don't think there's I think there's
one individual and it's the creator.
Maybe I'm wrong.
I mean, everybody does love rust right now, so
maybe I am wrong. It could be.
I think I saw a lot of people that
said, you know, they were just happy
it's back. It is interesting.
I mean, you must have saw this, too.
It's like people that somebody will say
I'd like to hear you more. I'd like to hear more
about your work set up. Like somebody specifically asked me about
like our desk setups and then somebody else
wrote it and said, you know, don't talk so much about the
desk or don't actually what they're well, I think
what they say is don't talk so much about the work stuff
or something. Right. No laptops of the. Yeah.
Yeah. Yeah. Yeah. That's what it was.
Yeah. Got a couple of those.
Yeah, that's what it was. And so you kind of
see different. I kind of thought when I saw
the desk set up when I was like, actually, that would be kind of fun because
I just got a new desk because
you know, I'm thinking more about the ergonomics
these days. So maybe in the future, maybe we'll talk about
that. I was surprised by arm transition
stuff, and I think maybe it's
because people are looking at just from a development
workstation standpoint and wondering
what's it going to be like to develop for
an x86 server running in the cloud on
an arm laptop? Yeah, I mean,
although you have to remember, we used to get a lot of like
iOS dev questions, too, right? I
think there's like a very quiet, very afraid
group of iOS
developers in the JV community.
Yeah, they're huddled with the dot net guys
kind of, you know, worried
about cannibalistic penguins.
You know, it's just
it wasn't that long ago
that what OS you ran
was super contentious. It just seems
like we got really tribalistic
with our tools. And then
I don't know if it's just 2020 in general,
but I feel like this was happening really
even back when I was on the show is
something started to change
and all these different OSes just
sort of looked like different types of tools
to me, you know, like ones
snap on and one some cheap
tool from, you know, Harbor Freight
and other ones, some super nice brand tool
that does something special but costs a ton of money.
And when I started seeing them like that, I think
that everything sort of dialed down. And I think
it wasn't just you or I that had that.
I think a lot of people in the community
began that kind of reframing
of the way they saw this stuff.
And maybe it was in part the changes
of Microsoft. Maybe it's in part Apple's
focus on mobile. So I'm
going to give some credit to VS Code here,
right? VS Code, no matter what OS
you're running on. And I know people are going to write and say, well, there
are subtle differences. Yeah, but they're
really subtle, right? A lot of developers
regardless of Mac, Windows, PC,
whatever, Linux, right?
If you're in VS Code, you're kind of in VS
Code. You're using the same plugins, using the same
tools. Your config files are exactly
the same, right? Your build files.
Yep. I don't want to swing the standard
hammer and ring the bell here, but
it's made it so if
you're on VS Code and I'm on VS Code and
I'm on Linux and you're on Mac or whatever,
we kind of have the same tool chain
now. Yes, I very
much had this realization
months ago when I was using VS Code, which
I've used a lot, but I started
using it exclusively when I was working on
Docker compose files and config files
because just the way
it displays YAML makes
it so, so simple for someone
like myself who has to edit a
YAML file once a quarter.
And so I don't spend a lot of time with
YAML and you know, it's very
specific and it's formatting and
the way Visual Studio
Codes YAML plugin renders that
just works with my brain.
And I had this realization as I'm sitting
there on my Linux box, SSHed into a
server that I'm running Docker on and I'm editing
the compose file
in VS Code, which
in the background is doing an SSH
connection to my server and editing
this test file on my server in
real time as I hit save in the editor.
And I realized at that moment
like this is 100%
parity with anything I
could do on a commercial platform. And I was on the
Linux desktop for reasons that are just
like maintenance work. I had to boot into
the spare Mac I have lying around and
it was just easier instead of setting up a new
PyCharm tool chain to test this thing in Safari
to simply just like, you know, I'm going to
pop up in code and run the flask
extension, whatever.
And I was up and running from
had it turned on this machine in
three months
to I found this
really, really, really lame bug in
Safari and was able
to document it, throw it into Trello, which is what we're
using for bug tracking these days and like
move on and get back to my lemur and fix it, right?
Trello for bug
tracking, huh? It's not ideal.
Huh? We can have a whole
torturous story about our QA
process, but I would be interested in
some tools discussion because yeah,
I'm trying to stand up all that stuff right now.
But yeah, that does seem maybe like another
episode. It's a separate show.
Anyways, if you want to give us your feedback
coder.show slash contact
get it in there.
So there is some news over on the GitHub
land, not necessarily on the features
of GitHub, but on what
runs GitHub. If you've
been following Ruby, maybe you
dabble in it yourself like Mike
then you may be aware
that the upgrade to 2.7 has been
a little thorny. It's been
the topic of conversation in the GitHub community
as well as the Ruby community
because it's been something that GitHub
is working on to revamp
their underlying platform. Now
Ruby 2.7 came out in December
and it looks like GitHub completed the
migration to 2.7 in
July. If you're not familiar with their
stack, they're running on Ruby since the very beginning.
It was Ruby and Rails, but
hasn't been that for a while.
Ruby 2.7 is a unique upgrade
because the core team has deprecated
how keyword arguments behave.
So with this release
future versions of Ruby will no longer
accept passing an options
hash when a method expects a keyword
argument. So at GitHub, that
was a big problem. They had
over 100, no
11,000 warnings that they had. It was
11,000 warnings that they had to fix.
And they are big
they say. We'll have a link in their blog, but
they're big and they make the case in here. They're big
on sticking to current
Ruby as much as possible, to stable Ruby
as much as possible, and they make quite
the argument for doing so as well.
Yeah, so there's a kind of a lot here and
I don't know that it's worth it because I'm sure
at some point we discussed this in the past, the whole
GitHub's like, originally it was like a Rails
app way back in the day and it has
evolved for various reasons and
it's still kind of some Rails
in there somewhere, but
it's, I don't know, they've done
a lot, right? If you're
GitHub, your needs and your scale
are just crazy. Yeah,
I mean, pulling off a project like this
must just be monstrous. Yeah, so
there's kind of two big things
operating here though. One, I had
a similar painful experience with a
granted much smaller application
because not GitHub. 2.7
is quite the lift and if you're the kind of
person who treats warnings
as errors, you're going to be sad,
really sad. But
that led me, and again, thanks
to Wes for sharing this, this post
from Matz, the creator of Ruby on, not
Ruby on Rails, of Ruby, right? DHA
has created Rails, Matz created the language
on how
to, you know, maintaining a programming language
over time and updating it. You know, the
desire to keep it current with whatever
the new hotness is in the general
software development community while
keeping, you know, stability and compatibility
for, you know,
old curmudgeons like me who don't want to have
all their stuff broken, right? Right.
The reason I put this stuff in the notes for
this week is Ruby 3 is going
to be coming out and
there's a lot there. For one,
Ruby 3 is going to add basically
a form of static typing,
which, if you know anything
about Ruby, is quite the change.
It's going to focus a
lot on a form of
coding currency. They're not doing
the whole async thing that
many other languages have done, so I
don't feel like diving into that too much.
But there's a lot of change
coming to the Ruby world, and we're early
days on this. Actually, like,
Square is the one who has the proposal
for the new static
typing, and Stripe
is the company,
ironically, their direct competitor,
who makes a static analysis
tool called Sorbet,
which all of this is hilarious to
me, because you have this dynamically
typed language, and what is one of the most
popular tools to use with it?
A static analyzer.
And what are they adding in the 3.0?
Static typing. Or a form
of static typing. Optional static typing, mostly.
Because we've seen this, right?
Python 3 added optional types,
or suggested types, whatever they call it.
You know, I'm struggling with this question,
Chris. Is this a factor of these
dynamic languages becoming used
for huge projects, and at some point you actually
do need some sort of typing?
Or is it Thor being angry
that I'm besmirching his beloved Ruby?
I tell you, so here's another question to ask.
Here's another way to phrase the question.
Would they make this change if they thought it would
turn off future developers?
I'd argue no. I'd say if they're sitting around going,
we think this long term will appeal
to future Ruby developers.
That's always the way these projects end up going, is they're always
trying to grab the next wave
of developers, and trying to make it
appealing. I think there's also a competitive
nature to this,
trying to prevent bleeding to other languages.
So I'm going to put on my old man hat.
I think a dirty thing
that is true,
but only to a point, and is very
obnoxious to say,
is that at some point, static typing
or something close to it
actually does help when you hit a certain amount
of complexity in your code.
And it's significantly helpful, right?
But, if you just want to get started
with something quickly, you maybe
want to be a little loose, or a little more
dynamic. I know that's kind of a
spicy hot take, that's going to get a lot of
crap thrown at it.
But, if it weren't true,
then why does every large
Rails project, or otherwise large
Ruby project, or many large Python projects
for that matter, always end up
using some sort of static analysis tool
to basically,
or write unit tests
that they're basically doing type checking that a
compiler would have done for you. I'm not saying all unit tests
are like that, so I'm not
anti-test. I'm just saying that
it seems like you hit a certain
scale, and then you end up
recreating the functionality
that a static compiler would have given you, or a static
type checker, rather, would have given you.
Yeah, I think you're right, and I also think you're anti-test.
No, I'm just kidding.
That is not a label I want in 2020,
alright? I know, right?
I want to get your take on this.
So, before we get to their final
take, this I just thought was a
neat little trick
that they pulled off to make this upgrade possible
while they have a whole team
going. They said,
just like we did with our Rails upgrade,
we set up our application to be dual bootable
in both Ruby 2.6 and
Ruby 2.7 by using
environment variables. This made it easy for
us to make backwards compatible changes
and merge those to the main branch,
and avoid maintaining a long-running
branch for our upgrade. It also,
of course, made it easier for the other engineering
teams who needed to make changes on the system while
they were working on the new version and all of that,
and this is the system that they follow,
and they talk a little bit about this
process, and it seems to me, Mike, is they've
kind of come up with a process
to address the rapid development nature
of Ruby, and
it's kind of clever. No, it's super
clever. I mean, I don't know how viable that is for,
you know, smaller teams.
It seems like an awful lot of engineering
effort to me, but it's,
yeah, I mean, that's the kind of thing when you're
GitHub that you end up doing,
right? It's
something you can do. It's something you have the
luxury to do. Right. You have the resources
and, you know,
this is maybe not featured enough,
but GitHub traditionally has been a major
player in the Ruby community,
so it's kind of, you know,
I don't know where they're going these days, but
they're certainly in the
conversation, right? Yeah.
Okay, this is what I wanted to get your take on.
So they write, on the blog,
falling behind on Ruby upgrades has the
drastic negative effects
on stability of your code base.
Upgrading Ruby supports your application health,
improves performance, fixes
language and framework bugs,
and guides the future of the language.
So they really kind of make a hard
sell for staying really current with Ruby.
Yeah, the Ruby ecosystem is super
unforgiving for people who just want to
pin to an old version and stay back.
I think they're trying to be the model
Ruby citizen, in a way, right here.
Yeah, I think so, right? I mean,
great old example from a couple years ago.
Was it Heartbleed, the one that
screwed up the OpenSSL libraries, or was that
Spectre? I always get them. Oh no, Heartbleed, yeah.
Heartbleed. You know, let's just take your standard
Ruby project. Let's just say you have a Rails app, right?
You have
Bundler, you're installing gems,
you have a gem file, you're happy.
You pinned your versions, you pinned your gems,
you're chilling for like two years, everything's
great. Uh oh, the
OpenSSL version's bad, and like,
you have to, you know, as a security
requirement, change the SSL library
that you're using, right?
Uh oh, the OpenSSL
gem no longer,
the old gem cannot work with the new
OpenSSL library. Now you have
to update that SSL gem, but
your other gems for things like, I don't
know, Bootstrap or whatever other,
you know, literally gems are the
Ruby equivalent of packages, right? That's what they are.
So rely on the old
OpenSSL gem. Now you have to
update almost your entire application,
and you have to do it in basically an
emergency situation. Where
if you had been doing incremental updates,
you would have avoided that problem.
And I know this isn't unique to Ruby
or Rails, but this is the kind of thing that
in general, gem authors tend to
be pretty aggressive on deprecating
old versions of their gem.
So yeah, I mean I
made this mistake once, it was
bad, it was a rough week and a half
of work, and now I do
quarterly updates, or I'm sorry, coderly
updates. Hey!
You're way better at it than I am.
It's the new Jersey accent.
We're used to mumbling our way through R's and L's.
Yeah, so I do
coderly updates on Rails
projects, assuming people actually have maintenance
contracts. Well, very good. You know, this
would be normally the spot we'd have an ad break
right here. You know, like this would be
the spot, but we don't have an ad, so...
I can plug something. Are you? Yeah, yeah.
Plug something. I had J. LaCroix
of LearnLinux.tv on the Mike Dominic show.
Go check it out.
Nice. URL for that?
That's a good point.
Automator.show. I forgot
the URL.
That's why I don't do the ad reads people, because I'd be like,
go buy a Linux server from...
Eh, you'll find it.
Just do a Google.
Are you in the Storm area at all down there?
Any of that hitting you? I'm in Florida.
You know, one day
we're going to be doing the show and Florida's just going to sink.
I know. Hopefully it'll be while we're live
just for historical purposes, not for you.
Well, you had that with Sandy.
Yeah. Back in New Jersey.
Yeah, that was good.
Well, almost seeming like
it was
Epic and Apple doing Coderadio
Solid. What we have
foretold, and specifically you,
and what I have warned with Apple's
ever increasing appetite for services,
what we have talked about on this show
seems to have become the number one
tech news story right now.
And that is Apple versus
Epic, which is just
continuing to develop. And you know what, Mike?
Do you know there's a bit of an irony with this?
At least in my opinion,
this last couple of weeks, like
last week, was the 25th
anniversary of Windows 95.
That's perfect.
Isn't it? Because you can point at Windows
95 as kind of the time when
Microsoft started to really have the tech
community resent them. And that resentment
really started to build with Win 98
and then when they bundled IE,
and then it really developed all the way
to an antitrust that the government
was actually successfully prosecuted.
And then there were people that were monitoring
Microsoft for years, and it changed
the game in a lot of ways. And
I think Windows 95,
you could really kind of mark as the
beginning of the general tech community's awareness
of this.
It was 25 years ago. Now here we are,
and it's happening to Apple all over
again. People have known for a while,
but it's been kind of in the tighter tech circles,
the more tech literate.
But now this is busting out into the
general audience, just people
who buy Apple products and people who
play video games.
And I don't know if this is too bold of a statement, but this
feels like this is the worst
pushback. This is the broadest
recognition of this problem we've ever seen.
Oh, for sure. I mean,
yeah, it's one thing for two
guys to be, you know, kvetching on
a podcast, but when
Epic is suing you in every jurisdiction
they can find, Spotify's going after
you in Europe, oh, and you're getting summoned to
Congress, which, by the way, can we just stop?
Tim Cook claimed in front of
Congress that they treat all developers the same
and charge 30% the same
when they've admitted
they don't? Yeah. That seems
bad. Yeah, I don't get that,
and maybe Apple's justification for that
is they classify the
businesses they've cut custom deals with as
something different, but, yeah,
they've clearly made deals in the past with
Amazon, I think Netflix they've made a pretty public
deal with, and others.
Microsoft for Office, they
did one for Adobe. Right.
There must be some lawyerly way that
he's safe.
So there is some nuance to this.
What Epic essentially wants here is
their own currency and their own app store
inside
the Fortnite video game, and that
may be where it's far above and beyond
with anything that Amazon or Netflix
or Microsoft have asked for.
They released an update that tried to bundle
some of this into the app. It was sort of
the beginning of this process, and Apple rejected
it. This has
de-escalated, or this has escalated, I should
say. Yeah, there's no de-escalation happening.
Yeah, no, it's continued to escalate.
In fact, at this point, pretty badly
I'd say, and now Apple really looks to me like
a bully. So Epic
was ready when Apple
started to say no
and reject the app.
Epic went all in with a sort of
killer time, 1984-esque
inspired ad that
was well executed. Incredible.
They had a lawsuit ready to go,
they had talking points ready to go,
and they continued to push it.
It has so far
not seen any resolution,
and to this point now,
Apple has confirmed that
they have pulled
the authorization, I
believe, for Epic's
developer account. When you become a
developer, you have to pay a $99 a year
subscription, and there's also keys that
have to be signed. All of that's been deactivated.
So there's some nuance
with that, though.
Epic, like many big corporations,
is not in fact one company,
which I did not know. Yeah, sure.
So there is a developer
account for Fortnite, and I guess
they made some game called Infinity Blade that
I know nothing about, but sure.
That is the account that got
deactivated. Apple wanted to
deactivate the one for the Unreal engine,
which would have screwed about
50% of the indie game developers
because they would have
just, that would have been devastating.
For those who don't know, Unreal is,
if you've heard of Unity, Unreal
is the Pepsi to their Coke, right?
Or the Coke to their Pepsi, whatever.
Is that fair, though? Oh, the market share.
Yeah, but I mean, Unreal is a hell of an
engine with a very interesting... That's true.
For Unreal, it's more of a high-end engine.
Yeah, with an interesting
monetization strategy on that one. But anyways,
all of this is just in service of the conversation.
We'll have details linked in the
show notes. And I think a lot of people
when they talk about this, they talk about it in the cut,
like 30% cut from
Apple. They talk about it in those terms. They talk about
the subscription prices here.
I think if you zoom out,
though, this is really about,
if you buy a thousand dollar
device, should you be the one that ultimately
decides what gets installed on it? In my
opinion, that's the bigger conversation here.
It's telling to me that that is not an argument
that anybody who matters in this conversation,
i.e. Apple or Epic, are making.
Right? Apple's taking a paternalistic view
of we are protecting the user.
Epic's saying Apple is, like, you know,
limiting us. No one's saying, well, what about
the user? Except for you. That's good.
Well, and why is no one really bringing up
Google in this? Because they were also removed
from the Play Store. I believe there's also
a lawsuit with Google and Epic,
but no one's discussing that.
Well, there's two obvious reasons, right?
One, Epic did not make an amazing
parody commercial for Google.
Yeah, okay. And Google does not
claim to be, like, the underdog
who's treating developers fairly. In fact,
oh, also, Google didn't go nuclear on them.
Right? Like...
True. Apple did not, like, even
blink on this. They didn't, like, say,
take a breath, SimSweeney, calm, sit down,
let's talk about it. Apple just went, no, you're
not doing this.
You know, man, recently they've really kind of been over the top.
It really seems like this year they cranked it up.
Did you hear that they also were screwing around
WordPress trying to get a cut of the...
I saw that. Yeah. Yeah. And that's just
one of many recently that they've
done this to. If you listen to
or read Ben
Thompson's Daily Update,
he apparently,
according to him, heard from
many, many, many
Apple developers who have had this happen
to them, but they are afraid about
breaking non-disclosures if they...
Retaliation. Yeah. Yes. Exactly.
So, retaliation
would be a concern, so they're just not saying anything
and instead they're trying to figure out how to make a way
to give Apple their cut. And Apple seems
to be of the opinion that they deserve it.
When you read their internal emails that get leaked,
they talk about
developers essentially as freeloaders
that should be grateful.
I would say the word is sharecroppers.
Yeah.
When in reality, it's the App Store that brings
nearly all the value to the
iPhone. Nearly all of it.
And so, Apple should be
doing everything in their power to make
developers happy. I mean, there's
two simple solutions here as far as I
see it. Number one, allow
separate pay systems. You know, the developer
chooses. And number two, allow for side
loading. And I'm not saying that's a good
solution, but it just seems like
if Apple does those two things, they can do anything they want
with the subscriptions that they run, they can do anything
they want with the App Store. I almost don't think
I mean, I would like them to do side loading,
but I don't even know that this
I don't even know that that's necessary, right?
So there's I think
a mistake is that a lot
of people are focusing
on the 30 percent. Yeah.
Which is onerous, sure,
but it's, you know,
it is what it is, what it is, right?
It's their store front. Right. But the
the restrictions on
what you can do. See, and I tweeted
about this. It's like like
we were doing a show. What was
it last year or year and a half ago where Lana
Del Rey? I was very happy about this. Lana Del
Rey was the singer at some iPad event
that released the iPad Pro. I
bought one that day, right? I was like all
in. Then I went to research
doing an app using the Thunderbolt port
on the on the iPad
or I'm sorry, the USB port on the iPad
and it was completely technically
possible to do what I wanted to do, Chris.
Like a lot of work
but possible. Can't do it
because Apple doesn't want you to.
And to me, that's like, whoa,
whoa, whoa. Hang on. If I want to sell somebody
an app, which granted in today's
business model, you would never like
outright sell them an app. But, you know,
if I want to license somebody an app and
they want to buy it,
why are you getting in? Like, obviously
protect from malware. Do your thing.
But why are you standing between us telling me
yes, we have this technical functionality,
but only we can use it?
That seems kind
of bad. Yeah,
I'm not saying I agree with this statement,
but I think Apple sees
their devices more like consoles
than they see them as portable computers.
Clearly wrong. That's not true. The iPad
Pro is like one of the best laptops on the market,
which I know is a hot take. But
well, no, actually,
I tell you what I went on. I want to
Texas trip and
I took two devices with me, the
Pine Book Pro and the iPad Pro
with the keyboard, you know, the overpriced
expensive but super great keyboard.
The Pine Book just couldn't really
keep up much beyond a single
application at a time. And it came
to the point where when it was time for me to go into
an office and do a little bit of work, I was taking
the iPad with me. And then when you combine that
and this would be true for any device like this in
this category, when you combine that with a good
keyboard and an LTE connection,
the ability to just sit down
and say like a new office space where
nobody's given you the Wi-Fi information yet
and you just need to get some stuff done
and just have a connection and have
everything work and have that performance
be absolutely 100%
consistent.
It does make it a really great
portable laptop.
It is not a tablet anymore, but I
still think the way they see the distribution model
and the security model is much more
in the console frame of mind than it is
in the portable computer frame of mind. And
I think that's one of the clear divisions as they see
it between the Mac and the iOS
platform. I mean, I use my iPad
very much in the way you described. Well, I should say used
back when I could leave the house, but anyway.
Sorry, let's
forget about what people believe in ideals
here. Let's just get down to brass tacks.
If you're Apple and you have
three weeks in a row of John Syracuse,
Marco Arment, and Casey Liss,
and I feel like that first one really scares you
a little bit, just like beating on you
for being a bully and being greedy and
doing all these bad things because
they're not just hurting big developers.
In fact, they're usually nicer to
developers. Don't
you just wake up and say our dedicated
fans are literally John Syracuse
was writing Mac OS reviews or
OS 10 when it was called that for
a decade
or more, definitely more
and they're beating
up on you. Doesn't
that kind of
I don't know. Doesn't that hit some cord or
is it just too much money? We can't
overcome the money.
You know, this is so this goes back to
sort of by grave prediction
when I was on the show
and I kind of came on here and I said I have a warning
and I think this is going to make Apple
a less appealing platform for developers.
And I said their drive for
services is going to change the
company in so many ways.
And this is one of those ways
when you have revenue
stagnating, or I guess the other way to put this
is growth stagnating in
a lot of your key categories
like iPhone.
You need to show that you're really
hustling on those services. That's what
all this Apple TV plus stuff is.
That's what all these huge announcements with
celebrities like
Steve Carell who did Space Force. Now he's doing
the morning show
like these big names that are just
famous out there. They're doing that because
they're trying to show the market
in part. They want successful content
obviously and they want to recoup an investment.
It's also a signal. It's a signal
to Wall Street. It's a signal to that stock
price that we are investing
in the long term in a big way
in services. And they are
determined on those quarterly reports
to show that services revenue
increasing because this
is a narrative that we've seen play out with every
major tech company. Wall Street wants to see
growth somewhere. And if
you can show growth in a category
even if it's only a small fraction of your
business. If you can show growth in that
category then you show Wall Street
there's something worth investing. The news continues
to be positive. People continue to buy
your stock. Your stock price goes up.
You have now fulfilled your duty as the CEO
and the people that are in the administrative level
of Apple and the board's happy.
It's a really complex dynamic situation
that is forcing this. And I think also
Apple has
two underlying factors about them
that come from that jobs DNA.
Number one is
and I'm going to come back to this. They don't run to the
press and chew someone out. They don't go
this guy is a real jerk.
You're not getting the full story. They don't do that.
They generally allow for the
passage of time and the court documents to come
out. And then several months later you realize
oh Tim Sweeney came along
he made this ridiculous request
to Apple. They were completely dicks
about it. And now that's why Apple's responding
this way. That kind of stuff generally
comes out with time. But right now it looks
really bad because only one primary
side has spoken on this issue.
So you have that. Number two is I think Apple
is really just internally
jerks about this kind of stuff.
They think they are the gods
gift to developers and end users
and you should be grateful for being
on their blessed platform.
And how dare you just hang
out in their store with free rent and
not cut them in on the deal. If you
came in our store and you're selling
those baskets we want to cut
those baskets. We deserve a cut of those
baskets because it's our storefront that
got the customers buying those baskets in the first
place. And that's how they see it.
I mean there's so much there. One
the Tim Sweeney emails did already come
out. And if you haven't read them Chris. Oh my god
they're great. Oh really. I know I have
not seen those. He and I share a few
character flaws. Oh my god.
He's like you said this to Tim Cook.
What did you think he was going to say.
Oh you're right. I'm evil. I'm so sorry. Let me stop.
What. Yeah. He just ignored you and said
no. Yeah. Like
so your basket
analogy is interesting because
they're not just saying we want to cut your basket.
They're saying oh and we're going to pick which baskets we have
which they're operating
like a retail store. But they're in fact not
a retail store. Right. Right.
They're saying you can have these baskets
of these types and we get this
much money from those baskets from these like
basket weavers I guess. I don't know.
Okay.
Maybe too far with the baskets. But like
why. At
some point and I granted this will take like
five years but doesn't
they just undercurrent
frustration among developers
like
I can't stress this enough. It's
Marco Armit and John Syracuse who
are now criticizing them. That's
you know that's like the pope losing the
nuns. Yes I agree.
But for the people that don't attend the church
sort of business as usual.
This is I think because it's
Fortnite a different case it is
it's a wider known issue and it's bringing it
to more general public awareness.
But otherwise you really just have
some priests who have been taking
this stance for a few months and the people
that attend the church are aware of the issue but outside of that
I think it's I think it falls
mostly on uninformed ears.
You're probably right then. So you think that the average
person who buys an iPhone or an iPad
doesn't understand that they
are fundamentally not getting the best
applications the best experience they could.
Correct. And although
maybe put a different way they just
fundamentally value different things. They
fundamentally value Apple
doing this police work
at the front doors to make sure
that apps are safe. True.
There is something to that
because I don't really hesitate
installing anything on my iPhone. You know there
could be something that's like copying clipboard contents
or something that's spying on my use but
in terms of like something taking over my device
and loading up with ads or taking
over my DNS or anything that's
actually going to permanently change my OS
that would cause me to have to reload. I am not
concerned in the least and in
part it's because of the OS design
but in part I also
think it's knowing in the back of my mind that
app review exists and it's doing
some of that work up front and it has
created a
low risk
environment to try apps and that
I think is good for developers because it means people
are more likely to tap that install button
and I think consumers
perhaps like that
a lot more than they would like being able to
sideload an app or have an app
store in Fortnite. Well I don't think
anybody but Epic wants
an app store in Fortnite. I mean yeah.
No kidding. There's no
angels here right. We're very Catholic today
by the way. Yeah.
So okay.
Do we want to dance with the devil
here and make a prediction. Oh
yeah I'm curious to see what you think. I think
and this is based on just
an obsessive amount of reading from lawyers
on this. Fortnite is up for an
epic loss here because all
Apple is going to do is say what
monopoly. Ever hear of Android.
Yeah. And game over.
I agree. That's the thing is Apple
doesn't even have a majority market share.
No. And it's
it. I hate going
back to ATP but like John Sercuser tried to make
an argument about well Apple has a majority
of the people who spend money on their phones
but that that's not going to hold up. I mean that come on.
Yeah. Yeah. It seems
weird to me that a billion dollar company is
going so like it's one thing when like
you know Basecamp goes nuts
and like starts yelling at Apple right
or like a small developer writes a nasty blog
post whatever whatever because you
know when you're small sometimes you
you're like a badger right. You have to be a little
vicious or else you'll just get crushed
but that picks a billion dollar company
like they must think they
have a case. So
it seems that there's possibly over
100 million Fortnite players
on iOS and perhaps somewhere around
20 30 million on Android.
There's not really super current numbers
in Epic's case. You could you could
argue that Apple has a more direct impact
over them because they maybe have more users there but
I think you're right. That's such a nuance
there. And the truth is there's more Android devices
and it's the same problem over there just slightly
slightly less egregious
and then there is coming
back to this the end user aspect
of it. I 100 percent
every single time if I can subscribe
to something on my iPhone versus doing
it on the web every time without
question every single time every time
it's so much easier to go into my iPhone
and just cancel a subscription. I don't have to call
anybody. I don't have to go to some website remember
a log in. I just one unified
place I can see all my subscriptions
and I do this for things like
streaming when I don't need to stream
like a CBS All Access when they're not running Star
Trek. I just pause it as
you should. That's why they're creating so many Star
Treks. But my point is there is
a user experience
aspect to what Apple enforces
that I think they could argue
is more valuable.
I think to us it's
not. And that's you know ironically
why we should be Android users
because you can already sideload on Android right.
I mean this is really is a non-issue
although Epic did try to do that
for a while right. They tried for 15 months.
Yeah and it did. It didn't work
because that's crazy right.
Yeah. And by the way we shouldn't be Android
users because we have done years of episodes
on Android's failure on tablets.
So that's true. It's true.
I have a Fire tablet and
it is so bad.
I'm pretty sure I ordered the ad
free one and it still shows ads
on the lock screen. It fires
the Amazon like don't call me a Kindle
right. Yeah I they're just
so cheap there sometimes you can get them. I'm
not kidding you for 60 bucks. Oh it's like
a Google Home.
And I yeah they actually will also act
as echoes. But what I do
is I wall mount them and I use them to interface
with my home automation system. So
they're they're consoles with just screens up
all the time. But they work for that. They're single
purpose tablets. Yeah well for 60
bucks and they last. I mean I've got
I've had it going now for well over a year. They
just great. Yeah I just have
the screen scheduled on and off and
oh my lord it rocks.
It's pretty high tech. So what's your
prediction. Is it is a straight defeat
as I'm thinking or what do you think.
I mean Epic has really
put themselves out here as fighting
the people's fight to take
down Apple's restrictive practices.
It's a pretty big walk back the
people's fight to get more money
from iOS users and have the Epic Games
App Store on iPad. I know
I know you're right. You're right. You're right.
No but I would prefer
they win. I'm being a little snarky but I would
prefer they win. I just don't know. I would too.
I would prefer they win as well here
even though I don't as you say I
don't think there is any heroes or any angels in this
particular fight.
But Epic is just the right
size where they're not so big
like a Facebook or an Amazon where Apple
is just going to automatically do a deal.
But they're not so small that they can't
afford this fight. So they're kind of the
perfect fighter for this
and they've obviously got their game
and like I was saying
before it's one of those
issues Fortnite that reaches the people
it goes beyond the church of tech
and I think that
combined makes them a very
unique fighter. I'm going to say
their developer account gets
reinstated
for the next
I was going to say the next coder but that's probably too soon
I think that's too soon. Well Apple
has already offered to forgive
them if they just put the old version back in.
All right I'll take a risky bet. I'm going to say by
next episode they've
they've come to a resolution on that
so on just the developer
account aspect
I may wait till that episode to make my
prediction on what happens. The only reason
I think you could be right there
is because you know I am not a
Fortnite player. Neither am I.
But in reading up on this I've had to like learn what the
hell Fortnite is. And apparently
they have some deal with Marvel
and it just came out. Oh yeah
cool. So there's got to be a lot of kids
who like want to play on their iPad
I know they have a new season release they're doing
and it's not available on iOS.
I don't know maybe everybody's home because of COVID
so that maybe they're on like Xbox.
Yeah. Yeah. This is
the weirdest situation where don't you kind of
just want to send them to marriage counseling. Yeah
you really feel like this should be
like two reasonable businesses that
both want to serve customers and make money should be able to
work this out. Well even like even like just
Apple right. It's an Apple therapy like
we understand that
you want this thing. You would like to
get 30 percent everything that touches
the iPhone but you can't
have that. So is there
some accommodation we could reach here
to like make you happy and
have you not you know
act like Kronos eating all the
this got weird but
you know what I mean. Yeah
I do know what you mean. You look at it iOS
has been around what 10 11
years now and you
could see it maybe being justifiable for the first
few years but it would have sort of been like
when the Web came to the Mac
and Apple would have tried to try to
take a cut of every transaction on the Web. It's just
at a certain point the scales too ridiculous
the platforms become too common.
Oh my God you're right.
I mean I'm right. They're going to get
killed. Apple had this fight once before
with Adobe Flash and they crushed them
yeah right out the gate. They
destroyed the entire flash market and
they were a lot weaker back then as a company
too. And Adobe was an important
partner. They in reality could go a
lot harder at Epic than they can at Adobe
right. It doesn't seem like Apple has
them because Epic agreed
to the terms of service. So they're violating
a contract they agreed to if
the contract's legal. Right. That's Epic's whole argument
that it's not. Yes. Right. Right.
But Apple I think it's a pretty good case.
It's our store front and it's not even the
biggest one. I mean that's a good that's a
good I don't see what a hell of a fight
and it what it really is about
though I think again like I started with is about
the freedom of what you can do with these devices.
And this is just the beginning of
that question. Oh yeah absolutely.
This is like the first big part of that conversation.
Then once this gets settled
the next question becomes well what about
users because right now this is about why I'm a company
and I want to make more money to my
and I have I don't have a direct relationship with my
customers that use these general computing devices.
That's essentially an abstract version of what
Epic's argument is. But what about the end
users. When does that conversation happen and
what precipitates that conversation
where I don't know if we'll have one or if
we'll we'll see Mr. Dominic
you know before we go
I was chatting with
the team and I think
the way this episode will these episodes
will land will be Wednesday evenings
at coder dot show Wednesday probably
being you know generally
the Pacific time or somewhere in there but
so go subscribe just so you get it automatically
when it comes out at coder dot show
slash subscribe and then you
just get it when we release it or
you can tune in live. We're back
doing these shows live on Mondays
at noon Pacific 3 p.m. Eastern
over at jblive dot TV. So
if you want a quick fix just
get the live version right over there. Then
we will have when the main show
releases for our members will have the
ad free version. And again
you can sign up for our new membership program that's
launching literally right after I get off the
air and go set it all up.
It's going to be one of those. So go
over there and sign up. It's a it's a
coder QA dot co coder QA
dot co. And if you use
the promo code Jar Jar
it'll be a six dollar indefinite
membership for the first 200.
That's a pretty good deal right there.
And it really it means a lot to us.
We're excited to do this show and
as both of us being small businessmen we
know we got to do it in a way that is
sustainable and also in a way that
justifies it being on the calendar
every week you know for the first few weeks of course
of course it's super exciting. But what about a year
what about two years from now. How do we continue
to justify to ourselves and we think even
if there's not a sponsorship that membership will help us do it.
Thank you very much. Coder QA
dot co. Mr. Dominic give
us a plug for the Twitter feed or somewhere for people
to get a hold of you. Yeah go to at
Dumanuco on Twitter. I am finishing up a
project and you can watch me cry
because goddamn that last 10
percent. Yeah
right. I know isn't it always the way it is.
I feel you. It's always the way it is.
Plus like right now I've got like a dozen
projects going just to get the business back up.
Oh it must be crazy for you. Yeah I
am very fortunate I was able to sneak out
and I spent a night in the woods last night
and then I drove into the studio so I could do the show
and that I find to be
recharging. There's things that keep cropping
up tube just because you know when
you're a business there's things you never
expected you'd have to deal with
to actually operate the business. So the
one that was solved last
week is the furnace
in the studio is really really
old. It's like 20 years old right.
It's really need to be replaced
and the venting that
goes from the water heater to the furnace
that runs in the garage
collapsed when we had a new
roof installed over the summer.
Well the server for JB
is out in that space and all of a sudden
the garage started getting really really
moist because the water heater was venting
directly into the garage the server
garage. Oh no.
Why is it so moist. My server is
going to have mildew. What's going on here.
And then we started looking around and realized that the venting
collapsed. So we had the roof fixed
which made the venting collapse and so
now we've had the furnace replaced and new
venting put in. And so now the
server garage is not
mildewy.
That's what it's like to run a small business right there
in a nutshell. And that was just one of the many
projects. That sounds right. Well thanks
so much for tuning this week's episode of the Coder Radio
Program. Links to what we talked about
today at coder.show slash 377.
That contact page is coder
dot show slash contact and
membership coder QA dot co.
That's everything we have for this
episode. Expect these shows to come out every single
Wednesday and the live show
Mondays at JBLive.TV.
Thanks so much for listening. See you next week.
