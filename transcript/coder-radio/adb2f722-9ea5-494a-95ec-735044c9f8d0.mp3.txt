This is KOTORadio, episode 397 for January 18th, 2021.
Hi everyone and welcome into Jupiter Broadcasting's weekly talk show, taking a pragmatic look
at the art and business of software development and the world of technology.
This episode is brought to you by Cloud Guru, Cloud Guru now includes Cloud Playground,
Azure AWS or Google Sandboxes on ACG's credit card, not yours.
Get certified, get hired, get learning to cloudguru.com.
Who me?
Yeah.
Thanks for asking.
Yeah.
I'm Chris.
Thanks.
But what really matters is our host, Mr. Dominic.
Hello, Mike.
Hello, Mr. Fisher.
How are you?
Oh, I'm pretty good.
Sitting here in my minimum viable robe, enjoying a nice comfortable, you know, because I keep
it a little cool in the studio in the winter.
I like to keep the window cracked during the day.
That's okay.
Ask me what I'm wearing.
What are you wearing?
My ACP shirt.
I'm not sure if that's supposed to cut or I don't know.
It's supposed to get feedback on YouTube.
That's what it's supposed to do.
There is that.
Yeah.
I got stories for you today.
Oh, go.
Let's do it.
Let's just get right in.
Well, first I wanted to, you know, you remember a Veed?
He's written in before to the show.
Remember him?
Remember him?
It's been a while.
Spend some time.
My old friend.
Stay a while and listen.
That's right.
That is exactly what I was in the reference I was invoking.
Well done, sir.
Well done.
Yeah.
Stay a while and listen.
Wait, wait, wait, wait, wait.
We have Deckard Cain on the soundboard and I didn't know this.
Yeah.
Well, yeah.
Yeah.
It's cause it's usually on the Linux unplugged, but every now and then I let it bleed in.
Cause I mean, it's, it's Deckard Cain.
Stay a while and listen.
I love it.
I don't remember what we're talking about.
Go ahead.
He's been a listener since 2009 and he says, I just wanted to show or throw a shameless
plug towards you guys.
In the last episode, you mentioned iTerm and you mentioned AWS.
It does sound like us, Mike.
Those are things we would mention.
It does sound about right, doesn't it?
Yeah.
He said, I just wanted to throw you this.
It's a GPL project that scrapes AWS and digital ocean to create dynamic profiles for iTerm
for easy SSHing.
It also creates an SSH config entry with the same information if that's the way you prefer.
He says he'd love to get some information from people on like our, our, our patches
to support Linode or Azure or other cloud providers.
And there's also a windows support for MOBA Xterm.
How about that?
So he, he essentially, I guess, uses the API to figure out what your sit, what your like
digital ocean droplets are or what your AWS instances are.
And then auto builds out iTerm connections for you.
So you should be trying iTerm.
That's what this, that's what this is about.
You realize this is because you besmirched iTerm.
I have some thoughts on iTerm, but let's just keep moving.
I was going to give it another week.
Oh wow.
Okay.
I mean, cause I mean again, you besmirch, you besmirch a great terminal.
You're besmirching.
I didn't say I besmirch.
I just said I had thoughts.
I know, but they're probably besmirchy thoughts.
I would say they're besmirch adjacent.
Yeah.
Besmirchish you might say.
I would say they're like the, you know what?
Let's just keep moving.
Okay.
All right.
I mean, I just think it's a nice little terminal.
I got to configure the way I like, but I understand.
I think you and I wouldn't configure our terminal the same way.
Just saying.
All right.
You know what?
Next week we can have the terminal off.
Then Mike writes in Mike K, listener Mike, big fan of the show he says, and by the way,
can't wait for the ropes to drop.
Absolutely.
God dammit.
He says, I have this question haunting me for a while and I had to ask it here.
What is so terrible about an electron app?
I agree.
It sounds like a hot mess of an idea and yet it works.
It works really well.
VS code is the most popular code editor in the world and I build on it.
In fact, I built on top of it.
So Slack also use that all the time.
Turns out my favorite get client also electron.
I have plenty of issues with flat packs and the like over the years, but never really
an electron app.
They don't seem to be much heavier than the alternatives.
Meanwhile, you basically get web, Linux, windows, Mac builds right out of the box.
It might even work on Mike's M1 without crashing.
Seems like a huge upside.
And yet electron apps seem to be slandered in the Linux world.
I'm a web developer and I want to start writing Linux apps and contributing.
So I naturally want to reach for electron, but I hesitate because all of the hate speech
around it, despite its popularity.
So what am I missing?
Why doesn't this add up?
I'd love your take on this item.
Thanks.
Sure.
So right off the bat, Mike, I'm curious what get client are using.
I have a, I mean, I use the terminal, the one true terminal, Chris.
He mentions in here that he uses get cracking, which I've tried.
Oh, that's what I was going to say.
Is it cracking?
Yeah.
Okay.
That makes a ton of sense.
So I'm going to say that electron apps aren't that bad unless you're on Mac.
Oh, okay.
Even then they're not that bad.
Mac is kind of weirdly broken on macOS in terms of the calling and like releasing the
odd, the audio input device and audio output devices.
But I think the problem, I think this is kind of a problem is have easy in quotes.
It is to write an electron app and just shuffle it to all the platforms that people kind of
write lazy electron apps.
If that makes sense.
Yeah, it does.
Or it's it's just a non-optimized version at least I can tell you when I'm working on
Mac, I noticed the electron apps a lot more because you know, they're not bespoke and
didn't cost me, you know, 27 Starbucks lattes.
Yeah.
Well, the other thing is on Linux, there's a lot less standardization, right?
People just kind of do what they're doing with their apps and sometimes things like
randomly pulling KDE or cute components.
So having a mismatched UI isn't a shocker, right?
When on Mac I can like tell like, okay, a little slack is doing something ridiculous
because it's actually like a Chrome instance, right?
Having said that, I sell electron apps to people.
I think they're great for line of business apps.
I don't think anything but web apps makes a ton of sense in most normal cases, unless
you're doing something like CAD or you know, like flight simulators.
I don't know.
What's your take?
It's the trade offs these days are you probably want to go with web standards in general.
I really connect with where Mike K is coming from in this email because as Linux users,
like you better, you better learn to love electron because it's probably the only shot
Linux users have for large corporations to invest development time is if they invest
development time that can be deployed on multiple environments.
And right now, especially with Microsoft looking at developing electron or I'm sorry, outlook
in electron and likely other office applications and electron in the future after outlook comes
out.
I think it's probably just going to be a lot more, not a lot less, especially in the business
line of applications where enterprise applications have traditionally been kind of clunkers to
begin with.
So UI and performance aren't typically first or even second or third priorities with those
applications.
So I totally see where he's coming from because Linux users, this is their best shot.
And I'll tell you, it's like many things in tech.
The problem is nuanced and complex.
Fundamentally, you could make a security argument that you have a really kind of complicated
chromium stack that gets shipped with these applications and some of them don't get properly
updated.
And so you could have different stacks at different times.
So you could have Slack using one electron stack and you could have Discord using a separate
one.
And perhaps the Slack one is vulnerable to something that Discord isn't.
And so it's kind of a mix match and a large surface for attack.
And so that has a security criticism.
Then you have the performance criticism and you have the native application criticism.
And I think like so many things in technology, none of that stuff fundamentally matters for
why it gets adopted and why it gets deployed and why it gets market share.
And all those things can be true about something and it'll still be a successful technology
platform.
And I hate to be a non-controversial on this, but over time, I think I've started to just
get used to electron apps.
You guys know, I mean, traditionally, I really am not a big fan of web applications, but
the thing that I like at least about electron apps is they get it out of my damn browser
and it's one less thing that my browser can take down or it's one less tab in my browser.
I prefer that these things have their own windows, their own processes so I can kill
them or they can crash on their own and they're independent.
And at least electron, in that sense, it gives me that with these web applications.
And I am kind of delighted sometimes when I'm using an application as a desktop app
and then I go to the web and I find essentially a total and complete implementation that is
in the web for when I need it.
VS codes web server version of this, for example, is just great because it's essentially VS
code that I can run in a Docker container on a web server on my LAN.
And I love that.
Now, you know what?
This is great.
So there is advantages to it as well.
But I definitely can also sympathize with the performance argument.
This is my last point is on Arch Linux.
You can play around with this a little bit and see the difference.
There's specific versions of common packages like Slack and Discord that you can opt to
use the arch system version of electron, which is always very up to date and the most performant
version available.
And so the these packages install the applications.
But instead of using their bundled electron runtime, use the system electron runtime.
And you notice certain things work a lot better and it runs a lot faster.
And you realize that there is still performance gains to be had.
And part of it is just a lack of optimization and a lack and a lack of keeping these things
up to date.
And now on my workstation upstairs here in the studio, my like my office space, I run
these versions of Slack and Discord that use the system electron and they use less RAM
and they perform better.
And if you have if you can look, look for your systems, I'm sure it's available for
other distros and desktops out there and you notice a performance improvement.
So that tells me there is room for improvement.
They're just not taking it.
So I think there's people have a valid argument there, too, like all things in tech.
It's complicated.
Right.
It's complicated.
It's really how it is.
Yeah, I think it's fair.
I think that's I mean, I said one thing.
I don't think anyone's going to win the argument against electron or something like it.
You imagine if, you know, in five years, all of office is just shipped as an electron app.
I mean, the argument's over.
Corporate America is not going to care.
I think that's almost a certainty.
Alex writes in and he says, I'm a mechanical engineer training recently to do some development.
But check out what he does is he says, I'd like to talk about how I think that programming
is becoming a critical skill for anybody working in a technical field.
I've reached the limits of what spreadsheets on on more than one occasion.
And so I've been thankful that I've had programming skills to fall back on.
He's recently been doing CAD design automation in Python, which he says is really changing
his game.
And also he's moved over to the M1 and loving it.
We got several people this week that said that they moved over to the M1 and love it.
So I'm one loving that email and one grand loving if you catch my drift.
And then he asked if I've launched a network wide support, you know, so you can get a membership
and get access to all the show's special features.
I was really, really close, but it backfired on me.
So I kind of hit the pause button.
That's not out yet.
But I am hoping to make good for anybody who's a patron at Patreon.com slash Jupiter signal.
Whatever I come up as a bundle, I'm going to try to include everybody over there.
So Jasmine writes in and we were asking people how they test and she says, how do I test
painfully?
I'm working.
I know.
I love that.
I'm working on an enterprise application and a mono repo built on a Java 8 and Docker.
All our builds use Apache Ant and we do our unit testing with a combination of Junit and
I think it's Makito.
The problem is, besides Java 8 woes, our unit testing is old, crusty and all around a bad
time.
I saw by more than one senior dev that they expected that they expected they'd have time
to fix it and write unit tests that are better.
But of course, that never actually opens and happens and it takes sometimes one to two
and a half times as long as writing actual code.
As of right now, I've been around six months on the job.
They are sadly correct, as I have learned.
Our unit testing is functional integration testing by just a different name, causing
nearly everything to be extremely complex and complicated.
You know, kind of the opposite of what unit testing means.
Our service mocks actually make everything much harder to test or fix while actually
also hiding bugs from us.
This is so painful.
All this of the fact that our testing finds such a minuscule amount of issues, it makes
it full rage inducing.
That is the key thing at the end there.
When they go through all this trouble, it actually just finds like a tiny amount of
issues.
Right.
It's like trivial issues that never would stop a release.
Yeah.
That's how I test.
She says.
Honestly, Jasmine, I feel your pain.
For years, I have been kind of a curmudgeon on the whole unit testing thing.
You know, at a certain scale, I've never seen a case, and I know I'm going to get a lot
of hate mail for this one, where maintaining the unit test doesn't just become like somebody's
job and it's just like this huge overhead and people get tempted to write them.
So I can't think of a good adjective or adverb here, but let's just say they write them in
a way that they're unlikely to fail.
Yeah.
You know what?
I know my fellow Ruby hipsters will want to jump down my throat, but I still don't think
you can replace manual testing.
I haven't bought into the unit testing, and I know that's a sacrilege.
I know there's lots of blog posts about how you're not a real developer unless you embrace
test first development or whatever.
I'm going to obviously have to take the opposite side just so that way I don't get flamed.
Of course.
That's a spicy day.
Because it's important to spend four out of five days in your week writing unit tests,
right?
Well, I know.
Like, where do you even figure out the limit there?
And especially a small team, too.
It's just really, it's a whole other level of...
It's a whole other job.
Well, I think what happens is, and I like what AS, I can't even say that, but someone
in the chat is saying where, you know, testing your implementation details in kind of like
asterisks.
But the problem is as a system gets bigger and bigger and bigger, there's all these weird
details, quote unquote, edge cases and things where, yeah, sure, unit tests are super cool
on like the first 1.0, and they make a ton of sense when you know the logic.
But what if someone comes back to you and says, I don't know, let's rewrite how permissions
work in this giant application.
And you have a couple of hundred tests that now just fail overnight.
Yeah.
Do you even bother really redoing them at that point?
At some point, is it just like a sunk cost, right?
Yeah.
Okay.
So Steve from Canada is doing a check in.
It says, hey, guys, I know you're asking for feedback on our home setups.
I thought I'd chime in as well as with the rest of us.
I'm now working from home, or I guess you should probably say a lot of you.
I'm working from home indefinitely now.
Previous to that, I was about 85 to 90% on the road.
So he went from nearly 90% on the road to indefinitely working at home now.
It's a win.
Yeah.
Yeah.
I agree for him.
It's probably got to be a huge quality of life improvement.
But I was just thinking, if even five or 10% of people who work from who were traveling
that much are now just working from home, things are going to change forever.
I'm really just curious to see where that goes.
But he goes crazy with the monitors.
He has two horizontal monitors on top and a 132 inch 2K monitor in the middle, which
is my setup, too.
But then he has another vertical, additional vertical monitor, I think he puts on the left.
He got himself a new keyboard after using a $20 keyboard for years.
He got himself a Red Dragon, I think a Cerurra mechanical keyboard.
I don't know.
I don't know how these things are pronounced.
Whatever.
It's a dragon.
Let's not piss it off.
I know.
I was like, dragons are great.
But you know what he says in here?
And this is interesting.
My buddy Alex has kind of shown me this, too.
He's surprised nobody's written in and talked about what a hack it is to have a 3D printer
because he prints bins for stuff and desk organizers.
And he says his whole desk is completely decolored now because of his 3D printer.
So I think, you know, he says he tried to meet up with you one time in Jersey or twice
in Jersey.
So he's that Steve, if you remember.
He must have been the Steve that was stalking you for a bit.
I don't mind being stalked.
That's OK.
You know what?
I'm pretty lonely these days.
I could use a stalker.
Especially if the stalker's bringing beer.
You know?
Well, I'm trying to trim down.
Let's do, like, Tito's gluten-free vodka, but sure.
Are you really?
Are you?
You're not doing the glutes anymore, huh?
No, I am doing the glutes, but I've lost 20 pounds, man.
Congratulations.
That's awesome.
And mostly just cutting back on carbs and stuff or what?
Yeah.
And I've been doing intermittent fasting.
You know what?
People laughed at me when I talked about that a couple of years ago, but it's a serious
way to get just like, I don't know, it makes kind of sounds like just stop eating after
sunset.
Like, is that such a crazy idea?
Yeah.
Well, I don't eat until roughly 11, and then I don't eat at night, so.
So what time do you stop eating at night?
I mean, sunset right now is kind of stupid.
It's like 530.
Yeah.
But I don't eat past, I think, seven or eight, but seven.
Seven's usually my cutoff, too, if I do it.
I got to get back into it.
It helps because I have a four-year-old who I currently have who's like, yeah, no, I'm
tired.
Let's go to bed.
See, I have the opposite problem, is my little monsters want to eat until right up until
bedtime despite me trying hours before bedtime, making sure they've eaten everything.
Yeah.
And brush their teeth.
They still get hungry right around bedtime constantly.
They just are little weeds, and it's cliche to say it, but I legitimately have no idea
where they put it all.
Something else.
Oh, no.
My kids, my son's the same way.
It's like, I bought a giant bag of apples, and I'm like, this will last a week.
And I was at Publix today buying another bag of apples, and it's Monday.
I bought it, granted, I brought it on Friday, but yeah.
This will last a week, and it's gone in a day.
Yeah, cut out beer, cut out, and it's basically if you want to drink, it's just like clear
liquor, but like club soda, no tonic, no mixers.
Like I don't eat out much anymore because, you know, the apocalypse.
I went the opposite way as far as that, is I, instead of going to grocery stores, I started
ordering food a lot more.
I was doing that for a while, and I ballooned up, and I was kind of like, okay, no.
Yeah, it's wild.
It's wild how much eating out affects that.
It's really something.
Well, and you know, I'm single now, so I'm on the prowl, so you know.
You want to be a slim and cut gentleman who is attractive to the ladies.
Yes, and ladies, if you happen to own any patents for, I don't know, automation technology,
I would love to meet you, and there's a deal we can make.
I love it.
In the meantime, Jason writes in, you know, we were asking people about their work setups.
We got a lot of M1ers.
They're really representing, they're hyped right now.
Take out the robe, guys.
Yeah.
Let's go.
Take them out.
Although the thing is, a lot of the M1ers out there are also robe bros.
I know.
There's a high overlap.
Yeah.
You know, I've never in the history of this show seen a new product take off in our audience
like this before.
Like the robe or the M1 or both?
Well, both, actually.
Oh, Jesus.
I mean, I'd say we probably got seven people this week that were writing us from an M1.
Oh, yeah.
I got a bunch of tweets.
People are saying they love it.
Yeah.
It's kind of significant.
Jason writes in.
He's on a Linux stack.
He says, I'm a full-time open-source developer working on a project that's written in C,
and as of 2017 includes some Rust components, and I couldn't be happier.
Oh, ho, ho.
Got a Rust mention in here.
It's been a bit.
Take a shot.
Yeah.
But only something clear with Sparkling Water.
You know, like Jim.
He says, my day-to-day environment has been Fedora with GNOME since Fedora S7.
I use the Terminal, Emacs, IntelliJ for Rust, and some experimentation with VS Code these
days.
My 10-plus years with IntelliJ is a hard habit to break.
And of course, Chrome and too many electron apps for all the chat systems.
There's an electron slam.
In the evenings, I play with writing crypto trading bots.
Oh, Jason, let's talk, my friend.
Let's talk, which is a great way to try out new things with Rust.
Jason, email your buddy, Chris.
Come on.
Let's get some Ethereum action going.
Jesus Christ.
Robes of Ethereum.
I know, right?
Well, come on.
What else do I have?
Well, come on, what else do I got going?
You know?
I'm in the same boat.
Hook me up.
I got some GPUs.
Ethereum's going to be my health plan and my retirement plan.
Ice says, I have an aging i7 overclocked to 4.2 gigahertz, MVMEs, and AMD RX 580s.
Sounds a lot like my setup.
And I have some off-lease Xeon servers in the closet running Elasticsearch, Plex, et
cetera.
Keep up the great work.
I appreciate Jason telling us about his server setup, too.
You know, people didn't really tell us if they're running any home server infrastructure.
So that's your next question.
Shoot, I should have asked you last time.
What is your, do you have a little home setup system?
Maybe some VMs for testing?
Some CI stuff?
Let us know.
Coder.show slash contact.
Yeah, I actually was wondering that, too.
With COVID and everything, are more people just being like, to hell with it, let me just
run a server?
Maybe that's why people are buying Mac Minis.
So Asish wants to write in to make me sad.
M1 Air with eight gigs of RAM, he says, I mostly do back-end node nowadays, also deploying
to Lambda, and I have yet to feel constrained by the eight gig limit.
Now, you got one with 16 gigs, right, Mike?
Yeah, because I like to let money on fire, but let's just keep moving.
Have you noticed it being a limitation in terms of performance at all?
What I've noticed is that it makes me want to take this iMac Pro and drop kick it.
But like you haven't like ran out of RAM, right?
Never.
I haven't even like seen a stutter.
I think unless I'm doing multiple VMs, I could really make 16 gigs work.
I prefer to have, actually I don't even need 32, 24 would be the sweet spot.
But anyways, he doesn't know if he'll hit that limit yet, but he does plan to do some
VM soon.
He initially got the M1 because his web meetings on his laptop were just sucking and he wanted
to appear at least somewhat presentable.
And so he got the cheapest MacBook Air possible.
He says, to make me a little sad though, me, Chris, I'd expect the desktop to also go the
way of the console when ARM and RISC-V come to x86 home turf.
I like being able to load whatever I want on there.
That's my thing.
That's the thing about the x86 platform is you could always build your own beast if you
really had to.
You could go crazy with some Threadripper system and 128 gigabytes of RAM and 24 terabytes
of internal storage.
You could really go nuts with some of these.
I was looking at the Lenovo P60, which is a Threadripper based Linux workstation that
starts at around $6,000.
And then you look at like the Thaleo, which you can just spec out to be an absolute monster.
I bet it's going to be a long time before Apple meets that kind of performance.
How much you want to bet?
Put it in the only currency you actually care about, robes.
I'll bet you a robe.
Bet me a robe?
All right.
I bet you a robe with a selfie.
So we have a topic we should wait till we get there, but I have some thoughts too.
Datadog.com slash Coder Radio.
This episode right here, yeah, it's sponsored by Datadog.
Now who is Datadog?
Well, they're solving big problems for you.
All your applications, all your systems across all your clouds in one place through the unified
monitoring and analytics platform that gives you comprehensive visibility into your cloud,
into your hybrid clouds, like you got some on-prems, yeah, they're going to do that.
You quickly analyze the performance of your Linux servers.
You get beautiful real-time dashboards, got to go see these dashboards at their website.
Go to Datadog.com slash Coder Radio.
You can customize the dashboards and troubleshoot issues in seconds with a unified view of your
metrics, your traces, your logs, all in one place.
And then you have turnkey integrations with over 400 technologies, so really make it easy
to just plug in and start working.
You can use Datadog to watch key metrics on your Linux boxes, compare them with metrics
from like, say, just the application inside a container.
I mean, you get real full stack visibility with these tools.
You should really check it out.
They wrote some of their agents and rewrote some of their agents semi-recently a couple
years ago now.
They've iterated on a few times in Go, and it's super simple to get up and going if you
need one of those tools.
Their integrations are just really fast and straightforward.
And you can start a free trial if you create one dashboard, you get a free Datadog t-shirt
by supporting us and checking out datadog.com slash CoderRadio.
Support the show, free swag, unify your metrics.
It's a win, win, win.
Imagine it, you're troubleshooting a problem.
One team needs to communicate with another team, Datadog can help you visualize it all
across the entire infrastructure, datadog.com slash CoderRadio.
Little bit more feedback and then we will continue on.
We have so much email, it's great.
And I really actually appreciate it, I love it.
It's exciting to open it up and go, man, look at all these people that wrote in.
And we had one really cool one.
We had a listener who's specializing in high-speed optical transceivers, how about that?
Gabriel is a software engineer for a small company specializing in these optical transceivers,
and the team is developing a new transceiver from scratch.
He writes the firmware for the transceiver in addition to any programs that need to interface
with it for testing, you know, for development or production uses.
And he says, since I'm working with embedded devices, my day-to-day involves reading too
much documentation for too little information and dealing with hardware oddities and working
around limited development software.
I am forced to use Windows as the tool chain for the microcontroller we're using.
It's proprietary, it only works on Windows.
The compiler is built into the proprietary IDE.
Actually he says, thank Jar Jar, it's not based on Eclipse.
You're so welcome.
Built in, you gotta love that.
It looks like it was pulled right out of Windows 95, it says there's a few desktop applications
I do write.
My go-to language is Rust.
Second Rust mention.
It's a double.
I'll be honest, I don't make anything more complex than a CLI application, but the libraries
available for us make it so easy.
I've been using Rust for years and I've loved nearly every moment of it.
If I say much more than that, I'll just start sounding like a fanboy.
Keep up the work, thanks you two.
If you're gonna be a fanboy, Rust is obviously the right choice.
Not a bad one, right?
Right.
I mean, it's a language that punishes you up front.
So you don't get angry customers later.
That's kind of all I want.
Okay, so this is our last one today.
Brian writes in, he works for a US hosting company, we're not gonna say which one.
He says they got great sysadmins, a good solid sysadmin team, but he is the sole developer
for the entire company.
So his roles range from a small command line utility to distribute services and some of
their microservices to entire front ends written in React.
He also ends up doing a lot of his own DevOps work to support his applications.
Can you imagine?
Like Brian must be like tense and stressed all the time.
Just yikes.
Brian, convince your managers to hire a vendor to help you with that development work.
Right.
And I just happened to know one, the mad botter in Florida.
Boom.
No, but kidding aside, that's terrible.
That's just a lot of ground for one person to cover.
It really is.
And to make things a little more challenging, there's several thousand servers that are
running Windows.
So he has to write a lot of stuff that interfaces with them too.
He runs Fedora on his workstation.
He's got an XPS 15 for that.
Good choice.
Yeah, right.
But his predecessor, I think, used a lot of.NET.
So he's been learning it, been picking it up.
And he's actually pretty happy that he can get it working as well as it does on Linux.
And management is happy that he's using their preferred language.
So that's all actually kind of working out pretty well.
He says it's a hobby he recently branched out to writing small GTK based applications
in C. And he's making inroads into learning things like Rust.
It's a Rust week, Mike.
It's a Rust week.
It's time to hit the ground, folks, because that's a triple shot.
No kidding.
People are going to get wasted.
He says all the best.
Thanks, Brian.
So for the hobby dev, I would, or hobby development rather, I would almost suggest you take a
look at like an Uno or an Avalonia if you already are proficient in C Sharp.
I know you're doing it for a hobby, so maybe you want to branch out.
But if it's something you need for yourself or you just want to put out there, if you're
familiar with the.NET stack, those are, I mean, I've done quite a bit of Avalonia, a
little more than I'd like to admit to, to be totally honest with you.
It's a great stack.
It's maybe I'm hesitating a little because now Xamarin is getting Linux support and without
putting a dog in this fight, Uno has kind of surpassed them in a lot of ways.
It's still a great platform, and the big benefit is their implementation of GTK apps is actually
like native GTK, where I believe Uno is still a WA WebAssembly, WASM, how do you say that?
Do you say WASM or I just say WebAssembly now?
Well, I say WASM to be kind of a little bit of a troll about it.
It's WASM.
Yeah, but Brian, maybe it's time to polish up that resume too.
Just saying.
Yeah.
Yeah, I wonder.
I hope he's got a decent package, I mean, payment package.
I was going to say, really, Chris?
You know, that's just, that's not the way I...
You know, we do the show at night and we're just a little looser than we used to be.
I just, I was thinking payments and like bonuses and health insurance, you know, the whole
package.
Wait, health insurance?
Yeah, I know, right?
What are we, Sweden?
Don't even get me started.
You know what?
All the European listeners get mad at us every time we do that.
They roll their eyes at us whenever we talk about health insurance, ISPs, or cell phone
plans.
Remember the dude who was like, just come move to Germany?
Yeah.
Yeah.
He's probably right though.
I mean, I do like beer and pretzels, although I'm off beer right now.
I'm toying long term, like, you know, when the kids are all old and grown up and, you
know, they have their own lives and don't care about old dad anymore.
I could podcast from anywhere in the world, right?
So why stay here?
Why not go somewhere warm?
Whatever happened to Amsterdam?
Remember that whole phenomenon?
Oh yeah.
The app developers were moving to Amsterdam.
Yeah.
Maybe I should go check in and see what happened to Amsterdam.
You know, I don't know if I'm, I don't think that's where I want to go though.
I think table stakes are an M1 to get in though.
Oh geez.
I got to tell you about this M1 situation.
Let's do it.
All right.
So why don't we, to get there, why don't we talk about what Intel had to say recently.
That they're sorry.
They've got a new CEO and he's, uh, he's shooting some fire.
He says that Apple is a lifestyle brand and that they have to deliver better products
in the PC ecosystem than that lifestyle company and corporate Tino makes.
Uh, we have to be good in the future.
He says, we should ship products that don't suck.
They gotta be good in the future, so problem solved, right?
I mean, my general strategy for 2021 is just suck a little less.
Yeah.
Like I kind of, I saw this when you put it in the doc and I was like, I actually thought
it was a joke.
I know.
And calling the Apple, which is one of the richest companies in the world with one of
the more interesting tech stories ever, uh, calling them a lifestyle brand is clearly
just trying to be demeaning to what used to be one of their best customers, but, uh, their
current CEO, Bob Swan is stepping down on Feb 5th, uh, 15th, 15th, 15th, not fifth.
And the new guy who's not a new guy at all.
In fact, I think he worked at Intel for like 30 years left and is coming back to replace
Bob Swan.
His name's Pat.
And he told him to be good.
I assume as a CEO, you don't want to say, you know what guys, let's just be really lousy
this year.
Really, you know, this year our CPUs are going to be hotter and slower.
That's the plan.
Right?
Yeah.
I think they're outsourcing some of that.
I think they've just kind of decided, fine, we're going to outsource the TSMC a little
bit for some of the manufacturing, um, we'll see, but, um, along, along these same lines,
there's been a lot of information that kind of just so happened to leak about Apple during
CES week, just news that just happened to dominate the CES news cycle accidentally came
out from Mark Gurman, which he, and also, so there's two, there's two sources this week,
both who have extremely accurate track records, uh, Ming-Chao Kuo and Mark Gurman have really
significantly pretty, pretty accurate track records.
They are saying that Apple has a brand new strategy for the, uh, Apple processor based
14 inch and 16 inch Mac books that will be coming out this year, featuring Apple Silicon.
And the big idea is get ready for this, the return of MagSafe, adding more ports back
and getting rid of the touch bar, literally just undoing and wiping away the entire Johnny
Ive era because the keyboard's now gone, touch bar is now gone and bringing MagSafe back
would basically wipe out Johnny, Johnny Ives touch on the Mac book.
Kind of admitting that the last five or six years or seven years or whatever it's been
of Mac books was a failure.
Yeah.
One of the things I love about my air is it does not have a touch bar.
Uh, you know, I guess I never really used it enough to care.
I don't know.
It just seemed fine, but yeah, it seems like extra taps to do basic things like turn up
the volume.
Every once in a while the touch bar gets weird, but we don't need to bash on it because it's
obviously going away.
That's the real meta story though, that in order to be competitive again, not just adding
a faster processor and just sticking with USB-C, but actually kind of considering additional
ports.
And German, you know, he's usually right.
Yeah.
I do.
I do worry about the MagSafe thing only because is that going to be a proprietary port now?
Probably I'd bet.
I'd bet it's still with charge over USB-C as well.
You get both, you know, just going to be confusing cause they've got MagSafe for the phone.
Also 21.5 and 27 inch M based Mac iMacs with edge to edge screens and a Mac pro mini with
a brand new display.
This is, this is, this is what they're claiming is coming this year.
And you know, we've been getting people that have read into the written of the show and
saying, Chris, you need to get an M1.
You need to experience what this is like because it's a pretty big shift and just reading about
it isn't sufficient to understand it.
And I have had that happen.
I feel like Docker is my most recent thing where, you know, we knew about Docker from
day one.
We talked to the, we talked to the original founders.
When they were still cloud, whatever their name, dot cloud, right?
So we got it, you know, conceptually I got it, but it really wasn't until I started deploying
my own services.
When I switched from using VMs to using containers, I was like, Oh, the application and the data
are totally separate.
I can destroy and stand up the application whenever I want, have the absolute latest
version and it just keeps on ticking and I can just package that up and send it around
the world.
That's amazing.
And then I got it right.
Then I really got why it's, why it's taken off like wildfire and people have said, it's
sort of similar, sort of similar with the M one max.
And I don't have a counter to that.
You've kind of suggested that's true as well.
So I've been thinking about what to do in that regard.
And I'll tell you in just a moment, lino.com slash coder, go to lino.com slash coder and
support the show.
I got to hold on a second here, a hundred dollars, a hundred dollars.
Obviously apparently crazy Linode is giving you a hundred dollars if you go to lino.com
slash coder, you get a hundred dollars in credit to use on Linode for 60 days towards
your new kids.
Can't be right.
Somebody verify this.
You know, Linode is our server provider.
We hear from people in the audience that use it all the time.
Listener Jeff use Linode to migrate a next cloud instance as a test scenario before he
went and deployed it on his land.
But while testing it, he realized, shoot, these Linode systems are so much faster than
my local box sucking down power.
He just migrated to Linode.
I just think that's so funny because it was a perfect test for him.
Like not only did he verify that he knew how to migrate the data, but then he's like, this
is way better.
But I use Linode to host everything.
I was just messing around with our matrix server today.
That's running up on Linode.
I've been messing around with peer tube.
Of course that's up on Linode.
Our backend infrastructure for JB 3.0, it's all Linode because you get fast SSD disk.
You get 40 gigabit connections to the hypervisors and 11 data centers around the world.
But they have this UI that sits on top of it with their cloud dashboard.
That's really intuitive, really clean, simple.
When you pull up one of your Linodes right at the top, you get all the vital information,
how to connect to it, what its address is, how to get a remote console.
And you come down from that, you get descriptions about its resources.
You get a snapshot of its CPU and disk and network IO.
And it's all just right there organized for you really intelligently.
And you can turn on and enable backups with just a couple of clicks.
You don't really have to be some sort of Linux expert to make it work.
But if you are, Linode doesn't prevent you from getting behind the scenes and really
messing around with stuff.
I remember one time I was setting up a mesh VPN system for my mobile router and I needed
to actually re-image Linode with their weird Linux appliance image.
And Linode actually had official documentation on how to do something like that.
Think about that for a moment.
Unlike entry-level service providers, they don't try to hide that stuff.
It's there if you want.
But if you never need it, you don't have to worry about it.
They're dedicated to offering the best virtualized cloud computing.
If it runs on Linux, it runs on Linode.
You can start with something that's $5 a month and build it up from there.
But with our $100 credit, try out a real serious rig.
Build something powerful and fast and have some fun.
Because it's delightful to use these systems.
And then they have great ancillary services like object storage, which is S3 compatible.
We have a system that is using their object storage for its video storage.
When we upload a video, it's actually using object storage on the backend to store it.
So our storage grows dynamically as we need it instead of carving off block storage.
We just use object storage and it works great.
There's tons of ways to use Linode from hosting a game server or a personal website to building
the backend infrastructure for your community and your company.
So go to linode.com slash coder, support this show and get that 100.
Did you check that?
Yeah?
Crazy.
Yeah.
Yeah.
We just checked it.
linode.com slash coder.
Get that $100 60 day credit towards your new account and support the show.
And I realized I'm probably, I'm not going to be happy with an M1 MacBook Air or even
an M1 MacBook 13, but the Mac mini, the Mac mini is right up my alley.
And I was sitting there up in my office and I was like, I could make these three monitors
work with a Mac mini M1 and I could really get an experience at least not for the battery
life, which sounds incredible, but for the CPU speed.
And I was debating what to do because I ordered a brand new Mac mini for Angela because her
computer just died on her.
Yeah.
And her, her battery in her Mac book has blowed up.
You know how the old, she has a really old Mac book, like maybe even before Thunderbolt
was a thing.
When they actually become improvised explosive devices.
Yes.
I'm familiar with that concept.
And so we had this massive power outage last week and I guess probably cause the thing
had to run on battery for the first time in forever or what, whatever it got real bad,
real fast, but because the power was out, she couldn't order anything for herself because
everything was down.
And so she drove to like Arby's to send me a text message because even the cell towers
were down.
We had a really bad storm and she sends me a text message and she's like, can you order
me an M1?
I'll pay you back.
Like what?
She's like, yeah, well here's the situation.
And so yeah, I went on there and I got a, I, you know, a maxed out M1 Mac book or I'm
sorry, Mac mini is 16 terabytes of Ram and two terabytes of storage.
But she has a billion pictures, so she had to go with the two terabytes of storage.
She just has no choice.
And you know, 16 gigs of Ram, what are you, what are you going to do eight?
Well, come on.
So yeah, I will get a little bit of a hands on time with it.
That's the deal.
That's the trade is for my time to set it up a little bit for her and do the ordering.
I'll get a little hands on time with the Mac mini M1, play with it for a few days before
I hand it off to her without having to buy one myself, you know?
So it's kind of a good hack.
It's not as nice as getting the experience, the laptop, but I think I'd have to have a
laptop for days and days, maybe a week or two before I'd be like this battery life is
changing my life anyways.
Yeah.
I mean, I'm going to tell you it's the laptop.
I don't want to downplay cause it's actually very good, but it's so good that you keep
forgetting how good it is until you're not using it in terms of the battery life.
I mean, right.
You just don't care anymore.
I can't believe we're and people are rolling their eyes.
I can't believe they're talking about this.
I'll tell you what.
I'll tell you what.
This is the state of things right now because you can go by our email and just all of the
stuff that's going on.
This is what people are talking about.
Mike and I were having a conversation before the show.
We're like looking at the hoopla and we're like, well, we could talk some more about
Parler.
Yeah.
I'd rather not.
You know?
So, and this is, this really, it seems to be the topic that has captured a lot of the
people in the technical circles.
I thought it was over.
I thought the hype bubble had passed to be honest with you, but then people are now receiving
their devices and our audience has been emailing in their experiences.
I also, we got email.
We got lots of emails from people on Intel systems and we had an email from an individual
who's on an X1 carbon and a Gallego pro, which I thought that was fascinating.
So I have an email back and forth with them asking them what it's like.
So we got a lot of hardware in this week, but the M1 was the clear winner and I thought
what a cool opportunity for me to get to play with it, set it up for Ange and then just
pass it on.
Cause it's never, it's not the right machine for me anyways.
No, I mean, I will pour a little bit of a bucket of cold poop on these rumors though.
I find it hard to believe that they're going to release a Apple Silicon IMAX and a smaller,
presumably you know, more modest version of the Mac, I'm sorry, the Mac pro in the same
year that just, and, and a new Apple display that just seems like a lot.
Well, I think it's sort of like a rip the bandaid off kind of thing possibly.
You think so?
It's like we're going for it.
Well, and also this transition has been in the works for a long time.
So they may have had a, they may have already had a couple of year lead to build these systems,
you know, maybe that's possible because they haven't been doing a lot with the IMAX.
They've just kind of been revenue and revenue and they haven't really done anything.
They haven't really changed the screen.
They haven't changed the big old chin, nothing.
And I've always thought they must be waiting until they make that arm transition and then
they're just going to roll it out.
And I wouldn't be surprised if that's exactly the case.
Well, it's going to be terrible when like the base or two step up IMAX trounce the IMAX
pros.
I'm just, you know, maybe if it's a little personal for me, but.
Well, I think that's what's selling them is the performance.
And you do wonder if it's already kind of getting to the point where it's pretty competitive,
what does it mean when it's even significantly more performant?
I don't know what it is in me that worries a little bit that it's, it's going to create
this exodus of the Intel market, which is just as absolutely ridiculous because I'm
only talking about one category of user, but I think that's the concern in a sense is like
if what if they have something here that's so significant that it kind of just makes
everything else look too old and slow.
Like I'm already feeling that a little bit.
Like I look at that X1 carbon, which I just got, and I'm like, uh, maybe I should sell
this thing because it doesn't really, I mean, it doesn't feel, it doesn't feel like it's
new and, and, and like the most modern thing I could be using as fast as possible.
And performance is a big deal for me.
It's something that's like, that's a serious thing for me.
It is, but I think there's a lot of the market who doesn't want to run Mac OS, right?
There's a lot of marketers, frankly on windows, right?
For various reasons.
Yep.
Absolutely.
I mean, the next market shares obviously small, but I guess I don't see a lot of platform
switchers because of this.
Maybe I'm wrong.
Right?
Well, your point about Mac OS is kind of a good one.
Yeah.
Not to talk about Parler, but to talk about Parler just a little bit.
It runs on excerpts cause that's all they could find.
Sorry.
That's all the rest has got.
I watched all of that go down and I thought to myself, this is probably why ultimately
it's better to build my own infrastructure where I can self-host my own software and
my services when I can and use a platform that isn't tied to a single company, even
for my computers as well.
And I wonder if I will get to a point where it just simply doesn't matter how good of
a system they make as long as it says fundamentally flawed that it's Apple that controls it.
I'll never be fully comfortable with it.
You know, no one tells me when or what updates I have to do with Linux.
Nobody tells me what software I can or can't run with an x86 machine and Linux.
And maybe that ultimately will end up being more important than having my applications
load a little bit faster.
I'm not sure because there's like ideals and then there's the actual like practical day
to day getting your work done pragmatic stuff about it, you know, like, but I have been
thinking more and more about how like that single source of control.
And it's also it's like the same.
It's the same issue with YouTube.
All these platforms where these big companies are controlling them.
It just takes them flipping a switch in San Francisco to shut your business down.
Well, I mean, I would say the YouTube situation is far more severe.
Okay.
I don't think, you know, if I write an app for Android or an electron app for a client
and Apple's annoyed, they're not going to, like, disable my MacBook Air remotely, right?
Right.
That's crazy.
Worst case with Apple's, they're going to disable a developer account or something.
Right.
But even then, you know, I will I will we've bashed them a lot over the years.
I will give them one thing.
They have never messed with my developer account for the consulting business, even when they
threw us off the iTunes charts.
Even they only like had an accident where they somehow missed the review or something.
Right.
See, it's funny because you mentioned YouTube and like that just triggered me a little bit
because like that is the kind of platform control that scares the crap out of me.
But the content stuff, because I somehow have YouTube red or gold or.
Yeah.
YouTube premium.
I had a Google Play music and I loved it and then they took it away from me.
So they gave me something else, so I don't I don't know, but it's kind of like how I
listen to all my music now, but they just kind of pick what I listen to.
And then you fall asleep listening to YouTube videos like I listen to like every once in
a while, listen to the Xamarin videos and I wake up and it's like some crazy right wing
dude.
Like, what the hell?
You're always three videos away for some crazy rabbit hole conspiracy theory thing.
It's usually like Jordan Peterson's the gateway drug and then you're just like, oh, yeah,
yeah, you're always you fall asleep for a few hours and then all of a sudden your Facebook
ads have dramatically changed three videos away from Jordan Peterson.
Like, I don't know, man, I just wanted to learn how to use this new XAML component.
So geez, there's a Python library I was curious about.
I mean, my whole thing with the M1 is I love it, it's great.
But if like System76 or Dell releases a Linux machine that can go toe to toe with this MacBook
Air, then great.
That's what I want.
I think competition is good.
I think, yes, I will say Apple's ahead, right?
But isn't this an opportunity for the other vendors to kind of get their ass together?
Well, I don't want to go all our mess on you here, but I don't think they're ever going
to because I mean, look at look at this.
Look at this.
We're 30 plus years into Apple being a thing and they're still laughing, everybody.
I mean, let's be honest about it.
They really are the build quality, the performance, the integration with the OS.
It's a dream for other vendors to have that kind of level of integration and control.
And we're not just talking about like control, we're talking about like some of these vendors
who are manufacturing things are on the line like their survival depends on Apple.
Apple has ultimate control of the supply chain relationships of everything from the chip
chips, from the glass that's on the screen to the bits, all of it.
And nobody's matching that.
I don't think people are going to catch up.
I think there will be equivalences.
There will be places where they maybe surpass them in some areas.
But as a whole complete product and package, it just Android hasn't managed to do it yet
for the iPhone.
It just doesn't seem to be happening.
Hang on.
That's scrolling.
Project Butter has been going on for seven years.
It's great.
That's a deep breath.
That is only a long time.
Listeners will get that.
Yeah, man.
And, you know, that just proves it doesn't.
And so but this is where I kind of channel my inner beard from RMS.
And I think to myself, what if that doesn't matter?
What if what ultimately matters is the computer does what I tell it to do in every situation?
But it doesn't.
But it doesn't.
You're always going to be running some proprietary hardware.
We're always running some proprietary drivers.
And frankly, even if they're not proprietary, there are 50 drunk Russians right now trying
to screw with the Mesa drivers or any open source driver you care to name.
Yeah.
So what you're saying is give in to our new dictator and long live Apple.
Now, what I'm saying is you have to adopt a level of cynicism that you have yet to attain.
And which is weird because someone in the chat is mentioning unfilter.
I listen to unfilter.
You're a cynic.
Yeah, I suppose sometimes I am.
Well, you know, with unfilter, it's more like I just pop the popcorn and I just watch the
crazy show.
And that's what unfilter really is.
But with this, it's like, I guess I look at this and I think this is my ultimate thing.
But just what if someday somebody decides, you know, those hippies who propose the free
software should take over the world, they're dangerous.
And somebody says, we got to shut down that Linux Unplugged podcast.
It's dangerous.
I'm going to be really glad that I'm not like making my entire living off of YouTube or
some other platform that could just turn off the, you know, the access like that.
And I think watching these last few weeks, there's something there.
I don't know what it is yet, but there's something brewing in the back of my mind where I'm like,
something has shifted.
The way I look at this has shifted.
And I bet for a lot of other people, it's shifted as well.
And I don't know if it's shifted for the better or not.
Maybe.
But I feel like something isn't the same anymore.
Is it possible that you feel that these for profit corporations have way, way too much
power?
Yeah.
I mean, that is definitely the case.
That's totally true.
Right.
I mean, the fact that Apple could effectively put any podcast out of business tomorrow seems
like a lot to me.
Seems bad.
Right.
Yeah.
Yeah, that does seem bad.
Yeah.
I guess Decentral, I've just, and it seems impossible because it really is just perhaps
that we're too late stage in it, perhaps.
And we're late stage, don't you think?
We have our big companies.
We have our app.
Are you going to say rent seeking next?
Because I...
No.
No, I just mean we're too late stage in development of this particular technological cycle.
You have your big players, you have your platforms, you have your silos, and nothing stays the
same forever.
But it's going to be this way for a while.
This is the new reality for quite a while.
Yeah, I mean, I think the worst case scenario you could possibly think of is like maybe
YouTube, but I'm thinking more of the app store.
As a developer, I kind of hate the fact that Apple controls it with such like an iron grip.
But as someone who does IT support for his family, that's why I make sure they get iPhones.
Good point.
Same.
Yeah.
That describes me to a T.
So I don't know.
So you're saying I want my cake and I want to eat it too is what you're saying.
That's what you're saying?
Who doesn't?
I have some reasonable expectations.
What I need to have are lowered expectations.
Well, you do run Fedora.
I like Fedora.
I actually like Fedora quite a bit.
I think it's a good little operating system.
It's no Arch.
It's no Arch.
Oh, Jesus.
All right.
Let's wrap it up right there.
I think that's probably it.
You know we're out of material if we're talking about Arch.
Go get Mike on Twitter.
He's at Dumanuku.
His company is at the Mad Botter Inc.
Is there anything else you want to mention, Mr. Dumanuku?
Yeah.
Don't forget the Coder QA.
Subscribe.
I think it's $10 a month.
Cheaper than that.
It's even cheaper than that.
Even cheaper.
CoderQA.co and you get a limited ad feed as well.
You get the Coderly report.
That's out.
It's awesome.
So go get that.
If you haven't got it, I don't know what your problem is.
CoderQA.co.
It's cheaper than Disney Plus.
They spent all their money on M1 Macs.
That's their problem.
That's what it is.
Yeah, that's what it is.
Yeah.
I'm at Chris Lass.
The network is at Jupiter Signal on the Twitter.
Twitter, which is a horrible platform you shouldn't use.
And the show is at Coder Radio Show, but I wouldn't follow it because it's Twitter.
Links to what we talked about today, they're at coder.show slash 397 and our contact form
there is too.
Thanks for joining us.
Join us live next Monday.
See you next week.
Thanks for watching CoderQA.co.
