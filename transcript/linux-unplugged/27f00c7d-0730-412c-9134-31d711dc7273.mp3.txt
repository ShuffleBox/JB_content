This is Linux Unplugged Episode 30 for March 4th, 2014.
Welcome to Linux Unplugged, your weekly Linux talk show that knows this call is being monitored.
My name is Chris.
My name is Matt.
Hey there, Matt.
We've got a great show coming up this week.
So last week, in episode 29, we talked about ourselves a lot.
We talked about the new How To Linux show, and oh my gosh, we got like 40 to 50 emails
just on that topic alone.
It's blowing my mind, and everybody has a great idea.
So many really good ones, but I just thought like we couldn't go through that again because
this week, I want to help somebody troubleshoot some battery life problems with their laptop.
They've been running Arch for a long time.
They switched to OpenSUSE, and all of a sudden, way better battery life, and they're trying
to figure out why that might be, so we'll kick that topic around with our mumble room,
and I know you've got some battery tips that you might be able to pass along, and later
in the show, we're going to chat with some of the developers from the Talks Project.
Now Talks is a new up-and-coming open source project to essentially replace Skype, to have
a secure peer-to-peer Skype replacement, and there's a lot of secure messaging programs
that are coming online in 2014, obviously as a reaction to the leaks from Edward Snowden,
and I think it's going to be really fascinating to watch these as they develop, and particularly
because of my focus on the desktop, I've been drawn to ones that are starting with a desktop
application.
A lot of the ones you're seeing kind of come out of the response to Edward Snowden are
mobile applications, which is fine, I want to see a mobile app too, but I'd also really
like to have a desktop component, and Talks is starting there, so we're going to talk
with them in a little bit, and ask some questions that our audience has submitted in, and then
we've got some mail sack we're going to get to towards the end of the show too, so big
show today, Matt, big show.
It might be a really kind of tight show, depending on how long, it could be like a big show in
terms of what we talk about, but a shorter show in terms of length, you never know.
I shouldn't say that though, it probably would curse us.
So let's start with a topic that I wanted to bounce around.
This is a problem that Gagero wrote in about, he says OpenSUSE has better battery life than
Arch on the same rig, can you guys help me figure this out?
And he starts out with, you know, he says, hey guys, I'm in love with my Arch Linux install,
well actually it was Integros, have you made the switch with you guys during the Arch challenge?
But I recently gave OpenSUSE a spin, and while it has some things I really like, I'm ready
to switch back to my Arch install.
However, I'm finding it very difficult for one reason, battery life.
Even with similar power management rules, running KD on both distros, the battery life
on OpenSUSE has been insanely better.
The trade seems to be that OpenSUSE is a lot slower.
I can't figure out what the actual difference really is though, I've been digging in the
Arch Wiki for suggestions, but with school in full swing, I've been unable to find time
to figure out a solution, and I've grown very comfortable with not having to hunt for outlets
everywhere I go.
As I've said, aside from auto-dimming the screen and auto-suspend settings, I can't
really figure out where OpenSUSE is getting the dramatically better battery life, but
Arch has proven to make my lap be very power-thirsty over multiple installations, even with an
Arch proper installation.
Your loyal JBViewer, Don Gerro.
Well, so my experience between the two distributions is it seems like OpenSUSE definitely has some
moderate configuration stuff done for you.
I wouldn't go so far as to say they did laptop mode tools or something like that, but they
definitely have something going on.
On the Arch side of the fence, laptop mode tools will do you no good because it's a completely
different kind of setup, and out of the box, it's not designed to give you any power savings,
it's designed to just run.
If you go to the Arch Wiki and go to the power savings portion of it, all the tips you need
for a laptop are in there, and if you enable every single thing, including down from UDev
all the way up to the kernel modules and whatnot, and actually look at all those different things,
enable them, write back mode, the whole package, you will indeed see significant improvement.
This concept of battery life being different between distros is interesting to me, because
aside from driver versions and kernel versions, it seems like things should be pretty normalized,
and I've always found the newer kernels recently have provided better battery life.
Early three kernels had power regressions, but I've always noticed that when I've upgraded
my kernel to the latest kernel, I've usually seen an improvement in some component that
results in some better battery life, like maybe it's better support for the Intel graphics,
or maybe it's a better Wi-Fi driver and that results in less broadcast usage, or whatever
it is, it always seems like the newer kernel has always been what solves it.
I've never really specifically tested this thing, you know, like put Ubuntu on a machine,
put SUSE on a machine, and then put Arch on a machine and timed the difference.
So, basically, my experiences are based on, if I install PowerTop and I run it on a default
Arch installation, you're going to be, and you go over to tunables, it's just bad up
and down.
That's just what you're going to see.
Bad, bad, bad, bad, bad.
What you want to see is lots of good, and if you want to do that, that's why I would
actually recommend the power savings section for that, because now on OpenSUSE, I recall
there was some bad, some good.
Now I noticed there was more good enabled in PowerTop than there was.
Oh yeah, PowerTop's a great tool, maybe you should run PowerTop on both installations,
so you guys have any ideas on what he could check to see why OpenSUSE is getting such
better battery life than Arch?
Yes, try CPU power, because I noticed CPU power behaves pretty good with system D.
Yeah, you think maybe there's like a moderator set?
I'm pretty sure, because I know in the kernel, Arch has performance mode enabled by default
too.
That's right.
Oh, interesting.
Yeah, so if you modify the on-demand driver for CPU power, whatever it's called, it'll
be pretty good after that.
Yeah, CPU freq's another thing to check to see if maybe…
Actually, CPU freq is not so good, so I think that's been depreciated.
Well, isn't CPU freq not just a tool to read what your current frequency is?
Because I'm wondering if maybe there is more aggressive frequency scaling maybe under OpenSUSE.
Probably.
Yeah, there's a number, I've never really driven too deep into OpenSUSE specifically,
but I do know that they have some stuff enabled by default.
I'd like to play with this some more, I think.
I think I would like to try this out.
I think this would be an interesting, this almost could be an interesting roundup.
Is there the ultimate battery saving distro?
Because you know, on Sunday I'm going to review this C720 Chromebook here, and I can't
even…
Oh, you will not want to do it without using the power saving portion.
No, I can't.
Oh, you know what's crazy?
It'd be painful to use otherwise.
No, it's not, I mean, so I think I could get maybe another hour, I don't know, I
should try it to be honest.
I will try it before the review.
Yeah, I mean on my netbook I can squeeze like an hour and a half to two hours difference.
Really?
Oh yeah, I mean it's a big deal, but you got to go through every single thing on that
power saving area.
Okay, so CPU freq was renamed to CPU power.
So I'm getting like, I don't know, I'm going to time it for the actual review right
now, but I think I'm getting like seven hours of battery life with the C720 running
arch.
So I'm going to, I'll install, I'll go through that arch wiki that you mentioned
and I'll dig through that and see if I had to do some of those tweaks if I can even bring
that up a little more and then I'll time it, I'll try to get like some use case
timing done in time for last on Sunday.
But I find this whole concept, maybe once I get this review done, maybe I should load
OpenSUSE on there and see if there's a big difference.
And if there is, then I might try it with other distros too.
TLP is also cool, as someone in the chat room actually just mentioned just now.
That's definitely good.
I'm really, really careful with it because it's one of those things to where you can
just end up breaking something and then you have to like go back and figure out what you
broke.
I also like the idea of checking like IO top and using IO top to see what's hitting your
disc because it could be possible like by default, maybe the KDE, maybe some search
indexer like the KDE search indexer is, I'm sorry, the plasma desktop search indexer is
set to a more moderate aggressive level or who knows, right?
I mean, I'm just throwing things out there.
So IO top would reveal that if something was hitting your disc a lot.
True.
That's very true.
If you have battery experiences and you want to send them in, please do.
But include, if you're using an SSD, your generation of processor and your GPU and relevant
like screen size info and things like that so that way we can take that into consideration
when we're talking about this stuff.
So we talked something, really, I mean 99.9% of our feedback was about the how-to show.
It was so many ideas that it's kind of blowing my mind and it's freaking me out a little
bit because there's a lot of ideas that completely are in contradiction of what the next email
says.
And so it's gotten me a little worried that so many people are kind of disagreeing with
each other without realizing it like, well, I get an idea where somebody will say, take
a topic and really spend some time with it and make three or four episodes out of that
single topic.
And then the next email will say, only one episode.
Make it as long as you need to get to one topic.
Don't stretch it out.
I won't watch it if you do that.
Like all this different, or one that my favorite, which would be awesome if we had a staff of
40, my favorite suggestion was do an intro video that sets up the problem.
Like here on How To Linux Today, we're going to show you how to do X and then kind of talk
about a little bit.
Then that stops.
We're going to do a five minute video and then have like 20 or 30 sub videos that then
the person would click on that would be how to do it in Ubuntu, how to do it in Arch,
how to do it in OpenSUSE, how to do it in CentOS, how to do it in Debian, how to do
it in et cetera, et cetera, et cetera.
And I could see how that could be really handy for the Linux community.
But yeah, it has a lot of, can you imagine from the production standpoint, from a production
that it'd be a nightmare.
But not, I mean, it's like, it's one of those things where it's like from an archival point
of view, it's awesome.
From a show point of view, it'd be a nightmare.
Yeah, yeah.
So what I, you know, I think what I can tell you is it would be really interesting to see
if maybe the community could come in and a few people suggested this.
Maybe the community could come in and provide the documentation for the distro they love
that we didn't cover.
And so that starts to, that's got my wheels turning on how we could build an interactive
community website that would provide a written documentation version of what we talked about.
We would have one official probably that would match the show, and then maybe we could have
multiple versions for different distributions that the community could tribute.
And maybe we'd have to have like three or four or five or six or seven originally hand
selected contributors at first to make sure it was good, and then kind of grow it from
there.
But it's something, you know, it's a lot of feedback we're taking in.
I'm going to try to send out the official like, hey, we'd like you to be our producer
email this week, so we're going to have that finally done, I hope.
And we, between that and the new studio, we've got a lot on our plate right now, but I feel
like we're, there's a lot of people out there that want this.
But the other topic we talked about last week besides that, that did get one response, is
the one here from Alex, and that was about Outlook's inertia, and we talked a little
bit about the exchange problem that Linux switchers face.
He says, thank you for the wonderful shows, I got to start it with Jupyter Broadcasting
back in the stoked days, recently came back after finding BSD now and then TechSnap and
last and unplugged and go to radio, et cetera, et cetera.
He said, listening to Linux Unplugged 29, there was a comment made about needing exchange
or MAPI compatibility, or essentially Outlook.
As someone who has been trying to migrate the small business he supports over to Linux,
the big issue I see is that open source groupware packages, both server and client side, really
do not measure up to the standard that is exchange and Outlook.
For all of its wards, Microsoft has gotten groupware mostly right, when you have requirements
that mail be hosted internally, and unique groupware and mobile sync, the choice, currently,
is exchange.
Zimbra keeps getting passed around like a hot potato, I have used most of my two free
months of DigitalOcean trying out Zimbra with OpenLDAP, I've got it working, and others
don't seem to be, but others don't seem to enjoy all the functionality yet, any suggestions
would be appreciated.
Alex, oh man, so, you know, what do you like, do you have like a calendar contact sync system
you use?
Are you using like Google, Matt?
What are you using?
Well, right now I use a little bit of Google, that's pretty much where I've fallen into
at this point.
For one of my gigs, I have to live in a Microsoft space, and so we use Exchange, and anyone
that tells me it's flawless has not spent much time with Exchange, in my opinion.
It's painful.
That being said, it is less painful than a lot of the open source groupware solutions,
as was pointed out, and so I agree with that, I mean, that's actually accurate.
But none of them are really that good.
Google honestly, while it's missing some functionality that I would like to see, I'd say it's probably
the least annoying.
They're all annoying, but I'd say it's the least annoying experience that I've ever dealt
with.
The nice thing about Google is you don't have to deal with the back end if you don't want
to.
Right, yeah.
I mean, I don't want you to understand that your stuff's open to whatever, but it is anyway,
so yeah.
Yeah, gosh, that's the part.
I mean, I'm not a huge fan of that part, to be honest, but I think, you know, I like Zimbra.
I just think what the problem is is Exchange, you sort of create a workflow around Outlook
and Exchange, and when you move to one of these other options like Zimbra or any of
the other ones that are out there, it's a different workflow, and if you started on
that, it would be fine.
But because you've trained, you know, those mental pathways in your brain are laid down
for the way that it's sort of like why I sometimes have a little bit easier time using Gnome
is because honestly, I learned a lot of things the Gnome way, and so it's just way in my
mind like that's just the way the neural pathways are is like the electrons fire faster down
those paths, and it's the same thing for Outlook.
If you've learned how the whole Outlook calendar system works, and I know people out there
like depend on the rich text formatting of Outlook and all this kind of junk that Outlook
does, but to them, it's an essential part of the job, and sometimes these replacements
do it differently.
Sometimes they don't offer something at all, so a lot of times people say they don't size
up.
In reality, it's just different workflow, I think.
Yeah, I'd say workflow, and muscle memory in general, I think, is a real tough one to
get past, regardless of what your skill set may happen to be.
I mean, muscle memory kind of rules the day.
Colab is a great choice.
Chatham is right now talking about Colab, and you can find them at colab.org.
It's a free software initiative building a unified communications and collaboration system
that you can install on your own server, and it offers a lot of the functionality that
we talk about a lot that Zimbra also offers, and Colab's on my short list of like the three
that I'm going to be considering installing for Jupyter Broadcasting this year.
This is one of the goals.
I don't know if I'm going to get to it, because right now, this is one of those things where
Google's doing a good enough job, and I don't feel super pressured to replace them, even
though I know there's a privacy problem there, and a lot of other issues there as well, tracking
and all that kind of stuff, but because it's my work email, it's not like I have some sort
of dirty exchange with some bankster in there or something like that that I don't want to
get caught, right?
I mean, it's not like... It's my work email, and most of the email that's in there gets
read on there anyways eventually.
This is true.
This is very true.
So I'm not super compelled to do it, but I am looking into my options, and Zimbra and
Colab are on my short list, so I actually really thank Alex for sending that in to us
just so I can get his thoughts on it, because to tell you the truth, I'd probably roll it
out on a DigitalOcean VPS too, which means I should probably stop right here and thank
DigitalOcean this week for sponsoring Linux Unplugged.
DigitalOcean is a sponsor of the Linux Unplugged program, and as you've heard, a lot of our
audience is finding really awesome ways to try out DigitalOcean.
Now you're not familiar with DigitalOcean?
Well, I'll tell you right now.
DigitalOcean is simple cloud hosting dedicated to offering the most intuitive and easy way
to spin up your own cloud server.
You get root access to this bad mamma jamma, and users can create a cloud server in 55
seconds.
I bet Alex was in the 40s somewhere, although he didn't say in his email.
Pricing plans start around $5 per month.
That gets you 512 megabytes of RAM, a 20 gigabyte SSD, yes, an SSD makes a difference on a VPS,
trust me, one CPU, and a terabyte of transfer.
A terabyte of transfer, like if you're using this for email or like Yassi search or a pastebin
repository or a BitTorrent sync server, a terabyte of transfer is going to get you a
really far, a long ways.
Also DigitalOcean has data center locations in New York, San Francisco, Amsterdam, and
now Singapore.
They have a simple intuitive interface, but if you want more power, you want to automate
some stuff, you can also implement your own set of scripts and things like that using
their straightforward API.
For example, you might want to utilize their API to automate image backups of your VPS
systems, and they have a system to let you do that, but here's the best part.
You can get a $10 credit to try out, they have a $5 rig, that's the one I told you about,
$5 rig, you try out their $10 credit, you're going to be able to use it for two months
for free if you use the promo code LINUXUNPLUGGEDMARCH.
Brand new month, DigitalOcean is back, because you guys have been loving them.
We've gotten a lot of people to try it out, and you can go over there right now, use the
promo code LINUXUNPLUGGEDMARCH, you get one of these bad mama jamas for two months, you
get tier one bandwidth, connected to those SSD hard drives, and backed by KVM virtualization.
It's a really good system.
They also have hourly pricing if you just need to test out your app.
They also have images that are set up and ready to go with Lampstacks or Docker.
They support Arch, Fedora, Ubuntu, all of the stuff, CentOS, all of it.
They have two-factor authentication, backups and snapshots, all that good stuff.
So go over to DigitalOcean.com, use the promo code LINUXUNPLUGGEDMARCH to get $10 credits,
you can try it out for two months, and I think you'll see, I've been talking about them for
a while now, and also a big thank you to DigitalOcean for sponsoring Linux Unplugged for the month
of March.
You guys are awesome.
Love it.
All right, Matt.
So I want to welcome two developers from the TOX Project onto the show.
Joining us on Mumble right now, we have STQ and I run Gentoo.
So I know TOX started up as sort of a discussion thread, and I'm told, I think it started on
4chan, and now here we are, we're what, seven, eight months down the road, it's become a
very active project.
So where is it at from where it started versus where it's at today?
Well, TOX started as, well, I actually, I had this idea, this very basic idea, and then,
well, I was on a thread on G, that was speaking about how Skype is, well, privacy issues with
Skype.
So, well, I had just, well, I just decided, okay, hey, let's, I was actually a bit maybe
drunk at the moment or something, and I said, okay, let's make a Skype replacement.
So that's how it started.
And then, well, I was very impressed by the positive response from everyone.
So I said, okay, let's start writing code, let's start planning stuff, and that's how
TOX started.
So it started kind of as a crazy idea that maybe after you thought about it for a little
bit realized, this could be a good idea.
Have you worked on this kind of stuff before or something like this before?
Well, I played around with some BitTorrent DHT, I did a couple of scripts to, I once
made a script to find out which, to try to track everything on the BitTorrent DHT.
But well, there were some little bandwidth issues, well, I would have needed a big server
and something, so the idea kind of died, but that gave me a bit of experience on how peer-to-peer
software works and everything, so that's, that's how I...
Yeah.
Well, can you tell me a little bit about, and I guess it's actually pronounced salt,
but the networking and cryptography library that TOX is sitting on primarily, is this
the big piece of functionality here?
How does, what does this component play?
What role does that play?
Well, that's the, it's, I seriously, I like that crypto, I love that crypto library.
It's very simple to use and everything, and it's very secure.
I don't think TOX would have worked without it.
It's since, well, TOX, when TOX started, we didn't know what crypto library would use.
Right.
That seems like a huge choice to make, right?
Yeah, but then someone suggested it in a thread, and then I looked at it, and I just saw, this
is perfect.
It's simple to use, it's fast, it's very secure.
It protects against all types of timing attacks, et cetera, so that's, so we picked that, and
I started reading a lot, okay, so how do I implement this correctly in TOX without screwing
up things?
Well, that was my question, because I've heard that, I think also the Telegram Messenger
program uses the salt library, but I guess they maybe, I don't know the details, but
I guess they've implemented it incorrectly.
Have you looked at that situation and tried to kind of balance what they did wrong and
adjust accordingly for TOX?
Well, Telegram, they don't use the salt library, they use their custom crypto implementation.
If they would have used the salt library, their crypto would have been fine, nobody
would be complaining about it.
Right, gotcha.
So something that seemed kind of like a big deal, you guys got accepted, the TOX project
got accepted into the Google Summer of Code, but you know a lot of people have asked, is
that going to influence the project in any way?
What about their independence?
What are your thoughts on the Summer of Code and what it means for that aspect of the project?
I'll go ahead and answer this.
Sure.
Well, I think with Google Summer of Code, we're really going to be able to finish a
lot of things that we wouldn't have the time to do that, due to our prior commitments we
would never be able to do.
We would be able to have people who have different skill sets in areas we might not have, it
would be able to help out that way.
Okay, so, and you know, what about this criticism that people have said, oh well, this is a
bad sign, this is about influence, what do you think of that?
Has there been communications from Google about suggestions or anything like that?
No, they don't do anything like that, they just purely foster the development of open
source projects, no secret influences, no link to this secret library, nothing like
that.
No insert go to fail line here, that's good, that's good considering that, you know, there's
a lot of hopes riding on a secure messenger and I got to tell you guys, this is a pretty
contested space right now.
So I think people are looking for a lot of things to pull out to kind of criticize on.
And to that end, I think, and I didn't, I don't really know if there is something to
be worried about here, but a lot of people have criticized that they started as a threat
on 4chan and have you guys dealt with growing pains as a result of that?
Well, we didn't start like that, but as we developed, we got people with skill sets from
Reddit and all these areas and sort of nurtured.
That's exactly, I mean, so when I, I mean, not to interrupt, I'm sorry, but when I, when
I, so I've seen this question, it was sent into our show a few times and to me, it just
seems like these are locations that technical people hang out.
True, so 4chan specifically, that little area is a lot of trolling.
I think it was pure luck that the people who we have now, that all the skill matched up
just perfectly.
Yeah, yeah.
Well, I, and I, and I know, I know it's something that's on people's radar and it maybe seems
like one of those things down the road.
It probably, it, it probably won't be as big of a factor, but what are any other growing
pains you guys are seeing as the project is becoming more aware, people are becoming
more aware of it?
Not really.
Well, there's always a bit of issues, but we do, we, we've dealt with them and it's
good.
Well, okay.
So that's the big picture stuff.
I want to talk a little bit about maybe features and stuff that talks is hoping to support
down the road.
What are your plans for three, there's three major things I've seen requests from the audience.
Uh, conference call setups.
Do you guys have any plans to do things like group calls and things like that down the
road?
Yes.
Okay, good.
What about multiple presence?
As in I can be logged in on a, on multiple computers and the message goes to all locations
or maybe I'm on my, I'm on my Android phone and I'm also on my laptop and I want my messages
and calls to go to both locations.
Is that possible with the security model you're using now?
You know, we haven't worked out something like that just yet.
We're still working on a lot of our group chats, how we can do audio and video, how
we can do things like that, but when the time comes, I know we'll be able to reach that
area.
Yeah, it's a, it's possible, but, uh, it's a later after, after we've done the TCP stuff,
after we've done the, the group chats and the work and, uh,
So is that how you're focusing right now?
It seems like the talks clients that I've tried are all text chat based to get that
working and then as the plan to then to get the next set of functionality working and
then the next.
Yeah.
It's a, it's how, uh, well, I think it's the best way to develop software to, uh, do make
a feature, test it correctly, add another, add another, and, uh, that's, uh,
So what's on your immediate list and then what's on your sort of, after I get this next
immediate problem solved, after I get this thing that's bugging me fixed, I really want
to start working on.
So what are those two things?
Well, we have first the, the thing that I want to finish first, well, that I'm working
on right now is, uh, the TCP, uh, TCP stuff so that, uh, I want to add a TCP relay functionality
to talks, uh, node so that, uh, people that are behind bad knots and, uh, can, uh, can
also use stocks currently talks only works people with that can, uh, hole punch through
their knots.
Okay.
But that's not everyone.
Yeah.
Some people are behind enterprise knots, some symmetric knots that are weird and on and
block certain, uh, like, yeah, they only have a maximum number of UDP connections that can,
well, that can be a problem because, well, talks needs to connect to a bunch of people
for discovery.
Yeah.
Yeah.
So, okay.
I look at this and I think if talks was really successful, I, if, if you could truly create
a Skype replacement that was secure, you would have a system that would be used by, by journalists,
by dissidents, by the paranoid and by cheaters.
And, uh, it would be this, these groups of people would fundamentally rely on this technology
to be absolutely iron clad solid.
Have you considered code audits and, and maybe you add a certain like quote unquote official
release point saying we're going to audit the code, have a third party look at the code?
Well, yes, of course, but we want to wait till a lot of our major features are done.
And talking about what you mentioned earlier, we're designing talks to be something that
everyone can use someone talking, someone somewhere.
I have no idea what I'm saying right now, but long story short, we want to design something
that's so fast, so easy, so smooth that people would use it instead of Skype.
I mean, we're not going to truly accomplish our goal unless everyone's using this, unless
there's nothing that can be spied on, nothing that can be new.
Security isn't a selling point for end users, but we want to give it to everyone.
That's an interesting way to put it.
I mean, it's definitely, it's definitely for some, but yeah, you're right.
For the general user, it's not really, it's not really a big deal.
Uh, you know, the only really other question I had sent in from the audience that was kind
of kicking around is, uh, how do you guys plan to make money and are you going to take
donations?
No, we might take donations and so Gentoo's been talking about it a bit, but right now
all of our expenses, our build systems, everything comes out of my own pocket and I haven't really
been taking anything in.
Well, you're a good man, SDQ.
So have you considered like a donation system or like a Kickstarter system or something
like that?
Um, can you repeat the question?
I couldn't hear you.
Are you thinking about, are you guys?
Cause the reason I'm asking is we had a few people send in like longplay wrote in and
asked if, uh, you guys would, he wants to send you money, but he couldn't find a way
to donate.
Are you considering doing a donation model?
We might put a donation button on the website because the reason I didn't want donations
to, well us accepting donations at the beginning is, well, what if, uh, we just started and
then everything fails and well, people are going to be angry and everything.
But well, we've, uh, we've gone a long way from there.
So we might, uh, that's good.
It's good.
Yeah.
Yeah.
You want to make sure you got something that, uh, you can, you can show for before you ask
people to start taking money.
Well, also I'll open it up to the mumble room and see if there's any questions that the
group has.
Um, and you guys, if you do just ping me in the chat room with any questions you have
for the folks and we'll, we'll get through those and the chat room, I'm also checking
your questions as, as we go, but, uh, guys, I want to thank you for coming on Linux Unplugged.
As this project I'm going to be watching, you know, I'm, I'm still really interested
in picking the mobile messenger of the future.
And right now the Jupiter Broadcasting Network really kind of uses Skype a lot for our shows
because at the end of the day, it seems to be the, the sort of the best combination of
deployment and ease of use and actual video and audio quality simultaneously.
I'm really excited about the talks project.
We talked about it a little bit this last Sunday on the Linux Action Show and I demoed
a couple of different apps you can use for it.
It's early days right now, uh, but, uh, I, I, I want to encourage you guys to keep going
at it, keep working at it because this is a space that people are going to be more and
more interested over the, uh, the next couple of years.
Crossroads asks, uh, how does this compare to other chat programs, e.g. BT Chat or Tor
Chat?
And actually that's a great question.
Have you guys seen the announcement of Tor Chat and what are your thoughts on that versus
talks?
Well, Tor Chat is, uh, they're going more on the anonymous, uh, well, they want to make
an anonymous chat, but, uh, talks is, uh, isn't anonymous.
You connect directly to the people you're speaking to because, uh, we want performance
because, well, streaming, uh, high resolution video through Tor is, well, doesn't really
work well.
That's true, right?
Yeah.
That's a great point.
Yeah.
I hadn't thought about the video aspect of it.
And to reiterate further.
Yeah.
Go ahead.
I mean, we're trying to design something that everyone can use, not just the paranoid.
Well, and, and to that end, is that why, I mean, I'm seeing a lot of, a lot of different
talks clients.
There's not like one official talks client.
I guess it would be conceivable that you could have chat programs like Pidgin out there and
others that support talks and Tor Chat at the same time.
Right?
Yeah.
Pidgin for a, there's a talks plugin in development already.
So it, uh, it already supports, uh, talks, but very good.
That's very interesting you guys.
And, uh, I'm glad you're working on this to tell you the truth because, uh, one of my
predictions for, uh, the, the, uh, the Linux action show for 2014 was that there'd be an
explosion in secure messaging.
So you guys are right now confirming my prediction.
So that's awesome for me.
Most definitely.
Yeah.
I know, right?
Uh, so you guys, I know, I know you guys probably are not big fans of giving out timelines,
but do you have a general big picture timeline or roadmap of when features will roll out
or be available?
I can tell you the, well, the order at which we're going to roll them out, but timelines
are a bit, uh, I'll take that.
I'll take order of that.
You want to roll things out for sure.
Well, first of all, we're going to roll out the TCP relays.
Then after that, we're going to work, uh, on, uh, fixing our group chats and making
audio video work in group chats.
And well, that's the two main, that should take a while because they're, they're two
very big, uh, features that they're going to need lots of testing and everything.
And after that, we're going to concentrate on, well, whatever, uh, well, maybe optimizing
code or, uh, trying to implement other features like offline messaging and like how someone
who wants to be logged in at two computers that might, uh, might work on that.
It depends on, well, what we feel people want the most.
What they're asking for.
Yeah.
Well, let me ask you this.
What if somebody, Daredevilin's making a great question, making a great point in our chat
room.
What if, what if you, uh, were, uh, you wake up one day, you go to slash dot or tech meme
or Reddit or whatever, and you see a top headline, new secure messenger launched available
on Android, iOS, and the desktop, um, it's, it's awesome.
It's rock solid.
And you dig through it and when you see they're charging, they're charging for the app and
then you'd read through the details and you realize, holy crap, they're using talks.
How do you feel about people creating clients or potentially business models on top of a
system that you're building today?
Well, the core is licensed under the GPL v3, so they can't take the code and not give the
source back.
So well, if someone does take it and improves their source and if they make money, I don't
care if they, because they're improving the software.
So Daredevilin, I didn't realize you're in here.
Go ahead.
And did you have more you wanted to add to that?
Daredevilin?
No.
Sorry.
I'm here.
Can you hear me?
Yeah.
Yeah.
So what happened is, uh, the reason I got this question is because, uh, I was wondering
more, uh, I know it's GPL and people are contributing back, but there's kind of business models
that could involve, for example, a company making their own nodes in a way that, um,
will allow them to mimic users.
And I mean, depends of course on the intrinsic of the project, but then goes to something
that is something a little bit deviated from original tax plans.
And it goes like uses stock source code.
It uses all like, uh, like, uh, bitcoins, litecoin, that kind of thing.
Yeah.
It's kind of, sorta.
So it will be with some differences that will make more, uh, a company driven perspective
and not actually providing the users direct access.
So what are the measures in place for you to incentivize people to just come to your
project instead of just working, doing something crazy that goes completely out of town?
Well, if, if a company does something like that, well, and users actually use the software
from that company, that means they're doing something good.
So that's a win for you.
Well, we can always take the code out and put it in our, in our project.
And so, uh, Josh, go ahead.
That's a good point.
It's like, okay.
Oh, okay.
I mean, that's an interesting way to think about it.
Like openBSD makes SSH and they give it away for people to do whatever they want with.
Right.
Great point.
I mean, that's, that's an interesting way to kind of frame that.
Uh, Josh, you had a kind of a question more about funding, right?
Yes, I did.
Um, so you guys talked about maybe monetizing or accepting donations in the future.
So what is your opinion on allowing, you know, people to back certain features with something
like Bounty Source, uh, and allow you guys to get paid to like implement certain features
like group chats and maybe help speed the process along or provide some sort of monetary
incentive?
You know, I think something like that really hurts people's trust if something doesn't
meet a timeline, if something looks good, looks like it's easy to do, but it doesn't
come up and it ends up taking a lot longer than it should or something.
People will get disappointed.
Well, the main issue is that implementing something is a relatively easy implementing
something that's bug free and works perfectly.
That's a, that's hard.
So well, that's a, that's an interesting point.
Yeah.
You don't, yeah, I, it is.
So it's something to consider, I think, because it's really fascinating to really, it truly
tells you what, what people's priorities are when they assign a dollar value to it in a
way that is so much more tangible than, than emails and, and bug requests and all these
things when people are actually willing to put money down for something, then you really
know it's, it's literally of a value to them.
Uh, so I, but I do understand you don't want to overset expectations and you guys seem
to be, you know, uh, walking that line pretty closely.
Uh, I'm going to take a quick break right here and when we get back, I want to talk
a little bit about maybe your thoughts on the future of, uh, mobile for talks, but first
speaking of mobile, I want to thank Ting for sponsoring Linux Unplugged.
Go to linux.ting.com, yes, linux.ting.com, that's how awesome Ting is.
Now what is Ting?
It's mobile that makes sense, my friend, my mobile service provider, and of course Matt's
mobile service provider.
You bet.
And Ting has no contracts, no early terminations, and by the way, you only pay for what you
use.
It's a flat rate every single month, and then just your usage on top of that.
Every Ting plan includes hotspot and tethering, so you just go on Android, you just check
that box.
Every device you buy, you own it, so you're not anitizing that cost over like two years
where you're still paying into something that's not nearly worth that, plus they have a super
awesome dashboard that supports web standards that is, while simple to use, extremely powerful
unless you set up a whole bunch of stuff you want for your phone, and they have no hold
customer support.
But what I really like about Ting is they're actually good people.
They're a good company, they're good people, and they care about their customers.
I'll give you an example over on their blog.
They just posted yesterday six simple steps to save money on your smartphone mobile data,
and they go through some of the big apps that a lot of smartphone users use, and a lot of
the settings that already exist in those most popular apps like YouTube and Google Maps
and Chrome and Facebook and Spotify and Gmail, they have all these different settings you
can go through to actually conserve bandwidth, to save a little bit of money, and they've
done posts like this in the past, too.
They talk about Opera Max, for example.
They've done posts like this on the minutes spectrum, and this was, Ting is, because the
way Ting is structured with their flat rates and the pay for your usage, they really have
a system that allows them to super serve the customer and not try to nickel and dime you
like every other carrier does, and even the carriers that pretend like they're trying
to make a big difference, they're actually still nickel and diming you.
So go over to linux.ting.com, that'll save $25 off your first Ting device.
If you already have a device that's compatible with the Sprint network, well then bring that
with you, and then Ting will take $25 off your bill.
They'll give you a $25 credit.
By the way, they've got an early termination relief program, too, and that's awesome, because
if you have a contract and you know that they're screwing you, you know you want to get out
of that contract, you're sick of the BS, all you have to do is grab your Ting device, port
your number, and then you submit an ETF claim over to Ting, and they'll pay you up to $75
per line that you had to get canceled.
And then once you get in there, the savings is crazy.
In fact, check out their new savings calculator.
They've updated it recently.
If you have Verizon or T-Mobile or AT&T, you can plug that in there.
It'll go get your bill information for you.
If you don't, you can just plug in your data like you normally would, tell them how many
cell phones you got, and then they'll tell you how much you would save.
It's crazy when you see it, because Ting just recently dropped their data rates, too.
So go over to linux.ting.com to get started, and a big thank you to Ting for sponsoring
Linux Unplugged.
All right, guys, so how about it?
Any plans for mobile support, a Talks mobile client down the road?
Yes.
Well, of course.
Yes.
Yes.
Yes.
I mean, you can't get adopted without support.
Right.
You need to run everywhere.
Yeah.
That's like a must-have.
So are you going to build that app yourself?
No, we already have people building the apps.
We have TCP relays that need to still be added, but that'll help with a lot of mobile connections.
We have apps already done, and there's a Cydia app, and there's an Android app already.
Android doesn't work yet, and the Cydia app needs a special repo, but this is all being
done already.
We'd love to see that on Ubuntu Touch.
I bet.
That would be a really good app, though, right, to have at launch?
Yeah.
And they'd probably get a lot of exposure, too.
Yeah, I know some people within Canonical are very keen on selling Ubuntu Touch on the
fact that it's possible for people to very easily create these kind of secure apps, and
we're not somewhat tainted with the three-letter acronym companies poking our users.
Yes.
I know, Derek Devlin, you had a comment about freelance developers.
I wanted to let you get that in.
Go ahead.
Yeah.
The reason I was talking about freelance developers is even though you guys don't want to compromise
or commit yourselves to a timeline, I guess it will be a way that you allow people to
just come around and say, I want to do this just as my freelance gig.
If someone wants to take the risk of the time and things, do you want those people to be
directly associated with the project?
Do they need to contribute the patches on their own, in their own branch, and then involve
later?
The reason I'm asking this is because, actually, I'm pretty fascinated by your project.
I've actually gone to two universities, and there's quite a lot of papers.
I will be interested, but there's business models on top of this.
That's why I had these questions to you.
If you want to contribute, just come to our IRC channel and tell us.
The only problem with contributing a lot of code, for example, the core is that, well,
the core stuff is very touchy.
It has to be, well, there has to be no security bugs or else, well, some blogger is going
to destroy us.
Yeah.
Yeah.
That's the way that happens.
Yeah.
But I feel you didn't answer my question, sorry, is that, so a developer that I want,
I have a client, that client wants me to implement something.
I'm going to be paid for this.
So where do I go?
Do I go directly to try submit these patches and these new feature with you, or do I do
it for the client on my own branch and then invite them to go meet you once the feature
is done?
You come and see us first to see if we have plans to implement a feature like that very
soon so we know there's no duplicate work and then, well, you just work on your feature
or you, well, you do whatever you want and we'll adjust.
Okay.
All right.
And Crash, you wanted to make a point on the sort of cross-platform adoption we're seeing
already, right?
Yeah, well, I mean, just talking to the guys in the IRC, in the Jupyter Broadcasting IRC
before, there was a guy in there saying there's, you know, that they're wanting it to run on
every platform, like I said, FreeDOS and OS2 and Plan 9 and stuff, but I also noticed that
they said it's GPL and the Free Software Foundation actually wanted to pick them up and make them
like a Free Software Foundation project and they said no because they didn't want to sign
the FSFCLA purely for the fact that then they could have an iOS client as well, which I
thought was a very smart move because the CLA, it's a good thing in many ways, but just
doing that so that they can even have a client for iOS, which it just makes it more ubiquitous
so that everyone can use TOX.
Yeah.
That's interesting.
I thank you.
Thanks for sharing that.
Also, go ahead, STQ, you wanted to respond?
Sorry, I was just testing.
I couldn't see my microphone icon, so I was just making sure.
So Crash, you've been following the project since the beginning.
Did you have any questions you wanted to ask the guys?
Well, not particularly.
I was actually quite interested in what their opinions are of WebRTC as far as the video
part because I thought that might be, I mean, that's more of an idea thing that they want,
but if they built a little in one of the clients, maybe it's a little WebKit engine or something
that can connect to WebRTC, but I don't know if that's P2P or not, so they might not work
with the goals of the project, but it would be an interesting way to do something.
That actually kind of dovetails to a question I was going to ask.
What are your thoughts at this point, maybe this is probably best for I run Gentoo, on
the actual implementation of video support?
Are you looking at things like WebRTC, are you looking at codecs yet and how it's going
to work, resolutions and all these kinds of things, or are you not at that spot yet?
Well, video already works in the core, it's basic, but it works.
Currently it uses VP8, VP9 isn't quite ready, but switching from VP8 to VP9, it's a two-line
change in the code, so it's not really an issue.
First before developing audio video more, we need to get it into clients, because right
now no client really supports it.
We have our test client that supports it, but that's not enough, you want to get some
real testing for it, and once we have some real testing, we can start maybe adding more
stuff to the video.
Right now it's very basic, you set the resolution, then there's no congestion control.
The fact that it's going to be using VP9 down the road and I actually get to set the resolution
already puts it a notch above Skype, my friend, so that's already a good thing.
I know you had a question sort of maybe about the fundamental separation between the core
project and the clients, and maybe that would sort of get around some of these licensing
problems?
Yeah, so there is this problem with the CLA for our Free Software Foundation, but the
way I understand the Free Software Foundation CLA actually ensures that even if the Free
Software Foundation for some reason goes to bankruptcy or fails, a company that takes
over cannot transform the free software, the proprietary software, which at this moment
is something that, I mean, I'm not saying that you guys are going to get bought out,
but it's possible, and the project will just buy from there or go to a different direction.
I see that if the reason is the iOS client, couldn't just the iOS client be completely
separate from the main project and be something that is just kind of, it can be developed
by the same people, just not under the same umbrella?
No, unfortunately everything has to go through our core library to essentially communicate.
Well, our core library is GPL v3, meaning the clients would have to be compatible.
We've been working on making sure we have the copyright for all of our code so we can
selectively assign a dual license for an OSI compatible license so we can allow support
on iOS while still ensuring every client, every library is 100% open source.
Aren't you just recreating a CLA though, if you want to keep the copyright under your
umbrella and everything needing to be through you?
Basically.
Alright.
Okay.
Okay, and one last obligatory question before we wrap up, you guys, how far along is the
Firefox OS version of the Talks Messenger?
That's HTML and JavaScript based, right?
Yeah, actually, what about a web chat, is that possible, is that something you guys
are considering?
Well, I mean, on Chrome OS you can use native client, on web apps you can use native client,
I don't know how you communicate with a C library in Firefox.
Guys, I appreciate the fact, this is really the reason why Talks has moved to the top
of my list right now, is just good desktop support and that promise of replacing Skype
because as somebody, you know, in the podcasting space, a lot of podcasters are very dependent
on this system and it has a lot of limitations and we're not their focus and, you know, you
joke about it, but really just the ability to set the video resolution right now is not
even an option under Skype and if you think about some of the major multi-million dollar
networks out there, TWIT, that are relying on Skype to do video production and you can't
even set the video resolution and that's aside from all of the massive security problems
that Skype now has, thank you Microsoft, and also just the, you know, it's a compromised
piece of software, people DDOS, Skype Nix for joy all the time and it's completely just
messed up, so I'm watching Talks with a lot of interest you guys, so thank you very much
for coming on the show today and chatting with us.
Before we run, I wanted to just get a question out there and it was, I got it in from Scott,
he said, hey guys, I wanted to express a growing concern I have held for the past decade with
open source software and the recent activity things going on in the Linux community right
now.
Examples are Firefox putting ads in, Steam bringing DRM games to Linux, Nvidia proprietary
drivers exploding in popularity, etc.
Linux is always touted as being a free and open system, but are we moving into an era
when less and less is free?
When I talk about free, I mean as in freedom.
The reason I bring this up is because you are very positive of Steam coming to Linux.
He says, in many Linux groups, however, I think some of the sentiment is opposite.
I'm good with paying money for legitimate software, but will the future hold me paying
for software that is not open source?
Do you think as Linux gets more popular and more big players come into the arena, that
the whole open source notion is kind of just a nice dream?
Love to hear what you think.
Scott, anybody in the Mumba room have strong thoughts on this?
I do.
In my opinion anyway, as long as the core components of Linux remain free, so as long
as the kernel and all the intrinsic parts of Linux remain free, that's all that matters.
It's fine if you want to put proprietary software like games on Linux, but as long as the core
components stay free, it's fine.
What do you think Riley?
Yes, this is why there's still things like Trisco Linux and official Free Software Foundation
districts.
So if you're not concerned about it, just use that and leave everybody else alone.
Wow.
Get off my lawn is essentially what Riley is saying.
I think what Scott is kind of saying here is he's worried about the groupthink syndrome
where we all kind of just, as a group, decide that sort of allowing this encroaching intrusions
on freedom is okay.
And so, well, it's just our video driver.
Well, I really need good Wi-Fi.
Okay, well this video game cost them a lot of money to make.
And we keep rationalizing it and every single time we rationalize it to some sort of group
consensus and we all just kind of collectively give up on that particular thing instead of
holding the hardware vendors to actually making an open source GPU driver and things like
that.
So I actually think what Scott's bringing up is something that we all have to just stay
vigilant on.
And I don't think it means that we stop playing Steam games, but at the same time, I look
at it from like a business standpoint and I say, okay, well core infrastructure components
for sustainability, for long-term predictability, and for transparency, those just have to be
open source.
All other things aside, freedom aside, just if I'm going, if my business is going to rely
on this technology, I need to be able to know where the hell that technology is going and
if the person making that technology disappears or gets burnt out, at least I can fork it
and keep it running myself.
That's why people who have their entire server infrastructure or desktop system dependent
on Apple, man, that would make me stay up at night because you never know what Apple's
going to do next.
Are they going to kill the Mac Mini?
Are they going to drop the Ethernet port?
Are they going to release iOS for the desktop?
It would drive me crazy.
Are they going to make a trash can?
Yeah, I mean, are they going to drop all PCI Express expandability and internal storage?
You just never know.
Whereas with open technology, you at least have the mailing list, you have the roadmap
and you have that almighty fork.
And I think for core infrastructure technology, and that's, you know, you could argue with
the GPU driver and that's one of the reasons I've been eyeballing Ultra Pro because I kind
of like the idea of getting an Iris GPU just to make one more component less dependent
on some upstream vendor.
But I think it is appropriate and I believe it is rational, even with all of that considered,
to make exceptions and where certain practical matters come in, like in some cases video
editing or in some cases video games, you know, I think commercial can be accepted.
I mean, Matt, this is probably something you've struggled with for a long time.
Where do you fall down?
You know, I think at the end of the day, it comes down to the point you were making about
core components and that sort of thing.
I think as long as it stays out of the kitchen as far as getting really deep into stuff,
I don't think this is really such an issue because for years there's always been the
concern of this becoming a major, major catastrophe and oh my God, it's the end of Linux as we
know it because of this and that and the other thing.
As long as we have distributions that are able to maintain those core components pure,
you know, if one distro wants to go south or something, that's their business.
I don't see this being a big problem, I guess is what I'm trying to say.
I really don't.
Yeah, and it's kind of, it's come and gone over the years.
Like in some ways it's actually gotten better.
Like there's a lot, these days a lot of systems actually have a lot less binary blobs powering
that hardware.
True.
I mean there's still a few, you know, but there was a time when I got a Red Hat, jeez,
I mean it was, I think it was back before Fedora core was even a thing.
So I want to say like Red Hat 6 and I had a binary driver for the Adaptek or some sort
of SCSI controller.
I had a binary driver for the network card because it was a special network card to communicate
with an IBM system 390 mainframe, right?
And then it ran on top of it a proprietary management software to monitor and manage
it, which has now been completely replaced with things like Puppet.
And so in some ways, while we have Steam and we have Nvidia binary drivers, in other ways
we are actually working with a lot more free software.
And as the technology landscape moves forward and there's less entrenched interest in these
certain areas, like there used to be a big market around creating server SCSI adapters
and you wouldn't even use the adapter that came with the box on the motherboard, you'd
never use that, you'd always use an external adapter and you'd have to have the driver
and you'd have to build the module for that version of your kernel, you couldn't update
your kernel and you were really stuck and that's not even a problem anymore.
Now those guys work directly with Upstream and those drivers ship with the kernel and
they're open source and it's just, you don't even have to worry about it, the drives just
show up now to your system and you know, you kids, you don't even appreciate what old farts
used to have to deal with.
So in a lot of ways, Scott, I actually think it's gotten a lot better too.
I think we are always looking at the individual trees, but if you were to fly up like Superman
above that forest, you'd see that a lot of it actually isn't that bad.
That's my take on it.
All right, Matt, well so we're going to wrap up here on Linux Unplugged.
Thank you big time to the Tox developers for joining us today, it was very fascinating chat
and good to get their perspective on some of the things and kind of get an idea where
they're going.
Look, on Sunday on the Linux Action Show, I'm going to review that Chromebook, that
Acer C720 and I'm going to try to answer the question, can a Chromebook running Linux,
not Chrome OS, but actual full-fledged Linux, can you get decent battery life, what's the
performance like and is it actually something that's worth spending money on or should you
just stick with Chrome OS or maybe get a tablet, something like that.
We'll try to answer those questions on Sunday.
If you've got any questions, feel free to send them in, we can start a thread over at
linuxactionshow.reddit.com, you can post them there and we'll try to get to those questions
in Sunday's Linux Action Show.
All right, Matt, we'll have a great week, okay?
You too.
I'll see you on Sunday and thank you everyone for tuning this week's episode of Linux Unplugged.
If we don't see you on Sunday for the Linux Action Show, I hope we'll see you right back
here next Tuesday.
Bye-bye.
