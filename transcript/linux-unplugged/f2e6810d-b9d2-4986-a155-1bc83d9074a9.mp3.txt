What's new with Wimpy and Poppy these days?
Working in the same room.
Oh, really?
Now, are you going to Wimpy's co-located space?
Yes.
It's bizarre.
Very weird.
Very weird place.
Oh, really?
This place has different themes, right?
Yeah.
We sat in the boat theme.
So it was like a pirate ship with distressed wood
and rigging and sails and stuff.
It was very bizarre.
But just across the way was Narnia.
And there was an open space with sofas.
And there were people sat there with their feet up,
with their shoes off, just like they're
lounging around at home on the sofa with a laptop.
It's very chilled.
I like it.
That sounds really cool.
I did see some pictures.
And I thought that was, I think, that Wimpy posted.
Yeah, it's nice.
And it was lovely to have Alan there in person today.
Oh, still.
Oh, I bet you're doing it tomorrow.
Gazing into your beautiful green eyes
across the table of the pirate ship.
When you take that out of context,
it really makes no sense.
That makes no sense at all.
I'm going to speak to HR tomorrow.
This is Linux Unplugged, episode 264 for August 28, 2018.
Hi, everyone, and welcome to Linux Unplugged,
Jupiter Broadcasting's weekly Linux talk show
that this week is optimizing the market for Linux.
I'm not quite sure, but we're going
to figure out what that means.
My name is Chris.
My name is Wes.
We'll be getting into the optimizing of markets
and the new support coming to LVFS,
as well as some big features that landed in Ubuntu Touch,
some nice things coming to KDE, benchmarks
that can't be benchmarked that then got benchmarked.
And then we'll have the big discussion
about what the heck Proton is, what Steam Play is,
what CodeWeaver's involvement with all of that is,
and what shift has actually just happened.
So we'll get all of that into the show as well.
It's going to be a packed episode,
so perhaps there will be some optimizing for market in there.
Well, we're yet to determine.
And like every great episode of the Unplugged program,
we've got that virtual log.
Time appropriate greetings, Mumble Room.
Hello.
Hello.
Thank you.
Greetings.
Hello.
Brent is joining us via the Mumble Room today.
So if you didn't hear his voice specifically,
he is in there.
Guys, it's great to be connected with all of you.
And I'm looking at the news this week.
And the thing I thought maybe we'd start with,
because it didn't really fit with the rest of the theme,
but I think it's a fascinating story,
is this story from Fedora that looks
like they've moved ahead with plans
to start dropping packages that have essentially
bad security practices.
They're drawn a line, and they're
saying this line no farther.
And it appears to be aimed at removing packages
from the Fedora package archive that
have known security issues against them that are not
getting addressed in a timely manner.
Now, you might be thinking, doesn't that already happen?
If it's a critical or important security issue,
and it's currently open against a package,
or a security issue of lower severity
has been open for at least six months,
four weeks before the branch point,
a procedure similar to some longstanding trimming
procedures will be called into effect,
and the package will be removed from the distribution.
Is Cinnamon an official spin of the Fedora project?
I don't know.
That's a good question.
Well, you think this might apply to them?
Well, I'm not one to cast stones, but yeah, totally could.
Well, that's actually where I was going, is I
was thinking of XFCE or other projects that perhaps just
have this really torrentially long lead
time between updates.
They could get caught up in this, couldn't they?
Well, technically, although they've
been in a round of updating their code bases,
so a lot of their stuff is moving to 4.13,
and what isn't has had other updates.
Yeah, them specifically.
Yeah, XFCE specifically.
No, I don't think so.
I think they'll be fine, because what isn't already GTK3
is built on top of GTK2 and its associated technologies
and has stood the test of time.
I think they'll be fine.
It seems like, too, it probably matters
what sort of application, because if you
have to get to the critical or important level of security
issue, there might be some low hanging fruit of minor security
problems for some of our favorite desktop applications
that haven't been updated in a while.
That's much less of a big deal than an obvious flaw
in something that's doing a lot of network
traffic or functioning in a server aspect, right?
So I can see why Fedora wants to make sure
that people can trust stuff coming from their archives.
If it's just an out of date program on your desktop,
well, maybe I care less.
I do feel like this is a big part of the end user being
able to trust what's in that repo.
That's what this is really about is increasing confidence
there and improving security.
And this seems like a pretty easy way
to automate that process that doesn't require a human being
to go through and flag a project and then run a stopwatch
and then come back and check on it.
Like this is something computers can be pretty good at.
It's also good to have clear guidelines
so that downstream projects can be like, well,
why was I removed?
Well, here's our clear policy.
OK, well, speaking of things that are getting better,
LLVFS is having a banner couple of months.
This is becoming more and more irresistible of a project
to be involved with if you are in the hardware business that
sells to Linux users.
Some people still are.
But boy, is it getting harder.
And Realtek couldn't say no.
In fact, it looks like they may have been happy to say yes.
Realtek engineers are adding USB 3.0 hub firmware support
to FW-upd.
A lot of these multi-function USB-C dongles that you see,
like I've got one that's got ethernet and HDMI on it,
as well as a couple of USB-A ports.
And those are actually, in most cases,
connected internally with USB themselves to each other,
like another hub inside your hub.
It's a bit of a hot mess.
So there's different subcomponents
that need to be updated.
And that is what these, so the Realtek chips that
are in there is what LVFS is getting support for.
And they're working on getting also support
to update the HDMI controllers that are Realtek as well.
And in a nice turn of events, some
of the hardware that's getting supported here hasn't even
been released yet.
So we're getting to the point with the project
where, in some cases, vendors have at least enough awareness
of this project, like Realtek did,
to start working with them before the hardware is even out.
And that's really great, because it means when you get
the hardware, it's just going to work out of the box
with your Linux machine.
That's huge.
Yeah, there's quite a lot of momentum around LVFS right now.
And it's really great to see.
It's at a tipping point, I think, and a good year ahead
for the Linux desktop with LVFS.
Yeah, the project really does seem to be picking up steam.
And I wonder if maybe other vendors in the past
have said it's not enough of a priority for us
to fight with upstream ODM or to reinvent our internal process.
Maybe now those decisions will be re-examined.
I don't know.
But we'll wait and see, I suppose.
So the good news for the project,
lots of really great hard work.
And it's really good to see them just
roll this kind of stuff out.
And speaking of really hard work,
the chaps over at Ubiports have been plugging away
like machines and have just released OTA 4.
And Marius joins us from the project
to tell us a little bit about it.
First of all, congratulations on the new release, Marius.
And I noted that you say this is the official starting
point of the project.
That's sort of the messaging here.
What does that mean?
Well, it basically means this is where
we have used the time to catch up and get to our LTS base
and a still supported base.
So now we are on 16.04 LTS base instead of the old vivid of 15.04
as it was before.
And that's what we mean with the starting point
is that we have used so long to both build the infrastructure
and build the build tools and build up a community.
And now we are finally to a point
where we can see everything is going smoothly
in the development process.
And we are at a point where we are on LTS, which is huge.
Congratulations.
And does it feel like it's fully yours now?
Like this is a community project now.
It's an independent thing.
Yeah, I would say that.
But it's still based on Ubuntu.
So we are really, really tied with the Ubuntu ecosystem.
And I really like that, being tied to a strong base.
So I wouldn't say we're independent in that way.
But we're independent in a way that we are doing something
new, which is a community-based mobile operating
system, which is purely community
without any official backing or a company behind it.
It's a project for the rest of us
to perhaps one day have the option to put life into a device
or replace the operating system on a device.
And it's not tied to one individual manufacturer.
It's not tied to one individual strategic partner.
It's making a people's operating system for our mobile devices
like they should be, like you can do with an x86 PC.
And you make a good point that it's still totally based
on that Ubuntu technology.
But it does feel as its own independent organism now,
like its own independent thing that, like you say,
is doing something new.
Speaking of new, I noticed in this new release
there are some new power-saving features and also
a new upgrade wizard.
Let's start with the power-saving stuff.
What's happening there?
Is that savings that you see because of kernel updates?
Are there other tweaks that have taken place?
This is tweaks that we have done to utilize the wake logs
or the Android wake logs, which is the power saving, which
is kernel-based from Android.
And since these kernel patches or these kernel APIs
are really, really optimized for phones,
it was a good idea to use those wake logs in an efficient way
as it was designed to.
So that's what we have done now.
We used those wake logs properly.
And we're really heavily based on the thing when the process
or when the phone is not in use, we
want to enable those wake logs so the processor goes down
to sleep and just keeps one core intact.
That is cool.
And then there's that upgrade wizard,
which I didn't see that one coming.
But I guess it does make sense if you
want to keep the same core install,
you should be able to.
Right.
So we are currently on a rolling release type.
And the problem with that that we saw
is app compatibility or app ABI compatibility
because some of the apps are compiled for Vivid.
And when we update to Senior, we had the issue
where the apps was not compatible because of New York
Qt version, et cetera, et cetera.
So what this wizard does is basically
update all these apps for you once you have upgraded
the system to a new base.
This won't happen on every OTA.
This is just for major, we call it framework change.
So it's not something that comes up on every OTA.
With the switch to a 16.04 base, what
does that unlock in terms of things
you want to achieve that you weren't able to do
whilst you were based on 15.04?
The major thing is definitely being
able to get security patches upstream to still
be on a supported base.
I think that's one of the major thing.
But there is other things like being
able to run Andbox, which was not
able to run on Vivid because of all the version of STL
and all these libraries that they use,
and also newer version of Mesa, a newer version of Mirror,
and all these things that we want to upgrade at some point.
We need a newer version of pretty much everything.
And since Mirror is now targeted at Senior,
we don't have to backport things to Vivid.
The Mirror team will make sure it builds on Senior.
Excellent, thank you.
So let's shift to hardware for a second.
I notice that things seem to be working pretty well on the OnePlus
with maybe the exception of camera zoom.
So are we getting pretty close to another fully supported
hardware device?
Both, yes.
I would say this is the question that
warned me about saying anything.
So the thing with hardware is it's extremely hard.
And we have to do some major changes
to be able to support Haulium, since we
are running many components that are non-standard in a way.
And we want to be closer to the Haulium or slash Mirror
in one way.
And that's quite some components to change out.
For example, the sensors and TPS.
And that's also why we say this is the starting point,
because now we can start doing all the cool things
with Haulium, with the inbox, and all these features
we want to implement, since we have a solid base to do it on
and a solid base to start working on top of.
So yeah, definitely more devices coming.
I have two devices side by me that I
have been porting nonstop after the OTA 4.
Oh, yeah?
Cool.
No tease on what they are, though.
You're just saying there's a couple there.
I can say one of them has the import out.
Oh, OK.
Well, I'm looking forward to seeing where this goes.
We'll have a link in the show notes
where you can get involved, get more information, all of that.
Just go to linuxunplug.com slash 264 to get over there,
or ubports.com to go directly to the project's website.
Well, thank you for joining us today.
You're welcome to stick around as we go on.
I wanted to cover this quick, just really just not really
totally worth covering, but super quick update.
Last week, we mentioned that Intel and Debian
were getting into it over a new license change that
was going to prevent benchmarks that used their microcode,
which would be all executions on your system.
And within about a few days after Linux Unplugged,
there was a change in their policy.
They removed that section and made it clear
that you can still benchmark, which we kind of speculated
would happen.
But I just wanted to kind of close the loop.
It's like so many things that we end up covering.
It seems like, you know, there's lots of drama up front.
And well, in the back room, the parties got it resolved.
And now there's a sane part of the license,
and it makes it much more clear.
Yeah.
By the time we're getting the news
and people are starting to get their pitchforks,
there's often already a response in the works.
It's so true.
Sometimes the hardest part of talking about something
is not talking about it at all.
How about a new feature?
I bet Poppy saw this that's landing in Kmail soon.
And it's very Gmail-esque, and I love it.
It's really cool.
It's called KDE Itinerary.
And it's a couple of components, including one part that's
called Prison, which is great.
It's the part that takes care of barcode reading and rendering.
And then there's also some support
in there mixed in there for Apple Wallet pass files.
I guess it turns out they're really nothing fancy.
They're just a zip archive containing JSON data
with some graphical assets for your logos.
Hey, that's easy.
No big deal, right?
So they're like, well, we can read that.
And they got that going.
And so there's this Kmail plug-in
that they've already got rendering, Apple Wallet pass
file attachments, and flight itineraries in Kmail.
So if you get an email confirming a flight,
you get this Google-like rendering in Kmail
now showing you your flight information.
And you can click on it and add it to your calendar.
Yeah, this is awesome.
This is totally awesome.
I heard about this at Academy.
You saw this?
Yeah, they were talking about it at Academy.
And the whole goal of this is to be
able to print out your boarding card
or have your boarding card on your phone or your laptop
or whatever without having some giant American company reading
all your email, basically.
You want to be able to be in control of your data.
And the whole ethos that runs through a lot of KDE apps
is privacy first, that user's privacy is respected.
And they don't send your data off to third parties,
but analyze your data locally.
And they've worked hard to analyze these emails
that you get from your travel partners or the data
that you get from a travel booking
to be able to render your ticket or your boarding card
or whatever.
And it's hard.
It's a hard problem to solve because most
of these other companies have solved it all on the server
and they don't make anyone aware of what
the format of this data is.
So the KDE teams have worked hard.
I say teams because a lot of people
are involved in this in order to make it possible for you
to board a plane using free software.
Yeah, they're even working on a mobile end of it
where you can pull it up on your mobile device
and render it out so that way you
don't have to hold K-mail up to the boarding scanner, which
I really appreciate that.
It does look really neat.
And that concept you touched on there, they looked at this
and said, well, right now this can
be done by a few large US corporations.
Wouldn't it be great if we could do this locally
on your machine?
I would love to see more of that, more of that.
And it's one of those things where right now you
have to rely on big corporations probably using
a whole bunch of your data and big complicated machine
learning models to try to parse this and make it nice.
It felt very far away from anything open source.
So to have something that seems so close to being workable
right now, I'm impressed.
Yeah, I'm curious.
Wimpy, are you still a MailSpring user?
Is this still what you're using for mail?
Have you had issues with MailSpring on high DPI?
I do use MailSpring.
I use it predominantly for my home email,
and I use it occasionally for my work email.
And that's mostly because I use Wavebox for work,
which sort of consolidates calendars and email and Slack
and various other online collaboration tools
all in one place.
So when I'm working, I tend to use Wavebox.
But I do love MailSpring.
As soon as MailSpring grows deep calendar integration,
then I'll be in there all day, every day.
Yeah, I'm finding that I am hitting
the edges of it in calendar regards
and also in just the UI just keeps falling over on.
I can't run it maximized on high DPI
or else it won't render portions of the UI for me.
So I'm not super thrilled with the state of native email
clients on Linux.
So I might look at this Wavebox, take a look at that.
I assume it's like some sort of service.
No, Wavebox is a wrapper for many.
It used to be called WMail back in the day and has evolved.
And it supports things like Gmail,
well, in fact, the Google Suite.
So when you had a Google account, it adds things
like the calendar and Hangouts and Google+,
and a whole bunch of different services
under a collapsible menu.
But it also supports things like different Slack accounts
and Twitter and just a whole raft of stuff.
And it's just a really elegant way.
It's basically like Pidgin for the 21st century.
Yeah, that's interesting.
You're right.
It's like it's a multi-service central.
And I didn't used to have an appetite for that kind of thing.
But now I do see the use case for it.
And as luck, just sheer luck would have it,
Wavebox is available as a snap.
Who would have guessed?
Who would have guessed it?
It's not like the developer was an early adopter
and has been behind the platform since the very beginning
or anything.
There you go.
So Chris, I'm going to let you into a little secret.
Sometimes I struggle with my grammar and use
of the right words in written English.
No.
Yeah, it's true.
And one of the facilities of Wavebox
is it has sort of whitelisted a selection of Google Chrome
extensions within Wavebox, one of which is Grammarly.
So I now have Grammarly enabled.
And I now have Grammarly persistent across all
of the sessions that I manage in Wavebox
through my single Grammarly instance.
And it has reduced typos and screw ups in the written words
significantly.
So yeah, it's pretty fantastic.
Wavebox is very elegantly.
And it's not like every extension imaginable.
It's just like the really useful stuff
that optimizes your workflows.
And then for an extension like that,
I don't necessarily have to have it in the main browser.
And I could just keep it in Wavebox.
Exactly so.
I'll be checking that out.
Now, there was an article that ran over at linuxjournal.com
by Sarim.
And it was on the 24th of the last week.
And Sarim wrote in here that the year of the Linux desktop
has been a constant call to arms that's
sunken into a joke way past its expiration date.
That's a good line, Sarim.
That's a good line right there.
And so he goes on to make a pretty compelling case.
He says, today, what we have is a distribution-centric model.
Software is distributed by an OSV, which
is an operating system vendor.
And users get their software directly
from there via whatever packaging mechanism
that OSV supports.
This model has evolved because in the early to mid-1990s,
those OSVs extended to existed, I should say,
to compile the kernel and user space into a cohesive product.
He's essentially setting up the role of what the distro package
maintainers had done.
Packaging of applications was the next step
as a convenience factor to save users
from having to compile their own applications.
Yep, I'd say that's pretty much the case.
Ultimately, though, these operating system vendors,
or OSVs, enjoyed being gatekeepers
as part of keeping developers honest and fixing
issues that were unique to their operating system.
OSVs saw themselves as agents representing users
to provide high-quality software.
And there was a feeling that developers
were not to be trusted, as, of course,
nobody knows the state of their operating system
better than they would.
However, this model represented a number of challenges
to both commercial and open source developers.
For commercial developers, the problem
became how to maximize their audience
as the Linux market consisted of a number of major OSVs
and an uncountable number of smaller niche distributions.
Commercial application developers
would have to develop multiple versions
of their own application targeted
at various distributions for fear of missing out
on a subset of users.
Over time, commercial application developers
would settle on using Ubuntu or a compressed tar
file hosted on their website.
Now, he goes on to keep making the case here.
And I'll leave it as an exercise to you
to read the whole article.
But he makes the case that the distrocentric model also
makes it difficult for developers
to have relationships with their users.
There is no way to build a community around an application
if users are getting their software from the distribution
without any thought.
He writes, this model, I believe,
has reached its end of usefulness.
In order to further scale the market for Linux applications,
we need to move to a new model.
Although we can never eliminate the distribution-centric model,
nor should we, to reach scalability,
we need to remove the OSV as the gatekeeper for application
distribution and allow developers
to control how they distribute their applications.
This is a new iteration on a couple of conversations
we've had semi-recently, Wes.
Yeah, I mean, it absolutely is, right?
This has been a continued trend.
We've been driven to alternative OSVs,
even by the facet of we just need the software we need,
especially when you're, you know,
it's one thing if you just want to have a free open source
desktop that you use casually to check some emails.
But once you're doing real work, you
have a much closer relationship with the people
providing the software that lets you do that work.
And you don't need a bunch of middlemen in the way.
And that's been a big problem.
So it's interesting to see it being addressed in so many
ways.
Yeah, yeah, it is.
Sometimes for business software, it's
a one-to-one relationship.
The vendor specifically creates software for the business,
and you're getting it from them.
You know, there's no distribution
required to be in the middle.
And so those typically just be distributed as tar files
or something like that.
And then as we've watched the growth of snaps and flat packs,
the conversation has become more and more often, hey,
we're watching a shift here.
I think something we brought up just recently
is these things, like self-updating flat packs
and self-updating snaps, what that represents
is software developers pushing new software
to a store or a repo, which then gets pushed down
to your machine.
And that's not how it used to work.
It used to work that a Debian maintainer would review a
package and then submit it to the repo.
And then when there was a new version of Debian
that would get cut, the new versions of packages
would get cut.
Like, it was a way different process just even
a couple of years ago.
And there has been this huge shift
with app images and all these other universal installers
that we have just kind of sat back and watched and commented
on now a little bit more.
And I think that's in that context.
That's why I'm pretty curious to see how,
which I think is the first, Libre Application Summit goes.
It's happening next week in Denver, September 6
through the 9th.
And it's hosted by Gnome.
And it bills itself as an application summit
that brings together application writers, distributions,
toolkits, and OS plumbers to build an ecosystem that
encourages building applications on free software operating
systems.
One of the nice things about the Libre Application Summit
is Gnome has reached out to XSE.
I think they tried to reach out to Solace.
And there's going to be a bunch of folks from Plasma
that are going to be there.
So it's not just about GDK.
It's not just about the Gnome desktop.
But it's being grown to reach out to the community at large.
Did they contact anyone from the Electron community?
I was on a conference call today.
And they're reaching out to a few folks from there as well.
Oh, good.
Fantastic.
If they need help with that, can you connect us?
Because I can help with that.
Sure.
Shoot me a telegram, and I'll get you connected.
Right, will do.
Because obviously, Electron on Linux sits on top of GDK,
well, two or three, depending on which version of Electron
you use.
So there's obviously some overlap there.
Might be a bit late in the day, but let's have a go.
All right, so Poby, Wimpy, Wes, you and I,
we've all been to plenty of conferences.
What do you think of this one, about a conference?
And I think we're familiar with the background and all that,
like a conference to kind of get together and encourage
application development on Linux.
Where do we start with this?
I'm curious to know your thoughts, Poby,
because I think you and I learned about it
at the same time on Twitter.
Yeah.
So I would love to have gone, actually.
I really wanted to represent us, but it's
a terrible weekend for people in the UK,
because that's when kids start back at school.
Plus, there's been a whole lot of other events.
So I was actually super keen to go along,
but it's in the wrong continent at the wrong time.
I find it interesting that there's
an event that talks about applications on Linux.
I'm interested to know who the target audience for this is,
whether it's the KDE people, the GTK people, the Electron
people, and Qt and everyone else,
and who they're going to be talking to.
Are they going to be talking to each other and saying,
yeah, we should get all this done,
and what are the outcomes of this going to be?
Or are they trying to pitch this to new developers,
like students who are entering the market
and just starting to develop?
I'm keen to understand who that target is.
And for me, it isn't completely clear who
the target for this event is.
Well, I think that's something that's growing.
I think this is the third year or so
of this particular conference.
There is a couple of talks on making projects
interesting for students.
There's some talks being put on by KDE about how they do things.
There's talks being put on by GNOME about how they do things.
And someone I left out was Elementary OS.
They've got a couple of folks that are coming.
So I think the target audience is application developers
as a whole, be it new developers, old developers.
I think it's trying to set a precedent for development
of applications moving forward.
I would have loved to attended this event, and also Guadec
as well, representing the Marte desktop.
But as Alan has just explained, the timing
doesn't work for me.
And maybe next year, I'll be able to get involved.
If there's anyone who is listening
from the organizing committee, or who is going to be there,
one of the things I learned recently
was when I was at the Electron Maintainers Summit,
an Electron being dependent on GTK2 traditionally,
and more so GTK3 in the recent versions of Electron,
they were shocked to learn at the ABI breakage that
existed through GTK in recent years,
and the fact that they had deliberately
built against old versions of GTK,
thinking they were going to bake in some kind of legacy
forward compatibility, and then horrified
to learn that it segfaults like a bastard,
and it's a big fat mess.
And we need to think beyond what are
the traditional Linux application developers now.
You can think what you like about Electron,
and you can be wrong about that, and that's fine.
But the majority of development that
happens on the Linux desktop right now that
is relevant to the world that we live in
happens in the Electron sphere, and we
need to invite those people into our world
and educate them to the nuances of the way that we do things,
and the peculiarities of our toolkits,
and also seek their feedback on how
we are going to accommodate enterprise class application
developers on our platform.
I also was really hoping to make it this year.
It's a long shot for me because I will
be traveling during that time, but I
will be traveling home because I want to see the kids for school.
So I'm really torn because it seems like an event
that I really support, and that's
why I want to give them some time here on the show
to talk about it a little bit because I
think the idea is good.
How do we get different projects together all
with the same goal of making Linux a better platform
to develop applications for?
Build a network of people that are interested in that
and can provide support and fast feedback,
and I'm excited to see what the second version of this
looks like, if this can get off the ground,
roll in really well.
I'm sure the next one will be even better, more people,
and probably we can tell a little bit more about what
it's all going to be about.
So Eric, the IT guy, if you end up getting to go,
you'll be our reporter on the ground.
You can report back and let us know, OK?
I will definitely be there, and I'm checking up
with one of the folks from System76
offered me a place to sleep, which
made it financially affordable.
So I'll be making the drive next Wednesday morning.
Oh, doing a road trip style.
Good, good.
That's how I like to do it too.
I like to do it that way.
All right, guys.
Well, I think it's going to be a good show.
I don't think I'm going to make it, but if you do make it
and you want to join us too and share your experiences like
Eric will, you are welcome to.
We do this show live on Tuesdays.
You can go to jblive.tv.
Usually starts around 2 PM Pacific,
but it's all converted at jupiterbroadcasting.com
slash calendar to your local time.
And you don't even have to hang out in the mobile.
You can just come watch the show if you want.
In fact, I would encourage you to join us next week
because we have a really great show planned for next week
with some special guests, and I think it'll be a good one.
So join us live next week, jblive.tv on Tuesday.
And if you make it to the Libre application summit,
first of all, tell them to choose a different name
than the last, and then let us know how it went.
Now let's take a moment and thank a few of our sponsors.
I want to get, after the sponsor block here,
I want to get into Proton.
I want to get into Steam Play, and I just want to leave
as much room for it as we want.
If it's a five-minute conversation,
if it's a 55-minute conversation.
I think there's a lot to get into.
We've dug into some of the technicals here,
done some testing, quote unquote, for you, you know,
the hard work, but also I've been talking to people
in the audience that, for some, it's the end of the world,
and for some, it means they can now fundamentally
switch to Linux, and I've gotten a couple of stories
that have gotten me kind of hyped
because I am at a point right now
where Windows applications are just not a thing
I need anymore.
I'm not, you know, I'm not trying to be high and mighty.
It's just I've spent years sort of systematically
avoiding Windows, and so I really haven't built up
a demand of applications that I need,
and that even extends to games.
If the game wasn't available for Linux, that's fine.
I've got plenty of games to play.
So it took me a little bit to get my head around
why I should care about this.
I mean, obviously I care because it's a lot of cool stuff
happening for people that like to use Linux.
That makes me care, but why should I personally
get excited about this?
And when I started hearing some people's stories
and I started digging into what's happening here,
I got excited, and I'm gonna share with you
what I've learned, including I contacted the folks
at CodeWeavers, and I got some official statements
from them on what their involvement with all of this was.
So we can clear up all of that.
So let's start by thanking Ting.
You can start by going to linux.ting.com.
That's how you support the show and get $25 off a device,
or if you bring a device, $25 in service credit.
Your average Ting bill is just 23 bucks,
so that $25 will pay for more than your first month.
It really makes a difference,
and that's because it's smarter than unlimited.
You just pay for what you use.
However much you talk, text, and data you use,
that's what you pay.
If you're visiting the state sometime, grab a Ting line.
You can get a SIM card, pop it in a device
that's compatible, check their BYOD page.
They have CDMA and GSM, which means you've got
a lot of options to choose from.
There's no contract, so when you're ready to go
after you've been visiting, you could disable it if you want.
You could also just keep it.
It's $6 a month for the line.
I mean, it's $6 plus whatever Uncle Sam's gonna cut.
And then your usage.
So if you wanna just keep a Ting line, you can.
It's pretty economical.
They have a great control panel that lets you manage
all of this and set up alerts and usage stuff,
and also great customer service
that's always ready to help you out.
Devices you can buy directly or bring one.
They have a great BYOD page,
and the entire activation process can be done
through their website.
If you wanna do it at 1 a.m. while you just have
a wild hair and you just don't feel like talking
to another human being,
well, that's how I activated my EVO, and it worked.
I couldn't believe it.
I assumed I'd have to call.
I activated my EVO 4G Y Max edition over four years ago,
popped that sucker in, and I got $25 in service credit.
And when it paid for more than my first month,
I've never, ever gone back.
Canceled Verizon, moved my other phones over.
It was great.
I went from paying 120 before taxes,
so it was more like 145 per month,
to sometimes like maybe 45.
It's just, it was a huge shift, huge shift.
And I just, I'll never forget that experience,
and you can try it out too
by starting going to linux.ting.com.
Now, DigitalOcean.
Now, if you wanna make big podcasts,
you wanna make big projects,
you wanna look like you got a big data center,
I don't know where I'm going with that really,
other than to tell you DigitalOcean's how you do it.
Do.co slash unplugged.
I say that because within 55 seconds,
you can have something on their enterprise grade SSL
these 40 gigabit connections coming into their hypervisors,
data centers all over the world.
Like it's a legitimate setup and you have access to it
and you can get it for a hundred dollars of credit
and just try it out for like 60 days.
And it's yours to like have as a data center infrastructure.
You wrap your head around that concept.
You can just go deploy systems when you want them now.
And it's great.
It's nothing like it used to be.
You know, when I'd have to get a system set up,
it would be a two week lead time
before the vendor would even ship the parts.
And then you got to put it in the rack
and then you got to pay for power.
You got to pay for internet and you know,
T1 lines like a thousand bucks a month.
And now for three cents an hour,
I can have four gigs of RAM, two CPUs,
80 gigabytes of enterprise grade SSD,
three terabytes worth of transfer
and a dashboard that is an industry leading dashboard.
Like nobody does it like this.
They set the bar.
They're trusted by over a million developers
and the pricing is straightforward and predictable.
And when you go to do.co slash unplugged,
you get a $100 credit.
When you sign up with a new account,
you can try them out, see what I've been talking about.
Maybe go get off Dropbox and move over to Nextcloud.
I'm just saying, you know,
they've got some good infrastructure for that.
I've been running the Nextcloud instance up there
for about two years as like a hot test,
you know, like a hot standby.
It's great.
It's great.
I've recently attached 25 gigs worth of additional storage.
Love it.
It's just perfect.
So go check it out, do.co slash unplugged and get started.
And then last but absolutely not least,
a big thank you to Linux Academy.
I would tell you to go to linuxacademy.com slash unplugged,
but I'm actually say don't do that.
I mean, do it, but don't do it until September 3rd
because they're doing a huge sale.
You can buy out the whole year for 299.
Just be done for the year.
299, you get access to everything.
And that's a great deal.
That's like phenomenal pricing.
And the value you get from that is mind blowing.
That is an, the books alone back in the day
to take those courses would have been four or $500.
Like I can't even with you right now with this.
So go to Linux Academy, but wait until September 3rd
because on September 3rd, Monday,
they're starting a 299 a year sale.
And I think that's the best deal that they've been doing ads
on this network since 2014.
And I think that's the best deal that we have ever seen.
So go to Linux Academy, but just wait a couple of days
and then sign up.
It's a platform to learn about Linux,
everything that Linux runs or runs on Linux,
including the things that are really gonna make
your resume look good.
And it's stuff that's put together
by full-time training architects who specialize in this stuff.
Like they're from the field.
And they're creating the courseware
and they're answering your questions.
And now they're doing a sale
that is way beyond anything I've ever seen.
So go to linuxacademy.com slash unplugged on Monday
and September 3rd, 2018, and look for that 299 a year sale.
Dig around until you get it.
That's the best tip I've had
for Linux Academy for a long time.
Plus they just launched all that new content.
It's all in there, all the new, the labs,
the interactive guides, like it's all in there.
So it's a great deal, linuxacademy.com slash unplugged.
And a big thank you to Linux Academy
for sponsoring the Unplugged program.
Thanks to all of our sponsors
for sponsoring this here show.
Okay, so there we go.
Sponsor block is done.
We've done our business for the day.
Now we get to just play around.
So let's talk about Steam Play.
We can have fun.
Oh, I was having fun.
Let me tell you, I was having fun.
But now, now this is a whole new kind of fun.
This is like an emulated fun.
But don't call it an emulator.
All right, so let's talk about Steam Play,
which we were speculating about on Linux Action News.
And then it came out and boom, here we have it.
And the core of Steam Play is really something called Proton.
That's what's sitting underneath the Steam client
is this Proton system.
And I don't know, Wes, I'd say it's probably fair
to describe Proton as something that's made up of many parts.
Well, yeah, I think you're absolutely right about that.
And there's lots of little bits keeping those parts together
in a way that you, the happy, steamed end user,
hopefully doesn't have to care about.
Yeah, there's like the way they've built this thing,
they being the people that have contributed to it,
is like there's different shims in there
for different types of Windows gaming technology.
So there might be a shim in there specifically
for DirectX 12, which is much more Vulkan-like at lower
levels and requires less translation.
And there's also shims in there for older versions
of DirectX, right?
Yeah, there's older ones, DirectX 9, DirectX 11, of course.
Plus, they've had to do some other work just
to make things play nice, like better full screen support,
game set support.
And of course, they have their own things
to integrate, like better things for Steamworks,
targeting native APIs, better open VR support.
There's just a lot in this one title.
So Valve has posted Proton up on GitHub.
And when you look through some of the issues that
have been closed, there is a comment in there
who's a collaborator on the project who's
a CodeWeavers employee.
And I believe his name is Eric.
And he writes, we've been working on Proton
for a long time.
We've needed an internal code name for it.
And we couldn't really tip our hat if it leaked.
So we had to decide how the heck are we going to name Proton?
What do we refer to it as?
He says, we didn't want it to be something
that we'd be embarrassed after using it after release.
So no badger, badger, badger.
And a bunch of ideas that were kicked around the CodeWeavers
office one afternoon.
And it ended up we picked Proton because it's
short, easy to remember, sounds cool,
and it's hard to Google for.
So I was like, interesting.
What did CodeWeavers have to do with this?
Because I've heard about Valve.
I've heard about Valve financing developers.
I've heard about Valve's investment in Linux gaming.
I've heard about SteamOS.
But what did CodeWeavers have to do with this?
CodeWeavers are the folks that make crossover office
for Linux and Mac that lets you run lots of applications.
Including games.
And Jeremy White, their CEO, blogged
the day of the announcement that they've
been working directly with Valve for two years on this effort.
And that got my interest, but it wasn't good enough.
I said to myself, that doesn't make any sense.
Because Valve is technically a competitor in some ways.
Like this makes there be less demand for crossover office.
Because a huge part of it is making Windows games work
that don't normally work very easily.
They don't normally work very easily under Wine.
So I emailed crossover and I said, guys,
could you clear this up for me?
Because it sounds like from what I'm reading,
I'm getting vague implications that CodeWeavers was fairly
involved with Proton.
And it's true.
I asked, did you have dedicated staff to work on Proton?
And they write, yes, we did have dedicated staff.
Was a large portion of the code to Proton
contributed by CodeWeavers?
And they say that we contributed to Wine for this project
and we contributed a great deal of the Proton glue code.
There's a lot of other folks who contributed as well.
And we've been amazed by the amount of energy
that Valve continues to bring into this.
I asked if this was actually started in-house at CodeWeavers.
And the answer I got there was, we
have worked with Valve on this from the beginning.
In other words, to me, that sounds like Valve contacted
them and said, here's something we want to do.
And we think you're the folks to hire to do it.
Because that is something that CodeWeavers
has done before for other folks.
We have worked with Valve on this from the beginning.
To me, sounds like someone from Valve
reached out to them from the very, very beginning
of the project and said, we want to make changes to Wine.
And we want to work with you to do it.
I asked if it was always intended to be used by Valve
or if they started it as an internal project to use it.
And they say their sole intention
was working with Valve to create this for them.
The last follow-up question that I asked
was if we would see some of these improvements
make it into upstream Wine and Crossover Office.
And they said, yes, absolutely.
The Crossover Linux product will contain
all of the Wine goodness that we have contributed upstream.
The Proton bits aren't really necessary for that,
as generally, our product already
has all of the Glue bits that we already
need, like picking the different DirectX levels
and setting up the Wine bottles.
But they are exploring using DXVK.
But it gets tricky, as they also consider
the macOS a part of their customer base.
And it's a different set of applications requirements.
But it does sound like CodeWeavers,
from the very, very beginning of this effort,
was involved and was working with Valve to build this thing
and then contribute those improvements upstream to Wine.
I mean, that kind of makes sense.
We'd seen some movement on the Direct3D12 implementation,
VKD3D.
I think a lot of people have been kind of like, well,
where's this coming from?
Who's funding this?
Why is this a Wine project?
I mean, it made sense that it would fall under that umbrella.
But that's a big undertaking to come out of nowhere.
So I'm sure, knowing that they had the support
that this bigger, hidden undertaking was happening,
that's a lot of confidence, a lot of runway
to build something that takes a long time to get a usable
product.
I feel like they valved up the announcement a little bit.
Sort of a typical thing, it's a pretty solid announcement.
But they managed to do something small that just really
sets the impression.
And they had this initial list of like 15 supported games.
And two or three, four of them are like modern, this year
games.
And the rest are all like old games that nobody cares about,
that nobody is trying to run on Linux.
Stuff that came out years ago, years ago.
And it just reinforces this impression
that you can't get all these games on Linux.
It was this really odd list of games that I felt like
was actually more harmful than good.
Because when you look at the actual list
that the community is maintaining of games that work,
it's astronomically large.
I'll have some links in the show notes.
It is huge.
There are so many well-supported games.
And I'll tell you, when it clicked for me
was when I realized I could play Age of Empires 2 again.
That is, I swear to God, Microsoft is never
going to release that game.
They'll never update Age of Empires 2 or 3 for Linux.
I'm just SOL.
But now with this and the community list
where they tell you what tweaks to make,
I can play those old games again.
And it's pretty exciting.
It represents a significant shift of availability again.
Now, it's not a perfect solution.
Not everything works.
And sometimes you've got to implement some workarounds.
But we just probably got another 1,000 games
that work on Linux.
And some of them are AAA titles.
So with that all said, I feel like I
must defer to the elite gamer of the group, Mr. Martin Wimpress,
and get your impressions on this news.
Well, it's humbling to know that you recognize
my status in this discussion.
Yeah, we talk about this on a recent Ubuntu podcast.
And my take is that I've never, until Steam came to Linux,
I was never a gamer on Linux.
I used consoles as the means by which to consume games.
And as soon as Steam arrived for Linux,
then I was able to game on a platform
that I really believed in.
And this just extends the corpus of gaming catalog
that I have access to now.
And in particular, there's a particular genre of games
that I enjoy most, which is racing games.
And I've installed dozens, in fact,
purchased and installed dozens of these Windows titles
on the new Steam client beta, and had a wonderful time
revisiting some classic racing games
that I've not played for years, and also some new games
that I really wanted to play but didn't have access to.
And I'm now able to.
And I'm sure there are going to be rough edges along the way.
But I think this is a net positive for us.
If you make publishers' lives easy,
that they can see the number of people that
are playing their published titles on Linux
and not experiencing issues outside of what they know
to be the bugs that exist in their existing Windows
platform compatibility, then they're
going to get behind this because it's an almost zero effort
activity.
So yeah, I realize that some people will see Proton
as the electron for gaming on Linux,
and it will be the demon seed, and it
will be berated and chastised in all the usual corners
of the internet that those opinions are expressed.
But for me, this is a positive step forward,
and I'll be really interested to see
how it develops over the next six to nine months
and what other pieces of the Valve jigsaw puzzle
fall into place behind it.
Yeah, this is one of the more interesting pieces.
This is the central piece, right?
This is the pivotal piece to whatever Valve's strategy may
have been at the outset and the various faltering starts.
I think this could be the piece that really propels things
forward.
And it sounds like we get a timeline.
CodeWeavers gives us a two-year timeline.
Yeah.
Well, let's see.
I mean, there's certainly been, obviously, over the last week.
No, I mean, they've been working on it for two years.
It sounds like CodeWeavers may have
been contracted for two years to work on this.
Without realizing it, some of the fun and games
that Poppy and I've had recently,
publishing Windows games inside Snaps,
builds on this very technology.
We just didn't realize we were doing that until these
announcements last week.
So it's already a net positive for the Linux environment.
This is compatibility and funded development
around things that we already have a good productivity
story on the Linux desktop.
We already have an excellent developer story
on the Linux desktop.
And the conversation always comes around to games eventually.
And we've had an OK to good story there.
And we're on the cusp of having an excellent story there.
So well said.
Well done, Valve.
You've put your money where your mouth is.
And you're really making a difference where it counts.
So one thing that I don't understand
is where does negativity come with both Electron
and this Proton?
I don't understand, from my side, I only see positive.
I don't see why anyone would see it negatively.
That's pretty simple.
Some people just don't like the fact
that developers aren't being pushed
towards using native technologies.
It's the same old story that I've got a GTK desktop,
and I hate the fact that there are Qt libraries loaded
on my system.
Or I've got a Qt-based system, and I hate the fact
there are GTK libraries on my system.
Or I've got a Qt, and I hate the fact that there's Electron.
People should build natively, and everything
will be super performant, and it should be written
in native languages, or assembler,
or they're misguided that they can berate developers
into doing things differently to suit them
when they are a tiny, tiny speck of an audience.
You can't do that.
You need to welcome these developers to our platform.
I don't always agree with it, but I think also there's
some amount of, at least for the desktop side,
of people worrying about when you
have a shim layer or a common abstraction,
then you write to that.
And it may not take full advantage
of some of the unique features of various platforms.
But if people aren't going to do that anyway,
if people aren't, for instance, if people aren't making Linux
games for you that you want to play or that the market wants,
well, then you might want that.
But if you're not getting it, what choice do you have?
But Proton is a much stronger story in that regard
to the other solution.
So we've had the likes of virtual programming
in the past, which, grossly oversimplified,
are a wine wrapper around a Windows game.
But it was all single threaded, and at least the Proton
development offers up multi-threaded capability
and a whole heap of other stuff besides.
So you've got to appreciate that Valve are a means to market
for games publishers, and they want games publishers
to be able to exploit the processing capability
of the platform that they're delivering on.
And I think, as a solution, there are obviously
some things about this we should be cautious about,
but I think Valve have done everything possible
to smooth things over for people wanting
to target Linux through a compatibility layer
as best as they can.
And I really feel they should be applauded for this,
because the Valve coming to Linux in the first place
was a massive blooming turning point for adoption
of the Linux desktop.
And this will be even more so, considerably more so.
It is as big a deal as everyone's hyping it up to be.
I've already talked to several people that I'm like, look,
you can play these games now.
I know you were holding off.
You have a Windows installed just for these.
No more, my friend.
I've had those same conversations,
and people are very excited by that.
But I think there's also an aspect of this
that we're maybe not giving enough attention to,
and I think it's on the tip of Minimech's mind,
and that is Vulkan is the wild card in this.
In some cases, we're going from very low-level DirectX 12
calls, which are already quite similar to Vulkan,
and just translating them to native, local Vulkan.
And that's going to be a big piece, right, Minimech?
Yeah, I think that's the whole thing.
I mean, that whole thing is very future-proof,
because as I understand, Windows games supporting Vulkan
only have to translate the Windows game part, not
the graphics rendering part.
That is Vulkan that takes all the stuff.
And the old DirectX thing is encapsulated in Vulkan,
so it is a huge push for Vulkan.
And I would like to have some responses of macOS,
of the Apple people, about that.
Yes, right.
Oh, good point.
There's terrible support for that kind of stuff on macOS.
I mean, the kind of ebb and flow, like OpenGL
is just horrible right now.
But Metal support's fantastic, so I
guess you just need one more shim to convert it to Metal.
Yeah.
Yeah, well, there is.
There is.
There's MoltenVK, which is like the shim
to Metal for Vulkan API calls, which is very decent
and can certainly facilitate those targeting requirements.
But Valve were quite clear that macOS
doesn't feature in this initiative at the moment
or possibly at all.
Well, could you blame them?
Well, are Mac shipping many devices
with significant enough graphics capability
to be a serious gaming platform?
And unless you're prepared to shell out 12 grand,
the answer is no.
So why would?
I mean, that's like super niche.
You think we're a niche audience,
but those people that can afford an iMac Pro with the Vega 64
option and everything else, that is a super niche audience.
So you can probably appreciate why they're not
investing effort there right now.
Yeah, that's a point well made.
I've got one thought at the back of my mind.
OK.
That I'm a little bit like, I wonder
how this is going to play out.
This is all great stuff.
But as far as I'm aware, and I'm very
happy to be proven wrong about this, so if you know better,
do contact Chris, not me, do contact Chris,
and let him know how wrong I was.
He'll bring it to my attention in low bandwidth form.
Wine is X11 exclusively right now.
I wonder how much of this effort is
going to be targeted at bringing Proton, stroke wine,
to talk Wayland natively, or how much of this effort
is purely going to be focused around implementing
the compatibility necessarily on top of the X11 stack
that these games run more reliably?
And will this defer and push back
the general acceptance of Wayland
as a display server technology?
Or will they become some of our most frequent ex-Wayland apps?
That's a good question.
And you have to wonder if it's not a chicken and the egg
problem with graphics drivers.
To really develop that, you would
need a Linux box with full proprietary 3D
graphics to troubleshoot and test.
And you've got to get that first.
Well, you'd do better with the fully open source
drivers for Wayland stuff.
Sure.
So I'm not close enough to the development of these things
to know how prioritized Wayland is in this story.
And if it features at all, or if it features significantly.
But I'll be very interested to see
whether targeting Wayland is something that's
of paramount importance, that it helps deliver Wayland
to the Linux desktop, or if it's something that pushes back
the acceptance of the Wayland desktop
because there is a significant enough performance
impact on these games being run through compatibility layers
that people just aren't prepared to go there yet.
Just as the transition to Wayland
was looking simple and smooth, this has to come along.
I can answer this because I'm working pretty closely
with Wayland and Mir.
And I would say the answer to this is NVIDIA.
NVIDIA, they play proprietary drivers.
They don't work at all with any of the Wayland stuff
without needing to use their L stream APIs.
And without NVIDIA support, most of the graphics
cards that the game must have, which is NVIDIA,
doesn't work on Wayland.
Yeah, that makes a lot of sense.
That's where I would expect the main cause of angst to be.
And like I said, a bit of a chicken and egg there.
And maybe somebody could reach out to NVIDIA
and encourage them to pick up the pace on that.
Maybe.
We'll see.
Somebody.
There is no need to pick up the pace,
though, on the community's development
around Steam Play and Proton.
There's already really cool sites set up.
I'll recommend one called Proton.City.
That's where I learned how to get Age of Empires 2 working.
You just type in the game there.
And then it'll tell you the status, the workarounds.
It's a little slow right now because it's getting slammed.
But they've got reviews and all of that stuff.
And it's all dynamically generated.
So it's Proton.City.
And that's how I got Age of Empires working.
And I'm very, very, very happy about it.
There's also some lists.
There's some Google Docs out there
that have all of the games and their status and notes.
And it's staggering.
It's thousands of games.
It's so staggering that it kills your browser trying
to load the spreadsheet of the list of games.
That's how massive it is.
And there is just so much energy.
There's so much passion.
This is definitely a net positive.
And I have hired people that are concerned that it will
de-incentivize more native games.
Steam was pretty upfront.
And they had a good, you know, they talk right there.
If I'm trying to target Linux natively, just target Vulkan.
Use that.
And hopefully, maybe less than in the desktop space.
Maybe not.
Games are already somewhat disconnected.
Now, they do need a bunch of stuff
to do to sound and tied to internet and all that.
But they're already something that's not just another desktop
application.
They're a pretty niche use case that's
segmented from a regular desktop.
So I think we need a cheering test for Proton.
And I think the rules for the cheering test for Proton
are, can it run Fortnite yet?
And until the outcome of that question is an unequivocal yes,
then, you know, we're not there.
But as soon as it runs Fortnite, then we're all sorted.
Yeah, we do need to get that.
We do need to get that.
That is an embarrassing weak spot.
I have not really gotten to Fortnite.
But I have heard people bring it up.
And everybody else, every other platform's got it.
That's a good one.
Does it run Fortnite?
We will wait and see.
I bet you it happens sooner than later.
It's not published on Steam.
So Valve have got no skin in the game
on making that one work, right?
I will include a link in the show notes
on how to run Proton from the command line.
So it is possible to just point it at an executable and go.
So that might help.
So I'll put a link to that in the show notes
if I can dig it up again.
Also, another link I'll have in there
is, this also helps if you just want to use it sort of outside
of Steam, is there's Proton tricks, like winetricks,
that lets you set some of the registry stuff and whatever.
I don't know whatever Windows calls it.
So yeah, there's now Proton tricks
where you can apply actions and whatnot,
or apply it even to specific games and things.
So people are developing tools around this, directories.
There's just all kinds of stuff coming together.
So it's a good time for this kind of thing,
because it seems like the community was just
super hungry for it.
And within days, we've seen all of this stuff get set up,
all of these resources, all of these games tested.
It's like people are sitting around just
waiting to play video games.
Is there anything else anyone wants to chime in
before we wrap this one up?
Well, do we think there's going to be another round of Steam
machine investment here now that it might actually
be able to play some of the games you want?
Right.
Yeah.
What is next for Steam OS now?
And will it be a doubling down?
Will it be integrated into big picture mode and all that?
Or is this a acknowledgment that, you know what?
You can go get Ubuntu 18.04.
You can load our Steam package on there,
and everything's good to go.
The kernel improvements are all there.
The graphics drivers work.
And with our Steam client, we have all these libraries
and Proton now.
Maybe this is a shifting of the landscape,
and Steam machines are just not as necessary,
he says in a questioning voice.
We'll have to wait and see.
Yeah, I guess stay tuned and find out.
That probably won't be what we're talking about next week,
but we'd love to have you guys join us there.
If you're all done, then that's good.
We don't have to go get the links at linuxunplug.com
slash 264.
That's fine.
You don't have to.
But if you want a little more, you
want a little more content, go check out the Ubuntu podcast
where you can get more poppy and wimpy.
And their cohort, Mark, is on the Ubuntu podcast,
ubuntupodcast.org.
Good episode.
I love that episode on Academy.
That was really fascinating.
I thought that was a really well-done take
on going to an event, too.
Just going to an event and then summarizing it in a show
is not always super easy, and I thought you nailed it, poppy.
So great episode of Ubuntu podcast.
Thank you.
And go get more Wes Payne over at techsnap.systems.
He's at Wes Payne on the Twitter.
Do it.
And the whole network is at jupitersignal.
linuxunplug.com is our site.
Thank you for joining us, and we will see you next Tuesday.
And we'll see you next time.
All right, let's name this thing.
Now wimpy, did the title go through
that you were thinking we were going to see?
Did that make its way through?
Yeah, that made its way through.
I went for a super long version and then trimmed it down.
OK, let's go take a look at this thing.
JBtitles.
It's number one.
I'm feeling confident in my prediction for this week's
show title.
Oh, my goodness.
That is pretty good.
It is long, but it is pretty good.
I can give you an even shortened version.
You can just go for proton electron for games.
Yeah, that's nice.
That's nice.
That is good.
All right, that's going to be pretty hard to beat.
I also know that's going to irritate people
that I know and I'm friends with horribly, but hey-ho.
It's the meme.
It's summarizing the meme within the peanut gallery
in four words or less.
That's all we've ever wanted from a title.
I love it.
I'm going for it.
I'm going with the slightly shorter version, proton
electron for games.
Now what did we miss this week, Wes?
Oh, I was just going to say, I was
happy to see that proton counts as Linux for Steam Play.
So if you're going to get surveyed,
if you're running it through proton,
it counts as Linux, not Windows.
Yeah, that is a good point to make.
Yeah, we should have made that in the show.
It's always been this way, too.
It's the way the Valve system works.
It's whatever system you've played the most on
after two weeks.
Who here has purchased a game as a result of the Steam Play
data?
I did.
I did.
I bought Age of Empires.
Yeah, so did I.
I bought over a dozen.
Oh.
Well, they were in packs.
They were racing stroke driving games in packs.
So why wouldn't I?
Now when the Steam sale is on, I'm
not going to feel so limited.
I'm going to just go crazy.
And my wallet's going to be empty in no time at all.
Yeah.
That's very true.
But you do need to check these community-driven,
does it work?
Because I was looking at those like, is my investment safe?
You know, if I buy this thing.
And the curious thing is, the only game that
doesn't work for me is Doom, which is white listed.
And I put my Steam client in give me all the things mode.
And everything that I purchased outside of it's tested
and supported worked until I decided
I'm going to purchase Doom.
Nothing.
Black screen and music.
That's all I get.
I'm not going to do that.
I'm not going to hold back.
I'm just going to buy it and have the confidence
that someone out there will fix this for me.
And because there are going to be plenty of gamers out there.
That is the Linux way, my friend.
Yeah, I'll just rant on Twitter if it doesn't work.
That's the way.
