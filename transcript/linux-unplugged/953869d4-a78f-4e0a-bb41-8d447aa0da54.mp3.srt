1
00:00:00,000 --> 00:00:02,600
My latest Linux box has more connectivity

2
00:00:02,600 --> 00:00:05,000
than a MacBook before 2021,

3
00:00:05,000 --> 00:00:08,120
has a full QWERTY keyboard and it fits in my pocket.

4
00:00:09,000 --> 00:00:11,260
It's the pocket popcorn computer.

5
00:00:11,260 --> 00:00:13,820
It's still really early days with this thing,

6
00:00:13,820 --> 00:00:17,620
but it's a handheld Linux device with a 1080p display

7
00:00:17,620 --> 00:00:20,240
and a pretty nice battery that is user replaceable

8
00:00:20,240 --> 00:00:22,560
and they're thin enough that you could legitimately

9
00:00:22,560 --> 00:00:24,320
probably buy three or four off of Amazon

10
00:00:24,320 --> 00:00:26,120
and just keep them in your backpack.

11
00:00:26,120 --> 00:00:29,560
It's got a backlit RGB keyboard

12
00:00:29,560 --> 00:00:31,220
and of course it runs Linux, right?

13
00:00:31,220 --> 00:00:36,220
I mean, obviously it's not like fully done yet.

14
00:00:36,520 --> 00:00:37,800
It still has a few rough edges,

15
00:00:37,800 --> 00:00:39,320
but I really like it so far.

16
00:00:39,320 --> 00:00:41,360
I just got it this morning and I've been playing with it.

17
00:00:41,360 --> 00:00:42,900
How rough are the rough edges?

18
00:00:42,900 --> 00:00:45,400
Well, they're rough.

19
00:00:45,400 --> 00:00:47,560
I don't know if there's really even a full image

20
00:00:47,560 --> 00:00:49,280
that's done yet for it.

21
00:00:49,280 --> 00:00:51,160
So it's a pretty basic command line device.

22
00:00:51,160 --> 00:00:54,100
Yeah, and there's some things like

23
00:00:54,100 --> 00:00:55,720
if you turn the keyboard backlighting on

24
00:00:55,720 --> 00:00:57,580
and then you don't turn it off before you shut it down,

25
00:00:57,580 --> 00:00:59,020
it's stuck on.

26
00:00:59,020 --> 00:01:01,360
But it's stuff that's like totally understandable

27
00:01:01,360 --> 00:01:05,400
for an early device that seems solvable.

28
00:01:05,400 --> 00:01:08,040
So it's not like I'm too worried about it.

29
00:01:08,040 --> 00:01:09,700
And it's funny how nice it is to have something

30
00:01:09,700 --> 00:01:12,440
that you can pull the back off of and replace the battery.

31
00:01:12,440 --> 00:01:15,880
Like it just sort of, you run your finger under there

32
00:01:15,880 --> 00:01:18,300
and it just kind of pops right off.

33
00:01:18,300 --> 00:01:20,560
And it's within a second I'm in there

34
00:01:20,560 --> 00:01:22,180
and I can swap the battery out.

35
00:01:22,180 --> 00:01:23,280
What a concept.

36
00:01:23,280 --> 00:01:26,360
I'm picturing an ASMR battery swap session here.

37
00:01:26,360 --> 00:01:38,760
Hello, friends, and welcome back to your weekly Linux talk show.

38
00:01:38,760 --> 00:01:39,760
My name is Chris.

39
00:01:39,760 --> 00:01:40,760
My name is Wes.

40
00:01:40,760 --> 00:01:41,760
And my name is Brent.

41
00:01:41,760 --> 00:01:42,760
Hello, gentlemen.

42
00:01:42,760 --> 00:01:45,880
I'll be playing with this popcorn computer for a little bit.

43
00:01:45,880 --> 00:01:50,620
I'll try to give you early impressions slash review next week.

44
00:01:50,620 --> 00:01:52,600
But coming up on the show this week,

45
00:01:52,600 --> 00:01:54,880
we've talked about a tricky problem in the past.

46
00:01:54,880 --> 00:01:59,880
It's Linux fragmentation in a way that we don't normally consider fragmentation.

47
00:01:59,880 --> 00:02:04,520
It's an actual tricky problem specifically for shipping applications

48
00:02:04,520 --> 00:02:06,900
on Linux and desktop applications.

49
00:02:06,900 --> 00:02:09,280
And there are several different types of technologies out there

50
00:02:09,280 --> 00:02:14,200
to solve this problem from Docker and snaps and app images.

51
00:02:14,200 --> 00:02:18,700
And Flatpak is one of the best known ones in our community and on the desktop.

52
00:02:18,700 --> 00:02:21,360
But recently a very critical analysis was posted

53
00:02:21,360 --> 00:02:25,400
that brings using Flatpaks into question to solve the various software

54
00:02:25,400 --> 00:02:27,040
distribution problems we have on Linux.

55
00:02:27,040 --> 00:02:28,920
In fact, you may have seen it.

56
00:02:28,920 --> 00:02:33,320
The post was titled, Flatpaks are not the future or something to that effect.

57
00:02:33,320 --> 00:02:38,040
So this week, what we wanted to do was work through some of those criticisms,

58
00:02:38,040 --> 00:02:40,580
respond to the ones that make sense to respond to,

59
00:02:40,580 --> 00:02:43,840
and maybe even discuss some of the changes already being made in Flatpak

60
00:02:43,840 --> 00:02:45,760
that address some of those concerns.

61
00:02:45,760 --> 00:02:49,560
So in just a little bit, Will Thompson, the director of Endless OS,

62
00:02:49,560 --> 00:02:51,360
or the platform for Endless, over at Endless,

63
00:02:51,360 --> 00:02:54,440
he's sort of like the king of Endless OS, will join us to discuss some of this.

64
00:02:54,440 --> 00:02:57,240
And Endless OS knows their Flatpaks.

65
00:02:57,240 --> 00:03:00,200
I'll have to get the number from Will, but it's a lot of Flatpaks.

66
00:03:00,200 --> 00:03:04,120
So before we get into all of that, I wanted to say time appropriate,

67
00:03:04,120 --> 00:03:06,600
greetings, virtual lug, hello, Mumble Room.

68
00:03:06,600 --> 00:03:08,960
Hello, everyone.

69
00:03:08,960 --> 00:03:10,960
Namaste.

70
00:03:10,960 --> 00:03:13,720
We have quite the panel today, which is great,

71
00:03:13,720 --> 00:03:17,640
because this is a topic that has been on all of our minds.

72
00:03:17,640 --> 00:03:21,240
And it seems every solution we've come up with has its group of critics.

73
00:03:21,240 --> 00:03:23,600
So I think it's going to be a good little chat.

74
00:03:23,600 --> 00:03:28,920
Well, before we dive into the nitty gritty details of Linux packaging,

75
00:03:28,920 --> 00:03:31,800
we do have a bit of early housekeeping to do today.

76
00:03:31,800 --> 00:03:37,280
So a plan is coming together.

77
00:03:37,280 --> 00:03:41,440
This is a big deal, and I wanted to give everybody a heads up as soon as possible.

78
00:03:41,440 --> 00:03:45,720
We're really early days into this, so I don't have everything figured out yet.

79
00:03:45,720 --> 00:03:49,920
But brace yourselves, we have some announcements to make.

80
00:03:49,920 --> 00:03:53,440
We are moving our meetup for the new server christening party

81
00:03:53,440 --> 00:03:56,760
to January 2nd, 2022.

82
00:03:56,760 --> 00:04:04,720
We're going to have a new year, new server, and a new love party,

83
00:04:04,720 --> 00:04:08,520
as well as the launch of a new Linux show.

84
00:04:08,520 --> 00:04:11,680
So let's get this all out there.

85
00:04:11,680 --> 00:04:16,840
We want you to come up to the studio on January 2nd, horrible virus aside.

86
00:04:16,840 --> 00:04:18,160
We're going to have to keep our eyes on that,

87
00:04:18,160 --> 00:04:22,200
because we just don't know at this point in time where that's going.

88
00:04:22,200 --> 00:04:23,680
So we will be keeping an eye on the news.

89
00:04:23,680 --> 00:04:25,240
We will try to stay flexible in that regard,

90
00:04:25,240 --> 00:04:27,120
and we're going to have to ask that of you as well.

91
00:04:27,120 --> 00:04:33,280
But right now, assuming things are OK, January 2nd, 2022,

92
00:04:33,280 --> 00:04:36,840
LUP, from that point forward, will be live on Sundays.

93
00:04:36,840 --> 00:04:39,400
This is a massive change, and it's not one that we're making lightly,

94
00:04:39,400 --> 00:04:42,000
because we love our Tuesday time slot.

95
00:04:42,000 --> 00:04:43,680
But we're moving a few things around.

96
00:04:43,680 --> 00:04:46,520
We'll have more information in that regard soon.

97
00:04:46,520 --> 00:04:50,040
That's one of the changes that's taking effect, starting January 2nd.

98
00:04:50,040 --> 00:04:53,480
LUP will be live on Sundays the same time.

99
00:04:53,480 --> 00:04:56,360
I'm going to make an effort, though, to participate in a live stream

100
00:04:56,360 --> 00:04:59,080
on Tuesdays at the regular time most weeks.

101
00:04:59,080 --> 00:05:00,480
I'll have more information on that soon.

102
00:05:00,480 --> 00:05:04,600
So there will still be some live stream and mumble attendance at that time.

103
00:05:04,600 --> 00:05:07,680
We'll also launch the new server. It'll be the christening party.

104
00:05:07,680 --> 00:05:10,280
We'll have a potluck here at the studio with the audience.

105
00:05:10,280 --> 00:05:13,880
And then what we'll do is we'll launch the server, we'll eat,

106
00:05:13,880 --> 00:05:17,000
and then Brent, Wes, and I will go into the studio

107
00:05:17,000 --> 00:05:20,880
and record a Linux unplugged, and our guests are welcome to stay here

108
00:05:20,880 --> 00:05:23,600
and listen to us record the show live in the studio.

109
00:05:23,600 --> 00:05:25,240
We both have a living room, which you'll be able to wait in,

110
00:05:25,240 --> 00:05:27,520
and, of course, the studio itself.

111
00:05:27,520 --> 00:05:30,160
And then that point forward, LUP will be on Sundays,

112
00:05:30,160 --> 00:05:33,040
and we'll also have a brand-new Linux show that is launched

113
00:05:33,040 --> 00:05:36,680
that I'll have more information on soon that I am super excited about.

114
00:05:36,680 --> 00:05:38,200
So there's a ton of stuff going on.

115
00:05:38,200 --> 00:05:41,560
New year, new server, new LUP, January 2nd.

116
00:05:41,560 --> 00:05:42,880
Come hang out with us in the studio.

117
00:05:42,880 --> 00:05:45,160
We will also try to live stream that party.

118
00:05:45,160 --> 00:05:46,880
I don't know how the hell we will do that.

119
00:05:46,880 --> 00:05:50,760
So it's like a 50-50 shot, but, you know, I'm willing to, like,

120
00:05:50,760 --> 00:05:53,720
bring up some, like, a jitzy and set it up on a few devices

121
00:05:53,720 --> 00:05:55,680
around the house or something.

122
00:05:55,680 --> 00:05:56,920
We'll figure it out.

123
00:05:56,920 --> 00:05:59,160
And if you are in the area or you can make it,

124
00:05:59,160 --> 00:06:02,200
you're welcome to join us for the potluck and the new server christening

125
00:06:02,200 --> 00:06:04,520
and the new LUP live day.

126
00:06:04,520 --> 00:06:06,960
We can talk more about that, too, of course, in the post show.

127
00:06:06,960 --> 00:06:09,200
You're always welcome to join us on Tuesdays

128
00:06:09,200 --> 00:06:11,040
while we are remaining in this time slot.

129
00:06:11,040 --> 00:06:14,120
I think we're going to be live every week for the rest of the year,

130
00:06:14,120 --> 00:06:17,560
as far as I can figure, because LUP doesn't land on a holiday.

131
00:06:17,560 --> 00:06:19,320
So we will be live for a few more Tuesdays,

132
00:06:19,320 --> 00:06:21,200
and we would absolutely love to have you.

133
00:06:21,200 --> 00:06:22,600
So check in on us.

134
00:06:22,600 --> 00:06:26,200
Say goodbye, maybe, you know, if you're a Tuesday person.

135
00:06:26,200 --> 00:06:29,600
And if you're a Sunday person, pencil it in.

136
00:06:29,600 --> 00:06:31,240
Consider joining us.

137
00:06:31,240 --> 00:06:34,760
And hopefully, hopefully, you'll love the new show

138
00:06:34,760 --> 00:06:35,640
when it's launched and announced.

139
00:06:35,640 --> 00:06:36,920
But I'll have more information about that later,

140
00:06:36,920 --> 00:06:38,360
because we have a lot more to get into.

141
00:06:38,360 --> 00:06:40,480
And hey, don't forget jupyterbroadcasting.com

142
00:06:40,480 --> 00:06:45,040
slash calendar to actually find out when we're live.

143
00:06:45,040 --> 00:06:46,800
Yeah, that's very, very handy.

144
00:06:46,800 --> 00:06:51,760
So let's talk about one of the most popular solutions

145
00:06:51,760 --> 00:06:55,200
to solve the Linux desktop problem.

146
00:06:55,200 --> 00:06:58,400
And that is really that we have so many different distributions

147
00:06:58,400 --> 00:06:59,920
with so many different library versions

148
00:06:59,920 --> 00:07:01,400
and so many different this and that's.

149
00:07:01,400 --> 00:07:04,880
Plus, you have a general requirement

150
00:07:04,880 --> 00:07:07,840
to start sandboxing applications for security purposes.

151
00:07:07,840 --> 00:07:10,320
If you want users to be able to download things safely online,

152
00:07:10,320 --> 00:07:12,600
it'd be nice that those things are limited

153
00:07:12,600 --> 00:07:14,560
in what they can do to a system.

154
00:07:14,560 --> 00:07:16,720
And it solves a problem.

155
00:07:16,720 --> 00:07:18,280
And Flatpak isn't the only one.

156
00:07:18,280 --> 00:07:19,040
Snaps do this.

157
00:07:19,040 --> 00:07:20,760
App Images do this.

158
00:07:20,760 --> 00:07:24,680
In a lot of ways, just general containers can do this.

159
00:07:24,680 --> 00:07:26,920
But today, we're talking about Flatpak.

160
00:07:26,920 --> 00:07:29,440
And I like to think of it, for the end user,

161
00:07:29,440 --> 00:07:31,720
it solves a problem where you can

162
00:07:31,720 --> 00:07:33,480
be on an old version of Debian, and I

163
00:07:33,480 --> 00:07:35,160
can be on a brand new version of Fedora,

164
00:07:35,160 --> 00:07:37,360
but we can run the same application.

165
00:07:37,360 --> 00:07:39,760
In a lot of ways, that's how it's going to impact end users,

166
00:07:39,760 --> 00:07:41,000
ultimately.

167
00:07:41,000 --> 00:07:42,320
But in a lot of ways, it also means

168
00:07:42,320 --> 00:07:44,400
we have a way to preserve software.

169
00:07:44,400 --> 00:07:48,480
It also means we can run new software on old systems.

170
00:07:48,480 --> 00:07:52,360
And it gives users and developers predictability.

171
00:07:52,360 --> 00:07:54,920
You can always expect that a subset of runtimes

172
00:07:54,920 --> 00:07:56,280
will be supported and compatible.

173
00:07:56,280 --> 00:07:58,800
So you actually have a versioned thing on the Linux desktop

174
00:07:58,800 --> 00:08:00,640
that you can target.

175
00:08:00,640 --> 00:08:03,040
So Flatpak solves those kinds of things with runtimes

176
00:08:03,040 --> 00:08:06,000
and whatnot in there.

177
00:08:06,000 --> 00:08:08,000
And it solves the sandboxing problem.

178
00:08:08,000 --> 00:08:12,160
And it also lets vendors self-host their own repositories

179
00:08:12,160 --> 00:08:13,800
and projects.

180
00:08:13,800 --> 00:08:15,920
It does support commercial software.

181
00:08:15,920 --> 00:08:18,360
And it also has a very popular distribution mechanism

182
00:08:18,360 --> 00:08:21,680
through FlatHub that is being integrated into distributions

183
00:08:21,680 --> 00:08:23,280
like Fedora.

184
00:08:23,280 --> 00:08:25,920
But nothing is so perfect that it can't be criticized.

185
00:08:25,920 --> 00:08:28,800
And the reality is there is quite a bit of criticism

186
00:08:28,800 --> 00:08:31,480
out there about Flatpaks.

187
00:08:31,480 --> 00:08:33,640
And the one that's really been going around this week

188
00:08:33,640 --> 00:08:38,040
is a criticism of some of the design choices in Flatpak.

189
00:08:38,040 --> 00:08:39,360
And one of them really comes down

190
00:08:39,360 --> 00:08:44,320
to storage and just duplication of work and libraries.

191
00:08:44,320 --> 00:08:46,440
Well, Will Thompson wrote a blog post this week

192
00:08:46,440 --> 00:08:48,640
addressing this criticism.

193
00:08:48,640 --> 00:08:50,760
And with Will's role at Endless, he's

194
00:08:50,760 --> 00:08:53,160
pretty deep in this ecosystem and is definitely

195
00:08:53,160 --> 00:08:54,600
one of the people to talk about this.

196
00:08:54,600 --> 00:08:56,240
Will, welcome to Linux Unplugged.

197
00:08:56,240 --> 00:08:57,360
Thanks, it's really great to be here.

198
00:08:57,360 --> 00:08:58,640
Thanks for the invitation.

199
00:08:58,640 --> 00:09:01,360
So you are the director of platform at Endless OS.

200
00:09:01,360 --> 00:09:03,680
And I get a sense that means you're

201
00:09:03,680 --> 00:09:06,240
pretty familiar with how many Flatpaks you guys ship

202
00:09:06,240 --> 00:09:08,640
and the role of Flatpaks in the Endless distribution.

203
00:09:08,640 --> 00:09:09,280
Is that right?

204
00:09:09,280 --> 00:09:10,400
Yeah, I guess so, yeah.

205
00:09:10,400 --> 00:09:12,280
I'm the director of OS these days.

206
00:09:12,280 --> 00:09:13,600
Though it's a funny situation.

207
00:09:13,600 --> 00:09:15,840
You'd expect from the name of Endless OS Foundation

208
00:09:15,840 --> 00:09:17,320
we only do an OS.

209
00:09:17,320 --> 00:09:18,840
We do other things as well.

210
00:09:18,840 --> 00:09:22,240
But yeah, I'm responsible for the OS side of things.

211
00:09:22,240 --> 00:09:24,800
The whole distro is based around Flatpaks.

212
00:09:24,800 --> 00:09:29,040
We ship a small and shrinking number

213
00:09:29,040 --> 00:09:31,240
of apps baked into the system.

214
00:09:31,240 --> 00:09:35,080
And as much as possible is done with Flatpaks on top of that.

215
00:09:35,080 --> 00:09:37,040
So a typical installation of Endless

216
00:09:37,040 --> 00:09:40,760
comes pre-installed with 60, 80 Flatpaks out of the box.

217
00:09:40,760 --> 00:09:43,280
My system right here has 160-something.

218
00:09:43,280 --> 00:09:45,080
Wow, that definitely is more than anything

219
00:09:45,080 --> 00:09:46,120
I've got in any of my boxes.

220
00:09:46,120 --> 00:09:49,240
So you're really living the Flatpak lifestyle.

221
00:09:49,240 --> 00:09:52,040
And so you must be just completely out of disk space

222
00:09:52,040 --> 00:09:53,880
because one of the criticisms I've seen

223
00:09:53,880 --> 00:09:56,120
is that once you have that many Flatpaks,

224
00:09:56,120 --> 00:09:59,240
you have a hard drive full of runtimes and duplicate

225
00:09:59,240 --> 00:10:00,280
libraries.

226
00:10:00,280 --> 00:10:01,160
Is this true?

227
00:10:01,160 --> 00:10:05,120
Well, it depends what you think of as full and big.

228
00:10:05,120 --> 00:10:06,280
I ran some numbers on this.

229
00:10:06,280 --> 00:10:08,520
This is one of the things that jumped out at me

230
00:10:08,520 --> 00:10:09,200
from this post.

231
00:10:09,200 --> 00:10:12,280
Because one of the first projects I worked on at Endless

232
00:10:12,280 --> 00:10:14,760
was around a downloadable version.

233
00:10:14,760 --> 00:10:17,280
And although part of the thesis of Endless OS

234
00:10:17,280 --> 00:10:20,480
is that disk space, when you've pre-installed

235
00:10:20,480 --> 00:10:22,920
lots of offline content, is much cheaper

236
00:10:22,920 --> 00:10:26,400
than getting internet connectivity in a rural town.

237
00:10:26,400 --> 00:10:29,000
So you better use the cheap disk space

238
00:10:29,000 --> 00:10:30,400
to store as much as possible so you

239
00:10:30,400 --> 00:10:31,880
don't have to download it later.

240
00:10:31,880 --> 00:10:33,920
But then when you come to actually people wanting

241
00:10:33,920 --> 00:10:36,160
to download it, you start looking a little closer

242
00:10:36,160 --> 00:10:39,120
at how much space things are using.

243
00:10:39,120 --> 00:10:42,280
From those 160-something apps on my system,

244
00:10:42,280 --> 00:10:44,040
I can't measure the apps quite so easily.

245
00:10:44,040 --> 00:10:44,560
Maybe I can.

246
00:10:44,560 --> 00:10:45,040
We'll see.

247
00:10:45,040 --> 00:10:46,960
We'll do it live.

248
00:10:46,960 --> 00:10:47,760
Let's check.

249
00:10:47,760 --> 00:10:51,760
But while I type and see if I can type fast enough

250
00:10:51,760 --> 00:10:53,720
to type while I can talk.

251
00:10:53,720 --> 00:10:55,080
Hey, real-time data is worth it.

252
00:10:55,080 --> 00:10:55,920
Absolutely.

253
00:10:55,920 --> 00:10:58,360
That's what we're all here for.

254
00:10:58,360 --> 00:11:00,920
My fundamental point here is the data exists.

255
00:11:00,920 --> 00:11:02,080
You just have to look for it.

256
00:11:02,080 --> 00:11:04,400
So I'm running the numbers on the app.

257
00:11:04,400 --> 00:11:08,200
So I have 56 gigabytes of Flatpak stuff installed.

258
00:11:08,200 --> 00:11:10,840
And bear in mind, that includes a complete offline copy.

259
00:11:10,840 --> 00:11:12,160
No, not a complete offline copy.

260
00:11:12,160 --> 00:11:16,080
A large subset of Wikipedia in two languages,

261
00:11:16,080 --> 00:11:18,400
loads of offline reference material in video form

262
00:11:18,400 --> 00:11:20,520
and so on, as well as things you might normally

263
00:11:20,520 --> 00:11:21,920
think about as apps.

264
00:11:21,920 --> 00:11:27,320
And so that's 56 gigs of stuff, of which 8.7 gigs

265
00:11:27,320 --> 00:11:30,360
is the runtimes, excluding some noise

266
00:11:30,360 --> 00:11:32,280
around the edges for translations and stuff

267
00:11:32,280 --> 00:11:33,360
like that.

268
00:11:33,360 --> 00:11:39,400
So you may think that's 8.7 gigs of the runtimes for those apps.

269
00:11:39,400 --> 00:11:40,520
That sounds like quite a lot.

270
00:11:40,520 --> 00:11:42,600
But the basic OS is only 4 gigabytes.

271
00:11:42,600 --> 00:11:45,480
So I think if you have a more conventional Linux system lying

272
00:11:45,480 --> 00:11:47,160
around, it'll be interesting to look

273
00:11:47,160 --> 00:11:48,840
at how much storage you have on there

274
00:11:48,840 --> 00:11:51,440
for the apps versus the platform they depend on.

275
00:11:51,440 --> 00:11:53,160
A little harder to separate them, perhaps.

276
00:11:53,160 --> 00:11:53,880
Sure.

277
00:11:53,880 --> 00:11:56,600
And if you install your first Flatpak,

278
00:11:56,600 --> 00:12:00,320
maybe it's GIMP or Steam for some of our listeners,

279
00:12:00,320 --> 00:12:02,760
you'll see a lot of runtime dependencies pull down.

280
00:12:02,760 --> 00:12:04,360
And it does seem like, gosh, that's a lot

281
00:12:04,360 --> 00:12:06,040
to install one application.

282
00:12:06,040 --> 00:12:08,600
But then when you install your second application that

283
00:12:08,600 --> 00:12:10,080
uses some of those same runtimes,

284
00:12:10,080 --> 00:12:11,160
it's already on the system.

285
00:12:11,160 --> 00:12:13,560
And the next app installs much quicker

286
00:12:13,560 --> 00:12:15,160
and pulls down a lot less data.

287
00:12:15,160 --> 00:12:16,360
Yeah, that's exactly right.

288
00:12:16,360 --> 00:12:18,080
And I had a look at this as well.

289
00:12:18,080 --> 00:12:20,360
And although there are a few stragglers

290
00:12:20,360 --> 00:12:24,160
where there's one app using one runtime, which is not ideal,

291
00:12:24,160 --> 00:12:26,600
the vast majority of the apps on my system

292
00:12:26,600 --> 00:12:28,680
are shared across five runtimes.

293
00:12:28,680 --> 00:12:31,560
There's more than 100 of them across just five runtimes.

294
00:12:31,560 --> 00:12:33,640
So I think that if you amortize the cost out

295
00:12:33,640 --> 00:12:36,520
across of all the apps using the same runtime,

296
00:12:36,520 --> 00:12:39,080
it starts looking a little bit less scary compared

297
00:12:39,080 --> 00:12:40,800
to the first impression.

298
00:12:40,800 --> 00:12:42,840
That's exactly how I felt when I first

299
00:12:42,840 --> 00:12:44,820
started using a lot of Flatpak applications.

300
00:12:44,820 --> 00:12:46,960
When I went all in on Flatpak applications

301
00:12:46,960 --> 00:12:48,600
for a few of my Fedora installs, that

302
00:12:48,600 --> 00:12:49,840
was essentially my experience.

303
00:12:49,840 --> 00:12:51,720
So let's move to some of the other criticisms

304
00:12:51,720 --> 00:12:53,240
just to get your thoughts on it.

305
00:12:53,240 --> 00:12:55,600
I think one of the other criticisms that resonated

306
00:12:55,600 --> 00:12:59,060
for me was the sandbox still allows for essentially

307
00:12:59,060 --> 00:13:00,920
full access to somebody's home directory

308
00:13:00,920 --> 00:13:03,480
where a lot of their important information would be.

309
00:13:03,480 --> 00:13:05,080
And it allows for writing to something

310
00:13:05,080 --> 00:13:07,800
like the dot autostart directory, which could just

311
00:13:07,800 --> 00:13:11,760
reinfect a user's system upon login over and over again.

312
00:13:11,760 --> 00:13:13,680
And it makes the assertion that it's not

313
00:13:13,680 --> 00:13:15,560
like Android and iOS, so therefore, it's

314
00:13:15,560 --> 00:13:17,060
not good enough.

315
00:13:17,060 --> 00:13:18,400
What are your thoughts on that?

316
00:13:18,400 --> 00:13:21,000
Because this is obviously an important issue for Endless.

317
00:13:21,000 --> 00:13:23,520
Yeah, it is.

318
00:13:23,520 --> 00:13:26,200
I think it's a little bit more complicated than that post

319
00:13:26,200 --> 00:13:27,000
set out.

320
00:13:27,000 --> 00:13:29,320
Some apps can certainly write to those locations,

321
00:13:29,320 --> 00:13:31,600
but the Flatpak sandbox, by default,

322
00:13:31,600 --> 00:13:33,240
forbids all of that stuff.

323
00:13:33,240 --> 00:13:37,200
There's a kind of tricky balance of pragmatism and security

324
00:13:37,200 --> 00:13:37,880
here.

325
00:13:37,880 --> 00:13:40,440
FlatHub would be useless if the apps didn't work.

326
00:13:40,440 --> 00:13:43,040
And if the apps are written expecting

327
00:13:43,040 --> 00:13:45,120
they can write to your whole home directory,

328
00:13:45,120 --> 00:13:47,160
then they can't be made to work without that,

329
00:13:47,160 --> 00:13:48,840
without someone going and modifying them.

330
00:13:48,840 --> 00:13:54,200
And that may be intractable right now for various reasons.

331
00:13:54,200 --> 00:13:57,560
But the preferred way for this stuff to work

332
00:13:57,560 --> 00:14:00,080
is the apps don't have these kind of static holes

333
00:14:00,080 --> 00:14:00,920
in the sandbox.

334
00:14:00,920 --> 00:14:03,920
And they instead request access to just the resources

335
00:14:03,920 --> 00:14:04,720
they need.

336
00:14:04,720 --> 00:14:05,720
So that could be files.

337
00:14:05,720 --> 00:14:07,040
It could be a webcam.

338
00:14:07,040 --> 00:14:08,680
Hopefully, in the not too distant future,

339
00:14:08,680 --> 00:14:12,600
your microphone will be treated the same way.

340
00:14:12,600 --> 00:14:17,120
And one of the criticisms that I think is totally valid

341
00:14:17,120 --> 00:14:20,120
is that previous versions of GNOME software

342
00:14:20,120 --> 00:14:22,320
would claim that if an app is a Flatpak,

343
00:14:22,320 --> 00:14:26,160
then it has a nice badge saying it's sandboxed.

344
00:14:26,160 --> 00:14:28,160
And this gives you this false sense of security,

345
00:14:28,160 --> 00:14:29,680
which I think is totally true, which

346
00:14:29,680 --> 00:14:34,640
is why GNOME 41 software totally revamps this presentation.

347
00:14:34,640 --> 00:14:36,640
So one of the big changes in GNOME 41

348
00:14:36,640 --> 00:14:38,600
was a major revamp to GNOME software, which

349
00:14:38,600 --> 00:14:40,280
Endless contributed a lot to.

350
00:14:40,280 --> 00:14:43,200
And one of those changes is that now apps

351
00:14:43,200 --> 00:14:46,280
have a kind of traffic light system of, are they safe?

352
00:14:46,280 --> 00:14:47,600
Are they possibly unsafe?

353
00:14:47,600 --> 00:14:48,960
Or are they unsafe?

354
00:14:48,960 --> 00:14:51,160
And so this is based on sort of heuristics

355
00:14:51,160 --> 00:14:53,880
about the kinds of these kind of sandbox holes

356
00:14:53,880 --> 00:14:56,400
that they request access to.

357
00:14:56,400 --> 00:14:58,920
So you can make a somewhat more informed decision.

358
00:14:58,920 --> 00:15:02,540
I mean, whether people at the end of the day

359
00:15:02,540 --> 00:15:05,280
would prefer to have Zoom work or not is another question.

360
00:15:05,280 --> 00:15:07,760
But the information, I think, is a lot

361
00:15:07,760 --> 00:15:09,120
less misleading these days.

362
00:15:09,120 --> 00:15:10,600
And so if anything is shot in the other direction,

363
00:15:10,600 --> 00:15:13,800
there's lots of apps which have the word unsafe near them,

364
00:15:13,800 --> 00:15:18,600
which if you're taking a strict reading of this, they are.

365
00:15:18,600 --> 00:15:21,840
So I guess the hope is that this can act as a stick

366
00:15:21,840 --> 00:15:25,400
where the carrot is better APIs for getting out of the box.

367
00:15:25,400 --> 00:15:26,260
Right.

368
00:15:26,260 --> 00:15:29,360
I wanted to recommend a really nice graphical application

369
00:15:29,360 --> 00:15:33,760
to review and modify Flatpak application permissions called

370
00:15:33,760 --> 00:15:34,520
Flat Seal.

371
00:15:34,520 --> 00:15:36,020
We'll have a link to this in the show notes.

372
00:15:36,020 --> 00:15:37,360
And you can open that up.

373
00:15:37,360 --> 00:15:38,920
It'll show you your Flatpak apps.

374
00:15:38,920 --> 00:15:40,480
And it'll give you a really quick overview

375
00:15:40,480 --> 00:15:42,000
of what they can and can't do.

376
00:15:42,000 --> 00:15:45,480
And just even having that kind of information is nice.

377
00:15:45,480 --> 00:15:47,280
And that's something that Flatpak enables.

378
00:15:47,280 --> 00:15:49,440
So Flat Seal is that app.

379
00:15:49,440 --> 00:15:52,400
OK, so, well, there was one other criticism

380
00:15:52,400 --> 00:15:54,520
that I read in there that I thought, hmm, yeah,

381
00:15:54,520 --> 00:15:56,240
that doesn't seem great.

382
00:15:56,240 --> 00:15:58,240
And it's when he talks about namespace collision.

383
00:15:58,240 --> 00:16:00,640
He says Fedora publishes a Flatpak of GIMP

384
00:16:00,640 --> 00:16:02,880
as org.gimp.gimp.

385
00:16:02,880 --> 00:16:05,920
But that conflicts with the official org.gimp.gimp

386
00:16:05,920 --> 00:16:09,200
that is published by the actual GIMP developers on FlatHub.

387
00:16:09,200 --> 00:16:11,880
And he says they should have solved for this namespace

388
00:16:11,880 --> 00:16:13,080
collision problem ahead of time.

389
00:16:13,080 --> 00:16:15,160
And now it's sort of too late.

390
00:16:15,160 --> 00:16:16,160
Your thoughts on that?

391
00:16:16,160 --> 00:16:18,320
Yeah, this is an interesting one, right?

392
00:16:18,320 --> 00:16:22,240
Because one of the strengths of the Flatpak as a technology

393
00:16:22,240 --> 00:16:25,440
is that it's possible to have multiple repositories.

394
00:16:25,440 --> 00:16:29,080
And so Endless has its own app repo as well.

395
00:16:29,080 --> 00:16:32,560
So Endless OS systems come pre-configured to install apps

396
00:16:32,560 --> 00:16:34,240
and have apps pre-installed from FlatHub

397
00:16:34,240 --> 00:16:36,320
and also from our own apps repository.

398
00:16:36,320 --> 00:16:39,720
That's kind of mainly because we deployed and released

399
00:16:39,720 --> 00:16:43,880
Endless OS with Flatpak before FlatHub existed back in 2016.

400
00:16:43,880 --> 00:16:46,040
And over time, we've been careful to avoid

401
00:16:46,040 --> 00:16:47,160
this kind of duplication.

402
00:16:47,160 --> 00:16:48,560
So when an app appears on FlatHub,

403
00:16:48,560 --> 00:16:50,080
we would remove it from EOS apps.

404
00:16:50,080 --> 00:16:51,560
I mean, actually, in the early days,

405
00:16:51,560 --> 00:16:54,920
often we would be submitting the app from our store

406
00:16:54,920 --> 00:16:56,800
up to FlatHub.

407
00:16:56,800 --> 00:16:58,920
And for exactly this kind of reason,

408
00:16:58,920 --> 00:17:01,760
it makes for a pretty confusing user experience

409
00:17:01,760 --> 00:17:03,840
when you're offered two apparently identical ways

410
00:17:03,840 --> 00:17:04,680
to install the same app,

411
00:17:04,680 --> 00:17:06,360
and they may actually be pretty different.

412
00:17:06,360 --> 00:17:08,280
Maybe it wouldn't have been how I would have done it.

413
00:17:08,280 --> 00:17:11,120
But the other side of it, I suppose,

414
00:17:11,120 --> 00:17:14,760
is that because of the way the sandboxing works,

415
00:17:14,760 --> 00:17:16,720
apps only have access out of the box

416
00:17:16,720 --> 00:17:20,800
to data in a directory named for the app.

417
00:17:20,800 --> 00:17:22,600
So you might hope that if you've installed

418
00:17:22,600 --> 00:17:24,640
the Fedora version of the GIMP,

419
00:17:24,640 --> 00:17:25,480
and then you think, oh, actually,

420
00:17:25,480 --> 00:17:26,760
the version on FlatHub is fresher,

421
00:17:26,760 --> 00:17:27,600
and you switch to that,

422
00:17:27,600 --> 00:17:29,640
you would probably like it to not lose all your settings,

423
00:17:29,640 --> 00:17:32,560
to not lose all of the dynamic permissions

424
00:17:32,560 --> 00:17:34,760
you have given it through the portal system

425
00:17:34,760 --> 00:17:36,800
in a future month, such a year,

426
00:17:36,800 --> 00:17:39,840
when GIMP actually uses the portal APIs

427
00:17:39,840 --> 00:17:41,960
that FlatHub already provides.

428
00:17:41,960 --> 00:17:42,800
This is a problem,

429
00:17:42,800 --> 00:17:44,240
and it's one we've tried to avoid endless

430
00:17:44,240 --> 00:17:48,480
by just not doing this, if that makes sense.

431
00:17:48,480 --> 00:17:49,400
Yeah, I mean, it does.

432
00:17:49,400 --> 00:17:51,480
And that is sort of the nice thing is you can do that.

433
00:17:51,480 --> 00:17:52,920
You can have your own repository.

434
00:17:52,920 --> 00:17:54,720
There's also all these different types of apps, right?

435
00:17:54,720 --> 00:17:56,400
I mean, it's one thing when we talk about GIMP

436
00:17:56,400 --> 00:17:57,680
because it's free software

437
00:17:57,680 --> 00:17:58,960
that multiple people can package

438
00:17:58,960 --> 00:18:01,000
versus maybe some of the proprietary apps,

439
00:18:01,000 --> 00:18:03,040
which the blog we're discussing also

440
00:18:03,040 --> 00:18:04,360
maybe puts a little focus on,

441
00:18:04,360 --> 00:18:07,240
and it might not have that problem with, say, Slack.

442
00:18:07,240 --> 00:18:09,320
Yeah, it might not, and the nice thing,

443
00:18:09,320 --> 00:18:11,840
one of the, I think, upsides of Flatpack

444
00:18:11,840 --> 00:18:13,360
and the standard selection of runtimes

445
00:18:13,360 --> 00:18:14,520
as an app developer is it gives you

446
00:18:14,520 --> 00:18:16,920
the stable baseline to target,

447
00:18:16,920 --> 00:18:17,760
and I think that's important

448
00:18:17,760 --> 00:18:20,280
both for larger commercial developers

449
00:18:20,280 --> 00:18:22,320
but also for small indie developers.

450
00:18:22,320 --> 00:18:23,480
There are loads of apps

451
00:18:23,480 --> 00:18:25,880
which have been written in the past year or so

452
00:18:25,880 --> 00:18:27,720
which are popping up straight onto FlatHub,

453
00:18:27,720 --> 00:18:29,160
and they haven't had to run the gauntlet

454
00:18:29,160 --> 00:18:31,080
getting through, you know,

455
00:18:31,080 --> 00:18:32,800
someone has to painstakingly submit them

456
00:18:32,800 --> 00:18:34,720
to, you know, 20 distros or so.

457
00:18:34,720 --> 00:18:37,600
So, yeah, I think one of the most interesting examples

458
00:18:37,600 --> 00:18:40,320
is OBS, the live streaming software.

459
00:18:40,320 --> 00:18:42,200
But backing up a bit, most apps on FlatHub

460
00:18:42,200 --> 00:18:44,600
are maintained using a Git repository

461
00:18:44,600 --> 00:18:47,280
on the FlatHub GitHub org,

462
00:18:47,280 --> 00:18:49,960
with one historical exception has been Firefox.

463
00:18:49,960 --> 00:18:53,200
The Mozilla, when they make a new Firefox release,

464
00:18:53,200 --> 00:18:55,160
they publish the same official binary

465
00:18:55,160 --> 00:18:56,480
directly into FlatHub,

466
00:18:56,480 --> 00:18:57,560
so it's the same bytes

467
00:18:57,560 --> 00:18:59,400
that you can download from their website,

468
00:18:59,400 --> 00:19:00,600
which has its ups and downs,

469
00:19:00,600 --> 00:19:01,840
but one of the ups is that it's got

470
00:19:01,840 --> 00:19:04,560
all of the official Mozilla API keys baked into it.

471
00:19:04,560 --> 00:19:07,240
And FlatHub now has, or is about to have,

472
00:19:07,240 --> 00:19:09,160
I forget which, the second such app,

473
00:19:09,160 --> 00:19:12,080
OBS, the live streaming studio software,

474
00:19:12,080 --> 00:19:14,800
will now be published directly to FlatHub.

475
00:19:14,800 --> 00:19:16,840
And again, it has, for the first time,

476
00:19:16,840 --> 00:19:18,480
other than the Ubuntu package,

477
00:19:18,480 --> 00:19:19,480
so I suppose the second time,

478
00:19:19,480 --> 00:19:20,800
but non-Ubuntu users can get

479
00:19:20,800 --> 00:19:22,640
an officially supported version of that

480
00:19:22,640 --> 00:19:24,920
that has the API keys baked into it

481
00:19:24,920 --> 00:19:26,520
to access various web services

482
00:19:26,520 --> 00:19:28,960
that community source builds don't get.

483
00:19:28,960 --> 00:19:30,680
And by publishing it to this one place,

484
00:19:30,680 --> 00:19:32,560
they can reach all of the districts.

485
00:19:32,560 --> 00:19:34,280
That's really exciting to hear, actually.

486
00:19:34,280 --> 00:19:36,360
I think the other general criticism

487
00:19:36,360 --> 00:19:39,120
that really kind of comes down to philosophy,

488
00:19:39,120 --> 00:19:41,360
and not really a technical criticism,

489
00:19:41,360 --> 00:19:42,880
it's common in our community,

490
00:19:42,880 --> 00:19:44,000
and it's one that our community

491
00:19:44,000 --> 00:19:45,640
is particularly quick to go to,

492
00:19:45,640 --> 00:19:47,680
and that is just a general criticism

493
00:19:47,680 --> 00:19:51,160
around the complexity of all of this.

494
00:19:51,160 --> 00:19:53,160
It's getting so complex

495
00:19:53,160 --> 00:19:55,840
that it's getting beyond the scope

496
00:19:55,840 --> 00:19:57,960
of an average user's ability to understand,

497
00:19:57,960 --> 00:20:00,360
and therefore, it's a negative thing.

498
00:20:00,360 --> 00:20:01,440
What are your thoughts on that?

499
00:20:01,440 --> 00:20:03,280
Well, who is your average user?

500
00:20:05,280 --> 00:20:07,120
The technology seems,

501
00:20:07,120 --> 00:20:10,120
some of it is pretty complicated.

502
00:20:10,120 --> 00:20:13,240
The way that the portal APIs work

503
00:20:13,240 --> 00:20:17,800
to securely pass access to a single resource

504
00:20:17,800 --> 00:20:19,120
from the host into the Flatback is,

505
00:20:19,120 --> 00:20:20,600
yeah, that's certainly more complicated

506
00:20:20,600 --> 00:20:21,840
than just opening a file on disk.

507
00:20:21,840 --> 00:20:24,360
But I think we all here, perhaps,

508
00:20:24,360 --> 00:20:25,960
and I'm pretty sure the author of this post agrees,

509
00:20:25,960 --> 00:20:27,840
that actually sandboxing is a thing we really do want.

510
00:20:27,840 --> 00:20:29,520
We do want this fine-grained,

511
00:20:29,520 --> 00:20:31,400
user-interactive runtime permission system

512
00:20:31,400 --> 00:20:34,280
that requires the app to make Flatback-specific

513
00:20:34,280 --> 00:20:36,440
API calls to activate permission dialogues.

514
00:20:36,440 --> 00:20:37,880
I'm quoting directly from this blog post

515
00:20:37,880 --> 00:20:40,800
because I agree, and that is what Flatback provides.

516
00:20:40,800 --> 00:20:41,920
It has that.

517
00:20:41,920 --> 00:20:43,960
So this is a nice point.

518
00:20:43,960 --> 00:20:44,800
We agree on this.

519
00:20:44,800 --> 00:20:45,640
This is good.

520
00:20:45,640 --> 00:20:48,560
And you need some complexity that you don't have

521
00:20:48,560 --> 00:20:51,680
with just simple file system access to enable that.

522
00:20:51,680 --> 00:20:53,120
But one of the things that works well

523
00:20:53,120 --> 00:20:56,000
with Flatback for EndlessOS is that it makes,

524
00:20:56,000 --> 00:20:58,240
but by really wholeheartedly adopting it,

525
00:20:58,240 --> 00:21:00,680
it actually makes the whole platform simpler

526
00:21:00,680 --> 00:21:02,480
to administer, quote unquote,

527
00:21:02,480 --> 00:21:03,720
particularly if you're not the kind of person

528
00:21:03,720 --> 00:21:05,320
who essentially wants to administer a computer.

529
00:21:05,320 --> 00:21:06,720
You just want to use it.

530
00:21:06,720 --> 00:21:09,800
So Flatback uses OS Tree, which is this,

531
00:21:10,680 --> 00:21:13,280
it's a bit like Git for computer programs,

532
00:21:13,280 --> 00:21:14,920
or Git for file systems.

533
00:21:14,920 --> 00:21:17,400
One of the things that works really well in EndlessOS

534
00:21:17,400 --> 00:21:21,040
is that we've really adopted Flatback wholeheartedly.

535
00:21:21,040 --> 00:21:25,080
Flatback is a footnote about podman containers,

536
00:21:25,080 --> 00:21:28,120
but all apps on the system from a user

537
00:21:28,120 --> 00:21:30,160
who doesn't know what a terminal is, is perspective.

538
00:21:30,160 --> 00:21:31,400
They're all coming from Flatbacks

539
00:21:31,400 --> 00:21:32,960
or they're baked into the OS.

540
00:21:32,960 --> 00:21:35,360
And the OS is just like Flatbacks are,

541
00:21:35,360 --> 00:21:38,160
it's distributed as a single immutable blob.

542
00:21:38,160 --> 00:21:41,280
You can't add packages or remove packages from EndlessOS.

543
00:21:41,280 --> 00:21:44,200
It is a single unit and it gets updated atomically

544
00:21:44,200 --> 00:21:47,960
using the same duplication for updates as Flatback provides.

545
00:21:47,960 --> 00:21:49,640
You can roll back to the previous version,

546
00:21:49,640 --> 00:21:52,480
which is kept around in case of something terrible.

547
00:21:52,480 --> 00:21:54,320
And so this actually makes for a really simple system

548
00:21:54,320 --> 00:21:56,760
that for more than half a decade,

549
00:21:56,760 --> 00:21:59,520
EndlessOS systems have been automatically updating

550
00:21:59,520 --> 00:22:02,560
if they're online, both the OS and Flatbacks.

551
00:22:02,560 --> 00:22:04,960
If the network connection is not metered,

552
00:22:04,960 --> 00:22:08,320
this happens automatically in the background and safely.

553
00:22:08,320 --> 00:22:11,000
So the resulting complexity for a user,

554
00:22:11,000 --> 00:22:13,360
I would claim is actually less.

555
00:22:13,360 --> 00:22:14,960
You have one place to get your app.

556
00:22:14,960 --> 00:22:16,440
You have one button to hit to install it.

557
00:22:16,440 --> 00:22:18,400
If you press Remove, it's gone.

558
00:22:18,400 --> 00:22:19,640
You can't break the OS.

559
00:22:19,640 --> 00:22:21,560
I would say that's been my experience too,

560
00:22:21,560 --> 00:22:24,080
is there may be more going on under the hood,

561
00:22:24,080 --> 00:22:26,280
but it has, from an end user's perspective,

562
00:22:26,280 --> 00:22:27,680
especially when I'm using something like

563
00:22:27,680 --> 00:22:31,960
GNOME Software and Fedora 35, it is very simple.

564
00:22:31,960 --> 00:22:32,800
Will, if you wouldn't mind,

565
00:22:32,800 --> 00:22:34,560
I wanted to give Wimpy a chance to jump in here

566
00:22:34,560 --> 00:22:35,680
and a couple other people,

567
00:22:35,680 --> 00:22:37,240
because I know they've got a few questions.

568
00:22:37,240 --> 00:22:38,280
So Wimpy, go ahead.

569
00:22:38,280 --> 00:22:39,120
Hello there.

570
00:22:39,120 --> 00:22:40,960
This is a fascinating conversation.

571
00:22:40,960 --> 00:22:43,760
And I read the blog post that you're sort of citing

572
00:22:43,760 --> 00:22:44,760
in all of this.

573
00:22:44,760 --> 00:22:49,560
And I suppose I'm coming out in support of not just

574
00:22:49,560 --> 00:22:53,920
Flatpak, but, you know, containerized application delivery

575
00:22:53,920 --> 00:22:57,400
as a philosophy as a whole.

576
00:22:57,400 --> 00:23:01,880
The whole argument that it is complicated for people

577
00:23:01,880 --> 00:23:05,200
to install applications using insert name

578
00:23:05,200 --> 00:23:06,760
of your favorite, you know,

579
00:23:06,760 --> 00:23:08,680
containerized application platform.

580
00:23:08,680 --> 00:23:11,320
And by the way, I'm excluding app image from that

581
00:23:11,320 --> 00:23:13,280
because it is not that.

582
00:23:13,280 --> 00:23:14,480
It's bunkum.

583
00:23:14,480 --> 00:23:16,280
It's simply not true.

584
00:23:16,280 --> 00:23:19,120
The data that I had available when I worked at Canonical

585
00:23:19,120 --> 00:23:21,680
showed us that overwhelmingly,

586
00:23:21,680 --> 00:23:24,880
the people installing applications on the Ubuntu desktop

587
00:23:24,880 --> 00:23:27,680
were doing it through the software center,

588
00:23:27,680 --> 00:23:32,680
which was a rebranded version of GNOME Software.

589
00:23:32,840 --> 00:23:36,640
And application installs are but a click away,

590
00:23:36,640 --> 00:23:40,280
regardless of whether that's a Flatpak or a Snap.

591
00:23:40,280 --> 00:23:42,760
And it could not be easier.

592
00:23:42,760 --> 00:23:46,400
And all of that ability to do atomic updates

593
00:23:46,400 --> 00:23:49,520
and reliable updates and having a single source,

594
00:23:49,520 --> 00:23:53,360
authoritative source for application delivery

595
00:23:53,360 --> 00:23:57,680
is far simpler than it ever was in the past

596
00:23:57,680 --> 00:24:02,440
with, you know, scattershot copper repositories

597
00:24:02,440 --> 00:24:05,360
or PPAs that you have to, you know,

598
00:24:05,360 --> 00:24:08,240
tag on the end of your operating system

599
00:24:08,240 --> 00:24:11,200
or, you know, the AUR on top of Arch.

600
00:24:11,200 --> 00:24:13,160
So I completely reject that argument

601
00:24:13,160 --> 00:24:15,680
that it's complicated for new users

602
00:24:15,680 --> 00:24:17,440
because it could not be simpler.

603
00:24:17,440 --> 00:24:18,680
I'm curious, maybe what do you think?

604
00:24:18,680 --> 00:24:19,920
Because part of the thing in this blog post

605
00:24:19,920 --> 00:24:21,400
is that we're talking about a lot of different groups.

606
00:24:21,400 --> 00:24:22,520
There's the user perspective,

607
00:24:22,520 --> 00:24:24,760
but then there's also the distribution perspective

608
00:24:24,760 --> 00:24:27,200
and then the application developer.

609
00:24:27,200 --> 00:24:28,160
And it seems like to some extent,

610
00:24:28,160 --> 00:24:29,800
this post is maybe arguing, you know,

611
00:24:29,800 --> 00:24:30,840
not necessarily for PPA,

612
00:24:30,840 --> 00:24:33,440
but for the standalone simpler installations.

613
00:24:33,440 --> 00:24:35,000
Maybe you're downloading a tar file

614
00:24:35,000 --> 00:24:37,960
or you're running a standalone installer in the Windows way.

615
00:24:37,960 --> 00:24:40,040
Curious how that rings to you, Wimpy.

616
00:24:40,040 --> 00:24:42,000
I feel like it doesn't matter

617
00:24:42,000 --> 00:24:46,040
which of the contemporary packaging systems you're utilizing.

618
00:24:46,040 --> 00:24:48,880
Their integration with those software services,

619
00:24:48,880 --> 00:24:51,880
those software delivery services, make that easy.

620
00:24:51,880 --> 00:24:53,920
And the core principle,

621
00:24:53,920 --> 00:24:57,000
certainly from a SNAP perspective, was this.

622
00:24:57,000 --> 00:25:00,280
If you look at what popularized

623
00:25:00,280 --> 00:25:05,280
in the mainstream app stores, which is mobile phones,

624
00:25:05,280 --> 00:25:10,000
those applications are not curated, packaged,

625
00:25:10,000 --> 00:25:14,600
or maintained by a group of volunteer packages.

626
00:25:14,600 --> 00:25:17,880
Those applications are packaged and delivered

627
00:25:17,880 --> 00:25:22,880
directly to those stores by the application developers.

628
00:25:22,960 --> 00:25:27,960
So it's positive news that the authoritative publishers

629
00:25:28,360 --> 00:25:32,080
of things like Firefox and OBS Studio,

630
00:25:32,080 --> 00:25:33,760
and I know OBS Studio has been getting

631
00:25:33,760 --> 00:25:36,600
a massive leg up from the fine work from George

632
00:25:36,600 --> 00:25:40,400
and all that he's been doing in OBS in the last year or so.

633
00:25:40,400 --> 00:25:43,160
It's fantastic work.

634
00:25:43,160 --> 00:25:48,160
The fact that Flat Hub is pivoting to vendor published apps

635
00:25:48,280 --> 00:25:51,840
rather than community maintained apps is the right move

636
00:25:51,840 --> 00:25:56,760
because there are tens of thousands of applications

637
00:25:56,760 --> 00:26:01,760
in our distributions repositories maintained by volunteers.

638
00:26:01,760 --> 00:26:06,200
There are millions of applications in the app stores

639
00:26:06,200 --> 00:26:08,840
for the mobile platforms.

640
00:26:08,840 --> 00:26:11,080
And one of the big differences is

641
00:26:11,080 --> 00:26:14,640
there are millions of bits of software on GitHub,

642
00:26:14,640 --> 00:26:17,160
but they are not in our application repos.

643
00:26:17,160 --> 00:26:21,600
If we pivot to a developer publishes their app,

644
00:26:21,600 --> 00:26:25,600
that scales far better than spreading millions of apps

645
00:26:25,600 --> 00:26:29,240
across a few hundred enthusiastic maintainers.

646
00:26:29,240 --> 00:26:31,040
I couldn't put it better.

647
00:26:31,040 --> 00:26:34,560
I think one of the kind of pragmatic things

648
00:26:34,560 --> 00:26:36,160
about Flat Hub historically has been

649
00:26:36,160 --> 00:26:37,760
you've got to start somewhere, right?

650
00:26:37,760 --> 00:26:39,760
And so a larger proportion than I would like

651
00:26:39,760 --> 00:26:43,680
for the apps on Flat Hub are community maintained.

652
00:26:43,680 --> 00:26:45,240
And I think that is changing.

653
00:26:45,240 --> 00:26:47,560
And the work like, yeah, George's work

654
00:26:47,560 --> 00:26:51,840
on helping to get OBS Studio working well as a Flat Pack,

655
00:26:51,840 --> 00:26:54,640
integrating well with all the modern portals

656
00:26:54,640 --> 00:26:56,240
and getting this publication,

657
00:26:56,240 --> 00:27:00,440
this first party publishing working is really superb.

658
00:27:00,440 --> 00:27:02,360
The other interesting development in this area

659
00:27:02,360 --> 00:27:06,240
is that Flat Hub has just put out a call

660
00:27:06,240 --> 00:27:08,600
for contractors to work on Flat Hub.

661
00:27:08,600 --> 00:27:09,720
It's on the Flat Hub discourse.

662
00:27:09,720 --> 00:27:10,880
I can pop a link.

663
00:27:10,880 --> 00:27:13,440
Maybe I can send a link over to pop in the show notes.

664
00:27:13,440 --> 00:27:17,600
So the Gnome Foundation supports Flat Hub

665
00:27:17,600 --> 00:27:19,360
with various things.

666
00:27:19,360 --> 00:27:22,920
And they're looking to contract someone to work on,

667
00:27:22,920 --> 00:27:25,000
or someones to work on a short term project

668
00:27:25,000 --> 00:27:28,320
around these kinds of things, around identity,

669
00:27:28,320 --> 00:27:31,440
being able to verify that yes, this app is published

670
00:27:31,440 --> 00:27:35,480
by the person who or people or company that make the app.

671
00:27:35,480 --> 00:27:38,320
To the end of being able to accept payments

672
00:27:38,320 --> 00:27:40,080
to the app uploader, not to Flat Hub,

673
00:27:40,080 --> 00:27:42,120
which is something that's alleged in this post,

674
00:27:42,120 --> 00:27:43,400
to the app uploader.

675
00:27:43,400 --> 00:27:46,000
Because if you can make a vibrant place

676
00:27:46,000 --> 00:27:49,160
that individual developers, companies, organizations

677
00:27:49,160 --> 00:27:51,400
can publish their own software straight to users,

678
00:27:51,400 --> 00:27:53,160
the mobile platforms have shown us

679
00:27:53,160 --> 00:27:56,440
that people use orders of magnitude more apps there

680
00:27:56,440 --> 00:27:58,120
than they do on their computers.

681
00:27:58,120 --> 00:27:59,200
Both because they're available

682
00:27:59,200 --> 00:28:02,440
and because you can install them trivially and fearlessly.

683
00:28:02,440 --> 00:28:04,320
Hopefully this project can be made to happen

684
00:28:04,320 --> 00:28:05,760
and be really exciting to see it happen.

685
00:28:05,760 --> 00:28:08,280
Yeah, that is some great insight, Will.

686
00:28:08,280 --> 00:28:11,040
Thank you so much for taking some time late in your evening

687
00:28:11,040 --> 00:28:13,120
to join us and discuss some of this.

688
00:28:13,120 --> 00:28:14,800
I feel like I've learned a lot.

689
00:28:14,800 --> 00:28:18,000
And I just wanted to say also thank you

690
00:28:18,000 --> 00:28:21,360
for taking the time to originally post your response

691
00:28:21,360 --> 00:28:23,080
because that's really what kicked off the conversation

692
00:28:23,080 --> 00:28:24,840
between Wes, Brent and myself

693
00:28:24,840 --> 00:28:26,960
and led to kicking this off on the show.

694
00:28:26,960 --> 00:28:28,920
So again, thank you for all your work there,

695
00:28:28,920 --> 00:28:30,600
Endless and for joining us.

696
00:28:30,600 --> 00:28:31,440
Thanks very much for having me.

697
00:28:31,440 --> 00:28:32,280
It's been a pleasure.

698
00:28:32,280 --> 00:28:34,240
I'm glad to have sparked some useful conversation.

699
00:28:34,240 --> 00:28:38,240
Linode.com slash unplugged.

700
00:28:38,240 --> 00:28:41,520
Go there to get $100 in 60 day credit on a new account.

701
00:28:41,520 --> 00:28:43,280
And you go there to support the show.

702
00:28:43,280 --> 00:28:46,520
Linode is cloud hosting done right under your control

703
00:28:46,520 --> 00:28:48,560
with 11 data centers worldwide.

704
00:28:48,560 --> 00:28:50,320
And they've been at this for 18 years

705
00:28:50,320 --> 00:28:52,320
building the absolute best experience

706
00:28:52,320 --> 00:28:55,840
for running applications on Linux in the cloud.

707
00:28:55,840 --> 00:28:57,480
If you wanna build something yourself

708
00:28:57,480 --> 00:28:59,600
or deploy one of their many one-click stacks,

709
00:28:59,600 --> 00:29:02,720
Linode has excellent options for you.

710
00:29:02,720 --> 00:29:04,480
And the performance.

711
00:29:04,480 --> 00:29:07,360
The performance is incredible.

712
00:29:07,360 --> 00:29:10,320
They've been rolling out MVME PCIe storage.

713
00:29:10,320 --> 00:29:12,800
It's so blazing fast.

714
00:29:12,800 --> 00:29:14,480
And I just simply wouldn't host

715
00:29:14,480 --> 00:29:16,240
everything that Jupyter Broadcasting has built

716
00:29:16,240 --> 00:29:18,360
in the last couple of years on Linode

717
00:29:18,360 --> 00:29:19,600
unless it was super fast.

718
00:29:19,600 --> 00:29:21,480
You know, I'm a performance hound.

719
00:29:22,680 --> 00:29:25,280
Linode has screaming fast systems.

720
00:29:25,280 --> 00:29:28,560
If you need fast CPUs, they've got AMD EPYC processors.

721
00:29:28,560 --> 00:29:30,320
If you need super fast storage.

722
00:29:30,320 --> 00:29:31,760
And of course they can always help you

723
00:29:31,760 --> 00:29:34,000
dial in the right price to performance.

724
00:29:34,000 --> 00:29:36,120
That is something they excel at.

725
00:29:36,120 --> 00:29:38,200
They're typically 30 to 50% cheaper

726
00:29:38,200 --> 00:29:39,600
than the major hypervisors out there.

727
00:29:39,600 --> 00:29:42,080
They just wanna lock you into their crazy platform anyways.

728
00:29:42,080 --> 00:29:46,920
And there's no way they can support you like Linode can.

729
00:29:46,920 --> 00:29:49,960
Linode has the absolute best customer service

730
00:29:49,960 --> 00:29:51,160
in the business.

731
00:29:51,160 --> 00:29:53,800
They have super fast rigs, great networking.

732
00:29:53,800 --> 00:29:55,640
They are their own ISP.

733
00:29:55,640 --> 00:29:58,240
And a Linux culture that permeates throughout the company.

734
00:29:58,240 --> 00:30:00,800
I mean, that's why they started the company.

735
00:30:00,800 --> 00:30:02,920
So there's a lot of reasons to choose Linode.

736
00:30:02,920 --> 00:30:05,320
And I didn't even get into like the dashboard

737
00:30:05,320 --> 00:30:07,920
and the API and the one click applications

738
00:30:07,920 --> 00:30:09,200
that are so nice to use.

739
00:30:09,200 --> 00:30:10,040
I mean, they're there.

740
00:30:10,040 --> 00:30:11,360
But have you thought like how great it would be

741
00:30:11,360 --> 00:30:14,240
just to have your own GitLab or Jitsi server

742
00:30:14,240 --> 00:30:16,560
in just a couple of clicks?

743
00:30:16,560 --> 00:30:19,080
So I just, I really don't need to say much more

744
00:30:19,080 --> 00:30:21,120
because I think what puts it over the top

745
00:30:21,120 --> 00:30:23,680
is when you go grab that $100 and try it yourself.

746
00:30:23,680 --> 00:30:25,560
Because you get to try something rad

747
00:30:25,560 --> 00:30:27,320
and you get to support the show.

748
00:30:27,320 --> 00:30:28,520
It's a great opportunity to learn

749
00:30:28,520 --> 00:30:30,280
and a great opportunity to support the show.

750
00:30:30,280 --> 00:30:31,920
Linode.com slash unplugged.

751
00:30:31,920 --> 00:30:35,320
Go get that $100 in 60 day credit on a new account

752
00:30:35,320 --> 00:30:36,480
and support the show.

753
00:30:36,480 --> 00:30:38,920
Linode.com slash unplugged.

754
00:30:38,920 --> 00:30:44,120
Now, Chris, I think we have about two more criticisms

755
00:30:44,120 --> 00:30:45,160
that are worth mentioning.

756
00:30:45,160 --> 00:30:46,720
You wanna pick it up there?

757
00:30:46,720 --> 00:30:48,400
Just a few more from the post.

758
00:30:48,400 --> 00:30:50,200
One that's probably definitely worth talking about

759
00:30:50,200 --> 00:30:52,880
because it's one that end users are going to experience

760
00:30:52,880 --> 00:30:55,840
is it is complicated when it comes to

761
00:30:55,840 --> 00:30:59,080
specific software packages that require drivers.

762
00:30:59,080 --> 00:31:02,880
Like Nvidia video drivers, like the Steam package.

763
00:31:02,880 --> 00:31:07,280
Because you could be on like Ubuntu, I don't know, 18.04

764
00:31:07,280 --> 00:31:10,000
and Flatpak can't do anything about your kernel.

765
00:31:10,000 --> 00:31:12,480
It's gotta work with the host kernel's system.

766
00:31:12,480 --> 00:31:15,960
So it will then have to pull down a runtime

767
00:31:15,960 --> 00:31:17,640
that matches your specific kernel.

768
00:31:17,640 --> 00:31:18,800
So if you can imagine on the back end,

769
00:31:18,800 --> 00:31:19,640
that's a lot of work.

770
00:31:19,640 --> 00:31:20,720
It's a lot of different runtimes.

771
00:31:20,720 --> 00:31:23,800
It isn't an elegant solution,

772
00:31:23,800 --> 00:31:25,560
but it feels like the kind of problem

773
00:31:25,560 --> 00:31:28,280
you do solve for fragmentation.

774
00:31:28,280 --> 00:31:30,960
And yeah, it's a little bit technical on the back end,

775
00:31:30,960 --> 00:31:34,600
but as long as the end user experience remains consistent

776
00:31:34,600 --> 00:31:36,920
and the developer experience remains documented

777
00:31:36,920 --> 00:31:39,000
and workable, it actually seems like

778
00:31:39,000 --> 00:31:41,920
it's a pretty good compromise despite its complexity.

779
00:31:41,920 --> 00:31:44,800
But in all of this, I think we've kind of gotten

780
00:31:44,800 --> 00:31:47,880
a little carried away conflating a few technologies.

781
00:31:47,880 --> 00:31:49,360
A lot of things are getting thrown around

782
00:31:49,360 --> 00:31:51,920
like containers and sandboxing.

783
00:31:51,920 --> 00:31:54,480
And the implication might be in these conversations

784
00:31:54,480 --> 00:31:58,560
that you have to have Flatpaks or snaps to have sandboxing.

785
00:31:58,560 --> 00:31:59,880
But that's not necessarily the case.

786
00:31:59,880 --> 00:32:01,760
And Neil, I think you wanted to expand on that.

787
00:32:01,760 --> 00:32:03,440
It's actually never really been the case

788
00:32:03,440 --> 00:32:06,080
that security, sandboxing, these portals

789
00:32:06,080 --> 00:32:08,600
and all that stuff are necessarily requiring you

790
00:32:08,600 --> 00:32:11,960
to change the way the application is built and distributed.

791
00:32:11,960 --> 00:32:16,960
Because the OBS Studio, RPM and Fedora, for example,

792
00:32:16,960 --> 00:32:21,120
or Firefox and Fedora when running on Wayland,

793
00:32:21,120 --> 00:32:24,040
activates those portals and does all the same things.

794
00:32:24,040 --> 00:32:27,640
Your general computing experience

795
00:32:27,640 --> 00:32:30,200
can be more consistent in this regard

796
00:32:30,200 --> 00:32:35,200
if application developers know how to code to these APIs,

797
00:32:35,440 --> 00:32:39,640
whether it's shipped as an RPM or a Flatpak,

798
00:32:39,640 --> 00:32:43,120
a snap, a Debian package, or even just a bloody tarball

799
00:32:43,120 --> 00:32:46,920
that you download or an app image.

800
00:32:46,920 --> 00:32:51,920
And I don't think it's a good idea for us to conflate the two

801
00:32:53,240 --> 00:32:57,400
because that leaves a large gamut of applications

802
00:32:57,400 --> 00:32:59,920
that can benefit from these technologies

803
00:32:59,920 --> 00:33:02,960
when they cannot be distributed that way.

804
00:33:02,960 --> 00:33:05,360
Like system critical applications

805
00:33:05,360 --> 00:33:07,120
or stuff that should be part of the base OS

806
00:33:07,120 --> 00:33:11,600
so that you have a functional set of base software

807
00:33:11,600 --> 00:33:13,960
should also be able to take advantage of these things.

808
00:33:13,960 --> 00:33:16,440
There's no reason that you can't have

809
00:33:16,440 --> 00:33:19,480
the bubble wrap based sandboxing with the portals

810
00:33:19,480 --> 00:33:22,320
and all that stuff kick in for an RPM

811
00:33:22,320 --> 00:33:23,960
like you do for a Flatpak.

812
00:33:23,960 --> 00:33:25,840
Neil, I'm curious if you have any insights

813
00:33:25,840 --> 00:33:28,400
into how Fedora is approaching Flatpaks

814
00:33:28,400 --> 00:33:30,920
and especially some of those namespace concerns

815
00:33:30,920 --> 00:33:32,240
that have been floating around.

816
00:33:32,240 --> 00:33:33,280
The way we're doing it right now

817
00:33:33,280 --> 00:33:37,160
is that the software centers prioritize Fedora sources

818
00:33:37,160 --> 00:33:39,880
by default over third party ones.

819
00:33:39,880 --> 00:33:42,320
So there's a priority level and ours is higher.

820
00:33:42,320 --> 00:33:45,840
And if you click the button to install something,

821
00:33:45,840 --> 00:33:50,720
it will prefer the Fedora source over the third party one

822
00:33:50,720 --> 00:33:51,960
if the identifiers are the same

823
00:33:51,960 --> 00:33:54,240
and the user hasn't changed any settings.

824
00:33:54,240 --> 00:33:57,560
The reason why this comes up actually

825
00:33:57,560 --> 00:34:00,200
is a fairly interesting one.

826
00:34:00,200 --> 00:34:03,040
In some cases, it's just straight up

827
00:34:03,040 --> 00:34:05,640
not a good idea to distribute

828
00:34:05,640 --> 00:34:08,160
or a bundle the distribution

829
00:34:08,160 --> 00:34:10,520
of something from a third party,

830
00:34:10,520 --> 00:34:14,040
particularly when there are legal requirements

831
00:34:14,040 --> 00:34:18,000
or the upstream developer may have questionable character

832
00:34:18,000 --> 00:34:19,040
or things like that.

833
00:34:19,040 --> 00:34:22,560
For example, Audacity from earlier this year,

834
00:34:22,560 --> 00:34:24,240
the stuff that they're shipping

835
00:34:24,240 --> 00:34:26,040
has some of those things going on,

836
00:34:26,040 --> 00:34:31,040
but the Audacity RPM and Flatpak from Fedora don't.

837
00:34:33,000 --> 00:34:35,640
And I think it's important to recognize

838
00:34:35,640 --> 00:34:39,960
that there is actually a trade off to switching to a model

839
00:34:39,960 --> 00:34:41,800
where developers are the ones

840
00:34:41,800 --> 00:34:44,840
doing all of this distribution work themselves.

841
00:34:44,840 --> 00:34:48,320
And that is, you no longer have a review or a counterweight.

842
00:34:48,320 --> 00:34:50,960
That may be fine, that may not be fine.

843
00:34:50,960 --> 00:34:52,000
It really depends.

844
00:34:52,000 --> 00:34:55,280
Like a big part of in the Android ecosystem,

845
00:34:55,280 --> 00:34:56,720
I know a lot of people were talking about this

846
00:34:56,720 --> 00:35:00,120
about how people use apps more on Android and iOS

847
00:35:00,120 --> 00:35:02,440
and whatnot, but like in the Android ecosystem,

848
00:35:02,440 --> 00:35:05,080
there has historically been a problem of malware

849
00:35:05,080 --> 00:35:07,640
before Google started getting into it

850
00:35:07,640 --> 00:35:10,200
and started digging into all the things.

851
00:35:10,200 --> 00:35:13,600
And even with all that, it's still a problem

852
00:35:13,600 --> 00:35:15,920
because at the end of the day,

853
00:35:15,920 --> 00:35:19,000
developers have no check against them.

854
00:35:19,000 --> 00:35:20,720
There is nothing checking them.

855
00:35:20,720 --> 00:35:22,880
And yes, the Linux distribution model

856
00:35:22,880 --> 00:35:24,020
is certainly not perfect.

857
00:35:24,020 --> 00:35:27,040
And maybe a balance of the two is certainly better,

858
00:35:27,040 --> 00:35:29,280
but like, let's not get carried away

859
00:35:29,280 --> 00:35:31,000
and throw out the baby with the bathwater.

860
00:35:31,000 --> 00:35:34,080
It's still valuable to have people

861
00:35:34,080 --> 00:35:35,480
being checks against each other

862
00:35:35,480 --> 00:35:37,800
to make sure that we're all doing a good job here.

863
00:35:37,800 --> 00:35:39,640
Yeah, especially with security in mind.

864
00:35:39,640 --> 00:35:41,880
Wimpy, it looks like you have some thoughts

865
00:35:41,880 --> 00:35:43,200
and I know you have some experience

866
00:35:43,200 --> 00:35:46,240
on the deduplication conversation here.

867
00:35:46,240 --> 00:35:47,400
Can you fill us in?

868
00:35:47,400 --> 00:35:51,840
Yeah, so on the proliferation of libraries

869
00:35:51,840 --> 00:35:54,200
and what have you, there are mechanisms

870
00:35:54,200 --> 00:35:56,920
that exist in Snaps and Flatpak

871
00:35:56,920 --> 00:36:00,900
that allow you to create reusable runtimes,

872
00:36:00,900 --> 00:36:03,920
which still means there is some duplication,

873
00:36:03,920 --> 00:36:06,640
but that duplication is one time only

874
00:36:06,640 --> 00:36:10,160
for a common runtime that exists

875
00:36:10,160 --> 00:36:13,720
across most applications that you're gonna run

876
00:36:13,720 --> 00:36:15,080
on the desktop.

877
00:36:15,080 --> 00:36:19,320
But this is one of the sort of prices you have to pay

878
00:36:19,320 --> 00:36:21,640
for containerized applications

879
00:36:21,640 --> 00:36:25,560
that it does come with that sort of bundling approach.

880
00:36:25,560 --> 00:36:29,760
And there are technologies that are growing in popularity

881
00:36:29,760 --> 00:36:32,820
that address some of this in order to trim out

882
00:36:32,820 --> 00:36:35,760
some of that duplication of files.

883
00:36:35,760 --> 00:36:37,440
And I'm not gonna plug this too heavily,

884
00:36:37,440 --> 00:36:40,920
but where I work now, we have an open source project

885
00:36:40,920 --> 00:36:44,100
called Docker Slim, which does precisely this,

886
00:36:44,100 --> 00:36:46,840
using dynamic and static analysis,

887
00:36:46,840 --> 00:36:49,600
will pull out all of the cruft that exists

888
00:36:49,600 --> 00:36:52,160
in Docker and OCI containers.

889
00:36:52,160 --> 00:36:55,320
And there's no reason why those technologies

890
00:36:55,320 --> 00:36:59,520
couldn't be applied to the Linux desktop space.

891
00:36:59,520 --> 00:37:03,060
And speaking specifically about the Linux desktop,

892
00:37:03,060 --> 00:37:04,900
there are two very important points

893
00:37:04,900 --> 00:37:08,200
that people need to get on board with regarding

894
00:37:08,200 --> 00:37:11,200
contemporary application delivery on Linux,

895
00:37:11,200 --> 00:37:12,720
the Linux desktop.

896
00:37:12,720 --> 00:37:17,420
The first is, if you install, let's say Google Chrome,

897
00:37:17,420 --> 00:37:20,640
in the traditional way, you download the RPM or the deb

898
00:37:20,640 --> 00:37:24,260
from the Google Chrome website and install it on your system,

899
00:37:24,260 --> 00:37:28,680
go and S-trace Google Chrome when it starts up

900
00:37:28,680 --> 00:37:33,680
and go and look at just how much grubbing around it does

901
00:37:33,880 --> 00:37:37,680
in your home directory, trying to hoover up everything

902
00:37:37,680 --> 00:37:41,280
it can learn about you and your system.

903
00:37:41,280 --> 00:37:44,880
And you will start to appreciate the efforts,

904
00:37:44,880 --> 00:37:47,360
because I know that the Linux desktop users

905
00:37:47,360 --> 00:37:50,200
are a huge percentage of very privacy orientated,

906
00:37:50,200 --> 00:37:52,160
privacy conscious people.

907
00:37:52,160 --> 00:37:56,920
The sandboxed applications prevent that kind of,

908
00:37:56,920 --> 00:38:01,600
you know, just pillaging of your information and data

909
00:38:01,600 --> 00:38:05,520
before you even go to a website and you get, you know,

910
00:38:05,520 --> 00:38:07,400
tracked and traced there.

911
00:38:07,400 --> 00:38:11,680
So consider that the sandboxing does play a role

912
00:38:11,680 --> 00:38:13,360
in protecting your privacy.

913
00:38:13,360 --> 00:38:15,140
You need to be thinking about that.

914
00:38:15,140 --> 00:38:19,440
And the other is this, all significant investment

915
00:38:19,440 --> 00:38:22,580
that happens in the Linux ecosystem today

916
00:38:22,580 --> 00:38:26,720
is in container and virtualization technologies.

917
00:38:26,720 --> 00:38:30,520
It is a multi-billion dollar industry.

918
00:38:31,440 --> 00:38:36,440
Desktop Linux cannot refuse to get on board

919
00:38:36,740 --> 00:38:41,740
with containers and VMs as part of the OS landscape

920
00:38:43,040 --> 00:38:44,480
in the future.

921
00:38:44,480 --> 00:38:49,480
If we do that, we are paving a way towards obsolescence

922
00:38:51,500 --> 00:38:55,800
and irrelevance, because all the significant development

923
00:38:55,800 --> 00:39:00,800
is in those technologies and desktop Linux users

924
00:39:01,880 --> 00:39:05,480
need to embrace this sort of, it's an inevitable future.

925
00:39:05,480 --> 00:39:08,920
If we resist it, then it's over for us.

926
00:39:08,920 --> 00:39:11,200
You know, there is no future.

927
00:39:11,200 --> 00:39:14,920
So it's a matter of embracing the technology,

928
00:39:14,920 --> 00:39:17,460
the people that are competent and capable,

929
00:39:17,460 --> 00:39:19,960
improving and developing the support

930
00:39:19,960 --> 00:39:21,560
around those technologies.

931
00:39:21,560 --> 00:39:25,440
And you do a great job of putting it all into perspective.

932
00:39:25,440 --> 00:39:29,080
What we have to keep in mind is desktop Linux's bread

933
00:39:29,080 --> 00:39:31,480
gets buttered by the enterprise side.

934
00:39:31,480 --> 00:39:33,200
I mean, even like we've talked about recently here

935
00:39:33,200 --> 00:39:36,640
on the show, PipeWire is the direct result

936
00:39:36,640 --> 00:39:40,120
of businesses investing in automotive Linux.

937
00:39:40,120 --> 00:39:44,880
And what a lot of very clever developers

938
00:39:44,880 --> 00:39:48,280
have been very, very good at doing for a long time

939
00:39:48,280 --> 00:39:51,720
is leveraging the investments for enterprise Linux

940
00:39:51,720 --> 00:39:54,160
into desktop technologies.

941
00:39:54,160 --> 00:39:56,360
And that's what's happening here.

942
00:39:56,360 --> 00:39:58,600
And I think you make a great point, Wimpy.

943
00:39:58,600 --> 00:40:01,920
It's kind of like, even if you wanted to make the argument,

944
00:40:01,920 --> 00:40:03,880
well, the other desktop operating systems

945
00:40:03,880 --> 00:40:05,280
don't have to do this,

946
00:40:05,280 --> 00:40:07,480
well, they have a different business model.

947
00:40:07,480 --> 00:40:09,080
No, but they are.

948
00:40:09,080 --> 00:40:12,520
Mac OS is a hugely virtualized platform

949
00:40:12,520 --> 00:40:14,340
and so is Windows these days.

950
00:40:14,340 --> 00:40:18,080
It's just all transparent and hidden under the covers.

951
00:40:18,080 --> 00:40:20,160
And that's where we need to get to.

952
00:40:20,160 --> 00:40:22,280
Right, yeah, in fact, I broke this down

953
00:40:22,280 --> 00:40:24,200
on Coder Radio recently.

954
00:40:24,200 --> 00:40:26,680
The last three versions of Mac OS have,

955
00:40:26,680 --> 00:40:30,080
each version has just completely re-architected

956
00:40:30,080 --> 00:40:32,120
the file system directly underneath the user

957
00:40:32,120 --> 00:40:33,680
without even them noticing,

958
00:40:33,680 --> 00:40:36,960
to the point now where Mac OS is using

959
00:40:36,960 --> 00:40:40,160
an immutable file system for its primary OS.

960
00:40:40,160 --> 00:40:42,960
And the applications folder is a hybrid folder

961
00:40:42,960 --> 00:40:46,120
of immutable applications that are grafted in

962
00:40:46,120 --> 00:40:48,400
with the user applications that are stored

963
00:40:48,400 --> 00:40:52,960
in a writable section of the APFS disk system.

964
00:40:52,960 --> 00:40:57,040
And when they reboot and like stuff like that,

965
00:40:57,040 --> 00:41:01,160
they're checking like the signature of a snapshot image

966
00:41:01,160 --> 00:41:03,800
and they're booting into a snapshot.

967
00:41:03,800 --> 00:41:05,560
And then when they do updates,

968
00:41:05,560 --> 00:41:08,600
they're doing like the immutable switch over and reboot.

969
00:41:08,600 --> 00:41:11,560
Like we've been talking about in desktop Linux now

970
00:41:11,560 --> 00:41:12,920
for years with some of these things

971
00:41:12,920 --> 00:41:14,880
and they just incrementally rolled it out

972
00:41:14,880 --> 00:41:16,320
in the last three releases.

973
00:41:16,320 --> 00:41:18,640
It's also important to note that for both Windows

974
00:41:18,640 --> 00:41:20,960
and Mac OS, they did it without changing

975
00:41:20,960 --> 00:41:23,200
the way developers deliver applications.

976
00:41:23,200 --> 00:41:25,640
That's a huge difference from how the Linux world

977
00:41:25,640 --> 00:41:26,480
is approaching it.

978
00:41:26,480 --> 00:41:28,760
And that's, I think, a big part of why people

979
00:41:28,760 --> 00:41:30,480
are resisting so hard.

980
00:41:30,480 --> 00:41:33,440
Because in the commercial world,

981
00:41:33,440 --> 00:41:36,840
it is recognized that you cannot screw with people

982
00:41:36,840 --> 00:41:39,840
when you are trying to improve the user experience.

983
00:41:39,840 --> 00:41:44,160
And that is something that I don't think enough people

984
00:41:44,160 --> 00:41:46,960
on the free software side actually understand.

985
00:41:46,960 --> 00:41:48,680
We probably need to wrap it here

986
00:41:48,680 --> 00:41:50,120
because we have to wrap up at some point.

987
00:41:50,120 --> 00:41:52,120
But the other thing that's been interesting

988
00:41:52,120 --> 00:41:54,600
is I'm really getting a better sense

989
00:41:54,600 --> 00:41:56,840
of what the future looks like for Flat Hub.

990
00:41:56,840 --> 00:41:58,560
And I think I'm good with it.

991
00:41:58,560 --> 00:42:00,480
I think that's actually going to be a good thing.

992
00:42:00,480 --> 00:42:02,320
If it's some kind of paying mechanism

993
00:42:02,320 --> 00:42:04,240
that I'm comfortable with,

994
00:42:04,240 --> 00:42:05,880
assuming that it's something that's nice and clean

995
00:42:05,880 --> 00:42:07,560
and doesn't feel gross,

996
00:42:07,560 --> 00:42:09,600
I think that's going to be a great direction for Flat Hub.

997
00:42:09,600 --> 00:42:10,960
I mean, it's something we've kind of talked about

998
00:42:10,960 --> 00:42:13,320
needing more widely in our ecosystem, right?

999
00:42:13,320 --> 00:42:15,040
And I mean, so far, there's been various attempts,

1000
00:42:15,040 --> 00:42:17,880
but none of them are necessarily widely successful.

1001
00:42:17,880 --> 00:42:18,720
Yeah, yeah.

1002
00:42:18,720 --> 00:42:21,080
I mean, I think the elementary OS App Center

1003
00:42:21,080 --> 00:42:24,400
has proven it out on a certain scale.

1004
00:42:24,400 --> 00:42:27,280
And I think Flat Hub would be the next scale up.

1005
00:42:27,280 --> 00:42:30,560
And it's the thing that we've always looked for,

1006
00:42:30,560 --> 00:42:34,600
even back when we had quite the software store on Ubuntu,

1007
00:42:34,600 --> 00:42:37,360
we really always wanted something that was cross-distro.

1008
00:42:37,360 --> 00:42:39,000
And a few different places,

1009
00:42:39,000 --> 00:42:41,240
even the Lindos folks took a crack at that,

1010
00:42:41,240 --> 00:42:43,400
but nothing quite like this.

1011
00:42:43,400 --> 00:42:46,680
And part of it is because Flat Pack

1012
00:42:46,680 --> 00:42:49,320
is solving those fundamental issues.

1013
00:42:49,320 --> 00:42:51,920
And then Flat Hub is just a front end

1014
00:42:51,920 --> 00:42:53,440
on top of getting access to the stuff

1015
00:42:53,440 --> 00:42:56,800
and making it simple for the end user.

1016
00:42:56,800 --> 00:42:57,640
But with all of that,

1017
00:42:57,640 --> 00:42:59,320
I think we'd just like to leave it to the audience.

1018
00:42:59,320 --> 00:43:00,920
So if you'd like to give us your thoughts

1019
00:43:00,920 --> 00:43:02,280
or your opinions on this stuff,

1020
00:43:02,280 --> 00:43:04,200
or perhaps you think we've missed something,

1021
00:43:04,200 --> 00:43:05,560
please do let us know.

1022
00:43:05,560 --> 00:43:07,200
Sometimes the pushback emails

1023
00:43:07,200 --> 00:43:10,200
are our absolute favorite emails to respond to.

1024
00:43:10,200 --> 00:43:12,960
So go to linuxunplugged.com slash contact

1025
00:43:12,960 --> 00:43:14,160
and share your thoughts.

1026
00:43:16,040 --> 00:43:19,880
Now we did a episode, Linux Unplugged 4.31.

1027
00:43:19,880 --> 00:43:22,600
That's three episodes ago on command line love,

1028
00:43:22,600 --> 00:43:26,800
which was a bit of an homage to the Ubuntu podcast segment.

1029
00:43:26,800 --> 00:43:29,320
And we keep getting mail from that episode.

1030
00:43:29,320 --> 00:43:30,800
It's just incredible.

1031
00:43:30,800 --> 00:43:34,000
So here are three from that.

1032
00:43:34,000 --> 00:43:35,840
Costas wrote in and he says,

1033
00:43:35,840 --> 00:43:38,280
as a programmer, I would fight tooth and nail

1034
00:43:38,280 --> 00:43:40,960
before anyone took my command line away from me.

1035
00:43:40,960 --> 00:43:43,720
That said, I am familiar with two situations

1036
00:43:43,720 --> 00:43:45,920
where the command line is a no-go.

1037
00:43:45,920 --> 00:43:48,360
Any device without a physical keyboard at hand,

1038
00:43:48,360 --> 00:43:50,840
mobile phones, tablets, integrated gaming PCs,

1039
00:43:50,840 --> 00:43:53,480
think Steam Deck or its myriad predecessors,

1040
00:43:53,480 --> 00:43:56,080
including my beloved One X player.

1041
00:43:56,080 --> 00:43:58,400
These devices rely on software keyboards,

1042
00:43:58,400 --> 00:44:01,120
which are ill-equipped for regular usage of the command line.

1043
00:44:01,120 --> 00:44:03,720
I would have to totally agree.

1044
00:44:03,720 --> 00:44:07,360
And Chris, maybe that device you teased in the pre-show

1045
00:44:07,360 --> 00:44:09,520
is maybe solving that for you.

1046
00:44:09,520 --> 00:44:12,720
He continues, the lack of English language skills

1047
00:44:12,720 --> 00:44:14,480
is the other situation.

1048
00:44:14,480 --> 00:44:16,120
Let's take my parents as an example,

1049
00:44:16,120 --> 00:44:19,600
Greek retirees with a past end of life iMac

1050
00:44:19,600 --> 00:44:21,080
that I'm about to install Linux on.

1051
00:44:21,080 --> 00:44:24,680
My father was coding on a ZX Spectrum in his 20s

1052
00:44:24,680 --> 00:44:28,240
and relied on books translated to Greek to get him going.

1053
00:44:28,240 --> 00:44:30,520
I doubt he would be able to deal with man pages

1054
00:44:30,520 --> 00:44:32,240
written in English to get stuff done.

1055
00:44:32,240 --> 00:44:34,800
As far as I know, and correct me if I'm wrong,

1056
00:44:34,800 --> 00:44:37,320
command line interfaces don't get translated

1057
00:44:37,320 --> 00:44:38,920
as much as graphical ones.

1058
00:44:38,920 --> 00:44:40,760
I believe that we can find a lot of people in communities

1059
00:44:40,760 --> 00:44:44,200
where mobile phones are their primary computation device

1060
00:44:44,200 --> 00:44:46,600
and English proficiency is low.

1061
00:44:46,600 --> 00:44:48,200
The command line is cool and powerful,

1062
00:44:48,200 --> 00:44:50,360
but not always an option.

1063
00:44:50,360 --> 00:44:52,920
Now I was curious with that,

1064
00:44:52,920 --> 00:44:56,560
does anyone use translations of the command line

1065
00:44:56,560 --> 00:44:58,360
on a regular basis, maybe in the Mumble Room?

1066
00:44:58,360 --> 00:45:00,560
Yeah, it's commonplace.

1067
00:45:00,560 --> 00:45:02,200
Some people don't know this,

1068
00:45:02,200 --> 00:45:06,400
but like one of the major innovations from GNU

1069
00:45:06,400 --> 00:45:10,320
was adding first-class support for internationalization

1070
00:45:10,320 --> 00:45:12,320
and localization to the command line.

1071
00:45:12,320 --> 00:45:14,560
It didn't really exist in the way

1072
00:45:14,560 --> 00:45:16,640
that we have it today in Linux.

1073
00:45:16,640 --> 00:45:19,600
It didn't exist before then.

1074
00:45:19,600 --> 00:45:21,960
One of the reasons why the GNU core utils is so complex,

1075
00:45:21,960 --> 00:45:24,880
I know a lot of people say use BusyBox

1076
00:45:24,880 --> 00:45:27,680
or some of the other ones because they're simpler,

1077
00:45:27,680 --> 00:45:29,080
whatever, and less bloat.

1078
00:45:29,080 --> 00:45:31,440
A lot of the bloat actually comes from the fact

1079
00:45:31,440 --> 00:45:33,600
that they made internationalization

1080
00:45:33,600 --> 00:45:36,960
a first-class aspect of their user space.

1081
00:45:36,960 --> 00:45:39,280
And that has actually carried forward

1082
00:45:39,280 --> 00:45:42,640
to most of the important command line tools,

1083
00:45:42,640 --> 00:45:47,640
like your package managers, your monitoring utilities.

1084
00:45:48,960 --> 00:45:50,360
A lot of those things tend,

1085
00:45:50,360 --> 00:45:53,880
like even Docker has translations,

1086
00:45:53,880 --> 00:45:57,640
Podman too, like it's a fairly common thing.

1087
00:45:57,640 --> 00:45:59,280
Maybe not Manpages necessarily

1088
00:45:59,280 --> 00:46:02,360
because the Manpage translation infrastructure kind of sucks.

1089
00:46:02,360 --> 00:46:07,080
But even with that, go look at your file system sometime.

1090
00:46:07,080 --> 00:46:11,040
There's actually a good chunk of translated Manpages.

1091
00:46:11,040 --> 00:46:12,680
PyCrash, I wanted to give you a chance to jump in

1092
00:46:12,680 --> 00:46:14,280
because I think you've been involved

1093
00:46:14,280 --> 00:46:15,680
with some of these translations.

1094
00:46:15,680 --> 00:46:17,400
I speak Spanish and German,

1095
00:46:17,400 --> 00:46:21,840
and I provided translation for a couple of distributions

1096
00:46:21,840 --> 00:46:25,920
and open source projects, and they actually get translated.

1097
00:46:25,920 --> 00:46:29,120
I mean, the output from the command line,

1098
00:46:29,120 --> 00:46:30,800
one of the biggest problems I had

1099
00:46:30,800 --> 00:46:32,440
when I started using testing

1100
00:46:32,440 --> 00:46:35,280
is I needed to set my command line

1101
00:46:35,280 --> 00:46:37,480
to please do the output in English

1102
00:46:37,480 --> 00:46:40,280
because most developers want the output in English

1103
00:46:40,280 --> 00:46:42,040
when they look at the back.

1104
00:46:43,160 --> 00:46:46,040
So a lot of the command line utilities

1105
00:46:46,040 --> 00:46:49,400
actually are doing output in your language.

1106
00:46:49,400 --> 00:46:52,240
The only thing that is not translated,

1107
00:46:52,240 --> 00:46:54,800
it's usually the flags, for example,

1108
00:46:54,800 --> 00:46:57,240
are for recursive or stuff like that.

1109
00:46:57,240 --> 00:46:59,560
But otherwise, it's actually,

1110
00:46:59,560 --> 00:47:03,600
the output is actually really good in non-English languages.

1111
00:47:03,600 --> 00:47:05,520
Okay, that makes me feel a little better.

1112
00:47:05,520 --> 00:47:07,160
This is why it's so great to have an open Mumble Room

1113
00:47:07,160 --> 00:47:08,560
because I just really wasn't quite sure

1114
00:47:08,560 --> 00:47:09,800
what the answer was to that.

1115
00:47:09,800 --> 00:47:11,960
I felt like Manpages, that made sense

1116
00:47:11,960 --> 00:47:14,080
because there's so many alternatives online now.

1117
00:47:14,080 --> 00:47:16,120
Right, it's an area we're kind of blind to.

1118
00:47:16,120 --> 00:47:17,240
Yeah, it is good to hear

1119
00:47:17,240 --> 00:47:19,200
there's a lot of work, though, getting done there.

1120
00:47:19,200 --> 00:47:21,880
Listener Kevin quickly mentioned and remind me,

1121
00:47:21,880 --> 00:47:24,640
which I forgot, that in Brunch with Brent

1122
00:47:24,640 --> 00:47:27,560
with Stuart Langridge, he mentioned

1123
00:47:27,560 --> 00:47:30,200
that search engines are in essence a command line prompt

1124
00:47:30,200 --> 00:47:31,600
with an understanding by the user

1125
00:47:31,600 --> 00:47:33,920
that no mistake they make can harm their system.

1126
00:47:33,920 --> 00:47:35,280
So check that out.

1127
00:47:35,280 --> 00:47:36,960
We'll leave a link in the show notes.

1128
00:47:36,960 --> 00:47:38,560
Mind blown, mind blown, right?

1129
00:47:38,560 --> 00:47:41,080
It's a command line that average users

1130
00:47:41,080 --> 00:47:43,600
have just adapted to, they've gotten used to.

1131
00:47:43,600 --> 00:47:47,440
For a little piece of maybe some spicy mail that we got,

1132
00:47:47,440 --> 00:47:48,840
Forrest Lake writes in,

1133
00:47:48,840 --> 00:47:51,520
hey team, just listen to your command line love episode.

1134
00:47:51,520 --> 00:47:53,920
I hate to say it, but that's the biggest bunch

1135
00:47:53,920 --> 00:47:56,200
of elitist BS that I've ever heard.

1136
00:47:56,200 --> 00:47:59,120
You, the show and guests always talk about productivity

1137
00:47:59,120 --> 00:48:02,440
and how shaving off time can have such a big impact

1138
00:48:02,440 --> 00:48:05,280
on your day, but we expect people to waste time

1139
00:48:05,280 --> 00:48:08,160
jumping on forums, asking the hyper intelligent gurus

1140
00:48:08,160 --> 00:48:10,120
how to do things on the command line.

1141
00:48:10,120 --> 00:48:13,200
That is a waste of precious time and very unproductive

1142
00:48:13,200 --> 00:48:16,760
as the general response for the elite is Google it.

1143
00:48:16,760 --> 00:48:18,040
I'm not here to give you answers.

1144
00:48:18,040 --> 00:48:20,600
You need to learn young Padawan.

1145
00:48:20,600 --> 00:48:22,320
I've been a Linux user since the nineties

1146
00:48:22,320 --> 00:48:24,600
and will always look for a gooey way of doing things

1147
00:48:24,600 --> 00:48:26,960
as the forums provide no answers for people

1148
00:48:26,960 --> 00:48:29,240
without receiving some attitude.

1149
00:48:29,240 --> 00:48:31,140
If there was a gooey solution for every problem,

1150
00:48:31,140 --> 00:48:33,960
just like windows, then the year of the Linux desktop

1151
00:48:33,960 --> 00:48:36,240
would have been in the late nineties or two thousands.

1152
00:48:36,240 --> 00:48:38,160
I guess the question is,

1153
00:48:38,160 --> 00:48:41,080
do you want Linux to be omnipresent or an OS distro

1154
00:48:41,080 --> 00:48:42,800
for those who camp in the forums?

1155
00:48:42,800 --> 00:48:44,640
That is a very strong opinion.

1156
00:48:44,640 --> 00:48:47,800
I have used Linux since the nineties

1157
00:48:47,800 --> 00:48:51,320
and I could probably count on one hand

1158
00:48:51,320 --> 00:48:53,720
how many times I've actually gotten like an STFU

1159
00:48:53,720 --> 00:48:56,300
go Google noob kind of response.

1160
00:48:57,160 --> 00:49:00,280
It did happen more often in the early days in IRC,

1161
00:49:00,280 --> 00:49:02,720
especially when you come like charging into a room

1162
00:49:02,720 --> 00:49:03,960
and there's like a conversation,

1163
00:49:03,960 --> 00:49:05,580
they're all in the middle of like some heated debate

1164
00:49:05,580 --> 00:49:07,280
for like the last half hour

1165
00:49:07,280 --> 00:49:09,640
and you pop in there demanding an answer.

1166
00:49:09,640 --> 00:49:12,360
Yeah, sometimes you get told to take a hike

1167
00:49:12,360 --> 00:49:13,740
and that used to happen more often.

1168
00:49:13,740 --> 00:49:17,160
But now we have so many platforms

1169
00:49:17,160 --> 00:49:19,480
that are like specifically set up

1170
00:49:19,480 --> 00:49:22,240
to come ask your question and get an answer.

1171
00:49:22,240 --> 00:49:24,080
So the context has been set,

1172
00:49:24,080 --> 00:49:25,960
the table has been set for you

1173
00:49:25,960 --> 00:49:27,480
to come and ask your question.

1174
00:49:27,480 --> 00:49:30,000
Then I find that to be a lot less of an occurrence.

1175
00:49:30,000 --> 00:49:34,080
And then when you participate in more niche down communities

1176
00:49:34,080 --> 00:49:37,060
like the podcast communities or a distro specific community

1177
00:49:37,060 --> 00:49:39,080
or a project specific community,

1178
00:49:39,080 --> 00:49:40,440
you find even nicer people there

1179
00:49:40,440 --> 00:49:42,080
cause it's even a smaller group of people

1180
00:49:42,080 --> 00:49:43,640
that are generally like-minded

1181
00:49:43,640 --> 00:49:45,760
because they're organized around something.

1182
00:49:45,760 --> 00:49:47,720
And so it's pretty common in those groups

1183
00:49:47,720 --> 00:49:49,400
to have like people around that are like

1184
00:49:49,400 --> 00:49:51,180
sort of the unofficial welcoming committee

1185
00:49:51,180 --> 00:49:53,480
that are generally very nice on outreach.

1186
00:49:53,480 --> 00:49:54,920
I really don't find this to be an issue

1187
00:49:54,920 --> 00:49:59,640
and I'm just kind of using nearly 30 years of experience

1188
00:49:59,640 --> 00:50:01,240
to derive that opinion.

1189
00:50:01,240 --> 00:50:03,200
So from that, it's your experience

1190
00:50:03,200 --> 00:50:05,060
but that's not everyone's experience, right?

1191
00:50:05,060 --> 00:50:07,560
That's what my conclusion is from that.

1192
00:50:07,560 --> 00:50:09,620
I think the other thing I just wanted to point out

1193
00:50:09,620 --> 00:50:11,840
is that the response of how people talk

1194
00:50:11,840 --> 00:50:12,860
about command line tools

1195
00:50:12,860 --> 00:50:14,840
and the functionality of command line tools,

1196
00:50:14,840 --> 00:50:16,080
those are two different things.

1197
00:50:16,080 --> 00:50:18,320
And I'm not saying command line tool for every situation

1198
00:50:18,320 --> 00:50:20,540
but how people tell you how to use them

1199
00:50:20,540 --> 00:50:23,240
and what they are capable of doing are two separate issues.

1200
00:50:23,240 --> 00:50:25,600
Right, and of course there's different modes here, right?

1201
00:50:25,600 --> 00:50:27,360
You mentioned productivity in the feedback

1202
00:50:27,360 --> 00:50:28,360
and yeah, okay, I mean,

1203
00:50:28,360 --> 00:50:29,560
if you're having to learn additional tools

1204
00:50:29,560 --> 00:50:30,560
that might slow you down now

1205
00:50:30,560 --> 00:50:32,160
but you also have to think about the long-term

1206
00:50:32,160 --> 00:50:33,840
and some of the reasons we love the command line

1207
00:50:33,840 --> 00:50:36,360
is because if you do have stuff to get done,

1208
00:50:36,360 --> 00:50:38,560
it can often be one of the most efficient ways to do it.

1209
00:50:38,560 --> 00:50:40,960
Command line tools are just software

1210
00:50:40,960 --> 00:50:44,040
in the same that graphical applications are software.

1211
00:50:44,040 --> 00:50:46,380
And there are graphical applications

1212
00:50:46,380 --> 00:50:50,880
that are complex to use like DaVinci Resolve

1213
00:50:50,880 --> 00:50:54,040
and I had to spend hours watching videos

1214
00:50:54,040 --> 00:50:58,360
and reading documentation to even scratch the surface

1215
00:50:58,360 --> 00:51:00,580
of what's possible with that software.

1216
00:51:00,580 --> 00:51:02,440
So I think it's fine

1217
00:51:02,440 --> 00:51:05,120
that if you are doing something complicated,

1218
00:51:05,120 --> 00:51:08,760
you might need to seek some resources,

1219
00:51:08,760 --> 00:51:12,520
reference material, tutorials, use a group

1220
00:51:12,520 --> 00:51:16,400
in order to learn how to manipulate that software

1221
00:51:16,400 --> 00:51:17,960
to do what you need to do.

1222
00:51:17,960 --> 00:51:20,160
And I don't think it's strictly the preserve

1223
00:51:20,160 --> 00:51:21,920
of command line applications.

1224
00:51:21,920 --> 00:51:22,760
Very well put, I mean,

1225
00:51:22,760 --> 00:51:27,140
I've seen some really complex enterprise applications

1226
00:51:27,140 --> 00:51:30,400
that you have to send end users to training sessions

1227
00:51:30,400 --> 00:51:33,620
just so they can master 10% of its functionality.

1228
00:51:34,760 --> 00:51:37,920
And when it comes to supportability and whatnot,

1229
00:51:37,920 --> 00:51:41,520
like one of the positives and negatives, right,

1230
00:51:41,520 --> 00:51:42,680
is the community support,

1231
00:51:42,680 --> 00:51:45,520
but part of that is self-inflicted.

1232
00:51:45,520 --> 00:51:48,860
We just don't have the, you know,

1233
00:51:48,860 --> 00:51:53,220
outside of SUSE and I think also Canonical,

1234
00:51:53,220 --> 00:51:56,400
I don't know of anyone that directly offers

1235
00:51:56,400 --> 00:51:58,700
desktop Linux support anymore.

1236
00:51:58,700 --> 00:52:03,000
And you kind of have to go with what's out there.

1237
00:52:03,000 --> 00:52:06,540
And maybe in the future, if the desktop market share,

1238
00:52:06,540 --> 00:52:08,760
desktop Linux market share grows a little more,

1239
00:52:08,760 --> 00:52:12,200
we'll start seeing more and more of those supportability

1240
00:52:12,200 --> 00:52:14,040
options show back up again,

1241
00:52:14,040 --> 00:52:15,800
like they were in the nineties when everything,

1242
00:52:15,800 --> 00:52:18,560
when everyone was like thinking that it was gonna take over

1243
00:52:18,560 --> 00:52:20,040
the world immediately.

1244
00:52:20,040 --> 00:52:22,720
But right now we just don't have it.

1245
00:52:22,720 --> 00:52:24,960
You know, and I've thought about this since we've talked

1246
00:52:24,960 --> 00:52:25,800
about it on the show,

1247
00:52:25,800 --> 00:52:28,960
cause we have gotten a lot of feedback and I think where I,

1248
00:52:28,960 --> 00:52:31,760
what I really believe when it comes to this command line

1249
00:52:31,760 --> 00:52:36,500
tools or over graphical tools is I think if you're gonna use

1250
00:52:36,500 --> 00:52:39,640
Linux as a system that's important to you,

1251
00:52:39,640 --> 00:52:42,800
it's worth knowing some of the fundamental commands,

1252
00:52:42,800 --> 00:52:46,200
like how to change directory, how to list the contents,

1253
00:52:46,200 --> 00:52:48,760
how to look at processes, maybe how to read your logs,

1254
00:52:48,760 --> 00:52:51,120
maybe how to stop or start a service,

1255
00:52:51,120 --> 00:52:53,480
maybe how to reboot from the command line in case you get

1256
00:52:53,480 --> 00:52:54,320
stuck, you know,

1257
00:52:54,320 --> 00:52:56,420
you could drop to a terminal and reboot the thing.

1258
00:52:56,420 --> 00:52:58,520
Maybe even if I could go as far as to say,

1259
00:52:58,520 --> 00:53:01,760
maybe even kind of a rough understanding of grub or

1260
00:53:01,760 --> 00:53:03,440
whatever your bootloader is, you know,

1261
00:53:03,440 --> 00:53:06,560
those I think are, are things that are worth investing in

1262
00:53:06,560 --> 00:53:08,200
that, you know, you spend your,

1263
00:53:08,200 --> 00:53:11,960
you spend four to six hours learning that stuff.

1264
00:53:11,960 --> 00:53:15,400
You know, maybe you even spend, I don't know, 48 hours,

1265
00:53:15,400 --> 00:53:18,560
but it'll pay dividends for 15, 20 years.

1266
00:53:18,560 --> 00:53:20,880
Maybe not grub. Well, maybe actually, I mean, how,

1267
00:53:20,880 --> 00:53:22,160
I still see systems with Lilo.

1268
00:53:22,160 --> 00:53:24,880
So that's a scary thought.

1269
00:53:24,880 --> 00:53:25,720
I know.

1270
00:53:26,640 --> 00:53:30,080
I saw a vendor system running Linux two recently.

1271
00:53:30,080 --> 00:53:30,920
No.

1272
00:53:30,920 --> 00:53:33,280
Yeah. With an Apache, an old version of Apache.

1273
00:53:33,280 --> 00:53:34,120
Oh my God.

1274
00:53:35,160 --> 00:53:37,760
So, you know, it's just like, and, and I, you know,

1275
00:53:37,760 --> 00:53:39,100
the commands work, right?

1276
00:53:39,100 --> 00:53:41,400
Got on that box, figured out how much disk space was,

1277
00:53:41,400 --> 00:53:42,920
you know, did the old DF,

1278
00:53:42,920 --> 00:53:44,520
figured out how much disk space was available.

1279
00:53:44,520 --> 00:53:45,760
It was valuable still.

1280
00:53:45,760 --> 00:53:47,160
It's a very old system.

1281
00:53:47,160 --> 00:53:49,420
And so some of that stuff I think is, is worth learning,

1282
00:53:49,420 --> 00:53:51,280
but like at the same time,

1283
00:53:51,280 --> 00:53:53,800
if there's an application like flat seal,

1284
00:53:53,800 --> 00:53:56,160
that's going to give you a nice graphical overview of what

1285
00:53:56,160 --> 00:53:59,100
permissions your different flat packs have, I have at it.

1286
00:53:59,100 --> 00:54:01,360
I think that's a great use of a graphical application.

1287
00:54:01,360 --> 00:54:02,480
No kidding, right?

1288
00:54:02,480 --> 00:54:03,520
There's just stuff that, you know,

1289
00:54:03,520 --> 00:54:05,360
really makes sense to have in a GUI and there's other stuff

1290
00:54:05,360 --> 00:54:07,280
that works nicely in the command line.

1291
00:54:07,280 --> 00:54:10,160
We don't have to, as you often say, Chris, you know,

1292
00:54:10,160 --> 00:54:11,760
it's, you invent a new thing.

1293
00:54:11,760 --> 00:54:13,000
The old stuff doesn't go away.

1294
00:54:13,000 --> 00:54:15,520
Like these kind of co-exist together and probably will for

1295
00:54:15,520 --> 00:54:16,340
a long time.

1296
00:54:16,340 --> 00:54:17,180
Right.

1297
00:54:17,180 --> 00:54:20,200
Also, I think this has been sparked to some extent from,

1298
00:54:20,200 --> 00:54:24,560
you know, Linus's comments during his Linux challenge.

1299
00:54:24,560 --> 00:54:27,720
You know, he, he was very critical of, you know,

1300
00:54:27,720 --> 00:54:31,680
the Linux command line as we have to get away from it,

1301
00:54:31,680 --> 00:54:34,800
but actually the Linux command line is one of the

1302
00:54:34,800 --> 00:54:37,960
fundamental things that defines Linux.

1303
00:54:37,960 --> 00:54:41,720
If we do away with that, then what does Linux become?

1304
00:54:41,720 --> 00:54:43,880
It's differentiator is gone.

1305
00:54:43,880 --> 00:54:46,640
It's power tool goes away.

1306
00:54:46,640 --> 00:54:50,680
The thing that makes Linux, Linux no longer exists.

1307
00:54:50,680 --> 00:54:53,120
So I don't think we should throw it away or give it up.

1308
00:54:53,120 --> 00:54:56,000
I think we should embrace it and we can have both.

1309
00:54:56,000 --> 00:55:00,380
We can have fantastic command line utility and also great

1310
00:55:00,380 --> 00:55:01,600
graphical applications.

1311
00:55:01,600 --> 00:55:03,600
We don't need to choose one over the other.

1312
00:55:03,600 --> 00:55:04,440
Yeah.

1313
00:55:04,440 --> 00:55:06,280
I feel like we're really starting to see that too,

1314
00:55:06,280 --> 00:55:08,760
with things like fwupdy,

1315
00:55:08,760 --> 00:55:11,420
where you've got some command line components and some

1316
00:55:11,420 --> 00:55:12,260
libraries,

1317
00:55:12,260 --> 00:55:14,560
and then you're seeing different graphical tools being

1318
00:55:14,560 --> 00:55:17,900
built because system 76 has one gnome has one canonicals

1319
00:55:17,900 --> 00:55:19,900
building one based on flutter,

1320
00:55:19,900 --> 00:55:23,200
but it's all using the same stuff under the hood.

1321
00:55:23,200 --> 00:55:25,240
And those, if you wanted to,

1322
00:55:25,240 --> 00:55:27,400
you could do those same firmware updates from the command

1323
00:55:27,400 --> 00:55:28,240
line.

1324
00:55:28,240 --> 00:55:29,320
And that's, that's kind of,

1325
00:55:29,320 --> 00:55:32,800
I think what we have figured out over time and the kind of

1326
00:55:32,800 --> 00:55:34,120
thing we're getting better at building.

1327
00:55:34,120 --> 00:55:37,800
I think the aspect of what most people have an issue with in

1328
00:55:37,800 --> 00:55:40,240
terms of the total command line is that there's a messaging

1329
00:55:40,240 --> 00:55:41,080
problem.

1330
00:55:41,080 --> 00:55:44,860
You have the problem of some people in the community talking

1331
00:55:44,860 --> 00:55:47,480
about how the command line is easy.

1332
00:55:47,480 --> 00:55:49,200
And while it is efficient,

1333
00:55:49,200 --> 00:55:50,700
a hundred percent agreed there,

1334
00:55:50,700 --> 00:55:52,740
you can do a lot things faster in there.

1335
00:55:52,740 --> 00:55:55,600
Well, I wouldn't say FFmpeg or anything like that,

1336
00:55:55,600 --> 00:55:58,140
but there are certain levels of complexity that the gooey's

1337
00:55:58,140 --> 00:55:59,720
offer, like Wimpy said,

1338
00:55:59,720 --> 00:56:02,520
but I think it's more of the messaging that people often

1339
00:56:02,520 --> 00:56:04,740
say it's easy or simple.

1340
00:56:04,740 --> 00:56:07,720
And when you're talking about people who just get started,

1341
00:56:07,720 --> 00:56:11,640
there's not really a fair association to easy or simple,

1342
00:56:11,640 --> 00:56:13,720
but what they're, what they think is easy.

1343
00:56:13,720 --> 00:56:16,280
And what they think is simple is going to be different than a

1344
00:56:16,280 --> 00:56:18,880
lot of people who use those terms.

1345
00:56:18,880 --> 00:56:19,720
That's a good point.

1346
00:56:19,720 --> 00:56:21,120
Hello, Michael, good to see you.

1347
00:56:21,120 --> 00:56:23,400
I think what really kind of bears your point out is I think

1348
00:56:23,400 --> 00:56:27,080
of it in some ways FFmpeg is such a great example as simpler

1349
00:56:27,080 --> 00:56:30,120
than launching the gooey because I've got a terminal command.

1350
00:56:30,120 --> 00:56:31,280
I've got fish installed.

1351
00:56:31,280 --> 00:56:35,720
I type FF and like the whole thing just auto completes.

1352
00:56:35,720 --> 00:56:36,720
I hit tab.

1353
00:56:36,720 --> 00:56:38,360
I changed the file names and hit enter.

1354
00:56:38,360 --> 00:56:42,040
And for me, that's simpler than launching a gooey.

1355
00:56:42,040 --> 00:56:43,520
You have fish to help you.

1356
00:56:43,520 --> 00:56:47,920
The poor soul who's working with the distro default of bash or

1357
00:56:47,920 --> 00:56:52,440
God forbid busy box SH or something got nothing.

1358
00:56:52,440 --> 00:56:53,120
They got nothing.

1359
00:56:53,120 --> 00:56:53,800
That's true.

1360
00:56:53,800 --> 00:56:58,320
If you do FF play or FFmpeg or FF convert,

1361
00:56:58,320 --> 00:57:03,040
TAC TAC help your worse off than you were before you started.

1362
00:57:03,040 --> 00:57:04,480
No, that's, it's absolutely true.

1363
00:57:04,480 --> 00:57:06,640
I was really just making the joke that, you know, if you,

1364
00:57:06,640 --> 00:57:08,640
if you've been using something for a while and you get

1365
00:57:08,640 --> 00:57:10,480
comfortable with it, it's obviously the easier.

1366
00:57:10,480 --> 00:57:13,560
That's the best part about command line tools is it's very

1367
00:57:13,560 --> 00:57:17,800
easy to develop a rhythm for how to use things.

1368
00:57:17,800 --> 00:57:19,880
And that's where we keep coming back to this, you know,

1369
00:57:19,880 --> 00:57:22,800
to what extent are we embracing what we expect new users to

1370
00:57:22,800 --> 00:57:25,240
know and how much do we expect them to embrace the new

1371
00:57:25,240 --> 00:57:27,200
platform they're coming to and learn the tricks of the

1372
00:57:27,200 --> 00:57:29,520
trade there. And it seems like it's often a balance.

1373
00:57:29,520 --> 00:57:30,960
Where is that line? Yeah, exactly.

1374
00:57:30,960 --> 00:57:32,120
Okay. Well, we got to wrap it up there.

1375
00:57:32,120 --> 00:57:34,440
We could keep going all day, but listen,

1376
00:57:34,440 --> 00:57:37,120
the changes in the air and we'd love to have you show up on a

1377
00:57:37,120 --> 00:57:38,680
Tuesday while we're still here.

1378
00:57:38,680 --> 00:57:42,360
See you next week. Same bat time, same bat station.

1379
00:57:42,360 --> 00:57:44,840
I know, I know, but come join us on a Tuesday,

1380
00:57:44,840 --> 00:57:45,840
hang out with us.

1381
00:57:45,840 --> 00:57:48,120
And if you're around on a Sunday,

1382
00:57:48,120 --> 00:57:52,000
our virtual lugs getting together at noon Pacific,

1383
00:57:52,000 --> 00:57:53,680
having a good old time talking Linux,

1384
00:57:53,680 --> 00:57:56,440
open source projects and things they've been working on and all

1385
00:57:56,440 --> 00:57:58,680
kinds of folks from around the community pop in there and have

1386
00:57:58,680 --> 00:58:00,280
a good time. It's nice.

1387
00:58:00,280 --> 00:58:01,840
And then your mumbles ready to go for the show.

1388
00:58:01,840 --> 00:58:04,240
And then in the future, when the show's on Sunday,

1389
00:58:05,440 --> 00:58:06,960
well, you'll know where to find us.

1390
00:58:06,960 --> 00:58:09,160
If you're in the industry, be sure you're not missing out.

1391
00:58:09,160 --> 00:58:11,440
Go get Linux action news, linuxactionnews.com.

1392
00:58:11,440 --> 00:58:12,800
Don't miss an episode.

1393
00:58:12,800 --> 00:58:15,360
Join us back here Tuesday at noon Pacific,

1394
00:58:15,360 --> 00:58:18,200
3 p.m. Eastern at jblive.tv.

1395
00:58:18,200 --> 00:58:20,840
linuxunplug.com slash 434.

1396
00:58:20,840 --> 00:58:22,840
See you next Tuesday.

1397
00:58:50,840 --> 00:59:01,560
I don't know how we are going to title this one,

1398
00:59:01,560 --> 00:59:02,560
but let's give it a shot.

1399
00:59:02,560 --> 00:59:05,760
JBtitles.com. Let's go pick something.

1400
00:59:05,760 --> 00:59:07,640
We need your help. We really do.

1401
00:59:07,640 --> 00:59:09,560
We do. We do. We do.

1402
00:59:09,560 --> 00:59:11,040
Michael, don't worry. Don't worry.

1403
00:59:11,040 --> 00:59:13,080
The good news is we're going to be live on Sundays,

1404
00:59:13,080 --> 00:59:15,560
but we're going to be noon and you guys are usually done by then.

1405
00:59:15,760 --> 00:59:19,840
That is not why I joined, but also kind of partly why I joined.

1406
00:59:19,840 --> 00:59:22,000
Wait, what?

1407
00:59:22,000 --> 00:59:24,240
I'm just like, because I can't join anymore.

1408
00:59:24,520 --> 00:59:26,200
I know. I know. There is that.

1409
00:59:26,200 --> 00:59:27,920
Noon, what? Pacific.

1410
00:59:27,920 --> 00:59:31,520
OK, yeah, because you're one Eastern, which is.

1411
00:59:31,520 --> 00:59:33,280
Oh, yeah. Yeah, you're fine. Yeah, yeah.

1412
00:59:33,280 --> 00:59:34,160
It's not our first choice.

1413
00:59:34,160 --> 00:59:36,320
I actually really like being live on Tuesday because

1414
00:59:37,360 --> 00:59:39,960
often, you know, guests like Will can join us and stuff like that.

1415
00:59:39,960 --> 00:59:42,760
But we, you know, we can also record off air and things like that.

1416
00:59:42,760 --> 00:59:45,360
But there's just a series of changes going on.

1417
00:59:45,360 --> 00:59:47,640
And, you know, we're we got to make a few adjustments.

1418
00:59:47,640 --> 00:59:49,160
And so that's one of them.

1419
00:59:49,160 --> 00:59:50,960
There's a lot of positives to it, too.

1420
00:59:50,960 --> 00:59:53,680
It also means that more often than not,

1421
00:59:54,000 --> 00:59:56,920
Wes and I will be in studio together several times.

1422
00:59:56,920 --> 00:59:59,840
It'll be Wes Brent and I in studio together, which is going to be really nice.

1423
01:00:00,240 --> 01:00:02,480
I always really enjoy the shows where we can all be in the same room.

1424
01:00:03,280 --> 01:00:05,880
So that's going to be something that happens more often.

1425
01:00:06,160 --> 01:00:08,760
And we can do more meetups and things like that on Sundays and whatnot.

1426
01:00:08,760 --> 01:00:10,920
So there's a lot of other nice positives to it as well.

1427
01:00:10,920 --> 01:00:14,560
But changes are coming, and I'm both excited

1428
01:00:14,560 --> 01:00:16,760
and anxious about new shows and all of that.

1429
01:00:16,760 --> 01:00:20,120
So let's not stress about it and let's just title this thing.

1430
01:00:20,120 --> 01:00:47,200
Let's just get it figured out. We can do this.

