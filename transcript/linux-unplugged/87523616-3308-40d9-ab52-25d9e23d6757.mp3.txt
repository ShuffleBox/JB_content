I'm not even sure how I came across this this week, but
this might be the most adorable kernel patch ever.
Now, I'm gonna read this to you, but I want you to bear in mind that the author of
this kernel patch is only four years old, okay?
So I know already it's adorable.
I know, I can't believe, this isn't even all that recent.
I think this is from 2014, but like I said, I just came across it.
It is a fix for formatting.
And it goes, the letter, and the last letter, which is an S, is sad.
Because all of those have things like equals below them, and this one does not.
This patch fixes the tragedy so all the letters can be happy again.
And you read the patch notes, and it was a simple formatting fix.
And one of the kernel submitters worked with the young four year old
to clean things up and actually submit it into the kernel.
It's so great, it's so adorable.
Hopefully years later they just like find this unexpected nerd cred in their past.
Like yeah, I'm a kernel committer, of course.
Also I just realized how unaccomplished that makes me feel.
I look forward to seeing Linus Torvalds reply, like shredding this four year olds patch.
No, no, he was good.
This is Linux Unplugged episode 276 for November 20th, 2018.
Welcome to Linux Unplugged.
This episode may be cursed because I realized I didn't grab myself a beverage before the
show.
My name is Chris.
My name is Wes.
Hello, Wes.
So assuming we sort that tragedy out, we otherwise have a pretty great show.
Coming up, we've got some community news that caught my attention this week, and we'll explain
that Android kernel mystery that's probably been on your mind and you didn't even realize
it.
Take a look at that deep end.
And then rumor has it, 1804 is going 10 years of support.
We'll play the clips and a few other little highlights from Mark Shuttleworth's talk at
OpenStack.
Berlin, I think it was.
Berlin.
Berlin.
You and I weren't there.
But we did actually have...
We've been bonding with Mark all day.
We had crew members from Linux Academy at the event.
Got the inside scoop.
Whoa.
Got the inside.
They actually ended up getting stuck in Berlin too for like an extra 48 hours.
It was rough.
There are worse places to be.
That's true.
That's true.
Then coming up, we will launch officially, officially the voting for our new automation
system.
And then we'll take in some feedback, answer some questions, give you some app pics, some
gnome shell extensions, and I'll give you my first review of a Thunderbolt 3 dock that
I got from my Linux box.
But this one has an NVIDIA GPU built in.
Can you actually add full dedicated graphics via a single cable to your Linux box?
And does that crap actually work?
And what are the downsides when you externalize things like that?
I've got my initial report on all of that.
But before we go any further, we have a solemn duty that we must perform, and that is bringing
in our virtual lug.
Time appropriate greetings, Mumble Room.
Good morning, everyone.
Hello.
Hello.
Brandon, Brent, Charlie, Cubicle, Nate, Mini Mac, Poppy, Scott, Sean, the Silent Drifter,
and Mr. Wimpy.
It is good to see all of you in the virtual lug today.
Really happy to have you there.
You know, the virtual lug is one of the best parts of the show, so I'll just mention it
right here at the top of the show.
You should totally join us.
We've only got a few more episodes before the end of the year, and we'll probably be
recording our predictions episode either on December.
It kind of depends, because Linux Unplugged really gets the shaft on the holiday schedule
this year.
Linux Unplugged lands on Christmas Day and New Year's Day.
So we'll probably be recording our predictions episode around December 11th or the 18th.
Those are like the last Tuesdays before Christmas.
That's your shot to show everyone just how smart you are.
Yeah, that virtual lug is open to all of you, and if you want to get a prediction on what's
... I think what we're going to do, just so you can prepare yourself, is we're going to
make a prediction of what we think will happen, and we're going to make a prediction of what
we'd really like to see happen, what we really want to happen.
Like if you had a magic wand, what would happen?
Because those are always a lot of fun.
We'll be doing those, and then, if all goes as planned, we'll review them a year later
and see how things held up.
I mean, usually that's pretty rough, but we do it anyway for consistency.
That's right.
That's right.
So Mr. West, what have you been up to?
I saw a little problem solving involving X forwarding or something that you were working
on this last week.
Okay, so sometimes it's a weekend and you want a game.
Now by this I mean play a board game.
In particular, perhaps you've played Settlers of Catan, Chris.
Oh yeah.
Yeah, it's a classic board game, of course, but sometimes, well, your friends just aren't
where you are.
Enter Pioneers.
Now this isn't the fanciest game in the world.
In fact, it's a pretty old GTK2 implementation, but it is free software and it implements
like a whole bunch of the various expansions like Seafarers.
It's not super shiny.
It does work well.
On Linux, like it's packaged in Debian.
They have maintainers there.
So it's really easy.
Okay.
They have some binaries that someone manages to make for Windows.
Oh, really?
Unfortunately, one of my friends, well, he's on a Mac and he's a political scientist.
So he's not, you know, he does do some statistics in R, but compiling C++ and GTK applications.
Getting a GTK2 app on Mac OS.
How was that?
How did that work out?
Well, we dodged that bullet.
In the past, I'd had him use a virtual machine.
He was like, I think we used something called virtual bugs for this, which I was like, yes,
okay.
But I didn't want to go through that.
It was already 6 p.m. on a Sunday.
We just wanted to play the game.
I spun up a new VPS somewhere and then I used XPRA, which bills itself as screen for X11.
And it's probably most similar to X2GO, but serves similar functionality to almost any
VNC or RDP type application.
One of the things that makes it nice, though, is it basically starts its own little X server
on the side and then you can set the display variable for any app you want to run on it.
And then from any client, which includes an HTML5 client, I haven't tried it, but I'm
curious on like it has a package compiled for OSX.
He could just install.
He ran one command on the command line and up pop the application and I used it to run
the server that way.
They have a nice little GTK dialogue to configure the server.
So I didn't have to run that on my machine.
You set up a droplet.
You set this Xperia on there, XPRA, and then you forward just that GTK2 game.
Yeah, exactly.
And you can do it over SSH if you like, or it can bind just like a TCP port.
That's pretty nice.
That is interesting.
So it's application level X11 forwarding.
Now where does this fall in Wayland?
Probably doesn't do anything at all.
But for the moment, it is pretty useful.
Unless you use X-Wayland.
Oh, that's right.
The other thing it notes here is that you have forwarding of sound, clipboard, and printing
services.
That's pretty nice as well.
And you can do it over SSL if you like, or like Wes said, over SSH.
And that HTML5 client, think about that.
You could deliver single X11 applications inside a web browser with that.
Yeah, right.
That'd be pretty neat.
I have used OBS before with this on a droplet.
And of course, the video is not the snappiest.
But it worked.
I mean, I could control the software, and that's what counted.
So did they have to install a next server on their Mac?
I didn't follow along.
He didn't show me his screen.
But they have like a package for OSX.
I just told them, hey, install this and then run that command.
And with no further help or prompting from me, he got it working.
I see.
Yeah.
Huh.
And there's a Windows binary there, too.
Chris, I remember you were asking for a way to watch movies and shows when you were traveling
with some loved ones.
Would this solve that problem?
You think it could do video?
I mean, I think it would transmit video.
I don't know.
I don't know that it's specifically optimized for that use case, so probably would be choppy.
But I'll give it a shot.
Yeah.
Yeah.
Can you post a link to it in the chat?
Sure.
Yeah.
You can post a link to it in the show notes, linuxunplug.com.276.
But we'll put it in there.
It's expira.org.
And it's really neat.
I'm thinking about setting it up on a droplet that I use.
So I have gone the other route just recently.
In fact, I was talking to you about this this morning, is I've decided to set up a work
environment that I can access from less capable or less set up machines.
I've decided to just set up a work environment that's all on the command line as much as
possible that I can SSH into from a tablet, I can SSH into it from a phone, a desktop
that hasn't been set up yet.
And right now, and I kind of would like some feedback from the audience since I haven't
really pulled the trigger yet, I'm debating between two possibilities.
Setting up a VM on a droplet that I already have, a pretty powerful droplet, or setting
up an Ubuntu environment container.
When you look on Docker Hub, there are Ubuntu based containers and others that are just
pretty much, they're ready to go workstation container environments.
And you might say, Chris, why do this?
Well, my idea is, I don't want to thrash the local host.
I don't want to thrash the main host system.
I want to have a disposable environment that I can load packages into.
I can try out different applications.
I can do all kinds of things that I wouldn't want to do on a system that I want to keep
around for years.
And my first thought was, we'll build a VM, or anything like that.
But then I thought, maybe I could do this in a container and maybe have something a
little bit faster.
So you combine it with this Xperia, and then I could potentially even forward web browsers.
So what application do you want to run?
Well for the most part, I was just thinking the command line, like YouTube, DL, things
that I might want to run from the command line, do network diagnostics from a remote
system, that kind of stuff.
And so I initially-
I should set up some things like maybe Dropbox or other syncing systems so you could talk
to it.
I want something like that so I could move files in and out of cloud storage.
So that would definitely be a component of it.
And SFTP, you know, stuff like that.
So it doesn't have to be a lot.
So I'm curious to know what the audience would do.
Would you set up a VM or would you set up a container?
And the reason why you might go containers is because maybe it'd be a little faster.
I use sort of a mix of both.
Oh really?
Yeah.
So yes, you could have your droplet, an Ubuntu droplet.
And then for trying stuff out, you know, when you want to make sure it's all working nicely,
what you could do is use a combination of LexD and Multipass to start up full VMs when
maybe you're wanting to run something that needs its own kernel in order to, you know,
function properly.
And LexD, when it's something you can just jam inside a container quickly to test.
And you know, if you get those things set up and they're working for you, then you can
just leave them in those VMs and containers.
Or you know, if you're just testing something out, then you can chuck them away when you're
done.
This is a job for multiple.
This could be the perfect job for a Multipass.
Good suggestion, Wimpy.
Thank you.
And I mean, LexD is, you know, very well oriented for that full system in a container approach.
Yeah.
Yeah.
I mean, you could probably do a lot of it in the new versions of LexD.
Both of those are available as snaps, by the way.
Hmm.
Hmm.
Okay.
All right.
All right.
Go figure, right?
All right.
So I woke up to this news this morning and I have to be honest, it was the last news
item I expected.
It appears that Valve is discontinuing the hardware Steam Link, I guess, or another way
to put that maybe more accurately is they're discontinuing the Steam Link hardware, the
actual box itself, the little HDMI gadget that you could connect to your TV and it would
stream video games from your PC.
So not the client functionality in Steam, just the cute little box.
And they still are going to maintain their apps, so they're going to deliver this functionality
via an app.
And I was really surprised to see this for a couple of reasons.
Number one, Steam has really kind of led the way with the streaming service.
They were out there with the Steam Link before Google ever talked about their stream beta
or Microsoft ever announced the Xbox streaming.
I mean, they didn't beat One Live, but they were out there really early.
One of the first serious attempts.
And the really nice thing about Valve's approach is it's over your LAN.
It is over your damn LAN.
And that is just going to be a much less error prone experience when you're not having to
rely on your crappy internet connection or your ISP's crappy routing or five ISPs down
from your ISP's crappy routing, you're going to have a much better time.
And having this go over your local ethernet, there's just no competition.
No competition.
It's like the full control too, right?
You can build the system that runs the game, you can manage the network that it plays through,
and you set up the client that you want.
And I've had multiple people tell me that the Steam Link is a much better experience
than the Android version of the same thing.
So I was pretty surprised because it seemed to me that Valve was continuing also to invest
engineering in this area as of very recently, like a couple of weeks ago, so I was shocked
by this.
Poby, I was talking with you about it this morning, what was your reaction when you saw
the news?
I can't say I'm all together surprised, to be honest.
Really?
Yeah.
It's not had a lot of love.
I mean, I actually predicted that they would make a 4K version of it, but that obviously
didn't come to pass.
So the fact that there was never a 2.0 made me think this thing's end of life, they're
not going to make it anymore.
So I'm not enticed by it.
I'm a little sad because actually the Android app is rubbish, and it's way better on a big
TV.
I use them all the time when the kids want to play a game together with me.
It's one of those really nice family experiences to sit around in front of the telly, and each
have a Steam controller, and we play Gang Beasts or Tower Fall or Ultimate Chicken Horse
games that we play that are multiplayer local, and the gaming PC is in a completely different
room in the house.
It's upstairs out the way, and we just connect to it over the network, and away we go.
And even when the kids have sleepovers with friends come over, they all play Gang Beasts
or whatever and punch the what's-its-out-of-each-other, and it's great.
So yeah, I'm glad I've got them, and I'm keeping them, and you can prize them from my cold
dead hands.
Right.
And it does say they're going to continue to support them for a while.
Wimpy, I'm curious to know if you think it's just simply people weren't willing to hook
up a dedicated hardware box to their TV.
They've got enough set-top boxes now.
Yeah, I mean, there could be some fatigue around that.
I've got three set-top boxes downstairs now.
I've got a Roku, an Nvidia Shield, and a Steam Link.
I feel a little bit aggrieved because the Steam Link is the most recent addition.
I got that in the sales just a couple of months ago, but hopefully there'll be some longevity
to the device because the functionality will be the same as whatever the software solution
is that replaces it.
Yeah, and it was, I think in a way, it's a bit ahead of its time.
I think you may see once streaming services become more mainstream and people recognize
some of the limitations, there may be consumer interest in a solution that avoids those bottlenecks
and those limitations, and the Steam Link would be that.
But it would be.
I don't know.
Maybe this will be a refocusing point because, I mean, they could still maintain market share
or mine share if the Android app wasn't crap, or if it integrated with more third-party
services in a better way.
Yeah, I mean...
Because they're not going to win the be the end device battle, but they could win the
were the game marketplace still.
So I'm pretty sure the Nvidia Shield's GeForce streaming gaming stuff is very similar in
nature to the Shield's, or I'm sorry, to the Steam stream stuff, and there's not a latency
or lag issue with the Nvidia Shield GeForce stream service.
So it must be doable on Android because the GeForce one's fine.
Brandon, you mentioned in the chat room that you've had a Steam Link for a while.
What's your sort of quick review of the device?
It seems like it was a solid product to me, but I had limited experience with it.
Well, I thought it was fine, and it was also, like, I could play a few games on it.
What I also liked about it is if I wanted to project something on the TV, like, you
could actually do something like, what does Apple call it, the AirPlay, you can actually
do something like display or desktop on the screen if you hack it right.
Yes, that's right.
That is so cool.
As a geek, that is just the best.
All right.
Well, okay.
Well, then we'll take a moment.
We take a moment and we say goodbye to the Steam Link hardware, and my first thought
was maybe I should buy one.
Yeah, right?
I actually have one already, though, so I'm good, I'm good.
I wanted to highlight an article over at LWN that talked about mainlining the Android kernel
contributions, and as everybody knows, Android devices are based on the Linux kernel.
Those devices, though, don't really run a mainline kernel.
There's a good amount of out-of-tree code shipping on those devices, and that often
causes problems.
In 2008, I'm sorry, in the 2018 Linux Plumber's Conference, which just wrapped up, there was
specific discussions around fixing this, and maybe even running mainline kernels on Android
devices one day.
We're definitely not there yet, but it may be closer than most people think it is.
It is complicated, though, right?
Because it starts with this LTS release from the mainline, then that's combined with core
Android-specific code to make what's called the Android Common Kernel release, then vendors
pick up that Common Kernel, add a bunch more out-of-tree code to create a kernel specific
to a system on a chip, and then ship that to actual device manufacturers.
Yeah, and then they end up with this, like, essentially a device kernel.
So you have the mainline kernel, which becomes the Android Common Kernel, which then becomes
essentially a device kernel.
That is really complicated, and the Android core has really kind of been slow because
of this.
And in this development process, it's meant being based on really old kernels.
And it takes, really all told, a lot of the advantages out of basing all of this on Linux,
if you think about it.
Yeah, you have all these...
I mean, the biggest problem, I think, has been that you don't have a lot of abstraction
between them.
Like, people are just modifying the kernel.
So when big upstream changes come from the kernel, all this random out-of-tree code that
no one else can see, that's just gonna break.
Yeah.
Now, the word at this Plumber's Conference, though, is that Google plans to continue to
push vendors to ship updates, eventually mandating updates to newer LTS releases even after a
device is launched.
At some point, LTS releases will be included at Android security boltons because there
really is value in getting all that info out there and getting the bug fixes upstream.
Now, really the problem of getting devices around mainline kernels, of course, is all
of that out-of-tree code that the device manufacturers add.
That's really where the issue is.
The amount of code in the Android common kernel has been reduced considerably, though, with
a focused effort on getting these changes back upstream.
And there are now only about 30 patches in the Android common kernel, adding about 6,500
lines of code that are needed to boot Android.
Eventually though, they hope to get that down to zero once they can bring in a few things.
Some of those, though, are kind of exciting, like getting energy-aware scheduling into
the mainline.
Yeah.
Yeah.
And part of this is Google is going to knock off all that behavior of OEMs building in
their own schedulers and replacing the mainline scheduler because then sometimes you get wonky
results with apps that are really hard for developers to test against.
And you're probably thinking, as we're reading all of this, you're probably thinking about
Project Treble.
I know I was.
Yeah.
Right?
That introduced that new vendor interface, an API that implements a sort of hardware
abstraction layer, along with this interface came the concept of a generic system image,
which you'll hear Android developers refer to as a GSI.
If the GSI can be booted on a specific device, then the manufacturer has implemented the
vendor interface correctly, i.e. one of the tests is booting this standard image on your
device.
If you fail, then you're not matching the standard.
Now, so here's where it gets better.
Right now, the kernel is considered to be part of that vendor interface, right?
So the vendor must provide it as part of the low-level implementation.
But the plan, and this is the big change, is for Android to provide that generic kernel.
Devices will be expected to run this kernel.
To make that happen, they have to provide a set of kernel modules, and that's where
that new boundary comes in.
They can no longer provide their whole custom kernel, just a module, and that makes it a
lot easier to interrupt.
Yeah.
So they're moving all of that out of the main kernel itself, putting it into a module, and
that would, I wonder, hopefully mean, down the road, damn close to mainline kernels,
which means much faster security updates.
Like, okay, vendors add a couple of their own modules to support their hardware.
That is a lot more reasonable.
It's really how it should be done.
Yeah, right?
Yeah.
I do kind of, in the back of my mind, wonder if this is the fallout and result of Spectre
and Meltdown, in a way.
Being able to respond to those types of vulnerabilities across an entire platform really became a
thing at the beginning of this year that a lot of vendors became aware of.
Like, the concept that shit, we have shipped something that is faulty by design, and we
have to retroactively patch these internet connected devices, and we don't have a standard
mechanism to do that.
There's no continuous integration.
There's no pipeline to get this stuff built.
It takes years.
They're working on those tools.
They go into some detail on their continuous integration pipeline in the LWN article, if
you want to read more.
It's a ways off.
What's interesting is when they very, very begin the process of taking the mainline kernel,
they're really kind of just a few weeks off.
When they start working on it, they're just a few weeks off from mainstream.
It doesn't transition to years late until it goes through that device manufacture phase
where they customize the kernel for their hardware.
So making that into a module could make a huge difference for Android.
Okay.
So there's also one other question that just comes to my mind.
This is a lot of work from Google.
Like they're putting a significant pressure on those kernel releases, changing the way
this is done.
How does that fit in with their Fuchsia play?
I was just thinking the same thing.
I was thinking that all through this discussion.
Yeah.
So what do you think Wimpy?
What is the play here?
Why invest all this time, make multi-year plans just to pull the rug out from underneath
it all and introduce Fuchsia?
Well, that's been people's reading of Fuchsia and Magenta right now, and maybe we've read
it wrong.
Maybe that isn't the intention.
Maybe Android's safe and it's not going to get replaced.
The other idea maybe is that they're trying to prepare OEMs and manufacturers for this
relationship.
Like, look, on our next operating system that we want you to ship, they're getting updates.
You have to plan for it.
Now my glass is half empty, Wes.
Thank you.
My pleasure, sir.
It really could be.
It could be that.
It also could be the fact that even once they start shipping Fuchsia, that there will be
years still of a market dominating.
It has to be, right?
I mean, there's billions of Android devices now.
So this is something that needs fixing regardless.
And I am one that thinks that Fuchsia is designed to replace Android.
I admit it.
And I have not much to go on other than what it can do, the way it's built, and the fact
that their most recent products didn't ship with Android, but they shipped on the Chromecast
platform.
That, to me, is a big indicator that Android isn't a hot product inside.
I don't know.
We'll see.
I hope I'm wrong because I had a recent go with the Pixel 3.
And some memory issues aside, I think Android P is pretty damn good, especially put in that
dark mode.
Did you get a chance to update your device?
I did.
And honestly, P is great.
It's snappy.
It's a lot faster.
It's smooth.
The notification management stuff's way better.
It's nice to be able to just shut that stuff up.
And then one of the other things, it'll come up and say, hey, bro, I've noticed that you
commonly dismiss this notification.
Do you want me to stop?
Do you want me to just turn it off?
And I'm like, yeah, I do.
Thank you.
Yeah, that is good.
And also, the settings menu is really great now as well.
Yeah, much better.
Much better.
So I kind of hope they stick with it in some ways.
I don't want to see them bail on it because we haven't gotten to that perfect...
That perfect Android device is that DEX concept that everybody's excited about right now.
That's the perfect Android device.
You have a USB-C interface or something like that that you plug into a monitor.
You get mouse and keyboard, everything.
You have a Bluetooth mouse and keyboard.
You sit down at your desk.
You plug in one cable.
You get power.
You get external display.
And you have a full desktop environment running on this Android device.
That is...
I still think that's possible.
And I think the interest in the new DEX system...
I mean, you could also see tablet hybrids, which was a case you shove your phone inside
and then that mode activates into a hybrid tablet mode.
Cool.
That'd be pretty good.
That'd be pretty good.
All right.
Well, let's do a little community news here.
Deepin has a release, 15.8.
The latest version of the Deepin Linux distribution is out and available for download.
I gave it a download today.
Man, their mirror is getting hammered.
So I downloaded...
They had one option to download it off Google Drive.
I did that and that went a little bit faster.
This I'll say right off the top didn't boot for us.
I mean, actually it booted.
It didn't install for us.
It would not install on our MV&E storage.
I don't know what was going on.
We only had a little bit to play with it, but really pretty, really, really pretty.
It adapts to different display resolutions really well.
They've added an auto brightness function, which is, I think, all of the rage and should
be mandatory on today's 2018 desktop.
And they have a great doc system.
Deepin is one of those, I don't know, right now it feels like it's maybe not getting the
respect it should.
It's really a unique take.
I'm not saying it's like an elementary OS, but it's in that category.
It has worked hard to carve out its own little niche out there.
It's an elegant distribution, right?
Yes.
Yeah.
It's not for everyone and it won't meet all of your needs.
Right?
We couldn't get it to install.
The installer is not super full featured, but it was really elegant.
And if it had worked seamlessly, it would have been a really good experience.
Do you know if they ended up fixing the issue that they had in the previous release where
some of their native applications are not the same as other ones?
I kind of vaguely recall what you're talking about.
Does anybody else in the Mumba room recall what he's talking about and have a recollection
there?
That sounds vaguely familiar.
So in particular, if you go into the settings menu, you open up certain settings applications.
And if you've got the dark theme on, it'll be the dark theme.
But then other ones, it will only be white and you don't have an option to change it.
Okay.
Okay.
That might have been something I would have had a chance to try had it installed.
Yeah.
I don't quite understand why it didn't install.
We were doing a full disclosure on a core boot system and I did see some weird grub
install errors.
So who knows?
Yeah.
It could have been the core boot thing.
But I don't know.
I don't have a lot of experience with this distribution.
Nobody in the Mumba room is speaking up about it.
So I guess nobody.
Yeah.
I've used it quite a bit recently.
Oh, really?
You have?
I have.
Yeah.
It's one of my go-to distros for doing distro testing.
Yeah.
I love it.
I think it's brilliant.
Okay.
Why is it your go-to?
And what do you like about it so much?
It's my go-to because we're testing stuff that is not on Ubuntu and is not necessarily
Debian because it's built from Debian unstable in a similar way that Ubuntu is.
Right.
So it's a good sort of halfway house for testing stuff, but also it's just so nice and I actually
enjoy using it.
I think, oh, yes.
Every time I boot up Deepin, I just think this is really lovely and thoughtfully presented
and elegant and pretty and modern and it's just everything about it I think is just really
on point.
I think it's terrific.
One thing we noticed when we were going through the installer was the end-user license agreement.
What do you think about that?
I'll be honest.
I haven't read that.
I mean, we didn't either.
You just got to scroll down, but we didn't read it.
You don't often see like a full screen EULA when you're installing Linux though.
Yeah.
It's its own unique thing though.
Its own unique installer.
It's very pretty.
It's very minimal as well from what I remember.
Yeah.
Yeah.
All right.
Okay.
I'll give it a go on an Encore boot system.
I mean, I'll take that installer even with it not working over Anaconda any day.
Yeah, that's true.
Why is it not a fan of Anaconda?
Which I've turned on it over the years.
I've liked it a little bit more.
So package availability, snaps, those things, how's that on Deepin, Wimpy?
It's all tickety-boo.
It works really well there.
Oh, very good.
Okay.
All right.
It's on the we'll try list.
We'll try it on a different laptop.
Yeah.
You know, the thing is, is I really wanted that core boot machine, which is a Purism,
by the way.
It's the Librem 15.
I really want, I like that to be my go-to distro tester.
That's really like the, but core boot sometimes does throw things for a loop, which always
surprises me.
Like it seems like if any operating system was going to have solid core boot support.
It would be.
It would be Linux.
Come on.
But it's just not, you know, it's not a priority for that distro.
So it's understandable and it doesn't really properly reflect actual consumer hardware.
Right.
In one ways it's great because it's this like free hardware sort of thing, but no one else
runs it.
Yeah.
This is the beginning of the process where Chris justifies yet another studio computer.
Just kidding.
Never enough.
You know, maybe I'll keep them around now that I know that these 1804 installs are going
to get 10 years of support.
Well, there's some, there's some details along with that, but this was an interesting announcement
in several ways, actually.
Mark Shuttleworth, of course, the founder of Canonical was at the OpenStack Summit in
Berlin.
Mr. Wimby, I think you were there as well, weren't you?
No, I wasn't in Berlin as it happens.
I was in Stuttgart.
Oh, oh, I would barely even know the difference.
So I'm sorry.
Yeah.
So, uh, yeah, I, um, I, uh, was with a team of colleagues in Stuttgart, including Mark,
um, at the back end of last week.
And the OpenStack Summit seems like, um, like it's Mark Shuttleworth's power zone.
Like he really knows that market, uh, I don't know when I watched him up on stage, I thought
this guy really knows how to speak to this audience and he knows specifically what's
important to them.
I'll give you a little flavor.
So I grabbed a couple of clips so you guys can get a taste of what, what an OpenStack
keynote by Mark Shuttleworth is like, and this is the very beginning here.
Good morning, everybody.
It was so great yesterday to see everybody from this community again.
Every six months we meet up, uh, but I was stopped a thousand times by people with the
same two questions.
So I thought I may as well just answer them here.
Now he, uh, he's about to make a joke, but before he makes the joke, he actually addresses
what his thoughts are on the IBM buying Red Hat story, which I thought was pretty bold
move up on the stage, especially since that's a player in that market, you know, I mean,
they're competitors.
Um, the first question, uh, since everybody sees Canonical and Ubuntu as the company that's
risen to challenge Red Hat in the enterprise, it's what do I think of IBM buying Red Hat?
There's two big burly Texans behind the curtain.
So let me say I wasn't surprised to see Red Hat sell, uh, because over the last two years
I've seen some of their largest users and customers opening up and saying they wanted
to have new Linux options, uh, and signing up to build open infrastructure with Ubuntu.
But I was surprised at the amount of debt that IBM took on, uh, to close the deal.
And I would be worried for IBM, uh, except the public cloud is a huge opportunity.
And I guess it makes sense if you think of IBM being able to steer a large amount of
on-prem rail workloads to the IBM cloud, then that deal might make sense.
I was both, uh, cutting and astute, right?
It's like, I think that's great and brave of him.
He then goes on to joke that the second most common question that he gets is, uh, who did
you lose a bet with to have to glow, to grow out that, uh, I think as he puts it glorious
beard, I think are magnificent or something like that.
He really is rocking a beard these days.
Have you seen a recent latest look?
Yeah.
Have you seen a picture of Mark Shuttleworth?
It is funny because none of the like stock photos used in like quotes of him around the
various news sites have updated at all.
No.
Well, it's, it was a lot of beard.
I mean, if for, in ratio to Mark's public appearance, it was a lot of beard in a short
period of time.
Um, so while he's up on stage though, he's, he's gotten really good at doing a keynote
in like 10 minutes.
And when you're doing a keynote in 10 minutes, you really got to get going and you got to
explain stuff.
I mean, you got to have all, all the terms and the jargon you got to get through.
You have to have a clip.
And so Mark's going through and he's identifying what is a new area of growth for canonical.
And in this, he just casually drops in there that Ubuntu 18.04 will just receive 10 years
of support instead of the five we all expected.
A couple of years ago, we started focusing on telcos and I think everybody knows that
Ubuntu is the platform, uh, for telco open stack.
Um, last year we said we were focused on adding financial services to that.
And I'm very excited to tell you that over that period, six of the world's top 20 banks
have signed up with canonical to build open infrastructure on Ubuntu.
Now let's actually think about that.
Six of the world's top 20 banks.
Now you say, okay, six out of 20 doesn't seem like a lot.
Well, that has to be out of those 20 people that are interested in doing an open stack
deployment to begin with.
So that narrows down the list, right?
And also like each one of those deployments, it's a sizable deployment.
Yeah.
Oh yeah.
All six of them are going to be huge.
Right?
But only not, you don't, you don't just assume that all 20 just were itching to go to open
stack.
So only some of them were looking to switch their core infrastructure to begin with.
And the ones that did, six of them went with canonical solution.
That's a pretty major win.
But as somebody who has worked in the financial institution for nearly a decade back in the
day, I can tell you they move at a different pace.
As we moved into these new industries, that really raises the bar and the complexity and
the diversity of things that we support.
For those of you who are grappling with GDPR, you'll be delighted to know that the current
release of Ubuntu open stack supports full disk encryption, bastion and uses vault for
key storage.
I'm also delighted to announce that Ubuntu 18.04 will be supported for a full 10 years
in part because of the very long time horizons in some of those industries, financial services
and telecommunications, but also from IOT where manufacturing lines, for example, are
being deployed that will be in production for at least a decade.
Ten years now that's part of their ESM program, which I'm pretty sure when I looked on the
website has a $2,500 minimum to join, which means you probably have to have $2,500 worth
of machines.
Which makes sense, right?
I mean, we're used to thinking about Ubuntu solely in the open source or the cloud side,
the unsupported side.
Yeah, right.
But like the market they're talking about here, the market Mark's talking about, the
market that people investing and considering these things are talking about is enterprise
support.
Yeah, they have a fleet of Ubuntu systems and meeting that $2,500 minimum is easy.
That's where it's kind of interesting too, right?
Because you think about banks or especially telcos where you have these new breed of internet
companies that roll out their own, right?
They're like, we'll take your software, we'll hire a bunch of highly paid engineers in San
Francisco and they'll build our systems.
But not everyone wants that.
Telcos have their own technology to build.
So that's where they need a partner who can provide support for the layers they're not
interested in.
And there's a market reality here too, where if you're shipping a product in 2020, 2021,
then you're just starting to build it now.
And you want to base it on an operating system that's still going to have valid support when
your product actually makes it to the market and ships.
Yeah, you don't care about all the glibc changes that might happen in four years down the road
when like that doesn't affect your Java library.
We have some additional coverage and details in this week's episode of the Linux action
news program.
Check out linuxactionnews.com slash 80 for discussions on also their impending IPO.
But I wanted to move on.
I wanted to keep talking, I'll throw it to the moment room there for a moment if anybody
has any commentary on Ubuntu going for 10 years of support.
My early spoiler alert prediction is the next LTS of Ubuntu will just ship with 10 year
support by default is what I think.
Because this is what the market that they're competing in does.
This is what RHEL does.
This is what Microsoft does.
This is what large vendors in this area that they're competing with do is 10 years of support.
That's a lot of cadence though, right?
I know.
When you look back at the most recent LTSs that we put out like this, obviously 1804,
then before that 1604 and 1404, there are still a ton of people out there who are running
1404.
I mean, it's not surprising there's a lot of people running 1604 because that was only
two years ago.
But you know, 1404 was four and a half years ago now, and there are still plenty of people
out there running, which is why we backported snap support to 1404 is because we knew that
there were people who wanted the latest applications on the oldest LTS that, you know, is still
reasonable support.
So it makes total sense to support these releases for a longer period of time.
There's a snap angle to this as well, because if you have a lot of customers that are running
a wide variety of versions, snaps can kind of smooth that out.
But the thing that strikes me about this is Mark's up there on stage for about 10 minutes.
This announcement is 30 seconds at most.
Actually, let me see here.
Yeah, it's 30 seconds.
But in that 30 seconds, what that represents is teams of people in Canonical working away
at years backporting things to this old ass version of Linux for 10 years.
And you have to do it for all of the supported LTSs.
It's such a simple statement to make, which represents such a massive undertaking for
the company.
It strikes me as one of those things.
Do you agree?
I do.
And you know, if you want a better appreciation for what's involved in maintaining the security
profile of Ubuntu, Alex Murray, who's the security tech lead in Ubuntu, does a brilliant
podcast called the Ubuntu Security Podcast.
It's about 10 minutes each week.
And he runs down everything that the Ubuntu security team patched, fixed or otherwise
improved and goes into the details behind the CVEs and the vulnerabilities.
So if you want to get a real feel for the pace and momentum behind the work that the
security team do, 10 minutes a week and you'll learn an awful lot.
Yeah, I like that 10 minutes.
Will you put a link to that in the show notes?
Absolutely.
We will have a link in the show notes.
People want to check that out.
Ubuntu security podcast.org.
I've listened to a few myself.
I enjoyed it a lot.
You also touched on snaps there as well.
And, you know, whilst yes, if you have snap capability on your system, then you're able
to install these applications, you know, forwards and backwards.
But the other property that snaps give you is you could take legacy applications that
were deployed on Linux from the past.
You could create a snap of that, you know, artisanally bundle everything that that aged
application requires in a confined, isolated container, and now you can install that snap
on, you know, any of the supported distributions without exposing the whole system to those
old libraries.
Yeah, and not having to go through these flag day, you know, changes when a new release
comes out.
You have to now update your application, as Wes said, to support the new glibc or whatever.
I think that snaps honestly, like it makes sense because with snaps, it allows them the
opportunity to, you know, all of this maintenance that you would normally have to do back porting
it 10 years.
I mean, that normally would be a nightmare.
But if you've got that all isolated, that makes the core maintenance quite a bit less.
I thought that we might end up like with a Windows 2000 situation where there have been
applications that have been running on me for like 10, 15 years running on me for so
long that the company that made it might not exist anymore, and it might be a business
creation that no one knows how to port to the new version of iOS, so having it as a
snap would be excellent.
Yeah.
You can just like put it on whatever and it will work.
Well, so not only is there the old legacy enterprise application angle, and, you know,
to a lot of these degrees, Flatpak solves this as well, but there's also I think what
Wimpy was kind of getting at too is there's sort of the historical preservation.
We preserve physical pieces of art, but we're not really good at preserving digital pieces
of art.
And sometimes because the technology moves on, these old pieces of art can't even run
anymore.
And so being able to create a self-contained environment where you could preserve maybe
your favorite video game or your favorite old spreadsheet program, you know, that's
really important.
And I mean, I don't think it's right.
We shouldn't think about it necessarily only an old stuff too, like getting the ability
to have that flexibility also means you can use newer systems that might be supported
or get the latest security.
It means I can move on too without having to lose that legacy.
Exactly.
Oh, that's good stuff.
All right.
Well, let's shift gears and talk about docs here for a moment.
Wimpy really got us excited about this recently.
We've been drooling all week.
We have.
And Zach the penguin wrote into the show just a little bit before we went on the air and
he says, hi, Chris, you mentioned looking at getting a docking station and I found very
little online that suggests docs work well with Linux.
Would love to hear more about what doc you selected and how well it is working.
So I thought I would give my report on the doc that I ended up purchasing after last
week's episode.
I just decided to pull the trigger because I felt like this was an area that maybe the
Linux audience could use just some hands on experience.
There's a lot of uncertainty, you know, like any of this, it's all kind of brand new.
Right.
And in my case, this was a $367 doc and that's a big chunk of change to not know if you can
even plug in and make it work.
Yeah.
I'm not going to spend that money knowing it won't work.
No way.
No way.
So I thought, okay, well, I'm, I was really wanting to come to a doc solution and Wimpy
had found like a professional grade Lenovo doc that may have even been a touch more price
wise in this, but had a lot more ports than this does.
So there's a couple of different options here.
But so since Wimpy went with that one, which is working well, I don't know Wimpy just for
the sake of completion, do you know the model again?
Is it just called the Lenovo professional Thunderbolt doc?
I think that's what it's just called.
Yeah.
Yeah.
It's called, yeah, the Thunderbolt doc gen two, I think it is.
It's hard to decide if like the different docs Lenovo has can be pretty tricky.
I've linked to it for the last couple of weeks though.
That's the easiest way.
Yeah.
Anyway, so specific to this model of laptop as well.
Okay.
That's good to know.
So I sort of tucked and rolled and went with the Lenovo Thunderbolt three graphics doc
and it's got Lenovo on the name, but my understanding is it's not necessarily Lenovo specific, though
the packaging does sort of pitch it that way.
In fact, the packaging makes it sound like it doesn't even work with my laptop.
So when I got the box, I was a little apprehensive because for $367, I kind of have some expectations.
And what I want to get out of this is I have two display port driven 21 inch or no 27 inch
2k monitors.
Then one is vertical and one's horizontal.
I want to be able to plug in and have them light up.
I want to have my sound system plugged in because I have pretty nice speakers up in
my office.
I want to have a couple of USB devices, like a nice webcam.
The dream, right, where you like you bring your laptop in from the road, you just flew
in, you set it down, you plug in one cable, you get power and you have your full desktop
experience.
Totally.
That is 100% what I want to do.
And I did buy a Lenovo, well Linux Academy did, that is only Intel and that was very
intentional for heat and power and Wayland.
I just wanted to go Intel only.
But there is a part of me that every now and then really would love to play a game.
You don't happen to do it very often, so I wouldn't even consider myself a regular gamer,
but I am a sporadic gamer.
And so the concept of having an external Thunderbolt dock that had a graphics card in it was very
appealing.
But everything I looked at was nearly the size of a PC tower.
It was huge.
And even the ones that weren't super huge were very limited on the ports.
Like they maybe had some USB and none of them would have Ethernet, you know, like I really
want Ethernet.
It's no good if you have to have more than one thing.
Like the whole point is to be the only device you plug in.
So this is why I was willing to spend the money hoping it worked on the Lenovo Thunderbolt
3 graphics dock.
Baked into this dock and it's not overly large.
All of these are about the same size.
It's a very slim profile.
It has a Nvidia GeForce GTX 1050 graphics card built in.
I don't remember off the top of my head right now how much RAM is on it, but it's a decent
amount.
Again, I'm not looking for even 4K gaming here.
For the most part, I'm looking to do 1080p gaming.
You want to go from the difference of I have integrated graphics and can game basically
not at all to, okay, I'll play some things on whatever settings are reasonable.
Once a month.
So it's not a huge thing, but when I do have the opportunity, I really want to be able
to do it.
Or maybe you have like a sudden video processing workload that you just need to sit down and
get through.
Yeah, that absolutely can happen as well.
So I hooked it up and the first thing, I didn't know which USB-C port to put it in.
First time I plugged it in, I got power right away.
And this thing's pretty decent power delivery.
It's a 175 watt dock.
So you're going to be able, or I'm sorry, 170 watt power dock.
So you're going to be able to charge your battery pretty fast.
It's got a one USB 2.0 port.
It's got two USB 3.0 ports.
One of which is always on, which has got a little lightning bolt to indicate which one's
always on, so you want to charge your phone or something like that.
It has two DisplayPort 1.2 ports on the back.
One HDMI 2.0 port.
It has one headphone jack on the front.
What?
That legacy port?
I know, right?
Mine's got the courage port as well.
I love it.
Oh, man.
One gigabit ethernet, and then in the box it comes with the power adapter, obviously,
and a very, very short Thunderbolt 3 cable that barely reaches for my setup.
And all in all, I plugged it in, the first time I plugged it in, I plugged it into the
power USB-C port and nothing happened other than powering my laptop.
The second time I plugged it in, I plugged it into the main USB-C port that you're supposed
to.
The correct port.
And everything was good for like a good 20 seconds and my machine locked up and I had
to hard reboot.
But when I rebooted, I came back up and everything was detected.
And I did that.
I love this.
There's this command sudo ubuntu-drivers, can't remember the exact syntax, but it's
like auto install.
Yes.
Yeah.
Thank you.
And I just do that and it just goes and gets the NVIDIA 390 something driver, loads up
the NVIDIA driver, NVIDIA settings control panel for me.
I do one more reboot to make it all clean.
And sure enough, I open up the NVIDIA settings control panel and I can see all the information
about my video card.
Now, I didn't have the right display adapter cords.
I had display port to mini display port, which doesn't work with my monitor.
So I haven't yet hooked up my external monitors.
But this gave me an opportunity to find out if the internal display, the 1080p display
that's built into my Lenovo laptop, if that could be accelerated by the NVIDIA chip in
the external dock, which if you think about it, means you're round tripping a lot of video
data over that Thunderbolt 3 cable.
Didn't know if this was possible.
I didn't really know how to check to see which video card was powering my desktop.
I looked at LSPCI, I looked at the NVIDIA control panel and it all kind of seemed to
imply that my built in screen was being powered by the NVIDIA graphics card in the external
dock.
All right.
I thought, well, the only one way to really find out, let's fire up some games.
So get serious.
I've recently got back into playing Star Trek Online under wine, under Linux, of course,
and it's been actually playable-ish with the Intel graphics.
I mean, I feel like it has to be because you don't game that much.
So are you really going to play a bunch of a game that doesn't work?
No.
And so it was playable-ish.
Space combat was fine.
Ground combat was laggy, which is so typical Star Trek Online.
So I fire up the Star Trek Online and I immediately can tell even at the login screen that something's
different.
So I go in, I turn up the settings, do all of that, jump into the game, smooth as butter.
So the next thing I do, I close out, I load up Bioshock 2, go into there, full settings,
Bioshock 2, hit play, smooth as butter, full screen, 1080p, again, that's all I need, right?
It is legitimately accelerating the graphics on my built in Lenovo display with no external
displays hooked up to the dock, which I will have eventually, but for right now, I can
still get benefit out of that NVIDIA chip just with my single display.
Even without all the cables you need.
I've got my power.
I've got my USB devices all hooked up.
And now I've got actual playable 3D graphics on that thing.
Sounds like Wimpy might have a little command line magic to help you out here, too.
Oh, really?
What's this, Wimpy?
Some command line lerv?
Right.
Okay.
Yeah.
So listeners of the Ubuntu podcast will know we have a segment called command line lerv.
So I've got some command line love for you.
What you need is prime hyphen select.
And if you do prime hyphen select and query, it will tell you what video subsystem is currently
enabled.
So on my system, it says NVIDIA.
And is this part of the NVIDIA drivers graphics package that were this?
This is part of the Ubuntu additions to the NVIDIA drivers.
NVIDIA dash prime looks like the package that contains it.
And if you do prime hyphen select and then type either NVIDIA or Intel, it will switch
the drivers between the two modes.
And then all you need to do is log out and log back in.
And those drivers for that GPU or IGP will be enabled in the ones that you're using.
Awesome.
So that's how you can do it at the command line.
Users of the glorious, glorious Ubuntu Marte will automatically have an applet appear in
their taskbar when you've got a prime capable system.
And it will show you an icon which GPU you've got, so an Intel logo for Intel, an NVIDIA
logo for Intel, and a means to just toggle it through a simple UI.
That Ubuntu Marte, that's a clever distribution that they're...
Yeah.
And that was Mark's idea from the Ubuntu podcast.
He reviewed Ubuntu Marte 1504 on a super stellar Entroware that had hybrid graphics.
And he said, what we need is a tool to do this.
So I wrote one.
That is awesome.
That's great.
And it looks like there's also Fedora Prime, which is the same thing for Fedora and other
distributions to be able to do that.
So that's cool.
So that's something...
Can we...
Will you also toss links to that in the show notes?
Yeah.
That'll be for me after the show.
So at this point, I've now tried my Lenovo ThinkPad out with three separate Thunderbolt
3 docks.
One which was an OWC dock that was originally purchased for a MacBook, which got repurposed
now for the ThinkPad.
Another which is a cheapo one that I got off Amazon, I can't remember the name of it.
And now this graphics enabled Thunderbolt 3 dock.
And this was the trickiest of them all, I feel.
It was the one that I thought for sure would not work, especially not with the internal
graphics.
And I'm really, really just pleased that it's worked as well as it has.
I can't necessarily say I wholeheartedly recommend this dock.
It really kind of depends on what you want to do.
If I was going to spend the money again, I would probably still buy it, but I would still
give another serious consideration to the dock that Wimpy got because it has more ports.
And I'm already kind of...
I'm out of USB ports.
I've got cables hanging off the front of this thing that I don't like the way that
looks.
Yeah.
What?
A dock in a USB hub?
Who does that?
Yeah.
Right?
Where Wimpy has more USB ports.
It has more of the ports on the back.
All of that, right?
Because I've got my headphone jack on the front.
But no graphics, right?
Right.
So this particular setup, that's a compromise I'm willing to make.
I'm willing to make because I don't need a lot.
I need a couple of USB devices, a couple of monitors, and I want 3D graphics.
So for me, it's delivering what I want.
But it's just like...
Might not be right for everyone.
Just keep in mind, you're compromising a little bit on the ports.
At least you do get gigabit.
That was the real deal-sealer for me, is I like getting my gigabit.
And that's nice to have that built in.
So I will have links to the specific model that I bought on Amazon.
They don't give me a commission, so it's not for that.
Let's not get into that.
But you know what?
Maybe we should mention at this point, speaking of saving some money, Linux Academy is doing
a Black Friday sale, Cyber Monday sale.
And it essentially cuts off a huge amount of the price and makes it around like 30 bucks
a month or less.
Somewhere right in that neighborhood.
But the bigger deal is you lock that in for the lifetime of the account.
Now consider what that means.
They are growing like crazy, adding, they just this year added 420 plus new types of
individual usable content and consumable learning activities and training lessons and video
courses.
Way over 420.
In fact, I think in the last quarter, it was more like 500 just in one quarter.
But my point is, you get this Black Friday price or Cyber Monday price and you lock it
in for the lifetime of the account.
So if you're a subscriber now for five years, you're getting that price.
And they update the existing content.
So if you forgot some, you come back five years later, you still got your account, then
that's right there.
And then here's the other thing that I didn't really appreciate until just recently.
Existing students can also go get the price.
So if you're paying the regular price right now, yeah, you can go get the Black Friday
Cyber Monday price and then just lock it in for your subscription.
So I wanted to point that out, linuxacademy.com.
Just go there like on Black Friday that I'll be there.
Plus on their live page, you can see the live streams I did announcing some of the new content
with Anthony, which is fun.
We ended up doing four of them.
They have a streaming machine.
Yeah, we went from, like when I first went down there the first time, it was like a kind
of rough shot.
We just did it out of Anthony's office, set up an OBS machine, and it was just kind of
a little crazy.
But now they got like a video studio with a 4K Blackmagic camera and LED lighting, yeah,
like a physical set and all of that.
It's very impressive.
One other just thing before we completely move off of the Thunderbolt doc, I'll just
a little quick mention.
You do want to go learn Bolt.
I don't know, Wimpy, if you have any Bolt advice, but this is going to be specifically
Bolt CTL, the command line client that you can use from any desktop environment to authorize
your Thunderbolt doc.
So I've got a question.
Yeah, you do need to learn to use Bolt.
There's another tool that was also developed by Intel, but Bolt is the better option.
Answer me this.
When you said your computer locked up, was that after you ran Bolt to authorize the device?
It must have been because it was just almost immediately after I connected it.
Yeah.
So what I've found is if you've got a GPU in a Thunderbolt doc and you authorize the
device, then it hangs the system because you basically just thrust a GPU into the PCI lanes
of the computer.
Now if you've got an external GPU enclosure, like some of the ones that I have, the way
I do this is I pull the GPU out of the GPU enclosure, plug the external GPU in with no
card in it, authenticate the device that way, and then shut it all down, disconnect it,
and then plug the card in.
Because you're not authenticating the graphics card that's inside the doc, you're authenticating
the doc itself.
Now in your case, you don't have that luxury because the card is fused into the doc.
So yes, unfortunately, that first run is a bit hairy scary.
And yeah, I have encountered that.
Just make sure you run sync on the command line before you do that.
Yeah, yeah.
Yeah, get everything flushed.
I've got another command line, luv, which is sort of a GUI luv for you.
If you want to do that prime switching, but with GUI, if you run nvidia settings dash P
and then space and then all in caps prime, it will open nvidia settings on the prime
profile selection page, which has got the toggle to switch between Intel and nvidia.
Killer tip.
Thank you.
Thank you, Wimpy.
That's great.
I will probably just use the command line version.
But that's good for anybody that just wants to avoid the command line.
Some people make it their mission.
And while I think that's a little cray cray, I say embrace the command line.
And you're using Linux, come on.
You heard him say it there, too, they have tips like that all the time on the Ubuntu
podcast.
Go check it out.
Ubuntu podcast.org.
Get more wimpy poppy and mark two over there.
Yeah, so docs, I have the big thumbs up for it.
All right, let's keep going.
Let's talk about this new automation system.
In fact, Wes was plugging away at a new phase of our automation system.
And it's going to be a beast.
It's going to eventually when all is said and done, the process will go from editing
into the system, which has yet to be named.
It'll be rendered to MP3, it'll be rendered to video files, it can be rendered to multiple
formats, really.
It'll be distributed around the internet, it gets rendered to a particular visualized
type of video, it has text, it'll have artwork that it creates.
Chapters.
It'll add the chapter markers, it'll publish it to the RSS feeds, it'll eventually publish
it to the website.
I mean, these have yet to arrive, but it is a system.
And the idea is once you submit the work from the editor, everything's basically automated
from editing to the publishing.
Everything's automated.
Between the final edited WAV file and the show notes that we prepare, that's it.
You can't automate Joe.
But everything after Joe, you can.
We're trying really hard.
All right, so we have launched a straw poll to see what the hell we should actually name
this thing.
The community submitted a ton of names.
I did not actually count, but it was hundreds.
Let's just say thousands to make them feel good.
It was one of the larger spreadsheets I've ever had to sift through.
And which two names do you think, wow, people could vote for two names.
Wow, look at Angel letting them go.
Which two names work best for the Jupyter broadcasting automation system?
We have Autopod, Podpublisher, Podmaker, Jupytercaster, Castablasta, which, oh, that's a little bias
for me.
It is.
Yeah, that's for people that have been listening for a really long time.
Yeah, that's Castablasta.
They publish, OpenPublishMe, which I kind of like that one.
But I guess it's kind of generic, Bylove, Autopody, Podpublisher, JupyterPodcaster,
and Podblisher.
You can't have Podpublisher.
I know.
That's off the table.
I know.
Was Podpublisher in there?
Oh, yeah.
No, Podpusher.
It was Podpusher.
And Podpublisher, you said.
We've got some software called Podpublish, so let's not get those clattered.
It was Podbilish, but I agree.
We don't want any name collisions.
You and I are on the same page, though.
Because my vote really is, I probably shouldn't say what my vote is.
What about Autopody?
Did you say that one?
I think I did say Autopody.
Yeah, I think I did.
Because that's a good one.
All right, I'm making my votes.
Let's see here.
Oh, Castablasta is coming at 21% right now, Autopod, and then Jupytercaster, and then
Podpusher.
But we'll keep it open for a while.
And if you voted before, this is a new link, so make sure you go listen to this episode.
If you're listening, go vote again.
Refine.
A refined...
A better selection of the best suggestions from the wonderful community.
We have 99 votes right now, so you are very much still in that phase where you could move
the needle.
And remember, if you don't vote, you can't complain.
And boy, I'm looking forward to see where that goes.
All right, we got another email into the show, this one from Albert.
He says, howdy, I just switched to my Dell 17-inch Core i3 laptop to elementary OS from
Windows.
Oh.
I love all of the OS to a point.
But recently, I got my wife her first MacBook, and my question is, is there a YouTube app
or Linux snap?
Because she's got one, and I would like to have a desktop YouTube application.
No web browser.
He says he's used something similar on the Mac in the past.
He's been listening to the podcast for about a year.
Keep up the great work.
Albert from West Fargo, do we have any YouTube desktop applications?
Now I'm going to just mention the obvious one here, because I'm sure this is on the
tip of everybody's tongue.
You could just use YouTube DL, which is a package in your local repo that will just
give it the URL of a YouTube file and a video, and it will pull it down into pretty much
any format you want.
And there are graphical front ends to that.
I'm not sure if they're in the elementary app store or app center, but they're definitely
in the larger repository.
I will also say that MPV, just if you have YouTube DL, it'll integrate and you just paste
that YouTube link there and hey.
Just MPV and then the URL to the YouTube video.
And you're good.
There was also, there also used to be like Minitube.
Minitube's out there.
I'm linking that right now.
So that's one option.
I haven't, I haven't used it.
But anybody in the, Mr. Drifter, do you have like a YouTube app that you use to watch videos
without the web browser?
So I'm actually on board with you, I generally just use YouTube DL.
But I had one of my buddies point out, it's an app for, from NPM, it's called Natafire.
And essentially you can pass it any URL and it will make it a electron app.
Yeah, yeah, absolutely.
That's another way you could go.
And then you just make yourself like a YouTube application.
It's a web app, but it's, it's an own standalone thing independent from your browser.
You could have it logged into a separate Google account.
So there could be some real advantages to doing that.
And if you have one, yeah, Minitube, okay, great, yeah, Minitube, which is, boy, that's
a weird URL.
We should probably throw that in the show notes.
Already done.
Thank you, sir.
You are on top of it today.
Show notes, again, linuxunplug.com slash 276.
Here's another app that we're going to have in those show notes.
It's called WebTTY.
You can share a terminal session over WebRTC.
Years ago, I talked about something similar to this, but it wasn't using WebRTC.
This is the differentiating factor here.
You essentially use this built-in browser technology, you pair with a friend, and you
don't need a proxy server.
You can do it behind NATs.
It works just in browser.
And there's a great GIF that shows you the person who has a local session on their Linux
box and then the web browser for somebody who's watching on a Mac.
This just made me think about your friend again, like similar situation where you could
easily share something with your friend.
He could just go to a URL on his Mac and start watching.
It's not very complicated.
It's easy to share on social media if you want to do like a demonstration.
I will say it had a little bit of trouble.
I used it in some, let's say, exotic environments, but anywhere where you might have like a double
NAT, like I ran it in a couple of containers that were behind on my LAN.
But running it on like a droplet works no problem.
And the pasting, the big blob of data between each other, it works pretty well.
That seemed like, okay, so they kind of tout working behind a NAT here, but you're saying...
No, it does, but it basically works as well as like your typical WebRTC implementation
because that's what it's doing behind the back.
Sure.
Yeah.
Okay.
That makes sense.
And then some of us just refuse to accept the death of Unity.
It's too hard.
You know, got a few things right.
And when Mark Shuttleworth announced the end of the Unity desktop and the transition to
GNOME, since then, you've had so many people come out of the woodwork saying, well, I kind
of liked Unity.
I loved it.
I thought it was kind of great.
Can I still use Unity?
Is there a spin?
I don't know.
I think there is, but there is maybe something that's a bit of a middle ground.
It's a GNOME Shell extension, everybody.
It's Unite Shell, a GNOME Shell extension, which makes a few layout tweaks to the top
panel and removes window decorations to make them look like Ubuntu Unity Shell.
It's like when you maximize, like the close buttons go up in the title bar up top.
That makes sense.
Yeah.
Anybody have any thoughts on this Unity Unite Shell extension?
Yeah, it's funny.
There's so many of these ways and means in which you can make your desktop look like
Unity.
There's, you know, Michael Tunnel has done a whole guide for how you make KDE look like
it.
We've got the thing that makes GNOME look like a bit like Unity and Martin's got Mutiny.
And then this Linux on Dex thing that Samsung made has the GNOME flashback session or whatever
it's called.
Right.
Oh, yeah.
Right.
There are a lot of people who said it was terrible and awful.
There are a lot of people who are trying to make their desktops look like it.
Yeah, I have noticed.
And when I saw that, I was like, that actually looks kind of good.
We like the design.
We just don't want canonical to make it in-house.
Yeah.
Yeah.
I guess so.
I've never installed GNU slash Linux.
Well, we'll have a link in the show notes if you want to check it out.
But it's obviously it's on the GNOME extensions website.
So you can just go grab it.
I'm kind of tempted, but I don't have...
There's no harm in trying.
Actually, you know what?
Fedora right there.
I was just thinking that.
We should totally do it on the Fedora box.
That would love that.
That would be so great.
All right.
Well, that wraps up this week's episode of the Unplugged program.
There's just a few left.
Like I said, towards the top of the show, our predictions episode is coming up soon.
So join us for that.
We'll be talking about that.
Yeah, I'm thinking about what's going to happen in 2019.
Maybe you can blow our minds with something.
Blow our minds!
And I'm looking forward to the holidays.
We got Turkey Day coming up here in the States.
So happy Turkey Day to everybody out there that does celebrate it.
Don't forget that Black Friday sale.
It's a hell of a deal.
If you've signed up recently to support these shows, why not take advantage of the Black
Friday sale?
Why not?
Or if you're a student, or you want to get into something, do it.
Anyways, I'm at ChrisOS.
I'm at Westpacne.
We'll see you back here next Tuesday!
There we go.
There's a show.
You know, you were just asking in the chat room during the outro, Drifter, about Barrier,
which is a Synergy alternative.
We haven't tried it yet, just because this is my first Tuesday back in studio.
But I think it's probably on our list to kind of consolidate down to one keyboard and mouse
and still have, we'll have one.
We got to synergize the studio.
One, two, three, four, five, six, seven screens in front of us.
You can even like set it up so we could actually place one of our ThinkPads in there.
Yeah, and then have eight screens.
Yeah.
Yeah.
So yeah, that is something we want to play with and then do.
We got a couple of segments in the works too.
We're working on some WireGuard stuff.
We still have some more projects we're going to be open sourcing.
And then when we get some breathing room, we also have some announcements we want to
make around like contributions to open source projects and stuff.
So there is much in the works.
But right now we're doing a whole bunch of backend stuff, trying to get our ducks in
a row.
And then we can get into new shows.
It turns out there was a lot of dust we needed to sweep up sitting behind things.
Stuff that we never had resources to take care of before.
And now we have the resources to clean house a little bit and make things the way they
should be.
So we want some of our processes to reflect the professionalism that we're trying to aspire
to.
And so some of those things just had to be changed.
Plus, there's a whole bunch of backend like business processes stuff that we're working
through.
But yeah, the whole merging still.
Yeah.
It's still lots of stuff out.
Yeah, but it's getting so close to being done.
So we're working on new, we're starting to work on new projects.
We're starting to make plans for next year's contributions.
Like we're setting up like goals for our department to make sure that we reach a certain level
of contributions and stuff like that.
So we'll be talking about all that stuff soon.
So that barrier, WireGuard, our automation system stuff, still a lot to come.
