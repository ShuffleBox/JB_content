1
00:00:00,000 --> 00:00:01,480
Now that you and I are ThinkPad users,

2
00:00:01,480 --> 00:00:02,920
I'm always on the lookout for like

3
00:00:02,920 --> 00:00:04,520
the ultimate portable ThinkPad.

4
00:00:04,520 --> 00:00:05,920
Of course.

5
00:00:05,920 --> 00:00:08,360
I love our T480s, but you just gotta keep an eye out.

6
00:00:08,360 --> 00:00:10,780
Well, how about the ThinkTiny?

7
00:00:10,780 --> 00:00:15,780
It's a miniature laptop with a 0.96 inch display

8
00:00:16,680 --> 00:00:19,240
and a design that's heavily inspired by the ThinkPad.

9
00:00:19,240 --> 00:00:22,300
It even has a track point in the little middle

10
00:00:22,300 --> 00:00:23,840
kind of fake keyboard area.

11
00:00:23,840 --> 00:00:27,140
Yeah, it's exactly as cute as you think.

12
00:00:27,140 --> 00:00:30,380
Now, to make it, Paul Klinger, the guy behind this,

13
00:00:30,380 --> 00:00:32,600
created a 3D printed case custom

14
00:00:32,600 --> 00:00:37,600
and then crammed a 128 by 64 pixel OLED display

15
00:00:37,800 --> 00:00:38,960
inside there.

16
00:00:38,960 --> 00:00:41,720
As long as an 80 tiny 1614 microcontroller

17
00:00:41,720 --> 00:00:44,860
and a 300 milliamp battery.

18
00:00:44,860 --> 00:00:47,080
Now, despite choosing all those small components,

19
00:00:47,080 --> 00:00:49,360
he still had to make some modifications

20
00:00:49,360 --> 00:00:51,480
because even with the tiny screen,

21
00:00:51,480 --> 00:00:53,000
the circuit board was still too big,

22
00:00:53,000 --> 00:00:54,640
had to saw that right off.

23
00:00:54,640 --> 00:00:55,760
Sure.

24
00:00:55,760 --> 00:00:57,400
You can find instructions, code,

25
00:00:57,400 --> 00:00:59,480
and all the design on his GitHub.

26
00:00:59,480 --> 00:01:02,480
This is actually also his second tiny PC.

27
00:01:02,480 --> 00:01:04,720
The first was a miniature desktop PC replica

28
00:01:04,720 --> 00:01:08,040
with full RGB lighting, of course.

29
00:01:08,040 --> 00:01:09,720
This is really pretty impressive.

30
00:01:09,720 --> 00:01:11,480
Now, I don't know that I could get very much done

31
00:01:11,480 --> 00:01:13,360
on something that small.

32
00:01:13,360 --> 00:01:14,680
Maybe meet in the middle.

33
00:01:14,680 --> 00:01:15,520
Yeah.

34
00:01:15,520 --> 00:01:16,360
Yeah.

35
00:01:16,360 --> 00:01:17,180
Yeah.

36
00:01:17,180 --> 00:01:18,020
Yeah.

37
00:01:18,020 --> 00:01:18,860
Yeah.

38
00:01:18,860 --> 00:01:19,680
Yeah.

39
00:01:19,680 --> 00:01:20,520
Yeah.

40
00:01:20,520 --> 00:01:21,360
Yeah.

41
00:01:21,360 --> 00:01:22,180
Yeah.

42
00:01:22,180 --> 00:01:23,020
Yeah.

43
00:01:23,020 --> 00:01:23,860
Yeah.

44
00:01:23,860 --> 00:01:25,440
Hello, friends, and welcome into Linux Unplugged.

45
00:01:25,440 --> 00:01:26,320
My name is Chris.

46
00:01:26,320 --> 00:01:27,200
My name is Wes.

47
00:01:27,200 --> 00:01:28,040
Hello, Wes.

48
00:01:28,040 --> 00:01:30,000
I didn't mean to catch you mid-sip.

49
00:01:30,000 --> 00:01:32,040
I mean, I'm a thirsty guy sometimes, Chris.

50
00:01:32,040 --> 00:01:35,160
We're working hard today because we have a huge episode.

51
00:01:35,160 --> 00:01:36,840
Yeah, you're not lying.

52
00:01:36,840 --> 00:01:39,480
Wes and I got a real early crack at it today

53
00:01:39,480 --> 00:01:40,880
because there's a lot to get into.

54
00:01:40,880 --> 00:01:42,680
We've got some new hardware in-house.

55
00:01:42,680 --> 00:01:44,520
We have a very special guest joining us

56
00:01:44,520 --> 00:01:49,000
and lots of news to get into, as well as a look at Fedora

57
00:01:49,000 --> 00:01:51,400
Core OS and Ubuntu Core.

58
00:01:51,400 --> 00:01:53,520
And maybe we'll try to differentiate

59
00:01:53,520 --> 00:01:54,700
what those real products are.

60
00:01:54,700 --> 00:01:57,440
Sometimes we've made the mistake here on the old show

61
00:01:57,440 --> 00:01:59,560
of conflating, Wes.

62
00:01:59,560 --> 00:02:01,960
Oh, yeah, but Drew's here to help us set it straight.

63
00:02:01,960 --> 00:02:03,460
He's going to help us un-configurate

64
00:02:03,460 --> 00:02:04,440
our conflations.

65
00:02:04,440 --> 00:02:05,100
Finally.

66
00:02:05,100 --> 00:02:08,520
And we'll be able to more appreciate how these two

67
00:02:08,520 --> 00:02:10,120
products differentiate.

68
00:02:10,120 --> 00:02:11,200
You said it, not me.

69
00:02:11,200 --> 00:02:13,840
So I mentioned we have a special guest this week.

70
00:02:13,840 --> 00:02:16,760
Phil, one of the original founders of the Mangero

71
00:02:16,760 --> 00:02:19,000
project, is joining us in the virtual log today.

72
00:02:19,000 --> 00:02:19,500
Hello, Phil.

73
00:02:19,500 --> 00:02:20,680
Hello, everyone.

74
00:02:20,680 --> 00:02:21,180
Hello.

75
00:02:21,180 --> 00:02:22,660
Thank you for joining us.

76
00:02:22,660 --> 00:02:25,000
And also, big time appropriate greetings

77
00:02:25,000 --> 00:02:26,240
to the rest of that virtual log.

78
00:02:26,240 --> 00:02:27,120
Hello, everybody.

79
00:02:27,120 --> 00:02:27,620
Hello.

80
00:02:27,620 --> 00:02:28,120
Hello.

81
00:02:28,120 --> 00:02:28,620
Hello.

82
00:02:28,620 --> 00:02:29,120
Hello.

83
00:02:29,120 --> 00:02:29,620
Hello.

84
00:02:29,620 --> 00:02:30,600
Greetings.

85
00:02:30,600 --> 00:02:31,360
Well, wow.

86
00:02:31,360 --> 00:02:31,860
Impressive.

87
00:02:31,860 --> 00:02:32,360
Impressive.

88
00:02:32,360 --> 00:02:33,040
Well, wow.

89
00:02:33,040 --> 00:02:35,080
We've got Brent and Byte and Niels in there,

90
00:02:35,080 --> 00:02:39,520
CubicleNate, MiniMech, of course, Phil, CM, and Wimpy.

91
00:02:39,520 --> 00:02:42,800
But joining us here on the studio line, as well,

92
00:02:42,800 --> 00:02:46,120
to help us break all this down, is Alex, Cheese, and Drew.

93
00:02:46,120 --> 00:02:47,040
It's a huge show today.

94
00:02:47,040 --> 00:02:47,600
Hey, guys.

95
00:02:47,600 --> 00:02:48,360
Hey, what's up, dudes?

96
00:02:48,360 --> 00:02:48,640
Hello.

97
00:02:48,640 --> 00:02:49,580
It's a big show.

98
00:02:49,580 --> 00:02:50,960
This is going to be a lot to pull off,

99
00:02:50,960 --> 00:02:52,200
but we're going to try to do it.

100
00:02:52,200 --> 00:02:53,800
And with everyone's help, I think we can.

101
00:02:53,800 --> 00:02:55,640
So let's start with a warm-up story, just

102
00:02:55,640 --> 00:02:58,080
to help us ease into this thing.

103
00:02:58,080 --> 00:03:01,440
The Darling Project has picked up new contributors

104
00:03:01,440 --> 00:03:05,000
and is seeing new code contributed to the project.

105
00:03:05,000 --> 00:03:06,000
You might remember this.

106
00:03:06,000 --> 00:03:07,520
It's a longstanding, although it's

107
00:03:07,520 --> 00:03:11,540
been idle for years, effort to allow Mac OS binaries

108
00:03:11,540 --> 00:03:13,080
to run on Linux.

109
00:03:13,080 --> 00:03:16,520
Think wine, but for Mac OS applications.

110
00:03:16,520 --> 00:03:20,280
Well, this summer, there's been a lot of progress moving along,

111
00:03:20,280 --> 00:03:22,560
including some new developers.

112
00:03:22,560 --> 00:03:23,360
Yeah, that's right.

113
00:03:23,360 --> 00:03:25,820
They just published their quarter two highlights.

114
00:03:25,820 --> 00:03:28,240
And some of those highlights are things like new contributors

115
00:03:28,240 --> 00:03:32,160
coming on board and making progress all over the stack.

116
00:03:32,160 --> 00:03:34,960
They've been stubbing out more frameworks, like AGL, Carbon,

117
00:03:34,960 --> 00:03:38,540
Address Book, Core Services, and Application Services,

118
00:03:38,540 --> 00:03:41,340
and improving AppKit support, including

119
00:03:41,340 --> 00:03:43,540
stuff like nested frameworks.

120
00:03:43,540 --> 00:03:46,220
There's also a fix for 32-bit application support

121
00:03:46,220 --> 00:03:49,120
and a bunch of other low-level bug fixes.

122
00:03:49,120 --> 00:03:50,740
And maybe that doesn't sound exciting,

123
00:03:50,740 --> 00:03:53,120
but you need all of that if you want any of this to work.

124
00:03:53,120 --> 00:03:56,680
Well, and you probably maybe were a little surprised

125
00:03:56,680 --> 00:03:58,280
your 32-bit support in there.

126
00:03:58,280 --> 00:03:59,080
Yeah.

127
00:03:59,080 --> 00:04:00,580
Yeah, that's actually what they think

128
00:04:00,580 --> 00:04:02,460
is going to be one of their secret sauces, one

129
00:04:02,460 --> 00:04:03,520
of their selling points.

130
00:04:03,520 --> 00:04:06,180
It will be for people that want to continue

131
00:04:06,180 --> 00:04:09,320
to run 32-bit Mac software after Apple

132
00:04:09,320 --> 00:04:11,160
goes all 64-bit with Mac OS.

133
00:04:11,160 --> 00:04:12,320
OK, hang on.

134
00:04:12,320 --> 00:04:16,880
Right, roll back a second there.

135
00:04:16,880 --> 00:04:21,160
So the 32-bit support in Mac OS, is that not

136
00:04:21,160 --> 00:04:23,840
a constraint on the kernel?

137
00:04:23,840 --> 00:04:26,880
It's purely a constraint on user space.

138
00:04:26,880 --> 00:04:32,560
Yeah, Apple has not shipped a 32-bit Mac OS environment

139
00:04:32,560 --> 00:04:33,840
for several years now.

140
00:04:33,840 --> 00:04:38,200
They dropped all the 32-bit Mac hardware support back

141
00:04:38,200 --> 00:04:43,640
in Lion, I think, so 10.5, which was five or so years ago,

142
00:04:43,640 --> 00:04:44,600
I think.

143
00:04:44,600 --> 00:04:45,920
It was when I was in college.

144
00:04:45,920 --> 00:04:49,360
So they dropped it quite a long time ago.

145
00:04:49,360 --> 00:04:51,720
And the version that's about to come out

146
00:04:51,720 --> 00:04:54,520
drops the ability to even execute 32-bit applications,

147
00:04:54,520 --> 00:04:55,040
correct?

148
00:04:55,040 --> 00:04:57,660
Right, they're dropping all the user libraries, all the user

149
00:04:57,660 --> 00:05:01,760
applications, all of the remaining shims that

150
00:05:01,760 --> 00:05:06,120
are in the kernel for supporting 32-bit Mac OS ABI.

151
00:05:06,120 --> 00:05:09,860
The binary loader for 32-bit Mac OS objects is getting removed.

152
00:05:09,860 --> 00:05:11,640
All that goes away in Catalina 10.15.

153
00:05:11,640 --> 00:05:12,640
Yeah, right.

154
00:05:12,640 --> 00:05:16,320
OK, OK, right, so let me get this straight.

155
00:05:16,320 --> 00:05:21,680
At a kernel level, executing 32-bit binaries is going away.

156
00:05:21,680 --> 00:05:24,600
Right, on a major commercial platform, correct?

157
00:05:24,600 --> 00:05:25,400
That's fine.

158
00:05:25,400 --> 00:05:26,360
That's their choice.

159
00:05:26,360 --> 00:05:27,880
But I'm just trying to understand

160
00:05:27,880 --> 00:05:30,580
how the heck this Darling project then

161
00:05:30,580 --> 00:05:33,600
executes 32-bit applications when there's

162
00:05:33,600 --> 00:05:35,080
no kernel support for it.

163
00:05:35,080 --> 00:05:36,040
Darling runs on Linux.

164
00:05:36,040 --> 00:05:37,360
It's akin to Wine.

165
00:05:37,360 --> 00:05:39,960
Oh, OK, there we go.

166
00:05:39,960 --> 00:05:41,280
There's my misunderstanding.

167
00:05:41,280 --> 00:05:43,460
So their bet is that people will move to Linux

168
00:05:43,460 --> 00:05:45,960
as well, which is implicit in the statement

169
00:05:45,960 --> 00:05:49,200
that it is going to be their selling factor.

170
00:05:49,200 --> 00:05:51,120
It's that they'll also get people to switch.

171
00:05:51,120 --> 00:05:54,600
Does this mean that it opens up the avenue for possibly having

172
00:05:54,600 --> 00:05:56,400
my Adobe suite on Linux?

173
00:05:56,400 --> 00:05:57,680
I mean, that's the goal, right?

174
00:05:57,680 --> 00:06:02,920
I mean, when you hear this, you think graphical applications.

175
00:06:02,920 --> 00:06:04,640
As I recall, with the Darling project,

176
00:06:04,640 --> 00:06:06,840
initially it's just been command line applications.

177
00:06:06,840 --> 00:06:10,060
But there are AppKit implementations happening,

178
00:06:10,060 --> 00:06:12,720
and they are working on moving things

179
00:06:12,720 --> 00:06:15,680
like carbon core services and support for AGL.

180
00:06:15,680 --> 00:06:18,760
So actually, it does seem to be that the end goal is

181
00:06:18,760 --> 00:06:20,360
the full graphical stack.

182
00:06:20,360 --> 00:06:22,000
I don't think it's possible.

183
00:06:22,000 --> 00:06:23,280
There's just a lot to do there.

184
00:06:23,280 --> 00:06:23,960
Yeah.

185
00:06:23,960 --> 00:06:26,320
The second line on their GitHub page

186
00:06:26,320 --> 00:06:29,480
says, please note that no GUI applications are supported

187
00:06:29,480 --> 00:06:30,300
at the moment.

188
00:06:30,300 --> 00:06:30,800
Right.

189
00:06:30,800 --> 00:06:34,920
And you can appreciate that Wine was successful to a degree

190
00:06:34,920 --> 00:06:37,840
because Windows was stagnant for so many years.

191
00:06:37,840 --> 00:06:41,400
And Mac OS doesn't really have that same characteristic.

192
00:06:41,400 --> 00:06:44,280
It's a much more forward-moving operating system,

193
00:06:44,280 --> 00:06:45,760
and they quickly deprecate support

194
00:06:45,760 --> 00:06:48,240
for things that Microsoft is much slower

195
00:06:48,240 --> 00:06:49,440
to deprecate support for.

196
00:06:49,440 --> 00:06:52,200
And Wine has been successful to a degree because of that.

197
00:06:52,200 --> 00:06:53,960
And they built up the expectation, right?

198
00:06:53,960 --> 00:06:55,760
They're just going to do it, and you have to live with it.

199
00:06:55,760 --> 00:06:56,260
Yeah.

200
00:06:56,260 --> 00:06:57,720
It's a whole other ballgame.

201
00:06:57,720 --> 00:07:00,320
As a former Mac developer, one of the big things

202
00:07:00,320 --> 00:07:03,480
you kind of get educated on as you do software development

203
00:07:03,480 --> 00:07:08,040
for Mac OS is that you expect Apple to break you.

204
00:07:08,040 --> 00:07:11,320
And so over time, you just learn to adapt

205
00:07:11,320 --> 00:07:14,040
to keep rebuilding things, and changing things,

206
00:07:14,040 --> 00:07:15,280
and updating things.

207
00:07:15,280 --> 00:07:16,880
It's very similar to the Linux world,

208
00:07:16,880 --> 00:07:21,160
which is why I get very confused when people are like, well,

209
00:07:21,160 --> 00:07:24,360
Linux is changing so much, and it breaks me all the time.

210
00:07:24,360 --> 00:07:26,840
And as a Mac developer, it's like,

211
00:07:26,840 --> 00:07:28,960
but this is the same experience.

212
00:07:28,960 --> 00:07:30,520
Similar on mobile as well, isn't it?

213
00:07:30,520 --> 00:07:33,760
Less so, actually, because of the versioned SDK stuff.

214
00:07:33,760 --> 00:07:40,320
So the versioned SDK stuff tends to hide that churn

215
00:07:40,320 --> 00:07:42,200
to a lesser extent.

216
00:07:42,200 --> 00:07:46,680
Also, that SDK story on Android is fascinating, right?

217
00:07:46,680 --> 00:07:50,000
Do you know what version of the SDK,

218
00:07:50,000 --> 00:07:53,920
or rather, what version of Android

219
00:07:53,920 --> 00:07:59,880
shipped the SDK that 99% of developers target is?

220
00:07:59,880 --> 00:08:01,520
Is it a 5 series?

221
00:08:01,520 --> 00:08:05,480
You would be wishing it's Android 4.4

222
00:08:05,480 --> 00:08:08,280
is the recommended target to reach

223
00:08:08,280 --> 00:08:12,200
99% of Android devices right now,

224
00:08:12,200 --> 00:08:15,360
as prescribed via Android Studio if you

225
00:08:15,360 --> 00:08:17,620
start creating a new app today.

226
00:08:17,620 --> 00:08:22,080
I think that we should all make those businesses fail.

227
00:08:22,080 --> 00:08:23,080
That's really awful.

228
00:08:23,080 --> 00:08:24,640
That's pretty awful.

229
00:08:24,640 --> 00:08:28,720
All right, well, the ARM platform is, well,

230
00:08:28,720 --> 00:08:30,240
is maybe the future.

231
00:08:30,240 --> 00:08:31,560
I don't know, actually.

232
00:08:31,560 --> 00:08:32,980
That's remained to be seen.

233
00:08:32,980 --> 00:08:37,960
But I have in Studio right now the Raspberry Pi 4 desktop kit.

234
00:08:37,960 --> 00:08:41,000
I picked this up right when it was announced.

235
00:08:41,000 --> 00:08:45,320
It comes with a Raspberry Pi 4, 4 gigabytes of RAM,

236
00:08:45,320 --> 00:08:47,720
a keyboard and a mouse, the Raspberry Pi edition.

237
00:08:47,720 --> 00:08:48,520
And they are cute.

238
00:08:48,520 --> 00:08:50,480
And they are actually pretty great.

239
00:08:50,480 --> 00:08:52,960
It comes with an official Raspberry Pi beginner guide

240
00:08:52,960 --> 00:08:54,280
book, which is a nice book.

241
00:08:54,280 --> 00:08:55,240
I don't know if you got a chance to see it out there.

242
00:08:55,240 --> 00:08:56,400
Yeah, I was coming through there.

243
00:08:56,400 --> 00:08:57,200
I'm impressed.

244
00:08:57,200 --> 00:09:00,280
And it comes with Raspbian on a micro SD 16 gig card.

245
00:09:00,280 --> 00:09:02,400
It's pretty tight.

246
00:09:02,400 --> 00:09:06,020
And it comes with two HDMI cables, micro to regular size,

247
00:09:06,020 --> 00:09:07,960
as well as the USB-C power brick.

248
00:09:07,960 --> 00:09:11,520
And the whole kit is $120 US, I think.

249
00:09:11,520 --> 00:09:13,200
And it arrived a couple of days ago.

250
00:09:13,200 --> 00:09:15,000
And we set it up this morning in the studio.

251
00:09:15,000 --> 00:09:17,240
So we've been testing it all morning.

252
00:09:17,240 --> 00:09:21,120
And it's running a series of punishing Ferronix benchmarks

253
00:09:21,120 --> 00:09:21,640
right now.

254
00:09:21,640 --> 00:09:22,400
Oh, yeah.

255
00:09:22,400 --> 00:09:24,560
We are doing all the different compiling.

256
00:09:24,560 --> 00:09:26,240
And we're going to test the disk IEO.

257
00:09:26,240 --> 00:09:29,680
You did do some early wireless testing.

258
00:09:29,680 --> 00:09:31,520
Yeah, we just had it set up on the wireless here

259
00:09:31,520 --> 00:09:32,240
in the studio.

260
00:09:32,240 --> 00:09:34,100
So we did some basic Iperf tests.

261
00:09:34,100 --> 00:09:35,360
And they weren't too bad.

262
00:09:35,360 --> 00:09:37,000
Now, obviously, this is all taking place

263
00:09:37,000 --> 00:09:38,440
in our environment.

264
00:09:38,440 --> 00:09:40,200
As a comparison, I also ran those tests

265
00:09:40,200 --> 00:09:43,440
on my ThinkPad, which had about double the throughput.

266
00:09:43,440 --> 00:09:44,120
Yeah.

267
00:09:44,120 --> 00:09:46,440
And we were seeing around 80 megabits

268
00:09:46,440 --> 00:09:49,600
over the Wi-Fi, which is a pretty nice upgrade

269
00:09:49,600 --> 00:09:50,600
from the previous.

270
00:09:50,600 --> 00:09:54,640
And I found it sufficient to browse a large remote directory

271
00:09:54,640 --> 00:09:56,720
and copy over a movie file and things like that.

272
00:09:56,720 --> 00:09:56,920
Right.

273
00:09:56,920 --> 00:09:58,760
It may not be the fastest thing in the world,

274
00:09:58,760 --> 00:10:01,040
but it was definitely workable as a desktop.

275
00:10:01,040 --> 00:10:02,220
So I'm going to give it a go for a week.

276
00:10:02,220 --> 00:10:03,640
Starting after this show, I'm going

277
00:10:03,640 --> 00:10:05,960
to run it as my workstation for a week.

278
00:10:05,960 --> 00:10:08,680
And then I'll report back next week with how things went.

279
00:10:08,680 --> 00:10:10,600
Because right now, it's just really early days,

280
00:10:10,600 --> 00:10:12,080
super early impression.

281
00:10:12,080 --> 00:10:16,960
One thing that I guess I just maybe didn't expect,

282
00:10:16,960 --> 00:10:19,280
but perhaps should have known, is

283
00:10:19,280 --> 00:10:22,400
that the Raspbian install that ships on that thing is 32-bit.

284
00:10:22,400 --> 00:10:24,280
So that one of the selling points, obviously,

285
00:10:24,280 --> 00:10:25,880
of the Raspberry Pi 4 is that it's

286
00:10:25,880 --> 00:10:29,760
got that sweet 64-bit four-core processor.

287
00:10:29,760 --> 00:10:32,200
But Raspbian itself is 32-bit.

288
00:10:32,200 --> 00:10:34,760
And I went through my land notes when the story was announced,

289
00:10:34,760 --> 00:10:38,280
and I did have it noted in there that the OS was 32-bit.

290
00:10:38,280 --> 00:10:39,080
But I'd forgotten.

291
00:10:39,080 --> 00:10:41,360
So when it arrived and I booted it up,

292
00:10:41,360 --> 00:10:43,000
I thought I'd be running 64-bit Linux,

293
00:10:43,000 --> 00:10:45,760
because the selling point, it's a 64-bit processor.

294
00:10:45,760 --> 00:10:46,720
That is not the case.

295
00:10:46,720 --> 00:10:49,280
And I think you might have figured out why.

296
00:10:49,280 --> 00:10:51,560
Yeah, well, I found a great blog post

297
00:10:51,560 --> 00:10:52,960
by James Chambers going through how

298
00:10:52,960 --> 00:10:56,240
to get Ubuntu server up and running on the Pi 4

299
00:10:56,240 --> 00:10:58,920
while support is still improving, let's say.

300
00:10:58,920 --> 00:11:02,000
And I guess there's a problem with the SD card driver.

301
00:11:02,000 --> 00:11:05,840
So the RAM is limited to 1 gig in the 64-bit version.

302
00:11:05,840 --> 00:11:07,560
It does otherwise work all right.

303
00:11:07,560 --> 00:11:08,880
You can get it up and booting.

304
00:11:08,880 --> 00:11:11,720
But if you paid for 4 gigs, you probably want 4 gigs.

305
00:11:11,720 --> 00:11:15,520
And of course, 32-bit OSes can address 4 gigs of RAM.

306
00:11:15,520 --> 00:11:16,240
So you're fine.

307
00:11:16,240 --> 00:11:18,320
I mean, it's functionally fine.

308
00:11:18,320 --> 00:11:20,440
There's no real major downside, as far as I can see.

309
00:11:20,440 --> 00:11:22,800
It just wasn't what I expected, because it

310
00:11:22,800 --> 00:11:25,280
was advertised as a 64-bit product.

311
00:11:25,280 --> 00:11:27,080
And it might be something I experiment with,

312
00:11:27,080 --> 00:11:28,400
is trying other OSes on there.

313
00:11:28,400 --> 00:11:29,940
Wimpy, have you done any experiments

314
00:11:29,940 --> 00:11:31,920
with Ubuntu MATE on the Pi 4?

315
00:11:31,920 --> 00:11:35,760
Not enough to qualify a reasonable debate

316
00:11:35,760 --> 00:11:36,880
at the moment, no.

317
00:11:36,880 --> 00:11:38,760
I'm looking forward to running that on there.

318
00:11:38,760 --> 00:11:41,200
I think, ultimately, that'll be my desktop for that system.

319
00:11:41,200 --> 00:11:42,480
But right now, I'll try Raspbian.

320
00:11:42,480 --> 00:11:44,560
So I've had a number of projects going on at the moment.

321
00:11:44,560 --> 00:11:46,680
We spoke about them last week, which was mostly

322
00:11:46,680 --> 00:11:49,280
around the UMPC devices.

323
00:11:49,280 --> 00:11:52,320
And we've got some news about another one of those tomorrow.

324
00:11:52,320 --> 00:11:56,280
And I'm about to head off on two weeks of vacation.

325
00:11:56,280 --> 00:11:59,480
And I'll be taking the Pi 4 with me.

326
00:11:59,480 --> 00:12:03,960
So in the evenings, when I've tucked everyone in bed,

327
00:12:03,960 --> 00:12:05,680
I'll have a bit of a tinker.

328
00:12:05,680 --> 00:12:08,040
And hopefully, I'll have something

329
00:12:08,040 --> 00:12:09,920
when I get back in a few weeks' time.

330
00:12:09,920 --> 00:12:10,600
Great.

331
00:12:10,600 --> 00:12:13,280
Well, in the meantime, I'm going to enjoy Raspbian.

332
00:12:13,280 --> 00:12:14,760
And we'll have a link to the guide

333
00:12:14,760 --> 00:12:17,680
to get 18.04.2 installed on there,

334
00:12:17,680 --> 00:12:20,280
including information about that.

335
00:12:20,280 --> 00:12:22,240
I guess you said it's a SATA driver bug?

336
00:12:22,240 --> 00:12:23,400
SD card driver.

337
00:12:23,400 --> 00:12:24,200
Ah, OK.

338
00:12:24,200 --> 00:12:25,160
You wouldn't be using one of those, would you?

339
00:12:25,160 --> 00:12:25,960
No, you're right.

340
00:12:25,960 --> 00:12:26,760
No, of course not.

341
00:12:26,760 --> 00:12:27,560
No, how would I?

342
00:12:27,560 --> 00:12:28,560
No, of course not.

343
00:12:28,560 --> 00:12:32,080
I do love SD cards on the Raspberry Pi,

344
00:12:32,080 --> 00:12:34,720
because it is 100% floppy disk.

345
00:12:34,720 --> 00:12:35,480
It's so floppy.

346
00:12:35,480 --> 00:12:36,440
It feels like it, yeah.

347
00:12:36,440 --> 00:12:38,600
And the way you eject it from your computer and load it in,

348
00:12:38,600 --> 00:12:39,720
it's just kind of fun.

349
00:12:39,720 --> 00:12:41,000
That takes me back.

350
00:12:41,000 --> 00:12:42,320
It takes me back.

351
00:12:42,320 --> 00:12:46,880
Since the certain models of the Pi 2 and the Pi 3

352
00:12:46,880 --> 00:12:51,120
have had USB booting, I've kind of been persuaded by that.

353
00:12:51,120 --> 00:12:53,240
I use USB devices now.

354
00:12:53,240 --> 00:12:53,880
Yeah.

355
00:12:53,880 --> 00:12:59,040
You were seeing that folks are using eSATA to USB devices

356
00:12:59,040 --> 00:13:00,840
to get large storage.

357
00:13:00,840 --> 00:13:04,000
USB 3 to SATA, and then adding solid state drives.

358
00:13:04,000 --> 00:13:06,760
At least that's what James Chambers suggests, in fact.

359
00:13:06,760 --> 00:13:07,280
OK.

360
00:13:07,280 --> 00:13:08,840
And then they're using that on the Pi 4

361
00:13:08,840 --> 00:13:10,040
to get decent large storage.

362
00:13:10,040 --> 00:13:11,720
That's fast.

363
00:13:11,720 --> 00:13:13,000
There's some options there.

364
00:13:13,000 --> 00:13:13,680
It's fun.

365
00:13:13,680 --> 00:13:16,160
Yeah, it'd be interesting to see just how far you can push

366
00:13:16,160 --> 00:13:17,680
this new, beefier Pi.

367
00:13:17,680 --> 00:13:18,200
Yeah.

368
00:13:18,200 --> 00:13:21,120
But also, I wonder if I could get the thing on wired

369
00:13:21,120 --> 00:13:23,080
ethernet, would it maybe be faster

370
00:13:23,080 --> 00:13:26,760
to use iSCSI or something of that nature?

371
00:13:26,760 --> 00:13:28,720
That's an interesting benchmark, isn't it?

372
00:13:28,720 --> 00:13:29,440
Yeah.

373
00:13:29,440 --> 00:13:31,800
Right now, I'm running just the standard Ferronix test suite

374
00:13:31,800 --> 00:13:32,320
benchmarks.

375
00:13:32,320 --> 00:13:33,200
Love that tool.

376
00:13:33,200 --> 00:13:35,160
You know, we're going to have to do some audio testing

377
00:13:35,160 --> 00:13:35,720
on there, too.

378
00:13:35,720 --> 00:13:36,560
Oh, yeah.

379
00:13:36,560 --> 00:13:38,520
Oh, yeah, because really, that's what

380
00:13:38,520 --> 00:13:40,440
we're going to be using these things for is solving

381
00:13:40,440 --> 00:13:42,680
different problems all around the studio.

382
00:13:42,680 --> 00:13:45,720
Well, so let's chat with Phil, because today,

383
00:13:45,720 --> 00:13:47,960
as we record, there's a pretty big story that's

384
00:13:47,960 --> 00:13:49,760
circulating around the Manjaro community

385
00:13:49,760 --> 00:13:51,560
and the rest of the web.

386
00:13:51,560 --> 00:13:53,160
And that is Manjaro's announcement

387
00:13:53,160 --> 00:13:55,040
that they have struck a partnership

388
00:13:55,040 --> 00:13:59,080
to ship the closed-sourced free office suite by default

389
00:13:59,080 --> 00:14:01,200
in Manjaro Linux.

390
00:14:01,200 --> 00:14:03,080
And I had a chance to take a look at it,

391
00:14:03,080 --> 00:14:04,600
because I'd never really messed around with it.

392
00:14:04,600 --> 00:14:05,740
So I'll share some thoughts on there.

393
00:14:05,740 --> 00:14:07,720
But I thought, let's get Phil on to just get

394
00:14:07,720 --> 00:14:10,360
an idea of what's going on from the top of the project on this.

395
00:14:10,360 --> 00:14:12,560
So Phil, thanks again for coming on the show.

396
00:14:12,560 --> 00:14:14,920
And welcome for your first time on Linux Unplugged.

397
00:14:14,920 --> 00:14:16,080
No problem.

398
00:14:16,080 --> 00:14:18,360
So in your own words, characterize

399
00:14:18,360 --> 00:14:19,360
today's announcement.

400
00:14:19,360 --> 00:14:22,880
Well, it was announced that we have a partnership

401
00:14:22,880 --> 00:14:26,400
with SoftMaker, who is the producer of a free office

402
00:14:26,400 --> 00:14:30,240
and a bunch of other open-source products,

403
00:14:30,240 --> 00:14:33,680
or in the case, also proprietary products.

404
00:14:33,680 --> 00:14:37,120
They ship out in several systems,

405
00:14:37,120 --> 00:14:40,080
like Mac OS, Windows, and also on Linux.

406
00:14:40,080 --> 00:14:43,480
And it features pretty, at least from what I can tell,

407
00:14:43,480 --> 00:14:47,560
pretty sweet compatibility with Microsoft Office

408
00:14:47,560 --> 00:14:49,080
and other commercial office products.

409
00:14:49,080 --> 00:14:50,680
And it has a similar look and feel

410
00:14:50,680 --> 00:14:52,920
to commercial Microsoft desktop office.

411
00:14:52,920 --> 00:14:55,560
That's exactly because they started with Windows,

412
00:14:55,560 --> 00:14:59,760
then moved over to Mac OS, and finally got also to Linux.

413
00:14:59,760 --> 00:15:03,360
And we got approached a couple of weeks ago from them

414
00:15:03,360 --> 00:15:07,000
directly to see how we can include

415
00:15:07,000 --> 00:15:08,980
free office in our distribution.

416
00:15:08,980 --> 00:15:09,900
What appealed to you?

417
00:15:09,900 --> 00:15:11,200
I mean, what was the big motivating factor?

418
00:15:11,200 --> 00:15:13,360
Was part of it the better compatibility?

419
00:15:13,360 --> 00:15:15,640
Similarity to what users migrating to Manjaro

420
00:15:15,640 --> 00:15:17,200
might already be familiar with?

421
00:15:17,200 --> 00:15:19,920
Well, it's a German company, for instance.

422
00:15:19,920 --> 00:15:22,320
And most of us are also from Germany.

423
00:15:22,320 --> 00:15:26,520
So it's just a smaller hub to go to them directly.

424
00:15:26,520 --> 00:15:29,480
And with the talks we had with them,

425
00:15:29,480 --> 00:15:33,800
they offered to adjust the free office software and even

426
00:15:33,800 --> 00:15:37,960
the other products they might sell for our Linux distribution

427
00:15:37,960 --> 00:15:40,120
to make it more compatible.

428
00:15:40,120 --> 00:15:42,520
And if we have some issues with that,

429
00:15:42,520 --> 00:15:46,000
we can present to them directly and have a direct line

430
00:15:46,000 --> 00:15:50,280
to their developers to fix issues if we find something.

431
00:15:50,280 --> 00:15:55,080
Also, they are open to change whatever we might need.

432
00:15:55,080 --> 00:15:58,880
So essentially, there is a business relationship,

433
00:15:58,880 --> 00:16:02,760
or a real actual partnership, between you

434
00:16:02,760 --> 00:16:06,040
and the makers of free office in such

435
00:16:06,040 --> 00:16:09,160
that you have a channel to give feedback and whatnot?

436
00:16:09,160 --> 00:16:10,000
Yes, exactly.

437
00:16:10,000 --> 00:16:13,320
So we start with a free office, and then we

438
00:16:13,320 --> 00:16:14,360
see how that works.

439
00:16:14,360 --> 00:16:18,000
And it was a test balloon with the release candidate five

440
00:16:18,000 --> 00:16:20,960
and six to see, A, how does it work?

441
00:16:20,960 --> 00:16:21,720
How does it look?

442
00:16:21,720 --> 00:16:24,640
So Softmaker also checked it from their side

443
00:16:24,640 --> 00:16:27,200
if it's fit their needs as well.

444
00:16:27,200 --> 00:16:31,520
And then I announced it with RC6 to the public as well.

445
00:16:31,520 --> 00:16:35,320
And now we are in a situation that we have, A, people

446
00:16:35,320 --> 00:16:38,160
who like it, and, B, people who doesn't dislike it.

447
00:16:38,160 --> 00:16:40,400
That's to be expected, I suppose.

448
00:16:40,400 --> 00:16:43,680
Was there a monetary exchange between the Mangero project

449
00:16:43,680 --> 00:16:46,120
and Softmaker for this partnership?

450
00:16:46,120 --> 00:16:47,600
No, it's just the beginning.

451
00:16:47,600 --> 00:16:51,240
So they also have the Softmaker office,

452
00:16:51,240 --> 00:16:54,800
which might be then in consideration

453
00:16:54,800 --> 00:16:56,800
to see what we can do with that.

454
00:16:56,800 --> 00:17:00,360
But for the beginning, it's just the partnership

455
00:17:00,360 --> 00:17:05,000
of we can say what is wrong or what we can improve.

456
00:17:05,000 --> 00:17:07,040
And they will fix it.

457
00:17:07,040 --> 00:17:11,120
And such and based on that, we can build on top of it.

458
00:17:11,120 --> 00:17:13,120
That's really great that they are

459
00:17:13,120 --> 00:17:15,840
willing to work with you at that level.

460
00:17:15,840 --> 00:17:18,700
Because your shipping, Mangero has always

461
00:17:18,700 --> 00:17:20,080
been a very practical distribution

462
00:17:20,080 --> 00:17:22,560
solving problems for the end users

463
00:17:22,560 --> 00:17:24,680
that other distributions don't necessarily solve.

464
00:17:24,680 --> 00:17:26,280
And this is yet another one, making

465
00:17:26,280 --> 00:17:27,920
that a smoother experience.

466
00:17:27,920 --> 00:17:31,080
And the type of user that needs office software

467
00:17:31,080 --> 00:17:33,440
isn't necessarily generally the type of user

468
00:17:33,440 --> 00:17:37,680
that is going to be particularly savvy at solving

469
00:17:37,680 --> 00:17:39,240
compatibility issues and whatnot.

470
00:17:39,240 --> 00:17:41,240
So this seems like a very practical choice

471
00:17:41,240 --> 00:17:43,240
for the end users.

472
00:17:43,240 --> 00:17:45,600
And at the same time, you get a channel.

473
00:17:45,600 --> 00:17:47,800
You get a partnership with this company

474
00:17:47,800 --> 00:17:50,760
to help guide feedback, which seems

475
00:17:50,760 --> 00:17:53,640
like a very, very good opportunity for the project

476
00:17:53,640 --> 00:17:54,360
overall.

477
00:17:54,360 --> 00:17:57,220
So I have to probably address what the big criticism has

478
00:17:57,220 --> 00:18:00,960
been so far, which is, well, why do this when Libre Office is

479
00:18:00,960 --> 00:18:04,600
perfectly capable and it's free software, so therefore,

480
00:18:04,600 --> 00:18:08,000
by default, that's what we all should be supporting?

481
00:18:08,000 --> 00:18:10,460
Well, it's a default. And either way,

482
00:18:10,460 --> 00:18:15,240
we will step out of this stack and say, hey, we will be bold

483
00:18:15,240 --> 00:18:17,360
and try something different as to rest.

484
00:18:17,360 --> 00:18:19,640
So we will be noticed.

485
00:18:19,640 --> 00:18:21,800
This is one of the considerations we did.

486
00:18:21,800 --> 00:18:27,200
And also, the company is 30 years in the business.

487
00:18:27,200 --> 00:18:31,640
And they make a living out of the office sellings.

488
00:18:31,640 --> 00:18:35,680
And they're willing to make it happen for several platforms

489
00:18:35,680 --> 00:18:40,040
and willing to include external considerations

490
00:18:40,040 --> 00:18:41,560
to their products.

491
00:18:41,560 --> 00:18:43,440
And that is one of the considerations

492
00:18:43,440 --> 00:18:45,920
we also made in our decision making,

493
00:18:45,920 --> 00:18:47,840
that the world is changing.

494
00:18:47,840 --> 00:18:52,000
And if a company sees Linux as a platform, it's a plus.

495
00:18:52,000 --> 00:18:55,320
Right, it's a recognition of desktop Linux in a sense,

496
00:18:55,320 --> 00:18:55,960
isn't it?

497
00:18:55,960 --> 00:18:59,400
Exactly, and it shows also to us that the Manchara is

498
00:18:59,400 --> 00:19:02,080
on the map somehow and widely used.

499
00:19:02,080 --> 00:19:06,360
And we were really humbled that a German company is approaching

500
00:19:06,360 --> 00:19:08,720
us, since we're still a hobby project.

501
00:19:08,720 --> 00:19:11,440
So not everybody achieved that.

502
00:19:11,440 --> 00:19:13,040
Wimpy, as a distro maintainer yourself,

503
00:19:13,040 --> 00:19:16,240
I'm curious on your thoughts about the inclusion of Libre

504
00:19:16,240 --> 00:19:20,640
Office as the default, because it's the free version.

505
00:19:20,640 --> 00:19:24,280
I'm somewhat surprised and a little bit dismayed

506
00:19:24,280 --> 00:19:27,400
at the community reaction to this,

507
00:19:27,400 --> 00:19:32,040
because there are many Linux distributions that

508
00:19:32,040 --> 00:19:36,960
ship by default, for example, Google Chrome and Steam.

509
00:19:36,960 --> 00:19:38,120
Nvidia drivers.

510
00:19:38,120 --> 00:19:40,120
Or Nvidia drivers.

511
00:19:40,120 --> 00:19:43,840
That one, I'm not prepared to put in the same category,

512
00:19:43,840 --> 00:19:45,960
to be honest with you, because that's

513
00:19:45,960 --> 00:19:50,560
all about enabling absolute functionality in the device

514
00:19:50,560 --> 00:19:51,440
that you own.

515
00:19:51,440 --> 00:19:53,080
All right, that's fair, actually.

516
00:19:53,080 --> 00:19:54,320
I think that's a really good point.

517
00:19:54,320 --> 00:19:54,960
That is a good distinction.

518
00:19:54,960 --> 00:19:57,280
It's about fundamentally enabling the hardware

519
00:19:57,280 --> 00:19:58,560
that you paid good money for.

520
00:19:58,560 --> 00:19:59,200
Right.

521
00:19:59,200 --> 00:20:04,960
Whereas if you've got Firefox available, why Google Chrome?

522
00:20:04,960 --> 00:20:10,040
And if you've got SuperTuxCart available, why Steam?

523
00:20:10,040 --> 00:20:13,800
Or why not itch.io, also proprietary?

524
00:20:13,800 --> 00:20:17,480
Or why not games from Humble Bundle?

525
00:20:17,480 --> 00:20:24,160
So I think there's a little bit of hypocrisy going on here,

526
00:20:24,160 --> 00:20:29,280
because there seems to be an application class which I'm not

527
00:20:29,280 --> 00:20:32,120
prepared to accept that this is proprietary,

528
00:20:32,120 --> 00:20:35,280
but then there are other applications which is, oh,

529
00:20:35,280 --> 00:20:38,800
that's obviously going to be proprietary, or that's fine.

530
00:20:38,800 --> 00:20:42,560
I want the functionality that that thing gives me.

531
00:20:42,560 --> 00:20:44,600
And you get a free pass on that.

532
00:20:44,600 --> 00:20:47,720
So I can understand where Phil's coming from.

533
00:20:47,720 --> 00:20:50,800
Phil is trying to build the future for Manjaro

534
00:20:50,800 --> 00:20:52,760
and try out new things.

535
00:20:52,760 --> 00:20:54,920
And we should all be trying out new things

536
00:20:54,920 --> 00:20:58,440
and feel that we're in a safe place to do that.

537
00:20:58,440 --> 00:21:02,160
And we shouldn't be lambasted for experimenting or trying

538
00:21:02,160 --> 00:21:03,920
to improve the Linux landscape.

539
00:21:03,920 --> 00:21:07,440
Because after all, since 1994, what

540
00:21:07,440 --> 00:21:11,880
I've been seeking to achieve is computing parity

541
00:21:11,880 --> 00:21:14,000
on my Linux desktop.

542
00:21:14,000 --> 00:21:17,120
And we're very close to getting there these days.

543
00:21:17,120 --> 00:21:21,160
And why stand in the way of achieving that?

544
00:21:21,160 --> 00:21:21,960
Yeah, well said.

545
00:21:21,960 --> 00:21:22,840
I completely agree.

546
00:21:22,840 --> 00:21:23,360
You're right.

547
00:21:23,360 --> 00:21:23,920
It has been.

548
00:21:23,920 --> 00:21:27,360
And in the case of an office suite, a word processor,

549
00:21:27,360 --> 00:21:29,720
spreadsheet, whatever, that seems

550
00:21:29,720 --> 00:21:32,440
like the quintessential get-your-job-done tool.

551
00:21:32,440 --> 00:21:34,440
The quintessential, I don't really care.

552
00:21:34,440 --> 00:21:36,200
You know it opens those for fun, right?

553
00:21:36,200 --> 00:21:37,960
Right.

554
00:21:37,960 --> 00:21:40,680
For me, what I really want to be free

555
00:21:40,680 --> 00:21:45,880
is my core libraries, my kernel, my desktop environment.

556
00:21:45,880 --> 00:21:48,600
I always want to have a free browser option forever.

557
00:21:48,600 --> 00:21:50,480
I always want to have something on my system

558
00:21:50,480 --> 00:21:51,940
that's a free browser, that's always

559
00:21:51,940 --> 00:21:54,440
a big requirement of mine.

560
00:21:54,440 --> 00:22:00,160
I start to get less picky at the more like a layer 7

561
00:22:00,160 --> 00:22:05,720
type basic applications, like an office suite application

562
00:22:05,720 --> 00:22:07,720
or a VLC type video player.

563
00:22:07,720 --> 00:22:11,000
I just don't really care if that's not open source,

564
00:22:11,000 --> 00:22:12,680
as long as the core system, as long

565
00:22:12,680 --> 00:22:14,280
as the fundamentals are free.

566
00:22:14,280 --> 00:22:16,120
But we even have it better than that, right?

567
00:22:16,120 --> 00:22:19,120
Because we do already have great open source implementations.

568
00:22:19,120 --> 00:22:21,240
This move's not really going to, is it going to,

569
00:22:21,240 --> 00:22:23,440
are they arguing that LibreOffice is going

570
00:22:23,440 --> 00:22:24,880
to be really hurt by this?

571
00:22:24,880 --> 00:22:25,600
I don't think so.

572
00:22:25,600 --> 00:22:27,760
I think the development's going to continue

573
00:22:27,760 --> 00:22:29,440
to be active and healthy over there.

574
00:22:29,440 --> 00:22:31,280
And it's still a great choice if you

575
00:22:31,280 --> 00:22:32,720
want to use an office suite.

576
00:22:32,720 --> 00:22:35,360
Phil, this has to be a tight line to walk,

577
00:22:35,360 --> 00:22:38,260
because you've got two sort of conflicting positions here.

578
00:22:38,260 --> 00:22:40,440
You've got folks that want to see you move

579
00:22:40,440 --> 00:22:41,400
the distribution forward.

580
00:22:41,400 --> 00:22:43,800
And you said something there that really caught my attention.

581
00:22:43,800 --> 00:22:45,120
It's a standout feature now, too.

582
00:22:45,120 --> 00:22:46,080
It's a differentiator.

583
00:22:46,080 --> 00:22:49,280
So it could be really good long term for Manjaro,

584
00:22:49,280 --> 00:22:51,080
just because it could get more recognition.

585
00:22:51,080 --> 00:22:52,640
It's going to be something that's

586
00:22:52,640 --> 00:22:56,000
standout different in every single review of Manjaro now.

587
00:22:56,000 --> 00:22:57,320
It's going to call that out.

588
00:22:57,320 --> 00:23:00,600
When people are talking about moving over to Linux,

589
00:23:00,600 --> 00:23:03,020
and they ask, well, what distribution supports my Office

590
00:23:03,020 --> 00:23:05,680
system that's the best, which is legitimately a workflow

591
00:23:05,680 --> 00:23:08,480
for people, Manjaro's name may get mentioned now

592
00:23:08,480 --> 00:23:09,840
at the top of that list.

593
00:23:09,840 --> 00:23:12,480
It could open the distribution up to new categories

594
00:23:12,480 --> 00:23:13,960
and types of users.

595
00:23:13,960 --> 00:23:16,300
So it clearly could be potentially good long term

596
00:23:16,300 --> 00:23:17,520
for the distribution.

597
00:23:17,520 --> 00:23:19,340
At the same time, you've got people

598
00:23:19,340 --> 00:23:21,760
that say don't bite the hand that feeds you.

599
00:23:21,760 --> 00:23:25,980
And it could upset long time members of your community.

600
00:23:25,980 --> 00:23:31,220
I'm curious how you handle that from a creator standpoint.

601
00:23:31,220 --> 00:23:32,960
How do you deal with that?

602
00:23:32,960 --> 00:23:35,280
How do you not get sort of demotivated

603
00:23:35,280 --> 00:23:37,160
when these kind of conflicts arise?

604
00:23:37,160 --> 00:23:39,400
Well, I'm highly motivated with everything.

605
00:23:39,400 --> 00:23:42,360
And the team is strong behind us.

606
00:23:42,360 --> 00:23:45,440
The decision was not made singly by me.

607
00:23:45,440 --> 00:23:48,560
It's also discussed with some of the team members, which

608
00:23:48,560 --> 00:23:52,160
were included in the discussions made with a soft maker.

609
00:23:52,160 --> 00:23:53,360
Can you expand on that a bit?

610
00:23:53,360 --> 00:23:56,480
How does that kind of process work inside the project?

611
00:23:56,480 --> 00:23:59,360
Well, we are currently on the leap

612
00:23:59,360 --> 00:24:01,280
that Manjaro is recognized.

613
00:24:01,280 --> 00:24:06,640
And that's why we will change the structure of Manjaro

614
00:24:06,640 --> 00:24:11,780
itself, because a lot of projects are hobby projects.

615
00:24:11,780 --> 00:24:14,360
Most of us work on the side.

616
00:24:14,360 --> 00:24:16,840
So everybody has a day-to-day job.

617
00:24:16,840 --> 00:24:19,320
And on top, when we come home, we

618
00:24:19,320 --> 00:24:21,160
have to work for Manjaro as well.

619
00:24:21,160 --> 00:24:26,960
So some of those aspects will change in a real manner

620
00:24:26,960 --> 00:24:28,040
real soon.

621
00:24:28,040 --> 00:24:30,000
And based on that, we have more time

622
00:24:30,000 --> 00:24:34,200
to discuss with companies like SoftMaker and others

623
00:24:34,200 --> 00:24:38,560
approaching to make Manjaro as a distribution

624
00:24:38,560 --> 00:24:39,960
secure for the future.

625
00:24:39,960 --> 00:24:41,900
I would love for you to come back and tell me

626
00:24:41,900 --> 00:24:43,520
more about that when you can.

627
00:24:43,520 --> 00:24:44,520
Sure, we'll do that.

628
00:24:44,520 --> 00:24:46,680
So it's no problem for that.

629
00:24:46,680 --> 00:24:51,000
The main reason we made the move with the SoftMaker in general

630
00:24:51,000 --> 00:24:54,080
or general with snaps we did in the past

631
00:24:54,080 --> 00:24:58,920
was canonical at the SnapCraft summit this year

632
00:24:58,920 --> 00:25:03,320
is that commercial products have the problem

633
00:25:03,320 --> 00:25:06,440
to implement their software on the Linux basis,

634
00:25:06,440 --> 00:25:09,760
because we are so differentiated and splittered up.

635
00:25:09,760 --> 00:25:12,320
And snaps, for example, is a baseline

636
00:25:12,320 --> 00:25:16,720
to make the publishers available to say, hey,

637
00:25:16,720 --> 00:25:18,960
this is the standard library.

638
00:25:18,960 --> 00:25:22,220
If you go on that, your product will work out.

639
00:25:22,220 --> 00:25:26,520
And snapd is not only for canonical and Ubuntu anymore.

640
00:25:26,520 --> 00:25:27,920
It will work on other distros.

641
00:25:27,920 --> 00:25:30,240
And we are humbled as Manjaro that we

642
00:25:30,240 --> 00:25:34,200
work with them to make all of those things happen.

643
00:25:34,200 --> 00:25:36,800
Sure, there's Flatpak and AppImages as well.

644
00:25:36,800 --> 00:25:39,320
But the industry needs a standard.

645
00:25:39,320 --> 00:25:42,200
And maybe this is one of the moves.

646
00:25:42,200 --> 00:25:44,560
As a project, do you see the most desktop opportunity

647
00:25:44,560 --> 00:25:46,040
with snaps?

648
00:25:46,040 --> 00:25:47,040
It depends.

649
00:25:47,040 --> 00:25:49,560
In our team and the discussion so far,

650
00:25:49,560 --> 00:25:53,960
snaps has a little bit more features than Flatpaks.

651
00:25:53,960 --> 00:25:57,040
Flatpaks are more from the Red Hat section.

652
00:25:57,040 --> 00:25:59,120
Snaps more from canonical.

653
00:25:59,120 --> 00:26:03,240
So we are currently somehow in the middle of it.

654
00:26:03,240 --> 00:26:06,520
And we have to see which side we go.

655
00:26:06,520 --> 00:26:09,920
It's like in the matrix, the blue or the red pill.

656
00:26:09,920 --> 00:26:11,600
Any pill might be there.

657
00:26:11,600 --> 00:26:14,100
Or we don't take a pill at all, because we don't like drugs.

658
00:26:14,100 --> 00:26:17,280
So it's always your choice.

659
00:26:17,280 --> 00:26:20,180
Yeah, I mean, there is a lot of great applications

660
00:26:20,180 --> 00:26:22,720
now shipping in both.

661
00:26:22,720 --> 00:26:25,720
It is like where we're at now with this whole thing Wimpy

662
00:26:25,720 --> 00:26:28,400
feels a bit like a whirlwind.

663
00:26:28,400 --> 00:26:30,560
And there's more and more opportunity out there.

664
00:26:30,560 --> 00:26:34,440
So Wimpy, I'm curious from your perspective,

665
00:26:34,440 --> 00:26:36,800
where you think snaps could fit in with Manjaro?

666
00:26:36,800 --> 00:26:39,520
Obviously, as Phil has just alluded to,

667
00:26:39,520 --> 00:26:42,560
he joined us at the SnapCraft Summit earlier this year.

668
00:26:42,560 --> 00:26:46,840
And personally, I spent a lot of time working with Phil.

669
00:26:46,840 --> 00:26:53,800
And probably my defense of Phil and Manjaro earlier

670
00:26:53,800 --> 00:26:58,160
betray my true feelings in that I feel I've made a friend

671
00:26:58,160 --> 00:27:04,240
for life having met Phil in Montreal earlier this year.

672
00:27:04,240 --> 00:27:08,340
And that's what happens when you get a bunch of free software

673
00:27:08,340 --> 00:27:11,400
developers in a room together working on stuff.

674
00:27:11,400 --> 00:27:16,080
You do establish relationships and friendships.

675
00:27:16,080 --> 00:27:21,000
And so I want to see Phil and Manjaro succeed.

676
00:27:21,000 --> 00:27:27,120
And I would like to think that what we can bring through snaps

677
00:27:27,120 --> 00:27:33,360
and the relationships we have with significant ISVs

678
00:27:33,360 --> 00:27:38,280
will benefit Manjaro and other Linux distributions as well,

679
00:27:38,280 --> 00:27:39,520
not just Ubuntu.

680
00:27:39,520 --> 00:27:43,880
Because I'm in a weird position at Canonical

681
00:27:43,880 --> 00:27:48,800
in that I work in probably one of only two departments

682
00:27:48,800 --> 00:27:52,200
where we don't actually care just about Ubuntu.

683
00:27:52,200 --> 00:27:56,760
We care about the Linux ecosystem at large.

684
00:27:56,760 --> 00:27:59,000
So I'm in an awkward place.

685
00:27:59,000 --> 00:28:00,720
I really want to see Phil succeed.

686
00:28:00,720 --> 00:28:02,520
I want to see Manjaro succeed.

687
00:28:02,520 --> 00:28:04,760
And I hope that snaps can bring something

688
00:28:04,760 --> 00:28:06,720
to that story for them.

689
00:28:06,720 --> 00:28:07,600
Yeah.

690
00:28:07,600 --> 00:28:10,560
I think that's really neat to see you guys working together.

691
00:28:10,560 --> 00:28:11,080
Yeah, it is.

692
00:28:11,080 --> 00:28:14,080
It is a great example of the groundwork laid by Canonical

693
00:28:14,080 --> 00:28:17,760
that could, in some scenarios, only be used to benefit them.

694
00:28:17,760 --> 00:28:20,640
But really, it does benefit all Linux users

695
00:28:20,640 --> 00:28:22,320
who want diverse platforms.

696
00:28:22,320 --> 00:28:24,680
Well, thank you for helping just clear it up

697
00:28:24,680 --> 00:28:26,160
and coming on the show and talking about it

698
00:28:26,160 --> 00:28:26,880
straight from the source.

699
00:28:26,880 --> 00:28:29,760
I think that helps when there's a lot of different conversations

700
00:28:29,760 --> 00:28:30,280
going on.

701
00:28:30,280 --> 00:28:32,400
I think it's good to get it directly from the project.

702
00:28:32,400 --> 00:28:33,840
As things develop in the future, Phil,

703
00:28:33,840 --> 00:28:35,840
you are welcome to come back on here and share

704
00:28:35,840 --> 00:28:38,720
how things go or other project news that comes up.

705
00:28:38,720 --> 00:28:41,560
We'd love to keep the hailing frequencies open,

706
00:28:41,560 --> 00:28:43,000
as Wes always says.

707
00:28:43,000 --> 00:28:44,120
Sure, why not?

708
00:28:44,120 --> 00:28:45,080
And you're welcome to stick around

709
00:28:45,080 --> 00:28:46,240
for the rest of the show too.

710
00:28:46,240 --> 00:28:49,760
We will also, by the way, have a link to information about Phil

711
00:28:49,760 --> 00:28:51,920
and as well as this release, which

712
00:28:51,920 --> 00:28:53,440
is available for testing right now.

713
00:28:53,440 --> 00:28:55,000
We'll have the link in the show notes

714
00:28:55,000 --> 00:28:57,080
over there, which you can check out.

715
00:28:57,080 --> 00:29:00,600
RockinXSCE4.14pre3.

716
00:29:00,600 --> 00:29:03,040
Ooh, don't tell Joe.

717
00:29:03,040 --> 00:29:05,120
Don't tell Joe, he might have to go check it out.

718
00:29:05,120 --> 00:29:06,480
Well, thank you, Phil, very much.

719
00:29:06,480 --> 00:29:07,600
That was very insightful.

720
00:29:07,600 --> 00:29:10,600
And I think I'm very hopeful that it works out,

721
00:29:10,600 --> 00:29:12,160
because it's a nice differentiator.

722
00:29:12,160 --> 00:29:14,560
I like to see people changing it up a little bit.

723
00:29:14,560 --> 00:29:18,040
And it's neat to see differentiating in a way that's

724
00:29:18,040 --> 00:29:19,880
kind of new, kind of new.

725
00:29:19,880 --> 00:29:24,560
I will say too that as a Manjaro user personally, Phil,

726
00:29:24,560 --> 00:29:25,480
thanks for coming on.

727
00:29:25,480 --> 00:29:28,400
First of all, thanks for starting the project.

728
00:29:28,400 --> 00:29:31,160
And personally, I don't care what

729
00:29:31,160 --> 00:29:33,720
Office software is on my machine,

730
00:29:33,720 --> 00:29:36,120
as long as it gets the job done.

731
00:29:36,120 --> 00:29:38,000
After this news, I gave it a download.

732
00:29:38,000 --> 00:29:38,760
And I like it.

733
00:29:38,760 --> 00:29:39,960
It's quicker than LibreOffice.

734
00:29:39,960 --> 00:29:41,160
It feels lighter.

735
00:29:41,160 --> 00:29:42,680
And it does, you know, it has a ribbon.

736
00:29:42,680 --> 00:29:43,680
It looks a lot like Office.

737
00:29:43,680 --> 00:29:44,800
It looks good, yeah.

738
00:29:44,800 --> 00:29:45,840
And so then we did a little digging

739
00:29:45,840 --> 00:29:47,080
into their revenue model.

740
00:29:47,080 --> 00:29:48,560
It seems pretty safe.

741
00:29:48,560 --> 00:29:50,520
It's not like creepy or anything.

742
00:29:50,520 --> 00:29:52,360
They sell SoftMaker Office directly

743
00:29:52,360 --> 00:29:54,360
if you want to buy the commercial version, which

744
00:29:54,360 --> 00:29:55,840
adds a few features.

745
00:29:55,840 --> 00:29:59,280
And they also have a special like fonts division

746
00:29:59,280 --> 00:30:03,360
that does a special typeface stuff that makes money.

747
00:30:03,360 --> 00:30:04,980
And then they use the free Office

748
00:30:04,980 --> 00:30:06,680
to help people find out about the product

749
00:30:06,680 --> 00:30:08,480
and whatnot in a very competitive space.

750
00:30:08,480 --> 00:30:10,160
It actually makes a lot of sense.

751
00:30:10,160 --> 00:30:12,960
So I think I'm going to leave it installed.

752
00:30:12,960 --> 00:30:16,880
And if I have to use a doc or docx or something, well,

753
00:30:16,880 --> 00:30:18,680
I'll use this instead of Google Docs now.

754
00:30:18,680 --> 00:30:20,120
You know, the funny part about all of this

755
00:30:20,120 --> 00:30:22,120
is I almost never have an Office suite installed

756
00:30:22,120 --> 00:30:23,120
on my machine anyway.

757
00:30:23,120 --> 00:30:26,440
No, I mean, I would legitimately just use Google Docs.

758
00:30:26,440 --> 00:30:27,240
And now I won't.

759
00:30:27,240 --> 00:30:29,160
So in a way, it's sort of, I think,

760
00:30:29,160 --> 00:30:31,080
it's at least an upgrade in privacy.

761
00:30:31,080 --> 00:30:32,480
You're back on desktop Linux.

762
00:30:32,480 --> 00:30:32,980
Ha ha.

763
00:30:32,980 --> 00:30:47,400
So just a couple of items of note, as it were, in the housekeeping this week, I want to get the word out there for UbiCon Europe, which is going to be in Portugal in 71 days as we record.

764
00:30:47,400 --> 00:30:49,240
Yeah, the October.

765
00:30:49,240 --> 00:30:50,040
The October was.

766
00:30:50,040 --> 00:30:50,960
Sounds like fun.

767
00:30:50,960 --> 00:30:54,120
10th through the 13th, 2019.

768
00:30:54,120 --> 00:30:58,040
We'll have a link in the show notes if you want to go to UbiCon Europe.

769
00:30:58,040 --> 00:30:59,480
I don't suppose you're going, Wimpy.

770
00:30:59,480 --> 00:31:01,200
UbiCon Europe, absolutely.

771
00:31:01,200 --> 00:31:02,120
No.

772
00:31:02,120 --> 00:31:03,040
No.

773
00:31:03,040 --> 00:31:04,800
I've got two talks accepted.

774
00:31:04,800 --> 00:31:07,000
Yeah, I'm fully signed up.

775
00:31:07,000 --> 00:31:07,680
Shocker.

776
00:31:07,680 --> 00:31:08,340
Shocker that.

777
00:31:08,340 --> 00:31:08,840
Shocker.

778
00:31:08,840 --> 00:31:11,680
Well, I haven't missed a UbiCon for four years.

779
00:31:11,680 --> 00:31:12,320
Amazing.

780
00:31:12,320 --> 00:31:13,680
Well, go say hi to Wimpy.

781
00:31:13,680 --> 00:31:14,480
Go say hi to Wimpy.

782
00:31:14,480 --> 00:31:17,920
We'll have a link in the show notes if you want to check it out.

783
00:31:17,920 --> 00:31:20,720
Because you've got some time to book your trip, as it were.

784
00:31:20,720 --> 00:31:30,620
Now, what you don't have time for, as you've got to just go right now as you're listening to this, if you've got it on the day of, we, very, very soon, July 31, 11 AM Pacific,

785
00:31:30,620 --> 00:31:34,120
are launching the next generation of free study groups.

786
00:31:34,120 --> 00:31:38,240
This one is the AWS Cloud Practitioner Exam Study Group.

787
00:31:38,240 --> 00:31:39,080
It's a multi-part.

788
00:31:39,080 --> 00:31:41,480
By the time you're done, you can go take the test.

789
00:31:41,480 --> 00:31:42,360
Wow.

790
00:31:42,360 --> 00:31:43,240
For free.

791
00:31:43,240 --> 00:31:44,000
Amazing.

792
00:31:44,000 --> 00:31:47,760
Yeah, meetup.com slash Jupiter Broadcasting for deets on that.

793
00:31:47,760 --> 00:31:53,440
And if you want some stickers and you're going to be at DEFCON, there is a sticker swap going on.

794
00:31:53,440 --> 00:31:58,240
And rumor has it Elle will be at DEFCON with stickers.

795
00:31:58,240 --> 00:31:59,540
Have you heard this rumor?

796
00:31:59,540 --> 00:32:02,760
So not only do you get to hang out with Elle, you also get some swag.

797
00:32:02,760 --> 00:32:04,520
Some stickers.

798
00:32:04,520 --> 00:32:10,160
And there's a good chance, there's a good chance, addendum to this rumor, it'll be show stickers.

799
00:32:10,160 --> 00:32:10,760
I love those.

800
00:32:10,760 --> 00:32:11,880
Yeah, those are pretty good, too.

801
00:32:11,880 --> 00:32:12,320
Check that out.

802
00:32:12,320 --> 00:32:14,560
We'll have information about that sticker swap.

803
00:32:14,560 --> 00:32:17,360
In the show notes, if you're going to DEFCON, you're like, what'd they just say?

804
00:32:17,360 --> 00:32:18,360
What about DEFCON?

805
00:32:18,360 --> 00:32:19,280
We've got the link in the show notes.

806
00:32:19,280 --> 00:32:24,840
I happen to know that the Linux Unplugged sticker fits very nicely on the back of a Pixel 3.

807
00:32:24,840 --> 00:32:26,680
So just pro tip there, pro tip.

808
00:32:26,680 --> 00:32:32,160
You know what we've been finding out is people love the User Air sticker because it has a double meaning.

809
00:32:32,160 --> 00:32:35,720
I mean, it's the podcast, but also it's kind of a funny, kind of a funny saying.

810
00:32:35,720 --> 00:32:38,520
It's a great looking sticker because of Mr. Bacon.

811
00:32:38,520 --> 00:32:40,680
So go get one of those bacon made stickers.

812
00:32:40,680 --> 00:32:45,000
Yeah, we've got some new ones coming out too that we will definitely have for the fest

813
00:32:45,000 --> 00:32:46,880
coming up next year.

814
00:32:46,880 --> 00:32:50,000
And some pretty cool stuff on the way, actually.

815
00:32:50,000 --> 00:32:54,400
And we should mention, if you are in our Telegram channel, or if you're on Telegram, Cheese

816
00:32:54,400 --> 00:32:57,440
has been making some unofficial, well, they're official, but they're like not real stickers

817
00:32:57,440 --> 00:32:58,440
or Telegram stickers.

818
00:32:58,440 --> 00:32:59,480
They could be real stickers.

819
00:32:59,480 --> 00:33:01,120
They may be real stickers in the future.

820
00:33:01,120 --> 00:33:02,120
They're almost more fun somehow.

821
00:33:02,120 --> 00:33:05,060
But they're Telegram stickers and they're awesome.

822
00:33:05,060 --> 00:33:06,840
And there's some really great ones.

823
00:33:06,840 --> 00:33:08,240
So go get that sticker pack too.

824
00:33:08,240 --> 00:33:11,880
Cheese is a, he's just like low key updating it every now and then too.

825
00:33:11,880 --> 00:33:14,120
Like he just like all of a sudden will notice like a new one will pop in there.

826
00:33:14,120 --> 00:33:16,080
You're like, where did this come from?

827
00:33:16,080 --> 00:33:18,620
Suddenly you can communicate all that much better.

828
00:33:18,620 --> 00:33:21,640
Is there like a URL we can, how the hell do people get that?

829
00:33:21,640 --> 00:33:25,520
There it is, a sticker URL that I will drop into the show notes for everybody to grab

830
00:33:25,520 --> 00:33:26,520
them.

831
00:33:26,520 --> 00:33:27,520
Yeah.

832
00:33:27,520 --> 00:33:28,520
Boom.

833
00:33:28,520 --> 00:33:29,520
There we go.

834
00:33:29,520 --> 00:33:30,520
Solves that problem.

835
00:33:30,520 --> 00:33:31,520
Thank you, sir.

836
00:33:31,520 --> 00:33:32,520
Appreciate that.

837
00:33:32,520 --> 00:33:33,520
All right.

838
00:33:33,520 --> 00:33:34,520
Well that, my friends, that is the housekeeping.

839
00:33:34,520 --> 00:33:37,740
And now we're going to talk about something that's ripped right out of the headlines,

840
00:33:37,740 --> 00:33:39,720
as they say, Mr. Wes.

841
00:33:39,720 --> 00:33:45,460
Our very own Drew has been cramming for this segment now for a couple of weeks.

842
00:33:45,460 --> 00:33:50,400
You may have seen the news that Fedora has announced Fedor Core OS, which is the merger

843
00:33:50,400 --> 00:33:52,060
of- What does that even mean?

844
00:33:52,060 --> 00:33:53,640
It's kind of a confusing name.

845
00:33:53,640 --> 00:33:54,640
I love it actually.

846
00:33:54,640 --> 00:33:59,800
I love it just because it brings back Fedora Core, which I'm a nerd.

847
00:33:59,800 --> 00:34:05,280
So it's a new edition built specifically for running containerized workloads at scale.

848
00:34:05,280 --> 00:34:06,900
That is right.

849
00:34:06,900 --> 00:34:12,520
And not to be confused with Silverblue, this is not a desktop operating system.

850
00:34:12,520 --> 00:34:13,520
Not at all.

851
00:34:13,520 --> 00:34:14,840
And it's not meant to be.

852
00:34:14,840 --> 00:34:20,380
Red Hat bought Core OS back in early 2018, and we've all been kind of waiting around

853
00:34:20,380 --> 00:34:26,840
to see what that merger is going to look like as they've been deprecating Project Atomic.

854
00:34:26,840 --> 00:34:28,800
And they're getting close.

855
00:34:28,800 --> 00:34:30,040
It's now in a preview.

856
00:34:30,040 --> 00:34:31,040
It's a functional preview.

857
00:34:31,040 --> 00:34:33,280
You can download it and run it.

858
00:34:33,280 --> 00:34:36,660
And essentially it's exactly what we thought it was going to be.

859
00:34:36,660 --> 00:34:45,040
It is Core OS, which used to be Container OS, but Fedorified with RPM OS tree on the

860
00:34:45,040 --> 00:34:55,580
base and immutable file system, automatic updating, integration with etcd, which isn't

861
00:34:55,580 --> 00:34:56,680
shipped by default.

862
00:34:56,680 --> 00:34:58,320
You have to run it in a container.

863
00:34:58,320 --> 00:35:04,880
But it's built for orchestration platforms, just like Container OS and Core OS after it

864
00:35:04,880 --> 00:35:05,880
were.

865
00:35:05,880 --> 00:35:09,600
So Alex, I want to bring you in just for a moment to help us appreciate where this sort

866
00:35:09,600 --> 00:35:11,560
of fits in in the product line.

867
00:35:11,560 --> 00:35:15,680
Alex's day job is working with OpenShift at Red Hat, so you probably have some good insights

868
00:35:15,680 --> 00:35:19,360
in where we can kind of fit this into the product line.

869
00:35:19,360 --> 00:35:22,360
The operating system matters less than ever.

870
00:35:22,360 --> 00:35:27,480
So with the world of containers, you're treating your infrastructure as cattle rather than

871
00:35:27,480 --> 00:35:28,480
pets.

872
00:35:28,480 --> 00:35:34,100
And if you're not familiar with that phrase, it's to do with immutable infrastructure.

873
00:35:34,100 --> 00:35:39,600
And essentially what that means is everything in your infrastructure environment is treated

874
00:35:39,600 --> 00:35:45,800
as it can just be destroyed at any moment's notice, like a cow, I guess.

875
00:35:45,800 --> 00:35:49,880
It's a bit, when you say it out loud, it sucks a bit, but rather than falling in love with

876
00:35:49,880 --> 00:35:54,040
your server and creating a special little snowflake like you would a pet, you treat

877
00:35:54,040 --> 00:35:57,600
it like a cattle and get rid of it.

878
00:35:57,600 --> 00:36:05,440
So that ethos translates through to the whole ethos behind CoreOS and Project Atomic, which

879
00:36:05,440 --> 00:36:10,700
is what this kind of new version of Fedora is born out of.

880
00:36:10,700 --> 00:36:18,840
So it fits in very, very closely with OpenShift, which is Red Hat's enterprise distro of Kubernetes.

881
00:36:18,840 --> 00:36:27,700
And that allows administrators of Kubernetes clusters, OpenShift in this case, to have

882
00:36:27,700 --> 00:36:34,400
to basically have a turnkey version of Linux that they can just deploy and not really have

883
00:36:34,400 --> 00:36:35,400
to worry.

884
00:36:35,400 --> 00:36:38,240
So it has a lot of automation in it.

885
00:36:38,240 --> 00:36:43,400
And essentially it's just taking the best bits of CoreOS and the best bits of Project

886
00:36:43,400 --> 00:36:49,960
Atomic, slamming them together and spitting out a container-friendly distro.

887
00:36:49,960 --> 00:36:54,120
Now Drew, when you looked at this, was it more Fedora than you expected?

888
00:36:54,120 --> 00:36:57,400
Because it sounds like a big part of this has been moving a lot of those tools over.

889
00:36:57,400 --> 00:36:59,680
So I'm kind of curious about the practicals.

890
00:36:59,680 --> 00:37:07,240
Honestly, no, I don't really feel, it doesn't feel like a Fedora project to me, but part

891
00:37:07,240 --> 00:37:14,480
of it is because I had used CoreOS back when I was working in an MSP and it really feels

892
00:37:14,480 --> 00:37:23,960
more like an extension of that ethos and just kind of Fedora-ified in that it is using familiar

893
00:37:23,960 --> 00:37:28,760
tools right down to things like Podman and Builda.

894
00:37:28,760 --> 00:37:38,240
So the thing that I really want to expand upon is Alex's servers as cattle metaphor

895
00:37:38,240 --> 00:37:39,240
here.

896
00:37:39,240 --> 00:37:44,800
So one important thing to note is once you get one of these up and running, there is

897
00:37:44,800 --> 00:37:51,240
not really any reason to log into a server and make changes.

898
00:37:51,240 --> 00:37:58,680
Instead of doing that, the intention is for you to spin up a replacement server and then

899
00:37:58,680 --> 00:38:02,800
kill the old server that no longer has that change.

900
00:38:02,800 --> 00:38:09,360
So it's very rare, I think, and it's going to be very rare for people to use this on

901
00:38:09,360 --> 00:38:11,000
any kind of bare metal.

902
00:38:11,000 --> 00:38:19,600
It really is targeting virtual infrastructures like KVM or AWS or anything like that.

903
00:38:19,600 --> 00:38:25,360
It even distributed across multiple virtualization hosts.

904
00:38:25,360 --> 00:38:30,320
Because of the way it's built, you can use many of these spread out across the internet

905
00:38:30,320 --> 00:38:37,200
and orchestrate them all together so that you have nodes in multiple data centers and

906
00:38:37,200 --> 00:38:44,880
if any one service goes down, you can automatically fail over to a completely different data center.

907
00:38:44,880 --> 00:38:52,120
It's worth mentioning that one of the core advantages, if you will, is that it's self-updating,

908
00:38:52,120 --> 00:38:57,720
self-maintaining in a sense, because the applications are all isolated in the containers, and it

909
00:38:57,720 --> 00:39:01,480
uses etcd as a key value store that's shared across the cluster.

910
00:39:01,480 --> 00:39:05,220
I mean, it makes it makes Beowulf clusters look adorable, it really does.

911
00:39:05,220 --> 00:39:08,920
And so it's like just at a whole new level.

912
00:39:08,920 --> 00:39:09,920
All right.

913
00:39:09,920 --> 00:39:13,320
Well, I'm interested, Drew, you mentioned getting it set up.

914
00:39:13,320 --> 00:39:15,960
I saw I had to use something called Ignition.

915
00:39:15,960 --> 00:39:19,000
How do I go about actually using Fedora Core OS?

916
00:39:19,000 --> 00:39:20,000
Right.

917
00:39:20,000 --> 00:39:25,800
So when you go to do an installation, like I'm going to use the QEMU example here, they've

918
00:39:25,800 --> 00:39:28,640
got a pre-built QEMU image.

919
00:39:28,640 --> 00:39:35,240
And what you can do is you can point your QEMU launch command at this Ignition file,

920
00:39:35,240 --> 00:39:42,320
which is not handwritten, you've got to write it out in, I think it's YAML.

921
00:39:42,320 --> 00:39:47,880
And then after you've written that, you use something called the Fedora Core OS Config

922
00:39:47,880 --> 00:39:54,440
Transpiler, or FCCT to generate that Ignition file.

923
00:39:54,440 --> 00:39:58,580
So the Ignition file is not meant to be handwritten at all.

924
00:39:58,580 --> 00:40:02,140
It's really more machine readable.

925
00:40:02,140 --> 00:40:07,740
And you can honestly just write it with very human readable text, which then just gets

926
00:40:07,740 --> 00:40:09,280
kind of converted over.

927
00:40:09,280 --> 00:40:17,920
So once you spin it up, the QEMU image is going to pull your config from that file and

928
00:40:17,920 --> 00:40:19,940
automatically set itself up.

929
00:40:19,940 --> 00:40:26,640
And that includes things like user creation, SSH key installation for that user, and system

930
00:40:26,640 --> 00:40:28,200
D units.

931
00:40:28,200 --> 00:40:33,400
And the whole thing is kind of developed around using system D units to build things.

932
00:40:33,400 --> 00:40:36,440
So say you want it to be a Docker host, right?

933
00:40:36,440 --> 00:40:43,140
Well, you can create a system D unit in that configuration file that calls Podman, or Docker

934
00:40:43,140 --> 00:40:49,200
if you want to use Docker, to pull down the image, build it, run it, the whole nine yards.

935
00:40:49,200 --> 00:40:52,260
So just actually, can I touch on something there?

936
00:40:52,260 --> 00:40:56,320
Is this, we've been using containers as a term, but are they actually Docker containers

937
00:40:56,320 --> 00:40:58,840
or is this a Podman based system?

938
00:40:58,840 --> 00:41:00,380
Podman is Red Hat's thing, right?

939
00:41:00,380 --> 00:41:01,700
They're competitor to Docker?

940
00:41:01,700 --> 00:41:07,720
I'm not sure I would say competitor, because Red Hat and Docker are both in the Open Container

941
00:41:07,720 --> 00:41:10,240
Initiative, the OCI.

942
00:41:10,240 --> 00:41:17,240
And what that is doing is trying to make a cross compatible version of containers so

943
00:41:17,240 --> 00:41:22,840
that you could use Docker or Podman to accomplish the same goals.

944
00:41:22,840 --> 00:41:23,960
Ah, okay.

945
00:41:23,960 --> 00:41:27,840
But they're using, in this case, they're using Podman, which would essentially be the tools

946
00:41:27,840 --> 00:41:31,120
behind standing up the containers and managing the containers?

947
00:41:31,120 --> 00:41:35,920
Well, both Docker and Podman are included in the base image for Fedora Core OS.

948
00:41:35,920 --> 00:41:38,320
Now Docker is not the preferred one.

949
00:41:38,320 --> 00:41:45,400
They want you to use Podman because Podman is not running a daemon as root the whole

950
00:41:45,400 --> 00:41:46,400
time.

951
00:41:46,400 --> 00:41:49,140
The entire system can be run with only user permissions.

952
00:41:49,140 --> 00:41:52,800
That's kind of the whole reason behind them creating Podman.

953
00:41:52,800 --> 00:41:56,320
So I don't know if you are familiar, when you're running cockpit, I think you have to

954
00:41:56,320 --> 00:41:58,360
mount the Docker socket.

955
00:41:58,360 --> 00:42:02,320
And that is considered a bit of a security no-no.

956
00:42:02,320 --> 00:42:06,560
Because Podman is daemonless, you don't have to mount anything as root in order to see

957
00:42:06,560 --> 00:42:07,560
what's going on.

958
00:42:07,560 --> 00:42:09,120
So it's a user space thing.

959
00:42:09,120 --> 00:42:10,320
That's the difference.

960
00:42:10,320 --> 00:42:11,540
I see.

961
00:42:11,540 --> 00:42:12,720
Thank you.

962
00:42:12,720 --> 00:42:19,280
And the other thing is Podman was designed with Kubernetes integration in mind, whereas

963
00:42:19,280 --> 00:42:25,740
Docker kind of predates the whole Kubernetes fanfare by a little bit.

964
00:42:25,740 --> 00:42:31,040
And its Kubernetes integration is more of an afterthought than built from the ground

965
00:42:31,040 --> 00:42:32,040
up.

966
00:42:32,040 --> 00:42:33,600
Would you agree with that, Alex?

967
00:42:33,600 --> 00:42:34,600
Yeah, absolutely.

968
00:42:34,600 --> 00:42:39,760
I don't want to poo-poo any of the work that Docker did in the early days, because they

969
00:42:39,760 --> 00:42:42,320
closed that last 10% for containers.

970
00:42:42,320 --> 00:42:47,880
I mean, you look at what the FreeBSD guys had for ages with jails, and we started talking

971
00:42:47,880 --> 00:42:50,480
about containers years after they had them.

972
00:42:50,480 --> 00:42:54,640
And they were smugly sat over there going, you know, we've had this for years, guys.

973
00:42:54,640 --> 00:43:02,920
But Docker closed that gap, and now the industry as a whole has really woken up to the engineering

974
00:43:02,920 --> 00:43:08,960
challenges around containers, and Podman and Builder and Scopio are the end result.

975
00:43:08,960 --> 00:43:14,460
And there's a link in the show doc which talks about there's a growing movement of moving

976
00:43:14,460 --> 00:43:19,640
away from this monolithic daemon, which is Docker, which is all the plumbing and everything

977
00:43:19,640 --> 00:43:26,160
required to run a container, a Docker container, as we always call them, when actually they

978
00:43:26,160 --> 00:43:31,120
are just Linux containers, they're not really Docker containers.

979
00:43:31,120 --> 00:43:37,240
And now we're moving into a world where you have Podman, which is Pod manager, designed

980
00:43:37,240 --> 00:43:38,720
to execute containers.

981
00:43:38,720 --> 00:43:47,020
You have Builder, Build-A-H is how it's spelt, and that's designed to just build containers.

982
00:43:47,020 --> 00:43:51,140
And then you have Scopio, which is designed to do things like tagging and moving images

983
00:43:51,140 --> 00:43:53,120
around all over the place and stuff like that.

984
00:43:53,120 --> 00:43:59,200
So it separates out the various concerns into separately maintainable tools, which has a

985
00:43:59,200 --> 00:44:04,400
huge benefit, if you think about it, of not needing to ship the entire thing when you

986
00:44:04,400 --> 00:44:07,040
only want to update your build tool.

987
00:44:07,040 --> 00:44:08,040
Right?

988
00:44:08,040 --> 00:44:11,480
Or the reverse, if you don't need to build images on your production boxes, you don't

989
00:44:11,480 --> 00:44:12,480
need that there either.

990
00:44:12,480 --> 00:44:13,480
Oh, yeah.

991
00:44:13,480 --> 00:44:14,480
Yeah, that's a great point.

992
00:44:14,480 --> 00:44:15,480
I hadn't thought of that.

993
00:44:15,480 --> 00:44:19,960
I think that's true, because one thing I have in the back of my mind is I think I have made

994
00:44:19,960 --> 00:44:24,320
the mistake of kind of comparing this directly with Ubuntu Core, and they're sort of solving

995
00:44:24,320 --> 00:44:25,600
different problems.

996
00:44:25,600 --> 00:44:27,000
They're entirely different.

997
00:44:27,000 --> 00:44:28,080
They are.

998
00:44:28,080 --> 00:44:36,000
And essentially, the way I look at Ubuntu Core is more of an Internet of Things type

999
00:44:36,000 --> 00:44:43,880
workload than necessarily server host nodes, which is what I think of for Core OS.

1000
00:44:43,880 --> 00:44:44,880
You'd agree with that, Wimpy?

1001
00:44:44,880 --> 00:44:51,320
Yeah, Ubuntu Core is designed for IoT devices, and Ubuntu via cloud init is designed for

1002
00:44:51,320 --> 00:44:53,760
containers and has been for many years.

1003
00:44:53,760 --> 00:44:58,400
So to quickly summarize it, the key difference is that Ubuntu Core is targeted more at endpoint

1004
00:44:58,400 --> 00:45:03,260
devices, and Fedora Core OS is targeted more at server devices.

1005
00:45:03,260 --> 00:45:05,840
That's essentially the gist of it.

1006
00:45:05,840 --> 00:45:09,600
Now, you can run Fedora Core OS on a local device.

1007
00:45:09,600 --> 00:45:11,480
You can install it on bare metal.

1008
00:45:11,480 --> 00:45:14,200
There's just not much reason to.

1009
00:45:14,200 --> 00:45:17,120
It's really meant more for virtualization.

1010
00:45:17,120 --> 00:45:22,540
But when I spun up Ubuntu Core, the first thing that you notice is that you're not going

1011
00:45:22,540 --> 00:45:25,060
to use apt at all.

1012
00:45:25,060 --> 00:45:32,000
It's primarily for Snap D, and one of the big use cases that I think is growing is for

1013
00:45:32,000 --> 00:45:33,000
kiosks.

1014
00:45:33,000 --> 00:45:34,560
That's certainly one of the use cases.

1015
00:45:34,560 --> 00:45:37,880
I mean, there is no apt in Ubuntu Core.

1016
00:45:37,880 --> 00:45:43,800
It's an entirely new Ubuntu for a new use case.

1017
00:45:43,800 --> 00:45:46,880
So everything in Ubuntu Core is a snap.

1018
00:45:46,880 --> 00:45:48,680
The kernel is a snap.

1019
00:45:48,680 --> 00:45:50,920
The base operating system is a snap.

1020
00:45:50,920 --> 00:45:56,760
And the applications that you deploy on it are snaps, and they have to be strictly confined.

1021
00:45:56,760 --> 00:45:59,500
So that's the only way you can go.

1022
00:45:59,500 --> 00:46:04,440
And yes, there are a number of digital signage organizations using Ubuntu Core to deploy

1023
00:46:04,440 --> 00:46:05,440
their products.

1024
00:46:05,440 --> 00:46:06,440
Cool.

1025
00:46:06,440 --> 00:46:10,760
That sign may be running Linux, and we just don't even know it.

1026
00:46:10,760 --> 00:46:15,680
I think the thing where there is some confusion is there is, unless I'm wrong, a common thread

1027
00:46:15,680 --> 00:46:23,760
between Silverblue, Fedora Core OS, and Ubuntu Core, and that is the updates are done in

1028
00:46:23,760 --> 00:46:26,560
a way where you can roll back.

1029
00:46:26,560 --> 00:46:28,040
It's sort of self-updating.

1030
00:46:28,040 --> 00:46:30,840
Those are sort of the common elements between all of those, right?

1031
00:46:30,840 --> 00:46:31,840
Right.

1032
00:46:31,840 --> 00:46:36,640
What you're really looking at is the idea of an immutable file system, which is really

1033
00:46:36,640 --> 00:46:44,360
becoming an important aspect for security and stability across a lot of different distributions

1034
00:46:44,360 --> 00:46:45,960
these days.

1035
00:46:45,960 --> 00:46:52,960
And essentially, what you're looking at is the base file system does not change during

1036
00:46:52,960 --> 00:46:54,040
user operation.

1037
00:46:54,040 --> 00:46:59,800
The only way to change it is during a reboot by booting into a new image.

1038
00:46:59,800 --> 00:47:07,360
And I was not finding strict documentation on how Ubuntu handled this for Ubuntu Core.

1039
00:47:07,360 --> 00:47:14,880
So I'm curious, Wimpy, if you had any insight into how it does its image generation for

1040
00:47:14,880 --> 00:47:16,240
updates.

1041
00:47:16,240 --> 00:47:18,320
For updates of the OS?

1042
00:47:18,320 --> 00:47:19,320
Yes.

1043
00:47:19,320 --> 00:47:20,320
Okay.

1044
00:47:20,320 --> 00:47:29,080
So updates of Ubuntu Core behave exactly like Ubuntu updates for the cloud images, which

1045
00:47:29,080 --> 00:47:36,560
is every time we provide an update that patches a security vulnerability, we automatically

1046
00:47:36,560 --> 00:47:39,000
spin a new image.

1047
00:47:39,000 --> 00:47:43,560
So if you are downloading that image on that day, you get the current version.

1048
00:47:43,560 --> 00:47:45,920
And those images are then pushed down.

1049
00:47:45,920 --> 00:47:50,360
So in the case of cloud init, they're available via apt updates.

1050
00:47:50,360 --> 00:47:54,760
And in the case of Ubuntu Core, they're just atomic updates that just happen.

1051
00:47:54,760 --> 00:47:55,760
Right.

1052
00:47:55,760 --> 00:47:56,760
Okay.

1053
00:47:56,760 --> 00:47:57,760
That makes a lot of sense.

1054
00:47:57,760 --> 00:47:58,760
Future.

1055
00:47:58,760 --> 00:47:59,760
Yeah.

1056
00:47:59,760 --> 00:48:00,760
Right now, Wes, you feel it?

1057
00:48:00,760 --> 00:48:01,760
Oh, yeah.

1058
00:48:01,760 --> 00:48:02,760
That's kind of great.

1059
00:48:02,760 --> 00:48:11,280
What's interesting is we're all arriving at the same solutions, the same style of solutions

1060
00:48:11,280 --> 00:48:14,200
to meet the demands of our customers.

1061
00:48:14,200 --> 00:48:21,640
So while we're all pursuing a slightly different tech here, this is what modern Linux looks

1062
00:48:21,640 --> 00:48:23,200
like now.

1063
00:48:23,200 --> 00:48:26,400
It's not just Canonical and Red Hat doing this.

1064
00:48:26,400 --> 00:48:33,280
This is what enterprise and industry demands of commercial Linux these days.

1065
00:48:33,280 --> 00:48:34,280
Yeah.

1066
00:48:34,280 --> 00:48:39,960
And that's why also Manjaro is there and looks which technology is the best to do that.

1067
00:48:39,960 --> 00:48:45,240
And strict confinement is also good because most people say, hey, in snaps, there can

1068
00:48:45,240 --> 00:48:46,580
be malware.

1069
00:48:46,580 --> 00:48:48,880
But if you're in strict confinement, it's confined.

1070
00:48:48,880 --> 00:48:54,200
So it's only the application which might be affected, but not the whole system.

1071
00:48:54,200 --> 00:48:55,200
Right.

1072
00:48:55,200 --> 00:48:56,200
Absolutely.

1073
00:48:56,200 --> 00:48:59,120
So modern desktop has to have something in place for that, especially if we really do

1074
00:48:59,120 --> 00:49:04,360
want to have the regular quote unquote users join us over here.

1075
00:49:04,360 --> 00:49:05,660
We've got to keep them protected.

1076
00:49:05,660 --> 00:49:10,940
And how magical is it, Chris, when you take down a server and you have your state stored

1077
00:49:10,940 --> 00:49:15,800
somewhere else, bring your server back up somewhere else and just point it at the state,

1078
00:49:15,800 --> 00:49:19,720
the volumes on a different storage somewhere and it just works.

1079
00:49:19,720 --> 00:49:24,040
The application runtime is separated from the application state.

1080
00:49:24,040 --> 00:49:26,640
It's just magical when you do that and it's as you left it.

1081
00:49:26,640 --> 00:49:27,640
It really is.

1082
00:49:27,640 --> 00:49:30,720
And it's neat to see things scaled down and we're finally getting them scaled down to

1083
00:49:30,720 --> 00:49:31,720
work nicely.

1084
00:49:31,720 --> 00:49:32,720
Right.

1085
00:49:32,720 --> 00:49:36,440
So you can use them to just run little infrastructure at home, still solving basically the same

1086
00:49:36,440 --> 00:49:38,640
fundamental problems that are needed when you are Facebook.

1087
00:49:38,640 --> 00:49:42,440
I mean, essentially what we've set up here at the studio is a little small business server

1088
00:49:42,440 --> 00:49:46,520
for a small team to work out of an office, which is a studio.

1089
00:49:46,520 --> 00:49:50,760
And so we have certain data transfer and storage requirements that might be out of the ordinary

1090
00:49:50,760 --> 00:49:52,540
than a small business.

1091
00:49:52,540 --> 00:49:54,620
But what you're saying there is so true.

1092
00:49:54,620 --> 00:49:59,640
This enterprise scale technology that lets you deploy systems all around the globe on

1093
00:49:59,640 --> 00:50:04,280
across multiple different clouds is also now approachable by somebody like me.

1094
00:50:04,280 --> 00:50:06,040
And Alex, you asked how does it feel?

1095
00:50:06,040 --> 00:50:11,440
I can't really equate it because you have to have been there, but I imagine it must

1096
00:50:11,440 --> 00:50:17,920
feel like somebody who was a professional chef for their career and they retired and

1097
00:50:17,920 --> 00:50:22,680
a few years, like five, 10 years after they retired, the microwave was invented.

1098
00:50:22,680 --> 00:50:23,680
Right.

1099
00:50:23,680 --> 00:50:28,640
And then you watch how fast people can like warm stuff and it just blows your mind.

1100
00:50:28,640 --> 00:50:30,480
That's containers to me on Linux.

1101
00:50:30,480 --> 00:50:31,480
Yeah.

1102
00:50:31,480 --> 00:50:34,080
You, I mean, when you got out of things, I was only just sort of starting, right?

1103
00:50:34,080 --> 00:50:36,120
I mean, you were in the height of the VM world.

1104
00:50:36,120 --> 00:50:37,120
Yes.

1105
00:50:37,120 --> 00:50:38,120
Oh, big time.

1106
00:50:38,120 --> 00:50:43,680
Yesterday we destroyed all of the containers on the server here for a couple of minutes

1107
00:50:43,680 --> 00:50:47,600
and then within minutes have them all back up and running, reattached to their config

1108
00:50:47,600 --> 00:50:48,600
and good to go.

1109
00:50:48,600 --> 00:50:49,600
And you weren't even worried.

1110
00:50:49,600 --> 00:50:52,320
The first time you do that, it changes your life.

1111
00:50:52,320 --> 00:50:53,320
I swear.

1112
00:50:53,320 --> 00:50:54,320
And we just did it yesterday.

1113
00:50:54,320 --> 00:50:57,200
Just, you know, I was like, I got to, I got to, I can't even remember what we were.

1114
00:50:57,200 --> 00:51:00,920
We were, oh, we were, uh, we were doing a dry run of the full upgrade and security update

1115
00:51:00,920 --> 00:51:04,200
process on Fedora and wanted to make sure like everything worked.

1116
00:51:04,200 --> 00:51:06,780
And we did the SE Linux troubleshooting and we're doing the whole, we did a whole dry

1117
00:51:06,780 --> 00:51:09,880
run on the whole thing, which happened to be a hot run and it worked.

1118
00:51:09,880 --> 00:51:15,000
So you know, these days you're mad if you're not using virtualization at scale.

1119
00:51:15,000 --> 00:51:18,000
Seven years ago, you were mad if you were considering it.

1120
00:51:18,000 --> 00:51:22,720
I feel like containers are at that kind of same point, right?

1121
00:51:22,720 --> 00:51:29,240
Where it's reaching a critical velocity, a terminal velocity where you're beginning to

1122
00:51:29,240 --> 00:51:32,520
get to that point where you're crazy if you're not doing stuff this way.

1123
00:51:32,520 --> 00:51:40,080
Whereas, you know, five years ago, containers were just, you know, fairy dust.

1124
00:51:40,080 --> 00:51:44,720
One other thing I wanted to bring up is silver blue.

1125
00:51:44,720 --> 00:51:52,300
Silver blue as a workstation was never really meant for standard desktop work.

1126
00:51:52,300 --> 00:51:58,840
It was meant for people who are building containers with, I think, an eye towards the release

1127
00:51:58,840 --> 00:52:05,960
of Fedora Core OS and the migration from Atomic into the new Core OS future.

1128
00:52:05,960 --> 00:52:14,240
So to me, them releasing the silver blue workstation and getting that shipped in a very usable

1129
00:52:14,240 --> 00:52:20,260
state was kind of a precursor to what we're getting ready to see, which exactly as Alex

1130
00:52:20,260 --> 00:52:23,800
said is about to be all containers all the time.

1131
00:52:23,800 --> 00:52:24,800
Wow.

1132
00:52:24,800 --> 00:52:25,800
You're right.

1133
00:52:25,800 --> 00:52:31,880
So Fedora Core OS will have developers running Fedora Silver Blue, developing the software

1134
00:52:31,880 --> 00:52:33,880
to run on Fedora Core OS.

1135
00:52:33,880 --> 00:52:34,880
That's right.

1136
00:52:34,880 --> 00:52:36,980
Ah, that puts it all in perspective right there.

1137
00:52:36,980 --> 00:52:37,980
Thank you, Drew.

1138
00:52:37,980 --> 00:52:42,680
Thank you for trying these out and helping us better alliterate the differences between

1139
00:52:42,680 --> 00:52:47,480
Ubuntu Core, Fedora Silver Blue, and now Fedora Core OS.

1140
00:52:47,480 --> 00:52:49,480
Yeah, I mean, Chris can really say them all.

1141
00:52:49,480 --> 00:52:52,960
There's no way he would have got it all right.

1142
00:52:52,960 --> 00:52:53,960
You know what, Drew?

1143
00:52:53,960 --> 00:52:54,960
We appreciate it.

1144
00:52:54,960 --> 00:52:55,960
Thank you very much.

1145
00:52:55,960 --> 00:52:57,720
Phil, thank you for coming on the show.

1146
00:52:57,720 --> 00:53:02,400
I look forward to hearing the future of the Manjaro project and of course having you back

1147
00:53:02,400 --> 00:53:03,400
on here.

1148
00:53:03,400 --> 00:53:05,040
Phil, one of the founders of the Manjaro project.

1149
00:53:05,040 --> 00:53:06,400
Thank you very much for joining us.

1150
00:53:06,400 --> 00:53:07,400
Thanks.

1151
00:53:07,400 --> 00:53:10,080
Now, we'd love to have you join us too, jblive.tv.

1152
00:53:10,080 --> 00:53:12,540
We do this here show on Tuesdays.

1153
00:53:12,540 --> 00:53:15,440
Very soon we're going to have a very special all-in-studio edition.

1154
00:53:15,440 --> 00:53:16,440
Oh, I'm excited.

1155
00:53:16,440 --> 00:53:17,920
I think that's in two weeks.

1156
00:53:17,920 --> 00:53:18,920
Is that right?

1157
00:53:18,920 --> 00:53:19,920
Two weeks.

1158
00:53:19,920 --> 00:53:21,920
So if you can, put that on your calendar.

1159
00:53:21,920 --> 00:53:25,520
Get the times over at jupyterbroadcasting.com slash calendar and all of our links over at

1160
00:53:25,520 --> 00:53:27,040
linuxunplugged.com.

1161
00:53:27,040 --> 00:53:28,040
Thanks for joining us.

1162
00:53:28,040 --> 00:53:43,160
See you next Tuesday.

1163
00:53:59,040 --> 00:54:04,840
All right, we've got to go boat.

1164
00:54:04,840 --> 00:54:05,840
Jbtitles.com.

1165
00:54:05,840 --> 00:54:06,840
All right.

1166
00:54:06,840 --> 00:54:07,840
So you know what got me?

1167
00:54:07,840 --> 00:54:10,240
It's that sweet new intro Joe made me.

1168
00:54:10,240 --> 00:54:11,240
You caught me.

1169
00:54:11,240 --> 00:54:14,200
I was like getting a sip of water during the regular intro because my instincts kicked

1170
00:54:14,200 --> 00:54:15,200
in and I thought it was longer.

1171
00:54:15,200 --> 00:54:16,200
Yeah.

1172
00:54:16,200 --> 00:54:17,200
And you do want to wet the palette, right?

1173
00:54:17,200 --> 00:54:18,200
Yeah.

1174
00:54:18,200 --> 00:54:19,200
Right?

1175
00:54:19,200 --> 00:54:20,200
I was trying to prepare for the show.

1176
00:54:20,200 --> 00:54:21,200
That's pretty good.

1177
00:54:21,200 --> 00:54:22,200
I resisted.

1178
00:54:22,200 --> 00:54:23,200
I resisted.

1179
00:54:23,200 --> 00:54:24,320
I wanted to do it.

1180
00:54:24,320 --> 00:54:26,400
I wanted to say one more thing.

1181
00:54:26,400 --> 00:54:27,400
Well, what did you want to say?

1182
00:54:27,400 --> 00:54:28,440
Get it in now.

1183
00:54:28,440 --> 00:54:35,400
There's actually a third piece to the core OS silver blue thing that was kind of glossed

1184
00:54:35,400 --> 00:54:38,360
over and that's that there's a Fedora IOT edition.

1185
00:54:38,360 --> 00:54:45,240
And the IOT edition takes the core OS technology and puts it in an even smaller base, even

1186
00:54:45,240 --> 00:54:52,040
more reduced and even more simplified for targeting the same use cases that Ubuntu

1187
00:54:52,040 --> 00:54:53,720
core does.

1188
00:54:53,720 --> 00:54:59,720
And again, it's a container focused workflow because what they're going with is more of

1189
00:54:59,720 --> 00:55:04,760
a model of, well, you already have these OCI images and they can be built multi-arch just

1190
00:55:04,760 --> 00:55:09,360
like every other reasonable format can or unreasonable format.

1191
00:55:09,360 --> 00:55:15,160
And so you can build these targeting ARM, targeting power, targeting x86, MIPS, whatever

1192
00:55:15,160 --> 00:55:16,160
you like.

1193
00:55:16,160 --> 00:55:23,800
In this case, Fedora is supporting ARM and x86 with this and actually also I686 because

1194
00:55:23,800 --> 00:55:31,560
shockingly, and this depresses me to no end, 32-bit x86 is alive in IOT and that hurts

1195
00:55:31,560 --> 00:55:33,880
me really bad.

1196
00:55:33,880 --> 00:55:41,440
But that world is where a lot of this Fedora IOT stuff is going into is that they're building

1197
00:55:41,440 --> 00:55:48,440
an even more reduced functionality targeted for bare metal kind of environment for supporting

1198
00:55:48,440 --> 00:55:53,440
these kinds of applications on there because as it turns out, as Ubuntu core also proves,

1199
00:55:53,440 --> 00:55:58,760
a containerized confined model for applications can also work well in an IOT space when the

1200
00:55:58,760 --> 00:56:03,920
machine is sufficiently powerful, as in the case of kiosk digital signage and stuff like

1201
00:56:03,920 --> 00:56:04,920
that.

1202
00:56:04,920 --> 00:56:08,480
But the goal there would be, and who knows if it could be accomplished, but the goal

1203
00:56:08,480 --> 00:56:14,520
would be that the vendors could then actually maintain and update the applications and the

1204
00:56:14,520 --> 00:56:20,440
operating systems would be self-maintaining and we'd maybe actually live in a reality

1205
00:56:20,440 --> 00:56:25,320
of standardized IOT devices that have some level of security.

1206
00:56:25,320 --> 00:56:26,320
Bingo.

1207
00:56:26,320 --> 00:56:31,960
And in fact, next week at Flock, the guy who is primarily leading the Fedora IOT edition,

1208
00:56:31,960 --> 00:56:37,920
Peter Robinson, is actually going to be giving a talk about enterprise scale usage of Fedora

1209
00:56:37,920 --> 00:56:38,920
IOT edition.

1210
00:56:38,920 --> 00:56:40,920
Wimby, I have a question for you.

1211
00:56:40,920 --> 00:56:45,720
How does Ubuntu core boot from a kernel snap?

1212
00:56:45,720 --> 00:56:48,520
Is there a bootloader that can mount a snap?

1213
00:56:48,520 --> 00:56:52,300
A kernel delivered as a snap is just a bunch of files on disk, right?

1214
00:56:52,300 --> 00:56:54,260
It's no different from anything else.

1215
00:56:54,260 --> 00:56:56,080
It's not magical.

1216
00:56:56,080 --> 00:57:04,160
Within the project, we were a little bit surprised when Joey posted a few months ago about the

1217
00:57:04,160 --> 00:57:10,880
snap store was a snap and it can install snaps.

1218
00:57:10,880 --> 00:57:14,280
Everyone else was like, well, how the bloody hell does that work?

1219
00:57:14,280 --> 00:57:15,280
Snapseption.

1220
00:57:15,280 --> 00:57:16,280
Yeah, right.

1221
00:57:16,280 --> 00:57:17,840
We were like, it's obvious how that works.

1222
00:57:17,840 --> 00:57:23,200
It was obvious to us at least, and then it was completely unobvious to everybody else.

1223
00:57:23,200 --> 00:57:26,840
There are some things like this and it is a little bit of a paradigm shift, but it's

1224
00:57:26,840 --> 00:57:29,240
just snaps are not magic.

1225
00:57:29,240 --> 00:57:30,280
They're not voodoo.

1226
00:57:30,280 --> 00:57:35,080
It's just another way of getting bits on a disk somewhere.

