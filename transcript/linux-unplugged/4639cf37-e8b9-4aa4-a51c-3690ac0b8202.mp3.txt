I have, I have, I have a, I have to come clean.
I know what this is.
So I went through Steam Left and that's that site that you plug in your Steam account and
it tells you how many hours of your life it would take to complete your gameplay.
And this is for the games in my library that are uncompleted, 3,405 continuous hours or
in other words I would have to play for 141 days, 21 hours and 15 minutes straight to
complete my Steam library at this point.
I could sail to Hawaii from LA 20 times, every time you load it gives you a different stat
too.
I could watch the entire Star Trek the original series 51 times, which that's probably pretty
close to what I would actually do.
I could work 85 full weeks, watch every Simpsons episode 15 times.
I could film the Blair Witch Project 17 times, well I think that's exactly what I would do.
There you go.
That's my shame right there.
Steam Left, you can go to steamleft.com and then plug your Steam profile in there and
see how many hours it would take you to complete.
That's a sign that I've been buying too many Steam games for Linux.
And mine's under 500.
I could drive across Russia 44 times.
4,219 continuous hours for me.
141 for me.
Wow.
572 hours for Keller, okay.
Yeah, so Poppy, I got you beat a little bit.
Just a bit.
Do you guys see the mix?
So what proportion of your game are Linux games and what proportion are Windows games?
Oh, good question.
You know, because I've been a Steam user for a long time, but I have quite a bit of Steam,
I mean it's, should I, let's see, I could open it up, let's find out.
Quite a bit of my games are Linux games because once they came out for Linux I just kind of
only started buying.
So I've got in total 206 games and of those, 104 are Linux.
Damn.
All right, let's see, I'm pulling up Steam right now, standby.
Updating user configuration, says Steam, whatever the...
It's in your home directory, isn't that what it's doing?
Yeah.
Okay, so I have 238 games of 169 of which are Linux.
That's a good proportion.
That's good.
Welcome to Linux Unplugs, your weekly Linux talk show that's writing down the information
of things superhighway.
My name is Chris.
And my name is Matt.
Hey, Matt, you know it's all about the Internet of Things today.
Oh, it is.
Do you have all your things interneted at your place, Matt?
I actually do have a hub, although I only have two sensors active.
Oh, you got more Internet of Things than I do, although I do have Hughes lights and I
think those are considered Internet of Things, yeah.
They are, they are.
I know, I need to up my game, I need to get like a nest, I need to get everything connected,
get it reporting and talking to dashboards, I need more dashboards.
Smart things, dude.
It's got open source stuff going on there.
Hmm, hmm, interesting.
Well, coming up on today's episode of Linux Unplugged, Ubuntu is prepped to take over
the Internet of Things devices and we're gonna see if it's actually a real initiative or
something they just slapped together once they saw CoreOS.
We'll talk about that.
But again, later on in the show, there's been a big hoo-roo-ha-ha between Google and Microsoft
about the disclosure of patches in Windows and Google just recently released some information
about a security flaw in Windows just a couple of days before Patch Tuesday and Microsoft
got all upset about it and it created this big debate again online.
Well, Linus Torvalds was speaking at a keynote and he was asked about public disclosures
of bugs.
He stated his stance on it, it's a little controversial and we'll play a clip of that
later on in the show.
And then also, somebody tried to pin Linus down and get him to say, hey, how come the
documentation isn't very good and what are you gonna do about improving the documentation
of a Linux kernel?
And you probably, you won't believe Linus' response.
I have not seen this covered anywhere else and when I heard it, I'm like, how is this
not news?
So we'll play a clip of that, too.
So I think it should be a good show today, Matt.
Nice.
Yeah.
And we got some great feedback, too, from the audience, so I just picked out a few good
ones.
Some emails we're gonna try to get to, but just a couple this week, so before we get
into all of that, let's bring in the Mamba Room.
Time appropriate greetings, Mamba Room.
Hello.
Hello.
Hello.
Boy, aren't you just a handsome bunch.
Look at you guys.
Looking really good today.
You know what it might be is I noticed this Ubuntu Mate desktop seems to have really great
fonts out of the box.
Maybe that's what it is.
Everybody's looking real good.
So Earl writes in, really to Matt, Earl writes in and he says, Matt, I listened to your enthusiasm
for the Ubuntu Mate a few times now.
I'd like to try it.
I started using Linux with Ubuntu 14.10 and I've been a user ever since.
I went to Linux Mint when Ubuntu had to abandon GNOME 2.
My problem is I generally use Wi-Fi from the public library when I can't use torrents.
I tried HTTP sites listed in Europe, but I keep getting a timeout after an hour or so
when downloading Ubuntu Mate.
Do you know if there's an HTTP site in the US?
I maintain several computers running Mint Mate for friends and the only thing I don't
like about having it is having to reinstall after every upgrade.
And no, Chris, I'm not going to GNOME 3.
I'm 70 years old and I don't need that frustration.
GNOME 3 should be put out to pasture with a bullet between its eyes, Earl.
And I know Wimpy's here too.
Wimpy, do you have any advice if he's having problems downloading Mate edition in Europe?
Well, no, unfortunately all of the mirrors are in Europe.
The only thing I could suggest is grabbing the torrents, but he seems to imply that he
hasn't got access to the torrents.
So if you're going to do an HTTP download, it's coming from a European server.
It's kind of just the way it is right now.
The Ubuntu Mate community have been very generous in donating to host a new community site and
there's some surplus funds.
So what I'll do is I'll put up a mirror in North America and I'll send you the details
and maybe you can put me in touch with this guy and we'll put an American mirror up.
How's that?
Oh, wow.
How about that, Earl?
That's awesome.
There's a custom solution right there for you.
Very good.
All right.
Well, and you know, I was going to say, otherwise my go-to would be definitely go with torrents.
It's a shame that the public libraries block that, but I guess I understand why they do
it.
It's got to be for piracy.
I would imagine so.
It's kind of a blanket solution, but yeah.
Yeah, block all of the things just in case it gets used for something bad.
Armani writes in and he wanted to comment on the Mac Exodus topic we've been touching
on.
Hey guys, I came to contribute to all the Mac Exodus talk when I realized something
kind of funny.
All of my experience with Linux has been on Apple hardware.
Well except for my Nexus 5, which I have Ubuntu on.
Back in high school, before I even had a Mac, I was running Linux on my iPod.
This made me pretty popular among the nerd crowd and I ended up loading up with a bunch
of my friends iPods as well.
Needless to say, the rest of the Apple plebs on campus were pretty jealous when not only
did I have video before the iPod video was out, but I also got to play Doom.
Anyway, now I have a Macbook Pro running Ubuntu 14.10.
I made the switch to 12.04 a couple of years back and that's when I discovered Jupiter
Broadcasting.
After a couple of months, it became my daily driver.
Then somewhere around 13.10, I switched to Ubuntu Gnome and fell in love.
Now I'm hooked on Linux and an avid listener of your shows.
One thing is for sure though, I'll probably never buy anything from Apple again.
Maybe I'll go for the new Dell XPS 13.
So yeah, he sent a picture along to me.
It looks nice.
It's an older Macbook, so maybe that gives him a little less problems and he's got Gnome
on there.
Have you seen this Dell XPS 13?
Have you seen this?
I have not actually seen it.
I've been hearing a lot about it and because of my completely ridiculous bigotry toward
Dell, I purposely haven't looked, but it does sound like that they are onto something and
it would definitely signal to others that they need to catch up to that perhaps.
I'm doing Popeye a favor.
See I know that Popeye is eventually, he's like he's riding this ThinkPad, this old busted
ThinkPad of his for a really long time and he's trying to ride that and eventually he's
going to have to pull the trigger and get something and so I want to be there for him.
So I went ahead and I picked up a XPS 13 Ultrabook and I'm going to tell you a little bit about
it here in just a second why I got it, all of the horrible experiences I've had with
Dell which confirm all of the problems that I have with Dell and why I think this might
make a great machine.
So I will comment on this in just a second and kind of tell you where my head's at with
grabbing this Dell laptop, but first why don't I tell you about Linux Academy.
Let's start right there because Linux Academy is pretty great and I think it's something
that's worth checking out.
If you've heard some of these technologies out there that sure seem pretty fancy, you
know things like Puppet, NGINX, OpenStack, Virtualization, Docker, all that kind of stuff.
You know the things that are fundamental to being successful in this space now?
Well Linux Academy has incredible courseware on all of it.
Go over to linuxacademy.com slash unplugged.
That's a special Linux unplugged discount, linuxacademy.com slash unplugged.
You're going to get the 33% discount.
They have step-by-step video courses for all of their courseware, downloadable comprehensive
study guides, live streams where you can ask the educators questions directly.
Stuff comes with its own servers so if you have a course on AWS or maybe you're learning
something with NGINX, you know whatever something's in that range, you actually get to play with
the technology, set up the system, look at the config file, they give you a public address
and you get to bang on it like a real box.
That way you've had true legitimate experience with it and as you go, each section is broken
out, tells you how long you've got to complete, it gives you reminders if you need to and
if you're tight on time, they have custom learning plans.
You go in there and just set your availability and it automatically generates a custom plan
just for you with reminders and all that kind of good stuff.
You just got to note too that they've been refreshing the NGINX and Docker courses specifically
to make sure they stay current.
This is one of the other things that's really great about Linux Academy is they're keeping
all of that stuff fresh, always making sure that it's got the most relevant, latest information
so that way when you go take that courseware, it's totally up to date.
The other thing that's super slick about it is they have seven plus Linux distributions
you can choose from, whichever distribution you pick, then the courseware automatically
adjusts to that distribution including like the virtual machine and all of that.
So you know you say CentOS, well the courseware is all CentOS, the virtual machine image is
CentOS, all of the environment, all the commands and all of the courseware, everything's CentOS.
Next time you go through, you choose an Ubuntu rig, same thing.
Super slick.
The reason is because these are people that are crazy passionate about Linux and open
source, right?
These are people that really care about this.
It's not a generic education facility where they've got everything from fixing your sync
to working in Adobe After Effects.
That's not what Linux Academy does.
They're hyper focused on this stuff.
It's a bunch of Linux enthusiasts, educators, and developers that came together to create
Linux Academy.
And you can get in on the action over at linuxacademy.com slash unplugged, special discount just for
the show, linuxacademy.com slash unplugged.
Go check out Linux Academy and see all of the cool courseware they have available, linuxacademy.com
slash unplugged.
And a big thank you to Linux Academy for sponsoring the Unplugged show.
Okay, so yeah, you know, I was really not so sure.
I watched CES, I watched all the hardware that came out of CES, and I think out of everything
that was shown, I was the most impressed by the XPS 13 Ultrabook by Dell, which surprised
me because I'm not generally a Dell fan.
And I've been kind of stuck in this like, what am I going to do?
I need to move my hardware situation around for a little while.
And the thing that kind of pushed me over the edge is that you can buy from Dell directly
with Bitcoin, which really surprised me.
Like the whole thing from end to end, like all the accessories, the laptop itself, it's
one click Bitcoin, it's tied in with Coinbase and you're done.
That is super, a super, super neat system.
And so that was sort of like the final deciding factor for me to go pull the trigger on the
XPS 13.
So here's what I got.
Is it the new edge to edge screen watch?
Yes.
Yep.
With the 3200 by 1800 display.
Yeah.
Wait, wait, wait, wait, wait, wait, wait, wait, wait, wait, did you buy the windows
one?
I did.
I did.
Yes.
And here's why.
Well, here's why.
I'm not, I'm not a big Dell fan.
And I have, I really have very little faith that getting their next Sputnik version versus
this is going to make a huge difference.
But I figure either way, if they ship that eventually, it'll probably benefit this one.
And essentially I need something now.
It's going to make a big difference to your freedom, my friend.
Well, I don't mind having the windows license.
I don't have any license copies of windows right now.
And that about twice a year becomes about a real pain in my ass where I consider buying
windows and then I never can actually make myself do it.
So now I'm like, well now I have the license.
So that's good for some stuff.
I wanted to kind of, the reason why I wanted to go buy it now is I wanted to get out ahead
of it just basically for the purposes of having it for a little while.
So by the time they do ship something, I'll have a really sound opinion on the hardware
itself.
So I can talk about it to the audience from a pretty educated standpoint, because if this
is a nice laptop, as nice as I think it's going to be, this could be the Linux Mac book
potentially, I think.
And so I wanted to grab it now and I wanted to have an educated opinion about it.
So that way when the Linux version does ship, I can talk to the audience from a pretty educated
standpoint on it.
So it'll be maybe a one to one, but hopefully it'll be really close.
So that's another reason why I've kind of pulled the trigger early on it.
So what I got with it was eight gigabytes of RAM, a 512 gigabyte SSD.
It's got the i7 550 processor, 13 inch display, but because it's edge to edge, it actually
fits like in an 11 point something housing, which is kind of interesting.
And good news, it comes with McAfee LiveSafe image trial version.
Oh, that's great.
Yeah.
Yeah.
So I can get that installed.
I'm pretty happy about that.
Garbage.
So this ships with the fifth gen new Broadwell chip.
And I was looking at a review and I don't, you know, I take it for what it is because
it comes from Forbes.
No, no, if it's Forbes, but they were saying that they were seeing a 20 percent GPU speed
improvement over the previous Iris graphics.
So 20 percent is, I mean, that was already getting pretty close.
There was some serious casual gaming you could serious casual gaming you could do.
So that's pretty healthy.
That's pretty healthy.
I'll get the machine.
I will probably not even boot it into Windows.
Do you need to?
Do you need to boot it into Windows or can you just immediately format it?
I have not bought a laptop with Windows.
I would probably, yeah, I'm trying to remember now because it's been a bit, I don't think
it, no, I don't think it matters.
If you live.
Yeah.
If you live disk it.
Actually, I don't know.
Because, yeah, it's been a while.
I'm not sure.
I suppose.
I don't know.
I'm hoping this is going to be the, I don't know.
I'm hoping this is going to be like sort of like the laptop that a lot of people want
to get to run Linux.
We'll see.
I'll give you my review.
My gut feeling is I would probably boot into Windows first.
If you're going to keep it and you're not going to do one of these, try and get a Windows
refund.
If you're going to keep the Windows license, then I would boot into it at least and clone
Ziller it onto a USB so you've got a copy of it.
Yeah.
But also.
Makes me feel dirty.
Well, yeah, but I would also check the Dell website for any BIOS updates and do those
while you're in Windows.
Oh, sure.
Just in case.
Right.
Right.
Yeah.
That's a good point, actually.
Because they got the utilities for all that garbage.
This is stuff you got to consider when you buy a Windows machine to run Linux.
Yeah.
Yeah.
It really is.
Some of the reviews are saying that 15-hour battery life is a bit of an exaggeration.
It's more like seven hours of battery life if you get the hybrid screen.
Yeah.
What a shock.
It's probably 15 hours when you like turn the brightness down to nothing.
You don't touch any part of it.
Turn off the Wi-Fi.
Turn off the Bluetooth.
Turn off everything.
Bluetooth, Wi-Fi, any of that.
Run it at 1080p.
You know.
All that kind of stuff.
Right.
Yeah.
Exactly.
So, anyways, I'll give my updates soon and we'll see how it goes.
I don't know.
I mean, so at the end of the day, you really kind of come out winning in that you bought
it with Bitcoin.
That's kind of cool.
Yeah.
Yeah.
I mean, economically cool.
Not only that, but I bought it like back on the 7th or the 8th, which Bitcoin was still
about worth almost $300 when I did it.
Oh, well, yeah.
Then there you go.
So, yeah.
You got a little hedge to your edge there.
Yeah.
But I feel like maybe this is a bad time to use Bitcoin because usually what happens when
the price goes down like this is a bunch of people start buying and then it starts steadily
going up for a while.
So I might come out on the bad end of that possibility.
Yeah.
It is a possibility.
Matt, I'm going to try giving a guest a call.
Let's see if...
All right.
Hey, Christian.
Can you hear us?
Yeah, I can hear you.
Can you hear me?
Yeah.
We hear you great.
Thanks for coming on the show.
So, Matt, this is Christian.
He's working on Gnome Builder.
Awesome.
And you're probably familiar.
We've talked about the Indiegogo project that's going on.
I'm sure you're all plugged.
Thanks.
Thanks for having me.
Oh, no, no problem.
So congratulations, by the way, on the success of the Gnome Builder project.
That seems like that Indiegogo has probably gone better than you expected, I would imagine.
Yeah.
I mean, significantly better than I expected.
I tried to set some pretty ambitious goals, but at a very, very reasonable price point.
And I'm hoping that people saw that and really came out to help.
Well, what struck me about it is you seem like maybe you're a crazy person because you
quit your full-time job to do this.
Why take that risk?
And you did that even before you launched the fundraiser.
Yeah, you know, I've been a part of the free software community for a long time.
And at some point, I decided that fixing the tools that we're all using is far more important
than individual career growth to me.
So I had a pretty kickass job, too.
I was working at MongoDB, working on their C driver, and there's a great group of people
there.
They really care about free software.
There's a reason why the products say GPL-licensed.
But ultimately, this was the most important thing I could be doing.
So I really had to make the switch.
That's very impressive and very admirable.
So when you launched the fundraiser, has the scope of what Gnome Builder is going to include
expanded quite a bit since the funding kicked in?
Well, it really determines how much and for how long people are willing to support me.
Yes, I want all of these features in there.
I knew that for me to be able to be successful with this, the most important thing I can
do is build Builder with Builder.
So that meant the first priority is C. Builder has to be written in C for technical reasons.
We want to reuse as much of the software as we can.
We want to reuse Glade.
We want to reuse Dev Help.
We want to reuse Git G, GTK Source View, and all these things are best integrated from
C. So that doesn't mean that we don't want to support Vala.
It doesn't mean we don't want to support Python or JavaScript or any of these other languages
in a first-class way.
It just means that our priority had to be this first.
So I knew that a lot of people would really care about those languages, and I really want
to support them.
It can't be the first thing to be done.
We can't put the cart before the horse.
Right.
That makes sense.
I mean, focusing like that means that you get that right, and then once you get that
right, you move on from there.
But this looks like maybe, is it going to become a general IDE for GNOME eventually,
like all kinds of languages in there, all kinds of support?
I mean, that is certainly my goal.
I don't care what language you write GNOME software in, and most of us don't.
So anything I can do to bring more people in and more people contributing, I'm perfectly
happy to do that.
You already have basic support for some of these languages.
You already get like Air Reporting for Vala.
You already get Air Reporting for Go if you have a working Go set up.
So even beyond GNOME, someday that's quite possible.
But I definitely want to stay focused myself on how do we build GNOME software better.
Yeah.
And it seems like this would be a great tool for when somebody asks the question, where
do I get started?
People can say, okay, get started with Builder and go from there, which seems like such a
simple thing to be able to say, but we have lacked that one coherent answer for so long
that I've talked to a lot of developers who've been put off by that.
It just seems like there's so many choices.
And this represents, well, if you're going to go GNOME, if you're going to do GTK, start
here.
Now, that itself is a huge goal.
And so I'm pretty impressed that you've raised $42,000, but what happens six, seven, eight
months from now, this is your full-time job, that funding sort of begins to wane.
How do you make it ongoing?
What's the trick there?
Yeah.
I mean, I think a really important thing is to, number one, build a really strong community.
So we can all share the burden.
But on the point that you mentioned there of having a single answer to tell people,
that is really, really important.
For my time spending helping people get started in free software, almost always the first
question is, how do I get started?
And it's a really monumental thing to get over.
And you look at something like Android or whatever, they have an IDE that you install
and there's other choices, but there's a blessed sort of way.
And you enable developer mode on your phone.
I'd really like to see that in terms of GNOME, where you're just able to enable developer
mode in the control settings and all of a sudden you have a complete development environment
and everything else is done underneath the hood and you don't have to worry about it.
So would a goal of yours be maybe to have Builder almost kind of considered a part of
a GNOME desktop, maybe like in developer mode where it's almost under the branch of GNOME?
Absolutely.
I mean, this is, I think, I contributed.
I think it's just a great project initiative and we'll have a link in the show notes.
So Christian, I guess you're already working now, so does anything change for you now this
is successful or are you just plowing on forward?
Well, you know, the last couple of weeks I've been so busy with fundraising and communicating
with people.
And so the amount of code I've gotten written in January is significantly less than all
of the other months.
So I'm really looking forward to just, you know, putting the blinders on and writing
code again.
Yeah, absolutely.
I bet.
Well, we'll have a link to the Indiegogo.
I recommend anybody who wants to go back.
It's six days left and I think this is a great initiative and you're solving a huge problem
just from the development people that I've talked to.
So keep up the great work and thanks for coming on the show.
It's been my pleasure.
Thanks for having me.
Yeah.
Have a great rest of your day.
Awesome.
Yeah.
Well, so check it out, everybody.
We'll have a link in the show notes.
That's GNOME Builder.
I think it's a great initiative.
Oh, it sounds like it.
Okay guys.
So why don't we take a quick moment right here and talk about something pretty neat.
DigitalOcean has just recently rolled out free BSD support.
DigitalOcean is a sponsor of the Linux Unplugged show.
And I want you to head over there and try it out.
There's a lot of great things you can do including CoreOS, Ubuntu, Fedora, now free BSD and we've
got a brand new promo code for the year, which is kind of like, it makes me feel all official.
It's D.O.
Unplugged.
D.O.
Unplugged.
That's so cool.
Yeah.
One word, lowercase, real easy and it's going to give you a $10 credit over at DigitalOcean.
What?
Digital what?
Yeah.
DigitalOcean.
DigitalOcean is a simple cloud hosting provider dedicated to offering the most intuitive and
easy way to spin up a cloud server.
You can get started in less than 55 seconds.
Some pricing plans start only $5 a month.
For 512 megabytes of RAM, a 20 gigabyte SSD, one CPU and a terabyte, a terabyte of transfer.
And DigitalOcean has data center locations in New York, San Francisco, Singapore, Amsterdam
and London.
And yeah, their London one's super fancy.
Go figure.
But that, they're all, just check out their Instagram feed.
They're all fancy.
I'll tell you what's super fancy though.
That interface of DigitalOcean's.
The dashboard they've got, it's like amazing.
It's a bar setter.
It truly is simple and intuitive, but yet extremely powerful and you can replicate the
functionality on a larger scale with DigitalOcean's straightforward API, which is so sweet because
if you're lazy like I am, there's already a whole bunch of people making great apps
out there for you and you can just like snap it right in the puppet.
You can take advantage of like from your Android app, you can be taking snapshots of your droplets.
I mean it's full fledged nuts how awesome it already is for you.
But all that said, like if you're like a go-getter and like you can do things fancy, like use
APIs, then have at it.
Like more power to you.
Go over to DigitalOcean.com, spin up a droplet, create a GitLab, a WordPress, a Ghost, OwnCloud,
BitTorrent Sync, you name it.
So many things, a Minecraft server, a Mumble server, a Jitsi server, the backend server
for your crazy Ruby J-bot script.
Not that I would know any of that kind of stuff.
It's your own server up in the cloud that you get root access to, DigitalOcean.com and
use the promo code DOUNPLUGGED, all one word, DOUNPLUGGED, lowercase, you get a $10 credit.
Try out the $5 rig two months for free, the $5 rig two months for free with DOUNPLUGGED.
DigitalOcean.com and a big thanks to DigitalOcean.
You guys freaking rock.
You guys freaking rock and I think it's so cool you just keep on expanding and adding
all this cool stuff even if it is a BSD.
I'm just really glad they're adding free BSD support because it makes my 2015 predictions
a little bit closer to reality.
So I'm all jacked up about that.
I think that's great.
So go over to DigitalOcean.com, DOUNPLUGGED when you check out, and a huge thanks to DigitalOcean
for sponsoring the Linux Unplugged show.
You guys are cray cool.
Cray cool.
It's actually, I don't know if you caught this on Google+, I was talking about spinning
up a couple instances of Ghost.
Oh yeah.
It's overdue.
I have some sites that would just benefit more from going that way and it's so minimalist
and it just, boom.
You know what I mean?
All that content.
I totally agree.
I totally agree.
I'm all in on that.
Okay.
So let's talk about the big announcement from Canonical and Mark Shuttleworth today.
Smart things and the internet of things or whatever you want to call it.
Little boards with ARM chips and network connectivity powered by Ubuntu Snappy Core.
That brand new fancy version of Ubuntu that we've heard a lot about recently.
And I thought to get us started, instead of me blabbing on about it, let's join Mark
Shuttleworth in his home.
I love this.
I can't help it because I do video production.
So I notice things that make it not quite like a web home cam video.
Like the fact that he's miked with a wireless mic pack and that this.
Oh yeah.
But anyways, it's still a great video for Mark.
So Mark's going to give us a big introduction to Snappy Ubuntu Core for smart devices.
For ARM and X86.
I actually think this is kind of a smart move.
So let's hear it in his words.
Hello and welcome to my home.
I'm absolutely inspired at the moment by the entrepreneurs and the inventors who are creating
this next generation of extraordinary devices.
And I don't mean PCs and phones.
I mean all of the automation that is quietly transforming our homes and our lives.
This is my house.
I could give you a tour.
It wouldn't be a very long one.
It's a small house.
There are two of us who live here and two dogs.
And yet this morning walking around I counted 16 little boxes that I think are running Linux
and which are doing all sorts of things from home automation to entertainment and security.
And I think over the next year or two that number is going to continue to grow with devices
that make our lives more interesting, safer, more secure, more efficient, more environmentally
friendly and richer in many, many different ways.
So I want to celebrate that extraordinary progress and I also, as somebody who really
believes in the power of open source to unleash creativity, I want to celebrate that the vast
majority of these devices today do run Linux.
That's an enormous success for all of us in the Linux community.
But they don't necessarily run Ubuntu, do they?
And so let's start here.
So Ubuntu's snappy, those of you who remember, is the transactionally ready version of Ubuntu.
So if an update goes back, you just roll back and you're good to go.
It makes a lot of sense to have this on devices, sort of embedded appliance like devices that
need to be super reliable.
And I think that's all well and good.
I'm reading this interview though with Mark Shuttleworth over at GigaOM and something
starts to smell a little off to me.
And I don't mean to be a naysayer, but what I'm reading is, and of course GigaOM takes
it to the extreme, right?
Robots embrace Ubuntu as it invades the internet of things.
Oh God, I love the tech press.
Really?
And they show a picture of a drone, right?
So no subtleties there.
Oh boy.
But here's what it reads to me as.
It reads to me as a company that is extremely good at turning on a dime and then putting
an outward presentation as if it's been part of the grand scheme.
It's all part of a master stroke.
It's all under control.
And here's what I mean.
If you read through this, what you get is, well all that time we spent on mobile is all
totally worth it because we invented this super cool way to do transactional updates
and now we're going to move that over to Snappy Core.
In fact, it sounds like I'm being mean, but in here Mark Shuttleworth is actually quoted
as, here I'll read a quote and then you can see where I'm coming from.
Two years ago we started seeing a lot of what I call alpha developers starting to tinker
with what at the time people called embedded development.
We realized there was a very interesting commonality between the work we were doing for mobile,
specifically this update mechanism work, and things you'd want to do if you were to build
a product around one of these boards.
Canonical had invested in the container capabilities of the Linux kernel as it happened for the
mobile story.
Shuttleworth said, as it needed to fix security issues on the phones such as isolating untrusted
apps from the address book, etc.
He went on to say, Docker is based on those primitives that we built.
So kind of what he's saying is, you know, everybody that's working on Project Atomic
or Core OS and Docker, well we were kind of onto this a long time ago when we started
working on the phones.
In fact, they're even kind of relying on some of the fundamentals that we built.
We haven't had our eye off the game, off the ball this entire time.
We've actually been working on this and moving it over.
Now that's partially very true, right?
That is exactly what's happened, but at the same time I don't necessarily believe it was
this grand master plan so much as an ability to recognize a need in the market and sort
of pivot really quick and then paint it very broadly in these sort of grandiose terms.
Could you take a step back and explain to a layman like me what's proven to Snappy Core
actually is?
Okay, so, and feel free, anybody, Popey, anybody wimpy that wants to correct me, I'm going
to probably just give a real quick summary.
So the Snappy Core, we covered it before more in depth, but think of your base operating
system as super minimal, read-only file system.
Applications and stuff are done in containers or something like that, and then when there's
a system update, you just replace that read-only image with the new image of a new file system
that's been fully updated.
The container applications are untouched because their updates are handled independently inside
the container.
You reboot.
If the system doesn't boot successfully, you just simply switch back to the other read-only
image and now you're right back to where you were before any updates were applied.
Doesn't sound too dissimilar from something like Core OS maybe in terms of concept?
Right?
Exactly.
Yes, exactly.
That's what I'm saying is they see the market, and I think this is, I think Ubuntu for these
types of devices is a great maneuver.
I don't know though, I just feel like we're being sold a little bit of a sales pitch,
a little bit of a story to use Mark's words, and it just stinks a little bit.
So from my perspective, I can see why, you know, we do this big marketing push and you
guys have not heard of this at all until today.
And prior to that, there was the Snappy Ubuntu Core announcement a few weeks back that talked
about the cloud.
And I know that this stuff has been bubbling under for a while, and I know how it can seem
like it's taking advantage of a bit of marketing to make it look like we've been working on
this for a while.
But I look back and think about conversations that I've had with Mark and other people at
Canonical over the years, and I've only worked for Canonical for three and a bit years, and
I remember my first week talking about how we're going to do these transactional updates,
how we're going to do this read-only image, how we're going to do these kind of things
that we're going to need in this future.
And I see Mark as a very clever guy, he's very astute, and he knows what the future
holds, or he has some idea of what the future holds.
And he puts in place these little markers and gets things ready for some distant way
in the future.
And it might look like it makes no sense right now, it doesn't look like anything you might
need right now, but then when the pieces start to land, it all kind of comes together.
And I think that's what this is.
And that makes sense.
But I think part of the reason why it feels a little salesy is, for example, quote from
Mark, let us deliver those updates to your device with the same efficiency as with the
phone.
Well, that is based on a preposition that there has been reliable updates shipped to
the phone.
I mean, yes, in beta testing, you just aren't using it.
Well, actually, my Nexus 5 got screwed up by an update, but I realized it wasn't enough
things.
Which is not a supported device.
But you see, it's sort of based on, it's not a sound claim to make.
You can't truly, because it hasn't been done at scale, right?
It's not actually genuinely done at scale the way that that quote sort of implies.
Like if you did not follow this very closely, and you read that quote on GigaOM where it's
posted, you would assume that Canonical right now has a history of shipping software updates
to thousands, maybe even millions of devices by reading that quote, right?
It's not-
Well, there's certainly thousands of devices, and it's certainly over the past two years
that thousands of devices have been receiving updates over the air every day reliably, including
machines in our data center that we do QA on, and machines that are held by developers
and machines that are held by enthusiastic users.
I agree, and it's a sound system.
I agree with you that there aren't millions, we're not at the scale of iOS or Android yet,
but there is still a reliable and proven mechanism because thousands of devices use it.
Okay, let me ask you what you think about this, because I agree, I mean, I'm not saying
it's wrong either.
I'm just saying it's stated in a way where if you didn't have the full context, you might
get a misrepresentation of the scale.
But I mean, that's fair.
I mean, that's within his right to do.
Okay, here's a question that I thought was kind of astute of GigaOM to ask.
So they asked, is Ubuntu Core the win CE of Ubuntu or the future of the venerable Linux
distro?
Shuttleworth was adamant to say that the Debian package version of Ubuntu will never go away
because it is the mechanism with which we collaborate amongst ourselves and with Debian,
and should be a continued relevance to developers.
I don't know, Popey, like, honestly, seems like if this Ubuntu snappy core works good
for the phone, it works good for a Raspberry Pi, it works good for my SCADA system that
manages the dam, and it works good for my Hughes lights, maybe it'd work okay for my
laptop too.
Right, yeah, and that's great.
But what you're not picking up on is that the read-only image that we ship out to you
is built from Debian packages.
So we can't throw that away.
We can't get rid of that whole Debian legacy.
We keep that because it works, it's reliable, it's great for us to build that read-only
image.
But does that mean it has to be a shipping product?
What has to be a shipping product?
The Debian version.
Like, maybe it's just something internally that the...
It is.
I mean, you can flip a switch on an Ubuntu phone or on this future laptop that you're
talking about, you can flip a switch and go from read-write and then just go app-get-update,
app-get-upgrade, app-get-install-full.
Oh, that's cool.
I already have my tablet here that's running Ubuntu phone, and I've app-get-installed various
libraries because I wanted to build some STL-based games on my tablet.
So I, you know...
You know where I'm going with this, is I like the idea of, yeah, here is...
Let's just use today's terms, like if it's something that existed today.
Here's your Ubuntu 14.04-based, nice stable desktop, all your applications are in containers.
That would really be a pretty incredibly bulletproof Linux desktop.
I like that.
I didn't realize you could switch it over to a non-read...
Of course, that makes sense, but I just wouldn't think all the components would be there.
You can switch it both ways.
Yeah.
You can flip it back the other way as well.
But yeah, I agree with you.
That's an interesting idea, to use these kind of components in the desktop later on, having
your, I don't know, LibreOffice 4.5 in a container, and having LibreOffice, oh, I want to try
out LibreOffice 5, but I don't want to screw up my LibreOffice 4 install.
So I have that in a container, and I just click a button, and it installs it.
You could even potentially run both side by side.
Those are kind of panacea that a lot of people have wanted for a long time on any OS, not
just on Linux.
You know, you've been wanting to be able to run two different versions of the same application,
or have two different multiple users of the same machine running two different versions
of the same application, and that's just one tiny use case.
There's lots of other ways in which this is cool, but the underlying components is still
Debian.
It's still Debian packages that built this thing.
So what I go back to then, what I wonder, is if this all rolls out, it truly, if this
becomes adopted by OEMs and manufacturers, is really kind of what this space is competing
with is probably Android.
Because that's got to be, like when you look at a lot of these embedded devices, a lot
of them are being built for Android, so now Canonical is going to try to compete with
Android in the mobile phone space and in these low-end devices.
Maybe they're going to try to go lower than the Android devices are, but it still seems
like there's going to be some cross-competition with Google.
A lot of these things have Android images.
I like the idea of having a single OS across my embedded device, my BeagleBone or whatever
other device, my Odroid or whatever, and my laptop, and my server in the cloud.
And I know that there's consistency between them, and I know that they're all running
the same version of LibFu or whatever it is, and I can build my own personal libraries
on all of those, and it will work on all of those.
That is personally appealing to me.
If only it was Arch.
You had to go and do it, didn't you?
I can't.
But yeah, I agree.
Like it is a pretty cool, like it could be a pretty cool picture once it's all completed.
If it gets there, a lot of uncompleted bits as of yet.
But it'll get there eventually, I think.
I don't know.
And so I'll have a link in the show notes to Mark's big post up about it, and including
also his video, which he talks more about.
I just played a couple of minutes of it, but you can find the whole video linked in our
show notes.
Sounds cool.
Anybody else have any closing thoughts in the moment before we move on to our next topic?
Going once, going twice, no, no, okay, very good.
Well then, let's take a moment right here, and I'll tell you about something I like quite
a bit.
And that's my cell phone provider.
That's Ting.
Go to linux.ting.com to get started, linux.ting.com.
Ting is mobile that makes sense, no BS, no tricks, no hidden fees.
It's just $6 for your line, and then your minutes, your messages, your megabytes.
They just take that, they add that up, and that's what you pay.
And you get a hotspot teller, and you just turn it on, voicemail, a picture message,
all the stuff you'd expect.
And they've got a full range of phones from really low end value, like cheap phones that'll
just get your phones and text, and that's it.
It lasts probably like three days, or four days, or a week, because those phones did
that.
And it feels like an entire different time.
All the way up to the super high end, like go just get a GSM and put it in a Nexus 6,
and it's ready to go on the Ting network.
GSM Nexus 6, and also CDMA Nexus 6, in February, you'll be able to use both, just like in my
Nexus 5.
That's a pretty great deal, and you combine that with Ting's no-hold customer service.
Now you're starting to really talk, because what I have found is the dashboard totally
works for me.
Everything I need to do with Ting, I can take care of it in the dashboard.
I mean everything.
Every phone I've gotten from Ting, activating them, transferring them, any of that stuff
I can do in the dashboard, I've never needed to call.
But just in case mom ever needs to call, or just in case Rekai ever needs to call, I don't
need to play tech support.
Ting has no-hold customer service, so I know they can just call 1-855-TING-FTW, and a real
human being answers the phone.
I've got three phones on my Ting account, and I'm paying somewhere in the ballpark between
$30 to $40, $45, depends if I'm traveling a month, for three smartphones, HTC One, Nexus
5, and the iPhone 5.
And in fact, if you are of the iPhone variety, I believe Ting has the 4S right now for like
$130, no contract, nor the termination fee, you only pay for what you use.
That's a pretty good deal.
You can go get a whole range of devices, check them out, go over to linux.ting.com to get
started.
They'll give you a $25 discount off your first Ting device.
If you already have a Ting compatible device, they'll give you a $25 service credit.
Also try out the savings calculator.
I'm saving like $2,200 a year, for every two years now.
I'm like, that's crazy.
That's crazy.
That's like laptop money.
That's nuts.
I should take that money, and I should buy Bitcoin while it's cheap.
I'm telling you, that's exactly what I'd do.
I mean, like, yeah, my last bill was like $20, $26, I think something like that.
It's amazing.
Isn't it?
Well, and what I like is that they kind of hedged me into learning to use my resources.
As far as like my home internet, for example, I can make calls and texts over internet,
which of course saves me money.
Yeah, no kidding.
Yeah, you just have to be a little savvy and you can save a ton of money, and I think most
of the audience is.
Absolutely.
And also check out the Ting blog.
They have some recent posts on how you can set up your podcast catcher, so that way it
doesn't cost you a bunch of data either.
And you know, that's good for your podcast listeners.
Linux.ting.com.
Go check them out and help support the Unplugged show, linux.ting.com.
And a big, big thank you to Ting for sponsoring the Linux Unplugged show.
So we talked about it a little bit on the Linux Action Show live stream.
Linus and friends were at the LinuxConf AU keynote and they were talking.
They're doing just, Linus likes to do just Q&As mostly.
He doesn't like to go up there and do big presentations.
And that's understandable because he's done them for a long time now and he feels like
everybody has a bunch of questions and it keeps it sort of so fresh and so clean.
So he was happy with that.
And so an interesting couple of things came up.
Over the weekend, we heard that Linus made the comment that he doesn't care if he upsets
people and that's what we talked about in the pre-show.
And that's what kind of grabbed all of the headlines.
And everybody was kind of focused on that.
But it turns out there's other couple of bits in that speech that didn't get quite the attention
they deserve.
I want to start with the first one because it's a popular one in the security community
right now around disclosures.
And ZDNet did a pretty good write up about what Linus had to say.
And Linus essentially said that he thinks public issues like this should be disclosed
openly, especially for open source software.
But instead of me telling you about it, I'll play it in the man's own words.
There's another thing that's been going on which I find personally very satisfying which
is that people are less willing sometimes to kind of brush the problem under the mat
and leave it up to vendors and have disclosure, like infinitely long disclosure times.
I'm a huge believer in just disclosing still somewhat responsibly but security problems
need to be made public.
And there are people who argue and have argued for decades that you never want to talk about
security problems because that only helps the black hats.
And the fact is that I think you absolutely need to report them and you need to report
them in a reasonable time frame.
Reasonable for the kernel security list is admittedly five working days which some people
think is a bit extreme and in other projects it might be a month or a couple of months
but that's still much better than the years and years of silence which we used to have.
Thank you very much.
And I think right now Google's disclosure is like 90 days to give you, so the kernel
mailing list is five days.
That's pretty tight.
And so if you didn't catch it, if you don't watch TechSnap, what happened kind of recently
is Google engineers found some significant bugs in Windows, notified Microsoft, Microsoft
took longer than Google's 90 days and Google publicly disclosed the vulnerability that
was in Windows before the patch was available to the public.
That happened at the beginning of like last year too, like it's happened twice now.
And it's kind of created this public feud about how we should disclose vulnerabilities
and how we do that when the code itself is open.
And it's a discussion that's really been going on for quite a while.
And yes, we'll have a link to the full video in the show notes.
Anybody have any comments in the Mumble Room about patch disclosures before we move on
to his next comment?
Yes, I actually just like to add that regardless, it always gives the people also the option
to not run the software until they actually are sure that the release was made, which
is often not considered, they are often just considering the developer side or the manufacturer
side and don't think that, okay, users should have an option on what he wants to do.
Make an informed choice.
Yes, exactly.
Yeah.
I completely agree.
Good point.
Okay.
So that was Linus coming down on that issue.
So the security community has sort of been grousing about that obviously because he runs
a pretty important project where security issues are critical.
So the question came up.
This guy got up.
He gets up in front of the audience and he just starts kind of harping on the kernel
developers for a little bit.
Give him a hard time for not knowing how memory allocation works maybe and that the documentation
sucks.
And so he eventually gets around to asking them, Linus, what the hell is your plan to
make kernel documentation better because it sucks right now?
The question today, I would ask which file manual we should have read.
Do you think that documentation of the kernel is appropriate?
Do you have any idea how to improve that?
Well, I clearly have no idea how to improve documentation of the kernel.
This is where others sometimes step up and do a great job of explaining small details.
At the same time, there was a talk yesterday about how programming should be provably correct
and it would be a great thing if we could prove correctness and that we all suck at
it and I don't take that approach.
I'm more of a touchy-feely guy and I actually, I believe in biological processes and I believe
in evolution and I believe in all these making mistakes and trying and we don't have documentation
for how humans work, but humans work really, really well except when they break down.
And I actually think we're at the stage and we have been at the stage in kernel development
and in a lot of technology where nobody really understands everything that's going on.
Nobody really understands everything that's going on, the VM is very complicated.
So his argument to, you know, he says like obviously there's rules and policies that
need to be documented, some of the broader concepts are documented, but it's an ever-changing
beast and just like the human body, it manages to go on without proper documentation.
Matt, what is your reaction to that?
I think he, you know, he kind of danced around it a little bit, which is kind of ironic for
a lot of us, but I think he pretty much nailed it.
You know, I think that's really kind of what it is.
It's trying to kind of find that sweet spot and yeah, it definitely felt like a bit of
a dance though.
It did feel like a bit of a ballroom thing as he went along.
He tried to nail it down and still sound diplomatic and it was kind of fun to watch.
I don't know how else to put that.
Derek Delvin, you've heard him make this comment before?
Yes, they actually, I've seen older talks that Linus made and he actually was talking
about that they're trying to improve and everything, but the result is people weren't reading and
they were just making the questions in the mailing list.
So the mailing list became the biggest documentation of the kernel.
So that makes, you know, the persons that are writing documentation not feel as inspired
to do that.
And of course, that with the speed of the kernel changes, which is like about seven
changes per hour or something like that, it's impossible to document all that.
So I don't feel like, unless you're working with an LTS release and you know it's going
to be frozen, I don't think there is really, you need to get to the cores and the rest
is just, the code needs to be self-documenting.
And if we enforce that and you know your code, you should be able to understand what's going
on.
You just need to know your code.
I like that.
Also, it makes me feel a lot better about my horrible documentation.
That's what Linus is good at.
He's really good at like coming up with sound rational justifications that make me feel
like less of a bad person.
I think that's why I like Linus Clips because I'm like, yeah, yeah, our studio, it's like
a human body.
It's organic.
It's always changing.
I don't feel so bad about that.
It does things, right?
Yeah, of course, kernel.org, it does, of course, have some documentation.
So that's true.
All right, Mumble Room.
Closing thoughts go to you.
Before we get out of here, anybody have anything else they want to contribute or add?
Going once, going twice, okay, very good.
Well then, we'll conclude at that.
Matt, something we're working on for Sunday.
I don't know if it's going to work out for sure, not because, well, we have, we're trying
to get somebody from the Trisco project lined up for Linux Action Show.
But as you would expect from the Trisco project, there's limitations on the technology we can
use to make the connection happen.
So we're working that out right now, probably going to use something like WebRTC or something
like that.
And if all that goes as planned, we'll have an interview with Trisco developer on Sunday's
Linux Action Show.
But even if we don't, we'll always have something great going on.
So I'll see you on Sunday, okay?
All right, see you then.
All right, everybody.
Well, I hope you enjoyed this week's episode of Linux Unplugged.
You can head over to jblive.tv Tuesdays, 2 p.m. Pacific, or just go to jupitabroadcasting.com
slash calendar to get it converted to your local time.
Then you join us live, you hang out in the chat room, you can join our virtual lug.
We love that.
And you can argue with me and Popey, that's always fun.
And also don't forget about that subreddit, linuxactionshow.reddit.com, make this a better
show.
And last but not least, that contact page, jupitabroadcasting.com slash contact.
Please send in your feedback, we'd love to read it.
Okay, everybody, thanks so much for tuning in to this week's episode of Linux Unplugged.
We'll see you back here next Tuesday.
I feel like this show, this episode was like a freight train, like it was just moving right
along.
Yeah, it really did.
Reading emails, calling guests, playing clips, reading emails, calling, no, it was just moving
right along.
javidtotles.com.
Yeah.
Will Unfilter be like a mumble edition tonight or no?
I don't know if we can because of having to get like a backup stream going.
I might need that computer for backup audio stream, but I'm going to say no now, but it
is going to be, hmm.
It would be a pleasant surprise if it happens and if not, no worries.
I hope people can join us live.
Unfilter is going to be, it's going to be fun doing that live coverage of the State
of the Union.
javidtotles.com.
javidtotles.com.
Oh, that's right.
People are talking tonight.
I forgot about that.
Yeah, yeah.
The people are talking about the cyber.
That whole TV thing, that was good.
I wish we could stop calling it cyber.
Yeah, no kidding.
No kidding.
Yeah.
Cyber.
Cybertron.
So I was going to ask you guys there, did you see this Mint PC?
It's a Mint mini box.
It's tiny.
It's like smaller than a NUC.
It's $89.
It comes with Ubuntu 14.04.
It's the version two.
There's been a Mint box before.
This is version two.
It's kind of AMD.
Wait, wait, wait, wait, wait, wait, wait, wait.
You said it comes with Ubuntu 14.04.
You mean it comes with Mint?
No.
That's what it says, but you're right.
Why would it?
It comes with Ubuntu 14.04.
Yeah.
That doesn't make any sense.
It must come with Mint.
I must be misreading it.
It comes with Mint, which is based on Ubuntu 14.04.
Oh, is that what they're saying?
It comes with Mint, but it's also not $89.
The one I saw- Oh, I am looking at different ones.
It's like $200 and something.
Yeah.
Yeah, that's what I'm saying.
Yeah.
Now that, see, yeah, I'm looking, you know what?
I'm looking at an Intel one.
I'm looking at this.
It's 89 bucks.
That's not bad, but boy, when you start looking at the specs, an AMD CPU, I just don't, I
don't know.
At 89 bucks, I mean, they could literally have it running with Hamster, so that's the
Intel version.
No, that's the Intel version.
Oh.
I don't know.
I mean, am I just a-
The Mint box, that's all, but that's that minty green, white, yeah, it's 295.
It's 295 USD and also 295 euros per ounce.
Yeah.
Yeah, 295 though, just doesn't seem like-
At 295, I expect Intel.
Yeah, I want to know.
I would never go into it.
I don't get it.
Who are these for?
Probably the same people that did the Mint, whatever the previous one was, the Mint box
and the Mint thing.
Maybe like, or businesses, right?
Like if you're going to deploy a whole bunch of Mint workstations or something.
I guess.
Yeah.
Yeah, maybe.
No, it can still do all of that and still have technically better hardware.
You could get, you could spend less money and get like twice as much RAM.
Yeah.
Ah, but remember, and multi-billion dollar businesses are built around this philosophy,
make it out of the box.
Don't make someone else have to do it.
And so some people, and that may be what they're targeting, is they're providing it out of
the box experience versus the buy a duck and do it yourself, which is my preference.
Right.
Yeah.
Right.
That's what it is, right?
That's what it is.
Must be.
Must be.
What do you guys think of Unity of Things as our title?
You like Unity of Things?
I like it.
Yeah, I like it.
Interview.
Yeah, we do have the interview in there too.
Should that be the, should that be the lead?
I think it should.
I think so.
I actually suggested Building Builder.
Building Builder is not bad.
Build the Gnome.
Build the Gnome is good.
Building Builder, I see, I don't know though, I feel like it's going to, I think a lot of
people aren't going to know what we're talking about with that title.
Well, it sounds like Bob the Builder or something.
It just seems off.
Oh, now you got that stuck in my head, Matt.
You still have Fraggle Rock going on in your brain, you're all right.
Dude, I'm still running Firefox here.
Yeah, that's your, that's your bad.
You're just, you're just.
I'm still bitching about it.
I'm still running it.
You're just punishing yourself.
You're punishing yourself.
So, Popey, what, what is not good about Firefox from your point of view?
So I had to uninstall Flash, which, you know, arguably is, you know, a good thing for some
people, but I had to uninstall it because it caused the browser to crash.
I then had to disable the Cisco H.264 plugin because that caused the browser to crash.
So now I have no H.264 built in video playback in Firefox and no Flash playback.
So what are you doing for that stuff?
I'm not.
I go to my BBC News website and it says embedded Flash, you don't have Flash.
So I then copy and paste that into a command line window where I then get a VLC or whatever
window pop up and I can play my video that way.
So yeah, I feel like I'm 1990s Linux guy.
I don't know.
What the heck?
If you think about it, though, like most of the time, out of all the stuff that plays
on a website, you only want like 1% of it.
So if you have like Guaker or something like that, you drop down the terminal, you drop
in a URL.
It's not that bad, I suppose.
Yeah, yeah.
It's not so bad.
It's just not seamless.
So I'm running Firefox and I'm preparing a blog article about Firefox versus Chrome for
UK streaming services.
And long story short is once I put the HAL stub in, which just does the crypto bits for
Flash, on Firefox I can watch all of the UK streaming services, but on Chrome I can't
watch, I think it's Channel 4 and Amazon Prime.
And of course I can't watch Netflix because there's no EME.
But apart from Netflix, Firefox with Flash and a stub for HAL, I can watch all of the
major UK streaming services and on Chrome I can't.
I can only watch half of them.
To be fair, Firefox, Mozilla have just put out a new version of Firefox.
So what I'll do is I'll go through the same rigmarole and I'll reinstall Flash and see
if that makes any difference and I'll re-enable the Cisco plugin and see if it makes any difference.
I did this on my Boxing Day though, so this was the last version that I was using and
I've never had a problem with the H.264 codec other than the Flash implementation is ancient.
The only reason I had a problem with the H.264 plugin is because I disabled Flash.
I went to Imgur or Imgur or whatever you call it and it detects that I don't have Flash
and serves me up H.264 video adverts and it was an H.264 video advert that crashed the
browser and it sent a bug report to Mozilla and all that and I'm sure someone will look
at that and go, huh, fancy.
But I will try it again with the new version because I'm sticking with it.
There was a total, they pulled in a new revision of the open H.264 codec for the newest version
of Firefox.
I don't know if that will fix things.
Sweet.
I'll get it going.
Yeah.
Honestly, as a Windows user and a Linux user, Flash is always a culprit with Firefox.
If we ever get rid of Flash, we'll be rid of these problems.
Well, see that's the flip side is I've actually, having got rid of it on my system, I haven't
got it on there at all, arguably, I'm actually a better person.
I feel like I'm a net contributor to humanity by not having Flash installed.
Good job.
You're a hero.
Well, if you want Flash, you can go and do Fresh Player Plugin and that allows Pepper
Flash to be used inside of Firefox and that actually solves, I have not had a single problem
with Firefox, specifically Flash problems with Firefox since I did that.
And I run Nightly and that's been incumbent with bugs.
Hey, so Chris, you see how we've successfully derailed your I'm going to try KDE into another
rant about Firefox.
Oh, that was good.
That's good.
That's all I had for the KDE thing anyway, so that's fine.
For now, for now, for now.
I don't know.
To me, it just seems like all this stuff isn't worth it.
There's more stuff to do in the day than fight this stuff.
So I just feel like if I need Flash, I use Chrome and I just have Chrome from Google,
not Chromium.
I'm using Chrome from Google and that's where my Flash happens and then I do other stuff
in my other browsers and that works fine for me.
I disagree.
I don't think there are enough things in the day to cause us pain, which is why right now
I'm attempting to install MS-DOS 6.22 on my laptop.
You are crazy.
You are crazy.
