Welcome to Linux Unplugged, your weekly Linux talk show that's phoning it in for the holidays.
My name is Chris.
My name is Wes.
Oh, I tease.
Actually, Wes, I'm pretty excited about today's episode.
You should be.
Thank you.
We have some good stuff lined up.
We're going to do a retrospective of some of the more relevant topics we covered this
year.
Like I was teasing previously on the pre-show, this is the episode that makes everybody sound
really smart.
I just take their best bits and we throw it into this week's episode.
Because they're awesome.
We love our audience.
Yeah, and then when we come back on the week after Christmas, we're going to look back
at some of these topics and we're going to look forward to 2016 as well.
So I think we have a pretty good show lined up, so stick with us for our special holiday
episode here on the Linux Unplugged program that we have created and crafted just for
you.
If you've never listened to Linux Unplugged before or if you've been listening for the
entire 2015 year, there is something in this week's episode of the show.
So thank you very much for tuning in.
And while we're still in the intro, let's bring in that Mumble Room.
Time appropriate greetings, Mumble Room.
Hello.
Happy holidays.
Happy holidays.
Happy holidays.
Happy holidays, guys.
Thank you for joining us.
So we got something that came in on the mail.
Came in, knock, knock on the door.
Before we started the show, we got a brand new package that came in and we thought, what
the heck is it?
Was it a Christmas gift?
Was it a Kwanzaa gift?
Surprise.
And I started, it's funny, the box actually said, tear it open.
That's what the box says on the front of it.
Tear into it.
And I'm like, well, that's a challenge.
All right.
Yes, it is.
So I began to rip the box open.
I pulled it out and something very orange emerged from that box.
I think it's called the Kano and we're going to talk about this.
So the Kano appears to be a computer kit built for kids.
It has a Raspberry Pi as its brain.
And Wes, we have it right here in studio.
And I was thinking, you know, it comes with this keyboard.
It comes with this nice acrylic case.
It's got a touchpad.
It's got all the cables you need.
This is like, if you wanted to give a Raspberry Pi to a kid, it comes with the stickers.
Like this is legitimate, like very compelling for a kid and the packaging is like Christmas
ready.
I mean, it's all you could ask for.
This is a kid for like a cool, fun, tech gift.
Seriously, this is like a Raspberry Pi for the holidays.
It comes with a speaker so you can make it a podcast player or an MP3 player.
My parents have Windows 10 on the desktop, but I want my own system.
It comes, look at this, comes with the HDMI out, comes with the USB wireless keyboard with
a touchpad.
Yeah.
It's got the wire there too.
Look at this thing.
Dang, son.
I know.
This is a...
And the Rubik's cube?
Does it come with that?
All right.
All right, Wes.
So here's the challenge.
I want you to open this thing on the show live and give us your impressions of it, but
don't ruin it in case I want to give it to my kids.
They don't listen, right?
To none of your shows, I would hope.
No, not yet at least.
Not yet.
Maybe one day.
So yeah, it looks like a pretty nice box and oh, look at this.
The box actually has an illustration on it.
It's beautiful.
It's got the Raspberry Pi laid out.
This is a really nicely done packaging for this thing.
Oh, look at that.
Okay.
All right.
It's a little nicer than I expected.
Do you need anything to cut?
Do you need a...
I do.
You got keys on you, Wes?
No, you took your keys out of your pocket.
I took my keys out.
Wes!
I'm an amateur.
Use this pen.
Use this pen.
I could probably cut it with the Onion Omega over here.
Don't use the Onion Omega, Wes.
Don't use the Onion Omega.
This is really something.
And their website is us.kano.me.
There we go.
That is a premium lid.
Wow.
I wish we had the camera on for this episode.
It is...
I don't know how to describe this.
Wes is...
The smell?
Sublime.
Let me see.
Yeah, that does smell good.
So you open it up.
It has a pouch on the roof of packets with a one, two, and then underneath it, it has...
And this is all premium.
I mean, it's like nice, heavy, matte cardstock.
Yeah.
Then down here, look at this poster.
That is super gloss.
They have like a thick poster paper here.
Nice foam insert.
It says, keep this card.
You've built your computer.
Oh my God.
Okay.
This keyboard is amazing.
This is...
The keyboard is bright orange.
It's wireless.
It has a built-in trackpad.
It is...
It feels...
This is really well done.
I want that keyboard for just my own use.
Look at that Raspberry Pi.
Look at that in there.
That is...
This is...
This is super neat.
This is really well done.
So here's the keyboard.
Here's...
It's got an HDMI cable.
What's this right here, Wes?
Is that just USB there?
That is a...
For charging?
Yep.
USB, micro USB.
And then here's the speaker you can add on right there, which looks really nice.
And what do you have there?
What is that red...
I don't know.
Oh.
Is that a power adapter?
Oh, yeah.
It's a power adapter.
Sure.
Sure.
Sure.
Yeah.
So you can power the Raspberry Pi.
So this is everything you need about the screen to make the Raspberry Pi a full-fledged computer.
Oh, and it comes with here a US adapter.
Yeah.
The suitable power adapter for yours.
So if you have a display that works with HDMI, this is everything you need.
Which is what?
Just about everything these days.
This is literally everything you need to make the Raspberry Pi a full-fledged computer.
And then you put Ubuntu Mate on there and you're good to go.
Right?
I mean, and this is like a whole sandbox.
You can let your kid, your teen, like whatever, right?
You.
You can have a whole separate thing.
You don't break it.
This is...
Look at this keyboard.
I mean, this is...
That right there is really something.
So they sent this into the studio and this is remarkable.
Yeah.
Wes is smelling right now.
It has that new computer smell, right?
I love it.
So it's Kano.
The trackpad feels really nice.
It comes with really easy books.
I think this is gonna...
I think this is gonna go under the Christmas tree this year.
That is really cool.
And you know, just a couple episodes ago, we were talking about these small computers.
Wimby, you might have yourself a whole bunch of Ubuntu Mate computers under the Christmas
tree this year if this takes off.
This is really impressive.
Is there an SD card in there, too?
Yeah.
Are they Pi 1s or Pi 2s?
I think it's a Pi 1, but I don't know.
Oh, no.
I take it back.
No.
No.
It is a Raspberry Pi 2.
Excellent.
It is a Raspberry Pi 2 and it comes with an SD card with the Kano...
Look, it's a branded SD card.
Ooh.
With a cute guy with a nice little, like, bowl cut.
Yeah.
It's a nice...
Like, it's not like a...
Wait a minute, Wes.
Look at that.
It has micro SD in there.
Pull that micro SD out.
How big is that micro SD storage there?
What does it say?
Can you see the space on there?
SanDisk.
Do you see the space on there?
Eight gigs.
So it comes with an eight gig micro SD card.
You know, if you already have, let's say, 64 gigabyte for your camera, et cetera, you
just give that to your kid.
He has a full thing.
Holy crap.
Oh, we should take a picture of that.
That is a cute SD card adapter.
Yeah.
They really put all the final nice touches on this.
The keyboard is very high quality.
The acrylic case is really, really nice.
It's really strong.
It includes a USB wireless dongle.
Look at this tiny USB wireless dongle.
Whoa.
Look at that.
It includes that too.
This is remarkable.
This is going under the Christmas tree.
This is really something, which is great.
This is just great.
And this seems like such a good gift for someone like you're an aunt or an uncle, and maybe
you don't see this kid so much, but you know that they're kind of interested in this area.
You don't have time to maybe spend with them all the time, but you just want to set them
on the right path.
That is really neat.
That is something.
Huh.
But yeah.
There you go.
That's pretty neat.
And we just a little live unboxing right here on the Unplugged show.
You know, guys, one of the things that was a big topic this year that was something that
was fun, we talked about it as a here is a crowdfunding project.
It started as like I think it was Indiegogo, I don't recall.
It starts as an Indiegogo, becomes a key point to developing applications for the GNOME desktop.
The guy gets a job at Red Hat now, and now it's part of like the XGD app spec to make
portable applications for the Linux desktop.
I'm talking about GNOME Builder, and we discussed GNOME Builder on episode 76 of the Unplugged
program.
Matt, I'm going to try giving a guest a call.
Let's see if...
All right.
Hey, Christian, can you hear us?
Yeah, I can hear you.
Can you hear me?
Yeah, we hear you great.
Sure can.
Thanks for coming on the show.
So Matt, this is Christian.
He's working on GNOME Builder.
Awesome.
And you're probably familiar.
We've talked about the Indiegogo project that's going on.
Christian, welcome to Linux Unplugged.
Thanks.
Thanks for having me.
Oh, no, no problem.
Congratulations, by the way, on the success of the GNOME Builder project.
That seems like that Indiegogo has probably gone better than you expected, I would imagine.
Yeah.
I mean, significantly better than I expected.
I tried to set some pretty ambitious goals, but at a very, very reasonable price point.
And I'm hoping that people saw that and really came out to help.
Well, what struck me about it is you seem like maybe you're a crazy person because you
quit your full-time job to do this.
Why take that risk?
And you did that even before you launched the fundraiser.
Yeah.
You know, I've been a part of the free software community for a long time.
And at some point, I decided that fixing the tools that we're all using is far more important
than individual career growth to me.
So I had a pretty kickass job, too.
I was working at MongoDB, working on their C driver.
And it's a great group of people there.
They really care about free software.
There's a reason why the products say GPL licensed.
But ultimately, this was the most important thing I could be doing.
So I really had to make the switch.
That's very impressive and very admirable.
So when you launched the fundraiser, has the scope of what GNOME Builder is going to include
expanded quite a bit since the funding kicked in?
Well, you know, it really determines how much and for how long people are willing to support
me.
Like, yes, I want all of these features in there.
You know, I knew that for me to be able to be successful with this, the most important
thing I can do is build Builder with Builder.
So that meant the first priority is C. And so we need C. Builder has to be written in
C for technical reasons.
We want to reuse as much of the software as we can.
We want to reuse Glade.
We want to reuse Dev Help.
We want to reuse Git G, GTK Source View.
And all these things are best integrated from C.
So that didn't mean that we don't want to support VALA, you know.
It doesn't mean we don't want to support Python or JavaScript or any of these other languages
in a first-class way.
It just means that, like, our priority had to be this first.
So I knew that a lot of people would really care about those languages, and I really want
to support them.
It just, you know, it can't be the first thing to be done.
We can't, you know, put the cart before the horse.
Right.
That makes sense.
So I think that means that you get that right, and then once you get that right, you move
on from there.
But this looks like maybe, is it going to become a general IDE for GNOME eventually,
like all kinds of languages in there, all kinds of support?
I mean, that is certainly my goal.
You know, I don't care what language you write GNOME software in, and most of us don't.
So anything I can do to bring more people in and more people contributing, I'm perfectly
happy to do that.
You know, we already have basic support for some of these languages.
You already get, like, Air Reporting for VALA.
You already get Air Reporting for Go if you have, like, a working Go set up.
So you know, even beyond GNOME, someday that's quite possible.
But I definitely want to stay focused myself on, like, how do we build GNOME software better?
Yeah.
And it seems like this would be a great tool for when somebody asks the question, where
do I get started?
People can say, okay, get started with Builder and go from there, which is, it seems like
such a simple thing to be able to say, but we have lacked that one coherent answer for
so long that I've talked to a lot of developers who've been put off by that.
It just seems like there's so many choices.
And this represents, well, if you're going to go GNOME, if you're going to do GTK, start
here.
Now, that itself is a huge goal.
And so I'm pretty impressed that you've raised $42,000.
But what happens six, seven, eight months from now?
This is your full-time job.
That funding sort of begins to wane.
How do you make it ongoing?
What's the trick there?
Yeah, I mean, I think a really important thing is to, number one, build a really strong community
so we can all share the burden.
But on the point that you mentioned there of having a single answer to tell people,
that is really, really important.
For my time spending helping people get started in free software, almost always the first
question is, how do I get started?
And it's a really monumental thing to get over.
And you look at something like Android or whatever, you know, they have an IDE that
you install, and there's other choices, but there's a blessed sort of way.
And you enable developer mode on your phone.
I'd really like to see that in terms of GNOME, you know, where you're just able to enable
developer mode in the control settings, and then all of a sudden you have a complete development
environment.
And everything else is done underneath the hood, and you don't have to worry about it.
So would a goal of yours be maybe to have Builder almost kind of considered a part of
a GNOME desktop, maybe like in developer mode, where it's almost under the branch of GNOME?
Absolutely.
Fascinating.
I mean, this is, I think, I contributed.
I think it's just a great project initiative, and we'll have a link in the show notes.
So Christian, I guess you're already working now, so does anything change for you now that
this is successful, or are you just plowing on forward?
Well, you know, the last couple of weeks I've been so busy with fundraising and communicating
with people, and so the amount of code I've gotten written in January is significantly
less than all of the other months.
So I'm really looking forward to just, you know, putting the blinders on and writing
code again.
Yeah, absolutely.
GNOME Builder has seen a lot of attention since we covered it in episode 76.
And Wes, do you have any thoughts on it since that episode?
Now, here we are at the end of the year.
Only that I'm really excited for the future of a nice GNOME native Python IDE.
Yeah.
You know, I mean, I use Vim pretty much for everything, but a lot of my coworkers, they're
using Sublime, they're using Atom, Visual Code, there's a lot of options these days.
And I think GNOME needs something, and I think Python is used by, you know, it's installed
by default.
In a lot of places, GNOME is installed by default.
So I'm excited in this new year to try out GNOME Builder.
There you go.
And I think that what I'm excited about is that it's given a lot of people like, hey,
I want to create a desktop application, I want to use GTK.
Something to target.
What's my entrance path?
Exactly.
Yeah, I do like that quite a bit.
All right, now, I want to move forward to something that was very exciting, very fun
for us on episode 79 this year.
It was the episode we did right before the new BQ Phone actually went on sale.
Popey joined us and he went in depth on some of the stuff around it, and we just had a
great discussion around the new launch and what people should expect about what we're
all really here gathered today to talk about.
And that's this new BQ Phone that goes on sale next week.
It's like around 170, I think, what is that?
Probably like 100, I don't know, about $175.
I don't know what it's going for exactly, US.
And there's even a little video.
Now, I don't think there's a lot of words in this video, so I'll just, I'll just put
it up on the stream so we can look at it.
I mean, it's definitely a very fancy video.
After all of the waiting, I mean, I know it's only been a couple of years, but it feels,
I mean, that's a long time.
In the scheme of developing something like this, that's not actually a long time, but
for people sitting on the outside, it feels like a long time.
And so this video is extremely well done.
Popey, I don't know if, do you know any of the background on this video?
Like this is-
No, the first time I saw it was last Friday.
It was shown off at an event in London and I'd never seen it before.
And actually, the bits where you see outside that go on top of a building is actually on
top of our office building.
I can recognize certain parts of London in the video.
I think, and we'll have the video linked in the show notes, I think one of the things
the video does really well for me is it's essentially, without being too obvious about
it, showing me kind of how Ubuntu Touch would sort of fit in with the ideal daily lifestyle
that of course nobody truly lives.
But if you live that, like I get like contextual information becomes available to me just by
watching that commercial.
Like it's surprisingly effective.
Life at your fingertips is the slogan.
That's pretty good.
This is really well done.
I think so.
I think they did a nice job with it.
I think it's going to be interesting to see where it goes to.
So the Aquarius E4 5, 4.5, it's 4.5 inch screen, huh?
Well, so there you go.
So the BQ phone, it's not like, it's not a screamer of a phone.
It's not going to blow you away with its stats.
It's got a 4.5 inch screen, runs at 540 by 960 resolution, 1.3 gigahertz quad core ARM
Cortex A7 MediaTek CPU, a Mali 400 GPU at 500 megahertz, again MediaTek, 8 gigabyte
EMC storage, 1 gigabyte of RAM, 2150 mil amp battery, dual micro SIM, and 8 megapixel
rear shooter.
As far as first goes, it's not bad, especially if you consider that for a certain sector
of the market, that's plenty phone.
I think anyone coming into the smartphone space for the first time is going to be pleasantly
surprised.
And I think that's really where they're going to hit their sweet spot.
That's where I would target.
I think that seems like that's what they're doing.
Now it's not launching in the US yet.
But it is available.
It'll be available.
I wonder if I'll still be able to buy it.
So the event that happened last Friday, there were 30 people invited from various places
around the world.
Yeah, it was called the Insiders event, the Ubuntu Insiders.
They were actually invited a couple of months ago.
We built a list of people that we thought might be interesting to come along and see
it.
And there was a couple of journalists, a couple of video bloggers, and some like blogger bloggers,
quite written bloggers, and members of our community, developers, and what you might
call outsiders from the community.
Just come along and we give them a phone and they get to be the first people with one of
these devices.
We also gave them a few little tidbits of information over the month leading up to it.
And then we flew them out to London on Friday and they came and saw that video and a couple
of talks by, there was a guy from BQ there, there was a couple of people from Canonical
giving talks.
It was really good fun.
And they got to leave with a phone, right?
Yeah, we gave them all a phone and it was in a special origami presentation box.
There was a phone and a pair of nice headphones.
It even warranted the Ubuntu phones first official unboxing video, which OMG Ubuntu
picked up and ran.
Had a bunch of phone boxes.
Slick, I got to say, that's a nice looking box.
It was funny.
We were asking them, look, do you mind if we video you opening because we know what
it's like.
People want to see the thing unboxed.
And so the video that you're showing now of, that's Jordan Keys unboxing his, he actually
ran back to his hotel room or ran back to another room in order to do that.
And then we went out for beer in the evening while his video was rendering out.
And then he uploaded it to YouTube when he got back after a few beers.
Good sport.
Good sport.
It was good.
It was a good day.
I noticed too, I noticed that they come with a, the Insiders Edition came with a very nice
set of just headphones, like an extra perk there.
It's really cool.
Yeah.
Yeah, we wanted to give them a little bit of something extra to say thank you for taking
part and, and, you know, coming all the way to the UK.
I mean, some of them flew over, some of them didn't have fast come, but it was nice of
them to come over and just take part and, and give us feedback as well.
You know, we've been capturing feedback from them.
It, you know, I was walking around on a Friday with a notebook, old style paper notebook,
and people were saying, Hey, what about this?
And how does that work?
And why is this like this?
And I was making lists and, you know, I've been giving feedback to developers and filing
bugs, like, you know, doing all the due diligence because these are the first people that have
seen them outside Canonical.
We've all seen it evolve.
You know, I've had one of those phones since August last year.
And I use it every day, but there are things you just don't notice.
And then when someone walks up to you and goes, Oh, why, why is it doing allowing me
to do this?
And you think, Oh, wow.
Yeah, you're right.
Yeah.
Yeah.
It's just something because you use it every day.
You just don't think that's weird.
You shouldn't do that.
Yeah, very much so.
That is very true.
So, so actually they, they go on sale as a flash sale starting tomorrow, which is Wednesday,
the 11th of February at eight, uh, eight o'clock UTC.
So it's nine central European time, only going to be available for a limited time or suckers
like me.
Are we going to be able to buy it or is it only going to be, is it a regional day?
So it's nine, nine, the central, uh, European time until six central, so eight till five
UTC.
Um, so yeah, it's a fairly lengthy amount of time throughout the day.
It's not like, you know, a 10 minute flash sale.
It's not like the whole world has to DDoS.
So I might actually get one for the day.
You could try, I have a shot.
Yeah.
I'm certainly going to bed early so I could get up.
It's like Christmas for me tomorrow cause I'm going to be ordering one obviously.
Yeah.
Um, you know, we're, we're all going to be ordering them.
Are you pretty excited?
Yeah, it's, it's, you know, the fact that, you know, I started working at Canonical three
years ago knowing that this was going to happen and it's taken a long time for us to get here.
And we've, you know, we've had a lot of flack along the way and the method by which we've
developed this and the software choices that we've made and the, the hardware specification
of the first device, you know, this is, remember, this is the first Ubuntu phone, uh, hopefully
one of many devices, you know, if we come back on, um, unplugged episode 600, there'll
be, you know, a plethora of these phones out there, who knows, you know,
Are you already looking at the next device a little bit?
Cause I know they,
Yeah, yeah.
We've already said the next one is the Meizu.
Yeah.
It's going to be a little more, uh, like a larger screen, right?
One thing.
And, uh,
Yeah, it's, uh, yeah.
It's quite a bigger screen and more, it's, uh, more cores, more RAM, you know, more and
bigger of everything.
But, um, yeah, the moment we're just totally focused on the BQ1.
How important was it, uh, you know, you mentioned that you've had one iteration of this, another
since August.
Is that part of why, you know, you got to start and you kind of have to lock in the
specs at someplace and then start developing for that.
And so, uh, this, the BQ phone, it's sort of been locked in for a while, I take it.
Yeah.
Right.
And so we initially were, you know, we've had loads of different hardware over the time
that we've developed this.
We started off with a tablet edition on an Asus transformer TF-101 and we've moved through
very, uh, Nokia N9 and various Samsung galaxies and nexus devices.
And you know, then we got a partner in BQ.
So we grabbed a bunch of those devices and we started doing the hardware enablement and
making sure all the apps work because, you know, if we've been focusing on the Nexus
4, then we discover that, oh, actually certain dialogues don't fit on the screen.
I was wondering about that.
Because this thing's slightly different.
So we have to make sure all our apps and the dash is responsive and, you know, scales down
to devices of this size.
And it's actually made us more disciplined.
Having a device that has more constrained hardware resources is probably better for
us.
If we'd have had the MX4 first and had, you know, octo core with two gig of RAM, we could
have gone nuts and, you know, made some decisions that actually we'd regret later because we'd
have to try and scale it back.
Whereas from what I'm told, um, even unoptimized on the MX4, it flies along.
I haven't actually got one myself, but I'm told it flies along.
Um, and it's, you know, it's pretty good on this BQ device and we've still got some more
optimization to do.
Um, so yeah, there's still work and we're still ongoing.
And the good thing is that we continue to deliver updates to that device.
So even when we moved on to the, to the MX4 and the next device and the next device, all
the previous devices continue to get those updates.
God, the MX4 looks so sweet.
Wow.
This looks like a, yeah, yeah.
I mean, I want the BQ just to have the experience, but I think the one I'm going to land on would
be the MX4.
This is an incredible phone.
I want them all.
Yeah, well sure.
Of course.
That's like trading cards.
Yeah.
Hmm.
Yeah, exactly.
Yeah.
So how much, how much energy do you, do you suspect Canonical will put into, uh, sort
of like, I don't want to know if a generic image is the right one, but an image that's
essentially with some modifications that'll work on most smartphones.
Is that something Canonical will ever do?
You can't really do that because the ARM architecture is going to let you.
So there's a couple of things, you know, ARM doesn't really have the concept that the PC
world has in terms of ACPI and device discovery, you know, that's, that, that's very mature
on the PC and you can have one co-base stick, a USB stick in it and it will boot, auto discover
everything and figure out what drivers to load at runtime.
Um, and the second problem is most, um, SOCs, most of the chips that are in phones have
binary blobs and you know, that's, that's sad and disappointing and, but that's just
the world we, we live in right now.
There are no free soft, fully free software phones, none, none whatsoever.
So whenever anyone complains to us that we're not a fully free software phone, well, good
luck finding one.
Well, yeah, if you want to, if you want a phone that makes phone calls, right?
Yeah.
Or is usable in any way, shape or form.
Um, so we, you know, we, we have to build, um, an image that is usable, you know, usable
on a specific device, but that's, that's actually where we've been quite cunning with this is
that we have multiple layers to the, to the, um, image that goes on the, on the phone.
That's the very base layer, which is the device specific part.
And that's, you know, there'll be a device specific bit for BQ, a device specific bit
for the MX4 and then ongoing devices.
What is that?
Is that, is that a specific kernel?
What, what is that layer composed of?
Yeah.
So that's the, that's effectively the kernel and the drivers for things like the GPU, the
radios and all that, the sensors, you know, so, so for example, if a device comes along
that has a fingerprint sensor, just for the sake of argument, you know, we might want
to support that and there'll be a device specific thing, driver that would need to go in.
But on top of that is the second layer, which is the user space bit, which has got all of
our Ubuntu stuff in and the dash.
And then on top of that is your apps, but also the, the OEM or the carrier, um, can
put their own additional bit on top.
So, so we control a bit in the middle.
That's, that's the, um, the app, the, the API and all the stuff people write.
Yeah.
And the dash and the common bit that you would see across all the devices, the bit at the
bottom is the device enablement.
And so that means that when a new device comes out, all we need to do is do the device enablement
and then it's the same user space that runs on those.
And so when, when, when we want to update an old device, we just update the middle section
and the device enablement bit stays the same.
That's a really good approach.
And it means you don't have that fragmentation that, that Android has.
We have, you know, we can have lots of different devices on the market and they're all effectively
running the same code.
Well, and it seems like it's approachable by just a, you know, a fairly well organized
community could come together and say, all right, well, we'll take on supporting the
Nexus 4 for another couple of years, or we'll make a Nexus 5 port and me as a more sophisticated
user could say, you know what?
I know this community.
I'll go use their image because if I'm following you, the only thing they would really have
to modify would be that first layer, that, that lower level bits, right?
Right.
So if someone has already created the Nexus 5 port, as you know, and you know, it has
issues, it's not perfect hardware wise.
We're going to continue to maintain the Nexus 4, Nexus 7, and Nexus 10, and then whatever,
wherever other devices come along that we have to support, you know, for a contractual
agreement for things like PQ and Meizu and, and, and so on.
So we'll continue to maintain, you know, a whole bunch of devices going, going forward.
Hmm.
All right.
I got a couple more questions and then, and then we'll open up the moment.
Here we are at the end of the year and it's been very interesting.
Popey joins us.
Hey Popey.
So what are your thoughts now, a little bit after launch of the first phone and sort of
looking back on all of that?
So at the time when, you know, before it, before it was announced and before it was
released, we really had no idea how many people would buy one and you know, whether, whether
they would all get sent back or, you know, whether people would keep them or continue
and develop software with it, you know, we just didn't know what people would do.
And it turns out that, you know, now, however many months later, what is it now?
Eight months later, we're still pushing out images, updates every six weeks.
In fact, we're doing a, an extra one just before Christmas.
I think you'll probably land on phones like a few days before Christmas with some you
know, hot fix updates, but people are still using it.
They're still using it for developing apps.
Some people are using it as their daily driver, you know, not a huge number of people, but
we didn't expect, you know, we weren't expecting millions of people to buy them, but what surprised
us was BQ were so impressed with the sales figures that they wanted to sell another one
and then they wanted to sell another one.
And so next year there's going to be more phones from BQ.
That's a big deal.
That's really exciting.
Of how successful it was this year, which is great because you know, that's validation
that we're doing something right if one of our partners actually says to us, yeah, we
want to make more of them.
So yeah, it's been a good year.
Yeah, that is probably the best benchmark to go by right there.
Great point.
So one of the things that I got a lot of crap for this year, and I feel like it maybe was
a little undeserved looking back at it, but maybe it wasn't, I don't know, but I went
on a rampage against ButterFS.
In episode, let's see, what was it, I think 87, looking back on it, I think I declared
it a clown file system.
Okay, so I had a real rough day.
I came in and I could not get my computer to start.
I sat down at my desk, turned on the nice ASUS monitor that I am quite proud of acquiring,
and I stare at a screen and it's nothing but errors, Matt.
Nothing but errors.
Oh no.
And if you're watching the video version of the unplugged program, I'm going to pull those
errors up on my screen right now.
It was devastating.
It starts as this, booting the Linux kernel, starting version 218.
Oh yeah, you know what that is.
And then, hold on a second, info, task mount 175, blocked for more than 120 seconds, uh-oh,
uh-oh, task ButterFS transaction 197, blocked for more than 120 seconds, uh-oh, and that's
all it ever did.
And then now of course, so here's Chris's conundrum.
Chris has a show he has to go to, and he needs a computer right now.
I do not have really, so here's what runs through my head when my most important computer
doesn't boot, I think to myself.
Well, I should go grab a live USB stick and probably boot in there, see if I can get the
main OS up and just, you know, maybe root in there and get everything I need and fix
it later.
Like I'm starting thinking like maybe I could like zombify this thing and like prop it up
and like get in there, get my work done for the day and then like get out before the whole
thing collapses out from underneath me, and I'm like, nah, I'm not going to do that.
Okay, so I'm starting to think, okay, what are my other options?
Well, I had just the night before installed Ubuntu Mate 1504 Beta 2, I think it is right
now.
I think that's the current one.
That's right.
That is.
Yes.
And so I had a USB stick already flashed.
I love, you know what, also props to Ubuntu Mate, really, I think the only distro where
you just go to their website and the download links and you put ddrescue up there, the command
to run, and you just make it real clear, use ddrescue to write this ISO to a thumb drive.
Everybody else always recommends dd, and a lot of times they don't just clearly put the
command right there above the download links.
It makes it so clear, and the fact that you also update the name of the ISO image so you
literally could just copy that whole command is just brilliant.
It is so helpful because I myself always end up using dd, and I forget to use ddrescue,
which is way better to write an ISO file to a flash drive.
So anyways, props to Mate.
So I had this thumb stick ready to go, and I needed to get working right here right now.
So I stick the Ubuntu Mate 1504 USB thumb drive into my rig, I reboot, and I get into
the desktop environment.
It's pretty snappy, in fact, it's unbelievably snappy.
It's so fast that I was grousing to Rikai who was standing over me because he's trying
to console me as I have been mortally wounded, and this gray screen comes up, and I start
grousing, oh man, now I've got to wait for the fancy grub screen to render because this
monitor is so large that anytime there's a big graphical grub screen comes up, it slowly
paints onto my screen, and I'm sitting here grousing about that.
And what I realized was that that actually wasn't the case at all.
What I thought was the grub screen was actually X11 starting.
It had booted so fast that I thought I was waiting for grub, but I was actually waiting
for the entire desktop environment.
It was amazing.
It boots so fast.
It was so cool.
So I install.
I'm like, after that, I'm like, that's it?
That's all I needed?
I just needed my computer to be really fast and I just want to get back to work as fast
as possible.
I've got to do some clipping.
And so I installed Ubuntu Mate on my main workstation, this is my rig up in my office,
and I used it for a couple of days, a day, I think I used it for a day actually, and
I ran into a couple of issues.
First of all, here's the thing you don't want to do.
It's not really a great idea to use a beta version on your main workstation because so
many of the PPAs out there don't work with it.
They expect you to be on a released version of Ubuntu.
So as soon as you start setting up PPAs for like themes or like a calendar widget or whatever,
you just start getting 404s in your app get update like an animal constantly.
It's just a horrible mess.
And then you end up like, you know, having to go out there and pull some of them out.
So that was a bit disappointing and things like Telegram not working sort of were deal
breakers for me.
And I ended up going back with Antigros because it was it was so early in the process, I could
jump back.
So now I'm sort of at square zero and sort of setting up and trying to get advice from
the audience on what should I try because I haven't set this machine up in about a year
and a half.
So what would you try at this point?
And I've already got some base stuff on there, but I have to say it was pretty slick.
So here's a couple of things I did in Ubuntu Mate 1504 is I used Ubuntu or I'm sorry, mate
tweak to turn on compass and to set my style.
So I had like a more of a bar layout that I liked quite a bit.
And that was really, really easy to set up.
Really slick.
I decided I opted to use the new mate menu.
And I was pleased to see the super key activated that.
So I was all really good.
The main problems I ran into with the mate menu were like sometimes when I hit the super
key, it would pop up behind other windows.
So when I would type, I couldn't see the results.
And sometimes it was a little delayed and popping up.
So I'd probably still if I was going to stick with that desktop, I would probably use a
dedicated launcher like synapse or gnome do or whatever the hell.
But it's such a nice setup.
Like I was using that and I could physically I just felt my computer was like it felt like
it was running faster.
And I really was impressed by that.
So Ubuntu Mate edition 1504 is looking really sharp.
I ended up keeping it on the computer I'm setting up for my son.
So he'll be running that for a while.
And I'm now running Antigros with gnome 3 on my main office workstation.
And it was tough.
It was tough.
It was really tough.
Now, did anybody catch that error message?
And maybe what was the problem?
Oh, you did, poppy?
Yeah.
So how long did you leave it after the four minutes?
I actually left it overnight.
And it just kept repeating.
Yeah, and it just kept repeating the same message.
Interesting.
So my home server running better fs does that now and again.
And all I do, but that's after it's booted, like and it's fine.
And it's up.
I just SSH in an echo zero as it says, and then I never see that error message again.
Because it's only an informational message to say, yeah, holy crap, there's a truckload
of IO going on right now.
Here's what I think it is.
I think blackout 24 is calling it right now in the IRC and I think roof chicken in our
subreddit called it.
Another better fs gotcha has been added to the gotcha wiki entry for butter fs.
That's how I see it.
Stable kernel versions 3.19.1 can cause a deadlock at mount time.
That's one of the new gotchas in the butter fs.
And I think this is exactly what happened to me.
I think I'm on a rolling release.
I'm on a rolling release.
And they wanted the packages with systemd and butter fs, right?
What's that?
And they want to do the packages with systemd and butter fs, right?
Yeah.
Yeah.
Yeah.
So there are workarounds.
So if I would have looked this up, there's workarounds.
But you know what?
This is what I came to.
I am so effing done with effing butter fs.
It is not even funny.
So when I was like, you know what?
I don't care that I can fix this.
I'm going XFS.
So what I decided to do is my boot partition, which is about 250 megabytes, is extended
for.
Everything else on the system is XFS.
My root file system, my home partition, my editing partitions, my gaming, all XFS, only
XFS.
Butter fs is dead to me.
This is the second system I have, to quote unquote, kind of soft lost to butter fs.
As in, I could have fixed it if I really effing wanted to.
In the Bonobos case, I would have had to format.
And in this case, I would have had to do a workaround for the timeout.
It's stupid.
It's a clown file system.
It's nowhere near ready, close to quality of ZFS.
And XFS has a rich history behind it, and probably has another 20 years left of development
in it.
So for my taste, I'm going XFS on everything that's important to me, my back end storage.
I'm not even going to use a Linux file system.
I'm going to use ZFS.
I know.
I kind of feel like maybe I'm the one guy out here.
But Wes, you were just saying, you're still a butter fs fan.
Yeah.
You know, I have a RAID 1 set up at home.
That's what my MB runs off of.
That's kind of my main data store.
And Popey, you're still a maniac running butter fs over there, aren't you?
Yeah.
I'm just looking across at my little home server, chugging away there with, I think,
12 disks in it, chugging away, still backing up all my stuff, hosting all my music.
The scrubs come out clean.
That's what's important.
OK.
All right.
Yeah.
It's got to the point now where I don't even bother checking any of the cron jobs, because
I know it's fine.
It's just fine.
All right.
Well, we'll check back in with you next year.
Is that going to be how it's going to stay, because ZFS was a preview in Ubuntu 15.10,
and it's all gearing up for officially being unveiled for 16.04, so I think ZFS is going
to win.
So that's going to be tricky.
That tune's going to change.
Is that what you're saying?
When 16.04 comes out, I'll certainly look at it, but I'm not going to migrate, because
I don't want to try one of these untested, brand new file systems that...
And you know, to be fair, BSD isn't actually used at scale, so it hasn't really been truly
tested yet.
And that Solaris that they took it from, that's...
Nobody ever used that.
Nobody ever used that.
That's not professional.
So speaking of things that we can barely remember, there was one little controversy that the
Unplugged show kind of found itself in the middle of, and that was the name change for
Sol OS, or Solus, but don't call it Solus OS, because, well, that could get them in
trouble.
Don't call it Evolve OS anymore.
No, sir, no, sir.
The project name has changed to Avoid Unnecessary Legal Action.
Oh, boy.
So we have Aiki and Ryan here.
Aiki, do you want to tell us what happened then?
So, yeah, that was a fun week.
Yeah, I've really loved how this has really gone.
So on April Fool's Day, of all days, I basically got an email come through, and it said that
I was getting a letter coming through as well, which is like, okay, this is just pure lols.
I was like, yeah, okay.
So I ended up phoning up the people involved independently, finding the phone number for
this place separately, and it actually does check out, so I was like, ah.
So the trademark is very, very much specific to the UK.
So a couple of months ago, we were having problems with people, a completely unrelated
incident by the way, but we were having problems with people trying to assert ownership over
the brand.
So I took a couple of steps, and I basically went ahead and put in a trademark application,
not to be a patent troll, but just to stop people trying to pull one over on the project.
So that was like, so in the UK, that happens for a couple of months, and it's put up so
people can, you know, they can object to it and say, hey, we own that, which someone did.
And it's held by the Secretary of State in the UK, and they own the trademark for OS,
which I did not see coming.
Wow.
Wow.
Really?
Whoa.
I could understand if it was Evolve, like when I was reading through the letter, I was
looking for the word Evolve, but no, it was for OS, I was like, are you kidding me?
So yeah, I mean, that absolutely and utterly sucks.
I was like, you know, that's one thing that Linux projects are traditionally done to avoid
that kind of thing, like have a suffix of OS or Linux or something like that.
So yeah, I mean, that absolutely and utterly sucks.
So we went through on Google Plus for a couple of, well, I think it was about two days asking
for suggestions done on IRC, and, you know, we got absolutely nowhere with a fitting name.
So I just went back to a name that we've used before, which was Solus, but without the OS
perp.
Interesting to follow that project.
And now, of course, here we are.
They've shipped their early versions, and we've even done a review.
And I was kind of curious, Poppy, on your thoughts now, kind of looking back towards
the end of the year on this kind of situation.
I looked at this, and I thought, oh, it's yet another distro.
Who needs that?
And they're doing their own desktop.
It's weird.
Yeah.
We don't know anything about that.
And he's barely getting all these builds done in time.
But now when you look at it, and he's got this stonking great Intel server in his flat
that he's doing all his builds on, and he's churning out loads of social media posts with
screenshots all the time and boot times and, you know, the policy there seems to be genuine
community interest as well.
Yeah, it's nice to see someone who is strongly opinionated about what he wants from his distro
and is driving it the way he wants to do.
And he listens to input from others, and he's got a community of people who are contributing
as well.
But he's going for it, and I wish him every success.
Yeah, I completely agree.
I think that's well put.
And the first early releases of it, and like the one we reviewed, are actually surprisingly
impressive.
And I don't mean to be demeaned when I say surprising, but it's just what they have to
work with and some of the challenges they've had to face.
It's a whole lot of fresh energy in the ecosystem is kind of what it feels like.
Maybe it's not the direction everyone wants, but it's like, that's a lot of effort put
in, and that can only have good, you know, consequences.
It's the first new truly independent distribution for a long, long time, and I think that's
what's driving a lot of the interest around the project.
Yeah, right.
It's built from scratch, and it really is something unique.
Yeah, that's a great point.
You know, as somebody who, on this show specifically, has talked a lot about Firefox versus Chrome,
you never...
Me?
I know.
I didn't know quite...
It was very incongruent for me.
I didn't know what to make out of this story.
Do you remember when a Debian package manager, a maintainer over at Debian, found out that
Chrome was downloading a binary in the background and enabling our microphones?
Yes, I do.
We had a good conversation around that, and then it went into a much wider conversation
than I thought was really interesting.
Okay, so anybody want to jump in first on this Chrome topic?
To me, it seems like this is the line too far.
And here's...
I already told this story, so I'll keep it brief, but here's what made me realize this.
Let's see.
It was Father's Day.
I was seeing family, and this family, it was a couple.
They have two Samsung S4 phones, a couple years old now, because the S6 is out, right?
And before they installed this update they got, they wanted to come see me.
So I look at their update, oh, it's Lollipop.
Oh, good, you guys are going to get Lollipop.
Great, great.
Yeah, this is a good update.
You're really going to like Lollipop.
Let's do it.
Let's install it.
So we plug in their chargers.
We hit the update.
It takes like an hour, because it's got to update all their apps too.
It says it's going to take 30 minutes.
It does not take 30 minutes.
And it updates all their apps.
Well, one of the new apps it gives them is Google Photos.
Oh, okay, Google Photos.
All right, cool.
So I'm showing them, well, I've got Google Photos on my phone.
Let me show it to you.
And I bust it out.
I'm like, this right here is Google Photos, and it is so great.
I do not have time to tag and organize my photos, and I don't ever manage it, and this
just automatically backs them up to Google servers for me, unlimited storage, and I'm
just going into the whole thing, talking about how great it is.
And look at this, I say.
And I bust out the search feature, and I'm like, it's tagged every person's face.
And look, it knows this is food.
These are flowers.
That's an object.
That's a car.
That's a whatever, a holiday.
It's gone through and figured all this stuff out, and I'm like, so check this out.
And I hit the search button.
I say, show me all the pictures of my son, Dylan, at Christmas.
And I'm like, and check this out.
I've never tagged any of these photos.
And the Google Photos app instantaneously, ba, ba, ba, ba, ba, auto-populates the search
results.
Here's all the pictures with Dylan at Christmas.
And I'm like, isn't that awesome?
Isn't that great?
I never told it this is Christmas.
I never told it this is Dylan.
It just figured all that out by importing my pictures.
And they look at me like I am a crazy person.
They look at me like, so how does it know that's Dylan?
And I'm like, well, it looks at the face.
So it knows the faces of everybody you take pictures of?
Yeah.
So it knows everybody you ever hang out with that's in your photos?
Yeah.
And I won't say this guy.
Let's just call him Jim.
And they say to me, they say, well, what about your buddy Jim?
He intentionally, it's his mission in life never to have a presence online.
He never wants to be tagged in any photos.
He doesn't have a Facebook profile.
He doesn't have a Twitter account.
He doesn't have a Google account.
What about him?
What about Jim?
He's in some of your photos.
I'm like, oh, yeah, Jim is in some of my photos.
So now Google knows that you hang out with Jim even though Jim never wants to be online.
Yeah, I guess.
And so I expected them to be like, oh, man, this is going to be so convenient.
Now I don't have to worry about managing my photos.
I don't have to worry about losing my photos when I get rid of my phone.
But because they had never been introduced, and this is my theory, because they had not
really been introduced to some of this Google stuff, they just were kind of all of a sudden
thrown in on the deep end on one of the more kind of creepier things Google can do.
And they weren't sort of slowly introduced to it.
They didn't see it like be introduced through Google Plus and slowly develop with auto awesome
features getting rolled out.
And they didn't see the whole evolution of it.
They just kind of went in, boom.
And they're like, whoa, this is way too much.
And now they're not going to use it.
And then I thought, could you imagine if I told them that their Google web browser was
automatically downloading a program in the background that turns on their microphone
so that way they can say, OK, Google, what's the weather like?
They would think I'm a crazy person.
So when I think about it through their perspective, I think, gosh, maybe this has gone way too
far.
Maybe we are sitting here in the boiling pot just, ah, it's Googles.
You know what they mean.
Well, there's just one more thing, right?
But hey, they fixed it.
Right?
Now you can opt out.
So it's just no big deal.
And we just keep on going.
One more thing.
One more.
But every now and then, I have like these reality checks where I talk to people outside
the tech bubble.
And I expect them to be like, oh, man, that's great.
And they're like, whoa, are you OK with that?
Does Jim know you've done that?
And I'm like, oh, and I felt like, jeez, I didn't really think about that.
Like, I had thought about it, but I didn't really, really, really wrap my head around
it.
And then this thing happens.
So Mumbler, what do you think?
Is this the line too far?
Sean, I want to start with you.
Go ahead.
Well, bottom line is anything that can compromise my privacy, I want to be asked first before
you add it to my stuff.
Good point.
North Ranger, what do you think?
I don't think we should be surprised, because we've seen this before with Android, replacing
gallery apps, camera apps with the closed source Google versions.
Well, and that's actually what I was going to ask Wimpy.
And the value of this is negative.
Is this, once again, RMS being right, or are we overreacting?
Is this what we get for using a proprietary browser by an advertising company that wants
to make life more convenient?
But Chromium is not a proprietary application, is it?
No, but it still happened, didn't it?
Yeah.
And so it probably happened because this is how Chrome is packaged, how Chromium is packaged,
because the two are very closely related.
But the question here is, is who is the package maintainer?
Because if you're using a Linux distribution, ultimately, you're placing your trust in the
person that makes the binary packages that you install on your system.
Because, as I said earlier, for a brief moment, for example, I'm a maintainer for Debian and
for Arch Linux.
So for a brief moment, I have root on your system.
And the question is, do you trust me?
And there are a lot of people out there that are in that position.
Yeah.
So there are processes in place with the distributions, and they do things a little bit differently.
I think Debian is far more rigorous than some of the other distributions in terms of the
checks and balances that are in place to ensure that the packages are of a suitable quality
and they don't do anything untoward.
But yeah, you take any distribution, and ultimately, you have to say to yourself, for a moment,
somebody somewhere created this package, and they have root on my system.
That's a sobering thought.
And I think it's a good perspective for us to take because it is the reality.
And when you think of it in that context, in that perspective, you can see why there
are other solutions being worked on.
And this is, yeah, exactly.
And this is why things like atomic and snappy packages and click packages are becoming a
thing because, for example, on Android, when you install an app on your Android phone,
that app during the install process does not have root.
Hmm.
Very good point.
Yeah.
Okay.
Inagogo, I want to give you a chance to say maybe Jim is a lost cause, that him never
having an online presence is not possible in 2015.
Should I not feel so bad?
Well, it's kind of not possible because he could have walked past a shop that is selling
its CCTV camera with an app that you can download on the app, so that lets you see CCTV cameras.
Sure.
That then means he's been online.
That's true.
It is quite hard to avoid cameras nowadays that all use the internet.
Yeah.
Isn't that so true?
So here's what I wanted to kind of put out there as maybe a feeler.
If you go to linuxactionshow.reddit.com, find episode 98 feedback thread.
Why could I recommend them that they could put on a phone, it'd be great if it supported
iOS and Android, so maybe I could use it myself, that would work for backup.
So I tried BitTorrent Sync, it'll copy pictures off, but it's not the same thing to just copy
the data as it is to actually have a little intelligence behind it.
There's another app out there called Picture Life.
This is a private company they recently bought up that does the same thing that Google Photos
does privately.
You pay more for it.
I don't know.
I actually forget.
I just was looking at it sort of casually, and it automatically backups your photos,
does the face tagging, does sort of like location tagging and tracking, but it's a separate
private company.
It's not part of an information behemoth.
That's kind of appealing, but I would really like an open source solution for photo backup.
Something where the user can let it run in the background, automatically copy the photos
off sort of like Google Photos does, or BitTorrent Sync, or Dropbox, or actually I think there's
even a way to do it with OwnCloud.
I haven't – yeah, okay, yeah, Mr. Grumpy R says, yeah, there is a way to do it with
OwnCloud.
I haven't really played with that.
That might be worth playing with, but then see they'd have to have an OwnCloud server.
Yeah, that's a hard one.
That is a hard one.
I loved how we kind of made that transition from starting about Chrome and to getting
to the broader conversation, but before we go any further, I want to talk about something
that's broad, and that's DigitalOcean.
Go over to DigitalOcean.com and use our promo code DOUNPLUGED to get a $10 credit, and then
you can try out their $5 rig, two months for free.
Think about that.
If you did that right now, you could try it out, and it would still be working in the
future in 2016 for free.
Whoa!
That's right.
Use our promo code DOUNPLUGED over at DigitalOcean.com, a simple cloud hosting provider dedicated
to offering the most intuitive and easy way for you to get a Linux rig up in the cloud,
backed by KVM, using SSDs so that way the I.O. is super fast with crazy great connections
in New York, San Francisco, Singapore, Amsterdam, London, Germany, and Toronto.
Maybe you promised your niece a new Minecraft server.
Spin it up.
Dude.
Maybe your new year's resolution was start a new blog.
Holy smokes.
Give the gift of Linux infrastructure.
Holy smokes.
Exactly.
Use the promo code DOUNPLUGED.
Actually, you know, I have a Minecraft server.
Do you really?
I do.
I have a SyncThing server.
I got an own cloud server.
I got a STUN server up there.
What else do I have up there?
I have an MB server up there.
I have a Quasal core server, a Quasal server up there.
Of course, I have a web server that does a couple of just small tasks for me.
I have a GPG server up there.
I got all kinds of stuff up there on DigitalOcean.
It is really great.
Their interface is very intuitive, very straightforward.
They have a great API that pushes that all the way into your hands, like you can just
create a great script.
There's a bunch of libraries that work with it or tons and tons of community apps that
are open source and ready to take advantage of.
Really great control panel, very reasonable cost, entire Linux infrastructure, HTML5 consoles
to manage all of it, DOUNPLUGED is the promo code.
DigitalOcean has been rocking support of this show for the entire 2015 year, and it would
mean a lot to me if you went over there and used that promo code to keep our show going
as a thank you to DigitalOcean for sponsoring the Linux Unplugged show.
So DOUNPLUGED, that's all you got to do.
Try them out for two months, absolutely free.
And a big thank you to DigitalOcean for sponsoring the Unplugged show.
DigitalOcean reminds me of the future, and something else that kind of felt like the
future was our conversation around open source artificial intelligence and the Mycroft device.
So in the pre-show, we were talking about this really cool Kickstarter called the Mycroft,
and literally in between a few moments ago and now since we started the show, we've had
somebody from the Kickstarter join us in the Mumble Room.
I believe he's their Chief Technology Officer, so I want to bring him onto the show right
now.
Ryan, welcome to Linux Unplugged.
Welcome back, I should say.
Yeah, it's good to be back.
I love this show so much.
Okay, so Ryan, in your own words, what is the Mycroft device and what's your involvement
with the project?
So in my own words, have you ever wanted to walk into your house and have it be like you're
on the Starship Enterprise?
Yes, every day.
Well this project allows you to do that.
It's an artificial intelligence for controlling your entire home, from entertainment to your
appliances to your lights to your music.
Everything can run through Mycroft because it's powered by Linux.
And how much of an infrastructure is there to just like, if I'm a consumer, if I had
something like this, I set it up, put it on my table, am I ready to start using it or
is it like I have to write the apps for it?
Absolutely.
You do not have to write anything if you don't want to.
That's actually a lot of questions I've gotten is, okay, it's open source, drop the code
on us right now.
And we're like, no, we want to, but we are putting in place ways to easily manage it
and contribute to the project.
And before we ever started on this, we actually, this came out of a selfish endeavor.
We wanted, we had this place, it's a maker space here in Lawrence, Kansas, and we wanted
to power the whole place using an artificial intelligence.
And so we went through all these different open source projects that were already out
there, you know, this personal assistance type things, and none of them did what we
wanted.
We wanted to control the lights.
We wanted to be able to add new modules and essentially make it power the entire space.
And everything was limited or really hard to install or really hard to configure.
And we were like, this is not a good shape for this to be in.
I mean, we've already got things like Google Now and Siri and Echo coming out, and they're
all super tied into their own ecosystems, they're proprietary.
And we were like, this is something open source can actually do better, you know?
And so a big differentiator here, and maybe also the biggest question mark is it's running
a local AI, a local AI that seems to be powering a lot of the recognition and all of that.
Is that all done locally?
Is there no cloud component to this?
There is a cloud component, and we've received a lot of questions about that.
We use PocketSphinx for the keyword recognition.
PocketSphinx is a local library that analyzes, you know, it doesn't go anywhere, it's just
listening for its keyword.
Until then, you can say anything, and it's not going anywhere, and that's good, because
you don't want everything you say in your house to be streamed up to a server.
Right, so the voice processing for the trigger words is done locally.
Yeah, but at that point, we actually send it off to a few different places, and essentially
whichever comes back first, we analyze it for quality, like how accurate do we think
this is, and then, you know, depending on how accurate that first speech to text thing
is, and we have our own ways of kind of figuring that out, we either accept it, or we wait
for the next one to come in, and we're hoping that people will be able to make decisions
for themselves, at least our technical users, for which services they want to use for analyzing,
you know, the queries, and then go from there.
The machine itself actually decides what to do with the query when it gets it back.
So when it analyzes what you say, and this is really complicated, and I'm sorry, there's
not really a great way to encapsulate this into an easy-sized thing to put.
No, it's actually fascinating.
So the decision, the action taken, isn't made up in the cloud service.
The answer is provided to the local box, and that's where the decision is made on what
to do.
That's correct, that's correct.
That's nice.
It comes back with a confidence, it says this is what we think it said, and then the local
machine goes through its modules very, very quickly to decide which one applies to that.
So if Chris Fisher says, I want you to play the Deadpool trailer on my TV in the living
room, it's going to come back, it's going to look at the media module.
The media module is going to say, I'm pretty sure he wants YouTube, then the YouTube module
is going to be activated, which is going to cast that to the Chromecast in your living
room TV.
Sure.
Huh.
That's pretty slick, and I guess the nice thing here is if this really, really reaches
its goal, regardless of how well the device does, there could be a significant contribution
by having this open source AI project.
So can you tell me more about that?
Is it a server client thing?
Is it all open?
Is there a proprietary aspect to it?
What's going on with this AI, and what's it called exactly?
So the AI itself is called Mycroft.
It's named after Mycroft Holmes, which is Sherlock Holmes' brother.
It's also, there's this book called The Moon is a Harsh Mistress, which has an artificial
intelligence in it named Mycroft.
And Mycroft is important because Mycroft, being Sherlock's home brother, was supposed
to be super intelligent.
He was supposed to be able to just, you know, he had an excellent memory, was able to just
pull information out of his head at a moment's notice.
And so that's where the inspiration came from for the name.
The actual device itself is completely open, open hardware, open software, and the entire
unit and everything related to it is going to be open.
The only thing I can imagine maybe having some parts being held back would be some of
our backend infrastructure for, you know, like we want everything that comes through
our servers to be encrypted and anonymized.
And so I don't know how much of our backend we're going to open source right away.
Being that your show actually was something that I grew with as I grew in my Linux abilities,
I started listening to it probably, oh God, like I don't want to guess how many years
ago.
And so my goal is as a result of being kind of raised in this culture and having like
a lot of my tech knowledge grow with the open source community and my involvement in it,
I would eventually like to get everything that we create open sourced.
But there's also, we have to find the best way to do that and we have to do it at the
right time or else people will be like, this software is crap.
And so the way it interfaces with home automation devices, is that through like the APIs that
those vendors provide?
Like so SmartThings Hub or Philips Hughes, that's essentially, it's just interfacing
with those APIs that exist out there already.
Yes, that's exactly right.
Anything your Linux box can do, Mycroft can do because it's built on top of Raspberry
Pi.
And so anything you can run on a Linux box, the way that the modules are created is it
can just send off a command through the Raspberry Pi to a device.
So how is that then, how is that done from the user?
How is that set up from a user perspective in a device that's all done with voice commands?
Is there some sort of web interface or how do you, I know it's getting down to the details,
I'm just curious, how does an end user do interface with something like this?
So there are two ways I see it.
There's the for grandma, you know, and then there's for someone like Chris Fisher.
And grandma will use an application to install modules that others have created.
And then when they're installed, like if she installs Pandora, it'll say on her phone or
on her computer, it will say, you know, log in, okay, we've imported your stations, you
know, and then and it'll say, would you like to create custom names for these stations,
you know, beyond their normal name.
So if you say, play my jam, it will go directly to the station you've designated as my jam.
But for Chris Fisher, you might want to actually create a module that does something related
to your studio over there.
And the way that that works is you can create a module and install it locally on your machine
just by logging into your machine.
And then if you want to contribute it back to the community, you can and we'll have a
community repo where people can contribute their own modules back.
We at the makerspace, we have a whole bunch of drones, and we fly them.
And we've also got them so we can design flight paths for them.
And so right now we're working on a module where we say Mycroft launched the drone to
do a perimeter check, and he goes on a predefined flight path.
And so that's the point, though, is I was getting very upset that I could get an Echo
or one of these other devices in my house, but I would have no control over what services
I could use with it.
It'd be whatever Amazon told me I could use.
And that's where I think the big difference is.
People are like, I don't understand what's different.
And it's like, well, if you get an Amazon Echo, Amazon is going to control every single
thing that can interface with.
Because they're proprietary, because they're this ecosystem that's going to put their
own products and services ahead of others, that's something you don't run into with Mycroft,
because Mycroft is open.
And we're not going to prioritize anybody because frankly, we can't.
People will be able to install whatever modules they want when we don't want to limit what
they can install on their own device.
$99,000, is that enough to build an open source artificial intelligence and manufacture and
ship units like this out to customers?
So that's a really good question.
The $99,000, so we've already bankrolled this a lot.
We come from a background of most of the people on the team, this isn't their first rodeo,
this isn't their first company.
And our CEO, Joshua Montgomery, has been featured in Ars Technica and a few other big online
publications for his work on the Wicked Fiber Initiative in Lawrence, Kansas, to get one
gigabit internet service to everybody in the town.
And so we've had experience, and we all come from different backgrounds and maybe in different
companies that we've played a role in starting and everything.
What this says, $99,000, yes, will allow us to ship our first units.
That would be great.
But it will also allow us to be able to have that reassurance that we're doing something
that people want, and we're ready to invest more in it because of that.
We think that, first off, we have a little bit of funds that we're willing to pour into
the project if we know that there's some actual desire for a product like this.
And secondly, if we actually do fund, that allows us to go to investors and say, hey,
we want to take this to the next level, and here's the interest and everything.
But I would love to see us beat our Kickstarter goal and have enough resources to actually
completely fund this from our fans and not have to go to investors if we don't have to.
But we've already planned for the next step in the event that we fund, and everybody will
be able to get their unit and will be in pretty decent shape for a good long time.
So I would say if something like this interests you, head over there and back it.
And if you have any questions, hit us up.
You can message us on Kickstarter.
I'm in the chat occasionally, but you can also find me on Google Plus and Twitter, at
ryanleesipes, and just ask me a question.
I had a chance to chat with Ryan at System76 when I went out there, and they are extremely
passionate about what they're trying to do.
And what I love about Ryan is he's really got a good handle on the big picture, the
big picture of where they could take this thing.
I don't know where that is yet, but man, his example in our interview where he talked about
they have Mycroft hooked up to a drone, and they just say drone, or they just say Mycroft,
scan the premises, and Mycroft launches a drone, and it goes around and takes surveillance
of the premises and gives them a report.
That is amazing.
Yes, that is.
If you're not feeling safe at home tonight, tell the Mycroft device to go out and do it.
And you can audit that, right?
I mean, it's not just some drone that's watching everything and you have no idea how it's processing,
where it's sending that.
This is your drone.
Yeah, yeah.
And of course, with all the other commercial artificial intelligence help out there, it's
nice to have something that's open source and something that uses code to locally listen
that we can trust.
I want to shift gears now and talk about something that was a big revelation for Noah and I.
We went down to LinuxCon, aka DockerCon this year, and one of the things we walked away
with was Docker and containers on Linux is really what the enterprise is talking about,
but more so than that, how they can actually manage it once they've deployed hundreds
of Docker containers that they don't have such a handle on.
Now, Noah, one of the things that jumped out at me about that talk, and he's talking about
security, is one of the main things that the vendors here are showcasing is how to patch
your applications in containers.
Everybody has a different solution for that, how to manage container security, how to update
applications in containers, how to know when the applications in the containers have gone
behind, how to know when the application quits working, all of that is, I would say, and
maybe, do you agree that it seems to be the number one product that's being talked about
here, the number one problem?
The container technologies themselves, we've built communities and there's already that,
the standards exist for that, right?
What's left, where the market is, where there's left to make a business or money is in products
managing those things, because like we were talking about at the drive, is you're not
going to, nobody is going to manage that stuff from the command line, even if it's possible,
so you need some sort of a solution, especially if you're doing it at a scale.
Yeah, and the other thing is containers kind of encourage you to have a lot of them, because
not only is your density higher versus virtualization, so on a server that could have 10 virtual
machines, maybe you can now have 20 containers, because you don't have the emulation overhead,
but you also are kind of encouraged to do a container per application, so you put your
mail server in a container, and your web server in a container, and your group collaboration
thing in it, all these different things go in containers, all of a sudden you have a
dozen containers for one small office, and so one of the things that they're finding
and talking about here is that container proliferation is just exploding, and then even small shops
have all of these containers they have to manage, and then the other thing they want
to do is move them between services, depending on which one is more cost effective.
Now the next thing we're going to get into is a clip that perfectly demonstrates, as
commercial software moves into areas that are more and more and more important to our
daily lives, it is becoming more critical than ever that we as consumers can crack it
open and take a look at it.
I think this next story and this clip and discussion we had perfectly demonstrates this,
and not only does it demonstrate this, but we managed to also demonstrate why the discussion
around DRM can still happen, and it can have a new spin, but first I want to tell you about
our friends over at Linux Academy.
This is a great resource for you to learn more about the technology and resources around
Linux.
LinuxAcademy.com slash Unplugged, go there, get our special discount, and learn more.
It's a platform for learning more about all of the great technologies around Linux, no
matter how much time you have.
They have an availability planner, you go in there and say I've got time on Monday and
Tuesdays and Fridays, and it will generate courseware that matches that.
You go into the Nugget sections, they have deep dives that last two minutes to six minutes,
but then when you're really ready to immerse yourself, they have nearly 2,000 self-paced
courses with instructor help available on demand, created by Linux enthusiasts and educators
and developers.
Go to LinuxAcademy.com slash Unplugged, check it out, they have downloadable comprehensive
study guides, seven plus distributions you can choose from, the entire AWS stack, Red
Hat, OpenStack, graded server exercises.
You hear that airplane out there, Wes?
I sure do.
You hear that airplane flying over?
Those are people that are celebrating their successes by Linux Academy.
They're just flying around in the Linux Academy jet.
Okay, well that's not true.
But it might be true.
It could be Santa's sleigh.
Oh, but you know, it's got to be Linux powered.
How else could it be so reliable?
I agree.
And you know what?
When those reindeers had to build a Linux powered sled, do you know where they learned
their Linux fundamentals?
Linux Academy.
Linux Academy.
They went to LinuxAcademy.com slash Unplugged and they got that reindeer discount and you
can too, and you support the show.
And it's seriously becoming very respected, you know, like you see someone and they completed
a lot of Linux Academy courses, you know that they know what they're talking about.
Yeah.
That is a very good point is because they've been so focused on the content and on the
infrastructure on the course where they pick and they managed to watch the industry and
determine what stuff really matters.
They've gotten a really good name for themselves and that just pays dividends as a Linux Academy
subscriber.
So go to LinuxAcademy.com slash Unplugged, take advantage of our discount and tell them
you appreciate them supporting the show for all of 2015, LinuxAcademy.com slash Unplugged.
Thank you Linux Academy.
All right.
So let's talk about this VW scandal where you hooked up the VW cars to get tested and
the computer software made things look a little better than they really were.
And that is where the problem lies.
Volkswagen cheated on emissions tests again, says the EPA.
This time about 10,000 VW, Porsche and Audi diesel engine cars are implicated.
They're all installed with software that makes the cars emit less pollution during tests.
When driving on real roads, the cars emit nine times the legal limit of nitrogen oxide.
So this software, I'm going to stop it right there, this software is specifically designed
by Volkswagen that when it is in test mode, it alters the way the engine performs.
And when you're not in test mode, nine times of some of the most poisonous types of gases
come out of the tailpipe of these diesel vehicles.
Which causes respiratory problems.
In September, emissions cheating was exposed in 11 million other VW cars worldwide.
None of the cars have been recalled in the US and are still safe to drive.
The company could owe the EPA billions of dollars in fines, including nearly 400 million
associated with the latest batch of cars.
The latest batch of cars includes Porsches, Audis, we're talking high end vehicles.
And this has caused the mainstream press like Cars.com and the New York Times and a bunch
of others that are running pieces that are basically saying that proprietary software
is the blame.
They say outright fraud is possible because of proprietary software.
And I think this is remarkable.
They say it's a bad situation to get far, far worse.
You throw a perfectly good phone away after two or three years because the components
goes bad.
But because the manufacturer refuses to provide parts and code updates, really, as the driver
of an old but beloved car that owns its latest 50,000 miles to the abilities of mechanics
who understand the engine's technology, which is a huge great point by the way, they go
on to point out that a day is coming when great cars get scrapped because the automaker
decided it was time to force me to buy a new one.
This is Andy Inocco writing for Cars.com.
In that same report, you know, he touches on the same thing we were talking about the
other week, you know, with Apple users not owning their software, only licensing it.
Here we see that more and more corporate companies, in this case, General Motors, lawyers have
defended the practice that you don't own the General Motors software in your car.
They do.
Yeah.
You have no right to play with it or tinker it or make sure that it's not polluting more
than you think.
Right.
Nine times more than they say it is.
You go in to get it tested, and it's then polluting nine times more than you thought
it was.
You go in to get it tested.
Yep.
I hope they're revising the tests here as well.
Maybe something you stick in the tailpipe while it drives around.
Pronoun.
You had a comment about proprietary software by law.
Go ahead.
Yes.
I think some law entity in Europe actually had a law that you have to put proprietary
software on cars so they can't be hacked.
Huh.
That is horrible, and obviously, this would be an underscoring reason why that would be
a bad idea.
Wimpy, what do you have here from the podcast on season eight, episode 34 of the Ubuntu
podcast?
Sorry.
That was the wrong link.
Oh.
That's the one after that about the Librarian of Congress.
Oh, yes.
Yeah.
From the EFF.
Yes.
Actually, this is kind of where it's going.
We kind of touched on this last week.
Yeah.
Good point.
But there's a particular point in there about how this affects car security, research, repair
and modification.
What did you catch?
That they've recognized the need for vehicle owners to circumvent access restrictions in
order to repair, modify and tinker.
Yeah.
And one of the things in this VW case is that you're not able to actually determine what
the proprietary software is doing or not doing with regard to these test emission levels
and how the car is being tuned is because it's DRM protected and because of the DMCA,
you're not allowed to hack it.
But under this provision, you now are.
This is a big deal.
Yeah.
This is a really big deal.
And it is the Librarian of Congress has extended this DMCA, I guess, exemption to also phones
and tablets too.
And I wonder if this whole Volkswagen catastrophe isn't partly responsible for this.
It seems to be turning the tide in at least some of the public perception.
So here is now, I don't want to be like this guy, but I just want to put this out there.
So let's be realistic.
The industry is what it is.
They're not going to be, it's not going to be Kumbaya, open source, blah, blah, blah.
It's going to be at best people reverse engineering and figuring things out.
This software, this stuff is literally going to affect our lives.
It is the stuff that runs our cars, the stuff that runs the trains, the stuff that runs
the drones, the stuff that runs all of this.
Chris, just imagine for a second if SIZA or TTPIP or the TTP was in full effect.
The person that would have found this bug in the Volkswagen software would be going
to jail.
Right.
And, North Ranger, you also kind of wanted to play on that, on the DMCA laws.
Well, yeah.
I mean, what Wimpy pointed out with the exemption granted by the US Librarian of Congress still
doesn't fix, I wouldn't call it a loophole.
It's a big catch with the DMCA is that the Library of Congress exemption only allows
individuals to bypass circumvention and things like cars and video games with servers.
It's still a criminal act to distribute tools to break those.
Right.
That's a good point.
Wimpy actually has a really good point about how this could be a great opportunity to explain
it to regular users about why DRM and DMCA stuff is so bad.
Go ahead, Wimpy.
Well, you know, normally we associate DRM with content, and if you try and explain why DRM
is bad, because it protects video or music content to, you know, your friends and family
outside of the open source world, that's a difficult sell.
But if you explain this story, that the software, automated software, is DRM protected and may
be tuning the car differently for its test cycle than when it's on the road.
But nobody can prove that because it's DRM protected.
It's a better way to explain why DRM is a bad thing.
We shouldn't have it.
Now that we're sitting here at the end of the year, this scandal's actually gotten even
worse.
More vehicles are impacted.
And, Popey, you were saying you had some thoughts on this.
I'm curious what you think now looking back at it.
Yeah, right back when it came out, there was a lot of thought.
It felt like the American system was looking at European cars and casting aspersions on
these horrible European cars.
And I was pretty certain back then that other manufacturers will be hauled over the coals
as well.
And that's turned out to be the case.
And it's a much wider problem than just Volkswagen.
And I think people are more cognizant of relying on testing in general.
And I think things outside the motor industry are starting to be scrutinized a little bit
more.
And there's been reports of airlines who are reporting certain levels of efficiency
that aren't actually true either.
So I think this has triggered in people's minds that you can't just believe the very
strict test case that was done in the laboratory.
And actually, there are real world scenarios that you need to think about as well.
And I think it's also there is a good discussion happening now around if software is going
to be in these machines that are so important to our daily lives, is there a reasonable
expectation that I can pull it apart and look at it and audit it?
And that conversation isn't very strong, and it hasn't gone very far, but at least it's
happening.
I think it's tied into, like we saw this year, the Linux Foundation is now backing the real
time kernel.
Like before, where things like BlackBerry's QNX were kind of dominant in the automotive
scene, hopefully we'll see more things where you could reasonably build the stack that
Volkswagen uses and do some tests before you even saw it.
Oh, exactly.
That's a great point.
Bobby, were you going to?
Yeah.
Yeah, there's a popular talk that Karen Sandler, who used to be on the Nome Foundation, I think
she's now works at the Software Freedom Conservancy, where she gives a keynote about the fact that
she's got a pacemaker.
And when it was to be installed, she asked, can I see the software?
And the surgeons and doctors had never been asked that question before.
And it's very similar.
There's a device that is keeping her alive, this could potentially be non-free software,
in the same way that you're cruising down the motorway at 90 miles an hour or whatever.
And there's a piece of software inside that car that's preventing the car from just veering
off the road and slamming into the wall.
There is an expectation that we should be able to look at that code and that hasn't
quite reached those engineers yet, I don't think.
Yeah.
That is a good point.
And maybe that'll change over time.
And maybe those companies now that are creating that software will be minimized by other offerings
by platforms out there that they just become the hardware maker and somebody else becomes
the software provider.
And I think it's just very early days.
It is.
And we're watching it now because I think that we have an important view on this particular
topic.
So I think 2016 is going to be even more revealing on this.
Stay tuned to Linux Unplugged.
Yeah, right?
Yes.
Snappy for pacemakers.
You heard it here first.
Exactly.
I mean, you joke, but Snappy is legitimately a serious solution to this problem we talk
about constantly on TechSnap and that is how are you going to make sure that these are
not home router 2.0 where they just – you get these old Linux running devices out there
that never get patches and now you have things like universally UNPMP is vulnerable on all
these devices.
Snappy has a reasonable answer to that.
And I wonder if through 2016 if we won't see that pick up and see more and more adoption
there because it's a damn good solution.
If I don't say so myself.
If I don't say so myself.
So yeah, the VW scandal stuff, I think it was interesting talking about VW but like
Pope said, it turns out it's applicable to a lot more people and it really is more
about the broader conversation around that software being locked away.
Audibility in general.
And I also liked our conversation around DRM that came out of that.
Before we get into the rest of the clips and the next one we're going to talk about is
OpenSUSE Leap.
OpenSUSE made major transformations this year and it was nice to have R. Brown, the chairman
of SUSE to stop by and chat with us about it because I mean talk about the horse's
mouth, right?
But because they've been going through so many changes it was particularly appreciated
so we're going to get to that here in just a second but first I want to tell you about
our friends over at Ting.
I don't know if I'm there yet but my goodness, I'm closing in on my third year of Ting service.
Wowee.
Holy smokes.
And you can get in on it too.
Go to linux.ting.com.
First of all, you get to type Linux in your history bar which looks way better than Red
Tube, let's be honest, so linux.ting.com but even better than that.
That let's Ting know you heard about it here on the Unplugged show and you support this
show.
You get to find out a little more and they have a savings calculator.
I invite you to click that and see how much you would save.
Put your actual usage in there, linux.ting.com.
Go there, try it out, get the $25 discount off your first device or if you have a Ting
compatible device and you might.
You probably do.
You get GSM, if you've got GSM and CDMA Network so you've got a lot of choices.
If you have a compatible device you'll get $25 of service credit which paid for more
than my first month.
They have an early termination relief program so they'll help you get out of a contract
if a duopoly talks you into that.
That's really, really nice and you know I was over at the Ting site, Wes look at this
freaking deal.
The OG Nexus 5, $190, $190, no contract.
You get the Google experience, no contract, it's not locked, you have full access to it,
they don't get in the way of any updates.
Yep, exactly.
You get those Google updates right there on the phone, $190.
Bootloader unlocked.
Pay for what you use.
It's just flat $6 for the phone and then it's your minutes, your messages and your megabytes.
If you're Wi-Fi savvy, this is a crazy deal.
I've got three phones, I'm paying like $40, $45 a month.
See that's great.
Like personally, I'm lucky enough that my employer, they're willing to pay a certain
amount of my cell phone fee so that they can call me, right?
And I think a lot of people are in that position.
Ting is great for that.
Like I have a set amount, how am I going to go over that amount on Ting, right?
That means my cell phone plan is covered.
So you're making money on the deal sometimes.
Yeah, exactly.
That's really clever, Wes.
And thanks to Ting.
Yeah, linux.ting.com to support this show and get on the deal with a ton of good devices.
Everything from just like a bare bones GSM card and feature phone all the way up to the
latest and greatest Android devices and internet phone devices from Apple.
Try out that savings calculator, plug in your usage, see how much you would actually save
and then realize you now have the flexibility of choosing GSM or CDMA whenever you want
like a boost.
linux.ting.com, linux.ting.com.
And a big thanks to Ting for sponsoring the Unplugged Show all year long, linux.ting.com.
And thanks to you guys for going there and keeping us going.
All right, so let's get into our conversation about OpenSUSE Leap with Mr. Aaron Brown.
All right, well, I am really pumped about episode 118 today because we have a ton of
topics to cover, a lot of distro things to discuss.
So let's kick off the distro things with one Richard Brown, OpenSUSE's, or I believe,
SUSE's chairman.
I forget, it was a very, it was a very, very cool title, the chairman of OpenSUSE, Mr.
Richard Brown.
Please tell us more.
Mr. Brown, welcome to the show.
Thank you very much.
Yeah, and it's chairman of OpenSUSE, but SUSE paid for me my salary, so I work for both.
So technically the SUSE company pays your paycheck, but you're the chairman of the OpenSUSE
distribution, which honestly is way cooler than CEO or any other title.
Definitely.
Chairman is awesome.
So Richard, welcome to Linux Unplugged.
And today is a pretty cool week because OpenSUSE 42.1 Leap shipped, and it's like Linux, but
not like we've seen it before.
Are you guys totally pumped over there at OpenSUSE right now?
Yeah, and the feedback's been amazing.
I mean, we're trying something really different here for people who don't know.
We've got effectively the code base from SUSE Linux Enterprise, so the enterprise distribution.
And we started with that, but then rather than just copying it and shipping that as
our own, we've built a whole new platform on top of it.
And this is something that we've almost, as Linux users, have fantasized about, and it
almost seems impossible.
And it is this idea that you take the core Linux OS, and you make it stable, you make
it secure, you make it predictable.
But then as an end user, you get all of the trappings of nice updated end user applications
and things like that.
You can get the latest things that are important to you still.
Yeah, you know, the small things.
Like that kernel or X breaking.
Yeah, things like Thunderbird, Chrome, your Steam packages, things like that.
And now, that is one thing to say is actually going to happen, but what is the long-term
plan to actually deliver on that?
How does OpenSUSE Elite plan to actually make that happen?
Well, part of it's all thanks to the tooling we already have, so things like the build
service, which make it really easy for us to do this kind of heavy, tricky engineering.
So the trick going forward is we're going to do LEAP minor releases aligned with the
SLE service pack.
So as they move forward, we'll move forward.
And for each of those minor releases, which are expected about once per year, I expect
to see most of that user space stuff kind of jumping up, catching up with what's common
standard there, with SUSE taking care of the base system underneath as part of the enterprise
stuff.
Now, Richard, what happens when something comes along that says, this is the new standard,
this is something we want to do, and it requires X, Y, Z be updated?
Is there a process in which a maintainer can step up and say, I'm going to make sure that
these libraries and this end user package are the latest version, even though it doesn't
quite track what Sless is doing?
Exactly.
I mean, that's happened a few times already with this version of LEAP.
We actually did it with the kernel as well, so we had a real big bit of community feedback
that they wanted the 4.1 kernel in there, something newer than what SLE has.
So yeah, we've done that already.
I expect to probably hit a few more things again with 42.2, but also we're seeing on
the enterprise side, because we're doing this, they're a little bit braver about some other
stuff they're talking about for service pack 2.
That's awesome.
They might be moving a little bit faster, we might have a little bit less of that kind
of thing to hit than we were expecting when we started this a year ago.
So far, I've mostly talked about this in the context of the desktop and why it seems compelling
to me as a desktop distribution, but is there also a bit of a server answer here?
Could this be maybe somebody who wants to have some fairly modern, up-to-date, front-end
packages of things like maybe SyncThing, Plex, MB, stuff like that, but then also have something
that doesn't have a ton of kernel changes and whatnot.
Do you see a role for OpenSUSE Leap in the server position, or is that clearly still
defined for SLES?
What's your thoughts there?
Definitely, totally, yes.
I mean, as part of this release, we actually tidied up all of the server patterns and installation
options we have in Leap so that they're a lot more straightforward and easier to get
done.
I mean, there's a big server market out there that doesn't really fit Sleep, so there's
not really too much concern from the SUSE business side.
We're going a different direction, we're going to appeal to a different audience, so yeah,
we're looking forward to seeing how that works out.
One of the things that I think I've noticed that Ubuntu has had to figure out with their
LTS releases, and I think they've done it pretty gracefully, is the updates to the kernel
to do hardware enablements, as they call them.
One of the things that I hear consistently, Richard, is, and it happens about right now,
and Wes knows what I'm about to say, is Ubuntu 14.04 is starting to feel real old, and he
and I know of a couple of examples of people who wanted to go with the LTS release but
bailed because it's just simply too out of date now.
It seems like the LTS updates to Ubuntu and the service packs are on about the same schedule,
so how can Leap avoid this problem where some of the base system starts to become, honestly,
a little stale, and so things like Steam games start to suffer, or new hardware support,
or honestly, even things like installing the latest versions of Java and Flash to play
Minecraft and do Hangouts become complicated?
What's Leap's solution to that?
Well, the SLE service pack thing is moving up to about an annual release schedule now,
and hardware enablement is a big part of what SUSE do in those service packs.
So we'll be benefiting from that, plus probably doing some of our own as well for the specific
hardware that our community's interested in.
So yeah, that should kind of be the bread and butter that every year when we do a minor
release of Leap, hardware enablement should be there every time, keeping this whole thing
fresh.
And would that be when I get, say, a new version of GTK, or would that come at a different
point in the update cycle?
We're really expecting kind of the big things like a new NUM release, a new KDE release
to be sort of synchronized all around those annual service packs we're going to be doing,
minor releases, as we're saying for Leap.
So essentially I get one new version of GTK a year, one new version of QT a year, and
those kinds of things?
Yeah, the open SUSE packaging policy isn't necessarily that strict, so if there's a nice
compelling reason for us to push that out as a maintenance update during the life cycle
of 42.1, we can, we might, but there has to be a reason because the last thing we want
to do is break things.
Now down the road, in all intents and purposes, is there going to be a 42.2 and a 42.3, or
is this essentially a continuously updating installation that I'm going to have that will
never, that's always just going to, like 42.1 is always going to be the latest, and whenever
you install it's just going to continually be updated.
How does this work and what is my upgrade path long term?
I don't know.
If you want a nice rolling release, that's what we have Tumbleweed for, so that's your
single installation that you can upgrade.
So 42.1 will have 42.2 next year.
The upgrade path will be as simple as a zippered up, so our equivalent of an apt distribution
upgrade.
And so we're expecting that to be nice and simple.
You can also do it offline if you feel like doing it the old fashioned way over a USB
stick or a DVD.
That's good.
Yeah, and so yeah, we're expecting these to do one of these service packs every year.
Then when SLEE, do SLEE 13 a few years from now, that's when we're expecting 43.0, which
will be sort of a big, huge change everything, probably based on wherever Tumbleweed is around
about that time.
Okay.
So that'll be in line with what Suse is doing with the big enterprise release then as well.
This sounds like it's, the way you describe it, it's kind of a unique little space in
the Linux ecosystem.
Yeah, it does seem different.
And I look at this and I ask, so I guess Richard, my next question would be if I'm Frank from
own cloud or if I'm somebody who's making say a Telegram server replacement or maybe
Plex or whatever, if I'm creating software for the Linux server or the Linux desktop,
how do I as a software vendor say we are compatible with XYZ version of OpenSUSE Leap?
How can I clearly differentiate for the end user so that way they know it's going to work
on Leap or not?
Because the reason I ask you is because it seems like one, two years down the road there
could be some installations of Leap where something does work and some installations
of Leap where things don't work.
So what's kind of the thoughts there to make it clear to end users if you know something's
going to work on your version of OpenSUSE to say nine months from now?
The cleanest, simplest way would be I'd recommend that all of these vendors, like we're already
in discussion for example with own cloud about doing this, of either put your stuff in our
distribution or use the build service where building it for whatever variation someone
might have is just a button click away.
Nice.
Because we're not expecting any major heavy architectural stuff so if you want to be extra
sure that the thing is built for every variation of Leap, that should just be nice and simply
done in the OBS.
Wouldn't that be great if we could get just everybody using that?
That would be really something.
So if you don't mind, Richard, I would love to shift gears for just a second and talk
about – well, for a few seconds and talk about Tumbleweed.
So what is – if I'm looking at really – today and really – and let's talk
about 2016 too.
I'm looking at my options as an OpenSUSE user and I'm looking at Tumbleweed it seems
like and I'm looking at Leap.
I've got two different things in front of me.
I feel like maybe because I'm an Arch user today, if I was going to make a switch to
SUSE, maybe I want to go Tumbleweed and I actually kind of want to ask you straight
up why would I not go Tumbleweed and why would I go Leap?
What's the downside to going Tumbleweed?
If there's two different versions of SUSE, what is Leap giving me that say Tumbleweed
isn't?
Leap is giving you a slower pace of change.
It's really down to what Linux is comfortable for you.
The thing we find with Tumbleweed is we've tackled those technical problems.
It's stable.
It works.
You can rely on it.
But it's changing at whatever the pace upstreams are and we have feedback from our users saying
like I didn't want to relearn my entire workflow this week.
So Tumbleweed, if you're one of these guys who likes whatever upstreams are doing, Tumbleweed
is fine.
Great.
Use it.
But at the same time, in certain use cases or just depending on how you are, you want
something that changes less often.
That's what Leap is going for as the two complementary approaches really.
And also maybe if I was the administrator of a couple of SUSE Enterprise Linux servers.
Or even more than a couple.
Yeah.
Leap would probably be a pretty good desktop for me.
We had a lot of people in our virtual log try out Leap after that episode and Tyler's
here and he had installed.
And Tyler, I'm kind of curious now looking back on it, how's your experience been?
So far I installed it last month, not long after it came out, upgraded from 13.2.
First couple of weeks, the experience was a little bit rough on the edges.
I was trying to reinstall everything I had before.
But I think now that I've had it for about a month and a half now, it's rock solid.
Rock solid.
That's a bold statement.
Nice.
Good to hear that.
I'm curious.
We'll check in in a few more months and see if that's still the case.
Because I still maintain, I think it's a great idea.
And I think Tumbleweed and Leap are both exactly what they should be doing.
But in a year from now, that's really going to be the telling thing.
How many things got back ported?
How many things actually made it in there?
How many times have they changed direction?
Yeah.
And I'm not saying any of that's going to be negative.
No, not at all.
It's just how do those things-
We just don't know yet.
Right.
And because in particular these types of distributions, there's so many unanswered questions.
It's just going to be a little bit to see how that plays out.
But the folks over there are super clever.
And so if anybody could get it right, it is probably them.
And so I'm kind of glad they're doing it.
I'm encouraged to watch it.
All right.
So this brings us to the last clip we're going to play on the show today.
And it was the one that was the most fun for me.
And I'm betting probably surprising for you, Wes.
That was when Wimpy came on here and he dropped the pie bomb.
And then we got into a discussion about the future of open PC.
Wimpy, I kind of wanted to pick your brain because I know you've hinted before on some
pre and post shows that, and I haven't gotten, I have quite not yet gotten the complete picture,
but the Raspberry Pi is starting to play a more and more important role for the Ubuntu
Mate distro, isn't it?
It's our most popular platform.
Wow.
You mean, you mean other than x86 or including x86?
It's more popular than 64 bit, 32 bit, x86.
Holy shit.
Are you serious?
That's crazy.
Wow.
My world has just been rocked.
Are you kidding me?
No, it's downloaded about 1,200 times a day.
The image for the Pi.
That's awesome.
Wow.
That's serious.
That is, that is, so what are your thoughts on that?
Well, it means that in the last two releases of Ubuntu Mate, I've done the work for the
Pi version in the last month of the release, but for this release, it's got even, you know,
it's being treated equally all the way through the development stage now.
I feel like I need to take a minute.
Like I wasn't ready for that level of a bomb to be dropped.
I don't know why I didn't know that because I kind of feel like I should have known that,
but it to me is shocking to me, actually.
I've actually been paying attention to a lot of communities around Raspberry Pi and Reddit
or Google Plus and various different places, and the majority of times people ask what
to put on the Pi, Raspbian is no longer even mentioned, Ubuntu Mate is always the first
choice.
I mean, it makes sense.
It does make sense.
I mean, it's way more pleasant to use and it looks pretty.
With me, that's a big deal, though.
I mean, congratulations because that's a big deal.
And so when you look at these types of devices, are you starting to say, all right, these
aren't just sort of toys.
These are going to become possibly the next open PC.
Now hold on.
I want to make sure I'm framing this right, but when I look at tablets and phones, I get
a little sad because they look locked down and glued together, and I remember a time
when I was in high school and I scraped together parts for months and months and months and
built my first PC.
I went and picked out my own case, and it was a life moment for me.
And you learned a lot along the way.
A ton of stuff.
And I read.
I mean, it was really my first geek project that I really researched and all that kind
of stuff.
And now I look at this Onion Omega here, and I'm sitting here like Legos building a PC,
and I think, geez, I could give this to my kid and he could play Minecraft on this, maybe
not this one, but the Raspberry Pi Zero.
This is maybe getting to the point now where it is actually going to be something that
has some serious long-term legs as a serious desktop contender.
And one more thing, Wimpy, before I toss it back to you is I, in the late 90s, had a conversation
with a guy named Scott, a really great guy, and his day job was to run an IBM mainframe.
And he looked down at desktop PCs as toys that couldn't do real work, that weren't powerful
enough.
And he called the desktops, oh, you mean those Mattel inside PCs?
Those Mattel inside, because they were toys.
And I look at the Omega, and I go, oh, this is a cute Lego toy.
But actually, maybe I'm looking at it from Scott's perspective.
And when Wimpy sees he's getting over 1,000 downloads a day, I'm wondering, are you looking
at these mini PCs, these Raspberry Pis, and these Omegas, and the BagelBone, and whatever,
are you looking at this and going, this might actually be something that gets wider adoption
use than the traditional PC one day?
I think so.
Certainly, if you look outside of the developed nations, I think this is going to be the ARM-based
devices are going to be the principal computing platform.
And if you're not doing stuff on ARM, you'll be irrelevant.
Wow.
Bad time to own Intel stock.
I am still sort of sitting here going, damn, that is a big deal.
And Wimpy, I'm curious, it's been a few weeks, is there any follow-up thoughts to that segment?
Yeah, a couple.
So just before Christmas, we're going to release a point release of Ubuntu Mate 15.10.
So we're going to update some of the bits and pieces that are in the image and fix a
couple of bugs.
So not a major re-spin, but I have moved the build over to the Ubuntu Pi Flavor Maker project.
So alongside the Ubuntu Mate release will also be a spin of Lubuntu 15.10, Xubuntu 15.10,
and also Ubuntu Server.
So people can come and have a real Ubuntu Christmas on their Raspberry Pi 2s.
Yeah, I mean, that is sort of perfect for the holidays, people getting Raspberry Pis.
Like we started at the beginning of the show, this Kano here, or however you say, canoe
or whatever you say, that's a Raspberry Pi 2.
And I'm putting that under the Christmas tree this year.
And I'm going to put Ubuntu Mate on there.
That's a $4 course.
When we spoke a couple of weeks ago about this, and you were surprised at the uptake
of these on boards, I thought about it.
And there was a guy who supplied a bit of feedback to the Linux Voice podcast where
he talked about, he drew a parallel between where the engineers for steam engine construction
were in the UK during the Industrial Revolution.
And it wasn't where the money was, it was where the raw materials were.
And he likened this to Linus and creating Linux in that as a 21 year old student, the
raw materials that were available to Linus was an Intel PC.
And that's why Linux was created on an Intel PC.
And these days, the raw materials that are readily accessible and available to most people
around the world are these ARM SBCs.
And it's those boards that are going to drive the tinkering and the hobbying and the enthusiasts
that we all were with our PCs, you know, 5, 10, 15, 20 years ago.
And these are going to be the new devices that people learn about computers on.
You know, that that really rings true with me in 1.21, when is when you sort of drop
what I call the pie bomb on us.
That's when it clicked with me.
I think we even talked about it in the clip is I realized that if I was a high school
student or even a little younger or in that range, this would be my experimental PC platform
because the Dells and the Lenovo's and the ample of this world have sealed the hoods
and put everything under a plastic wrap with glue.
And even then, like I have admittedly fond memories of breaking my parents, you know,
like desktop computer when I was a kid.
Right.
Yeah.
But these days, for like 30 bucks, you're like, oh, here, here's your whole machine.
Just go wild.
Yeah.
And it makes it reasonable.
Or $5.
Or $5.
Yeah, exactly.
Yeah.
So that is that has been an amazing trend to really, I mean, to see that come down this
year, really something and then to see the actual usage tick up in the downloads for
Ubuntu Mate edition.
Really cool.
And it just makes so much sense.
It really does.
So I just find that to be fascinating.
And I can only imagine where 2016 is going to take it.
It's awesome.
It rocked in 2015.
It rocked.
And it's funny, you know, totally just not planned at all.
Here we are with this canoe system that we unboxed today on the show.
And it is it is so much.
It's beautiful, well-designed.
Yeah.
And it brings all the current open source technology.
It is really something to see this.
And I just as a kid would have loved this.
And they also have mobile apps to manage the system and they have them in the Play Store
and the App Store.
It says at Team Canoe or Kano, K-A-N-O.
K-A-N-O.
You can't understand this.
I know.
K-A-N-O.
I know.
It's hard to pronounce.
I think I want to say canoe because it's like the idea is like it's a canoe.
Or Kano.
But Kano doesn't make any sense.
Anyways, I think they just sent this to me.
I don't think I backed this particular project.
I think they just sent it to me to talk about it.
And so I'm pretty impressed.
Wes, something else I'm kind of impressed with.
We decided since this is a holiday episode of The Unplugged Show that we would drink
a little beer as we do from time to time.
And this is something you brought and you wanted to get something specifically in the
holiday spirit, Wes.
So I won't steal your thunder.
What did you bring in?
We are currently drinking Stone Coffee Milk Stout.
Yeah, it's an ale brewed with roasted coffee bean.
Does that mean it's caffeinated?
I believe so.
One would hope anyway.
That is actually pretty great.
And so when you drink it, it definitely has like a coffee note.
There's no getting around that.
It's 5% alcohol by volume.
Which is a little lower than I usually bring.
I'm just going to say that right now.
That is true.
Oh yeah, for the show.
Yeah, for sure.
So it's Stone Coffee Milk Stout, a bittersweet, creamy, coffee-laced stout from imperial stouts
to IPAs.
We've discovered through the delicious trial and error that the tantalizing, roasty lift
that comes from adding coffee beans to just about any beer style.
And they go on.
It does pair nicely.
I've got to say, it's darn smooth.
You know, when you brought in, I was like, coffee and a beer.
I've done beers tasty before.
This doesn't usually go well for me.
And you know what?
It went really well.
It's pretty good.
Yeah, this is a great beer to drink during the show.
So thank you, Wes, for bringing this in.
And I think we're going to give it the Linux-unplugged thumbs up.
Thumbs up.
Two thumbs up.
Stone Coffee Milk Stout.
Somebody in the Mumble Room, I think, was saying they have just about every stone brew
ever.
I don't know who that was, but anybody in there, a stone beer fan or a fish in the auto
that could chime in and give us more information?
Because we just basically picked up the bottles here.
We sure did.
Yeah.
But I mean, I've enjoyed their IPA in particular in the past.
Yeah.
Yeah.
Oh yeah.
So I'm a con.
I'm a con.
So there you go.
Oh, thanks, Wes.
It was very good.
And if you guys have any suggestions, feel free to submit those and we will drink them
and talk about them on the air.
We should.
You know what?
That'd be fun to do that.
Because one of the things that the original...
So there was two original ideas for Linux-unplugged.
One of them was so terrible, I almost feel like I shouldn't even say it because it's
embarrassing.
Say it.
It's for people who like to mess with computers.
And you know who you are.
There's somebody who doesn't want to mess with the...
I just want to surf the...
I just want to buy something on Amazon, send an email to my kids, look at some websites.
All right.
So I had to play a little Leo while I could think about it.
I hit dead air.
So the first idea for Linux-unplugged was I get so much email that comes in the Linux
action show.
I'm just going to start a podcast where I just read my damn email because I'm never
getting to it.
And the only thing...
The only work I get done is the work I have to get done to make sure shows go on the air
because that's all I have.
That's all I have in me.
And it's the only thing I get done is like...
And it's like big things.
I'm not even like...
There's things in my life that are extremely important like health insurance or insurance.
All these things, I don't get those done.
What I get done is whatever I have to get done to make sure these shows go on the air.
And so I was like, this email is never getting done.
I'm never reading all these emails.
What I'm going to do is...
And actually, this is the real concept here.
I'm going to take Thunderbird, I'm going to open it up, and I'm going to tag emails throughout
the week.
And then I'm going to go to that tag in Thunderbird, and I'm just going to read them on the air,
and I'm going to answer them.
And that's the freaking podcast.
You know, Richard Dawkins has a whole YouTube thing.
He just reads his hate mail.
I think it could work the same way.
Yeah.
So that was the idea.
But really, that was a horrible idea.
It was so, so boring.
But then the second idea, I think, is kind of solid.
And it's actually what's inspired the show in reality.
Because the emails have, over time, become less and less a part of the show.
Fancy that.
Yeah.
The concept that I've actually ran with was, what does the world look like to real, actual
Linux users?
Because there is a lot of blogs and press out there who claim to be Linux users, or
Linux advocates, or Linux journalists, and they don't actually use Linux.
And so they miss the mark.
And they don't actually represent the day-to-day actual Linux user.
And so often, that means they spin things, or they misunderstand things, or they superficially
read things.
And their reviews are touching on true and tried talking points that we've been discussing
since the 90s.
And they're just exhausted.
And we get so sick and tired of it.
And really, if we're Linux users, and something like Chrome comes along, and all of a sudden
is downloading a binary package in the background that turns on our microphone, how, as Linux
users, does that make us feel?
If Volkswagen is, all of a sudden, revealed for altering test results because of their
proprietary software as Linux users, what is our thought about that?
And you can go back through every single topic we played in the show, and you can see how
we come at it from the perspective of people who use Linux on a daily basis, and thus affects
our worldview.
And you combine the fact that we have this virtual lug that comes in and discusses their
opinions on things, and they represent that point of view as well, I think it makes for
a very unique kind of talk show that is not like anything else, because we have gotten
extremely lucky with really solid contributions from our community.
I mean, absurdly lucky.
We shouldn't be able to have an open Mumba room and have this many great contributors
come in and speak intelligently.
Oh, it really makes the show.
Right.
So, somehow, we just fell backwards into that, and that is just a resource that has been
extremely useful, plus you have our perspective as people who are open source advocates first
and Linux desktop users.
I think it has made for an interesting perspective for a talk show that can handle a whole range
of topics, from political to technical.
And that is the second idea that has really, I kind of ran with for this show.
Now here we are after all of this, and there has been some really interesting things.
One of the things I really enjoyed, one of the things we did this year that I thought
was kind of fun, is when we went to LinuxCon, we did Unplugged live from LinuxCon.
And it was a little rough, because we literally just found a spot, and when we got there,
I don't know if Noah wants me to tell the story, so nobody share this with Noah.
Don't tell Noah.
He won't listen to this episode.
He's got a family.
He doesn't listen to any of these.
No, he does.
He listens to Unplugged.
But come on, this is the Christmas episode.
Right.
He won't have time to listen to this.
Nope.
And he doesn't know I've been drinking beer.
So we get, we're at the Seattle Convention Center.
This is like a legit professional convention center, and there is an area they have where
they have these benches that have plugs and networking, and it's like the, you know, sit
down at a workstation.
And there's like four of them, and they're in front of windows.
They're nice, but they're all taken.
And so we get there, and I go, Noah, this was our last kind of plan, and all these spots
are taken.
What do we do?
He's like, what do you mean, what do we do?
What do we do?
He's like, you start setting up.
I go, what do you mean you start setting up?
He says, you start setting up.
You start setting up, and they'll get out of the way.
Because we look so official with all this equipment, that once we start setting it down,
they get out of the way.
And I'm like, that, that doesn't work.
And he's like, let's try it.
So we go over there, and we bring over these, we have these Pelican cases, and we, we open
them up, and we start setting up microphones and cameras and mixers, right?
And we start computers, and sure enough, everybody at the table just gets up and walks away.
And they move to another table.
They just totally got out of our way, and we were able to bull-regard this spot for
two hours.
We boondocked in this spot for two hours and managed to record the Linux Unplugged show.
And so we were able to do a live Linux Unplugged on location, and then we took prerecorded
material where we did interviews and recorded a bunch of stuff, and brought that into the
Linux Action Show pre-produced, so it was really kind of more refined.
And I really liked that sort of ebb and flow between Unplugged and LAS this year, where
we went on location, did the live, raw, nitty-gritty stuff in Unplugged.
We were even able to bring the Mamba Room to the Linux convention with us, which was
totally badass.
And then in LAS, we had the more refined, cut-down versions.
And I think that was kind of a cool thing that we, so I want to play with more of that
next year.
Yeah.
It was kind of cool.
The synchronicity between LAS and Unplugged.
That was nice.
And then last but not least, I think one of my favorite things about Linux Unplugged this
year, of course, was Wes joining the cast.
Well, thank you, sir.
Yeah, it wasn't, you know, Wes, you've been a great addition, and you've had great contributions
to the show.
I'm very pleased to be here.
And you usually bring beer.
Hey.
That doesn't hurt.
So that's pretty solid, too.
And then, of course, last but not least, our Mumble Room.
Now we're going to have one more episode this year.
This isn't the last episode of the year.
Yes, please be here.
But if you want to get your crystal ball and be real prognosticating and sound super smart,
or put yourself out on the line, join us for 1.25 in the Mumble Room.
Thank you, Mumble Room, though, for great contributions this year.
You guys, you know, playing back those clips, it's obvious you guys helped make the show.
Absolutely.
So it means a lot to us.
You can join us live over at jblive.tv, go to jupyterbroadcasting.com slash calendar to
get it converted to your local time zone, linuxactionshow.reddit.com to submit content.
All right, everybody, thanks so much for tuning this week's episode of Linux Unplugged.
Have a great holiday, and we'll see you right back here next week.
