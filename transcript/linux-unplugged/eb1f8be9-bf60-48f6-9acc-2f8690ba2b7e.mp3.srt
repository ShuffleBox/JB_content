1
00:00:00,000 --> 00:00:02,040
So I've been trying out Google Stadia this week.

2
00:00:02,040 --> 00:00:02,560
Oh, boy.

3
00:00:02,560 --> 00:00:03,440
Just a little bit.

4
00:00:03,440 --> 00:00:04,320
Just a little bit.

5
00:00:04,320 --> 00:00:05,440
You hipster, you.

6
00:00:05,440 --> 00:00:07,720
Well, I decided to get the, what do they call it,

7
00:00:07,720 --> 00:00:09,640
like the Founders Pack or whatever.

8
00:00:09,640 --> 00:00:12,080
My thinking was, is twofold.

9
00:00:12,080 --> 00:00:14,360
This is going to be somewhat good for Linux gaming,

10
00:00:14,360 --> 00:00:16,480
even if it's a little, because it actually

11
00:00:16,480 --> 00:00:19,200
requires developers target Vulkan,

12
00:00:19,200 --> 00:00:20,560
and they have to target Linux.

13
00:00:20,560 --> 00:00:20,760
Right.

14
00:00:20,760 --> 00:00:22,280
That's what's running on the back end.

15
00:00:22,280 --> 00:00:23,360
And Google requires that.

16
00:00:23,360 --> 00:00:26,280
So I like that idea.

17
00:00:26,280 --> 00:00:30,840
But for me, it's sort of like outsourcing the bad,

18
00:00:30,840 --> 00:00:32,720
outsourcing the proprietary.

19
00:00:32,720 --> 00:00:38,800
With Stadia, I can have all free Intel drivers on my laptop,

20
00:00:38,800 --> 00:00:42,960
great power, low heat, all the stuff I want.

21
00:00:42,960 --> 00:00:44,640
But then I can open up a browser,

22
00:00:44,640 --> 00:00:50,000
and I can play actual, real, quality video games.

23
00:00:50,000 --> 00:00:51,160
That's the dream.

24
00:00:51,160 --> 00:00:52,680
And when you're done with it, you can forget about it,

25
00:00:52,680 --> 00:00:54,680
and you don't have this hardware laying around.

26
00:00:54,680 --> 00:00:57,600
Or maybe I get home, and all of a sudden,

27
00:00:57,600 --> 00:00:59,600
something changes in our plans, and I find myself

28
00:00:59,600 --> 00:01:00,960
with a free evening.

29
00:01:00,960 --> 00:01:04,360
All I've got is systems that are incapable of really gaming.

30
00:01:04,360 --> 00:01:06,160
And that happens three times a year.

31
00:01:06,160 --> 00:01:08,080
So you're not really wanting to invest.

32
00:01:08,080 --> 00:01:10,200
Well, then you've got to imagine, too,

33
00:01:10,200 --> 00:01:13,400
as far as disk space goes, games these days

34
00:01:13,400 --> 00:01:18,800
are anywhere from 20 to 100 plus gigs worth of storage.

35
00:01:18,800 --> 00:01:21,280
And if you don't play them all that often,

36
00:01:21,280 --> 00:01:23,280
you're just sitting there with a disk that's

37
00:01:23,280 --> 00:01:25,880
starting to fill up with games you don't play that often.

38
00:01:25,880 --> 00:01:26,720
I had that problem.

39
00:01:26,720 --> 00:01:27,840
I had Steam installed, and I was like,

40
00:01:27,840 --> 00:01:28,800
I haven't played for a while.

41
00:01:28,800 --> 00:01:29,800
I'm just going to delete all of this.

42
00:01:29,800 --> 00:01:31,200
And then you wanted to play with me,

43
00:01:31,200 --> 00:01:32,600
and I didn't have any of it ready.

44
00:01:32,600 --> 00:01:34,680
Steam Cash, bro, that's what you need to do.

45
00:01:34,680 --> 00:01:35,480
Yeah, I know.

46
00:01:35,480 --> 00:01:36,840
That's going to happen at the RV,

47
00:01:36,840 --> 00:01:38,560
but that's a topic for self-hosted.

48
00:01:38,560 --> 00:01:40,240
What were your first impressions?

49
00:01:40,240 --> 00:01:41,480
You got to try it a little bit.

50
00:01:41,480 --> 00:01:43,320
You had the controller wired into my PC,

51
00:01:43,320 --> 00:01:44,840
because that's the only way to do it.

52
00:01:44,840 --> 00:01:45,600
I'm impressed.

53
00:01:45,600 --> 00:01:49,640
I mean, I'm definitely in the casual gamer style,

54
00:01:49,640 --> 00:01:51,040
more than enough for my needs.

55
00:01:51,040 --> 00:01:53,080
And if I had not known about Stadia,

56
00:01:53,080 --> 00:01:55,160
and I just walked up and you gave me the controller,

57
00:01:55,160 --> 00:01:56,800
I was thinking I was playing any console.

58
00:01:56,800 --> 00:01:58,400
Have you ever played Destiny 2 before?

59
00:01:58,400 --> 00:01:58,880
Not two.

60
00:01:58,880 --> 00:02:00,280
I've played Destiny once.

61
00:02:00,280 --> 00:02:02,400
Because you walked in and cleaned that entire room

62
00:02:02,400 --> 00:02:03,160
out with a shotgun.

63
00:02:03,160 --> 00:02:05,840
I mean, I may have played some video games in a past life.

64
00:02:05,840 --> 00:02:08,520
I mean, you had some tactics, too.

65
00:02:08,520 --> 00:02:10,640
You went around the corner.

66
00:02:10,640 --> 00:02:13,000
So response-wise, it's pretty dead on.

67
00:02:13,000 --> 00:02:13,760
Yeah.

68
00:02:13,760 --> 00:02:16,440
What I see it as is you trade.

69
00:02:16,440 --> 00:02:19,000
So you could do some of these games on a cheaper GPU

70
00:02:19,000 --> 00:02:21,080
if you didn't want to invest every year, every couple

71
00:02:21,080 --> 00:02:22,720
of years, on a big GPU.

72
00:02:22,720 --> 00:02:24,280
But you'd have to turn down the textures,

73
00:02:24,280 --> 00:02:26,400
turn down the distance, turn down the reflections,

74
00:02:26,400 --> 00:02:28,240
the shadows, the lights.

75
00:02:28,240 --> 00:02:30,600
With Stadia, you can have mostly that stuff turned up

76
00:02:30,600 --> 00:02:32,320
pretty decently well.

77
00:02:32,320 --> 00:02:34,540
But you trade a little bit of fuzz

78
00:02:34,540 --> 00:02:35,880
when you've got a lot of motion.

79
00:02:35,880 --> 00:02:35,920
Right.

80
00:02:35,920 --> 00:02:37,520
It was a little bit of blur.

81
00:02:37,520 --> 00:02:39,760
But honestly, I mean, in the middle of the firefight,

82
00:02:39,760 --> 00:02:41,000
you don't notice any of that.

83
00:02:41,000 --> 00:02:42,640
You're not paying attention because you're just

84
00:02:42,640 --> 00:02:45,240
really focused on the thing you're shooting at.

85
00:02:45,240 --> 00:02:47,600
So I probably am going to stick with it.

86
00:02:47,600 --> 00:02:50,880
My next big commitment, though, would be to move up from the free games

87
00:02:50,880 --> 00:02:53,840
to the pay games, and they're full price, Wes.

88
00:02:53,840 --> 00:02:55,280
And they just live on Stadia.

89
00:02:55,280 --> 00:02:57,560
And of course, you're worried, how long is Stadia

90
00:02:57,560 --> 00:02:58,360
going to be around?

91
00:02:58,360 --> 00:02:59,200
I mean, yeah.

92
00:02:59,200 --> 00:02:59,880
It is Google.

93
00:02:59,880 --> 00:03:22,240
Hello, friends, and welcome in episode 329 of your Unplugged program.

94
00:03:22,240 --> 00:03:23,240
My name is Chris.

95
00:03:23,240 --> 00:03:24,240
My name is Wes.

96
00:03:24,240 --> 00:03:25,240
Hello, Mr. Payne.

97
00:03:25,240 --> 00:03:26,240
Hello.

98
00:03:26,240 --> 00:03:27,240
Big show.

99
00:03:27,240 --> 00:03:28,240
Huge show.

100
00:03:28,240 --> 00:03:29,240
Hello, Cheesy.

101
00:03:29,240 --> 00:03:31,640
We have about as many people in the quiet listening lobby

102
00:03:31,640 --> 00:03:32,800
as we do in the actual room.

103
00:03:32,800 --> 00:03:35,040
This new time has been interesting and well-attended.

104
00:03:35,040 --> 00:03:35,880
I really appreciate it.

105
00:03:35,880 --> 00:03:37,200
We're glad to see all of you.

106
00:03:37,200 --> 00:03:40,960
So this week, we're talking about a problem

107
00:03:40,960 --> 00:03:42,680
I've been trying to solve.

108
00:03:42,680 --> 00:03:46,320
In the spirit of free and open source, I am scratching my own itch this week.

109
00:03:46,320 --> 00:03:49,840
And I am NAT busting with my VPNs.

110
00:03:49,840 --> 00:03:54,600
I have a situation where I'm behind carrier-grade NAT at home.

111
00:03:54,600 --> 00:03:58,200
And I want to create an overlay network across all my machines

112
00:03:58,200 --> 00:04:02,400
that are on a Linno data center, on a Digital Ocean data center,

113
00:04:02,400 --> 00:04:06,200
in my RV, at the studio, when I'm traveling, on my laptop.

114
00:04:06,200 --> 00:04:09,360
I want an overlay network that spans the entire internet that

115
00:04:09,360 --> 00:04:10,920
puts them all on one LAN.

116
00:04:10,920 --> 00:04:11,400
Right.

117
00:04:11,400 --> 00:04:12,440
So you can just forget about it.

118
00:04:12,440 --> 00:04:14,240
It doesn't matter if you're here at the studio

119
00:04:14,240 --> 00:04:16,240
or you're down at Linux Academy headquarters.

120
00:04:16,240 --> 00:04:18,120
You can pop onto your home network no problem.

121
00:04:18,120 --> 00:04:21,440
There's a plethora of options to do this.

122
00:04:21,440 --> 00:04:23,840
We talk a lot about WireGuard.

123
00:04:23,840 --> 00:04:26,200
WireGuard's not necessarily the best solution for that.

124
00:04:26,200 --> 00:04:30,560
We'll tell you why, and we'll tell you what some of our favorite solutions are.

125
00:04:30,560 --> 00:04:33,320
And then we went and got interviews with the creators of them.

126
00:04:33,320 --> 00:04:35,080
So that's all coming up in today's episode.

127
00:04:35,080 --> 00:04:38,920
But first, we have some community news to get into.

128
00:04:38,920 --> 00:04:41,000
This one's nuts, Mr. Payne.

129
00:04:41,000 --> 00:04:46,560
Did you see this Android, which has its very own weird, strange kernel

130
00:04:46,560 --> 00:04:54,120
legacy, its own strange sets of patches, may, may, may end up going mainline.

131
00:04:54,120 --> 00:04:56,120
I actually think this is one of those initiatives

132
00:04:56,120 --> 00:04:58,200
that's going to die on the vine about a year in.

133
00:04:58,200 --> 00:05:03,080
Right, it seems like there's a lot of pressure and momentum against this.

134
00:05:03,080 --> 00:05:06,400
Yes, well, people don't like proprietary crap in the kernel.

135
00:05:06,400 --> 00:05:08,760
But the current Android ecosystem is really

136
00:05:08,760 --> 00:05:11,160
kind of polluted with hundreds of different versions of Android,

137
00:05:11,160 --> 00:05:14,640
each running a different variant of their own Linux kernel.

138
00:05:14,640 --> 00:05:16,520
Each version is designed for a different phone,

139
00:05:16,520 --> 00:05:17,680
and it's different configurations.

140
00:05:17,680 --> 00:05:19,040
That's always the way it's been.

141
00:05:19,040 --> 00:05:24,080
And Google has been working to fix that problem by mainlining the Linux kernel,

142
00:05:24,080 --> 00:05:27,200
just going with a straight upstream kernel one day.

143
00:05:27,200 --> 00:05:28,000
It's kind of the dream, right?

144
00:05:28,000 --> 00:05:29,640
I mean, we talk about all the great things about Linux

145
00:05:29,640 --> 00:05:31,200
and why upstream development is good.

146
00:05:31,200 --> 00:05:33,600
And of course, we don't get any of that on Android.

147
00:05:33,600 --> 00:05:35,960
And that's because before it reaches you,

148
00:05:35,960 --> 00:05:40,160
the Linux kernel on your Android phone goes through three major steps.

149
00:05:40,160 --> 00:05:42,920
First, Google has to take the long-term support version of the kernel,

150
00:05:42,920 --> 00:05:45,200
whichever one it's going to use for that version of Android,

151
00:05:45,200 --> 00:05:48,720
and then add all those Android-specific changes.

152
00:05:48,720 --> 00:05:51,880
This is called the Android Common Kernel.

153
00:05:51,880 --> 00:05:54,680
And then this code goes to the company that creates the system on a chip

154
00:05:54,680 --> 00:05:58,320
that actually runs your phone, which is probably Qualcomm.

155
00:05:58,320 --> 00:06:01,240
And once the system on a chip maker finishes adding all that code

156
00:06:01,240 --> 00:06:05,400
to support the CPU and whatever other chips are on there,

157
00:06:05,400 --> 00:06:08,480
the kernel is then passed on to the actual device maker,

158
00:06:08,480 --> 00:06:10,400
such as Samsung or Motorola.

159
00:06:10,400 --> 00:06:12,840
And then they add code to support the rest of the phone,

160
00:06:12,840 --> 00:06:14,240
like the display and the camera.

161
00:06:14,240 --> 00:06:17,760
Yeah, or maybe some new fancy feature that is their differentiator.

162
00:06:17,760 --> 00:06:19,480
Each of these steps takes a while to complete.

163
00:06:19,480 --> 00:06:22,440
That's how software and hardware development works.

164
00:06:22,440 --> 00:06:23,760
And it means that the end product,

165
00:06:23,760 --> 00:06:25,880
that kernel doesn't work with any other device.

166
00:06:25,880 --> 00:06:27,680
It also means that the kernel's very old,

167
00:06:27,680 --> 00:06:31,040
usually about two years old on an Android device when it ships.

168
00:06:31,040 --> 00:06:36,440
The Pixel 4, which shipped last month, has a kernel from November 2017.

169
00:06:36,440 --> 00:06:37,440
Ouch.

170
00:06:37,440 --> 00:06:40,240
I don't even want to know what kernel my Pixel 3 is running.

171
00:06:40,240 --> 00:06:40,880
I know.

172
00:06:40,880 --> 00:06:43,960
Now, Google did announce plans last year to fix this mess.

173
00:06:43,960 --> 00:06:46,000
Yeah, that's right.

174
00:06:46,000 --> 00:06:47,920
They said, we know what it takes to run Android,

175
00:06:47,920 --> 00:06:51,040
but not necessarily on any given hardware.

176
00:06:51,040 --> 00:06:54,480
So our goal is to basically find all of that out, then upstream it,

177
00:06:54,480 --> 00:06:57,800
and try to be as close to mainline as possible.

178
00:06:57,800 --> 00:07:00,000
Kind of sounds like maybe we won't get fully mainline,

179
00:07:00,000 --> 00:07:01,680
even in Google's vision.

180
00:07:01,680 --> 00:07:04,280
That might be difficult with Android's long history.

181
00:07:04,280 --> 00:07:05,440
It's a good goal, though.

182
00:07:05,440 --> 00:07:08,120
Yeah, they did show it off on a prototype up on stage.

183
00:07:08,120 --> 00:07:09,520
I don't think it was perfect, though.

184
00:07:09,520 --> 00:07:12,600
No, no, I don't think so.

185
00:07:12,600 --> 00:07:14,720
Does seem like some things were not working,

186
00:07:14,720 --> 00:07:18,520
like the battery percentage, which was stuck at zero.

187
00:07:18,520 --> 00:07:21,080
That sounds like the Librem.

188
00:07:21,080 --> 00:07:23,960
So what's Google's plan to make all this work?

189
00:07:23,960 --> 00:07:27,560
Well, they plan to take a page from their Project Treble playbook.

190
00:07:27,560 --> 00:07:30,280
Before Project Treble, the low-level code

191
00:07:30,280 --> 00:07:32,200
that interacted with the device in Android itself

192
00:07:32,200 --> 00:07:34,480
was just a big old stack of mess.

193
00:07:34,480 --> 00:07:36,480
What Project Treble did was it separated the two

194
00:07:36,480 --> 00:07:39,480
and made them modular, so Android updates could be shipped quicker,

195
00:07:39,480 --> 00:07:43,120
and the low-level code could remain unchanged between these updates.

196
00:07:43,120 --> 00:07:46,480
What Google wants to do is bring that same modularity to the kernel.

197
00:07:46,480 --> 00:07:50,680
Their plan, quote, involves stabilizing Linuxes in kernel ABI

198
00:07:50,680 --> 00:07:53,960
and having stable interfaces for the Linux kernel

199
00:07:53,960 --> 00:07:56,120
and hardware vendors to write to.

200
00:07:56,120 --> 00:08:00,560
Google wants to decouple the Linux kernel from its hardware support,

201
00:08:00,560 --> 00:08:01,600
end quote.

202
00:08:01,600 --> 00:08:04,000
So this means that Google would ship a kernel,

203
00:08:04,000 --> 00:08:06,400
and then hardware drivers would just be loaded

204
00:08:06,400 --> 00:08:08,800
as regular old kernel modules.

205
00:08:08,800 --> 00:08:12,960
Now, of course, this is just a proposal, and there are still

206
00:08:12,960 --> 00:08:16,560
quite a few technical problems that have yet to be solved.

207
00:08:16,560 --> 00:08:18,280
I mean, that does sound like a big change, right?

208
00:08:18,280 --> 00:08:19,760
That's a different way to approach things,

209
00:08:19,760 --> 00:08:22,040
although I can see why some decoupling would be nice

210
00:08:22,040 --> 00:08:25,240
given these slower cycles outside the kernel development.

211
00:08:25,240 --> 00:08:27,760
Yes, I don't actually think it's necessarily a bad idea.

212
00:08:27,760 --> 00:08:31,400
It's just such a radical change to serve one group's needs.

213
00:08:31,400 --> 00:08:34,920
It is a large group, but it is a radical change.

214
00:08:34,920 --> 00:08:40,200
I think the Android problem is not a unique one.

215
00:08:40,200 --> 00:08:42,840
There's probably thousands of hardware vendors,

216
00:08:42,840 --> 00:08:45,960
at smaller scales, in Google's shoes.

217
00:08:45,960 --> 00:08:49,920
They make a product that's an IoT device or something like that.

218
00:08:49,920 --> 00:08:51,120
It doesn't have to be Android.

219
00:08:51,120 --> 00:08:52,460
It could just be based on Linux.

220
00:08:52,460 --> 00:08:55,720
But it takes a long time for a group of people

221
00:08:55,720 --> 00:08:57,520
to build hardware and software.

222
00:08:57,520 --> 00:08:59,840
And so it's easy for a couple of years to go by,

223
00:08:59,840 --> 00:09:01,400
even if you're not a phone maker.

224
00:09:01,400 --> 00:09:04,040
Like, phone makers probably have it down at this point.

225
00:09:04,040 --> 00:09:06,040
They probably have it about as efficient as they can

226
00:09:06,040 --> 00:09:08,120
because profitability is driving that.

227
00:09:08,120 --> 00:09:12,160
But Fred's IoT shop that's making router boards and stuff

228
00:09:12,160 --> 00:09:14,160
that get shipped in 100 different Chinese types

229
00:09:14,160 --> 00:09:16,760
of knockoffs, they don't have that kind

230
00:09:16,760 --> 00:09:20,240
of efficiency of scale.

231
00:09:20,240 --> 00:09:22,120
It's probably a much wider spread problem.

232
00:09:22,120 --> 00:09:24,520
So there could be some real logic in doing this.

233
00:09:24,520 --> 00:09:27,360
I'll be curious to see what the upstream kernel community

234
00:09:27,360 --> 00:09:28,400
thinks of these proposals.

235
00:09:28,400 --> 00:09:30,360
Yeah, it doesn't seem like it's got initially

236
00:09:30,360 --> 00:09:31,600
a very good reaction.

237
00:09:31,600 --> 00:09:33,280
And I mean, I wonder how much of it

238
00:09:33,280 --> 00:09:35,280
do you lose some of those advantages, the things

239
00:09:35,280 --> 00:09:37,320
that the kernel community is always talking about,

240
00:09:37,320 --> 00:09:40,240
about getting proper upstream, traditional upstream support.

241
00:09:40,240 --> 00:09:42,240
How much of that will actually apply here?

242
00:09:42,240 --> 00:09:45,760
Yeah, they really want to see people just make it open source,

243
00:09:45,760 --> 00:09:47,560
make it GPL, and then it's just included.

244
00:09:47,560 --> 00:09:50,040
We'll all maintain it together.

245
00:09:50,040 --> 00:09:52,960
And that's a pretty deep philosophical outlook,

246
00:09:52,960 --> 00:09:56,960
which is why it's been really fascinating to watch

247
00:09:56,960 --> 00:10:01,560
WireGuard's slow march into mainstreaming.

248
00:10:01,560 --> 00:10:04,720
WireGuard is the VPN technology we traditionally

249
00:10:04,720 --> 00:10:06,520
talk about all the time on this show

250
00:10:06,520 --> 00:10:08,840
because we've been following it very closely.

251
00:10:08,840 --> 00:10:11,480
It's been held up by the adoption of its main crypto,

252
00:10:11,480 --> 00:10:13,480
which we thought may slide.

253
00:10:13,480 --> 00:10:15,480
We thought perhaps they were going to swap out

254
00:10:15,480 --> 00:10:17,600
the clever crypto that WireGuard uses for something

255
00:10:17,600 --> 00:10:19,160
already in the kernel.

256
00:10:19,160 --> 00:10:24,200
Well, this week, Linux 5.5 seems to support key elements

257
00:10:24,200 --> 00:10:27,480
of the zinc crypto effort, which WireGuard depends on,

258
00:10:27,480 --> 00:10:29,560
which I thought wasn't going to happen.

259
00:10:29,560 --> 00:10:31,720
I think what's happening here is when WireGuard

260
00:10:31,720 --> 00:10:35,920
was sort of released, the crypto stuff kind of came fully formed.

261
00:10:35,920 --> 00:10:38,280
And the kernel community doesn't always love, oh, here's

262
00:10:38,280 --> 00:10:39,800
this giant chunk of code.

263
00:10:39,800 --> 00:10:41,520
Will you apply this patch, please?

264
00:10:41,520 --> 00:10:43,760
So I think what needed to happen was the kernel community

265
00:10:43,760 --> 00:10:45,000
and working with the WireGuard community

266
00:10:45,000 --> 00:10:47,480
and sort of working out which pieces made the most sense

267
00:10:47,480 --> 00:10:49,560
and in what order are we going to start

268
00:10:49,560 --> 00:10:51,360
making some of these changes.

269
00:10:51,360 --> 00:10:54,720
Thankfully, what's landing in Linux 5.5

270
00:10:54,720 --> 00:10:58,560
is enough to unblock the dependencies in WireGuard.

271
00:10:58,560 --> 00:11:01,840
Now, with that said, WireGuard is not landing in 5.5,

272
00:11:01,840 --> 00:11:07,440
but should, emphasis on should, land in 5.6.

273
00:11:07,440 --> 00:11:10,600
Yeah, I'll believe it when I see it at this point.

274
00:11:10,600 --> 00:11:12,440
It's just been crazy because it's

275
00:11:12,440 --> 00:11:14,280
been every couple of releases, we're like,

276
00:11:14,280 --> 00:11:16,920
well, the next one from this is going to have WireGuard.

277
00:11:16,920 --> 00:11:19,000
I mean, the other good part here, too, is that we're just

278
00:11:19,000 --> 00:11:20,960
getting better crypto in the kernel, too, right?

279
00:11:20,960 --> 00:11:22,120
I mean, good point.

280
00:11:22,120 --> 00:11:23,320
Zinc looks like it's super good.

281
00:11:23,320 --> 00:11:25,120
But I think the thing that you'd mentioned

282
00:11:25,120 --> 00:11:26,880
is really the key underlying here.

283
00:11:26,880 --> 00:11:29,960
It's just enough to unblock WireGuard.

284
00:11:29,960 --> 00:11:31,640
So we're not getting a complete implementation.

285
00:11:31,640 --> 00:11:33,520
And there'll probably be continued discussions

286
00:11:33,520 --> 00:11:35,680
on more code changes in the future.

287
00:11:35,680 --> 00:11:36,840
I do love it, though.

288
00:11:36,840 --> 00:11:38,240
I think I could easily do an episode

289
00:11:38,240 --> 00:11:40,240
if we wanted on the open source projects

290
00:11:40,240 --> 00:11:42,600
that I'm loving this year, because the list is different

291
00:11:42,600 --> 00:11:44,560
than it was last year.

292
00:11:44,560 --> 00:11:46,720
And there's just so much good stuff.

293
00:11:46,720 --> 00:11:49,680
WireGuard is definitely on that list.

294
00:11:49,680 --> 00:11:50,360
Game changer.

295
00:11:50,360 --> 00:11:51,760
There's just some tools that they're

296
00:11:51,760 --> 00:11:53,460
great fundamental building blocks,

297
00:11:53,460 --> 00:11:55,460
and that means the things you can do with them

298
00:11:55,460 --> 00:11:56,200
are almost endless.

299
00:11:56,200 --> 00:11:58,080
It's funny we're talking about 5.5.

300
00:11:58,080 --> 00:12:01,480
It's probably worth mentioning that 5.4 just came out.

301
00:12:01,480 --> 00:12:02,520
Right.

302
00:12:02,520 --> 00:12:05,480
So it's actually just shipped as being kernel 5.4.

303
00:12:05,480 --> 00:12:07,820
And one notable thing that we've mentioned in the past

304
00:12:07,820 --> 00:12:11,120
is it's coming with that lockdown feature, as well

305
00:12:11,120 --> 00:12:14,160
as early extended FAT support.

306
00:12:14,160 --> 00:12:15,880
There's more details in Linux Headlines.

307
00:12:15,880 --> 00:12:17,240
If you're not listening to Linux Headlines,

308
00:12:17,240 --> 00:12:20,240
that's where we put that kind of stuff, linuxheadlines.show.

309
00:12:20,240 --> 00:12:21,240
I think that was the Monday episode,

310
00:12:21,240 --> 00:12:22,120
because I think I did that one.

311
00:12:22,120 --> 00:12:22,640
That's right.

312
00:12:22,640 --> 00:12:23,760
And I think I covered it in Monday.

313
00:12:23,760 --> 00:12:26,240
So the details are in the Monday episode of Linux Headlines.

314
00:12:26,240 --> 00:12:28,960
But it's everything you need to know

315
00:12:28,960 --> 00:12:32,120
in Linux and the world of open source in less than three

316
00:12:32,120 --> 00:12:32,620
minutes.

317
00:12:32,620 --> 00:12:33,540
Three minutes or less?

318
00:12:33,540 --> 00:12:34,120
It's so great.

319
00:12:34,120 --> 00:12:34,800
It's so great.

320
00:12:34,800 --> 00:12:37,040
Well, guess what, Mr. Payne?

321
00:12:37,040 --> 00:12:38,600
It's time for a little housekeeping.

322
00:12:38,600 --> 00:12:39,960
And it's about time.

323
00:12:39,960 --> 00:12:43,360
Last week, we talked about the System76 Superfan event.

324
00:12:43,360 --> 00:12:44,520
Well, cheesy.

325
00:12:44,520 --> 00:12:48,080
You got updates on that and some Pinebook updates, too.

326
00:12:48,080 --> 00:12:48,760
Yeah, absolutely.

327
00:12:48,760 --> 00:12:52,280
So we didn't get a lot of time to cover the Superfan event,

328
00:12:52,280 --> 00:12:53,860
because we were pretty packed that show.

329
00:12:53,860 --> 00:12:56,400
But I've done a write-up there.

330
00:12:56,400 --> 00:13:00,120
And if you go to linuxunplug.com and hit the Blog tab,

331
00:13:00,120 --> 00:13:01,760
you can check out that write-up.

332
00:13:01,760 --> 00:13:05,960
A lot of cool pictures and just really a great synopsis

333
00:13:05,960 --> 00:13:07,200
of the event itself.

334
00:13:07,200 --> 00:13:09,200
It was wonderful.

335
00:13:09,200 --> 00:13:12,640
It's really interesting to be around Linux nerds that

336
00:13:12,640 --> 00:13:15,280
are actually producing hardware.

337
00:13:15,280 --> 00:13:18,480
So it was just an experience that you'll

338
00:13:18,480 --> 00:13:19,720
have to go read for yourself.

339
00:13:19,720 --> 00:13:23,400
And I've also updated the jupyter.gallery page

340
00:13:23,400 --> 00:13:26,240
with some photos from that event as well,

341
00:13:26,240 --> 00:13:30,320
and also included a Pinebook Pro review.

342
00:13:30,320 --> 00:13:31,800
So if you caught last week's show

343
00:13:31,800 --> 00:13:33,760
and you want a little bit more information,

344
00:13:33,760 --> 00:13:36,700
I suggest you hit the linuxunplug.com blog

345
00:13:36,700 --> 00:13:39,300
and check out those posts as well.

346
00:13:39,300 --> 00:13:40,760
I love it, man.

347
00:13:40,760 --> 00:13:42,600
What's neat about that gallery, first of all,

348
00:13:42,600 --> 00:13:44,560
I got to say, these posts, you did a great job.

349
00:13:44,560 --> 00:13:46,400
So thank you for writing these up.

350
00:13:46,400 --> 00:13:48,000
But what I love about that gallery

351
00:13:48,000 --> 00:13:51,680
is you get to see some insides of the System76 warehouse.

352
00:13:51,680 --> 00:13:52,840
You got some in this post, too.

353
00:13:52,840 --> 00:13:54,520
I love this picture of Carl.

354
00:13:54,520 --> 00:13:56,400
He should make that his Twitter profile.

355
00:13:56,400 --> 00:13:57,560
That's amazing.

356
00:13:57,560 --> 00:13:58,560
That's really good.

357
00:13:58,560 --> 00:14:01,160
So you can find those linuxunplug.com slash articles.

358
00:14:01,160 --> 00:14:02,480
This is something we try to do.

359
00:14:02,480 --> 00:14:05,400
You know, we talk about this stuff in the show.

360
00:14:05,400 --> 00:14:09,420
But we've recently, within like the last nine months or so,

361
00:14:09,420 --> 00:14:12,560
started doing these write-ups and posting these pictures.

362
00:14:12,560 --> 00:14:14,600
So that way, you actually have a little more, too,

363
00:14:14,600 --> 00:14:15,600
than what we're just saying here.

364
00:14:15,600 --> 00:14:16,880
You can go see what we're talking about,

365
00:14:16,880 --> 00:14:18,000
get a better sense of the vibe.

366
00:14:18,000 --> 00:14:20,320
And Cheezy has been doing a great job of updating

367
00:14:20,320 --> 00:14:22,000
the jupyter.gallery, jupyter.gallery.

368
00:14:22,000 --> 00:14:23,840
So go check that stuff out.

369
00:14:23,840 --> 00:14:26,600
Al, also, did you mention your ThinkPads with Popeye episode?

370
00:14:26,600 --> 00:14:29,880
Oh, dude, that was such a fun episode with Popeye.

371
00:14:29,880 --> 00:14:32,520
Anybody that's looking at like a used ThinkPad

372
00:14:32,520 --> 00:14:36,760
and wants to kind of know what might be the right one for them,

373
00:14:36,760 --> 00:14:41,840
but also what you can replace and fix after you've

374
00:14:41,840 --> 00:14:43,960
bought the ThinkPad, that stuff blew my mind.

375
00:14:43,960 --> 00:14:45,120
I had no idea.

376
00:14:45,120 --> 00:14:46,040
No idea.

377
00:14:46,040 --> 00:14:47,160
So that was a great episode.

378
00:14:47,160 --> 00:14:48,280
That's over at Extras.

379
00:14:48,280 --> 00:14:50,040
And while I'm talking about Extras,

380
00:14:50,040 --> 00:14:53,240
well, I'll mention it because we're on a roll right now.

381
00:14:53,240 --> 00:14:54,240
Extras is on YouTube.

382
00:14:54,240 --> 00:14:55,740
All of them are now posted on YouTube.

383
00:14:55,740 --> 00:14:58,040
If you're a YouTube connoisseur, I'll

384
00:14:58,040 --> 00:14:59,200
have a link to the channel.

385
00:14:59,200 --> 00:15:00,280
We don't have any subscribers yet

386
00:15:00,280 --> 00:15:01,680
because we just turned this thing on.

387
00:15:01,680 --> 00:15:02,520
So we don't have a name.

388
00:15:02,520 --> 00:15:04,040
Go subscribe, and you'll get little notifications

389
00:15:04,040 --> 00:15:05,000
when we get new stuff in there.

390
00:15:05,000 --> 00:15:07,040
How many subs do we got to get to name it?

391
00:15:07,040 --> 00:15:07,960
100, maybe?

392
00:15:07,960 --> 00:15:08,760
Maybe it's 1,000.

393
00:15:08,760 --> 00:15:09,480
Might be 1,000.

394
00:15:09,480 --> 00:15:10,480
Either way, we need your help.

395
00:15:10,480 --> 00:15:10,980
Yeah.

396
00:15:10,980 --> 00:15:14,600
So you'll find the link at linuxunplug.com slash 329.

397
00:15:14,600 --> 00:15:16,760
Go subscribe so that way we can give it a name.

398
00:15:16,760 --> 00:15:19,240
And we'll be posting all of the Extras on YouTube

399
00:15:19,240 --> 00:15:20,800
as well as extras.show.

400
00:15:20,800 --> 00:15:23,880
It's all over there, including that Popeye on ThinkPads

401
00:15:23,880 --> 00:15:24,720
episode.

402
00:15:24,720 --> 00:15:27,120
That extra stuff is so good.

403
00:15:27,120 --> 00:15:29,760
I should also mention, Brent isn't here today,

404
00:15:29,760 --> 00:15:33,080
but he did message me earlier and said,

405
00:15:33,080 --> 00:15:36,760
a new Brunch with Brent is out with Jacob, and it's fantastic.

406
00:15:36,760 --> 00:15:40,320
He talks about how TechSnap specifically

407
00:15:40,320 --> 00:15:41,360
got him into the industry.

408
00:15:41,360 --> 00:15:41,840
Oh, yeah.

409
00:15:41,840 --> 00:15:44,000
It sounds like a, I've not had a chance to listen.

410
00:15:44,000 --> 00:15:44,640
Yeah.

411
00:15:44,640 --> 00:15:45,840
Because it just came out this morning.

412
00:15:45,840 --> 00:15:46,560
Jacob's a good guy, though.

413
00:15:46,560 --> 00:15:47,560
I've had breakfast with Jacob.

414
00:15:47,560 --> 00:15:48,040
It's good.

415
00:15:48,040 --> 00:15:48,560
It's good.

416
00:15:48,560 --> 00:15:50,520
Brunch with Brent and breakfast with Jacob.

417
00:15:50,520 --> 00:15:52,000
All right, that's the housekeeping.

418
00:15:52,000 --> 00:15:54,600
Now, let's get into these net-busting VPNs.

419
00:15:54,600 --> 00:15:56,960
So we're not talking about WireGuard this week.

420
00:15:56,960 --> 00:16:00,840
This week, we want to create a mesh network of sense,

421
00:16:00,840 --> 00:16:03,200
or an overlay network.

422
00:16:03,200 --> 00:16:09,040
And the granddaddy from the 90s in this space is Tink.

423
00:16:09,040 --> 00:16:11,680
So how does Tink differentiate from WireGuard, Wes?

424
00:16:11,680 --> 00:16:13,240
Tink is quite different from WireGuard.

425
00:16:13,240 --> 00:16:14,920
WireGuard is very simple, which is great.

426
00:16:14,920 --> 00:16:16,960
That's one of the things we love about WireGuard.

427
00:16:16,960 --> 00:16:18,880
But when you're making a WireGuard connection,

428
00:16:18,880 --> 00:16:21,400
you're really just making one point-to-point link here.

429
00:16:21,400 --> 00:16:24,240
You've got the machine you're connecting to,

430
00:16:24,240 --> 00:16:26,160
and the machine you're connecting from.

431
00:16:26,160 --> 00:16:28,080
Tink can do a whole lot more.

432
00:16:28,080 --> 00:16:30,520
Not only does it also have support for things like Layer

433
00:16:30,520 --> 00:16:32,960
2, but it's a mesh network.

434
00:16:32,960 --> 00:16:35,120
So it has a concept of understanding

435
00:16:35,120 --> 00:16:37,160
all the different nodes you've got on the network.

436
00:16:37,160 --> 00:16:38,280
It manages that.

437
00:16:38,280 --> 00:16:39,680
The best routes to those nodes.

438
00:16:39,680 --> 00:16:41,240
And it can figure out the best routes

439
00:16:41,240 --> 00:16:42,320
to traverse that network.

440
00:16:42,320 --> 00:16:46,200
So as long as two nodes that you've got on your Tink network

441
00:16:46,200 --> 00:16:49,440
can talk through somehow, they will find a way.

442
00:16:49,440 --> 00:16:51,960
So you could set up a public relay on a VPS,

443
00:16:51,960 --> 00:16:53,640
and you could have my systems, which

444
00:16:53,640 --> 00:16:56,160
are behind a massive carrier-grade NAT.

445
00:16:56,160 --> 00:16:58,920
It is punishingly awful.

446
00:16:58,920 --> 00:17:00,480
But Tink can accommodate that.

447
00:17:00,480 --> 00:17:01,360
Yes, very much so.

448
00:17:01,360 --> 00:17:03,560
It'll try to figure out whatever.

449
00:17:03,560 --> 00:17:05,100
Yeah, you just need enough information,

450
00:17:05,100 --> 00:17:07,960
and usually having some sort of public node not behind NAT.

451
00:17:07,960 --> 00:17:09,520
That will make things a lot easier.

452
00:17:09,520 --> 00:17:11,400
But it's got a lot of sophisticated NAT

453
00:17:11,400 --> 00:17:14,040
busting integrated right inside of it.

454
00:17:14,040 --> 00:17:17,200
So we sat down with one of the original creators of Tink,

455
00:17:17,200 --> 00:17:20,880
and we asked how did he get the idea for Tink to begin with?

456
00:17:20,880 --> 00:17:27,320
It started out when I found this new feature in one

457
00:17:27,320 --> 00:17:28,920
of the very early Linux kernels.

458
00:17:28,920 --> 00:17:30,800
So it was called EtherTap.

459
00:17:30,800 --> 00:17:34,440
It was the predecessor to what's now called TUN.

460
00:17:34,440 --> 00:17:38,800
And yeah, I wrote a little program to experiment with it.

461
00:17:38,800 --> 00:17:42,060
And then naturally, I created some kind of tool

462
00:17:42,060 --> 00:17:45,680
to create a network connection between two computers

463
00:17:45,680 --> 00:17:47,680
and tunnel the packets back and forth.

464
00:17:47,680 --> 00:17:52,920
And yeah, so that was already a working kind of VPN,

465
00:17:52,920 --> 00:17:56,800
except it didn't do encryption, or it was very hard

466
00:17:56,800 --> 00:17:58,960
to actually set it up.

467
00:17:58,960 --> 00:18:00,680
I had to do a lot of things manually.

468
00:18:00,680 --> 00:18:05,080
And then a friend, Ivo Timmermans, he joined in.

469
00:18:05,080 --> 00:18:08,120
And he actually took this a step further,

470
00:18:08,120 --> 00:18:12,240
and he made a proper demon out of it, introduced encryption.

471
00:18:12,240 --> 00:18:15,480
And then yeah, also with some other people who joined in.

472
00:18:15,480 --> 00:18:18,400
But I think Ivo and me were the people who

473
00:18:18,400 --> 00:18:19,880
coded most in the beginning.

474
00:18:19,880 --> 00:18:21,680
So how long ago was this, roughly?

475
00:18:21,680 --> 00:18:24,400
So we started in 1997.

476
00:18:24,400 --> 00:18:26,280
Wow, that was a whole other internet.

477
00:18:26,280 --> 00:18:27,960
That is literally another internet ago.

478
00:18:27,960 --> 00:18:29,240
Yes.

479
00:18:29,240 --> 00:18:30,000
What's that like?

480
00:18:30,000 --> 00:18:31,400
What's it like a project like this?

481
00:18:31,400 --> 00:18:34,540
I mean, there must have been moments of security panic.

482
00:18:34,540 --> 00:18:36,400
There must have been moments of trying

483
00:18:36,400 --> 00:18:37,920
to decide if it's worth modernizing

484
00:18:37,920 --> 00:18:38,800
as the kernel changes.

485
00:18:38,800 --> 00:18:40,800
I mean, there must have been all kinds of things

486
00:18:40,800 --> 00:18:42,400
to keep up with over that time period.

487
00:18:42,400 --> 00:18:43,960
Yes.

488
00:18:43,960 --> 00:18:47,120
Well, you mentioned a few things that indeed happened.

489
00:18:47,120 --> 00:18:51,000
It started out as kind of a hobby project.

490
00:18:51,000 --> 00:18:53,080
So we were all students back then.

491
00:18:53,080 --> 00:18:57,040
And we actually wanted to have our own private network

492
00:18:57,040 --> 00:19:02,360
so we could exchange files easily without having to,

493
00:19:02,360 --> 00:19:06,880
well, without being that visible to the rest of the network.

494
00:19:06,880 --> 00:19:08,000
Of course.

495
00:19:08,000 --> 00:19:11,280
And well, one thing was that, of course,

496
00:19:11,280 --> 00:19:15,080
we were not the first one to invent a tool like this.

497
00:19:15,080 --> 00:19:16,960
There were already commercial solutions.

498
00:19:16,960 --> 00:19:21,960
Or I think we had VTUN and SIPE in the Linux world

499
00:19:21,960 --> 00:19:23,480
that did something similar.

500
00:19:23,480 --> 00:19:25,880
Was the beauty, though, that it really sort of created

501
00:19:25,880 --> 00:19:28,960
a truly flat mesh network?

502
00:19:28,960 --> 00:19:31,600
I mean, you could have friends all over the world,

503
00:19:31,600 --> 00:19:33,800
essentially, that are in one flat network.

504
00:19:33,800 --> 00:19:34,680
Exactly.

505
00:19:34,680 --> 00:19:40,040
So for example, Evo was not in the same city as we were.

506
00:19:40,040 --> 00:19:42,080
So this was a good way to make sure

507
00:19:42,080 --> 00:19:43,480
that we could access his computer

508
00:19:43,480 --> 00:19:49,320
and run things like IRC and FTP.

509
00:19:49,320 --> 00:19:51,680
I like the idea you can use it for development resources

510
00:19:51,680 --> 00:19:53,880
of the project you're developing.

511
00:19:53,880 --> 00:19:54,680
Absolutely.

512
00:19:54,680 --> 00:19:55,840
Yeah.

513
00:19:55,840 --> 00:19:58,920
So I noticed that the project for a while

514
00:19:58,920 --> 00:20:02,880
has been nearing 1.1.

515
00:20:02,880 --> 00:20:05,120
So it doesn't seem like the project's moving at 100 miles

516
00:20:05,120 --> 00:20:05,640
per hour.

517
00:20:05,640 --> 00:20:08,000
But just as of a couple of months ago,

518
00:20:08,000 --> 00:20:09,520
there was an update on the news list.

519
00:20:09,520 --> 00:20:11,040
So things are still continuing.

520
00:20:11,040 --> 00:20:13,000
So development continues.

521
00:20:13,000 --> 00:20:16,160
How would you describe the pace and future velocity of that?

522
00:20:16,160 --> 00:20:18,440
Yeah, it's very slow, sadly.

523
00:20:18,440 --> 00:20:20,720
So 1.0 is quite stable.

524
00:20:20,720 --> 00:20:24,400
And I'm not planning to add any features to that.

525
00:20:24,400 --> 00:20:28,080
There are still users who sometimes find bugs or say,

526
00:20:28,080 --> 00:20:29,960
well, OK, with this little change,

527
00:20:29,960 --> 00:20:32,720
it will be more useful for us.

528
00:20:32,720 --> 00:20:34,800
So then we try to implement that.

529
00:20:34,800 --> 00:20:37,360
And then, of course, yeah, there's 1.1,

530
00:20:37,360 --> 00:20:40,040
which is a big improvement over 1.0.

531
00:20:40,040 --> 00:20:43,320
I just need to find time to finally finish this.

532
00:20:43,320 --> 00:20:44,560
Of course, that's always hard.

533
00:20:44,560 --> 00:20:46,880
I thought several years ago that I would have the time

534
00:20:46,880 --> 00:20:47,400
to do this.

535
00:20:47,400 --> 00:20:50,840
But unfortunately, I'm not a student anymore.

536
00:20:50,840 --> 00:20:52,920
So I have a proper job and a life.

537
00:20:52,920 --> 00:20:54,400
Real work comes first, yeah.

538
00:20:54,400 --> 00:20:56,520
What sort of features might we be looking forward

539
00:20:56,520 --> 00:20:58,200
to when you do find that time?

540
00:20:58,200 --> 00:21:00,200
I think already a lot of the features

541
00:21:00,200 --> 00:21:03,200
that I want to have in 1.1 are there.

542
00:21:03,200 --> 00:21:05,760
But there are some rough edges that I

543
00:21:05,760 --> 00:21:07,840
want to have smoothed out.

544
00:21:07,840 --> 00:21:10,120
One of them is, for example, key management.

545
00:21:10,120 --> 00:21:13,360
So already it's a big improvement over 1.0.

546
00:21:13,360 --> 00:21:17,320
It's much easier to create keys, exchange keys with others,

547
00:21:17,320 --> 00:21:18,560
also in a secure way.

548
00:21:18,560 --> 00:21:19,840
Oh, that's great.

549
00:21:19,840 --> 00:21:24,160
But one of the issues is still, I would say,

550
00:21:24,160 --> 00:21:25,640
handling key renewal.

551
00:21:25,640 --> 00:21:30,600
If, for example, your public key is compromised somehow,

552
00:21:30,600 --> 00:21:31,600
you want to update it.

553
00:21:31,600 --> 00:21:34,320
You want to make sure that all the other nodes in the network

554
00:21:34,320 --> 00:21:38,080
get that new key in a safe way.

555
00:21:38,080 --> 00:21:38,840
Yeah, absolutely.

556
00:21:38,840 --> 00:21:42,120
Also, if you don't trust someone anymore at the moment,

557
00:21:42,120 --> 00:21:46,800
it's kind of a manual process to block this person or this node

558
00:21:46,800 --> 00:21:48,960
on all the other nodes.

559
00:21:48,960 --> 00:21:51,440
And it would also be great if that would be done

560
00:21:51,440 --> 00:21:53,320
in a much more automated way.

561
00:21:53,320 --> 00:21:55,760
But that requires some changes.

562
00:21:55,760 --> 00:21:57,440
So there is no infrastructure at the moment

563
00:21:57,440 --> 00:22:00,920
to spread that information throughout the network.

564
00:22:00,920 --> 00:22:03,840
Right, that sounds like a lot of coordinating to coordinate.

565
00:22:03,840 --> 00:22:05,960
Yes.

566
00:22:05,960 --> 00:22:09,720
I'm curious what you might see on the larger

567
00:22:09,720 --> 00:22:11,560
side of a Tink network.

568
00:22:11,560 --> 00:22:14,520
How many nodes have you seen out there?

569
00:22:14,520 --> 00:22:17,920
So myself, I've seen networks of over 500 nodes.

570
00:22:17,920 --> 00:22:20,640
One of the biggest ones that is kind of public

571
00:22:20,640 --> 00:22:23,600
is the Kales VPN network.

572
00:22:23,600 --> 00:22:27,320
So it's kind of the European hackerspaces.

573
00:22:27,320 --> 00:22:31,080
They are united using this network.

574
00:22:31,080 --> 00:22:35,400
There's actually a counterpart in the US, DN42,

575
00:22:35,400 --> 00:22:36,920
where they use various technologies,

576
00:22:36,920 --> 00:22:38,320
including also Tink.

577
00:22:38,320 --> 00:22:40,680
That's quite a large network.

578
00:22:40,680 --> 00:22:43,920
But I've heard from other people that they

579
00:22:43,920 --> 00:22:45,880
have similar-sized networks.

580
00:22:45,880 --> 00:22:49,600
And there are also businesses, companies

581
00:22:49,600 --> 00:22:53,120
that use Tink internally to connect offices together.

582
00:22:53,120 --> 00:22:57,360
And it's very hard to get information of exactly how

583
00:22:57,360 --> 00:22:58,880
many nodes they have and so on.

584
00:22:58,880 --> 00:23:00,800
Yeah, I would imagine people are in part

585
00:23:00,800 --> 00:23:01,800
doing this for security.

586
00:23:01,800 --> 00:23:03,800
So they're not keen to share all their details.

587
00:23:03,800 --> 00:23:05,840
No.

588
00:23:05,840 --> 00:23:08,920
But I'm just always fascinated, because I

589
00:23:08,920 --> 00:23:13,680
can see it working well for myself with a dozen nodes.

590
00:23:13,680 --> 00:23:15,960
But I was just curious, since I probably

591
00:23:15,960 --> 00:23:17,080
won't ever take it that far.

592
00:23:17,080 --> 00:23:20,840
I was just kind of interested to see how far it could go.

593
00:23:20,840 --> 00:23:23,400
So it sounds like 1.1 is still out in the works,

594
00:23:23,400 --> 00:23:25,640
but not necessarily a timetable.

595
00:23:25,640 --> 00:23:27,640
But as far as features go, really,

596
00:23:27,640 --> 00:23:30,480
everything that's in the release now is pretty solid.

597
00:23:30,480 --> 00:23:31,520
It's there.

598
00:23:31,520 --> 00:23:33,640
It's fairly feature-complete.

599
00:23:33,640 --> 00:23:35,720
As we noted, Tink's been around for a while.

600
00:23:35,720 --> 00:23:37,720
I'm curious if there's any features about Tink,

601
00:23:37,720 --> 00:23:40,560
things you love that stand out as reasons to use Tink.

602
00:23:40,560 --> 00:23:42,880
I mean, there are more competitors these days,

603
00:23:42,880 --> 00:23:44,640
but Tink is still great software.

604
00:23:44,640 --> 00:23:45,280
Yeah.

605
00:23:45,280 --> 00:23:48,520
Well, one thing that I think makes Tink stand out

606
00:23:48,520 --> 00:23:52,560
is it doesn't impose any kind of restrictions

607
00:23:52,560 --> 00:23:54,760
on the network topology use.

608
00:23:54,760 --> 00:23:56,280
If you try to configure Tink, you

609
00:23:56,280 --> 00:23:58,800
will notice that there is nothing in a configuration

610
00:23:58,800 --> 00:24:03,640
file that basically says use this IP address or this subnet.

611
00:24:03,640 --> 00:24:05,120
Basically, it says, well, yeah, you

612
00:24:05,120 --> 00:24:08,480
can create a script yourself, which Tink will call for you.

613
00:24:08,480 --> 00:24:10,440
But in the script, you have to configure actually

614
00:24:10,440 --> 00:24:13,280
the virtual network interface that's created by Tink.

615
00:24:13,280 --> 00:24:13,760
Right.

616
00:24:13,760 --> 00:24:14,900
So you have all the control.

617
00:24:14,900 --> 00:24:17,440
You can modify that, make it configure whatever you need.

618
00:24:17,440 --> 00:24:17,920
Yeah.

619
00:24:17,920 --> 00:24:18,720
That is great.

620
00:24:18,720 --> 00:24:19,220
Right.

621
00:24:19,220 --> 00:24:20,800
And it also strikes me as similar,

622
00:24:20,800 --> 00:24:24,480
Tink supports Layer 2, which a lot of the newer VPN solutions

623
00:24:24,480 --> 00:24:25,440
just sort of skip.

624
00:24:25,440 --> 00:24:28,840
But that can make for very flexible implementations.

625
00:24:28,840 --> 00:24:29,320
Yes.

626
00:24:29,320 --> 00:24:30,400
Yeah.

627
00:24:30,400 --> 00:24:32,680
It seems particularly attractive for someone like myself

628
00:24:32,680 --> 00:24:33,640
who's behind a NAT.

629
00:24:33,640 --> 00:24:36,000
And it's a particularly challenging NAT.

630
00:24:36,000 --> 00:24:37,120
I've got a VPS.

631
00:24:37,120 --> 00:24:38,920
I can throw Tink on that as well.

632
00:24:38,920 --> 00:24:41,800
And Tink can sort of navigate that for me

633
00:24:41,800 --> 00:24:42,880
and solve that problem.

634
00:24:42,880 --> 00:24:44,960
And that's what makes it really special for me.

635
00:24:44,960 --> 00:24:46,640
Well, Hus, thank you so much for joining us

636
00:24:46,640 --> 00:24:49,320
and just kind of giving us some background details on it.

637
00:24:49,320 --> 00:24:50,760
I find this stuff fascinating.

638
00:24:50,760 --> 00:24:52,520
And your project is one of those that's

639
00:24:52,520 --> 00:24:54,600
been around for such a long time.

640
00:24:54,600 --> 00:24:57,120
It's sort of an unsung hero to a lot of people

641
00:24:57,120 --> 00:24:59,120
where they find it solves that perfect problem.

642
00:24:59,120 --> 00:25:02,480
But it's not a project that gets a ton of attention either.

643
00:25:02,480 --> 00:25:03,920
Really appreciate you taking a moment

644
00:25:03,920 --> 00:25:05,360
so we could shine a little light on it.

645
00:25:05,360 --> 00:25:06,720
Well, thank you for having me.

646
00:25:06,720 --> 00:25:08,760
So let's kind of define more specifically

647
00:25:08,760 --> 00:25:11,080
how we're using the term overlay network

648
00:25:11,080 --> 00:25:12,240
and what we're using it for.

649
00:25:12,240 --> 00:25:14,680
I'll give you an example, a day-to-day example.

650
00:25:14,680 --> 00:25:18,120
Myself, Drew, and Wes, we all have home studios.

651
00:25:18,120 --> 00:25:20,520
And we'll sometimes need to connect into resources here

652
00:25:20,520 --> 00:25:22,160
for production purposes.

653
00:25:22,160 --> 00:25:25,240
Or sometimes Chris forgets to export an episode of Linux

654
00:25:25,240 --> 00:25:27,800
Action News and somebody needs to remote in and.

655
00:25:27,800 --> 00:25:28,560
Never happens.

656
00:25:28,560 --> 00:25:30,760
Never happens.

657
00:25:30,760 --> 00:25:34,400
And we all need to connect back to JP1.

658
00:25:34,400 --> 00:25:37,320
I would like to connect to my home network

659
00:25:37,320 --> 00:25:39,800
as well, regardless of where I'm at from my laptop,

660
00:25:39,800 --> 00:25:43,240
and be able to connect to the JP1 infrastructure.

661
00:25:43,240 --> 00:25:45,720
And so I needed a solution that could kind of create

662
00:25:45,720 --> 00:25:48,040
an overlay network for all of this, one LAN.

663
00:25:48,040 --> 00:25:50,600
Right, there's sort of a magical feeling

664
00:25:50,600 --> 00:25:53,600
when you have a flat network, because everything's

665
00:25:53,600 --> 00:25:54,120
accessible.

666
00:25:54,120 --> 00:25:55,920
It just feels right next to you, right,

667
00:25:55,920 --> 00:25:57,000
and right at your fingertips.

668
00:25:57,000 --> 00:25:58,800
Yeah, yeah, things that do auto discovery,

669
00:25:58,800 --> 00:26:00,960
like old video games, like StarCraft.

670
00:26:00,960 --> 00:26:02,200
You can all see each other.

671
00:26:02,200 --> 00:26:04,480
It's a really unique experience, because you

672
00:26:04,480 --> 00:26:08,320
can be on a Raspberry Pi on a MiFi connection in an RV

673
00:26:08,320 --> 00:26:11,200
and be pinging a box in the studio

674
00:26:11,200 --> 00:26:12,760
like it's just a local machine.

675
00:26:12,760 --> 00:26:14,440
Right, and you can simplify some things

676
00:26:14,440 --> 00:26:16,080
and work across regions.

677
00:26:16,080 --> 00:26:17,560
Maybe you've got different providers or different data

678
00:26:17,560 --> 00:26:18,040
centers.

679
00:26:18,040 --> 00:26:20,200
You can make things flat that way, too.

680
00:26:20,200 --> 00:26:23,960
Unfortunately, I've used Tink, and we started evaluating Tink

681
00:26:23,960 --> 00:26:25,960
for our use case here.

682
00:26:25,960 --> 00:26:28,800
And we ran into some problems, because really, we've

683
00:26:28,800 --> 00:26:30,920
got a few different security domains.

684
00:26:30,920 --> 00:26:33,400
I don't need access to your home network.

685
00:26:33,400 --> 00:26:35,840
And really, there's some parts of the studio that not every,

686
00:26:35,840 --> 00:26:37,800
you know, we only need access to a few machines

687
00:26:37,800 --> 00:26:39,320
here at the studio.

688
00:26:39,320 --> 00:26:41,840
Tink doesn't really have any filtering capabilities.

689
00:26:41,840 --> 00:26:45,040
There's nothing built in to help you manage

690
00:26:45,040 --> 00:26:47,040
multiple different sets of users.

691
00:26:47,040 --> 00:26:49,600
And when you want to add a new host, well,

692
00:26:49,600 --> 00:26:50,640
if I want to talk to a new machine

693
00:26:50,640 --> 00:26:52,280
that you've added to the studio, you've

694
00:26:52,280 --> 00:26:53,880
got to go give me a new file that's

695
00:26:53,880 --> 00:26:55,520
got all the information about that.

696
00:26:55,520 --> 00:26:57,040
And that works OK for a few machines.

697
00:26:57,040 --> 00:26:58,920
But if Drew's adding a new machine

698
00:26:58,920 --> 00:27:02,120
that he wants to share with us, it gets tedious fast.

699
00:27:02,120 --> 00:27:03,560
Wes and I were pretty excited when

700
00:27:03,560 --> 00:27:09,400
we saw Slack announce Nebula, an open source global overlay

701
00:27:09,400 --> 00:27:10,540
network.

702
00:27:10,540 --> 00:27:12,520
And we invited Ryan on to tell us about it.

703
00:27:12,520 --> 00:27:15,000
Ryan, this seems like something that's, A, I mean,

704
00:27:15,000 --> 00:27:17,120
it's pretty notable that it's a pretty big open source

705
00:27:17,120 --> 00:27:19,880
project from Slack, but B, it seems

706
00:27:19,880 --> 00:27:21,680
like it's pretty well-developed.

707
00:27:21,680 --> 00:27:24,640
Like, it's a complete ready-to-go solution.

708
00:27:24,640 --> 00:27:25,640
Yeah, that's right.

709
00:27:25,640 --> 00:27:29,080
You know, it's funny to have Nebula out in the wild

710
00:27:29,080 --> 00:27:30,960
and people seeing it for the first time

711
00:27:30,960 --> 00:27:35,240
because it's actually old news inside of Slack at this point.

712
00:27:35,240 --> 00:27:37,240
It's three years old.

713
00:27:37,240 --> 00:27:37,760
Oh, wow.

714
00:27:37,760 --> 00:27:38,480
OK, yeah.

715
00:27:38,480 --> 00:27:41,240
So you've been using it in production for a while then?

716
00:27:41,240 --> 00:27:43,800
It's been in production for about two of those years.

717
00:27:43,800 --> 00:27:45,800
All right, so an overlay network,

718
00:27:45,800 --> 00:27:48,880
it seems like you could have accomplished this possibly

719
00:27:48,880 --> 00:27:52,200
using IPSec or maybe even WireGuard with some really

720
00:27:52,200 --> 00:27:53,480
sophisticated routing.

721
00:27:53,480 --> 00:27:56,960
I'm guessing that was tried and done and didn't work.

722
00:27:56,960 --> 00:27:58,960
Where did that kind of fall down for you guys?

723
00:27:58,960 --> 00:28:02,000
So our original network, and are you

724
00:28:02,000 --> 00:28:04,880
going to provide a link to the blog post in the show notes

725
00:28:04,880 --> 00:28:05,440
possibly?

726
00:28:05,440 --> 00:28:06,400
Absolutely.

727
00:28:06,400 --> 00:28:09,640
Your Medium post and also the official announcement too

728
00:28:09,640 --> 00:28:10,360
on the, you bet.

729
00:28:10,360 --> 00:28:13,040
Yeah, we've been reading it voraciously.

730
00:28:13,040 --> 00:28:13,600
Great.

731
00:28:13,600 --> 00:28:17,440
Yeah, so we actually did IPSec originally.

732
00:28:17,440 --> 00:28:22,280
And we ran into, so at first it was fine, right?

733
00:28:22,280 --> 00:28:25,960
As you expand out, you have one region in a cloud provider

734
00:28:25,960 --> 00:28:27,040
and everything's fine.

735
00:28:27,040 --> 00:28:28,680
And then you expand to another region

736
00:28:28,680 --> 00:28:31,480
and IPSec was kind of the obvious choice

737
00:28:31,480 --> 00:28:33,280
for connecting multiple regions.

738
00:28:33,280 --> 00:28:34,680
It was the most supported way.

739
00:28:34,680 --> 00:28:38,360
There weren't, there are now in the past year or so,

740
00:28:38,360 --> 00:28:43,200
they've added support for connecting remote regions that

741
00:28:43,200 --> 00:28:46,440
don't require VPN, but we can get into that in a minute.

742
00:28:46,440 --> 00:28:49,920
So we used IPSec out of the gate and it actually

743
00:28:49,920 --> 00:28:52,400
worked fine in the beginning.

744
00:28:52,400 --> 00:28:55,640
But as we scaled up, the complexity grew.

745
00:28:55,640 --> 00:29:01,960
And I jokingly called our IPSec set up our RAID 0 network

746
00:29:01,960 --> 00:29:06,280
configuration because the problem was

747
00:29:06,280 --> 00:29:09,600
you had to do these kind of strange routing tricks

748
00:29:09,600 --> 00:29:12,320
because no one box could handle the traffic.

749
00:29:12,320 --> 00:29:18,080
And because of that, if you lost any of the boxes on one side,

750
00:29:18,080 --> 00:29:20,120
even one of them, you lost routing

751
00:29:20,120 --> 00:29:22,160
to an unknown number of nodes.

752
00:29:22,160 --> 00:29:25,720
And so it wasn't really viable to keep

753
00:29:25,720 --> 00:29:27,280
running that remote region that way.

754
00:29:27,280 --> 00:29:29,200
So we would have to offline an entire region,

755
00:29:29,200 --> 00:29:31,360
hence RAID 0 network configuration.

756
00:29:31,360 --> 00:29:32,520
No kidding.

757
00:29:32,520 --> 00:29:34,040
That was one of the major challenges.

758
00:29:34,040 --> 00:29:37,520
And so we were already many thousands of servers

759
00:29:37,520 --> 00:29:38,120
at that point.

760
00:29:38,120 --> 00:29:40,560
And there were also folks that dissuaded us

761
00:29:40,560 --> 00:29:45,480
from using IPSec at scales that we were planning to hit.

762
00:29:45,480 --> 00:29:48,040
And I can't speak to whether they were correct or not,

763
00:29:48,040 --> 00:29:52,000
but that was a caution that even some folks that

764
00:29:52,000 --> 00:29:55,680
work with IPSec regularly, they said in transport mode, which

765
00:29:55,680 --> 00:29:58,560
is sort of the node to node version of IPSec,

766
00:29:58,560 --> 00:30:02,200
they said you might start to see performance issues when

767
00:30:02,200 --> 00:30:03,240
you're above 1,000 nodes.

768
00:30:03,240 --> 00:30:05,800
And again, this is secondhand, so I'm not

769
00:30:05,800 --> 00:30:07,040
saying that we saw that.

770
00:30:07,040 --> 00:30:10,440
I'm just saying that was kind of a warning that I was given.

771
00:30:10,440 --> 00:30:14,680
And so when we thought about the problem also,

772
00:30:14,680 --> 00:30:18,840
we looked at kind of traditional VPNs.

773
00:30:18,840 --> 00:30:23,400
And one of the things that we didn't care for

774
00:30:23,400 --> 00:30:27,200
was having to tell every node about every other node

775
00:30:27,200 --> 00:30:27,920
ahead of time.

776
00:30:27,920 --> 00:30:29,120
Right, that's a lot of overhead.

777
00:30:29,120 --> 00:30:31,240
You have to manage it somewhere, configuration management,

778
00:30:31,240 --> 00:30:32,360
or it's got to be somewhere.

779
00:30:32,360 --> 00:30:33,800
Yeah, and it's not just that.

780
00:30:33,800 --> 00:30:37,040
But think about when you get to many thousands of nodes,

781
00:30:37,040 --> 00:30:39,720
say you're running a dynamic environment where

782
00:30:39,720 --> 00:30:42,480
hosts come up and autoscale and that kind of thing.

783
00:30:42,480 --> 00:30:45,560
A host comes up, and you have to ensure

784
00:30:45,560 --> 00:30:50,040
with some measure of certainty that every other host it

785
00:30:50,040 --> 00:30:54,200
might talk to has the proper key before it starts

786
00:30:54,200 --> 00:30:56,080
talking to that host, right?

787
00:30:56,080 --> 00:30:58,800
And that becomes a complex to manage problem when you're

788
00:30:58,800 --> 00:31:00,760
talking thousands of hosts.

789
00:31:00,760 --> 00:31:04,160
And so we went a different way with Nebula,

790
00:31:04,160 --> 00:31:07,240
and we did certificate-based authentication between nodes.

791
00:31:07,240 --> 00:31:10,280
And another part that I note, I mean,

792
00:31:10,280 --> 00:31:12,000
certificate authentication is notable,

793
00:31:12,000 --> 00:31:14,000
but the other thing that I noted about this that

794
00:31:14,000 --> 00:31:16,280
seems to stand out is groups play

795
00:31:16,280 --> 00:31:19,360
a large role in sort of the access control of this.

796
00:31:19,360 --> 00:31:22,000
That was one of the events that was really

797
00:31:22,000 --> 00:31:24,480
the moment we decided to write Nebula.

798
00:31:24,480 --> 00:31:28,760
And so the primary authors are myself and Nate Brown,

799
00:31:28,760 --> 00:31:31,280
who also works at Slack and has worked there

800
00:31:31,280 --> 00:31:32,480
for four and a half years.

801
00:31:32,480 --> 00:31:35,040
By the way, a bit of history, I've worked there five years

802
00:31:35,040 --> 00:31:36,600
and was the first security employee.

803
00:31:36,600 --> 00:31:38,760
Nate has worked there four and a half years

804
00:31:38,760 --> 00:31:40,240
and was the second security employee.

805
00:31:40,240 --> 00:31:41,080
So we've-

806
00:31:41,080 --> 00:31:41,920
That is fantastic.

807
00:31:41,920 --> 00:31:43,160
Yeah, so we've been there quite a while,

808
00:31:43,160 --> 00:31:45,040
and we've actually done some really fun work

809
00:31:45,040 --> 00:31:45,880
outside of this.

810
00:31:45,880 --> 00:31:48,400
But so we were actually just chatting,

811
00:31:48,400 --> 00:31:51,840
and we were actually, I know you mentioned Tink.

812
00:31:51,840 --> 00:31:54,120
Before the show, we were talking about that briefly.

813
00:31:54,120 --> 00:31:55,200
I really liked Tink.

814
00:31:55,200 --> 00:31:57,800
Tink's this great project from the 90s,

815
00:31:57,800 --> 00:31:59,920
and I think the guy's name is Gus

816
00:31:59,920 --> 00:32:00,880
that's been working on it.

817
00:32:00,880 --> 00:32:05,680
And it's got some really, really cool routing tricks

818
00:32:05,680 --> 00:32:08,840
and sort of gets around NAT and that kind of thing.

819
00:32:08,840 --> 00:32:11,600
And so we actually very seriously looked at

820
00:32:11,600 --> 00:32:13,160
what it would take to use Tink

821
00:32:13,160 --> 00:32:16,440
or maybe contribute back to Tink and go that route.

822
00:32:16,440 --> 00:32:19,240
But what really led us to writing Nebula

823
00:32:19,240 --> 00:32:21,920
was this idea that we wanted to encapsulate security groups,

824
00:32:21,920 --> 00:32:23,000
as you mentioned.

825
00:32:23,000 --> 00:32:26,360
Hmm, this, at first I struggled to quite understand this,

826
00:32:26,360 --> 00:32:29,200
but when I started looking at the example configuration

827
00:32:29,200 --> 00:32:31,200
files, and I saw an example in there

828
00:32:31,200 --> 00:32:33,920
where it was broken down by servers, laptops,

829
00:32:33,920 --> 00:32:35,480
it started to click a little bit more

830
00:32:35,480 --> 00:32:38,560
that you could start to manage a much larger set of machines

831
00:32:38,560 --> 00:32:39,520
by grouping them up.

832
00:32:39,520 --> 00:32:40,840
Yeah, maybe you could clue us in

833
00:32:40,840 --> 00:32:42,720
on how you guys are using groups.

834
00:32:42,720 --> 00:32:45,800
Yeah, so the kind of contrived example,

835
00:32:45,800 --> 00:32:49,720
I mean, we actually tie groups to Chef roles.

836
00:32:49,720 --> 00:32:54,160
So if you're familiar with, yeah, so with config management,

837
00:32:54,160 --> 00:32:58,080
because the Chef role really describes what a host

838
00:32:58,080 --> 00:33:00,040
or what a container's job is,

839
00:33:00,040 --> 00:33:03,960
then that kind of makes a natural grouping.

840
00:33:03,960 --> 00:33:06,880
And we also add in some special stuff

841
00:33:06,880 --> 00:33:09,440
like which region it's in,

842
00:33:09,440 --> 00:33:11,800
which availability zone it's in, that kind of thing,

843
00:33:11,800 --> 00:33:14,120
just so that we can do even more fine-grained.

844
00:33:14,120 --> 00:33:16,840
And we opportunistically add groups we might use,

845
00:33:16,840 --> 00:33:20,280
and even if we don't actually use them for filtering rules,

846
00:33:20,280 --> 00:33:23,880
but we add as much kind of metadata as we can about hosts.

847
00:33:23,880 --> 00:33:26,880
And so, you know, the contrived example I give is,

848
00:33:26,880 --> 00:33:29,840
if you're a database server and say, you know,

849
00:33:29,840 --> 00:33:30,960
in a very simple setup,

850
00:33:30,960 --> 00:33:34,000
you just allow web servers to talk to that database,

851
00:33:34,000 --> 00:33:38,120
then the only rule on your database servers is,

852
00:33:38,120 --> 00:33:39,440
you know, assume MySQL.

853
00:33:39,440 --> 00:33:41,480
The only rule on the database servers would be,

854
00:33:41,480 --> 00:33:44,400
I allow TCP 3306 from anything

855
00:33:44,400 --> 00:33:46,400
that's in the group web servers.

856
00:33:46,400 --> 00:33:49,720
And that's powerful because you no longer have to

857
00:33:49,720 --> 00:33:52,480
care about IP addresses or host names or anything.

858
00:33:52,480 --> 00:33:53,800
And this isn't new, right?

859
00:33:53,800 --> 00:33:55,240
This is something that, you know,

860
00:33:55,240 --> 00:33:57,920
cloud security groups have existed for a long time.

861
00:33:57,920 --> 00:34:02,120
The difference is Nebula security groups are,

862
00:34:02,120 --> 00:34:03,960
well, they're cross-platform, which is pretty cool,

863
00:34:03,960 --> 00:34:07,160
but they're also cross-provider and cross-region.

864
00:34:07,160 --> 00:34:09,200
Right, right, that is a big deal.

865
00:34:09,200 --> 00:34:11,400
I mean, we're talking about as an overlay network

866
00:34:11,400 --> 00:34:14,080
and you can really use this to stitch everything together.

867
00:34:14,080 --> 00:34:17,280
I mean, is this a lot of traffic then going through Nebula?

868
00:34:17,280 --> 00:34:19,880
Yeah, I don't have the numbers in front of me,

869
00:34:19,880 --> 00:34:22,000
but it's many billions of packets per second.

870
00:34:22,000 --> 00:34:24,280
It's really neat to see.

871
00:34:24,280 --> 00:34:27,000
Yeah, it's in heavy use.

872
00:34:27,000 --> 00:34:29,760
I can only imagine what it must have been like

873
00:34:29,760 --> 00:34:33,480
to evangelize that inside a company and then roll it out

874
00:34:33,480 --> 00:34:35,720
and then have to work out the kinks.

875
00:34:35,720 --> 00:34:38,400
That must have been quite an experience.

876
00:34:38,400 --> 00:34:42,040
Yeah, there were some fun times,

877
00:34:42,040 --> 00:34:43,440
especially in the early days.

878
00:34:43,440 --> 00:34:47,560
One of the really great things about this project in general

879
00:34:47,560 --> 00:34:51,320
and kind of following on some of the other projects

880
00:34:51,320 --> 00:34:52,920
I've worked on and Nate's worked on is

881
00:34:52,920 --> 00:34:56,000
this is something we also just wanted for ourselves, right?

882
00:34:56,000 --> 00:34:58,440
So there's that selfish aspect,

883
00:34:58,440 --> 00:35:01,040
which is we want this to be great for Slack.

884
00:35:01,040 --> 00:35:03,160
We also want to use this for our home networks

885
00:35:03,160 --> 00:35:04,160
and everything else.

886
00:35:04,160 --> 00:35:06,680
Like we really wrote it for ourselves

887
00:35:06,680 --> 00:35:08,600
and for Slack at the same time.

888
00:35:08,600 --> 00:35:12,680
So tell me the thoughts behind going open source.

889
00:35:12,680 --> 00:35:14,800
Yeah, there are a lot of good reasons to do it.

890
00:35:14,800 --> 00:35:17,520
I think the main one is,

891
00:35:17,520 --> 00:35:19,400
you know, everyone says they give back to the community

892
00:35:19,400 --> 00:35:20,560
and I very much agree.

893
00:35:20,560 --> 00:35:24,040
Like every company is built on so much open source software

894
00:35:24,040 --> 00:35:27,240
that if you've done something that can save someone else time

895
00:35:27,240 --> 00:35:29,720
and it doesn't, you know, degrade your security posture

896
00:35:29,720 --> 00:35:31,440
or there's not a business reason,

897
00:35:31,440 --> 00:35:34,680
I think it's really nice to open source software in general.

898
00:35:34,680 --> 00:35:36,600
An open source by default sort of thing.

899
00:35:36,600 --> 00:35:40,160
Yeah, and I think we've been pretty good about that.

900
00:35:40,160 --> 00:35:42,440
Anytime we've had something that's sort of generally useful,

901
00:35:42,440 --> 00:35:43,720
we've kind of put it up there.

902
00:35:43,720 --> 00:35:46,560
But the other reason is getting more eyes on it

903
00:35:46,560 --> 00:35:50,040
and just having more people use it, you know?

904
00:35:50,040 --> 00:35:53,280
So one of the things that I lobbied for internally

905
00:35:53,280 --> 00:35:57,680
was to add Nebula to our official Slack Bug Bounty program.

906
00:35:57,680 --> 00:36:02,280
And so that means that when we put this out there,

907
00:36:02,280 --> 00:36:06,120
if people find security-related flaws in Nebula,

908
00:36:06,120 --> 00:36:07,720
we'll actually pay them for those

909
00:36:07,720 --> 00:36:10,480
through the Slack Bug Bounty process.

910
00:36:10,480 --> 00:36:11,640
That is great.

911
00:36:11,640 --> 00:36:13,480
Yeah, that was a big one for me

912
00:36:13,480 --> 00:36:15,640
because again, this is a pretty key part

913
00:36:15,640 --> 00:36:16,920
of our infrastructure.

914
00:36:16,920 --> 00:36:18,920
And on top of it, you know,

915
00:36:18,920 --> 00:36:21,840
some amount of trust from a community

916
00:36:21,840 --> 00:36:23,440
when people are using it.

917
00:36:23,440 --> 00:36:26,200
And so, you know, we wanted to make sure

918
00:36:26,200 --> 00:36:29,080
that we weren't just throwing this over the wall

919
00:36:29,080 --> 00:36:30,400
and then saying, good luck.

920
00:36:30,400 --> 00:36:31,240
I love that.

921
00:36:31,240 --> 00:36:34,280
I think we're seriously considering using it

922
00:36:34,280 --> 00:36:35,680
for remote studio productions

923
00:36:35,680 --> 00:36:38,160
to connect back to the main studio.

924
00:36:38,160 --> 00:36:40,520
And looking through the configuration,

925
00:36:40,520 --> 00:36:42,960
there's a couple of things that I really love.

926
00:36:42,960 --> 00:36:44,800
Like the BeaconSys service,

927
00:36:44,800 --> 00:36:46,600
or whatever you want to call it, is named Lighthouse.

928
00:36:46,600 --> 00:36:48,480
So we can put that on an external system.

929
00:36:48,480 --> 00:36:50,080
That's great, that's a great name.

930
00:36:50,080 --> 00:36:51,920
The server, I don't know what you call it,

931
00:36:51,920 --> 00:36:53,080
but the function to make sure

932
00:36:53,080 --> 00:36:56,000
that the NAT mapping remains is called Punchy.

933
00:36:56,000 --> 00:36:57,840
It keeps punching a hole.

934
00:36:57,840 --> 00:37:00,200
My friend and colleague, Nate, hates the name Punchy.

935
00:37:00,200 --> 00:37:02,480
So I'm going to make sure and play this section,

936
00:37:02,480 --> 00:37:03,320
but I call it that.

937
00:37:03,320 --> 00:37:04,160
It made me smile.

938
00:37:05,800 --> 00:37:07,320
Yeah, and there's some other stuff

939
00:37:07,320 --> 00:37:09,200
that over time we really learned.

940
00:37:10,200 --> 00:37:13,360
I'm not speaking ill of GoGo,

941
00:37:13,360 --> 00:37:16,320
but one of the best debugging steps we had

942
00:37:16,320 --> 00:37:19,520
was whenever I would be on a flight using this,

943
00:37:19,520 --> 00:37:22,920
the latency over that really taught us a lot

944
00:37:22,920 --> 00:37:25,400
about some of the handshake issues we might run into

945
00:37:25,400 --> 00:37:28,440
in extreme cases, so that was pretty neat.

946
00:37:28,440 --> 00:37:31,560
The core of Nebula has existed

947
00:37:31,560 --> 00:37:33,240
and been in production for two years,

948
00:37:33,240 --> 00:37:37,480
but we've added features sort of as we worked on it.

949
00:37:37,480 --> 00:37:40,160
And there's, you mentioned Punchy.

950
00:37:40,160 --> 00:37:42,480
One of the features that we added not long ago,

951
00:37:42,480 --> 00:37:44,880
probably six or seven months ago,

952
00:37:44,880 --> 00:37:46,200
I don't have it in front of me,

953
00:37:46,200 --> 00:37:48,440
was something called Punch Back.

954
00:37:48,440 --> 00:37:51,000
And I don't know if you saw that in the config as well.

955
00:37:51,000 --> 00:37:51,840
I think I did, yeah.

956
00:37:51,840 --> 00:37:55,320
Yeah, so sometimes you're behind a really difficult NAT,

957
00:37:55,320 --> 00:37:57,080
and like a symmetric NAT,

958
00:37:57,080 --> 00:37:58,280
I won't go into the details of why,

959
00:37:58,280 --> 00:38:00,520
but a symmetric NAT can be extremely difficult.

960
00:38:00,520 --> 00:38:02,160
I live that life right now, actually.

961
00:38:02,160 --> 00:38:03,400
I have one of my systems.

962
00:38:03,400 --> 00:38:04,960
Are you on mobile?

963
00:38:04,960 --> 00:38:05,800
Yes.

964
00:38:05,800 --> 00:38:09,760
Yeah, so you would really enjoy Punch Back.

965
00:38:09,760 --> 00:38:13,120
And I actually did that because I use a hotspot

966
00:38:13,120 --> 00:38:14,760
quite a bit of the time as well.

967
00:38:14,760 --> 00:38:16,040
I really enjoy road trips,

968
00:38:16,040 --> 00:38:18,280
and so I have like an AT&T hotspot.

969
00:38:18,280 --> 00:38:19,280
Kindred spirits.

970
00:38:19,280 --> 00:38:21,520
Oh, you're speaking my language.

971
00:38:21,520 --> 00:38:24,920
And so what Punch Back does is,

972
00:38:24,920 --> 00:38:26,720
when a host wants to connect to another host,

973
00:38:26,720 --> 00:38:28,640
it asks the Lighthouse how to reach it.

974
00:38:28,640 --> 00:38:31,480
The Lighthouse gives back an IP address

975
00:38:31,480 --> 00:38:33,560
and a UDP port to try.

976
00:38:33,560 --> 00:38:36,720
And when I query the Lighthouse from a node,

977
00:38:36,720 --> 00:38:40,080
it also signals the node I'm about to connect to

978
00:38:40,080 --> 00:38:42,120
to punch outbound to me, right?

979
00:38:42,120 --> 00:38:45,360
So as I query the Lighthouse and ask about a node,

980
00:38:45,360 --> 00:38:46,920
the Lighthouse is signaling that node

981
00:38:46,920 --> 00:38:49,120
that I'm about to try and send a packet to it,

982
00:38:49,120 --> 00:38:51,120
and it should punch out.

983
00:38:51,120 --> 00:38:53,800
And by the way, a really important thing here is,

984
00:38:53,800 --> 00:38:56,640
the Lighthouses actually don't transit any of these packets.

985
00:38:56,640 --> 00:39:00,480
They're there purely for querying and finding nodes.

986
00:39:00,480 --> 00:39:03,520
The handshake never goes through a Lighthouse.

987
00:39:03,520 --> 00:39:08,520
So the Lighthouse signals that node to punch out,

988
00:39:09,000 --> 00:39:10,800
and then we start sending packets,

989
00:39:10,800 --> 00:39:14,120
and we try all the different IPs that we know about

990
00:39:14,120 --> 00:39:16,040
or that we've learned about.

991
00:39:16,040 --> 00:39:18,840
And the thing that Punchback does is it says,

992
00:39:18,840 --> 00:39:20,600
okay, the Lighthouse signaled me

993
00:39:20,600 --> 00:39:22,480
that somebody's trying to reach me.

994
00:39:22,480 --> 00:39:24,560
I'm gonna give it five seconds,

995
00:39:24,560 --> 00:39:27,320
and if they don't reach me, I'm gonna try and reach them

996
00:39:27,320 --> 00:39:29,880
as though I had initiated the connection.

997
00:39:29,880 --> 00:39:33,280
And that, as long as there aren't two boxes

998
00:39:33,280 --> 00:39:37,080
behind really terrible symmetric NATs,

999
00:39:37,080 --> 00:39:40,160
that works almost every time.

1000
00:39:40,160 --> 00:39:43,320
Oh my gosh, well, I think that just sealed the deal

1001
00:39:43,320 --> 00:39:44,160
right there.

1002
00:39:44,160 --> 00:39:46,280
I mean, it's clear that you've had to fight

1003
00:39:46,280 --> 00:39:47,240
through some of these things

1004
00:39:47,240 --> 00:39:49,200
and worked out a lot of those kinks.

1005
00:39:49,200 --> 00:39:50,040
Yeah.

1006
00:39:50,040 --> 00:39:51,440
Oh man, that's so fantastic.

1007
00:39:51,440 --> 00:39:52,560
Ryan, this is one of those moments,

1008
00:39:52,560 --> 00:39:54,520
you know, you always hear, it's almost cliche,

1009
00:39:54,520 --> 00:39:56,320
like the thing about open source and free software

1010
00:39:56,320 --> 00:39:58,360
is everybody's scratching their own itch.

1011
00:39:58,360 --> 00:40:00,560
It sounds like in this particular case,

1012
00:40:00,560 --> 00:40:02,160
you had exactly the same itch.

1013
00:40:02,160 --> 00:40:03,880
And I just am so thrilled.

1014
00:40:03,880 --> 00:40:05,080
I think it's great.

1015
00:40:06,160 --> 00:40:09,160
I will link to the announcement,

1016
00:40:09,160 --> 00:40:10,880
and we're gonna play with it.

1017
00:40:10,880 --> 00:40:12,040
We're absolutely gonna try it out.

1018
00:40:12,040 --> 00:40:13,800
Yeah, is there anything we need to know?

1019
00:40:13,800 --> 00:40:15,520
I mean, we've talked about a lot of good things here,

1020
00:40:15,520 --> 00:40:17,160
but is there anything as potential adopters

1021
00:40:17,160 --> 00:40:18,320
we should be aware of?

1022
00:40:18,320 --> 00:40:20,120
Depending on the platform you run,

1023
00:40:20,120 --> 00:40:23,160
there's some stuff that hasn't been merged yet

1024
00:40:23,160 --> 00:40:24,240
that's going to make that easier,

1025
00:40:24,240 --> 00:40:28,720
especially if you use any Macs or Windows devices.

1026
00:40:28,720 --> 00:40:32,840
And so one of the difficulties in Windows

1027
00:40:32,840 --> 00:40:35,800
that when I was sort of developing

1028
00:40:35,800 --> 00:40:37,320
some of this with a friend,

1029
00:40:37,320 --> 00:40:39,480
by the way, there's a gentleman that we work with

1030
00:40:39,480 --> 00:40:42,880
named Wade who did every port.

1031
00:40:42,880 --> 00:40:44,600
So we wrote this for Linux,

1032
00:40:44,600 --> 00:40:48,440
and he ported it, and Go makes porting just so nice,

1033
00:40:48,440 --> 00:40:53,040
but he ported it to Windows and Mac.

1034
00:40:53,040 --> 00:40:56,000
And even in one single hack day,

1035
00:40:56,000 --> 00:40:59,240
Wade is the person that got it running on iOS.

1036
00:40:59,240 --> 00:41:02,600
So, yeah, it was really impressive stuff.

1037
00:41:02,600 --> 00:41:06,120
And so, but one of the difficulties with Windows,

1038
00:41:06,120 --> 00:41:09,840
I haven't run Windows as a primary OS in many years,

1039
00:41:09,840 --> 00:41:11,480
so I'm kind of out of date on it.

1040
00:41:11,480 --> 00:41:15,000
But one of the issues was installing services

1041
00:41:15,000 --> 00:41:18,920
and how services need to behave is kind of,

1042
00:41:18,920 --> 00:41:23,440
it's very foreign if you're used to Unix style services.

1043
00:41:23,440 --> 00:41:26,400
And so there's a really nice Go library out there

1044
00:41:26,400 --> 00:41:29,920
that can make a binary service aware.

1045
00:41:29,920 --> 00:41:32,560
And so I integrated that into Nebula

1046
00:41:32,560 --> 00:41:34,280
and made a version of Nebula

1047
00:41:34,280 --> 00:41:36,400
that's a self-installing service.

1048
00:41:36,400 --> 00:41:40,840
And so in that case, you can actually copy nebula.exe

1049
00:41:40,840 --> 00:41:44,040
and one config file to a Windows host,

1050
00:41:44,040 --> 00:41:47,080
and then you can run nebula-service install,

1051
00:41:47,080 --> 00:41:48,720
and it actually does the whole bit

1052
00:41:48,720 --> 00:41:50,200
and installs it as a Windows service.

1053
00:41:50,200 --> 00:41:53,000
And that library is actually cross-platform.

1054
00:41:53,000 --> 00:41:53,840
It's really neat.

1055
00:41:53,840 --> 00:41:57,800
So it even does that on Linux or OS 10,

1056
00:41:57,800 --> 00:41:59,560
whatever you're using.

1057
00:41:59,560 --> 00:42:01,840
We have a bit of a pettance argument

1058
00:42:01,840 --> 00:42:03,840
about doing that on Linux,

1059
00:42:03,840 --> 00:42:06,040
so I don't think that'll be the default build on Linux

1060
00:42:06,040 --> 00:42:08,400
because just use systemd or upstart

1061
00:42:08,400 --> 00:42:11,200
is kind of the right way to go.

1062
00:42:11,200 --> 00:42:14,040
But for the other OSs, you know, OS 10 or Windows,

1063
00:42:14,040 --> 00:42:16,720
I think that's gonna be the default behavior very soon.

1064
00:42:16,720 --> 00:42:18,920
And there's a branch that already works.

1065
00:42:18,920 --> 00:42:21,280
That's one thing I mean, you can't miss about Nebula

1066
00:42:21,280 --> 00:42:22,920
is that simplicity.

1067
00:42:22,920 --> 00:42:24,080
It just seems ready to integrate

1068
00:42:24,080 --> 00:42:26,480
into all kinds of other systems, however you might do it.

1069
00:42:26,480 --> 00:42:29,800
Yeah, we were brainstorming a couple of ideas already.

1070
00:42:29,800 --> 00:42:31,720
Ryan, I hope you'll keep us in mind in the future

1071
00:42:31,720 --> 00:42:33,560
if there's any developments you wanna share

1072
00:42:33,560 --> 00:42:35,280
with the community, we'd love to pass it along.

1073
00:42:35,280 --> 00:42:37,880
I think you can count us officially as fans of the project.

1074
00:42:37,880 --> 00:42:39,360
Well, that's great to hear.

1075
00:42:39,360 --> 00:42:43,480
I know people probably say this and it sounds cliche,

1076
00:42:43,480 --> 00:42:45,440
but I was really surprised

1077
00:42:45,440 --> 00:42:46,960
how many people were interested in this

1078
00:42:46,960 --> 00:42:48,960
because before we put it out there,

1079
00:42:48,960 --> 00:42:50,520
you know, we knew we were super into this,

1080
00:42:50,520 --> 00:42:52,680
but you always think your thing is really neat

1081
00:42:52,680 --> 00:42:54,160
and you hope other people do,

1082
00:42:54,160 --> 00:42:56,280
but the response has been really great

1083
00:42:56,280 --> 00:42:57,960
and we're really happy about that

1084
00:42:57,960 --> 00:42:59,200
and we wanna keep that going.

1085
00:42:59,200 --> 00:43:01,000
So we're gonna do some things

1086
00:43:01,000 --> 00:43:04,400
to make it even easier to stand up Nebula,

1087
00:43:04,400 --> 00:43:06,400
especially for folks that maybe don't wanna stand up

1088
00:43:06,400 --> 00:43:09,880
a lighthouse and do all of that just to test it out.

1089
00:43:09,880 --> 00:43:12,040
So we're gonna make that a bit easier going forward

1090
00:43:12,040 --> 00:43:15,760
and I can't wait to see what use cases people come up with.

1091
00:43:15,760 --> 00:43:17,360
Very good, well, thank you for joining us.

1092
00:43:17,360 --> 00:43:18,400
Thank you.

1093
00:43:18,400 --> 00:43:19,720
Something we didn't touch on,

1094
00:43:19,720 --> 00:43:21,280
but Nebula has also undergone

1095
00:43:21,280 --> 00:43:23,280
a paid security vulnerability assessment

1096
00:43:23,280 --> 00:43:26,840
along with numerous internal Slack reviews as well.

1097
00:43:26,840 --> 00:43:28,560
So it's looking like it's in pretty good shape.

1098
00:43:28,560 --> 00:43:30,560
Yeah, they're certainly using it.

1099
00:43:30,560 --> 00:43:31,480
And we did give it a go.

1100
00:43:31,480 --> 00:43:36,000
In fact, we have been really having quite a bit of fun

1101
00:43:36,000 --> 00:43:37,040
playing around with Nebula.

1102
00:43:37,040 --> 00:43:40,840
It's been one of those projects that just is,

1103
00:43:40,840 --> 00:43:42,720
like you feel like it's cutting edge,

1104
00:43:42,720 --> 00:43:45,360
but it's doing something that solves such a cool problem.

1105
00:43:45,360 --> 00:43:46,200
It's great.

1106
00:43:46,200 --> 00:43:47,440
And it's simple.

1107
00:43:47,440 --> 00:43:48,920
It's just, it's easy to get started with.

1108
00:43:48,920 --> 00:43:50,560
I mean, it's go, so you just go download

1109
00:43:50,560 --> 00:43:52,840
the two binaries that you need

1110
00:43:52,840 --> 00:43:55,240
and the configuration files are easy.

1111
00:43:55,240 --> 00:43:57,840
It's just YAML and because of the way it works,

1112
00:43:57,840 --> 00:44:00,000
you don't need a whole bunch of configuration files.

1113
00:44:00,000 --> 00:44:03,520
You basically just need the key pair for your machine.

1114
00:44:03,520 --> 00:44:05,480
You need the CA certificate

1115
00:44:05,480 --> 00:44:08,720
and then the config file for the daemon and you're done.

1116
00:44:08,720 --> 00:44:13,440
Yeah, it's a lot of kind of like conceptual stuff.

1117
00:44:13,440 --> 00:44:14,960
You have to shift your head a little bit

1118
00:44:14,960 --> 00:44:16,480
because it's all key-based.

1119
00:44:16,480 --> 00:44:18,480
So you gotta get used to that, but that's not a big deal.

1120
00:44:18,480 --> 00:44:21,880
It's not necessarily like a service.

1121
00:44:21,880 --> 00:44:23,600
It's not gonna be a package you install.

1122
00:44:23,600 --> 00:44:27,960
It's a tarball you download and extract and you run it.

1123
00:44:27,960 --> 00:44:28,920
But if you're okay with,

1124
00:44:28,920 --> 00:44:30,960
and you're comfortable with those kinds of things,

1125
00:44:30,960 --> 00:44:32,760
with very minimal effort,

1126
00:44:32,760 --> 00:44:36,840
you can create an overlay network that is secured.

1127
00:44:36,840 --> 00:44:40,200
And it's like being, like browsing a local LAN.

1128
00:44:40,200 --> 00:44:43,600
For fun, like we went on two different Mifis.

1129
00:44:43,600 --> 00:44:44,680
Wes did it from his place.

1130
00:44:44,680 --> 00:44:45,800
I did it from the RV.

1131
00:44:45,800 --> 00:44:47,360
We have systems at the studio.

1132
00:44:47,360 --> 00:44:49,920
And they can just all immediately talk to each other.

1133
00:44:49,920 --> 00:44:52,040
And it'll be smart about things, so it'll figure it out.

1134
00:44:52,040 --> 00:44:53,440
You know, if I'm from my house,

1135
00:44:53,440 --> 00:44:55,280
I can talk to one of the studio machines,

1136
00:44:55,280 --> 00:44:57,480
but if I come into the studio,

1137
00:44:57,480 --> 00:44:58,920
they figure out that that traffic

1138
00:44:58,920 --> 00:45:00,440
just stays on the local LAN.

1139
00:45:00,440 --> 00:45:02,680
So we even got it going on my Raspberry Pis

1140
00:45:02,680 --> 00:45:03,920
to an extent.

1141
00:45:03,920 --> 00:45:07,200
My Raspberry Pi 4s, I think,

1142
00:45:07,200 --> 00:45:09,360
did we figure out they were in 64-bit mode?

1143
00:45:09,360 --> 00:45:10,560
I can't remember now.

1144
00:45:10,560 --> 00:45:12,600
But there's a 32-bit and a 64-bit version

1145
00:45:12,600 --> 00:45:14,360
that'll run on the Raspberry Pi.

1146
00:45:14,360 --> 00:45:16,560
And we got it working really solid for a bit

1147
00:45:16,560 --> 00:45:18,640
on one of my Raspberry Pis.

1148
00:45:18,640 --> 00:45:21,880
But when we set it up on a second Raspberry Pi,

1149
00:45:21,880 --> 00:45:23,760
we ran into some strange issues

1150
00:45:23,760 --> 00:45:26,480
where it really kind of came into our limits

1151
00:45:26,480 --> 00:45:27,480
of the ability to troubleshoot.

1152
00:45:27,480 --> 00:45:28,320
And because this is new,

1153
00:45:28,320 --> 00:45:30,480
there isn't a huge community around it to solve it.

1154
00:45:30,480 --> 00:45:32,960
Yeah, and there are some downsides, it is very simple.

1155
00:45:32,960 --> 00:45:36,440
It just means that it only operates in the one mode.

1156
00:45:36,440 --> 00:45:38,080
And right now, the NAT punching

1157
00:45:38,080 --> 00:45:39,480
doesn't seem quite to be working.

1158
00:45:39,480 --> 00:45:41,000
There are some extenuating circumstances

1159
00:45:41,000 --> 00:45:42,800
because, as you said, you have two layers of NAT,

1160
00:45:42,800 --> 00:45:44,760
which makes just about everything difficult.

1161
00:45:44,760 --> 00:45:48,600
I have this fantastic, best ISP I've ever had in my life,

1162
00:45:48,600 --> 00:45:49,440
local ISP.

1163
00:45:49,440 --> 00:45:51,680
They're like one of the last in Washington,

1164
00:45:51,680 --> 00:45:53,040
little small outfit.

1165
00:45:53,040 --> 00:45:56,520
Like if you call them and they don't answer,

1166
00:45:56,520 --> 00:45:58,520
they see it on their caller ID and they call you back.

1167
00:45:58,520 --> 00:46:00,960
Hello, Mr. Fisher, I saw I missed your call.

1168
00:46:00,960 --> 00:46:03,680
Oh yes, I see, I could lower your bill by $10.

1169
00:46:03,680 --> 00:46:04,840
I'll get that taken care of for you, sir.

1170
00:46:04,840 --> 00:46:07,040
Thank you for calling, seriously.

1171
00:46:07,040 --> 00:46:07,960
Like yeah, no problem.

1172
00:46:07,960 --> 00:46:08,800
Okay.

1173
00:46:08,800 --> 00:46:09,640
Thanks.

1174
00:46:09,640 --> 00:46:12,240
So they're a great ISP except for, you don't get.

1175
00:46:12,240 --> 00:46:16,480
I get like a 192.168.5.whatever.

1176
00:46:16,480 --> 00:46:18,480
So I get some weird public IP address

1177
00:46:18,480 --> 00:46:20,360
that is obviously NAT.

1178
00:46:20,360 --> 00:46:21,440
And I don't know,

1179
00:46:21,440 --> 00:46:24,120
I don't even know how far down the NAT chain I really am.

1180
00:46:24,120 --> 00:46:26,280
But then of course, I have a NAT of my own network.

1181
00:46:26,280 --> 00:46:28,800
So I have a gateway device that's connected to that NAT,

1182
00:46:28,800 --> 00:46:31,000
which then does NAT behind it.

1183
00:46:31,000 --> 00:46:33,760
And so, as you heard in the chat there,

1184
00:46:34,760 --> 00:46:38,320
it is designed, Nebula, to punch through this.

1185
00:46:38,320 --> 00:46:39,480
And it does to an extent.

1186
00:46:39,480 --> 00:46:41,800
We can get one Raspberry Pi working for a bit.

1187
00:46:41,800 --> 00:46:43,800
It can't talk to all the nodes though.

1188
00:46:43,800 --> 00:46:44,760
Yeah, we're having a few.

1189
00:46:44,760 --> 00:46:46,360
We haven't got it quite working.

1190
00:46:46,360 --> 00:46:48,880
That said, we did just pick this up yesterday

1191
00:46:48,880 --> 00:46:51,440
and on 80% of the machines, it just worked.

1192
00:46:51,440 --> 00:46:53,800
The ones that aren't behind super crazy NAT,

1193
00:46:53,800 --> 00:46:55,480
even mild NAT, like MiFi NATs.

1194
00:46:55,480 --> 00:46:56,320
Right, yeah.

1195
00:46:56,320 --> 00:46:57,600
Tether into my phone, no problem.

1196
00:46:57,600 --> 00:46:58,440
Yeah, that'll work fine.

1197
00:46:58,440 --> 00:46:59,280
Jump into the studio.

1198
00:46:59,280 --> 00:47:01,440
And it's really neat to just see it work.

1199
00:47:01,440 --> 00:47:02,760
And Wes was able to bang it out

1200
00:47:02,760 --> 00:47:05,040
into a system to unit file in like 30 seconds.

1201
00:47:05,040 --> 00:47:07,320
So now it's a service that just runs on our boxes.

1202
00:47:07,320 --> 00:47:08,360
Yeah, no problem.

1203
00:47:08,360 --> 00:47:09,440
Super simple.

1204
00:47:09,440 --> 00:47:11,600
So I have a question for Wes.

1205
00:47:11,600 --> 00:47:13,640
I use a tool called SSH Shuttle

1206
00:47:13,640 --> 00:47:18,640
to tunnel my DNS around from the US to Europe and stuff.

1207
00:47:19,120 --> 00:47:23,320
Can you send with either Nebula or Tink,

1208
00:47:23,320 --> 00:47:26,640
can you route DNS through those tunnels easily?

1209
00:47:26,640 --> 00:47:30,120
Or like, where does the DNS actually happen?

1210
00:47:30,120 --> 00:47:32,280
I mean, I don't see why not.

1211
00:47:32,280 --> 00:47:34,040
You just need an endpoint at the other side.

1212
00:47:34,040 --> 00:47:36,040
Yeah, so they both have provisions for it.

1213
00:47:36,040 --> 00:47:40,280
Specifically to Nebula, there is a configuration option

1214
00:47:40,280 --> 00:47:42,440
to declare where the DNS is

1215
00:47:42,440 --> 00:47:44,280
or even to act as a DNS forwarder.

1216
00:47:45,160 --> 00:47:47,560
And so we have experimented a little bit with that,

1217
00:47:47,560 --> 00:47:50,080
but you do kind of need a name server on either end

1218
00:47:50,080 --> 00:47:52,400
to do it, you have to do that part.

1219
00:47:52,400 --> 00:47:53,360
Okay.

1220
00:47:53,360 --> 00:47:56,920
It's not, it kind of sounds hard if you don't try,

1221
00:47:56,920 --> 00:47:58,480
but once you try it, it's really,

1222
00:47:58,480 --> 00:47:59,920
turns out if you try hard enough, you can.

1223
00:47:59,920 --> 00:48:00,960
It's really not so bad.

1224
00:48:00,960 --> 00:48:01,920
No, no, it's not.

1225
00:48:01,920 --> 00:48:04,840
And it's just nice, you know, it's neat to have,

1226
00:48:04,840 --> 00:48:07,960
we live in a world where you share things in the cloud,

1227
00:48:07,960 --> 00:48:10,080
and everything is an HTTP service

1228
00:48:10,080 --> 00:48:12,360
or HTTPS really these days.

1229
00:48:12,360 --> 00:48:14,280
Having a flat network sort of harkens back

1230
00:48:14,280 --> 00:48:15,880
to the good old Unix days.

1231
00:48:15,880 --> 00:48:18,880
So now we could have a Samba server running

1232
00:48:18,880 --> 00:48:20,760
here at the studio, but if it's listening

1233
00:48:20,760 --> 00:48:23,200
on that overlay network, you can get those files

1234
00:48:23,200 --> 00:48:24,280
from anywhere.

1235
00:48:24,280 --> 00:48:27,040
But especially because of the security group stuff

1236
00:48:27,040 --> 00:48:30,240
built right into Nebula, which I love,

1237
00:48:30,240 --> 00:48:31,920
you can do that securely and not have to worry

1238
00:48:31,920 --> 00:48:33,400
about exposing Samba to the public internet,

1239
00:48:33,400 --> 00:48:35,120
which you just shouldn't do.

1240
00:48:35,120 --> 00:48:37,040
Yeah, listeners of our self-hosted program

1241
00:48:37,040 --> 00:48:41,160
know that I have a mandate to never expose the RV

1242
00:48:41,160 --> 00:48:42,600
to the public internet.

1243
00:48:42,600 --> 00:48:45,040
So something like this, that's why this double net

1244
00:48:45,040 --> 00:48:46,800
situation, I take it as a challenge,

1245
00:48:46,800 --> 00:48:48,720
because I really have a mandate

1246
00:48:48,720 --> 00:48:50,480
to not publicly expose anything.

1247
00:48:50,480 --> 00:48:52,080
That's a good rule for life, Chris.

1248
00:48:52,080 --> 00:48:54,760
I agree, and what I love about both Nebula and Tink,

1249
00:48:54,760 --> 00:48:57,640
but specifically Nebula and WireGuard,

1250
00:48:57,640 --> 00:48:59,680
they're really good about reconnecting

1251
00:48:59,680 --> 00:49:01,560
once your connection comes back online,

1252
00:49:01,560 --> 00:49:05,240
which is really useful for me for both laptop and the RV.

1253
00:49:05,240 --> 00:49:09,160
Nebula also is, it's not that old,

1254
00:49:09,160 --> 00:49:10,720
they've been using internally for a little bit

1255
00:49:10,720 --> 00:49:12,160
and it's certainly new to us.

1256
00:49:12,160 --> 00:49:13,240
But you can tell it's a modern tool.

1257
00:49:13,240 --> 00:49:14,400
I mean, not only is that written in Go,

1258
00:49:14,400 --> 00:49:17,000
but it's got great logging support built right in

1259
00:49:17,000 --> 00:49:19,320
and metrics, so if you've got a graphite server

1260
00:49:19,320 --> 00:49:22,680
or a Prometheus server, that's built right in.

1261
00:49:22,680 --> 00:49:24,920
Yeah, there's some, I could see Slack building

1262
00:49:24,920 --> 00:49:27,360
some services around this thing in the future.

1263
00:49:27,360 --> 00:49:29,080
I could absolutely see them productizing this

1264
00:49:29,080 --> 00:49:29,920
if they wanted to.

1265
00:49:29,920 --> 00:49:30,960
I don't know if they will.

1266
00:49:30,960 --> 00:49:33,320
What Ryan told us is essentially it's enough

1267
00:49:33,320 --> 00:49:35,680
for them already, because they have a situation

1268
00:49:35,680 --> 00:49:38,200
where they have systems on AWS,

1269
00:49:38,200 --> 00:49:39,320
they have systems on Azure.

1270
00:49:39,320 --> 00:49:40,600
I'm assuming, he didn't tell me this,

1271
00:49:40,600 --> 00:49:42,760
but they have multi-provider systems

1272
00:49:42,760 --> 00:49:46,000
and they want a LAN where they can have secure

1273
00:49:46,000 --> 00:49:48,800
MySQL things happen or secure Samba things happen.

1274
00:49:48,800 --> 00:49:50,600
Or you can sort of abstract that away

1275
00:49:50,600 --> 00:49:52,280
and not your individual hosts don't have to deal

1276
00:49:52,280 --> 00:49:54,120
with that anymore, they can just receive traffic.

1277
00:49:54,120 --> 00:49:57,080
I think that cross-provider thing is gonna be

1278
00:49:57,080 --> 00:49:58,920
what makes this really take off.

1279
00:49:58,920 --> 00:50:01,880
If they keep talking about it like that,

1280
00:50:01,880 --> 00:50:03,720
that's gonna click with people.

1281
00:50:03,720 --> 00:50:05,080
All this talk about hybrid cloud,

1282
00:50:05,080 --> 00:50:07,480
I mean, one of the providers could be your own LAN.

1283
00:50:07,480 --> 00:50:08,320
Absolutely.

1284
00:50:09,640 --> 00:50:11,080
I have a system on Linode,

1285
00:50:11,080 --> 00:50:12,560
I have a system on DigitalOcean,

1286
00:50:12,560 --> 00:50:14,160
and we have the Reaper box here.

1287
00:50:14,160 --> 00:50:17,280
I would like to connect all three of them together.

1288
00:50:17,280 --> 00:50:18,120
Both of these allow for that.

1289
00:50:18,120 --> 00:50:19,640
I think it'd just be on one private network.

1290
00:50:19,640 --> 00:50:20,520
Flat network.

1291
00:50:20,520 --> 00:50:21,560
I haven't done extensive testing,

1292
00:50:21,560 --> 00:50:23,000
but I did a little bit last night,

1293
00:50:23,000 --> 00:50:24,160
just being in my house in the studio

1294
00:50:24,160 --> 00:50:25,520
and performance is looking good.

1295
00:50:25,520 --> 00:50:27,000
That was one of my concerns with Tink.

1296
00:50:27,000 --> 00:50:29,840
It's older and not necessarily optimized for performance,

1297
00:50:29,840 --> 00:50:33,480
but this is using new quick crypto and it did great.

1298
00:50:33,480 --> 00:50:34,840
Yeah, I guess it's worth mentioning.

1299
00:50:34,840 --> 00:50:36,680
Neither one of them run in the kernel.

1300
00:50:37,640 --> 00:50:39,160
Yeah, just using the ton driver.

1301
00:50:39,160 --> 00:50:41,440
Yeah, which is perfectly fine.

1302
00:50:41,440 --> 00:50:43,720
I think there might be probably

1303
00:50:43,720 --> 00:50:47,200
a slightly higher performance story with Nebula than Tink.

1304
00:50:47,200 --> 00:50:48,080
Yeah, I believe so.

1305
00:50:48,080 --> 00:50:48,920
I guess that's something to consider

1306
00:50:48,920 --> 00:50:50,280
when you have a lot of nodes, right?

1307
00:50:50,280 --> 00:50:53,320
Because who's talked about 500 nodes

1308
00:50:53,320 --> 00:50:55,360
and Ryan talked about thousands of nodes.

1309
00:50:55,360 --> 00:50:57,080
So that's something to consider too.

1310
00:50:57,080 --> 00:50:58,920
Yeah, and because of the key base

1311
00:50:58,920 --> 00:51:01,080
and the certificate based authentication,

1312
00:51:01,080 --> 00:51:03,200
you don't have to do anything to add a new node.

1313
00:51:03,200 --> 00:51:04,760
I mean, the certificate authority

1314
00:51:04,760 --> 00:51:08,360
needs to sign the new keys for that node,

1315
00:51:08,360 --> 00:51:10,560
but that's it because the lighthouse

1316
00:51:10,560 --> 00:51:12,360
actually takes care of communicating those details.

1317
00:51:12,360 --> 00:51:14,280
So if I want to go talk to Chris's laptop,

1318
00:51:14,280 --> 00:51:15,120
I don't know where that is.

1319
00:51:15,120 --> 00:51:18,720
And he might not trust that I should talk to them.

1320
00:51:18,720 --> 00:51:21,040
All I have to do is go share my information.

1321
00:51:21,040 --> 00:51:23,320
And because it's signed with the certificate authority,

1322
00:51:23,320 --> 00:51:24,320
it's all good, that's it.

1323
00:51:24,320 --> 00:51:26,680
Yep, so if you have any questions,

1324
00:51:26,680 --> 00:51:28,760
go to linuxunplug.com slash contact

1325
00:51:28,760 --> 00:51:30,320
because we're still tooling away with this.

1326
00:51:30,320 --> 00:51:32,040
So we're having a lot of fun building networks

1327
00:51:32,040 --> 00:51:34,920
and I think we're gonna get my net situation resolved.

1328
00:51:34,920 --> 00:51:36,400
I don't know exactly how,

1329
00:51:36,400 --> 00:51:37,320
but I think we're gonna get there.

1330
00:51:37,320 --> 00:51:39,560
We'll figure it out, right Wes?

1331
00:51:39,560 --> 00:51:42,440
Well, maybe we'll have to ask Ryan, we'll see.

1332
00:51:42,440 --> 00:51:43,360
I think we might.

1333
00:51:43,360 --> 00:51:47,200
Okay, let's do some feedback.

1334
00:51:47,200 --> 00:51:50,000
Before we go, I said I want to do some more feedback

1335
00:51:50,000 --> 00:51:51,320
and follow up in this here show

1336
00:51:51,320 --> 00:51:54,800
and people took me up on it, linuxunplug.com slash contact.

1337
00:51:54,800 --> 00:51:55,840
Our first one, Matthias,

1338
00:51:55,840 --> 00:51:59,800
who says he's a happy Manjaro user in Germany.

1339
00:51:59,800 --> 00:52:00,960
He had to mention that, didn't he?

1340
00:52:00,960 --> 00:52:01,800
Of course.

1341
00:52:01,800 --> 00:52:02,720
No, I love it.

1342
00:52:02,720 --> 00:52:04,120
I actually love to know.

1343
00:52:04,120 --> 00:52:06,720
He has a question about command line autocompletes.

1344
00:52:06,720 --> 00:52:07,720
Short question, a while ago,

1345
00:52:07,720 --> 00:52:10,160
you guys mentioned a cool little tool for the command line

1346
00:52:10,160 --> 00:52:11,840
that helps me remember my complicated commands

1347
00:52:11,840 --> 00:52:13,960
and make suggestions while I start typing,

1348
00:52:13,960 --> 00:52:15,600
but I forgot the name of it.

1349
00:52:15,600 --> 00:52:18,480
I think he might be talking about fish shell.

1350
00:52:18,480 --> 00:52:21,480
We do talk about fish shell basically all the time

1351
00:52:21,480 --> 00:52:22,400
and it's fantastic.

1352
00:52:22,400 --> 00:52:25,040
Fish shell is now the thing that I install

1353
00:52:25,040 --> 00:52:26,840
almost immediately on a new Linux box

1354
00:52:26,840 --> 00:52:29,240
and I go into the Etsy password file

1355
00:52:29,240 --> 00:52:32,520
and at that right there, I replace my shell with fish.

1356
00:52:32,520 --> 00:52:34,680
Now, another one we've I think mentioned before

1357
00:52:34,680 --> 00:52:37,760
is fzf, the little command line tool, the fuzzy finder,

1358
00:52:37,760 --> 00:52:40,160
and that also will search your command line history.

1359
00:52:40,160 --> 00:52:41,720
So I was thinking it could be that one too.

1360
00:52:41,720 --> 00:52:42,560
So that's a good one.

1361
00:52:42,560 --> 00:52:43,400
Do you want to toss a link?

1362
00:52:43,400 --> 00:52:44,440
Absolutely.

1363
00:52:44,440 --> 00:52:45,440
In the news.

1364
00:52:45,440 --> 00:52:48,320
All right, Liam writes, hello, Chris.

1365
00:52:48,320 --> 00:52:51,560
I've also been experiencing random lag

1366
00:52:51,560 --> 00:52:53,520
or skipping on my workstation

1367
00:52:53,520 --> 00:52:58,520
with an NVIDIA GTX 1060 after I upgraded to Fedora 31.

1368
00:52:59,000 --> 00:53:00,720
I was wondering if you ever got anywhere

1369
00:53:00,720 --> 00:53:03,680
with the mouse lag or if it's an active bug

1370
00:53:03,680 --> 00:53:05,160
somewhere I could contribute to.

1371
00:53:05,160 --> 00:53:06,600
Oh, I like what you ended up doing.

1372
00:53:06,600 --> 00:53:09,200
This is a good sort of come clean moment.

1373
00:53:09,200 --> 00:53:10,960
I hadn't actually thought about.

1374
00:53:10,960 --> 00:53:12,960
I was like, I'll do an update.

1375
00:53:12,960 --> 00:53:13,800
Well, okay.

1376
00:53:13,800 --> 00:53:17,760
So, you know, I really can't stand lag.

1377
00:53:17,760 --> 00:53:19,960
This is a particularly weak spot for me.

1378
00:53:19,960 --> 00:53:23,400
So what I did was I burned the entire house down.

1379
00:53:23,400 --> 00:53:26,640
I decided I wanted to switch to plasma for a bit

1380
00:53:26,640 --> 00:53:28,960
to see if there was an issue over there.

1381
00:53:28,960 --> 00:53:30,240
So then I went down the rabbit hole

1382
00:53:30,240 --> 00:53:32,560
of trying to find a great plasma implementation.

1383
00:53:32,560 --> 00:53:34,880
Really, I actually downloaded the neon ISO.

1384
00:53:34,880 --> 00:53:36,320
I was going to go just with neon again

1385
00:53:36,320 --> 00:53:38,360
because I had such a great experience last time.

1386
00:53:38,360 --> 00:53:40,680
I'm imagining you standing in front of your computer,

1387
00:53:40,680 --> 00:53:42,520
USB drive in hand, sort of waffling,

1388
00:53:42,520 --> 00:53:44,440
considering just about to plug it in.

1389
00:53:44,440 --> 00:53:46,320
That is literally the situation.

1390
00:53:46,320 --> 00:53:47,160
I'm not kidding.

1391
00:53:47,160 --> 00:53:48,360
And I came across and I said,

1392
00:53:48,360 --> 00:53:53,040
Self, you know, you don't want to always...

1393
00:53:53,040 --> 00:53:55,760
You need to challenge your assumptions about distro self

1394
00:53:55,760 --> 00:53:57,960
because I had a real kind of realization

1395
00:53:57,960 --> 00:54:00,440
when we put Fedora on that there server.

1396
00:54:00,440 --> 00:54:01,520
It went so good, Wes.

1397
00:54:01,520 --> 00:54:05,000
I was like, this is way better than I expected.

1398
00:54:05,000 --> 00:54:06,680
I came with all these assumptions about Fedora

1399
00:54:06,680 --> 00:54:08,960
on the server and I was schooled.

1400
00:54:08,960 --> 00:54:12,160
So I thought, I need to give Manjaro like a real go again

1401
00:54:12,160 --> 00:54:15,520
because my early conceptions of Manjaro are not really...

1402
00:54:15,520 --> 00:54:17,320
Manjaro has come so far.

1403
00:54:17,320 --> 00:54:18,160
It really has.

1404
00:54:18,160 --> 00:54:19,400
And it's really one of the great distros.

1405
00:54:19,400 --> 00:54:22,320
And I thought, I got to try out one of the greats.

1406
00:54:22,320 --> 00:54:25,000
So I pulled down their plasma edition of Manjaro

1407
00:54:25,000 --> 00:54:27,160
and I formatted my workstation yet again

1408
00:54:27,160 --> 00:54:29,440
and I put Manjaro plasma edition on there.

1409
00:54:29,440 --> 00:54:31,440
I didn't think I'd ever see you remove Fedora.

1410
00:54:31,440 --> 00:54:35,280
I really am not trying to be a distro hopper guy.

1411
00:54:36,320 --> 00:54:37,320
I just want to get my work done,

1412
00:54:37,320 --> 00:54:39,520
but somehow I have fallen into this trap

1413
00:54:39,520 --> 00:54:41,040
of working on my tools again.

1414
00:54:41,040 --> 00:54:42,200
Yeah, maybe that's the thing I should be doing

1415
00:54:42,200 --> 00:54:44,640
at the end of the year, get myself positioned for 2020.

1416
00:54:44,640 --> 00:54:45,880
Yeah, maybe that's what I'll tell myself.

1417
00:54:45,880 --> 00:54:48,480
Nice new workstation, everything working ideally,

1418
00:54:48,480 --> 00:54:49,920
no mouse leg.

1419
00:54:49,920 --> 00:54:52,720
Here's the thing, Wes, still had mouse leg.

1420
00:54:52,720 --> 00:54:54,040
No.

1421
00:54:54,040 --> 00:54:59,040
Yep, on plasma, using X instead of Wayland,

1422
00:55:00,040 --> 00:55:04,880
Kwin, AMD graphics, still had mouse leg.

1423
00:55:04,880 --> 00:55:07,080
Have you considered just getting a faster mouse?

1424
00:55:07,080 --> 00:55:09,400
Well, I just thought about locking myself

1425
00:55:09,400 --> 00:55:12,280
in the bathroom, honestly, I was so upset.

1426
00:55:13,200 --> 00:55:15,200
Can you switch to just the console directly?

1427
00:55:15,200 --> 00:55:16,040
Because that's, you know.

1428
00:55:16,040 --> 00:55:17,200
Yeah, yeah.

1429
00:55:18,280 --> 00:55:21,240
So I went down, again, different threads

1430
00:55:21,240 --> 00:55:23,880
and a common thread I kept coming across

1431
00:55:23,880 --> 00:55:26,760
was people were noticing this issue

1432
00:55:26,760 --> 00:55:29,200
when they were experiencing high disk IO

1433
00:55:30,040 --> 00:55:32,960
and GPU usage at the same time.

1434
00:55:32,960 --> 00:55:35,440
Not gaming types of usage, but just like things

1435
00:55:35,440 --> 00:55:37,320
that use the GPU on the Linux desktop,

1436
00:55:38,280 --> 00:55:41,160
which Chrome uses the hell out of the disk cache

1437
00:55:41,160 --> 00:55:42,840
and the GPU when it's rendering a page.

1438
00:55:42,840 --> 00:55:44,840
And that is primarily when I would notice it,

1439
00:55:44,840 --> 00:55:46,760
when I'd have a video or something playing perhaps,

1440
00:55:46,760 --> 00:55:47,600
or something going on.

1441
00:55:47,600 --> 00:55:49,440
Maybe you've opened a bunch of new tabs.

1442
00:55:49,440 --> 00:55:51,080
And of course, I've got multiple monitors,

1443
00:55:51,080 --> 00:55:54,520
even though I've got like an AMD 560 in there, whatever,

1444
00:55:55,720 --> 00:55:58,920
570 actually, I'd have the issue, I'd have leg.

1445
00:55:58,920 --> 00:56:02,160
I'd still, even on plasma, I'd have the damn mouse leg.

1446
00:56:03,320 --> 00:56:04,960
So I thought, okay, well, maybe I could reduce some of this.

1447
00:56:04,960 --> 00:56:07,000
I can't really reduce the GPU usage.

1448
00:56:07,000 --> 00:56:10,960
That's modern browsers, but can I reduce disk IO?

1449
00:56:12,080 --> 00:56:16,360
And so I decided to load up profile sync daemon,

1450
00:56:17,280 --> 00:56:20,800
which sim links and syncs your browser profile directories

1451
00:56:20,800 --> 00:56:24,880
to RAM using tempFS and RAM.

1452
00:56:24,880 --> 00:56:27,840
Thus, it reduces the hard drive calls.

1453
00:56:27,840 --> 00:56:29,280
It speeds up your browser.

1454
00:56:30,400 --> 00:56:32,480
I wanna make it clear here.

1455
00:56:32,480 --> 00:56:35,720
I'm doing this on a really nice MVNE, okay?

1456
00:56:35,720 --> 00:56:36,720
I've got-

1457
00:56:36,720 --> 00:56:38,640
It's not some 5400 RPM.

1458
00:56:38,640 --> 00:56:40,640
No, it's no slouch.

1459
00:56:40,640 --> 00:56:43,440
I legitimately noticed an improvement when I did this.

1460
00:56:43,440 --> 00:56:44,760
I mean, have you tried RAM?

1461
00:56:44,760 --> 00:56:45,600
It's the best.

1462
00:56:45,600 --> 00:56:47,600
It is the best.

1463
00:56:47,600 --> 00:56:48,960
Everything's faster.

1464
00:56:48,960 --> 00:56:50,760
What's great about profile sync daemon,

1465
00:56:50,760 --> 00:56:52,040
besides the fact that it could cause you

1466
00:56:52,040 --> 00:56:53,440
to lose your entire profile,

1467
00:56:53,440 --> 00:56:55,520
is that it supports like all of the browsers,

1468
00:56:55,520 --> 00:56:58,120
even Vivaldi, and I'm not sure about Brave,

1469
00:56:58,120 --> 00:56:59,960
but like all the different browsers.

1470
00:56:59,960 --> 00:57:02,360
And it automatically detects them if you like.

1471
00:57:02,360 --> 00:57:05,480
And it handles and manages the syncing to RAM and back.

1472
00:57:05,480 --> 00:57:07,800
So you wanna properly close and open your browser

1473
00:57:07,800 --> 00:57:09,000
at the beginning and the end of your day

1474
00:57:09,000 --> 00:57:11,040
to give it a chance to sync.

1475
00:57:11,040 --> 00:57:14,440
You'll notice if you watch the cache usage

1476
00:57:14,440 --> 00:57:16,960
from the kernel file system cache,

1477
00:57:16,960 --> 00:57:20,120
you'll notice if you watch that indicator closely,

1478
00:57:20,120 --> 00:57:22,760
you can see it blast the cache

1479
00:57:22,760 --> 00:57:25,480
as profile sync daemon does it sync.

1480
00:57:25,480 --> 00:57:26,800
It just, it saturates.

1481
00:57:26,800 --> 00:57:30,400
It complete on my system with, I think this box,

1482
00:57:30,400 --> 00:57:32,520
it's either 32 or 64 gigs of RAM.

1483
00:57:32,520 --> 00:57:35,840
I mean, it just uses a ton of cache for like 15 seconds.

1484
00:57:35,840 --> 00:57:39,240
It's really fast because it's going from RAM to an MVNE.

1485
00:57:39,240 --> 00:57:43,440
But if you like were to lock up and hit reboot,

1486
00:57:43,440 --> 00:57:44,520
it would never have had a chance

1487
00:57:44,520 --> 00:57:46,480
to write that profile back to disk.

1488
00:57:46,480 --> 00:57:49,120
And so any changes would be lost.

1489
00:57:49,120 --> 00:57:51,120
Now, the nice thing is that's pretty much mitigated

1490
00:57:51,120 --> 00:57:54,840
these days by browser sync for the most part.

1491
00:57:54,840 --> 00:57:58,200
So it's constantly syncing to the Vivaldi cloud service.

1492
00:57:58,200 --> 00:58:00,600
And yeah, I'm on Vivaldi too.

1493
00:58:00,600 --> 00:58:02,880
A part of this I switched over to Vivaldi.

1494
00:58:02,880 --> 00:58:04,040
That's a whole nother story.

1495
00:58:04,040 --> 00:58:07,640
But so thank you for asking about the mouse leg.

1496
00:58:07,640 --> 00:58:08,840
Hey, you know, it works out well too

1497
00:58:08,840 --> 00:58:12,520
because of course profile sync daemon is in the AUR.

1498
00:58:12,520 --> 00:58:13,480
Of course it is.

1499
00:58:13,480 --> 00:58:16,240
Yeah, but it's pretty much available for anything.

1500
00:58:16,240 --> 00:58:18,920
I think my suspicion is,

1501
00:58:18,920 --> 00:58:23,680
is that something is no longer great on my box

1502
00:58:23,680 --> 00:58:27,600
or perhaps my original suspicion is that

1503
00:58:27,600 --> 00:58:30,840
around kernel 5.2 time period,

1504
00:58:30,840 --> 00:58:33,760
somewhere when I transitioned from the four series kernel

1505
00:58:33,760 --> 00:58:37,320
from an older distribution

1506
00:58:37,320 --> 00:58:39,880
to the five series kernels on this box,

1507
00:58:39,880 --> 00:58:42,240
that's when these problems manifested.

1508
00:58:42,240 --> 00:58:44,120
I do suspect if I were willing

1509
00:58:44,120 --> 00:58:45,520
to not have the latest goodies.

1510
00:58:45,520 --> 00:58:47,760
So you're saying you're going to switch to Neon.

1511
00:58:49,000 --> 00:58:51,160
Yeah, cause you're like what on 4.16 or something?

1512
00:58:51,160 --> 00:58:52,240
Well, let's find out.

1513
00:58:52,240 --> 00:58:55,040
Because I never had leg on Neon, same hardware.

1514
00:58:55,040 --> 00:58:56,360
4.15 baby.

1515
00:58:56,360 --> 00:59:00,080
Yeah, and when I use the gnome implementation of Ubuntu,

1516
00:59:00,080 --> 00:59:02,680
that's on 1804, I didn't have mouse leg.

1517
00:59:02,680 --> 00:59:04,880
It wasn't until I went to five series kernels

1518
00:59:04,880 --> 00:59:06,000
that I started getting mouse leg.

1519
00:59:06,000 --> 00:59:08,000
And I wonder if this is never going to be fixed.

1520
00:59:08,000 --> 00:59:11,800
It's kind of getting, you know, three year old box now,

1521
00:59:11,800 --> 00:59:13,400
something like that, getting there two and a half,

1522
00:59:13,400 --> 00:59:15,560
something people are not going to be releasing new drivers

1523
00:59:15,560 --> 00:59:18,000
for it's just, I think I'm doomed.

1524
00:59:18,000 --> 00:59:20,520
So my solution is to just reduce the disk IO

1525
00:59:20,520 --> 00:59:24,360
while using GPU for a web rendering stuff.

1526
00:59:24,360 --> 00:59:25,920
It doesn't seem to affect games.

1527
00:59:25,920 --> 00:59:27,400
It doesn't seem to affect that stuff.

1528
00:59:27,400 --> 00:59:28,560
How well does this actually work?

1529
00:59:28,560 --> 00:59:30,400
I mean, do you still get occasional mouse leg

1530
00:59:30,400 --> 00:59:31,240
or is it pretty much done?

1531
00:59:31,240 --> 00:59:32,480
Very, very, very well.

1532
00:59:32,480 --> 00:59:33,920
Nearly gone.

1533
00:59:35,160 --> 00:59:36,000
Excellent.

1534
00:59:36,000 --> 00:59:37,680
Maybe a glitch or two a day now,

1535
00:59:37,680 --> 00:59:40,440
instead of every few minutes.

1536
00:59:40,440 --> 00:59:41,800
It's a huge difference.

1537
00:59:41,800 --> 00:59:43,480
So you can use your nice computer now.

1538
00:59:43,480 --> 00:59:47,520
Yeah, so give that a go and see if that works for you.

1539
00:59:47,520 --> 00:59:48,360
I don't know if it will.

1540
00:59:48,360 --> 00:59:49,200
Okay, now we've got to get out of here,

1541
00:59:49,200 --> 00:59:50,280
but we'll do one more.

1542
00:59:50,280 --> 00:59:51,600
Cause I promise, towards the end of the video,

1543
00:59:51,600 --> 00:59:52,440
we'll start doing this.

1544
00:59:52,440 --> 00:59:53,920
And we'll do another batch,

1545
00:59:53,920 --> 00:59:56,720
if you'd like linuxunplugged.com slash contact.

1546
00:59:56,720 --> 00:59:59,080
But I think this is a good one to end on.

1547
00:59:59,080 --> 01:00:02,000
Cameron writes in, regarding some requests for feedback,

1548
01:00:02,000 --> 01:00:04,280
I'd love to have a forum for the podcast

1549
01:00:04,280 --> 01:00:07,240
or better yet for Jupiter broadcasting as a whole.

1550
01:00:07,240 --> 01:00:09,600
So the listeners and maybe you guys can all communicate

1551
01:00:09,600 --> 01:00:11,200
and share info, news, et cetera.

1552
01:00:12,760 --> 01:00:15,280
So that's something we've actually been talking about

1553
01:00:15,280 --> 01:00:17,360
internally. Indeed.

1554
01:00:17,360 --> 01:00:19,520
We have been around for so long now

1555
01:00:19,520 --> 01:00:22,760
that we have had about three different iterations of,

1556
01:00:22,760 --> 01:00:25,720
oh, if you count before Jupiter broadcasting was formed,

1557
01:00:25,720 --> 01:00:28,320
probably five different iterations of community forums.

1558
01:00:28,320 --> 01:00:30,520
Some of them were so large

1559
01:00:30,520 --> 01:00:31,920
that that's actually how we ended up

1560
01:00:31,920 --> 01:00:34,160
starting to work with Alan on Scale Engine,

1561
01:00:34,160 --> 01:00:35,720
is we had to move on to infrastructure

1562
01:00:35,720 --> 01:00:38,000
that could handle the amount of traffic we were getting.

1563
01:00:38,000 --> 01:00:40,200
So we definitely have had some in the past,

1564
01:00:40,200 --> 01:00:44,240
but they generally over time kind of declined.

1565
01:00:45,280 --> 01:00:47,720
And they become a pretty large source of work.

1566
01:00:47,720 --> 01:00:51,040
And I want our interactions with the community

1567
01:00:51,040 --> 01:00:53,920
to be excited, like we're excited to do it,

1568
01:00:53,920 --> 01:00:55,840
not unsure. Yeah, absolutely.

1569
01:00:55,840 --> 01:00:59,400
So our current outlets are not quite,

1570
01:00:59,400 --> 01:01:00,720
they're not like something on the web.

1571
01:01:00,720 --> 01:01:02,200
And that's what's so great about forum software,

1572
01:01:02,200 --> 01:01:04,360
because we do have the IRC,

1573
01:01:04,360 --> 01:01:07,800
irc.geekshed.net pound Jupiter broadcasting,

1574
01:01:07,800 --> 01:01:09,280
hashtag. Octothorp.

1575
01:01:09,280 --> 01:01:10,800
Octothorp.

1576
01:01:10,800 --> 01:01:11,760
So of course we have that,

1577
01:01:11,760 --> 01:01:14,400
that's a persistent chat going all the time.

1578
01:01:14,400 --> 01:01:15,960
But we also have the Telegram group,

1579
01:01:15,960 --> 01:01:18,520
jupiterbroadcasting.com slash Telegram.

1580
01:01:18,520 --> 01:01:20,840
There's over a thousand people in there chatting,

1581
01:01:20,840 --> 01:01:23,800
usually about a hundred online at any given time.

1582
01:01:23,800 --> 01:01:24,920
And then last but not least,

1583
01:01:24,920 --> 01:01:26,200
we actually have a discord too.

1584
01:01:26,200 --> 01:01:27,120
We don't do much with it,

1585
01:01:27,120 --> 01:01:28,680
but there is a Jupiter broadcasting discord

1586
01:01:28,680 --> 01:01:31,160
and I'll put a link in the show notes.

1587
01:01:31,160 --> 01:01:34,360
I mentioned all of those because we do have some outlets

1588
01:01:34,360 --> 01:01:36,120
of persistent chat where you can come

1589
01:01:36,120 --> 01:01:37,000
and talk about the shows.

1590
01:01:37,000 --> 01:01:39,040
But the nice thing about forums is you've got topics,

1591
01:01:39,040 --> 01:01:42,840
you can, you know, episode 329 of Linux Unplugged,

1592
01:01:42,840 --> 01:01:44,360
where they talked about flat networks.

1593
01:01:44,360 --> 01:01:46,720
It is a different thing, it's its own beast.

1594
01:01:46,720 --> 01:01:48,680
So I could be convinced of it again.

1595
01:01:48,680 --> 01:01:50,480
Probably need some feedback about it though.

1596
01:01:50,480 --> 01:01:52,080
And what would be the advantage of that,

1597
01:01:52,080 --> 01:01:54,200
say over the Jupiter Broadcasting subreddit,

1598
01:01:54,200 --> 01:01:55,200
which we've never really mentioned,

1599
01:01:55,200 --> 01:01:57,400
but we have a Jupiter Broadcasting subreddit,

1600
01:01:57,400 --> 01:02:00,120
which also kind of acts in that forum capacity,

1601
01:02:00,120 --> 01:02:02,600
but not everybody wants a Reddit account,

1602
01:02:02,600 --> 01:02:04,840
but not everybody wants to go make a forum account.

1603
01:02:04,840 --> 01:02:07,160
So feedback, linuxunplugged.com slash contact,

1604
01:02:07,160 --> 01:02:09,080
probably won't read them all on air,

1605
01:02:09,080 --> 01:02:10,440
but we will read them off air

1606
01:02:10,440 --> 01:02:12,520
and help it inform our decision.

1607
01:02:12,520 --> 01:02:13,360
So there you have it.

1608
01:02:13,360 --> 01:02:15,720
We did some feedback.

1609
01:02:15,720 --> 01:02:16,720
Really quick before we run,

1610
01:02:16,720 --> 01:02:20,840
also just a few picks to mention because I love these.

1611
01:02:20,840 --> 01:02:22,960
Check out Wee Slack.

1612
01:02:22,960 --> 01:02:25,040
It's a WeChat plugin for Slack

1613
01:02:25,040 --> 01:02:27,520
and its developer was Ryan, our guest today.

1614
01:02:27,520 --> 01:02:30,280
It has its own community now, it's its own thing,

1615
01:02:30,280 --> 01:02:31,480
but he started it all.

1616
01:02:31,480 --> 01:02:32,960
Yeah, he no longer is even involved,

1617
01:02:32,960 --> 01:02:33,800
but it's still a thing.

1618
01:02:33,800 --> 01:02:38,440
So if you want to use Slack still in an IRC client,

1619
01:02:38,440 --> 01:02:40,640
it's possible using Wee Slack.

1620
01:02:40,640 --> 01:02:42,040
And then I came across,

1621
01:02:42,040 --> 01:02:44,440
I don't even know how I'm gonna say this one, Grinds.

1622
01:02:44,440 --> 01:02:45,680
What do you say, Wes, give it a shot.

1623
01:02:45,680 --> 01:02:48,760
Yeah, oh, why do you do this to me?

1624
01:02:48,760 --> 01:02:50,720
Geerins. Geerins. Geerins.

1625
01:02:50,720 --> 01:02:55,720
This is a fairly slick GTK desktop front end to Plex.

1626
01:02:57,200 --> 01:02:58,360
We finally have one.

1627
01:02:58,360 --> 01:02:59,920
Why would you want this, you say?

1628
01:02:59,920 --> 01:03:02,800
I'll tell you why, because browsers are monsters.

1629
01:03:02,800 --> 01:03:06,280
They take everything, your disk, your CPU, your RAM.

1630
01:03:06,280 --> 01:03:08,160
They make your damn mouse leg.

1631
01:03:08,160 --> 01:03:11,320
They are the worst.

1632
01:03:11,320 --> 01:03:12,240
They're huge.

1633
01:03:12,240 --> 01:03:15,240
One tab takes up way more CPU and memory

1634
01:03:15,240 --> 01:03:16,400
than it should.

1635
01:03:16,400 --> 01:03:18,360
And during some of our benchmarks,

1636
01:03:18,360 --> 01:03:20,080
we have seen when a system gets loaded,

1637
01:03:20,080 --> 01:03:22,480
we have seen how a browser tab can bring a system

1638
01:03:22,480 --> 01:03:23,640
down to its knees when it's under load.

1639
01:03:23,640 --> 01:03:24,480
It's crazy.

1640
01:03:25,800 --> 01:03:27,800
This does none of that.

1641
01:03:27,800 --> 01:03:30,080
It's a native, clean client.

1642
01:03:30,080 --> 01:03:32,720
When it's sitting there and you're not playing anything,

1643
01:03:32,720 --> 01:03:34,400
it's not using any resources.

1644
01:03:34,400 --> 01:03:35,800
It just sits there quietly,

1645
01:03:35,800 --> 01:03:37,840
doesn't peg your CPU constantly.

1646
01:03:37,840 --> 01:03:39,240
And when you do want to play,

1647
01:03:39,240 --> 01:03:41,320
it takes only the amount of resources

1648
01:03:41,320 --> 01:03:42,960
it takes to just decode the video,

1649
01:03:42,960 --> 01:03:45,120
which is probably pretty damn fast on your system.

1650
01:03:45,120 --> 01:03:47,200
It's glorious.

1651
01:03:47,200 --> 01:03:48,440
And it's a GTK application,

1652
01:03:48,440 --> 01:03:49,880
so it looks great on your GNOME shell.

1653
01:03:49,880 --> 01:03:53,040
What am I going to do with all this extra CPU time?

1654
01:03:53,040 --> 01:03:53,880
I don't know.

1655
01:03:53,880 --> 01:03:54,720
I don't know.

1656
01:03:54,720 --> 01:03:55,560
Run Slack probably.

1657
01:03:55,560 --> 01:03:58,120
But I was so elated when I found that

1658
01:03:58,120 --> 01:03:59,840
because I like to have like,

1659
01:03:59,840 --> 01:04:02,960
I have series on Plex that are like my barely kind of

1660
01:04:02,960 --> 01:04:05,680
just background stuff that I play while working.

1661
01:04:05,680 --> 01:04:06,760
So now throwing it up on a screen

1662
01:04:06,760 --> 01:04:08,240
and not eating a bunch of resources while I'm working

1663
01:04:08,240 --> 01:04:09,680
is fantastic.

1664
01:04:09,680 --> 01:04:11,520
Trying to reduce resource usage,

1665
01:04:11,520 --> 01:04:14,160
even though I have 12 cores.

1666
01:04:14,160 --> 01:04:15,800
It's ridiculous.

1667
01:04:15,800 --> 01:04:17,880
Mr. Payne, you're over there on the Tech Snaps,

1668
01:04:17,880 --> 01:04:19,160
techsnaps.systems.

1669
01:04:19,160 --> 01:04:20,160
Techsnaps.systems.

1670
01:04:20,160 --> 01:04:21,200
There's no S on the Tech Snap,

1671
01:04:21,200 --> 01:04:23,080
but I like saying it.

1672
01:04:23,080 --> 01:04:23,920
Don't confuse everyone.

1673
01:04:23,920 --> 01:04:25,160
I like saying it.

1674
01:04:25,160 --> 01:04:26,040
I like it.

1675
01:04:26,040 --> 01:04:27,640
So yeah, I've been really enjoying it.

1676
01:04:27,640 --> 01:04:30,760
Give my rounds of compliments to Mr. Salter

1677
01:04:30,760 --> 01:04:32,200
because I think he's really,

1678
01:04:32,200 --> 01:04:33,160
both of you really hit your groove

1679
01:04:33,160 --> 01:04:34,240
for a while now on that show.

1680
01:04:34,240 --> 01:04:36,440
So it's been the sequence like good for a while, you know?

1681
01:04:36,440 --> 01:04:37,280
I love that.

1682
01:04:37,280 --> 01:04:38,100
Totally agree.

1683
01:04:38,100 --> 01:04:38,940
Awesome show.

1684
01:04:38,940 --> 01:04:41,880
And of course, Alex and I on Self Hosted next week.

1685
01:04:42,720 --> 01:04:43,560
Brand new episode of Self Hosted.

1686
01:04:43,560 --> 01:04:44,400
Oh, I'm excited.

1687
01:04:44,400 --> 01:04:48,680
Tomorrow, live stream, live Self Hosted hack tomorrow,

1688
01:04:48,680 --> 01:04:51,080
Wednesday, jblive.tv,

1689
01:04:51,080 --> 01:04:54,320
10.30 a.m. Jupiter Broadcasting time.

1690
01:04:54,320 --> 01:04:56,320
Alex is going to do a little live hacking on the stream.

1691
01:04:56,320 --> 01:04:57,160
Oh.

1692
01:04:57,160 --> 01:04:58,880
Just a little Self Hosted bobo.

1693
01:04:58,880 --> 01:05:00,680
Bomo bobo for Self Hosto.

1694
01:05:00,680 --> 01:05:05,400
ESP8266 hacking and LSDs and all that kind of stuff.

1695
01:05:05,400 --> 01:05:06,240
Yeah.

1696
01:05:06,240 --> 01:05:07,240
Sounds like just what we need to start up the holidays.

1697
01:05:07,240 --> 01:05:08,080
I know.

1698
01:05:08,080 --> 01:05:08,920
I love it.

1699
01:05:08,920 --> 01:05:09,880
Of course, all of that can be found

1700
01:05:09,880 --> 01:05:11,500
at jupitbroadcasting.com slash calendar.

1701
01:05:11,500 --> 01:05:13,240
We're at ledxunplugged.com.

1702
01:05:13,240 --> 01:05:15,240
And we'll see you right back here next Tuesday.

1703
01:05:15,240 --> 01:05:16,080
Ah!

1704
01:05:16,080 --> 01:05:43,160
The party of the century.

1705
01:05:46,080 --> 01:06:01,560
Before we get out of here, JBtitles.com, I have a question for the virtual lug.

1706
01:06:01,560 --> 01:06:07,440
Does anybody own a USB stick that they could still find that is less than 16 gigabytes?

1707
01:06:07,440 --> 01:06:08,440
Megabytes.

1708
01:06:08,440 --> 01:06:09,440
Megabytes?

1709
01:06:09,440 --> 01:06:10,440
Megabytes.

1710
01:06:10,440 --> 01:06:11,440
We have one for...

1711
01:06:11,440 --> 01:06:12,440
No, megabytes.

1712
01:06:12,440 --> 01:06:13,440
Hey, I mean...

1713
01:06:13,440 --> 01:06:14,440
Joe does not play.

1714
01:06:14,440 --> 01:06:16,560
Yeah, Joe has a 16 megabyte SD card.

1715
01:06:16,560 --> 01:06:17,560
No, not megabytes.

1716
01:06:17,560 --> 01:06:18,560
Oh, wow.

1717
01:06:18,560 --> 01:06:19,560
I can't believe that.

1718
01:06:19,560 --> 01:06:21,760
Yeah, I have a 256 megabyte SD card.

1719
01:06:21,760 --> 01:06:23,080
256 is also here.

1720
01:06:23,080 --> 01:06:25,840
Oh, I thought I'd be Mr. Bregsy here with my four gigabytes.

1721
01:06:25,840 --> 01:06:29,240
Yeah, he just keeps his favorite GIF, just one on there.

1722
01:06:29,240 --> 01:06:30,240
Oh, sorry, GIF.

1723
01:06:30,240 --> 01:06:31,240
Is that what you prefer?

1724
01:06:31,240 --> 01:06:35,880
Hey, do you remember those early digital cameras that actually took an entire floppy disk?

1725
01:06:35,880 --> 01:06:41,720
They took a 1.4 megabyte floppy disk and then they saved the horrible JPEGs to the floppy?

1726
01:06:41,720 --> 01:06:45,760
Yeah, I think it was a Canon camera and I think you could shoot...

1727
01:06:45,760 --> 01:06:48,720
You could get 12 photos on one floppy, I believe.

1728
01:06:48,720 --> 01:07:12,040
You would have killed for 16 megabytes back then.

