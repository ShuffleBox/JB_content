Listen closely, there's an embedded message in this music.
All right, there's the source.
Now listen carefully for the message.
Did you hear it, Wes?
You know, I think I heard something.
Yeah, there is a little bit of a difference there.
There is data hiding in the 9.8 kilohertz to 10 kilohertz audio spectrum in that sample
that we just played.
Wow.
You know, considering it sounds pretty decent, I think.
Yeah, well, one of the tricks they're doing is they're analyzing the music and then they're
encoding data into the audible range of the music.
So picture a moment, like transferring information via sound, as we all know modems used to do
that.
What if you could have smartphones that are always listening to the background music that's
playing, like your Pixel 3 does?
Oh, yes it does.
And it's only a little bit creepy.
Now what if you could transmit information in that music, like the coffee shop Wi-Fi
password?
Oh, so you just step into the coffee shop, the music's been altered just a little bit
to encode the password, say, and then your phone picks it up, registers, finds the network,
hops on in your own life.
Wes, this isn't just a theory, why, it's a white paper too.
Yeah, I thought this was really interesting, man.
Obviously, there's so many other implications when you're just spewing this stuff out in
the air and what your phone can pick up.
But I thought it was a pretty interesting way of, you know, encoding these sorts of
things that we all use on a daily basis in our surrounding audio.
And they pointed out like, why use audio frequencies, right?
Why not use a frequency that we can't hear?
And basically, there's already, there's just a lot of speakers for the human audio range
already.
So you have speakers in the ceiling that are designed to pipe out music in that range at
the mall.
Yeah, you're not going to get fantastic data rates here.
Real world data transfer would be around 200 bits a second.
So that's, I think, if I'm doing my math right, about 25 words per second.
So a good Wi-Fi password, but that's about it.
Yeah, something like an audio QR code.
Yeah, an audio QR code is exactly what it would be.
What could go wrong, Wes?
Hello and welcome to Linux Unplugged episode 311.
My name is Chris.
My name is Wes.
Hello, Wes.
We have a great episode today.
So not only are we going to get to some important community news, I've had a think recently
about the community news.
Oh boy.
So this is a slightly retuned community news, this edition.
Thomas Cameron is joining us on this week's episode, and if that name rings a bell, that's
because back in episode 304, we talked about Texas Linux Fest and a keynote that really
made us think.
Everyone on the team was impressed by this keynote, and that was the one that was given
by Thomas Cameron, and he joins us this week on the show.
Hey there, Thomas.
Hey, thank you so much for having me, and thank you for the kind words.
I appreciate it.
No, really.
Thank you for joining us.
This is something that we've been wanting to do.
Both Wes and I didn't talk about it ahead of time, but on the way into the studio today,
listened to your keynote again, because we have a recording of it, because we just enjoyed
it so much.
So thank you for making it, and as we go through the community news here and stuff, please
feel free to chime in, and then after we get through this community news, let's just chat
about some of the topics you raised in your keynote.
We'll just kind of expand on them a little bit and things like that.
Sounds good.
All right.
So before we get to that community news, I have to say time-appropriate greetings to
that mumble room.
Hello, Virtual Lug.
Good evening.
Hello.
Hello.
Hello.
That's a packed mumble room.
And of course, Mr. Cheese Bacon's here.
Hello, Cheese.
Hey, how's it going, man?
Hey, Chasey.
Good.
Good.
Really good.
Just got back from Montana.
Decided to do something that I think I'm going to do more often when I do a family trip,
because I took the family to Montana, and then I thought, you know, when I get back,
the week I get back, instead of just jumping right back into work, what if I kind of like
ease in a little bit?
Oh, the ease in.
Interesting.
The ease in.
You know, I slide in a little bit.
So I...
Phase in, you might say.
I booked a campsite on a river in eastern Washington.
I don't know if that's phasing in.
I think that's just more vacation.
Well, I'm in studio, aren't I?
Yes, you are.
I did the three-hour commute in today just because Thomas is here.
Seriously.
If Thomas wasn't here, I would have been like, I'll do it remote.
Screw it.
Is that a river behind you?
Yeah.
That is the river.
That would have been Joe's like, Joe.
Joe would have contacted me like, Chris, this river noise, I can't filter it out.
That's my Joe impression.
It's very bad.
Anyways, moving on, let's talk about these Dropbox updates that people have been tweeting
me saying, well, now Chris is going to switch back to Dropbox now that this news is out.
Wrong.
But it is good to see, nonetheless, Dropbox is adding back-end support for ZFS, eCryptFS,
and XFS and ButterFS on Linux.
Look at that.
Didn't expect that to happen.
I mean, is that like a little awkward?
Have they said anything?
Or is it just sort of people are noticing that the support's back?
That.
Yeah.
Feels weird, right?
Yeah.
Are there changes in the justifications they gave for dropping it?
No, it's just changes in the release notes for a beta version.
This is so late, really, if you think about it.
Exactly, right, Brent?
It's like, it's too late.
It was the last straw, wasn't it?
It was by far the last straw.
I mean, how many people just kind of said, all right, I'm out of here.
See ya.
You gave me a good reason to work a little harder at finding a better solution.
So I think they lost a lot of people.
Well, and I'll tell you, one of the things about desktop Linux is sometimes we get the
features last.
And that can actually be, in some cases, a good thing, especially if you want a reliable
workstation that is predictable.
And on Windows and Mac OS, and you've got to imagine eventually this would land on Linux,
but on Windows and Mac OS, things have gotten really bad in Dropbox town.
So Dropbox now uses over a half a gig of memory on Mac OS.
And when you look in its frameworks folder in the application bundle, there's an entire
Chromium web rendering engine in there.
And they've implemented an electron-based file manager in Dropbox on Mac OS.
Can you believe that?
I mean, I knew it was coming.
I mean, it just had to be.
I didn't think Dropbox would be the one to do it.
I mean, Dropbox went from super lightweight cross-platform sync tool to the most bloated
sync tool possible.
Well, it's a whole service, Chris.
It's not just about syncing anymore.
I mean, one of the things that I was resistant about Nextcloud was it just felt like it was
too much stuff besides file syncing.
Right.
You just want some files and to have them everywhere.
I had a change of heart and I realized there was other things I could take advantage of
and then Nextcloud was a slam dunk.
But now looking at this, I'm thinking, man, the trade-off is actually still there.
Like Dropbox is too much.
With the price, if you want real storage, if you want more than three devices, half
a gig of memory just for their stupid electron file manager, and then the fact that Linux
feels like a second or maybe even third-class platform.
Thomas, as our special guest here on the Unplugged program, I'm curious what your sync solution
is.
Do you have anything that syncs to the cloud?
I do.
I do.
My wife and I both have backup routines.
She's on a Windows laptop.
I obviously am on a Linux system.
I hate to say it, man, I'm sort of old-fashioned.
I have an rsync script that runs on my laptop that checks to see if it's docked at home.
If it's docked at home, it syncs over to my file server.
Once it's done that, then that file server syncs to some cloud instances that I have.
My wife uses a commercial cloud storage solution.
I don't even remember what it is.
We do use cloud storage, definitely, but in both cases, it's not very sophisticated.
There's something nice about using rsync to move your data around because it's easier
to observe, it's easier to understand, so you feel a little safer about your own data
because it's a tool you can wrap your head around.
Exactly.
When you're writing it, you're writing your script and you're saying, I want this data
to go over to this internal server versus this data, which absolutely has to go to the
cloud immediately because it's very important and we don't want to lose it.
It's like, I know exactly what the software is doing because I wrote it.
And you only have yourself to blame, which I'm used to doing that, so that's not so bad.
I actually like that.
That's fine by me.
I'd be okay in that scenario.
Are you using any kind of secret sauce for your laptop and rsync to figure out when you're
on the homeland versus when you're on a hotel Wi-Fi or something?
Yeah.
Honestly, I do a couple of different things.
I look to see if I'm in the right address range, and I use kind of an oddball address
range for my home lab.
And then I also check to see if the slash etsy slash resolve.conf is set up to search
on my home office domain.
Home DNS.
Right.
Right.
So that's what it is.
And if my host name is correct, so I do a number of tests, but yeah, if I'm on the right
network and the host name that's been assigned is a host name that I recognize because I've
got static DHCP reservations and my resolve.conf says that I'm in the right search domain,
then it fires off the rsync script.
That's a solid way to do it.
That is a really solid way to do it.
Well, and because I'm an idiot, it's great that it's hands free.
Yes.
Yeah.
Yeah.
Just let it go.
That's right.
Because if those conditions exist, then it runs.
Yep.
Yeah, that's nice.
That's how you want your backups to be really.
There's absolutely nothing wrong with that setup.
It's similar to how I back up my photos now.
So it's not quite, I don't have the network detection stuff because mine's just always
here on the land.
But I like that.
So Thomas, I know you're a long time Red Hatter.
If I recall from the keynote, you were certified in 1999.
So you've been around for a while.
Yeah.
My first installation of Linux was back in, gosh, 1995, I think.
It was the first version of Slackware that supported the A.out format.
Oh, wow.
Yeah.
Yeah, yeah, yeah.
So I mean, it's been a while.
And then when I went to, actually, before I went to work at Red Hat, I was a Red Hat
certified engineer on Red Hat Linux 6.1.
And then while I worked at Red Hat, I was a Red Hat certified architect level five, which
means that I didn't just pass the tests to become an RHCA.
But then I took five additional technical tests after that and passed all of those.
So big old geek.
And as we talk today, if memory serves, you are an Amazon Linux solutions architect, correct?
Correct.
Yes.
So I started out after almost 14 years, about four months ago, and started with AWS, the
Amazon Web Services.
And I get to play with Amazon Linux all day, every day.
And it's a lot of fun.
It's a whole lot of fun.
Interesting.
I'd like to talk more about that in a moment, because that's something I got to be honest
with you.
We don't cover much on this show.
Yeah.
And Wes and I feel a little embarrassed about that, because it's out there.
A lot of people are using it, and it's getting about zero coverage.
Let's get to there in a moment.
But I kind of want to take a little bit of a historical perspective on this next story
with you.
Sure.
So this week, it was approved by the Fedora technical committee to discontinue shipping
32-bit ISOs.
And they're also debating an additional, even further step.
Oh, yes.
So they also started talking about when should they end 32-bit software repositories in general
for Fedora.
So they will consider a late change proposal for Fedora 31.
And as a result, there is now the no i686 repositories proposal that was drafted where
they would stop producing and distributing modular and everything i686 repositories.
And this 32-bit transition has just been one of the continuing meta stories of 2019.
And I'm just really fascinated on your entire take on the bigger picture here, the bigger
story.
You know, the systems that run 32-bit architecture are becoming so few and so far between and
frankly so specialized, right?
Usually we're talking about industrial machines or special purpose machines.
And Fedora is at its heart meant to be a general purpose distribution.
And so I kind of understand the logic behind saying, look, you know, you pretty much can't
buy a 32-bit machine anymore.
So we're not going to burn the effort and the engineering effort and all of the build
systems and all of the storage and all of the overhead that comes with keeping 32-bit
distributions alive for something that is really a niche sort of specialized platform.
So I kind of agree with them, honestly.
Same with me.
I feel like you need a couple of distributions to start pushing this forward.
And Fedora is a great distribution for that kind of tech, pushing a new tech forward.
Okay.
So, you know, you and I are both long timers.
You've got more time on this than I do.
And I'm curious to get your perspective on why when Canonical announced something somewhat
similar, although in a different style, there was a pretty big outrage, in fact, a weekend
of outrage that just where people were popping off for a weekend, 60 different articles were
written.
When this gets announced by Fedora, there's like three articles and two of them were by
Feronix.
What's with the tonal difference, do you think?
Well, I think that you hit the nail on the head when you said they announced it differently.
With the Fedora project, it is a project and it is a represented project.
And by that, I mean, there are folks from the community who are represented.
There are, you know, over communication with a lot of the development mailing lists.
And so I think that the idea of doing away with 32-bit builds was socialized for a long
time before the announcement was sort of broadly broadcast, if that makes sense.
And I think that the way that it was communicated and I think that the rationale behind it,
kind of what we talked about just a minute ago, I think that most folks out in Fedora
land were like, yeah, that makes sense.
I mean, Fedora is a forward looking distro.
It's for bleeding edge cool technologies.
It's for as close to upstream as possible.
And a lot of the stuff that's upstream just doesn't lend itself to 32-bit.
So I think it was all in the way that it was communicated personally.
A flip side question to that then would be, do you think that inherently makes Fedora
less of a corporate desktop platform where Ubuntu LTS seems like you had companies like
Valve and game developers that were almost, they were dependent on it as a desktop platform
where they don't seem to depend on Fedora as a desktop platform as much?
Well, you know, look at having been in corporate IT, you and I both have been in those environments
where if somebody came to me and said, hey, we're just going to upgrade every desktop
in the place that does precision computing or CAD cam or whatever every six months because
the underlying distro revs every six months, I would be like, I'm either going to stab
you or I'm going to open my veins.
Go mental.
Yeah.
So Fedora is designed for sort of bleeding edge developers.
It's a phenomenal desktop.
I use Fedora on my desktop at home and love it.
Whereas LTS is absolutely designed to be a solid, less flashy, sexy, forward-looking
desktop that's going to last for a long time.
And I totally get why folks would use LTS or Ubuntu LTS as opposed to Fedora.
Yeah.
And that could be more appealing to developers from a targeting standpoint because sometimes
projects can have a multi-year lifespan.
Wimpy, I want to give you a chance to jump in here just because I know that this is a
topic that's close to your heart.
You see the reaction differences, the tone differences between Fedora's announcement
and Ubuntu slash Canonical's announcement.
What are your thoughts on that?
I haven't actually seen the announcement from Fedora, so I can't comment on the differences
as to how it was communicated.
If I could, I should take this moment to make clear that the dropping the I680, the 32-bit
repositories and all of that is likely not to happen.
It's a proposal.
It's a proposal that is seeing significant pushback.
But the dropping of 32-bit ISOs and things like that is very likely to happen.
All of which has been pretty much, I think, well received overall.
I am not at all surprised to hear people not caring about the removal of the ISO images
for 32-bit Intel platforms.
I think for those people that need that kind of support, there are plenty of niche distros
that cater to that use case, and it doesn't need the likes of Ubuntu and Fedora to cater
to those individuals.
There are plenty of other places you can go because we're getting into enthusiast territory
now.
These systems are getting old enough, it won't be so long before they'll be retro and there'll
be a slew of YouTube channels about preserving their 32-bit Intel systems.
Let's leave that to the enthusiasts and the retro computer lovers, and let's leave the
mainstream distributions to look to the horizon and march forward.
Well said.
Well said.
How are things over in Ubuntu MATE land these days?
Ubuntu MATE land, yes, very good.
I've spent some time recently creating bespoke images for some more ultra-mobile PC devices.
I heard a little bit about that on that there Ubuntu podcast recently.
Yeah, so GPD sent me an engineering sample of their GPD MicroPC that has been going through
a crowd funder and those devices are currently being shipped to their backers at the moment.
And thanks to the collaboration from Hans de Goode at Red Hat, kernel support for those
devices is in the 5.2 kernel.
The 5.2 kernel landed in the 1910 development branch of Ubuntu, so I put together an alpha
release for that so that people that have got those devices and want some Linux rather
than some Windows have got somewhere to go.
That's great.
And as we progress through the rest of the 1910 cycle, I'll produce a beta image in
then a final image for that device.
That is, you know what, there's something in 5.2, 5.3, and 5.4 I am excited about.
No kidding.
It's getting really good.
So let's take a moment to have Alex bring us down a little bit from the 5.2 hype because
there is a bug that is impacting those of us that are enjoying the KVM lifestyle these
days.
Yeah, was it 3.08 or 3.09, I forget, where we did a VFIO special episode, I ran into
a bug this weekend where on kernel 5.2.1, there is a K-mode exception not handled bug
and this manifests itself in your probably Windows guest as random blue screens of death
or 3D apps might randomly crash, so you might be browsing a website using Chrome and it
will just keep crashing time after time after time.
Now this weekend I'd installed a new SSD, so I thought it was that for the longest time,
it wasted the best part of my Saturday trying to fix this.
Wait, so you hit this bug at the same time you did a hardware upgrade?
Yeah, well when I rebooted my machine, it rebooted into kernel 5.2 and I hadn't noticed
that that had also changed, so yeah, perfect storm.
Ah man, that is a nice rite of passage though, that has definitely hit all of us, that's
nice.
Yeah, idiot tax.
It's a really simple fix, just downgrade your kernel to something that is older than 5,
so for the moment I've gone back in the AUR, I've gone back to Linux VFIO LTS, which is
just an AUR package, which takes me back to 4.19, I don't necessarily think I need anything
in 5.x for a while, so we'll find out soon enough.
Is this going to impact me on Fedora?
I'm on 30 right now, but I think I'm on kernel 5.1.
Yeah, it could do.
Hmm, uh oh, crap.
There's another bug in kernel 5.2 that you might bump into as well, and there's a regression
in the way file systems are mounted that can cause some file systems to get deadlocked
when they mount.
Oh, that sounds like tons of fun.
Lovely.
No, actually, not tons of fun.
Dang it.
All right, so everybody hold out for kernel 5.4.
On an up note, while I've been playing around with these ultra-mobile PCs, I backed a crowdfunder
for what's called a Topjoy Falcon.
Really?
Tell me about this.
Well, that's an 8-inch netbook style.
These days they're called UMPCs, but we know them as netbooks from a decade ago.
And this one's a little bit bigger than the other ones I've got.
So the keyboard is decent, and it's in a aluminum unibody design, and it has an optical touch
point and a touch screen.
And because of the work I've done on other devices like this, when I had a look at the
hardware enumeration, I was like, aha, this is the track point that I've dealt with in
the GPD Pocket 2, and this is the touch screen and the display device I've dealt with in
the GPD Pocket 1.
So by looking at the other devices I've worked on before, I was able to enable that device
with a bespoke image in a couple of hours.
So images for Ubuntu MATE 1804 and 1904 are on the website, and backers of that crowdfunder
are just receiving their devices at the moment.
So at the point at which new devices are available, there is also a Linux operating system all
pre-configured ready for you to install.
Well done, sir.
Well, well done.
Very nice.
And that relationship with GPD is developing now, and I've got two other devices in the
post on their way to me at the moment.
So engineering samples of upcoming devices that I'm looking forward to be working on.
There seems to be clear interest in Ubuntu MATE on these devices, huh?
Well GPD have kind of, because I put the effort in, we've kind of become the de facto Linux
that they speak to me.
We're an email contact, and I'm connected with their engineers, so I know what's going
on with their device engineering.
But that was because I put the effort in and some of the other community projects, because
my work is just derived from the work of others who did community images for the original
GPD Pocket, and that was really the device that kicked this whole movement off again.
So I'm not really creating anything new, but I am actually sustaining the effort because
some of those other projects have fallen by the wayside.
So it's nice for me because all I want in return for a bit of effort is an engineering
sample of the device.
So I've now got five or six of these things in the house, and they're all quite good fun
to play with.
And that is an important part of the open source ecosystem too, is making sure some
of that stuff continues on.
Well, that's great.
So Wimpy, you joined us a bit in progress.
Thomas, this is Martin Wimpress.
He's an employee at Canonical and he's the lead for Ubuntu Mate.
Wimpy Thomas works at Amazon in their Linux area amongst a long history of things, but
he's currently in the Amazon Linux team.
Pleasure to meet you.
And you.
And I very much enjoyed your talk at Texas Linux Fest.
Thank you very much.
I appreciate it.
So it's great.
It's great.
I just feel like it's been forever.
So Wimpy, it's great to have you here.
Sure is.
Everybody, go listen to the Ubuntu podcast.
Like if you've been listening to the show and you're like, I miss Wimpy and Popey.
Well, actually, Popey hasn't been on the Ubuntu podcast for a couple of weeks, but Laura has
been back.
So go check it out.
It's a good show.
Okay.
Just a couple of other community news items before we wrap up.
Alex, you have some good news and it's regarding one of your projects that we don't talk about
too often, but we probably should, which is Linux Server IO.
I love it.
I use many of your containers here at Jupyter Broadcasting.
We all do.
And the Linux Server IO group has joined Open Collective, which Alex, if my understanding
is correct, and correct me if I'm wrong, it's like Patreon, but for infrastructure projects.
That's a little more open.
Yeah, that's right.
We've been searching for a long time for a sane way to deal with donations, given that
we have team members located across the globe.
We looked at registering as a charity in England and as a charitable organization here in Australia
and all sorts of places.
To be honest, we were getting bogged down in red tape everywhere we turned and Open
Collective allows us to take donations via a Patreon type model and it allows people
who want to donate to give us as much or as little as they want in a recurring monthly
fashion if they would like to, but most importantly for us, it's a very low overhead to manage.
They handle all the taxes and everything else.
So yeah, it just means the project is going to be a lot more sustainable moving forward.
Why Open Collective and I'm asking in like the sort of will other open source infrastructure
projects maybe choose something like this?
What was it about Open Collective versus Patreon or, you know, setting up your own white label
subscriber payment system?
They are open source themselves.
So if you see something as part of their platform that you don't like, you can improve it.
Oh, very good.
Well, we will have a link in the show notes if you'd like to support Linux over IO.
Take a look at some of the stuff they've put together.
It has made automating tasks here at Jupiter broadcasting a breeze, but not only that,
one of the more fun projects I've probably worked on in the last six months.
It's been really enjoyable and it's one of those things where like there's complicated
topics that you need to learn.
Maybe it's containers or whatever it might be.
It's a great way.
It's a great way to learn those things.
It's a nice, safe, easy to replicate environment.
For those that don't know, we make and ship a bunch of community software packaged in
Docker containers.
Yeah.
Now, a couple of months ago, we covered that Antegros was shutting down and that Endeavor
OS was a community project that was launching to sort of fill that gap.
I was kind of skeptical as a diehard Antegros user.
I didn't want to see a project that I loved have something iterative taken and then sort
of be not as good.
However, I gave it a go this last weekend because they had their first release.
I felt I got to give it a fair shot.
The role here is like a sort of minimal, nice, gooey pre-setup on top of Arch and a little
bit more?
Is that what we're aiming for?
But unlike Antegros, it's a slightly modified installer and there's only one desktop, Wes.
There's only one desktop and it's an interesting choice.
It is because it's focused, right?
I gave it a go.
I was very surprised.
I'll talk about that in a moment.
However, I happen to know the editor for Choose Linux and I happen to have some sway there.
So I got a clip from Choose Linux, which will come out, I think, tomorrow, but it's very
soon.
It's chooselinux.show, it's going to be, I think, episode 14.
So chooselinux.show slash 14.
But they're going to do a full review and I got a little clip.
It wasn't long ago, I think it was maybe a month or so ago, Antegos announced that they
were shutting down and Antegos is the easy way to install Arch, essentially, with some
value add as well, to be fair.
And around the time of the announcement, shortly afterwards, a group of people said, hey, we
want to continue it and we're going to call it Endeavor OS.
And I was skeptical.
I didn't know that it was going to actually happen.
But about a week ago, they released their first stable release.
So I thought we'd better check that out, especially as it's got XFCE.
And I must say, I was quite impressed with it.
But Elle, you had some problems, right?
Okay, so I will just be straight, honest and say I have never used Arch before.
So I was going into trying this completely new and I always say it's okay to be new.
So I thought, why not just jump in?
Don't do it in a VM.
Don't do it on a backup machine.
Just kick to it and use it.
Now, I'll tell you what surprises me about that distro hopper segment is we came up with
that as kind of a joke.
I thought initially I might do it on YouTube and then I would just do a screencap with
voiceover and that's how I would do video again.
And then we were kind of joking like, well, what if you guys just hit like a random button
and tried out distros?
And I didn't, you know, like, you know, Joe, right?
I mean, oh, yeah, everybody loves Joe.
That's a fact.
Yeah.
Joe's, Joe's not a big change guy.
He's not a big change guy.
So when, when, when we said to Joe, Hey, what about like, just like hitting a random button
and picking a distro and then having to review it?
I didn't think that was going to work.
Turns out it's been pretty great.
So they have this distro hopper segment where not only are they randomly picking distros
that happens in the show, but they're also doing some intentional reviews, some deep
dives.
It's been really good.
So Drew and Ella are on that show with Joe choose Linux dot show.
I like this distro hopper segment.
It's fun, isn't it?
Yeah, but one of the things I used to love about Linux Luddites, which is the podcast
that Joe created when he first made his foray into Linux podcasting about five years ago,
one of their segments was, I think it was called over a pint and they did the same sort
of thing.
They would pick a distro at random and then the following episode, they would sort of
give their first impressions and I used to love that segment because at the time I was
bootstrapping Ubuntu Marte and I would get all of these little insights about what was
good or bad about all of these other distributions and it was really great research material
that I didn't have to go off and research for myself.
So I'm glad to sort of see the return of that segment.
I really enjoy it.
Well said.
And the thing that I find super fun about it is you've got a bunch of different perspectives.
So Elle comes from a very new to the desktop perspective.
She comes from a server side trying the desktop for the first time.
Drew comes at it from a very curious standpoint.
He's really just curious about everything.
And Joe comes at it from like a well-seasoned, I've been running the desktop for a decade.
Well-seasoned, I like that.
That's a good term.
Yeah, let me tell you how it really is kind of attitude.
And the three of them combined to make a really solid analysis about a distro or a desktop
and they managed to pack it all into like 30 minutes.
It's been really cool.
So anyways, I walked away from Endeavor OS.
My short review, my quick little walk away thing would be they did something new.
Early days, but it's not derivative.
It truly felt like something new.
What have they done that's new exactly?
First of all, it's not just a straight rip off of Anterochros.
It's a slightly modified installer.
Some progress has been made on the installer.
And then it's a fully custom single desktop where they've made some choices about the
applications that are different than the choices the Anterochros folks made.
The desktop environment is based on XFCE.
They've switched out VLC for, oh, I'm blanking on it, but it's sort of an XFCE focused Gstreamer
front end.
Parole.
I think that's it.
Yeah, I think that's it.
So they've made some swaps there and it feels like a unique product.
It doesn't feel like Anterochros next release.
You know what I mean?
Okay, so it's not really the continuation of Anterochros, then it is a different project
with a different agenda.
That's my sense.
They cover it more in Choose Linux, but there will be other desktop options and other install
options that are in the works.
But so that's coming.
Okay, that I was going to say, because that was kind of the thing with Anterochros, right?
I think Anterochros had a different name to start with.
It was Sinarch originally and it was just Cinnamon on Arch and that was the only desktop
option and then it got renamed and then they added all of the different desktop options
to the installer.
History is repeating itself.
It sort of is, but it does make sense.
You know, you do want to focus a bit initially.
You want to limit your problem domain.
Get it right.
Yeah, if it were me, I would advise you pick your desktop environment and you stick to
that one desktop environment and you just execute really well on that one thing.
As soon as you become a Linux Mint where you're looking at two different distribution bases
and four different desktops, you're spreading yourself too thin and you can be good at everything
but not great at anything.
I do think my future need a quick Arch install, just want to try something out on Arch, Go
To Distro will be Endeavor OS.
Is that right?
Okay.
Because that was honestly, that was probably the thing I used Anterochros the most for
as well.
Why Endeavor and not Manjaro, given at the moment that Manjaro's default desktop environment
is also XFCE and they've been doing this a lot longer, so I'm guessing there's probably
more refinement there.
I agree.
I think if you wanted a full desktop that you were going to use long term at this point,
it would probably be Manjaro if you wanted something that was Arch based and didn't want
to use Arch.
Chris likes the shiny mountain.
That's what it is.
I know that.
I'm just kind of being devil's advocate because we've got a new distro on the block.
There's some heritage or a reason for its being, which is the discontinuation of Antergos.
And then there's some real similarities with Manjaro, which is also an Arch derivative.
So what Antergos gave me that Manjaro doesn't really satisfy is damn near vanilla Arch.
And I would say Endeavor OS is even slightly closer.
I could be wrong.
I didn't do a scientific calculation, but by the quick count that I did, six packages
came from their own repo.
And two of them were their GPG key package and things like that to make the repo possible.
So it's very mild modifications from upstream Arch.
It would take you 20 minutes at most to just make it an upstream Arch box.
And that's what I'm looking for is I'm looking for a shortcut to just get a full graphical
desktop environment with a web browser and a media player and some codecs.
A bootstrap.
Yeah.
On top of Arch.
Because if I'm installing Arch these days, it's because I need Arch to do a task.
I'm not necessarily installing it to use for six months to five years.
And if I was, maybe I would consider Manjaro at this point.
But for me, right now, I'm sticking to Fedora and Ubuntu for the desktop.
But that does seem like a good Arch candidate.
And I think I'm going to check back in and maybe every other release or so.
It's looking pretty good, and I got to say, I love Pac-Man.
I know, right?
It's always a dream.
Not just Pac-Man, but the AUR, that sauce is really hard to get rid of once you've tasted
it.
Thankfully, there's this project called Linux over IO that makes software much more available
on just about any distribution I choose.
So I haven't had that problem for a while.
All right.
Well, let's move on now.
We have a few things to get into.
Number one is the housekeeping.
Just a really quick one here.
This is kind of a great study group that's kicking off.
It's like the next generation of the study groups we've been doing for a while.
Meetup.com slash Jupiter Broadcasting for times, dates and information highlights.
It's passing the AWS Cloud Practitioner Exam.
This is a free online study group that we're getting more people at Linux Academy involved
in to give.
It's actually training away for free.
I don't know.
What's the downside here?
Just take advantage of a lot of us do this and learn some things.
How long will you let us do this?
They can't take it away again.
So you're set.
Once it's on the internet, it's out there.
But if you want to ask questions or get information, meetup.com slash Jupiter Broadcasting.
Once you set Elle on a task, man, she is like-
Watch out.
I know.
She's going to get it done.
She's just taking this to the whole next level.
They're going to get even better.
So meetup.com slash Jupiter Broadcasting for that and more.
Speaking of AWS, by the way, Elle has also released a whole bunch of more AWS content
for free as well as additional courses.
We'll have a link to that in the show notes.
That's something that she and I do now.
They should never have given her the key because it's all the best stuff.
I know.
Elle asked me, she's like, what do you think about this, this and that?
I'm like, well, Elle, just use your best and just do whatever you want.
You're going to do it, right?
Just do it.
And it hasn't gone wrong yet.
So check that out.
We have links to all that stuff in the show notes as well as a link to the Friday stream.
May there only be a limited number of Friday streams left?
Could there be a very special Friday stream where the entire crew is in studio?
All of these questions and more will be answered.
I've got to know.
At fridaystream.com.
The latest episode, fridaystream.com slash 10, Young and the Reckless, was our first
stories about the ways we trashed our early vehicles.
Really, that's what it came down to.
You know, I was on a trip when I was listening to the Friday stream live, of course, because
that's the way to do it if you can.
I saw both of my first cars, the first one I wrecked and then the second second car I
used after that.
So it's a great episode.
Did you hear about that?
Did you hear my transmission story?
Oh, man.
I know.
I know.
I know.
That was crazy.
Anyways, the Friday stream is great.
It may it may be a limited product.
I don't know.
Who knows?
People don't know.
If somebody may know, but who could that be?
Who could that be?
Check it out fridaystream.com and there's much more.
We have links in the show notes for everything I've been yammering on about, including all
of the news stories and everything else we're about to talk about at linuxunplug.com slash
311.
All right, Thomas, thank you for waiting through all that.
Appreciate it.
Of course.
So, Thomas, I guess you're not new to the Texas Linux Fest scene or that whole Linux
scene at all since you've been in the biz since about 1993, if I recall, correct?
Correct.
I've presented at Texas Linux Fest numerous times over the years.
My daughters have volunteered with TXLF.
So yeah, I've spent a lot of time with and absolutely love the folks who organize Texas
Linux Fest.
I think one of the things that really resonated about your talk is that you and I have had
a very similar timeline in IT.
You started a bit before I did because when I started, Turbo Linux was no longer a thing.
It was like it was on the decline, but when you started, you became Turbo Linux certified
instructor number 001.
I don't even know if many people listening have even heard of Turbo Linux before.
It's really big in Japan.
And actually, this is one of the few times where I can say that with a perfectly straight
face.
Turbo Linux actually has done very well in APAC.
But yeah, back in the day, Turbo Linux was one of numerous distros out there.
And at the time, I owned a small IT consultancy and we got engaged because I had written a
whole bunch of Red Hat Linux training courses.
And we got engaged by Turbo Linux to develop a Turbo Linux certification course.
This next question is in the context of the overall direction of the jobs market.
I'm curious, how did you go from 14 years at Red Hat to...
Which when I think of Red Hat, especially the time you were at Red Hat, I think very
much of on-premises installations and things like that.
How did you go from that career trajectory for 14 years into Amazon, which to me is...
It seems like a pretty big pivot for somebody in your career trajectory.
You seem like you're very much on-premises, building on-premises data centers, systems
out, supporting those clients, running an independent contracting company, then you
go work for Red Hat.
It sort of extends that career trajectory, then all of a sudden you get to Amazon and
it seems like a bit of a 180 to me.
Well, I don't think it's a 180.
I think that it's a pretty natural progression, honestly.
Because look at the evolution of cloud, right?
For a long time, people were saying it's cloud when it was really just virtualized hosting.
Yeah, you're on-premises set up, but up on somebody else's infrastructure.
Lift and shift, we'll do your mess for less kind of things.
I spent a fair amount of time helping customers do things like that.
But then as cloud native applications and application services started taking off and
as storage changed and as networking sort of evolved and became more complex in cloud
computing environments, at their core, all of the services that you see most of the cloud
providers out there offering are built on Linux.
For me, it wasn't a 180.
It was a fairly natural progression.
It was realizing that everybody seems to be taking a cloud first attitude or strategy.
And a lot of these organizations, a lot of big enterprises are taking a containerized
first in the cloud and not even your mess for less, dump what we're doing out into the
cloud.
But let's really, really architect our applications to take advantage of cloud native services,
which are all based on Linux.
So that's what I decided to chase.
Makes sense to me.
The thing you said in the keynote that, well, you really demonstrated it actually with job
searches.
But essentially the punchline is the Linux sysadmin could be going the way of the Unix
sysadmin.
Not that it's going to be obliterated completely, but it's going to become a niche.
And when you do a job search in a popular area, you're down in the Austin area right
now.
You do a job search down there for a Linux admin, you get X amount of results.
You do a search for cloud architect or cloud engineer and you get almost four or five X,
maybe even more results.
What's at the core of that though is Linux, right?
So it's not that we are left out of this transition.
It's just about maybe adapting to the times.
Yeah, absolutely.
I mean, I think that it's really, really natural, especially if you've been doing this for a
long time to go, well, I know Linux, I know the data center, I know, you know, IP tables
and networking and subnet masking and storage and, you know, I want to do that in the data
center.
It's really easy to get caught up and scared of change.
But when you look at the infrastructure that is running every cloud provider out there,
it's all open source, it's all Linux, it's all things you're already used to.
And so I don't think that folks should look at it as, oh my gosh, this is going to be
hard.
They should look at it as, wow, I've already got a head start on a lot of other folks because
I understand the underlying technologies.
Yeah, that is, I think, a very good way to look at it.
And it's the reality of the situation.
You're well positioned.
I want to just take a tangent for a moment and talk about something that we never talk
about on the show, and that's Amazon Linux.
Correct me where I'm wrong, but my understanding is that it is at least initially based on
a version of RHEL, but that's about the extent of my understanding.
Is that correct?
So we have a lot of commonality with, say, CentOS or Red Hat Enterprise Linux.
But what we did when we were developing, especially Amazon Linux 2, which is the latest version
that's out there, is we wanted to have a distro that was familiar and comfortable to enterprise
users.
So yes, it does share a common heritage with Red Hat Enterprise Linux.
It's similar to CentOS.
But we recompiled the GCC tool chain, put a newer version of glibc, newer version of
the kernel, optimized and tuned it for virtualized environments.
So while it is a similar environment and gives you a similar experience to other RPM-based
distros, it is really purpose-built for cloud computing.
So it's not necessarily pegged to a specific version of CentOS or RHEL?
Nope.
Hmm.
And kind of in this context, what are your thoughts on the universal base image that
Red Hat's working on as part of RHEL 8?
Hmm.
So UBI, I saw a lot of the development that went on around UBI when I was still at Red
Hat.
UBI is interesting.
It is designed for containerized environments.
It is designed to be used as a container.
It's not a full distro.
Could run on top of Amazon Linux 2.
Sure.
Absolutely.
Yeah.
So it's free, freely available, zero cost.
They want everyone to adopt UBI for all of their containerized workloads.
And I think that that is a noble cause.
I think that there are a lot of organizations which have done analysis of container runtimes
and found that smaller is better.
And UBI, being a universal base image, tries to be all things to all people.
And so in the environments where you've got to spin up thousands or tens of thousands
of containers, you're probably going to want to look real hard at what the performance
impact is for having a larger container.
That is not a slam or a dig at all.
There are some cases where UBI is absolutely going to make sense, but there are also going
to be cases where it doesn't.
Yeah.
I think that's a fair observation.
And everything you say, I consider your personal opinion, doesn't reflect Amazon or anything
like that.
So this is all just what Thomas thinks.
And in that kind of vein, when I look at Amazon Linux 2 and how it's used at such a fantastic
scale, and I take that out over the next five to 10 years, and I multiply that across Azure
and Google Cloud, and I think not a single one of those is a Red Hat subscription.
And I wonder if this plays a bit into IBM's acquisition or perhaps why Red Hat may have
been willing to sell to IBM.
Again, your personal opinion, but do you think there is a sort of a market momentum that
may have been on their minds during this acquisition?
Wow.
That's a little difficult to answer because I was inside of the organization during the
acquisition process.
I will say that you can look anywhere in the industry.
You can look at AWS, you can look at Azure, you can look at GCE, you can look at the smaller
ones like Rackspace or any one of the organizations out there.
They're all running a whole lot of unpaid Linux.
They're making a whole lot of unpaid Linux available to their customers.
And their customers are all saying, meh, it's good enough.
If you look at the paradigm shift that we're seeing where folks are saying, meh, I'm going
to do things as cattle, not pets, or even not necessarily as cattle, but as containerization
so that if something breaks, if something didn't work, I throw it away, I spin a new
one up.
I don't care.
I don't care about the underlying operating system.
I don't care about the technology in as much as it has to be distro X or distro Y.
So I think that the writing is on the wall for expensive, big distributions.
And I think that everybody recognizes that open source has become commoditized.
Linux has become commoditized.
And so, yeah, I think that that very well may have been one of the driving forces.
That stream, that well is going dry.
Maybe it's time to cash out.
I don't know.
Great point.
And in your talk, you talk about the distro wars as if they're over.
Is this kind of why?
Is this new reality why when you talk about the distro wars in your keynote, you talk
about them in a past tense and you talk about the damage they did, not that they're doing?
I think that there's still some of that mentality because you've always got the fanboys, right?
And to be clear, I was a fanboy for a long time.
I still fanboy a little bit.
There are some distros that I really love.
I love Fedora.
But I think that, yes, when you had in the early days, you had these distros that were
doing fairly different things around the Linux kernel and you couldn't install the same piece
of software across two different distros without totally recompiling.
That was bad.
That was harmful.
It was exactly the same thing that we saw during the Unix wars that, oh, it wouldn't
work on this sysv versus this bsd init style or, you know, hpux had a different kernel
and you had to recompile stuff versus sunOS.
All that craziness, different administration tools, different interfaces.
I think that the distro wars were very harmful.
I don't think we're seeing that as much today.
I think we're seeing a lot more work towards interoperability between distros with things
like Flatpak and so on that I think it's fantastic.
I think it's wonderful, man.
Use the distro that you like and still be able to access the software that you need
to get your job done.
I mean, no doubt about it, right?
I mean, looking back at since 1993 compared to today, it is so much easier to run the
distro that you want to run.
Oh, yeah.
I mean, you remember as well as I do.
And I talked about it.
I alluded to it in the keynote.
Man, you know, I remember fighting for literally about a week to get my first distro installed.
And then I finally got it installed and it booted up and there was a little flashing
login cursor and I was like, ah, what do I do now?
Thomas, when you brought up when you brought up wind modems, I actually felt physical pain.
I felt physical pain.
Oh, God, it was so bad.
Yeah, it was so bad.
It was so bad.
Well, any kind of advice or any kind of quote unquote mentorship that you would give to
somebody who's looking to get into the Linux market today?
What are some of the fundamentals that they probably need to start thinking about to be
successful in the job market?
Not to put you on the spot, but no, no, no, that's that's actually a really good question.
And I will say what you heard me say before, install Linux on your primary machine and
it's going to be scary and you're going to not know how to do stuff and it's going to
freak you out and you're going to be missing, you know, applications in the whatever your
OS of choice is, Windows or Mac OS or whatever, and it's going to suck for the first couple
of weeks.
But if you immerse yourself, if you force yourself to really use it every single day,
learn about how networking works, learn about what subnetting is, understand why you always
have a 192.168 address when you're at home, like just that sort of basic blocking and
tackling getting it up and running, getting users installed, configuring services.
If you do those things and you can speak intelligently about them when you go to interview, you're
going to have a huge leg up over somebody who's just kind of the paper tiger that, you
know, oh, I read a book or I ran through a, you know, some online cheesy CBT that didn't
really make me go through and perform tasks.
Can I just add to that?
Sure.
Absolutely.
So the first thing I was going to say is I was, I listened to your question and the first
thing I thought was really learn networking.
So I'm glad that you hit that point because I think that's super important and you know,
people often think about, oh, I know how to get around, you know, the Linux file system
and install packages and configure packages, but you really need to be an expert at the
network level and then if you want to be an attractive candidate to employers and you
want to be working in the data center, then it doesn't matter which technology you choose
to learn, but learn how to orchestrate Linux at scale.
So it doesn't matter whether it's Puppet or Chef or Ansible or Juju or Maz or whatever,
learn one of those, understand why it's important and understand how you scale Linux horizontally
and vertically.
And if you're able to nail that and networking, you've got a job for life.
I completely agree.
Great tips.
That is one of those things that even today, I still appreciate having some network fundamentals.
Wes and I were on a call on Monday discussing relays and international data transfer and
the hops between and it really, really helps to have a basic understanding.
We live in a distributed world, right, and it's all connected by networks.
I found an incredible value in learning things like Ansible, as Martin just said, but Docker
as well is another life-changing technology for me.
But having a project, a real-world problem that I can solve at home with these things
is that means I can go into an interview and speak authoritatively on a topic and say,
yes, I've done X, Y and Z on my home lab, here's how I can add value to your business.
And just being able to go in there and say those things with some authority is completely
overlooked.
When people are choosing one solution over another, whether it's a Synology NAS versus
building your own thing, that never factors into the equation and I absolutely think it
should for people.
Yeah.
And yeah, you're dead right.
And the number of times that I have messed around with a personal interest project at
home where I've had to learn, let's say, how Ceph works, for example, or ZFS, and then
have been able to use that knowledge and apply it in the workplace, I can't count the number
of times I've done that.
So you know, back to the don't just run it on your desktop PC, it can be something as
simple as a NUC with disks plugged in via USB 3, you know, it doesn't need to be expensive
or fancy, but create yourself a lab that you can bring up and solve problems on.
It's better if they're problems that persist, you know, you like your home media server
or you know, something like that, and really experiment with things, you know, don't be
afraid of experimenting with a new file system paradigm is something that Alex and I were
talking about in the telegram this week, you know, just experiment and use these things.
My daughter and I just bought five of the new Raspberry Pi 4Bs, and you stack those
bad boys up into one of the little, you know, stackable cases.
And all of a sudden, for, you know, a couple hundred bucks, the cost of one NUC that's
not even, you know, super, super built out, you've got multiple machines, so you can do
things like Docker, you can do things like Kubernetes, you know, you can do lab type
of stuff at home for a heck of a lot cheaper than back in the day when we were buying,
you know, old Optiplexes and stuff like that.
And if you don't want to get into, well, it's not so exotic, but if you don't want to get
into the exotic world of ARM, you know, there's even boards like the Atomic Pi, which are
x86 boards, and they're only like 60 bucks, and they're quite pokey, and you can do a
lot with them.
So there's plenty of ways to access sort of cheap hardware to build out your own modest
lab environments to, you know, experiment on.
Top tip from me, if you want to find a good compendium of different CPUs and motherboards
and stuff like that is serverbuild.net, there's some great information on that website.
And I just built this week a PFsense router around $150 with an i5-3470 in it, four gigs
of RAM and all that kind of stuff.
So you know, it is incredible what you can build for that 150 kind of price point these
days.
The Raspberry Pi thing, the reason why that's such a fun tip is it's way more entertaining,
fun and educational than setting up a bunch of VMs.
VMs are a good skill to have too, but it's so cool to physically set up a couple of Pis
and then connect into them and manipulate them.
I like Wimpy's point too, you know, make something you're actually going to rely on because that's
a key part to a lot of this stuff is you're going to have to support it and you're going
to have to figure out what happens when you upgrade and it goes wrong.
And the family can't watch movies on your Plex server anymore.
It's motivating.
Let me put it that way, Wes.
There's nothing like learning how to do RAID recovery if you pull a disk out of your home
server, you know, your Plex on a Saturday morning, you know, just do that and then learn
how to recover that situation.
That'll focus your attention.
Very true.
Very, very true.
I'll throw one more thing out.
When I'm hiring, when I'm looking at a candidate, I will always do a Google search on their
name.
And so I would say that if you are trying to break into the industry, get on mailing
lists, get on, you know, web boards, get on whatever is appropriate for what your interests
are and contribute.
Even if you're not contributing code, I mean, just answer questions or help folks, you know,
help help new folks.
You may not have the answer, but, you know, hey, did you consider blah, blah, blah, blah.
If I, as a hiring manager, see that and see that you're out there trying to do good and
trying to help the community, that gives you massive brownie points in my eyes.
Yeah.
As a hiring manager, I totally endorse that.
That might be one of the single best tips given out on the show, because that is something
that we use when we are researching people that we're talking about on the show.
And that's the way we measure a certain amount of impact, too.
And I can absolutely see how that would correlate to hiring.
I think that is a really good tip.
So, Thomas, I've got two last questions for you.
Sure.
Number one is a long timer.
What are you doing today on your Linux desktop that just just like you if you if you told
10 year if you just went back in time 10 years and told yourself you could do this, it would
blow your mind.
Oh, that's that's easy.
I mean, it's let's ignore containerization because this is sort of, you know, the next
step.
But the fact that I have a machine at my desk with 32 gigs of memory in it, and I can spin
up virtual machines in, you know, 10 minutes or not even that two minutes and and set up
complex networked environments, then run Kubernetes on top of it to do my container orchestration.
You know, the fact that I can do all of that on one machine and that one machine, by the
way, has three monitors attached to it 10 years ago.
That was science fiction.
You are making me smile so much right now.
A man after my own heart because I am geeking out so hardcore with PCI pass through and
virtualization right now.
I can't believe the performance I'm getting.
I'm sitting at a virtual machine with a keyboard, a mouse and a screen, and it feels like I'm
at bare metal hardware.
It's just oh, yeah.
Virtualization has come so far.
It has a future.
That is such a remarkable that is such a remarkable change.
Great, great answer.
Number two, how would you feel about us doing a once over on your keynote, like doing some
audio filtering and things like that and releasing it somewhere for people to be able to listen
to?
I don't know if it's ever been public, but I'm just thinking after our talk that would
that keynote would be some really good context for this conversation.
I'd love to post it somewhere.
How do you feel about that?
I would be honored.
That would be fantastic.
Thank you so much.
I will figure that out.
I don't know exactly how we'll do that, but we'll do a follow up at some point, and then
I'll let you know whenever we figure it out, because I just came up with that on the spot.
I think it'd be really good, because it was such a great keynote, and you made some great
points about diversity and different types of diversity, including neurological diversity
that really resonated with me, and that's in the keynote as well.
We did talk about that in episode 304, so if you do want some additional context before
we get that whole thing posted, go check out linuxunplug.com slash 304 where we have all
that.
Thomas, we'll have links to your profile and whatnot in our show notes.
Is there anywhere else you want to send people?
AWS.amazon.com.
Got to throw that out there.
Attaboy.
Good man.
You got to do it.
Yeah, it's great.
If you've never heard of AWS.
Yeah.
There's this little company that's doing something to this cloud thing.
I don't know if it's ever going to be big, but...
I don't know that a book company is ever going to succeed at that.
Right.
Yeah.
Let me tell you, the Seattle area could tell you differently.
We have some glass balls downtown that say otherwise, big, really big glass balls downtown.
Man, the first time I saw those, because I flew up for some of my new hire, the first
time I saw that was like, wow.
It looks like something from Star Trek.
I bet you there will be a sci-fi episode at some point that films outside those things.
They're super cool.
If you search the internet right now, you'll find Jeff Bezos thanking the crew for Amazon
Prime Day up on the glass balls.
It's a pretty great picture.
But that's not in the show notes.
That's something for you to do at home.
But what we...
Bezos balls.
We do have in the show notes is a link to Croc, which is looking to surplant my beloved
wormhole.
Did you find this?
Yeah, yeah.
Well, someone found it anyway, and Drew tried it out with me.
He was good enough.
He agreed.
It's like magic wormholes.
Great.
I think Croc has a slight edge.
It's encrypted.
It lets you send multiple files, and it's resumable.
Okay, hang on.
Rewind.
What's this thing called?
Because I love wormholes.
If there's something better out there, I need to know about this.
Right.
It's called Croc.
C-R-O-C.
It's on GitHub.
We'll have a link in the show notes.
And it's all the things we love about wormhole.
It will do a proxy connection, which you can self-host or that project offers one.
It brings in multiple files and resuming, though, which magic wormhole currently does
not.
Really quick recap.
For those of you that don't know, these are tools that make it crazy simple to transfer
all kinds of large or small files between machines anywhere in the world.
They will traverse NAT.
They will manage your port 40, aka they don't require it.
It's a really, really handy way to, say, exchange large working files between groups and not
have to rely on like a cloud service.
Because once the transfer is set up, you're sending directly between machines.
And the thing that Croc's bringing to the party is Windows and Mac support, which is
nice, encryption, multiple files, and resuming.
Yeah.
And it's just a go binary, too.
So you can just download the tar file.
Oh, quit it.
It's super easy to package up or run wherever you want.
I really love magic wormhole.
So this does hurt.
Because one of the cool things that it does, and I have not tried Croc, but one of the
things magic wormhole does is you say wormhole send, and then you give it the file name.
And then it generates a human readable code that's in three segments.
Oh, it is?
Yep.
That's really nice.
And this magic wormhole, in fairness here, has one of the inspirations for the project.
So there's a lot of tools here.
And I don't know that it's really necessarily better than what you're doing, unless you
need one of the features.
Resuming's nice.
Because we're moving like 30 gigs.
I will certainly take a look at this.
What I would say is wormhole can transfer multiple files as well.
You just point wormhole at a directory, and then everything in that directory gets transferred.
Oh, nice.
Fair enough.
Yes, that is true.
Oh, look at this.
They have a container ready for it to go.
I also like that the relay's easy to run.
You don't have to run anything separately.
It's another flag to the binary that you have.
So we could put that relay on our own system.
Very easily.
And there's a container for it, yeah.
Yeah.
Dang it.
This is happening, isn't it?
I can already feel this has happened.
Like you and Jeroob decided now it's just time for old man Chris to get on board.
Dang it.
That's cool.
I love magic wormhole.
I'll still use it with Wimpy.
Yeah, we're not going to uninstall it.
No, what's nice about magic wormhole is it's in most repositories.
You just didn't know about it.
That's nice, yes.
I love those kinds of apps.
They've been in the repo the entire time.
And it's in pip too.
So if you already have Python, you're good to go.
Yeah, of course.
Of course.
All right.
Well, we'll have links to that and more in the show notes.
LinuxUnplugged.com.
Why don't you join us live next week?
Did you know we do this on a Tuesday?
Oh, it's way more fun live.
It is.
Well, there's like more show.
Extra show.
Yeah.
There's a post-show and post-show and the recording, but that's not.
That's just a little teaser.
Spoiler alert.
That's not the whole thing.
It's not.
It's not the whole thing.
We never really said that, but it's true.
There's only one way to really find out, though.
jblive.tv.
We have it converted to your local time at jupiterbroadcasting.com slash calendar, as
well as many other fine shows posted over there.
Go check out the links to the guests and as well as the hosts at LinuxUnplugged.com.
Thanks so much for joining us.
We'll see you back here next Tuesday.
Thomas, thank you so much for coming on the show, man.
Absolutely my pleasure.
Thank you for having me.
That was a lot of fun.
And thank you for doing the recording too.
So before you stop recording or before you go, we just have one duty left and that is
we must select a title for this episode.
It is the hardest aspect of the show.
So if you go over to jbtitles.com, that's why we make you help us.
Yeah.
If you go to jbtitles.com, we have a vote.
Oh, and then we've only gotten seven suggestions.
Chat room.
Several of them are from me.
Oh my goodness.
So we have only a few choices to pick from.
Yeah.
Go help us out.
I don't think I like any of these.
So we may have to come up with our own.
These I expect more.
32 hours of outrage.
That is good.
That is good.
I got to admit that is really funny.
I actually would click that too.
It's natural.
You can't resist.
Yeah, you can't.
It's instinct.
Can we come up with anything else?
Wimpy, you haven't been here for a while.
I feel like it'd be perfect for you to just have a creative title idea.
And Brent, where's your game today?
I've just done it.
What was it?
I've got one in there.
Yeah, Brent.
We see it.
I mean, it's not like we don't see it, Brent.
I know.
I know.
I never said it was good.
Podcasting in my pants with me.
I don't think that's going to be it.
I mean, the exclamation point really makes it.
I do appreciate the visual, but imagine all of the audience that has to have that visual,
Wimpy.
That's just not something we want to do to them.
Well, I think you've missed on your market research there.
