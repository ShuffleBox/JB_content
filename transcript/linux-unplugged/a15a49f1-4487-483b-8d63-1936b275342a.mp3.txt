This is Linux Unplugged episode 37 for April 22nd, 2014.
Hi everyone, and welcome to Linux Unplugged, your weekly Linux talk show.
Brain knows client-side decorations are a bad idea, but it's hearts can't help but love them.
My name is Chris.
My name is Matt.
Hey Matt, how are you doing?
Doing pretty good.
Good.
Doing pretty good.
Good.
I got a little crud, so I think I might have gotten you sick on Sunday during last.
Oh boy.
Yeah, I'm crossing fingers.
Double down on like any rituals you have.
Do you have like rituals that you follow when you think you're getting sick?
Theraflu.
Yeah.
That's number one thing, because at the end of the day, everything else is a crap shoot.
Theraflu makes me don't care.
And fluid.
Get your fluid.
Well, so this week, I want to talk to you a little bit about a few topics.
We've got some 14.04 review follow-up I want to cover, and then we've got a discussion
around password managers.
We got the vote out in the audience, and we heard back from folks on what they use and
what they like, and we're going to talk about password managers.
And then, towards the end of the show, I want to talk a little bit about this client-side
decoration brouhaha.
Now, it's not really a big deal right now, but you've probably noticed starting about
Gnome 3.10, some Gnome applications have a brand new title bar that looks very, very
fancy.
And it is completely breaking some other desktops the way they look, because sometimes you get
the double title bar effect.
We talked about this in the Linux action show a little bit in the news segment when Cinnamon
came out.
And the two camps essentially are the GTK folks, and now the QT folks are coming out,
and the KWin developers are coming out and saying, hey, this maybe isn't such a good
idea.
I want to talk about what client-side decorations are, what they give us, and what the challenges
are.
And then I want to get the Mumble Rooms take on what they prefer, and just kind of have
a discussion about that, because that seems to be something that's been brewing in the
background over the last few weeks.
And with Gnome 3.12 out now, they've pushed that even farther forward.
So it's kind of an interesting time.
There's a lot that's changing in that area.
But before we get to all of that, it is tradition here on the Linux Unplugged show to talk a
little bit about what you had to say from previous weeks.
We have a continuing theme that runs through several episode threads.
I think we're covering three or four topics that is sort of winding three or four shows
together.
Plus we're going to do some follow-up from the Linux action show.
So the first one I wanted to kind of talk about was sort of a make good.
I implied on the Linux action show on Sunday that Ubuntu 1 was totally dead, and the reality
is that the file syncing service is shutting down, and the log-in authentication service
is sticking around.
And I knew that during the show, but I was trying to make the point that the messaging
is out there now that Ubuntu 1 is shutting down.
So when you're being asked to create an Ubuntu 1 account, if you've sort of loosely followed
the news, it's confusing a little bit.
You know, you might think, oh, Ubuntu 1's down.
I knew it wasn't down, but I was making a point.
But yes, I did want to make it clear that Ubuntu 1, the authentication service, is not
going away.
So thank you very much to James for writing that in.
You'll still see Ubuntu 1 kicked around, at least for a little while.
So Damon wrote in on the topic of switching to Linux, which is a thread we've been following
for quite a while.
He says, hi, I love the show.
I found your discussion about what will make a computer user switch to Linux interesting.
I have two anecdotes on the subject.
First, my niece will be going to college later this year, and I wanted to give her one of
my old laptops to use so that she wouldn't spend money that she didn't have on buying
a Mac.
I gave her a choice of Windows Vista, which came with a laptop, or Linux.
She had no idea what Linux was, but she was emphatic that she did not want Windows.
Hmm, that's interesting.
The next step was for her to install.
Being rooted in a Debian-based distribution, I started sending her screenshots from Distro
Watch so that she could choose to see what she wanted.
Ultimately, imagine Linux 1.
Imagine Linux is a Debian-based XFCE distribution with comp as enabled.
Being that she is a graphic artist, I installed applications that suit that niche, as well
as applications for general use.
Four months later, I'm still waiting to hear from her that she has had a problem with the
laptop.
Now, my second switcher story is quite simple.
A woman that works in the same building as me found out that I am well-versed in Linux,
and she asked me to help her get Wi-Fi working.
It was simply a matter of showing her where the switch was, but in talking to her, she
was encouraged to install OpenSUSE 12.1 by a friend.
Because she did not want to run an unsupported OS, which was Windows XP now, all she does
is surf the web, check email, and this is perfect for her.
Here are two stories of people that have switched and are happy.
As an aside, my niece showed her friend's comp is and what it can do, so now I have
to install Linux on his laptop, too.
Take care, Damon.
Thomas is still switching users after all these years.
That's great.
It's all about the cube.
You've got to have the cube, Matt.
All right, so this is Giant Daff.
He writes in.
He says, Heartbleed, this is what I see.
A little follow-up on the Heartbleed discussion we've been having here.
He says, so happy Easter to Matt and Chris.
So as we all know, this Heartbleed bug was detrimental to security, but it's also putting
a slightly darker shade on the opinions of the consumer market.
Now, I'm not and never will claim to be an expert in economics or politics.
However, I can't help shake the notion that this issue will set back the opinion of Linux.
Microsoft and Apple are both extremely well funded, and this holds political ties to help
form negative opinion around open source.
They have been for years, and I have been ever so fortunate to have a very opinionated
family.
Cough, cough.
My ears even bleed instead.
I would like to mention one thing, however.
Companies can claim to have a little to no faulty code, but how can you claim such things
without proper review among peers, a.k.a. a formal review of code?
I claim that if proprietary code was submitted to a review board sworn not to expose the
code itself, that you would see extremely different numbers as claimed before.
With that, open source code is more likely to out best proprietary coding any time.
I'd like to hear your opinions on the matter of what you hear among less technical peers
and what you would suggest to helping shift opinions.
Matt, do you think the heart bleed vulnerability has caused a negative opinion about Linux
and open source?
I think it depends on the situation and who you're asking.
If you're talking to the average person and you're explaining what's happening, they are
not able to draw a line between the licensing of the different code and the software affected.
They're only looking at the overall result.
So they look at a service or a product and say, oh, well, that was affected.
That's potentially scary.
I don't think the average person is going to look at the actual licensing differences.
That being said, I think if you ask a more advanced user, maybe like a Windows fan or
a Mac fan, someone that's really heavily involved in technology, yeah, I think that their
views are already pretty much colored as it is.
I don't think it really swaps anyone out.
I don't think it changes any minds.
Yeah, and I have seen a surprising amount of mainstream coverage about heart bleed.
It's always been pretty bad, but it was on the CBS Morning News recently.
I never heard them say anything about Linux specifically.
They did mention Android.
A lot of times we talk about how Linux doesn't get full recognition.
It's Chrome OS, not Linux.
It's Android, not Linux, right?
But in this case, it sort of has played to Linux's benefit because people are talking
about Android having vulnerabilities and Cisco Gear having vulnerabilities.
They're not necessarily saying Linux.
I think you could probably draw a closer comparison saying that open source has taken maybe a
bit more of a public image beating.
But even then, I don't think it's that dramatic.
I think once the dust settles, people realize that when you need peer-reviewed code, open
source is literally your only option.
Absolutely.
It's just a matter of logic.
I think those people that understand it, understand the differences between the licensing and
the types of code that's out there, they should understand that unless they have a vested
interest in seeing something happen to open source as a concept.
Well, kind of on this subject today, officially LibreSSL was announced.
LibreSSL is a free version of SSL TLS that is a protocol that's been forked from open SSL.
I think it's being worked on by the OpenBSD folks.
Right now it's only available for OpenBSD, but I'm sure as they get down the line here,
that will become available to other platforms.
What's kind of funny, Matt, is I'm this guy.
I'm looking at this website.
I'm like, wait a minute.
Is the Lib SSL site using Comic Sans?
Out of all choices, why are they using Comic Sans?
I'm getting all uppity about it, right?
At the very, very, very bottom of the website, way, way, way down, it says,
This page is scientifically designed to annoy web hipsters.
Donate now to stop the Comic Sans and blink tags.
Oh, that's brilliant.
What a great fundraising idea.
That is a seriously great idea for raising money, because I feel compelled now to donate
just to get the damn Comic Sans off their website.
But the open source community seems to be responding pretty positively to Libre SSL.
A lot of people consider the OpenBSD camp to be some of the best folks in the business out there to do this.
And they seem to be taking a pretty rational approach.
So something we'll keep an eye on.
I don't know if it comes to Linux.
We'll update you guys right now.
It's just for you OpenBSD heads, the place to be.
Well, an additional insight on this, too, is you look at Open Office versus Libre Office.
Libre Office is great.
Open Office is kind of, you know, it's kind of yesterday's news.
Maybe we'll see the same thing here.
Yeah, yeah.
No rational argument to that.
I could see a transition happening.
I could see that.
Yeah, I could see what you're saying.
All right.
Well, I had a quick note I wanted to get to.
We're making good time on the feedback this week.
Ramy wrote in to the subreddit.
I love getting these posts.
I have a 16 core, 48 gigabyte of RAM VM.
Check this out.
He says I have a new router which supports OpenWRT.
It's a clone of the TP-Link 730N or 703N.
It has a small USB powered router with a one gigabit port and 802.11n.
But he was trying to build a specific version of OpenWRT for this device.
And on his own laptop, he says it takes about 4.5 hours to build the OpenWRT image.
So he spawned himself up a DigitalOcean instance, and it only took 45 minutes.
And his total cost was $1 for the entire process.
And this is something I wanted to thank him for writing in,
because the other day we were testing some auto publishing scripts.
And when it came time to try out the FTP angle from multiple locations,
the first thought I had was, you know what I could do?
I could just take the DigitalOcean droplet that I have,
spin it up in the San Francisco location,
and then we'll have a real world test case to bang on this.
And it makes it so quick and simple.
And because of DigitalOcean's flexible pricing, you can do hourly pricing,
it makes testing these kinds of things a slam dunk.
So let me tell you about DigitalOcean. They're one of our sponsors.
DigitalOcean is a simple cloud hosting provider dedicated to offering
the most intuitive and easy way to spin up a cloud server.
Users can get a cloud server created in about 55 seconds.
Power users, 47, 43, and 40 seconds. I'm waiting for a screenshot on the 40 seconds.
And pricing plans start at only $5 per month for 512 megabytes of RAM.
A 20 gigabyte SSD, one CPU, and a terabyte of transfer.
DigitalOcean has data center locations in New York, San Francisco, Singapore, and Amsterdam.
Their interface is simple.
Their control panel could not be more intuitive.
And power users can replicate that control panel on a much larger scale
with their straightforward API.
And they've just announced that they're rocking Ubuntu 14.04 droplets.
So if you want to deploy the latest LTS release on a DigitalOcean droplet,
they're ready to go. They've got images that are set.
And this is what I love. These guys are all in.
On the latest releases, on Docker, all this kind of stuff.
And DigitalOcean is sort of the accumulation of all of the things we've talked about for so long.
They saw trends in the industry.
SSDs, they got tier one bandwidth partners, they got amazing hardware,
and they're utilizing KVM to offer a solution that, on its face,
sort of almost seems obvious in retrospective,
but the implementation of how they did it is really the differentiator.
Their control panel is so great.
They have managed to wrap a simple-to-use interface
around a process that I used to be able to charge clients hundreds of dollars an hour for.
It has completely transformed the amount of power that is available to just anyone.
And you can get started for just $5 a month.
And if you use our special promo code, UnpluggedApril,
UnpluggedApril will get you a $10 credit.
And you can try out a DigitalOcean droplet for two months for absolutely free,
or get the higher-end rig and just use it for free when you use UnpluggedApril.
It's really impressive to see all of these awesome technologies that Linux has enabled
and come together in a package that is so well done, so intuitive.
I just really love it. So go over to DigitalOcean.com,
spin up yourself a droplet and see what you can do.
There's all kinds of great uses.
You can check out our Jupiter Colony Google Plus community for some ideas
of what folks are doing with their DigitalOcean droplets.
DigitalOcean.com, UnpluggedApril will get you that $10 credit.
And a really big thank you to DigitalOcean for sponsoring Linux Unplugged
and for getting Ubuntu 14.04 support so soon.
I think that's going to be a great, great cloud operating system.
Now, I wanted to follow up on a topic that we raised on the Linux Action Show a couple of weeks ago
when we asked what folks use as their password manager.
Because it's really gotten to the point now, after Heartbleed,
it's no longer something you should do, it's something you have to do.
I don't care if you're a Windows user or a Linux user,
you need to have a different password for every online service you use.
So we asked the audience, hey, what do you use?
And we put it to a vote, and the results are in, Matt.
38% of folks who voted, and we got 784 votes,
38% of folks who voted use LastPass.
Close, probably not too surprising.
KeyPass came in at 37%.
So it's pretty much split between LastPass and KeyPass.
Then the third choice is built-in Chrome and Firefox,
and then goes to KWallet and a few others.
The built-in browser ones are just, I mean, I'd use KWallet over that.
Those are horrible.
So I wanted to bring it to the Mumble Room,
because I'm sort of a no apologies LastPass fan.
I used LastPass for years.
Does anybody in here want to take the side of KeyPass
and try to convince me on why I should switch to KeyPass from LastPass?
Variety garbage.
All right.
Here's another thing about KeyPass versus LastPass.
KeyPass stores everything locally.
LastPass keeps it on somebody else's server you have no idea where it is.
Granted, it's encrypted,
but who's going to stop somebody from breaking that encryption, right?
Well, it's not just the encryption itself.
It's not just the encryption.
It's the fact that you're reliant on a third party.
You could, at any time, LastPass could shut down for whatever reason,
and you've lost that service.
You may well actually find you don't even know your passwords
for half a dozen or more sites.
I started using LastPass when a site, a prominent site, got hacked,
and my email address was published on Pastebin,
and I thought, oh yeah, I better change that.
So I switched to LastPass, and I've not looked back since.
I pay them, and I use the mobile version, and I love it to bits,
but I can see an argument for not using them.
LastPass also has the Pocket version where you can store everything locally if you want to.
Then you can sync it every once in a while back and forth to the Pocket to the cloud.
So if you want to have the local storage, you can totally do that.
The difference is, I like KeyPass, but for me,
the convenience of having it always synced to my phone and my computers and all that stuff.
That seems critical to me. That seems absolutely critical now.
Well, there is a way to get that synced across multiple devices.
It's not a practical way.
If you look at the KeyPass, you could do some kind of syncing service, like BT sync or something,
but it would take so much effort that you can't also guarantee that it's going to work.
You could even use SyncMe Wireless to transfer over your KeyPass stuff,
but it still requires the phone to sync it, not the computer.
It's just not a practical way to do it at all.
I disagree. The reason I disagree is that my music library is completely synced between my devices,
my computer, my tablet, and my phone completely with BT sync.
Well, if your whole point is to be open and stuff, well, BT sync is not a solution either.
Well, no. My point is not to be open. My point is to make it so that I'm not having to rely on a third party.
Man, who needs all that fancy software? All you need is just sticky notes. Come on, people.
Well, KeyPass is cool to use. If you can do the syncing stuff, that's the main reason I don't use KeyPass.
It's just the convenience of the syncing with LastPass, but also the newest version of LastPass introduced an awesome feature
where you used to have to do these add notifications to get your easily log into an app, but now you just open the app.
You have to start a service in the phone, but you open the app and then click the username and password section,
and you can automatically fill it through the LastPass app, which is only available, I think, on Jellybean and KitKat, but it's still awesome.
I've only just been using LastPass the last month and I just discovered it, so it's actually not too big.
To me, LastPass seems like maybe the obvious choice then for pretty much average users, but also people who don't want to have to worry about the sync component.
The thing I like about LastPass is they have a good record of communicating very clearly about matters.
If they were to shut down, their history would seem to indicate to me that they're probably going to give you a heads up.
I have that sort of comfort. It's not a guarantee, but I sort of have a comfort in that.
The other thing that strikes me about LastPass is, like now on Android, you can have LastPass auto-fill app passwords,
or on websites that you're just browsing in the regular Chrome web browser, LastPass can fill that stuff,
and it can be passwords you set up on the desktop. The nice thing is that that syncing is just totally handled for you, and it's instantaneous.
The encryption's done on the client side, so the thing that they're syncing is just the encrypted password database.
They're not syncing the individual passwords. I've used it for years now, and it's worked really well for me,
but the one thing that always does sort of ring in the back of my head is it's not open source.
Without that syncing component, I come down to the practical nature of, if I'm going to be trusting a service to store all of my passwords,
it has to be almost omnipresent, because I just use all kinds of different computers and devices all the time.
That makes sense.
When I worked at a corporate about ten years ago, and there was a guy in the office that we all used to laugh at,
and he had folded up three sheets of paper with all his passwords written on that he would keep in his breast pocket in his shirt.
We all laughed at him, but Schneier has written years ago, back in 2005,
that someone urged people to write down their passwords, and he says this is good advice, and he's been saying it for years.
It's going to be said that sometimes you don't need to go the technological route.
Sometimes it is actually more sensible to just have a little notepad and maybe be a bit cryptic about which passwords you write on which page and which goes with which,
but you don't have to have a cloud-syncing third-party system with triple DES or some magical encryption.
You could just write it down.
There's no way some random person on the internet is going to find out my password by it being written down in my pocket.
Right, yeah, that's very true.
You don't have to show anybody your password.
But writing a thousand passwords in my notepad would not be very easy to carry in my back pocket.
You don't write them all at once.
I wanted to give them one at a time.
I'm acting like a Windows user on this issue, so I wanted to hear his thoughts on that. Go ahead, VRMax.
Yeah, just in short, your attitude about I just wanted to work sounds a lot like what Windows users say when I try to move them over to something like Linux.
Well, I think it's a little bit different because it's sort of like the keys to the business, right?
It's one of these things where if you really go all in on these crazy passwords that are really pretty much close to impossible to remember,
then you depend on something like LastPass literally to work, to do your job, to do shopping, to do everything.
And the idea that I have some peace of mind knowing that if I sign up for a new service on my computer,
and then I go out on the road, in fact, this happened with a streaming TV service.
I go out on the road and I decided, you know what, I want to try doing this in the app on my mobile device.
It's really nice to know that even though I never initiated a manual sync because I didn't think about it,
LastPass has already taken care of that for me, and I can open up the LastPass database on my Nexus 5,
and Bob's your uncle, I've got my password database there.
I can copy it, I can paste it, and then it cleans up the clipboard for me so that way that's not lingering around in the clipboard.
It's pretty nice.
The thing is I've always wanted to try KeyPass, but how do you switch to something like a different password manager when you're all in like that?
There's hundreds of sites.
It just doesn't seem like something you switch from.
That's why I want to give this some serious discussion because once you pick,
you kind of need to stick with it for a long time unless you want to spend a weekend resetting up a bunch of things.
Or if you're a masochist.
Yeah, exactly.
Doesn't KeyPass have some kind of auto migration tool?
It does from Google Chrome passwords and whatnot.
The chat room says you can export from LastPass into KeyPass.
Thank you. That would make it easier to test.
It certainly takes a lot of work out of it.
Yeah, that's really cool.
And the thing is even with that there, I don't know.
Right now, LastPass, another thing I like about it is it just sort of comes with me because I'm back to using Chrome,
and Chrome just Google syncs all of my plug-ins, and so it just comes right back.
Every time I set up and log into Chrome on a new computer, LastPass is there.
I don't have to install a separate application or anything like that.
So there's this barrier to entry to get up and running with LastPass.
Pretty much it just requires I log into Chrome.
You don't have to set up multiple programs.
You have to set up your sync program, too, to make it pull all the passwords in.
All right. Heaven's revenge. Go ahead.
Will you add an alternative password manager?
It's not. Hello.
I have a solution which doesn't actually use a database.
It's a solution in which generates the passwords on demand, on the fly,
whichever cryptographic algorithm you actually desire and want most.
So this way, you have a plausible deniability that you do not have a password for.
Let's say this bad website here, if anyone gets access to your database, which you do store,
and KPass is a trust KPass system.
I trust no one. I generate my passwords on the fly,
and you can choose whichever way you want to generate them yourself,
which are it doesn't actually require a database to keep track of any of your passwords.
So that is an alternate. You can use any sort of.
It's generally a hash algorithm, but you can also use HMACL hash algorithms as well.
The one I use because I've used it quite often is a password maker application.
It's got Android, iOS apps, has a Chrome and Firefox extension,
and has a web page that you can actually just try it out, and you do not actually have to install anything.
So you can see how the result looks.
So you generate it when you need it?
Yes, you generate it on the fly when you need it, and it doesn't even.
It can save your master password thing in which generates your password based on the domain name,
or it can be a lot more than the domain name.
You can add many different features to what you want your generated password to be.
I remember a study done that if you do more than the domain name you're good,
but if you use just the domain name, I can't remember how it worked,
but there were some questions raised if it was totally safe.
Oh well, the reason why it's safe is that you can, or at least it's safe in my opinion,
is that you can use algorithms which cannot be reversed or have been almost impossible to reverse beyond two iterations.
I use RIPEMD-160. That's almost impossible to go backwards very far.
It's kind of like as if they integrated Keckik or SHA-3 as the hash algorithm.
It's almost impossible to go backwards based on the domain name plus your password or your bump level
depending on whether you want to change your password for that site and domain or not.
So here's what I'm grokking from our password manager conversation.
There's a lot of options, and people really don't have any excuse not to just use something.
Just use something. I don't care what it is. Just use it. Dang it.
There's so many leaks now. There was Lissy, who makes a lot of external hard drives,
just recently announced that for the last two years they were under monitoring,
and now they've had credit card and user information stolen from the past two years of their customers.
The craft store that my wife shops at when she goes to do scrapbooking stuff
announced that they've had a credit card breach similar to the target credit card breach.
It's nonstop. So go out there and get yourself a password manager.
Do us a solid. Do it for your buddies at Linux Unplugged.
No longer use the word password for your password. Always good advice.
Right. All right. Very good, Matt. That's great advice.
And it's probably a spot we should stop and thank Ting, another sponsor of Linux Unplugged.
What is Ting? Ting is mobile that makes sense.
My mobile service provider and Matt's mobile service provider.
And what's so outrageously awesome about Ting is you only pay for what you use,
and there is no contract and no early termination fees.
It's really awesome. You can get started by going to linux.ting.com to check them out.
linux.ting.com will take $25 off your first device.
If you've already got a device you want to bring with you, they've got a whole BYOD page,
then go over there and just get a $25 credit for your first month or however long it'll last you.
It might last you into your second month like it did me.
I've talked a lot about Ting over the year.
What I still am impressed by is what an awesome company they are.
Today they posted that they gave this guy, his name is Joe, $10,000
because he has just been an awesome advocate for Ting.
Ting has this Ting ground crew program where you can actually become a Ting advocate yourself,
much like I am, and you can get rewards.
I don't know if I'll be able to find the spot in the video here, but let me see if I can.
How would you rate your experience with Ting and what would you say?
Hold on, there it is.
He's just sitting there.
This is great.
They're going to post the video on their YouTube channel in full.
They have this guy in at Ting, and he just thinks that,
oh, I'm here today because I'm doing a job interview.
Dude's hanging out thinking he's going to get a job interview.
They're asking him a whole bunch of questions, and then next thing you know,
they walk in and they're like, hey, you just won $10,000.
If you're watching the video version, his reaction is so awesome.
Do you have any questions, Andrew?
I don't think that clap worked.
I didn't catch that clap, probably.
Sorry, can I see your clap?
Really lovely.
Perfect.
Hey, Joe.
I gave it random, but all of a sudden Ting wanted to say thank you
and give you this check for $10,000 just for being awesome.
Are you serious?
Absolutely.
That is amazing.
That's like publisher's clearance.
Yeah, what's funny is on their Instagram feed later on,
they posted a video of them cleaning up from the confetti.
So they give Joe his $10,000 for being an awesome Ting ground crew,
and he just loves it.
And they did that on a Google Hangout, too.
So if you were watching live, you got to see that happen live.
So Ting just does a lot of awesome stuff, and their ground crew is part of it.
They're just a great company.
They're just a bunch of great people over there,
and they always are posting really good stuff over on their blog.
So go over to linux.ting.com and then click on the Ting blog
to see what I've been talking about.
And remember, every Ting phone is just $6 a month flat rate,
and then just your usage and taxes on top of that.
Every Ting plan includes tethering, hot spots.
You get your picture messaging, your text messaging,
all the stuff you'd expect, plus their awesome dashboard,
which makes it crazy easy to manage and see where you're at
so you have full control over your cell service.
This is a great place to go get a phone.
Linux.ting.com.
And a big thank you to Ting for sponsoring Linux Unplugged.
Man, that guy, I mean, how cool is that?
Can you imagine that?
Yeah, you're getting $10,000.
It's like, hey, you know what, you're awesome.
We appreciate you getting the word out about this great service,
and hey, we're just going to show you a little bit of a thank you.
That's amazing.
All right, so I want to talk a little bit about this client-side diva.
I mean, client-side decorations thing that's going on right now.
So I'm not totally, totally like Mr. Expert on this,
but there's two camps.
Essentially, there's the camps that think client-side decorations on Windows,
the things you'll see like on the new gedit and the new files on GNOME,
all of these with the new border where they've integrated the close
and minimize buttons into the title bar, these are client-side decorations.
Now, the thing is, these only really work very well on GNOME.
You're on any other desktop, and they kind of look atrocious.
Sometimes you have double title bars.
The title bars are offset.
It looks like amateur hour.
So Martin took to his blog, Kaywin Developer.
He took to his blog with an open letter that he wrote on his blog.
He posted it to a mailing list, and he sent it to the developers.
He said, I decided to CC this mailing list and publish this letter
as an open letter on my blog.
CSD, which is client-side decorations, is a topic that is very important
for every user and nothing that should be discussed in a small group.
This is his biggest problem he has with it.
He says, consistent window decorations.
The fact, here is my greatest doubt, he goes on to say.
The current situation is that all windows have the same window decoration.
For CSD to work, applications have to be changed to support them.
This will render the changed applications using CSD,
while other applications are decorated by the window manager.
I think it is impossible to have the same behavior
with both client-side decorations and window manager decorations.
So, for example, an application freezes up, and you click the X button.
With server-side decorations, the window manager notices
that that application never closed and said,
hey, would you like me to force quit?
With client-side decorations, the title bar is part of the process,
part of the application process.
When the application hangs, the close button hangs,
and you cannot just quickly and easily close it anymore.
There are other minor things that would bug users.
He says, my biggest concern is that we will end up with applications
shipping their own style and doing their own kind of decorations.
We will end up in a situation that has one window that has buttons on the left,
one window that has buttons on the right,
one with order, close, maximize, minimize,
the other in close, minimize, maximize, et cetera.
He says, just look at Microsoft Windows desktop
to see what proprietary applications tend to do
when they get a chance to influence their own decorations.
And that is a very good point.
It is, and I think, actually, first I was going to think I was going to scoff at the idea.
And that's kind of like, you know, the more I hear it,
the more it's like, you know, actually, it's a valid point.
Yeah, and you see this in Chromium today.
Chromium already has its own buttons.
Like right now on my Ubuntu 14.04 desktop, I'm still running.
You know, the buttons are on the wrong side of the window
because they're using their own decorator.
They're not taking advantage of the operating system's decorator.
And I've heard, too, the client-side decorations were meant to improve support for Wayland
in the sense that it takes less code from the backend and moves that code into GTK,
and that's where you can manage it, and that's a little easier.
However, Martin disagrees that that's really an important feature or a necessary feature.
Where we're at now, and I want to bring in the Mumble Room on this,
because where we're at is we have this mismatch right now.
We're in this transitionary phase.
It's been starting with GNOME 3.10.
It's escalated with GNOME 3.12.
It means that these GTK applications that are using client-side decorations
will look funky on all GNOME desktops.
So Mumble Room, question for you.
Does anybody in here want to be an advocate for client-side decorations?
Anybody think they're a great idea or like them?
No.
I think at least in this state.
I will take that position then, because I kind of do like them.
From an end-user perspective, I think they look kind of nice.
I like the functionality, especially with a theme that has the Numix theme,
where it takes very little room.
I feel like it's very effective.
I get my close buttons, I get a title bar all in one.
It takes up less space.
I think they're kind of nice looking.
Performance is better when you resize the window.
It looks better.
You don't necessarily have the tearing between the title bar and the application
that looks nice.
I think it looks a little more elegant.
So these are the things that client-side decorations bring us.
I kind of have to agree with Chris on some of that.
I believe that having the client-side decorations
makes the application seem a lot more cohesive.
It allows that extra functionality in the title bar,
like you have with the GNOME Shell application,
or GNOME 3 applications, I should say.
Or even look at Steam, for example.
Right.
You have to look at that.
You have to look at the current state of client-side decorations,
at least what we saw in the Cinnamon 2.2 look.
A, they're not very good.
They still have the minimize button thing.
They still look very large.
They still look very, very ugly themselves,
with or without the window manager decorations.
So they may be a good idea in the future,
when they're absolutely implemented.
But at this point, they just get in the way
of window manager decorations.
And secondly, they already don't look as good.
Yes, they add added functionality,
but the client-side decorations themselves
I don't think look as good or as functional as they should be.
I have to agree with that.
I can't stand a way to GNOME 3 GTKC looks.
I cannot stand it like that.
It's too blocky.
I can't stand that look.
I generally like GNOME and prefer the technical superiority
of server-side decorations.
There is one thing I can do, is blame Popeye.
Because this is all because of Canonical and Unity
ripping out the menu, the file menu,
and putting it as a global menu,
leaving the top bar there just by itself.
There may be some menus still there.
I've never really used the window manager at all,
to be honest, since 9.7.
So now, 9 kind of genericed something
to make the window look good.
There's nothing there in the file menu.
WebWizard, WizardJet over there, says that
what we are seeing today is not a fully done,
fully baked version of client-side decorations.
Enlighten me as to what you mean, sir.
You did.
Oh, okay.
Sorry.
The problem with it is, is that essentially,
there's not going to be full client-side only decorations.
I don't think anyone has gone out and said,
purely client-side decorations,
everything done in one process,
everything one thread is perfect.
The thing is, you can't have more than one thread
in a single application.
It's very simple.
All you'd have to do is implement a listener
to go and close.
You have the problem with,
if the application freezes, the X button freezes,
or this freezes, or that.
It's like a moot point,
because at the current time,
where we are right now,
if the server itself freezes,
that's the same problem.
Except now it affects everything,
and you need to restart the actual server.
Well, that doesn't happen as often, though.
Okay.
All right, so Wimpy wants to chime in with a perspective
for using client-side decorations on other desktops.
Go ahead, Wimpy.
Yeah, I was being a little facetious
when I yelled out no so vociferously earlier.
Client-side decorations are an intelligent design,
and ultimately a good idea.
The way they stand at the moment, though,
is that some of the way that they're rendered
is sort of being forced upon other desktops.
So not everyone subscribes to the design philosophies
behind Nome 3.
Right.
And you could be trying to use GTK 3
just as a toolkit to develop an application.
But some of these design choices from Nome 3
are being, in some cases, forced upon you.
In other cases,
they're requiring you to make changes to your existing code
in order to accommodate their design choices.
And there are other projects out there
that don't subscribe to the Nome 3 metaphors.
So there's the Marte desktop.
There's XFCE.
There's Cinnamon.
There's LXDE.
All of these projects use GTK,
and all of them are now impacted by a decision
that's been made by an upstream project.
Well, I guess my question is similar to Ik's.
Go ahead, ask your question,
because I think you're kind of echoing my thoughts too.
Yeah.
Well, can't those who are implementing
the client-side decorations
make the code check for whatever desktop environment
they're running before,
and then go ahead and use that,
but only in Nome 3?
That's my question.
The clue is in the name.
It's client-side decorations,
so it's nothing to do with the desktop.
And whilst there are a number of opportunities
to override the new title bar behavior,
there is also the facility as an application designer
to absolutely enforce and hard code a look and feel.
And there are good examples
for why you would want things this way.
So if you look at the new version of gedit
that came out with Nome 3.12,
that uses the split title bar arrangement,
and therefore it requires that the close button
is positioned in a different place.
So giving that power to the application designer
to ensure that their application is displayed
the way they intended is a powerful feature.
But the knock-on effect of that
is that other applications and desktop environments,
in the meanwhile,
whilst we adapt and update the theming,
have sort of had some breakage.
So I want to give Daredevilin a chance to respond to you,
and then we'll go to WebWizardG
or whatever's going by this week.
So go ahead, Daredevilin.
All right, so my understanding of the...
I've actually recently went to GTK folks and said,
look, I've been seeing more and more projects switching to Qt.
I'm trying to understand more deeply
what are the root causes for this.
And it pretty much boils down to the fact
that GTK folks have been developing these features,
and documenting the stuff, and making it available.
And not many people were actually interested
in participating in the changes before they were made.
It's not like there was not a discussion about the changes.
It just appears that people didn't join the conversation.
And once the changes were accepted
by those that were in the conversation,
people are complaining.
At that point, it's already decided.
The second part of that is that GTK actually...
I think I actually gave...
I put the link in the Reddit.
But they've actually made a video
explaining more or less what's their approach.
And they want more to be platform than actually integrate.
And therefore, some choices rely on that vision.
Now, on the project that selected GTK,
I guess they need to engage more in the conversation.
And that should actually solve
much of the problems we are finding.
So do you feel like the GNOME project
is sort of mandating a standard?
Is that what you're saying?
So what they've actually said is a clear path.
So for instance, they will prefer
be platform than integrate.
In their vision, for example,
when you develop an application,
they don't think about the application
should look exactly like a Windows application on Windows.
They think it should look exactly like you developed
to be looking like initially.
They will make Linux first-class citizen.
And the rest, they want to allow you to write to those.
But it's not like if something is going to be added to GTK,
it's not going to be like not entered to GTK
because it doesn't work exactly on Windows.
They are working around those
to allow the application to execute there.
But they want to be platform first.
If that's their vision, I guess it's understandable
that they want to kind of create a way of,
okay, to do things,
and they are inviting people to engage in the conversation.
If they don't, I guess it's going to be what they find.
Well, and I wanted to give some time for more response,
but I want to also sort of shift the conversation here a second.
But WizardJed, did you have any final thoughts
you wanted to get on that?
Yeah, just to kind of respond to Dared Evelyn's thing
and to go on what I was trying to say as well
is that it is happening.
The problem is that it's happening in kind of different camp.
So yes, I'll admit that that is definitely going on in the GNOME camp,
and they are discussing how to do client-side decoration.
The problem is the QT guys are also discussing this,
and they're discussing it in their own way.
And at the end of the day, there's two totally different ways
when they're going about doing it.
GNOME guys are trying to push it out, get it out now
so we can see how it's working, get it done.
QT guys want to have a fully set-out standard, then push it.
The problem is that they're conflicting in that way.
Something's going on in the background over there.
I think, too, I have to wonder if maybe this kind of approach,
which seems to be upsetting some folks,
and also creating inconsistencies across other desktops.
And GNOME isn't like it's in some sort of powerhouse position.
You can see maybe why they want to have a GNOME OS, right?
Is this going to drive people away from using GTK?
What do you think, Ryan?
Go ahead. Matt, what do you think?
Do you think more people are going to say,
if GTK wants to push forward with this kind of stuff,
if there's somebody that's not on board with the vision,
don't you think it's going to be more likely
they're not going to choose GTK for their future project?
I think you're going to have some overflow.
I think at the end of the day, you're going to have some initial people,
a little bit like what we saw with Unity
and various things that the Ubuntu team is running, too.
I think initially you're going to get some blowback,
but I think in the long term, it might actually pay off.
It's gutsy. It's edgy.
It might blow up in their face,
but I think there's a possibility that it might pay off.
Hold on. This is way bigger than what Unity was doing.
That was a soft example, though.
Very soft example.
I'm not comparing variables.
Let's go to Daredevil, and he says that there's already a few things
that client-side decorations have already brought us.
What are those?
Not exactly client-side decorations, but the changes.
Just GNOME 2 to GNOME 3 as an example.
They broke the API, yes.
Initially, people were saying,
oh, what the hell is going on with GNOME folks?
This is unbearable.
Suddenly, we're seeing more projects that were using GTK 2
moving to GTK 3.
I would consider that as a positive thing.
Initially, people ditched GTK 3,
and now projects are moving.
Now, the benefits I'm talking about is, for example, the shell.
Cinnamon came out.
It's not exactly the same shell as the GNOME shell,
but their idea when they built the GNOME shell
was to allow actual accessibility to be done on the shell
or to build on top of that shell and still be compatible
and to be the base technology.
It's happening.
I see that they are being looked on the side a little bit,
and projects are reluctant to change.
It is a burden to maintain something that is drifting,
but once it's documented, it doesn't drift as much.
I guess people are poking on the API
using the nice features that appear on the undocumented API
and then say, oh, well, it missed.
It disappeared from the API.
Well, it wasn't documented.
It's not like they're breaking something.
It's not set as, okay, we already released this.
All right.
Wimpy, I want to give you a chance to wrap us up on this topic.
What are your closing thoughts?
Well, I was just going to reply on the migrating to GTK
and also acknowledge that Daredevil is quite correct.
This debate has been rolling for about four years now,
and there's been some dialogue about client-side decorations
going back to 2010.
But with regards to migrating to GTK3,
I spoke to you a few months ago about the Marte desktop
and how we were migrating to GTK3,
and the next release was going to be based on GTK3,
and then a few weeks later, we pumped out Marte 1.8,
and we didn't complete the port to GTK3,
and that's because GTK3 is evolving rapidly,
and every time we rebuild against it,
we find something new, something different
that we have to accommodate for.
So what we're doing is we're on a slow burn now,
and I imagine other application developers who've got small teams
are probably approaching this in a similar way,
which is gently, gently, Catchy Monkey,
slowly port your code to GTK3,
dual support GTK2 and GTK3,
and only release on GTK3 when you're absolutely certain
all of the shifting sand beneath you has stopped moving.
So it isn't an easy thing to target at the moment.
Right, yeah, that makes a lot of sense.
Well, I appreciate the insight on that.
All right, well, so there we go.
We have now logged in the journal that is Linux Unplugged,
our first discussion around this topic,
and I think we'll follow it as it goes on.
We'll gauge what the audience's interest is
and see if there's a further discussion to be had.
I know that I find it to be particularly interesting
because the user side of me kind of likes them,
but the technical side of me definitely sees
what the problems are and thinks that perhaps
that should be handled by the server,
especially when you have cross-operating systems
and cross-desktop environments to consider.
But I think it's worth seeing how it plays out,
and I'm curious to see where the gnome camp's going
because I'm, as a gnome desktop user,
liking it a lot so far.
But Martin did have a really, really good blog post,
very long and very pro-Kwin, as you might expect.
Basically, Martin's solution is just use Kwin for everything.
But we do have that linked in the show notes,
and I recommend you give it a read.
Also linked in the show notes for this week's episode
are the reasons from the gnome camp.
They state on their Wiki, for example,
that under Wayland, it's just simply preferred
that clients render their own window decorations
since Gnome Shell will need to keep support
for decorating X clients.
It would be good if GTK+, and Gnome Shell
could use the same CSS theming.
And then they also talk a little bit about performance,
but again, it's all kind of rough stuff.
Like, I haven't seen any hard analysis, but there you go.
It's all linked in the show notes,
so if you guys want to do some further reading right there.
Now, Linux Unplugged is live on Tuesdays over jblive.tv.
We start at 2 p.m. Pacific.
And this weekend, coming up on Saturday and Sunday,
if all goes as planned, we should be streaming live
from Linux Fest Northwest Saturday and Sunday,
so just check jblive.tv throughout the weekend
and see what shenanigans we're up to over at the Fest.
Matt, are you excited? Are you ready? Are you pumped?
I'm excited and nervous about the whole ill thing.
Yeah, I know. I know.
I'm like, I've got water next to me.
I've got a box of Kleenexes.
I'm like, totally like, I'm trying to eat good today.
I'll definitely, I'm more in the sanitize everything down,
wiping down counters, you know, just start like,
just really trying, and then of course the body stuff.
We'll see how it goes, though.
Get ahead of it. Get ahead of it, Matt.
Get ahead of it, because it snuck up on me.
I didn't even know until I got home last night from the studio,
and I was like, wait a minute, I'm not feeling very good.
Oh, boy. Yeah, definitely get ahead of that.
And then last night, I didn't get much sleep.
So, you know what?
The two things, like, it's not a winning combo, Matt.
It's not a winning combo.
Now, we'd love to get your feedback.
This show runs on your feedback, so go over to JupiterBroadcasting.com,
click that contact link, and choose Linux Unplugged
from the drop-down, and don't forget
about our awesome subreddit,
LinuxActionShow.reddit.com.
And be sure to tune in on Sunday for the Linux Action Show.
We'll be doing last live from Linux Fest Northwest,
and we should have a good recap,
but if you aren't able to catch all the live coverage,
we should have a good roundup
in the Sunday's Linux Action Show.
All right, Matt, I'll see you on Sunday, okay?
See you Sunday.
All right, everyone, thanks so much for tuning in
to this week's episode of Linux Unplugged.
See you right back here next Tuesday.
I'll see you next week.
