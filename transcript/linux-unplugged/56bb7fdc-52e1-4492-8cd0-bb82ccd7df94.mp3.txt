Brent, you're eating breakfast in the hot tub?
Oh yeah.
What?
Okay, I have so many questions about this.
There's a bit of a story.
Why do we need to clear this up?
I'm curious.
Well, because it's too distracting to do the show.
So you're in a hot tub eating breakfast
with your dad and brother.
And I just, okay, are you dressed?
Are you wearing anything?
Oh, just, yeah, you know, a bathing suit or whatever.
Okay, all right.
So my father is visiting from, you know, Ontario.
He's been here for, I don't know, three months.
He won't leave.
So the one request that he had
was that we get a hot tub for him
so he could watch the mountains in the morning,
which is hilarious.
So anyways, his routine now has either been spend time
in the evening in it or in the morning,
you know, having his breakfast, so.
Wait, wait, wait, wait, wait.
So your dad's eating breakfast in the hot tub
on an on regular basis, on an ongoing regular basis?
Oh yeah.
You know, kids, I'd love to visit,
but I just can't be bothered unless you get a hot tub
and then yeah, okay, I'm there.
You know what?
The only thing grosser than eating breakfast in a bathtub
is eating breakfast in the same bathwater
over and over and over again,
which sounds effectively like what he's doing here.
Oh, interesting.
But now I'm picturing three of you eating breakfast
in this hot tub.
It's just one big bowl of oatmeal, I think.
Yeah, I'm just like, what happens when you drop food?
Like, this is horrible.
Hello friends, and welcome back
to your weekly Linux talk show.
My name is Chris.
My name is Wes.
And my name is Brent.
Hello, gentlemen.
Well, we really screwed up this week.
This is a horrible show.
Don't listen to this week's episode.
I'd probably turn it off right now
because about 10 minutes before we started,
we deleted nearly 11, what was it, 10,000 lines?
I don't know.
We basically destroyed our entire show, doc.
Thousands of characters.
And decided to throw the topic out.
We had gathered together today to talk about IPFS.
We spent the week going deep into IPFS,
watching YouTube videos, reading articles,
trying out different applications,
hosting websites, deploying on different machines.
And we decided to throw all of that away
and not do it this week.
We're gonna do it in the future.
But we realized that the topic was deep enough.
It was like asking us to explain HTTP
and distributed network storage in one episode.
And then going into the things that are good about it
and the things that are bad about it,
which there are plenty on both sides.
So we decided to instead to break that off
into its own thing in the future.
We'll give you an update on that soon.
And instead, we just have a ton of stuff
that we wanna cover this week anyways.
We were looking at it and realized we had two shows in one.
And so we decided we just weren't really gonna give you
the best show on IPFS today.
But we can give you a good episode
if we focus on the other stuff.
Hey, that means there's still time to send us feedback.
If you have thoughts on how we should talk about IPFS
or if you got some tips for us.
Yeah, maybe before we get into the remainder
of the Zombie Doc this week,
I wanna mention the Jupiter Broadcasting East Coast Meetup.
I think it's been since like 2014
since we've made it out there.
And it's on, it's happening Saturday, April 9th, 2022
in Raleigh, North Carolina.
We're gonna meet up at a park.
I think it's just outside of Raleigh.
You know, I'm not a location expert,
but you generally, if it's right next to a big city,
you say the big city's name, you know.
But we got the address, 403 Nightdale Station Run.
There you go.
So it's Nightdale, North Carolina.
Who even heard of that?
See, nobody.
Or Kingdale?
What is that, Wes?
Get in there, is that Nightdale?
I can't read, I got bad eyes now, I'm 40.
Either way, you go to meetup.com slash Jupiter Broadcasting.
I don't even know why you're listening to me.
You're not gonna remember it anyways.
So we have all the details up there.
Yeah, there's a button you can click.
You commit to going right there.
Let us know.
You think it's gonna be a banger, as they say.
Wes Payne's gonna be there.
Everybody knows Wes Payne, right?
Yeah.
Yeah, you take a deep breath with a pause
because he's like, I haven't booked the flight yet.
I have not, but I'm gonna go.
Alex does have a couch for you though.
Oh, that's amazing.
So you can save a little money there.
Brent's gonna be there on one of those couches too.
So Brent'll be there.
And our buddy, Michael Dominic,
from the Kota Radio program's gonna be there.
What?
Yep, yep.
Of course, Alex from Self Hosted will be there.
Of course.
So it's really coming together.
Looks like we're gonna have, so far,
about 50 people have said they're coming
from the community, but I'm starting to suspect
it's gonna be more than that,
since we saw about a month before it kicks off.
So join us in North Carolina on April 9th.
We wanna see you.
And I am trying to mention this ahead of time
because I want you guys to understand
my motivation for kind of mentioning this
every episode for a bit is we have people
who sometimes are a month or two behind.
And so they hear about a meetup that's in their area
a month after it's happened.
So I try to get ahead of it as much as I can
when we can and let you know it's coming.
So now with the standard meetup announcement
out of the way, I wanna start today's episode
by talking about our each individual thoughts
on how to engage with an open source developer
to give them some sort of feedback
or to ask for a bug fix in a project
that you're working on.
All three of us have recently had an experience with this.
Wes, I think, really got us thinking about this last week
when he mentioned his experience.
I also recently had an experience asking for something.
I asked for a developer who had created a hosted bot
that runs on his server.
I asked him to dockerize that up
and make a few modifications to make that
possible to self-host.
And it's kind of a big ask, right?
I'm going in there and I'm asking,
hey, I know this isn't really adding a feature
and you have a whole strategy here,
but I'd sure use and trust your application a lot more
if I could self-host it.
Yeah, I have no interest in all the stuff
that you're setting up over there,
but can I just copy it and run it myself?
And I felt a little apprehensive about asking for that.
It felt a little selfish.
Like, you know, who am I, right?
Just asking this developer to divert their time.
So I'll tell you how I handled that
and kind of how I made that happen.
And it worked out for the best.
But I thought maybe we'd start with Brent this week.
And Brent, I wanted to start,
how would you ask an open source developer for a fix?
And then could you tell us about your recent
bug squashing adventures that you've been on
for the last week?
Sure, yeah, I have a little story, actually,
that happened in the Telegram chat this week.
Stay a while and listen.
I was really diving into trying to do some bug testing.
Ubuntu, we mentioned, was having their bug testing week.
And I thought, jeez, I've been trying to do that
for a few years and I'm really gonna dive in this week.
Nice.
In the process, I ran into what I feel
is a little speed bump for myself.
I was using Wimpy's lovely Quick EMU
to try to get some VMs up and running
to run these daily images.
And I had an issue with copy and pasting
despite following all of the suggestions
on how to get that up and going.
Copy and pasting between the VM and my native machine.
You had read the docs.
Oh, many times over the last few months.
And so I thought, jeez, maybe this is something
people struggle with in our community.
And I wonder, I'd like to hear what you guys think.
But I feel like I'm not the most technical person
in our community.
And outside of our community, that says a lot
because typically I am.
But I often struggle with, you know, it's a Wimpy's app.
He's a friend of ours.
And so I could just like message him and say,
hey, Wimpy, I'm struggling with this thing.
Can you help me out?
But philosophically, I felt like, well, I don't,
Wimpy probably doesn't want everyone to go and, you know,
DM him about a little problem they're having
with an app that he's worked on.
So I thought, okay, well, how else would I do this
if I didn't know Wimpy?
And so I went into our community and I said,
hey, I know there's people who use this app,
you know, Quick EMU.
It's, you know, a little outside my pay grade
as far as what it's doing under the hood.
And I'm having this really simple issue.
And I wondered if anyone could help me.
And it actually began this really fascinating discussion.
Lucifer in the chat room helped me like wrap some ideas
around why it was okay to just like DM Wimpy directly
in our telegram group, for instance, and say,
hey, I'm having this small little issue.
And so I thought if I was the developer,
I wouldn't want to be bombarded with all these like,
you know, single people trying to make me solve
the smallest little issues with the software,
either because it is a bug or because it's just like
a use case that me as the user, I'm not,
I haven't figured out yet.
You know, there's a learning curve
to every single application.
I'd be curious to hear what the rationale was.
Cause I also think I would be hesitant.
I am every time I reach out to a developer, I am hesitant.
So here's my thought on this too, is with free software,
you have the opportunity to experience
one of the greatest things in software development.
And that is you can interact with the developer directly
in the right situation and in the right scenario,
in the right context, engage with them,
and they will actually fix the thing
that you're asking about.
Like it's such an incredible experience
when you are so familiar with the commercial
customer experience where you buy a product,
maybe they offer support,
but you could never ask them to change anything.
You could never actually talk to the person creating it.
And it's such an amazing experience
when you have that kind of interaction.
Yeah, I mean, right in the commercial world,
maybe you have like a rep that you talk to
and you're sort of like kind of pushing,
being like, look, this really causes this problem,
but you have no insight into what happens upstream.
How does that get prioritized?
Are you just a small little fish?
Right, cause along with doing this process,
there's generally a public bug tracker.
So you can watch the status of your thing.
And that's, even if it's not going anywhere,
it's at least more access than you normally get.
But to properly navigate this,
I think Brent, you do have to go in
with a little bit of caution like you did.
I think you have to kind of suss out
how does this developer prefer to be approached?
And I may actually start,
if I figure out how to contact them in a way
that feels like it's appropriate,
I may actually start with the question of,
what is your preferred way for me to ask for help
or file a bug?
Not here's my problem, but hey, I know you're busy.
So I need to, I'd like to file this issue
because I'd like to help you fix it,
but what's the best way for me to do that?
And not actually starting with the problem,
but starting with the question of,
how do I go about asking the problem?
Yeah, I hadn't considered that
because I figured giving a small synopsis
of what was going on would be helpful,
but I think you're right.
Every project seems to have a different preference
on where to solve various problems.
You know, a bug tracker is not the right place
to ask a very simple usage question.
Some projects have IRCs for that or discords
and other technologies to just get people connected
for really simple questions.
And so I think actually that's very simple
and yet really good advice, so thank you.
Yeah, I think it's like sort of an empathy thing
of trying to understand.
Some projects will have that spelled out.
Other times you might need to explicitly ask
because they don't yet have documentation established
that might tell you where to go with that.
You know, which communities or forums
or methods they prefer for what types of communication.
The other thing is sometimes projects
have been around a while and they just have a legacy
of different trackers or different places
for community online.
And so it's like, okay, which one do I actually engage with?
That can sometimes be a problem for podcasts too.
So how did the whole bug squashing thing go
and how did it go with Wimpy?
Tell us more.
Did you squash any bugs?
I feel like there is a conclusion to this story.
Yeah, I think it's an adventure
and I don't think it ever concludes.
So for the small story with Wimpy,
I actually had this discussion after bedtime where he's at
and he never got back to me.
I think because probably it went into
a totally different place.
You know, my original question actually evolved
into a discussion about something else,
which he may have been interested in.
Maybe he didn't even see it.
And I just got around the copy and pasting problem
because I wanted to keep going on the project.
So that's where that landed.
So if anyone has any ideas on how to help me with that,
I'd love to hear.
So now he's turning to the audience.
Right?
It's interesting because that was my original approach
in the Telegram group.
And there was some great suggestions there.
There was a good point that was made during that discussion,
which was sometimes reaching to the community
for some help on a project is sometimes detrimental
because you can get information that leads you
to a workaround that maybe the project
doesn't necessarily think is the best solution
to your problem.
And that is kind of what I ended up finding,
you know, on the stack exchanges and stuff like that.
You end up with these potential solutions to your problem,
but they're kind of hacky sometimes
and getting the answer from the project itself
is probably far better.
You know, there's a very interesting thing happening
right now in the Home Assistant community
where the project is recommending,
you're laughing at me, Wes,
but the project is recommending that people migrate
from the old Z-Wave implementation,
integration, to Z-Wave GIS.
And they've even created a wizard
and they've been pretty clear about it
for the last six months.
And then they made an implicit recommendation
in the last Home Assistant release.
And in the next Home Assistant release,
they're gonna break the old Z-Wave integration.
So you really gotta migrate.
And when you go look up how to do this migration,
what you'll find, especially on Reddit,
is a bunch of people telling you to do something
completely different than what the project recommends.
A lot more complicated, requires a lot more skill sets,
it requires understanding MQTT
and it's a whole different world.
And there's no like really simple migration wizard
that they've set up.
And it's just, it's like because things become
tribal knowledge, like this is how you do something.
And so when new people come along,
like there's almost just like so much momentum
behind recommending something.
And sometimes what happens is the project changes, right?
They pivot, they choose a new direction
and the community doesn't necessarily change with them.
It could be saying something as well
about really great project documentation.
I feel like some projects have such great documentation
that's so up to date that that tends to be the go-to
for this kind of knowledge.
But I've often ran into projects who maybe have
some stale documentation or it's not clear
in its descriptions.
And so often the community has to kind of use
these other strategies to suggest fixes
where the project isn't kind of giving the information
that's required.
So I wonder if as a project that might be a place
to put energy where it makes it far easier for end users
to accomplish the things the project,
the direction the project wants to take them in.
It seems like sometimes there's also a sort of dichotomy
between what's happening in the pure upstream development
and the various use cases downstream.
It just makes me think of GNOME and plugins.
Like there may be something that the upstream
is not really interested in continuing development work on,
but the community continues to rely on
or thinks is worth continued support.
That's a tricky relationship.
Turns out, yeah, when you think about it,
it probably happens a lot in free software, humans.
I mean, this is one of the benefits.
It's just, as we know, software comes with maintenance,
burdens and expectations.
Yeah, I follow what you're saying,
but some of that also just puts more work on the project.
That's why I kind of feel like in free software specifically,
maybe some of that work should be taken on by the community.
Like I am, when I really want a developer
to fix something for me,
I feel like the onus is on me to come to them,
find them in the most appropriate way possible.
And, you know, documentation would be great.
Right, if the developer shares a tip
on how you might address something,
that may be an area where the community can say like,
oh, look, yeah, okay, I can add that to the Wiki.
Yeah, speaking of which, it's been making me think recently
that we need to like open up a bug tracker for JB,
just in general, for feature requests and things like that.
So that's something I think we want to talk about.
So, you know, just to kind of summarize our thoughts
on the topic of this,
when I decided to engage with a developer
and ask them to dockerize this stuff,
I also offered to throw them 20 bucks as a thank you,
just because I felt like, it felt awkward at first,
like, hey, you know, I'll give you, I'll throw money at you.
But then I thought, I can say thank you,
but there really is value for them in their time
for doing that work.
And I'm gonna get value out of having that software
run on my land indefinitely now.
Like it's, then all of a sudden, like 20, 30, 40 bucks
felt like hardly anything.
I was extremely appreciative because I started thinking of,
like, well, how valuable is this to me?
And I actually ended up sending them 100 bucks
as a thank you for getting that work done.
And the other reason why I kind of kicked it up a little bit
is because after they did the work,
other people came and piled on
and started having other issues with it
that I felt like we created more work for them.
So that was the other reason I kicked it up a little bit.
It's just a way to say thank you.
But I wanna, while we're talking about value,
I wanna talk about a really neat experience
that I had this weekend.
So yesterday, listener Cole came up to Lady Joob's, my RV,
to see Joob's, to meet me in person and the family.
And Cole's been a listener for over a decade,
perhaps even longer since perhaps maybe
before Dylan was even born.
He's now a commercial electrician by trade.
He's done the sys admin thing and still a big geek,
loves that stuff.
And our recent conversations about value for value
have sort of really resonated with him.
He's never really participated in any online community,
so he's never been in Mumble or Telegram.
He's never emailed into the show,
but he's listened to every episode.
Wow.
And that's not too uncommon.
I mean, that's how I am for most of the podcasts I listen to.
Seriously, same.
Yeah, I think it's the norm.
And, but I think for Cole,
he was trying to think of a way to contribute
that wasn't just like a financial contribution,
but something that would be another value contribution.
And I like this concept a lot
because I think it could also be applied to free software.
And so I sort of feel like I have felt so down
about software development funding,
free software development funding,
since like Heartbleed and that kind of stuff.
And it's starting to turn around
when I'm starting to connect these pieces
and it's still early days,
but I'm starting to see something here.
And because it resonated with Cole too,
he's like, I wanna contribute.
I've been listening to JB for over a decade.
I've gotten value out of some of the shows
and I wanted to do something for you that's valuable.
And I'm a commercial electrician.
And he had heard the story about the rack in the RV
and chewing up my wiring.
So we just got our slides fixed over the summer.
And then it freezes like a bastard here
in the Pacific Northwest and rats get into my RV
and they chew through the wiring and break my slides.
So I said, well, let me come up and take a look at it.
And so, yeah, okay, come up.
And he comes up.
So I gave him the full tour,
but I did a bit more of a focus on the electrical setup
and on the solar system.
And I explained to him the rat situation
and that the wire they chewed through
and that had he had fixed
and I showed him that kind of stuff.
And it was obvious that his experience
was gonna be instantly valuable
because he kind of just pretty quickly piece things together
that I wouldn't have understood.
And he explained that the way these switches work,
there is a multiplexer sitting between the controller
and the switches to send the different signals
because there's two wires for in
and there's two wires for out.
So you have each switch has four wires total
that run back to a multiplexer.
And then the multiplexer just has one wire
or two wires going to the controller.
So it takes all these wires and multiplexes it down.
And I didn't know that,
but Cole recognized that right away.
And so we started hunting for the multiplexer.
Cole's here on the hunt for the multiplexer.
That is definitely a false floor.
If you think so, it could be hidden under there.
There is definitely a cavity there.
But what I'm thinking that probably actually is,
is just for power.
And when I'm looking at it,
it does look like from that wiring harness,
the wires go in two directions.
So I'm thinking that maybe the multiplexer
is behind that panel.
Oh, behind the panel itself.
Yeah, which would make sense.
Should we take the panel off?
Yeah, I was gonna see.
Okay, let's take it apart then.
Let's just see if you guys are okay with me.
Yeah.
I would also like.
Yeah, I'd be curious too
to see what it looks like under there.
Yeah, yeah, and then I'm gonna ring it out.
See if I can see continuity between those connections
and see what we can see.
So it's a big panel with half a dozen switches on it
and LED lights to indicate sensors for tanks
and all that kind of stuff.
And we've never removed it from the wall,
but I've always been curious what it must look like
because it's just a ton of different switches
and lights and stuff and sensors in one spot.
What are you?
Yeah.
So Cole also brought like all his own tools
because he knows me, he's listened for a while
and he knows I'm not very handy.
You don't have the tools.
He's very polite about it though.
Just bring what you need, you know?
Yeah, so he brought his own set
and he had that panel opened up right away.
And I tell you what we found in there
still sits with me right now in an uncomfortable way.
Well, your problem is right here.
What do you see?
Oh, did they get up in the wall then?
Oh yeah.
Oh my God.
This right here is where your problem is.
You did a fantastic job down there, I got to say.
I did?
Down there on that side?
Yeah, you did a good job.
Good.
So they chewed not only the spot you fixed today,
but they chewed this area.
They got on the back of this board and chewed this.
They crawled up the wall.
Yeah, you can see the connector here.
This is why this one doesn't work.
There's nothing here.
Wow.
Yeah, there's the sensor.
This brown wire here is the sensor wire.
That's why the sensor isn't working.
Yep.
I can see the other end of that wire that they chewed.
Yep.
That red guy up there.
They were in everywhere.
They got everywhere then.
Yeah.
That is disturbing.
Yeah, it's not good, that's for sure.
I'm surprised other crap isn't busted then.
I just hate that they use this corn coating.
I just really, I get why they do it.
They do it because people abandon cars.
People leave cars around for years and years and years
and they don't want, it makes ecological sense.
But it's basically building your house out of a snack.
Can you believe this?
So it's corn wiring.
Gingerbread RV over there.
And they love it.
They love it.
Cole's in the chat room right now.
He says, it's probably not a bunch of rats.
I don't know.
I don't even know.
As far as I ever saw on camera, it's hard to say
because I just caught a rat on camera.
I don't know if it's, you know.
You know, my folks had a problem with this one.
They're cars, but it was like a soy-based wine,
but same thing, tasty wire covering.
Who would have thought?
Yeah, unbelievable.
So then we did a run out to the hardware store
and I'm ashamed to admit it.
I don't own a soldering iron at home.
We have one here at the studio, but we did the math
and we're like, do we drive to the studio and pick it up?
Or do we just go to the hardware store
that's like five minutes away
and I just have one at home too.
So they had a decent soldering iron,
but they did not have like the best solder options
and stuff like that.
Yeah, of course not.
But he got it all done.
He helped Tadia learn how to do some of the soldering too.
It was her first experience and got it patched up
and it's working.
It's working.
Oh, you're like fully back in slide action.
Yeah, that's a quality of life improvement for us.
It's a lot of value.
It was huge and it was so nice of Cole
to come up and do that.
Well, it's almost the coming full circle
and just from the past year and a half or longer, right?
Like before your whole journey
of preparing this, like you just,
you're actually back in a fully functional lady juice, right?
Oh my gosh, man.
Oh my gosh.
And now I'm ready to like redo the whole tech setup.
I'm not exactly sure what hardware setup I'm going with yet,
but I'm like getting in that space.
I feel like talked a little bit last week
about some of the software I'm gonna load,
like a spring reload.
I think there's gonna be several Mac Studios.
Yeah, yeah.
A couple of Mac Studios running under the booth.
It's just about 12 grand of Macs in there, that's all.
Yeah, yeah, that should be great.
A lot of horsepower.
Of course, I think they're probably all would use
Intel emulation for all the software.
Right.
But wow, it's been great.
It's been really great.
And I'll have all that figured out soon.
I'll get all that.
And with Cole too, I was showing him some of my,
like how I hacked to bring the Starlink
and stuff like that.
Oh, nice, yeah.
Showing him ideas I had around cooling.
So it's all, you know, it's just really great.
It has been so like, you know, people say,
you know, you can be wealthy in ways
that are not money.
But it really feels like that is true
when it comes to our community.
Yeah.
And I think we have been particularly spoiled
here in the Pacific Northwest,
with just some really great people in this area.
And then we travel, and you know,
every time we're traveling,
we hear from people that are offering,
you know, hey, I got a driveway, you can stop in it.
And this is just wild, right?
Like you're in a strange place
and you automatically have friends.
Crazy people out there.
You crazy people.
Linode.com slash unplugged.
You know, I should call up my friends at Linode
and we should talk about having them come join us
at the barbecue, because they know a great meetup
when they see when they helped us put together
the Denver meetup.
They were absolutely essential in that.
Go sign up at Linode and support the show
by going to linode.com slash unplugged.
You'll get $100 in 60 day credit on your new account.
And you're gonna support this here show.
Linode's where we run everything up in the cloud.
These are, I'm in everything, everything.
And you can start with like a five.
This is how I personally started with Linode.
I mean, you know, you do you,
but I started with like a $5 a month system.
I put sync thing on it.
I was like, well, I will use this
to just move between all of my on-premises stuff.
I'm just gonna do all on-premises.
And I did use it like that for a while.
But as I started kind of just understanding more
about Linode, the company, the culture,
the people behind it,
I realized that I could trust it for my business.
I could trust it for my mission critical stuff.
I could trust it for my wife's business.
Like that kind of stuff really is what resonated with me
is I just understood it better.
And then, you know, as time comes up,
it has gone up, I've made friends over there
and I kind of see the way they work.
And I've been watching on some of the things
that they're building,
like their database as a service product
that they're rolling out right now.
And you get to choose from 11 data centers around the world
and every service level you go with,
from their $5 a month system
to their like crazy bonanza, epic CPUs and MVME storages
and all that kind of stuff this is,
they're gonna give you the same great customer support.
It doesn't matter, they got the best in the business.
And honestly, I've never really had to rely on it
cause everything's always been really great for me,
but I have heard such a consistent feedback
from the audience that,
hey, I got in a jam and they really helped me out.
I've heard that over and over again
and that they've always blown away everybody's expectations.
So I like to mention it because I think
in a moment when that matters,
that's gonna be nearly priceless.
And they're willing to do that for you
with a $5 a month account.
It's pretty impressive.
So go check them out, try it out, support the show,
go learn something, build something,
just enjoy the performance.
It's just a lot of fun to play with a system that fast
and you get a hundred dollars to do it
and it's a way to support the show.
So it's lino.com slash unplugged.
Well, I think it's that time again, feedback.
Ray wrote in this week, talking about experience
with free and open source software.
Wes's recent positive experience working
with an open source project inspired me to share my own.
After setting up TailScale on all my machines
to experiment with mesh networking,
I took an interest in HeadScale,
the open source version of the TailScale control plane.
Everything was working pretty great,
but I ran into an issue adding a particular machine
and went to the GitHub repo to seek some assistance.
I was directed to their Discord server
and within two minutes I was talking
with more than one HeadScale developer.
They were welcoming and helpful
and we actually discovered my issue
was due to a bug in the HeadScale code.
I filed a bug and the fix was merged within a week.
I wanted to highlight this project
because the process was so pleasant
and felt truly community led.
The people working on the project really believe in it
and are open to input and contributions.
That is great to hear.
I have also had a great experience.
I have a business relationship with them.
They are a sponsor of Self-Hosted, so disclosure there.
If you'd like to sign up and get a personal account for free
with up to 20 devices, it's tailscale.com slash SSH I think.
But I have interacted with them from that side.
And a couple of the people I chatted with
were already Self-Hosted listeners.
So that's always a good sign
because it shows you they're really into this stuff.
If they're listening to my geeky podcasts,
they must really like this stuff.
And that's kind of a sign to me that the staff are into it.
And I've had a good experience.
The same two, I will say, kind of a same line of thinking
is I feel like I always have to give an honorable mention
right here to the Nebula project.
Both Wes and I have had great interactions
with the Nebula developer.
It has been also a great solution for mesh VPN network.
So it's really nice to see some good options
in the space right now.
Now, we kind of got in trouble last week
because, well, we didn't plan last week's episode
much like this episode was completely unplanned.
And so we were just going with the flow
and I think we ended up hurting some sensitive ears.
Yeah, we actually got a piece of mail
that I think at once is both wonderful to hear
and also some really good criticism
that I think I agree with.
So Gene wrote in about our last episode.
He said, my toddler and I tend to listen
to your podcasts in the car.
That's the part where I think is really great.
I had to turn Linux Unplugged 448 off partway through
because you all were continually saying F-U-C-K
and that's not exactly what I want him parroting at daycare.
I'm really disappointed that we couldn't listen
to this episode together, but even more disappointed
that there was no warning at the top of the show
that this episode was going to not be kid friendly.
I'd really appreciate it if you all would keep kids in mind
when choosing your language for the show
as I really like sharing these shows with mine.
I thought that was great feedback.
It was tricky because the project itself,
if you both remember, was called Brain F-U-C-K
and that was hard to get around, but any thoughts on this?
You know, this is definitely something
that we bounce around a lot inside internally
because we don't believe in sort of pretense
of pretending we're something we're not,
but at the same time, you know, I'm a dad and I get this.
I think for the most part, we have very rarely sworn
on this show just because we want everybody
to be able to listen and we don't want that to be a barrier
for why you listen and we also love the idea
of kids listening.
I think that, you know, getting kids into technology,
especially something that's focused on open source,
free software and not centralized, you know,
typical things like Instagram and social media.
I think that's a great, I think that's great
to get kids thinking in that direction.
I think where it gets maybe tricky is that we're not,
we're kind of in the gray area in that I don't think
we're thinking about kids explicitly
when we're crafting the show or, you know,
like that's not necessarily where I could target audience,
even if it's a welcome subset and then at the same time,
we're not explicitly like some other podcast,
we're not explicitly saying that we're an adult only show.
Right, right, yep.
Yeah, so there is, it's just a balance that I think we walk.
Like we don't make the show for any one particular audience,
but we try to consider as many of them as possible.
That's probably the way to put that.
You know, and often the feedback that we get in that regard
as you just heard is, has a tone, you know,
I'll just leave it at that.
And so that sometimes makes it hard to internalize
that feedback in a way that doesn't make me angry.
But I think when you hear the message
that they're trying to get to, it's pretty understandable.
Yeah, I think asking for a heads up is entirely reasonable.
We heard from a lot of people about Bookstack
and David wrote in, he said,
I've been using Bookstack for a few months
and I think it's superb.
It's really elegant, it's easy to use
and it can be used internally for organizational info.
And I also got a, I think Cole recommended Bookstack
as well.
Is that right?
Lyndon also wrote in, said that I'm using Bookstack
for way too much.
It might be too good.
That's great.
I like when people tell us where they're coming in from too.
Like David's coming in from Wales.
That's amazing.
Aww.
Keep that up.
I think that's great.
Trev wrote in to say, Trev was on fire this week.
I think I saw Trev right into a couple of shows.
As an Emacs user, I use the vulnerable org mode
to organize my notes, agenda reminders and long time tasks.
Yes, we should have given org mode an honorable mention.
We did an episode of self-hosted on org mode.
Yeah, that was a great episode.
If you'd like to check that out.
All right, moving right along.
This is a lot of feedback you guys.
So I'm kind of moving at a quicker clip here
but we also got some mentions for Obsidian.
Obsidian I believe has also been talked a bit
about on self-hosted.
I am not somebody who I, Obsidian just doesn't work
for the way I work but I think it works for a lot of people
especially people who like to link things to other things
and then have visuals that show them their cluster
of linkages, Obsidian can be great for that.
And it's also a markdown at graphs on graphs on graphs.
Yeah.
Yeah.
Wow.
Whew.
I got to take a break from that.
It was too much.
It's a lot of, so this is actually maybe a chance for me
to get into a little bit of a soap box thing if I can.
Do you want the walnut soap box?
It needs to probably hold some weight for a bit
cause let's be honest, I could stand to lose a few pounds
and this is a big soap box here.
And now as the French say, it is time for the boost.
So I want to talk about these boosts for a minute
cause you probably heard we've been doing these
in the damn show.
They hardly make any damn sense.
Most of you don't know what the hell they are
and you don't know why all of a sudden we're doing them.
And I want to talk about this because this right here
is I hope the very groundwork for a revolutionary way
to monetize free software and content
that can remain independent.
And I'm going to start here.
This is, we're going to have a little dad time now
and I'm just going to tell you the way something is
and you're just going to have to accept it.
And that is that independent podcasting
has about three years left, maybe five
if you've got a huge established audience.
And outside of that, it's going to be Mad Max territory
for independent podcasts.
It's getting bad.
YouTube is large and it is specifically reaching out
to podcasters to move to its platform.
But you may already heard that.
What you do not know because you have not been
in these conversations, but I and friends have been
in these conversations, is that traditional podcast sponsors
have found that YouTube works better for them
than podcasts do.
They're wrong, but here's their rationale.
And when you hear it, you're going to see why they do this.
Number one, they love the idea of link down
in the description.
They think that makes more engagement.
And they think that means that people click through easily
more often because the links right there
down in the description.
Number two, is that YouTube is a giant centralized platform
that generates a lot of metadata about its audience
and about the creators and about the interconnections
between those creators and audience.
That allows sponsors to build tooling
to essentially slice and dice the market up for them.
So they can go in and say,
I want 10,000 people that are interested in this.
And I want to get this percentage of women
and I want to get a content creator
who's also connected with this content creator.
And I want to ride this hype wave over here.
What they do, and it's disgusting,
is they will engage directly with these channels
and they will do sponsored videos
with absolutely no disclosure that that video is sponsored.
Or it'll be like a really limp attempt at it.
Like maybe down in the description,
it'll say sponsored by.
And it turns out like the manufacturer of the laptop
was the one sponsoring the entire video,
but they don't actually say that in the video.
That kind of stuff is rampant on YouTube.
And the reality is sponsors love it.
They love that kind of native ad stuff.
They love it.
They love that they can use generic tooling
and they love that they can buy five or 10 creators
in a couple of clicks
and that those creators don't even have to disclose,
even though they're supposed to,
they don't even disclose
that they're being sponsored sometimes.
They love that kind of stuff.
Then you've got Spotify who's squeezing the market,
trying to centralize over there.
Now, independent podcasting that's unmonetized,
well, that's a hobby
and that's gonna just continue as people prefer.
But unique crafted content
that is the sole focus of content creators is fading.
It's going away.
I mean, honestly, how many Linux content creators
do you know that actually do Linux content creation
full time?
Counting myself, I can think of Joe.
So that's two.
Everybody else has contract work.
They got side gigs.
Maybe Nick over the Linux experiment is doing it full time.
I'm not sure, but it's like maybe no more
than three or four content creators.
And then you got Larble over at Ferronix.
When you start getting into the written media,
you got a little bit more.
You got Joe at OMG Ubuntu, you've got LWN.
But again, this is like under a dozen at all
for this entire ecosystem.
Like I think our niche is particularly vulnerable
to this problem.
And this brings on an obvious need for a change,
which is why this conversation around the boosts
has been coming up more and memberships
that we launched a little while ago,
because I'm trying to get ahead of this thing.
I have been doing this for 15 years
and I figure I've got about five years left
to figure out how to make this sustainable forever.
It's been a good run, but the music's coming to an end.
And when I first saw Boost, what I saw was,
okay, that's a great way for somebody
to contribute a one-off contribution.
And I thought, okay, I could really see
how that also work with free software.
Like the two are very clear for me
and we are the world's largest Linux podcast.
So if we help establish a system like this
that people adopt and consider normal,
then that may actually help move the needle a little bit.
Like if we do the groundwork here,
it may actually open the flood gates at one point.
Like there's a real possibility for the show
to make a difference in this area.
And it's early, right?
Like my peers don't even know
what the hell I'm talking about.
Like they don't even know, they think I've lost my mind.
They don't even have any idea because it's so new
and they're focused on what they do, right?
Like, so it's early days still.
But what I have noticed,
now that we've been doing the Boost for a little bit,
is there's something extra special there.
And let me give you a little bit of background here.
The cheapest, easiest, simplest way to comment
is always going to lead to the worst comments.
YouTube and Reddit are an example of this.
Very low friction to leave a comment,
very little individual thought has to go into each comment.
And so you just get the worst comments.
You step it up to Telegram and Twitter,
things get a little bit better, but not much.
You know what I'm talking about.
Then you step it up to email.
There things usually get pretty good.
You know, you get a range of the type of feedback,
but it's generally been thought through.
It's often a couple of paragraphs long.
It's not very, not great on the back end
in terms of us having to process it and put it on air
and try to read through it in a way
that doesn't put you to sleep and that kind of stuff.
But you get links, you get references,
you get an actual full thought out email.
Like that was what, email has been the peak of feedback.
And that's why we push people to the contact page.
But Boost hit that golden ratio in a way
that is fundamentally a big improvement
for the production of the show.
Because the feedback that comes in,
because A, you have to have one of these new podcast apps,
newpodcastapps.com.
B, you gotta put some change in this wallet
on this podcast app.
And then C, you gotta subscribe to our show
or listen to our show in the podcast app
and send us a Boost in there.
That eliminates 90% of people almost.
And it's changing, right?
It'll be 80%, and then it'll be 70%,
just like the Linux desktop has been,
just like Matrix has been,
just like everything that our audience has pioneered.
Early adopters start, and our audience is always
some of the very first to try something
that's a sensible technology.
And so it kind of self-selects
who's giving us feedback at the same time.
They're like limited to 300 characters.
So it's easy for us to process and consume them,
and we can actually export them and sort them by show,
and we can see what show they were listening to
if they want to include that information.
And they have the opportunity
to give us a little bit of value.
And sometimes it's like a hundredth of a penny, right?
And then sometimes it's like a couple of bucks.
And it comes into a system that we can process
and then put into the show in a way that's quick.
And it gives the audience a chance to buy in, right?
It gives them a little bit of ownership.
It gives them an opportunity to contribute something
and supply a message.
It's created this manageable, valuable channel
for feedback and ideas that are coming into the show
that are giving us ideas to try things
we've never even considered before.
And I just never expected that
when we started using the Boost.
And so that's why we've been featuring the Boost more.
And because I think the ideals of the podcast index
and the podcasting 2.0 movement are necessary
for the long-term sustainability of independent podcasting.
And that independent podcasting
that has traditionally been ad financed
is gonna have to go through some bit of transition.
It may not be a hundred percent transition.
I don't know, it's gonna be different for everybody.
But that S is coming.
And I think a lot of the people around me
haven't even figured out
until they're listening to this episode.
And then they're gonna listen to the words I'm saying
and they're gonna realize I've been doing this
for a long time and I know what the hell I'm talking about.
And they're gonna have to start making a change.
Just like that bill's been coming due in free software.
But I think we have an opportunity here to do it right
and to do it in a way that orients everyone's priorities
to the audience or to the software creators.
It's a huge movement that could be happening.
And it's not just this show.
So I think that's the other thing to consider.
So that right there is my soapbox.
Why don't we do our first Boost?
Awesome Matt wrote in again and he said,
really enjoying episode 448.
Encrypted show notes idea is great
and would love to see that again.
I would do it again.
I had a lot of fun doing that episode.
Yeah, but you can't pick the same encryption.
No, I think you're right.
I think we'd have to come up with a new method.
Maybe could we allow for linking to our show notes?
So like maybe all you have to encrypt is the URL.
Is that too much of a cop out?
Because then that wouldn't be this massive challenge
massive chunk of text.
Yeah, right, all right.
Yeah, you'd allow, you'd allow it?
I suppose some sort of uniform resource locating system.
We'll start brainstorming on that.
All right, watch out Wes, here comes one.
Oh, this one's from sexy pants excellent.
Okay.
Maybe you should start a podcast
covering your life with ADHD.
There's a YouTube channel that covers it.
How to ADHD.com.
Maybe you should reach out to them and do an interview.
I don't know.
I too suffer from the beast
and it's just such a pain and makes things so hard.
Hmm.
What do you think about that, Chris?
And a podcast on it, huh?
Maybe like we could do an extra.
You know what's funny about that whole ADHD thing?
I was diagnosed as a young lad
and then re-diagnosed in my late 20s.
And I feel like I was always in denial
that it affected me.
Like, oh, I've got control over this.
I can manage this.
And being a dad, I realized that is not true.
I actually do, this is actually a real issue.
This ADHD thing is real.
And sometimes I have no governance
over what my mind switches focus to.
And it can be really tricky.
I mean, even when we're doing the show
I've got a pen in my hand right now so I can jot down notes.
So that way I don't squirrel away
and forget that I was gonna talk about something.
So I've kind of, you know,
created myself a few tools to manage it.
But how to ADHD.com sounds like the place
that he liked a lot.
So thanks for sending that in.
That is something to think about.
I'd like to, I think talking about challenges
of how to optimize how you work,
how do you get in the zone,
how do you do whatever you do really well.
I love talking about that stuff.
I feel like it's not like a love topic
but I'd be willing to talk about it somewhere sometime.
Maybe a live stream or something could do that.
Nick wrote in, he said,
hey guys, listening to Love 448 and I just heard
you mentioned Tor.
Check out Onion Share, an open source tool
that lets you share files and even host a small website.
Thanks for the show.
And it's at onionshare.org.
Also, just a quick pause before we get into it.
This is another thing I like about the boosts
is Nick sent that in while we were talking about it.
So he's hearing us talk about it in the app, right?
And he's hitting the boost button
while we're talking about Tor,
which I just think is super cool.
Have we talked about Onion Share before?
I feel like that must have come up on the show.
Oh no, you know there's a flat pack.
Yeah, yeah, we'll put a link to that in the show notes.
This is, I feel like maybe not getting enough attention
when I started looking at Onion Share
because it, yeah, it lets you share files
and receive files and send files and all that kind of stuff.
But it's also a chat client.
So you could do like a private chat over Tor.
You can generate URLs to link people to files
or to receive a file.
It's got all that kind of stuff.
Plus it's got this static website hosting
that lets you host a static website on Tor.
I mean, probably not the way
you're gonna wanna run a serious website,
but if you're just looking for something
for a day or two or whatever, I mean, I don't know.
This is really a lot.
Like that hosting a static website
kind of takes it up to the next level.
Like the sending files and chatting,
that almost feels like table stakes.
But then I see you host a website, I'm like, oh damn.
Looks like a nice little experience too.
Yeah, so yeah, man, check out onionshare.org.
That looks really good.
We have been talking about Tor behind the scenes.
And interestingly, if you go into the matrix
and you look at the LUP feedback channel in matrix,
they're like, that's what they've been talking about
for the last week is Tor and Onion stuff.
And just discussing like how Onion URLs work.
It's actually a really cool conversation.
And there's some conversation there about Obsidian as well.
So onionshare.org, go check that out.
And then one last thing while we're talking about podcasts
and the boosts, there are now 5,000 podcasts
according to Kevin Rook that are on the lightning network
for monetization, 5,000 podcasts.
So while it may sound early in our circle
where we are at in the Linux community,
there are other communities that are making this work
and have figured it out.
And that's where I'm kind of seeing some parallels
that I think could apply to the free software community
and what we're doing here.
That's it.
That's it.
Are you good?
Are we good?
I got it out of my system.
Thank you for letting me get on my soapbox.
Yeah, it helps.
You can keep the box.
That's just cause my feet were messy, right?
Yeah, that's yeah.
Boost to grand.
He spilled some onions too.
Yeah, that's true.
That's true.
I see you snuck a pic into today's doc there, Chris,
or at least what remains of today's doc.
Heroic Games Launcher, an open source GOG
and Epic Games Launcher, you know,
for the stuff that isn't on Steam.
Just basically that.
And if you get in yourself a deck,
it's a lot easier to just go the Flatpak route for stuff.
And that's why I thought this is some pretty good timing
for the Heroic Game Launcher to land as a Flatpak.
So I have a link to it up on Flathub.
And it's like what Wes said,
you can bring in your GOG games
and probably more importantly for me,
like I've got like maybe one Epic game ever.
But I, you know, what am I gonna do?
Install the Epic Windows software thing.
It's just junk.
So this lets you bypass all of that.
And if you have yourself one of them Deckard Cain devices,
you can put this on there.
And then maybe tell us about it.
Yeah, actually, I'd love to hear your thoughts on that.
I'd be really curious.
Let us know.
You can tweet us at Linux Unplugged
or the feedback page is linuxunplugged.com slash contact.
Or you know what?
Send us a gosh darn boost.
We'd love to get those too.
And we have that up during the day.
I watch them come in as people say stuff to us.
And then links to everything we talked about today
at linuxunplugged.com slash for Fortnite.
Keep an eye out.
We'll probably do some either,
we'll either do an episode of Linux Unplugged
or we'll do an extra in the future all about IPFS.
We did a lot of work on it.
We just, we feel like it deserves
a little more breathing room, you know?
You know, you can always subscribe
to some sort of all shows feed
if you just didn't wanna worry
about where that might show up.
Some kind of all shows feed.
Then you just get it all.
The self-hosted show, the Koda Radio show,
Linux Action News, which is a great companion to this show.
And of course, when we do an IPFS special
or an extra or whatever, and this here show.
You could also become a member at jupiter.signal
and support us that way.
And you get access to all the shows on the network,
ad free, the extended LUP recording,
self-hosted post-show and much more at jupiter.party.
I think that's what it is.
Come party with us at jupiter.party.
There you go.
Ha ha ha ha ha ha ha ha ha.
That's pretty good.
Okay.
All right.
See you back here next time.
We'll see you back here next time.
