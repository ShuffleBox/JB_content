WEBVTT

00:00.000 --> 00:02.040
So I've been trying out Google Stadia this week.

00:02.040 --> 00:02.560
Oh, boy.

00:02.560 --> 00:03.440
Just a little bit.

00:03.440 --> 00:04.320
Just a little bit.

00:04.320 --> 00:05.440
You hipster, you.

00:05.440 --> 00:07.720
Well, I decided to get the, what do they call it,

00:07.720 --> 00:09.640
like the Founders Pack or whatever.

00:09.640 --> 00:12.080
My thinking was, is twofold.

00:12.080 --> 00:14.360
This is going to be somewhat good for Linux gaming,

00:14.360 --> 00:16.480
even if it's a little, because it actually

00:16.480 --> 00:19.200
requires developers target Vulkan,

00:19.200 --> 00:20.560
and they have to target Linux.

00:20.560 --> 00:20.760
Right.

00:20.760 --> 00:22.280
That's what's running on the back end.

00:22.280 --> 00:23.360
And Google requires that.

00:23.360 --> 00:26.280
So I like that idea.

00:26.280 --> 00:30.840
But for me, it's sort of like outsourcing the bad,

00:30.840 --> 00:32.720
outsourcing the proprietary.

00:32.720 --> 00:38.800
With Stadia, I can have all free Intel drivers on my laptop,

00:38.800 --> 00:42.960
great power, low heat, all the stuff I want.

00:42.960 --> 00:44.640
But then I can open up a browser,

00:44.640 --> 00:50.000
and I can play actual, real, quality video games.

00:50.000 --> 00:51.160
That's the dream.

00:51.160 --> 00:52.680
And when you're done with it, you can forget about it,

00:52.680 --> 00:54.680
and you don't have this hardware laying around.

00:54.680 --> 00:57.600
Or maybe I get home, and all of a sudden,

00:57.600 --> 00:59.600
something changes in our plans, and I find myself

00:59.600 --> 01:00.960
with a free evening.

01:00.960 --> 01:04.360
All I've got is systems that are incapable of really gaming.

01:04.360 --> 01:06.160
And that happens three times a year.

01:06.160 --> 01:08.080
So you're not really wanting to invest.

01:08.080 --> 01:10.200
Well, then you've got to imagine, too,

01:10.200 --> 01:13.400
as far as disk space goes, games these days

01:13.400 --> 01:18.800
are anywhere from 20 to 100 plus gigs worth of storage.

01:18.800 --> 01:21.280
And if you don't play them all that often,

01:21.280 --> 01:23.280
you're just sitting there with a disk that's

01:23.280 --> 01:25.880
starting to fill up with games you don't play that often.

01:25.880 --> 01:26.720
I had that problem.

01:26.720 --> 01:27.840
I had Steam installed, and I was like,

01:27.840 --> 01:28.800
I haven't played for a while.

01:28.800 --> 01:29.800
I'm just going to delete all of this.

01:29.800 --> 01:31.200
And then you wanted to play with me,

01:31.200 --> 01:32.600
and I didn't have any of it ready.

01:32.600 --> 01:34.680
Steam Cash, bro, that's what you need to do.

01:34.680 --> 01:35.480
Yeah, I know.

01:35.480 --> 01:36.840
That's going to happen at the RV,

01:36.840 --> 01:38.560
but that's a topic for self-hosted.

01:38.560 --> 01:40.240
What were your first impressions?

01:40.240 --> 01:41.480
You got to try it a little bit.

01:41.480 --> 01:43.320
You had the controller wired into my PC,

01:43.320 --> 01:44.840
because that's the only way to do it.

01:44.840 --> 01:45.600
I'm impressed.

01:45.600 --> 01:49.640
I mean, I'm definitely in the casual gamer style,

01:49.640 --> 01:51.040
more than enough for my needs.

01:51.040 --> 01:53.080
And if I had not known about Stadia,

01:53.080 --> 01:55.160
and I just walked up and you gave me the controller,

01:55.160 --> 01:56.800
I was thinking I was playing any console.

01:56.800 --> 01:58.400
Have you ever played Destiny 2 before?

01:58.400 --> 01:58.880
Not two.

01:58.880 --> 02:00.280
I've played Destiny once.

02:00.280 --> 02:02.400
Because you walked in and cleaned that entire room

02:02.400 --> 02:03.160
out with a shotgun.

02:03.160 --> 02:05.840
I mean, I may have played some video games in a past life.

02:05.840 --> 02:08.520
I mean, you had some tactics, too.

02:08.520 --> 02:10.640
You went around the corner.

02:10.640 --> 02:13.000
So response-wise, it's pretty dead on.

02:13.000 --> 02:13.760
Yeah.

02:13.760 --> 02:16.440
What I see it as is you trade.

02:16.440 --> 02:19.000
So you could do some of these games on a cheaper GPU

02:19.000 --> 02:21.080
if you didn't want to invest every year, every couple

02:21.080 --> 02:22.720
of years, on a big GPU.

02:22.720 --> 02:24.280
But you'd have to turn down the textures,

02:24.280 --> 02:26.400
turn down the distance, turn down the reflections,

02:26.400 --> 02:28.240
the shadows, the lights.

02:28.240 --> 02:30.600
With Stadia, you can have mostly that stuff turned up

02:30.600 --> 02:32.320
pretty decently well.

02:32.320 --> 02:34.540
But you trade a little bit of fuzz

02:34.540 --> 02:35.880
when you've got a lot of motion.

02:35.880 --> 02:35.920
Right.

02:35.920 --> 02:37.520
It was a little bit of blur.

02:37.520 --> 02:39.760
But honestly, I mean, in the middle of the firefight,

02:39.760 --> 02:41.000
you don't notice any of that.

02:41.000 --> 02:42.640
You're not paying attention because you're just

02:42.640 --> 02:45.240
really focused on the thing you're shooting at.

02:45.240 --> 02:47.600
So I probably am going to stick with it.

02:47.600 --> 02:50.880
My next big commitment, though, would be to move up from the free games

02:50.880 --> 02:53.840
to the pay games, and they're full price, Wes.

02:53.840 --> 02:55.280
And they just live on Stadia.

02:55.280 --> 02:57.560
And of course, you're worried, how long is Stadia

02:57.560 --> 02:58.360
going to be around?

02:58.360 --> 02:59.200
I mean, yeah.

02:59.200 --> 02:59.880
It is Google.

02:59.880 --> 03:22.240
Hello, friends, and welcome in episode 329 of your Unplugged program.

03:22.240 --> 03:23.240
My name is Chris.

03:23.240 --> 03:24.240
My name is Wes.

03:24.240 --> 03:25.240
Hello, Mr. Payne.

03:25.240 --> 03:26.240
Hello.

03:26.240 --> 03:27.240
Big show.

03:27.240 --> 03:28.240
Huge show.

03:28.240 --> 03:29.240
Hello, Cheesy.

03:29.240 --> 03:31.640
We have about as many people in the quiet listening lobby

03:31.640 --> 03:32.800
as we do in the actual room.

03:32.800 --> 03:35.040
This new time has been interesting and well-attended.

03:35.040 --> 03:35.880
I really appreciate it.

03:35.880 --> 03:37.200
We're glad to see all of you.

03:37.200 --> 03:40.960
So this week, we're talking about a problem

03:40.960 --> 03:42.680
I've been trying to solve.

03:42.680 --> 03:46.320
In the spirit of free and open source, I am scratching my own itch this week.

03:46.320 --> 03:49.840
And I am NAT busting with my VPNs.

03:49.840 --> 03:54.600
I have a situation where I'm behind carrier-grade NAT at home.

03:54.600 --> 03:58.200
And I want to create an overlay network across all my machines

03:58.200 --> 04:02.400
that are on a Linno data center, on a Digital Ocean data center,

04:02.400 --> 04:06.200
in my RV, at the studio, when I'm traveling, on my laptop.

04:06.200 --> 04:09.360
I want an overlay network that spans the entire internet that

04:09.360 --> 04:10.920
puts them all on one LAN.

04:10.920 --> 04:11.400
Right.

04:11.400 --> 04:12.440
So you can just forget about it.

04:12.440 --> 04:14.240
It doesn't matter if you're here at the studio

04:14.240 --> 04:16.240
or you're down at Linux Academy headquarters.

04:16.240 --> 04:18.120
You can pop onto your home network no problem.

04:18.120 --> 04:21.440
There's a plethora of options to do this.

04:21.440 --> 04:23.840
We talk a lot about WireGuard.

04:23.840 --> 04:26.200
WireGuard's not necessarily the best solution for that.

04:26.200 --> 04:30.560
We'll tell you why, and we'll tell you what some of our favorite solutions are.

04:30.560 --> 04:33.320
And then we went and got interviews with the creators of them.

04:33.320 --> 04:35.080
So that's all coming up in today's episode.

04:35.080 --> 04:38.920
But first, we have some community news to get into.

04:38.920 --> 04:41.000
This one's nuts, Mr. Payne.

04:41.000 --> 04:46.560
Did you see this Android, which has its very own weird, strange kernel

04:46.560 --> 04:54.120
legacy, its own strange sets of patches, may, may, may end up going mainline.

04:54.120 --> 04:56.120
I actually think this is one of those initiatives

04:56.120 --> 04:58.200
that's going to die on the vine about a year in.

04:58.200 --> 05:03.080
Right, it seems like there's a lot of pressure and momentum against this.

05:03.080 --> 05:06.400
Yes, well, people don't like proprietary crap in the kernel.

05:06.400 --> 05:08.760
But the current Android ecosystem is really

05:08.760 --> 05:11.160
kind of polluted with hundreds of different versions of Android,

05:11.160 --> 05:14.640
each running a different variant of their own Linux kernel.

05:14.640 --> 05:16.520
Each version is designed for a different phone,

05:16.520 --> 05:17.680
and it's different configurations.

05:17.680 --> 05:19.040
That's always the way it's been.

05:19.040 --> 05:24.080
And Google has been working to fix that problem by mainlining the Linux kernel,

05:24.080 --> 05:27.200
just going with a straight upstream kernel one day.

05:27.200 --> 05:28.000
It's kind of the dream, right?

05:28.000 --> 05:29.640
I mean, we talk about all the great things about Linux

05:29.640 --> 05:31.200
and why upstream development is good.

05:31.200 --> 05:33.600
And of course, we don't get any of that on Android.

05:33.600 --> 05:35.960
And that's because before it reaches you,

05:35.960 --> 05:40.160
the Linux kernel on your Android phone goes through three major steps.

05:40.160 --> 05:42.920
First, Google has to take the long-term support version of the kernel,

05:42.920 --> 05:45.200
whichever one it's going to use for that version of Android,

05:45.200 --> 05:48.720
and then add all those Android-specific changes.

05:48.720 --> 05:51.880
This is called the Android Common Kernel.

05:51.880 --> 05:54.680
And then this code goes to the company that creates the system on a chip

05:54.680 --> 05:58.320
that actually runs your phone, which is probably Qualcomm.

05:58.320 --> 06:01.240
And once the system on a chip maker finishes adding all that code

06:01.240 --> 06:05.400
to support the CPU and whatever other chips are on there,

06:05.400 --> 06:08.480
the kernel is then passed on to the actual device maker,

06:08.480 --> 06:10.400
such as Samsung or Motorola.

06:10.400 --> 06:12.840
And then they add code to support the rest of the phone,

06:12.840 --> 06:14.240
like the display and the camera.

06:14.240 --> 06:17.760
Yeah, or maybe some new fancy feature that is their differentiator.

06:17.760 --> 06:19.480
Each of these steps takes a while to complete.

06:19.480 --> 06:22.440
That's how software and hardware development works.

06:22.440 --> 06:23.760
And it means that the end product,

06:23.760 --> 06:25.880
that kernel doesn't work with any other device.

06:25.880 --> 06:27.680
It also means that the kernel's very old,

06:27.680 --> 06:31.040
usually about two years old on an Android device when it ships.

06:31.040 --> 06:36.440
The Pixel 4, which shipped last month, has a kernel from November 2017.

06:36.440 --> 06:37.440
Ouch.

06:37.440 --> 06:40.240
I don't even want to know what kernel my Pixel 3 is running.

06:40.240 --> 06:40.880
I know.

06:40.880 --> 06:43.960
Now, Google did announce plans last year to fix this mess.

06:43.960 --> 06:46.000
Yeah, that's right.

06:46.000 --> 06:47.920
They said, we know what it takes to run Android,

06:47.920 --> 06:51.040
but not necessarily on any given hardware.

06:51.040 --> 06:54.480
So our goal is to basically find all of that out, then upstream it,

06:54.480 --> 06:57.800
and try to be as close to mainline as possible.

06:57.800 --> 07:00.000
Kind of sounds like maybe we won't get fully mainline,

07:00.000 --> 07:01.680
even in Google's vision.

07:01.680 --> 07:04.280
That might be difficult with Android's long history.

07:04.280 --> 07:05.440
It's a good goal, though.

07:05.440 --> 07:08.120
Yeah, they did show it off on a prototype up on stage.

07:08.120 --> 07:09.520
I don't think it was perfect, though.

07:09.520 --> 07:12.600
No, no, I don't think so.

07:12.600 --> 07:14.720
Does seem like some things were not working,

07:14.720 --> 07:18.520
like the battery percentage, which was stuck at zero.

07:18.520 --> 07:21.080
That sounds like the Librem.

07:21.080 --> 07:23.960
So what's Google's plan to make all this work?

07:23.960 --> 07:27.560
Well, they plan to take a page from their Project Treble playbook.

07:27.560 --> 07:30.280
Before Project Treble, the low-level code

07:30.280 --> 07:32.200
that interacted with the device in Android itself

07:32.200 --> 07:34.480
was just a big old stack of mess.

07:34.480 --> 07:36.480
What Project Treble did was it separated the two

07:36.480 --> 07:39.480
and made them modular, so Android updates could be shipped quicker,

07:39.480 --> 07:43.120
and the low-level code could remain unchanged between these updates.

07:43.120 --> 07:46.480
What Google wants to do is bring that same modularity to the kernel.

07:46.480 --> 07:50.680
Their plan, quote, involves stabilizing Linuxes in kernel ABI

07:50.680 --> 07:53.960
and having stable interfaces for the Linux kernel

07:53.960 --> 07:56.120
and hardware vendors to write to.

07:56.120 --> 08:00.560
Google wants to decouple the Linux kernel from its hardware support,

08:00.560 --> 08:01.600
end quote.

08:01.600 --> 08:04.000
So this means that Google would ship a kernel,

08:04.000 --> 08:06.400
and then hardware drivers would just be loaded

08:06.400 --> 08:08.800
as regular old kernel modules.

08:08.800 --> 08:12.960
Now, of course, this is just a proposal, and there are still

08:12.960 --> 08:16.560
quite a few technical problems that have yet to be solved.

08:16.560 --> 08:18.280
I mean, that does sound like a big change, right?

08:18.280 --> 08:19.760
That's a different way to approach things,

08:19.760 --> 08:22.040
although I can see why some decoupling would be nice

08:22.040 --> 08:25.240
given these slower cycles outside the kernel development.

08:25.240 --> 08:27.760
Yes, I don't actually think it's necessarily a bad idea.

08:27.760 --> 08:31.400
It's just such a radical change to serve one group's needs.

08:31.400 --> 08:34.920
It is a large group, but it is a radical change.

08:34.920 --> 08:40.200
I think the Android problem is not a unique one.

08:40.200 --> 08:42.840
There's probably thousands of hardware vendors,

08:42.840 --> 08:45.960
at smaller scales, in Google's shoes.

08:45.960 --> 08:49.920
They make a product that's an IoT device or something like that.

08:49.920 --> 08:51.120
It doesn't have to be Android.

08:51.120 --> 08:52.460
It could just be based on Linux.

08:52.460 --> 08:55.720
But it takes a long time for a group of people

08:55.720 --> 08:57.520
to build hardware and software.

08:57.520 --> 08:59.840
And so it's easy for a couple of years to go by,

08:59.840 --> 09:01.400
even if you're not a phone maker.

09:01.400 --> 09:04.040
Like, phone makers probably have it down at this point.

09:04.040 --> 09:06.040
They probably have it about as efficient as they can

09:06.040 --> 09:08.120
because profitability is driving that.

09:08.120 --> 09:12.160
But Fred's IoT shop that's making router boards and stuff

09:12.160 --> 09:14.160
that get shipped in 100 different Chinese types

09:14.160 --> 09:16.760
of knockoffs, they don't have that kind

09:16.760 --> 09:20.240
of efficiency of scale.

09:20.240 --> 09:22.120
It's probably a much wider spread problem.

09:22.120 --> 09:24.520
So there could be some real logic in doing this.

09:24.520 --> 09:27.360
I'll be curious to see what the upstream kernel community

09:27.360 --> 09:28.400
thinks of these proposals.

09:28.400 --> 09:30.360
Yeah, it doesn't seem like it's got initially

09:30.360 --> 09:31.600
a very good reaction.

09:31.600 --> 09:33.280
And I mean, I wonder how much of it

09:33.280 --> 09:35.280
do you lose some of those advantages, the things

09:35.280 --> 09:37.320
that the kernel community is always talking about,

09:37.320 --> 09:40.240
about getting proper upstream, traditional upstream support.

09:40.240 --> 09:42.240
How much of that will actually apply here?

09:42.240 --> 09:45.760
Yeah, they really want to see people just make it open source,

09:45.760 --> 09:47.560
make it GPL, and then it's just included.

09:47.560 --> 09:50.040
We'll all maintain it together.

09:50.040 --> 09:52.960
And that's a pretty deep philosophical outlook,

09:52.960 --> 09:56.960
which is why it's been really fascinating to watch

09:56.960 --> 10:01.560
WireGuard's slow march into mainstreaming.

10:01.560 --> 10:04.720
WireGuard is the VPN technology we traditionally

10:04.720 --> 10:06.520
talk about all the time on this show

10:06.520 --> 10:08.840
because we've been following it very closely.

10:08.840 --> 10:11.480
It's been held up by the adoption of its main crypto,

10:11.480 --> 10:13.480
which we thought may slide.

10:13.480 --> 10:15.480
We thought perhaps they were going to swap out

10:15.480 --> 10:17.600
the clever crypto that WireGuard uses for something

10:17.600 --> 10:19.160
already in the kernel.

10:19.160 --> 10:24.200
Well, this week, Linux 5.5 seems to support key elements

10:24.200 --> 10:27.480
of the zinc crypto effort, which WireGuard depends on,

10:27.480 --> 10:29.560
which I thought wasn't going to happen.

10:29.560 --> 10:31.720
I think what's happening here is when WireGuard

10:31.720 --> 10:35.920
was sort of released, the crypto stuff kind of came fully formed.

10:35.920 --> 10:38.280
And the kernel community doesn't always love, oh, here's

10:38.280 --> 10:39.800
this giant chunk of code.

10:39.800 --> 10:41.520
Will you apply this patch, please?

10:41.520 --> 10:43.760
So I think what needed to happen was the kernel community

10:43.760 --> 10:45.000
and working with the WireGuard community

10:45.000 --> 10:47.480
and sort of working out which pieces made the most sense

10:47.480 --> 10:49.560
and in what order are we going to start

10:49.560 --> 10:51.360
making some of these changes.

10:51.360 --> 10:54.720
Thankfully, what's landing in Linux 5.5

10:54.720 --> 10:58.560
is enough to unblock the dependencies in WireGuard.

10:58.560 --> 11:01.840
Now, with that said, WireGuard is not landing in 5.5,

11:01.840 --> 11:07.440
but should, emphasis on should, land in 5.6.

11:07.440 --> 11:10.600
Yeah, I'll believe it when I see it at this point.

11:10.600 --> 11:12.440
It's just been crazy because it's

11:12.440 --> 11:14.280
been every couple of releases, we're like,

11:14.280 --> 11:16.920
well, the next one from this is going to have WireGuard.

11:16.920 --> 11:19.000
I mean, the other good part here, too, is that we're just

11:19.000 --> 11:20.960
getting better crypto in the kernel, too, right?

11:20.960 --> 11:22.120
I mean, good point.

11:22.120 --> 11:23.320
Zinc looks like it's super good.

11:23.320 --> 11:25.120
But I think the thing that you'd mentioned

11:25.120 --> 11:26.880
is really the key underlying here.

11:26.880 --> 11:29.960
It's just enough to unblock WireGuard.

11:29.960 --> 11:31.640
So we're not getting a complete implementation.

11:31.640 --> 11:33.520
And there'll probably be continued discussions

11:33.520 --> 11:35.680
on more code changes in the future.

11:35.680 --> 11:36.840
I do love it, though.

11:36.840 --> 11:38.240
I think I could easily do an episode

11:38.240 --> 11:40.240
if we wanted on the open source projects

11:40.240 --> 11:42.600
that I'm loving this year, because the list is different

11:42.600 --> 11:44.560
than it was last year.

11:44.560 --> 11:46.720
And there's just so much good stuff.

11:46.720 --> 11:49.680
WireGuard is definitely on that list.

11:49.680 --> 11:50.360
Game changer.

11:50.360 --> 11:51.760
There's just some tools that they're

11:51.760 --> 11:53.460
great fundamental building blocks,

11:53.460 --> 11:55.460
and that means the things you can do with them

11:55.460 --> 11:56.200
are almost endless.

11:56.200 --> 11:58.080
It's funny we're talking about 5.5.

11:58.080 --> 12:01.480
It's probably worth mentioning that 5.4 just came out.

12:01.480 --> 12:02.520
Right.

12:02.520 --> 12:05.480
So it's actually just shipped as being kernel 5.4.

12:05.480 --> 12:07.820
And one notable thing that we've mentioned in the past

12:07.820 --> 12:11.120
is it's coming with that lockdown feature, as well

12:11.120 --> 12:14.160
as early extended FAT support.

12:14.160 --> 12:15.880
There's more details in Linux Headlines.

12:15.880 --> 12:17.240
If you're not listening to Linux Headlines,

12:17.240 --> 12:20.240
that's where we put that kind of stuff, linuxheadlines.show.

12:20.240 --> 12:21.240
I think that was the Monday episode,

12:21.240 --> 12:22.120
because I think I did that one.

12:22.120 --> 12:22.640
That's right.

12:22.640 --> 12:23.760
And I think I covered it in Monday.

12:23.760 --> 12:26.240
So the details are in the Monday episode of Linux Headlines.

12:26.240 --> 12:28.960
But it's everything you need to know

12:28.960 --> 12:32.120
in Linux and the world of open source in less than three

12:32.120 --> 12:32.620
minutes.

12:32.620 --> 12:33.540
Three minutes or less?

12:33.540 --> 12:34.120
It's so great.

12:34.120 --> 12:34.800
It's so great.

12:34.800 --> 12:37.040
Well, guess what, Mr. Payne?

12:37.040 --> 12:38.600
It's time for a little housekeeping.

12:38.600 --> 12:39.960
And it's about time.

12:39.960 --> 12:43.360
Last week, we talked about the System76 Superfan event.

12:43.360 --> 12:44.520
Well, cheesy.

12:44.520 --> 12:48.080
You got updates on that and some Pinebook updates, too.

12:48.080 --> 12:48.760
Yeah, absolutely.

12:48.760 --> 12:52.280
So we didn't get a lot of time to cover the Superfan event,

12:52.280 --> 12:53.860
because we were pretty packed that show.

12:53.860 --> 12:56.400
But I've done a write-up there.

12:56.400 --> 13:00.120
And if you go to linuxunplug.com and hit the Blog tab,

13:00.120 --> 13:01.760
you can check out that write-up.

13:01.760 --> 13:05.960
A lot of cool pictures and just really a great synopsis

13:05.960 --> 13:07.200
of the event itself.

13:07.200 --> 13:09.200
It was wonderful.

13:09.200 --> 13:12.640
It's really interesting to be around Linux nerds that

13:12.640 --> 13:15.280
are actually producing hardware.

13:15.280 --> 13:18.480
So it was just an experience that you'll

13:18.480 --> 13:19.720
have to go read for yourself.

13:19.720 --> 13:23.400
And I've also updated the jupyter.gallery page

13:23.400 --> 13:26.240
with some photos from that event as well,

13:26.240 --> 13:30.320
and also included a Pinebook Pro review.

13:30.320 --> 13:31.800
So if you caught last week's show

13:31.800 --> 13:33.760
and you want a little bit more information,

13:33.760 --> 13:36.700
I suggest you hit the linuxunplug.com blog

13:36.700 --> 13:39.300
and check out those posts as well.

13:39.300 --> 13:40.760
I love it, man.

13:40.760 --> 13:42.600
What's neat about that gallery, first of all,

13:42.600 --> 13:44.560
I got to say, these posts, you did a great job.

13:44.560 --> 13:46.400
So thank you for writing these up.

13:46.400 --> 13:48.000
But what I love about that gallery

13:48.000 --> 13:51.680
is you get to see some insides of the System76 warehouse.

13:51.680 --> 13:52.840
You got some in this post, too.

13:52.840 --> 13:54.520
I love this picture of Carl.

13:54.520 --> 13:56.400
He should make that his Twitter profile.

13:56.400 --> 13:57.560
That's amazing.

13:57.560 --> 13:58.560
That's really good.

13:58.560 --> 14:01.160
So you can find those linuxunplug.com slash articles.

14:01.160 --> 14:02.480
This is something we try to do.

14:02.480 --> 14:05.400
You know, we talk about this stuff in the show.

14:05.400 --> 14:09.420
But we've recently, within like the last nine months or so,

14:09.420 --> 14:12.560
started doing these write-ups and posting these pictures.

14:12.560 --> 14:14.600
So that way, you actually have a little more, too,

14:14.600 --> 14:15.600
than what we're just saying here.

14:15.600 --> 14:16.880
You can go see what we're talking about,

14:16.880 --> 14:18.000
get a better sense of the vibe.

14:18.000 --> 14:20.320
And Cheezy has been doing a great job of updating

14:20.320 --> 14:22.000
the jupyter.gallery, jupyter.gallery.

14:22.000 --> 14:23.840
So go check that stuff out.

14:23.840 --> 14:26.600
Al, also, did you mention your ThinkPads with Popeye episode?

14:26.600 --> 14:29.880
Oh, dude, that was such a fun episode with Popeye.

14:29.880 --> 14:32.520
Anybody that's looking at like a used ThinkPad

14:32.520 --> 14:36.760
and wants to kind of know what might be the right one for them,

14:36.760 --> 14:41.840
but also what you can replace and fix after you've

14:41.840 --> 14:43.960
bought the ThinkPad, that stuff blew my mind.

14:43.960 --> 14:45.120
I had no idea.

14:45.120 --> 14:46.040
No idea.

14:46.040 --> 14:47.160
So that was a great episode.

14:47.160 --> 14:48.280
That's over at Extras.

14:48.280 --> 14:50.040
And while I'm talking about Extras,

14:50.040 --> 14:53.240
well, I'll mention it because we're on a roll right now.

14:53.240 --> 14:54.240
Extras is on YouTube.

14:54.240 --> 14:55.740
All of them are now posted on YouTube.

14:55.740 --> 14:58.040
If you're a YouTube connoisseur, I'll

14:58.040 --> 14:59.200
have a link to the channel.

14:59.200 --> 15:00.280
We don't have any subscribers yet

15:00.280 --> 15:01.680
because we just turned this thing on.

15:01.680 --> 15:02.520
So we don't have a name.

15:02.520 --> 15:04.040
Go subscribe, and you'll get little notifications

15:04.040 --> 15:05.000
when we get new stuff in there.

15:05.000 --> 15:07.040
How many subs do we got to get to name it?

15:07.040 --> 15:07.960
100, maybe?

15:07.960 --> 15:08.760
Maybe it's 1,000.

15:08.760 --> 15:09.480
Might be 1,000.

15:09.480 --> 15:10.480
Either way, we need your help.

15:10.480 --> 15:10.980
Yeah.

15:10.980 --> 15:14.600
So you'll find the link at linuxunplug.com slash 329.

15:14.600 --> 15:16.760
Go subscribe so that way we can give it a name.

15:16.760 --> 15:19.240
And we'll be posting all of the Extras on YouTube

15:19.240 --> 15:20.800
as well as extras.show.

15:20.800 --> 15:23.880
It's all over there, including that Popeye on ThinkPads

15:23.880 --> 15:24.720
episode.

15:24.720 --> 15:27.120
That extra stuff is so good.

15:27.120 --> 15:29.760
I should also mention, Brent isn't here today,

15:29.760 --> 15:33.080
but he did message me earlier and said,

15:33.080 --> 15:36.760
a new Brunch with Brent is out with Jacob, and it's fantastic.

15:36.760 --> 15:40.320
He talks about how TechSnap specifically

15:40.320 --> 15:41.360
got him into the industry.

15:41.360 --> 15:41.840
Oh, yeah.

15:41.840 --> 15:44.000
It sounds like a, I've not had a chance to listen.

15:44.000 --> 15:44.640
Yeah.

15:44.640 --> 15:45.840
Because it just came out this morning.

15:45.840 --> 15:46.560
Jacob's a good guy, though.

15:46.560 --> 15:47.560
I've had breakfast with Jacob.

15:47.560 --> 15:48.040
It's good.

15:48.040 --> 15:48.560
It's good.

15:48.560 --> 15:50.520
Brunch with Brent and breakfast with Jacob.

15:50.520 --> 15:52.000
All right, that's the housekeeping.

15:52.000 --> 15:54.600
Now, let's get into these net-busting VPNs.

15:54.600 --> 15:56.960
So we're not talking about WireGuard this week.

15:56.960 --> 16:00.840
This week, we want to create a mesh network of sense,

16:00.840 --> 16:03.200
or an overlay network.

16:03.200 --> 16:09.040
And the granddaddy from the 90s in this space is Tink.

16:09.040 --> 16:11.680
So how does Tink differentiate from WireGuard, Wes?

16:11.680 --> 16:13.240
Tink is quite different from WireGuard.

16:13.240 --> 16:14.920
WireGuard is very simple, which is great.

16:14.920 --> 16:16.960
That's one of the things we love about WireGuard.

16:16.960 --> 16:18.880
But when you're making a WireGuard connection,

16:18.880 --> 16:21.400
you're really just making one point-to-point link here.

16:21.400 --> 16:24.240
You've got the machine you're connecting to,

16:24.240 --> 16:26.160
and the machine you're connecting from.

16:26.160 --> 16:28.080
Tink can do a whole lot more.

16:28.080 --> 16:30.520
Not only does it also have support for things like Layer

16:30.520 --> 16:32.960
2, but it's a mesh network.

16:32.960 --> 16:35.120
So it has a concept of understanding

16:35.120 --> 16:37.160
all the different nodes you've got on the network.

16:37.160 --> 16:38.280
It manages that.

16:38.280 --> 16:39.680
The best routes to those nodes.

16:39.680 --> 16:41.240
And it can figure out the best routes

16:41.240 --> 16:42.320
to traverse that network.

16:42.320 --> 16:46.200
So as long as two nodes that you've got on your Tink network

16:46.200 --> 16:49.440
can talk through somehow, they will find a way.

16:49.440 --> 16:51.960
So you could set up a public relay on a VPS,

16:51.960 --> 16:53.640
and you could have my systems, which

16:53.640 --> 16:56.160
are behind a massive carrier-grade NAT.

16:56.160 --> 16:58.920
It is punishingly awful.

16:58.920 --> 17:00.480
But Tink can accommodate that.

17:00.480 --> 17:01.360
Yes, very much so.

17:01.360 --> 17:03.560
It'll try to figure out whatever.

17:03.560 --> 17:05.100
Yeah, you just need enough information,

17:05.100 --> 17:07.960
and usually having some sort of public node not behind NAT.

17:07.960 --> 17:09.520
That will make things a lot easier.

17:09.520 --> 17:11.400
But it's got a lot of sophisticated NAT

17:11.400 --> 17:14.040
busting integrated right inside of it.

17:14.040 --> 17:17.200
So we sat down with one of the original creators of Tink,

17:17.200 --> 17:20.880
and we asked how did he get the idea for Tink to begin with?

17:20.880 --> 17:27.320
It started out when I found this new feature in one

17:27.320 --> 17:28.920
of the very early Linux kernels.

17:28.920 --> 17:30.800
So it was called EtherTap.

17:30.800 --> 17:34.440
It was the predecessor to what's now called TUN.

17:34.440 --> 17:38.800
And yeah, I wrote a little program to experiment with it.

17:38.800 --> 17:42.060
And then naturally, I created some kind of tool

17:42.060 --> 17:45.680
to create a network connection between two computers

17:45.680 --> 17:47.680
and tunnel the packets back and forth.

17:47.680 --> 17:52.920
And yeah, so that was already a working kind of VPN,

17:52.920 --> 17:56.800
except it didn't do encryption, or it was very hard

17:56.800 --> 17:58.960
to actually set it up.

17:58.960 --> 18:00.680
I had to do a lot of things manually.

18:00.680 --> 18:05.080
And then a friend, Ivo Timmermans, he joined in.

18:05.080 --> 18:08.120
And he actually took this a step further,

18:08.120 --> 18:12.240
and he made a proper demon out of it, introduced encryption.

18:12.240 --> 18:15.480
And then yeah, also with some other people who joined in.

18:15.480 --> 18:18.400
But I think Ivo and me were the people who

18:18.400 --> 18:19.880
coded most in the beginning.

18:19.880 --> 18:21.680
So how long ago was this, roughly?

18:21.680 --> 18:24.400
So we started in 1997.

18:24.400 --> 18:26.280
Wow, that was a whole other internet.

18:26.280 --> 18:27.960
That is literally another internet ago.

18:27.960 --> 18:29.240
Yes.

18:29.240 --> 18:30.000
What's that like?

18:30.000 --> 18:31.400
What's it like a project like this?

18:31.400 --> 18:34.540
I mean, there must have been moments of security panic.

18:34.540 --> 18:36.400
There must have been moments of trying

18:36.400 --> 18:37.920
to decide if it's worth modernizing

18:37.920 --> 18:38.800
as the kernel changes.

18:38.800 --> 18:40.800
I mean, there must have been all kinds of things

18:40.800 --> 18:42.400
to keep up with over that time period.

18:42.400 --> 18:43.960
Yes.

18:43.960 --> 18:47.120
Well, you mentioned a few things that indeed happened.

18:47.120 --> 18:51.000
It started out as kind of a hobby project.

18:51.000 --> 18:53.080
So we were all students back then.

18:53.080 --> 18:57.040
And we actually wanted to have our own private network

18:57.040 --> 19:02.360
so we could exchange files easily without having to,

19:02.360 --> 19:06.880
well, without being that visible to the rest of the network.

19:06.880 --> 19:08.000
Of course.

19:08.000 --> 19:11.280
And well, one thing was that, of course,

19:11.280 --> 19:15.080
we were not the first one to invent a tool like this.

19:15.080 --> 19:16.960
There were already commercial solutions.

19:16.960 --> 19:21.960
Or I think we had VTUN and SIPE in the Linux world

19:21.960 --> 19:23.480
that did something similar.

19:23.480 --> 19:25.880
Was the beauty, though, that it really sort of created

19:25.880 --> 19:28.960
a truly flat mesh network?

19:28.960 --> 19:31.600
I mean, you could have friends all over the world,

19:31.600 --> 19:33.800
essentially, that are in one flat network.

19:33.800 --> 19:34.680
Exactly.

19:34.680 --> 19:40.040
So for example, Evo was not in the same city as we were.

19:40.040 --> 19:42.080
So this was a good way to make sure

19:42.080 --> 19:43.480
that we could access his computer

19:43.480 --> 19:49.320
and run things like IRC and FTP.

19:49.320 --> 19:51.680
I like the idea you can use it for development resources

19:51.680 --> 19:53.880
of the project you're developing.

19:53.880 --> 19:54.680
Absolutely.

19:54.680 --> 19:55.840
Yeah.

19:55.840 --> 19:58.920
So I noticed that the project for a while

19:58.920 --> 20:02.880
has been nearing 1.1.

20:02.880 --> 20:05.120
So it doesn't seem like the project's moving at 100 miles

20:05.120 --> 20:05.640
per hour.

20:05.640 --> 20:08.000
But just as of a couple of months ago,

20:08.000 --> 20:09.520
there was an update on the news list.

20:09.520 --> 20:11.040
So things are still continuing.

20:11.040 --> 20:13.000
So development continues.

20:13.000 --> 20:16.160
How would you describe the pace and future velocity of that?

20:16.160 --> 20:18.440
Yeah, it's very slow, sadly.

20:18.440 --> 20:20.720
So 1.0 is quite stable.

20:20.720 --> 20:24.400
And I'm not planning to add any features to that.

20:24.400 --> 20:28.080
There are still users who sometimes find bugs or say,

20:28.080 --> 20:29.960
well, OK, with this little change,

20:29.960 --> 20:32.720
it will be more useful for us.

20:32.720 --> 20:34.800
So then we try to implement that.

20:34.800 --> 20:37.360
And then, of course, yeah, there's 1.1,

20:37.360 --> 20:40.040
which is a big improvement over 1.0.

20:40.040 --> 20:43.320
I just need to find time to finally finish this.

20:43.320 --> 20:44.560
Of course, that's always hard.

20:44.560 --> 20:46.880
I thought several years ago that I would have the time

20:46.880 --> 20:47.400
to do this.

20:47.400 --> 20:50.840
But unfortunately, I'm not a student anymore.

20:50.840 --> 20:52.920
So I have a proper job and a life.

20:52.920 --> 20:54.400
Real work comes first, yeah.

20:54.400 --> 20:56.520
What sort of features might we be looking forward

20:56.520 --> 20:58.200
to when you do find that time?

20:58.200 --> 21:00.200
I think already a lot of the features

21:00.200 --> 21:03.200
that I want to have in 1.1 are there.

21:03.200 --> 21:05.760
But there are some rough edges that I

21:05.760 --> 21:07.840
want to have smoothed out.

21:07.840 --> 21:10.120
One of them is, for example, key management.

21:10.120 --> 21:13.360
So already it's a big improvement over 1.0.

21:13.360 --> 21:17.320
It's much easier to create keys, exchange keys with others,

21:17.320 --> 21:18.560
also in a secure way.

21:18.560 --> 21:19.840
Oh, that's great.

21:19.840 --> 21:24.160
But one of the issues is still, I would say,

21:24.160 --> 21:25.640
handling key renewal.

21:25.640 --> 21:30.600
If, for example, your public key is compromised somehow,

21:30.600 --> 21:31.600
you want to update it.

21:31.600 --> 21:34.320
You want to make sure that all the other nodes in the network

21:34.320 --> 21:38.080
get that new key in a safe way.

21:38.080 --> 21:38.840
Yeah, absolutely.

21:38.840 --> 21:42.120
Also, if you don't trust someone anymore at the moment,

21:42.120 --> 21:46.800
it's kind of a manual process to block this person or this node

21:46.800 --> 21:48.960
on all the other nodes.

21:48.960 --> 21:51.440
And it would also be great if that would be done

21:51.440 --> 21:53.320
in a much more automated way.

21:53.320 --> 21:55.760
But that requires some changes.

21:55.760 --> 21:57.440
So there is no infrastructure at the moment

21:57.440 --> 22:00.920
to spread that information throughout the network.

22:00.920 --> 22:03.840
Right, that sounds like a lot of coordinating to coordinate.

22:03.840 --> 22:05.960
Yes.

22:05.960 --> 22:09.720
I'm curious what you might see on the larger

22:09.720 --> 22:11.560
side of a Tink network.

22:11.560 --> 22:14.520
How many nodes have you seen out there?

22:14.520 --> 22:17.920
So myself, I've seen networks of over 500 nodes.

22:17.920 --> 22:20.640
One of the biggest ones that is kind of public

22:20.640 --> 22:23.600
is the Kales VPN network.

22:23.600 --> 22:27.320
So it's kind of the European hackerspaces.

22:27.320 --> 22:31.080
They are united using this network.

22:31.080 --> 22:35.400
There's actually a counterpart in the US, DN42,

22:35.400 --> 22:36.920
where they use various technologies,

22:36.920 --> 22:38.320
including also Tink.

22:38.320 --> 22:40.680
That's quite a large network.

22:40.680 --> 22:43.920
But I've heard from other people that they

22:43.920 --> 22:45.880
have similar-sized networks.

22:45.880 --> 22:49.600
And there are also businesses, companies

22:49.600 --> 22:53.120
that use Tink internally to connect offices together.

22:53.120 --> 22:57.360
And it's very hard to get information of exactly how

22:57.360 --> 22:58.880
many nodes they have and so on.

22:58.880 --> 23:00.800
Yeah, I would imagine people are in part

23:00.800 --> 23:01.800
doing this for security.

23:01.800 --> 23:03.800
So they're not keen to share all their details.

23:03.800 --> 23:05.840
No.

23:05.840 --> 23:08.920
But I'm just always fascinated, because I

23:08.920 --> 23:13.680
can see it working well for myself with a dozen nodes.

23:13.680 --> 23:15.960
But I was just curious, since I probably

23:15.960 --> 23:17.080
won't ever take it that far.

23:17.080 --> 23:20.840
I was just kind of interested to see how far it could go.

23:20.840 --> 23:23.400
So it sounds like 1.1 is still out in the works,

23:23.400 --> 23:25.640
but not necessarily a timetable.

23:25.640 --> 23:27.640
But as far as features go, really,

23:27.640 --> 23:30.480
everything that's in the release now is pretty solid.

23:30.480 --> 23:31.520
It's there.

23:31.520 --> 23:33.640
It's fairly feature-complete.

23:33.640 --> 23:35.720
As we noted, Tink's been around for a while.

23:35.720 --> 23:37.720
I'm curious if there's any features about Tink,

23:37.720 --> 23:40.560
things you love that stand out as reasons to use Tink.

23:40.560 --> 23:42.880
I mean, there are more competitors these days,

23:42.880 --> 23:44.640
but Tink is still great software.

23:44.640 --> 23:45.280
Yeah.

23:45.280 --> 23:48.520
Well, one thing that I think makes Tink stand out

23:48.520 --> 23:52.560
is it doesn't impose any kind of restrictions

23:52.560 --> 23:54.760
on the network topology use.

23:54.760 --> 23:56.280
If you try to configure Tink, you

23:56.280 --> 23:58.800
will notice that there is nothing in a configuration

23:58.800 --> 24:03.640
file that basically says use this IP address or this subnet.

24:03.640 --> 24:05.120
Basically, it says, well, yeah, you

24:05.120 --> 24:08.480
can create a script yourself, which Tink will call for you.

24:08.480 --> 24:10.440
But in the script, you have to configure actually

24:10.440 --> 24:13.280
the virtual network interface that's created by Tink.

24:13.280 --> 24:13.760
Right.

24:13.760 --> 24:14.900
So you have all the control.

24:14.900 --> 24:17.440
You can modify that, make it configure whatever you need.

24:17.440 --> 24:17.920
Yeah.

24:17.920 --> 24:18.720
That is great.

24:18.720 --> 24:19.220
Right.

24:19.220 --> 24:20.800
And it also strikes me as similar,

24:20.800 --> 24:24.480
Tink supports Layer 2, which a lot of the newer VPN solutions

24:24.480 --> 24:25.440
just sort of skip.

24:25.440 --> 24:28.840
But that can make for very flexible implementations.

24:28.840 --> 24:29.320
Yes.

24:29.320 --> 24:30.400
Yeah.

24:30.400 --> 24:32.680
It seems particularly attractive for someone like myself

24:32.680 --> 24:33.640
who's behind a NAT.

24:33.640 --> 24:36.000
And it's a particularly challenging NAT.

24:36.000 --> 24:37.120
I've got a VPS.

24:37.120 --> 24:38.920
I can throw Tink on that as well.

24:38.920 --> 24:41.800
And Tink can sort of navigate that for me

24:41.800 --> 24:42.880
and solve that problem.

24:42.880 --> 24:44.960
And that's what makes it really special for me.

24:44.960 --> 24:46.640
Well, Hus, thank you so much for joining us

24:46.640 --> 24:49.320
and just kind of giving us some background details on it.

24:49.320 --> 24:50.760
I find this stuff fascinating.

24:50.760 --> 24:52.520
And your project is one of those that's

24:52.520 --> 24:54.600
been around for such a long time.

24:54.600 --> 24:57.120
It's sort of an unsung hero to a lot of people

24:57.120 --> 24:59.120
where they find it solves that perfect problem.

24:59.120 --> 25:02.480
But it's not a project that gets a ton of attention either.

25:02.480 --> 25:03.920
Really appreciate you taking a moment

25:03.920 --> 25:05.360
so we could shine a little light on it.

25:05.360 --> 25:06.720
Well, thank you for having me.

25:06.720 --> 25:08.760
So let's kind of define more specifically

25:08.760 --> 25:11.080
how we're using the term overlay network

25:11.080 --> 25:12.240
and what we're using it for.

25:12.240 --> 25:14.680
I'll give you an example, a day-to-day example.

25:14.680 --> 25:18.120
Myself, Drew, and Wes, we all have home studios.

25:18.120 --> 25:20.520
And we'll sometimes need to connect into resources here

25:20.520 --> 25:22.160
for production purposes.

25:22.160 --> 25:25.240
Or sometimes Chris forgets to export an episode of Linux

25:25.240 --> 25:27.800
Action News and somebody needs to remote in and.

25:27.800 --> 25:28.560
Never happens.

25:28.560 --> 25:30.760
Never happens.

25:30.760 --> 25:34.400
And we all need to connect back to JP1.

25:34.400 --> 25:37.320
I would like to connect to my home network

25:37.320 --> 25:39.800
as well, regardless of where I'm at from my laptop,

25:39.800 --> 25:43.240
and be able to connect to the JP1 infrastructure.

25:43.240 --> 25:45.720
And so I needed a solution that could kind of create

25:45.720 --> 25:48.040
an overlay network for all of this, one LAN.

25:48.040 --> 25:50.600
Right, there's sort of a magical feeling

25:50.600 --> 25:53.600
when you have a flat network, because everything's

25:53.600 --> 25:54.120
accessible.

25:54.120 --> 25:55.920
It just feels right next to you, right,

25:55.920 --> 25:57.000
and right at your fingertips.

25:57.000 --> 25:58.800
Yeah, yeah, things that do auto discovery,

25:58.800 --> 26:00.960
like old video games, like StarCraft.

26:00.960 --> 26:02.200
You can all see each other.

26:02.200 --> 26:04.480
It's a really unique experience, because you

26:04.480 --> 26:08.320
can be on a Raspberry Pi on a MiFi connection in an RV

26:08.320 --> 26:11.200
and be pinging a box in the studio

26:11.200 --> 26:12.760
like it's just a local machine.

26:12.760 --> 26:14.440
Right, and you can simplify some things

26:14.440 --> 26:16.080
and work across regions.

26:16.080 --> 26:17.560
Maybe you've got different providers or different data

26:17.560 --> 26:18.040
centers.

26:18.040 --> 26:20.200
You can make things flat that way, too.

26:20.200 --> 26:23.960
Unfortunately, I've used Tink, and we started evaluating Tink

26:23.960 --> 26:25.960
for our use case here.

26:25.960 --> 26:28.800
And we ran into some problems, because really, we've

26:28.800 --> 26:30.920
got a few different security domains.

26:30.920 --> 26:33.400
I don't need access to your home network.

26:33.400 --> 26:35.840
And really, there's some parts of the studio that not every,

26:35.840 --> 26:37.800
you know, we only need access to a few machines

26:37.800 --> 26:39.320
here at the studio.

26:39.320 --> 26:41.840
Tink doesn't really have any filtering capabilities.

26:41.840 --> 26:45.040
There's nothing built in to help you manage

26:45.040 --> 26:47.040
multiple different sets of users.

26:47.040 --> 26:49.600
And when you want to add a new host, well,

26:49.600 --> 26:50.640
if I want to talk to a new machine

26:50.640 --> 26:52.280
that you've added to the studio, you've

26:52.280 --> 26:53.880
got to go give me a new file that's

26:53.880 --> 26:55.520
got all the information about that.

26:55.520 --> 26:57.040
And that works OK for a few machines.

26:57.040 --> 26:58.920
But if Drew's adding a new machine

26:58.920 --> 27:02.120
that he wants to share with us, it gets tedious fast.

27:02.120 --> 27:03.560
Wes and I were pretty excited when

27:03.560 --> 27:09.400
we saw Slack announce Nebula, an open source global overlay

27:09.400 --> 27:10.540
network.

27:10.540 --> 27:12.520
And we invited Ryan on to tell us about it.

27:12.520 --> 27:15.000
Ryan, this seems like something that's, A, I mean,

27:15.000 --> 27:17.120
it's pretty notable that it's a pretty big open source

27:17.120 --> 27:19.880
project from Slack, but B, it seems

27:19.880 --> 27:21.680
like it's pretty well-developed.

27:21.680 --> 27:24.640
Like, it's a complete ready-to-go solution.

27:24.640 --> 27:25.640
Yeah, that's right.

27:25.640 --> 27:29.080
You know, it's funny to have Nebula out in the wild

27:29.080 --> 27:30.960
and people seeing it for the first time

27:30.960 --> 27:35.240
because it's actually old news inside of Slack at this point.

27:35.240 --> 27:37.240
It's three years old.

27:37.240 --> 27:37.760
Oh, wow.

27:37.760 --> 27:38.480
OK, yeah.

27:38.480 --> 27:41.240
So you've been using it in production for a while then?

27:41.240 --> 27:43.800
It's been in production for about two of those years.

27:43.800 --> 27:45.800
All right, so an overlay network,

27:45.800 --> 27:48.880
it seems like you could have accomplished this possibly

27:48.880 --> 27:52.200
using IPSec or maybe even WireGuard with some really

27:52.200 --> 27:53.480
sophisticated routing.

27:53.480 --> 27:56.960
I'm guessing that was tried and done and didn't work.

27:56.960 --> 27:58.960
Where did that kind of fall down for you guys?

27:58.960 --> 28:02.000
So our original network, and are you

28:02.000 --> 28:04.880
going to provide a link to the blog post in the show notes

28:04.880 --> 28:05.440
possibly?

28:05.440 --> 28:06.400
Absolutely.

28:06.400 --> 28:09.640
Your Medium post and also the official announcement too

28:09.640 --> 28:10.360
on the, you bet.

28:10.360 --> 28:13.040
Yeah, we've been reading it voraciously.

28:13.040 --> 28:13.600
Great.

28:13.600 --> 28:17.440
Yeah, so we actually did IPSec originally.

28:17.440 --> 28:22.280
And we ran into, so at first it was fine, right?

28:22.280 --> 28:25.960
As you expand out, you have one region in a cloud provider

28:25.960 --> 28:27.040
and everything's fine.

28:27.040 --> 28:28.680
And then you expand to another region

28:28.680 --> 28:31.480
and IPSec was kind of the obvious choice

28:31.480 --> 28:33.280
for connecting multiple regions.

28:33.280 --> 28:34.680
It was the most supported way.

28:34.680 --> 28:38.360
There weren't, there are now in the past year or so,

28:38.360 --> 28:43.200
they've added support for connecting remote regions that

28:43.200 --> 28:46.440
don't require VPN, but we can get into that in a minute.

28:46.440 --> 28:49.920
So we used IPSec out of the gate and it actually

28:49.920 --> 28:52.400
worked fine in the beginning.

28:52.400 --> 28:55.640
But as we scaled up, the complexity grew.

28:55.640 --> 29:01.960
And I jokingly called our IPSec set up our RAID 0 network

29:01.960 --> 29:06.280
configuration because the problem was

29:06.280 --> 29:09.600
you had to do these kind of strange routing tricks

29:09.600 --> 29:12.320
because no one box could handle the traffic.

29:12.320 --> 29:18.080
And because of that, if you lost any of the boxes on one side,

29:18.080 --> 29:20.120
even one of them, you lost routing

29:20.120 --> 29:22.160
to an unknown number of nodes.

29:22.160 --> 29:25.720
And so it wasn't really viable to keep

29:25.720 --> 29:27.280
running that remote region that way.

29:27.280 --> 29:29.200
So we would have to offline an entire region,

29:29.200 --> 29:31.360
hence RAID 0 network configuration.

29:31.360 --> 29:32.520
No kidding.

29:32.520 --> 29:34.040
That was one of the major challenges.

29:34.040 --> 29:37.520
And so we were already many thousands of servers

29:37.520 --> 29:38.120
at that point.

29:38.120 --> 29:40.560
And there were also folks that dissuaded us

29:40.560 --> 29:45.480
from using IPSec at scales that we were planning to hit.

29:45.480 --> 29:48.040
And I can't speak to whether they were correct or not,

29:48.040 --> 29:52.000
but that was a caution that even some folks that

29:52.000 --> 29:55.680
work with IPSec regularly, they said in transport mode, which

29:55.680 --> 29:58.560
is sort of the node to node version of IPSec,

29:58.560 --> 30:02.200
they said you might start to see performance issues when

30:02.200 --> 30:03.240
you're above 1,000 nodes.

30:03.240 --> 30:05.800
And again, this is secondhand, so I'm not

30:05.800 --> 30:07.040
saying that we saw that.

30:07.040 --> 30:10.440
I'm just saying that was kind of a warning that I was given.

30:10.440 --> 30:14.680
And so when we thought about the problem also,

30:14.680 --> 30:18.840
we looked at kind of traditional VPNs.

30:18.840 --> 30:23.400
And one of the things that we didn't care for

30:23.400 --> 30:27.200
was having to tell every node about every other node

30:27.200 --> 30:27.920
ahead of time.

30:27.920 --> 30:29.120
Right, that's a lot of overhead.

30:29.120 --> 30:31.240
You have to manage it somewhere, configuration management,

30:31.240 --> 30:32.360
or it's got to be somewhere.

30:32.360 --> 30:33.800
Yeah, and it's not just that.

30:33.800 --> 30:37.040
But think about when you get to many thousands of nodes,

30:37.040 --> 30:39.720
say you're running a dynamic environment where

30:39.720 --> 30:42.480
hosts come up and autoscale and that kind of thing.

30:42.480 --> 30:45.560
A host comes up, and you have to ensure

30:45.560 --> 30:50.040
with some measure of certainty that every other host it

30:50.040 --> 30:54.200
might talk to has the proper key before it starts

30:54.200 --> 30:56.080
talking to that host, right?

30:56.080 --> 30:58.800
And that becomes a complex to manage problem when you're

30:58.800 --> 31:00.760
talking thousands of hosts.

31:00.760 --> 31:04.160
And so we went a different way with Nebula,

31:04.160 --> 31:07.240
and we did certificate-based authentication between nodes.

31:07.240 --> 31:10.280
And another part that I note, I mean,

31:10.280 --> 31:12.000
certificate authentication is notable,

31:12.000 --> 31:14.000
but the other thing that I noted about this that

31:14.000 --> 31:16.280
seems to stand out is groups play

31:16.280 --> 31:19.360
a large role in sort of the access control of this.

31:19.360 --> 31:22.000
That was one of the events that was really

31:22.000 --> 31:24.480
the moment we decided to write Nebula.

31:24.480 --> 31:28.760
And so the primary authors are myself and Nate Brown,

31:28.760 --> 31:31.280
who also works at Slack and has worked there

31:31.280 --> 31:32.480
for four and a half years.

31:32.480 --> 31:35.040
By the way, a bit of history, I've worked there five years

31:35.040 --> 31:36.600
and was the first security employee.

31:36.600 --> 31:38.760
Nate has worked there four and a half years

31:38.760 --> 31:40.240
and was the second security employee.

31:40.240 --> 31:41.080
So we've-

31:41.080 --> 31:41.920
That is fantastic.

31:41.920 --> 31:43.160
Yeah, so we've been there quite a while,

31:43.160 --> 31:45.040
and we've actually done some really fun work

31:45.040 --> 31:45.880
outside of this.

31:45.880 --> 31:48.400
But so we were actually just chatting,

31:48.400 --> 31:51.840
and we were actually, I know you mentioned Tink.

31:51.840 --> 31:54.120
Before the show, we were talking about that briefly.

31:54.120 --> 31:55.200
I really liked Tink.

31:55.200 --> 31:57.800
Tink's this great project from the 90s,

31:57.800 --> 31:59.920
and I think the guy's name is Gus

31:59.920 --> 32:00.880
that's been working on it.

32:00.880 --> 32:05.680
And it's got some really, really cool routing tricks

32:05.680 --> 32:08.840
and sort of gets around NAT and that kind of thing.

32:08.840 --> 32:11.600
And so we actually very seriously looked at

32:11.600 --> 32:13.160
what it would take to use Tink

32:13.160 --> 32:16.440
or maybe contribute back to Tink and go that route.

32:16.440 --> 32:19.240
But what really led us to writing Nebula

32:19.240 --> 32:21.920
was this idea that we wanted to encapsulate security groups,

32:21.920 --> 32:23.000
as you mentioned.

32:23.000 --> 32:26.360
Hmm, this, at first I struggled to quite understand this,

32:26.360 --> 32:29.200
but when I started looking at the example configuration

32:29.200 --> 32:31.200
files, and I saw an example in there

32:31.200 --> 32:33.920
where it was broken down by servers, laptops,

32:33.920 --> 32:35.480
it started to click a little bit more

32:35.480 --> 32:38.560
that you could start to manage a much larger set of machines

32:38.560 --> 32:39.520
by grouping them up.

32:39.520 --> 32:40.840
Yeah, maybe you could clue us in

32:40.840 --> 32:42.720
on how you guys are using groups.

32:42.720 --> 32:45.800
Yeah, so the kind of contrived example,

32:45.800 --> 32:49.720
I mean, we actually tie groups to Chef roles.

32:49.720 --> 32:54.160
So if you're familiar with, yeah, so with config management,

32:54.160 --> 32:58.080
because the Chef role really describes what a host

32:58.080 --> 33:00.040
or what a container's job is,

33:00.040 --> 33:03.960
then that kind of makes a natural grouping.

33:03.960 --> 33:06.880
And we also add in some special stuff

33:06.880 --> 33:09.440
like which region it's in,

33:09.440 --> 33:11.800
which availability zone it's in, that kind of thing,

33:11.800 --> 33:14.120
just so that we can do even more fine-grained.

33:14.120 --> 33:16.840
And we opportunistically add groups we might use,

33:16.840 --> 33:20.280
and even if we don't actually use them for filtering rules,

33:20.280 --> 33:23.880
but we add as much kind of metadata as we can about hosts.

33:23.880 --> 33:26.880
And so, you know, the contrived example I give is,

33:26.880 --> 33:29.840
if you're a database server and say, you know,

33:29.840 --> 33:30.960
in a very simple setup,

33:30.960 --> 33:34.000
you just allow web servers to talk to that database,

33:34.000 --> 33:38.120
then the only rule on your database servers is,

33:38.120 --> 33:39.440
you know, assume MySQL.

33:39.440 --> 33:41.480
The only rule on the database servers would be,

33:41.480 --> 33:44.400
I allow TCP 3306 from anything

33:44.400 --> 33:46.400
that's in the group web servers.

33:46.400 --> 33:49.720
And that's powerful because you no longer have to

33:49.720 --> 33:52.480
care about IP addresses or host names or anything.

33:52.480 --> 33:53.800
And this isn't new, right?

33:53.800 --> 33:55.240
This is something that, you know,

33:55.240 --> 33:57.920
cloud security groups have existed for a long time.

33:57.920 --> 34:02.120
The difference is Nebula security groups are,

34:02.120 --> 34:03.960
well, they're cross-platform, which is pretty cool,

34:03.960 --> 34:07.160
but they're also cross-provider and cross-region.

34:07.160 --> 34:09.200
Right, right, that is a big deal.

34:09.200 --> 34:11.400
I mean, we're talking about as an overlay network

34:11.400 --> 34:14.080
and you can really use this to stitch everything together.

34:14.080 --> 34:17.280
I mean, is this a lot of traffic then going through Nebula?

34:17.280 --> 34:19.880
Yeah, I don't have the numbers in front of me,

34:19.880 --> 34:22.000
but it's many billions of packets per second.

34:22.000 --> 34:24.280
It's really neat to see.

34:24.280 --> 34:27.000
Yeah, it's in heavy use.

34:27.000 --> 34:29.760
I can only imagine what it must have been like

34:29.760 --> 34:33.480
to evangelize that inside a company and then roll it out

34:33.480 --> 34:35.720
and then have to work out the kinks.

34:35.720 --> 34:38.400
That must have been quite an experience.

34:38.400 --> 34:42.040
Yeah, there were some fun times,

34:42.040 --> 34:43.440
especially in the early days.

34:43.440 --> 34:47.560
One of the really great things about this project in general

34:47.560 --> 34:51.320
and kind of following on some of the other projects

34:51.320 --> 34:52.920
I've worked on and Nate's worked on is

34:52.920 --> 34:56.000
this is something we also just wanted for ourselves, right?

34:56.000 --> 34:58.440
So there's that selfish aspect,

34:58.440 --> 35:01.040
which is we want this to be great for Slack.

35:01.040 --> 35:03.160
We also want to use this for our home networks

35:03.160 --> 35:04.160
and everything else.

35:04.160 --> 35:06.680
Like we really wrote it for ourselves

35:06.680 --> 35:08.600
and for Slack at the same time.

35:08.600 --> 35:12.680
So tell me the thoughts behind going open source.

35:12.680 --> 35:14.800
Yeah, there are a lot of good reasons to do it.

35:14.800 --> 35:17.520
I think the main one is,

35:17.520 --> 35:19.400
you know, everyone says they give back to the community

35:19.400 --> 35:20.560
and I very much agree.

35:20.560 --> 35:24.040
Like every company is built on so much open source software

35:24.040 --> 35:27.240
that if you've done something that can save someone else time

35:27.240 --> 35:29.720
and it doesn't, you know, degrade your security posture

35:29.720 --> 35:31.440
or there's not a business reason,

35:31.440 --> 35:34.680
I think it's really nice to open source software in general.

35:34.680 --> 35:36.600
An open source by default sort of thing.

35:36.600 --> 35:40.160
Yeah, and I think we've been pretty good about that.

35:40.160 --> 35:42.440
Anytime we've had something that's sort of generally useful,

35:42.440 --> 35:43.720
we've kind of put it up there.

35:43.720 --> 35:46.560
But the other reason is getting more eyes on it

35:46.560 --> 35:50.040
and just having more people use it, you know?

35:50.040 --> 35:53.280
So one of the things that I lobbied for internally

35:53.280 --> 35:57.680
was to add Nebula to our official Slack Bug Bounty program.

35:57.680 --> 36:02.280
And so that means that when we put this out there,

36:02.280 --> 36:06.120
if people find security-related flaws in Nebula,

36:06.120 --> 36:07.720
we'll actually pay them for those

36:07.720 --> 36:10.480
through the Slack Bug Bounty process.

36:10.480 --> 36:11.640
That is great.

36:11.640 --> 36:13.480
Yeah, that was a big one for me

36:13.480 --> 36:15.640
because again, this is a pretty key part

36:15.640 --> 36:16.920
of our infrastructure.

36:16.920 --> 36:18.920
And on top of it, you know,

36:18.920 --> 36:21.840
some amount of trust from a community

36:21.840 --> 36:23.440
when people are using it.

36:23.440 --> 36:26.200
And so, you know, we wanted to make sure

36:26.200 --> 36:29.080
that we weren't just throwing this over the wall

36:29.080 --> 36:30.400
and then saying, good luck.

36:30.400 --> 36:31.240
I love that.

36:31.240 --> 36:34.280
I think we're seriously considering using it

36:34.280 --> 36:35.680
for remote studio productions

36:35.680 --> 36:38.160
to connect back to the main studio.

36:38.160 --> 36:40.520
And looking through the configuration,

36:40.520 --> 36:42.960
there's a couple of things that I really love.

36:42.960 --> 36:44.800
Like the BeaconSys service,

36:44.800 --> 36:46.600
or whatever you want to call it, is named Lighthouse.

36:46.600 --> 36:48.480
So we can put that on an external system.

36:48.480 --> 36:50.080
That's great, that's a great name.

36:50.080 --> 36:51.920
The server, I don't know what you call it,

36:51.920 --> 36:53.080
but the function to make sure

36:53.080 --> 36:56.000
that the NAT mapping remains is called Punchy.

36:56.000 --> 36:57.840
It keeps punching a hole.

36:57.840 --> 37:00.200
My friend and colleague, Nate, hates the name Punchy.

37:00.200 --> 37:02.480
So I'm going to make sure and play this section,

37:02.480 --> 37:03.320
but I call it that.

37:03.320 --> 37:04.160
It made me smile.

37:05.800 --> 37:07.320
Yeah, and there's some other stuff

37:07.320 --> 37:09.200
that over time we really learned.

37:10.200 --> 37:13.360
I'm not speaking ill of GoGo,

37:13.360 --> 37:16.320
but one of the best debugging steps we had

37:16.320 --> 37:19.520
was whenever I would be on a flight using this,

37:19.520 --> 37:22.920
the latency over that really taught us a lot

37:22.920 --> 37:25.400
about some of the handshake issues we might run into

37:25.400 --> 37:28.440
in extreme cases, so that was pretty neat.

37:28.440 --> 37:31.560
The core of Nebula has existed

37:31.560 --> 37:33.240
and been in production for two years,

37:33.240 --> 37:37.480
but we've added features sort of as we worked on it.

37:37.480 --> 37:40.160
And there's, you mentioned Punchy.

37:40.160 --> 37:42.480
One of the features that we added not long ago,

37:42.480 --> 37:44.880
probably six or seven months ago,

37:44.880 --> 37:46.200
I don't have it in front of me,

37:46.200 --> 37:48.440
was something called Punch Back.

37:48.440 --> 37:51.000
And I don't know if you saw that in the config as well.

37:51.000 --> 37:51.840
I think I did, yeah.

37:51.840 --> 37:55.320
Yeah, so sometimes you're behind a really difficult NAT,

37:55.320 --> 37:57.080
and like a symmetric NAT,

37:57.080 --> 37:58.280
I won't go into the details of why,

37:58.280 --> 38:00.520
but a symmetric NAT can be extremely difficult.

38:00.520 --> 38:02.160
I live that life right now, actually.

38:02.160 --> 38:03.400
I have one of my systems.

38:03.400 --> 38:04.960
Are you on mobile?

38:04.960 --> 38:05.800
Yes.

38:05.800 --> 38:09.760
Yeah, so you would really enjoy Punch Back.

38:09.760 --> 38:13.120
And I actually did that because I use a hotspot

38:13.120 --> 38:14.760
quite a bit of the time as well.

38:14.760 --> 38:16.040
I really enjoy road trips,

38:16.040 --> 38:18.280
and so I have like an AT&T hotspot.

38:18.280 --> 38:19.280
Kindred spirits.

38:19.280 --> 38:21.520
Oh, you're speaking my language.

38:21.520 --> 38:24.920
And so what Punch Back does is,

38:24.920 --> 38:26.720
when a host wants to connect to another host,

38:26.720 --> 38:28.640
it asks the Lighthouse how to reach it.

38:28.640 --> 38:31.480
The Lighthouse gives back an IP address

38:31.480 --> 38:33.560
and a UDP port to try.

38:33.560 --> 38:36.720
And when I query the Lighthouse from a node,

38:36.720 --> 38:40.080
it also signals the node I'm about to connect to

38:40.080 --> 38:42.120
to punch outbound to me, right?

38:42.120 --> 38:45.360
So as I query the Lighthouse and ask about a node,

38:45.360 --> 38:46.920
the Lighthouse is signaling that node

38:46.920 --> 38:49.120
that I'm about to try and send a packet to it,

38:49.120 --> 38:51.120
and it should punch out.

38:51.120 --> 38:53.800
And by the way, a really important thing here is,

38:53.800 --> 38:56.640
the Lighthouses actually don't transit any of these packets.

38:56.640 --> 39:00.480
They're there purely for querying and finding nodes.

39:00.480 --> 39:03.520
The handshake never goes through a Lighthouse.

39:03.520 --> 39:08.520
So the Lighthouse signals that node to punch out,

39:09.000 --> 39:10.800
and then we start sending packets,

39:10.800 --> 39:14.120
and we try all the different IPs that we know about

39:14.120 --> 39:16.040
or that we've learned about.

39:16.040 --> 39:18.840
And the thing that Punchback does is it says,

39:18.840 --> 39:20.600
okay, the Lighthouse signaled me

39:20.600 --> 39:22.480
that somebody's trying to reach me.

39:22.480 --> 39:24.560
I'm gonna give it five seconds,

39:24.560 --> 39:27.320
and if they don't reach me, I'm gonna try and reach them

39:27.320 --> 39:29.880
as though I had initiated the connection.

39:29.880 --> 39:33.280
And that, as long as there aren't two boxes

39:33.280 --> 39:37.080
behind really terrible symmetric NATs,

39:37.080 --> 39:40.160
that works almost every time.

39:40.160 --> 39:43.320
Oh my gosh, well, I think that just sealed the deal

39:43.320 --> 39:44.160
right there.

39:44.160 --> 39:46.280
I mean, it's clear that you've had to fight

39:46.280 --> 39:47.240
through some of these things

39:47.240 --> 39:49.200
and worked out a lot of those kinks.

39:49.200 --> 39:50.040
Yeah.

39:50.040 --> 39:51.440
Oh man, that's so fantastic.

39:51.440 --> 39:52.560
Ryan, this is one of those moments,

39:52.560 --> 39:54.520
you know, you always hear, it's almost cliche,

39:54.520 --> 39:56.320
like the thing about open source and free software

39:56.320 --> 39:58.360
is everybody's scratching their own itch.

39:58.360 --> 40:00.560
It sounds like in this particular case,

40:00.560 --> 40:02.160
you had exactly the same itch.

40:02.160 --> 40:03.880
And I just am so thrilled.

40:03.880 --> 40:05.080
I think it's great.

40:06.160 --> 40:09.160
I will link to the announcement,

40:09.160 --> 40:10.880
and we're gonna play with it.

40:10.880 --> 40:12.040
We're absolutely gonna try it out.

40:12.040 --> 40:13.800
Yeah, is there anything we need to know?

40:13.800 --> 40:15.520
I mean, we've talked about a lot of good things here,

40:15.520 --> 40:17.160
but is there anything as potential adopters

40:17.160 --> 40:18.320
we should be aware of?

40:18.320 --> 40:20.120
Depending on the platform you run,

40:20.120 --> 40:23.160
there's some stuff that hasn't been merged yet

40:23.160 --> 40:24.240
that's going to make that easier,

40:24.240 --> 40:28.720
especially if you use any Macs or Windows devices.

40:28.720 --> 40:32.840
And so one of the difficulties in Windows

40:32.840 --> 40:35.800
that when I was sort of developing

40:35.800 --> 40:37.320
some of this with a friend,

40:37.320 --> 40:39.480
by the way, there's a gentleman that we work with

40:39.480 --> 40:42.880
named Wade who did every port.

40:42.880 --> 40:44.600
So we wrote this for Linux,

40:44.600 --> 40:48.440
and he ported it, and Go makes porting just so nice,

40:48.440 --> 40:53.040
but he ported it to Windows and Mac.

40:53.040 --> 40:56.000
And even in one single hack day,

40:56.000 --> 40:59.240
Wade is the person that got it running on iOS.

40:59.240 --> 41:02.600
So, yeah, it was really impressive stuff.

41:02.600 --> 41:06.120
And so, but one of the difficulties with Windows,

41:06.120 --> 41:09.840
I haven't run Windows as a primary OS in many years,

41:09.840 --> 41:11.480
so I'm kind of out of date on it.

41:11.480 --> 41:15.000
But one of the issues was installing services

41:15.000 --> 41:18.920
and how services need to behave is kind of,

41:18.920 --> 41:23.440
it's very foreign if you're used to Unix style services.

41:23.440 --> 41:26.400
And so there's a really nice Go library out there

41:26.400 --> 41:29.920
that can make a binary service aware.

41:29.920 --> 41:32.560
And so I integrated that into Nebula

41:32.560 --> 41:34.280
and made a version of Nebula

41:34.280 --> 41:36.400
that's a self-installing service.

41:36.400 --> 41:40.840
And so in that case, you can actually copy nebula.exe

41:40.840 --> 41:44.040
and one config file to a Windows host,

41:44.040 --> 41:47.080
and then you can run nebula-service install,

41:47.080 --> 41:48.720
and it actually does the whole bit

41:48.720 --> 41:50.200
and installs it as a Windows service.

41:50.200 --> 41:53.000
And that library is actually cross-platform.

41:53.000 --> 41:53.840
It's really neat.

41:53.840 --> 41:57.800
So it even does that on Linux or OS 10,

41:57.800 --> 41:59.560
whatever you're using.

41:59.560 --> 42:01.840
We have a bit of a pettance argument

42:01.840 --> 42:03.840
about doing that on Linux,

42:03.840 --> 42:06.040
so I don't think that'll be the default build on Linux

42:06.040 --> 42:08.400
because just use systemd or upstart

42:08.400 --> 42:11.200
is kind of the right way to go.

42:11.200 --> 42:14.040
But for the other OSs, you know, OS 10 or Windows,

42:14.040 --> 42:16.720
I think that's gonna be the default behavior very soon.

42:16.720 --> 42:18.920
And there's a branch that already works.

42:18.920 --> 42:21.280
That's one thing I mean, you can't miss about Nebula

42:21.280 --> 42:22.920
is that simplicity.

42:22.920 --> 42:24.080
It just seems ready to integrate

42:24.080 --> 42:26.480
into all kinds of other systems, however you might do it.

42:26.480 --> 42:29.800
Yeah, we were brainstorming a couple of ideas already.

42:29.800 --> 42:31.720
Ryan, I hope you'll keep us in mind in the future

42:31.720 --> 42:33.560
if there's any developments you wanna share

42:33.560 --> 42:35.280
with the community, we'd love to pass it along.

42:35.280 --> 42:37.880
I think you can count us officially as fans of the project.

42:37.880 --> 42:39.360
Well, that's great to hear.

42:39.360 --> 42:43.480
I know people probably say this and it sounds cliche,

42:43.480 --> 42:45.440
but I was really surprised

42:45.440 --> 42:46.960
how many people were interested in this

42:46.960 --> 42:48.960
because before we put it out there,

42:48.960 --> 42:50.520
you know, we knew we were super into this,

42:50.520 --> 42:52.680
but you always think your thing is really neat

42:52.680 --> 42:54.160
and you hope other people do,

42:54.160 --> 42:56.280
but the response has been really great

42:56.280 --> 42:57.960
and we're really happy about that

42:57.960 --> 42:59.200
and we wanna keep that going.

42:59.200 --> 43:01.000
So we're gonna do some things

43:01.000 --> 43:04.400
to make it even easier to stand up Nebula,

43:04.400 --> 43:06.400
especially for folks that maybe don't wanna stand up

43:06.400 --> 43:09.880
a lighthouse and do all of that just to test it out.

43:09.880 --> 43:12.040
So we're gonna make that a bit easier going forward

43:12.040 --> 43:15.760
and I can't wait to see what use cases people come up with.

43:15.760 --> 43:17.360
Very good, well, thank you for joining us.

43:17.360 --> 43:18.400
Thank you.

43:18.400 --> 43:19.720
Something we didn't touch on,

43:19.720 --> 43:21.280
but Nebula has also undergone

43:21.280 --> 43:23.280
a paid security vulnerability assessment

43:23.280 --> 43:26.840
along with numerous internal Slack reviews as well.

43:26.840 --> 43:28.560
So it's looking like it's in pretty good shape.

43:28.560 --> 43:30.560
Yeah, they're certainly using it.

43:30.560 --> 43:31.480
And we did give it a go.

43:31.480 --> 43:36.000
In fact, we have been really having quite a bit of fun

43:36.000 --> 43:37.040
playing around with Nebula.

43:37.040 --> 43:40.840
It's been one of those projects that just is,

43:40.840 --> 43:42.720
like you feel like it's cutting edge,

43:42.720 --> 43:45.360
but it's doing something that solves such a cool problem.

43:45.360 --> 43:46.200
It's great.

43:46.200 --> 43:47.440
And it's simple.

43:47.440 --> 43:48.920
It's just, it's easy to get started with.

43:48.920 --> 43:50.560
I mean, it's go, so you just go download

43:50.560 --> 43:52.840
the two binaries that you need

43:52.840 --> 43:55.240
and the configuration files are easy.

43:55.240 --> 43:57.840
It's just YAML and because of the way it works,

43:57.840 --> 44:00.000
you don't need a whole bunch of configuration files.

44:00.000 --> 44:03.520
You basically just need the key pair for your machine.

44:03.520 --> 44:05.480
You need the CA certificate

44:05.480 --> 44:08.720
and then the config file for the daemon and you're done.

44:08.720 --> 44:13.440
Yeah, it's a lot of kind of like conceptual stuff.

44:13.440 --> 44:14.960
You have to shift your head a little bit

44:14.960 --> 44:16.480
because it's all key-based.

44:16.480 --> 44:18.480
So you gotta get used to that, but that's not a big deal.

44:18.480 --> 44:21.880
It's not necessarily like a service.

44:21.880 --> 44:23.600
It's not gonna be a package you install.

44:23.600 --> 44:27.960
It's a tarball you download and extract and you run it.

44:27.960 --> 44:28.920
But if you're okay with,

44:28.920 --> 44:30.960
and you're comfortable with those kinds of things,

44:30.960 --> 44:32.760
with very minimal effort,

44:32.760 --> 44:36.840
you can create an overlay network that is secured.

44:36.840 --> 44:40.200
And it's like being, like browsing a local LAN.

44:40.200 --> 44:43.600
For fun, like we went on two different Mifis.

44:43.600 --> 44:44.680
Wes did it from his place.

44:44.680 --> 44:45.800
I did it from the RV.

44:45.800 --> 44:47.360
We have systems at the studio.

44:47.360 --> 44:49.920
And they can just all immediately talk to each other.

44:49.920 --> 44:52.040
And it'll be smart about things, so it'll figure it out.

44:52.040 --> 44:53.440
You know, if I'm from my house,

44:53.440 --> 44:55.280
I can talk to one of the studio machines,

44:55.280 --> 44:57.480
but if I come into the studio,

44:57.480 --> 44:58.920
they figure out that that traffic

44:58.920 --> 45:00.440
just stays on the local LAN.

45:00.440 --> 45:02.680
So we even got it going on my Raspberry Pis

45:02.680 --> 45:03.920
to an extent.

45:03.920 --> 45:07.200
My Raspberry Pi 4s, I think,

45:07.200 --> 45:09.360
did we figure out they were in 64-bit mode?

45:09.360 --> 45:10.560
I can't remember now.

45:10.560 --> 45:12.600
But there's a 32-bit and a 64-bit version

45:12.600 --> 45:14.360
that'll run on the Raspberry Pi.

45:14.360 --> 45:16.560
And we got it working really solid for a bit

45:16.560 --> 45:18.640
on one of my Raspberry Pis.

45:18.640 --> 45:21.880
But when we set it up on a second Raspberry Pi,

45:21.880 --> 45:23.760
we ran into some strange issues

45:23.760 --> 45:26.480
where it really kind of came into our limits

45:26.480 --> 45:27.480
of the ability to troubleshoot.

45:27.480 --> 45:28.320
And because this is new,

45:28.320 --> 45:30.480
there isn't a huge community around it to solve it.

45:30.480 --> 45:32.960
Yeah, and there are some downsides, it is very simple.

45:32.960 --> 45:36.440
It just means that it only operates in the one mode.

45:36.440 --> 45:38.080
And right now, the NAT punching

45:38.080 --> 45:39.480
doesn't seem quite to be working.

45:39.480 --> 45:41.000
There are some extenuating circumstances

45:41.000 --> 45:42.800
because, as you said, you have two layers of NAT,

45:42.800 --> 45:44.760
which makes just about everything difficult.

45:44.760 --> 45:48.600
I have this fantastic, best ISP I've ever had in my life,

45:48.600 --> 45:49.440
local ISP.

45:49.440 --> 45:51.680
They're like one of the last in Washington,

45:51.680 --> 45:53.040
little small outfit.

45:53.040 --> 45:56.520
Like if you call them and they don't answer,

45:56.520 --> 45:58.520
they see it on their caller ID and they call you back.

45:58.520 --> 46:00.960
Hello, Mr. Fisher, I saw I missed your call.

46:00.960 --> 46:03.680
Oh yes, I see, I could lower your bill by $10.

46:03.680 --> 46:04.840
I'll get that taken care of for you, sir.

46:04.840 --> 46:07.040
Thank you for calling, seriously.

46:07.040 --> 46:07.960
Like yeah, no problem.

46:07.960 --> 46:08.800
Okay.

46:08.800 --> 46:09.640
Thanks.

46:09.640 --> 46:12.240
So they're a great ISP except for, you don't get.

46:12.240 --> 46:16.480
I get like a 192.168.5.whatever.

46:16.480 --> 46:18.480
So I get some weird public IP address

46:18.480 --> 46:20.360
that is obviously NAT.

46:20.360 --> 46:21.440
And I don't know,

46:21.440 --> 46:24.120
I don't even know how far down the NAT chain I really am.

46:24.120 --> 46:26.280
But then of course, I have a NAT of my own network.

46:26.280 --> 46:28.800
So I have a gateway device that's connected to that NAT,

46:28.800 --> 46:31.000
which then does NAT behind it.

46:31.000 --> 46:33.760
And so, as you heard in the chat there,

46:34.760 --> 46:38.320
it is designed, Nebula, to punch through this.

46:38.320 --> 46:39.480
And it does to an extent.

46:39.480 --> 46:41.800
We can get one Raspberry Pi working for a bit.

46:41.800 --> 46:43.800
It can't talk to all the nodes though.

46:43.800 --> 46:44.760
Yeah, we're having a few.

46:44.760 --> 46:46.360
We haven't got it quite working.

46:46.360 --> 46:48.880
That said, we did just pick this up yesterday

46:48.880 --> 46:51.440
and on 80% of the machines, it just worked.

46:51.440 --> 46:53.800
The ones that aren't behind super crazy NAT,

46:53.800 --> 46:55.480
even mild NAT, like MiFi NATs.

46:55.480 --> 46:56.320
Right, yeah.

46:56.320 --> 46:57.600
Tether into my phone, no problem.

46:57.600 --> 46:58.440
Yeah, that'll work fine.

46:58.440 --> 46:59.280
Jump into the studio.

46:59.280 --> 47:01.440
And it's really neat to just see it work.

47:01.440 --> 47:02.760
And Wes was able to bang it out

47:02.760 --> 47:05.040
into a system to unit file in like 30 seconds.

47:05.040 --> 47:07.320
So now it's a service that just runs on our boxes.

47:07.320 --> 47:08.360
Yeah, no problem.

47:08.360 --> 47:09.440
Super simple.

47:09.440 --> 47:11.600
So I have a question for Wes.

47:11.600 --> 47:13.640
I use a tool called SSH Shuttle

47:13.640 --> 47:18.640
to tunnel my DNS around from the US to Europe and stuff.

47:19.120 --> 47:23.320
Can you send with either Nebula or Tink,

47:23.320 --> 47:26.640
can you route DNS through those tunnels easily?

47:26.640 --> 47:30.120
Or like, where does the DNS actually happen?

47:30.120 --> 47:32.280
I mean, I don't see why not.

47:32.280 --> 47:34.040
You just need an endpoint at the other side.

47:34.040 --> 47:36.040
Yeah, so they both have provisions for it.

47:36.040 --> 47:40.280
Specifically to Nebula, there is a configuration option

47:40.280 --> 47:42.440
to declare where the DNS is

47:42.440 --> 47:44.280
or even to act as a DNS forwarder.

47:45.160 --> 47:47.560
And so we have experimented a little bit with that,

47:47.560 --> 47:50.080
but you do kind of need a name server on either end

47:50.080 --> 47:52.400
to do it, you have to do that part.

47:52.400 --> 47:53.360
Okay.

47:53.360 --> 47:56.920
It's not, it kind of sounds hard if you don't try,

47:56.920 --> 47:58.480
but once you try it, it's really,

47:58.480 --> 47:59.920
turns out if you try hard enough, you can.

47:59.920 --> 48:00.960
It's really not so bad.

48:00.960 --> 48:01.920
No, no, it's not.

48:01.920 --> 48:04.840
And it's just nice, you know, it's neat to have,

48:04.840 --> 48:07.960
we live in a world where you share things in the cloud,

48:07.960 --> 48:10.080
and everything is an HTTP service

48:10.080 --> 48:12.360
or HTTPS really these days.

48:12.360 --> 48:14.280
Having a flat network sort of harkens back

48:14.280 --> 48:15.880
to the good old Unix days.

48:15.880 --> 48:18.880
So now we could have a Samba server running

48:18.880 --> 48:20.760
here at the studio, but if it's listening

48:20.760 --> 48:23.200
on that overlay network, you can get those files

48:23.200 --> 48:24.280
from anywhere.

48:24.280 --> 48:27.040
But especially because of the security group stuff

48:27.040 --> 48:30.240
built right into Nebula, which I love,

48:30.240 --> 48:31.920
you can do that securely and not have to worry

48:31.920 --> 48:33.400
about exposing Samba to the public internet,

48:33.400 --> 48:35.120
which you just shouldn't do.

48:35.120 --> 48:37.040
Yeah, listeners of our self-hosted program

48:37.040 --> 48:41.160
know that I have a mandate to never expose the RV

48:41.160 --> 48:42.600
to the public internet.

48:42.600 --> 48:45.040
So something like this, that's why this double net

48:45.040 --> 48:46.800
situation, I take it as a challenge,

48:46.800 --> 48:48.720
because I really have a mandate

48:48.720 --> 48:50.480
to not publicly expose anything.

48:50.480 --> 48:52.080
That's a good rule for life, Chris.

48:52.080 --> 48:54.760
I agree, and what I love about both Nebula and Tink,

48:54.760 --> 48:57.640
but specifically Nebula and WireGuard,

48:57.640 --> 48:59.680
they're really good about reconnecting

48:59.680 --> 49:01.560
once your connection comes back online,

49:01.560 --> 49:05.240
which is really useful for me for both laptop and the RV.

49:05.240 --> 49:09.160
Nebula also is, it's not that old,

49:09.160 --> 49:10.720
they've been using internally for a little bit

49:10.720 --> 49:12.160
and it's certainly new to us.

49:12.160 --> 49:13.240
But you can tell it's a modern tool.

49:13.240 --> 49:14.400
I mean, not only is that written in Go,

49:14.400 --> 49:17.000
but it's got great logging support built right in

49:17.000 --> 49:19.320
and metrics, so if you've got a graphite server

49:19.320 --> 49:22.680
or a Prometheus server, that's built right in.

49:22.680 --> 49:24.920
Yeah, there's some, I could see Slack building

49:24.920 --> 49:27.360
some services around this thing in the future.

49:27.360 --> 49:29.080
I could absolutely see them productizing this

49:29.080 --> 49:29.920
if they wanted to.

49:29.920 --> 49:30.960
I don't know if they will.

49:30.960 --> 49:33.320
What Ryan told us is essentially it's enough

49:33.320 --> 49:35.680
for them already, because they have a situation

49:35.680 --> 49:38.200
where they have systems on AWS,

49:38.200 --> 49:39.320
they have systems on Azure.

49:39.320 --> 49:40.600
I'm assuming, he didn't tell me this,

49:40.600 --> 49:42.760
but they have multi-provider systems

49:42.760 --> 49:46.000
and they want a LAN where they can have secure

49:46.000 --> 49:48.800
MySQL things happen or secure Samba things happen.

49:48.800 --> 49:50.600
Or you can sort of abstract that away

49:50.600 --> 49:52.280
and not your individual hosts don't have to deal

49:52.280 --> 49:54.120
with that anymore, they can just receive traffic.

49:54.120 --> 49:57.080
I think that cross-provider thing is gonna be

49:57.080 --> 49:58.920
what makes this really take off.

49:58.920 --> 50:01.880
If they keep talking about it like that,

50:01.880 --> 50:03.720
that's gonna click with people.

50:03.720 --> 50:05.080
All this talk about hybrid cloud,

50:05.080 --> 50:07.480
I mean, one of the providers could be your own LAN.

50:07.480 --> 50:08.320
Absolutely.

50:09.640 --> 50:11.080
I have a system on Linode,

50:11.080 --> 50:12.560
I have a system on DigitalOcean,

50:12.560 --> 50:14.160
and we have the Reaper box here.

50:14.160 --> 50:17.280
I would like to connect all three of them together.

50:17.280 --> 50:18.120
Both of these allow for that.

50:18.120 --> 50:19.640
I think it'd just be on one private network.

50:19.640 --> 50:20.520
Flat network.

50:20.520 --> 50:21.560
I haven't done extensive testing,

50:21.560 --> 50:23.000
but I did a little bit last night,

50:23.000 --> 50:24.160
just being in my house in the studio

50:24.160 --> 50:25.520
and performance is looking good.

50:25.520 --> 50:27.000
That was one of my concerns with Tink.

50:27.000 --> 50:29.840
It's older and not necessarily optimized for performance,

50:29.840 --> 50:33.480
but this is using new quick crypto and it did great.

50:33.480 --> 50:34.840
Yeah, I guess it's worth mentioning.

50:34.840 --> 50:36.680
Neither one of them run in the kernel.

50:37.640 --> 50:39.160
Yeah, just using the ton driver.

50:39.160 --> 50:41.440
Yeah, which is perfectly fine.

50:41.440 --> 50:43.720
I think there might be probably

50:43.720 --> 50:47.200
a slightly higher performance story with Nebula than Tink.

50:47.200 --> 50:48.080
Yeah, I believe so.

50:48.080 --> 50:48.920
I guess that's something to consider

50:48.920 --> 50:50.280
when you have a lot of nodes, right?

50:50.280 --> 50:53.320
Because who's talked about 500 nodes

50:53.320 --> 50:55.360
and Ryan talked about thousands of nodes.

50:55.360 --> 50:57.080
So that's something to consider too.

50:57.080 --> 50:58.920
Yeah, and because of the key base

50:58.920 --> 51:01.080
and the certificate based authentication,

51:01.080 --> 51:03.200
you don't have to do anything to add a new node.

51:03.200 --> 51:04.760
I mean, the certificate authority

51:04.760 --> 51:08.360
needs to sign the new keys for that node,

51:08.360 --> 51:10.560
but that's it because the lighthouse

51:10.560 --> 51:12.360
actually takes care of communicating those details.

51:12.360 --> 51:14.280
So if I want to go talk to Chris's laptop,

51:14.280 --> 51:15.120
I don't know where that is.

51:15.120 --> 51:18.720
And he might not trust that I should talk to them.

51:18.720 --> 51:21.040
All I have to do is go share my information.

51:21.040 --> 51:23.320
And because it's signed with the certificate authority,

51:23.320 --> 51:24.320
it's all good, that's it.

51:24.320 --> 51:26.680
Yep, so if you have any questions,

51:26.680 --> 51:28.760
go to linuxunplug.com slash contact

51:28.760 --> 51:30.320
because we're still tooling away with this.

51:30.320 --> 51:32.040
So we're having a lot of fun building networks

51:32.040 --> 51:34.920
and I think we're gonna get my net situation resolved.

51:34.920 --> 51:36.400
I don't know exactly how,

51:36.400 --> 51:37.320
but I think we're gonna get there.

51:37.320 --> 51:39.560
We'll figure it out, right Wes?

51:39.560 --> 51:42.440
Well, maybe we'll have to ask Ryan, we'll see.

51:42.440 --> 51:43.360
I think we might.

51:43.360 --> 51:47.200
Okay, let's do some feedback.

51:47.200 --> 51:50.000
Before we go, I said I want to do some more feedback

51:50.000 --> 51:51.320
and follow up in this here show

51:51.320 --> 51:54.800
and people took me up on it, linuxunplug.com slash contact.

51:54.800 --> 51:55.840
Our first one, Matthias,

51:55.840 --> 51:59.800
who says he's a happy Manjaro user in Germany.

51:59.800 --> 52:00.960
He had to mention that, didn't he?

52:00.960 --> 52:01.800
Of course.

52:01.800 --> 52:02.720
No, I love it.

52:02.720 --> 52:04.120
I actually love to know.

52:04.120 --> 52:06.720
He has a question about command line autocompletes.

52:06.720 --> 52:07.720
Short question, a while ago,

52:07.720 --> 52:10.160
you guys mentioned a cool little tool for the command line

52:10.160 --> 52:11.840
that helps me remember my complicated commands

52:11.840 --> 52:13.960
and make suggestions while I start typing,

52:13.960 --> 52:15.600
but I forgot the name of it.

52:15.600 --> 52:18.480
I think he might be talking about fish shell.

52:18.480 --> 52:21.480
We do talk about fish shell basically all the time

52:21.480 --> 52:22.400
and it's fantastic.

52:22.400 --> 52:25.040
Fish shell is now the thing that I install

52:25.040 --> 52:26.840
almost immediately on a new Linux box

52:26.840 --> 52:29.240
and I go into the Etsy password file

52:29.240 --> 52:32.520
and at that right there, I replace my shell with fish.

52:32.520 --> 52:34.680
Now, another one we've I think mentioned before

52:34.680 --> 52:37.760
is fzf, the little command line tool, the fuzzy finder,

52:37.760 --> 52:40.160
and that also will search your command line history.

52:40.160 --> 52:41.720
So I was thinking it could be that one too.

52:41.720 --> 52:42.560
So that's a good one.

52:42.560 --> 52:43.400
Do you want to toss a link?

52:43.400 --> 52:44.440
Absolutely.

52:44.440 --> 52:45.440
In the news.

52:45.440 --> 52:48.320
All right, Liam writes, hello, Chris.

52:48.320 --> 52:51.560
I've also been experiencing random lag

52:51.560 --> 52:53.520
or skipping on my workstation

52:53.520 --> 52:58.520
with an NVIDIA GTX 1060 after I upgraded to Fedora 31.

52:59.000 --> 53:00.720
I was wondering if you ever got anywhere

53:00.720 --> 53:03.680
with the mouse lag or if it's an active bug

53:03.680 --> 53:05.160
somewhere I could contribute to.

53:05.160 --> 53:06.600
Oh, I like what you ended up doing.

53:06.600 --> 53:09.200
This is a good sort of come clean moment.

53:09.200 --> 53:10.960
I hadn't actually thought about.

53:10.960 --> 53:12.960
I was like, I'll do an update.

53:12.960 --> 53:13.800
Well, okay.

53:13.800 --> 53:17.760
So, you know, I really can't stand lag.

53:17.760 --> 53:19.960
This is a particularly weak spot for me.

53:19.960 --> 53:23.400
So what I did was I burned the entire house down.

53:23.400 --> 53:26.640
I decided I wanted to switch to plasma for a bit

53:26.640 --> 53:28.960
to see if there was an issue over there.

53:28.960 --> 53:30.240
So then I went down the rabbit hole

53:30.240 --> 53:32.560
of trying to find a great plasma implementation.

53:32.560 --> 53:34.880
Really, I actually downloaded the neon ISO.

53:34.880 --> 53:36.320
I was going to go just with neon again

53:36.320 --> 53:38.360
because I had such a great experience last time.

53:38.360 --> 53:40.680
I'm imagining you standing in front of your computer,

53:40.680 --> 53:42.520
USB drive in hand, sort of waffling,

53:42.520 --> 53:44.440
considering just about to plug it in.

53:44.440 --> 53:46.320
That is literally the situation.

53:46.320 --> 53:47.160
I'm not kidding.

53:47.160 --> 53:48.360
And I came across and I said,

53:48.360 --> 53:53.040
Self, you know, you don't want to always...

53:53.040 --> 53:55.760
You need to challenge your assumptions about distro self

53:55.760 --> 53:57.960
because I had a real kind of realization

53:57.960 --> 54:00.440
when we put Fedora on that there server.

54:00.440 --> 54:01.520
It went so good, Wes.

54:01.520 --> 54:05.000
I was like, this is way better than I expected.

54:05.000 --> 54:06.680
I came with all these assumptions about Fedora

54:06.680 --> 54:08.960
on the server and I was schooled.

54:08.960 --> 54:12.160
So I thought, I need to give Manjaro like a real go again

54:12.160 --> 54:15.520
because my early conceptions of Manjaro are not really...

54:15.520 --> 54:17.320
Manjaro has come so far.

54:17.320 --> 54:18.160
It really has.

54:18.160 --> 54:19.400
And it's really one of the great distros.

54:19.400 --> 54:22.320
And I thought, I got to try out one of the greats.

54:22.320 --> 54:25.000
So I pulled down their plasma edition of Manjaro

54:25.000 --> 54:27.160
and I formatted my workstation yet again

54:27.160 --> 54:29.440
and I put Manjaro plasma edition on there.

54:29.440 --> 54:31.440
I didn't think I'd ever see you remove Fedora.

54:31.440 --> 54:35.280
I really am not trying to be a distro hopper guy.

54:36.320 --> 54:37.320
I just want to get my work done,

54:37.320 --> 54:39.520
but somehow I have fallen into this trap

54:39.520 --> 54:41.040
of working on my tools again.

54:41.040 --> 54:42.200
Yeah, maybe that's the thing I should be doing

54:42.200 --> 54:44.640
at the end of the year, get myself positioned for 2020.

54:44.640 --> 54:45.880
Yeah, maybe that's what I'll tell myself.

54:45.880 --> 54:48.480
Nice new workstation, everything working ideally,

54:48.480 --> 54:49.920
no mouse leg.

54:49.920 --> 54:52.720
Here's the thing, Wes, still had mouse leg.

54:52.720 --> 54:54.040
No.

54:54.040 --> 54:59.040
Yep, on plasma, using X instead of Wayland,

55:00.040 --> 55:04.880
Kwin, AMD graphics, still had mouse leg.

55:04.880 --> 55:07.080
Have you considered just getting a faster mouse?

55:07.080 --> 55:09.400
Well, I just thought about locking myself

55:09.400 --> 55:12.280
in the bathroom, honestly, I was so upset.

55:13.200 --> 55:15.200
Can you switch to just the console directly?

55:15.200 --> 55:16.040
Because that's, you know.

55:16.040 --> 55:17.200
Yeah, yeah.

55:18.280 --> 55:21.240
So I went down, again, different threads

55:21.240 --> 55:23.880
and a common thread I kept coming across

55:23.880 --> 55:26.760
was people were noticing this issue

55:26.760 --> 55:29.200
when they were experiencing high disk IO

55:30.040 --> 55:32.960
and GPU usage at the same time.

55:32.960 --> 55:35.440
Not gaming types of usage, but just like things

55:35.440 --> 55:37.320
that use the GPU on the Linux desktop,

55:38.280 --> 55:41.160
which Chrome uses the hell out of the disk cache

55:41.160 --> 55:42.840
and the GPU when it's rendering a page.

55:42.840 --> 55:44.840
And that is primarily when I would notice it,

55:44.840 --> 55:46.760
when I'd have a video or something playing perhaps,

55:46.760 --> 55:47.600
or something going on.

55:47.600 --> 55:49.440
Maybe you've opened a bunch of new tabs.

55:49.440 --> 55:51.080
And of course, I've got multiple monitors,

55:51.080 --> 55:54.520
even though I've got like an AMD 560 in there, whatever,

55:55.720 --> 55:58.920
570 actually, I'd have the issue, I'd have leg.

55:58.920 --> 56:02.160
I'd still, even on plasma, I'd have the damn mouse leg.

56:03.320 --> 56:04.960
So I thought, okay, well, maybe I could reduce some of this.

56:04.960 --> 56:07.000
I can't really reduce the GPU usage.

56:07.000 --> 56:10.960
That's modern browsers, but can I reduce disk IO?

56:12.080 --> 56:16.360
And so I decided to load up profile sync daemon,

56:17.280 --> 56:20.800
which sim links and syncs your browser profile directories

56:20.800 --> 56:24.880
to RAM using tempFS and RAM.

56:24.880 --> 56:27.840
Thus, it reduces the hard drive calls.

56:27.840 --> 56:29.280
It speeds up your browser.

56:30.400 --> 56:32.480
I wanna make it clear here.

56:32.480 --> 56:35.720
I'm doing this on a really nice MVNE, okay?

56:35.720 --> 56:36.720
I've got-

56:36.720 --> 56:38.640
It's not some 5400 RPM.

56:38.640 --> 56:40.640
No, it's no slouch.

56:40.640 --> 56:43.440
I legitimately noticed an improvement when I did this.

56:43.440 --> 56:44.760
I mean, have you tried RAM?

56:44.760 --> 56:45.600
It's the best.

56:45.600 --> 56:47.600
It is the best.

56:47.600 --> 56:48.960
Everything's faster.

56:48.960 --> 56:50.760
What's great about profile sync daemon,

56:50.760 --> 56:52.040
besides the fact that it could cause you

56:52.040 --> 56:53.440
to lose your entire profile,

56:53.440 --> 56:55.520
is that it supports like all of the browsers,

56:55.520 --> 56:58.120
even Vivaldi, and I'm not sure about Brave,

56:58.120 --> 56:59.960
but like all the different browsers.

56:59.960 --> 57:02.360
And it automatically detects them if you like.

57:02.360 --> 57:05.480
And it handles and manages the syncing to RAM and back.

57:05.480 --> 57:07.800
So you wanna properly close and open your browser

57:07.800 --> 57:09.000
at the beginning and the end of your day

57:09.000 --> 57:11.040
to give it a chance to sync.

57:11.040 --> 57:14.440
You'll notice if you watch the cache usage

57:14.440 --> 57:16.960
from the kernel file system cache,

57:16.960 --> 57:20.120
you'll notice if you watch that indicator closely,

57:20.120 --> 57:22.760
you can see it blast the cache

57:22.760 --> 57:25.480
as profile sync daemon does it sync.

57:25.480 --> 57:26.800
It just, it saturates.

57:26.800 --> 57:30.400
It complete on my system with, I think this box,

57:30.400 --> 57:32.520
it's either 32 or 64 gigs of RAM.

57:32.520 --> 57:35.840
I mean, it just uses a ton of cache for like 15 seconds.

57:35.840 --> 57:39.240
It's really fast because it's going from RAM to an MVNE.

57:39.240 --> 57:43.440
But if you like were to lock up and hit reboot,

57:43.440 --> 57:44.520
it would never have had a chance

57:44.520 --> 57:46.480
to write that profile back to disk.

57:46.480 --> 57:49.120
And so any changes would be lost.

57:49.120 --> 57:51.120
Now, the nice thing is that's pretty much mitigated

57:51.120 --> 57:54.840
these days by browser sync for the most part.

57:54.840 --> 57:58.200
So it's constantly syncing to the Vivaldi cloud service.

57:58.200 --> 58:00.600
And yeah, I'm on Vivaldi too.

58:00.600 --> 58:02.880
A part of this I switched over to Vivaldi.

58:02.880 --> 58:04.040
That's a whole nother story.

58:04.040 --> 58:07.640
But so thank you for asking about the mouse leg.

58:07.640 --> 58:08.840
Hey, you know, it works out well too

58:08.840 --> 58:12.520
because of course profile sync daemon is in the AUR.

58:12.520 --> 58:13.480
Of course it is.

58:13.480 --> 58:16.240
Yeah, but it's pretty much available for anything.

58:16.240 --> 58:18.920
I think my suspicion is,

58:18.920 --> 58:23.680
is that something is no longer great on my box

58:23.680 --> 58:27.600
or perhaps my original suspicion is that

58:27.600 --> 58:30.840
around kernel 5.2 time period,

58:30.840 --> 58:33.760
somewhere when I transitioned from the four series kernel

58:33.760 --> 58:37.320
from an older distribution

58:37.320 --> 58:39.880
to the five series kernels on this box,

58:39.880 --> 58:42.240
that's when these problems manifested.

58:42.240 --> 58:44.120
I do suspect if I were willing

58:44.120 --> 58:45.520
to not have the latest goodies.

58:45.520 --> 58:47.760
So you're saying you're going to switch to Neon.

58:49.000 --> 58:51.160
Yeah, cause you're like what on 4.16 or something?

58:51.160 --> 58:52.240
Well, let's find out.

58:52.240 --> 58:55.040
Because I never had leg on Neon, same hardware.

58:55.040 --> 58:56.360
4.15 baby.

58:56.360 --> 59:00.080
Yeah, and when I use the gnome implementation of Ubuntu,

59:00.080 --> 59:02.680
that's on 1804, I didn't have mouse leg.

59:02.680 --> 59:04.880
It wasn't until I went to five series kernels

59:04.880 --> 59:06.000
that I started getting mouse leg.

59:06.000 --> 59:08.000
And I wonder if this is never going to be fixed.

59:08.000 --> 59:11.800
It's kind of getting, you know, three year old box now,

59:11.800 --> 59:13.400
something like that, getting there two and a half,

59:13.400 --> 59:15.560
something people are not going to be releasing new drivers

59:15.560 --> 59:18.000
for it's just, I think I'm doomed.

59:18.000 --> 59:20.520
So my solution is to just reduce the disk IO

59:20.520 --> 59:24.360
while using GPU for a web rendering stuff.

59:24.360 --> 59:25.920
It doesn't seem to affect games.

59:25.920 --> 59:27.400
It doesn't seem to affect that stuff.

59:27.400 --> 59:28.560
How well does this actually work?

59:28.560 --> 59:30.400
I mean, do you still get occasional mouse leg

59:30.400 --> 59:31.240
or is it pretty much done?

59:31.240 --> 59:32.480
Very, very, very well.

59:32.480 --> 59:33.920
Nearly gone.

59:35.160 --> 59:36.000
Excellent.

59:36.000 --> 59:37.680
Maybe a glitch or two a day now,

59:37.680 --> 59:40.440
instead of every few minutes.

59:40.440 --> 59:41.800
It's a huge difference.

59:41.800 --> 59:43.480
So you can use your nice computer now.

59:43.480 --> 59:47.520
Yeah, so give that a go and see if that works for you.

59:47.520 --> 59:48.360
I don't know if it will.

59:48.360 --> 59:49.200
Okay, now we've got to get out of here,

59:49.200 --> 59:50.280
but we'll do one more.

59:50.280 --> 59:51.600
Cause I promise, towards the end of the video,

59:51.600 --> 59:52.440
we'll start doing this.

59:52.440 --> 59:53.920
And we'll do another batch,

59:53.920 --> 59:56.720
if you'd like linuxunplugged.com slash contact.

59:56.720 --> 59:59.080
But I think this is a good one to end on.

59:59.080 --> 01:00:02.000
Cameron writes in, regarding some requests for feedback,

01:00:02.000 --> 01:00:04.280
I'd love to have a forum for the podcast

01:00:04.280 --> 01:00:07.240
or better yet for Jupiter broadcasting as a whole.

01:00:07.240 --> 01:00:09.600
So the listeners and maybe you guys can all communicate

01:00:09.600 --> 01:00:11.200
and share info, news, et cetera.

01:00:12.760 --> 01:00:15.280
So that's something we've actually been talking about

01:00:15.280 --> 01:00:17.360
internally. Indeed.

01:00:17.360 --> 01:00:19.520
We have been around for so long now

01:00:19.520 --> 01:00:22.760
that we have had about three different iterations of,

01:00:22.760 --> 01:00:25.720
oh, if you count before Jupiter broadcasting was formed,

01:00:25.720 --> 01:00:28.320
probably five different iterations of community forums.

01:00:28.320 --> 01:00:30.520
Some of them were so large

01:00:30.520 --> 01:00:31.920
that that's actually how we ended up

01:00:31.920 --> 01:00:34.160
starting to work with Alan on Scale Engine,

01:00:34.160 --> 01:00:35.720
is we had to move on to infrastructure

01:00:35.720 --> 01:00:38.000
that could handle the amount of traffic we were getting.

01:00:38.000 --> 01:00:40.200
So we definitely have had some in the past,

01:00:40.200 --> 01:00:44.240
but they generally over time kind of declined.

01:00:45.280 --> 01:00:47.720
And they become a pretty large source of work.

01:00:47.720 --> 01:00:51.040
And I want our interactions with the community

01:00:51.040 --> 01:00:53.920
to be excited, like we're excited to do it,

01:00:53.920 --> 01:00:55.840
not unsure. Yeah, absolutely.

01:00:55.840 --> 01:00:59.400
So our current outlets are not quite,

01:00:59.400 --> 01:01:00.720
they're not like something on the web.

01:01:00.720 --> 01:01:02.200
And that's what's so great about forum software,

01:01:02.200 --> 01:01:04.360
because we do have the IRC,

01:01:04.360 --> 01:01:07.800
irc.geekshed.net pound Jupiter broadcasting,

01:01:07.800 --> 01:01:09.280
hashtag. Octothorp.

01:01:09.280 --> 01:01:10.800
Octothorp.

01:01:10.800 --> 01:01:11.760
So of course we have that,

01:01:11.760 --> 01:01:14.400
that's a persistent chat going all the time.

01:01:14.400 --> 01:01:15.960
But we also have the Telegram group,

01:01:15.960 --> 01:01:18.520
jupiterbroadcasting.com slash Telegram.

01:01:18.520 --> 01:01:20.840
There's over a thousand people in there chatting,

01:01:20.840 --> 01:01:23.800
usually about a hundred online at any given time.

01:01:23.800 --> 01:01:24.920
And then last but not least,

01:01:24.920 --> 01:01:26.200
we actually have a discord too.

01:01:26.200 --> 01:01:27.120
We don't do much with it,

01:01:27.120 --> 01:01:28.680
but there is a Jupiter broadcasting discord

01:01:28.680 --> 01:01:31.160
and I'll put a link in the show notes.

01:01:31.160 --> 01:01:34.360
I mentioned all of those because we do have some outlets

01:01:34.360 --> 01:01:36.120
of persistent chat where you can come

01:01:36.120 --> 01:01:37.000
and talk about the shows.

01:01:37.000 --> 01:01:39.040
But the nice thing about forums is you've got topics,

01:01:39.040 --> 01:01:42.840
you can, you know, episode 329 of Linux Unplugged,

01:01:42.840 --> 01:01:44.360
where they talked about flat networks.

01:01:44.360 --> 01:01:46.720
It is a different thing, it's its own beast.

01:01:46.720 --> 01:01:48.680
So I could be convinced of it again.

01:01:48.680 --> 01:01:50.480
Probably need some feedback about it though.

01:01:50.480 --> 01:01:52.080
And what would be the advantage of that,

01:01:52.080 --> 01:01:54.200
say over the Jupiter Broadcasting subreddit,

01:01:54.200 --> 01:01:55.200
which we've never really mentioned,

01:01:55.200 --> 01:01:57.400
but we have a Jupiter Broadcasting subreddit,

01:01:57.400 --> 01:02:00.120
which also kind of acts in that forum capacity,

01:02:00.120 --> 01:02:02.600
but not everybody wants a Reddit account,

01:02:02.600 --> 01:02:04.840
but not everybody wants to go make a forum account.

01:02:04.840 --> 01:02:07.160
So feedback, linuxunplugged.com slash contact,

01:02:07.160 --> 01:02:09.080
probably won't read them all on air,

01:02:09.080 --> 01:02:10.440
but we will read them off air

01:02:10.440 --> 01:02:12.520
and help it inform our decision.

01:02:12.520 --> 01:02:13.360
So there you have it.

01:02:13.360 --> 01:02:15.720
We did some feedback.

01:02:15.720 --> 01:02:16.720
Really quick before we run,

01:02:16.720 --> 01:02:20.840
also just a few picks to mention because I love these.

01:02:20.840 --> 01:02:22.960
Check out Wee Slack.

01:02:22.960 --> 01:02:25.040
It's a WeChat plugin for Slack

01:02:25.040 --> 01:02:27.520
and its developer was Ryan, our guest today.

01:02:27.520 --> 01:02:30.280
It has its own community now, it's its own thing,

01:02:30.280 --> 01:02:31.480
but he started it all.

01:02:31.480 --> 01:02:32.960
Yeah, he no longer is even involved,

01:02:32.960 --> 01:02:33.800
but it's still a thing.

01:02:33.800 --> 01:02:38.440
So if you want to use Slack still in an IRC client,

01:02:38.440 --> 01:02:40.640
it's possible using Wee Slack.

01:02:40.640 --> 01:02:42.040
And then I came across,

01:02:42.040 --> 01:02:44.440
I don't even know how I'm gonna say this one, Grinds.

01:02:44.440 --> 01:02:45.680
What do you say, Wes, give it a shot.

01:02:45.680 --> 01:02:48.760
Yeah, oh, why do you do this to me?

01:02:48.760 --> 01:02:50.720
Geerins. Geerins. Geerins.

01:02:50.720 --> 01:02:55.720
This is a fairly slick GTK desktop front end to Plex.

01:02:57.200 --> 01:02:58.360
We finally have one.

01:02:58.360 --> 01:02:59.920
Why would you want this, you say?

01:02:59.920 --> 01:03:02.800
I'll tell you why, because browsers are monsters.

01:03:02.800 --> 01:03:06.280
They take everything, your disk, your CPU, your RAM.

01:03:06.280 --> 01:03:08.160
They make your damn mouse leg.

01:03:08.160 --> 01:03:11.320
They are the worst.

01:03:11.320 --> 01:03:12.240
They're huge.

01:03:12.240 --> 01:03:15.240
One tab takes up way more CPU and memory

01:03:15.240 --> 01:03:16.400
than it should.

01:03:16.400 --> 01:03:18.360
And during some of our benchmarks,

01:03:18.360 --> 01:03:20.080
we have seen when a system gets loaded,

01:03:20.080 --> 01:03:22.480
we have seen how a browser tab can bring a system

01:03:22.480 --> 01:03:23.640
down to its knees when it's under load.

01:03:23.640 --> 01:03:24.480
It's crazy.

01:03:25.800 --> 01:03:27.800
This does none of that.

01:03:27.800 --> 01:03:30.080
It's a native, clean client.

01:03:30.080 --> 01:03:32.720
When it's sitting there and you're not playing anything,

01:03:32.720 --> 01:03:34.400
it's not using any resources.

01:03:34.400 --> 01:03:35.800
It just sits there quietly,

01:03:35.800 --> 01:03:37.840
doesn't peg your CPU constantly.

01:03:37.840 --> 01:03:39.240
And when you do want to play,

01:03:39.240 --> 01:03:41.320
it takes only the amount of resources

01:03:41.320 --> 01:03:42.960
it takes to just decode the video,

01:03:42.960 --> 01:03:45.120
which is probably pretty damn fast on your system.

01:03:45.120 --> 01:03:47.200
It's glorious.

01:03:47.200 --> 01:03:48.440
And it's a GTK application,

01:03:48.440 --> 01:03:49.880
so it looks great on your GNOME shell.

01:03:49.880 --> 01:03:53.040
What am I going to do with all this extra CPU time?

01:03:53.040 --> 01:03:53.880
I don't know.

01:03:53.880 --> 01:03:54.720
I don't know.

01:03:54.720 --> 01:03:55.560
Run Slack probably.

01:03:55.560 --> 01:03:58.120
But I was so elated when I found that

01:03:58.120 --> 01:03:59.840
because I like to have like,

01:03:59.840 --> 01:04:02.960
I have series on Plex that are like my barely kind of

01:04:02.960 --> 01:04:05.680
just background stuff that I play while working.

01:04:05.680 --> 01:04:06.760
So now throwing it up on a screen

01:04:06.760 --> 01:04:08.240
and not eating a bunch of resources while I'm working

01:04:08.240 --> 01:04:09.680
is fantastic.

01:04:09.680 --> 01:04:11.520
Trying to reduce resource usage,

01:04:11.520 --> 01:04:14.160
even though I have 12 cores.

01:04:14.160 --> 01:04:15.800
It's ridiculous.

01:04:15.800 --> 01:04:17.880
Mr. Payne, you're over there on the Tech Snaps,

01:04:17.880 --> 01:04:19.160
techsnaps.systems.

01:04:19.160 --> 01:04:20.160
Techsnaps.systems.

01:04:20.160 --> 01:04:21.200
There's no S on the Tech Snap,

01:04:21.200 --> 01:04:23.080
but I like saying it.

01:04:23.080 --> 01:04:23.920
Don't confuse everyone.

01:04:23.920 --> 01:04:25.160
I like saying it.

01:04:25.160 --> 01:04:26.040
I like it.

01:04:26.040 --> 01:04:27.640
So yeah, I've been really enjoying it.

01:04:27.640 --> 01:04:30.760
Give my rounds of compliments to Mr. Salter

01:04:30.760 --> 01:04:32.200
because I think he's really,

01:04:32.200 --> 01:04:33.160
both of you really hit your groove

01:04:33.160 --> 01:04:34.240
for a while now on that show.

01:04:34.240 --> 01:04:36.440
So it's been the sequence like good for a while, you know?

01:04:36.440 --> 01:04:37.280
I love that.

01:04:37.280 --> 01:04:38.100
Totally agree.

01:04:38.100 --> 01:04:38.940
Awesome show.

01:04:38.940 --> 01:04:41.880
And of course, Alex and I on Self Hosted next week.

01:04:42.720 --> 01:04:43.560
Brand new episode of Self Hosted.

01:04:43.560 --> 01:04:44.400
Oh, I'm excited.

01:04:44.400 --> 01:04:48.680
Tomorrow, live stream, live Self Hosted hack tomorrow,

01:04:48.680 --> 01:04:51.080
Wednesday, jblive.tv,

01:04:51.080 --> 01:04:54.320
10.30 a.m. Jupiter Broadcasting time.

01:04:54.320 --> 01:04:56.320
Alex is going to do a little live hacking on the stream.

01:04:56.320 --> 01:04:57.160
Oh.

01:04:57.160 --> 01:04:58.880
Just a little Self Hosted bobo.

01:04:58.880 --> 01:05:00.680
Bomo bobo for Self Hosto.

01:05:00.680 --> 01:05:05.400
ESP8266 hacking and LSDs and all that kind of stuff.

01:05:05.400 --> 01:05:06.240
Yeah.

01:05:06.240 --> 01:05:07.240
Sounds like just what we need to start up the holidays.

01:05:07.240 --> 01:05:08.080
I know.

01:05:08.080 --> 01:05:08.920
I love it.

01:05:08.920 --> 01:05:09.880
Of course, all of that can be found

01:05:09.880 --> 01:05:11.500
at jupitbroadcasting.com slash calendar.

01:05:11.500 --> 01:05:13.240
We're at ledxunplugged.com.

01:05:13.240 --> 01:05:15.240
And we'll see you right back here next Tuesday.

01:05:15.240 --> 01:05:16.080
Ah!

01:05:16.080 --> 01:05:43.160
The party of the century.

01:05:46.080 --> 01:06:01.560
Before we get out of here, JBtitles.com, I have a question for the virtual lug.

01:06:01.560 --> 01:06:07.440
Does anybody own a USB stick that they could still find that is less than 16 gigabytes?

01:06:07.440 --> 01:06:08.440
Megabytes.

01:06:08.440 --> 01:06:09.440
Megabytes?

01:06:09.440 --> 01:06:10.440
Megabytes.

01:06:10.440 --> 01:06:11.440
We have one for...

01:06:11.440 --> 01:06:12.440
No, megabytes.

01:06:12.440 --> 01:06:13.440
Hey, I mean...

01:06:13.440 --> 01:06:14.440
Joe does not play.

01:06:14.440 --> 01:06:16.560
Yeah, Joe has a 16 megabyte SD card.

01:06:16.560 --> 01:06:17.560
No, not megabytes.

01:06:17.560 --> 01:06:18.560
Oh, wow.

01:06:18.560 --> 01:06:19.560
I can't believe that.

01:06:19.560 --> 01:06:21.760
Yeah, I have a 256 megabyte SD card.

01:06:21.760 --> 01:06:23.080
256 is also here.

01:06:23.080 --> 01:06:25.840
Oh, I thought I'd be Mr. Bregsy here with my four gigabytes.

01:06:25.840 --> 01:06:29.240
Yeah, he just keeps his favorite GIF, just one on there.

01:06:29.240 --> 01:06:30.240
Oh, sorry, GIF.

01:06:30.240 --> 01:06:31.240
Is that what you prefer?

01:06:31.240 --> 01:06:35.880
Hey, do you remember those early digital cameras that actually took an entire floppy disk?

01:06:35.880 --> 01:06:41.720
They took a 1.4 megabyte floppy disk and then they saved the horrible JPEGs to the floppy?

01:06:41.720 --> 01:06:45.760
Yeah, I think it was a Canon camera and I think you could shoot...

01:06:45.760 --> 01:06:48.720
You could get 12 photos on one floppy, I believe.

01:06:48.720 --> 01:07:12.040
You would have killed for 16 megabytes back then.

