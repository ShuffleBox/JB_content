Alright, I had a little pre-show topic that I didn't think was going to make it, mainly
because I'm still trying to figure out this whole thing, but it seems to be, in the last
couple of weeks, we haven't talked about it on the show, but there has been another resurgence
of anti-System D sentiment.
People are everything now.
System D is a monster that's eating Linux.
System D is a division between the young and the old.
System D is a division of core fundamental philosophies of the Unix way versus staying
competitive in the cloud, blah blah blah.
It's all of this stuff, and producer Eric here, who's in studio today, linked to an
article in the subreddit that was written up on infoworld.com by Paul Valencia, and
he says, choose your side on the Linux divide.
The battle over System D exposes fundamental gaps between the Unix old guard and the new
guard of Linux developers.
Is this really a young versus old thing, guys?
Doesn't feel like it to me.
I don't think so.
I can see where they're coming from.
All right, lay it on me.
Go ahead, Rod.
Go ahead.
I was just going to say, it feels like they're just going, no change.
Exactly.
Yeah.
Okay.
What do you think, Colonel Linux?
I feel the same way.
I think that it comes down to a lot of people that have dealt with Linux for years and say,
I mean, we have this in its system, and it worked, and everything was there, and if we're
going to modify things to go to this top-down approach, all-inclusive approach, rather than,
you know, it goes against the fundamental Linux philosophy, and at the same time, there's
people like me or a couple other people in our generation that look at it and say, well,
who cares?
If it's better, let's go with that.
Yeah, I mean.
Progress train coming.
I just, I feel like, so here's his fundamental argument.
He says, fundamentally, I think it exposes a separation of the Linux community between
those who were deep into Unix before Linux came onto the scene and those who came later.
I can't help but think that a number of the younger developers and admins are missing
key elements of how Unix-like systems were designed, how they function before, say, 1998,
when Unix was for servers and high-end workstations, not for desktop systems or laptops.
And you see-
That was the point-
Are you kidding me?
That was the point that seemed the most questionable to me, because system D, like, the desktop
user doesn't even care about that.
Right.
It is for servers.
It's so much for servers.
That's why it's being driven by Red Hat so much.
That's one thing that I liked about having an openSUSE server at home, is that it has
system D. System D is great for server management.
Right.
Totally.
You can control your mounts and stuff.
I mean, it's awesome.
Yeah.
I just, okay, so here's what I recognize, is we are sort of consolidating a lot of functionality,
but it seems like a lot of times it's functionality that it hasn't been, maybe it's been left
to sort of wane over the years.
And so nobody's really picking up the slack in a lot of these cases, or times have changed.
You know, having the ability to have your mount system be aware of when your network
connection goes inactive and active, almost seems like just kind of fundamentally basic
functionality that a modern operating system should have.
Absolutely.
Exactly.
Exactly.
I don't understand the argument that it's not Unix-like, or it's against the Unix philosophy,
because Linux isn't Unix.
Exactly.
It hasn't been.
Exactly.
If you want to be more Unix-like, use BSD.
But Linux isn't Unix anymore.
Well, but isn't some of the things where it is the most Unix are some of the best things
about it?
I mean, isn't that what's made some of us drawn to it over, say, Windows or Mac OS
10?
Is that it has-
Fair enough.
Fair enough.
That you should ignore when other things surpass Unix?
Exactly.
Exactly.
I mean, I think that's actually probably the best thing about Linux.
You know, it's a community-driven, you know, whatever works best is what gets adopted.
Everything else gets forked or abandoned.
You know, and so system D is like the natural extension of everything else.
You know, in the subreddit, I'm looking at tire sees he put in there.
Here I was thinking I chose and built my tools by what they could do for me and not their
inherent philosophical values.
People need to be reminded that the Unix philosophy was grounded in the pragmatic reality of computer
systems in the 1970s and emphatically not deliberately created as a blind dogma to be repeated and
followed without comprehension or context.
Absolutely.
Yeah, I guess that's a good point too, right?
Yeah.
Is we shouldn't take something that was a design philosophy influenced by the time and
then make it a credo, almost a constitution, right?
We should, that would be inappropriate.
Exactly.
That's the way Windows.
It was never meant to be that.
What do you mean?
You mean like what Microsoft does?
Exactly.
Well, and actually I want to underscore that point because I think that's one of the best
things that's kept Linux so nimble is this willingness to re-examine and redo fundamental
parts of the OS that a lot of times there's not an immediate commercial incentive to do
so.
You know, it's not going to make a great bullet point on the side of Red Hat's, Red Hat Enterprise
Linux box, but that still gets done.
And I think that's fundamentally.
We can, we don't want to move away from that willingness to move forward like that because
we don't want to stagnate like the commercial operating systems have.
Yeah.
We don't want to end up with HFS plus as a file system.
Right.
Exactly.
Or actually butter.
But who are we to question our Unix forefathers and try to change their constitution?
Wow.
Wow.
We're.
Trollmugs?
Wow.
Well, you know, all joking aside though, there is a difference in architecting a society.
A society versus architecting a technology solution because a technology, a society is
fundamentally based on human behaviors and in human nature, but a technology solution
is fundamentally based on something that's always evolving.
Something that's capabilities and requirements, needs, demands are always changing from, I
mean, just over five years, technology changes so much.
So it's, it's not really, I think that's probably the biggest thing to pull from this discussion
is this, it really isn't fair to limit today's systems by a philosophy that was designed
like, like you wouldn't, you wouldn't produce a TV series by the same restrictions that
a TV series had in the 1960s.
But the thing is that like the, the best aspects of Linux survive the best, the worst aspects
of it go away.
And so, so in part of that, the core philosophies that have brought us to this point in history,
you know, either survivor or go away, but you know, ideally they survive, you know,
I mean, it shouldn't be like some sort of preservation, it shouldn't be a museum.
Um, so you, you, we were talking about like one of the great things about Linux writers
that, that we have, um, the capability or the, I don't know what the word is, but to,
you know, uh, completely rip out what we have and put in something new, which is true, which
can be a good thing, but we also tend to go too far with that.
Yeah.
Like look at gnome three when it first started, it was awful.
I love, I mean, I'm a gnome user now, I love it.
But gnome three when it first started was awful because we rip out a paradigm or how
I imagined Wayland is going to be right.
Yeah.
Yeah.
Yeah.
Very much so.
And we're going to be reeling these words when we're all switching over to Wayland.
Oh yeah.
Oh yeah.
Now looking for, yeah.
Well, and three years later after we switched, after we make the switch, trust me, it'll all
work fine.
Right.
And it will be, it'll be like, oh yeah, we had to, we, we had to, that's exactly the
most logical thing to do.
It was the only way forward.
Yeah.
No breaks on the progress train.
Yeah.
And people, people seem a lot more cautious these days than they did when I first started
using Linux like five, six years ago.
Yeah.
Maybe that's a sign people are using it for more serious things.
Yep.
Yeah.
This is one of those things where it seems like it's a, almost a liberal, liberal versus
conservative argument.
Well, and it also feels a little bit of growing up, like the Linux that, the Linux that we
played with years ago isn't, now Linux is an adult and it's not the same Linux anymore.
It's not a toy anymore.
Yeah.
Right.
It's used in production and we need it for our tool chain and we need it to, yeah, blah,
blah, blah.
It's not, it's not the fledgling little, remember, hey, you guys remember that the number one
phrase that used to be appended before the word Linux in any article was the grassroots
project, the grassroots initiative Linux.
Oh my gosh.
Remember grassroots?
How much we used to hear grassroots?
Well, now Linux is the number one operating system on the planet, right?
So it's not grassroots.
It has roots.
Well, so if it's being used for that, if it's being used for that, you know, art, fundamental
architecture, then continuously ripping out things isn't good because no, I would have
a hard time not being a Linux user, looking at Linux and seeing that, you know, you rip
out, you, you rip out everything and bring in Pulse Audio and then you have audio issues
and then you rip out the display server and now we're going to have display issues.
Well, I would have a hard time switching to Linux were I not, you know, that's why, why
the fork is simultaneously one of the most disruptive things in open source and simultaneously
one of the best things in open source because you can have a company fork something and
they can have an LTS release for a while that rides that out, right?
That just sort of waits it out and then switches over or you can have a company that's delivering
a product on a phone or on a router that can maintain their own fork internally and continue
to, you know, churn out whatever it is they have to bang on for a while and then until
things stabilize again.
So it does mean a little bit of in-house investment, but it's way better than having to invent
the entire operating system from the ground up.
Or to have to recreate your entire tool chain when Windows decides to go to Windows 8 or
whatever and destroys everything else that, you know, you had previously, you know what
I'm saying?
I mean, come on.
And that's where community comes in to Linux.
That's why community is such a, you know, awesome thing.
And hence we finally have a Mate version of Ubuntu.
Thank you very much.
Welcome to Linux Unplugged, your weekly Linux talk show that's powered by delicious smoky
cheddar.
My name is Chris.
And my name is Matt.
Hey there, Matt.
We've got a fun show today, a lot coming up.
And to make it a little extra special, producer Eric is in the studio with us right now.
Hey there, Eric.
Hey, Chris.
How you doing?
I'm good.
Glad to have you here today.
Yeah, thanks.
Thanks for eating my meat before the show, too.
You know, that was good meat.
I'm going to, I'll be honest, right up front, it was really thick and it didn't melt all
the way.
Yeah.
So we had softened smoky cheddar.
Yeah.
It was still good, but it was just a little thick to bite into.
Some of it had to come off, unfortunately.
So you know what I did?
I'm not one to take just a big block of cheddar on my, I mean, I like, but I got to be careful,
right?
And if I'm going to go for it, it's got to be right.
It's got to be worth the pain.
So I took a whole row of sliced hot onion right off the barbecue, 550 degree onion.
Put it down on top of the cheese and that, and that onion melted into the cheese, Matt.
Why am I talking about this?
I guess I'm still, I'm still a little hungry.
Are you going to like Skype message me a burger or how's this going to work?
You know what I mean?
Sorry, Matt.
I know.
I shouldn't talk about it unless I brought one for the whole class.
Although the man does provide bacon of a morning when I come into the show.
That's true.
Yeah.
So I'm okay.
I'm okay.
All right.
Well, hey chat room, please don't forget to bang suggest as we go along on today's show.
We've got a lot to cover, including some more exclusive interviews from LinuxCon 2014.
Noah's also here to give us his impression from the floor and tell us a little bit of
behind the scenes from the trip.
There's an article that also came out that wants us all to just shut up about Linux on
the desktop.
Just shut up.
Stop talking about it.
And I think we're going to have to talk about it a little bit.
And as well, we also are going to do, it is something new we're doing at least once a
month for a little while.
We're going to take a little look back at Linux from years ago and this is our last
chance to do it for the month of August.
So we'll take a retrospective look back at Linux from five and 10 years ago.
Some interesting stuff in there for you guys.
But first I want to start with our feedback as is something we like to do on the unplug
show.
And a Texas Linux user wrote in.
You guys might remember Texas Linux user.
He wrote in a couple of weeks ago about switching from a Linux box to a Mac.
He says, hello Chris, Matt, Arcee and of course the mumble room.
Well I didn't realize that my email would cause such a stir even across multiple shows.
First let me say I just haven't switched to the Mac yet but I still plan on doing so.
With that said, let me express some thoughts after hearing your discussion going on across
the shows.
In both Coderadio and Linux Unplugged, Chris mentioned I should try out elementary OS.
He says I'm actually already an elementary OS user.
He's been running on a Dell.
The reason I use EOS, don't call it that, was because it solved a big problem that I
had.
Finding a decent desktop that just let me get my work done.
I can't begin to describe how frustrating using any other desktop environment has been.
Elementary OS solved this by a long shot.
No other desktop has even been close for me.
So let me give the listeners a chance for their head to stop spinning.
But I mean it.
No other Linux desktop is even close.
All right, the past several weeks across JB shows, you and Matt have been kind of griping
about how most Linux desktops are kind of missing that special thing that would propel
them into the mainstream.
It seemed as if there was no desktop that was just right and I'm here to say that's
absolutely true.
There is no desktop that fills the dream of Linux desktop.
Because Linux dream is just that.
It's just a dream.
A dream that every Linux user has, but a thing we forget to or we ignore is that no one dream,
no one dream, no one has the same dream.
We all dream different things and want different things.
We as a community have fooled ourselves into thinking we could bring together this group
dream to a life we can't.
Why is elementary OS project doing such a good job of building a decent distro?
Simple.
People dream the Linux desktop ideal and focus on core improvement design ideals like the
human interface guidelines that they have.
The other reason why elementary OS folks stick out so much better is because they aren't
making design choices out of the blue.
They have a guideline.
They stick to it.
And they have a technological underpinning of an OS that can stick to those guidelines.
Before EOS came along, I was distro hopping like crazy because I was chasing that dream
of the Linux desktop.
After a week of using EOS, I realized what an idiot I was for all of that.
In the end, I'll be switching to the Mac, but I won't cease to be a Linux user.
I do have another machine that will run Linux, but switching solves two very big problems
that plague Linux.
A desktop that doesn't get in your way and lets you work and good hardware that just
works out of the box.
Thanks for the great show.
As of yet, still a Texas Linux user.
He had me till the last two things and then he just literally factually gave a single
user experience versus a collective user experience.
Right.
True.
It's just like, um, actually, no, but okay.
Yeah.
So a couple of things I take issue with.
So one thing that I think is kind of a common thing that a lot of Linux users repeat is
there's no desktop gets it just right.
I have to keep switching around because I'm never happy.
And what I, I used to feel that way too.
And then I realized that almost the option of having choice makes you constantly want
to jump around just a little bit.
And when you just settle down and just stick to a desktop and just learn to work with it,
because this is what elementary OS and Mac OS present the user.
You have no choice but to use this desktop.
So therefore your choice is I will then learn how to modify this desktop in just the slight
ways that I need a granted, I'm not, I'm not dismissing it whole cloth.
They have to start somewhere really reasonable.
That's really well done.
And then they move then as the user, you then just move that to the, to the position you
needed to be in and you just, that's the only choice you have.
So therefore you make it work.
You learn one desktop.
There's not a lot of options.
You're not constantly considering the grass on the other side of that fence.
It's not that kind of scenario.
You just double down.
If I pretended like there was no other desktop environment in the world for Linux except
for Gnome, if we all did that, like if just one day we all woke up and there was no other
desktop except for Gnome, we would all just figure out how to make it work for the most.
A lot of people would leave, but I think a lot of people would just stop their hopping
around or Katie or whatever.
What do you think, Eric?
Well, I'm thinking, I see different desktops as different tools.
You know, you have your Gnome desktop, which I spend most of my time in, especially if
I'm leisurely using my computer, but if I need to do anything developmentally or if
I need to, say, mass upload a whole bunch of pictures that I have in a folder to Facebook
or wherever, then I'm going to grab and get into KDE because I've got skipping colors.
So you switch just based on the workload of the day.
That's correct.
One's like your work desktop, one's your play desktop.
Yeah, exactly.
And depending on the situation, heck, I'll even use Windows if it warrants a need.
So do you feel like you have the sensation that no one desktop is quite doing it for
you?
Yeah, absolutely.
Because the different desktops have different focuses and different tool sets.
Well, okay.
But, or is it that you have learned workflows in those other desktops and so to you it feels
that way, but if you learned the workflow under Gnome, for example, like I'll give you
an example, like this is just a small example, but under KDE you can modify the KDE screenshot
application to upload right to Imgur.
Under Gnome, not so much.
There's ways to do it.
So I switched to Shutter.
On the Mac, it would be the same exact thing.
You're never going to build in Imgur upload directly into Mac OS X.
So on the Mac, I get a screenshot tool that just uploads to Imgur.
Therefore my workflow works on either desktop.
One requires a little more work, but at the end of the day, I can accomplish the same
task on either one.
So sticking with the Mac, I would have no option but to go the Imgur app route.
And so I wouldn't see that as a, oh, well, Gnome can't do something that KDE can.
I see that as a, well, that's not built in, so I just got to go find something that does
it.
So I guess what I'm saying is, to me, it seems like not having a choice of desktop forces
you to rethink the way you look at a problem.
And it's not that the Mac interface is some amazing development of design and user interface.
It's that it's good enough, it does essentially what it needs to do, and you really have no
other choice.
Yeah, and then you just add options and tools on top of that to make it do what you need
it to do.
And I could say you could do that with just about any Linux desktop environment.
Yes, granted, I do use Gnome most of the time, but like I said, I will jump into KDE if I
need Dolphin to do its thing or what have you.
Let us know how it goes, Texas Linux user.
Next email comes in from XY, and this is maybe one we could get the Mumble Room's thoughts
on.
He says, Dear Chris and Matt, I'm a Windows user that switched to Arch Linux.
It took me, I love this, as a Windows user, here's what I hear.
It took me two days to set up a proper install with encryption and LVM.
I installed a minimal version of Gnome 3.12 and all seemed great.
But then I discovered Gnome's geolocation package, GeoClue, and it's not removable because
it's integrated into Gnome.
This makes me so mad.
Do you trust the disable option in this?
So I thought, who better to ask than our gurus, Chris and Matt, and I'm going to also throw
the Mumble Room in on this, how can I remove the geolocation feature from Gnome?
Thanks in advance, Mike.
Well, if it was me, I would just try XFCE.
I would flip this around like, why did it not bother you in Windows?
You know, like the Windows has the same thing.
All the NSA tagging and all the other stuff going on, that was fine, but oh no, Gnome.
So I'm sure this is there for like time zone functionality and things like that, right?
That's pretty much it.
I mean, I'm looking at the option right now.
Right now I have location disabled.
Yeah.
I do trust that and here's why, because that code is open and if that code didn't do what
it's supposed to do, eventually somebody would say that and go, hey, a minute, this is not
disabling anything.
Yeah.
And it'd be a big controversy.
Oh yeah.
Useless button, red flag.
So by default, I kind of have a little more trust, but I don't know.
Yeah.
I agree.
I think we should just suggest that he go and audit the code if he's really that concerned
about it.
For real.
It's an option.
Or have somebody he trusts audit the code that can.
Or hire someone.
Yeah.
I mean, to me, think about what would be the motivation to put a button in an open source
UI that controls open source software on an open platform where anybody has access to
the code.
Exactly.
What would be the motivation to make a button that doesn't do what it says to do in that
scenario because it's not like it takes some decompiling and some super secret hacker investigations
to sniff packet captures and compare it with time and date stamps and geolocation.
No, it doesn't take any of that.
It just takes somebody to look at the code and go, yeah, this is bullshit.
So there's a middle ground though, because remember when Canonical had the little turn
off online search results, it was doing what it said it was going to do.
It was telling applications that you shouldn't render those search results online.
But if I remember right, it was a flag that the applications had to choose to obey.
That's true.
That's very true.
That's very true.
I don't know.
I think that's a little different because it wasn't a central location lookup service,
right?
I don't know.
Yeah, but that's a great point.
It's worth being skeptical.
I'm not making fun of them for being skeptical.
By the way, one program I know that uses GeoClue in the background is Redshift because
then it determines where you are on the planet and sets your screen temperature accordingly
depending on if it's nighttime or daytime.
Yep.
It definitely is.
That's definitely one of them.
Yeah.
Yeah.
There's a few in there.
And I use it too.
I don't even bother disabling it because this is why I use an open source operating system
to begin with this so I can have some level of comfort in these features.
I think it is good to be vigilant.
Right.
Yeah.
Right.
Absolutely.
Speaking of being vigilant, you know what else you should be vigilant of?
Your mind.
Go over to linuxacademy.com slash unplugged and go educate yourself a little bit.
You want to get into development?
You want to learn how to program?
You want to know a little bit about AWS or just the basics of Linux just to cover in
those gaps for maybe when you self-taught yourself?
You'd be surprised how effective it is when you go over and just use a little bit of training
to fill in some things that perhaps you didn't pick up along the way.
Even somebody like myself who's been using Linux since the 90's, I've taken a couple
of these courses and been really thankful that I did.
I've discovered there's been little things that I could have been doing to make my life
easier.
So go check out linuxacademy.com slash unplugged.
Take advantage of the Summer of Learning Savings.
It's just going on for a little bit longer.
And Linux Academy is awesome.
They have step-by-step video courses, comprehensive downloadable study guides, seven plus Linux
distributions you get to choose from, and then they'll automatically adjust the courseware
to match that Linux distribution, which is awesome.
And for me, because I have a horrible memory, I love that they have all of my progress.
Everything's right there in a dashboard.
When I log in, I can check right where I was, pick up, I could go back a little bit, I could
self-test, and they really break down individually how long each little part's going to take.
So for me, who's somebody a little bit OCD about, well, if I'm going to sit down and
do this, I want to make sure I have enough time.
And I love that I say, okay, you know what, I can get 25 minutes in tonight.
And then I walk away really feeling like I've accomplished something and intellectually stimulated
myself.
LinuxAcademy.com slash Unplugged, this is a great opportunity to get your skill sets
up on AWS.
They have end-to-end scenario training where you'll actually walk away having deployed
something in a very production-like environment because they're spinning up AWS instances
on the background.
They're using S3.
They're using EC2.
They're having you deploy an application in those scenarios.
If you need to learn OpenStack, they've got a lot of comprehensive guides on OpenStack,
more content all the time, including live stream events where you can ask the educators questions
about OpenStack.
And then to top it all off, they have a community that's packed full of people trying to learn
and people who are experts, and they can give you that little nudge when you need a little
more.
LinuxAcademy.com slash Unplugged to get the summer of learning discount.
Go check them out.
Go look at all the new OpenStack stuff.
Go look at all the new AWS stuff.
And go look at all of the awesome Linux courses they have.
If you're ready to get your certifications, LinuxAcademy.com slash Unplugged, and a huge
thank you to LinuxAcademy for sponsoring the Linux Unplugged program.
Good stuff.
Great, great, great service for you guys.
I'm so happy to have them as sponsors.
Go check them out, even just to learn a little more to thank them as a way to just say thanks
for sponsoring the show.
Go to LinuxAcademy.com slash Unplugged.
All right.
We've got two more emails to get to before we get to our LinuxCon interviews.
And our next one comes in from Alec.
And he's following up on a topic from a while back.
He says, hey, Chris, Matt, chat room, mumble room.
A couple of months ago, you were discussing the usage of open source in schools and had
received a lot of feedback saying that a lot of the IT curriculum is not well designed
and does not really incorporate Linux and free software.
I have found that not to be the case.
I'm 13 and I run Gentoo on my custom-built rig and Ubuntu on my DigitalOcean VPS.
I have found that the IT teachers in my school have been knowledgeable about Linux and have
encouraged its general use.
I find there's a lot of enthusiasm for Linux in younger computer users as well.
Thanks for all the great shows.
Alec.
I'd like to know where this kid lives.
That's some great news, right?
Yeah.
I was going to say, I think Venue plays a lot in it.
I think it depends on where you live.
On certain communities, I certainly think that's the truth, especially in places like
Canada.
I know they're really big in Linux there.
But here in the Northwest, I think it's kind of hit and miss.
Yeah.
I mean, we do have that Microsoft backyard culture that could be influencing our perspective
on it.
You know, I was very lucky that when I was in high school, Linux was very early and my
teacher had heard of it and he was cool with giving it a shot.
In my school, it was just some students, a group of students got together and said, hey,
let's give this a shot.
And then the school faculty who had a contract with Microsoft said, ah, no.
Really?
I had a similar experience.
As a Canadian, I can say that when I went through high school, everything was Microsoft.
And I've talked to members of the local users group here and they've talked about the same
kind of problems with getting Linux into schools that you've mentioned on the show.
So I think it might depend on the province to some extent.
I'm sure it could depend on the district and their, you know, their culture, their deals.
Oh, yeah.
I mean, certainly.
I can at least speak to my own school district.
This year, we all got Chromebooks, which, I mean, the first thing I did when I got it
was install Ubuntu in a CH root and, you know, and then I've been charging my friends $15
to do it on theirs.
Good man.
I like this guy.
Yeah.
The funny thing about it, the funny thing about it is they've had these awful issues
with their web proxy that they send all our traffic through.
And so like in the middle of class, like people will be working on their Google docs or whatever
and it'll just, you know, disconnect.
And so I was in my AP biology class with this other kid that I'd installed Linux on.
And so all of a sudden everyone starts raising their hands and like their stuff isn't working
and like they can't connect to anything.
And only the two of us, it is only the two of us that have a working internet connection.
It was pretty great.
That's a nice win.
I like how he thinks too.
Yeah.
That is, that's very clever.
Are you using Crouton?
What are you doing to install a Ubuntu on there within the church?
Yeah.
Nice.
Oh, that's clever, dude.
Good for you.
And it may, and you know what?
It's a win for the kids too.
15 bucks.
And now they've just turned that computer into a computer and mostly they, they mostly
want it so they can, cause if you do that, it doesn't go through their web proxy anymore.
So you can get to Netflix and get to all that kind of stuff.
Nice.
That is, that is really great.
Ingenious.
That's great to hear.
And you know what?
That makes me, cause that, that makes me happy that Chromebooks are doing so well in schools
because it means every kid that gets a Chromebook potentially has that option.
That's right.
And it just takes a little initiative to do it or a friend that will charge you 15 bucks.
Yeah.
And you know that that's not entirely out of their realm.
I mean, look at what, look at what Linux supporters do every day.
Yeah.
They support Linux in the background.
Yeah.
Dude's on his way to a contracting gig.
That's right.
He's going to be an IT consultant soon.
That's right.
Exactly.
Uh, okay.
There are the students that, that say, I can't believe you're charging 15 bucks to type stuff
into a computer.
You're like, do you know how to type that stuff?
That's right.
Yeah.
Exactly.
There's people that make millions of dollars a year typing things into a computer.
You say, welcome to the knowledge economy, sucker.
You know, at this conference I was at in Coeur d'Alene a couple of weeks ago, I was telling
somebody about Linux and they're like, well, if it's free, what do you have to pay for
it?
Like the knowledge of the person.
Think about like a doctor.
If you go to the doctor, you pay them for their knowledge, not any product.
I can cut you for free, but knowing how to cut you is what's important.
That's right.
That's right.
That's a great analogy, Alex.
Yeah.
Yeah.
Uh, all right.
So we have, uh, one more email.
It comes in from friend of the show, Stevo.
He writes in from time to time and he says, hi Chris, I came across this and it looks
like something that's right up your alley.
It's a Kickstarter project.
Now you guys know, I don't, I, if we, if we talk about Kickstarter projects all the time,
I could have, we could have a whole show about Kickstarters every week, but from time to
time there's a game that comes out on Kickstarter that, uh, scratches my funny bone in my special
place that makes me, I even decided to back the game because they already out of the box
have got Linux support and it is a old school, uh, platformer looking game, 8-bit style goodness.
Uh, they have 993 backers.
They're trying to get to $50,000.
They're at $28,000 right now with 10 days to go.
This game looks like a cross between Mario, Metroid, um, uh, I'm trying to, I'm blanking
on some other games, but the first thing I thought of was Metroid just straight off the
bat.
Yeah.
And they've got like some great, uh, some great videos and, uh, some great, uh, GIFs
and it looks like a ton of work's already been done on the game and it already has a
working Linux port too.
So yeah, that I did with that.
I decided, you know, if there already has a working Linux port, I'm going to go ahead
and back it.
So I backed it for 15 bucks and you get, you get access to the games.
They're going to release it on Linux, uh, Mac, PC, or I guess Windows and the Wii U
they say.
Via Steam apparently.
Yeah.
Via Steam.
So I'm just going to put a link in the show notes if you guys want to check it out.
Stevo, I recommend it.
He's got good taste and, uh, I watched the video and I decided to back it.
And I, for me, my Kickstarter rule for games is, uh, I don't do games that either if they
have stretch goal for Linux, I don't back them until they've reached it or I don't back
them unless they upfront say Linux support.
Yeah.
Some people tease me with Linux support because they don't, you know, you never know if you're
going to get it.
So at this game, they're staying right out of the gate.
They're doing Linux.
It looks like a cool project too.
So it's, uh, the game by the way is called Hive Jump if you want to look for it directly
on the Kickstarter.
We have a link in the show notes.
Thanks Stevo for sending that in.
If you guys see something that's really awesome in the Linux dimension on Kickstarter, uh,
you can always email it in.
Go over to jupiterbroadcasting.com, click the contact link and choose Linux Unplugged
from the drop down or Linux Action Show.
If I'll leave that to you.
It's based on your timing, your sense of timing.
Earlier in the week, probably should go to Unplugged.
Later in the week, Linux Action Show.
You know what?
I'm not going to put that on you.
I'm not going to put that on you.
You guys can decide.
You guys can decide.
Flip a coin.
All right.
So let's shift gears to LinuxCon 2014.
Uh, in fact, before we do that, I'll stop and I'll thank Ting.
Everybody right now.
Hey, do me a favor.
Do me a solid.
Go to linux.ting.com right now, linux.ting.com.
Everybody do it, linux.ting.com.
And here's why.
Go to linux.ting.com, that's going to get you a $25 credit for your first month of Ting
or more if you bring your own Ting device.
If you don't have a Ting device, they're going to take $25 off your first phone.
Real talk everybody, you got suckered into buying contracts and phones that are really
not good for you.
They're not good for you financially.
They're not good for the soul.
Ting is mobile that makes sense.
No contract, no determination fee, and you only pay for what you use.
It starts at a flat $6 per month.
Then they just take your minutes, your messages.
Then your megabytes.
They add them all up, and that's just what you pay, plus any taxes that might be applicable.
Linux.ting.com, try out their savings calculator.
Ting has such an awesome setup here.
And if you think about if we could go back in time, like if we all had DeLoreans, get
them up to 88 miles per hour, we got those awesome Doc Brown sunglasses that he totally
couldn't see anything out of, and you got your old man makeup on because you're going
back in time.
Right?
I mean, real talk everybody, right?
Real talk.
No BS.
You're going back in time to restructure the mobile industry.
Let's not kid ourselves.
You'd do it just like Ting's doing it, right?
You'd have no hold customer service, 1855 Ting FTW, anytime between 8 a.m. and 8 p.m.
A real Canadian answers the phone.
That Canadian isn't just polite.
They're actually empowered to solve your problems.
They're actually Android fans.
Oh, and did you know you can go get the Nexus 5 directly from Ting's website?
Boom.
You own that Nexus 5.
It's no contract, straight out.
It's your phone.
Just like when you go buy a laptop, you own that laptop, and if you just want to use Ting
for the data, you can.
Personally, I'm almost all Wi-Fi calling these days, and it's amazing.
I've currently got three active phones on my Ting account, and I am paying less than
all you fools in the other contracts out there.
Paying less than all you guys.
Linux.ting.com.
How's your Nexus 5?
My Nexus 5 is great.
Yeah, you just got that cool gamepad controller, too.
Yes, I did.
The Mocha gamepad, the pocket one, it just fits right in the palm of my hand.
Yeah, buddy.
You can take it anywhere.
Score.
Yeah, it's really neat.
The HTC phones, the Nexus 5, some amazing phones, Ting's got them.
The iPhones are great.
Ting's got them.
They also have just dedicated hotspot and tethering if you just want to have some mobile
data.
$6 hotspot, you guys.
You buy it once.
You go to linux.ting.com.
They're going to take $25 off, and then you have a hotspot.
You can put it in your bag.
Put it in your MERS.
Put it in your purse.
Put it in your drawer.
It's a $6 hotspot.
You need data.
You turn it on.
You've got data.
Come on.
It makes so much sense.
Linux.ting.com.
Try out the savings calculator.
Just put in your actual usage, not the gimmick you're paying into that you may or may not
be using all of.
Put your actual usage into that savings calculator, and then sit back and go, I could buy a laptop
every couple of years with that savings, linux.ting.com, and a big thank you to Ting for sponsoring
Linux Unplugged.
Okay, so let's get in the Mamba Room, and we'll start.
So Noah, if you're in here with us, I'm going to play a couple of these interviews, and
then after they wrap up, if you have any extra things you want to add to them or anything
like that, you'll have the floor.
I thought we should probably start with the one that seemed to interest you the most.
You seem to really enjoy your chat with Matt from Cumulus Networks about their Linux software
networking infrastructure.
So I teased part one in Linux Action Show on Sunday.
Let's start with part two, where you could see Noah starting to get really interested.
He's like, okay, wait a minute here.
If I was going to implement this, how would that look?
And so that's where this discussion starts out.
If you didn't catch our coverage on Linux Action Show on Sunday, Cumulus Networks is
working on replacing extremely high-end Cisco-type networking equipment with Linux-powered infrastructure.
So when you need to manage an interface on a switch, for example, you use ifconfig.
It's amazing.
It's crazy.
And it's here today.
Okay.
Now, one of the things that I would be looking at from a system administration standpoint
is how difficult is it to move from one infrastructure to the other?
So for example, what routing protocols are supported?
I mean, if I'm coming from a Cisco environment, for example, I'm sure there's going to be
some routing protocols that just aren't open standards, and so they're not going to be
able to be used with Cumulus Linux.
Can you speak a little bit about that?
Yeah.
So we have a partnership with Quagga, which is a well-known open-source routing suite,
and that includes very stable support for both BGP and OSPF.
And so that's both, again, for IPv4 and IPv6.
Now, our focus today is mostly in the data center, and that's in a layer-three-cloth
design.
Essentially, what that means is you have leaf and spine.
It's a very horizontally scalable infrastructure.
It's typically what the big boys do.
If you look at a Facebook or an Amazon, they're pretty much all geared to that infrastructure.
Now, they may run kind of a virtual network on top of that, just as they may use virtualization
for their compute, but the underpinnings are traditionally a large, scalable layer-three.
So those are our two main routing protocols.
We also have a number of protocols supported for layer-two.
So obviously, the very basic would be something like LLDP, which is similar to CDP, a way
of discovering ports on the network, up to things like MLag-like functionality.
So you can have two switches act as one to a particular downstream host.
So we're continuing to add features both in the layer-two and layer-three space, but we're
predominantly in the layer-three side, and BGP and OSPF are our most well-tested protocols,
and that's what pretty much 99% of our customers use.
Perfect.
And what would you consider the ideal green environment for, I want to use Cumulus Network,
how do I implement that?
What would be your ideal customer?
What do you think the best fit for somebody that's maybe looking for your product?
Well, today we focus mostly on Broadcom-based products, and so Broadcom has a huge majority
of the market.
So when you look at a lot of data centers, switches, these are 10 gig, 40 gig, even one
gig switches, again, from Adele or Cisco or Juniper.
They have the lion's share of the market.
And so we focus mostly on the 10 gig and 40 gig spot at this time.
So for smaller businesses, we don't have, I would say, kind of a cheap or affordable
one gig switch.
We have a few that we make available, but we're continuing to improve upon that.
So I would say if you're doing 10 gig and 40 gig traffic, it's a great fit there from
a traffic perspective, and certainly on the economic side.
All of our pricing is transparent.
It's on our website.
It's very clear what the pricing model is.
It's very similar to Red Hat.
It's basically a license that you have to utilize the software for a year or three years
in different support levels.
We don't have any time bomb in the product, so it's not as if after a year it just stops
routing your packets.
We don't do anything like that.
We try not to be evil.
But I'd say really the third most important thing in that list is really just the philosophy.
So if your organization has already switched to using some automation software and has
strong Linux knowledge, particularly on the networking side, or that team is kind of hip
to that environment, it works out really well.
We see this a lot with customers where virtualization was seen as kind of a scare, where well, when
we deploy virtualization, we're going to lose all these help desk folks.
But really it just grew capacity for that part of the organization.
This is the same thing.
So a lot of times networking teams have struggled because they have to use something like Tickle
or XSLT or some sort of proprietary programming language that's not well adopted or just never
got mainstream interaction.
What's great about Cumulus Linux is that that knowledge that you already have in-house can
be immediately applied.
So if you've written everything in Go or CornShell or PopIt or Ansible or whatever the case may
be, that can now immediately apply to your network.
So if your networking team is very much Linux savvy, it's a great fit.
And speaking of actual in-production environments, you find a lot, every large organization,
they have a ton of system administrators.
They don't necessarily have a lot of network engineers.
So how does Cumulus Linux cater to that evolving market dynamic?
Well, that's a great question.
So on the sysadmin side, we've tried to be very open about the software that we support.
So we just announced a customer that developed actually Chef cookbooks.
The customer's name is Uyala.
And they actually published on their GitHub account cookbooks that support both Quagga
generation and the Excedra Network Interfaces file, which is the Debian-style file for configuring
both physical and logical interfaces.
And so that was a customer-driven adoption of a particular tool.
And on Cumulus itself, we've actually done development for both Puppet and Ansible for
modules there that you can utilize.
So we try to adopt the tools that system administrators are already using as much as we can.
And when you do have to make changes to a code base or when you do have to get an update,
is that something that stays in Cumulus or is that something that gets pushed back upstream?
Yeah.
So I would say about 99% of the software that we maintain or modify or change, we push upstream.
There's a website called OSS.cumulusnetworks.com, and that lists all of our patches or all of
our diffs.
Since we're based off of Debian, all of our diffs are against a Debian-based package.
So it's kind of two levels of diffs, if you will, from the original upstream code.
There's the Debian-style package, whatever it's changed, and then our diff against that.
So anything like Quagga, LDP, libraries, the kernel, Netlink, we've pushed that all upstream.
The only component that's proprietary at this time is something called SwitchD, which is
both kind of a driver and a user-land process that replicates any of the Netlink events
in the hardware.
So again, if you were to add a route with, say, IP space route or with Quagga or your
own routing protocol, it intercepts those events and pushes it down in the hardware.
So again, you get a performance of a traditional switch.
It also does other events like, say, firewalls, for example.
So if you write rules and IP tables syntax, we will parse those, make sure they're valid,
and then push it in the hardware.
So SwitchD is something that unfortunately is not open at this time because the code
it's compiled against is not GPL.
Okay.
Well, the bottom line is, that's one package out of the entire project.
I would consider you guys to be a very, very good community member, and I think that's
really fantastic.
Like I said, one of the companies that is actually using Linux and contributing to the
community and believes that Linux can succeed in your respective space, and I think that's
really fantastic.
Now, if somebody wanted to play, maybe they're not in an enterprise, they're just a home
user, and they just, because it's such an interesting project, they wanted to play with
it.
Is there a way to obtain Humulus Linux and try it and see how it works?
Yeah.
So today, we don't currently offer a VM that's available for customers.
The main difference there is that the VM is not going to represent exactly what you'd
get on hardware.
Certainly, the performance would be night and day difference.
Other things that are different, so for example, on a VM, you may not get certain telemetry
or environmental data like, say, SM BIOS fields, like a serial number, stuff like that.
So we are working on packaging a VM for the end of the year that will be available for
folks to trial.
But today, we have something called the Humulus Workbench, which basically allows prospective
customers to register time on an actual real environment.
So we have a number of switches in the data center that have a console server, a PDU,
and a management host.
And so that allows customers to experiment with a number of different software suites.
So we have Ansible, and CF Engine, and Puppet, all available there, and you can literally
run an apt-get command and say, okay, I want to build a two-leaf spine architecture with
two leaf nodes and two spines, and they're already physically cabled up, and it will
actually blast out all the conflicts for that and walk you through all the steps.
So the Humulus Workbench is available to anyone.
You just have to schedule time.
Again, we have roughly around 40 or so switches in a data center that's made available for
that.
We feel that's more representative of kind of the real-world environment.
That's fantastic.
What's the cost involved with doing that?
The Humulus Workbench right now is free.
We don't do any charge for that.
But typically, you always have to fill out a form and talk about what your use case is
and what you're planning to do.
That's fantastic.
Now, how about, you said that the pricing structure is very open.
Can I ask what a copy of Cumulus Linux costs?
Sure.
So it depends on two factors.
Basically, what is the dominant line share of the ports?
So is it a mostly one-gig switch, meaning it's got probably 48 ports of one gig and
a couple ports of 10 gig?
Or is it a 10-gig switch, or is it a 40-gig switch?
So the physical infrastructure dictates the pricing.
Also, there is either standard business support or more rapid support in terms of like a 24-7
coverage.
Roughly, it's around $5,000 when you're looking for a 10-gig switch.
Again, it depends on the support levels and all the pricing on the website.
I think the difference with us is that you're basically getting a full operating system
with support, by the way, for the cost of traditionally a support contract.
And so that's really powerful.
And all of our support engineers today are based out of Raleigh, and so we have a good
pool of both ex-Red Hat folks, ex-Sysco folks, and other vendors.
So the amount of knowledge there is pretty high.
So it's very common for us to respond back to a customer very promptly and say, here's
a Python script, or here's a one-liner, or here's a patch to solve your problem, versus
we have to wait to get a new build out to them.
That's fantastic.
That's really great to have that one-on-one direct connect right to the people that can
actually provide you the help that you need.
How much, if you know off the top of your head, would it cost to get one of the actual
switching hardware?
Well, again, that's really dependent on how you're acquiring hardware.
So if you're going to something like a CDW, or indoor micro, versus a Dell, versus kind
of a local mom and pop bar, the pricing can be pretty dramatic there, just as it would
be with a super micro server or a Dell server.
Typically, we'll see 10 gigabit switches, meaning that there's 40 ports of 10 gig, and
usually four 40 gig ports.
Those are all SFP and QSFP based.
Typically, we see that for about five grand US quantity one, and again, that's kind of
standard MSRP pricing.
So it can be dramatically cheaper, or a little bit more depending on your acquisition method
of getting hardware.
Right, right.
Well, I really appreciate you taking the time to speak with us.
If people wanted to find more about Cumulus Networks, more about Cumulus Linux, and perhaps
get in contact with you and make a sale, where could people go to do that?
Yeah, certainly.
So cumulusnetworks.com is the website, and it has data sheets, information on how to
sign up for the customer workbench, and then a contact form.
You can also reach out to myself.
It's Matt, M-A-T-T, at cumulusnetworks.com, and I'd be happy to answer any questions.
That was a lot of info.
Noah, did you walk away?
Are you thinking about maybe deploying that for clients, or at least playing with the
tech?
Oh yeah, for sure.
So let's, if you don't mind, I'll take a minute and go through a couple things.
Sure.
So one thing he left out in the interview that I thought was so interesting, and he
just didn't mention it, so I didn't know if they wanted to go on camera with it or not,
but I heard him mention it a couple times after that at the booth, so it doesn't seem
to be private.
But the guy that started Cumulus Networks originally worked for Cisco, and then came
over to Google to help design and build a large portion of their infrastructure.
So they know networking.
It's not like they're beginners.
So walking around LinuxCon, as we saw at OSCON, was people are interested in how we can make
money off the backs of the community, not necessarily how do we improve the community,
how do we improve Linux, or how do we get Linux adoption.
And a lot of people really want to marginalize Linux.
They want to say Linux is really only good on the server as far as anything else, embedded
and server, that's good.
And it's an implementation detail.
Right.
So, and this company is doing the exact opposite.
They're saying, listen, we're doubling down.
We think that Linux is actually good enough.
Everyone wants to go towards Cisco and Juniper and HP, and really, we have all the tools
we already need, and it's already backed by the community, and we're already making
all of these developments and forward progression in the server space.
So why not take all that information, why not take all of those trained individuals,
and instead of paying a network engineer to manage the switches, and a network administrator
to manage the servers, I can pay one person to manage both, or at least have, you know,
people are cross trained.
And just being able to take my Linux system administration skills and apply them to manage
a switch, it sounds very valuable to me to repurpose that skill set.
Did you get a chance at their booth to see any of the actual hardware, like did it look
good?
Yeah.
Well, it's, so what it is, is it's generic, it's the, it's essentially the same piece
of equipment that Cisco buys when they put Cisco IOS on and then painted a different
color and stuff, right.
But so the other thing too, and I think that he didn't, as far as, you know, maybe this
is a little too technical, but when I was asking him about implementing it, essentially
what I was getting at was, I know that their router supports like OSPF, and I know they
do RIP and RIPv2, what I wanted to know is there's a lot of environments that are stuck
on Cisco devices because they're using IGRP.
And up until last year, IGRP was a proprietary protocol that only Cisco devices could use,
but now in 2013, they actually released it as an open standard.
So I was interested in seeing if, cause if that's a possibility, if that, if, if they
are planning on implementing it, or if they have already implemented it, there's a huge
market for people that want to jump off of Cisco hardware, but need to be able to adapt
to EIGRP.
And I didn't quite get that answer.
I didn't get the answer I was looking for, and that's okay.
And the other thing I was a little disappointed with is I was hoping that there would be like
some sort of a community edition or a free edition that I could download and put it on
to just a regular x86 box and just put two network cards in.
Yeah, you can't do that?
No, you can't.
Unfortunately, no.
Oh yeah.
That would be extremely useful.
So the thing is, how does, how does stuff like this get adopted?
Stuff like this gets adopted because everyone starts using it or everyone starts playing
with it.
Or you know, a lot of times you inappropriately put something into production that you probably
shouldn't and then you decide, you know what, this is worth it.
Let me go ahead and just buy the commercial version or whatever.
Exactly.
I was kind of hoping that, that he would say something like that and he didn't, but overall,
they were one of the, and I don't know if I, you know, I think it was on the other part
of the interview, but all, except for one package, every other development or every
other improvement they make, they contribute back upstream.
So the Linux community is benefiting from everyone that buys one of these routers or
switches.
That's awesome.
I mean, it's, that's, this is one of the things I love about when commercial companies get
involved with Linux and they do it the right way.
And I think that's what Cumulus is doing here.
And one of the reasons I wanted to spend some time on this, this episode is because I think
this is one of the most fascinating areas of potential growth for Linux that we could
see in the next few years.
And it's something that it's hard for us, unless you're deploying this kind of stuff
all the time to really kind of talk about.
So that was a great insight from Matt and I'd be really curious to know if you do end
up playing with it, how it goes.
Yeah.
Interesting stuff.
All right.
So we, I, we got two more interviews to play.
That was our longest one.
I I'm looking, I haven't watched this all the way through yet cause I was saving it
for the show.
So I stopped by and had a chat with Frank from own cloud.
We've talked to Frank before in the Linux action show.
This might be Frank's first appearance on Linux unplugged.
I'm really curious to see what he had to say.
So back in the media lounge yet at Linux con 2014, I ran into Frank and of course you guys
remember Frank.
He's been on both the Linux action show and I believe Linux unplugged.
How are you doing today, Frank?
Not sure.
Very good.
It's a great event here.
It is.
It's fantastic.
And it's fantastic too.
Um, as I'm walking around, I'm finding more and more people that are, that are using Linux.
Um, and of course one of the big hurdles to that is having services and products that
work on Linux.
And of course own cloud is right at the front of making that happen.
Yeah.
I mean that's, thank you.
That's our goal exactly.
I mean, our goal is not to provide like a service or software doing open source project.
There's something esoteric, but something that's really useful for people that can run
at a machine and it's really bring some value to them.
Yeah.
So you guys recently came out with the latest version of own cloud.
So I'm still on six, but I understand there's a newer version and that there's some really
compelling reasons to upgrade.
That's true.
Yeah.
Yeah.
We released own cloud seven, the community edition, like six weeks ago or something as
a huge step forward.
I mean in several areas, the user interface, the front end is really completely redesigned.
It's a, it's a lot faster.
I mean, you mentioned me before that the speed is, uh, could be better in six.
We actually did it for seven.
So seven is really significantly faster.
And then we have a lot of exciting new features with server to server sharing.
So if you have an own cloud server, I have an own cloud server, we can have a shared
folder that I put something in my folder that appears on your folder, even as different
machines.
And then we support object store back and we support lots of polishing.
And one of the, another big things I want to mention is actually the quality and the
stability of the software really significantly improved and we closed, I don't know, hundreds
of bugs.
It's really, really nicely polished and faster now.
One of the things that I have always looked for in, um, in a project and I think own cloud
is the closest I've ever seen to delivering this is, you know, when I log onto the internet,
one of the first places I head over is to my, like my social networking site and I click
on that because it's like this hub that I can get like a dashboard view of what's going
on in life.
I can get news there.
I get updates with my friends.
I have the contact info, all the stuff that I want to see pictures, all that stuff comes
into that hub.
And one thing that I think has always been missing from computing in general is a hub
for other things.
So for example, like I need a hub that tells me what tasks I'm doing today and a hub that
tells me what my calendar is and a hub that tells me where my notes are and, and messages
and people send me messages.
And I have been able to, cause the nice thing about own cloud is you can almost craft it
to do those things.
And I'm wondering, is that kind of the same vision that you guys are seeing?
Are you looking to essentially replace things like Google services?
I wouldn't say that the goal is to replace Google services because there are lots of
them, right?
And some of them are actually very good.
So it's, I would say, Hey, we want to replace everything like tomorrow.
That's a big task.
But what we want to do is everything that actually contains sensible data for you, something
that you consider private, your files, your emails, your calendar, your notes, something
like that.
So that's the mission of own cloud, that you can host it yourself, that you can protect
it.
If it moves more into like the social area where you have like a news feed of your friends
and then it's like, I mean, then it makes more sense for centralized services.
So we don't want to replace Facebook or Twitter or something, right?
Because it's actually useful to have it in a central server because it's social, right?
But the stuff that's actually very important for you, private has to be protected, encrypted
perhaps that's own cloud, yeah.
That's fantastic.
Now I know that own cloud, one of the, one of the huge advantages is that I can, if the,
if own cloud itself doesn't provide me with a functionality, I can go out, find an ad
and put it in and I've had that, that functionality and I've noticed that over the revisions,
it seems like some of those things that were previously add-ons have gotten, maybe not
exactly in their current form, but they, they get integrated into the actual own cloud.
Have we seen that from six to seven?
Yeah, partly.
I mean, there are some, let me think about examples.
I mean, the picture gallery, for example, it was relatively basic for own cloud three
and four and so on.
And there were like third party picture galleries with more nicer slideshow features and so
on.
And now the newest gallery application that's in own cloud seven actually has all the features.
So what you say is partly true.
And the reason for that is obviously because own cloud is a fully open community driven
software.
So everybody can contribute and we see a lot more contributors.
I mean, our numbers are really, really going up.
So a lot more people that put their stuff in, they have their ideas, submit patches,
pull requests.
So that's the nice thing about open source.
So lots more polishing all over the place.
Now you mentioned that as these features rise and of course your need for funding is going
to rise.
One of the ways I think that that could work is if own cloud was to succeed in a corporate
environment.
So right up until this point, we're talking about private data.
But what happens if a company wanted to essentially establish their own cloud?
I mean, I've actually seen firsthand that work at a couple of different places.
They've rolled out own cloud and it worked very, very well in a corporate infrastructure.
Is that something that you guys catered to or is that just a happenstance that happens
to work out?
Absolutely.
I mean, this is the core reason why own cloud as an open source project and own cloud as
a company work so well together because the requirements are actually very similar.
I mean, companies want to protect their data and individuals at home want to protect their
data and want to host it themselves and integrate it with other customization and extend it
and so on.
So the general idea is really similar and because of that, we are actually, we are able
to found a company around own cloud.
As you know, we have own cloud Inc startup and we sell exactly what you asked for like
an enterprise optimized version of own cloud.
We provide this for, sell this to companies.
Yeah.
Perfect.
Is there anything else you'd like to tell us about own cloud, the project, or if people
are interested in finding out more, is there a place they can go to find more information?
Well, there's owncloud.org for the community site, owncloud.com for the company site.
But it's actually good that you asked.
There's one more thing I want to talk about is if you're really interested in own cloud
and you want to contribute, want to be part of the community, then we have the very first
own cloud developer conference coming up in Berlin, actually next week in Berlin.
So you can go to owncloud.org slash conf.
And we have already way over 100 people signed up and these are not users, right?
These are the people who want to contribute, developers.
So if you want to be part of this open community, just come there.
It's absolutely free, of course.
And just work with us on building the next big thing for own cloud.
Man, I'll tell you what.
I am an own cloud believer, too, as of version 7.
Noah, have you played with it yet?
Have you done any own cloud deployments?
I know you mentioned you had a 6.
Are you just experimenting or is it something you're using all the time?
Yeah.
So I put 6 to use personally and then I actually, we had a clinic that came and what they were
asking for was it seemed like own cloud would fit and I showed them a demo.
It was actually, it was funny.
I was sitting in a meeting room and I'm like, usually I would have a demo set up.
I had no idea you guys were looking for this, so I can show you my personal one and if you
like it.
Yeah, sure.
So it was on the screen for a little bit.
After 15 minutes, the CEO of the hospital said, yeah, we're going to go to this.
Man, that makes so much sense for hospitals or companies like that.
And so I got back.
I didn't get back to Grand Forks until Friday and I had to catch up on work Saturday, Sunday
and Monday.
So I haven't really had a chance to do a whole lot, but I'm definitely going to upgrade my
instance to 7.
And of course, Frank, somebody said in the chat room, you know, Frank is a super nice
guy and a great guy to talk to and somebody who's really dedicated to his projects.
Yeah, I like both him and Joss a lot.
They're both really great guys.
You know, let me tell you how I've done my own cloud instance and this is really how
I recommend you do it too.
It's amazing.
First, go to our sponsor, digitalocean.com and keep in mind, you can use the promo code
unpluggedaugust.
Keep unplugged August in the back of your mind while I tell you a little bit about this.
Digitalocean.com is where I set up my droplet running Ubuntu 14.04.
Then I went over to the own cloud website.
I followed a extremely simple step-by-step guide.
It sets up a repo for own cloud.
So now I'm getting updates to my own cloud installation.
I've already had one update.
It went brilliantly, no problem.
And I have a VPS that's on DigitalOcean right now and all it does is own cloud.
And it's awesome.
I went out and registered a great domain that I love for it.
That's super funny.
I'm going to use it for our production staff and I switched over.
I have a test iOS 8 device and I'm going to try this on the Sailfish OS device that I
have too because I noticed it also has support for CarDAV and KelDAV.
And now all of the backend syncing infrastructure for my mobile apps is going to my own cloud
instance.
I'm not syncing off Google anymore.
I've moved off Google on my phone and it's amazing.
It really does feel incredible because I haven't lost the functionality.
I'm using my DigitalOcean droplet with own cloud 7, syncing to my phones.
It's amazing.
And you can do it too.
I have a local sync right here on my, in fact there's my own cloud sync client right there.
I just fired up.
It's connecting to my DigitalOcean droplet, keeping all of my desktops in sync.
I love that.
Who needs Dropbox?
And that just right there, just that is worth $5 and that's not all I'm using it for.
So here's a little bit about DigitalOcean.
It really is a simple cloud hosting dedicated to really the most intuitive and easy way
to spin up a cloud server.
I'm getting emails from folks that are spinning up servers in under a minute all the time.
But they say you'll probably get one going in about 55 seconds.
And here's where it's gold.
Pricing plans start at $5, $5.
And you get 512 megabytes of RAM, a 20 gigabyte SSD, one CPU and a terabyte of transfer connected
to tier one bandwidth DigitalOcean as data centers in New York, San Francisco, Singapore,
Amsterdam, and a brand new one in London.
They just turned on IPv6 in another data center.
They've got an announcement about that on their website.
Let me tell you about their interface.
It is so simple, so intuitive.
The control panel, if you're watching the video version, I'm pulling it up right here.
It's really what it looks like.
You can use it and it's not just about how fast you can spin up a server.
It's not just about how easy it is to make backups.
It's reducing the friction so that when Rekai comes down to me and says, hey, you know,
there's something I wanted to test, but I'd really like to have a fresh Linux installation
to test it on.
And I'd really like it to be publicly accessible.
It's not no matter, it's no matter like a, well, I guess I could create a VM, open up
a port on the firewall, forward that traffic in, set up DNS, install all the, no.
I went over to DigitalOcean and under a minute, I had a droplet ready to go for him to use
to deploy the software he needs.
It's so easy to scale up my infrastructure just on demand as I need it, and when we're
done with the project, we spin it back down.
You need to add capacity for your backend for a little while, baby got back over DigitalOcean.
Go over there, use our promo code, get the $10 credit.
If you just need to scale for a launch for a couple of days, go over to DigitalOcean.
They even have hourly pricing.
Just use that promo code, Unplugged August, and here's the best part.
If you forgot to use Unplugged August when you checked out earlier, they'll let you go
back and apply it again.
That's how awesome DigitalOcean is.
DigitalOcean.com and use the promo code, Unplugged August.
If nothing else, go play with some own cloud, own cloud and DigitalOcean, two great things
that go together.
You know, I was just looking at our subreddit.
We have somebody who spun up a droplet in 20 seconds.
Unbelievable.
I believe it too.
Unbelievable.
20 seconds.
Unbelievable.
Was that the London data center?
That's got to be the, right?
I don't know.
I've heard the London, I mean, they're all amazing, right?
They're all amazing, but that London data center is just such a firecracker.
It's really awesome.
And I hope he used Unplugged August so he got a $10 credit when he did it too.
All right, we got to cover the SUSE interview.
So a great group over at SUSE, and of course they had a booth at LinuxCon, and they're
part of the Linux Foundation, all of that, so they're in tight.
So Noah stopped by and had a chance to talk with George and Michael.
They talked about SUSEcon, which is coming up.
They talked about servers.
They talked about desktop, and all of it in a great chat.
We're here continuing coverage of LinuxCon 2014, and we're here with George and Michael
from the SUSE Project.
How are you both doing today?
Pretty good.
Thank you.
Doing great.
Glad to be here.
So I want to start with you, Michael.
You guys both were kind enough to sit down and speak with us, and I really appreciate
that, particularly at this conference, as I'm finding it very difficult to get people
to come on camera and talk about their project.
It's good to know that it says something about the openness of the SUSE Project that you
guys are so willing to come on camera and talk with us, so we appreciate that.
Now I understand there are some big changes, some big things happening with the SUSE Project.
Could you tell me a little bit about that?
Yeah, a couple things.
We're working hard in a couple different areas.
OpenStack, of course, we're investing quite a bit there, distributed storage.
We've got our flagship product, SUSE Linux Enterprise Server, coming out later this year.
We just released our SUSE Cloud OpenStack distribution based on IceHouse just recently.
We have a live kernel patching technology that's going to come out in conjunction with
SLEZ12, and we have a Ceph-based storage product coming out early next year.
So we're working in all kinds of different areas to bring technologies that people are
looking for primarily within an enterprise IT environment.
Now when you say enterprise IT environment, are you looking more at the desktop side or
the server side?
Primarily the server side, but we have a desktop as well, of course.
In fact, one of the other things that I wanted to talk to you about is I understand that
you have a conference that you do every year.
Yeah, we have what we call SUSECON, and that is our conference for customers and partners.
This year that'll be in Orlando, November 17th through 21.
Okay, outstanding.
Now Michael, I understand that, am I understanding correctly, that you are on the more technical
side of the SUSE?
I'm a product marketing manager for SUSE Linux Enterprise Server.
Okay, so tell me a little bit about what it is that your position offers and what it is
that you do.
Yes, I am in charge of the messaging and positioning for the new upcoming SLEZ12, and actually
we are going to release the official release of the SUSE Linux Enterprise Server 12 with
other solutions later this year.
One important area we're going to focus is downtime.
We are tackling this problem from many levels.
For example, when we talk about downtime, there are different kinds of downtime, planned
downtime and unplanned downtime.
We're tackling both, for example, from the hardware side, we are collaborating with different
hardware partners to fully exploit the RAS reliability, availability, and serviceability
features in the hardware platform.
You might take a look at the background and the chameleon sitting on top, the big IBM
System Z machine.
Actually we are the most popular Linux distribution in the IBM System Z.
We are also including the high availability in the IBM System Z.
No matter what platform like Intel, like IBM customer choose, SUSE Linux Enterprise is
their safe choice to build additional level of availability and reliability into the hardware.
Also from the service level, we are offering solutions and features like high availability
and live kernel patching like Michael just mentioned, KGraft, to build up the service
uptime to ensure your service is okay, like you can easily set up a high availability
cluster or even you can set up the geoclustering to connect your two data centers in different
locations so that in case one location goes down, the other location can back up.
Also KGraft is a big thing, a big innovation from SUSE which allows you to do the live
kernel patching.
You don't imagine a situation where you run a mission critical workload, you cannot afford
to shut it down, or you run a virtualization host with like 40 or even 50 virtual machines,
you cannot even afford the host to go down.
Live kernel patching is a technology for you to do the kernel patching without shutting
down the system, a fantastic technology to boost your service uptime.
Also we offer some other tools and services like we can allow you to do the full snapshot
and rollback for the full system, including kernel files so that when you do some kernel
patching, lots of complicated interdependence of the kernel patching, you don't have to
shut down.
You can just snapshot and rollback just in case you did anything wrong by operational
mistakes.
There are many, many other things coming into the Celestial, like we have features in cloud,
we have features in the management and interoperability and more features anticipated at the state
to do.
Outstanding.
Well we look forward to hearing more about what SUSE is doing and upcoming things that
are happening in SUSE.
If people wanted to find more information about SUSE or if there's anything else you
guys wanted to mention, where would people go to find that?
So you can of course go to SUSE.com and find all kinds of information, but I also wanted
to mention a couple other things.
I want to mention our community, OpenSUSE is our community project that we sponsor and
mentor, not mentor, but we sponsor and facilitate.
OpenSUSE is a very independent community.
OpenSUSE is a great community distribution.
In fact, I run OpenSUSE as my production OS.
So I use OpenSUSE for all the work I do at SUSE all the time and if you're looking for
a Linux community to get involved in and you're looking for a community that's really open
and welcoming and looking for contributors, whether it's coding, whether it's packaging,
whether it's documentation or anything, OpenSUSE is a great community.
So check them out, OpenSUSE.org if you're looking for a Linux community to engage with.
Outstanding and I want to thank you and give props to you for using your own dog food so
to speak.
You know, in a conference like this, it's becoming a very rare thing to see somebody
actually running Linux on their computer, which you think would be very prolific at
a Linux convention, but actually no, it turns out that's not the case.
I think that's great.
That really says something about how much you guys believe in your own project that
you guys are using essentially the same thing that you're selling.
It's a great thing about the job, right?
I love Linux.
I've loved Linux for 15 years I've been a Linux user.
Many of those years I had to be a Linux user at home and I had my secret Linux box under
the desk at the office, but now Linux is what I do and I love it.
So I run Linux at home, I run it on the office, I run it on my laptop and I get to immerse
myself in a great community and a great operating system.
Outstanding.
Well that's the project to go to then if anyone's looking for something that they can apply
both at home and at work and to be with a project where the people that work for it
really believe in the goals and the future of Linux.
Absolutely.
Thank you all so much for taking time to speak with us, we really appreciate it.
Thank you.
So no coincidence I'm guessing, Noah, that the SUSE booth was right next to the IBM booth?
No?
Sorry, I forgot to turn on my microphone.
So no, I don't know if this came out real clearly in the interview, but yeah, so essentially
SUSE is what's powering that really super cool glowing blue computer.
Hey man, it's got blue lights.
And SUSE was extremely proud of the fact that when IBM looked for an enterprise solution,
they went to SUSE.
And IBM is going to be starting doing VPS hosting and stuff like that and for that,
that's all getting again on the back end powered by SUSE Enterprise Linux.
And SUSE is, they have the right model going and it's kind of the model I hope to see that
Red Hat follow is they have SUSE for the enterprise that you can pay for and then OpenSUSE, but
everyone at SUSE is actually using OpenSUSE.
Like a little Red Hat CentOS combo there, CentOS on the desktop.
Or Fedora.
Or Fedora, I don't know, I feel like Fedora may work, Fedora workstation if that goes
well.
Yeah, exactly.
That's right, because Fedora really isn't what OpenSUSE is in the enterprise world,
but you know, a couple of things, this is at the conference in general, but it speaks
to again, SUSE's dedication to this.
So first off, a huge thank you to the Linux Foundation for having us there, for being
so accommodating.
You know, a lot of the things, a lot of the interviews and the streaming was only possible
because they had to twist some arms to make that happen.
So I really appreciate that.
But you know, you walk around, there was one of the guys at the conference that I walked
into and actually that was my favorite interview was the guy from Hastexa, Adolfo.
He was actually, he was one of my favorite guys and I can't remember if it was him or
somebody that overheard the interview and started talking to me afterwards.
But he asked me a question and I didn't have an answer for him then, but I do now.
And his question was, why is it I'm railing on everyone for purchasing MacBooks, but not
all of the people that are running, that are purchasing Windows computer, aren't they both
proprietary hardware with proprietary software coming installed?
And again, I couldn't answer that then, but as I thought about it the rest of the conference,
when HP, Lenovo, Dell, Acer and Gateway, when they're making computers, they're packaging
Windows because they believe that's what's going to help them sell the machines.
And if tomorrow users decide that they want Linux to be that operating systems, those
manufacturers should be happy to ship with it, but Apple has a vested interest in not
only selling the hardware, but getting people into their software and cloud infrastructure.
And so the, and that's why I, so like you look at OpenSUSE as a perfect example.
They bought ThinkPads, but they're not running Windows on them.
And if tomorrow it became, if tomorrow IBM, this partnership grows or whatever, and all
of a sudden they decide they're going to branch out and Lenovo is going to partner with them,
they're going to, I can see Lenovo shipping SUSE on ThinkPads.
I can't see Apple shipping any version of Linux on a MacBook.
Never, never, never.
That was my answer to that.
Good point.
Good point.
Yeah.
Well, anyway, so, so SUSE and Stexa and, and, and Cloudera were, you know, and obviously
and of course Red Hat, were the ones that really stood out at the conference because
they were shamelessly running Linux on everything I saw.
I mean, every piece of, of hardware that they had was proudly running Linux.
So would you say, was your impression of the usage of Linux similar to our takeaway from
OSCON?
It's pretty much all MacBooks?
It was, it was better actually.
So, so, so aside from, aside from our, aside from our, that one discussion that we had
during the stream, most of the presenters, most of the people that were there, I'd say
it was probably a 50-50 split between PC, well, hold on, but between PC and Mac and
then of the 50% split of PC, a certain, you know, a sliver of them were running Linux.
But there was a lot more, I didn't see, I don't think I saw a single Windows box at
OSCON.
I saw tons of Windows boxes at LinuxCon.
Maybe more of the workforce?
Yeah.
Yeah.
That's probably it.
Workforce proximity to Silicon Valley.
Well, so what you have is OSCON, you have a lot of, a lot of marketing people, like
for instance Rackspace will only let you talk to Rackspace if you talk to one of their marketing
or PR people.
And that's who was manning the booth there.
Whereas here, it's a lot of the people that are, you know, in the, you know, in the, in
the trenches.
So it's the engineers.
Is that why, is that why you were experiencing resistance about going on camera, do you think?
Oh yeah.
Huge.
Yeah.
In fact, so yeah, there were tons.
There were, so suffice to say, there are a lot of really cool and encouraging things
happening at big companies that you've heard of that are really, really, really pushing
to support Linux.
They're just not willing to go on camera and talk about it.
Because they don't want to say something wrong.
I don't know what it is.
The thing is, it's one of those things where, where there, there were, there was a specific
example where I was like, this is a huge vote for Linux.
This is a huge vote, not only for Linux, but the Linux desktop.
And the company would not go on camera and acknowledge that.
And I'm like, I don't understand how that could possibly go wrong.
That's a big name that kind of would carry a lot of weight in the community, right?
Sure.
Sure.
But the thing is that it would single-handedly persuade me to purchase their product, having
that piece of information.
If I were to walk into Best Buy and I was going to buy a computer, I would say the fact
that the company is making this decision is, it's hands down, it tells me that this hardware
is likely going to work with Linux because they care about Linux and Linux specifically
on the desktop.
So I was, I was super disappointed and I badgered them to death to get me to talk to me.
But no.
Perhaps they feel strong armed by Microsoft.
Yeah, that, that could be, yeah, that could be.
Red Hat did eventually come on camera and talk about how they're essentially going to
come out with a Linux desktop that's geared for, you know, for the enterprise desktop.
So it's not just a server that we're using on a workstation, but it's actually meant
for people to sit down and work at and get work done on.
And they're going to do that.
That's essentially how they're going to position CentOS.
That's exciting.
Yeah, it was.
When you go to these things, Noah, does it make you discouraged about desktop Linux?
Sometimes.
Yeah.
When I was working on, I was, I was extremely, in fact, the whole flight back I had, I can
honestly say I lost sleep over it.
And it's one of those things that I look at the world that's evolving and I'm like, man,
we are, the Microsoft battle was bad because they were so prolific.
But what we had going for us was at the end of the day, we had a better product.
And what scares me about Mac is I still believe we have a better product than what, than what
Apple offers.
What I don't know is if other people will ever accept that or if anyone cares about
the advantages that we offer.
That's my thing about it.
Yeah.
Is I'm not sure about that last part.
And I look at this too, as kind of like one of these things where we go into these events
and it's kind of, it's hard not to come away with a little bit of localization bias.
Like we might go to Ohio Fest and find it a completely different, a different scenario.
The Linux Fests are drastically different from the conventions and I mean drastically
different.
I think if you show, so the email and I asked Q5 to forward it to me and he never did get
to me, but there's an email that the guy sent out for self and the email said, projectors
will be provided for presentations and we'll have VGA, we'll have VGA cables.
HDMI is available, you know, if you tell, let us know ahead of time.
If you have a freedom hating laptop that requires a special adapter, you are on your own to
provide that adapter and use it and no troubleshooting will be provided to you.
And I was, so that's the mentality that you get at, at, at, at Linux Fest.
And I think that's what we're going to see in Ohio.
Yeah.
And frankly, that's where I have more fun.
Yeah.
Because that's where I fit in better.
Well, here's what you're, here's what we're kind of getting to.
This is going to be our last main topic for the day, but it's, I feel like I'm working
on a bigger soapbox that I want to get onto about this, but I'm still trying to put it
all together.
Maybe you guys can help me coagulate it like some dirty old grease.
Matt Assay, Matt Assay wrote a piece for Tech Republic saying, Hey, can you please shut
up about the Linux desktop?
Just shut up.
Stop talking about it.
All right.
Yeah, I know Linus was at Linux Con and I know Linus said he still wants the desktop,
but I don't.
The briefest glance at market share data suggests that I'm not alone either.
While hundreds of millions of people want Linux powering their smartphones and millions
of businesses are content to let Linux run their servers, virtually no one wants to run
on their laptops and desktops.
He says Apple's been successful in part because it's reduced the complexity of personal computing,
but even Apple has largely failed to overcome the PC's clunky interaction with human experiences.
Could Linux do any better?
Probably not.
Linux developed historically by and for geeks may be the least likely candidate to improve
the consumer experience.
I love how he acknowledges how it's all over smartphones and devices like that, but then
says it can't be done.
He says, so let's move on just like the rest of the Linux world or let's just, everybody
move on like the rest of the world.
No one outside geeky events like Linux Con pines for the desktop anymore.
We should be content that they're pining for something even better, the Android smartphone,
which makes Linux desktop relevant for the next 20 years, even if it wasn't relevant
for the last 20.
So the 1990s called, they want him back.
Yeah.
I mean, God, where do I begin poking holes in this?
It's like, it's just so full of misinformation.
And also like, hello, did you know there's countries outside the United States like India
and China that are seeing incredible adoption of Linux right now?
Yeah.
But that doesn't count because it's not in his living room.
That's what matters.
Yeah.
How about Nevada?
Geez.
Yeah.
I find this so, I've been finding more and more of this like, Oh, everybody just give
up already.
The Mac is one.
The windows, windows is, windows is, this is the new narrative.
Windows is fading.
The Mac is escalating.
Linux never won.
And I think it's so, when I hear people say this, it sounds so self-centered.
It's like there, it's impossible for them to consider that the year of the Linux desktop
is not like this grand year where everything, all of a sudden everything switches.
It's more like, well, this is the year it was good enough for me to switch over.
That might be 2016 for one person.
It might've been 20 or it might be 2002 for another person.
Right?
I mean, who knows, right?
Year of the Linux desktop is whatever year you switch over.
Yeah.
Yeah.
Go ahead.
Sorry.
Go ahead.
I was going to, I was going to say that one of the, you know, one of the other things
that, that one of the things that is truly encouraging, cause I've started, I used to
be, I used to be afraid of asking this because I didn't want to offend people and I didn't
want to step on toes, but I asked basically everyone I interviewed, I'm like, do you use
Linux on the desktop?
And if so, why or why not?
And one of the things that was really encouraging is you find a lot of people that are leave,
that leave Mac or Windows to come to Linux.
I haven't talked to a whole lot of people, you know, obviously this is a bad segment
to bring that up.
And after this guy wrote in at the beginning of the show, but there's not a ton of people
that are jumping off of Linux to go to Mac.
At least not that I've talked to.
Not anymore.
I mean, I think there was a big exodus originally, VR Mac, I want to give you a chance.
You think it comes down to education, right?
Not only education in the classrooms where they're taught to use windows because it's
the thing to have.
But because, you know, as we frequently bring up in this show and our other shows, we really
don't have one big company to really shout out our name.
You know, our best chances, you know, may be canonical, but they don't care about really,
really mass marketing because their big thing is, you know, phones now.
I think this is the other, I think this is the other logical fallacy that we fall into
and why we see gloom and doom.
Because essentially the line of thought that you just iterated perfectly is this kind
of, this kind of we take the current state of the world and we project it 10 years down
the road and we say, well, this is never going to work.
But if you would, if you would have gone back five years ago, you wouldn't have seen the
success of Chromebooks.
The idea sounds stupid.
The idea of a web browser powered laptop is stupid.
The price is stupid.
The hardware sucks.
And yet they're incredibly successful.
And now after years of iteration, they're going to be respectable devices with actual
use case scenarios.
And now it's a huge growth for Linux.
We never would have called that.
Like there, we have no idea what's coming.
We have no idea who's going to take Linux and package it up and make it presentable.
It doesn't have to be the current form.
I hope the current form exists for people like us forever.
I want to be able to just run my own cobbled together version of the general technology
platform.
That's what I think Linux is.
And I hope that that continues.
I think it always will.
I don't think that'll be the number one desktop.
I don't think that's likely.
I don't think that's even maybe necessary, like what we want to happen.
I think we want a product to do it.
I think we want something with support.
Well, even OS X is the number one desktop.
Oh, you're totally right.
I mean, the thing is, it's really just the desktop though.
It's the lack of advertisement, really.
I'm not saying that.
I'm not by any means trying to predict the future at all.
But you can't blame that it's by geeks for geeks.
Because the reason that it exists in the other environments is because there are people like
us who care about having a better system.
If I'm going to build a server, I know that GNU plus Linux is better.
So of course, I'm going to put maybe Red Hat or whatever on it.
But for the desktop, it's just not marketed.
Well, and it's impossible to market, really.
I mean, because it's like, OK, yeah, here's a platform that you can do whatever the hell
you want with it.
It can totally adapt to whatever your needs are, almost, except for video editing.
But you know, I mean, that's simple to come across in terms of capturing a headline or
some sort of snappy advertising copy.
But you know, the best marketing it gets is word of mouth from people like me and you.
Daredevilin proposes we don't need to market at all.
Go ahead, Daredevilin.
Yeah, the reason I say this is because Linux has been successful in so many places, and
it's just natural progression.
Yes, companies that want to take tackle, like Canonical, they should go and market their
distribution.
But the consumption of Linux on the desktop doesn't need, in my perspective, market as
it needed.
First of all, people already know how to use basic computing, which was something big in
the past and required a lot of marketing to get attention.
Just that was entry, barrier entry.
Yeah, exactly.
And the other part is, just look, if it works for your government, how hard is it for people
to tackle that it works for them?
I mean, once they start using these government tools, and the governments are switching because
of the multiple reasons we know, it's just natural progression.
And I look at it this way too, like eventually it's going to be so damn good that it would
almost be crazy for somebody not to make it into a product.
Once system D is no longer a new thing, and it's well integrated and fully functional,
and everything that it's going to gobble up is gobbled, it's been nommed, once Wayland
is ironed out and we have excellent drivers from the vendors, and we don't have these
nightmare problems anymore, and a lot of our underlying technologies that we use for the
applications like QT and GTK3 have really gotten to this excellent maturity point, which
they pretty much are now.
It would be almost financially and fiscally irresponsible for some company to not come
along and turn that into some sort of amazing product, because there's so much incredible
underlying technology there that's already made for them.
It's like having a car that's pre-built that all you have to do is slap paint on and sell
it for $10,000.
Exactly.
I'm very optimistic, because it's a good platform, and one of the reasons I played that crazy
long interview with the Cumulus Network guys is because that just is one more area where
running Linux will become the norm.
When you have more things like on mobile, and on networking, and on servers, and cloud,
and Chromebooks, and mobile devices, and all of these things, it would almost be crazy
not to do it.
Not to have it as the underlying technology for desktops, too, because it'll just be the
underlying general purpose operating system for technology.
Well, it's one of those things where you can literally mold it to be whatever you make
it.
Yep.
It's exciting.
That's the whole thing, though.
Go ahead.
Oh, well, that's what I'm saying, though, because it can become whatever it is you want
to be.
For me, the biggest thing, though, I've been using Linux since Mandrake.
I'm not kidding.
That was when I had to get my mom to write a check to have 78 CDs sent to me through
the mail.
When I came back to Linux six or seven years ago, I was like, oh, my God, it's what we
always wanted it to be.
Right, right, right.
I think it'll only get better, and better, and better, and better, and better.
That is the other thing.
When I look back at old Linux action shows, and I look at what we were talking about,
I go, oh, wow, we have really come a long ways.
For reals.
For reals.
I think you hit the nail on the head on Sunday when you said Linux has another 30 or 40 years
into it.
Mac OS doesn't have that.
Windows doesn't have that.
When you think about that, if you think of those, especially in the current iteration,
being around for that long, I don't know.
Yeah.
That was Greg Crow Hartman that said that, wasn't it?
Yeah.
He said 30 to 50 years.
Yeah.
30 to 50 years.
Yeah.
Interesting.
There you go.
For me, the breakdown comes down to this.
I think everybody loses sight of this, at least everyone I've ever talked to.
First of all, we've got a bunch of engineers trying to market stuff.
That's half our problem right there.
On top of it, it comes down to availability and support.
Google's the closest thing thus far to have really nailed that, is that they've got the
support and they've got the whole availability thing down because you can go to Amazon and
you can buy these things.
Until that happens, it's going to continue to be the AM way of operating systems.
It really will be.
That's sad, but it's true.
Well, I think it's a current stage of it.
I think it's Google demonstrating that there is a market applicability here that other
companies will eventually start to rip off.
That would be awesome.
When they do that, they're going to want to differentiate from the Chromebook and they'll
probably differentiate by adding more features and more capabilities.
Exactly.
That's the thing about freedom.
Once you get a taste, it's very difficult to go back.
All we really need is for a company like HP to take a bunch of their money and a bunch
of their time and a bunch of their resources and throw it at these $200 Windows netbooks
that aren't going to do very well, and then they'll bail on that and say, you know what?
Let's try the same approach, but let's try a more functional Linux environment.
Maybe let's work with the Mozilla Foundation and have Firefox launch full screen or something.
We'll have our own version of it, and it'll be like this full Linux operating system because
maybe they want to have a little more enterprise capability.
It sounds crazy at first, but it only takes a couple of things to fall into place and
all of a sudden HP's doing that.
To Noah's point earlier.
And imagine what happens when Red Hat comes out and says, okay, now we've perfected it.
Now we have a desktop that's more stable than Windows.
It runs a browser, which is basically more and more businesses are moving towards web-based
software every day.
And now HP comes out and says, okay, we'll ship that for $200, and now you have the makings
and a company sits down at the budget and they go, well, we could buy this computer
with Windows 7.
It'll be outdated in two years or three years or whatever.
We buy this computer from HP and essentially all it really needs to run is a web browser
and it's immune from viruses, immune from spyware and malware, and hopefully Matt doesn't
bite my head off for saying that.
I actually have a personal anecdote about something like that.
I worked for a company where I did basically all of my work, actually I worked for a couple
companies like this, all of my work inside a web browser.
I did all of my work inside a web browser and we got a virus once.
And we were using Windows 7, we got a virus, and I'm like, this whole thing could have
been prevented if we were just running Linux.
Don't even need anything else.
Exactly.
And not only that, but it would run faster, we wouldn't have to worry about our server
crashing as often, because that happened quite a bit.
It was a nightmare as far as the implementation went, but our IT costs were skyrocketed because
of not only licenses, but because the support people just were flaking off doing their
own thing sometimes.
Yeah, yeah.
And then you end up with a revolving door of IT support, which also adds to the problem.
It was awful.
We had somebody there at least once a day for two weeks.
I'm not kidding.
Alright, so that's probably where we'll wrap it up.
We'll do the retrospective in the post show, so if you're on the live stream, stick around.
We'll look back at Linux from a few years back, but we should probably run, that'll
bring us to the end of today's show, because there's a lot of show, a lot of interviews,
a lot of stuff to cover.
We've got a really special guest lined up for Sunday if all works out, and if not, I've
got a great segment planned as a backup.
So either way, we're going to have a rocking show on Sunday, Matt, alright?
So have a great rest of your week.
I'll see you on Sunday.
See you then.
Alright, and Eric, thanks for joining us in studio today, buddy.
Well, thank you.
I'm glad to be here.
It was fun, and it's good to throw things back and forth, and huge, huge, huge thank
you to Noah for all of his hard work out at LinuxCon.
I know he had to double down and hustle like a mo, and so I really appreciate him going
out there and putting everything on hold and all of that.
No, you did an awesome job.
It was great coverage.
Alright, everyone.
Amazing job.
Thank you so much for tuning this week's episode of Linux Unplugged.
If we don't see you on Tuesday, maybe we'll catch you for last on Sunday.
Goodbye, everybody.
See you on Sunday.
So like 10 years ago, before I ran Ubuntu, I used Debian on my Pentium 500 MHz Dell laptop,
and I went out to Palo Alto to do some work in an office, and I'd never worked in America
before.
I sat in a little cubicle on my own, and this guy came over, the office guy, and said, look,
before you can plug your laptop into the network, I need you to tell me what antivirus software
you use on your laptop.
Yep, I've had that, too.
And I said, well, I run Linux, and he went, oh, fine, and he could get an APS, and that
was great.
That was a great experience, but then everyone in the cubicles around me ran Windows, and
that happened to be the week.
I think it was something like Slammer or some Windows virus was doing the rounds, and everyone
around me, their PC had been completely taken out.
I was able to carry on working.
Everyone around me was wiped out.
They all went to play golf, so there are downsides to this as well.
That's true.
I had to sit there and carry on working while everyone else just pissed off and had fun.
So there was a bug in Windows 2000, before even any of the major service packs had come
out in IIS, where if you had a certain type of query to an IIS server, it would crash
the IIS process, and then it would get into this loop where it would start to restart,
eat up all the CPU, and essentially the box would stop file sharing, stop print sharing,
and all this kind of stuff.
And it took the network guy a little while, because that was his box, and I had set up
a Samba server.
And so guess what?
They decided, move everything over to the Samba server.
That's Chris's job.
So Windows box.
So then Chris had all the work to do.
I had to do a big migration overnight, because the Linux box was working, and I was like,
no, go figure.
