This is Linux Unplugged, episode 263, for August 21st, 2018.
Welcome to Linux Unplugged, your weekly Linux talk show that's pushing all of the buttons,
installing the distros, and just happy to be here to talk about free software.
My name is Chris.
My name is Wes.
Hello, Wes.
It's good to be with you, sir.
I hope you're feeling well.
Oh, yeah.
I mean...
This smoke isn't getting to you?
It's very smoky.
I do feel cold-smoked, but I'm persevering, and more tasty.
Yeah.
We have some smoke in the Washington area.
It is thick out there, but that doesn't stop the Linux content coming down the pipe to
you.
Coming up on this week's episode of the Unplugged program, Docker has found itself in a bit
of a controversy, and it's probably not the one you're thinking about.
It's one canonical found themselves in a long, long, long time ago, and it's one that sometimes
our friends over at Elementary OS get a hard time about, but somehow, when it's Docker,
it's egregious.
We'll tell you about that.
Plus, Flatpak has a big release.
They're making a big stink.
Some new features and some really exciting stuff is coming down the pipe for Flatpak.
We'll cover a couple of cool apps.
We'll get an update on some community events like Academy, AugCamp18, and one that's up
just around the corner, and then, at the end of the show, it seems there's a bit of a dispute
between Intel and Debian when it comes to distributing those firmware updates that are
fixing all of those problems, like Meltdown.
You see, in the last couple of months, there's been some changes in licensing verbiage, and
the Debian project is calling Intel out.
We'll tell you what's going on there and why Intel says, guys, guys, guys, there's nothing
to worry about.
And then, let's get your life in order.
Let's document things.
We'll give you a way to create your own man pages in seconds on your Linux box.
That's some stuff.
I'm excited.
And also, we have a full stack today.
We have a full stack.
So first of all, let's start with Brent.
Brent is here.
Hey, guys.
How's it going?
Good, good.
And the Mumble Room is here.
Hello, Virtual Lug.
Hello.
Hello.
We got a Wimpy in there.
We got Joe in there.
We got Dan and Cassidy from Elementary OS in there today, plus just some favorites in there,
like Mr. Mac is in there as always.
Thomas from KDE is joining us to talk about Academy here in a little bit.
So we just have a full room.
I can't see everybody in the room, but I can see a lot of names in there, and that's a
good list.
So let's kick things off with the news, and that is that Docker is upsetting a lot of
people.
You see, Wes, they made a little change.
They made a change on how downloads work.
If you're downloading the Mac version or the Windows version of Docker, you now must provide
your email address before you can download Docker, that you have to go through an email
address that is associated with the Docker store.
So you also would have to then, I suppose, make a Docker store account.
Oh, man.
Is this like one of those white papers that no one ever wants to download ever?
No.
It's like the Docker community edition, like the full Docker software.
The regular Docker install.
To get that free software, you now have to log in with your store account.
That's a big change, or at least it seems like it to the end user.
What's their motivation here?
Well, so when it was brought out to them, they said, okay, all right, well, we appreciate
that this is bothering you, and we understand that this can feel like a nuisance, but we've
made this change to make sure we can improve the Docker for Mac and Windows experience
for users moving forward.
So the things don't need to change, we'll just close this issue, but you can feel free
to continue to comment, you know, because they're going to improve your experience.
You know, it's funny, it's like this was an issue, but then when that line started to
help improve your experience, then it just blew up, because it turns out anybody who's
clever enough to use Docker is clever enough to read through a marketing line when they
see one.
Yeah, I think so.
And so the controversy really is around two things.
Number one, that they're using this bullshit to improve your experience line, and number
two is that it is putting essentially free software behind a Docker store account, like
a Docker hub account.
And you have to log into that hub account to download the software.
Now presumably you could still compile it for yourself.
That's just not something users on those platforms are very much accustomed to doing.
Right, and it's not like they're going to go app get it on Windows.
Do we have any sympathy, either you Chris or anyone in the Mumble Room for the desire,
you know, we've been talking about elementary efforts, we've talked about Ubuntu wanting
more information from user installs.
Is there any legitimate purpose to the side of, you know, we just want more information
and does this process actually give them that?
Yeah, like what information?
So I, you know, I joked in the intro that both canonical and elementary OS have kind
of gotten heat for something similar.
And that is, you know, a download button where there's a dollar amount that you can enter.
That got people all kinds of upset too.
Now there's you don't have to sign up, you could just hit zero and download.
So I guess let's start there.
I'm kind of curious to know what the elementary OS guys.
So Dan, what do you think about this, this move?
And do you see a big difference between putting it behind a suggested pay what you want and
putting it behind an account where you have to have like an account on their service?
I think requiring an account makes it a lot harder that I think we should encourage the
monetization of software, especially if it's things we care about because we want them
to be around.
We want them to be long lasting.
Yeah, we don't want, especially for really visible projects like Docker, you don't want
them to be controlled by special interests.
So Cassidy, I'm curious to know what you think about the messaging aspect of this.
It seems like whenever you make a move like this, you put free software behind a level
of nuisance, as they put it.
You really have to manage the messaging.
You know, you really have to be careful in how you handle that.
What are your thoughts on that?
Yeah, I think it's always really hard, especially when you're coming from a place where you're
making a change.
You know, you had this thing before and you could get it one way before and now you've
made a change and now you have to provide more information or something to get it.
That's a really tough move.
You know, when we basically rephrased our download to be paying for elementary OS, we
were really careful to always say you're paying for elementary OS.
You're not being heavily encouraged to optionally download or optionally donate or something.
We just said you're paying for it.
But you know, people didn't like that either too.
So it's always really tough.
Well, let's just keep moving right along and let's talk about Flatpak 1.0.
It's a big release from the team this week and Flatpak 1.0 comes with a collection of
new features that application developers can take advantage of.
The number one thing that will probably make a big change in your life is developers can
now mark their apps as end of life, which would indicate they're no longer supported.
There is a new mechanism for apps to restart themselves, which is useful if they have to
get access to something.
So a prompt comes up says, can I have access to this and you say yes.
And furthermore, Flatpak has seen a lot of stability improvements.
Some of the biggest changes though are the ecosystem, Flatpak hub has seen some nice
updates.
There's more and more apps on there now.
And they're pretty proud of this release.
There's several different posts about it.
And one feature that jumped out at me that I would like to poke wimpy about is this new
portal system that allows apps to create sandboxes and then restart themselves.
It allows applications to restart after they've been updated to start using a newer version
or to increase sandboxing for parts of the application.
Is this wimpy?
Is this this?
I've been hearing about this XGD portal, I think it's called, which is like a system
where applications could request access to say the camera.
And then the user at the time that goes to get a prompt at the time that tried to access
the camera and the user would accept or deny sort of like you see in your web browser.
Have you heard of this?
Yeah, yeah, I'm familiar with this.
And we did some work with upstream flat pack a few months ago.
So that portal integration exists in snaps as well.
Ah, that was my next question.
Yeah.
So we're all we're all we're all playing nicely in the same sample there.
Yeah, I like to hear that.
That's really great.
I want to know more about flat packs, peer to peer installs option.
That's not something I'm very familiar with either.
That seems like it could be interesting.
Another note here, they've gone the opposite way of Dropbox.
They no longer require a file system that has extended attributes.
Nice.
Now most of the things when we talk about flat back, they tend to be pretty technical
topic.
The flat pack team seems to really like to talk about the technical details.
I mean, and those are important to get right.
Yeah, but you're right.
That has been a lot of the messaging, maybe less so than some of their competitors.
Yeah, like when when you hear about snaps, you hear about snap packages, you hear about
new applications.
Exactly.
You don't often hear a lot about the technology.
I mean, it's there.
If you go digging for it.
It's all out there.
If you're working with a certain Mr. Martin Wimpress, then it comes out.
So I thought that was interesting, just a different kind of communication mode.
But here's a little bit of the non technical stuff wrote by Alexander Larson.
He writes, most of my blog posts are about technical details.
But the reason for the existence of flat pack is not technical.
I created flat pack because the Linux application desktop ecosystem is fundamentally broken.
As an app developer, you have no sane way to distribute the results of your work to
users.
Unless you have massive resources, the only realistic way is to wait for distributions
to pick up your app.
But we know that's riddled with issues.
There's many problems there.
Not all distros will pick up an app, first of all.
And when they do, it's often a chicken and the egg problem where there's maybe like a
web API that has to get updated, but you have to have a different version of PHP on the
back end.
And so like there's this there's like this multi tier dependency situation that can sometimes
block app updates, right?
Some applications just are not well structured in a way not in bad in general, but just in
a way that with traditional Linux applications are structured.
And you also have this this inevitable disconnect and middleman between the application developer
and end user.
So if you have a bug in Mumble, let's say, you probably should be first checking the
Ubuntu bug tracker or the Fedora bug tracker for Mumble and see what the packager has in
there and see if it's a Fedora.
And then you get a reply back saying, no, this is an upstream bug.
And then as an end user, you know, you go upstream.
And I think this is a huge reason why we have all of these freeloaders of free software,
because it's just it's tedious.
It's tedious and it's almost it's almost just too disconnected.
And so with Flatpak, the goal is for the upstream developer to have control of updates.
If the developer fixes an important bug, a new stable version is released so that users
can immediately use it.
Any bugs filed will be against the latest stable version.
So the other thing that really does mean, I guess if you break it down, is that it means
when you report bugs as a user, it's useful to you.
There's a direct connection and you get immediate feedback and you get you get an immediate
state a new state of the app.
And I think that's really a good thing for a lot of type of applications.
But we are witnessing a fundamental paradigm shift in how software is deployed on Linux.
And we've seen other fundamental paradigm shifts before and we've survived just fine.
So it's nothing to get concerned about.
But the repo model truly is a sysadmin model and Flatpaks and snaps and Docker images and
app images.
Any way that you can easily distribute software and get it going is really the developer model
to distribute software.
And in the past, the sysadmins acted as a gatekeeper.
The repo was like a like an approved application.
Now in practice, was it really that?
Probably not.
Right.
I mean, really.
Come on, let's be honest.
People are probably just rushing to get the work in there sometimes.
They're not like doing extensive tests.
That's not true for all distros, but it's probably the case for some.
But it does represent a fundamental shift here.
You know, you had to be root.
You had to have access to the package management system.
The operating system was tracking all of those packages and you were in control of when you
updated them or didn't update them.
Now, with a lot of these things, Chrome started it really early on on Windows and Mac.
But it's you've just seen it take off.
You've seen it take off.
I'm struggling to think of a couple of examples on Linux desktop that currently auto update
that aren't snaps.
I can't think of any.
It just really hasn't taken off on the Linux desktop side, auto update of applications.
Maybe some electron apps, but those are bringing some methods from their other environments.
No, no.
So on with electron, the only auto update mechanism that exists is for Windows and Mac
OS.
And unless you're publishing, you know, via one of the container formats that supports
updates.
OK, so this is a big shift.
And how do we feel about that?
I think I'm good with it, you know, because you got to keep in mind these things are containered.
They have restricted access.
They're not they're not updating all of the libraries on your system.
They're not necessarily dependent on what version of GTK or Qt you have installed.
So the all of the reasons why you needed a master orchestrator to orchestrate your packages
are beginning to get chipped away.
What the only real argument I can still have here with it and concern would be, well, you're
you're fundamentally taking away my control.
Obviously, I could disable those update features, but defaults reign supreme.
What do you think about that lack of control fundamentally think about your computer?
How would you feel if we got to a point a couple of years where the majority of your
desktop applications were just self-updating all the time?
How would you feel about that?
I mean, I think in many ways we are there just in that so much of what we use is really
just a slim front end for back end servers.
And we don't control the rollouts of those APIs or that software.
Hardly at all.
Yeah, you are right.
I think you are trading some control or at least easy understandability.
Now, most cases that you still have all of that, at least for open source things packaged
with these formats, but you're right.
It was a time with a system in where you could carefully craft, you could see all your dependencies,
you knew that, oh, yes, you've got all this dynamic linking.
And here's my one little app that I run, I trust all my system libraries that are maintained
in a sane way.
And it all kind of just fit together, at least if you had the software you needed.
The developer mindset of today are really just the the idea of I'm getting this package,
I know I'm getting it from this developer, I don't need the middleman, I just want it
to work.
So as long as you trust the upstream that you're getting those updates on, it might
be a good thing, right?
And there might be a little then more to have, you didn't have to wait as the developer for
your distribution to pick like, oh, yeah, this, we're pushing out a new release.
And this looks like a good version of this over here, we'll pull in that version, you
get to decide, hey, it's time, I feel good about this, it's stable, have at it.
I do like that.
That's why, you know, sometimes you'll have like stable versions of a snap, and you'll
have an edge version.
But Brent, I'm curious to know what you think, you know, using your computer as a professional
photo workstation, you would, I would imagine be a little alarmed if you opened up dark
table or something one day, and it was a totally different UI.
For anybody who's doing production, I think that it's critical to know that your system
isn't changing under you.
And so if you're, you know, on a deadline or something like that, then I don't know
if this auto update is exactly what you will want to have happen without some kind of schedule,
right?
And so I know one thing I hear so often on the Windows side of things is that that Windows
update just kills everybody during, you know, presentations, we've all seen it, right?
Just trying to get stuff done, and all of a sudden your computer changes under you.
I think a core part of the difference there is that it is the containerization and sandboxing,
right?
Like, Chris, you've certainly experienced, you did a bad arch update way too close to
a show, or maybe I did in reality.
And your system is not quite hosed, but unless you've done a lot of other work to do a rollback,
you just don't have that option.
And maybe you've tainted a lot of things on your system with a flat back, not so.
In the context of snaps, there's a couple of things to bear in mind there.
First of all, if an update happens beneath a running application, then that doesn't kill
or destroy the application that you're using.
The update happens in a new revision, and the next time you restart, you know, close,
rerun the application, then the update that happened in the background is applied effectively.
And also as an application publisher, you can take advantage of a facility called Trax.
So if you have, you know, major versions that introduce new and potentially breaking features,
then you can publish Trax by version or whatever, so that, you know, as a conservative user,
if you've opted into the 1.0 release, you can stay with that for as long as you want.
And then you make the decision to jump from the 1.0 release to the 2.0 release, for example.
Whereas if you want just security fixes, like everyone does, I want those automatically.
Features and, you know, improvements and maybe even bug fixes, not so sure about, but if
it's security patches, I want those while I'm not even at my computer.
Right.
And so, you know, the publisher will be producing their 1.0 dot, you know, whatever minor version,
and they would push their bug fixes and security fixes in there.
And then you can choose when you want to hop on to the, you know, the new release train
via a track.
And there are lots of publishers that are using that mechanism.
It will soon be possible with snaps to also install different versions of the same snap
in parallel side by side so you can have the old version and the future version installed
side by side.
Yeah.
All right.
So, Dan, the last word on this.
So, Dan, what are your thoughts?
Yeah.
I mean, I think something we also got to consider is that we're coming from a world where we're
used to applications only really being able to be updated every six months or every year
or whatever your distro release cycle is.
And app developers that are targeting the Linux desktop have really long release cycles.
Mainstream apps that are already used to faster release cycle models or software as a service
and things like that, they're used to doing more incremental changes.
But I think we're going to see more developers doing incremental changes.
I don't think you're going to see like big, massive reworks of entire things that break
your workflow.
It's going to be little tweaks and refinements and you won't really notice changes like really
rapidly.
That makes sense.
And it would probably be much well received by end users, you know, small incremental
changes, just steady improvements.
It's also easier to get some feedback and make quick course corrections that way as
well.
Yeah.
All right.
I know we have more to talk about.
I don't know if we have time, but I just wanted to give you a couple of pics just from Flatpak
while we're talking about Flatpak and Flatpak Hub.
And the first one is PulseFX.
PulseFX is an audio manipulation tool.
And it's really great because if you just want to pop on a compressor or do a high pass
or a low pass on some audio or I do run it through an EQ, like maybe got a podcast that's
a little hard to understand or something like that, PulseFX will do that for you.
And then on the snap side, I noticed a new snap package came out this week that looks
really neat.
I always like having like an alternative web browser.
Like I've got my main browser, which is Firefox and I've got Chrome and I even have Opera
installed and Opera would be like the one that I do like that one off log into or, you
know, you know, when it's like no minimum extension.
So it's always really fast.
You got a lot of you maybe have got a big session going.
You want just another mindset.
Yeah.
I noticed there is a tabless browser that just showed up in the Snap Store.
I'm looking for the name for right now.
I don't know if you happen to know it off the top of your head, Wimpy, by any chance.
It's Calibri.
Calibri.
Yeah.
That's what I mean when you search for Calibri.
So if you want to Google it, search for like Calibri browser or just do a snap find.
And that looked pretty neat, too.
So that that joins Opera recently is several browser options in the Snap Store.
It's pretty neat.
It makes it real easy when you want to bootstrap a new system.
That's for sure.
Yeah.
All right.
So there is some some community news.
We're going to do a tight episode today because I got to get out of here for a doctor's appointment
just in about a half hour.
So it's going to be like a tight show.
So I want to get to Academy this week because that just wrapped up.
And Thomas has joined us.
He is a board member over at KDE and he went to Academy.
And so we thought we'd use this opportunity to pick his brain about what Academy is and
what kind of happened there and why KDE has an event like this and all that stuff.
So, Thomas, welcome to Linux Unplugged.
Thank you.
Hi.
Hi.
So why don't we start with a little bit about yourself and then we'll get to Academy.
Okay.
Yeah.
So, yeah, I've been in the KDE community since about 10 years or so.
And I've actually joined in the user experience usability team since now two years.
I've been on the board of directors of KDEV, which is the official organization of KDE.
And we do things like, for example, organize the Academy, which is the yearly KDE community
and contributors conference.
Very good.
So if I recall correctly, it's a two-day event within like a couple of days or a few days
of workshops and whatnot and birds of the feather sessions and things like that.
So what's the goal of Academy?
Is this really like a time to bring people under the KDE umbrella together in one spot?
Yeah, exactly.
That's about it.
So it's, yeah, as you said, the two days of regular conference with talks where people
just update the community on what they've been up to.
It can be application developers, plasma developers, designers.
It's really just, yeah, seeing what others have been doing.
And then this is followed, as you said, by the what you call both days, which is workshops
and just communities discussing what they've what they plan for the next for the upcoming
year and or just some people gathering around a specific topic and just trying to come up
with new ideas.
Yeah, absolutely.
So give me an idea of what got done this year at Academy.
One very interesting thing this year was that we had several hardware vendors at Academy
who are going to use our technology in the near future.
So we had Pine64, who are making an ARM based cheap laptop, who are now going to use plasma
as a desktop available on there.
We had Mycroft, who, as you probably all know, making desktop AI and virtual digital assistant.
And they've become interested in us when one of us created an integration of Mycroft into
Plasma Desktop and are now looking into more tighter cooperation with us.
And yeah, we also had Slimbook, who have now been doing the second KDE focused laptop.
And we also had Purism, who will offer Plasma as one of the operating systems for the new
phone.
And yeah, having all of them at Academy was really interesting because they also talked
among each other and thought about how they could collaborate and also learned about what
kind of ways they could use our technology in their hardware.
So that is something which is fairly new for us and it's really exciting to be working
together with the industry, with hardware vendors.
No kidding.
Yeah, I bet.
That sounds like it was immensely valuable to have everybody there and have specifically
those hardware folks there.
That is really exciting to see that interest in KDE and I assume the Plasma Desktop too.
So one of the number one questions that always comes into the show whenever we mention, oh,
Academy happened, is do you release any of the talks or any of the sessions or any videos
of the event?
Yeah, we do.
So it's all on the Academy website.
If you go, I think they're not available yet, but they will be available sometime in the
coming weeks.
You just go to the academy.kde.org website, then go to the program and then you have all
the sessions and then there's the video and the slides if the presenter has uploaded them.
But definitely the video is available for all the talks.
Great.
And it moves around, right?
So I imagine it'll be somewhere different next year?
Yeah, definitely.
We haven't decided on a location yet.
So if somebody has an idea and has a team of people who would like to host an Academy,
then yeah, we're still open for suggestions.
And yeah, so far it's been always within Europe, but we are also open to any locations outside
of Europe.
So it will be interesting to see where Academy will happen next year.
All right, Canada, you heard it here first, Canada, you could totally host Academy next
year.
I'm just saying.
Brent, you could get that going, right?
We're going to work on it.
I'll see what I can do.
I'll talk to my people.
He's still getting one big room.
Chat it out.
That's fine.
I'm totally baggsy-ing this now before Popey hears about it.
Yeah, he went.
I was going to...
I'm hoping to hear his impressions on the Ubuntu podcast soon because...
You will hear all about Popey's impressions of Academy on Thursday when we release the
next episode of the Ubuntu podcast.
Well, I will, as always, be listening because I'll be curious to hear that.
Well, Thomas, thank you for coming on and telling us about it.
Is there anything else you want to relay to the audience?
I'll have academy.kde.org linked in the show notes so people can check that out and keep
an eye out for when the videos come.
Is there any other resources they should probably know about?
There's also dot.kde.org, which is our main news site and which had a summary of each
day and both the conference days and of the both days, so that can also be a quick entrance
point.
I see.
And there's some video up there, too.
Yeah.
All right.
Well, if you're a Plasma and KDE fan, something you should be checking out.
Anyways, well, Thomas, thank you very much for coming on and taking the time to tell
us about it.
Sounds like it was a great event.
I'm really happy to hear that.
Now, while we're talking about community events, I would like to pick Mr. Wimpy's brain and
perhaps Joe, if he wants to share with the class, too, about AugCamp, which is another
event that I have not been to.
AugCamp just wrapped up, AugCamp 18 on August 18th and August 19th in 2018, and it sounds
like it's a pretty fun event.
At least according to the guys' voices, which sounds like they had a little too much to
drink.
So why don't we start with Wimpy?
How was your trip to AugCamp, Wimpy?
Well, as always, brilliant fun.
So started on the Friday.
I rolled out the Ubuntu podcast Battle Bus, picked Poppy up from the local station, then
we drove to meet Mark at his house, and then all the way up to Sheffield, and then out
for the social event on the Friday evening, the first meetup at AugCamp, which took place
in a pub in the town center, and we pretty much took over the whole top floor of this
pub, which was good.
Nice to see people you don't see very often, like Joe, for example.
I only see Joe maybe two or three times a year.
So good to catch up with Joe.
Yeah.
Now, what actually happens there, though?
I mean, what you just told me was you went out and had a good time.
And that is part of what happens, right, isn't it, Joe?
That's everything that happened for me, I'm afraid.
Honesty to the last.
Yeah.
Yeah.
Why is that a bad thing, though, really?
I mean, if you go in there, you have a good time hanging out with Linux folks.
It's worth it, right?
Yeah.
I just made the mistake that I drank too much on the Friday and then ended up not actually
waking up in time to see any of the talks and then making the exact same mistake on
the Saturday.
But thankfully, Wimpy and Poppy and Co actually managed to get up, so yeah, fill me in, man.
I was there, but I didn't see any of it.
So what did I miss?
So Ogg Camp is a free culture unconference, and the organizers do arrange like a talk
every hour or so, so that there is something happening on the main stage.
So if you just turn up and everyone's feeling shy, there is something to sort of see and
learn from.
So there were three stages, the main auditorium and two smaller stages, and then there was
also a Coder Dojo, which was run by Ben Nuttall from the Raspberry Pi Foundation.
And that was basically a full weekend of teaching kids how to get started with programming and
make interesting Raspberry Pi projects.
And I spent most of Sunday morning up there and it was just chock full of games controllers
and micro bits and robot parts and projecting equipment and musical instruments and all
manner of stuff that they were furiously plugging together and hacking about with and making
projects out of it.
It was pretty fantastic to see.
I bet.
Hmm.
And then in terms of the talks, there's obviously the scheduled talks.
Some of those this year included somebody talking about, you know, configuration management
via the various tools that exist and giving people a primer on that.
And one of my favorite talks was by a guy who was running mainframe emulators on a Raspberry
Pi, which was just brilliant fun, yeah, really good fun.
So if you think that, you know, it's sort of those are the two extremes of, you know,
what you can expect to find, you know, and everything in between, you know, a little
bit about, you know, cooperative organizations and the, you know, the free culture and open
source communities.
And one, I think one or two live podcasts this year.
So we did a big mashup with Joe.
So that will be coming out on Joe's channel, he'll have details about that.
And a couple of, most of the podcasts in the UK sort of meet there and some of them do
their live shows from our camp as well.
I'm only just a little bit jealous, Chris.
I know.
I know.
Me too.
I was like, ah, ah, I want to go one of these days.
One of these days.
I'll just come hang out.
One of these years anyway.
Yeah.
I want to ride in the battle bus.
Me too.
That sounds like a good time.
The battle bus is fully Wi-Fi operational with power sockets for all popular makes and
models of laptops.
Very nice.
That is a battle bus.
That is a bus that's designed for an event.
It probably is.
Now I guess I should also give a mention to Foscon.
I won't be there, but I thought I'd mention it.
It's going to be in Philadelphia and it's coming up very soon.
So go check this out, foscon.us if you want to go.
And they are doing it, I think, August 25th, yep, August 25th.
So if you are in the Philadelphia area and would like to go to a free open source software
focused event, Foscon 2018 in the International House of Philadelphia.
Huh.
How about that, Wes?
Looks like it should be a good time.
I don't suppose you're just going to randomly be in Philadelphia in a couple days.
Alas, no.
No.
No.
No, probably not.
No, no.
No, neither will I.
But it does look like a good time.
For everyone who's lucky enough to be around that area.
So what's the verdict?
Is there going to be an odd camp?
Is this an odd camp?
Is it going strong?
Is there an odd camp next year?
Is that being discussed yet?
Does anybody know?
There are already discussions about how to put on an odd camp again next year.
And the wonderful John Spriggs, also known as John the Nice Guy Spriggs, is starting
to bootstrap things.
Oh.
There is already a Trello board, and there has been some activity this morning.
Very good.
So let's take a moment and thank the sponsors of this year's show.
And like I said, we're doing a tight one this week.
And I want to get to this Intel stuff, and I want to get to making your own man pages
with this cool command, because it's just the best.
So let's start by thanking Ting.
Go to linux.ting.com to get $25 off a device.
Or if you bring your own device, you get $25 in service credit.
The average Ting bill is just $23 per phone per month, because it's smarter than unlimited.
If you use less, you pay less.
You pay for what you use wireless.
Nationwide coverage with no contracts.
However much you talk, text, or data you use, that's what you pay.
That's why I've been a Ting customer for over four years, and they've got a great control
panel.
Radically good customer.
Different than everybody.
Just better than everybody.
Customer service.
I mean, it's seriously better than everybody.
They have a bunch of really great devices, and Ting does a really good job of sorting
through devices that should get a lot more attention, but they just, from the general
tech press, from your Verge outlets, they just don't get that attention.
And there's so many good phones out there.
You don't have to spend $1,000 on a smartphone.
And whatever you are comfortable spending, you go to Ting's site, and you own that phone
outright.
It's yours.
There's no contract.
There's no other termination fee.
It's yours.
Look at that.
They have a 10-inch tab on here.
Oh, I haven't seen them sell on a tablet for a long time.
No.
$170 when you go to linux.ting.com.
That is not bad.
Yeah, with a 10-inch display?
Yeah.
That isn't bad.
Hmm.
Anyways, it's a great service.
I've been a customer for a long time.
I think you'll love it.
So go to linux.ting.com.
Something else I've been a customer for forever.
DigitalOsh.
DigitalOcean.
D-O dot C-O slash unplugged.
Give you a $100 credit when you sign up with a new account for 60 days, and you can try
out their infrastructure for 60 days.
With that $100 credit, you can do just about anything.
Wait, are you sure that's right?
$100 credit?
I know.
I'm waiting for them to figure out that they accidentally are still giving us that promo.
So hurry.
I'm like, guys, go out there and use this, because they can't keep doing that, can they?
I mean, I don't know, man.
It's a great deal, though, because you can do so much stuff.
And every system has SSDs, and they've got 40-gigabit connections coming into the hypervisors,
a great dashboard.
It's only getting better.
There are a bunch of new dashboard changes that are just blowing my mind.
Yeah, really good.
Like, how often does that happen, where they do like a big shift like that, and it's not
a total controversy?
I logged in.
They had made some changes, and it didn't stop me at all.
In fact, if anything, it was more intuitive.
Yeah, they really do get the design of that kind of stuff.
It's a great platform to get you up and going with Linux box in seconds, really.
Probably less than 55 seconds.
And you can play with something you've been wanting to try for a long time up on their
crazy fast infrastructure, and then pop it into production.
So go to do.co slash unplugged, and thank you to Linux Academy, linuxacademy.com slash
unplugged.
It's a platform to learn everything about Linux, the stuff that's going to look good
on your resume, the stuff that's going to give you critical thinking skills, and the
stuff you should just know, linuxacademy.com slash unplugged.
Every member has access to so much content, and they're always adding new content.
They've been expanding out their Google Cloud Platform, Azure, security, and of course,
the essentials of Linux itself.
It's interesting to really see how the market is growing so, so fast, and how Linux Academy
is impressively managing to keep up, despite the fact that their content is so rich and
deep that it can take, I don't know if they've ever released the number publicly, but making
content is always much harder than you think, and they can spend more than several months
working on one set of courseware.
Yeah, something that takes you just a few minutes to click through, or an hour or two
to finish.
And they will spend, because it's like developing a full product, with labs, and interactive
diagrams, and videos, and voiceovers, and text guides, and study cards, and downloadable
stuff that you can listen to, like audio, or personal study books, like if it's really
comprehensive.
And then if you ever get stuck, they've got a real human being that can help you, that
are topic experts, that are folks from the industry that Linux Academy has hired to not
only create the courseware, but to answer your questions with it too.
So a lot of times, when you get stuck, you are asking the person that created that courseware,
so not only are they a topic expert on that subject, but they're the ones that created
that course.
So it's really helpful.
It's so, so valuable, and that's just part of why Linux Academy is such a great value,
and you can try it seven days for free, when you go to linuxacademy.com, slash, unplugged.
That's linuxacademy.com, slash, unplugged.
You like my mic grab there?
Oh man, that was just, you're a professional broadcaster.
I appreciate a good mic grab, I bet.
Grab me by the mic, I always say.
Wes, I've always said that, haven't I?
I've always said that.
Let's talk about this Intel firmware thing.
So Debian has labeled Intel firmware as now unredistributable by all OS vendors.
They're speaking for everyone there.
And this is something that catches my attention, because Debian is very careful about licensing,
and they really go through this kind of stuff.
And so here's essentially a breakdown of what happened.
Intel pushed out a new firmware update recently, and they reached out to some of the projects,
like Debian, and said, hey, new firmware needs to go out.
Can you package this up and send it?
To which Debian promptly responded, no, we can't, because you changed your license in
an incompatible way a month ago, and now we can no longer redistribute firmware updates.
And they link them to the text file that says, sorry, we can't do that.
And some folks have tweeted rather strong feelings about the situation that Intel is
putting users in.
Here's one.
Intel really effed up on the foreshadow and SSBD microcode updates.
Beyond any of my wildest thoughts, they added a long license to the microcode that doesn't
allow redistribution, which is why Linux distributions won't be getting patched.
Well, we know that's not true.
They are already getting patched.
Right, and there are other distributions that are distributing these already.
So yeah, not universal.
So it was like, we tried to figure out what's going on here, and I dug around, and I found
a tweet by the corporate vice president and GM of Intel's Open Source Technology Center.
That seems like a good source to go to, right?
So dug in there, and here's his reply.
He says, this is just simply not true.
You see, this is now legalese.
The license section two, subsection three, grants rights needed for redistribution, specifically,
and he's quoting, distribute an object code representation of the software provided by
Intel through multiple levers of distribution.
We're happy to work with them if there's still concerns.
So now we have a Debian says and Intel says situation, and it sort of created this impasse.
And it's so funny how we get hung up on this kind of stuff.
And I'm sure eventually get resolved, and it'll probably be resolved in a way that's
beneficial for end users.
But it has caused quite the upset on this particular thing.
Lots of finger pointing at Intel for screwing this whole thing up.
And so the response has been, well, so now what?
So now what do we do?
So Debian looks at it a little further, and they say, well, here's the problem.
Above where you just told us to look, it says that, but before that, that we can't redistribute
it.
So we have ourselves a conflict within your license.
Your license says you cannot distribute, and then further down says you can distribute.
We don't know what to do here.
And as far as I know, the last time I looked into this issue, that's where it has landed.
It's landed on, eh, Debian's not really sure what to do.
And I mean, it does seem like they are working with Intel, and I've seen some other, you
know, asking people to don't just go harassing Intel.
They have their own channels, and things are being worked on.
Yeah, they are.
Yes.
It is kind of confusing, too, because like if you go download some of the tarballs here,
the previous microcode release doesn't have the license file in there.
But when prompted on the website, it pops up a thing that you do have to agree to the
license to get the link.
Now once you have the link, you can just download it.
On the latest one, no such pop up, but a license in the tarball.
So clearly there are some changes, and I can see why, you know, Debian does have a long
history of caring a lot about open source licensing.
And while often as end users we might feel it can be pedantic at times, it is actually
pretty important.
So I can understand why they would want to take the cautious side.
Yeah.
Yeah.
And I should also add that for a lot of these things, you know, you can rebuild the package
yourself pretty easily.
You can install the microcode manually.
If you are a, you know, a big cloud provider, this is not the problem that you're having.
It's more of a problem just for people like you and I.
Fair point.
Yeah.
Yeah.
Yeah.
Just us end users getting screwed.
Yeah.
All right.
Well, I have a sense this is going to get worked out.
I really do.
And if anybody knows anything different, send me a tweet.
Let me know where this is going.
But I have a sense it's going to get worked out.
All right.
Well, then let's, let's, let's end on a way for people to create their own man pages.
Man pages are one of the greatest things that I didn't know about when I switched to Linux
initially until like six, seven months in because I was, I was very fortunate that I
started playing with Linux in high school.
And so that meant there was other high school kids that I could mess around with and we
all just bounced off each other, you know, look what you can do here.
Try this out.
Oh, this is red hat.
This is this, you know, this is Debbie and this is, you know, we just, that was our mode.
We didn't, and there was no Google cause I'm so old.
There was no like web search to go like look up commands.
So like not knowing that man existed was a huge oversight.
It's a way it's you, you could get away with never using man today and just searching everything
you need on Google.
Now, I don't recommend that you do that, but you're totally right.
You absolutely can.
And you probably just find some online man pages.
Yeah.
So this is why this was egregious because there was a early on and some of you might
remember this, there was the Linux documentation project.
I don't know if that rings a bell for some of you out there.
And it was a valiant effort by a community on the internet to create a central repository
of documentation on how to do things, which was outdated immediately.
And obviously it was only applicable to certain distros, et cetera.
So it never really was that great of a resource.
And it couldn't compare to all of the other communities that are writing specifically
about their distros that Google now helps you surface.
So it took me a little while to find man, but once I found the man page system, I was
so impressed, like, wow, they just have this built in right here at the command line.
Like I can see example commands here.
And that's when I really went, you know, when I realized you could bring up a man page and
generally if you went all the way down to the bottom, there's a few example commands.
Offline just all of this knowledge right at your fingertips.
I feel like it's a bigger deal than we are capable of appreciating right now.
And I don't know if that sounds silly, but I feel like today it's like, oh yeah, no big
deal.
But if you think about what life was like when you couldn't just easily search for stuff,
that really, really helped.
And that's how life is today for things that are sort of unique to your own setup or your
own world.
And wouldn't it be nice if you could have your own man pages so you can remember how
to do stuff?
Well, that's where this handy command that I love the name of comes in.
It's called um, um, um, how do I?
And um is a command line utility for creating and maintaining your own set of man like help
pages.
Man being short for manual if you didn't know.
And I love this.
These man pages are written to be comprehensive, but what humans really need are just bullet
points.
So you could use um to just write your own bullet points and they would come out on the
command line and they include a couple of basic syntax formatting tips and a couple
of basic commands you can run and it's so neat.
It's a only available for Mac OS right now, but I just sent off a letter to the developer
today saying, Hey, and you know, I think that is also just because they've only packaged
it in homebrew cause I've got it running right here.
Well, that's awesome.
I was going to say, yeah, Hey, there is some ways to get this installed on Linux that don't
use brew.
I saw, I sent off a note to him today, so maybe we'll see something there, but yeah,
you can build it yourself.
And what do you think?
Well, okay.
So there are already ways to make man pages extensible and there's a lot of design in
man page systems that, you know, just to facilitate that a bit.
That said, I think there is something of a disconnect between people that are experts
and how to do that.
And then especially know, you know, how to typeset and create man pages in the proper
or at least historically correct ways.
I think again, where this tool maybe shines and we'll see how popular it becomes is that
that casual developer, you use man pages somehow, you don't really understand how it all works,
but if you can just type a command and you know, you just have to edit a markdown file.
It uses Pandoc and other stuff behind the scenes to convert that, display it with man
like utilities.
It does look nice.
And I just added a couple and it was really easy.
So I think that's the, that's the kicker right there.
Cool.
Now Brent, you've got a whole solution for your own man management right now.
Well, I would say it's my attempt at cobbling something like this together in the last several
years.
Um, I, and I'm sure I'm not the only one doing this, but, uh, I've just kind of started to
half hazardly keeping text files of notes of solutions and tricks and little shortcuts
of various commands and, uh, in basically just text files in a folder that gets synced
to all my machines.
And, uh, so it would be interesting to see it in a little bit of a slight ever so slightly
easier to access, um, solution like this.
I kind of like this idea.
Yeah.
Getting to sync would be like the next thing, right?
Sinking it across like maybe even like it wouldn't have to sync continuously just when
you update.
And there are, there are already some efforts for collaborative sorts of documentation.
It would be interesting to see some of those prepackaged and sets you could maybe go grab,
you know, Oh, I'm a, I'm a Ruby developer.
Give me a set that has a bunch of common Ruby tools and away I go.
Oh, I like that.
Hmm.
Hmm.
All right guys.
Well, like I said, it is a tight one today cause I have an, I have an appointment that
I cannot miss.
And so we're going to get out of here a little early today, but, uh, the, uh, unplugged show
is live on Tuesdays.
If you'd like to make it out next week, go to jblive.tv and it's, uh, also available
in your local time at Jupiter broadcasting.com slash calendar.
Go get more West Payne.
He's on the TechSnap program, TechSnap.systems.
Go get more Wimpy.
He's on a Ubuntu podcast.
Go get that.
This Thursday sounds like it's going to be a great one.
You can find Dan and Cassidy over at Elementary OS.
We'll have their respective Twitter handles linked in our show notes and a big thank you
to Thomas for coming on the show today and chatting with us about Academy.
Much appreciated, Thomas, for that.
So even though it's a little short today, we're going to wrap it up there.
I'll leave you with just a couple of bits of wisdom.
We would love to have you subscribe to the RSS feed if you're not already.
You can go to linuxunplug.com to get links to all the stuff we talked about, specifically
Linux Unplugged slash 263 for links that are specific to this episode.
But while you're over there, you can go to the subscribe page and you can get all the
different ways to get this here episode every week.
And there's a lot of them.
There are.
There's different podcast directories and whatnot.
We try to make it wherever you want to be so you can find all of those resources at
linuxunplugged.com.
In the meantime, we're out of here.
I'm going to go get checked up.
Wes is going to go surf the smog.
And then that gives everyone plenty of time to prepare their questions for Ask Noah.
That's right.
Be safe out there.
Oh, it's the Unplugged Show.
The Unplugged Show.
Well it was the Unplugged Show.
Yo.
Yeah it's all done now isn't it?
I gotta, I gotta, I never sing on mic.
I don't know it's like it's instinctual because I'm like sitting here fiddling with buttons
and stuff and I'm, I can't help it.
Next episode I'll just bring a little ukulele, you can back you up.
We'll just embrace it.
Get the unplugged band going.
I like that idea.
I like that.
Well guys thank you for making it and it was really good to hear from all of you.
Appreciate it very much.
Sorry I had to cut it short this week but it's so hot in here it's actually not that
bad.
It's, if we're gonna cut it short this would be the week to do it I guess.
Perfect.
We'll see you next week.
