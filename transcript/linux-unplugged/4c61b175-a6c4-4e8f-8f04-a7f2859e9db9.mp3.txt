It sounded like you inherited this fancy shaving kit from family.
I got the handle.
It was my grandmother's dad's.
She was going to toss it out.
She was going to goodwill it.
And I was like, I'll take that.
And then I bought the, there was a little brush and cup set at Target for like 20 bucks
or something like that.
It was like super cheap.
Awesome.
Yeah.
And then the stand I did get on Amazon.
So it all started with the handle.
That does look like a nice weighty handle.
Like it's got a good feel to it, a good heft.
And it's long too.
Like a lot of the ones that I've seen online, I've looked at different ones, they're really
short and I like the longer handle.
It feels better in my hand.
There you go.
Go get yourself a good wet shave before the show starts.
That's making me want a nice stand like that.
That's the piece I'm missing right now.
You need the mug too.
And then of course, is that, what animal hair is that?
Cause you got to get, what is it?
Oh, it's probably plastic.
Oh, it's not badger hair or something.
I thought like, I thought you had to have like badger hair or something to help.
There's a bunch of different ones.
I didn't buy a good one.
What is it?
It's not badger hair.
Badger the hair of my enemies.
Yeah, they say badger.
Is it?
Oh, okay.
Badger, horse.
There's like badger.
There's horse.
There's like four different kinds.
And then depending on whether you're using a soap or a cream, depends which one you're
supposed to use.
Right.
There's this whole crazy methodology behind it.
Hmm.
Well, maybe I should get in the badger industry.
This is Linux Unplugged, episode 235 for February 6th, 2018.
Welcome to Linux Unplugged, your weekly Linux talk show that is prepared for the atomic
revolution.
My name is Chris.
My name is Wes.
Hello, Wes.
Hello.
We have quite the show coming up this week.
So we're going to get into a couple of follow-up items from last week right off the top, but
then we'll get into some community news, and then not one, but two different individuals
from Project Atomic and Fedora Atomic will be joining us to tell us what is the Atomic
project, what is Fedora's role in all of this, and can I one day run this as the ultimate
development workstation.
I really hope so, because it's pretty cool technology.
We'll talk about that, plus somehow I got a wild bug up my butt again.
Last week you heard about it here on the show, and I've, in the span of one week, reloaded
all of my systems.
It's infected everything.
We've launched a new challenge.
I've gotten Wes to reload his system, I've gotten Popey to reload his system, and a whole
crew of people are trying out KDE Neon as the new release of Plasma 5.12 releases today.
It's a new LTS of the Plasma desktop, and it's better than ever, and a huge number of
us have been trying it out, and we're kicking it off this week and inviting you to participate
with us.
We'll give you the details, give you a little status update and how it's going, and all
of that, that's coming up towards the end of the show, plus our friends over at Elementary
OS are trying something big in their app center that we've talked a lot about, and Wimpy's
here to tell us about something very exciting coming to the 1804 version of Ubuntu Mate,
which is gonna be really good stuff, and Wes, on top of all of that, we have our standard
community updates.
Holy smokes, huge show this week, so let's kick it off by bringing in the Mumble Room
time appropriate greetings, time appropriate greetings, Mumble Room, hello virtual lug,
it is good to have you guys.
There it is.
Hello.
Hey.
Oh, I love that sound.
Back in the studio again, Popey Wimpy, how are you guys doing, you all right, you over
the jet lag?
You doing okay?
Yawn.
Sounds about right.
Yeah, well, I guess sort of just to pick up really, just really quick off the top of the
show here from last week's episode, episode 234, we were live from the canonical January
Snap Sprint down at the Hilton in Seattle, and the big news kinda out of that event that
came out just recently is Skype announced shortly after our show that they are packaging
up the Skype application for Linux as a Snap, which is huge news, and that was part of the
work that was conducted there, and I think we're gonna be hearing more coming from that
whole channel too, so that's sort of big, it's good, you know, I went over and reviewed
my audio, I got a couple of secret things that I'll just release here and there, I'll
link it to the media, you know, no, I'm just kidding.
It was a good event, and man, you guys really work hard at those things.
That felt like that was a real serious work session because here's something that you
can tell when people are seriously working is when the end of the day is scheduled every
day at 6 PM and people aren't walking out of the room until 6.15, 6.20, or even later,
you guys really, I mean, down to the, down to the, every hour just working to the grindstone,
so it was interesting to see you guys in your natural habitat, it was good to see you there,
and I'm glad to hear you're making it.
So stay around.
That's a good reason for that though, Chris.
Yep.
We enjoy doing it, that's why.
Oh, Popey.
That's the best.
And you know what, I enjoy getting an opportunity to hang out with you guys, so I'm always happy.
Heck yeah.
It was great pizza, yeah.
You know what I learned?
I didn't know this, but our friends from across the pond taught me, and you were there, I
didn't know, did you know this before we had dinner with them, that they don't have the
greatest pizza over there?
I had no idea.
So we took them to America's fastest growing pizza, fast, fast, fast, mod pizza, which
apparently was the first mod pizza, and I guess they said something crazy, like they're
opening up 500 stores a month, which sounds impossible, and so we took Popey and Wimpy
over there and had pizza with them, and Popey said, this is pretty good pizza, and we all
kind of look at each other like, this is fast food pizza?
And my first thought is, oh Popey, I could show you a world of pizza, I could just swoop
you away from Seattle and show you a world of pizza.
Actually I went back in there and the girl behind the camera said, hey, are you English?
And I said, yes, I am.
And she said, did you know we've got these restaurants in the UK?
And she listed all the cities where they have them, so I'm going to make it a mission to
go and find them in the UK as well.
That's great news.
That does make sense.
I can show you the world.
Yeah, exactly.
That was a lot of fun.
And that's sometimes where the best conversations happen, really, is when you're just sitting
around talking about stuff.
I wanted to also just do a quick update on a project that I personally love to follow
because as a longtime desktop Linux user, one of the projects that makes Linux feel
like a first class citizen is the firmware update project, the LVFS project.
And when I'm on my XPS 13 and I get microcode updates and firmware updates coming through
GNOME software, I tell you what.
It feels first class.
It's beautiful.
And so we actually have some really interesting data from the Linux vendor firmware project
because they've recently been introducing telemetry, which I'll tell you more about
here in a moment.
Don't freak out.
It's not that bad.
But we now have an interesting nugget of information.
The Linux vendor firmware project has shipped nearly 1.2 million firmware updates out to
Linux users since they started the project.
1.2 million firmware updates that in the past you may have had to reboot into DOS, a free
DOS or Windows to make that happen.
Remarkable.
This is a remarkable achievement.
Just that right there deserves a moment of recognition.
I want to talk about the telemetry just so you guys are aware of what's going on.
I have more information linked in the show notes.
But here are some key points.
They're not sharing your IP address with any vendors, not even saved in their database.
They generate a machine ID.
It's a salted hash of your actual Etsy machine dash ID.
And so then they store it based on hash off of that.
LVFS doesn't store reports for firmware that it didn't sign itself.
So if you've been locally building firmwares, you're trying to hack something, you're trying
to mod something, it completely ignores that and does not ever report it up to the vendor.
You can also disable all of the telemetry reporting functionality by editing the fwupdremotes.dcomp
files.
And they've documented all of this.
It's all kind of a...
It's in the early stages, but it seems pretty sane.
It seems like a good mix of giving the vendors metrics that they need without compromising
people's identities.
And I really like the part where it ignores like local stuff that you've been building
yourself.
It seems like they put thought into that from the get-go, and that should make it a lot
more successful.
Yeah.
Yeah.
And I used this when I was in Seattle last week with my Dell XPS 15.
Oh, really?
Nice.
Yeah.
And it's a simple thing, but it's very satisfying when you just say fwmgr update, and it says,
oh, there are these six firmware updates that need to be applied to your machine.
And it says, right, queued, and the next reboot, you just watch your firmware update, and off
you go.
And this updated things in the past, I've had to install Windows and other things in
order to install these updates.
So this was just wonderful.
And you were doing that with the command line?
Yeah.
Yeah.
I think it's fwupdate manager or something, and just it did it all for me.
It was brilliant.
Nice.
That is really great.
We have the world of tomorrow.
Don't even need.
I figured I knew there must have been a way to do it outside of GNOME software, but I'd
never done it outside of GNOME software.
Because also the nice thing about GNOME software is that it exposes the fact that they're even
available.
I don't even think to check.
Right.
Unless I know about Meltdown and Spectre, then I think to check.
All right, Wes, I want to play a game with you.
Let's see if you can guess the release I'm talking about.
I'm going to give you a few hints and you try to name it.
Okay?
Okay.
All right.
So your first hint is, it's the latest update in their continuous innovation stream that
delivers many new features and enhancements to secure data.
Okay, that's hint number one.
That's pretty broad, though, so I'll give you another one.
Is it Windows Server, maybe?
Okay, here's your next hint, okay?
It's engineered for security at the entry level, allowing you to spend time innovating
while reducing risk.
I do hate risks, so I'm intrigued.
Yeah, and you do love to innovate.
Of course I do.
It has new sandboxing capabilities that allow you to control exactly what applications can
see.
It ships with the GNOME desktop as default.
The GNOME desktop, you say?
Mm-hmm.
Am I narrowing this down at all enough for you?
A little bit.
Okay, it has support for ZFS.
Not Open ZFS, but ZFS.
That's your big hint right there.
This can't be.
I thought it was dead.
No, Wes, it's true.
It's true.
Solaris lives.
Oracle Solaris 11.4 Open Beta has been released.
Celebrate, everybody!
Woo-hoo!
Yeah, that's right.
It's here.
Solaris 11.4 is here.
You can go grab it right now.
It runs on Spark architectures as well, which who doesn't want that, right?
Everybody wants that.
Yeah, check it out.
Check it out.
Dusty, you might want to check your MumbleTalk key, because it's triggering every now and
then, like when you're typing or something, heads up on that.
Oh, it looks like they got Go now.
They got Golang.
Yeah.
That's exciting news.
Anybody in the MumbleRoom have any interest in trying this out?
Nobody does, right?
Nobody does.
It's adorable that Oracle's still shipping this, though.
I really like it, and it's nice to know that some people that have had some jobs still
have some jobs.
That stuff's really nice, but to hear Oracle pitch this, it's like, I don't know, engineered
for security at every level, because nothing else is, allowing you to spend time innovating
while reducing risk.
Okay.
I'm looking forward to that.
I'll get right on top of that.
Anyways, I make fun, but it is sort of amazing to see, like Wes was saying, it's almost unbelievable
that Solaris continues to chug on.
Solaris Open Beta has been released, and you can go get an ISO of it.
When you go try to download it, the first thing, it's obviously just a cloud pitch,
right?
Streamline your journey to the cloud.
No, let's try this.
You're right.
Oh, no.
This is, okay, okay.
So the, oh, so they're also offering you to spin it up on the Oracle cloud.
Interesting.
And then you can download the USB installer, which is 1.1 gigs.
Oh, I have to first accept the license agreement for it.
Well, come on.
I mean, what website are you at here, Chris?
There you go.
Good old Oracle.
That and unbreakable Linux.
They're unstoppable these days.
They're just unstoppable.
So Red Hat actually is a bit unstoppable.
We're going to talk a lot about Red Hat today, so let's kick it off with something that's
kind of neat.
I think it was Alex that pinged me about this.
This is an initiative that Red Hat's taking to the community to help design the next Red
Hat logo.
Oh.
Yeah, they're essentially taking input from everybody, and it's funny to hear them talk
about this.
They say, we need your ideas.
The more feedback we get, the more likely we are to make the best decision.
And it's sort of, they talk about how their icon, how their logo sucks as an icon is one
of the things they really don't like about it.
Really?
It's a 17 years is a long time for a logo, and when we made this logo, we weren't really
thinking about what it was going to be used for.
We were like sort of secret agents of change, but that's kind of different now, and it does
suck as an icon.
Anyways, I think they're early in the stages, so I wanted to let you guys know about it
right now.
You know, I know we do have a few graphic artists in the audience that might actually
care about this, so you'll find a link in the show notes.
Go to Jupiterbroadcasting.com, look for Linux Unplugged 235, or just go to redhat.com and
look around on the About Red Hat section of the site.
That's where they have this going on.
Neat idea.
It is a neat idea.
And it's a change of pace from Red Hat on this kind of stuff.
I don't think I've ever seen them do something like this before.
Interesting community aspect.
We do have much to get into.
We have two gentlemen from Red Hat here today to talk to us about Project Atomic, which
we've got into a little bit on the show before, but I recently had a change of framing for
Project Atomic, and I went from thinking about it as a way to deploy Fedora on servers, and
I went to thinking, well, what about a bulletproof workstation, which is actually a bigger project
that I'm working on, and a bigger topic that we're actually going to get into today is
I'm still working towards the most reliable, bulletproof, as close to appliance, assuming
the hardware is functional.
I would like the software to be as close to reliable, immutable infrastructure, as they
say.
I want an immutable workstation, Wes.
And we'll pick Dusty and Ian's brain here in a moment and see if that's possible.
But before we go any further, let's start right now by thanking Ting for making this
here show possible.
Now years into it, I've never been a happier Ting customer.
Start by going to linux.ting.com.
Ting is mobile that makes sense.
Here's what's great about it.
You only pay for what you use.
So if you don't use the phone a lot, or you don't use a ton of data, or you don't send
text messages, you don't pay for that functionality.
I do everything either over, well, almost everything over Telegram and a couple of other
messaging services.
The only thing I use text messages for is when I log into Twitter and they two-factor
me over SMS.
So like why pay for 300 text messages when I maybe use three a month?
There's no reason.
There's just no, except that you pretty much every other carrier, you just have to.
You just have to.
Ting is different.
It's a fair price for however much you talk, text, and data you use.
With nationwide coverage, GSM and CDMA, no contracts, no quote unquote agreements, nothing
like that.
And they have a beautiful control panel to let you control all of it.
You check your usage, take complete control of your account, turn services on and off.
They have great devices you can buy directly or bring your own.
And it is Ting's birthday right now.
So what else?
They're doing a giveaway.
The first hundred Ting customers are getting a shirt just automatically, but you still
have a chance, even if you just recently become a Ting customer, or maybe you're not even
one yet, to get in and get some free Ting swag.
Start by going to linux.ting.com.
That gives you the $25 discount on service or off a device, and it lets them know you
heard about it here.
And then you can browse over the blog, check them out.
There's some really incredible devices.
They have the full range of Moto devices that are almost just vanilla Android with a couple
of improvements, and then big batteries, expandable storage, multi-network chipsets.
It's really great value for the Motorola devices.
You can buy them directly from Ting.
Buy any device from Ting or bring your own.
Just get started by going to linux.ting.com.
They have a savings calculator.
You can plug your information in there, see how much you would save, and see if it's a
great fit.
And something tells me it probably is, linux.ting.com.
Big thanks to Ting for sponsoring the show, linux.ting.com.
Well, I want to say a big welcome to Dusty and Ian from the show.
We've been planning this for a little while.
You guys are pretty busy traveling the world.
I would imagine preaching the good news about Project Atomic and whatnot.
So guys, welcome to the show.
Thanks for making it.
I really appreciate it.
Thanks for having us.
Indeed, thank you.
Now, I've roughly talked about Project Atomic on the show before, and I kind of feel like
before we get into Fedora Atomic, it would be sort of great to just sort of establish
what Project Atomic it is, what it is itself, because I think that's kind of like essential
first bits of information.
Dusty, do you want to take that to sort of the elevator pitch on Project Atomic and what
problem it solves?
Yeah, I can try to do that.
So Project Atomic is essentially, it's like an umbrella project for a lot of different
technologies related to next generation container technology.
So for example, Atomic Host, which is kind of what we're here to talk about today, was
one of the first initiatives out of that.
Some of the changes that we've made to Docker live in upstream repos under Project Atomic.
Pretty much any discussion that we have related to things that we want to do in the container
landscape go on under that umbrella upstream.
Okay.
And so the key phrase you said in there was the host aspect of Project Atomic, and that
is essentially either Fedora or CentOS or perhaps, correct me if I'm wrong, but maybe
even Red Hat Enterprise Linux itself, there are atomic versions of those different Linux
distributions?
That's correct.
Yeah, we have Fedora Atomic Host, which is something that we build continuously pretty
much but we only deliver every two weeks.
We don't believe that people want an update every night.
However, if they do want an update every night, they can access those if they want them.
We also have Red Hat Enterprise Linux Atomic Host, which is something that we build from
rel bits and deliver every six weeks.
And there's also the CentOS Atomic Host, which follows from that.
Okay.
All right.
So that's all pretty understandable.
And am I correct in my understanding that one of the core benefits of an atomic host
is that the host itself, the core OS is updated via like OS tree snapshots, which is essentially
sort of disconnected from the data and the containers that might be running on the host.
So you can you can update your host operating system via OS tree and then it just reboots
and then reconnects to the containers and the applications of the data move on like
nothing changed, correct?
That's right.
Yeah.
So for example, the user file system is read only and there are two file systems that are
read write.
One of them is the slash etc or slash etc directory.
So that's read write and it's also tracked, which means that whenever you want to go back
to the previous deployment, say you do an upgrade and you don't like it, it also means
that all of your configuration data in Etsy gets reverted back to that state from before.
So the rollbacks are a big part of this and is it all or nothing type of rollback?
So mostly at least for the data that's delivered in the OS tree that gets rolled back and then
anything in Etsy gets rolled back, but slash var that that stays the same.
Okay.
And the other thing that sort of jumps out at me about this is you guys in the slides
that you sent me, you sort of go out of your way to say this is not a disk image.
This is a tree.
What's the difference and what's the benefit between shipping your base image of your OS
as an image versus a OS tree?
So there are some trade offs, but more or less OS trees kind of like a file system layer
technology.
So it knows about all of the different files that are at a part of the tree, which also
means that it can dedupe any files that are common between say one update to the next.
And it also knows about all of the packages that are included in the tree.
So it's kind of a little bit of a higher level.
Is that using RPM to keep track of the packages?
It does.
It uses RPM to keep track of the packages.
And we kind of decided to do that more or less because it was a natural flow from what
we already do.
It complements kind of what's going on in Fedora and Red Hat Enterprise Linux.
We can just pick up what's going on there, all the hard work that's going in there and
just build it a different way.
Okay.
Fair enough.
And I would imagine in a Fedora atomic host or a CentOS atomic host, my base atomic system
is probably pretty minimal.
I'm not installing MySQL and Apache on the atomic host, I'm loading that into containers.
So it's a simpler system in a sense to update and manage, correct?
That's right.
So typically we do want people to use containers for their application software.
However, we have added some technology later from when we first came out with atomic host
to enable people to package layer things, which essentially means they can install RPMs
if they want to.
But generally what we prefer people to do is only package layer things that are hard
to containerize.
Like for example, if you want like a system daemon running on your system, like for example
Firewall D or any really low level thing that would be hard to containerize because it would
have to be like a really privileged container or access parts of the host operating system.
We prefer that you probably package layer that.
But like anything that's really easy to containerize, like an Apache daemon or a database or something
like that, we would much rather you pull that from a registry.
Awesome.
That makes it actually, that just seems like the way of the future too.
Ian, honestly, if I've glossed over anything that you think we should touch on, feel free
to jump in.
I'm kind of new to all of this, so I'm likely to miss something and you are welcome to catch
me.
But I did have a kind of a clarification question.
I'm not sure who might be the better person to ask, but just so I can conceptualize it,
as an old sysadmin, what does it look like, say I want to go from Fedora, and I'm probably
getting the vernacular wrong, but say I want to go from an atomic Fedora host 26 to 27,
what functionally do I do?
What do I have to actually functionally do to bring a Fedora atomic 26 to 27?
So I'll take that one.
Essentially what we have right now is, I don't know if I actually mentioned this before,
but I like to pitch the technology behind atomic host and atomic host itself as like
Git for your operating system.
So essentially what you have whenever you create a new OS tree commit is you feed it
a list of RPMs and maybe some scripts to run, and it basically creates a new repo for you
that's like a Git repo, but with just all the files hashed and compressed and everything.
Oh, okay, is that something that Fedora Project does for each release?
Yes, so every time we get new package updates, we essentially make a new commit in the server
repository and that can be served over just plain HTTP slash HTTPS.
But to answer your question, so right now for Fedora 26, we have one repo that's like
a Git repo, and for Fedora 27, we have a different one.
So essentially what you would do if you want to move from one to the other is you just
run a RPM OS tree rebase command that will rebase from one of the upstream repos to the
other one.
It'll pull in all the new software and you're off to the races.
Ah, the rebase command, I see.
Fascinating.
And is there any discussion right now of how frequently atomic users are expected to upgrade
to the next release?
I know 27 came out for atomic, came out like November-ish, right?
Which was after the official 27 release, the standard 27 release, is there an expectation
that users do an immediate upgrade or how does that work?
How do you decide how long something like that gets supported?
I'm sure it'll be different for each project, but in regards of Fedora, how does that work?
So in Fedora, obviously we're trying to minimize the maintenance burden there.
So since we actually do a decent amount of testing on each one of the releases that we
do, we've tried to automate that as much as possible and we're getting better about that.
But we've tried to focus on just the latest release.
So for example, because we're doing testing, we really recommend people to update as soon
as possible.
And Fedora 27 Atomic Coast did ship at the same time Fedora 27 did, which is good.
But if somebody wanted to stay on Fedora 26, we essentially have something we call life
support, which basically means all of the automated building and testing still happens.
It's just not necessarily our priority to get it fixed.
So Fedora 27 is our priority right now.
And that seems like a much more manageable position for administrators to be in when
your data is isolated off, your applications are in containers, and the updates are transactional.
So the risk of upgrading, it's a totally different set of risks than it used to be.
It's a whole new beast.
It's not the same.
It's not your dad's Fedora upgrade.
It's a whole new thing.
So what's the downside?
Because it can't all be rainbows, right?
There has to be things that are not as flexible or things that perhaps maybe might make it
not as ideal for certain types of use cases.
Right.
So there are definitely corner cases that are tricky for us right now.
We try to support pretty much being able to package layer every RPM that exists, but obviously
there are corner cases where, for example, an RPM might install something into slash
opt.
And by default, we kind of want that to be a writable file system so that people can
put software there if they want to.
So if we have a particular directory that's covered under the tree, we want to make sure
that that's read only.
So there are small issues that we're tracking down and trying to make fully compatible.
But it's one of those things that takes a little bit of getting used to, but as soon
as you are in a world where you've got most things containerized, this type of operating
system really makes sense.
And to me, the most valuable thing is the fact that you can essentially look at the
status on Atomic Host and you can see exactly what commit and corresponding version you're
booted into.
And you can go and say, hey, I'm seeing this bug.
Can you guys reproduce this?
And somebody can go deploy that exact commit and version and see if they have the same
problem.
And that also means that we essentially have a base operating system that is a base test
line for CI in the future.
Okay.
Boy, that is a great point about being able to go to that specific version.
I was messing around with it a little bit and I couldn't actually quite grok how it
would work as a workstation, but people have been suggesting this to me.
I've been getting emails into the show where people have said it's early days, but have
you considered an Atomic Fedora workstation?
Is this possible in this setup where applications are containerized and the base OS is supposed
to be minimal?
Is that even a possibility or is that somewhere where Fedora could go someday?
I've seen the Fedora, I think there's an Atomic workstation testing image, correct?
Yeah.
So it's actually, sorry, it's something that's been around for a while, but it's been something
that's kind of been a real side project for a while.
For a long time, it wasn't necessarily getting proper updates because something would break.
But now with Fedora 27, we officially came out and said, hey, we're going to ship updates
every night.
And so it's something that people can try out as a daily driver if they want to.
It's still a little rough around the edges.
For example, some of the integrations with GNOME software, for example, package layering
packages don't exist.
However, for flat packs, GNOME software does have integration for that.
So anything that you want to install as a flat pack works great on Atomic workstation.
We also just put out a blog post today.
I linked to it in the IRC channel about Atomic workstation.
And so if we want to link that to users that are listening today, they can check it out.
You might be able to give it a spin and see what you think.
So yeah, we're interested in having more people use it.
It uses the same underlying technology as Atomic host, which basically means the more
people we get hammering on it and using it, the better it'll be over time.
Are the applications containerized?
Are they part of the base OS tree?
How does it work with the workstation?
So with the workstation, it's essentially a different set of packages from Atomic host.
So it's basically like Atomic host plus plus, right?
So it's got Firefox installed as an RPM by default in the base OS tree, right?
So that's delivered with the tree.
It's got your full desktop environment that you might want.
So it's basically Atomic host, but with extra RPMs on top that somebody would want on their
laptop.
Okay.
And the intention is so far when 28 comes out to have a release of Atomic workstation
28?
That's right.
Being able to rebase just the same.
That's exciting.
Do you feel like that this maybe puts Fedora back into a different category that traditionally
CentOS and Ubuntu LTSs and distributions that had multi-year support cycles tended to hold?
Because I would tell you, when you combine what you guys are working on with Project
Atomic and cockpit and the server and cloud spins of Fedora that are super simple to spin
up on a digital ocean droplet and then you load cockpit on top of that and in minutes
you've got a graphical management system to Docker images where you're loading up Next
Cloud and BitTorrent sync like nobody's business.
I've done it.
It's amazing.
And the only thing that stops me is I know in about eight months or so I'm going to be
upgrading that sucker to the next release of Fedora and even though for the last three
or four releases it's been solid, it still gives me pause.
I just want to set it and forget it like a toaster oven.
Is that the intention with Atomic?
Yeah, I believe so.
People have always approached upgrades with pause for good reason and this transactional
based approach will obviously help us do that.
Another thing is if you're not necessarily on the workstation, if you have maybe some
servers that you don't want to keep down for very long, the way it works for the updates
are they kind of get pulled down in the background, right?
So none of the software gets updated and is in a half updated state at any point and then
on reboot you're basically into the new system.
That would maybe be the only downside really is that you have to do the reboot to switch
over.
Yep, that's true.
It's something that we've actually considered how we could possibly work around that fact.
There are parts for example now when you package layer by default you need to reboot to get
into the new tree but we have an experimental live FS feature which basically says if I've
only installed new software then there's no chance that any software that exists is in
a half-upgraded state so I'll just go ahead and apply that live to the tree, right?
That's clever.
Okay.
Kind of bridged the gap a little bit there.
It's interesting trying to do that between the, you know, it seems like a lot of that
would work super well on the server side of things where you have maybe perhaps more automation
and things and then trying to bridge that to the desktop world.
Right.
Yeah, needless to say I work with some really smart people.
I'm very lucky.
Well, I've been really kind of pondering where this is going because it seems like a really
solid solution but what's next?
What's next for Project Atomic and maybe specifically what's next for Fedora users?
So I think what's next for Project Atomic.
Obviously we have a lot of those corner cases that I mentioned before.
Live FS is still experimental.
There is actually a proposal by Colin who wrote OS tree and RPM OS tree to offer a different
method for distribution.
So for example, there are a decent number of people who mirror everything around in
their infrastructures via like using RPMs, right?
We've kind of got them in this model where all they need to do to deliver software is
deliver RPMs everywhere, mirror those around.
And then obviously now container images as well, right?
So they've got RPMs to deal with.
They've got container images to deal with.
They don't need a third artifact to move around, which is OS trees, right?
So there's a new effort by Colin to try to basically ship or transport part of this OS
tree in an RPM too as just an alternative way to get it around and mirror things like
for example, if you're in an environment that's not connected to the internet or something.
That makes sense.
I guess really, you know, I'm sure the Mumble Room may have some questions.
So Mumble Room, if anybody has anything, just ping me in Discord if you want to ask.
I guess sort of in the news, I would ask, what do you think the main contrast between
Core OS's implementation for transactional updates and Project Atomic?
As somebody who's just sort of aware that they both have a solution, can you clarify
what the differences are for me?
Yeah.
Yeah, so I think at the highest level, what Core OS uses for container Linux is the update
engine technology from Chrome OS.
Oh, okay.
That's right.
Yeah, that's right.
Yeah, that's basically like a block device level approach, whereas this is more of like
a file system level approach.
And there's benefits and negatives to each one.
That's right.
I forgot about that.
In fact, I forgot about that whole connection.
Well, guys, I know that we've been kicking this around for a while, so I really appreciate
you making the time.
People also don't know, but Dusty went above and beyond.
He joined me.
What time was it, local time, where you were at last night, Dusty, when we were chatting?
It was only 11, not too late.
Oh, yeah.
Okay, sure.
Yeah, so he joined me at 11 o'clock last night to just do audio setup and all of that kind
of stuff.
So I really appreciate it.
I may pick your guys' brains in the future, but is there any other knowledge or tidbits
you want to impart on the audience before we move on?
Yeah, so I'm going to post a link to a lab that I did for a conference last year, which
basically has fully encapsulated like a lab environment for you to run on your local laptop
or desktop or whatever that will really let you go through and learn all the features
of Atomic Host and what it's capable of.
So I'll post that in the IRC channel.
I'm not sure if you can grab that and put that in the show notes, but that would be
really good.
You bet.
I'll definitely put that in the show notes.
I'll also put in the show notes a link to devconf.us, DevConf US 2018, the first annual
free Red Hat-sponsored technology conference, and it's in Boston.
It's for projects, for project people, professional people, people that contribute to open source.
They're in the Boston University area.
It's going to be August 17th, which is a Saturday, and it'll run until the 19th.
Sounds like a good time.
Yeah.
And this is a conference that we've had DevConf, but it's always been in the Czech Republic,
close to one of our offices there.
And it's been a really big success for us.
A lot of people come from all over Europe to come and present on their open source project.
So we decided to bring it over to the US and see how it runs there.
It's not quite as big as something like FOSDEM, but it's definitely a significant conference.
That's pretty nice.
And I'd love to go to Boston.
Boy, I have all these fantasies of just traveling around the world for a year and just visiting
all these different events.
And this would be one on my list.
So it's in Boston if you're in that area, August 17th and the 19th of 2018.
Check it out, DevConf.
It's actually technically devconf.cz.us, but I assume devconf.us will take you there, I
think.
Anyways, we have a link in the show notes.
It doesn't really matter.
I think it does redirect there, yeah.
It's not just for people to attend.
There's a CFP, anybody can submit a talk to get accepted.
So submit your talks.
Very good.
Very good.
And Ian and Dusty, you guys are welcome to join us anytime you have an update on the
project or anything you want to chat about here on the show.
The Mumble Room is always open to you.
So you're welcome to come back and you're welcome to hang out just for the rest of the
show too.
We'll keep chugging along here and you're free to chime in.
Thanks, guys.
Thank you.
Ian, I'm sorry you didn't get a chance, but I'm glad you made it.
I'm sure we'll chat more.
If you stick around, I'm sure we'll get a chance.
Dusty killed it.
He did, didn't he?
He sure did.
Yeah.
You were good support, though.
I knew you were there like gnawing along like, that's right.
That's right.
That's what...
It's a team effort.
All right.
Well, speaking of a team effort, I'll tell you what they would place it as an incredible
team behind them.
And that's DigitalOcean.
Go over to digitalocean.com and use our promo code DOUNPLUGGED.
One word, you get a $10 credit.
This is really something.
This is amazing at scale right here.
You want to feel like one of the big players.
You want to feel like you've got one of the big data centers, go spin up a droplet in
less than 55 seconds.
DigitalOcean.com, use our promo code DOUNPLUGGED.
It's one word.
You get a $10 credit.
Now, my favorite system is three cents an hour, okay?
Three cents an hour.
You get a $10 credit.
So that's great.
If they got a $5 rig, and that $5 rig you can run two months for free, and they've just
recently revamped their pricing, they're even more competitive than ever.
You get...
My favorite machine, I get four gigs of RAM now.
Four gigs of RAM.
What are you doing with that?
You're just so wasteful.
I actually don't really do anything with it.
I don't even need it.
But you know, it doesn't matter because it's so darn affordable.
Right after they rolled out the upgrades, you go into your droplets, you turn them off.
You can resize the disk, and they will automatically and dynamically resize the file system too.
Or you can just say, just the memory, or you can choose.
It's so cool.
So what were we doing?
Why did I have to do that?
You know, you were doing some super-zigguratemic snap research.
That's right.
We were trying to...
Wow.
I probably should not say what we were doing now that I think about that, but it's another
great use case for DigitalOcean, and if you listen to TechSnap, you might know what I'm
talking about.
Oh yeah, that's right.
So we needed to upgrade the rig.
We did, yes, we did.
And that was great.
It just, the timing worked out perfectly.
It worked beautifully.
Yeah, they also have new flexible droplets.
So for $15, you can just mix and match the resources that are just most appropriate for
your setup.
That's nice too.
So you can just...
More memory here, less disk there, or vice versa, whatever.
And now they have CPU-optimized droplets.
Yeah, CPU-optimized droplets, which means basically you're just closer to the metal.
You're right on there.
They're great for highly active front-end servers.
If you're seeing like strong adoption for developers signing up for like an application
you're working on, you want to spin up workplace projects and you want to have a great performance,
it's perfect for that.
They also have really, really large memory systems, hundreds of gigs of RAM.
It's a great setup.
And again, just three cents an hour too, if you just want something that's pretty great.
They have a beautiful interface, tons of different distributions, including Fedora and CoreOS,
FreeBSD, Ubuntu, Debian, and more.
And we even have a pretty fancy new URL you can go to where everything's just preloaded.
You don't have to worry about promo codes or nothing.
Just go to do.co.plugged, do.co.plugged.
And a big thank you to DigitalOcean, do.co.plugged, or use our promo code, coder, or not coder,
that's not the other show, that's do.plugged.
It's pretty cool.
I got to say, those CPU-optimized systems are pretty nuts.
The thing is, the mix and match is probably the way I'll go from now on.
It just seems so handy.
Because it's slightly less than what I end up paying for the system, my most common system,
and the mix and match is perfect because I don't need a lot of local disk, but I generally
want either more RAM or more CPU.
It was more RAM that we needed during the TechSnap experiment.
Yeah, exactly.
So that's just a really, it's really nice to have that flexibility, and plus they just
lowered their pricing on stuff, and they keep adding new features, it just gets better and
better.
There's always new stuff for me to talk about with DigitalOcean.
I freaking love that.
You guys will love it too.
DigitalOcean.com, use our promo code, do.unplugged, or, I mean, go to their new fancy URL, do.co.plugged.
I mean, it's kind of fun to say.
It is fun to say.
I'm enjoying it.
The whole thing is fun.
Do.co.plugged.
They also have a really cool command line.
All right, let's talk about other cool things.
Mr. Martin Wimpress, you are really on my list of people that need a nice Christmas
gift this year.
I got to say, if 1804 turns out to be half as good, if the Ubuntu MATE 1804 release turns
out to be half as good as I think it's going to be, I'm going to need to send you a Christmas
card because this is looking fantastic now.
There will be an official post tomorrow.
This is a little bit early.
We don't have all the details yet, but rumor has it that when you decided to implement
high DPI support in Ubuntu MATE, you went all in.
That's the rumor.
The rumors are true.
I've not been doing much of the coding on this.
I did some of the groundwork and actually roped in people from the community.
This has been sort of a two-year journey.
First of all, there's the whole migration to GTK 3, and then there's the upgrading all
of the themes to support the latest versions of GTK 3, and then there's going through every
asset in all of those themes and making sure that there are scaled and non-scaled variants
of all of the assets that are used throughout those themes, which is no insignificant amount
of work.
And we had had help from...
Significant technical work, but I think also just I wanted to say significant political
work.
There is a certain amount of communication that you've had to do or other people have
had to do.
There's greasing the wheels.
There's certain amounts of funding that's had to happen here to make all of this happen.
You're rattling these off, but each one of these was a huge amount of work in of themselves.
Each of these items is a multi-month effort, and each of them has been funded through the
Ubuntu MATE crowdfunding.
And then more recently, we've got to the actual meat and potatoes of this, which is to turn
on the scaling within the MATE desktop itself.
And I've spoken about that, I think this is the third time in five weeks we've spoken
about this.
I promise this will be the last time for some time now, because I'm sure some of the listeners
are bored of hearing about it.
But the big change now is today we've landed the fixes that mean that the high DPI scaling
is completely dynamic.
In other words, to say it automatically detects it and scales itself?
Correct.
See, I think we're not going to be talking about it because we'll be playing with these
fancy new features.
That is great.
That is a big win.
So from the Greta, that auto scales and then the desktop itself now detects if it's got
a high DPI display, dynamically scales.
That's the default, will dynamically scale to fit for high DPI.
And then we've also been able to preserve, we've added, or rather Victor has added a
new prioritization system to the settings daemon so that we can push environment variables
into the session really early on.
And the environment variables that we're interested in here are the ones that provide the high
DPI hints to Qt applications.
So the MATE desktop in GTK is detecting that this is a high DPI environment.
It sets up GTK, but then it provides the hints to Qt.
And that means when you run things like VLC or Kdenlive or whatever your Qt application
is under the MATE desktop, that gets the right font and toolkit scaling hints.
Alls I can say is a round of applause to that.
So Qt applications will feel like first class citizens on the MATE desktop.
That's as best as we can.
Yeah, that's great.
And getting it at the greater level too is a very smooth experience.
That's top notch stuff there.
I mean, this is like the MATE desktop is bringing full top notch high DPI support.
This is as good as it gets on the Linux desktop.
Yeah, it's as good as we can do at this stage.
We can refine it a little bit in the future.
I mean, if you're one of these people that really values all of those millions of pixels
that you've got on your high DPI laptop, suppose you're Linus Torvalds, and you see this scaling
happen, and you don't want that, then you can toggle a setting to change it between
auto scale, a fixed one to one mapping or a fixed scale always.
And if you toggle those settings, then the whole desktop will scale dynamically.
So you don't need to log out or log in.
You can actually flip those settings around in the session and it will just respond instantly.
And this is all going upstream to MATE itself?
This is all being done in MATE desktop.
It's all an upstream project.
It's all landed today, and we've just tagged the MATE 120 release, and that'll be coming
out tomorrow.
Hot dang.
Wow.
So what about the artwork?
So once you get everything scaled up, then you also have the problem that all of your
icons and your graphics also have to be higher resolution.
Yeah, so this is what I was referring to with the work we've done on the theme assets, which
we did about a year ago, and Michael Tunnell helped with that, and Daniel Foray helped
with that.
Oh, you guys.
You guys are great.
I love it.
So the assets are already high DPI ready?
All of the assets that we need to be high DPI are high DPI.
There are a few instances in the code where we're using bitmaps rather than SVGs.
So we haven't clobbered all of those yet, but we'll get to those in due course.
But by and large, it's all done.
And we've also been able to preserve the font DPI scaling, which I've mentioned before.
And this gives us a nice halfway house.
While fractional scaling isn't a thing, being able to scale the fonts independently of the
DPI scaling of the toolkit means that if you've got, say, an XPS 13, you can turn on double
scaling but scale down the font slightly and it gives you a nice halfway house while we
wait for fractional scaling.
Thank you.
Thank you very much for that as an XPS 13 owner.
Thank you.
Wow.
And I am very excited about all of this and this should all be landing for the 18.04 release
of the Ubuntu MATE desktop?
Yeah.
So for Ubuntu MATE 18.04, all of this landed today as patch sets in our snapshot development
packages and MATE 1.20 will come out tomorrow and some point over the weekend, those packages
should hit the Ubuntu 18.04 archive, hopefully in time for Ubuntu MATE 18.04 Alpha 2, which
is next week.
Dang.
Great, great, great work by everybody.
That sounds like...
That's so great that all of this is landing for the LTS.
It's so good because that's the distro that you're going to be strapped with for the next
five years.
Exactly.
And this was something that I really, really wanted to see happen for this LTS because
as you know, they're long lived.
And I felt that if we didn't get there with high DPI, because we're playing catch up,
there's a number of the other desktops that have already got high DPI implementations.
And I felt that if we didn't get there for this release, then we run the risk of losing
users to other development environments, which in of itself is no big deal.
But when you lose users, you lose developers and that's the thing we really wanted to retain.
Good insight.
I completely agree with you.
So let's talk about retaining developers.
And speaking of Mr. Daniel Foray, Dan, you posted a update about App Center payments.
And if I understand it, the kicker here is that security updates, system updates, those
are continuing to be distributed as they always have been in elementary OS.
But now, applications that people have deferred payment on, like they bought for free, they'll
pend in the update section while users have the option to pay for it or put in zero dollars
and get the update for free.
It's a pretty big post.
In fact, you even subtitled it hashtag clickbait.
How are you doing today, Dan?
Are you doing okay?
I'm doing great, man.
I'm doing great.
Glad to hear it.
I mean, I've seen a wide range of reaction about this.
I think understandably, when people hear that you're going to withhold updates and prompt
people for payment, there is a visceral reaction that that's insane and you're money-grubbing.
What's your response to that?
Yeah.
I mean, I got to follow Wimpy here, Santa Claus, followed by the Grinch.
So, okay, so here's the problem.
Let me frame the problem to get, like, this is where we're coming from.
We set out to build out this App Center thing, right?
And one of the goals that we wanted to do when we did that was we want to give third
party developers, so developers that are not elementary, developers that are just like
regular people writing their little open source apps, we want to give them a path to be able
to make a living writing open source software.
Because right now, if you want to write open source software for a living, you got to get
lucky to be hired by like a handful of big corporations and that sucks.
So we were seeking to kind of shift the paradigm and allow anyone to make a living writing
open source software.
But we're not quite there yet.
And so we launched this store like a little over eight months ago, I think.
And where we're at right now is that we have some developers who have made a few hundred
dollars selling their apps, which is more than zero, but it's not enough for them to
live.
And looking at the data we have, it's that about 1% of people that are downloading these
apps are actually paying for them, but it's a really small amount.
And we wondered like, why is that, right?
Like why is it so small?
So we went and asked our users and they said a couple of things.
One of the things they said is that a lot of them will skip paying upfront for an app
because they've never used it or never heard of it before and they want to try it out first.
And then they said that after they've downloaded the app and tried it out, if they did want
to pay for it, now suddenly there wasn't really a way for them to go back.
There wasn't a way for them to keep track of which apps they'd pay for or not.
And there was no reminder.
So even if they, yeah, they didn't think about it or they don't know which apps they've paid
for.
It's like the system wasn't catering for that workflow at all.
So why not build in a limited five-day trial system versus withholding updates?
So we definitely wanted to stay away from things like trials or like time bombs or things
that are going to like get in your way, nag you while you're working.
Yeah.
Like that's the one thing we don't want to do is get in your way while you're trying
to work or play.
Like we don't want to be intrusive.
So we're trying to find a compromise between what's a great user experience and what's
going to help our developers make a living.
Yeah.
In fact, I think I really, really, really appreciate the respect you guys put in the
decision process of what the cost is for interrupting the user's workflow.
I know that was kind of a key thing that you guys thought about and holy crap, do I really
appreciate that.
I really, really hate it when I'm in the middle of trying to do a thought dump into a note
document and all of a sudden a pop-up comes up and interrupts what I'm doing or a new
Chrome extension gets updated and it opens up a new tab and it steals the input.
It is the worst experience.
And so I would never, ever be in a mood to want to pay money towards something when I
got nagged like that.
Like I'm just not in the buying mood.
On the update screen, that's more interesting, right?
Because I'm already going into the app center, I'm launching it and I'm clicking on the updates
tab.
I'm already kind of like dedicating myself to this task.
So how did you strike the balance here?
Like does it just default to like $10 for an app and I just click update and it charges
me?
Or is there a process like once I've decided I'm going to do updates?
Developers who publish their apps in app center get to choose how much they're suggested prices.
So for a given app, it could be $1, $3, $5, $10, it depends on what that developer sets.
And what happens is you go into your updates view and you see all your apps listed.
And if you hit the update all button, all the apps that you've paid for or any free
apps or any system updates will get installed.
But the ones that you haven't paid for will get kind of skipped by that process and they'll
hang out with the regular, the little button that you get like you get on the install page
where it shows the suggested price and then it has the dropdown where you can choose either
a different price or zero.
Right.
So to be clear, these aren't packages from the upstream repo like LibreOffice.
These are applications the developers have independently developed and published to the
app center themselves.
And then when the updates come out, those are suggesting whatever the developer says
that you pay.
But as an end user, you could blank it out and put zero in and hit the update button.
Right.
And you can put in zero indefinitely if you want.
You can go in every time and never pay for the app.
That's totally up to you.
I like the implementation.
It seems pretty clean.
It just sort of fits in.
And I'm curious on the back end, like at the code level, do you guys actually call this
thing the humble button?
Is that what you call it internally?
The humble button?
That's what the class name is.
That's a good name for it.
Because that's what it is.
It reminds me of the humble bundle.
It's sort of based around that idea.
You pay what you think it's worth.
Do you have any kind of early data on if people are actually doing this?
Or is this even shipped yet?
So this hasn't shipped yet.
We wanted to post and talk about it.
We merged the code into master.
So we're testing it.
And we wanted to kind of start the conversation and say, hey, this is what we're planning
to do in the upcoming release.
Let's hear some feedback.
Let's hear some concerns.
Let's answer some questions.
And we've got great feedback from people already that are wondering about things like security
updates.
And so we've gone back in.
And we've made sure that security updates always are included when you hit Update All.
We don't ever withhold security updates.
So that was one thing that user feedback made us go, oh, yes, this is an important case
to cover.
Well, Dan, I did see the typical responses when you do something kind of like this.
But I think the positive thing that I saw was I saw more people coming to the defense
of elementary OS than I've ever seen and more people calling out people that just go with
the standard narrative, that just go with the sort of pre-baked opinion on R Linux.
And more and more people were saying, no, that's wrong.
You need to realize what this project is doing.
There is a change in public opinion.
There's like a wave of change that I see happening for your project.
And I think the risks you're taking with the App Center have directly contributed to the
momentum there.
And I know this one's probably the riskiest change.
This is almost riskier than the App Center itself in a weird way.
But at the same time, I think it's you, the project, doing this is the very thing that's
starting to change the tide of momentum that I've seen just an incredible amount of people
saying, I really need to try that elementary OS or you don't understand what they're doing.
This is their thought process.
In the past, say like last year, say a year ago, I just basically see a bunch of assholes
tearing down the project.
Now I see a handful of assholes tearing down the project and way more people coming to
the defense of the project and way more people saying, hmm, I ought to try that.
So you guys are doing something right.
And I really like that you're kind of collecting the feedback now before this ships.
So what is the expectation here as an end user?
When do I see this land?
When do I expect my updates to start prompting me to pay?
Is it the next release?
Is it going to happen in the current version?
Like what should users expect?
At the moment, the plan is that this update doesn't happen until our next major release,
the code name Juno elementary OS release.
We are kind of toying around with the idea of some users have brought up to us, well,
if I do an upgrade or if I have multiple installs or things like that, like how is this going
to keep track of applications that I've already paid for on my current Loki release?
And so there's some things to think through there about if we need to push out a release
that includes some kind of online account or some kind of importer or exporter or some
way that we can.
There's some other concerns that our users have brought up to us.
That's a challenging problem to solve, right?
Because you don't really want to be in the business of storing user credentials, right?
So there's a lot to talk about there.
And there's some secure ways that we think that we can leverage like native features
of Stripe that we'd be able to store it encrypted on their servers.
But there's definitely a lot of discussion happening there, and like I said, that's the
reason we put this out early, so we can get the user feedback and have them go, hey, well,
what about this?
It's funny.
So Wes and I before this episode of Linux Unplugged just recorded TechSnap episode 355,
and in there we talk about things to think about when you're building a user-based system
like this where you're going to authenticate users and have user identities, sort of perfect
timing because it is a very unique challenge, and I could kind of see why users would want
that.
You know, and Dan, I'll tell you this, and I'm probably unique, so it's not worth it,
but if I knew that if I paid $30 that it would be saved forever wherever I went that I paid
that $30, I'd be more inclined, whereas if I thought I'm going to have to redo it on
every system, I'm going to pay $3 or $5.
So there's something to it.
Like if I knew it was a persistent payment that would benefit me across multiple elementary
installs, I'd be more inclined to pay more, but I might be unique in that way.
Yeah.
But that sounds interesting.
I'm really glad you guys are talking about this right now, and are you feeling like the
course is correct, you're going to continue down this path, you haven't been scared away
from it?
No, I think the feedback that we've gotten is super awesome.
You know, the people that are going to be upset, we're still upset, you know, but from
the majority of the developers and the users that are using elementary OS, the familiar
faces that we've actively engaged with, it seems like people are excited about this change
and they think that it solves the problem in a fair way, and they're willing to try
it out.
And I think that it should turn out good.
And if it turns out that we did some wrong things, we'll take more feedback and judge
us the system and roll out a new one.
Producer Michael, you have a question slash suggestion, maybe like a user preference type
setting?
Yeah, I was just curious if it was going to be possible in the future.
You said that you'd have to manually choose to do the zero dollars every single time.
And I was wondering if you have any thoughts on maybe in the future setting it so that
if you, I don't know, manually choose it for five times that it would automatically give
you an option to say, hey, would you like to set this permanent so it's, you know, continue
to update it but in the free or would it be like a manual every time?
I think at the moment we want to try the manual every time because kind of the idea of it
is that it's not as convenient.
You know, we want to go, hey, like, you're still using this, the developer is still giving
you value, like, maybe you should consider throwing a dollar at him, you know?
Yeah, that kind of makes sense to me.
And it seems sustainable.
I hope that like, you know, this being risky and getting so much attention, I'm sure you
might lose people.
But if the people who stay are down to help build this Linux paradise of, you know, a
supportable Linux ecosystem, it could be great.
There's two different audiences too.
Go ahead.
I can save my point.
I'd still consider Rotten's suggestion on the basis of if it's a charitable organization
where they're using your system because it's convenient, it does help somebody.
At that point, you know, that option is definitely something that does cost cuts on their maintenance.
Yeah, it makes that experience more smooth.
I think there are other ways to get the updates outside of the App Center too.
But I think the idea is sort of worth trying, like, hey, this is the third or fourth time
you've skipped paying for this, but you're still choosing to update it.
Maybe that means there is some value there.
I see why you want to experiment with that.
I guess moving after, well, the thing that I was going to mention before, just a second
ago, was there's two audiences here to this.
The one audience obviously is the users, but the other audience is the developers.
And you're essentially, Dan, messaging to the developers, we're really trying to work
something out for you that's going to make this profitable.
In a way, it's sort of free advertising to developers about elementary OS.
I know that's not the intention, but if I was a developer looking at monetizing my application
on the Linux desktop, I'd be watching this going, these guys get it.
These guys get that I need to actually eat food.
Yeah, we definitely want to be in the corner of our developers here and fighting for them.
And we know objectively that there are developers of popular applications on other platforms
that have said, hey, we're not going to write for Linux because we can't make a living there.
And we want to remove that reason.
We don't want anybody to be able to say that.
Yeah, I've really seen that a lot.
On the Coder Radio program, we get these emails that come in, and it's these exasperated developers
who are writing me these basically rage quits.
They're rage quitting the Linux community because they've tried to make an application
and they tried to sell it on Linux and it just blew up in their face and it was nothing
but criticism.
It really is, in a way, I can kind of understand where they went wrong and I can kind of see
it from their perspective.
But it's just not all the pieces are there yet when you compare it to other platforms.
And elementary OS is getting as close as I think anybody has to really just putting all
of the pieces in there that make it easier for developers to ship and understand there'll
be a sustainable revenue model.
A cohesive experience, a target to develop for, and a place to get revenue.
And here's what I would say to people that are like, this isn't for me.
This isn't anything I'm ever interested in.
It's good that somebody's trying it because one of the things that I really have learned
to appreciate recently about the open source world is that all of these different efforts
that are happening in the open are free R&D for all of us.
So we all get to sit back and watch elementary OS try this crazy ass experiment of trying
to monetize applications and help people monetize their programs when people are upgrading and
see how it goes.
And it doesn't cost me a thing, unless I buy an app.
It doesn't cost me anything.
And I get to watch them try this.
And so I really appreciate that you guys are doing this because somebody needs to.
And I can't think of a better project.
So good luck, Dan, and I will definitely be trying it out when Juno ships.
I'll 100% give it a go.
I think it's worth giving it a go.
And I'm happy to throw a couple of bucks to developers that are making native Linux applications
any day of the week.
You know?
And I'll pay for those upgrades because I want to see more of that.
That's why I buy every damn release of Crossover Office for like the last decade.
I don't even use the damn thing more than a couple times a year.
But I'm just so thankful that somebody's making native applications and contributing code
upstream.
Just go for it, Dan.
So good on you.
And keep us updated, won't you?
Good luck.
Thanks.
All right.
So the one thing that I've been building towards all day is this perfect workstation that I'm
trying to get to.
And I've had this massive, massive awakening.
You know, I should have listened.
People tell me to stay woke.
And they tell me to reclaim my time.
And I finally woke up.
Like Neo, I woke up from the matrix and I realized everything I knew was wrong.
You heard it a little bit last week.
Like the beginning of the awakening happened last week.
But so much more has developed in the week since last episode.
We'll get to that in just a moment.
But first, let's talk about skilling up.
Let's talk about your mind.
Let's talk about Linux Academy, a platform to learn more about Linux and everything around
it.
Linux Academy is a full featured training library with everything you need to learn
new skills and advance your career.
It's all of the stuff that's core to Linux and the things bolted on top like OpenStack
and Docker and Azure and AWS.
Everything you need to learn to get hands on experience with self-paced in-depth video
courses and every Linux cloud and DevOps topic.
It's incredible.
It's almost too much.
You're a little intimidated, but they make it so easy.
It makes it brings a tear to me.
I got to tell you, because as an old man, I would have I probably would have gotten
street fights with hobos if I knew it could lead to Linux Academy.
I'm just saying I would have got my butt kicked every single time and I still would have done
it for Linux Academy.
Are you saying those kids today just have it so easy?
That's exactly what I'm saying.
And they're on my lawn with hands on scenario based labs to where you get real experience
on servers, which there is nothing that beats that except for maybe the fact that they have
human beings, real instructors, full time humans at Linux Academy who will answer your
questions and give you advice when you get stuck.
They'll spin up cloud servers on demand as you need to learn more.
They have course schedulers to help you pick a time frame and actually stick to your goals.
Somehow they do this with computers.
Turns out they're good at these kinds of things.
And if you just need a specific career track refresher or you're ready to go get a cert,
they have learning paths, which are series of courses and content planned by their instructors
for specific career tracks.
And of course, they've got training and preparation for certs.
Linux Academy dot com slash unplugged with comprehensive study tools and much, much more.
You got to check it out.
Linux Academy dot com slash unplugged.
Go there, support the show and sign up for a free seven day trial.
Big thanks to Linux Academy, Linux Academy dot com slash unplugged.
OK, so I know Crazy Chris is switching desktops again.
All right.
What's happening?
Get your laughs out, everybody.
Shake it out.
Ha, ha, ha.
It's so funny.
Except for this is the real deal.
I know this is this is the real deal.
Maybe like I've heard this before.
I know.
I know.
I've had a I've had a kind of blame Wimpy to Wimpy kind of started this whole thing
with this.
Hey, you ought to try Plasma on Wayland.
Yeah.
What have you done?
I know the reckoning.
And since then, I've installed KDE neon user edition on all of my systems.
I've just I just went I went for it because I really, really wanted to put it to the test
because I'm sick and tired of switching distros and sick and tired of switching desktops.
I just want one thing that works.
And so I thought, I'm going all in on this to put it to stress tested as much as possible.
And let's make things harder by doing it right in the middle of an upgrade from KDE 5.11
to 5.12, which, you know, it's always fun to just completely update the desktop environment.
And I did a lot of discussions with people online and one of the most influential people
that I talked to was producer Michael who said, just try KDE neon.
And he described it in a way that perfectly suited my needs.
And producer Michael, I don't want to steal your thunder because you did such a good job
describing the reason why KDE neon has been the perfect Linux setup for you.
And I'd love you to share it with us.
Well, I don't remember exactly what I said, but it was probably somewhere along the lines
of it's at a point where I was, you know, you know, you're moving to the system and
you're just frustrated with all the problems and the updates constantly break things and
stuff like that.
Since moving to neon, I've used the same install for almost two years.
And it's while it does have quirks because every system has quirks, I can be safe knowing
that when I update my system, it's not just going to crash everything.
It's like I'm going to have all the settings that I wanted, all the applications, like
loading and where I want them to load, all that stuff is exactly where I left it when
I updated or prior to updating and that that reliability is just so nice.
Yeah.
And you, you like tailored it directly to me.
Like you weaponized it.
You said, um, KDE neon user edition is the perfect blend of a stable LTS base with the
rolling user land because you know that gets me, you know that gets me.
And so it is my entire reason for wanting, like I've been wanting this exact setup for
like a decade of a system that has all the stuff I want, the applications and the DE
and all that stuff to roll.
But I don't really care if the kernel and the display server and all that stuff rolls
with it.
But like for the entire time, it's always been, you either have a stable base or you
have a rolling base and I'd rather have that little hybrid approach.
And that's exactly what neon does for me.
Yeah.
Yeah.
And then you combine it with flat packs and snaps and it's, it's sort of, it's sort of
this perfect blend of modern user applications, modern desktop environment, but stable old
reliable base.
So when I open up my bash terminal, everything's like it's been for like the last couple of
years.
Ooh.
Yeah.
The stable Unix workstation.
And the other really, really great thing about plasma is there is uniquely new stuff that
gnome isn't doing and windows isn't doing and macOS isn't doing.
Yeah.
They really are pushing ahead in their own direction.
And I've noticed direct benefits.
And I don't know how much this is attributed to plasma desktop versus light DM and SDDM,
but my machines with neon wake way faster.
Like the screen is up and my desktop is up.
I turned off locking because I'm lazy and I open up my screen and it's my home machine.
It never leaves the RV.
I open up the screen and I, my desktop is up on my screen before I have finished positioning
my laptop screen.
It's immediate.
And then it takes a, another beat for the network to actually connect, but it's instantaneous.
My screen wakes up now.
I feel like my boot is faster.
It just, Oh, it sounds like your life is better, honestly.
That's what this is.
It's infatuation.
Well, or is it real?
This is always how it starts.
Church of neon.
It does start like this, but I am happy to report that I did go through a five 11 to
five 12 upgrade and if I didn't know that's what I was doing, I wouldn't have even known
the upgrade took place.
It was, I've, I've done it on several machines before the show and nothing, nothing.
I just noticed nothing.
It just was fine.
Exactly.
Yeah, it was easy.
I've gone, I'm on five 12 now and I've, I mean the first time I started was five six.
Wow.
Wow.
Maybe it was five five, I'm not sure, but it was, it was somewhere around there.
You've been upgrading for a while.
So I, I've, I've been looking for a desktop that has better tech, technical fundamentals
than gnome shell and I've been looking for a desktop that is more prepared for Wayland
and I've been looking for something that feels like it takes advantage of my hardware and
I've been looking for something that doesn't slow down after four or five days of uptime
because all of my systems are a feature we borrowed from windows.
Yeah.
Well, that's really where I got to with gnome shell is I got to the point where I needed
to load a certain set of extensions to make it usable, but that seems to bring a certain
level of instability and I thought back to when I used to use Mac OS system six and I
was installing extensions that would rip code out of memory and inject their own code and
I, and I thought about how things didn't, didn't properly have isolated processes and
I started to get angry because that was 1987 and we knew those problems existed and somehow
when gnome shell was invented years later, when we knew about all of these mistakes,
they repeated the same sins because they needed to punt on bigger issues that they didn't
have answers to certain security issues and IPC issues and it has led to a desktop that
honestly like we have this super computer operating system underneath it and it is,
it is crashy as, as windows 98 se and I'm not windows 98 se was a great release of windows
and if you put the plus pack on there, that shit was choice, but it still would crash
like a bitch and gnome crashes like a bitch all the time.
Before this show started, we dumped our live stream because the gnome shell crashed on
us.
It's just sad and true.
It's too much.
It's too much.
Like what is the point of all of these years of open source innovation just to straddle
ourselves to a technically incompetent desktop environment and I just got angry as I thought
about this and I came to a realization that I could no longer come on the air and I could
no longer recommend that people try out desktop environments based on gnome shell.
I just couldn't honestly do it.
I would feel like a phony if I told you that's a desktop environment you should be using
and that's pretty fucking scary for me because I 11 years into this, this is the first time
I've ever felt this way.
I have to say Chris, having used Unity for six, seven years and then when we switched
to gnome in Ubuntu, I was kind of surprised at the instability of it.
I was impressed at how fast the Ubuntu desktop team turned around from Unity by default to
gnome by default and having something that was prettier than I expected it was going to
be.
I agree with you it is a bit crashy and I know that there is some work going on upstream
to fix that in the gnome project and in Wayland and mutter and so on but it looks like that
stuff is kind of some way out, those fundamental architectural changes that are going to be
required to make it rock solid seem a little bit further out than I'm happy with.
So I decided to join you on your journey with KDE Neon.
I'm really excited about that.
You're welcome.
I keep getting pings from Wimpy saying hey so how are you liking that KDE Neon?
How are you liking it?
I'm curious how are you liking it?
So do you want the full beans or just the high level?
I want the full beans because I have a feeling both you and I are going to have a totally
different perspective by next week.
That's my sense of it right now.
There's been a couple of frustrations, niggles, and one of them I filed a bug upstream in
KDE to let them know there's a bug there.
It was all jolly fun downloading the ISO at the gate at the airport in Seattle.
We tried over the airport Wi-Fi and it was just too slow so I downloaded the ISO image
over 3G roaming on my phone and then Wimpy dragged the ISO off my phone and put it onto
a USB stick and we tried the install at 30,000 feet on the flight bell.
I'm installing it on a ThinkPad T450 that's had Linux on it for ages so I know Linux works
perfectly fine on this thing.
Unfortunately we discovered a bug that you can't install KDE Neon offline.
It refuses to install the grub bootloader.
Noah ran into that same problem too.
I think if you have an EFI system, if you have a legacy boot system I think it'll work
okay.
Right and I couldn't do that.
I couldn't even get it to boot with legacy mode.
I don't know how many times we tried but we tried a lot of different options in the BIOS
in order to get it to boot and when we got it to boot it wouldn't install so Wimpy after
we sat there and ruminated over a glass of wine on the flight, I know right, he said
I think I know what this is, you need to be online for that to work because the message
doesn't indicate that's the problem, it just says I can't install this package and sure
enough when I got home I put the same USB key in, connected it to the LAN, did exactly
the same steps, the install succeeded perfectly fine.
So that out of the way, I filed a bug and I'm sure they'll fix that and that's great.
Yeah I know they know about it, that won't affect everyone because most people are connected
these days.
Not on the plane.
Right but that aside and one other niggle with the trackpad that's been irritating the
hell out of me, you can't turn the trackpad off.
I was wondering about that, I had not tried that yet.
You kind of can, there is an option where it tries to be smart and say turn the trackpad
off when there's a mouse plugged in to say oh well he's got a mouse, he doesn't need
the trackpad but it's not smart enough and my ThinkPad has a nipple obviously and it
thinks that's a mouse so there's a set of exceptions where you can say turn the trackpad
off if there's a mouse connected but not if there's a touch point or nipple connected.
So if I remove all of those exceptions I can force it to disable the trackpad which is
what I want, I personally don't use trackpads but then it wakes itself up every so often.
I don't know whether it's waking up from suspend or on a reboot but sometimes the trackpad
just turns itself back on again and it's so infuriating because I find I end up clicking
buttons that I didn't intend to because I've got fat thumbs that rest on the trackpad right.
So those two issues aside and those are the only two issues I've had really to speak of,
the others are just tiny little niggles.
I've been really impressed with it, it's really really nice, it's quick like you say it wakes
up nice and fast.
You've noticed that too?
Yep definitely, the battery life feels longer but I've only had it installed for a couple
of days so I can't really say but I'm speaking to you from a snap of a mumble on KDE Neon.
That is awesome.
There you go, it works.
How do you all feel about the efficiency of it?
I mean in terms of KDE resources?
In terms of like if you looked into the applications that you previously run on a difference DE
then run it inside of Plasma and see that there's actually improvement on pretty much
everything.
Especially if you're a QoS user.
So I have switched to Firefox here because I'm using as many of the default apps as I
can but I also had to install some other things so I installed the Telegram snap, the Slack
snap, the mumble slap, VS Code snap, but on top I haven't really installed anything from
the archive, I've only installed snaps on top of KDE Neon and that's kind of where I
am right now but it's working really well.
If you go grab the user edition, there's two versions of the user edition, user edition
and user edition LTS.
That's the one I got.
And producer Michael, do you know when does the LTS version of Neon get the new LTS of
Plasma desktop which just came out today?
It's not as quick as the regular user version but they haven't specified exactly an ETA
yet.
It eventually lands there though.
Yeah, the issue is that this is the first time there's been a switch from an LTS to
an LTS on the Neon existence.
And then there's an 1804 switch coming up too so it's kind of interesting times.
But Popey, you know how you were having that Dropbox menu issue?
I think the difference between that is that I'm on 5.11 and now 5.12 whereas you're on
5.8.
Yeah, I think I'm happy to test it, whatever version I've got and when I come to upgrade,
maybe we'll see.
Well, you should get 5.12 pretty soon I would think.
So you and I will be in sync pretty soon.
Yeah, I'm not going to force it.
I'm going to keep what's on here on here because that's the experience that I got through downloading
the ISO and installing it.
But I am quite happy with what I've got.
I've been able to customize it a little bit, tweak the theme, change the mouse cursors
and stuff like that.
I'm pretty happy with it.
It's a nice setup.
Me too.
I did Breezedark.
I went to Breezedark and here's the thing.
So I want to invite the audience to try this too.
Go get KDE Neon and grab one of the user editions.
I'm on the main user edition.
They're still using the LTS base.
So if you get user edition, it's the stable version of Plasma with a Ubuntu LTS base.
If you go get the Neon LTS, you're getting Ubuntu LTS as well as the Plasma LTS, which
is what like Popeye is on and Noah is using that as well.
I'm on user edition, which is just today got Plasma 5.12, super smooth upgrade, really
great desktop.
Once you put on Breezedark mode and I invite you to also go into the GTK application settings
and turn on dark mode stuff there, I tell you what, I've never in – using KDE since
version 2, I have never had an experience where GTK applications and Qt applications
look so close to the same look and design.
It's better than when I have a GNOME desktop or a Unity desktop and I pseudo an application
like the NVIDIA settings and then the NVIDIA settings launches and its theme doesn't – that
doesn't happen anymore under my Plasma desktop.
Like my GTK applications are actually more consistent under my Plasma desktop than they
were under my GNOME and Unity 7 desktops.
One of the things I used to be kind of resistant to KDE was like the plethora of settings and
I know some people love to be able to twiddle and tweak everything.
I'm not – I don't do that so much.
When I would find some of these like billion dialogues with loads of radio buttons and
sliders and stuff, I would find that overwhelming and I didn't really like it.
But the way that some of the things have been presented like if I click on the battery,
this laptop has two batteries and if I click on the battery icon, I see the gauges for
both of them really easily and clearly and if I click on the network thing, I can see
the network I'm connected to and the up and down network traffic and stuff like that.
It's just – it's really classy.
I really like the exposing those details without it being overwhelming.
Yeah, exactly.
And there's a system tray.
Yeah, that is nice to have all of my icons in the system tray just work.
That is really nice.
Yeah.
There's actually – you can customize the system tray too so that you can say – let's
say an application shows up in the tray that you don't want it maybe for whatever reason,
you can just go in and individually hide any application you don't want to show.
It will still be accessible through the tray but it won't be on the panel.
I really appreciate the smoothness of Kaywin so the installation that I'm presenting
right now on screen, this has been running now for about eight days, nine days without
reboot.
It's just been super solid.
It's just – because one of the things I was running into is about four days of uptime,
I was having just this grinding performance.
I shared a video in the Jupiter Broadcasting Telegram group and where even my – just
everything ground to a halt.
And so now –
The system is just unusable.
Now I've doubled that time so far and it hasn't run into that issue.
I'm the same hardware.
Same –
For that same reference, I've done a month and a half without rebooting.
Oh!
Okay.
Mr. Fan.
Yeah.
I'm not a fan of rebooting.
I like to leave my systems up a lot.
And one thing that I haven't – are you using KD with Wayland or are you on X11 because
I didn't make – there didn't seem to be an option.
No, I don't know.
I didn't choose anything.
Yeah.
But I know I'm on X11 because I've seen the environment set up.
So I don't know why.
My version is mainly X.
Okay.
So if I upgrade, maybe I'll get Wayland.
Right.
You'll have the ability to use Wayland.
I wouldn't say that Wayland is ready really to be as a primary anyway.
It's more ready than Gnome's feature but –
Wayland is already the worst kept secret in the world.
I was just saying like there is some kind of like – some misstatements about the Wayland
support in Plasma.
It's a lot better than pretty much anything else I've tried.
But it's still Wayland.
I'll look forward to trying it when I get the upgrade.
If I get the upgrade.
Well, so I wanted to just say I do feel like there's still quite a bit of defaults I
change but my perspective on it has changed a bit because I feel like I go through it
once when I set up a system and then I just set them all.
Like I run Dolph.
I just go through console.
I just run everything and I set it once.
And once I've set it, it sticks.
And that's been really nice.
It won't lose it.
I've – after years of using, I've been using Plasma itself for – since like five
years now and I have not lost any of my settings.
As long as you save the files that they're put in, you're good to go.
Well, except for my touchpad setting but we'll gloss over that one.
Yeah.
Actually, I'll talk to you about the show.
I think I might have a solution for that.
Excellent.
Good.
So I invite you guys to try it out and just give it a shot.
You know, change the defaults as you need.
Maybe put the dark theme on there.
It's all pretty nice and play with it.
I – you know, to the point that you asked about resources, I actually noticed a pretty
huge improvement which directly translated to more battery life on a laptop that's three
years old.
And I went from getting an hour and a half battery life now to four hours of battery
life with a combination of switching to Plasma but also I dropped Chrome and tried Vivaldi
for a bit and then just settled on Firefox, significant performance impact difference
on my machine.
I get better battery – I get significantly better battery life with Firefox.
Is that right?
Yeah.
And the combination of Plasma.
30% lighter browser.
It's huge.
That's their benchmark.
Well, I mean, I go from two hours to four hours with the combination of Chrome and Plasma
and Firefox.
It's much better.
It's a whole new you.
That's their marketed percentage.
Maybe it's actually better depending on your structure of how you set it up.
But the other thing that's kind of nice is certain notifications from Firefox or whatnot
integrate in with Plasma's native notification system.
So like download notification.
It really does feel like a consistent experience and I'm impressed.
Yes.
Firefox –
Just so you know, in the future, that's actually getting better.
Yeah, like download status, right?
And media playback controls and whatnot?
Yeah.
The playback – you have a YouTube video playing.
It'll be connected to the media player inside of the panel.
So you can just like –
Right.
Everything – the best thing about it is that you can have custom shortcuts to that
media panel.
So you can be a global like play and pause for YouTube anywhere.
Yeah.
So just if you didn't catch that, what he's saying there is literally like you could have
a YouTube video playing and you could click on like the volume controller and hit pause.
It'll pause the YouTube video in a tab somewhere.
And that's super nice when you have like a multi monitor setup and you have YouTube
thrown up on one of the screens.
And the other thing – I'll just leave it with this and then we'll move on because
the Ask Noah show is just coming up.
But I – the thing that pushed me over to try this was – and maybe you remember the
details, Michael, but I forgot the names.
I think it was Deal Moto but I can't remember.
There was a semi-critical review.
It was basically a review of Plasma 512 and it said, here's all the rough edges that
I perceive and these are the things that I would do differently.
And if you've watched The Gnome Project, you've witnessed how they handle that kind
of feedback a few times.
And so I kid you not, I popped my popcorn, I got myself my beverage, I sat down in front
of my computer, I brought up the planet.kde.com page and I thought, okay, let's watch their
responses to this.
This should be a shit show.
And what I saw was developers in the Plasma project that took point by point the reviews,
critiques of the Plasma desktop and either pointed them to existing bugs or converted
them to new bugs and ideas and was completely receptive to the feedback to the constructive
criticism and turned it around into things that they're going to implement into the
Plasma project or things that they're already working on.
And when I saw that, it really clicked with me that there's a different level of interaction
with what the community wants.
There's a different level of weight put on what the community wants.
You can hear that's why the dogs are barking because they believe it too.
They're barking for Plasma.
So if that sounds appealing to you, if you want to bark for Plasma, I recommend going
to neon.kde.org, go get the user edition, try it out.
Become a Plasma puppy.
Yeah, become a Plasma puppy, you're a Plasma puppy.
And just give it a go because there's interesting new things happening there and I've really
been enjoying it.
I'll come back next week and I'll tell you if something's gone wrong, you know I'll tell
you about it.
But I don't know, I'm pretty impressed with it.
I'm really enjoying it.
I think one statement is if you're new to the Plasma experience, you should know that
Neon is kind of like a minimal approach to a distro.
You're not going to get, LibreOffice is not included, you're not going to get any kind
of office suite or you're going to get the only media player you'll get is the VLC, things
like that.
So if you don't know what you want, it's not meant for the base level beginner.
But if you have a rough idea of what applications you want, then it's great.
Yeah that's a more minimal approach, which is kind of how I prefer it.
It's kind of awesome, yeah.
Yeah, I prefer that.
LTS base, install whatever I want.
So you loaded on your rig before the show started and you've been sort of tweaking it
a little bit as the show's gone on.
What do you think?
What are your initial impressions on it?
And how will this machine give us a benchmark?
It's like four years old?
Yeah.
Yeah, so it's not the BPS, but it's been great.
The install was super simple.
It got all of my EFI things sorted out without any issues, which was a surprising delight.
A delight, you say?
A delight.
Yes, absolutely.
And that's been kind of my weak spot is not having a ton of plasma experience, so not
necessarily knowing where all the settings were.
And I was really comfortable with a default GNOME.
I was not a huge GNOME plugin user, so I had somewhat less, I mean a couple plugins, sure,
but somewhat less issues with crashing or stability.
And I also tend to reboot my system.
So I have basically none of your problems, but I'm still having a fantastic time.
It's super consistent.
It's really fast and smooth, and maybe a couple pastimes a couple years ago, like when I was
last doing a dedicated plasma try, I did try to give it time, but I didn't get it to a
place where the default or where the time I had made it a system that I really liked
compared to what I had in GNOME.
But right now, I mean, I think I can just keep using this.
Really?
I'm going to try to convince the KD18 to let me change the defaults.
Yeah, because it's not that I don't like it.
I actually really appreciate the ability to tweak things.
I just don't always, you know, I want to be able to fresh install and just work.
The fact that there's so many like silly defaults that like, you know, like just like a couple
months ago was the first time they introduced the folder view as by default, so you have
desktop icons like that, you know, okay, it's been a decade.
You know, and I know, I think there's already a bug open about this, but there's others.
There's like low hanging fruit.
Like when I'm on a high DPI display and I open up Dolphin or I open up system settings
and it's like taking 10% of my screen up in the corner and like I have to like resize everything
for the first day.
I'm resizing all of the windows for the first day.
And you know, the one thing I'll say is it remembers the size.
God dang it if I don't love that about console.
Console is the same place, the same size.
I open it every single time.
Man, oh man, do I appreciate that.
So I only have to resize it once, but every single thing gets resized every time I open
it for the first time on the plasma desktop.
Here's one quick, super cool tip about the window, the Kwin structure in plasma is the,
when you, let's say for example, you'd like to maximize windows, but you don't want the
title bar to take up space, you can remove the decorations from any application at any
point.
Oh, interesting.
So whether it's maximized or not, you just go, you just right click it, choose more options
to right click the title bar, choose more options and then click no border.
And it just removes the decoration so you can maximize and you know, use as much screen
as possible.
I'm trying that out right now.
Oh my God.
That's amazing.
Wow.
Nice tip.
You can actually also script it so it automatically does it on individual applications and make
them specific sizes and all kinds of stuff.
Yeah.
I've been taking advantage of like window rules too.
So that way Spotify, if I've launched that, always opens on desktop four cause I don't
want that crap anywhere near me.
So I always open that up on desktop four.
So I invite you guys to try it out too.
Give it a go and let us know.
We'll give you our followup conclusions if we're sticking with it or not in next week's
episode.
Our conversation doesn't end here either.
In fact, Ask Noah is coming up just a little bit after the show and Noah is all in on the
big plasma experiment too.
Are you ready?
Are you ready Noah?
Have you loaded your systems?
Have you done the mass formatting, the nuke and paves like I have?
Yeah.
Yeah.
Caught your infection.
We're all infected.
Yeah.
Yeah.
Well I got home and I was like, wow, I give this a shot and I put it on a, you know, on
the bench machine, right?
The one that doesn't matter.
The one that it's powerful.
I can play with it, but that's just, I try it for a little bit and then I move back to
what I know will work, except they didn't went and did my work computer.
And then I actually, so my, the machine downstairs, I, and I hate to admit this, but it's the
truth.
It, you know, it's been running for fedora for so long.
It's run every, that, that position, not the same physical hardware, but has run every
single version of fedora since fedora core one.
And after it, well how it took me, it took me the entire week and took me three days
to get everything moved off of there.
Yeah.
And now that's running plasma as well.
Really?
Wow.
Yeah.
I went to Katie and neon.
I have a sense.
This might be a topic in today's episode of the ask Noah show.
I might, we might mention, we might talk about it just a little bit.
I'm really enjoying it.
I mean, I, so far this could all, you know, this is the funny thing is the, if the first
week or so, it's always like that new relationship, you're like, Oh, this is great.
As is so great.
Like when you get a new car, it still smells like you haven't figured out what you hate
about it.
Yeah.
Like the dog hasn't crapped in my new car yet.
You know, once the dog craps in the car, the smell changes and that may happen over the
next week, but I don't think we've ever tried anything like this where so many of us are
giving it a go because not only are several of us here in the mumble room giving it a
go, but, and it's, uh, Noah's giving it a go and it's, it's, this is transpiring across
the ask Noah show, but also there's a whole bunch of people in the telegram group and
on Twitter that are also giving this a go.
So if you want to join in, you still can.
We have a week that we're trying it.
Just give me a hashtag so that way I can filter all of this.
And we are trying to solve the shit show that is the desktop.
So give me your feedback either in telegram, discord or on Twitter, whatever it is, and
then append it with hashtag shit show one word that way we can find it and we'll review
everybody's thoughts.
So this is going to be a meta review like we've never done on any of our shows before
crossing multiple shows, crossing multiple communities and multiple different people
that are, have tons of different preferences who will hold out, who will be the final plasma
user after all of this.
And what will the reward be?
Stay tuned and find out.
But in the meantime, that does bring us to the end of this week's broadcast.
Hope you enjoyed it.
I encourage you to join us live.
It's really like a Linux sandwich.
Yeah.
And probably if you do, you'll end up getting switched to Katie and neon.
So just do it today.
Yeah.
Go over to jblive.tv.
It kicks off at 2 PM Pacific, really one 30 ish, but just go to Jupiter broadcasting.com
slash calendar.
Cause everybody knows that you got your own unique time.
You got to solve that problem.
It's weird.
Go get more of poppy and wimpy.
They have a podcast.
Will it come back?
Nobody knows.
But in the meantime, you can check the back catalog, Ubuntu podcast, go check out Daniel
over at elementary OS.
And of course the ask Noah show coming up right after this, and we'll see you right
back here next week.
All right, Mr. Payne, man, you know, it's great.
Katie neon.
Yeah.
That has been pretty great, but no, after this, you and I are going to go do a massive
upgrade to the Jupiter broadcasting networks.
It all go up in flames.
Who knows?
Who knows?
We'll report on the text net program.
I will listen to ask no while we do it.
All right guys.
Thank you very much.
You can go to jbtitles.com and you can bang, suggest anybody in the mobile room have a
title suggestion.
Feel free to throw it out too.
We got to name this thing before the ask no show.
How about bang suggest the ending line is see you back here next Tuesday, not next week.
You know, a lot of people listen on Wednesdays now I've realized, you know, oh really?
Yeah.
Cause we put it out.
What's their fault?
Well, no, it's cause you know, we're in West coast.
So you know, I'm just, we're behind everyone and actually get done listening to the ask
Noah show live.
Like you're going to go download it, you know, you're spent.
There was something.
There was plasma something.
I like to suggest a title.
Yeah.
This is like, it's like a running joke.
How about the church of neon?
Now we did have the, we did have the guys on from red hat.
So maybe the, yeah.
Or I appreciated how about the Linux Grinch, the Linux Grinch that was good too.
Worshiping at the church of neon.
There was something about that's good.
The church of neon the plasma wave plasma.
I'm no longer the guy telling people to try out plasma.
Well, everybody has been, you know, a beard was, you know, I've tried it.
This isn't actually, I will say I should have said this in the show too.
The fact that I've tried it before made trying it this time a lot easier because I knew like
how to enable high DPI support.
But yeah, you're right.
You've been on there for a while now.
The thing is, is the, is the gnome keeps having, the gnome keeps having this, the gnome keeps
having these big headlines like, Oh, you know, canonical shipping it.
And now, and then, and then that translates into Dell and system 76 shipping it and all.
So it's just, there's so much momentum there that if, if you were to sit back and just
legacy problem, I think if you look at about it, like gnome has had the, the people got
attention to gnome, but it's, it's always had similar issues.
Yes.
And the thing is what I'm realizing is there's certain people that have been hip to these
technical issues.
It's like, it's been, it's been the biggest public dirty secret that we're only now talking
about that we're this far into it.
But there's certain, you realize you look back at you go, Oh, that's why company X did
Y.
Oh, that's why this group did this.
There's actually something hilariously I recently just found out about the gnome's website.
So you know, the you know, that gnome tweak, you could install the extensions from the
zip files.
Yeah.
There's, there was a, I was talking to someone and they said that canonical had removed that
ability in Ubuntu.
They were like, why do you want us to install things?
And I was like, that seems weird.
I don't think they would do that.
So I looked into it, gnome removed that feature from gnome tweak tool in 326 didn't make a
fuss about it.
I never really noticed it except for people started blaming canonical because that was
the first version that was in 1710 and they just kind of made an assumption.
But what's funny is that if you go to the extensions dot gnome website there for a longest
time, there was no way to download extensions from that website.
I even created a script that you could download it and make that work because they make the
downloads that just don't let you download them.
Now you can download them and not use them.
That's perfect.
That's exactly what I want.
Yeah.
Oh good.
So I think the hardest thing for me in this transition is that it seems like gnome just
got the windows 10 style.
Like when you have a snap, yeah, well the snap and then like the, the middle resize
and I've been loving that.
There's some good, there's like, it's got like multidimensional snapping, like check
this out.
So here I grab, I'll grab the window here, right?
Are there keyboard shortcuts for the snap?
Oh yeah.
Oh, there's keyboard shortcuts.
So you can do like, like I can do just this quadrant or I can do the full thing or I can
do the whole thing or I can again just do this lower quadrant, this upper quadrant.
Like that's pretty nice.
You can have to do a 50 50 horizontal like, like, uh, like so, right?
Like boom.
And then if I had another window open, I could plug it right there.
That's pretty good.
And see how it's sticking.
See, I do like, you see it sticking right there.
It's sticking.
I just got so hooked on that, like being able to drag and have them both resize at the same
time.
Yeah.
That is super nice.
Windows 10 actually does pretty well.
Here's something that actually might make that even better.
You know how, uh, this is like a not, I guess it's not really a power user thing, but you
know how the alt, uh, left click where you can like move a window.
Yeah.
I love that.
You can alt right click and resize a window.
Oh, good to know.
Oh yeah.
Look at this.
Oh, thank you.
Thank you for telling me that.
That's actually really handy.
So you can do it from like, as long as you're like, if you're on like anywhere remotely
near a corner or a side, it works.
Oh, that's hot.
Thanks as another producer, Michael Hott.
