Geez, did you see Ubuntu touch on the Pinebook?
This came across my Twitter feed today.
I did, in fact.
It's on the OG Pinebook, even.
It's not the Pinebook Pro.
But I'm sure they'll have it working for that as well.
I mean, it's touch on a laptop, so I
don't know how I feel about that.
I kind of like it.
I mean, you get one shot.
So I can't make a big judgment out of this.
But it feels kind of perfect, because it always
was meant to be convergent, to be usable on a desktop.
Truth.
And I don't know.
I think it's sort of the perfect side project
to try for something.
It's like, why I love the Pinebook.
It's why I love this so much.
And I feel like the guy that put it together, that
built that experimental release, is just like one of us.
He's just, can we get it working?
Can I get it on here?
Can I make it functional?
And they have.
They said it's a little sluggish, as you would expect.
It's an experimental version.
But you can actually go and pick it up out of their GitHub,
I believe.
If we ended up with a Pinebook and could
have put Ubuntu Touch on there, Westpane,
would you accept a challenge to use it for an entire workday?
Oh, yeah, I would.
Two workdays?
No, you're pushing it.
Yeah?
Two workdays?
How about this?
I'll use it while we do one of these shows live.
All right.
Hello, friends, and welcome into your weekly Linux Unplugged
program.
My name is Chris.
My name is Wes.
Hello, Wes.
How are you?
Hello, I'm doing great.
We've got a lot of things to cover.
It turns out it really is Linux Tuesday today.
Yeah, it's a big laptop you got there in front of you.
Very big and with a beautiful screen.
I'm really enjoying using it.
We'll review the System76 at our workstation
here in just a little bit.
And the community news, so much big news.
We got to say hi to you over there, Mr. Bacon.
Hey, Cheesy.
Hello, everyone.
How are you today?
Quite well, quite well.
Very, very excited about the arrangement of topics we have.
There's a couple of news stories today
that if it was the only news story,
I would be absolutely elated.
That would have been great.
Yeah.
And of course, we've got our virtual lug,
time-appropriate greetings, Mumble Room.
Hey, hey.
Hello.
Hello there.
Hello.
Hello, Brandon and Neil.
And who else do we got in there?
We got Laura Deak in there, MiniMech, Tat2D,
and The Drifter.
Of course, The Silent Drifter.
What, you wouldn't call him Tat2D?
I think it's a good name.
No, it's a great name.
It's a great name.
He's just cracking up over there silently,
throwing me under the bus, that's all.
All right, yeah, OK, well, we got some big news
to get into today.
First of all, hot off the presses,
CentOS version 8 has been released, build 19.05.
As I mentioned last week, I think,
at least I mentioned it in Linux Action News,
this is the release of CentOS, which is based on RHEL 8.
Which came out back in May.
Which is based on Fedora 28, essentially.
So you get things like software modularity,
a little bit easier and more modern approach
to installing third-party drivers, a lot of things
that are really nice in Fedora 28
that made its way into this version of CentOS.
And that would be big news.
This is a release I've actually been personally looking forward
to for a really long time.
But Red Hat has gone and made even bigger news
and announced CentOS Stream.
CentOS Stream, Westpac.
Yeah, that's right.
What is CentOS Stream?
OK, well, the CentOS Stream project
sits between the Fedora project and RHEL
in the RHEL development process.
So it provides something like a rolling preview of future RHEL
kernels and features.
This enables developers to stay one or two steps ahead
of what's coming in RHEL, which was not really previously
possible with the traditional CentOS release style.
Right.
You wouldn't use CentOS to figure out how to build.
It doesn't make sense.
You could maybe figure out if you
target a certain version of Fedora,
you're likely to be building for a future version of RHEL.
But it wasn't a clear-cut solution,
whereas this really is now.
And keep in mind, this is going to be in parallel
with the existing CentOS release.
So nothing changes for current users of CentOS, Linux,
and services.
They can just keep using it like they always have.
This is an additional release stream now.
That's pretty neat.
That is neat.
I actually kind of think we're maybe really good candidates
for this kind of thing here in the studio, potentially.
Because one way you could consider this,
though they won't call it this, but it's
kind of like a Fedora LTS a little bit.
So Fedora is the foundation for future RHELs,
but CentOS Stream will be really an ecosystem for developers
and folks like us that want to see not just a great, stable,
enterprise-grade distro, but something that stays fairly
modern and current, too.
Right.
And it's interesting, now there's
a way for people who want to contribute back up
and are using CentOS, or at least using CentOS Streams,
to do so.
They can have more input on what's
going to end up in RHEL and therefore in CentOS.
This is a pretty cool development.
Didn't really see this coming.
I was just expecting CentOS 8.
Neil's here.
I'm curious to know what your take is on this.
Well, this is actually super exciting.
When I was at Red Hat Summit, there
were hints about doing something like this.
But I was kind of blown away this morning
when I read the news about it.
So from how I've digested it, it's
basically we now have a neat little progression
going from Fedora to internal RHEL development,
now becoming CentOS Stream to RHEL to CentOS stable.
And I think this gives us something closer
to how people have talked about Fedora LTS, as you mentioned.
But also, it gives people a way to develop
for what people will be using in the future,
because everything that's in CentOS Stream
eventually lands in CentOS stable
when the next point release comes out.
And the bigger point to this that I think a lot of people
kind of missed is that this will also
be an avenue in which the community can contribute
directly to RHEL.
Because what a lot of people don't understand,
maybe because it's not immediately obvious
because we don't talk about it that much,
is that the relationship between Fedora and RHEL
is more or less a one-time thing.
When a release is about to be cut
and they branch from Fedora, that is a permanent branch
for that whole, the lifecycle of that release.
From that point, they're operating with their own lifecycle,
their own components development,
their own patches and things like that.
So they create their own bugs.
And so the idea behind this is that
if the community discovers these things in the CentOS Stream,
they can send changes to be incorporated
by the RHEL engineering team
to integrate into RHEL and CentOS.
And it gives an avenue for that to be
a proper community enterprise platform.
Yeah, so a couple of notes I made here is,
I got a couple of questions.
I'm wondering if you have some of the same questions
or if you've heard any answers, but one note,
there are gonna eventually be clear differences
between CentOS 8 proper and CentOS 8 Stream.
And so on their Wiki,
I don't know if this link will last forever,
but in our show notes, we have a link to the Wiki spot
where they're documenting the differences between the two.
Right now, it's just like a kernel difference.
Yeah, right.
They say the Linux kernel is the first part
of CentOS Stream to move ahead
of the upcoming RHEL point release.
But here's what I'm wondering, Neil.
Will this roll into eventually CentOS Stream 9
or will they cut major versions to match every major RHEL?
So I think it'll actually be both.
So currently right now,
if you look at how it is synced out to the mirror network,
it's called Stream 8.
So the way I suspect it's going to work
is that there will be a Stream 9 after they branch
based on how they're gonna set up this structure.
And then people can switch to Stream 9
and help with the development
of what will eventually become the RHEL 9 tree.
And that is actually gonna be super exciting
because that would bring,
because I've had the experience of this process
with the way that SUSE Linux Enterprise has now developed.
Since SLE 15, they've done it this way
where OpenSUSE Leap and SUSE Linux Enterprise releases
are actually developed in parallel
and community contributions can go in
and feed into SLE during development and vice versa.
So having this on the Red Hat family
is going to be a big improvement, I think, across the board.
And it's gonna be very interesting
to see how the community takes up with it
because historically speaking,
CentOS is a very passive community.
There isn't very much that they have been
historically allowed to contribute to.
And now I think this is going to give them
the opportunity to step up and turn into
what I feel is more of a proper diverse community
of users and contributors
because there's now an avenue
in which they can influence the RHEL branch
to improve it for what they need.
Yeah, I think it's a huge change for them
and it's gonna mean that the project's gonna have
some growing and adjusting to do.
But going back to one of the things
that I'm wondering about technically here
is how does this now work with software modularity
or I think what RHEL calls app streams.
Could one somehow use software modularity now
to use a CentOS 8 stream repository?
So you could be on CentOS 8 proper or RHEL 8
but using software modularity,
take advantage of a CentOS 8 stream.
In theory, yes.
I think in practice,
people won't necessarily do this
without switching all of their content
over to the 8 stream version.
But of course, I think it's absolutely possible.
That's gonna be something.
But because of the way that this stuff is being set up,
I think that moving on to 8 stream proper
is not going to be as dangerous or problematic for people
and I suspect a larger portion
than what they would have normally expected
will switch from 8 stable to 8 stream
and start leveraging that content
and become part of that process,
especially since there is now an avenue
for them to help make that better
because it means that if there is problems
and things like that and they know how to fix it,
there is a way to make sure it stays fixed
rather than having to work around it locally
like a lot of CentOS users do today.
Yeah, this is really cool
and it's something that we'll play around with
here in the studio.
I was about to say something tells me
we're gonna be reinstalling.
I think it could work pretty good on FakeNAS.
Right now we have Fedora 30 on there
and we were wondering if we were gonna go to 31
or CentOS 8 and now I think we might consider
CentOS 8 stream, although CentOS 8 could be fine.
There's a lot to consider now.
Right, but if we just jump on for the ride,
we'll find out how it goes.
Yeah, get on board.
One other thing that is something
you might have to get on board with
at All Systems Go, a conference about
some of the plumbing things
in our beloved operating system.
The one and the only Mr. Lenot Pottering
gave a presentation about reinventing home directories
and introducing a new technology
called System D, Home D.
Yes, you heard me right, System D, Home D.
Hi, I'm Lenot Pottering and I'm going
to take away your home directories now.
So what's happening here is kind of a rethink
on the concept of Unix home directories,
which really hasn't changed much
in the last nearly 40 years.
And System D, Home D is a way to make the home directory
fully portable and treat the user
as a file on the operating system.
Everything is a file.
So yeah, self-contained home directories, right?
The metadata about the user
should not be distributed across the system
with all its information about the user itself,
with all the resource management and stuff.
It should be part of the home directory itself.
This then means that the mere existence
of the home directories file,
where everything's stored,
should synthesize the user account in full, right?
It should make sure that if you call get pwnem
or something like this, like the classic Unix APIs
to query user, the mere existence of the user file store
should synthesize everything else, right?
In a way, you could say I want that,
yeah, you know, Unix, everything's a file.
But yeah, users should be a file too, right?
Like where you just have one concept in the file system
and that everything else comes from there during runtime
and is not propagated persistently anywhere else.
This is a radical new idea.
He's talking about divorcing user configuration
from system configuration.
Right.
Getting us closer to having a fully immutable system,
getting us closer to having an Etsy directory
that can be read only.
Yeah, you could have a machine
that you've totally configured
and then some user in your organization,
whatever that may be, just walks up to it,
maybe with a thumb drive with all their user info on it
and they can just pop up and use the system.
The existence of the home directory creates the account.
So you're not modifying the system
to create or change passwords.
It's all stored in there.
Really the whole idea is to manage this stuff
at scale and sort of solve problems
that we've hacked together in the past.
We always have this goal that if a system's configuration
not supposed to change, Etsy should be read only,
should be immutable ideally even.
And hence the requirement that if a user is created
or removed or modified or whatever,
you need a writable Etsy kind of sucks
because a user's existence is not really configuration
at least in my view, right?
So the concept that mixes state,
yeah, I believe that the user record is state,
it's not configuration.
And the rest in Etsy is generally understood
to be configuration this way.
So there's this semantical,
this is a philosophical problem already
that Etsy mixes state and configuration
and then this propagates into the problem
that Etsy needs to be writable.
There's a couple of new ideas in here
that make all of this really kind of possible
including West's favorite.
There's some of my JSON magic.
Oh yeah.
There are two new concepts.
Like one of them is,
I want to go for JSON user records, right?
Like everyone knows JSON.
JSON is like what the internet people all do.
I think we should just start using that
for our user records.
Yeah, the reason why JSON is because
it's just the most basic thing.
It's supposed to be machine readable.
It's not supposed to be so much something you write.
It's something that computers write for you
and things like that.
And it's also what probably most of the internet
facing user databases probably use anyway
when they exchange information about users
across the network.
So that's the first thing.
JSON user records.
And we keep saying the user is a file.
The user directory is a file.
What the hell kind of file are we talking about?
We're talking about, in some cases,
a LUX encrypted loopback file.
So everything is encrypted to a LUX key.
Concept B is I want that home directories
are encrypted LUX loopback files in slash home, right?
So that if I have a user called foobar in slash home,
traditionally there was slash home slash foobar
and it was a plain directory.
I want that there now is slash home slash foobar dot home
and it's a file.
And it's actually a LUX loopback image.
And then when the user logs in, what do we do?
We set it up via LUX stuff as a loopback file.
And then we finally mount it after validating
that everything's okay.
And by making it a file, you also make them portable.
The goals that I want to be able to deliver
with what I'm talking about here
is first of all, migratable home directories, right?
Migratable home directories means
that you can take a home directory as one unit
from this laptop to your new laptop
or to your third laptop and it will always work
and be self-consistent in itself
and comprehensive and hence migratable, right?
So this basically means that as little as necessary
should leak into the system surrounding it
and particularly when it comes to configuration,
which is very different from what was there before, right?
Like before, home directories user accounts
were not migratable, right?
Like because as mentioned,
we have all these sidecar databases
and there's no way you can sensibly migrate
all that metadata that's distributed
in all these configuration files in Etsy
and all the weird sidecar database in VAR and whatnot
from one system to another.
We'll talk more about those sidecar databases there
in a moment, but he's demonstrating a system
where you can have everything on that thumb drive
you plug it in, you're now a member of that system,
you remove the thumb drive,
you're no longer a member of that system.
But he also wants to address some glaring security issues
that we just don't talk about in the current configuration.
Number one, if you're on a laptop,
you're likely at this point using Lux, I am.
It works really well for me.
One thing that sucks about it
is it's a shared password by default
because everyone has to use that one password to unlock it.
This was an issue at my wife's clinic.
They all have to know the encryption password
to get the system to boot.
Then there's their user password,
and then usually passwords for services.
Lenart's proposing you change that
and link it to the user password.
And he's proposing to solve the other problem,
which we never talk about.
And that is when you suspend these systems,
when you put them to sleep, the data remains unencrypted.
The key remains in memory.
And I don't know about you,
but that's pretty much what I always do with my laptop.
It's always in my bag of sleep.
Yeah, of course, that's just the most convenient option.
And I'm like, oh, my data's protected.
No, if they get it, not only will it still be unencrypted,
but with USB-C, they can plug it into any old USB-C thing
to keep it going.
And they'll have physical access to my box.
And sitting in memory is your password right there.
Yeah, so he wants to solve that problem.
Also, one of my really important goals, actually,
is to lock Lux on system suspend.
So nowadays, I'm pretty sure that, first of all,
most of you probably use hard disk encryption
on your laptop.
And second of all, I think most of you probably
don't even turn off the computers anymore at all, right?
Like usually, you just close the screen
and that suspends the system.
And then when you come back, you just authenticate again.
But it systematically, I mean, it kind of defeats
the encryption, like the encryption that you have there,
because basically, the way it's currently implemented,
you use hard disk, like full disk encryption.
So while the system is up, suspended or running,
yeah, up in that context, the decryption key is in memory.
Right, so if I go through customs to a country
that I don't trust, and I have the laptop with me
and it's suspended, and I pick up the laptop,
in that memory, you'll find the decryption key
from a hard disk, and that's something I think
we should not do, right?
We should, and this is something that people might
not find important, but I think it's actually
one of the most important things
in this entire approach at all, is yeah,
when you suspend the system, the decryption keys
need to be removed from memory, right?
So that I know for sure that if somebody steals
my laptop in suspended state, because that is
the most common state that they will probably
steal my laptop in, they should not be capable
of getting any access to my hard disks, right?
Again, this is something you really, really
should care about, because it basically,
so far, defeated all kind of encryption that you had,
because yeah, as long as you did system suspend
and everybody of you does that,
if somebody steals your laptop,
they can extract everything they want.
Now they are proposing to make the system
backwards compatible with the existing approach.
Yeah, right, there'll just be shims in place,
so all the existing Unix tooling will talk to system D.
And it's mostly a collection of existing utilities,
like PAM and other mechanisms.
It's not like system D is re-implementing
all of this stuff in some giant binary.
Right, and it just uses Lux, right?
It's not rolling its own encryption there either.
And it could use other backends as well,
that are just file system stuff,
like it can use SIFs or whatever.
So there's all kinds of network possibilities.
It does require some workarounds or development though,
because it kind of turns, it turns out
all this stuff's a bit of a hot mess.
I never really appreciated how patched together
all of this is, and certain things,
just kind of like bypass our basic authentication
mechanisms as it is.
Certain kind of important things that a lot of us rely on.
There's some complications with all of this.
SSH logins, right?
I mentioned that I wanted that user authentication
and decryption of the hard disk is the same thing, right?
This is inherently incompatible
with how SSH traditionally works, right?
Because as mentioned, if you authenticate via SSH,
it goes via the authorized keys file in the home directory.
So if you want to authenticate something
that is inside of the home directory
so that it can access the home directory,
where does the decryption key come from
to access the home directory, right?
You follow what I mean?
It's the chicken neck problem.
You're reading out the key that allows you access
from the encrypted thing,
which you only can after you authenticate it, right?
And there's a couple of ways to solve that problem,
like maybe just unlocking it locally first
or coming up with mechanisms to patch that process.
Right, and a lot of this too is, Leonard tries
to be pretty clear that he's,
some of this stuff is more general, right?
Just like this extensible user record, however it's stored.
That's an interesting idea on its own.
Some of this encryption stuff makes sense really
only for client machines, right?
Machines that will be offline or you may want to protect
because you're moving them around,
not server machines that you have up
and unencrypted anyway.
Right, it's both trying to solve a problem
of making querying users more rich
and like information you can store about them,
maybe that are appropriate for your company.
So that's all in that JSON file.
It's also about supporting things like Yuba keys
for authentication by default.
There's a lot of those kinds of the common,
making the UIDs on systems common
and in solving for conflicts.
But it's also about kind of solving the whole hot mess
of authentication.
You heard Leonard earlier mentioned
that there's all these sidecar databases.
And when you think about it, it's a bit of a hot mess.
I also see the problem.
Yeah, Etsy, PassWD only knows Unix passwords, right?
Like passwords as you know them.
It doesn't know anything else, right?
Everything else how you might want to authenticate
these days, Yuba keys, whatever else,
cannot be an Etsy PassWD because it's not extensible.
Right, so anything more modern,
anything if you even want to authenticate with a pattern,
right, like which is what phones do
and which you might want to do on your laptop too
if you have a touchscreen,
doesn't really fit into that model
because yeah, there's no way how that's viable there.
It's not extensible.
This is actually a massive problem, right?
Like Etsy PassWD, this database was designed in 1985
or something like this,
has not been modified once since then.
There has been this extension like the shadow database
which added like five more fields or something like this,
but everybody wants to add their own fields.
And this is like fucking ugly if you ask me
because they created these sidecar databases, right?
These databases that extend the user record,
but they're not actually stored in Etsy PassWD
in the user database itself, but at some other place.
And that other place means something very different
regarding where you're looking.
All right, if you're going now, this sounds interesting
or this is a horrible idea or I want to know more,
we have a link in the show notes to Lenard's talk
which includes the slides
from the All Systems Go conference.
And there's a lot more in there.
Yeah, right, I mean, you should also know
that signing of these user records,
that's another big part of this.
There's a lot of implications for security
and how you might manage this at scale,
but you're going to have to go learn more yourself.
It may never hit a desktop near you
or it could end up all happening and be totally transparent
because that's the other thing to take away from this
is all said and done, you log in,
your home directory would mount and you wouldn't even know.
You could just, if you've got these services going,
you can just add this on
and not have to change anything else.
And because it's backwards compatible
with the previous system,
it's not like something distributions are forced to adopt,
but you could see where at scale operations
might want some of this management capability.
Hey, I want to play with it already.
I mean, it could be handy even for smaller stuff too, right?
Like you could add me and I have a little movable account.
If I need to use a new studio machine,
just pop up right on it and use it.
Yeah, absolutely.
Or I use sync thing to sync around my Lux home directory
to all the systems and just set down everywhere
and I'm good to go, maybe.
Could be the dream one day, we'll see.
Hey, just a quick bit of good news for OBS, OBS,
our streaming application of choice.
Also, you know, people sometimes say,
hey, what's a great quick screen cap application now?
There's a bunch out there, but OBS is one of the best ones
too, just for that kind of stuff.
It's such a cool project.
It's like the number one streaming application
that Twitch streamers use or people,
a lot of people use it for-
It's just taken for granted now.
You remember the days before a project like this
and it was just only commercial applications
that probably didn't run on Linux.
It's so quickly become just like the go-to
that it's almost like a non OBS, yeah.
But I mean, game changer.
And so that's why it's so great to see Twitch becoming
the premier sponsor of the OBS project.
It seems like a pretty good match.
They write on the page that we're excited to announce
that Twitch is now officially sponsoring my work on OBS.
This sponsorship allows me to work full-time
on the project without much worry.
And with it allows me to support other contributors
to help maintain, manage the project
and work on important features.
I expect more good things from the OBS project
in the future.
Yay.
I am so happy for them because it's such a great tool.
We run it dang near 24 seven here in the studio,
either doing live stream reruns
or doing something in-house and-
And it makes a lot of sense for Twitch to do this too,
right?
I mean, they, so many of their users are using this.
No kidding.
They needed to stick around and stay healthy, don't they?
They sure do.
That's a really good point.
All right, how about a little housekeeping?
So if you are not signed up
as a Linux Academy community member, it's free.
Totally free.
Go check that out because every month
L is dropping new batches of content
and October is just around the corner, my friends.
So you can still get a little bit of September in there
and then go check out the October stuff.
Plus there's evergreen stuff that stays free all the time.
L curates that.
I really recommend it.
So we'll have a link in the show notes
for the September courses.
But if you just Google like Linux Academy community account
or go to linuxacademy.com, go get that
because that's a great deal.
Absolutely free.
Texas Cyber Summit also I want to let you know about
is coming up very soon.
The crew is getting ready to go a party
at Texas Cyber Summit.
There's going to be a hacker birthday meetup.
Pre-funk the summit.
For L and Ali, it's their birthdays
and we're going to do a meetup.
We're going to just combine the whole thing
and make it great.
It's October 10th and the 12th
for a Texas Cyber Summit, texascybersummit.org.
Are you going, Wes?
Yeah.
Yeah, yeah.
Of course.
Was I going to miss this?
No way, man.
You'd hike there if you had to.
That's right.
I think we just did a ticket giveaway too, didn't we?
Yeah.
Oh yeah.
I think Rob was our winner from the ticket giveaway.
If you would like a chance to win a ticket,
you too can enter to win.
And to do that, all you have to do is go to tcs2019.ellopunk.com.
It's tcs2019.ellopunk.com.
You'll be dropped into the Telegram chat
and Elle has a randomizer, name randomizer
that she's using to pull those.
And Rob was our first winner.
So if you want to go and maybe you don't have the money
just to drop to go, jump in there.
See if you can't win yourself a ticket or two.
And if you're in the area,
you could always join us at Two Brothers Barbecue
for the birthday party.
Details at meetup.com slash jupesbroadcasting.
That's Jupiter.
If you want to hear more too,
there's an extra out over in Jupiter Extras.
That's what I was trying to remember.
Right.
Elle and I sat down with the blind hacker
and he tells us a little bit about the great ABCs
of CTF's talk he's giving,
which might just help us, Chris,
if we're going to impress Elle.
There's been some really good stuff
pop into the Extras feed.
We haven't been plugging it very hard,
but if you're looking for just a little bit extra
Jupiter Broadcasting content, extras.show,
some good stuff in there,
usually something coming out every single week.
And of course it's an easy RSS subscribe
to go get that extras.show slash subscribe.
But that, my friends, is everything in the housekeeping.
All right, let's talk about your next Linux laptop.
I'm curious to know what your requirements are
and if they shift like mine do.
So you've been sitting there
using the System76 Adder workstation.
Yes, I have.
And you traditionally spend your days
on your ThinkPad T480.
That's right.
And if you were to go in the market today
and buy one for yourself personally,
I'm curious to know what your requirements
for your next Linux laptop would be.
And I'd like to know the audience's too.
Let me know at chrisles,
because I'm kind of wondering if your shift like mine do,
mine kind of swing between ultra portable,
long battery life and, oh my God,
I want all of the power.
Yeah, I mean, workloads vary, right?
And I absolutely do love something that's ultra portable.
A lot of work that I am doing is just reading the news
or working in a terminal.
And that's perfect for that,
especially when you might be flying to a conference
or something.
Yeah, that's where portable and low powered,
like there's nothing better.
Yeah, but also, I mean, we're doing work with audio,
we're rendering things out,
maybe doing some video work from time to time.
Plus, I just can't stand when the machine is slow.
You know, once you start noticing those little stutters
or delays, it doesn't feel right.
Yeah, this machine did break me in a couple of ways,
which I'll talk about here in a second.
But first, let me tell you what we have here in the studio.
So the System76 Adder workstation that we have
is configured with a Core i7 9750 at 4.5 gigahertz,
six physical cores, 12 threads.
It is ridiculous having 12 threads on a laptop.
It feels like it's like,
I feel like I'm getting a deep fake CPU over there.
It's incredible.
This has two eight gig modules in there, DDR4.
So it's a pretty smokin' fast RAM.
It's got a Samsung 970 EVO 250 gig.
And get ready for this, an NVIDIA GeForce RTX 2070
with eight gigabytes of RAM.
Whoa!
That's insane. Yeah.
And it's running Pop OS based on Ubuntu 19.04
with Gnome Shell 3.2.2, X Server 120,
NVIDIA graphics driver 435.21, and a screen resolution
nominally running at 3840 by 2160.
Although I did mess around with that a bit.
So by my calculation, my price before tax and shipping,
I suppose, is a grand total of $2,314.
Okay, so not on the cheap end, but-
It is a workstation laptop.
Yeah, this is spec'd out.
It's got a 15.6 inch 4K OLED display.
Ooh, and boy is that putting my ThinkPad display
to shame today.
Oh my God, lapping the ThinkPad display
doesn't appropriately describe-
Not even close.
How much of it is just crushing the ThinkPad display.
But in fairness, this legitimately might be
one of the best displays I've ever looked at
because the blacks on this OLED are so incredible
that basic logos when video games load look incredible.
That's it, everything that we've been doing,
even just basic stuff.
I'm looking at like a night mode notes program right now,
and it's beautiful.
Like the fonts pop off the screen.
And then it is running in high DPI mode,
so of course it looks gorgeous.
It has two M.2 slots in there,
so you can pop in two MV&E drives or something.
So you can get up to eight terabytes of MV&E storage
if you like.
Yeah, it's also got a gigabit ethernet,
of course it's got Intel AC, yep, oh yeah.
It's got one USB 3.1 Type-C with DisplayPort on there.
It's also got another USB 3.1 Gen2
with Thunderbolt Type-C connector.
So it's got a Thunderbolt port Type-C connector,
and then three USB 3.0 ports.
With the blue coloring, which is always a nice touch.
Plus SD card reader.
It's got a big power adapter,
not like as big as I've seen in the past,
but it's big compared to what you would normally get
on some systems, but that's because this thing's got
all of this machinery in there.
230 watt power adapter, so it does not charge over USB-C,
but that's because you can't deliver that much power
over USB-C.
What I would love to see, and this is Cheez's idea,
is in the future, I would love to be able to charge
the battery over USB-C when the system is off,
because this is something I do with the old ThinkPad ski,
is I have a dash charger in my RV that is USB-C,
so I just plug it in, and it takes all night to charge,
but I don't care.
Right, if you're just leaving it there
and you're not using it.
In fact, it may be better for the health of the battery
to charge slower with less heat, who knows?
So that'd be fun to see down the road,
but in the meantime, it makes up for it
by the fact that a lot of the bulky ports,
like your HDMI and the power adapter,
which is a bit of an L-plug, are on the back.
So your big I.O. plugs are all on the back,
coming out the back of the laptop,
which means they're not along the side,
so it's not blocking your hands from mouse in.
I love that.
I mean, I frequently sort of add my ThinkPad to a desk
and take it away, and that's not the best on the ThinkPad.
Honestly, this would do better.
Yeah, it's so nice having those big ports on the back.
I love that.
It does have a removable six cell lithium battery
at 62 watt hours, so you're getting,
with my rather aggressive usage,
you're getting an hour and 45 to two hours of pushing it.
If you're sitting there doing a little light work
and you're using Firefox as opposed to Chrome,
you can push that a little bit further,
but it's definitely enough power that we could use it
during the show on battery and do some work,
and as long as we eventually get back to the plug, we're okay.
If you're just gonna go to a coffee shop for an hour or two,
great, if you're gonna be there all day,
then pack the plug.
And it is a 5.51 pound stock,
depending on your config, it'll change.
5.5 pound laptop, two and a half kilograms.
It's kind of right on the boundary.
It's honestly not that heavy.
I'm sitting here with all my knees as we're doing the show,
and I think I could reasonably carry it around in a backpack,
but it's not exactly comfortable,
and it would be a little bit much on a plane, I think, too.
I took this on a trip down to the river.
I took my RV down to a river, had very little connectivity,
and really kind of spent as much time offline as possible
playing No Man's Sky when I was online
or just sort of enjoying having a little bit of peace
and quiet, and so I ended up lugging it around
in a backpack that you and I got as a company event.
So it's a Linux Academy swag backpack.
Standard issue.
And yeah, standard swag issue.
And you know, I thought I'd be griping about,
oh, it was so heavy to carry around in the backpack,
but my ThinkPad with its extended battery on there,
kind of, I mean, it's a little bit heavier,
but not a lot heavier.
It's like 4.8 pounds versus 5.5 pounds.
It feels like what you think it would feel like.
It's not like it seems heavier than it should be or anything.
And that's great.
Oh, Jesus.
Oh, I know.
So there's some things I don't like,
and there's some things I really like.
I'll start with a couple of things that I really like.
Number one, this isn't unusual, but System76
does a great job of putting together
what they kind of coined a quick start guide,
but it's more than that.
It completely illustrates everything
from what each key and port does to how
to pull out the cooling on the CPU
in case you want to repaste it, and everything in between.
See, that's so nice.
With color-coded motherboard diagrams
of this is your storage, this is your Wi-Fi, totally like.
You don't get that from other vendors.
No, and in that same kind of vein,
replacing the keyboard is simple.
Just requires a cross-head screwdriver,
and you could pop that keyboard off if you damage it
and replace it.
So there's aspects about this that I find when you're
investing in a workstation where it really kind of matches
that workstation name.
Replaceable keyboard, replaceable battery,
the storage, the memory, technically even the CPU
cooling if you really want to go crazy,
they're all user serviceable.
That is really pretty great.
And when you consider if you're going to spend $2,200, $2,300
on a machine like this, you kind of
want to be able to do that.
It's a big investment, yeah.
Right.
So I think that kind of stuff actually does matter,
and it's something you don't see very much.
Also, without making a big fuss about it,
there's some keyboard combos that I really like.
One keyboard combo kills the webcam.
I like that a lot.
Another keyboard combo can turn on and off airplane mode.
So you can just kill all the radios.
Nice.
Doesn't have to be some tacky switch on the side of the case.
It's just a keyboard combo.
And something else I like, because every now and then I
know I'm going to just push this machine to the limit,
you can toggle on and off the fans to absolute maximum.
I discovered this once on accident, but now that I know,
it's like function F1 or function 1, something like that.
Now that I know it's that, and it's in their quick start
guide, I love it.
Right.
Maybe it's a hot summer day here in the Pacific
Northwest, but you just need to get some work done.
It's a hot summer day in the Pacific Northwest,
and Chris Fisher and Wes Payne are turning their laptop fans
up to max.
I don't know what just happened there.
I don't know what happened there.
But speaking of laptop fans, I did
want to kind of talk about fan noise a little bit.
So I'm no Wendell Wilson, but it seems to me
that they have a somewhat kind of aggressive cooling
curve on there where I'll hear the fan kick in,
and then it kind of holds sort of low,
and then it really kicks in.
And I'll give you an example.
This is near the side of the laptop
during some benchmarking that I conducted,
just to give you kind of idea what the laptop noise is like.
It's not horrible, but it's noticeable.
And you'll hear it kind of ramps up now.
It moves quite a bit of air.
There's two fans in this thing, so you can actually
hear a little bit of fan noise, and it's just on the table,
right?
And it's not horrible, and we were playing some games,
and you could hear it over the speakers, which
were turned up all the way.
You could still hear the fans, but it wasn't that bad
for what you're getting.
You're getting incredible graphics.
So it's sort of like, what do you expect?
I suppose I would love to see something a little more
graceful in the ramp up, but at the same time,
I'm a stick it in high performance kind of guy
and just let it go.
Right, and you've got some control,
just not maybe all the control that you'd like.
So this laptop was an opportunity for me
to really experience something with some profoundly better
graphics than what I'm used to.
I've spent the last year and change on Intel graphics.
So when I was digging around in Pop OS
and seeing different options for switching graphics
and performance governor options that were in the Nome menu,
I wanted to know if this is something they invented
or if this is just something that people that
have these fancy graphics cards experience.
That is not specific to System76 products.
It's any time you have a battery show up on the system,
it assumes the system is a laptop.
And the System76 power daemon, which
is a component of Pop OS, creates that extension.
So it allows you to set the CPU into a lower power mode.
I'm sure you've seen that there's the performance mode,
there's the balance mode, and then there's
the battery saver mode.
And what those do is change the turbo settings of the CPU.
And also, there should be a graphic switch
that shows up in that same area if you have NVIDIA Optimus.
And this is on any system, not just our systems,
although many of our systems have NVIDIA and have Optimus.
It's super cool having a machine with these advanced graphics,
because it's like a whole new world of things
I get to play with.
And one of the other things that I don't often get to mess around
is really brilliant high DPI screens.
My last experience is on a really kind of small high DPI.
This is a very large screen for a laptop.
And I noticed when I went into Nome Shell display area,
there's some customization there to enable that.
Can you talk about that a little bit?
That's right.
So on the Adder, we have an OLED high DPI screen.
It's our flagship in terms of displays.
I'm typically on a Galago with a 13-inch high DPI screen.
And it is a world of difference when you move to OLED.
It's so bright.
The colors are crisp.
The contrast is incredible.
But software support is not that great right now
in upstream Nome.
So what we had to do was develop a number of items
to perform brightness control for OLED screens.
Brightness control is done in software on OLED screens.
Since there is no backlight, the brightness
of each individual pixel has to be
edited by the graphics card, essentially,
using a transform.
So we do that with X11 gamma settings.
And this works in X11 in any display environment,
in any desktop environment.
So whether you're in Nome or KDE,
we have a daemon called System76-OLED that controls
the X11 gamma settings.
In addition, Nome with Wayland, we
have integrated into Nome Settings daemon the ability
to control gamma settings in Wayland as well.
So there is Wayland support.
But since there isn't a common way of setting gamma,
it's only available in the Nome Wayland setting,
not in other Wayland sessions.
OK, that makes sense.
And how portable is some of those System76 daemons?
Say, maybe, I'm an Arch guy or an OpenSUSE guy or gal.
Am I going to have a shot of running those?
Yes, they're highly portable.
What you have to do is just go to the GitHub page for PopOS
and search for System76-OLED.
That project, you can compile.
It's standalone.
It requires the Rust compiler.
And there's already, I believe, an Arch package
for it on the AUR, which, of course, there is, right?
Of course, yes.
In addition, we hope to upstream the Nome support for this.
So we're not sure exactly what the transition will
look like for non-Nome environments.
But I do predict upstreaming the Nome support for OLED.
It will require specific DMI information for each model.
When we were doing this, we did some research and development.
We tried to figure out what other vendors were doing.
It turned out none of them were enabling backlight support
or brightness support on OLED.
So there's a Lenovo laptop that has OLED.
There's a Dell laptop that has OLED.
The Dell one actually comes with Linux out of the box from Dell.
And they simply don't enable brightness control.
And that really struck me as odd.
But it also made us think, how would this have to be?
If we're the first laptop company
to upstream something like this, how would it
have to merge into the X11 stack, into Nome,
into different desktop environments
to be as open as possible and work
across different laptop vendors?
So hopefully what we've done is generic enough
that other laptops from other vendors
can use it if they have an OLED display.
Something else that came up on your call
was some additional work for high DPI users.
There's an additional component.
So in addition to OLED support, we have a high DPI daemon.
And what that does is if you plug
in displays that have different DPIs,
it will attempt to match them using a combination of X11
scaling and changing the DPI settings.
And with Nome Shell, this works really well.
So you could plug into your adder
a low DPI display or a standard DPI display,
I guess is the way you should call it.
And it will ask if you want to render the standard DPI
display in X11 at two times its native resolution.
And that way you get really crisp graphics
on both displays without compromising
software compatibility or having to move to Wayland.
I want to thank Jeremy again for taking a few minutes there
to take my call.
And it's just so nice to be able to pick up the phone
and just say, I got a couple of questions for you.
System 76 is great.
Right, easy, straightforward.
You don't have to go through layers of bureaucracy.
And you get to find out all of the cool details there.
All the very details.
So I played around with what he was talking about there.
And this is how I eventually ended up
setting the panel to 120 hertz.
So when I set it down to 1080 to match a 1080 screen
that I was plugging in, I noticed
I had the option to set the refresh rate to 120 hertz.
And when I ran XRender, it looked
like I might be able to get other fun combinations
if I wanted to push it.
But I didn't want to push it.
I just wanted to see what that was like.
To my eye, and I'm curious to see what you think,
but to my eye it seems, did you just change it?
You're changing it right now?
To my eye, it feels like a whole other dimension.
When you and I were playing No Man's Sky, when that thing was
at 120 hertz, now granted, you take your 4K screen down
to 1080p to do this.
No Man's Sky, it looked like we were looking through a window,
not like we were looking at a screen.
You described it as it's broken that screen game barrier.
Yeah.
I mean, you were just immersed in it.
It broke me.
We were both just sitting there gawking at it, playing with it,
just moving, just looking around the world.
I will never be able to unsee that on all of the systems
I game on now.
It will never be as satisfying as gaming on this system.
Because of that graphics card in there with that screen, which
means the blacks just are truly black, and then at 120 hertz,
and you're getting like, oh, I don't know, 70,
80 frames per second.
I mean, when you're playing this thing at 1080p,
the frame rate is just ridiculous.
I mean, it's like, even at 4K in some of the games,
I was getting 70 frames a second on some of my games.
So even at 4K, I was getting great frame rates.
So when you're in 1080p at 120 hertz, I can't even describe it.
It broke my brain, and I will never be able to go back.
Now I know my next system I build,
I will have to have these components in the chain.
That's just how it's going to be.
And again, 12 cores on that system means anything you do.
I built our app pick that we're about to talk about today
on there, and it's just nuts because then I built it
on my six core Intel desktop, and that thing really
did trounce it.
So that's what I want to talk about now
is I want to talk about the actual performance
because that's what you're buying this thing for.
And I guess it depends.
If you're buying the Adder workstation
to take on, say, like a Thalia workstation
or a similar system that you would build with modern parts,
that desktop is going to beat this laptop when
you go toe to toe.
It's just how it is because it's a laptop.
However, if you are looking for something
that is beating all of the other laptops on the market,
that's where this thing really shines.
This is like, in my estimation, as good
as it kind of gets right now in supported Linux laptops
for ultimate performance.
Like a mobile workstation that does all the things
you might want or need to do on a desktop,
but you can move it around.
It's not as fast as a desktop of today,
like a really great desktop of today.
But it is as fast as a really great laptop of today
that has full Linux support.
And I want to make a couple amendments to that.
First of all, this laptop has a pretty good set of compromises.
Most laptops are a series of compromises.
This one has weighed in a couple of ways
that I am in my current phase of future laptops appreciating.
I could see myself with something like this
because of this.
It compromises portability and battery life and USB-C
charging for a really just unbelievable screen,
a extremely fast processor, and extremely competent graphics,
and a lot of storage.
You can put a lot of storage into this thing.
You can also put standard SATA SSDs in this thing.
I mean, I have an Evo in this thing right now.
But it also has, like I said, two slots, two M.2 slots.
Ready to go.
So you can put a lot of storage.
You get a lot of CPU power.
You get a lot of GPU power.
It's leaning to that power side, not as much the portability
side.
If you're doing encoding, you're doing TensorFlow,
you're doing these kind of CUDA work, these kinds of tasks,
this is so far and above and beyond buying something else
that you would slam Linux onto.
But if the one thing you need and above anything else
is just raw horsepower, a desktop's
still going to beat this thing.
That's just the reality of it.
So it really does depend on what you need.
So here's what I did.
Last night and this morning, I uploaded a few benchmarks
to openbenchmark.org.
Memory speed benchmarks, where this thing really
crushes it, by the way.
File system stressing benchmarks and graphics magic computation
benchmarks.
So you can do a one-to-one comparison with this laptop
to your laptop.
There's a command line when you go to the web page.
If you have the Ferronix benchmark installed,
there's a command line that you can
copy that will compare your system to this system,
using all of the data I have uploaded OpenBenchmark.
And you can use that to put real numbers to compare
what kind of difference you would see in your workloads
and maybe quantify the value.
So if you're on the fence and you can't really decide,
use that tool, because it's a fantastic resource.
But I'll note, as you've sat here now, because we kind of
mentioned the fan noise.
As you sat here just using it, running, I presume,
Chrome or Firefox, maybe?
Yeah, I got Chrome going here.
Nice, because I didn't put Chrome on there.
No, I installed Chrome.
It hasn't made a peep.
There's been zero fan noise.
No, it's been totally fine.
I got NetData going on here, too, and you can tell.
It's just, you know.
You're putting NetData on there?
Well, yeah, and it looks beautiful.
So if you're not pushing it, the noise profile
is surprisingly low.
In fact, I think it's probably one
of the quietest large system 76 laptops I've ever used.
And when you push it, it doesn't seem unreasonable,
because it's got to have cooling in there,
because you've got a big old GPU and you've got a big old CPU.
Like, you've got to cool that.
And that's the compromise you make on this kind of thing.
And it's not like a really harsh noise.
It's kind of a white noise fan noise.
No, it wasn't offensive at all.
Overall, I'm really impressed with this.
The keyboard is pretty good.
It's not my favorite keyboard.
It's not a ThinkPad keyboard, but it's better than a MacBook.
Oh, but by far and away, yes.
Trackpad is bigger than they typically have been.
It's smooth.
It's not my favorite trackpad.
It's not better than a MacBook, but it's
better than historically we've gotten on laptops.
It's not bad.
I mean, I jumped on it today, and it hasn't been a big issue.
I actually, I really kind of got my,
with the exception of when I'm gaming,
I've been using the trackpad for the entire review,
which at times was hard.
But I'm just not a big trackpad guy to begin with.
The I.O. is fantastic on this thing.
And when you match it with the performance,
it's pretty killer.
And throughout, I was like, can I
do this on a different distribution?
I actually thought, just as a side tangent,
I actually thought I'd blow Pop!
OS away and put Fedora on there, or Manjaro.
Sure.
Never bothered.
I was so impressed with the entire process
from first time setup, where it reinstalls and encrypts
the drive, to the pop shop, the extensions that they've
chosen to install, the theme.
All of it was so damn nice.
And then you combine a really fast gnome shell
at 120 hertz, where the animations are butter.
Even at 4K, when the thing's at 60 hertz, it still looks great.
I was never compelled to remove Pop!
Partly because for a large portion of my usage,
I was mostly offline.
So I really couldn't download a distro,
and so I kind of had to stick with it.
But once I got rolling, I was like, this is pretty great.
I mean, just having Linux already on it,
then you can just sit down and get to work.
And I also can now better appreciate
Pop! OS's role in System76's mission,
using it on their hardware, where they've got just
some rough edges smoothed, like moving between GPUs,
and hooking up the external display,
and these little things that you could get to on any distro,
probably, but they've already done it for you.
And now I get it.
Oh, they're really actually doing
quite a bit of customizations.
They've done their own installer.
They have their own shop.
They are making these extensions pre-installed by default
that they think make their experience better.
And I agree.
In fact, there was not a single one I went in there
and pulled out.
And I'll be the first to be like, nope.
And opened that out of there, did not do any of that with these.
The entire through-and-through process
felt like it was very cohesive.
And I want to remind everybody that I've
bought a lot of System76 hardware over the years.
I was one of their very first customers.
So I've experienced different levels of integration
with the operating system.
And in, I don't know, what is this, 12 years
that I've tried out System76 hardware?
I don't know what.
It might be more than that.
This is clearly the most integrated experience
I've ever seen.
And my instincts on it are, I don't know,
but my instincts on it is they're still
just getting really started.
There are only a couple of releases into this.
And that's why, through the entire review,
I was fishing to see is it dependent on Pop!
OS?
Because I think that's a deal breaker for some
of our audience.
Sure, right.
And each time, the answer was no.
Sometimes, well, you might have to build it.
Right.
You might have to do a little customization yourself
that we've done for you.
But it's all out there in the open, right?
And that's one thing we love about System76.
It's pretty nice.
Pretty good rig.
You just got to make the decision for yourself.
So that's why I encourage you to try out the Ferronix test
suite, it's absolutely free.
And that's the tool that Michael Larable uses
for the Ferronix website.
And compare it to the ones I did.
I uploaded the ones that I thought were more relevant.
I tried a few.
Some of them didn't execute properly.
Some of it was a bit of a mixed bag.
But one of the fun things is that comparison.
Because it'll generate all the charts for you.
I love that.
So geeky.
And we'll have more information in the show notes
if you would like it.
Mr. Westpain, I've got a very fun app pick for you this week.
I know you need another terminal, right?
Like you need another shell, I guess.
But Starship is a minimal and fast shell prompt that is,
get ready for it, written in Rust.
Yep.
Yeah.
And because of that, I saw you sneak this into the show notes.
And I've got it installed right here.
Yeah.
Isn't it cool?
It is.
So did you use Cargo on that system?
No, they've also got some release binaries
that you can go download and just stick it
on your path somewhere.
Yeah.
Then you've got to just add a little thing that starts it up
in your Bash RC.
They've got instructions.
Or maybe you're doing CSH or Phish or whatever.
And it's much like it's a Powerline style
prompt that you might be familiar with from other things.
But it's just fast.
It's fast and has a nice, what looks
like a nice little Tomwell configuration file
if you want to customize it a little more.
Yes.
You will have to install the Powerline font first,
which is how to do that is linked in the guide
that we have in the show notes.
It is just fun and cool.
I just thought it'd be.
You know, there's nice little things
like indications of return code status
or how long the last command took
and how long it executed right there for you out of the box.
I do like that.
I'm a numbers guy with that kind of stuff.
Yeah, there's lots of little configuration options,
which are really cool, too, like ways
to display the current prompt order and configuration
on how your path should look, all those little things
that you can really tweak to make the shell feel
like it's perfect.
It's nice that it's fast, too, because some of those prompts,
once you've got a lot of options,
they can get kind of sluggish.
And it's always annoying when you open up a terminal
and it takes any time at all to be ready for you.
I'll tell you my motivation.
I wonder what you think of this.
Oh, that's cheese, too.
I have been thinking about becoming
one of those guys that's like, rah, rah, use the terminal.
Noobs should use the terminal.
Yeah, come join me, man.
Because it's like the universal interface
to all Linux distributions.
You can message people commands that they can run.
But also, it's like the common denominator.
Your system can be really, really hosed.
And if you're somewhat comfortable on the command line,
you have a chance of getting it going again.
Jeez, you think I'm crazy?
You think I'm going to scare off all the noobs if I
tell them to use the command line?
No, I mean, I feel that, yeah, it
can be intimidating to jump in the command line initially
and try and figure it out yourself.
I know it was for me whenever I first
started experimenting with Linux back in the 90s.
But it's really one of those things now where
you can jump right in.
You shouldn't be scared to get in there on the terminal
and do a little bit of work.
And like you said, it can really save you a lot of grief
if you know enough to get in and start looking at what's
going on in the bootloader.
It can instantly lead you down a path
to troubleshoot for yourself.
So here's the other reason.
Inevitably, it always happens.
You're browsing the web for a guide.
You eventually come across something
that says, copy this command and paste it in your terminal.
Now, if you have no idea what any of these commands do,
you've got no idea if that's a good idea or a bad idea.
You can't evaluate it.
How are you supposed to be a responsible command line
user if you don't use it from time to time?
And then you eventually will come across an opportunity
where somebody says, pop open the old terminal
and sudo w get this bash script.
I mean, we've all seen that.
I like your idea here, though, because I don't
think it needs to replace it.
We should still try to get great graphical user
interfaces out there, right?
But for some people, that can be better for some interfaces,
for some commands, for some tasks on the system.
And we happen to have a great terminal
environment on these Linux operating systems.
We should take advantage of it.
That's just it.
There's some really good tools in there that aren't hard to use.
They're just different to use.
One example, too, and I mentioned this last week,
with the 2-in-1 laptop that I was messing with,
it has an accelerometer and a gyroscope in it.
And so whenever the machine boots up,
the login screen would be rotated and upside down.
I would still be able to log in.
And as soon as I launched a terminal,
I could run XRender, TACO, normal, and boom.
Everything's right itself.
I'm good.
I can go back and blacklist kernel modules, whatever
I need to do from there.
And then I'm done, right?
Yeah.
And yeah, I mean, it took a couple of commands
on the command line to do that, because even the GNOME
rotation lock wouldn't work in that instance.
So you can get yourself out of some really tricky situations
by just knowing a few commands and not
being intimidated by the terminal, for sure.
Back in my day, you had to write your own Xconfig.
That's what I say.
Get out of here, old man.
XF86 config, baby.
All right, listen, there's a few bits of housekeeping
that we should probably wrap on, too.
We should include these in the actual housekeeping.
Too late.
You can get every single episode at linuxunplugged.com
slash subscribe, show notes for everything
we talked about, linuxunplugged.com slash 320.
We're on Twitter, at linuxunplugged.
We do this show live on Tuesdays.
Every week.
Every Tuesday.
Over at jblive.tv, converted over
at jupiterbroadcasting.com slash calendar.
I'm at Chris Ellis.
He's at Westpane.
Go check out techsnap.systems.
And we'll see you next Tuesday.
I'm Chris Ellis, and I'll see you next week.
CentOS Stream, CentOS Stream, CentOS Stream.
Which one do you like better?
I kind of like CentOS.
CentOS.
Yeah, I think I find myself using multiple ones.
I mean, mostly CentOS and CentOS.
But it's so it's hard to keep that straight.
I fluctuate on pronunciations.
Thankfully, everyone knows what you're talking about either way.
I personally use CentOS, but a lot of people around me
have been using the word CentOS, and it's
bled into the way I refer to it.
I'm having that happen with GNOME Shell.
The reverse of it.
Yes.
Like at some point, I was like, I'm going to be stubborn.
I'm just going to call it GNOME.
But then now everybody around me has been calling it GNOME,
and now I'm GNOMing it up over here.
Tell you what, on the GNOME desktop and the GNOME Shell.
One of the things about the adder
that I think is really interesting too
is that there is the full gigabit ethernet there.
So you have all this power, and you actually
have the bandwidth to push these, I don't know,
heavy graphics projects through video rendering,
whatever you might be doing.
Also, you got DisplayPort, HDMI, and you
can do video over one of the USB-C ports.
So there's all of the ways to get screens on this thing.
Right.
If you ever show up to a conference and they're like,
you're going to need a DisplayPort, you're like, dude,
I got it.
I got it.
I got it, yeah.
I was like, I wish I had enough screens
to try to use up all the ports on this thing
just to go at it for a little bit.
But they do not grow on trees around here, unfortunately.
But I love that those ports are on the back.
Love that.
You got a USB on the back.
You got your ethernet.
You got your display adapters and your power
all on the back behind the screen.
So you never have to see the cables.
They're never on the side.
And if you're Bluetooth mousing it,
you're basically good to go.
It's pretty nice.
Yeah, that's great.
But I don't know.
I am very giddy about CentOS 8 and CentOS stream
because starting about Fedora 28,
I started really enjoying Fedora.
And so it's essentially time-capsuled
what has been one of my favorite releases of Fedora.
And I've got all these projects right now.
I've got these Raspberry Pi.
So I'm going to set up another Raspberry
Pi in a few weeks.
And I'm thinking, well, do I maybe try out CentOS now?
Yeah, I think you do.
I think you do, bud.
But do I do CentOS 8?
Do I do CentOS stream?
Definitely stream.
You think so?
You start with 8, and then you can go to stream
whenever the hell you want.
OK, I just got to process that for a second.
That's really cool.
It does make sense, too, right?
I mean, with the Rel8 transition and focus
on containers, which, I mean, you're also
running a whole bunch of containers.
So it's ready for you.
It's important to realize that the CentOS stream is not
fundamentally different than CentOS 8 right now.
It is just essentially, at this point,
going to eventually become CentOS 8.1 or CentOS 8.2.
So it's just a little bit of the future
with maybe some new stuff that Red Hat has been cooking
on backporting from Fedora into the Rel tree.
That seems like the right gearing for a home server.
It does sound nice, right.
Because you don't need crazy stability,
but you also don't need a whole bunch of crazy new changes.
Yeah.
Oh, boy.
One really cool thing that I noticed today
researching all this and looking at it,
the 8 stream has a newer kernel than what's
in the Rel8.1 beta right now, which is awesome.
Yeah, because right now, CentOS stream
is actually based on 8.2.
Of course.
Right.
That's how it's going to be.
Well, just the kernel right now, the rest of the stuff
matches 8.0.
Yeah, they say they'll document it on the wiki.
We shall see.
I'm going to be watching this pretty closely.
I honestly didn't think Rel would get first to streaming.
I mean, I appreciate it's not Rel, or to rolling.
I thought, honestly, we'd see an Ubuntu rolling first.
It doesn't make sense for an Ubuntu rolling
to really exist, because what is Ubuntu rolling but just
a rebuild of Debian most of the time?
The way that the Ubuntu development process starts
from is they are mass importing Debian packages
and just rebuilding it with the Ubuntu branding.
They don't make changes until they freeze the tree
and stop importing.
I feel like I'm much more comfortable running
an Ubuntu LTS on a server than a current release of Debian.
And I know that sounds crazy to some people.
And I am running Debian on a server.
I acknowledge that.
But to me, an Ubuntu LTS feels more like a Fedora,
and Ubuntu feels more like a Rel in LTS.
And I think they don't necessarily
need a rolling, because they've kind of nailed the update
methodology where they backport the driver enablement
stack to the LTS release.
This just sort of keeps that LTS relevant and ticking.
Debian default doesn't have that live patch ability either
that you do get with Ubuntu, because I'm the same way.
I have a Debian, Armbian based server
running on a single board computer,
but I also have stuff in the cloud running LTS.
Also, another thing that I don't know
if anybody picked up on in the last couple of months or so,
but now Red Hat is slowly working through,
including kernel live patching in the basic subscriptions
for Rel.
It's no longer a separate component.
I don't think we will see that trickle down into CentOS
yet, because the amount of effort
it actually takes to make live patches that work
is kind of ridiculous.
Hey, Neil, I think you mean CentOS.
Oh, I mean CentOS.
