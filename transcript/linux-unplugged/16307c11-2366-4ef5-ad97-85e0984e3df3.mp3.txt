This is Linux Unplugged Episode 29 for February 25th, 2014.
Welcome to Linux Unplugged, your weekly Linux talk show that just put it all out there this week.
My name is Chris.
My name is Matt.
Hey there, Matt. I'm totally pumped up. We've got a special guest in studio right now. Hey there, Chase.
Hey, guys.
Hey, Chase.
Hey, how's it going?
I'm glad you're here today.
Hey, you know it's a beautiful day.
It really is.
And the best time to be doing a show is inside when it's a nice day.
Yeah. Well, at least we have the window cracked so we can get like some sort of fresh air.
Have I told you how much I love this effin' jam?
This song is Mr. Jankies.
Ronald Jankies is the man.
I know. That's why I have him on my boobs today.
That's not the only reason. I mean, we're going to be talking about how to Linux and brainstorming with our mumble room.
You know, I figured if we're doing a show about Linux, why not have some of the preparation and some of the thought that goes into it
and some of the logic and reasoning that goes into making a show out in the open too.
So essentially...
Wait, no. Chris.
Our source is going to be out there.
Chris, not a good idea.
No?
No, because then you're going to be spreading the secrets of the secret sauce.
That's true.
And then what's going to happen, Chris, is you're going to get these copycats.
They're going to try to do...
Chase, Chase, I've got to stop you right there.
I don't know. I don't know.
The secret sauce isn't in the mechanics.
Wait, what?
It's in the content.
Oh, yeah. That's right.
I know. I know.
I forgot about that.
Sometimes I forget that too.
What, content?
Yeah. Like this week.
Content's king.
Actually, I'm really actually kind of excited because we just got our first test challenge coin in.
Oh, my God. I felt it in my hands by the way.
I touched it.
I touched it.
Yeah.
How did it feel, Chase?
How did it feel?
It was hard, yet smooth, and it felt good to the touch.
No, I'm talking about the coin.
How did the coin feel?
Oh, the coin was great.
Yeah.
Okay.
Thank you very much.
So, if you guys didn't know, I don't know, maybe you live under a rock.
That's okay.
I won't hold it against you.
I just...
Just a little judgey.
No, I mean this coin, by the way, the picture doesn't...
The coin comes with every last shirt.
It does.
Every last 300 shirts.
By the way, there's one thing that you're not seeing in this picture.
What's that?
The other side.
The other side.
Well, we're still perfecting the other side, but we're planning right now to have the Jupiter
broadcasting logo on the other side.
It's cooler than the other side of the pillow.
Wow.
That's true though.
I do agree with you.
So, if you've gone over to teespring.com slash last 300 and ordered a shirt, you'll have
one of those there coins very soon.
Each shirt comes with a coin until we get to too many shirts.
How much time is left on those shirts, Chris?
Like two weeks.
I'll go check right now.
I was going to say, this is one of those things, you guys.
Like 13 days, I think.
Remember, there's not going to be another one of these shirts.
Nope.
This is it right here.
This is a limited edition.
One week, five days.
We've sold 673.
We have a goal of 754 to unlock them.
Now, here's the thing.
The goal will be reached.
You don't want to be left out.
You think it will?
Oh, yeah.
Yeah, I think so at this point.
You don't want to be left out because if you're left out...
You're not going to get a coin for one thing.
You won't get a coin.
Or a shirt.
Or a shirt.
Yeah.
And not only that, you don't want to be that guy at Linux Fest Northwest.
Oh.
If you're coming out.
Because here's the thing.
Or maybe just in public.
Here's what a challenge...
Do you guys know what a challenge coin is all about?
Yeah.
I'm going to...
Tell me right now.
Go ahead.
All right.
So let's say, for example, you're at a nice establishment to have some drinks.
Let's say like a swanky beer joint where I walk in.
There's wood paneling everywhere pictured.
Sicily, 1982.
You've got dark mood lights, smoke in the atmosphere.
I sit down with a gruff look on my face.
You have former baristas that are now working the bar.
Right.
Okay.
All right.
I'm picturing it right now.
All right.
You got a nice picture in your head?
Yeah, it's great.
Looks comfy.
All right.
So some of your Linux buddies, they come in from the show.
Right.
You know, hey, they had a long day walking the floor.
But how do they know it's really me?
Well, they know the beard.
Well, I mean, what if I shaved?
Well, you're wearing the shirt.
And my hair is messed up.
You're wearing the shirt first off.
Okay.
That'd be a clue.
So they walk over to you.
They say, hey, Chris.
And you're like, hey, guys.
Hey.
And you reach into your pocket.
And then you pull it out, the coin, and then you put it down and you slap it on the table.
What if you're that one guy that doesn't have the coin?
You know what happens to you?
Oh, it's embarrassing.
Do you know what happens to you?
No.
You're buying the drinks for the whole group.
That's what the challenge is.
The challenge is you need to have the coin.
I see.
So if I get a Jupiter broadcasting last 300 shirt and a challenge card, I'm actually saving
money.
You're saving money.
Gotcha.
It is a benefit.
It is one of those things.
Forget the healthcare.
We're going to start marketing, Chase.
That'd been great.
You're welcome.
So coming up on the show today, not only are we going to talk about how to Linux, but I
did an interview yesterday with Brendan, who is working on a new distro called Clementine
OS.
It's based on PerOS.
And if you might remember, PerOS was shut down after it was bought by another company,
shut down.
And then Clementine OS was sort of like the phoenix rising out of the ashes of PerOS.
And then it got into some legal trouble.
A lot of speculation, including was Apple behind it, was floating around the web.
We didn't cover it because we didn't know the whole story, but we got a chance to talk
with one of the guys behind that whole thing, so we're going to talk about that.
What I got from the interview, when I walked away from it, was like, oh, this is a warning
now that if you're thinking about getting into making your own distribution, there's
a whole new class of stuff you have to think about because of the size of the overall Linux
ecosystem.
I think, if nothing else, walking away from this interview, that's what I took with me,
so we'll play that in a little bit.
Now, as is perdition, gentlemen, we should start with our feedback.
There is a great clip that was sent into the show by Jacob.
We were recently talking on last and on Unplugged about the high amount of commercial development
that is now behind the Linux kernel, and that only 20% of Linux kernel development is done
by quote-unquote volunteers.
Well, Jacob linked us to a great talk held by Greg Kh.
Now, if you're not familiar with Greg Kh, not only does his last name initial sound
like Colonel Hacker, but he's a long-time Colonel Hacker, so it works out really well.
He was holding a talk recently, and he talked about this phenomenon where a lot of commercial
companies are behind Linux development, and I'll play it because Jacob linked us right
to it.
Who's doing the work?
Other people reported 80% of the work done on the Linux kernel is done by companies,
paid contributions.
Some people think it's a bad thing.
I think it's really good that 20% is done by people who aren't paid.
This is their hobby.
The problem with that 20% is if you start doing patches, you will get hired, and that
will be your job.
Hey-oh.
This used to be my hobby.
Now I have no hobby.
Other kernel developers have known to burn out and start other hobbies, and then they
turn that into a company, and then they go back to kernel development.
It's happened a lot.
I think that's a great point.
That's essentially the point he makes there is if you are a hobbyist and you're doing
this and you're actually good at it and you're working at that level, at the Linux kernel
level with guys like Greg and Linus Torvalds, it's likely not going to be a hobby for very
long.
True.
That's a big part of why there is a small amount of hobby developers on there because,
like he said, it makes sense too.
You see it in a lot of things.
Whenever somebody starts as a hobby, I started podcasting as a hobby, and now I do it as
my day job.
It is true in a sense too that I don't really have much of a hobby anymore.
That happens to you though.
Yeah.
It's just the way of things.
But great point, and a big thank you to Jacob for not only finding that talk but for linking
us right to that time so we could share that with the rest of the audience.
Okay.
So Roy writes in.
He says, I've got some ideas on why Linux is having troubles in the enterprise, which
I didn't really feel like this is a big problem, but he's talking about specifically on the
desktop.
He's not talking about on the server.
He says, hey Chris and Matt assembled a steam mumble room attendees and of course Chase.
Oh yeah.
Yeah.
I see that he said that.
Yeah.
I wanted to comment about a topic you guys discussed in last week's Linux Unplugged about
what could possibly be the reason that the Linux desktop did not get into the enterprise
yet.
So the obvious reason is the business application support, but web-based applications tend to
allow enterprises to provide the business applications via all the browsers.
However, the most critical business applications that business enterprise use, Linux has failed
to deliver is a decent mail client, quote unquote, that works with exchange.
This is the first entry point to the enterprise.
We need a mail client that will be able to sync with exchange.
Let's take mobile mail apps.
The only reason mobile mail is getting into the enterprise is that the mail client is
able to sync up with exchange.
And I would agree that was a critical feature for Android and iOS.
He goes on to say for any other business application, even a native one, there's a decent solution
like Zen desktop, but if I can't get my own mail client to run natively on my Linux desktop,
what's the point of the Linux desktop at all?
Keep up the good work.
Roy.
Boy, well, you know, there's two things to consider here.
First of all, no one's, you know, the business you're working with using exchange, you can
use the web client.
Actually, if you use it within Firefox, it's actually, even under Linux, it's actually
quite usable.
And the later versions, too.
That's true.
Yeah, that's true.
Yeah, exactly.
The later versions.
Now, older versions of exchange, it's not pretty, but it does work.
And that is to use evolution and the exchange connector, and really emphasizing it's not
pretty and really emphasizing older versions because it's definitely pretty hit and miss.
Not really a great solution, which brings me back to going back to the web client.
Honestly, you know, if you're going to be in an exchange area, I mean, I don't know.
I mean, I guess you could run Outlook in like a VM or something.
It's just, it's messy.
Yeah, or crossover or something.
Yeah.
Because I mean, I work for Microsoft shop and I use exchange all the time in a browser.
It's not really that bad.
Chase, have you, when you worked at Nielsen, did they use exchange there?
Were you an Outlook user?
Yeah, yeah.
It was heavily embedded and we also had to use them.
It was so embedded that we used it on our BlackBerrys and then onto the iPhone.
Yeah.
I mean, it's just like, it's so, so ugly.
And I wonder, is that going to be the case for, you look at like Google apps and Zimbra
Mail and a lot of these things.
To me, exchange seems to be the solution for a lot of people that want a local mail system.
But as a lot of people go with a hosted mail system, exchange just seems like one of the
many options.
But when you abstract away the actual hardware and you're not managing the software and you're
only interfacing it with some sort of remote sync protocol, it doesn't have to be exchange
anymore.
No, it doesn't.
No, there's many different options out there now.
So it might not be something that in the long run matters as much, but it definitely exists
today.
And I could see like, if you have to emulate one of the programs you use the most, it is
kind of silly to then use Linux if you're stuck with that.
So I see what Roy's saying.
I don't know.
I think what we can identify, especially through all the feedback that we've gotten is there's
a lot of little things, or in some cases they're not so little, but it's not one thing.
It's not Outlook.
It's not AutoCAD.
It's not any one particular thing that's holding it back.
Everybody has something that they've built around the Windows platform that they just
now have as an expectation of doing business.
But all of those things eventually in technology sunset.
And so Linux will be there.
That's true.
Although it's really tough to get through to a Microsoft shop, I found that it's very
challenging to try and actually get through that, because it's like, well, we could go
that way, but we know what to expect if we go ahead and suck it up and pay the licensing.
That's the problem.
Well, and we've got these guys here, and they know how to do it already.
If we ever want to fire them because we don't want to pay them enough, we can just hire
some other Microsoft guy to come in here and run this for us.
And it's cheaper to pay the licensing and the retraining, our existing folks.
I think that's a lot of it too.
Yeah.
I think that's part of the momentum equation that Windows has on the desktop and server
and enterprise is that staff momentum.
You have staff training.
Yeah.
But you know what?
But to be fair here, here I am going to be doing a how-to Linux show.
I don't know.
Maybe I'm the one of the minority who has a freaking open mind about becoming retrained
and becoming cross-trained and learning more about more operating systems.
There are a lot of Windows guys out there who are just so focused in on Windows, it's
like, you know, F everything else on the Windows guy.
I'm like, whatever happened to being educated and learning about everything else?
And not to offend everybody in the audience, but I also see the same thing happen with
Cisco guys where they get Cisco trained and then they're so focused on Cisco they can't
see outside of the Cisco product space.
And so everything's a Cisco brand, everything's a Cisco solution, a Cisco implementation.
And there is something to becoming an expert at one thing and really deeply understanding
it.
But at the same time, I feel like it's a little better if you can zoom out a little bit and
generalize a little more and sort of see new trends and sort of take advantage of new technologies.
It should be, honestly, about using the best tool for the job.
Right.
There you go.
Regardless of operating system and software package.
I completely agree.
Speaking of the best tool for the job, this would be a great spot to mention our sponsor
this week, DigitalOcean.
Go over to DigitalOcean.com and take advantage of our promo code LINUXUNPLUGEDFEBRUARY.
It's only going to be working for a little bit longer.
February is almost over.
Actually, it's over Friday.
Yeah.
That's not true.
They'll keep it working for you.
DigitalOcean loves you guys.
But seriously, if you don't know about DigitalOcean, they're a simple cloud hosting provider dedicated
to offering the most intuitive and easy way to spin up a cloud server.
Users can create a cloud server in 55 seconds, although our community has gotten that down
to 44 seconds.
And pricing plans start at only $5 a month for, get ready for this Chase, 512 megabytes
of RAM.
What?
A 20 gigabyte SSD.
No.
A CPU.
And this is the part I love.
This is the transfer.
Jeez, man.
I know.
It's just a fixed cost.
You know exactly what you're going to get.
You know exactly what your bill's going to be.
The value is right there.
It's super simple.
And by the way, DigitalOcean also has hourly rates if you want to test an application.
I recently put up a Pastebin competitor on there.
I've got a BitTorrent sync for all our unfiltered supporter shows.
I got a calendar I'm throwing up on there.
And I've been getting emails from folks in the audience telling me what they're using
it for.
I'm getting all kinds of great ideas.
People are throwing up their XMPP server on there.
Another guy's got his personal resume up there.
It's kind of like an interactive website.
There's tons of great things you can do at DigitalOcean because they have this droplet
system where you can deploy a droplet of, like, you can take an Ubuntu 1204 machine
with Apache and MySQL ready to go or an Archbox or a Centbox or a Fedora box with Docker pre-installed
and you can load up your own Docker images that you've built locally on your own machine.
It's really great.
And if you use that promo code Linux Unplugged February, they'll give you a $10 credit so
you can try out that $5 rig for two months.
DigitalOcean has data center locations in New York, San Francisco, Amsterdam, and Singapore.
Their interface is simple.
Their control panel is intuitive.
And power users can replicate that control panel with their straightforward API.
So go use the promo code Linux Unplugged February over at DigitalOcean.com.
See what I've been talking about.
It's so cool to see Linux technologies be utilized by a company like this.
They pair it with tier one bandwidth.
They put it on top of some SSDs and they really let KVM rip.
They got them super tuned in.
It's really great.
It's an awesome experience and a super great forward, super easy to manage.
DigitalOcean.com, Linux Unplugged February.
Go try them out.
Get a $5 rig for two months.
It's a great training experience too because this imaging system lets you back it up and
if you screw something up, you can restore right back to it just like you could with
like VirtualBox or something.
Only this is a real machine up in the cloud that you can throw things at, test in production.
It's awesome.
DigitalOcean.com, Linux Unplugged February and a big thank you to DigitalOcean for sponsoring
Linux Unplugged.
So speaking of transitionary technologies, Dwayne wrote in with a response to something
our guest last week, Michael Hall said, where he wrote and he says, hi Chris, Matt and Chase.
I really enjoyed episode 20.
What's that say right there?
Wait, it does say Chase.
It does say Chase.
It does say Chase.
Yes.
It's there.
He says, he said he really enjoyed episode 28.
It was eye-opening.
Michael made a point about the major players not having identical versions of their operating
systems on both tablet, mobile or the desktop except for what Ubuntu is trying to do.
This is about to change quickly for Android.
I recently downloaded Android x86 and it runs well on my laptop, which is a Dell Inspiron
M5010 with an AMD 2 gigahertz triple core processor, 4 gigabytes of RAM and a 500 gigabyte
hard drive and an AMD 4200 graphics.
He says, with more work, I can see it as a real quick OS to go to for anybody with an
Intel or AMD class processor with an NVIDIA ATI or Intel graphics.
As long as you have a Gmail account, you're good to go.
And it's at, we've talked about it before on last, but you can find it at android-x86.org.
Matt or Chase, have either one of you played with the Android x86 project where you can
actually download like an ISO?
No, I have not.
No.
Very interesting.
I've downloaded it, but I never actually installed it because I was toying with the idea, but
I found that there's certain limitations to it as far as what you can do with it.
Yeah.
It's something I want to dive into.
Yeah.
I've played with it a little bit and you know, Android is just really not meant for a desktop.
I could see it maybe with like a skin.
Well, it was tried before.
It wasn't, didn't like Motorola have their, what was it, Atrix, right?
Yep, yep.
Where you could dock it and it becomes a computer and a phone all in one.
They heavily modified the UI in that use case.
Yes, they did.
And so, you know, and this is the sort of the secret sauce to the Ubuntu Touch approach
is this UI transmogrification when you switch into the different use cases.
Look it up, kids.
You got the transmogrifier that sits in there, it's a kernel extension.
You got to compile it or use DKMS if you just want to, you know, just be able to update
your kernel on the go.
It'll just rebuild your module for you automatically.
And then when you plug it into your TV or your laptop or your whatever it is, it just
transmogrifies.
Right?
Do I have that right?
Transmogrify.
Yeah.
I got that right.
Yeah.
And I think that's a little bit better of a solution, but we'll see how far they can
close that gap.
If they could, what the question will be is our desktop, this is my main concern and we'll
see, our desktop applications in that perfect world going to live in this uncanny valley.
Where they're not quite a desktop app, but they're not quite a mobile app and they're
just not quite there yet and it's kind of hard to really put your finger on what's not
quite there about it yet, but you can just kind of feel it.
We'll see if that ends up happening.
If they can avoid that scenario, I'm looking forward to it.
But Android X86, I think for that to take off, Google's not going to make it happen.
It's going to take a company that could really own that and unfortunately have to put some
kind of UI on top of it.
And then would you even get Google to stamp it with their Google mobile services?
Never going to happen.
Yeah.
I wouldn't think so.
No.
Not unless they got some really big player who is really like buddy-buddy with Google.
Yeah.
All right.
Well, why don't we do a little valve update?
Oh, yes.
First thing is not that the Unfilter Show.
Chase, look what you're making me say now.
See, this is what happens when you only have me here for Unfilter.
Oh, now look, I'm getting crap.
I'm getting crap.
No.
I was going to say we don't try to break news on Unplugged, but we are going to break a
little news today because Portal 2 has just come out.
Portal 2 beta for Linux was released today.
You can go check it out.
And on that whole valve vein, Anno wrote in, he said, I'd like to comment on the VAC topic
from last week's show.
Now, we covered this last week, this little DNS hashing, scanning that Valve was doing,
trying to catch people cheating Valve games.
He says, I manage a medium-sized game server and we have been fighting hackers and cheaters
for years with a VAC-like system.
These cheats usually work at a low level by injecting their code into the game memory
so you either have to combat them at this level or detect them higher up and target
their specific behavior.
In this case, it was DNS entries.
The inherent problem of all the anti-cheat systems is you can't open source them or disclose
too much information about them and what they actually do because hackers would use this
information to implement a workaround.
If Valve said they'd check your DNS cache loud and clear, hackers would only need a
few days to change their cheats and not two weeks.
Instead, you'd probably agreed to this in the fine print you signed up when you agreed
to the Steam Terms of Service.
At the end of the day, you have to ask yourself whether you'd rather play games with cheaters
or allow Valve to scan your computer in questionable ways.
Personally, I'm completely fine with this because playing against cheaters frustrates
me to no end.
Best regards, Anno.
Yeah, I don't quite know where to fall down.
I'm not comfortable with Valve scanning my DNS cache.
I'm not either.
I mean, but at the same time, if you're doing anything kind of weird, you should probably
use a different computer.
Just put that out there.
Yeah, I mean, I'm not worried about so much that.
I just don't like the principle of it.
It feels like an invasion of privacy.
But what is the solution here, though?
I mean, what is it?
A dedicated computer for Valve.
I mean, really.
I mean, I think that's...
Sandboxing?
Yeah, sandboxing would be okay.
I don't know.
Maybe.
I mean, it feels like this is actually a limitation in the underlying operating systems privilege
model and not maybe necessarily...
And the only solution for companies like Valve is to come up with their own ways to sort
of circumvent those limitations.
I don't know.
I understand this is what they have to do.
And maybe this is just the trade-off gamers have to make is, okay, my games are going
to be wrapped up in DRM.
Okay, I can't.
I don't quite own them.
They're actually stored in some sort of cloud storage that lets me install them when I want
to, assuming my account hasn't been closed.
Okay, I'll buy off on those things.
I can accept those limitations.
And now you're asking me to also accept the idea that, well, this last week it was DNS
cache scanning, but how long until it's all the processes running on my box?
Or, well, now we need to watch your network packets because now they're being really tricky.
And yeah, where did we draw the line?
Because it seems like reading DNS cache, I realized they were just hashing it and then
sending a hash to Valve.
I get that.
But where do we start saying, okay, that's too far?
If we're okay with the DNS hashing, what are we not okay with?
Screen grabs?
Just straight up screen grabs on my machine?
Do you need to monitor my machine when I'm not playing games so that way you can catch
me installing the cheat before I ever run the game?
Is that what we're going to come to?
Well, you know, like Punk Buster, a great example is that actually takes screenshots
of gameplay.
Yeah.
Yeah, so that kind of situation has already been happening to gamers for a long period
of time.
Well, okay, so at what point do they need to analyze every setup.exe that runs on a
Windows box?
Well, they do that.
They actually, Punk Buster actually does monitor what you're running in the background.
How?
Ah, it's so creepy.
Yeah, I think it's been doing that for a long time, hasn't it?
It's been doing it a long time.
You know what I say to that?
It's a comeback.
Go ahead.
Get it out of here.
That's what I say to that.
Yeah.
That is, that is no good.
You know, and see, it's for myself, it's the same way.
It's like, okay, TSA kind of thing.
I don't like TSA.
I don't fly.
I mean, there's nothing I can do about it at this point.
I think it's the same thing here.
I can either not use the game or, you know, or I can set up a dedicated box.
Do what I do, Matt.
I just get the $50 fast pass and TSA does not refuse.
Does Valve offer a $50 fast pass?
No, unfortunately, they don't.
Right.
Yeah, there you go.
Enhanced driver's license.
I just wish they could be, I realize they can't because of the nature of what they're
trying to combat.
I just wish they could be more transparent about what they're doing.
But yeah, the transparency is the key that, you know, people need to know exactly what
they're doing.
But then again, it goes back to the whole thing.
If you give out too much information, then the hackers know what to do.
Right.
And it is kind of a marketing buzzkill.
Say, hey, this is great, by the way, we're totally scanning your stuff.
Yeah, that's not a great bullet point, is it?
No.
No, it really isn't.
I mean, from a marketer's point of view, that would just suck.
You know, the other thing, like Danny Tech is saying, is this is why things like the
Humble Bundle and this is why it's really important that Valve doesn't own this entire
thing because even though we like them today, when they have SteamOS, they can go even further
than they have in the past.
And you know, it's good to have alternative options.
Yeah.
Yeah, this is true.
This is true.
All right.
Well, that concludes our Valve update.
Yes.
I just wanted to know.
I got to go.
I got to go play some Half-Life real quick.
Yeah.
I'll be back later.
Yeah, it does kind of make me want to play a game when I hear it.
All right.
Well, before we get to the how-to Linux discussion, why don't we play my interview with Brendan,
who is working on ClementineOS, which is kind of on pause right now.
So we'll play that and then we'll come back.
So I'll have links to this too in the show notes if you guys didn't catch all of the
drama that went on.
But if you guys remember, this happened about 30 days ago.
The developer of PairOS posted on Google Plus that the Mac-like distribution had been sold
to another company and as part of that sale could no longer be downloaded.
So then from that, the ClementineOS project was started.
Brendan was an enthusiast and an advocate for the distribution.
He wanted to sort of continue it in his own way with some modifications to make it better.
And he received a letter from an American company that forced him to abandon the project.
He did later say it wasn't Apple, but there were still some people that thought it might
have been.
So he joined me yesterday to get the details on that.
I wanted to get you on because, you know, a little while back there was a few stories
going around on the net that I didn't really feel like we got a good picture on what was
actually going on.
And I thought maybe we could start there and then kind of work our way out.
So were you one of the guys that worked on PairOS or worked with the PairOS project?
No, I just was using it like the OS and got discontinued.
So I wanted to continue the project.
So what you were creating was sort of, you took the, you essentially cloned a lot of
that project and started your own OS based on that?
Yes.
Okay.
And that was called or is called ClementineOS, right?
Yeah.
I mean, it was Clementine and then we had trouble.
So then, well, now when I say Clementine, I replaced the C with the K now for ClementineOS.
ClementineMusicPlayer.
So this is still around and it's still alive?
It's right now, it's just a private thing for just me because the site, I had some apparently
copyrighted files and stuff of PairOS and got into some legal issues.
So can you tell me a little, what happened with those legal issues?
Was it?
Okay.
Well, we had, if you went to our download page in PairOS, we had the same exact download
CD cover and everything, we just replaced it with our images and everything.
That was fine.
But then when we went and we're trying to replace the other images, when we saw pictures
of like the laptops running the OS, we tried cropping out the screenshot built in and cropping
one of ours over it and it didn't really work.
So we just posted it with their screenshot and it had the Pair logo and kind of gotten
the legal issues there.
To clarify though, were legal issues brought to you from the PairOS project or by the company
that bought PairOS?
The company that bought it.
But you can't say who they are, right?
No, I can't.
Is it a company I'm familiar with?
Yeah.
If you're in the Linux world, yes.
Yeah.
Okay.
Interesting.
And I don't think it's been made public who bought PairOS, but so that company contacted
you and said, you need to stop using our branding.
Yeah.
They got an email and it was from a lawyer, all legal issues and terms.
So I just immediately took it down.
I didn't want to get in any trouble.
I see.
So they're not necessarily taking up issue with Clementine OS, they're more taking up
issue with uses of their assets.
So does that mean the project might not be dead?
It's actually trying, working on trying to get more, some coders into it.
So yeah, I'm trying to bring it back.
Okay.
All right.
It's about 100% dead.
So I think a lot of people might remember PairOS, it looks a lot like, I guess, OS X.
Yeah.
Is Clementine OS or Clementine going to, with a K, going to be essentially continuing that
transit, tradition?
Yes, but we're probably going to go with a different look than what Pair did.
Yeah.
Give me a hint.
Well, it's going to use the latest GNOME and 14.04 based, but it's going to have the same
window style and everything, but it's going to have kind of like an elementary OS bar
clear, but it's going to have the, our Clementine logo and stuff where the pair used to be.
So what is it that like current distros on the market today lack that you feel like,
you know, so when I think of something like this, I think of, for example, elementary
OS, what would you say those types of distributions lack that inspire you to go out and create
your own distribution?
Well, what I think it lacks is, when I try installing elementary OS, everyone said it's
stable.
When I try installing on any of my systems, I always have issues.
It just, it does not work.
I have tons of issues with it.
So is that all?
I got an itch and I need to scratch a problem.
Yeah.
So it takes a bunch of configuration to get it working.
And a lot of people I think it's from, and my grandpa on my dad's side, he's into Linux
and he thinks it's because it uses an older kernel.
Yeah.
So that's where a lot of people thinks it's at.
Yeah.
So I want to try to have the latest kernel on this.
Always have the latest.
Do you still have, would it be built on top of Ubuntu?
Yes, but I will update the kernels myself.
Yeah.
Yeah.
Well, that sounds pretty interesting.
And it's been a story that hasn't quite exactly faded away.
So it's good to get a little idea of what happened around the whole pair OS situation.
And the one thing I think all those distrusts lack is where pair OS filled it in was like,
all of it's easy to use programs.
Like a lot of people have issues with PPAs, adding those in terminal.
The interest of the program called PPA manager and added or removed and installed programs
with ease and-
And all that's GPL code, right?
Yeah.
That's all GPL.
So yeah, we are going to recreate those programs.
Yeah.
Good.
Our own image.
That was an interesting idea.
That's a great example of something that the pair OS brought to the table, aside from the
aesthetics that look a lot like the Mac is that it was solving some of these gaps and
other distributions have attempted, like Mint has attempted to solve these problems too.
But so it sounds like, one of the things I really wanted to get the bottom of in this
conversation, it doesn't sound like they were necessarily going after you for having a clone
of the distribution, but just for art assets that are being used.
So it sounds like if you guys get everything in place, you're in the clear to continue
development.
Yes.
And that's why we changed the name.
We just put a K in front of it because we also got legal notice from the Clementine
project for the music players.
So we kind of changed the name real quick and they're okay with it.
We emailed them with the name change and they said, you can keep the Clementine name.
Yeah, just replace it with a K. We're okay with that.
So that worked out.
Oh, good.
Is there a fair warning to anybody thinking about launching into this kind of stuff?
You got to go, you have to think about everything before you name it and all this.
You have to Google if there's any names out there that you're eating.
Exactly.
Yeah, you really do.
You got to be careful.
Well, good.
I just wanted to kind of get the story straight.
Is there anything else you want to touch on before I run?
No, I don't think that's the one thing is I want to say is everyone keeps saying Apple
bought it and they did not buy it.
Just to say that, not Apple bought it.
Now did you feed that a little bit by making a joke online?
Did you crack some jokes that people kind of took too seriously?
People on the Paralyze community were, oh, Apple bought it and then posting things to
articles like Apple bought Paralyze and I'm sitting there like, it has nothing to do with
Apple.
They're not big enough.
They would have to be bigger than Ubuntu.
They're not.
Yeah.
Well, I thought that might be the case, but that was pretty funny the way that kind of
lit up online.
So it's good to get that clarification too.
Just rumors.
Yeah.
Very good, sir.
Well, thanks for coming on and clearing things up for us.
All right.
So I wanted to, I thought the sort of the takeaway I had from that chat was, holy crap,
it's harder to make a distro these days than, you know, than it used to be.
And you see, he stepped into an art landmine and then he got contacted by another project
in their name and none of it's all that surprising in retrospect, but it's something you definitely
got to think about.
And I think a lot of people, they sit down to make a Linux distro, they don't really,
they don't consider this kind of stuff.
I don't know.
I think the main thing to really consider here too is that it's a little bit like ripping
DVDs.
If you're doing it in the quiet, quiet realm of your own home or your own home office or
even your own office, you probably are fine.
But as soon as you put that out on the internet for the masses, trademarks, copyrights, various
registered stuff, you really do have to do your homework and Google is not going to cut
it.
You actually need to really do a proper search.
So yeah.
Yeah.
Yeah.
Good point.
All right.
Well, before we get to the discussion about how to Linux, I want to thank Ting.com for
sponsoring this week's episode of Linux Unplugged.
What is Ting.com?
Ting is mobile that makes sense.
My mobile service provider and Matt's mobile service provider.
Oh yes.
Rockin' Ting for a while now.
Here's how you get started.
Go to Linux.ting.com.
It could be like Mr. Chase who was just over here experimenting with the Ting Sim just
a few minutes ago.
Yes.
Pulling the Ting Sim out of my Nexus 5 and putting it into his HTC One.
So Linux.ting.com will take $25 off your first device or $25 off your first month if you
bring your own device.
But let me tell you a little bit about what makes Ting so awesome.
You know they have no contract.
You know they have no early termination fee.
What?
It's true, Chase.
It's true.
And you only pay for what you use.
Six dollars, a flat rate, plus taxes.
But what's so awesome is that Ting dashboard gives you your usage, you can manage multiple
devices under a single account, you can get a snapshot of where each device is at.
Even if you have a whole bunch of devices for like a company, they really make the billing
super straightforward and easy to understand for one phone or for multiple phones.
I have two phones on my Ting line.
It's so easy.
So straightforward.
So you only pay for what you use.
Only pay six dollars flat rate and it's just my usage on top of that.
Every plan includes tethering and hotspot.
I can set up device nicknames in the dashboard.
I can set up voicemail, caller ID, hiding the caller ID when I call somebody, where
it forwards to when a phone number is busy.
All through their very simple dashboard including setting up like alerts.
Like you know when I give my son Dylan a phone, I want to know, hey if Dylan uses more than
a gigabyte in a billing period, send a push notification to my Ting app.
Yeah, what's he doing on that phone?
What's he doing exactly?
Yeah.
What's he doing?
And this is a great example of why it's so nice to have the Ting dashboard paired with
the awesome Ting customer service.
You can call Ting at 1-855-846-4389 between 8am and 8pm eastern time and a real human.
Not a robot, not a called tree, answers the phone.
And here's a novel idea, that human that answers the phone, he's actually empowered to solve
your problem.
I know, it's crazy.
Nice.
And as a long time Ting customer now for over a year, what I really appreciate is the Ting
blog over at Ting.com slash blog where they have videos posted frequently with Ting staff
members today.
They put up an interview with one of their executives, Brad, what he thinks about making
prepaid Ting accounts where you pre-fill a Ting account and then you just kind of run
through that.
And he talks, he ends a little bit about some cool stuff Ting has coming up too.
And I love staying informed in the loop about the companies that I'm voting with with my
dollar.
I like to know what they're actually up to and this is a great example of how Ting keeps
really keeps you informed on what they have coming up.
You're not sort of left up to a mystery.
I actually feel like I kind of understand like their rationale, what their focus is,
what their reasoning is and that is empowering to me as the person making the decision to
spend my money there every single month.
That's empowering to me and I appreciate that.
You can go over to linux.ting.com to get started.
That lets them know you heard about it right here on the Linux Unplugged show.
You appreciate them supporting Linux Unplugged.
It also gets you that $25 discount and while you're over there, click that how much would
you save button.
It's going to take you to a magical billing calculator and they will estimate what your
bill would be on Ting and let me tell you with those new reduced data rates, it's a
better deal than ever.
No contracts, no early terminations, early termination relief program and much more.
Get started by going to linux.ting.com and a big thank you to Ting for sponsoring Linux
Unplugged.
You know, once I'm out of my contract, because right now I'm stuck in a contract.
Once I'm out, I'm jumping.
You should.
I mean, I want to make it happen.
If you get the itch beforehand, they have that early termination relief, look $75 per
line and they'll apply it right to you.
That'll pay for Ting for like months.
Once I get to that threshold where I don't have to, you know, I think it's like six or
twelve months out, because you know they knock ten bucks off every month.
They try to get you to stick with them for a little while.
And Ting just is like, you know, we're not doing any of that.
We're going to get rid of that.
That's awesome.
All right, so let's bring in our virtual lug here and let's start a little around the horn
about the how-to Linux show we have coming.
We announced it in the last 300 and we've got some work, we're working on like several
things at once with the show.
Yes, a lot of work.
I mean more work that is being done in the pre-planning of this show than probably any
other show that I've ever done, ever.
Every new show I launch, it's more and more every time.
And what's crazy about this, so this is kind of serving as like we're just going to put
essentially a lot of our ideas and concepts behind making the show on the record that
way down the road when the show has been out there for a while, people can go back to this
and sort of get an understanding of its roots.
And the reason I want to do this is I would be really thrilled if eventually how-to Linux
could be looked upon as another source of living Linux documentation in a sense.
So we have a lot of options and outlets out there, you know, how-to forge, there's stack
exchange websites, there's the Linux documentation project, there's Linux questions, there's
all these sites and they're all really good and they all serve a purpose.
I would like to not replace any of those but add to those another medium, another way for
people who are sitting down at the computer and they want to solve something, I want everybody
who has no idea what Linux is to everybody who knows what Linux is and knows they can
accomplish that task and they just want to get it done.
So to really understand how to solve that particular problem, what I realized is discoverability
is going to be a huge, huge, huge aspect of the show because it's got to be people are
like sitting down at YouTube and they're looking for a guide on how to do something, they're
sitting down at Google and I think part of that, I think a key part of that is going
to be keeping it to a short length.
Like I'm talking 15 minutes, no more than 30 minutes per episode.
We're going to get to the point, we're going to show you how.
Yeah, because you want somebody who's like browsing a list of results, if they see an
hour long show, they're going to look at that and go, oh, I can't, I got to get this problem
solved.
I can't burn an hour watching these guys jerk off in front of the camera.
I want my problem solved, right?
And I think, you know, just mentally that's a blocker where if you see 15 minutes on that
video and this is a problem you want to solve, that's 15 minutes of time well spent.
It's a totally different value equation in my opinion.
Yep, and every question that we bring to the table for the show, we're going to give it
the same care and same quality as the next question, meaning we're not going to short
change a question just because it could be a little bit more difficult or a little bit
easier.
We're going to give it the same care.
And that's, that's the kind of envision that I have in my head for this show where it's
going to be solid.
It's going to be good where you're not going to have to think about the production.
If it's in the title, that's what you're getting, right?
That's what you're going to get.
You're not going to have to search maybe halfway through the video to find the real topic.
It's going to be boom right in your face.
Yeah, and the other thing I think combined with that though is I like the idea of, I
don't know if these two things are conflicts, so I'd love to hear what the Mumble Room thinks
about this.
I also like the idea of a multi-part series.
So part one, you take a topic and then you break it down into chunks and you say, here's
the introduction, here's starting at, at ground zero, like, you know, set up, pour your foundation.
Here's the next part where you're now building on top of that foundation.
Now here in part three, we're actually putting it in production.
And then in part four, here's how you secure it, lock it down.
And if you have an internet facing, you're not going to, you know, expose your home network
to attack.
And this way you don't have to worry about, all right, all right.
You could watch one piece if you're only interested in that one piece.
Well, and you don't have to worry about, all right, well, I'm, I'm about what, 15 minutes
in.
I know where I was.
And then when I come back and watch it, you don't have to worry about that.
Or if you decide, okay, I'm going to watch the building part and then in a month I'll
come back and watch the securing part.
And so I don't know though, and I'd like to hear the mumble room here.
I don't know if, if these two things are a conflict, is a super short show, but then
also broken out into multi-parts.
Do those things go together?
Conflict if you do it in a situation where the multi-part series is not on like the continuous
basis.
So like say you have a, let's say the show's weekly.
One week comes out with an episode that starts a series.
The next week is not the continuation of that series.
Instead, there's a separate section on the website where you get the, each video separated.
So it's not like someone goes in and says, Hey, I want to watch this.
But then they see that that's not something I want to watch.
They're not going to just skip a whole month of videos that apply to that series.
I'm trying to track back.
So what you're saying is, so a one week comes out, that episode is the introduction video
and all the other videos associated with it are released at the same time?
No, they don't necessarily have to be the rest of the time, but they should be all like
on the same, the same page or the same section.
So the next week it's not, it's a different topic.
So if someone's not interested in that topic, they won't just skip the continuous weeks
until the series over.
Okay.
So how do you think YouTube playlists could play into this?
Well, I think like if you have a multi-part series, then you could go ahead and throw
those into a playlist and have that playlist a part of the account.
You know what I'm saying?
Where people can go, if they want to watch the whole thing, they can, if they just want
to watch a certain part of it, like the 15 minute segments you're talking about, then
yes, they could, they have that option.
They could do it both ways.
And Faye, you wanted to kind of mention it from a new user perspective.
Well, when I was a new user, I didn't even know about the resources that exist in order
to find how to solve my problems.
And you kind of get directed towards the forums and you may or may not get responses.
And then you have to read documentation that contains a whole lot of jargon you're not
familiar with.
But just having a video in the first place is, was, when I started using links a few
years ago, that was the best option for me.
But most of these videos, they weren't very professional and they were scattered.
It's not like they did them for, as a job.
They just did them when they wanted to show somebody how to do something.
So even if, I mean, having a concise video is a wise choice, but even if they were a
little bit longer, I think a lot of people would get benefit from it just because it
shows them how to do something the right way the first time.
Yeah.
The thing is, I think part of the reason why we've been looking at the particular timeframe
of 50 to 30 minutes is we're very conscious of the audience and how people have busy lives
and they don't want to have to sit in front of their computer for an hour to watch a video
or a how-to video.
You want to get to the point.
And also, attention spans sometimes can drift off after 30 minutes or so.
So we want to quick hit you and we're trying to figure out how do you do a large project
and spread that out.
I mean, obviously, we're going to be shooting these.
Yeah.
We don't want to have to skimp and gloss over certain details because if we're only going
to give an entire topic 30 minutes, we could probably fit that into an episode of last.
But we want to be able to feature something that, just as a total random example, but
let's say it was setting up a lamp stack, which I don't think would be top on our list,
but let's just say that's one of them.
Wouldn't it be great to actually start at the very beginning?
Get that system loaded up.
Get those packages installed.
Get those dependencies.
Get all that figured out.
Get your web server set up.
Get your modules figured out.
And that's separate episodes.
And then at the end of it, you secure that thing down.
And then maybe, okay, this is more work, but the other thought that crossed our mind was
when it airs, because really what we're trying to build up is a back catalog.
So we're looking at this from the perspective of people are coming across this for years
down the road, not just that week.
But so it would air in a weekly basis and at the end of that set, so maybe it's a three
episode set or a four episode set of how to do something, then one single video in a master
RSS feed of completed episodes where everything is just in one long connected video could
be published separately.
So people would have an option to watch the individual stages as they come out, or they
could wait till the end of the whole run and watch one contiguous video.
You could say episodes five through nine is about doing X, things like that.
And at the end of that run, they're all available as one single download or individually.
But if there's someone who doesn't have an interest in that particular topic, that means
four episodes that they're not going to watch.
Right.
Well, and that's the thing, though.
I mean, we're going to be doing a how to Linux show, and that's one of those things where
we're going to run into, I think, regardless of what it is.
Right.
But instead of having the four episodes where people are that one topic that people are
not going to watch, you could have different episodes that they would have different topics
that would get more people watching it.
But how do you do that?
That's the nature of the show.
I mean, you just have to do stuff and people aren't going to be interested in a lot of
it.
That's true.
But if you do a series in the sense of episode five, part one, part two, and part three,
you still get the series separation, the part separation, but you don't have to have a train
of a month of people not being interested in the show, and they might forget it at that
point.
But at that point, why even slice it up?
I mean, if you're going to do it in that route, say 5A, 5B, and 5C, there's really no point
in slicing it up.
It just causes more work to be done in the production side and more work to be done in
the actual shooting side.
Right.
So two things.
I think the number one thing, which is just based on just experience, is if we were developing
an application and you could list out all of the features of that application, the number
one feature has to be short length, I think, just because you're not getting a lot of people
in the door unless it's short.
So I think that's the number one hard point we're up against.
And that's just based on discoverability data that I've just watched over the years.
And the second thing to that end is I kind of feel like there is definitely that scenario
where people are not going to be interested in the how to run for that period.
But at the same time, I don't really see a great solution to that problem.
It kind of seems like this is just going to be the nature of this kind of show.
Because if you break it out like we're talking about, you're not going to get around that.
And the problem is the benefit of sort of taking it slow is we can incorporate people's
questions into the set as we're going.
So that way if we miss something in one set, by the time we're recording the next set,
so say we record episode one and two back to back.
And then by the time we sit down to record episode three and four, to continue that,
we can incorporate people's questions and sort of make the how to even better.
But the other thing it lets us do is it really lets us give air to the topic.
If we had to cram...
I guess what I'm trying to say is if we could take one topic and really just serve that
topic for four episodes in a stretch, we're going to get to all the nooks and crannies
of that topic.
Whereas if we have to do a completely new set every single week, just the production
demands of pumping that out will mandate that not as much time is spent on that topic.
Chris, I would...
I know you thought about doing it with another show at some point, but ever thought maybe
doing two parts per week.
Maybe like one on Tuesday and one on Thursday or something.
Yeah, we are kind of considering that too.
The production is harder there, but it's something we're kind of kicking around is that might
be a way to sort of speed the process up.
Yeah.
Also, you got to keep in mind too, you might want to do very like distro-specific things
to like make an entire series about one specific distro, so like you can have an entire like
OpenSUSE-related show, like doing like build service stuff, like things like that and then...
Now, I got to ask a question here and obviously, here's a noob of me coming into play.
Would that be because you have a preference to that particular version of Linux or is
that because you think that would be a more generalization for the viewer?
Because the one thing I want to be very, very careful about is saying, well, I think this
particular version of Linux is better than this particular version of Linux and then
you have infighting for people who will have their own favorite versions and distros.
I've always kind of pictured rotating around.
That's what I pictured too.
Wait, let Poby get a chance because he's going to say something.
Go ahead, Poby.
Oh, sorry.
Let me just interrupt playing Portal 2 on Linux.
No, hold on a second.
That gets in.
There we go.
Yeah, yeah.
Very good.
I'm inclined to agree with Rob, actually, I like the idea that you, episode one starts
a series on a particular topic and you could do what a lot of, I've seen Unity 3D, introduction
videos and Minecraft videos do where they record for a significant chunk of time to
give the topic plenty of detail and go into real depth, but you break it up and you just
break it up into 10 minute slots and you cut it and put it out as a playlist.
Now, the first episode goes out as episode one and then as you've said, 1A, 1B, 1C, and
then the following week there's some completely different topic.
It's not related to the previous week.
It's not a continuation from the previous week.
There's no dependency on you having watched any of the previous episodes.
It's something new and fresh and that way you fulfill the being able to go in depth
on a topic.
You can punch out lots of episodes because you record it all in one long one hour stint,
but chop it up into pieces so you get the continuation of a playlist and the thread
of one topic, but you also get the benefit that you don't have to keep recording lots
of different episodes that nobody is going to watch because they're all on a theme that
nobody's interested in.
So question here, playlists are very YouTube friendly, of course, but remember this is
also going to be a downloadable show and so if I, for example, my podcatching feed had
1A, 1B, 1C, and 1D, that's four things that are in my feed instead of one episode.
So how would that be handled?
I would like to kind of go against Popey's idea.
I would say if we're going to stick to one topic a week, do two parts, one on one day
and then another day of the week to still get that community feedback and questions
that you can answer as Chris wanted to do.
The problem is I don't want to have to wait a week to find out part two.
If this is an in-depth thing, I want the immediacy of being able to go into plenty of detail
about the entire topic if I have time to do it.
I don't want to have to have a ten minute topic and then wait a week for the next ten
minutes.
I'm going to zone out.
So Ick, why don't you chime in with sort of, you had a comment about the nature of
podcasting.
Yes, it's basically an on-demand medium.
So what you're going to have is people picking and choosing what they want anyhow, whether
they're going to want to watch this whole series on a particular topic or they're going
to want to skip over that and just wait for the next one.
Sadly, you know, you're not going to be able to please all the people all the time with
that.
That's true.
Q5, you had a comment about the distro.
Yeah, I think if you use a distro, like let's say we're talking about how to set up NGINX
and own cloud on a box somewhere where we're using Debian as our example.
We can run the whole how to with using say Debian as the example and then at the very
end have a short blurb that says, okay, now if you're using Arch, you may have to change,
you know, things here, here, here, or if you're using Slackware, you know, you might need
to find Slack build scripts or other things.
That way you can focus on one distro, get the information out there and then also touch
on if you're using another distro, here are some things you might want to take a note
of before you go down the road.
And Fate, you wanted to also comment about distros.
Yeah, I was actually going to suggest the same thing.
If you focus on one particular distro from start to finish and exclude acknowledging
other distros, then you're targeting a subset of a subset and I don't think that'd be as
beneficial to people as trying to be as all inclusive as possible.
So I kind of, you know, I love the idea of maybe like a sort of like a middle ground
where it's you split it up, but it's two releases in a one week.
The problem with that is right now resources, that might be something we do, you know, maybe
a couple of months down the road.
I don't know, because that would require probably that we have our editor in place.
On Popi's point, instead of 10 minute segments, when you're structuring the show and you're
writing the notes, you could write them as different segments, like you currently segment
last right now, right?
And then choose, you know, depending on how many segments are available for that particular
show, how you're going to do the release structure.
I mean, it's one of those things that maybe the show, I mean, this is right now, it's
all very fluid, but maybe the show needs to be a full length show, not small.
And I know-
I think that's a problem.
It is a problem, but it's, I guess it all comes down to the topic at hand, right?
Yeah.
I was just thinking like, even the segment idea is kind of hard because like sometimes
that part takes five minutes and sometimes that part will take a half hour.
Right.
Yeah.
That's challenging.
Right.
I mean, I think obviously at the beginning of the show, you know, I say episodes one
through five, I doubt that we're going to get into anything that requires multiple parts
because remember, this is a how to Linux show.
We're taking baby steps or we're taking baby steps with me and I don't see us getting into
something that's going to require a baby step approach, at least in the beginning, because
you know, remember, we're trying to appeal to a general audience.
It's not just the advanced audiences, but also the people who are wanting to learn more
about Linux.
If you're going to give somebody a five step process for someone to learn more about Linux,
you might lose them already because they'll be like, wow, really?
I need to go through a five step course to learn about this particular thing that I want
to do?
I don't know.
I see, I think that's looking at it from the wrong angle.
I think it's more going back to like what Iq was saying of the on demand nature of it
where a lot of people look at it and say, well, I don't need to know how to install
a package.
I know how to install a package, but I need to know is how to set up this part of it.
Right.
And I think that's the advantage of having it broken up a little bit is people can pick
and choose the components that meet their skill set.
Yeah, that's true.
Well, like when I'm looking at something for Kdenlive, for example, that's actually something
I've run into.
I can use video editors and Linux six ways from Sunday, but there's always like that.
It's always forget like the process of compositing that I always forget that.
So I have to like look for that piece of it to remember how to do it.
And I don't want to watch an entire show on it.
So I think having the segment definitely helps.
Okay.
I kind of want to bring up this concern is, okay, playlists are very YouTube friendly,
but what are we going to do when we put it on, let's say, the Jupiter Broadcasting website?
Right.
That's the yeah, I think I think basing around playlists is only get you so far.
I think that is a problem as SM, SMA, SSA.
What did you want to say?
SMASA.
SMASA.
Yeah, SMASA.
I just wanted to say that you want this to be an archive of how to do different things
in Linux.
So I don't think you should really be that strict about how long each individual show
is.
Yeah.
You should try to do whatever it is as fast as possible, but still be effective and leave
that up to the topic.
Yeah.
Yeah.
I think that's going to have to happen either way.
I mean, I don't think like we could just cut it off if something was going long because
the content will always sort of drive that.
And that's it, you guys.
That's all we have time.
We really want to show you how to get that started.
But we're going to have to run.
But we ran out of film, you know, the camera, the batteries.
Yeah.
Yeah.
So, boy, I don't know.
So it sounds like this is still something I want to kind of try to refine because I think
this is a key part to how to deliver this show.
And I think part of it is like there's two audiences we're trying to solve or trying
to serve.
One is the weekly people that will want to tune in and see what we're working on.
And the other was going to be the people who will be coming across the archive in a year
from now when they're trying to implement that project they want to get done.
And it's too bad you can't do like chapter breaks like on a DVD.
Right?
Yeah.
We'll release each one of the DVD.
Now, you could release a playlist file on the website included with like a zip or a
tar jizz or something, although, I mean, is this even a podcast format?
You had to say it like that, didn't you?
Yes, tar jizz, jizz, whatever.
Okay.
Okay.
All right.
All right.
I somehow knew I'd get that response.
It was not intentional, but.
Well, why not having it so you have one episode, say, the lamp stack.
You have one episode about the introduction, and that gets people to say, this is the episodes
about this.
And then on the show notes, there are multiple parts.
They can jump to different posts.
So everything's still self-contained in the one episode, but it's split up so people can
see what they can get to the sections that they want to.
And in this way, you could benefit having it archived on the website and archiving
it on YouTube and doing playlists and having it all, you know, organized however you want
to in different mediums.
That makes sense.
It kind of sounds to me like you want to fulfill two requirements, one, which is have the people
who are going to download a chunky video and will be happy to sit there and go through
it and pause it and, you know, continue and jump ahead or whatever.
Yeah.
Whereas you also want the short attention span YouTube audience who will watch a ten
minute video and then, you know, disappear and then maybe come back for the next ten
minute video in the series.
That's three ten minute videos in a playlist or one sixty minute video.
So it's basically a sixty minute video.
You chop into three, put it on a playlist, you're done.
Yeah.
Yeah.
Yeah.
I like what Popey was saying.
Like for your actual website, you put the one final episode and then you put the split
parts on YouTube.
I don't even I don't I don't really like designing any aspect of the show for YouTube.
I don't even like thinking about YouTube.
Makes me so frustrated.
Riley's been trying to get a point in about production.
Go ahead, Riley.
Yes.
That's what I was going to say about YouTube, too, is like you have to make sure the production
is good on it and you do keep people entertained because a lot of the shows like it's the people
who do it at Austin are kind of weird sometimes.
Yeah.
My observation, you know, from some that I've checked out is they're too slow and they're
spending way too much time sort of with the introduction and the and the talking about
themselves and all this kind of stuff instead of just hitting the ground running.
And I really look at it from that that mindset of somebody who wants to come in and solve
a problem.
And I really think that's the person that, you know, you know, in terms of who we can
help and and and who we can provide, you know, more more resources for people looking to
switch to Linux.
I feel like that's the person to serve.
But I still want to make it palatable to everyone else, too, in some way.
So I think.
Yeah.
Go ahead.
You know, this really isn't necessarily a podcast is this we don't really need a format
in a method that would go out to a podcast catcher or anything.
We do.
I don't know.
I think maybe that's why I was thinking maybe still having a final version that is sort
of a longer show type format.
Yeah.
Well, and I think from a podcast version, the one of the advantages is that it allows
you to build up your own personal library of stuff we know and stuff we're sharing.
So you may not even really need to watch that video right away.
But then later on, think, oh, crap, what was that one thing?
And then you have it stored locally.
Some people do want that local media.
They don't necessarily want to watch it online.
Yeah.
Hmm.
All right.
Well, it sounds like we'll do some more discussions.
But thanks for all you know, thanks for giving us a lot to think about, you guys.
That's good input to take there.
Yeah, absolutely.
Thank you.
All right.
Well, we got an email from Todd.
He wrote and says, Hey, guys, I've been going through this long experiment to get rid of
Google in my life and trying to find Linux devices for mobile use is hurting me right
now.
I was on CyanogenMod for the time being, but Google has ripped so much out of Aesop that
it's really leaving a lot to be desired.
Would you consider doing a call out for feedback from people using OpenPandora or any of those
crazy Chinese gadgets like or the Yolo phone or something like that?
Then you could share their feedback on the show and put it in the show notes.
I really want to buy an OpenPandora one gigahertz model, but that's a lot of money to spend
on something that might or might not work out.
If a listener was able to give some feedback and on its use for messaging, SIP and Linux
apps in general, I'd make it a lot easier for me.
He's also going to post in the Jupiter Colony and on the G Plus Jupiter Colony.
Well, I live in Kansas, so I'm trying to get more Google in my life.
The fiber kind.
Yeah.
All right.
So John wrote in, I call it the possible downsides of acceptance.
He said, So I definitely agree that getting more people to use Linux is great for the
desktop and Linux as a whole.
But what if, say, for example, Canonical dominated the Linux space and slowly inched towards
a closed source system like Windows or Mac OS?
Do you think that this is a potential issue?
If something like that happened, then real Linux would be stuck where it currently stands
in which a big shot OS that dominates the market would then enslave all of their users
and all the new stuff that Linux people are left out in the cold.
What are your thoughts on this matter, John?
So I don't think this is really quite the same.
I think I hear this comparison a lot and I don't think this is really quite the same
and it really kind of comes down to license, I think.
I think you look at companies like, or distros like Mint and other things, it kind of proves
that, in a sense.
So where Mac or Windows could come in and sort of brace and extend and then dry out
all the competition, that's not really an option for things that are based on the GPL
as much.
It's a possibility, I suppose.
And then that would be the market deciding, right?
This is true.
I think they're confusing the word, the joke about Mark being a dictator with an actual
dictator.
Yes.
Welcome to Putin OS.
Yeah.
Okay.
All right.
But John, so I wouldn't worry about it.
I think the license has shown that if anything, things rise and fall and then at the end of
the day, it's all GPLed code and that's kind of what matters in the end.
Well, lots to think about and we'd love to hear your thoughts on the how-to show as well
and probably the best way to send us your ideas because the Linux action show inbox
is ridiculous right now.
I bet it is.
We got so many emails.
But if you want to shoot your ideas to at HowToLinux on the Twitter, twitter.com slash
HowToLinux.
We'll be monitoring that for ideas and suggestions and we'll also be eventually posting notifications
when the show gets closer to launch and when we're doing stuff, we'll be posting it there.
Not a lot happening at the moment because the show is still obviously in the early stages
but that'd be a good spot to follow so that way you can get updates but you can also send
us ideas, topic ideas, format ideas and all that kind of stuff at HowToLinux on the Twitter.
All right.
Well, thank you very much Mumble Room for joining us.
You guys were great as always and gave us a lot to think about and thanks to Brendan
for writing in or for calling in and talking to me about the Clementine OS project.
And Chase, thanks to you for joining us.
Hey, you know, it's always fun being here.
You know, I feel very comfortable for me to be here with you guys so thank you so much
for having me here.
Well, you keep that seat warm because you'll be sitting right there again tomorrow for
Unfiltered.
Yeah, why don't you put that other chair together so I have a much more comfortable seat.
Why don't you put that chair together?
Come on, man.
I'm in a folding chair here.
You're sitting in like my naked.
I know.
Well, this chair is no good either.
This chair is no good.
Well, Matt, if all goes as planned, on Sunday we'll be chatting with one of the new folks
at the KDE Design Group who are working on the next version of the Plasma desktop to
make it look even better.
So that'll be a good chat.
And did you see, by the way, the Numix folks made the official announcement about their
new desktop they're going to be working on?
You can find that on their G Plus feed and go check that out.
Also, don't forget you can join us live on a Tuesday at 2 p.m. over at jblive.tv.
Go to jupitabroadcasting.com slash calendar to get that converted to your own local time
zone.
You'll have our mumble room.
You join the chat room.
Do bang mumble and you'll get the mumble server address and you can hang out in our virtual
log and chat with us in real time.
And we have that open to everybody.
If you're working on a project and you want to spread the word, just let us know.
And we'll have we have a lot of good stuff coming up.
We got a lot of good stuff in the works.
Great stuff in the works.
And don't forget to go to teespring.com slash last 300.
Get yourself a shirt and a challenge coin.
All right, everyone.
Thanks so much for tuning this week's episode of Linux Unplugged.
If we don't see you on Sunday, we'll see you right back here next Tuesday.
Have a great day.
