How about we start things off with a little good news?
This is something you don't hear too often.
It turns out there could be way more free books
than we realized.
Millions of books may have been in public domain
for a long time, and just nobody ever checked.
Yeah, right.
So I guess prior to 1964, books had a 28-year copyright term.
But to extend it, you actually had to send in a separate form.
And of course, with no internet, no easy way to do that,
are you really going to?
Who has the time?
Turns out not that many people.
Thankfully, the New York Public Library
has done a whole bunch of work to go find out
which of these books are out there,
and now you can download them online.
Yeah, you can search the whole thing.
There's literally millions from 1923 to 1964
that are now in public domain.
I bet we will discover in a few weeks some great old books
about computers.
I think it's great to be aware of these things, too, right?
Because that's part of how this should work.
After a time, it should be part of the commons,
and we can all learn from, use, sample, whatever.
I love free books.
This is great.
One challenge I have with that is that there's literally
millions of books.
So how do you know which one to start with?
Or how to, you know, it's just like a giant dump.
So is there anybody curating?
I think in a few weeks, you'll start seeing that.
You'll see people that are adventurous,
and they go look it up.
And they find some historical person
from different industries.
I bet there'll be books about photography.
There'll be books about computers.
There'll be about the, you know, very fundamentals from back then
that we take for granted now.
I actually, I'm willing to bet in a few weeks, maybe
a few months, maybe even a year or two,
things will surface that are absolutely fascinating.
Yeah, I find this also very dangerous because I remember
spending a week just going through Project Gutenberg
trying to see which books were worthy of my time.
Oh, yeah.
It's going to be a rabbit hole, a big old rabbit hole.
Bring it on.
Oh, hey there, and welcome into Linux Unplugged, episode 313.
My name is Chris.
My name is Wes.
Hey there, Wes.
Hello.
Guess what?
I'm very excited about today's show.
Huge show.
You know, it happens sometimes.
This was going to be the episode, though,
that I was really dreading.
Oh, yeah.
Oh, I could tell.
Yeah, we had to put in a little extra effort,
but we got something really special out of this week's
episode, so I'm pretty happy we did it.
And I mean, how often can I say this?
We're going to do things differently from here on out
after this episode.
How about that?
How about that?
I'm excited.
Mr. Cheese Bacon is here, too.
Hey, Cheesy.
Hey, what's going on, guys?
Oh, you know, doing a podcast.
Other than that, not much.
Pretty good.
Nice.
Yeah, you know, podcast is life.
And of course, our virtual lug is here.
Time-appropriate greetings, Mumble Room.
Hello.
Hello.
Hello.
I see CM, and Mini Mac, and Hawkins, and Brent,
and Popeye's been lurking in there,
and Emacs from Answers up there in the quiet listening as well.
So that's a nice showing on Tuesday.
Glad to have you all.
On a warm Tuesday afternoon.
And we have many in the jblive.tv chat room, too.
So it's nice to see everybody here.
Why don't we kick a few things off with community news,
and then we'll get into my thoughts on the Raspberry Pi
4 as a desktop.
I did get the desktop kit.
It arrived a week ago.
Been using it for a week, and I have some thoughts.
But community news first, Mr. Payne.
We follow up with the topic we talked about last week
with one of the co-founders of Manjaro, Philip,
about bundling free office by default
in a future version of Manjaro.
They've updated their decision.
They've done a bit of a 180, not a complete 180, maybe.
Pick an angle here.
Come on.
Maybe a 90.
OK.
It's a pivot.
And they will offer the user choice during installation,
LibreOffice, FreeOffice, or NoOffice.
So as an additional install time option.
What do you think of that?
Not so bad.
I mean, really, it seems fine, right?
If you want to have more choice, why not?
You can have a default. This is a way of not.
I suppose there's probably still a default, right,
in whichever radio button is selected first.
I think myself, I'd choose the NoOffice version.
Yeah, same.
I prefer not to have one.
I bounced this idea off of Joe on Linux Action News,
and I want to bounce it off of you guys a little bit.
It feels a little bit like the outrage crew showed up
and got the developers to change their plans,
like they were going to do something kind of bold
and differentiating, and they were
going to take a bit of a dramatic step, something that's
a bigger step than you normally see a distribution take.
And instead, they ended up doing something
that's not quite as aggressive, not quite as differentiating.
Again, side note, I actually think
it's the right way to go.
But I'm playing devil's advocate here, cheese.
Are we not, once again, seeing outrage-led development
in open source and with social media and the forums and blogs
and podcasts, although I think we did a pretty good job,
but of course I would think that.
Are we not seeing an outrage machine
that generates reactions so fast that developers are just
inundated, and then they scramble,
and then we get compromises?
I mean, I think that it does get hammed up, right,
within all the Linux circles and how
it's really easy to just go after someone
and attack them for not using the most obvious free option
available and trying something different.
I really admire Manjaro for stepping out of the box
and trying something different.
I agree with you that it's not a step back.
It's kind of a sidestep.
They didn't roll all the way back.
This isn't one of those things where
I feel like they're still standing their ground.
I'll put it that way.
I don't feel that the devs were completely pressured to do this.
And it's something that we're going to have to accept,
I think, as a Linux community, that these things are
going to happen and that distributions are
going to evolve.
And that means partnering with other people.
And really, at the end of the day, you still have your choice.
If you don't want free office, you don't have to use it.
You can install something else.
Like you said, they have different installers,
which will allow you to select.
You've also got the Archetype, or I
think it's the Architect edition of Manjaro.
So you can really dial in.
I've heard backlash on, oh, well, they only
limit you and pigeonhole you to 1D.
Well, you can use their own spin and build it out
to really whatever you want.
I have a sense that they felt they
had to step back away from this because of the pushback.
And I think it really still shows the maturity level
within our community sometimes.
Here's where, again, I want to say
I still appreciate that LibreOffice is free software.
It's functional.
It was an option.
There's a lot of elements to this conversation.
But that's the part you just ended on
that I want to touch on here.
I think what ends up happening, and this is just
based on the emails and tweets and telegrams that I get,
is the people that are the most connected
are often the most passionate about free software.
And they respond very quickly.
And they respond very vocally.
I got a lot of people that tweeted me telling me
that they're ripping Manjaro off their system because of this.
People asking on Hacker News for replacement suggestions.
And on our Linux, people were going
on about the different ways to migrate to other platforms.
And what happens is that's on day one and day two.
That's like the first 48 hours.
And you really saw a lot go down in the Manjaro forums
in the first 48 hours.
What happens around hour 64 and further
is I start getting emails from people who are busy.
They have other things to do than to follow
the daily, perhaps even hourly developments
of the Manjaro distribution.
Later in the week, listen to some shows, read some news,
whatever.
Exactly.
People downloaded the episode.
They heard the interview.
And then they sent me some feedback.
And as the week went on, and this will continue for weeks.
I mean, people will be emailing me for weeks
because they won't hear this episode.
As the long tail of that feedback gets longer,
more and more the trend line is people
that support the switch to free office
because they're already using it.
And I've gotten things like, yeah, I've
been advocating free office for a while,
and people always jump on me for it.
I'm not trying to defend, again, any decisions made here.
I'm pointing out that the people that are most active
in the initial 48 hours of the conversation
are not representative of the community.
They're representative of a slice
of the most passionate community.
I mean, even just saying you're going to change operating
systems, right?
Again, that's a fast thing to do.
You have to care a lot.
Nobody who has a lot of things going on is like,
I'll just reload my OS today.
I've got a machine upstairs that is a Frankenstein build
that I need to reload.
And I've been planning to do it for a month.
Because it's working just enough,
I can't get around to it.
I got all these wackadoodle workarounds for it, too.
It's ridiculous.
And my point is that it's not representative
of the full community, but it's the brunt of the feedback
the developers initially get.
And then they want to respond quickly
because they don't want the outrage to escalate.
And so they're really stuck in a catch-22.
And there's a lot of sympathy here, too.
When we talked to Phil, you could
tell he was doing it to try to differentiate Montero.
The thing he spends a lot of time working on,
as do all the people involved in the project.
And this is just a lot of mental stress, right?
When you're like, oh, OK, some people really didn't like that.
But you've got to also, from both sides,
community members should talk about what they want
or don't want in their projects.
But you've got to remember that it's not
like they're doing this for some evil agenda.
They're trying to make the thing they work on better.
Brent, I'm going to go to you now.
Because I have to imagine there's
some similarities between what you do
and creative expression in creating
something like a distribution.
It is absolutely a technical undertaking.
But it is also, for these creators, their way
to express their creativity.
And sometimes, the very people you're
making that creative work for have very harsh feedback.
And you have to know when to cave and compromise.
And you have to know when to stand your ground.
And I guess the point I'm trying to make to you,
and I'm curious if it resonates with you,
it feels like we're seeing maybe a lot more compromise
these days because of the accessibility
of the developers.
Yeah, this sounds like a little bit of criticism.
But to me, one of the advantages of having
all these distributions is that the developers can create
the product that they want themselves to use
and the options that they themselves want to see.
And I think you've heard from a lot of people
that options is better.
I mean, that was one of our possible choices for titles
last week.
And without that sort of creative freedom
for the developers and those behind the distributions,
if everyone's feeling pigeonholed
into the same place, we're going to end up with five distributions.
It all tastes the same.
And I don't think that's what we want.
Also, if people can't fully express their creative vision,
I mean, we're getting very meta here.
But if you can't express your creative vision,
you're probably going to burn out.
Yeah, right.
Especially if you're doing something not for money.
Use that joy that comes with creating product
that you're really jazzed about, right?
You're going to end up creating something kind of mediocre
that you're maybe not quite as proud of.
Yeah, exactly right.
And who wants to work on something mediocre?
You want to work on something that gets you up
in the morning.
It does seem like this is sort of an extension of what
we've seen in daily life, right?
Like with the popularity of Twitter and fast feedback
cycles and outrage coming before all the facts are in
or can even be sort of sifted through and understood,
maybe took a little while to percolate to our culture
as well.
Yeah, I think part of the issue there
is you have to put as much responsibility on the people
taking in the outrage and acting on it
as the people that are experiencing the outrage.
What I'm trying to say is a new skill now,
when you're managing a large community
or you're building a large software project,
is learning to properly interpret
that volume of feedback in the correct way that
is still good for you and the project and your users.
And so that's why I think there is room for compromise
on some of these issues.
Of course, of course.
And like in this case, this probably
is a net positive for all.
But where do we draw that line?
And I think I could cite three or four just recent examples
of when this has happened, as I did in LAN.
And how do we do this in a way, a more productive way,
so that the Monjaro developers feel comfortable
with the next version of this, right?
Because it doesn't seem like it's going to stop.
No.
Everybody's more connected.
But can't you imagine, then, you have another great idea that
might be a little controversial.
And now you're just like, no, it's not worth it.
I don't want to deal with this again.
Well, and I think that it's part of human nature,
too, that one negative feedback.
And let's say, let's just throw a wild number out there.
Let's say they have 250,000 users,
and you get 500 people giving you negative feedback,
even less, 50 people, they give you negative feedback.
That's really going to impact your decision on the direction
that you go.
And that's not really speaking for the whole user base.
It's that outraged, knee-jerk reaction.
And it's kind of sad.
Yeah, it's challenging.
It is really kind of, I think it's
going to be a larger challenge because of the open nature,
the public nature of this type of development.
Because keep in mind, this wasn't even a finished version
of Monjaro that shipped.
This was something they were going
to do in a release candidate.
Right.
And that wasn't even the final release candidate.
It was just something they were going to try for a cycle.
And if it worked, they'd go with it.
And then it would have been official in the new Monjaro
release.
Or how often do we see little bundles of outrage
from things on mailing lists before any decisions are made?
We're already talking about it.
That was one of the reasons I really
wanted to reach out to Philip.
And things connected, thanks to a friend of the show.
And we were able to get him on here
and get it straight from him.
And I have to give them credit.
I think they came to a compromise that
will make their community happy.
And that's just as important as making good software.
So absolutely.
Congratulations to them.
And hopefully, they build up a little bit more
of a thick skin so the next time something like this comes around.
Because I think that's a good position for Monjaro,
to push that edge a little bit, to push it forward a little.
Especially as Endeavor OS comes around,
you can get a pretty vanilla arch experience out of that.
It's nice to see Monjaro kind of go a little more cutting edge,
try things that really differentiate.
Because to their credit and to Pop OS's credit,
they've been getting more and more coverage on YouTube,
which is bringing in more and more people.
And it's funny that those are the first distros.
Like, Monjaro is like, what?
OK.
Wouldn't have called that in a predictions episode,
but it seems to be working.
So hopefully, the team continues on.
And the user base is happy with that.
As a Fedora user, I'm kind of happy with this new minimization
team that's been announced.
Now, don't get too excited.
It's early days.
But there's a new minimization team forming,
focusing on minimizing the installation
size of a lot of the popular apps, run times,
and other bits of software in Fedora.
Have I got you yet, Wes?
No, that sounds great.
And what I like about this, too, is it's not just
a one-off effort.
The goal is to build an environment where
it's easy for the Fedora maintainers
to keep things small over time.
And so they're going to dig into stuff like Apache and Nginx
and all sorts of various systems all over the operating system,
trying to make them small.
That's great.
That could also benefit Santos and RHEL down the road.
Well, this has just got that kind of work
that that's not necessarily fun, it's not necessarily sexy,
but it's going to benefit the whole ecosystem.
Mm-hmm.
Mm-hmm.
Now, Wes, this last story we threw in here,
I think Drew found this.
And I just had Wes Payne all over it.
I always love to give you a hard time
for doing everything with KExec.
Sure do.
Wes wants to give a distro a try and creates a RAM disk
and uses KExec, and it goes to town.
And it's hilarious.
It's also very fast.
And it looks like some enterprising Google engineers
have gotten the Windows kernel to boot via KExec
in a special circumstance, like with, I think,
it's early days implementation of the EFI boot services.
Yeah, exactly.
So with KExec and Linux, you can just load the new kernel
and sort of jump to it, hand off control to the new kernel.
Blows my mind.
And since they control everything,
you can get that set up so the kernel knows what to do,
and it just starts running, and you've
got a new kernel running.
I just don't understand how it hands off the devices.
Oh, it discovers the devices and stuff.
And the video cards don't crap out and stuff?
You can have some hardware issues, for sure.
But not on your Intel?
No, I haven't had too many issues.
And you can then use stuff like systemD
and try to get the system to the most almost reset state
and then load the new kernel.
There are some amount of things you can do.
But it's already integrated.
You just do systemCTLKExec, and you're off, ready to go.
So here's the thing.
Windows doesn't really boot like that anymore.
Microsoft was really involved in the whole UEFI thing
happening anyway, and they actually use it.
And one of the things that EFI provides is these boot services.
And these are nice little helpers
so you can grab disks and have the firmware
interact before you've got your operating system loaded.
Windows Bootloader definitely takes advantage of those.
And so before, with KExec, you didn't have that,
because you're dumping everything you've got
and you're starting fresh.
This is an implementation, basically,
where as you're KExecing, the kernel
can provide these things to Windows
to get it up and running.
And you can transition to get Windows actually started.
Because the whole thing about exiting the boot services
is once you've got the operating system up and going,
all the boot services code is discarded.
And that way, it could actually still be a clean KExec.
So the kernel provides the little bits of UEFI Windows
needs until it can fully handle it.
Yes, right.
So you start KExecing.
You get the Windows Bootloader going.
You give it a little EFI stuff.
It calls exit boot services.
All that Linux code is gone, and Windows is off the go.
It's clean Windows.
Yep.
Wow.
Another part that was neat about this is,
this was a post up, because Google's
been working on Linux boot, which
is a project to replace as much of the EFI stack with Linux
as we can.
So that's where this is going to be useful.
On Twitter, someone else who just that day,
this was like a week or two ago, had
got Windows doing the same thing,
running with a custom kernel module.
So it seems to be multiple parties are interested in that.
And hopefully, that means there's
enough momentum to actually get this polished and merged
somewhere.
What I like about this is, when I installed my T480 ThinkPad,
I said to myself, I will never dual boot this machine.
This will always only run Linux.
And I've held true to that.
I have come up with ways to, well, I've
done PCI-paster to get accelerated Windows if I need.
Ironically, I never need it.
But I got it working.
I use it mostly to just accelerate other Linux distros.
But this could be another great way
to have a Linux system with a Windows
install sitting around somewhere on the disk
that you could boot up when you need it
and have full hardware, full performance.
Gosh, this is crazy stuff.
It's also just neat, because this was never really intended.
It's not like Microsoft has blessed this.
It's just some really good hacking in the old school
sense.
Well, you know, like they say, most of Azure runs Linux.
So maybe they'll just bite the bullet,
switch everything to Linux, and then
just kegzak into Windows when they need it all to Azure.
Amazing.
Ha ha ha ha.
All right, let's do a little bit of that housekeeping
here on the old show.
We've got a few things to cover.
A local event is just near wrapping up its call
for papers, Seagull 2019.
It is August.
I think your deadline is August 11.
And we're recording on the 6th right now.
Get them in now.
Yeah, so get it in.
Get it in.
And then the Seagull itself runs November 15
through the 16th.
You've done a talk there before.
Yeah, two years ago.
It was a really good time.
They were great to the presenters.
So if you want to get involved, super friendly,
accommodating conference.
I know last year they had childcare available.
So they really care about the people coming
to the conference, whether you're presenting
or just want to attend.
And it's just a great spot in downtown Seattle, too.
Oh, yeah, beautiful.
If you want an excuse to come visit the city,
I can't think of a better one.
You go down there.
You attend a great event.
And then there's a great evening to be had.
I'll also add their CFP page has just some great references.
If you're giving a talk somewhere else,
they've got a ton of good links for how do you
assess what audience you're talking to,
or just some good tips on presentations.
Good to know.
Yeah, that is really handy to get you going, isn't it?
Yeah, it is.
Yeah.
Also, congratulations to the hard, hardworking individuals
behind the scenes here at Linux Academy
to get the new website launched.
If you haven't seen linuxacademy.com in a little bit,
go check out the new website.
It's looking sharp.
I was in some meetings when they were putting this together.
And I'm just going to say, another site's gone dark.
Dark mode for the web.
They did a fantastic job, man.
The product team over there, Alex and Joelle and Ingrid
and all those people over there at Linux Academy,
have been eyeing it and kind of seeing it
as it's being developed.
And the artwork and the new styling
and it's pretty legit, man.
I like it a lot.
They did a great job.
It's the best looking training website ever.
I mean, it's just gorgeous.
They've just done a killer job.
Linuxacademy.com to check that out.
Also, if you haven't checked out the community section
for a while, there's some free stuff over there.
And now 180 plus Linux Academy courses have transcripts.
There's more.
It's actually landing all the time.
Another batch lands tomorrow.
Future courses are launching with transcripts.
And they're interactive transcripts.
So you can get time codes and stuff.
You can jump around to that.
We might just have to steal how they did that,
because I want that for our stuff.
It's super cool.
It's super impressive.
I mean, it's a lot of engineering.
And the end result is just great for actually using it
to learn.
Yeah, accessibility and to learn.
I think it's really cool.
And one last thing while we're talking about it,
they're doing some swag giveaways
for the YouTube channel, Linux Academy Com.
If you are a community member or a paid member
or you subscribe to the YouTube channel,
there's a form we'll have linked in the show notes
at linuxunplugged.com slash 313 for a swag giveaway,
special, limited edition.
Oh, limited edition.
It's a great team of designers at Linux Academy.
She's just part of, and he's a great designer himself.
But the whole team, like the stuff
they come up with, the website, the art for, the courseware,
and the swag, like the best swag.
Such swag.
I want to know how I get my hands on that swag.
I wonder if they'll make that available to staff.
Can we get an inside deal?
I got some good swag.
So check that out.
Also, the call for paper is coming up soon.
If you're going to be at Seagull, let us know.
Head over to our telegram group,
Jupiterbroadcasting.com slash telegram.
Jump in there and let us know if you're going to be at Seagull.
We're trying to get our Seagull game plan together,
and we'd like to hear from you.
Get some JB critical mass.
That could be a thing.
So let's start organizing now to see what we can get together
for November.
All right, so I've been kicking around the Raspberry Pi
4 as a workstation for a week.
That's how it was pitched.
So I dropped like 100 and change on the desktop kit.
Not so much overall, really.
I mean, really, if you think about what computers used to cost
and what you used to get, this is not bad, really, overall.
The specs of this thing are pretty remarkable
when you compare just like some of my first computers as a kid.
I got the 4 gig RAM edition.
That's what comes in the desktop kit.
It doesn't come with any passive cooling,
and it does come in an enclosure.
And I have pictures of the unboxing of the enclosure.
It's a really nice enclosure.
It looks sharp.
The keyboard is nice.
It feels pretty good compared to a lot of smart keyboards.
It's a pretty lightweight keyboard.
It's got a little USB hub built into it, which is very nice.
It also includes in the box the official Raspberry Pi
beginner's guide and everything you
need to get going, including the mouse and the power supply.
I'm kind of curious about that beginner's guide.
Is it walking you through?
Does it have screenshots of the desktop
and kind of explaining the system to you?
I'm not sure.
Wes will go see if he can find it, because I didn't.
I don't open the manual, cheese.
I think that it's super awesome that they actually
shipped a device with a manual.
You remember actually getting a physical distro
that had a 500-page manual in it back in the day?
Love that.
For sure.
So it's a real book.
It's a genuine book.
It feels good in the hands.
Quality paper.
He's got it here, he grabbed it.
So what is it?
Is it a walkthrough of Raspbian?
Yeah, and there's a bunch of projects in here.
I'm seeing some code, and it's got you opening up Chromium
and navigating the desktop, but nicely labeled.
Current screenshots, wow.
Oh, yeah, it was updated for Raspberry Pi 4.
Really, really glossy print, too.
But it's also got some nice prints of the board
to show you where all the ports are and what they do.
This is a really, really good book.
Yeah, that's a really good book.
Wow.
It's got stuff for you can get other kits for it.
Here's programming to light up LED board
that you can attach to the Pi.
You know what's funny is I've seen this book,
and I never thought to get it.
And now I'm kind of glad I have it.
The Raspberry Pi 4 is, it feels like if you're not
super familiar with the Raspberry Pis,
it looks like a regular Raspberry Pi,
maybe slightly larger.
The ethernet and USB ports are switched around.
And the most notable change for me
is the power input is now a USB-C connector.
And gone is the full size HDMI output
replaced with two micro HDMI connectors.
Now, the desktop kit does come with two cables
for HDMI in the box, which is nice because I needed that.
And it's regular HDMI on one end, micro on the other side.
And it is undoubtedly a faster machine.
It has a 1.5 gigahertz quad arm V8, a 64-bit processor.
Raspbian ships in 32-bit mode.
The GPU is a Broadcom video core at 500 megahertz.
Mine was a four gigabyte model, but you can also
get it in one or two gigabytes.
Side note, if you don't need the four gigabytes,
you may want to consider the two gigabyte model
because it comes with a passive cooler, I've been told.
It has a gigabit ethernet as well as 2.4 and 5 gigahertz
Wi-Fi, Bluetooth 5.0, microSD for the storage.
Of course, it's got the classic GPIO 40-pin header.
And it's loaded with USB.
It's got two USB 2s and two USB 3s,
as well as full gigabit and Wi-Fi now
because they're actually on their own controllers.
They're not shared on the USB bus.
Pretty much the universal Raspberry Pi complaint.
Yeah, it really changes everything.
I mean, it makes everything, it makes this a real production
usable machine.
And so I really wanted, I was skeptical.
And I'll say right up front, it's not going to be my desktop.
And I have no illusions of replacing an x86 machine
from the last few years with this thing.
It, to me, feels like a machine from around 2011, 2010
with a decent processor, four gigs of RAM,
and a spinning hard drive.
And I was using SD storage.
So as they begin to support booting from USB storage,
I'll try again with a USB 3 SSD.
I bet it would be better.
I'm sure it would be.
But the overall desktop, for me, kind of meh.
I could see it definitely working anywhere
where a computer that takes a little while to open up
your web browser, sometimes it takes a while for the next tab
to open, it feels like a spinning rust machine.
Anywhere where that workload is acceptable,
you may get away with a Raspberry Pi.
For most of the history of mankind's computing,
totally usable if you're a desktop power user,
you're going to hate it.
Yeah.
So I did some thorough benchmarking on this thing.
Oh, boy.
I love the Ferronix test suite.
Talked about it many times on this show before.
And you combine that with the Open Benchmark website,
you can compare your system to any system that's
ever submitted their benchmarks to the Open Benchmark website.
It's so cool.
So I could compare this Raspberry Pi for,
I went to machines as far back as 2011.
And I was able to get a whole range of machines
that I could compare this thing to.
And as long as they performed the same types of tests
that I did.
And we did CPU performance, we did memory performance tests,
we did audio encoding tests.
I attempted to do video encoding,
but that test failed on the Raspberry Pi 4.
So I decided to try to find where this machine sort of fits
when compared to an x86 machine.
If you could buy an x86 machine, how much
would you have to spend to have comparable performance
to a Raspberry Pi 4?
I thought that'd be kind of interesting.
Kind of the reverse here, you're trying to optimize low.
Can we find a cheap x86 that?
Yeah, how much would that cost?
I know it's kind of a backwards way to think about it.
But when you get a Raspberry Pi with this kind of performance,
it gets to this awkward middle ground
where it's a little bit faster than an older x86 machine
at some operations and slower at others.
And it's kind of like, is this a job now for a Raspberry Pi,
or is this a job for a NUC, a used NUC or something?
We're getting in that range.
And so I compared this to an Intel Core 2 Quad.
And I know that seems a little odd,
but that's actually, this is a 2011 system
that has a 2.4 gigahertz, four cores, and four gigabytes
of RAM.
And what these tests will show, and they're all
linked in the show notes.
And by the way, if you're curious how your Raspberry
Pi stacks up or your own desktop or laptop,
one of the great things about the Phronics test suite
is you can use my URL I have in the show notes,
and you can compare your system.
It'll run the exact same tests, and then
it'll generate those bars you've seen on the Phronics websites.
It'll generate those charts to show you
how your machine differs from my machine.
That's all linked in the show notes
if you'd like to compare how your system would perform.
What was interesting is when it came to a lot of CPU tests,
the Raspberry Pi 4 would lag behind a moderate 2011 Intel
system.
I compared it to quad cores and dual core systems.
And in almost all CPU-bound tasks,
the Raspberry Pi 4 was notably slower.
Right, not out of this world, not
a different order of magnitude, but noticeably slower.
Generally, like in a lot of the audio encoding tasks,
it was 10 seconds slower than some of these Intel systems.
But in aggregate, that adds up.
Which kind of adds up, right?
And it kind of makes sense with the other things we've seen.
Totally usable.
You could do those things there, but if you do them
all the time, it's going to be painful.
Where it surprised me and pulled ahead,
and not too surprising when you consider
the age of these systems, is operations
that were more memory-bound, memory performance tests,
the Raspberry Pi 4 often performed much better.
Not at all tasks, but often, on the average,
performed better than the Intel systems.
So if you're doing things in memory
on an embedded system, a Raspberry Pi, in this case,
would actually be potentially a faster system
than an old, used Intel box you have laying around the house.
And it's, without a question, using way less power,
and likely making a lot less noise, too.
And I mean, that makes sense, too,
unless you're doing serious crunching and work on your Pi.
Probably a lot of times, you have other devices attached
to it, and you just need those CPUs to shuffle bits around.
Yeah, which we'll talk about here in just a second.
So the question of, how much would you have to spend
on an x86 machine to beat the Raspberry Pi in performance?
If you're willing to go used, and I think, in this case,
you should, we have a link to an example PC
at PCLiquidators.com.
$54.99 gets you an Intel Core 2 Duo at 2.93 gigahertz,
4 gigs of RAM, and a 250 gigabyte hard drive.
And this system, based on the systems
I was able to compare it to on the Ferronix Open Benchmark
website, would perform faster than a Raspberry Pi 4.
So a $54 used x86.
It's louder.
It's going to put out more heat.
It's going to use more power.
There's not as big of a community around it.
There's lots of other downsides.
But just as a reference point now,
we're starting to get around a 2011 kind of performance,
a little bit maybe 2010 performance of an x86 desktop
on a $35, $45 computer.
Yeah, that has modern Wi-Fi, and modern ports, and a huge
community, and lots of little gadgets, and dongles,
and accessories for it, too.
So my walk away from my week with the Raspberry Pi
as a desktop is I probably won't continue to really use it
as a desktop for me.
I could definitely see myself, like if I wanted a workbench
computer that I could look stuff up, have a terminal,
do some quick Google searches, 100%.
Yeah, just as a computer to leave around somewhere extra
just in case.
Great.
I mean, with the desktop kit, you've got everything you need.
You've got absolutely everything you need except for a screen.
And I've got screens floating around.
I bet everyone does.
So I could totally, absolutely see myself
using it in that scenario.
But where I really see myself putting it in production now
is more like a component of a wider home system
now with the networking options, and now the faster storage
options, and the faster CPU.
This thing can do real image processing for me.
It can do some real actual tasks.
And I want to recommend that people
take a look at the Flick case.
I think the Flirrk case.
I bought them before.
They now have one in production for the Raspberry Pi 4.
We'll link to some information.
It shows genuine reductions in the thermals for the Raspberry
Pi 4 using this case.
So something you want to consider
if you're going to put this thing in long-term production.
Also, if you look on Thingiverse,
you'll see a community building up around now
the new Raspberry Pi 4, including a wicked awesome NAS
enclosure that Alex found that accommodates
a top slot for the Raspberry Pi 4.
And then underneath it is room for SATA drives,
like large drives.
And they have different sizes.
They have some where you can print with the NextCloud logo
on the side.
It's a DIY NAS enclosure for the Raspberry Pi 4
that has some cross-ventilation on it.
And people are starting to design cases already
to accommodate its higher heat profile.
My problem with the Raspberry Pi 4 is I have a 3B+.
And I use it to do octo print for my 3D printer.
It's wonderful for that.
But my issue with the Raspberry Pi 4
is that by the time you buy the 4 gigabyte model,
you buy a keyboard, a mouse, and all the rest of it.
With this desktop kit, you're looking at, what, $120 US?
If you get the desktop kit.
I just built an x86 system to run PFSense around an i5
third gen.
So I think it was a 3470T or something, low power.
Pulls about 10, maybe 12 watts from the wall.
Has significantly better performance, of course,
than a Pi 4.
And that cost me $100 US.
This puts, for me, the Raspberry Pi
in a really awkward situation.
Yes, you've got the network effect, the community,
the people on Thingiverse, all the rest of it.
But without some kind of way to remove the SD boot situation,
because that really hurts performance of apt update,
et cetera.
It's just in a really awkward spot
now it costs in that $100 price point.
I think it still has some significant advantages.
I wouldn't underplay the community effect.
There's so many images available,
especially for some of the stuff we're
going to talk about here in a moment.
You just pop it on, it's good to go.
That makes it approachable to a lot of people.
Yeah, I think it is, you're right,
in an awkward spot of if you just need a box that you're
already experienced, you don't mind
playing around on the Linux command line maybe,
then yeah, there's a lot of options there.
But if you do maybe want a project for someone,
or you might not want a FUTZ, and you
do want to treat it very appliance,
the Pi is kind of unique.
But this, Alex, was the central struggle of my review.
Before the show started, I was not looking forward to this
at all, because I bought the Raspberry Pi 4 thinking,
finally this will be the Raspberry Pi for me
that's fast enough, it's got enough RAM,
now I can really use this sucker.
And I ended up kind of thinking exactly what you're thinking.
Boy, in most cases, I could use some NUCs
that I have in the studio that I didn't want
to use in production anymore.
And for the other stuff, I could probably
just use VMs, which would also be a little bit faster.
And I don't really know where the Raspberry Pi fits anymore.
It was exactly the opposite of my expectations.
My expectations were, this would finally
make it the perfect fit.
And instead, I'm even more lost.
And so what Wes and I had to do was
we spent the last two days putting our heads together,
coming up with various different uses that really are
perfect for the Raspberry Pi, like jobs that are
great for the Raspberry Pi.
And we've been slamming it into various different use cases.
And we've landed on one that I think I like a lot,
that I would never use an x86 PC for.
So that, you know, but I'm with you.
The Raspberry Pi 4 muddies that question more
than it answers it.
So back in 2012, I used it as a Raspberry MC box
way before LibreELEC and all the rest of it.
And it had pretty decent performance
and was able to, for the price of $35,
outperform anything in its price point.
But now we have this huge market of small system boards
like the Pi.
Cheese has a whole collection, I think.
And what the Raspberry Pi 1 did was
it showed that there was a market for that sort of sub $50
single board computer.
And whether the Pi 4 has knocked it out the park,
I think, is questionable, simply because they've
given you that option to go to the 4 gig.
So I'm now evaluating it as a $55 device
rather than a $35 device.
And that really changes the game somewhat.
I agree, only in so much that I think only us geeks kind of
care about that.
I think the general public, you know,
a dad and a kid or a mom and a daughter or a teacher
in a class or whatever the scenario is where they,
you know, it's people that are not inherently
familiar with the options.
They need something that they recognize,
something they can order on Amazon.
And the Raspberry Pi really fits that.
But only us geeks care about it anyway, don't we?
I don't know.
I think the Raspberry Pi is one of those things that,
like I say, it's in schools.
It's a good teaching thing.
I mean, it was originally really all about learning Python.
And I think that those are roots have given it success
in some of those communities.
So Cheesy, you understand the struggle, too,
because you and I were talking about this.
And I know you've been working on kind of a neat implementation
for your Raspberry Pi.
So why don't you kick us off with some actual practical
uses for this thing that's getting crazy fast.
And really, even the older Raspberry Pis
were fast enough to do some of this stuff.
Yeah, so I mean, I've been using the Raspberry Pi, man,
since the OG B model.
But there are still some really great uses.
And one that I came across recently
was Shinobi, which is basically just a network video recorder.
The ZoneMinder, where ZoneMinder kind of ended,
Shinobi has kind of picked up and taken off from them.
So it's Node.js, super nice, super simple to install.
Right now, I have it hooked up to a FozCam that's just
running the RTSP stream.
I'm sitting, and this is on the 3,
I'm sitting at 3% CPU usage, about 250 megs of RAM.
And I've been recording kind of clips throughout the day.
And I've used like 300 megabytes of storage.
You can also add additional devices easily into Shinobi.
So if you have additional cameras,
there's so many settings.
I haven't had an opportunity to dive in and deep dive
into every little setting yet.
But there's a ton of different stuff in there.
The only thing that I haven't found,
that I'm sure some other solutions,
because I know there are some other NVR and surveillance
camera solutions for the Pi, I haven't found the plug-in
to allow me to do motion detection yet.
Granted, I've only been messing it for maybe an hour
and a half, two hours.
Let me take over from here then, my friend.
So we've been messing around with something a bit similar.
You can go deep, or you can go light.
And we kind of went kind of light and thin
with our implementation.
So we actually just did something
on top of the Raspbian image that came on the SD card.
So this is pretty low barrier to entry.
And then we integrated it with a wider automation system.
And this little task that we ended up doing,
and I finally got around to trying,
because I had a reason to with the Raspberry Pi 4,
has opened my mind to an amazing world of possibilities
and fun geeky projects that could
keep me busy for a year flat.
Yeah, that's sincere.
He's actually legitimately excited.
I'm so happy about this.
I mean, you could make an entire show out of this stuff.
It's so good.
So Wes, why don't we start at the beginning?
We're using a Raspberry Pi with a Logitech webcam,
just something you bought off of Amazon.
This one's a C930, because we have a few of those
around the studio, plugged into the USB 2
port on the Raspberry Pi 4.
And then we're running some open source software
to do a little bit of image magic.
Oh, yeah.
And you found it originally, funny enough,
as, of course, a bespoke distribution for the Pi
called Motion IOS.
But as is true, with the Pi 4 being relatively new,
it didn't have an updated image yet.
But it has great support just right in there.
It turns out most of the packages we need
were already in Raspbian.
So all I had to do was get it installed,
which turned out to be fascinatingly simple.
So it's just the package that you want.
It's just called Motion, is that what it's called?
So there's multiple components.
Yeah.
So Motion is the back end system that
can talk to all the cameras, configure them, add them,
and then actually watch them for motion.
And then we're using a project on top called Motion I, which
provides us a slick little GUI in the web
that you can then go configure motion in the back end
and just watch all your streams.
Yeah, it gives you a place to aggregate the cameras.
So you can have a heads up if you had a bunch of cameras.
You can have them all on there.
You can tweak all of the camera settings,
like the res and the refresh rates and the frame rates.
But this web interface also lets you set up a little web hook.
Yeah, it's exactly what you might
want as a nerdy customizer, because you
can run a custom command.
You can send an HTTP request with a web hook,
like whatever you need.
So now we've got that tied back into the Home Assistant we just
got set up at the studio.
Now Motion, as the name implies, is
watching a camera feed for motion,
and then it is triggering an event when
it's detected in that frame.
It's then essentially notifying our Home Assistant install
that an event has happened.
And then what are we doing after Home Assistant becomes aware
that Motion's been detected?
Well, then you can do whatever you want.
Home Assistant's got some neat automation support, right?
So you can have it trigger off a state of something
attached on your network, or it has its own web hook provider.
So once the web comes in, you can then
interact with anything else you want.
In our case, we're just having it turn off and on the light
when we enter a room.
But that was just a test case.
Yeah, we just quickly just grabbed a random old Wemo
smart plug that hadn't been used in probably two years
and plugged it in, got it updated.
Home Assistant detected it.
Wes got it working after getting a manual Wemo integration
set up, which didn't take him too long.
And then it was just a device that you
could include in your overall actions
when something happens.
Yeah.
I've only been using this just in the past couple of days.
But it is nice in that you can support just regular old
devices that are supported on Linux, plugged in over USB.
Or you can do stuff like RTMP or RTSP.
And if maybe you're not an expert with those things,
if you're running MotionEye on multiple systems,
you can interconnect.
It basically exposes that video as a stream outside, too.
So you can connect them all together however you need.
And here's where it gets pretty neat.
So it gives you a lot of options.
First of all, it's clear how you could use this
in a security scenario.
Sure.
It's also nice from a safety scenario.
You have lights turn on when you enter a room.
But what I'm ultimately going for is presence awareness.
And I want multiple levels of presence awareness.
I want motion detectors to know when I'm in a certain room.
I want a location service that notifies Home Assistant.
I want Home Assistant to be communicating with my garage
door so when the garage door at the studio is opened.
All these are different data points
that I can use to automate things.
But you can also use a system like this
in a really relatively low-fi, low-key sort of security
implementation.
So the use case for us is I have a property with a barn on it.
It's family property.
And often when I'm traveling, we like to keep an eye on it.
And I could deploy these Raspberry Pis.
In this case, I only need to monitor two spots.
So one spot, I could physically place the Raspberry Pi
and put a camera on a door.
And if motion's detected, it can alert me.
And there's another spot that's about, well,
it's really on the other side of the barn.
So it's a distance where I could put a network camera that
could feed Motion Eye over RTSP.
Because it can take in video for Linux.
It can take in the Pi camera module itself.
Or it can take in an RTSP stream.
And so that's a lot of different cameras.
You could all of a sudden pull into this thing
and start watching for motion.
And so with a relatively small setup, one Raspberry Pi 4,
and I take my Ting MiFi and have this thing sitting there.
So if I need to access it or it needs to send me an alert,
it has internet.
But because everything would be on the Pi,
it wouldn't be using the internet otherwise.
There's no cloud connectivity.
And it can do some of those other similar things.
You can have it export a movie, say,
of an x amount of time around when the motion was detected.
It can send you an email when it does detect motion.
So I can get the picture sent to me.
Yeah, you can get a still picture.
So it's a great way to keep an eye on things
at the barn for a pretty low price.
I've already got the cameras.
It's a webcam and an old, crappy, wireless camera
from like 10 years ago.
But you know, it's good enough to detect motion.
And it pivots.
It moves around.
So it's actually kind of a perfect use for this.
And I'm not using it for anything else.
So I actually think this would be a great use for it.
And I wouldn't want to put an x86 PC in a barn
that I'm not at.
But there's a perfect shelf that has a power plug there
that I can put this on.
I have a Ting MiFi that I'm not using right now
that I'll just set right next to it.
So it always has internet connectivity
whether I'm there or not.
Nice to have a little box too, right?
You can SSH in there if you need to for some reason.
Some here.
It's like you're there.
Does motion allow you to stream multiple cameras at once?
And does motion also allow you to have multiple accounts
creation so that you can, let's say, group cameras
or restrict cameras to user level access?
So let's say if I wanted my mom to have access
to my outdoor cameras but not the indoor cameras,
I could set up an account within Shinobi
to only limit her to see these specific cameras.
And she could even add in her own cameras with her own link.
This is a second recommendation for Shinobi from me.
And a little bit of secret information.
Linux server will be releasing a Docker of Shinobi pretty soon.
That's great.
That's great.
Yeah, so the MotionEye web software
will allow you to add multiple cameras.
Does it do users though, Wes?
It has some users.
I've not played with that yet.
So it might be something to look into.
I kind of wonder if, see, I think
we have two different use cases here, really.
Because motion for us, the primary use case
we're trying to get out of it is motion detection in a video
to then trigger automation events.
I think if you're looking for actual surveillance footage.
More CCTV stuff, Shinobi seems like it's just great.
Right.
I'm not really going for that.
I'm not going to be reviewing the footage.
I don't want to watch people.
I just want to use webcams that I have as a motion sensor
to trigger further automation.
So that's why it's nice for me.
I'm pretty sure that Shinobi can also
do that, where you can tie into it, like the, what is it,
the IFTT or whatever.
Yeah, they may have like a webhook thing.
That'd be awesome.
If there was only a container of it
that I could try out right now.
Oh, jeez.
Well, there is.
Shinobi might one as well.
But Linux serve, obviously, the permissions thing.
And we might give it a go.
You know, it wouldn't be bad.
It wouldn't be bad to have both, right?
I think the nice thing about motion
that I liked a lot about it was that it was just
a really quick install from the repos,
and now we have motion detection.
Yeah, like looking at some of the Shinobi docs,
it seems like just fine there is motion detection,
but there's a little more going on.
And probably this isn't the best or most sophisticated motion
detection, but you're right.
It kind of hit the sweet spot of installed it straight
from the repo, not a lot of dependencies.
And I mean, it's worked for us so far.
And you can throw it on a Raspberry Pi.
I mean, we have a stack of Raspberry Pis around here.
The Pi 4 is doing great.
I'm watching a 30 FPS video.
It's streaming right now from the camera, no problem.
That's what I'm saying.
It's like the Pi 4 has the horsepower
now to do some of this camera stuff
and really keep up with the networking too, which is nice.
Have you considered doing something like a Kubernetes
cluster with them?
I mean, have I considered it?
No.
Am I aware that people are maniacs like that?
Yes, I am aware.
I mean, I guess if you had a whole bunch of Pi apps
you wanted to run, why not?
Well, it's a great educational opportunity too.
It is just great for that.
So yeah, so there are a couple of things
you need to know if you're thinking about buying one.
Because I know some people are waiting for them
to be more generally available.
As you heard us mention, USB boot doesn't work yet.
Also, Pixie boot does not work.
They say that's coming.
Oh, nice.
Some USB-C chargers don't work, specifically the smarter ones.
So watch out for that.
Just for now, get an official one.
And in general, it's more prone to throttling.
Ours, the desktop kit, comes in a plastic case.
And when I started benchmarking it the first day,
it made the entire room stink of plastic.
Because it had heated up the plastic molding.
And as the plastic heated, it released that chemical smell.
And even today, a week later, when I open up the Raspberry
Pi to see if it had a cooler or not,
because I couldn't remember, which it does not,
I got a big face full of that plastic smell.
It's running hot.
And around four minutes of it running out full blast,
it starts throttling pretty noticeably.
That said, if you're browsing the web,
you're doing stuff like bursty here and there,
you generally don't even see it.
It's not a huge deal.
You throw a proper cooler on that thing,
you'll get even more mileage out of it.
And the 4 gig RAM edition is very hard to get your hands on.
The 2 gig and 1 gig are much more readily available right
now.
Keep in mind, when Raspbian ships on it,
it's shipping in 32-bit, even though it's a 64-bit processor.
You only got 4 gigs of RAM anyways, though,
so it doesn't really matter.
Overall, I think it is probably my favorite Raspberry Pi.
And I asked the audience what they're using theirs for.
Seth says that these days, he uses one as a print server
for his i3D printer.
He uses Octopi.
And I think I've heard a few people say they use it for that.
Lenny says he uses his Raspberry Pi as a transmission server.
Oh, nice.
This is a good use for that.
Of course, several people wrote in and said they use Kodi.
They use it for Kodi.
Absolutely.
Which was my first go-to, but I was like,
no, I want to come up with something that's not Kodi.
Because that's like everybody expects that.
I thought this one was interesting.
Salton says he uses it as a co-turn server.
And he's planning to set up also to use it as a NextCloud Talk
server in the future.
And he uses his other Raspberry Pi as a Kodi box.
Excellent.
I'm sure it runs PyHole just great, too.
Yeah, lots of PyHoles came in.
And then Lewis said Cheesy uses it
as an SSH server, which he then hops to the other boxes.
Also, the other one is a Plex server.
And another one, dang, as NextCloud NAS.
And to your point, Alex, planning
to eventually set up a four-node Kubernetes Pi cluster.
Beautiful.
Nice.
And you can't forget the PyHole either, you know?
No, you've got to have the PyHole.
We've talked about that.
The only reason I didn't bring it up
is because we did a whole episode on it.
So that's in the back catalog.
But worth checking out if you don't
know what we're talking about.
That's also a very good use for the Raspberry Pi.
So check out my links when we're in the benchmark sections
of the show notes.
Because that's where you can get my particular tests
that you can compare.
One of the really, really neat things about the Open Benchmark
website is they have a big old identifier hash
at the end of the URL.
You can copy that and do a comma and append it to another one.
And you can compare any system that way.
And you can add another comma and compare another one.
And the website will generate the charts and graphs
to show you all the different systems.
So it's really nice.
If you've done some benchmarks in the past,
you can just go grab my test ID and my identifier
and then just add a comma, paste it in there,
compare it to yours, see if it's worth an upgrade.
You can just see it right there.
And it's funny because I have my own.
I compared it to some of my old systems
that we've had in for review over the years that
are up on Open Benchmark, just to kind of see where it was.
That's fantastic.
So I could kind of get an idea, like,
where does it land in the generation of intels?
And that's pretty neat.
That's all in there.
All right.
One last bit of business before we get out of here.
We have a pic that we've been sitting on for a little while.
Like, this pic needs a round of applause.
It's so good because it's finally
broken us of the Google Docs habit.
Ladies and gentlemen, I introduce you to Kodi MD.
The funny part here is I was just going to go look this up.
I wanted to pull the link up for myself
as we're doing the show.
But of course, you're doing it from Kodi MD.
Yeah, I am.
It's a real-time collaborative markdown editor
that is a web-based application.
And its collaborative editing is better than Google Docs.
And one of my favorite things about it,
it has three editing modes, Sublime, Emacs, and Vim,
which is amazing.
You should see Wes whip around this thing in Vim mode.
It's great.
Oh, it's beautiful.
And we've been trying it out internally
because, honestly, we've been down this road 100 times
and ended up back in the embrace of Google Docs.
But being able to self-host this one in particular
on our own system, the real-time updates
are better than Google Docs, the great support for markdown,
the multiple editing modes, including you've
got markdown split pane mode with markdown
on one side, real-time update and rendering
on the other side.
It works for the way I tend to do live shows, where
I need links in a certain format where I can click on them
while I'm talking.
So it checks boxes that I have personally
for how I present on air.
But it's also just such a great editor
that I use it for just my general notes.
And I'm seeing more and more.
It's just taking off.
I'm seeing more and more people use it.
I'm seeing open source projects start to use it.
I'm seeing podcasts that are using it.
It's a really good tool.
And I think it's just time we gave it some love,
because we've been using it internally,
kind of holding our breath.
I mean, initially, like literally,
I think the words you use when you put it up on our system
was, well, I tossed it up on there.
So I mean, I think it's working.
And then we just started using it, and we have not gone back.
And it's been a while now.
So check out KodiMD.
I think their name is about to change.
And so keep an eye out for that, but we'll
have a link in the show notes.
I've seen some.
I followed one of their change logs,
and they're talking about a name change in there.
I don't know.
I don't know.
Well, and it should be said, too,
that I think we've had up to seven or eight people
collaborating on one document at one time in real time,
seven people on one document.
There's been zero hiccups.
No, you know, they're all working.
Especially if they're not in a different area of the doc
futzing with stuff.
You just keep going.
And then our last pick, TopGrade,
which upgrades everything.
Who found this one?
That'd be me.
Yeah, all right, Cheesy.
Tell me about this.
Lazy Chees.
So TopGrade, essentially, we all install all of the things
on our systems.
TopGrade supports Arch, Red Hat, Debian, Gentoo, Soos,
Void, Dragonfly, the BSDs, Mac OS, and Windows.
And it basically will update all of the things.
So whether that be PIP package or Vim, Neo Vim packages,
Python from PIPX, just regular updates, ZHS shell updates.
I mean, everything you could want to do, essentially.
Upgrades for your Windows subsystem for Linux
under Windows.
So basically one tool to kind of rule them all as far
as updating your system and keeping it up to date.
OK, this sounds actually pretty sweet.
Yeah, I was going to mock you for like,
is this like a meta package manager?
Wait, also, it's written in Rust.
All right, well, I'm in.
I'm done.
That's it.
That's it.
That's all I needed.
There you have it right there.
Atom packages, Flatpak, Snaps, so all of the things, man.
I hadn't really appreciated the fact
that I got to run several different updaters now.
You're right.
That's really annoying.
And this does solve that.
Jeez, you solved a problem before I knew it was a problem.
I knew I hired you for a reason.
All right, well, there you have it, everybody.
Popey was in and out, so I think that means he's probably
going to be back on the Ubuntu podcast very soon.
So if you haven't caught that recently,
go check that out at ubuntupodcast.org.
And he's also on my favorite podcast in the whole world,
User Air.
So go check that out at, is it air.show or user air.show?
Air.show.
Air.show.
See, I don't know, because I just
subscribed to my podcast player.
That's way easier.
It is.
You can also do that for this show.
In fact, would you believe this here show
is in the top 60 technology podcasts on all of iTunes
in the US very frequently?
Say what?
I can't say top 50 yet.
But we could crack it.
If you go over there and give us a thumbs up
and a review on iTunes, and I know only a few of you use it.
If you use Apple Podcasts, more of you use that.
We could use your help.
We may crack the top 50 in all tech podcasts
in the United States.
And we're crushing it in some other countries too.
So actually, call out to those of you outside the US.
Amazing.
I know.
It's actually really neat.
Help spread the good word to Linux.
It's called Humble Linux Podcast.
All right.
See you back here next Tuesday.
Ah!
Thank you so much for listening!
All right, let's pick our title.
You know, I just ran download because it's Rust, right?
So you just download the tar and there's a single executable in there and away you go.
So it's upgrading all my things.
I'm not even sure I know how to really update Emacs packages, you know, by hand, but that's
fine now because they're done.
I'm going to try it on my Fedora box.
And here's all the gems.
All right.
Wow.
Really?
That's pretty neat.
Yeah.
So I was about to give cheese a hard time for not using Ansible or something, and then
I actually read what it did and then shut up because that is amazing.
Good job.
Good find.
Well, you know, I know that I've ran into that problem where, you know, I've had additional
pip packages or something that I've installed and yeah, no one checks those things.
No, right.
Yeah.
Like, you know, I'll have to update whatever I'll, you know, and but I never think to update
that pip package.
So having something that I can just boom, any package that's essentially on the system
gets updated.
And I didn't run brew upgrade on my Mac for a year plus.
The only time I ever update YouTube DL is when it fails to download.
Oh, right.
I need to go update that.
So now it's on.
I'm on like the YouTube DL direct track.
Yes.
Getting the good stuff direct.
Yeah, that's right.
Well, I wasn't exaggerating.
I feel like like this, the stuff that just we just touched the surface of Home Assistant
and it was like like a new world has opened up to me.
I'm wow.
Yeah, man.
And I told you in my talk at Linux Fest Northwest, right?
I know.
You have to solve a real world problem.
And then it's just like your eyes just light up and you're like, this is amazing.
It's like I talked about just kind of like a revelation I had with Docker and containers
on Coder recently.
It's like when I get my hands on it, like there's the practical and then there's the
hands on.
And when you go hands on, it's for me, it's just a whole nother level of appreciation
and fascination.
It's direct meaning, you know, you can actually see it's solving problems that you couldn't
solve before.
Well, Poppy, it was great to have you on the show today.
Welcome back, sir.
How was the travel?
It was good.
Suffering from jet lag.
It's too late.
It's gone.
No, it's gone.
We'll just do it.
Do you want to?
I mean, if you if you can join us on the Chrome app, if you want, but then you just have to
record locally is the only downside.
No.
No.
All right.
Well, it was good having you.
Linux sucks.
Yeah.
That's it.
I'm switching to Windows.
All right.
Well, it was good seeing you.
Glad you could join us.
If you can get installed by the end of the show, come back on.
Love you all.
Love you, Poppy.
