See if you can place this.
Can you place that sound?
That's the fatal error from Windows XP.
Nope, no, it's a sound.
Yeah, the the from from way back when the Ubuntu.
The proper file name is Ubuntu question dog.
It's the info question thing that that played in like Ubuntu
four to ten all the way to a ten ten, I think.
Yep. All right.
Now, see if you can place what era this Ubuntu
startup sound came from.
Oh, man, it feels I know, right?
It gets me right in the nostalgia.
That was from the very beginning all the way until Unity.
I miss those sounds now that I hear it.
Actually, no, they used them in Unity all the way until I think,
what was it, 1404?
I think it was 1404 when they stopped doing it.
Good question.
You know, there's still a dead package you can download.
So, yeah, yeah, you can still.
That's how we got it.
Damn it. Now I want that on my computer and maybe your phone.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris. My name is Wes.
And my name is Brent. Hello, gentlemen.
As you know, we'd like to thank a cloud guru for sponsoring this episode.
For Black Friday, a cloud guru has 40 percent off
their personal annual plans. That's right.
40 percent off.
Go build your cloud skills with hundreds of courses, thousands of labs
and real sandbox environments.
Visit a cloud guru dot com and save big for the best cloud learning.
All right. Well, coming up on the show today,
this episode is really about revisiting old assumptions
about open source projects and once again, learning the value
of going back to something that you made,
maybe a decision that it wasn't the best for you or it needed features
or something like that, you know, an assumption you made about a project
after you spent a little time with it.
There's one thing I've learned doing this here podcast is
when you come back after a couple of years or, you know, however,
however much time has passed.
Sometimes the project's in a totally different state.
And you hear us talk about Plex on the show and especially on Self-Hosted.
But a lot of you have been asking, guys, what are your current thoughts
on Jellyfin, which is Plex's totally free competitor
with a few power features up its sleeve that are really nice.
So has Jellyfin improved over the years?
Is Jellyfin good enough to replace Plex?
Or should you spring for that Black Friday Plex deal this year?
Well, we've each given it a spin and we're going to report back
with how it went and what kind of hardware we're using Jellyfin on,
which is pretty new and cool.
And then we'll round out the show with the emails and the pics and a lot more.
So before we go any further, let's say time appropriate greetings
to our virtual lug. Hello, Mumble Room.
Hello, Chris.
Hey, hello and hello to Anthony and Thorbell,
who are from the Jellyfin project and are going to join us
as we're talking about a little bit and share their perspectives
and their insights on it.
Gentlemen, thank you both for taking the time today to make it on a live show.
Glad to have you here.
Thanks for having us.
Happy to be here.
All right. Well, let's get into a little community news
before we dive into the free media server stuff.
And I wanted to start with some of our own news.
I've been talking recently on the show about having a meetup
at the Museum of Flight and looking at the price of what it would cost
people to attend and organizing all of that.
I've decided to change things a little bit
because things are tight for me these days.
And I don't know about some of you out there,
especially with the holidays coming up.
I thought, let's do something even more personal and awesome.
And I know this really only applies to people in the Pacific Northwest area,
although it really would truly be open to anyone who wants to participate.
But we have an opportunity with Brent coming into the studio soon.
Brent's joining me back in the studio because he misses me, I assume.
Oh, yeah. After living with me on the RV, right?
You just have separation anxiety.
It's this feeling I just can't get rid of.
I think you're really coming back to visit JOOPS.
It's Levi. Come on. Let's. Yeah.
I suspect you just left a clothesline there and wants to get it back.
Yeah, that does sound like it.
And probably a mason jar.
So we thought, well, if Brent's going to be in town
and we're launching our new server soon,
maybe we should have a new server christening party at the studio.
So the meetup will be held at the studio.
It's going to be a grilling thing where you bring your own food, meat or veggies.
And of course, we'll have a few things here.
And I think we'll just make a whole day out of it.
I have a couple of other special surprises that I will tell you about soon,
but I don't want to reveal everything yet.
I don't even have dates yet because job one is Brent
and I are ironing out when he's going to be down here at the studio.
But it'll probably be within the next few weeks.
And then job two is we're going to get a meetup set up
and we'll let you know about it and all that kind of stuff.
And then we've got to try to make sure we have the server ready to go.
So it's ready to go for the new server launch party.
But I think that's going to be a real fun way to celebrate
the launch of a new server is a little meetup here at the studio.
Just, you know, bring your own appetizer or food, whatever you want,
and or don't bring anything and just hang out for a little bit.
And we'll make a mess out of my house studio, which is already a mess.
But it could make it take a little more.
Also, speaking of get togethers and community news,
I wanted to mention that Ohio Linux Fest 2021 is
back, they're doing the hybrid thing that I think a lot of us speculated.
What are events going to do when they do finally come back into person?
So they're going to have the in-person aspect,
but they're also going to have the online streaming aspect.
And that's going to be interesting to see how that goes.
Like, will they have hallway cams?
Are they just going to be dead air when there's nothing in the room?
Like, is there going to be pre-room streams?
I have so many questions from a production standpoint,
but at the same time, it's really good to see this.
They're gathering after 25 long months.
The Open Libre Free Conference returns to the Hyatt Regency,
Columbus on Friday, December 3rd and Saturday, December 4th.
They've been going for 19 years.
Man, it's been a long time since I've made it.
You know, it's not easy, but these are the kind of things
we got to figure out as we move forward.
We should pack up Brent's car and I'll drive out there.
I'm in.
You know me, I'm always into a trip. Come on.
Every road trip, we just make the space smaller and smaller and smaller
until finally one of us pops.
I got a motorcycle.
Oh, God.
Oh, boy.
I don't know about that.
Also, which just happened to kind of work out perfectly
for the timing of this show,
Kodi 19.3 has been released.
Kodi, as you know, is a fantastic open source media player
that kind of goes at the problem a little bit differently than Jellyfin does.
And what has defined the perfect media server, if you will,
has really changed a lot.
No kidding.
This is going to make me feel old,
but I was trying to crack this for listeners 13 years ago
because we've really we've often had a couple of really good choices.
But depending on what you needed to do, you got to you got to pick the right one.
And that was a big problem 13 years ago.
And so I wanted to play a clip just to just to show you how long
we've been thinking about this and putting some of this into context.
Now, a warning.
Joe's going to hate this because I recorded this in my living room
back during the Linux action show days.
So it's not like it's super great audio and I kind of sound like a kid,
but I think it really underscores what this media server journey has been like.
So we go back to November 2008.
Everybody today, I want to talk to you about how to build the ultimate home
entertainment system using Linux.
I'm not talking about like a mediocre home entertainment system
with one 30 inch TV that watches standard def resolution stuff.
No, I'm talking ultimate multiple high definition TVs,
multiple high definition sources, over the air HD broadcasts,
Blu-ray movies, upscale DVDs,
and how you can get them throughout your house powered by Linux.
Now, there's a lot of different options.
So I'm only going to touch on a couple today.
One of them is a software project that I've been watching carefully for quite a while.
I've talked about it on the show before, and that's XBMC or Xbox Media Center.
The history with Xbox Media Center was it was originally developed
for the original Microsoft Xbox, but only for hacked Xboxes.
Now, the lifespan of those original Xboxes is starting to come to an end.
So they've taken the project and they've released it for all the major platforms.
We've got it for Linux, Mac, and for Windows.
It's still in pretty early stages, but it's coming along really good.
Even now, we're starting to see some packages for your favorite distribution,
but it's still recommended.
You probably want to build it from source.
So I'm not going to really touch on today,
but it's definitely something to keep your eye on because it's pretty awesome.
Now, this up here is a myth TV system. It's a myth front end.
I'll talk about more, I'll go more into details on that later.
And I have both myth on here and Xbox Media Center,
and I'm just kind of using both of them to kind of see which one I like best.
I think probably for movies, it's Xbox Media Center,
but for live TV playback, you really can't beat the myth front end, back end combination.
Fast forward 13 years, and of course, XBMC is still around.
But now, well, it's known as Kodi.
And as 19.3 shows, it really does so much more these days.
We had a chance to play around with Kodi just last night.
And it has been so long since I loaded it up.
And I really felt out of place.
I used to live in the software.
And when I used it last night, it felt really different.
It felt obtuse to me.
It felt like a different visual language on how to navigate an interface.
I could relearn it, and I could learn to love it,
especially because of the power it provides.
But for me to take advantage of Kodi today,
I have to load it up with add-ons,
and add-ons that essentially use external databases and try to manage external media.
And I'm not really using it for that media player that points at a Samba share
or an NFS mount and scans that directory.
That was when Kodi was great for me.
All right, hook it up to an external hard drive.
But now, when everything's on a central server in my setup,
and I want to track watch status across multiple machines,
and I also want to have remote web streaming,
and I want to have apps on my phone,
Kodi feels like I'm really crowbarring into that situation, and it can be done.
But my takeaway was from our experience last night,
I'd be curious to hear what you guys thought.
It felt like a completely unnecessary step
when you are using something like Jellyfin or Plex.
It felt like Kodi was just sort of unnecessary now.
Well, yeah, I mean, it's Kodi solving for a particular case, right?
There were days where when you were watching media,
you were probably doing it on a main TV in your living room,
and then Kodi was something that enabled you to turn a computer into something
that would let you play whatever media you had there with you.
But now we have a lot grander expectations
of these always-present streaming solutions that you can have on your phone,
that you can have on smart devices of any kind,
that you can get with you on your laptop, over a VPN on the go.
Kodi can be a piece of that,
but there's also now a lot of other competitors there,
like Homekiss and Fire TVs.
Yeah, yeah.
Brett, you're probably the most regular Kodi user amongst us,
and I know you even use it,
not necessarily in the context of a television, but just on your laptop.
Yeah, here at home in my cabin, I use my laptop basically as my main TV.
But that's how we sort of got into Kodi last night
when we were playing around having fun, was I mentioned,
oh, yeah, I use it on the daily to join some Plex servers and watch some stuff.
And then we started playing with Kodi and some of the plugins
that we'll mention, I think, a little later,
and I realized I don't really use Kodi on the daily.
I use it as a way of launching the Plex add-on.
And, Chris, I had the exact same reaction when we started playing around in Kodi,
was that it felt like sort of the grandfather of the newer technologies
that we're playing with now.
So I will say Kodi has just gotten out of the way for me
in the last several years watching Plex this way, which is good.
But the interface isn't something I play with on a daily basis,
and I'm kind of glad for it.
Yeah, and I would imagine somebody who's listening to this
who's just been using Kodi for a very long time thinks we're crazy.
Because once you learn what screens actually have what and all of that,
I think it sticks and everything basically follows that convention.
But when you're coming in cold, it was rough.
And I definitely have the takeaway of I would have no problem deploying
Jellyfin or Plex for a family member, but giving them Kodi, I'm not so sure.
But all of that said, so they fixed AirPlay in this recent release.
They've also put a little bit of work in to improve the way
the package metadata displays in different Linux app stores.
They're kind of making it a little more compliant in that regard.
And they've done some work to try to make it easier for Linux users
to install it in the more recent Kodi Matrix 19.3 release.
So we'll have a link to that in the show notes if you want to go check it out
because it's still one of my preferred ways to do decent media playback
that keeps track of what's been watched just by pointing at it
like a file share on your network.
And that's pretty useful because you don't need any backend server
or any software.
You can just get like an Android TV box or something or a Linux box
and hook it up to your HDMI and just throw Kodi on there.
It's still just so great for that job.
linode.com slash unplugged.
Go there to get $100 in 60-day credit on a new account
and you go there to support the show.
When we went independent just over a year ago,
Linode was the first company to sign on the dotted line to support us.
It helped that they're Linux geeks and that's why they started Linode.
They saw where virtualization technology was going in the Linux kernel
and they realized that really powerful systems could be used
to host multiple things instead of just like Apache virtual machines
that could actually host entire virtual machines.
That was 18 years ago.
They got into it because they loved the technology.
That permeates everything they have built over the last 18 years.
And just recently, they've been rolling out upgraded MVME storage,
which is a total game changer for certain types of workloads.
Now, I don't need it for like a blog site.
You probably don't.
I don't need it for my Starbound server or my Syncthing server.
But if you have an e-commerce site or if you have something
that does a lot of database transactions, there can be like big benefits.
I mean, you're just looking at a lot more IOPS per gigabyte
than traditional SSD or I mean, especially spinning rust.
So if you're a performance hound and you want to try it out
or if you've got an application that you think the throughput
that you would get from MVME would improve the application,
it's a great chance to take advantage of Linode's support team.
Their team can help you sort through the possibilities
for accessing the power of MVME and arrive at an optimum storage
and configuration for your environment.
Linode's 30% to 50% cheaper than the major hypervisors out there
that want to lock you into their infrastructure.
And Linode has 11 data centers around the world.
So you're going to find something near you or your customers.
They've really refined this over the last 18 years.
The dashboard is super straightforward.
Everyone on our team picked it up really quick.
There was a very short learning curve.
And then those of us who wanted to take it further
through the extra commands and controls they give you in the dashboard
or through the API have had those options.
It's really nice that way.
There's so many great options if you want to build it up yourself
or deploy with a one-click application
and a lot of configurations depending on what your workload is.
You're going to find the right configuration, the right price,
and you're going to be blown away by the performance.
So go to linode.com slash unplugged, get $100.
You can really try this for 60 days on a new account.
And you go there to support the show.
And now you know your support matters more than ever.
Linode's been with the show for a long time.
So let's show them you're still listening.
Let's show them you're still interested.
And let's show them you still want to learn about new, cool things.
And you want to run Linux up in the cloud the best way possible.
Linode.com slash unplugged.
Well, let's talk about Jellyfin.
The Plex competitor that, yes, is GPL, totally free software.
I've actually been using both Jellyfin and Plex for a while now.
I'll be honest, I mostly use Jellyfin for myself.
But in the past, there's been some limitations around some other folks
that wanted to give access to Jellyfin where Plex was just a better fit.
I think that might be changing.
We'll get into that as we go on.
But if you've never tried it, much like Plex, I mean,
you can use it for all kinds of media, movies, TV, books, music.
And yes, even live TV.
It presents a super easy to use web dashboard with multiple user support
and an ecosystem of Jellyfin clients that you can use to play directly
on whatever device you have,
especially if it supports what is happening on the back end.
And much like Plex, if your client doesn't support direct play,
well, Jellyfin can encode it with the power of FFmpeg.
It really can do pretty much all you want.
I'm curious, though, because I've been kind of stuck in the Jellyfin ecosystem myself.
I have admittedly modest needs.
I got to know, Chris.
What does someone who's been in the Plex ecosystem think of trying Jellyfin?
Very deep in the Plex ecosystem with that, too.
I'm really all in on Plex.
I've been a Plex subscriber for years because they have a $5 a month Plex pass.
And if you pay for that, it unlocks hardware decoding.
So they lock that up behind a paywall.
You get downloads and you get HDR support and you can set stream bitrate caps.
All of that, they paywall.
Where MBN Jellyfin gives you all of that for free,
which has always made me kind of check out both MBN Jellyfin.
And I never really clicked for me specifically.
It always felt like the web interface and the clients were a little rough.
The hardware encoding and decoding on Plex was a little more robust.
And the metadata management was a little sharper.
It was a little bit better about some things on the Plex side.
And so I just stuck with it.
But I keep an eye on it because I frequently hear about it from the audience.
And I noticed, it seemed in my distant perception,
that Jellyfin was kind of pulling ahead of the pack a little bit.
And Plex has been making changes, understandably.
But they've been making changes to make Plex seem more like a legitimate commercial streaming platform.
They're trying to pitch themselves as all streaming providers could stream through Plex.
It could be the one place.
It's Switzerland of streaming.
I have zero interest in that.
I understand why they have to go from a business strategy standpoint.
I get why they have to go that direction.
But I'm all about my local media.
I want to be able to play my media when I'm completely without internet.
Right. It sort of blurs the line between,
is this sort of a self-hosted tool that you're using to access media you already have?
Or is this something more like an online web service?
And Jellyfin is already immediately better at that last part.
None of the account user sign-in stuff goes through a Jellyfin cloud server like it does on Plex.
So you do not need any internet connectivity for Jellyfin to work.
So that's always put it on my radar.
And then the fact that it's GPL and those kinds of things have always made me want to check back in with it.
But I was never quite satisfied myself.
I found it mostly lacking in the client side, but pretty good on the server side.
So this time around, we decided to abuse a compute module four and throw it on there.
And just start with a clean slate with Jellyfin.
Point it at, it's either a Samba mount or an NFS mount, I can't remember, but I mounted my big library onto the compute module four.
And then I passed that through to Docker, to the container.
And I just let Jellyfin go to town.
And so I wanted to hear what you thought, Brent, because once I got it all set up, I gave you guys the links.
I created your accounts and I said, tell me what you think about it.
Co-watch TV shows, hardest unplugged homework ever.
It really was the hardest research we've ever had to do.
So how'd your research go, Brent?
Well, I watched till late at night and then I fell asleep.
And that's basically how it went.
Just kidding.
I had previous to that had zero Jellyfin experience.
So that's kind of a little bit of context.
And I do not have any experience administering one of these servers.
So I came at it from a purely like consumer end user perspective.
And immediately I was a bit wonderfully shocked at how beautiful the Web interface was.
It seemed super intuitive and also just gorgeous.
I have to say, whoever worked on that, the designers, they put a lot of love into it and a lot of attention.
And that grabbed me instantly on the more technical side of things.
I think I probably have the worst Internet from anyone who's currently listening to this.
I live sort of tucked away in the Rockies.
And Chris, I think that's exactly why you wanted to have me on to try this, just to see how it dealt with some of the buffering that is common with.
Yeah, you know, it's a common problem, I guess, for me.
And I will say I it behaved exactly as expected, which is my Internet is terrible and it had to buffer sometimes.
And certain shows were just unusable because of situation on my end.
I don't think that's a jellyfin issue more than it is an inconvenience on my side.
But I will say that occasionally the buffering interface just kind of vanished.
I think it was trying to punish me for not being an ideal use case.
And the interface would just go away and I would have nothing to work with.
So that was, I think, a tiny thing, but it still left me with this gorgeous show background to look at.
So I wasn't complaining too, too much.
I do want to say that we played with the sync play feature.
And I want to hear what you guys have to say about that.
On my end, even with my sort of sketchy Internet connection, it seemed really responsive.
And was that your experience on your end, too?
I found the sync play to be pretty cool.
So this is a way where you can create a group of users and whoever creates the group is essentially directing what play.
So when I hit play on something, it starts for everyone else in that group.
And I thought that was a pretty cool feature.
It's something I wish I would have had more when I was flying and staying in hotels.
But I could definitely see down the road doing that with friends and family or you guys like we did last night.
And I wonder, Brent, didn't you try at that time to play with different quality settings?
You could choose different bit rates and that helped, right?
I was easily able to play with bit rates and they're exactly where I wanted to find them, which was nice.
And that did really help.
What I did notice once we got disconnected is that Jellyfin allows you to grab a URL of a particular show or episode and plug that into something like VLC.
And that's the approach I took, actually.
And it worked flawlessly after we disconnected on our phone call yesterday.
I ended up going that route.
Did you have to manually up the buffer in VLC or did VLC just figure that out for you?
I didn't have to do a single thing.
I was thinking I was going to have to do that.
And I started poking around looking for it in anticipation of some buffering happening and turned out after five minutes I didn't even need it.
So that was curious to me and actually kind of nice, just having sort of an interface I'm used to and not needing to have the Web browser either.
So that got me kind of excited, too.
Yeah, I do the same thing.
It's just in the hamburger menu when you're viewing a media file in Jellyfin and Jellyfin has support for audiobooks, movies, TV show, live TV.
So say you're in an audiobook or you're in a television episode, you can get that URL.
And in the command line, you can just type MPV space and paste the URL and MPV will open up and just start playing it.
It's possible to expose that kind of stuff with Plex, but you got to get like browser extensions and stuff.
They don't really want you to have that kind of stuff in Plex.
You can also download files right from that interface in Jellyfin, which is another route you could go.
But this way you didn't have to wait for the download.
It's kind of this moment that I wanted to say, think of Jellyfin as it's a back end in a sense.
It's a media library and you can use different front end clients, the Web, their Android client or things like MPV to get access to that media.
And that's something that's really powerful.
It can also act as a DLNA server.
And then because Jellyfin gives you access to these features for free, it lets you do something that I think I think you do, Wes, which is you kind of create like a temporary disposable Jellyfin server when you're watching something with friends or something.
Yeah, well, that's just it.
It's like it's so easy to get started in Docker Compose.
It has guest accounts you can set up for just like easy, fast, anonymous access.
So if you have some videos that aren't, you know, they're not sensitive, they're maybe they're training videos internally for new employees.
Maybe they're just some some home videos that you want to share with folks.
Jellyfin is just an application you can use to expose that kind of thing.
And it's super flexible because it's not it's not locked down.
It's not part of a wider service.
And you're not paying for a subscription just for the few months or whatever you're going to use it.
Yeah, right. Like you can just send someone that link to share it.
Or, you know me, I like to mess around with Chromecast.
That's how I watch a lot of media.
And so those URLs, you just pipe them into Chromecast with something like Cat, which is a utility we've mentioned before, a little Python app that you can use to control your Chromecast.
And that works great.
If you don't want the whole functionality that Jellyfin has to offer, you can just use it as basically a streaming file server.
And to just double on that a little bit.
So that cat app that you're mentioning, it's a command line tool.
And you basically cat cast and then you give it the URL that you copy out of the Jellyfin Web UI.
And it will locally stream that to a Chromecast device, right, Wes?
It doesn't even require going out to the Google services.
So I could still actually use that to Chromecast even when I have no Internet connection.
Well, it just basically tells the Chromecast, hey, go try to pull this this URL.
So the Chromecast does need to go access the Jellyfin application.
Oh, and they have to load that off.
Womp womp.
I'd much rather have it not access the Internet for any of the playback.
Well, you know, you have to do some testing there.
I haven't tested it entirely offline.
I will try it next time.
I'll try it sometime because I have an outdoor television on JOOPS and that's where I use a Chromecast.
But then when I'm out in the boonies, I can't use it.
Of course, Starlink is going to change all of that.
But anyways, I was trying to answer two questions with this little test of ours.
Obviously, there was the I guess it's three because it's the meta question of have things improved since I tried it last.
And obviously, spoiler, the answer is yes.
Surprise, surprise.
But I wanted to know, could I switch from Plex where I am very deep into it?
I've got multiple family members that use it.
It's a big part of our setup.
I have two Plex instances.
I have one at the studio and I have one at the RV.
And I want to know, could somebody that's as deep as I am into Plex switch to Jellyfin?
And I also wanted to know, can Jellyfin, the server, run adequately on a Pi 4, specifically the Compute Module 4,
which is what I have now with a carrier board.
It's inside a dual gigabit Ethernet carrier board for the Raspberry Pi Compute Module 4.
It has four gigs of RAM and a 32 gigabyte eMMC.
So it's not like a screamer of a disk, but it's better than an SD card.
It has two NICs and I'm using ETH0 because that's the one that's on the PCI bus.
ETH1 is on the USB bus.
I do a more of a comprehensive review of this device, if you're curious, this little carrier board and the CM4
in the most recent self-hosted that's out right now, self-hosted.show.
But I wanted to know how it was as a Jellyfin server with multiple users and all of that kind of stuff.
Now, this is going to be different if you're out of the big powerful box.
But on the Pi 4, I did notice that the web server process, when three of us are connected simultaneously,
takes about 40 percent of the CPU.
Now, I'm mentioning that because we were specifically doing a watch together thing.
So we were all doing it through the web interface.
And that 40 percent overhead means you got less room left for transcoding if it needs to happen.
And I never actually did get transcoding that's GPU accelerated working.
That I could not seem to get working with my containerized version on OpenSUSE at Tumbleweed.
Yes, that's right.
Admittedly, we tried this in maybe the most difficult way possible for ourselves,
as is show for standard practice.
First of all, when I first set up the compute module, I actually was attempting to punish the CPU
and generate heat and get that kind of stuff figured out because I was benchmarking it for self-hosted.
And then I realized, holy crap, this Jellyfin is great.
I got to tell the guys about this.
And then we started using it for watching shows.
And I never got the GPU acceleration working.
If you're using a client that does what they call direct play,
so that means that whatever you're watching on has the codecs to decode the video and audio,
then it's really no problem because direct play has very little overhead.
And that worked out just great.
But when you're trying to encode or decode anything and it's using the CPU,
well, you know, it's a Raspberry Pi 4.
So the first media scan that also goes out and finds all the chapters, which I freaking love.
I love that it goes out and finds all the chapters and gets thumbnails.
Holy crap, that's awesome.
But it takes a long time on a big library.
Like in my case, it took nearly four days.
So, you know, that is a little intense.
But once it's done, you can set Jellyfin to save a lot of the metadata to the file system,
including an NFO file and whatnot.
So it would save time on future scans if you ever had to do that.
But I think with a little more troubleshooting, I could probably get hardware decoding working.
But realistically, my use cases are such that everywhere I watch my content from my media server is direct play.
I think Plex gets a little bit higher marks in terms of overall performance on the Raspberry Pi.
But Jellyfin is really it's getting the job done, too.
I should say that's one downside of using the Chromecast.
It's often a little less compatible with direct play just because it's picky about formats.
So if you do adopt that path, then, yeah, give it a little juice.
Dan, you've been using Jellyfin on a Raspberry Pi for a little bit, right? An 8 gig model?
Yeah, I've been using it for a couple of years now.
Oh, OK. And have you gotten, A, GPU acceleration working and, B, how would you characterize the performance?
No GPU acceleration. I just encode my stuff in a container that actually works fine on most clients.
Yeah, that is really the way to go. Just if you can.
Yeah, it is. And then the performance is all right if you're just two, maybe three clients connected and it doesn't have to do transcoding.
Yeah, if you can avoid transcoding, you can really run it on some pretty impressive low end hardware.
And the nice thing here is these things are silent.
They don't take very much power, so you're not burning 300 watts for something you might watch occasionally.
And I really thought it was adequate.
In fact, when you combine it with some of the features that Jellyfin exposes that I don't think Plex has, or at least up to snuff,
I think I could make a pretty compelling argument to switch the family.
Number one, user controls are better. So I set up users for all of us.
I love that there's no cloud connectivity required to authenticate, number one.
But also you can set up PG rating filters or specific tags.
Is that why I didn't see any Rick and Morty on there? You don't think I'm adult enough.
I just don't want to freak you out, man. I don't want to freak you out.
You can also just not show entire libraries, too. That's an option.
Which is kind of maybe a little bit more in line with how we want to do things with my families.
We want to have multiple people using the same server, but we don't need to see each other's libraries.
And the kids don't need to see the parents movies folder library.
So that could actually work pretty nice.
I think Plex has similar stuff, but the way Jellyfin and the options Jellyfin has, I think are superior.
And while the watch together stuff was a little obtuse to set up,
it took me a little bit to figure out the recycle icon actually meant group icon.
Once you set it up, it works really well.
For Wes and I, and I was on my Starlink connection and Wes was on a com.
Are you on Comcast now, Wes?
A wave, I think.
Okay. But I'd say it was instantaneous for us.
You could hear me clicking the mouse and then see the results.
And it just synced right up. And yeah, it really was great.
And it was interesting. So it seemed like the signaling layer, if you will, of the sync play,
like communicating when to play or pause was still working with Brent.
It was just that the video side of things wasn't really keeping up on his connection.
But that our part of it kept working.
It wasn't like the whole thing broke down and just was a partial failure,
which I think is kind of impressive considering the stress it was under.
Yeah, I found that impressive.
On my end, I could, you know, because we were on a quote unquote phone call
while we were trying to figure all this out and I could hear your clicks
and it would almost instantly appear on my end, which was great.
So it kind of distinguished between user interface and just the pure downloading of video,
which I think I really appreciated because I could actually still be a part of, you know,
what was happening and see what you guys were doing
without necessarily having the video be as responsive.
So that was actually really refreshing and I didn't expect that.
You know, something I didn't expect is from the dashboard, you can send messages to the client.
So they just show up as like a little discrete notification on the bottom left.
But what surprised me, I mean, that was neat.
But what surprised me is that notification messaging feature even works
when you're using the Kodi playback plugin, the add on for Kodi.
I will say that is in a past setup, I had my parents house networked with my house over Tink
before, you know, Nebula and Talescale came along.
And then I had Jellyfin set up at home and then they were, they had an Intel NUC system
that was running Kodi and then it was using one of these plugins that there's two options,
one that has a kind of standalone version that goes into a separate interface
to get your Jellyfin library and then another one that basically treats Jellyfin
as the backend library for Kodi and syncs everything down that way.
I had that working and I mean, it mostly just worked.
It felt like a very first class way to use, you know, to experience Jellyfin
with all the playback progress, all that stuff, chapters, it just worked.
Yeah, that does sound nice.
That would be a good way to use it with Kodi if I was going to do it.
But in my estimation, the modern TV setup is either like a smart TV
that you're not going to be able to get an app for.
But there are, you know, maybe you could get Kodi for some of them, I don't know.
But you can find the Jellyfin app for like the Rokus out there and for Android TV.
Yeah, I did just get them a Roku for the Jellyfin app, so that's what they're using now.
And how is that? Is that decent?
Yeah, you know, they're just starting to play with it.
They were playing with a few other apps on there first, but yeah,
I think it's going to be a just fine, very minimal maintenance long term solution.
And at least for now, the one gap in like just watch it through the app
is with the Apple TV.
And it was earlier this year, I finally decided to pull out my beloved Nvidia Shield
after their most recent update put ginormous banner ads along the top of the UI.
I just could not.
And I gave it a little bit to see if I get used to it.
But not only did they start advertising stuff that I didn't want to turn my TV on and see,
but it just got worse and worse and worse and ads for stuff I was never going to subscribe to.
And I just decided right then and there I was going to get rid of it.
And I, in a fit of rage, picked up a used Apple TV and it's been fantastic.
I actually think it's a really good little playback box because, you know,
these Apple processors are pretty good.
But there's no Jellyfin app.
But there is an app called Infuse and the Jellyfin project has even blogged about this.
And it's fantastic.
Infuse is what I've actually switched to to watch Plex.
I've dropped the official Plex app and I've already been using Infuse.
It's like an old school, simple, but powerful media player that can play back Zamba shares,
DLNA shares, Plex, MB, or just local media.
And it can sync your play status with Jellyfin and with MB and with Plex.
It's so awesome.
You're saying it's a modern proprietary Kodi?
Yeah, I guess so.
Yeah, it kind of is.
It really kind of is because it does do a little bit of the library stuff too.
And it supports like every freaking codec out there.
And it does have like a subscription, which I have totally signed up for.
Because with that you get full Google Cast support, full AirPlay support.
You get Dolby TrueHD support, more formats.
And it's a very solid media experience.
Guys, it's like a bulletproof media experience.
When I played that clip from 13 years ago, I was constantly fixing this stuff.
We'd sit down to do like family movie night and I'd always have to fix something first.
And it was embarrassing because you spend all this time and energy and effort
and you build up this thing that you've just done.
And you sit down and go do the big demonstration and something doesn't work.
When you get an Android TV or an Apple TV and you put Infuse or the Jellyfin app on there
and you connect them up to a Jellyfin server, you get the instant on just works experience.
And then things like the remote play and the web interface and the watch together stuff
are like bonuses on top of that.
But what you get at its core is a system that tracks what you've watched,
collects all the metadata, organizes things, puts nice thumbnails up there
and makes it SO and family friendly for everyone to enjoy the things that you've collected.
And I use this for my audio books.
I use it for my home movies.
And when we deploy the new server, I'm not deploying Plex anymore.
I'm deploying Jellyfin.
I am so glad that we went back and revisited this project
because I had an assumption that this just wasn't it for me.
I was too deep into this.
It wasn't sufficient. It wasn't covering all my use case.
And now I feel like it covers more than what Plex even offers me.
It does it for free. It's GPL software.
There's no subscription required.
And there's no online component that I have to go through to log in.
It's really for me, it's a big shift.
So Wes, you've been right all along.
Turns out you were right. It is really great.
You've been saying it for a while.
I was a little bit of a client snob.
I would still try to argue that the iOS and Android Plex apps are better.
But I think the trend is not going in a good direction for Plex and its apps.
And I think the trend is going in the right direction for Jellyfin.
Yeah, client support is definitely one of the harder aspects of this
because it's just a numbers game to get all good clients in all the places.
But it does seem to be getting better.
And there are some alternatives out there that help bridge the gap
for the time being, which is great.
I'm grateful, too, that you can also sort of interrupt.
You can point both Plex and Jellyfin at the same file system
and expose it both ways.
I'm still doing that.
So you don't necessarily have to choose.
And Jellyfin makes it so easy to just layer it on top.
It's sort of like, well, why not?
If you've already got some containers running for Plex,
just pop in a Jellyfin.
That's true.
And that's kind of what I did, only just on different hardware.
It wasn't until I started using it more seriously.
I was like, oh, maybe I should have put this on the nice x86 box
when we started using a lot of the web stuff.
So if you're going to do a lot of web playback,
I think you might want GPU accelerated decoding.
But if you're not, if you're going to do a lot of direct playback,
you really could get away with it on a Raspberry Pi 4.
That right there, that blows my mind.
We talk a lot about this kind of stuff and these types of applications
and this kind of load on self-hosted.
So go check out self-hosted.show.
And for the Plex angle, and also when it comes to hardware recommendations,
if you want to build a media server, our buddy Alex has perfectmediaserver.com
where he's outlined his media server setup.
So go check that out because I think that's a great resource,
even if you were to end up using Jellyfin on top of it or Plex.
But I think you could get all out there.
So much good stuff over there. Yeah, really.
It's true.
He was going to join us today, but I think work, you know, work out in the way.
Well, we have a bit of housekeeping.
Thank you to our members at unpluggedcore.com.
Last week's pre-show, I think, and post-show was really, really educational.
For those of us who want a better understanding of the struggles
that different open source projects face, the communication challenges,
and it really kind of ended on a good note, wow.
Last week's members feed episode was fantastic.
Worth an entire year of subscription.
Go check it out on pluggedcore.com.
I think we just do some of our best bits there because the recorder is off
so people feel a little more free to chat.
So our members get that content, but they're also supporting the show.
You can also get the tighter Joe edited version that has less ads.
So it has a shorter runtime, but also it still has all the production quality
that the main release version gets.
And I want to plug the Tuxies because the voting is still going for a little bit longer.
Tuxies.party.
Go vote for the best open source projects of the year and a lot more.
Tuxies.party.
We want your feedback, your input, your ideas, your suggestions for segments
or topics, linuxunplug.com slash contact.
Go there to let us know what you're thinking.
And join our matrix community.
It's growing all the time at linuxunplug.com slash matrix.
That's where we have all the information.
And speaking of matrix, a big security fix for the Synapse server is out today.
So if you're listening to this...
Wait, wait, what?
We better update.
Yeah, we should maybe do that soon, especially now that we're making this public.
So if you have a public or private Synapse server running matrix,
go check out the news.
We'll have a...
Let's put a link in the show notes.
We'll put a link in the show notes for information and go update
because that stuff's important.
And then I'd like to invite you to hang out with friends on Sundays.
It's our Luplug every Sunday at noon Pacific.
You can find it at jupyterbroadcasting.com slash calendar for your actual time.
And if you don't have Mumble set up yet, linuxunplug.com slash Mumble.
So go find out how to get that set up.
And then you got a good to go when we have a show on a Tuesday and you're around.
You could join us or hang out in the Luplug.
And stay tuned because we'll have meetup information very soon
about the server christening party.
And also I should mention jupytergarage.com.
The rando swag bags are still in stock.
I scared everyone away when I said there's a few limited orders left
and so we only got a few orders.
But we do have about 10 left.
So if you'd like to get a random swag bag,
and we have one slightly more that also comes with the Jupiter journal,
which is a notebook with a rocket on top.
I got to make sure you get one of those while you're visiting here.
I'll set one aside for you.
Yeah, please do.
I mean, what isn't better with a rocket on top? Come on.
Rockets make everything better.
They do. They do.
Or you can buy just the journal at jupytergarage.com.
Then you can choose your color.
And then if you really want to treat yourself,
and these are hard to do right now,
we have a bearded tux bomber.
You know the bearded tux from Linux action show?
We put that on a bomber jacket.
And it's just something for the winter.
A nice go into town jacket with a low key design on it.
And I was actually surprised they were actually going to have enough in stock for us to do that.
But that'll be up there too.
All of it at jupytergarage.com.
A way to get yourself a little something and support the network.
Get some old swag, stickers, new swag, some bonus road trip swag.
All of that's in the random swag bag.
So go get yourself some.
All right, gentlemen.
How about we do a little feedback?
Crashmaster writes,
I've been a longtime listener to most of your shows since the beginning.
Love the shows.
I'm a patron donor and a proud owner of a Coder radio robe
that I embarrassed my family with by wearing too long on weekends.
My man.
Properly done.
Excellent.
He continues,
I just heard episode 432 of Linux Unplugged.
This has to be your most unbiased and fair review of an OpenSUSE project ever.
Ouch.
Especially you, Chris.
You put aside old biases and really gave it a fair shot.
Thank you for that.
As a longtime OpenSUSE user, myself,
may I suggest a couple of tools?
So he mentions Tumbleweed-CLI and also a tool named TWUPS.
I am guessing that's Tumbleweed-UPS.
Come on, you're not going to call it TWUPS, Brent?
Yeah, I'd call it TWUPS.
TWUPS.
Well, let's just call it TWUPS then.
Okay.
So he says both those tools are fantastic tools
that let you easily switch official Tumbleweed images
and view snapshot community reviews.
Harmless to your system, really,
and easy to unwind if you'd rather keep with the standard role.
He says, I like having this for desktop in particular
so I can troubleshoot NVIDIA drivers faster than previously.
This is an area I feel I am probably the most ignorant about
when it comes to Tumbleweed.
Like I really, I got a sense of this when I went to do an update
on my Compute Module 4, which is running OpenSUSE at Tumbleweed,
which by the way, although the install took forever,
it was slow as hell.
It just, I installed OpenSUSE Tumbleweed on the Compute Module 4
like it was just a regular old PC.
I booted off of an ISO image on a USB thumbstick
and I installed SUSE to the internal EMC hard drive
on the Raspberry Pi Compute Module like it was a computer.
It's crazy.
And it was slow, but man, it's actually been pretty nice.
And I decided, well, I'll do my first big update
and there was like 180 packages.
Whoa, this thing really is a rolling release.
And I got this strangely worded message that I think has been translated
from German to English that essentially told me
I probably don't want to upgrade using this method.
I probably want to use a different tool.
And I went to go look up that tool.
I actually, by the way, sorry, it's another tangent.
I remain very impressed with A, the zipper output,
the way it displays package information.
B, the way it displays download information.
And C, the various tools they implement to help you suss out
what you actually mean to be doing and what you shouldn't be doing.
They have a couple of them.
And that's been really nice as a newbie to come into that.
And one of those little warnings I got is,
hey, man, on a rolling tumbleweed thing here,
you probably want to use this tool for doing your upgrades.
I had no idea, right?
I just thought I could just do standard old upgrades.
That gave me my first insight that there was something more to look into.
And then getting this email, it's obvious that there's a lot deeper
I could go with this image stuff.
And that could actually be pretty cool on our server.
There is another interesting tidbit in this feedback down at the bottom.
They note that the OpenSea subreddit is quite active and strong
and that, quote, some of us may post community news notices
of certain public JB polls in there from time to time.
It's a shame if other distros aren't doing the same. Cuff.
Hey, man, don't hate the player, hate the game, right?
I mean, he's right.
The Fedora folks could be posting that in there, right?
The Ubuntu subreddit could be asking for votes for Ubuntu in the taxis.
Is it fair play? I think it is.
Is it a clean play? I'm not so sure.
Is that a challenge, Chris?
No.
I do want to say really quickly about the different update methods in Tumbleweed.
That's actually one of my criticisms.
Even without knowing about some of these that got mentioned just now,
there's like four or five different ways of updating packages,
some that install just patches, some that install all of the software.
And I found that kind of confusing.
And we did get some feedback that I didn't mention here that mentioned just that.
Oh, yeah, there's four or five, six different ways of doing it.
So pick your favorite.
But I would say in some ways that just seems really confusing for someone who's new to it.
Was that your experience, guys?
Yeah, I got to be honest.
I kind of go into it assuming, though, that if I just sucked it up and used Yast to do the update or whatever,
I kind of assume Yast would probably pick the safest, most correctest method.
But even then, there's two different ways of doing it in Yast, which that I came to anyway.
So there's like Yast package update or something.
And then there's the main Yast repository updater.
And those two do different things.
One of them does only patches.
The other one does everything.
So I found that tricky.
You're right.
Now that I think about it, it is kind of confusing.
I've been using Zipper on the command line, and I've really only gone through this once so far because I'm still so new into it.
But that was sort of one of the reasons why I thought, you know, I should put this on the Compute Module 4
because I feel like I still have more to figure out.
And, you know, we're going to put it on our server.
So I really got to actually learn it.
I've got to take this serious.
I think part of this, too, is like I try to be honest with myself when I know that I haven't necessarily done things in the proper order
or gone and tried to find docs before just diving in and expecting to know what I'm doing.
And the SUSE ecosystem is just a bit different.
It's a different setup of a system, but in some ways clearly a quite intentional setup.
So I think it's worth us trying to be open to finding what pathways there are even if they don't make sense at first.
I agree.
I think the first reaction sometimes actually is, well, that doesn't make any sense.
But, you know, after a few seconds of Googling, you kind of get the reasoning.
And a lot of times so far, actually everything so far has made sense once I've done the reading.
And I don't mind that.
You know, when I'm making a transition like this, I try to be intentional.
I try to take a few seconds to do a little research before I go do the update.
And so when I saw that error, I was like, OK, let's go read about this.
And I went look the whole thing up and skimmed a couple of wikis and then I read a couple of threads.
And then I went and looked at a couple of different docs and came to a conclusion.
And yeah, it took extra time, but that's a one time investment.
And I feel like, OK, I've got that now. I get it.
I kind of try to also take the time to study the output of the tools a little bit more.
So that way I kind of learn what they're saying.
You're reading the output of the tools you use. Wild.
I know. It's a crazy concept, right?
Well, maybe we'll learn enough that we won't have to use the transactional server to be able to survive this experiment.
That's true. That's true.
Although then again, it seems like immutable file systems are coming for all of us and that's going to solve everything, right?
Yeah, we got another little piece of news here about our coverage on the Steam OS updates with immutable file systems.
That teaser we got last week, Nathaniel writes in LUP 4.3.2.
You mentioned that Steam OS 3.0 will have an immutable file system with the ability to kind of open an escape hatch by turning on in developer mode.
He continues, Although I think that is a good idea, I think you guys approached it the wrong way in the episode.
You seem to still be thinking about it as a workstation when in reality I think it should be thought of as a game console.
Many game consoles nowadays are not modifiable on the firmware level.
And when you think about it, adding packages on the Steam Deck can be seen as the same type of thing.
It's just like adding modifications to the firmware of a closed console.
I think that this is their way of doing exactly that without going to the extremes of these other console manufacturers.
Protecting the user from themselves is a very legitimate goal for these console manufacturers.
And the Steam Deck is no exception.
I'm just glad it's in a way that doesn't infringe on users freedom.
He's absolutely right that the appropriate context to actually be discussing the Steam OS release and the Steam Deck is as a console, as an appliance.
And of course, a file system like this that's read-only makes a lot more sense in that context.
We took about 3 to 10 seconds talking about that and then immediately turned it into how cool will this be when somebody forks us into a desktop project?
How can we abuse this in ways that it's not intentionally being designed for?
That's kind of our way, isn't it?
I mean, you know it's going to happen though.
We're all just sitting here waiting for Steam OS 3 to get released so that way we can dig into how it works and then build something really cool out of it.
And I maintain, and I know Valve just doesn't have the engineering resources to do, well, I don't know this.
But I suspect Valve would rather dedicate their engineering resources to getting the Deck out the door and getting game compatibility and getting the OS ship shape.
But I just, I think it'd be amazing if Valve was able to release Steam OS over the holidays to let Linux geeks really figure out how it ticks.
So that way when decks do hit the market in February, you got an army of people out there that know how to support this thing and troubleshoot this thing.
But I know that's just, that's not how it's going to work out.
But when it does land, we're definitely going to take a look at it.
I'm very excited about that.
You know, to defend our perspective slightly more, I think we're actually really excited by what technologies will come out of this as well and will land on desktop and get us even more excited in that space.
So give us a little bit of slack, would you?
All right, ladies and gentlemen, every now and then on the Unplugged program, we have an opportunity to present a pick that will forever improve your life.
Episode 433 is one of these opportunities.
You're welcome.
Congratulations.
It's called Junction.
It is a simple application that you set as your default browser, and it lets you choose the application to open files and links.
Now, I'm going to let you soak that in for a moment.
You make this your default browser, right?
Then when you click a link, this tiny, beautifully designed application comes up with big icons for which browser you'd like to open that link in.
And if you live the multi-browser lifestyle like I do, this changes your life in a very positive way because I probably click a link in chat or on, you know, an application and an email, whatever, a thousand times a week, maybe a hundred times a day.
Who knows?
And every time I'm very intentional about what browser I want that link to open up in because I have one signed into some accounts, I have some signed into other accounts, etc.
Additionally, you can have it choose PNG open apps or whatever your different apps you have for like some apps.
Sometimes I want to edit a PNG.
Sometimes I just want to view a PNG.
Junction can be set as the default PNG editor, and then it will show you the compatible apps.
You pick which one to open that PNG filing.
That's where it changes the game for me.
See, at first it kind of just sounded like you were describing a tool that made your nightmarish hellscape of a browser set up more sustainable.
But the PNG, I mean, yeah, OK, OK, this is kind of taking this whole system of defaults, adding a whole new layer on top.
Westpain, I'm not done yet.
You can do it for your default email composer.
You can use Junction as the default folder.
Maybe you live the multi-file manager lifestyle.
Junction is going to bring it all together for you.
Additionally, you can do things from the command line.
So you can actually use Junction to open up things, different apps from the command line.
It supports multiple Firefox profiles.
This I first discovered an app called Bumper on the Mac like two years ago.
And I always had been lamenting how it was my favorite little app I came across on the Mac.
And I wish we had something like this on Linux.
And it's been around for about six months, I think.
And I discovered it about two weeks ago.
I desperately wanted to tell everyone last week, but we had a theme.
It was command line I love and I was sticking to it.
But now I finally get to tell you and it's also available on Flat Hub.
So it's super easy to install, but you don't have to install from Flat Hub.
Again, it's called Junction and you're welcome.
It's really great.
That's all I have.
I just really like it.
I just, you know, when you can make micro little improvements in your workflow that speed up
what you do every single time you do something and you do that thing frequently, it matters.
Junction.
They should hire me.
I'll be their spokesperson.
I'm all about it.
This is going to be like this.
Junction.
When every moment of life matters.
That'd be my pitch.
I'll throw the eagle in for free.
All right.
That's going to wrap us up.
If you do the Twitter thing, follow us on there if you want.
I don't know you.
At linuxunplugged.com.
I'd like to know you though.
So if you follow it, maybe I get to know you a little better.
You can also follow me.
I'm at Chris Lass.
The network is at Jupiter Signal.
Gentlemen, do you want to plug a Twitter or something?
I don't know.
At Wes Payne.
At Brent Gervais.
If you can spell it, I'm there.
We've got links in the show notes.
We always do.
And them show notes for everything we talked about today, they're at linuxunplugged.com
slash 433, right?
And this 433, I think so.
Man.
It sure is.
Remember when we were just doing 400?
What the hell happened there?
I don't remember that episode at all.
Oh, I should mention Wes, you got to go check out Linux Action News this week because there's
this DNS poisoning attack story going around.
And Linux, of course, is vulnerable when Mac OS and FreeBSD and Windows are not.
And it actually originally stems from something that happened in 2008, some research from
2008.
We thought it was fixed.
Turns out not fixed.
And so it's widely deployed.
We did a whole breakdown, explained everything and how it works in nice, concise terms.
And this week's episode of Linux Action News to go to linuxactionnews.com and get that
because that's like all of the stuff you really need to know happening right there.
And it's nice, presently concise way as we can, because, you know, we know you got limited
time and there's things that happen you need to know about.
And then when we want to sit here and hang out and chat with you, that's what this shows
for.
That's what this is for.
And you could do it live with us.
Join us at jblive.tv on Tuesdays at noon Pacific, 3 p.m.
Eastern.
See you next week.
Same bat time, same bat station.
That's right.
Mumble room's always open.
Thank you to our guests from Jellyfin for joining us.
Thor, Bill dropped off.
Bill dropped off partway because he had an internet issue.
But Anthony, thank you for making it.
And thank you for all of the hard work on Jellyfin.
Keep it up.
And thank you, everyone, for listening.
Thank you to those that go to linuxunplug.com slash subscribe and get the show every single
week because we love visiting with you and we love hearing from you at linuxunplug.com
slash contact.
And last but not least, the conversation continues at Jupiterbroadcasting.com slash telegram.
How many URLs?
Way too many.
See you right back here next Tuesday.
All right.
JBtitles.com.
Oh, yeah.
Everybody go vote.
Here we go.
Let's go pick something.
By the way, Ben, did I see it go by that you did get GPU acceleration working on your Pi
4 for Jellyfin?
Yeah.
So what I did was use the Linux server container and I had one device that I couldn't get mapped,
but with the device tag, I just mounted the entire slash dev directory to it.
And with the open max, the omx in Jellyfin, then I got it all running.
Oh, huh.
Yeah.
Okay.
So it's like the what's in the Linux over IO Docker compose file is pointing at devices
that are not the same path on the Raspberry Pi 4 compute module, at least.
But I'd never even thought about just saying screw it.
Here's all of dev.
Huh?
You know what?
Why not?
What can go wrong?
