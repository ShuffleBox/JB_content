WEBVTT

00:00.000 --> 00:03.000
You realize you've got three different distributions in front of you right now?

00:03.000 --> 00:07.000
You've got Nix, you've got Arch, and you've got Ubuntu going on right now.

00:07.000 --> 00:10.000
This is a busy day for Wes Payne.

00:10.000 --> 00:13.000
He's like frantically trying to get things installed.

00:13.000 --> 00:16.000
How are you doing over there? I know it's a big task for today's show.

00:16.000 --> 00:21.000
Well, plan A didn't work out just yet, but plan B? Going to plan?

00:21.000 --> 00:26.000
Plan A required me nuking and paving my perfectly awesome Fedora 36 setup.

00:26.000 --> 00:29.000
That was going to happen regardless of the plan.

00:29.000 --> 00:30.000
Okay, maybe.

00:30.000 --> 00:35.000
So then I put Arch on there because we wanted some newfangled kernel patches for today's show.

00:35.000 --> 00:39.000
And I look over there, and you're loading Nix on that thing.

00:49.000 --> 00:52.000
Hello, friends, and welcome back to your weekly Linux talk show.

00:52.000 --> 00:53.000
My name is Chris.

00:53.000 --> 00:54.000
My name is Wes.

00:54.000 --> 00:55.000
And my name is Brent.

00:55.000 --> 01:04.000
Hello, gentlemen. Coming up on the show today, HP has announced a new laptop that ships with Pop OS aimed at developers.

01:04.000 --> 01:06.000
We'll share our thoughts on that.

01:06.000 --> 01:12.000
And then why we're getting excited about BcacheFS and how it compares to ButterFS.

01:12.000 --> 01:14.000
Your workstation's got a new file system inbound.

01:14.000 --> 01:21.000
If you do anything in media production or have large files or perhaps gaming, you're going to want to stay tuned to this.

01:21.000 --> 01:24.000
And then we'll round out the show with some boosts and picks and a lot more.

01:24.000 --> 01:29.000
So before we go any further, let's say time appropriate greetings to our virtual Linux users group.

01:29.000 --> 01:31.000
Hello, Mumble Room.

01:31.000 --> 01:32.000
Hello.

01:32.000 --> 01:33.000
Hello, Chris.

01:33.000 --> 01:34.000
Hello, Wes.

01:34.000 --> 01:36.000
And hello, Brent.

01:36.000 --> 01:38.000
Hi, everyone.

01:38.000 --> 01:39.000
Good to have you here.

01:39.000 --> 01:42.000
Our Mumble Room is open every Sunday when we do the show.

01:42.000 --> 01:43.000
Mumble is free software.

01:43.000 --> 01:48.000
And we have a quiet listening lobby if you just want a low latency Opus audio stream.

01:48.000 --> 01:50.000
And then, of course, we have the on air area.

01:50.000 --> 01:54.000
And then we use Mumble for office hours and other productions here on the network.

01:54.000 --> 01:55.000
So it's always nice to have it ready to go.

01:55.000 --> 01:58.000
And we often have community events on there, too.

01:58.000 --> 02:01.000
We have more details at Linux Unplugged dot com slash Mumble.

02:01.000 --> 02:12.000
Speaking of meetups and community, though, it looks like Alex is putting together a London meetup for Saturday, August 6, 2022 in the London area.

02:12.000 --> 02:15.000
We'll have details at meetup dot com slash Jupiter Broadcasting.

02:15.000 --> 02:17.000
Oh, I wish I could go.

02:17.000 --> 02:19.000
Oh, my goodness.

02:19.000 --> 02:20.000
Me, too.

02:20.000 --> 02:21.000
So go in our Stead audience.

02:21.000 --> 02:23.000
Make sure Alex won't be there by himself.

02:23.000 --> 02:24.000
Yeah.

02:24.000 --> 02:25.000
Make sure it's a party.

02:25.000 --> 02:26.000
Take some pictures.

02:26.000 --> 02:27.000
Share them.

02:27.000 --> 02:28.000
Make us jealous.

02:28.000 --> 02:30.000
So that way we have to go to the next one.

02:30.000 --> 02:33.000
I already have something booked for that first week of August.

02:33.000 --> 02:35.000
I want to go so badly.

02:35.000 --> 02:41.000
But if you're in the London area or anywhere near there and you'd like to go, we'll have the details at meetup dot com slash Jupiter Broadcasting.

02:41.000 --> 02:45.000
I think Alex is still taking input from the community, too, on ideas and whatnot.

02:45.000 --> 02:46.000
Yeah.

02:46.000 --> 02:47.000
So now's the time to put your input in.

02:47.000 --> 02:50.000
If you think you might be available or want to make it.

02:50.000 --> 02:52.000
But we all just got done traveling.

02:52.000 --> 02:54.000
All of all three of us were just traveling.

02:54.000 --> 02:56.000
And we survived.

02:56.000 --> 02:57.000
We did.

02:57.000 --> 02:59.000
Honestly, sometimes I don't know how we do it.

02:59.000 --> 03:02.000
That last bit of my drive was really crazy.

03:02.000 --> 03:07.000
But we all had, I think, a pretty decent trip considering what could have gone wrong.

03:07.000 --> 03:11.000
Brent, I believe you successfully smuggled back something from the United States into Canada.

03:11.000 --> 03:13.000
Do you want to out yourself?

03:13.000 --> 03:15.000
You say something like it was only one thing.

03:15.000 --> 03:17.000
So I'm not exactly sure which one you're talking about.

03:17.000 --> 03:18.000
Any hints?

03:18.000 --> 03:20.000
Oh, you tell us.

03:20.000 --> 03:22.000
Well, it's that one extra organ.

03:22.000 --> 03:25.000
Oh, actually, I wonder which one you're latching on to.

03:25.000 --> 03:38.000
But maybe one of the one that's exciting me is Alex gave me a phone that is not like a potato, which a potato on fire, which I think is a really good thing.

03:38.000 --> 03:40.000
Your last one here was actively hazardous to those around you.

03:40.000 --> 03:43.000
Yeah, I mean, it's a good conversation starter.

03:43.000 --> 03:50.000
Yeah, I mean, I've heard stories of battery expansion, but I've never actually seen one that bad in person and then seen somebody continue to use it.

03:50.000 --> 03:53.000
So I'm surprised they even let you on the airplane with that bomb.

03:53.000 --> 03:55.000
It keeps my thigh warm, you know.

03:55.000 --> 03:57.000
Well, so are you going to transition to the new phone now?

03:57.000 --> 03:59.000
You got a whole strategy.

03:59.000 --> 04:04.000
Well, you know, I know Drew's listening and I got into a car accident trying to get the lovely phone he gave me.

04:04.000 --> 04:05.000
So thank you, Drew.

04:05.000 --> 04:10.000
And then basically Alex had one for me as well because they're both sweethearts.

04:10.000 --> 04:14.000
And he said I couldn't live in his house anymore if I didn't switch phones.

04:14.000 --> 04:20.000
So he forced me to switch to this new wonderful one plus six that he had kicking around like he does.

04:20.000 --> 04:26.000
I got to say, Chris, like the transition was the thing that I was dreading.

04:26.000 --> 04:35.000
I feel like we're so used to having the desktop and things are, I don't know, seem much easier to transition there than they do on an Android phone.

04:35.000 --> 04:36.000
And I was right.

04:36.000 --> 04:41.000
It was a total pain and I haven't even moved everything over and I just so cringy.

04:41.000 --> 04:47.000
It was just I tried a few, you know, pieces of software that are trying to help you and none of them worked.

04:47.000 --> 04:55.000
And some people will say, well, Google has this thing where you just, you know, backs up your entire phone and then gives it back to you.

04:55.000 --> 04:57.000
But that's not in my realm of interest.

04:57.000 --> 05:04.000
So I did it the old way and I had to, you know, peck at the phone for about six six different sessions.

05:04.000 --> 05:09.000
It's probably a little more challenging because you're trying to do this, I would imagine, without using Google services.

05:09.000 --> 05:14.000
Yeah. Well, I figure, you know, you should be able to do this on the local network, right?

05:14.000 --> 05:18.000
I guess you should. Oh, it's painful. Yeah, it's painful.

05:18.000 --> 05:23.000
And the other thing is, I don't think I'm maybe a representative regular user.

05:23.000 --> 05:31.000
I would imagine we all have so many different little I have like two or three VPN different types of VPNs on there now.

05:31.000 --> 05:36.000
And that's just a small example of all the different crazy stuff I'm working with on there.

05:36.000 --> 05:40.000
So you do make your own life difficult. Maybe that's a nice way to put it.

05:40.000 --> 05:43.000
You know, though, I think once you're done, it's going to be worth it. That's a good phone.

05:43.000 --> 05:46.000
It's going to last you a good while, especially how long you get out of these phones.

05:46.000 --> 05:58.000
It'll be a worthwhile transition. And every time you do these transitions to at least for me, I always find like, oh, I need to do a better job at figuring out my two factor stuff or I need to do a better job at making sure this is backed up.

05:58.000 --> 06:04.000
So it's, you know, in a way, it's better to identify this stuff now than just when your phone actually caught on fire.

06:04.000 --> 06:12.000
I did also take the opportunity to install lineage on there, which I haven't used since the cyanogen mod days way back.

06:12.000 --> 06:17.000
I had like a dream that I installed it on. It's nice to catch up like that, too.

06:17.000 --> 06:23.000
Yeah. So I'm so far they just came out with a new version is a little bit buggy, but they've been putting out updates like crazy.

06:23.000 --> 06:26.000
So I'm excited to find out how that's going to be.

06:26.000 --> 06:29.000
I would love to hear your experience with that as time goes on.

06:29.000 --> 06:33.000
We'll be able to do a little bit of a long term look back and see what you think.

06:33.000 --> 06:37.000
Wes, you were on assignment last week, assignment to party.

06:37.000 --> 06:40.000
Tell the class where you went and how it went.

06:40.000 --> 06:42.000
Yes, I was in the fine city of New Orleans.

06:42.000 --> 06:45.000
That's nice. It was warm, I imagine.

06:45.000 --> 06:48.000
Yes. 91 and incredibly sticky.

06:48.000 --> 06:56.000
The last day I was there, which I chose to sort of wander around as much as I could, but I was quite tired for the ride home worked out nicely.

06:56.000 --> 06:58.000
No, it was great. I mean, amazing food, amazing drinks.

06:58.000 --> 07:00.000
But there was one drink I didn't I didn't get to have.

07:00.000 --> 07:05.000
So it's curious maybe if there's any audience members out there who have good places in mind next time I'm back.

07:05.000 --> 07:09.000
And that's the the Ramos gin fizz. Oh, that sounds great.

07:09.000 --> 07:12.000
It's tall, creamy, citrusy with sky high foam.

07:12.000 --> 07:19.000
You've got gin, lemon, lime, cream, simple syrup, orange blossom water, egg white and soda.

07:19.000 --> 07:26.000
Egg white? The original recipe calls for 12 minutes of shaking.

07:26.000 --> 07:29.000
It's more of a meringue at that point.

07:29.000 --> 07:31.000
It does sound like a dessert.

07:31.000 --> 07:36.000
But, you know, you want a good one. And it's it's mostly these days considered a brunch drink, is my understanding.

07:36.000 --> 07:44.000
So you need to find a place that, you know, has a bar staff who's willing to make you this this fancy ass drink and make it for you at like 11 a.m.

07:44.000 --> 07:48.000
That's very true. Well, I'm glad you got a chance to go down there and enjoy yourself.

07:48.000 --> 07:55.000
That sounds really like I have probably a handful of places in the US that I've never been to that are really high on my list.

07:55.000 --> 07:57.000
And that's definitely one of them. Sounds like it was probably a really good time.

07:57.000 --> 08:01.000
Did you, Wes, did you enjoy any music while you were there? It seems like that would be a thing to do.

08:01.000 --> 08:05.000
Oh, yeah, of course I did. I mean, you'd have to be an idiot not to.

08:05.000 --> 08:10.000
Well, you just wander around the French Quarter and there's music spilling out of all the doorways.

08:10.000 --> 08:17.000
So that does sound really nice. That's great for somebody who likes to walk around to like yourself and you take it all in.

08:17.000 --> 08:20.000
Well, maybe one day we'll do a meet up down there. Get a chance to check it out.

08:20.000 --> 08:28.000
You can show me around. I also have a story on my travels that involves a drink because you know how I am when I read like usernames.

08:28.000 --> 08:30.000
Super accurate. Yeah. Very good at pronunciations.

08:30.000 --> 08:36.000
And I'm very, very good at figuring out people's usernames and reading them completely accurately and pronouncing them accurately.

08:36.000 --> 08:42.000
And so that really good skill I have apparently also applies to like looking up restaurants.

08:42.000 --> 08:48.000
And I kid you not. I found a place called Mamosas and I didn't even think of Mamosas, right?

08:48.000 --> 08:53.000
Because I'm an idiot and I don't know what's wrong with how I read, but that's just how my brain works.

08:53.000 --> 08:57.000
So I like let's go get breakfast to this place called Mamosas.

08:57.000 --> 09:05.000
We show up and of course it's like a brunch place that specializes on all of these different Mamosas and a bunch of other really good things.

09:05.000 --> 09:14.000
That sounds like a great find. And I got myself like a pomegranate Mamosa and it was fantastic and just really hit the spot.

09:14.000 --> 09:19.000
So I was in southern Oregon in the Grants Pass area and it was beautiful.

09:19.000 --> 09:24.000
You know, mid May, mid to late May. It's just such a gorgeous time down there.

09:24.000 --> 09:30.000
And I was getting some repairs done. Brent knows that we just took horrendous damage coming into Denver.

09:30.000 --> 09:35.000
And it resulted in some of my suspension kind of just getting smashed.

09:35.000 --> 09:40.000
And so I was just getting the last bits of that fixed up and then I was getting upgraded leaf springs put in.

09:40.000 --> 09:45.000
So now JOOPS is better equipped for the rougher road conditions that seem to be out there.

09:45.000 --> 09:49.000
And I think in part the roads have just gotten worse since I've gotten the RV.

09:49.000 --> 09:51.000
There's just a lot of infrastructure that needs work.

09:51.000 --> 09:55.000
So when I take her in, I get her fixed and I tend to do a little upgrading.

09:55.000 --> 09:58.000
And now I've got these really new robust custom made leaf springs put in there.

09:58.000 --> 10:03.000
And I've got a bunch of Kony shocks and all this really nice stuff like Sumo springs and sway bars.

10:03.000 --> 10:09.000
I mean, she's really, she's really dialed in. She's a better drive than the day she came off the lot.

10:09.000 --> 10:13.000
No doubt about it. And we're just wrapping up.

10:13.000 --> 10:16.000
And we thought we'd get out of there Tuesday evening. I figured I'd get back up here.

10:16.000 --> 10:22.000
I'd be here for Self Hosted and the Bitcoin Dad podcast and we'd be we'd be good to go.

10:22.000 --> 10:27.000
Tuesday evening rolls around like, you know, guys, this is taking a bit longer than we expected.

10:27.000 --> 10:29.000
Do you think you'd be OK heading out Wednesday?

10:29.000 --> 10:32.000
Well, yeah, you know, it's fine. We've got our home here.

10:32.000 --> 10:35.000
I'll contact Wes. We'll figure out how we're going to record land.

10:35.000 --> 10:37.000
We'll get it all. We'll get it all solved.

10:37.000 --> 10:39.000
Wednesday comes rolling by.

10:39.000 --> 10:44.000
Oh, man, guys. So here's the thing. We have we found this. We think we should probably get this fixed.

10:44.000 --> 10:47.000
It's pretty important for your steering. It's going to be an issue if you don't solve it.

10:47.000 --> 10:52.000
And in the back of my mind, I know all these shops, they're booked out till the end of September.

10:52.000 --> 10:56.000
So if we want to go on a J.B. road trip this summer, I got to get this fixed now.

10:56.000 --> 11:03.000
Now or never. Now or never, Wes. I mean, literally, they're all booked out till the end of September because I've called around.

11:03.000 --> 11:07.000
Let's take care of it. So Thursday day goes by. They get it all taken care of.

11:07.000 --> 11:12.000
We're looking really good. They want to do a test drive. So we schedule all that for Friday morning.

11:12.000 --> 11:17.000
I think we're going to get it. We're going to get out of here. It's going to be fine. Should be all right.

11:17.000 --> 11:20.000
As they're wrapping up doing their test drive.

11:20.000 --> 11:30.000
Can you guys can one of you guess a completely unrelated system that exploded that left us stranded and put us right up against the last minute?

11:30.000 --> 11:33.000
And it's not Levi. No, Levi was good.

11:33.000 --> 11:38.000
Completely unrelated to the work we're doing, just as they're about to wrap up, just as we're about to pull out of the lot.

11:38.000 --> 11:42.000
We had literally another system in the RV blow up.

11:42.000 --> 11:47.000
Any guesses? Anybody have a guess? I have a guess from trends.

11:47.000 --> 11:51.000
I'll call them trends. And I don't want to say that this might be it.

11:51.000 --> 11:57.000
But is it related to a clear fluid that gives life to most things on Earth?

11:57.000 --> 12:01.000
Water? No. No. Really? I was sure it was going to be water.

12:01.000 --> 12:03.000
Thankfully, it was not water. Well, that's good.

12:03.000 --> 12:17.000
No, we had a hydraulic line that we use for our jacks rip open and spew hydraulic fluid all over the motor and the transmission, which created a tremendous amount of smoke.

12:17.000 --> 12:21.000
And there is a lot of hydraulic fluid, so it just dumped.

12:21.000 --> 12:28.000
But here's the other thing. When the hydraulic system is pulling the jacks up, that's when it pressurizes.

12:28.000 --> 12:33.000
And so the jacks began to fall down because the system was losing pressure as the RV is moving.

12:33.000 --> 12:37.000
So then the pump kicks in in overtime to pull the jacks back up.

12:37.000 --> 12:44.000
Right. So then it's just it's just pumping as much hydraulic fluid through the system as it possibly can because it's trying to keep those jacks up.

12:44.000 --> 12:52.000
And so there is just fluid dumping all out the bottom of dupes, all right down over the transmission, because that's right where the hydraulic lines run over is the transmission.

12:52.000 --> 12:55.000
The transmission, of course, is like one hundred and seventy five degrees.

12:55.000 --> 13:01.000
So it ignites. Right. We're getting we're getting we're getting like close to like full on combustion.

13:01.000 --> 13:06.000
This all happens in the lot of the shop. So we stop the rig, shut it all down.

13:06.000 --> 13:10.000
We figure out the hydraulic pump is running like crazy. We go out there, we disconnect it from power.

13:10.000 --> 13:15.000
So it shuts down. We let everything cool down. It's a mess.

13:15.000 --> 13:18.000
And then we're trying to figure out what went wrong.

13:18.000 --> 13:29.000
And you look through you follow the hydraulic line through the engine up over the transmission where they have it hooked to the chassis with like a loop that's running through a metal loop.

13:29.000 --> 13:35.000
And that metal that metal loop had a little bit of a rubber on there to help to help just keep things from rubbing.

13:35.000 --> 13:43.000
But that rubber had fallen off. And so these hydraulic hoses were just chafing against a metal loop over the transmission.

13:43.000 --> 13:45.000
And so it just cut them until they burst.

13:45.000 --> 13:51.000
Yeah. So totally unrelated to the work. But they told us that they've had customers rigs burned down.

13:51.000 --> 13:56.000
You're so lucky this happened where it did and when it did. Imagine we were on the road or something.

13:56.000 --> 14:00.000
I know. I imagine I was on the freeway. Oh, my. If it was even hotter out.

14:00.000 --> 14:06.000
Not only that, but then the shop like sprung into action. They brought the rig back into the shop.

14:06.000 --> 14:11.000
They personally like the techs personally went over to another business in town,

14:11.000 --> 14:19.000
brought them our busted line and had that shop manufacture us a custom new line to fit, which is more robust.

14:19.000 --> 14:23.000
And then they brought it back and hooked it all up for us and got us out of there by the afternoon.

14:23.000 --> 14:28.000
So we can make it back here for the kids and do the show. Just a huge, huge win.

14:28.000 --> 14:31.000
Henderson's lineup in Grants Pass, Oregon. Totally recommend them.

14:31.000 --> 14:35.000
And now, you know, not only that, but juice is in better shape than ever with the suspension.

14:35.000 --> 14:42.000
But for a hot moment there, it got really treacherous. So I'm glad I'm glad that they took care of it for us.

14:42.000 --> 14:46.000
I'm glad it happened there in the parking lot, literally in the parking lot where we could react quick.

14:46.000 --> 14:52.000
We could jump out, figure out what's going on, disconnect the power to the pump and and take care of it before anything got on fire.

14:52.000 --> 14:56.000
And if she was up to full temperature, who knows what would have happened? I don't know.

14:56.000 --> 15:03.000
I know I'm always telling you the horror stories here on the show. I feel like I'm looking at the chat room right now and I feel like the chat room is like,

15:03.000 --> 15:06.000
oh, my God, this sounds like a disaster. First of all, yeah, don't get an RV.

15:06.000 --> 15:14.000
But second of all, what I don't tell you is like all of the great memories and the cool places we'd park and, you know, all that stuff that happens all the time.

15:14.000 --> 15:17.000
I'm just telling you about the really dramatic things that are fun to share on air.

15:17.000 --> 15:23.000
But we are looking forward to a West Coast summer road trip coming up later this year.

15:23.000 --> 15:28.000
And I want to be ship shape and we want to do several meet ups down the road.

15:28.000 --> 15:36.000
So we're going to have more details about that. We're brainstorming and planning that in the office hours podcast, which you can catch at office hours dot here.

15:36.000 --> 15:41.000
But let's talk about Linux for a moment. It's for people who like to mess with computers.

15:41.000 --> 15:45.000
So HP has announced the HP Dev one.

15:45.000 --> 15:53.000
It is an AMD powered Linux laptop, has an AMD Ryzen seven pro processor.

15:53.000 --> 16:04.000
It also has an AMD GPU, a 14 inch anti-glare display, one terabyte of NVMe storage by default, 16 gigs of RAM by default.

16:04.000 --> 16:12.000
But perhaps the most interesting detail about this laptop is that it ships with Pop OS pre-installed.

16:12.000 --> 16:15.000
Pop OS from System 76 is pre-installed on this laptop.

16:15.000 --> 16:28.000
And our understanding is that this has been a relationship that has been months in the making and includes System 76's staff training a team at HP to support Pop OS.

16:28.000 --> 16:34.000
And then a contract or something in place that keeps System 76 as a backup to HP support.

16:34.000 --> 16:39.000
So if you have an issue with this HP Dev one, you go through HP and then they can escalate to System 76.

16:39.000 --> 16:42.000
I have two questions that come to mind from this.

16:42.000 --> 16:49.000
Minimac, I'm curious what your reaction is hearing Pop OS pre-installed on a HP developer laptop.

16:49.000 --> 16:52.000
Yeah, we talked about that in the pre-show.

16:52.000 --> 17:07.000
I was asking myself, could it be that Pop OS has become like a new stable standard for the user that expects that in five years from now his desktop will look the same as it does right now?

17:07.000 --> 17:17.000
We had the same thing like five years ago. If you installed Ubuntu, you could be sure that in two or four years your system would still look the same.

17:17.000 --> 17:20.000
And that starts to change a little bit.

17:20.000 --> 17:29.000
So Pop OS could become some kind of standard for Linux entry user. I don't know.

17:29.000 --> 17:37.000
I mean, you could see a I see what you're saying with like the cosmic desktop could create a standard user interface.

17:37.000 --> 17:40.000
You combine that with something like an Ubuntu LTS base.

17:40.000 --> 17:46.000
I think the other kind of big question there is why Pop OS, right?

17:46.000 --> 17:51.000
You have you have sort of the assumed standard for developer laptops for years.

17:51.000 --> 17:59.000
If you go by the original of this formula, which is the Sputnik is stock Ubuntu. In fact, that was a very intentional choice.

17:59.000 --> 18:04.000
Dell had to learn the hard way not to do a custom Linux, and they took that feedback in from the community.

18:04.000 --> 18:07.000
And one of the lessons they internalized was that you do stock Ubuntu.

18:07.000 --> 18:12.000
But now we see someone going down this path in 2022 and they've chosen Pop OS.

18:12.000 --> 18:15.000
And Brent, I'm curious to know your thoughts about this choice.

18:15.000 --> 18:20.000
I'm a little puzzled. I mean, I love this choice, but I'm a little puzzled because.

18:20.000 --> 18:31.000
HP is kind of, you know, they've been around a while and Pop OS, while they really know their stuff, as we know, is a relatively new distribution.

18:31.000 --> 18:42.000
So it feels like a gamble maybe on their part, although it does sound like they're building a nice connection with those building the software on both sides.

18:42.000 --> 18:47.000
It sounds like a really nice, from what we know, relationship that's happening there.

18:47.000 --> 18:56.000
So it's not like they're just going into it blind. But I'm curious who, you know, they must have looked at choices and landed on Pop OS.

18:56.000 --> 19:00.000
And I have many more questions that I I guess have answers at this point.

19:00.000 --> 19:07.000
And maybe we'll gather some of those in the future. It feels both exciting and kind of like risky at the same time.

19:07.000 --> 19:14.000
And surprising, right? Because there is the obvious element of somewhat cross competition and hardware here.

19:14.000 --> 19:19.000
You could argue that maybe the CUDA laptop is competitive with the dev one or something.

19:19.000 --> 19:27.000
And so there is maybe a clever, like a fox strategy at play here by system 76. I agree with Brent. I've got a lot of questions.

19:27.000 --> 19:33.000
I've been pondering this. I have the sense that system 76 will probably answer any questions we have to the best of their ability.

19:33.000 --> 19:38.000
I just haven't asked them yet because I'm still kind of processing this. What about you?

19:38.000 --> 19:47.000
Actually, in one hand, it's kind of comforting knowing that, you know, system 76 by this point kind of knows their way around this exact task and sector.

19:47.000 --> 19:52.000
And how would I feel about, you know, let's say HP wanted to do this but didn't have their help.

19:52.000 --> 19:59.000
I could see this going kind of kind of poorly if they don't have their their beat on the Linux community in the same way.

19:59.000 --> 20:03.000
And I guess the Sputnik model, I mean, it's old, right? Sputnik happened a long time ago.

20:03.000 --> 20:10.000
And this is a sign that people are not sure exactly where Canonical's focus is.

20:10.000 --> 20:16.000
Not saying they're not in the desktop space, but it's just a different world for them than it was when Sputnik launched.

20:16.000 --> 20:21.000
Yeah, it is. And, you know, when Sputnik launched, everybody was all about the Intel chipset.

20:21.000 --> 20:26.000
And now everybody would love to see a really nice Ryzen laptop. And that's exactly what HP is doing here.

20:26.000 --> 20:28.000
So that's kind of interesting.

20:28.000 --> 20:36.000
And I wonder if in a world of supply chain shortages and whatnot, if this isn't an area that system 76 could apply a little bit of leverage,

20:36.000 --> 20:43.000
because they probably know the needs of a manufacturer like HP better than most shops because they're a hardware manufacturer themselves.

20:43.000 --> 20:48.000
So that makes them sort of a sort of specially suited to interface with for a job like this.

20:48.000 --> 20:54.000
You know, I wonder as well if from HP's perspective, this might be a nice distinguishing factor.

20:54.000 --> 21:00.000
Nobody else is really doing this yet, and though it is kind of exciting. So maybe that's a that's a good thing for HP.

21:00.000 --> 21:05.000
Yeah, it does. It does add sort of a special value that the other laptops don't have.

21:05.000 --> 21:09.000
You mentioned support as well, which is kind of an exciting add on, isn't it?

21:09.000 --> 21:14.000
Yeah, this is still really early, too. We just know basically everything we've told you.

21:14.000 --> 21:21.000
Yeah, I'd really like to be able to go try out some configuration here because, I don't know, I'm not super wowed by the base.

21:21.000 --> 21:27.000
Some of the marketing materials like a little it's a little much, you know, they're really trying to hit this like dev line up hard,

21:27.000 --> 21:30.000
but it's not that shiny in that respect.

21:30.000 --> 21:34.000
Yeah, it feels like it's not quite hitting the note they're looking for.

21:34.000 --> 21:37.000
It's coming across a little too obvious, a little too on the nose.

21:37.000 --> 21:41.000
But, you know, you can see how these have these organizations work, right?

21:41.000 --> 21:44.000
They've identified a category of user.

21:44.000 --> 21:49.000
And the great thing about dev is it's kind of like the way Apple uses the term pro.

21:49.000 --> 21:54.000
I think a lot of people just buy the dev edition that are considered themselves technical.

21:54.000 --> 21:57.000
Yeah, I'm technical. I need I need the fancy one, right?

21:57.000 --> 22:04.000
Yeah. And so it's sort of a it's sort of a term that they can kind of use that tells pretty much anybody who's an enthusiast.

22:04.000 --> 22:06.000
This might be the machine for you.

22:06.000 --> 22:09.000
You know, I look at this kind of stuff from the lens of media production.

22:09.000 --> 22:11.000
We do all of our media production on Linux.

22:11.000 --> 22:20.000
And so one of the things that we do to try to make that as smooth as possible is we try to use hardware that's well supported by the kernel, you know, stuff that's just baked in.

22:20.000 --> 22:24.000
And the shortcut to that is just use stuff that has open source drivers.

22:24.000 --> 22:30.000
And that's the nice thing about this AMD hardware is the GPU driver is open source.

22:30.000 --> 22:34.000
And that solves so many of the stability problems on desktop Linux right there.

22:34.000 --> 22:38.000
So, you know, that's it's that's what makes it appealing to me.

22:38.000 --> 22:40.000
We'll have a link if you want to check it out.

22:40.000 --> 22:44.000
Send us your questions. Linux Unplugged dot com slash contact or boost them into the show.

22:44.000 --> 22:55.000
We'll collect some of them and then try to open up some communications between HP System 76 and get some answers for you all.

22:55.000 --> 23:00.000
Linode dot com slash unplugged. Go there to get one hundred dollars in 60 day credit on a new account.

23:00.000 --> 23:08.000
Yeah, you go there to support the show. Linode is a sponsor I am thrilled to work with because I honestly feel like they've been part of my secret sauce.

23:08.000 --> 23:14.000
Bringing Jupiter broadcasting independent again, going from zero to one hundred miles per hour, right?

23:14.000 --> 23:19.000
Demerging and creating a new business and keeping everything going, keeping all the lights going.

23:19.000 --> 23:22.000
It's like it's like fixing the bus as it's going down the road.

23:22.000 --> 23:33.000
And it would not have been possible without spinning up infrastructure at Linode and the tooling to do that, their API, the command line clients, the pricing, the support behind it.

23:33.000 --> 23:35.000
It all plays a factor.

23:35.000 --> 23:41.000
They've been focused on this for nearly 19 years, making it possible to just run applications on Linux and make it work great.

23:41.000 --> 23:50.000
And of course, I love the fact that they make it super simple to run any distribution you'd really want to, including the latest centos stylings out there, as we could call them.

23:50.000 --> 23:56.000
And of course, when you take advantage of our offer by going to Linode dot com slash unplugged, you get that hundred dollars.

23:56.000 --> 24:02.000
So you could try deploying some of their epic processor systems, try out their super fast rigs.

24:02.000 --> 24:06.000
They've got 11 data centers around the world. They have MVME PCI storage available.

24:06.000 --> 24:09.000
Of course, they've got SSDs and everything as well.

24:09.000 --> 24:15.000
I mean, the options and the tiers are going to fit perfectly with what you need, either for a personal site or something for your business.

24:15.000 --> 24:18.000
And I can say that because that's exactly what I do.

24:18.000 --> 24:21.000
I've got systems up there that just act as support systems to my RV.

24:21.000 --> 24:26.000
So that way I can synchronize and move data up into the cloud and then down to my RV over cellular connections.

24:26.000 --> 24:29.000
I use Linode to sort of like support infrastructure.

24:29.000 --> 24:35.000
I consider them like my orbital systems that are supporting my RV, and I personally pay for that.

24:35.000 --> 24:40.000
But over on the J.B. side of the house, we've been deploying to our audience and hitting higher numbers than ever.

24:40.000 --> 24:43.000
And Linode's been scaling with us all along the way.

24:43.000 --> 24:46.000
So they're for something personal or something for your business.

24:46.000 --> 24:51.000
They've got the infrastructure for you and they're not trying to lock you into some esoteric, crazy platform.

24:51.000 --> 24:57.000
Go try something, go learn something and go support the show and go try out the best cloud hosting in the business

24:57.000 --> 25:02.000
and get $100 while you do it. Just go to linode.com slash unplugged.

25:06.000 --> 25:10.000
Now, gentlemen, I was just listening to the Linux action news this morning before we came on air,

25:10.000 --> 25:14.000
and you were talking quite excitedly about BcashFS.

25:14.000 --> 25:18.000
And I'm curious if Wes got his paws deep, deep into this.

25:18.000 --> 25:20.000
This is something that we've been following for a while.

25:20.000 --> 25:25.000
Wes and I are both big fans of Kent Overstreet, the primary developer of BcashFS,

25:25.000 --> 25:36.000
because he's creating a file system that could be a great replacement for my beloved XFS and ButterFS in one file system.

25:36.000 --> 25:43.000
You know, something that supports copy on write, something that has snapshots, but also really good performance.

25:43.000 --> 25:45.000
I mean, I think that's what attracts you to it as well, right?

25:45.000 --> 25:47.000
It's another chance at a modern file system.

25:47.000 --> 25:52.000
You know, I mean, even ButterFS, which is pretty gosh darn new in terms of, you know, file systems.

25:52.000 --> 25:57.000
It started a long, a long time ago and has seen many different eras at this point.

25:57.000 --> 26:01.000
And we have new ideas. We've learned a lot in the intervening years.

26:01.000 --> 26:08.000
BcashFS is kind of neat because it comes from Bcash, which was already sort of almost the bottom half of a file system.

26:08.000 --> 26:12.000
You know, it had a lot of the similar operations already sort of implemented in the kernel.

26:12.000 --> 26:16.000
Now, you know, there needed to be some updates, and that's part of the work that Kent has been doing,

26:16.000 --> 26:20.000
is sort of modernizing and improving things as the kernel has changed over the years there as well.

26:20.000 --> 26:23.000
But it means it, you know, wasn't totally starting from scratch.

26:23.000 --> 26:31.000
It's just kind of adding a lot of the nicer file system stuff on top, which means not saying go put a bunch of precious data in BcashFS.

26:31.000 --> 26:33.000
Let's get that out of the way right now.

26:33.000 --> 26:35.000
But it's come a surprisingly long way.

26:35.000 --> 26:40.000
And I think in today's episode, we're just suggesting if you're curious,

26:40.000 --> 26:44.000
it's getting a little easier to actually give it a try and maybe even use it.

26:44.000 --> 26:48.000
Yeah, this is it's now entering the we want to be confident when we switch to this.

26:48.000 --> 26:51.000
So let's start trying this out years in advance.

26:51.000 --> 26:54.000
I've lost track of how many years you and I have been tracking BcashFS.

26:54.000 --> 26:55.000
It's been a long time.

26:55.000 --> 26:58.000
Yeah, you know, Kent's got a Patreon.

26:58.000 --> 26:59.000
He gives some some updates.

26:59.000 --> 27:03.000
But, you know, depending on how things are going, that's maybe a couple of times a year.

27:03.000 --> 27:08.000
What changed recently is he gave a presentation at a conference about it,

27:08.000 --> 27:12.000
and then LWN did a great write up of sort of detailing what they were talking about.

27:12.000 --> 27:17.000
Yeah, we recap that in Linux Action News, and we'll also have it linked here in the show notes.

27:17.000 --> 27:19.000
So you can read up on it.

27:19.000 --> 27:24.000
But the long and the short is, is that there's been some big work done

27:24.000 --> 27:27.000
and we're getting within the home stretch for mainlining it.

27:27.000 --> 27:32.000
So perhaps in the next six months to a year, we're going to see it land in the Linux kernel.

27:32.000 --> 27:38.000
Along with that, we're also, you know, getting an opportunity.

27:38.000 --> 27:43.000
To really see how something like this comes along in the free software community.

27:43.000 --> 27:45.000
I was just speculating before the show started.

27:45.000 --> 27:50.000
I wonder how much money Apple spent developing APFS.

27:50.000 --> 27:52.000
I think I read somewhere.

27:52.000 --> 27:54.000
We don't really know. They don't share these details, right?

27:54.000 --> 27:59.000
But I think I read somewhere they spent five to six years internally developing APFS.

27:59.000 --> 28:04.000
You got to figure they had probably at least somewhere between three to a dozen engineers,

28:04.000 --> 28:07.000
perhaps more, a project manager at least.

28:07.000 --> 28:13.000
How many millions do you suppose Apple spent developing APFS?

28:13.000 --> 28:18.000
And we've been watching BcashFS created out in the open.

28:18.000 --> 28:21.000
A file system that has a focus on performance.

28:21.000 --> 28:25.000
In fact, Kent says that some of the early adopters of BcashFS

28:25.000 --> 28:29.000
are video production shops that need multiple 4k streams.

28:29.000 --> 28:31.000
They're already using it.

28:31.000 --> 28:35.000
And we've watched this rollout and we're going to see it land in the Linux kernel.

28:35.000 --> 28:38.000
A multi-year project.

28:38.000 --> 28:40.000
And we get it for absolutely free.

28:40.000 --> 28:43.000
We get it for free as users and we can see the whole thing be made.

28:43.000 --> 28:45.000
And this is truly how free software works.

28:45.000 --> 28:48.000
And so that's one of the reasons we've watched this project too.

28:48.000 --> 28:53.000
But now it's really not that hard to get a module installed on a current Linux box

28:53.000 --> 28:55.000
and get BcashFS support.

28:55.000 --> 29:00.000
So you built a custom Nix OS image, which is one of the nice things you can do with Nix.

29:00.000 --> 29:04.000
Yeah, okay. So one way or another you're going to have to get a new kernel.

29:04.000 --> 29:11.000
Do some kernel building anyway and get the BcashFS patches integrated in.

29:11.000 --> 29:13.000
How you want to do that, you know, you have a few options.

29:13.000 --> 29:15.000
But yeah, Nix OS makes it super easy.

29:15.000 --> 29:19.000
Arch is another good candidate because there's both the user space tools

29:19.000 --> 29:22.000
and the kernel packaged up in the AUR.

29:22.000 --> 29:26.000
But of course, you got to still build that.

29:26.000 --> 29:31.000
And Nix, Nix has the Linux testing kernel with BcashFS available

29:31.000 --> 29:34.000
and built in in their caches already.

29:34.000 --> 29:37.000
So that makes it really pretty darn quick to get it up and going

29:37.000 --> 29:39.000
and built and installed and available.

29:39.000 --> 29:43.000
And then because Nix is awesome, you can follow some directions in the Nix OS Wiki

29:43.000 --> 29:47.000
to build yourself a custom installer ISO.

29:47.000 --> 29:51.000
And then you can just right there, just in the same way you would on your system,

29:51.000 --> 29:54.000
you can specify like, hey, I want this kernel, I want these things installed.

29:54.000 --> 29:57.000
So when we started thinking, all right, it's time,

29:57.000 --> 30:01.000
we've been sort of, you know, oohing and ahhing from the sidelines for ages now.

30:01.000 --> 30:04.000
Let's try and get our hands at least a little bit dirty and try this stuff out.

30:04.000 --> 30:05.000
How are we going to do it?

30:05.000 --> 30:08.000
I don't know, it didn't seem like making you and Brent sign up

30:08.000 --> 30:11.000
for custom compiling your own kernel wasn't necessarily fair.

30:11.000 --> 30:12.000
Thank you.

30:12.000 --> 30:15.000
It seemed like a nice easy way to try to like bridge the gap a little bit

30:15.000 --> 30:17.000
because here's an ISO you could just boot up in a virtual machine

30:17.000 --> 30:21.000
or on real hardware, and then you would have that stuff ready to go.

30:21.000 --> 30:23.000
This is why we were really attracted to Nix OS.

30:23.000 --> 30:27.000
Picture what he just said and apply it to something like a workstation or server environment.

30:27.000 --> 30:32.000
He has the primitives to build his own distro using the Nix tooling,

30:32.000 --> 30:38.000
and his distro comes preloaded with BcacheFS and the Ferronix test suite and stuff like that.

30:38.000 --> 30:44.000
But we could just as easily have a distro that comes preloaded with our specific Linux desktop environment,

30:44.000 --> 30:48.000
our favorite Linux application for recording audio, which is called Reaper,

30:48.000 --> 30:53.000
Mumble, and a web browser, and you could have a ready to go ISO image

30:53.000 --> 30:57.000
that just deploys the absolute latest versions of all that stuff on a box

30:57.000 --> 31:00.000
that Wes cooks up ahead of time.

31:00.000 --> 31:03.000
Now we're doing it for testing, which I could see us doing this more often too, right?

31:03.000 --> 31:05.000
This opens up a whole new world for us.

31:05.000 --> 31:06.000
So how is it going?

31:06.000 --> 31:08.000
Yeah, I will also just say a little bit more with the Nix love.

31:08.000 --> 31:11.000
That was like 12 lines because you just say like, hey, import the Nix config

31:11.000 --> 31:14.000
for the existing graphical GNOME install environment

31:14.000 --> 31:16.000
and then customize these couple of things.

31:16.000 --> 31:19.000
So, you know, I put Nano on there for you guys.

31:19.000 --> 31:20.000
Thank you.

31:20.000 --> 31:22.000
Thank you for doing that, Wes.

31:22.000 --> 31:23.000
We do appreciate that.

31:23.000 --> 31:25.000
I noticed Vim in there too, though.

31:25.000 --> 31:26.000
Oh, yeah.

31:26.000 --> 31:27.000
Well, I mean, I'm not a monster.

31:27.000 --> 31:33.000
So we wanted to maybe do a little A and B between BcacheFS and ButterFS.

31:33.000 --> 31:35.000
We also just kind of wanted to get some general numbers.

31:35.000 --> 31:38.000
So we're going to play around with this, and we thought maybe one of the ways

31:38.000 --> 31:41.000
we could kind of get some workstation-based performance metrics

31:41.000 --> 31:43.000
would be to throw the Ferronix test suite at it.

31:43.000 --> 31:45.000
So you got that loaded on there now?

31:45.000 --> 31:46.000
I'm working on that at the moment.

31:46.000 --> 31:48.000
Oh, okay, okay.

31:48.000 --> 31:52.000
Well, it's going to take a long time to run is the main problem.

31:52.000 --> 31:54.000
So we do have FIO as well.

31:54.000 --> 31:58.000
But maybe we should see like what all do we want to run?

31:58.000 --> 32:02.000
Because part of my ideas here with Arch as well was maybe we put you on

32:02.000 --> 32:05.000
BcacheFS's route and see what happens there.

32:05.000 --> 32:08.000
I think there's kind of an open question of exactly all the ways

32:08.000 --> 32:10.000
we might want to evaluate this new file system.

32:10.000 --> 32:11.000
Right.

32:11.000 --> 32:14.000
Yeah, there's like how does it do in just high-demand burst performance?

32:14.000 --> 32:16.000
How does it do as a daily driver?

32:16.000 --> 32:19.000
How does it do over a sustained period of time?

32:19.000 --> 32:22.000
Because it already has – not everything's there.

32:22.000 --> 32:24.000
Like send and receive, not there yet.

32:24.000 --> 32:28.000
There's some optimizations that you'll see in the docs,

32:28.000 --> 32:31.000
which also need improvement that haven't been applied yet.

32:31.000 --> 32:33.000
But there's already compression support.

32:33.000 --> 32:35.000
There's already multi-device support.

32:35.000 --> 32:37.000
There's already encryption support baked in.

32:37.000 --> 32:43.000
There's already snapshots baked in and seemingly like kind of different snapshots.

32:43.000 --> 32:45.000
So that's where it's neat too.

32:45.000 --> 32:47.000
Okay. I like this.

32:47.000 --> 32:49.000
Very similar user space interface as ButterFS.

32:49.000 --> 32:51.000
So you can just create a new subvolume.

32:51.000 --> 32:53.000
They're called subvolumes.

32:53.000 --> 32:56.000
You can either create an empty subvolume or you can create one as a snapshot

32:56.000 --> 32:59.000
of another subvolume and by default they're writable.

32:59.000 --> 33:03.000
And then you can snapshot those again so you can make like trees of snapshots

33:03.000 --> 33:05.000
however you like.

33:05.000 --> 33:07.000
And they're very cheap to create.

33:07.000 --> 33:09.000
At least here's what the docs say.

33:09.000 --> 33:13.000
They're not based on cloning of copy-on-write B-trees as with ButterFS,

33:13.000 --> 33:18.000
but instead are based on versioning of individual keys in the B-trees.

33:18.000 --> 33:21.000
Many thousands or millions of snapshots can be created

33:21.000 --> 33:23.000
with the only limitation being disk space.

33:23.000 --> 33:25.000
So I guess have at it.

33:25.000 --> 33:27.000
So that's part of the stuff too.

33:27.000 --> 33:30.000
Like it'd be nice to maybe run some performance benchmarks on, you know,

33:30.000 --> 33:34.000
some of these XFS, say, ButterFS and Bcache

33:34.000 --> 33:37.000
and then go a little crazy with big files on there,

33:37.000 --> 33:40.000
put a bunch of snapshots, change some things in those snapshots.

33:40.000 --> 33:43.000
Yeah, like which one snapshots faster?

33:43.000 --> 33:45.000
Which one ends up eating my disk up more?

33:45.000 --> 33:47.000
Well, yeah, does it get sluggish after that?

33:47.000 --> 33:49.000
Does it start to take a long time to take a snapshot?

33:49.000 --> 33:50.000
Yeah.

33:50.000 --> 33:53.000
So BcacheFS also, like I mentioned earlier,

33:53.000 --> 33:57.000
is a modern copy-on-write file system which is what you want.

33:57.000 --> 33:59.000
In general, they've gone for a really clean, simple,

33:59.000 --> 34:02.000
and high-performance implementation of copy-on-write.

34:02.000 --> 34:06.000
So again, you're getting features that ZFS and ButterFS have,

34:06.000 --> 34:10.000
but you're getting them with an implementation towards performance.

34:10.000 --> 34:14.000
And BcacheFS itself is architected more like a file system

34:14.000 --> 34:17.000
that lives on top of a relational database

34:17.000 --> 34:19.000
with tables for the different file system data types.

34:19.000 --> 34:21.000
So you have different tables in there for your extents,

34:21.000 --> 34:24.000
your inodes, your extended attributes, et cetera.

34:24.000 --> 34:27.000
So it can look it up super fast.

34:27.000 --> 34:28.000
Now, before we do any benchmarks,

34:28.000 --> 34:31.000
we do want to see how things line up performance-wise.

34:31.000 --> 34:33.000
I know Brent's got some questions.

34:33.000 --> 34:36.000
I've got some questions, but I'll hand the mic over to Brent.

34:36.000 --> 34:37.000
Go ahead.

34:37.000 --> 34:38.000
Get your questions in, Brent.

34:38.000 --> 34:39.000
Okay.

34:39.000 --> 34:41.000
Well, I think my very first question is,

34:41.000 --> 34:46.000
I heard rumors that there might be some Rust connection here,

34:46.000 --> 34:48.000
maybe in a client or something,

34:48.000 --> 34:50.000
or they're trying to interact in a really nice way.

34:50.000 --> 34:51.000
Is that true?

34:51.000 --> 34:53.000
The Rust connection I think that you're thinking of

34:53.000 --> 34:57.000
is there is conversations about using some of the kernel's

34:57.000 --> 34:59.000
upcoming Rust support with BcacheFS.

34:59.000 --> 35:02.000
Sounds like Kent is definitely interested there.

35:02.000 --> 35:04.000
And I guess there's maybe already some Rust

35:04.000 --> 35:06.000
in some of the user space stuff.

35:06.000 --> 35:08.000
I would assume there's some features in Rust

35:08.000 --> 35:10.000
that are helpful in this case.

35:10.000 --> 35:13.000
I don't know any of it, but it seems to me like

35:13.000 --> 35:15.000
those two might be a really nice complement.

35:15.000 --> 35:17.000
Well, there's also just, I mean, besides all the, you know,

35:17.000 --> 35:22.000
fancy compiler stuff and memory tracking and wrangling,

35:22.000 --> 35:24.000
you just get a nice developer experience, you know?

35:24.000 --> 35:27.000
It's got modern tooling with cargo.

35:27.000 --> 35:29.000
And you've got people who are excited to work in it and learn it.

35:29.000 --> 35:31.000
You've got momentum there too,

35:31.000 --> 35:32.000
which I think makes a difference.

35:32.000 --> 35:35.000
And so you take something that's new like BcacheFS

35:35.000 --> 35:38.000
and you kind of work with something that's got a lot of excitement

35:38.000 --> 35:41.000
like Rust, and you can kind of see how it makes sense

35:41.000 --> 35:42.000
for some developers.

35:42.000 --> 35:45.000
Kent said that if other developers are passionate

35:45.000 --> 35:47.000
about getting Rust support in the Linux kernel,

35:47.000 --> 35:49.000
that they should speak up more because they want to see that happen.

35:49.000 --> 35:50.000
Although it's going to happen.

35:50.000 --> 35:52.000
It's definitely going to happen.

35:52.000 --> 35:54.000
I think my second question is

35:54.000 --> 35:57.000
maybe more of a philosophical exploration.

35:57.000 --> 36:01.000
I know for like the last decade we've been talking about sort of,

36:01.000 --> 36:04.000
you know, quote unquote, modern file systems,

36:04.000 --> 36:07.000
and ZFS and BUNNERFS have been wonderful.

36:07.000 --> 36:09.000
I'm sure there are others I don't know about.

36:09.000 --> 36:12.000
Personally, I feel like I'm always behind on that game,

36:12.000 --> 36:14.000
but my question then becomes—

36:14.000 --> 36:16.000
You're still running ext3? Wow.

36:16.000 --> 36:20.000
Right? It's so stable, well understood, question mark.

36:20.000 --> 36:23.000
I guess my question is, do you think there will be a point

36:23.000 --> 36:27.000
at which we have all of the file systems we need?

36:27.000 --> 36:30.000
You know, some of the recent features that have come out

36:30.000 --> 36:33.000
in modern file systems are really, really helpful.

36:33.000 --> 36:36.000
But is there an end, you know, is there an end point?

36:36.000 --> 36:38.000
Or are we just going to consistently keep getting new

36:38.000 --> 36:42.000
and newer and newer file systems every, you know, five to ten years?

36:42.000 --> 36:45.000
It may be hard to separate that question from the underlying technology too.

36:45.000 --> 36:48.000
You know, like some stuff like F2FS sort of came around

36:48.000 --> 36:51.000
when Flash really became popular.

36:51.000 --> 36:55.000
To some extent, if the systems that we, you know,

36:55.000 --> 36:59.000
are storing things to change, then maybe our file systems have to.

36:59.000 --> 37:04.000
In a vacuum, I don't know, that might depend on our, you know,

37:04.000 --> 37:07.000
how many new cool theoretical or implementation tricks

37:07.000 --> 37:09.000
have we come up to make them faster.

37:09.000 --> 37:11.000
Yeah, I know that there are also just different approaches

37:11.000 --> 37:15.000
developers take depending on the type of storage medium.

37:15.000 --> 37:18.000
There is just different things about spinning rust

37:18.000 --> 37:20.000
than there is about an NVME storage drive.

37:20.000 --> 37:23.000
And so you can optimize a file system for those differences

37:23.000 --> 37:25.000
and take advantage of that performance.

37:25.000 --> 37:28.000
And I think because we're always looking for faster performance

37:28.000 --> 37:33.000
and storage is generally increasing, I would imagine,

37:33.000 --> 37:36.000
and because you're always seeing different types of application workloads

37:36.000 --> 37:38.000
with different file requirements,

37:38.000 --> 37:42.000
I'd imagine we're always going to see new file systems coming around.

37:42.000 --> 37:47.000
But the ones that really solve the high-end workstation use case,

37:47.000 --> 37:49.000
I think those are a little more rare.

37:49.000 --> 37:51.000
I wanted it to be ButterFS.

37:51.000 --> 37:57.000
I think ButterFS works great on like a laptop SSD or on a Raspberry Pi.

37:57.000 --> 38:00.000
But maybe BcacheFS could be even better for that role.

38:00.000 --> 38:02.000
I feel like you could go too far.

38:02.000 --> 38:05.000
You know, you could always have new file systems all the time.

38:05.000 --> 38:08.000
But experience has shown us that I think the Linux kernel is actually,

38:08.000 --> 38:10.000
they're very careful about this kind of thing,

38:10.000 --> 38:13.000
and they don't just let any file system in.

38:13.000 --> 38:16.000
And Overstreet has been working on this for years

38:16.000 --> 38:20.000
to try to make this perfect as close as it can be to perfect.

38:20.000 --> 38:24.000
It's kind of funny in that regard because he's being quite cautious

38:24.000 --> 38:27.000
around when to submit for mainlining.

38:27.000 --> 38:29.000
Yeah, because nothing's going to be perfect software-wise.

38:29.000 --> 38:32.000
But it's as close to stables he can get it before he submits it.

38:32.000 --> 38:34.000
To the point that some of the other file system developers are like,

38:34.000 --> 38:37.000
hey, are you going to get this thing in or what?

38:37.000 --> 38:40.000
Because even some of the ButterFS folks have said,

38:40.000 --> 38:42.000
look, there's some stuff we might want to copy or learn from

38:42.000 --> 38:45.000
that you've been doing here that we might be able to take advantage of.

38:45.000 --> 38:50.000
Yeah, that'd be nice to see too.

38:50.000 --> 38:53.000
So yeah, I think it's always going to be evolving, Brent.

38:53.000 --> 38:57.000
And I think there's just some for the different jobs and different hardware.

38:57.000 --> 38:58.000
That makes sense.

38:58.000 --> 39:02.000
I mean, as long as there's someone to maintain it, then it's all right.

39:02.000 --> 39:04.000
Well, let's hope there's always someone.

39:04.000 --> 39:06.000
All right, with those questions out of the way,

39:09.000 --> 39:11.000
let's see how it stacks up.

39:11.000 --> 39:17.000
ButterFS, BcashFS, BcashFS still in the pre-release phase.

39:17.000 --> 39:22.000
ButterFS, years in development, now in production.

39:22.000 --> 39:26.000
Compared side-by-side, how'd they do, Westpain?

39:26.000 --> 39:30.000
ButterFS has the edge.

39:30.000 --> 39:31.000
Oh!

39:31.000 --> 39:33.000
Perhaps an unexpected result.

39:33.000 --> 39:43.000
563 megabytes per second compared with 531 for the newbie BcashFS.

39:43.000 --> 39:46.000
Well, not too surprising, I suppose, really, right?

39:46.000 --> 39:50.000
I mean, you got ButterFS on that system, years of production optimization.

39:50.000 --> 39:53.000
But you know, that seems kind of already decently competitive.

39:53.000 --> 39:56.000
Now these are early numbers and we're just doing basic benchmarks here.

39:56.000 --> 39:57.000
And default mount options.

39:57.000 --> 39:58.000
That's right.

39:58.000 --> 39:59.000
I haven't customized a darn thing.

39:59.000 --> 40:02.000
Now we could throw XFS in here just to see.

40:02.000 --> 40:04.000
You got enough room on there?

40:04.000 --> 40:05.000
I could do that, yeah.

40:05.000 --> 40:06.000
Okay.

40:09.000 --> 40:11.000
All right, Westpain.

40:11.000 --> 40:13.000
How long will it take Westpain?

40:13.000 --> 40:15.000
I can barely get a sentence out today,

40:15.000 --> 40:18.000
so we'll see how long it takes him to get a partition out.

40:18.000 --> 40:19.000
Oh, it's already partitioned.

40:19.000 --> 40:20.000
Now we got FIO running.

40:20.000 --> 40:21.000
Oh, okay.

40:21.000 --> 40:23.000
Well, I just stole the ButterFS partition.

40:23.000 --> 40:24.000
Oh, yeah.

40:24.000 --> 40:27.000
You know, we should mention while that benchmark is running,

40:27.000 --> 40:30.000
there is a BcashFS convert function.

40:30.000 --> 40:31.000
Like, you can convert.

40:31.000 --> 40:32.000
You can migrate.

40:32.000 --> 40:33.000
Yeah.

40:33.000 --> 40:38.000
So far, I've only tried it with ext4, but we could try it with this.

40:38.000 --> 40:39.000
It's kind of neat though.

40:39.000 --> 40:42.000
You know, it kind of takes up the rest of the remaining space with its own file

40:42.000 --> 40:44.000
and then does some neat sort of offset tricks.

40:44.000 --> 40:49.000
So then you can go in, mount the new file system,

40:49.000 --> 40:54.000
take a look at its backup that basically gets you backup of your old file system.

40:54.000 --> 40:59.000
And then if that all looks good, delete the old stuff and reclaim your space.

40:59.000 --> 41:00.000
Okay, Westpain.

41:00.000 --> 41:01.000
I think your time is just about up.

41:01.000 --> 41:06.000
How did BcashFS compare to the tried and true XFS,

41:06.000 --> 41:10.000
which has been around for decades, finely tuned,

41:10.000 --> 41:16.000
refined a file system I've used in production on terabytes and terabytes of data?

41:16.000 --> 41:20.000
At the moment, you can't shrink either of them, so they share that in common.

41:20.000 --> 41:21.000
Oh.

41:21.000 --> 41:23.000
How do they do performance-wise?

41:23.000 --> 41:24.000
Which one stacks up?

41:24.000 --> 41:34.000
Oh, I'm sorry to say XFS looks like it's the coal year winner by about 100 megs per second.

41:34.000 --> 41:40.000
Yeah, so bottom of the bunch is BcashFS, our newbie and somehow already a new favorite.

41:40.000 --> 41:42.000
531 megs.

41:42.000 --> 41:45.000
ButteButterFS is next at 563.

41:45.000 --> 41:49.000
And then at the top is XFS 629.

41:49.000 --> 41:51.000
Look, guys, we're going to bounce back from this.

41:51.000 --> 41:53.000
We're going to build back this file system even better.

41:53.000 --> 41:55.000
We're going to optimize.

41:55.000 --> 41:56.000
It's going to be fine.

41:56.000 --> 41:58.000
We're going to recover from this.

41:58.000 --> 42:01.000
I believe in Kent and the folks that contribute to this file system.

42:01.000 --> 42:04.000
It's early days.

42:04.000 --> 42:07.000
But it's not about performance before they submit to the kernel.

42:07.000 --> 42:09.000
It's probably more about stability.

42:09.000 --> 42:13.000
Maybe the performance stuff doesn't really start getting worked out until it's on a lot of different systems.

42:13.000 --> 42:15.000
If you are going to start poking around with this,

42:15.000 --> 42:19.000
there is a PDF doc, sort of like a maintainer administrator's guide.

42:19.000 --> 42:23.000
And well worth a read, there's a lot of some details about the underlying structure

42:23.000 --> 42:26.000
and what's different compared to stuff you might know like ButterFS or ZFS.

42:26.000 --> 42:30.000
And yeah, you'll see in there that there's definitely a lot of optimizations that Kent's got ideas about

42:30.000 --> 42:35.000
that are sort of planned, but just haven't been dotted those eyes yet.

42:35.000 --> 42:36.000
And I'll say this, too.

42:36.000 --> 42:40.000
BcashFS has followed that tradition that ZFS followed

42:40.000 --> 42:44.000
where they really tried to get it rock solid and build on top of it

42:44.000 --> 42:47.000
and not have something they're trying to fix after the fact all the time,

42:47.000 --> 42:51.000
which I think is where some of the criticisms toward ButterFS have come from.

42:51.000 --> 42:52.000
Oh, here we go.

42:52.000 --> 42:55.000
I'm just going to migrate this XFS file system to BcashFS now that we're done with it.

42:55.000 --> 42:56.000
Yeah, we're not.

42:56.000 --> 42:58.000
So you can do ButterFS as far as we know.

42:58.000 --> 43:00.000
ButterFS, Extended4, and XFS.

43:00.000 --> 43:03.000
I haven't tried ButterFS yet, but I could.

43:03.000 --> 43:04.000
I mean, I'm just curious.

43:04.000 --> 43:06.000
But it's exciting to watch this be developed.

43:06.000 --> 43:11.000
And it is, for us, a moment just because it is getting so close.

43:11.000 --> 43:13.000
Kent just did that update, which we'll link to.

43:13.000 --> 43:14.000
It's nigh.

43:14.000 --> 43:16.000
And I think when it ships, we'll give it another look

43:16.000 --> 43:19.000
to see if the performance situation has changed at all,

43:19.000 --> 43:21.000
see what the stability situation is looking like.

43:21.000 --> 43:23.000
And maybe in the meantime, we'll keep it on that system for a while.

43:23.000 --> 43:24.000
Yeah.

43:24.000 --> 43:25.000
Why not?

43:25.000 --> 43:26.000
Yeah.

43:26.000 --> 43:27.000
Play around with it.

43:27.000 --> 43:28.000
Play around with the snapshots.

43:28.000 --> 43:29.000
Because that's part of the story, too.

43:29.000 --> 43:31.000
This is one test of many.

43:31.000 --> 43:34.000
And so we can throw the Ferronix Workstation benchmark at it.

43:34.000 --> 43:36.000
We could see what the snapshot performance is like and get a better picture.

43:36.000 --> 43:39.000
I'd also really like to play with some of its multi-disc support

43:39.000 --> 43:42.000
because it's got its own take on erasure coding.

43:42.000 --> 43:45.000
It's got its own version of RAID 5.6 sort of functionality

43:45.000 --> 43:50.000
that's totally a bit different than the failed ButterFS take,

43:50.000 --> 43:53.000
which is exciting on its own and the way that CFS does it, too.

43:56.000 --> 43:58.000
Bitwarden.com slash Linux.

43:58.000 --> 44:02.000
Go there to get started with a free trial of Teams, Enterprise, or a personal plan.

44:02.000 --> 44:06.000
Just try it out right now by going to Bitwarden.com slash Linux.

44:06.000 --> 44:10.000
This is the easiest way for you as an individual or your team or your business

44:10.000 --> 44:14.000
to share, store, and synchronize sensitive data.

44:14.000 --> 44:15.000
And Bitwarden is open source.

44:15.000 --> 44:18.000
It's trusted by millions of individuals, teams, and organizations.

44:18.000 --> 44:22.000
It's what Wes and I use to manage our passwords and our secrets.

44:22.000 --> 44:24.000
And we got an email in from listener Brett.

44:24.000 --> 44:28.000
He said, you know, I tried out Bitwarden after you guys mentioned it on the show.

44:28.000 --> 44:30.000
I loved it so much for my personal use.

44:30.000 --> 44:32.000
I even got the paid tier to support them.

44:32.000 --> 44:33.000
And then I went one step further.

44:33.000 --> 44:37.000
I managed to convince my manager of the awesomeness of Bitwarden

44:37.000 --> 44:40.000
and then the CIO, which resulted in me getting to roll out

44:40.000 --> 44:44.000
the self-hosted Enterprise instance for our entire IT team.

44:44.000 --> 44:47.000
I don't know how we managed without it now.

44:47.000 --> 44:49.000
Brett, I totally know what you mean.

44:49.000 --> 44:52.000
In fact, it's a little scary to think how it used to get managed before Bitwarden.

44:52.000 --> 44:53.000
It's great for individuals.

44:53.000 --> 44:54.000
It's great for teams.

44:54.000 --> 44:58.000
It's even great for your friends and family because having secure passwords,

44:58.000 --> 45:01.000
having a unique secure password at every site and service they use

45:01.000 --> 45:06.000
is probably the number one thing everyday users could do to keep themselves protected.

45:06.000 --> 45:08.000
And now Bitwarden has added a username generator.

45:08.000 --> 45:11.000
So now you can have a unique random username and password

45:11.000 --> 45:13.000
at every site and service you use.

45:13.000 --> 45:16.000
And they just make it all so simple and straightforward.

45:16.000 --> 45:18.000
I love using Bitwarden.

45:18.000 --> 45:20.000
It's really taken my security game to the next level.

45:20.000 --> 45:24.000
Once I added my two-factor token codes in there, please.

45:24.000 --> 45:26.000
I can't believe I wasn't doing it this way before.

45:26.000 --> 45:29.000
And I love the fact that I can self-host if I want that option too.

45:29.000 --> 45:34.000
And they've got a big community of DIYers and folks using the cloud service.

45:34.000 --> 45:36.000
And the pricing is absolutely reasonable.

45:36.000 --> 45:39.000
So go try it out for free as an individual user

45:39.000 --> 45:42.000
or go get a free trial for teams and enterprise plans.

45:42.000 --> 45:44.000
It's all available over at Bitwarden.com slash Linux.

45:44.000 --> 45:48.000
Individual or team, enterprise or just yourself.

45:48.000 --> 45:49.000
Go try it out.

45:49.000 --> 45:51.000
Start practicing better security.

45:51.000 --> 45:55.000
Or maybe send that link to someone you know who needs to start doing that.

45:55.000 --> 45:58.000
Bitwarden.com slash Linux.

46:02.000 --> 46:04.000
Once again, we got some great feedback.

46:04.000 --> 46:08.000
You can go to linuxunplugged.com slash contact to send some of that.

46:08.000 --> 46:10.000
Thank you very much.

46:10.000 --> 46:13.000
Peter wrote in with some great suggestions,

46:13.000 --> 46:16.000
continuing the conversation on booting ARM.

46:16.000 --> 46:20.000
So in Linux Unplugged 4.5.6 and also 4.5.7,

46:20.000 --> 46:25.000
where the issue of booting an ARM and the general fragmentation of the ARM platform was discussed,

46:25.000 --> 46:30.000
he mentions that there's a great project that, in his opinion,

46:30.000 --> 46:34.000
needs to be mentioned in this context called TauBoot.

46:34.000 --> 46:36.000
That's TauBoot.org.

46:36.000 --> 46:39.000
TauBoot has the goal of making booting on ARM boring,

46:39.000 --> 46:41.000
which I think in this case is probably a good thing.

46:41.000 --> 46:46.000
It's a U-Boot distribution that implements EBBR for UEFI,

46:46.000 --> 46:50.000
like booting, and is a true game changer for the devices it supports,

46:50.000 --> 46:55.000
notably the Pine64 PinePhone Pro and the PineBook Pro.

46:55.000 --> 46:59.000
Installing the generic ARM64 Fedora image on the PineBook Pro was a breeze.

46:59.000 --> 47:06.000
Now I can use Grub on my ARM notebook and press a key to boot from SD card or USB instead.

47:06.000 --> 47:11.000
Bonus, he says, TauBoot was started by Samuel Dion Riel,

47:11.000 --> 47:15.000
who's a NixOS Committer and the founder of mobile NixOS.

47:15.000 --> 47:16.000
That is so neat.

47:16.000 --> 47:23.000
You know, my dream setup is netbooting a bunch of like CM4s or something in the studio.

47:23.000 --> 47:28.000
Like you turn on the studio, they all netboot into like an OS that's living on the server somewhere.

47:28.000 --> 47:30.000
Boot to Reaper, perfect.

47:30.000 --> 47:33.000
Yeah, I don't know why I've always been into that, but I always have.

47:33.000 --> 47:39.000
I've always loved the idea of essentially just a thin client on the front end

47:39.000 --> 47:43.000
and then a centralized backend server that I control, that I update the image on,

47:43.000 --> 47:45.000
that we deploy once and then everything gets it.

47:45.000 --> 47:48.000
We can build some sweet NixOS pixie images, that's for sure.

47:48.000 --> 47:49.000
Totes good, totes.

47:51.000 --> 47:54.000
And now it is time for Le Boost.

47:54.000 --> 47:59.000
Hey, I want to mention for, I don't know, the next few weeks at least,

47:59.000 --> 48:03.000
we are doing a 15% split with all of our boosts.

48:03.000 --> 48:08.000
So this is something that's possible with the value for value block in the podcasting 2.0 namespace.

48:08.000 --> 48:12.000
We have added the OpenSATS organization to our split.

48:12.000 --> 48:20.000
So when you boost the show, 15% of your SATS will go to support contributors for free and open source projects.

48:20.000 --> 48:24.000
The OpenSATS Foundation is a nonprofit.

48:24.000 --> 48:31.000
100% of the money that they raise goes to free software projects that are taking Lightning payments.

48:31.000 --> 48:34.000
And there's some projects in there that I think are really great.

48:34.000 --> 48:38.000
A BTC pay server, Sparrow, several other projects in there that I think are fantastic.

48:38.000 --> 48:44.000
And so I just want to encourage the idea of using these splits to help support open source development.

48:44.000 --> 48:48.000
And so we're going to throw 15% of your SATS over to OpenSATS.

48:48.000 --> 48:51.000
All you got to do is send us a boost and they get a contribution for, I don't know,

48:51.000 --> 48:55.000
I think we'll do it for like three weeks or something like that while we experiment with this.

48:55.000 --> 49:00.000
Michael wrote in with a boost with 15,000 SATS. Thank you.

49:00.000 --> 49:05.000
He writes, Hi, Chris and team. I have listened to JB podcast since 2012 and love it.

49:05.000 --> 49:06.000
2012, that's a long time.

49:06.000 --> 49:08.000
It's older than you are, Brent.

49:08.000 --> 49:10.000
Nearly.

49:10.000 --> 49:13.000
I hope you find a good, sustainable way for you and your team.

49:13.000 --> 49:17.000
I like the value for value model with the pay SATS while streaming. Thanks.

49:17.000 --> 49:18.000
Well, thank you, Michael.

49:18.000 --> 49:24.000
Yeah, the value for value model has been something that I think is resonating really well with some of you out there.

49:24.000 --> 49:26.000
Some people are still warming up to the idea.

49:26.000 --> 49:30.000
But I think when we expand the idea to free software, it's really going to be magic.

49:30.000 --> 49:34.000
We got a double boost from Michael.

49:34.000 --> 49:35.000
I didn't even know that was allowed.

49:35.000 --> 49:40.000
Yeah, a double boost, 3000 SATS, and he just was feeling the value for the NVIDIA coverage.

49:40.000 --> 49:41.000
This is a good example.

49:41.000 --> 49:44.000
Like he listened to our coverage on LAN and Linux unplugged.

49:44.000 --> 49:49.000
I think he got a better understanding out of that, and he wanted to return that value with 3000 SATS.

49:49.000 --> 50:01.000
And he sent a note specifically thanking us for LUP 458 coverage, which Christian joined us for that to help cover some of the deets with NVIDIA's new driver situation, which is really exciting.

50:01.000 --> 50:08.000
The Golden Dragon boosted in with 1111 SATS just to make it hard for us to read.

50:08.000 --> 50:12.000
The more and more I hear about this foray into putting the kernel stuff is open source.

50:12.000 --> 50:17.000
The more excited I get for the future of the Linux desktop experience.

50:17.000 --> 50:21.000
Currently, I have to use a script to control my GPU cooling fans.

50:21.000 --> 50:26.000
So maybe once this is complete, this will just work flawlessly.

50:26.000 --> 50:31.000
I'd love to see these kinds of things improve now that the driver itself will be open source.

50:31.000 --> 50:39.000
I could see a future where it doesn't matter if you have an Intel GPU, if you have an AMD GPU, if you got an NVIDIA GPU.

50:39.000 --> 50:45.000
You could be in your desktop environment, like say, GNOME Shell, where they have those new power modes, those three different power modes.

50:45.000 --> 50:53.000
And I could see a future where when you choose a power mode, it has actual input over how your GPU behaves, the whole stack.

50:53.000 --> 50:56.000
I think that future is nigh.

50:56.000 --> 51:00.000
Yeah, but if people don't have to write weird UDEV rules, how will they ever learn?

51:00.000 --> 51:05.000
Yeah, and it does probably kill a whole generation of bash scripters.

51:05.000 --> 51:08.000
Back in my day, Wes, back in my day.

51:08.000 --> 51:11.000
Marcel wrote in with one, two, three, four sets.

51:11.000 --> 51:14.000
Thanks for the level headed coverage on the NVIDIA stuff.

51:14.000 --> 51:17.000
Most things I see online are extremely entitled.

51:17.000 --> 51:19.000
Wow. Yeah, I know.

51:19.000 --> 51:25.000
I think if we're hostile to NVIDIA's first major foray into open source, they won't be likely to go further.

51:25.000 --> 51:30.000
We should thank them, not dismiss the whole thing because they didn't open source the firmware.

51:30.000 --> 51:38.000
I guess I too was a little surprised at first that we went so quickly to, oh, well, this doesn't matter because the firmware.

51:38.000 --> 51:43.000
But then I realized that now I think I think people are a little jaded.

51:43.000 --> 51:45.000
They've heard promises and commitments before.

51:45.000 --> 51:48.000
They've seen things specifically around GPU driver promises before.

51:48.000 --> 51:53.000
And I think there is just some skepticism that's built up over the years around that.

51:53.000 --> 51:55.000
And so then I kind of then I kind of understood it.

51:55.000 --> 51:59.000
I, however, remain very optimistic about this entire thing.

51:59.000 --> 52:06.000
I think the evolution of more of these controls being baked into the firmware has been in the works for years.

52:06.000 --> 52:09.000
I don't think NVIDIA did anything new or different here.

52:09.000 --> 52:15.000
I don't know if I love it, but I love the idea of at least everything on my machine being open source and free software.

52:15.000 --> 52:19.000
Yeah. I mean, maybe it cements us forever in this world of big old binary blobs.

52:19.000 --> 52:22.000
But we work unfortunately kind of there already.

52:22.000 --> 52:25.000
Yeah, that might be true. And at least they're going to work well. Right.

52:25.000 --> 52:28.000
Yeah. Yeah. Yeah. I suppose I suppose that could be true.

52:28.000 --> 52:30.000
I don't know how I feel about that.

52:30.000 --> 52:31.000
You know, I feel like that's a topic.

52:31.000 --> 52:42.000
The firmware topic is something I'd like to talk to more people about that work in the industry and maybe get a more, you know, a more nuanced take on it because that does feel like a pretty complicated issue.

52:42.000 --> 52:47.000
We did get a double boost from the Golden Dragon to this week.

52:47.000 --> 52:48.000
Double boosting today. Yeah.

52:48.000 --> 52:53.000
Conversation on tail scale makes me want to swap from zero tier over to this.

52:53.000 --> 52:57.000
I don't think as many people knew about tail scale as I thought, which is great.

52:57.000 --> 52:59.000
I use the crap out of it.

52:59.000 --> 53:02.000
I think it's a fantastic, fantastic service.

53:02.000 --> 53:06.000
I tell you what, I was using tail scale on this trip even for sure.

53:06.000 --> 53:08.000
B-O-O-S-T.

53:08.000 --> 53:10.000
We did get some thank you boosts.

53:10.000 --> 53:17.000
Twelve hundred sixty three sats total from Cass Peeland and Robert Hand, who just wanted to say thank you or streaming in sats while we were doing the show.

53:17.000 --> 53:25.000
If you'd like to send a boost into the show and support independent content on a totally free and open network with no middleman,

53:25.000 --> 53:30.000
you can go to newpodcastapps.com and grab one of those and then you just load up that lightning wallet and send them in.

53:30.000 --> 53:33.000
And good news, the sats are cheap right now.

53:33.000 --> 53:34.000
Sats are going to be on sale this summer.

53:34.000 --> 53:39.000
Same old sats just now on sale.

53:39.000 --> 53:41.000
Now, there's no official pick this week.

53:41.000 --> 53:44.000
We wouldn't we wouldn't have any backup picks, would we?

53:44.000 --> 53:46.000
Yeah, I got one right here in my back pocket.

53:46.000 --> 53:47.000
You got a sneaky pick.

53:47.000 --> 53:49.000
And it's one I'm surprised hasn't come up before.

53:49.000 --> 53:57.000
OK, so here I am on my on my flight, right, getting ready to go on vacation, sitting next to my traveling buddy.

53:57.000 --> 54:00.000
And then it turns out that a family kind of got separated.

54:00.000 --> 54:01.000
They'd like to sit together.

54:01.000 --> 54:02.000
No big deal.

54:02.000 --> 54:04.000
I'm happy to make that move.

54:04.000 --> 54:07.000
But we were kind of planning to to plan a couple of projects together.

54:07.000 --> 54:09.000
You know, we're going to use the plane time.

54:09.000 --> 54:14.000
So we thought, well, it'd be nice to at least still be able to to chat with each other.

54:14.000 --> 54:17.000
There's got to be a way to do that on Android, right?

54:17.000 --> 54:21.000
In comes the pick Briar secure messaging anywhere.

54:21.000 --> 54:23.000
And this was like a really handy little app.

54:23.000 --> 54:24.000
Of course, it's on F-Droid.

54:24.000 --> 54:27.000
But as they note here, there's back on the Google Play Store again.

54:27.000 --> 54:32.000
So it was super easy to get even just while like last minute waiting for pushback on the plane.

54:32.000 --> 54:33.000
Right. And it's really neat.

54:33.000 --> 54:38.000
Like we could just you know, before we separated, we could scan a QR code to get ourselves authenticated with each other.

54:38.000 --> 54:42.000
And you could do that either totally offline or you can do it.

54:42.000 --> 54:46.000
You know, it has a mode for doing that if you happen to be next to each other as well.

54:46.000 --> 54:50.000
And then after that, we could do it either with Wi-Fi or Bluetooth right on the plane.

54:50.000 --> 54:52.000
It'll do a peer to peer Bluetooth network.

54:52.000 --> 54:55.000
Yeah, really. And it just pretty much just worked.

54:55.000 --> 54:56.000
That is cool.

54:56.000 --> 54:59.000
So you didn't even need a Wi-Fi connection to chat.

54:59.000 --> 55:01.000
No, no.

55:01.000 --> 55:04.000
That'll be limited, of course, by the strength of your Bluetooth and such.

55:04.000 --> 55:05.000
But I was impressed.

55:05.000 --> 55:10.000
Like, I don't know how super feature rich it was, but I was in a pinch and in a pinch it was there for me.

55:10.000 --> 55:13.000
So maybe worth a shot if you're in that kind of offline situation.

55:13.000 --> 55:15.000
It's called Briar Briar.

55:15.000 --> 55:17.000
So we'll put a link to that in the show notes.

55:17.000 --> 55:23.000
The show notes can be found at Linux Unplugged dot com slash four or five nine or generally in your podcast app of choice as well.

55:23.000 --> 55:25.000
Of course, you can just scroll down and find them there.

55:25.000 --> 55:31.000
But I like I like to tell you about the website because that's where you go to get things like our mumble server info.

55:31.000 --> 55:37.000
That's where you go to get the contact page, our RSS feeds and of course, any of our previous episodes.

55:37.000 --> 55:43.000
So I do like to mention you go to Linux Unplugged dot com slash four or five nine for that info.

55:43.000 --> 55:45.000
And don't miss Linux Action News.

55:45.000 --> 55:50.000
There's always something in there going on every single week in the world of free software, open source and Linux.

55:50.000 --> 55:52.000
So Wes Payne and I break it down for you.

55:52.000 --> 55:53.000
It's like a companion show.

55:53.000 --> 55:55.000
That's right.

55:55.000 --> 55:56.000
Lean, mean, just what you need to know.

55:56.000 --> 55:58.000
We don't waste your time.

55:58.000 --> 56:00.000
None of this tomfoolery they have on love.

56:00.000 --> 56:01.000
That's right.

56:01.000 --> 56:02.000
None of that tomfoolery.

56:02.000 --> 56:03.000
See you next week.

56:03.000 --> 56:06.000
Same bad time, same bad station.

56:06.000 --> 56:09.000
And of course, I'd love to have you join us live on a Sunday.

56:09.000 --> 56:13.000
We do it noon Pacific, three p.m. Eastern over JB live dot TV.

56:13.000 --> 56:15.000
You never know what we got cooking up.

56:15.000 --> 56:16.000
There's usually a lot more show.

56:16.000 --> 56:17.000
You can become a member.

56:17.000 --> 56:19.000
Support this production.

56:19.000 --> 56:22.000
Give us the runway to make choices with the sponsors we want to work with.

56:22.000 --> 56:27.000
And as a thank you, we got two feeds ad free and of course, the full live stream.

56:27.000 --> 56:30.000
And don't worry that ad feed's not going away.

56:30.000 --> 56:32.000
I make one comment one time.

56:32.000 --> 56:33.000
You scared people.

56:33.000 --> 56:34.000
I did.

56:34.000 --> 56:38.000
No, we make both feeds available as a thank you for supporting Unplugged Core dot com.

56:38.000 --> 56:40.000
If you want to become a member.

56:40.000 --> 56:43.000
Thanks so much for joining us on this week's episode of the Unplugged program.

56:43.000 --> 57:10.000
We'll see you right back here next week.

57:13.000 --> 57:28.000
You know, Chris, office hours, is that coming up on Tuesday?

57:28.000 --> 57:29.000
This here Tuesday.

57:29.000 --> 57:30.000
Oh, geez, Brent.

57:30.000 --> 57:31.000
What?

57:31.000 --> 57:32.000
What?

57:32.000 --> 57:33.000
What?

57:33.000 --> 57:34.000
I was just thinking about your hair and I thought.

57:34.000 --> 57:35.000
Oh, yeah.

57:35.000 --> 57:36.000
I better get in.

57:36.000 --> 57:37.000
I better take a shower, huh?

57:37.000 --> 57:38.000
No, no, no.

57:38.000 --> 57:41.000
I mean, if you got it in the URL, you got to make sure it's like.

57:41.000 --> 57:43.000
I need CG hair.

57:43.000 --> 57:44.000
I know.

57:44.000 --> 57:50.000
Yeah, I didn't pick the dot hair as a as like it's just that it was like that or I can't

57:50.000 --> 57:51.000
remember.

57:51.000 --> 57:52.000
It was something else really.

57:52.000 --> 57:53.000
Oh, power shell.

57:53.000 --> 57:54.000
No, limo.

57:54.000 --> 57:57.000
It was like my because I didn't want to spend a lot of money.

57:57.000 --> 58:00.000
And office hours is a really common term.

58:00.000 --> 58:01.000
Horrible name.

58:01.000 --> 58:03.000
Worst, worst podcast name ever, actually.

58:03.000 --> 58:08.000
And I didn't want to spend money on the domain because, you know, I mean, this is just a

58:08.000 --> 58:09.000
thing I'm doing.

58:09.000 --> 58:13.000
So I like how normally you're like, you know, a new podcast.

58:13.000 --> 58:14.000
It's a new relationship.

58:14.000 --> 58:15.000
Yeah.

58:15.000 --> 58:16.000
You got to take it seriously.

58:16.000 --> 58:17.000
It's a marriage.

58:17.000 --> 58:20.000
And then this was sort of like this was a fling Thursday afternoon.

58:20.000 --> 58:21.000
Yeah.

58:21.000 --> 58:22.000
Yeah.

58:22.000 --> 58:25.000
This this is this is the podcast that when I'm traveling to a particular town that I

58:25.000 --> 58:41.280
often know you're doing this show.

