1
00:00:00,000 --> 00:00:02,000
Chris, we have Rust news.

2
00:00:02,000 --> 00:00:11,680
What is it, Wes?

3
00:00:11,680 --> 00:00:18,020
The core-utils-rewrite-in-rust project is now available in Debian, and it's good enough

4
00:00:18,020 --> 00:00:24,520
to boot Debian with GNOME, install the top 1000 packages, build Firefox, LLVM, and Clang,

5
00:00:24,520 --> 00:00:27,840
and yes, even the Linux kernel.

6
00:00:27,840 --> 00:00:30,800
You know, Wes, I think show's over, you know?

7
00:00:30,800 --> 00:00:39,600
Show's over, man.

8
00:00:39,600 --> 00:00:42,360
Hello friends, and welcome into your weekly Linux talk show.

9
00:00:42,360 --> 00:00:43,360
My name is Chris.

10
00:00:43,360 --> 00:00:44,360
My name is Wes.

11
00:00:44,360 --> 00:00:45,360
Hello, Wes.

12
00:00:45,360 --> 00:00:49,340
Hey, this episode is brought to you by the all-new CloudGuru, the leader in learning

13
00:00:49,340 --> 00:00:53,000
for cloud, Linux, and other modern tech skills, hundreds of courses, thousands of hands-on

14
00:00:53,000 --> 00:00:54,000
labs.

15
00:00:54,000 --> 00:00:57,640
Get certified, get hired, get learning at CloudGuru.com.

16
00:00:57,640 --> 00:01:02,240
Until this episode, no, we're not actually here to talk about Rust.

17
00:01:02,240 --> 00:01:05,720
We have a very special out-of-this-world episode.

18
00:01:05,720 --> 00:01:12,000
Tim Kenham is the Mars Helicopter Operations Lead at JPL, and he shares with us on the

19
00:01:12,000 --> 00:01:14,980
show today Linux's origins at JPL.

20
00:01:14,980 --> 00:01:19,880
He was one of its lead advocates at getting it in the institution at the Jet Propulsion

21
00:01:19,880 --> 00:01:21,280
Lab.

22
00:01:21,280 --> 00:01:28,440
But how it then went from this risky kind of chance OS to running on multiple boxes

23
00:01:28,440 --> 00:01:29,760
on Mars.

24
00:01:29,760 --> 00:01:33,400
That's something that hasn't been super clear, but there's lots of new and good information

25
00:01:33,400 --> 00:01:36,020
in this chat we're about to have with Tim.

26
00:01:36,020 --> 00:01:41,040
And he also tells us about some of the challenges that Linux still is facing before it's ready

27
00:01:41,040 --> 00:01:47,520
for like the really super critical computer stuff, like some of the control computers

28
00:01:47,520 --> 00:01:49,360
that are in the rover on there.

29
00:01:49,360 --> 00:01:50,560
But we're going to get to that in a little bit.

30
00:01:50,560 --> 00:01:51,800
We'll have some community news.

31
00:01:51,800 --> 00:01:55,840
We got a couple of really great classic picks and a bit more.

32
00:01:55,840 --> 00:02:00,340
So to help us massage all of that into something that's listenable, we're bringing in our

33
00:02:00,340 --> 00:02:02,080
crack team of experts.

34
00:02:02,080 --> 00:02:06,320
It's our virtual lug, time-appropriate greetings, Mumble Room.

35
00:02:06,320 --> 00:02:08,880
Hi.

36
00:02:08,880 --> 00:02:10,040
Good to see all of you.

37
00:02:10,040 --> 00:02:12,480
Thanks for making it here on a Tuesday.

38
00:02:12,480 --> 00:02:14,440
It's always fun hanging out with you guys.

39
00:02:14,440 --> 00:02:17,640
We've been going for a little bit on the live stream and having a good time.

40
00:02:17,640 --> 00:02:22,200
And when I got on the live stream, really kind of about a half hour before I normally

41
00:02:22,200 --> 00:02:27,040
do today, it was really in the pursuit of serving the show.

42
00:02:27,040 --> 00:02:32,760
It was really because of my responsibility and duties to the show that I had to play

43
00:02:32,760 --> 00:02:33,760
video games.

44
00:02:33,760 --> 00:02:36,400
And this is pretty great, actually.

45
00:02:36,400 --> 00:02:38,080
Probably most of you have seen this.

46
00:02:38,080 --> 00:02:40,920
If not, well, you're going to hear about it now from me.

47
00:02:40,920 --> 00:02:47,840
The Steam Link app is now available as a standalone thin client app for Linux boxes, and it's

48
00:02:47,840 --> 00:02:52,800
available as a flat hub, a flat pack, or it's also linked in our show notes.

49
00:02:52,800 --> 00:02:54,820
You can just get a tar of it.

50
00:02:54,820 --> 00:03:01,000
And it is a minimal application that was brought together by the folks at Collabra and Valve

51
00:03:01,000 --> 00:03:05,320
to make it possible for essentially any kind of low end machine that has a fast enough

52
00:03:05,320 --> 00:03:10,300
network connection to stream games from another system on the land.

53
00:03:10,300 --> 00:03:11,940
Steam Link, we know about that.

54
00:03:11,940 --> 00:03:12,940
That's been around for a while.

55
00:03:12,940 --> 00:03:14,960
But now this is built into a little app.

56
00:03:14,960 --> 00:03:15,960
Hmm.

57
00:03:15,960 --> 00:03:20,360
So is the news here then that you don't have to install Steam and get that all set up to

58
00:03:20,360 --> 00:03:21,400
use this feature?

59
00:03:21,400 --> 00:03:22,400
You got it.

60
00:03:22,400 --> 00:03:23,400
And you could have it.

61
00:03:23,400 --> 00:03:25,200
So you could launch it on your laptop.

62
00:03:25,200 --> 00:03:27,920
You don't even have to have a Steam account.

63
00:03:27,920 --> 00:03:31,000
And if my machine upstairs was logged in and ready to go, you could stream them right from

64
00:03:31,000 --> 00:03:32,440
my computer.

65
00:03:32,440 --> 00:03:35,800
And you really don't even have to have anything more than an Intel graphics card to make it

66
00:03:35,800 --> 00:03:36,800
possible.

67
00:03:36,800 --> 00:03:37,800
I have two minds here.

68
00:03:37,800 --> 00:03:42,400
As they note in the announcement, special thanks to Collabra for helping make this possible.

69
00:03:42,400 --> 00:03:44,200
And they just do so much good stuff.

70
00:03:44,200 --> 00:03:47,800
The other part that's funny about this, though, is what took so long?

71
00:03:47,800 --> 00:03:52,040
I mean, wasn't the Steam Link hardware running Linux and presumably running some of this

72
00:03:52,040 --> 00:03:53,040
already?

73
00:03:53,040 --> 00:03:54,040
I had that thought, too.

74
00:03:54,040 --> 00:03:55,720
I did wonder.

75
00:03:55,720 --> 00:03:59,440
It must have just been there just wasn't resources at Valve to make it happen.

76
00:03:59,440 --> 00:04:02,400
And so they, in a sense, outsourced it to Collabra.

77
00:04:02,400 --> 00:04:03,880
And it's good.

78
00:04:03,880 --> 00:04:06,240
It works really well.

79
00:04:06,240 --> 00:04:09,600
It detected my Xbox compatible controller.

80
00:04:09,600 --> 00:04:13,920
It automatically detected my workstation upstairs running Steam.

81
00:04:13,920 --> 00:04:16,000
It detected that there was plenty of bandwidth.

82
00:04:16,000 --> 00:04:21,920
And then once you connect, you're put into Steam Big Picture mode, which Valve has put

83
00:04:21,920 --> 00:04:24,000
a crap ton of work into.

84
00:04:24,000 --> 00:04:29,560
There's a lot of information that is in the Steam client that Big Picture actually manages

85
00:04:29,560 --> 00:04:34,080
to surface to you in a pretty reasonable way, which only serves to make the remote Steam

86
00:04:34,080 --> 00:04:35,880
Link experience even better.

87
00:04:35,880 --> 00:04:40,880
An example is I could launch a game and Big Picture mode had a nice way to tell me that

88
00:04:40,880 --> 00:04:45,000
the Vulkan shaders were being pre-rendered and that I was going to wait a bit.

89
00:04:45,000 --> 00:04:47,280
And then it detects that this is going to take even longer.

90
00:04:47,280 --> 00:04:48,280
Would you like to just skip it?

91
00:04:48,280 --> 00:04:52,540
And it presents all that information in a way that doesn't break the Big Picture experience.

92
00:04:52,540 --> 00:04:55,660
That's impressive because it's already kind of hacky and annoying just on the regular

93
00:04:55,660 --> 00:05:00,480
Linux desktop so that it works at all in Big Picture on Linux is nice.

94
00:05:00,480 --> 00:05:02,200
It's smoother in Big Picture for sure.

95
00:05:02,200 --> 00:05:03,200
It really is.

96
00:05:03,200 --> 00:05:04,200
No doubt about it.

97
00:05:04,200 --> 00:05:07,520
Like that's the experience they've put the more recent effort into.

98
00:05:07,520 --> 00:05:11,400
So it will detect all of the Steam machines on your LAN.

99
00:05:11,400 --> 00:05:14,480
And then it will detect if you have a controller that's compatible with Steam.

100
00:05:14,480 --> 00:05:17,720
And then it detects if your connection to those machines is fast enough.

101
00:05:17,720 --> 00:05:22,160
It gives you like these three green check marks or not, depending.

102
00:05:22,160 --> 00:05:25,840
And then when you pass those three tests, you just hit start playing.

103
00:05:25,840 --> 00:05:28,520
It brings up the machine's remote library.

104
00:05:28,520 --> 00:05:31,800
You see every game that's on that computer and you can fire them off.

105
00:05:31,800 --> 00:05:34,960
And including Proton games, I launched Star Trek Online.

106
00:05:34,960 --> 00:05:37,720
I played Batman Arkham City.

107
00:05:37,720 --> 00:05:41,120
I played a little Left 4 Dead.

108
00:05:41,120 --> 00:05:43,040
And I played Hot Shot Racing.

109
00:05:43,040 --> 00:05:45,560
And a handful of those are actually just Windows games.

110
00:05:45,560 --> 00:05:46,560
But they just work beautifully.

111
00:05:46,560 --> 00:05:53,280
I find it fascinating that there's a FFmpeg bundled in here under their Steam link folder.

112
00:05:53,280 --> 00:05:55,800
Yeah, I think it's right.

113
00:05:55,800 --> 00:06:03,080
It's got to be they're just relaying the input events and it's streaming as fast as it can,

114
00:06:03,080 --> 00:06:04,840
an H.264 stream.

115
00:06:04,840 --> 00:06:11,320
But it clearly has some allowance for bandwidth because in every game I tried, I did not spot

116
00:06:11,320 --> 00:06:13,320
any compression artifacts.

117
00:06:13,320 --> 00:06:16,040
And I have an eye for that kind of stuff.

118
00:06:16,040 --> 00:06:19,600
And I didn't see any compression issues at all.

119
00:06:19,600 --> 00:06:23,440
Really what I saw is that I need a new computer upstairs because my machine upstairs, it's

120
00:06:23,440 --> 00:06:26,080
just a dog.

121
00:06:26,080 --> 00:06:27,240
It's pretty great, Wes.

122
00:06:27,240 --> 00:06:32,200
And you combine that with the news that Proton has enabled 7,000 Windows games now to run

123
00:06:32,200 --> 00:06:35,880
on Linux of various quality, to be honest with you.

124
00:06:35,880 --> 00:06:36,880
It's pretty remarkable.

125
00:06:36,880 --> 00:06:41,880
Well, and that Proton keeps getting updates, you know, like there's a new version of their

126
00:06:41,880 --> 00:06:49,000
Soldier Linux runtime container, also Proton Experimental on top of regular Proton releases.

127
00:06:49,000 --> 00:06:54,520
It really, it's hard to remember the old days sometimes because it's so good right now,

128
00:06:54,520 --> 00:06:56,560
even when it's of mixed quality.

129
00:06:56,560 --> 00:07:00,760
But it's just, it's so fascinating to me that some of my, you know, the friends, acquaintances

130
00:07:00,760 --> 00:07:04,520
who I occasionally play games with who are on the Mac and it used to be like, there were

131
00:07:04,520 --> 00:07:07,400
a lot of games they could play, I couldn't play.

132
00:07:07,400 --> 00:07:10,760
And now that is just flip flopped entirely.

133
00:07:10,760 --> 00:07:12,040
Yes.

134
00:07:12,040 --> 00:07:13,080
Great point.

135
00:07:13,080 --> 00:07:17,680
You don't buy a Mac to play PC games anymore at all.

136
00:07:17,680 --> 00:07:25,600
You can play iOS games, but yeah, you know, I want to put it in what I feel like is a

137
00:07:25,600 --> 00:07:26,600
fair context.

138
00:07:26,600 --> 00:07:34,760
I feel like Proton is undoubtedly a win, but I feel like out of those 7,000 titles, the

139
00:07:34,760 --> 00:07:38,440
reality is only a small handful still are Platinum.

140
00:07:38,440 --> 00:07:43,960
And that number isn't really changing a lot in terms of Proton support level Platinum.

141
00:07:43,960 --> 00:07:48,240
And I have definitely had mixed results more than I would like.

142
00:07:48,240 --> 00:07:53,720
So I want to say it's Proton for me has worked out to be an 80% solution.

143
00:07:53,720 --> 00:07:57,720
I am not complaining about that, but I'm just also trying to be realistic.

144
00:07:57,720 --> 00:08:01,240
It has not, even games like Destiny is a great example.

145
00:08:01,240 --> 00:08:06,720
Destiny 2 works for a bit, then it's broken, then it works for a bit, now it's broken again.

146
00:08:06,720 --> 00:08:11,000
I was about to say that, you know, games are often a moving target as is Proton.

147
00:08:11,000 --> 00:08:14,320
So I think it's one of these things that if you play a little bit of the older set of

148
00:08:14,320 --> 00:08:16,240
games, you're going to have a good time.

149
00:08:16,240 --> 00:08:20,880
And if you're on the bleeding edge or AAA worlds, okay, it might be a little dicier.

150
00:08:20,880 --> 00:08:23,300
What's really nice, though, is you bring all this together.

151
00:08:23,300 --> 00:08:26,540
You can Steam link to like I was connecting to a Linux box upstairs.

152
00:08:26,540 --> 00:08:30,360
But if you had a Windows 10 machine on your LAN, you could use that and stream that to

153
00:08:30,360 --> 00:08:32,080
all of your Linux computers.

154
00:08:32,080 --> 00:08:33,080
That's kind of nice.

155
00:08:33,080 --> 00:08:34,080
Right.

156
00:08:34,080 --> 00:08:37,480
You can hide that away in the basement, pretend it doesn't exist and just present a nice,

157
00:08:37,480 --> 00:08:39,160
you know, Linux face on everything.

158
00:08:39,160 --> 00:08:46,680
I had a failure state where I had alt tabbed out of the Steam link experience to check

159
00:08:46,680 --> 00:08:49,120
something on my local machine.

160
00:08:49,120 --> 00:08:54,900
And the alt tab was grabbed by the Steam link and my local machine.

161
00:08:54,900 --> 00:08:59,520
And so it alt tabbed out of the game and over to my console.

162
00:08:59,520 --> 00:09:03,260
And so when I went back to the Steam link experience, I was actually looking at another

163
00:09:03,260 --> 00:09:07,260
window on a separate monitor on my computer.

164
00:09:07,260 --> 00:09:10,960
And I know we've had people write in and they've told us that you can actually break out of

165
00:09:10,960 --> 00:09:14,520
the game and you can actually just completely stream the desktop.

166
00:09:14,520 --> 00:09:17,480
So I began using the machine through Steam link.

167
00:09:17,480 --> 00:09:21,920
Because I have the terminal open, I just launched other stuff and I started messing around with

168
00:09:21,920 --> 00:09:25,760
the computer and I could manipulate all the windows on that monitor that I was connected

169
00:09:25,760 --> 00:09:29,720
to from my computer down here through Steam link.

170
00:09:29,720 --> 00:09:32,120
Just found yourself a brand new remote desktop solution.

171
00:09:32,120 --> 00:09:36,480
Yes, that's what I'm saying is there could be some ways to have some fun with that.

172
00:09:36,480 --> 00:09:41,000
So if you know, if you know a way that I could maybe do that on a Chromebook or something

173
00:09:41,000 --> 00:09:44,880
like that, let me know linuxunplugged.com slash contact.

174
00:09:44,880 --> 00:09:48,760
Because I saw that peek behind the curtain and I realized this could be a killer way

175
00:09:48,760 --> 00:09:57,280
to just remotely stream any application from a machine to another machine and get GPU acceleration.

176
00:09:57,280 --> 00:10:01,800
That could be, that could be magic.

177
00:10:01,800 --> 00:10:08,000
Linode.com slash unplugged, go there to get a $100 60 day credit and of course you support

178
00:10:08,000 --> 00:10:11,560
the show linode.com slash unplugged.

179
00:10:11,560 --> 00:10:14,040
Linode's where we host everything.

180
00:10:14,040 --> 00:10:18,880
We had a challenge on the show last week where we asked the chat room to go after a machine

181
00:10:18,880 --> 00:10:22,320
and we built that on Linode because we knew we could take snapshots, we knew we could

182
00:10:22,320 --> 00:10:24,120
destroy it if we needed.

183
00:10:24,120 --> 00:10:29,080
And one of the methods that we took with that is we built a test system first to see if

184
00:10:29,080 --> 00:10:31,800
it was possible on Linode and then we cloned it.

185
00:10:31,800 --> 00:10:36,400
And the clone was actually what we put out into the public and Wes and I had a control

186
00:10:36,400 --> 00:10:39,880
test machine that we still had up and running that we could have flipped public if we needed

187
00:10:39,880 --> 00:10:43,040
to and it's really simple to do all of this with Linode.

188
00:10:43,040 --> 00:10:48,460
And it makes, it makes approaching upgrades and managing your servers feel a lot less

189
00:10:48,460 --> 00:10:53,920
risky when you can, you can get a automatic snapshot that is clearly labeled and easy

190
00:10:53,920 --> 00:10:57,000
to understand in the dashboard to tell you exactly where you're at and you could just

191
00:10:57,000 --> 00:11:00,760
run one immediately if you need or even clone the box.

192
00:11:00,760 --> 00:11:06,000
Their cloud manager is top notch and they try to make it approachable to everybody and

193
00:11:06,000 --> 00:11:11,300
they do a great job at that but what I really have appreciated is usually a click or two

194
00:11:11,300 --> 00:11:15,960
away I can actually get like the commands I need to run on the Linux box and get even

195
00:11:15,960 --> 00:11:17,320
deeper.

196
00:11:17,320 --> 00:11:21,000
They really don't hide that stuff from you and if you're a long time Linux user you're

197
00:11:21,000 --> 00:11:25,000
going to appreciate that and it's really impressive how they've managed to strike that balance

198
00:11:25,000 --> 00:11:28,240
and it's not just by accident.

199
00:11:28,240 --> 00:11:33,120
They didn't just figure it out overnight, Linode's been around since 2003 and they've

200
00:11:33,120 --> 00:11:37,440
really focused in on doing this type of stuff really good.

201
00:11:37,440 --> 00:11:41,320
I was telling the story on Linux Action News and I'm going to tell you here because this

202
00:11:41,320 --> 00:11:45,440
is, it's one of the examples that I like to cite about Linode when people ask me well

203
00:11:45,440 --> 00:11:49,040
you know I use it, I use another provider right now I'm not really sure why I switch

204
00:11:49,040 --> 00:11:53,840
I mean I love that $100 credit but you know what other reason and the thing I hear from

205
00:11:53,840 --> 00:11:58,360
people who switch is it to me they say it feels like the networking is faster especially

206
00:11:58,360 --> 00:12:03,160
between the the data center to data center networking like Linode's got that dialed in

207
00:12:03,160 --> 00:12:06,960
more than other providers do and people oh yeah you'll see it in our telegram oh I agree

208
00:12:06,960 --> 00:12:09,040
yeah yeah well I'll tell you why.

209
00:12:09,040 --> 00:12:15,760
There's actually a reason for that in 2016 Linode took their entire networking infrastructure

210
00:12:15,760 --> 00:12:17,800
into their own hands.

211
00:12:17,800 --> 00:12:21,520
They wanted to guarantee low latency and a certain level of performance between their

212
00:12:21,520 --> 00:12:28,040
data centers that they just couldn't guarantee unless they became their own ISP and in 2016

213
00:12:28,040 --> 00:12:30,560
they did just that.

214
00:12:30,560 --> 00:12:31,920
How about that?

215
00:12:31,920 --> 00:12:37,080
And they set the foundation to tackle all kinds of designs for the future and to really

216
00:12:37,080 --> 00:12:40,960
strengthen the connections between their data centers and something else and this is on

217
00:12:40,960 --> 00:12:44,800
their blog I'll put a link to this in the show notes this is what they say on there

218
00:12:44,800 --> 00:12:49,580
as we worked on expanding our global network three things were non-negotiable maintaining

219
00:12:49,580 --> 00:12:55,040
vendor diversity balancing flexibility and control and this is my favorite one the third

220
00:12:55,040 --> 00:13:02,720
one and incorporating Linux at the network level as much as possible and then in parentheses

221
00:13:02,720 --> 00:13:09,360
since we're Linode we're very good at Linux and they are and it's that kind of stuff because

222
00:13:09,360 --> 00:13:13,920
they've been around so long they've managed to tackle these hard problems and solve them

223
00:13:13,920 --> 00:13:20,040
and negotiate the deals and secure it to the point where they became their own ISP and

224
00:13:20,040 --> 00:13:24,640
now they have 11 data centers worldwide 40 gigabit connections coming into the hypervisor

225
00:13:24,640 --> 00:13:31,000
super fast data of SSDs and boxes from five dollars a month to massive compute machines

226
00:13:31,000 --> 00:13:37,200
and they have object storage available cloud firewalls load balancers terraform support

227
00:13:37,200 --> 00:13:42,960
and a lot more so go check it out see what you can do with that one hundred dollars there's

228
00:13:42,960 --> 00:13:49,700
a lot Linode.com slash unplugged go there support the show and play with any of these

229
00:13:49,700 --> 00:13:53,000
things let me know what you think about it I love hearing how it goes for you guys it's

230
00:13:53,000 --> 00:13:56,600
great way to find out what you're using Linode for and then every now and then it makes its

231
00:13:56,600 --> 00:14:01,840
way into a read on the show so let's get started at Linode.com slash unplugged and then let

232
00:14:01,840 --> 00:14:06,400
me know how you're using Linode at Chris Lass on Twitter or the contact form either way

233
00:14:06,400 --> 00:14:13,920
would be great Linode.com slash unplugged before we get out of this world and start

234
00:14:13,920 --> 00:14:20,720
talking about Linux on Mars just a couple of notes in the housekeeping I want to mention

235
00:14:20,720 --> 00:14:26,900
again our telegram group because as things eventually one day return to normal any kind

236
00:14:26,900 --> 00:14:32,640
of activities we end up doing like meetups or events whenever that does happen that telegrams

237
00:14:32,640 --> 00:14:36,320
always one of the first places that we're coordinating Jupiter broadcasting dot com slash

238
00:14:36,320 --> 00:14:41,480
telegram the conversation just continues often on Wednesday mornings you'll see people discussing

239
00:14:41,480 --> 00:14:44,540
what we talked about here in the show and if you want to get in on that action that's

240
00:14:44,540 --> 00:14:50,620
where it's at the lup lug remains strong and consistent our lug gets together every single

241
00:14:50,620 --> 00:14:54,880
Sunday it's not a fluke it's something you can rely on and something you can participate

242
00:14:54,880 --> 00:14:59,800
in it's a really nice experience it's on our mumble server just there in the lobby and

243
00:14:59,800 --> 00:15:05,400
we have information on how to get into mumble at Linux unplugged dot com slash mumble and

244
00:15:05,400 --> 00:15:09,840
I think that's really everything we have for the housekeeping West that seems shorter than

245
00:15:09,840 --> 00:15:15,080
normal I feel like we're missing a plug here normally we make a big old mess but not this

246
00:15:15,080 --> 00:15:20,480
week although if you aren't already checking out the coder happy hour on Mondays live you

247
00:15:20,480 --> 00:15:25,120
probably should be it's really been a highlight of my weeks I'm still usually stuck at work

248
00:15:25,120 --> 00:15:30,040
but it's the start of ending my day and I get to unwind with you and Mike oh shucks

249
00:15:30,040 --> 00:15:35,440
thanks thanks yeah we do that we do that at 5 p.m. Pacific 8 p.m. Eastern at JB life dot

250
00:15:35,440 --> 00:15:43,240
TV that is the coder happy hour and that is our housekeeping so if it just wasn't perfect

251
00:15:43,240 --> 00:15:49,640
since we got together last NASA's perseverance rover has driven on the Mars terrain for the

252
00:15:49,640 --> 00:15:55,080
first time it's it's not a lot but it's significant it matters yeah this first

253
00:15:55,080 --> 00:16:03,640
little adventure was only 6.5 meters but once it starts pursuing its main science goals regular

254
00:16:03,640 --> 00:16:10,680
commutes extending 200 meters that's like 600 some feet or more are expected the part that

255
00:16:10,680 --> 00:16:16,040
really stuck out to me though was that the mobility system is not the only thing getting

256
00:16:16,040 --> 00:16:22,200
test-drive right now because back at the end of February they actually upgraded perseverance or

257
00:16:22,200 --> 00:16:28,200
Percy for short they upgraded some of the software running replacing the computer program that helped

258
00:16:28,200 --> 00:16:32,440
actually get the landing done with the program that will control it while they investigate

259
00:16:32,440 --> 00:16:38,200
things on the planet and if that isn't the most stressful firmware upgrade ever I mean come on

260
00:16:38,200 --> 00:16:47,120
hey right no kidding Tim gets into that system a little bit and it's remarkable in a way that

261
00:16:47,120 --> 00:16:52,880
shocked me and he also gets into the multiple Linux systems and all of that so Tim is the

262
00:16:52,880 --> 00:16:58,960
Mars helicopter operations lead at NASA's Jet Propulsion Laboratory and his team specifically

263
00:16:58,960 --> 00:17:05,000
is responsible for the Linux powered helicopter that is in perseverance's belly but we were just

264
00:17:05,000 --> 00:17:08,760
super excited to have the opportunity to chat with Tim because his team has got a you know this is

265
00:17:08,760 --> 00:17:13,920
it's a historic moment for them and to get an opportunity to talk to one of the individuals

266
00:17:13,920 --> 00:17:18,840
responsible for getting Linux into this organization well that was special

267
00:17:18,840 --> 00:17:32,040
Tim welcome to the show and thank you so much for joining us we've been geeking out all morning

268
00:17:32,040 --> 00:17:36,680
about chatting with you well I'm a fellow geek so I always like that I always like to talk to

269
00:17:36,680 --> 00:17:40,640
people like this and my brother's a big fan of your podcast and he's the one that said you got

270
00:17:40,640 --> 00:17:45,680
to talk to these guys well tell him we said thank you because we completely agree and just before

271
00:17:45,680 --> 00:17:51,440
we started we were we were talking about your tenure at JPL and it looks like it's somewhere

272
00:17:51,440 --> 00:17:58,040
around 30 years now working for JPL I imagine that you started there very young yes so I got

273
00:17:58,040 --> 00:18:04,000
my undergrad in double-e and computer engineering and then interviewed around but the top of my

274
00:18:04,000 --> 00:18:09,400
list was JPL because I knew of all the different projects I did from reading up on them when I was

275
00:18:09,400 --> 00:18:14,000
a kid with National Geographic and all the Voyager visits to the outer planets and I was just super

276
00:18:14,000 --> 00:18:19,480
excited when I saw a poster at my school said sign here if you want an interview and I did and

277
00:18:19,480 --> 00:18:26,680
the rest was history I came out of school moving from upstate New York very much of a rural area

278
00:18:26,680 --> 00:18:32,760
and moved to the big metropolis of Los Angeles and started at JPL so you have a background in

279
00:18:32,760 --> 00:18:38,600
computer technology so what kind of job were you looking for at JPL in that time I've done a lot

280
00:18:38,600 --> 00:18:43,960
as an undergrad with computers you know taking a lot of software classes and then computer

281
00:18:43,960 --> 00:18:48,880
architecture classes and I also had a background in electrical engineering so I understood the

282
00:18:48,880 --> 00:18:54,480
circuits and the design of how they worked and so I wanted a job coming out of school in that area

283
00:18:54,480 --> 00:19:00,920
and so I when I hired on to JPL they were looking for somebody who had software background but also

284
00:19:00,920 --> 00:19:06,680
had the engineering background as well to be able to look at schematics and look at understand how

285
00:19:06,680 --> 00:19:12,280
the different boxes in the system worked and so that's that was my entree into JPL was that I

286
00:19:12,280 --> 00:19:19,240
came in early as a graduate from college and started working in the deep space network that's

287
00:19:19,240 --> 00:19:24,840
a big network of antennas that JPL uses to track the different spacecraft that they're talking with

288
00:19:24,840 --> 00:19:29,040
and they were looking for somebody who was a software engineer but also understood hardware

289
00:19:29,040 --> 00:19:35,160
so we could program the ground controllers that would operate these these transmitters and

290
00:19:35,160 --> 00:19:40,680
receivers in the deep space network so that was my introduction to JPL was in that field and then

291
00:19:40,680 --> 00:19:45,320
in the late 90s I kind of switched sides as they say at a JPL from the ground side to the flight

292
00:19:45,320 --> 00:19:52,120
side and started working on the Cassini project if you remember that one that was the big spacecraft

293
00:19:52,120 --> 00:19:57,360
that orbited Saturn and took a lot of measurements and pictures over the years just breathtaking

294
00:19:57,360 --> 00:20:02,640
photos yeah amazing and then you know they they had this very dramatic burn into the atmosphere

295
00:20:02,640 --> 00:20:09,520
as a goodbye there's a very a very amazing video of that you know a rendering of that on the web

296
00:20:09,520 --> 00:20:14,000
if you want to search around for it but I worked on the I didn't actually work on the flight software

297
00:20:14,000 --> 00:20:20,560
itself I worked on a simulation environment where you would simulate down to the instruction level

298
00:20:20,560 --> 00:20:26,320
what the processor could execute and build models that were all the different peripherals on the

299
00:20:26,320 --> 00:20:31,920
spacecraft and so you could take the actual flight software and load it on our simulator

300
00:20:31,920 --> 00:20:36,800
and it would run as if it was on the vehicle so they use that as a test bed a virtual test

301
00:20:36,800 --> 00:20:42,880
bed for many years on that project boy I could see how that'd be immensely useful and at what point

302
00:20:42,880 --> 00:20:49,680
in this journey do you discover Linux and start working with Linux so JPL for many years was a

303
00:20:49,680 --> 00:20:56,080
Solaris house right you know when I came out of school everybody wanted a big Solaris workstation

304
00:20:56,080 --> 00:21:02,240
yeah you know the old spark workstations they were pretty cool they were cool and so I got you

305
00:21:02,240 --> 00:21:08,880
know I kind of came up the you can call it the Unix curve learning how to work on Solaris and

306
00:21:08,880 --> 00:21:17,680
you know the the flight project side used Solaris a lot and prior to getting on Curiosity which is

307
00:21:17,680 --> 00:21:23,280
the the big rover that's still on Mars and operating I had been on a project where we were

308
00:21:23,280 --> 00:21:29,280
doing a lot of software technology development and we could kind of see the writing on the wall

309
00:21:29,280 --> 00:21:34,960
that Solaris was starting to decline in the marketplace so we in our own project we went

310
00:21:34,960 --> 00:21:41,280
and started looking at alternatives and I just bought a PC made out of random parts

311
00:21:42,240 --> 00:21:49,280
you know just commodity parts at the time and loaded Linux on it and took the software that

312
00:21:49,280 --> 00:21:54,720
we had on that project and compiled all that software on Linux and it was kind of a somewhat

313
00:21:54,720 --> 00:21:59,280
comical moment because one of the senior engineers in the project had gotten his

314
00:22:00,560 --> 00:22:08,240
$15,000 Sun Solaris workstation that he you know he wanted as a senior guy and we had the software

315
00:22:08,240 --> 00:22:14,640
compiling on both and I took my my little commodity level PC and compiled the software

316
00:22:14,640 --> 00:22:22,000
and it compiled twice as fast and he just had this look of what did I waste all my money on yes he

317
00:22:22,000 --> 00:22:27,360
just just just look came over his face like I can't believe that and he ended up pawning off the

318
00:22:27,360 --> 00:22:32,880
whole system to an intern and then it was kind of funny what would you say what kind of what era

319
00:22:32,880 --> 00:22:39,680
what year ish was this would you say this would have been early 2000s probably okay very early

320
00:22:39,680 --> 00:22:45,360
very early 2000s and so Linux at the time was kind of a niche thing at JPL and sort of an

321
00:22:45,360 --> 00:22:49,440
underground movement if you will because you know Solaris was the enterprise class system that

322
00:22:49,440 --> 00:22:56,800
everybody supported and believed in and you know they built enormously robust machines you could

323
00:22:56,800 --> 00:23:01,440
drop them off of a cliff and nothing would happen and you had support it had an ecosystem it was

324
00:23:01,440 --> 00:23:07,520
the established operating system at that time it was sort of a no-brainer yeah right and so when I

325
00:23:07,520 --> 00:23:14,160
came on to Curiosity I was one of the first five team members for Curiosity and I was tasked with

326
00:23:14,160 --> 00:23:19,840
setting up a development environment for that particular project and I said why don't we use

327
00:23:19,840 --> 00:23:25,920
Linux and everybody around the table kind of looked at me and said uh really isn't that the

328
00:23:25,920 --> 00:23:31,920
thing SCO is trying to sue out of existence and so there was you know it's kind of this there was

329
00:23:31,920 --> 00:23:38,800
kind of a view at JPL that it was sort of a you know a disreputable corner of of the operating

330
00:23:38,800 --> 00:23:42,960
system market in some ways because you know it hadn't had the it hadn't had as much of the

331
00:23:42,960 --> 00:23:49,760
enterprise time under its belt then right and it seems like in your environment that matters more

332
00:23:49,760 --> 00:23:54,720
than it would to even most enterprises yes you're right because we they had a lot of tools that

333
00:23:54,720 --> 00:23:59,040
have been written specifically for Solaris you know because it's Linux it's I mean it's not

334
00:23:59,040 --> 00:24:04,000
Linux it's a flavor of Unix so there's many similarities but you know in the underlying

335
00:24:04,000 --> 00:24:12,720
architecture was Spark and that Intel and so I just made a push I said listen we Linux is where

336
00:24:12,720 --> 00:24:18,800
the market is going you know you could already see the decline in in Solaris even at that moment

337
00:24:18,800 --> 00:24:25,760
in time I said if if we just keep replicating these old platforms we'll be left behind sure

338
00:24:25,760 --> 00:24:30,480
it seems like even though at that point in time that was still a bit of a stretch because people

339
00:24:30,480 --> 00:24:35,680
probably assume Solaris would be around forever I mean even if I recall my timing right even kind

340
00:24:35,680 --> 00:24:41,520
of switching to it the Intel architecture itself would have been kind of looked at as a bit risky

341
00:24:41,520 --> 00:24:47,200
right so I mean you were just talking about a new OS but you're talking about a CPU architecture

342
00:24:47,200 --> 00:24:53,120
that was built for PCs you know I used to work with a data center mainframe guy who called them

343
00:24:53,120 --> 00:25:00,320
Mattel inside yeah yes I mean there's a famous Dilbert cartoon where Dilbert and his friends

344
00:25:00,320 --> 00:25:06,000
are talking about you know programming on their PCs and the and the the bearded grizzled Unix

345
00:25:06,000 --> 00:25:09,600
veteran came along and flipped him a nickel and said here why don't you buy a real computer

346
00:25:11,120 --> 00:25:16,960
so you're really for you're kind of fighting two different headwinds in that case yes and but to

347
00:25:16,960 --> 00:25:23,600
to JPL's credit you know JPL JPL is always balancing internally yeah we want these firmly

348
00:25:23,600 --> 00:25:29,680
established technologies that we can trust but we're always open if somebody can make a good case

349
00:25:29,680 --> 00:25:36,080
for us we're always open to looking at new things and they said well why don't you go off and look

350
00:25:36,080 --> 00:25:40,960
into it for us and make a case for it and we'll do a trade study and then we'll decide what we're

351
00:25:40,960 --> 00:25:48,080
going to do and so I went off and I configured up you know a machine spec and install Linux and

352
00:25:48,080 --> 00:25:53,600
show that I could get all of our tools running on it and and the fact that it was fast and they're

353
00:25:53,600 --> 00:26:00,320
relatively inexpensive compared to sun workstations to replicate and so we ended up kind of pivoting

354
00:26:01,120 --> 00:26:07,680
and starting to use Linux for our development tools and what was interesting was that

355
00:26:07,680 --> 00:26:12,480
the other parts of the project like the ground system and the test beds you know started to

356
00:26:13,200 --> 00:26:18,880
take interest and came and asked me for my machine spec and looked at it and ended up adopting it

357
00:26:18,880 --> 00:26:26,160
for their own you know basically a PC with Linux and so now for curiosity and now especially for

358
00:26:26,160 --> 00:26:32,560
Mars 2020 they've pretty much pivoted to Linux and they've taken it a step farther and they have a

359
00:26:32,560 --> 00:26:37,920
lot of like VMware infrastructure in place where they have a lot of different virtual machines that

360
00:26:37,920 --> 00:26:43,280
people can log on to and run their tools and do their analysis so it's really been a big pivot in

361
00:26:43,280 --> 00:26:47,600
the last 15 years. I was kind of curious if any of the you know the open source nature but also

362
00:26:47,600 --> 00:26:52,160
sort of the you can just install and run it without licensing has been useful internally

363
00:26:52,160 --> 00:26:57,760
it's just a lot more flexible and certainly you all are pushing the limits of what is possible

364
00:26:57,760 --> 00:27:02,640
it seems like that might go hand-in-hand. Well JPL also is very it's very important to them to have

365
00:27:03,280 --> 00:27:10,160
support contracts in place and so for many of the official if you will the official workstations

366
00:27:10,160 --> 00:27:15,440
and environments that they install they they have support contracts in place and they try to

367
00:27:15,440 --> 00:27:20,240
standardize on a single image so it's sort of a blending of the two worlds right they still don't

368
00:27:20,240 --> 00:27:25,360
want people to go off and just ad hoc build up these Linux environments that they don't have

369
00:27:25,360 --> 00:27:30,720
built up these Linux environments that they don't know about the level of patching and security and

370
00:27:30,720 --> 00:27:35,680
compliance with all these other requirements. You're not installing Arch Linux? No there aren't

371
00:27:35,680 --> 00:27:41,040
and so it tends to be flavors of Red Hat that they get support contracts for and they you know

372
00:27:41,040 --> 00:27:45,600
they have a very robust system administration environment now so they've they've kind of a

373
00:27:46,240 --> 00:27:51,680
adopted Linux but at the same time they've made sure that it's robust in an in an enterprise way

374
00:27:51,680 --> 00:27:57,680
to make sure that you know the machines are secure and the environments are standard because the one

375
00:27:57,680 --> 00:28:04,160
thing that can bite you when you have tools that run on Linux is you have to very carefully version

376
00:28:04,160 --> 00:28:12,080
control the tools that you use. Right right. And so if you rev Python from say 3.6 to 3.7 and

377
00:28:12,080 --> 00:28:17,360
everything starts breaking all of a sudden because there's been some change that can that can really

378
00:28:17,360 --> 00:28:22,560
hurt you as much as things in other areas so they very carefully control versioning on these

379
00:28:22,560 --> 00:28:27,520
workstations so that they don't get bitten by tool changes. And so this sort of sets the stage

380
00:28:27,520 --> 00:28:35,120
I would imagine for some cultural acceptance of actually using Linux in a mission on Mars but I

381
00:28:35,120 --> 00:28:41,120
don't imagine it was automatic. It had to be an established methodology for doing something versus

382
00:28:41,680 --> 00:28:46,240
Linux and then and then not only is it Linux Tim but one of the things I'd like to get to is

383
00:28:46,240 --> 00:28:51,120
the open source software running on top of Linux too. But before we get to that could you give me

384
00:28:51,120 --> 00:28:54,880
just a little bit of an idea of what it was like to actually convince people that

385
00:28:54,880 --> 00:28:59,760
it's going to be OK to put Linux on Mars. It's going to work out. Let me explain it to you this

386
00:28:59,760 --> 00:29:06,800
way is that NASA and JPL have these different classes of missions and there's different levels

387
00:29:06,800 --> 00:29:12,400
of if you will reliability and vigor and verification that are assigned to those different

388
00:29:12,400 --> 00:29:17,200
levels so the big flagship missions like the rover itself they call them Class B

389
00:29:18,480 --> 00:29:22,800
which so there's a lot more scrutiny about what kinds of software you get to run

390
00:29:22,800 --> 00:29:28,320
what kinds of operating systems what kind of testing program you do what kind of verification

391
00:29:29,200 --> 00:29:34,160
you know the level of reviews so there's a whole litany of things that you have to comply with if

392
00:29:34,160 --> 00:29:37,600
you're going to if you're going to design and fly one of these Class B missions.

393
00:29:37,600 --> 00:29:44,080
But JPL is also aware that they want to try new things and so they have a classification of Class

394
00:29:44,080 --> 00:29:50,080
D missions they call it and the helicopter the Mars helicopter is one of those classifications

395
00:29:50,080 --> 00:29:54,720
they've had other ones like I don't know if you've heard of CubeSats they're small compact

396
00:29:54,720 --> 00:30:01,360
satellites that you can fly many universities are doing those kinds of projects and so they

397
00:30:01,360 --> 00:30:07,840
tend to be lower profile and if they fail it's sad but it's okay because it's not a critical

398
00:30:07,840 --> 00:30:13,600
aspect of the operation right and so the helicopter was defined as one of these Class D missions

399
00:30:13,600 --> 00:30:18,480
because if the helicopter crashes for some reason it doesn't affect the rover right they can

400
00:30:18,480 --> 00:30:25,120
continue to go and do them their primary mission of going and getting rock core samples and we

401
00:30:25,120 --> 00:30:29,920
don't we can't really hurt them and so there's a lower level of scrutiny if you will

402
00:30:29,920 --> 00:30:36,320
on that kind of mission and so our main the main work that we had to do with respect to the rover

403
00:30:36,320 --> 00:30:42,080
was to verify that nothing that we did could hurt them in terms of you know how we interface with

404
00:30:42,080 --> 00:30:49,120
them and and so forth and so because that's true because the Mars helicopter is classified as a

405
00:30:49,120 --> 00:30:55,120
technology demonstrator where they're willing to try new things willing to accept a higher level

406
00:30:55,120 --> 00:31:02,640
of risk um they didn't really push those hard requirements on them to use and use the traditional

407
00:31:02,640 --> 00:31:08,560
operating systems and computing platforms that they usually put on rovers because for instance

408
00:31:08,560 --> 00:31:15,520
the processor that's on the rover is really a Mac power pc from the from the mid 90s not exactly

409
00:31:15,520 --> 00:31:22,800
modern yes exactly they use it's like a 200 megahertz power pc but it's been re-engineered

410
00:31:22,800 --> 00:31:28,160
from the silicon up to be radiation tolerant right so that it can and very thermally tolerant so it

411
00:31:28,160 --> 00:31:33,680
can take a beating you know a variant of that same processor is on the curiosity rover and it's been

412
00:31:33,680 --> 00:31:39,120
operating for you know going on what 10 years here without any problems and so they build those to be

413
00:31:39,120 --> 00:31:44,000
super tough but that also means that they tend to be older technology slower yeah right and so the

414
00:31:44,000 --> 00:31:49,120
helicopter itself we could not use any of those older processors because not only are they not

415
00:31:49,120 --> 00:31:54,960
very powerful processors but they're big and heavy and they consume power a lot of power so we

416
00:31:54,960 --> 00:32:00,480
couldn't use those old processors for just for that reason alone so we had to use something modern

417
00:32:01,040 --> 00:32:06,000
something that had a lot of processing power because we're running the guidance loops on the

418
00:32:06,000 --> 00:32:11,840
helicopter when it's flying it's measuring sensors running it through control algorithms and you

419
00:32:11,840 --> 00:32:18,560
know sending commands to the flight system at 500 times a second and so we had to use those

420
00:32:18,560 --> 00:32:24,560
and on top of that we're taking pictures we're we're taking black and white pictures down to the

421
00:32:24,560 --> 00:32:29,920
in the direction of the surface 30 times a second so it's taking a picture 30 times a second

422
00:32:29,920 --> 00:32:34,240
analyzing it for features is that f prime right there is that where f prime is doing some of its

423
00:32:34,240 --> 00:32:40,080
magic that is a if you want to call it an instance of f prime so f prime itself is a software

424
00:32:40,080 --> 00:32:46,320
framework it doesn't have all that built into it so we made we took that software framework which

425
00:32:46,320 --> 00:32:51,280
we developed at jpl and is open source yes and is open source so you can get a raspberry pi and go

426
00:32:51,280 --> 00:32:56,800
to the github repo for f prime and you can build a little demonstrator with a raspberry pi and see

427
00:32:56,800 --> 00:33:00,640
how it works and many of the same software components that are on that repo are on the

428
00:33:00,640 --> 00:33:07,040
helicopter right now sitting on mars it's amazing that's right and the helicopter code itself is not

429
00:33:07,040 --> 00:33:13,920
on the repo because that's you know proprietary intellectual property of jpl so we use that

430
00:33:13,920 --> 00:33:21,040
framework which is something that i developed back in the 2013 2014 time range to develop the

431
00:33:21,040 --> 00:33:27,280
software but because these these processors the processor for the helicopter has to be very

432
00:33:27,280 --> 00:33:32,080
powerful we couldn't use that i mean the processor on the helicopter is 100 times more powerful than

433
00:33:32,080 --> 00:33:37,520
the processor on the rover it's an arm like a multi-core one too right yes it's a quad core

434
00:33:37,520 --> 00:33:45,680
arm processor it's built by qualcomm so it's a galaxy s5 era processor if you wanted to draw

435
00:33:45,680 --> 00:33:52,800
a comparison so the way linux got into the picture was that this was a development board that you

436
00:33:52,800 --> 00:33:58,960
could buy off the internet for about 400 bucks back in the day it was actually used for people

437
00:33:58,960 --> 00:34:04,320
to do drone development if you wanted to prototype a drone you can use this particular board sure i

438
00:34:04,320 --> 00:34:09,200
mean it sounds like cheap prototyping and that's basically what you guys were doing right and so

439
00:34:09,200 --> 00:34:15,840
this board is very compact it fit within the envelope that we wanted and it had the i0 you

440
00:34:15,840 --> 00:34:20,960
know because we're talking to all these different subsystems on the helicopter so it had the

441
00:34:20,960 --> 00:34:27,280
sufficient i0 that we needed and what was really important was it already had all the software in

442
00:34:27,280 --> 00:34:32,960
place for the camera systems we use because we had been doing some asking around and if you just

443
00:34:32,960 --> 00:34:40,800
take a modern camera and you try to program for it in linux it can take many months with an expert

444
00:34:40,800 --> 00:34:45,600
to get it all up and running no doubt and we're not experts at writing camera drivers for linux

445
00:34:45,600 --> 00:34:51,760
we just aren't and so we had you know partners at qualcomm will help us and this thing all came

446
00:34:51,760 --> 00:34:57,520
packaged and it came packaged with linux sure it's a 3-4 kernel based on lanaro i don't know if

447
00:34:57,520 --> 00:35:02,080
you've heard of that flavor yeah lanaro is sort of an embedded version of linux it's kind of aimed

448
00:35:02,080 --> 00:35:07,040
towards embedded applications and they've done a lot of good work for arm support generally i think

449
00:35:07,040 --> 00:35:12,880
yes and it came pre-packaged with these camera drivers and the i0 drivers we wanted and so it was

450
00:35:12,880 --> 00:35:19,360
a very natural place for us to step in and use it and so that's how linux got onto the mars

451
00:35:19,360 --> 00:35:24,880
helicopter and because it was this class d mission we didn't really get any pushback from jpl about

452
00:35:24,880 --> 00:35:30,160
making linux the operating system that's fantastic and so it if i'm kind of getting where you're

453
00:35:30,160 --> 00:35:36,240
going with this it kind of means that this class d style classification means that a little less

454
00:35:36,240 --> 00:35:40,880
pressure it gives you a chance to try something like linux and if it proves itself here and proves

455
00:35:40,880 --> 00:35:45,840
itself a few more times i would imagine it means it could eventually be moved up to something like

456
00:35:45,840 --> 00:35:52,080
a class b style mission yeah perhaps i would say it's gaining more trust in that field right yeah

457
00:35:52,080 --> 00:35:58,320
you know as time goes on and now that there's the linux real time patch that gives the kernel more

458
00:35:58,320 --> 00:36:04,880
of a real time aspect to it is real time one of the major things that gives jpl pause when using

459
00:36:04,880 --> 00:36:11,760
linux yes because linux is really not designed truly to be real time they have even the you know

460
00:36:11,760 --> 00:36:16,800
the linux kernel itself has modes you can run it in that makes it more real time but linux was

461
00:36:16,800 --> 00:36:22,960
really designed to be a multi-user fairness algorithm kind of os in the marketplace you have

462
00:36:22,960 --> 00:36:29,280
very purpose-made real-time operating systems like wind rivers vx works which is the operating

463
00:36:29,280 --> 00:36:34,800
system that is on the rover and that way you get much higher guarantees about when tasks will

464
00:36:34,800 --> 00:36:39,520
finish you just can't have another process taken over right i mean when you're trying to fly

465
00:36:39,520 --> 00:36:44,000
autonomously on mars there's just there's not a lot of room for failure right and so you so when

466
00:36:44,000 --> 00:36:48,240
you're when you're doing very critical things like that you have to order things in the app race

467
00:36:48,240 --> 00:36:55,920
operating system by means of their priority and so when you have a shared fairness algorithm in

468
00:36:55,920 --> 00:36:59,760
linux it just kind of hops from user to user to make sure they all get time it doesn't lend itself

469
00:36:59,760 --> 00:37:04,640
to that because you don't want your image compression algorithm to get in the way of your

470
00:37:05,280 --> 00:37:10,160
you know your flying or your landing algorithm right that it would be silly for image compression

471
00:37:10,160 --> 00:37:16,080
to take over for a minute and you crash a billion dollar vehicle yeah it sounds ridiculous right so

472
00:37:16,080 --> 00:37:21,600
you so when you're dealing with very critical activities like landing the rover you have to

473
00:37:21,600 --> 00:37:26,880
have a an operating system that you really really understand how it's going to operate with respect

474
00:37:26,880 --> 00:37:32,640
to all these deadlines in the software and so that's the void that linux has to cross to get

475
00:37:32,640 --> 00:37:39,200
accepted on some of these more class b projects is i see kind of be engineered in such a way that

476
00:37:39,200 --> 00:37:44,560
it can make these kinds of guarantees for performance and improve it yes exactly is the

477
00:37:44,560 --> 00:37:49,680
ingenuity helicopter is its 34 kernel does it have a real time patch set against it is it real time

478
00:37:49,680 --> 00:37:55,920
so interestingly it doesn't it has a it has the pre-empt patch on it but it does not have the real

479
00:37:55,920 --> 00:38:03,760
time patch and it just happens that it's super fast so that it can keep up and we also so the

480
00:38:03,760 --> 00:38:09,120
linux the linux installation on the snapdragon is not the only processor we have on the helicopter

481
00:38:09,120 --> 00:38:15,840
we actually have a co-processor it's a microcontroller built by texas instruments

482
00:38:16,800 --> 00:38:22,640
and it's a microcontroller that's really designed for automotive uses so it's very rugged and very

483
00:38:22,640 --> 00:38:28,720
temperature tolerant sure and so the main flight control loop that we do there's two parts of it

484
00:38:28,720 --> 00:38:32,880
there's one that's on the main processor you know the linux processor and there's another part of

485
00:38:32,880 --> 00:38:38,240
it that's on this microcontroller and that one we actually run bare metal what we call bare metal

486
00:38:38,240 --> 00:38:44,400
which means there's no operating system it just gets a signal from the hardware and that runs a

487
00:38:44,400 --> 00:38:48,160
control cycle and then it waits for the next signal from the hardware there's no operating

488
00:38:48,160 --> 00:38:53,920
system at all and so that particular processor is the one that's in charge of the immediate flight

489
00:38:53,920 --> 00:38:59,520
control if you will keeping the helicopter in the air and then the linux processor is the one that

490
00:39:00,080 --> 00:39:07,040
does the you know the more of the navigation and the imaging and so if the that linux processor

491
00:39:07,040 --> 00:39:12,480
falls behind we have built-in robustness to the software that it can tolerate some of those slips

492
00:39:12,480 --> 00:39:16,800
if it happens you've got like a hybrid setup there to try to take advantage of both sides of things

493
00:39:16,800 --> 00:39:22,960
right we give each processor the job that it's good at yeah it sounds it sounds like that secondary

494
00:39:22,960 --> 00:39:28,800
co-processor is pretty foolproof so it is that also the system managing the thermals because

495
00:39:28,800 --> 00:39:32,400
my understanding was this tiny little helicopter spends a ton of its energy just keeping itself

496
00:39:32,400 --> 00:39:38,880
warm enough to survive yeah so the third part in this in this uh triple play here is that we have

497
00:39:38,880 --> 00:39:44,640
an fpga i don't know if you guys are familiar with that acronym means it's a it stands for field

498
00:39:44,640 --> 00:39:52,080
programmable gate array it's basically a sure okay a digital logic chip and that one itself is very

499
00:39:52,080 --> 00:39:57,760
much radiation hardened so the helicopter spends most of its time asleep because we don't have the

500
00:39:57,760 --> 00:40:03,280
energy just to leave it up and running like a you know data center server it's it's uh instead what

501
00:40:03,280 --> 00:40:10,000
happens is we manage wake sleep cycles with the helicopter so so the fpga we essentially program

502
00:40:10,000 --> 00:40:15,440
it and we say okay we want to we're setting our alarm clock for 10 a.m tomorrow morning please

503
00:40:15,440 --> 00:40:20,320
wake us up then and then we go to sleep as a processor so the whole system basically shuts down

504
00:40:20,320 --> 00:40:28,640
except for that fpga and that fpga has digital logic built into it that will basically run a

505
00:40:28,640 --> 00:40:33,520
thermostat to keep us warm overnight so that gets us into a very low power sleep mode so that we

506
00:40:33,520 --> 00:40:38,720
don't expend energy just sitting there waiting for instructions just a minimal amount of control to

507
00:40:38,720 --> 00:40:43,360
keep things operational keep that that clock counting until you wake up and check in again

508
00:40:43,360 --> 00:40:49,200
yes exactly so that makes our operations very uh challenging because we have to manage that

509
00:40:49,200 --> 00:40:53,280
alarm clock and make sure that we're up and waiting for it when the helicopter comes back up

510
00:40:53,280 --> 00:40:59,200
because we we can't just come up at any time and say hey helicopter go do this for us it's not just

511
00:40:59,200 --> 00:41:03,360
waiting for us to talk to it we have to coordinate all these wake up and sleep times so that we can

512
00:41:03,920 --> 00:41:08,240
do things when we need to do them and then i imagine it also there's a component of it has to

513
00:41:08,240 --> 00:41:13,840
be aware of a battery level and solar charge and whatnot too yeah that's uh we we manage that

514
00:41:13,840 --> 00:41:19,120
really on the ground you know in our we have models that we developed in our ground tools that track

515
00:41:19,920 --> 00:41:24,960
the battery state of charge throughout the martian day and we try to time events on the helicopter so

516
00:41:24,960 --> 00:41:31,280
that we maximize the amount of battery energy that's available for a flight so the software

517
00:41:31,280 --> 00:41:34,960
that runs on the helicopter is paired with a number of these ground tools that we use to track

518
00:41:34,960 --> 00:41:39,280
its state as well and then if something's drifting from what you expect you just sort of send an

519
00:41:39,280 --> 00:41:43,920
update to it to change whatever yeah we would typically just change our plans for that day we

520
00:41:43,920 --> 00:41:48,320
might move it later in the day to give it more charge if that's what happens so when are we

521
00:41:48,320 --> 00:41:53,520
looking at that thing kind of starting to do it's you know because it's still in the belly right now

522
00:41:53,520 --> 00:41:57,440
right of perseverance and then it's going to come out and sit out for a little bit and then it's

523
00:41:57,440 --> 00:42:01,440
going to be a little bit before it even flies so i mean we still have some time here right right

524
00:42:01,440 --> 00:42:06,880
we're still attached to the belly of the rover we charge the batteries every week or so so interestingly

525
00:42:06,880 --> 00:42:13,280
the helicopter has this this qualcomm board but we also have a box on the rover that's an instrument

526
00:42:13,280 --> 00:42:19,520
payload we basically just took the same avionics cards that are in the helicopter and constructed

527
00:42:19,520 --> 00:42:25,120
them in a different way and interconnected them in a different way so that the the base station

528
00:42:25,120 --> 00:42:31,520
box that's attached to the rover also has the qualcomm processor and also has linux and also has

529
00:42:31,520 --> 00:42:38,160
f prime on it so this box acts as a radio relay to the helicopter so the rover will turn on this

530
00:42:38,160 --> 00:42:42,160
base station as an instrument payload and communicate with it and pass it the files we want

531
00:42:42,720 --> 00:42:47,440
and then internally we take this base station and the base station passes the files we want to the

532
00:42:47,440 --> 00:42:51,360
helicopter when it wakes up and that's how we operate it so what you're saying is there's

533
00:42:51,360 --> 00:42:55,520
there's actually two linux boxes that are going to be active on mars right and there's actually

534
00:42:55,520 --> 00:43:03,200
three which is kind of fun because did you guys see the edl landing videos yes wow with the

535
00:43:03,200 --> 00:43:07,760
parachutes bill billowing out and you could see the dust kicking up as when i was looking down

536
00:43:07,760 --> 00:43:14,640
and the rover was touching down it was incredible that was also a another linux installation and

537
00:43:14,640 --> 00:43:20,480
this one was an x86 box right correct it was a compact pci ruggedized pc and i was just running

538
00:43:20,480 --> 00:43:26,560
pretty vanilla from what i understand pretty vanilla a 4x you know for the developer sent me

539
00:43:26,560 --> 00:43:32,640
the numbers it's a 4.15 kernel wow and it's it's running linux and they they had a they had a whole

540
00:43:32,640 --> 00:43:39,520
series of of just usb cameras attached to all these places on the surface of the rover and this

541
00:43:39,520 --> 00:43:43,360
was also another one of those class deep instruments because it was attached to the rover

542
00:43:43,360 --> 00:43:47,680
but it wasn't used in the landing to find a place for the rover to land it was basically

543
00:43:47,680 --> 00:43:52,400
a giant video recorder so during the landing at the right moment they just sent in a command and

544
00:43:52,400 --> 00:43:58,160
said hey start recording good luck right right so if everything had gone wrong and for some reason

545
00:43:58,160 --> 00:44:01,840
they hadn't recorded the video it wouldn't have affected the rover landing itself it just would

546
00:44:01,840 --> 00:44:06,000
have made us they didn't get all that cool video and historic video too i mean it's the fact that

547
00:44:06,000 --> 00:44:11,680
it worked is fantastic and it means that linux took part in capturing really truly truly historic

548
00:44:11,680 --> 00:44:17,840
video and i i heard i heard a shout out on stage to ffmpeg for the doing some of the heavy lifting

549
00:44:17,840 --> 00:44:24,080
there yes and they and i was talking with the developer recently they even used python scripts

550
00:44:24,080 --> 00:44:29,920
on that box to do the image so after they landed you know they'd saved all the images and then

551
00:44:29,920 --> 00:44:34,800
over the next week or so they started transferring all this video and so they used these python

552
00:44:34,800 --> 00:44:40,000
scripts on board to do some of the processing of the images and then they sent it back to

553
00:44:40,000 --> 00:44:46,800
ffmpeg for processing of the images on the actual linux box before they shipped them over so you

554
00:44:46,800 --> 00:44:52,880
have you have a bunch of different open source things operating on that one and so i guess they

555
00:44:52,880 --> 00:44:58,400
get the credit for being the first linux uh installation to run on mars but you'll have

556
00:44:58,400 --> 00:45:02,240
credit for the continuous installation right because their computer i assume is now shut down

557
00:45:02,240 --> 00:45:06,080
it's shut down but they're going to try to use it for other things like they have a microphone

558
00:45:06,080 --> 00:45:11,680
for they attempted to get a recording on the way down through that microphone but it didn't work

559
00:45:12,560 --> 00:45:15,920
they didn't really elaborate on why it didn't work but but they've tested it since and it

560
00:45:15,920 --> 00:45:21,600
seems to work so they may use it for recordings throughout the mission it's sort of a bonus

561
00:45:21,600 --> 00:45:27,680
feature so if i ever get a chance to play the sound of mars on this show it'll have been recorded

562
00:45:28,480 --> 00:45:33,360
on linux and it'll be played back and recorded on our end using linux that's pretty great

563
00:45:33,360 --> 00:45:37,680
right yeah if you get it from that microphone they have another microphone up on the mast

564
00:45:38,480 --> 00:45:43,360
that's also they're able to point in particular directions and take recordings okay so those

565
00:45:43,360 --> 00:45:48,000
ones might not be okay yes but we i guess you could say we get credit for being the first

566
00:45:48,000 --> 00:45:53,120
linux installation to operate on the way to mars because this this instrument box that i told you

567
00:45:53,120 --> 00:45:59,440
about that we designed has the software on board to to do the charging so we had to keep the

568
00:45:59,440 --> 00:46:04,880
batteries maintained and so we would wake this box up every week or two and it would execute commands

569
00:46:04,880 --> 00:46:10,080
to to keep the charging going huh so have you kind of i mean no it's still kind of early in a

570
00:46:10,080 --> 00:46:14,320
sense but it's you've made some pretty hit some pretty significant milestones here have you gotten

571
00:46:14,320 --> 00:46:20,000
a sense of in terms of linux what's worked what what hasn't worked what might be adjusted for

572
00:46:20,000 --> 00:46:25,120
future missions you have any of that idea yet i think that as we move on in linux i think

573
00:46:25,120 --> 00:46:31,200
i think what we want to look at is is getting much better at doing things like configuring the

574
00:46:31,200 --> 00:46:38,560
kernel and understanding what's going on in the kernel and being able to do things like apply

575
00:46:38,560 --> 00:46:45,120
this real-time patch that i mentioned so the path forward i think is to study linux and understand

576
00:46:45,120 --> 00:46:52,560
it better as a real-time environment and just increasing our expertise and how it works

577
00:46:52,560 --> 00:46:58,480
because we're new to this game i was a i mentioned that earlier operating system vxworks i was a

578
00:46:59,360 --> 00:47:04,640
i was you know one of the vxworks specialists for curiosity i was the one who configured it and

579
00:47:05,280 --> 00:47:10,480
understood it and you know wrote the software that would interface with it have to get very

580
00:47:10,480 --> 00:47:15,920
up close and personal right so i come out of that world where we have to know all these things about

581
00:47:15,920 --> 00:47:20,640
the operating system and so we actually had a developer on our team that was very much

582
00:47:20,640 --> 00:47:28,400
linux savvy so i wouldn't classify myself as a linux expert i would classify myself as kind

583
00:47:28,400 --> 00:47:33,680
of a maybe a power user in that domain you know flights of flight software but we had somebody

584
00:47:33,680 --> 00:47:37,840
else who was digging into the innards of our particular distribution and figuring out how to

585
00:47:37,840 --> 00:47:42,720
configure it and get the things working that we needed to so getting more of that expertise

586
00:47:43,680 --> 00:47:47,760
in a field that typically doesn't have it for that particular application i think that's where

587
00:47:47,760 --> 00:47:54,240
we want to go moving forward at jpl is to understand you know how linux works in that

588
00:47:54,240 --> 00:47:58,480
environment and try and study it and characterize it and test it so that we gain that trust so that

589
00:47:58,480 --> 00:48:03,280
we can use it for more critical applications are there any kind of future like class d style

590
00:48:03,280 --> 00:48:07,840
missions that are in the works that might involve linux that you know of at this point there are

591
00:48:07,840 --> 00:48:11,600
some in the pipeline i don't know if i can speak to them now because they're more in formulation

592
00:48:11,600 --> 00:48:16,880
than jpl doesn't want to you know yeah break news on things like that but it does seem possible

593
00:48:16,880 --> 00:48:23,520
sure sure and i think there is a growing place for these kind of class d applications of it as a

594
00:48:23,520 --> 00:48:30,640
matter of fact there was a cube set that jpl developed and flew and operated a couple years ago

595
00:48:30,640 --> 00:48:38,000
if you want to look it up it's called asteria a s t e r i a and it was a earth orbiting spacecraft

596
00:48:38,000 --> 00:48:44,000
that would do it would attempt to you know do alignments with distant stars to do observations

597
00:48:44,000 --> 00:48:49,440
and it used f prime the same flight software framework that we're talking about

598
00:48:50,800 --> 00:48:57,440
and it used a flavor of linux for that board as well so okay all right i love it so we've had

599
00:48:57,440 --> 00:49:03,920
this partnership between f prime and linux for a while so i think definitely these projects that

600
00:49:03,920 --> 00:49:09,760
have used it and have started to build a resume for linux will help us to more mainstream it in

601
00:49:09,760 --> 00:49:14,240
more mainstream in this kind of project in the future and there's definitely interest i would

602
00:49:14,240 --> 00:49:19,120
imagine there's many tales of over the years of getting linux further and further adopted but i

603
00:49:19,120 --> 00:49:23,760
just appreciate giving getting some like little peek little insight into how it's all kind of

604
00:49:23,760 --> 00:49:30,000
unfolded and it's kind of one of these stories where there's more to come because we have

605
00:49:30,000 --> 00:49:36,480
eventually at some point the ingenuity helicopter is going to fly and i'd love to chat again and

606
00:49:36,480 --> 00:49:40,240
just kind of get an idea of how it went and what what you what you guys learned and all of that

607
00:49:40,240 --> 00:49:45,280
because that's that's still a milestone that as we record this is yet to happen yes it's

608
00:49:45,280 --> 00:49:51,680
very exciting and it's very exciting not just for linux but for spaceflight in general because this

609
00:49:51,680 --> 00:49:56,480
is something that has never happened before it's sort of a right brother's moment where we're

610
00:49:56,480 --> 00:50:01,840
trying something completely new we had to develop new techniques we had to construct the helicopter

611
00:50:01,840 --> 00:50:08,240
in a very special way to operate on mars because mars has one percent of the density of earth

612
00:50:08,240 --> 00:50:12,320
so you can't just put a just can't grab a commercial drone off the shelf and put it on

613
00:50:12,320 --> 00:50:17,280
mars you know we had to build lighter and longer blades that spun faster and make sure that we were

614
00:50:17,280 --> 00:50:24,240
very lightweight and that was a challenge in itself and so doing this for the very first time

615
00:50:24,240 --> 00:50:28,880
is going to be super cool if everything goes well we'll have some nice color pictures coming out of

616
00:50:28,880 --> 00:50:33,840
that because these cameras that came with it we have basically a 13 megapixel color camera wow

617
00:50:33,840 --> 00:50:40,800
boy and i love a good drone shot i always love drone shots yes it's a it's a half a gram you know

618
00:50:40,800 --> 00:50:45,840
it's a tiny little square camera that came with the board it's basically just an adapted cell

619
00:50:45,840 --> 00:50:50,720
phone camera if everything goes well we'll get some good pictures from aloft on this helicopter

620
00:50:50,720 --> 00:50:54,400
that we can share with the world when the time comes i mean i just i think of the weight

621
00:50:54,400 --> 00:51:00,400
restrictions and the atmosphere restrictions or limitations and that had to go into making this

622
00:51:00,400 --> 00:51:07,120
thing even conceivably possible and it's it's mind-bending but i i can see long term how this

623
00:51:07,120 --> 00:51:12,480
would be essentially invaluable to any manned mission having something like this little

624
00:51:12,480 --> 00:51:16,560
helicopter a little more developed a little bit longer flight time of course that could go out and

625
00:51:16,560 --> 00:51:21,680
just do some reconnaissance ahead of them if they're out walking around or even be streaming

626
00:51:21,680 --> 00:51:26,880
back pictures you know at this as fast as it can back to the back to ground so you know ground

627
00:51:26,880 --> 00:51:31,920
control control can see what's going on with the walk i mean like there's so many uses

628
00:51:31,920 --> 00:51:36,240
for a little even something that just takes pictures that flies around there's so many uses

629
00:51:36,240 --> 00:51:40,800
for that on any manned mission in the future i would imagine absolutely and you you can look at

630
00:51:40,800 --> 00:51:45,200
the picture aspect but one of the things that a helicopter can do that a rover cannot is it can

631
00:51:45,200 --> 00:51:50,720
go to these features that you can't drive over so if we wanted to inspect say a cliff face or a deep

632
00:51:50,720 --> 00:51:55,040
ravine or something like that you can't send a rover there to look at it so you can imagine

633
00:51:55,040 --> 00:52:00,640
uses where you would send a scout like this to a really difficult to access place take a bunch of

634
00:52:00,640 --> 00:52:05,600
pictures future helicopters might be larger so that they can carry an instrument payload so you

635
00:52:05,600 --> 00:52:11,280
might have like a spectrometer or something that can scan a formation and get data so the the nice

636
00:52:11,280 --> 00:52:16,240
thing about the helicopter is not only can it get places quickly compared to a rover because the

637
00:52:16,240 --> 00:52:21,200
rover just crawls across the surface to be safe but it can only get there quickly but it can also

638
00:52:21,200 --> 00:52:28,560
go to places that the rover just can't wow and it all it starts here as i can see why why you would

639
00:52:28,560 --> 00:52:33,440
work at jpl for 30 years i mean what a what an exciting thing to work on even even just getting

640
00:52:33,440 --> 00:52:39,680
to work on on one rover would be remarkable but two tim is is incredible so congratulations uh to

641
00:52:39,680 --> 00:52:45,440
you to the team to everybody i mean this is so exciting for us as space geeks and linux geeks

642
00:52:45,440 --> 00:52:50,080
to see these two things come together amazing yes well you can imagine it's very exciting for

643
00:52:50,080 --> 00:52:55,120
me as well having grown up as a kid reading all these stories about jpl and all their

644
00:52:55,120 --> 00:53:02,400
intrepid adventures and getting to actually work on this has been a real boon for me it's been a

645
00:53:02,400 --> 00:53:06,480
it's been a lifetime dream to be able to work on something like this well thanks for coming

646
00:53:06,480 --> 00:53:10,800
on and sharing the details with us we are quite welcome and and thank you for having me on your

647
00:53:10,800 --> 00:53:18,480
podcast boy that was a treat that was that was fascinating i think there's new details in there

648
00:53:18,480 --> 00:53:24,000
that uh haven't really been talked about much publicly and what a what a story west from this

649
00:53:24,000 --> 00:53:28,960
this thing they're gonna try to now actually running on multiple computers on the surface

650
00:53:28,960 --> 00:53:34,640
of mars and you might say it's out of this world you know it's really fascinating to see a space

651
00:53:34,640 --> 00:53:40,640
where linux is still proving itself it's kind of already conquered earth but the constraints for a

652
00:53:40,640 --> 00:53:46,080
multi-billion dollar mission on another planet are a little bit different i get that i'm just

653
00:53:46,080 --> 00:53:51,280
hopeful that due to the open source nature here you know as jpl and nasa adopts more linux and

654
00:53:51,280 --> 00:53:57,200
puts it in more difficult situations that's just going to be another shared use case that improves

655
00:53:57,200 --> 00:54:03,040
that kind of real-time story for other kernel users yeah it was interesting and it makes total

656
00:54:03,040 --> 00:54:09,840
sense to hear how important it was that the linux kernel support real time to make uh some of this

657
00:54:09,840 --> 00:54:18,240
actually possible uh and um i'm hopeful that we'll see in the future way more devices that are this

658
00:54:18,240 --> 00:54:23,440
class d style mission device there's probably tons of support equipment that isn't necessarily

659
00:54:24,240 --> 00:54:29,840
fundamental to the core operation of the mission but would be useful to have and and add supplemental

660
00:54:29,840 --> 00:54:35,600
value so that would seem like a great use case for linux for a long time i mean i wouldn't be

661
00:54:35,600 --> 00:54:40,240
surprised if eventually it's the predominant type of equipment but we'll only have to just

662
00:54:40,240 --> 00:54:45,040
wait and see but it was really cool to hear all of that and uh to see that uh maybe one day could

663
00:54:45,040 --> 00:54:49,360
go even further so thanks to tim for coming on the show we got we really got him at just the

664
00:54:49,360 --> 00:54:55,200
perfect time because after this like i think he said did he say next week uh mars time is

665
00:54:55,200 --> 00:54:59,440
kicking in for his team is that what he said it's very soon yeah pretty much they've got to switch

666
00:54:59,440 --> 00:55:05,040
over to living on mars time how about that and not all the teams have to do this all the time

667
00:55:05,040 --> 00:55:09,120
but his team does because they're the helicopter team and they're going to be doing flights and

668
00:55:09,120 --> 00:55:15,360
stuff so it's pretty hardcore so i'm really glad we got him when we did because once he goes into

669
00:55:15,360 --> 00:55:22,080
mars mode he kind of just he goes afk uh and so it was great to chat with him and maybe when he

670
00:55:22,080 --> 00:55:26,960
emerges from mars time we can catch up with them and see how things went yeah i mean here's i think

671
00:55:26,960 --> 00:55:32,720
we'll all be hoping that the first flight of this little helicopter goes well west before we go why

672
00:55:32,720 --> 00:55:38,240
don't we do a pick or two these are honorable mentions because they have been on the show at

673
00:55:38,240 --> 00:55:44,000
some point in the show's nearly 400 run history but i can't remember the last time we talked about

674
00:55:44,000 --> 00:55:50,080
them and they both deserve a little attention i'm going to start with oaken audio this is the audio

675
00:55:50,080 --> 00:55:54,400
editor everybody should know about everybody knows about audacity god bless audacity it's a great

676
00:55:54,400 --> 00:56:01,280
project amen but oaken audio this is one of my secret weapons for production if you know any

677
00:56:01,280 --> 00:56:06,320
clip you ever hear on this show that i've clipped for you know like if we have a a news clip or

678
00:56:06,320 --> 00:56:11,440
something like that it's in oaken audio always is i love this app because it'll open up every

679
00:56:11,440 --> 00:56:18,000
audio format but also every video format it has a really nice smooth ui it's uh great for just

680
00:56:18,000 --> 00:56:22,320
grabbing a bit of audio and exporting it or cutting something it's about time i try it because i

681
00:56:22,320 --> 00:56:26,320
i remember i think drew recommended it in the past and i sort of gave it a go but it was

682
00:56:26,320 --> 00:56:29,840
at the time it was hard to get installed but just looking right now at their download page they've

683
00:56:29,840 --> 00:56:35,520
got windows versions mac packages here and then a whole bunch of devs rpms and even a pacman package

684
00:56:35,520 --> 00:56:41,040
you can just download so seems like things have changed a pacman package you say yes yes and then

685
00:56:41,760 --> 00:56:46,800
let's give mention to natafire we've talked about it before i feel like we have but natafire

686
00:56:46,800 --> 00:56:51,520
is an application that lets you take a website and essentially convert it to an application

687
00:56:51,520 --> 00:56:57,920
it's basically electron for yourself but the idea would be that you know maybe you got to use web

688
00:56:57,920 --> 00:57:02,960
mail or you know like you get stuck using a few web apps and you just want them out of your browser

689
00:57:02,960 --> 00:57:06,880
you'd like them to have their own process you'd like them to have their own entry in your taskbar

690
00:57:07,760 --> 00:57:11,920
that's where natafire is kind of handy yeah we're all stuck with it but a lot of the benefit of

691
00:57:11,920 --> 00:57:16,240
having a native app is you know some of that native desktop integrations if that app supports

692
00:57:16,240 --> 00:57:20,800
it but then also just just having a different icon having a different entry in your alt tab

693
00:57:20,800 --> 00:57:26,800
so that you don't have to manage every single thing in another tab from your lips to developers

694
00:57:26,800 --> 00:57:31,600
ears wes that's all i want that's all i want well that and i wouldn't mind it to be a native

695
00:57:31,600 --> 00:57:36,880
application this is an interesting challenge uh this is one that canonical is taking a crack at

696
00:57:36,880 --> 00:57:42,960
with flutter and it's a problem that is it's it's it's it's apparent to anybody who's been listening

697
00:57:42,960 --> 00:57:48,960
for a while developers have a whole mixed bag of incentives sometimes they want to develop

698
00:57:48,960 --> 00:57:52,880
for mobile sometimes they want to develop for several desktops sometimes linux is just kind

699
00:57:52,880 --> 00:57:58,960
of a byproduct and we've ended up with electron for better for worse but flutter is perhaps another

700
00:57:58,960 --> 00:58:04,000
path unfortunately not one that i'm too excited about not really happy that it's it's hitched to

701
00:58:04,000 --> 00:58:08,320
dart and google but it is something canonical seems to be pretty excited about and they're

702
00:58:08,320 --> 00:58:13,040
writing their future installer in it and they've committed to writing every future canonical

703
00:58:13,040 --> 00:58:19,360
desktop app in flutter as well so there's a lot going on here and i think a lot of people are

704
00:58:19,360 --> 00:58:24,080
passing over this story one of these just sort of glaze over and pass by i would encourage you

705
00:58:24,080 --> 00:58:31,680
not to pass over this story go to linuxactionnews.com 179 and listen to this week's episode

706
00:58:31,680 --> 00:58:36,160
where wes and i do a breakdown so you can kind of get where they're coming from and kind of the

707
00:58:36,160 --> 00:58:40,400
scale of commitment that they're making to this thing it's it's more than you might suspect and

708
00:58:40,400 --> 00:58:46,240
i think it's worth your time and attention so do do go check that out linuxactionnews.com 179

709
00:58:46,240 --> 00:58:50,640
and with that i think mr payne we're gonna wrap it up so i will just say this join us live next

710
00:58:50,640 --> 00:58:57,280
week see you next week same bad time same bad station we do this here on tuesday at 12 p.m

711
00:58:57,280 --> 00:59:01,840
pacific 3 p.m eastern if you do the twitter thing you can find out about it by following us at

712
00:59:01,840 --> 00:59:07,920
linux unplugged or follow the whole network at jupiter signal there's a whole cast of great

713
00:59:07,920 --> 00:59:12,480
shows over at jupiter broadcasting.com there's also even a calendar to find out when we're here

714
00:59:12,480 --> 00:59:20,960
live hey that's a good one and all the links all the links linuxunplugged.com 396 oh my gosh oh my

715
00:59:20,960 --> 00:59:26,080
gosh also our subscribe link is over there our mumble server info our matrix server basically

716
00:59:26,080 --> 00:59:29,920
all the stuff we kind of just casually mention all the time on the show we try to have links

717
00:59:29,920 --> 00:59:35,600
to it at linuxunplugged.com that's the general idea but we just appreciate you listening thanks

718
00:59:35,600 --> 00:59:41,520
for downloading listening too we'll see you right back here not tomorrow not monday not wednesday

719
00:59:41,520 --> 00:59:54,640
not saturday but next tuesday

720
01:00:11,520 --> 01:00:26,880
all right everybody let's go boat jbtitles.com everybody go boat at jbtitles.com we go go pick

721
01:00:26,880 --> 01:00:31,600
our titles jbtitles.com we've got quite the selection yeah there's a lot of boats going

722
01:00:31,600 --> 01:00:38,640
today um we got a new jellyfin release west 10.7.0 is out did you see the uh new shiny no i haven't

723
01:00:38,640 --> 01:00:43,520
had a chance to upgrade yet but i guess i know what i'll be doing after the show watch out though

724
01:00:43,520 --> 01:00:49,200
sounds like there are some uh irreversible database changes so you can't go back or at

725
01:00:49,200 --> 01:00:53,040
least make your make your backups first you're running in a container right this should be easy

726
01:00:53,040 --> 01:01:09,200
yeah do your backups do your backups

