This is Linux Unplugged Episode 24 for January 21st, 2014.
Hi everyone and welcome to Linux Unplugged, your weekly Linux talk show that's reporting
from the trenches of the Init System Wars.
My name is Chris.
And my name is Matt.
Hey there, Matt.
You know what this is right here?
What?
This is episode 24.
Already?
And that's a special number because it does one of two things for me.
Number 24 always reminds me that we are really just getting started, right?
We've got a long ways to go still.
But it also always makes me think of Jack Bauer, who was, well I spent some time loving
on Jack Bauer for a while.
Now I'm over 24.
But in this episode it's a little bit like 24, this TV series, because there is a war
against Upstart.
There is a full-fledged assault against Upstart as Debian is nearing their vote.
Now in the Linux action show, we said it looked like it was maybe going towards System D for
Debian's choice.
However, it is now four to four, four for Upstart and four for System D. It's head to
head match and so commentators are taking to the web, opinion makers as it were, are
going to the web and posting their for or against it for Upstart.
It's been actually a fascinating conversation, but on top of that, if we still have enough
time after that, and we might not because there's a lot to cover there, if we have enough
time, I want to talk also about, I want to respond, might be a better way to put it,
but I want to respond to some of this FUD that you're seeing crop up as new Linux users
come over to Linux to try out Steam.
And there has been a lot of jabs thrown at Microsoft, Paul Thrott and among others reported
last week that internally at Microsoft, they consider Windows 8 the new Vista.
That's what they call it, the new Vista.
And that has got some Windows users in a tiff.
And so they are responding to the people switching to Linux with a lot of FUD.
So here we are in episode 24 of Unplugged.
We'll get into some of that.
But Matt, you know what we should start with?
What's that?
Probably our feedback.
That'd be a good place to start, don't you think?
I think it's an excellent place to start.
I know.
And you know what?
I think it's wasted effort.
Oh, who let him in here?
Oh my goodness.
I thought we kept him in a cage somewhere or like in the back room or whatever, right?
Oh man.
He's kind of like a, you know, we bring him out when things get really serious and we need
some backup, we unleash Richard.
That's right.
Get it out of here.
As he always says.
All right.
Well, first I want to just cover a little bit of feedback.
So Jimmy wrote in to the Linux Unplugged show and he says, I've been a JV viewer for a
little over a year and I love the show.
I look forward to seeing it weekly and enjoy participating when time permits.
I recently bought a hobby laptop that I'm using to experiment with different distros
and desktops.
I've been a KDE fanboy for some time and really love the interface customization and
capabilities of the built-in widgets and apps that get the job done.
However, I've become bored and frustrated so I took the arch challenge via Antegoros.
Antegoros.
I'm sorry, it's just ain't for me.
I won't dig into the topic here and I'm not banging on the distro or arch concept.
I just didn't like it and I was missing a couple of odd packages I needed for work stuff.
So I moved to another distro with no fewer than 12 on this laptop in succession.
He says, I want to give a quick plug for Solid K. It's well put together.
So I've landed on the right distro base, Debian, but now it's the desktops turn.
I've tried out several, which include elementary, Cinnamon, KDE, Xfce.
What the heck's going on in our community?
Honestly, I don't feel compelled and I hate having to use that word by any of them.
I know how to tweak KDE to make it look awesome, but dang, I just want something different
and nice to look at.
I think elementary is close, but it lacks some innate features that I like, e.g. a
trash can and minimizing customization.
Cinnamon's looking pretty good and I thought I had found a new home, but it kept freezing
up.
So adios.
I don't like mate, and I just don't like the Windows, the Window Managers, WMs.
So I thought, what do I have left?
Unity.
If I had more customization and Canonica would decide to make Ubuntu a rolling release, it
might do it, but then, for now, I'll have to pass.
So what have I got left?
If there's anything the community should focus on for 2014, I'd vote for improving
the desktop environment.
Think about it.
What's the first thing a new user sees when he installs Linux, besides grub?
The entire experience can be tied down to how well the desktop environment handles a
user's input right now, and they suck.
So that might be being a little harsh, but I feel kind of jaded.
If only there were a way to tie together the awesomeness of KDE and the simplicity of GNOME,
make it fast, lean, and fully customizable, and put a stinking trashcan on the taskbar,
and minimize.
Make it different and modern, and no more cartoony icons.
I wish I knew how to do it because I can see it plainly in my mind.
Anyways, he says thanks for letting me rant.
Thanks again.
Jimmy.
You know, I honestly would say probably what he's going to want to do is revisit XFCE.
Not because out of the box it's butt ugly, I'm not going to argue that, but actually
spend a good 30 minutes or so really hunting down a good level of customization that really
meets his needs.
I think he might be surprised and actually get that sweet spot he's looking for.
It's not an automatic fix, but I think it's definitely something to consider until GNOME
and KDE are able to do what he needs.
Yeah, I agree, and also sometimes it's a really hard thing because sometimes you cannot like
something because it's just so different, and it's hard to recognize that's what's actually
going on.
Or it might be interfering with his workflow too, and I mean I can understand that too.
Well, that's why you won't like it, right?
Because if something's different and it interrupts your workflow, it slows you down, it makes
you less efficient, it makes you have to constantly rethink what you're supposed to do.
However, I was just talking about this on the pre-show, but one of the things I've done
since our In Defense of GNOME episode that we did on last a few weeks ago is I forced
myself to just keep using GNOME because a lot of times I jump around, and I become an
expert in all but a master in none when I do that.
And so I said, okay, no, Chris, you're going to use GNOME for at least a month, if not
more, and every day you have to teach yourself a new GNOME way of doing things.
Whatever the GNOME philosophy is, and I've been reading a lot of the GNOME tricks and
shortcuts and how-tos and watching some YouTube videos on the way people use GNOME, sort of
retraining my brain.
And now I'm kind of getting to the point where I'm not just kind of liking it, but I'm loving
it.
I want to become a GNOME advocate.
I'm like, this is great.
And if you spend the time to relearn how to ride the bike and then ride the bike in the
right way, it is incredibly rewarding.
But the process of getting there requires that level of dedication, which nobody really
has the time to do in the real world.
People aren't podcasters who actually need to have perspectives on these kind of things
and so have the luxury of forcing themselves to do this.
People have work to get done.
So I totally understand where he's coming from here, but it is one of these hard things
where sometimes you're never going to be happy until you train yourself to live in the way
that desktop operates.
And I think you can do that with anything.
You can do it with XFCE.
You can do it with KDE.
You can do it with GNOME.
Those I think require it the most.
And then of course you have your tiling window managers and things like that.
And I think what sometimes people want is they want really sane defaults that look new
and have new ideas around them, but aren't really all that different.
Sort of what elementary OS tries to do.
And I also think they're coming from a way of doing things to where they were trapped
in a user experience to where if it doesn't come out of the box that way, you're kind
of stuck, not really taking the time to say, oh hey, I can theme this or oh hey, I can
maybe take a dock, slide it up this direction, move this bar over there, tweak these icons.
Actually look at the way things are flowing as far as, there's so much customization that
can be done.
But I think you're right.
I think they are victims of a default mentality.
So Friar Tuck wrote it.
How about that one?
How do you like it?
I like it.
This is a new one.
And check this out.
So this is why every now and then as the music's playing us off the show, I'm like, hey, could
you please go over to iTunes and give us a rating and a comment?
It helps people find us and that helps them switch to Linux.
It actually is true.
Here's Friar Tuck.
He writes and he says, first off, thanks for all the great shows.
I discovered Jupiter broadcasting in an iTunes store when I was searching for the Linux podcast.
I was curious and I wanted to learn more about Linux.
Linux Unplugged was the first show I found.
Now see the timing works out because that was back when the show was new and we were
asking people to go comment and rate a lot back then.
And so for a while we were staying very high in the iTunes charts.
Thing is is it requires kind of continuous maintenance from the audience to leave comments
and rate.
So if you are an iTunes user, please consider doing that because it does help people find
the show and then they switch to Linux.
He says, in this week's Linux Unplugged, you spent a fair bit of time talking about Google's
purchase of Nest Labs.
I think this article touches on a very real reason why Google purchased Nest.
And he links it and I'll talk about that in a second.
The article talks about Nest Labs' robotics divisions.
Google is already heavy into robotics research.
They may have purchased Nest as an investment in futuristic business models rather than
a thin attempt to break into Nest's current business model.
Thanks for all you do and good luck with the new space and keep up the good work.
So this article that he linked us to, and I'll have the full article in the show notes,
they talk about, I didn't even know this about Nest because I didn't really follow them that
closely, but Nest has always thought of itself, according to this piece that was written,
Nest has always considered itself a robotics company.
They say the robot is just hidden inside a sleek Apple-ish case.
They said, look who the company brought in as its VP of technology.
Volke Muskoka, I'm probably saying that wrong, but she is a roboticist and an artificial
intelligence expert from the University of Washington.
They hired to bring her in as the VP of technology and in this article they have a shot of her
right here working with a robot arm at Nest.
And so...
Oh wow.
So apparently, Nest also was very heavily into robotics and we also know that Google
just bought the guys that, who, who, who, ah, ah, shoot, I'm totally forgetting the
name of that company.
That's a crazy looking arm.
Hey Mumble, what was the name of that robotics company that Google just bought that has all
the Pentagon contracts?
What was that?
What was it?
Boston Robotics or something?
Boston Dynamics, right?
Yeah, okay.
Yeah, okay, thanks.
Yeah, so Boston Dynamics, they just recently, plus like they bought like eight other robotics
companies last year.
But Google is getting big time into the Rosie the robot role here.
They're going to, they're going to integrate Google now and Rosie the robot.
I'm a man.
If they have somebody that wants to do my dishes, I think I would be perfectly okay
though.
Although I can probably do without the maid thing.
I think we could do, we could talk about a trade there, Google, but that's a, that's
an interesting perspective and makes it even a little creepier to be honest with you.
So thanks Friar Tuck.
Thanks for writing in.
All right.
Well, so we, I have the results of our innovative little guy survey where last week we asked
folks to send in the distribution that is a little, it's small, you know, in, in terms
of distro sizes, doesn't get much attention, but does something really interesting and
unique.
And we had a form in the show notes for last week's episode and we asked you guys to submit
the name of the distro and why you felt it was innovative and what was innovative about
it.
And I've got the results from that.
I guess you could almost call it a survey.
So first, before we get to that, I want to thank Ting.com Ting is mobile that makes sense.
My mobile service provider and you guessed it, also Matt's mobile service provider.
Absolutely.
Ting has no early, no early termination fees and no contracts because honestly Ting is
focused on the customer relationship and on the service for the customer.
And so a lot of the things they've set up are really to that end and Ting has been the
pioneer at this.
They've been the first doing it and they're doing it the best because it's really their
core business focus.
The people behind Ting is two cows.
Now if you're familiar with two cows, they've done a lot of things on the web for a long
time and one of their missions has always been go into a market that is ripe for disruption,
that needs to be corrected and go in there and offer the service the way it should be
and just gain market share by doing that.
Not by dirty tactics, not by copying your competitors business strategies, but by actually
innovating in that space.
That's what I love about Ting and that's what you would love about Ting too if you go over
there and try it out.
Not only that, but Ting is an exceedingly transparent company and that is a very refreshing
thing for a wireless company.
They just had a blog post kind of poking some fun at CEO for trying to copy some of the
Ting Mojo and of course falling a little flat on that.
They also have a lot of great things over on the Ting blog like great apps you can check
out, new service updates, roll outs of their tri-band LTE.
When they had the Nexus 5 coming over the Ting network, they were keeping people posted
over there.
So as a long time Ting customer now, I really appreciate that blog.
I also really appreciate the Ting dashboard.
It really strikes a balance between simple and easy to use, but incredibly powerful.
They combine that with the Ting app and the two work hand in hand so brilliantly.
I can have alerts and push notifications sent to my phone if I need to.
One of the great things about Ting is it's only pay for what you use and the dashboard's
UI makes this incredibly easy to monitor and manage.
They have this really simple dial system that tell you exactly where you're at, sort of
like a gas gauge, and it just clicks with you immediately when you see it.
You totally know where you're at.
You don't have to sit there and dig through all these line items and they're not sneaking
anything in there.
A Ting plan includes hotspot, it includes tethering, voicemail, caller ID, picture messaging,
all of that's included.
Ting just takes your minutes, your messages, and your megabytes, they add them up at the
end of the month, whatever bucket you fall into, that's what you pay.
It's $6 a month for the flat line and then it's just your usage on top of that.
It's extremely straightforward, it's super simple, and Ting has a whole bunch of great
devices.
Here's how you get started.
Go to linux.ting.com.
That'll take $25 off your first device.
If you've got a Sprint compatible phone, that'll give you $25 off your first month of service
if you want to bring that device.
They've got a BYOD page you can check out.
Ting is mobile, it makes sense, and Ting is my mobile service provider for a reason.
Also Ting will help you get out of your early termination relief up to 25% per line.
You can go to ting.com slash ETF to find out more about that.
So go to linux.ting.com to get started.
Go check them out, try out their savings calculator, and a big thank you to Ting for sponsoring
Linux Unplugged.
Totally love the Ting.
Ting.
Ting.
So I have these results from the survey here that we, well survey, whatever you want to
call it, and Angela calculated these using her Computatron 2000, and we got a bunch of,
we got about 60 individual submissions, which is pretty good for a poll that we mentioned
at the end of the episode.
Oh yeah.
It was spread across a whole bunch of different distros, but there was a few that really stood
out in here.
PerOS came in a couple of times, Bowdai Linux came in once, got a couple of mentions for
Gentoo, but really what, the number one, the number one distro was Manjaro.
Interesting.
Now I feel like, I mean Manjaro is a small distro, I don't, you know, but I also kind
of feel like it might be too big for what I was thinking.
It's, first of all, it's not even like a main release.
I mean, I definitely agree with you.
It's kind of on that cusp and I can't really, boy, you know, when I first started using
it I would say it was probably small enough, but now it's kind of, it's growing so quickly.
It's kind of hard to say.
PerOS got a submission.
Of course, PerOS has shut down now.
It would almost be interesting to look at PerOS and just say, oh, it's like a goodbye.
Like here's what it was.
Here's what it did great.
So long.
Thanks for all the hard work.
I mean, maybe Crunchbang.
I mean, I don't know.
I mean, but then again, Manjaro was rated highest.
I mean, so this, the other one that came in, the other one that came in second to Manjaro
that I was, I've been, I've never looked at, but we just actually, it was just mentioned
in an email.
Solid XK.
I don't know how you say it.
Solid X.
It is S O L Y D X K.
I believe it's based on Debian and it has a couple of neat features.
And so I think that might be a solid one to check out.
S O L Y D X K.
And it's one that I've heard mentioned by our audience is not one I've checked out myself.
And so this, so not only was it the second most submitted, but it's one that I personally
would like to check out because I haven't yet.
It's kind of in my blind spot.
So I'm kind of thinking we'll do a review of Solid X K.
Yeah.
And these are great.
Netrunner OS got in here, Jolly, DSL, a whole bunch of them got in there.
I'll have a link in the show notes if you guys want to see which ones are submitted.
But yeah, it's based on Debian testing, says Art of Music in our IRC room.
So that could be really cool.
Because you know, a lot of people out there are thinking about Debian testing as a potential
desktop.
So if they've conjured that into something that's quite nice to use, that could be interesting.
So stay tuned on a future Linux action show where we will have that review coming soon.
I got some other stuff in the pipeline, but that'll be coming fairly soon.
Okay.
Well, I wanted to talk about something that's, I don't know if you guys have been noticing
this, but seems like there's a bit of a war against Upstart these days.
You know, obviously this Debian decision is looming and it's got people coming out of
the woodwork talking about Upstart, talking about the CLA, all these kinds of things.
And so I have a couple of, before we jump into this, I got a couple of recent posts
that just happened in the last couple of days.
Linus Torvalds took to Google Plus and commented in a thread over there.
He said, and this was a response to a post that I believe Matthew Garrett had started
about the CLA, and Linus said that, to be fair, people just like to hate on canonical.
But any, in his overall premises, any CLA is fundamentally broken.
The FSF and the Apache Foundation CLA's are pretty much equally broken, and they may not
have been broken because of any, oh, he says, but because of copyright assignment, paperwork
ends up basically killing a community.
Basically with a CLA, you don't get the kind of long tail that the kernel has of random
drive-by patches.
And since that's how a lot of people try the waters, any CLA at all, like changing a license
or not, even if it doesn't have a license changing provision, is fundamentally broken.
Matthew Garrett went on to say that not all CLA's are created equal.
He said, why do people object so much to canonical when they do it?
He says, I've written about this before in the context of Mirror, but it's worth expanding
upon.
For example, the SFS copyright assignment ensures that contributions to the GPLed software
will only be distributed under a GPL-style license, whereas the Apache CLA permits the
ASF to re-license a contribution under a proprietary license, but the Apache license already allows
you to do that anyways.
In contrast, canonical ships software under the GPL-3 family of licenses, but requires
the contributor sign an agreement that permits Canonical to re-license their contributions
under a proprietary license.
This is fundamentally a different situation to almost all widely accepted CLA's, and is
disingenuous of Canonical to defend their CLA by pointing out the broad community uptake,
for instance, of the Apache CLA.
So this is sort of an interesting one-two approach.
So you've got some folks that are going after the CLA and trying to expose what they foresee
as problems that the CLA presents.
And then on the other hand, you have folks who are going after Upstart on a technical
level, like Lenart Potteran, creator of SystemD.
He took to G+.
A couple of times recently, last night, he wrote, shutting down is hard.
I'm sorry for piling on, but there's an interesting aspect of Upstart I'd like to shed some light
on.
Not necessarily because it's hard to fix, but simply because it's quite interesting.
As it stands now, Upstart will eat your file system.
And then he goes on to kind of explain how in some use case scenarios, if something is
reading a file and it doesn't get shut down properly and your system powers off, it could
potentially damage the file system.
And another post, he says, it appears the Debian Technical Committee is in discussions
right now.
And he goes on to talk about how they're not necessarily talking about technical limitations
of Upstart.
He says, for example, Upstart doesn't mount file systems properly at boot.
The existence of mountall in Upstart and the non-integration of etcfstab into the Upstart rule set results
in a lot of additional shortcomings.
Mountall is a one-time thing for a boot process.
All context of file system devices and mounts is lost.
After it ran, the file system state is henceforth assumed static, which of course is not how
systems work these days.
This design flaw is one of the things we noticed when we looked into Upstart in detail before
we decided to start SystemD four years later.
Nothing has changed.
The Upstart design still cannot cover this.
And he goes on to list a lot of other shortcomings with Upstart.
And this is also all linked in further detail, which you can read yourself on G+.
He's a very long post.
I'm not going to read all of them.
And so this to me clearly is happening at this time because of this looming Debian decision.
It's absolutely vested in trying to kind of sway a position.
And there's no question that undoubtedly there's a lot of truth in it.
But at the end of the day, I do feel it's kind of disingenuous to – for them to release
it like – it's kind of like voting one way or the other because you're about to
get reelected.
Yeah.
It's that kind of thing.
It's very political.
And that's a turnoff for me.
So you have this worthwhile information, potentially worthwhile information.
I know nothing of it as far as its authenticity.
I'm not into that sort of thing.
But I do know that – yeah, the timing kind of rubs me the wrong way.
So it's very probable.
I would actually prefer evidence versus just somebody that makes a claim that I've – again,
I would need to see more evidence to that fact or some examples or hell, even a YouTube
video showing it happened.
That would be cool.
Just something to kind of push me in that direction.
But yeah, the timing is a real turnoff for me.
I'm just not cool with it.
Yeah.
You mean in terms of like it actually eating the file system like –
Yeah.
There's so much FUD on the internet that there's the truth and then there's FUD.
And trying to distinguish between the two, it's – honestly, it's convoluted.
And you've got to be very careful of mob mentality.
I think in this particular case, he's probably correct.
I don't see – and it's way too elaborate to be nonsense and I think he's probably
right.
But again, the timing stinks and I found that to be a real turnoff.
So Mumble, I'm curious what you guys think here in the room because here we are, a bunch
of Linux users.
A lot of us have been around for a while.
Some of us are new.
But we are very clearly watching not a war but a clear –
It's a pissing contest.
Yeah, a clear – very much so.
Like a back and forth trying to – this is obviously how an open community tries to
influence each other and push a new technology forward.
A lot of people have a lot riding on this.
I'm kind of curious in the Mumble room if anybody has any observations on the situation
or kind of any thoughts along – if some of this is maybe ill-timed or if it's maybe
just the right time.
Anybody have any thoughts?
Yeah, actually, just – I really do – like the way Matt said, it really does seem like
a pissing contest at this point.
Both sides seem to be going and pushing and saying, oh, well, in this situation, this
can happen.
I'm monolithic and I'm not.
They're both going and just saying these rather silly ideas that – one is so much
better than the other.
I think it really comes down to – if you use both, both work quite well.
The only thing that really comes down to is the CLA, unfortunately.
That's why I think why they're talking about the CLA and not the other stuff because
the other stuff is really rather simple.
I seem to have missed the back and forth.
I seem to have only seen Leonard and Kay posting on Google+.
I haven't seen anyone from Upstart posting rebuttals back the other way at all.
Right.
There's been a few in the comments on these threads.
One of the original Upstart developers did take to his Google Plus feed and had a couple
of comments to say about the CLA and things like that.
You're right, it has been a lot of campaigning from one side, definitely more so, and then
more of a response on the other side.
I think maybe that's – maybe because some of the pro conversations for Upstart are all
happening on the Debian mailing list itself, whereas the folks – where these folks don't
really have an in there as much, so they're kind of using their other avenues to reach
out.
It's an open mailing.
It's an open mailing list.
Surely they could – if they wanted to lobby, that would be the right place to do it rather
than on a social network.
You're right.
I can see that it is sort of seen as a pissing contest and whatnot, but I think if there's
any time to do it, it might as well be now.
So I don't see that as necessarily a bad thing.
I actually think it has a lot – I think there's a lot on the line here.
And I don't know why, because honestly, the more rational aspect of me also knows
that it doesn't matter if Debian goes with OpenRC or Upstart or SystemD, it'll all
be normalized out in the end.
It'll all work out.
Sure.
But it does seem like now, to me, I agree that it's a little dirty on the timing,
and Popey brings up a good point too, that there are actually other avenues to have this
conversation other than the most public of those avenues.
But I also kind of feel like at the same time, the stakes are high enough that it almost
justifies it, because I'll tell you, I have no – Upstart's fine.
I've used it for years.
But SystemD is really quite good for a server.
It has resource controls that are actually kind of absolutely essential for a server,
and then it also has the capability of capturing daemon core dumps and providing those to the
admin through the logging system, and also then restarting those daemons after they crash
and being very intelligent about how it does that.
And on top of that, it also can auto-resolve dependencies.
So if several things fail, it can actually have – it actually has the intelligence
to resolve the dependencies to get everything back up and running.
Oh, and hey, here's your notification of what happened and what we did.
And then you combine that with cgroups.
You combine that with – it is honestly also a lot better at managing file system mounts.
And when you live in a world of Wi-Fi and USB thumb drives, having a much more dynamic
methodology of handling your file system mounts and something that's intelligent about that,
and also something that's also dependency aware again.
So like before it tries to mount NFS, it starts up the networking stack.
Those kinds of features, it almost would seem – and I know we can solve those problems
with other tools, but it seems a little silly.
Like it seems like we should – all of our – all Linuxes should be able to do those
things.
Well, and I think a really nice collaborative effort that both parties could do is to simply
work together on a flowchart on what each of their individual camps offer.
Simple.
Simple politics.
Just keep it simple.
I think that's –
Because I think that'd be awesome.
What's interesting there is Scott James Remnant, who was the original maintainer of Upstart,
the creator of Upstart, some years back commented on – I think on Matt Garrett's post and
talked about how he did have conversations with Kay and Lennart about system D.
And what surprised me was most recently in the last week or so that Kay and Lennart have
talked all about the CLA and how that was a big sticking point for system D, yet none
of that was mentioned years ago when everyone told us that canonical were kings of not invented
here and kings of fork it, when in fact they were – Kay and Lennart were talking to Scott
about helping maintain –
A fork.
Upstart.
And then they went away and –
They discussed a fork, too.
They made something else.
Yeah, well, they also discussed forking Upstart.
I mean, there was a – yeah.
So I guess you're saying that you're thinking maybe the CLA is a little bit more of a ruse
now that it wasn't as big of an issue back then?
I think it's a good bandwagon to jump on this week, yeah.
Yeah, and I think what you point out is interesting because it definitely points out that the
timing, like you said, it's really recent, the timing with all the deviant stuff, it
does seem like they're kind of pulling that out of their bag of dirty tricks, which –
But I kind of feel like the community as a whole, now that Linus has jumped in on the
whole CLA thing, too, that shit, I think it's sailed, right?
I mean, now Linus has come out against CLA's, and of course, I mean, not that surprising,
but that seems like a battle that – it just seems like something canonical that is not
going to be able to change public opinion on that.
I don't necessarily think canonical CLA – I'm not going to say whether canonical
CLA is either good or bad, but I think in the case of Debian, it might be a hurdle for
them even adopting something like Upstart.
They would have to do –
Right, and I think that is – it is a problem.
Go ahead, Bobbie.
I'm curious to hear your thoughts on that.
They even said that the reason why they wrote Upstart – sorry, System D is because of
the CLA on Upstart.
That's what they're saying, but Popeye's kind of –
I'm sure – sorry, I don't know whether there's satellite delay here to the UK or
not.
I can see how there are technical arguments for why System D is better, and I can see
how there are arguments for why Upstart is better, but what surprises me that it's been
left this late to come up with, oh, yeah, and what about the CLA?
I mean, this stuff is all well-documented on the Debian Wiki of rationale pro and con
for both products, and I would just like the Debian technical committee to get on and make
a decision.
I'd rather this was resolved somewhat.
I agree, too.
You don't go to Debian and start preaching to them about licenses and agreements.
I mean, these guys, before they even got this far, are well aware of the CLA, what it means,
and all of that.
So it is a little odd to bring it up at this stage because it's – to me, it kind of
feels like, all right, all cards out, Matt, you focus on the CLA, Lennart, you focus on
the technical stuff.
Now, I'm not saying there's even collusion or anything like that, but it just really
seems like, all right, everybody's going to put it all out there.
It gets as much noise about this as we can right now while we can.
It sounds kind of like the Upstart side is more like a dog that's just kind of chilling
out sleeping, and then the System D side is like the Jack Russell that just never shuts
up.
But it's really different.
We have been talking about this – like, if you go back to the episode, we discussed
this a while ago.
We discussed the CLA then and how it was a big deal.
I don't think it just happened overnight.
It's just – this isn't – it's popped up again.
Just different aspects of it are popping up again and again, and the CLA just seems to
be a very strong sticking point, and everyone's kind of sticking to it and whether they like
it or not.
Right, and this time, too –
And I can see why it is.
I can see the rationale why a developer might say, or more accurately, their employer might
not want them to contribute to a product where there is an asymmetrical relationship with
them and the maintainer.
I can understand that, and Debian have got to figure that one out.
That's for them to figure out.
I think, too, part of it is we are – there are a lot of engineers and technical people
in the community, obviously, and when something is potentially technically superior, there's
like this extra urgency to become an advocate of it, right, because – but this is technically
the right thing to do.
And of course, it's never always black and white like that, but that's just how people
are.
Like, well, how could you not implement this?
This is the better, obvious way to go.
So – and I think partially, too, the debate has flared back up around the CLA because
there's been a pivot in the conversation.
There was a bit of a, well, but look, even the FSF has a CLA, and also Apache, they have
a CLA.
So look, it's not that bad.
And so then there was this wave of response to that claim saying, well, those don't try
to relicense, or they already permit relicensing, so the CLA allowing relicensing isn't a big
deal.
And people are also coming out and calling it a community limiting agreement.
The CLA is a community limiting agreement saying that it doesn't allow – line is saying
that it doesn't allow for drive-by community growth.
It's an interesting time, and it's an interesting spot, and I think there's a lot of people
out there right now that are honestly just kind of like – Bobi says, like, just hurry
up and vote.
Let's just make a decision here.
Because a lot of these things, once they blow over, are not that big of a deal.
So I completely agree.
It's almost like – it's almost like they need to foot the corner or something to get
it over with.
Right?
No kidding.
Well, and you know, Debian's been floating like a lot of different proposals.
Like, one is, all right, default on Linux is systemd, but if you go with, like, Herd
or something like that, we'll use openrc, or k-freebsd, we'll use openrc, or whatever,
right?
There's, like, all these different ideas they're proposing right now for – or different
scenarios.
And it – I don't know, it's one of these things where – and we're about to shift
gears into the FUD busting, and I'll just leave it at this, and then we can move on.
What I personally would like to see on the Versus-based installer, maybe an option somewhere
along the lines, like, do you want to use systemd or openrc?
Or something like that.
That's what they need to do.
Yeah, maybe.
Well, that would be kind of hard to do, as packages would have to be all configurable
to use either or, and generally that makes building for that – building packages for
the distro a lot more complex.
See, that's my question, though.
I can test it out.
Wouldn't – if Debian went with systemd, wouldn't Ubuntu have to repackage everything
for systemd, even though they use Upstart?
I don't think they would have to, because Ubuntu already, like, does all their own configuration
for Upstart, because that is different to Debian at the moment.
Anyway, Debian uses it, and they use Upstart.
Yeah.
And given we're three months away from – well, less than three months away from an LTS release,
I can't see us switching between now and then.
No, of course not.
No.
So this is – we're almost certainly going to have Upstart for the long term.
For five years from now, there will still be machines – millions of machines around
the world running Upstart, as there are right now.
Yeah.
And even more so, because more people will deploy the new LTS.
And there's Chromebooks selling, like, Bazingas right now, so they're pumping those things
out like nuts, and those are all running Upstart.
That's why it's not a huge, huge deal.
I'll just leave it at this before we get to the FUD-busting aspect of it, and that
is there are elements of diversity in Linux.
We always say choice is great, and I would hate to ever see those go away.
There's also, you know, this loud mantra that Linux is fractured, it's fragmented,
it's too hard to develop for because it's all over the place, and the more we can kind
of standardize on areas that make sense, the less we – or the more, I should say, we
nullify those arguments.
So there is some rationale there, but that's all down the road.
That's all down the road, sir.
And the great thing is, like we always say, you do have choice.
Hell, you could even run System D on Debian right now if you wanted to.
It is actually possible.
OpenRCE taking kind of a beating in some of these discussions.
I'll just put that out there.
Yeah, it really is, isn't it?
Yeah.
Speaking of the FUD busting, I want to thank DigitalOcean.
DigitalOcean is simple cloud hosting dedicated to offering the most intuitive and easy way
to spin up a cloud server.
Users can create a cloud server in 55 seconds.
Now I'm not trying to brag.
I think I got that down to 47 seconds.
What's up?
And pricing plans start at only $5 per month for 512 megabytes of RAM, a 20 gigabyte SSD,
and one CPU with a terabyte of transfer.
I love that part right there.
A terabyte of transfer is nuts.
First of all.
And the other nice thing, as opposed to some of the other services that you spin up at
Amazon or Rackspace or some of these other guys, you don't have a quantified cost there.
I know every single month my DigitalOcean bill is $5 a month.
And that's if I use 500 megabytes or I use a terabyte.
I don't have that surprise bill on my credit card that burns you eventually with a lot
of these other services.
Not only that, but this is a full virtual machine that you get to operate with root
access.
You can use Ubuntu machines, Arch machines, Fedora machines, you can deploy machines with
Docker instances already set up and good to go, LAMP stacks, whatever you need to get
up and running super fast.
Not only that, but DigitalOcean has data center locations in New York, San Francisco and Amsterdam.
Their interface is simple with an intuitive control panel which power users can replicate
on a large scale with their straightforward API, which is awesome.
They have image solutions where if you want to create a machine and image it and you can
redeploy that machine, you can do a backup snapshot before you make big changes.
It's so great for testing something on the fly to have a lot of people pound on it.
If you're developing a project or an app and you want to give a lot of people access
to it, you want to just have somebody use it in a public space, sometimes you got to
get things out on the web to really test it.
DigitalOcean is perfect for that or if you want to set up a YASI search engine or in
my case a BitTorrent Sync distribution server, it's great for that too.
DigitalOcean also offers a vast collection of tutorials in their community section on
their site.
Furthermore, users who submit articles to the community can get paid $50 per published
piece.
So here's what I want you to do.
Go to DigitalOcean.com and get a $10 credit.
If you use the $5 rig like I've been using, that'll get it for you two months.
You can just try it out and see what you can do if you use the promo code LinuxUnpluggedJanuary.
LinuxUnpluggedJanuary will get you a $10 credit, boom!
Try out DigitalOcean for two months and see what I've been talking about.
I love it and you will love it too.
So go to DigitalOcean.com and a big thank you to DigitalOcean for sponsoring Linux
Unplugged.
So many cool things you can do when you have your own cloud server.
Oh, no kidding.
I mean, because you're really unleashed at that point.
You no longer have to worry about any potential downtime or anything on your local system.
You can get creative and try completely awful stuff.
With that crazy great control panel with super simple straightforward imaging and snapshotting,
it is so easy.
If you're worried you're going to do something wrong, you'd make a backup of it first.
You can redeploy if you made a mistake.
It's really great.
There are so many cool options too.
You can play with arch boxes.
That's what I've been running for months now.
It's great.
It's been crazy, but it's actually been great.
So check it out.
DigitalOcean.com.
So before we go too much further, also I want to mention really quick.
It's one of our last call outs.
We have an Instagram account, a Jupiter Broadcasting Instagram account, Instagram.com slash Jupiter
Broadcasting, where right now we are collecting photos of folks who are sporting their Jupiter
Broadcasting shirts.
A lot of good looking individuals there.
Some with copious amounts of facial hair.
Or is that real facial hair?
You know, I let things grow out a little bit and I thought I would try the whole beard
thing and yeah, that happened.
Well hey, it's a good look for you.
It's a good look for you.
Oh my God.
Yeah, right?
Yeah, I totally took a selfie and that was me without my beard braid.
There's somebody in a data center closet with a BSD logo in the background there and it
looks like a homemade disk chassis there too.
There's a lot of really cool ones.
Very Blues Brothers.
I love it.
Wherever you want to post it, or if you want to email it to Angela at JupiterBroadcasting.com
or post it on G Plus and tag plus Angela Fisher or at A-N-G-E-R-Z on Twitter, let her see
it and she'll add it to our Instagram feed.
We're going to take these and there's a service that will allow you to create framed art.
So you feed it your Instagram account and they create you art that you can hang on your
wall and we're going to decorate the new studio with pictures of folks wearing their shirts.
So if you'd like to hang on the wall in our new studio, get your picture submitted and
you can check out everyone's pictures over at Instagram.com slash Jupiter Broadcasting.
It's really cool seeing everybody's face in there.
And some of the images are just fantastic.
Super funny.
Super super funny.
Okay, so we got to bust some FUD bit by bit here.
Now I'm going to pick on this guy, but he totally deserves it.
His name is FM87.
You might have saw his comment on Reddit recently when the link to Microsoft employees reportedly
calling Windows 8 the new Vista hit Reddit.
A lot of Windows fanboys got pretty upset by this post and of course the conversation
quickly turned to bashing Linux and pushing on a bunch of old buttons.
This guy got gold five times over for this post.
He got 1,800 karma points for it and the reason why I'm picking on this one is because it's
a great summary of a lot of the different ones, a lot of different FUD points, talking
points I've seen.
First, he likes to pick on the fragmentation and with a lot of profanity he links to the
GNU Linux distribution timeline and says, what the actual F. Look at this and points
to this and points how this is a serious sign of absolutely horrible fragmentation.
Look at all of these distros that are all branched off each other.
This is a developer's nightmare he goes on to say and he says, near 95% of games will
not run under Linux and wine is garbage.
Try running anything that requires DirectX 10 or 11.
It makes extensive use of things such as hardware cursors and you'll find that they simply do
not run save for very rare occurrences.
Even if they do run, it usually runs with a multitude of graphical or audio glitches
and bugs and even interfering with gameplay.
Okay, so this is one of my favorite Linux FUD things where you take an application,
any kind, could be a game, could be a desktop office application, written for another operating
system and you run it on Linux and it doesn't run perfectly and you blame Linux.
In no other operating system would this ever happen.
You would not take an application only written for Linux or only written for the Mac and
use some sort of API translation layer on Windows 7 and when it doesn't work correctly
blame Windows.
That wouldn't happen.
Never happens.
Never happens.
The biggest issue is the fact they tried to underline it because it's adding an extra
layer that eats up resources that the game could be using.
And the developers who make stuff work on, like Cygwin for example, that makes it work
on Windows, they actually made it work correctly so you don't have to worry about that.
A lot of it on games too is if you're using DirectX 9 it needs DirectX 10 or 11.
Linux is terrible so that's why.
A better example would be like what if I were to blame Microsoft for Apple's terrible port
of Safari.
Or iTunes.
Right?
Yeah.
Here's the simplest way to look at it in the universe and completely nukes this entire
first point.
Is it designed to run natively?
No?
Then go home.
End of discussion.
That's the simplest.
That's another point which is a lot of people think that they can just switch to Linux and
it's just an operating system designed for them to run their Windows software and a lot
of people have that opinion for some reason just because there are ways to do it available.
Or there are people who think this is an operating system where they can do everything the same
as they did in Windows which is simply not true and some of your old habits will have
to change if you are going to change operating systems.
That's when I point out and say oh that's fantastic so let's take a copy of let's say
Publisher made for Windows and we're going to go ahead and drop that in the Mac and we're
just going to go ahead and get started with that.
Oh that's right it doesn't work.
Why?
Because it didn't run native.
You can nullify his argument really quickly just by putting it out.
Oh yeah.
Alright so what do you think of this one?
Oh go ahead.
If I could just butt in I was just reading through that comment you made about wine being
garbage.
I have a personal experience relating to that where a friend of mine, the guy I was talking
about before the show plays World of Warcraft, he uses Linux to play World of Warcraft on
wine because wine now has a patch that you can compile into it which makes World of Warcraft
run about 40 to 50 percent faster on Linux than what it does on Windows because they've
managed to multi-thread a whole bunch of stuff that Windows can't do because Windows CPU
scheduler is garbage and Linux is one.
And I think that wine is a lot like a VM is that it's what you see is what you get.
It may or may not work.
I mean obviously there's databases and what not to make sure and in a lot of games cases
that's actually the case.
I've actually seen other games that have run actually quicker but I think that at the end
of the day it is not a guarantee that it's going to run and people going into wine need
to understand that.
That's not even an argument.
When someone actually is able to run an application under wine it's like complaining that your
engine or diesel engine can actually run on corn oil or water.
There's a reason why I run a different operating system on my different machines.
My laptop is purely Linux but my desktop I'm going to run Windows on it because I want
access to those DirectX games or I want to use multimedia services like Netflix because
it's my main entertainment.
And I think the other policy he has here is he starts out his thread and I'm going to
get to another point here.
He says Linux is not a replacement for 99.999% of users and then he mentions this 95% of
games won't work under wine and it's like hold on.
Not all users need that.
So here you're making an argument that it won't work for 99% of people then you're assuming
99% of people need to play wine games.
He also goes on to say despite what most Linux users would lead everyone to believe most
users just want to start up and set up and go OS.
Linux is not this.
Yes, Windows needs to push updates and restart but so does Linux.
The difference is Linux will not tell you it needs to restart to update kernel files
leaving those vulnerable until you do so or simply causing a kernel panic or lock up.
The amount of setup required and tinkering needed to get things like sound and network
drivers working properly after initial setup is mind boggling.
Even on easy distros like Ubuntu, Kubuntu or Mint.
So on the first point he's factually completely and utterly and totally wrong because as soon
as you install updates, if it does require a reboot in Ubuntu, wait for it, it does tell
you.
Secondly, as far as coming out of the box, my mom who collects social security and is
like old as dirt, she installed her own Ubuntu installation so boom there it is.
It was really tough.
She put the disk in, went and made lunch, came back, clicked next a few times and she
was done.
It wasn't real hard so his entire point is just completely flawed.
It's not accurate.
My first point is 105% of statistics are made up on the spot.
It's worth noting that on Ubuntu we've actually re-implemented the Windows dialog that prevents
you from dismissing it and you have to, you know, what do you want, you know?
You must restart.
Ubuntu is way easier to setup than Windows 8 is because you don't have to make a million
Microsoft accounts per se and as soon as you log in, it'll say the upstart menu.
Right.
And you know what real users hate is when you go to shut down your computer and then
it installs the updates.
Real users actually hate that.
Yeah, it sucks, right?
And especially when you're on a laptop.
When you just flick your machine on because you need to use it for two minutes and all
of a sudden you've got to wait half an hour for it to turn on because it decided to do
some updates.
I hate that.
So Popey, somebody brought up the point of Microsoft accounts.
They're not going to require canonical accounts, are they?
You can already sign into Ubuntu One during your install.
No, it's a convenience.
Yeah, it's a total choice.
It's not mandatory by any stretch of the word.
I got a couple of points where he is right.
So synergy with other devices such as network file sharing has always been an issue with
Linux where Windows's small office can simply turn on file sharing, the procedure for doing
this with Linux is long and tedious.
Now I think this is a fair point.
New users that want to share files between two Linux desktops have no idea where to do
that and they always just end up emailing each other in attachment or use Dropbox.
Yeah, but so do Windows users.
I mean, honestly.
Actually, that's a good point.
Every office I've ever worked in, the ability to turn on file sharing has been an excellent
vector for installing viruses on every other machine on the network.
It's brilliant.
Okay.
What about locking down the OS?
He says in an enterprise environment, you can never be done that.
Check out this.
It can never be done due to how the FOSS community behaves and thinks everything should be out
in the open.
This is a huge problem, he says.
That's utter bull crap.
That's like saying I don't want to see how this thing works so that no one else can see
how it works, even though it might be just like a feather holding the safe closed.
It's like that's just silly.
You don't know if it's a feather holding the safe closed.
You don't know if it's a steel bar.
You don't know how it's built.
How can you rely on it at all?
I think he's talking like group policy and stuff like that.
But okay.
All right.
Here's a soft spot.
All right.
Now, come on.
Be honest with this one, you guys.
He says, despite what most Linux users say, the command line is still required to use
for a lot of common tasks.
This is a huge problem in all caps.
No one gives an S about memorizing 100 different commands to do simple things.
The average user needs a simple GUI with everything laid out for them and Linux simply does not
offer that.
The average person will have to use command line eventually.
But that's not true.
I've, again, going back to my mom who maintains her own computer, believe it or not, with
the exception of router issues, that's not related to Ubuntu.
But factually speaking, I would challenge most common users will use the command line
like maybe never unless they know what to do with it.
The entire argument kind of kills itself right off the bat just because it's like, okay,
so you're relying on the command line, yet you're new to Linux and you don't know what
commands you're going to be using anyway, so then you're going to go Google for it.
That doesn't really hold water.
Here's a perfect example.
Back in 2006 when I first ran Ubuntu, I had to use a terminal to get things like my wireless
working.
Oh, yeah.
Back then.
Absolutely.
Here in 2014, for me to use a terminal, that's my choice because I prefer to use some of
those tools over the GUI tools.
I would like to add to what Matt said that I actually like helping people who use Linux
over the phone or over Skype because I don't care where they move their icons or where
their start menu is.
I don't have to wait until they click on something.
Whether they themselves use terminal commands or not is irrelevant, but if I need to help
them fix something, I can just tell them, open the terminal, type this in, and it makes
helping others so much easier.
I think one of the misconceptions that Windows advocates have when they throw mud at Linux
is they set it to a different standard and they say, well, on Linux you need the command
line, and part of the reason for that is the perception that someone who uses Linux has
to be an expert.
My mom's been using Linux for three years and she's never, ever opened a command line
because she knows someone who can do it for her, and that's exactly the same on Windows.
If my mom ran Windows, she'd phone me.
I think you've nailed it.
To bring up a point about even this Linux kernel being used in different places, I just
throw at them, okay, do you use the terminal on your phone, on your Android device?
I want to point out too, I think that it is just about as difficult for a new Linux user
to use the command line.
I know this is going to sound crazy, but think about it.
I think it's true.
It's just as hard for a new Linux user to use the command line as it is an absolute
noob to go hunt down a printer driver, download it from the, select the right type, download
it from the manufacturer's website, install that printer driver.
Linux users don't have to worry about any of that kind of thing, whereas on Windows,
when you get a new device or a new machine, that is a very common task that they immediately
get stuck at.
Installing printers is surprisingly difficult, or installing new devices when you have to
go get the driver that doesn't install from Windows Update, that might as well just not
work at all for a lot of new users, and that's, of course, never criticized.
Well, if I can give a recent example of that, just recently I got a new computer, it was
just a cheap one, just to throw in the lounge, the living room, just to run Netflix, that's
all it does because flatmates watch Netflix, and I had a Wi-Fi dongle that I was going
to plug into it and just use that because I couldn't be bothered with running the cable,
and I had the Wi-Fi dongle and the CD that the drivers came on, and I installed Windows,
I plugged in the Wi-Fi dongle, popped the CD in, it didn't work, I went into the CD,
I went through, I mean, I've been using Windows for 15 years now, I know how to install a
driver, and eventually after about an hour of messing around with the driver, I popped
an Ubuntu USB stick in, plugged the Wi-Fi in, it worked instantly, downloaded Pipelight,
and she's now watching Netflix on Ubuntu, I meant to put Windows on because she knows
how to use Windows, she doesn't know how to use Linux, and I just thought it would be
easier and smoother and everything, and honestly, it took me an hour, and I gave up, and I used
Linux because it worked, so in terms of installing drivers and such and having to use the command
line like you save, I mean, I'm not even a new Windows user, but having to dig around
in the Windows driver options and reboot into insecure mode and all that stuff just to get
a driver installed in Linux, there wasn't a problem.
Well, Linux is very weird and different when it comes to Windows, and a lot of people don't
actually understand this.
The kernel is all hardware abstraction, and the user land is all user-facing tools.
When you upgrade your kernel, that upgrades all hardware support.
That's why all of our hardware product plays so instant and beautiful and modern.
Okay, Crash Bandit, could I have one question about your pipeline setup on that?
How well does hardware acceleration for HD video work?
I don't have hardware acceleration work.
My driver doesn't support it.
All right.
Yeah, that is...
I was curious about that, too.
I wanted...
That would be for our GPU.
One last thing I wanted to bring up as far as we were talking about Wi-Fi earlier, because
that's one thing that Linux users kind of skate over and always point to various tools
to kind of work around Windows drivers and whatnot.
At the end of the day, if you look at your laptop, you open up the clamshell and you
look really closely at the sticker on it, what does it say it's made for?
It says it's made for Windows.
Going into it, you understand that the chipset and the sound and all those things are potentially
designed for the Windows operating system.
That usually means you're probably working with a Broadcom chipset when it comes to wireless.
Sometimes that works.
Sometimes you're looking at going and having to connect to a hard line and get it the otherwise.
The simplest approach is either buy Linux preinstalled or accept the fact that if you
want to have a good time, get yourself an integrated Intel wireless setup.
Or if you need to go dongle wise, you can kind of crap roll it and go with a Theros
or a Rawlink.
It's true.
There are methods to avoid some of these problems too.
You know, BlueGuy in the chat room says, if you log into Windows Server 2012 and it decides
to shut down your entire company in 10 minutes for updates, trust me, you'll be using the
command line.
This is an interesting thing is Microsoft is actually very heavily pushing PowerShell
and a lot of the new ways to administer Active Directory, everything you can do through the
GUI, you can do at the command line.
And a lot of it's around scripting and PowerShell for managing updates and things like that.
So in fact, then look at Windows Server Core.
That's also sort of addressing this.
You know, a server doesn't necessarily need this GUI aspect.
So I think there's, I think it's a little funny to push the command line thing because
really a lot of times I've had to drop to CMD on Windows 7.
Oh yeah.
That's what I do.
Pigret Dull would like to share a story about his friend with GUI versus Terminal.
All right.
Okay.
I had a friend who got fed up with Windows.
He got a virus and said, I'm done.
And so I pointed him towards Linux Mint just as a new user.
And he actually prefers the Terminal over the GUI, at least with installing software
because he says it's a lot easier.
Oh, it definitely is.
If you're on Pacman or something, or even an app, it's so much faster than having to
go through the software center.
Yeah.
That sounds pretty geeky though.
But I mean, I agree.
And I also, you know, maybe it's funny because users used to use DOS, right?
So it's not like they can't be taught to use the command line.
All right.
Here's the soft spot that he goes for.
This is the one I've been talking about.
He says, distros are largely fragmented and the popular ones will come with random issues
depending on what you are using and what you are installing on it.
So always has issues with newer audio devices.
Ubuntu and Mint tend to go ape shit if the display resolution or gamma is not set properly.
And Arch almost always has had networking device problems.
Soos seems to randomly play nice with USB mice and then ignore them as if they don't
exist.
And this is just the list off the top of my head.
Easy answer to that one.
Very, very simple.
He basically installed all these distributions on one set of hardware.
He had bad experiences because everything he named off very, very clearly tells me that
he did not try this on multiple machines.
He tried it on one piece of hardware, had a bad time, said Linux sucks, you know.
Yeah, exactly.
I honestly, I think he's just straight up lying when he says some of that stuff because
I don't know how he can say Fedora always has issues with newer audio.
Fedora always has the newest kernel and so it always has the best new hardware support.
He's picking on the Pulse Audio issue from years ago.
He's picking on Pulse Audio because if you're trying to connect to a USB situation, it gets
a little funky.
I think Fedora, I mean, I haven't really tried it myself, but I've heard Fedora has gotten
a lot better lately, especially since they include the newer Radeon drivers by default
and those have improved drastically because that was my biggest issue back in like 2008.
Well, and remember, we just talked about on the, so this fragmentation thing comes up
all the time.
This is like sort of the common, you know, against all of the FUD talkers, the distro
fragmentation is always brought up all the time, but we just talked about this presentation
at the Valve Dev, Steam Dev Days and in there, Ikyulys said that, hey, look, honestly, this
fragmentation issue amongst distros is BS and this guy has been porting games from Windows
to Linux for 15 years and he says, you know, OpenGL and SDL, they essentially normalize
things out.
It really doesn't matter.
He called it, I'm looking for the word, I think he called it a myth.
His presentation is linked in this week's episode of Linux Action Show.
Myth busting.
Yeah, he called it a myth.
He said, the truth about distro fragmentation, I've shipped dozens of games over 15 years,
never did anything but generic Linux builds for any game.
It's always worked.
SDL handles most of the differences for you and the rest is largely avoidable and unimportant
anyhow.
So there you go, right?
That's from somebody who's been converting games for 15 years from Windows.
And just to point out, it's like he's going and he's saying, all these Linux distros are
just awful.
I would challenge him that if you go and take Windows 7, Windows 8, whatever you want, go
and put it on multiple different hardware configurations, you are going to have an absolutely
awful time on certain hardware configurations and there's, you know, he says, oh, this always
has this problem.
Well, Windows, I could argue Windows 8 always has a problem with going and dealing with
Wi-Fi drivers because at the start it had an awful time with most Wi-Fi drivers that
I found.
Yeah.
It's like, um, my, uh, brightness controls actually don't work on Windows 8.
Yeah.
Just say that.
The other thing is that Linux tends to improve and then improve beyond Windows.
Like I recall the days when Wi-Fi was a problem on Linux and it wasn't on Windows and like
I just described earlier, it's now gotten to the point where Linux is better with Wi-Fi
than Windows.
Printers were another thing.
Terrible with printers.
Now it's better.
Do you think maybe that's because there's no big, big releases?
Like there's big a window up there, boom, Windows 8, boom, Windows 8.1, boom, Windows
9.
And so the public consciously says, okay, this is one better.
They've now improved stuff.
Whereas Linux, there's no like splash major marketing push, new features in Linux, new
hardware support.
It's awesome.
It's just this continual improvement that people don't rock.
I think the biggest advantage Linux has is the kernel is its own team or system D is
its own team or Wayland and Xorg are their own teams.
They can work on improving their stuff.
They can still communicate with each other and get those updates, but they can still
work individually so they can still help standardize things.
It's too broad.
There's too much general knowledge being spread out among all the different professions.
For us in Linux, we have very special masters of their domain.
And they evolve at different rates, right?
And so it doesn't look like holistic improvement where individual components are improving
at different time rates.
And so it really takes a multi-year perspective to see the whole picture of improvement.
And everything gets better all as their own little team and very specific and specialized
ways.
The special release thing is covered by distros.
They release parties, you get those.
And I think like Fedora, let's take Fedora, for example.
Fedora has upon their release, whenever they did their freeze, that snapshot of the kernel,
that snapshot of, let's say, Xorg and Wayland and SystemD and all that stuff, or Gnome KDE.
Awesome.
Look how far the kernel has gone in not a very long time, like a year and a half.
We have different systems actually trying to compete to win, unlike the Windows world,
which has one team which will only have that team dedicated to it and does not have any
competition.
Right.
And if there's no general market advantage to improving the feature that's under the
hood, doesn't make a bullet point on the box, there's really not a lot of political backing
in the company to make it better.
It's like the Bowser wars.
There's competition, so they all get better collectively, thus all our subsystems get
better collectively.
Yeah, everybody loves to give the Mac a handjob and talk about how great it is, but their
file system is literally a disgrace.
HFS Plus is the most disgraceful file system that is still shipping on a major operating
system, but Apple can't make a sexy bullet point on a keynote presentation about improving
the file system, so they continue to add new features like bounce scrolling and full screen
operations and individual spaces or whatever, but they don't fix their absolute train wreck
of a file system.
But they don't have to because they know marketing.
That's where Linux fails.
Right, but I'm glad...
Linux is adorable and grassroots, kind of.
They did market ZFS as their time capsule though once, because time capsule is ZFS,
doesn't it?
No, it's all HFS Plus.
I believe even the iOS file system is HFS Plus.
I think it is, yeah.
And I agree that it's not a sexy feature that they can sell, and that's why I'm thankful
that the Linux system works.
We continue to get things like file systems worked on, even when it's not a sexy feature.
Thank goodness.
Yeah, things like people like Linus can focus on the core, and people like Aaron Saigo and
Mark Shuttleworth can focus on the pretty stuff.
Also, look how far the kernel itself has gone.
Even just like a year and a half ago, like when 3.0 was out and everything, of how bad
power management was and overheating, and everybody was complaining about that.
Two, three, four months, they fixed that, and now it's focused on graphics.
Look how far Intel graphics has come, and now they're working on Radeon graphics.
It's just getting better so fast, it's actually kind of blowing my mind a little bit.
I know, yeah.
It is really awesome.
This post on Reddit, I don't know if you remember, Chris, remember there was a blog
post a couple of years back where the guy, he reviewed Linux as a server operating system,
and remember he said it was terrible because he tried to install apps on Fedora or something
like that.
That's what this post reminds me of.
All this stuff that this guy's mentioning, it's completely wrong.
It's sort of like he's Googled a bunch of stuff, and then read complaints that people
have made, and then just made a post from it.
None of it actually seems like he's experienced it.
He kind of talks a little bit in there like, well, I have to keep up to date, and I follow
all of this for my job, and I don't know, he doesn't say what his job is, and that's
kind of a vague explanation, but yeah.
Intel's admin.
Yeah, or yeah, like I run it in some VMs, I mean it sounds like a really loose association
with, and he obviously has followed some of the issues, and the only thing is, is like
all of these things, this guy just did a really good job, and I got this whole thing, we only
read like 40% of it, I got the whole thing linked in the show notes, this guy just did
a really good job, but basically taking all the biggest ones you hear, maybe one talking
point is put into a response, and this guy just kind of put them all together, and I
think as Steam OS starts to sort of lure people away from Windows a little bit, you're going
to have, I mean I think this is already starting to happen, you have people looking into it,
you got people that are deploying, we just talked about people that are deploying, it
was Ubuntu at that high school because they didn't want to go to XP, it's going to happen
more and more.
And so I think this is just something maybe we'll just keep an eye on, because I grabbed
this article here that I think I found in this, somebody linked in our subreddit, where
it said you can blame Linux FUD for Microsoft's dominance in schools, and in fact there was
this parent who went in to talk to the staff and said look, your class requirements say
that I have to have Microsoft Office at home for my student to go and enroll in this class,
and he said let me tell you about LibreOffice, and she starts writing stuff down, and then
when she realized he was talking about replacing Microsoft, she stops him and she says, you
know it might even be illegal for us to remove Microsoft Office or Windows from previously
purchased computers due to the vendor agreement that the school district has signed with Microsoft.
And I know I've told this story a lot, but it bears repeating, and I'll go into some
detail, I don't think I've ever gotten into as much detail as I will today, is I worked
for the school district of Arlington when I was a high school student, and I remember
being in their IT department, and we had this, we were deploying wireless links between the
schools because we were paying tons and tons of money to have T1 direct connections between
each school, and Arlington's actually one of the larger school districts in our state,
and so this was costing the school district tens and tens of thousands of dollars, and
back then T1s were just outrageously expensive.
They were the fastest connection you could get, and you paid for it.
And so they decided, well, let's do this one-time investment, they even took out a big loan
to pay for it, let's get these wireless point-to-point links, there's this new protocol called 802.11b,
and it'll do two megabits, and we'll link all of these schools up over this two megabit
link.
Now you got a bunch of school district employees who are, in this case, his full-time job was
actually a teacher, he wasn't necessarily a network engineer, and this is TCPIP's even
still kind of new-ish, you know, NetBooey, IPX, and AppleTalk were still the dominant
protocols on the network, so IP segmentation wasn't really something people knew really
to think about, and so they accidentally deployed across the entire school district one flat
255.255.00 LAN, just this one massive LAN, and it was all interlinked by these two megabit
wireless connections that were spotty to begin with.
And of course, the router, so if you had a printer that was on a different IP network,
the router was back at the school district head office, and so to send a print job, every
time a student printed, so you can imagine at the end of class when the three computer
labs were all printing out their results, all of this printer traffic would go down
over the wireless network to the router and then send it back up the wireless network
to the printer that was sitting right next to us all, and it absolutely just destroyed
the entire network and it made the computer systems unusable.
So we knew immediately that we needed to change this up and put routers in front of each wireless
access point and create a local network where everything could talk on its own local LAN,
wouldn't have to go down to the school district office.
I was pretty proud of myself for figuring this out as a high school student.
We got it all styled in and we said, okay, well, NT is this thing, NT5, wasn't called
Windows 2000, NT5 is this thing that's in active development, and they have this proxy
server on there.
No, no, we're not going to use beta software.
Okay, fair enough, fair enough, well there is a way to do it on NT4, it's called Microsoft
Proxy Server 2.0 or something like that, and it will do some routing and it will do some
caching because we also wanted web caching, and then eventually be able to, it's a school,
we wanted to be able to apply filters.
So we put this NT4 box into production on a pretty decent machine and it immediately
could not handle the traffic.
It was absolutely just not even an option.
And again, we didn't necessarily want to go with beta software, so somebody in one of
the computer classes says, well, what about this Red Hat?
What about this?
And we looked at it, oh, that's interesting, but you know, we didn't have the CDs.
Well, okay, well we could download this Debian and write it to these floppy disks, and it's
like this whole series of floppy disks, and so we download this Debian thing and we install
it on the same computer that we had NT4 on previously.
We put it in there, we find this thing called Squid, we install Squid, right, this is all
just brand new to us.
We set up a basic routing table because thankfully one of the teachers there had experience on
a BSD in the past and knew kind of how to do some of this stuff.
And we put that box in and it was a night and day situation.
Like the network came back, performance was back, printing happened instantly.
It was amazing.
And we all just kind of sat back and went, wow, and that's free?
We just did that for free?
Well then pretty soon, because we were in a pilot program with Microsoft, one of the
parents who was working at Microsoft found out what we had done because the kid went
home from the computer class and told his dad, well, dad worked at Microsoft and dad
wasn't very happy about that because the school district had an agreement with Microsoft.
The deal was the school district got free Microsoft training books, Microsoft Office
and Windows licenses, and the students even got vouchers to turn in to get Microsoft certified
engineer certificates.
So it was like this really sweetheart deal and they were piloting this program at the
school district because the parent was the one leading it and he used to be a former
student at the school.
And so when they came in, they said, here's the deal.
If you don't pull that Linux box out and put a Windows NT5 box in its place, we'll pull
our entire program.
And this is, I mean, to say it's a value of maybe $200,000 might be a low ball because
it's all of the licenses for all of the Windows boxes in the school district, thousands and
thousands of computers, all of the Office licenses, the voucher program for students
to get certified as a Microsoft certified engineer for free, we're going to pull all
of that and you will owe us for these machines.
You will have to cut us a check next year for all of these licenses if you keep this
one Linux box as your router.
This is one Linux box at one school that we had up for a couple of days.
Like we put it in on a Friday and this is the conversation we're having on a Tuesday.
It was like that fast that it happened.
And I was so impressed to see my teacher and the technology director of the school district,
you know, they met with the guy, they thought about it for about a week, which I totally
understand and at the end of that week they said, we're not going to do it.
We're not going to pull this Linux box out.
You can take your funding.
And I was, and you know what, the school district like had a major problem.
They had some levy funds that they were using to replace equipment.
They had to take those levy funds and essentially reappropriate them somehow to buy licenses.
I mean, it was this massive thing.
And eventually the computer programs died off because of it because they just could
not fund them anymore.
And now they have like one computer program when they used to have three full time computer
labs with three like all day long computer classes going.
And so I watched sort of how this first, it was the first approach, the first wave was
like, well look, Linux isn't going to run for a long time and you know, we're really
working on some great stuff.
You're going to want to have some filtering at first.
It was their first pass when they first found out about it was an email that was sort of,
well here's all the reasons why Linux isn't going to work for you guys.
You don't want to use this.
And when we rejected those, they immediately escalated to, we're going to pull everything.
That's unbelievable.
Not surprising.
I've, I've heard similar stories, not, not to that severity, but I've heard that that's
back in those days, especially they could get away with stuff like that.
They knew that in order to maintain their top of the mountain that they, and then indoctrination
early was important.
This might've been even before.
I don't get how that does not violate antitrust.
Well, I was just going to say this might've been even before the whole antitrust thing
happened.
It probably was.
Because Internet Explorer was brand, brand new.
It was like version four.
It was like, Internet Explorer was not bundled with the operating system at this time.
That antitrust laws are adorable if anyone thinks they're really adhered to.
I mean, it's all about who, which lobbyists, you know, worked with whomever.
In the US it's, it's, it's crap.
This Linux FUD goes all the way back to then because that was their first pass.
That was pass number one was we'll, we'll throw some bull crap at you about this, this
like they, they, they even, they even took issue with the proxy software we use.
It's called Squid.
Are you kidding me?
Right?
Like, like everything.
They tried everything.
Well, in fairness, Squid is the universal symbol for evil, evil people, you know, the,
the, you know, like supervillains, they always have a Squid thing going on.
That's true.
Good point.
Yeah, that is true.
And maybe they are.
Maybe it's, maybe the Squid project is just taking the, the long burn approach to their
evil plans.
Anyways, I got a link in the show notes that talks about blaming, blame the Linux FUD for
Microsoft dominance in schools.
If you guys want to read more about that now, we'd like to have you join us live.
We got this virtual lug here in our mumble room.
You can hang out.
We have these shows on Tuesdays at 2pm Pacific.
You can get that in your local time over at Jupiter broadcasting.com slash calendar.
We also want your feedback.
You can email us, go over to Jupiter broadcasting.com and pop the contact link and choose Linux
unplugged from that dropdown.
Do that.
Sometimes you set you guys, sometimes you choose general comments.
I don't read those too often, but I read the Linux unplugged ones every Tuesday.
So there you go.
All right, Matt.
Well, we got a how to coming up on this week's episode of the Linux action show.
Nice.
We got some security stuff in the works too, we'll be talking about very soon.
And then we also have that little guy distro review we'll be doing.
So we got a lot of stuff coming up.
Good stuff.
All right, everybody.
Well, thank you so much for tuning this week's episode of Linux unplugged.
Go over to iTunes and rate and comment if you haven't yet.
That helps discovery.
And we hope to see you right back here next week.
