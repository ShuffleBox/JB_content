Everybody loves an Amiga story and that's why we are first to bring you the news that the Amiga fast file system is
Returning to the Linux kernel who needs this. I think just about no one. Hey some soos developer, you know it
I mean, I would bet you search the search that article
I bet you three bucks that it's a soos. It's a soos thing. It's just sounds like them. It just sounds like them
Oh, yep. Okay
And kernel maintainer David sterba. Yeah. Oh, yeah a soos developer
I guess he was just reviewing it and committing. I don't know. I can't win him someone else authored
Yeah, but what are the chances somebody from soos is attached somehow? What are the chances?
Hello friends and welcome to 371 of your weekly Linux talk show. My name is Chris. My name is Wes. Hello, mr
Payne, did you know that this episode is brought to you by a cloud guru? Are you looking to get a high-paying career?
Maybe move into the cloud and make some good change
Well, there's no better place to start than getting a certification
ACG has helped more than 2 million people scale up on the cloud AWS Azure and Google Cloud Platform
Head over to cloud guru comm and get started now. We have a great show today. It's a special smoky edition
we're recording it a little early because I'm hitting the road and
And we're getting slow-cooked while we do it. It's it's a cold smoke. It's it is it is a cold smoke
It's a wood smoke that we're surrounded in
So if you hear Wes coughing during the show, it's definitely the wood smoke before we go any further got to say hello to drew
Hello, sir. Hello. Hi drew. We're in your Sunday pajamas. I see okay
We're I'm on Tuesday, too
You know, it's always nice to have your Sunday pajamas on Tuesday
And of course everybody in the mumble rooms in their pajamas time appropriate greetings mumble room. Hello
Hello. Hello. Hello. Hello a special hello to mr. Stewart language. Thanks for joining us Stewart. Hi, thank you
Hi, hi, we're gonna be talking about cabin in a little bit
I mean, we got a few things to get to today. We got more than just that Stewart geez
But we're gonna get to that a little bit. So do feel free to jump in on any topics as we go
Hello Popey. It's good to see you, too. I know hi, you'll be joining us for the cabin chat
But you know what Popey I also give you very special permission to jump in on any topic just any topic. Oh, you're too kind
All right. Well, let's start in the news not the Amiga file system update
But the future of the Ubuntu community now, I'm gonna warn you I got up real early today
so I might have a slightly spicier than usual take on this one and
Any guidance from our friends in the mumble room would be appreciated
But I came across this thread on the discourse dot Ubuntu comm site may have heard of it
It's a new thing brand new should go check it out. No, not really and I'm not gonna name names at first here
But eventually this conversation
Led to Marshall with coming out of the woodwork and responding to this and it starts kind of directly at him
He says this is the original poster
I've seen discussions about the abrupt loss of leadership in the community and this is a sad event
I'm not entirely however surprised if you've been around the project for some years
You'll notice that there's been a progression towards de-investment in the community for many many years
But the thing that's most saddening though is that mark who has benefited from countless thousands of volunteer hours
Which are certainly worth millions of dollars
Didn't have the respect for the community to even articulate why he abandoned the community and has been silent on the collapse of governance
Which he played a part in since he after all is the project leader now
it's hard to read those two first paragraphs and
Not feel like there's a tone in there and the tone that I I impart on that is
One of all dad does is work all day and night two different jobs to put food on the table and a roof over our house
Daddy's too busy keeping the business running to pay attention to us and we're sick of it
That's what I hear when I read that and I appreciate that there is this is a complex issue
but
the structure of this is
It feels so privileged. It reads to me as so extremely privileged
I grant that there is some legitimacy to the complaint
There is value derived from the community and there is a certain level of investment
The canonical should be making in the community to perpetuate that I grant that argument
But I feel like this tact is it's almost designed. It seems like to elicit a response from shuttleworth
It's quite provocative and yeah seems to warrant a response
So mark chimes in eventually pretty far down in the thread because you know something like this people can they all got to jump in
With their two cents mark responds in part. I'm not absent. In fact for the past few years
I've set aside all other interests and concerns to help Ubuntu get into a position of long-term sustainability
This has been an amazingly difficult job
But I set my mind to it precisely because I care that the Ubuntu community has a backbone, which is durable
I'm rather frustrated at my own team because I have a I have long allocated a headcount for community lead at canonical a
Post which has not been filled. It's necessary to have a dedicated lead for this
Not so much because the community needs leadership, but because it's self-motivated leaders need support
I think for the role more as community secretary than community advocate helping to get complicated pieces lined up to empower
others to be great
The project has continued to grow in complexity and capability
There are more people than ever working on it more people than ever making demands on it
So getting things done requires patience and coordination
Helping motivated community leaders to be effective in driving their work forward is important to me
You could really read a lot into this and I'm curious to get everyone's take on this
One of the last paragraphs he writes Mark Shuttleworth writes. I watched how CC members stopped coming to meetings stopped organizing their meetings
Stopped driving activity. This is obviously not a universal picture
There have been harder working and less hard-working CCC bodies and there have been more effective and less effective CC members
I understand it's hard to put a lot of effort into something that doesn't seem to correspond directly to a specific project or outcome
And he kind of talks about how it had other issues with decision-making
I'm just gonna take a stab at the dark and I'm gonna say, you know
Mark's got a limited amount of time and he looked at the effectiveness
He was deriving from this community council and decided his time was better spent investing in making canonical sustainable and durable
yeah, it's also it's yeah just hard right the limited amount of time a little amount of oversight that one can have over all these
things and
If no one else is doing those if it's not actually being delegated or being handled
Yeah, at some point the stuff slips through the cracks probably from your vantage point
Do you feel like the role that community plays in the creation of Ubuntu is shifted over time?
Oh, definitely things have changed over time every open source project does
I think I recognize a number of things in this conversation
One thing I do have to point out is I'm glad that Ubuntu has the kind of community that will
Pick up on these things and will tell us how you're doing something wrong and will come to a place
They know we're gonna see like the given to discourse and will lay out their stall for how they think things should be improved and
Whether you think this was done, you know to trigger mark or whether you think Ben who wrote the first post
you know had good thoughts in mind when he wrote it or not the outcome is good because
It did ping mark obviously and it it made him think about this and
Articulate his thoughts and I've been on the CC about ten years ago before I started working for canonical
I was on the Community Council and I certainly recognized some of his comments about
the CC goes between periods of not having anything to do because they're quite a reactive group and
Having really difficult problems to deal with and that's that's very hard going from nought to a hundred
Like very quickly and having to deal with problems
I think one of the big problems with some of the community councils at what I mean by some of is
You know people's term runs out and they may get voted in again or they may not and so the staff that people change over
Time I think one of the mistakes is people
Feel that they have to wait for mark to say yes to something and that's not the case
When you're voted into the CC
It's recognition that you already have some level of recognition in the community. You already have autonomy
you already have a position of leadership and so you should feel empowered to go and
fix things or go and have conversations with people and I think people in
in previous CC's have felt like they had to run everything past mark and that's just not the case and
You know
Sometimes he didn't turn up to meetings because he was in the business school or on a plane or you know
There's reasons why everyone can't be at every single meeting
But it did tail off about a year ago or so when people kind of gave up and I I'm glad that this thread
has been triggered because it's
reinvigorated mark and reinvigorated the people around mark who
Hopefully will solve this problem and reboot the CC fair enough
In fact, there has been a development before we get there
But I wanted to ask Stewart and I'm trying to think of a way
I was trying to think of a way to phrase this doesn't say Stewart you're old you've observed a lot
But I mean sure you have been around for a while in the community and you you must have observed
There's a different value. It seems like companies
Many companies but canonical in particular are driving from the community today than they did say ten years ago. I
Would agree. I mean, I don't really have a position on this
I've been I have watched their conversation with interest obviously, but I think
One of the things that canonical has done as all
Long-term open-source projects do is think more about sustainability
This is why for example things like the unity desktop went away, even though it was marvelous
because
Canonical need to think about how can we ensure not only the urban to exist today?
But a bunch who continues to exist and carries on doing the best it can for the most people and
so I think
There was something of a sort of a community free-for-all in the early days
And now as it's got a bit more professional and some people have kind of gone. Oh, well, it doesn't seem as much fun
anymore
which is
Undeniably possibly the case
but on the other hand it means that I still have a desktop that I use every day and have done for
when did when the first came out 2004 so 16 years and
And I'd rather that was the case than the whole thing
fizzled like so many other projects have done when someone starts saying but
I've got bored with working on this and I'm not being paid for it
Yeah
I could definitely see a similarity when we started taking a boon to more seriously as a product and started using in production more
This attitude shifted a bit and it became less of this fun thing that we're playing around with as a community and more of a serious
Thing that we depend on. That's the thing. I mean, um as as you mentioned, I am I am older than some of the people in
the community and have said of the whole
But I think the other thing is that
fiddling about with your desktop is to some extent at least a a
Young person's thing to do in my experience. It certainly was when I was younger. I used to enjoy things like
changing between different distributions and so on but now my views have
Radically changed on that to the point where my desktop is the thing which launches applications and applications what I care about
mm-hmm, so I can get things done whether they're fun things or work things or whatever and so the
Importance of talking about the desktop itself has in my experience and in my life fallen by the wayside a bit
Right. I don't know whether this is because I've got old or I've got professional and boring or the Linux
Community has got professional and boring or all the above
Possibly a little from column a little from column B little from column C. Yeah
Right. I mean I think too is you know one who's taken over the cloud, right?
What you're using is more of the package infrastructure things like that and the desktop isn't really relevant, right?
Yeah, I mean it's it's absolutely something that matters to us but to most the market it's not it's not necessary for what you're deploying
on the server, I think there's a difference between
caring about the desktop and
people wanting to get involved in maintaining it because
Right. It was fun. As Stuart said back at the start
It was fun
Like we're breaking new ground and it's innovative and we're doing new things and we're making the desktop usable by normal human beings
As the old strapline used to go
But it turns out those things have to be maintained and if you commit to a five-year support term for an LTS
Or a ten-year support term for an LTS
Someone's got to keep cranking out those packages and that gets really boring really fast. And so yeah people move on to the next big shiny and
Canonical have still continued to finance people to support all those LTS releases for all those years and
Some of the community people have just moved on because it's just not fun and interesting anymore
I certainly would agree when you say people move on to the next big shiny. I think people who are
involved in maintaining the desktop for fun in their spare time are
entitled to go to where the fun is and
The fun honestly is not as you say in maintaining a thing that already exists making sure it stays stable and so on
so I think
some of the
motivated
community developers
It's not as much fun to work on
Ubuntu the desktop as it is to work on some other desktop who are doing radical changes of things because they're not supporting
Millions upon millions of users who don't want their desktop to change every 30 seconds
But if you do if you do want to hack on this stuff, then yeah go somewhere where they're doing something radical innovative
That's a really good idea. Right? Which is an Ubuntu is not valid. I mean when it came out it was this
Incredibly big change the idea of having a sense of design and
being design led in the Linux world was itself a radical
reinterpretation of the text and
It brought calm to chaos in a way too because there was app selection that took place instead of having three mail apps
Yeah, exactly. So having opinions being prepared to state them and pack them up and pack them up with money made a really big difference
but now Ubuntu is not the
It's not the new play thing. It's the old statesman of the Linux world. It's what you know
95% of people actually out there using their looks are using those people are not interested in hacking on the desktop
It's just the thing that launches their applications
Yeah, or maybe even more starkly put the thing that launches their web browser mini
Make you think maybe the the role falls upon us to reach out to a newer generation
Yeah, we shouldn't forget the talking. I see all the arguments and I'm also one of the older generation
So I normally stay with stock insulation. Maybe I change my
Desktop manager, but we need in younger generation and these are the hackers like when we mentioned two weeks ago
we need to find new channels and new ways to communicate with them give them access to the hacking and
Yeah, so they have really fun to do the thing and then discover Linux like that
Yeah
I could see just trying to be there to support their journey and learning and being open to whatever that path might take them because
It's probably gonna be a lot different than our path was when we were younger because the industry has changed
Significantly as we're recording this though. The story has updated a bit
Mark Shuttleworth announced that now in cooperation with an Ubuntu member and and former community council member
I'm gonna say Walter lap chinsky. What do you think think you did pretty good? Really?
We call him Wexel because it's easy to just call him Wexel
Well Wexel I will be working to restore the community council and mark world having considered over the weekend
I think I'll take Wexel's offer to help run the process. Let's go ahead and call for nominations to the community council. Well
How about that?
He also thanks Wexel for the conversation and getting it going and then he ends with an apology for having dropped the ball
It seems like he really did reflect on this over the weekend. And that seems like a positive development, too
right, I mean I can see big default too if there's been you know mixed levels of availability and
Seemingly excitement around this process. He you know, he does note that it's nice
Maybe it is a good idea to have this in place, even if it isn't particularly active
So maybe there just needs to be some discussion and clarification here around what the roles should be and you know
What it really means to be a part of it? Well speaking of other positive developments
There's been a lot of positive developed developments for the workflow development of butter FS
Now Wes, I'm gonna go and say Yosef
Akik
Well, this is one of the butter fest developers who I follow and you know
We'll have to we'll have to check after the show because his his talk over the summer we'd mentioned before about butter fest development
And use in Facebook that's out now, which will have added to the show notes, right? Thank you
Yes, which I did catch a little bit of it's it's you know, it's a file system talk
So prepare yourself for a lot of excitement, but put some fascinating insights into how Facebook uses it
And it looks like after some discussions over the weekend and working out how they want their future development workflow to work
They're on track to improve things quite a bit. Yeah, how about this?
All of our patch submissions will be tracked as individual github issues
So we know what needs to be reviewed and what is pending
We're also tracking XFS test failures in our FS test tree and we'll start staging fixes there
So we don't step on each other's toes when adding new tests
I like this line here getting a group of developers who have different companies and different bosses on the same page is
Tricky, but we think this is a step in the right direction and right
I mean, yeah, there's a lot of interest in different folks helping maintain butter a fast in Syria can't be easy
Yeah, and it's good that they recognize as a team. They got some workflow stuff to work out
I mean, it's not like everything solved
Yeah, sometimes you understand, you know do a little work on the ways that you work and that way you can work
That is so wise West somebody should put that on a t-shirt. You know, that could that could be what drives industry for years to come
Oh, I think it will and that and the next Linux kernel which
Mr. Larable over at for Onyx seems to have been hot on the truck on a performance regression and even gotten a bit of a
Conversation back and forth with mr. Linus. Yeah on what the heck's going on
I mean, you know, he loves benchmarks, you know, we love a good kernel story
So anytime we have an excuse to cram one and we do and like, you know, you got to talk about the kernel
Of course, you know
It deserves its respect and last week for Onyx reported that there was a performance regression in Linux 5.9
When you go from like say 5.0 and you compare it to 5.9 pretty noticeable performance drop in things like Apache and nginx workloads
So it look it would directly impact quite a bit of cloud servers if deployed not necessarily great
and so it seems that he he sent a note to Linus and Linus took a look at it and
Kind of gives an explanation on what's going on and I think that's fascinating if you're interested in what the actual
real world performance results were
They actually are pretty noticeable
Yeah, you could you know
I thought it was interesting that there'd been some other sort of tests on like a hack bench other systems that the kernel uses
But it was actually, you know
Michael's benchmarks because they had tests that Linus at least felt were a little more real world that stood out and you know gave some
More attention to this issue. That's kind of a nice feather in his cap. Yeah
So here's how Torvalds originally summed up the issue with all of the interesting technical details in an email to Michael
Following the bisect report. Mr. Payne. Take it away. Let's say that a page is locked by some user doesn't matter
Why it might be IO it might just be for any number of other reasons that I need to get and make sure that this
Page stays consistent. I need a lock and while that's happening a number of other processes come in and want to lock it
What we do and what we did before that commit to is to queue them up in the hashed page
Wait queue and a flag is set on the page structure to say this page has waiters
We queue things up in order so that the oldest waiter is first that is meant to be about fairness
But you'll see later why that didn't actually used to matter look at Linus the storyteller here. I love it
Anyway, this thing didn't change fundamentally by that commit that you bisected the performance regression to yes
The commit changes that queuing but not in any fundamental significant way
The change is incidental to the big change, which is the what happens at wake up, right?
So that's what the big difference here is
It's that wake up behavior both before and after the basic trigger is the same
The process that holds the page lock does an unlock page call and as it unlocks
It also checks that do we have waiters bit on the page structure and goes off to process that wait list
And here's the big difference. We used to just wake things up on that wait list and that was it
We had various anti herd behavior. So we'd only wake up one exclusive waiter process
ie somebody who was doing a lock page
So we wouldn't have all these waiters suddenly wake up. But basically we just did oh, we've now released the page
So wake up the waiters that that's the simple end of it
Okay, that sounds obvious, but actually it has a rather non-obvious effect in particular. The page is now unlocked
And the waiters have been woken, but they aren't necessarily running
They have become run a bowl, but particularly under load
It's probably some time before those waiting processes actually get any CPU time in the meantime
All the processes that weren't on the wait queue and are runnable are free to come in and take that page lock again
Before the person that's supposed to take it has actually gotten CPU time
I see so I barely follow but it seems like you have this situation where it's waiting to wake up
It's waiting to wake up and then there's this wait queue. I
Don't really follow the technical details of this but it seems like they're on the case
Well, so it's it's kind of like this, you know, you're waiting for something, you know
Maybe it's next it's your turn to head up to the buffet buffet line. Okay, remember though. All right now I'm following
Yeah, all right, so you're in your queue
you're ready to go to the buffet line, but it takes some time to actually get from where you're waiting all the way over to
Where the buffet is and even though you've now got the magic spoon that you're gonna use to ladle all your food from the buffet
Okay, someone else can just come sneak in and since no one's currently using the buffet in between
Well, they'll just take your place
No
And then there's some like more, you know
There's more nuances here where then actually the person would notice that the page had been locked before they got there
You know the one who was supposed to get it
But then the way the kernel scheduled is they'd be they'd end up back at the end of the wait queue again
So they were at the front
Oh, no
Get the resource had to go all the way to the back and because of this that you'd notice these big regressions where suddenly you have
These horrible latency spikes. So to round out this analogy, is it basically brought not to the front of the line?
Exactly, that's how you lose out on the pudding Wes is you get sent to the back of the line
That's super unfair. So Linus's change was aimed at trying to make this more fair
But unfortunately that can have bad places for throughput because while you might have a you know
Less maximum latency probably your minimum latency is going to be worse because it's it's more fair and at the same time
They've you know, this has been unfair for a long time
And so that just means sort of accidentally a lot of the other parts of the kernel have been built around that and so changing it
Touches a lot of other subsystems
It's just peculiar why you see problems with Apache, but you also see a bunch of issues possibly in file system benchmarks
Yeah, Linus is he's trying some stuff. He's kind of ideating playing around with some solutions looking for feedback
So probably this will be something we see fixed sooner rather than later. Okay. Well, I'm glad they're on it
That's my summary of it. Go get them
So we don't have to
Linode.com
Unplugged this is an exclusive offer for Linux unplugged listener sign up going to Linode.com slash unplugged and get a $100
60-day credit towards new accounts Linode is simple cloud infrastructure that you can deploy in seconds
With shared hosting starting around $5 a month
But then they have a bunch of different options going from there with dedicated CPU plans GPU compute plans
You can use orchestration management if that's your preferred way to deploy systems
And of course, they have a one-click app market. I've been a little no customer for a couple of years and over that couple of
Years, I've witnessed this company
Just grow and evolve their product offering in a really clever way Linode.com slash unplugged
Of course, they have native SSD storage 40 gigabit connections coming into the machines
Industry leading fast processors and a new revamped cloud manager that's built on open source
How about that West?
I'm want me some and of course you get root access to your box
But the thing that I really like and I've never really taken advantage of this before is their command-line application
I just started using it about I don't know
It's been I don't know
It's less than a year and I find this to be a really easy way to send up files
To their object storage and then link them publicly to shut down machines
I get alerting and reporting on what's happening with my system
So like I saw over the weekend Alex was working on a self-hosted development machine that we're setting up
We use Linode to host our matrix server right now, and it just works fantastic
Sure does we also set up multiple accounts so the guys can log in and work on stuff as they need West paying can go
In there and set up a machine if he needs to just like Alex can
Super simple to set all of that up and with a hundred dollar credit
Just go over there set up a new account. You get $100 for 60 days just by going to Linode.com slash unplugged
There's a lot a lot you can learn a lot you can mess around with
I know that's what a lot of our listeners are doing with it right now
It's a great opportunity to support the show and get great cloud hosting for yourself from someone who's been around
For a long time. That's the other thing that's really great is they like a deep community member just about every event
I've ever gone to they've been a part of a booth there. They've been giving away swag even our humble Linux fest Northwest absolutely
So it's really awesome now that they're a sponsor Linode.com slash unplugged and a big
Thank you to Linode for sponsoring the unplugged program Linode.com slash unplugged Chris. I signed up for Linode just last week
Oh, yeah. Yeah, and what are you using it for? I am upskilling
Getting up to speed on some technologies in the sysadmin space that I haven't really played with
Since I've been out of that world. That's such a great use right? Oh, it's awesome
I think I hear that from a lot of our listeners that they use it for training. It's a great opportunity. Mm-hmm. Linode.com slash unplugged
Now Stuart and poppy are specifically joining us today because
They had a proposal. Maybe I'll let poppy tell the story that didn't quite get the traction
They were hoping for originally, but it's now kind of been opened up to the community to potentially run with last year the genome project
Announced that they were in collaboration with
Endless, they were doing a community engagement challenge and they pre announced it last year
To launch this year and the goal of it was really to come up with ways that could
Encourage more people to get involved in open-source software and
part of the motivation for that was endless stumped up some cash as prizes for
people who were successful in getting their projects through this
community engagement challenge process and
ever
interested in the idea of
Baking money. I I looked at this and thought huh? That might be interesting. I'm sure
Me and some pals can come up with some ideas that could get through this and maybe we'll make a little bit of beer money
on the side
so I mentioned it to my good friend Stuart and
We brainstormed for a bit about things that might be interesting and we came up with
This idea for something called cabin, which I'll let Stuart describe
But we we went through a process of creating
a proposal and writing
plan documents and
Submitting them almost at the last minute when the deadline for the first phase of this project
Came about but as you said, yes, we weren't successful in being selected for the first phase
Um, and those projects go through a filtering process for the further phases which will
Follow through the rest of this year and into next year
um, but we were keen for this to not be lost because we put some effort into creating this proposal and so we thought we'd
Publish it and so Stuart published it because he did the lion's share of the work on cabin and came up with the original idea
So he published it on his blog. I wonder if is it correct in my assumption that that's the case
So he published it on his blog. I wonder if is it correct in my assumption that this feels like it's informed by
Maybe a longer held philosophy that you've been developing for a while that we need more apps less distros
I know i've heard both you and poppy talk about that as it's
There needs to be maybe a better way to get apps onto linux. Is that what informed this or what was the nature?
As you say i've been developing a philosophy that we need more apps and fewer distros for years
Um, and a whole bunch of other things about how
Application development should work and the kinds of developers and the kinds of applications i'd like to see on our desktops
and
Cabin is an attempt to answer some but not all of those questions
so
To give you an example
Think about your phone
I would say
about half of the applications I use on my phone
are
single shot apps, they're not um
big complicated apps which do a whole bunch of things they are
small single function things to
grab an image and crop it or to
uh grab an image and put a um
A speech bubble with some text on top of it little helpful tools. Yes, exactly
now
Ignoring the command line
On the linux desktop to a first approximation. We have none of them
We do not have tools like that
If you want to take an image and put a speech bubble with some words on top of it. You have to open up
You know again, right?
which is
a
Terrible thing or maybe you want to open up kryta or something like that instead whatever
but the point is these are full-fat fully complicated applications and
Building such things is hard using such things is hard
and frankly
It's one of the reasons why we've got 10 000 applications and android's got 10 million
and so
From my perspective the issue is not that people don't have ideas for these applications
it's that it's really difficult to build them because
our application development story
Is fragmented it's complicated. Uh, it's full of
Holy wars going back 20 years that nobody even remembers the original reasons for really? Yeah, what I wanted was
a way for
Someone who's not a particularly experienced programmer, but this is someone who's on who's using an elix desktop
Right. So they're already using those desktop. They have an idea for a small application that
They would like um those of you out there who are Linux desktop users and our programmers. So especially if you're web
Developers and our and programmers
You will probably have the experience of people, you know
Asking you to build tiny little applications to do things
so
I've built applications for people to calculate the angle that they should tilt the handlebars at on their on their new road bike
in order to um
Best fit their frame and i've built
Uh tiny little applications to count down to the next star wars film that they could put on their home screen
Excellent stuff like this that I think real people have this idea for applications all the time
And they should be able to follow the whole app process through from I have had an idea
To other people are now happily using that application. Well a couple of observations
It seems that I mean the reason we call them even apps now is this idea that they're smaller applications
It's not a full application. It's an app and they do smaller functions
but that's what you expect on a mobile device and I think
Those app stores have totally proven out that that model of application development
Not only works can but can actually be quite profitable for some developers
But when I also kind of look at the broader picture of what you're sort of proposing here
I kind of look over at the elementary os guys and I go, you know
Who does have apps kind of like that?
Is elementary os because they have created a consistent and clear story for the developers on how to create applications?
For their platform what they should look like and then how to distribute them to end users
Potentially with the possibility of making a profit and they've gotten some traction
It's not blowing the doors off and changing open source as we know it
But it could be in a way a sort of a test lab proving out what you're proposing here. Yes, absolutely
and the elementary people have exactly the right idea in my opinion and they're doing the right thing because
Most importantly what they're attempting to do is create a culture which values this kind of thing
And this is why in my opinion they've taken a fairly long step away from
Calling themselves a linux distribution exactly because they're not they don't want you to be running
Applications that run on linux generally on elementary. They don't want you to be running elementary apps on other distributions
And when you show up and say hey
Your desktop environment. How do I run it on?
Something else they'll say well suppose like this
But we don't really want you to do that because they want to build a culture where everything fits together
And that's really important and valuing this kind of application. I think is
a big thing
What cabin attempts to do is slightly different?
It is like the elementary model in that
Elementary have nominated the way you should build applications handed down on stone tablets
You should use their libraries their programming language. This is how you should publish them so on and so forth
And that's the right thing to do frankly
but
I think val is too hard for the kind of applications the kind of
Programmers that cabin is targeting. It's at least a big ask. Yeah, the elementary people have the disadvantage
by comparison with cabin
that they would like you if you want to sit down and build a
full-fat fully complicated application on elementary, they would absolutely welcome that and
Therefore their development environment and their development libraries and their development process has to be able to encompass that kind of application
Cabin utterly does not
Cabin buys itself a bunch of ease of use by intentionally sacrificing breadth of scope
You cannot and would not ever be able to build
Anything more than these naughty little applications in cabin and that's fine. Is there a risk of creating?
To put it harshly trash apps that sort of clutter things up
Is there a risk of that do you think or does that sort of sort itself out that depends on your definition of trash?
and
frankly
Yeah, it would probably be a problem if we had a million applications and a bunch of them rubbish
But right having a million applications would be a good problem to have on desktop, right? Yeah that point
Yeah, there's a filtering issue there, which belongs to the app stores the snap store or whatever
About how you filter good applications from bad and it's a problem
The iOS is dealing with my Android is dealing with and the Windows is dealing with this the web's dealing with it
The reason we haven't had to deal with that promise would be have no apps to filter. This is absolutely true
Yeah, so what cabin attempts to do is provide a programming environment that someone relatively new to programming can understand
But without hiding the idea that applications are built with code
So it's not a snap some jigsaw pieces together thing
I'm being terribly made to things like scratch here, but you can actually build really cool stuff with
But I didn't want to hide the idea that this is still fundamentally
Programming. Hmm, right if you're not interested in programming, you shouldn't be trying to build applications
You can't hide that away forever and any time you do try and hide it away
What happens is people discover it and pleasantly halfway through and then suddenly don't understand things
so you don't want to pull the rug out from under people when they're attempting to develop your applications, but
Cabin apps are built so that they're essentially compiled
Into Python and GTK and it doesn't hide that
So the idea is if you ever get to the point where you're hitting the limit of what could be built in a cabin application
You've then learned enough about programming that you can take a peek under the covers and go. Ah
what this is is a simplified interface to a
More powerful things and now I'm ready to learn the more powerful thing
Yeah, and that's often what you know gives people a chance to start and begin to build something
So steward you and hope we have put this out to the world
What would success in a scenario like this kind of look like because realistically it must be some form of adoption or inspiration
I would like someone to pick it up and and
prototype
What we?
Envisaged it to look like with some guidance, you know, we'd be happy to help but you know
we're both busy and it's not something we could commit full-time to but we want we didn't want the the
proposal to die in
And a file we uploaded to a contest that we didn't succeed at we didn't want it to just die there
So we want that we thought it had worth and so
success would be if someone you know started hacking on something if they had a bit of time and they had some time to hack
On it and you know get it bootstrapped, you know with guidance
we'd love to like help as a normal open source project like anything else and you know future success would be
People created little apps with it. That would be a measure of success for sure. Sure. Yeah, absolutely
There are a half dozen ideas that cabin in bodies in my opinion. One of them is
the thing about
helping
people with ideas transition them into applications without
Throwing the world of programming at them a second one is that it's a stepping stone to more complicated things when you're ready for them
a third one is
the idea, um
If you look at the cabin specification
Uh, you'll see that you've got your application and your code on show at all times changing one
Changes the other in lockstep in concert
Which is an idea from brett vector and I think that's a really important way
to
Develop things and people don't currently have it fourth idea
Building an application is considerably more than just writing the source code
Making sure that your application has a description an icon a tagline a title
that it's packaged up and uploaded to a
Software store that it's available in that software store and you can push new versions to it
That the community can gather around the application and feed feedback back to you
All of that stuff is just as important as the source code and it's shamefully slighted by
most of our development environments at the moment unless you're using some kind of
immensely complicated
full bore ide like
Android studio is or xcode is q creator does some of this but not a lot of it
And a lot of that is because those environments have to be able to cope with a building the most complicated applications on earth
um, including themselves and
be
To be swappable out in the kinds of applications. They can build cabins allowed to just say
This is the kind of application it builds. This is where it publishes it
We make that easy and you can't switch it out for publishing different kinds of applications
And from my point of view
If someone were to be inspired by those ideas
But build something quite different to cabin, but it still met all those requirements
I consider that very successful. Obviously the way I think you should meet those requirements is cabin why we spect it
Right, of course
But that would be that would be a benchmark of success right the idea getting propagated. Yes, the the idea that
people should be able to build an application get it into the hands of
Other users who can then enjoy it build a community around it feed back to you about it
learn
Maybe how to start programming applications themselves
that to me is
A thing that we should be aiming for on our desktop. We're not currently doing it
So if someone is inspired to do that, i'm happy
I also think another key aspect of this is the concept of redefining. What is an application worth time?
to develop and deploy on linux
and I look at my usage on and off over the good old years and I used to have plasmoids loaded up on
My plasma desktop which would show me different information and pull in different feeds, which are essentially tiny little qml applications
And same with gk realm and of course there was other other systems before then where i've had small little
Useful contained applications and there's just never been something that's broader and higher level for it
And I I really think it does have some interesting ideas that would i'd love to maybe even just see people discuss at the upcoming
linux application summit
That could be a good place for something like this to get talked about, you know
So is there anything really further after this guys or is this kind of it's out there for the world now and
People are welcome to come see it
The goal was to get the ideas out there because we as uh, as far as he says we spent a while
Putting this together and it seemed a shame to just have it
Quietly die on a hard drive somewhere could make for a good talk. Yeah, if someone wanted to talk about it, but um
yeah, it's not something I could afford to devote a bunch of
Uh my free time to because i've already got a zillion free time projects
Uh, if someone wants to come in with a checkbook and pay me to build it i'll listen because then it's paid time
which i've got more of but
But yeah, I think um
From my point of view it's out there and if someone were to want to pick it up
I'm, sure we'd be happy to talk to them about it. I don't I suspect I don't would agree 100. Yes
Yeah, and I I just like us thinking about this stuff if nothing else
It's a good thing for us to it's a good headspace for us to be in
Thanks for coming on on your sunday gentlemen and chatting with us about it
It's an interesting idea. Of course. We'll have links to it all in the in the show notes at linux unplugged.com
Unplugged.com slash three seven one seven one nice
I want to say thank you to cloud guru for sponsoring this episode of unplugged
You know, we talk about one of the best ways to learn is by actually doing
The cloud guru now includes cloud playground for azure aws or google cloud platform sandbox as you get on there
You log in you have a system
And it's on their dime not yours. I like that
Um, and it's a great way to learn by actually doing it
Of course, then there's a bunch of other resources. You can fall back on as well
It's just one click to a fast fresh disposable cloud environment at your fingertips
There's really no better way to learn is there and then you have the confidence to actually go test
Or even better
Do the job in the real world just go to a cloud guru.com and thanks to cloud guru for sponsoring the unplugged program
How about some feedback? Mr. Payne?
Um
So last week we had our bugathon after the show and pretty happy with the way it went some lessons learned but overall
We got great tips on how to make a bug report that was useful for developers. That's awesome
I earned my first fedora badge sure did that's pretty cool
And then also there was just a lot of good information about just general troubleshooting
Throughout and there was a couple of times we thought we had found ourselves quite the bug
But then you know reproducing the process and working through it. We kind of worked it out
Sometimes it's just ui inconsistencies
It was really a lot of fun. It was and
Learn some stuff. So I decided to make it available to our unplugged core contributors. You just have to go sign in
So if you go to unplugged core.com, there's a little sign in button there
They make it really small because it's the sign up page
But if you you click the little sign in button then go to your downloads area the whole thing's available for download
And I actually think it's worthwhile even if you're not a fedora user or interested in butter fs
To hear the guys talk about you know what they need in a bug report and how the processes you got to go through
And some of the some of the little nuances that carl and neil went into particularly
When we actually came to the point of okay i'm about to create this bug report. Here's my questions
Oh, well for that you need to know
I've really
Little edge case shone a lot of light on the yeah the intricacies of keeping track of all this stuff
And how do you actually make it actionable and test methodology?
So it's available for the core contributors right now
and I think maybe you know, maybe in the in the future we'll probably release it in the main feed like if we
Like if we get sick or something need a week off
but in the meantime, it's available for the core contributors right now at unplugged core.com and
The other thing that's really cool about the bugathon is we're going to keep the channel going in matrix
so
Developers are welcome to join us in there to seek people to help them test their projects if that
Is a benefit to your project if you are understaffed when it comes to testing
We'll have people that are able and willing in our bugathon matrix room
Uh, but additionally what was kind of neat is even people who couldn't attend live
Ended up doing it on their own. So i've been hearing from people throughout the week
Oh great about them testing it and uh that I really like I didn't really think about that
But that's a neat knock-on effect is even the download audience who didn't attend live could never make it live
Can still help us with this, right?
And so that's something I think I want to definitely take advantage of in the future for the next project we do this for
I think we're gonna do it again. Can I also just say uh seems like
Seems like finora 33 shaping up to be quite a release. I mean hardly any bugs at all so far
I mean, we really you know, we really put it through its paces. I uh, did a live conversion to butter fs
That was fun, which was successful but did teach us a couple of things that we'll we'll try to cover in our uh,
In our review in the future a couple of going indie updates
I figure keep everybody in the loop on what's going on with jb
Now you'll see a new logo rolling out to the shows and to the website a little updated logo
I I don't know if this is our permanent logo or if this is like get us to linux fest
I haven't really decided yet. I'm sitting with it and I kind of just like the simplicity of it
so if you haven't seen it yet, it'll be showing up like in the mp3 art and
On the feeds and on the website so you can check that out
Lots of work going on behind the scenes to build up the pipeline for the membership feats
Thank you specifically to you and drew for working super hard on that. I really appreciate it
So that's been getting rolled out. We're still making tweaks to some of that and working out a pipeline
Uh, you know a lot of times we start manual processes a lot of times they fall on west's shoulders
So I really appreciate you doing the picking up the slack there and then we develop them into an automated process
Exactly, uh, you know, so first the human the human process and then it's like you learn it, right?
You understand what has to be done and then you just replace it with bits of automation
Right. Otherwise we wouldn't I mean we got to answer a lot of questions of how are we actually doing this?
Yeah, I really love that you said wes and me when really my whole thing with it is hey wes
Are you handling the ad free feed this week?
That's like the extent of it. Yeah, you can find it on our on our next cloud. Yeah, go get the file you do it
Go here. Yeah. Yeah
Uh, and so the other thing I want to be clear about that is i'm it's like a
It's an ad it's limited ads
There is a couple of short ads in there that are contractually obligated
But we're going to start cutting out the membership plug itself from that version of the show
And future ad contracts won't be included in that show
Uh right now it's it's it's probably technically slightly a shorter show too. I'd imagine I guess
but it's uh
It's coming along and it's really been a team effort and it's been also kind of like
I think we're all kind of motivated because there's been a great community response. It's been really awesome to see
Um, and then we're also still taking your ideas for linux prepper, which is in the matrix be prepared in layers
And what are those layers? What about with what if your cloud service goes out?
What if your main rig goes out just can't boot that day? What if you got a bug out?
How do you prep as a linux user join us in the new matrix room and check for the linux prepper room?
in particular and
We'll get a conversation that'll eventually turn into show content
see if we were thinking ahead we would have had a linux powered smoke filtration system set up already
No kidding. No kidding. All right. So, uh five creative you think you think that's how you say it five
five creative, uh writes in about dev ed dev ide's he says hey guys longtime listener first time collaborator
Collaborator dirty collaborator. I thought it might be a cool thing to do something similar to the podcatcher playoff
But for ide's and editors, oh
Nobody has an opinion on editors, right? Of course not
He says i've been a longtime user of komodo ide namely for its integrated ssh support
I've gone all into linux and I no longer require that feature with built-in ssh support in the os
I just received my pinebook pro and thought it would be great to ask around for a lightweight editor
I know of many but which ones do people love thanks for the hard work you put into the podcast
And he also says that ubuntu podcast is great
It is doesn't actually say that but we do think that and that bad voltage podcast, right?
He says that in there too. He just put that in there
I shouldn't give him edit access. I know weird, right?
Um, so does anybody have a text editor that's lightweight, you know
We often on this show will joke about nano being the one in true text editor, but there's others out there
Does anybody have one they want to give a little love to?
I use four of them on a daily basis. Wait, wait
Four, all right, walk me through this i'm gonna brace myself here
Okay, so I use vim primarily as one does as one does because the church of him is awesome
But sometimes I need a graphical text editor because you know, sometimes I like to use a scroll wheel of my mouse
You know use like the standard keyboard shortcuts and all that like a gentleman
So I use mousepad because that's installed on all my systems on my workstation
I have vs code and and another one i've been playing around with called cocoon, which is like vim but different cocoon
Okay, and don't think I didn't just notice that you just cash drop that you're an xfce user. I totally caught that
Uh, no, actually i'm not using a xfce
Really? Oh, but you're using mousepad. What kind of animal are you?
A savage animal that's the kind
mix and match
And mousepad is actually a pretty nice lightweight gooey editor. Yeah, it's pretty nice lightweight
It does not actually pull in the xfce dependencies. So it's actually pretty well standalone
All right, so I don't see why you wouldn't use mousepad outside of xfce. Yeah, that's fair
Yeah, definitely. One of the chromium based ones isn't going to be a list isn't going to be a candidate for this one
Is it anybody else have a graphical one? It's tricky. Well, you know some folks really like sublime text
You know, there's a stalwart contingent there. Yeah me first off
Yeah, they're better too another vote for sublime, okay sublime's wonderful, although i've got i've got terribly um, uh
Unassuming requirements for the text editor. I spent half my life in it basically has to start up quickly
It has to have multiple curses syntax highlighting and it must never ever ever ever lose a file
Even files i've never saved never given a name to
If I start typing into a file and then I yank the power socket out of the back of my machine and then plug it
Back in again. It'll still be there in sublime when I start up and that's why I can't switch way to it
Switch way to anything else because nothing else will guarantee that so i'm now used to doing that
Half the files i've got open in sublime. I've got I think six sublime windows open at the moment
Each of which have got about 10 or 15 tabs in them and half of those have never been saved
And they're still there across reboots
They're actually across upgrading the operating system
It's magic magic sublime voodoo. I love it's the best just use sublime for everything. It's brilliant
I have to say I wrote years of consulting notes in sublime and it never ever failed me
And it always relaunched with my notes right where I left them even massive multi-month documents
documents I do not use it anymore because um
I've just switched over to vs code i'm one of those people but I I love it and it is definitely of the graphical
Nice high-end text editors. It's definitely one of the quickest. It's not chromium based and
It's uh, it's pretty been around for quite some time too. You know, it's not going anywhere
Battle tested casual chemist, which is one of my favorite names, uh writes in
This is funny because you can tell where people are at in the back catalog
Because when they get to the next cloud episode we did they go. Holy crap. I got to write these guys. What are they doing?
Don't worry. We're working on it. But he says hello listening for a few years, although i'm a few months behind
Yep, see told you he said i've just heard of 362 on linux unplugged the hidden cost of next club. Yep
That's totally that's totally fair casual chemists. A lot of people are still getting there. I'm also up to episode 21 of self-hosted
Uh, he loves that show apparently awesome
Good job new episode just came out where I compare sync thing to next cloud
Which was something we were going to do in the show
but we actually ended up cutting it for time and then I had more experience with it and so
I'm trying to convince my co-host alex to give sync thing and go you're working there. Yeah, i'm working it
Yeah, i'm working it. So casual chemist goes on he says I was surprised that y'all pay 350 a month
That's 350 a month for next cloud storage. I was surprised but then when you broke it down I was less shocked
However, have you considered using backblaze or wasabi instead of digital ocean's object storage? They're both s3 compatible
That's true. And then he gives the price currently of backblaze
And he says by the way, I want to give a shout out to my favorite backup solution the love of my life
Boy that's somebody loves a backup solution when it has all your data in its hands a borg backup
Wow, which we've talked a little bit on the show before and it just recently stumbled across a project called borg-o-matic
Which uses some yaml config to automate borg backups. There you go. What's one more yaml file? That's a winner. Um, yeah, so
We've kind of taken a different approach. This has been a common suggestion
It's just essentially swapping out the backend cloud storage
We're kind of thinking about doing more of a primary storage on site here at the studio kind of thing because we do have a nas
here
And then keeping the raw editing files up on the cloud
So that way they're fast and easy to move around and quick for remote host upload and quick for remote editors to download
But keeping that tighter than we have in the past, you know
Maybe keeping it close to like 50 gigs or something, right?
Right just managing the hot stuff that you know needs to be up there and then anything else
We can move it to long-term storage. Yeah, and we'll probably in this process
We're probably going to migrate the server over to the node
We're probably going to move the domain over and then we're going to have to migrate a bunch of the data
Down to the studio. Yes. Yeah
And then we might take advantage maybe maybe not of federating the two next cloud instances, although
I'm kind of tempted to keep them separate, you know, one's like an archive and one is current working projects
And we're using them quite differently. Yeah, exactly one is so we can retrieve something as an asset that we might need
A year down the road and one of them is for collaborating with co-hosts and remote hosts and editors
They're kind of two different systems anyways, right and it's just going to be pulling in the one direction
So we're going to kind of we're thinking cut it down that line
And that's where the bulk of the storage is going to be now is at the studio
Which means maybe you know, maybe I end up needing to buy disk sooner for the nas down here than I planned
But that still will be a little bit out. We'll be really uh, you know getting a use out of the old large server
I know and it has survived yet another summer where there's been no air conditioning in that garage
and
I'm not joking
This year the the vent for the water heater broke and so the water heater was just venting into the garage
Right at the server kind of actually on the same wall as the server at least but you know, keep static electricity down
Um
So, I mean that server not only is put up with like
90 degree. I mean it's it's hot in there and then I I pull a car in there that's been driving
Right, so it's got a hot engine and hot metal surface and then I park it in there and that's got to raise the ambient temperature
Oh, yeah, and then the hot water heater which we don't use a lot of hot water at the studio
But it still keeps it heated up, right? So that's venting. I mean, it's unbelievable that what that server has survived
You know, we do sell colo here, but you probably don't want it
Yeah, jupiter broadcasting's discount hosting
Yeah, our prices are so low well and not to mention the fact that we abuse the hell out of it for fun and profit
Yes, that's true too live on the air for poor server. It really has put up with a lot. All right. Let's talk about cozy
Uh cozy is a modern audiobook player
For your gnu slash linux desktop and it's designed to make it super comfy kumskies and cozy to browse your library
It it's sort of like plex for audiobooks, but it's a local application
It's pretty sharp too. It does it's I mean if you if you're the gtk persuasion, which I often am
Um, even even on my plasma desktop. I still I still like gtk up design. You know, it's assuming simple clean
I'm that guy but it has sleep timers, which is my favorite for audiobooks
Audiobooks and yes, it remembers your playback position. It has offline mode, of course
So you can keep uh your uh your books locally and then there's you know
There's other things out there too to help with that. I think it's I think it's called open audible
Are you familiar with have we talked about that before? No, I don't think so
Yeah, I mean I might have to do a little live googling on the show
But if you're an audible customer check out open audible and then you could use something like cozy
to uh import all of those
So it's kind of a nice combination. It seems like it's not biting too much off either, you know
It's not this like crazy complicated ebook managing monster
It's really just like a clean way to read your ebooks and what they have done, you know, it's been well integrated
It's got you know, media player controls on your desktop if your desktop has that
It seems very usable. We'll have a link to that in the show notes
And we already got a whole bunch of really good nice picks
Can I uh, can I give a book suggestion for somebody to listen to on cozy totally?
Uh, I'd recommend going to check out the strain
It's kind of a vampire book written by guillermo d'arturo and chuck hogan and it is narrated by none other
Than ron perlman, you know who i've been trying to find books narrated by you're gonna i'm such a dork
Captain janeway kate monger anything
You get a good book by her. I found a voyager book so that kind of worked but yeah, yeah good pick
All right
Well, we'll have a link to that in the show notes and we will be back to our regular live time next week
Which is noon pacific 3 p.m. Eastern Eastern people time. See you next week
Same bad time same bad station. And of course everything we talked about is at linuxunplugged.com
371
Check out poppy on ubuntu podcasts check out stewart on bad voltage. Thanks to both of you for making it on the show today
You're welcome. You're welcome. And um, let's see. What about you wes? Where can I find you? You can find me at westpac
I knew it
I thought you might be on twitter. Yeah, what about you drew? Did you do it? Did you do the twitter?
Oh, yeah, i'm on twitter at drew of doom. I did it i'm at chris lass the show did it too at linuxunplugged I think
Think at jupiter signal for the network pretty sure on that one. All right. Thanks so much for tuning this week's episode
Sorry, we weren't live to see you, but we will see you next week. Maybe we'll see you on tuesday
Get off my ship that's my genway
Oh hadia and I watched the hunt for red october this weekend the first time she had seen it
Been kind of introducing her to a couple of the classics
uh
You know
Didn't actually hold up quite as much for me
Uh, I was a little like I was like there's always that risk. I was like, oh good movie, but I wasn't like
Like beforehand it's like all right. Well, let's get everything ready. Get our popcorn. We'll get our wine in the lights
Yep. Yeah, we're like let's settle in and prepare this gonna be a it's gonna be a real, you know
Like a guy movie from the 90s. Let's do this and we put it on i'm like, you know, it's not bad
But you're watching like this just doesn't really hold up to scrutiny. Anyways, I don't it's still fun
well, and wasn't that alec baldwin as uh
Um as uh jack ryan in that one. Yeah as a yeah as a c jack ryan the ci analyst. Yep, and uh,
Here's some stuff. He does he just kind of like, oh really? Yeah, but uh still fun. It's a good romp
And then tonight we kick off star trek the original series. Oh, oh
