Let's see, Dan, just before you go, will you say welcome to Linux Unplugged, your weekly
Linux talk show?
Welcome to Linux Unplugged, your weekly Linux talk show, dude.
This is Linux Unplugged, episode 236 for February 13th, 2018.
Welcome to Linux Unplugged, your weekly Linux talk show that's reporting back from the front
lines of the desktop.
My name is Chris.
My name is Wes.
Hello, Wes.
I'm very excited about today's show.
We've got a ton of great stuff.
We do.
We do.
We have some follow-up items that are quite choice if you had an opportunity to listen
to 235, but there's a big embarrassing story for Apple this week, and us open source enthusiasts
can't help but laugh a little bit.
Turns out Razer, not so interested in supporting Linux after all, maybe put off those plans
for a laptop, but KDE's got you covered with a new slim book, too.
We'll take a look at that, and then Mr. Foray is here, Mr. Foray from the esteemed elementary
OS project to tell us about why the hell they're jumping from 0.4 to 5.0.
What kind of gumption?
A whole new world.
We're going to figure that out, plus last Friday, since we gathered here together, I
went down to Microsoft.
I visited the third floor of one of the swankiest offices I've ever been in, and I asked them
all of the questions, everything from literally, are you trying to kill Ubuntu, to why the
hell are you open sourcing.NET Core and PowerShell?
Wow.
Yeah.
And they just let me ask whatever question I want.
I'm going to play some of that for you here on the show, talk about Azure and Linux and
about where that's going, and the super awkward position that it seems Microsoft has found
themselves in with Windows, plus we will talk about our plasma challenge.
We'll do a little check-in on the plasma challenge and see where everybody's at, see who's moving
on, see who's sticking around.
There's tons coming up, so let's not go a moment further without saying holler at our
mumble room, time-appropriate greetings, virtual lug, hip-hip.
All right, guys, well, we have so much to get into this week, and I have it all opened
up in a tab on Firefox.
This is like, by the way, just totally random, but I don't know, I'm like week four into
Firefox now, version 58 right now.
I never thought I'd hear you say it.
I mean, this is like the third or fourth unplugged with no Chrome.
No Chrome.
How's it going?
I mean, you're still here.
You don't seem to be pulling your hair out.
I think my favorite feature is how Firefox restores tabs.
Instead of opening a new window and then populating that window with all of these random-ass tabs,
it just resumes all of the tabs in the window that I have open.
The reason why I like that is because I can do it while my browser is on camera, and you
have no idea I just did that, just all silently in the background without lagging out my browser,
without lagging out my OS.
Poor broadcaster's tip for you.
I know.
And my battery life's way better too.
Anyways, totally random.
And also random this week, I thought we'd start with kind of an embarrassing story for
Apple.
They had some forced open source disclosure this week.
Did you see this?
The iBoot firmware, yeah, they call it iBoot.
Of course.
What else would you call it?
I don't know, anything but iBoot, to be honest with you, anything, actually, but iBoot would
be what I'd call it.
Well, uBoot was taken, so.
But it sounds like an intern or somebody at the level of an intern posted Apple's super
secret firmware source code onto GitHub for whatever reason.
They like the jail cell.
And within hours, within about a day or so, Apple got a DMCA complaint filed with the
GitHub company.
But it's sort of like no going back on this kind of thing.
Once this thing is out there, there's really no taking it back.
And you've got to wonder if maybe jailbreakers and hackers can use this stuff.
And what's weird is Apple's statement, Apple responded with a comment, something about,
we do not rely on the obscurity of our source code to enforce its security.
Oh.
Yeah, like one of those, boom.
We were just happy to have it as a layer there for a while.
Yeah.
For as long as we could.
Yeah, it sounded like the person involved was pressured from some of the community that
wanted the information about how to develop jailbreakers and other such applications.
Yeah.
I-Boot.
And then it's leaked further than that.
It's a second stage bootloader, Wes.
It's just so, I don't know.
There's something about all of Apple's stuff.
You got the Secure Enclave.
You got the I-Boot.
You got the T2 chip in the iMac Pro.
It really feels like Apple is circling in on jailbreakers and the Hackintosh community
just to give them the old traditional Apple butt wiener in about another year.
All of the things are lining up right now.
The T2 chip is going to be something that will undoubtedly ship in new MacBook Pros
and the new Mac Pro, and that is literally a iPhone system on a chip that verifies the
cryptographic integrity of the Mac operating system.
I mean, that's where their heart's been for a long time now.
There's no way the Hackintosh community is going to have a quick remedy to that.
That's going to be easy for anybody.
And that's just going to populate across all of the Mac platform.
And then you combine it with all of the other techniques that they're doing, like with signing
of applications and the Mac App Store.
It's just the Hackintosh community can't have more than two years.
I don't think you're wrong, and a lot of this is in the name of security, and a lot of it
can really be understood.
Yeah.
Yeah.
Honestly, it-
I don't think that some of this actually does solve, but from our perspective as the 1%
techie crowd, it's not.
But okay.
But put yourself in the position of maybe you're one of these companies that's really
buddy-buddy with IBM, and IBM now preaches the gospel of Apple, and they come in and
they say, replace all of your Windows 7 and Windows XP machines with iPads and MacBooks.
I already did that.
It's fine.
It's easy.
Okay, sorry.
That's just so funny.
What are you going to do?
Anyways, so you go in there, you replace all your machines with Macs, because that's cheap,
and then you really want to get to the point where you can verify that the operating system
is secure, and the applications are secure, and so it's kind of within the corporation's
best interest that Apple does lock this shit down.
Yeah.
I mean, absolutely, right?
You could even say the Hackintosh community isn't even a factor in their decision-making
process.
They're not, yeah, they're not large.
Why would it be?
I think it's really just been a, perhaps Apple being nice or not overly, you know, not really
caring about it up to this point.
But if it gets in the way of some of their security and marketing objectives, then they
really have no reason to let them benefit.
I wonder if we could figure out, like wouldn't it be amazing if somebody could figure out
like, well, it's going to be one in 15 Hackintosh users become desktop Linux users or something
like that?
That would be.
Anyways, here's kind of a fun thing about Apple using the DMCA to take down the code
off of GitHub.
Under penalty of perjury, that on the case of Apple, that means that the source code
has to be legit.
Because if Apple is using the DMCA to take down that source code, and then they go to
court over it, and it turns out it's not legitimately their source code, they're screwed.
In other words, that means the source code that now tons and tons and tons and tons of
people have copies of is legitimate source code, because they use the DMCA, which confirms
it's legitimate, which is...
It's funny how that kind of works, right?
You're really enjoying yourself on this one.
I am.
It's nice to see you happy.
Thank you.
Thank you.
Because, you know, then I reflect on another laptop company like Razer, who was offered
the source code to update firmwares on Razer laptops, and they said, no, thanks.
This is, of course, by one of the folks involved with the Linux vendor firmware project where
they are shipping firmware updates via GNOME software and other mechanisms.
We've talked about it a lot on this show, one of my favorite things.
Absolutely.
And also, one of the developers emailed Razer and said, what could I do to help you start
shipping your firmware updates?
How about I will write you code from scratch, example code that you could actually just
take and use that would be ready to go.
In fact, how about I do all of the work, I hook everything up for you, you just got to
give me some of the details and it's good to go.
And nothing happens.
And nothing happens.
And then eventually, an email comes back and the email says, we've discussed your offer
with a dedicated team and we're thankful for your enthusiasm and for the good idea.
But I'm afraid I also have to let you know that at this moment in time, our support for
software is only focused on Windows and Mac, i.e. you've done all the hard work, you've
gotten everything ready for us, you're actually even solving a problem for us and some of
our customers, but we can't be bothered to give you the time of day.
I've got an alternative point of view on this.
I'd love to hear it.
So OEMs such as Razer who go to OEMs may have to enter into contracts, which prevents the
redistribution of firmware and BIOS images.
And this may be a well-crafted polite reply to rebuttal the fact that they don't have
an arrangement with their ODM that enables them to redistribute the firmware images.
So you're saying it's a way of answering the question without kind of crapping on their
partner saying, well, our partner's agreement doesn't allow us to do that.
Exactly.
Yeah.
So I don't know, I don't have any insight into who Razer's ODMs are, but some of the
other Linux-focused OEMs certainly do fall into this category where they are not permitted
to redistribute these images and consequently doing this work is not open to them.
Right.
So to be clear, to sort of clarify what you're saying is based on your experience and my
experience in communicating with certain Linux-first hardware vendors that are reshipping upstream
original equipment manufacturers' hardware like perhaps say a Clevo, there is an agreement
in place in which as part of that – because it's been around – these have been around
for years now, that part of that agreement is you cannot directly redistribute our firmwares
to your – or any kind of like updates to the firmware too to your customers.
They have to be distributed directly from us.
And then there's different iterations of this agreement that might say, well, under
these conditions you can distribute firmware or under these other conditions you can distribute
the firmware once we've signed off on it.
There's a bunch of changes to it, but that's essentially what you're saying.
Exactly that because if you enter into an agreement with say Clevo and as the equipment
manufacturer you are requesting some customizations to buy us some firmware, those are not something
that Clevo want to be reshared and redistributed because it's specific to your contractual
obligations.
Right.
And the customization of that firmware is sort of the product that they are – part
of the product that they are selling back to the reseller.
So Clevo is going into some sort of business arrangement with these resellers and saying,
all right, we will make these changes.
You go validate this on your hardware and then come back to us with the changes you
want and then Clevo makes the changes at the firmware level and then the seller tests that
again and validates it and sends back more suggestions and it's a back and forth process.
And then eventually they have a custom firmware that Clevo has created for that particular
vendor.
And that's part of the value that Clevo offers.
Exactly.
And this is also why you sometimes see that the Linux device manufacturers are a little
bit behind on offering certain chipsets of products because they have to go through this
validation and tweaking and customization exercise for their products in order to deliver
them in an out-of-the-box Linux compatible way.
Yeah.
Okay.
Yeah.
Unfortunate but reasonable.
So one of the devices that is probably kind of along the same line that I at first was
sort of skeptical of but now we're seeing a second iteration of and I'm kind of starting
to get it now is the KDE Slimbook and now we have the KDE Slimbook 2.
And it's not like it's going to like blow you away with the hardware specs.
It's a 13.3-inch screen.
It does have an SSD.
You can get it with a pretty fast 2.7 gigahertz i7 CPU which will turbo boost up to 3.5 gigahertz.
And you can get up to 16 gigs of RAM.
But again, it's not going to blow you away in terms of performance.
But it is one of these situations where it's...
How do you describe something like this, Wes, where a project can focus in on a singular
target?
It's not like they're designing the hardware but it gives them sort of like a...
They have like a reference platform they can really focus on.
Yeah, like a narrow set of variables, right?
Yes.
And that's what's interesting about the Slimbook is because I feel like this could be a harbinger
for what we could see down the road as it becomes more available for people to ship
upstream OEM hardware, make slight modifications at the hardware and firmware level and then
have open source projects hyper-target that for a few months in development and then release
it.
And that's what we're seeing here.
We're seeing this with some other hardware.
And I think this is an interesting idea because when I first started getting into Linux, you
would buy like a six CD set for $65.
You'd go home with a box and a book and like a whole bunch of CDs where you can install
your Linux.
And that was the thing you bought.
But that's obviously gone away with ISO downloads and whatnot.
But this is almost like a new version of it today.
If I was a student and I was really passionate about Linux and open source and the Plasma
desktop, I'm pretty sure I would aspire to a piece of hardware like this.
This would be sort of that thing that I would want to get.
I would go mow those lawns, I would do what it would take, I would go get that side job
so that way I could get the perfect Plasma desktop laptop.
It's been tweaked for it, designed for it, thought about, cared for.
So it's nice to see.
Go ahead.
You told us with the previous conversation about working with ODMs in order to make the
necessary customizations that the device that ships out of the box works with the distribution
or operating system that isn't pre-installed.
So I'm a big fan of this because this is the step change that Linux on the desktop needs.
Downloading ISOs and sticking them on USB sticks and installing them on whatever you
happen to buy is all very well and good.
But actually being able to buy devices pre-installed, pre-configured, with the operating system
that you want to use, that's how you really step up adoption.
It also interests me the tighter coupling between the desktop maker and the actual hardware
details and not having one layer of distributor or system in the middle there.
Maybe there's some real-world concerns that will get addressed more quickly.
It's funny and this could just be Softpedia, but in the screenshots on Softpedia, I'm seeing
screenshots of elementary OS and home desktop.
Oh, and there's Mate right there.
There's even Unity below.
The Slimbook guys are very good.
While they have a specific model that's available with KDE, they support all of the things.
Of course.
Of course.
And that's what's kind of nice when you're buying a Slimbook to run Plasma, but you know
you can run everything else.
It's all just Linux.
It is, right?
You can also buy a Slimbook without Plasma if you want to.
Before we move on, producer Michael, do you have anything else you want to mention about
the Slimbook thing?
Because I've just sort of covered on a high level, but I don't know if you've ever seen
someone in person, but with the version 2, it kind of feels like it's essentially like
a Galago.
Am I right about that?
It's not the same ODM, but it is very similar.
Oh, it's not?
It's not?
I don't think they have Cleveland now.
Oh, it looks pretty nice though.
We were fortunate enough that they were at, sorry, sorry, Slimbook were at UbuCon Europe
in Paris in September last year and they had all of their devices out and there was lots
of drooling and pouring at the quality of their devices.
I think this version 2 looks particularly interesting.
Just to plug another podcast, if curry happens, which it might, I would desperately love to
see one of these in for review on the Ubuntu podcast with KD Neon.
Me too.
Me too.
I would like to see that.
It's a sick looking laptop.
It reminds me of Macs, but you know, Macs have decent looking hardware and this one
looks like you can get a better powerful machine roughly about the same price and still looks
like a Mac.
So hey, there you go.
Now, do you have any idea, Rodden, about how much might go up towards the Plasma desktop
or the KDE project?
Is there any kind of like, is it just, is there any, do you know if there's any financial
like contribution, am I giving anything towards the project?
There is a partnership.
I don't know what the percentages are, but I do know that they do something with it.
I could find out, but I don't know if they'll pan.
Yeah.
All right.
I just think this would probably be just be great for anybody that just wants a machine
dedicated to run KD Neon, just go for it.
And it looks like great hardware.
I do hope to one day see my hands on it, maybe at a conference or something like that or
if they ever have enough units to send out for review, I think that'd be pretty sweet.
I'm still shopping for you, Wes.
I'm still shopping.
That's right.
You are.
You have like a first gen XPS 13.
Is that a first gen?
No, it's a second gen.
Second gen.
Second gen.
All right.
Well, that's understandable.
Is that an i5 or an i7?
i5.
An i5, huh?
Man.
I mean, it's really just a terminal and a web browser.
Yeah, but you get a shit ton of work done with that.
That's not your daily driver.
No, it is not.
Okay.
So your daily driver is a desktop?
Yeah.
I have a desktop replacement at home and a real desktop.
So like a big laptop at home and then a desktop at work.
Yeah.
Okay.
All right.
And then this is the portable version.
Good man.
But you're right.
It does need replacing.
A little bit.
So I'm shopping for you all the time.
I'm just always looking for you.
I just got to make sure you get the right thing, Wes.
I got to make sure.
It's got to be right.
The only reason is because I got to sit here and stare at it every single week.
Exactly.
You have incentive.
Yeah.
You know what else?
I'm going to mention Ting right now, linux.ting.com.
It's our mobile service provider.
It's the whole network's mobile service provider.
It's just a smarter way to do mobile because your average Ting bill is just $23 per phone
per month.
It's pay for what you use wireless.
However much you talk, however much you text, and however much data you use.
You're like a ninja with this stuff too, Wes.
You know that?
Oh yeah.
As much as you want.
I've noticed that too.
Like when Wes gets here, he's like, hey, what's the Wi-Fi?
I got to get on the Wi-Fi here.
I'm like, what's going on over there?
I look over at Wes and then boom, he like syncs up all his stuff once he gets on the
Wi-Fi.
I'm not an animal.
I mean, come on.
I'm a gentleman Wi-Fi caller.
They got nationwide coverage, CDMA and GSM networks, no contracts nor the termination
fee, and you can try Ting totally risk free.
With CDMA and GSM too, that means there's lots you can bring over in terms of hardware
to the Ting network.
It's incredible.
You know, I went from paying over $140 a month to paying around $40 a month.
That means I can buy like a new laptop every couple of years.
It's super great.
Start by going to linux.ting.com.
Support this show.
Make $25 off a Ting device or get $25 in service credit if you bring a device.
Linux.ting.com and a big thank you to Ting.
Big thank you to Ting for sponsoring the unplugged program, linux.ting.com.
I just think Dan just can't stay out of the news.
Elementary OS every single damn week is doing something that's causing some bit of discussion.
And maybe this is just what happens when a project gets to a certain size.
Like every single thing they do generates discussion.
But Dan joins us this week to discuss the crazy, outlandish idea that they dare go from
version 0.4 to version 5.0 with the next release, Version Journal.
That's a big jump.
So Dan, you've just gone off the deep end and you just jump in numbers like OpenSUSE
now.
Yeah.
So, I mean, when we're just thinking about, you know, what if we took that zero and then
took it off, then didn't do that.
What if we didn't do that?
Oh, well.
All right.
That sounds good.
Moving on then.
Bold thinking, Dan.
Now, honestly, there's kind of two reasons, right?
One is a marketing reason and one is kind of an organizational reason.
And we kept getting a lot of people saying, oh, you know, when is Elementary OS going
to get out of beta?
Like, you guys are still in beta.
You know, we keep hearing like people saying, oh, Elementary OS is in beta.
And so it was really confusing for people to have that leading zero in there.
So we thought, okay, well, you know, we got to version bump that, right?
We got to move that up into at least 1.0 territory so people stop thinking this is a beta product.
Honestly, I feel like you got there with Freya, really.
Yeah, you know.
Which was 0.3.
Right.
And it's been quite an evolution, to be honest.
And we're, we are kind of holding off on the 1.0 because we wanted to make sure that we
had, I don't know if control is the right word, but at least influence in everything
that the user sees and touches, that we're able to fix the issues that our users report
to us.
And so we're kind of, we're way more there than we were before.
And this Juno release has the most elementary stuff in it out of any release before, as
far as our desktop environment and all the apps we ship.
And now we have an application ecosystem that people are developing apps for Elementary
OS.
So it's like a huge shift from where we were when we started out.
It's the stuff that actually makes the platform, to be frank about it.
And I like this post, I don't know if you guys intended it for this, but if I had never
heard of Elementary OS and all of a sudden I saw, why do these cocky sons of bitches
want money from me?
If I read this post, I would be compelled to donate lots of money.
Because within the screen, if you just look at the damn screenshots, it is so clear.
Like here, Wes, I'm going to do, are you ready for this, Wes?
I'm going to do a little, so here is, we start here at the beginning.
There's an Elementary OS Jupiter 0.1 and it looks like a GTK Gnome 2 respawn.
No problems here, but yeah.
Then you get to version 0.2 and you're like, oh, okay, it's GTK 3.
It's got a nice theme going for it.
But by the time you get to Freya 0.3, you have a whole lot of Elementary OS features,
including a whole bunch of nice styling, animations, a real clear visual communication.
Definitely.
You have their own application launcher, their own settings panels, a do not disturb system
with notifications.
Like it's clearly its own product by 0.3.
Then when you look at Loki 0.4, one of the things that strikes me about Loki is it's
all of the stuff I just said, plus kind of building on top of that a more refined look,
clear path for third party developers, style sheets, APIs.
It honestly starts to become a platform by Loki version 0.4, the current version.
But the other thing that you guys have done with Loki that struck me, and maybe this was
the case with Freya and I just didn't notice it, but it feels like Loki just keeps constantly
getting better.
There's new stuff that just keeps coming to Loki.
There hasn't been this big gap while I'm just waiting for the next version of Elementary,
the next big drop.
Because in this meantime, I am kind of waiting for that, but in the meantime, stuff has just
kept coming down to Loki, like updates, like the App Center, for example, the updates,
all of that stuff.
It just is new in Loki, which has been the current release now for a while.
And so you guys have legitimately built a platform.
And I think when people say that, some people get triggered because it sounds like cloud,
it sounds like vlog, it sounds like blog.
It's one of these, it's a term, it's this nebulous term, but it's an App Center, it's
a design language, it's a clear path for developers.
It's a lack of nebulousness, right?
Yeah, exactly.
It is something concrete now.
Yeah.
So, but I mean, not to belabor this point, but just because this is the thing that everybody's
been talking about, why not just say 1.0?
Right.
And the reason why not to go 1.0 is less marketing and more organizational.
So that's kind of the other component of it.
And what we're looking at is we want to try to bring everything into alignment with semantic
versioning so that we have that major, minor, that whole thing going on.
But what we have right now is a lot of version numbers throughout all of our different products
that are misaligned and some of them are more than 1.0.
And so by just kind of removing that leading zero, then we can eventually get to a place
where across the board, like all the APIs for our 5x series are 5x and all the applications
are 5x, you know, get everything all kind of aligned.
Very nice.
So it's a Windows 10 effort then?
Oh, I have no idea.
Sure.
No, but I get what you're saying.
You're saying developers can say, okay, so you have the 5.x version of this API support
or this application, so I know what I can target there.
And then eventually down the road, it'll be 6x and 7x, yeah?
Yeah, exactly.
So the version number for all of our products aligns with that release.
Damn.
Very nice.
Forward thinking.
Yeah, you're taking what I always compliment you guys.
Here's the clear developer story.
Here's how you target the platform.
Here's the design language you use.
In fact, here's a widget you can use to make it look like everything else.
And now you're going to the next level and saying, here's the APIs that you can guarantee
work.
Yeah.
So we're really trying to get to a point where that level of clarity permeates throughout
the entirety of the stack and not just with, oh, it's clear for users to use applications,
but it's clear for developers to write them as well.
Right, because 5.0 is going to mean GTK 3.22.
It's going to mean high DPI.
It's going to mean kernel Linux version something x.
Yeah.
So elementary 5.0 actually means GTK x, kernel version x, system DX, Xorg or Wayland x, doesn't
it?
Yeah, right.
Because the new 5.0 release is going to be based, or we're currently building it, on
the Ubuntu 18.04 LTS.
So it does bring a hardware enablement stack and a ton of new APIs from all our upstreams
as well.
Yeah.
I mean, that's the practical version of it is it's 5.0 is going to be 18.04 LTS.
But developers won't even need to understand that esoteric differentiator.
It'll just be 5.0 of the elementary OS platform has these capabilities.
6.0 has these capabilities.
But what's with the need of the dot dot o anyway?
Is there any need for like a 0.5 release just for beta possibly or anything like that?
Yeah, so what it is is basically the same like we did with Loki where we had a 0.4 release
and then we had 0.4.1.
And what that was is it's a bump to a new hardware enablement stack or adding new major
features or things like that.
So we do have those minor revisions that we'll push out if we make a new ISO release.
So it's something significant enough to trigger a new build, but not significant enough to
break API.
Also real quick, why did you name it after a very infamous film about a pregnant teenager?
Juno?
It could be or a city in Alaska, I mean, let's be honest.
So for our code names, we use the names of deities and it turns out that the majority
of the really nice sounding deity names are like Greek and Roman usually.
And so we did a couple of Norse ones.
The problem is I took a bunch of the solar system names with Jupiter broadcasting, right?
Well actually, not only does that make sense, Dan, but it goes deeper than I first understood.
So I really appreciate you coming on and explaining it to me.
Wow, that's great.
I mean, that is so great because it clearly contributes to the developer story.
Just as a super quick follow up, if you could, how much has the one week reaction reeked
for the announcement about charging for upgrades or attempting to charge for upgrades?
Like now that you've had a week to marinate with it, how's that gone?
I think it's been really good.
We've got a lot of really positive feedback and interesting comments from people.
Is interesting a way of saying controversial?
Like really?
Is it like, are you guys like pulling back at all or does it feel like full steam ahead?
No, I mean, interesting in terms of bringing up things that we were looking for people
to bring up like, hey, what happens in this case kind of thing?
And by discussing it with other people and bringing it up where we've had more plans
to push into, okay, well now how does multi-machine work or how does a fresh install work as opposed
to an upgrade or things like that or like how that was one of the major concerns that
people brought up that we're currently working through is what happens if I want to transfer
my purchases to another computer?
That seems like a huge problem to solve.
I mean, that's the number one issue that I raised and I have even gone on the record
and said I'd be willing to pay a bit more if I knew that it would persist across all
machines.
But that just, that seems like...
It doesn't kind of be expected to be persistent.
It almost is, right?
In this day and age.
Because of other app stores.
Yeah.
I think that's a great point.
But the technical limitation means you have to somehow track me across all my machines.
Yeah.
So that's the major balance point, right, is how do we set things up in a way that is
convenient and adds these features that people want, but also in a way that is secure and
respects your privacy?
Yeah.
I do not envy that task, my friend.
Not in the least.
No, Wes and I cover that kind of stuff all the time on TechSnap and it is a massive technical
challenge.
And if you ever want to talk about it, you know where to come because we'd love to hear
more about it.
But I'm sure that's all down the road stuff.
In the meantime, anything else to note about the Junos release or about the announcement
about the bump?
Anything like that?
Well, you know, that wallpaper that I just made for the 5.0 beta is pretty fire and you
can go check it out on our blog and you should download that.
Even if you're not running the beta, which you aren't because it doesn't exist in the
public, you should just stick that wallpaper out there because it's pretty sick.
That does look nice.
I think I will.
Good call on that.
I've been following with more and more interest, Dan, so I appreciate you stopping by.
All right.
Well, we'll have a link to all of that shenanigans in the show notes.
Go check that out.
I think it's going to be a big release, you know, for a couple of years, two maybe.
No, no.
I don't know if it's two years.
I don't know.
I guess we stopped doing last in 2017.
And I think we, I don't know if you look at last, I think we kind of pulled back on reviews
a year before that.
That's a good point.
Yeah, you kind of did.
And right now I've got the itch.
I mean, so not only do we have a new version of...
Spring is coming up.
I know, right?
There's distros to try.
Oh, I thought you were going to say it's allergies.
Oh, well, that too.
It's a nasty itch.
I'm so sorry for you.
Yeah, I call it Mint 19 right here.
It's got a rash.
No, I just, I have a good feeling about some of the distro releases that are coming because
a lot of them are based on Ubuntu, which is going to be a major update soon.
But a lot of them are also trying to differentiate.
I've recently started following the Solus project again with a lot of close intensity.
I don't know if Aiki is just trying to lure me with his Sweet Siren song, but they're
talking more and more about their Plasma version.
And there's just a lot of good releases.
We just recently talked with the Fedora group about Fedora Atomic and all of that.
So there's just so much good stuff coming down the pipe.
And it just means that you and I have a bunch of good stuff to talk about.
And a ton of great things to try.
Anyways, let's keep going.
I got a chance to go down to Microsoft last Friday and...
Have they turned you?
I mean, should I be suspicious?
Am I safe right here in the studio next to you?
Do you like my Windows 10 system here?
It's nice, isn't it?
No, actually, in all fairness to them, they did not try to convert me to Windows 10 at
all.
So I got to give them credit for that.
We will talk about that in just a moment.
But first, I want to talk about DigitalOcean.
It's infrastructure on demand.
Super fast, really reliable infrastructure with eight data centers all over the world.
In fact, by the time you're listening to this, it could be more.
That's why companies like Docker and Slack and GitLab and Tesla use DigitalOcean and
Jupyter Broadcasting as well.
DigitalOcean.com.
Go over there, create your account, and then use our promo code DOUNPLUGGED.
It's one word, and you'll get a $10 credit.
You can spin up infrastructure on demand.
It's one of the things that Wes and I do all the time for TechSnap is when we're trying
something out, I'm like, how do we talk about this in a way that makes sense?
Wes knows exactly.
There's something we did recently.
I don't want to say it.
You know what I'm talking about.
I do know what you're talking about.
You know what I'm talking about.
And it's like, well, we want to talk about this in a way where we have actual knowledge,
like hands-on experience with it.
So you just spin it up on a DigitalOcean droplet.
You try it out.
Done.
I mean, we had that whole thing done within 10 minutes.
And then we just played around for the next 20 minutes just to see what we could do.
It's so great because you go from, I have this idea, to full production in minutes.
You can get started in less than 55 seconds.
And they have 99.99% uptime.
If you want to deploy just the base system or an entire infrastructure, you can do it
over at digitalocean.com.
And they've just revamped their pricing.
So it's just even more competitive.
It's just ridiculous now.
And they have mix and match droplets.
So in the past, it was like, you buy this droplet for this price.
And now you can just mix and match disk and CPU and RAM.
It's going crazy.
And then you combine that with block storage, which just shows up as a Dev SDA device on
your Linux rig.
Or you can go next level and go with object storage, which is 100% compatible with all
of the S3 CMD type API command stuff.
But it's on DigitalOcean infrastructure.
So really great backup programs on Linux.
And all of that stuff just works with DigitalOcean spaces.
It is so worth your time.
And if you can go over there and use our promo code with a $10 credit, that'll help.
You can play around with your own custom spun backup system that just specifically hones
in on your needs.
DigitalOcean.com.
Use our promo code DOUNPLUGGED and try it out.
See what you can do.
I had a, I have a, hold on Wes.
Breaking news.
Breaking news from the back office.
You can also just do a little, a little do.co slash unplugged in the browser.
Do dot co.
It really couldn't be easier.
Do dot co slash unplugged in the browser, hot in from the back office.
Preloads with the promo code and all that ass.
Just sign right up.
Done.
Try it out.
DigitalOcean.com.
Promo code DOUNPLUGGED or do dot co slash unplugged and a big thank you to DigitalOcean for sponsoring
the unplugged program.
That was, I tell you what.
Going down to Microsoft stressed me out.
Because I, this is why one of the main reasons I got out of IT contracting is I have this
really super weird anxiety about going to a certain place at a certain time when I have
to navigate like a comp, I'm actually having a slight panic attack just telling you about
this.
I'm really.
Take it slow.
I have this anxiety where if I need to be someplace that's like way south of Arlington
at a certain time and I have to like park somewhere and then navigate like a series
of buildings.
Especially somewhere you haven't been to.
Specifically it comes up when I go to Amazon or Microsoft or T-Mobile.
Like whenever I go to a, we're like a multi-building campus and I have to be in a certain conference
room at a certain time and just like I've never been to that campus.
So navigating it.
Do you know what I'm talking about?
I'm legitimately having a panic attack just telling you about this.
And so that is how I spent my entire Friday last week was that I spent the first half
of the day having a panic attack.
And then I spent the second half of the day going to Microsoft.
And then once I'm on site I am as cool as a cucumber.
Legitimately no anxiety.
I am 100% comfortable.
We just have to get you there.
Yeah I just have to get there and like get to where I need to be.
And once I'm where I need to be and I have plenty of time I'm completely comfortable.
So I showed up an hour early.
With traffic and anything else?
How else can you plan for that?
And I had my lady Hadia come with me for emotional support because she's really good at navigating
when I'm totally just like totally anxious out.
She'll do the driving, the navigating, the parking in the parking garage and like all
of that that totally takes care of my anxiety and lets me just focus on the task at hand.
And so she came with me to essentially be my emotional support partner.
I know that sounds ridiculous but I don't know what it is about these companies.
But they give me this sense of anxiety because like when I go to meet other business owners
or community members like we go to a bar or I go to their house or something like that.
But they're standing behind the counter and you're like oh hi yeah you own the business.
It's a totally different thing and so when you go to to Microsoft's Bellevue campus which
I had never been I've only I've only been to the Redmond campus at Microsoft.
It's like a totally different experience.
So you park in the parking garage and you work your way up the elevator and you go across
what they call the breezeway.
And I have a picture of it on the video version if you're watching right now of the breezeway.
And it feels like you're walking through an old Roman palace with marble everywhere fountains
Gucci stores with gold walls and LED lights.
So that's why you look so nice today.
Yeah it's it is it is full of stores that I think get one or two customers a day.
I mean this is a very ritzy place in Washington and Microsoft has a temporary they have two
buildings and the building I was going to is a temporary building.
They call it the Braven building.
And when I finally when I finally got there and I got past the Gucci stores and the in
the Prava stores and the water fountains and the statues and I got through the elevator
and got to the third floor I arrived at the reception desk.
And of course I had to get the parking validated because that's what you do in Bellevue.
Right absolutely.
You know what was a little disorienting is the first thing that you see isn't the reception
desk.
It's actually it's funny it's it's one of those things that's really it just drove home
to me.
I'm obviously in a business filled with geeks.
When you walk in through the main door the first desk you see isn't reception.
The first desk you see is tech support seems sort of appropriate.
So you get there and you open up the glass doors and you see this huge desk and you walk
up to it and you're like I'm here to see.
And before you get those words completely out of your mouth you see I.T. you see support
and you see guys that look just like you.
And you go this is tech support isn't it.
They're like they're like yeah receptions over there.
We get this all the time.
So obviously for geeks.
And so we get there we check in I get the parking validated.
I'm sitting around in like these future space chairs look like they're off the set of Star
Trek Discovery.
Are you wearing any Linux swag.
I did dude.
I wore the thank you for asking.
I wore the last finale head hoodie with the with the final last logo with the year.
It's the shirt I'm actually wearing now only with our full run year on it.
And I so I wore the hoodie but underneath it I wore my nicest blue business dress shirt
button down business shirt.
You're a professional.
And I wear nice slacks.
So I was going for the corporate lifestyle reject look so that way they could acknowledge
and accept me but and wouldn't feel off put but yet would understand I'm not one of them.
Right.
You speak their language but you're not.
Yeah that's exactly.
And so we're sitting around in the Star Trek Discovery future chairs and they all and you're
looking over this marble promenade that has fountains and glass fixtures and the Gucci
stores and then behind us are these future lights look like they might be the transporter
room on the USS Discovery.
And as I'm sitting there just sort of taking all of this in a Jeffrey's assistant walks
up to us.
I mean after all Jeffrey is a fellow at Microsoft.
Yeah.
Hi Susan.
Oh no problem.
So I hand off the microphone to Hadia and we go through several different layers of
glass doors that she seems to authenticate with her badge and then the glass doors open
and then she says something to us that sort of stuck out.
And I had to I had to like think about it for a moment before we sat down and before
we did all of our conversation she says to me and to Hadia would you like to buy something
to drink before we go into the conference room not would you like something to drink
would you like to buy something to drink.
Now my experience at the Redmond campus was on every floor they just have like a store
area where you can just go in and get anything you want for free.
But this is a temporary building that they're only in for a couple of years so they don't
have the traditional Microsoft infrastructure and it gives it like this small company feeling
because they're not like regular Microsoft.
Yeah we've got the soda machine out back if you need something.
So I turn around the corner and we meet Hadia and I we meet Jeffrey and Joey.
Thank you.
Hi I'm Chris.
Hi Jeffrey.
Nice to meet you.
Joey.
Nice to meet you.
Nice to meet you.
Nice to meet you.
Nice to meet you.
Nice to meet you.
Nice to meet you.
Nice to meet you.
Nice to meet you Hadia.
Hadia.
Hadia.
Nice to meet you.
Hadia.
Like quesadilla nice to meet you.
Yeah excellent.
Where should we sit.
You own the room.
Oh well OK then.
And Jeffrey might have been the most perfect person for us to talk to.
Yeah I'm Jeffrey Snover.
I'm a technical fellow at Microsoft.
He's been there for 18 years and Joey also joined us.
He's the PM for PowerShell.
And what's great about both these guys is they're Linux guys.
I'm Joey Aiello, and I'm the program manager for PowerShell Core.
But while I was setting up for the interview, and so I apologize for the audio and some
of the noise in the background, but we just had the recorder going.
While we're setting up to start talking to them, Jeffrey tells me that 18 years ago,
he never thought he'd work for Microsoft.
You know, I was reading your, or listening to your podcast about, oh, they're doing this
and this.
And it's like, no, that's not it.
No, that's not it.
Okay, good.
Well, that's a good place to start.
Exactly.
Way too much credit.
Oh, really?
Oh, I see.
See, I had some sort of master plan.
Yeah.
Well, I do tend to.
Yeah, that was the thing.
When I started the company, like, the last thing I wanted to do was to come work for
Microsoft.
You know, I thought them the evil corporate, evil empire, I knew all this.
And then when I came and visited, you know, I actually, my joke was I never joined Microsoft,
I joined this one executive.
He was just an awesome exec.
And then I got in here and it's like, oh, yeah, no, it's not malice.
It's not evil.
It's just people whose hair is on fire.
People whose hair is on fire, which totally echoes some of my other industry experience.
And so I'm like, oh, that's, that's super interesting.
Joey, the PowerShell project manager says, Oh, yeah, me too.
I was a Gentoo guy.
I never thought I'd work at Microsoft.
It was the same for me.
Yeah.
Really?
Yeah, I mean, come in from college, and I've been here almost four years and it's, it's,
you weren't thinking you'd be at Microsoft either?
No.
But you do.
Yeah, you come in and meet a bunch of smart people and everybody's solving problems and
it's like, oh, okay.
Yeah.
It's just, you realize very quickly, you know, everything was always official, right?
It's like you see something come out, like an update or something and it's like, oh,
it's Microsoft, right?
That like put this thing out and you're like, like, oh, it's just like, there's three guys
over there that just like did that, you know, yeah.
Especially when it's a big company.
You tend to think it's like, oh, it's a team of a thousand, a team of two thousand.
Right.
Right.
Exactly.
No, it's like general.
Wow.
Yeah.
It was really kind of interesting because they, they, they felt, I felt from them, like
they wanted to advocate their position.
And I got a sense that's kind of why I was there.
And the PowerShell team specifically, you know, now Microsoft has open sourced a lot
of things, including.NET Core, Visual Studio Code, and then PowerShell came along.
And I think they knew that there would be a lot of skepticism in the Linux community.
And they also knew that they had a long road ahead of them.
But I got the sense that they were completely committed to it.
And that's why I was there.
You know, we just knew we were not going to be greeted as like liberators to the Linux
community.
Right?
So it's like, okay, how do we deal with that?
How do we get the tone right?
Yeah.
How do we get the culture right?
Both in the product and how we engage them.
We're still trying to figure that out.
Yeah.
That's what the conversation was in CoderRadius.
So what is going on?
So I kept having the conversation.
I got them on mic.
This is all just on the preset up while we're getting ready to go.
I got them on mic and I started to get a sense of why Microsoft is trying so hard.
You know, you can judge how successful they are with engaging open source community with
being a quote unquote good Linux community citizen.
But I got a real sense that there is something that's driving them.
It's not just marketing.
I got a sense that perhaps the situation is becoming such that one of their biggest money
makers, Azure, is simply becoming a predominant Linux platform.
And that's just the reality that they're in.
And no matter how Microsoft spins the numbers, there's more and more Linux systems than Windows
systems on Azure.
Yeah, no, I don't know if you've seen, but on Azure, you know, look, here's the reality.
I mean, you just look at the world and do the math, right?
If we say Azure is the Windows cloud, okay, well then you're taking off a very large portion
of the world.
You're just saying, I'm not going to go get that market.
That doesn't make any sense.
And then you can't be a trusted supplier to those companies that said, I want a heterogeneous
world.
So we have been investing for years in great Linux support.
And now that number of Linux VMs is almost equal to the number of Windows VMs.
That's impressive.
Because I think the last number I heard from Azure was 30% or something like that, which
is getting higher and higher.
Yeah, it's going higher fast.
And he does one of these like way higher, like gestures, like it's maybe more closer
to 50-50.
And Microsoft can't spin that any other way.
They have to acknowledge that reality.
So he said something in there that sounded like spin, but I got a better understanding
of it.
He said, you know, we've invested for years in Linux.
Well, what the does that mean, right?
Yeah, that's a very vague statement.
I went deeper on that in Coderadio this week.
And I kind of encourage you guys to go check that out.
I know that's a super punt.
And I apologize.
But we just talk about the tools that people use for developing software deeper in Coderadio.
So in episode 296, Chris goes to Microsoft.
Specifically Joey, who we haven't heard from yet, talks more about retooling their Windows
only team around Linux and all of that stuff, which was really interesting.
So we do deep dive into how they made that transition.
But I wanted to talk with you guys about the really super awkward spot that I was sensing
that Microsoft is in.
And I really appreciated what they couldn't say in this clip.
I want you to listen with certain kinds of ears on.
Microsoft, I think, this is Chris here speculating, but I think Microsoft has realized that the
future is not on Windows.
The hot action for the future is not Windows.
Perhaps maybe they even have some insights into what a shit show Windows is that we don't
have on the outside.
And so they fundamentally understand at a level that we can't even appreciate on the
outside of why Windows is not our future.
I'm just going to speculate here for a moment.
Maybe I'm wrong.
But they seem to be in a very awkward position.
They can't just come right out and crap on Windows and say, Microsoft is no longer about
Windows anymore.
Microsoft is all about open source and Linux because they have a billion users on Windows
who will go, well, what the hell, guys?
What about us?
At the same time, they can't come out and say, Windows is the best thing ever because
they'll piss off all of the Linux and open source community, which is where they're trying
to get to.
However, we've had some experience here, and basically what we want to do is to not try
and give a signal on any platform.
As much as possible, what we want to do is we want to support all the platforms that
somebody wants at the same time.
So we had an exec that had come from Sun, and they said, yeah, so we're so committed
to Solaris, and people thought, well, we're not committed to Linux.
And so we said, you know what we're going to do?
We're going to prove that we're committed to Linux.
So we're going to do Linux a week before we release the Sun thing.
And then their entire customer base said, oh, so you're not committed to Solaris anymore.
It's like, oh, they just got it wrong.
So we don't always get that right.
But wherever we can, we're going to say, these are the platforms we want to support, and
support them all at the same time.
And then I suppose right now, from a lot of our perspectives on the outside, it's a bit
of spinning up to Visual Studio Code's out now,.NET's out, PowerShell is out.
It seems like a bunch of ketchup, but what this really is is going to just become the
new normal.
Yes, that's right.
The new normal.
Wow.
So what is that?
The new normal is they slowly bring a lot of things up to cross-platform over time.
So PowerShell and OpenSSH come to Windows, and PowerShell comes to Linux and Mac, not
because they just all of a sudden decided to flip a switch, but because they open-sourced
.NET Core.
And then they rebase PowerShell Core on.NET Core.
You see where we're going here?
I do.
And with that, after they've laid the groundwork for.NET, and they've gotten developers on
Git, and then once they've gotten developers understanding Git and taking pull requests
and all of that, then they get them on Visual Studio Code.
And once they have everybody on Visual Studio Code debugging the software, then they can
launch PowerShell Core.
And we go into more details in Coderadio.
But the thing that they said, which I thought was pretty remarkable, is PowerShell Core,
the version that's on Windows, and the version that's on Linux, and the version that's on
Mac, is replacing standard PowerShell on Windows.
So no more PowerShell on Windows.
I mean, it's going to be there.
They're going to maintain it.
Right.
Well, of course.
But the version that's shipping on Linux is the future of PowerShell Core.
Do you see what I'm saying?
The version that's on Windows, the original version of PowerShell?
I'm Joey Aiello, and I'm the program manager for PowerShell Core.
And Joey here for PowerShell Core is the guy that's heading all of this up and helping
them get ready to make this open source version to replace this version that's been shipping
on only Windows for years.
It's been phenomenal.
Yeah.
So we actually were proud to state that in the release of PowerShell 6 that roughly half
of the pull requests that came in for PowerShell 6 were from the community.
So they've open sourced PowerShell.
They went with PowerShell Core 6, and they've had a pretty good engagement from the community.
But I thought, you know, this was, I don't know, it's almost too perfect.
So I wanted to ask them a few other questions about it.
And I wanted to get specifically into bugs.
So I'm going to replay this clip from the beginning and taking a perspective of what
about bugs?
What about people contributing issues back to PowerShell?
It's been phenomenal.
Yeah.
So we actually were proud to state that in the release of PowerShell 6 that roughly half
of the pull requests that came in for PowerShell 6 were from the community.
In particular, we had a ton of work done in the web commandlets, the invoke web request
and rest method layer by one contributor in particular, Mark E. Krause.
There's also been a number of guys just sort of cleaning up the long tail.
This is one of the great things about open source, right?
You have people who know they need these really big features and are highly experienced and
are able to code up all these custom rest method and authentication headers and proxy
bypass and multi-part support and all these things in the web request layer.
But then you have folks who say, hey, all your error messages still say Windows PowerShell,
right?
And someone who has a lot less coding experience is able to sort of jump into GitHub, make
a contribution for the first time, scrub all these error messages and improve the product
for everybody.
And it's one of those things that we know is important but that we'd probably not get
around to or if we did, something else would have to get sacrificed, right?
And by having people who, the sort of Wikipedia approach, right, of like you have a thousand
people fixing your typos, then you really end up with a much higher quality product.
And we've seen a lot of that in PowerShell.
And I think that 50% community PR number is a testament to that.
Yeah, okay.
So that is pretty good.
Yeah.
But I pushed Joey a little bit further.
I'm like, okay, yeah, but there must have been some sort of esoteric typical open source
community moment.
And Jeffrey and Joey kind of both smile and they look at each other and go, well, there
was the very first issue that came in that happened to be a bit memorable and it happened
to be from the curl developer.
So we're all sort of very happy and patting each other on the back.
And about five or six hours later, a pull request came in from none other than the creator
of curl.
I'm going to get his name wrong, but his first name is Daniel.
Really awesome guy.
We had an email exchange afterwards and just a super nice guy.
But the gist of the pull request was simply to remove two aliases from PowerShell.
So some years ago, PowerShell had used a bunch of aliases for some of the core commandlets
in order to entice or make things more comfortable for Linux users with no expectation at the
time that PowerShell was going to ship on Linux.
So for instance, ls was an alias as was dir for get child item to get the directory listing
or even CD.
So some of the aliases that were added were curl and wget.
And those were there to draw users to invoke web request and invoke REST method.
Well, the creator of curl, rightfully so, said, that's the name of my project.
You're not invoking curl.
Curl for Windows has been out for a very long time and you're making things really hard
for my users who have to tack on.exe in order to run curl for Windows.
So now that you're open source, you're trying to be good guys, add this back or remove this
alias.
And we responded in kind saying, hey, this is totally agree with you.
This is a breaking change.
We got to follow our governance process here that we had fortunately codified very explicitly
and said this is our process for breaking changes.
And he was very amenable and understanding of that.
But within a few minutes of having posted that pull request, it was now number one on
Hacker News.
And we had GIFs and trolls, Michael Jackson eating popcorn, hundreds, like it took minutes
to load in my browser kind of thing.
So we got a very good lesson very early on on the importance of optics and how these
things – it was these two aliases that really drove hundreds of people to our project.
But ultimately I think we took care of it in a memorable way and we removed the aliases
among a number of other aliases in PowerShell Core.
We decided to leave them in Windows PowerShell for some period of time because users were
depending on them.
It's now best practice not to use aliases in scripts so that you're not depending
on them.
But the nice epilogue as we were saying to the story was that Curl is actually now available
in Windows.
So we need to go revisit that and yeah, in the next version of Windows we're shipping
Tar and Curl.
So yeah, we live in a brave new world for sure.
A brave new world that ships Tar and Curl in Windows.
Heck yeah.
You know, I bonded with Joey.
So Jeffrey –
So that's where you get that pro license from, I see.
What impressed me about Jeffrey is that he has been at Microsoft for 18 years.
And we cover this in Coda Radio, again, sorry, obnoxious plug, but he talks about how he
went into Microsoft and created PowerShell with the intention of essentially trying to
rip off some of the stuff you can do in Bash.
He's like, I even wrote a blog post about it.
I've always acknowledged this.
And it turned out it failed horribly.
And then he totally talks about why it didn't work on Windows and it's super interesting
because it's much more about where Linux is now with JournalCTL and it's a great talk.
Obnoxious plug one more time.
Go check out the whole interview because I really went down there for Coda Radio and
I grabbed that stuff for this show.
I went down there.
So go check out Coda Radio 296 where we have more.
But I love talking to those guys because neither one of them thought they'd be Microsoft employees.
And then they ended up there.
Jeffrey's been there for about – Jeffrey's been there for 18 years.
Joey's been there for four years.
And he and I were Gentoo users at the same time.
So we – after we were done –
Kindred spirits.
Yeah, we chatted about all of that and had a good chat.
But JJ, I know you had some things you wanted to mention and I wanted to open it up to the
VLog for anybody else.
But JJ, did you have something – I saw something go by that you wanted to start with.
So I open it up to you, sir.
So me personally, I am a dual booter still at this moment at this time in this conversation.
And I also still pay attention to a lot of Windows news and it's not really a surprise
that Microsoft is embracing open source.
Satya Nadella's – during the early days of Satya Nadella's tenure, he sort of emphasized
the future is with devices but not specifically Windows devices.
And I do remember that presentation he had with that iPhone with Microsoft services on
it.
And that was like a shock to a lot of – probably a lot of Windows geeks.
And also with the fact that Windows Mobile is not really a viable option at this point
and other stuff like that.
And there's also talks about also with the future of Windows 10 S and also with the rumor
Polaris devices.
It seems that Windows seems to be less of a power user OS and more of a normal OS.
But I'm not sure if like Linux will take – I mean Linux will probably take over the
power users to those who actually really want it.
There are still those enterprises who sort of are not looking at Linux at the moment
and I'm sort of – it's sort of a mix.
So I couldn't like put this in recording and play it as a clip.
But the thing that I walked away with, the understanding that I managed to achieve, like
the meta understanding was – how do I put this in a way that's not insulting to myself?
So a lot of the stuff that I have sort of been calculating as a master stroke by Microsoft
to sort of embrace and extend Linux isn't so much that as it is the result of about
three and a half years of people that used to be suppressed that now have a little more
leverage and certain people were laid off and made room for folks like Joey about four
years ago and guys straight out of college that were running Gentoo four years ago were
allowed to come into Microsoft and run things like the PowerShell group.
And they did a bit of a changing of a guard.
And there were people like Jeffrey who's been there for 18 years who are always kind
of hip to – I'm coming here as a former Unix user and I want to bring Bash to Windows
– which is where PowerShell came from.
So he was already kind of hip to the future direction.
So folks like him now have assistants and their own corner office and their own people
working beneath them and they can summon podcasters like me to their office because they hold
way more authority than they did under Balmer or Gates.
And folks like Joey who's four years out of college are running the PowerShell core
group now and he's got people on his team where they run Max, that's all they do is
they use Max.
He's got a guy on his team who runs Arch, he's got plenty of users, we talk about people
that are running Ubuntu because they're working on PowerShell which is a shell so they have
to be using it every single day to work out the things that shells do differently on different
operating systems.
Absolutely and also I would like to say that I do have a connection to I think the head
of the Microsoft graph and he's an open source proponent and Linux user as well.
Well I'm not sure if he's an open source proponent but he does use Linux.
Yeah I kind of wonder if the big secret about Microsoft isn't anything that we've speculated
about like the thing that we've missed is the dirty secret, the elephant in the room
about Microsoft is they've moved beyond Windows before their customer base has.
Oh yeah definitely.
Right?
Very much.
Yeah of course.
But they're still making money from it so they can't say anything and it's super awkward
for them and so like you go down there and these guys are pretty enthusiastic about what
they're doing but they can't come right out and say Windows is the past because they'd
be happy for people to continue using Windows for the next 25 years.
Go ahead they'll sell it to you.
Yeah go ahead we'll ship it on Windows, we'll ship it on the web, we'll ship it on the Mac,
we'll ship it on Linux, we're happy to do it.
They used a term that we go into more detail on QuotaRadio but they use a term called Ambient
Microsoft.
Ambient Microsoft.
They just want to be anywhere and everywhere that you might need them and he said Jeffrey,
the mission that was communicated to him by Saatchi directly, make it possible for our
customers to do more with their computers and our sales guys will figure out a way to
make money from it.
So that was the directive, not make it work on Windows, not make it a platform lock-in,
figure out how to make them more money and get them to do more work with their computers
and our smart sales guys who we pay way too much money to will go out there and figure
out a way to nickel and dime them for it.
So he's detached now from that and if you think about that, that's an interesting thing
because that's where PowerShell comes from on Linux because now Linux administrators
from their Linux, from their Ubuntu desktop can manage with one script an Ubuntu box and
15 Linux servers and 15 Windows servers and 15 CentOS servers and 15 SUSE servers, right?
And a handful of Macs.
All of these now can be managed from one script and they take care of all of the communications
between RPM and Debian or all the different implementation layer things.
If you're a Windows shop and you've got a bunch of SUSE systems and Ubuntu systems and
CentOS systems, that's pretty valuable all of a sudden.
Or you buy someone else and they have those systems.
Which is actually something that happens more often than we talk about.
Totally.
Then you start to understand, oh, that's why it's ambient Microsoft, that's why they're
open sourcing.NET Core and PowerShell.
Because then all of a sudden, when you're coming from a huge Microsoft infrastructure
and on-premises setup that's really deep in Windows, you can use some of your investments
in scripts to administer your systems, to set up users, to create databases, to set
up patches.
You can start to leverage that time across Linux systems.
And it can be on an Ubuntu, a SUSE, Fedora, CentOS machine.
And the name attached to it, the brand attached to it, is Microsoft.
Which is about as damn good as Google, Apple, and Microsoft.
And then whether you need new infrastructure, be it Linux or Windows, you'll reach for their
cloud.
I'm not sure where I sit with all of this, but I do recognize from a position of somebody
who was in the trenches trying to implement this stuff and when somebody would come at
you with, well, this is IBM Tivoli backup.
It's made by IBM.
So we should implement this.
And then we did it.
And it was the worst freaking backup system we'd ever used.
And then later on down the road, well, Microsoft recommends that you should upgrade an NT4
network to Windows 2000 and definitely don't use this Linux thing.
And then that all of a sudden became a benchmark in which we were judged by.
And it was this, you couldn't avoid the brand.
Well now that brand can be used to manage Linux systems.
And they can be on-premises.
They can be in Azure cloud.
They can be on digital ocean.
It doesn't matter.
And they don't care.
They don't care.
They legitimately don't seem to care.
If you want to run it on an Ubuntu box and you don't have any Windows systems on-premises,
but you want to use PowerShell, they're happy.
Go for it.
Yeah.
They're good with it.
Like, okay, we'll be there.
We're Ambi at Microsoft now.
It's really something.
Just like the rain, man.
Just like the rain.
I don't know what to make of it.
Yeah.
They're basically taking the Pacific Northwest weather patterns and applying it to...
It's an interesting structure, too, for the business.
Instead of building what the salesmen sell, the salesmen are selling what you create.
It also leads to better products and all that from Microsoft.
With regards to the Microsoft Garage experimenting on Android and iOS with many of their apps,
this idea sort of stemmed from their mobile give-up of Windows Mobile, I would say.
Yeah.
I think after Windows Mobile kind of failed and Windows RT and all that stuff, and then
Satya Nadella takes over, there's just sort of this, all right, we'll figure out how to
make money at doing this.
That's just sort of been the drive.
So I have a question.
I'm actually seeing Microsoft moving away from providing an ecosystem with their operating
system to more something like providing infrastructure and projects regarding software that runs
maybe everywhere.
Yeah.
Right.
I would agree with that sort of summarization.
Yes.
Okay.
But what about all the legacy software that is out there that relies on the Microsoft
Windows 10 code base?
Yeah.
Then they're happy to keep making money from that, too.
Yeah, sure.
But that's definitely not something that will change in a few years.
No, I think that's...
That's not going away that quickly.
I think that's why they're more than happy for the situation.
That exact reason.
Right.
Yeah.
And there's also the bridges such as...
Wait.
Hold on.
Let Producer Michael go.
Sorry.
I was just going to say that Microsoft is compartmentalized.
So yeah, this one group might be...
We want PowerShell to be everywhere.
We want Azure to have Linux and.NET is open source and all that stuff.
Yeah.
But the other side is making Windows 10 and they're locking everything down.
Yeah.
There's different...
There's different priorities, there's different fiefdoms.
However, I did genuinely get the sense that what they're cooking, everybody else is smelling.
It starts with one or two projects and then it's something else in the company, then something
else and it does seem to be a bit of a snowball effect.
But I'm not going to say you're going to tell you that they're going to open source Microsoft
Office.
Right.
But the autonomy is interesting, too, right?
It's more about...
In some ways, it's about they weren't told no.
It's like, oh, you want to make VS Code an Electron multi-platform and you're not using
Windows technology?
Not a problem.
And so that just gets fed back into the company.
Yeah.
And now when they write the debugger for.NET Core, instead of it being a Visual Studio
only thing, it's something that they just sort of like open sourced and there's like
an Emacs plug-in.
You can do it in Vim, you can do it in Visual Studio Code, you can do it in Atom.
It's just this...
All right.
So they're going to see this approach and I think it's going to make them just a crap
ton of money.
Yeah.
Yeah.
Yeah, it is.
It is.
And they're going to get rich.
They're going to make...
They're going to be...
They're going to be one of the biggest money makers off of open source.
Isn't that something?
They've gone from cancer to this.
I mean, it was deep and, I mean, think about this.
We need to move on.
But think about this.
It was in the DNA of this company.
Like Bill Gates goes to one of the computer clubs and says, you're devaluing software
by giving it away.
He writes him...
He writes this letter, a manifesto and says, we've got to stop giving away software.
We've got to charge for it.
I mean, it's in the DNA of the company.
And then Bill Gates moves on, he goes and becomes whatever he is now.
And Balmer takes over and it's all about Windows everywhere.
It's all about Windows everywhere, Windows first.
And now here we are, and Linux is a cancer when Balmer's running.
And now here we are with Saatchi and the people that have sort of been reshuffled underneath
Saatchi three or four years later, definitely feels like a different message.
What were you going to say?
Yeah.
So it seems like Microsoft has got the Linux chemo in now.
Yeah, right.
They did, right?
Yeah.
Nice.
I mean, wherever we're at, I think one of the bigger commentaries is the Linux Foundation
now will sell you a $300 course, a $300 course on administering Linux on Azure, LFS 205.
It is a course from the Linux Foundation on using Linux on Azure.
That's where we're at in 2018, is the Linux Foundation is selling you a $300 course on
that.
I'm signing up right now.
I mean, if that doesn't tell you where things have gotten in the last few years.
So everybody's waiting around for it.
I appreciate all you guys waiting.
We're going to do our plasma check-in.
You're running it.
Yeah.
I'm running it.
I've been updating like crazy.
Like crazy.
Yeah.
You even did too.
I thought you weren't going to update this.
I don't know.
For some reason, I thought you were on a different version or something.
I thought I was too, but no, I've been keeping up better than I realized.
Look at me.
You know what, Wes?
This is what happens.
Wes either manages all his systems with this centralized management platform that can handle
millions of systems or he's just app get updating like a maniac and then a little upgrade here
and there and who cares, right?
You know it.
I like how you roll, Wes.
Well, so I've been trying out KDE Neon User Edition and other folks like, I think, Popey
and I know Noah have been trying out KDE Neon LTS Edition.
Well, those evil planning sneaky jerks over at the Neon Project who have been setting
all of you LTS users up for ages, preparing you for a big, big trick, have pulled out
the rug from underneath you and devastated your lives by hiding the Neon LTS Edition.
So I gotta tell you, so every week, there's a couple of stories that I get a bunch of
feedback on or like links.
And I actually am not saying this to stop any of it because sometimes it's actually
a very valuable data signal.
So I'm not disparaging those of you who did this, but I got a lot of telegrams and tweets
and emails this week about, hey, Chris, did you see what they're doing?
Hey, did you see what they're doing, Chris?
And they would send me the link to this blog post.
It's short, it's one paragraph, it's one dense paragraph by Jonathan Riddle over at the Neon
blog.
And it says this, with the new Plasma LTS came an update to KDE Neon LTS Edition and
lots of people asking which edition to use and what the difference is.
I'll say this too, by the way, once we announced the KDE Neon Plasma Challenge, the number
one question without any kind of like close competitor, the number one question that we
got was, are you doing the user edition or the LTS edition?
And what's the difference?
In fact, I would be willing to bet, producer Michael, is that not one of the number one
questions that's in the telegram group and then the community is, what's the difference
between the LTS edition and the user edition, yes?
That's the number one question I get every time someone ever mentions Neon at all.
And so I'm not surprised when I read that that was the number one question that came
into the project.
And so they say this caused us to review the purpose of the LTS and as a result, we've
just hidden it from the download page.
So I wanna dig a little bit into this for a second because it has caused some people
to say, what's going on?
Why is the project abandoning their LTS?
What's going on with?
I don't know.
Figure it out.
Well, you know what we have figured it out.
We have, and we'll tell you more about it here in just a moment.
But first, as we do here on the show, we gotta pay the bills, we gotta thank Linux Academy
and I gotta thank everybody for signing up at Linux Academy.
You might notice that we have the same sponsors here on the show from time to time.
I don't know if you've noticed that or not.
Have you noticed that?
Not at all.
Yeah, I appreciate that a lot, Wes.
No problem.
I got your back.
Yeah.
Just like Linux Academy.
Yeah, they do, don't they?
And here's why.
We could spend our time researching show topics, contacting guests, building community, trying
out different infrastructure items.
Or I could spend my time selling the show to different advertisers.
And I could have mattresses on here.
I could have food.
All the mattresses.
Hey, what about HelloFresh?
Would you like to have some sleep?
That does sound fresh.
Yeah.
Well, there you go.
And what I've decided to do instead is I've decided to invest in certain sponsors that
are genuine fits for our audience.
Like Linux Academy.
I honestly know that all of us can use this service.
I'm a subscriber, so I can say that with confidence.
They give you advanced training tools to increase your skills and encourage critical thinking
around everything about Linux.
So think about that for a moment.
That's where they start, right?
That's where they start.
So that's going to make you super competitive in the industry.
And then they give you the tools to accomplish this, like hands-on labs, scenario-based labs.
They'll spin up virtual machines if it's AWS or if it's a local Linux box.
You can SSH into that and get a hands-on experience.
They have human beings, actual instructors that can help you whenever you get stuck.
They have self-paced in-depth video courses on every Linux, cloud, and DevOps topic.
And my favorite freaking feature about Linux Academy is their course scheduler.
Because I've got three kids, I run my own business, and I fancy myself a road tripper.
So when the hell am I going to get any kind of studying done?
When am I ever going to learn about new things?
Well, my friends, Linux Academy has a course scheduler.
You pick what she wants to do.
You set your time frames, and they'll help you stick to it.
If you want reminders or goals, you want to download the study guides, they'll help you
do all of that.
And then when you're ready to take the exam, they've got testing for that too.
LinuxAcademy.com slash unplugged.
Go there, sign up for a free seven-day trial and support the show.
LinuxAcademy.com slash unplugged.
And a big thank you to Linux...
I know, right?
A big thank you to Linux Academy for sponsoring the Unplugged program.
Okay.
LinuxAcademy.com slash unplugged.
So guys, let's do our plasma updates.
Let's do our plasma check-in.
Because I thought this would be like a big production, because we made a big deal about
it last week.
And now that we're here, I just have a big...
This is what I'm doing now.
This is how I'm doing it from now on.
It's just sort of now my life.
I don't have like a, oh man, plasma totally failed me story.
I don't have anything like that.
It's just a big, this has been great.
And I would say I like it better today than I did the week before and the week before
that.
Is that right?
Yeah.
Why?
Well, the 5.12 upgrade was solid for me.
And I think you experienced this today too.
When I move between machines, and then I open up console, and it's been like a week since
I've opened up console, and that son of a bitch opens up in the same exact place that
I opened...
You know what I'm talking about.
I sure do, yes.
It opens up in West.
It's just right there.
Right where I left it.
Right where my memory goes, where my muscle memory goes.
It's like super small stuff like that.
I mean, it's that times a thousand.
I know that seems stupid and small, but if you added up to all of the stuff, like the
quadrant tiling, when I'm moving my windows around, and the way it snaps, then I can resize,
it just works so damn fast and efficient.
I can't even help myself.
You feel like you're coming home a little bit more?
Yeah.
It's like mom's cooking.
It was nice, but it was more like I was using a public terminal and I kind of spun up a
new shelf.
You know what?
Here's what it is, West.
Gnome is like me living out in the city.
I'm out living in the city.
It's clean.
There's a lot of different delivery services.
It's kind of got like a coldness to it.
That's gnome.
That's gnome.
But like plasma, plasma is like coming home to mom's cooking.
Get it out of here.
And it just is delicious.
It just works the way I want it every time I come back to it.
You know, it's just the same thing mom's been making me for the last three weeks.
And if it's-
Cheesy goodness right there on top.
And if I haven't gotten, I'm going to underball this.
Everybody likes to exaggerate on the internet.
I'm going to under exaggerate here for a second.
I've gotten a hundred different tweets and telegrams and emails and I'm under exaggerating.
And I would say eight out of 10 are switching.
Wow.
Yeah.
I would say there's a couple that are like not working for me.
In fact, the number one thing I think I've heard because it's about five of them is they're
going back to cinnamon.
Cinnamon.
Interesting.
Cinnamon.
Cinnamon.
I know.
Right?
Okay.
I know.
I mean, I've enjoyed cinnamon a lot.
Me too.
Me too.
Me too.
Me too.
Me too.
It's just funny though.
It is funny, right?
Okay.
I'm not trying to laugh at them.
No, no, no, no, no.
I'm not.
I'm not.
I'm not.
Because I've been there.
But it is like a weird one.
Cinnamon.
Anyways.
You said them like a mate link at the end.
So I want to go around the horn here and I want to start with Mr. Neonpoby because I've
gotten a lot of different people interested in this.
But the one I'm most curious in is, I don't know, maybe I'm wrong, Poby.
But I think you and I were both like Unity 7 for life before this experiment.
Correct?
Yeah, I'm not a distro hopper by any stretch.
Like I've used Unity for years and years and before that I used Nome 2.
I've used Ubuntu forever since it's existed and before that Debian and before that Red
Hat.
So we're talking a very, very long time ago.
So I just don't switch distro at all.
And that's not because I'm employed by Canonical, but I didn't switch before I started working
at Canonical.
That's a big waste of work and time.
Like that stuff.
Right.
It's getting used to new stuff.
You got kids.
It's like, you know, that whole question about why do you use what you use, it's because
I like it.
It's not because the competition is terrible or because other things, you know, have awful
workflows.
It's just I like the workflow that I have.
So everyone else who hates it, fair enough, use something else.
I like this.
Yeah.
Well said.
I like Unity 7.
So yes, I have been, you know, Unity 7 for life, Unity 7 Master Race and all that stuff.
But you suggested KDE Neon, so I thought I'd give it a go.
Now here we are.
You and I are over two weeks, really, in how long we've been using this, but it's a solid
two weeks.
What is your thoughts?
If you don't count the faffing around on the plane, yeah, I'm still using it.
I'm talking to you now from a mumble snap on KDE Neon like I was last week.
Still works.
I don't even think I've rebooted since last week, I don't know.
But yeah, it just works.
It wakes up super fast when I open the lid and all my windows refresh and like you said,
you open console and it opens in exactly the same place, the same size, same font size.
Everything just remembered where it was.
Yeah, everything seems to be working.
I didn't have quite as smooth experience as you did with the upgrade to 5.12.
Really?
You went from 5.8 to 5.12.
You got it the day before I did.
I went from 5.11.
No, that's not why.
So you did it the day before I did and I got it pretty soon after the next day.
The problem I had was their server went down while I was midway through an upgrade or they
rebooted it or it had an outage or it was just, let's be favorable and say it was super
popular because there were lots of people joining us on this journey and lots of people
are upgrading at the same time.
Could be.
That's entirely plausible and so I got network disconnections connecting to their server.
We unplugged them.
Oh.
Yeah.
But all I did was wait a little while and restart the upgrade and it carried on fine.
So no problem.
I've upgraded to 5.12 and everything seems ticky-dee-boo.
Yeah.
So they're hiding the LTS version and my sense of it, and producer Michael, I'd like to hear
your take on it because I know you've been watching the situation, is my sense of, well,
there was some bugs in the LTS version specifically around Discover software that we just didn't
catch because nobody on the team is using it so we don't really want to put it forward.
The LTS version is still going to exist, the repositories are still getting updated.
The main difference between the LTS version and the user edition is that the LTS version
ships plasma LTS.
User edition ships current plasma with the current Ubuntu LTS.
But wasn't there some sort of issue with Discover that sort of brought all of this to a front?
It's an issue with Discover every time they make a new version.
Is there really?
See, I didn't know that.
Is this like a common thing?
Discover is a...
I mean, someone who's a plasma fan, Discover is annoying.
Yeah.
I mean, it's one of those features that's really kind of nebulous because it's built
for this supposed new user, right?
I mean...
Discover has amazing ideas and concepts, it's just they're not fully flushed out yet.
So there's a lot of annoyances in that case.
But as far as this goes, it's really a Discover problem.
The main thing is that there's people not using it.
The developers don't use it, so they put so little attention into it, it doesn't really
make sense for them to do it.
Bugs slip in there.
Honestly, I never thought they should have done it in the first place because it defeats
the point of neon.
Right.
Yeah.
Because if you're going to roll your entire stack on top of a LTS base, why make part
of that stack stop rolling for some reason?
I'd say I haven't had any issues with Discover and I almost never open it.
As I mentioned last week, I installed half a dozen snaps and I'm done.
I've got every application I need on this system and anything, any additional libraries
or command line tools, I'll use AppGet to install.
The only time I've opened Discover is when I saw a notification that told me I had some
updates to do.
So I clicked it and Discover opened and I pressed apply and they ran and then I closed
the window and it went away and I was perfectly fine.
Discover 5.12 is 10 times better than 5.11.
Oh, nice.
Oh, really?
Yeah.
It's just that some people who are using the older versions, if you did a full upgrade
from Discover 5.11 or 5.8, it might not go as smoothly.
But if you use 5.12 to do any updates, it's perfectly fine.
I've done updates with Discover just to test it to see if it would do the full thing and
it most of the time works.
But when it fails, it fails badly.
That's why it's not reliable.
I would just say it's like, well, 5.12 is so far.
I just don't think people should use the super old stuff anyway.
That's why I never really liked the plasma LTS anyway.
And they're not getting rid of it, right?
Yeah, because they're still testing against it.
Yeah.
They still use it for development.
When I did the plasma video, I had to do some benchmarking so that was perfect that they
had it so I could use 5.8.
But other than that, I mean, I wouldn't bother with it because the fact that you get the
stable upgrades from all the different plasma versions is great.
I've done multiple tests, multiple machines.
Plasma never crashes on any updates from any version, so there's no reason not to just
use the regular Neon.
Yeah, I actually agree, especially from an end user standpoint.
I'll tell you where I can see the purpose of an LTS version of plasma, and that's when
it comes to enterprise distros.
Now, take that for a second and then let's sort of zoom out.
A lot of the people that are talking here have been using desktop Linux for longer than
15 years.
So we all kind of have some standing in this area.
Popi, were you going to say something?
No.
No, and we're all saying this is working for us, and we're all saying this seems to use
less resources despite the plasma is bloated myth.
It seems to be waking from sleep faster.
It seems to be more stable.
It remembers my settings and it crashes less.
And like in Popi's case, he doesn't even think he's had to reboot in the last week.
I don't think any of us are saying it's perfect.
I don't think any of us are saying it doesn't have about a thousand defaults you might have
to change.
Yeah, I just checked.
I've got an uptime of six days and 13 hours.
So no, I haven't updated since last week's show.
Yeah.
And you know, let me see.
So this machine here that I do every single show for Jupiter broadcasting on currently
has, yeah, this has an uptime of five days with three users.
And I think that's only because I updated, I rebooted after I updated at 512 five days
ago.
And this is like a common thing I do.
I tend to leave my, I like leaving all my windows open.
I just slam the lid shut, open it up when I want to carry on.
And I like, I quite like having quite long uptimes and I like systems that are robust
that can cope with that.
This is the fricking elephant in the room and we have to go cause ask Noah's coming
up.
And I'm like, you guys, like, so why is Gnome the desktop, the shipping on all of the enterprise
distros that are going to be supported until the middle of the 2025s or whatever?
What is it?
Why is it on plasma?
Legacy and branding.
People have known about Gnome for so long that just it has the market share, it has
the recognition, the whole KDE's bloated thing that's been going around for years, which
has never been true at all at any point.
And like people just kept saying it, there was one bug in 4.3 no 4.2 of plasma that made
it sluggish for about four weeks until they replaced it, replaced it with 4.3 and at that
point forward it was fine.
But that one thing just created this weird onslaught of just bad reputation for KDE,
bad reputation and it doesn't make any sense other than weird legacy, weird reputation
and kind of bad branding because KDE isn't the name of the desktop and that's it's still
the most common phrase describing the desktop.
So they need to fix their branding.
I'd say probably the reason why people choose or projects have chosen Gnome is probably
because there's a billion dollar company behind it.
Like most of the, if you ask any person in the street who's behind Gnome, they'd say
Red Hat.
They wouldn't say a community of developers, which they might say for KDE or plasma, they'd
say there's a community, nobody knows who Blue Systems are or how much money they have
in the bank, but Red Hat are a well-known company, long established, well-respected
company who are behind the Gnome project.
So I think that's a reasonable reason why people choose Gnome.
Yeah, I think that's it and that seems pretty reasonable to me.
The only problem is that we are heading full head, full steam ahead into Gnome.
Even though a lot of us in this room who've had a lot of years doing this are saying maybe
and I think that's why we see a lot of projects like Solus and elementary OS that are trying
something a little different to try to strike that difference and Ubuntu MATE and the MATE
project itself.
Also, I bet you something to do as far as like the technical aspects, there's been a
longer thing about of Qt.
People had a problem with Qt licensing and stuff and they didn't want to deal with that
maybe.
True.
Yeah, that's a good point.
Yeah, that didn't help.
I don't know.
It's not a zero sum game.
For KDE to be good, Gnome doesn't have to be bad.
Yeah, exactly.
For Gnome to be good, KDE doesn't have to be bad.
They can both be good in their own right.
Absolutely, 100%.
It just happens to be that Plasma is good and Gnome is bad.
Oh, no, no.
Come on.
It was so good there.
It could have been the perfect ending and then you took it from us.
But I actually, I want to echo that point.
I think Popeye is completely right.
And it may be that they excel at different things and that the mass market perhaps Gnome
works well and KDE works better when you have a foot in the game a little bit more.
Yeah.
Either way, I think a lot of us are sticking around on the Plasma desktop, which is pretty
awesome if you think about it.
That's going to be, I don't know.
It's a big switch for a lot of us.
A new era.
It is a new era.
