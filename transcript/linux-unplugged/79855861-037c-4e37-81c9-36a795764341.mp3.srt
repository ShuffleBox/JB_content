1
00:00:00,000 --> 00:00:02,500
OK, so we have some pretty spooky audio.

2
00:00:02,600 --> 00:00:03,800
All right, I'm going to play this.

3
00:00:03,900 --> 00:00:06,040
This is a real thing observed by scientists.

4
00:00:06,140 --> 00:00:08,340
See if you can figure out what it is while you're listening.

5
00:00:08,340 --> 00:00:30,640
All right, Brent or Alex, do you have a guess as to what we're listening to?

6
00:00:30,640 --> 00:00:31,640
Well, I have a guess.

7
00:00:31,640 --> 00:00:33,980
I don't know that I know what it is, but it sounds to me like, let's say you're in Miami

8
00:00:33,980 --> 00:00:38,400
right now and you might be at the, you know, the racetrack where they have the boats sitting

9
00:00:38,400 --> 00:00:39,400
in the false water.

10
00:00:39,400 --> 00:00:44,120
If you were underwater watching watching the race, that's what it would sound like.

11
00:00:44,120 --> 00:00:45,120
Hmm.

12
00:00:45,120 --> 00:00:46,120
Right.

13
00:00:46,120 --> 00:00:47,560
Because not only is today Mother's Day, but it's also Formula One day.

14
00:00:47,560 --> 00:00:48,880
So happy Mother's Day, everybody.

15
00:00:48,880 --> 00:00:49,880
But go ahead.

16
00:00:49,880 --> 00:00:50,880
What do you think it is, Alex?

17
00:00:50,880 --> 00:00:55,820
I think it sounds a bit like plate reverb where they have the big metal plate in like

18
00:00:55,820 --> 00:00:59,360
the basement of a recording studio, and that's how they create reverb.

19
00:00:59,360 --> 00:01:01,520
I like that idea.

20
00:01:01,520 --> 00:01:03,640
I think that makes it a lot less spooky.

21
00:01:03,640 --> 00:01:07,040
When you find out what it is, it's extremely creepy.

22
00:01:07,040 --> 00:01:12,200
This is the sonifications from a black hole that NASA has observed.

23
00:01:12,200 --> 00:01:13,200
Right, Wes?

24
00:01:13,200 --> 00:01:14,200
Yeah, that's right.

25
00:01:14,200 --> 00:01:16,520
The black hole at the center of the Perseus galaxy cluster.

26
00:01:16,520 --> 00:01:17,520
That's what it sounds like.

27
00:01:17,520 --> 00:01:22,620
And it sounds like to me, thousands, maybe millions or billions of souls.

28
00:01:22,620 --> 00:01:25,840
This is so cool because, OK, there's a lot of different sonifications, right, where you

29
00:01:25,840 --> 00:01:28,360
take some data and you map it to sound.

30
00:01:28,360 --> 00:01:34,480
But this is actually measuring pressure waves in hot gas in this galaxy cluster.

31
00:01:34,480 --> 00:01:35,780
It's actually sound.

32
00:01:35,780 --> 00:01:38,960
It's just, you know, 57 octaves below middle C.

33
00:01:38,960 --> 00:01:54,720
Hello, friends, and welcome back to your weekly Linux talk show.

34
00:01:54,720 --> 00:01:55,720
My name is Chris.

35
00:01:55,720 --> 00:01:56,720
My name is Wes.

36
00:01:56,720 --> 00:01:57,720
My name is Brent.

37
00:01:57,720 --> 00:01:58,720
My name is Alex.

38
00:01:58,720 --> 00:02:00,000
Hello, gentlemen.

39
00:02:00,000 --> 00:02:01,880
I love these episodes.

40
00:02:01,880 --> 00:02:05,000
It's one of these weeks where I can't tell you what we're about to talk about.

41
00:02:05,000 --> 00:02:06,720
I got no idea.

42
00:02:06,720 --> 00:02:11,240
We're each bringing a topic to the show and we're going to find out live with you what

43
00:02:11,240 --> 00:02:13,240
each of us has to say.

44
00:02:13,240 --> 00:02:17,320
But then, of course, we'll get into the traditional steaks and eggs and sides, I guess.

45
00:02:17,320 --> 00:02:18,600
Hey, I brought biscuits.

46
00:02:18,600 --> 00:02:19,600
Great.

47
00:02:19,600 --> 00:02:20,600
You know, I was hoping.

48
00:02:20,600 --> 00:02:21,600
But all I have over here is cider.

49
00:02:21,600 --> 00:02:22,600
Anyways.

50
00:02:22,600 --> 00:02:23,600
Are they sous-vided biscuits?

51
00:02:23,600 --> 00:02:24,600
They are.

52
00:02:24,600 --> 00:02:27,760
Are they sous-vided biscuits, really, we'll find out.

53
00:02:27,760 --> 00:02:32,240
And then, of course, along with them biscuits, we'll have picks, some boasts, and a whole

54
00:02:32,240 --> 00:02:33,240
lot more.

55
00:02:33,240 --> 00:02:34,880
Well, let's just get right into it.

56
00:02:34,880 --> 00:02:36,960
Wes, what did you bring to class today?

57
00:02:36,960 --> 00:02:41,560
I thought I'd revisit a tool that I've been playing with more again, but I used to use

58
00:02:41,560 --> 00:02:43,000
a lot.

59
00:02:43,000 --> 00:02:44,800
And that's Canonical's LexD.

60
00:02:44,800 --> 00:02:45,960
Oh, yeah.

61
00:02:45,960 --> 00:02:50,040
Obviously, we use containers for basically all the things here.

62
00:02:50,040 --> 00:02:52,400
But most of the time, we're running something like Podman or Docker.

63
00:02:52,400 --> 00:02:56,160
I was thinking back on this, and it was when 1604 first came out, if you remember those

64
00:02:56,160 --> 00:03:01,520
heady days, and Canonical had just started shipping ZFS.

65
00:03:01,520 --> 00:03:05,960
Just built in, no fuss, no DKMS, like you just got ZFS.

66
00:03:05,960 --> 00:03:09,000
I wanted to play with that because, you know, I dabble with ZFS, but mostly like from Freeness

67
00:03:09,000 --> 00:03:11,440
on a free BSD system or similar.

68
00:03:11,440 --> 00:03:16,760
So I rented a dedicated server, you know, had a couple of TB of storage, had a couple

69
00:03:16,760 --> 00:03:20,120
of hard drives, nothing super fancy, but it was enough to start playing with like a, you

70
00:03:20,120 --> 00:03:23,320
know, physical system I didn't have to run in my actual home lab.

71
00:03:23,320 --> 00:03:29,560
And I got it all set up, had ZFS, had LexD on top, it was routed up with IPv6.

72
00:03:29,560 --> 00:03:33,080
And it was really neat because it was almost like running my own little VPS setup because

73
00:03:33,080 --> 00:03:36,440
you could just spin up all these like system containers, which is one of the things that

74
00:03:36,440 --> 00:03:40,080
LexD does that's a little bit different than Docker, you know, it's almost like a virtual

75
00:03:40,080 --> 00:03:42,860
machine, but it uses all the cool container tech.

76
00:03:42,860 --> 00:03:46,600
And so I could spin up Bastion hosts, I could spin up whatever OS I wanted to play with.

77
00:03:46,600 --> 00:03:49,920
It was a great way to just run like the latest version of Arch on a server.

78
00:03:49,920 --> 00:03:53,240
What do you mean when you say it's almost like a virtual machine, like does it have

79
00:03:53,240 --> 00:03:54,240
virtual devices?

80
00:03:54,240 --> 00:03:55,240
What do you mean by that?

81
00:03:55,240 --> 00:03:59,120
At least the way that you see containers run a lot, at least with the docker is these sort

82
00:03:59,120 --> 00:04:03,040
of application containers, you know, where it's focused on one particular piece, right?

83
00:04:03,040 --> 00:04:07,320
It's I'm running this process, a single thing, it's all, you know, declarative, you set it

84
00:04:07,320 --> 00:04:08,320
out.

85
00:04:08,320 --> 00:04:12,460
LexD runs what they call system containers, which is pretty much just like what you might

86
00:04:12,460 --> 00:04:16,960
be used to when you run a full Linux operating system.

87
00:04:16,960 --> 00:04:22,520
So it starts up system D, you can run multiple processes, but it isn't a virtual machine.

88
00:04:22,520 --> 00:04:27,260
It's you know, it's using the container technology of, you know, C groups and namespaces and

89
00:04:27,260 --> 00:04:28,260
that sort of thing to isolate it.

90
00:04:28,260 --> 00:04:33,920
So you get all the nice bare metal performance, there's no overhead involved, but it's designed

91
00:04:33,920 --> 00:04:36,720
to work as if you have a full system access.

92
00:04:36,720 --> 00:04:41,620
Now this isn't for anything, it's not to compete necessarily with docker, I find it has a particular

93
00:04:41,620 --> 00:04:45,840
sweet spot in the home lab for times where you don't need to scale things arbitrarily

94
00:04:45,840 --> 00:04:46,840
horizontally.

95
00:04:46,840 --> 00:04:50,760
Your end goal with this, it's not that how you're going to run the system, but you want

96
00:04:50,760 --> 00:04:55,120
to be able to run multiple things and have a nice REST API on top to orchestrate it.

97
00:04:55,120 --> 00:05:00,280
So how does the kernel model work with this, Wes, with containers, like typical like docker

98
00:05:00,280 --> 00:05:05,740
containers, you would have one kernel shared amongst multiple processes with LexD.

99
00:05:05,740 --> 00:05:06,740
How does that work?

100
00:05:06,740 --> 00:05:07,740
Yeah, same thing.

101
00:05:07,740 --> 00:05:11,400
So that in the container model, you get the host kernel in that case, I haven't really

102
00:05:11,400 --> 00:05:12,400
used it for a while.

103
00:05:12,400 --> 00:05:15,080
And it's been in the back of my mind, but it just hasn't been the thing that I've been

104
00:05:15,080 --> 00:05:16,440
playing with.

105
00:05:16,440 --> 00:05:20,760
We covered last month, LexD 5.0 in Linux action news.

106
00:05:20,760 --> 00:05:23,520
And that's what kind of triggered me to think I should play with this again, because one

107
00:05:23,520 --> 00:05:27,520
of the things they've added now is they also do virtual machines.

108
00:05:27,520 --> 00:05:31,440
So you can do system containers, if you know you're okay with relying on the host kernel,

109
00:05:31,440 --> 00:05:34,560
you want that density or just you know, that if that works for you.

110
00:05:34,560 --> 00:05:40,200
But you now have basically feature parity on the VM side, including stuff like migrations

111
00:05:40,200 --> 00:05:43,180
and snapshots, also clustering.

112
00:05:43,180 --> 00:05:47,040
And they've added this whole overlay virtual networking.

113
00:05:47,040 --> 00:05:50,840
It's powered by OVN, which then sits on top of like open vSwitch.

114
00:05:50,840 --> 00:05:52,840
Okay, so this is like the networking layer.

115
00:05:52,840 --> 00:05:56,840
So you've got this overlay network on top, but it can do some pretty wild stuff, including

116
00:05:56,840 --> 00:06:01,840
if you've got like nice a nice Nick, like a Mellanox Nick can do offload hardware offload.

117
00:06:01,840 --> 00:06:02,840
So it gets processed.

118
00:06:02,840 --> 00:06:03,840
No, cool.

119
00:06:03,840 --> 00:06:05,840
It can also talk BGP.

120
00:06:05,840 --> 00:06:09,300
So you can, you can spin up new containers or virtual machines.

121
00:06:09,300 --> 00:06:12,000
And it will do all the BGP peer with your routers and announce them.

122
00:06:12,000 --> 00:06:14,960
So you don't have to worry about like, dealing with any of those routes, man, this seems

123
00:06:14,960 --> 00:06:15,960
like really nice.

124
00:06:15,960 --> 00:06:18,400
If you're an organization using this, and you just want to spin up some infrastructure

125
00:06:18,400 --> 00:06:19,400
real quick.

126
00:06:19,400 --> 00:06:20,400
That's great.

127
00:06:20,400 --> 00:06:25,680
I wonder how deep we could take that rabbit hole, could we put Docker inside an LXD, and

128
00:06:25,680 --> 00:06:29,400
then run libver inside the Docker that's inside the LXD.

129
00:06:29,400 --> 00:06:32,420
So use that to run Docker inside the libver.

130
00:06:32,420 --> 00:06:33,560
You see where I'm going?

131
00:06:33,560 --> 00:06:35,400
Like how deep does the rabbit hole go here?

132
00:06:35,400 --> 00:06:39,320
I think we have to find out I know it does at least support running itself inside of

133
00:06:39,320 --> 00:06:42,160
itself because they've got to try it online and that's what it does.

134
00:06:42,160 --> 00:06:43,160
That'd be fun.

135
00:06:43,160 --> 00:06:45,240
That's a little inception right there.

136
00:06:45,240 --> 00:06:46,240
That's pretty great.

137
00:06:46,240 --> 00:06:50,960
And so my question to you is, are you looking at moving any workloads over to this?

138
00:06:50,960 --> 00:06:53,080
I think I'm going to dabble, you know, I don't know.

139
00:06:53,080 --> 00:06:57,240
It doesn't fit every use case and, you know, at work and I'm already quite comfortable

140
00:06:57,240 --> 00:07:00,240
with both with Docker and dabbling with Podman.

141
00:07:00,240 --> 00:07:03,160
But you know, it takes a different approach where sort of the, you know, the Docker and

142
00:07:03,160 --> 00:07:06,000
Podman doing a lot of it kind of breaks things out and you're kind of assembling it or maybe

143
00:07:06,000 --> 00:07:10,200
you're going to go run it on Kubernetes or Swarm or some other, you know, system doesn't

144
00:07:10,200 --> 00:07:11,200
really care.

145
00:07:11,200 --> 00:07:13,080
You get the pieces and you can go put it together.

146
00:07:13,080 --> 00:07:17,680
LexD it's almost like ZFS in a sense where it presents more of a holistic, like I can

147
00:07:17,680 --> 00:07:20,840
set this up on a server and it's going to go figure out all these things, including

148
00:07:20,840 --> 00:07:22,600
fancy PCI pass through.

149
00:07:22,600 --> 00:07:24,400
It's got all kinds of acceleration if you want.

150
00:07:24,400 --> 00:07:28,340
So I think if you had some hardware and you wanted to get, you know, just wanted to manage

151
00:07:28,340 --> 00:07:34,080
that and you maybe weren't a particular fan of say the libvert API, which I'm really not,

152
00:07:34,080 --> 00:07:35,640
LexD might be an interesting thing to try.

153
00:07:35,640 --> 00:07:41,120
I wondered, Wes, do you remember why past Wes got less interested and let this technology

154
00:07:41,120 --> 00:07:42,120
fade for you?

155
00:07:42,120 --> 00:07:46,160
That was a time where I was kind of just running more things.

156
00:07:46,160 --> 00:07:49,480
Maybe I was a less busy version of myself or it was just, you know, containerization

157
00:07:49,480 --> 00:07:50,480
was new.

158
00:07:50,480 --> 00:07:51,480
Virtual machines were new.

159
00:07:51,480 --> 00:07:54,160
I was also at a stage in my career where those were things that I was learning for the first

160
00:07:54,160 --> 00:07:55,160
time.

161
00:07:55,160 --> 00:07:58,440
Not quite the first, but you know, kind of first really trying to both learn them so

162
00:07:58,440 --> 00:08:01,360
I could apply them at work, which we hadn't quite migrated that far.

163
00:08:01,360 --> 00:08:03,080
So I was trying to, you know, get on the cutting edge.

164
00:08:03,080 --> 00:08:05,640
I'm not running as many things these days.

165
00:08:05,640 --> 00:08:09,640
I've tried to minimalize some of my personal infrastructure just to keep things simple,

166
00:08:09,640 --> 00:08:12,480
especially I've just moved a lot in the past few years.

167
00:08:12,480 --> 00:08:15,200
So I haven't wanted a big home lab that I've been dragging around.

168
00:08:15,200 --> 00:08:20,480
And there is the employability of having a really solid understanding of Docker because

169
00:08:20,480 --> 00:08:25,760
that is such a normal standard deployment now in the business world.

170
00:08:25,760 --> 00:08:30,480
So if you're looking to build out like an employable skillset, I mean, not that LexD

171
00:08:30,480 --> 00:08:33,560
isn't used widely, but Docker is probably more widely used.

172
00:08:33,560 --> 00:08:37,780
As we've shown for better or worse, you can get quite far with, you know, just a Docker

173
00:08:37,780 --> 00:08:39,320
compose file these days.

174
00:08:39,320 --> 00:08:41,860
There's a lot of community momentum behind that.

175
00:08:41,860 --> 00:08:46,360
But I think if you wanted to get more complicated or perhaps, you know, your VPS bill was getting

176
00:08:46,360 --> 00:08:50,080
high and you wanted to like get a couple of bigger boxes that you were going to handle

177
00:08:50,080 --> 00:08:54,600
on your own or something like that, you know, there's a lot of use cases where I just hadn't

178
00:08:54,600 --> 00:08:55,840
really thought about LexD.

179
00:08:55,840 --> 00:08:59,480
You know, I wonder if we're not going to discover a theme accidentally.

180
00:08:59,480 --> 00:09:05,000
I almost can sense it because my story is about figuring out maybe I'm not using the

181
00:09:05,000 --> 00:09:06,680
right tool for the job.

182
00:09:06,680 --> 00:09:10,240
Your story is about the right tool for the for the job.

183
00:09:10,240 --> 00:09:11,240
Mine definitely is.

184
00:09:11,240 --> 00:09:12,240
Is it?

185
00:09:12,240 --> 00:09:13,240
All right, Brent.

186
00:09:13,240 --> 00:09:14,240
So, all right.

187
00:09:14,240 --> 00:09:15,240
OK, here we go.

188
00:09:15,240 --> 00:09:16,240
So tell us, Brent, what's been going on for you this week?

189
00:09:16,240 --> 00:09:19,640
Well, as listeners might remember, I'm still sitting here with Alex.

190
00:09:19,640 --> 00:09:23,800
Yeah, he's still here, people.

191
00:09:23,800 --> 00:09:24,800
Will he ever leave?

192
00:09:24,800 --> 00:09:25,800
Send us your feedback.

193
00:09:25,800 --> 00:09:26,800
Raleigh's awful nice.

194
00:09:26,800 --> 00:09:28,780
Alex has got a great place.

195
00:09:28,780 --> 00:09:30,360
They're both very nice people.

196
00:09:30,360 --> 00:09:31,960
You know, so I can understand, Brent.

197
00:09:31,960 --> 00:09:32,960
I can understand.

198
00:09:32,960 --> 00:09:33,960
I'd probably be in the same.

199
00:09:33,960 --> 00:09:35,440
I'd probably be there if I were you, too.

200
00:09:35,440 --> 00:09:38,240
You know, just before the show, he did make me an account on his Mac.

201
00:09:38,240 --> 00:09:39,240
So.

202
00:09:39,240 --> 00:09:40,240
Wow.

203
00:09:40,240 --> 00:09:41,240
It finally happened.

204
00:09:41,240 --> 00:09:42,320
You got a you got a local account.

205
00:09:42,320 --> 00:09:43,680
That is a big step.

206
00:09:43,680 --> 00:09:45,240
Probably means he expects you to come back to.

207
00:09:45,240 --> 00:09:49,440
Yeah, I think he probably wants me to do a bunch of projects, it seems.

208
00:09:49,440 --> 00:09:53,720
So being here has been a real opportunity because I've been able to sort of tap into

209
00:09:53,720 --> 00:09:57,560
Alex's expertise a little bit and learn some things that I've had in mind for the last

210
00:09:57,560 --> 00:10:02,760
few years, and this might be quite topical after our NixOS challenge.

211
00:10:02,760 --> 00:10:07,680
Turns out Alex knows a thing or two about Ansible, and one of the main things I wanted

212
00:10:07,680 --> 00:10:12,840
to learn while I was here was sinking my teeth into that a little bit and to see the differences

213
00:10:12,840 --> 00:10:18,520
that I could at least grok so far between Ansible's advantages and those of NixOS, for

214
00:10:18,520 --> 00:10:19,520
instance.

215
00:10:19,520 --> 00:10:22,480
And I gotta say, it's been super fun.

216
00:10:22,480 --> 00:10:26,840
For the last few days, Alex and I have been sort of diving in.

217
00:10:26,840 --> 00:10:29,600
I think I'm pretty lucky because he's got all the shortcuts.

218
00:10:29,600 --> 00:10:34,200
He basically said in a day and a half, he showed me everything he's learned in five

219
00:10:34,200 --> 00:10:35,200
years.

220
00:10:35,200 --> 00:10:36,200
So, right.

221
00:10:36,200 --> 00:10:38,680
It's like you got sent to one of those expert courses, you know, you're at you're at the

222
00:10:38,680 --> 00:10:41,240
Ansible boot camp, basically, except one on one.

223
00:10:41,240 --> 00:10:42,240
Yeah.

224
00:10:42,240 --> 00:10:43,240
And it's been a real treat.

225
00:10:43,240 --> 00:10:44,240
I gotta say thank you, Alex.

226
00:10:44,240 --> 00:10:47,000
I mean, that's the thing about Ansible that I always thought in the in the early days

227
00:10:47,000 --> 00:10:51,760
was the learning curve is actually quite short.

228
00:10:51,760 --> 00:10:55,920
And the complexity can ramp as quickly or as slowly as you need it to.

229
00:10:55,920 --> 00:10:59,600
Like the basics of just installing a package or something like that.

230
00:10:59,600 --> 00:11:02,080
We did that in, what, an hour or two?

231
00:11:02,080 --> 00:11:07,420
Yeah, I think once you sort of describe the main structure underneath, installing packages

232
00:11:07,420 --> 00:11:11,120
are super simple, which is really similar to the NixOS process.

233
00:11:11,120 --> 00:11:15,800
Like wrapping your head around the concepts is kind of a big part of the hard part.

234
00:11:15,800 --> 00:11:18,520
While you were doing that, did you have moments where you felt like, oh, this seems like a

235
00:11:18,520 --> 00:11:21,320
lot of work to get something kind of fairly basic done?

236
00:11:21,320 --> 00:11:26,900
I think had I not had the NixOS challenge that we did last month, I would have certainly

237
00:11:26,900 --> 00:11:28,720
thought that.

238
00:11:28,720 --> 00:11:35,840
But knowing that the work you put in has many advantages and is a real investment, then

239
00:11:35,840 --> 00:11:39,980
it made looking at Ansible just make a lot of sense from that perspective.

240
00:11:39,980 --> 00:11:44,440
I think probably the biggest thing that we struggled with, certainly me as the air quotes

241
00:11:44,440 --> 00:11:51,520
instructor struggled with, was Ansible is a collection of a lot of little files all

242
00:11:51,520 --> 00:11:56,640
glued together to build this configuration management structure.

243
00:11:56,640 --> 00:11:59,720
I kind of struggled explaining, well, you need this directory, and then you need this

244
00:11:59,720 --> 00:12:01,400
one, and then you need that.

245
00:12:01,400 --> 00:12:07,200
I do open source all of my code on my GitHub at ironicbadger, if anybody's interested.

246
00:12:07,200 --> 00:12:12,320
The number of times it said, well, if you look at my code on GitHub.

247
00:12:12,320 --> 00:12:17,880
That repo is used to deploy all of my personal infrastructure, and that's Ansible as I understand

248
00:12:17,880 --> 00:12:19,920
it.

249
00:12:19,920 --> 00:12:23,000
In my defense, that's kind of like my living and breathing encyclopedia.

250
00:12:23,000 --> 00:12:28,600
Alex, you touched on something that I found a little bit more difficult compared to NixOS,

251
00:12:28,600 --> 00:12:29,600
for instance.

252
00:12:29,600 --> 00:12:34,600
In NixOS, you can start with just a Nix config that has a default location.

253
00:12:34,600 --> 00:12:38,500
One of the things with Ansible that you sort of have to get over a little bit is there's

254
00:12:38,500 --> 00:12:44,600
a directory structure and expected files in certain places and an equally thick nomenclature

255
00:12:44,600 --> 00:12:50,400
to go with the naming of those files and those, I don't want to say roles because that's actually

256
00:12:50,400 --> 00:12:54,960
one of the names of something and don't want to confuse people too much, but that nomenclature

257
00:12:54,960 --> 00:12:59,200
was a little tricky, and I think you saw me struggle with that.

258
00:12:59,200 --> 00:13:04,080
Yeah, so there's a lot of domain specific language to learn, so you got to learn what

259
00:13:04,080 --> 00:13:08,400
a playbook is, what a role is, what a task is.

260
00:13:08,400 --> 00:13:12,320
Those are the three basic fundamental building blocks, and once you've got your head around

261
00:13:12,320 --> 00:13:18,540
how those three different things kind of link together, I saw your progress kind of skyrocket,

262
00:13:18,540 --> 00:13:24,680
and you went from how does this connect to that to being, oh, well, I just do this.

263
00:13:24,680 --> 00:13:25,680
That's exciting.

264
00:13:25,680 --> 00:13:27,080
Yeah, when it all clicks.

265
00:13:27,080 --> 00:13:33,400
It's been fun, and Alex discovered a reason for me to also use some other pieces of software,

266
00:13:33,400 --> 00:13:34,400
which was really great.

267
00:13:34,400 --> 00:13:38,760
I think Proxmox was a thing that you threw me at to get a VM going so that we can play

268
00:13:38,760 --> 00:13:40,080
on this.

269
00:13:40,080 --> 00:13:41,600
Second mention of the show this week.

270
00:13:41,600 --> 00:13:48,120
Yeah, because we could use snapshots on Proxmox because the VM storage is just backed by ZFS,

271
00:13:48,120 --> 00:13:53,120
so it's really easy just to create a snapshot and run some Ansible, break some things, and

272
00:13:53,120 --> 00:13:55,400
then roll back the snapshot.

273
00:13:55,400 --> 00:13:59,980
This has been a really, really good sesh for you at Alex's place because you got your first

274
00:13:59,980 --> 00:14:03,520
hands-on with the Raspberry Pi, which we talked about in Office Hours 3.

275
00:14:03,520 --> 00:14:09,840
You've now got your first taste of Ansible and Proxmox, like Brent, this is major milestone

276
00:14:09,840 --> 00:14:10,840
stuff.

277
00:14:10,840 --> 00:14:15,120
Yeah, I got to say, it feels like a whole new world has opened up for me in a way.

278
00:14:15,120 --> 00:14:20,320
The reason I wanted to bring that as my topic today was I hope I can encourage some other

279
00:14:20,320 --> 00:14:25,440
people to even sink their teeth in a little bit and feel some of that excitement, especially

280
00:14:25,440 --> 00:14:30,080
those who have joined us in the NixOS challenge because I feel like that was a part of the

281
00:14:30,080 --> 00:14:34,380
conversation that came up often was, hey, what's the difference between the two?

282
00:14:34,380 --> 00:14:35,600
Which one's more suited for me?

283
00:14:35,600 --> 00:14:40,580
And I think it's worth diving in even just for an afternoon or something and seeing what

284
00:14:40,580 --> 00:14:42,160
it might be able to do.

285
00:14:42,160 --> 00:14:45,940
So I want to take a sidebar conversation that you and I had off air and bring it into this

286
00:14:45,940 --> 00:14:47,920
conversation because I think it applies.

287
00:14:47,920 --> 00:14:52,940
And that was, you were talking about how you had just deployed Umbral for yourself and

288
00:14:52,940 --> 00:14:56,980
you felt like it didn't really work well with this new Ansible paradigm where you're kind

289
00:14:56,980 --> 00:15:02,840
of prescribing a system because Umbral itself is essentially a small little orchestration

290
00:15:02,840 --> 00:15:04,360
system in a box.

291
00:15:04,360 --> 00:15:07,280
But I think what we realized there is there's a fundamental shift perhaps in the way you

292
00:15:07,280 --> 00:15:08,760
look at how to build things now.

293
00:15:08,760 --> 00:15:10,520
Can you expand on that a little bit?

294
00:15:10,520 --> 00:15:11,520
It's true.

295
00:15:11,520 --> 00:15:12,520
Yeah.

296
00:15:12,520 --> 00:15:15,200
So to give a little context, the last time you and I, Chris, talked about Umbral, I believe

297
00:15:15,200 --> 00:15:18,360
is here on the Linux Unplugged actually, it was maybe a month or two ago.

298
00:15:18,360 --> 00:15:23,080
Which I should say is like this, you can set it up yourself as a self-hosting platform

299
00:15:23,080 --> 00:15:28,040
to install lots of really awesome self-hosting apps and it's a Bitcoin node, although I guess

300
00:15:28,040 --> 00:15:30,000
they're going to make that optional in the future.

301
00:15:30,000 --> 00:15:34,240
It's a platform that sort of showcases some premier self-hosting apps and it manages all

302
00:15:34,240 --> 00:15:36,680
of it as Docker containers with its UI.

303
00:15:36,680 --> 00:15:39,360
So it itself is a platform in a sense.

304
00:15:39,360 --> 00:15:40,360
Yeah.

305
00:15:40,360 --> 00:15:44,640
And it can also manage a few Docker containers for you in sort of their, I don't know, Umbral

306
00:15:44,640 --> 00:15:48,400
store if you will, which is actually really nice for people running this, I don't know,

307
00:15:48,400 --> 00:15:52,200
on a Pi or something like that who don't necessarily have that much Docker experience.

308
00:15:52,200 --> 00:15:54,760
So that's kind of neat.

309
00:15:54,760 --> 00:15:59,800
So back then I sort of installed it, I think we did it in a VPS, Chris, do you remember?

310
00:15:59,800 --> 00:16:00,800
Probably yeah.

311
00:16:00,800 --> 00:16:01,800
Probably on Linode.

312
00:16:01,800 --> 00:16:02,800
Yeah.

313
00:16:02,800 --> 00:16:05,200
And I kind of followed their documentation, you know, note for note.

314
00:16:05,200 --> 00:16:10,340
This time around, I thought, Alex and I are playing with this Ansible stuff.

315
00:16:10,340 --> 00:16:14,420
Maybe this is a nice way I can just sort of integrate that into Ansible and have a little

316
00:16:14,420 --> 00:16:19,520
tiny project to, you know, learn a thing or two outside of having Alex help me.

317
00:16:19,520 --> 00:16:23,160
So you know, got up nice and early this morning to do that.

318
00:16:23,160 --> 00:16:29,520
And I did discover a difference in how I understand how software is delivered.

319
00:16:29,520 --> 00:16:32,720
Help me maybe explain it if I don't get it quite right, Chris, but it seemed to me that

320
00:16:32,720 --> 00:16:37,340
Umbral, the way it's been packaged, you know, it uses Docker under the hood, but it kind

321
00:16:37,340 --> 00:16:40,040
of tries to obfuscate that for me a little bit.

322
00:16:40,040 --> 00:16:46,080
The way they package it is for those who don't necessarily have that expertise or that experience

323
00:16:46,080 --> 00:16:51,760
with some of this containerization, you know, tool, toolkits, and they're trying to make

324
00:16:51,760 --> 00:16:52,760
it as simple as possible.

325
00:16:52,760 --> 00:16:57,160
You know, their default is to run this on a pie.

326
00:16:57,160 --> 00:17:01,080
They have a pie image, which they call, I think they call it an Umbral OS, something

327
00:17:01,080 --> 00:17:02,080
like that.

328
00:17:02,080 --> 00:17:05,000
That's really great because you can kind of get up and running with the defaults pretty

329
00:17:05,000 --> 00:17:06,500
quickly.

330
00:17:06,500 --> 00:17:11,920
What I discovered trying to integrate this into my Ansible setup, the way Ansible works

331
00:17:11,920 --> 00:17:18,480
is that you can use a few, Alex, help me with the wording here, but you can use a few modules

332
00:17:18,480 --> 00:17:25,600
that are predefined in sort of the underlying Python code to do tasks that are really common.

333
00:17:25,600 --> 00:17:30,960
So let's just say you want to install htop while there's a package module that will just

334
00:17:30,960 --> 00:17:32,880
sort of know how to handle things.

335
00:17:32,880 --> 00:17:36,160
So you just pass it a few little variables like the package you want.

336
00:17:36,160 --> 00:17:38,720
I want htop and what state you want it in.

337
00:17:38,720 --> 00:17:42,400
I want it to be present and then it just goes and figures out the rest.

338
00:17:42,400 --> 00:17:50,460
What I ran into trying to get Umbral into my Ansible sort of setup was that they want

339
00:17:50,460 --> 00:17:56,440
you to just kind of curl a script and most of what you do with Umbral is based on scripting

340
00:17:56,440 --> 00:18:01,760
that they've included when you download, you know, their tarball.

341
00:18:01,760 --> 00:18:05,600
And that's great because it's super simple to get up and running just by running one

342
00:18:05,600 --> 00:18:06,600
script.

343
00:18:06,600 --> 00:18:09,360
You don't necessarily understand the underlying technology in there.

344
00:18:09,360 --> 00:18:10,360
Exactly.

345
00:18:10,360 --> 00:18:11,360
Yeah.

346
00:18:11,360 --> 00:18:15,240
But I was trying to use it as a way to understand the underlying technology, which I think is

347
00:18:15,240 --> 00:18:19,560
going a little bit outside of what they were hoping someone would do.

348
00:18:19,560 --> 00:18:20,920
You kind of jumped to a hundred, too, right?

349
00:18:20,920 --> 00:18:22,180
Like you're getting started with this thing.

350
00:18:22,180 --> 00:18:26,520
You chose a system that's like fighting against you and not designed to play nice with exactly.

351
00:18:26,520 --> 00:18:30,680
So what you really what you've really come across, but now from the other side of it,

352
00:18:30,680 --> 00:18:34,280
is the difference between something that's designed for consumer use and something that's

353
00:18:34,280 --> 00:18:38,160
designed for production grade use and not that Umbral can't be used in production.

354
00:18:38,160 --> 00:18:43,480
I mean, I'm using it in production and I like that because this is a one off isolated system

355
00:18:43,480 --> 00:18:46,800
that isn't part of the overall JB infrastructure or anything like that.

356
00:18:46,800 --> 00:18:49,920
I like that Umbral manages and orchestrates all of this for me.

357
00:18:49,920 --> 00:18:52,840
I didn't use their OS, but I'm running some of their scripts.

358
00:18:52,840 --> 00:18:56,600
I could also see a future where like this probably is not likely, but say we had a future

359
00:18:56,600 --> 00:18:59,960
where boosts were representing like a third of our revenue or something like that.

360
00:18:59,960 --> 00:19:04,720
Well, then I would probably want to migrate that to an infrastructure that was a lot more

361
00:19:04,720 --> 00:19:08,920
managed and a lot more reproducible because it would be a real serious endeavor, right?

362
00:19:08,920 --> 00:19:14,920
Like right now, I'm in the very early, very early stages where beta testing, all of that

363
00:19:14,920 --> 00:19:15,920
kind of stuff.

364
00:19:15,920 --> 00:19:18,960
It's a couple of years down the road before I really expect this to really gain traction.

365
00:19:18,960 --> 00:19:23,440
And so it's not a quote unquote production grade setup yet.

366
00:19:23,440 --> 00:19:27,120
And you know, some people probably would probably say that's not a great idea, but it has the

367
00:19:27,120 --> 00:19:28,720
advantage of letting you get started fast.

368
00:19:28,720 --> 00:19:32,680
Yeah, I would say Chris, when you and I in January wanted to play with this when I was

369
00:19:32,680 --> 00:19:37,560
at the studio, we were able to relatively quickly get up and started with it.

370
00:19:37,560 --> 00:19:41,400
I think most of our time was spent understanding all the concepts around it, but getting the

371
00:19:41,400 --> 00:19:43,560
software up and running was super straightforward, wasn't it?

372
00:19:43,560 --> 00:19:48,840
I find it interesting how the Umbral project provide all these scripts and they're essentially

373
00:19:48,840 --> 00:19:54,400
an opinionated set of scripts that say this is how we think the world should be.

374
00:19:54,400 --> 00:19:58,960
And Chris, I know that you with Home Assistant don't like it when they do that.

375
00:19:58,960 --> 00:20:01,720
So what's different with Umbral versus Home Assistant?

376
00:20:01,720 --> 00:20:05,600
Well, the key difference is they did let me deploy my own OS.

377
00:20:05,600 --> 00:20:09,160
So I am managing the OS the way I traditionally manage an Ubuntu base, right?

378
00:20:09,160 --> 00:20:12,280
So I still am applying all of that at that layer.

379
00:20:12,280 --> 00:20:15,800
And then the stuff that runs in the container with the orchestration script, I just let

380
00:20:15,800 --> 00:20:16,880
them manage.

381
00:20:16,880 --> 00:20:24,680
But the underlying OS and storage and all of that is under my control.

382
00:20:24,680 --> 00:20:26,700
Linode.com slash unplugged.

383
00:20:26,700 --> 00:20:32,100
Linode makes it simple, affordable and accessible to deploy and manage a system for yourself,

384
00:20:32,100 --> 00:20:34,200
or maybe for your customers in the cloud.

385
00:20:34,200 --> 00:20:38,360
And they do it at a better price and better performance in those large hyperscalers that

386
00:20:38,360 --> 00:20:42,680
have just endless options and want to basically lock you into their platform.

387
00:20:42,680 --> 00:20:45,840
Linode is how we run everything that we've built in the cloud for the last few years.

388
00:20:45,840 --> 00:20:49,760
And you can tell when you use it, if you're a long time Linux user, you can smell this

389
00:20:49,760 --> 00:20:50,760
kind of stuff.

390
00:20:50,760 --> 00:20:51,760
You can tell they love Linux.

391
00:20:51,760 --> 00:20:54,400
That's where the whole inspiration for the product came from.

392
00:20:54,400 --> 00:20:58,680
They started 19 years ago when this stuff was just getting baked into the kernel.

393
00:20:58,680 --> 00:21:02,760
They learned along the way that customer support is critical.

394
00:21:02,760 --> 00:21:06,380
So they've invested in having the best support in the business.

395
00:21:06,380 --> 00:21:09,240
And this is probably the number one signal I get back from the audience.

396
00:21:09,240 --> 00:21:11,280
Number two is definitely performance.

397
00:21:11,280 --> 00:21:14,760
But I often hear like that because somebody just like had some sort of disaster happen,

398
00:21:14,760 --> 00:21:16,000
they blew something up or I don't know.

399
00:21:16,000 --> 00:21:18,720
And they contact me like, you wouldn't believe how they saved me.

400
00:21:18,720 --> 00:21:19,720
And they stayed on the phone.

401
00:21:19,720 --> 00:21:21,800
It was the first person that answered.

402
00:21:21,800 --> 00:21:24,480
But on top of that, they really just have some of the best options.

403
00:21:24,480 --> 00:21:27,080
And they have 11 data centers for you to choose from.

404
00:21:27,080 --> 00:21:30,160
Each one is screaming fast because they are their own ISP.

405
00:21:30,160 --> 00:21:31,880
They've invested in MVME storage.

406
00:21:31,880 --> 00:21:34,600
They've invested in Epic AMD processors.

407
00:21:34,600 --> 00:21:37,180
So they've really, really made sure these things perform.

408
00:21:37,180 --> 00:21:40,880
And then they have a bunch of great backend features like firewalls and object storage

409
00:21:40,880 --> 00:21:46,200
and a powerful DNS manager, Kubernetes and Terraform support, and of course Ansible support.

410
00:21:46,200 --> 00:21:50,640
So they really, really make it a compelling option if you're doing infrastructure as code.

411
00:21:50,640 --> 00:21:54,480
And along those lines, and I'll put a link in the show note, they have released a white

412
00:21:54,480 --> 00:21:56,880
paper, I guess you could call it as such.

413
00:21:56,880 --> 00:21:58,560
It's really an ebook, I guess.

414
00:21:58,560 --> 00:22:00,240
It's about infrastructure as code.

415
00:22:00,240 --> 00:22:05,040
And it goes through things like Terraform, Ansible, Puppet, Chef, and Salt.

416
00:22:05,040 --> 00:22:06,960
And it kind of explains all of it through the entire book.

417
00:22:06,960 --> 00:22:10,720
And it gives you a sense of what each technology is about and how it might fit into what you

418
00:22:10,720 --> 00:22:11,840
do.

419
00:22:11,840 --> 00:22:13,640
It's just a really good resource.

420
00:22:13,640 --> 00:22:16,900
And I've mentioned it on one other show, and I got really great feedback from the audience

421
00:22:16,900 --> 00:22:17,900
on it.

422
00:22:17,900 --> 00:22:19,600
So go check the show notes for that.

423
00:22:19,600 --> 00:22:24,560
Or you can just Google Linode infrastructure as code ebook, and you'll see what I'm talking

424
00:22:24,560 --> 00:22:25,560
about.

425
00:22:25,560 --> 00:22:26,560
But go get $100.

426
00:22:26,560 --> 00:22:28,060
Go kick the tires.

427
00:22:28,060 --> 00:22:29,060
Go build something.

428
00:22:29,060 --> 00:22:30,060
Go learn something.

429
00:22:30,060 --> 00:22:31,060
It's a great opportunity.

430
00:22:31,060 --> 00:22:33,080
And they have a bunch of one-click app deployments too.

431
00:22:33,080 --> 00:22:38,760
You can get things like a Minecraft server, Nextcloud, GitLab, lots of stuff, one click.

432
00:22:38,760 --> 00:22:39,760
Go check it out.

433
00:22:39,760 --> 00:22:45,020
Linode.com slash unplugged.

434
00:22:45,020 --> 00:22:51,760
One question I did run into coming back to Ansible was how to install non-repo software.

435
00:22:51,760 --> 00:22:57,320
Because the way Ansible, at least I understand, is the straightforward method for installing

436
00:22:57,320 --> 00:23:04,600
software uses your auto-detected distributions package manager to install software.

437
00:23:04,600 --> 00:23:08,260
And one of the questions I ran into pretty quickly was, well, how do I install software?

438
00:23:08,260 --> 00:23:11,520
What's not in the package manager's repos?

439
00:23:11,520 --> 00:23:15,080
And Alex, you had a pretty good answer that I think is worth sharing.

440
00:23:15,080 --> 00:23:16,840
There's a few ways.

441
00:23:16,840 --> 00:23:18,120
And you're quite right.

442
00:23:18,120 --> 00:23:25,400
The default package module will auto-detect whether it's running on YUM or DNF or APT

443
00:23:25,400 --> 00:23:29,880
or YAST or Pacman, whatever it might be.

444
00:23:29,880 --> 00:23:34,560
And that's one of the beauties of Ansible versus, say, the Nix approach, is it transposes

445
00:23:34,560 --> 00:23:39,160
across Linux as a whole, the entire ecosystem, pretty much.

446
00:23:39,160 --> 00:23:44,560
Where Nix OS is, they have their own packaging system that you're pulling software from.

447
00:23:44,560 --> 00:23:48,040
And you learn the Nix OS thing, and you now know Nix OS.

448
00:23:48,040 --> 00:23:54,540
But if you get a new job at somewhere that's running Suzy, you've got to learn Suzy now.

449
00:23:54,540 --> 00:23:56,000
So that's one of the key things.

450
00:23:56,000 --> 00:23:59,160
But coming back to your question, there's a few different ways.

451
00:23:59,160 --> 00:24:04,520
Ansible has the concept of Ansible Galaxy, which is a bit like Docker Hub.

452
00:24:04,520 --> 00:24:11,920
So you specify a remote repo, a remote source that you can pull in.

453
00:24:11,920 --> 00:24:15,320
In the case of your question originally last night, it was Docker.

454
00:24:15,320 --> 00:24:17,100
How do I install Docker?

455
00:24:17,100 --> 00:24:21,700
You can pull Docker from your repo in your package manager.

456
00:24:21,700 --> 00:24:27,320
But quite often, the version of Docker that's in there is out of date or it's not packaged

457
00:24:27,320 --> 00:24:29,880
very well or it has a weird name.

458
00:24:29,880 --> 00:24:33,640
And so what I tend to do is I tend to rely on Ansible Galaxy roles for that.

459
00:24:33,640 --> 00:24:40,680
And Jeff Geerling, who was on Self-Hosted a little while ago, he writes a metric S ton

460
00:24:40,680 --> 00:24:44,640
of different roles that he uploads to Ansible Galaxy.

461
00:24:44,640 --> 00:24:46,840
One of them is Docker.

462
00:24:46,840 --> 00:24:54,080
And so you can reuse Jeff's expertise to install those sorts of packages by specifying a couple

463
00:24:54,080 --> 00:25:00,040
of lines in your Ansible, and I do mean only a couple, which is geerling-guide.docker.

464
00:25:00,040 --> 00:25:05,240
Install that role from Ansible Galaxy and just magically Docker will be installed.

465
00:25:05,240 --> 00:25:06,880
Yeah, it is sort of magic.

466
00:25:06,880 --> 00:25:08,880
And you can do that for a bunch of other services.

467
00:25:08,880 --> 00:25:10,260
Tailscale was another one that we did.

468
00:25:10,260 --> 00:25:14,120
So we went away on Ansible Galaxy and found a role that installs Tailscale.

469
00:25:14,120 --> 00:25:15,580
And it actually did some really neat stuff.

470
00:25:15,580 --> 00:25:21,280
We ended up having to go and grab an authentication key from the Tailscale admin console.

471
00:25:21,280 --> 00:25:27,640
And two minutes later, not only was Tailscale installed, but also this role had authenticated

472
00:25:27,640 --> 00:25:31,920
that server with my Tailscale account without me even really realizing that's what it was

473
00:25:31,920 --> 00:25:32,920
doing.

474
00:25:32,920 --> 00:25:34,800
And I just found that really cool.

475
00:25:34,800 --> 00:25:40,040
I'm reusing this Tailscale expert's knowledge that I didn't even know I could do that.

476
00:25:40,040 --> 00:25:43,600
Yeah, they're like these little, as far as I understand it so far in my little mental

477
00:25:43,600 --> 00:25:49,600
model, they're like templates to use in your Ansible roles.

478
00:25:49,600 --> 00:25:54,880
And you asked me a question last night about how do I know that these Galaxy roles are

479
00:25:54,880 --> 00:25:57,200
safe to run.

480
00:25:57,200 --> 00:26:00,840
The beauty of all of them is that they're all open source.

481
00:26:00,840 --> 00:26:04,360
So the Jeff Geerling stuff, for example, if you go to Ansible Galaxy and search for Jeff

482
00:26:04,360 --> 00:26:08,600
Geerling, there's a GitHub repo link in every single Galaxy role.

483
00:26:08,600 --> 00:26:10,680
You can go and look at the code.

484
00:26:10,680 --> 00:26:16,760
And one of the things I truly love about Ansible over any other configuration management software

485
00:26:16,760 --> 00:26:20,160
is that it executes tasks in a linear fashion.

486
00:26:20,160 --> 00:26:26,440
So if you write task one, do this, task two, do that, it won't try and be clever and cute

487
00:26:26,440 --> 00:26:30,480
and do these things in the order that it thinks is the most sensible.

488
00:26:30,480 --> 00:26:36,600
It will execute them like a bash script would, line one, then line two, then line three.

489
00:26:36,600 --> 00:26:42,260
And so it's very easy to understand that this task happens here, and then it does this.

490
00:26:42,260 --> 00:26:47,400
And for me, as a layman at the beginning when I was learning Ansible, I found that so helpful

491
00:26:47,400 --> 00:26:53,200
because there's a whole extra layer of complexity that I don't have to wade through.

492
00:26:53,200 --> 00:26:57,120
And in terms of reading open source code, we often say this in the community of, I'll

493
00:26:57,120 --> 00:26:58,600
just go and audit the code.

494
00:26:58,600 --> 00:27:02,000
It's open source, go audit it, and you'll be fine.

495
00:27:02,000 --> 00:27:05,080
But with Ansible, you actually can.

496
00:27:05,080 --> 00:27:09,200
You can see that this five line task does this, this five line task does that.

497
00:27:09,200 --> 00:27:11,320
Yeah, it's quite human readable, I would say.

498
00:27:11,320 --> 00:27:12,960
Yeah, for sure.

499
00:27:12,960 --> 00:27:15,500
And for me, that's one of the huge, huge benefits of it.

500
00:27:15,500 --> 00:27:21,340
So you've got code reuse out of the box, that's a massive DevOps checkbox facilitated there.

501
00:27:21,340 --> 00:27:26,360
You've also then inadvertently created a source of truth, which is your source code repository,

502
00:27:26,360 --> 00:27:30,520
which you then should be putting into Git or something like that to manage the version

503
00:27:30,520 --> 00:27:32,280
controlling there.

504
00:27:32,280 --> 00:27:36,920
The only real pitfall really is if you start using Ansible and then decide, oh, I just

505
00:27:36,920 --> 00:27:40,800
want to quickly install a package on the command line natively, like, you know, want to do

506
00:27:40,800 --> 00:27:45,280
sudo apt-get install htop, right?

507
00:27:45,280 --> 00:27:48,040
And you don't put that then into your Ansible repo.

508
00:27:48,040 --> 00:27:52,680
And if you do that over a week, you've got a very small amount of configuration drift.

509
00:27:52,680 --> 00:27:57,740
If you do that over a month, it gets a bit bigger, but very quickly after a year or so,

510
00:27:57,740 --> 00:28:03,560
you end up in the way the fact that your desired state in Ansible is nowhere near what reality

511
00:28:03,560 --> 00:28:04,560
is on that server.

512
00:28:04,560 --> 00:28:09,460
And so once you commit to doing it with configuration management, you've really got to go all in

513
00:28:09,460 --> 00:28:14,160
and try and do it completely forever that way.

514
00:28:14,160 --> 00:28:18,280
I've been really enjoying this journey and I hope to continue it.

515
00:28:18,280 --> 00:28:19,280
Oh, right.

516
00:28:19,280 --> 00:28:20,360
I go now.

517
00:28:20,360 --> 00:28:27,440
I go now and I just realized that my topic is encrypted in the show notes again.

518
00:28:27,440 --> 00:28:28,440
I like to do that.

519
00:28:28,440 --> 00:28:29,920
Create a little problem for yourself, eh?

520
00:28:29,920 --> 00:28:30,920
I have, but...

521
00:28:30,920 --> 00:28:31,920
Do you remember the password?

522
00:28:31,920 --> 00:28:36,860
No, but you know what I have is I have this handy little app right here.

523
00:28:36,860 --> 00:28:43,840
It's a Rust app and it will basically encrypt text as AES, whatever you choose.

524
00:28:43,840 --> 00:28:44,840
I chose 8-bit AES.

525
00:28:44,840 --> 00:28:45,840
I love security.

526
00:28:45,840 --> 00:28:51,040
I don't really care, but I thought I'd start with a story that was sent in to me by a whole

527
00:28:51,040 --> 00:28:54,120
bunch of you out there and it's about something I haven't talked about very much and it's

528
00:28:54,120 --> 00:28:59,000
one of my absolute favorite Linux boxes, my little Starlink Dishy.

529
00:28:59,000 --> 00:29:03,800
And there is this week a new announcement for Starlink owners about a portability option

530
00:29:03,800 --> 00:29:04,800
coming.

531
00:29:04,800 --> 00:29:10,200
So you can now take your Starlink with you, you're not locked to the region that you signed

532
00:29:10,200 --> 00:29:11,340
up for.

533
00:29:11,340 --> 00:29:16,520
And I had noticed they were beta testing this because I got bit by this region availability

534
00:29:16,520 --> 00:29:17,520
thing.

535
00:29:17,520 --> 00:29:18,520
I moved out of my region.

536
00:29:18,520 --> 00:29:19,520
Oh no.

537
00:29:19,520 --> 00:29:20,520
Set up at a new place.

538
00:29:20,520 --> 00:29:21,520
Just no internet.

539
00:29:21,520 --> 00:29:22,520
And there was no capacity for me.

540
00:29:22,520 --> 00:29:26,120
But then a couple of days later, it just started working.

541
00:29:26,120 --> 00:29:30,320
And the thing about the Starlink setup is if you use their app with their router, you

542
00:29:30,320 --> 00:29:32,920
can open up the app and go into debug mode.

543
00:29:32,920 --> 00:29:33,960
You'd like this, Wes.

544
00:29:33,960 --> 00:29:37,280
You go in there and it just tells you like all the raw log information that the little

545
00:29:37,280 --> 00:29:38,880
Dishy has.

546
00:29:38,880 --> 00:29:43,100
And I could be wrong, but I think there's either one or two different Linux boxes inside

547
00:29:43,100 --> 00:29:46,960
that little Dish that talks to the satellites.

548
00:29:46,960 --> 00:29:48,640
And you can see what it's doing.

549
00:29:48,640 --> 00:29:54,040
And in there, there was this little flag about portability or roaming or something like that

550
00:29:54,040 --> 00:29:55,640
that had flipped to true.

551
00:29:55,640 --> 00:29:58,520
And it turns out they were beta testing this and I was benefiting for free.

552
00:29:58,520 --> 00:30:00,800
And now they're rolling out for a $20 add on.

553
00:30:00,800 --> 00:30:01,800
I had that.

554
00:30:01,800 --> 00:30:04,940
I mean, so many people sent that in to me and it is really cool.

555
00:30:04,940 --> 00:30:09,560
But unfortunately, I got a bit of a tale to tell you.

556
00:30:09,560 --> 00:30:12,560
You see, I was packing up my Starlink the other day.

557
00:30:12,560 --> 00:30:16,000
Yeah, that's right, Wes.

558
00:30:16,000 --> 00:30:17,480
I don't like how this starts.

559
00:30:17,480 --> 00:30:18,480
No, it's not good.

560
00:30:18,480 --> 00:30:21,120
You see, I was getting ready for our trip out into the woods.

561
00:30:21,120 --> 00:30:25,400
I put little Dishy into stow mode, as they call it, and I packed it up.

562
00:30:25,400 --> 00:30:31,400
And a few days ago, i.e. Friday, I decided it was time to hook it up, get some additional

563
00:30:31,400 --> 00:30:35,880
tubes into the home because we needed more internets, little kids, you know.

564
00:30:35,880 --> 00:30:39,720
I get it all set up, I put it out in the grass field, I power it up because it's on a smart

565
00:30:39,720 --> 00:30:40,720
plug.

566
00:30:40,720 --> 00:30:46,040
This is one of the ways I control it during the night is I sometimes turn it off and it

567
00:30:46,040 --> 00:30:52,440
just sort of sat there limp, dead, never looking up at the stars, never asking what else is

568
00:30:52,440 --> 00:30:53,440
out there.

569
00:30:53,440 --> 00:30:55,080
Can I be more than just what I am?

570
00:30:55,080 --> 00:30:59,080
It just sits there limp in stow mode.

571
00:30:59,080 --> 00:31:02,780
And I'm watching the app and all of a sudden this little red air comes up and it says Starlink

572
00:31:02,780 --> 00:31:04,880
motors are stuck.

573
00:31:04,880 --> 00:31:08,960
And I walk up to it and I can hear like a weird buzzing, but nothing else is happening.

574
00:31:08,960 --> 00:31:09,960
I rebooted.

575
00:31:09,960 --> 00:31:10,960
I mean, I went through.

576
00:31:10,960 --> 00:31:11,960
Oh, no.

577
00:31:11,960 --> 00:31:14,240
I probably went through six hours of trying to get this thing to come back to life, just

578
00:31:14,240 --> 00:31:16,880
like refusing to accept my harsh reality.

579
00:31:16,880 --> 00:31:23,800
I mean, I was bummed, bummed, Wes, crushed, because, you know, you go from cellular to

580
00:31:23,800 --> 00:31:26,040
Starlink and it's a pretty big upgrade.

581
00:31:26,040 --> 00:31:27,600
And I was so crushed.

582
00:31:27,600 --> 00:31:28,680
And so I just refused to accept.

583
00:31:28,680 --> 00:31:30,680
I thought maybe I could move it just right and get the motor.

584
00:31:30,680 --> 00:31:33,560
What if I smash it a bit or jiggle it or toss it up in the air?

585
00:31:33,560 --> 00:31:40,160
Plus, this is the round dishy, which is reportedly overbuilt and more robust and has more antennae

586
00:31:40,160 --> 00:31:41,160
in it.

587
00:31:41,160 --> 00:31:42,520
So you broke the strong one?

588
00:31:42,520 --> 00:31:43,520
Yeah.

589
00:31:43,520 --> 00:31:46,960
And the new square one, which is smaller, is supposedly not quite as robust.

590
00:31:46,960 --> 00:31:47,960
It's more like...

591
00:31:47,960 --> 00:31:48,960
Quite svelte.

592
00:31:48,960 --> 00:31:49,960
Yeah, it is smaller.

593
00:31:49,960 --> 00:31:50,960
That is nice.

594
00:31:50,960 --> 00:31:55,380
So I opened up a support ticket and now I understand why Starlink business is five hundred

595
00:31:55,380 --> 00:31:59,360
dollars a month and the number one feature is prioritize support because I have heard

596
00:31:59,360 --> 00:32:01,080
nothing back.

597
00:32:01,080 --> 00:32:03,240
One automated reply and that's it, right?

598
00:32:03,240 --> 00:32:04,480
And I'm trying to get all my ducks in a row.

599
00:32:04,480 --> 00:32:09,760
I'm trying to like pre-upload the debug info, but I look like an idiot because when you

600
00:32:09,760 --> 00:32:13,880
use the app, it has like this copy debug info option.

601
00:32:13,880 --> 00:32:14,880
Really handy, I thought.

602
00:32:14,880 --> 00:32:18,560
I'll get a jump on this because in the debug info, it clearly shows that the motors aren't

603
00:32:18,560 --> 00:32:19,560
working, right?

604
00:32:19,560 --> 00:32:22,040
And it shows that it's not obstructed otherwise.

605
00:32:22,040 --> 00:32:24,000
It's incredible what it knows about itself, actually.

606
00:32:24,000 --> 00:32:26,760
It's remarkable when you hit copy in the app.

607
00:32:26,760 --> 00:32:32,280
It just seems to be copying the debug info for the app and the router, but not the Dishy.

608
00:32:32,280 --> 00:32:33,280
So I realize that.

609
00:32:33,280 --> 00:32:34,400
I'm like, oh, my bad.

610
00:32:34,400 --> 00:32:37,120
So I re-upload it again thinking, well, this time I was to captured it.

611
00:32:37,120 --> 00:32:38,120
Nope.

612
00:32:38,120 --> 00:32:40,240
So now I have two tickets where I have like bad debug info in there and I look like a

613
00:32:40,240 --> 00:32:41,240
total new.

614
00:32:41,240 --> 00:32:45,880
But so I've done like three responses to this ticket and I've heard nothing back yet.

615
00:32:45,880 --> 00:32:48,560
I can kind of take a guess because I've been in this this spot before.

616
00:32:48,560 --> 00:32:51,180
I can kind of guess where the satellites are like during the day.

617
00:32:51,180 --> 00:32:55,120
So I kind of like, you know, like weekend at Bernie's style, kind of like positioned

618
00:32:55,120 --> 00:32:58,040
it in the direction of the satellites or like, you know, if you're old enough, you might

619
00:32:58,040 --> 00:33:00,640
remember like having to tune in rabbit ears on your television.

620
00:33:00,640 --> 00:33:01,800
Yeah, I would do.

621
00:33:01,800 --> 00:33:03,960
I'm doing that trying to point this thing up into space.

622
00:33:03,960 --> 00:33:04,960
Right.

623
00:33:04,960 --> 00:33:06,160
And it gets a bit of a connection.

624
00:33:06,160 --> 00:33:09,580
And so I can download stuff for a bit and I'm getting like 100 megabit connection and

625
00:33:09,580 --> 00:33:10,580
everything's good.

626
00:33:10,580 --> 00:33:14,920
But then as the satellites move, it doesn't adjust and I lose connection.

627
00:33:14,920 --> 00:33:19,120
You might need like a home assistant integration that can automate retuning.

628
00:33:19,120 --> 00:33:21,800
I need like a motor.

629
00:33:21,800 --> 00:33:26,600
I looked into like used dishes, but they go for like a thousand bucks on eBay.

630
00:33:26,600 --> 00:33:30,360
And it's not even clear how you even associate that with your account because these dishes,

631
00:33:30,360 --> 00:33:33,640
you know, they connect to your account like a fifth support ticket for that.

632
00:33:33,640 --> 00:33:38,340
Yeah, I'm going to definitely support tickets so I can get like temporary connection.

633
00:33:38,340 --> 00:33:39,800
But then I lose it.

634
00:33:39,800 --> 00:33:43,760
But I've heard like when when support does engage with you, it tends to be really good.

635
00:33:43,760 --> 00:33:45,400
But I was looking at the option.

636
00:33:45,400 --> 00:33:50,120
So they have this ridiculous five hundred dollars a month Starlink service that they're

637
00:33:50,120 --> 00:33:51,120
going to roll out.

638
00:33:51,120 --> 00:33:52,180
Have you seen this?

639
00:33:52,180 --> 00:33:54,780
It's their business version.

640
00:33:54,780 --> 00:33:58,900
And supposedly it's a more robust antenna and you get more like 300 megabits instead

641
00:33:58,900 --> 00:34:01,080
of like one hundred and fifty megabits.

642
00:34:01,080 --> 00:34:03,400
It's nice about the same latency.

643
00:34:03,400 --> 00:34:07,960
OK, but the number one feature they list on their support and I it dawned on me right

644
00:34:07,960 --> 00:34:13,640
now, like I could almost see the utility of it for the business because without I realize

645
00:34:13,640 --> 00:34:18,320
without Starlink, I'm S.O.L. on remote broadcasts, really, or I go back to cellular, which was

646
00:34:18,320 --> 00:34:20,160
always so horrible.

647
00:34:20,160 --> 00:34:24,040
It could be pretty great, you know, like if you drug it with you into the studio studio

648
00:34:24,040 --> 00:34:25,040
has Internet outages.

649
00:34:25,040 --> 00:34:26,040
That'd be a solid backup.

650
00:34:26,040 --> 00:34:28,320
Sometimes I mean, it's just I can't justify the price now.

651
00:34:28,320 --> 00:34:32,640
But if I canceled all my all my cellular data plans, which I have three different cellular

652
00:34:32,640 --> 00:34:35,600
data plans, I'd probably almost pay for it.

653
00:34:35,600 --> 00:34:36,600
Connectivity is a big deal, right?

654
00:34:36,600 --> 00:34:38,480
I mean, this is what my whole job's online.

655
00:34:38,480 --> 00:34:41,960
So when I'm broadcasting remotely, which I'm going to be in a couple of weeks because I'm

656
00:34:41,960 --> 00:34:45,560
taking Jups in to get it ready for a summer road trip, I'm going to need to do, I think,

657
00:34:45,560 --> 00:34:47,960
at least Coder from southern Oregon.

658
00:34:47,960 --> 00:34:51,760
And I was planning to rely on Starlink to do that.

659
00:34:51,760 --> 00:34:53,240
And I don't really know what happened.

660
00:34:53,240 --> 00:34:59,200
I'm thinking either it fell or something in transport, like I tried to set it, but it's

661
00:34:59,200 --> 00:35:00,200
in a storage base.

662
00:35:00,200 --> 00:35:01,200
I couldn't see what happened.

663
00:35:01,200 --> 00:35:02,200
Right.

664
00:35:02,200 --> 00:35:03,360
But I just took it out and it wasn't working.

665
00:35:03,360 --> 00:35:05,820
I guess would be the snails got in there again.

666
00:35:05,820 --> 00:35:10,640
Might have been there were there were a surprising amount of snails living in the in the pole.

667
00:35:10,640 --> 00:35:14,800
But when I took it down, I looked in the pole and there's like a half a dozen snails all

668
00:35:14,800 --> 00:35:15,800
over the thing.

669
00:35:15,800 --> 00:35:23,040
The good news is that it seems like SpaceX is serious about supporting hashtag vanlifers

670
00:35:23,040 --> 00:35:24,040
and RVs.

671
00:35:24,040 --> 00:35:30,520
In fact, Elon Musk tweeted that Starlink is awesome for RVs camping or any activity away

672
00:35:30,520 --> 00:35:31,520
from cities.

673
00:35:31,520 --> 00:35:33,520
Yeah, I mean, it definitely is right.

674
00:35:33,520 --> 00:35:35,840
So I would describe it as life changing.

675
00:35:35,840 --> 00:35:36,840
I really would.

676
00:35:36,840 --> 00:35:41,880
I mean, imagine going somewhere where there is nobody around for a dozen miles.

677
00:35:41,880 --> 00:35:43,760
You don't have any other connectivity.

678
00:35:43,760 --> 00:35:48,080
And you put this little dish up in a field and you're getting 150 megabits down.

679
00:35:48,080 --> 00:35:49,680
I can't I can't even with that.

680
00:35:49,680 --> 00:35:53,880
It's and it's, you know, sometimes 20 milliseconds or so, which is fine for VoIP and stuff.

681
00:35:53,880 --> 00:35:54,880
It works.

682
00:35:54,880 --> 00:35:56,520
I'd love lower, but it gets the job done.

683
00:35:56,520 --> 00:35:59,480
So it really is a life changing kind of thing.

684
00:35:59,480 --> 00:36:04,720
And I just am always, always happy to see use cases like this for Linux, too.

685
00:36:04,720 --> 00:36:09,360
Like that's always in the back of my mind that I'm using Linux to talk to space.

686
00:36:09,360 --> 00:36:12,440
Now that I've gone through this experience, I can kind of see, like, say I was doing the

687
00:36:12,440 --> 00:36:16,200
shows out of the RV on the regular and not out of the studio.

688
00:36:16,200 --> 00:36:20,880
I think I'd see I could see the logic in getting a business grade tool, right?

689
00:36:20,880 --> 00:36:24,760
Using the right tool for the job kind of thing, you know, in the meantime, I'm hoping to get

690
00:36:24,760 --> 00:36:26,220
a good support experience.

691
00:36:26,220 --> 00:36:31,440
If anybody at Starlink is listening, look up my ticket for me, help a brother out.

692
00:36:31,440 --> 00:36:33,120
He's been waiting a couple of days.

693
00:36:33,120 --> 00:36:39,320
I'd really like to get connected back to the Internet again.

694
00:36:39,320 --> 00:36:40,680
Bitwarden.com slash Linux.

695
00:36:40,680 --> 00:36:45,060
Get started with a free trial for teams or enterprise or even a personal plan at Bitwarden.com

696
00:36:45,060 --> 00:36:46,800
slash Linux.

697
00:36:46,800 --> 00:36:51,640
Bitwarden is the easiest way for an individual or a business to store, share and sync all

698
00:36:51,640 --> 00:36:53,280
kinds of sensitive data.

699
00:36:53,280 --> 00:36:57,420
We use it here for our passwords, of course, and we love that Bitwarden is open source.

700
00:36:57,420 --> 00:37:00,140
It's trusted by millions in their community.

701
00:37:00,140 --> 00:37:03,240
And of course, businesses are using it worldwide.

702
00:37:03,240 --> 00:37:05,720
Our business, Jupiter Broadcasting uses it.

703
00:37:05,720 --> 00:37:09,360
It's a really handy way to work with teams of people when you have common resources you

704
00:37:09,360 --> 00:37:10,960
need to sign into.

705
00:37:10,960 --> 00:37:14,040
And that's really where the password hygiene can fall down.

706
00:37:14,040 --> 00:37:20,560
And now recently, Bitwarden has also rolled out username generators, which, man, oh, man,

707
00:37:20,560 --> 00:37:22,080
I can't believe I hadn't thought of this earlier.

708
00:37:22,080 --> 00:37:25,800
So now not only will each one of my sign ins for these different services I use, especially

709
00:37:25,800 --> 00:37:29,520
when it's not like a public profile, it's just something I'm using to manage an account

710
00:37:29,520 --> 00:37:30,520
or something like that.

711
00:37:30,520 --> 00:37:34,520
I'm not sure why I was ever using the same username for all of them.

712
00:37:34,520 --> 00:37:39,160
And if your email provider supports it, like Gmail, where you can do the plus in the address,

713
00:37:39,160 --> 00:37:40,960
Bitwarden figures that out, too.

714
00:37:40,960 --> 00:37:42,280
And it will support that.

715
00:37:42,280 --> 00:37:44,580
The username generator is such a great idea.

716
00:37:44,580 --> 00:37:46,360
And then you save it all in Bitwarden.

717
00:37:46,360 --> 00:37:49,940
Using a good password manager to keep different passwords for different websites is probably

718
00:37:49,940 --> 00:37:53,120
one of the number one things you can do for your security online.

719
00:37:53,120 --> 00:37:57,040
You know, it takes sometimes a hard lesson to figure it out, but I bet a lot of you already

720
00:37:57,040 --> 00:37:58,040
know this.

721
00:37:58,040 --> 00:38:01,560
If there's somebody out there who's maybe doing things a little less than ideal, point

722
00:38:01,560 --> 00:38:04,160
them to bitwarden.com slash Linux.

723
00:38:04,160 --> 00:38:05,240
Get them started.

724
00:38:05,240 --> 00:38:08,680
And then for our community, one of the things that gives us peace of mind is that if you

725
00:38:08,680 --> 00:38:10,320
want, you can self-host.

726
00:38:10,320 --> 00:38:12,800
I've opted to use a Bitwarden cloud.

727
00:38:12,800 --> 00:38:16,360
I feel like they're probably going to do a better job of managing that than I will.

728
00:38:16,360 --> 00:38:19,680
But I know some of you out there just prefer to run it all on your own infrastructure.

729
00:38:19,680 --> 00:38:21,920
I like that Bitwarden gives you that flexibility.

730
00:38:21,920 --> 00:38:25,400
And then I think the other thing that's key to it is that there's actually a really large

731
00:38:25,400 --> 00:38:29,440
active community on their forum and on Reddit to help with all that kind of stuff.

732
00:38:29,440 --> 00:38:31,840
So you're not just off on an island by yourself either.

733
00:38:31,840 --> 00:38:35,280
It's really nice and it gives me the confidence to use Bitwarden and it gives me the confidence

734
00:38:35,280 --> 00:38:37,440
to recommend it to our audience.

735
00:38:37,440 --> 00:38:40,160
So go get started for free at bitwarden.com slash Linux.

736
00:38:40,160 --> 00:38:43,840
That's a great way to get started, make your online security better, and you support the

737
00:38:43,840 --> 00:38:46,720
show and recommend it to somebody who needs this advice.

738
00:38:46,720 --> 00:38:54,880
You know they're out there, bitwarden.com slash Linux.

739
00:38:54,880 --> 00:39:00,880
Majid wrote in and he pleaded with us, could you read my feedback on your lovely show?

740
00:39:00,880 --> 00:39:01,880
That would make my year.

741
00:39:01,880 --> 00:39:03,600
So I thought we could do that.

742
00:39:03,600 --> 00:39:05,280
And there's also a question here.

743
00:39:05,280 --> 00:39:10,040
If you are in contact with the NixOS devs, could you ask how accessibility is going with

744
00:39:10,040 --> 00:39:11,760
the installation?

745
00:39:11,760 --> 00:39:16,400
I'm blind and would like to try out NixOS and the NixOS challenge if possible.

746
00:39:16,400 --> 00:39:20,080
All right, we'll put feelers out there and if we hear anything back, we'll relay it here

747
00:39:20,080 --> 00:39:21,080
on the show.

748
00:39:21,080 --> 00:39:23,080
That's a great question.

749
00:39:23,080 --> 00:39:27,640
And I wonder too if, and maybe somebody could let me know for my own edification, is this

750
00:39:27,640 --> 00:39:33,000
something that a VM software could help solve, like a VM that supports screen reading?

751
00:39:33,000 --> 00:39:34,000
I wonder too there.

752
00:39:34,000 --> 00:39:35,380
I don't really understand how that works.

753
00:39:35,380 --> 00:39:40,800
So I'd love to know for my own education if that is indeed in the works and if there is

754
00:39:40,800 --> 00:39:44,160
another solution our listener could employ.

755
00:39:44,160 --> 00:39:47,600
And now it is time for Le Boost.

756
00:39:47,600 --> 00:39:53,000
Our first boost is from the Golden Dragon with 4500 sats.

757
00:39:53,000 --> 00:39:55,040
How'd this Linux time machine get here?

758
00:39:55,040 --> 00:39:59,880
Oh well, on my journey, I would have stuck out the pain points I had in college with

759
00:39:59,880 --> 00:40:04,440
my Wi-Fi drivers not working and just figured it out.

760
00:40:04,440 --> 00:40:08,640
Back then, I didn't have the same patience I have now and that would have made all the

761
00:40:08,640 --> 00:40:09,640
difference.

762
00:40:09,640 --> 00:40:13,160
I love the idea that the audience took this idea of the time machine and sent us a few

763
00:40:13,160 --> 00:40:14,920
of their own ideas.

764
00:40:14,920 --> 00:40:17,840
Marcel wrote in with a similar kind of theme for 2000 sats.

765
00:40:17,840 --> 00:40:23,200
He said, I wish I could say my biggest Linux regret was rising i3 gaps instead of paying

766
00:40:23,200 --> 00:40:25,120
attention to my undergrad classes.

767
00:40:25,120 --> 00:40:29,880
Probably my biggest regret was not learning NixOS and Docker back when those things were

768
00:40:29,880 --> 00:40:31,760
just coming out.

769
00:40:31,760 --> 00:40:33,600
Thanks for taking us along on the time machine.

770
00:40:33,600 --> 00:40:34,880
It was fun.

771
00:40:34,880 --> 00:40:38,480
Another great boost came in from the Muzo 2000 sats.

772
00:40:38,480 --> 00:40:39,920
Thank you very much.

773
00:40:39,920 --> 00:40:45,700
Regarding ARM hardware, there are the SBBR and EBBR specifications that are supported

774
00:40:45,700 --> 00:40:51,600
by recent single board computers and ARM server hardware, which allows generic ISO images

775
00:40:51,600 --> 00:40:53,760
to be booted on compliant hardware.

776
00:40:53,760 --> 00:40:55,560
Been listening since early 2020.

777
00:40:55,560 --> 00:40:56,560
Keep up the great work.

778
00:40:56,560 --> 00:40:58,020
Well, thank you.

779
00:40:58,020 --> 00:41:02,260
The amazing rain sent in a boost and caught us.

780
00:41:02,260 --> 00:41:05,400
Did you guys announce the results of the Nix server poll?

781
00:41:05,400 --> 00:41:11,060
So in our NixOS challenge results, we asked the audience if we should consider nuking

782
00:41:11,060 --> 00:41:16,000
and paving our local server setup here, going from OpenSUSE Tumbleweed as the base OS and

783
00:41:16,000 --> 00:41:19,120
going for more like a Proxmox Nix kind of setup.

784
00:41:19,120 --> 00:41:20,720
I'm feeling nervous.

785
00:41:20,720 --> 00:41:27,400
So we did get the results and we had almost 300 respondents, which I've actually found

786
00:41:27,400 --> 00:41:29,720
even that low can still be representative.

787
00:41:29,720 --> 00:41:33,720
I think people didn't vote on it as much because it was buried in what was our most show notes

788
00:41:33,720 --> 00:41:35,200
we had ever had for links.

789
00:41:35,200 --> 00:41:36,200
Of course.

790
00:41:36,200 --> 00:41:41,840
So we asked, should we use NixOS as our cloud and local server OS going forward?

791
00:41:41,840 --> 00:41:51,320
And with 57.44% of the vote, the audience said, yes, keep us posted with 42% of the

792
00:41:51,320 --> 00:41:53,780
vote going to stick with SUSE.

793
00:41:53,780 --> 00:41:57,040
It was a 57% vote for yes.

794
00:41:57,040 --> 00:41:58,040
Go with Nix.

795
00:41:58,040 --> 00:42:00,000
That feels like a really close result.

796
00:42:00,000 --> 00:42:01,640
Yeah, I don't know.

797
00:42:01,640 --> 00:42:02,640
Should we do both?

798
00:42:02,640 --> 00:42:04,080
What do you think, Wes?

799
00:42:04,080 --> 00:42:05,920
How do you how do you feel about this, Wes?

800
00:42:05,920 --> 00:42:07,160
I think we have some work to do.

801
00:42:07,160 --> 00:42:10,960
I could see also kind of having our cake and eating it too.

802
00:42:10,960 --> 00:42:11,960
Like if we do VMs.

803
00:42:11,960 --> 00:42:12,960
Wait, you brought cake?

804
00:42:12,960 --> 00:42:13,960
I should have.

805
00:42:13,960 --> 00:42:15,360
I should have said that.

806
00:42:15,360 --> 00:42:21,680
But if we did VMs, we could do Nix base and then open SUSE tumbleweed VMs or something,

807
00:42:21,680 --> 00:42:22,680
right?

808
00:42:22,680 --> 00:42:24,600
Like there's still maybe a role for tumbleweed here, right?

809
00:42:24,600 --> 00:42:25,600
All right.

810
00:42:25,600 --> 00:42:31,080
We install open SUSE and then we install LexD and then we run Nix.

811
00:42:31,080 --> 00:42:32,080
Right.

812
00:42:32,080 --> 00:42:34,380
This again, this election is being called into question.

813
00:42:34,380 --> 00:42:36,840
You see, we had some meddling with the last election.

814
00:42:36,840 --> 00:42:41,160
There was lizard meddling and now it is called into doubt this election.

815
00:42:41,160 --> 00:42:42,160
I don't know what to do.

816
00:42:42,160 --> 00:42:46,760
We'll have to keep you posted because clearly we have not figured out this controversy yet.

817
00:42:46,760 --> 00:42:49,360
We should never have left Arch.

818
00:42:49,360 --> 00:42:50,360
You know what?

819
00:42:50,360 --> 00:42:57,560
Maybe that's the lesson.

820
00:42:57,560 --> 00:42:58,560
All right.

821
00:42:58,560 --> 00:43:00,920
Our last boost 1200 SATs from the Computer Guy.

822
00:43:00,920 --> 00:43:02,040
I absolutely love the shows.

823
00:43:02,040 --> 00:43:04,640
They inspired me to revive my own podcast.

824
00:43:04,640 --> 00:43:07,720
Oh, that's great.

825
00:43:07,720 --> 00:43:09,640
JB is my favorite thing to tune into online.

826
00:43:09,640 --> 00:43:12,120
Well, thank you, the Computer Guy.

827
00:43:12,120 --> 00:43:14,800
Also thank you to some boosts from the Spherical Cow.

828
00:43:14,800 --> 00:43:16,500
He sent a couple of thank you boosts.

829
00:43:16,500 --> 00:43:20,100
We also have a few of you out there that are streaming in SATs while you listen.

830
00:43:20,100 --> 00:43:22,240
Of course, thank you to our members.

831
00:43:22,240 --> 00:43:26,520
We are actually working on boosts for the member feed because that's a frequently requested

832
00:43:26,520 --> 00:43:30,160
feature, but we have to build out a lot of other infrastructure first.

833
00:43:30,160 --> 00:43:34,360
So it's not going to be anytime soon, but it is on our radar.

834
00:43:34,360 --> 00:43:38,680
We are detailing out like those new website plans, things that will be new member features,

835
00:43:38,680 --> 00:43:40,240
stuff that we're building out over the summer.

836
00:43:40,240 --> 00:43:45,360
We are detailing that out in office hours.hair, starting with episode three and then kind

837
00:43:45,360 --> 00:43:48,600
of doing it fortnightly from there.

838
00:43:48,600 --> 00:43:49,600
So join in.

839
00:43:49,600 --> 00:43:53,520
Listen to that if you're curious about where all that's going.

840
00:43:53,520 --> 00:43:54,520
We have a pic.

841
00:43:54,520 --> 00:43:55,520
I think you found this one, Wes.

842
00:43:55,520 --> 00:43:58,200
Yeah, but you, you tried it out.

843
00:43:58,200 --> 00:43:59,600
I think it's called Liar Bird.

844
00:43:59,600 --> 00:44:05,520
It's a voice changing app, simple and powerful voice changer for Linux written in GTK three,

845
00:44:05,520 --> 00:44:09,320
and it takes your microphone input, whatever it might be, and then it creates a virtual

846
00:44:09,320 --> 00:44:13,360
output that you can record in any app that you use to record your audio.

847
00:44:13,360 --> 00:44:16,320
And the idea is that it's supposed to make you sound kind of, kind of fun.

848
00:44:16,320 --> 00:44:21,200
You can make yourself sound like you're on a sketchy radio connection from far away.

849
00:44:21,200 --> 00:44:25,720
And it has like a Darth Vader mode and it has a gender changer mode and it has like

850
00:44:25,720 --> 00:44:29,560
a megaphone mode, just random stuff like that.

851
00:44:29,560 --> 00:44:31,040
And it's a nice looking app, simple.

852
00:44:31,040 --> 00:44:32,520
You didn't try the Darth Vader mode?

853
00:44:32,520 --> 00:44:34,200
Oh, I tried them all.

854
00:44:34,200 --> 00:44:37,120
I just could have, you know, I didn't want to be obnoxious with all of the different

855
00:44:37,120 --> 00:44:40,320
clips, but yeah, before the show we were playing around quite a bit.

856
00:44:40,320 --> 00:44:41,520
It's fun.

857
00:44:41,520 --> 00:44:45,360
If you've got a great pic idea or something that you're like, why have these guys never

858
00:44:45,360 --> 00:44:48,400
talked about X on the show, send it in to us.

859
00:44:48,400 --> 00:44:50,760
Go to linuxunplug.com slash contact.

860
00:44:50,760 --> 00:44:52,240
We got the contact form there.

861
00:44:52,240 --> 00:44:56,940
And of course you can always boost it in by getting a new podcast app at newpodcastapps.com.

862
00:44:56,940 --> 00:45:00,400
And the great thing about those apps is it's not just boosts, it's the entire podcasting

863
00:45:00,400 --> 00:45:01,940
2.0 spec.

864
00:45:01,940 --> 00:45:06,200
And the more people that use those apps, the more podcasts will adopt things like transcripts

865
00:45:06,200 --> 00:45:10,480
and chapters, embedded image and all kinds of nice things that podcasting has needed

866
00:45:10,480 --> 00:45:11,480
for a long time.

867
00:45:11,480 --> 00:45:14,760
So go get a new podcast app at newpodcastapps.com.

868
00:45:14,760 --> 00:45:18,960
And of course you can always grab linuxactionnews.com in one of those apps.

869
00:45:18,960 --> 00:45:22,640
Well at least Linux Action News podcast at linuxactionnews.com.

870
00:45:22,640 --> 00:45:23,640
I think that's how it works.

871
00:45:23,640 --> 00:45:27,200
Anyways, it's our weekly news podcast, and if you're not getting that, then you're missing

872
00:45:27,200 --> 00:45:29,800
out on what's going on in the world of Linux.

873
00:45:29,800 --> 00:45:31,140
And we welcome you to join us live.

874
00:45:31,140 --> 00:45:32,160
Come on in.

875
00:45:32,160 --> 00:45:34,360
Wes sets up some chips and dip for the live members.

876
00:45:34,360 --> 00:45:35,360
They're virtual chips and dip.

877
00:45:35,360 --> 00:45:37,360
Could you imagine sending out chips to everybody?

878
00:45:37,360 --> 00:45:38,520
We don't want to make a mess.

879
00:45:38,520 --> 00:45:41,760
Maybe when we make it big time, big time, we'll send out chips to everybody.

880
00:45:41,760 --> 00:45:46,080
But in the meantime, you get some virtual chips and dip when you come over to jblive.tv.

881
00:45:46,080 --> 00:45:50,200
We do it on noon, around noon, right around noon or we start getting started.

882
00:45:50,200 --> 00:45:51,680
Sometimes there's virtual tacos.

883
00:45:51,680 --> 00:45:53,620
Sometimes there are indeed.

884
00:45:53,620 --> 00:45:58,860
And you can hang out in our chat room or our mumble room and participate here in this podcast.

885
00:45:58,860 --> 00:46:00,160
We like it when you do that.

886
00:46:00,160 --> 00:46:01,160
That's real great.

887
00:46:01,160 --> 00:46:04,660
We also just like it when you listen in the chair with a friend, just like all that kind

888
00:46:04,660 --> 00:46:05,740
of stuff.

889
00:46:05,740 --> 00:46:09,760
We should also mention, Chris, I think we're recording in a new office hours this week,

890
00:46:09,760 --> 00:46:10,760
aren't we?

891
00:46:10,760 --> 00:46:11,760
It'll be live on Tuesday, Brent.

892
00:46:11,760 --> 00:46:12,760
All right.

893
00:46:12,760 --> 00:46:13,760
Noon air.

894
00:46:13,760 --> 00:46:14,760
All right.

895
00:46:14,760 --> 00:46:15,760
Noon air again.

896
00:46:15,760 --> 00:46:16,760
That's right.

897
00:46:16,760 --> 00:46:17,760
Yeah.

898
00:46:17,760 --> 00:46:18,760
Yeah.

899
00:46:18,760 --> 00:46:19,760
Let's let's let's talk website stuff.

900
00:46:19,760 --> 00:46:20,760
Let's talk project stuff.

901
00:46:20,760 --> 00:46:21,760
Let's talk podcast stuff.

902
00:46:21,760 --> 00:46:22,760
All of that on Tuesday, office hours.

903
00:46:22,760 --> 00:46:23,760
The mumble room will be open as well.

904
00:46:23,760 --> 00:46:24,760
See you next week.

905
00:46:24,760 --> 00:46:25,760
Same bat time.

906
00:46:25,760 --> 00:46:26,760
Same bat station.

907
00:46:26,760 --> 00:46:32,280
In the meantime, links to what we talked about today at Linux Unplugged dot com slash four

908
00:46:32,280 --> 00:46:33,280
five seven.

909
00:46:33,280 --> 00:46:34,280
Let's see.

910
00:46:34,280 --> 00:46:35,280
You can go find.

911
00:46:35,280 --> 00:46:36,280
Where are you on Twitter, Wes?

912
00:46:36,280 --> 00:46:37,280
At Wes Payne.

913
00:46:37,280 --> 00:46:38,280
Yeah.

914
00:46:38,280 --> 00:46:39,280
There you go.

915
00:46:39,280 --> 00:46:40,280
The network's at Jupiter Signaled.

916
00:46:40,280 --> 00:46:43,280
Catch more Alex on the self-hosted podcast at self-hosted dot show.

917
00:46:43,280 --> 00:46:46,200
And I think that's all the plugin we have.

918
00:46:46,200 --> 00:46:49,040
I'll just spend the last few seconds thanking you for listening.

919
00:46:49,040 --> 00:46:51,040
If you've written in or thinking about it, do it.

920
00:46:51,040 --> 00:46:52,080
It's a big part of the show.

921
00:46:52,080 --> 00:46:54,360
It helps us think of what you want to hear.

922
00:46:54,360 --> 00:46:55,360
Make a new pop.

923
00:46:55,360 --> 00:46:56,360
Make new show content.

924
00:46:56,360 --> 00:46:57,360
All that stuff.

925
00:46:57,360 --> 00:46:58,360
It's really useful.

926
00:46:58,360 --> 00:46:59,360
We like your feedback.

927
00:46:59,360 --> 00:47:00,360
We're making the show for you.

928
00:47:00,360 --> 00:47:01,360
Yeah.

929
00:47:01,360 --> 00:47:02,360
Linux Unplugged dot com slash content.

930
00:47:02,360 --> 00:47:03,360
All right.

931
00:47:03,360 --> 00:47:04,360
Thanks for being here.

932
00:47:04,360 --> 00:47:30,800
We'll be right back here next week.

