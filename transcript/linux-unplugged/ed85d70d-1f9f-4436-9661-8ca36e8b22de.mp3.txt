Wes, I think I found the creepiest run Linux
I've ever seen.
Oh, you mean this weird robot cat?
Yeah, Python, robot, and cat that runs Linux.
It's the Mars cat.
Just like a real cat, Mars cat is fully autonomous,
stretching, tapping, and even burying litter.
It may express different emotions
by different meows or gestures.
Mars cat can play with you or your toys.
Or your children.
Here.
Mars, go sleep.
And see.
It can interact with objects or people nearby.
Even play with real cats.
It sounds so great, but if you watch the video,
which we'll have linked in the show notes,
the thing doesn't move like a cat.
No, cats are graceful animals,
and this is an awkward robot.
It's very awkward, it's very stiff,
it's very scary looking,
and they want you to treat it like a real cat.
It heals with purr sounds.
Every Mars cat is unique.
From its eyes, body, to personality,
you can pet it and shape its characters in your own way.
Dress it up, make it more adorable.
Mars cat is open sourced and programmable.
With powerful quad core Raspberry Pi,
you can create your own applications.
Mars cat is also an ideal choice for education,
research, and commercial purpose.
Or other things.
This thing is, like they said,
powered by Raspberry Pi, uses Python,
it has a series of APIs available to control the camera,
the microphone, it has touch sensors,
16 servos, which it needs about 30 more,
and it's a platform for a bionic cat
for the first home robot.
The weird thing is, and this is in the video,
when they take this thing apart to see the insides,
it's as creepy as if they were taking apart a real cat.
Yeah, I mean, I like a lot of these ideas,
I love that it's open sourced,
but you have to be able to actually be around the thing.
And I also wonder, it is powered by USB-C,
but where do you plug it in?
Hello friends, and welcome in to the Unplugged program.
My name is Chris.
My name is Wes.
Hello Wes, you've got that very special edition look going,
you've dressed up all nice.
Oh yes, to the nines.
I don't know why you have to dress up like that,
but I appreciate it,
and it makes me feel like it's a very special episode.
It's all for you.
Today, we're going to bridge the gap
between shareware and free software.
Those of us who have been around for a piece
remember a time when you bought software in bags on walls,
and it was the full version of the program,
but it often came with certain limitations.
How did we get from that to open source
and free software really in the world?
We're gonna talk about that today,
as well as some news, some discussions,
and of course, we've got Alex and Jeezy here.
Hello gentlemen.
Hello. Hello, hello.
And as always, we have our virtual lug,
a fantastic showing, hello Mumble Room,
time appropriate greetings.
Hello, hello.
Happy Linux Tuesday. Hello, hello.
Hola.
Happy, happy Linux Tuesday.
Thank you all for making it here.
We have a lot,
I think we're gonna have a really fun discussion,
a lot to get into today.
So let's start with some good news, not robot cat news,
but good news for Kubuntu users
who might be interested in a laptop
that comes pre-bundled
with what they're calling Kubuntu Focus.
Michael Liarbull over at Feronix
had a chance to give it a look,
and he says, I've been testing out for several weeks.
So he got it like under a embargo.
Oh, look at him go.
An old NDA skis, as they say in the biz.
This is the first generation of the Kubuntu Focus laptop.
You ready for the hardware specs, Wes?
Oh please. You got any guesses?
Well, I'm guessing I'll probably be a little disappointed.
I thought it was,
I mean, when I first heard the initial rumors,
I thought it was gonna be an ARM box, right?
Yeah, something small and minimal.
This sucker has a Intel Core i7-9750 processor,
an NVIDIA GeForce RTX 2060.
Wait, what?
It's got a 16.1 inch, 1080p screen
that runs at 144 Hertz.
It's IPS too.
It's got a terabyte Samsung Evo drive in it.
And then all of the other kind of niceties
that a Clevo laptop of this size has,
which have been getting pretty competitive.
Do I also see it's got 32 gigs of RAM?
That's right.
Wow, okay, I'm interested.
Yeah, I mean, as far as a laptop of this nature,
a high-end laptop, if you're a plasma user,
Liarbull seems to be pretty impressed.
He says the software side's looking choice.
Yeah, that's right, Kubuntu 18.04.3 is shipped on the device
with some alterations around the default desktop environment
and themes, so you get a little bit of customization there,
including the dark theme by default.
Chris, you'll like that.
Well, now I'm sold.
You know, you have that NVIDIA GPU too,
so Google Chrome is included and already tweaked
with all of the GPU options for maximum acceleration.
Also of note, it ships with disk encryption
turned on by default.
So if you're listening to this and you're wondering,
what's Kubuntu focus?
We'll have a link to it in the show notes.
You can also just go to kfocus.org.
It's the result of the collaboration
between the Kubuntu Cancel and Tuxedo
working to create something that they felt
was pretty well focused on the user.
We maintain the platform so our customers
can focus on work and play.
Yeah, I mean, you could really see it.
There's not a very wide selection of pre-built hardware
shipping with plasma.
I mean, I'm really struggling to think of anything that,
I mean, almost all of them that you could buy that's
System76 or Dell or somebody else
would be generally GnomeShell.
Right, right.
Not all of them, I guess, not 100%, but a lot of them.
Some of them, you know, you got like the Mint hardware
stuff like that that's probably Cinnamon.
And there's a couple others, but.
But yeah, you're right.
Plasma's been somewhat underrepresented,
and it's nice to see what seems like a great offering now.
OK, can I admit what feels like an insecurity to you guys?
And I think it might be.
You know, that's what we have this virtual users group for,
Chris.
You can be honest, share your feelings.
All right.
Hi, my name is Chris, and I'm afraid
that the Windows Terminal is getting extremely competitive.
And the worst thing about it is Microsoft
is incorporating legit nice features that
have been contributed by outside community members
into their core product.
It's like they freaking get it, too.
And that's really the most frustrating.
They're using open source to compete against it.
Oh, they got it.
They figured it out.
Maybe that's why they love it so much.
That was our secret.
I am talking about, of course, they have now
added those cool CRT retro effects
that you get from like cool retro term
into the Windows Terminal itself, which was a contributing.
The community member was called, I love his handle, Irony Man.
Not Iron Man, but Irony Man contributed the CRT retro
effects to this.
And now it's shipping as an experimental feature.
There's other really kind of cool things in here, too.
Some things you might like.
Yeah, they've got some nice updates to usability,
things like you can now modify your profiles.json
to have your own default profile settings.
And once you set that property, you
can have it applied to like all your profiles.
Yeah, so if you always want a certain font or a certain size,
you can set some defaults across all profiles.
That sounds really nice, and it sounds
like the direct kind of feature you
add when you've been listening to the users of that terminal.
Yeah, stuff, too, like some improvements
to how tab sizing works.
It's getting pretty slick.
The reason why I wanted to pull this story in because there's
an interesting connection here from a company that was really
ignoring its terminal for many, many releases.
We spent years ragging on old command.exe.
Yeah, and then they really focused in on it,
and it really has exploded.
I think your insecurities are somewhat right, though, too.
I mean, it helps them that they've got this open source.
But even already on the Mac desktop,
they've got competitors, too.
I think we need to step up our game.
Yeah, so that, as you read in my mind, is what I was thinking.
Imagine if one of the distros really got it in its head,
like, you know what I'm going to do
is I'm really going to invest in the terminal.
I'm going to make the terminal really great.
I know most people are listening and probably thinking
to themselves, oh, the terminal's fine.
There's nothing really wrong with it.
But I don't know, man.
I think with the WSL2 stuff and terminal and all of that,
I think it's very likely that more and more power users are
getting at least a little bit what they want.
At least they can stay on the Windows platform.
And I guess good enough for them.
Maybe I shouldn't be, maybe it's fine.
Maybe it's fine.
It is hard to say, and I don't like thinking,
that a beautiful, well-functioning open source
terminal somehow makes the world worse.
You know one thing that really I always
struggle with on a Windows terminal,
whether it's PuTTY or whether it's the built-in one,
is copy and paste.
It's just really difficult for some reason.
Yeah.
You know, my favorite, favorite thing
about using the terminal on Linux
is that X clipboard when you just highlight something
and then you just middle click to paste it.
Yeah.
Soon as I'm on any other terminal system
and I go to highlight, and I'm like, oh, yeah, right.
It just changes.
Like you think you already have it.
You've copied it.
So quick, so fast, so fast.
Now, Wes, I want to go to our reporter on the ground
in Enlightenment Island.
Minimek, do you have an E17 perspective
on this particular situation?
Over.
And tell us what you're learning now.
Oh, ha.
So Enlightenment, we started with terminology,
which is a future terminal, which is really cool
because you can watch a video while doing
some commands on your command line and everything
and all that in your terminal.
So it's quite an interesting terminal.
And it is available in the Ubuntu, I think.
OK.
And of course, a cool retro term.
I like what Node Runner said in the chat room, though.
The future is the GUI.
But have you tried the terminal?
That's exactly it.
Nailed it.
That is so exactly it.
The future is a great GUI where I run a really nice terminal.
All right, so last week, we've talked
about some community transitions that were happening
around container Linux.
And there was also a recent story
about a pretty big upset within the Rust community
around the ActixX project.
I wanted to say ActiveX, but the ActixX project.
And that developer, who is actually a Microsoft employee,
experienced significant burnout and quit the project,
pulled the repos off.
Now, this is actually a pretty significant project
for the Rust community.
So it made headlines pretty quickly.
How would you describe its relevancy?
It's probably one of the few that,
or it's the largest that does what it does in the community.
Right.
So it's sort of a whole framework
for web services, interactive, HTTP sorts of servers.
It's kind of the biggest one.
At least one of the earlier and most well-known
in the community.
And the number of projects that had used it,
the sort of community that had developed around it,
led you to think it was, maybe there was a team behind it,
it was well-maintained or endorsed by the community.
Turns out, mostly just one hardworking maintainer.
Yeah, we covered this story.
The whole cycle happened during the week of Linux Headlines.
And I'm happy to say there is a resolution, which
is also covered in Linux Headlines at linuxheadlines.show.
But the really quick summary is, he got overwhelmed
and felt probably a little taken advantage of,
and was sick and tired of justifying well-thought-out
design decisions over and over again,
like the same stuff would get noticed and thrown at him.
And he just reached a point of, I'm done with open source,
and I'm pulling the repo.
And then people panicked because of the value of this project.
Well, and I think there was another side of that, too,
is that it started as a personal project,
and it grew.
And so you could say, you know, there were design decisions.
And I think a lot of the community
had some rising standards, or at least standards
that they wanted to implement.
And that takes a lot more work, or maybe just
a different style of management than a single maintainer
can provide.
Though, after some time, the developer had a think,
and came back and said, here's what I'm going to do,
is I'm going to hand the reins over to another community
member.
And said, oh, the repositories are back online.
And a transition is taking place, and it's all amicable.
And it's really nice to see that.
But it's a reminder of a constant problem.
And I really feel for these developers,
because they start something in some cases
that they don't plan to monetize,
or they don't plan to turn it into a business
or a foundation.
It's really scratching their own edge.
Scratching their own ends, trying to learn,
or just help the community.
And in this case, this individual just
nailed the timing, because interest in Rust was growing,
and there was interest in having these types of services.
And so it just took off like wildfire,
and he ended up running a fairly large project.
Pretty common story.
And it's something that we have a hard time
fully appreciating, because we don't do the work.
I have definitely, as I've gotten to be an old fat fart,
is-
Wisened, wisened.
Oh, thank you.
I really didn't understand how much work went into all
these different career trajectories.
And when you think you know what a plumber's job is,
or an electrician's job, or a media person's job,
or a software developer's job, you just
can kind of only really appreciate what
you were able to observe from afar.
Right.
You get the surface level, and none of the hard work
that goes on underneath.
And there was a blog post by Drew DeVault that it
was like, I wrote this.
Only it could be all about content creation,
and he's talking about software.
And so I think this is a universal human problem.
And he posted this last week as this episode goes out.
And I think this is so worth a read.
So I want to encourage you to go to Drew's entire blog
to read the entire thing.
But he just recently crossed a major milestone.
February will mark one year that I've
been working on self-directed free software projects
full time.
I was planning on writing an optimistic retrospective
article around this time, but given
the current mood of the ecosystem,
I think it would be better to be realistic.
In this stage of my career, I now
feel at once happier, busier, more fulfilled, more engaged,
more stressed, and more depressed
than I have at any other point in my life.
Yeah.
Isn't that a weird mix?
And it's point can I really?
It's the hobby turned profession.
There's a lot of emotions there.
I mean, he speaks to that more.
I also have mixed feelings about how busy I am.
Every day I wake up to 100 new emails, delete half of them,
and spend three to four hours working on the rest.
Patches, questions, support inquiries, monitoring,
and reports.
It's endless.
On top of that, I have dozens of things
I already need to work on.
The CI work distribution algorithm
needs to be completely redone.
I need to provision new hardware.
Oh, yeah, and the hardware that I need
ran into shipping issues again.
I need to improve monitoring.
I need to plan for FOSDEM.
I need to finish the Wayland book.
I need to figure out the memory issues in Himitsu,
not to mention write the rest of the software.
I need to file taxes, which is twice as much work
when you own a business.
I need to implement data export and account deletion.
I need to finish the web-driven patch review UI.
I need to finish writing docs for Alpine.
I have to work more on the Pine phone.
I have a legacy server which needs to be overhauled
and is now on the clock because of Acme V1.
That's a lot of stuff.
Yeah, and that's not even all of it.
He's like, that's what's off the top of my head.
He says, not to mention the tasks which
have been on hold for longer than they've been planned
for in the first place.
Alpine is still going to have hundreds of Python 2 packages
by the end of life.
RISC-V work has been stalled because the work is currently
blocked by a large problem that I simply can't automate.
There's another project he's committed
to called Fospay, which is having issues pulling data
figures from Patreon.
And he has to restart a process manually every so often
to get it to work.
And there's dozens of other loose ends.
And he says, that's not even considering any personal goals.
And I think anybody that's kind of been in this situation
has been here, it's like you just get so focused on work.
He says, which I have vanishing little time for.
I get zero exercise.
And though my diet is mostly reasonable,
the majority of it is delivery, unless I get the odd two hours
to visit the grocery store.
That is, unless I want to spend those two hours with my friends,
or in my case, family and wife, which
means it's back to delivery.
My dating life is almost non-existent.
I want to spend more time studying Japanese,
but it's either that or keeping up with my leisure reading.
Lofty goals of also studying Chinese or Arabic
are but dust in the wind.
And to make matters worse, I'm addicted to caffeine again.
There have been healthy ways and unhealthy ways
of dealing with the occasional feelings of being overwhelmed
by all of this.
The healthier ways have included taking walks, reading my books,
and spending a few minutes with my cat, doing chores,
and calling my family to catch up.
Less healthy ways have included walking to the corner store
to buy unhealthy comfort foods.
Oh, yeah.
Consuming alcohol or marijuana too much or too often,
getting in stupid internet arguments,
being mean to my friends and colleagues,
and googling myself to read negative comments.
Yeah.
He says, I've been trying to do that my entire life,
trying to get all of this balanced.
Writing code for someone else has always been a huge drain
on my emotional well-being.
That's why I worked on my side projects in the first place,
to have an outlet through which I could work
on self-directed projects without making compromise
for some arbitrary deadline.
I recently had that realization that I
should do a personal side podcast just
so I have a pure creative outlet so I can stick to what
works here, like the topics.
And if I want to talk about RVs or whatever it might be,
I need to have an outlet for that.
But I don't need to put it into a Linux show.
Or shoehorn it in.
So and the idea of taking as long
as I want to make content, because I've been doing
weekly content for so long.
I could really kind of connect with this.
He says, when I'm in the zone writing lots of code
for a project I'm interested in, knowing
it's going to have a meaningful impact on my users,
knowing that it's being written under my terms
is the most rewarding work I've ever done.
This isn't a retrospective I wanted to write,
but it's nice to drop the veneer for a few minutes
and share an honest take on what it's like.
This year has been nothing like what I expected it to be.
It's both terrible and wonderful and very busy.
I have a bit of advice for Drew via podcast here.
Just for a moment, the rest of you can skip ahead.
But my advice directly to Drew is, and to be clear,
this isn't our Drew.
This is software developer Drew.
Our Drew, Drew DeVore, is not.
This is Drew DeVault, which now realizing sounds
a lot like Drew.
Drew's also very busy, so I'm sure he sympathizes with this.
Yeah, this is not our Drew.
This is software developer Drew, full-time software developer
Drew.
Sway maintainer, and many other cool projects.
Yes, we've talked about him before on the show,
so I kind of went in with a little bit of assumption.
But my advice to him, and really anybody
who finds themselves in these positions actually,
is try not to get in the, oh my god, I'm so busy mentality.
Because it's a way of thinking, and it's
a way to immediately say, no, I can't do that, I'm too busy.
I can't do that, I'm too busy.
Nah, what's the point of running out for 15 minutes?
I'm too busy.
And it's a cycle you can get in that amplifies your feelings
about not being appreciated for the software you're creating,
or people not understanding your rationale.
Those all get amplified by this, I'm too busy
to deal with this crap mentality.
And you've got to break it, and you've got to just say,
right now is quite busy, but there will be time.
And you have to just shift your mentality,
and try to say yes to a few things.
I know that sounds hard when you're really busy,
but it is a tricky mindset you can get locked into,
and it's very counterproductive.
So and I think it leads to burnout.
That's always hard to prioritize long term over short term,
but you have to make time.
Yeah, I mean, it's like I'm some expert at it.
I was feeling quite overwhelmed when I lived in England
and working in London.
Living in a big city like that, I actually
found it quite oppressive.
And I was going to an office every day,
so I had an excuse to get out the house.
And so one of the big things, obviously,
as some of these listeners will know,
is that I obviously emigrated last year to the US.
And one of the primary drivers for that was quality of life.
And it was me being honest with myself, and sort of saying,
and looking at my life as it was,
and saying, am I happy with how this is going?
And would I be willing to try and change some things
to try and improve it?
And then I got this job with Red Hat,
where I'm working from home the whole time.
As in, if I want to never leave the house,
I could literally never leave my front door ever again.
So I've kind of swapped one set of problems
for another set of problems, which is kind of great,
because I don't miss a commute, I'll be perfectly honest.
I miss the kind of disconnection between the office and home,
that 20, 30 minutes, or sometimes two hours.
Clear separation of where you're doing work.
Yeah, I don't miss a commute.
Genuinely, I don't.
But there are some days where you think,
it would be nice to take 20 or 30 minutes.
And a great example of this is, before we recorded
the last self-hosted episode, I went and said to Chris,
look, I just need to take a 20, 30 minute walk
to clear my head and just get some air,
because I actually hadn't left the house that day.
And it was like, what, 4.30 PM at that point?
So there's a bunch of stuff you've got to be cognizant of.
I did that recently, and I should do it more often,
because I have found I have a huge resistance to doing it.
But if I go and then come back, not only
do I feel good for actually having gotten it done,
and that gives me a bit of a boost,
but I tend to have a bit of a temperament or mind
shift on a topic.
And when I got back, I really cranked out a lot of work,
which felt really awesome, too.
So then it was like a double whammy.
And so it felt like it was worth the time,
and it was nice to get a break in the rain.
Brent, you said you were just struggling with this stuff
earlier this morning.
Yeah, I mean, I've been working as a solo photographer now,
I guess, solo photographer slash podcaster for basically ever.
And Alex, you sort of expressed this as well,
but being in your own little office in your house,
or a lot of people feel this at work, too,
you feel kind of isolated somehow.
And so I find myself just really empathizing with everything
you read there, because most of those thoughts
that he expressed, I was thinking just this morning,
like, oh, jeez, I can't do the 20 minutes of yoga
that my body is craving that I know helps me
throughout the day, because I feel
like I have too many things that I need to get done,
and those 20 minutes feel really precious.
But I think sometimes I remind myself
that, like you were saying, Chris, it's a bit of a trap,
because by taking those 20 minutes to go for a walk
or to eat a healthy meal or something like that,
your future minutes are actually spent far better.
And when you're just overloaded with work,
I think it's easy to forget that kind of stuff.
Think about it like painting a wall print.
Like, the prep's the worst part, but once you actually
get there and you do it properly,
take the extra time to prepare for the day properly.
It's a really good point, and I think something we need
to remember every single day.
But I even hit with the topic of social life,
because it feels like often we feel as though we have
some quasi-social interaction through our computers
via the internet and stuff like that.
But it's just not the same, and it doesn't give us the same.
Slow bandwidth.
Yeah, there's not the same human connection
that is life-giving.
Our factual evolved brain's like, oh, this is good.
I'm chatting with people.
I'm very social.
But there's this lower level part of you.
I think we also need to remember, too,
to accept that when working in open source,
there are others in day-to-day life that let other people make
time for their own health and well-being
if you're going to keep interacting with them.
I think there's room for developers
to have a better set of expectations for their users
to be able to set expectations.
And I think there's room for users, a lot of room,
for users to adjust their expectations of open source
projects.
And a lot of people blame GitHub and the GitHub model for this,
but I actually think you could use that same argument,
say people could be spending the time to look into who's
contributing to this project.
Do the freaking math and realize it's one developer
and set their expectations accordingly.
Once you start using it, say like, this is important to me.
How do I make sure that this project
is healthy and maintainable?
Yeah.
Yeah, really.
The other thing I feel is important is collaboration.
It feels like when two people are working on a project,
it's far better than two isolated people working
on a project.
The throughput is more than twice the times, right?
And someone can cover the other person
while they're taking some downtime and that kind of thing.
And really, healthy collaboration
is often not given the right kind of praise.
Well, remind me, let's pick this back up in the post-show
because I think we all probably have more thoughts on this.
And this is probably, we could expand this conversation a bit.
But I think we should get back on the main track
here because we have a lot to get to.
But I think this is a very important conversation
and then we can pick it back up here in a little bit.
And it's one that keeps cropping up every few months.
Yeah, I don't think this will be the last episode we talk about.
We could go through and make so many examples.
But it's good to see in the case of Rust
that a resolution is there.
Things are moving forward.
People are talking.
I think was some learning happened.
So in this case, and I think I really
want to commend Drew Duvall for posting that very honest.
I mean, he took the time out of all those other tasks
to write this retrospective blog post
and share some of his private personal feelings on this.
Yeah, that takes a lot.
And I think that's the exact kind of thing that
can help us have a better connection with these developers,
help us empathize a little bit more with their position.
So I think that actually him being vulnerable like that,
I think really kind of, see, look at that.
It's an episode of vulnerability.
Vulnerability helps everybody.
Every now and then a little vulnerability is good.
Oh, is it that time?
That's right.
It's time for housekeeping.
Few things to mention today.
I want to plug the outrageously awesome Telegram group
that we have raging now at jupiterbroadcasting.com
slash Telegram, having a really fun conversation in there
this morning about Project Off Grid,
which is something I'm working on, and a few other things.
Sometimes we make a few jokes.
People like to give me a hard time every now and then.
You never.
Pokey pops in there, teases me, that kind of stuff.
So that's at jupiterbroadcasting.com
slash Telegram.
A lot of the crew hangs in there.
So we're hanging.
Yeah, come chat with us.
It's like the JB water cooler, only instead of a water cooler,
it's a town water tower, because it's really
kind of the population of like a small town, like a small.
All crammed in there.
Yeah.
And they've got a lot to say.
And then we just got.
Yeah.
Sprinkle a little Linux on top.
Yeah.
Few bots to keep the order.
And it's all good.
So that's at jupiterbroadcasting.com slash Telegram.
Do we have anything else for the housekeeping?
Go check out Self Hosted, selfhosted.show,
where I give a major Project Off Grid update probably
in the next episode by the time this is coming out.
I don't know.
Time math is hard, because we're recording ahead.
So I don't know how it works.
Time is just a construct, man.
Yeah.
Not going to get held down by it.
New media.
Right?
All right, so how did we get to free software from shareware?
Those of us that remember the term shareware,
remember an era of software that you would download and maybe
use it for a certain amount of time,
and then you get a pop-up, or maybe you could do certain kinds
of functions.
There's a lot of different types of shareware.
Eggware, crippleware, trialware, donationware, negware.
You know what's funny is this is a topic that is literally
about as old as I am.
And it goes back to an early era of the industry
that was still figuring out how to even distribute software
pre-internet, pre-CD-ROM, so you didn't have a lot of capacity.
Everything was on floppies.
And then BBSs came along, and then stores
started to come along.
So we thought it'd be great to go back in time.
I think it was somewhere back in 1988-ish.
That's right.
We go to the authorities, the Computer Chronicles,
in which they have an episode dedicated to shareware,
and their struggle to figure exactly what it was.
Oh, it's great.
Why are you giving this away?
How does it work?
How is this even possible?
Do those people take advantage?
Is there a trade of money?
Today, we're going to take a look
at some of the best examples of shareware,
both for the IBM PC and the Macintosh,
and we'll meet the man who helped create the concept, Jim
Button.
Jim Button gets a lot of credit for coining the term shareware,
doesn't he?
Yeah, and it's a little bit complicated,
because he was an IBM employee back in the 80s,
and he wrote a program to help his local church congregation.
And as we were just talking about,
demand for his program consumed too much of his time,
so he left IBM and created his company, Buttonware,
released his first program, PC File,
which was like a flat file database.
I don't know, old technology, right?
In 1982, he called that user-supported software.
And it really was one of the first examples.
There were a couple other terms thrown around, freeware,
but that was copyright.
So eventually, it landed on shareware.
Johnny Ginson, the city of now, the man
they sometimes call the father of shareware,
Jim Button, CEO of Buttonware.
And next to Jim is Russell DeMaria, author of the book
Public Domain Software.
Gary?
Jim, what's the background behind shareware?
Where'd it come from?
Shareware started really in 1982.
And I think Andrew Flugelman probably
was first with the idea out of San Francisco,
and he produced a product called PC Talk.
It was the first shareware product on the market.
There was no free software.
There was no open source.
There was really not even an agreed-upon way
to distribute the software.
No, and most of the software you're
going to get at this time, well, it all
came from big commercial software houses
with expensive price tags because it was business users.
This was at the dawn of personal computing.
And the software originally with shareware was very generous.
Some of it was run for as long as you want.
There's a few examples of that still.
WinRAR comes from that era.
But people, just like some now, struggle
to understand free software.
Back then, struggled to understand
the concept of shareware.
And Button says, well, think of it really
as just a marketing term.
Shareware is a distribution method
and is primarily a way of distributing full function
demo disks.
Users are invited to share the full function
disks with all of their friends and to use them
in the comforts of their home.
Money changes hands when the user decides that he really
likes the program, wants to put it into productive use,
and develop a relationship with the author, which
would include technical support, printed manual,
and things like that.
And what are the typical prices for a package?
Shareware prices go all the way from $15 to $20
up to there's one product on the market that's $100.
Doesn't that sound familiar?
Hey, use it if you want.
If you like it, help out.
Yeah.
And you never really saw shareware as a concept really
take off on the Linux desktop crossover?
I guess you could technically say, does it?
They let you try it for 30 days or something like that?
And there's a few helpful but proprietary applications
or source not available that are floating out.
But they're definitely the exception.
Yeah.
When shareware was really getting going,
there was all these different schemes,
like we mentioned here at the top, all these different ways
of doing things.
And the more successful the app was,
the more riskier shareware model they could take.
But what about, you were telling us
about the decompression and the compression software,
about how depending on what you're going to do with it,
you have a different price?
Yeah, Stuffit in particular, Ray Lau, who wrote the program,
has a very nice scheme.
If you're just using it to decompress files
that you're getting from some online service or elsewhere,
it's free.
And there is no donation requested.
If you're using it to archive files to upload,
then he requests $18.
This doesn't actually even seem that far
from the free core model.
No, right?
It's a natural analog.
Hey, here's some basic features.
If you want more, well, we want you to help us maintain
and make this sustainable.
But yeah, I kind of became aware of the shareware industry
when it was sort of in the CD-ROM era, when it went big time.
The CD-ROM revolution meant that you
could pack and ship hundreds of shareware applications
on a single CD-ROM.
And the way it could be sold was the entire applications
on this disk, look at all these great applications, everything
you would ever need is on the CD-ROM.
And the companies that nailed that,
and you would have the really, really sweet shareware
companies, would have books that you would order, like magazines.
And you could go through that, and the magazine
might come with a CD-ROM.
And I'm not talking like a thin magazine.
I'm talking like a Sears catalog.
Put on some music, kick back.
Look at all the options.
Yeah, it was.
And of course, there was BBSs that were dedicated to this.
And of course, there was Warez sites
that were dedicated to trading a lot of the keys to unlock
or crack the shareware.
Right.
Just still kind of a thing in the Windows world.
And so when I came along, it was kind of during this part
where the internet hadn't really become a thing yet.
But that really changed the game, too, especially dial-up.
My dad and I used to have like a collection of shareware apps
that we loved that whenever we could,
we'd buy like the family edition,
and we'd share that because that became a thing for a while,
too, to get a family license for this.
But the thing that I witnessed was the biznification,
where a business could come in and make a sweet offer
to a developer and say, we want to buy
a year's worth of your software where you develop it,
but we rebrand it, different icon, different name,
and we bundle it with other shareware.
And then we'll even put it in a box,
and we'll put it on the shelf, and you'll
get a cut of the sales.
So the shareware developer would maintain a public shareware
edition of their software.
And then there would be like a sneaky rebranded version
that would be sold in a box, and these big shareware middlemen
would come in.
They were huge operations.
They would come in and organize all of it,
the deals with the shipping companies, the magazines,
the deal with CompUSA or whoever it
was that was going to put it on the shelf.
They would manage all of that.
And one of the bigger ones, you might remember
if you're from my era, was a company called PC SIG.
If you've ever bought shareware, chances are fairly good
that you got it from here.
This is PC SIG, the world's largest shareware distributor
with a library of over 25,000 programs and sales
of some 1,000 disks each day.
Well, shareware is the alternative to the high price
commercial spread.
The shareware programs that are now available
are equal, if not better, than a lot of the commercial programs
on the market, and hundreds of dollars
less when it comes to registration.
PC SIG is the conduit between shareware authors and users,
handling the marketing and advertising for the authors
and guaranteeing quality for the customers.
When we get a program in here that's submitted,
it goes through our librarian.
He looks it over.
If it meets what we consider to be good shareware standards,
he then sends it out to an independent reviewer.
Then it's reviewed again before it's placed in the catalog.
Everything sold here is also supported by full-time staffers.
Technical support.
PC SIG's success has allowed it to branch out
into some new areas.
It now publishes a bi-monthly magazine.
You can buy all 25,000 programs at once on this CD-ROM disk.
And you can buy some of the titles now in retail stores.
And the company has also branched out
into the business of selling hard-to-find videos.
In other words, shareware has been very good to PC SIG.
It's come a long way from the founder's garage
to a company now making several million dollars a year.
In Sunnyvale, California, for the Computer Chronicles,
I'm Wendy Woods.
Oh, the short reign that they had.
I love that sound at the end there.
That was floppy disk moving on an assembly line.
Yeah, right?
Yeah.
I mean, I tell you, the method of shipping software
has changed, and so it has really changed
the entire software industry.
And the growth of open source and Linux
kind of rocked all of this.
There was a period of time where commercial software
was the default. Closed source software was the default.
And even in the Unix era, it was keeping your own innovations.
That was really the default. It wasn't
until really a bit of a revolution
came along and changed everything.
We do have one sector that is taking off today.
It is the Linux-related sector.
And I thought this might be a good opportunity
to say, what is Linux?
And I'll answer this question for you.
Many of you probably already know,
but there are 12 million users out there, a computer operating
system developed by hundreds of programmers collaborating
on the internet, a challenge to Microsoft Windows NT,
very popular for its speed.
And so this is what the craze is about.
The internet combined with the free software movement
and Linux and then the explosion of the web in the late 90s
was all perfectly timed to fundamentally shift
value of software and the entire software industry.
And during this transition, shareware
as a normal concept of software distribution
sort of became an ancient idea that very few things.
Right.
It's interesting when you think, too, how you interact with it.
Shareware, the focus is on delivery of the application
as its runtime, a running executable,
because it's filling some business need.
But as computers came more and more into our lives,
the need to have that freedom and to be able to modify
and control things, that becomes a lot more important.
Yeah.
And the shift, again, to hosted services versus selling
directly to consumers, there's more value now
in building something that runs on a back end
than, in most cases, than building something
that consumers use directly in terms of software.
Not in all cases, but it's been a big shift.
And if it wasn't for it, imagine.
I mean, just the world's so much better off for it.
I encourage everyone to watch Revolution OS
if you haven't watched it or you haven't watched it recently.
Boy, is it a time capsule.
But it perfectly covers, and I wish
we could play a lot of clips from it,
but they'd slam us for copyright.
But it perfectly covers this transition period
we're talking about, this period of time.
It really captured it, captured the mentality.
And it really kind of reminds us of the wars
we were fighting back then with Solaris
and the different Unixs.
And it's just really something.
We've come a long way.
I mean, we could have been in a world where Windows NT just
consumed everything.
It was kind of close for a while.
Yeah, did you notice in that clip,
they're talking about NT and hundreds of developers?
It's so quaint.
It really is something special.
So shareware eventually faded away,
and it's not completely gone.
But I think the big default became the transition
to open source software for not just server-side development,
but really for anything that you wanted
to get a large market adoption.
It kind of just became the default.
Right, and I think having easier modes of communication,
that helps.
Because before, let's say you had your source there.
That might be nice, but probably 80% of the people
you shipped your shareware to, they
weren't going to have the tooling or knowledge
to be able to modify that.
But now anyone who's interested has easy ways
to participate in a code base that's open.
So much has shifted because of the way
we can distribute software over the internet
and then interact directly with the people that are distributing
that software, and then build wikis and forums around that
to help people get it set up.
And it's just such a huge shift from when
you were getting it in a disk in a bag in a little shop
somewhere, or buying it from a developer
and downloading it over your modem using
GitRite, which was also shareware.
Best downloader I had back in the day was GitRite.
And classic shareware games like Doom,
that was how Doom monetized.
You could get the first few levels.
It was like in-app purchases now.
Oh my god, what's old is new.
Holy crap.
I don't know if you remember this.
You can actually, we'll have a link in the show notes.
There's a version on archive.org in DOSBox.
It's the shareware version of Doom.
And so the first bit of Doom, the first level,
or 10 levels, I can't remember, was free.
And then if you wanted to play all of the other levels,
you had to pay for the shareware.
It's kind of not unusual when you think of it
in the terms of apps on mobile devices.
No, not at all.
That's how the new Mario run and Mario games work on the phone.
It's like you get the first couple levels.
And if you want to play all of them,
you've got to pay the in-app purchase.
I guess there's just some core models that work.
And it comes back to talking about marketing.
It's a way to get your stuff out there, to try before you buy,
but then still have a way back to actually support
continued development.
Oh, Wes.
I love running those old clips.
It's very nostalgic.
Computer Chronicles was great.
But I think, do we have a link to that full video?
We should.
Yeah.
We should put a full link in the show notes to that.
All right.
Well, why don't we get to our picks
before we get out of here in this special edition?
Yeah, because it turns out, you know what?
We do live in the current day.
We have access to tons of great open source software.
And this is the part of the show where we tell you about it.
Picks, guys.
Pick over.
Well, that's why it's picks and not pick.
This is, oh, OK.
All right.
OK.
Well, this first one's pretty great, especially for those
of us who think the terminal's the future.
Hashtag terminal future.
That sounds bad.
That doesn't sound good.
That doesn't sound good.
So this first one's called BROOT, B-R-O-O-T.
I was going to try to make Wes say it, but he didn't speak up.
So then I had to say it.
And it gives you an overview of a directory, even a big one,
in a really nice, concise, readable way.
Right.
Think of it as a combination of maybe something
like if you used ncdo to manage and clean up files, which
shows you an interactive, Curses-based application
to drill down and get to sizes.
I do.
Do you ncdo?
Oh, yeah, of course.
And if you've maybe used the tree command,
it prints you a little tree of the directory structure.
BROOT's something of a combination of those,
but it's a very interactive environment.
So you can drill down.
It stores past locations.
It's like the tree file viewer manager for your terminal.
You never knew you wanted.
I'm sorry.
I'm just distracted by your special edition outfit
that you wore today.
It's just.
Isn't it nice?
Yeah.
I mean, it's nice, except for the sequences
are a little bit much, because we have the lights on.
So that's a bit much, but.
Yeah, but I didn't.
I mean, did you even know they made this color?
No, I did not.
I don't even know how you found that.
All right, well, we have another pic here.
This one is, again, hashtag terminal future.
Oh, that's not good.
And I don't know how we say this one.
How come I'm always the dumb ass that has to read the names?
I think it's Tizonia.
I was going to say that, or Tizona.
Tizona?
Tizonia?
Yeah.
It's a cloud music streamer for your terminal.
So if you got your spotifiers, or your Google Play
musics, or your sound clouds, or your YouTubes,
maybe you got a Plex, maybe you want
to Chromecast this business.
I do, I do.
Well, who wants to do it in a GUI
when you can do it in the terminal, right cheese?
Boom.
Cheesify it.
Absolutely.
That's what we're going to call when you put stuff
in the terminal, we're just cheesifying it.
Cheesifying it?
I like it.
I'll go with that term.
When you can take something and do it in the terminal,
that's putting a slice of cheese on it.
That's what we're doing.
Putting a slice of cheese on your music app.
Oh, looks like they've got Docker, Snap packages,
Ubuntu packages, even one for Raspbian.
Well, it says right here on the website, too,
that it's the most powerful cloud music player.
So power's good, right?
I mean, you're welcome, everybody.
What else do you need to know?
It's the most powerful.
And apparently, it's the first implementation of OpenMAX
Hill 1.2, which I don't know what that is.
But it's the first implementation of it.
So it's a standard for integration
of multimedia components into media frameworks
to simplify development of audio, video encoders,
and decoders.
Duh, cheese.
Yeah, from the Khronos Group, everybody knows that.
Everybody knows the mobile market
is constantly evolving and demanding ever-increasing
multimedia functionality and performance cheese.
Duh, why am I even here?
Slug out.
Do your homework.
Anyways, we'll put a link to Blot, right?
Was that the first one?
Brut.
Oh, yeah, whatever.
Brut.
I'm going to make you use it now.
You're just being so mean to the poor thing.
Well, I've already got NCDU, and I got DF.
I don't need this crap.
But it's fine.
It's fine.
You want to put it in my show, it's fine.
We've been streaming for too long.
And then Tizona, which just sounds like a delicious calzone.
Oh, wait.
Brut's written in Rust, so there you go.
You'll change your mind now.
Oh, I love it.
Oh, OK.
Pfft.
All right, why didn't you say so earlier?
That's great.
Have you guys heard of Brut?
It's a really nice way to view the director's even,
even big ones.
Check it out.
We'll have a link in the show notes at linuxunplug.com
slash 328.
Over there at linuxunplug.com slash subscribe is where you
can get it.
338.
You know what?
No, we're changing this.
Never mind.
We're starting over.
All right.
All right.
So it's 328.
338.
338.
338.
Where am I?
All right, there you go.
linuxunplug.com slash 338.
I would redo it so that way Joe could clean it up,
but I think we'll just keep it in there like that.
Because we podcast hard for you, and this is the result.
We get a little loopy.
That's what happens.
You'd think the caffeine would keep you
on the straight and narrow.
No, it just slowly destroys you.
And Wes was like, we should be drinking today.
And I was like, no, we've got to stay on the straight and narrow.
Yeah, that's how it went.
Anyways, linuxunplug.com slash 338 for links to everything,
as well as the contact pages over there.
We'll be back live at our regular Tuesday noon
Pacific time.
You can get that converted to jupiterbroadcasting.com
slash calendar.
A massive shout out to our virtual log.
A fantastic showing.
Really appreciate everybody making it.
And each one of you now go to linuxheadlines.show
and subscribe.
It's a good little show.
I feel like I'm proud of it or something.
It's a good show.
Like when you're a parent of a kid or a pet
and you watch them learn something,
you get proud of them, the first time you taught your dog
to piss outside and you're like, I'm so proud of that dog.
That's how I feel about headlines.
It's also just super handy, because sometimes you
don't have time to keep up on the news.
Yeah, and who wants your podcast to piss in the house?
Wow.
Wow.
This has been Linux Unplugged, the podcast that
won't piss in your house.
And headlines only there.
It's really well trained.
It's been domesticated.
And I really like it.
So check it out at linuxheadlines.show.
Go get more Alex and I at selfhosted.show.
And I got one more for you.
A little bit different, though.
Different TLD, so brace yourself.
Techsnap.systems.
What?
Yeah, I didn't even know that systems was a thing.
Turns out it is.
There's so many great things.
Turns out.horse is a thing.
.audio is a thing.
Who knew?
Oh, I guess I did.
Jupiterbroadcasting.com slash calendar
for the times in the local zone, because we would
like you to join us next week.
And we'll see you right back here next Tuesday.
Woo!
The Unplugged Program. Love that song. You know, I'm a big fan now of the longer outros
but the tighter intros. Bring them in nice and short. Over the years, you can chart the
length of the unplugged intro. It's just gotten shorter and shorter and shorter.
Well, you want the intro because you're excited about the content, right? If you're listening
to the podcast, but the outro, that's your nice, the long outro gives you time to pick
what you're going to listen to next.
Well, when we were new at podcasting, we thought, we told ourselves, well, we got to set the
tone. We got to set the mood. So we got to have a nice long intro that really sets the
mood for my great podcast. And you know, you see this on YouTube now, like so many like
YouTubers have these really long intros with fancy graphics.
Hey, Chris. Hey, Chris. Let's get to it. Don't you love it when they say that? Let's get
right to it after like an eight minute intro.
Yeah. So let's get right to it. Yeah, but podcasts do this too. But then what happens
is if you're a listener and you've heard that podcast a hundred times, think about how much
of your life has been just listening to that same intro music, which is coming in in a
compressed MP3 likely or a compressed YouTube video.
But I love it. Like one of the transformation experiences of my year last year was sat in
the studio with you listening to the intro of LUP, recording LUP.
Well, you got to have a little something, I think, you know, you got to, you got to
have a little, you got to have a little something. So that way, when you hear the song, you're
like, oh, that's from the show I like. So you got to have a little something. But I
think where you go long is in the outro where I think the balance is struck really well
is in user air. It's got an identifiable bong right in. But then it's got that beautiful
long outro that I listened to every single time.
Right. You don't have to skip it. You just let it fade out.
I always have.
What was that intro like again?
You're trying to get me. All right. We got to pick our title. JBtitles.com.
You know, when you guys were talking about the shareware and the freeware and stuff.
Yeah, I remember that.
Oh, yeah. And I wanted to come back to the other thing, too.
And you had mentioned WinRAR.
Yeah.
You still haven't paid for years, bud? Oh, man.
It was an adware, right? But the one thing about it that I don't think a lot of people
knew is that if you just right clicked on your file, you could extract it and never
get nagged.
Oh, I think it was classically famous for that. So tag me in the mumble room if you
had other thoughts on the whole developer burnout topic that we discussed, because I
knew a couple other people wanted to jump in on that. Because I think what I really
appreciated about that blog post that we read was it really made me realize that this isn't
a Linux problem or an open source problem. It's a human problem, and you can apply it
to software development. You can apply it to basically everything. Anybody who's in
a situation where there's a lot of those kind of types of dynamics at play. So, Colonel,
I wanted to give you a chance because I saw you had pinged me earlier.
Yeah, I've been thinking for a while now about is there some way that we could maybe the
open source community band together and create an organization that would put a framework
around bringing in volunteers to deal with the non-development side of maintaining a
project. So things like managing the money coming in, managing, creating a foundation
if it gets that far for that project, maybe maintaining the servers for like a website
or a racket chat or something like that.
Yeah. Wes and I were actually just brainstorming this yesterday, and I think we both agreed
it probably wouldn't work, but the idea was is a loose group of volunteers who are kind
of like a team that can come in and say, we can help you get these things set up. They
don't run it for you necessarily, or maybe they get something immediately resolved for
you, but they connect you with the right people to get a foundation established or get a contractor
in to help you with the accounting or something like that.
It strikes me as it's kind of the other side of the coin. You know, we've often talked
about how we have a lot of open source developers, but not always like technical writers or people
to do UI work. Accountants. Yeah, but no one's managing your backlog for you when you have
this open source project. Communications, troubleshooting, tech support. And these are
all important roles. It kind of makes me want to put it together. You know what I mean?
Like I want to put together a strike team that like comes, but then we started talking
about it. We're like, you know, a lot of these developers are pretty proud of doing it their
own way. That's the other part is it's not for work. You're not getting, right? It's
your project and there's a little more ownership and care. And it's kind of like, Hey, knock,
knock, we noticed you're doing a bad job. Would you like us to help you solve it? I mean that,
you know, you'd have to really be careful on who you approached, how you approached
it. Gotta be, gotta be respectful. Yeah. But maybe if you'd done it long enough, you'd
have a reputation where people would come to you. But I kind of was thinking something
along the same lines, Colonel. It would be nice to have a little organization that could
pop in and just help manage that. All right. Uh, we'll do drifter first and then we'll
do pie crash. So go ahead drifter. What were your additional thoughts? Well, I was just
thinking like it's, it's definitely a developer thing. Being a developer myself, it's a huge
issue to get burned out and it's really hard, especially when you have like the consumer
or user, um, who, you know, is approaching you and, Oh, I got all these things that have
to be done. And it, like you were mentioning, it's, it's really difficult if you're not
getting out, you don't get those breaks, you burn out really easy. But I think that it's
just a human problem. Sometimes it's really easy, whether that's like via our ticketing
system or something like that, it's really easy to forget that there's just people behind
it. Like it's a, it's a person problem. We forget that it's these people, sometimes they
need need a little bit of a little bit of slack on that. Yeah. I can't tell you how
many, how many emails I've gotten where somebody really gives me the third degree about something.
Maybe maybe it's generally somebody who's pretty passionate about something. And then
I just kind of respond and address a few of their points and nine out of 10 times they
respond back saying, Oh, I'm sorry. I forgot you were like a dude that was just talking
to another dude. And I was having a bad day. And I mean, I've seen that a thousand times
over the years because people that are part of a project or somebody that's just on Twitter
or a celebrity or podcaster is a bit of an abstraction. And so you're communicating with
an abstracted concept of a human. You know, you don't, you don't see, you know, you don't
see me here with my belly and, and my beard and my hair that still looks pretty great
and all of that. You don't see that, right? You just, you have the concept of Chris and
you communicate with that concept. Um, and that's what I was saying earlier in the show
that this low bandwidth aspect of communication over the internet really matters to like base
levels in our monkey brain. All right. So Mr. Crash, I wanted to give you a chance to
jump in.
So the thing I wanted to talk about, it's like, uh, burnout is pretty much in every,
everyone's problem. I mean, startup people get burnout and even students get burnout.
I'm a student myself and I got some problem with burnout a couple of years ago. And it's
like the problem is, uh, that's, you need to learn. And so we all need to learn to ask
for help before we are burnout. Actually, that's a really big problem. And it's a good
thing what wrote, that's just like, I'm asking for help.
Yeah. And just a little understanding even just to kind of connect with where I'm at.
Brent, what do you think?
Yeah. Uh, this is a huge topic, uh, and an important one. And I feel like if, yeah, there's
some way that we can allow our experts, you know, those who are coding, they're best at
coding and yet they have, you know, a hundred other tasks that surround that activity to
make it successful. Um, we need some open source, you know, it's really in any area,
but if we're talking just open source, we need some people who are really passionate
open source accountants who can, you know, come and help 10 developers with that area
so that the developers or podcasters or photographers or whatever their expertise is, can focus
on what they're actually really good at and not waste their cycles doing, you know, inefficient
and also oftentimes really frustrating work that they just need to get done to allow them
to, to make a living, but, um, aren't jazzed about.
Yeah. Oh, there's a lot of that. I think too, conversations like this, which remind
us, um, that they're human and conversations like you have on brunch remind us that these
are human, humanizes these people. And I think that's also pretty helpful, even if it's only
part of the solution. I think it's still good to do, especially in free software and open
source. Yeah. I agree, Drifter. This could be a whole topic, couldn't it? I mean, you
could have a whole podcast dedicated to this.
Yeah, absolutely. I mean, and I think we could all definitely use it too. Just being able
to have like an area just to vent, right?
Yeah. Yeah. And that, I mean, I've been bashing on internet communications, but it's, it's
at least we have this. And so, I mean, I think you could glass half full it too and say,
it's not enough, but it's better than absolutely nothing. And just being by yourself in a room
quiet, uh, it's nice to have this connection. So I think there's some positives to it too.
What do you think, Alex?
I think recognizing burnout and being honest with yourself and being able to have the courage
to say, yes, I'm not enjoying what I'm doing is, is a real, you know, it's a real scary
thing the first time, you know, my personal experience was, I was working for Apple on
the genius bar and everything about that told me I should love it because I was repairing
stuff and I was enjoying it, you know, the technical side, but dealing with customers
all the time, just wore me down and admitting to myself that that wasn't what got me out
of bed in the morning. Took me a couple of years, honestly.
From Apple to Red Hat, but it took some analysis, right?
Yeah. Yeah. And reading, reading books, honestly, on the topic, I would say is a huge help because
it gives you, as you're reading, it gives your brain that time to sort of say, yeah,
I identify with the way that this author is trying to make me feel or, or whatever it
is and sort of say, it's okay to, you know, make mistakes in, in terms of thinking that
this role or, you know, being a developer, it wasn't right for me either because it was
too monotonous, but where I am now, I love it because, you know, every, no two days are
the same, even though broadly speaking, I do the same thing every day, you know, different
cases and whatever come through. So it's, it's a real balancing act and being honest
with yourself is the real key to unlocking, I don't want to say like super cheesy, like
happiness, but genuinely, I mean it, that being able to say, I need to change something
and then putting a plan into place and kind of sticking to it, even though it can take
several years is well worth the effort.
Yeah. And sometimes having something to work towards and just being able to see measurable
improvements out of a situation is really all it takes to change your attitude around,
which kind of doubles your net result because you're, you know, you're energized, so you're,
you're getting more creative, you're working a little bit harder, you've got energy again,
so it's not as much of a slog. And it's just simply by just having a, it doesn't have to
be a master plan, but just a few key milestones that you're working towards and you can see
progress and if you can, you need to be able to realize that progress to actually get the
boost. But if you can pull it off, it can be a trick. And I, you know, it's not building
that momentum and sort of like, right, I just got that done. Okay. It was a tiny piece,
but I can keep going.
I'll tell you the other thing as well is, isn't, it's not necessarily just about huge
life changing stuff like changing job or emigrating, right? It's about incremental change as well,
making small tweaks to your morning. Like Brent said earlier, you know, take the 20 minutes
and do the yoga, but do it regularly and build that into your routine. Like node runners
saying in the IRC, get a standing desk so you can change it up or go and, you know,
if you're working from home, go and work on the couch for 20 minutes or whatever it is,
you know, he actually did that today is, um, before the show I was out in the living room
of the studio working from there just to, just to change it up, change up the energy
flow a little bit. So that way I was getting, that way I get a little more peppy for on
air, you know, get myself work going again and get out of the sleepy chair that I'd been
in since like 7 a.m. And yeah, it actually does work. Just little tricks like that. That
seems silly. That's how I describe it. It seems like a silly thing to do, but sometimes
it works and you just got to find the ones that do for you. If you think this is something
we could talk more about, uh, let me know. You can either tweet me at Chris LAS or Linux
unplug.com slash contact because I think, you know, maybe that maybe we do an extra
on it or something like that. I don't know what, I don't know what that avenue would
be. People in the chat room are saying do a special on it because it does, it does apply
so much to open source development, but it's, it's broader than that too.
I would like to think that mr devault got something out of even writing that post, you
know, simply putting those words down and acknowledging that himself and you know, there's,
there's a level of, of it being, you know, just therapy, uh, for lack of a better word
to sit down and put your thoughts out like that and admit it to the public. Right. Exactly.
And then put those thoughts, you know, somewhere where the public can actually read them and
understand the struggles that you're going through, I think helps a lot. And it's, it's
kind of a first step to acknowledging that and, and changing the way that you operate
so that you do have that little bit of downtime and you don't necessarily have to schedule
everything, every single event of your, of your, you know, your life to, to try and,
you know, have a little bit of time for your family or, um, that time just to walk around
the block and, and, you know, get out of a head space for a moment.
I think, uh, I hope at least, and I think he probably did hear from a few people like
right there with you, man, so much on all of that, because I think it resonated with
a lot of us listening to it. Okay. Well, um, I have something kind of special for us that
I say for the post-show because probably it's probably too retro. Maybe Wes and I are the
only ones that remember this, but this just felt extremely appropriate with today's topic.
So I leave you with this.
It's down for you, no comment, San Diego, no more Oregon trail Tetris and the others.
They're all going to fail. Not because we want it, but because you just taking it disrespecting
all the folks who are making it. The more you take the less there will be. The disc
becomes fewer. The games fall away. The screen starts to shrink and then it will fade. Programs
fall through a black hole in space. The computer world becomes bleak and stark, loses its life
and the screen goes to dark. Welcome to the end of the computer age.
