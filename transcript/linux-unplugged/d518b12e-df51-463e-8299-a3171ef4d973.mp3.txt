You know who did that?
Noah did that.
Noah taped that mic cable to that monitor cable.
Why is it not homed until now, though?
That's a good question.
It's all taped together with electrical tape.
Come on!
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Wes.
Is that a homemade bearskin jacket?
I thought you'd be impressed.
That looks nice and toasty.
This episode is brought to you by the all new A Cloud Guru.
They are the leader in hands-on learning and the best way to learn a new skill, well, that's
by doing.
That's why ACG provides hands-on labs for cloud Linux servers and much more.
So get your hands cloudy at a cloud guru dot com.
Well, coming up on the show today, it is indeed an episode out of time.
As you're listening to this, Wes and I are off in the Arctic on a penguin photo walk
getting great action shots of some really delicious looking birds.
I'm a little scared about the polar bear situation, but I'm just going to not bring any meat.
I think, well, that bear jacket smells like meat, so you better think about that one.
We asked you to send in your questions, though, so that way we'd have an episode for you
while we are out and about taking photos and eating penguins.
So in this episode, we're going to answer as many of those as possible.
We are not going to get to all of them, though, but we're going to get to as many as we can.
So I think in the future, we'll either do these in batches or we'll do another episode
down the road.
So if you hear something and or you you didn't hear your question asked, it could still be
pending.
And you all also, if you didn't get one in yet, you still have a chance at ask up dot
com.
We'll do that on a future episode.
But before we get into all of that, we got to say hello to our virtual log time, appropriate
greetings, mobile room.
Hello.
Hello, everybody.
Hello.
Happy Sunday.
Thanks for letting us crash the luck today and and hang out and, you know, do a podcast.
It's pretty awesome.
So what do you say?
Should we get into this huge, huge batch that we got here?
Last week, we're like, let's hold off on Bill's question and let's answer it next week in
our episode.
So why don't we start with Bill's?
All right.
Yeah.
Bill wrote in to us and this is a deep one just to start things off today.
I'm writing as I wonder about the relationship between the Linux community and the Mac and
PC platforms and how that relationship is formed.
I think the Linux communities are quite alerted by anything Microsoft or Windows does.
And this attitude can be seen in the recent discussion about WSLG as it just being a gateway
so that people don't have to use Linux or I think really, you know, Bill speaking to
some of our concerns about well, this really makes it easy and it takes a lot of the stuff
that we kind of had uniquely in our camp before.
Yeah.
I think Bill's picking up on that.
We seem to have a little bit more of an alarm reaction when Microsoft does something than
when Apple does something.
Right.
And kind of the, you know, just how we support things like he quotes you saying that we should
really kind of try to, you know, rather than buy something preloaded with Windows, try
to support folks that are supporting Linux natively on their hardware where possible.
And that's sort of a, you know, just avoid all the Microsoft stuff if you can.
And there's definitely that sentiment out there too.
I think, you know, you have to acknowledge there's a history with Microsoft when it comes
specifically to Linux and free software that has shaded the way people view some of Microsoft's
current actions.
Because in a real way, Microsoft's past sort of modus operandus was embrace and extend.
And so when they came into open source and started participating in a pretty significant
way, it really looked like embrace and extend to a lot of people for a long time.
Yeah.
Yeah.
No, I think that's fair.
So Bill's also kind of wondering, why aren't we more worried about Apple?
And I think this was complicated for a lot of reasons, especially just because this question
keeps changing depending on like what five year period you want to pick here and like
what are the relationships and what are they investing in and how does that work for the
groups we're concerned about.
But Bill's kind of got three main high level reasons.
Apple's hardware is usually pretty darn closed, and they're not so friendly with the open
source efforts to port things onto their systems.
And number two, Apple has not been as friendly to the Linux and FOSS community.
This is another one of those things that has changed, I think, for both Microsoft and Apple
considerably over the years.
But while they have contributed some of the underpinnings, things like cups, stuff like
that, but you don't see a lot of any of their new shiny products.
None of those, there's no Linux version of Messenger or anything like that, right?
Or iMessage.
Yeah.
No, I'd say Apple's contributions are lower level.
They're more like things like WebKit or some of the individual user land tools themselves.
Right.
So if you compare that to like.NET or PowerShell or even just running MS SQL on Linux, VS code.
Sure.
Yeah, absolutely.
Yeah.
And then number three, number three, I think, due to its similar design, macOS can also
attract many target users of desktop Linux.
And this is the one I know has been bugging you in the back of your brain lately, at least
with that shiny new M1 hardware.
Yeah, it's not without some compromise, though, right?
That's where I think Bill and I see things a little differently.
To me, WSL represents a more direct threat to Linux because it's actually the Linux user
environment and you can actually build Linux applications on Windows using WSL and Microsoft
provides tools to allow you to create Linux applications all day long from the Windows
10 desktop.
And they've created documentation around that as well.
And they have developer advocates that are helping people accomplish that.
I mean, it's it's a much more direct assault at what desktop Linux is used for.
And assault is a very extreme term here.
It's really just about enabling their existing users and enterprise customers to create applications
for the Linux platform.
But with Macintosh macOS, it's not like Linux.
It's not as nice to run Docker on there.
It's not as nice to develop Linux applications.
It absolutely can be done, especially when things are, you know, Ruby and Python and
Rust even.
But you know, it's not.
Oh, yeah.
OK.
Thanks, Wes.
Thanks.
Hey, you know, Java runs there, too.
OK.
But it's not the same.
And the Mac environment is more constrained.
You're going to be more dependent on virtualization, especially now on the M1 platform.
So while it is absolutely an appealing platform to a lot of people and they'll be motivated
to make those compromises, it's not, I don't think, a one to one like it is with Windows
and WSL.
And also, you know, there's just the size factor like Microsoft is so dominant.
And I think we talk a lot about Apple, but that's just because it's in our space, right?
It is for people that are have enough money or are willing to spend a lot of their budget
on computing devices or also folks who are maybe developers or sys admins are in this
camp where that's kind of one of the tools of the trade.
But Microsoft is this big enterprise imposed system and they dominated so much of the desktop
market.
I do think this has changed in that now Apple controls how much of like the, you know, the
USA phone market with their mobile platform, but the Linux community is much more attached
to the desktop sphere.
So I don't think we're as, I mean, we are threatened by it.
Obviously there's a lot of developments in the Linux phone systems and where you have
complicated feelings about Android, but it hasn't really tainted us in that same way.
Mac sales right now are going crazy for the last three quarters.
And since the M1 was announced, they have just skyrocketed.
And according to Apple in their, according to Tim Cook in their latest quarterly results,
50% of Mac buyers are first time Mac buyers right now.
Oh, interesting.
Yeah.
But they're, they're not going after Linux.
We mean, Apple's really going after windows.
They, they, they're not targeting the Linux desktop where Microsoft kind of is with WSL
and WSLG specifically.
But I do think that we could have a serious reckoning that could come to the Linux community
where we're going to have a bunch of geeks and technical people that have chosen that
platform and they're going to want to participate in the same communities that we participated,
just like we're going to have people who are entering the free software world via the WSL
subsystem lens.
You're going to have people on these M1 and M1X and M2 Macintoshes, and they're going
to want to participate in some of the free software communities that we, we also travel
in.
Yeah.
I mean, in both ways, it's in both contributions and just, you know, folks that are using those
for development, but also in, you see a lot of projects working on support for this new
platform.
And that kind of just shows you that like, okay, we're taking this seriously because
we have a user base that needs us to.
So there you go, Bill, that is kind of why we, we take them both seriously, but the windows
seems to be a little bit more of a probably pressing concern.
And it's mostly just a concern of disincentivizing people to switch to Linux.
However, I've been thinking on this issue a lot and, you know, I think back to the good
old days, pre Ubuntu and I just good old days, loosely pre Ubuntu and what a weird landscape
the Linux desktop was and how in my day job, I was always managing windows systems for
the longest time, but I would still go home at night and play around with Gentoo.
And it truly was a drive for the love of the technology and the thing that it was doing.
And then it then later became about the social message and the community around it.
And so those things are still there today.
And I think they still appealing to people who are on windows and Mac OS that are looking
for something a little more engaging.
And a little more intellectually entertaining because it's, it can be kind of a toy too.
Yeah, that's the for good and bad, right?
Like I think a lot of folks get into points in their career or maybe they have, they have
less free time.
They have a family, they have a really demanding job where they want a platform that just works
for them.
And that's often what you hear from folks that like desktop Linux, but are on the Mac
or windows situation.
I'm not here to argue that desktop Linux can't just work because I think, I think it can,
but it depends on your workflow and what you're comfortable with and where you want to spend
your time.
And the flip side of that is if you just want to have a computer to have fun or you can
mess with anything, change anything, recompile your kernel, change how the software works,
that's the Linux desktop.
And it's pretty darn awesome.
Well, we were having a chat recently, you know, you had a work Mac that you were on
and it's not like you were paying close attention to it because it's not like, it's not your,
not your main machine.
I didn't shell out the several thousand dollars for it.
Yeah.
And you don't really think because when you, so when you don't actively buy this machine,
you don't really kind of, you're not really kind of paying attention to how the culture
of the OS works and all of that.
So you rebooted the other day and then came back to your machine and it was like, well,
I guess I have to burn 30 minutes now because it's just sitting here installing updates.
And you and I then had a conversation from that about how, what appeals to us about using
Linux as a workstation is those kinds of things are under our control.
Right.
It doesn't do a lot without me telling it to do it.
And that means if I need to walk back to that and use it for work during my work day, like
my machines available to me.
That's the difference.
If you were to go, if you were to go out of the computer world and you were to think about
this in terms of tools or vehicles, that's the difference between a work tool and a consumer
tool is those little kinds of control.
Right.
But it also kind of reminds me in some ways of say like owning versus renting a house
is you get the control, but you also become responsible for it.
True.
Like in a way that, I mean, maybe not on the most sort of like well polished LTS desktops
or something, but generally if something breaks, you're going to have to figure it out and
there's not going to be as much support.
That is a great counterpoint to it, but that's, that's the sort of balance that I'm more comfortable
with.
Yeah.
Yeah, exactly.
And it works for that and it is getting better.
I mean, we should acknowledge that the degree for the things that, which that happens and
how often and how difficult it is to remedy, that definitely improves over the years.
And it seems like it, you know, with things like protons, I, that keeps happening.
True.
True.
All right.
Well, yet Linux writes in with a quickie.
He says, what's your take for both of you on voice controlled digital assistants like
the Echos or the Mycrofts?
Do you use them in your home or the JB one studio?
Curious.
Wes, what's, what's your take on the voice assistants?
Yeah.
I'll leave the studio one to you over there.
Um, yeah, I don't love them.
They're not a huge part of my life, but I do have a pixel as my phone.
So I've already kind of got Google assistant there and I'm, I'm certainly not, not going
to use it to say to, uh, go open VLC, which I did earlier today when I was driving up
to the studio.
At home, I do a lot of things with Chromecast.
So at the moment I do have some Google homes.
I really, I don't use them for a lot of things.
It's mostly for like my media devices, stopping, going back, like it's much easier to ask it
to rewind for two minutes than it is to pull up my phone.
Maybe you have to do the fingerprint thing, open, go back to the app that it was playing
that media in.
And then hopefully it has a decent size scroll bar.
That's actually like, you can actually drag with your thumb decently.
That's so frustrating.
I did used to have one of the Amazon devices up for a while, but at that point, really,
I just used it to play like a live radio stream.
And I, now I just do that on the Chromecast.
So I don't have like this super strong paranoia about these things because I have used them
in the past and I've watched them from a network standpoint and like, you know, is it really,
is it really only communicating when I use the, you know, wake word and besides a few
heartbeat things here and there and like update checks, it basically truly is not transmitting.
Right.
There are other like legitimate ways that they are using and taking and analyzing information
that we're not comfortable with that.
That particular one.
I am not that worried about.
Yeah.
All these companies have all these other ways to mine our lives.
They really don't need to hear me farting in my house.
But so what I have done is I've used the studio as a testing ground and then what kind of
passes my my sniff test then gets graduated to lady jupes.
And that's been true for a lot of smart home technology.
So for a while we had a Siri tube, an echo tube and a Google tube in the studio as I
tested them.
Just try to get an idea.
Is this something we should be following as a network?
Is this something that really is as bad as people say it is and are these something that
provide value?
And then over time I kind of whittled it down and I know this is going to seem like a crazy
take from a Linux guy, but I got to say it really is true.
The one that I find the the most appealing is the Siri one, the Siri tube from Apple.
If you're going to use one of these things now, I'm going to say I'm not saying you should
use one of these things, just making a point that if you are, if you are going to use one
of these things, the Siri tube tries to do everything on your land that it can.
So its first move is LAN.
So if it's smart control, it's a LAN packet.
It's not an API that triggers through a cloud provider.
If it's streaming audio from a mobile device, it's over the LAN.
It's not going through the cloud.
It's interesting how the incentives work there, right?
Like you can imagine being a developer at Google where it's like, well, you're architected
where you just assume you rely so heavily on that.
But I can also imagine on the Apple side, like, well, what's going to, what's going
to do, I mean, even putting aside privacy for a moment, what's going to be the snappiest
behavior for our consumer?
And it's that.
Yeah, that definitely is the fastest in that regard.
But all of them require cloud connectivity for voice recognition.
And that's a bummer.
Right.
That's just no good.
And that's where I am hopeful that maybe something like Mycroft will come along because it is
really nice.
There is functionality when you're coming into a home, your hands are full of groceries.
It's dark.
You need some lights.
It's really nice.
The other thing that I love is I have a different routines for morning and nighttime.
So we say, you know, hey, tube, it's last call.
And when we say it's last call, it triggers a series of scripts that I have on Home Assistant
that trigger sort of a gradual shutdown of the home.
Lights slowly begin to fade out and shut down.
Noisemakers come on, white noisemakers come on, kind of sending a signal that has trained
everyone, including the dog, that it's bedtime.
Beautiful.
And you know, you've got a 20 minute window to go to bed once this process starts.
Brush your teeth.
Yeah.
And then we have a good morning process that sort of reverses that.
And it kind of turns off the noisemakers, turns things on, sort of lights things up,
depending on if the sun has risen or not, and that I like being able to initiate those
things by just invoking it from the air.
Yeah, I really appreciate that.
One thing I don't like about that, relying on the on the voice stuff, which is very handy,
and I think is an interesting phase of technological development to watch and change how we interface
with with computers.
But the downside of having to be these sort of proprietary platforms that I don't have
any insight or control into is often I'll have some like sort of quiet music similar
to you like, you know, bedtime phase kind of cool things down before I get in bed, walk
upstairs and it's nice to just sort of yell at the tube to say like, hey, turn things
off now.
That doesn't work after like midnight recently, it'll even it'll even on my phone, it'll prompt
me with the like, I've recognized you've asked me to do this a lot.
Here's a button you can click.
So you don't even have to talk.
But then it won't do the action.
And it just reminds a good constant reminder of like, okay, you're relying on this, but
don't rely on it too much.
And that's when I go to the open source app that can like turn my TV off and stuff.
I find the Google one when I was testing these pretty regularly did have the most variance
in it would recognize something for a while and then at some point it would just stop
recognizing it.
And the nice thing about the Siri tube, and this is my last time I'll bring this up, is
it talks over home kit directly to home assistant, which is my home automation software.
So it's over the LAN talking to my home assistant.
So anything I make like a button or a script, or like a temperature sensor, anything I put
in home assistant, I can have the tube get or control.
And it's really great.
And I don't have there's no API, Apple's not involved at all.
It's all over my LAN.
I like it a lot like that.
But I think ultimately, I'm really going to be looking for something where I can process
everything 100% on my LAN, including the voice recognition.
And I think that's going to be hopefully my craft, but we shall see.
One of those, like many things in Linux and open source, just sort of wait, check in every
couple of months or years and see where the project's at.
My setup too is a little bit beyond, I'm not trying to brag, I have like all kinds of automation
and pretty much everything is controlled by my home assistant in my home.
So I had to come up with a family friendly interface to that.
I couldn't expect them to open up the home assistant app on their devices all the time.
It's almost like you're into this enough to have a whole show about it.
You want to take our next email from somebody in our back of the woods, right here in Puget
Sound.
Yeah.
I've been obsessing over the idea of solar storms knocking out power grids and decided
to store some hardware just in case.
What would be your ideal setup for running a battery powered LAN, client devices and
media storage?
Well, I think you are pretty well equipped to handle this one there, Mr. Chris.
I mean, that's tricky though.
Like what do you do?
Like how do you, you could really drive yourself crazy worrying about a solar storm.
What's weird about this is I just saw a news article recapping something that happened,
I think in the 1920s or somewhere.
Oh yeah.
The last, the last solar storm.
Yeah.
It was like the telegraphs caught on fire and stuff like equipment actually caught fire.
Yeah.
That's kind of, there's like two parts of this question is like, are you worried about
shielding your existing equipment?
Because then, I mean, you need either a lot of shielding on it or some sort of like Faraday
basement cage set up in your, in your, in your house.
After that, so you've got your equipment to survive.
You know, I, I think what I'm going to, that's my charitable pronunciation.
Whoa, whoa.
Whoa.
Yeah.
It's whoa.
Whoa.
Already has a raspberry PI four set up with sync thing and Samba as well as an Android
device and a raspberry PI 400.
So you know, there's some starts here, but like what are essential services and how do
you, raspberry PI's are probably a good start, but how do you manage whatever power you've
got?
So one thing I've been thinking recently is a couple of lithium ion batteries.
I'd love something like Battle Born batteries.
You can go look those up, but smaller, but something like two Battle Born batteries in
a Pelican case with a raspberry PI, with a switch, with some discs.
Are you following me here?
Like a Pelican case ready to go, like a go case of a battery go box.
Yeah.
Yeah.
You could put a converter in there and maybe like a plug on the outside that was sealed
up with some like sort of grommet that way you could actually charge the batteries too.
This is where I go with something like this and then I'd want something that I could fit
like in the back seat of my car so it can be too big.
And I think all of that would be pretty doable if you're using a raspberry PI because that's,
you know, minimal and you could just stick that to the inside of the, of the Pelican
case.
That'd be awesome.
And I guess what you'd, I mean, you'd have to be relying on something like solar unless
you had access to a hydro or similar.
Yeah.
And you'd also want to have a MiFi with some connectivity.
I'd probably want to go with something like a Ting plan or a Google Fi plan where I could
have data available to me if I needed it, but otherwise wasn't paying a big premium
when I wasn't using it because you're going to need connectivity for sure.
I'd love to hear what the audience, if you guys have any ideas out there, send it into
us because that would be an interesting project just to build something like that, a Linux
powered land that's disaster proof.
Can you get portable Faraday cages?
Cause that'd be even better if you could store it in some kind of Faraday cage.
So it's like,
you can pack it out of there once you need to and set it all up.
Everything's like your real gear might be fried.
Your regular gear is all fried, but your stuff in your Faraday cage is all preserved.
Also Bo said something here that it really kind of touched me.
He said, I just love Linux unplugged.
I got to join the very first show with my baby son sitting on my lap.
He's eight years old now.
What?
Isn't that awesome?
That's so cool.
And I know I sometimes think about our shows in the age of my kids.
It's pretty, it's pretty, it's pretty wild.
And yeah, let us know what you think for blow there.
How would you build a land that's ready to go after a solar storm?
And what I'm also kind of curious as a second aspect, like what, what are the essential
services you need on that?
Well, you know, for us, if we were going to do it, it would be like the podcast continuity
box, right?
Oh yeah.
Yeah.
So they should have that.
We should.
We should be able to do it so that it could withstand a solar storm that after the new
society is going to need some content and we might as well get them started with Linux.
Well, they bet the new society better use Linux.
Let's be honest.
Let's not, let's not screw that up and we need to do our part.
All right.
So Joe from Pittsburgh writes and he says, are you guys using Nebula at all in your infrastructure?
I started using it a bit after it was first mentioned on the flat network truthers episode.
And you know what?
I've loved the experience for the most part, a new release came out recently and I submitted
a bug for it and everything seems to be pretty nice for the most part.
Thanks Joe.
That's awkward.
Well, it's a mixed question.
I'm still using it, but I don't think you are.
No, I mean, I really, I really thought I would.
I really thought that's how I was going to solve the carrier grade net thing, but I just
had a little bit of too much trouble with it behind the double grade mutant net.
And so I just kind of threw in the towel and said, you know, I'm just going to wire guard
out and just call it good.
But it has crossed my mind from time to time, especially like some sort of hybrid setup
with like the studio and a couple of rigs up at Leno.
Like that could be really cool.
Yeah.
That's where I think it really makes a lot of sense is if you can just drop it on all
your devices and have it ready to go.
And we do have some wire guards set up specifically, especially for if we're doing like fancy audio
routing network stuff.
But as just another way from a trusted network to get into the studio, Nebula works really
great and I think it is still running on fake news.
Yeah, maybe I should do it again.
I give it a go.
So for people who don't remember, it was a really neat new VPN that kind of branched
out from the Slack folks and it creates a peer to peer VPN mesh network that can create
essentially a flat network across maybe multiple cloud providers or multiple lands of your
own.
Right.
Something that, you know, you can just assume every device is also on this network and it
can bridge through over whatever actual land or coffee shop Wi-Fi it happens to be on.
But it's got some nice sort of modern features where you can have multiple groups and control
access.
So like, oh, I'm a user over here in the staff group, I need to see the front of house servers,
but I really don't need to see the, you know, the backup server over there.
You can handle all that natively, which is nice.
I really appreciate that, actually.
The next one comes in from Clemens and he's asking us a question that I think I know the
answer to.
So let me bounce it off you and see if I got it right.
He's having this problem when he's using his headset during video calls.
It sounds like the crappiest audio ever, you know, like the low quality Bluetooth audio
codec stuff.
And he's wondering what he could do if he could replace his headset or do something
to prevent that from happening.
And you're going to say switch to PipeWire.
I was going to say switch to PipeWire.
Oh, really?
I thought you were going to pitch your whole don't use Bluetooth at all.
Use my, you know, use right here.
Yeah, that was going to be my, if you said no, Chris, the switch to PipeWire, because
he's on 2004.
He's on Ubuntu 2004.
You can do PipeWire in 2004.
I mean, it's worth a shot.
Yeah, it might be.
Take a backup first.
If you're not comfortable fucking with your sound system.
Who is though?
Like, that's the problem.
Who is?
Nobody is.
You know, like, so my thing is, like, does he risk that?
Or does he just go get the like the Corsair RF headset, which the reason why Wes give
me a hard time is because this is always my answer.
But the thing is, it does just totally bypass Bluetooth.
It's like, you know, those old like self old wireless phones you have around your house,
like 900 megahertz phones or whatever they were.
It's like that.
It's like RF.
It's good old RF.
And what it's RF that goes into a standard USB audio codec that Linux has drivers for
that looks like it's an always there sound card.
And the reason why that matters, and then I'm going to stop talking about it, but the
reason why that matters is if the sound card is persistent, then your video conferencing
software doesn't get confused because the sound devices are changing all the time.
That sound device is always there.
It's always available.
And then you just turn the physical power on the headset when you actually want it to
work.
And in the case of the Corsairs that I like, you can flip the mic up and it mutes it and
you flip the mic down and it's unmuted.
I like that, too.
Now, you can do some fiddling with pulse audio and Bluetooth, but it's not particularly fun.
And at least according to Neil, sounds like 2004 package version of PipeWire is pretty
darn old.
So if you're going to do that route, you'd probably have to go compile it yourself, which
is a whole other ask.
So if new hardware is in the boat, sounds like that might be the simplest option because
Bluetooth just didn't work out great.
Linode dot com slash unplugged.
Go there to get one hundred dollars in 60 day credit and you go there to support the
show.
I mean, the hundred dollars.
I suppose that's nice.
I suppose.
But I mean, you know, supporting the show.
That's great.
Linode is our hosting provider of choice.
Everything I've built in the last couple of years, I've chose Linode.
And for a bit, I was like Mr. Skeptic Pants.
I really was.
I shopped.
And every single time Linode came up above the rest.
And unlike entry level hosting providers or big cloud over at AWS, they don't try to tie
your hands and lock you down.
Linode gives you tools that are great and they really let you get the most out of their
crazy fast systems.
And when people ask me, Chris, why Linode?
There's so many choices, Chris, I say because it's fast, because they support Linux and
because they've been around since 2003.
They're not some crazy VC funded company that has to go big or go bust.
And they watch this stuff and built accordingly and have focused on that one thing in what
is essentially forever, because like 2003 is basically like forever.
I don't even know how they did it, because in 2003, I was struggling to keep a job because
the dot com boom had gone bust.
And somehow they got rolling and they built out a fantastic network, 11 data centers worldwide,
MVME super fast drives, SSD speeds that are going to, you know what, you go benchmark
them with that $100, you're going to see they're going to blow you away.
And a dashboard for days that's easy to manage and has power options that are just a few
clicks away.
And, you know, Wes is always going on about the fact that Linode has great tutorials so
he can sound really educated by reading everything Linode has written.
I don't have to prepare at all.
No.
I just go check out their articles.
Makes it sound like pros.
How do you think I got a job?
So anyways, go over to Linode and try it out.
You can build yourself a $5 rig or get something just custom to just what your workload is.
Like we we built ourselves something kind of nice for our matrix server.
I'm really proud of it.
And we take advantage of Linode's object storage for our next cloud back end instance and for
our peer to back end instance as well.
It's a great way when you think you're going to have storage that's a little unpredictable.
Object storage can be a fantastic way to run that.
Or if you need a static website for a portfolio or maybe a blog, you want it to look super
pro and fast, go check out what they have to offer.
So get started by going to Linode dot com slash unplugged.
Get that $100 for your new account and try all this stuff out.
There's a lot of ways to host something and a lot of various companies that'll do it for
you.
But none of them, none of them check all the boxes like Linode.
Linode dot com slash unplugged.
Oh, a little housekeeping time.
Great idea.
Great idea.
Did you know that we have the Luplug on Sundays and every now and then this show pops in.
Drink some cider and takes over the place.
Sneaky devils.
The Luplug happens every Sunday over at our mumble room.
It's not a weird thing.
It's not some algo social media hangout site.
It's mumble.
It's free software and it's happening right in our lobby.
So head over there.
You can get info at Linux unplugged dot com slash mumble.
Hey, also little update on the Jupiter broadcasting garage sale while I'm gone, you know, out
hunting, I mean, taking photos of penguins, we're going to get some new items in stock.
Some really cool stuff.
New stuff for the swag bags, going to upgrade the swag bags, get a new new batch of stuff.
Very excited about it.
And I should have proof copies on Monday of what I'm thinking about doing.
And if I like them, I'm going to place the order.
So when we get back from our penguin expedition, we'll have these ready to send out.
So I'll have an update for you on that.
And thank you, everybody, who's grabbed something over there at the Jupiter garage.
Been a huge success.
And it's also been a ton of stuff that we have learned and are still learning.
And I really appreciate you helping us do that.
And that, Wes, is all the cleaning.
So let's get back to the questions.
Eric from San Diego writes, I'm still relatively new to Linux, and I've got several Linux machines
at home, including the ThinkPad, too many Raspberry Pis, amen, Eric, and an old laptop
I brought back from the dead using Lubuntu.
My question is, how does one go about checking the open source code of a program?
Hmm, you want to do a little auditing, hey, Eric?
Well, Wes, you got any tips for him?
Because I'm not sure how to answer this one without saying it depends.
Well, it does depend.
You know, there's a lot of stuff now on GitHub for better or worse, depending on how you
feel about Microsoft and GitHub and large proprietary SaaS platforms.
But it's pretty much a one stop shop for a lot of things open source, even when it's
not the canonical repo where everything's actually developed.
A lot of projects mirror stuff over there.
So it's a good place to get started if you're just looking for general open source stuff.
Now for your particular distro, that's where it also gets more complicated because they've
got their own systems in place, but they definitely have something.
It might not be as discoverable as GitHub is, and it will depend on the distro.
And that's where you might go reach out, go join a, you know, a matrix chat and IRC chat
and ask about the stuff because, you know, you can go download the packages.
But if you want to go find the repo where it's kept, that'll depend.
But there will be people happy to point you in the right direction.
Hmm.
I like where your head's at, Eric.
That's a great, that's a great thing to be thinking about.
And it's something that we don't take as much advantage of as we could.
We like to claim the benefits of it, right?
We love to say that it's open source and all the things.
But how many packages that you install have you actually looked at the code for?
Mm hmm, something about eyeballs.
So our next one comes in from Sint says, Hey, guys, about six or seven years ago, I got
intrigued by Dragonfly's Hammer 2 file system.
At the time, it sounded quite advanced.
However, these days there's ButterFS, which I know you guys talk about, but do you have
any experience with good old Hammer 2 or happen to know if there's any serious contenders
in the future?
Yes, it is Hammer time.
Yes, it is.
No, unfortunately, I mean, I've I've mucked about with it a little bit.
I have not tried the the recent Dragonfly release, which sounds like it has some great
performance improvements, at least according to Michael Airball over at Pheronix.
Now I'm not sure we have anything quite as interesting as Hammer.
The file system on Linux I follow and I'm most excited about is BcashFS, which is slowly
cooking.
We'll get here one of these days.
Yeah, this one's that one's frustrating because it seems like all the major blockers have
been resolved.
But this just not really getting traction and heading towards Linus's tree.
There's just a lot happening and it doesn't seem to be on its way to 5.13 either.
But I agree with Wes BcashFS.
Bill from North Carolina writes in, hey, guys, why are window managers so effing ugly and
difficult to customize?
He's specifically talking about the tiling variety.
I don't know if I agree that they're ugly.
I mean, if you go over to Unix porn on Reddit, it's like nothing but tiling window managers
that admittedly look pretty good.
But I think Bill does have a point here that some of these more advanced desktops, you
could say they lack from a design focus team member or two.
Yes.
Well, it's multifaceted, though, right?
It's partially that, but I think it's also partially sort of a keep it simple, stupid
sort of mentality or a, you know, you are the user, we're empowering you to make these
choices and we're not even going to bother with making a nice default config because
we think you're just going to configure it yourself anyway and figure out what looks
good to you.
And that doesn't really work well for most people.
But if you are compiling yourself a tiling window manager, maybe that's what you want.
It's almost like sort of, you know, setting up an Emacs config versus these days they
have some nicer distributions like Space Max or something that's doing that for you and
hiding some of those details.
But that's also maybe why we were so excited about some of the work that Pop was doing
on their tiling extension, because it was kind of marrying those two worlds of like,
we get some of the features without all the work.
Yep, absolutely.
And I think it does come down to maybe finding the right distro that stages the desktop environment
the way you like.
And there's a lot of choice out there.
Hey, just a quick real time update from Sami Ken in the chat room regarding the Bluetooth
headset issue.
That's that profile step down thing, that lower audio quality codec that it does.
I haven't tried this, but Ken says that if you disable the headset microphone in your
OS and use an external one, it will sound a lot better.
So you have to disable any other microphones.
I don't I think what you have there is just pulse audio.
That version of pulse audio steps down to a lower 80 Bluetooth audio quality.
I think it's just a thing.
It's been a thing for a little bit.
NorCal Geek Dad writes in from Northern California.
He says, I've got kids and I've got a gaming related question.
My kids, my nine year old son in particular, have discovered Steam.
Nice, nice man.
That's great.
He says, so far I've been able to keep them happy with my ThinkPad T430 running Steam
on OpenSUSE.
He goes on to say they play Portal and other games that are just totally fine on the integrated
graphics.
However, some of the games my son wants to play are only available on Windows.
I have a dual Xeon server.
I could put some more RAM in and then maybe pop in a decent video card and install Windows
and do the Steam link thing.
The containers it's running now could easily be put on a VPS so that really wouldn't be
a big loss.
Or I suppose I could option two, format the T430, install Windows and then let them use
that.
Get myself a newer or older ThinkPad for a daily driver.
Or maybe even go the VM with PCIe pass-through route.
What do you guys think would be the easiest, the cheapest or the best?
Thanks, Matt from Northern California.
The easiest is going to just be putting Windows on there.
If you don't have time and you don't want to mess around with dealing with, I don't
know, networked Windows installs or complicated pass-through, that's the simplest.
Is it the most fun or most satisfying?
No.
I don't even know if it truly is the most simplest long-term because my big fear has
been if my kids ever ended up on Windows, they would download like some Minecraft mod
that was totally malware and mess up their Windows box and then I'd be right back in
the bad old days of IT support cleaning up my kids' computers with malware and I was
thinking maybe that wasn't such a big deal until my cousin's daughter downloaded what
she thought was a newer version of like Fortnite or something like that, like an update, and
totally trashed her Windows box.
I guess you have a good point here, which is you're the family admin anyway, so minimize
your own pain.
I know what route I have been considering going, Matt, and that is just building my
own Steam streaming setup in my land with the Steam link, and then the nice thing about
that is there's a bunch of other ways you can get that Steam streaming with either the
Steam client itself or Moonlight.
On a Raspberry Pi, you could make it a Steam link, essentially, or if you have the physical
Steam link controller, like it sounds like you do, you could do it that way, and it just
means that you're done with the upgrade game.
You upgrade one machine from that point on, and then you stream those Windows games to
all of the other computers or even TVs, and you don't ever really have to worry about
it, because it'll be an ongoing maintenance issue any other way as far as I see it, because
a VM with PCI passthrough works until you do a distro upgrade or something, and then
it's going to break, and there is nothing more fricking frustrating than when you finally
get a moment to sit down and play a game with the kids, and you have to play tech support
instead.
The other option you could go, it would be even easier, would be something like Nvidia
GeForce Now streaming, which streams Windows Steam games to Linux using Chrome.
That would be an option, but I think you'd be a lot happier with just Steam link over
the LAN.
That'd be the way I'd go about it.
Plasma Man from Iowa writes in, I've heard a lot of great career advice on this show,
and I've got a sensitive question.
If a person has average intelligence, drive to learn a new career path, and five plus
years of general IT experience, but it's non-Linux, where do they stand to be up to
speed as a Linux server administrator?
A working adult, say, willing to put in one to two hours a night into learning Linux from
online courses or similar.
And this is where Plasma Man has a lot of humility, and I think that goes a long way,
and we'll get into that, but I would not want to apply out and struggle not knowing enough,
or worse, be dismissed because I thought I knew enough.
How do you gauge if you're ready to present yourself as a person that can hit the ground
running, administrating Linux systems?
Well, Plasma Man, I can tell you that if I were interviewing you and we had had a conversation
of the similar nature, what I would have gotten from you is that, like Wes said, you have
a little humility towards this, and you also have a willing to learn and research attitude,
which would be probably the number one thing that I'd be taking from the interview, and
I think that's a positive.
Yeah.
And other than that, you mentioned online courses, but just playing around.
Don't pretend to have done things that you haven't, but be honest about the experiences
you have because there's a lot that's going to be portable, right?
A huge percentage of IT stuff is just troubleshooting, and troubleshooting is troubleshooting.
If you've got a good scientific approach, you know how to debug things and figure out
where in the system stuff is breaking or you need to make a change, that is hugely valuable,
and you can learn the details of how to look up stuff in a man page or what the flags are.
Yep.
I didn't say it during the Linode read, but it is true.
You really could take that $100 credit the show has and use it to build something and
learn something.
It really is the best way to learn something like that is by doing.
And so we have, you know, that's why Cloud Guru is also a sponsor, and they have a bunch
of labs that can teach you there, and I think combining those two things could be really
useful too, and it's not an accident that there's sponsors on this show.
It's pretty much wise because people like you are looking to get into the field.
Casey, in the IRC, it makes a really good point that, you know, part of this is you
got to be able to sell what you're doing and talk about things, and a good way to practice
that is sharing what you're doing, whether maybe that's on a blog or on your GitHub page
or maybe you join some local Linux users groups or some online groups and, you know, be excited
about this stuff.
If you are, like, that's valuable too, just being able to share that, share some projects
that you've done, contribute to open source with some documentation maybe, or just share
your neat homelabs.
How about this?
Get a blog, get a web server up and going, get a blog software package on there, and
then start writing about what you're doing, and then include that in your resume.
That's real experience, and I think if you have a few years, he says he has five plus
years of IT experience, that is, a lot of that is a way of thinking, a way of communicating
with end users, a way of researching and learning, a lot of that stuff is universal, man, and
it's going to work regardless of the OS, and when you get on the other end of it, you'll
realize how true that is, and kind of how trivial the OS actually is in the grand scheme
of things, as long as you have those core skill sets, and then, yeah, it really comes
down to how you communicate it, how you sell yourself, and how confident you are, you know,
because that confidence, that confidence does kind of come through during those conversations,
and in there, I'm also going to link in the show notes to a recruiter post.
She wrote this up recently, but she was a recruiter for like nine years, and now she
works for Microsoft, and it's a decent list of advice, it's like a, it's a top seven kind
of list, but it's like an actually good list, so I'll include that in the show notes, that
might help narrow it down too, but it is a, it's a question we get in all the time to
code a radio as well, people that want to get into the development world, and a lot
of times it's like, well, this is a great chance for free software, like find a project
that needs somebody to do a little development for them, find a project, in the case of our
of our writer here, find a project that could use a little infrastructure help.
There's a lot of them, you know, a lot of them are just doing the infrastructure themselves
because there's nobody else out there to do it.
It can be a touchy thing, because you don't want to come across sounding like you're being
judgmental about the state of their infrastructure, you know, you don't want to pop in the IRC
and be like, hey, who's in charge of the server here, because this is set up wrong, when was
the last time you did a release, come on, that will get you nowhere real quick.
But if there, if there was, you know, a hypothetical community that maybe you could become a member
of and help identify infrastructure that they need, web presence, or maintaining a back
end repository or a mirror or something like that, that you could provide, that gives you
an opportunity to, it's, it's, it's not no stakes, but it's not extremely high stakes.
But it's enough that you're going to take it seriously, and you're going to learn and
you're going to be put in positions where you have to adapt.
And I mean, yeah, you got to do it for free.
But man, think about that in the cost and value of training.
It's really kind of invaluable.
And in the modern day, we don't have a lot of apprenticeships and things like that.
It's, but that is a, you can think of it in sort of similar terms.
In a way, it's an apprenticeship for you to learn how to manage an infrastructure for
something that's getting public use, and has some requirements around its availability,
which is going to force you to learn and adapt.
And the project also benefits from having somebody who's dedicated to helping them out
a little bit.
And so it's a win for the project.
And it's a win for you.
And even though you're not going to walk away a millionaire from doing it, you're going
to walk away more confident, and you're going to be able to speak more clearly.
And you're gonna be able to speak about these things in simple terms that demonstrate you
understand them.
Right.
And just having been through some of those fires, right, having to figure out like, well,
this wasn't ideal, and it kind of sucked.
But we got through it.
And here's how we dealt with it and made compromises because I mean, that's all that goes on in
a business anyway.
Right?
Like, you got to make it work.
It's never perfect.
But if you get through it, that's valuable.
Neil, do you have anything to add to what Wes and I have listed off?
Yeah, actually, like one of the ways that I kind of got started doing all the, you know,
infrared type stuff, like, you know, my I'm professionally a senior DevOps engineer, and
I work on, you know, maintaining infrastructure for software delivery pipelines and stuff
that my employer Datto and kind of the way I got started doing all this stuff was actually
working in open source projects doing this kind of infrastructure work.
So you know, and I can say that today, like the Fedora infrastructure team in the Fedora
project actually has an awesome apprenticeship program for being able to get started with
learning these kinds of things, working with things like OpenShift, Ansible, you know,
all the all the modern technology that you tend to see in a in a real business environment.
And same goes on the openSUSE side, they've got the openSUSE heroes team, which works
with virtual machines uses salt, and works with a wide variety of different technologies
and different stacks to be like, it's a very common thing.
And like, as a real systems administrator, you wind up working with a lot of crazy things
and having to work a lot of different technologies.
And in in large open source Linux distribution projects, you wind up in the same boat.
And they're great ways to like, get some hands on, get some experience, work with people
who kind of know this stuff, and like build that intuition up that helps you be successful
doing it professionally.
So I absolutely would recommend, you know, if you want to get started with this, if you're
a Fedora user, all the better, like check out Fedora's infrastructure team, and hang
out with them and see, you know, how you can get started there.
Or if you're an openSUSE user, do the same with the openSUSE heroes.
Yeah, there's probably if you think about the projects and software you use, there's
probably something out there that speaks to you.
Casey, I know this kind of touches on an experience that you've had.
Yeah, I got my dream job just, you know, being out there in a community I was I was commenting
in a blog post for a software engineering group.
And just like professionals consume the same things that you're excited to, and participating
in it is a huge way to be able to point to on your resume, hey, you know, I'm already
thinking about this stuff a lot, I'll be thinking about it just as much when I'm working for
you.
It'll also help teach you some of the jargon I expect, you know, like learn how do the
people in the industry refer to these things, and you'll kind of learn some of the things
of like, what do they expect on the job?
And what can I go learn ahead of time to make sure that I at least have a little of the
context mail route.net slash Linux try out mail route today and get 10% off the lifetime
of your account and start with a 30 day free trial, no credit card required to see it really
works great.
And part of the reason, maybe not just part, but a big part of the reason is they've been
around for 24 years, and they have focused on their core competency.
And I think you guys know something about me, there's a theme, I like independent companies
that focus on something for a long time and try to make it real good.
That's definitely mail route.
And you can get started at mail route.net slash Linux, you know, really, the core value
of mail route goes beyond just removing spam and viruses.
But really, it helps you prevent downtime.
And it helps with compliance to the downtime part is essential.
We knew we wanted to use that for our mail server, we wanted something where if we want
to take it down and upgrade it, we don't lose out on email.
mail route will automatically queue it up for us and we can go in and we can have it
keep it up to 15 days or whatever you tell but like by default, it's gonna keep it up
to 15 days.
And then when your mail server comes online, it just just forwards it right along like
it was like it was never gone.
Just Oh, mail starts coming in your inbox like you were never offline.
It's brilliant.
I love that about it.
And if you want to host somewhere where maybe you have an issue with the IP, or you have
to work with a different port, mail route is flexible there as well.
And getting set up is so simple.
If you're on Office 365, if you're on Google Apps, it's all one click, which seems like
some kind of magic.
But it works.
And it works really well.
You get security, you get speed, you get uptime, and you get a streamlined workflow along with
real time logs.
mail route is email magic.
They are one of the first to really build in this kind of email filtering service back
in 1997. that's so awesome.
That's basically as long as I've been using Linux mail route has been around.
That's amazing.
Wow.
They have an API that you can integrate with as well.
If you like to do some automated tasks and build up your infrastructure through code,
somebody tells me that's a great idea.
And of course, I love the real time log searching when we were setting up our email server.
And the fact that that downtime prevention is there is just really nice.
It gives me the confidence to put this thing into production.
So go try it out.
Get 10% off the lifetime of your account and start with a 30 day free trial by visiting
mail route.net slash Linux go there to protect your business mail route makes email better.
Now we have our last batch of questions we're going to get to this episode we have more
we'll try to do in the future, but we just have this last batch.
Oh, here's a good one.
Bill from somewhere on the eastern seaboard writes, I would love to hear the story behind
the intro music of the various current JB podcasts.
Oh, yeah.
Okay.
The story of the song.
If Chris can remember, yeah, it has been a long time.
So the thing that always felt off about a lot of podcasts was the music like the music
was never great because of all the licensing issues, right?
You can't use the music you want because you can't afford it right unless you want to be
dedicated only on Spotify.
Now, if you do that, they'll let you play any music you want, but I don't think that's
going to happen.
So you know, I wanted something in the thing to guys you gotta you gotta know is you gotta
appreciate the fact that a long time ago, podcasts have like long intros when the show
first started, like we had a really long intro and that was normal.
And then we realized, hey, dummy, somebody's gonna listen to 100 of these, they're gonna
get a little sick of waiting a minute for the show to start the same music every time.
So we shorten it and shorten it and the music is less less in the show now, but it used
to be in there for a much longer.
So I wanted it to sound damn good.
And I just knew I was going to need something that was better than the rest.
And so I came across Ronald Jenkes and he had this song that helped my son fall asleep.
He was just a little baby boy and he had an upset tummy most nights and he'd be swaddled
while I was editing and I needed music I could play on a loop that he would fall asleep to.
But you know, it wasn't it wasn't boring, it just had to be something for he loved it
and he so put it relaxed him.
And it was the it was Ronald Jenkes outer space song, which is great.
And I still love it to this day.
And so I contacted Ronald and I said, Hey, man, you know, I just love your music.
I'm doing these podcasts here.
What would you think about me using some of your songs?
And he said, Hey, man, I listened to your shows.
I love your shows.
How about I license my music to you?
And I'm like, that would be great.
And so we've had access.
And I really, I really just so grateful we have that we have that access licensed access
to Ronald Jenkes music for years.
And all of the songs all of our shows are just standard tracks of his on his albums
that you can go buy and download and listen.
And you can search for him on your streaming service of choice as well.
And so we picked different parts of the songs that we think make great intros and outros.
And we have used them across a lot of our shows over the years.
Yeah, they get like crunched down or remixed.
I mean, Joe did some nice work on the current variant for this show.
Yep, yep.
We've tweaked it a little bit here and there and made it you know, a little shorter or
taken out just a part of a song.
And so what's neat about that is a lot of our shows actually have much longer versions
of the intro.
So if you really were into the song, you can actually go find like a three minute version
of it.
And they're amazing.
He's done incredible work.
And you can find some video of his on YouTube and the man it's like watching commander data
in Star Trek work the L cars interface.
He just Ronald Jenkes just flies across the keyboard like you just wouldn't even so that's
pretty neat.
And I am forever grateful for him for him letting us use his music.
Will writes in with a second question over there on the eastern seaboard.
He says what is your Linux origin story?
All right.
Well, I I went online.
So what's your Linux origin story with
Linux origin story?
Yeah, when did you start using Linux?
You know, I'm not okay.
It must have been it was probably about 2005.
I think.
All right.
All right.
Do you remember what brought you over?
It was actually that there was Linux at my high school.
Oh, cool.
Yeah.
This will date me terribly.
But for some reason they were it was already installed.
It was it was like, can home to I think they were running Debian.
Yeah.
That sounds like a typical school setup.
Yeah.
It was kind of great.
None.
None of the students really paid attention.
We're all just playing risk online in the library instead of doing any kind of research.
But they had these like nice computer labs doled out with Linux was I'm sure was much
cheaper for them and actually an active IT staff, which I did not take advantage of.
I didn't really get interested in the computer science until a little bit later.
But I remember having used GCC to compile something but like left it running on the
network with the network mount.
And then someone pulling me out of class later being like, hey, what's going on?
What are you doing here?
So clearly they had people that cared and, you know, like we're really taking care of
these systems, which was which was pretty neat.
And so that got me to install some, you know, a version of Debian at home and then later
Ubuntu and start playing it with it from there.
And I was interested in it really since then.
And at college, of course, I pretty much just ditched Windows.
That's great.
I love I love that.
I played a lot of old Quake, like Quake one.
Yeah.
Yeah, that was good.
That was good times.
The stupidest thing I ever did, I can't believe I did it now, but the absolute dumbest thing
I ever did was I hung a modem off of my desk because I was I was the computer kid that
had his own dedicated computer in the computer lab in the back.
I was that kid because I had kind of put one together based on fixing all the other computers.
And the dumbest thing I did is I hung a modem off there to create my own ISP, which not
only it sucked because because of the way the school's phone system worked, I couldn't
get a 56K connection.
So I was I could only get like thirty three six.
So just like thirty three K. But it was my own ISP.
Right.
But of course, now looking back, I just created a back door because they had a T1, which was
a big deal back then.
That's what I wanted access to.
And so I would queue things to download on my computer there and then transfer them over
my modem.
Brilliant.
Oh, my gosh, Wes.
You know, it's ironic is I'm essentially doing the equivalent today in Lady Dupes over cellular
connections transferring from the studio.
So there's that my origin story is long and I think I want to do an interview with it
because it involves a leak of a series of Red Hat this from a Microsoft employee.
Well, sounds like many might have an origin story to take your place.
All right.
I love that.
Minimac, what's your Linux origin story?
I became bored of windows.
That's it.
And all of a sudden I was in a store and I saw a box with, say, six point one.
Oh, that was like nineteen ninety nine, I think.
I loved those those multifold boxes that had all the discs in the sleeves and artwork inside.
You could expand it out.
You had like seven disc and like a four hundred page booklet with it.
And then I bought that one.
So that came with KDE and GNOME one point zero.
And you had that x eighty six config where you had to configure everything from the mouse
to everything.
You even had to configure the printer.
But that was my first experience.
I love that classic version where you have all those discs and you had to swap the disc
during the installation.
I still have that one.
It's lying.
Yeah, it's lying around here.
And then I used it like I had like some kind of server where I started playing around with
it and then like two or three years later, I switched completely to Linux.
That was like two thousand and one, two thousand and two.
I'll tell you this, my like core origin story with Linux, because it is quite the interesting
story, I didn't even really appreciate it until I was reminded of it a little while
ago.
I thought, you know, we should tell it sometime.
But the thing that the thing that I the moment I remember, I remember the moment I fell in
love, the moment I fell in love with Linux.
I could really tell it was different and I could really tell it was more powerful when
I deleted my own file system.
And I mentioned this on the show before.
It's the moment the moment I did a classic rookie mistake way back in the day of deleting
my root file system with RM, which was easier back then.
And then that I didn't realize it had happened for about 40 seconds.
So I deleted my file system.
And then the thing that made me really, truly, truly fall in love is that not only could
I delete my file system, but I kept using my active applications for like almost a minute
before I ran into a problem.
It's fine.
It's all in memory.
And I sat there and went, wow, this son of a bitch just let me delete myself and it didn't
even stop me.
Windows would never do that.
This is amazing.
All right.
So there we went on way too long.
What's our what's our next email, Mr. Payne?
Yeah, that was a little bit too much fun.
Let's take things a bit more serious.
Daniel from Ohio writes in, how's your health going, Chris?
I know you've complained about RSI in the past and mentioned it on the show.
And of course, there was that time that you had to go to the hospital.
I just wish the best for you, the team and your family.
Oh, thank you.
Yeah, that trip to the hospital, that was crazy.
That was really wild that I still have a big old scar from that.
My appendix, it ruptured.
And the thing about that is I have a hard time taking time off because it's really hard
from a lot of reasons when you run a small business to take time off.
And so I was I was right in the middle of preparing the public announcement that Linux
Academy acquired Jupiter Broadcasting, just a little busy.
We had a live stream with a public date.
Everything was locked in and set.
People were flying into Texas for the announcement.
I just not proceeding was literally not an option.
And you can imagine this was something that was multiple months in the works.
And so I attended a fair and I ate a hot dog and I thought, oh, I got food poisoning is
what I thought.
I kept rationalizing that I had food poisoning.
And so as I got progressively sicker to the point where I couldn't keep any food down
for about three weeks, I figured, well, it's probably time to go in and see a doctor.
It was probably about two weeks past time to go see a doctor in retrospect.
But then that's that's the point is I thought I just had food poisoning and it happened
before I had rough food poisoning before.
So I go in, the doctor says, no, you definitely had an infection.
But good news is it looks like things are on the mend.
You're good to go for travel to Texas.
I say, thanks, doctor.
I've never met before.
I'm going to go to Texas.
So I fly down for the announcement and I fly down the Thursday before the Tuesday we were
going to make the announcement.
And I'm not doing real well.
I'm not feeling so I go into Linux Academy's office for like a few hours and then I figured
maybe I should go home and sleep it off.
So I go back and I grab myself a beer and I drink a beer and I chat.
I make nice with the with the bartender for about a half hour.
And then I go up to my office, I go up to my room and I just crash and wake up the next
day and I feel real bad.
And I think, oh, man, that beer really screwed me up.
I shouldn't have had that beer.
Well, it turns out I was not able to make it out of my bed that day because my appendix
had ruptured and then all of the crap in there had eaten away over the about a three week
period at the muscles that connected my my like hip muscles to like my bones.
And so I had lost functionality of my leg and couldn't get out of bed and thought maybe
what I should do to kind of fix this is maybe I should just sleep a little bit.
So I thought, I'll just sleep it off and then I'll wake up on Monday and I'll be good to
go.
And then Tuesday we'll make the announcement.
Everything's going to be fine.
I just need a little more sleep.
And my wife thought, well, I'll fly down and surprise him with a nice romantic weekend
because, you know, we're about to make this big public announcement.
I'll take him out because he's just been down there working.
He's got no nothing to do.
She flies down and finds me in this totally incapacitated state and is like, are you kidding
me?
We're taking you to the hospital right now.
I'm like, poor idea.
I get into the hospital and of course they won't let me leave because they've taken me
into emergency surgery.
They tell me it's going to be two little incisions.
We're going to get that appendix out of there.
You're going to be fine, Mr. Fisher.
I wake up and I have an incision from my crotch to my chest that they had to cut me open and
splay me way open and go in there and clean everything out, carve out a bunch of stuff.
And I have this ginormous incision that took five to six months to heal with daily care
and maintenance.
It was awful.
And thankfully during all of that I had health coverage because, you know, I was part of
Linux Academy and they had a really good health plan.
And so they covered the $200,000 bill that was to have all that happen.
I think I ended up paying maybe seven grand total out of pocket.
Wow.
Yeah.
And that was thankfully just because some of the stuff that, you know, I just had a
few things that are out of network and stuff that I had to cover.
So you know, other, so from there my health has gotten much better.
It's gotten much better.
I I've gained more weight over the COVID lockdown than I'd like, except for one.
Yeah.
But I'm working on that and we're about to take a little time, you know, to go penguin
hunt.
I mean take pictures of penguins.
So we're getting out there, going to get some air.
Yeah.
You know, just a high fat diet.
It's going to be great.
All right.
Well, let's, let's take things lighter again.
What's the deal with so many new domains for everything?
Yeah.
Yeah.
It's jupytergarage.com.
We've got asklup.com.
This anonymous writer?
Yeah.
Anonymous wrote in, I guess.
Yeah.
I have only a few domains and it feels like that's too many to juggle.
I mean, yeah.
I feel you there Anon.
I mean, how many name chibi reminder emails do I need?
Boy, yeah.
Thankfully that kind of stuff is a business expense.
It's a legitimate expense for the business.
So why so many domains?
Sometimes I get a domain just because it's like, it feels like getting a little piece
of real estate, but honestly it's so that way it's easy to communicate with you guys
and it's easy to remember.
It's just simpler if I say asklup.com, right?
It's just easier to communicate and you're listening and I need to say something that
you'll remember when you get back to your desk or whatever.
So a domain is often the way to do that.
I just saw an email come in reminding me of a prank domain that I have.
What was it?
What was it?
You don't want to say?
No, I'm not going to say because it's not relevant to the show.
It's just an amusing thing between friends, but I have several of those.
It must be really good if you don't want to say it on air.
I have an embarrassing one, but you might know what it is, but I have an embarrassing
one I'll admit to.
Oh yeah?
But you got to admit to yours.
Is it active?
Will it lead people somewhere?
Is that why you don't want to say it?
Yeah, I know.
Okay.
All right.
Okay.
I have a second one.
Okay.
Yeah.
What is it?
Turdkey.com.
That's good.
Here's the idea, right?
It's a lot of, you go to Airbnb's or similar setups, you've rented some place and it's
not great, but you don't want to ruin your account over there by leaving a bunch of negative
comments and getting negative comments back.
Head on over to turdkey.com, leave your stinker right there.
That's great.
That's great.
Mine is not nearly as funny.
I mean, I do have some really crazy ones because I actually think the crazier ones are easy
to remember.
Yeah, that's fair.
So if I can drop a.ninja or something in there, I'm doing it.
The pizza.
Yeah.
I'm fond of star trek.sexy because I always thought it would be like a great domain to
take advantage of is something about star trek.sexy and I feel like it's going to be
more valuable as time goes on.
So that's mine.
Yeah.
It is too many domains.
You are absolutely right about that.
Jared from Memphis writes in, love you guys, but I have no sense of your tastes outside
of this wonderful free software world.
Would you name a favorite film, movie or book?
Well, I think we just got insight into you, Wes.
Sure did.
Hmm.
I mean, I talk about Star Trek all the time.
We both do.
I just got done watching The Expanse.
That is such a great world builder sci-fi series.
And then when you get hooked and you want more, they have books that give you an even
expanded version of the universe, which I think is very complimentary to actually watch
the TV show first and then listen to the books.
I'm onto the second book now.
I've really been enjoying The Expanse.
It's complex, detailed, well thought out sci-fi.
And just recently there is like an astronomer or a physics expert that watches and reacts
to The Expanse and she was very impressed by the way they handle low gravity situations
and whatnot.
What about you?
Got anything?
Yeah.
I mean, there's like probably too many things.
I do think The Expanse is just fascinating from a sci-fi enjoyment perspective.
Another sci-fi I've liked lately has been the Culture series by Ian Banks, which I just
find fascinating and a lot of fun to read and is really sad that he's passed because
I would love more of those books.
I also just like totally unrelated to anything here, I really enjoy jazz.
That's one thing, jazz, classical music, and really all music on the side.
I don't know if I have a favorite, but there is a particular jazz station here in the Pacific
Northwest KNKX that I listen to and they just really crush it.
Yeah, they are pros.
I think also you guys know me for loving the road trips.
I've got three kids and so we love going on little trips and doing stuff like that.
So there's those elements of life.
I spent a little bit of time and I've just recently picked back up getting into drone
videography, which I really liked.
Oh, great.
Yeah, it's so fun.
It's so nice to get up there and get those high perspective views and really get a sense
of where you're at when you're traveling.
So thanks for asking, Jared, we appreciate it.
And the last one comes in from PyCrash.
That's right.
What do you like most about being an independent network?
Well that worked out really well.
So we got a bunch of emails in and we got to this is essentially the halfway mark right
here.
And so that's a great one to end on.
So PyCrash asked what we like most, huh?
You have an answer?
Before I get into it?
Because I know I have one.
But I'm curious from your perspective, what's the best thing now about JB being independent?
Oh boy, that's a good question.
Because in some ways it's been a lot more work.
So from a work standpoint, it's kind of been harder.
Right.
And there's more constraints in different ways.
Yeah.
There's different concepts and constraints for sure.
But in other ways.
Oh yeah.
No, in other ways it's great.
I mean, I think it's just the focus is nice.
It's JB can just be about the show content.
Like when you're part of a company, and this is true for my day job, there's just a lot
of compromises and other things, housekeeping, if you will, that you have to deal with.
And that was certainly true in the previous JB era, for better or worse, at different
times.
Right.
Like that just changed with how the organization was.
It's a whole team that you have to update.
Yeah.
I think about LAN.
In the small tweaks we've been making since you joined me on LAN, kind of like little
tiny of adjustments here and there, or we try, like right now we're kind of experimenting
with kind of quickly going through some stories that you should know about, but don't require
a lot of discussion and then leaving time at the end of the episode to really kind of
just go deep into something.
That's a change you and I just made in the last few weeks, just on our own, didn't really
like talk about it first, like in a team meeting and then kind of, you know, give an outline
of how it would work and like we just did it.
Yeah.
Before there was a lot of process, which was often very supportive.
Yeah.
It was good and bad.
But now there's a lot of freedom to just sort of tweak it as needs right in the moment.
Yeah.
I think it's like, and sometimes with some types of media that's good and bad, like with
LAN, Linux action news, it's good because you kind of, you need to every now and then
be willing to reformulate when the news presents a curve ball that week.
Sometimes there's just a mix of stories where a standard approach doesn't work and you got
to go, how can we adapt?
And having the ability to say, as we're both sitting right there at the mic, how do we
adapt to this right then and there?
That's really nice.
And so it means that we don't have quite the support.
It means that Wes and I are spending more time on a Sunday making that happen instead
of just hitting record, doing our bit and then walking away.
But independent means really for me that content is our core product.
So when you're part of a larger organization, you have more money, you have more support,
you have access to more resources and you have access to people who have maybe managed
other projects and can give you guidance to manage a project that you want to do right
now.
But there is one sort of truth that is unavoidable.
And that is the job of making content for a large organization is almost never the core
focus of the organization.
The organization makes its money selling a widget or a service and the content maybe
is part of the sales funnel to drive people to the service or the widget.
But the business does not breathe, live, eat and die on the content alone.
And unless the business is wholly dependent, its success is absolutely dependent on the
quality of its content.
Unless the business must survive by its content, the content will always suffer because it
is not the top priority.
It's just human nature.
It's just how you organize things.
It's not, it's not malicious.
It's just what it is.
And content has to be the main focus of everyone's efforts if the content is going to be competitive
and high quality.
Yeah.
But what about quarterly returns and those OKRs you were working on?
Right.
And there are places for that, especially when you're trying to build other kinds of
products.
But when the product you're trying to build is media and content, it needs to be the,
it needs to be the thing that determines if the business is successful or not.
Otherwise the content will never be as good as it has to be.
And it requires just absolute focus like that.
That means so for now that we're independent, there is only one job, really, and it's make
good shows.
There is a ton of stuff that you guys would never even believe we'd have to do and spend
time managing in service of that goal.
But the company, the business has a singular goal and its content.
And the reason why I emphasize that is because, well, how many businesses can you name that
have a singular focus, a singular goal?
Some but they're probably smaller ones, right?
When you start thinking about bigger companies, all of a sudden they only got like maybe three
goals or they got like a dozen goals, right?
You need one goal when you're making content and that needs to be good content.
You need to have laser focus and I think the only way to do that is to be independent right
now.
I don't know if it's always, I think it's probably the only way to ever do it, but maybe
I'm wrong.
But right now it seems the only way to accomplish that is to live and die on the content.
So the business has to be at a scale where that's conceivable and that means being independent.
Then that's just the realities of the business.
I think there's also an element that you just like being your own boss.
All right, I got a pick just for you, Wes.
What for me?
It's a little behind the scenes explainer here.
I should have, I should have got the rap option.
Whenever Wes and I need to transfer a file across the land, Wes just wants to use Netcat.
That's all that's wants to you.
I was going to say sorry, but I'm not sorry.
So check out termbin.com.
It is a terminal pastebin and this is a great way because you can actually get information
in and out of this using Netcat.
There's a couple of different ways you can use Netcat to actually get stuff up here.
And I just thought this was perfect for you because it's one more way to take advantage
of software you already have installed on your machine.
Oh, it's even used port 9999.
That's one of my favorites.
I know it is.
It is.
That is always, that's always the one you use.
So I just thought that was perfect for you.
So it's at termbin.com and it's, it's actually pretty neat.
It's pretty slick and it's very simple to use to move stuff around.
I'm using it right now.
There you go.
Also thank you to our members at unpluggedcore.com.
You know, you get a special thank you.
Every week we release two versions of the show just for you, a completely, totally inclusive
version of the recording that is every time I mess up or the pre and post show that doesn't
get recorded.
All of that's in there.
It's a stream capture.
So you get the full experience.
But you know what?
Maybe you want something tighter, shorter.
You got limited time.
We also have the limited ad feed available to our members.
Two choices for you.
And thank you for being a member.
It keeps us independent, helps reduce the ad load needed.
And then from time to time you get extra little perks like discounts on the garage sale at
unpluggedcore.com.
If you do the Twitter thing, you can follow the show at linuxunplugged.com.
Wes is over there at Wes Bain and I'm at Chris LAS and the whole network for like news and
stream information and log information at Jupiter signal.
And then there's a whole network of fantastic shows over at jupiterbroadcasting.com.
And I'm going to just specifically, well, you know, really you can go to radio, self-hosted
Linux action news.
They are all such great companion shows to Linux Unplugged.
Maybe save yourself some time, get the all shows feed, pro move, pro move, or really
get the fire hose and join us live.
See you next week.
Same bad time, same bad station.
Join us on a Tuesday.
We're typically live unless we're out hunting, taking photos of penguins and there's a calendar
for that.
Yep.
Jupiterbroadcasting.com slash calendar links to everything we talked about today, how to
contact us, the mumble, the matrix info, all of it.
What we've done is we've got a crack team to put it all together at linuxunplugged.com.
Now it's a team of 15 at a cost of a hundred thousand dollars each.
So it's a great expense.
In fact, we're millions of dollars in the hole, but we have linuxunplugged.com for you,
just for you.
Thanks so much for joining us.
That might not be true.
In fact, none of that may be true.
Go there, won't you?
Find out.
Thanks so much for joining us.
We'll see you right back here next Tuesday.
Oh, I can't wait to see Drew.
We are thinking about going to Colorado in August, and if we do that, we'll have a meetup
while we're out there.
So we can do so safely, which I think we'll probably be able to, and I am so looking forward
to it.
Oh man.
Really just.
It's going to be good.
It really is.
It's going to be, it's going to be so great to see them.
And the other thing I'd love to do while we're in Denver is I'd love to sneak over to the
system 76 factory and see them put together one of those new launch keyboards since we've
been there.
I, you know, they, they gotta have the launch keyboard like all like, right?
I mean, they could go in there and probably see everything, take a few pictures, have
some secrets, maybe sneak a keyboard or two in our vests because I think I'll still be
rocking the vest.
Let's be honest.
I'm only wearing some extra vests just to fit the keyboards.
