Well, that's a good question. So Wimpy, how could somebody who's just getting started in computer science help on projects like Ubuntu Mate?
Oh, wow. Um, Ubuntu Mate is a bad project to pick because I have been very tardy and actually preparing the how to contribute page, which has been a work in progress for months and months and months. Other projects have better how to contribute pages.
Um, some of the ways that you can contribute, um, translations, if you're, um, one of these lucky people that speaks and reads, writes more than one language, translations are always extremely welcome. Um, so, you know, that doesn't necessarily require, um, computer science skills.
But what if they want to get their hands on the code? They want to, they want to, you know, code stuff.
Um, the best thing to do in that respect is to find, um, where the developers for that project are talking to one another. In some cases, that might be an IRC channel, it might be slack or hip chat, or, you know, one of these live chat environments that will certainly be mentioned on the website somewhere.
And the best thing to do is go to that place, introduce yourself, explain that you would like to get involved and, uh, maybe ask if there are any particular bugs that, um, either just need triaging to start with, as in there's a bug has been raised.
Can you provide some more information? Can you reproduce the issue reliably? Um, and start to get familiar with code base.
Be helpful there. That would be really helpful. Yep. Uh, make yourself known, be helpful. And by doing things like that, you get familiar with, because for example, Marte is a relatively small desktop project.
I think there's about, um, 40 components, something like that, that make up the desktop, you know, compare that with KDE where there's about 300 components.
So, um, it takes some time to actually learn what each of the components are, what its function is and how they interact. And as you start to learn that, then you can start to understand, uh, how you can help improve specific areas.
So we've had somebody join, uh, Marte probably six or seven months ago as a sort of a regular contributor, and they are primarily looking after just one of the applications in the Marte desktop suite, rather than trying to get involved in everything.
They've got an interest in making, um, and grandpa, which is the archive manager better focusing on that area. So you could pick, you know, a, a component within the, within the suite of tools that you are interested in most of all, and just focus on that.
Um, because once you learn one area of the system, the rest tend to be similarly architected. I mean, I know that's true of, um, Gnome and Marte and KDE. Um, I can't speak to the other so much cause I've, I've not really looked at the code so much, but certainly find the developers where they're hanging out and join them there and have a conversation.
I liked all your advice. I think a lot of times hard stuff is you should break a project that you're actively using so that you can maintain interest in it because a lot of times, like what you're saying, the biggest thing is just getting familiar with everything, learning one, how do I get everything up so I can even make code changes and submit them properly to, you know, find the things.
And then when you do find bugs that either you've found or you want to fix with other things that you have the resources and you've already knocked down all those barriers, you know, who the right people to ask questions are, all of that. So when you're, you know, in a couple, in a year when you're like, Hey, I really want to make this go change. You have all the tools to do it.
Those are great points. Yeah. Solve problems, get engaged and go to where they're at. And I think your point of sticking with something that you're passionate about. So that way you remain committed and have an interest.
It's like documentation is a great way to do it. But if you don't use something, it's pretty hard to go improve docs. But if you're using it every day and you're like, wow, these docs could really be better. Here's the ways that I like it. Here's how it becomes much more natural.
Yeah.
Yeah. And some projects are looking for people that are interested in setting up continuous integration. You know, there's more and more of a shift to that now. You definitely see that from the DevOps scene and you're seeing it more on, you know, desktop and application development now.
And you know, some projects just simply don't have the resources to do that stuff. So actually becoming a really valuable QA engineer in automating a lot of that work can be extremely valuable to the project.
So it's the same as in the real world. You start out in QA and then you'll...
In some cases, helping build systems like that might not even require code initially. It could just be systems engineering.
Configuration.
Configuration.
Indeed.
And you don't even have to be a developer to contribute that.
Yeah. When I started with Marte, I was just doing packaging. I didn't do any code at all until a long time in before I had the time and the interest to really get involved. I was just doing packaging. And of course, that teaches you a lot about how the system works because you're actually, you know, stitching them together to make it all run.
This is Linux Unplugged episode 184 for February 14th, 2017.
Welcome to Linux Unplugged, your weekly Linux talk show that's going to change Android for you forever. And that's just us getting warmed up. My name is Chris. My name is Wes. Hello, Wes. I am pumped about today's show.
We got a good one and it's right before the beard apocalypse strikes Jupiter broadcast. There may be no network next week. Yeah, just like the mighty salmon. Just like the mighty salmon, the beard streams upstream, returns to main once a year.
It's a little snowier, less water, more snow. I think it's way more snow. Yeah, maybe, maybe. But the beard, I mean, it'll freeze in place and protect him. Less hipsters, which allows him to recharge and refortify, which is really what he needs.
And less flannel, I believe. I'm led to believe. Coming up on this week's show, we're going to get into some big news that's breaking today as we go on the air. Then we're going to discuss the sleeper desktop environment that came out of nowhere.
It's apparently legit, ready to go. We're going to talk about our future plans and some upcoming events. Then getting into some really interesting ways of ripping Google's Play services out of your Android device, but not sacrificing the apps that require those APIs.
And perhaps integrating the whole thing with F-Droid, that open source app store. We'll tell you about that. Then we'll dig into the state of snaps across different distributions.
Then, I'm so excited about this, we'll dig into takeover.sh, a shell script that will wipe and reinstall a running Linux system via SSH. Then we'll tangent off into the Depenguinator, which our own Mr. Alan Jude, I believe, has had a role in this monster that is wiping out Linux systems and replacing them with FreeBSD.
What?
I'll tell you about this scandal later on in the show. Then last but not freaking least at all, and I hope William is able to stick around for this part too, Mr. Wes over here has been playing around with WireGuard, the fast, modern, secure VPN tunnel, which if I recall from our previous coverage, has that fancy asset of the fact that it's built into the Linux kernel to some extent.
There's a module or some kernel component, right? It is a kernel module that will hopefully be upstream soon.
So, we'll talk about that. Also, the coverage it recently got, how Wes' experience went. So that is a hell of a lot of show. I ran out of music. I ran out of music, Wes.
So before we can get into any of that, you know what we've got to do. We've got to say time-appropriate greetings to our virtual log. Hello, Mumble Room.
Hello. Hello.
Hello, everybody. Good to have you here today. I wanted to start with some really up-and-front breaking news, big stuff that I think everybody has heard about at this point, I suspect.
I have no idea what it means for things like Wire and Jitsi and other services, but Amazon has announced Chime.
We used to work like this, and it was easy.
They're in an office.
But then things got more complicated.
The internet, time zones, it's hard.
And we started to work like this.
I guess that's...
But it was obvious that there were some problems.
Over the internet.
Can anyone else hear Susan?
AWS was down, so...
We had to deal with this...
Hello.
And this...
Just one sec here. Let me see if I can find it.
You know, I'm not at my desk right now. Can I call you back in a couple minutes?
And a whole lot of this.
A couple things I wanted to add to that. I think someone else just joined us. Who was that?
But now we have this.
Amazon Chime turns this...
Into this.
Everybody, thanks for taking the time to check in.
It frees us up to be mobile with seamless notifications, synced chats, and frustration-free meetings.
Hello, everyone.
So this is a big play here.
This is like taken on GoToMeeting, it's taken on Skype, it's taken on Office...
I forget what the Office...
What's Microsoft?
Microsoft has like the...
Is it Yammer?
Link.
Link, yes, thank you.
It's taken on all of these.
And obviously running on top of the AWS infrastructure.
It's called Amazon Chime.
And I don't think it's open source, gentlemen.
Which is kind of disappointing in the age of WebRTC.
Yes. Yes, it is.
And there's no Linux client as yet.
What is this?
What year is this, Amazon?
It's an interesting, obvious play for like the corporate enterprise.
Yeah, it definitely is.
We'll see if it takes off.
I don't think it's really taking on like what we do.
No, I don't think so either.
And there's like a...
You know, it seems very...
I don't know how customer...
I have not played with it yet.
But it doesn't seem like quite what we want, what were the problems we're trying to solve.
But I could see it for like, hey, I want to have a conference of these people.
We need to discuss this subject for this length of time.
Yeah.
They run it on their existing infrastructure.
They're going to use like...
They're going to have some of the features that some of the nicer Google Hangout features like
when there's excessive noise, it can maybe automatically mute somebody, has a clear roster.
So I saw other people asking this question, but why didn't Hangouts do this already?
Well, I mean, Hangouts has been kind of doing this, but people also sort of...
It seems like there's been no innovation there.
Yeah, you're right.
And it seems like what people do for business is they back their way into Hangouts.
They kind of make it work for them.
And Hangouts says, you know, they have some apps and stuff like that.
But they definitely haven't put a dent in GoToMeeting like this will.
I don't know.
I'm just...
So they also have that AWS, like you get like a virtual desktop in the cloud product.
Yeah, yeah.
Maybe your startup and just your whole thing.
You're hosted there.
Your desktops are there.
Geez.
You just give people like Chromebooks or...
With some Amazon cloud storage.
Cloud storage.
Fire tablets.
Echoes in every room.
God, dude.
Oh, and of course, Dash buttons.
That way they can order office supplies with a touch of a button.
All automatable with our friend.
And soon arriving via drone.
Wow.
Yeah, they really are doing it all, aren't they?
Huh.
Wait and see.
We will regret this day.
You watch.
We will regret the...
We will regret the Internet Walmart that we have created one day.
But in the meantime, let's get back to more Linux-y things.
Things that are soundly in our wheelhouse.
This is something that passed over me this week.
And it didn't really land on me appropriately.
This is a new Linux desktop environment.
What?
What?
It's for people who like to mess with computers.
This is a new desktop environment inspired by your good friend,
your old buddy, Windows 7.
It was forked from Matei to create something, they say,
better suited for their needs.
Who's they?
Ubuntu Chillin', which is something we've talked about a little bit in the past.
It's an official Chinese language spin of Ubuntu.
It aims to provide a simpler and more enjoyable experience for browsing,
searching, and managing your computer.
Boy, it looks kind of spot on there.
I'm impressed.
I am shocked that they've even made it this far this quickly.
They've really got a Windows 7 look here.
I mean, it really looks like Windows 7.
I remember screenshots of the old UI.
It was much more cartoony.
And this new one, geez, they've really got close here.
So they have plans afoot to ship it as a default desktop in Ubuntu Chillin' 17.04,
due in April.
I wanted to ask Wimpy what he knew about this.
And also specifically, I noted that they said they forked it from Matei.
Is this, Wimpy, to your knowledge, is this a full-on fork of Matei?
Not everything in Matei, no.
They've forked some of the core components, really, for namespacing reasons.
And this is so, if you look at some of the screenshots,
and even if you like, you can use the PPAs on 16.10 and 17.04,
and actually run this stuff up,
you'll see that some of the applications have really had their looks changed radically.
So they need to fork those things,
because we're not going to change Kaja to look exactly like Windows Explorer, for example,
which, if you look at the screenshots, it's a very convincing replica.
So in order to do those big style changes and fork,
they then need to change some of the underlying namespaces.
And it looks like they've gone to quite a bit of effort to make sure that Matei,
and it's called UKUI, this new project, can co-exist.
UKUI.
Ubuntu Kiling user interface, I think it's short for.
Not Chillin'?
Well, Chillin' is the distro, so Ubuntu Chillin' is the distribution, the flavor.
That's not confusing at all.
So Chillin', for those of you that don't know, is spelled how?
K-Y-L-I-N.
Yeah, okay. And Kiling is spelled...
I'm mispronouncing it. I'm mispronouncing Kiling.
So Kiling is actually pronounced Chillin'.
Oh, okay. All right. Well, good.
Because otherwise my mind was going to melt wimpy.
I couldn't handle it.
Too much.
Do you see the steam coming up?
Oh, yes.
He's done. The show's over. Sorry, guys.
We got to go.
All right. So have you had a chance to dig around this project at all?
It doesn't sound like it's...
I did.
Okay.
Yeah, I had a little poke around their GitHub repos last night.
Because until yesterday I hadn't heard about this at all.
I saw the bug turn up in the issue tracker in Ubuntu for packaging requests.
Yesterday morning.
And I sort of did a double take.
Yeah.
When it was like the first line is it's forked from Marte.
I was like, really?
What? Yeah.
This is a third generation fork now because it was Gnome 2, it was Marte.
And now we've got another fork from it.
It's like children.
Yeah, I guess so. Yeah.
And I didn't have time to really look at it until the evening.
But yeah, they've forked, I don't know, maybe a dozen components, something like that.
All the core stuff, things to do with keyboard handling, session management, the settings daemon and then policy kit and the file manager and a few bits like that.
They've obviously got their own super sexy Windows 7-esque theme that sits on top of it all.
Very aero.
Yeah.
And then they've got a couple of new components.
So they've changed the panel a bit and they've used a new panel applet to do the indicator integration, which I'm going to take a closer look at because that looks quite tidy.
It really does.
And that could be reused in Ubuntu Marte, for example.
So I want to have a closer look at that.
And they've also taken so there's mint menu, which I forked as Marte menu and they forked again as UK UI menu.
But they've absolutely stripped it back to like the bare essentials.
Oh, really?
And yeah, and that looks quite interesting as well because we've obviously got Brisk now, which has just entered the scene for Marte.
And this is another menu that is more efficient than Marte menu and mint menu and has search capabilities, but some of the traditional categorization.
So there's a couple of interesting things that have come out of this that we'll have to take a closer look at.
Cool.
Earlier today.
Yeah.
So earlier today I reached out to that team and basically said, you know, come and introduce yourselves to the Marte developers.
We'd certainly be interested in talking to you and also to see if we can maybe reduce the forking effort.
You know, maybe there are things we can do in Marte to accommodate what they need to do so they don't have to fork as much stuff.
And that way we get more developers looking at the same code rather than independent streams.
So we'll see if anything comes of that.
We'll just have to have to wait and see.
But I hope so.
What a random development.
This is totally on my radar.
How the open source kind of crosses borders here and brings diverse communities together.
Yeah, right. Because this has been this is a Chinese, primarily Chinese development.
This was this was random to me until I spoke to one of the guys I work with and he explained some of the history and said that they'd been talking.
The Chilean team had been talking about creating a Windows-esque environment for some time.
And it sounds as though they did it earlier in the year or later last year because I believe this was like a preview session you could log into on 1610.
And now they're making a push to make it the default for 1704.
And it seems to me that I would guess that the idea here is you're trying to maybe reach out to potential Windows 7 and 10 pirates and say,
here's a legitimate operating system you could install.
It functions much like you would expect.
I think also there's a reluctance probably to continue to follow Windows 10 and the future versions of Windows outside of Western countries.
So this seems like it could perfectly fill that niche.
Yeah.
Or actually not even a niche.
It's not a niche at all.
It's the opposite of a niche.
What I was told is that in China, people want to use Windows.
That's what they're familiar with.
And some of the computers that are sold with Ubuntu Chilin pre-installed, there are reports that people are just taking their hooky copy of Windows and wiping over it and putting Windows back on it.
I've heard that too.
Because Unity is a bit of a departure from the way Windows 7 looks and operates.
Right.
And you may remember relocating the Unity 7 launcher to the bottom of the screen.
That actually came from the Chilin project.
That was their contribution to try and make Unity more Windows-like.
And so they've just taken it further now.
They're going for a far more Windows look and feel type desktop arrangement.
It sounds like if your user base is hooked on the Windows UI sauce, you've got to make more sauce.
So you're saying, no, I'll be using this.
Yeah.
I think it could be a double-edged sword though, because if it looks like something that it isn't, if it looks like Windows, there's the expectation it will work like Windows.
And then the frustrations will set in when that isn't the case.
Perhaps.
I think it has to be managed quite carefully, those expectations.
Do you suppose they're rolling the dice that if you give them a web browser and a couple of decent things to do locally, that's going to meet the majority of the needs?
Yeah, I'd be guessing.
But until I get to speak to them, I can't really say what their thoughts are.
But yeah, it looks like they're trying to appease those people that want something that works like Windows by giving them something far closer to that.
Did you get a sense at all of what version of Mete they forked from?
Yeah, when I wrote in the issue tracker earlier, it wasn't clear to me how they'd forked, because the way they forked this is a little bit unusual.
And in fact, ironically, it's the same unusual way that Mete was forked originally way, way back when that was forked from Gnome 2.
So I think what they've done is they've actually taken what are called the Debian source packages, either from the Ubuntu archive or from one of my PPAs.
And I was concerned that they'd actually forked the GTK2 builds, but I had a closer look earlier and they have actually forked from GTK3.
Oh good, that was where I was going.
But the problem here is that they've forked from the Debian source packages and then committed those to Git.
So there's no Git history, so we can't see precisely where they've branched from our stuff, which means that if we want to cherry pick bits and pieces from their project to ours or vice versa, that then is a bit more complicated.
So that's a bit unfortunate, but that ship sailed now, so we just have to get over that.
Well, I'll have a link in the show notes if you are listening and want to check it out.
I think you can also download it, it looks like, because a Joey did over at OMG Ubuntu downloaded it.
Yeah, there's an ISO image, or if you've got an Ubuntu, I think it's 16.10 or 17.04, maybe both, there's a PPA as well.
That might even be a better way to go.
Quick question guys, I'm assuming that there's an English build of Qilin, right, and let's say if you were to try to give it to a stereotypical Windows 7 user, they would probably pretty much easily be able to adapt to it?
Yeah.
What are some explanations as to what's going on?
I think that's kind of the idea, because if you look at the article, I'll have a link in the show notes, it's all in English.
The only caution there is that Ubuntu Qilin itself is default Chinese language, so if you download Ubuntu Qilin, it's Chinese until you tell it you want a different language.
So just be aware of that, you just need to be able to spot your language and go with it.
Do you think we'd be able to get into the source code for the Iceland to change the default language to English?
Or if you add it as a PPA, just add it as a PPA to your existing list.
That then picks up the local and regional settings you've already configured.
I saw one of the Linux YouTubers had actually done an install of the PPA over the top of Marte, so I'll ping you a link for that a little bit later, because he's sort of given it a run through.
Very good.
If I remember, I will drop a link in the show notes.
So that's interesting, and if you hear anything more about it, let us know.
Oh, will do.
Wimpy's now on the beat, Wes, you like that?
Oh, yes I do.
Thank you, Wimpy.
All right, so Wes, you found a series of links that could be fundamentally a game changer for Android users in the audience.
You can effectively use Android without Google Play services.
Now don't get too excited, this is kind of like a multi-part solution, so buckle up, we're not quite there yet.
But imagine a world in where this has sort of been smoothed out, and it's really kind of simple.
So I personally have experimented a while trying to use Android without Google Play services,
and while this article sort of points out the security reasons why you wouldn't want to use Google Play,
I walked away realizing that I got like a day and a half to two day battery life improvement when I didn't use Google Play services on the Nexus phone.
So that alone almost made me not want to.
And custom ROMs like LineageOS proposed by default that Google Play services free version be an optimal installation
and then make Google Play services like a secondary option you choose.
So that's sort of where Momentum is at right now.
A major drawback when you don't have Google Play services installed is you cannot use any of the official Google applications
like the Google Play app to install more apps.
But of course, F-Droid is out there, it's not really full of everything you might want,
but it does have a lot of good apps like K9 Mail, Firefox, Nextcloud, TTRSS Reader, and lots of other ones.
But check this out, Wes, check this out.
The author of this post was experimenting around and came across a project, an open source project called G Play Web.
G Play Web allows you to easily download applications from Google Play with a simple response of WebEye.
It uses G Play CI, an unofficial library to download applications from Google Play.
I think it's like using like Docker in the background and all kinds of stuff.
I didn't read that far into it because that wasn't the part that I cared about.
This is the part I cared about.
He says, I forked this project on GitHub to use the latest version of G Play CLI and F-Droid server.
So now I can easily install, oh yeah, he says he published it as a Docker.
Okay, yeah, so he does have it out there as a Docker.
So now with this kind of tool, you have a web interface to easily download applications from Google Play
and then an optional integration into the F-Droid app which creates custom F-Droid repositories
to install and update more applications as you need them.
So suddenly, through F-Droid, you can install Google Play apps.
Yeah, because you're running G Play CLI on a Docker image.
Maybe up on a droplet or something in Docker.
Sure, and then it's creating this private repository for you.
So that solves the Play Store without having Google Play.
You should note that it only works because the G Play web is backed by G Play CLI.
That only supports free, gratis applications.
So if you have some apps that you paid for that you need, maybe it won't work.
Yeah, and it's not a complete solution for a couple of other huge reasons too
because it doesn't provide the Play API, which a ton of these applications, once you install them,
expect, like Google's own applications.
So when I read that, I was like, man, this is great because it makes it available for us to get a lot more software
from the Play Store, and a lot of the apps I use from the Play Store are honestly free.
And maybe they have like an in-app purchase or something.
So that was like, okay, all right, well this is cool.
It's not quite there yet.
You could do it yourself if you're up for it, but you only get the apps angle.
You still need the API angle.
Ho hum.
And then that's when I saw Wes's link for Micro G,
a free as in freedom re-implementation of Google's proprietary Android user space apps and libraries.
Now we're starting to get closer to replacing the Play API.
Have no illusion, it's not a complete replacement.
Let me break this down for you.
Most Micro G components are far from complete,
so even the ones it does support are far from complete.
The users are amazed by the results, though, they say.
Free software users got to extend application support.
Privacy-carrying users are able to reduce or monitor data that's sent to Google.
Because you have control over this stuff, you could put interesting monitoring in the middle of it.
That's fascinating.
This could be great for security research.
And they say also older phone users are reporting dramatic better battery life.
Oh, wow.
Micro G is not only used on real devices, but also replaces Google tools in test emulators.
Yeah, that's interesting.
Very interesting.
So right now it offers GMS core.
It's a library app providing the functionality required to run apps that use the Google Play services
or Google Maps API version 2.
Wow.
Wow.
Full stop wow right there.
They also have the service framework proxy.
It's a smaller help utility to allow apps developed for Google Cloud device messaging
to use the compatible Google Cloud messaging service included with GMS core.
So they're taking care of the messaging angle, too.
Huge, huge.
Unified network location provider is a library that provides Wi-Fi and cell tower-based geolocation
to applications that use Google's network location provider.
Nice.
I'm just blown away.
Maps API is a system library providing the same functionality as now depreciated Google Maps API 1.
And Store is a front-end application providing access to Google Play Store to download and update applications,
which development is in the early stage and there's no usable application yet.
But they're working on it.
Now you combine the F-Droid combo thing which you're using the G Play CLI to download.
Actually get the apps.
And F-Droid to manage them on your phone and update them and also install great open source apps.
Then Micro G to replace the Google Play API stuff and the location stuff.
This is a huge development I think.
Two separate or three separate projects, right?
Three separate or four separate projects?
A lot of separate projects here.
If you look at the individual like G Play CLI stuff and G Play Web.
A lot of moving pieces.
It's interesting.
I think there's still also there's obviously problems with the Android ROM.
Anytime you're getting away from Google's upstream then do you lose the benefits of the monthly patches if you do have those kinds of things?
Yeah.
There's a lot of good questions.
But it also seems like there's a lot of opportunities to monitor applications and how they use the API and how it behaves and what kind of information it's exposing and sending.
Even if it's not you and I who are using this.
It seems like there is a lot of useful things on the edges for researchers or developers.
But it also makes it feel like maybe something like LineageOS with no Google Play services by default a year down the road could be a really feasible option for those of us who want a day more of battery life and don't want Google tracking us constantly.
But we'd need Android for work or you know like Popeye's come on and said yeah I have to have Android because my bank only makes an Android app and that's how I have to interact with them.
There's a lot of people that have that story.
This would be amazing.
Super excited about this.
This is like the big discovery of the week for me is that we really could be getting there and I didn't think that we would be able to do this.
It felt like unachievable.
Maybe it will always be a race against Google but wow Wes.
Well I think there's another component here that we need if we're going to have going to have Android playing a little bit better.
Was that.
Well what do we do about the carrier.
You know that's a good point.
That's a damn good point.
You got to go to Ting make the whole package Linux dot Ting dot com.
Not like any other carrier.
If you if you if you want to play that in that game sure you go over there you sign up for a duopoly.
You can play that.
Here's the problem.
Once you even start getting a plan you're all you're already is part of the system is too late.
A plan is never going to work for you because there's going to be months where you didn't need all those minutes.
There's going to be months where you needed more minutes or megabytes or messages.
I know for me I've never ever ever once in the years in years sent more than 10 text messages a month because I do everything over every other messaging platform that uses data.
I don't I do not use text messages except for very rare alerts or like authorizing places to fly with my drone.
Like that's what I use text messages for.
So this kind of stuff is this is where they get you in Ting is different thing is you only pay for what you use.
It's six dollars for the line and then your usage on top of that.
Now imagine a scenario where you have family members you want to have multiple accounts or you are a small business and you want to have multiple lines.
Six dollars for each line.
No other carrier can match that.
That is an unbeatable price and you only pay for what you use.
So if you have Wi-Fi in the house and in your office why would you pay for data when you're not using it.
It doesn't make any sense.
They've tricked you into it and Ting is doing it differently and they match that with incredible customer service.
You speak to a real human being.
They've got a great dashboard and apps to manage your account.
You can turn devices off.
You can set limits and alerts.
It's so nice.
I really appreciate that.
And then I think the favorite thing for Ting when I'm traveling.
My favorite thing when I'm on the road is the fact that they have CDMA and GSM services.
And I bring one of each because it's six dollars and I need to be connected.
It's part of my business.
I might have business papers I've got to take care of.
So I need that.
Six dollars a month for a CDMA line and a GSM line.
That's my no brainer.
You want to call in that hamburger order.
How are you going to do it?
How am I going to listen into how you and Nor are screwing up the show if I don't have connectivity when I'm on the road.
I love you guys.
Also I think Ting is pretty cool with this whole Ring Plus situation.
There's a lot of Ring Plus shenanigans going down.
Things are falling apart and Ting has swept in and they're really hooking people up.
And you can read about it on their blog.
It just shows what a great company they are.
Check it out.
Go to linux.ting.com.
And also while you're there, even if you're not ready to sign up yet, why not read the blog.
Lots of good stuff there for cord cutters too.
Linux.ting.com.
And thanks to Ting for sponsoring the unplugged program.
Thank you very, very much.
All right.
It's that time of the year when we've got big events coming up.
Scale is very soon.
Noah will be down at scale.
Wow.
So soon.
That's awesome.
And I think we'll do last live from there.
He'll do last live from there.
I'll be back here at the studio.
And then shortly after that, Linux Fest Northwest 2017 is going on.
Linux Fest is the show that's always the kind of the one we go all in at every year because it's here in our backyard.
We love the folks that run it.
It's in Bellingham, Washington, May 6 and the 7th.
And the thread was started by Sidley09.
The subreddit says, is last going to go to Linux Fest Northwest?
Yes.
Last will be.
Last will be there for two days.
We'll be live both two days like we always are.
Nice.
We'll have a good crew there.
You're going to make it, right, Wes?
Oh, yeah.
I love it.
And we always have a good time.
It's an awesome time.
I'm going to bring Lady Joups up there.
Nice.
I'll have the lady up there.
We'll have Noah in town.
Angela will be there to say hi to everybody.
We'll probably have to swag.
There's always a ton of awesome booths.
We'll do a live show on Sunday from there of the Linux action show.
I've always loved that people come by and watch the show live.
That's the real live experience.
It's a real treat.
We basically only do it once a year in front of a group, so it's a good place to catch it.
And plus, the other thing that's really great about it, if you're going to make the trip out,
Washington is remarkably beautiful.
The Pacific Northwest in general is very beautiful.
And Bellingham is very eclectic.
It's very Washington in a lot of different ways.
And so if you're going to come out here and you don't necessarily want to be in the crazy downtown Seattle area,
but you still want to get a good taste of Washington, Bellingham is a very unique way to do it.
Would you agree?
Oh, absolutely.
Yeah.
So it's a fun town.
It's worth traveling to.
And I've got to be honest, it probably wouldn't be on your destination list otherwise,
and you would be missing out.
So check it out.
Linuxfestnorthwest.org if you're going to be there.
And I will link to the thread in the subreddit if you guys want to throw in.
Oh, and he was asking about where to stay.
If you go to linuxfest.org, slash 2017, slash travel, they have an area map with the hotels.
Book soon because they do fill up.
And for the JB crew, we'll be getting that all figured out here in the next couple of weeks too.
So, yes, there's three really, none very close to Linuxfest.
And don't bring your RV because that's my gig.
Don't do that.
He's got tips, everyone.
Anybody in the Bomba Room making plans to come out to Linuxfest Northwest?
I would like to try and make it this year.
That would be awesome.
Yeah, I'm really hoping.
Wimpy, that's one of the reasons I'm most excited about this year is I'm hoping you're making it.
I think you would really like it.
And I think anybody that hasn't gone to an event like this,
even if you've gone to like corporate events, this is very unique.
It's very welcoming.
It's nearly 2,000 people, but it's at a large college campus, so there's space for everybody.
It's not like it's awkward.
It can get a little busy in the main event room, but I've seen a lot worse too.
And they have on-location barbecuing that they do usually,
but there's also tons of really great food nearby.
And it's a great feel because the whole event is put on by the Bellingham Linux Users Group.
So it's not like it's some big commercial interest.
It's not like a company that they make profit from events.
It is the Bellingham Linux Users Group who has been working with the Bellingham Technical College now for years,
working together to host this event,
and it has gotten large enough that it brings in large companies like Microsoft and Red Hat
and sometimes Canonical and Hardware Management, lots of big companies, which you see in our coverage.
But it still retains the roots of there's a lot of sessions to go to that are really well-run,
that are hosted by people that are authoritative on the topics.
Oh yeah, the sessions are great.
And the whole thing has this very chill, relaxed feel to it because the Bellingham guys are just pretty chill guys.
People are just hanging out, talking about Linux, sharing stories.
So you get this really good mix of high-end vendors and speakers.
Also, this has been a long-running event.
So you get this high-end mix that you normally would only get at California events or a New York event,
really large events, but you get it here in a field that is more laid back and more community-driven.
So they really nail it.
Plus, Bellingham's got a lot of good breweries, so if that's your angle.
Yeah, they got a lot of good, a lot of things.
They got a lot of good, a lot of things.
That's what I'll just say to that. They really do.
So yeah, check it out at Linux Fest.
I don't have to go on and on about it, but the question has been raised and the answer is yes, we will be there.
We will be there live.
They should do what Katie Easton and get you to narrate one of their ads.
Yeah, they should have ads.
They also have the Linux Game Den, the Robotics Lab, the Arduino Hacking Lab,
and every now and then, depending on the brewers, they also have a Linux Beer Brewery Lab.
It kind of comes and goes depending on their schedule, but they have an automated brewing process running on Linux.
And if they're there again this year, I am definitely getting another interview.
And I'm going to ask where the hell their brewery is at so I can go there.
Because I run into them every other year.
In fact, one year, they had a booth right next to our booth with the beer.
And I don't know if they were supposed to be handing out beer, but I mean, somebody had beer
and somebody was passing that beer on to me in little sippy cups over and over and over again while I was on the air.
Just to help the broadcast.
And it is delicious. What are you going to do? It's delicious.
Well, I mean, if it's brewed by Linux.
It's super local, right? It's home batch, small batch, homegrown.
So you can check out their travel page too, which I will link.
Wes, I'm going to drop this in the IRC.
Will you link the travel page specifically in the show nizzles?
So that way folks listening that think they might make it can find it.
All right. Then one other thing, just super quick from the subreddit.
It looks like that whole Munich is dumping Linux and switching back to Windows.
Will they? Won't they?
Well, now we're back on the they won't.
This is unbelievable. It's the soap opera over here.
And I got to just put a big disclaimer.
We prerecorded the episode of Linux Action Show where we talk about this news story.
And this hadn't come out yet.
And what this is, is not necessarily the whole thing is off.
But that the motion to discuss it has moved.
And so it's not necessarily on like they thought it was.
So anyways, the correction is in the subreddit.
And I wanted to make a big errata correction now.
Because in the future, you will hear an episode of Linux Action Show where we talk about this situation.
And we talk about it without this context.
Go figure. Go figure.
That never happens.
Nope. Never.
The whole Munich thing is...
Hopefully by the time that airs, they've flopped back the other way.
And then you'll be right.
You know, I would just like them to switch.
Just get it over with.
Whatever you're going to do, do it.
Just cut it off.
Just go to Windows. Go spend a ton of money.
Go be wrong for a few years so we can stop talking about it.
I'm so sick of it.
But yeah, part of the reason the confusion here is because the news comes out and it's not in English.
So there's a lot of translation happening.
And the translation is sometimes wrong.
And so thankfully, I think it was Clause4040 in the subreddit who was able to do some translation for us.
And also to ChemBrotron who was following this closely and did some source linking for us.
And interestingly, one of the things he linked has now been pulled down.
But I really appreciate it.
And they got 98 upvotes on the subreddit.
So I wanted to make sure, yes, we saw it.
Hot news.
That's right. Hot news.
Okay.
So before we move into a few more things,
I want to mention really quickly that there's been a big update on XFCE.
A new task manager, which sounds actually pretty dope,
including one of the things that's really nice is as you click on Windows on your desktop,
it'll automatically highlight that process in the task manager.
And it just looks really nice too.
That's nice.
Yeah. They're porting task manager to GTK3 and dropping support for GTK2.
They say so far the GTK3 branch already works and has a feature parity with master.
They're also working on the new notify D feature for XFCE.
Thunar 1.6.11, which is a maintenance release but does bring some important fixes.
So Thunar is getting a new feature too with regards to copy.
So I guess their point is, hey, XFCE, we're not dead yet.
Look at this great stuff coming out.
They're going to work on some panel stuff soon.
So there you go, Wes.
It's your next desktop.
I wanted to give them a quick mention.
I feel like nobody cares.
But it's still a very good minimal desktop.
Do I need to stop covering it?
Nobody cares.
Look at this. Nobody cares.
Yeah.
Nobody cares.
I mean, their last update was like in 2015.
I just checked their website earlier.
I can't give up on it.
It was like one of my first loves.
Yeah. I used it for a long time as well.
I can't give up on it.
But I'm not getting any reaction from the chat room, from the mumble room.
I mean, is it like a good anti-soulless coverage for the show just to wait it out that way?
No, man.
See, use XFCE.
We're telling you to just use it.
It's good. It's good.
It's good.
Yeah, okay.
Does LXDE do the same thing pretty much?
It's a lightweight desktop?
Oh, here we go.
I always get this.
Of course.
I'm not even a believer.
I think lightweight desktops are bogus to begin with.
I think the entire thing is bogus.
How do you like that?
It's a bogus idea.
It's a concept people use to trick themselves into thinking they're hacking their Linux box to be more efficient.
It's crap.
But I compiled it from source, Chris.
It's junk.
I agree with you because then I always hear like, oh, yeah, plasmas bloated.
This is bloated.
Like, no, that's not how this works.
It's garbage.
It's garbage.
That's all.
All right, Monkeycom, you want to jump in.
Go ahead.
I haven't used XFCE in so long.
I mean, it was good back in the day, but I want something like KDE or Mate which I can add modern things to and it's just not XFCE.
I tell you what.
I tell you what.
I understand that you guys out there that are using it, you got your reasons.
I appreciate that.
But I'm looking at this and I'm saying our chat room is pretty much pronouncing it dead.
Our mumble room is – I just – I don't want to believe it.
They are the definitive source.
I refuse.
I refuse to accept it.
I will continue to fight for XFCE for you out there, listener, because I want to be your representation.
I will fight for you.
I will fight for you.
A couple of years ago, we had this conversation and I really felt like XFCE was on the way out.
But seeing the amount of effort Simon's putting into projects recently, I think that he's turning the tide and it's got a bright future ahead of it.
Thank you.
See Wimpy and me, we'll be here.
We will – thank you.
Thank you.
I agree.
It was a good blog post.
And that does add a different spin on it, right?
Like when you don't see updates, when you don't hear about it, that just makes it feel stagnant to you and that kind of goes a long way.
Plus you know what the best thing would be?
The best thing would be that all of a sudden XFCE starts getting updated all the time and then all of these jerks that say they use XFCE because it never gets updated can STF you.
So I think I am all for it.
I want to talk about something that I've seen discussed in our subreddit a few times.
And Wimpy, feel free to jump in any time you know something else or have something else to add.
I find this to be a fascinating write-up over on – Wimpy, maybe you could tell me the gentleman's name that's been working on packaging up Snap for all the –
Zygmunt.
Oh, okay.
Zygmunt.
Zygmunt, yeah.
This is the state of SnapD support across distros.
And he says, first of all, let me preface that SnapD development moves fast. There's a lot of things landing all the time. Many of them are non-trivial, introducing big changes.
A few of those include me in the loop, which significantly cuts out the amount of time I have left to work on.
Ultimately, the whole problem is the problem of having inefficient time to work on everything.
But let's not get ahead of ourselves.
So he says – he wants to go back. He says, during the SnapD sprint, I started working on distribution packages for Fedora, OpenSUSE, Arch, Gentoo and others.
After a few quick experiments, I was positive that it was doable and probably not that hard.
Boy, was I wrong.
Packaging SnapD is both straightforward and hard.
As a Go project, SnapD builds to a small set of executables and a few supporting system to units.
SnapD has a small brother, SnapConfine, that is written in C and builds anywhere with auto tools.
So far, so good, right? Well, no.
Fedora 25 requires any service started by SystemD to be confined by SELinux.
Since SnapD itself is not confined, even on Ubuntu, this means that we would build a nice package, but you'd have to disable SELinux, which is not the experience they want their users to have, so the package was never officially released.
Now, of course, there is some talk about creating an SELinux policy for it.
Each Linux distribution has its own set of quirks and nuances.
Software skew aside, the policy is what really differs Debian from Ubuntu, Fedora, OpenSUSE or Gentoo.
In one distribution, doing something is frowned upon, while in another, it's perfectly fine or even encouraged.
In fact, he does kind of give us an example about that down here, especially about like where the Snap packages would live.
First, he wanted to create SlashSnap, but the Fedora Engineering Steering Committee said, no, you can't use SlashSnap.
So then after that, he said, okay, that's fine, that's their choice, so I'll move it to var lib SnapD SlashSnap.
But of course, other distributions don't really care.
Then there's the whole executable bit.
SnapD relies on a small c executable snap confined that is setuid root.
It needs to be root to perform file system namespace manipulation necessary for the construction of the snap execution environment.
Now, that's all fine and good except for Fedora highly and strongly discourages setuid root executables.
They'll allow it but is not recommended and they'll give you a course talking to.
So Debian, though, however, exact opposite.
So Fedora wants you to use extended attributes and these kinds of things.
But Debian, no extended attributes for you.
It must be a setuid.
OpenSUSE, to the best of his knowledge, requires that you first get a security review and then get your package
and the exact file name added to a special package called permissions.
For OpenSUSE, the plus S bit can apparently be used or this plus setuid bit sidestepping the permission package,
but it relies on a documented hack that just fools the packaging review tools.
He goes on to basically summarize, snap D is easily to build from source and run in almost any environment
with system D and a reason of kernel.
You really should be able to get that going in just a few minutes.
However, packaging that for wider use is a rat's hole of issues and it's not done.
Snappy is a free software project.
If you'd like to help him out, please reach out to him.
He's got links in this.
There's also the Snappy RC channel and on Rocket Chat.
He says, one day I'll write a book about packaging software for Linux distributions.
I'll start the book with the phrase, this book is already out of date.
That's a very good summary.
It's interesting how, I mean, Snappy is almost in a second package manager in a sense.
And so it's, I can see where it kind of breaks some of the abstractions or the, you know, be a lot easier like,
hey, I just want this game that runs, doesn't need any special permissions.
Can I put it in your repository?
Compile's done.
But when you suddenly need special permissions, when you're managing other apps,
when you're building your own project, it gets more complicated.
Wimby, do you, you kind of fly close to the sun on this one.
Do you have any things to share from this perspective?
Yeah, I read Zygmunt's post last night and there's a couple of things that stand out.
The most interesting to me is when, you know, Linux vendors have been trying to bring,
you know, external people from outside of the Linux world to bring their software to Linux.
If you have to start explaining this stuff to them, that's why their software isn't on Linux.
I agree.
Yep.
And it is ironic that Snap, which is designed to solve these problems,
is facing these very same problems in order to solve those problems.
Is the real problem just a lack of strong distro buy-off?
Like if there was passion in the Fedora community, would there maybe?
I think somewhere in Zygmunt's post that he said, you know,
the best thing you can have when you're working on this stuff is to actually have somebody
who's got commit rights to the packaging system for the distro who's interested to help you.
You know, if you've got that kind of collaboration, then it makes it easier because they know
what some of these nuances are with, you know, the distro that they work on
and what some of the requirements are that maybe somebody coming to it from the outside might not appreciate.
And I think that's true.
You know, my experience of working in Arch Linux and Debian and Ubuntu is that knowing somebody
that can help you is the best way to get stuff done to orientate yourself.
I agree.
And I wonder if that doesn't mean that Flatpak might have some home turf advantage in that regard.
Well, who can say?
Maybe.
I mean, obviously that's being sort of led by Fedora.
I think it's a Fedora developer primarily that's working on that.
So, yes, they're going to target their things.
But, you know, the different distributions have chosen different security models and, you know, different policies.
They all grew up at slightly different times and they would have done things in accordance to, you know,
how things were, you know, at that time to some extent and those policies would have shifted over time.
So there are subtle differences, but those subtleties are challenging when you're working at such a low level.
You know where it leaves me wimpy is it leaves me still basically just relying on the AUR.
I've seriously been considering switching to Neon LTS even or potentially we'll see another distribution that I feel like I don't want to list them all again.
But I'm considering in both cases an LTS distribution based on Ubuntu and I just – I think I find myself twice to three times a week
when prepping for the shows or something extremely grateful that I'm able to pull down an application from the AUR and try it really quick.
And I don't know – that's what I would like from a universal packaging standard is that essentially all of the world's best open source
is available to me in a standard installable method.
And I don't feel like we're any closer at all anymore.
We've been watching this now for a while and I feel like both sides have made really good gains but –
Yeah, there has been progress.
We have some new frameworks and things that –
Need killer applications, that's what we need.
We need killer apps.
We need killer apps.
We need really killer – we need like a bunch of them.
We need a bunch of really good ones.
I agree.
So looking at Flatpak applications, LibreOffice, Spotify, Monodevelop, Telegram, Skype, Blender, Gnome, Twitch, Gnome MPV.
I mean there's some good ones on here, Corebird.
It's kind of the standard list right now.
And I should play around with the Telegram and Skype ones and see how frequently they're updated.
Yes, those ones stand out to me as –
And Spotify.
At least especially on the Snap side it seems like the most – like if I can install –
Yeah.
Gnome MPV from like a copper or an easy enough other repo.
Yeah.
I really appreciate when I load up a new Ubuntu rig, I really appreciate the Telegram Snap.
Yes.
That is really nice.
I got to play around more with the Flatpak.
Yeah, go ahead.
So I was going to say last week I think I basically went through all of the applications that I have installed and found –
I did a gap analysis to see which ones were available as snaps.
And I've installed the snaps of all of the things where it's available and purged the apt equivalents off my system.
So how's that going?
Yes, it's going fine actually.
I was expecting to run into lots of edge cases and things like that.
But I mean there's a couple of little niggles with app indicators that we're working on fixing.
But by and large it's working very well.
Do all the mounted file systems ever bother you?
That's something I'm looking at actually.
Yeah, that's something I'm going to look at, yeah.
Huh.
So I wonder how they got a Flatpak of Skype.
I wonder how they got that.
They pulled down the deb and wrap it and –
It's just the Skype alpha.
So somebody is volunteering to manually re-Flatpak that up.
I don't think Microsoft Flatpak –
It's Alex Larson, the Flatpak developer, is doing that.
Ah, that's a good way to get people using it I suppose.
I'm going to mess around with all of it.
But this whole universal packaging thing, you know, I'm losing my momentum.
Although I think it's still going to happen.
Gosh, get universal already.
Get universal already.
That's all I want.
Just get it universal already.
All right, well we've got a lot more to talk about.
In fact, we should probably keep moving because Mr. Wessier is going to be text snapping soon.
I want to mention Linux Academy, linuxacademy.com slash unplugged.
Go there and sign up for a free seven-day trial and support the show
and get access to a platform to learn more about Linux, video courses, labs, instructor mentoring,
course schedulers, learning paths, practice exams and quizzes,
and note cards forked by the community which is stacked by Jupiter broadcasting members.
But this is big because Linux Academy is always growing, adding new content, making the old stuff even better.
And they just announced a big partnership with Chef to provide high quality in-depth training.
You can find out more at linuxacademy.com slash cheftraining
and get started on the basic Chef fluency courses.
Hallelujah.
You can get the basic Chef fluency badge.
They have public profiles and you also get all ready to take certifications too.
We got an email in the Linux Action Show the other day about courses to get into.
This would be a good one.
Find out linuxacademy.com slash cheftraining.
But do me a favor.
Start at linuxacademy.com slash unplugged.
That way we get the credit for your visit.
You can sign up for that free seven-day trial and check it all out.
And Linux Academy is out on the street if you want to say hi.
They're at Developer Week, booth 229.
Stop by, shake some hands and say hello.
Look at that nice looking guy.
I think I see some swag.
I think I see swag there, Wes.
See that's maybe a woman.
I know.
And look at the size of that penguin.
Look at the size of that sucker.
Check them out.
That's at linuxacademy.com.
Not.com, linuxacademy.com on Twitter if you want to follow their feed.
Or go say hi at Developer Week.
Like I said, it was booth 229.
And do me a favor and support the show.
Visit linuxacademy.com slash unplugged.
And a big thank you to Linux Academy for sponsoring the Unplugged program.
So this is a hell of a script.
Takeover.sh, a script to completely take over a running Linux system remotely,
allowing you to log in in a memory rescue environment.
I don't know why I thought that said recurse.
Unmount the original root file system and do anything you want all without rebooting,
because Linux.
You can replace it one distro with another without ever having to physically touch a console.
Badass.
Pretty sweet.
Pretty badass.
That's really cool.
And you see the warning, warning, warning, warning.
This is experimental.
Yeah.
Definitely try it out in a VM.
You know, the first thing I think of is a VPS.
Yes, right?
You just spin it up, throw it away.
It is neat.
It's not a bad read through if you just want to read over the script.
In the show notes, I linked a couple other ones that I find a little more readable,
but do the same thing that kind of walk you through to how to turn a Debian into an Arch.
I bet it's fascinating just to learn how it's doing it.
Yes.
And it kind of teaches you a little bit about like what happens in the initramfs.
How does this kind of work?
So this one's interesting because he makes his own little fake init and kills init.
You can then kill, unmount the root file system,
kill all the old processes that you couldn't kill from your old session.
Right.
I've seen other versions and there's some here,
like one great stack exchange discussion about,
hey, can I like reformat or like resize my root partition from...
So you can also say make a little Ubuntu user land with systemd
and then put that in memory and pivot everything with your running kernel there.
Wow.
Yeah.
That's some cool stuff.
And then on the other end of the spectrum,
it turns out way back, way back in the day,
Colin Percival created something called the Depenguinator.
It's a script, and this is his words,
for remotely upgrading a Linux system to FreeBSD.
They never stopped those guys?
No, they just can't help themselves.
It's great.
It's so great.
It unfortunately didn't take long for changes in the layout of the FreeBSD releases
to make the Depenguination script stop working.
So for the past three years, he's been receiving emails, and he was motivated.
He wanted the Depenguinator to work with recent FreeBSD releases.
He got it all set up.
But with all things FreeBSD, they slipped behind,
and it only worked on Ubuntu 7.10 for FreeBSD 7.0.
That's pretty useful.
Yeah, super useful.
You just downgrade from 16 to 7, then switch.
You're fine.
It's about as modern as that Linux compatibility layer.
So we all thought, okay, that was cute, but there's just not enough interest to keep this alive.
And so Colin Percival sort of moved on, let it fade away.
Had to go make tar snap.
You're a busy guy.
Tar snap needed to be created, and there was really just not a big interest.
Nobody saw it fit to spend their precious time creating Depenguinator 3.0
until Alan Jude came along.
Alan Jude forks Depenguinator and creates version 3.0 to override a remote Linux server with FreeBSD.
It's new. It's fresh. It's really simple.
So you swap off. You turn off your swap.
You DD the swap partition with MFSBSD.
You then go to your grub menu.
You fiddle with it to boot from the swap partition.
You reboot the system from inside MFSBSD.
You can then SSH into it and reformat everything to FreeBSD.
Do I basically have the process?
Yes, you do.
Damn it, Alan Jude.
And then he says, warning, still contains sharp edges, is not really meant for automated use.
It's very likely that using this tool without understanding,
it will leave your server in an unbootable state.
That is pretty important if you're working with bare metal,
you don't have a nice HTML5 console, that kind of thing.
Depenguinator.
So our challenge to you, audience, let's get the reverse.
Let's say I got a FreeBSD droplet.
I'm kind of sick of it. I want the latest Ubuntu.
Right.
Let's get that going.
That would be good.
There's not as much of a market need for that because there's not as many VPSs running FreeBSD,
but we got to fix the ones that are.
We have to upgrade them to Linux.
You know what we should do?
Guys, guys, make it, switch it to Arch, right?
That's great.
Or Gentoo.
Whichever you prefer. Your choice.
So let's make, they got Depenguinator, what should we call it?
Repenguinator?
No, that's not as good.
Something with a GPL.
That will be good.
Something with Richard Stallman, something with a GPL.
My little room, you guys have any ideas?
Stallman strikes back.
What would you call a script that converts a FreeBSD install,
wipes it out, and switches it over to Linux?
So happy hacking.
The de-demonizer?
De-demonizer is not bad.
It's not bad.
The exorcism.
Beastie Be Gone.
There we go.
I like that.
Beastie Be Gone or Exorcist.
Yeah, Beastie Be Gone.
I think it's got to be Beastie Be Gone.
Yeah, they're having a bad week.
Wasn't there also a new Beehive project announced
that has nothing to do with Beehive Virtualizer?
Yeah, different spelling, but that's true.
Name collisions there.
And there's a snap for that as well.
Oh, God.
It's probably going to have more users than Beehive.
I'm sorry.
Beehive is technically very cool, and the guys that work on it,
I respect them a lot.
I've talked to them, but that's funny,
because that's going to be a thing.
So, yeah.
Yeah.
De-demonizer or something with exorcism would be good.
And I say Archer Gentoo would be preferred.
If you can make it, we'll run it next week.
You know, you could even put Debian Stable.
It'd still be more up-to-date and modern than FreeBSD.
Oh!
I'm just trolling at this point.
Just trolling.
So, you heard us mention at DigitalOcean.com,
go over there and create a droplet.
This is a great way to get set up with their awesome,
powerful infrastructure.
Use our promo code DOUNPLUGGED.
It's one word.
You apply it to your account, you get a $10 credit.
DigitalOcean is incredibly fast, incredibly easy to use,
and there's incredible prices.
Woo!
Woo!
Just kind of lost it for a second because I'm so excited.
I'm so excited.
You know why I'm super excited?
You have a problem.
What's that?
You have too much excitement.
What are you going to do with it?
How are you going to handle that?
I'm going to load balance it, Wes.
I'm going to load balance it.
Brand new DigitalOcean feature launched today.
Scale your applications and improve availability
across your infrastructure in just a few clicks.
Don't look at it.
Go use it now.
Don't walk.
Run to DigitalOcean and use our promo code DOUNPLUGGED.
It's simple to set up.
You can easily manage the load balancers
through DigitalOcean's API or control panel.
I got good ones at that.
You can scale your traffic capacity.
I was just talking to the beard earlier today.
We've been having some Libsyn problems.
See, the thing about Libsyn is we've been a customer now
for like as long as Libsyn has been a company,
and they have just gone through some bad changes,
and they shut down one of our accounts
because they don't offer that plan anymore.
Oh, no.
You know what my first thought was?
Let's go spin up three droplets.
They have data centers all over the world,
so we'll do them in West Coast, East Coast, and in Germany.
Use the load balancer.
Easy-peasy.
There's our new MP3 distribution system.
Set it up in just minutes.
DigitalOcean.com.
There's lots of reasons to try it,
from simple infrastructure
to long-term deployment and projects.
We run lots of our backend pieces now on DigitalOcean.
My backend is all up in DigitalOcean.
Yours can be, too.
Use our promo code DOUNPLUGGED to get started.
Get a $10 credit and try them out.
Support the show, too.
DOUNPLUGGED.
Thanks, DigitalOcean, for sponsoring the Unplugged program.
All right, Wes, you crazy SOB.
You had a weekend with WireGuard.
Actually, I don't know how long you had time with WireGuard,
but I know that you got a little WireGuard time in.
Now, break it down for me.
Break it down because I know we've talked about it before,
but it sounds like you really kind of got inspired
after watching this FOSDEM discussion on it,
or listening to it, I guess.
Yeah, there's a MP4 and WebM, I think, if that's your style.
So, yeah, Jason, the author, gave a talk at FOSDEM.
It's a good talk.
He talks fast, goes through a lot, but it's not that complicated.
And he has a really short demo,
which is also linked on that same page that you can watch
where he just kind of shows it off in the terminal.
And it's so easy to get started.
That's kind of what appealed to me.
So, on the site they kind of go through,
and in the presentation they go through, it's a new VPN.
It's opinionated, so it's layer 3 only, right?
So you're not doing your broadcast domains, Ethernet stuff.
Uses the noise protocol framework.
Uses the noise protocol.
So it makes some choices.
It doesn't have cipher agility,
so they have a set list of secure ciphers that are secure right now.
So you don't even have the option to use a secure one.
And it's very minimal.
Like, here's the size of the open VPN code base.
Here's the size of strong SWAN.
Sure, because he's probably heavily relying on the kernel module
to do the heavy lifting, right?
Or is he including that?
Uses a fair bit, and then his new stuff to be added
is a little over 3,000 lines of C.
So it hasn't been audited yet.
We don't know. It's not even upstreamed yet.
He's working on a 1.0 version,
kind of finalizing some of the protocols and formats.
And then he's going to submit it for inclusion to the kernel.
But it's really simple, and it works.
It uses the interface as its native,
kind of its base building block.
So you do IP link add WG0 type WireGuard.
Now you have a new interface.
Then you assign it an IP address.
Right now, there is a third party,
or he wrote a WireGuard utility
that basically configures it with the keys that it needs
and the peers it can allow.
You do that, and IP link set WG0 up
on your two hosts or whatever.
So I'm VPNed right now to a droplet.
Oh, really?
So one of the nice advantages it has is the way it works.
It's kind of like the MOSH utility.
Oh, really?
So you set the endpoint IP for your droplet.
Yeah.
I have my whole...
Actually, right now I'm connected to the IRC.
I'm connected to everything through the WireGuard tunnel
on my laptop.
It was working at home.
I suspended, turned it back on.
It just works.
So you have it right on the droplet,
and that IP stays the same.
And your laptop IP changes,
and when you wake from sleep on a new Wi-Fi network...
Yeah.
And so he goes into it more in the presentation,
but it has a very short handshake
so it can start up again, and it's very quiet.
By default, it doesn't do a lot of keep-alives or anything.
It does have some options for better NAT punching
and that sort of thing.
So there are a lot of caveats.
It's not open VPN.
It doesn't come with a whole bunch of stuff.
It's really meant to be a secure...
Just a secure, minimal base framework
that you can build on top of.
WireGuard securely encapsulates IP packets over UDP.
Can you tell this is like the third show I've done
that my tongue is giving up?
It's done.
You add a WireGuard interface,
configure it with your private key and your peers' public keys,
and then you send packets across it.
All issues of the key distribution
and pushed configurations are out of scope of WireGuard.
That's what I mean.
These are issues much better left for other layers,
which really you can solve those problems
in ways that work better for you.
So for somebody like yourself,
that might actually be kind of a preferred thing.
Yep.
I'm already thinking of using it.
I like Tink.
I use Tink, right?
So this does not necessarily replace Tink.
You could do a lot of the same things.
Where would you use it in place of?
It's not as good for a complete...
It wouldn't work in as a complete mesh necessarily
or as a little less.
Sure, sure.
But you could do like an IPsec style star configuration
or other still similar to mesh,
especially in an environment where it's less dynamic
or where you have like configuration management
or other systems where basically all the peers
need to talk to you,
they need to know about the peers
and have the public keys
or the peers they want to talk to you.
But I do something where I have some family and friends
who have VPN tunnels to my network.
I'm already thinking about placing Tink with this.
Really?
Because it just stays in place.
And eventually I'm hoping it'll be in the kernel,
so it'll be really easy as a dependency as well.
Yeah, he's upstreamed everything.
Well, it's not in the kernel yet,
but it's planning to be.
Oh.
So he started our discussion
with the network maintainers already.
He gave this talk.
He has a white paper.
And so at some point in this year,
we expect to see it submitted for a formal review on the mailing list.
So it could be a little while.
Yeah.
But it's super easy.
It's already packaged.
So there's a copper repo.
There's a PPA.
In Arch, it's already there.
And you can just install it as a DKMS module.
It builds really easy.
It takes like two minutes.
Yeah.
And then you don't have to worry about it.
Yeah.
So once you have it all set up,
your connection process is you just activate the interface
once everything's configured.
Yep.
You just turn on the interface.
There's also a couple scripts that he wrote.
So there's, again, it's meant as a lower level building block,
but it comes with a WG Quick script
where it has a little kind of like a system D style
INI configuration file.
And then there you can set up a little more
so the script will also set your IPs and stuff.
So you can pretty much do WG Quick up, WG Quick down.
And then that will up and down your interface.
And that's a little script that takes care
of all the other little nimbly's in the background.
Yeah.
But I had already set that up before.
And so all I did when I got here,
I'm pinging it right now, like 10 millisecond ping
up to the San Fran droplet.
Really not bad.
I just did IP link set interface up,
and then it immediately does the handshake
to get everything going again, and it just works.
That's slick.
WireGuard, WireGuard.io if you want to check it out.
Oh, I should mention there, IRC, thank you.
They're already working.
There's some PRs already for system D network D,
which I think would be great.
We need simple server configured VPNs and a network manager.
Yeah.
And then you combine that with eventually getting the kernel.
Yeah.
Magic.
It sounds pretty sweet.
That'd be really nice.
Well, cool.
Very cool, Wes.
I'm glad you were able to try it out.
Because I remember us talking about it,
and it seemed pretty exciting.
I'm a little bummed.
I was hoping the kernel module would be further along
to being upstream because the reality is you can submit things all day long.
Yes, we don't know.
There's no guarantees it will be approved,
nothing like that at all.
Yeah.
But that has been some positive reviews.
That's how it works though, right?
That's how it goes.
The system D people seem to like it.
So if that's a sign for or against, I really don't know.
But it's something.
All right.
I don't know what to make of that.
That means it's probably going to be controversial.
Damn it.
Leonard, we love you though, really.
We love you, baby.
Happy Valentine's Day.
All right.
That brings us to the end of this week's broadcast.
184 has got to get out of here so we can make room for 185
and the TechSnap show.
Now, I encourage you to visit our live stream at jblive.tv.
But Chris, but Chris, when do I go?
Such a great question.
Such.
Jupiterbroadcasting.com slash calendar.
Feedback at linuxaction.reddit.com.
Jupiterbroadcasting.com slash contact.
Follow Wes on the Twitter.
You're at Wes Payne, right?
That's right.
I'm at Chris LAS.
Thank you for joining us.
See you right back here next Tuesday.
Thank you, Mumble Room.
I love your faces.
Thank you, Chat Room.
Let's go get our title, and then we got to scoot.
Wow, look at us though.
I think we're going to get well.
Oh, I see what happened.
This clock over here says 326, and this clock over here says 329.
We're not actually doing as well as I thought we were, but that's okay.
For exception, that's kind of funny.
XFC evangelism.
That's pretty good, Wes.
Internet Walmart.
Yeah, that would be our first story.
Amazon chimes in.
Nice.
Nice.
And Al and the Penguin Slayer.
How about that de-Penguify?
I know, right?
It's a funny story.
I do think there's some things in that script we talked about.
Oh, Mumble's muted.
Sorry, Mumble.
I had you muted.
I love you anyways.
Go ahead if you were talking.
Sorry, guys.
I had you muted during the music, and I forgot to unmute you.
I'm kind of sad Woolly wasn't able to stick around for WireGuard.
I know.
I know.
I know.
I know.
So Wimpy, will we see you?
Probably not next week.
Probably nay on the Wimpy.
Don't know at this point.
Yeah, it was nice to have you.
It was nice to have you.
It was nice to have you.
Yeah.
Yeah.
And thank you for bringing that story up, because that was an interesting discussion,
too.
Yeah.
Yeah, I was a bit surprised by it, so I wondered how many people it had passed by.
It's funny that I saw it, and for some reason it didn't land with me.
That's not an entire new desktop environment.
It didn't land for some reason.
I was just like, okay, well, I got to move on, but something about that's odd, and that
was pretty much all I thought.
Chilling with Kylan.
Chilling.
Yes, I was about to suggest that, and then I saw WW had already put it there and started
up.
That's pretty good.
Will people know what the hell we're talking about?
Okay, I say it's chilling with Chilling versus Forkception right now.
What do you like better, Wes?
Ooh.
You like chilling with Chilling better?
I really do like it.
There's a little bit less of that front end.
Once someone's seen the title and listened to the episode, they'll like it, right?
It's a good title.
Yes.
But it has a little less of the draw angle.
I see that.
Yeah.
Forkception is...
Yeah.
But then again, maybe that's not what we should be letting drive our title choices.
Right.
What's the main goal of the title?
I mean, I used to think it was to get people to watch and listen, but now I'm thinking
it's to just please the people already listening, because with a podcast, it's a long show.
It's not like you're just getting a lot of drive-bys.
You've got to slowly just accrue your listener base.
You've got to convince them to listen every time, or at least most of the time.
Talking about slowly accruing your listener base, can I make a small plug?
Yes.
In fact, do while we're still recording, because I...
Go ahead.
Yes.
So those of you that listen to the Ubuntu podcast will know that we're on a season break
at the moment, and we always have a planning meeting after a few months to see if we're
going to come back for another season, and we did that last week, and we're going to
come back for season 10, and we'll be putting out a teaser episode soon.
So if you want to hear more opinion from myself or Alan or Mark, then head over to UbuntuPodcast.org
and get subscribed.
