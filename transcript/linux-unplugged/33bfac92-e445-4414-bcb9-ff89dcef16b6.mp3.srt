1
00:00:00,000 --> 00:00:02,960
You remember that old joke about put it in a Beowulf cluster

2
00:00:02,960 --> 00:00:05,680
that used to be the go-to line for every Linux user ever?

3
00:00:05,680 --> 00:00:07,520
That's kind of died off, hasn't it?

4
00:00:07,520 --> 00:00:08,680
You don't happen that much, well,

5
00:00:08,680 --> 00:00:11,360
I think it's because Amazon provides them for you

6
00:00:11,360 --> 00:00:13,060
in the cloud, you just have to pay them.

7
00:00:13,060 --> 00:00:17,000
The Beowulf cluster was this go-to way

8
00:00:17,000 --> 00:00:19,400
to cluster a bunch of machines together.

9
00:00:19,400 --> 00:00:22,240
But also, Wes, you could just put a bunch of CPUs

10
00:00:22,240 --> 00:00:24,480
in a system and then just design the workloads

11
00:00:24,480 --> 00:00:26,840
to spread across a farm, I suppose.

12
00:00:26,840 --> 00:00:30,600
Maybe that's why the Raspberry Pi cluster

13
00:00:31,600 --> 00:00:33,720
might just be the ideal candidate for some.

14
00:00:33,720 --> 00:00:35,520
It's a new system that lets users pack up

15
00:00:35,520 --> 00:00:40,000
to five Raspberry Pi Compute Module 3s

16
00:00:40,000 --> 00:00:43,920
into a single, compact, relatively low-cost,

17
00:00:43,920 --> 00:00:46,400
power-efficient computing cluster.

18
00:00:46,400 --> 00:00:49,180
Yeah, the MiniNode's Raspberry Pi 3 carrier board

19
00:00:49,180 --> 00:00:51,840
is designed to house multiple CM3 boards

20
00:00:51,840 --> 00:00:53,160
for carrying out computation

21
00:00:53,160 --> 00:00:55,760
at the so-called edge of the network.

22
00:00:55,760 --> 00:00:57,240
For instance, building automation,

23
00:00:57,240 --> 00:00:59,480
running a monitoring station,

24
00:00:59,480 --> 00:01:01,640
things like smart traffic lights in a city.

25
00:01:01,640 --> 00:01:03,760
The network connectivity is provided

26
00:01:03,760 --> 00:01:05,680
by an integrated gigabit switch

27
00:01:05,680 --> 00:01:08,520
to connect all of them together, so that's pretty nice.

28
00:01:09,440 --> 00:01:12,080
And it feeds five boards,

29
00:01:12,080 --> 00:01:15,720
which are also like five awesome Raspberry Pis

30
00:01:15,720 --> 00:01:16,960
that have gigabit connections.

31
00:01:16,960 --> 00:01:18,820
That's really nice.

32
00:01:18,820 --> 00:01:22,280
Yeah, they've also got four gigs of flash storage.

33
00:01:22,280 --> 00:01:26,400
Looks like no Wi-Fi or Bluetooth at the moment, though.

34
00:01:26,400 --> 00:01:28,640
Decent processor, 1.2 gigahertz quad-core,

35
00:01:28,640 --> 00:01:30,200
as you probably would expect.

36
00:01:30,200 --> 00:01:35,200
Okay, so prices, it's $259 for the board,

37
00:01:35,300 --> 00:01:40,300
and then each Raspberry Pi Compute Module is 30 bucks.

38
00:01:40,720 --> 00:01:42,680
Yeah, if you look at it, I mean, it is like a bigger board,

39
00:01:42,680 --> 00:01:45,720
and you just sort of slot these other little Pi boards

40
00:01:45,720 --> 00:01:46,760
right into it.

41
00:01:46,760 --> 00:01:49,560
Now we could have a Beowulf cluster of Raspberry Pis.

42
00:01:49,560 --> 00:01:54,480
You know, this is for all that edge work

43
00:01:54,480 --> 00:01:56,360
that you need your Raspberry Pis to do.

44
00:01:56,360 --> 00:01:58,920
I was thinking maybe if you're using Raspberry Pis,

45
00:01:58,920 --> 00:02:00,680
maybe you want a little build farm at home.

46
00:02:00,680 --> 00:02:01,860
Well, there you go.

47
00:02:01,860 --> 00:02:04,520
I feel like we need to have a committee,

48
00:02:04,520 --> 00:02:06,600
and that Jupyter Broadcasting maybe should form it,

49
00:02:06,600 --> 00:02:09,240
and then we can vote if we're gonna allow terms in.

50
00:02:09,240 --> 00:02:11,520
Like, we should have had a vote on hybrid cloud,

51
00:02:11,520 --> 00:02:14,080
and we should have a vote on edge devices,

52
00:02:14,080 --> 00:02:17,180
because you read this article, and it makes my skin crawl.

53
00:02:17,180 --> 00:02:19,800
Here's just one paragraph, edge computing

54
00:02:19,800 --> 00:02:22,480
is becoming increasingly common in situations

55
00:02:22,480 --> 00:02:25,620
where IoT sensor data needs to be processed

56
00:02:25,620 --> 00:02:29,480
with low latency or in near real time,

57
00:02:29,480 --> 00:02:33,680
or it needs to be handled locally for regulatory reasons.

58
00:02:33,680 --> 00:02:36,160
Edge computing is just another way

59
00:02:36,160 --> 00:02:38,840
of saying electronics devices, right?

60
00:02:38,840 --> 00:02:41,600
It's just another way of saying devices

61
00:02:41,600 --> 00:02:46,240
that are in the consumer's home or in the end destination.

62
00:02:46,240 --> 00:02:48,920
An edge device is just something

63
00:02:48,920 --> 00:02:52,920
that is network connected out on the edge.

64
00:02:52,920 --> 00:02:54,760
I don't like this term at all.

65
00:02:54,760 --> 00:02:55,600
It doesn't.

66
00:02:55,600 --> 00:02:59,880
It kind of separates between the compute device

67
00:02:59,880 --> 00:03:03,080
that's batching and processing this data,

68
00:03:03,080 --> 00:03:07,080
and the sensor, which could be an Arduino

69
00:03:07,080 --> 00:03:11,480
or some other low-end microcontroller device.

70
00:03:11,480 --> 00:03:13,520
So for example, there was a company

71
00:03:13,520 --> 00:03:16,200
that were doing a thing where they have cameras

72
00:03:16,200 --> 00:03:20,400
in elevators, and they were taking pictures

73
00:03:20,400 --> 00:03:24,160
of people in the elevator, and then using some intelligence

74
00:03:24,160 --> 00:03:25,840
to scan the picture and figure out

75
00:03:25,840 --> 00:03:28,440
if it looks like the person was a bad guy

76
00:03:28,440 --> 00:03:30,340
from the, I don't know, the look of their face

77
00:03:30,340 --> 00:03:33,720
or facial recognition, or it looked like they may have a gun

78
00:03:33,720 --> 00:03:35,920
under their clothes, or if they get the gun out

79
00:03:35,920 --> 00:03:37,640
or something so it could see that.

80
00:03:37,640 --> 00:03:40,660
But the thing that's connected to the camera

81
00:03:40,660 --> 00:03:43,320
doesn't have the compute power to do that.

82
00:03:43,320 --> 00:03:45,760
And if you had multiple elevators in a building,

83
00:03:45,760 --> 00:03:48,200
you'd have multiple cameras feeding into an edge device

84
00:03:48,200 --> 00:03:50,640
that had the compute capability to do that.

85
00:03:50,640 --> 00:03:53,540
So there's certainly, you've gotta have some term

86
00:03:53,540 --> 00:03:55,400
for the thing that's doing the compute

87
00:03:55,400 --> 00:03:59,040
that isn't the device that's at the very, very end

88
00:03:59,040 --> 00:03:59,880
of the line.

89
00:03:59,880 --> 00:04:02,520
Here's where I think the line should be,

90
00:04:02,520 --> 00:04:06,980
is if it's in your network, on their premises,

91
00:04:06,980 --> 00:04:11,280
you could consider that the very edge of your LAN

92
00:04:11,280 --> 00:04:13,760
or your WAN, you could consider that to be the edge

93
00:04:13,760 --> 00:04:15,960
of your network, but if the device

94
00:04:15,960 --> 00:04:20,080
that you are communicating with is on a separate network,

95
00:04:20,080 --> 00:04:21,380
that's not an edge device.

96
00:04:21,380 --> 00:04:23,340
That's just a node on the internet.

97
00:04:23,340 --> 00:04:24,880
That is just an internet node.

98
00:04:24,880 --> 00:04:26,400
It's not an edge device at that point.

99
00:04:26,400 --> 00:04:29,680
I grok that it could be a sensor collecting data,

100
00:04:29,680 --> 00:04:32,680
transmitting it back to a larger processing system,

101
00:04:32,680 --> 00:04:33,960
but if they're on separate networks,

102
00:04:33,960 --> 00:04:36,200
I feel like edge device is,

103
00:04:36,200 --> 00:04:38,000
it's a dumbification of the term.

104
00:04:38,000 --> 00:04:41,820
Although all of that said, I did get a tweet this last week

105
00:04:41,820 --> 00:04:44,320
from an elevator where that elevator

106
00:04:44,320 --> 00:04:46,240
was doing a file system check.

107
00:04:46,240 --> 00:04:48,720
So I don't know what to call that.

108
00:04:48,720 --> 00:04:50,960
Chris, I think you should just think about it like this.

109
00:04:50,960 --> 00:04:52,960
You gotta have devices to funnel data

110
00:04:52,960 --> 00:04:56,720
to your blockchain based machine learning platform

111
00:04:56,720 --> 00:04:57,880
to analyze it.

112
00:04:57,880 --> 00:04:58,720
Nailed it.

113
00:04:59,760 --> 00:05:02,560
This is Linux Unplugged, episode 278

114
00:05:02,560 --> 00:05:05,240
for December 4th, 2018.

115
00:05:05,240 --> 00:05:18,920
Welcome to Linux Unplugged, your weekly Linux talk show

116
00:05:18,920 --> 00:05:20,800
that's all over the world this week.

117
00:05:20,800 --> 00:05:21,640
My name is Chris.

118
00:05:21,640 --> 00:05:22,720
My name is Wes.

119
00:05:22,720 --> 00:05:25,560
Hello, Mr. Payne, good to be connected with you.

120
00:05:25,560 --> 00:05:28,880
I am in Dallas for, well, for some shenanigans

121
00:05:28,880 --> 00:05:30,120
that you're actually about to join me for

122
00:05:30,120 --> 00:05:31,920
in just a couple of days.

123
00:05:31,920 --> 00:05:33,320
We're gonna have our company party

124
00:05:33,320 --> 00:05:34,700
and now that we're part of Linux Academy,

125
00:05:34,700 --> 00:05:36,160
very excited about that.

126
00:05:36,160 --> 00:05:38,700
But we've put together a show this week

127
00:05:38,700 --> 00:05:41,520
that really looks back and pulls out the best bits.

128
00:05:41,520 --> 00:05:43,320
We've got some great community news

129
00:05:43,320 --> 00:05:44,520
that we're going to go through here

130
00:05:44,520 --> 00:05:46,380
towards the top of the show.

131
00:05:46,380 --> 00:05:51,380
A fascinating look at Android in the cloud.

132
00:05:51,560 --> 00:05:53,240
It is actually a thing.

133
00:05:53,240 --> 00:05:56,880
And then I had a chance to chat with the developer of Ish.

134
00:05:56,880 --> 00:06:01,880
ISH, you might be familiar, is a Linux shell for iOS

135
00:06:01,920 --> 00:06:04,200
and the developer is hard at work

136
00:06:04,200 --> 00:06:06,720
at implementing an entire Linux environment

137
00:06:06,720 --> 00:06:08,320
that iOS users can use.

138
00:06:08,320 --> 00:06:11,360
And so far, Apple hasn't pulled the plug.

139
00:06:11,360 --> 00:06:14,640
I'll talk to him about that, why he's doing it.

140
00:06:14,640 --> 00:06:17,620
I wanted to find out too if he was like a Linux diehard

141
00:06:17,620 --> 00:06:19,360
that was trying to bring Linux to iOS

142
00:06:19,360 --> 00:06:22,080
or if he was an iOS diehard trying to learn about Linux.

143
00:06:22,080 --> 00:06:24,300
So we talk about that and more.

144
00:06:24,300 --> 00:06:28,400
A followup on some crazy issues I've had with my laptop

145
00:06:28,400 --> 00:06:31,200
after connecting that GPU powered dock

146
00:06:31,200 --> 00:06:33,440
and you might run into it as well.

147
00:06:33,440 --> 00:06:36,520
In fact, it impacts more than just GPUs

148
00:06:36,520 --> 00:06:41,520
and then we'll take a little deep dive into Clear Linux,

149
00:06:42,120 --> 00:06:45,520
which has been making more and more news recently

150
00:06:45,520 --> 00:06:48,640
and just refresh their desktop offering.

151
00:06:48,640 --> 00:06:51,800
You could say double down on the desktop offering.

152
00:06:51,800 --> 00:06:53,280
And Wes is gonna kick the tires

153
00:06:53,280 --> 00:06:55,920
and I did a deep dive on the technical side of things

154
00:06:55,920 --> 00:06:57,600
and we'll be taking a look at Clear Linux

155
00:06:57,600 --> 00:06:59,060
towards the end of the show.

156
00:06:59,060 --> 00:07:01,800
But before we go any further,

157
00:07:01,800 --> 00:07:05,040
we have one bit of business we must attend.

158
00:07:05,040 --> 00:07:06,480
We must bring in that virtual log.

159
00:07:06,480 --> 00:07:08,160
Time appropriate greetings, Mumble Room.

160
00:07:08,160 --> 00:07:09,000
Morning.

161
00:07:09,000 --> 00:07:10,200
Howdy, howdy.

162
00:07:10,200 --> 00:07:11,280
Hello.

163
00:07:11,280 --> 00:07:15,520
Hello, Bruce and Popey and Sean and the Silent Drifter.

164
00:07:15,520 --> 00:07:16,360
All of our friends.

165
00:07:16,360 --> 00:07:17,320
It's good to see you.

166
00:07:17,320 --> 00:07:18,580
Yeah, it is nice.

167
00:07:18,580 --> 00:07:22,260
We have a few up in quiet listening and in staging as well.

168
00:07:22,260 --> 00:07:24,720
Mumble Room is cool because you could just listen

169
00:07:24,720 --> 00:07:29,000
in the Mumble Room and then you get like the raw untapped

170
00:07:29,000 --> 00:07:32,480
or I don't even know what the unfettered studio feed

171
00:07:32,480 --> 00:07:35,080
because it's connected to our soundboard.

172
00:07:35,080 --> 00:07:38,640
Anyways, I know I was gonna make that sound really cool

173
00:07:38,640 --> 00:07:40,840
and then I just realized it's not that cool.

174
00:07:40,840 --> 00:07:41,840
It's just an audio interface

175
00:07:41,840 --> 00:07:43,000
that plugs into our soundboard.

176
00:07:43,000 --> 00:07:44,760
But at the end of the day, it is,

177
00:07:44,760 --> 00:07:47,240
I should make it sound like the raw direct feed

178
00:07:47,240 --> 00:07:49,240
from the studio mixer.

179
00:07:49,240 --> 00:07:50,240
That's pretty good, right?

180
00:07:50,240 --> 00:07:51,780
That was great. That's way more hype.

181
00:07:51,780 --> 00:07:52,780
Thank you.

182
00:07:52,780 --> 00:07:53,620
Thank you.

183
00:07:53,620 --> 00:07:56,080
All right, well, let's start with some community news.

184
00:07:56,080 --> 00:07:58,260
A story that I'm a little grumpy about.

185
00:07:58,260 --> 00:08:02,640
And I didn't wanna be, I didn't wanna be.

186
00:08:02,640 --> 00:08:05,300
I wanted to be the guy that came on the air

187
00:08:05,300 --> 00:08:06,840
and said, I think it's time.

188
00:08:06,840 --> 00:08:11,260
It's been 10 years, it's time, but I can't.

189
00:08:12,140 --> 00:08:12,980
And I understand though.

190
00:08:12,980 --> 00:08:13,820
It's just what it is.

191
00:08:13,820 --> 00:08:16,760
The world's moving on and Zubuntu is one of them

192
00:08:16,760 --> 00:08:20,240
and it's official that Zubuntu will stop producing

193
00:08:21,200 --> 00:08:24,840
32-bit ISOs beginning with 1904.

194
00:08:24,840 --> 00:08:26,880
The development team has now decided to go ahead

195
00:08:26,880 --> 00:08:30,100
and eliminate the 32-bit builds moving forward.

196
00:08:30,100 --> 00:08:32,860
The change will affect Zubuntu 1904 and beyond,

197
00:08:32,860 --> 00:08:36,200
but not the current 1804 LTS.

198
00:08:36,200 --> 00:08:39,080
Yeah, the developers announced this this morning

199
00:08:39,080 --> 00:08:40,240
following a team vote.

200
00:08:40,240 --> 00:08:42,660
Interestingly, it was a six out of 10 vote.

201
00:08:42,660 --> 00:08:44,920
So clearly not, you know, it wasn't unanimous.

202
00:08:44,920 --> 00:08:47,640
There's still people out there representing 32-bit,

203
00:08:47,640 --> 00:08:50,920
I would imagine, especially in the Zubuntu following.

204
00:08:50,920 --> 00:08:54,100
This leaves LXDE or LXQT

205
00:08:54,100 --> 00:08:57,600
as the only Ubuntu desktop distribution still offering

206
00:08:57,600 --> 00:08:59,640
32-bit images moving forward.

207
00:08:59,640 --> 00:09:02,520
And there's just no way that's sustainable.

208
00:09:02,520 --> 00:09:05,600
That puts all of the work for testing,

209
00:09:05,600 --> 00:09:09,400
for all of that, for building, all on that project.

210
00:09:09,400 --> 00:09:11,560
And it's not a focus of the project.

211
00:09:11,560 --> 00:09:14,360
The project has, Lubuntu has stated

212
00:09:14,360 --> 00:09:16,620
they wanna focus on more modern hardware.

213
00:09:16,620 --> 00:09:20,160
Now, the common meme here is that 32-bit processors

214
00:09:20,160 --> 00:09:22,080
haven't shipped since the Pentium 4.

215
00:09:22,080 --> 00:09:26,280
But the reality is they have shipped as recently as 2011.

216
00:09:26,280 --> 00:09:28,640
And I grant you, that's not yesterday, but it's also-

217
00:09:28,640 --> 00:09:30,400
True. It's not 10 years ago.

218
00:09:30,400 --> 00:09:35,340
And I don't know, I hate to see,

219
00:09:36,840 --> 00:09:38,440
I hate to see something that seems to have

220
00:09:38,440 --> 00:09:43,440
a well-defined purpose to facilitate really good performance

221
00:09:45,200 --> 00:09:47,560
on hardware that is maybe,

222
00:09:47,560 --> 00:09:48,760
it wouldn't be worth a YouTube video.

223
00:09:48,760 --> 00:09:50,240
You know, maybe it's not a Threadripper.

224
00:09:50,240 --> 00:09:53,000
Maybe it doesn't have the latest and greatest GPU

225
00:09:53,000 --> 00:09:54,400
and the latest and greatest CPU.

226
00:09:54,400 --> 00:09:58,620
Maybe it's, God forbid, even running spinning Rust disks.

227
00:09:58,620 --> 00:09:59,460
Maybe.

228
00:09:59,460 --> 00:10:02,720
Isn't that where ARM is now, though?

229
00:10:02,720 --> 00:10:04,920
If you just have an old 32-bit processor,

230
00:10:04,920 --> 00:10:06,240
shouldn't you just get a nice ARM chip

231
00:10:06,240 --> 00:10:07,840
and probably have a better time?

232
00:10:07,840 --> 00:10:09,760
And we should have distributions focusing on that?

233
00:10:09,760 --> 00:10:12,760
Because Lubuntu has its own things outside of that, right?

234
00:10:12,760 --> 00:10:14,300
I mean, you can have a lean and mean

235
00:10:14,300 --> 00:10:16,680
Lubuntu desktop on just about any system.

236
00:10:16,680 --> 00:10:18,840
Not 32-bit going forward, I guess.

237
00:10:18,840 --> 00:10:20,080
Yeah, you're right.

238
00:10:20,080 --> 00:10:21,760
I guess if you have, you're saying,

239
00:10:21,760 --> 00:10:22,860
if you have a system that old,

240
00:10:22,860 --> 00:10:25,320
you could almost just go get a cheapo ARM box.

241
00:10:25,320 --> 00:10:27,800
That said, I mean, I do appreciate it

242
00:10:27,800 --> 00:10:29,640
because one of those things Linux has been.

243
00:10:29,640 --> 00:10:31,840
Like, it feels like there has been this part of our culture

244
00:10:31,840 --> 00:10:33,400
where it's like, oh, it doesn't matter.

245
00:10:33,400 --> 00:10:35,160
Super old Mac?

246
00:10:35,160 --> 00:10:36,520
Okay, we'll put Linux on it.

247
00:10:36,520 --> 00:10:38,780
Whatever system you have, you could put Linux on it.

248
00:10:38,780 --> 00:10:41,160
And some of that's fallen away.

249
00:10:41,160 --> 00:10:42,000
True, yeah.

250
00:10:42,000 --> 00:10:46,360
And I think part of it for me is this is,

251
00:10:46,360 --> 00:10:49,240
this is something that these distributions were serving.

252
00:10:49,240 --> 00:10:52,960
Like, they were super serving a specific type of user base.

253
00:10:52,960 --> 00:10:54,800
Like, that was the role they played.

254
00:10:54,800 --> 00:10:57,360
And it made room for other distributions

255
00:10:57,360 --> 00:11:00,880
to go hog wild in other areas.

256
00:11:00,880 --> 00:11:02,280
But, you know, that's just my thoughts on it.

257
00:11:02,280 --> 00:11:04,520
Wimpy, I would obviously love to hear your thoughts,

258
00:11:04,520 --> 00:11:07,640
not only as an Ubuntu Mate maintainer,

259
00:11:07,640 --> 00:11:10,360
but also just having years of experience

260
00:11:10,360 --> 00:11:12,880
with ranges of different hardware and distributions.

261
00:11:12,880 --> 00:11:15,440
Yeah, so we obviously made this decision,

262
00:11:15,440 --> 00:11:18,920
or rather I had the final decision for Ubuntu Mate

263
00:11:18,920 --> 00:11:22,480
to end the 32-bit Intel support.

264
00:11:22,480 --> 00:11:24,200
And basically that came down to the fact

265
00:11:24,200 --> 00:11:27,040
that there weren't the people within the team

266
00:11:27,040 --> 00:11:30,400
that had the hardware to test and QA this stuff.

267
00:11:30,400 --> 00:11:32,960
So yes, whilst there may well be devices

268
00:11:32,960 --> 00:11:36,160
that have been produced as little ago as seven years

269
00:11:36,160 --> 00:11:39,680
that have that instruction set and that processor,

270
00:11:39,680 --> 00:11:41,400
you've got to have people out there that are using it

271
00:11:41,400 --> 00:11:43,800
that are maintaining the distribution.

272
00:11:43,800 --> 00:11:45,880
And Wes is also quite correct

273
00:11:45,880 --> 00:11:49,600
that for Intel 32-bit systems of that era,

274
00:11:49,600 --> 00:11:53,760
the ARM platforms these days offer competitive performance

275
00:11:53,760 --> 00:11:56,680
and are inexpensive by comparison.

276
00:11:56,680 --> 00:12:00,520
And just because Anubuntu flavor

277
00:12:00,520 --> 00:12:03,120
is not supporting 32-bit Intel

278
00:12:03,120 --> 00:12:04,800
as a release architecture anymore

279
00:12:04,800 --> 00:12:07,080
doesn't mean that the sky is falling.

280
00:12:07,080 --> 00:12:10,720
There are dozens and dozens of distributions out there

281
00:12:10,720 --> 00:12:13,560
that cater to supporting these, you know,

282
00:12:13,560 --> 00:12:16,480
what are becoming niche hardware platforms

283
00:12:16,480 --> 00:12:17,880
and specialize in that.

284
00:12:17,880 --> 00:12:21,040
And I don't think any of us would be saddened

285
00:12:21,040 --> 00:12:23,800
to see owners of that hardware

286
00:12:23,800 --> 00:12:25,680
go to those niche distributions

287
00:12:25,680 --> 00:12:27,640
where they can be well supported.

288
00:12:27,640 --> 00:12:30,760
Sure, I guess I can't disagree with that.

289
00:12:30,760 --> 00:12:34,520
You're right, it's not like there's not somewhere else

290
00:12:34,520 --> 00:12:37,120
for these users to go.

291
00:12:37,120 --> 00:12:42,120
But what is the role then of Zubuntu and Lubuntu?

292
00:12:42,120 --> 00:12:45,160
I guess if their main advantage is that they have XFCE

293
00:12:45,160 --> 00:12:48,120
or LXQt, I don't know if that seems like enough

294
00:12:48,120 --> 00:12:49,080
of a differentiator.

295
00:12:49,080 --> 00:12:51,880
You can get that anywhere.

296
00:12:51,880 --> 00:12:54,720
Like the focus is sort of what made it a go-to.

297
00:12:54,720 --> 00:12:57,920
Like it put them in a channel for a particular type of user

298
00:12:57,920 --> 00:13:01,840
where the randos on the internet would filter people

299
00:13:01,840 --> 00:13:03,360
into that channel when they're looking for something.

300
00:13:03,360 --> 00:13:07,280
Like it was, in a way, it was part of their brand.

301
00:13:07,280 --> 00:13:09,440
And now the main thing about their brand is going away.

302
00:13:09,440 --> 00:13:10,760
I don't mean to dwell.

303
00:13:10,760 --> 00:13:12,560
I want to give Popeye a chance to jump in too.

304
00:13:12,560 --> 00:13:14,720
I don't think it's the main thing about their brand.

305
00:13:14,720 --> 00:13:19,160
It's a factor that would help you decide

306
00:13:19,160 --> 00:13:21,040
which ISO you were going to download

307
00:13:21,040 --> 00:13:23,560
if you had that old crusty laptop

308
00:13:23,560 --> 00:13:26,560
and you wanted to run software on it, sure.

309
00:13:26,560 --> 00:13:29,960
But what I find frustrating is whenever we announce

310
00:13:29,960 --> 00:13:33,960
the death or depreciation of something,

311
00:13:35,160 --> 00:13:37,480
people come out of the woodwork and tell us

312
00:13:37,480 --> 00:13:40,320
we should continue working on this thing.

313
00:13:40,320 --> 00:13:43,800
And I'm sorry, but you don't get to tell us what we work on.

314
00:13:43,800 --> 00:13:46,240
If you want to work on it, you could volunteer

315
00:13:46,240 --> 00:13:48,920
some of your time to work on it as well.

316
00:13:48,920 --> 00:13:51,000
Like there are plenty of people out there

317
00:13:51,000 --> 00:13:54,600
who will wring their hands when something

318
00:13:54,600 --> 00:13:57,160
is no longer supported.

319
00:13:57,160 --> 00:13:59,040
But they won't step up and help

320
00:13:59,040 --> 00:14:00,800
when people put the call out for it.

321
00:14:00,800 --> 00:14:02,400
And I find that incredibly frustrating.

322
00:14:02,400 --> 00:14:05,320
If you're not going to do anything about it, then shut up.

323
00:14:05,320 --> 00:14:10,320
Yeah, and that is sort of a definite,

324
00:14:10,760 --> 00:14:11,960
it's not the friendliest answer,

325
00:14:11,960 --> 00:14:13,280
but it is definitely a legitimate answer

326
00:14:13,280 --> 00:14:14,120
in the open source world.

327
00:14:14,120 --> 00:14:16,040
It's like, well, the source is there.

328
00:14:16,040 --> 00:14:19,760
If you want to do the work, you can do that work.

329
00:14:19,760 --> 00:14:24,760
And like I say, I think for the most part,

330
00:14:25,120 --> 00:14:28,800
it has been a really long time and the market has moved on.

331
00:14:28,800 --> 00:14:31,960
And the people that are running 32-bit probably don't have to.

332
00:14:31,960 --> 00:14:33,960
I've said that before on this show,

333
00:14:33,960 --> 00:14:36,520
is they don't, they likely don't have to,

334
00:14:36,520 --> 00:14:40,720
but it still seems to me like, you know,

335
00:14:40,720 --> 00:14:42,440
it's like in the world of cars,

336
00:14:42,440 --> 00:14:44,480
when you have a car maker that has something in their cars

337
00:14:44,480 --> 00:14:47,360
that makes them special when they stop doing that thing,

338
00:14:47,360 --> 00:14:48,760
it just sort of takes something from it.

339
00:14:48,760 --> 00:14:50,560
Mr. Drifter, I want to give you a chance to jump in

340
00:14:50,560 --> 00:14:51,920
and then perhaps we will move on.

341
00:14:51,920 --> 00:14:53,000
What do you think?

342
00:14:53,000 --> 00:14:54,120
Well, I agree with Popeye.

343
00:14:54,120 --> 00:14:56,600
I think that there's a lot of responsibility

344
00:14:56,600 --> 00:14:59,480
on the community to get in and kind of start maintaining

345
00:14:59,480 --> 00:15:03,400
those things because I mean, there's only so much space,

346
00:15:03,400 --> 00:15:05,560
even in large corporate offices,

347
00:15:05,560 --> 00:15:08,480
to put all of these old crusty machines

348
00:15:08,480 --> 00:15:10,520
and it's kind of hard to maintain it.

349
00:15:10,520 --> 00:15:14,280
But you had mentioned, or at least asked the question,

350
00:15:14,280 --> 00:15:17,160
what would we use, what is the use case then for these,

351
00:15:17,160 --> 00:15:21,080
like XFCE and these desktops for 64-bit?

352
00:15:21,080 --> 00:15:23,240
And I think that when you go on there

353
00:15:23,240 --> 00:15:25,720
and you just need essentially kind of a jump box

354
00:15:25,720 --> 00:15:29,000
or something that doesn't take a lot of resources,

355
00:15:29,000 --> 00:15:31,120
I still think that these different distributions

356
00:15:31,120 --> 00:15:33,000
are going to really excel in those areas.

357
00:15:33,000 --> 00:15:37,120
Right, and I think at the end of all of this discussion,

358
00:15:37,120 --> 00:15:38,640
you have to keep in mind the project.

359
00:15:38,640 --> 00:15:40,440
And if the project doesn't have the resources

360
00:15:40,440 --> 00:15:43,680
to do the testing and they don't have the passion

361
00:15:43,680 --> 00:15:46,240
to go build 32-bit boxes to make it work,

362
00:15:46,240 --> 00:15:47,480
then they're probably not the right project

363
00:15:47,480 --> 00:15:48,880
to be doing that work.

364
00:15:48,880 --> 00:15:50,960
And it doesn't really matter how you feel about it.

365
00:15:50,960 --> 00:15:53,760
It's just the reality of human nature

366
00:15:53,760 --> 00:15:55,760
and how these kinds of things work.

367
00:15:55,760 --> 00:15:58,440
This next story, I only included this in the show

368
00:15:58,440 --> 00:16:01,000
because just the holy shit factor of it.

369
00:16:01,000 --> 00:16:02,960
It's really surprising.

370
00:16:02,960 --> 00:16:06,720
Microsoft is throwing in the towel with Edge HTML.

371
00:16:06,720 --> 00:16:09,040
And today it's come out that they're instead

372
00:16:09,040 --> 00:16:12,920
building a web browser based around Chromium,

373
00:16:12,920 --> 00:16:16,600
which uses Blink as its rendering engine,

374
00:16:16,600 --> 00:16:18,800
essentially their web kit fork.

375
00:16:18,800 --> 00:16:19,680
This is massive.

376
00:16:19,680 --> 00:16:22,280
Woo-wee, they were also recently spotted,

377
00:16:22,280 --> 00:16:23,880
them being Microsoft engineers,

378
00:16:23,880 --> 00:16:27,000
committing code to the Chromium project

379
00:16:27,000 --> 00:16:29,600
to help get Google Chrome running on ARM.

380
00:16:29,600 --> 00:16:31,920
Perhaps some of that work will translate over

381
00:16:31,920 --> 00:16:35,720
to getting Anaheim running on Windows 10 on ARM too.

382
00:16:35,720 --> 00:16:38,080
I don't know about that, but it is interesting.

383
00:16:38,080 --> 00:16:41,280
I mean, think back to when IE6 was the big thing.

384
00:16:41,280 --> 00:16:42,120
I know.

385
00:16:42,120 --> 00:16:43,720
Is Microsoft done with the browser game?

386
00:16:43,720 --> 00:16:46,920
They're just gonna ship one, kind of phone it in?

387
00:16:46,920 --> 00:16:49,460
I gotta say, not particularly jazzed

388
00:16:49,460 --> 00:16:51,560
about another Chromium-based browser,

389
00:16:51,560 --> 00:16:56,560
but mind blown about the end of Internet Explorer,

390
00:16:56,600 --> 00:16:57,440
essentially.

391
00:16:57,440 --> 00:16:58,260
This is really it.

392
00:16:58,260 --> 00:16:59,480
I realize Edge wasn't IE,

393
00:16:59,480 --> 00:17:04,160
but to me this is really quite surprising

394
00:17:04,160 --> 00:17:07,980
because it is a massive strategic beachhead

395
00:17:07,980 --> 00:17:10,880
to have one of the popular web rendering engines.

396
00:17:10,880 --> 00:17:15,400
But it really seems like Microsoft in all areas right now

397
00:17:15,400 --> 00:17:19,120
is looking at it in a very humble, practical way.

398
00:17:19,120 --> 00:17:21,700
And they're saying, where have we lost?

399
00:17:21,700 --> 00:17:23,760
Where are we just not gonna win

400
00:17:23,760 --> 00:17:25,640
no matter how long we pay a team

401
00:17:25,640 --> 00:17:28,020
to work on something that we think has great battery life

402
00:17:28,020 --> 00:17:30,360
and great performance or whatever they wanna advertise

403
00:17:30,360 --> 00:17:31,920
about Edge?

404
00:17:31,920 --> 00:17:35,360
And they had to go and have that conversation and say,

405
00:17:35,360 --> 00:17:37,400
we gotta just throw in the towel here.

406
00:17:37,400 --> 00:17:39,780
We just gotta ship a Chromium browser.

407
00:17:39,780 --> 00:17:41,280
Now, we don't really know

408
00:17:41,280 --> 00:17:44,680
if this is going to replace Edge fully.

409
00:17:44,680 --> 00:17:47,880
Maybe they're just gonna swap out the ass end of Edge

410
00:17:47,880 --> 00:17:50,500
and never even say anything to the end user.

411
00:17:50,500 --> 00:17:53,100
Maybe it's only gonna be available

412
00:17:53,100 --> 00:17:56,020
on ARM versions of Windows.

413
00:17:56,020 --> 00:17:57,280
Oh. We don't know, do we?

414
00:17:57,280 --> 00:17:58,320
No, I mean, we don't.

415
00:17:58,320 --> 00:18:01,280
There's not a lot of clarity here.

416
00:18:01,280 --> 00:18:03,480
But I just wanna welcome Windows users

417
00:18:03,480 --> 00:18:04,720
to the rest of the internet.

418
00:18:04,720 --> 00:18:06,060
Nice to have you.

419
00:18:06,060 --> 00:18:10,880
And you can find the free stickers over in that corner.

420
00:18:10,880 --> 00:18:13,640
This next story, cue the valve sound link.

421
00:18:14,680 --> 00:18:16,840
Cue the, what is it called?

422
00:18:16,840 --> 00:18:18,680
What's that valve gong or whatever?

423
00:18:18,680 --> 00:18:21,160
Cue that. Cue the valve gong.

424
00:18:21,160 --> 00:18:24,840
Because the Steam Link lives on on the Raspberry Pi.

425
00:18:24,840 --> 00:18:26,000
Last week we talked about

426
00:18:26,000 --> 00:18:29,200
the Steam Link hardware going away.

427
00:18:29,200 --> 00:18:31,960
And I got a couple of notes from several people that said,

428
00:18:31,960 --> 00:18:33,060
I went and bought one.

429
00:18:33,060 --> 00:18:35,240
And then like, they were totally sold out.

430
00:18:35,240 --> 00:18:36,440
I almost did.

431
00:18:36,440 --> 00:18:37,280
I mean, it was very tempting.

432
00:18:37,280 --> 00:18:38,640
They were like 10 bucks for a while.

433
00:18:38,640 --> 00:18:40,280
That's pretty convenient.

434
00:18:40,280 --> 00:18:42,000
Wes, they got down to like 2.99 for a few days.

435
00:18:42,000 --> 00:18:42,840
Oh really?

436
00:18:42,840 --> 00:18:45,740
Yeah. $2.99.

437
00:18:45,740 --> 00:18:49,000
So anyways, there's now a beta to run the Steam Link app

438
00:18:49,000 --> 00:18:52,980
on your Raspberry Pi 3 and 3B Plus

439
00:18:52,980 --> 00:18:55,240
running Raspbian Stretch.

440
00:18:55,240 --> 00:18:56,160
It's a little bit funky.

441
00:18:56,160 --> 00:18:59,160
You have to run it and then it downloads the full app

442
00:18:59,160 --> 00:19:00,800
and creates a desktop shortcut

443
00:19:00,800 --> 00:19:03,960
and then will automatically update as needed from there.

444
00:19:03,960 --> 00:19:05,280
So it's not your traditional package,

445
00:19:05,280 --> 00:19:06,920
but sounds like it's working.

446
00:19:06,920 --> 00:19:10,040
Yeah. Well, you know, we do have a reporter on the scene.

447
00:19:10,040 --> 00:19:12,400
Let's go to him now live on location.

448
00:19:12,400 --> 00:19:14,200
Mr. Popey, what are you learning?

449
00:19:14,200 --> 00:19:17,720
So I tried it out on a new Pi B Plus 3,

450
00:19:17,720 --> 00:19:20,920
wherever the new one is, the fast one.

451
00:19:20,920 --> 00:19:25,160
And I used a Debian Stretch Raspbian image

452
00:19:25,160 --> 00:19:28,600
that I downloaded from the Raspberry Pi website,

453
00:19:28,600 --> 00:19:32,020
chucked it on a stick and then grabbed the Deb,

454
00:19:32,020 --> 00:19:35,520
installed it, ran it, and then connected to another machine

455
00:19:35,520 --> 00:19:38,660
on my network that had Steam installed,

456
00:19:38,660 --> 00:19:41,240
plugged in an Xbox 360 controller into the Raspberry Pi

457
00:19:41,240 --> 00:19:43,520
and streamed a game directly to my Raspberry Pi

458
00:19:43,520 --> 00:19:45,280
from my Steam machine.

459
00:19:45,280 --> 00:19:47,040
And it worked pretty good.

460
00:19:47,040 --> 00:19:47,880
It was okay.

461
00:19:47,880 --> 00:19:50,100
There was a few network stutters,

462
00:19:50,100 --> 00:19:52,360
but other than that, I mean, it's beta quality,

463
00:19:52,360 --> 00:19:53,320
but it worked.

464
00:19:53,320 --> 00:19:54,640
It worked just fine.

465
00:19:54,640 --> 00:19:57,280
How would you rate the quality of your Wi-Fi in your home?

466
00:19:57,280 --> 00:19:59,240
Because it seems like that's a pretty important component.

467
00:19:59,240 --> 00:20:00,080
Yeah.

468
00:20:00,080 --> 00:20:03,200
Wi-Fi in my house is middling to shitty.

469
00:20:03,200 --> 00:20:07,760
And so that wouldn't have helped,

470
00:20:07,760 --> 00:20:10,980
but I did do the test that it does internally

471
00:20:10,980 --> 00:20:12,720
and it said it was fine.

472
00:20:12,720 --> 00:20:17,720
I didn't have a super high frame rate game.

473
00:20:17,920 --> 00:20:19,820
I was playing Ultimate Chicken Horse,

474
00:20:19,820 --> 00:20:22,040
which is a puzzle game and, you know,

475
00:20:22,040 --> 00:20:23,940
but still it's one of these things

476
00:20:23,940 --> 00:20:24,960
where you're standing on a platform

477
00:20:24,960 --> 00:20:26,560
and if you're one pixel off, you fall off.

478
00:20:26,560 --> 00:20:29,120
So yeah, it still could affect gameplay

479
00:20:30,040 --> 00:20:32,600
and it wasn't perfect, but like I say, it's beta quality,

480
00:20:32,600 --> 00:20:34,280
but it's worth trying out

481
00:20:34,280 --> 00:20:38,720
and could be a good opportunity to dedicate Raspberry Pi

482
00:20:38,720 --> 00:20:41,400
to sit underneath the TV and play some games,

483
00:20:41,400 --> 00:20:44,960
streamed from a hulking great loud Steam machine

484
00:20:44,960 --> 00:20:46,320
somewhere else in the house.

485
00:20:46,320 --> 00:20:47,720
Yeah.

486
00:20:47,720 --> 00:20:49,480
Well, if this is part of the strategy,

487
00:20:49,480 --> 00:20:52,540
maybe they're gonna go Netflix on this.

488
00:20:52,540 --> 00:20:55,320
Like when they said that they're gonna rely

489
00:20:55,320 --> 00:20:57,320
on the quote unquote app,

490
00:20:57,320 --> 00:21:00,000
maybe what they really meant was full spectrum domination

491
00:21:00,000 --> 00:21:01,780
of all devices like Netflix did.

492
00:21:01,780 --> 00:21:04,080
Like when Netflix started streaming,

493
00:21:05,540 --> 00:21:08,400
it was called Instant Watch

494
00:21:08,400 --> 00:21:10,680
and it was supplemental and free

495
00:21:10,680 --> 00:21:13,680
if you had a DVD subscription, right?

496
00:21:13,680 --> 00:21:16,680
And then they had the Instant Watch service,

497
00:21:16,680 --> 00:21:19,160
which you could watch in your web browser

498
00:21:19,160 --> 00:21:21,400
if you were on Windows or Mac or something.

499
00:21:21,400 --> 00:21:23,560
I mean, we all remember the dark days.

500
00:21:23,560 --> 00:21:26,040
Yeah, it took years to get on Netflix on Linux

501
00:21:26,040 --> 00:21:27,320
and then there was all these different hacks

502
00:21:27,320 --> 00:21:29,560
and ways you could do it for years.

503
00:21:29,560 --> 00:21:34,160
And in this intervening time between the DVD service

504
00:21:34,160 --> 00:21:37,400
and now where it's at, they launched, well, they didn't,

505
00:21:37,400 --> 00:21:38,680
but in partnership with Roku,

506
00:21:38,680 --> 00:21:41,280
they launched the Netflix box,

507
00:21:41,280 --> 00:21:43,640
which later became the Roku,

508
00:21:43,640 --> 00:21:45,200
which is an entire platform now.

509
00:21:45,200 --> 00:21:50,200
And now everything you buy from toasters to televisions

510
00:21:50,200 --> 00:21:53,880
has a Netflix app built into it, at least in the States.

511
00:21:53,880 --> 00:21:58,520
And if Valve could go somewhere in this direction

512
00:21:58,520 --> 00:22:00,880
and maybe they could get pre-installed

513
00:22:00,880 --> 00:22:05,880
on things like the Nvidia Shield TV or a Roku box,

514
00:22:05,940 --> 00:22:08,620
or maybe even a smart TV, if it's a decent one,

515
00:22:09,720 --> 00:22:11,960
then the death of the Steam link starts

516
00:22:11,960 --> 00:22:13,260
to make a little more sense, doesn't it?

517
00:22:13,260 --> 00:22:15,660
Because they're following the Netflix model at that point,

518
00:22:15,660 --> 00:22:16,980
which seems to have worked.

519
00:22:16,980 --> 00:22:18,200
You don't have to buy a new device.

520
00:22:18,200 --> 00:22:19,560
You just have to install a new app

521
00:22:19,560 --> 00:22:20,600
on the device you already have.

522
00:22:20,600 --> 00:22:21,980
And I guess figure out a way

523
00:22:21,980 --> 00:22:23,360
to have a controller connect to it.

524
00:22:23,360 --> 00:22:24,560
So maybe not every device.

525
00:22:24,560 --> 00:22:25,400
Yeah, there is that.

526
00:22:25,400 --> 00:22:27,280
But really with Bluetooth,

527
00:22:27,280 --> 00:22:29,320
that your options are wider and wider.

528
00:22:29,320 --> 00:22:32,160
And I don't know about you,

529
00:22:32,160 --> 00:22:34,760
but I don't really feel like buying another box.

530
00:22:34,760 --> 00:22:39,120
I may have bought the next Steam link, but probably not.

531
00:22:39,120 --> 00:22:40,640
I don't have a 4K television.

532
00:22:40,640 --> 00:22:42,640
I mean, and that's because you're a niche person

533
00:22:42,640 --> 00:22:45,480
who knows it exists and might have considered it.

534
00:22:45,480 --> 00:22:48,280
It seems like the discoverability of something

535
00:22:48,280 --> 00:22:49,760
in an app store is a little bit better.

536
00:22:49,760 --> 00:22:50,840
And I think people are sick and tired

537
00:22:50,840 --> 00:22:52,240
of buying these set-top boxes

538
00:22:52,240 --> 00:22:54,360
and hooking up another box to their television.

539
00:22:54,360 --> 00:22:55,680
Yeah, and then they have to get a new receiver

540
00:22:55,680 --> 00:22:56,800
because you have so many different things

541
00:22:56,800 --> 00:22:58,920
that you have to plug in to, ugh.

542
00:22:58,920 --> 00:23:00,280
They might be onto something here.

543
00:23:00,280 --> 00:23:02,160
And if they can let you roll it on a few

544
00:23:02,160 --> 00:23:05,000
of your own devices, they integrate it into Steam OS.

545
00:23:05,000 --> 00:23:06,860
So if you build a Steam machine, it's just built in.

546
00:23:06,860 --> 00:23:09,000
You have Raspberry Pi options.

547
00:23:09,000 --> 00:23:12,560
All of a sudden, I'm starting to like their new strategy.

548
00:23:12,560 --> 00:23:14,720
So we'll see where this goes.

549
00:23:14,720 --> 00:23:17,680
And I think I kind of want to try it out.

550
00:23:17,680 --> 00:23:18,560
Kind of want to play around,

551
00:23:18,560 --> 00:23:20,040
maybe compare it to the Steam link one day,

552
00:23:20,040 --> 00:23:21,840
the actual physical hardware.

553
00:23:21,840 --> 00:23:24,680
Why don't we take a moment and say congratulations

554
00:23:24,680 --> 00:23:27,120
to friend of the show, the handsome Barton George,

555
00:23:27,120 --> 00:23:29,920
who is celebrating with his team

556
00:23:29,920 --> 00:23:34,520
six fricking years of Sputnik.

557
00:23:34,520 --> 00:23:36,800
It all started in the beginning of 2012

558
00:23:36,800 --> 00:23:39,360
with Barton's pitch to an internal innovation committee

559
00:23:39,360 --> 00:23:40,720
that they had at Dell.

560
00:23:40,720 --> 00:23:43,440
Like their own internal seed fund

561
00:23:43,440 --> 00:23:45,300
that they could use on a project internally

562
00:23:45,300 --> 00:23:46,360
if somebody had something good.

563
00:23:46,360 --> 00:23:48,040
And then a month after the pitch,

564
00:23:48,040 --> 00:23:52,200
the team or whoever he was pitching to seemed to like it.

565
00:23:52,200 --> 00:23:54,520
The committee gave him the go

566
00:23:54,520 --> 00:23:56,720
for this quote unquote exploratory project

567
00:23:56,720 --> 00:23:59,360
to test out the idea of a developer laptop.

568
00:23:59,360 --> 00:24:00,560
Just test the waters.

569
00:24:00,560 --> 00:24:02,760
Thankfully, I mean, there was an interested

570
00:24:02,760 --> 00:24:04,440
and supportive community.

571
00:24:04,440 --> 00:24:05,880
So with enough support,

572
00:24:05,880 --> 00:24:07,960
people actually said that they wanted this.

573
00:24:07,960 --> 00:24:11,040
It became a real product on November 29th,

574
00:24:11,040 --> 00:24:13,040
way back in 2012.

575
00:24:13,040 --> 00:24:16,180
The first Dell XPS 13 developer edition

576
00:24:16,180 --> 00:24:17,020
was born.

577
00:24:17,020 --> 00:24:19,480
Yeah, I remember the week I got to cover that

578
00:24:19,480 --> 00:24:21,640
in the Linux action news or in the Linux action show.

579
00:24:21,640 --> 00:24:23,480
And man, huge.

580
00:24:23,480 --> 00:24:26,480
What a big day, Dell, a shipping a Linux,

581
00:24:26,480 --> 00:24:28,800
like offered legit Linux laptop.

582
00:24:28,800 --> 00:24:29,760
And it was announced.

583
00:24:29,760 --> 00:24:32,480
And then it was before the orders were available,

584
00:24:32,480 --> 00:24:34,780
people figured out like which Windows version you could buy

585
00:24:34,780 --> 00:24:35,920
that was gonna be the same thing,

586
00:24:35,920 --> 00:24:38,160
both Broadcom wireless and yeah.

587
00:24:38,160 --> 00:24:39,780
But now fast forward,

588
00:24:41,560 --> 00:24:43,960
they're on, they're the seventh generation of laptop.

589
00:24:43,960 --> 00:24:44,880
So it's been six years.

590
00:24:44,880 --> 00:24:47,760
They've done seven generations of that laptop,

591
00:24:47,760 --> 00:24:50,420
shipping it with 1804 by default right now.

592
00:24:50,420 --> 00:24:51,440
And then they've extended that

593
00:24:51,440 --> 00:24:52,880
to the precision workstation line,

594
00:24:52,880 --> 00:24:54,080
which I just recently reviewed,

595
00:24:54,080 --> 00:24:56,500
which I think is a pretty killer system.

596
00:24:56,500 --> 00:24:58,800
And I don't think they're stopping.

597
00:24:58,800 --> 00:25:02,240
In fact, I think they have demonstrated to the market

598
00:25:02,240 --> 00:25:06,920
that this is a viable consumer segment to sell to.

599
00:25:06,920 --> 00:25:09,700
And I personally believe it's played a part

600
00:25:09,700 --> 00:25:13,620
in why you see the subsystem for Linux on Windows 10,

601
00:25:13,620 --> 00:25:18,620
and why you see Linux capabilities on Chrome OS.

602
00:25:18,840 --> 00:25:23,080
And why I think ISH or Ish,

603
00:25:23,080 --> 00:25:25,120
the Linux environment for iOS

604
00:25:25,120 --> 00:25:27,240
is smashingly popular right now.

605
00:25:27,240 --> 00:25:30,480
Like people are going crazy about this.

606
00:25:30,480 --> 00:25:35,160
So I had a chance to chat with the developer of ISH,

607
00:25:35,160 --> 00:25:36,520
and it was just a quick chat.

608
00:25:36,520 --> 00:25:40,560
He was fortunately very accommodating

609
00:25:40,560 --> 00:25:41,540
and willing to join me.

610
00:25:41,540 --> 00:25:44,400
And just, I wanted to talk about why he's doing this.

611
00:25:44,400 --> 00:25:46,440
And I think it all plays a role here.

612
00:25:46,440 --> 00:25:48,160
I think it's all part of a bigger picture

613
00:25:48,160 --> 00:25:52,200
about a common Linux runtime and environment

614
00:25:52,200 --> 00:25:56,320
that developers want, and admins, and system administrators.

615
00:25:56,320 --> 00:25:58,540
So I had a chance to talk to this guy.

616
00:25:58,540 --> 00:25:59,960
His name is Theodore.

617
00:25:59,960 --> 00:26:02,320
And Mr. West, go ahead and play our clip.

618
00:26:02,320 --> 00:26:04,640
So Theodore, welcome to Linux Unplugged,

619
00:26:04,640 --> 00:26:07,820
and congratulations on all the attention ISH is getting.

620
00:26:07,820 --> 00:26:12,600
Yeah, it's been honestly surreal to see it just go

621
00:26:12,600 --> 00:26:15,180
from like 20 stick-up GitHub stars

622
00:26:15,180 --> 00:26:16,720
to a few weeks later, 2,000.

623
00:26:16,720 --> 00:26:18,780
I feel like there's like three podcasts

624
00:26:18,780 --> 00:26:21,060
I listen to right now that are talking about it.

625
00:26:21,060 --> 00:26:22,960
So it's a Linux shell for iOS,

626
00:26:22,960 --> 00:26:25,340
and I thought maybe I kind of wanted to just pick your brain

627
00:26:25,340 --> 00:26:26,920
on this crazy project.

628
00:26:26,920 --> 00:26:30,420
And also, maybe we could start even lower.

629
00:26:30,420 --> 00:26:34,500
Like don't you have to emulate an entire x86 basic system

630
00:26:34,500 --> 00:26:35,480
to pull this off?

631
00:26:35,480 --> 00:26:37,780
Yeah, this took like a year and a half

632
00:26:37,780 --> 00:26:41,640
to get to the stage where I could actually run it

633
00:26:41,640 --> 00:26:44,320
on an iPod, on an iDevice.

634
00:26:44,320 --> 00:26:45,160
Wow.

635
00:26:45,160 --> 00:26:47,320
So yeah, it was a big project.

636
00:26:47,320 --> 00:26:49,520
I mean, the real reason I've been doing this

637
00:26:49,520 --> 00:26:53,920
is to learn everything I can about Linux and x86,

638
00:26:53,920 --> 00:26:56,240
because it's just an interesting topic to me.

639
00:26:56,240 --> 00:26:58,200
Are you by day a Mac user?

640
00:26:58,200 --> 00:27:00,280
You're not already like a Linux user

641
00:27:00,280 --> 00:27:02,560
who's just trying to get Linux on an iOS device.

642
00:27:02,560 --> 00:27:04,720
No, I mean, I'm a Mac user.

643
00:27:04,720 --> 00:27:07,480
I also sometimes use Linux in a VM.

644
00:27:07,480 --> 00:27:09,000
Oh, OK.

645
00:27:09,000 --> 00:27:13,400
Like for at least six months, I was developing-ish under Linux,

646
00:27:13,400 --> 00:27:15,360
and then I ported it to Mac.

647
00:27:15,360 --> 00:27:18,200
Oh, that is really interesting.

648
00:27:18,200 --> 00:27:21,000
Is that phase, the x86 emulation?

649
00:27:21,000 --> 00:27:25,700
That was when I was getting the x86 emulation to work.

650
00:27:25,700 --> 00:27:28,360
This was before it could have all run on an iPad.

651
00:27:28,360 --> 00:27:31,060
Now, is that like QMU under the hood?

652
00:27:31,060 --> 00:27:33,240
How are you doing that?

653
00:27:33,240 --> 00:27:35,360
I wrote my own x86 emulator for this.

654
00:27:35,360 --> 00:27:37,200
Oh, you madman.

655
00:27:37,200 --> 00:27:41,440
Yeah, exactly, which is why it took so long.

656
00:27:41,440 --> 00:27:43,320
But it must have been an interesting experiment.

657
00:27:43,320 --> 00:27:45,520
Oh, yeah.

658
00:27:45,520 --> 00:27:50,420
Yeah, QMU can't run on iOS because of the restrictions

659
00:27:50,420 --> 00:27:52,220
of the sandbox, because it's doing

660
00:27:52,220 --> 00:27:55,040
dynamic binary translation.

661
00:27:55,040 --> 00:27:58,760
The sandbox doesn't let you have any executable code that

662
00:27:58,760 --> 00:28:00,800
didn't come with the app.

663
00:28:00,800 --> 00:28:03,320
So it has to be done with an actual emulator

664
00:28:03,320 --> 00:28:07,160
of the kind that runs each instruction with C code.

665
00:28:07,160 --> 00:28:09,000
To try and make it a little faster,

666
00:28:09,000 --> 00:28:11,880
I decided that I'm going to now write an assembly language

667
00:28:11,880 --> 00:28:13,720
implementation of every instruction,

668
00:28:13,720 --> 00:28:17,680
so that at the end of the assembly language gadget,

669
00:28:17,680 --> 00:28:20,400
I can just make a direct jump to that construction

670
00:28:20,400 --> 00:28:23,480
and hopefully save a little time with decoding.

671
00:28:23,480 --> 00:28:25,360
That's pretty clever.

672
00:28:25,360 --> 00:28:28,240
And so once you got the x86 system working,

673
00:28:28,240 --> 00:28:32,040
you had to pick a Linux base, and you went with Alpine.

674
00:28:32,040 --> 00:28:33,280
That's an interesting choice.

675
00:28:33,280 --> 00:28:36,500
Yeah, that's because it is the smallest Linux distribution

676
00:28:36,500 --> 00:28:38,440
ever created.

677
00:28:38,440 --> 00:28:44,320
The result is that the app is like a three megabyte download.

678
00:28:44,320 --> 00:28:45,840
And it includes an entire Linux distro

679
00:28:45,840 --> 00:28:47,960
that has a package manager and can install anything.

680
00:28:47,960 --> 00:28:48,880
That's a great point.

681
00:28:48,880 --> 00:28:49,400
It is.

682
00:28:49,400 --> 00:28:50,080
It's impressive.

683
00:28:50,080 --> 00:28:52,080
And the only way to really get my hands on it

684
00:28:52,080 --> 00:28:54,760
is to go through TestFlight right now.

685
00:28:54,760 --> 00:28:57,360
And I feel like that maybe we should talk about that.

686
00:28:57,360 --> 00:28:58,760
It seems like that could potentially

687
00:28:58,760 --> 00:28:59,940
be the big elephant in the room, is you

688
00:28:59,940 --> 00:29:01,980
could end up spending, theoretically, what,

689
00:29:01,980 --> 00:29:03,480
two years on this project?

690
00:29:03,480 --> 00:29:05,920
And then Apple just never accepts it to the app store.

691
00:29:05,920 --> 00:29:07,840
I mean, that could happen.

692
00:29:07,840 --> 00:29:11,640
But I've already learned so much about how Linux works

693
00:29:11,640 --> 00:29:13,880
and about how x86 works.

694
00:29:13,880 --> 00:29:15,720
Even if that happens, it's still worth it.

695
00:29:15,720 --> 00:29:19,500
And it seems like you've struck upon a real nerve here,

696
00:29:19,500 --> 00:29:22,400
that there is a bit of a need for a command line

697
00:29:22,400 --> 00:29:25,080
like environment on an iOS device, especially the iPad

698
00:29:25,080 --> 00:29:25,600
Pro.

699
00:29:25,600 --> 00:29:28,760
Yeah, the amount of interest that I've seen on this

700
00:29:28,760 --> 00:29:32,120
has really kind of surprised me, because who wants

701
00:29:32,120 --> 00:29:35,360
to program on an iPad?

702
00:29:35,360 --> 00:29:38,760
But yeah, apparently people do, because Apple

703
00:29:38,760 --> 00:29:41,760
has been telling them that their iPad is essentially a computer.

704
00:29:41,760 --> 00:29:43,800
So they want to now be able to program.

705
00:29:43,800 --> 00:29:45,320
There's all these little edge cases

706
00:29:45,320 --> 00:29:48,120
where you've got a great portable system,

707
00:29:48,120 --> 00:29:50,480
but you just need access to a command line utility.

708
00:29:50,480 --> 00:29:51,480
Maybe it's SSH.

709
00:29:51,480 --> 00:29:53,040
Maybe it's something like YouTube DL.

710
00:29:53,040 --> 00:29:53,540
Who knows?

711
00:29:53,540 --> 00:29:54,880
It's just one of these things.

712
00:29:54,880 --> 00:29:56,280
Everybody's got their edge case.

713
00:29:56,280 --> 00:29:58,120
Yeah, that is true.

714
00:29:58,120 --> 00:30:02,600
There are plenty of nice command line utilities.

715
00:30:02,600 --> 00:30:05,560
There are plenty of things I can do easily on the command line.

716
00:30:05,560 --> 00:30:08,800
But on an iPad, I would have to go searching through the App

717
00:30:08,800 --> 00:30:12,160
Store, maybe find some app that costs $5.99.

718
00:30:12,160 --> 00:30:13,500
I mean, who am I, Theodore?

719
00:30:13,500 --> 00:30:15,160
But if I was sitting at Apple right now

720
00:30:15,160 --> 00:30:16,580
and I was looking at the market, I

721
00:30:16,580 --> 00:30:20,160
would be looking at the success of the Windows subsystem

722
00:30:20,160 --> 00:30:21,840
for Linux on Windows 10.

723
00:30:21,840 --> 00:30:26,000
And I would be looking at Google adding Linux app and command

724
00:30:26,000 --> 00:30:28,520
line capabilities to Chrome OS, which

725
00:30:28,520 --> 00:30:30,880
was always supposed to be the most simple OS out there.

726
00:30:30,880 --> 00:30:32,380
It's just nothing but a web browser.

727
00:30:32,380 --> 00:30:34,780
And now you can get a Debian command line.

728
00:30:34,780 --> 00:30:39,000
And iOS is sort of the oddball out on this.

729
00:30:39,000 --> 00:30:42,640
Yeah, it's like the only OS that doesn't

730
00:30:42,640 --> 00:30:48,080
have a built-in Linux or Unix-like shell.

731
00:30:48,080 --> 00:30:50,400
So yeah, I'm really hoping that Apple

732
00:30:50,400 --> 00:30:54,360
will see the demand on this and realize that it's something

733
00:30:54,360 --> 00:30:56,400
that they should think about.

734
00:30:56,400 --> 00:30:59,160
I mean, the fact that they haven't yanked it

735
00:30:59,160 --> 00:31:01,720
from test flight already is, I guess,

736
00:31:01,720 --> 00:31:02,800
a bit of a positive signal.

737
00:31:02,800 --> 00:31:04,560
Yeah, yeah, that's a good way to look at it.

738
00:31:04,560 --> 00:31:05,840
That's what I was thinking when I installed it.

739
00:31:05,840 --> 00:31:08,520
The fact that they're doing this is a potential signal

740
00:31:08,520 --> 00:31:11,240
because I hope they recognize it might not even

741
00:31:11,240 --> 00:31:12,760
be that people want the command line.

742
00:31:12,760 --> 00:31:15,200
Because I suppose it would never happen, right?

743
00:31:15,200 --> 00:31:18,680
But in theory, Apple could ship a Bash shell app that

744
00:31:18,680 --> 00:31:21,400
would give you access to the Unix

745
00:31:21,400 --> 00:31:24,560
subsystem that may be rolling around underneath iOS.

746
00:31:24,560 --> 00:31:26,680
But they're not likely going to do that, are they?

747
00:31:26,680 --> 00:31:28,160
And people want Linux.

748
00:31:28,160 --> 00:31:34,520
No, I mean, if they shipped a Bash shell with iOS,

749
00:31:34,520 --> 00:31:36,000
that would essentially be a jailbreak.

750
00:31:36,000 --> 00:31:36,500
Right.

751
00:31:36,500 --> 00:31:37,000
Yeah.

752
00:31:40,040 --> 00:31:42,960
I tell you it'd be more shocking than a lot of the other things

753
00:31:42,960 --> 00:31:43,760
Apple has announced.

754
00:31:43,760 --> 00:31:45,760
It's more shocking than USB-C on the iPad Pro.

755
00:31:45,760 --> 00:31:48,360
It would be unheard of.

756
00:31:48,360 --> 00:31:50,920
But at the same time, Theodore, I have to be honest,

757
00:31:50,920 --> 00:31:53,800
the technologist in me cries a little bit

758
00:31:53,800 --> 00:31:56,760
that you have to construct an entire virtual machine

759
00:31:56,760 --> 00:31:59,880
on a mobile device to get a command line.

760
00:31:59,880 --> 00:32:01,840
Yeah.

761
00:32:01,840 --> 00:32:04,720
It's kind of disappointing, honestly.

762
00:32:04,720 --> 00:32:07,200
And it also makes it incredibly slow.

763
00:32:07,200 --> 00:32:10,320
Well, you've got an amazing performance.

764
00:32:10,320 --> 00:32:13,120
And like you mentioned earlier, size out of this, too.

765
00:32:13,120 --> 00:32:14,000
I'm very impressed.

766
00:32:14,000 --> 00:32:16,200
But I wonder if this thing isn't going

767
00:32:16,200 --> 00:32:17,880
to just start growing like crazy.

768
00:32:17,880 --> 00:32:20,400
Because you must be having feature requests coming in

769
00:32:20,400 --> 00:32:22,400
like nuts for everybody's little edge case.

770
00:32:22,400 --> 00:32:23,080
Oh, yeah.

771
00:32:23,080 --> 00:32:27,080
My GitHub issues page is filled with those.

772
00:32:27,080 --> 00:32:30,440
There's an issue that's titled, improve the performance.

773
00:32:30,440 --> 00:32:32,880
Yes, I saw that.

774
00:32:32,880 --> 00:32:34,040
And that's like, oh, thanks.

775
00:32:34,040 --> 00:32:35,400
OK, very helpful.

776
00:32:35,400 --> 00:32:36,880
OK.

777
00:32:36,880 --> 00:32:40,360
I mean, yeah, if anyone has any brilliant ideas

778
00:32:40,360 --> 00:32:42,680
on how to make this faster without jailbreaking

779
00:32:42,680 --> 00:32:45,840
their device, please tell me.

780
00:32:45,840 --> 00:32:47,920
I mean, really, it is just you right now, yeah?

781
00:32:47,920 --> 00:32:48,440
Yeah.

782
00:32:48,440 --> 00:32:49,820
Do you want to keep it that way?

783
00:32:49,820 --> 00:32:51,620
Would you want to actually make this a?

784
00:32:51,620 --> 00:32:53,120
I would love to have contributions.

785
00:32:53,120 --> 00:32:55,120
I've gotten quite a few pull requests, actually,

786
00:32:55,120 --> 00:32:59,320
from people who want to fix this or that system call.

787
00:32:59,320 --> 00:33:01,800
And that's been really great.

788
00:33:01,800 --> 00:33:04,120
So I would, of course, love to have more of that.

789
00:33:04,120 --> 00:33:05,440
And you pronounce it ish, right?

790
00:33:05,440 --> 00:33:07,960
So ish itself, is it GPL, or what is it right now?

791
00:33:07,960 --> 00:33:12,040
It is GPL, GPL version 3, which does probably

792
00:33:12,040 --> 00:33:14,360
a pretty good job of protecting against anyone

793
00:33:14,360 --> 00:33:15,760
who wants to try and sell it.

794
00:33:15,760 --> 00:33:17,340
And you're touching a lot of Linux,

795
00:33:17,340 --> 00:33:19,840
so I think that all makes a lot of sense.

796
00:33:19,840 --> 00:33:21,720
So you are open to the idea of maybe making

797
00:33:21,720 --> 00:33:23,040
this a bit of a larger project.

798
00:33:23,040 --> 00:33:25,280
Of course, I mean, this is a really tricky thing

799
00:33:25,280 --> 00:33:26,440
you're doing here, Theodore.

800
00:33:26,440 --> 00:33:28,440
This is some seriously low-level stuff.

801
00:33:28,440 --> 00:33:29,360
I'm really impressed.

802
00:33:29,360 --> 00:33:30,840
Yeah.

803
00:33:30,840 --> 00:33:31,560
I mean.

804
00:33:31,560 --> 00:33:32,920
I don't know if everybody could pick that up.

805
00:33:32,920 --> 00:33:33,600
You know what I mean?

806
00:33:33,600 --> 00:33:34,920
That's not something that most people

807
00:33:34,920 --> 00:33:37,600
are going to roll in and be able to solve those problems.

808
00:33:37,600 --> 00:33:39,280
Yeah.

809
00:33:39,280 --> 00:33:40,840
Really, again, I say somebody at Apple

810
00:33:40,840 --> 00:33:43,920
ought to just hire you up and make this an official project.

811
00:33:43,920 --> 00:33:45,760
Man, I would love that.

812
00:33:45,760 --> 00:33:48,080
All right, well, if people are listening right now

813
00:33:48,080 --> 00:33:50,160
and they're excited about perhaps getting

814
00:33:50,160 --> 00:33:53,000
a legitimate Linux command line on an iOS device,

815
00:33:53,000 --> 00:33:54,200
we've been talking iPad.

816
00:33:54,200 --> 00:33:56,920
But you can run it on a phone, too, right?

817
00:33:56,920 --> 00:33:58,840
Yeah, it works perfectly fine there.

818
00:33:58,840 --> 00:34:00,000
Or even a touch.

819
00:34:00,000 --> 00:34:00,660
Yeah.

820
00:34:00,660 --> 00:34:02,800
So how can people support you?

821
00:34:02,800 --> 00:34:06,360
The best way to support the development of this thing

822
00:34:06,360 --> 00:34:11,000
is to go to GitHub, find some program that doesn't work,

823
00:34:11,000 --> 00:34:12,840
and take a shot at fixing it yourself.

824
00:34:12,840 --> 00:34:16,760
And that is probably the most valuable thing

825
00:34:16,760 --> 00:34:18,960
you can do to help this project out.

826
00:34:18,960 --> 00:34:20,400
You can also give me money.

827
00:34:20,400 --> 00:34:22,960
I'm not going to say, no, I don't want your money.

828
00:34:22,960 --> 00:34:25,080
But that will motivate me to keep working on it.

829
00:34:25,080 --> 00:34:27,280
But not be as motivating as seeing

830
00:34:27,280 --> 00:34:32,800
people who care about it enough to take time to write code.

831
00:34:32,800 --> 00:34:35,120
Yeah, and I noticed a couple of times

832
00:34:35,120 --> 00:34:38,160
it's really just changing how the application does

833
00:34:38,160 --> 00:34:38,920
input or output.

834
00:34:38,920 --> 00:34:42,440
It's not major code development to get individual apps working.

835
00:34:42,440 --> 00:34:44,240
There are so many programs where the fix is

836
00:34:44,240 --> 00:34:46,880
like one line of code.

837
00:34:46,880 --> 00:34:50,720
Well, Theodore, please keep up the great work.

838
00:34:50,720 --> 00:34:52,640
You're making these devices more valuable.

839
00:34:52,640 --> 00:34:54,380
And I really appreciate your hard work.

840
00:34:54,380 --> 00:34:55,800
Thank you for coming on the show.

841
00:34:55,800 --> 00:34:57,360
And let's chat in the future.

842
00:34:57,360 --> 00:34:58,280
Oh, yeah, yeah.

843
00:34:58,280 --> 00:34:59,640
Thank you for inviting me on.

844
00:34:59,640 --> 00:35:01,200
Now, you can go get your hands on this

845
00:35:01,200 --> 00:35:03,680
if he has enough test pilot licenses still available.

846
00:35:03,680 --> 00:35:05,960
I don't really understand how that system works.

847
00:35:05,960 --> 00:35:09,000
But we'll have a link to his website in the show notes

848
00:35:09,000 --> 00:35:12,200
at linuxunplugged.com slash 278.

849
00:35:12,200 --> 00:35:14,920
So just go there and get a link to that.

850
00:35:14,920 --> 00:35:16,960
And I think this is a really nice idea

851
00:35:16,960 --> 00:35:23,080
that I'd really be bummed if Apple were to shut this down.

852
00:35:23,080 --> 00:35:26,040
Because I think a lot of us have an old iPad somewhere floating

853
00:35:26,040 --> 00:35:27,640
around that would be pretty cool to be able to pull up

854
00:35:27,640 --> 00:35:28,720
a Linux terminal on.

855
00:35:28,720 --> 00:35:30,720
Yeah, and he's gone to such lengths

856
00:35:30,720 --> 00:35:33,000
to try to be compliant.

857
00:35:33,000 --> 00:35:34,520
It's not trying to jailbreak.

858
00:35:34,520 --> 00:35:37,040
It's not trying to flout Apple's rules.

859
00:35:37,040 --> 00:35:40,640
It's just something people want to use computers for.

860
00:35:40,640 --> 00:35:45,120
And I asked him, why not just use QEMU or something?

861
00:35:45,120 --> 00:35:50,840
Why did you build an entire x86 virtual machine?

862
00:35:50,840 --> 00:35:52,960
I mean, hell of a project, but why?

863
00:35:52,960 --> 00:35:57,200
And the answer was so obvious when I asked it.

864
00:35:57,200 --> 00:35:58,760
It made me feel like an idiot.

865
00:35:58,760 --> 00:36:02,040
You can't run QEMU on the A12X.

866
00:36:02,040 --> 00:36:04,640
You're not going to be able to run any virtualizer

867
00:36:04,640 --> 00:36:08,400
on the market right now on the Apple A series processors.

868
00:36:08,400 --> 00:36:10,640
You've got to build for those chips, basically.

869
00:36:10,640 --> 00:36:13,280
And so that's what he's been doing for the last year.

870
00:36:13,280 --> 00:36:16,320
I mean, it does sound like a great project.

871
00:36:16,320 --> 00:36:17,840
Talk about a passion project, right?

872
00:36:17,840 --> 00:36:19,080
I mean, that's one of the things.

873
00:36:19,080 --> 00:36:21,560
And then to turn around and release it all as GPL.

874
00:36:21,560 --> 00:36:24,160
If you take away the iOS, he's been

875
00:36:24,160 --> 00:36:27,320
building a virtual machine for a very specialized series

876
00:36:27,320 --> 00:36:33,240
of ARM processors that millions of people have,

877
00:36:33,240 --> 00:36:35,120
and he's GPLing it all.

878
00:36:35,120 --> 00:36:36,460
That's awesome.

879
00:36:36,460 --> 00:36:37,920
I think it is really cool.

880
00:36:37,920 --> 00:36:39,520
I think that's a pretty neat story.

881
00:36:39,520 --> 00:36:41,640
So thank you to Theodore for coming on the show

882
00:36:41,640 --> 00:36:42,640
and telling us about it.

883
00:36:42,640 --> 00:36:46,280
Now let's shift gears and talk about Android,

884
00:36:46,280 --> 00:36:50,440
but maybe not Android so much in your pocket,

885
00:36:50,440 --> 00:36:52,600
but Android in the cloud.

886
00:36:52,600 --> 00:36:59,240
Now Simon on the Ubuntu blog has posted a really interesting

887
00:36:59,240 --> 00:37:03,320
rundown of how they are enabling Android

888
00:37:03,320 --> 00:37:07,520
to run on Amazon's EC2 A1 instances.

889
00:37:07,520 --> 00:37:13,400
Now those A1 instances are them new fancy AMD, or I'm sorry,

890
00:37:13,400 --> 00:37:14,240
it was almost AMD.

891
00:37:14,240 --> 00:37:14,800
It was almost.

892
00:37:14,800 --> 00:37:15,840
ARM processors.

893
00:37:15,840 --> 00:37:16,520
Yeah.

894
00:37:16,520 --> 00:37:18,160
This is an interesting story though, Wes.

895
00:37:18,160 --> 00:37:20,560
Why don't you tell us the story, what little side tangent

896
00:37:20,560 --> 00:37:23,560
that Amazon just launched ARM servers,

897
00:37:23,560 --> 00:37:27,720
but they were almost AMD ARM servers.

898
00:37:27,720 --> 00:37:30,120
Yeah, up until 2015, Amazon and AMD

899
00:37:30,120 --> 00:37:33,160
were working together on a 64-bit ARM server grade

900
00:37:33,160 --> 00:37:34,700
processor to deploy.

901
00:37:34,700 --> 00:37:37,800
I mean, of course, they want them everywhere in their data

902
00:37:37,800 --> 00:37:38,320
centers.

903
00:37:38,320 --> 00:37:39,520
It's tough to get that to work.

904
00:37:39,520 --> 00:37:41,960
It was a big deal, and of course, the project

905
00:37:41,960 --> 00:37:45,080
fell apart when, according to one well-placed source,

906
00:37:45,080 --> 00:37:48,400
AMD failed at meeting all of Amazon's performance

907
00:37:48,400 --> 00:37:49,320
requirements.

908
00:37:49,320 --> 00:37:49,920
Ouch.

909
00:37:49,920 --> 00:37:52,240
Yeah, in classic Amazon style, they went out and actually

910
00:37:52,240 --> 00:37:54,120
bought someone who had already licensed

911
00:37:54,120 --> 00:37:57,840
from ARM, a system on a chip designer, Annapurna Labs.

912
00:37:57,840 --> 00:37:59,880
And then they just put that team to work building

913
00:37:59,880 --> 00:38:01,000
all the things they wanted, right?

914
00:38:01,000 --> 00:38:03,160
Internet of Things gateways, the Nitro chipset

915
00:38:03,160 --> 00:38:04,400
that they're using.

916
00:38:04,400 --> 00:38:06,520
That's for handling network and storage tasks

917
00:38:06,520 --> 00:38:08,600
that back EC2 machines.

918
00:38:08,600 --> 00:38:10,800
So they've already got a lot going on,

919
00:38:10,800 --> 00:38:13,160
and now they've got this team of talented people

920
00:38:13,160 --> 00:38:14,120
who are designing chips.

921
00:38:14,120 --> 00:38:15,480
They've got it right in house.

922
00:38:15,480 --> 00:38:19,560
So this last week or so, Amazon announced these new rigs,

923
00:38:19,560 --> 00:38:25,520
these A1 instances, that use the custom AWS Graviton processor

924
00:38:25,520 --> 00:38:27,440
based on the ARM architecture.

925
00:38:27,440 --> 00:38:30,160
And when you read through this blog post that's

926
00:38:30,160 --> 00:38:35,480
up on Canonical's blog, blog.abuntu.com,

927
00:38:35,480 --> 00:38:39,160
they talk about using LXD containers

928
00:38:39,160 --> 00:38:45,600
to stream Android games from an EC2 instance to a mobile phone

929
00:38:45,600 --> 00:38:46,560
over the internet.

930
00:38:46,560 --> 00:38:50,960
And they are running a genuine Android environment

931
00:38:50,960 --> 00:38:53,760
and Android applications in the cloud

932
00:38:53,760 --> 00:38:56,120
and then streaming the results down to the phone.

933
00:38:56,120 --> 00:39:02,800
So I dialed up our go-to ARM expert, Mr. Wimpris.

934
00:39:02,800 --> 00:39:04,800
No, Wimpy, you were actually the one that

935
00:39:04,800 --> 00:39:05,800
linked this to me originally.

936
00:39:05,800 --> 00:39:07,600
I didn't see this until you linked it to me.

937
00:39:07,600 --> 00:39:10,720
So I wanted to pick your brain a little bit about some of this.

938
00:39:10,720 --> 00:39:13,480
This seems really far out there over a mobile network

939
00:39:13,480 --> 00:39:14,120
and all of that.

940
00:39:14,120 --> 00:39:15,800
How is this even possible?

941
00:39:15,800 --> 00:39:21,560
Yeah, so this is demonstrating a number of the technologies

942
00:39:21,560 --> 00:39:25,000
that Canonical and Ubuntu have on offer

943
00:39:25,000 --> 00:39:29,360
to model scale-out workloads in the cloud

944
00:39:29,360 --> 00:39:33,000
and then deploy that stack very, very quickly.

945
00:39:33,000 --> 00:39:35,240
So it uses MAS, which is Metal as a Service,

946
00:39:35,240 --> 00:39:38,040
and Juju, which is the orchestration component,

947
00:39:38,040 --> 00:39:39,960
and then LXD containers, which are

948
00:39:39,960 --> 00:39:43,080
containers of all of these Android instances.

949
00:39:43,080 --> 00:39:45,880
So it's kind of proving out all of this capability.

950
00:39:45,880 --> 00:39:49,040
And the applications that run inside those LXD containers

951
00:39:49,040 --> 00:39:51,440
are all snaps and what have you.

952
00:39:51,440 --> 00:39:55,320
So it's kind of demonstrating the whole product

953
00:39:55,320 --> 00:39:57,240
suite working together.

954
00:39:57,240 --> 00:39:59,800
But the reason that we have this capability

955
00:39:59,800 --> 00:40:02,600
is there are actually customers that are interested in running

956
00:40:02,600 --> 00:40:03,760
Android in the cloud.

957
00:40:03,760 --> 00:40:07,080
And this is something that we're actively working on.

958
00:40:07,080 --> 00:40:09,880
And it's unfortunate Simon, due to time zones,

959
00:40:09,880 --> 00:40:12,320
wasn't able to join us this evening.

960
00:40:12,320 --> 00:40:16,360
But he's the tech lead behind this particular group

961
00:40:16,360 --> 00:40:17,600
of technologies.

962
00:40:17,600 --> 00:40:21,560
Now, I'm struggling to understand the use case

963
00:40:21,560 --> 00:40:22,760
for Android in the cloud.

964
00:40:22,760 --> 00:40:25,000
I get game streaming, but I don't quite

965
00:40:25,000 --> 00:40:28,200
see how game streaming seems like it

966
00:40:28,200 --> 00:40:32,320
would be at its fundamental weakness over a mobile network.

967
00:40:32,320 --> 00:40:35,280
There's so many latency issues and variables.

968
00:40:35,280 --> 00:40:36,600
There's a couple of things there.

969
00:40:36,600 --> 00:40:40,080
So game streaming is certainly one of the use cases.

970
00:40:40,080 --> 00:40:41,920
And when you talk about game streaming,

971
00:40:41,920 --> 00:40:46,400
most people think about streaming H.264 video,

972
00:40:46,400 --> 00:40:48,080
a bit like the Steam Link does that we

973
00:40:48,080 --> 00:40:50,080
were talking about earlier on the Raspberry Pi

974
00:40:50,080 --> 00:40:52,480
app, for example.

975
00:40:52,480 --> 00:40:54,440
The technologies here can do one of two things.

976
00:40:54,440 --> 00:40:58,200
They can stream H.264 video, or they

977
00:40:58,200 --> 00:41:02,520
can stream the OpenGL commands.

978
00:41:02,520 --> 00:41:07,800
So in the demonstration that's in the video in the blog post,

979
00:41:07,800 --> 00:41:13,120
that's actually streaming the OpenGL commands from the cloud

980
00:41:13,120 --> 00:41:14,440
to the client device.

981
00:41:14,440 --> 00:41:18,480
So it's rendered client side using the GPU capabilities

982
00:41:18,480 --> 00:41:19,240
on the device.

983
00:41:19,240 --> 00:41:21,920
So that's one kind of distinction.

984
00:41:21,920 --> 00:41:25,160
Now, the other reason is that why game streaming is

985
00:41:25,160 --> 00:41:29,000
attractive to game developers is when you're targeting Android,

986
00:41:29,000 --> 00:41:33,400
you have a number of Android API versions that you can target.

987
00:41:33,400 --> 00:41:36,160
And depending on your generation of Android device

988
00:41:36,160 --> 00:41:38,040
that's on the client depends whether or not

989
00:41:38,040 --> 00:41:40,600
that client has access to that game.

990
00:41:40,600 --> 00:41:44,480
If you have your game or your application deployed

991
00:41:44,480 --> 00:41:48,160
in the cloud against a known API version,

992
00:41:48,160 --> 00:41:51,520
it doesn't actually matter what the client version of Android

993
00:41:51,520 --> 00:41:56,000
is, because now you're doing the compute in the cloud,

994
00:41:56,000 --> 00:41:59,000
and you're just streaming the visuals down

995
00:41:59,000 --> 00:42:00,520
to the client device.

996
00:42:00,520 --> 00:42:05,320
So you can narrow where you focus your development effort

997
00:42:05,320 --> 00:42:08,760
to a known API constraint.

998
00:42:08,760 --> 00:42:12,320
But I think you've also got CI and unit testing and stuff

999
00:42:12,320 --> 00:42:14,960
like that, like spin up 1,000 Android instances

1000
00:42:14,960 --> 00:42:17,080
to test it against various versions.

1001
00:42:17,080 --> 00:42:18,640
Right, exactly so.

1002
00:42:18,640 --> 00:42:20,960
If you want to do testing at scale,

1003
00:42:20,960 --> 00:42:25,200
having 100 or 1,000 devices is infeasible, impractical.

1004
00:42:25,200 --> 00:42:28,840
But if you want to spin up dozens, tens, hundreds,

1005
00:42:28,840 --> 00:42:32,800
thousands of instances in the cloud

1006
00:42:32,800 --> 00:42:36,360
to run your automated tests, then that's now something

1007
00:42:36,360 --> 00:42:38,800
that you can do relatively inexpensively.

1008
00:42:38,800 --> 00:42:41,200
Yeah, that seems like it could be a pretty significant use

1009
00:42:41,200 --> 00:42:42,760
case, is development testing.

1010
00:42:42,760 --> 00:42:45,640
Yeah, and the other use case is if you

1011
00:42:45,640 --> 00:42:49,440
have a sensitive application, let's say a banking

1012
00:42:49,440 --> 00:42:52,640
application, if you have that in the cloud,

1013
00:42:52,640 --> 00:42:55,200
then it can't be tampered with on the local device.

1014
00:42:55,200 --> 00:42:57,120
So if you stream it from the cloud,

1015
00:42:57,120 --> 00:43:01,720
it's sandboxed away from the users of the application,

1016
00:43:01,720 --> 00:43:04,200
so you can't pull it apart and reverse engineer it.

1017
00:43:04,200 --> 00:43:06,600
Silent Drifter, were you thinking along the lines

1018
00:43:06,600 --> 00:43:08,000
of development testing when you said you

1019
00:43:08,000 --> 00:43:09,560
can see a couple of use cases?

1020
00:43:09,560 --> 00:43:11,040
Part of it was development testing,

1021
00:43:11,040 --> 00:43:12,640
but my other thought was it would also

1022
00:43:12,640 --> 00:43:15,240
be really nice, especially where there's so much hype right

1023
00:43:15,240 --> 00:43:16,920
now about the idea of convergence,

1024
00:43:16,920 --> 00:43:18,320
that it would be really nice to be

1025
00:43:18,320 --> 00:43:21,600
able to put all of that heavy computation in the cloud.

1026
00:43:21,600 --> 00:43:24,480
And then you can offer a lot more services

1027
00:43:24,480 --> 00:43:26,000
on the application of your phone,

1028
00:43:26,000 --> 00:43:27,120
even though it's all running, you're

1029
00:43:27,120 --> 00:43:28,840
just kind of sending off the data

1030
00:43:28,840 --> 00:43:30,760
to do the heavy crunching for you.

1031
00:43:30,760 --> 00:43:31,760
Right.

1032
00:43:31,760 --> 00:43:33,800
I could definitely see that as well.

1033
00:43:33,800 --> 00:43:35,920
I think this is a pretty cool demonstration.

1034
00:43:35,920 --> 00:43:37,720
And if you want to look at the video,

1035
00:43:37,720 --> 00:43:40,840
it's about two minutes long, and it's embedded in the blog

1036
00:43:40,840 --> 00:43:41,920
post that we'll have linked.

1037
00:43:41,920 --> 00:43:44,800
And one of the nice things is it's a single Juju command

1038
00:43:44,800 --> 00:43:47,440
to set up the entire Android environment, the containers,

1039
00:43:47,440 --> 00:43:48,680
and all of it.

1040
00:43:48,680 --> 00:43:50,280
So it is, like Wimpy was saying, it's

1041
00:43:50,280 --> 00:43:52,280
a pretty good demonstration of the stack.

1042
00:43:52,280 --> 00:43:54,640
Yeah, and all of the network orchestration

1043
00:43:54,640 --> 00:43:55,840
that goes on behind it.

1044
00:43:55,840 --> 00:43:58,280
And there's another potential upside there

1045
00:43:58,280 --> 00:44:00,040
for games developers.

1046
00:44:00,040 --> 00:44:04,280
If you've got an MMO, if you have that now deployed

1047
00:44:04,280 --> 00:44:07,560
in the cloud and streamed down to the client,

1048
00:44:07,560 --> 00:44:11,320
you can have the high speed backbone network

1049
00:44:11,320 --> 00:44:15,920
infrastructure that exists in these public cloud providers

1050
00:44:15,920 --> 00:44:18,000
brokering the network interactions

1051
00:44:18,000 --> 00:44:20,400
between these multiple instances of these games

1052
00:44:20,400 --> 00:44:23,320
rather than over your cellular network.

1053
00:44:23,320 --> 00:44:29,160
So hopefully less lag and more low latency game interactions.

1054
00:44:29,160 --> 00:44:30,880
And I just realized, if it's an MMO,

1055
00:44:30,880 --> 00:44:32,360
you've also got instant anti-cheat,

1056
00:44:32,360 --> 00:44:33,320
just like with the banking app.

1057
00:44:33,320 --> 00:44:34,760
You've got anti-cheat, because in the cloud,

1058
00:44:34,760 --> 00:44:36,160
any user can't tamper with it.

1059
00:44:36,160 --> 00:44:37,400
Exactly, yeah.

1060
00:44:37,400 --> 00:44:38,960
Just like the banking application,

1061
00:44:38,960 --> 00:44:40,320
you can't tamper with the local app,

1062
00:44:40,320 --> 00:44:41,640
because there is no local app.

1063
00:44:41,640 --> 00:44:44,280
That's one way to solve the Android fragmentation problem.

1064
00:44:44,280 --> 00:44:48,640
But I think the thing that impresses me the most

1065
00:44:48,640 --> 00:44:51,640
is the capability of streaming the OpenGL commands down

1066
00:44:51,640 --> 00:44:54,720
to the client and then have the rendering done on the local GPU.

1067
00:44:54,720 --> 00:44:56,320
That's pretty slick.

1068
00:44:56,320 --> 00:44:57,440
Yeah, that's pretty neat.

1069
00:44:57,440 --> 00:44:59,680
Simon's a clever guy.

1070
00:44:59,680 --> 00:45:02,680
Maybe sometime soon, he'll be able to come on here

1071
00:45:02,680 --> 00:45:04,760
and talk to you about this in more depth.

1072
00:45:04,760 --> 00:45:06,160
Oh, I would love that.

1073
00:45:06,160 --> 00:45:10,120
But at the moment, this is a developing technology.

1074
00:45:10,120 --> 00:45:11,800
We're working alongside a few sort

1075
00:45:11,800 --> 00:45:14,400
of business partners in a couple of different areas

1076
00:45:14,400 --> 00:45:17,760
and watch this space for more news about this.

1077
00:45:17,760 --> 00:45:21,400
And hopefully, it'll come to a cloud new use soon.

1078
00:45:21,400 --> 00:45:24,480
Have you had this problem with your external GPUs

1079
00:45:24,480 --> 00:45:28,240
that I've run into, where SystemD Udev consumes

1080
00:45:28,240 --> 00:45:31,400
an entire core, and it just sits there and runs one of your cores

1081
00:45:31,400 --> 00:45:33,680
non-stops after you boot, if you boot up

1082
00:45:33,680 --> 00:45:36,800
without your Nvidia graphics card connected?

1083
00:45:36,800 --> 00:45:37,760
Have you had this?

1084
00:45:37,760 --> 00:45:38,600
I have not.

1085
00:45:38,600 --> 00:45:42,040
Oh, well, I have, as a result of trying out the GPU dock.

1086
00:45:42,040 --> 00:45:46,920
And it was causing issues with my audio because of the CPU.

1087
00:45:46,920 --> 00:45:48,800
We were really scratching our heads about this.

1088
00:45:48,800 --> 00:45:50,400
Yeah, it started really with we thought

1089
00:45:50,400 --> 00:45:51,760
we were having Jack audio issues, where

1090
00:45:51,760 --> 00:45:52,880
Jack was dropping audio.

1091
00:45:52,880 --> 00:45:54,880
And we started going through this troubleshooting

1092
00:45:54,880 --> 00:45:56,200
and troubleshooting process.

1093
00:45:56,200 --> 00:45:58,560
And it wasn't until I got into Texas and was setting up

1094
00:45:58,560 --> 00:46:01,600
and I had just bailed on Jack audio

1095
00:46:01,600 --> 00:46:03,160
that I realized I still had a problem.

1096
00:46:03,160 --> 00:46:04,880
And then I had to start troubleshooting

1097
00:46:04,880 --> 00:46:05,640
what was going on.

1098
00:46:05,640 --> 00:46:10,400
And I discovered SystemD UdevD consuming 100% of my CPU.

1099
00:46:10,400 --> 00:46:14,520
Now, there is bugs everywhere about this,

1100
00:46:14,520 --> 00:46:18,320
including there is a bug on Launchpad.

1101
00:46:18,320 --> 00:46:20,480
There's a bug on the Manjaro tracker.

1102
00:46:20,480 --> 00:46:22,360
I have a couple linked in the show notes.

1103
00:46:22,360 --> 00:46:25,800
And it seems to be a bit tricky.

1104
00:46:25,800 --> 00:46:29,120
And it doesn't actually seem to be restricted

1105
00:46:29,120 --> 00:46:31,600
to just NVIDIA cards.

1106
00:46:31,600 --> 00:46:34,640
Although they do appear to be the largest offender,

1107
00:46:34,640 --> 00:46:37,100
Bluetooth chipsets have caused this issue

1108
00:46:37,100 --> 00:46:39,640
and audio chipsets have caused this issue.

1109
00:46:39,640 --> 00:46:42,720
And in short, what it really is is

1110
00:46:42,720 --> 00:46:46,280
it's SystemD UdevD trying to connect to devices

1111
00:46:46,280 --> 00:46:49,240
and get the right drivers set up and all of these things.

1112
00:46:49,240 --> 00:46:51,240
And then it's failing to do so because it

1113
00:46:51,240 --> 00:46:53,560
can't find the device so it can't load the driver.

1114
00:46:53,560 --> 00:46:55,080
And then it gets caught in a loop.

1115
00:46:55,080 --> 00:47:00,160
And it just creates log noise forever.

1116
00:47:00,160 --> 00:47:04,720
And it starts with the NVIDIA core is being initialized.

1117
00:47:04,720 --> 00:47:06,280
And then it gives it a device number.

1118
00:47:06,280 --> 00:47:08,920
And then it says no NVIDIA graphics adapter found.

1119
00:47:08,920 --> 00:47:11,280
And the next line in the log is we've

1120
00:47:11,280 --> 00:47:14,600
unregistered the NVLink core, major device number.

1121
00:47:14,600 --> 00:47:17,220
And then it says the signature is not signed.

1122
00:47:17,220 --> 00:47:19,060
Then it says the core is being initialized.

1123
00:47:19,060 --> 00:47:20,760
Then it says the adapter can't be found.

1124
00:47:20,760 --> 00:47:22,680
Then it says it's being de-initialized.

1125
00:47:22,680 --> 00:47:24,280
And then it gives an error message.

1126
00:47:24,280 --> 00:47:25,900
And then Udev gives an error message.

1127
00:47:25,900 --> 00:47:27,820
And then the whole process, rinse and repeats,

1128
00:47:27,820 --> 00:47:31,000
over and over again for as fast as one of your CPU cores

1129
00:47:31,000 --> 00:47:32,940
can possibly facilitate it.

1130
00:47:32,940 --> 00:47:36,000
And it'll make your laptop heat up.

1131
00:47:36,000 --> 00:47:37,720
It'll drain your battery life.

1132
00:47:37,720 --> 00:47:40,020
It was really kind of awful.

1133
00:47:40,020 --> 00:47:44,800
And I feel like there's probably several ways to fix this.

1134
00:47:44,800 --> 00:47:47,800
Obviously, one is I could just get rid of the NVIDIA driver.

1135
00:47:47,800 --> 00:47:49,920
But that's sort of a Hail Mary would

1136
00:47:49,920 --> 00:47:51,540
prefer to avoid that solution.

1137
00:47:51,540 --> 00:47:53,600
I mean, you're trying to use it, right?

1138
00:47:53,600 --> 00:47:54,800
Because you have the dock.

1139
00:47:54,800 --> 00:47:55,480
That's the point.

1140
00:47:55,480 --> 00:47:55,980
Right.

1141
00:47:55,980 --> 00:47:57,720
Now when I'm traveling and I'm not hooked up

1142
00:47:57,720 --> 00:48:00,200
to the dock at the moment, I need it to be reliable.

1143
00:48:00,200 --> 00:48:02,320
And it can't be going to mucking up my audio.

1144
00:48:02,320 --> 00:48:04,120
So I did a temporary workaround just

1145
00:48:04,120 --> 00:48:07,240
to get system to Udev under control.

1146
00:48:07,240 --> 00:48:10,000
And that was just basically doing a system CTL stop system

1147
00:48:10,000 --> 00:48:12,460
to Udev and then starting it again.

1148
00:48:12,460 --> 00:48:14,400
And if you stop and start it after you've booted,

1149
00:48:14,400 --> 00:48:16,080
it behaves itself.

1150
00:48:16,080 --> 00:48:18,120
It's just simply after a cold boot

1151
00:48:18,120 --> 00:48:19,720
and you haven't stopped and started it,

1152
00:48:19,720 --> 00:48:21,600
it just goes nuts.

1153
00:48:21,600 --> 00:48:24,460
And you can see different forum posts on the internet

1154
00:48:24,460 --> 00:48:26,600
where people are trying to figure this out,

1155
00:48:26,600 --> 00:48:28,700
several about Bluetooth adapters.

1156
00:48:28,700 --> 00:48:31,760
And it's just essentially across every distro

1157
00:48:31,760 --> 00:48:36,120
that seems to have a 4.15 or later kernel.

1158
00:48:36,120 --> 00:48:40,480
And it doesn't appear to impact everybody, but it is an issue.

1159
00:48:40,480 --> 00:48:42,000
And I was really trying to figure out,

1160
00:48:42,000 --> 00:48:43,880
why is my audio so choppy?

1161
00:48:43,880 --> 00:48:44,920
What is going on?

1162
00:48:44,920 --> 00:48:46,600
And when I looked at it and realized

1163
00:48:46,600 --> 00:48:50,080
it was because of system to Udev eating up a bunch of CPU,

1164
00:48:50,080 --> 00:48:51,080
I thought, you know what?

1165
00:48:51,080 --> 00:48:52,600
The audience might have a way for me

1166
00:48:52,600 --> 00:48:54,680
to have my cake and eat it too, where I can still

1167
00:48:54,680 --> 00:48:56,160
have the driver installed.

1168
00:48:56,160 --> 00:48:57,440
But maybe I run a script.

1169
00:48:57,440 --> 00:48:59,600
I don't know, something, some workaround

1170
00:48:59,600 --> 00:49:01,960
where I don't have to do this hacky shutting down

1171
00:49:01,960 --> 00:49:03,160
of system to Udev.

1172
00:49:03,160 --> 00:49:05,880
So if you know, if you've got an idea, tweet me at chrisles

1173
00:49:05,880 --> 00:49:08,120
or linuxunplugged.com slash contact.

1174
00:49:08,120 --> 00:49:12,440
Do you use the audio interface in the dock?

1175
00:49:12,440 --> 00:49:14,040
Yes, I do when it is hooked up.

1176
00:49:14,040 --> 00:49:15,320
Yeah, because I have larger speakers that

1177
00:49:15,320 --> 00:49:16,360
are plugged into the dock, yeah.

1178
00:49:16,360 --> 00:49:18,200
Fine, I shall say no more.

1179
00:49:18,200 --> 00:49:19,120
Oh, well, I'll tell you what.

1180
00:49:19,120 --> 00:49:20,440
For the purposes of completeness,

1181
00:49:20,440 --> 00:49:22,400
in case anyone is listening to this and thinking,

1182
00:49:22,400 --> 00:49:26,440
ah, this is my problem, I have multiple audio interfaces.

1183
00:49:26,440 --> 00:49:29,040
And I don't use the one in the dock ever.

1184
00:49:29,040 --> 00:49:32,960
And I actually have that interface completely turned off,

1185
00:49:32,960 --> 00:49:36,800
which is probably why I don't see this issue, because I've

1186
00:49:36,800 --> 00:49:38,880
only ever got one audio interface that's

1187
00:49:38,880 --> 00:49:40,200
actually enabled.

1188
00:49:40,200 --> 00:49:41,600
Well, see, I figure this is going

1189
00:49:41,600 --> 00:49:44,800
to become a larger problem as Thunderbolt 3

1190
00:49:44,800 --> 00:49:46,720
is on more and more systems.

1191
00:49:46,720 --> 00:49:48,680
And more and more people try external GPUs

1192
00:49:48,680 --> 00:49:49,800
or external docks.

1193
00:49:49,800 --> 00:49:52,380
And that was one of the reasons I wanted to get the GPU dock,

1194
00:49:52,380 --> 00:49:55,840
was to actually very much try to discover if something

1195
00:49:55,840 --> 00:49:58,680
like this would happen, so that way I could come back on here

1196
00:49:58,680 --> 00:50:00,440
and say, maybe don't do it yet.

1197
00:50:00,440 --> 00:50:02,520
Or if you do, this is one of the things

1198
00:50:02,520 --> 00:50:04,880
you may potentially run into.

1199
00:50:04,880 --> 00:50:07,520
And of course, I was really cursing that decision

1200
00:50:07,520 --> 00:50:08,720
when I was trying to set up for LAN,

1201
00:50:08,720 --> 00:50:10,480
and I had 20 minutes to get on air.

1202
00:50:10,480 --> 00:50:13,360
And I thought to myself, why the hell did I make myself

1203
00:50:13,360 --> 00:50:16,080
a guinea pig on this?

1204
00:50:16,080 --> 00:50:18,560
But I feel like it's going to be something that gets

1205
00:50:18,560 --> 00:50:19,720
wider and wider adoption, so we've

1206
00:50:19,720 --> 00:50:21,040
got to figure this stuff out now.

1207
00:50:21,040 --> 00:50:24,300
And I bet there's somebody out there who already has,

1208
00:50:24,300 --> 00:50:25,440
so let me know.

1209
00:50:25,440 --> 00:50:27,060
But before we get out of here this week,

1210
00:50:27,060 --> 00:50:28,760
we've got to talk about clear Linux, which

1211
00:50:28,760 --> 00:50:32,280
seems to be getting more and more hype, more and more buzz,

1212
00:50:32,280 --> 00:50:34,200
more and more people talking about it.

1213
00:50:34,200 --> 00:50:38,160
And I guess a lot of us have always thought of it

1214
00:50:38,160 --> 00:50:40,060
as something that's for containers,

1215
00:50:40,060 --> 00:50:42,220
or something that Intel is hoping takes off

1216
00:50:42,220 --> 00:50:44,160
in the server industry.

1217
00:50:44,160 --> 00:50:47,120
Because it's a distribution that has traditionally

1218
00:50:47,120 --> 00:50:49,280
focused on security and performance,

1219
00:50:49,280 --> 00:50:51,520
it's got a rolling release model,

1220
00:50:51,520 --> 00:50:55,080
and it is really built for customization.

1221
00:50:55,080 --> 00:50:57,800
In a sense, they look at it as you fork your own version

1222
00:50:57,800 --> 00:51:00,360
of clear Linux and build it, or they have some pre-built

1223
00:51:00,360 --> 00:51:01,680
versions for you.

1224
00:51:01,680 --> 00:51:04,240
And so I wanted to take a deep dive into clear Linux

1225
00:51:04,240 --> 00:51:05,840
for a little bit in this episode.

1226
00:51:05,840 --> 00:51:08,760
And Wes had a chance to try it out,

1227
00:51:08,760 --> 00:51:11,120
and I had a chance to go dig into some of their docs

1228
00:51:11,120 --> 00:51:14,600
and watch a few talks, and thought maybe we could talk

1229
00:51:14,600 --> 00:51:15,720
a little about clear Linux.

1230
00:51:15,720 --> 00:51:19,560
So Mr. Wes, let's start with your setup, your clear Linux

1231
00:51:19,560 --> 00:51:20,480
experience.

1232
00:51:20,480 --> 00:51:22,940
You know, clear Linux, it's in a very interesting stage

1233
00:51:22,940 --> 00:51:23,760
of evolution.

1234
00:51:23,760 --> 00:51:24,800
You're absolutely right.

1235
00:51:24,800 --> 00:51:27,800
There's a lot of focus on this well-engineered and

1236
00:51:27,800 --> 00:51:29,600
architected distribution that works well

1237
00:51:29,600 --> 00:51:31,560
if you have these complicated container

1238
00:51:31,560 --> 00:51:33,240
workloads in the cloud.

1239
00:51:33,240 --> 00:51:35,280
And I think the technical merits of clear Linux

1240
00:51:35,280 --> 00:51:37,320
are some of the things that really stands out.

1241
00:51:37,320 --> 00:51:38,900
They have a lot of blog posts about it.

1242
00:51:38,900 --> 00:51:40,040
It's very well-communicated.

1243
00:51:40,040 --> 00:51:43,440
They've even got this great how to clear tutorial up

1244
00:51:43,440 --> 00:51:45,000
on GitHub that kind of teaches you

1245
00:51:45,000 --> 00:51:48,160
the unique concepts of things like bundles and mixes

1246
00:51:48,160 --> 00:51:51,740
that actually build up how clear Linux forms package sets.

1247
00:51:51,740 --> 00:51:53,400
So that's one of the key things is software

1248
00:51:53,400 --> 00:51:55,600
is shipped in these bundles.

1249
00:51:55,600 --> 00:51:58,080
And the way they do that is you put everything into a bundle,

1250
00:51:58,080 --> 00:52:00,680
and all of the dependencies for that bundle

1251
00:52:00,680 --> 00:52:03,720
are resolved at build time on the server,

1252
00:52:03,720 --> 00:52:05,280
not on the client at install time.

1253
00:52:05,280 --> 00:52:07,160
So you don't have a package manager that's figuring out

1254
00:52:07,160 --> 00:52:08,440
all the dependencies.

1255
00:52:08,440 --> 00:52:10,880
When you install that bundle, they've figured those all out

1256
00:52:10,880 --> 00:52:12,080
server-side.

1257
00:52:12,080 --> 00:52:15,800
It's kind of similar to package groups in other distributions.

1258
00:52:15,800 --> 00:52:18,340
But then one of the things they do to kind of turn this up

1259
00:52:18,340 --> 00:52:20,440
to 11 is get ready for this, kids,

1260
00:52:20,440 --> 00:52:23,680
is they turn on auto update by default.

1261
00:52:23,680 --> 00:52:27,320
And that is generally because they have a really strict

1262
00:52:27,320 --> 00:52:31,320
security turnaround policy where they have a team

1263
00:52:31,320 --> 00:52:34,760
policy of patching a vulnerability within 24 hours

1264
00:52:34,760 --> 00:52:37,560
of a fix being available.

1265
00:52:37,560 --> 00:52:39,760
24 hours to get that fix turned around.

1266
00:52:39,760 --> 00:52:42,360
So they turn on the automatic updates,

1267
00:52:42,360 --> 00:52:46,920
which generally works out to be about nine releases per week,

1268
00:52:46,920 --> 00:52:49,760
about twice per business day.

1269
00:52:49,760 --> 00:52:52,240
There's a batch of what are generally security updates

1270
00:52:52,240 --> 00:52:53,360
for clear Linux.

1271
00:52:53,360 --> 00:52:55,560
I mean, it's an interesting sort of to posture.

1272
00:52:55,560 --> 00:52:57,560
It does seem very well engineered.

1273
00:52:57,560 --> 00:52:58,560
They've thought about it.

1274
00:52:58,560 --> 00:52:59,920
They want it to be robust.

1275
00:52:59,920 --> 00:53:02,200
There's been a lot of effort put into that before

1276
00:53:02,200 --> 00:53:04,320
to even get any of this if you're going to try it.

1277
00:53:04,320 --> 00:53:06,960
It's worked as a desktop for a long time.

1278
00:53:06,960 --> 00:53:09,480
Originally, that was with XFCE.

1279
00:53:09,480 --> 00:53:11,080
They've been transitioning to Gnome Shell.

1280
00:53:11,080 --> 00:53:12,200
So that's what I tested out.

1281
00:53:12,200 --> 00:53:16,480
And they're starting to roll out support for KDE.

1282
00:53:16,480 --> 00:53:18,760
But actually, to get to that experience,

1283
00:53:18,760 --> 00:53:22,860
you had to use their longstanding text-based installer.

1284
00:53:22,860 --> 00:53:24,840
It's pretty simple, but it required a working internet

1285
00:53:24,840 --> 00:53:25,680
connection.

1286
00:53:25,680 --> 00:53:28,440
And it didn't offer a lot of customizations around RAID

1287
00:53:28,440 --> 00:53:30,680
or encryption or any of that sort of fancy stuff

1288
00:53:30,680 --> 00:53:32,720
that people might want.

1289
00:53:32,720 --> 00:53:35,840
These days, there's now a beta, a desktop beta.

1290
00:53:35,840 --> 00:53:37,640
And actually, it's pretty nice.

1291
00:53:37,640 --> 00:53:39,080
It boots right up pretty quick.

1292
00:53:39,080 --> 00:53:43,520
One thing I will say is it works offline, but it is chunky.

1293
00:53:43,520 --> 00:53:46,240
It's like a solid eight gigs after you extract it

1294
00:53:46,240 --> 00:53:50,000
and takes quite a long time to write to that flash drive.

1295
00:53:50,000 --> 00:53:51,720
Once you get into it, you've still

1296
00:53:51,720 --> 00:53:53,360
got a text-based installer UI.

1297
00:53:53,360 --> 00:53:58,300
But honestly, it's a pretty well engineered Curses interface.

1298
00:53:58,300 --> 00:54:00,280
I'm a stickler for how to configure disks.

1299
00:54:00,280 --> 00:54:03,820
And I didn't find the Clear Linux OS installer's disk

1300
00:54:03,820 --> 00:54:05,640
management really the best.

1301
00:54:05,640 --> 00:54:08,120
It did kind of mess up the first time I tried it.

1302
00:54:08,120 --> 00:54:10,360
And there could just be, thankfully, I mean,

1303
00:54:10,360 --> 00:54:12,240
it was on a test system, so it's fine.

1304
00:54:12,240 --> 00:54:14,880
But I was trying to put it on one partition,

1305
00:54:14,880 --> 00:54:17,520
and it just rewrote the whole partition table on me,

1306
00:54:17,520 --> 00:54:18,920
which I didn't expect.

1307
00:54:18,920 --> 00:54:21,040
And it doesn't provide you a lot of prompts for things

1308
00:54:21,040 --> 00:54:24,140
like, once you've set up a root partition and a boot partition,

1309
00:54:24,140 --> 00:54:25,640
then it'll let you install.

1310
00:54:25,640 --> 00:54:28,440
But I had mistakenly put slash boot slash EFI

1311
00:54:28,440 --> 00:54:29,480
as the mount point.

1312
00:54:29,480 --> 00:54:30,480
Didn't tell me anything.

1313
00:54:30,480 --> 00:54:32,480
It just didn't let me hit the Confirm button.

1314
00:54:32,480 --> 00:54:33,980
There was no error message anywhere.

1315
00:54:33,980 --> 00:54:35,960
And you have to be a little bit experienced

1316
00:54:35,960 --> 00:54:37,080
to know what you're doing.

1317
00:54:37,080 --> 00:54:39,840
So did you lose all the other partitions on that drive?

1318
00:54:39,840 --> 00:54:43,200
Not all of them, or either that or just reset up maybe

1319
00:54:43,200 --> 00:54:44,840
a couple of them.

1320
00:54:44,840 --> 00:54:47,540
It was definitely a different disk layout when I rebooted

1321
00:54:47,540 --> 00:54:49,680
and not what I expected.

1322
00:54:49,680 --> 00:54:51,760
But it is lean and mean.

1323
00:54:51,760 --> 00:54:52,800
It works really well.

1324
00:54:52,800 --> 00:54:54,460
It's pretty easy to go configure your mixes

1325
00:54:54,460 --> 00:54:56,440
and get everything like what software you want,

1326
00:54:56,440 --> 00:54:57,640
how you want it to run.

1327
00:54:57,640 --> 00:54:59,080
That part was pretty smooth.

1328
00:54:59,080 --> 00:55:01,680
Yeah, their mixes is kind of where I was going with that.

1329
00:55:01,680 --> 00:55:04,640
You get your own mix of cleared Linux

1330
00:55:04,640 --> 00:55:05,960
is kind of how they look at it.

1331
00:55:05,960 --> 00:55:09,480
And so it's fascinating the way they've

1332
00:55:09,480 --> 00:55:11,560
kind of made that distinguished.

1333
00:55:11,560 --> 00:55:16,440
Once you kind of set it up, it's your own OS in a way.

1334
00:55:16,440 --> 00:55:18,600
And then they have this stateless design

1335
00:55:18,600 --> 00:55:19,660
that they call it.

1336
00:55:19,660 --> 00:55:21,880
And what that really kind of essentially means

1337
00:55:21,880 --> 00:55:25,320
is they put default fully functional configs

1338
00:55:25,320 --> 00:55:28,160
for when you install software in slash user.

1339
00:55:28,160 --> 00:55:30,400
So if you were to start up that service or whatever,

1340
00:55:30,400 --> 00:55:33,360
in theory, it should be ready to go, fully functional, not

1341
00:55:33,360 --> 00:55:34,280
a half setup config.

1342
00:55:34,280 --> 00:55:37,200
We have to go define the port and things like that.

1343
00:55:37,200 --> 00:55:42,200
But what's interesting is those go in slash USR.

1344
00:55:42,200 --> 00:55:46,800
You can put your own overrides in slash Etsy

1345
00:55:46,800 --> 00:55:48,560
or in the home of a user account.

1346
00:55:48,560 --> 00:55:51,560
It's another place in your home folder.

1347
00:55:51,560 --> 00:55:53,200
That's not too unusual.

1348
00:55:53,200 --> 00:55:57,160
But the cool part is you can go in and just wipe out

1349
00:55:57,160 --> 00:55:58,400
all of those Etsy configs.

1350
00:55:58,400 --> 00:55:59,560
Just go RM them.

1351
00:55:59,560 --> 00:56:00,680
Just get rid of them.

1352
00:56:00,680 --> 00:56:02,000
And what you're essentially doing

1353
00:56:02,000 --> 00:56:04,520
is you're just setting the system back to defaults.

1354
00:56:04,520 --> 00:56:07,040
It's essentially like hitting the reset button.

1355
00:56:07,040 --> 00:56:09,360
And it's a default Clear Linux config,

1356
00:56:09,360 --> 00:56:12,800
because they still have all of the original configs in slash

1357
00:56:12,800 --> 00:56:13,720
USR.

1358
00:56:13,720 --> 00:56:15,640
That's one of those things is they're

1359
00:56:15,640 --> 00:56:21,120
doing things differently and not really like any other distro.

1360
00:56:21,120 --> 00:56:23,320
Arch was this new Wellspring that

1361
00:56:23,320 --> 00:56:24,520
was building things themselves.

1362
00:56:24,520 --> 00:56:26,840
But Clear Linux clearly has different goals.

1363
00:56:26,840 --> 00:56:29,960
It's minimalist in some ways, but in a lot of other ways,

1364
00:56:29,960 --> 00:56:31,800
they're going above and beyond, things

1365
00:56:31,800 --> 00:56:33,880
like their fancy Clear Boot Manager.

1366
00:56:33,880 --> 00:56:37,080
That's long been needed, and no one else has pursued that path.

1367
00:56:37,080 --> 00:56:39,320
Yeah, this is an interesting piece that I don't really

1368
00:56:39,320 --> 00:56:42,120
understand a lot about, the Clear Linux Boot Manager.

1369
00:56:42,120 --> 00:56:46,000
I do remember talking to Ikey about it ages ago.

1370
00:56:46,000 --> 00:56:47,960
And I think he worked on it to a degree.

1371
00:56:47,960 --> 00:56:50,080
And he may be back there working on it again.

1372
00:56:50,080 --> 00:56:50,880
It sounds like.

1373
00:56:50,880 --> 00:56:53,680
I don't know if this is the role he's playing there.

1374
00:56:53,680 --> 00:56:57,080
But this was something that was kind of coveted

1375
00:56:57,080 --> 00:56:58,440
by other distributions for a bit.

1376
00:56:58,440 --> 00:56:59,840
And I never really fully understood

1377
00:56:59,840 --> 00:57:02,480
why other than it was supposedly going

1378
00:57:02,480 --> 00:57:05,520
to make system updates like kernel updates rock solid.

1379
00:57:05,520 --> 00:57:09,000
Yeah, I mean, a system layered on top of all the other stuff

1380
00:57:09,000 --> 00:57:10,760
that's going on at boot to try to make sure

1381
00:57:10,760 --> 00:57:12,920
that things wouldn't fail, that it was going to have

1382
00:57:12,920 --> 00:57:14,840
a solid, reliable rollback.

1383
00:57:14,840 --> 00:57:17,240
And it really also embraced UEFI.

1384
00:57:17,240 --> 00:57:19,640
So that's another area where they are targeting

1385
00:57:19,640 --> 00:57:21,760
a lot of more modern things.

1386
00:57:21,760 --> 00:57:24,880
It's very well optimized for recent Intel processors.

1387
00:57:24,880 --> 00:57:27,040
A lot of Ferratics benchmarks keep showing that.

1388
00:57:27,040 --> 00:57:30,080
So that's another area where people are doing comparisons

1389
00:57:30,080 --> 00:57:32,080
and seeing like, oh, they've spent a lot of time.

1390
00:57:32,080 --> 00:57:35,160
They're doing non-trivial extra patches to glibc sometimes.

1391
00:57:35,160 --> 00:57:37,240
They're really looking at this.

1392
00:57:37,240 --> 00:57:39,480
And I don't think it gets a lot of attention.

1393
00:57:39,480 --> 00:57:41,320
It might see some cloud workload.

1394
00:57:41,320 --> 00:57:44,520
But if you're a power user, that might be something you want.

1395
00:57:44,520 --> 00:57:46,320
Yeah, so they talk a little bit about how

1396
00:57:46,320 --> 00:57:50,080
they build the whole stack optimized for the IA processor

1397
00:57:50,080 --> 00:57:52,840
architecture, the Intel processor architecture.

1398
00:57:52,840 --> 00:57:54,400
And they talk about one of the things

1399
00:57:54,400 --> 00:57:56,360
that they've really focused on is anything

1400
00:57:56,360 --> 00:57:58,840
that they execute that has a series of dependencies,

1401
00:57:58,840 --> 00:58:00,320
they've gone down that dependency tree

1402
00:58:00,320 --> 00:58:02,880
and optimized all of that stuff too.

1403
00:58:02,880 --> 00:58:04,260
Because they're Intel, right?

1404
00:58:04,260 --> 00:58:06,640
So why not make it as bad-ass as possible?

1405
00:58:06,640 --> 00:58:10,960
Why not make a Linux that really shows your OS?

1406
00:58:10,960 --> 00:58:13,960
And then they're combining that with this solid update

1407
00:58:13,960 --> 00:58:16,040
where they have this clear Linux boot manager that's

1408
00:58:16,040 --> 00:58:18,800
supposed to protect you from kernel upgrades.

1409
00:58:18,800 --> 00:58:21,640
They have that stateless OS where it's easy to revert.

1410
00:58:21,640 --> 00:58:23,720
And then they have this mixes concept

1411
00:58:23,720 --> 00:58:25,520
where, in their words, you compose

1412
00:58:25,520 --> 00:58:28,800
an OS for your specific use case.

1413
00:58:28,800 --> 00:58:31,440
They view it as your own Linux in a way

1414
00:58:31,440 --> 00:58:33,080
that they're just sort of upstreaming.

1415
00:58:33,080 --> 00:58:35,440
You've also now got Flatpak there.

1416
00:58:35,440 --> 00:58:39,140
So if you rely on applications provided by Flatpak,

1417
00:58:39,140 --> 00:58:40,960
that's another route for software availability.

1418
00:58:40,960 --> 00:58:41,840
Did you give that a go?

1419
00:58:41,840 --> 00:58:43,800
Did you try installing the apps via Flatpak?

1420
00:58:43,800 --> 00:58:44,300
Oh, yeah.

1421
00:58:44,300 --> 00:58:45,520
I mean, it works great.

1422
00:58:45,520 --> 00:58:47,440
They've already provided some apps that were packaged.

1423
00:58:47,440 --> 00:58:49,680
It's installed on the live by ISO and everything.

1424
00:58:49,680 --> 00:58:50,240
Really?

1425
00:58:50,240 --> 00:58:50,520
Really?

1426
00:58:50,520 --> 00:58:52,240
So how would you describe the experience

1427
00:58:52,240 --> 00:58:54,640
of using the Gnome Shell desktop and just clear Linux

1428
00:58:54,640 --> 00:58:56,160
as a desktop vehicle?

1429
00:58:56,160 --> 00:58:57,000
Not bad.

1430
00:58:57,000 --> 00:59:00,880
I mean, it's not super far deviated from Gnome defaults.

1431
00:59:00,880 --> 00:59:03,680
Honestly, though, I think the website looks good.

1432
00:59:03,680 --> 00:59:05,960
A lot of the experience is well thought out.

1433
00:59:05,960 --> 00:59:09,400
The background images and some of the theme aspects.

1434
00:59:09,400 --> 00:59:13,800
Really, I mean, it's kind of just a plain Gnome desktop.

1435
00:59:13,800 --> 00:59:16,000
So if you want that, if you just want to get to work,

1436
00:59:16,000 --> 00:59:19,840
if you want a lean, well-architected, technically

1437
00:59:19,840 --> 00:59:21,520
thought out distribution, I think

1438
00:59:21,520 --> 00:59:23,720
that's probably the space right now that it's playing.

1439
00:59:23,720 --> 00:59:25,140
It's not going to be for someone who

1440
00:59:25,140 --> 00:59:29,000
wants to try just any old Linux distribution.

1441
00:59:29,000 --> 00:59:31,240
You have to want to work to get to clear Linux.

1442
00:59:31,240 --> 00:59:34,200
But they're clearly making strides to make that easy.

1443
00:59:34,200 --> 00:59:38,560
My question, I think my main question is, is why?

1444
00:59:38,560 --> 00:59:40,880
I want to hear more from the team behind clear Linux

1445
00:59:40,880 --> 00:59:42,600
about their target audience.

1446
00:59:42,600 --> 00:59:45,200
Is this for developers who are using it for server workloads

1447
00:59:45,200 --> 00:59:46,880
and they want to run the same machine,

1448
00:59:46,880 --> 00:59:48,600
or is there a wider applicability?

1449
00:59:48,600 --> 00:59:53,720
You got to wonder if maybe they have eyes on the workstation.

1450
00:59:53,720 --> 00:59:57,160
Why shouldn't Intel's own version of Linux

1451
00:59:57,160 --> 01:00:00,320
be the premier operating system for an Intel-based workstation?

1452
01:00:00,320 --> 01:00:03,160
Seems like that's a slam dunk.

1453
01:00:03,160 --> 01:00:06,380
If anybody's going to make an OS that really makes their own hardware shine,

1454
01:00:06,380 --> 01:00:07,640
it should be them.

1455
01:00:07,640 --> 01:00:11,400
And Linux is a perfectly reasonable workstation desktop

1456
01:00:11,400 --> 01:00:13,840
that has been proven successful in many markets

1457
01:00:13,840 --> 01:00:15,880
by high-end CPUs.

1458
01:00:15,880 --> 01:00:18,000
I kind of see some logic to it, I think.

1459
01:00:18,000 --> 01:00:20,560
But I could just be kind of hope casting.

1460
01:00:20,560 --> 01:00:21,760
I think I just made that up.

1461
01:00:21,760 --> 01:00:25,080
You know, I could see it if we had the software we need.

1462
01:00:25,080 --> 01:00:29,560
If we got that all worked out, it might make a nice studio machine.

1463
01:00:29,560 --> 01:00:33,280
Yeah, or yeah, like the recording system, something like that.

1464
01:00:33,280 --> 01:00:34,040
I think so.

1465
01:00:34,040 --> 01:00:34,720
I think so.

1466
01:00:34,720 --> 01:00:36,320
Well, thanks for kicking the tires on.

1467
01:00:36,320 --> 01:00:39,920
I found the deep dive to be pretty interesting too.

1468
01:00:39,920 --> 01:00:41,800
I wondered before we went into this episode,

1469
01:00:41,800 --> 01:00:45,040
I thought, well, what is it that really makes Clear Linux cool?

1470
01:00:45,040 --> 01:00:46,760
Because I keep hearing cool stuff from the audience.

1471
01:00:46,760 --> 01:00:47,360
People love it.

1472
01:00:47,360 --> 01:00:49,120
And I'm like, well, what is it?

1473
01:00:49,120 --> 01:00:51,040
And there is some really different stuff there.

1474
01:00:51,040 --> 01:00:53,000
There is some really different thinking.

1475
01:00:53,000 --> 01:00:55,760
Like, I mean, nine releases a week?

1476
01:00:55,760 --> 01:00:57,600
Holy crap.

1477
01:00:57,600 --> 01:00:59,240
I mean, it's rolling for sure.

1478
01:00:59,240 --> 01:01:02,920
Like, that's a pretty intense release schedule.

1479
01:01:02,920 --> 01:01:03,920
You're absolutely right.

1480
01:01:03,920 --> 01:01:08,200
And I think regardless of if Clear Linux really takes off on the desktop

1481
01:01:08,200 --> 01:01:11,240
or not, for whatever value of what that means,

1482
01:01:11,240 --> 01:01:13,920
it's one of those distributions that other people in this space

1483
01:01:13,920 --> 01:01:14,960
can learn from.

1484
01:01:14,960 --> 01:01:16,800
They're pioneering new approaches that I

1485
01:01:16,800 --> 01:01:19,760
think will make all distributions better over the long term.

1486
01:01:19,760 --> 01:01:21,000
Ooh, I like that, Wes.

1487
01:01:21,000 --> 01:01:21,560
I like that.

1488
01:01:21,560 --> 01:01:23,520
Well, we'll have links to Clear Linux if you want to give it a go.

1489
01:01:23,520 --> 01:01:24,000
Try it out.

1490
01:01:24,000 --> 01:01:25,680
They just had a new version.

1491
01:01:25,680 --> 01:01:28,320
We talked about it in this week's Linux Action News.

1492
01:01:28,320 --> 01:01:30,720
And one of the quote unquote features

1493
01:01:30,720 --> 01:01:34,160
would be this new desktop live image that Wes talked about,

1494
01:01:34,160 --> 01:01:36,800
as well as that plasma version they're working on now,

1495
01:01:36,800 --> 01:01:38,600
which, you know, it gets us excited here.

1496
01:01:38,600 --> 01:01:40,680
So yeah, additional coverage on Linux Action News

1497
01:01:40,680 --> 01:01:43,640
as well as links to Clear Linux in the show notes.

1498
01:01:43,640 --> 01:01:45,520
A pretty neat looking distribution.

1499
01:01:45,520 --> 01:01:47,760
Intel's trying to actually do something different there.

1500
01:01:47,760 --> 01:01:50,880
And you got to respect that.

1501
01:01:50,880 --> 01:01:53,920
Well, Mr. Wes, that brings us to the end of this week's Unplugged.

1502
01:01:53,920 --> 01:01:56,600
Thank you to Wimpy and Popey for joining us.

1503
01:01:56,600 --> 01:02:01,040
Go check them out at the Ubuntu podcast, which rumor has it another one will be

1504
01:02:01,040 --> 01:02:01,840
out this week.

1505
01:02:01,840 --> 01:02:02,360
Hey, yo.

1506
01:02:02,360 --> 01:02:06,040
And another great episode from those guys, I'm sure.

1507
01:02:06,040 --> 01:02:08,600
And go get more Wes Payne at TechSnap.systems.

1508
01:02:08,600 --> 01:02:13,280
Wes and I do a systems network and administration podcast.

1509
01:02:13,280 --> 01:02:14,720
That's what the SNAP stands for.

1510
01:02:14,720 --> 01:02:17,040
Over there at TechSnap.systems.

1511
01:02:17,040 --> 01:02:21,000
And a reminder, we have our special recordings coming up soon.

1512
01:02:21,000 --> 01:02:25,920
Our Hope Casting, my new term, and our predictions episode

1513
01:02:25,920 --> 01:02:30,080
the day after Christmas, so December 26th,

1514
01:02:30,080 --> 01:02:33,520
and the day after New Year, so January 2nd.

1515
01:02:33,520 --> 01:02:36,960
We're recording one day later, and we're doing a special edition.

1516
01:02:36,960 --> 01:02:39,360
And we'd love to have you join our virtual log for that.

1517
01:02:39,360 --> 01:02:42,000
And get your predictions in and your Hope Casting.

1518
01:02:42,000 --> 01:02:43,600
But that's all for this week's episode.

1519
01:02:43,600 --> 01:02:44,840
Thanks so much for joining us.

1520
01:02:44,840 --> 01:02:46,440
And we'll see you back here next Tuesday.

1521
01:02:46,440 --> 01:03:15,440
Hey.

1522
01:03:16,440 --> 01:03:26,600
So I'm doing a ugly sweater party tonight, going to an ugly sweater party, and I'm not

1523
01:03:26,600 --> 01:03:31,620
gonna lie, I took the easy route and I went on Amazon and I just searched for ugly sweater.

1524
01:03:31,620 --> 01:03:36,380
It's a whole product category now, and there's a lot of ugly sweaters, and the one I got

1525
01:03:36,380 --> 01:03:39,920
is like a polyester thick shirt.

1526
01:03:39,920 --> 01:03:41,320
I don't really feel like it's a sweater.

1527
01:03:41,320 --> 01:03:45,040
I'm worried I'm gonna get called out, and I didn't know because I got it off Amazon.

1528
01:03:45,040 --> 01:03:47,280
Thick shirt, is this a technical term now?

1529
01:03:47,280 --> 01:03:48,280
I don't know how to put it, Wes.

1530
01:03:48,280 --> 01:03:51,800
It feels like a thick, it feels like multi-layer polyester shirt.

1531
01:03:51,800 --> 01:03:54,480
I don't know how to describe it, but it's very gaudy.

1532
01:03:54,480 --> 01:03:59,880
It's very ugly, and I rush-shipped it on Amazon so that way I'd have it for the trip.

1533
01:03:59,880 --> 01:04:03,880
So there I am, just with a bag, because I have the one bag rule.

1534
01:04:03,880 --> 01:04:07,960
Just a carry-on, one carry-on, and not even two, you know, a carry-on and a bag, just

1535
01:04:07,960 --> 01:04:09,540
anyways.

1536
01:04:09,540 --> 01:04:13,760
So I'm stuffing this stupid ugly sweater into the backpack, and I'm just looking at this

1537
01:04:13,760 --> 01:04:18,480
and going, what am I doing, and I forgot it at the hotel.

1538
01:04:18,480 --> 01:04:23,360
So I'm gonna run back to the hotel, grab my ugly sweater, and then race off to the ugly

1539
01:04:23,360 --> 01:04:44,360
sweater party.

