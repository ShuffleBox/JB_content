WEBVTT

00:00.000 --> 00:06.000
This is Linux Unplugged episode 37 for April 22nd, 2014.

00:30.000 --> 00:41.000
Hi everyone, and welcome to Linux Unplugged, your weekly Linux talk show.

00:41.000 --> 00:47.000
Brain knows client-side decorations are a bad idea, but it's hearts can't help but love them.

00:47.000 --> 00:48.000
My name is Chris.

00:48.000 --> 00:49.000
My name is Matt.

00:49.000 --> 00:50.000
Hey Matt, how are you doing?

00:50.000 --> 00:51.000
Doing pretty good.

00:51.000 --> 00:52.000
Good.

00:52.000 --> 00:53.000
Doing pretty good.

00:53.000 --> 00:54.000
Good.

00:54.000 --> 00:55.000
I got a little crud, so I think I might have gotten you sick on Sunday during last.

00:55.000 --> 00:56.000
Oh boy.

00:56.000 --> 00:57.000
Yeah, I'm crossing fingers.

00:57.000 --> 00:59.000
Double down on like any rituals you have.

00:59.000 --> 01:02.000
Do you have like rituals that you follow when you think you're getting sick?

01:02.000 --> 01:03.000
Theraflu.

01:03.000 --> 01:04.000
Yeah.

01:04.000 --> 01:06.000
That's number one thing, because at the end of the day, everything else is a crap shoot.

01:06.000 --> 01:07.000
Theraflu makes me don't care.

01:07.000 --> 01:08.000
And fluid.

01:08.000 --> 01:09.000
Get your fluid.

01:09.000 --> 01:13.000
Well, so this week, I want to talk to you a little bit about a few topics.

01:13.000 --> 01:18.000
We've got some 14.04 review follow-up I want to cover, and then we've got a discussion

01:18.000 --> 01:19.000
around password managers.

01:19.000 --> 01:23.000
We got the vote out in the audience, and we heard back from folks on what they use and

01:23.000 --> 01:26.000
what they like, and we're going to talk about password managers.

01:26.000 --> 01:29.000
And then, towards the end of the show, I want to talk a little bit about this client-side

01:29.000 --> 01:31.000
decoration brouhaha.

01:31.000 --> 01:34.000
Now, it's not really a big deal right now, but you've probably noticed starting about

01:34.000 --> 01:39.000
Gnome 3.10, some Gnome applications have a brand new title bar that looks very, very

01:39.000 --> 01:40.000
fancy.

01:40.000 --> 01:45.000
And it is completely breaking some other desktops the way they look, because sometimes you get

01:45.000 --> 01:46.000
the double title bar effect.

01:46.000 --> 01:50.000
We talked about this in the Linux action show a little bit in the news segment when Cinnamon

01:50.000 --> 01:51.000
came out.

01:51.000 --> 01:58.000
And the two camps essentially are the GTK folks, and now the QT folks are coming out,

01:58.000 --> 02:01.000
and the KWin developers are coming out and saying, hey, this maybe isn't such a good

02:01.000 --> 02:02.000
idea.

02:02.000 --> 02:06.000
I want to talk about what client-side decorations are, what they give us, and what the challenges

02:06.000 --> 02:07.000
are.

02:07.000 --> 02:11.000
And then I want to get the Mumble Rooms take on what they prefer, and just kind of have

02:11.000 --> 02:13.000
a discussion about that, because that seems to be something that's been brewing in the

02:13.000 --> 02:15.000
background over the last few weeks.

02:15.000 --> 02:19.000
And with Gnome 3.12 out now, they've pushed that even farther forward.

02:19.000 --> 02:21.000
So it's kind of an interesting time.

02:21.000 --> 02:23.000
There's a lot that's changing in that area.

02:23.000 --> 02:27.000
But before we get to all of that, it is tradition here on the Linux Unplugged show to talk a

02:27.000 --> 02:30.000
little bit about what you had to say from previous weeks.

02:30.000 --> 02:33.000
We have a continuing theme that runs through several episode threads.

02:33.000 --> 02:37.000
I think we're covering three or four topics that is sort of winding three or four shows

02:37.000 --> 02:38.000
together.

02:38.000 --> 02:40.000
Plus we're going to do some follow-up from the Linux action show.

02:40.000 --> 02:43.000
So the first one I wanted to kind of talk about was sort of a make good.

02:43.000 --> 02:48.000
I implied on the Linux action show on Sunday that Ubuntu 1 was totally dead, and the reality

02:48.000 --> 02:54.000
is that the file syncing service is shutting down, and the log-in authentication service

02:54.000 --> 02:55.000
is sticking around.

02:55.000 --> 02:58.000
And I knew that during the show, but I was trying to make the point that the messaging

02:58.000 --> 03:00.000
is out there now that Ubuntu 1 is shutting down.

03:00.000 --> 03:06.000
So when you're being asked to create an Ubuntu 1 account, if you've sort of loosely followed

03:06.000 --> 03:08.000
the news, it's confusing a little bit.

03:08.000 --> 03:10.000
You know, you might think, oh, Ubuntu 1's down.

03:10.000 --> 03:12.000
I knew it wasn't down, but I was making a point.

03:12.000 --> 03:16.000
But yes, I did want to make it clear that Ubuntu 1, the authentication service, is not

03:16.000 --> 03:17.000
going away.

03:17.000 --> 03:20.000
So thank you very much to James for writing that in.

03:20.000 --> 03:23.000
You'll still see Ubuntu 1 kicked around, at least for a little while.

03:23.000 --> 03:27.000
So Damon wrote in on the topic of switching to Linux, which is a thread we've been following

03:27.000 --> 03:28.000
for quite a while.

03:28.000 --> 03:29.000
He says, hi, I love the show.

03:29.000 --> 03:33.000
I found your discussion about what will make a computer user switch to Linux interesting.

03:33.000 --> 03:35.000
I have two anecdotes on the subject.

03:35.000 --> 03:38.000
First, my niece will be going to college later this year, and I wanted to give her one of

03:38.000 --> 03:42.000
my old laptops to use so that she wouldn't spend money that she didn't have on buying

03:42.000 --> 03:43.000
a Mac.

03:43.000 --> 03:46.000
I gave her a choice of Windows Vista, which came with a laptop, or Linux.

03:46.000 --> 03:50.000
She had no idea what Linux was, but she was emphatic that she did not want Windows.

03:50.000 --> 03:52.000
Hmm, that's interesting.

03:52.000 --> 03:54.000
The next step was for her to install.

03:54.000 --> 03:57.000
Being rooted in a Debian-based distribution, I started sending her screenshots from Distro

03:57.000 --> 03:59.000
Watch so that she could choose to see what she wanted.

03:59.000 --> 04:01.000
Ultimately, imagine Linux 1.

04:01.000 --> 04:05.000
Imagine Linux is a Debian-based XFCE distribution with comp as enabled.

04:05.000 --> 04:10.000
Being that she is a graphic artist, I installed applications that suit that niche, as well

04:10.000 --> 04:11.000
as applications for general use.

04:11.000 --> 04:14.000
Four months later, I'm still waiting to hear from her that she has had a problem with the

04:14.000 --> 04:15.000
laptop.

04:15.000 --> 04:17.000
Now, my second switcher story is quite simple.

04:17.000 --> 04:21.000
A woman that works in the same building as me found out that I am well-versed in Linux,

04:21.000 --> 04:23.000
and she asked me to help her get Wi-Fi working.

04:23.000 --> 04:27.000
It was simply a matter of showing her where the switch was, but in talking to her, she

04:27.000 --> 04:30.000
was encouraged to install OpenSUSE 12.1 by a friend.

04:30.000 --> 04:34.000
Because she did not want to run an unsupported OS, which was Windows XP now, all she does

04:34.000 --> 04:37.000
is surf the web, check email, and this is perfect for her.

04:37.000 --> 04:40.000
Here are two stories of people that have switched and are happy.

04:40.000 --> 04:44.000
As an aside, my niece showed her friend's comp is and what it can do, so now I have

04:44.000 --> 04:46.000
to install Linux on his laptop, too.

04:46.000 --> 04:47.000
Take care, Damon.

04:47.000 --> 04:51.000
Thomas is still switching users after all these years.

04:51.000 --> 04:52.000
That's great.

04:52.000 --> 04:53.000
It's all about the cube.

04:53.000 --> 04:57.000
You've got to have the cube, Matt.

04:57.000 --> 04:59.000
All right, so this is Giant Daff.

04:59.000 --> 05:00.000
He writes in.

05:00.000 --> 05:02.000
He says, Heartbleed, this is what I see.

05:02.000 --> 05:04.000
A little follow-up on the Heartbleed discussion we've been having here.

05:04.000 --> 05:07.000
He says, so happy Easter to Matt and Chris.

05:07.000 --> 05:11.000
So as we all know, this Heartbleed bug was detrimental to security, but it's also putting

05:11.000 --> 05:14.000
a slightly darker shade on the opinions of the consumer market.

05:14.000 --> 05:17.000
Now, I'm not and never will claim to be an expert in economics or politics.

05:17.000 --> 05:22.000
However, I can't help shake the notion that this issue will set back the opinion of Linux.

05:22.000 --> 05:26.000
Microsoft and Apple are both extremely well funded, and this holds political ties to help

05:26.000 --> 05:31.000
form negative opinion around open source.

05:31.000 --> 05:35.000
They have been for years, and I have been ever so fortunate to have a very opinionated

05:35.000 --> 05:36.000
family.

05:36.000 --> 05:37.000
Cough, cough.

05:37.000 --> 05:38.000
My ears even bleed instead.

05:38.000 --> 05:41.000
I would like to mention one thing, however.

05:41.000 --> 05:46.000
Companies can claim to have a little to no faulty code, but how can you claim such things

05:46.000 --> 05:49.000
without proper review among peers, a.k.a. a formal review of code?

05:49.000 --> 05:53.000
I claim that if proprietary code was submitted to a review board sworn not to expose the

05:53.000 --> 05:56.000
code itself, that you would see extremely different numbers as claimed before.

05:56.000 --> 06:03.000
With that, open source code is more likely to out best proprietary coding any time.

06:03.000 --> 06:07.000
I'd like to hear your opinions on the matter of what you hear among less technical peers

06:07.000 --> 06:10.000
and what you would suggest to helping shift opinions.

06:10.000 --> 06:14.000
Matt, do you think the heart bleed vulnerability has caused a negative opinion about Linux

06:14.000 --> 06:15.000
and open source?

06:15.000 --> 06:19.000
I think it depends on the situation and who you're asking.

06:19.000 --> 06:23.000
If you're talking to the average person and you're explaining what's happening, they are

06:23.000 --> 06:28.000
not able to draw a line between the licensing of the different code and the software affected.

06:28.000 --> 06:30.000
They're only looking at the overall result.

06:30.000 --> 06:34.000
So they look at a service or a product and say, oh, well, that was affected.

06:34.000 --> 06:35.000
That's potentially scary.

06:35.000 --> 06:40.000
I don't think the average person is going to look at the actual licensing differences.

06:40.000 --> 06:44.000
That being said, I think if you ask a more advanced user, maybe like a Windows fan or

06:44.000 --> 06:48.000
a Mac fan, someone that's really heavily involved in technology, yeah, I think that their

06:48.000 --> 06:51.000
views are already pretty much colored as it is.

06:51.000 --> 06:53.000
I don't think it really swaps anyone out.

06:53.000 --> 06:55.000
I don't think it changes any minds.

06:55.000 --> 07:00.000
Yeah, and I have seen a surprising amount of mainstream coverage about heart bleed.

07:00.000 --> 07:04.000
It's always been pretty bad, but it was on the CBS Morning News recently.

07:04.000 --> 07:07.000
I never heard them say anything about Linux specifically.

07:07.000 --> 07:09.000
They did mention Android.

07:09.000 --> 07:14.000
A lot of times we talk about how Linux doesn't get full recognition.

07:14.000 --> 07:16.000
It's Chrome OS, not Linux.

07:16.000 --> 07:18.000
It's Android, not Linux, right?

07:18.000 --> 07:22.000
But in this case, it sort of has played to Linux's benefit because people are talking

07:22.000 --> 07:25.000
about Android having vulnerabilities and Cisco Gear having vulnerabilities.

07:25.000 --> 07:28.000
They're not necessarily saying Linux.

07:28.000 --> 07:35.000
I think you could probably draw a closer comparison saying that open source has taken maybe a

07:35.000 --> 07:38.000
bit more of a public image beating.

07:38.000 --> 07:40.000
But even then, I don't think it's that dramatic.

07:40.000 --> 07:44.000
I think once the dust settles, people realize that when you need peer-reviewed code, open

07:44.000 --> 07:46.000
source is literally your only option.

07:46.000 --> 07:47.000
Absolutely.

07:47.000 --> 07:49.000
It's just a matter of logic.

07:49.000 --> 07:52.000
I think those people that understand it, understand the differences between the licensing and

07:52.000 --> 07:56.000
the types of code that's out there, they should understand that unless they have a vested

07:56.000 --> 07:59.000
interest in seeing something happen to open source as a concept.

07:59.000 --> 08:05.000
Well, kind of on this subject today, officially LibreSSL was announced.

08:05.000 --> 08:10.000
LibreSSL is a free version of SSL TLS that is a protocol that's been forked from open SSL.

08:10.000 --> 08:13.000
I think it's being worked on by the OpenBSD folks.

08:13.000 --> 08:17.000
Right now it's only available for OpenBSD, but I'm sure as they get down the line here,

08:17.000 --> 08:20.000
that will become available to other platforms.

08:20.000 --> 08:22.000
What's kind of funny, Matt, is I'm this guy.

08:22.000 --> 08:24.000
I'm looking at this website.

08:24.000 --> 08:26.000
I'm like, wait a minute.

08:26.000 --> 08:28.000
Is the Lib SSL site using Comic Sans?

08:28.000 --> 08:32.000
Out of all choices, why are they using Comic Sans?

08:32.000 --> 08:34.000
I'm getting all uppity about it, right?

08:34.000 --> 08:39.000
At the very, very, very bottom of the website, way, way, way down, it says,

08:39.000 --> 08:42.000
This page is scientifically designed to annoy web hipsters.

08:42.000 --> 08:46.000
Donate now to stop the Comic Sans and blink tags.

08:46.000 --> 08:48.000
Oh, that's brilliant.

08:48.000 --> 08:50.000
What a great fundraising idea.

08:50.000 --> 08:53.000
That is a seriously great idea for raising money, because I feel compelled now to donate

08:53.000 --> 08:55.000
just to get the damn Comic Sans off their website.

08:55.000 --> 09:00.000
But the open source community seems to be responding pretty positively to Libre SSL.

09:00.000 --> 09:06.000
A lot of people consider the OpenBSD camp to be some of the best folks in the business out there to do this.

09:06.000 --> 09:08.000
And they seem to be taking a pretty rational approach.

09:08.000 --> 09:10.000
So something we'll keep an eye on.

09:10.000 --> 09:12.000
I don't know if it comes to Linux.

09:12.000 --> 09:14.000
We'll update you guys right now.

09:14.000 --> 09:16.000
It's just for you OpenBSD heads, the place to be.

09:16.000 --> 09:22.000
Well, an additional insight on this, too, is you look at Open Office versus Libre Office.

09:22.000 --> 09:24.000
Libre Office is great.

09:24.000 --> 09:26.000
Open Office is kind of, you know, it's kind of yesterday's news.

09:26.000 --> 09:29.000
Maybe we'll see the same thing here.

09:29.000 --> 09:31.000
Yeah, yeah.

09:31.000 --> 09:33.000
No rational argument to that.

09:33.000 --> 09:35.000
I could see a transition happening.

09:35.000 --> 09:37.000
I could see that.

09:37.000 --> 09:39.000
Yeah, I could see what you're saying.

09:39.000 --> 09:41.000
All right.

09:41.000 --> 09:43.000
Well, I had a quick note I wanted to get to.

09:43.000 --> 09:45.000
We're making good time on the feedback this week.

09:45.000 --> 09:47.000
Ramy wrote in to the subreddit.

09:47.000 --> 09:49.000
I love getting these posts.

09:49.000 --> 09:52.000
I have a 16 core, 48 gigabyte of RAM VM.

09:52.000 --> 09:54.000
Check this out.

09:54.000 --> 09:56.000
He says I have a new router which supports OpenWRT.

09:56.000 --> 09:58.000
It's a clone of the TP-Link 730N or 703N.

09:58.000 --> 10:04.000
It has a small USB powered router with a one gigabit port and 802.11n.

10:04.000 --> 10:11.000
But he was trying to build a specific version of OpenWRT for this device.

10:11.000 --> 10:17.000
And on his own laptop, he says it takes about 4.5 hours to build the OpenWRT image.

10:17.000 --> 10:22.000
So he spawned himself up a DigitalOcean instance, and it only took 45 minutes.

10:22.000 --> 10:26.000
And his total cost was $1 for the entire process.

10:26.000 --> 10:29.000
And this is something I wanted to thank him for writing in,

10:29.000 --> 10:34.000
because the other day we were testing some auto publishing scripts.

10:34.000 --> 10:40.000
And when it came time to try out the FTP angle from multiple locations,

10:40.000 --> 10:43.000
the first thought I had was, you know what I could do?

10:43.000 --> 10:45.000
I could just take the DigitalOcean droplet that I have,

10:45.000 --> 10:48.000
spin it up in the San Francisco location,

10:48.000 --> 10:51.000
and then we'll have a real world test case to bang on this.

10:51.000 --> 10:53.000
And it makes it so quick and simple.

10:53.000 --> 10:56.000
And because of DigitalOcean's flexible pricing, you can do hourly pricing,

10:56.000 --> 10:58.000
it makes testing these kinds of things a slam dunk.

10:58.000 --> 11:01.000
So let me tell you about DigitalOcean. They're one of our sponsors.

11:01.000 --> 11:04.000
DigitalOcean is a simple cloud hosting provider dedicated to offering

11:04.000 --> 11:07.000
the most intuitive and easy way to spin up a cloud server.

11:07.000 --> 11:11.000
Users can get a cloud server created in about 55 seconds.

11:11.000 --> 11:16.000
Power users, 47, 43, and 40 seconds. I'm waiting for a screenshot on the 40 seconds.

11:16.000 --> 11:20.000
And pricing plans start at only $5 per month for 512 megabytes of RAM.

11:20.000 --> 11:24.000
A 20 gigabyte SSD, one CPU, and a terabyte of transfer.

11:24.000 --> 11:29.000
DigitalOcean has data center locations in New York, San Francisco, Singapore, and Amsterdam.

11:29.000 --> 11:31.000
Their interface is simple.

11:31.000 --> 11:34.000
Their control panel could not be more intuitive.

11:34.000 --> 11:37.000
And power users can replicate that control panel on a much larger scale

11:37.000 --> 11:39.000
with their straightforward API.

11:39.000 --> 11:42.000
And they've just announced that they're rocking Ubuntu 14.04 droplets.

11:42.000 --> 11:46.000
So if you want to deploy the latest LTS release on a DigitalOcean droplet,

11:46.000 --> 11:49.000
they're ready to go. They've got images that are set.

11:49.000 --> 11:51.000
And this is what I love. These guys are all in.

11:51.000 --> 11:54.000
On the latest releases, on Docker, all this kind of stuff.

11:54.000 --> 11:59.000
And DigitalOcean is sort of the accumulation of all of the things we've talked about for so long.

11:59.000 --> 12:02.000
They saw trends in the industry.

12:02.000 --> 12:06.000
SSDs, they got tier one bandwidth partners, they got amazing hardware,

12:06.000 --> 12:11.000
and they're utilizing KVM to offer a solution that, on its face,

12:11.000 --> 12:13.000
sort of almost seems obvious in retrospective,

12:13.000 --> 12:17.000
but the implementation of how they did it is really the differentiator.

12:17.000 --> 12:19.000
Their control panel is so great.

12:19.000 --> 12:23.000
They have managed to wrap a simple-to-use interface

12:23.000 --> 12:27.000
around a process that I used to be able to charge clients hundreds of dollars an hour for.

12:27.000 --> 12:32.000
It has completely transformed the amount of power that is available to just anyone.

12:32.000 --> 12:34.000
And you can get started for just $5 a month.

12:34.000 --> 12:37.000
And if you use our special promo code, UnpluggedApril,

12:37.000 --> 12:40.000
UnpluggedApril will get you a $10 credit.

12:40.000 --> 12:43.000
And you can try out a DigitalOcean droplet for two months for absolutely free,

12:43.000 --> 12:48.000
or get the higher-end rig and just use it for free when you use UnpluggedApril.

12:48.000 --> 12:52.000
It's really impressive to see all of these awesome technologies that Linux has enabled

12:52.000 --> 12:57.000
and come together in a package that is so well done, so intuitive.

12:57.000 --> 13:00.000
I just really love it. So go over to DigitalOcean.com,

13:00.000 --> 13:02.000
spin up yourself a droplet and see what you can do.

13:02.000 --> 13:04.000
There's all kinds of great uses.

13:04.000 --> 13:07.000
You can check out our Jupiter Colony Google Plus community for some ideas

13:07.000 --> 13:09.000
of what folks are doing with their DigitalOcean droplets.

13:09.000 --> 13:13.000
DigitalOcean.com, UnpluggedApril will get you that $10 credit.

13:13.000 --> 13:18.000
And a really big thank you to DigitalOcean for sponsoring Linux Unplugged

13:18.000 --> 13:21.000
and for getting Ubuntu 14.04 support so soon.

13:21.000 --> 13:25.000
I think that's going to be a great, great cloud operating system.

13:25.000 --> 13:29.000
Now, I wanted to follow up on a topic that we raised on the Linux Action Show a couple of weeks ago

13:29.000 --> 13:32.000
when we asked what folks use as their password manager.

13:32.000 --> 13:35.000
Because it's really gotten to the point now, after Heartbleed,

13:35.000 --> 13:38.000
it's no longer something you should do, it's something you have to do.

13:38.000 --> 13:40.000
I don't care if you're a Windows user or a Linux user,

13:40.000 --> 13:43.000
you need to have a different password for every online service you use.

13:43.000 --> 13:46.000
So we asked the audience, hey, what do you use?

13:46.000 --> 13:49.000
And we put it to a vote, and the results are in, Matt.

13:49.000 --> 13:53.000
38% of folks who voted, and we got 784 votes,

13:53.000 --> 13:57.000
38% of folks who voted use LastPass.

13:57.000 --> 13:59.000
Close, probably not too surprising.

13:59.000 --> 14:01.000
KeyPass came in at 37%.

14:01.000 --> 14:03.000
So it's pretty much split between LastPass and KeyPass.

14:03.000 --> 14:06.000
Then the third choice is built-in Chrome and Firefox,

14:06.000 --> 14:09.000
and then goes to KWallet and a few others.

14:09.000 --> 14:13.000
The built-in browser ones are just, I mean, I'd use KWallet over that.

14:13.000 --> 14:15.000
Those are horrible.

14:15.000 --> 14:18.000
So I wanted to bring it to the Mumble Room,

14:18.000 --> 14:22.000
because I'm sort of a no apologies LastPass fan.

14:22.000 --> 14:24.000
I used LastPass for years.

14:24.000 --> 14:28.000
Does anybody in here want to take the side of KeyPass

14:28.000 --> 14:33.000
and try to convince me on why I should switch to KeyPass from LastPass?

14:33.000 --> 14:35.000
Variety garbage.

14:35.000 --> 14:37.000
All right.

14:37.000 --> 14:40.000
Here's another thing about KeyPass versus LastPass.

14:40.000 --> 14:43.000
KeyPass stores everything locally.

14:43.000 --> 14:47.000
LastPass keeps it on somebody else's server you have no idea where it is.

14:47.000 --> 14:49.000
Granted, it's encrypted,

14:49.000 --> 14:52.000
but who's going to stop somebody from breaking that encryption, right?

14:52.000 --> 14:54.000
Well, it's not just the encryption itself.

14:54.000 --> 14:56.000
It's not just the encryption.

14:56.000 --> 14:58.000
It's the fact that you're reliant on a third party.

14:58.000 --> 15:05.000
You could, at any time, LastPass could shut down for whatever reason,

15:05.000 --> 15:07.000
and you've lost that service.

15:07.000 --> 15:11.000
You may well actually find you don't even know your passwords

15:11.000 --> 15:13.000
for half a dozen or more sites.

15:13.000 --> 15:17.000
I started using LastPass when a site, a prominent site, got hacked,

15:17.000 --> 15:19.000
and my email address was published on Pastebin,

15:19.000 --> 15:21.000
and I thought, oh yeah, I better change that.

15:21.000 --> 15:24.000
So I switched to LastPass, and I've not looked back since.

15:24.000 --> 15:27.000
I pay them, and I use the mobile version, and I love it to bits,

15:27.000 --> 15:30.000
but I can see an argument for not using them.

15:30.000 --> 15:40.000
LastPass also has the Pocket version where you can store everything locally if you want to.

15:40.000 --> 15:44.000
Then you can sync it every once in a while back and forth to the Pocket to the cloud.

15:44.000 --> 15:48.000
So if you want to have the local storage, you can totally do that.

15:48.000 --> 15:52.000
The difference is, I like KeyPass, but for me,

15:52.000 --> 15:57.000
the convenience of having it always synced to my phone and my computers and all that stuff.

15:57.000 --> 15:59.000
That seems critical to me. That seems absolutely critical now.

15:59.000 --> 16:04.000
Well, there is a way to get that synced across multiple devices.

16:04.000 --> 16:06.000
It's not a practical way.

16:06.000 --> 16:11.000
If you look at the KeyPass, you could do some kind of syncing service, like BT sync or something,

16:11.000 --> 16:16.000
but it would take so much effort that you can't also guarantee that it's going to work.

16:16.000 --> 16:20.000
You could even use SyncMe Wireless to transfer over your KeyPass stuff,

16:20.000 --> 16:26.000
but it still requires the phone to sync it, not the computer.

16:26.000 --> 16:29.000
It's just not a practical way to do it at all.

16:29.000 --> 16:35.000
I disagree. The reason I disagree is that my music library is completely synced between my devices,

16:35.000 --> 16:40.000
my computer, my tablet, and my phone completely with BT sync.

16:40.000 --> 16:47.000
Well, if your whole point is to be open and stuff, well, BT sync is not a solution either.

16:47.000 --> 16:52.000
Well, no. My point is not to be open. My point is to make it so that I'm not having to rely on a third party.

16:52.000 --> 16:57.000
Man, who needs all that fancy software? All you need is just sticky notes. Come on, people.

16:57.000 --> 17:05.000
Well, KeyPass is cool to use. If you can do the syncing stuff, that's the main reason I don't use KeyPass.

17:05.000 --> 17:13.000
It's just the convenience of the syncing with LastPass, but also the newest version of LastPass introduced an awesome feature

17:13.000 --> 17:21.000
where you used to have to do these add notifications to get your easily log into an app, but now you just open the app.

17:21.000 --> 17:27.000
You have to start a service in the phone, but you open the app and then click the username and password section,

17:27.000 --> 17:37.000
and you can automatically fill it through the LastPass app, which is only available, I think, on Jellybean and KitKat, but it's still awesome.

17:37.000 --> 17:43.000
I've only just been using LastPass the last month and I just discovered it, so it's actually not too big.

17:43.000 --> 17:50.000
To me, LastPass seems like maybe the obvious choice then for pretty much average users, but also people who don't want to have to worry about the sync component.

17:50.000 --> 17:56.000
The thing I like about LastPass is they have a good record of communicating very clearly about matters.

17:56.000 --> 18:01.000
If they were to shut down, their history would seem to indicate to me that they're probably going to give you a heads up.

18:01.000 --> 18:07.000
I have that sort of comfort. It's not a guarantee, but I sort of have a comfort in that.

18:07.000 --> 18:16.000
The other thing that strikes me about LastPass is, like now on Android, you can have LastPass auto-fill app passwords,

18:16.000 --> 18:24.000
or on websites that you're just browsing in the regular Chrome web browser, LastPass can fill that stuff,

18:24.000 --> 18:31.000
and it can be passwords you set up on the desktop. The nice thing is that that syncing is just totally handled for you, and it's instantaneous.

18:31.000 --> 18:35.000
The encryption's done on the client side, so the thing that they're syncing is just the encrypted password database.

18:35.000 --> 18:41.000
They're not syncing the individual passwords. I've used it for years now, and it's worked really well for me,

18:41.000 --> 18:46.000
but the one thing that always does sort of ring in the back of my head is it's not open source.

18:46.000 --> 18:54.000
Without that syncing component, I come down to the practical nature of, if I'm going to be trusting a service to store all of my passwords,

18:54.000 --> 19:02.000
it has to be almost omnipresent, because I just use all kinds of different computers and devices all the time.

19:02.000 --> 19:05.000
That makes sense.

19:05.000 --> 19:13.000
When I worked at a corporate about ten years ago, and there was a guy in the office that we all used to laugh at,

19:13.000 --> 19:22.000
and he had folded up three sheets of paper with all his passwords written on that he would keep in his breast pocket in his shirt.

19:22.000 --> 19:30.000
We all laughed at him, but Schneier has written years ago, back in 2005,

19:30.000 --> 19:37.000
that someone urged people to write down their passwords, and he says this is good advice, and he's been saying it for years.

19:37.000 --> 19:43.000
It's going to be said that sometimes you don't need to go the technological route.

19:43.000 --> 19:51.000
Sometimes it is actually more sensible to just have a little notepad and maybe be a bit cryptic about which passwords you write on which page and which goes with which,

19:51.000 --> 20:00.000
but you don't have to have a cloud-syncing third-party system with triple DES or some magical encryption.

20:00.000 --> 20:02.000
You could just write it down.

20:02.000 --> 20:07.000
There's no way some random person on the internet is going to find out my password by it being written down in my pocket.

20:07.000 --> 20:09.000
Right, yeah, that's very true.

20:09.000 --> 20:14.000
You don't have to show anybody your password.

20:14.000 --> 20:20.000
But writing a thousand passwords in my notepad would not be very easy to carry in my back pocket.

20:20.000 --> 20:22.000
You don't write them all at once.

20:22.000 --> 20:24.000
I wanted to give them one at a time.

20:24.000 --> 20:29.000
I'm acting like a Windows user on this issue, so I wanted to hear his thoughts on that. Go ahead, VRMax.

20:29.000 --> 20:39.000
Yeah, just in short, your attitude about I just wanted to work sounds a lot like what Windows users say when I try to move them over to something like Linux.

20:39.000 --> 20:45.000
Well, I think it's a little bit different because it's sort of like the keys to the business, right?

20:45.000 --> 20:55.000
It's one of these things where if you really go all in on these crazy passwords that are really pretty much close to impossible to remember,

20:55.000 --> 21:02.000
then you depend on something like LastPass literally to work, to do your job, to do shopping, to do everything.

21:02.000 --> 21:10.000
And the idea that I have some peace of mind knowing that if I sign up for a new service on my computer,

21:10.000 --> 21:15.000
and then I go out on the road, in fact, this happened with a streaming TV service.

21:15.000 --> 21:19.000
I go out on the road and I decided, you know what, I want to try doing this in the app on my mobile device.

21:19.000 --> 21:24.000
It's really nice to know that even though I never initiated a manual sync because I didn't think about it,

21:24.000 --> 21:29.000
LastPass has already taken care of that for me, and I can open up the LastPass database on my Nexus 5,

21:29.000 --> 21:32.000
and Bob's your uncle, I've got my password database there.

21:32.000 --> 21:37.000
I can copy it, I can paste it, and then it cleans up the clipboard for me so that way that's not lingering around in the clipboard.

21:37.000 --> 21:39.000
It's pretty nice.

21:39.000 --> 21:46.000
The thing is I've always wanted to try KeyPass, but how do you switch to something like a different password manager when you're all in like that?

21:46.000 --> 21:47.000
There's hundreds of sites.

21:47.000 --> 21:49.000
It just doesn't seem like something you switch from.

21:49.000 --> 21:54.000
That's why I want to give this some serious discussion because once you pick,

21:54.000 --> 21:59.000
you kind of need to stick with it for a long time unless you want to spend a weekend resetting up a bunch of things.

21:59.000 --> 22:00.000
Or if you're a masochist.

22:00.000 --> 22:02.000
Yeah, exactly.

22:02.000 --> 22:09.000
Doesn't KeyPass have some kind of auto migration tool?

22:09.000 --> 22:13.000
It does from Google Chrome passwords and whatnot.

22:13.000 --> 22:17.000
The chat room says you can export from LastPass into KeyPass.

22:17.000 --> 22:20.000
Thank you. That would make it easier to test.

22:20.000 --> 22:22.000
It certainly takes a lot of work out of it.

22:22.000 --> 22:23.000
Yeah, that's really cool.

22:23.000 --> 22:28.000
And the thing is even with that there, I don't know.

22:28.000 --> 22:35.000
Right now, LastPass, another thing I like about it is it just sort of comes with me because I'm back to using Chrome,

22:35.000 --> 22:40.000
and Chrome just Google syncs all of my plug-ins, and so it just comes right back.

22:40.000 --> 22:44.000
Every time I set up and log into Chrome on a new computer, LastPass is there.

22:44.000 --> 22:47.000
I don't have to install a separate application or anything like that.

22:47.000 --> 22:51.000
So there's this barrier to entry to get up and running with LastPass.

22:51.000 --> 22:55.000
Pretty much it just requires I log into Chrome.

22:55.000 --> 22:57.000
You don't have to set up multiple programs.

22:57.000 --> 23:00.000
You have to set up your sync program, too, to make it pull all the passwords in.

23:00.000 --> 23:02.000
All right. Heaven's revenge. Go ahead.

23:02.000 --> 23:04.000
Will you add an alternative password manager?

23:04.000 --> 23:06.000
It's not. Hello.

23:06.000 --> 23:09.000
I have a solution which doesn't actually use a database.

23:09.000 --> 23:13.000
It's a solution in which generates the passwords on demand, on the fly,

23:13.000 --> 23:17.000
whichever cryptographic algorithm you actually desire and want most.

23:17.000 --> 23:22.000
So this way, you have a plausible deniability that you do not have a password for.

23:22.000 --> 23:29.000
Let's say this bad website here, if anyone gets access to your database, which you do store,

23:29.000 --> 23:34.000
and KPass is a trust KPass system.

23:34.000 --> 23:38.000
I trust no one. I generate my passwords on the fly,

23:38.000 --> 23:41.000
and you can choose whichever way you want to generate them yourself,

23:41.000 --> 23:47.000
which are it doesn't actually require a database to keep track of any of your passwords.

23:47.000 --> 23:51.000
So that is an alternate. You can use any sort of.

23:51.000 --> 23:56.000
It's generally a hash algorithm, but you can also use HMACL hash algorithms as well.

23:56.000 --> 24:02.000
The one I use because I've used it quite often is a password maker application.

24:02.000 --> 24:07.000
It's got Android, iOS apps, has a Chrome and Firefox extension,

24:07.000 --> 24:13.000
and has a web page that you can actually just try it out, and you do not actually have to install anything.

24:13.000 --> 24:16.000
So you can see how the result looks.

24:16.000 --> 24:19.000
So you generate it when you need it?

24:19.000 --> 24:22.000
Yes, you generate it on the fly when you need it, and it doesn't even.

24:22.000 --> 24:29.000
It can save your master password thing in which generates your password based on the domain name,

24:29.000 --> 24:32.000
or it can be a lot more than the domain name.

24:32.000 --> 24:37.000
You can add many different features to what you want your generated password to be.

24:37.000 --> 24:40.000
I remember a study done that if you do more than the domain name you're good,

24:40.000 --> 24:44.000
but if you use just the domain name, I can't remember how it worked,

24:44.000 --> 24:47.000
but there were some questions raised if it was totally safe.

24:47.000 --> 24:52.000
Oh well, the reason why it's safe is that you can, or at least it's safe in my opinion,

24:52.000 --> 25:01.000
is that you can use algorithms which cannot be reversed or have been almost impossible to reverse beyond two iterations.

25:01.000 --> 25:10.000
I use RIPEMD-160. That's almost impossible to go backwards very far.

25:10.000 --> 25:15.000
It's kind of like as if they integrated Keckik or SHA-3 as the hash algorithm.

25:15.000 --> 25:22.000
It's almost impossible to go backwards based on the domain name plus your password or your bump level

25:22.000 --> 25:26.000
depending on whether you want to change your password for that site and domain or not.

25:26.000 --> 25:30.000
So here's what I'm grokking from our password manager conversation.

25:30.000 --> 25:35.000
There's a lot of options, and people really don't have any excuse not to just use something.

25:35.000 --> 25:39.000
Just use something. I don't care what it is. Just use it. Dang it.

25:39.000 --> 25:45.000
There's so many leaks now. There was Lissy, who makes a lot of external hard drives,

25:45.000 --> 25:48.000
just recently announced that for the last two years they were under monitoring,

25:48.000 --> 25:53.000
and now they've had credit card and user information stolen from the past two years of their customers.

25:53.000 --> 25:59.000
The craft store that my wife shops at when she goes to do scrapbooking stuff

25:59.000 --> 26:03.000
announced that they've had a credit card breach similar to the target credit card breach.

26:03.000 --> 26:08.000
It's nonstop. So go out there and get yourself a password manager.

26:08.000 --> 26:12.000
Do us a solid. Do it for your buddies at Linux Unplugged.

26:12.000 --> 26:16.000
No longer use the word password for your password. Always good advice.

26:16.000 --> 26:19.000
Right. All right. Very good, Matt. That's great advice.

26:19.000 --> 26:24.000
And it's probably a spot we should stop and thank Ting, another sponsor of Linux Unplugged.

26:24.000 --> 26:26.000
What is Ting? Ting is mobile that makes sense.

26:26.000 --> 26:29.000
My mobile service provider and Matt's mobile service provider.

26:29.000 --> 26:33.000
And what's so outrageously awesome about Ting is you only pay for what you use,

26:33.000 --> 26:36.000
and there is no contract and no early termination fees.

26:36.000 --> 26:40.000
It's really awesome. You can get started by going to linux.ting.com to check them out.

26:40.000 --> 26:43.000
linux.ting.com will take $25 off your first device.

26:43.000 --> 26:46.000
If you've already got a device you want to bring with you, they've got a whole BYOD page,

26:46.000 --> 26:51.000
then go over there and just get a $25 credit for your first month or however long it'll last you.

26:51.000 --> 26:53.000
It might last you into your second month like it did me.

26:53.000 --> 26:56.000
I've talked a lot about Ting over the year.

26:56.000 --> 27:00.000
What I still am impressed by is what an awesome company they are.

27:00.000 --> 27:06.000
Today they posted that they gave this guy, his name is Joe, $10,000

27:06.000 --> 27:08.000
because he has just been an awesome advocate for Ting.

27:08.000 --> 27:14.000
Ting has this Ting ground crew program where you can actually become a Ting advocate yourself,

27:14.000 --> 27:17.000
much like I am, and you can get rewards.

27:17.000 --> 27:20.000
I don't know if I'll be able to find the spot in the video here, but let me see if I can.

27:20.000 --> 27:24.000
How would you rate your experience with Ting and what would you say?

27:24.000 --> 27:25.000
Hold on, there it is.

27:25.000 --> 27:26.000
He's just sitting there.

27:26.000 --> 27:27.000
This is great.

27:27.000 --> 27:29.000
They're going to post the video on their YouTube channel in full.

27:29.000 --> 27:32.000
They have this guy in at Ting, and he just thinks that,

27:32.000 --> 27:35.000
oh, I'm here today because I'm doing a job interview.

27:35.000 --> 27:38.000
Dude's hanging out thinking he's going to get a job interview.

27:38.000 --> 27:42.000
They're asking him a whole bunch of questions, and then next thing you know,

27:42.000 --> 27:45.000
they walk in and they're like, hey, you just won $10,000.

27:45.000 --> 27:48.000
If you're watching the video version, his reaction is so awesome.

27:48.000 --> 27:50.000
Do you have any questions, Andrew?

27:50.000 --> 27:51.000
I don't think that clap worked.

27:51.000 --> 27:53.000
I didn't catch that clap, probably.

27:53.000 --> 27:54.000
Sorry, can I see your clap?

27:54.000 --> 27:55.000
Really lovely.

27:55.000 --> 27:58.000
Perfect.

27:58.000 --> 28:00.000
Hey, Joe.

28:00.000 --> 28:04.000
I gave it random, but all of a sudden Ting wanted to say thank you

28:04.000 --> 28:10.000
and give you this check for $10,000 just for being awesome.

28:10.000 --> 28:11.000
Are you serious?

28:11.000 --> 28:13.000
Absolutely.

28:13.000 --> 28:14.000
That is amazing.

28:14.000 --> 28:19.000
That's like publisher's clearance.

28:19.000 --> 28:21.000
Yeah, what's funny is on their Instagram feed later on,

28:21.000 --> 28:23.000
they posted a video of them cleaning up from the confetti.

28:23.000 --> 28:26.000
So they give Joe his $10,000 for being an awesome Ting ground crew,

28:26.000 --> 28:34.000
and he just loves it.

28:34.000 --> 28:36.000
And they did that on a Google Hangout, too.

28:36.000 --> 28:38.000
So if you were watching live, you got to see that happen live.

28:38.000 --> 28:42.000
So Ting just does a lot of awesome stuff, and their ground crew is part of it.

28:42.000 --> 28:43.000
They're just a great company.

28:43.000 --> 28:45.000
They're just a bunch of great people over there,

28:45.000 --> 28:48.000
and they always are posting really good stuff over on their blog.

28:48.000 --> 28:50.000
So go over to linux.ting.com and then click on the Ting blog

28:50.000 --> 28:52.000
to see what I've been talking about.

28:52.000 --> 28:55.000
And remember, every Ting phone is just $6 a month flat rate,

28:55.000 --> 28:57.000
and then just your usage and taxes on top of that.

28:57.000 --> 29:00.000
Every Ting plan includes tethering, hot spots.

29:00.000 --> 29:02.000
You get your picture messaging, your text messaging,

29:02.000 --> 29:04.000
all the stuff you'd expect, plus their awesome dashboard,

29:04.000 --> 29:07.000
which makes it crazy easy to manage and see where you're at

29:07.000 --> 29:09.000
so you have full control over your cell service.

29:09.000 --> 29:11.000
This is a great place to go get a phone.

29:11.000 --> 29:13.000
Linux.ting.com.

29:13.000 --> 29:16.000
And a big thank you to Ting for sponsoring Linux Unplugged.

29:16.000 --> 29:20.000
Man, that guy, I mean, how cool is that?

29:20.000 --> 29:21.000
Can you imagine that?

29:21.000 --> 29:22.000
Yeah, you're getting $10,000.

29:22.000 --> 29:24.000
It's like, hey, you know what, you're awesome.

29:24.000 --> 29:27.000
We appreciate you getting the word out about this great service,

29:27.000 --> 29:29.000
and hey, we're just going to show you a little bit of a thank you.

29:29.000 --> 29:30.000
That's amazing.

29:30.000 --> 29:32.000
All right, so I want to talk a little bit about this client-side diva.

29:32.000 --> 29:35.000
I mean, client-side decorations thing that's going on right now.

29:35.000 --> 29:39.000
So I'm not totally, totally like Mr. Expert on this,

29:39.000 --> 29:41.000
but there's two camps.

29:41.000 --> 29:44.000
Essentially, there's the camps that think client-side decorations on Windows,

29:44.000 --> 29:47.000
the things you'll see like on the new gedit and the new files on GNOME,

29:47.000 --> 29:50.000
all of these with the new border where they've integrated the close

29:50.000 --> 29:53.000
and minimize buttons into the title bar, these are client-side decorations.

29:53.000 --> 29:56.000
Now, the thing is, these only really work very well on GNOME.

29:56.000 --> 29:59.000
You're on any other desktop, and they kind of look atrocious.

29:59.000 --> 30:00.000
Sometimes you have double title bars.

30:00.000 --> 30:01.000
The title bars are offset.

30:01.000 --> 30:03.000
It looks like amateur hour.

30:03.000 --> 30:06.000
So Martin took to his blog, Kaywin Developer.

30:06.000 --> 30:09.000
He took to his blog with an open letter that he wrote on his blog.

30:09.000 --> 30:12.000
He posted it to a mailing list, and he sent it to the developers.

30:12.000 --> 30:15.000
He said, I decided to CC this mailing list and publish this letter

30:15.000 --> 30:17.000
as an open letter on my blog.

30:17.000 --> 30:20.000
CSD, which is client-side decorations, is a topic that is very important

30:20.000 --> 30:26.000
for every user and nothing that should be discussed in a small group.

30:26.000 --> 30:29.000
This is his biggest problem he has with it.

30:29.000 --> 30:31.000
He says, consistent window decorations.

30:31.000 --> 30:34.000
The fact, here is my greatest doubt, he goes on to say.

30:34.000 --> 30:38.000
The current situation is that all windows have the same window decoration.

30:38.000 --> 30:41.000
For CSD to work, applications have to be changed to support them.

30:41.000 --> 30:43.000
This will render the changed applications using CSD,

30:43.000 --> 30:46.000
while other applications are decorated by the window manager.

30:46.000 --> 30:48.000
I think it is impossible to have the same behavior

30:48.000 --> 30:51.000
with both client-side decorations and window manager decorations.

30:51.000 --> 30:57.000
So, for example, an application freezes up, and you click the X button.

30:57.000 --> 31:00.000
With server-side decorations, the window manager notices

31:00.000 --> 31:01.000
that that application never closed and said,

31:01.000 --> 31:03.000
hey, would you like me to force quit?

31:03.000 --> 31:08.000
With client-side decorations, the title bar is part of the process,

31:08.000 --> 31:10.000
part of the application process.

31:10.000 --> 31:12.000
When the application hangs, the close button hangs,

31:12.000 --> 31:15.000
and you cannot just quickly and easily close it anymore.

31:15.000 --> 31:19.000
There are other minor things that would bug users.

31:19.000 --> 31:21.000
He says, my biggest concern is that we will end up with applications

31:21.000 --> 31:24.000
shipping their own style and doing their own kind of decorations.

31:24.000 --> 31:29.000
We will end up in a situation that has one window that has buttons on the left,

31:29.000 --> 31:31.000
one window that has buttons on the right,

31:31.000 --> 31:33.000
one with order, close, maximize, minimize,

31:33.000 --> 31:36.000
the other in close, minimize, maximize, et cetera.

31:36.000 --> 31:38.000
He says, just look at Microsoft Windows desktop

31:38.000 --> 31:40.000
to see what proprietary applications tend to do

31:40.000 --> 31:42.000
when they get a chance to influence their own decorations.

31:42.000 --> 31:44.000
And that is a very good point.

31:44.000 --> 31:49.000
It is, and I think, actually, first I was going to think I was going to scoff at the idea.

31:49.000 --> 31:51.000
And that's kind of like, you know, the more I hear it,

31:51.000 --> 31:53.000
the more it's like, you know, actually, it's a valid point.

31:53.000 --> 31:55.000
Yeah, and you see this in Chromium today.

31:55.000 --> 31:57.000
Chromium already has its own buttons.

31:57.000 --> 32:00.000
Like right now on my Ubuntu 14.04 desktop, I'm still running.

32:00.000 --> 32:02.000
You know, the buttons are on the wrong side of the window

32:02.000 --> 32:04.000
because they're using their own decorator.

32:04.000 --> 32:06.000
They're not taking advantage of the operating system's decorator.

32:06.000 --> 32:11.000
And I've heard, too, the client-side decorations were meant to improve support for Wayland

32:11.000 --> 32:17.000
in the sense that it takes less code from the backend and moves that code into GTK,

32:17.000 --> 32:20.000
and that's where you can manage it, and that's a little easier.

32:20.000 --> 32:26.000
However, Martin disagrees that that's really an important feature or a necessary feature.

32:26.000 --> 32:30.000
Where we're at now, and I want to bring in the Mumble Room on this,

32:30.000 --> 32:33.000
because where we're at is we have this mismatch right now.

32:33.000 --> 32:35.000
We're in this transitionary phase.

32:35.000 --> 32:37.000
It's been starting with GNOME 3.10.

32:37.000 --> 32:39.000
It's escalated with GNOME 3.12.

32:39.000 --> 32:43.000
It means that these GTK applications that are using client-side decorations

32:43.000 --> 32:46.000
will look funky on all GNOME desktops.

32:46.000 --> 32:48.000
So Mumble Room, question for you.

32:48.000 --> 32:51.000
Does anybody in here want to be an advocate for client-side decorations?

32:51.000 --> 32:53.000
Anybody think they're a great idea or like them?

32:53.000 --> 32:55.000
No.

32:55.000 --> 32:58.000
I think at least in this state.

32:58.000 --> 33:01.000
I will take that position then, because I kind of do like them.

33:01.000 --> 33:04.000
From an end-user perspective, I think they look kind of nice.

33:04.000 --> 33:08.000
I like the functionality, especially with a theme that has the Numix theme,

33:08.000 --> 33:10.000
where it takes very little room.

33:10.000 --> 33:12.000
I feel like it's very effective.

33:12.000 --> 33:14.000
I get my close buttons, I get a title bar all in one.

33:14.000 --> 33:16.000
It takes up less space.

33:16.000 --> 33:18.000
I think they're kind of nice looking.

33:18.000 --> 33:20.000
Performance is better when you resize the window.

33:20.000 --> 33:22.000
It looks better.

33:22.000 --> 33:24.000
You don't necessarily have the tearing between the title bar and the application

33:24.000 --> 33:26.000
that looks nice.

33:26.000 --> 33:28.000
I think it looks a little more elegant.

33:28.000 --> 33:30.000
So these are the things that client-side decorations bring us.

33:30.000 --> 33:32.000
I kind of have to agree with Chris on some of that.

33:32.000 --> 33:35.000
I believe that having the client-side decorations

33:35.000 --> 33:38.000
makes the application seem a lot more cohesive.

33:38.000 --> 33:41.000
It allows that extra functionality in the title bar,

33:41.000 --> 33:43.000
like you have with the GNOME Shell application,

33:43.000 --> 33:45.000
or GNOME 3 applications, I should say.

33:45.000 --> 33:48.000
Or even look at Steam, for example.

33:48.000 --> 33:50.000
Right.

33:50.000 --> 33:52.000
You have to look at that.

33:52.000 --> 33:54.000
You have to look at the current state of client-side decorations,

33:54.000 --> 33:58.000
at least what we saw in the Cinnamon 2.2 look.

33:58.000 --> 34:00.000
A, they're not very good.

34:00.000 --> 34:02.000
They still have the minimize button thing.

34:02.000 --> 34:04.000
They still look very large.

34:04.000 --> 34:06.000
They still look very, very ugly themselves,

34:06.000 --> 34:09.000
with or without the window manager decorations.

34:09.000 --> 34:11.000
So they may be a good idea in the future,

34:11.000 --> 34:13.000
when they're absolutely implemented.

34:13.000 --> 34:17.000
But at this point, they just get in the way

34:17.000 --> 34:19.000
of window manager decorations.

34:19.000 --> 34:22.000
And secondly, they already don't look as good.

34:22.000 --> 34:24.000
Yes, they add added functionality,

34:24.000 --> 34:27.000
but the client-side decorations themselves

34:27.000 --> 34:31.000
I don't think look as good or as functional as they should be.

34:31.000 --> 34:33.000
I have to agree with that.

34:33.000 --> 34:37.000
I can't stand a way to GNOME 3 GTKC looks.

34:37.000 --> 34:39.000
I cannot stand it like that.

34:39.000 --> 34:41.000
It's too blocky.

34:41.000 --> 34:44.000
I can't stand that look.

34:44.000 --> 34:48.000
I generally like GNOME and prefer the technical superiority

34:48.000 --> 34:50.000
of server-side decorations.

34:50.000 --> 34:53.000
There is one thing I can do, is blame Popeye.

34:53.000 --> 34:57.000
Because this is all because of Canonical and Unity

34:57.000 --> 34:59.000
ripping out the menu, the file menu,

34:59.000 --> 35:01.000
and putting it as a global menu,

35:01.000 --> 35:04.000
leaving the top bar there just by itself.

35:04.000 --> 35:06.000
There may be some menus still there.

35:06.000 --> 35:11.000
I've never really used the window manager at all,

35:11.000 --> 35:13.000
to be honest, since 9.7.

35:13.000 --> 35:15.000
So now, 9 kind of genericed something

35:15.000 --> 35:17.000
to make the window look good.

35:17.000 --> 35:19.000
There's nothing there in the file menu.

35:19.000 --> 35:22.000
WebWizard, WizardJet over there, says that

35:22.000 --> 35:24.000
what we are seeing today is not a fully done,

35:24.000 --> 35:26.000
fully baked version of client-side decorations.

35:26.000 --> 35:29.000
Enlighten me as to what you mean, sir.

35:29.000 --> 35:31.000
You did.

35:31.000 --> 35:33.000
Oh, okay.

35:33.000 --> 35:35.000
Sorry.

35:35.000 --> 35:38.000
The problem with it is, is that essentially,

35:38.000 --> 35:41.000
there's not going to be full client-side only decorations.

35:41.000 --> 35:43.000
I don't think anyone has gone out and said,

35:43.000 --> 35:45.000
purely client-side decorations,

35:45.000 --> 35:47.000
everything done in one process,

35:47.000 --> 35:49.000
everything one thread is perfect.

35:49.000 --> 35:51.000
The thing is, you can't have more than one thread

35:51.000 --> 35:53.000
in a single application.

35:53.000 --> 35:55.000
It's very simple.

35:55.000 --> 35:57.000
All you'd have to do is implement a listener

35:57.000 --> 35:59.000
to go and close.

35:59.000 --> 36:01.000
You have the problem with,

36:01.000 --> 36:03.000
if the application freezes, the X button freezes,

36:03.000 --> 36:05.000
or this freezes, or that.

36:05.000 --> 36:07.000
It's like a moot point,

36:07.000 --> 36:09.000
because at the current time,

36:09.000 --> 36:11.000
where we are right now,

36:11.000 --> 36:13.000
if the server itself freezes,

36:13.000 --> 36:15.000
that's the same problem.

36:15.000 --> 36:17.000
Except now it affects everything,

36:17.000 --> 36:19.000
and you need to restart the actual server.

36:19.000 --> 36:21.000
Well, that doesn't happen as often, though.

36:21.000 --> 36:23.000
Okay.

36:23.000 --> 36:25.000
All right, so Wimpy wants to chime in with a perspective

36:25.000 --> 36:27.000
for using client-side decorations on other desktops.

36:27.000 --> 36:29.000
Go ahead, Wimpy.

36:29.000 --> 36:31.000
Yeah, I was being a little facetious

36:31.000 --> 36:33.000
when I yelled out no so vociferously earlier.

36:33.000 --> 36:37.000
Client-side decorations are an intelligent design,

36:37.000 --> 36:39.000
and ultimately a good idea.

36:39.000 --> 36:41.000
The way they stand at the moment, though,

36:41.000 --> 36:43.000
is that some of the way that they're rendered

36:43.000 --> 36:47.000
is sort of being forced upon other desktops.

36:47.000 --> 36:51.000
So not everyone subscribes to the design philosophies

36:51.000 --> 36:53.000
behind Nome 3.

36:53.000 --> 36:55.000
Right.

36:55.000 --> 36:59.000
And you could be trying to use GTK 3

36:59.000 --> 37:01.000
just as a toolkit to develop an application.

37:01.000 --> 37:05.000
But some of these design choices from Nome 3

37:05.000 --> 37:07.000
are being, in some cases, forced upon you.

37:07.000 --> 37:09.000
In other cases,

37:09.000 --> 37:13.000
they're requiring you to make changes to your existing code

37:13.000 --> 37:15.000
in order to accommodate their design choices.

37:15.000 --> 37:17.000
And there are other projects out there

37:17.000 --> 37:21.000
that don't subscribe to the Nome 3 metaphors.

37:21.000 --> 37:23.000
So there's the Marte desktop.

37:23.000 --> 37:25.000
There's XFCE.

37:25.000 --> 37:27.000
There's Cinnamon.

37:27.000 --> 37:29.000
There's LXDE.

37:29.000 --> 37:31.000
All of these projects use GTK,

37:31.000 --> 37:33.000
and all of them are now impacted by a decision

37:33.000 --> 37:35.000
that's been made by an upstream project.

37:35.000 --> 37:37.000
Well, I guess my question is similar to Ik's.

37:37.000 --> 37:39.000
Go ahead, ask your question,

37:39.000 --> 37:41.000
because I think you're kind of echoing my thoughts too.

37:41.000 --> 37:43.000
Yeah.

37:43.000 --> 37:45.000
Well, can't those who are implementing

37:45.000 --> 37:47.000
the client-side decorations

37:47.000 --> 37:49.000
make the code check for whatever desktop environment

37:49.000 --> 37:51.000
they're running before,

37:51.000 --> 37:55.000
and then go ahead and use that,

37:55.000 --> 37:57.000
but only in Nome 3?

37:57.000 --> 37:59.000
That's my question.

37:59.000 --> 38:01.000
The clue is in the name.

38:01.000 --> 38:03.000
It's client-side decorations,

38:03.000 --> 38:05.000
so it's nothing to do with the desktop.

38:05.000 --> 38:09.000
And whilst there are a number of opportunities

38:09.000 --> 38:13.000
to override the new title bar behavior,

38:13.000 --> 38:15.000
there is also the facility as an application designer

38:15.000 --> 38:19.000
to absolutely enforce and hard code a look and feel.

38:19.000 --> 38:21.000
And there are good examples

38:21.000 --> 38:23.000
for why you would want things this way.

38:23.000 --> 38:25.000
So if you look at the new version of gedit

38:25.000 --> 38:27.000
that came out with Nome 3.12,

38:27.000 --> 38:33.000
that uses the split title bar arrangement,

38:33.000 --> 38:37.000
and therefore it requires that the close button

38:37.000 --> 38:39.000
is positioned in a different place.

38:39.000 --> 38:41.000
So giving that power to the application designer

38:41.000 --> 38:45.000
to ensure that their application is displayed

38:45.000 --> 38:47.000
the way they intended is a powerful feature.

38:47.000 --> 38:49.000
But the knock-on effect of that

38:49.000 --> 38:53.000
is that other applications and desktop environments,

38:53.000 --> 38:55.000
in the meanwhile,

38:55.000 --> 38:57.000
whilst we adapt and update the theming,

38:57.000 --> 39:01.000
have sort of had some breakage.

39:01.000 --> 39:03.000
So I want to give Daredevilin a chance to respond to you,

39:03.000 --> 39:05.000
and then we'll go to WebWizardG

39:05.000 --> 39:07.000
or whatever's going by this week.

39:07.000 --> 39:09.000
So go ahead, Daredevilin.

39:09.000 --> 39:11.000
All right, so my understanding of the...

39:11.000 --> 39:15.000
I've actually recently went to GTK folks and said,

39:15.000 --> 39:19.000
look, I've been seeing more and more projects switching to Qt.

39:19.000 --> 39:21.000
I'm trying to understand more deeply

39:21.000 --> 39:23.000
what are the root causes for this.

39:23.000 --> 39:27.000
And it pretty much boils down to the fact

39:27.000 --> 39:30.000
that GTK folks have been developing these features,

39:30.000 --> 39:34.000
and documenting the stuff, and making it available.

39:34.000 --> 39:36.000
And not many people were actually interested

39:36.000 --> 39:39.000
in participating in the changes before they were made.

39:39.000 --> 39:43.000
It's not like there was not a discussion about the changes.

39:43.000 --> 39:46.000
It just appears that people didn't join the conversation.

39:46.000 --> 39:48.000
And once the changes were accepted

39:48.000 --> 39:50.000
by those that were in the conversation,

39:50.000 --> 39:52.000
people are complaining.

39:52.000 --> 39:55.000
At that point, it's already decided.

39:55.000 --> 39:58.000
The second part of that is that GTK actually...

39:58.000 --> 40:00.000
I think I actually gave...

40:00.000 --> 40:03.000
I put the link in the Reddit.

40:03.000 --> 40:06.000
But they've actually made a video

40:06.000 --> 40:09.000
explaining more or less what's their approach.

40:09.000 --> 40:12.000
And they want more to be platform than actually integrate.

40:12.000 --> 40:16.000
And therefore, some choices rely on that vision.

40:16.000 --> 40:19.000
Now, on the project that selected GTK,

40:19.000 --> 40:22.000
I guess they need to engage more in the conversation.

40:22.000 --> 40:24.000
And that should actually solve

40:24.000 --> 40:26.000
much of the problems we are finding.

40:26.000 --> 40:29.000
So do you feel like the GNOME project

40:29.000 --> 40:31.000
is sort of mandating a standard?

40:31.000 --> 40:33.000
Is that what you're saying?

40:33.000 --> 40:36.000
So what they've actually said is a clear path.

40:36.000 --> 40:39.000
So for instance, they will prefer

40:39.000 --> 40:41.000
be platform than integrate.

40:41.000 --> 40:43.000
In their vision, for example,

40:43.000 --> 40:45.000
when you develop an application,

40:45.000 --> 40:47.000
they don't think about the application

40:47.000 --> 40:50.000
should look exactly like a Windows application on Windows.

40:50.000 --> 40:53.000
They think it should look exactly like you developed

40:53.000 --> 40:55.000
to be looking like initially.

40:55.000 --> 40:59.000
They will make Linux first-class citizen.

40:59.000 --> 41:02.000
And the rest, they want to allow you to write to those.

41:02.000 --> 41:06.000
But it's not like if something is going to be added to GTK,

41:06.000 --> 41:10.000
it's not going to be like not entered to GTK

41:10.000 --> 41:13.000
because it doesn't work exactly on Windows.

41:13.000 --> 41:15.000
They are working around those

41:15.000 --> 41:18.000
to allow the application to execute there.

41:18.000 --> 41:20.000
But they want to be platform first.

41:20.000 --> 41:23.000
If that's their vision, I guess it's understandable

41:23.000 --> 41:27.000
that they want to kind of create a way of,

41:27.000 --> 41:29.000
okay, to do things,

41:29.000 --> 41:32.000
and they are inviting people to engage in the conversation.

41:32.000 --> 41:36.000
If they don't, I guess it's going to be what they find.

41:36.000 --> 41:41.000
Well, and I wanted to give some time for more response,

41:41.000 --> 41:43.000
but I want to also sort of shift the conversation here a second.

41:43.000 --> 41:45.000
But WizardJed, did you have any final thoughts

41:45.000 --> 41:47.000
you wanted to get on that?

41:47.000 --> 41:49.000
Yeah, just to kind of respond to Dared Evelyn's thing

41:49.000 --> 41:51.000
and to go on what I was trying to say as well

41:51.000 --> 41:54.000
is that it is happening.

41:54.000 --> 41:58.000
The problem is that it's happening in kind of different camp.

41:58.000 --> 42:02.000
So yes, I'll admit that that is definitely going on in the GNOME camp,

42:02.000 --> 42:05.000
and they are discussing how to do client-side decoration.

42:05.000 --> 42:08.000
The problem is the QT guys are also discussing this,

42:08.000 --> 42:10.000
and they're discussing it in their own way.

42:10.000 --> 42:12.000
And at the end of the day, there's two totally different ways

42:12.000 --> 42:14.000
when they're going about doing it.

42:14.000 --> 42:16.000
GNOME guys are trying to push it out, get it out now

42:16.000 --> 42:18.000
so we can see how it's working, get it done.

42:18.000 --> 42:22.000
QT guys want to have a fully set-out standard, then push it.

42:22.000 --> 42:25.000
The problem is that they're conflicting in that way.

42:27.000 --> 42:29.000
Something's going on in the background over there.

42:29.000 --> 42:34.000
I think, too, I have to wonder if maybe this kind of approach,

42:34.000 --> 42:36.000
which seems to be upsetting some folks,

42:36.000 --> 42:40.000
and also creating inconsistencies across other desktops.

42:40.000 --> 42:43.000
And GNOME isn't like it's in some sort of powerhouse position.

42:43.000 --> 42:46.000
You can see maybe why they want to have a GNOME OS, right?

42:46.000 --> 42:49.000
Is this going to drive people away from using GTK?

42:49.000 --> 42:51.000
What do you think, Ryan?

42:51.000 --> 42:53.000
Go ahead. Matt, what do you think?

42:53.000 --> 42:55.000
Do you think more people are going to say,

42:55.000 --> 42:57.000
if GTK wants to push forward with this kind of stuff,

42:57.000 --> 42:59.000
if there's somebody that's not on board with the vision,

42:59.000 --> 43:01.000
don't you think it's going to be more likely

43:01.000 --> 43:03.000
they're not going to choose GTK for their future project?

43:03.000 --> 43:05.000
I think you're going to have some overflow.

43:05.000 --> 43:08.000
I think at the end of the day, you're going to have some initial people,

43:08.000 --> 43:10.000
a little bit like what we saw with Unity

43:10.000 --> 43:12.000
and various things that the Ubuntu team is running, too.

43:12.000 --> 43:14.000
I think initially you're going to get some blowback,

43:14.000 --> 43:17.000
but I think in the long term, it might actually pay off.

43:17.000 --> 43:19.000
It's gutsy. It's edgy.

43:19.000 --> 43:21.000
It might blow up in their face,

43:21.000 --> 43:23.000
but I think there's a possibility that it might pay off.

43:23.000 --> 43:27.000
Hold on. This is way bigger than what Unity was doing.

43:27.000 --> 43:30.000
That was a soft example, though.

43:30.000 --> 43:32.000
Very soft example.

43:32.000 --> 43:34.000
I'm not comparing variables.

43:34.000 --> 43:36.000
Let's go to Daredevil, and he says that there's already a few things

43:36.000 --> 43:38.000
that client-side decorations have already brought us.

43:38.000 --> 43:40.000
What are those?

43:40.000 --> 43:43.000
Not exactly client-side decorations, but the changes.

43:43.000 --> 43:46.000
Just GNOME 2 to GNOME 3 as an example.

43:46.000 --> 43:49.000
They broke the API, yes.

43:49.000 --> 43:51.000
Initially, people were saying,

43:51.000 --> 43:53.000
oh, what the hell is going on with GNOME folks?

43:53.000 --> 43:55.000
This is unbearable.

43:55.000 --> 44:00.000
Suddenly, we're seeing more projects that were using GTK 2

44:00.000 --> 44:03.000
moving to GTK 3.

44:03.000 --> 44:06.000
I would consider that as a positive thing.

44:06.000 --> 44:08.000
Initially, people ditched GTK 3,

44:08.000 --> 44:11.000
and now projects are moving.

44:11.000 --> 44:16.000
Now, the benefits I'm talking about is, for example, the shell.

44:16.000 --> 44:18.000
Cinnamon came out.

44:18.000 --> 44:21.000
It's not exactly the same shell as the GNOME shell,

44:21.000 --> 44:24.000
but their idea when they built the GNOME shell

44:24.000 --> 44:31.000
was to allow actual accessibility to be done on the shell

44:31.000 --> 44:35.000
or to build on top of that shell and still be compatible

44:35.000 --> 44:37.000
and to be the base technology.

44:37.000 --> 44:39.000
It's happening.

44:39.000 --> 44:45.000
I see that they are being looked on the side a little bit,

44:45.000 --> 44:47.000
and projects are reluctant to change.

44:47.000 --> 44:51.000
It is a burden to maintain something that is drifting,

44:51.000 --> 44:55.000
but once it's documented, it doesn't drift as much.

44:55.000 --> 44:57.000
I guess people are poking on the API

44:57.000 --> 45:01.000
using the nice features that appear on the undocumented API

45:01.000 --> 45:04.000
and then say, oh, well, it missed.

45:04.000 --> 45:06.000
It disappeared from the API.

45:06.000 --> 45:08.000
Well, it wasn't documented.

45:08.000 --> 45:11.000
It's not like they're breaking something.

45:11.000 --> 45:15.000
It's not set as, okay, we already released this.

45:15.000 --> 45:16.000
All right.

45:16.000 --> 45:19.000
Wimpy, I want to give you a chance to wrap us up on this topic.

45:19.000 --> 45:21.000
What are your closing thoughts?

45:21.000 --> 45:24.000
Well, I was just going to reply on the migrating to GTK

45:24.000 --> 45:26.000
and also acknowledge that Daredevil is quite correct.

45:26.000 --> 45:29.000
This debate has been rolling for about four years now,

45:29.000 --> 45:32.000
and there's been some dialogue about client-side decorations

45:32.000 --> 45:34.000
going back to 2010.

45:34.000 --> 45:38.000
But with regards to migrating to GTK3,

45:38.000 --> 45:41.000
I spoke to you a few months ago about the Marte desktop

45:41.000 --> 45:44.000
and how we were migrating to GTK3,

45:44.000 --> 45:48.000
and the next release was going to be based on GTK3,

45:48.000 --> 45:52.000
and then a few weeks later, we pumped out Marte 1.8,

45:52.000 --> 45:57.000
and we didn't complete the port to GTK3,

45:57.000 --> 46:01.000
and that's because GTK3 is evolving rapidly,

46:01.000 --> 46:03.000
and every time we rebuild against it,

46:03.000 --> 46:06.000
we find something new, something different

46:06.000 --> 46:08.000
that we have to accommodate for.

46:08.000 --> 46:10.000
So what we're doing is we're on a slow burn now,

46:10.000 --> 46:14.000
and I imagine other application developers who've got small teams

46:14.000 --> 46:17.000
are probably approaching this in a similar way,

46:17.000 --> 46:20.000
which is gently, gently, Catchy Monkey,

46:20.000 --> 46:22.000
slowly port your code to GTK3,

46:22.000 --> 46:26.000
dual support GTK2 and GTK3,

46:26.000 --> 46:29.000
and only release on GTK3 when you're absolutely certain

46:29.000 --> 46:34.000
all of the shifting sand beneath you has stopped moving.

46:34.000 --> 46:39.000
So it isn't an easy thing to target at the moment.

46:39.000 --> 46:41.000
Right, yeah, that makes a lot of sense.

46:41.000 --> 46:43.000
Well, I appreciate the insight on that.

46:43.000 --> 46:45.000
All right, well, so there we go.

46:45.000 --> 46:48.000
We have now logged in the journal that is Linux Unplugged,

46:48.000 --> 46:50.000
our first discussion around this topic,

46:50.000 --> 46:52.000
and I think we'll follow it as it goes on.

46:52.000 --> 46:54.000
We'll gauge what the audience's interest is

46:54.000 --> 46:56.000
and see if there's a further discussion to be had.

46:56.000 --> 46:58.000
I know that I find it to be particularly interesting

46:58.000 --> 47:01.000
because the user side of me kind of likes them,

47:01.000 --> 47:03.000
but the technical side of me definitely sees

47:03.000 --> 47:05.000
what the problems are and thinks that perhaps

47:05.000 --> 47:07.000
that should be handled by the server,

47:07.000 --> 47:09.000
especially when you have cross-operating systems

47:09.000 --> 47:11.000
and cross-desktop environments to consider.

47:11.000 --> 47:13.000
But I think it's worth seeing how it plays out,

47:13.000 --> 47:15.000
and I'm curious to see where the gnome camp's going

47:15.000 --> 47:17.000
because I'm, as a gnome desktop user,

47:17.000 --> 47:19.000
liking it a lot so far.

47:19.000 --> 47:21.000
But Martin did have a really, really good blog post,

47:21.000 --> 47:25.000
very long and very pro-Kwin, as you might expect.

47:25.000 --> 47:28.000
Basically, Martin's solution is just use Kwin for everything.

47:28.000 --> 47:30.000
But we do have that linked in the show notes,

47:30.000 --> 47:32.000
and I recommend you give it a read.

47:32.000 --> 47:34.000
Also linked in the show notes for this week's episode

47:34.000 --> 47:36.000
are the reasons from the gnome camp.

47:36.000 --> 47:39.000
They state on their Wiki, for example,

47:39.000 --> 47:42.000
that under Wayland, it's just simply preferred

47:42.000 --> 47:45.000
that clients render their own window decorations

47:45.000 --> 47:47.000
since Gnome Shell will need to keep support

47:47.000 --> 47:49.000
for decorating X clients.

47:49.000 --> 47:51.000
It would be good if GTK+, and Gnome Shell

47:51.000 --> 47:53.000
could use the same CSS theming.

47:53.000 --> 47:55.000
And then they also talk a little bit about performance,

47:55.000 --> 47:57.000
but again, it's all kind of rough stuff.

47:57.000 --> 47:59.000
Like, I haven't seen any hard analysis, but there you go.

47:59.000 --> 48:01.000
It's all linked in the show notes,

48:01.000 --> 48:03.000
so if you guys want to do some further reading right there.

48:03.000 --> 48:06.000
Now, Linux Unplugged is live on Tuesdays over jblive.tv.

48:06.000 --> 48:08.000
We start at 2 p.m. Pacific.

48:08.000 --> 48:11.000
And this weekend, coming up on Saturday and Sunday,

48:11.000 --> 48:13.000
if all goes as planned, we should be streaming live

48:13.000 --> 48:15.000
from Linux Fest Northwest Saturday and Sunday,

48:15.000 --> 48:17.000
so just check jblive.tv throughout the weekend

48:17.000 --> 48:20.000
and see what shenanigans we're up to over at the Fest.

48:20.000 --> 48:22.000
Matt, are you excited? Are you ready? Are you pumped?

48:22.000 --> 48:24.000
I'm excited and nervous about the whole ill thing.

48:24.000 --> 48:26.000
Yeah, I know. I know.

48:26.000 --> 48:28.000
I'm like, I've got water next to me.

48:28.000 --> 48:30.000
I've got a box of Kleenexes.

48:30.000 --> 48:33.000
I'm like, totally like, I'm trying to eat good today.

48:33.000 --> 48:36.000
I'll definitely, I'm more in the sanitize everything down,

48:36.000 --> 48:38.000
wiping down counters, you know, just start like,

48:38.000 --> 48:40.000
just really trying, and then of course the body stuff.

48:40.000 --> 48:42.000
We'll see how it goes, though.

48:42.000 --> 48:44.000
Get ahead of it. Get ahead of it, Matt.

48:44.000 --> 48:46.000
Get ahead of it, because it snuck up on me.

48:46.000 --> 48:48.000
I didn't even know until I got home last night from the studio,

48:48.000 --> 48:50.000
and I was like, wait a minute, I'm not feeling very good.

48:50.000 --> 48:52.000
Oh, boy. Yeah, definitely get ahead of that.

48:52.000 --> 48:54.000
And then last night, I didn't get much sleep.

48:54.000 --> 48:56.000
So, you know what?

48:56.000 --> 48:58.000
The two things, like, it's not a winning combo, Matt.

48:58.000 --> 49:00.000
It's not a winning combo.

49:00.000 --> 49:02.000
Now, we'd love to get your feedback.

49:02.000 --> 49:04.000
This show runs on your feedback, so go over to JupiterBroadcasting.com,

49:04.000 --> 49:06.000
click that contact link, and choose Linux Unplugged

49:06.000 --> 49:08.000
from the drop-down, and don't forget

49:08.000 --> 49:10.000
about our awesome subreddit,

49:10.000 --> 49:13.000
LinuxActionShow.reddit.com.

49:13.000 --> 49:15.000
And be sure to tune in on Sunday for the Linux Action Show.

49:15.000 --> 49:17.000
We'll be doing last live from Linux Fest Northwest,

49:17.000 --> 49:19.000
and we should have a good recap,

49:19.000 --> 49:21.000
but if you aren't able to catch all the live coverage,

49:21.000 --> 49:23.000
we should have a good roundup

49:23.000 --> 49:25.000
in the Sunday's Linux Action Show.

49:25.000 --> 49:27.000
All right, Matt, I'll see you on Sunday, okay?

49:27.000 --> 49:29.000
See you Sunday.

49:29.000 --> 49:31.000
All right, everyone, thanks so much for tuning in

49:31.000 --> 49:33.000
to this week's episode of Linux Unplugged.

49:33.000 --> 49:35.000
See you right back here next Tuesday.

49:35.000 --> 49:49.000
I'll see you next week.

