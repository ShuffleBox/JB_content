This is Linux Unplugged episode 46 for June 24th, 2014.
Welcome to Linux Unplugged, your weekly Linux talk show that's reporting in from Charlotte,
North Carolina. My name is Chris. Hello, Matt. Hello, Matt. Hello. Hello. Hi there. So, we've
got a big show today because we've got more stuff from Southeast Linux Fest 2014. Matt's
joining us on Mumble this week. We're going mumble mumble for all of the audio, which
we'll see how that works. It's an experience. So far, it's been a little troublesome. But
I think we worked out the kinks enough to do a show. And we also have Q5Sis. He's joined
us today. He was down at Southeast Linux Fest. Noah couldn't make it because I guess he's
going to Australia, I guess. I don't know. That guy's crazy. Wow. Yeah. I know. And he
just sent me an awesome little goody bag of stuff. He's got these Blackberry chargers
he loves, so he sent me a couple of those and a microphone. And then the coolest thing
ever, it lets you run HDMI over Ethernet. So, we could have like machines up in the
editing office that we could run down to the studio over our Ethernet and capture their
full screens, 1080p capture, over the network. It's kind of cool. That's awesome. No, it's
so cool. So, he just sent all that kind of stuff in and got a bunch of great interviews
we'll be playing today. But I thought, Matt, we would start with a little bit of follow-up
and feedback. Mr. Rotten Corpse, are you in here today? Paging Mr. Rotten Corpse. Did
you have anything to mention about the XBMC app art that you've been working on? Paging
Mr. Corpse. Oh, yeah, sure. Is my audio fine? Because it's kind of... It's all right. It's
enough to tell us about the XBMC app. Yeah. Yeah. Me and Rob Lowe are working on an update
to the XBMC app. There's been a lot of improvements to the artwork and language. So, there should
be a new update to it in about a day or two. Very cool. Very cool. So, it's a better time
than ever to have the Jupyter Broadcasting XBMC app. And I saw that you guys were working
on that last night, and that's really cool. So, I wanted to give a mention for that. So,
let's jump into our feedback. Corky98 submitted an article to the Linux Action Show subreddit
kind of following up on our conversation regarding Mantle on the Linux Action Show this Sunday.
He says, hello, Chris. On this week's Linux Action Show, you showed a clip of an AMD representative
announcing the possibility of Mantle support for Linux in the future. While this is all
very good, Mantle is another proprietary solution to the problem of graphic APIs and is bound
to eventually fail. I respect that the first few years Mantle will probably outperform
OpenGL and maybe even DirectX, but proprietary solutions will always run out of steam due
to the amount of effort needed to maintain them. Money runs proprietary solutions and
AMD will not assign a large budget year after year to maintain the code. I did my research
and before I was old enough to remember OpenGL and DirectX eye to eye, here's John Carmack
complaining about DirectX and a 2002 article summing up DirectX. In early 2000s, DirectX
was considered shambles and OpenGL was clearly an outperformer by then, by far. Then Microsoft
stepped up their game and caught up. DirectX is still ahead because of that boost in support
in the early 2000s. So, what does this mean? It means that maybe Matt's assumption that
OpenGL couldn't be fixed could be considered incorrect. OpenGL is heavily restructured
because the industry support for multiple versions of OpenGL and the newest version
is not pushed, unlike DirectX. Yes, OpenGL is very differently structured to DirectX,
but it doesn't mean it cannot be saved. And there's also, something he doesn't go into,
but there's also an extension system to OpenGL that is also a good thing and a bad thing.
But he thinks the important part is that the same AMD representative said that before Mantle
support that a high-quality OpenGL driver was going to be provided for Linux. This is
the news, Corky thinks, not Mantle support for Linux. Of course, they're lying and they'll
put a bit more work, release an entirely new version number and it will still be pretty.
But he said, also with things like Wayland coming down, this completely coincides with
Wayland becoming usable. So, if they leave it for a year or two, wait for Wayland to
get sort of figured out, wait to see where Valve pushes things, and then maybe AMD will
come along with either their new OpenGL or Mantle release.
That's an interesting idea, Corky. And Corky wanted to kind of write in, essentially, and
chime in support for OpenGL because both Matt and I were kind of like, well, OpenGL seems
to be fine, but developers seem to have written the book on it and decided they're not happy
with it anymore. And I think that was sort of the key piece that Matt and I were talking
about. And I think that's still the case. I think part of the problem is that developers
have just kind of checked out. I mean, Matt, am I missing anything? Is that kind of...
Well, no, I think that's it. I also think it's important to remember that my point was
that the very first thing out of my mouth is I know squat about OpenGL. That was the
very first thing out of my mouth, so I can't speculate on something I don't understand.
Yeah, totally.
Let's get that out of the way.
Let's just make that a disclaimer.
Yeah, let's be clear on this. But that being said, I do think that at the end of the day,
whether it's tinfoil or OpenGL or pies out of the sky, if the developers aren't into
it, that's a thing. So we can try and tree hug our way through this, like we usually
do.
Okay, Matt, so let's take Heaven's Revenge as a take here. Heaven's Revenge, you think
it's something to do with the kids?
I think so, because didn't all this graphics API hoopla happen in the late 80s, early 90s,
where there was a whole bunch of different APIs, and then they all converged into one,
well, two standards, DirectX and OpenGL, so they're just going back and making a whole
bunch of problems all over again.
Oh, I see what you're saying. The new developers didn't learn the lessons of the past generation.
Yeah, they don't know what our older elders went through to get us to this point.
Yeah, some of those gray hairs were well-earned fighting those battles that they're sort of
retredging up. I will see. I think, just to kind of cap off the whole mantle thing, it'll
happen if gaming on Linux really becomes enough of a market force that people want to make
money on it, and then that's when AMD will pull their head out of their ass, but by then
it will be too late to become fully relevant and lock it in.
So Sebastian writes in, we got really up in a huff a couple of weeks ago about Alienware
switching over to Windows for their quote-unquote Steam machine. Sebastian says, hey guys, there's
a video from E3 with the Alienware console that you talked about. In the video, they
talk about being flexible and giving you the opportunity to upgrade to SteamOS or install
the beta of SteamOS without voiding your warranty. So I thought this was extremely interesting
because this was a huge, they're basically torpedoing their future SteamOS effort. So
here is the clip of the Alienware rep.
Now if someone is interested in SteamOS, if they pick this up now, it's going to come
with Windows and they'll be able to upgrade this later, correct?
Absolutely. So once SteamOS is finally out, or if you want to load the beta, you absolutely
can load it on this system. We'll not void your warranty by any means. We'll support
it. We'll even help you do it if you need instructions on how to do it. SteamOS also
works with the Xbox 360 gamepad. It also works with the Logitech gamepad and a few others.
So this is SteamOS ready.
Exactly. I know a lot of guys out there were a little bit hesitant when they first started
hearing about these pre-built SteamOS boxes coming out, or in this case a WindowsOS box
because they're like, oh, why don't I build my own? This has a compelling value due to
stuff like form factor and price, which is actually very impressive.
There you go. And that was on the Linus Tech Tips YouTube page and they talk about the
fact that, you know what, they're going to actually support users that want to install
SteamOS. Does this make you feel better, Matt?
It makes me feel a little better because I feel like rather than living with their head
in their clouds or off their butts, depending on how you want to feel like they're actually
trying to embrace it, but basically placing responsibility onto the end user. I'm fine
with that, as long as they're not being debased about it.
So Riley, you think it's a terrible idea. Terrible idea.
Yes, because they still have to support their software, which is Windows essentially, they
still have to do their license fees for it, and you have to support it after SteamOS does
come out. They should have just waited for a stable build on SteamOS, but they did, and
they were just lazy, and I don't know what they did with it. But they should have waited.
I think that's still it. I think the fact that they had a Windows UI ready to roll right
out of the gate shows that they were kind of planning for things not to work out, they
weren't fully into it, and I think that's the real nail in the coffin.
All right, Rod and Corpse, if you want to play devil's advocate, go ahead, I'll let
you.
Okay, so I was thinking maybe it's helpful in a way. It's negative to the SteamOS, sure,
but it could potentially be good, because if they're calling the SteamBox or Steam Machine
and people start seeing that more often than just regular Valve Steam users, and they see
that the machine is able to be bought as a SteamBox, and then the next version is Linux,
they will still see it as a SteamBox, and maybe have more likelihood to buy it.
Hmm. All right, okay. I guess I could see that, particularly if the user is just totally
unaware, but it seems at least for the first year...
I don't believe that, I'm just thinking it's a possibility.
Okay, okay, I was going to say, because it seems like for the first year or two of this
console's life, the consumer is going to be pretty aware of what it is, because it's going
to be the savvier of the groups buying initially. I don't think the most average consumer has
any idea that the Xbox 360 runs a version of the anti-kernel. I think it's totally irrelevant
to them. They don't need to know it runs Windows, they don't give a crap that it runs Windows,
and I think SteamOS machines would eventually be like that, but I think for the first couple
years it's probably... probably people who know what an operating system is probably
know what the advantages of Windows over Linux are, maybe, I think? I don't know.
I think initially...
Oh, go ahead, Matt.
Well, I just wanted to draw one thing on here, is that at the end of the day, even if you
know what the OS is, if they're trying to target gamers, there's a little thing called
titles.
Yeah, very true.
And they're trying to launch with as many titles as possible. Now, while I think Alienware
is definitely kind of selling us all down the road, and certainly that's true to the
day, it's a money grab. I'm not expecting them to be all touchy-feely about it, just
they're looking at making money, period. They don't care.
Yeah. And, Poby, what's your point of view on this topic?
They're a hardware manufacturer, they need to sell hardware, and I think, given SteamOS
isn't out, I think it's perfectly reasonable for them to make a machine that runs whatever
operating system is out at the time. Like, right now, I would really love to have a box
underneath my TV. I cannot be bothered to build something. I would rather buy off the
shelf, and maybe I'm paying a premium for that, maybe I'm not getting the same components.
But I'm pretty sure there's plenty of people out there who, like me, would buy something
like over the internet or from a store, and if it happens to have Windows on it, so be
it, in the same way that anyone else would buy a laptop that happens to have Windows
on it. I'll stick it under my TV, maybe I'll install Linux on it later when the Windows
install becomes cruft-laden and horrible, because that's what Windows installs do. So
what do you do? You wipe it and you put Linux on it, and that's what people will do.
And so they'll see it as a performance upgrade, a boost.
Right. And I don't think it's a lazy thing. I think someone suggested that it was lazy
of Alienware. I don't think it's lazy. They need to sell hardware. They've already put
the R&D into making this thing. So it makes sense for them to ship the thing rather than
leave it on shelves or mothball the thing. It makes sense.
Do you think maybe it underscores the fact that they believe in a home theater PC-type
setup for console gaming, and they think that's the real revolution, is getting a PC that
powerful in that form factor in the living room with a controller-capable UI. That's
the thing that they believe in, not necessarily what operating system powers it.
Exactly. And the fact that they're willing to support people trying to get SteamOS on
it, the beta of SteamOS, all power to them. If anyone else had come out with a piece of
hardware and said, look, we're running a proprietary OS, but we will actively help you install
an alternative OS, surely that should be applauded.
Well, wait, wait, wait, wait, wait, wait, wait, wait, wait. You said commercial software.
Yeah, thanks, Richard.
He wanted to clear that up.
Yeah, right. All right, well, we're going to get into Southeast Linux Fest. We'll have
more links, including some additional info that didn't quite fit in the show notes if
you guys want to check that.
Before we go on, I want to thank DigitalOcean, one of the sponsors of the Linux Unplugged
podcast. Now, you know about DigitalOcean, right? Because it's kind of like one of the
coolest companies to come around in a while. It's simple cloud hosting, and DigitalOcean
is dedicated to offering really the most intuitive and easy way to spin up a cloud server.
And you know, I mean, sure, you can make a cloud server in under a minute, no bigs, right?
Wrong! It's a huge deal! Users can create a cloud server in under 55 seconds, and pricing
plans start at only $5 a month for 512MB of RAM, a 20GB SSD, a blazing fast CPU, and 1TB
of tier 1 bandwidth. Plus, DigitalOcean has data center locations in New York, San Francisco,
Singapore, and Amsterdam. But man, that interface? That interface is simple! Man, that interface
is intuitive with a control panel that won't stop, and power users can replicate it on
a large scale with DigitalOcean's straightforward API. And that stands for Application Programming
Interface. Think about the possibilities! In fact, people have! Because DigitalOcean
has a badass community with a ton of people growing all around it every single day, and
they're making applet controllers for Ubuntu, and that Mac operating system, and all those
other operating systems where you can control your DigitalOcean Droplet right from your
desktop. And of course, because you can get a Droplet imaged, deployed, spun up super
fast, it saves you time, makes it really easy to back up, makes it crazy simple to revert
if you make a mistake. In fact, that makes it ideal for training, too. So many possibilities.
Run your backend infrastructure, train yourself, replace a cloud service for $5 a month. Why
not? Well, I'll tell you why. Maybe you're going to be cheap. I understand. I mean, $5
is not very much money, but you want a better deal. You want something even better? Well,
guess what? Chris is going to hook you up. Going to hook you up. You want to know what
you can do? Use the promo code UNPLUGJUNE. Use the promo code UNPLUGJUNE. When you check
out, you're going to get a $10 credit over DigitalOcean. If you use the $5 rig that I've
been using for a while, you're going to get a ton of machine. And let's be honest, we're
talking about Linux here. We're talking about something that excels as a server operating
system in really, really different, varying different environments. I mean, that's what's
so great about it. And it's amazing what you can get for $5 a month. And if you use our
promo code UNPLUGJUNE, UNPLUGJUNE will get you a $10 credit. Bob's your uncle. You're
going to get to try that droplet for two months. They also have hourly pricing. So if you want
to just try something out for testing, you can. There's lots of reasons to try out DigitalOcean's
super fast provisioning, SSD hard drives, tier one bandwidth, amazing hardware sitting
on top of KVM virtualization, private networking, an active developer community, just a rockin'
community in general. Go check them out. DigitalOcean.com and use the promo code UNPLUGJUNE. Don't be
a fool. Go get yourself your own cloud server with root access up in the cloud connected
to tier one bandwidth for only $5 a month. UNPLUGJUNE when you check out. That lets them
know you heard about it right here on the Linux Unplugged show. And by the way, keeps
us going. And that's also a really good thing. Big thanks to DigitalOcean for sponsoring
Linux Unplugged.
Okay guys. So Mr. Q5, is there anything you want to set us up with Southeast Linux Fest
before we move on and get into some interviews? I've got six clips I want to play here on
the show. All really good stuff. Our first one is Zach Underwood. Now I don't know, Mr.
Q5, is there anything you want to set us up with before we jump right in or should we
just start?
Well I do want to end up with something. But before we jump in with Zach's video, I do
have to say that for those of us that were there at Linux Fest Northwest, we realize
and we remember that the wireless network situation was kind of bad. The wireless network
itself was phenomenal. Absolutely fantastic connection. The way they had it set up, the
way they did everything was the way it should have been done. This guy, Zach, he knows what
he is doing.
Now how many people in attendance do you know? Do you have a rough number versus Northwest
versus Southeast?
I don't have an exact number.
Was it more or less people? Because that might explain the Wi-Fi.
It was a little bit less. But just the way that the conference was set up, I would say
about the same in the area at the same time. Linux Fest Northwest had a higher volume,
but I would say it was Southeast. I think more people stayed around for the whole day.
Interesting. Interesting. So hey, that's always a big plus when the wireless works. All right.
Well we'll kick it off with Zach's interview and then you can chime in with anything you
want to add and we'll run through some of these. So we'll send it over to Zach Underwood.
Good afternoon. We are still at Southeast Linux Fest going around table to table meeting
a bunch of exciting people. Zach here from Global Vision drove two hours to not only
be at Southeast Linux Fest, but he is giving me internet tokens. Isn't that right, Zach?
Yes, I am.
So this is possibly your presentation, which is coming up in an hour or so. Yeah. It's
going to be the presentation. I am looking forward to the most out of any of them here
at Self. Primarily because I have a particular problem that we were kind of discussing off-camera
that I've been trying to find a solution. And your expertise in this area is going to
be, at least I hope, is going to be instrumental in fixing this problem. So if you could tell
me a little bit about what exactly your presentation and specifically your company does and what
it is, the service that you provided here at Self.
All right. First I'll start off with the company. My company is Global Vision. We're a wireless
ISP. So we provide wireless internet to clients that typically maybe have only DSL and they
want something better than the 1.5 meg DSL. So we set up a tower with access points and
then we point client radios on the client's house to the tower to show them internet.
So what we're doing, my presentation here at Self is basically how to optimize indoor
wireless, particularly in a multi-access point environment. So you would have in a hotel
or a conference room. A lot of the stuff I'm going to be talking about is not really applicable
to a single radio. Those are pretty easy. That's pretty simple. And so I'm going to
talk about optimizing it as for performance, for speed, the difference between 2.4 gigahertz
and 5 gigahertz radios and basically just how to make Wi-Fi not suck.
So give me an idea for somebody who is maybe looking at setting up a very simplistic wireless
network. Maybe they want something just a little bit better than the integrated radio
that's in their router. What do you recommend for just a single autonomous access point?
I'm very bullish on a vendor called Ubiquity. They are very price conscious. They make a
wireless access point called the UAP. It retails for about 69 bucks and it competes with Cisco
access points that go for six or seven hundred dollars. So there is a little bit of a learning
curve with these systems. First off, none of the Ubiquity radios you can actually log
into and see a web interface. You have to use a separate management software which they
give away for free. They don't charge a license. Thank you Cisco. So the UAP is a great choice
for an AP and we actually deploy them quite often to our clients.
So we have set up a number of the Unifi access points. How do those work with Linux?
They actually work really well. They actually run Linux and you can SSH into the radios.
They're running BusyBox which is a very stripped down embedded version of Linux.
How about for the management service? If I wanted to stay away strictly from a Mac or
Windows environment, can I do that?
Yes. They actually prefer to run the management server on a Linux platform. In this case Debian
and Ubuntu. It is a Java based app that uses MongoDB for the backend.
Outstanding. And if people wanted to find more about Global Vision and the concepts
that you're talking about, where can we direct them to?
GlobalVision.net and anyone feel free to email me. I am zunderwood at GlobalVision.net and
I'll be happy to send you a copy of the presentation.
Outstanding. Thank you so much Zach for taking some time to talk with us.
All right. Thank you.
Wait a minute Wimpy. You're connected to us right now by shortwave radio? That's some
kind of special. Yeah, we can hear you. Where do you live that you have to connect by shortwave
radio?
Well, as I learned today, about 15 miles from Popeye, but apparently in the back of beyond,
in the farming belt of North Hampshire.
I love that those APs run Linux. I'm all about that. Like, oh yeah, you can just switch in
and run BusyBox and then you can pretty much do everything you need. And it sounds like
those guys really knew their Wi-Fi stuff based on what Q5 was saying. Okay. Well, so there's
a group called Wicked and they're working on a two-factor authentication system. And
I haven't watched the whole clip yet, but I'm hoping it's essentially an open solution
to two-factor authentication. Let's take a listen.
I'm here with Nick from Wicked and I don't know anything about Wicked right off the bat,
but I got to tell you from looking around your table and looking at some of the promotional
material you have, I have to tell you, I'm intrigued. Can you tell me a little bit about
what Wicked is and what it is you guys do?
Sure. So we provide a two-factor authentication solution. It is a software-based solution.
So the two factors are possession of a private key embedded in a software token and knowledge
of a PIN. And we have a server that sits behind your corporate firewall. It's Linux-based.
And there's a key pair exchange basically between the software token and your server.
And a PIN is created by the user and there's a registration process. And after that, when
the user wants to log in, they type their PIN into the software token. It's encrypted,
sent to your server. If the PIN is correct and the encryption is valid and the account
is active, a one-time passcode is generated on the server, encrypted, and returned to
the user.
Now, this is a solution that can be, you said that it's based on Linux. Can your system
be used with Linux?
Oh, yes. So in your infrastructure, what you want to do is establish an authentication
protocol. Typically, what we see is companies use RADIUS. So your VPN, SSH, Apache, FreeNX,
all these systems will talk RADIUS. And the ideal thing is to have them all talk RADIUS
to your free RADIUS server or in the Windows world, the NPS, have it do authorization in
your directory and then proxy the credentials to an authentication server like Wicked.
Sure. Okay. Does this, to get this product rolling, does it take a lot of knowledge in
the development field? Or is it something that an administrator could do?
No. And it's primarily targeted to administrators. And we've got a very easy setup process. We're
trying to make it as easy to set up as software as a service, but be reliable and be in your
location.
So this isn't a subscription-based model. It's something you buy one outright.
Actually, our licensing is different. We have a subscription licensing. So instead of having
a permanent license and charging you 20% per year for support, we actually charge an annual
subscription, but you still control the software. We have a three-year prepayment option, so
you can get a discount if you prepay. But we kind of looked at it as being like, well,
do you really want to pay upfront for all of our software? And then maybe what if we
got a business? So it's less risk for our buyers. We're
incented to keep the software up and running and solid and secure. So it kind of aligns
our incentives.
And the thing is that funding model is probably a little bit more beneficial to your business
to have that steady income rather than somebody, they come in and then they buy it and then
they take off, right?
Yeah. So it makes it harder to grow fast because if you get that big chunk of money, you can
actually grow fast, but it makes it more disciplined. And we're not going to grow faster than we
can grow our marketplace.
Now how does your product compare to something like say Google Authenticator?
So Google Authenticator is primarily their software token. They have like a PAM module
that you can run for SSH. There's two key differences. One is that it is an addition
to passwords. So we prefer to get rid of passwords because they suck.
And it's also really just a PAM module. So what happens when you want to use it for your
VPN? Where's the integration for that? Where's the Apache module? So if you're doing a one-off
thing and you just want to lock down the couple of servers that you manage or have at home,
that's great. If you're really looking at deploying something that can help your organization
grow and manage users and have logging and have support, that's where you'd look to Wicked.
Outstanding. Where can people go to find out more about Wicked and what you guys do and
how to get involved or to, I guess in your case, how to purchase the product or service?
So wickedsystems.com, W-I-K-I-D, systems.com. We have a source for sites. We've got an open
source version. We do welcome contributions to that. And we are on Twitter at wickedsystems
as well.
Perfect. Thank you so much for taking the time to talk with us. We really appreciate
it.
I like, it says, Doggo Red in their, Dago Red in the chat room says that they were also
giving out mix drink, mix shake, like drink shakers as swag at the fest. That's awesome.
That's a great swag item. I kind of want to check that out. And again, that's wicked and
it's a W-I-K-D. Q5, did you get a chance to look at that stuff? What did you think?
Yeah, their stuff is actually really impressive. And just to let you know, I did happen to
get one of those drink shakers for him.
Oh, for me?
So I will drop that in the mail.
No way!
Yes, I did.
Oh, awesome.
I saw it and I was like, this is something Chris would love.
I do.
I looked at the guy and said, I'm going to take two. And he's like, well, I really don't
have that many. And I said, well, we're doing an interview. He goes, yeah, okay, I can
afford two.
Good man. Good man. Well, I love that. And I'm so glad Noah got the Google Authenticator
question in there because that was totally what I was thinking too. So Q5, were you on
camera for these interviews?
Was that you?
I was actually the man behind the camera for all of these.
Okay. Wow, very awesome. Okay, our next group is the Internet System Consortium. And Noah
stopped by and had a quick chat with them. I believe they just celebrated their 20th
birthday too.
So we have Chuck from ISC, the Internet Systems Consortium. How are you doing today, Chuck?
Real good. How are you?
I'm doing excellent. Now, to start out, if you can tell me a little bit about what ISC
is and what it is you guys do.
Well, ISC has been around in the internet for a long time. We just had our 20th birthday
this spring. ISC is the author and publisher of the BIND 9 DNS software that most of the
internet uses now. We also have ISC DHCP product, which again is the standard implementation
of DSC across most of the internet. In addition to the software services, we provide support
for free software. In fact, that's a good deal of what funds the company. And that's
my job. I'm a support engineer. And in addition, we do have a hosting service, which we have
a commercial side and a public benefit side. And we have, we do DNS hosting, SNS secondary
name service, which again is split into a public benefit and a commercial side. We also
maintain the F root name server, which is an Anycast server all across the world. I
don't know exactly how many nodes it has, but F root is everywhere. And we do a lot
of cool stuff to benefit the internet.
Well, awesome. Well, thank you so much for taking time to meet with us. We really appreciate
it.
Thank you. And I also, I didn't get a chance to finish because we put one in the last week's
episode, but another Slackware advocate too, right Q5? It seems like Slackware was big
down there. Is that just the impression I got from these clips?
Oh yeah. Slackware users came out in force and actually talking with Chuck, his whole
family uses Slackware. His wife uses it. His 17 year old son uses it. His 15 year old daughter
uses it. His entire family runs Linux.
That's awesome. And yeah, he made the comment like if Slackware is meant for you, it'll
eventually find you. You don't have to find Slackware. I love it. You know, that's so
cool. And it's good to see like you go to these kinds of events, you get everybody together
and one of the old dog distros is still getting a lot of love.
Before we go to our next group of clips, I want to thank our second sponsor this week
and that is the great folks over at Ting. Go to linux.ting.com. That'll take $25 off
your first device. Or if you've got a device that's compatible, well then let's give you
a $25 Ting credit. And if you're like me, that might pay for more than your first month
of service. In fact, go to linux.ting.com. Click that how much would you save button
right there and plug in how much you actually use.
So I decided I'm taking like a husband, wife, you know, a spousal or you know, whatever
your situation is, two people, plug in your actual minutes. And I kind of high balled
here. I went 800 minutes, 500 text messages and 2 gigabytes of data. Now this isn't what
you're paying for. It's what you actually use. And I was generous. I said you're going
to get that for $150 a month. That's probably, I mean you're probably going to pay more than
that. But we're going to low ball a little bit here.
When I calculate the savings, I could see that by switching to Ting over a two year
period, I would save $2,064. $2,064 by switching to Ting. Linux.ting.com. That's where you
want to go. And once you become a Ting customer, I'll tell you there's a few things about the
Ting service you're going to absolutely love. First of all, it's a flat $6 per month and
then it's just your usage on top of that. Plus whatever cut the man's going to take.
But really, it's a flat $6 and then your minutes, your messages and your megabytes, Ting adds
them all up at the end of the month. Whatever bucket you fall into, that's all you pay.
The great part is their dashboard makes it crazy easy to see where you're at. You can
track individual devices, set limits, set alerts. Go in there and set up call 40 when you miss
a call. All that kind of stuff that you're always wondering, hey, what's that code I'm
supposed to enter in my phone to activate this feature? Ting exposes all of that through
their dashboard and through their companion apps on Android and iOS. Lots of nice things
about Ting. And I also want to point out that when you're over at Ting, go to Linux.ting.com
to get started. Try out that savings calculator. And then after you've played around for a
little bit, head over to the blog. Ting really, really puts a lot of effort into this blog
and there's a ton of good content, even for non-Ting customers. But what I want to point
your attention to is if you're in a contract and you know you want to switch to Ting but
you're not ready to go whole hog and cancel your contract, I want to remind you that Ting
does have an early termination relief program, ting.com slash ETF. You can find out more
about that. There's also another system they've set up, Ting Reminders. Ting will just send
you a nice little gentle nudge when your contract expires and says, hey, bro, why don't you
move over to Ting now? We'll get you taken care of. They've also got a new swap program
to help you swap up to a Galaxy device and move over to Ting. Linux.ting.com. Check them
out. No hold customer service. Voicemail, caller ID, tethering, hotspot, three-way calling,
call forwarding, all other features you'd expect, all part of your service, no hidden
charges, no BS. It's really quite awesome. Linux.ting.com. And a really big thanks to
Ting for sponsoring Linux Unplugged. I've been using them for well over a year now.
And it totes rocks. I got my recently-bricked Ubuntu Touch Nexus 5 on the Ting network.
And until I tried to do today's update, I was quite enjoying using it on the Ting network.
But now, I'll just use Android. Okay. Now, we're going to move over to the BSD folks.
If you haven't gone to one of these fests, you got to understand how these BSD guys work.
They are sneaky. They get in there, they talk nice to people, they play nice, they listen
to the Linux users and they politely nod their head. And they say, here, Linux user, take
these horns, put these horns on, and then walk around with these flashing. It is subversive,
it's devious, and it works every time. And Noah had a chance to stop by and chat with
Chris, Chris's brother, Chris Moore, who you probably know from BSD now. Well, he got a
chance to talk with Ken Moore about PCBSD.
We're here with Ken Moore from the PCBSD project. How are you doing today, Ken?
I'm doing very well, thank you.
Thanks a lot for taking the time to talk to us. Now, I know that every time I see Alan
June, he makes it a point to tell me. We gave Alan a ride back from LinuxFest Northwest
back to his hotel. And the entire way back, the conversation was dominated with the idea
that everyone in the world should switch to BSD.
Oh, of course.
So tell me a little bit about what your connection to the BSD project is and what it is that
you do.
I am one of the developers on the PCBSD project. I generally focus on designing the graphical
utilities to make system management, system administration, installing and running applications,
doing all of that to make it simple for the user to basically use any system, any free
BSD system.
Now, PCBSD is primarily geared towards people that want to install it and run it on like
a laptop or a desktop. Is that correct?
Yes, PCBSD is more desktop focused. So any of the different desktop environments, we
have them all available. And we just try to provide PCBSD utilities on the side for managing
the free BSD specific functions in the background like wireless and stuff because they are very
different from the way Linux is run.
So since the project is very different from the majority of Linux distributions, what
would be a reason that I would want to switch to PCBSD or maybe just give it a try and see
what I think of it?
Well, a couple of the things that come to me off the top of my head is the stability
of free BSD since the operating system is completely separate from all the third party
packages. You can add and remove things like desktop environments and utilities and really
configure your entire system however you want without having to worry about breaking your
system.
Another one is ZFS. We have ZFS natively on free BSD and it is fabulous. That is actually
the required file system for PCBSD. Whenever you install a PCBSD system, you are installing
onto ZFS.
And then with that, we have a number of ZFS functions that we use and tie in to create
boot environments. So whenever you are going to perform an upgrade of your system, it will
automatically create a boot environment in the background. And if you don't like the
upgrade, if something got changed like it went to a new version of an application that
doesn't work right, all you have to do is restart your system and say, oh, I want to
go back to this older boot environment and you are back to your system in less than a
minute.
Okay, well thanks. If somebody was interested in getting involved in the PCBSD project or
learning more about PCBSD, where could that person go?
You can go to PCBSD.org or we also have forums and a wiki and a blog, all of them just with
the prefix. So wiki.pcbsd.org, forums.pcbsd.org, blog.pcbsd.org. Any of those sites will get
you going and connect you to the project.
Outstanding. Well, thanks a lot for taking time to meet with us. We really appreciate
it.
Thank you very much. I thought that was a great chat. And unfortunately, maybe we'll
get a chance to talk to Ken about this more. Then you can get a chance to talk about that
new desktop environment that PCBSD is working on. But they make good case for running PCBSD.
I'm digging that update snapshot system, Matt, where it's just sort of like, hey, you updated?
Well, let me just create a little backup environment you could boot into. That's pretty nice. I
kind of want that.
I love that idea. I want that on everything I run.
I wonder if once ButterFS is a little more widely adopted, a little more mature, if you
might see distros integrating that. This is the nice thing that PCBSD has going for them
is they really just focus on BSD and can focus on just what BSD supports so they can unilaterally
do something like that.
Now, we've got one more BSD clip to get to. And I'm really glad that Noah got a chance
to chat with Drew. She's sort of world famous for her involvement with the FreeBSD Project
and other things. I believe she's also been a guest on the BSD Now podcast. So I was really
glad they got a chance to chat with her. So here, we'll play that clip now.
As if one interview with the people from the BSD Project wasn't enough, we actually have
two people here that we can talk to. And the second is Drew. Now, Drew, we were specifically
asked to go seek out and talk to her. We were told that she has phenomenally interesting
things to say by Alan. How's that for a set up? And so we're here with Drew today. How
are you doing today, Drew?
I'm doing fine. Thank you.
Tell me a little bit about what it is that you do with the BSD Project and how your role
differs a little bit from the guys at the PCBSD Project.
Yeah, so I'm involved in a lot of little pots. So my main focus is on documentation and my
background is in system administration. So I write the documentation for both the PCBSD
and the FreeNAS Projects. And what we do is we aim to have a comprehensive user guide
for every release of the operating system. So it sort of keeps me busy. I'm also involved
with the FreeBSD Project. So I'm one of the directors at the FreeBSD Foundation. And I
also, as I can, I try to assist in the FreeBSD Handbook. Because FreeBSD has always been
known for having very comprehensive documentation. So I try to assist with that as well. From
my system administration background, I also care about, in addition to documentation,
and ways to get future system administrators to have a good solid base and open source.
So one of the things that we founded ten years ago is the BSD Certification Group. So we
concentrate on making sure that system administrators know what skills employers are looking for
when it comes to system administration. And we focus on the BSD operating systems.
Now I asked the gentleman from the PCBSD Project what he thought the compelling argument was
to give PCBSD a try. Can you give me what comes to mind as a compelling argument to
give BSD a try on the backend, on the server?
Yeah, so if we look at it from the FreeBSD point of view, which is basically the base
for the projects, PCBSD for Freenas, for PF Sense, I would agree with Ken's assessment
that ZFS is definitely a big one. We've had ZFS for some time. It's very mature. It's
very stable. And both the PCBSD and the Freenas projects are building on top of that ZFS base
to make utilities, to make it easier to take advantage of the features built into ZFS.
Some of the up and coming stuff that's coming out of FreeBSD from a programming point of
view, Capsicum is a really big deal. So Capsicum is a set of APIs that make it possible to
take existing applications that were originally not designed to be secure, and you can hook,
redevelop those applications with a very small footprint to actually secure them. So Capsicum
actually came out of a project, FreeBSD was a reference based system, it's the University
of Cambridge and Google, and they took the Chromium web browser, and nobody could accuse
a web browser of being securely designed from the beginning, and they were able to prove
that they could secure that application in less than 100 lines of code.
Wow, that is impressive, especially in a web browser. If somebody was interested in finding
more about the server side of BSD, or getting in contact, maybe even contributing to the
project, how would somebody get in contact or do that?
So FreeBSD has been around a very long time, it's a very large project, there are several
hundred committers, dozens of people that work on documentation, hundreds of thousands
of end users, so huge project. Because of that, and because it is an operating system,
it really depends on which parts you're interested in. So for example, we have several dozen
mailing lists. So somebody, if they're coming in on the development side, and they're interested
say in writing network device drivers, there would be mailing lists that would hook you
into the right people to discuss that sort of thing. If you're interested in file systems,
or if you're a system administrator, you're interested in administration. So I would recommend
go to the FreeBSD website, check out the mailing lists, because one of the things you want
to do is you want to become familiar with who's who in the community, and you also want
the community to become familiar with you, what it is that you can bring to the table.
And FreeBSD has always been known as being a helpful community, but you know, you have
to really engage with the community. So we have the mailing lists, we have IRC channels,
so we really recommend don't be shy, come in, you know, and engage with the community.
Well, thank you so much for taking time to talk with us. We really appreciate it.
I notice she's not wearing horns. Now, okay, Q5, be honest, did their insidious niceness
get to you a little bit? Because now not only are they going to these Linux conventions,
but they're enlisting the help of Canadians who are famously nice. Are you feeling the
pressure to run a little BSD now?
Oh, yeah, they're definitely nice. And actually, let me pause you right here, because Alan
has been quietly listening to me talk in our community about my preferences with desktop
environments and how I like to manage my system and how I like to run it. So he casually one
day is like, Oh, you should ask Ken about the one he's designing. Okay, sure, no big
deal. I'll talk to him about it. So I talked to Ken about it. And I'm like, Okay, you know,
give me kind of rundown. He's like, Well, better yet, let me just show it to you. I'm
not going to say much. Let me say that Lumina is unbelievable. Now, now keep in mind, you
know, I'm puppy Linux dev. But after checking out Lumina and where it is in its current
alpha state, it's actually tempting me to install PCB SD on one of my laptop, but it
seems so crazy to have another desktop. It really was now was it sort of like, can you
give me his sounds like it maybe is a little bit like a tiling window manager a bit? No,
it's not. It's a you know, it's a regular. It's not a tiling window manager. But it's
all the little things that make workflow so much quicker. The seamless nature of how he's
worked in life preserver with ZFS is just unbelievable. Yeah, that is pretty sweet.
Yeah. Yeah, Ken's got some Ken's got some skills, huh? Yeah, I'll be I'll be curious
to follow the way that goes. So it's called Lumina. We've talked a little bit about it
before. There's not a lot of details yet. L-U-M-I-N-A. And he did say that it has there's
some distribution. It might be arch that has actually already ported it over and has it
as an option. But I don't know exactly what distro that is. Very nice. Somebody runs Linux
and they want to test it out. I mean, obviously, they won't get any of the ZFS features, but
they can at least poke around and see what it's what's how it works and what I can't
wait to try it. Hey, I could look PCB SD. Hey, hey. I mean, if it comes with a pair
of horns, well, very good. So worth a trip, you think? Is it is it something you'd recommend
folks go to next year? Absolutely. You know, thinking back, you know, kind of comparing
it to Linux Northwest, because we had a bunch of our community members there. I've never
been to either conference before. This was my first year at Northwest. This is my first
year at Southeast. And I know this may sound kind of cliche, but I really do mean this
self felt like more of an extended family. Even though I knew none of these people before
after that one day on Friday, I felt like I was one of them. That Southern charm is
what you're saying? Exactly. You know, I had a great time at Linux Northwest. And if you
take all the goodness that was in that conference and you add in, you know, that legendary Southern
hospitality, yeah, you just you have a recipe for an amazing event. What about being at
a hotel? Did that give it a weird feeling at all? Or was that work really well? Actually,
it worked really well. The layout and the way that they had the floor track and the
individual, you know, speaking rooms, everything was right there and easily accessible. So
you could easily go from, you know, when you're going around talking to different vendors,
seeing what they have to offer to, oh, there's a there's a talk in that room right there
that I want to go to. Yeah, it wasn't like I need to go walk off and go up a hall and
up a staircase and find what room everything was there. Everything was easy to get to.
It was just it was a great event. Very cool. Well, maybe maybe we'll have to do a live
stream from there next year. You never know what's possible. It's interesting to see these
events because, you know, they don't get a lot of coverage. There's not a lot of people
talking about them yet. They're a major event that happens in the community. And I think
they're you'd almost expect them to be, I don't know, dwindling, maybe becoming less
relevant with things like hangouts that are available and mumble and and everything else.
But in some ways, there seems to be more of them than ever. And they seem to be larger
than ever. I don't know. I think maybe people somehow have managed to realize that there
is actually some value in meeting in meet space somehow. I expected we would all just
like be staring into the monitors for the rest of for the rest of humanity. But we still
manage to get together from time to time. So if you go to a fest that we can't attend
to, we'd love to hear your report. And one of the ways you could share your experience
is by going to LinuxActionShow.reddit.com. Start a thread there. Why not start a thread
about doing a meet up? That's what Q5 did. And you can also send us an email. Go to Jupiter
Broadcasting dot com. Click the contact link and choose, well, send it to Linux Unplugged.
Choose Linux Unplugged from the dropdown. Or Linux Action Show, depending on the timing.
I'll leave that to your savviness. That's up to you. If you're an email ninja and think
you can time it just right, you could also choose Linux Action Show.
All right, guys. Well, anybody have anything to contribute before we run? I think that
was a pretty good coverage. I know Riley was thinking they were too nice. There's some
little off about that. Riley, are you OK? No, I'm not OK with it. There's something
off about it, too. I just see them in a dark room going it with their hands up.
Those lights flashing, those horns flashing in a dark room.
What you're saying is you don't trust people who are nice.
No, you know what? In some ways, they are there solving a same problem, and they just
think they have a better way to do it. And I think it's a bit of confidence, in a way.
I think it demonstrates the fact that they can show up. It's not a hostile thing. They
can share the room. It's something that's taken Microsoft a decade to figure out.
We just now saw Microsoft really start to get it at Linux Fest Northwest. But the BSD
guys, they're cut from the same cloth. Just maybe one that has more stitching. I don't
know.
All right. Well, we'll leave it at that. I also had a link that I wanted to chat about,
but I think we'll save it for the big show. But if you guys want to do a little additional
reading, I'll leave it to you. You can find it in the show notes. Go over to JupiterBroadcasting.com.
Look for Linux Unplugged, episode 46.
And also, we're putting a call out to have folks help fund our Patreon page that goes
in to contribute to investments in the network. Patreon.com slash today. We're trying to do
some crowdfunding to bring revenue up for the network, so that way we can do things
like hire contractors to resolve problems that we have, or buy some on-location equipment
to do some more on-location streaming like these types of events. And all of that is
dependent on increasing our financing. And really, there's two ways that a network like
ours can increase financing. We can add additional ads, and that's certainly something we could
consider doing. And we can also go to crowdfunding. And I believe the real answer lies somewhere
there in between. I think it's more about a balance and finding a mix and diversifying
income sources for the networks. That way, we're here for the long haul. And that's what
we're trying to do. So if you go over to Patreon.com slash today, you can find out more information.
You can pledge whatever you can afford. That money is distributed to all of the shows,
all of the profits generated there go into the network, and it's celebrated via our Tech
Talk Today podcast. As we reach different milestones, we have a little party in the
show. Like the barbecue challenge is kind of like a fun way to just celebrate in the
show. But it also means, oh, the network has achieved another level of funding, which means
we can accomplish XYZ. My big, big a-boo right now is, as the network has grown, we've greatly
increased the complexity of our technical infrastructure to the point now where there's
enough equipment that it really could take at least a part-time person coming in a couple
of times a week, keeping it all running. And that's why I'm constantly struggling these
days with hardware failures, because it's just, when you have this much equipment running
24-7, things happen. And you need somebody who has really solid IT experience in networking
and storage and network-attached storage and really high-performance networking. But you
also need someone who has broadcast equipment experience, that understands about encoding,
about the specialized needs that a certain rig might have. And that's sort of a nexus
of talent that's extremely difficult to find and not free. But it's an example of something
that we have to be able to do in order to keep moving the network forward, because it
just is getting to that point. And the way we can do that is by knowing we have a good,
stable platform of funding by our audience. The folks who consume our shows can be the
folks who fund our shows. So go to patreon.com slash today. We greatly, greatly appreciate
your support. And check out Tech Talk today. In fact, join me live tomorrow. If you're
listening to this on Tuesday night, we'll be covering the Google I.O. keynote live in
Tech Talk today at 9 a.m. Pacific, noon Eastern. When that launches, you can join us in the
Mumble Room, our virtual lug, and comment away on the Google keynote as it happens,
and we'll release that as a download so you guys can go catch all of the goodies that
came out of Google I.O. So that'll be tomorrow's Tech Talk today, episode 15, I believe, which
will be on June 25th as we are recording this episode. That right there, though, will wrap
us up. So go over to linuxactionshow.reddit.com, help contribute and comment, and give us your
thoughts, your feedback for this week's episode. We'd love to hear it. Don't forget to send
us an email and all those kinds of goodies. We really appreciate it. Okay, Matt, well,
guess what? We're all done. We can get out of here. We wrapped up our Southeast Linux
Fest coverage, and I think we're going to do some how-to stuff on Sunday. I'm going
to double check the calendar, but I think we're going to have a great episode on Sunday's
Linux Action Show, so I'll see you then, okay? All right, I'll see you then. Sounds good.
All right. Thank you, everybody, for tuning in to this week's episode of the Linux Unplugged
Show. We'll see you back on Sunday for Linux Action Show, and if you can't make it for
some reason, I won't judge, but I'd love to see you back here on Tuesday for the next episode
of Linux Unplugged. All right, everyone, see you right back here next week.
