We should probably get started here in just a second, but I thought this was, this was
really awesome.
This was tweeted to me.
It's the hybrid tube amp for the Raspberry Pi.
It's on Kickstarter.
They had a goal of $20,000.
They've already raised $89,229 with 20 days left to go.
648 backers.
It is a monster tube amp that you slap onto the top like a hat to your Raspberry Pi.
Look at that thing, Wes.
That is neat.
I'm, I know audio from production standpoints, you know, like through the regular interfaces
or uses the GPIO pins to like, oh yeah, yeah, yeah.
So you bring that sweet tube sound to the Raspberry Pi, it says, and I'm not a really
like super high-end audio guy, but I could kind of tell you a little bit about it.
This crazy thing has a PCM5102A DAC that drives a single 12 AU7 tube gain stage with a solid
state class A output.
It's designed to drive headphones from 32 to 300 ohms quite easily.
In other words to say, pretty nice piece of kit and the pricing, you know, is getting
up there now because a lot of different slots, but right now you could get them for 150 bucks.
I would never do something like this, but here's what I freaking love about this.
First of all, super high-end crazy weird gear being built for the Raspberry Pi.
That's next level stuff, man.
That's next level stuff.
I think this is super neat.
I'm not going to back it though.
I do like the idea that it's like almost the size of like the just little USB DAC, but
it's also running Linux and you know, do whatever you want on it.
Boom!
Raspberry Pi not included.
This is Linux Unplugged episode 145 for May 17th, 2016.
Welcome to Linux Unplugged, your weekly Linux podcast that's detecting more hops than it
thinks it should.
My name is Chris.
My name is Wes.
Hey there, Wes.
You know, I am really looking forward to today's episode.
A couple of fun things happened on Sunday's show, and one of those things we're going
to rip out and expand here in the show because we've got a lot of feedback on it.
I love it when the community sort of like gives us a feedback loop that feeds right
into the next show.
That's why we're here.
We're right in that feedback loop right now, and we'll be covering that later on in the
show.
First though, some interesting updates and tidbits from the Linus, actually some really
good like serious nice insights from Linus about the security.
It's like getting coffee with Linus.
Right.
Security in the Internet of Things, which he actually had some really sane thoughts
on.
Later on though, Greg Kh, your buddy, he says you're insecure unless you're using his kernel
and only his kernel.
So it's a bold statement, Wes.
It's a bold statement.
We'll tell you which kernel that is and why he thinks that.
And he's got both Red Hat and SUSE to point the finger at.
He's wagging his finger.
And then after all of that, we'll finish it up with a rather kind of urgent security thing
going on, on two fronts.
One with Mozilla and one with TeamViewer.
So if you are considering remote administration on your computer or have TeamViewer in production
like I know Noah does, you definitely want to stay tuned for that.
So it's a big show, big, big show.
Before we go any further though, we must bring in that virtual log.
Time appropriate greetings, MumbleRu.
Hello.
Hello.
Hello.
Hello.
That makes me smile.
Wow.
Wow.
That was, that is a heck of a showing.
And I'll tell you what, kind of a surprisingly good tone from all of you.
We should consider doing a sing-along after the show.
See, Linux users are nice, Chris.
I told you.
Yeah.
Although one voice that will only be joining us from time to time.
I secretly use Arch Linux.
Poby is, he's not in there, I don't think, because he's down in Tejas for OSCON, which
is going on right now.
Boy, OSCON, kind of a rough schedule timing, because they're scheduled right up against
Google IO next week, or tomorrow, I should say.
So that's a tough one.
All right.
So before we go any further, Wes, I did mention the hops.
I got to talk about, I got to just say, I got to talk about this for a second.
The 777 from Scuttlebutt.
This is a Belgian-style ale that was literally brewed and bottled, hmm, 20 minutes from the
studio right on the waterfront.
It's gorgeous.
This is a nice one.
It's a dark gold, slight copper kind of color with an aroma that's got delicate cloves.
Banana esters, whatever the hell that is.
I do get the cloves, though.
It's kind of spicy.
And maybe, look at this.
That's exactly what, yeah.
And also, hints of white pear.
Damn.
I also did not realize it was 9% when I bought it.
Yeah, it's a stronger one.
It's got very smooth and delicate, and it finishes dry.
That's true, though.
With a hint of tartness, which I'm not going to lie, I'm definitely picking up on.
And the first time I read that, I thought it said a hint of fartness.
It does not say that.
And I have not even finished the first one.
So it's going to be a good show, Wes.
It's going to be a good show.
One of the things that I was playing on the live stream, unless it's copywritten, because
then I wasn't playing it.
But if it's not copywritten, one of the things I was playing on the live stream before we
started the show was a little sit down that Linus did at the Internet of Things conference,
which is actually kind of a big deal on the front right there.
The fact that Linus is even at an Internet of Things conference says something, right?
Yeah, definitely.
And so he's there.
Oh, whoa, whoa.
Hi there.
Hi there.
I'm just going to have my mouse up on the tabs.
He's at this Internet of Things conference, and he had a whole range of things to say
in the whole video.
It is embedded right there in that link in the show notes.
So if you want to get that, you can listen to the whole thing.
It's like 30 minutes long.
Pretty low key, but it's a good listen.
Yeah, yeah.
He said, so Internet of Things was obviously the main topic at this conference.
And the top interview was Linus himself.
And he said, maybe you won't see when asked about, I'll give a little context here since
we're not going to play the clip.
When asked about what's Linus' competitive advantage on those really far end sensor devices,
the ones that are running other embedded OSs now, and he's like, I don't really know if
there is a competitive advantage for Linus there.
But he does think that Linus will be at the central hub that all those things connect
back to.
Yeah, I think part of his point is that there will be small devices that don't need Linus,
but they will all be talking to other smarter devices that you will need the kind of capability
that Linux provides.
OK.
So then he got all Zen Master when talking about security.
He was, you know, the problem was, and the interviewer brought up the fact that Bruce
Schneier wrote an article saying, the Internet of Things is unpatchable.
It's busted.
It's busted by design.
It is not patchable.
We are screwed with the Internet of Things.
And so Linus was asked, do you basically agree with Bruce Schneier?
And he said, you know what?
I don't worry about it.
I don't worry about it because there's not a lot we can do.
It's unpatchable.
It's just a fact of life.
But that's why he thinks hubs running Linux will be even more important.
Your thoughts, Wes.
Your thoughts.
Is it unpatchable, Wes?
I don't know about unpatchable, but I think he's right.
Yes, it is.
Come on.
It is pretty much unpatchable.
There are ways to deal with it, but clearly no one is interested in pursuing them and
there's no money being spent doing it.
So the problem is you have two scenarios.
First problem is you either have the up to the user, which then it never gets done.
Yeah, absolutely.
Or you force the update on the user and then you have a problem like we were chatting in
our production chat this morning.
Angela's grandmother has an old computer that had by default the express settings were turned
on and recommended updates were turned on.
And this morning her computer automatically installed Windows 10, rebooted, and then just
fails to boot.
Like it just fails at boot up.
And now her computer for her, as a woman who I think is maybe in her 80s or near it, her
computer is essentially ruined now.
Right.
Just doesn't work.
So automatic updates obviously is not a way to go either because a company with billions
of dollars and literally tens of thousands of developers can't get it right.
I would hope that these smaller platforms with more rigidly controlled hardware will
be easier to target for automatic updates, especially if you don't allow any or very
much user configuration to make it a more varied platform.
But still, you have a very good point and it's no good if your product goes down forever.
You like it, or I mean, I'm sorry North Ranger, you think corporate like device builders like
your Hughes out there, they think what Linus is saying is music to their ears?
To define what you're saying.
Explain.
Yeah.
So I mean they love Linux because it makes their jobs easier to bring new devices to
the market quickly.
But ultimately they would rather you throw that device away in two years and buy a new
one.
So who cares if they get updates for a long, long time?
So for the device makers out there that want to sell you a new device, Linus not caring
about security or not caring about continuous updates plays right into their narrative.
Hey DMC, I like your point too about perhaps this is where Ubuntu Snappy Core or whatever
is could come in and maybe provide a solution that's actually manageable, right?
Yeah, as far as I heard, this was the bright vision of Ubuntu to being able with Snappy
to upgrade the operating system of these devices.
And supposedly, excuse me, supposedly Canonical is working with Hawaii and a few other vendors
out there and they're going to be demoing Snappy Core on a device at OSCON this week.
Oh really?
So we should probably have more news about it last I would think.
That's awesome.
So yeah, maybe they will save all of us.
You sound so hopeful.
Speaking of Linus, Linux 4.6 came out today, was it?
Let's see, yesterday.
No.
No, two days ago.
And it's got a couple of big things in it, USB 3.1 super speed is 10 gigabit support,
out of memory task killer has been improved, Orange FS has been included, a distributed
file system, and the Batman protocol got an update, which I'm always a fan of, tracking
Batman.
It's actually, there's just actually a metric S ton of updates.
I mean, we don't very often mention kernel versions when they get updated on the show,
but every now and then there's a doozy, or as Linus puts it, a weasel, which is explained
in that video.
Every now and then there's a weasel that comes out that looks like a real good one.
Unless you're Greg KH, and then he says if you're running anything but his.
You know, also in here is like the USB 3.1 support, which that'll be important.
So that's called the super speed plus protocol, which is the 10 gigabit speed for USB, which
is really great.
Yeah, go ahead.
So in here, actually, it's because Linus has mentioned many times before that he doesn't
look at security like the security experts usually care.
He thinks it's okay and good that people care about it, but he personally doesn't even see
it as a big threat, as software will change and accommodate depending on the scenario.
And security is usually much more about the work environment than necessarily the technical
feet of the things.
Mm hmm.
Yeah.
He says that he's concerned.
While Greg, on the other hand, he tends to listen a little bit more on the security experts
because he handles the stable kernel.
So his concerns are also a little bit more in line with that vision of what's secure.
Yes, in a way.
He was actually just recently interviewed, and he kind of outlines his thoughts on it.
So I'm actually...
I have that story in here.
We'll get to that in just a second.
We'll cover that.
In fact, why don't we...
Let's just talk about it right now.
Wait, wait, wait.
So before we do that, just really briefly, I will mention our friends over at Digital
Ocean.
Head over to digitalocean.com and use our promo code DO, unplugged, all one word, lower
case, to get yourself a great deal.
Digital Ocean is Linux rigs up in the cloud.
Now we all know the cloud means somebody else's server.
That's legit.
Let's be honest.
That's what it means.
That's why you got to make sure they're damn good servers, like with data centers all over
the world where you want them.
Have you seen those pics?
Oh, dude.
Digital Ocean's data centers are beautiful.
Yeah, they are.
Seriously, as somebody who used to rack up servers, I look at that and I go, wow.
They got...
They're better than me.
They got way better than me, dude.
They have great infrastructure, Linux throughout the entire stack.
It is SSDs for all of the disk IO.
Eight CPUs, tier one bandwidth, $5 a month as a starting price.
You can get started in less than 55 seconds.
You get 512 megabytes of RAM, 512 or a gigabyte of terabyte of transfer.
There we go.
Those are the units.
I know.
There's beer.
There's so much.
I mean, it's hard to account for.
I can't believe this.
I've had half this beer and I think it's already hitting my head.
I tell you what.
Because you know...
I think Digital Ocean is just such an amazing deal.
You're not ready for it.
Well, let's be honest.
I've upgraded recently to the $10 machine.
Oh, I use the $10, too.
It's nice.
It is.
In fact, the pricing structure...
You can do whatever you want on a $10 rig.
And really, what I have done is I started at $5 and I've gone to $10 and that's where
you get the one gigabyte of memories at the $10 rig.
And I love that because then I get 30 gigabytes of SSD, two terabytes of transfer.
But they say their most popular plan is the one that has two cores.
I don't know.
You know, one of the things I really like about Digital Ocean is their super nice dashboard
makes it very clear to monitor your CPU usage.
And in the early days of my Digital Ocean usage, I think I was coming at this from a
perspective of, I need way more RAM, I need way more CPU.
And I was over-building my machines and then I would go look at the charts and go, well,
these things are kind of just sitting here.
And so I started to realize that when you have unbelievably fast bandwidth and when
you have all SSDs for the entire stack and you're running a low, small install of Linux,
it doesn't have the graphics tag, it doesn't have any of that crap, you can get away with...
I mean, it feels like you're stealing it.
It's so cheap.
It's so great.
And so for me, the $10 plan has really been the sweet spot.
They say the $20 one is their most popular, the $20 one, the $20 plan is their most popular,
but $5 and $10 has been solid for me.
And you know what?
We just, whenever we need a new rig...
See like for me, I like the $40 for build machines.
Really?
Like you were talking about like, oh, DKMS, you got to compile the ZFS module.
But then what?
Are you doing it hourly or do you run them all the time?
You just, with the API, spin up a new machine, run your script, grab the compiled module,
shut it down.
Yeah.
Yeah.
That is something else we're doing more now.
We are spinning...
It's so nice.
We are spinning machines up and down for shows now that we don't need running when we're
not live.
It makes it very economical.
It's only there when you need it.
They're honey badger bad.
That's why they created a really good API for all of that.
They also have great documentation.
They have one click installations of apps and all of the OSs.
Like core OSs.
We'll be talking more about the opinion of...
What's that one on the bottom right right there, Chris?
Free... business?
Is that how you say it?
I think that's based on Slackware.
I'm not sure.
Yeah, I'm not sure.
I think it's based on Slackware.
They also have Debian, Fedora, CentOS, and Ubuntu.
You can check it all out.
They have one click applications of just a single app or the entire stack.
It is sweet.
DigitalOcean.com.
Check them out and use our promo code DOUNPLUGGED.
Wow.
I'm glad you brought more than one of these beers because I think I'm going to have another
one.
You know what I should do?
Okay.
I'll just, before the next ad, I'm going to finish this beer.
And we'll just see how I do.
We'll see how I do.
We'll just see how we do.
Okay.
So you heard Mr. Devlin begin the conversation.
Let's pick that right back up.
Linux can't keep you safe if you don't update it.
Pretty, pretty obvious coming from Greg Cache, but it goes further than that.
So there is a Core OS Fest in Berlin.
Man, OSCON, guys, I've been going to OSCON for years.
You guys are great.
But I'll tell you what.
You're up against Google I.O. and Core OS Fest in Berlin.
That kind of sounds fun.
And Greg's over at Core OS Fest because he's involved with that project, like I was just
saying.
We'll be talking about it in a moment.
And if you're not familiar, we have interviewed him in the past.
He is the Linux kernel developer and maintainer of the stable branch, or sometimes called
the LTS branch, as well as the USB subsystem in the Linux kernel and many other important
subsystems that people just frankly didn't want to do.
So good guy Greg picked him up.
And he was saying, for the last 15 years in the Linux kernel community, they've been following
a rule to fix things as soon as possible.
The Linux community fixes bugs and then pushes them out so the vendors can then push them
to their users.
He talked about, for example, a bug that they fixed and then pushed the new release and
got it out there.
But then three years later, someone realized that there's a security bug.
You could go to a local root user and you could go away.
You could just go run around.
Turns out Red Hat and Seuss had to go back and fix all of their old stuff.
We had a very bad history of keeping bugs alive for a long time.
Nobody did a check of it, and most known live bugs in the last five years in these systems,
there are things that people know and they know how to exploit out there.
They're not closed.
And that's a problem for infrastructure.
Now, it's kind of a bit of a ramble, but what he's saying is, if you're following a mainline
secure patched kernel, you're going to be safe.
But if you're using a Red Hat Enterprise kernel, they're not necessarily taking all of the
fixes.
Following all the hard work that Greg does to put those patches into there.
And you assume they are, but he's saying they're not.
In fact, a lot of the vulnerabilities in the last five years have been ones we already
had patches for.
They just haven't made it back.
Oh, that's rough.
He says Android is another example.
What does he say?
We have a very bad history of keeping bugs alive for a long time.
Yeah.
That's not what Linux should be known for.
Yeah.
So he points out Android also has issues.
He says, basically, Greg quote, your machine is insecure unless you're running my kernel
or based on my kernel or at least based on another one.
If you're not taking these fixes, then it's insecure.
He has a very clear message for companies and communities building products around Linux.
You have to be able to update your machines.
You have to be able to provide a system where your machines are updated and you constantly
take advantage of it.
Man, that is so true.
That is so true.
The LTSs and the Red Hat Enterprise Linuxes out there are great and super stable platforms
for enterprises to target.
But if they're not pulling in the fixes that Greg's putting in, then we are not taking
advantage of one of the fundamental features of an open source operating system.
It's like a commercial model applied to something that's a moving target.
And he's building these LTS kernels that aren't updated as frequently as the main kernel.
In fact, it's-
Right.
They should be a pretty easy target, hopefully.
Mm-hmm.
And they're updated and they're maintained for years.
Derek Delvin, I wanted to have you pick it back up.
Go ahead.
Yeah, basically, I think this is the equivalent of Greg's FU to NVIDIA, as Linus said, basically.
And maybe spur attention to the issue from the distros by having the pressure.
Now-
I hope that that's the intention there.
So you're saying this is his middle finger to the overall industry?
Yeah, basically.
In a way, what's the effect it's going to come out?
He's not winning any more for people using his kernel.
Basically he's just saying, start adopting the patches in my work.
I've been working on this.
Yeah, and I guess the thing about Greg's kernel, too, is it's not updated as frequently as
the main line kernel.
So there is a lot less cycle there you have to follow.
So you're on Appricity right now?
Yes.
If you check for updates, do you have a kernel 4.6?
It came out two days ago.
I'm just curious about that.
Because I think Arch got it pretty quick.
Appricity, Wes, if I recall, it's Arch-based, pretty limited customization.
Reminds us a lot of Antigros.
It does, yeah.
You've stuck with it for a couple of weeks now.
How come?
Well, it's been working well.
I'm not seeing-
Maybe you already have it.
Maybe I do.
Nope.
4.5.
4-1.
Okay.
So you just checked-
You just did a package update?
Yeah, and I have not yet looked what's- they give you one custom repo.
I have not looked at everything that's installed there.
I don't know if my kernel is from there or not.
So I have Linux 4.5.4 now.
So I'm just curious, overall, Appricity seems like- so you had something- you had what did
you say?
Do you remember which kernel?
4.5.4.
Okay, yeah.
So it seems pretty up-to-date.
Not quite 4.6 yet.
Right.
But what are your couple of weeks in thoughts now with Appricity?
Just like as a super quick follow-up review.
Yeah, I'm enjoying it.
I've had Ubuntu 16.04 on here.
There's Linux Mint on this laptop.
Appricity Antigros has been on here in the past, and I've always enjoyed Antigros.
So Appricity seems like a little bit of a competition.
They have a kind of like stripped down, or at least so they say, version of GNOME.
So it's pretty lightweight.
They don't install all of the GNOME apps or all the dependencies.
In fact, when you sat down the laptop at first, like, is that elementary OS?
Yeah.
You know, it's pretty clean style, seems to run well, and I have access to Arch.
So it's familiar if I need to install things.
All the configuration is the same as upstream, and they come with the TLP power saving tools
by default, which in my experience have done a very good job.
So oh, it also has the nice power line terminal for BI and Bash and ZSH.
So Appricity gets the Westpane nod of approval.
I don't know if I would install...
You know, I'm building a nice new desktop.
I don't know that I would install it as my be-all end-all, but as a laptop I use for
the show and a few other things, it hasn't been bad.
Nice.
It might also be my, you know, it's nice to have an Arch graphical install just as
like something where I can use Gparted if I need to or a rescue CD.
So I can see Appricity being that as well.
Yeah, cool.
There you go.
A little quick update on Appricity and if you guys are looking for something that does
stay fairly current but is interesting, it might be worth a look.
I kind of want to try it on a machine.
I don't – I do not like this.
We have been covering different iterations of the FBI and their attack on Tor and Tor
developers now for a couple of weeks and this feels awful.
So the FBI has a case where they used Tor, an exploit against Tor, which now appears
to be potentially an exploit against Firefox to get this guy and Mozilla wants the FBI
to reveal the details of the exploit ahead of the trial because if the FBI refuses to
do so, which so far it has, then it would be revealed publicly in the case, which would
mean that anyone could just jump on an actual in the wild exploit right now.
That's bad, bad stuff.
So –
It's an interesting – it's an interesting argument and especially since, you know, if
it is going to be in the public domain or the public record anyway, I wonder if they
have – what their case even just internally is for not doing it.
It also ties into like obviously the FBI knew about it before and is willfully deciding
that it's better serves the public interest for them to keep it secret than to share it
with the public.
So where does that fall now?
So does anybody in the Mumba room have a good argument for why Mozilla needs access to this
information before the trial since it's all open source anyways?
Go ahead if anybody does.
I have –
Well –
Yeah.
So in the end, having more information will then – will be useful if not only to construct
a good case?
Well, I guess –
I guess.
I – so why – but why hold it so close?
Why – so is the FBI – I guess here's another way to ask the question.
To me, it seems obvious.
Mozilla wants this information so they can get a patch out there as fast as possible
for its public information and it's in the public domain.
The FBI though, why are they not revealing it to Mozilla privately?
Couldn't they do it like with an NDA or something like that?
Like why – what's the motivation there?
That I don't understand.
Right, at least let them patch so that they can have something ready to ship when it is
released publicly.
Yeah.
It seems like –
Well, but then you are giving preferential treatment, right?
As a public entity, in a way, this comes a lot as if you start being okay with private
talks, the transparency that they've already been accused so much of will further damage
their reputation.
And so –
Yeah.
To me, it seems like the FBI goes on and on all day long about how they want companies,
private companies to work with them to save us all from terrorism, but then as soon as
private companies want to protect citizens from cyber attacks, the FBI don't have time
for you.
It's just kind of a little – it sucks.
I'm glad Colonel Linux just made it here because I actually put this story in the updates
just for him.
There's been a sudden increase in TeamViewer account compromises.
Even TeamViewer accounts that have long, complicated passwords that have only been used on that
TeamViewer account, I guess there has been a wave of TeamViewer hacks.
Mr. Colonel Linux, are you aware that there's two-factor authentication for that TeamViewer?
I was, although I don't use the account feature of TeamViewer.
I think that is primarily reserved for companies that use it as their primary source of remote
administration and the thing is, for me, it is just a – it's a way to help mom with
their computer.
It's a way to help dad when he needs something and I'm away or a couple of friends.
So I don't – if I have a TeamViewer account, I certainly don't use it and if you sign
in then you can save all the computers you connected to.
I'm asking for one-time passwords every time I'm doing that, right?
So I'm getting the team – I'm getting the partner ID and I'm getting the password.
I'm fixing the problem and then I'm done with it.
Problem solved.
All right.
Then my next story was also put in here for you.
You really showed up just at the right time.
It's kind of magical.
I'm glad these things.
So the question has been asked, has the Ubuntu 16.04 Network Manager been fixed?
And I started digging around in the bug and it is super depressing.
First of all, the answer is no.
The bug has not been fixed.
And second of all, the answer over the Launchpad bug was to go file a GNOME bug and then when
you go read the GNOME bug, the GNOME bug completely misses the point.
Everything is lost – they start thinking it's like some sort of DNS resolve issue.
Everything is lost in translation.
Kernel Linux, I know this has been sort of the number one, I think, I think the number
one bug you've been struggling with in deployments.
Have you found a workaround for this particular issue?
This is the one where you wake up from sleep and all of a sudden Network Manager is just
gone.
Oh, I've had that problem too.
Yeah.
Yeah.
So let's be clear.
There is no deployments.
NOAA has not done any deployments with 16.04 because that is a show-stopping issue.
In fact, so much so that I don't even use it on my laptop, I can't because I need to
be able to access a network when I bring my laptop out of sleep and restarting every three
or four times just isn't an option.
If it has been fixed or somebody has done anything about it, I haven't seen it.
I might have a workaround for you.
Okay, that would be good.
I got that problem when I opened the laptop as well.
I had to turn off and turn on the cards with fconfig to get it to work.
I've had to reboot to get it to come back.
Yeah.
So it looks like the command line utility nmtui-connect, you should be able to use that.
You were also mentioning talking about using the systemd—what was it?
Systemd networkd.
Tell me about systemd networkd, Wes.
You will need obviously then some other thing to manage the wireless side because it will
just handle like the link side, not the wireless.
But if maybe—okay, so what I was hoping you would say is, say you were just going
to connect to Wi-Fi and it was the same network, nothing had changed, that you could just use
that to bring the link up and maybe it would just connect to the same Wi-Fi network.
Yeah, you probably need WK supplicant, but if you're doing the same network, then absolutely
that's a good case.
So systemd networkd, okay, that could be another way to get the interface to come up if you're
just connecting to the same Wi-Fi.
If you have simple needs, yeah.
Or conman is another popular.
This is a real bummer though.
This is a major issue that we have gotten a lot of people that have written in about
too.
It's just—oh man, it really is unfortunate that this has sort of been punted around.
Blaster, you had something you wanted to add.
Yeah, go ahead.
Yeah, so when we ran into this issue on the XPS at Linux Fest Northwest, actually, Page
busted out network manager CLI and fixed it that way.
Yeah, so there's another potential.
That might be another workaround for you at ChronoLinux that isn't too painful to use.
Yeah, so I'm just going to throw this out there.
Another workaround is just use 14.04 because everything still works in it.
Super, yeah.
Yeah, okay.
Okay, sure.
You can also distance yourself further from Greg's kernel.
Uh-huh.
Yeah.
Exactly.
Yeah.
To me, that is just such not an answer.
It's not even an option for me.
I'm sure it is for some people, but in 2016, to be told to install 14.04, that's rough
for me.
That is rough.
That is rough.
Okay.
Especially on something where wireless is relevant, where I probably want newer packages.
Yeah.
Okay.
Preach it, Wes.
Preach it, Wes.
Preach it, Wes.
Especially if you have yourself a brand new laptop.
Quite literally, I don't know, but somebody could write in and go look at the Oryx prospects
and see if there's features that aren't being lit up by that old kernel.
Oh, that would be fun.
Yeah.
I wonder if like the-
They'll send it right to ChronoLinux.
Those new later generation.
What's that thing got in it, ChronoLinux, a sixth generation Intel?
Which one now?
The Oryx.
The Oryx is sixth generation.
Yep.
Yeah.
Although they do do hardware enablement in 1404, so it's possible.
Yeah.
It's possible.
That's true.
All right.
So the grand experiment continues.
I am now on the second beer of the show.
You know, I have not had a beer or any other drink since the last show, so I think maybe
that's why it's hitting me so hard.
Oh, wow.
Yeah.
Because it's just...
So anyways-
I cannot claim that, folks.
So let's see if we can make it through the ting spot.
Are you ready?
You want to see if we can do this?
Let's do it.
Let's just see if we make it.
Now, everybody, everybody right now, stop what you're doing.
Are you driving?
Doesn't matter.
Pull over to the side of the road or just do it while you're driving.
That's totally fine.
Wait, don't do that.
Don't do that.
Don't do that.
Don't do that.
Hold on.
Hold on.
Hold on.
I lost my...
We need our ambiance.
Yeah.
I haven't said to keep playing with.
I don't...
When the loop stops...
Oh, there we go.
Here we go.
Boom.
There we go.
Okay.
As I was saying, don't actually do this while you're driving, but if you're doing anything
but driving right now, do me a favor and go to linux.ting.com.
Go over there to support the show and learn more about the Ting service.
Not only will you get a discount, which is great, thing's going to give you some money
if you sign up, either off your first device or just towards your account if you've got
a compatible device.
Oh, and by the way, you might have a compatible device because you know what, Wes?
They got GSM and CDMA.
Pretty much everything works.
It's hard to find it.
You have to go out of your way to buy a phone that won't work on me.
You know what doesn't work on CDMA or GSM?
This bell.
There, I'm done with the loop.
Analog only.
There's no SIM slot for this bell, but just about every other device that does have a
SIM slot will probably work over at Ting.
Go there, check them out.
They have no contracts, no other termination fee, and you only pay for what?
You use flat $6 dollars for just your line, plus anything Uncle Sam's going to take, and
then your usage.
Way simpler, way more straightforward, no crazy gimmicks, plus they have really good
customer service.
When you call Ting, you actually talk to a real person, which not everybody believes,
Wes.
Some people think it's not true.
Hello, thanks for calling Ting.
This is Isabel speaking.
How can I help you?
Hello, thanks for calling Ting.
This is Isabel speaking.
How can I...
Hey, this is Isabel at Ting.
For service in English, press one.
Para el servicio en español, presione dos.
To talk about phones, press one.
To talk about something else, press two.
To speak to an operator, press zero.
Please hold while we direct your call to the first available agent.
Your time is important to us.
Thank you for your patience.
Amazing.
Linux.ting.com.
Go there.
You can talk to real human beings.
They've got great dashboards.
They're also doing a giveaway of the Galaxy S7, which I have a feeling after tomorrow's
IO keynote is going to be a VR powerhouse, but you can find out more about that at their
blog.
Just start there by going to linux.ting.com.
Linux.ting.com.
I made it to that ad, too.
Well, except for I burped at the end.
Linux.ting.com.
Well, see what happens when you bring in 9% whatever it is.
A show happens.
A show about Linux.
This was supposed to be a Windows program.
So there was a conversation that we had towards the end of last week's Linux action show about
entitlement.
And we took on the conversation of Parted Magic.
And Colonel Linux, would you just super quickly recap sort of your position on that for people
that didn't catch last, but assume most of them did?
So essentially, software called Parted Magic, great piece of software, was available for
free for a long, long time.
Company decides that they're bringing significant value into the enterprise, and they could
charge a couple bucks for it, and a bunch of people complained about it.
So now they have dropped the price, and I'm upset.
You're upset that they dropped the price?
I'm upset that a company that works very hard and diligent and has a proven track record
in the marketplace for making quality, valuable software cannot charge a small nominal fee
without the internet erupting into constant whining and complaining about something they
feel entitled to.
And not only are they too cheap to pay for the software, then on top of that, they are
too lazy to go torrent it, which is what they would do for proprietary software.
And if that's not bad enough, then they have to go write blogs and complain and whine about
it.
Ooh, there's a lot in there.
I'm glad you're here on the Linux Unplugged couch this week, Noah, because when I hear
entitlement, I'm not sure I'm hearing, I don't think of the same thing.
When I hear entitlement, I think of people who believe they deserve something, even if
that's not necessarily true, if the value exchange isn't necessarily there for that.
You follow what I'm saying?
Yes, I believe so.
And I feel like the situation with PartMagic is more like you gave me something, then you
changed it, and then I freaked the F out.
It's also complicated by the nature of markets in that, I mean, you have to, if those are
your people, user base, you have to, you know, maybe they lower the price because that's
what the market's demanding of them.
And morality into that can be tricky, whereas in the open source world, I think it's a different
picture.
All right, Kernel Linux, what do you think?
I think that the project, when it started back as a free project, when they were giving
it away for free, was a vastly different tool and had a vastly different place in the IT
sphere as it does today.
I don't, I could not, I fundamentally could not do certain aspects of my job without Part
of Magic.
And the thing that I was using it for the other week was, I had a client, had a laptop,
they were sending it in to the manufacturer to get some work done, and they had sensitive
information that had to be wiped off of it.
Well, new SSDs, if you're not familiar with it, have a, are all encrypted by default.
And you can simply change that encryption key on the hard disk, which essentially, for
layman's terms, erases the SSD instantaneously.
And I wanted to access that secure erase function, and the easiest way to do that is with the
tools built into Part of Magic.
And I, as a person who have used Part of Magic numerous times before, and am fully capable
of torrenting it, and have actually paid for it in the past a couple of times, more than
once, I still paid to download it again, because I want to continue supporting that project.
Are you familiar with DBAN, and does that not meet your needs, necessarily?
DBAN will write zeros to every block, right?
But with a solid state, you actually have more space on the drive than the computer
is aware of, and what will happen is wear leveling will kick in and it will start writing
to, yeah.
That actually won't work.
So what you need to do is, the hard drive is encrypted by default, even if you don't
know what it is, it is.
And so if you change that encryption key on the hard disk, then what happens is, essentially,
the data might still be there, but it becomes useless, effectively, it's erased.
And that's a feature built in at the hardware level of the SSD.
Gerd, Devin, go ahead.
So basically, I think there is actually a benefit of people using these routes versus
the other route.
What will be?
You pick up the source code and basically just lower the cost and make it freely available.
It actually is a good argument against those that usually say, if you put it under a free
license, people will just take it out and make it freely available.
People actually took the effort of saying, okay, we're thinking that you're going to
want somewhat that they consider unreasonable.
I don't know what the figures are, but if people that are consuming the product are
looking at it and then saying, all right, you're increasing the cost, and now it's a
problem.
It's apparently, if there was a cost before, it means that the problem is not with the
existence of the cost, it's with the increase.
You want to keep support, right?
But Dar, if I pay for Part of Magic per the terms of open source, I can give you a copy
of it.
I can upload it onto my site, let you download it for free.
I can upload it to Torrents.
So the only thing you're paying for is A, to support the company and the product that
they have, but B, to use the convenient little download link that they have on their site.
Sure.
Okay.
So I want to give Wimby a chance to jump in here, because I want to talk to him specifically
from the standpoint, and I'd actually like to hear from, actually, maybe I'll start with
Richard.
Richard, are you on mic right now?
Because I'd like to actually get your perspective too, if you're...
I am indeed.
When you hear entitlement, is this matching up with what your mental model of entitlement
in the open source community is?
Because I have one, two, three, four, something like that, links in the show notes.
People who have blogged over the years now about how entitled the open source community
is, and I actually have started to feel some of it myself as somebody who creates something
free and puts it out there, and at times there are, at times, things that feel like they
cross the line of what is expected of me as a content producer, and sometimes that's just
me being grumpy, and sometimes it does feel like it's crossing the line.
So Richard, when you hear entitlement, what does it mean to you and the state of entitlement
in the open source community?
Yeah.
I mean, I think you've pretty much covered what it is.
I would simply define it as, well, users demanding without being prepared to actually help fix
the issue.
I'm not saying they need to do it themselves, but there's plenty of people who want lots
of things for nothing and are not willing to give back anything for it.
Now, my perspective on entitlement is with my open SUSE hat firmly on, and this is open
SUSE and not SUSE because it's a very different dynamic, is I run a project where, for example,
we don't take money and we're anti-interested in it.
I mean, it's more hassle than it's worth, and it doesn't actually solve any problems.
I'd much rather take a contribution from somebody than any cash, and so with the whole parted
magic thing, which is a totally different project, but I struggle with some of these
projects where money is thrown around like it's the magical solver and supporter of everything
because I don't believe that.
I've seen far too many open source projects where a simple contribution, be it code or
advocacy or something, is worth millions more than my 10 bucks.
Wimpy, do you ever struggle with a sense of entitlement in the community, especially since
there is people that are contributing on Patreon and things like that?
So I've got a tangent, gentle point about entitlement, which I'll come back to later.
Sure.
Okay, perfect.
But here's a kind of entitlement.
Talking about a bug that affects you and saying it's widespread and it's affecting lots of
people and you have lots of feedback to say this is a big issue, and then 10 minutes later
I go off and find the bug reports for that bug, and I find three bug reports about Wi-Fi
not working after suspend.
And in one bug report, eight people have said this bug affects them.
In the other bug report, one person has reported it, no one else has said it affects them.
And in the third bug report, one person has reported it, nobody else says it affects them.
Yet, this is apparently a widespread issue, and I agree it's a widespread issue because
I've also heard about this anecdotally as well.
This is, so far, my exact observation of this particular network manager issue.
Yeah.
Now, the entitlement that people feel here is that this bug should be fixed, but the
very least you can do is just go and click on the bit that says this bug affects me just
to add to the count because this is what brings it to the attention of the people that are
going to resolve these issues.
If you're prepared to invest a little bit more, then actually provide some details,
a reproducible test case, for example, which some people have done in this bug report.
And I was reading another blog earlier where somebody was whining about how they've had
this bug with a particular Ethernet controller not working, and it hasn't worked since 13.0
something or other.
And they cite their own blog going back over five years, but at no point in any of their
blog posts is there a link to a bug that they filed or contributed to.
So this is a kind of entitlement that really rubs me up the wrong way because somehow by
yelling into the void of the Internet, you are somehow alerting people to the fact that
you're unhappy that something needs fixing, but you're doing absolutely nothing to solve
the problem.
Right.
Yelling into the void.
That frustrates me.
I'm also sort of not taking advantage of a huge feature of using an open source product
where the bug tracker is actually out in the open.
Just as an example, when we rolled out the new OBS production rig that we covered in
Sunday's Linux Action Show, when we booted up and realized that Ander Gross wasn't building
the ZFS module before it created the init image, yeah, the nice thing we could do there
is we could file a bug about that and so that way down the road when we do updates, hopefully
we don't have an issue.
But you're right, it seems like even the most basic, not even having to create the bug,
just saying it even impacts you is too much to ask.
Maybe it's because you have to create an account or something stupid like that.
I know, but it's like the least you can do and also we've got these open bug trackers
in all of the distribution projects.
Everyone has them and try and do that with Microsoft or Apple or Android even because
frankly if you look at issues on Android, you're just, again, lots of people with the
same issue talking on a Google group somewhere and nothing ever getting done about it.
Yeah, Colonel Linux, you hear this all the time, what are your thoughts?
I try to be a good community member, file bug reports when they come up and certainly
I'm not saying that everyone is like this, but there are times when I have had an issue
and I go to file a bug report and I provide the best information that I know how to provide
and the assumption is that if that is incorrect or further information is needed that people
could just politely ask for it and more than once I've had a very negative experience with
the people that respond to bugs being upset about a bug being opened by something for
various different reasons and I think that part of it is an attitude problem that needs
to change.
When people are taking their time to give you feedback about a project or about software,
be respectful and appreciative that somebody is volunteering their time.
Yes, you volunteered your time to write that code to begin with, but somebody is essentially
doing troubleshooting for you and so if you have to work with them a little bit, come
alongside them and walk with them and say this is how I need the information to be provided
to me or this is more information I need, they need to be open and receptive to doing
that and not just bite people's head off because they didn't get exactly how they wanted to
hear it.
That is true as well, that does happen.
That is true.
Yeah, but they're really busy too.
I mean, you can see why, right?
They just don't have time.
They just want you to get it right.
But you do have to hit on that good, like as a developer, you don't want something where
it's like, yeah, hey, sometimes I get this thing, fix please, but you...
Well, it's...
No, go on.
No, I didn't mean to cut you off, but just responding to Chris's point of they're busy,
that's fine, but the reality is if that happens and you continue to become frustrated with
people then the natural reaction is, and this actually just happened, I had a bug with the
Bluetooth keyboard and I went back just because I don't really care what other people think
and I went and posted in the bug report and said, this is how I fixed it, but then I went
back and posted on a forum, which is where the rest of the discussion had been occurring
because nobody wanted to participate in the bug report.
Yeah, yeah.
That's what you're going to get is you're going to get people that will just go somewhere
else and talk about it then.
That's an interesting point in itself because I think a lot of people have the misconception
that discussing bugs in the forum is tantamount to raising a bug report and that somehow developers
are going to see discussions in forums.
With the exception of the Ubuntu Marte community forums, which I'm active in, I can tell you
for a fact, Ubuntu developers and the Flavor developers are not looking through the forums
for bug reports.
There is only one place that developers are looking for bug reports and that's Launchpad.
So if it's not in Launchpad, it never happened.
And from the developer's perspective, you need that workflow, like you'd go insane trying
to find bugs, like you need one place for your bugs so you can just go down and solve
them.
Yeah, absolutely.
Wim, but you had a second point you wanted to make though.
Yes.
This is more about Linux-compatible hardware and companies like System76 and Entroware.
And it's a different type of entitlement.
And I feel that people go and buy whatever computer it is they get, usually a cost-based
purchase.
You know, everyone's got a finite amount of spare cash, so they're choosing a laptop that
they can afford at a price point.
But then they feel entitled that Linux should run on this computer that they thought that
was designed to run Windows.
And then some of those people get pissy and shitty when it doesn't work and they have
a sense of entitlement.
They don't appreciate how much work has gone into getting the support that we do have.
I have a lot of thoughts about that too, because also one of the things that fills our inbox
is, in fact, I was just kind of going back through the history of LAS just to see when
our anniversary is, which is June 10th.
And I was looking, you know what our first episode was about?
And this is an issue that has literally plagued our show from episode one now for a decade.
Do you know what episode one, I mean it was about a lot of things.
It was about the new Ubuntu release, it was about a lot of things.
But like the headline topic?
Wireless support?
Nope.
Although that was a big issue back then.
That's a damn good guess, Wes.
That's really close.
No, installing Linux on, oh go ahead, Colonel Linux, you can say it.
The Macbook.
Ooh.
Yeah, the Macbook.
The Macbook.
Which is a big one, which is, so I want to talk about that just for a second, so let's
actually dedicate a little bit of time to talking about that.
So first, that means we go to Linux Academy, go to LinuxAcademy.com slash, unplugged, LinuxAcademy.com
slash unplugged where you can get their new discount, which is awesome because this service
is super valuable.
It is an entire learning platform which is built on top of Linux to teach you all of
the ins and outs about Linux and all of the really cool technologies that you can make
money off of using Linux.
And I'm talking everything, including even all the way out there to Android development,
PHP, Python, Ruby, LinuxAcademy.com slash unplugged.
They now have 2,391 self-paced courses.
I think for me the scenario-based lab is one of the best things they've ever done, but
if I wasn't such a loner and anti-social, I would say probably it's instructor mentoring.
I mean in terms of value in the service, instructor mentoring is incredible, especially for this
kind of course where they have graded server exercises which is dope, automatically grades
your actions.
Why not?
Why do you have to wait around?
Check them out, LinuxAcademy.com slash unplugged, and I don't normally mention it, but Mr. Radio,
there in the mumbles, pointed it out, and he's absolutely right.
If you go over to LinuxAcademy.com slash unplugged, just go there, LinuxAcademy.com slash unplugged,
look around, and then if you're looking for a gig, they are hiring two telecommute positions.
Hmm.
Oh, really?
Yeah, you know, this is the great thing is LinuxAcademy isn't just a great learning resource,
they're managed really well.
They're part of the community that they service.
They have been really, really smart about the way they've structured their company.
And, they've grown like crazy to make sure their content stays relevant, and even their
old stuff.
Plus, I bet if you worked there, they got some good training there.
I would just guess.
LinuxAcademy.com slash unplugged, that's a double ding plug, LinuxAcademy.com slash unplugged.
Okay, Mr. Colonel Linux, I'm going to open the floor to you.
As far as folks that are going out there and grabbing hardware, NOAA kind of has mastered
the art of going into Best Buy and purchasing the Linux machine, but it doesn't always work
out.
And, you've got to have thoughts on this topic.
So, I open the floor to you.
Okay.
So, I, are you looking for just general advice, or are you looking for past experience?
Both.
Okay.
So, you're right.
There is no, I can say with almost full authority that there isn't a computer manufacturer out
there that I have not owned and installed Linux on at some point.
There are some that tend to be better than others.
These days, you'd be surprised at how many companies are using the same ODM, and so really,
you're buying a different brand, but it's the same thing on the inside.
Maybe the chassis is a little bit different.
Most computers these days are coming with Intel insides, and, you know, Skylake issues
aside, if it says Intel on it, it probably will work right out of the box with Linux.
Wireless, sound, video, all that good stuff.
Yeah, you know, I got to disagree.
I've bought two ThinkPads in a row over the last few years that came with wireless cards
and a Dell that had to have their wireless cards replaced to an Intel.
I've never had to replace the wireless card in a ThinkPad.
In fact, it would be difficult to do so because the Think, they actually whitelist their wireless
cards.
Wait, wait, wait.
Don't you, wait, wait, wait a minute, wait a minute, wait a minute.
Don't you remember?
Didn't we have some issues with that idea, with that ThinkPad?
Well, that's not a ThinkPad.
That's an IdeaPad.
They are.
Okay.
Totally different, Chris.
No, they are.
They are.
They are different.
All right.
Well, so, okay.
So the IdeaPad, yes.
And the IdeaPad is, it came with Broadcoms.
So that's going to be the one exception, right?
The one thing that, not the IdeaPad, but Broadcom in general is going to be the one exception
you're going to find when you go into a store.
But that's easy enough to do, right?
From Windows, you can right click, look on the device manager and just kind of take a
gander at what's inside that machine before you buy.
And if it has a Broadcom chip, just stay away from it.
The second thing I look at is, if it has a Broadcom chip, maybe it's a super good price.
And I'll tell you, actually, they have actually gotten, in 1604, Broadcom is actually much
easier to deal with.
In the installer, it recognizes you have a Broadcom chip and will just say, plug me into
the internet and tell me that you want me to use this driver, and it does everything
for you.
And I just dealt with that with one of those little HPs.
But if it has a Broadcom chip and I want it to be a super smooth experience, I'll flip
the computer over and see if there are screws on the bottom.
If there are screws on the bottom, the high probability is you can take that bottom panel
off and just swap that Wi-Fi card.
And as long as you're gentle, you won't break any of the pins.
Then you won't have a problem.
Yeah, Wi-Fi is pretty easy.
Some people like to mess with computers.
Damn it, Leo.
Really.
You're right.
Those are good tips.
So Wimpy, I want to hear your thoughts in regards to the ThinkPads.
With regards to ThinkPads, I've had to change Wi-Fi cards in ThinkPads, and in many cases,
I've had to actually flash a modified BIOS in order for it to accept the Wi-Fi card I
want to put in it rather than the select few cards that Lenovo have allowed to be used.
And the same goes for hard disks as well.
I've even had to do that for hard disks.
Now that said, I think I can see one, two, three, four, five, six ThinkPads from where
I'm sitting at the moment, and that's not all of them in the house.
But I am a changed man, and I'm going to tell you about this.
When people buy computers that were designed to run Windows or Mac OS 10, but predominantly
Windows, and then try to install Linux on it and have issues, that's unfortunate.
And yes, people have to get into this business of do they potentially replace the Wi-Fi chip
and all the rest of it, because these days, it's generally the Wi-Fi chip.
A lot of the reasons why people say they have bought a particular laptop is because it's
significantly cheaper than a laptop designed to run Linux from the likes of Entroware,
System76, Zaris, and ThinkPenguin, and the many others that are out there.
And I think because open source Linux distributions are free of cost, there is an assumption that
it should be a cheaper laptop because it comes pre-installed with a Linux distribution.
And the reason why it is not is because the likes of System76 and Entroware and the others
don't have the volume of sales for economies of scale to come into effect.
So they cannot compete on price with the likes of Dell and Lenovo and HP and so on.
So if you want to buy a computer and you intend to run Linux on it, save up a little bit longer.
Buy your computer from one of those companies that are supporting Linux as a first class
citizen because the more people that vote with their money, what will happen is they
will be able to improve their margins and the costs of those computers from those Linux
supporting companies will come down as their sales volumes increase.
There's that.
And you legitimately will probably have a less challenging Linux experience.
You will not be having a conversation on an online user group saying, what Wi-Fi chipset
card do I need to get to go in a Lenovo Yoga 3 or whatever it was.
Now Kern Linux, though, I know you and I agree with Wimpy like just totally.
I don't know.
I may have been System76's first or second public customer.
I am a diehard.
You've been repping that brand for years.
Yeah.
So it's over a decade.
But even yet, you and I still on occasion either build the PCs or we go out and grab
a ThinkPad.
What are your thoughts on that?
So it's never a first choice, right?
Like you're right.
I 100% agree with everything Wimpy just said about supporting manufacturers that produce
computers.
And if there was a System76 store in every single city...
You just went away?
You're good?
You're good?
Oh, because you like to go into the store.
Well, I think he found a System76 store.
He's distracted now.
We can forgive him.
You should have seen the sales they had.
And what Wimpy is talking about, if and when people support them enough that they get their
margins down or margins up, rather, and we get to the point where they can offer a more
cost-competitive product, that'll make this argument even less relevant.
But at the moment, there are times when, for example, you have three days to switch somebody
to Linux and that person is there and we need to have them a laptop and we have to get it
here, installed, and rolled out in 48 hours.
You don't have a choice but to go into the store.
And I think there is an advantage, an unspoken advantage rather, of buying from a company
that isn't totally invested in the operating system.
When you buy a MacBook, Apple needs you to use Mac OS because that's where the longevity
of their product is, right, is really in the whole experience, not just the hardware.
Whereas HP, really at the end of the day, HP, Dell, Lenovo, they don't really care about
Windows.
They care about Windows to the point that it makes them a profit on selling their hardware
and past that, they don't really give a rip.
If tomorrow everyone wanted to install Linux, you better believe Dell and HP and Lenovo
and all those other companies would be making the most Linux-friendly computers possible
because they want their hardware to sell.
And I think there is an advantage, however small.
I'd say that's like 2% of the overall battle.
The rest of the 90%, 98%, I completely agree with Wimpy on just trying to avoid them altogether
if you can.
So there is also an undeniable fact that there is a huge, huge price point at $300 that is
extremely attractive to people that are looking at Chromebooks and stuff like that.
Acer's and like, yeah, right.
So Wimpy, you mentioned there's other options out there.
What are your thoughts as far as that price point goes and yeah, maybe you could call
them having sort of certain sets of expectations or entitlements, but at the same time, wouldn't
we love to welcome these Chromebook buyers or these $300 HP Stream buyers with open arms
in the Linux community?
Your thoughts?
Yeah.
Well, so the other options, I've talked about the Linux-specific manufacturers, but if somebody
wants a laptop from a mainstream vendor in two days to convert somebody to Linux, Hewlett-Packard
have a range of, and I'm talking about in Europe and North America now, rather than
the floods and floods of Ubuntu laptops that are available in the Far East because they
are awash with Ubuntu laptops out there.
It's about 40% of PC sales are pre-installs with Ubuntu.
So we're not seeing all of that in Europe and the US, but Hewlett-Packard have a range
of low-cost laptops, all pre-installed running Ubuntu.
They in the UK are under £300, I think some of them are just a touch under £200.
So they're entry-level Chromebook pricing running Ubuntu.
And then Dell, of course, have a range of machines and they don't just have the high-end
developer stuff, you know, the Sputnik and the XPS 13, they also have a line of precision
laptops now and their entry-level costs are reasonable.
And again, if you buy those computers from those manufacturers pre-installed with Ubuntu
or whatever distribution they may have, you are adding a count on the chalkboard to say
there is a demand for people to buy computers pre-installed with Linux rather than buy one
of their Windows computers and then try and install Linux on it after the fact.
I completely, completely agree.
But I think that's also maybe worth part of the cost increase for those people who
can make it work.
I wanted to just – now that we've talked about the hardware entitlement aspect, which
I think was a fascinating point, Wimpy, I wanted to now go back if we could just for
a little bit longer to the issue that you brought up rather brilliantly is – and it
just so perfectly underscores what is kind of an entitlement issue here.
This 1604 network manager problem is – it's big enough that we hear about it all the time
here on the show.
And so that to me is my barometer, been around for a few of these releases, and I can tell
you what kind of things I get feedback on and what kind of things I don't per release.
And this is one that's showing up on the radar.
I can tell you from my metrics, it's an issue.
So with that said, like Wimpy brilliantly just said, it's – nobody's doing nothing.
It's sitting there.
And in fact, on the known bug tracker, it's gone off in the completely wrong direction.
And it – what could we do better, Wimpy, as far as an infrastructure to make this work?
Rekai in the chat room is saying we need some sort of distributed API that interconnects
all the bug tracking systems and allows them to share.
Maybe something that uses the blockchain, and there could be coin rewards for bugs.
What do you think, Wimpy?
What are our options?
Yeah.
Rekai put in the chat earlier about creating a better bug tracking, bug logging system.
And he's right, because even the good ones that exist in some of the open source projects
aren't really that great by modern standards in terms of web applications.
And with the work that I do in Debian, filing and closing bugs in Debian is – it's like
pulling teeth.
It's all done with email.
It's just – I mean, I absolutely hate having to involve myself with the Debian bug tracking
system.
It's truly awful.
I'm sure that everyone that knows how to use it with email thinks that great, but I so
rarely use email these days for anything.
It's not an encouraging way to get volunteers to spend their free time.
No.
And it gets more complex when you have a bug raised at, say, a distribution level, say,
in Ubuntu, and then, as you've pointed out, that bug then actually is referenced in an
upstream bug, and the conversations get lost between the two chains.
I don't know what the solution is, but I agree there's probably a better way out there
for somebody cleverer than I am to invent, create, and improve open source bug tracking
for everybody.
It does seem like we should have a better system.
Yeah, go ahead.
I've actually brought this before, this issue before, and I think the solution will be better
lied in something like the Linux Foundation to set the common bug tracker type thing,
so that you have one account.
It's also –
Yeah.
Yeah, you're right about that.
The kernel is tracking, because the usual problem is you are dealing with multiple entities,
and the distributions deal differently, but what they have in common is the foundation.
So I have bug tracker accounts on probably 15 or 20 different open source projects, and
I'm going to be honest, and I probably almost will regret saying this on air, but –
Listen close, Phil.
It just gets to the point now when I go to a bug tracker where I don't have an account,
I bail.
I just – like here's what happens is like sometimes something crashes, and then like
something comes up and says, would you like to submit a bug?
I say yes, and then I –
You're like a little high of like, yes, I'm going to do it.
I'm just going to submit the bug.
I'll get an open web.
Yeah, I wasn't planning on this, but –
It's like five minutes.
It's fine.
It'll move on.
And then I go, and then it's like, oh, I don't –
Bum, bum, bum.
Yeah.
In fact, as a matter of fact, what happens – you know what I hear in my head at that
very moment, I feel like I hear the fail horn on prices right in the back of my – yeah.
And then I just move on.
And I feel so bad for doing that, but I'm just –
But I think everyone's been there at times.
I'm tapped out.
Like when I go into LastPass, it's ridiculous how many accounts I have for bug trackers.
This is – I hate this crap.
So –
I mean that –
I know.
I should have said that.
Debian does have one tool, report bug.
Yeah.
To say maybe this should adopt something like it.
I don't know.
Yeah.
And you know, like Rekai points out, this was why I created a GitHub account like a
couple of years ago, because like just more and more now is on there.
And that's nice, but I don't really want to encourage open source projects to have
their bug tracker tied to GitHub.
So I just –
I mean it'd be better on GitLab or something.
Yeah.
Yeah.
That's cool.
More open.
Yeah.
That's fine.
Distributed.
Yeah.
Yeah.
Even then.
Mm-hmm.
GitHub versus GitLab is a conversation for another day.
Yeah.
Yeah.
So Mr. Brown had a chance to make it here.
I didn't have anything in the feedback or follow-up because we didn't have much discussion.
I thought – I sort of threw out the bait out there for a ZFS versus ButterFS conversation
on this –
You really did.
More baiting than you usually do.
Thank you.
You noticed.
You know what?
I like you.
And I'll tell you what.
Not many bites.
Like at least so far.
Now I've only checked – that was the feedback as of about 9 a.m.
So Mr. Brown, I would love to hear your feedback if you had a chance to see what we talked
about in the news segment.
Oh, yeah.
I saw.
I'm – yeah.
I didn't put anything on your subreddit because, you know, not safe for children.
Oh, I love it.
I love it.
Okay.
Okay.
Let me have it.
Let's see what you think.
Well, I've got issues at multiple levels.
So let's start with the simple one.
Just get it out the way.
Licensing.
The ZFS licensing gray area is solved.
No business that doesn't want to take a gamble, you know, can be using it.
But can I stop you?
So let me stop you there.
I want to break this down.
So – but at the same time, at the same time, there is a competitive – there must be a
competitive pressure since now Debian, Debian of all distributions –
No.
Because Debian didn't.
Okay.
Debian didn't put it in their distribution any more than OpenSUSE has had it in our distribution
for years.
Well, that's –
It's in a contrib repo.
It's not in the distribution.
But they are the ones doing the groundwork around the quote-unquote workaround.
That's what I'm referring to.
Not even necessarily them shipping the code.
Then that moves me on to the next funky thing.
So okay, let's forget about the philosophical stuff and the licensing because, you know,
that's another debate anyway.
Let's stick to nice pragmatic technical grounds.
The Debian workaround is a DKMS, you know, compile on your machine solution.
Do you really want to be doing that for a file system?
I mean, you had it –
No.
I hate it.
It's already been me once.
But I will say, anyone in production, you would precompile that module.
Yeah.
You would have your own repo where that module is compiled and shipped.
You would only update the kernel in conjunction with that module.
Yeah.
So I don't know if that's an enterprise.
Like, desktop, yes, but in enterprise, I don't know if that's a problem.
But then that brings me to another thing.
Okay, who do you phone – who's going to deal with those bugs when you have them?
I mean, just look at the bug statistics on ZFS on Linux.
If you're nice and generous and only look at the same period as the current open upstream
bugs in BTRFS, there is still more than twice as many bugs upstream in ZFS for Linux open
right now than there is on BTRFS.
Okay.
So one thing I want to just touch on really quick before we go too much further.
When you mentioned the gray area around the licensing, I totally agree with you.
It is a gray area.
And I was shocked that Canonical had the Hutzpah to ship it.
I tell you what, Richard, I never thought – I thought it would be another year from
now.
If that.
And I feel like it's a strategy tax a bit, perhaps, on them down the road.
But nonetheless, they did it.
So once they started doing this, it started to have certain flavors of the codec discussions.
The same thing around licensing of codecs or licensing of the DVD playback.
This feels like sort of a worry of yesteryear that never really panned out.
There never really was any major repercussions for shipping codecs.
There never really was a problem for using DVD CSS.
In the enthusiast space, which of course is a valid area, yes, there wasn't.
And even Debian reviewed the patent stuff because basically boiling down to we're not
making any money, so it's no problem for us.
That's fine.
But then your whole argument with ZFS during LAS was the market demands.
Well, the market is money.
The market is businesses.
The market is enterprises.
Those guys can't afford to do that.
I mean, take, for example, even OpenSUSE.
We're not exactly the most enterprise-friendly distribution.
We have organizations using us embedded stuff and on their devices because we have no gray
area.
Because if you're redistributing that stuff, if you're taking and putting OEM on your hardware,
which of course is a problem Mint had, the OEM is suddenly then responsible for that
gray area.
So no one is going to touch that stuff with a barge pole.
I think you're right.
This is the area where you and I probably disagree the strongest.
So here's how I see what you're saying is you're essentially making the Internet of
Things or small embedded devices or shippable devices argument, which is a pretty solid
one.
The issue is not only is there a wash of non-Linux OSs already in that space, but there's already
a bunch of great Linuxes in that space that already have a great bunch of momentum behind
them.
At the same time, I would imagine it must be important to the project to gain ground
on the desktop, in the DevOps space, in the engineer space, and on the cloud primarily.
And when we talk about the market demands and we talk about the larger market at whole,
my main point that I was trying to make really there is ButterFS is screwed as far as a brand.
Now I'm not saying RLinux is the measure of anything.
But if you just look at the thread that was posted four hours ago on RLinux about ButterFS
versus ZFS on the desktop, there are 19 comments and literally, Richard, every single one of
them is shitting on ButterFS.
And I'm not saying they're right.
I'm saying the brand ship on ButterFS has sailed and nobody is going to hitch their
way into that.
I'm interrupting you for a change because this is fun.
File barriers, 2008.
Every single distribution had file barriers disabled because of performance issues, apart
from SUSE because we care about this stuff.
That totally negated the protections of journaling on EXT3, EXT4, and XFS.
Every single one of those file systems was royally screwed with people losing data.
And everybody was screaming about it.
And it was a big issue.
And LWN did articles about it of how the world is falling apart.
And then LVM made it worse because even when they fixed it on the file systems, LVM didn't
enable that.
So LVM was screwing up everyone's file systems.
And yet everybody loves EXT3 and 4 now.
And everybody likes LVM now.
Because those were fundamentally flawed issues that every distribution, apart from one, was
shipping.
Now, BTRFS, yes, has some marketing issues.
They are fundamentally flawed.
BTRFS, when done properly, like you see in OpenSUSE, is a damn good file system.
And if you want a root copy-on-write file system, it's your only choice on Linux.
And if you want to boot to Snapshot, it's your only choice on Linux.
You've got to try it.
You've got to learn it.
You've got to understand it.
If people aren't ready yet, fine.
But running to ZFS is like some savior when the license is a complete mess, ZFS on Linux
is a complete joke right now when you look at the bugs and who's actually fixing them.
You can't put your face in that.
ZFS is a great file system, but not on Linux.
Not yet.
So let me, I want to address a couple of points.
The first one is, I think in terms of enterprise storage deployments, I don't think you see
a lot of extended for as the main core file system on like NASes and large storage.
You'll see a lot of different file systems, and some of them are extended for.
But a lot of times, if they are, there's a very, very large and robust virtual management
suite that sits on top of that.
Or they're on like large proprietary appliances providing like a SAN.
I think in the enterprise, I think that's sort of a gray area where ButterFS has basically
no foothold.
But I agree with your core fundamental point in that ButterFS is worth our time and worth
our energy, and we shouldn't be running to ZFS.
Just using ButterFS on your route just to get snapshots alone, like that will work fine,
and you get a lot for just doing that.
But I think if we zoom out a bit and we go to the meta level of what our conversations
are, what I'm saying is what you are presenting to me is a technical argument on the valid
reasons why long term ButterFS is a better investment of our collective resources from
a legal standpoint, from a technology standpoint, from an owning standpoint, from an integration
standpoint.
So even from a feature set standpoint, ButterFS is a better file system for us to invest in.
But at the same time, what I feel like you're not hearing is my argument that people are
choosing Ubuntu or they're going to choose Debian over OpenSUSE because it simply doesn't
have ZFS.
And that's where the decision tree is at.
They're not going beyond that decision point.
It doesn't have ZFS support.
Well, yeah, people are weird, but the ZFS on Debian thing is a joke because ZFS is in
OpenSUSE as much as ZFS is in Debian.
So fine, there we go.
If you want to have-
I agree from like a software availability standpoint, but we're talking about they're
the ones that did the legal groundwork to make it possible.
They didn't do any more legal groundwork than we have, which is basically you don't ship
it as a core part of your distribution, which is simple, fine.
The user can then choose what the hell they do with their licenses, which is a concept
that every distribution follows.
And Debian have only just done it now.
And yeah, okay, OpenSUSE should have done an announcement, what, two, three years ago
when we did it.
Well, I'm not saying that OpenSUSE doesn't have a repo where I can get ZFS and then install
the user-land utilities.
That's not the defining thing here.
What seems to be the defining-
Debian put it in contrib.
It's not in main.
It's not in their distribution.
It's not a core part of their distro.
Now, the-
Can't go in main.
It can't go in main.
Right.
And just like ZFS can't go in the main OpenSUSE repos.
But that's the thing.
If you're saying ZFS is in Debian, then ZFS has been in OpenSUSE for just as long.
So you don't give any credence to- what they claim to be is three years of legal work to
analyze the licenses and have a legal decision that they feel makes it safe.
You're not giving any credibility to that work there?
We did the same work.
We came to the same conclusion.
We kind of made similar steps.
We don't like the KMS as much, so, you know, we build it differently, but, you know-
Does it seem like- does it seem like- does it seem like picking on Debian is almost irrelevant
when the real cloud dominator is Ubuntu?
And I guess what I'm trying to get to is, honestly, it seems like an anti-growth strategy
not to have ZFS support.
Okay.
Data is sacred.
You really think it would be a good thing if OpenSUSE-
I'm not making a technical argument.
No, no, no.
Yeah, but, you know, they- yeah, but this is the thing, you know, we have a responsibility
as distribution maintainers to make informed decisions for the benefit of our users.
ZFS right now on Linux has way too many gray areas.
Ignore the licensing ones.
I'm just nervous about the fact that it's basically two guys, LLL and LLNL, maintaining
it with a massive bug backlog, some of which include data loss stuff.
It's not in the kernel.
It's not keeping up with kernel development that well.
I wouldn't want to offer that- if the licensing issues totally went away tomorrow, if Oracle
relicensed it, I would still be nervous now saying, okay, this is a fully supported distribution
which you can trust- fully supported file system on my distribution that you can trust
because I can't trust it yet.
If this was ZFS on FreeBSD or Solaris, totally different story, but this is ZFS on Linux
and it's been less tried and tested and it is less trustworthy at this point.
And there's way too many scary bugs I see in that bug tracker and I don't see it being
fixed fast enough because it's only a couple of guys because you have the licensing issues,
but then we're back in this cycle.
So just to be clear on my position there, the only place where I have production data
that I deem valuable on ZFS is on a FreeNAS server.
And I think you would be very risky to run ZFS in a large-scale production unless you're
doing like Wes mentioned, pre-building your module and you have safe update process.
Now here-
So will this all change?
I mean, should we really come back to this in a year or two years or the next LTS module
now that we have that?
Perhaps.
I don't think so.
I think the licensing is always going to make it this weird DKMS workaround, but I guess-
On 16.04 where you have it pre-compiled, I guess we'll have to change this discussion.
And will that make ZL-
What do you say, Richard?
What do you think?
Better tested?
I'm not saying it has now.
I'm just curious.
I mean, if this was a different company doing this move, I'd have a totally different opinion,
but file systems are traditionally kernel-y kind of stuff.
I mean, they live in the kernel, they play with the kernel, they do all of that.
This is canonical we're talking about.
They're not exactly the biggest contributors to the kernel by any measure.
So yes, they've taken some package.
They've packaged it up.
They've put it in their distribution.
Great for them.
But if something goes wrong, who are you going to call?
Who's going to fix those bugs?
Where's the skills?
Where's the knowledge?
Where's the trust?
So I will claim that Canonical is as a company that is selling a product as well and trying
to put this product out there and take responsibility if it comes down to it.
They've done it in the past.
They've also decided not to do it in certain circumstances, but as it's their choice and
they understand that they have to support their decisions, will probably take the responsibility.
This is the first thing.
So if we separate out the legal issues and the technical issues, which I think the legal
issues we just had like West is saying, we have to stay tuned and see where it goes.
But with the technical issues, Richard, it reminds me fundamentally of people who are
very intimate with container technology say a lot of these same things about Docker.
But Docker is the big brand that everybody wants.
I mean, you saw Red Hat.
They slammed it into 7.0.
So that way they could claim Red Hat Enterprise 7.0 had Docker support, even though it was
nowhere near enterprise grade ready.
We have it in sleep.
Yes.
I mean, yes, there's decisions like that you can make.
But there has to be a line where you say, OK, we're not going to cross this.
We can't do this in a stable and sane way.
And I'd say right now, you know, if it was just down to me just looking at ZFS on a purely
technical level, ZFS Linux has not proven itself yet.
And this is this is file system data we're talking about.
Yeah, I agree.
I agree.
Something in some container, which is going to explode anyway because it's a container.
I mean, it's meant to be.
It's meant to die at some point.
Right.
It is a totally different scenario than this is my data, which I want to keep forever.
But seriously, if we want to concern about legal issues, we have to be paying more attention
at Google versus Oracle as it goes to APIs.
And guess what?
Linux copied Linux API.
Well, yeah, we'll see.
We've been talking about that on the Coda radio program, if you guys do want some some
discussion on that.
So I guess, Richard, I feel like you are right from a plain and safe standpoint in regards
to legal risk and you're right from a technical standpoint.
And I don't discourage OpenSUSE from taking this stance because if anything, it just adds
more pressure to make ButterFS continue to get better and better and better.
So from like a pure Linux user standpoint, I sit here and I go, sweet, I'm really glad
that there is a well-established distribution that is taking this position that is going
to forward our locally grown file system.
Like that that person inside is value to our value ecosystem.
I'm like, yeah, tip of the hat to you.
But then like the market analyst side of me that looks at the market positions that OpenSUSE
is hopefully going to grow into and I think, oh, geez, this could be a barrier.
So I'm really torn on the issue.
I don't think you are.
No, I'm not.
I'm seeing too many.
When it comes to evolving storage trends, the tech that everybody's got to be talking
about isn't ZFS, it's Ceph.
And that's a completely different kettle of fish with a completely different use case.
But that's where the low, mid-range storage market's moving.
That's where the money's going.
That's where, trust me, SUSE is seeing that.
Our storage product was funded before we even started building it.
That's where the disruption is really going to be, not in ZFS.
Especially even if you look at the cool things in ZFS, like RAIDZ, which isn't RAID.
And everyone goes on about that, oh, yes, it's finally solved the RAID hole that everybody
worries about and everything.
Yeah, then you can never read your data quickly because it only reads at the speed of one
disk.
I mean, ZFS has lots of cool things.
In theory, it's like tech porn.
But in the real world, the world's moving on.
There's more interesting things on the horizon.
I'd much rather look at that than...
You may be right.
You may be wrong, but you may be very right.
And I hope you are right about that.
And thank you for having such a strong viewpoint for this.
Yeah, absolutely.
Wimpy, I wanted to give you sort of the follow-up word before we wrap up this segment.
I've got nothing new to say to this.
Richard has summarized it all very well, but this hasn't been a recent development within
Debian.
It was something they've been working on for years, and they actually announced that ZFS
was coming to Debian just over a year ago, when the last Debian project leader, Neil
McGovern was in.
So that was last April that they announced this was coming, and then a year later, it's
landed.
So it's not been...
And also, they've had discussions with all of the legal experts that they can talk to,
and they're confident that they are right to do this.
Would that sort of be the green light, Richard, is if some legal trials happen, and this thing
actually gets tested, and things sort of look like they're shaping up in favor of shipping,
you guys would probably reevaluate the position if there was a need to, right?
If Oracle relicenses ZFS tomorrow, everything I just said changes.
Yeah, I suppose so, because if they really...
Which I doubt it, but that is also the position of the Free Software Foundation, too, and
the Software Conservancy.
So maybe, there are some big foundations out there that are at least calling for it.
I don't know if Oracle's very motivated to do it, though.
I've checked the weather forecast in hell, but tomorrow, it's still looking toasty.
Yes, exactly.
But, Richard, I really do appreciate you stopping by to chat about it, and of course, we can
always pick it back up in the post-show.
You know, the Unplugged program is live on the Tuesdays.
You gotta be here live.
Over at jblive.tv, jupitabroadcasting.com, slash, calendar, to get it converted to your
local time zone.
You can also join us in that virtual lug, and hang out with your local virtual Linux
users group.
We'll see if Wes's laptop makes it another week without getting reloaded.
Probably not.
Probably not.
But be here next week.
LinuxActionShow.reddit.com for feedback, or just leave a comment wherever you watch this.
We really do appreciate that.
And don't forget, you can catch us next week, or grab our RSS feed.
See you then!
Get it out of here.
I've never installed GNU slash Linux.
Richard, you're a good sport, and nice to have somebody who's willing to come in here
and voice a well-stated and well-informed opinion, too.
So I really do appreciate it.
Yeah.
Excellent.
Alright, jbtitles.com.
Now we vote!
By the way, while I'm on a roll, you do know that SUSE Linux Enterprise only uses the LTS
kernels now, right?
That's nice.
That is nice.
Good point to make.
Good point to make.
Absolutely.
Well said.
Well said.
Greg's kernel of truth isn't bad.
The price of freedom.
The file system, a bug report page.
Alright, you guys go over there and go vote.
Shake them out.
I do have a little post-show thing I wanted to share with you guys.
Oh, drop it down.
You know what?
Look at this thread over there.
Speaking of cheap laptops and stuff, there is this huge thread submitted 10 hours ago
by Reed Harder.
Blog slash rant.
Oh, let's get in.
Yeah, about taking a serious look at Chromebooks as the Linux desktop and talking about loving
Chromebooks, et cetera, et cetera.
But then, of course, after 17 comments, it devolves into using Crouton or other things
to get Linux on Chromebooks.
This is a hot, hot area.
That's a hot market.
It really is.
I mean, they're so cheap.
So cheap.
Hot market.
Colonel Linux, you had some good success recently with picking up a cheap laptop and throwing
Linux on there.
I have, but basically what I found is that Microsoft is subsidizing hardware just like
Google is.
The nice thing about that is they don't lock the... Chromebooks do this thing, which a
lot of people are aware of, but some people don't know exactly how much of a pain it can
be.
They lock the bootloader so that there is a signed key for Google, and if the battery
dies on certain models of Chromebooks, what happens is it defaults back to that read-only
state with the secure boot enabled, and you can't actually boot back into Linux because
it doesn't have the Chrome key, and because Chrome OS is no longer installed, you can't
boot into Chrome OS to turn secure boot back off, and so you're just kind of in this limbo
that forces you to reinstall Chrome OS and then reinstall your Linux distro.
You can fix it on certain models by taking a write screw out, but what I found is that
basically, these ODMs have made cheap little computers, like HP makes a cheap little computer
and they sell some of them to... Google subsidizes some of them, puts their little goofy write
protection in there, and sells it with Chrome OS, and Microsoft does the same thing with
Windows 10 except when you wipe Windows 10 off, then you're just left with a normal bootloader.
This is why I'm going with Wimpy.
My position on this, if ever possible, is skip a computer, save up, and get one that
runs Linux, that's built to run Linux, because that stuff doesn't sound too bad, but just
having to worry about that would drive me crazy.
Let's be clear, though.
There are certain times, though, where you're not skipping one computer, you're skipping
two or three, right?
Yeah.
If you're looking at those HP Streams are $179, now what's the cheapest computer I can
buy with Linux on it?
Yeah, and what they were saying in that thread was, my computer died, I needed a quick replacement.
I hadn't budgeted for a new computer, I totally understand that, too.
Well, how much computer can you buy for $179 on eBay?
That's going to have a decent keyboard, it may be a little bit older, but hey, you can
take the backplate off and replace the Wi-Fi card, or add more RAM, or change the hard
drive.
Go used.
You could never do with a Chromebook.
In a pinch.
I feel like we didn't mention the Wi-Fi USB 3 dongles you can get, the Linux support.
You can just buy a better Linux computer, you know, everything else.
I just go USB wireless, Colonel Linux even gave me this tiny little dongle that's the
size of a mouse receiver, just like the little tiny ones.
Colonel Linux and his tiny dongles.
