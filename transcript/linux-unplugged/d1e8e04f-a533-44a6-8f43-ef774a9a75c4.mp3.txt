You know, Wes, we've got this wonderful Apollo laptop here.
This here, I got it from Entraware as an extended test here.
They sent it over and I've been using it now as the main show.
And it's such a nice looking laptop
that I don't really want to put stickers on it
because it feels like this laptop's gonna outlive
any one particular sticker.
Totally.
So then I thought, well, you know what I'll do
is I'll get those vinyl sticker mats
for the whole back of the screen.
It does have a nice, beautifully clean back.
Yeah, and so you just get one roughly the shape
of like a MacBook Pro or MacBook 13, whatever they're called.
And I'll put the stickers on that.
So I got a couple of different ones
and you know, they take a little time to be made.
So they're still getting delivered.
The first one I got, I just wanted, you know,
a canvas to put like cool stickers from Fests on
because when you go to these Fests, you just get-
Stickers abound.
Yeah, so the first one I got is just a real nice,
it's kind of hard to see, it looks a little blue
because there's blue lighting in the studio,
but it's just a wood grain vinyl sticker.
You see that there, Wes?
Very tasteful.
Just a nice wood grain.
Oh yeah.
And I'll just, I thought because it's brown,
white stickers would really pop on this.
Yeah, yeah, definitely.
So this is gonna be one that I could take on and off
and these can be applied and removed and then reapplied.
And then the other one I got,
because I thought it would maybe match my outfit
very often on the Linux Action Show,
is a red plaid sticker.
You see that? Yeah.
I got a red plaid for the back of the Apollo.
So I can be wearing red plaid
and the Apollo can be a red plaid
and it can be double red plaid and last now.
This is amazing, Chris.
Yeah, I'm really happy about this one too.
So that'll be going on the back of the Apollo.
That'll be the first one I'm rocking.
I'm really excited for a red plaid.
Yes, thank you, thank you, thank you.
This is Linux Unplugged episode 136 for March 15th, 2016.
Welcome to Linux Unplugged, your weekly Linux talk show that's getting in Lady Jupiter and going to pick up the ham radio. My name is Chris. My name is Wes. That's my plan at least, we'll see.
The weekend before Linux Fest Northwest, I'm going to see if Noah wants to take a road trip in Lady Jupiter and go pick up ham radio to help assemble the Linux Fest crew.
Guess what, Wes? Big show today.
Yeah, huge show.
Big show.
You know, there's a few things we need to talk about.
Some new Linux hardware that people are really excited about and we're going to talk about some of the interesting things around that.
Mozilla's got something new that I'm really looking forward to, excited to share that.
Later on in the show, we'll talk about our Snappy future
and if these Snap packages, Snappy packages are really, you know, they are coming, are they really advantageous?
There actually seems to be a pretty good solid pro and cons list and there's one potential thing that sort of reeks of issues of the past.
We'll discuss that and a few of the security issues around Snappy packages. See what people think. See what they think, Wes.
Absolutely.
And then, I've been tracking a particular drama since about 2013, gnome client-side decorations, love them or hate them. Starting in Ubuntu 16.04, Ubuntu Mate will have, or Mate, will have support for client-side decorations, pop over menus, shadows around borders.
So much fanciness.
Yeah, Wimpy spent some time getting everything up to snuff and we're going to talk about client-side decorations a little more.
Not going to spend a lot of time on it, but we're just going to talk a little bit about why a traditional-style desktop like Ubuntu Mate might be doing something like this.
So we got all of that, plus we got the updates to do before we get into the show.
It's just too much stuff, Wes. It's too much stuff.
Let's get started.
Let's get started by bringing in that mumble room. Type of probably a Green's mumble room.
Hello.
Hello.
Good evening.
Hello, everybody.
So, guys, Wes brought something real special into the studio today.
As hosts of your virtual Lug, we like to have a couple of brewskis because, really, I don't know if you've ever been to a meetup or a Lug.
I have.
But the best ones that I've been to were at a restaurant where they were serving beer.
Usually they're at schools or libraries.
Something a little more tame.
Yeah.
You can't really let your Linux flag fly.
No, that's right. That's right.
That's what I like about Linux Unplugged's virtual Lug is you get to bring your own booze and we like to just have a beer.
We're not going crazy. We're not getting stupid.
We have a show to do.
Actually, I mean, we do sometimes get stupid, but that's not related to the beer.
No.
So, Wes brought two couple of unique beers in, both from the same brewery but different types.
Mine is the Ribstop Rye Pills from Basecamp Brewery out of Portland, Oregon, Wes.
They even put their GPS coordinates on the metal can.
Easy to find.
Yeah, so there you go.
And then Wes is drinking the Intense IPL.
Intense, like a tent.
Whoa.
Hey.
Fun city over here.
From Basecamp.
I got a score of 85 on your brewskis and I got a BA of 85 on mine.
So, both rated very good from the beer advocate community.
And these bottles are beautiful.
Very beautiful and I'm really enjoying this beer.
Yeah, right?
Yeah, it's really a good beer.
So, anyways, Basecamp out of Portland, Oregon, great beer to go with your Linux.
Wes, you know I spotted this story a couple of days ago and I dropped it in our thread and I said we got to talk about this thing.
Here it is right here.
I got this here.
This is the – this one here is the Raspberry Pi 2.
Could you tell by looking at it?
Can you tell?
No.
There's a couple of ways you can tell.
If you look at the Raspberry Pi, there's a little –
A field guide to the Raspberry Pi.
This is your quick guide right here.
If you want to know if it's a Raspberry 1, 2, or 3, you know it's a Raspberry Pi 3 on the – if there's a little Wi-Fi, a little white Wi-Fi antenna right there and then nothing on the corresponding side.
That's one quick way.
Also, this HDMI port has this little color thing on there that's not there on the number one.
Anyway, so the Raspberry Pi 3, pretty nice device, but the first thing I thought when I saw this thing was, geez, I really now want the ability to boot from USB storage.
Yeah.
I'm sick of the SD card thing.
I want just a big disk.
Turns out that was actually a feature they enabled in the Raspberry Pi 3.
Really?
And Western Digital didn't take any time.
They're capitalizing on this.
They got a $46, 314-gigabyte hard drive built just for the Raspberry Pi.
The Pi drive.
It's based on a Western Digital Blue.
And one of the things that's kind of unique about it is its interface.
It's got a little – see the little USB interface there?
It's a slim profile drive.
Oh, that's cute.
Yeah.
They say it would normally cost about $45 a gigabyte – no, I'm sorry, $45 for the drive.
They're selling it right now at $34.42.
Seven-millimeter high drive.
It's just based on the regular blue drives that you'd see in a laptop.
They're going to also include with a Berry bootloader to make it easier to run multiple
OSes from the same drive hooked up to your Pi.
Huh.
That's funny.
Yeah.
And I was watching –
I could see that getting included in some of those kits, though.
Mm-hmm.
Mm-hmm.
For sure.
I was watching in my Google Plus feed.
A lot of people are ordering this.
Yeah.
So people are excited about this.
Bummer.
Anybody seen this?
Would you add a hard drive to your Raspberry Pi?
You know, $46.
You get 314 gigabytes.
I definitely would if I had one just to be able to do what I want to do with it.
Is that a media center?
Because that was one of my first thoughts was – yeah.
Yeah.
Media center, pretty much.
You know, just have something small or maybe I want to do media center and IRC local server.
You know, I could do two things with it easily.
That's also enough for like if you kept this as your on-the-go media server, you could
sync down from Plex or whatever.
That's what I was just going to say.
That's enough for a pretty reasonable moving library.
I've been coming up with – I've been trying to come up with a solution for an offline
storage for my library that makes it easy to work with and being able to hang something
off a Raspberry Pi moves that Raspberry Pi up a notch in my list.
Pretty cool.
And the price, $46 for your 314 gigabytes.
My first hard drive was 20 megabytes.
So –
Yeah.
Is that still in production?
Is that –
No.
No.
No.
Wes, have you heard of Servo?
Yes, I have.
I'm actually legitimately excited about Servo because we finally got ourselves – well,
a rough ship date of like June, was it?
I think.
June.
June.
Servo –
That's very specific.
June.
Which could be like the very end of June.
I don't even know if there's a – I mean, I assume they mean this June, but I don't
know if it's said.
Could be.
Hey, June.
Yeah.
Could be.
It could be like June 2018.
Servo is a modern – a permanent – modern performant browser engine designed to be
super fast.
Everything is of multi-process, but outside of that, it's built on Rust, which is interesting,
which I think is maybe the most interesting thing about it.
It's coming out of the Mozilla Research Division and they're building it for Linux
and – what's that?
The Mac and Android.
You know, it's funny.
They don't list Windows on here, but they do say Linux, 64-bit Linux.
64-bit Linux.
And Firefox OS.
What are you looking forward – well, yeah, sure, sure.
What are you looking forward to with Servo?
I think it's just neat to see like a project of this scale being built in Rust.
I've enjoyed following Rust's development.
I think it's a neat new systems language with a lot of interesting features.
So it'll be neat.
I don't know.
And Gecko is cool, but everyone is – it's WebKit these days or Blink or whatever.
So it's kind of interesting to see Mozilla pursuing something new and maybe if they can
bring some real improvements to that scene using Rust, that'd be awesome.
I would love.
I haven't tried it or anything, so I don't know.
Go ahead, Rodden.
The cool thing about it is that Rust, the language, was actually developed because of
Servo.
Yeah, right.
I know, which shows you how long they've been working on it, too.
Hopefully that means they're getting it right.
Yeah.
Hopefully.
The benchmarking with Red Renderer looks awesome, though.
This is the thing.
I mean, you guys know if I could switch my workflow over to Firefox, I would and this
could be a huge step towards making people excited again about writing some of the extensions
that I use on Chrome and some of that stuff.
I find just totally arbitrary example that is not really any kind of real-world test
other than it happens to affect me directly.
When I use that web app called IRC Cloud – have you ever seen this?
Yes, I have.
When I use it in Firefox, if I leave the studio on a computer and I leave it running and I
come back the next day, Firefox will be seized up, but not only just that, my entire desktop
session will be very, very, very laggy, very laggy.
Same thing happens on our GNOME web.
Same thing.
The same thing, which is a WebKit browser, does not happen under Chrome.
In fact, I can pin it to my browser in Chrome and accidentally forget to leave it there
for days and days and days and notice zero performance difference.
I know this is a silly benchmark, but for me, it tells me something about the way these
applications are architected, that the same exact web application in Chrome seems – yes,
Chrome uses more memory up front and all of that, but at the same time, it doesn't, after
a day, crash my machine.
Not a very common work scenario.
Not a big deal, but I think it makes a difference.
Is there a possibility there's also some sort of effect here with what we see in the Linux
world with firmwares, where things are tested for Windows but not Linux, are things these
days kind of just being written for Chrome in mind?
I don't know.
Could be.
Could be.
Could be.
Could be, yeah.
So I'm looking forward to seeing them get people excited and fired up, and Servo –
I'm going to try to write something in Rust.
It seems fun.
Yeah, and Servo looks really cool.
So we like to follow – another project we like to follow is – this is sort of what
this portion of the start of the show has become on Unplugged, is open source projects
that we think are interesting that we follow and want to give you updates on.
Kitson, you want to jump in on Chrome and using more memory before we move on?
Go ahead.
Yeah.
I was thinking that might be why it is more performant is because it's keeping that
memory fresh in the background rather than perhaps pushing it on to hard disk or swap.
Right.
Yeah.
That could very well much.
And also because even if one tab goes a little wonky, it very often does not affect the other
tabs on Chrome.
That could help, too.
So yeah, good point.
All right.
So we'd like to follow the Minecraft project.
The future of open source artificial intelligence, intelligence, intelligence.
We often hear from Ryan in their videos.
They have a new keynote style video, which doesn't work as well for me as some of their
other videos, but they do have something pretty cool to announce.
You heard of that X Prize there, Wes?
Minecraft's going cray.
Oh.
So we'd like to introduce founder and CEO of Mycroft, Joshua Montgomery, to tell you
about our new announcement.
Thank you, Ryan.
Hello, Joshua.
Hello.
I'm Joshua Montgomery, the founder and CEO of Mycroft AI.
Mycroft has partnered with Techstars, Vocality, Sprint, Ubuntu, and Lucid Labs in the pursuit
of an artificial intelligence platform for the connected home.
Today, I'm pleased to announce that Mycroft will be pursuing the IBM Watson AIX Prize.
The IBM Watson AIX Prize is a $5 million prize being awarded for significant accomplishments
in the field of artificial intelligence.
Should we win the prize, the $5 million will be donated to open source projects based on
the wishes of our developer community.
To win this prize, we've set a lofty goal.
It's our goal to create an artificial intelligence platform that interacts with people so naturally
that when you speak to it, you can't tell whether you're speaking to a machine or to
a person.
That's awesome.
For this effort, we're providing $250,000 in resources and assigning machine learning
expert Jonathan Dorlands to lead the effort.
Our first milestone on the road towards this goal is the open source speech-to-text engine
that takes speech and converts it into text both accurately and fast.
We're looking for developers, students, and researchers interested in artificial intelligence
and in donating time and effort to the open source community.
If you're interested in working with AI and you have a passion for open source, please
visit us at openstt.org to find out more information.
Together we can win the IBM Watson AIX Prize.
That's interesting.
Thank you.
There is so much going on in AI right now.
It really is.
Microsoft today is talking about their AIX initiative, which they're going to be training
open... They're going to be some sort of... Oh, I got to look into it more.
I said I was going to, and I need to.
It looks very interesting.
And just in our backyard.
Of course, this week, Google's AlphaGo just...
Where can it go?
Right?
It just won a four-to-one match, I guess, so the human won once.
It's a really interesting week for artificial intelligence, and the MyCraft project basically
seems to have news almost every week.
It really does.
I'm thrilled with how well they're doing.
So far, I don't get a sense that they're failing to deliver.
It feels like they're on track, and they're doing well.
I'm a little taken aback, because not only is it rare these days, it seems like, for
a Kickstarter that I've been interested or backed actually to do well...
Where's the subtle disappointment?
Right, right.
But also, this is a really big deal for them not to F up for Linux and open source.
This is an area that's been so corporate control.
There's open elements to it, but all the big stuff is coming from...
It's an area that has been so driven by the marketing strategies of Amazon, and Google,
and Apple, and Microsoft with Cortana.
This has taken it so much further beyond that.
None of them are extensible in any way, really.
One point, I'm like, at what point is the MyCraft project going to crack?
At what point does a little upstart new project like this, that's doing something so ambitious,
reach their maximum capacity to handle all of these new partnerships and agreements?
Or when do they get bought and suddenly corrupted?
Well, they did just get into that accelerator, which should help, but yeah, it's just something
that I worry about, because they're so important.
Yes.
You don't really have a... They're it, really.
Yeah, but Joshua and Ryan seem to have pretty good heads on their shoulders.
It's pretty interesting to watch all of that.
To see the broader market.
So if you're interested, please do help them out.
I think this is going to... If things keep going like they're going, this is going to
be a big project.
Yeah.
I'm hoping... Here's what I'm hoping.
I'm hoping MyCraft test production unit, Linux Fest Northwest, hands-on.
Yes.
Hands-on.
Right?
That would be the thing.
And then we'd be one of the few places with cameras there-
Maybe we can ask it to play the live stream.
Oh my gosh.
That would be-
That could happen.
If you could say, MyCraft.
MyCraft, play JBLive.
We have to get its name right.
That's prerequisite.
I want to call it JARVIS.
You should be able to call it whatever you want, right?
Computer.
Wouldn't that be nice?
Computer.
Computer.
Play JBLive.
And then it starts the stream.
That would be so awesome.
So I'm hoping we get our hands on, because we're going to have cameras there.
We're going to have the whole crew there.
Everybody get to play with it.
We'll all get our thoughts.
We'll see.
We shall see.
And you know that back end... Because one of the nice things about MyCraft, you can
deploy your own back end infrastructure.
You can deploy that on a DigitalOcean droplet.
Oh, that's right, DigitalOcean's sponsor of the Linux Unplugged program.
Go to DigitalOcean.com and use the promo code DOUNPLUGGED.
One word.
Lowercase.
Ultimate power.
You hear those clowns over at the Linux Action Show, they have a new promo code?
Losers.
Screw those guys.
We got DOUNPLUGGED and we've had that for a long time.
Go unplug your DO droplet.
Well don't unplug it.
That would be bad.
Unplug your mind and expand it by creating a DigitalOcean droplet.
DigitalOcean.com.
Use the promo code DOUNPLUGGED and you get a $10 credit.
You can start in less than 55 seconds.
And pricey plans?
They start at only $5 a month.
You see how that DOUNPLUGGED is going to hook you up.
You get 512 megabytes of RAM at $5 a month.
A 20 gigabyte SSD because they all SSDs.
All SSDs with one CPU and a terabyte of transfer.
And DigitalOcean has data center locations in New York, San Francisco, Singapore, Amsterdam,
London, and I believe a brand new one.
Brand new.
In India.
It's crazy.
They've got a simple interface, that intuitive control panel, and that powerful and straightforward
API.
API.
They've got a straightforward API, Wes.
And you've got to go check it out at DigitalOcean.com and use the promo code DOUNPLUGGED.
Their pricing plans are simple and straightforward.
They've got one click deployment of a bunch of great open source applications using all
open source code.
The entire stack from the virtualizer all the way up, they're using open source code
there.
AVL.
Love it.
Love it.
And then when you get going, they have tutorials to take it even further.
If you go to their community section, they've got write-ups on all those things you need
to know.
These are some of the best tutorials in the community.
Like Let's Encrypt.
That's a hot topic right now.
They've got Prometheus, package management basics, how to use Tink, how to use Puppet.
All of these things.
And DigitalOcean has gots it.
And it just makes your experience even better.
So go to DigitalOcean.com.
Go check out all of the good stuff.
Look at the incredible pricing.
And if you really want to feel like it's 2016, like if you've just been like, ho hum, Back
to the Future said it was going to be awesome and you're not feeling like it's really 2016,
I got something for you.
Install Docker on your laptop or your desktop.
Create a really cool Docker image.
And then go deploy to a DigitalOcean droplet in seconds and realize, okay, yeah, it's 2016.
I just spun up a super powerful server with crazy fast bandwidth with all of my software
config that was completely identical on my laptop in seconds.
It's very cool.
And you know, even if you don't use any of that stuff, if you just want a Linux rig,
you can SSH into and just poke around, a great opportunity.
DigitalOcean.com.
Just use that promo code, DOUNPLUGGED.
Big thank you to DigitalOcean for sponsoring the Unplugged program.
Wes, you got yourself here one of them early edition Sputniks, right?
Yes, I do.
The first one, if I don't make a mistake there.
And you know, that's what my son uses too.
And it's a pretty great laptop, but this week, a new laptop entered the scene.
It's making me jealous.
Yeah, the new Skylake-based Dell XPS 13 with Ubuntu pre-installed is arriving in the US.
It's a fifth generation Intel.
So that's not bad.
With an i7, you know, it's a two-core, up to 16 gigabytes of RAM and a nice fatty SSD
loaded out of the gate with Ubuntu.
Are you tempted, Wes?
Oh, yeah.
Are you?
I mean, I've been looking at these new ones with that tiny bezel for a long time now.
Yeah, that is nice.
Yeah, that, yeah.
And I guess on these new ones, they're also offering a lot of these in their business
precision line, but with the same form factor.
So I think that would be the one I would be looking at.
Yeah.
Their precision line workstation notebooks, the Precision 5510, 3510, and 7510, and 7710,
15 and 17-inch variants are also available.
I believe they're more configurable, like they're less locked down.
Yeah.
So the XPS 13 is a small, tiny laptop that's really nice.
Don't have any word yet on when they're going to support 16.04.
They're shipping with 14.04 right now.
I mean, I didn't install Arch anyway, so I don't know why you're wasting my time here,
Chris.
Hey-o!
So up to 16 gigabytes of memory, a 512-gigabyte solid-state drive.
I don't understand this, and this is where I don't feel like Dell has yet matured to
a true Linux vendor, is 14.04 is just not a good choice if you're shipping on a high
DPI display.
This is a soapbox I've gone up on before.
It's not a – I guess they must have used – yeah, yeah, yeah, because you can only
go to, what, GTK 3.10 in 14.04, and that's only the very initial high DPI support in
your GTK applications, and it's gotten so much better since then, and you're really
missing out.
And so when you ship a laptop with a 3,200 by 1,800 resolution, and you don't –
Close to 16's release.
Yeah, exactly.
That's why it will be a really nice upgrade to 16.04 when they do ship.
Hopefully it's not too long.
You know Project Sputnik's been going since 2012.
And so that's actually a pretty old laptop in computer terms you've got there.
Yeah, it is.
And when they first did it, I was a little – I was actually pretty skeptical.
I didn't think this was a good idea.
I also basically didn't think Dell was going to stick with it.
No.
Well, in all time, it's kind of just been this one little thing, not on the side.
I am encouraged that they're expanding to the precision line.
I think that's a big story here.
And they've had some in the past, too.
This isn't the first time they've done this, but they've expanded the program even
more so.
And I think what they've done here that was really super smart, that the other OEMs
should take away from like your HPs and your La Navas, is they're targeting developers.
They're calling it the developer edition, right?
They're targeting power users.
And I think that has been key to a success because they're not saying this is the laptop
that will forever replace Windows.
This is a laptop that's better than a MacBook.
This is the MacBook killer.
They're not saying any of that.
What they're saying is if you want a developer laptop and you're a technical user, we've
got a computer for you.
Which is pretty neat because it makes it good like you're hired at your new job and then
I go, what do you need to work with?
You could say MacBook Pro or whatever, but now you could say something like this and
get nice hardware, nice screen.
Very much so.
You don't need to have work or probably order from Dell.
Right.
They already have a supplier there.
Yeah.
That is a big deal.
Now, not available outside the U.S. yet.
Good to know.
But I think some of the precision machines are, which might be better rigs to go with
anyways depending on your needs.
Probably more expensive.
Okay.
So let's ask the mumble room.
Anybody in the mumble room, you know, tempted to pick up a laptop, maybe put funds aside.
Let's put yourself in the market for a laptop right now.
Around 2000.
Chris Lass is buying.
Around 50.
Yeah.
That's a big coin.
Well, it's about $400, everybody.
You know, something around $15,000 to $2000, a nice high-end laptop, and you want it to
run Linux.
Can somebody give me a reason why you wouldn't necessarily go with this laptop at this point?
That says it right there.
I think.
Look at Dell.
I can't think of, I mean, other than if you want a larger screen, but then you go to precision.
So you know, I'm hoping now that this really spurs on System76 to really step up.
They have some great machines.
They do.
And especially like in the higher end, like just on the pre-show, I was sort of wishing
that I had my Bonobo hooked up right here.
And on the Oryx Pro, like, right?
But when it comes down to these super light, really thin, good battery life, high-resolution
screens, I know for my XPS 13, which is the last model, that screen is damn good.
It's one of the best screens.
Yeah.
You know, I still look at it every now and then when I open up, I go, damn, I can't believe
this is a Linux computer.
I just can't even believe it.
And that's you.
Yeah.
I mean, and Apollo is great, and Entraware has a great hardware setup.
I think I would – my preference would be to go with System76 or Entraware first.
Yes, I agree.
But if they weren't – but if I wanted something like this, I would consider it.
I would.
Oh, I guess they say we're in a different channel on the Mumble Room.
Is that true, Wes?
Is that true?
That doesn't look true to me, Wes.
That don't look true to me.
If we are, double-click on there.
There you go.
All right.
So if anybody – sorry.
If we were in a different channel, I don't know how that could have happened.
But if you didn't get a chance to say something, your thoughts on the XPS 13 virtual log before
we move on?
No.
It seems like a great laptop.
And nobody had a reason why you wouldn't pick it up, right?
We didn't miss that?
No.
There's no major reason I could think of.
Other than – I mean, what about the fact that it's Dell?
They're all the same now.
Isn't it even cheaper, though, than the Windows one now?
I don't know if it is.
It used to not be.
Maybe it is now.
I thought I heard someone make a comment about that.
Hmm.
Hmm.
Yeah.
But to say that it's just a Dell – I mean, Alienware is Dell, too, so.
Well –
Yeah, but you're just basically saying Alienware is awful now.
Well –
And you'll put a Linux sticker over the little Dell symbol, right?
I haven't yet on my other one.
I guess I just – I don't know.
I don't really know what Dell's future holds for them, but I'm glad they're doing it.
But at the same time, I look at the other vendors and go, so you're still planning to
just do that Windows thing, huh?
Right.
Still planning to ship Windows.
That's working for you, huh?
Okay.
Yeah.
So, muhahaha.
You're a Dell fan, so defend them now that I've insulted the honest –
Yeah.
So I have two Dell laptops, and the first one holds five gear, and the cellist – one
– the one I have now is still going, and it's about six GM, maybe seven.
So it's held up well is what you're saying.
Yeah.
Yeah, that counts for something.
Yeah.
I have a laptop that its birthday was last week, and it's now 10 years old and still
runs and it's a Dell.
The other nice part is they're pretty easy to get parts for and service generally.
There's a lot of people who know how to fix Dell laptops.
That's true.
That is all true.
If you're a developer and you just want to get your job done and you want a nice support
contract –
It's a pretty good choice.
Yeah.
I would shop around.
Those support contracts.
That's right.
Yeah.
So you want to buy one?
Let's just look.
We're not going to actually buy one, but I've got the XPS 13 laptop up here, the Dell
figure.
So I figured before we got done here, let's just see.
So it starts here with a couple of different – I wonder if I'm on the right one.
It's kind of hard to find the Ubuntu edition.
I don't feel like I'm on the right one because these ones have Windows stickers.
So let's start by trying to find it, and let's just Google search for it, okay?
We're going to get the full experience.
Are you ready?
Yeah.
Okay.
We are Linux users who need a new laptop.
So, yeah, let's say we're going to search for Ubuntu Dell XPS, okay?
That should be enough, don't you think?
I would hope so.
Okay.
There we go.
The Dell Developer XPS 13 Edition.
First link on our Google search results.
Easy peasy.
All right.
Didn't even have to bother with the Dell site.
I'm feeling good already because that's usually where I go wrong.
Oh, look.
It's Ubuntu right there.
Yeah, Ubuntu right there.
Now, look at this, Wes.
We've got two editions to choose from, one that starts at $899.99 and one that's $1,049.
I'm kind of inclined to say –
What's the difference?
Well, I think the huge difference here is a faster processor.
Well, you're going to need that.
But otherwise, the specs look – let's customize the $1,000 one.
I have work to get done here.
Yeah.
I do like a fast rig.
So you really get – so you can upgrade to 256 gig solid state.
These all say fifth generation i7.
Are these the last ones?
Oh, it must be.
No, though, because mine's an i7.
So I can't change it to an i7 from here.
So the final –
The fifth generation.
Yeah.
These are all – the new ones are Skylake.
Yeah, that's true.
That is true.
But you know what?
They're marketing this.
Yeah, maybe they're not available for – well, that's too bad.
So why make the announcement yet?
Double check on that for me, Wes.
So it looked like it was around – that one was around $1,100, $1,400, depending on how
you configure it.
Fifth generation is Skylake.
Sixth generation?
Yes.
Well, then those probably are.
So they're not actually available for sale yet.
That's too bad.
I was going to see how much it would be if we wanted to configure one right now.
I want it right now.
Yeah, yeah.
Would you consider upgrading yours?
I mean, is that your personal machine or is that a work laptop?
It is a work laptop.
It's an extra work laptop, which is why it's good enough for now.
But I have been – I mean, I have been – one of these days, I'm just going to snap and
buy a new laptop.
Yeah?
Would this be on your list?
It's very high on my list.
You know what's confusing?
It's hard because they all called the new.
So they say the new XPS 13 developer edition, and it starts at $1,500, but then you – oh,
wait a minute.
Well, look at this, Wes.
What changed?
What?
I don't know what changed, but now you're –
Now you're on the new, new, new developer edition.
Yeah, and now it's sixth generation.
What the hell just happened?
What the?
Holy crap.
All right.
Well, here on Linux Unplugged, we've unlocked the secret code necessary.
I wonder if I just had to refresh the page.
That might have been it.
So here we go, Wes.
It starts – holy smokes.
It starts at $1,500, but it goes all the way up to $2,300.
You get a one-terabyte hard drive.
So let's go with the middle –
So it really is in the MacBook Pro.
Yes.
Let's go in the midrange.
Let's start with a 512.
I can't go below 512 for my main work machine, right?
I mean, that's –
I'm all right with 256, but let's go 512.
In what world, Wes?
In what world?
Jeez Louise, Wes.
Jeez Louise, that's disgusting.
Sixty gigabytes of RAM, 512-gigabyte PCIe solid state.
Oh, PCIe.
Yeah.
Oh, boy.
Tasty.
Oh, boy.
Oh, boy.
So that's funny.
So by the way, don't Google search for like what we did because you might get that same
result we did.
Yeah.
Do not imitate.
We re-clicked on the logo of the XPS developer edition and it loaded this page.
So be careful how you search because you might get to the wrong thing.
So ours is going to be $1,949.99.
Okay.
Okay.
Okay.
I can see it.
Boy, it's barely worth that, I mean at least based on mine, unless they've improved the
build quality a little bit.
Right.
There's the case gives – it's a plastic case.
It gives – and the other thing is is where you rest your wrist right here, see they're
showing that right here, yeah, it's the same exact material.
It shows stains like an SOB.
Oh.
That's disappointing.
And like when you're sitting there like we all do when you're sitting there eating chicken
wings and browsing Reddit.
You get chicken –
The truth comes out.
You get grease.
You get wing grease on your laptop and ain't nobody –
Is this why you won't bring that to the studio?
You're too embarrassed.
It's just filthy.
No, man.
It smells delicious.
I want it at home.
I want it heated up gently.
It smells great.
Yeah, it's great.
Yeah, the build quality.
So the build – I don't know.
$2,000 for a Dell is –
Then you imagine what you can spend that money on a desktop.
Yeah.
Yeah, exactly.
Oh, yeah.
With a really nice – that's the other thing is the Intel graphics is not cutting it for
me.
And when you throw high DPI in there, it's even worse.
So if you just get like a nice –
This is –
Full HD, you know, like 1080p laptop and then you can spend your money on your beautiful
desktop.
I was trying a little, you know, a little game in here on the Apollo which is the Sky
Lake Iris.
Still not good enough.
Still – so, boy, if $2,000 – I might be wrong.
Let's go check.
But I think when you get into a $2,000 Apple laptop, I think you get dedicated graphics.
You get the Iris Plus.
Right now it's an AMD.
Is that how – okay, so let's go look.
So would that be a MacBook Pro?
And I guess this maybe isn't a fair benchmark but it kind of seems like, you know, you have
to at least consider that one of the better selling competitors – but they don't offer
dedicated graphics in a 13-inch form factor.
So you do have to step up –
Oh, that is a difference.
You do have to step up to 13-inch but, yeah, when you – or I'm sorry, 15-inch.
But once you step up to 15-inch, you get a legitimate quad-core processor on the MacBook
instead of the dual-core i7.
You get 256 gigabytes of PCIe storage, not as good as the Dell.
And you get the Iris Pro video.
I don't see dedicated graphics on this one actually.
Oh, okay.
Well, then maybe you have to go a little more expensive.
Yeah, you might.
So, okay.
All right.
I just – for $2,000, I want my damn dedicated graphics and I want my damn dedicated graphics
real bad.
Although, even at a – unless you get something like the Oryx, a lot of the dedicated in the
laptops are still – they're better but it's not what you pay for, you know?
Yeah.
I want something around $1,000 that's really – like the Centraware starts at a good price,
the Apollo, right?
Yeah.
So, yeah.
It's closer.
But, yeah.
The marketing is done by Dell.
Look at our beards.
We sell Linux as system T.
Mumbo room, anybody else want to talk about the XPS?
Either we're being unfair or maybe we're being too fair.
Go ahead and share your thoughts.
Going once, going twice.
I think what it comes down to is that Dell might be trying to shift – excuse me, shift
over from being just strictly a Windows OEM and they're trying to get that Linux crowd
a bit.
Looking at the System76 Oryx Pro and even at a 15-inch or 17-inch, it's still a better
deal for under $2,000.
Wow.
Oh, really?
Yeah.
Like, it's like $1,300 and you're getting a GTX 970 or a 980 mobile from NVIDIA.
Oh, boy.
And so it's like, good try Dell, but dude, System76 is killing it on these deals.
Yeah.
So how much is the super thin lightweight worth and I guess it all comes down to your
workflow.
Yep.
That's your like main workstation.
He said something there, Wes, that I wanted to – do you think this is Dell's hedge against
Windows collapsing and are they just doing it in a way that is hyper-focused and they're
able to learn from?
Because obviously they're focusing, like we mentioned, at developers.
Yep.
And I think that –
But if you're Dell, you're Michael Dell and you're like, you've got to look at your money,
you see where your money's spent.
You see this group of like eight or ten guys and gals that are burning money on working
for Linux.
Why are you spending that money?
Why is Michael Dell spending that money, Wes?
You know, I think it kind of – it might play also into the enterprise shift.
You know, they bought EMC.
They were looking at kind of focusing on enterprise and I think if you're going to still be selling,
you know, workstation level components, Linux is a good bet for that kind of like power
user.
Yeah.
And maybe you're building web apps.
Yeah.
And infrastructure.
Yeah.
The red pepper, you had a point to make about workstations.
Go ahead.
You can always order a Dell Precision 15-inch laptop with Fibonacci on it.
Yeah.
The Precisions now, they've expanded with this announcement.
They've expanded the Precision line with more customizability and so maybe one day we'll
see Wes show up with a Precision.
You know, I love – if I had unlimited money, if I could have all of the laptops in the
world, I think I would like to have the Apollo for my portability instead of an XPS.
I actually think – my truly unbiased opinion having the XPS 13, the last generation, and
having the Apollo, the Apollo is a better computer and the trackpad is better on the
Apollo.
Wow.
So for portability, I think the Apollo is better.
But –
I really want to just slide that into my bag when I leave.
I'm not going to lie.
At the same time, I want some of the features and power of the Oryx and I actually have
had some limited production capabilities with the Apollo because it's not powerful enough.
So part of me, if I had unlimited money, Wes, I would have the Apollo as like my portable
machine and the Oryx as my – I got to do a whole bunch of work and I'm doing it between
the studio and home all the time and that would be my machine.
And I would have two laptops because there's not a perfect laptop for me right now.
There's not one that answers all the things like the – the thing about the Apollo, lightweight,
super easy to –
Sturdy construction.
Yeah.
So it makes it very easy to move it around because it's really sturdy and a very small
power adapter.
The plus about the Oryx would be it has a great graphics card in it, a great desktop
class CPU.
You can do whatever you throw it at.
Exactly.
But it's huge.
It's heavy.
It has a big power brick.
And fans.
Yeah.
Yeah, that too.
This thing has never once – once – the fans have never once spun up on air, which
is a huge thing for me because then it makes it sound better.
Stopping the show, complaining about the fans.
It happens almost every other week until the Apollo.
And the Apollo has better battery life than the Oryx.
I would guess because it's all Intel and no dedicated graphics.
But either way, yeah, I don't feel like I could land on one single laptop right now.
I guess the way to strike that distance would be to have – or to strike that balance would
be to have a pretty well-built desktop PC that's within reason and then have a nice
portable laptop.
Right.
And then – but still, I'm just trying to justify how you spend $2,000 on a computer
that is limited to 16 gigs of RAM and doesn't have dedicated graphics.
Maybe I'm just a PC master race guy.
I mean, I don't even – I'm not trying to be like, oh, you've got to have fast components.
But $2,000 and you don't have dedicated graphics and you can only do 16 gigs of RAM, that sounds
crazy to me.
On the other side, I get frustrated that the RAM is always lock-stepped with the other
components.
Like, maybe I don't need the 512 because I do a better job of keeping my file system
organized than Chris does.
Right.
You know, or I don't need the super nice touch, I just want the full HD.
Yes, right.
You can never get the like 16 gigs and 32 gigs in that model.
Yeah.
Yeah, yeah.
Okay, Muhahaha, tell me about this.
You think it's – for $2,000, you say it's worth it if – as long as you get a good
amount of use out of it, like several years, maybe more?
What do you think?
Yeah, I think it's fine.
But how do you get five years of use out of a computer that doesn't have dedicated graphics
and is locked to 16 gigs of RAM?
Seriously, how do you get five years out of that?
Debbie unstable and never change a thing.
So I think you – okay, I don't think you can do it if you are planning to game, but
if you're just planning to use it for development, yeah, just browsing, okay, maybe browsing
maybe that is kind of overpowered, but yeah.
I don't know, man.
You know, I just read something, Wes, today.
Didn't you link it to me?
One of the features, and the reason why I didn't put it in the show is because I didn't
understand it, so I didn't want to read it on air, but one of the features in kernel
4.5 is a bunch of work on the new open source AMD driver, right?
Yes, I believe so.
And I don't know – can you pull up our thread on that computer and pull that up because
– maybe I can, because one of the things – and this is why I didn't include it in
the show is they talk about accelerating ButterFS file system calculations using the AMD GPU.
So if you're following me here, that would mean your file system runs faster because
it's using the GPU to crunch numbers.
That – yeah, okay, let's see.
Also, by the way, it has better PS2 support, Wes points out.
Super important.
When you need that very accurate PS2 mouse.
Here's why – here's the part that it says – this is why I didn't read it on air.
So they say, so what's exactly so promising about Linux kernel 4.5?
It includes an implementation of initial support for the AMD PowerPlay power management technology,
and it also brings high performance to the AMD GPU open source driver for Radeon GPUs.
As a result, it will improve scalability in the free space handling of the ButterFS file
system, and it will have better EPOL multi-threaded scalability.
So this article is saying that the – I don't – this is why I didn't – this just got
– I'm just shooing this in, but this thing is claiming that the improved GPU drivers
will help with ButterFS free space calculations.
How can that be a thing?
And if it –
It's not a thing.
Okay.
It's not a thing.
There's supposed to be separate things.
They added a new free space map cache to ButterFS in version 4.5.
Okay, good, good, good.
All right.
So because my point was going to be – but I can't – and that's why I was like that
can't be right.
There's no way that's right, but where I was going with this is I see future workloads
that are improved because your GPU takes some of the compute.
It's already here today, but it's mostly here in production work.
So when you tell me that this XPS 13 is a five-year computer, I don't know.
I don't know if that's true.
I don't know if that's true.
I think there's a certain class of people that don't – they can't have a five-year
computer, and you might be one of them.
Maybe on a desktop.
Maybe on a nice desktop that you don't game on.
That's okay.
Well, so there you go.
There you go.
Fine.
Fine.
That's just fine for Chris.
But that's not that there's anything wrong with that.
And there are some users that you can have an older ThinkPad and use it for a long time
and it works great.
Yeah, that's true.
That's a good point, Wes.
That's a good point.
Yeah, I guess where I was going with this is I guess what I was trying to say and I'm
not saying it very well is I think there will be future work tasks and loads that are automatically
offloaded to the GPU that you as an end user don't even realize like your web browser
and its rendering or how your menu pops up when you go to search for applications on
your computer.
Oh, yeah.
Lots of interaction stuff is being –
Yeah.
Today and in the future, more and more stuff will be GPU accelerated.
And if you don't have a computer that has a good GPU, you're going to be left behind
a little bit.
Your system's – that's all I'm saying.
You see that software rendering pop up and you get sad and everything's slow.
And for me, when I'm using my XPS 13, that just means, okay, this isn't a time I could
play games.
I just – I can't play games on this computer.
And that's kind of a bummer sometimes.
I mean, there's always race to the sun.
That barely works.
That barely works.
Really?
Well, part of the issue is 4K.
And then part of the issue is so many games right now suck at changing their resolution.
And so when you try to run it in windowed mode, it still gets really funky.
So there's just a lot of rough spots still.
And it makes gaming frustrating on the XPS.
It's just not even worth it.
Where you stream it from your computer.
I don't know.
Probably different games.
Like a different – my kids can play Minecraft.
That works pretty well.
Right.
So there you go.
That works.
That works, Wes.
But things like – like actual game games that are like not – that aren't like
–
That aren't written in Java?
Yeah.
Those don't play so well.
Mm-hmm.
Mm-hmm.
Yeah.
All right, Mumbo.
Any other thoughts on the Linux laptop topic before we move on?
Going twice.
Going twice.
All right.
So let's talk – let's take a break.
Let's take a moment to reset before we get into something that is looking out into the
future of it.
Let's talk about Ting.
All right, everybody.
I'll talk about something you can get right now.
You don't got to wait until the future.
You don't have to wait until Captain Picard on the Enterprise comes by and has the solution
for you.
No, friends.
Get out there right now.
And go to linux.ting.com, linux.ting.com, Wes.
You go there right now and you'll get a $25 discount off your first device.
Or if you have a Ting compatible device and they got CDMA and GSM, guess what?
They'll put $25 towards your first month or whatever.
Like your average Ting bill right now, $24 a line.
So $25 in credit is going to pay for more than your first month.
It's your minutes, your messages, your megabytes.
They add them up.
Whatever bucket you fall into, that's all you pay.
It's $6 for the line.
That is Ting.
They got a bunch of great devices.
They're unlocked.
You can get them from Ting directly or you can bring your own.
They have no contract, no early termination fee, and they have a really good dashboard
and fanatically good customer service.
That's Ting right there.
It sells itself.
I don't need to sell it.
It sells itself.
But one thing that's kind of cool is they're geeks.
And you can see this in some of their blog posts.
They did a blog post about cord cutters.
They've been doing a whole series about cord cutters.
They love cord cutters.
Yeah, they do.
They talk about how cord cutting not only saves you money, which is kind of obvious,
but also saves you a whole bunch of time.
The geeks over at Ting did the math and it's unbelievable.
Not only do you learn a little bit about how commercials work in television, which is pretty
insightful, but you also get a little idea of how much time you save when you stream
shows without commercials versus watching shows or even like DVRing through them.
It's a pretty cool blog post.
They've got a whole bunch of good stuff.
Start by going to linux.ting.com.
That supports this show, gets you the discount, and lets them know you heard about it.
See, the best part, they let us put – Linux is now a sub-domain on their website.
Isn't that wonderful?
That says it all that you need to know about Ting right there.
Yes, it does.
Exactly.
It is very, very cool.
Go check them out.
Go get a great device from GSM Cards starting at $9.
All the way up to feature phones.
With Amazon Prime.
Yes.
Get it just as soon as you possibly want.
Yes.
Put it in anything.
Then they've got, of course, feature phones and basic Android phones that are just nice,
clean Android phones all the way up to the high-end luxury phones.
I'm thinking of having like a, oh no, the internet went out again, emergency gateway
with Ting, $6 a month.
I probably won't use it like nine months out of the year.
Here's a nice thing.
If you had a way to activate it when your internet goes out, you could just turn the
line on and off, and then you're not even paying the $6.
Exactly.
And then just transparent internet.
Don't tell Ting I told you that.
But you could go get one of their MiFi devices, or whichever one you want, just grab a SIM.
There's no contract, and you just pay for $6.
If you forget to turn it off, you'll pay $6.
If you say to yourself, you say, self, it's worth it to me to pay $6 a month to have internet
always available.
Honestly, it is.
Yeah, it is.
Then you could just pay $6 a month.
But you could also turn it off, and then use the Ting app on your phone to then turn the
line back on when your internet goes out, and then good to go.
Because if the internet goes out, I know.
Yeah, yeah, you do.
Right away.
Oh, there's no missing out on that.
I'm in a terrible mood.
Yeah.
Where's all my stuff?
Linux.ting.com.
Go there, support this show, check out Ting, get yourself a discount.
Big thanks to Ting for sponsoring the Linux Unplugged program.
I don't know what it is about these snappy packages, Wes, but I continue to feel like
a dope.
It's gotta be in your bonnet.
Well, I struggle because it's a whole bunch of different type of technologies.
And you know what's funny about it?
It's not even like the first attempt at this.
It's maybe a different take on many attempts, we're gonna get to that.
But I do wanna take a moment and talk about snappy packages.
So there's Snappy Personal, their new approach to package management and updating is designed
to be faster, more reliable, transactional with stronger security.
Snappy for at least one of the desktop spins and of course, you got Snappy Core, you got
the phone, they're all using snap packages.
There's also on a future, which is still gonna be deb packages, a lot of the base OS will
be using deb.
Snap packages will be used to sort of unify the concept of package management against
Internet of Things and desktops and all of this.
So developers could create these snap packages that are like a package build from the AUR,
so it's a script file that tells you where to go get all of the files, meets a container,
meets PBIs, which are like statically linked libraries and all of that.
Is this a good rough description, do you think, Wes, from your understanding?
It seems to capture it.
Basically, I mean it's pretty rough.
There's a little more but...
That's the snap package.
And then there's a backend component to it that's run by Canonical that's sort of like
the backend repo server, if you will, that is aware of where things are at and keys and
whatnot and things like that.
So this is another component to it.
It's not a distributed system necessarily, it is a centralized system with a server.
And this appears to be something that a lot of projects are trying to solve, this particular
problem of distributing software.
And there's different takes on how it should be done.
A couple of them that are interesting is the GUIXSD, I don't know if you know about this
one, Wes, but GNU's got an attempt at this one.
Nix, I think is what it's called, Nix.
Yeah, they're kind of sister distributions.
Yeah, yeah.
So you have Nix and you have GUIX and you have Limba, which is another project that's
trying to do this.
That's a new one to me.
And you have, of course, XUG App, which is a big one from the GNOME folks.
I've kind of been waiting to see what's going to happen there.
And XUG Apps are sandbox apps that the whole goal here, they say, is allowing developers
to distribute applications across Linux distributions, something we've talked about with Michael
Dominic on Coderadios many, many times, even in the last week's episode, because he'd been
running Ubuntu for a while.
If I wanted to create an app, let's just crazy-pie this guy.
Let's say, have you noticed how there is not really a great app store for Linux?
Let's just say we could create an app store for all distributions, but how would you make
applications you could distribute across all of those?
You need something, you need something sandbox, something that takes into account all the
different libraries and different versions of things.
Sandbox applications are the future for that type of distributed application.
Not all of our apps that we install are going to be sandbox, but the ones where it's like
one click and you download and you run, these are going to be sandbox applications.
That's the way these things, all of these different projects are going.
And however they're implemented, that's where there's differences.
SNAPs, SNAP packages are an Ubuntu-specific thing.
XUG Apps are sort of a distribution agnostic kind of thing.
Recently we talked about AppImage.
Remember?
Yeah, that was fun.
Yeah, was that just last week we talked about AppImage or two weeks ago?
Two weeks ago, which is essentially another download run anywhere thing.
It's download an application, mark it executable, and run it.
No need to install.
No system libraries.
Has similar SNAPs.
You know, it has like a read-only kind of, you know your app doesn't change.
It's not getting overwritten.
All the dependencies are bundled together.
So a lot of different takes on this.
Anybody in the Mumber Room kind of maybe more familiar with SNAP packages and some of the
technical details that maybe wants to fill in anything that I've missed here?
You guys are welcome to jump in.
And of course, the Chapman's pointed out, updates are going to be an interesting thing
with SNAP packages because you'll have your base system updates and then you'll have to
update your SNAP packages as well, which might have their own libraries and their own containers.
But those will just be Delta updates, right?
Is that what they're working on?
Supposedly.
Yeah, supposedly.
Very much so.
So we're going to get to a point in the future where there's going to be a lot of different
like technologies that are essentially solving the same problem.
Well, we're already there.
It's just none of them have any large acceptance.
When Ubuntu rolls out SNAP packages.
That's going to be a big push.
Yeah.
Yeah.
XGG Apps though is, you know, Fedora, Red Hat, Gnome behind that one.
So I wonder.
Yes.
Kits and Kitty, you were asking about APT?
Yes.
So if I'm understanding this right, does this mean that SNAP packages will coexist on the
same system as APT Git?
Correct.
Yeah.
So basically the base OS is still going to be based on Debian.
Ubuntu, whatever it's going to be, is still Debian based.
The core OS packages are installed by APT.
You can still install packages from APT.
Think of it, I do in this term, I think of it as how the AUR has this user created applications
and then Arch itself has repos, official repos.
Well, I think the FreeBSD models may be a little better.
Yeah, you're probably right.
Yeah.
Or, you know, in OSX land it's slash applications.
Yeah.
It's the same thing here.
It's the same directory.
But OSX doesn't have a base package manager, right?
Well, no.
You just get it all at once.
It's the same thing.
Yeah.
Yeah.
In this case, you still have devs getting updated in the background.
Sure.
You're now going to have your package manager is going to need to update.
You're going to need to do an APT Git update and upgrade and SNAP package manager is going
to do an upgrade.
Right.
I wonder if they'll wrap that in one or if it will be distinct.
I would assume, right?
Yeah.
I would think so.
Yeah.
So the two will coexist because, I mean, let's be honest, they can't repackage everything
in Debian as a SNAP.
Yeah, becoming another Debian.
Yeah.
Yeah.
And there's no benefit to that, really.
So you have a couple of different technologies.
The ones that I'm very interested in, besides SNAP packages, are XEG apps.
They use cgroups, just like Docker containers do, and namespaces, could leverage SE Linux
and KDBus in the future.
And they're already writing today with Wayland in mind, which I think is really nice.
See, that's nice.
And I would – I mean, however we get to better sandboxed, better containerized or
not applications, that would be a big win for Linux security.
Do you think actually it would be a big win for security?
Because the big pushback –
I mean, it depends on how well it's done.
The big pushback that seems – that everybody always talks about is don't bundle your dependencies.
Don't statically link.
Gentoo has this Wiki post here about why you shouldn't do it.
Everybody always says the problem with PBIs is they include all of their own libraries,
which means if there's a security vulnerability in open SSL, you have to update lib SSL on
lib open SSL on all of those applications instead of just updating it once on your system.
Is it better for security?
See, that's a good point.
I was more referring to the sandboxing parts of it, which I think Snappy has less as compared
to maybe XEG.
You know, where you're using cgroups, maybe you have a whole network namespace.
I don't know.
There is an issue with bundling dependencies.
That's one thing that Linux users for a long time have kind of cited as like, hey, we don't
do this.
I guess it depends on how widespread it is.
Like I like if the base system –
And I think it –
Oh, go on.
I was going to say, I think it depends on who's doing the bundling.
I think if it's upstream, the maintainers of the distro doing the bundling and they're
actually keeping track of security updates and those sorts of things, it's fine.
Like in the case of Snappy, if Canonical is doing the building of the snaps and they're
actually being responsible and updating it, then it's fine.
It'll come right from the same source they're getting the things in the distro.
If it's coming from somebody who's responsible –
If it's coming from somebody who's responsible –
And all the bundling will be okay.
Yeah.
If it's coming from somebody who's responsible.
Right.
But that's kind of the problem is then when you let it go to developers, sometimes they
are not responsible.
They're fixing their bundle dependencies.
Yeah.
An example –
Oh, go ahead.
If you're getting Eclipse and it's given the Eclipse project, chances are they're just
going to throw it all together into one great big snap and it's just going to be like,
well, what if that changes?
It's like, well, they're probably just going to say, oh, it works.
Just don't use that.
You know?
Hmm.
Yeah.
I think that – I look at that and I go, there could be a possibility that you could
have a couple of applications installed that have out-of-date libraries after a security
issue.
At the same time, that's a theoretical problem.
I mean, it's a theoretical problem that's pretty easy to abstract from watching what
could happen.
But it is a theoretical problem.
It also can go the other way, like subsonics problem, right?
It wants newer libraries to be installed.
Oh, yeah.
That's very much.
You're trying to install in 14.4.
Yeah.
If you start messing around with that stuff.
Right.
But you want your new app to have the shiny new on.
Yeah.
Super patched.
The other thing is actually – what actually makes a system usually more secure is to avoid
a monoculture and to have diversity and to have a lot of different obstacles in the way
for an attacker.
And so ironically, we've talked so much about having statically linked libraries could
be a security issue.
It's possible.
This is just – I'm just putting this out there.
But it's possible that having a whole bunch of random different versions of things on
one system makes it very hard for an attacker to be able to set expectations and know what
to be able to rely on exploiting in order to take advantage of a system.
In other words, because these applications will all be using different versions of libraries,
there may not be a common threat for an attacker to take advantage of.
So diversity may actually end up being a security advantage.
Just saying – I'm not saying theoretically that sounds sound, but in the way things seem
to actually work out, one of the reasons why there's way less viruses for Linux – don't
kid yourself.
It's not because we have a small usage.
Linux has a huge market share in servers.
There's a ton of money in Linux malware.
There's very few Linux malware, partially because we have a good security model, but
also because we are fragmented as F. And it's very hard to write once and run anywhere on
Linux right now.
And that includes malware.
That includes malware.
And so if you continue to diversify in a weird way, you may be adding to security.
I don't know.
I could be wrong.
But it might not be all –
I'm going to package all my malware as SNAP packages thanks to you, Chris.
Hey-o!
Hey-o!
And also submit it to the AUR while you're at it.
Kitson, I wanted to give you a chance to jump in, though, because you had a point that
I wanted you to ask.
Yeah.
I could actually see this being used to create a two-tiered system for package managing.
Maybe you could have packages installed in your home directory somewhere.
That way when you go to update your system and you want to do a full wipe on your system
partition, you can keep those applications that you have installed on your home partition.
I don't know if that's technically possible, but that's an interesting idea.
Yeah.
I've – Poppy, I'm glad you joined us because I just gave like a rough explanation
of SNAP packages.
I don't know if you've been listening.
But if you want to correct me in any way, if you know any better, you feel free to jump
in.
I haven't been listening.
I'm sorry.
I was far too busy on the other podcast.
Yeah.
I know the time zone thing.
The time zone thing.
Yeah.
Look at you.
You're back-to-back podcasting right now, aren't you?
I know, right?
You're pro.
You're pro.
Never stop.
We were just actually talking about SNAP packages, and this is actually something that I'm really
glad you're here to answer because we talked about the dependencies and static link libraries,
but one other thing, a kind of a con I've heard about SNAP packages is the backend can't
be implemented on premises.
The backend is run and controlled by Canonical, and there's not really an equivalent of having
a local repository on your land.
Is that – am I accurate?
I'm not sure that's the case.
That might be the case today because it isn't all finished yet.
It's all like shifting sand underneath you at the moment, but I don't doubt that that
will be the case in the future because I know there are plenty of people who want to implement
SNAP on premises and don't necessarily want to have their systems calling outside to the
internet.
Sure.
I mean, just look at providers like DigitalOcean who have hundreds and hundreds and hundreds
and hundreds of Ubuntu machines doing updates.
For them, it makes a lot of sense.
Also, one of the big selling points of SNAP is the secure side of it, and if you're a
security-conscious organization where you want to make sure that there's no possibility
for outside ingress to your network, then you want to make sure that all updates are
delivered from inside your network.
So I'm sure that's something that's on the radar.
I've seen other people discuss it within Canonical, and at trade shows I've seen it
being discussed, so I don't think it's dismissed as not happening.
It's just not done yet.
Sure.
Sure.
That makes sense.
So if I was a betting man, Bobby, and I was asking for hints from you, when would I bet
that I could install – when can I reliably expect to install SNAP packages?
And am I using the right term?
Is it a SNAP package?
When I'm talking like instead of a DEB, is it a SNAP?
Well, we tend to call it a SNAP.
A SNAP.
Oh, okay.
So have you got a SNAP for that?
Yeah.
Yeah.
Have you got a SNAP for that?
That's good.
So will there be a point where I'll be able to install them?
You made that up.
Wow.
That's brilliant.
I'm glad that came over.
Get this man a raise.
That is good.
That is what's going to happen.
That's what people will say.
And so is the goal to have – is it going to be possible to install them in 16.04?
Like I don't understand when that –
Yep.
Really?
Oh.
Yep.
Well, you already – I mean, there's pre-release images now.
I'm running SNAPy on my Raspberry Pi 2, which is on my desk in front of me.
I've got the light blinking away at me as it's building stuff, but it's kind of – it's
under development.
It's shifting sand right now.
It's really heavily under development.
And so, you know, things can change.
APIs can change, terminology changes, and so on.
But once 16.04 is out, sometime soon after that, I would expect it to all stabilize,
and you would get an LTS-style SNAPy image for your device, whatever device that is,
and be able to install SNAP packages or indeed for the desktop as well.
I remember the next – it seems like – not that that isn't enough of a challenge.
But then the next really big milestone would be to get the developer community creating
their own SNAPs.
Are you – I mean, am I following?
Does that seem like the next step?
And that seems like a massive task.
Yeah.
And we're trying to – we're creating tools to make that easy.
Like that is a target.
That is a definitive target is to get developers creating SNAPs.
And one of the tools that we have is called SNAPcraft.
Oh, yeah.
That's right.
SNAPcraft just takes a single plain text YAML file, like – so for example, you can
take a single plain text YAML file and bring together an application that is currently
on GitHub.
And you can bring like the tip of trunk on GitHub, and you can pull in whatever dependencies
it needs.
Maybe that application needs FFmpeg or AVConf or something like that.
And so you can go and get the AVConf from the Debian Archive or the Ubuntu Archive.
Or you can go and get – if you need Bleeding Edge, you can go and get that from GitHub
or Bitbucket or wherever it comes from and pull all of these things together into an
application and define all of that just in a single plain text YAML file.
Right.
And SNAPcraft.
Right.
And boom, it pushes out SNAP, which you then upload to the store.
In fact, you can upload to the store directly from SNAPcraft.
So you can just do SNAPcraft, SNAP, and it will create a SNAP, and then SNAPcraft upload,
and boom, you're in the store.
It's super easy.
I love it.
You know, when I first started playing with SNAPs, I was as skeptical as you and was fearful
for change as you.
And recently, I have been playing with it, and it is an amazingly good file.
So the YAML file that describes the SNAP, what is that called?
Because I watched Shuttleworth up on stage write one of those in probably 25 seconds.
He'd probably written it 100 times, but...
It's a plain text file.
Yeah.
What do you call that file, though?
It's the...
YAML?
Yeah.
It's a SNAPcraft.yaml.
It's got a predefined name, SNAPcraft.yaml.
Okay.
Okay.
YAML.
Yeah.
YAML.
So...
It's got a predefined format, and it's very easy to read.
Yeah.
And in this file, you could say grab a file from GitHub or grab a file from FTP or grab
a file from apt-colon-slash.
Like, the source can...
Okay.
Where am I wrong?
Well, yeah.
But you're right.
I mean, the syntax is different.
But yeah, you say, go and get this from GitHub, go and get that from the archive.
But you might say, like, for example, if you package up something simple like Calcet, right?
Calcet is written in Perl, I think.
So you'd need a certain number of Perl modules.
You don't need all of Perl, and you don't need every Perl module.
And in fact, the way that Debian and Ubuntu package things, they tend to bundle together
a whole bunch of modules, but you don't need all of them.
So why would you package all of that together in dependencies in your Calcet application?
You would pull in Calcet and then the one or two modules that you need.
So it's not just go and get this thing from GitHub, but go and get this thing from GitHub,
go and get this Debian package, but only get these individual parts of that Debian package.
You don't have to get the whole thing, and go and get these individual parts of another
Debian package.
So you can smush together all the bits that you would normally find inside, say, for example,
a Windows executable, or what you'd find inside a Mac DMG file.
There'd be loads of individual parts.
We call them parts in the Snappy world.
And those are brought together and built together to form one atomic unit, which is a snap.
Has there been any talk about any other distributions letting this run?
How easy would it be to port?
Because I feel like that's where I'm really amazed.
Dude, we barely have it running on Ubuntu, let alone someone else having it.
But how standalone are they?
Maybe it can work on Debian.
They're all self-referenced.
It seems like it could probably work on Debian.
Right.
So they are SquashFS files.
So technically, a snap is a SquashFS file, which is mounted at a particular path in the
file system.
Okay.
That's kind of similar to what AppImage was doing.
Yeah.
And there's two parts to it.
There's the read-only part, which gives you the security that you know those files haven't
been modified.
Right.
And then there's a writable part.
So every application needs a writable area, whether it's config or data or state or whatever
it is.
Yeah, exactly.
And so a snap gives you both of those.
And potentially, that could be installed on other distributions.
Obviously, that's not our focus.
Right.
Right.
We're totally focused on running on Ubuntu.
I want to just, if we can – well, you know what?
I want to do the big takeaway.
But before then, I want Kitson to jump in.
And then I'll jump in.
Kitson, go ahead.
So with what you're describing and everything, it does sound really complex to actually install
the application as far as the behind-the-scenes stuff goes.
So does this mean that the snap packages, will they remove themselves cleanly from a
system and clean up their own depths and not configs?
Oh, my God, yes.
It's less complex, in fact.
So one of the nice things about snaps is when you upgrade them, if anything goes wrong,
they automatically roll back.
And the same goes for the kernel and the OS.
So in the event that you have –
Whoa, whoa.
The kernel's going to be a snap?
Yep.
The kernel's a snap.
Not a deb.
The OS is a snap.
Well, where's the line drawn?
No, in terms of desktop, is that true?
Or is that you just talking –
Oh, right.
Okay.
No.
If you think about the Raspberry Pi running –
Sure.
Or the phone.
Or the snappy – yeah, yeah.
Or the phone.
Then the kernel is a snap.
The OS is a snap.
On the desktop, right now, for 16.04, it's slightly blurry because you have a mixed mode.
You've got the Debian world where you can still install Debs, but you've also got the
ability to install snaps as well.
You've got these two dimensions, as we call them.
So in fact, this is where it gets – it fuzzes your brain a little bit.
If you install on a Raspberry Pi a snappy install – so it's snappy out of the box
– then you can have the classic dimension, which lets you install Debs, and conversely,
if you've installed a Debian-based distro, like a desktop, there is the snappy dimension.
So on either side, you can install both, but they're kind of kept separate.
So if this actually all gets pulled off and there are actual snaps available for things
I care about, like say Sublime Text and Dropbox and Telegram and Chrome, which could take
a year or so, but whatever.
Let's just say it takes a while.
What we are essentially now entering into the era of is an LTS that no longer holds
you back from having modern applications.
So where 14.04 – you could say the difficulty with 14.04 was it was always sort of tied
down to an older version of GTK, which at this point in time now feels a little limiting.
Certain things you just can't install, et cetera.
But with 16.04, if snap packages actually take off and there are snaps, I could install
an application like Corebird two years down the road now.
So let's take like a hypothetical example, like exactly what you're saying.
Let's take 16.04 and 16.04 ships with, I don't know, LibreOffice 5.1 or whatever
the latest version of LibreOffice is.
Because it's an LTS, the support lasts for years.
And then sometime during that support cycle, the Document Foundation release a new version
of LibreOffice, which is like the kick-ass version of LibreOffice that has –
High DPI, integrated support, online collaborative editing.
Oh yeah, boom, go.
All of that stuff.
Yes.
And more that you could not even think about.
I want it now.
Like we're talking AlphaGo levels of functionality.
So imagine they did that, right?
Typically we wouldn't put that back in the LTS release because we freeze the release
and we only do bug updates and security updates.
Imagine that there is a Snappy package in the store which is LibreOffice 6 or 7 or 8
or whatever, which is bundled with whatever libraries are required to make that thing
work on 16.04.
Now you could choose to stay on LibreOffice 5 or you could say I'll take LibreOffice
6 or 7 because my business needs it or because I like the bleeding edge or I just want to
try this stuff out and then undo it afterwards and roll it back afterwards.
Because it's a self-contained SquashFS file, when you uninstall it, it's all gone away,
including all the dependencies.
That is going to be.
And of course I know people listening are going to say, hey, there's a bunch of other
people doing this.
And I say, great.
Totally.
Which validates exactly what we're doing.
Clearly we're not doing the wrong thing.
And it's like a very common, it's like, okay, great now ship and let's see what works really
well.
I'm looking forward to that.
Yeah.
Wow.
So maybe is it possible that there is something I can play around with for like my 16.04 review
to talk about the process?
Is there something out there already or am I going to, is it going to be like, you know,
a down the road 16.04 kind of thing?
What to install?
I would love to install a snap package for the first time on Linux action show during
the 16.04 review.
That'd be awesome.
Yeah.
You probably could.
You probably could install it.
You're not going to be able to install because it's early days, but there would be a small
set that you could probably install fairly close to release, if not like soon before
release.
I think it's and then many more after.
Well another idea for the developers, because one of the most as a developer side, the most
annoying thing about Linux distribution is to get it in the repo with the snap packages.
It seems like you just write a YAML script file or, you know, not script, but a YAML
setup file and then you just submit it or build a package, submit it and you're done.
And you're in control of that.
So if you, if you want to push a new version to the store every day, if you want to push
a new version, like yeah, a new version comes out twice a day and then there's a security
update and then there's a bug fix cause you were having a bad day and you did a typo and
sure enough you can shove another one in the store and your users will get another.
And if you, and if you push an update that actually balks on client systems and it doesn't
start anymore, then the client systems will roll them back for you.
That's nice.
That is nice.
Wow.
I am so, uh, the next segment, I'm going to, it's good.
This actually sort of just builds on everything we just talked about in terms of 1604 I, I,
before we go too much further here, I got to just disclaimer sitting in front of me.
I do have an Ubuntu Mate 1510 machine, but that right there, that's mint over there.
That's arch upstairs is arch.
I mean, I'm still a multi distribution man.
I love, I still love arch, but I gotta say,
I have never been more excited about an Ubuntu release in, uh, I mean, I'm, I mean, I, I
maybe since 1204, I don't know.
I don't, I, this is genuinely looking like an incredible release.
And a part of that is because, I mean, the snapback is just sounding awesome, but what's
coming down the road, uh, I just had a conversation last night with Wimpy about some of the work
he's done on Ubuntu Mate that's going to ship in 1604 to, to sort of bridge that gap between
the traditional desktop environment and where the quote unquote modern Linux desktop is
going and how do you not fall behind and have to become your own island.
And that stuff is landing in 1604, so you take the snap packages, you take the long
term support, you take the really great derivatives now, um, and ZFS.
So anyways, uh, I'm going to, we're going to talk about, uh, the work that Wimpy did,
but first I want to talk about Linux Academy, our sponsor right here on the Unplugged program,
LinuxAcademy.com slash Unplugged.
In fact, live stream, would you all go there right now?
Go there right now so that way they can see in their logs during the Unplugged show.
They got a huge spike in traffic.
Let's just do it.
Let's see.
LinuxAcademy.com slash Unplugged.
Go there right now.
Learn more about the Linux Academy.
It's a platform to learn the technologies built on top of Linux and of course the Linux
fundamentals itself.
Either that's in a nugget, a deep dive, two minutes to 60 minutes long, or it's through
a comprehensive course with downloadables, great study guides, audio, video, live streams,
all of that, 2,300 and what, 32 courses.
Look at that.
Instructor help is available when you need it.
That's really nice too.
They have a great system.
You can go in there and you can tell it how much time you have available in a week.
I have time on a Tuesday.
I have time on a Thursday.
And then of course after the Linux action show, I'm going to do a little bit of study
and so I got some time on Sunday.
Well, guess what?
You tell it that, you plug that into the system, it automatically generates courseware for
you that matches that availability.
They also have other systems that are great for those of us that are time crunched and
when you want to go deep, so many great courses on that.
I think their scenario-based labs are pretty unique.
Those are really cool labs that put you in the middle of tasks common to everyday environments
so you really get a sense of working out in the field.
You can work in their advanced lab environments completing the task from beginning to end.
It's an entire scenario that you might find in the working environment.
It's the real deal.
It is nice and the thing about it is they have seven plus distributions to choose from
so it automatically adjusts the virtual machine and the courseware to match that distribution
and then they've got graded server exercises which I think is really cool.
They automatically grade your actions so you can see how well you did which is really nice
and they have systems in there.
If you've got a little bit of anxiety, not to mention the community is stacked full of
Jupyter Broadcasting members and they're adding content.
They're working on an Android app.
They've got an iOS app now.
They're updating all the time.
They've just moved to new offices with new staff.
They're expanding like crazy and they're doubling down on the content but what I think is really
nice is they're hiring dedicated staff to make sure the back catalogue of content, huh,
the back catalogue – that's harder to say – try saying that, Wes, the back catalogue
of content.
Try that.
I'm not sure you said bat catalogue.
Yeah.
Try saying the back catalogue of content.
Go ahead.
Try it.
Back catalogue of – it's hard.
Try it.
Back catalogue of content.
You had to slow down.
Try it.
Say it fast, Wes.
Say it fast.
Back catalogue of content.
Say it one more time.
Back catalogue of content.
That's really hard.
Damn you, Chris.
So they've got dedicated personnel now, dedicated – because they're dedicated, Wes.
I don't know if you knew this.
They're very dedicated.
They're dedicated to that back catalogue of content over at Linux Academy, which I
think is just a brilliant move.
Great in-depth resources.
Go check them out.
LinuxAcademy.com slash unplugged.
It's a great fit for you guys.
And they're a great sponsor.
Thank you, Linux Academy, for sponsoring the unplugged program, LinuxAcademy.com slash
unplugged.
Unplugged.
And keep that catalogue shining, Linux Academy.
Keep that catalogue shining.
So this is literally how the conversation goes last – I think it was last night because
Wimpy knows that we've been following the client-side decoration thing on Gnome and
the whole debate between client-side and server-side decoration implementations and all of that.
We've followed it since the beginning, really.
So we're talking back and forth and he says, well, tomorrow I'm going to write up this
post about this work I did in Ubuntu Mate.
And then about 30 minutes go by and he links me to the post that he'd written because
he's so excited about it.
He's had to get it out there, I think.
So I don't even want to take it from you, Wimpy.
I don't want to steal it.
But give us an update about some of the work that you did to implement client-side decorations
and header bar applications in Ubuntu Mate, which will be shipping in 16.04.
Can you tell us a little bit about some of that work you did and why?
I can.
So although I've done some things, I've not done anything particularly new.
So there's a hat tip here to Wolfgang Albrecht, who is the Mate developer who maintains the
Mate themes.
And he worked out a lot of this stuff.
And I borrowed from the work that he's done in order to do this.
But what this gives us is that the default themes in Ubuntu Mate now support client-side
decorated applications and those applications with header bars.
And although they have run in the past, they obviously execute, they didn't render correctly.
So they didn't have the shadowing effects, and the popovers didn't render correctly,
and a whole raft of just little annoyances.
And it's one of those things that when you're using the computer, and I'm using it day after
day, and you want some of those newer applications that are using client-side decorations and
header bar, my favorite at the moment is Corebird, which is hands down the best Twitter client
for desktop Linux.
I agree.
But looked like complete arse, and it wasn't, you know, Ubuntu Mate wasn't doing justice
to this application.
How do I install it right now?
Could I install it in the repo right now so I can show people?
Because I'm on the older version.
I'll tell you what, I'll log in.
Is it not easy?
Okay, if it's not easy, it's okay.
If it was in the software boutique, for example, I would just go ahead and do it.
Yeah, it's not easy because it's part of the artwork package, which also includes the Plymouth
themes, and the structure of the Plymouth stuff has changed in 16.04 and isn't backwards
compatible.
What is the version of GTK in 16.04?
I think it's 3.18, I think.
Yeah, I think that sounds right.
I think that's what I remember reading too.
So Wimpy, one of the first things when you implemented this, and by the way, it genuinely
looks good.
One of the things I like about the screenshot is you mixed in traditional title bar applications
and client-side decoration.
It's very consistent.
It took, I think, three or four comments before people are like, why would you do this?
This is an atrocity.
Client-side decoration should burn.
I looked back, Wimpy, we've had comments about this, about client-side decoration since 2013.
The drama doesn't seem to be going away.
Why would the bastion of the traditional desktop, where I go to avoid the atrocity that is Unity,
why would that implement client-side decoration?
Hang on.
I was just channeling.
I was just channeling.
Cool.
Peter, you've got something to say.
I can tell.
No, no, no.
Carry on.
Okay.
So it's very, very simple.
You can't hide from the fact that there are client-side decorated applications and applications
using header bars.
And there are not a huge number of them, but those numbers are growing.
And certainly some of the new applications that are coming along from the GNOME desktop
are compelling and use this design paradigm.
And to simply cut yourself off from being able to use those applications would be extremely
short-sighted for an LTS release and thinking about how those applications are going to
develop and probably become more prominent over the next five years.
So I wanted to get the support in so that people that are using Ubuntu MATE can have
their traditional applications and we like that stuff and that's great.
If there are one or two client-side decorated applications that are clearly best in class
and hands down, the best one that you want.
You don't want it to look rubbish and you want it to work properly and blend with the
rest of the desktop.
Yeah.
You don't want a penalty for choosing a different desktop environment.
No.
Yeah.
No.
So Michael Dominic, co-host Coderadio, probably the second mention in this episode, he switched
to Ubuntu recently when his MacBook died on him.
And he's been running 14.04 and one of the applications he tried to install was Corbird.
But it's not been going well for him.
So your insight about needing to have this well supported on an LTS I think is a good
one because he's not willing to run anything but an LTS.
So he's just sort of stuck in this limbo right now and it looks really well done.
Kitson, I wanted to give you a chance to jump in though because you had something you wanted
to mention.
Go ahead.
I think Kitson went to get some popcorn.
I think he's good.
He's good.
He's good.
Well, I did find it interesting that people were jumping on the bandwagon saying, by you
supporting client-side decorations here, you're going to help encourage more application development
like that.
Which I –
Well, the thing is that GNOME is kind of this unstoppable force.
So you can't just pretend that GNOME is not out there iterating on their desktop and their
applications every six months and that this is the design direction that they're going
in.
That's simply crazy.
Well, and I think also – and I don't know, it's not just that wimpy.
Isn't it also Mere and Weyland?
Well, to some extent and I'll cross that bridge in the future.
That's –
I guess if my understanding is correct though, GNOME's plan for supporting Weyland is essentially
– their continued effort is behind client-side decorated apps and that's sort of going
to be the future direction for Weyland-supported GNOME applications, am I – right?
So in order for Mate desktop to even begin down the path of Weyland or Mere support,
which your parent distribution is switching to, you have to go this route, don't you?
Eventually?
To some extent, yes.
And even if it's eventually, even if it's in another two years for the next LTS, isn't
it sensible just to do it now and learn that?
And this isn't stuff that other people haven't done before.
I think that Ubuntu have got this to some extent as well and some of the other desktop
environments.
But this was new to Ubuntu Mate and I was very pleased with the results because I've
had about a week of some spare time with my computer and we've got ahead of the schedule
for the 16.04 release, so we've got an extended period of being able to do some bug fixing
and refinements.
And there's been a few things about the themes and the look and feel that I've really never
been happy with, but there's always been something more important needed dealing with.
So actually having the time to sit down and sort of smooth some of those rough edges.
And then I look back at this, you know, several evenings work and I'd got one computer that
was running that last week's image.
And then this one I'd been working on, I thought, you know what, I really feel like we've nailed
this.
This is such an improvement because there's there's tweaks and improvements across the
theming across the board and with the Qt4 and Qt5 integration that is activated by default.
So those are facilities that exist within Qt4 and Qt5 that you have to hook into.
But all of that is baked into Ubuntu.
And just to sort of just sort of break that down, what you're saying is you've enabled
the support for Qt applications to sort of integrate and adopt the look of the GTK application.
So they should look at place on the Mate desktop.
Yeah.
And those applications that don't define a very specific style will look like a GTK application.
So the Qt apps will look like GTK applications where that's not the case is something like
the official telegram desktop client.
They've got a very specific style that they've kind of hard coded into the application.
They have linked to their own version of Qt and all that kind of stuff.
Yeah.
Yeah.
This is pretty cool.
And I think this combined with the software boutique will also be in 16.04, right?
Yeah.
And Corebird is in the software boutique.
Yeah.
That software, literally wimpy, I'm not kidding.
That software boutique is what kept me on the Apollo running 15.10.
Because when you gave me the PPA for that, all of the extra stuff that I was wanting
from the AUR was in the boutique and I just went through and installed it all in a few
minutes and then, OK.
Well, now I'm good.
I don't need to go anywhere.
But now, now I'm actually considering switching my Arch desktops over to Mate for a little
while.
Whoa.
Yeah.
I know.
We'll see where it goes.
Crikey.
I know.
You'll have to do a lot of heavy lifting for yourself because...
I know.
That is legitimately true.
And that's why I'm hoping Snap packages.
That's why I'm hoping Snap packages.
I want Snaps for everything and then I'm back on Ubuntu, everybody.
What's up?
Oh, we'll see.
I was actually...
Full circle.
I was targeting for Fedora as my next landing spot.
But you take this, you take the stuff that Wimpy is doing here, I just love it, and then
you combine that with Snap packages.
That's a hard, hard thing.
You know, it's going to drive me to...
Yeah, go ahead.
I was just going to say, just to sort of close out, I started by mentioning Wolfgang Albrecht
and then I've reused his work.
I've updated the default themes in Ubuntu Mate, so that's Ambient Mate and Radiant Mate.
But all of the official Mate themes also have all of this support built in.
So the full theme suite is all CSD header bar enabled.
So it's not just one theme, it's everything that comes.
It is...
The next couple of years are going to be really something.
There is really a lot of, you know...
And wouldn't it be great in this time if Copper on Fedora got even better, and the build service
had more and more vendors that were just using the build service, and Snap packages had more
and more people creating Snap packages, and the AUR continues to just be the best thing
out there ever.
Wouldn't that just...
I mean, wow!
It's so funny.
Depending on your perspective on where you sit, software is either the hardest thing
to ever do on Linux, and deploy and install, or it is about to be the coolest it has ever
been ever.
It just depends on your perspective at this point, and if you're a power user who might
be buying that Dell Sputnik because you're a developer, then to you, this is awesome.
And if you're a regular user, you just got to wait it out a little while, and all this
stuff will eventually get smoothed out.
That is pretty freaking cool.
Well, in mumble room, anything else before we wrap up on today's episode, because I'm
ready to go get myself some 16.04, I'm ready to go install some Ubuntu Mate on my arches.
Get some snaps!
It's going to be a mess up in this place.
And you know what?
Yeah.
Yeah, go ahead.
I wanted to say earlier before my system decided to do what it did.
When you went AFK, we need away from Mike.
You went AFM.
AFM.
Yeah.
AFM, bro.
Yeah.
Well, what happened was this push to talk stopped working on me temporarily, so I had
to log out and log back in.
I forgive you.
Go ahead.
But yeah, I think supporting the client-side decorations in Mate is extremely important
because it's part of the concept of just working.
And if an application doesn't just work, then people aren't going to use it.
And then the other part of that is if this is a new person coming to Linux, suddenly
that desktop is a desktop that doesn't work for them, and they're not going to recommend
it to anybody else.
So I think it is crucial that these kinds of standards are implemented and supported
correctly in other desktops.
Hmm.
Good point.
And you know what?
I just realized that if I switch away from GNOME 3 because I like Ubuntu Mate's implementation
of the desktop, I'm literally stepping away from the beast that is GNOME and then becoming
dependent on Wimpy's brand of implementation.
That is a scary...
That is a scary...
They all have all the power.
Oh, my goodness.
Oh, my goodness.
Well, Cotton Rotten, you wanted to mention something.
Go ahead.
Oh, about extensions.
Yeah.
Oh, yeah.
I just wrote a solution for a problem that I had and a lot of people had.
In general, there's a preview for it.
That's what it looks like without the extension.
And this is what it looks like with it.
Well, describe it for the audio audience, too.
It's a...
Essentially, what it does is take the GNOME extensions website and provides download buttons
for the actual extensions.
Oh, cool.
So you can install them directly.
I see.
Yeah.
So it's a little cut off on the live stream, but...
And then I guess that'd be...
So that way, when you reload, you can add them back really quickly, I guess?
Yeah.
You can add them back with the tweak tool and you can also pick which version you want
in case you don't have...
It's not detecting the right version, things like that.
Nice.
And it also supports Chromium and basically everything.
Oh, that's definitely nice.
Yeah, because you got to use a browser that has the Netscape plugin API in order to use
that.
Yeah.
So it just bypasses it completely.
I'm not sure it's the best way to go, but for you Arch users, oftentimes, almost all
those GNOME extensions are in the AUR, too, and then the package manager updates them.
While developing it, I talked to one of the GNOME developers and he said that in 3.22,
he's expecting to have GNOME software support for extensions.
Oh.
And as we wrap up, we should mention, too, that I think OMG Ubuntu has an article about
Canonical looking for a hand on getting their implementation of GNOME software up to schnuff
because the icons and stuff are broken.
So you guys, if you are interested in that, you can go check that out.
Hey, but you know what, Wes?
It's a great sound effect.
That brings us to the end of this week's episode of the Unplugged program, 1.36, in the bag,
in the can.
Man, Linux Fest is coming up so soon.
I'm excited.
Yeah.
At some point, we're going to have people in the studio.
I mean, what are we going to do with them?
I don't know.
Just join us for the shenanigans over at jblive.tv.
Go to jupitabroadcasting.com.
Get it converted to your local time zone and submit content to the show by going to linuxactionshow.reddit.com
and go to jupitabroadcasting.com.
Contact to send us an email, and we'll see you right back here next week.
We should give a total shout out to both Popeye and Wimpy, pro broadcasters.
If you ever watch a radio DJ live stream, you get kind of weirded out, at least I did.
The first couple of times I watched Adam Carolla or our local DJs here on Cairo do radio, the
music's playing, and the music's right about to hit, and as the music's hitting the intro,
they sit down and go, ah, welcome to blah, blah, blah, blah, and it's like, they were
just outside in the room three seconds ago, and then they sat down and just started talking
like they'd been there the whole time.
That's what Popeye and Wimpy did this week, because the time zone changed.
They're recording the Ubuntu podcast, and then they slip into the mumble room, and some
quick maneuvering on our part.
We bumped the client-side decorations at the end of the show, and we realized daylight
savings.
You're giving away our secrets.
I know, but it all worked out pretty well in the end, so thank you guys for making that
work.
Yes, thank you.
We appreciate it.
That was good fun.
You're welcome.
I had no idea what the hell you said before we arrived about Snappy.
You could have said it was just on the biggest pile of dog shit before I came in.
Ironically, no, I think if you listen back to the whole-
And then I come in and go, yeah, I completely agree.
I think if you listen back to the whole episode, it all flows really well, because it all sort
of went together, so that was pretty funny.
Firewatch is loading.
Here we go, Wes.
I'm excited.
Ooh, we get a little intro video.
All right, bring it.
Now the mouse cursor's in the video.
Panic Incorporated.
Hey, Panic, sure, okay, I know Panic.
You old hat, you.
Boulder, Colorado, 1975, Wes.
Get ready.
Uh, I don't see anything right now.
All I see is this, oh, okay, I'm supposed to do something.
Here we go.
She's about your age, late 20s, laughing with well-dressed professors and grad students
from a nearby CU, Boulder.
You, Henry, are out drinking with your pals.
You approach her.
Bold move, Chris.
You are drunk.
So what's your, you know, major?
You?
You're pretty.
Which one do you want to go with?
I like that one.
I like that one.
I do too, I like that one.
It's sincere.
Are you guys playing Leisure Suit, Larry?
No, we're playing Firewatch.
You're pretty, she says coolly.
You are not.
You are a future hangover.
Wow.
What?
You reply confused.
Someone should buy you a cheeseburger, she says.
You flake down a waiter, and one week later, you are Julia's boyfriend.
Nice move.
Thank you, sir.
Thank you.
All right, so now we're in an elevator, sort of an emo elevator with a really low frame
rate.
So I can click on objects.
I'm going to pick up this backpack.
Hey, look at that.
I got a backpack.
Wes.
Why are you so critical of this elevator?
Well, look at the frame rate.
I mean, I know this thing's just Intel Graphics and it's doing mirroring, but, oh, what do
we got here?
Okay.
Let's walk forward.
Huh.
The music is great.
So I'm in a parking garage.
Do they sell just the music?
Yes, they do, actually.
Oh, wow.
Great.
Yeah.
They do have that on Steam.
Well, I'm going to buy both, I guess.
It's pretty cool.
All right.
So this is a pretty hip little truck.
Let's see if I can get in.
Oh, I happen to have the keys.
It does seem to match your bag.
All right.
I'm in the truck now.
You date for over a year.
She drives you absolutely nuts.
It's great.
Aw, cute.
You move in.
You share an apartment near the school with a view of the mountains.
You two drink beer out on the deck.
Here, cheers, Wes.
You drink beer just about anywhere.
That's great.
Life is good.
Julia wants to get a dog.
Oh, do it.
Dogs are great.
There's a scruffy undersized beagle Julia's in love.
She wants to bring it home.
She wants to bring it with her to class.
She's also an intimidating but gentle.
There's also an intimidating but gentle German shepherd.
Nothing bad could happen to Julia while walking this dog.
It's badass.
Let's go with the G. I don't know.
What do you think?
I feel like if Julia got the dog that she can bring to class, it would be an expression
of your love out in public.
Yeah, true.
So then she would be able to brag about you, like, oh yes, my boyfriend got me this dog.
As long as she's the one feeding the dog.
And the thing is, beagles are barkers.
They sure are.
They're going to bark.
So I'm going to say beagle.
What do you say?
All right, do it.
We name him Bucket.
Bucket's a good dog, and a week later, you've totally forgotten about the other one.
Julia loves him.
You love him too.
Does it feel like they're manipulating us?
Yeah.
1979, you talk out on the deck, it's summer, 9.30 PM, and the heat still radiates off the
high desert.
What do you think about kids?
She asks.
Oh boy, Wes.
Getting serious.
Kids?
They're not very smart, or good at much.
I'm saying if you and I had some, a couple of little idiots.
I think we should just say yes.
All right, do it.
I mean, when this question comes up, she's been thinking about that for a long time.
You've got to be careful how you answer this one, Wes.
Heads up.
You're a man with experience.
In that case, we should probably get married.
Yeah?
I would like that, you say.
These kids are going to be screwed up enough.
It's probably the best that their parents are hitched.
You say she's absolutely right.
This game moves fast.
Yeah, man.
It's a modern game.
Now you're getting in your super cool... Wait, no, we just got out of our super cool truck.
I missed the truck.
Looks like we're out for a hike.
Let's go take a little walksies.
Thorough fire trial head.
We're all here.
Don't forget to check in.
Warning, thoroughfare trail is not recommended for the inexperienced hikers.
Don't bring fireworks.
Huh.
This is a pretty gorgeous game, even with the graphics settings turned down to work
on the Intel graphics.
Yeah.
How do you check in, Wes?
Interesting.
Boy, look at this.
This is something I think I'm going to play later after the show.
This is where I miss the Bonobo right now.
Bonobo will be able to chew on this.
Yeah.
This is part of cool... I didn't check in, so if you see where I'm supposed to check
in, you let me know.
I sure will.
Uh-oh.
We got a little crossfade happening.
Stand by one.
Oh, she is.
1980.
It's Thursday night, and Julia is four hours late.
She doesn't call.
You're worried and getting angrier by the minute.
Whoa.
We got to temper, don't we, Chris?
She walks in after you've gone to bed.
But not really.
I'm up.
Just pretending to be asleep.
She's not quite drunk, but she's clearly been having a fun time.
You fight when she gets between the sheets.
You fight when she gets between the sheets.
Do you get mad, or do you ignore her?
You want to press her?
For convenience of time, I say we press her.
Yes, press her.
Let's get mad.
I mean, Pacific Northwest-wise, we should probably pick the acid.
You call her an inconsiderate asshole.
I don't think I would have done that.
No.
She tells you to eff off yourself and not to be such a baby.
You call her selfish.
She knows you mean it, and it hurts her feelings.
Ouch.
That was the wrong call.
This is an emotional game.
I did not mean to do that.
No.
Julie still likes to draw.
She draws plants from her research.
She draws all the places you go.
She draws you.
You pose and flex like a he-man.
You frolic like Victoria's Secret Model.
Let's go with the Secret Model thing.
Yeah, definitely.
It would be funny.
She was right.
You are very pretty.
Okay.
Now we're hiking again.
It's like we're thinking of this while we're hiking.
It's red out.
You see how...
Yeah.
No instruction of where I'm supposed to go.
No clues.
No mini-map.
Now this is making me want to just wander around.
No health bar.
No hit points.
No weapon.
Nothing.
No indication of where I'm supposed to be going.
I'm just a dude walking out in the forest right now.
This kind of feels like Up in the Corner.
That's all you've ever been, Chris.
Although I have better frame rate in real life.
Oh, what's this say?
Two forks.
Okay.
There we go.
We got to look at it.
Let's go.
Can I jump?
Space bar to climb over obstacles.
Space bar.
There we go.
Perfect.
Wow.
I did quite the jump there.
Oh, look at that sunshine, Wes.
Look at that.
Beautiful.
1982.
During the summers, you and Julia enjoy walking Bucket at night.
Bucket.
There's a festival in town that brings folks from faraway places.
One of them tries to mug you with a knife.
Bucket gets kicked.
Oh, that dog.
Oh, that effing dog.
Julia yells.
She gets flustered and has trouble speaking when she gets stressed.
You confront the attacker.
What do we do?
Do we scare him away or beat him in?
I think we're a gentleman.
We scare him away.
We scare him away.
Okay.
Reach into your pocket like you've got a gun and threaten to kill him.
You manage to scare off all three of them.
Wow.
Whoa.
You scare all three of you and he runs away.
This is moving fast.
Julia has to take a different path from that day forward.
You say it's okay.
You don't want to go that way either.
From then on, you walk by the river.
The river's pretty anyway.
1984.
Plans to have kids have got waylaid by work.
Julia gets offered a job at Yale.
Yale is in Connecticut, 2,000 miles away.
It's a great job, associate department chair.
She wants to move.
You absolutely do not convince her not to take the job or agree if she commutes back
and forth.
Ouch.
Neither of those are very good options.
Yeah.
Yeah.
Ooh, Chris, this is hitting hard.
I'm going to say agree if she commutes.
I guess so.
If she's angry at us for that, she has every right to be.
You ask if she'll commute back and forth.
You don't want to move to Connecticut.
She says that'll be hard, but she'll do it for you.
Dang.
Thanks.
You tell her not to pass it up if she wants.
She agrees.
She flies back to Boulder three times each semester.
1985.
Julia sent home from Yale on paid leave after having an episode.
She lost it on college for borrowing books that were on a colleague that were important
to her research.
She didn't remember she'd happily loaned them to him just two days prior.
Jeez.
She was found crying in the stairwell.
You say that maybe you guys should talk to someone about it.
That's one option.
You make macaroni and drink wine and try to forget about it.
What do you think?
I say talk to somebody.
Yeah.
Let's do that.
Because I'm also worried about that time she came home late.
Yeah.
After seeing multiple doctors and having many tests, they are worried that Julia might be
suffering from early onset dementia.
She's 41.
You decide to keep it a secret for now, for the both of you.
Now we're camping again.
There you go, Wes.
Here's our journal.
Maybe we should leave it right here and let the viewer at home fill in the rest.
I'm interested though.
I'm hooked.
Whoa.
That's where we should leave it.
Right there.
Right there.
Perfect.
There you go.
