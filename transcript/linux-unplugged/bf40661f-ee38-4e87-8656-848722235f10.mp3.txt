So we've been watching these videos on the pre-show
before we actually started recording.
The pre-pre-show.
And I realized I just totally wrecked my YouTube algorithm.
There's been this phenomenon where
it seems like YouTube has certain types of videos
they really want me to watch and other types of videos
that they just completely forget.
So the other day on YouTube TV at home,
my wife brought up one of these like ASMR, rainy cabin
background kind of music videos.
Now when we're going through YouTube,
we have like three rows of these videos.
Watch it one time, and there's three rows of these.
Have you experienced this?
Yes, I have.
You almost need just a separate throwaway YouTube account just
for browsing random interests and then
the one you carefully prune.
Isn't the algorithm supposed to do this for us?
Yeah, I feel like there's some big YouTube agenda, Wes.
We've got to fight back against the machine.
Big ASMR.
Hello, friends, and welcome to episode 379
of your weekly Linux talk show.
This episode is brought to you by Cloud Guru, the leader
in hands-on learning.
The only way to learn a new skill is by doing.
That's why ACG provides hands-on labs, cloud
servers, and much more.
Get your hands cloudy at acloudguru.com.
My name is Chris.
My name is Wes.
And this is episode 379 of The People's Podcast, really.
Let's talk about what this really is.
This is a podcast for The People,
and it's a special edition because right now we're
joined by very special people.
And let's start with Mr. Drew.
Welcome back to the show, Drew.
Oh my god, it's been so long.
I missed you guys.
I know.
We missed you.
Do you remember how to podcast?
I think so.
I guess we'll find out.
I mean, yeah, this is the big test right now, live.
We're doing this on a Sunday, which is unusual.
Feels wrong.
And Drew brought the vodka.
So now that Drew's back, we're drinking.
Drinking with Drew.
And we're recording this a little bit early.
We normally do it on a Tuesday, but we're
doing it on Sunday this week, which
means something else special.
There's a bunch of really great people in our virtual lug
that are normally here for Sunday for Luplug,
but now they're here for the show.
Time appropriate greetings, Mumble Room.
Hello.
Hello.
Hello.
Hello.
Hello.
Hello.
Hello.
I mean, it's a tighter crowd.
I don't think we have nearly as many people watching live,
but we have a handful.
But they're vocal.
And we have a great Mumble Room turnout,
and some familiar friends and some new friends.
Grim, welcome on to Linux Unplugged.
I'm going to give away your secret.
Grim is the Pigeon developer.
You all remember Pigeon, right?
Some of us still use Pigeon.
Sure do.
Love it.
And Grim's joining us for the first time.
Hey, Grim, welcome back to the, or welcome to Linux Unplugged.
Hi, thanks for having me.
I finally was able to make one of these times,
just randomly sell your tweets.
I was like, well, might as well show up.
I'm glad you did.
I almost said welcome back, because you and I
have had conversations outside the show.
But this is the first time you've been on the show.
So I'm glad to have you here.
And welcome to a weird Sunday edition.
And then also, West Tex Jeff, who
has been following the shows for a million years,
he and I have shook hands dozens of times.
I mean, we've met up in Texas several times.
He was at Linux Academy headquarters once,
and we got to show him around a little bit.
He's finally joining us on the Mumble Room
for the first time, too.
Welcome aboard.
Hey, can you hear me?
I've never tried this before.
It works, man.
You got it.
You got it going.
Awesome.
I'm glad you're here.
I missed you, man.
I can't wait till we start festing again.
I know.
Amen.
I got one of those automatic, like you were doing this
a year ago photos, or it was like a little more
than a year ago, and it was Wes and I in Boston.
Those were the days.
I was like, oh, yeah, that used to be a thing we did.
It'll happen again.
It will happen again.
But in the meantime, a lot of people
are shifting virtual for those events.
And Arch is one of them, ArchConf 2020.
And it's kind of a special one because this year marks
18 years since the first official release of Arch Linux.
Wow, that is a long time.
I know.
And they organized this whole event using open source tools.
We'll link to a bunch of their talks.
They released them online.
But I went through and watched a few of them,
and they talk about how they loosely organized on IRC.
And then they used Etherpad, which
is that nice collaboration tool.
Indeed.
Yeah, they used Etherpad for a lot
of the written organization.
And then they held organization meetings
over Jitsi or Mumble, which is just so cool.
Those are all great tools.
Yeah, those are all great tools to build an event like this.
And it actually looks like ArchConf 2020
went pretty good for them.
And they had multiple streams, and they got lots of questions
in.
But you know me, Wes.
I winged us a couple of clips.
Oh, you.
I don't even tell you about this.
Sneaky clipper.
I know.
I snuck these in because I just thought it'd be fun
to cover a couple things.
So I got three clips, really quick ones.
The first one here is from GregKH,
and it's just short and sweet.
GregKH is a happy, well, obviously Linus' number two
kernel maintainer.
He's a happy Arch Linux user, and so he
prerecorded a welcome message to the conference.
Hi.
This is Greg Crow Hartman, and welcome to ArchConf 2020.
As a longtime Arch Linux user, I'm
really happy to see this conference happen,
even when we're all stuck at home.
Thanks to all the Arch developers
for maintaining such a great system
that I rely on every day.
Enjoy the conference.
I don't know why, but it just tickles me
that Greg's an Arch user.
Right.
This is so great.
And then Alan McRae, he did an early history of Arch talk.
We'll have the full talk link because there's
a lot of details, including some of the minor developments,
some of the more significant political developments,
like when Pac-Man came along, too, technical developments.
But I captured a bit for us.
So in the beginning, there was crux, and it was good.
Highlights being it's simple package build scripts,
simple configuration, utilities, but there
was no dependency tracking.
So the founder of Arch Linux, Judd, wrote Pac-Man,
and it essentially spawned a distribution.
So beginning in 2002, Pac-Man 1.1 was released,
and then Arch Linux 0.1, codenamed Homer,
was released not far after.
Good quote from the release notes
is the bad news is that you don't get
a pretty interactive installer, so some things have not
changed.
The big selling points at the time
were the I-686 optimization, when
most other distributions were using I-386.
And install once, continuously update,
never have to reinstall policy.
And it being simple.
Now, simple was defined in terms of the packaging
and the tools for administrating the distribution,
not in terms of being simple to use, necessarily.
Alan McRae is the developer, well, of a lot of Arch,
actually.
He maintains the tool chain that you
use to build Arch, like binutils, the GCC packages,
GLibc, Linux API headers, all of its dependencies.
I've never used any of those.
No, no, never.
Package config, you know, those kinds of things make.
So he's got an interesting perspective.
We'll have a link to the entire video in there.
But then further in, there is discussion
about the future of Arch.
They talk about some of the culture changes
that they think need to happen, and then they
talk about some of the tech changes
that they think probably should happen.
And one that caught my attention is faster package turnaround
using new automated technology.
Let's talk about actual future improvements.
One major thing I want to talk about,
and this is also the first bullet point,
is accelerate delayed package updates.
What I mean by that is timely package updates
are our core value.
We are a rolling distro, and users
are expect that our packages are always up to date
and we are rolling fast.
This is really our core value.
Now, some of you may ask why we need to accelerate
and what I mean by that.
The only thing I mean by that is that right now we
don't really have a central way of detecting upstream updates.
So basically, it's a per package maintainer effort
to somehow keep track of upstream sources.
In some areas, it works great.
In some areas, it actually doesn't work out that well.
And sometimes it takes weeks or months and multiple releases
until a user flags a package as out of date and on Arch web.
And then we finally roll an update
because a package maintainer was not really aware maybe of that.
And I don't think this is a people problem,
so we should not start yelling at people
while you're probably keeping track.
But I think this is more like a tooling problem.
We should solve it with technology.
So I've been also lately playing around and toying
with something we call ourselves Sandcrawler.
So this is also something I will raise in the future,
having something technologically integrated
in Arch web which is able to automatically flag
packages as out of date.
And this will also accelerate at the end delayed package
updates, one of our core responsibilities.
Core responsibility, core value, you hear that over and over
again there.
I think that's interesting.
And then also that they want to address this as a technology
problem, not a people problem.
Yeah, I like that approach.
If we can just automate this, that
means there won't be continued people failures.
And I think all of us know that oftentimes these projects
update a lot, or maybe they don't update for years
and then suddenly update.
And if you maintain more than a handful of packages,
that's a lot to keep up with.
There's also talks on Linux memory management at scale,
GamerOS, which is an Arch Linux based gaming OS.
There is a talk about matrix and how to host your matrix
server on Arch.
That's pretty cool.
Packaging Rust applications, rolling your own security team
for fun and profit, not at all it says.
There's a lot of good ones on here.
Oh, one that I'm absolutely going to go back and watch
that I missed is the Arch Linux team Q&A.
I'm really impressed.
They pulled off a really good live event
and the videos got turned around pretty dang quick.
Yeah, I'm impressed with that.
Especially if you haven't done this before,
there's a lot of things that can go wrong.
And in this case, a lot of things that went right.
When we talk about firmwares, a lot of times
you'll hear people talking about the effort
to free the Intel firmware from the management engine
and a lot of the stuff around Intel CPUs.
But the conversation hasn't really covered the AMD CPU side
too much.
And not only are the Ryzen chips just totally dominating
performance, but they seem to be of a lot of interest
to Linux users.
So Ferotics has an article about Project X, which apparently
is someone at Google, Rob Minich?
Ron Minich?
Minich, yeah, who has been one of the original developers
of Core Boot and Linux BIOS in the past
has engaged in this Project X, which
is trying to provide a pure open source support
environment on AMD's Zen platforms.
Yeah, Project X is about X-sizing.
Hey, that's the X. X-sizing binary blobs
from the x86 part of Zen CPUs.
This open source AMD Zen support is
being worked on both for Core Boot and the downstream OrBoot.
That's written in Rust.
I'm sorry, what did you say?
Because I didn't catch that, Wes.
Did you say it was written in Rust?
It's not really all just about that, though.
At OSFC 2020, there was some talks
going on about the open source AMD support,
and that's where we got some of this information.
AMD's system management architect
also said that they'll be talking
about the company's work on their open source BMC firmware
support for their platforms as well.
Yeah, that's the baseboard management controller.
So you know, folks like Facebook and others
using open BMC to run their big fancy racks and servers.
And we have a link to that.
It takes place.
Oh, it hasn't taken place yet.
No, open source firmware conference
coming up at the start of December 1st through the 3rd,
2020.
So we will be getting more information, you're telling me?
Indeed.
Oh, well, you know what I'm going to do?
I'm going to keep an ear ball out for information
that we can clip.
If there's something in there about, I mean, whoa.
I mean, whoa.
Think about it here just for a hot second.
A future where you have a totally, totally open Ryzen
system with drivers built into your kernel.
Right?
I mean, when you think about it too,
there was so long where there just
didn't seem like much hope going on in the core boot area.
And recently, there's been a lot more momentum.
So I'm excited to see this, and I'm
really excited to learn more once these talks are out.
Linode.com slash unplugged, go there to get a $100 60-day
credit towards a new account.
Linode is our server provider.
That's where we deploy our systems.
Whenever we have something from back-end infrastructure
to a tool to something we want to try out for the show,
we're always using Linode.
I just recently was experimenting
with setting up a new VPN server for myself
because I'm messing around with bonding LTE connections.
I was actually talking to Wes about this too.
And there's a really, really comprehensive set
of documentation I discovered on Linode.
And they are completely OK with giving me information
on how to replace the image on a Linode
with my own custom distribution.
I followed their official documentation
on how to re-flash a Linode to my own custom Linux
OS for this.
Isn't that something?
I think it really shows they've been around too.
They didn't just make the top 10 features you
need to be a hosting provider.
They've been in the game a long time,
and they know what actual power tools users like you
might need.
They're Linux users themselves.
And so unlike entry-level hosting services
that will just lock you into this box,
Linode gives you a full back end, access
to anything you want to customize, anything
you need to control your server.
And they also give you that same level of access to things like
DNS.
They have S3-compatible object storage.
They have node balancers.
They started, like Wes was saying, a long time ago,
in 2003, as one of the first companies in cloud computing.
I've followed them for a long time.
They often go to a lot of the same events that I go to.
So I've seen them at Linux Fest.
And they've been a sponsor of a lot of open source projects.
So of course, I've known about them.
But about two years ago, I started
using them very seriously.
And really, just as of a few months ago,
I've gone all in for my business, too,
because I really trust what Linode does here.
They're an independently owned company.
They've been around for a really long time,
and they're not going anywhere.
They've got 11 data centers worldwide.
It's really easy to get started.
It's only $5 a month.
But you could play with a lot more, like the object storage.
Maybe you want to make a super fast website for yourself,
a resume or portfolio, or maybe just a blog.
$5 a month gets you started.
But when you go to linode.com slash unplugged,
you get a $100 credit.
You could really experiment.
You could really test it and really see
what I'm talking about.
Also, keep an eye out for Linode's new Linux security
series with HackerSploit.
All the episodes are available on demand.
And they go into detail on a lot of the basics
around Linux security you need to know for either on-premises
hosting or for a Linode system.
It's like just good fundamentals.
And it's something they worked with.
HackerSploit is an individual who's well-known on YouTube.
He covers a lot of, his name is Alexis,
he covers a lot of security stuff.
And he's done an SSH security essentials, securing Apache,
securing NGINX, a complete guide to UFW,
how to work with sudo, and maybe some
of the more advanced things you can do with sudo.
He's done guides for all of that.
And you can check that out on Linode's blog.
That's something worth just checking out,
because it's good to know just how to do this stuff
and implement it correctly.
But you can learn all of this with $100 credit.
This is a great opportunity to learn, too.
Linode.com slash unplugged.
Go there, get that $100 60-day credit,
and you support the show.
Linode.com slash unplugged.
Do you remember when we talked about Linux
mint breaking the Chromium snap?
Just the whole experience was real bad for the end user.
Somehow that was actually last June, June 30th or so,
episode 360 of this year program.
Explain the logic to me here, Drew, because to me,
it seems like this is something they should have fixed
before they broke it in the first place.
And I know I could sit here and I could give them accolades
for building their own version of Chromium and packaging it
up and bundling in the IPTV player.
But from where I sit, it seems like this
should have been done, maybe the old saying,
you fix the barn door before the horses come home and not after.
You're right.
I was not on board with their decision
to just completely rip out snaps and make it devilishly hard
to get them running again if you needed stuff that was snapped.
I thought it was a bad decision.
I still think it was a bad decision.
And this is a little bit too little too late.
I do like what the mint team does in general,
but that was not their finest hour.
Now, I know you're a big mint user there, Wes.
I know you use it on all your system.
You've used it for years.
I run it right now on your laptop.
You know, actually, I have used it a fair amount.
I think it's still running on at least one of my family's
computers.
And most recently, actually since June
and since we've played around a little bit with the 20 release,
I was using it as a gaming PC just to try things out.
Really?
Yeah.
So I have been using it.
I did find it interesting they have had to allocate some
resources here.
So they weren't doing no work.
They write that they've set up a new Ryzen 9 3900 CPU setup,
128 gigs of RAM and NVMe disks just to get
the build times under an hour.
So not trivial, and they do thank folks for their patience.
So I think they acknowledged, too,
that it has probably been longer than anyone would like.
Yeah, OK.
I mean, what's all this hoopla around this IPTV player
where people are saying they're wasting resources on that, too?
What's the deal with that?
I think it's just a little odd.
Folks thought, you know, Clem taking time out
to work on this IPTV player and sort of talk about it
in a casual way where it's not clear if it's really
going to get continued or if it'll be included in Mint.
No problems with it existing, but it
felt like a weird part to be part of the monthly Mint
update.
Don't let this happen to you.
I think you just became our Mint correspondent,
because you're a big Mint user.
I shouldn't poke fun, because I know people that use it,
and they love it.
And I actually really respect what Clem and his team do.
So I need to make that disclosure.
But sometimes I just got to have a little fun at it,
because this was a problem that didn't need to happen.
You could have even punted this action for one release
while you worked on this and then rolled in your solution
to the next release and just eat the snapped version
for one release.
But it felt like emotions got involved here.
It was a reaction without much planning.
But I have to say, I'm not receiving the feedback.
Clem and his team are receiving.
Maybe their users have messaged to him very clearly
they don't want snaps.
It's not outside the realm of possibility.
We had that chat with the Uno platform last week,
and they released this tool to take Windows applications
and build native versions for Linux.
And the number one feedback they got from the Linux community
was, don't use Snap.
Isn't that something?
And so it is possible that the Mint team was just
receiving a lot of feedback saying, don't use Snap.
Snap, snap back.
And this is an interesting realization
of what we think is just a squeaky wheel minority,
but it turns out to have real world ramifications.
So you've got this larger and larger group
of probably more sophisticated Linux users
that don't like Snap packages for various reasons.
And they seem to advocate and try
to persuade companies that are developing and deploying
snaps to use other packaging formats.
And you could see how a company like Adobe comes along
and say they want to snap up Photoshop,
and they release Photoshop, and they get several thousand
people telling them, hey, idiots, don't use this.
Use App Image.
Don't use this.
Use Flatpak.
Each company is going to receive that feedback differently,
and they're going to process that differently.
And do they have developers on staff there,
or folks in management who understand the Linux ecosystem?
Yeah, maybe.
I have to be frank with you is I don't see any indication
from Canonical that they recognize that this is an issue
and that they're even beginning to address it.
I think they have written it off as, well,
the people that always told us Launchpad
needs to be open source, the people that always were giving
us a hard time for Upstart, the people who hated Unity,
now look at all these people using Unity.
I think this, over the years, this mentality
has developed where they just have created a thick skin,
and they don't listen to all these detractors.
Well, I think they also don't necessarily feel
like they're designing Snap.
They make it Snap for the Linux desktop users who don't know
what package managers are.
So there's sort of like just two different camps not
talking to each other.
Right.
The issue is I can tell you that I
have been told in confidence, and there's
other instances which I can point to publicly,
but I have been told more so in confidence
that it is a item of feedback that the companies are
struggling with.
Like, you know how this works.
For anybody that works in a business that
puts anything out publicly, negative feedback
gets a lot of attention.
It gets in the Slack thread, and people are discussing it,
and then the boss sees it, and he's
got to get somebody on it to address it.
It becomes this snowball.
And I am telling you, I have heard
from multiple developers in confidence,
and I have heard from some developers on the record
that this is an issue for them when they package
their application as Snaps.
And the problem is that Snaps are
very attractive from a corporate standpoint.
You're a business, and you can have a relationship
with Canonical.
You can do a business-to-business
relationship, and you can distribute your application
and package it in a single outlet that
is very simple to install on almost all
the major distributions out there.
It's extremely attractive from a developer standpoint,
and I actually can appreciate the value
that Canonical brings to this process.
But the people who are Flatpacker app
images advocates, they couldn't care less
about the business-to-business relationship.
They could give two craps about it.
And it really has shown me with these conversations
that I've had, and with the conversation we had last week
with the UNO platform, and what we were just
talking about with Mint, it seems that using Snaps
has become a liability.
And I don't think Canonical is addressing it.
I don't think they are fully appreciating the scope of it.
And the worst part is, I think they're probably
about eight months too late in addressing it,
and the momentum is there now.
And there's really nothing they can do about it at this point.
And it is unfortunate, because what I see developing here,
and I don't have any pleasure in saying this,
because I'm personal friends with Poppy and Wimpy,
and I don't like saying this, but I
have to be honest with you.
What I see developing here is a Betamax situation,
where there is a lot of technological advantages
to a Snap.
There's a lot of business advantages to a Snap.
There's a distribution advantage to a Snap.
There's a lot of upsides, but it still
isn't the one that wins out.
And I think Canonical is too late to address it.
And I wish I could share with you some of the stories
that I have heard via email from developers.
So you're just going to have to take my word for it.
I have no motivation to say this otherwise,
and I don't feel like it's being addressed.
And here we see Mint now, and I've come on the air,
and I've said, they're wrong for doing it this way.
But for all I know, because I haven't heard from that team,
they don't communicate with the media.
For all I know, they have gotten pushback from their user base,
and that's why they've taken this action.
But either way, they seem to be on the way
of fixing and addressing it.
But like you said, I think it's too little too late.
I think you're right in a lot of ways.
But one thing that I really see is a parallel to the way
that Pulse Audio rolled out.
It wasn't ready, and people started shipping it.
In the same vein, Snap I still don't think is quite ready.
And Ubuntu is shipping it by default,
and even pushing people towards using it for things
like Chromium and other software that sometimes they
can only get as a Snap.
And the unfortunate thing here is
it's going to be the same thing that we saw with Pulse Audio,
where people were like, oh, I hate this.
It doesn't work right.
And even though it's 10 years later,
and Pulse Audio works great, people still
have that same bitter taste from when they first used it,
and it wasn't perfect.
So even if Ubuntu and Canonical fixes it tomorrow,
you're right, it's eight months too late.
They pushed it too soon, and we're never
going to quite get that feeling out where people just
don't like it because they had a bad experience before.
And there's also the central app store aspect
that seems to be unappealing.
Yeah, I mean, there's lots of stuff
to talk about there about why it's not perfect,
and it could have been so good.
They could have taken a few cues from Flatpak.
They could have done it their way
and really tweaked out the bugs to where fonts worked correctly,
where they don't take forever to load, all of that
before actually starting pushing it into the operating system
itself.
But yeah, that's fair.
I can see part of what you're saying there.
I don't know if the font stuff and the theme stuff,
I mean, it definitely registers for us,
but in average user deployments, corporate deployments,
educational deployments, I think they're
pretty used to applications just looking like crap.
I don't think that was an issue.
I think it just came down to two problems,
and they're on the way to fix one of them.
Problem number one is load time.
Problem number two is the centralized app store,
and that's where AppImage and Flatpak are
considered superior by some.
I will note it doesn't seem to be by developers generally.
It is by end users who prefer to consume the application
in the way they like and deploy it,
or it is projects who want to host their own repositories,
like elementary OS.
But application start time may be
on the path to getting fixed.
My understanding is that future snaps
may be using LZO compression, which
means the snap file sizes themselves will be larger,
but the opening time and the CPU load required
to open those snaps will be reduced.
Faster to actually get the application up into memory
and start it.
Yeah, so that could be good, but it
would have been, I don't know, it's
a hard technical challenge, so easy for me to say,
but would have been good, like I was saying,
eight, nine months ago at the beginning of 2020,
not towards the end of 2020.
And I worry that the reputational damage is done,
not in terms of what businesses or developers will perceive,
like companies like Adobe who may be someday
looking to actually launch applications on Linux.
I don't think these issues are going to surface for them.
The way it will surface for them,
based on the feedback in the conversations I've been having,
is once they launch, they get this tidal wave
of negative feedback about how they've chosen to package.
And it kind of sucks for Canonical,
because in some cases, Canonical nurse
maids these companies in the Linux community.
They're playing the role of host,
and they're kind of introducing them
on how to target for Linux, what to say, how to message,
how to work with Linux.
Please, help here, we'll help you make these apps for Linux.
And then you just get bit when you step in the pool.
Yeah, and then they release, and everybody's like, no, no, no,
no, no, no, we don't like snaps.
And then that company is forced to kind of distance themselves
from that, and Canonical has invested all this time
in getting the application actually over to Linux
with them.
And so it's kind of a lose-lose situation for both Canonical
and for the developer.
And I just feel like there has to be something
that could be done there, or it's just simply not
going to get addressed.
And it is what it is.
But it is something that I've been watching,
and kind of as the year develops,
getting a little concerned about because I
think it has a lot of nice advantages,
especially on the server side, and especially for developers.
But for that, we'll just have to wait
and see how things develop, you know, moving right along.
So I wanted to get everyone's take on Starlink.
I'm getting kind of excited about it here
because it is in open beta in the Pacific Northwest.
If you're in Washington state and a few other areas
around us, you can actually get in on the Starlink beta.
And when technologies like this start to roll around,
one of the first things I wonder about
is, what's the Linux support story going to be?
I'm sure Starlink runs this whole thing on Linux, right?
I'm like, I'm sure SpaceX is deploying these things running
Linux.
Satellites are running Linux.
The systems that are launching it are running Linux.
Seems like a darn good bet, at least from what we know.
Yeah.
But the question is, where will we
be in terms of support for Linux as, like, end users
on the Starlink network?
And it looks like some of the early data from the beta
testers is pretty positive.
I mean, you've got to remember, this is beta,
so it's not even final grade production here.
But people are getting pretty good ping times
in the 20s to 40s milliseconds.
They're getting pretty good bandwidth, much better
than you'd get on an average cellular connection.
In some cases, 160 megabits.
In other cases, more like 40 megabits.
It all kind of depends, it seems.
It's getting really close.
And I just kind of wanted to take the temperature
of the room and ask people what they think about.
Because I'm obviously looking forward to it as a way
to kind of expand my remote connectivity.
Yeah, you're only a little excited.
But I think remote users, like mobile users like myself,
are going to be one of the later users that they get to.
Colonel, I know you and I have talked about this a little bit
during the Leplug.
What are your current thoughts on it?
I think it's going to be interesting to see
what happens as they roll it out of beta.
Because I know for certain types of cellular technologies,
when they initially set it up as a beta network,
everything worked great.
Once they got the load on the network,
things were still working, but not as good as in beta.
So I think it'll be interesting to see
what happens when it becomes a nationwide,
as well as when it becomes a more commonplace thing
for people to be using.
And how they handle that load, as well as
what are the privacy implications of this.
Because it is a SAT network.
So unlike a traditional SAT network,
which broadcasts to a large area on the ground,
my understanding with Starlink is
that it's a lot of small satellites broadcasting
to smaller areas.
So is there any kind of tracking involved,
just like there is with cell phones?
Are they going to do any kind of blocks like some home ISPs do?
It's also going to be interesting to see,
especially because a lot of people
are going to be looking at this for RV usage, what kind
of power usage does the receiver use?
And so I think there's a lot of questions
that we won't really know until it either gets out
of beta or becomes much more widely adopted.
I think that the biggest insights we've gotten so far
is an article over on Ars Technica.
They worked with an individual known as wandering coder.
So he's already speaking to me.
Interesting.
And he tested it out in a few locations,
including some heavily covered tree areas and some that
were more open to the sky.
And at one point, he got 120 megabits download and an upload
of 12 megabits with an average latency of 37 milliseconds.
That's fantastic for satellite internet.
That is absolutely fantastic.
And he did move his item around for these tests.
The beta for Starlink right now strongly
encourages you to only use it at the registered location.
So that's why I say I think maybe it'll
be a little bit until individuals like myself
are using it on their buses.
Right.
These are lower satellites that are constantly
moving and switching.
So if you already have to keep track of that
and you're driving your RV around,
that's a lot of moving parts.
But here's a little comparison.
So in some of the tests that they talked about here
on Ars Technica, they were getting like an average
when you look at it, maybe like a 42 milliseconds,
let's say, latency.
42 milliseconds latency is not as good
as you're going to get on a nice high speed home broadband
connection.
But compared to VistaStat or VistaStat or HughesNet,
you're looking at like a 600 millisecond difference.
HughesNet is in the same testing area,
has a latency of 728 millisecond.
And VistaStat has 643 milliseconds.
I think that's the biggest win.
I mean, Starlink may also be faster in terms of throughput,
but you can get some decent throughput
if the latency isn't a problem on some existing satellite
providers.
But just because Starlink is so much closer to you,
orbiting just closer to the Earth, latency is a huge win.
I could see businesses using this as a backup connection
too.
Maybe they have their faster gigabit broadband.
They have fiber, but it goes out.
You had internet issues this weekend.
I did.
And if we were doing some sort of live television production
and you were in a home studio, it
may be worth your money to have a backup like that.
Oh, I like it.
A second backup.
I've got LTE.
I've got Starlink.
And hey, don't forget, Amazon's getting in this game too.
So I think there'll be some competitors to Starlink
that will have to take into account too.
Whatever happened to those Google balloons?
I think, did they bail on that?
I can't remember.
Or Facebook had a project too.
But I could see a future where LTE and 5G cover
a lot of nomadic digital workers.
And then when you settle down in a spot for a day or so,
you can turn on Starlink and you get, hopefully,
an unlimited higher speed connection.
I think for that, the people who haven't already
been served by fast broadband internet,
it's going to be huge for them.
Yeah.
Hey, let's do a little housekeeping.
If you haven't yet, you should consider
joining the Luplug every Sunday at noon Pacific, 3 PM Eastern,
in our Mumble Room.
You can get information on how to set up Mumble.
Just go to linuxunplug.com slash mumble.
We have a really brief guide there as well as
an extended guide.
The thing is, you never know when we're going to show up.
This Sunday, we just kind of popped in and said, hey, guys,
we have a show to do.
Can you join us?
And now the Luplug is here doing the show on a Sunday.
And we're going to do it next Sunday too.
What?
Yeah, I haven't told anybody yet.
But I'm going to be out and about that Tuesday.
And the timing is going to be really tight.
So we're going to record next week's Linux
Unplugged on Sunday as well.
So join us.
And you can start out in the virtual Lug
because we come in a little bit later.
So there's still some Lug time.
But on November 15, we'll do the show live over jblive.tv,
noon Pacific, 3 PM Eastern.
And then the Sunday after that, November 22 in the Luplug,
it's the Bugathon for Jellyfin 10.7.
Oh, now that's a reason to join.
Yeah, and you can help test Jellyfin
and make it the best release ever with the virtual Lug.
So that's all happening in the Mumble Room.
Plus, it's that same Mumble configuration
to join the show if you ever get the chance.
And then you're just good to go.
I also want to mention that Jupiter Broadcasting has
an all shows feed where you can subscribe to that.
And you just get every show we put out.
Oh, that's like every show?
Yeah, did you know Coda Radio's back?
What?
That's right.
Linux Action News Now features a brand new co-host,
a sharp young fella named Wes Payne.
Hey, that's me.
That's you.
All that and this show and more, like self-hosted
in the all shows feed, plus anything new we come up with.
So consider that if you haven't already
subscribed to the Jupiter Broadcasting all shows feed.
You just search for it in your pod catcher of choice
or find a link at JupiterBroadcasting.com.
And that, Wes Payne, is all of the housekeeping.
We wanted to talk about our favorite Linux desktop tweaks,
which is going to include apps and command line
tools, things that we use or deploy or leverage
or take advantage of.
Or come on, one more.
What's one more?
Leverage.
I already said leverage.
Come on, give me a good one.
Nope, said deploy.
Utilize.
Yeah, utilize.
You got it, Wes.
Good job.
Good job.
I thought we weren't going to get that.
First thing on the list, command line dictionary.
Yeah.
Yeah, we should have.
Yeah, so these are just different things
that we've collected over the years, some of which we've
told you about on past shows, some of which are brand new.
So I'll start with a couple here,
one that I have absolutely talked about before
on the show, but is such a game changer
that I continue to use it day to day on every distribution
that I set up.
And I think you should try it if you haven't yet,
unless you don't like speed, unless maybe you prefer
your web browser to be slow.
But if you like your web browser fast,
check out Profile Sync Demon.
It's essentially just symlinks your browser profile
into a RAM disk.
But it handles the synchronization
from the RAM disk back to your actual profile
on your disk for you.
And it makes the browser so much faster.
It never has to wait for your disk.
And I know what you're thinking.
You're thinking, Chris, I have me one of these fast PCIe MVME
disk, man.
It gets like one of them gigabits a second.
It's real nice.
It's got the gigabytes.
I do too.
And I'm telling you, it's still faster
when you use Profile Sync Demon.
It's great.
It makes the UI more responsive.
Because if you're hitting your bookmarks menu,
it's got to check the disk.
It just loads instant, fricking, taneously.
And it makes web pages work better.
It makes everything faster.
And if you've got more than 16 gigs of RAM in your system,
you've got enough to polish off a few hundred megabytes
for this thing.
So this is like when you're not yet
ready to run your whole OS from RAM, like a starter step?
Are you going to do that?
Is that one of yours?
No, no.
Yeah.
I mean, I could definitely see why
you'd want to run the entire system from RAM,
to be honest with you.
But the nice thing about this is like even on my laptop,
where I've got 16 gigs, this is running in the background.
I never think about it.
It just works super solid.
It just works, which is what you need
if you're going to be trusting all your browsing with it.
Yeah.
And you can set it up with one of them system D units
and have it run under your own account.
And I'll have a link for that information in the show notes.
Now, I want to tell you about a new tool that I use.
It's going to kind of pair with another tip I have that
is like a first world tip.
I'm going to admit that.
But I'll start with a tool that I have recently
started using called, very simply, GPU Viewer.
And I'm going to warn you, it's not the prettiest app.
But it is a graphical application
to give you front end information
to a bunch of under the hood apps,
like GLX Info, Vulkan Info, CLI Info, ES2 Info.
And what it does is it builds you a really nice media info
style list of information about your graphics card,
your driver, any of those kinds of details, even your CPU
information, your OpenCL support, your OpenGL support,
your Vulkan support.
So if you're trying to figure out
what your deal is with Steam games
or with any kind of performance issue,
this gives you everything you need
to know about your graphics card.
And where it comes in supes crazy handy
is my next kind of first worldy tip here
is if you've got an Intel graphics laptop
and you want to be a little foolish with your money,
I do, I do.
I really still today recommend an eGPU.
Use it as a dock.
It's such a thing of beauty.
You guys know I've talked about this before on the show.
And I'm here to tell you that this is still the setup
I'm using, and it's still working really well for me.
After, what has it been, a year or more
since we've talked about it on the show?
Yeah, you were just showing me your new setup in the RV.
It was fancy.
Yeah, I got a new stand.
So I've got the laptop.
It's even closer to me, and it's a little higher,
so that way I sit up better.
And I've got a little mini Clacky keyboard
that I ordered online after getting
one of those little tester kits.
I did the whole thing, and it's this little compact keyboard.
I've got a Bluetooth mouse.
I've got a game controller.
I've got my wireless headphones that we reviewed on the show,
still using those too.
Another great Linux tool is those wireless Corsair
headphones that use RF instead of Bluetooth.
And of course, I got a couple of other things
plugged in, like a phone and watch charging cable.
All of that, though, is all of it is plugged into the eGPU.
And one, oh, and power, of course.
Of course.
Power, of course.
One cable comes from the eGPU into the laptop.
One cable.
And I don't know exactly why, but now I
seem to be able to unplug and plug in the eGPU
without my OS freezing.
So I can just come and go as I please, at least as soon as,
I mean, Fedora 33, it hasn't been a problem yet.
So maybe it's a newer kernel thing.
Maybe it's because I don't use it as the dedicated GPU.
I kind of use it more as an on-demand GPU.
But man, does that work well for me.
That is so slick.
I have all my peripherals set up there, all the wires,
all that stuff go into the eGPU box.
One Thunderbolt 3 cable comes to my laptop.
And then the way I use the GPU is as an environment variable
before I launch the application or the Steam game.
And there's guides on how to do this.
I use an environment variable to say which GPU
I want the application on.
And so I essentially have an on-demand AMD GPU.
And since it's an open source driver,
there's no repercussions.
Like if I do an NVIDIA card in that eGPU,
then I always have the NVIDIA driver.
And I always have the NVIDIA management software
and admin stuff, whatever that application is.
I always have that stuff on my box.
And we have looked.
And it does look for the NVIDIA GPU.
And it can sometimes even freak out
looking for the NVIDIA GPU when it's missing.
And it will create a bunch of errors in your log.
You can see it happening when you run journal.
Not what you need.
And you also don't have to be disabling and re-enabling it
or handling any of that.
Which was the workaround we came up with is
different essentially grub entries
that disabled or enabled the NVIDIA card.
But because it's an AMD graphics card,
and it takes up 10% of the kernel code apparently,
but the kernel driver is built in,
it just works when it's there.
And it is fine when it's not there.
Like it just doesn't care.
And so I switch between an Intel graphics and an AMD graphics.
And I have all of my laptop cords going into that eGPU.
And it's such a nice experience.
It's like over a year since we talked about it.
And I was actually showing Wes a picture of my setup
this morning.
I'm still loving it that much.
And so GPU viewer makes it even easier
to kind of get information.
Is the system seeing my GPU?
What is the information it does detect about it?
All of that's in there.
And I really like it.
OK.
I have just a couple more.
You ready?
Yeah, almost.
OK.
This one you can probably guess is for unfilter mostly.
But it's just really handy if you.
There's a couple other tools to do this.
But there's nothing simpler.
If you just want to trim the ends of a video,
maybe you took something on your phone,
you've copied it over to your machine,
and you want to just trim it up a little bit,
there is a GTK application that's kind of new.
It's on Flat Hub and other places called, simply,
Video Trimmer.
And it lets you just cut out a fragment of video.
You give it a start and end timestamp.
And it will cut it.
The video is never re-encoded.
So the process is super fast.
And it doesn't reduce the video quality.
And that's the number one thing I like about it,
is it is designed to not re-encode video.
And you know, that's kind of a big deal.
It is.
The UI is a little tricky when you have an hour-long video.
But if you're working with a three-minute video
you took on your cell phone, or if you did a screen cap
and you want to cut off just the beginning
and the end of the screen cap, it's super great for that.
And it's a really straightforward UI.
And it's crazy easy to get installed as a Flat Hub.
You mean I don't have to do this manually with ffmpeg anymore?
AvidMux is my other favorite way to do it.
But this makes AvidMux's UI look like it's from 1992.
And I noticed you haven't mentioned this yet.
What?
It's written in Rust.
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
No!
Those are some good advice from a long time Linux user.
Come over here, sit by my fire for a moment,
I'd like to tell you a story.
Stay a while and listen.
I highly recommend, if you're a GTK desktop-er,
give POPtHeem a try.
Go all in and get all of the packages.
Get the ICIM theme.
Get the cursor theme.
Get the GTK theme.
You don't have to do the auto-titling.
Give POPt THEM a try.
They've put a lot of thought into what
be highlighted so that way your attention is drawn to the right part of the UI at the right time.
Open save dialogue boxes, pop-up boxes, they've put a lot of effort into that. And I've been using
it on pop, but I've also been using it on Fedora 33, which is wicked cool. And I have noticed over
the last few weeks that they have put sort of emphasis on like what should be the default and
what you click on if you don't want the default. And that kind of stuff is really nice. If you're
a plasma pal, I really want to suggest that you stick with Breeze, but give Breeze Dark a try.
Breeze just keeps getting better and better. And Breeze Dark, it kind of makes you not see some of
the unused white space that's in some of the plasma applications. And so not only do I find it just
simply easier on the eyeballs, but I also think it kind of, for lack of a better word, kind of
papers over some of the UI gaps and spaces that sort of drive me nuts sometimes. And the dark
theme makes that all real nice, kind of makes it smooth, and you don't notice that kind of stuff.
So GTKers, I just got to say, even if you just do it for a week, give the pop theme a try.
And plasma pals, go Breeze, but go Breeze Hard and go Breeze Dark. That's my sage longtime desktop
advice. I've got a million other things, but I feel like I've been talking for like five hours. So
Wes, why don't you give us some of your favorite apps, tweaks, tools?
I've been finding myself in the command line more and more these days. So mine mostly focus on
how do you make life a little bit better while you're there. One tool I've been using more often
is FZF, a command line fuzzy finder. And this is just great. It's a general purpose command line
fuzzy finder. And it can use with basically anything, a list, files, command processes,
history, host names. So let's say you want to SSH to a box. Once you've got this installed and set
up, you also add a star star and hit tab. And then this thing goes and looks through all your
SSH configurations, stuff like that, finds hosts that exists, offers right there with a really
slick curses interface that drops right down and lets you find it. One thing I didn't even realize
until looking over the main page again was it integrates with kill. So I'm trying to kill dash
nine something. Yes, there's tons of ways to find it. But you just hit tab and it pops an interactive
environment right there in your terminal where you can browse through hit enter process is gone.
That's super nice that that for kill right there is a winner. So that's the command line fuzzy
finder FZF. How have I not heard of this before? I don't know. You know, I think it's actually
pretty popular. I don't think it's been a pick here, although it's definitely elsewhere around
the Linux ecosystem. If you haven't tried it, I think it's worth a shot. And it slots into pretty
much all the shells they've got, you know, it's easy to install, they've got a little script that
will add it and customize your config so that it works nicely. It's great. Does it work with the
best show? Yes, it does. This has got to be one of your picks. It is. Yes. So I've been using a Mac
a little more for work as we've talked about. That's been that's been totally fine. Not what
this is about. But I had been using that as an opportunity to play with CSH more because that's
now the default shell over there in OSX. How is the SH? Not bad. You know, I like it. It's a good
shell. There's a lot of neat stuff. Certainly, you know, better than bash as you might say.
But I'm back on fish. Yeah, it's no fish, right? Fish is just so easy. And it does so many of these
things that I might otherwise want to customize or pull in or configure that fish just does for me.
And I love that there's things that I don't need to save and I don't need to automate or they're
just not worth the time of doing it. But fish bridges that gap. So if I'm going to go back to
a project and I'm in that folder again after three months, well, the build commands are just
right there in fishes memory. That is exactly what it is, is you go into an environment you
haven't been there in weeks or months, you kind of kind of remember the command you ran, but you
don't quite know what it was or what the flags were. And you start to type what you do remember
and fish auto completes the frickin rest. It's just it's so great. And there's other ways to
crack this too, right? Doesn't it? But I guess you don't have to use fish if you don't want to change
your whole shell. Yeah, there are things you know, FCF can help with some of this stuff. And then
there are a bunch of tools that I had been using in past installations, just around helping you get
around your file system. If you have common activities, common locations, you go for certain
workloads. There's all kinds of nice tools, things like auto jump or jump or smart CD is another one
that I've used. All this can be pretty handy if for some reason you just can't use fish. I saw
you had a you had an entry in here in the doc for the Chromecast lifestyle, which I don't know if
we fully added you for but you are like you are a hardcore caster. If I'm not watching it, like on
my laptop, on my phone, then it's definitely going on my Chromecast. That's the primary method. I
watch basically everything. But that's how you get like everything on your television. And so having
some tools to make that easier, definitely necessary. To start with just MK Chromecast.
That's a pretty popular application. It just lets you it integrates in and handles all the trans
coding, figuring things out plays really nicely with pulse audio, adds a device and then anything
you select to output there just shows up on your Chromecast. Oh, that's cool. If you're using Chrome,
you can just cast from inside Chrome. And that works pretty darn decently. But if there's other
application stuff you're doing on the desktop that isn't in a browser, this is the way to do it.
Could you do a full video that way? You know, I don't know if it can you can play the video file.
So that's pretty easy. I'm not sure about, you know, for streaming, you have to do a little more.
Yeah, why don't just play the file in? Okay. And so that's where the next two picks come in.
So that was MK Chromecast. All right, what do you got next? Cat, which has previously been a pick
on the shelf cast all the things and this guy is just great. You throw any file at it pretty much
it will figure out if it needs to transcode it spins up a little server automatically locally
to play it on the Chromecast and sends it right over. C-A-T-T. C-A-T-T. Yeah, I recall that that
is really nice that it spins up the server that the Chromecast is expecting. Right. And it has
good support like you've got multiple devices or you know, like an audio Google, whatever they're
called now. I forget the names. Mini, no. HomePod. Yeah. Google version of HomePod. It also integrates
with YouTube DL if you've got that around so you can just say like, hey, cast this link to a YouTube
URL and it'll figure it out for you. Nice. The one thing it's not as great though is kind of controlling
you can control it but it's not as intuitive as I like. So there's another program called cast now
and that's my last little Chromecast utility. This can also stream it's not quite as good so I don't
use it for that I just use it as a little heads up display in the terminal it'll figure out what's
playing it shows you a little menu of you know what is that currently casting and then you can
just spacebar to pause you can adjust the volume you can seek. Whoa whoa whoa whoa so this is like
a remote control in the command line? Yep. Oh my gosh that's cool that is so neat and you put in
a drop down terminal that's the way to go. Right you just have it available whenever you want.
That's cast now we'll have links to all of this at linuxunplug.com
slash 379 huh and and so can you but you don't use that to send any files you just use that to
manage whatever is playing. Yeah it can do that and I used to use that in the past but I've found cat
is more actively maintained and just does a better job of it. Okay now can you help me with this one
because I know that you got a web browser but that's not good enough and you got vim and that's
not good enough but if I could somehow take vim and put it in my web browser maybe then I could
have the perfect browsing experience so what do you have for me? Well why don't you try Tridactyl.
Tridactyl really? A vim-like interface for Firefox. Okay so you can move around the browser using vim
commands and whatnot? Yes and there's also vimparator previously there was Pentadactyl which
is where the name Tridactyl comes from so there's there's some chrome options here as well if you're
not using Firefox but if you wanted to be a little more efficient and you're just really hooked on
vim like some of us you can take it to the next level. Do you actually have this set up right now
can you do this? I don't have it on this system but on my main web browsing machine at home yeah
because it's just so easy like if I want to close a tab you hit d then the tab is gone and if you've
already got these sort of like built-in muscle memory from using vi in the command line all the
time and you know I turn those settings on I use it when we edit show notes and code emd I use it in
my uh in my ides for work it's just a natural extension and I don't know I don't go crazy with
it you can like make you know use it to select text on the page and find stuff and all that
I just use the sort of basic navigations moving between tabs stuff like that on your home computer
yeah on your mint box well you know you gotta customize mint you gotta make it yours okay drew
I know you've got a few desktop tweaks and apps that you like to use uh and I want to hear them
yeah I do so my first one is more of a tip it's use your damn home slash dot local directory
I got so sick of cluttering up my root folder I was like there's got to be a better way so yeah
turns out there's a dot local folder usually it has uh just like a single folder in there share
and then it's got like your applications overrides your fonts that you've installed locally stuff
like that but you can do tons of stuff in there and in fact most distros that I've used recently
have home slash dot local slash bin in your default path so that is a perfect place to put
all of your little scripts and things like that that's a great one that's good all the rust
applications you just download exactly yeah what did you say Wes that's a good one though because
that dot local is just sitting there it's yours for the using yeah and I even use it for um you
know I use nextcloud and anytime I switch to a different desktop like I go to Ubuntu or Pop or
Fedora or whatever I just resync all my stuff and I do a home slash dot local slash config and then
I symlink from there into my real config folder and that way I can keep all of my config stuff
all sorted out and and synced the one-stop shop yeah and so use that folder use it for
so many things because why not and it keeps your home folder clean so my second thing is just for
Debian people or Debian adjacent like Ubuntu or Pop and that is the Liquorix kernel I find it
really quite snappy and it just feels more like a really smooth desktop experience so for those
maybe like not familiar this is like a specially tuned like desktop focused kernel yeah exactly
I started looking at it because I was looking for something that was a little better for pro
audio than just the regular low latency kernel but once I started using it I was like wow you
know everything feels more responsive and now it's like the first thing I install as soon as I
am on a Debian system so oh okay just Debian though well and Ubuntu anything Debian based
man I want it for Fedora yeah no it's it's not available for Fedora but it's built on the Zen
patch set so if that gives you any indication of kind of what they're doing under the hood there
but I do have something for Fedora users and this one is really really cool it is
pipewire nightly it is a repo in copper that gives you the latest and greatest unstable goodness
oh you're speaking our language yeah it's for adventurous people but I'm using it I'm actually
using it right now and it is handling all of my pulse all of my jack and in the latest builds
and in the latest builds it even supports flat pack yeah and that's actually kind of useful in
a way that I hadn't appreciated before can you describe what that means which part the the flat
pack support yeah flat pack supporting pipewire and like the screenshot you sent us okay so
previously flat pack would not talk to the pulse server that pipewire is spinning up
so what they ended up doing and by they I mean wim tamans is they're spinning up a second pulse
server just for flat pack applications that then routes audio back in so I can spin up something
in flat pack and I can route it to a jack application I can just run it straight as a pulse
straight to my system I can do whatever I want to with any flat pack apps just like I would a
normal regular app on my desktop that's great that's how we'd want it yeah now it is still a
little buggy I have had it where if I've got like Spotify running for hours it'll start stuttering
after a little while but closing it and reopening it respawns a server and it's fine after that
so again for adventurous users but it's really coming along great that's good news I know what
I'm installing after the show and then I'm really glad you put this last one in here because I think
as Firefox if you're using Firefox this seems like a must-do yeah well especially if you're
using the default ad way to theme it is a essentially a CSS hack that will turn your
Firefox into something that looks truly GNOME native it's super simple to install you can
configure it in the about config menu instead of like having to you know hack on the actual
config files themselves and it just looks really nice yeah I like that it supports the ESR release
as well yeah there's really no way to state how nice and it just makes Firefox look native it
looks nice and it makes it look like a GTK application that even looks good on on plasma as
well I just think I really really wish this is how Firefox just natively looked on Linux
right it's super nice it's great it's clean it looks like like it's belongs on the Linux desktop
so I'll have a link to that that's a really good one and it's one that I need to set up
I just realized when I saw that link in there it's like oh I don't have that installed right now
so that's what I'm gonna do thank you Drew those are good ones and we'll have links to
all of Drew's all of Wes's and mine in the show notes and then if you're in the mobile room and
you want to share with us you want to share one with us let's do it in the post show you know
let's sneak them in there that's what it's there for that's right well thanks to a cloud group
sponsoring this here episode of the unplugged program they have a python 3 scripting course
for system administrators that will have linked in the show notes it's pretty nice you develop
the skills you need to write effective powerful scripts and create command line tools using
you guessed it python 3 but beyond the language itself you'll go through the full development
process including project setup planning and automated testing to build two different command
line tools and more it's pretty great we'll have a link in the show notes if you want to check it
out python 3 scripting for system administrators at a cloud guru go to cloud guru.com or use the
link in our show notes let's do a little bit of feedback Mr. Payne we got some on YouTube DL and
Hans wrote in and this is a really long email Wes but he essentially thought that when we
touched on the YouTube DL issue that we probably could have given more GitLab love you know given
a little more attention to GitLab he's been self-hosting on GitTia and he's running it out
of his living room that's great and he and then he just mirrors his repositories to both GitHub
and GitLab very nice which is a pretty interesting approach and I kind of think we touched on a
little bit that's why I didn't like specifically mention GitLab I think we just kind of mentioned
various self-hosting tools and that maybe some of these projects are going to have to consider that
yeah and what's the right setup how do you maybe take advantage of some of the GitHub
discovery factor community building factor but also make sure that well if they decide to do
what they want to do or can do at any time you've still got your project all the resources necessary
to continue development yeah and we also speculated about some other reasons beyond like DMCA
takedowns that might motivate projects into doing that do you want to take the free IPA feedback
because we asked people what their thoughts were on running Active Directory now that both Fedora
and Ubuntu have built-in support in their installers to join an Active Directory domain
I started thinking this might be a decent homeland solution but I don't really want to deploy
windows and so we asked people to write in with their experience using free tools
Matthias wrote in in the latest look you had mentioned wanting to set up Active Directory or
free IPA I have been using free IPA in my house and home lab for a little more than a year and
I love it you can use it to manage the SSH keys shells users groups and SSL certs all from one
pretty UI that looks and uses the same UI framework as cockpit which hey that looks pretty nice oh
really that is very nice actually I note that also it's possible to manage several other aspects
besides just your desktop login but other single sign-on aspects of a network that's kind of nice
and setting up LDAP for things like Nextcloud and GitLab seems to work too
I don't know I looked at free IPA and it looked like a hell of a project Wes you and I have
thought about doing it and we just I don't know we haven't quite been motivated to pull the trigger
on it and maybe it's because our login system has been working just fine the way we do it
we kind of have a standard system here at the studio we have our own systems for our own machines
well it's a lot you know there's a lot of moving parts there's a lot going on and a lot for us to
learn so I think if we do we need to you know dedicate some time to it but we're also maybe
interested in some some minimal smaller what's the you know what's the barebone system that gets us
some of those advantages but that we actually have an understanding of yeah I don't really
need to become an active director or LDAP administrator I don't want to no Patrick wrote
in about Zenitol which looks like it's spelled like it's some sort of medication but he says
it's a sugar-free gum yeah right exactly he says he's a developer at a small engineering embedded
systems company about five people or so so he handles all the IT for everybody and he said he
wanted to share his experience they have a 15 year old Windows 2003 AD server and they moved it to
something Linux based he's been using Zenitol as their AD server for about a year now and he's been
pretty happy with it he says has a good web UI for managing services users and groups unfortunately
you do need the Windows admin tools on a Windows machine if you want to do anything complicated
with group policy but he says he doesn't have a need for that we don't we would not have it no
definitely not and he says we have a mix of Windows and Linux clients both work great I
renamed our domain in the process and migrated the Windows clients to the new domain turned out to be
super easy it was a little more annoying to get my Ubuntu 20.04 system connected but it wasn't too
bad it's nice to be able to just log into my workstation using the same login I use everywhere
else in the office yeah I bet and now it's even easier in 2010 it's built into Ubiquity he says
I've never used any other LDAP server so I can't really compare but I imagine using Active Directory
server and in a Linux all Linux shop probably isn't worth it I would assume the Linux domain
servers would be better integrated it'd be definitely nice to join an AD domain to the
installer but using the installer but hopefully they make it easy to join to an existing computer
too when I was trained as a Windows administrator back in the late 90s I was shocked when I came
to Linux and discovered there wasn't a central authentication system just by default out of the
box right because in the Windows land you just get domain controllers in Active Directory that
just is part of the Windows server package got the big old yeah right that's part of it in Linux you
have to roll it yourself and so that's why Zenitol and FreeIPA are I think kind of a more compelling
solution to someone like myself because I come from a background where I actually have rolled
all of these components myself I did one major install for a company that doesn't exist anymore
but it was a it was a meal on demand delivery company and the entire back end infrastructure
was on Linux it was using LDAP and we did have Windows machines that joined the Samba powered
domain and we use that central LDAP for web authentication for internet authentication
for email authentication I mean I for a short period you know for a couple of years I was
really living the dream there but I've just never really been compelled since then but if I could
throw together something in a container or a virtual machine and then go to a web UI and
kind of just have a decent like cockpit style web UI just enough to like yeah manage whatever
shared system users we might need that might not be so bad I could see doing that I could see that
uh before we go on I want to thank our unplugged core contributors unpluggedcore.com the core
contributors keep unplugged independent as long as we can we'll keep doing this show independently
and you also help reduce the ad load needed to make the show profitable and we're not unplugged
that's right and you know what else it really means is when we don't have a sponsor like you
know maybe maybe stuff goes bad and we don't get a sponsor for a little bit the core contributors
can keep the base cost of the show covered so we can still get it edited produced and when you
become a core contributor you get access to two feeds one feed is a limited ad feed same full
production all of the mix the editing just limited ads and then there's feed two which is the full
uncut live stream has the pre-show that never got recorded the one where we were playing videos
the post show all of our screw-ups the restarts the mistakes doesn't bleep anything if we swear
there's nothing like that it's all just raw full transparency for our core contributors it's
available as a second feed and it's like an extra show and in this case where we're recording early
well they get the show several days before the final release hey isn't that nice so there's
those perks too you get it as pretty much as soon as we're done which which can be an advantage
sometimes thank you to our core contributors unplugged core dot com well mr pain i think
that's everything we have for today we don't i don't think we really need to do any picks we
have picks but i don't think we just did a whole bunch of pain we sure did we just did like 20,000
picks i know i know and i can hear joe and i hear going you're going on too long you got to stop i
can hear him you know that's not what he sounds like at all but in my head that's what he sounds
like this see you next week same bad time same bad station this time it'll be sunday uh a little
after noon join the virtual lug hang out with them for a bit and then when wes and i are done
with linux action news we'll hop on the live stream that's perfect you just warm up with the
lug get chatting get ready to share your linux opinions and then we'll be there live linux
unplugged jblive.tv noon 30 pacific maybe one o'clock i don't know sometimes you got a snack
you know the news the news you don't rush the news so when we're we're not starting till we're
done with the news that's just the reality we'd love to have you join us next sunday we're just
doing these two out of order then we're back to our regular tuesday time slot you of course can
just subscribe and just get the show when we release it and just don't worry about it that's
at linuxunplug.com subscribe links to everything we talked about today linux unplugged 379 and
your feedback at slash contact and one last time that mumble info is linuxunplug.com mumble thanks
for joining us see you back here next tuesday
so
this is one of those episodes where next time i reload a machine i'll be going back to the
website and like remember what did west say what did drew say i'll be clicking on your links so
that's how you chose this topic yeah i do that i have there's like certain shows i go back to
the show notes myself after i set up a new rig that's why next week we're going over to how
to install large okay no no i don't think so no i'm i'm pretty happy with fedora these days and
really the ubuntu's keep killing it too it's it's it's a hard task for a distro to get me to move
off that and when i do it it tends to be mangero these days like i got my three you know i'm a
multi-distro man i've got i've got commitment issues to a single distro but i can live a three
distro lifestyle and i can live it pretty happily on the right balance that's right well i'll tell
you what i've been playing with lately that would be really helpful for you is ansible
just ansible all of your initial setup and just run a script and you're back where you started
but on you know a new os i don't i don't know me known ansibles but i know me that i know some
ansibles but i don't know me ansibles you know what i mean yeah what i'm saying is i need to
know me some ansibles because i've got these raspberry pies that um you know sd card could pop
uh usb disk could pop i could have to just swap it out and swap it in with a new raspberry pi and
it'd be really great in that kind of environment to just redeploy everything to it and not go back
and reset up the os and custom install the packages and custom configure you don't want
to install docker compose another time on that and tweak the ssh config as i do all the changes
i make i should just get it set up once and then deploy well between alex and myself i'm willing
to bet we could get you something get you something rolling it turns out if you try hard enough you can
