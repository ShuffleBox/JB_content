Wes, you're always trying to find new and fun things to do with good old DNS.
What'd you find this week?
DNS.toys.
I mean, you're familiar with the tools that let you get the weather in your terminal,
right?
Yeah, okay.
But that's like calling an HTTP API.
It's so wasteful.
Boring.
Yeah.
With DNS.toys, you can get the weather over DNS.
Excuse me?
Yeah, just dig Seattle.weather at DNS.toys and there you go.
You can get different times, world times and time zones.
You can do your unit and currency conversion and you can even print the digits of pi.
That's pretty great.
And you know, this just puts us one step closer to that all command line, all the time lifestyle.
We'll get there.
I knew it.
Hello friends and welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
And my name is Brent.
Hello gentlemen.
Welcome into a very special episode of the unplugged program.
We're going to have a really unique guest.
He helped co-invent the webcam, the VNC protocol and so many other things.
He'll be joining us in just a little bit to share some of his memories of the early days
of the web, computing and so many of the standards and protocols that we use today.
It's just going to be a great opportunity, but first we do have a couple of items we
want to update you on, then we'll round out the show with some boosts and some picks and
a lot more.
So before we go any further, let's do the right thing and bring our virtual log in time
appropriate greetings, mumble room.
Hello, hello.
Good evening.
Hello Chris.
Hey Wes and hey Brent.
I am very glad you could be here for the special prerecord this week.
We don't always get the mumble room when we do a prerecord.
It means a lot.
Otherwise it's just a little lonely, quiet, too much, I mean, hey now, well, hey, before
we go too far, should we do a meetup for folks that are going to be attending the Jupiter
broadcasting London meetup in August?
Yeah.
I'm not sure if we have an update this week, but I think it was very important to just
keep mentioning that Alex will be in London and he's planning a Jupiter broadcasting meetup
that is tentatively planned for August 5th at around 6pm GMT.
Now don't be confused because the meetup page tends to give all the times in JB time, which
is Pacific, which would not really work out very well locally in London.
So have a look at the meetup page.
I think there are about 80 to 90 people signed up so far.
It seems every week we get another 10 or 20, which is really great.
And look for some updates on location maybe in the next few weeks.
I really wish I could make that one.
Hmm.
Boy, oh boy.
I'm really glad though that it's coming together.
Jealous.
Build a community over there.
Maybe this is the way to do it, right?
We start getting an idea of how many folks are there, what works and doesn't work, and
then...
Alex is going to scout out some locations this time around, right?
So we'll have some ideas there too.
Maybe this is how it happens.
We send the pre-crew and then we'll get there, you know, next time.
Like the rock stars we are.
Oh wait.
I just got really excited there.
Like true VIPs.
Yeah.
Oh boy.
Let's move on.
For goodness sakes.
Meetup.com slash Jupiter broadcasting for the details on that.
Do follow it there because details could change.
Flights could change.
That kind of stuff.
It's been a minute since we've talked about the Linux Copter flying on Mars.
We do updates occasionally in Linux Action News.
But this week it seems that there's been a little software update that we want to talk
about.
I'm just recovering this has been out there for a little bit.
But as you guys will recall, Ingenuity arrived on Mars in February 2021.
And along with the rover, this little helicopter we thought, well, we'd see, I don't know,
I don't remember with how many flights we saw, I thought originally it was such a small
number.
I mean, it's just a proof of concept.
But now it's turned out it's flown 21 times and it's actually provided critical data for
the rover.
So much so that NASA is going to continue to use these Linux Copters in the future.
And for us, it just felt like such a historic milestone for Linux.
And then we had an opportunity to connect with some of the folks from JPL and that was
such a cool treat.
And so it's neat to see software updates are going out.
I guess I didn't really have anything other than I just wanted to have an excuse to talk
about this little guy.
They've done some upgrades to reduce navigation errors during flight.
And they're now letting it fly higher than 15 meters too.
It's just getting more and more capable and it keeps working.
And remember, like before this thing flew, we weren't even 100% sure that the whole flying
on Mars thing was going to work properly.
Yeah, they said that they flew over to this Delta on Mars and they used the helicopter
to determine which of the dry river channels that the copter should drive in or that the
rover I should say should drive into.
It's a neat idea.
This patch is kind of cool too because they're inserting a small little code snippet on the
flight computer that intercepts incoming garbage packets from like some faulty sensor stuff
and then uses other data to reconstruct replacement packets that get like inserted into the stream.
So then like downstream components just get the data that they were expecting.
I can't even imagine.
So not only do you come up with that patch, but then you apply the patch on Mars.
Hopefully they've got that new system DAB updates thing.
Actually didn't they say there was some kind of AB system they had on there?
They did say that.
Yeah, there is that.
Hopefully they have that kind of.
Hopefully an ABC system.
You know, I'd love to know more about it because you got to imagine there is an identical unit
on the ground at JPL, but then are they like, are they doing like a series of QA tests on
this thing?
Are they doing like flight tests and imaging tests?
Like are they like doing software updates and then do they have some sort of facility
where this thing flies inside where it's the atmosphere of Mars and then they do a bunch
of testing?
That's a good question.
Are they putting dust on it and stuff?
Right?
Like are they diminishing like the solar panels capacity?
Or is it kind of just a YOLO thing where they're like, well, we can only test so much.
Upload.
I'd love to get the answer to that, but it's pretty great to follow this and it's great
to see that they're continuing to update.
It's been several updates just even kind of recently on the on the 7th.
I think there was a report.
Go Ingenuity go.
Yeah.
Yeah.
So neat.
And even though we haven't really touched on it in a bit, we're still following it.
And when there is kind of like a mission update or something like that, we do try to include
that in Linux action news as well.
And then I wanted to follow up on a project called Umbral.
We talked about Umbral a month or two ago, and it sells itself as a personal server OS
for self hosting.
And I'd say that's pretty accurate.
It's really seen some major updates since we talked about it last on the show.
And one of those updates is to break out the Bitcoin node and the lightning node as their
own separate apps.
So if you weren't interested in the Bitcoin aspect of this, but maybe you were interested
in running Nextcloud or a Google Photos replacement like Photo Prism or Sync Thing or Synapse
to run your own matrix server, or maybe you wanted to run Vault Warden or Fulcrum.
I do want to run those things.
Yeah.
And you didn't necessarily want to dedicate 500 gigs to the blockchain.
I don't know.
That seems pretty reasonable.
They've now broken all of that out along with a brand new UI.
And because people are having such a hard time getting their hands on a Raspberry Pi,
they've now created a couple of really easy one liner type installs to get Umbral up and
running on any Debian or Ubuntu box.
Oh, that's great.
Making that really, really straightforward.
If you missed our first coverage, that's Linux Unplugged 4.47 for more.
But speaking of Raspberry Pis, I actually have a little bit of good news.
You've been hoarding them and you're willing to sell some of your supply to the audience?
I'm waiting for the prices to go up just a little bit longer.
I'm still hedging.
You know, but you and I have been talking about doing a Raspberry Pi based router.
Were you thinking for yourself or were you thinking for your folks or both?
I can't remember.
I mean, some combination of I need a new router set up.
My folks need one.
The studio needs one.
And the studio needs one.
So there's like a lot of things.
Yeah.
Tell the time for a shortage.
Oh, yeah.
I mean, you do.
Brent.
Yeah.
That's before we even get to Brent.
We all know this.
I don't even have to mention it.
But you just got a laptop.
All right.
I can only give away so many things in an episode.
So this week, I actually have really great news for Wes.
Listener Maximilian contacted me on Matrix recently and said, hey, I've got a Raspberry
Pi for eight gigabytes.
Could you use it?
I haven't been using it for anything.
And I said, you know, I think that Wes Payne could use it.
He's looking to build a router.
So Maximilian is shipping a Raspberry Pi for eight gigabytes for Wes Payne to the studio.
So it'll probably arrive while I'm in Montana.
That's usually how these things work out.
That's just kind of typical, I suppose.
Well, that way, it's something to tempt you back.
Yeah, right.
Well, no, it'll be for you.
And then we can and I'll use my Compute Module 4 that I have set aside.
I have one set aside.
And you won't have to worry about a carrier board because this is a full unit.
And we can get maybe that router project kicked off now.
So that'll be pretty cool.
And I think we were talking about it, although I don't know for sure about it.
But I think we're tempted to try to build it around Nix OS and create a Linux based
firewall and router.
We're not opposed to things like PFSense or any of that kind of stuff.
But we thought it might be fun to see what it'd be like to just build a minimum viable
Linux router project that is a super tightly controlled OS.
I don't know what we'll use for everything.
We haven't quite discussed it.
I'm sure we have a few ideas, but indeed, we don't want to spoil all the fun.
Yeah, but, you know, we'll get a little reckless with it because that's what we do here.
So that's cool, and I wanted to say thank you to Listener Maximillian.
That's pretty great.
Thank you for enabling our shenanigans.
Yeah.
And if you've got a Raspberry Pi or an Ubuntu and Debian box and you want to try out the
new Umbral, it is pretty cool.
It is a really slick way to load up a bunch of great apps on your own LAN.
They write on their release announcement, this release has brought a massive underlying
architectural change to Umbral's source code.
One of those changes is the migration of the Umbral app store to its own dedicated GitHub
repository along with a new way to easily test package and ship apps for Umbral.
So the other big update, if you're already using Umbral, is they'll now have separate
updates for these components outside of the overall OS updates.
So you can get mid-stream app updates now, which is going to be really nice.
And I like Umbral.
It is still in beta.
It is still early.
There's always these caveats with these one-click do-it-all things, but I do think it's a pretty
good project.
Now, Chris, you've been running Umbral at the studio since about January when I was
there last.
And I was curious, I guess, how it's been going and whether or not you've updated yet
or you plan too soon to this new version.
I've not gone to this new version yet, but I have done every update.
I'm going to do the new version when I get back.
I just don't want anything to go sideways before I travel.
Wow.
You're being uncharacteristically responsible.
I love the boosts.
Are you feeling okay?
The boosts are like my little bit of sunshine every single day.
So anything to protect the boosts.
Yeah.
On a cloudy day.
So on my side, when somebody sends in a boost, a helipad makes a great little sound, a little
boost sound effect.
And then there's also a confetti explosion all over it.
And it's a live update.
It comes right in in real time.
And I tell you what, it is the best mood booster ever.
And so I didn't want to break that because I'll probably, you know, if I'm frustrated
or something at some point, I'll pull up tail scale on my phone and I bring up the boosts.
Bad traffic.
Check for the boost.
Well, maybe not while I'm driving, but literally I'll be having like a bad day or I'll be frustrated
and I'll just tail scale up and I'll bring, oh yeah, look at these boosts.
Okay.
I feel better now.
So I don't want to break it before I go, but it has been really super solid since January.
I've done every update since then.
And it does make it pretty easy to back up and get out.
I mean, really under the hood, all it's doing is like updating Docker containers.
It's a pretty established system.
So it's pretty safe.
There is of course things to consider.
It is in beta.
It's a 0.5 release and this is a major new version, but we've heard from several folks
in our Bitcoin matrix channel that the update has gone really smooth for them.
So nice.
Yeah.
Yeah.
A big test for the project.
So hopefully it keeps going well.
lino.com slash unplugged.
Go there to get $100 in 60 day credit on a new account and you go there to support the
show.
So it's lino.com slash unplugged and that's it.
It's simple as that to get that $100 MVME storage, super fast CPUs, 11 data centers
around the world, best support in the biz.
I mean, I could go on and on.
In fact, I often do.
And you know what?
It's still to this day, two and a half years later when I need to deploy something, I go
to Linode.
I go to Linode because I've had a great experience.
Honestly, the performance, it matters to me, but they're also just great citizens in the
Linux community.
That's actually how I found Linode originally.
I was at Texas Linux Fest, which feels like a hundred years ago.
Texas Linux Fest was having a bit of a rough year and most of the vendors just weren't
even really trying, but Linode was there with a smile on their face and the best booth making
what turned out to be one of the most influential Linux Fest in my lifetime possible.
And I made a mental note.
I wasn't even looking for sponsors back then, but I made a mental note that when it came
time, I was going to look up Linode.
And while I waited, I tried them out as a customer.
I became a customer first.
And I was so damn impressed.
You know, they've been doing this for nearly 19 years.
So it makes sense that you get it right, but that doesn't mean every company does that.
And there's a lot of places you can host things, but no place quite does it like Linode with
the performance, the support, and just the continuous improvement.
They just expanded their managed database offering, which was just MySQL back in May.
Well now they're offering Postgres and MongoDB, which is huge for us.
I'm probably going to move our matrix Postgres database over to this.
I mean, why not?
Why not take advantage of the expertise that is Linode's staff and their infrastructure
to run the database?
The part of running a matrix server I kind of don't like anyways.
I think it's pretty great.
And I'd do it too if I was using MongoDB or MySQL.
I'm ready to jump in though.
I tell you what.
We've also released a new e-book, which you can get for free, which helps give you a high
level understanding of database and database architectures and different deployment methods
and what methods might work best in the cloud possibly.
Or when you're working with their crazy fast storage or their AMD epic processors, AMD
really has some great CPUs and you know what?
Linode was down.
They were down.
They put them in some of their high-end.
We've got a system with AMD epic processors in it.
I love it.
I love the flexibility.
I love the solution choice.
I love the support and all of it.
Plus, it's a great way for you to try something, for you to learn something, to get that $100
and support the show.
So just head right over to linode.com slash unplugged.
Get that $100 for 60 days on a new account, kick the tires for yourself and support the
show.
Linode.com slash unplugged.
You know, gentlemen, I was lucky enough to be able to have a brunch with Brent style
conversation with a listener of ours who is a very avid listener of self-hosted and other
programs here on Jupiter broadcasting.
And this gentleman's name, Quinton Stafford Frazier, or Dr. Quinton, it should be, turns
out is a fabulously interesting individual.
I was introduced to him by Alex because they had a little exchange and Alex was like, oh,
this guy's got to be a great brunch guest.
So we went ahead and did that recently.
Quinton is a computer scientist, an entrepreneur, part-time academic, full-time gadget enthusiast.
So lots of home assistance stuff going on here based in Cambridge, England.
And he is credited with inventing the webcam, which he claims is not entirely justified,
but turns out the media thinks he should be.
Oh, good.
We have someone to blame.
Right.
So he's authored dozens of patents over the years that have mostly been owned by Google
now.
His PhD is on augmented reality, which I think sounds pretty fascinating.
He also ran the very first web server in Cambridge University back then when the newfangled worldwide
web thing was happening.
He also teased with me that he may have had something to do with inventing the very first
AVNC client, which I think maybe we'll have to have a conversation about.
But he describes a great deal more on his personal website, which we will link to.
And in our conversation, he was pretty humble about how long that list of accomplishments
was.
I actually have quite a substantial personal website.
And it's not that I think I'm deserving of this great monument to myself.
It's just that I keep adding bits and I never get around to deleting stuff.
And that's what I gathered, because some of the things, which I didn't read, mentioned
like, you can hear me say hello here.
And in parentheses, you state, at the time that I wrote this, that wasn't possible for
all computers and all browsers.
So it's neat how you've just sort of added things as you go.
And I think that's actually really nice.
Well, I think that that recording of me saying hello, which just says something like, hello,
I'm Quentin, pleased to meet you, is probably in an audio format that it's remarkable still
plays on most browsers.
Because I think I recorded it on my spark station back in about, you know, certainly
not this millennium anyway.
Back when not all browsers could play audio.
And if you actually had one that could, then you could hear me say hello.
Pretty exciting.
That I think gives a sense that you've, let's just say, you've been around, you've seen
some history.
That's pretty interesting.
I'm really old.
That's a nice way of saying yes.
Seasoned, perhaps is a nice way to put it.
That's good.
I like that.
But the early web, you know, for me, I'm slightly younger than you.
For me, the early web, in my perspective, was dial up internet and the pains and beauties
of that, you know, having a home PC was a big thing.
Actually, the first computer I used was Commodore 64 that my father purchased that was quite
old at the time.
And, you know, he forced us to use the spreadsheet there for he would give us an allowance and
we would tabulate.
A man with foresight, clearly.
Yeah.
Yeah.
So that's, you know, my early history of, you know, five and a half inch floppy disks.
But you've seen a little bit before that, which really fascinates me.
Well, yeah, yeah, a little bit.
I mean, I do think that you and I have been very fortunate to grow up when we did, right?
I think and be interested in technology.
It's like, you know, growing up and being interested in cars at around the time of Henry
Ford or whatever.
But computing has happened so fast, and there's been all of these changes within a lifetime.
I really did have to sort of solder my first computer together and I've gone from that
in a very short period of time to something like, you know, the iPhones and iPads sitting
on my desk are just so far away from that.
And, you know, there aren't many fields, I think, in which you could have that exciting
a change during your professional life.
And so that being said, I'm curious, what was it about the computers?
You know, you mentioned you soldered your own, yeah, maybe some pieces together.
And some of us still do that these days, just for fun.
Yeah, yeah.
But you do it for fun, not necessarily, not because of necessity, though.
Right.
Not through necessity.
Exactly.
But I'm curious, what was it, you know, as a young Quentin, what was it that really grabbed
you about this, this relatively new world?
Oh, that's a really interesting question.
I think, I mean, computers weren't new when I was young, in the sense that, you know,
you saw them on television programs and things you saw, you may see them on the, the, you
know, the deck of the Star, Starship Enterprise, but
As you should.
That's right.
But, you know, I grew up just at the point where suddenly this was something my parents
could afford.
They could save up, but they could afford to give me one.
And only a few years before that, I had used a computer, but it had been in a museum in
London, you know, the Science Museum in London, not because it was an old thing, but the Science
Museum in London has a lot of new stuff, as well as old stuff.
And I remember when I first got my hands, actually, I was able to type at a keyboard
and give an instruction to a computer, which was one of these things you'd only seen, you
know, in sort of Hollywood movies up till then.
And so that sudden shift to being something that you could sit in front of on the, you
know, floor of your sitting room at home, and the only display we had was the television,
we only had one television in the house, so nobody could watch TV while I was using my
computer kind of thing.
Again, it was all of a sudden this unknown world.
I don't want to wax lyrical too early in this conversation, but I think that I've often
thought that computer science, in some senses is almost the most creative subject, the most
creative, almost art form, as it may be pushing it a bit, but you start when you're trying
to solve something using computers, you start often just with a thought, you have a problem
you want to solve, you have thoughts about how to do it, and you turn those thoughts
into a solution to a problem, or maybe a game or maybe something beautiful, or maybe some
but but in general, it's it's thought matter translated into something tangible, with possibly
less sort of intervening stuff than than almost any other any other activity, I think it really
is capturing thoughts.
And anyway, that's what it felt like to me at the start, you know, they're just simple
things like, I don't know, you want to make a picture of a cube rotate on the screen in
front of you, you had to think about Oh, okay, so hang on, what's the coordinates of that
going to be?
Well, you want it rotated by this angle, so you have to work out the cosine of this angle
and you know, and work out where the appropriate coordinates of this cube are going to be.
And then it looks a bit funny, and you realise that's because you didn't include perspective.
So you say, Oh, hang on, how does perspective work?
And you know, it really was you built everything from scratch there, because when you turned
your computer on, all you got was a flashing prompt at which you would have to type code.
And so if you wanted this thing to do anything, you had to start being creative from the word
go.
And that's something, you know, that we've not largely lost in computers, we turn them
on as a as a tool to do something.
But you weren't forced to be creative the moment you turn it on, as you were in the
past.
And that's partly what the Raspberry Pi and things like that have tried to recapture,
of course.
Yeah, yeah, that that conversion from imagination into reality, and then just kind of exploring
from there and seeing what's possible, right?
Yes.
And and, you know, in the past, if you wanted your computer to be able to interact with
the real world, you did often have to plug things into the back and solder things together
and make up the circuit boards yourself, and so on.
And you know, the Raspberry Pi was started by friends of mine who felt that the computer
science students that we were getting in the University at Cambridge, they were coming
in with actually much less experience now than they had had in the past, because in
the past, you to use computers, you sort of had to be an enthusiast.
Whereas now people were coming in just thinking, oh, computers might be interesting to learn
about, but they hadn't gone through that process of having to understand it so much before
you could even use it.
And so the idea of the Raspberry Pi was actually to give you a much more basic computer that
really didn't do very much for you out of the you know, when you plugged it in and turned
it on.
And you had to understand a bit more about it to accomplish anything.
And that was quite deliberate.
The hardware is quite capable of running all sorts of stuff, and they could have provided
you with a very slick experience out of the box.
But part of the idea was no, actually, you need to understand that how power supplies
work, and how to write code and so on, and how operating systems boot up and so on to
a much greater degree to be able to use one of them.
And I think that's part of why it's been such a success.
You know, you mentioned you had to be an enthusiast previously to really get into computers.
It seems almost the opposite these days, in that we all use computers in our everyday
lives from phones to, you know, everything else, really, to your car even.
And yet, the enthusiasts are the one going to these simpler machines like Raspberry Pis
and the single board computers and such.
And so it's almost feels like a reversal to me, which is really fascinating.
Yes, I think that's probably right.
It's almost more like, you know, everybody drives a car.
So if you're an enthusiast, you get a classic car, or you build a car yourself, or you,
you know, put beds in your car, and you have a camper van or whatever it may be, right?
When something becomes a commodity, then you need to find a new spin on it.
And that may be using computers to automate your home, or it may be, you know, just actually
turning on a computer and, you know, sending an email with it is not something that, well,
it's less of an adventure than it used to be.
So we find other things to do, right?
For sure.
Right.
And because everybody does it, right?
You want to find your own niche, or you want to, you want to, if you want to make a difference
to the world, or even just a difference to your local bit of the world, you have to do
something different from what everybody else is doing.
So I think that's part of part of the appeal.
You know, part of what has worried me in the past has been exploring the idea that maybe
we've gotten to the point where computers have done all the things that humanity needs
them to do.
And yet, when I reflect on that, just slightly more, especially in the context of you mentioning
it as quite an art form, I think, well, no, we're, we're really just started, aren't we?
Like, certainly, computers have taken us to the moon, and there's all sorts of things
on other planets now.
And yet, I think in some ways, we're just started, like, there's, do you feel like there's
a lot more possibility there in this this realm?
Yes, I think I think there is a great deal more.
But I think, I think the rapid acceleration at the start of computing has it sort of tails
off for a while.
I think actually, the analogy with cars is is kind of interesting here, because between
school and college, I worked for a car firm, you know, just for a year and a half for Austin
Rover cars, as they were then.
And it was, you know, it was a useful experience of industry, but it wasn't at all sexy.
There was nothing about, you know, nothing about it that made me want to carry on doing
this after I finished as a student and so on.
I thought that, you know, essentially, cars had become dull, and, you know, nothing really
new was happening with them, and hadn't really happened for, you know, 50 or 100 years.
And then all of a sudden, you know, a few years ago, I got into doing stuff related
to cars again, because you had this combination of electric vehicles, which were completely
changing how cars were and could be built, and what they were like to drive, and so on.
And you had this whole idea of autonomous vehicles, self driving cars, which, again,
was very interesting technologically, car companies were having to become, you know,
software companies.
But also, you know, the whole shape of a vehicle, what does it what does a car look like?
Does it have to be?
Do you have to have everybody facing forwards, you know, if the car can drive itself?
And all of these sort of things are thrown open for innovation again.
We have vehicles that are bigger and smaller and quieter and, you know, different shapes
and so on in a way that so much has been defined in the past by the basic shape of an internal
combustion engine and four wheels and a gearbox and so on.
And I think we're at a very exciting time now to be in the automobile industry, which,
again, we haven't really had, I don't think I mean, what's changed before before this
advent of electric vehicles?
What's changed in the last five decades?
You know, very, very little.
Yeah, I think four wheel drive or all wheel drive in rally racing was really a huge innovation.
But even that's quite mechanical, right?
But it didn't it didn't fundamentally change the shape of cars.
I mean, I guess you could say automatic automatic gearboxes, sure, sure, you know, which some
people still aren't keen on, you know, so there have been various small innovations.
But I still don't know how much I buy the dream of fully self driving vehicles.
But it seems to me that if we even get close to that, then the way we think of and use
cars could be completely different.
And I have some examples I like giving of this.
I mean, the thing I'm almost most exciting.
I know you've done a lot of stuff with RVs in Jupiter, and, or camper vans.
And I've always thought that what I really want is a self driving camper van or motor
home RV, one where in the evening I could, you know, I don't have enough space to, to
park it here, but I could summon it from its out of town parking area.
And it would turn up at the doorstep and I would get in with my dog and my wife and a
nice bottle of wine and a good movie.
And I would say, Oh, Chamonix, please Chamonix being in the French Alps, and we'd wake up
in the morning, you know, hundreds of miles away, you might not want to drive a big RV
around when you when you got there, but that's all right, because you could just tell your
car to follow you.
And so you could wake up the following morning and take your dog for a walk in a different
country having slept through the travel process.
Or another example I like to give is, I'd really like a self driving car for when I'm
walking.
Tell me more.
So I like hiking, right?
And so much of certainly here, so much of going for a walk involves finding a nice place
to park and doing a circular route, which brings you back to your car again.
And what about if you're driving along a road and you see a beautiful view and you say,
Hey, car stop here, let me out.
And you just get out and the car carries on and you walk over the fields and you walk
over the hills and you cross the rivers and at some point, which you don't have to decide
in advance when you get tired, you meet up with your car again, and you have a comfy
chair to take you home.
But you know, the fact that you leave your car in one place and have to return to it
in the same place again is something that you know, is perhaps an artifact of the past.
And maybe in the future, people will say, what, you always had to do sort of circular
walks to get back to your transport?
That's crazy.
And so yeah, it'll be really interesting to see in, I think, in, you know, five decades
time, people may have a very different view of transport from what we have compared to
the five decades, you know, ago, right?
What was happening in the 60s?
Well, you know, the cars weren't really fundamentally that, not in that kind of way, but that different
from much the same, right?
Yeah.
Yeah.
Bitwarden.com slash Linux, get started with a free trial of teams or enterprise plans
at Bitwarden.com slash Linux, or try it for free as an individual user.
Bitwarden is just the easiest way for an individual or for a business to store, share and sync
sensitive data.
Bitwarden is fully open source, trusted by millions of users.
You know, we trust it.
You guys know we use it as our password manager.
You know that part of what made me choose that is Bitwarden's open source is what Weston
I used to manage our passwords, our two factor codes and other sensitive data.
And we're finally getting Brent on board, too.
You know, we've achieved something there.
And I love the support that Bitwarden offers.
If you get stuck, if you have a family member or friend that you recommended to Bitwarden,
they got you covered there.
On top of that, they're always rolling out new features.
They just added a new quick account switcher to Android.
This is absolute fire, you guys.
You're sitting there trying to fill out a password, oh crap, that's a business log in,
not a personal log in.
Oh, you know what?
Tap an icon, switch over to the other account.
Boom.
Now you're filling that out.
They've recently introduced a new username generator.
So that way you're using a unique username and a unique password when you're signing
up for a site or a service.
Man, is that not super great?
And they've also now begun working with certain email relay services like Firefox Relay or
a non Addy or simple login or more.
You can just put in your API key.
And then when you go create an account now to service, you know, like an app or a website
or whatever, it'll generate the password.
It'll generate the username and it'll give them a unique email address and it makes sure
you get all that stuff.
You keep track of all that stuff and it all still gets back to you.
That right there, killer feature right there.
And you guys know this, but maybe someone you know, maybe a family, a friend, maybe
the place you work, maybe they really haven't gotten the religion of good password hygiene.
And I just, I got to just say, like, there are so many things you could do, but there's
really one thing you must do to protect yourself online and that is using a unique password
at every website, every service, every app.
And now you can combine that with a unique username and a unique email address and keep
it all in Bitwarden and get access to it super quick.
On my iPhone, I have it set up with face ID.
So when it's time to fill out a password, I pull my phone up, it scans my damn face,
puts it right in there.
Boom.
You know what?
Next thing you know, I've unlocked the site or whatever.
It's so easy.
I can't believe people aren't doing it all the time.
I feel like I want to like parachute down and give people Bitwarden to save them from
some password mess they're probably living in.
Maybe it'd just be easier if everybody went to Bitwarden.com slash Linux and tried it
out for themselves or your business.
You know, maybe you got an open source team that could use some good password hygiene.
Any of that, go try it out, share it with a friend, tell somebody about it and support
the show.
Bitwarden.com slash Linux.
I'd like to say thank you so much to Quentin.
We had a great chat.
He joined me on a Friday evening with some sherry in hand, and as you might imagine,
that ended up going to a bunch of fascinating topics together.
A topic we touched on was how the patent system compares to the open source approach, which
was really great exploration.
The origins of the T9 mobile phone keyboard system, which his friend Martin basically
invented, and they co-founded another business together because of that.
We talk about how keyboards are archaic and how that tech just won't let go, and some
early computer vision stuff.
So if you want to have a listen to more than just that excerpt, please go to extras.show.
There's a Brunch with Brent with Quentin there, and there may even be more coming in the future.
Quite the tease.
Now, Chris, we did get a lot of feedback on the Intel situation, which I think we should
recap here.
So could you give us a little brief recap, and then we'll jump into some great ideas
around our feedback?
Yeah.
So on a recent episode of Linux Unplugged and Linux Action News, we talked about the
upcoming Intel's software-defined CPUs and the fact that support for licensing and enabling
the software-defined features in a CPU landed in Linux 5.18, and we kind of had a discussion
if we thought that was how we felt about the idea that you'd buy a CPU and it has all these
features, but perhaps they're locked behind a license file.
And in there, we discussed that in terms of implementation, there's essentially two new
devices or spots on the file system that get created by this, one that defines the features
and one that defines the license that enables them or not, roughly speaking.
This has provoked a lot of discussion with our audience, and I think we have continued
to get feedback about that, and so we just wanted to cover some of it and just recap
so that way everybody knew what we were talking about since it's been a few weeks now.
Yeah, Jan wrote in with some great insights into current licensing practices of Intel.
Jan writes, just listen to episode 4.6.0 of Linux Unplugged and want to let you know some
stuff about CPU licensing.
Intel has done this in the past with its Itanium lineup, which has died meanwhile.
It's also a very common thing on IBM's ZOS mainframes, where you basically buy CPU time,
even though you might have more CPUs installed physically in your box to run them on.
This does allow certain features.
You only pay X, and if you really do need the extra performance, say for a month, you
can get a temporary license, run the extra workload, and switch it off again for the
old price point.
I see a valid user case in the enterprise world, but for consumers, I do hope it doesn't
come to bite us in the butt.
Yeah, I think the most compelling argument I have heard has been, how does it affect
resale?
And we've been trying to figure out how that would work, like if you wipe an OS.
The insight that I kind of noticed here in James's email is, it does seem like the customer
activates it somehow with Intel servers in the previous system.
So maybe that exact infrastructure would be used.
Something similar, same infrastructure, same plan of attack.
I have been surprised the way they're handling all of this.
In terms of a company that is getting eaten on both ends by both AMD and by Apple right
now, you'd think they'd be on their messaging game.
You'd think they'd be out there.
I can't even really tell you the benefits of the 12th gen Intel.
I know they're more power efficient, but I can't really articulate them.
I don't know what their reasoning is, or positioning is, or what they claim the use case is for
the software defined features.
I mean, I've heard some of it.
If we didn't follow mailing list news about the kernel, we probably wouldn't even be talking
about this right now.
That's just it, right?
It's really weird.
I know we have listeners at Intel, and they're not trying to get us the download information
or nothing like that.
It's like they're just not talking about it, other than the very manufactured bits of information
we have gotten so far.
Small blurbs and such.
Yeah.
But we'll follow it.
And I think we'll keep reading your feedback on it.
So do keep sending it to linuxunplug.com contact because I think it's going to be a big deal,
but it's just not there yet.
And I think we have a little bit of time.
So I'd love to understand it before it actually arrives.
And now it is time for the boost.
Now for Chris's favorite part of the show, where he gets to wake up in the morning and
read all your boosts.
Marcel wrote in again five days ago with 1,969 sats.
Chris, have you figured this one out yet?
1969.
Well, the message gives this one away.
I was thinking of the year, but actually I picked this number because of the song.
Mostly I just like picking random numbers to hear Chris guess.
I love making you guess too.
I'm down for that actually.
I do enjoy it.
It's actually-
That's what you get for your boost fee.
I do actually like it.
I think you might have to guess some more down the line here.
Yeah, it looks like it.
We did get a boost in from Koss Peeland.
You know, also just aside, Koss has been supporting a lot of podcasting 2.0 compatible that take
the boosts.
And that's one of the really cool things about this community is sometimes I'm listening
to a completely different podcast and a totally different genre.
And I hear some of these same names come up and you guys are really the rock stars out
there.
So thank you so much.
So Koss writes in there, thanks for the show and the Seuss adventures.
Brent, why don't you give us an update?
How did the Seuss stuff go?
Did you end up sticking with Seuss?
Did you do something different?
What's the story?
Well, I ended up deciding to keep it on this podcasting appliance laptop that I have here
because I'm just curious how it's going to go even more long term.
I know that I gave you sort of the six month update or maybe that was more like eight months.
And I think we should give it another six months.
So far, so good.
Things look like they've improved for me.
The applications that weren't working are working just fine.
There is one little lingering package that hasn't solved itself, but maybe I'll get inspired
and fix that or maybe it'll just vanish.
We'll see.
Is this the machine I'm seeing you on or is this the machine I'm hearing you on?
Yeah, the one right in front of you.
So the one I'm hearing you on, though, that is a new Fedora install that's using pipewire
now.
Yeah, just recently I threw Fedora on there because you almost didn't give me a choice
and we wanted to try pipewire in the in our whole audio sort of pipeline.
Maybe that's the appropriate way to say it.
And so far, it's been working great.
We haven't had the hiccups that we've had previously.
I think pulse was just getting tired on my previous install and I think it's going to
enable us to do a bunch of really fancy stuff.
So I would love to hear from you guys what I should be throwing at really.
Well, can I just say that this is one of the things I love about Linux and a lot of times
we get pretty worked up about fragmentation and too much choice.
But here you were with a pretty solid long time to install and you were having I mean
during office hours, I think pulse crashed on you six times in that like two hour stream.
You having problems, which, to be fair, was a relatively new behavior, right?
Why it was happening, we didn't discover.
But I proposed that it was possible because it was a new behavior and because it was happening
more and more and more, I thought it was possible this was a hardware issue.
And so I said, you know, I just want you to be prepared for you may switch distros and
still have a problem.
However, we have been live for three hours and 20 minutes at this point right now and
you have not had a single audio server crash, right?
Yeah, it's true.
There was a moment earlier when you guys just weren't hearing me, but it turns out you had
me muted and it wasn't anything on my end.
So I got afraid there for a moment, but it turns out everything's fine.
It's been really solid.
And I you know, we've mentioned this before, pipeline has been sort of a dream of finding
stability pretty quickly in a relatively new stack.
And this is sort of proof in the pudding feels like we'll we'll see.
I'll run it for a few more weeks and really battle test it.
But I'm feeling pretty hopeful on this one.
B O O S T crimson rabbit boosted in three days ago with 5000 sats.
Is there any chance for Chris to come to London?
I would donate more sats to the cause.
Everyone else should too.
Oh, man.
We've all been called out by the rabbit over here.
So
Wow.
Yeah.
Okay.
How do I how do I?
Okay.
I really want this to happen.
I really do.
But I would really like it if if it wasn't just me if it was also you guys.
So there's that that that adds a layer of complexity.
I acknowledge.
But could you imagine if the three of us can all go to London together how fun that would
be?
Yeah, that would be fabulous.
Really?
Isn't that the way to do it?
I've never been.
Have you guys been?
No.
I've had I've had a layover in Heathrow.
And that's about it.
Yeah, I've been through Heathrow on my way to the Netherlands once.
And that's not enough of London.
I will admit I've never even been on a flight that long.
That is I think I could rock it though, because I just did it.
I did a six hour when I went to go visit Alex.
Fine, man.
Yeah.
So I honestly will booze you up.
We'll get you some good headphones.
You'll be fine.
One of my core skill sets is sitting on my ass all day.
And like it turns out I can do that in front of a computer.
I can do it on an airplane.
So you know, like I was good.
You know, Chris, the transcontinental airline experience is a whole upgrade compared to
this domestic stuff.
So I feel I feel like you're in for a treat.
I need the experience.
Like I feel like that's a box check for sure make Brent meet us here, right?
So then we could just like get the whole road to ourselves.
Yeah.
Oh, yeah.
This year is not going to work for me.
Just like, you know, costs are super high at the moment.
We have a road trip planned for like mid September.
We got a couple other things planned.
And so like, I budgeted right and I really can't go beyond that this year.
I really have to be careful.
But I would very, very, very much like to try to make this happen in 2023.
And the fact that we're going to have a meet up in August.
It's right now it's about 80 people, but I'm sure it'll be 100 by the time the meet
early.
Yeah.
That is great.
Because I want to try to do North Carolina more often, too.
We went down to North Carolina and I realized we had, you know, 200 person crew down there
that is willing to do meet ups with us and they were awesome indeed.
So I think we may get that signal from this London meet up too.
And then we can kind of start to plan and it's funny, you know, it's one of those things
where it just kind of builds incrementally.
And a lot of times it starts with the community as far as I know.
This started as a conversation in Discord between Alex and self-hosted community members.
That's great.
It really is.
You know, Chris, for this year, are you willing to ship a cardboard cutout of yourself with
maybe a Raspberry Pi with a speaker and a microphone?
I like that.
That's a nice.
Good work.
I like the whole Raspberry Pi aspect to it.
That that would be a fun project for the show.
Let's be honest.
Come on.
A little speaker right in my mouth.
I'll just like, you know.
I mean, we're about to have one.
That's true.
That is true.
User seventy four twenty three boosted in.
That's usually when they're when it's like a number like that.
It's just they haven't set their profile in Fountain.
They boosted with a thousand sats.
Hey, have you guys checked out the Nix Bitcoin node?
And also you guys are the best, Jimmy.
I had no idea this was a thing.
Please inform us.
I think Wes knows this, but this is how we started talking about Nix again.
Wes and I were trying to figure out when to do our next Nix segment.
What do you think, Wes?
Five years?
It's been a long time.
I mean, four or five years.
Yeah, at least we've been trying to figure out when we're going to do Nix.
I know it was before the Linux Academy acquisition.
Yeah, it's been a really definitely during that time.
Yeah.
During that time.
And now after.
And it's like how all this stuff works, right?
It's not until you have a project.
And you actually try it.
It's like Reaper, right?
Some stakes on the line.
Right.
It's like switching audio editors.
We couldn't really take Reaper seriously until we had a new project where we could just try
starting from scratch in Reaper.
Well, this is how I came to Nix is the Bitcoin node stuff, because I am a huge nerd for decentralized
computing.
Just frickin love it.
And they have a really good like Nix Bitcoin node package that you can just get going.
And it's solid.
And now that I'm really into the boost and all this stuff, I kind of think maybe I should
have gone that route.
But I ended up going Umbral just because I was trying a bunch of different stuff and
Umbral got me going so fast.
That's just what we stuck with.
But it's a pretty cool project.
Yeah.
You know, you can see something.
Maybe if you redid some stuff or wanted a little more robust of a setup or something
for the long term, more minimal could be a great option.
That's kind of what I think is there probably will be a point, maybe not.
Maybe I won't ever need to.
But there may be a point where I migrate to a more robust Nix based Bitcoin node, maybe
on, you know, more robust hardware and stuff like that, because this is this is running
on a older Dell, but it's a really nice high end like Xeon ECC memory, older Dell.
And it's running on Ubuntu 20.04.
And those are all fine.
Right.
Those are all fine things, but not really how I would probably do it today.
So it's in the back of my mind.
I have a follow up question there.
I'm curious if you know what it's doing under the hood.
Is this some Docker containers, the same kind of ideas Umbral under the hood, or is it just
doing it natively?
Wes, have you dug into this?
That's a great question.
No, I haven't actually looked at the implementation.
I seem to recall it's Podman when it does use containers.
But typically with these next stuff, there's really, you know, the beautiful thing is you
don't really need a container.
Right.
And that was the route I was going.
I was really trying to I was I have been thinking more and more about container free infrastructure.
And I think that's how I ended up at the next node stuff.
Yeah, it does look like a lot of just stuff all packaged up some extra modules and options
in here.
Well, Brent, I think maybe you'll just have to try it and play with it.
I might be the best way to find out.
Oh, I saw that coming.
I saw that.
Sounds like I'll have some extra laptops laying around.
I could just throw this on.
We'll see.
All right.
We have a special pick this week because it's a news relevant pick.
This is a release, one of those special releases that's been in the works for a year.
Jellyfin 10.8.0 has been released, a unusually long development cycle for Jellyfin, a bunch
of GPU acceleration stuff.
Yeah.
I know you've been over there trying to get your personal Jellyfin server upgraded.
How'd it go?
Just fine.
Back up and operational, pulled down the new Docker image, restarted it.
And yeah, now I'm back to watching TV.
And it's exciting because a while ago we tried out that new like watch together sync play
stuff.
That's seen a lot of fixes in this.
If you use DLNA, that's got a bunch of nice fixes, all kinds of streaming fixes.
And then yeah, as you mentioned, the hardware acceleration story just gets better and better.
Plus if you have it like trying to read from like a plain folder setup or you got info
files, that's a whole bunch better for parsing and integrating with that better subtitle
stuff all around a lot of nice things to see.
And yeah, it shouldn't be a big issue to upgrade.
I think you'd probably agree with this statement.
So you know, who knows, but I feel like we've reached that inflection point where the trend
line on Jellyfin and its rate of improvement is like greater than Plexus, right?
And Plexus is kind of on a little bit of the decline.
I say that with a lot of respect for Plex, but I think as they try to establish a business
model around streaming a little bit more and they have to focus on that stuff, they're
never really going to, they're not really going to get any more open, right?
They're not going to really get any more focused on your local stuff.
Yeah, yeah, you're right.
Like there's definitely still a lot to like about Plex obviously, and there's doing some
things that Jellyfin probably may never be able to compete with it in some regards.
But if you are focused on your local collection, you want free software, Jellyfin has been
getting really nice lately.
So 10.8.0, we'll have a link in the show notes, go check it out.
There's a post in there specifically to highlight all the new features.
I of course saw the GPU stuff and that's what I got excited about.
But I know there's a lot of other things in there too, including just nice performance
and bug fixes and all that kind of stuff.
Gentlemen, we did it.
This brings us right here to the end.
We did it.
Congratulations guys.
So we just recorded two episodes back to back.
In theory, I'll be back from Montana and we'll have a regular live stream next Sunday.
So I get to actually officially say, see you next week.
Same bat time, same bat station.
That's right.
JBlive.tv or of course all their live productions now at Jupiter.tube on our own PeerTube instance
in the federated universe where you can use a free software stack to watch your favorite
Linux content.
How great is that?
Our mumble room linuxunplug.com slash mumble.
Come join us live.
Get a low latency audio stream and chime in when you like.
And of course, don't miss Linux action news at linuxactionnews.com.
There's a lot going on every single week.
It's the companion right here and links to what we talked about linuxunplug.com slash
four six three.
Alright everyone, thanks so much for joining us on this week's episode of the unplugged
program and we'll see you right back here next Sunday.
Brian, that was such a great conversation.
Thank you for sharing that with us.
You're welcome.
I think I unfortunately realized when I was listening back that we hardly touched on any
of his deep breadth of, you know, experience because he has so much.
We kind of like picked one or two and then went into these really amazing philosophical
discussions around technology and how humans should interact with technology and stuff.
So I think we should probably have him back for another conversation at some point.
You're probably right.
Although I will say that some of the some of the topics I love on brunch the most.
So sorry.
Now where it's going to go.
Yeah, as far as a brunch chat goes, there's no menu.
It's just whatever the chef feels like cooking that day.
That's right choice.
We should say for sure, like the whole chat going to be worth listening to.
And if the timing works out, I get to listen to it on the way back, I think, right on my
drive back.
Oh, nice.
Oh, you plan this well for yourself.
Well done.
That'll be that'll be nice.
Yeah.
You can go to brunch.show for that.
