WEBVTT

00:00.000 --> 00:01.880
You know what, screw the pre-show.

00:01.880 --> 00:03.120
It's not the boss of us.

00:03.120 --> 00:03.720
Yeah.

00:03.720 --> 00:05.800
Or you could make the pre-show just you saying,

00:05.800 --> 00:07.680
I think we're going to skip the pre-show.

00:07.680 --> 00:09.180
Yeah, but that's so cliche.

00:09.180 --> 00:10.060
We shouldn't do that.

00:10.060 --> 00:11.260
We've got to stop doing that.

00:11.260 --> 00:13.040
Just admit you're failing, Chris.

00:13.040 --> 00:13.920
No, I could.

00:13.920 --> 00:14.480
I could.

00:14.480 --> 00:16.880
I could come up with a pre-show if I wanted to.

00:16.880 --> 00:17.880
If I wanted to.

00:17.880 --> 00:19.080
I'm sure I could, you know?

00:19.080 --> 00:20.880
But I figure, why bother?

00:20.880 --> 00:22.400
You know what, who needs a pre-show?

00:22.400 --> 00:24.120
Nobody needs a pre-show.

00:24.120 --> 00:26.200
You know, pre-show, it's not even the actual show.

00:26.200 --> 00:28.200
So if it was, we'd put it in the show.

00:28.200 --> 00:29.280
So we might as well just get rid of it.

00:29.280 --> 00:31.200
These folks just want extra free show.

00:31.200 --> 00:32.120
That's not fair.

00:32.120 --> 00:32.620
I know.

00:32.620 --> 00:43.640
Hello, friends, and welcome back to your weekly Linux talk show.

00:43.640 --> 00:44.480
My name is Chris.

00:44.480 --> 00:45.480
My name is Wes.

00:45.480 --> 00:46.720
Hello, Wes.

00:46.720 --> 00:47.360
Guess what?

00:47.360 --> 00:47.860
What?

00:47.860 --> 00:48.600
Big news.

00:48.600 --> 00:50.680
This episode's brought to you by the all new Cloud

00:50.680 --> 00:52.320
Guru, the leader in learning for Cloud Linux

00:52.320 --> 00:53.800
and other modern tech skills.

00:53.800 --> 00:55.760
Hundreds of courses, thousands of hands-on labs.

00:55.760 --> 00:57.520
Get certified, get hired, get learning

00:57.520 --> 01:00.320
at acloudguru.com.

01:00.320 --> 01:04.040
Coming up on today's episode, this is one of those episodes.

01:04.040 --> 01:05.960
This is one of those.

01:05.960 --> 01:07.080
It's one of those, really.

01:07.080 --> 01:07.920
You know what?

01:07.920 --> 01:10.040
I don't even need to say more than that, but I'm going to.

01:10.040 --> 01:12.080
It might just be one of the most exciting releases

01:12.080 --> 01:12.720
in a long time.

01:12.720 --> 01:15.720
Fedora 34 is out today as we record.

01:15.720 --> 01:17.800
And we have a comprehensive review coming up.

01:17.800 --> 01:22.120
But loads of new tech are packed into this Fedora release

01:22.120 --> 01:26.120
beyond just GNOME 40, which is big on its own.

01:26.120 --> 01:28.000
And basically, all of it that we're

01:28.000 --> 01:30.600
going to talk about today will be coming to a distribution

01:30.600 --> 01:32.520
near you very soon.

01:32.520 --> 01:35.400
Plus, as always, we've got some community news,

01:35.400 --> 01:37.160
some pics, and more.

01:37.160 --> 01:39.080
So before I get into any of that,

01:39.080 --> 01:41.000
I got to holla at that virtual lug.

01:41.000 --> 01:42.720
Time appropriate greetings, Mumble Room.

01:42.720 --> 01:43.220
Hello.

01:43.220 --> 01:43.720
Hello.

01:43.720 --> 01:45.440
How's it going?

01:45.440 --> 01:47.000
We've got a strong group today.

01:47.000 --> 01:47.680
Yeah.

01:47.680 --> 01:48.480
Look at that.

01:48.480 --> 01:50.400
Jeez, how'd you all fit in here?

01:50.400 --> 01:51.120
Wow.

01:51.120 --> 01:53.720
You know, this is why we had to get the mega studio.

01:53.720 --> 01:55.880
Because all the social distancing and whatnot,

01:55.880 --> 01:57.800
we needed the 40,000 square feet.

01:57.800 --> 01:59.120
And the room for the grills.

01:59.120 --> 02:00.240
Right, of course.

02:00.240 --> 02:02.840
Let's get into some community news.

02:02.840 --> 02:06.080
And this week, we wanted to talk a little bit

02:06.080 --> 02:09.920
about this University of Minnesota kernel ban story.

02:09.920 --> 02:12.760
Please do check out Linux Action News 186, where we

02:12.760 --> 02:14.080
went into some details there.

02:14.080 --> 02:16.600
But if you didn't know, I want to make

02:16.600 --> 02:19.140
sure we cover some of this in this here episode.

02:19.140 --> 02:23.560
Because this is a very thick and complicated story

02:23.560 --> 02:28.360
with a lot of finger pointing and mail list posts to read.

02:28.360 --> 02:30.600
And if you didn't know the details,

02:30.600 --> 02:33.360
you might not fully understand and appreciate

02:33.360 --> 02:35.320
the scale of this problem.

02:35.320 --> 02:38.520
You might maybe just sort of brush it off as drama

02:38.520 --> 02:40.980
or just sort of not even really pay attention.

02:40.980 --> 02:43.720
But there is a real problem here.

02:43.720 --> 02:46.760
Three hypocrite patches, as they are called by the researchers,

02:46.760 --> 02:50.780
made it into the Linux kernel around August of 2020.

02:50.780 --> 02:53.320
If you didn't know that, you should be listening to LAN.

02:53.320 --> 02:54.920
Because I think a lot of people right now

02:54.920 --> 02:57.480
think that nothing made it, that a maintainer caught something

02:57.480 --> 03:00.920
in April and rejected it, and these patches never made it in.

03:00.920 --> 03:02.440
But that's actually not the case.

03:02.440 --> 03:04.080
In fact, there's really no evidence

03:04.080 --> 03:05.520
that indicates the patch in April

03:05.520 --> 03:08.120
is linked to these hypocrite patches at all.

03:08.120 --> 03:11.460
So it's a great example of why Wes and I go above and beyond

03:11.460 --> 03:12.920
to really try to get the facts right.

03:12.920 --> 03:15.000
I contacted Greg KH directly to try

03:15.000 --> 03:17.080
to get some of the details as accurate as possible

03:17.080 --> 03:18.320
for the story.

03:18.320 --> 03:21.680
And one thing that I feel like hasn't been properly talked

03:21.680 --> 03:25.320
about is a pretty valid concern that was going

03:25.320 --> 03:26.760
to be raised by the research.

03:26.760 --> 03:28.920
Super quick recap, Wes, you totally correct me

03:28.920 --> 03:31.160
if I'm wrong, just jump right in.

03:31.160 --> 03:33.400
But if you're not familiar with the story, back in August

03:33.400 --> 03:36.400
of 2020, some researchers at the University of Minnesota

03:36.400 --> 03:40.460
around that time submitted a series of stealthy fixes

03:40.460 --> 03:43.860
that weren't really fixes that when combined actually

03:43.860 --> 03:46.380
sort of created a vulnerability, but not necessarily

03:46.380 --> 03:48.280
each individually on their own.

03:48.280 --> 03:50.440
And three of those patches were accepted

03:50.440 --> 03:52.880
by the maintainer of that particular subsystem

03:52.880 --> 03:55.620
into the Linux kernel in August of 2020-ish time.

03:55.620 --> 03:57.400
We don't actually have all the details yet.

03:57.400 --> 03:59.880
That's one of the things the Linux Foundation is asking for.

03:59.880 --> 04:01.960
And it is a little nuanced because it sort of relied

04:01.960 --> 04:03.640
on the workflow of the maintainers.

04:03.640 --> 04:05.040
They weren't looking for the code

04:05.040 --> 04:06.960
to actually make it into a git tree.

04:06.960 --> 04:08.120
They were just looking for the maintainer

04:08.120 --> 04:10.560
to sign off on it saying, like, yeah, this looks good.

04:10.560 --> 04:11.360
Right.

04:11.360 --> 04:13.640
They never shipped like a distro or even making it

04:13.640 --> 04:14.780
a Linus's tree, right?

04:14.780 --> 04:17.000
It wasn't like it never made it that far.

04:17.000 --> 04:19.280
And I think it's also worth mentioning just as a side note

04:19.280 --> 04:21.560
here, my understanding is, again,

04:21.560 --> 04:23.680
the university has not given us all the details yet.

04:23.680 --> 04:26.360
But my understanding is when the maintainer accepted

04:26.360 --> 04:29.120
the patches, the university actually reached out and went,

04:29.120 --> 04:31.400
oh, oh, actually, we just caught the mistake.

04:31.400 --> 04:33.400
Here's the actual patch instead, and then sent them

04:33.400 --> 04:34.000
working code.

04:34.000 --> 04:35.480
That's their claim.

04:35.480 --> 04:37.280
I don't know how true that is.

04:37.280 --> 04:39.680
But that is important to understand.

04:39.680 --> 04:43.160
So then we fast forward to April of 2021

04:43.160 --> 04:45.380
when a PhD student submitted a patch,

04:45.380 --> 04:46.920
and it was rejected by the maintainer

04:46.920 --> 04:48.640
for being just crap code.

04:48.640 --> 04:50.320
And not really fixing anything, right?

04:50.320 --> 04:51.720
Well, you're saying you're fixing

04:51.720 --> 04:53.580
this use after free thing, but we've already

04:53.580 --> 04:54.840
taken care of that elsewhere.

04:54.840 --> 04:55.920
This doesn't do anything.

04:55.920 --> 04:56.520
Right.

04:56.520 --> 04:59.600
And so there was a little bit of suspicion about,

04:59.600 --> 05:00.860
like, why did you submit this?

05:00.860 --> 05:03.920
Because your university has a history here

05:03.920 --> 05:06.780
of kind of screwing with the kernel for your own research,

05:06.780 --> 05:08.520
and now you submit me this patch that

05:08.520 --> 05:10.080
looks kind of like garbage.

05:10.080 --> 05:12.200
This is either just you not knowing what you're doing,

05:12.200 --> 05:13.440
or malicious.

05:13.440 --> 05:15.640
And so that triggered a series of events

05:15.640 --> 05:18.680
that eventually led to the University of Minnesota

05:18.680 --> 05:20.320
from being banned to contribute to the kernel,

05:20.320 --> 05:21.920
and the kernel team going through and reviewing

05:21.920 --> 05:24.520
any patch they've ever made, and the Linux Foundation

05:24.520 --> 05:27.080
sending the university a letter saying,

05:27.080 --> 05:29.200
you need to tell us about every patch you've ever

05:29.200 --> 05:31.200
committed to open source projects, period,

05:31.200 --> 05:32.720
and you need to kill that paper.

05:32.720 --> 05:34.640
Essentially, you need to shut that paper down

05:34.640 --> 05:37.080
that you are about to announce in less than a month

05:37.080 --> 05:39.600
at the IEEE convention that happens virtually

05:39.600 --> 05:41.880
on May 23rd through the 25th.

05:41.880 --> 05:43.440
You got to shut that paper down.

05:43.440 --> 05:46.080
Because the researchers were writing a paper essentially

05:46.080 --> 05:47.700
about doing these hypocrite patches,

05:47.700 --> 05:50.400
about how they could gain the trust of open source

05:50.400 --> 05:53.560
developers, and then trick them into accepting bogus code

05:53.560 --> 05:55.800
to build a vulnerability via multiple patches.

05:55.800 --> 05:57.920
And they were going to write a paper, and they did,

05:57.920 --> 05:59.680
and they were going to publish it.

05:59.680 --> 06:00.340
It's all done.

06:00.340 --> 06:01.640
It's written.

06:01.640 --> 06:03.760
That's not what the recent news is about.

06:03.760 --> 06:06.720
The recent news is just sort of perfectly timed

06:06.720 --> 06:08.520
so that when that paper does announce,

06:08.520 --> 06:09.760
or they're going to have to kill it,

06:09.760 --> 06:11.200
that paper is dead, basically.

06:11.200 --> 06:13.760
The news is perfectly timed to kill the news story that

06:13.760 --> 06:16.880
was about to be landing as a bit of a bombshell,

06:16.880 --> 06:19.440
potentially, around the end of May.

06:19.440 --> 06:21.680
And the question that I think the researchers

06:21.680 --> 06:24.880
were trying to raise is, in one part, no duh.

06:24.880 --> 06:26.560
If you trick somebody for a while

06:26.560 --> 06:29.160
and then you stealthily slip in bogus code that

06:29.160 --> 06:31.200
builds to a vulnerability, I think

06:31.200 --> 06:34.600
even without doing any studies, pretty good guess,

06:34.600 --> 06:37.120
you could probably get that pass to maintainer.

06:37.120 --> 06:38.780
But what about that problem?

06:38.780 --> 06:41.760
It's truly possible it could happen at Microsoft, or Apple,

06:41.760 --> 06:44.720
or Oracle, or some other proprietary organization.

06:44.720 --> 06:46.120
Absolutely.

06:46.120 --> 06:48.080
But it's not as easy, because there's

06:48.080 --> 06:50.600
going to be, in the case of the Mac OS kernel,

06:50.600 --> 06:53.180
about four people at Apple that are allowed to actually commit

06:53.180 --> 06:54.240
that code.

06:54.240 --> 06:56.880
And so you'd have to compromise one of those four people,

06:56.880 --> 06:59.760
at least their GPG key.

06:59.760 --> 07:02.760
And on top of that, there is a clear repercussion system

07:02.760 --> 07:05.640
in place if somebody were to make a compromise like that.

07:05.640 --> 07:07.040
It's not impossible.

07:07.040 --> 07:11.200
But it's much harder to happen with a Windows kernel

07:11.200 --> 07:12.680
or the Mac OS kernel.

07:12.680 --> 07:15.760
And then imagine for a moment if this was something higher up

07:15.760 --> 07:19.160
in the stack, if this wasn't a kernel,

07:19.160 --> 07:22.240
if this was maybe NGINX, or something even higher up

07:22.240 --> 07:24.280
in the stack in the user land that really

07:24.280 --> 07:25.640
doesn't have as many eyes.

07:25.640 --> 07:28.480
Could it be just a common library that you have, right?

07:28.480 --> 07:31.040
Who really cares what gets merged into left pad?

07:31.040 --> 07:33.000
And so what do we do about this problem, Wes?

07:33.000 --> 07:34.080
Because it's there.

07:34.080 --> 07:36.320
It's probably not super critical,

07:36.320 --> 07:38.600
because in reality, it would eventually be caught.

07:38.600 --> 07:39.820
It would be worked out.

07:39.820 --> 07:41.320
The way the systems and tools work,

07:41.320 --> 07:43.160
we'd know when it was committed and who committed it

07:43.160 --> 07:44.580
and every commit they'd ever made.

07:44.580 --> 07:46.760
So there are tools in place in that regard.

07:46.760 --> 07:49.760
But doesn't it seem like there should be something in place,

07:49.760 --> 07:52.920
screening or doing some kind of automated checking

07:52.920 --> 07:55.720
at best we can to see if what they claim it does,

07:55.720 --> 07:56.800
it even does?

07:56.800 --> 08:00.640
Well, to some degree, there are some automated tooling.

08:00.640 --> 08:03.440
I think the question of can we have more things that help,

08:03.440 --> 08:04.640
that's always true.

08:04.640 --> 08:05.760
We have to think about it.

08:05.760 --> 08:07.120
There's just bugs that get merged,

08:07.120 --> 08:10.160
both malicious and accidental.

08:10.160 --> 08:12.920
That's a problem that happens in all software

08:12.920 --> 08:15.480
and in the kernel as well.

08:15.480 --> 08:17.800
I think we need some more research to help understand,

08:17.800 --> 08:19.800
what's the scope of this problem?

08:19.800 --> 08:22.760
And how does the maintainership process really work?

08:22.760 --> 08:25.840
I think scholarship around that and what's happening there

08:25.840 --> 08:28.000
is worthwhile, just clearly not in the way

08:28.000 --> 08:29.160
these researchers did it.

08:29.160 --> 08:30.040
No kidding.

08:30.040 --> 08:33.040
Talk about messing around with a development team

08:33.040 --> 08:35.160
that has very limited time and resources

08:35.160 --> 08:37.200
and messing around with software that literally

08:37.200 --> 08:41.200
ships in mission-critical, life-critical applications.

08:41.200 --> 08:44.320
There is satisfying intellectual curiosity,

08:44.320 --> 08:45.760
and then there is crossing the line.

08:45.760 --> 08:48.440
And I agree with the kernel team that from the evidence

08:48.440 --> 08:50.680
that's available to us at this time, in my opinion,

08:50.680 --> 08:52.400
they definitely crossed the line.

08:52.400 --> 08:54.400
And they are right to ban future development

08:54.400 --> 08:55.720
until they sort this whole thing out.

08:55.720 --> 08:57.400
They've been sent a letter.

08:57.400 --> 09:01.160
The Linux Foundation has made reasonable requests,

09:01.160 --> 09:02.440
in my opinion.

09:02.440 --> 09:07.320
And now it's really kind of the balls in the university's court.

09:07.320 --> 09:10.360
They released on the 24th of April an apology.

09:10.360 --> 09:13.720
But the apology sort of just says, well,

09:13.720 --> 09:16.080
if I'd asked you for the cookie, you would have said no,

09:16.080 --> 09:17.480
so I just took the cookie.

09:17.480 --> 09:19.400
And so I know I shouldn't have taken the cookie,

09:19.400 --> 09:21.640
but I really wanted the cookie, is essentially

09:21.640 --> 09:23.120
what their apology says.

09:23.120 --> 09:23.920
Not good enough.

09:23.920 --> 09:25.880
No, and a lot of folks pointed out

09:25.880 --> 09:27.960
that, well, you could have tried to come up

09:27.960 --> 09:29.400
with other methodologies.

09:29.400 --> 09:32.360
And then there's just sort of the arrogance or isolation

09:32.360 --> 09:35.480
of researchers in academia who need to publish.

09:35.480 --> 09:36.320
They have an idea.

09:36.320 --> 09:37.640
They think they just want to go about it.

09:37.640 --> 09:39.360
Clearly, they didn't give that much thought

09:39.360 --> 09:42.320
to how to get the institutional review or what level

09:42.320 --> 09:44.760
or really what the potential consequences of that work

09:44.760 --> 09:45.720
might be.

09:45.720 --> 09:49.120
And I think there's also sort of a trust between academia

09:49.120 --> 09:52.680
and open source, because there's a lot of principles shared

09:52.680 --> 09:54.480
there and a lot of shared history.

09:54.480 --> 09:57.200
So that's just even more rude.

09:57.200 --> 10:00.720
Yeah, and not to bang this drum too much,

10:00.720 --> 10:02.880
but the details are in Linux Action News 186.

10:02.880 --> 10:04.840
And the reason why I'm hitting that drum so hard

10:04.840 --> 10:07.000
is Wes and I spent our entire Sunday

10:07.000 --> 10:10.000
getting the details of that story as accurate as we could.

10:10.000 --> 10:11.920
Listening back, I'm pretty happy with it.

10:11.920 --> 10:14.000
I think I would have likened maybe one more

10:14.000 --> 10:19.400
crack at covering it, but we spent all day on it

10:19.400 --> 10:21.120
on a Sunday to get that story right.

10:21.120 --> 10:23.440
And so the details, I think, matter in this one,

10:23.440 --> 10:25.320
because there's multiple timelines.

10:25.320 --> 10:27.280
There's multiple he said, she said.

10:27.280 --> 10:30.800
And so it is a fascinating topic, and the bigger question

10:30.800 --> 10:32.960
it raises, I think, is worth considering.

10:32.960 --> 10:36.040
And we should say, I think that question is being considered,

10:36.040 --> 10:38.120
maybe not as much as it showed or not as publicly.

10:38.120 --> 10:40.440
But you did see in the mailing list,

10:40.440 --> 10:42.800
there were even conversations around people asking,

10:42.800 --> 10:44.840
how much review do you give to these folks?

10:44.840 --> 10:47.320
Some maintainers saying, oh, someone like that,

10:47.320 --> 10:48.320
I'd be very skeptical.

10:48.320 --> 10:50.880
And others saying, well, we have to admit many of us

10:50.880 --> 10:53.080
are very busy maintainers, and if the code looks good,

10:53.080 --> 10:54.000
we might just merge it.

10:54.000 --> 10:56.720
So I think there's also a cultural thing at play

10:56.720 --> 10:58.840
beyond tooling, and that conversation

10:58.840 --> 10:59.600
should happen too.

10:59.600 --> 11:01.520
And while all of this is going on, of course,

11:01.520 --> 11:03.760
business still is normal, usual.

11:03.760 --> 11:05.880
Development continues for the Linux kernel,

11:05.880 --> 11:09.480
and version 5.12 was released this weekend.

11:09.480 --> 11:12.440
And Linux can now run as a root partition on Hyper-V.

11:12.440 --> 11:14.800
There's also more support for that lightweight hypervisor

11:14.800 --> 11:18.560
Acorn, as well as some RISC-V support landing.

11:18.560 --> 11:21.920
Broadcom's VK video accelerators, instead of CPU

11:21.920 --> 11:24.040
load, can now be chip-based.

11:24.040 --> 11:27.800
Support for the PlayStation controller for PS5,

11:27.800 --> 11:30.280
Nintendo 64, and more all land.

11:30.280 --> 11:31.800
Nintendo 64 console's in there too,

11:31.800 --> 11:34.040
which we noted on LAN as well, but just hilarious.

11:34.040 --> 11:36.880
That thing runs at like 94 megahertz.

11:36.880 --> 11:39.960
You could just swap it in for a couple of your pies, right?

11:39.960 --> 11:41.880
You don't need more than eight megs of RAM.

11:41.880 --> 11:43.560
You know what I found fascinating, though,

11:43.560 --> 11:46.080
around 5.12, Wes, was actually just some of the details

11:46.080 --> 11:47.600
of what make up a kernel.

11:47.600 --> 11:50.320
So if you look at it, in some senses,

11:50.320 --> 11:53.600
Linux 5.12 was one of the slowest development cycles

11:53.600 --> 11:58.240
we have seen in the kernel since version 5.6, which was not

11:58.240 --> 12:00.240
released that long ago, about a year ago.

12:00.240 --> 12:01.520
But there's still plenty of things that landed,

12:01.520 --> 12:02.360
like we mentioned.

12:02.360 --> 12:04.600
And you still have some serious numbers here.

12:04.600 --> 12:09.720
1,873 developers contributed to Linux 5.12.

12:09.720 --> 12:12.880
262 of those were first-time contributors.

12:12.880 --> 12:14.460
That's about an average number, but it's

12:14.460 --> 12:15.360
pretty neat to see that.

12:15.360 --> 12:15.880
Oh, yeah.

12:15.880 --> 12:17.200
No, that is nice to see.

12:17.200 --> 12:19.480
Of course, on the other side, there's some heavy hitters.

12:19.480 --> 12:22.000
Folks like Lee Jones, who was the most active chainset

12:22.000 --> 12:25.080
contributor this time around, working on compiler stuff,

12:25.080 --> 12:27.480
docs, and warnings throughout the tree.

12:27.480 --> 12:31.960
Chris Wilson doing a lot of work on the Intel i915 graphics

12:31.960 --> 12:35.360
driver, which, hey, as an Intel user, I appreciate that.

12:35.360 --> 12:37.340
And Christopher Helwig continues to clean up

12:37.340 --> 12:40.160
the code in the block layer and file systems.

12:40.160 --> 12:41.240
Also important work.

12:41.240 --> 12:42.400
Yeah, that looks really good.

12:42.400 --> 12:44.220
And it's nice to see the IOU ring subsystem

12:44.220 --> 12:45.120
get some improvements.

12:45.120 --> 12:46.720
The network subsystem is in there,

12:46.720 --> 12:48.920
as well as some cleanup code in the block layer and file

12:48.920 --> 12:49.740
systems.

12:49.740 --> 12:51.780
So it's a good, solid kernel in there.

12:51.780 --> 12:53.840
It's a handsome kernel, you might say.

12:53.840 --> 12:56.720
And it was supported by 211 different employers

12:56.720 --> 12:59.080
that LWN was able to identify.

12:59.080 --> 13:01.440
So LWN went in and looked at this stat.

13:01.440 --> 13:04.840
They say it's a small decrease, but the top contributor

13:04.840 --> 13:10.000
by chainsets in 5.12 is Intel at 10.9% of the changes.

13:10.000 --> 13:12.160
Interestingly, though, by lines changed,

13:12.160 --> 13:16.160
Lonaro is at the top with 17.4%.

13:16.160 --> 13:19.280
When you go by the pure number of lines of code change,

13:19.280 --> 13:21.280
Lonaro was really crushing it this time.

13:21.280 --> 13:23.920
I guess just due to a flurry of code removal patches

13:23.920 --> 13:25.200
that they sent out this time.

13:25.200 --> 13:27.280
All right, keeping things clean, I like that.

13:27.280 --> 13:27.960
That counts, man.

13:27.960 --> 13:28.920
That counts.

13:28.920 --> 13:32.400
Unknown represents 7.7% of changes

13:32.400 --> 13:34.620
by just looking at chainsets.

13:34.620 --> 13:36.760
And then in the number three slot

13:36.760 --> 13:40.520
is Red Hat with 872 chainsets.

13:40.520 --> 13:42.200
Red Hat's also in the number three slot

13:42.200 --> 13:43.840
when you look at just lines changed,

13:43.840 --> 13:48.480
with 38,000 lines of code changed just in this kernel.

13:48.480 --> 13:50.920
Oh my god.

13:50.920 --> 13:54.160
Wow, that's just the scale, Wes.

13:54.160 --> 13:57.000
The scale of this project and the fact

13:57.000 --> 13:59.080
that they managed to ship and ship reliably

13:59.080 --> 14:03.280
and produce something usable is, well, it needs to be,

14:03.280 --> 14:05.440
it's going to have to be studied by historians at some point.

14:05.440 --> 14:06.140
Well, yeah, right?

14:06.140 --> 14:09.100
That's kind of why some scholarship is warranted here,

14:09.100 --> 14:11.480
because they incorporate a huge number of changes

14:11.480 --> 14:13.360
in a reliable way, in a predictable way.

14:13.360 --> 14:15.800
I mean, we're going to be running a pretty new kernel

14:15.800 --> 14:17.200
with 5.11 here on Fedora.

14:17.200 --> 14:19.240
And I'm not worried about that at all,

14:19.240 --> 14:21.200
and I wouldn't really be worried about switching

14:21.200 --> 14:22.200
to 5.12 today either.

14:22.200 --> 14:24.760
Yeah, in fact, 5.13 is shaping up to be a big boy.

14:24.760 --> 14:27.760
Torvalds wrapped up the announcement of 5.12

14:27.760 --> 14:32.680
by kind of prepping people for the size and scale of 5.13.

14:32.680 --> 14:34.720
He says, quote, please spend a bit of time

14:34.720 --> 14:37.920
running and checking out 5.12 before we start sending

14:37.920 --> 14:39.240
a merge request for 5.13.

14:39.240 --> 14:42.960
Because despite the extra week, this 5.12

14:42.960 --> 14:44.900
was actually a fairly small release overall.

14:44.900 --> 14:47.560
And judging by the Linux Dash next tree,

14:47.560 --> 14:51.360
5.13 is going to be making up for it.

14:51.360 --> 14:53.600
And in 5.13, as just a reminder, we're

14:53.600 --> 14:57.640
going to get initial support for Apple's M1 chips,

14:57.640 --> 14:59.480
the addition of a new wireless WAN

14:59.480 --> 15:05.080
subsystem, more RISC-V support, and Intel's standalone GPUs,

15:05.080 --> 15:06.200
if they ever ship.

15:06.200 --> 15:09.320
Well, 5.13 will have support for them.

15:09.320 --> 15:10.200
Just can't wait.

15:10.200 --> 15:11.480
Yeah, you know what, Wes?

15:11.480 --> 15:13.480
You look at this and you go, there

15:13.480 --> 15:15.440
is so much happening in kernel land

15:15.440 --> 15:18.300
that by the time you could actually get caught up,

15:18.300 --> 15:19.880
by the time you get to a distro, it's

15:19.880 --> 15:22.320
like a whole other generation of hardware is out.

15:22.320 --> 15:24.720
The kernel team, though, just continues to just crush it.

15:24.720 --> 15:28.120
And to get, again, some of this RISC-V stuff and Intel stuff

15:28.120 --> 15:32.580
in and the M1 stuff in, years maybe, in some cases,

15:32.580 --> 15:35.120
before anybody needs it, is going to lay some groundwork

15:35.120 --> 15:35.880
for the future.

15:35.880 --> 15:37.320
Can't stop, won't stop.

15:40.000 --> 15:42.760
Linode.com slash unplugged.

15:42.760 --> 15:44.440
Head over there and check out Linode.

15:44.440 --> 15:46.760
They're our hosting provider, and everything

15:46.760 --> 15:48.920
we've built in the last couple of years is on Linode.

15:48.920 --> 15:50.840
So you go to linode.com slash unplugged

15:50.840 --> 15:54.120
to get a $100, 60-day credit towards your new account.

15:54.120 --> 15:57.240
And of course, you support the show at linode.com slash

15:57.240 --> 15:58.120
unplugged.

15:58.120 --> 16:01.040
Unlike entry-level hosting providers or the big clouds

16:01.040 --> 16:03.760
like AWS that try to tie your hands and lock you down,

16:03.760 --> 16:06.480
Linode gives you the tools to get the most out

16:06.480 --> 16:08.320
of their crazy fast systems.

16:08.320 --> 16:10.080
You get 11 data centers to choose from,

16:10.080 --> 16:12.580
and every service level is backed by the best customer

16:12.580 --> 16:15.000
support in the business.

16:15.000 --> 16:16.380
And that really matters.

16:16.380 --> 16:18.520
I mean, that really matters.

16:18.520 --> 16:21.520
It makes all of the difference when you're in a tight spot.

16:21.520 --> 16:23.760
And it's not just like one great thing

16:23.760 --> 16:26.800
like the support that makes Linode fantastic

16:26.800 --> 16:29.720
and our go-to choice for anything we're building.

16:29.720 --> 16:32.800
It's all of the great things about Linode coming together

16:32.800 --> 16:34.560
that make them special.

16:34.560 --> 16:37.120
And at every step of the way since 2003,

16:37.120 --> 16:39.460
Linode has asked themselves, how can we

16:39.460 --> 16:42.480
use Linux to accomplish this next task?

16:42.480 --> 16:45.080
How can we use Linux to do what we want in a way

16:45.080 --> 16:46.960
that people are not yet using it?

16:46.960 --> 16:49.720
Their love and dedication to that is baked into the product.

16:49.720 --> 16:51.960
And as a long-timer, I can tell it.

16:51.960 --> 16:54.360
And that's something I really love about Linode.

16:54.360 --> 16:56.400
And if you're not catching Linode's new tutorials

16:56.400 --> 16:58.840
by HackerSploit, you're missing out on something great,

16:58.840 --> 16:59.800
some chances to learn.

16:59.800 --> 17:01.560
I'll put a link in the show notes

17:01.560 --> 17:04.240
to a video on learning the various tools and commands

17:04.240 --> 17:05.560
for logging and monitoring.

17:05.560 --> 17:07.160
These are some great basics.

17:07.160 --> 17:09.680
And if you can learn that from a YouTube video in like 15

17:09.680 --> 17:12.680
minutes, well, that's going to change your server game.

17:12.680 --> 17:15.760
So get started by going over to linode.com slash unplugged.

17:15.760 --> 17:18.340
Get that $100 for your new account.

17:18.340 --> 17:19.880
And try this stuff out.

17:19.880 --> 17:21.680
Try out the object storage.

17:21.680 --> 17:23.360
This could be an amazing way to get

17:23.360 --> 17:26.520
your configs, your server stuff, off-site

17:26.520 --> 17:30.400
in a system that's in the cloud, that's reliable, that's fast,

17:30.400 --> 17:33.360
but doesn't require running an entire server in front of it.

17:33.360 --> 17:35.800
Go build something, or maybe learn something.

17:35.800 --> 17:38.640
With that $100, there's a lot you can get access to.

17:38.640 --> 17:41.280
So go to linode.com slash unplugged.

17:41.280 --> 17:43.160
There's a lot of ways to host something.

17:43.160 --> 17:45.760
And there's a lot of various companies

17:45.760 --> 17:47.440
that will do it for you.

17:47.440 --> 17:50.960
Go see why we choose Linode every time.

17:50.960 --> 17:53.360
Linode.com slash unplugged.

17:56.600 --> 17:59.280
So Flatpak has a new version that's in the works.

17:59.280 --> 18:01.900
So you have an interim release as they develop stuff.

18:01.900 --> 18:04.900
And then we're going to have the final release that

18:04.900 --> 18:07.580
is the actual stable version for end users.

18:07.580 --> 18:11.600
And the development version is 1.1.1.1.

18:11.600 --> 18:13.460
And the release version that we'll actually

18:13.460 --> 18:17.120
get our hands on eventually is going to be 1.1.2.

18:17.120 --> 18:18.520
And why am I telling you about this?

18:18.520 --> 18:20.500
Because this is actually the first time

18:20.500 --> 18:24.800
we've ever covered a Flatpak interim release on the show.

18:24.800 --> 18:26.780
But this time, they're taking a few steps

18:26.780 --> 18:28.080
towards something kind of cool.

18:28.080 --> 18:31.240
Yeah, they have some notable feature changes already

18:31.240 --> 18:34.920
in just 0.1 here, one of which that's worth mentioning

18:34.920 --> 18:37.760
is allowing sub-sandboxes to have

18:37.760 --> 18:41.600
a different slash user or slash app.

18:41.600 --> 18:42.600
Why would you want that?

18:42.600 --> 18:45.320
Well, right now, initially, it's being

18:45.320 --> 18:48.800
used by the Flatpak Steam effort to launch games

18:48.800 --> 18:51.480
within its own container runtime showing up

18:51.480 --> 18:53.240
with a replaced slash user.

18:53.240 --> 18:54.920
That's why they need the new feature.

18:54.920 --> 18:57.400
Basically, the goal is to be able to handle the Steam Linux

18:57.400 --> 18:59.960
runtime within a Flatpak sandboxed environment

18:59.960 --> 19:02.040
and sort of merge those two systems together.

19:02.040 --> 19:03.360
Whoa.

19:03.360 --> 19:05.280
My mind is blown by this.

19:05.280 --> 19:06.560
And it's not just that, too.

19:06.560 --> 19:09.760
Flatpak's also working on support for better command line

19:09.760 --> 19:12.340
text user interface type programs,

19:12.340 --> 19:15.300
like the Nano Text Editor was specifically mentioned.

19:15.300 --> 19:17.440
So that's pretty great.

19:17.440 --> 19:19.320
To make it clear here, they're making

19:19.320 --> 19:22.320
it possible to support Steam's pressure vessel.

19:22.320 --> 19:24.900
They're not using pressure vessel.

19:24.900 --> 19:26.000
They're making it possible.

19:26.000 --> 19:28.880
And that's Valve's project to put Linux runtimes

19:28.880 --> 19:33.040
in containers to make old libraries and whatnot available

19:33.040 --> 19:36.360
to games, even on newer OS releases.

19:36.360 --> 19:38.920
And unlike certain other use cases for containers,

19:38.920 --> 19:42.600
that one, the pressure vessel, the pressure vessel stuff

19:42.600 --> 19:45.880
is just for compatibility with old games.

19:45.880 --> 19:47.800
They're not really trying to get security right.

19:47.800 --> 19:50.800
They're not really bothering about sandboxing.

19:50.800 --> 19:54.080
The idea is that you could ship this stuff inside a Steam

19:54.080 --> 19:57.360
Flatpak and have support for these containers

19:57.360 --> 20:03.480
and do all of it with bubble wrap and a universal package,

20:03.480 --> 20:04.360
I suppose.

20:04.360 --> 20:06.000
The idea is pretty neat.

20:06.000 --> 20:08.160
It feels a bit like turtles all the way down to me.

20:08.160 --> 20:11.080
But I understand that it's necessary for compatibility.

20:11.080 --> 20:13.800
Really, it's just exciting to see these technologies both

20:13.800 --> 20:14.280
working.

20:14.280 --> 20:18.000
And I mean, I'm already using a lot of the Flatpak stuff anyway.

20:18.000 --> 20:21.160
Seems like this is a good test of using it in anger,

20:21.160 --> 20:22.960
making it work for more and more use cases,

20:22.960 --> 20:25.280
and just ironing out the whole setup.

20:25.280 --> 20:27.320
OK, Wes, this next one here, it's

20:27.320 --> 20:30.160
kind of one for the virtual lug a bit.

20:30.160 --> 20:32.880
I think we've kind of got it wrong.

20:32.880 --> 20:35.760
I think we've all been worried about WSL, especially now

20:35.760 --> 20:38.840
WSLG, which supports GUI Linux applications.

20:38.840 --> 20:41.080
Right, yeah, everyone's a little worried about that.

20:41.080 --> 20:42.560
Yeah, we're all worried about it.

20:42.560 --> 20:46.760
But if you look at Linux's true successes in the market

20:46.760 --> 20:49.160
at scale, it's the server, right?

20:49.160 --> 20:51.800
Like, the desktop, as much as we love it,

20:51.800 --> 20:54.760
the desktop doesn't even really show up on the radar, right?

20:54.760 --> 20:56.240
It's just a teeny, teeny, tiny blip.

20:56.240 --> 20:57.480
But the server is like this.

20:57.480 --> 21:00.120
It's this massive worldwide phenomenon.

21:00.120 --> 21:07.280
So even if WSL were to rob all of the Linux desktop market,

21:07.280 --> 21:10.600
every single Linux desktop user, which is never going to happen,

21:10.600 --> 21:13.680
but just for the sake of argument, if WSL with WSLG now

21:13.680 --> 21:16.320
on Windows 10, or Windows 11, or whatever,

21:16.320 --> 21:18.860
one day were to take every single Linux user

21:18.860 --> 21:21.240
and get them to convert somehow, it wouldn't actually

21:21.240 --> 21:23.200
radically change the market dynamics

21:23.200 --> 21:27.400
of where Linux is a powerhouse, really.

21:27.400 --> 21:29.240
It wouldn't really change the server dynamics.

21:29.240 --> 21:32.800
So WSL can't really harm Linux.

21:32.800 --> 21:34.260
In fact, if anything, it's probably

21:34.260 --> 21:36.560
just going to mean more Windows developers are writing

21:36.560 --> 21:38.400
server-side Linux applications.

21:38.400 --> 21:40.520
It's probably going to actually further the Linux

21:40.520 --> 21:42.080
server dominance.

21:42.080 --> 21:44.480
Maybe it's not great for the desktop, but overall,

21:44.480 --> 21:46.680
it's going to be good for Linux.

21:46.680 --> 21:51.000
But AWS and companies like them, like other companies

21:51.000 --> 21:52.440
that have these app platforms.

21:52.440 --> 21:54.760
These sneaky cloud services, huh?

21:54.760 --> 21:56.740
Right, or these serverless services

21:56.740 --> 21:59.840
that are working to essentially abstract Linux away.

21:59.840 --> 22:01.580
I think they take this argument that we

22:01.580 --> 22:04.400
used to worry about with WebMint or services like Cockpit,

22:04.400 --> 22:06.920
that, oh, the GUI makes it so you don't even

22:06.920 --> 22:07.960
have to learn Linux.

22:07.960 --> 22:10.080
And you don't even know how your system works.

22:10.080 --> 22:15.480
Well, that seems like a quaint concern compared

22:15.480 --> 22:19.000
to how things like serverless application platforms

22:19.000 --> 22:21.520
work now, where everything is simply

22:21.520 --> 22:24.080
an implementation detail behind the scenes,

22:24.080 --> 22:27.280
and the user and the developer never have to know any Linux.

22:27.280 --> 22:29.200
They never have to know a single command line.

22:29.200 --> 22:30.440
They don't have to know the name of any

22:30.440 --> 22:32.440
of the open source applications under the hood,

22:32.440 --> 22:33.860
making it possible.

22:33.860 --> 22:37.720
And this continues to be what all of these platforms push.

22:37.720 --> 22:40.360
It's the primary marketing point of DigitalOcean.

22:40.360 --> 22:43.600
It's the primary marketing point of AWS to small to medium

22:43.600 --> 22:44.560
business segments.

22:44.560 --> 22:46.680
It really is true.

22:46.680 --> 22:48.120
At the day job, same thing.

22:48.120 --> 22:49.480
There's a lot of rigmarole I have

22:49.480 --> 22:52.380
to even get something close to Docker exec

22:52.380 --> 22:53.800
into the container, despite all of it

22:53.800 --> 22:56.120
being running on Linux and powered by Container Tech.

22:56.120 --> 22:57.440
Right.

22:57.440 --> 23:00.800
And so I think while we are kind of looking over at WSL,

23:00.800 --> 23:02.920
worried that it's going to eat our lunch,

23:02.920 --> 23:04.640
it really would only take companies

23:04.640 --> 23:08.880
like Amazon and one or two others to flip a switch

23:08.880 --> 23:10.680
and start changing the implementations

23:10.680 --> 23:11.560
behind the scenes.

23:11.560 --> 23:14.000
As long as they're still executing the code that end

23:14.000 --> 23:16.760
users are expecting, the customers are expecting,

23:16.760 --> 23:18.680
I don't think they're going to care if it's a Mac

23:18.680 --> 23:21.120
on a power PC chip, executing the code as long as it

23:21.120 --> 23:23.080
runs fast enough and gives them the output they want

23:23.080 --> 23:24.040
at the price they want.

23:24.040 --> 23:26.320
The fuchsia subsystem for Linux, right.

23:26.320 --> 23:29.720
So I actually think that these companies that

23:29.720 --> 23:35.640
are abstracting Linux away are more dangerous than WSL is.

23:35.640 --> 23:39.880
They're more of a risk to Linux's actual core strength

23:39.880 --> 23:43.640
and position in the market, because you can kind of come in

23:43.640 --> 23:46.300
and sell on compatibility and ease,

23:46.300 --> 23:49.120
and then over time, Amazon could switch it on the back end

23:49.120 --> 23:51.240
to whatever they want, or Azure, or Digital Ocean.

23:51.240 --> 23:52.440
It could be any one of them.

23:52.440 --> 23:54.320
They could just flip a switch one day.

23:54.320 --> 23:56.120
And now it's running on their new platform,

23:56.120 --> 23:59.120
but all of the compatibility for the end user is still there.

23:59.120 --> 24:02.360
And so I wonder if Amazon is essentially

24:02.360 --> 24:05.360
over time in a position more and more

24:05.360 --> 24:08.320
to kill server Linux, which is actually

24:08.320 --> 24:10.140
the market of Linux that matters.

24:10.140 --> 24:13.040
And I wonder if anybody in the Mumble Room has thoughts.

24:13.040 --> 24:15.840
I don't think that they're going to do that.

24:15.840 --> 24:17.480
If you want to talk about anyone who

24:17.480 --> 24:19.520
would have any incentive to do that sort of thing,

24:19.520 --> 24:20.840
it'd be Google.

24:20.840 --> 24:25.160
AWS, I know AWS is often the boogeyman here,

24:25.160 --> 24:28.680
and I don't have much skin in this game at all.

24:28.680 --> 24:34.240
But AWS actually makes their own Linux distribution derived

24:34.240 --> 24:35.920
from Red Hat Enterprise Linux.

24:35.920 --> 24:39.840
They actively contribute to Fedora and the Fedora

24:39.840 --> 24:41.880
ecosystem and other distribution ecosystems.

24:41.880 --> 24:45.720
There's folks involved in SUSE Linux distributions, Debian

24:45.720 --> 24:46.480
and so on.

24:46.480 --> 24:50.080
And they even work with FreeBSD people.

24:50.080 --> 24:52.280
I think of the big cloud providers,

24:52.280 --> 24:55.100
AWS is actually the most open source friendly

24:55.100 --> 24:59.280
and the least likely to screw over the Linux ecosystem.

24:59.280 --> 25:02.040
I think few people remember how critical it

25:02.040 --> 25:05.720
was that Fedora supported Zen properly for them

25:05.720 --> 25:07.680
to even launch EC2.

25:07.680 --> 25:10.040
Fedora was the first Linux distribution

25:10.040 --> 25:11.080
that was available there.

25:11.080 --> 25:13.040
And there's a strong relationship

25:13.040 --> 25:17.600
between AWS and the Linux community as a whole.

25:17.600 --> 25:19.560
I don't think we have the similar strength

25:19.560 --> 25:22.400
of that relationship with the other cloud providers.

25:22.400 --> 25:25.080
And that's where I tend to be more worried.

25:25.080 --> 25:26.880
Microsoft has every incentive to do that,

25:26.880 --> 25:30.040
because they build an operating systems platform that

25:30.040 --> 25:32.880
is directly competing against Linux on all fronts.

25:32.880 --> 25:35.800
And they're winning on one out of three fronts.

25:35.800 --> 25:37.760
And the stuff that they're doing with Wizzle

25:37.760 --> 25:43.680
makes it a lot easier to chip away at it with Google.

25:43.680 --> 25:46.080
They're making Fuchsia.

25:46.080 --> 25:47.960
That is their project.

25:47.960 --> 25:51.400
Fuchsia has the ability to, if not now,

25:51.400 --> 25:54.200
will eventually have the ability to emulate enough

25:54.200 --> 25:56.240
of the user syscall interface to be

25:56.240 --> 25:59.960
able to run Linux applications in the same way WSL1 did.

25:59.960 --> 26:03.840
But in server workloads, the scale of syscalls and stuff

26:03.840 --> 26:05.860
that's being used is considerably more limited.

26:05.860 --> 26:08.760
And with containers, you already have so much filtering going

26:08.760 --> 26:11.520
on that you kind of have a good idea of what kind of surface

26:11.520 --> 26:13.800
you need to cover to be able to make stuff work.

26:13.800 --> 26:15.160
And so if you target it that way,

26:15.160 --> 26:17.920
you can do exactly what you're talking about.

26:17.920 --> 26:19.880
So AWS isn't the one I'm worried about.

26:19.880 --> 26:21.320
I'm worried about the other two.

26:21.320 --> 26:24.200
Carpino, you think you agree because Google's Fuchsia

26:24.200 --> 26:27.440
project could be this bait and switch swap?

26:27.440 --> 26:29.240
Yeah, I think so.

26:29.240 --> 26:31.840
I think it's not likely to happen anytime soon.

26:31.840 --> 26:35.220
But because Fuchsia is offered under a different license that

26:35.220 --> 26:39.640
is not GPL, it could provide a different kind of value

26:39.640 --> 26:40.680
for some companies.

26:40.680 --> 26:44.460
Therefore, the idea of investing in it

26:44.460 --> 26:46.760
may sound attractive for some people.

26:46.760 --> 26:48.920
There's kind of two things going on.

26:48.920 --> 26:51.840
There are maybe some competitors to Linux like Fuchsia coming up.

26:51.840 --> 26:54.000
But then also, I think the abstraction layer

26:54.000 --> 26:57.040
is just continuing to raise like it does, right?

26:57.040 --> 26:59.800
Like we are programming to higher standards.

26:59.800 --> 27:02.000
And so Linux is just becoming more and more truly

27:02.000 --> 27:04.340
of infrastructure, as it always has been.

27:04.340 --> 27:06.120
It's just that the infrastructure is just

27:06.120 --> 27:08.120
getting farther away from us as we go up the stack.

27:08.120 --> 27:10.280
Yeah, and somebody has to set up those systems

27:10.280 --> 27:12.640
to host those applications serverlessly.

27:12.640 --> 27:13.320
Yeah, right.

27:13.320 --> 27:14.600
There'll still be a lot of cloud providers

27:14.600 --> 27:18.240
using them at least for a while until it makes sense not to.

27:18.240 --> 27:19.820
And if they don't have to do that,

27:19.820 --> 27:22.160
and Linux means they don't have to reinvent the real,

27:22.160 --> 27:24.200
that seems like a good idea.

27:24.200 --> 27:26.840
Hey, Wes, let's duck over here.

27:26.840 --> 27:28.600
A little production side meeting.

27:28.600 --> 27:30.680
I think we should probably do this privately, though.

27:30.680 --> 27:34.640
The cone of silence.

27:34.640 --> 27:37.480
All right, this is a little awkward.

27:37.480 --> 27:41.360
So before we mention this on the show, you know, in the past,

27:41.360 --> 27:43.720
I've promoted a lot of the humble bundles.

27:43.720 --> 27:45.400
And they seem like a pretty good cause.

27:45.400 --> 27:47.240
Yeah, I mean, I've definitely bought a few.

27:47.240 --> 27:49.320
Yeah, yeah, I've bought more than a few.

27:49.320 --> 27:51.680
But I think they got like bought out.

27:51.680 --> 27:55.000
And I think they're making like weird, awkward changes.

27:55.000 --> 28:00.040
And like they don't allow you to contribute your payments

28:00.040 --> 28:02.240
to only devs who supported Linux anymore.

28:02.240 --> 28:04.360
And they're kind of like restricting how much you

28:04.360 --> 28:05.600
can give to charity now.

28:05.600 --> 28:07.480
And like no more than 15% now.

28:07.480 --> 28:09.200
They got a cap.

28:09.200 --> 28:10.480
I don't know, it's awkward, man.

28:10.480 --> 28:11.800
Do I say something on the show?

28:11.800 --> 28:13.600
Think you might have to?

28:13.600 --> 28:15.340
We should observe it at least anyway, you know?

28:15.340 --> 28:17.140
They've been pretty consistent over the years.

28:17.140 --> 28:18.480
So this is a big change.

28:18.480 --> 28:19.280
Yeah, it's awkward.

28:19.280 --> 28:20.240
It's definitely awkward.

28:20.240 --> 28:21.040
OK, all right.

28:21.040 --> 28:21.920
The cone of silence.

28:21.920 --> 28:26.200
Oh, dang it, I left my keys in the cone.

28:26.200 --> 28:28.280
Oh, Wes, dang it.

28:28.280 --> 28:30.240
Well, we'll have to go back in later.

28:30.240 --> 28:31.680
We have, because we have, first we

28:31.680 --> 28:33.080
have a public service announcement.

28:33.080 --> 28:37.800
The humble bundle pricing situation's

28:37.800 --> 28:38.840
getting a little weird.

28:38.840 --> 28:41.260
If you know what's going on, go to linuxunplug.com

28:41.260 --> 28:43.280
slash contact to let us know.

28:43.280 --> 28:45.600
Yeah, it seems like they've forced a certain set

28:45.600 --> 28:47.080
of default splits.

28:47.080 --> 28:49.340
And you just kind of go with that.

28:49.340 --> 28:51.040
And you don't have any choices, which

28:51.040 --> 28:53.480
was all the fun before, really.

28:53.480 --> 28:54.520
And so I don't know why.

28:54.520 --> 28:56.240
Maybe they just, it wasn't sustainable.

28:56.240 --> 28:59.700
Maybe the new owners need some different revenue goals.

28:59.700 --> 29:01.160
I don't know what it is, but I wanted

29:01.160 --> 29:03.480
to let you guys know that they have capped the amount you

29:03.480 --> 29:06.160
can give to charities at 15%, and they have changed it

29:06.160 --> 29:09.680
so that you can no longer adjust your payments so that only

29:09.680 --> 29:12.560
developers who supported Linux would get paid,

29:12.560 --> 29:14.840
which I understand that everybody should get

29:14.840 --> 29:16.120
some value for their product.

29:16.120 --> 29:17.840
But I really liked trying to give

29:17.840 --> 29:20.240
the bulk of my contribution to Linux developers

29:20.240 --> 29:22.680
to kind of vote with my wallet.

29:22.680 --> 29:24.960
So Wes didn't want to let you guys know.

29:24.960 --> 29:27.440
He said don't tell you, but I thought you should know.

29:27.440 --> 29:29.560
Well, I thought it would really get them down.

29:29.560 --> 29:32.520
You know, there's enough bad news these days already.

29:32.520 --> 29:33.240
That's true.

29:33.240 --> 29:33.740
That's true.

29:33.740 --> 29:36.760
I have some good news.

29:36.760 --> 29:39.200
MailRoute.net slash Linux.

29:39.200 --> 29:41.160
Try out MailRoute today and get 10%

29:41.160 --> 29:43.000
off the lifetime of your account and start

29:43.000 --> 29:46.120
with a 30-day free trial, no credit card required.

29:46.120 --> 29:48.160
That's right, MailRoute's back for another episode

29:48.160 --> 29:49.920
because it just is such a great fit.

29:49.920 --> 29:52.000
We heard from a bunch of you last week

29:52.000 --> 29:53.400
that tried out MailRoute.

29:53.400 --> 29:55.480
They've been doing MailRoute for 24 years.

29:55.480 --> 29:57.680
Yeah, they've been focused on one thing,

29:57.680 --> 29:59.520
providing cutting-edge email security.

29:59.520 --> 30:00.960
And you know I respect that.

30:00.960 --> 30:02.580
MailRoute protects your email server

30:02.580 --> 30:04.160
with a suite of services designed

30:04.160 --> 30:08.760
to remove spam, prevent viruses, and debilitating downtime.

30:08.760 --> 30:12.200
And with our audience who likes to host stuff on their own,

30:12.200 --> 30:14.640
you guys know sometimes it's tricky with your ISP

30:14.640 --> 30:15.640
or for your own security.

30:15.640 --> 30:18.880
Maybe you want to run SMTP on a different port.

30:18.880 --> 30:22.580
Or maybe for some stupid reason, your perfectly legitimate email

30:22.580 --> 30:24.240
server has ended up on a blacklist

30:24.240 --> 30:26.120
that you are constantly fighting.

30:26.120 --> 30:28.600
Oh, no more.

30:28.600 --> 30:32.400
MailRoute solves all of those problems and more.

30:32.400 --> 30:34.560
And they make it super easy for your business

30:34.560 --> 30:38.160
to migrate if you use Google Apps or Office 365.

30:38.160 --> 30:39.440
It's like one click.

30:39.440 --> 30:42.880
But really, even if you don't, I just

30:42.880 --> 30:44.420
set it up with our mail server that we

30:44.420 --> 30:46.000
built over the last couple of weeks.

30:46.000 --> 30:47.800
And it's crazy straightforward.

30:47.800 --> 30:50.920
If you know anything about managing a mail server,

30:50.920 --> 30:52.320
you can make this work.

30:52.320 --> 30:55.440
It's probably, you're probably done in 10 minutes,

30:55.440 --> 30:57.360
assuming you know the logins to your DNS

30:57.360 --> 30:59.960
and to your MailRoute account.

30:59.960 --> 31:02.000
But the one click migration is really sweet.

31:02.000 --> 31:04.020
And they do have API level integration

31:04.020 --> 31:06.760
for getting information in and out of MailRoute, which

31:06.760 --> 31:09.320
I really appreciate, especially if you want to make sure

31:09.320 --> 31:11.280
that you only allow mail from certain accounts

31:11.280 --> 31:13.400
and you want to sync it with your master mail server.

31:13.400 --> 31:14.560
Their API is great.

31:14.560 --> 31:16.480
If you do business with the federal government

31:16.480 --> 31:18.060
or you're a contractor where you have

31:18.060 --> 31:20.920
to meet certain types of requirements,

31:20.920 --> 31:23.000
well, they got you covered there as well.

31:23.000 --> 31:25.520
And as an admin, you're going to love the fact

31:25.520 --> 31:27.480
that they have real time log searches, which

31:27.480 --> 31:30.280
was super useful when we were setting up our mail server.

31:30.280 --> 31:34.560
And you also can queue mail up at MailRoute for up to 15 days

31:34.560 --> 31:36.440
or whenever you release it, which

31:36.440 --> 31:38.440
is perfect for covering you during an outage

31:38.440 --> 31:42.560
or maybe just a window for some maintenance.

31:42.560 --> 31:45.400
Like before that, I don't know what I would have done.

31:45.400 --> 31:47.760
Like what, just take the mail server down and hope nobody

31:47.760 --> 31:50.320
emails us during that time?

31:50.320 --> 31:51.560
It's so silly.

31:51.560 --> 31:55.160
So having something just in front of your mail server,

31:55.160 --> 31:57.720
it's just a higher quality, higher production grade.

31:57.720 --> 31:59.760
And of course, they know how to do this stuff.

31:59.760 --> 32:02.200
So go try out MailRoute today and get 10%

32:02.200 --> 32:05.520
off the lifetime of your account and get a 30-day free trial

32:05.520 --> 32:08.680
by visiting mailroute.net slash linux

32:08.680 --> 32:12.080
to protect your business and your email server.

32:12.080 --> 32:14.340
MailRoute makes email better.

32:14.340 --> 32:16.920
mailroute.net slash linux.

32:16.920 --> 32:20.840
Fedora 34 is a big release.

32:20.840 --> 32:21.640
It's huge.

32:21.640 --> 32:24.400
And there's a lot to talk about in here.

32:24.400 --> 32:27.160
So much to cover from both the desktop side,

32:27.160 --> 32:30.320
but also in the other Spains and Core technology.

32:30.320 --> 32:31.920
Whew, Wes.

32:31.920 --> 32:33.280
I don't even know where we start.

32:33.280 --> 32:35.600
Well, before we get too far along,

32:35.600 --> 32:39.280
maybe we should take a moment to address the long-term future

32:39.280 --> 32:40.640
of Fedora.

32:40.640 --> 32:44.680
I think it's safe and probably more secure than ever.

32:44.680 --> 32:46.920
Even after those recent CentOS changes.

32:46.920 --> 32:48.400
But I know there's a lot of people

32:48.400 --> 32:51.760
that have been worried about that, thinking maybe,

32:51.760 --> 32:54.200
well, look at the changes happening to CentOS.

32:54.200 --> 32:57.080
Could something like that happen to Fedora?

32:57.080 --> 32:58.560
But I mean, I don't see it.

32:58.560 --> 32:59.960
I don't think it really makes sense.

32:59.960 --> 33:03.120
It seems like Fedora's role really is needed.

33:03.120 --> 33:05.040
It's the place where everything happens first,

33:05.040 --> 33:07.160
where these things get integrated and tested

33:07.160 --> 33:07.800
and tried out.

33:07.800 --> 33:11.000
And the needed development can actually happen.

33:11.000 --> 33:13.240
Packages come in and they're ready to go.

33:13.240 --> 33:17.720
They happen, packages can be tweaked, bugs fixed.

33:17.720 --> 33:18.880
Core system stuff.

33:18.880 --> 33:21.720
Yeah, new approaches to both the server and the desktop,

33:21.720 --> 33:22.760
they all happen there.

33:22.760 --> 33:24.840
And Red Hat needs that.

33:24.840 --> 33:26.680
Right, they want it to happen there.

33:26.680 --> 33:29.280
It seems like it's now sort of integrated

33:29.280 --> 33:32.360
to the process of development in a way that is,

33:32.360 --> 33:33.720
I think you'd say it's codified.

33:33.720 --> 33:37.640
It's clear that for RHEL to be a successful product,

33:37.640 --> 33:39.840
when you look at it from a corporate org chart

33:39.840 --> 33:43.120
standpoint, Fedora is square one.

33:43.120 --> 33:44.960
It's like you start at Fedora.

33:44.960 --> 33:47.200
And for the end product that they make all the money

33:47.200 --> 33:50.760
from to be successful, Fedora has to be successful.

33:50.760 --> 33:55.240
And this new arrangement with CentOS Stream sort of codifies

33:55.240 --> 33:56.160
that, I think.

33:56.160 --> 33:56.960
Yeah, exactly.

33:56.960 --> 33:58.360
I mean, it makes it more clear, at least,

33:58.360 --> 34:00.240
to some of the stuff that was happening internally.

34:00.240 --> 34:03.480
Now you can just see it laid out in this pipeline of how things

34:03.480 --> 34:05.760
get created and how those changes eventually make

34:05.760 --> 34:08.280
themselves into a Red Hat release.

34:08.280 --> 34:11.400
But regardless of the details, I think we can just not worry.

34:11.400 --> 34:13.600
Don't be scared to try out Fedora 34.

34:13.600 --> 34:14.840
It's great.

34:14.840 --> 34:16.240
We should probably just highlight

34:16.240 --> 34:18.240
all the awesome things going on and maybe a few

34:18.240 --> 34:19.520
of the things we don't love.

34:19.520 --> 34:21.560
Yeah, and I think it's worth mentioning that there

34:21.560 --> 34:22.680
are many spins of Fedora.

34:22.680 --> 34:25.240
So we're going to talk at first a lot about the workstation

34:25.240 --> 34:27.680
version, which ships with GNOME Shell.

34:27.680 --> 34:29.600
But there's a plasma spin.

34:29.600 --> 34:30.760
There's a server spin.

34:30.760 --> 34:33.200
There's a lot of different versions here.

34:33.200 --> 34:34.560
And some of it is core technology

34:34.560 --> 34:36.440
that applies to all of them.

34:36.440 --> 34:38.440
If you want us to cover another one specifically,

34:38.440 --> 34:41.680
like a specific spin, totally let us know at the contact page.

34:41.680 --> 34:42.560
I would love to.

34:42.560 --> 34:43.720
I just don't want to overdo it.

34:43.720 --> 34:45.200
So if there's something you'd like

34:45.200 --> 34:47.040
us to look at specifically in this realm,

34:47.040 --> 34:48.980
please let us know, because otherwise, we

34:48.980 --> 34:50.520
are just sort of restraining ourselves

34:50.520 --> 34:52.200
and trying not to overdo it.

34:52.200 --> 34:54.200
Like the server spin, I think that's

34:54.200 --> 34:56.960
particularly interesting this release, potentially,

34:56.960 --> 35:00.120
because I believe, correct me if I'm wrong, guys,

35:00.120 --> 35:04.400
but I believe that the next rel is ultimately

35:04.400 --> 35:06.440
going to be based on Fedora 34.

35:06.440 --> 35:08.440
So what happens here is particularly interesting

35:08.440 --> 35:11.600
for several reasons beyond the immediate reasons.

35:11.600 --> 35:14.160
And no matter what variant of Fedora you use,

35:14.160 --> 35:16.440
you're going to get the latest in what the open source

35:16.440 --> 35:17.800
world has to offer.

35:17.800 --> 35:20.040
And really, all of what we're about to cover

35:20.040 --> 35:22.740
will show up in just about every distro near you soon,

35:22.740 --> 35:24.440
at least most of it.

35:24.440 --> 35:26.480
So let's start with the big headline feature

35:26.480 --> 35:31.160
in the workstation spin, which is GNOME 40, which we've

35:31.160 --> 35:32.520
talked about a little bit before.

35:32.520 --> 35:34.180
Yeah, I mean, it's not new in the sense

35:34.180 --> 35:35.760
that it was already released.

35:35.760 --> 35:38.640
But the first time it ships in a big name distro,

35:38.640 --> 35:40.020
that's something of a milestone.

35:40.020 --> 35:40.560
It is.

35:40.560 --> 35:41.400
And it's the first time you're going

35:41.400 --> 35:44.880
to really see it land in front of a lot of end users.

35:44.880 --> 35:46.720
And it's predominantly recognized for the change

35:46.720 --> 35:50.140
to horizontal workspace layouts, which

35:50.140 --> 35:52.560
is similar to how elementary OS has already been doing it.

35:52.560 --> 35:55.640
It's how I actually have my plasma setup configured most

35:55.640 --> 35:56.520
commonly.

35:56.520 --> 36:00.640
And it's a lot how Mac OS has done it for several releases.

36:00.640 --> 36:01.880
And I think how Windows 10 does it

36:01.880 --> 36:03.880
if you enable virtual workspaces, where everything

36:03.880 --> 36:06.440
is left to right, essentially.

36:06.440 --> 36:08.880
And once you learn it, it feels fast and natural.

36:08.880 --> 36:12.520
And actually, because it is so common with the other desktop

36:12.520 --> 36:15.720
platforms, it makes moving between all of those

36:15.720 --> 36:18.840
a little less frictiony, a little smoother on the brain.

36:18.840 --> 36:20.240
I like that a lot.

36:20.240 --> 36:22.160
But I think the other thing that hasn't really

36:22.160 --> 36:27.920
gotten a ton of appreciation in GNOME 40 is GTK 4.

36:27.920 --> 36:32.240
And GTK 4 is like at step one of getting awesome.

36:32.240 --> 36:34.280
And each inner release we're about to get,

36:34.280 --> 36:35.720
it gets even more awesome.

36:35.720 --> 36:39.520
And the awesome that I'm talking about is performance.

36:39.520 --> 36:43.000
I'm talking Vulkan rendering performance.

36:43.000 --> 36:44.320
And it's looking real good.

36:44.320 --> 36:46.680
And GTK 4 apps, snap.

36:46.680 --> 36:47.560
They really do.

36:47.560 --> 36:48.040
Yeah, man.

36:48.040 --> 36:50.920
And when you combine that with GNOME Shell 40 itself,

36:50.920 --> 36:52.480
that's a nice little package, right?

36:52.480 --> 36:55.360
I mean, I've just been playing with 2104 for a while

36:55.360 --> 36:57.920
and was thinking about keeping it around.

36:57.920 --> 37:00.620
It already felt much faster than the plasma desktop

37:00.620 --> 37:01.520
I'd been using before.

37:01.520 --> 37:03.800
But GNOME 40 is just the next level.

37:03.800 --> 37:07.360
Yeah, and I've been impressed at how fast extension developers

37:07.360 --> 37:09.480
are updating to support GNOME 40.

37:09.480 --> 37:12.360
They have to implicitly update their extension.

37:12.360 --> 37:14.840
Now, there are a few cons that I've noticed.

37:14.840 --> 37:16.960
And I want to preface these cons with I

37:16.960 --> 37:20.440
suspect they're all going to be addressed in future releases.

37:20.440 --> 37:22.200
But the reality is it's not as easy

37:22.200 --> 37:25.600
to get a quick overview of what apps are on which workspaces.

37:25.600 --> 37:27.960
In the vertical layout, you would have a right there,

37:27.960 --> 37:30.200
like a film strip on the side of your screen.

37:30.200 --> 37:33.040
And you would see all the different application windows

37:33.040 --> 37:35.960
across all of your desktops at once.

37:35.960 --> 37:39.820
With the horizontal layout, you see like 1.3 of a desktop

37:39.820 --> 37:40.400
at a time.

37:40.400 --> 37:41.860
It's just not quite as efficient.

37:41.860 --> 37:44.040
But it's so quick to slide through them.

37:44.040 --> 37:46.400
And they do have little tiny, tiny, tiny previews

37:46.400 --> 37:48.400
at the top that kind of give you an indication.

37:48.400 --> 37:50.760
Right, that where did I put that terminal problem?

37:50.760 --> 37:53.200
Yeah, that app I launched two days ago.

37:53.200 --> 37:55.520
Also, it's kind of hard to move the workspaces

37:55.520 --> 37:56.960
around themselves.

37:56.960 --> 37:58.640
Say you start a chat app.

37:58.640 --> 38:01.120
Maybe you've got two chat apps on one screen.

38:01.120 --> 38:03.320
And on the second desktop, I open up my browser.

38:03.320 --> 38:05.400
And then I decide I want to swap those two things.

38:05.400 --> 38:06.920
So the browser's on desktop one.

38:06.920 --> 38:09.880
And my two separate chat applications are on desktop two.

38:09.880 --> 38:12.200
The only way to do that right now in GNOME 40,

38:12.200 --> 38:14.560
instead of just being able to grab the virtual workspace,

38:14.560 --> 38:16.760
the whole workspace itself, and move it,

38:16.760 --> 38:19.520
you have to reshuffle all of the applications.

38:19.520 --> 38:21.320
So move all the apps over to one screen.

38:21.320 --> 38:23.520
And then move the other apps over to the other screen.

38:23.520 --> 38:25.800
And these tiny little boxes at the top of the screen

38:25.800 --> 38:28.040
in this little bitty, bitty preview,

38:28.040 --> 38:30.920
you just can't swap the workspaces around easily.

38:30.920 --> 38:33.080
But when you do get that layout right,

38:33.080 --> 38:34.560
after you've spent the day with it,

38:34.560 --> 38:37.360
and you figured out, OK, I like these apps on these screens

38:37.360 --> 38:40.000
and all of that, man, it rocks.

38:40.000 --> 38:41.400
And it rocks, really.

38:41.400 --> 38:44.520
It rocks in a way that feels super polished.

38:44.520 --> 38:46.400
And the only thing it leaves me wishing

38:46.400 --> 38:49.440
is that I could then somehow save and restore that layout.

38:49.440 --> 38:52.000
So I just log into GNOME Shell.

38:52.000 --> 38:55.440
And my applications always open up on those virtual desktops.

38:55.440 --> 38:57.440
Right, something that Plasma makes pretty easy.

38:57.440 --> 38:59.000
Yeah, but man, is it smooth.

38:59.000 --> 39:00.880
It feels very, very professional.

39:00.880 --> 39:02.000
So that's GNOME Shell 40.

39:02.000 --> 39:05.160
Really, overall, pretty much a positive take.

39:05.160 --> 39:07.760
I'd like to see some work with additional external monitors,

39:07.760 --> 39:09.120
but I know that stuff's coming.

39:09.120 --> 39:11.800
I do think you hit on something that I noticed as well.

39:11.800 --> 39:14.080
It is really great, but it is clearly

39:14.080 --> 39:15.800
the start of a development chain.

39:15.800 --> 39:18.000
There's some new ideas that are being explored and have

39:18.000 --> 39:20.500
been recently implemented that are still getting worked out,

39:20.500 --> 39:22.280
and that changes will happen too.

39:22.280 --> 39:25.280
And that really felt contrasted to 2104,

39:25.280 --> 39:27.680
sticking with the previous release, which, you know,

39:27.680 --> 39:29.680
they'd polished out a little more of those things.

39:29.680 --> 39:31.000
So depending on which way you like

39:31.000 --> 39:32.180
to interact with your desktop, that

39:32.180 --> 39:33.720
might be one way to sort of choose,

39:33.720 --> 39:35.760
which of these new distros do I stick with?

39:35.760 --> 39:40.680
In 2007, Fedora 8 was released.

39:40.680 --> 39:43.640
And one of the headline features of Fedora 8,

39:43.640 --> 39:47.000
I listened to my review this morning from Linux action show

39:47.000 --> 39:48.840
like 67 or something.

39:48.840 --> 39:49.640
Amazing.

39:49.640 --> 39:52.780
Yeah, was Pulse Audio.

39:52.780 --> 39:54.520
That was the release of Fedora that they

39:54.520 --> 39:56.080
switched to Pulse Audio.

39:56.080 --> 39:59.520
And I think everybody knows how that went.

39:59.520 --> 40:03.360
In Fedora 34, this is the release

40:03.360 --> 40:05.960
where they switched to PipeWire by default,

40:05.960 --> 40:09.680
and it is a completely different migration.

40:09.680 --> 40:12.040
Seems to be far more successful.

40:12.040 --> 40:15.420
I mean, it's only just started, but at least in my testing,

40:15.420 --> 40:17.380
you basically don't notice anything's different,

40:17.380 --> 40:19.500
unless you use some, you know, there are picky apps.

40:19.500 --> 40:21.760
There's still some Pulse modules that are getting

40:21.760 --> 40:22.840
implemented here and there.

40:22.840 --> 40:25.800
But by and large, it just works.

40:25.800 --> 40:28.480
Not only does it just work from an end user experience,

40:28.480 --> 40:31.480
but the project has been much more successful in reaching out

40:31.480 --> 40:34.440
to the individual, quote unquote, stakeholders,

40:34.440 --> 40:36.760
if you will, and getting them on board.

40:36.760 --> 40:39.240
And even making changes, like I think in particular,

40:39.240 --> 40:41.400
there was a lot of feedback from the Jack community

40:41.400 --> 40:43.240
that influenced some of the design decisions

40:43.240 --> 40:47.920
with PipeWire that meant that as PipeWire went along,

40:47.920 --> 40:50.800
instead of turning people off and pissing them off

40:50.800 --> 40:54.520
and kind of creating a divisive atmosphere,

40:54.520 --> 40:56.680
it created this momentum of support.

40:56.680 --> 40:58.680
And we started picking up application support

40:58.680 --> 41:01.760
and library support and distribution support

41:01.760 --> 41:04.340
and Linux media support.

41:04.340 --> 41:07.520
And it all kind of really worked well.

41:07.520 --> 41:10.140
Like, it was a good community management and code management.

41:10.140 --> 41:11.480
Which is what you need if you're going

41:11.480 --> 41:12.960
to try to be the unifier, right?

41:12.960 --> 41:15.560
I mean, that's part of the promise of PipeWire,

41:15.560 --> 41:18.280
is all of this stuff happening in one go, your Pulse

41:18.280 --> 41:20.840
and your Jack, and you're also all happy together.

41:20.840 --> 41:23.000
And in particular, one thing you get out of this now

41:23.000 --> 41:25.800
if you're using Jack is way better and easier access

41:25.800 --> 41:28.440
to Bluetooth devices, thanks to PipeWire.

41:28.440 --> 41:30.640
Yeah, and really just, I think, an easier time

41:30.640 --> 41:32.560
kind of getting up and going and configuring

41:32.560 --> 41:34.400
Jack applications.

41:34.400 --> 41:38.340
It sort of solves some of the fundamental plumbing

41:38.340 --> 41:39.880
that you used to have to worry about

41:39.880 --> 41:41.800
and makes it just all of a sudden,

41:41.800 --> 41:43.600
like these applications that have been around for a while,

41:43.600 --> 41:45.540
even easier to use in some respects.

41:45.540 --> 41:48.760
It is neat as a moment right now of PipeWire happening.

41:48.760 --> 41:51.160
I think we all had a lot of confidence in the project just

41:51.160 --> 41:53.960
because of the folks developing it and their history and skill

41:53.960 --> 41:56.480
and just sort of the previews we'd seen along the way.

41:56.480 --> 41:59.040
And we've certainly covered it a lot on this show.

41:59.040 --> 42:02.240
But the fact that it is not used for audio yet,

42:02.240 --> 42:04.920
but deployed in 2104 and now shipping

42:04.920 --> 42:08.060
with audio in Fedora 34, I don't know.

42:08.060 --> 42:09.840
If this goes well, it seems like PipeWire

42:09.840 --> 42:11.600
is here to stay after this.

42:11.600 --> 42:14.720
I think this is the part of the technology stack of this release

42:14.720 --> 42:16.240
that you and I are the most excited about.

42:16.240 --> 42:18.160
And we don't know what the line is.

42:18.160 --> 42:20.880
Should we talk about it a lot?

42:20.880 --> 42:23.840
Or is it like inside baseball podcaster stuff

42:23.840 --> 42:26.200
and so we just cover the high details and move on?

42:26.200 --> 42:27.200
So let us know.

42:27.200 --> 42:29.060
That's another area we'd like feedback.

42:29.060 --> 42:31.400
But something that's a bit of peace of mind for me

42:31.400 --> 42:33.960
in this release is that this version of Fedora

42:33.960 --> 42:36.900
ships with ExWayland standalone.

42:36.900 --> 42:38.360
This is nice because you've probably

42:38.360 --> 42:41.920
heard that Xorg releases are a bit unmaintained.

42:41.920 --> 42:44.880
The current upstream release has stuck to the 120 branch

42:44.880 --> 42:49.440
for years with no real foreseeable major update,

42:49.440 --> 42:50.440
at least.

42:50.440 --> 42:53.520
But what they've done with this standalone ExWayland session

42:53.520 --> 42:56.680
is they've built it from the Git snapshots of current code

42:56.680 --> 42:58.720
upstream rather than the stable branch,

42:58.720 --> 43:00.420
so where the fixes have kind of landed.

43:00.420 --> 43:03.480
And they've broken it off out from Wayland itself.

43:03.480 --> 43:04.400
It's nice to see that.

43:04.400 --> 43:06.160
And it could probably even, I mean,

43:06.160 --> 43:08.160
not only could it result in better performance,

43:08.160 --> 43:11.040
but maybe even in some use cases better battery life

43:11.040 --> 43:13.680
if you're not running any X applications now,

43:13.680 --> 43:14.960
this won't be running at all.

43:14.960 --> 43:15.840
Yeah, definitely.

43:15.840 --> 43:17.500
And it just sort of wasn't accessible.

43:17.500 --> 43:19.080
There were fixes going in, and that

43:19.080 --> 43:20.800
was the main part of the sort of X repo

43:20.800 --> 43:22.280
actually seeing any development.

43:22.280 --> 43:24.200
But when they weren't being shipped,

43:24.200 --> 43:25.760
no one had access to them.

43:25.760 --> 43:28.520
You don't want to just pull from that without having tested it.

43:28.520 --> 43:30.960
So it's nice to see that there was enough developer

43:30.960 --> 43:33.920
effort to sort of bootstrap this, keep it alive,

43:33.920 --> 43:35.080
and functioning nicely.

43:35.080 --> 43:37.140
Yeah, I bet you'll see other distributions

43:37.140 --> 43:39.640
follow this particular suit.

43:39.640 --> 43:42.680
Another nicety, and for several reasons,

43:42.680 --> 43:46.040
is that Wayland is now the default for the plasma spin.

43:46.040 --> 43:47.480
So you know, Plasma's Wayland support

43:47.480 --> 43:51.000
has been getting pretty good and pretty much daily

43:51.000 --> 43:53.560
drivable in 5.20, and even better in 5.21,

43:53.560 --> 43:55.800
which is what's shipping with Fedora 34.

43:55.800 --> 44:00.560
And so it's a great kind of milestone that was set.

44:00.560 --> 44:02.140
Because when the Fedora project said,

44:02.140 --> 44:05.960
we're switching to Wayland by default for our plasma spin,

44:05.960 --> 44:10.040
the Plasma project saw that and realized,

44:10.040 --> 44:11.860
we've got to double down on this code.

44:11.860 --> 44:14.080
We've got to get this shippable and working.

44:14.080 --> 44:17.840
And not in a bad way, like in a very kind of cooperative,

44:17.840 --> 44:19.760
well, this project set a goal, and we're

44:19.760 --> 44:22.160
going to work hard to help them succeed at that goal,

44:22.160 --> 44:24.240
and it's going to be good for our project, too.

44:24.240 --> 44:27.360
And it was a good example of how Fedora 34

44:27.360 --> 44:30.200
played a role in a wider ecosystem improvement

44:30.200 --> 44:31.280
for Wayland support.

44:31.280 --> 44:33.520
Yeah, you can really see that even just in the change here

44:33.520 --> 44:35.520
and on their post about it on the Fedora Wiki,

44:35.520 --> 44:37.220
where they write, Fedora has long

44:37.220 --> 44:39.480
been a leader in advancing the adoption of the Wayland

44:39.480 --> 44:40.200
protocol.

44:40.200 --> 44:41.920
Much of the quality of Wayland for GNOME

44:41.920 --> 44:44.560
can be attributed to the work done by the Fedora Workstation

44:44.560 --> 44:45.680
working group.

44:45.680 --> 44:47.800
It's now the KDE special interest group's turn

44:47.800 --> 44:50.000
to do the same for the KDE platform.

44:50.000 --> 44:52.680
So I think there really is this sort of shared responsibility

44:52.680 --> 44:55.600
and help and goal to sort of push things over the hill

44:55.600 --> 44:57.400
and get it nicely working now that we've

44:57.400 --> 45:00.880
got stuff like NVIDIA proprietary support working,

45:00.880 --> 45:03.160
screencasting, middle click paste,

45:03.160 --> 45:05.720
all the sort of 90% little paper cut

45:05.720 --> 45:07.440
stuff that needed to be in there before you

45:07.440 --> 45:08.960
could really ship it.

45:08.960 --> 45:10.600
Yeah, there's still edge cases.

45:10.600 --> 45:14.320
The other day I had this problem where for whatever reason

45:14.320 --> 45:16.760
until I rebooted, my Wayland applications could not

45:16.760 --> 45:19.140
copy and paste to my ex-Wayland applications.

45:19.140 --> 45:20.600
It's a problem that's been solved,

45:20.600 --> 45:22.600
but it just started hitting me the other day.

45:22.600 --> 45:25.520
And so it's not all there.

45:25.520 --> 45:29.880
But I am such a performance nut that I

45:29.880 --> 45:32.240
will live with those paper cuts to get

45:32.240 --> 45:34.240
the smoothness of Wayland.

45:34.240 --> 45:38.360
On my X1 Carbon with the full Fedora stack,

45:38.360 --> 45:42.040
it's so damn good that I think you could hold that up

45:42.040 --> 45:45.520
as an example of a premier Linux experience.

45:45.520 --> 45:47.600
And it makes me really excited for this technology

45:47.600 --> 45:50.680
to land in other distributions as well.

45:50.680 --> 45:53.960
I also decided to give it a spin on something a little different,

45:53.960 --> 45:54.640
Wes.

45:54.640 --> 45:58.880
I tried out the ARM64 image on my Raspberry Pi 400.

45:58.880 --> 45:59.560
Oh, yeah, right.

45:59.560 --> 46:03.320
There's a new ARM64 KDE Plasma desktop image

46:03.320 --> 46:04.760
available this time around.

46:04.760 --> 46:05.240
Yep.

46:05.240 --> 46:06.560
What did you think?

46:06.560 --> 46:09.760
You know, it's not super fast, Wes.

46:09.760 --> 46:12.400
It's a little bit faster, I felt like, than the GNOME Shell

46:12.400 --> 46:15.240
images, which is probably not too surprising.

46:15.240 --> 46:17.240
But not fast enough for daily use.

46:17.240 --> 46:18.600
Not fast enough at all.

46:18.600 --> 46:21.000
The command line interface, perfectly fine.

46:21.000 --> 46:23.720
If you wanted to use this thing to host some file services

46:23.720 --> 46:27.960
for yourself or make it a LAN server, fine, great.

46:27.960 --> 46:28.600
It'd be good.

46:28.600 --> 46:33.440
But as a desktop environment, Wes, it's just not quite there.

46:33.440 --> 46:34.880
We're not there yet, huh?

46:34.880 --> 46:37.920
Or maybe you needed something more lightweight, I guess.

46:37.920 --> 46:42.400
And I was running it from a SSD over USB 3, not from an SD card.

46:42.400 --> 46:44.600
So I was kind of giving it a performance advantage.

46:44.600 --> 46:45.720
You were trying, yeah.

46:45.720 --> 46:48.600
And the Pi 400 is slightly faster than the Raspberry Pi

46:48.600 --> 46:51.000
4 vanilla.

46:51.000 --> 46:53.840
Someday, those things will be a regular desktop.

46:53.840 --> 46:55.960
What I really want, actually, my goal,

46:55.960 --> 46:58.000
and I think they're going to get there eventually,

46:58.000 --> 47:05.800
my goal is to have a Pi device of some kind that is on 24-7

47:05.800 --> 47:07.780
that's logged into all my stuff.

47:07.780 --> 47:10.760
So if my desktop ever breaks, or an update goes haywire,

47:10.760 --> 47:13.320
or I want to reload for a day for some crazy thing

47:13.320 --> 47:16.680
we're doing on the show, I want to have an appliance that

47:16.680 --> 47:20.840
has my chat apps, my email, and my web browser ready to go

47:20.840 --> 47:25.360
for me all the time, just like a mission-critical console that's

47:25.360 --> 47:27.880
in my office that takes up very little space.

47:27.880 --> 47:30.640
And the great thing about the Pi 400 for this job

47:30.640 --> 47:33.120
is that it's the keyboard and the computer in one.

47:33.120 --> 47:35.480
And as silly as that sounds, it means

47:35.480 --> 47:37.280
it takes up a lot less space, because I just

47:37.280 --> 47:41.000
have an HDMI cable, and a USB-C cable, and a mouse.

47:41.000 --> 47:42.120
It's simple.

47:42.120 --> 47:42.760
It's great.

47:42.760 --> 47:45.160
I actually do ethernet too, but it's really nice.

47:45.160 --> 47:47.320
So I'm hoping, and I honestly just,

47:47.320 --> 47:51.240
I think maybe Manjaro has invested more in this area.

47:51.240 --> 47:52.880
They've spent more time here.

47:52.880 --> 47:55.960
But the Manjaro versions on the Pi 400

47:55.960 --> 47:58.680
are significantly better, like absolutely I

47:58.680 --> 48:01.920
can do that job with Manjaro or Ubuntu 20.04.

48:01.920 --> 48:04.440
OK, so maybe there just needs to be a little more tuning.

48:04.440 --> 48:05.920
That's hopeful.

48:05.920 --> 48:06.840
Could be, could be.

48:06.840 --> 48:08.240
I learned a valuable lesson, though,

48:08.240 --> 48:10.680
thanks to Neil, who responded to a quick question I

48:10.680 --> 48:11.880
had during the week.

48:11.880 --> 48:15.000
To make it work, you need to really, for the best time,

48:15.000 --> 48:16.840
I mean, there's probably 1,000 ways to do it,

48:16.840 --> 48:18.660
but you really should use the Fedora media

48:18.660 --> 48:21.480
writer to make the whole thing actually bootable.

48:21.480 --> 48:24.960
And there's some cool options it gives you, some nice-to-haves,

48:24.960 --> 48:28.400
like turn off the boot splash so you can see all of the output,

48:28.400 --> 48:30.320
or turn on SSH, or some options you

48:30.320 --> 48:32.360
might use if you didn't have a monitor hooked up.

48:32.360 --> 48:33.640
So it's a really nice tool.

48:33.640 --> 48:36.360
Also nice to see that you can use it from the Mac and Windows

48:36.360 --> 48:37.080
too, if you need.

48:37.080 --> 48:37.720
Oh, really?

48:37.720 --> 48:40.120
They have, oh, well, OK, I did not know that.

48:40.120 --> 48:41.680
So they have Mac and Windows versions

48:41.680 --> 48:43.240
of the Fedora media writer?

48:43.240 --> 48:45.600
That's great.

48:45.600 --> 48:46.600
Good for them.

48:46.600 --> 48:50.080
All right, well, moving down the stack a little bit,

48:50.080 --> 48:51.920
another kind of headline feature here

48:51.920 --> 48:55.040
is ButterFS transparent compression.

48:55.040 --> 48:57.600
And if you're like me, and you are around

48:57.600 --> 49:00.680
during the drive-doubler days of the DOS era,

49:00.680 --> 49:03.320
this is a totally different beast,

49:03.320 --> 49:06.200
and it could be particularly great for SSD users.

49:06.200 --> 49:07.560
So where do you want to start, Wes?

49:07.560 --> 49:09.480
Well, maybe we should start and say,

49:09.480 --> 49:11.840
this isn't a new feature for ButterFS,

49:11.840 --> 49:15.400
but what's new here is Fedora adding it on by default.

49:15.400 --> 49:17.360
You could add it if you'd like, but I don't even

49:17.360 --> 49:19.880
think it's a default. Just when you make a ButterFS file

49:19.880 --> 49:22.760
system, you have to manually go in there and add the mount

49:22.760 --> 49:25.040
flags to say, hey, do compression.

49:25.040 --> 49:27.600
So like with a lot of things in Fedora,

49:27.600 --> 49:30.280
this is some trust in saying, this makes sense.

49:30.280 --> 49:33.280
It works in enough use cases that we think all of our users

49:33.280 --> 49:35.880
should have it, at least if they're using ButterFS.

49:35.880 --> 49:36.880
I'm going to use this.

49:36.880 --> 49:38.800
Totally think this is a great feature.

49:38.800 --> 49:41.600
But it did cross my mind, like, what if something goes wrong?

49:41.600 --> 49:43.880
Am I risking my data here?

49:43.880 --> 49:46.960
Sounds like they checked that out as part of this change.

49:46.960 --> 49:49.840
And as far as we know, known compression-related

49:49.840 --> 49:54.080
bugs are just kind of cosmetic, nothing that is data loss.

49:54.080 --> 49:56.840
And this has been in the file system for a while.

49:56.840 --> 49:57.880
Seems like it just works.

49:57.880 --> 49:58.240
OK.

49:58.240 --> 50:00.080
Yeah, I know it's been in ButterFS for a while.

50:00.080 --> 50:03.080
The change here is they're turning it on.

50:03.080 --> 50:04.640
And I say good on them.

50:04.640 --> 50:06.160
I say, too, if you're in CFS, you

50:06.160 --> 50:07.720
should consider doing the same.

50:07.720 --> 50:09.600
And they went with this compression algorithm

50:09.600 --> 50:12.760
because I assume they must have looked at the impact on the CPU

50:12.760 --> 50:14.360
and disk straight off and decided, OK,

50:14.360 --> 50:15.520
this is the right one to use.

50:15.520 --> 50:17.000
Yeah, they're using the Z standard.

50:17.000 --> 50:19.560
Then they picked a specific default compression level

50:19.560 --> 50:20.960
because it's tunable here, and you

50:20.960 --> 50:22.360
can kind of choose different parameters, you know,

50:22.360 --> 50:25.000
speed and how well does it compress and kind of pick

50:25.000 --> 50:27.240
the one that made the most sense in terms of CPU usage

50:27.240 --> 50:28.880
and memory and disk space savings.

50:28.880 --> 50:31.000
What do you actually get out of it?

50:31.000 --> 50:34.240
It's just so neat that because of the way our architectures

50:34.240 --> 50:37.400
are and how fast CPUs are and how slow it can be sometimes

50:37.400 --> 50:40.160
to talk to the disk, even a fast disk just

50:40.160 --> 50:41.680
makes sense to compress things first.

50:41.680 --> 50:43.320
And you don't ever have to worry about it.

50:43.320 --> 50:46.280
Right, just get it to the CPU.

50:46.280 --> 50:48.960
Just get that data to the CPU, then let it do its thing.

50:48.960 --> 50:51.240
And this is probably available on the disk

50:51.240 --> 50:52.240
you're using now.

50:52.240 --> 50:56.080
You could make a partition and use compression today,

50:56.080 --> 50:57.600
and you probably should consider it.

50:57.600 --> 50:59.360
There's just one thing to remember.

50:59.360 --> 51:01.720
It's kind of tricky when you're checking your free disk

51:01.720 --> 51:03.760
space going forward due to the nature

51:03.760 --> 51:04.880
of transparent compression.

51:04.880 --> 51:06.400
It's transparent.

51:06.400 --> 51:09.600
So utilities like DU are only going

51:09.600 --> 51:12.320
to report the exact uncompressed file space

51:12.320 --> 51:15.440
usage, which is not the actual space that they take up

51:15.440 --> 51:16.080
on the disk.

51:16.080 --> 51:17.560
So it gets a little tricky.

51:17.560 --> 51:19.160
I assume there must be tools, Wes.

51:19.160 --> 51:23.040
Yeah, the Fedora magazine had a good write-up about this feature,

51:23.040 --> 51:25.840
and they recommend that they comp size utility.

51:25.840 --> 51:27.960
If you're curious, of course, that'll be in the show notes.

51:27.960 --> 51:29.480
And they've also got a good tip if you

51:29.480 --> 51:31.360
want to go back and retroactively compress

51:31.360 --> 51:33.840
older files if you've just added this mount option now,

51:33.840 --> 51:36.400
because it only applies to future files.

51:36.400 --> 51:38.320
Now a little bit further up in the stacks,

51:38.320 --> 51:42.360
on the systemd layer, I thought we talked about this feature

51:42.360 --> 51:44.840
in episode 351, but we're getting

51:44.840 --> 51:47.960
systemd out of memory daemon now, which I guess

51:47.960 --> 51:51.040
is different than the early OOM we've talked about before.

51:51.040 --> 51:54.040
Yeah, it turns out there's a lot of options here.

51:54.040 --> 51:57.800
Yeah, so last year at this time, I guess Fedora 32,

51:57.800 --> 52:00.800
it would have been early OOM shipped in Fedora.

52:00.800 --> 52:03.040
And that was a big change, and we talked about it.

52:03.040 --> 52:04.800
Of course, there's also Facebook has some work,

52:04.800 --> 52:06.240
which we talked about in this space.

52:06.240 --> 52:07.800
They were interested and also helped

52:07.800 --> 52:12.600
get new statistics like memory pressure, PSI metrics

52:12.600 --> 52:13.640
into the kernel.

52:13.640 --> 52:15.680
So they've got a tool that uses that,

52:15.680 --> 52:19.480
also kind of enabled cgroups, and now systemd is in play.

52:19.480 --> 52:21.080
Because if you have a daemon, it's

52:21.080 --> 52:22.560
doing something on your Linux system,

52:22.560 --> 52:23.840
you better just do it in systemd.

52:23.840 --> 52:25.200
It's going to work out better.

52:25.200 --> 52:27.880
Managing processes does make sense, right?

52:27.880 --> 52:28.360
It does.

52:28.360 --> 52:30.200
It does make sense to have that in systemd.

52:30.200 --> 52:32.400
Yeah, and it's nice and smart and integrated.

52:32.400 --> 52:35.080
It can do stuff per cgroup, lots of cleverness

52:35.080 --> 52:38.000
with fancy new kernel features to try to get this right,

52:38.000 --> 52:40.240
and do a better job of not killing stuff that

52:40.240 --> 52:42.240
doesn't need to be killed, but also trying

52:42.240 --> 52:44.440
to kill things early enough that it actually

52:44.440 --> 52:45.840
helps save your system.

52:45.840 --> 52:48.600
And I actually, I have not looked at this myself,

52:48.600 --> 52:50.240
but I have been led to believe this

52:50.240 --> 52:53.640
is simpler than, at least from a configuration standpoint,

52:53.640 --> 52:55.600
than the previous stuff made by Facebook.

52:55.600 --> 52:56.640
Yeah, sounds like it.

52:56.640 --> 52:59.400
And it's neat that it's using that memory pressure indicator.

52:59.400 --> 53:00.400
And so what it does, audience, I don't

53:00.400 --> 53:01.960
think we've clearly explained this,

53:01.960 --> 53:05.280
is it's monitoring applications and processes and whatever,

53:05.280 --> 53:08.520
and it's checking for memory pressure and availability.

53:08.520 --> 53:10.800
And if it has to, before your system gets really

53:10.800 --> 53:12.960
crappy in a low memory situation, which

53:12.960 --> 53:15.680
Linux is famous for, this thing will

53:15.680 --> 53:19.280
kick in and essentially kill it to save the overall system.

53:19.280 --> 53:21.320
Yeah, this systemd OOMD, I guess,

53:21.320 --> 53:23.600
can also monitor similar stuff for swap

53:23.600 --> 53:25.800
and act there to try to free up swap.

53:25.800 --> 53:28.560
And according to Neil in the IRC room just now,

53:28.560 --> 53:32.600
I guess early OOM was really just something of a stop gap

53:32.600 --> 53:36.720
to try to get this feature out there while systemd OOMD was

53:36.720 --> 53:37.600
in the works.

53:37.600 --> 53:38.640
OK, and then there's one last thing

53:38.640 --> 53:40.640
that I was waiting for you to kind of explain to me.

53:40.640 --> 53:43.720
And that is, I think I must be mistaken,

53:43.720 --> 53:45.040
but I guess it looks like they've

53:45.040 --> 53:48.800
removed support for disabling the SELinux runtime.

53:48.800 --> 53:52.520
What is this outrageous thing, Wes?

53:52.520 --> 53:55.640
Oh, yeah, so people might be kind of confused by this.

53:55.640 --> 53:59.680
So we should probably note upfront that by disabling SELinux,

53:59.680 --> 54:02.080
what they mean is that the kernel doesn't call

54:02.080 --> 54:04.200
into the SELinux subsystem at all.

54:04.200 --> 54:07.440
Switching SELinux between permissive and enforcing,

54:07.440 --> 54:10.600
using set enforce, that's not affected.

54:10.600 --> 54:11.520
That's fully functional.

54:11.520 --> 54:14.040
You can still set it to permissive mode.

54:14.040 --> 54:16.280
What's changing here is kind of subtle.

54:16.280 --> 54:18.200
You may never have used it.

54:18.200 --> 54:19.680
Right now, SELinux can be disabled

54:19.680 --> 54:22.480
by passing SELinux equals 0 on the command line

54:22.480 --> 54:26.640
as you're booting, or in user space by a config file

54:26.640 --> 54:29.600
in etsy SELinux slash config.

54:29.600 --> 54:31.920
And then there's a library in user space lib SELinux

54:31.920 --> 54:32.960
that reads that file.

54:32.960 --> 54:36.560
And during boot, if you've told it to disable SELinux,

54:36.560 --> 54:38.520
then that user space library actually

54:38.520 --> 54:41.320
writes into the kernel unmount slash sys slash fs

54:41.320 --> 54:43.880
slash SELinux and sort of disables it.

54:43.880 --> 54:46.920
But doing it that way, while very flexible

54:46.920 --> 54:49.720
and sort of helped out distros that had a harder time

54:49.720 --> 54:53.000
or environments systems that had a harder time changing

54:53.000 --> 54:55.400
or adding on to kernel parameters,

54:55.400 --> 54:57.400
it did make some security trade-offs

54:57.400 --> 54:59.320
when you're trying to use Linux security modules

54:59.320 --> 55:01.120
like SELinux.

55:01.120 --> 55:02.680
So now that's getting ripped out.

55:02.680 --> 55:03.720
The only way to do it,

55:03.720 --> 55:05.480
you can't use that config file anymore.

55:05.480 --> 55:09.200
You have to pass SELinux equals 0 on the command line.

55:09.200 --> 55:12.080
Ah, man, I polished this pitchfork and everything.

55:12.080 --> 55:13.160
It was really shiny.

55:13.160 --> 55:14.800
That sounds perfectly reasonable.

55:14.800 --> 55:16.200
Yeah, it sure is.

55:16.200 --> 55:18.400
You'll have to look elsewhere for drama today.

55:18.400 --> 55:21.560
I'm also really, really liking what I see

55:21.560 --> 55:23.680
for the future of grub configuration.

55:23.680 --> 55:25.560
It looks like it could be a lot simpler

55:25.560 --> 55:27.760
regardless of what platform you're on.

55:27.760 --> 55:30.880
Fedora 34 uses unified grub config.

55:30.880 --> 55:32.680
So the grub configuration file layouts

55:32.680 --> 55:34.880
depend on the platform you're using.

55:34.880 --> 55:37.800
So if you've got an old bio system or an open firmware

55:37.800 --> 55:41.320
or an EFI system, it's gonna be different.

55:41.320 --> 55:44.520
And that's confusing for your old podcast host here.

55:44.520 --> 55:45.560
So the proposal,

55:45.560 --> 55:46.960
and I don't know if it's actually shipping yet,

55:46.960 --> 55:49.080
is to always store the grub config

55:49.080 --> 55:52.400
and grub environment files in the same place,

55:52.400 --> 55:54.400
slash boot, slash grub2 directory,

55:54.400 --> 55:56.120
that place right there.

55:56.120 --> 55:57.960
And then making small tweaks in another directory

55:57.960 --> 56:00.280
and it always being consistent across all platforms.

56:00.280 --> 56:02.120
Seems like it has some obvious benefits.

56:02.120 --> 56:05.240
Yeah, it's just kind of more of what you'd expect.

56:05.240 --> 56:06.200
And I don't know about you,

56:06.200 --> 56:07.240
maybe there's a lot of users

56:07.240 --> 56:09.320
who hopefully don't ever have to mess around with grub

56:09.320 --> 56:10.680
or what goes on in slash boot.

56:10.680 --> 56:11.960
But for whatever reason,

56:11.960 --> 56:13.880
I'm fascinated by booting the kernel.

56:13.880 --> 56:15.080
So I'm always mucking around in there,

56:15.080 --> 56:17.360
even when I don't need to or just checking things out.

56:17.360 --> 56:19.440
And on EFI systems in particular,

56:19.440 --> 56:21.080
there's been a lot of variants around

56:21.080 --> 56:22.920
how does the EFI partition get managed?

56:22.920 --> 56:24.320
How does it get mounted and where?

56:24.320 --> 56:25.880
And then what things go in there

56:25.880 --> 56:27.800
versus go on like a slash boot partition

56:27.800 --> 56:31.360
that's not the fat one, but like an ext4 version.

56:31.360 --> 56:32.680
So now that's being simplified.

56:32.680 --> 56:33.680
Everything's gonna be consistent

56:33.680 --> 56:35.280
no matter where you're running Fedora.

56:35.280 --> 56:37.520
And it's gonna be under slash boot slash grub

56:37.520 --> 56:40.440
slash grub.cfg, like you'd expect.

56:40.440 --> 56:41.960
And Neil says it has shipped.

56:41.960 --> 56:44.440
That is so brilliant.

56:44.440 --> 56:45.880
You know, and it's kind of thankless work.

56:45.880 --> 56:47.200
Sure, it's like it doesn't really change anything.

56:47.200 --> 56:48.640
It's not a new feature or anything.

56:48.640 --> 56:50.080
I mean, there are benefits,

56:50.080 --> 56:52.520
but it's just that kind of nice cleanup and maintenance

56:52.520 --> 56:54.200
that is really nice to see.

56:54.200 --> 56:56.920
Oh, 34 is such a solid release.

56:56.920 --> 56:58.320
There's so much we could dig into.

56:58.320 --> 57:00.880
If you have any specific questions or area of interest

57:00.880 --> 57:02.520
that you found that you think maybe Wes

57:02.520 --> 57:03.440
and I could geek out on,

57:03.440 --> 57:07.120
let us know at linuxunplug.com slash contact

57:07.120 --> 57:09.480
and congratulations to the entire team.

57:09.480 --> 57:11.240
It is yet another fantastic release.

57:11.240 --> 57:13.640
And it's, I think maybe an extra special one

57:13.640 --> 57:17.040
with GNOME 40 and plasma switching to Wayland

57:17.040 --> 57:20.840
and pipe wire landing and this unified grub stuff.

57:20.840 --> 57:23.920
Wow, just really just very impressed.

57:23.920 --> 57:25.480
Good work everybody.

57:25.480 --> 57:28.920
Now, before we wrap up today,

57:28.920 --> 57:31.760
we do just have a spot of housekeeping around here

57:31.760 --> 57:35.640
because Minimac has a special Luplug announcement.

57:35.640 --> 57:36.880
Yeah, thank you, Chris.

57:36.880 --> 57:39.240
You know, Chris, I had a dream.

57:39.240 --> 57:40.640
I always wanted to do a talk

57:40.640 --> 57:43.160
about the MyCraft voice assistant project

57:43.160 --> 57:46.000
and guess what, my dream will come true.

57:46.000 --> 57:47.840
I'm in contact with Chris Gessling,

57:47.840 --> 57:50.840
the community manager of the MyCraft project.

57:50.840 --> 57:52.560
And we both hope to be able

57:52.560 --> 57:55.440
to put together a cool talk for you.

57:55.440 --> 57:58.960
The talk will be scheduled the 9th of May,

57:58.960 --> 58:01.400
but we'll be already be playing around

58:01.400 --> 58:04.240
with MyCraft next Sunday during Luplug.

58:04.240 --> 58:06.640
So in case you want to give MyCraft a try,

58:06.640 --> 58:09.320
we will give you a hand next Sunday.

58:09.320 --> 58:11.800
Chris himself, so Chris Gessling himself

58:11.800 --> 58:13.480
might not be available for the talk

58:13.480 --> 58:15.720
because he is living in Down Under.

58:15.720 --> 58:16.800
So I mean, for him,

58:16.800 --> 58:20.040
the talk will be in the midst of the night.

58:20.040 --> 58:22.840
So this is a call for participation

58:22.840 --> 58:27.600
for our MyCraft talk of the 9th of May

58:27.600 --> 58:29.720
and even for next Sunday.

58:29.720 --> 58:31.840
Of course, we will also invite

58:31.840 --> 58:33.680
the MyCraft community for that talk.

58:33.680 --> 58:36.320
I don't understand, but I'm learning new things every day.

58:36.320 --> 58:38.400
And now I was interrupted by MyCraft.

58:38.400 --> 58:40.640
That will be our special guest.

58:40.640 --> 58:42.480
Hey, MyCraft.

58:42.480 --> 58:44.600
Hey, MyCraft.

58:44.600 --> 58:46.520
Sing a song for us.

58:46.520 --> 58:49.240
I would be happy to sing for you.

58:49.240 --> 58:54.160
She packed my bags last night, pre-flight.

58:54.160 --> 58:55.760
Hey, MyCraft.

58:55.760 --> 58:57.120
Stop.

58:57.120 --> 59:00.200
So Chris, I'm sure we will have a lot of fun

59:00.200 --> 59:01.040
and that's all from me.

59:01.040 --> 59:01.880
Thank you.

59:01.880 --> 59:02.720
Thank you, Mini Mac.

59:02.720 --> 59:04.960
Check out the Luplug every Sunday.

59:04.960 --> 59:06.800
It's noon Pacific, 3 p.m. Eastern,

59:06.800 --> 59:07.880
or get it in your time zone

59:07.880 --> 59:11.360
at jupiterbroadcasting.com slash calendar.

59:11.360 --> 59:13.640
That sounds like that's going to be a really great one.

59:13.640 --> 59:15.400
And it's always fun to hang out in the lounge

59:15.400 --> 59:17.480
in our Mumble server and just chat with people

59:17.480 --> 59:18.840
that think like you do.

59:18.840 --> 59:22.320
Information for the Mumble server is at linuxunplugged.com.

59:24.600 --> 59:27.160
And thank you to our Unplugged Core contributors

59:27.160 --> 59:28.800
at unpluggedcore.com.

59:28.800 --> 59:31.400
I have a special note for you.

59:31.400 --> 59:33.320
So check your feeds.

59:33.320 --> 59:36.320
It's also in the member download area

59:36.320 --> 59:40.400
for a very special exclusive deal to get 15%

59:40.400 --> 59:43.000
off an item I have created for our members

59:43.000 --> 59:45.400
in the Jupiter Garage at jupitergarage.com.

59:45.400 --> 59:47.840
So go check your feed or the download area.

59:47.840 --> 59:49.240
You'll see it there.

59:49.240 --> 59:51.160
And then you can take 15% off for something,

59:51.160 --> 59:52.920
which is the reason why it's 15% off

59:52.920 --> 59:54.680
is really because that's the cost.

59:54.680 --> 59:57.040
That's our, so you just get it at cost.

59:57.040 --> 59:58.720
And it's a very limited item.

59:58.720 --> 01:00:01.400
But our members make this show really possible

01:00:01.400 --> 01:00:02.240
at the end of the day.

01:00:02.240 --> 01:00:04.080
So we thank them at unpluggedcore.com

01:00:04.080 --> 01:00:05.600
and a discount on something like that

01:00:05.600 --> 01:00:07.940
is just one of the ways we can thank them.

01:00:07.940 --> 01:00:11.280
But I also get two feed options,

01:00:11.280 --> 01:00:14.080
a limited ad version of the show, same full production,

01:00:14.080 --> 01:00:16.600
all the Joe Lovin, just less ads,

01:00:16.600 --> 01:00:19.120
or the full live stream, which is like

01:00:19.120 --> 01:00:21.080
another 1.5 shows really.

01:00:21.080 --> 01:00:23.420
All our screw ups, which is a lot this week.

01:00:23.420 --> 01:00:26.080
I had a liquid lunch.

01:00:26.080 --> 01:00:27.120
On my way into the studio,

01:00:27.120 --> 01:00:28.680
I grabbed me a See Ya Next Tuesday

01:00:28.680 --> 01:00:30.460
because I just missed lunch.

01:00:30.460 --> 01:00:31.800
So I grabbed a See Ya Next Tuesday

01:00:31.800 --> 01:00:33.840
on the way into the studio and popped it open

01:00:33.840 --> 01:00:35.520
and chugged it before I started the stream.

01:00:35.520 --> 01:00:36.760
And I'm paying the price.

01:00:36.760 --> 01:00:37.600
But you know what?

01:00:37.600 --> 01:00:39.320
Joe cleans it all up.

01:00:39.320 --> 01:00:42.060
If you'd like to see all of the hard work he does,

01:00:42.060 --> 01:00:43.600
you can get the full live stream version

01:00:43.600 --> 01:00:44.480
where you hear all of it

01:00:44.480 --> 01:00:46.440
and you get all the extra content as well.

01:00:46.440 --> 01:00:48.840
So thanks to our members at unpluggedcore.com

01:00:48.840 --> 01:00:52.160
and make sure you go look for that special message.

01:00:52.160 --> 01:00:53.840
It's like a phone call between me and you

01:00:53.840 --> 01:00:56.680
and it's a discount and more information

01:00:56.680 --> 01:00:58.300
on what I'm hinting at right now.

01:00:58.300 --> 01:00:59.240
So thank you everybody.

01:00:59.240 --> 01:01:00.540
We do appreciate you.

01:01:01.940 --> 01:01:04.760
Couple of quick bits of feedback.

01:01:04.760 --> 01:01:08.280
Jim wrote in after hosting email for six plus years.

01:01:08.280 --> 01:01:09.800
You wanna take this one, Mr. Payne?

01:01:09.800 --> 01:01:12.320
Jim wrote, I've hosted my own email server

01:01:12.320 --> 01:01:15.480
for six plus years with almost all that time

01:01:15.480 --> 01:01:17.320
performing minimal maintenance.

01:01:17.320 --> 01:01:19.720
There's hope for us yet, Chris.

01:01:19.720 --> 01:01:21.040
Servers pretty much remain the same

01:01:21.040 --> 01:01:23.240
except for maybe compiling Dovecot a couple of times

01:01:23.240 --> 01:01:24.980
to get new versions.

01:01:24.980 --> 01:01:26.240
Originally, I'd followed a guide

01:01:26.240 --> 01:01:29.040
and installed the email server on dedicated hardware.

01:01:29.040 --> 01:01:31.920
But as I evolved in my Linux experience,

01:01:31.920 --> 01:01:33.560
I actually implemented Proxmox

01:01:33.560 --> 01:01:35.600
and was able to move that dedicated install

01:01:35.600 --> 01:01:38.240
into a container without reinstalling.

01:01:38.240 --> 01:01:39.340
Nice.

01:01:39.340 --> 01:01:40.180
Interesting.

01:01:40.180 --> 01:01:41.360
Here's another part that I had missed out on.

01:01:41.360 --> 01:01:43.720
I guess two years ago,

01:01:43.720 --> 01:01:47.240
Jim implemented Proxmox mail gateway container

01:01:47.240 --> 01:01:49.480
which sets up a backend post effect server

01:01:49.480 --> 01:01:51.360
while still using the web UI

01:01:51.360 --> 01:01:54.320
of this Proxmox mail gateway to access it.

01:01:54.320 --> 01:01:56.580
So you can still keep this existing setup

01:01:56.580 --> 01:01:58.600
but just get a nice web GUI for free.

01:01:58.600 --> 01:01:59.420
Awesome.

01:01:59.420 --> 01:02:01.120
That is nice.

01:02:01.120 --> 01:02:01.960
You know what?

01:02:01.960 --> 01:02:02.840
That's the second mention I've heard

01:02:02.840 --> 01:02:04.180
of this Proxmox mail gateway.

01:02:04.180 --> 01:02:05.920
So that seems pretty, pretty good.

01:02:05.920 --> 01:02:08.280
He said he has had some blacklist issues

01:02:08.280 --> 01:02:09.880
but he just tries to ignore those ones.

01:02:09.880 --> 01:02:12.320
He's lucky because I've had a lot worse.

01:02:12.320 --> 01:02:14.200
But we also got a neat trick

01:02:14.200 --> 01:02:16.480
for another self-hosted mail solution.

01:02:16.480 --> 01:02:19.600
One that may be a solid replacement for mail in the box

01:02:19.600 --> 01:02:20.720
if that doesn't work for you.

01:02:20.720 --> 01:02:22.720
It's from Sir Lurksalot.

01:02:22.720 --> 01:02:24.720
He says, apparently having been dropped

01:02:24.720 --> 01:02:25.840
on my head at some point,

01:02:25.840 --> 01:02:27.520
I also run my own mail server.

01:02:27.520 --> 01:02:30.160
And I thought I would mention a neat feature of doing so

01:02:30.160 --> 01:02:31.240
that I take advantage of.

01:02:31.240 --> 01:02:32.360
So here's a reason why you might wanna

01:02:32.360 --> 01:02:33.800
host your own mail server.

01:02:33.800 --> 01:02:35.000
We also heard, by the way,

01:02:35.000 --> 01:02:36.040
side note, Wes, we also heard

01:02:36.040 --> 01:02:36.980
from a lot of people out there.

01:02:36.980 --> 01:02:38.280
They're just like, hell yeah,

01:02:38.280 --> 01:02:39.840
I'm still running my own mail server.

01:02:39.840 --> 01:02:40.740
Good on you guys.

01:02:40.740 --> 01:02:41.580
Go for it.

01:02:41.580 --> 01:02:42.400
That's awesome.

01:02:42.400 --> 01:02:43.240
Which I appreciate.

01:02:43.240 --> 01:02:44.080
Yeah.

01:02:44.080 --> 01:02:46.880
But he says that he uses this wildcard feature

01:02:46.880 --> 01:02:50.360
which are aliases that any non-existing email address

01:02:50.360 --> 01:02:52.240
that gets sent, like somebody emails something

01:02:52.240 --> 01:02:55.040
at Bob at his server that doesn't exist,

01:02:55.040 --> 01:02:58.520
it'll just forward to his main email account.

01:02:58.520 --> 01:03:01.060
The reason why that's nice is he can easily make up

01:03:01.060 --> 01:03:03.420
an email box name on the spot

01:03:03.420 --> 01:03:05.220
when registering for an online service,

01:03:05.220 --> 01:03:07.240
like make something specific for them.

01:03:07.240 --> 01:03:09.280
And then never really have to worry about it

01:03:09.280 --> 01:03:11.060
because it'll just show up in his mailbox.

01:03:11.060 --> 01:03:13.040
And then if he ever wants to reply to it,

01:03:13.040 --> 01:03:15.520
he just goes and creates a quick alias first

01:03:15.520 --> 01:03:17.020
and then sends it off.

01:03:17.020 --> 01:03:19.480
But he also wanted to recommend this tool

01:03:19.480 --> 01:03:21.140
that's called Modoba.

01:03:22.940 --> 01:03:24.080
Modoba.

01:03:24.080 --> 01:03:27.760
M-O-D-O-B-O-A.org.

01:03:27.760 --> 01:03:30.520
And it is an easy way to get up and running with mail,

01:03:30.520 --> 01:03:32.300
perhaps a mail-in-a-box replacement.

01:03:32.300 --> 01:03:35.660
It gives you Python and Django-based front-end interface

01:03:35.660 --> 01:03:37.280
to manage Postfix, Dovecot,

01:03:37.280 --> 01:03:39.560
and all of the related components.

01:03:39.560 --> 01:03:41.100
We'll put a link to that in the show notes.

01:03:41.100 --> 01:03:42.840
Wow, yeah, it looks like it's got web mail,

01:03:42.840 --> 01:03:46.800
calendars, address book, filtering rules, auto response.

01:03:46.800 --> 01:03:47.720
Fancy.

01:03:47.720 --> 01:03:50.200
And you know, I love that first tip there

01:03:50.200 --> 01:03:51.560
because it's kind of like what you can do

01:03:51.560 --> 01:03:53.520
with Pluses and Gmail or Outlook,

01:03:53.520 --> 01:03:55.100
but way more flexible,

01:03:55.100 --> 01:03:58.100
especially for those picky websites that won't take a Plus.

01:03:58.100 --> 01:04:01.600
["Pomp and Circumstance"]

01:04:06.200 --> 01:04:09.120
And we have a Rust pick, not just any pick,

01:04:09.120 --> 01:04:12.720
a Rust pick, and this one's a workspace

01:04:12.720 --> 01:04:14.380
that's aimed at developers.

01:04:14.380 --> 01:04:16.120
I think they call it like a terminal

01:04:16.120 --> 01:04:18.360
with all batteries included.

01:04:18.360 --> 01:04:20.360
Tell us about this little discovery, Wes.

01:04:20.360 --> 01:04:24.320
Yeah, it's called Zelj, Zelj, I don't know.

01:04:24.320 --> 01:04:28.860
Z-E-L-L-I-J, and of course, yes, it's written in Rust.

01:04:28.860 --> 01:04:30.040
And while that part is exciting,

01:04:30.040 --> 01:04:31.300
I think what's most exciting to me

01:04:31.300 --> 01:04:32.700
is just sort of this new approach

01:04:32.700 --> 01:04:34.400
at a terminal multiplexer.

01:04:34.400 --> 01:04:36.820
And that's what it is at its core,

01:04:36.820 --> 01:04:38.960
but that's just the infrastructure layer

01:04:38.960 --> 01:04:41.080
because it also includes a layout system

01:04:41.080 --> 01:04:44.640
and a plugin system allowing you to create plugins

01:04:44.640 --> 01:04:47.560
in any language that compiles to WebAssembly.

01:04:47.560 --> 01:04:49.960
Yeah, Rust and WebAssembly,

01:04:49.960 --> 01:04:51.720
that's double hype for this project.

01:04:51.720 --> 01:04:54.680
That's right, that is pretty great, and it looks good too.

01:04:54.680 --> 01:04:56.160
And of course, because it's Rust,

01:04:56.160 --> 01:04:58.240
there's a sketchy, just pre-compiled,

01:04:58.240 --> 01:05:00.360
Musal-linked binary you can go download

01:05:00.360 --> 01:05:02.120
to give it a try with minimal friction.

01:05:02.120 --> 01:05:04.200
What could go wrong?

01:05:04.200 --> 01:05:05.620
I would run it with pseudo privileges.

01:05:05.620 --> 01:05:06.460
I would just do pseudo,

01:05:06.460 --> 01:05:07.880
and then I'd run the binary directly.

01:05:07.880 --> 01:05:09.400
It looks nice, though, I will say.

01:05:09.400 --> 01:05:11.400
Like, I've got it up, and it's got fancy fonts

01:05:11.400 --> 01:05:13.960
and a really nice banner at the bottom by default.

01:05:13.960 --> 01:05:15.600
It might stick around.

01:05:15.600 --> 01:05:16.440
Yeah, no, I tease.

01:05:16.440 --> 01:05:17.440
It does look really great.

01:05:17.440 --> 01:05:20.180
And don't run random binaries from the internet as pseudo.

01:05:20.180 --> 01:05:21.800
Do I even have to disclaim that?

01:05:21.800 --> 01:05:23.400
Should be obvious, I'm kidding.

01:05:23.400 --> 01:05:25.160
Jeez, jeez.

01:05:25.160 --> 01:05:26.360
Anyways, that looks really good.

01:05:26.360 --> 01:05:30.320
It's Z-E-L-L-I-J?

01:05:31.240 --> 01:05:35.780
Link in the show notes at linuxunplugged.com slash 403.

01:05:35.780 --> 01:05:37.080
You can find a lot there.

01:05:37.080 --> 01:05:40.480
Also, you can find our sponsor, Cloud Guru, on social media.

01:05:40.480 --> 01:05:43.120
They're just slash a Cloud Guru just about everywhere.

01:05:43.120 --> 01:05:44.600
That's a social media website.

01:05:44.600 --> 01:05:45.600
It's really easy.

01:05:45.600 --> 01:05:48.400
Slash a Cloud Guru about everywhere.

01:05:48.400 --> 01:05:50.400
The Jupiter Garage is rocking.

01:05:50.400 --> 01:05:53.480
We have a little more Linux action show retro merch

01:05:53.480 --> 01:05:57.140
in there, including the beloved zip-up hoodie.

01:05:57.140 --> 01:05:58.520
One left is in there,

01:05:58.520 --> 01:06:01.520
as well as a couple of brand new low-code items,

01:06:01.520 --> 01:06:04.360
all in the garage sale at jupitergarage.com.

01:06:04.360 --> 01:06:06.320
Wes, I know you already know this,

01:06:06.320 --> 01:06:08.120
but I'm very proud.

01:06:08.120 --> 01:06:13.120
We have shipped damn near 300 items from the garage sale.

01:06:14.840 --> 01:06:16.920
Two NASs in the last week.

01:06:16.920 --> 01:06:17.920
That really is something.

01:06:17.920 --> 01:06:21.040
And it shows, just if you take a look at the studio,

01:06:21.040 --> 01:06:23.920
which is now definitely more of a packing and shipping place

01:06:23.920 --> 01:06:25.640
than it is an audio recording studio.

01:06:25.640 --> 01:06:29.200
We have got, I'm very proud of it, actually.

01:06:29.200 --> 01:06:30.920
Took those lessons from that robe,

01:06:30.920 --> 01:06:32.560
and we have really gotten our game together.

01:06:32.560 --> 01:06:35.560
And we had so much old merch that I was hanging onto

01:06:35.560 --> 01:06:37.120
because of these emotional attachments

01:06:37.120 --> 01:06:40.480
that I realized we could be sharing with our audience.

01:06:40.480 --> 01:06:42.200
And it's going, it's going out the door.

01:06:42.200 --> 01:06:43.640
And we still have more gear and more stuff,

01:06:43.640 --> 01:06:46.620
so check out jupitergarage.com for all of that.

01:06:46.620 --> 01:06:47.640
If you do the Twitter thing,

01:06:47.640 --> 01:06:49.920
you can follow this show at Linux Unplugged.

01:06:49.920 --> 01:06:51.840
The network is at Jupiter Signal.

01:06:51.840 --> 01:06:56.840
And we have a whole network of shows, fantastic shows,

01:06:57.040 --> 01:06:58.960
over at jupiterbroadcasting.com.

01:06:58.960 --> 01:07:00.080
Lots of great shows.

01:07:00.080 --> 01:07:02.820
Go check those out, including Linux Action News,

01:07:02.820 --> 01:07:05.720
where we break down lots of stories in the Linux world

01:07:05.720 --> 01:07:08.000
that you need to know about every single week.

01:07:08.000 --> 01:07:09.320
See you next week.

01:07:09.320 --> 01:07:11.880
Same bad time, same bad station.

01:07:11.880 --> 01:07:13.920
Keep the Linux rolling, and make it a Linux Tuesday,

01:07:13.920 --> 01:07:17.640
and join us live, 12 p.m. Pacific, 3 p.m. Eastern,

01:07:17.640 --> 01:07:19.680
at jblive.tv.

01:07:19.680 --> 01:07:21.600
Links to everything we talked about today,

01:07:21.600 --> 01:07:25.880
how to contact us, the Mumble Room, Matrix Info,

01:07:25.880 --> 01:07:28.040
probably even the garage sale.

01:07:28.040 --> 01:07:30.200
We link it up at linuxunplugged.com.

01:07:30.200 --> 01:07:32.440
Isn't that a great idea?

01:07:32.440 --> 01:07:34.080
It's like one website.

01:07:34.080 --> 01:07:35.320
You just go to that one website

01:07:35.320 --> 01:07:37.040
for all the crap we talk about.

01:07:37.040 --> 01:07:38.520
How easy is that?

01:07:38.520 --> 01:07:41.480
We do that because we love you, linuxunplugged.com.

01:07:41.480 --> 01:07:42.480
Thanks so much for joining us

01:07:42.480 --> 01:07:45.680
on this week's episode of the Unplugged program.

01:07:45.680 --> 01:07:49.760
And we will see you right back here, next Tuesday.

01:07:51.060 --> 01:07:51.900
Tuesday!

01:07:51.900 --> 01:08:16.760
How to Get Rid of the Linux

01:08:21.900 --> 01:08:35.500
All right, JBtitles.com. Let's title this here show. It's a long one, and we cover it

01:08:35.500 --> 01:08:40.460
a lot. I mean, obviously, mostly the focus is Fedora 34, but there's a lot of ground.

01:08:40.460 --> 01:08:42.700
There's a lot of ground to cover.

01:08:42.700 --> 01:08:43.700
No kidding.

01:08:43.700 --> 01:08:49.960
Uh, Fedora 34, the worst release ever. Oh, that would be a good idea. Yeah, get him clicking

01:08:49.960 --> 01:08:50.960
with that one.

01:08:50.960 --> 01:08:51.960
Oh, jeez.

01:08:51.960 --> 01:09:20.960
Clicks!

