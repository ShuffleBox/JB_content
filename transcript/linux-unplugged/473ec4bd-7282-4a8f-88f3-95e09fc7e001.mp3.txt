Do you guys remember your 2022 predictions we made?
I try to blank those out just immediately after making them.
That way, I'm surprised next year as well.
Yeah, I feel like that's what I do.
But I don't I don't say I do it on purpose.
It's just what happens.
I'm pretty sure, though, I predicted that Flat Hub would monetize.
Right. Didn't. Oh, yeah.
You sounds vaguely familiar.
Yeah. On that one for a while.
I guess I just wanted to bring that up so that way I could get an attaboy.
But we're getting we're getting a real preview of what that's going to look like.
And we're seeing some code from Purism and others to actually build in
purchasing capabilities in the GNOME software.
And there is a beta version of Flat Hub that you can check out right now
if you want to see what it's like.
It's just a beta flat hub dot org.
And it's a new design.
And it's kind of more GNOME software ish for better or worse.
For example, let's look at the authenticator app, which helps you generate
two factor authentication codes.
When you scroll down, it has a layout and a feature set
and description set very similar to the way GNOME software does.
Not awful, because this aspect of GNOME software, I actually kind of like.
But it's yeah, it's a it's a change for sure.
But they're they're working towards making it possible for transactions.
And it seems like there's going to be a at least a somewhat
of support for pay for what you want model for Flat Hub to.
That's just right around the corner. That's pretty cool.
But do they have a dark mode?
They well, you know, they better.
I want me some dark mode, dark mode purchases.
I could activate my dark reader.
You ready? This will this will make you feel better.
I'll just go over there and I'll activate my own dark mode.
Wow. There you go. Dark reader. Thanks, Chris. Much better.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris. My name is Wes. And my name is Brent.
Hi, guys. Hello, gentlemen.
Oh, hi. Oh, there. Hello. Oh, that's good.
Oh, I'm glad you're here because we got a big show.
We have really spent the summer looking at these immutable Linux distributions.
Your silver blues, your Nix's after this summer, spending some time with these.
We think there's a good shot that this is the future of mainstream Linux.
I don't know about enthusiast Linux, but I think there's a good chance
this is what your average Linux user will get when they install Linux,
let's say, five, 10 years down the road.
But nothing is so perfect.
It cannot be criticized, a wise man once said.
So today we'll tell you the five problems you can expect
when trying out Nix OS or another immutable Linux type distro like silver blue.
And there's some good. Obviously, we've talked about that.
But after spending some time with it, there's some things
we should probably tell you about, too.
We have to give you the good and the bad.
Plus, after all of that, the breaking change that has Linux developers
so frustrated, one is actually saying the logical solution
is just to target wine when you want to build a Linux app.
Oh, no. We'll talk about that.
Yeah, then we'll round it all out with some boosts and picks and a lot more.
So before we go any further, let's bring in that virtual lug
time appropriate greetings, mumble room.
Hello, hello. Hello. Hello. Hello.
Hi, Chris. Hi, Bryson. Hi, Brent.
Hello. If you'd like to join our mumble room, it's Linux unplugged.com
slash mumble for the info.
And then we're live Sundays, noon Pacific, 3 p.m.
Eastern. You can pop in there and get your thoughts on the show.
You just take me to the chat room.
Also, I'd love to say good morning to tail scale.
Have you tried out tail scale yet?
It's the best mesh VPN out there protected by WireGuard.
Oh, man, I have I have I have tail scale on everything.
I have tail scale on absolutely everything.
And I have turned off all inbound ports on my firewalls completely.
No more inbound ports. I love it.
It's going to change your networking game.
Go try it out for free on 20 devices.
Tail scale dot com and tell them some plugs that you go say good morning.
OK, so we talked about this a little bit on Linux action news,
but I wanted to expand the discussion here.
This is a tricky situation.
It involves G lib C and a new version was released.
And of course, the rolling distros get it first, like your arches.
Mm hmm. And it wasn't long after a new version of G lib
C, which just about all software on Linux depends on.
It wasn't long after that new release came out that ARCH users were discovering
that their video games with anti cheat were no longer working.
And Weston involves changes in this hash section of G lib C.
Right. Yeah, as as part of once you've got like got things linked up,
you've got your L file written on disk.
Well, you want to be able to quickly find the symbols contained there.
And so there's a nice little hash table, an ability to go quickly, look those things up.
There's an older style DT underscore hash, and then there's a new version DT underscore
Gnu underscore hash that's been around for a long time.
And at this point is sort of the de facto standard for most things compiled with
G lib C and the way most things have been shipping. But up until recently,
the way configuration was run at various build times and library distros and upstream,
it meant you would get both versions of that hash table by default in a recent version.
They were dropping the old style one. It was like, hey, look, it seems like
everyone's been adding our new version for ages now.
It's been over a decade. We don't really let you know, saves a little bit of disk space.
We can just drop it. We're not interested in maintaining this here.
Any longer, at least not have it as a default option.
And then we find out that, yeah, it turns out some things were still using it.
Yeah, specifically vidya games, probably other ones, too, though.
We know about a library that was broken that also involves graphics.
But the reality is, is that when it does ship to all the other distributions out there,
we'll discover more things that break. Right.
The guess what? A lot of a lot of gamers like Arch these days.
So the rolling distros got it first. But no doubt other software will break as well.
Well, and you know, Arch also is usually it doesn't they're not carrying a lot of changes and things.
So when an upstream default does change, they don't often have like a ton of patch sets against that.
Right. So it's whatever whatever happens upstream.
Yeah, although that'll be changing. They will be carrying their own patch set for this.
Other distributions will have to as well. It's part of a bigger discussion.
Valve even offered to help with some of this because obviously they're concerned it breaks a lot of their stuff.
And it actually touches on what makes Linux good and bad as a platform to ship applications on.
And we often talk about breaking changes from the kernel's perspective.
And we talk about Linus's strong stance on never breaking user space.
That matters. But if some of the other fundamental things like G Lib C don't follow that same philosophy,
you can't really tell application developers it's a great stable platform with non-breaking changes.
And so you'll see this is where distributions play a role in the Linux ecosystem.
Distributions are going to have to step up and start patching G Lib C to support both the original version
and the GNU version of this hash section.
And that'll just be one more thing they have to maintain now because upstream isn't really interested in maintaining the old thing.
And these anti-cheat software makers who are mostly Windows developers,
they're not interested in making a change for the way G Lib C now does things.
Like it's just a total non-starter for them.
And so this has led one of the Proton developers who's well respected to just come out and say,
the only logical thing to target Linux when you're an application developer,
if you want to guarantee years of compatibility, is target the Win32 API on Linux and use one.
They say, these problems just happen all the time on Linux.
Different parts of the Linux stack will break.
This is most likely never going to change.
And so therefore, Win32, aka Wine, is the only stable ABI on Linux.
And they kind of wrap it all up with some final thoughts.
They say, I think this whole situation shows why creating native games for Linux is challenging.
It's hard to blame developers for targeting Windows and then relying on Wine and Friends.
It's just more stable and much less likely to break and stay broken.
That's pretty damning.
And it's hard not to say they're wrong when this whole breakage situation is going down right now.
I mean, who knows how it'll end up.
Yeah, although I mean, I think maybe we should be careful about what kind of applications we're talking about.
It's not like this broke a whole bunch of these common Linux apps.
There are some.
In one sense, it's almost not surprising, right?
Like a lot of this, we're not used to shipping this kind of application on Linux distribution.
I mean, we're getting there and it's getting better.
And this definitely is causing problems.
But we're used to just having software come from distros where things get built consistently, right?
That they all get integrated together.
And so having compatibility for random binary applications across time has not always been the same kind of focus
that admittedly and we should give credit to Microsoft has had in the Windows world.
Again, not as a judgment, just like in this sense, to me, it's not really that surprising because it's kind of a, you know,
it's just not what people have really thought about.
You could understand how Windows developers specifically in the gaming area might be a little unfamiliar with this type of approach
where they are a little bit more familiar with Microsoft's type of approach, which has been maybe more accommodating.
And I think you could argue both.
This is a decade old hash function that has been replaced and literally just about everything else in the world is not using this.
But Brent, don't you think this is sort of like a clear indicator?
When we've had all of these discussions about is the distro still necessary?
Can people just build it from scratch if there's an enthusiast?
What's the role of the Linux distribution with containers and all of that?
To me, this seems like pretty clear.
There's still a role for distribution maintainers to play here.
Well, and I wonder if that role, you know, has it seen a bit less attention these days?
Like I know flat packs and stuff solve similar ish problems by bundling libraries and stuff.
So I wonder, do we have less maintainers kind of looking at stuff?
Or is this a problem of like using some kind of deprecated software for something that maybe you should have targeted differently?
I wonder if that's the case, too.
I mean, it seems like there's a lot of those aspects, it seems also that, you know, we're used to working within a sort of larger free software community.
So it might be clear for distro maintainers or people who work with like the GNU folks or things that like, oh, yeah, of course, this is the standard that is now being used.
But if you're some third party who just went and found some like, you know, sysv, compact, you know, general guide to working with this libc, oh, I need to go look up some symbols.
Oh, yeah, GT hash, that seems like the thing that's been here forever.
I'm going to use that.
You're not really plugged in on the same level. And so our normal methods of sort of like, look, we we added this, we gave you all a decade.
It seemed like we were cool. We'd given you a time for backwards compatibility.
And then also with some things, this is not maybe for anti cheap, but just in games in general, sort of class of application that just gets made.
And then there's not once the update stop, that game is just done.
And that's another thing that you don't just don't run that many things like that.
Well, and developers have, you know, such a reputation for just voluntarily adopting new technologies and new functions without being forced to do it like that's the thing.
Of course, if they didn't have to, they didn't stop using it. Why would they make that change?
It's just that's the sort of thing that is just foregone conclusion in the world of development.
I actually think there is something to this win 32 is the only stable ABI, but I think it's actually less and less of a problem than ever.
And I think, Brent, you just touched on it there with Flatpak, and I will admit to an ignorance here.
And so if someone knows that's listening, maybe they're in the live chat or boosted in.
If I'm using the Flatpak version of Steam and Proton.
Are they or could they just ship their own version of Gillib C or is Gillib C such a fundamental library to the way everything works that that's outside the scope of Flatpak?
I think I saw that they had an older one still, so I hadn't gotten to this version yet, at least in the race of this time of this most recent discussion.
The runtime ship is on Gillib C as well as Mesa and generally everything else.
Everything from Gillib C, everything apart of the kernel is been from scratch on the ground up.
So this thing wouldn't happen.
You wouldn't have an issue running against a new Gillib C on the host as long that you could like start namespace and stuff.
So I could be OK since I'm using a Flatpak version of Steam.
Yes, totally. It's still I think in the 22 of 08 release that's about to be released like in a couple of days when we will update also the Steam Flatpak.
Because it's one of the main things we test when we release new runtimes.
We are sticking to Gillib C 2.35 and that was like way before any of this broke up.
Just like didn't manage to update on time.
You know, I have to say and this isn't like a fanboy based decision and this is totally just made out of practicality.
But my mentality now, especially when I'm building the next OS based desktop is there has to be a justification why I wouldn't use a Flatpak.
Because they've worked so well for me and they're so easy to update and maintain.
And Flat Hub is such a quick resource to go collect everything really quick and install it all.
And especially once you've hit a critical mass of like I'm using enough Flatpak.
It's like, well, I'm always installing Flatpaks now. So, of course, I've got Flathub configured.
It's all just ready to go. Click, click, click, click.
And so I mean, I guess I'm shocked how well Steam has worked.
But I have run into problems and we will get to that when we get to our five issues with Nix.
Now, Chris, did this affect the Steam Deck at all? Because you mentioned it showed up on Archverse and I wondered, was that a thing on the Deck?
No. And doesn't this kind of even underscore why Valve chose to just make their own distribution?
Is to avoid just these kinds of problems.
They'll never ship this issue in Steam OS. So the Deck will never have this problem.
It's incredible what Proton and Wine have done so that we can, you know, we can just steal the stability of another platform's implementation stuff to run on our own.
And have it work and paper over some of our own native issues.
But we've also got kind of the confluence of other technologies like, you know, various containerizations and namespacing that makes it somewhat easier to have these things.
You know, you can have the whole Steam environment. You can have Flatpaks containing this stuff.
Like, we just have a lot of options now.
Yeah. Minimac, you think that Windows isn't necessarily immune from this type of problem?
Yeah, that was a question I had.
Couldn't that happen in the Windows environment too? But the big difference is that every company is publishing their software in Windows.
They just get a notice before and they can adapt before that change happens.
Yeah, I suppose there probably is a more formalized developer notification and outreach.
That's just not really a scalable solution in free software, right?
Because the GLibc maintainers are probably not even thinking about anti-cheat when they're making this change.
And they're not really at a nine-to-five job where they're going to reach out to the stakeholders and hold a meeting where they can all jump on Zoom and discuss each one of their key points.
That's just not going to happen in this environment.
Well, and there's some nuance there too, you know, that some of them on the mailing list point do try to point out that like, look, we do generally take ABI breaks seriously.
It's not that we're against, you know, we just hadn't really thought of this in that way before.
You know, like the way that the ELF ends up on the disk was not really part of what we thought of as the GLibc ABI in the past.
And then there's some questions about like, OK, well, does that prevent us to add another possible hash scheme in the future?
If EAC were to update to DT GNU underscore hash, and then how would you handle a similar, like, can we give it another 15 years and then switch that out to an even better implementation or are we stuck like totally frozen forever?
I mean, OK, so to their credit, they do seem to be listening. But to Minimac's point, I do think a company would probably have communicated this better.
So that's probably a good way to frame it. It's not that this thing would never happen on Windows.
We see these kinds of changes. It's just there's maybe Mac OS as a good example, right?
They drop things, make you shift to new APIs all the time.
Yeah, but I think they'd probably announce that at WWDC, right?
So you'd have the summer to update your app. And for a lot of developers, that's not enough time.
But there is that window there. And I think everyone has has plainly said that clearly there's like not some not great docs on this.
And like clarity around what the upstream considers as like the standards, even if it's implicitly known in the community, probably should do a better job there, too.
Yeah. So if you're on a distribution that updates frequently and you like your steam games, just keep your eyes out for this.
Distribution maintainers are already kind of adapting, but it's just something you need to be aware of.
And if you're on an LTS or something like that, then you get to sit back and laugh at the rollers for a little bit.
Enjoy this for a moment.
Linode.com slash unplugged. Go there to get a hundred dollars and support the show.
It's a great way to really get started and deploy something you've been meaning to try for a long time.
No judgment there. We've all got projects we've been meaning to get to.
And Linode's probably one of the best places you could consider to deploy.
So they started in 2003 as one of the first companies in cloud computing back before you called it cloud computing kids.
And now nearly 19 years later, they're rocking harder than ever.
They've got 11 global data centers. They've got the fastest machines in the biz.
In fact, they recently did MVME upgrades.
And I still am getting emails from listeners out there that are just completely blown away.
I think the email usually starts with, holy crap, I had no idea how much better things would be with an MVME drive.
You know, I get it because you think it's a web server. I'm connecting over, you know, a slow Internet connection.
How how much better could it be? Oh, no, no. Oh, no. More IOPS is always better.
That's where they get the AMD epic processors, too. They are their own ISP.
The list really goes on when it comes to Linode.
I think I could sit here and I could just say I could sum up like the key thing that Linode does is they run Linux really well in the cloud.
That's like the key thing. And then they build a bunch of stuff around that that makes it even better.
I absolutely love their cloud dashboard.
I think it's the best in the business combined with the best API in the business with a command line client with a ton of libraries.
So you could just use Python or I don't know, maybe you're a Rust person.
Yeah, they got a gorgeous API with lots of libraries ready to go.
But you guys, if you listen to the show, you know what's up.
You know how much I love the S3 compatible object storage.
We use it as the back end for next cloud. We use it as the back end for our Jupiter tube.
We just use it as the back end for all kinds of stuff, just even moving files around.
Like when we go to an event and we record a bunch of audio or video, we sort that all out and put it up on the object storage.
They got cloud firewalls, DDoS protection, VLAN support, a powerful DNS manager, Kubernetes support, Ansible support, Terraform support.
I mean, it's just on and on. And it starts at like one click deployment type stuff.
If that's what you're comfortable with all the way down to Nuke and Pave and build it up from the ground yourself.
They've even got physical boxes and they have pricing 30 to 50 percent cheaper than the other major cloud providers out there.
And if you ever run into any trouble, they've got the best support in the business by phone or by ticket 24 seven three sixty five.
No other cloud providers architected in a way to make that sustainable.
But Linode is. Go try it for yourself. See why we've been raving about it. Get 100 bucks and support the show.
You do that by going to Linode dot com slash unplugged.
Get 100 dollars for 60 days to try it out to see what we've been talking about.
One more time, support the show by going to Linode dot com slash unplugged.
It's been a minute since we've cleaned up around here, so we have a few things to tend to.
Why is there so much straw on the floor?
The last few days to get your name in the hat for the JPL tour, like literally, if you're listening to this as we publish only a few days left,
we're going to be rolling the dice and picking 15 names to join us at the Jet Propulsion Laboratory September 29th as the finale.
Actually, not quite the finale because we have we have two meetups after that.
But a key moment in our road trip. Nice save. Nice save, Chris.
I imagine we probably have more than 15 people who have submitted, but not more.
I wouldn't expect a ton more because you have to be in the area. So how many responses have we gotten so far?
Forty nine as of whatever, five minutes before we started the show today.
Those are pretty good odds. That is pretty good.
Those are. So you still got to eat like if you're listening when we're live, you got a couple more days.
What do you pick a day?
I feel like Wednesday when you and I are recording land, we'll we'll we'll run the bot to do the pick.
Well, all right. We'll do the computations. So you have till Wednesday the week.
This is publishing Wednesday, the 24th. Yes. Linux unplugged dot com slash JPL for that.
But we have a bunch of other meetups. Portland area, Southern Oregon area, Northern California area.
We'll have another meetup in Southern California. So we'll also have micro meetups if you're in the area when we're driving around.
So meetup dot com slash Jupiter broadcasting for all that.
And then if you're a local and you want to chat about details or you have suggestions
or you want to get the four one one on what's really going on, some Brent gossip.
Go to bit dot l y slash West Coast crew. That's our matrix room dedicated to the West Coast.
Then also just a little production note for next week.
We're wrapping up our tour of Immutable Linux distros with a look at endless OS and a special guest.
So if you'd like to chat endless OS, maybe join the Mumble Room and come in here and toss your thoughts.
Yeah. Yeah. Go grab it. We'll be chatting about it next week. Little heads up on the program and notes right there.
And with that, we have something new. We're going to do our baller boosts right here.
We're changing up the way we do boosts on the show in a big way.
I will tell you more about that in a little bit.
But I wanted to start with a couple of baller boosts that came into the show this week.
And our first one is the largest boost I think the show's ever received.
It was actually spread across five amazing boosts. But one of the things we're trying to do is make this a little tighter, a little more condensed.
So I added it all up. Lo Palm boosted in with two hundred and fifty thousand sacks.
Because I'm a back home baller in pajamas that cost ten dollars.
Tell my mother that I love her more than any freaking other. That's the life of a back home baller.
All right. Officially a back home baller in our report. That is impressive.
Lo Palm also signs all of his boosts with a lull face and a palm tree, which I like a lot.
I didn't put them all in here, but there was a lot of palm trees in our boost feed this week.
Lo Palm writes, Thanks for covering Nick's. It made me really check it out this time and I love it.
I also wanted to chip in some gas money for Brent.
Oh, thanks.
He notes that he normally uses Pocket Cast. That's a really popular one.
But I'm trying out Breeze for the boosts.
And now I've even figured out how to set my username. I hope it shows up in the boosts.
It does, Lo Palm. Thank you very much.
I like I think he added the emojis because earlier he hadn't figured out how to change his username.
So I'll just sign. Yeah, it's my signature move. I like it.
I'm also glad that putting emojis in there doesn't break the system.
You know, I think that's also it's nice to know. I wasn't sure.
So now we do know. And then we got one other baller boost this week from TomatoDeer, 46,000 sats.
Because I'm a back home baller. If I want something, I just holler.
He wanted to boost in and support the show and also pass along his perfect Linux setup.
So you ready for this, gentlemen? I think I'm ready.
Yeah, lay it on us.
Starts with a GNU slash Linux base. Oh, great. Of course.
Add a little wire guard. Oh, OK.
Put a little jellyfin on there. Bitwarden. Oh, plasma desktop. MPV for your media.
Definitely. Emacs and Vim. Why not both? Sure.
Yeah, I guess. Right. Oh, throw a nano in the mix, too. Oh, Galatarian.
OK, OK. One Chris over right there. You know what? Let's be honest.
That's how it should be. Why not all three? Right.
I don't have to be text editor monogamous, but a little VSCode on there, too.
Now I just want to know how much disk space nano is taking up on my box all the time.
And then, yeah, you know it, of course. He's also got SSH on there.
That, he says, is the perfect Linux stack.
Lean and mean. I like it.
Thank you, Ballers.
All right, so let's talk about five problems that we've come across while using Nix OS.
And I think these are probably almost universally true for all immutable Linux's.
And it's something you should be aware of.
A couple of these might be Nix specific, but, you know, like we've talked a lot about the positives.
And on the whole, we are very happy.
You know, been gushing a bit, you might say.
But I feel like we also should be honest and talk about where things can be a little different.
I think this is the most obvious one, but it's the one we should start with.
You got to configure, like, everything.
Isn't that the feature as well?
They do have a graphical installer, which will set up some of the basics.
But, like, every application.
I'm still impressed that's possible, even.
Yeah, every service, everything you install will just be defaults in each setup.
And sometimes this bites you, like I installed Plasma.
And, you know, I was a little underwhelmed with the look.
The fonts didn't look quite right.
It just didn't seem like any, well, nobody really touched it, for better or for worse.
I was surprised, especially in Nix OS itself, how some things were kind of left like that.
And then a few others were very thoughtfully integrated.
You know, like some of the system level plumbing, I guess, gets the, is often like, you know,
you don't have to worry about, it's not archery.
You've installed something and you're manually enabling stuff, right?
You just sort of tell Nix OS, like, hey, I want this thing both installed and to be operating.
Yeah, right.
But then, as you say, there's a lot of, like, the user level stuff that just is not, hasn't been pre-configured for you
in the way that, like, a desktop focused distribution often does, I guess.
Yeah.
So there's that element, although there's generally guides for most of this stuff, for better or for worse.
I don't know if the documentation I'd say is great.
I think the ArchWiki is actually much more effective as a tool for getting the system configured.
There's extensive documentation for Nix, but in my opinion, it kind of lives in that uncanny valley
where it gets a lot, but then it just says things and has terms where if you're not familiar with Nix,
you're like, I don't know what that means.
I don't know what to do next.
I literally have, I feel like there's almost always some assumed knowledge in every single one of the guides
where I get to it, I'm like, OK, so now I've got to go figure out what they're talking about here
by reading, like, three other forum posts, that way I get an average of what everybody's saying
so I can kind of try to get the right thing and then come back and continue.
And I find that really frustrating.
Also, like, there'll often be examples and it's just an example in a vacuum and doesn't consider, like,
what else you might have set up and configured and doesn't work in, like, most production scenarios.
And then so the example isn't really any good.
So those two things combined that you have to configure everything and the documentation is good,
but, like, that final 10% is really missing.
I think there's, like, a certain spikiness sometimes to the difficulty where, like, most of the time,
and it seems to be just getting a lot better, especially recently, you know, it's like, oh, this is real easy,
I'm on the happy path, I just, you know, I just type that I wanted this in and it's working and it's all set up
and robust and great, and then occasionally you just hit a pothole and then you're, like,
falling six layers down the abstraction stack and you're learning about this functional language
to define your builds and then sometimes if you're doing something weird or cross-compiling,
like, you have to remember that compilers are involved and build tool chains and that's just another,
it's all great and very powerful and it enables clearly a lot of, like, the magic of Nix,
but sometimes that's not really what you want.
Yeah. The Nix Nerds Matrix chat room has saved me in those situations several times.
We are very lucky to have that, that's for sure.
All right, this next one. This is going to sound weird, but if you've never used Nix, you might not expect this.
You can't just download a binary file and run it. Like, you don't just download something,
make it executable, and then run it.
You mean my curl pipe bash is broken?
That ain't going to work because, like, this thing is living in basically a blank environment.
It doesn't even know what loader to use to launch the binary.
It is, because it hasn't been defined by the overall Nix system, it exists basically in a vacuum.
And there are a lot of ways to solve this problem, including ways to spin up environments on the fly,
on demand, that do have everything you need.
But it seems that the, like, just sort of lazy practical way that a lot of Nix users have solved this,
which isn't ideal, but oddly works well, is they've just installed the Steam Dash run package.
Steam Dash run, as you would expect, is basically a little mini environment
that has all the essentials you need to run a binary on Linux.
And so you Steam run binaries that you download, doesn't have to be games,
doesn't have to do anything with Steam, you don't even have to have Steam installed.
You just need Steam run.
And then you can run any binary you want, but it's not really the blessed way.
You're not really supposed to be doing it that way, and the documentation covers this.
You don't say.
But I have to tell you, I understand why.
But boy, was I a little dumbfounded the first time I downloaded a binary.
I think it was something for production that we use that isn't packaged.
And I can't remember, because Reaper is packaged, so I can't remember what it is.
And I downloaded it, and it just doesn't work.
You try to run it, you're like, what?
And, you know, of course, the first thing I do is check the permission.
Does it have the executable bit?
Yes, it does.
All right.
Okay.
All right.
So I start going over to Google.
You know, can't run binary, and then it auto completes in Nix OS.
And I'm like, uh.
Yeah.
This is a thing.
So that's a problem.
It's totally solvable.
You'll understand why once you get into Nix.
It is a thing, but it'll throw a curveball at you.
Right.
And if you don't need it, you know, there's also containers that are easily supported
if you're doing something on the server side.
Yeah.
And honestly, 90% ish of everything I'm using is flat packs these days.
And those are fine.
Just zero problem there.
So instead of learning how to use Nix and write Nix expressions, you've just learned
how to make flat packs.
Well, I had to learn for VS Code because VS Code I tried as a flat pack, and I had to
give it the old thumbs down.
Yeah, that one's tricky in a flat pack, unfortunately.
For basic stuff, obviously, it works just great.
But once you need some, you know, certain runtimes or fancy config stuff.
And this is true for like VS Codeium as well, if you're trying to use the non-Microsoft
version, if there is such a thing.
The less Microsoft.
And this one is like, choose your compromise.
And if you're a big VS Code user, this is really frustrating.
So it doesn't work great as a flat pack because there's certain things you don't get access
to, certain plugins, certain file system things.
Whatever, no big deal, install it as a package.
Well, that's not going to work so great, Chief.
Like, say you want to install a plugin using the VS Code built-in plugin stuff.
I do.
There's a lot of nice plugins in there.
Yeah, those extensions and whatnot.
Yeah, that's not going to work, Chief.
Sorry about that.
You're not going to do that.
In fact, if you do, you'll install some stuff that doesn't work correctly with the underlying
Nix system and it's just going to get really, really shaky, really fast.
There's two ways you can solve this.
One that I did first and worked for a long time was just there is a VS Code with a bunch
of great extensions installed and ready to go.
Ready to go.
Good stuff.
And then if you have, like I have the VS Code sync set up, if you sync it and it supports
those extensions, they'll sync over, they'll get set up on you.
I had most everything I wanted.
But then I got crazy and I wanted to do things like I wanted to add an extension to support
.desktop files and things like that.
Look at you wanting a polished system over there.
Mm-hmm.
And so for a moment it was all good.
I installed the extension to edit.desktop files.
I closed VS Code, opened it again, and the extension was gone.
And I thought, oh, I thought I installed that.
That's funny.
Huh.
No desktop file.
I had to install that.
Okay.
Good.
All right.
There it is.
Sweet.
All right.
So I close VS Code.
I open it up again.
The extension's gone.
What the?
All right.
Go over to Google.
VS Code Nix OS extensions not and it automatically shows not staying installed or whatever.
Like, oh, okay.
Once again, this is a thing, of course.
So then I discovered there is a VS Code FHS compatible package.
And the FHS compatible package, which is like a file system hierarchy standard or something
like that.
Mm-hmm.
That will let you install any extension you want, any old arbitrary way you want, just
like you would on a regular system.
But, you know, it's little things like that that you have to catch and adapt to.
And today it's VS Code.
Tomorrow it might be Reaper, right?
We'll just see.
We'll see how that goes.
It's just that element of it.
My final issue, and I'm curious to know what you guys think about this one, because I feel
like this is both a problem with Nix and perhaps, like, it suffers from this the least out of
all the Linux distros.
I'm genuinely concerned that I'm going to build up a server environment in the future
around Nix OS that will deploy a bunch of stuff.
I'll deploy a bunch of systems, even studio systems.
And then, and I know this about myself, three, four years later, I come back to them and
I cannot remember a thing about them.
I can't remember anything about them.
I can't remember how I put it together.
I just got it set.
It's locked down.
It passes the build check every single time.
So I just went about my day and I'm worried in a year plus I won't remember how any of
this actually works.
It seems like that's the downside to sort of this define it once and then leave it forever
approach is if you're a guy like me who doesn't remember how this stuff worked in a year to
systems a bit of a black box to you.
I mean, that means it's working.
I mean, I don't know if having a server you have to touch all the time is really worth
the cost of, oh, I remember how to configure a server.
If like you don't actually need to be configured servers all the time, which is maybe the problem.
I guess it's not a bad problem to have, right?
Oh gosh, it's worked so well.
I haven't touched it in years.
You're worried about success, which is a funny thing.
Yeah, I suppose.
You know, Chris, I think I'm going to catch you here.
I was listening recently, very recently, in fact, in the last week or two, uh, to self
hosted 67, which is the no container theory where you introduced to the self hosted audience,
your idea of using Nix and this like new containerization and you said exactly the opposite of a sentence
you just said, which was, Hey, I'd love to be able, you know, one of the main problems
I have right now is I set up, I don't know, uh, home assistant and then it sits there
for five years and I don't remember how I did it.
So it takes me, you know, a whole day to get back to it.
But it feels like that's partly what, you know, Nix OS is solving is that you get to
configure it in a way that's readable and that you don't have to rebuild every time
you just kind of run it.
That's why I was thinking when I kind of couch it as maybe it's the district that suffers
from this the least, because ultimately I just go look at my configuration files.
I know this will not last.
This is still the new Nix user in me.
I am bending over backwards to keep everything in one configuration file because I like that
idea.
But I realize all the documentation, everybody who's been using Nix for a while says, nah,
nah, break it out into sub files, break it out in individual dot Nix files.
I have not done that yet, but it also means I go to one file and I can see everything
about my system, everything from user groups to virtualization support to what packages
are installed, right?
And time zone and host name.
It's everything.
I also feel like, Chris, if you deploy this in more areas, especially on the server and
things like that, I think you'll just be more practiced at it and you'll have to touch things,
you know, maybe even the best case scenario, like once a month, let's say.
And so I don't know if that knowledge or that practice will kind of atrophy for you if you
have it deployed more often.
So what you're saying is the solution is more Nix.
That's basically what I just said, yeah.
I'm thinking, yeah, we configure our Nix setup to make sure that it places like a README
file on the box, you know, and then that just tells you the sort of common things you might
want to do in the future.
Like, oh, here's how you do updates.
Here's how you, you know, you're trying to add a package real quick.
Don't do it this way.
I don't know if you're joking, but I actually think that's a great idea.
I can't tell, but I like it.
And remember that, you know, Nick Slang supports comments.
Bitwarden.com slash Linux.
Go there to get started with a free trial for a team or yourself and support the show.
It's bitwarden.com slash Linux.
If you're not using Bitwarden, I'm a little concerned about you because it is the easiest
way out there for an individual or a business to store, share and sync sensitive data.
They have a really secure system.
It's all open source.
It's trusted by a community of millions.
It's what Wes and I use to manage our passwords, our two factor codes, you know, other sensitive
data like Element has a recovery key component.
Some of my wallets do.
You can put those in there too.
Bitwarden also has super slick account switching support so I can switch between my work stuff
and my personal stuff.
And one of the things that gives me confidence to use Bitwarden is there is a self hosting
option if you would need it that is maintained by the community, but Bitwarden works upstream
with them too.
The great thing is though, I've never really felt the need.
I think Bitwarden is such a great value and such an obvious service and they do client
side encryption.
To me it's just always made a lot of sense to just go with Bitwarden directly, but I
think the value proposition with Bitwarden is a no brainer.
I was able to import super easily and they've been adding features that I think are fantastic
like the username generator.
And did you know that they have vault health reports that are available for just about
any kind of plan?
These health reports can be used to evaluate the security of your setup or maybe your entire
organizational vault.
They're always thinking about these kinds of things.
It's their job 24-7 to make this work better.
To make Bitwarden work for you, to make Bitwarden work for your family, or your business.
So go try it out.
Get started at bitwarden.com slash linux.
Go see why we like it.
You can import from your existing password manager, most likely, I was able to with no
problem at all.
Play around with the username generator and the email generator that they have now too.
Create secure usernames, passwords, and email addresses for every site and service you use
and then sync it across all your platforms.
See what I've been talking about by going to bitwarden.com slash linux.
One more time to support the show, bitwarden.com slash linux.
We got some great feedback again this week.
Two letters specifically that came in about last week's episode.
Blooming Strong had some advice about our old server.
They said, I really feel you when you say you had not finished migrating all the things
off that old server.
May it rest in cotton peace.
Six months after getting my new server, I am still trying to migrate from the Windows
box I had hosting everything, Docker Desktop, WSL, etc.
And there's just a few things that are simply too hard or not interesting enough for me
to have done yet.
The migration struggle is real.
I hear that.
And then I also thought, you know, this could be a great opportunity to like maybe I keep
my private stuff on the old server and I just put work stuff on the new server.
Separation of work and personal, you know.
And then honestly, I'm not going to lie to you, I'm not going to lie to you.
The whole OpenSUSE, Nix OS thing, it just, it threw us for a loop.
We started down the path of the lizards and then we discovered the gospel of Nix.
We all accepted Nix into our hearts and now it's like accidentally deflated the lizard
path.
It's not intentional.
No, no, it just, it took us to a different place and that just put a whole pause on the
thing while we just sort of reconnoitered about the whole situation.
And then next thing you know, it's the summer and we got cottonwood problems, you know.
A guy just didn't foresee it.
Not to mention some stray cats.
Yeah, don't remind me.
Jotaroid in it as well with some advice and some rather strong disagreement.
Regarding searching out the colo for the servers, I tend to disagree with Chris for your use
case.
I was in a small business that had three racks in a colo and have some insights to share.
Here are some things to consider.
One, will you have after hours access?
Two, likely you'll have to provide your own internet circus into the colo or if not, I'm
sure you'll end up paying for bandwidth.
Three, need something done?
Well smart hands in quotes will cost you.
Number four, you'll want a KVM so you can access the console remotely in the event the
server doesn't power on, even if you have a ILO or equivalent.
Five, you'll need some switches in there also and some ports as you'll now need more ports
for the KVM, ILO ports, etc.
Six, it's going to take you several days to move all the equipment and get it set up.
Seven, and likely to get a good deal, you'll either be in a sketch part of town or be with
a small provider and what happens if or when they lose their lease.
Number eight, don't forget a label maker.
You'll want things clearly labeled so you can help either Brent or Wes or someone who's
helping troubleshoot remotely or the smart hands at the colo to do things.
And lastly, number nine, rack elevation diagrams become critical as you'll have a lot less
access to the equipment.
Instead, I recommend spending the time and money on adding AC and fans and filters to
your existing rack and close the door to not let the cats in.
Okay, all right, geez, I have to say that gave me a lot of flashbacks, Joe, to life
in colo town.
Now, I didn't have to go to a bad part of town, so I didn't have that experience.
Downtown Everett had a really great data center back in my day, but literally everything else
you said rings 100% true.
I forgot what a pain in the neck it used to be.
And I thought, I just assumed like an animal, by 2022, you weren't having to pay separately
for your power and your bandwidth in a colo anymore, because I remember a time when we
were paying like a thousand bucks a month for a megabit.
It was bad.
And then, yeah, you have to pay for your power.
You do need a KVM.
You do need everything labeled.
I got a label maker, so we're good there, but okay, all right, so we got one thing figured
out.
Yeah.
I've also just made peace with offloading bits to Linode and to LadyJupes.
But LadyJupes, the data center on LadyJupes is a booth in a dinette, okay?
And it's probably, I don't know, I could look it up, I could actually tell you right now
as we're doing the show, but it gets hot in there, even on a cool day when it's not that
hot out.
It can take days for the temperature of that thing to come down.
All right, so we're going to need to rig up a micro AC unit just for the booth.
Yeah, or some sort of vent.
I don't know.
I'll look it up right now as we're doing the show.
My server room temperature in LadyJupes is 86.9 degrees with a high of 88.1 at 11 PM.
So that's pretty good considering, because if you go look at the longer history, you
can see she's been averaging around 90 degrees Fahrenheit.
It's not been good.
That's a little toasty.
It's not been good at all.
And so these devices, like if they are x86, I don't know if they can handle that, right?
But these Raspberry Pis, they keep going, right?
So I've moved some of my media functionality directly into Jupes, and then some of the
batch processing functionality I put on Linode, and we have, it's back.
The system is back.
It seems to be functional.
The updates passed from last week's episode.
They sure did.
But we have it off because it's still 80-ish out there, and so we're just leaving it off
for now, now that I've set up other stuff.
But as the temps come back down, which they will here in the Pacific Northwest, we'll
bring things back locally.
Maybe I'll put a pause on the colo idea because Joe literally just scared the crap out of
me.
There's a lot to manage, yeah, definitely.
Joe even had one last idea for us, a little bonus idea.
He said, hey, you should include some of the cottonwood cotton in your geocaches.
That's hilarious.
We totally have enough.
Go wipe the drives, you know?
Let's get that JB server set.
It could.
Well, given what you said, I don't think it's a good one.
No, it just depends on which batch you get.
You got to get it from the right section.
Lots of fresh stuff.
Yeah, not the stuff in that one corner.
Andrew wrote in as well with a quick little note as a new fan.
Just discovered your podcast, loving this.
I'm ye olde Unix user, started in 82 with the source code to V7 on a 1200 BPI tape and
a new copy of K&R.
I found my tribe.
Oh, nice.
That's great.
Welcome, Andrew.
Welcome in, Andrew.
You know, I don't even really have references for any of what he just said, so I feel lost.
He should join the matrix and explain it to you.
Smithy wrote in as well, hey, your new open source community website on GitHub is a fantastic
project.
Thank you very much, which is going great, by the way.
Why don't you really walk the talk and do your community engagement with real open source
platforms like diaspora, friendica, mastodon, rather than convenient restricted platforms
like Discord or matrix?
Is matrix restricted?
Well, that's one of my questions there.
We run our own matrix, is that restricted?
That feels pretty good to me, actually, feels pretty good.
I included this, and Chris, there's a little triggering note here for you.
The email they wrote in on was postmaster at localhost.local, so of course I wasn't
able to send a thoughtful reply, which I think is a note.
We sometimes get feedback like this from people who discourage the back and forth dialogue.
I want to have a real conversation and to suggest reasons why, of course, we've thought
of this stuff and made certain choices.
So unfortunately, I can't do that, but I guess we'll do it here.
Any quick thoughts, gentlemen?
So I don't know if I agree on matrix.
I think that's probably fine.
I like mastodon, but I have found that I don't really like mastodon as a social, just general
website.
I found it to be really useful when it's project specific.
I've been around, tried out mastodon over the years, never really stuck until finally
I joined the podcasting 2.0 mastodon, where it's really kind of mission specific.
That makes sense to me for a social media platform.
I don't really have any need to have a JB mastodon.
I don't really think it's necessary.
There's plenty of other ones out there, so it's just not something we've really engaged
in.
We've put our focus on matrix.
Right.
Yeah, we don't really...
There's not, at the moment anyway, a JB social, you know, like a dedicated staff member whose
job it is to manage the JB social.
So it's just really not like a platform that ends up where we are super, right?
Because there's, I mean, we have an awesome telegram room.
We've got, there's an awesome self hosted discord room.
There's a thriving matrix community.
And there's already too many notifications there for me to keep up with.
Plus we've got booths, we've got emails.
So hopefully there's good ways for people to reach us and have dialogues when interested.
And then we just kind of have to make some practical choices of where are the most people,
where's the best place we can get that good experience and get to engage with the audience,
but still make the most effective use of time.
Yeah.
And I think that also is the logic behind the choice of using something like GitHub
over GitLab or something like that.
We want to reach the most amount of people for that particular project.
And we think that's how our influence and reach can be best served.
But the nice thing is, is we're also pretty comfortable with the idea that if we're ever,
I don't know, motivated, we would just move off of GitHub.
I don't think that would take us more than an afternoon.
So we're not particularly worried about it.
What are your thoughts, Brent?
Yeah, I think you hit it with the GitHub stuff.
I was relatively new to GitHub when we first started this project and they didn't mention
this directly, but I think that was kind of, you know, between the lines was, well, why'd
you choose GitHub as well?
And we've touched on this previously, I think possibly in office hours.
And it was really balancing, you know, the ideals that we may have, because of course
we have some, and we somewhat feel the same way, but with where the people are.
And in GitHub's case, I think also like a skill that you can get, a really great skill
that you can add to your employment experience.
That's one of the perks of our community, you know, contributors, is they're working
on something they can put on a resume.
And so to best serve that and then, you know, GitHub is the place you can send recruiters
to get your own GitLab or instance like that.
But there's like, you know, not a lot of culture and community adoption in the hiring practices
around that.
I would think.
I think everybody's tuned for GitHub.
I mean, yes and no.
I think that's a, that's part of the filter on the larger part.
I don't think if you're actually talking to a hiring manager, then no, a link to a project
is probably what's effective.
Sure, sure, yeah.
Right, I'm thinking like when you're...
That's a great way to say, look at these interactions with the community where looking at pull requests
and issues is quite common.
If somebody is just like looking at your resume, right, and they're casually googling you,
right, they're going to look at GitHub links and stuff.
That's my thought.
And so as a bit of value that the community gets by spending time working on our open
source projects, they can then demonstrate, hey, look, this is real work I did.
Here's the actual commits.
Like, that's super valuable for them.
Yeah, and for us.
Well, and I also feel like it's a neat experiment from our perspective to see sort of what Microsoft
has done with what was, you know, an open source safe haven for so many projects and
what are they doing now?
What have they integrated into it that could inform maybe some of our content as well?
So I'm seeing it from that angle sometimes.
It did force us all to kind of refresh our familiarity with GitHub.
That's been...
Yeah, but good questions.
If you'd like to send in an email, go to linuxunplug.com slash contact.
And now it is time for the boost.
So we're trying something new.
You know, the boosts are a brand new segment and we're always adapting.
This is a concept that came up in office hours that we're trying out for a bit.
We're going to do like the top boosts, not really based on the amount you boost in, but
it'll just be, we'll read all of the boosts, 100% of them, and then we'll select a few
to come onto the show, you know, a good signal.
And we just want to say thank you to everybody who does boost in.
And then we'll also, as you heard earlier, we'll read the baller boost separately in
the show, kind of break it up, keep things moving.
And our first boost came in from a guy named Dude with 10,001 sets.
Coming in hot with the boost.
He says, I hereby suggest that there should be a 10,000 set minimum for guaranteed reads
on the show.
So this has been something we've been thinking about and this is where the top four, top
five boosts, and we'll pull a few in every episode.
We'll read all of them.
We're also, just so you guys know, behind the scenes, we're going to work on systems
to make sure that every host sees every boost that comes in for each one of the shows.
They're all still coming into myself and Brent right now because he is still getting a split.
So we see all of those as well.
And so instead of setting it based on a 10,000 set minimum, maybe we'll try that one day.
We're just going to base it on quality of boost.
And then we just hope that you contribute the amount that you think represents the value
you get from the show.
Like Optimus Gray did with a row of Mic Ducks, 22,222 sats.
This old duck still got it.
He says, oh my, now I have a great Jupiter.2 portable system.
Get ready for this.
This is brilliant.
I'm going to try this.
The Steam Deck, the speakers are nice.
The screen is great.
It's got a built in trackpad mouse.
It's got a keyboard.
He uses it for SSH as well and he just added Jupiter.2 to his launcher, which that's the
magic sauce I hadn't thought of.
That's a great idea because it's got a full Chromium based browser on there.
He could participate in the P2P stream from a Steam Deck.
That's great.
He says, I also just submitted a ticket for tail scale to get tail scale running on the
Steam Deck.
Yeah.
Hmm.
I don't think I'll install Bitwarden, but he could.
Yeah.
You know, any flat pack.
I feel like I haven't done it yet because I've just been, I don't know this sounds weird,
but I've just been using the Steam Deck to play video games and I haven't really felt
super compelled to tinker with it beyond getting emulators on there.
I thought you were going to install Windows.
It did for like 22 seconds cross my mind.
Just to try it.
Just to try it.
But then I thought, you know, it would be, it would be, it would be kind of great to
try to get the Nix package manager on here.
I saw that coming.
I haven't done it yet.
I think that might be the next thing that I do, but we'll see right now.
I'm just going to play video games for a bit and enjoy it for that.
Well our next boost is from Mississippi Mayhem with a row of ducks.
Hey all.
I've been a huge fan since way back when a certain someone lost a bet and had to wear
a certain costume for the show.
If you know, you know on that one.
In all that time, I don't remember ever having a JB meetup within a day's drive.
Oh gosh.
Sorry, Mississippi.
That's, that's too bad.
So Mississippi goes on to ask, how many people when I have to get together to convince y'all
to do an official Mississippi JB meetup?
Best wishes from Mississippi.
And a little PS for you here, Chris.
PS, unfilter, reboot when?
Oh man, all my, all my non-JB energy right now has been going into Bitcoin dad pod.
That's really where I've been focused because I feel like a lot of the macro stuff we talk
about in Bitcoin dad pod is really what I would have been talking about in unfilter
anyways, but it just now is based on economics and macro picture and not so much just like
the news cycle.
Well there, if you need a little more Chris Fisher, B dad pod's the place to go.
You know, Patrick also boosted in, in the greater Nashville area saying he'd be down
for a meetup.
This is something Brett and I have been noticing is we're getting more and more people writing
in saying they'd be willing to just meet up even if the JB crew can't make it.
And so we've started a conversation in office hours on like, how the hell do we facilitate
this?
Cause this is a brilliant idea.
These meetups are awesome and they can, you know, like they can really be just recharging
for your work.
Like if you're in IT, you're in the tech spec, you're a developer, you're just in the sector
and you're a little burned out, you go to these meetups, you really kind of get recharged
and I don't know, I feel like that would be a great social service if we could help organize
that kind of stuff.
Yeah, right.
Network, recharge, just be around some, some people who have the same interests as you
and want to talk about it.
It's so nice.
We need a platform because obviously going through us on air, that's not going to scale.
That's not going to scale, no.
So we need a way, we would do like a webpage or something that people go to, they register
their area, register their willingness to like do a meetup.
People can organize, swipe left, I don't know what it is, but you know, something that they
could do to kind of self organize.
I think that'd be really what we need next.
So if anybody has any ideas, let us know.
So we got folks in the Mississippi area and we got folks in the Nashville area.
We've also, we've also heard from some folks in the Raleigh area that would like to continue
meetups going, the London area.
So there's a lot of different areas.
We just need to get it all kind of figured out because these can be really, really beneficial
for the community.
Well, boosting on, CERBIC boosts in with another row of ducks.
Thanks for another awesome show.
As someone who's looking to put together a home server in a pretty warm part of the world,
I feel for you going through all the woes, but I'm also thankful that I can learn from
it all.
Yeah.
Hopefully you're learning what not to do on that one there.
Yeah.
You know what, building for the heat, you know what's even trickier?
Is building something that works really great in the freezing cold and something that works
really great in the super hot.
That is very tricky for extreme weather.
Okay.
And another boost this time from our friend Nev with 6,258 sats.
Boost!
Okay.
So this is in response to us figuring out boost amounts to read on the show and his
process for deciding how much to boost.
Yeah.
Okay.
So 6,258 is equal to the number of pies I have that are running Slackware.
Which if you divide 6,258 is equal to the approximate total number of physical floppies
you need a single copy of to install every version of Slackware Linux from initial to
5.0.
Don't ask me how accurate I am here.
I'm guessing, I'm going to say he's accurate.
I feels right.
Also 6,258 is special because it's 1993 times 3.14 rounded to the nearest whole number.
Okay.
Expect more in the future.
Is that a threat?
It's something.
I think so.
Thanks Nev.
Nev that's way more complicated than I expected but I love it and I appreciate you rolling
with the curveballs as we send those in.
We got a lot of boosts that did make it on air this week but I do want to just shout
out to a few.
These are not all of them that did not make it but we did read all of them.
But we got 4,096 sats from 412 Linux.
He was thanking us for an extra long live stream.
He's a member who boosts in from time to time.
We felt irresponsible but glad you liked it.
I think it was three hours or something last week.
Yeah.
There's a lot of show.
We don't always do them that long but every now and then they go pretty long.
I thought we had a really great discussion about the Pine64 Manjaro situation in our
member feed this week.
We got 9,216 sats from the Mad Hatter who was sending Brent burnout money.
Does that mean I get a new car?
You just get a little extra gas for you to drive crazy I think.
Oh alright.
It's a little heavier on the pedal.
And replace them tires.
We got a few boosts in that were for Brent gas money that just didn't make it on the
air.
Thank you.
But I was researching last night how we're going to do this, like how you're actually
going to convert the sats that are sitting on your node into actual gasoline.
I think I've come up with a really easy workflow.
Does it involve a Pi?
Oh I was hoping for a weird, complicated workflow.
I also have that.
Okay.
Yeah.
I've come up with like three routes that we can take.
Let's hear it.
No, I'll discuss them with you after the show because we got to keep moving, but yeah.
I got them figured out.
I wanted to just call out SU or CD who boosted in with just 222 sats, we love all mounts,
and he's using Boost CLI.
Oh, look at you.
Yeah.
I mean that's a command line client, you got to have your own node, it's very, very, very
geeky.
2,222 sats with no message from RustaCastaVersa, but I just wanted to make sure he remembered.
I am now pronouncing it that way officially.
We also got a row of ducks from Mr. Quackers.
Quacka Wacka, it's a treasure.
Yippee.
And then we got a long time listener who boosted him from Finland with his first boost ever.
Nice to see you.
How great is that?
And then another 2,000 sats came in from MegaStrike for some Brent Gas Money because yes, the
split is still set up.
I'll probably be rearranging the splits in the future.
I'll keep Brent in the split, but I'm looking at some more open source free software foundations
and projects that we can add to our splits.
So we'll be rearranging the splits in the near future and some of the splits will be
going to a deserving project, which is under evaluation.
So if you have any ideas of projects of lightning addresses, give me their names by boosting
them in.
Feel free to go check out some new podcasting 2.0 apps.
Some of the great features include boostagrams, chapters, hosts, info, sat streaming, search
value and clips as well.
And a quick note, if you search hard in our GitHub projects, someone's working on some
translations that might show up there too.
So those are great.
And if you're interested in being super geeky with Boost CLI, you can use the command line
tool to send and review podcasting 2.0 value as well.
And I'm sure Chris will call out your name for using that.
I do love to see it.
Newpodcastapps.com for a list of them, including apps that don't require you switch your MP3
player.
Although I've been hearing from a lot of people trying out Podverse and Fountain.
I think people are loving them.
Okay.
How about picks?
I got some picks for you.
I had a hard time this week because I tried to go on theme, but I just really couldn't
find anything that we haven't already done that I thought was worth talking about for
this particular theme.
So I decided to break from the theme and this is a pick for you, Westpain.
Oh, for me?
This is a personal pick for you.
Personal pick.
I'm honored.
Maybe other people will be benefited.
Maybe they'll benefit from this.
I don't know.
You and I were talking recently and you said something that caught my ears and that was,
you know, maybe I ought to try building a gaming rig and maybe I ought to use Nyx as
the base.
Remember?
Well, I remember asking you, you know, for thoughts on what distribution I should put
it.
And I said you should use Nyx.
Yeah.
You didn't volunteer that.
And I didn't object.
I did not object.
Yeah.
Yeah.
Okay.
So yeah, I remember that.
Fair.
And I said I actually think you would like it because I've been trying it and I've been
living the Flatpak lifestyle with Steam and there's another tool that I'm making a personal
pick for you.
It's the Heroic Games Launcher.
And what I love about this is it combines Epic Games and GOG Games in one launcher.
You don't have to go get their individual Windows apps or run them under WINE.
Because I don't really want to do that.
Right.
It's one app to manage all of them.
There's several tools like this for Linux gaming and of course there is a Flatpak for
this so you can get it installed in just mere moments.
Yeah, that makes it easy.
You connect it to your Epic Games account if you have such a thing, which they have
some good games, or your GOG account which you I'm sure have.
I do.
It syncs it.
It downloads and installs it just like their own launchers do and then you just run it
there on your box.
It is the heroicgameslauncher.com and we'll have a link in the show notes for that.
And it's just one of the things that just makes it really easy, immutable distro or
not, to just get all your games installed for things that are just outside of Steam.
Because it turns out Steam doesn't have all the games.
It's not everything.
It's like most things these days, but it's not quite everything.
And of course there's other great launchers out there that do other things.
But this is the one we're going to give a little love to this week.
But if you've got one you'd like to suggest, you can boost it in or go to linuxunplug.com
slash contact and let us know.
Well thanks for the pick.
Yeah.
I'll definitely give it a try and I guess thanks for helping me waste a little more
of my own time.
I think it'd be great to see you build a gaming rig.
Would you go high-end graphics?
I'm tempted.
Are you?
I mean it seems like maybe now might be the time the graphics cards, you know, is a little
more normal.
Coming down a little bit.
Not crazy anymore.
Not as crazy anymore.
Yeah.
Hmm.
I'd really, well if you do, you got to let us know how it goes and tell us, you know,
tell us what you decided to do.
We'd love to have you join us live.
We get together every single Sunday at noon Pacific, 3 p.m. Eastern over at jupyter.tube.
Also thank you to our members.
You can become a member at unpluggedcore.com.
They keep us oriented towards our audience, not only from like a host standpoint, but
from a business standpoint.
It's sort of like the peanut butter and the jelly that go together.
And so they are immensely valuable.
As a thank you, we make some feeds available to them.
We make an ad-free fully produced version that Drew puts together and we make a live
feed version, which is all the mistakes.
There's a lot of those.
All the screw-ups if they happen, you know, us getting connected with people if they're
joining us this week.
And then a big part of it is the pre and post show, which is like a whole other show really.
And we make that available to our members, unpluggedcore.com.
Or you can support all the shows on the network.
Get access to all of the benefits for all the shows and get Linux action news ad-free
at jupyter.party.
Come join the party.
Yeah.
It's a party over there, right?
Wes is there.
He's partying.
He's also in that Linux action news, which always covers some stuff you need to know
about.
We focus really on the stuff that we feel is the most important to get captured.
And then we try to break it down and explain it in a no nonsense, no fooling, no tomfoolery,
just what you need to know in and out.
That's Linux action news.
We don't let ourselves laugh.
That's the whole rule.
There is no fun in Linux action news.
We cut out all the laughing awkwardly.
So that way you know we laughed, but we didn't want you to hear it.
So we cut it mid-laugh.
And that's why this show is so serious.
But the jokes are still there, right?
Well, yeah, but we explain them so that way they don't sound funny.
Because it's a news show, Brad.
Yeah.
Jokes.
Jokes.
All right.
To find out if we're telling the truth or not, linuxactionnews.com.
All right.
That brings us to the end of this week's broadcast.
Links to what this here show talked about while that's over at our linuxunplugged.com
slash what is this 472?
Yes, sir.
Oh my God.
I got it right.
Wow.
Yeah, I know.
That's weird.
We paid attention today.
I think it's that giant counter on the wall in front of you.
It's been working well.
We're going to get back from the West Coast meetups and it's going to be like time to
plan episode 500 time.
Maybe we should survey the folks at the meetups for what we should do for our 500.
They'll help us out.
Yeah.
And send us some ideas too if you're out there.
Let us know what you think.
All right.
Well, thank you very much for joining us on this week's episode of the Unplugged program.
And we'll see you right back here next Sunday.
I presume blue wallet is available in Canada.
I'm not positive, but I think that's a big presumption.
I think it's available everywhere, but I'm not sure.
Yeah.
Anyways, an American would say that we need one of the many wallets.
There are many, but we need, I think blue wallet would be the way to go, but we need
many wallets, one of many wallets that can connect directly to your node.
Yeah.
Okay.
And then they use the node's balance as their balance.
Well, that sounds reasonable.
And then what we can do is we can go to bitrefill.com and there's a couple of ways you can do this,
but you can buy basically a gift card for anything with lightning SATs.
So like Texas, Chevron, and then one of the Canadian gas companies up there, I forget
which one.
We have some.
Yeah.
There's a standard one.
They have gift cards you can buy with Satoshis.
Okay.
Like the Chevron one requires you use their app.
Weird.
So you got to like, you redeem it, you know?
You redeem it.
All right.
Yeah.
Yeah.
I know.
So there's several options there.
One of three, but that's probably the one that would be like the most, like you just take
the SATs from the node and then you just buy the gas card and then you use the gas card
at the gas pump.
That's not so bad.
And then you just have access to it like a bank account essentially, which is kind of
a neat idea.
And I mean, I suppose there's other things that you could turn tricks, you know?
You could do things like that.
Oh gosh.
We'll just further enable what you're already doing with the new way of monetizing.
I mean, I think now the new betting pool is not when is Brent going to leave Alex's.
Is Brent going to make it home and get enough time at home to make it down here?
And it's okay if you don't.
It's all right.
I won't be mad.
But I think that's the new bet is will he make it for the road trip?
Will he stay at Alex's and he gets home and then he doesn't, you know, something might
happen.
We're getting into that window now.
Oh yeah.
I see what you're saying.
My understanding is he does have some cats that probably want some time with him.
Right.
Or he decorated and they probably got a new roommate already.
So I think we could I think we could get odds going on if Brent makes it for the road trip.
You know, I mean, I don't want it to not happen.
But if it makes it I'd like to monetize it is like rather than meeting you on route somewhere.
He's here for like the leaving from the studio area.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
See, I don't even consider that a possibility of not happening.
No.
All right.
That's like a 100 percent.
The biggest question for me is taking up your bet.
All right.
So this is what I'm thinking.
This makes these this is odds that are worth that.
All right.
All right.
But I think maybe a second question is, will I make it back home before that trip or will
I just go straight from?
Oh, sure.
Yeah.
That's a possibility as well.
Hmm.
Yeah, there's that's true.
I don't know how much time you've got left on your America allowance punch card.
It's a I get a I got a free six months.
I think I'm into month.
How long have I been here?
I don't know.
Three months.
I don't know.
No, it's been what?
Two months.
I think it's like six weeks.
I don't remember.
So after this.
Right.
And so I think I have time left.
The real question is, how long will you want me to stay at the studio either before or
after?
Oh, right.
Because if we're clever, we have after time to like edit what we get to work on some projects.
Yeah, that's true.
Yeah.
Mm hmm.
Well, you know, I mean, plus Wes and I have to go for Thai food.
We do.
Yeah, that's true.
So we just got to make sure we don't get you in trouble with, you know, your punch card.
But yeah, this I just feel like there's a lot of odds we could bet here on.
I don't know.
There's opportunity.
Maybe, you know, maybe we just take some on.
Yeah.
Do some gambling.
Best case.
We see Brent.
I like it.
I'm not saying I want to turn into a degenerate gambler, but.
Turn into.
