You know, I have been on a steady march to make things more hardware-based, and I just,
for the first time, found a four-port HDMI switcher that does green screen and multiple
cameras, multiple feeds with transition fader bars and everything, all hardware-based.
A lot of the camera-switching functionality that we use in Wirecast, all hardware-based
for $1,000.
Now when I first started podcasting, the same unit with only two HD, they weren't even HDMI,
the same unit with two HD inputs was $15,000.
That sucker now at $1,000, that might happen next year.
I might eventually get that, and then that is going to be such a key piece to replacing
the Wirecast machine, not only that, but also to have something like that on the road would
be amazing, because, you know, I don't know if you guys probably all noticed if you watched
the video version, but we used OBS this week, or OBS as they call it.
We used OBS to do the live broadcast of Linux Action Show and the live event on an Ubuntu
14.04 system 76 rig, and, you know, we got bit by lip sync issues that were kind of a
bummer.
But one of the things, when you don't do video production, that you don't realize is an issue
until someone tells you, and you're like, oh yeah, obviously that's an issue.
But you don't think about it until you do video production.
But if you've got a box, say a PC, right?
And it's got three cameras coming into it.
One is a 1080p or 720p, doesn't matter, let's just say it's a 720p.
One is a 720p Logitech webcam coming in at 30 frames per second exactly, 3.0 FPS exact.
Another camera coming into your rig is an HDMI capture card.
That's 1080i interlaced even, right?
And it's coming in at 60 frames per second.
Actually not 60, it's coming in at 59.94 frames per second.
And then you've got a desktop shot that's coming from a PC that is a 1080p picture at
exactly 29.97 frames per second.
And then you've got a chat room shot that is on the same machine as the Wirecast machine
that is exactly coming in at 30 frames per second at variable resolution depending on
how you size the window.
And Wirecast very intelligently brings all of this together plus an independent audio
source, manages to try to figure out the timing on them the best possible, automatically mixes
all of that together and records it and sends it out.
And it is truly black magic because each camera and each device are all operating at different
times, at different resolutions, at different frame rates, and then at the same time it's
bringing that all together with an audio interface which is, you know, zero latency, right?
So you've got USB which has inherent latency because those web cameras have an H.264 encoder
in them which adds latency.
And then you have the bandwidth limitations of the USB bus, right?
And then you're also between that switching to an HDMI camera which is sitting on the
PCI Express bus coming in as fast as that HDMI port can blast the data into the PCI
Express bus which is way faster than that USB web camera.
And then you have that coming in to a screen cap which is going to be variable based on
the CPU load of the machine that's doing the screen cap.
And it brings it all together so seamlessly that we forget that you have to fight problems
like lip sync and issues like that.
So when you sit down and use OBS, you know, you basically lose seven years of black magic
and you kind of have to manually punch those.
So you know for 15 minutes before we started the live stream, 20 minutes or whatever it
was, we're sitting there adjusting the millisecond delay and then asking people and production
like Rekai back here at the studio, okay, what did you hear first?
The clap or the sound?
Did you hear the sound first or did you see the clap first?
And then they tell us and then we adjust it another 10 milliseconds.
Can you imagine what an animal you feel like when you're doing that?
Versus Wirecast where you just plug it all in and it just does it all.
Wow.
Yeah.
So I mean there's still a huge gap.
So I'm looking at this hardware mixer that would handle these kinds of things and $1,000
and I'm done with a Mac.
Right.
Woo!
I'm excited about that.
I think that's going to be a 2016 purchase for J.B.
That's really exciting.
Yeah.
Yeah.
Yes.
But would Stallman approve of the hardware mixer?
Yeah.
I don't know.
I mean you could always...
So happy hacking.
You can hack it, right?
So that's cool.
I think Stallman just feels in general...
I think that we should all make those businesses fail.
Now I don't want to put words into his mouth but I have a feeling he's probably said that
before.
Yeah.
Probably.
Probably.
I wanted to see, boy, you know, it's too bad Wimpy's not here today.
I know.
He's probably busy doing Wimpy things but...
Making those distributions.
Yeah.
So maybe he's so busy responding to this ultimate new competition.
I don't know if you heard about this, UUmate is a respin of Ubuntu Mate 15.10.
Whoa.
Only it aims to be better.
Better.
I think we'll let our audience be the judge of that.
Yeah.
So here's what it does.
And actually, since Wimpy's not here, I'm going to just say this.
I kind of do like these additions but I'm not sure.
You could just do it to a regular Mate install but the highlights of UU Mate include Google
Chrome as the web browser.
Right.
Right.
Right.
You've instantly got Chris right there.
Yep.
Yep.
So you're going to be watching them on Netflixes.
KDN Live video editor.
Now here's the thing I thought was neat.
Peer Guardian privacy oriented firewall built in.
Wow.
That's pretty heavy.
Steam included.
Now Wimpy's got these things with one click away with the welcome screen so it's not a
little bit.
Yes he does.
Yes he does.
Sync thing automatically set up.
Hey, I like that.
Team viewer remote control software installed and ready to go.
Wine 1.7 Comp is turned on as well as numerous sound effects enabled by default.
You know what?
Not sure how I feel about that last one but...
You know what?
If they're Star Trek sounds I'll do it.
Yes.
or nothing.
Yes, there you go.
That's why I hate the Windows sounds.
It's not Star Trek.
Yeah, right.
So the UU-Mate competition is on.
It is fierce.
I don't know.
We'll see if maybe Wimpy shows up.
We can get his take on it.
I think it's going to be a battle royale.
Yeah, with the users as the winners.
That's right.
That's West, man.
That's freaking poetic.
This is Linux Unplugged, episode 119 for November 17, 2015.
Welcome to Linux Unplugged, episode 119 of Jupiter Broadcasting's weekly Linux talk show.
It's hoping that we don't get blown away by this crazy windstorm.
My name is Chris.
My name is Wes.
Now, Wes, it is ridiculous.
I've been getting reports from all over the area.
And right now, as we're sitting here recording this show, I would not be surprised, honestly,
if the power goes out.
No, I wouldn't either.
That's what I woke up to this morning.
Yeah.
So it's really a luxury to have power now.
Now, here's the great part is the way that video codecs work is there's pretty much no
chance we'll be able to save this file if the recording is lost.
If the power goes out, we'll lose the recording.
So it's just going to be the live people.
Well, I'm streaming.
You're lucky today.
All right.
Well, coming up on today's episode of Linux Unplugged, yes, I'm back from Colorado.
I went to System 76.
And we have a great show planned for you today.
And we're going to start with something I've been mulling around for a little bit.
And maybe, sure, true, could be that Alan Jude chat room.
Ping Alan Jude right now.
Tell him we're about to talk about Docker.
See what he thinks about that.
So Docker is obviously a phenomenon.
In fact, DockerCon just happened.
And there's a lot of different people out there that are trying to solve a whole ass
ton of issues that we have ran into now that Docker is a thing.
And mostly, it's around security issues.
There are rampant security problems with Docker containers.
In fact, if you look at just Heartbleed, there's still a massive percentage of Docker containers
that are vulnerable to Heartbleed.
That's embarrassing.
We created ourselves a huge mess.
We're going to talk about that today on Linux Unplugged.
And then, SteamOS is getting off to a rocky start.
A lot of bad reviews.
Ars Technica has said it is the worst performer out there.
Is SteamOS doomed?
Or maybe have they gotten it a little wrong?
And then last but not least, our Mumble Room is going to check in with their report on
using OpenSUSE Leap for a few weeks.
We're going to get it straight from the horse's mouth.
We got a whole flock of horses.
Is that what you call them?
Lovely, lovely flock of horses.
Is that what you call a bunch of horses?
Oh, that's what we call them.
A flock?
Yep.
Is that right?
Nope.
Not at all.
OK.
All right.
We're going to talk about that in today's episode of Linux Unplugged.
So let's bring in that virtual lug.
Time appropriate greetings, Mumble Room.
Hello.
Hello.
Hello.
Hello.
Hello.
Oh, jeez.
Holy crap.
All right.
Everybody stop pinging Alan in the chat room.
Maybe too good.
That's too much.
Alan, we're sorry.
We're sorry, Alan.
I love you.
I'm sorry.
Double tech snap tomorrow.
All right.
So coming up.
All right.
So all right.
So coming up now, we've got to talk about Docker because this is I'm not I don't want
to have one of these episodes where we kind of rant and rave too much.
But it is getting ridiculous.
You guys.
I mean, my inner curmudgeon is screaming these days.
Guys.
What?
What?
You like that?
You like that my curmudgeon is screaming?
That's what half the people are here for.
I know, right?
All right.
And so let's start with a couple of big news items.
The daddy of Debian is joining the unstoppable Docker crusade.
Ian Murdoch has joined the Linux container shop Docker.
He founded Debian in 1993.
He led the project for three years during his birth.
And he's taken up a position as a member of Docker's technical staff.
Story number one.
And I illustrate that story to just give you an idea of the hype surrounding this Docker
thing.
The momentum that has really.
Yeah.
Thank you.
So starting today from the core OS project, which we've talked about a lot on Linux unplugged,
they have launched Claire.
Claire is an open source tool for monitoring container security.
Now you go, oh, that seems like a good idea, right?
Probably want to monitor.
Yes, it does.
Sure.
I like monitoring security.
Is my security secure?
I don't know.
You got to have good security.
I need Claire.
Exactly.
You got to have clarity.
Oh, yes.
They should hire you on to do jingles.
They totally should.
Core OS says that over eight.
Now, I'm not I'm not making this up.
Eighty percent of Docker images are still vulnerable to the heartbeat.
Heartbleed.
Bug.
Geez.
Hello.
You can't even say that.
That's how vulnerable you are.
Heartbleed bug.
Heartbleed.
And this, you know, I don't even I don't even have to say it, but honestly, this is egregious.
It is disgusting.
And I can see how this would happen.
Yep.
And somebody who who's a little lazy, you know, I have a couple of Docker images laying
around that I honestly haven't updated since the first day I deployed them.
I think that happens a lot.
A lot, a lot.
And here we are deploying Docker like crazy, just like we've deployed home routers and
all of these other little Internet of Things devices that we don't actually know how they
work.
And so you don't even bother.
You don't even think about it.
Right.
In fact, the whole appeal to Docker is, well, it's a static environment.
You don't have to peek inside.
It just works.
Yeah.
They configured it for you.
I can update my host OS, but the static little container doesn't change.
That's the whole appeal to Docker.
Yes, it is.
Right.
Which is another way of saying, this is this little area of my machine I'm never going
to update.
Yep.
That's what you're saying.
I'm not worried about it.
It does what it does.
And it becomes a deployment methodology.
Right.
It becomes a way to manage risk.
Right.
You never hear about making Docker containers.
You just hear about downloading them.
Yes.
Or keeping them up to date.
And I wonder, like, what's the plan here?
What are we going to do here?
And it feels like everybody is scrambling to come up with an answer to this problem.
In fact, even Docker themselves, they are looking at this particular issue.
Docker has added a hardware signing feature.
You ready for this?
Remember how you were saying about buying one of these?
Yes, I was.
Yubikey.
Hey.
Yubikey.
A device that we all are very familiar with here on the show.
And this is their solution.
Docker has already implemented the update framework, a method of confirming that a digital
signature applied to a container image in a repository matches the signature of code
arriving at the enterprise's Docker system.
So they finally have signing.
This is good.
This is good.
Now, Yubikey.
With Yubikey 4, this is where you could have two-factor authentication that requires the
device to recognize the user's fingerprint before it will issue the identification.
I don't quite understand how they're going to work this in.
But Docker, this happened at DockerCon, they announced a new layer in code and identify
a confirming process.
Developers and system administrators can use a keychain, a keychain fob, like the Yubikey
4.
It's got to be the Yubikey 4.
It cannot be an earlier version.
They have to go to the USB port on a laptop or a workstation to upload their unique identifier
to the container and authenticate.
As the code moves along its journey to a production system, the identifier continually ensures
the recipient that only the identified hands have touched the code.
So it verifies the entire chain and at the end with the Yubikey.
Pretty fascinating stuff.
But one of the demos from DockerCon was that the developer had a set of private keys that
were generated from a root Yubikey in the developer's shop.
The developer then decided in their wisdom to commit those private keys to the public
GitHub.
Oh, joy.
As a backup.
Yeah, yeah, sure.
That was the demo.
So what they showed in the demo was that with the Yubikey, they were able to rotate the
master keys and turn off those developer's private keys and therefore make it in so that
he wasn't able to push to the hub.
No kidding.
The hub just by rotating those keys.
So some really nice features.
Also they announced something called Project Nautilus and that was, I think, the reason
that CoreOS have open sourced Clare.
Ah, you think it was a response to Nautilus?
I reckon they knew about it and thought, right, we've wasted all this time, let's just make
it open source.
I'm not a cynic, I promise.
So what's Project Nautilus?
Yeah, what Project Nautilus does is it gives you a very cool dashboard and it analyzes
the layers and it does static binary analysis in each Docker container.
So it'll look at the version of curl, you've got the version of open SSL and it will say
against a vulnerability database that Docker maintain themselves.
They were quite hazy on these details, which are obviously very important when it comes
to security.
But they maintain this database themselves of vulnerabilities and what they were saying
to me earlier was that if there's a vulnerability in upstream, for example, and that's the container
I've based off of, what will then happen as a child container, I will get a notification
saying, hey, your container is now vulnerable because of this upstream vulnerability.
It's okay, we fixed it, but you now need to kick off a new build on your machine.
Of course, right.
Yeah, you would.
So it's not going to automatically fix the 80% of images, which are vulnerable.
But it's a good start.
So I'm just going to drop a link into the chat of the interface.
Thank you.
Yeah.
I put it in the IRC too if you're logged in because that'd be really handy.
What did you find there, Wes?
What's that?
You digging around on that?
Oh, there you are.
You're digging around on it right now.
Yes, I am.
Cool.
Yeah.
I'll put a link to this in the chat room too.
That is actually really good to hear.
And thank you.
You know what?
It is really kismet on the timing there that he went to DockerCon and showed up.
It really is perfect.
That's what I love about our virtual lug.
If you go to a conference or an event like this or even your lug and want to come and
share with our lug.
We would love that.
Yeah, we would.
Yeah, we really would.
I'm sat in my hotel room in Barcelona waiting for my flight tomorrow and I had nothing better
to do.
Thank you.
We really do because it was in Spain this year and we were just talking a little bit
ago.
It's going to be in Seattle in 2016 on June 20th to the 21st and I'm already kind of thinking
why do I do that, dude?
I don't know.
Wes and I.
I take it as a compliment.
After about a year, I'll get it.
We'll get it right.
Yeah.
Wes and I, I really think Wes and I are going to go to this.
If you can get it from work.
Yes, absolutely.
You think?
I think whatever, six months is plenty of time to do it.
June 20th to the 21st in Seattle.
Maybe you can come meet Wes and I and we'll go down there and walk around and go to DockerCon.
This year it was in Spain, so it was not very practical for us to go.
I like Spain.
Yeah, so thank you very much for going there and giving us kind of the report on that.
That was pretty cool.
I was thinking back on why I started using Scale Engine to host Jupiter Broadcasting.
So it started as, the thing about a podcast is sometimes certain episodes are very popular.
And so all of a sudden you have a huge spike in CPU and bandwidth and all of that transfer.
At times that you probably can't really predict.
Right.
And so I kept getting screwed.
This is before DigitalOcean.
I just kept getting so screwed.
When you paid for a fixed amount a month.
And even paid for CPU usage.
And so Alan came along and I remember at the time thinking his pricing was unbelievable.
How could it be so low?
What is he like?
Can he really deliver?
Is this over served?
And do you know how he did it?
His jails.
Because he could give you metal performance at really low cost to him.
He didn't have to spin up a virtual environment.
An entire operating system that emulates virtual hardware or tries to use a hypervisor that
translates between physical and virtual hardware.
He just did a jail.
And honestly it's the same exact thing that makes Docker so appealing to Linux users.
Is you can create a Docker container.
And it is an isolated environment.
And all of these things.
So you want to have a certain version of PHP?
Have that at Haas.
You can have your specific version.
It doesn't conflict.
Yeah.
Exactly.
So that I remember.
Now honestly though FreeBSD had that years ago.
Yeah.
It's been stable.
What Docker did though, and I think it's such an important thing for us to understand.
And I think if you're curious about this at all.
What Docker did is they closed that 10%.
And I like to say this on other shows.
They closed the uncanny valley.
In CG they have the uncanny valley on movies where you can kind of tell it's CG but it's
like really close.
It's a little too.
It makes you...
It's just freaky.
It's weird.
It makes you uncomfortable.
Yeah it does.
Totally.
It's like between where Jails was and Docker is.
Maybe Zones.
Solaris Zones did that too.
Yes.
Totally.
Absolutely it does.
And so Docker closed that uncanny valley with that like GitHub like approach of publishing
images.
It very fits in today's deployment development culture.
And that was all it took right.
Just like Apple famously will, oh my gosh it's so revolutionary what Apple's doing.
When in reality like us nerds are like, dude other people have been doing that for years.
They just put the pieces together at the right time.
And a lot of us nerds are like, well I'll put the pieces together myself.
It's no big deal.
But they will close that gap.
And that's what Docker did.
And so container technology was not totally new.
I mean even Chirude environments existed under Linux and LXC containers.
But Docker came along and just put it all together in this nice package.
And the problem with that is it also made it way more accessible and way more deployable.
And so you've got guys like me who go deploy smoke ping containers.
Don't really know what they're doing.
Yeah.
What this Linux thing doesn't...
You know I go to play a smoke ping Docker container and then I don't touch it for a
year.
Right.
And now it's sitting out there.
Living there in the public.
Yeah.
Public facing.
Yes.
And so that I don't know where to take this.
And I wonder Wes do you figure is this one of these issues that just sort of sorts itself
out over time or is this...
What I worry about is will Linux become known as the platform that hosts a bunch of outdated
shit.
Right.
What do you think?
I mean in some senses we are already.
Right.
I mean there are those communities.
I think a lot of the...
Yeah.
A percent of Docker containers are vulnerable to heart bleed that have open SSL.
I think there's a lot of enterprises that are working on removing a lot of older Debian
hosts in particular.
Older Ubuntu installations.
Yeah.
Right.
And you get stuck on these things.
Same true with Windows.
Same as...
Yes.
Very much so.
So it's not just a Linux problem.
Like the Windows 3.1 that brought down France last week.
My work runs Oracle...
My work runs Oracle Linux 5 and they want to use Docker.
Wow.
Oracle Linux 5 would be what?
on Red Hat Enterprise Linux 5, I guess, which would be three versions old now, which would
be almost seven years, I think. I don't know exactly. Wow. Wow. That is really something.
I do think, though, that there's been a lot of very good attention recently to both Linux
community and in Docker, you know, that that we need to have at least, you can't force
what people do. It's definitely an issue they're taking seriously. They devoted at
least half their sessions today to security. They're aware of it. They're on it. I think
it'll take time. I think we also have community players, like CoreOS in particular, that really
do take security very seriously. And they're pushing Docker. Right. They're pushing Docker.
They're pushing containerization. But I think they're doing it in a very open way and helping
provide the community tools that they can use. Yeah. It's actually, it is a great example
of how you can have legitimate competition in the open source world, but yet every frickin'
buddy is benefiting. And I look at this and I think, man, I wish more people were current
on this issue. I wish more people knew all the nuances and were following this because
this is such a brilliant example of how open source can be competitive yet cooperative
at the same time. Yes. And in such an area that's so critical to the future cloud, quote
unquote, sphere. Right. I feel like right now we're kind of shaping what the next ten
years of deployed code will look like. Yeah, I agree. All right. So before we move on to
some feedback, any other thoughts? Yeah, go ahead. Sorry. Go ahead. No, go ahead. Yeah.
One other cool thing that came across was I saw a demo today of someone sharing the
X11 socket from inside a Linux OS to inside the container. And with that, they were able
to run whichever desktop application they wanted in a Docker container. And that's nice.
And where they took that was they then they clicked a button and they launched a whole
Eclipse IDE environment in a browser. It sounds like maybe in the future we could have something
like Cube's OS but with like Docker or LXC instead of Zen. Yeah. Huh. Huh. That is kind
of like that. Now that is web computing. All right. I just wanted to point out before we
move in to the rest of the show, we went to System76 this week. That was a lot of fun.
It looked like. Yeah. I had a blast. Had challenges. I forgot the most important piece of equipment
that we could have, you know, I mean there's not a more critical piece of equipment I forgot.
That was awesome. I stayed in a hotel room that felt like a palace. That was pretty cool.
And I got to play with an augmented reality sandbox. That was awesome. So check out Roverlog.
Check out the Roverlog episode 15 of my trip to System76. It was a freaking blast. Colorado
is. It sounds like you got some walking in too, Chris. Wes, I'm not. So you're feeling
healthier than ever now that you're back. Wes, I did not put this in the video but there
was a night where I legitimately went and laid down in bed, had to put a pillow under
my knees and all of my legs ached. And I thought to myself, $380 a night and alls I want right
now is a freaking bathtub. It was. No bathtub? It was just so bad. It was so bad. I hurt
so bad because we walked around so much. Here, I'll play the first few seconds of the Roverlog.
I want you to go check out Roverlog 15 though. It was a lot of fun. Oh, I don't hear it.
Hold on. It's mostly Chris talking about how nice the hotel is. That's like 80%. But it's
worth it. It's great. It's definitely at least a solid 30%. I don't know about 80 but yeah,
check out the intro here. We're here in Denver, Colorado to go to System76. It's their super
fan contest and we're going to go in there and see what they have to show us. Let's go.
So they had a whole steam room set up which was super, super nice. I bet you were getting
plenty fine performance in that room. Yeah, it was really cool and they had a whiteboard
paint up so you could draw and stuff on there. It was really cool. So Roverlog 15, it literally
was down to the wire to get that episode of Linux Action Show and you can find out more
by watching episode 15 of the Roverlog. Go to JupiterBroadcasting.com to find that. You
can also find a few other things over Jupiter Broadcasting. So that trip, it was so funny.
We're sitting there just having a nice casual conversation and I can't even remember how
it came up but it comes up that Noah switched a few people to Linux. Just a hobby really.
And Emma is sitting there, she's an employee of System76. I love Emma, she's been a long
time friend of the show. She says, I switch more people to Linux than you do. Gold. Mind
you this is our first day there and we're still kind of doing that phase where I know
you professionally, I followed everything you do. You don't quite know where the human
boundaries are, how to connect on that level. Within 30 seconds of that conversation starting,
there was four f-bombs dropped. It was odd. Wow, this got human. These two, Emma and Noah,
take switching people to Linux so seriously. Thank God those people are out there though.
She threw down, I had mad respect. So she came on the Linux Action Show and we talked
about that a little bit and her and Noah are going to have a massive competition. I don't
know how Noah is going to do this because he's also in the process of moving. He runs
his own business, he's got two kids and they're moving houses right now. But he couldn't help
himself, he throws down with this competition. And so what I love about it is over on the
subreddit, there was a thread started by russen88, Noah versus Dr. Emma switching people to Linux.
The competition rules, there's already 14 comments and it's heated, it is passionate,
it is so funny. So if you want to throw down on what your idea should be around this competition
between, and both of these people, they legitimately switch people to Linux all the time. You don't
know until you've been with Noah, but I went to a burger place with Noah. I went to go
get a bacon cheeseburger and some fries. I feel like you're the embarrassed wife in
this situation. We're like, not right now, we're just trying to have dinner, please.
I am an advocate for the Linux platform. We are standing in line at five guys getting
a burger and fries and Noah is switching this dude to Linux and he's like, here, take this
thumb drive, go install this. And this guy's like, alright, I'm going to do it. And before
we order our burger, Noah has this guy switching to Linux. It was so good and to see those
two go at it was so great. And if you haven't watched this week's episode of Linux Action
Show, you got to go watch it. It was a really funny throw down. So we're going to have a
competition coming up and I really actually do legitimately want Rose because I have to
play judge. I got to judge this thing and I need to know. I got to determine what the
parameters are so we have a link in the show notes if you guys. I think this might warrant
like a T-Spring shirt or something. Oh, yeah. Noah the switcher. I don't know. And Emma
the closer. That's good, Wes. We should really make something out of this. And you know,
if we had more time, because we were just there for a couple of days, if we had more
time I would have just we would have gone out down on the street down a man on the street
kind of thing and just have them start switching because both of them and think about like
the like the social norms you have to completely reject to do what they do. They literally
walk up to strangers and start profiting to them. Are you changing your operating system?
Can I tell you about your savior Linux? Yeah, exactly. It's just ridiculous. And so and
it is so much fun to watch switcher versus closer. You guys got to go watch this week's
episode of Linux Action Show to see what I'm talking about. All right. So before we move
on because there's so much to cover this week, I want to talk about Digital Ocean. I love
Digital Ocean. They always have come in at just the perfect moment. You can start in
less than 55 seconds to build your own Linux rig with one click deployment or really fine
tuning it. And think about that. 55 seconds. I mean, you can't even get a live CD booted
in 55 seconds and pricing plans start at only five dollars a month. You can't even get a
burger for five dollars and this is five dollars a month. A month for a Linux rig up in the
cloud with a crazy fast connection. They'll get you 512 megabytes of RAM, a 20 gigabyte
SSD, one CPU, and a terabyte of transfer. But what I love about Digital Ocean is their
availability of locations. They got a brand new one in Toronto that's called the FUNSA
data center. But they also have a great one in Germany. They have ones in New York, San
Francisco, Singapore, Amsterdam, and even London. But it's that interface. It's that
interface. It is so good. It is so intuitive and it doesn't suck. Like it lets you do snapshots.
It lets you destroy machines. It lets you transfer between virtual servers. It lets
you one click deploy applications in a Docker container. It doesn't suck. And they have
a straightforward API that makes it totally usable and because that API rocks, there is
a crap ton. I mean like a crap ton of really good open source code that makes you look
like a pro you can go take advantage of right now. You can just go grab it right now. You
can integrate it in with your smartphone, integrate it in with your toolbar, get a gnome
extension up in that biz. I don't care. There's tons of code.
It's all about enabling you, right? Like between that and all of the tutorials which cover
like oh my gosh, even if you aren't using Digital Ocean, I mean, that's the dirty secret.
That's the dirty secret.
But it is so good because like you're just deploying standard Linux distributions.
It's the new ArchWiki, really.
It really is, dude.
Don't tell them that.
And it is good because the thing they have kind of against like I don't mean to knock
on the ArchWiki because, dude, I go to it all the time, but they pay the people, right?
They pay you to write up tutorials. And then they have full time editors on staff. And
you know, little side story here, and by the way, I haven't said this yet. I probably should
have because this is the only way this show survives. DO unplugged. Probably should have
said that at the beginning because if you don't use that promo code, the show doesn't
go on.
So I probably should have said that at the beginning, but I get excited.
So you know, I look at this and I think, Wes, imagine what we've been talking about. We've
been talking about Docker. We've been talking about deploying things. There are ways to
use Docker that are smart. And you and I, before the show, we were talking about a Python
thing that you're working on to take like an extra bit of work you've gotten and kind
of parse it all up and put it in a spot for you that's easy to read and it's using this
Java intermediate.
It's just like this long, complicated thing you're doing, right? And I look at that and
I think, geez, you know, once you've developed that, if you did all that in a Docker container,
it's like one, two, three clicks. Actually, they're not clicks. It would be, I'm looking
at the command, four commands to have this deployed on a Docker container. And just boom,
you have this up, then you create the DigitalOcean droplet, and then one command after that
and you have it running on a production.
Things deployed. It's just going.
So in four commands, you've got it containerized, you've got it ready to go, published up to
the Docker hub, and then one command after that, you've got it deployed on your DigitalOcean
droplet.
That sounds really nice.
I mean, that is a huge appeal. That is, it is really something. Or, you know, there's
a bunch of other stuff you can take advantage of. Just go try something like frickin' own
cloud sync thing.
Sync thing, yeah.
Definitely sync thing. Definitely sync thing. Just go try something like that. Minecraft,
go to your own Minecraft server, Mumble server. There are, MB, there are so many different
ways I use Docker, Docker and DigitalOcean. And MB is running in a Docker container on
a Fedora 23 DigitalOcean droplet.
Right now.
Wow.
Yeah.
It really can't get easier than that.
Right? That's how I'm rollin' these days.
But it's the good kind of easy, where you know that it's stable.
Here's how I did it.
It's production grade.
In 55 seconds, I deployed a Fedora 23 DigitalOcean droplet. Then, I installed Cockpit.
Oh, I love it.
Which was one DNF command on the command line, using the HTML5 console that DigitalOcean
gives me. And then, I logged into my Cockpit instance, and in there, they have a whole
container section, and I deployed MB. So, I deployed Fedora 23 droplet, installed Docker,
installed Cockpit, one-click deployment of MB.
So, you could give this job to interns, whoever. You can just get it done.
So, there's things that happen. I'm like, you know what? I'll just log into my droplet,
get this show on MB, and I just watch it on the rover. It is...
That's amazing.
It is amazing. And you can use the promo code DOUNPLUGGED to get started. Just go check
it out, and you'll support the show. DigitalOcean.com. Use the promo code DOUNPLUGGED. It is a Linux
rig up in the cloud, crazy fast access, SSDs throughout. I mean, you can figure it out.
Go do it. DigitalOcean.com. Try it out, and make something awesome, because hashtag just
saying.
Just saying.
Okay. So, on November 10th, Steam Machines hit the internets, went out, and people started
getting their really super awesome, you know, designed for gaming Steam Machines. And, as
always, people got to do their reviews. They got to do their benchmarks.
We're going here.
Yeah. You know what? Before we get into this, I should do the official opening of our segment.
Yeah. There we go. That's better. And, according to ours, the takeaway here is that cross-platform
3D games face a 21 to 58% frame rate dip.
Ouch. I don't like those numbers.
No. On the same exact hardware, you're dual-booting between Windows and SteamOS, 58% drop.
It is what you might call, Wes, I don't know, devastating.
Devastating.
And it's sort of confusing.
You like that DF command in the background there?
Yeah, that is nice.
Look at that.
Yeah, look at that.
At least they're doing the Linux part right. I appreciate that.
Yeah, too bad it's retrying crap like that. It's, you know. So, to start their test, they
dragged out a dual-boot SteamOS Windows machine. This is on ours. They built two years ago,
this was a little old, but not that bad, and got all the OSs up-to-date on both sides.
They ran a whole bunch of tests.
What was the, did they have, I know they had a lot of graphics cards, but...
What was the specific graphics card that they used on this particular rig?
Yeah, I'm just curious.
Is that what you were asking me right now, Wes?
That's exactly what I'm asking.
Are you asking me that right now? I believe it was an...
Go on, go on. I'm sorry.
No, no, no. That's a good question, actually. I believe it was an NVIDIA card, but I don't
actually think they listed it here.
Okay. Just because that's a...
Oh, they did. I'm sorry. I'm a dummy. It was the GTX 660. Are you serious? With the NVIDIA
driver 35891. Now, are you S-ing me?
Is that current?
That's a really good question. So, here you are on the...
I'm not sure.
On the Bonobo. No, it's not current at all. On the Bonobo, let's see here. I am on 355
because I haven't updated for like two weeks, but I'm trying to figure out what is my...
What's the video card in this Bonobo? Because it's a G4. So, they basically tested it on
a machine that is less powerful than my Bonobo, and my Bonobo is three years old.
I have a...
It's still impressive that Windows was able to...
I have a 680M. Dude, I have a 680M in my three-year-old Bonobo, and they're sitting here... You know,
can I just take a second? I mean, we'll get into the rest of this as we go, but I sure
as shit would never come on air. I would never in a million years come on air and dare to
tell you the performance of games under Windows or Linux with such shit hardware. I wouldn't
dare do it because I would be torn apart by my audience because they're smart. They're
not a bunch of dumbasses. I cannot believe R's published this just on... Okay, anyways.
But that's not the takeaway because the numbers are what matter, but it is literally... If
you're gonna be R's technica and you're gonna make this huge ass publishing, you're gonna
do this huge ass article, if some podcaster wouldn't even bother doing this because his
hardware's so out of date, you gotta think about that. Give that some thought. I mean,
that is...
Yeah.
Right?
It's a little... I don't know.
Like, install the latest driver, at least, if you're gonna use that hardware, which...
Wait, are these the stats on the side here?
That's the hardware. That's the hardware there, yeah.
That they're using?
Yeah, Windows 10.
What is the CPU there?
The CPU is, well, three gigahertz.
Does that say Pentium?
G3220. Will you look up the G3220? It's the G3220. But like, R Brown is... R Brown, go
ahead. You don't have to say in the chat. You're in the mumble room. Go ahead. Make
your point.
Yeah. Well, the thing I was thinking, though, is if they're using hardware that's old...
I mean, surely all of the effort, all of the optimization for these Linux drivers are targeting
newer hardware. I mean, I've definitely seen it with some of the older Nvidia stuff. They
just drop that support completely out of the Linux drivers sooner or later. So if ours
have gone back and used an ancient card, yeah, maybe it does suck compared to Windows, but
I'd like it to see a relatively recent one.
Yeah. Yeah. I agree. So what'd you find?
Well, I will say that the recommended customer price for the CPU box... Well, for the tray,
which is the more expensive, $64.
Oh!
Yeah. So it's definitely a bargain basement. I mean, and all of this, it still remains
the point, why is Windows performing better? That's still totally relevant. It's just kind
of surprising. I feel like I saw other reviews where they're like, oh yeah, we bought the
newest Skylake and here we were trying, but...
It feels like if Chris went and scrapped together a few spare parts in the JB1 Studio and then
did a SteamOS review. That would be bullshit. And my viewers would think I was an uneducated
idiot.
And I thought when I was reading it, I just assumed that, okay, they bought the Alienware
or like one of the commercial options and they installed Windows.
I was going to say, the reason why I went with this, because the fact of the matter
I was going to say was, it doesn't really... What matters was how the difference performance
Delta was between the two OSs.
And that is important.
Still the case, but like R. Brown is saying is, it very well could be that the newer GPUs
specifically, I mean, that's been three and a half years. Nvidia has changed its tune
about Linux considerably in three and a half years. SteamOS was announced since then.
Not that it's relevant to this review, but I'm sure the same thing would apply for AMD,
you know, given their recent...
Totally, right? Absolutely. But here is the devastating part. And honestly, what is really
disappointing and it's really too bad is it doesn't matter. It doesn't matter because
R's technica is saying SteamOS is slower.
So let me tell you what they're saying about SteamOS. That is actually the takeaway. All
that matters unfortunately in 2015 is somebody scrolled past that headline on their smartphone.
And that is the reality of it.
They were thinking about getting Linux, they were thinking about buying a Steam machine
and now they're like, well, no, I'll just build another Windows gaming rig.
This did surprise me. Valve's own Source Engine games show the same performance hit when compared
to their Windows versions, Portal, Team Fortress 2 and Dota 2. All took massive frame rate
dips on SteamOS compared to their Windows counterparts. Only Left 4 Dead 2 showed comparable
performance, comparable performance between Windows and Linux.
That's pretty devastating.
There was no indication of the frame rate performance improvements that Valve cited
a few years ago. That is a little bit of a bummer. Right now it seems like choosing SteamOS,
this is according to R's, this is their wrap up. Choosing SteamOS over Windows box means
sacrificing a significant amount of performance on many, if not most, graphically intensive
3D games. That's a pretty big cost to bear, R's says, considering that Alienware sells
its Windows powered console style alpha boxes at prices at only $50 more expensive than
identically outfitted SteamOS machines.
That's not to mention the fact that Steam, on Windows, currently has thousands of games
that aren't even available on SteamOS, including most AAA recent releases. While SteamOS has
similar exclusives to recommend over Windows, hopefully Valve and other Linux developers
continue to improve SteamOS performance to the point where high end games will be expected
to at least run as comparably between Linux and Windows.
Ouch.
Yeah, ouch.
That's not how you want your first launch to go. What do you think? Is this a problem
or is this just, is this sort of like how a early generation thing goes and the consumer
market understands or?
It's not great. I mean, I feel like we're still in the waiting phase to see how all
of the Steam launch stuff plays out. You know, maybe after a quarter we'll see kind of what
are the retail, you know, how many, how many were picked up, how many people did actually
buy them, especially over the holiday period. But it is disappointing that we can't come
out the gate and say like, even, especially on titles where Valve has, you know, ramped
up support that we can't say like, look, you can play them on Linux and it's just as good.
We can't even say that.
And I want to add a little context to this conversation. For door, for door developer,
gnome developer, he, I think he works on G streamer Christian scaler. He writes for us
in the Linux community, these machines are more than that. They're an important part
of helping us break into a broader market by paving the way for even more games and
more big budget games coming to our platform. Playing computer games is not just a niche.
It's a mainstream activity these days and not having access to games on our platform
has cost us quite a few users and potential contributors over the years. I agree.
I agree with that. Yeah. I have an ins I have, for instance, met a lot of computer science
students who ended up not using Linux as the main OS during their studies, simply due to
the lack of games on the platform. This is really, I think this is a really accurate
point. Instead, Linux got deregulated to that thing in a VM. And you only needed it when
you had to have that assignment to complete. That does kind of right. I mean, I've met
those people. Yeah, you know, I mean, it's not against them. It's like, Windows is the
operating system that works. You don't question it. Well, Linux is your development thing.
You know, so, you know, let's say you got you know, you got let's say you got $500 slosh
a month. And you got it, you know, you save up a couple of months and you buy $1,000 laptop.
Well, now that laptop not only is the way you're getting your schoolwork done, but that's
how you're getting your gaming done. Right. Maybe it has optimist graphics, maybe, you
know, all of these little things. That is literally all that matters is that it took
you two, three months just afford this thing or to make the payments on this thing. It
better be able to play games. And if that's the difference between Windows and Linux,
you're going to go Windows. And it came probably came with a Windows license. You know, I was
talking to a student at System 76, one of the super fans, and she said that she was
running Linux because she was in computer engineering. But gaming wasn't a big issue
for her. Right. And so it wasn't it wasn't a barrier. Right. And but for she said, you
know, other students, that's that's the number one differentiator. That was just a couple
of days ago. Somebody told me that it's in school right now. So that actually really
rings extremely true for me. He goes on to say, remember, he works on G streamer. He's
a developer, which I got to say G streamer has been doing some pretty impressive stuff.
I don't know if you've seen that, but I have been following that. I'm very, very excited
about that. I think this was on blogs.nome.org. He says steam for Linux and steam OS can be
an important pieces of breaking through this steam OS and steam machines are also important
for the Linux community for another reason. They can help funnel more resources from hardware
companies into Linux drivers and support. I know, for instance, that all three major
GPU vendors have increased their Linux drivers investments due to steam OS also rings true.
This is why steam OS is important. And the success of steam OS is also kind of important.
He said, by the way, a side note, also working on a few features in fedora workstation to
make it better for steam and steam games. This includes our work on the GL dispatch
and optimus support has covered in a previous blog, which will have linked in the show notes
and lib ratbag is a new library for handling gaming mice under Linux to make it even better.
And they're finally, they're working on bugs to support and make it even better to host
the steam client related to the C++ ABI issues.
I'm glad that they've gotten the sort now because I don't want to deal with that.
Do you think it's important steam OS, steam gaming? Really, honestly, do you think it's
important?
I think that the last point there about putting stress, yes, to develop more, I mean, like,
we see it, you know, obviously, like, Pixar, and the really industry specific things are
doing it, but they have so much stuff that they end up replicating themselves or, you
know, building stacks to do their high end stuff on Linux. I think we need more of that
consumer spectrum to be pushed and developed. And obviously, we have a lot of big changes
coming with Wayland and Vulcan and all of that. So we'll see where that goes. Right.
But I think it's important even now to begin putting that stress on there and be like,
Linux is perfect. We've seen it in other industries. Right. And if we can get more
of that, maybe getting gaming companies to see that they can take Linux and shape it
into what they want. Really, what we have to do is we have to bet that Windows continues
to suck balls. Yes. And then that makes them want something else. And that the store threatens
gaming industries, you know, that kind of stuff. In fact, it'd be good for Linux in
some ways in gaming if the Microsoft Store did kind of well. Too bad it sucks so bad.
Yes. And then you're right, because they could do this, they push on, they go, oh,
man, this is why we need Vulcan. This is why we got to support Vulcans. We're getting
behind Vulcan. Right. This could be really good in the long run. Because the thing about
Linux is like, you know, if you if you're focused on your product, you can take Linux
and you can build it to just do that. You can make it excellent. Yeah. Mumble Room,
any thoughts on this particular topic on Steam Machines or Vulcan or gaming under Linux or
maybe why ours got it wrong? The floor is open. I'll give you a couple of seconds to
jump in if anybody wants to. I got one. Yeah. So I was actually looking at these numbers
here. And I did mention in the chat room earlier, any number over 60 frames per second is literally
going to be imperceivable to the human eye. Any number over 30, you're going to have a
hard time. I'm seeing here for most of these numbers here on the ours technical article,
Linux still performs over 30 frames per second. So for most people, you're not going to have
a perception problem there. Right. The other thing that ours should have done, and this
is why I wanted to talk about this, I want to do a little debunking, is they should have
benchmarked all of these at 1920 by 1080, because that's the highest resolution the
SteamOS machines running at. Right. And if you think about that, 1920 by 1080 is a really
easy benchmark. Now a 668, a 660 and a 680, they should be able to do that no problem.
They should be able to do that 30 frames per second, no problem. 1920 by 1080 is not a
big deal. And everything should have been baseline to that. They did a couple of different
resolutions. One of them was 1792 by 1120, not ideal for gaming. Yeah, that is a great
point, right? Because the SteamOS machines only have to push at the max that your crappy
HDTV can do that you bought on sale.
I will also say that the article, it touches on it and it does mention it, but I feel like
there wasn't enough emphasis placed on what's the end user experience. Like can you buy
this or run this and have an enjoyable gaming experience for a large selection of the games
that you can use.
Because a Steam machine is about that living room, big picture experience. And a Windows
Steam machine is about that traditional Steam client experience, sitting at the desk, gaming.
Right. And if you're the user that spends $2,000 and makes a custom gaming rig, that's
a different marketplace than like, I spent $400 at the store and I want to be able to
play last year to maybe this year's titles at reasonable settings.
Wimpy, you want to jump in on the Vulkan point?
Yeah, so if you look at the demonstrations that have been done demoing games using OpenGL
and Vulkan to show the performance increase, on Linux you typically see OpenGL performance
sort of IO bound to a single thread on a single CPU core. And then when you see the same type
of switch to Vulkan, you see that workload spread across all the cores and the load come
down and the frame rate go up significantly. So while I don't want to appear an apologist
for Linux's performance versus Windows in this case, I think we need to have one eye
on the future and that future is Vulkan. And that does perform very nicely with Steam.
Yeah, I agree. I actually agree a lot. I wonder if we'll start to see, you know, Vulkan ship
in 2016. I don't know when we're going to actually start to see it as end users.
I'm so excited just for Vulkan and Wayland and both of those together as the future.
So when Vulkan launches, does this mean we're going to all have to get new hardware as well?
Maybe although I guess current hardware today …
Sorry, I missed that. What was that?
I know something.
Yeah, go ahead. I think today current hardware does support it. Go ahead.
I believe the GTX 500 series and above will support it and then the newer R series AMD
graphics may support it.
Okay.
Okay.
So at least some of it.
How about the HD 4000 for Intel?
Intel, I believe there are already drivers being built, but I don't know about Intel's
unfortunately.
Huh. I'm imagining. Yeah, I'd imagine they make that work, but it is funny. I don't
feel like we have … Specifically for this area, we have never really been to a point
where we've been like, well, next year or in two years. Like there's a lot of times
in Linux where we do say, well, soon it's going to be a lot better or no one's going
to get this or the Linux kernel or … You know, all this stuff we keep saying is going
to be … But this legitimately is actually happening and there's a lot of interested
parties and it legitimately is going to change things. And I'm very excited about it. I'm
very excited about it. And this R-Technica article, what it really did is it underscores
the need for Vulkan and why we want this. But Wes so very, very acutely pointed out
that if even in the lowest conditions, you know, you're getting 61 frames per second,
you're probably going to be okay on a console hooked up to your HD television that may or
may not even support 60 frames per second. And so, that's really the market for SteamOS.
I'd also like to say, it's pretty cool that here we are in a widely read publication
that ours is. You know, they're talking about like, here's the graphs. Here's like a widely
deployed thing and Linux is front and center. I mean, it's SteamOS, right? Linux is always
rebranded. Yeah. Yeah. I mean, that is actually also
something to kind of take away from this. Yeah. So, Rekai, by the way, is touching in
on the Intel thing in the chat room. He says, developed and showcased a Linux driver for
Intel which enabled Vulkan compatibility on the HD 4000 series integrated graphics. So,
there you go. So, you got back to the 500 series of the NVIDIA cards and the 4000 series
of Intel graphics. That's a pretty good way.
That is pretty damn good for Vulkan. That is really good. So, when that actually starts
to make more sense and it's something you might actually see on your machine, we're
going to talk a lot more about it and why it's a big deal. But right now, I'm going
to talk about Linux Academy because that is a big deal and a sponsor of the Linux Unplugged
show and a great opportunity for you. Go to linuxacademy.com slash unplugged to get our
discount and to support the show. Keep us on the air. linuxacademy.com slash unplugged.
They got step-by-step video courses, comprehensive study guides. What do I think is really, really,
really cool? You can jump in, you know, you can start training yourself, you can use your
own time, be your own boss, learn on your own schedule and then if you get stuck, they
got instructor help. And that is really nice because these instructors are super bright.
They are a bunch of Linux and open source enthusiasts and they have decided, well, let's
create a training platform. What a brilliant freaking idea. What a brilliant freaking idea.
Genius! Why didn't all the, like, look at, I shouldn't even say it, look at freaking
Linda, right? What a joke! What a joke compared to Linux Academy. Their courseware is a joke.
They are an embarrassment. Go to Linux Academy and see the difference when you have people
that are actually passionate about Linux. People that know what Vulkan is and Docker
is and the difference between Linux and a kernel and a distribution. Like, maybe they
know what the GNU tools are. That would be a great thing to know if you are going to
start writing course material. So imagine people that are so crazy passionate about
Linux that they get the stupid idea to go create a website to train people how to use
it. And that is where you start with Linux Academy. But instead of being dumb about it,
they are like, well, alright, let's pair with educators. Let's pair with developers. Let's
pair with industry professionals. Let's build something unique, create a platform.
And you can tell they eat their own dog food, right? Like, they use Linux every day. It's
so tied into this.
I frequently communicate with the guy that runs Linux Academy and trust me, he is a die-hard
Linux user. And what is so brilliant about what they have done is they have taken something
that is so often a checkbox, a feature on all of the other training platforms and they
have created an entire platform out of that. Virtual servers on demand, you have SSH access
to, DNS makes it super easy to log in to. They can choose from 7 plus distribution,
so your virtual server matches that, your courseware matches that. You can be like listener
Ryan and totally get all of your downloadable comprehensive study guides and listen to them
while you are in the shower, or Seth does in the shower. I mean, there are different
ways. Or while you are driving, instructor help available on demand. They actually know
what the hell they are talking about. They are watching the open source development and
they are saying, okay, this is something we need to start creating courseware from. They
had courseware on Docker before you knew what Docker was. The Linux Academy is tuned in
and passionate about this stuff. That is that uncanny value that I talked about. They close
that gap. I want you to go there and try them out because they are always getting better
at adding new courseware, including new features. Man, in October, it was crazy at all the stuff
they rolled out. They have some really good stuff, including real-time progress checking,
some great professional development courses, better expanded nuggets, including, including,
oh, man, the live events have been so great because you can sit there, you can be stuck
on something, ask them the questions, and then get the answers. And then if you get
like a little bit of down, the community is stacked full of Jupyter Broadcasting community
members.
Yeah, and we are the best.
I agree.
Very encouraging.
I really do. And they also have all the stuff sort of attached to Linux. AWS and all of
like Nginx and Python and Ruby and all that kind of stuff.
I think that AWS one is really big, too, because that is one thing you see a lot. Enterprises
love AWS, right?
Yeah, more than ever.
But it's kind of, the pricing structure is a little confusing, especially if you're like
a small end person or just trying to learn it at home. Linux Academy completely controls
that cost for you.
They manage all of it for you.
Right? It's amazing.
It's just part of the subscription. You go to linuxacademy.com slash unplug. They just
roll it right in there. The virtual machines they spin up, if they're on AWS, if they're
on their own infrastructure, doesn't matter. They're honey badgers. Man, they just take
care of it for you. And you get whatever distro you chose at the beginning of your course,
that's the system you get. It makes a ton of sense. Even if you want to get into Android
stuff.
And then last but not least, if you're ready to go get those Red Hat certifications. There
are the few certifications, after all of my years in the IT industry, that I feel is the
Cisco certs and the Red Hat certs that make people go, what? Oh, you actually got that?
Oh.
You know what you're talking about.
Yeah. Those are the certs, right? Man, they have so many great courses on the Red Hat
stuff. It is part of their bread and butter. And I get a lot of great emails from people
that have gone there, taken the Red Hat stuff, and gotten the certifications.
It's kind of becoming the one go-to link. People are like, how do I learn Linux? I'm
really interested, but what do I do? You're like, Linux Academy, man. Just check it out.
Check it out. LinuxAcademy.com slash unplugged. Get our awesome discount. And a big thank
you to Linux Academy for sponsoring the Unplugged program. LinuxAcademy.com slash unplugged.
All right, Wes, are you ready to... Oh, and by the way, a special mention to the bad news
about ours.
Bad news.
The bad news about Steam Machines is spreading. It does have some impact. VentureBeat has
a story about how Falcon PC is...
This one gets close to home, too.
I know. They've canceled their Steam Machine. They've canceled it.
Falcon Northwest and an Oregon company.
Yeah. Oh, literally cuts... Yeah. That does. It hurts, Wes. It hurts. So it is having some
impact. The bad press is... We talk about it from like, oh, this isn't good. Well, it
actually is making a bit of a difference, at least. So yeah, we'll have links to all
of that stuff, all of that shenanigans in the show notes if you guys want to go read
about that.
But I want to shift gears for a moment and have a chance for our listeners in the Muppet
Room to jump in. Last week, we said, well, let's kind of get an idea of how Tumbleweed
is landing amongst the audience. So we put a call out there and said, if you've been
running Tumbleweed and want to come on to her show, give us your ideas.
And so here we are, one week later, and we've got a good assembly here in our room. And
we've even got a good thread going in the Linux Action Show subreddit. Electrical... Electrician.
Electrical Magnition. I don't know how you say that. How do you say that?
Electrician? I'm not sure. But regardless, the feedback's great.
You sound like an idiot.
Electrician.
That's me. That's me.
There you go.
But there's no M in there.
I know. No, you've just got to emphasize the...
Electrician? I don't know. I'm going to give up.
No, what you do is you double down on that G. All right, so you just checked in on the
latest episode of Linux Unplugged and were stoked to see a segment on my distro of choice.
And we have 26 comments coming in on this thread. And I'm actually kind of excited to
say I want to start with Mr. Brown, R. Brown, from the SUSE project. Kind of get an idea
of how Leap has been received from the end users. And then jump in from the rest of the
Mamba room there. So Mr. Brown, tell me about... What are we? Two weeks? Three weeks in
from the Leap release? I can't remember now. What's the reception been? Any gotchas? Any
surprises? And any interesting tidbits to share with us?
Yeah, it's been 14 days. It's been really good, actually. So I mean, this is all a bit
of an experiment for us, you know. Treading new ground, mixing an enterprise distro with
a community one. And the feedback's been great. The community has been really receptive. Lots
of people trying it. Lots of good feedback. Lots of good feedback from the press. I haven't
read a bad review yet. And now I've said that, someone's going to write one.
Right, yeah. So, you know, 14 days into it is not too long, but has anything sort of
caught you by surprise? Or has anything already kind of been like, okay, we're going to have
to address this? Any kind of like, might have to shift strategy here?
Real life adjustments.
Yeah, it's been interesting with the feedback with our choice of versions for things like
GNOME and KDE, where there's some people who are really happy with KDE 5.4 in there. Some
would prefer to have KDE 4. Some are wondering, like, when are you going to have 5.5? There's
that whole question of like, how fast are we going to move that stuff? And I haven't
got a straight answer for it. I mean, there's so many different moving parts of like, how
fast will the base system move? How much does the community want to maintain it? How much
do we replace in the base system? All that kind of fun stuff. So that's going to be a
good discussion point for 42.2. Same goes for GNOME. I mean, we had a lot of feedback
of like, why did you guys put 3.16 in there instead of 3.18?
Yeah, yeah. I mean, everybody wants the latest and greatest GNOME.
Always.
Always, yeah. Very good. So Gabriel, I know I've been watching you in the subreddit for
a while now. I know you've been a user of OpenSUSE and jumped on the leap since the
beta milestone. So what have been your impressions, Gabriel?
Oh, yes. So my impression is very good. I've started from beta and I saw the review you
made on the show.
A few weeks ago, yeah.
Yes, it was very good. I've tried both KDE and GNOME. On KDE, just a couple of freeze
at the beginning but after the first few updates, everything was very good. GNOME is good too.
So I'm pretty happy. As you know from everybody knows, I'm a supporter of OpenSUSE. So I like
it very much. I'm using it since one year ago. Probably this is the reason why for me,
leap is awesome.
So what's the main thing about leap that's awesome?
The stability. I like the idea of having a project that has a professional-maintained
core plus a community that is giving the, let me say, new things. It's not as new as
Tumbleweed or Arch but it is new.
Yeah, and Tyler, you've been using leap for a past week and so, what are your thoughts
on the KDE version?
So far, I've been really enjoying Plasma 5. I've had a couple of issues I've run into.
There are things about Plasma 5 that still feel a bit incomplete compared to 4. I did
actually have an issue where an update actually made the policy kit quite restrictive on the
desktop.
Oh, that's a little troubling. Tell me about that.
So after an update, I had an issue where the policy kit would not allow the applets to,
let's say, go check for updates or I couldn't just use the applet to change my network.
I actually had to go and change the policy kit myself to allow myself to do that.
That is probably...
Those are the things you don't...
Might be a bug. Might be a bug. Wimpy, you've been running leap for the last week. Tell
me about that.
Yeah, I installed leap on my test machine, which is a fairly old ThinkPad T61P. And I
found a lot about leap to like. I particularly like the way the default installer sets up
the disk partitioning with the root file system using a rather complex structure of B3FS sub-volume
volumes.
It's very impressive what they do by default.
I think that's a really smart move. And I imagine is what is powering Snap... Is it
Snapper?
Yeah.
So as you do your package installs and package updates, you get these snapshots before and
after and you can what have you. So I really like those features. I think that's very elegantly
integrated.
I also installed the KDE version. So I know traditionally KDE has sort of been the desktop,
the showcase desktop for OpenSUSE. And I haven't really run KDE much. And I really like the
way that that's presented in OpenSUSE because from my point of view, it's a very sane, usable
KDE setup. You know, it's instantly familiar, usable and unconventional.
And I ran into a few sort of things that made me look at it sideways a couple of times,
but nothing awful or horrible. I was really very impressed. I thought it was quite elegant.
Now Heavens asks a good question. I want to come back to this for a second. But Barbara
Wobble in the chat room says he's been using Leap on his home server with a few Docker
containers running W and Jesse in the container. And he's happy with it so far. He says that
one of the nice things is that the Ncurses interface to Yast makes it great for headless.
Yes, I love that.
Yes, I really do too. Here's Heaven's question. And I'm wondering if anybody in the Mumble
Room has any thoughts on this. And maybe Wimpy, I can start with you. How would you say, Wimpy,
how would you say Leap is for brand new users, like new or newest users to Linux? Do you
think it's a suitable desktop OS?
Once it's installed, it is. But if you've got to install it yourself, maybe not.
Why do you say that?
For somebody that's familiar with Linux installers, then you're not going to have any difficulty
with this. It's going to be largely familiar. But for example, when I started the install,
I've got Intel wireless something. I forget what model of chipset. But in the installer,
the Intel firmware for the wireless chipset is not available. So it sort of nags you that
the firmware isn't available. So I just sort of, you know, skip by that and ignore it.
But then that's strange on a four gig ISO that the firmware is not available in the
live session. But then when you've installed the OS, the firmware is clearly there because
the Wi Fi works perfectly post install. But some of some of the way you navigate through
the installer isn't super intuitive. You know, if you've not done a Linux install before,
I think you'd feel a bit out of your depth if you've done any sort of Linux install.
I think I would agree with that. I would be comfortable with it.
I would say that even just I was trying to download it earlier in the week, and it took
a good like three click throughs to get to a page where I could actually download it
easily off the Suse website as well, which was a little like, if you're dedicated, if
you want to do this, it's fine. But yeah, it's not like the one click link. Yeah, yeah,
that makes sense.
We fixed that.
Okay.
That's perfect.
Good. Thank you.
Two clicks is much better.
I can handle two.
Yeah. And I think 33% less clicking.
Exactly.
Exactly.
33% less matters. Yeah, I wonder I wonder if that actually stops some people from downloading
it might have, I suppose, in the past.
Just because I'm used to like Ubuntu, right? It's like right on the screen. You're like,
Oh, click download. It's great.
So Kitson, you you kind of like the installer, though, don't you?
I like the installer. I've always liked the OpenSuse installer. I've actually found the
Ubuntu installers and whatnot to be too simplistic. And some of their options I've noticed have
been dangerous. For instance, let's say you have an existing LVM encrypted setup on the
disk and you don't want to wipe it with Ubuntu too bad, you're probably going to have that
wiped. With OpenSuse, I could set that up. I could give it the password. It'll mount
it. I could say I want to wipe this partition in that partition, but I want to leave everything
else the same. And I think that that's a big difference there.
Do you think you can do that on Ubuntu? You can. There are manual partitioning options.
But if you if you just go next, next, next, finish. Yeah, you might have a bad time if
you had something that you really wanted to keep.
Yeah. I wonder, is it really? I feel like I feel like the OpenSuse installer lets you
go more out of the box if you want. But if you're willing to stay within certain parameters,
all the installers are kind of a wash.
Yes.
Yeah. Wimpy, you wanted to comment on Yast.
Yeah, I mean, it's been such a long time since I've installed OpenSuse and seriously taken
a look at it. Yast has actually changed considerably. I think it's been rewritten. That probably
gives you an idea how long it is since I last looked at it. And I think where OpenSuse shines
is some of those Yast modules for configuring things like your NIST client or authenticating
with a Windows domain controller. That that's where you see the sort of Yast credentials
coming through on the desk. And there's lots of little things like that that you don't
find in the other distributions as readily. Certainly not so much sort of out of the box
install features. So there's a lot of good stuff tucked away in Yast. It's a little bit
of a mixed bag still. You know, there's some of the Yast modules are a little bit confusing
to look at and then other modules are just amazing. I forget which one what it's called,
but there's one that you can view your your disks and your partitions and your layouts
in a in a whole load of different ways. And there's one that maps the the physical devices
and the partitions to the volumes. And I just thought that was terrific. You know, and that
actually is very useful for a new user to actually get an easy to understand visual
representation of how their data is laid out on their disk. So I thought Yast was pretty
cool. Yeah, I agree. I that's that's a real area where you can underscore it to also setting
up like Xen or KVM. Yep. Super easy. Yeah. Yeah, that was that was really nice, actually.
Yeah. And then the nice butterfs support with the virtualization. Like those two go hand
in hand with snapper built in. So when you install a package, you're getting snapshots.
I mean, it's real slick. It's real slick. Yeah. And that's something about the btfs
support quickly. Yeah, it was it was something that we kind of forgot to talk about a lot
with with leaps release. Someone mentioned it already with the different sub volumes
that were setting up by default. Part of that is to shield stuff from snapper. So things
like your home directory don't get eaten up into all those snapshots. Yeah. But we've
also started using the non copy on write attribute for certain key areas. So things like your
database folders, libvote folders, all that kind of junk where they can have big files
with lots of nasty IO, you can still use that on btfs, it won't do copy on writes the performances,
you know, ext4, like, yeah, it really seems like the benefits of openSUSE, a sort of embracing
butterfs before everybody else are paying off. I really appreciate that they are doing
this to their show. Yeah, showcasing how you can write there's some places where it's not
ready. Yeah, it is where it is. It is something I touched on specifically. I remember I spent
some time talking about this on my review on the Linux action show is that it is I think
the most intelligent breakdown of sub volumes like I mentioned in the chat room that Postgres
is broken out to another example where maybe copy on write isn't doesn't make a lot of
sense or your virtual machines copy on write doesn't make a lot of sense. And it is the
number one thing that can hit your performance on a butterfs file system. And so the fact
that SUSE has thought about that, I think very much shows that they've been, you know,
they've been trying this for a little while. And Wimpy, in that kind of sense, I agree
with you. It's not necessarily a new user. I mean, it can be a new user's distro, but
it also can be a power user's distro, too. Yeah, I think so. I know if you're if you're
a an admin, more more an admin than a developer, I would say I think open SUSE is a is a nice
distro. Yeah, it seems like a great place to host some hosts and deployments. Yeah,
I'm wondering if we'll start seeing it take off in like the VPS and cloud sphere as much
that would really be big. Yeah, yeah. We already have some hosts already offering leap as part
of the hosting package. Yeah, leap, especially, it seems like yeah, you kind of got the stable
is about once a year, I can handle a refresh, right? But like, I don't, maybe I don't need
to micromanage it more. Right. But it gets, you know, security spot. Yeah. Dasani, you've
been using tumbleweed and stable. And they are sharing the same home directory. Tell
me about that. And has it blown up in your face yet? Nope, not yet. Yeah, for the home
directory, or actually, what's the one you use for the robust one? XFS? Yes, that one.
I use XFS in the home directory and I share. So tumbleweed can get however unstable I know
I can always roll it back. Or if it gets corrupted, I can always kill it. But also I have BTRFS
running my stable, I guess leap is what it's called now. And that is got all my games on
it. So the kernel stays stable, the proprietary drivers, unfortunately, but yeah, they stay
the same. And so I can play Borderlands 2 on stable and runs beautifully. And I can
if I want to play with like, builder, it will run beautifully as well. And I don't have
to wait till next year. Yeah, that's a good point. And Wimpy, you had a great question
for our Brown about rolling distros. I'd love to hear it. Yeah, I saw the Linux voice, voice
of the masses, the question asking about I think it was something to do with rolling
releases, I can't remember was it containerization. But I saw Richard comment on there that he
had a feeling that rolling release was sort of vital to the future of Linux distro at
that point. Yeah, that was from one of my slide decks. I have a lovely slide that I
kind of throw in there to troll people where it says, yeah, rolling releases of the future
of Linux, but I do honestly believe it. I mean, if you look at the pace of how upstream
stuff is changing, the old distribution model just can't keep up, you know, with kernel
changes, base system changes, everything just moving too fast. And in many cases, like a
lot of the, if you look at things like system D, gnome, etc, you know, you need to move
the base system in order to move the user space. So long term, and I'm in cases of,
you know, enterprise, maybe we're talking a decade from now, in other cases, maybe five
years, whatever. But I really think rolling releases, moving everything at a faster pace,
and then worrying about things like integration and testing and containerization and whatever,
is how we're going to see distros having to evolve, because otherwise, we just can't keep
up. We're out of date by the time we ship. Yeah, very much. I completely agree. Yeah,
I do too, actually. Popi, do you want to expand on that? No. Yeah, I don't really need to
either. I completely agree as well. Like, I mean, we just heard from the beginning of
this conversation, why are you shipping gnome 316? Even Microsoft is doing that with the
new Windows 10, right? Yeah, I think the new expectation is, well, I've heard about this
really awesome thing on that blog, and now I want it. I want it. Why can't I get it?
I want it. I want it right now. And yeah, that's, yeah. So that's the Linux community
in a nutshell. Well, you know, I mean, that's sort of put in the worst light. But the reality
is there is really smart people making really awesome code that's available for free that
makes your life better. And yeah, you do want it. Because it makes crap easier, and it makes
crap better. And you don't want to have to deal with installing a whole bunch of stuff
or dealing with conflicts. You just want it. And you know, you look at XGD app, and you
look at Docker, and you look at all this different stuff that is talking about shipping applications
and containers, and it seems like that's already a foregone conclusion as well. And that sort
of isolates you from the touch and go of a rolling release. So we're kind of coming upon
this problem with two different solutions at the same time. And I think that Tumbleweed
is a, you know, it's a very specific, unique approach to this particular problem. And it's
one that I've kind of fantasized about for years. So it's really cool to see it actually
ship. So yeah, anybody else before we wrap up have any other comments on OpenSUSE Leap
or things of this nature?
Yeah, one thing that I really do like about OpenSUSE as well that I've noticed is that
pretty much you can customize it from the get go to be your own distribution. Yeah,
look at the way the software manager works and everything. You can get the network installed.
You could click GNOME, for instance, as your default desktop. Then you can click software
at the summary, and you can go in and you could say, I don't want this, but I want this,
that, and that. And then all that stuff gets uploaded there, and it's, you know, you're
not wasting any bandwidth or anything like that.
Yeah, you know, and it's funny because that's how it used to be. So you used to do it in
distros. I want the KDE desktop environment. I want the web browsing packages and all of
that stuff.
I can imagine the old Debian menu right now.
Right. And then Ubuntu came along, and it's like, well, we'll just pick all the best stuff
for you by default. And that kind of became the trend for a while. And now there's like,
oh, I kind of like being able to choose. I mean, there's a middle ground there, too.
And I was going to say, I thought what you were going to mention was the build studio
because that's really where you can customize. Yeah. If you guys out there listening to episode
119 and want to share your thoughts on Leap, go to linuxactionshow.reddit.com or go to
jupyterbroadcasting.com. We really do check it. Please do.
And it's been interesting to see. I specifically think they're doing something right here,
them being the OpenSUSE project, because without question, without question, it has gotten
more and more attention in our community over the last year. And there was a point in time
where we were not talking about it very much anymore, OpenSUSE.
It's kind of the unmentioned third player.
And I think this is regearing in a way that much more matches the expectations and desires
of today's Linux user. I think it's fascinating. And I think it's also something that OpenSUSE
was in the best position to deliver on. Arch can't do it. They're too far into the very
rolling release. Ubuntu can't do it. They've got their system. Fedora can't do it. They're
trying to reform it, but they can't quite do it.
And really, you look back at it now, and it almost seems like, well, yeah, of course it
had to be OpenSUSE. But at the time before they made this leap, you couldn't see it.
But now you look back on it and go, oh, they're in the perfect position. They have the perfect
tool set. And they're ready to go. I feel like it hits that sweet spot, too, where you
have people, maybe they're in our community, they use Arch at home. But at work, they've
got CentOS or RHEL deployed, and they're a little like, oh, this is so old. I keep having
to deploy my own, configure things from source because it isn't in my repo. And they'll be
like, when we refresh our server, what's the next thing we're using? Maybe it's OpenSUSE.
Maybe. Maybe. You get that live kernel patching in there. You get that, you know, whoo-wee!
I like that. I like that. All right. Well, okay, last chance. Are there any closing statements
from the Mumba Room on OpenSUSE and Leap going once? Yeah, go ahead.
Leap is now track...
Yeah, go ahead. No, go ahead. Go ahead.
Leap is now being... is now tracking SUSE, which is the thing why they're calling it
Leap now. So that's the thing. You can now cleanly... Leap is the ambition. Transition
from Leap to straight up SUSE, if you want.
Yeah. And I know there's one other person trying to jump in there. I didn't catch who
it was, but go ahead.
So yeah, Gabriel. So one of the good things I like in OpenSUSE Project is that we have
both.
Right.
Stable and rolling together. So in a few clicks, I can move from stable to rolling using zippered
up.
Yeah, it seems to be...
That's a very good point, actually, because it's the only distribution doing that.
Yeah. And I don't want to give the impression that you're going to have zero problems when
you make that transition. Like, you know, your NVIDIA driver might start complaining,
but it is pretty damn neat. It is pretty cool. And if that kind of stuff doesn't matter to
you, it is an incredible ability to make that switch. It is worth mentioning. Yeah. And
I don't think anybody else is quite doing it like this with the complete picture. So
it's pretty exciting to see it happen.
And with the pedigree that they have.
That too, right? That's also a really good point.
It's not an upstart.
And the brand.
Yeah, right.
Yeah, right. Yeah, yes. It's not some distro that nobody's running.
That won't be here in a year or two years, right?
Yeah, very much so. Very much so. Yeah, R Brown, you want to make a quick comment on
the migration. Go ahead. I'm curious about that.
Just hopping from leap to tumbleweed. When you're doing it with just the official repositories,
we test that as like a standard OpenQA thing. So like every time there's a tumbleweed update,
we see that you can get from leap to there and back. And in fact, back we don't test
that much, but we know Zippa does it with its eyes closed, or you can just use Snap
it.
Nice.
You can always hop over, try it, roll it back, and everything's wonderful and done.
Easy peasy.
Ooh, that's really cool. That is really cool.
You almost take it for granted.
You almost do, right?
And we've got a few things from the SLE guys. If some of the stuff they're slipping in their
new service packs, which I'm really keen to throw into 42.2 to make that even slicker.
What would it take to make that actually happen? Is it just somebody saying, I'll do it? Or
what? Does somebody get assigned that job? How does that happen?
That's just going to be figuring out a few differences between how our infrastructure
works and how the enterprise infrastructure works. Because there's things like repo metadata
where they can say, okay, this release can upgrade to that release and that stuff. And
we haven't got that stuff plumbed into our new service yet.
What does it feel like to you, being a bit out on the edge, saying, here's the distro,
it's released, now we have thousands of people using it, but we don't actually have that
particular question answered yet?
Which particular question?
Sorry.
How exactly you might take something from Sles, SUSE Enterprise Linux Server, a great
feature, and move it down to Leap. It seems like that's going to be a cornerstone feature
of Leap, but maybe not something that's totally been figured out yet, even though it's now
out there for users. Does that feel sort of like, well, we're just kind of going by the
seat of our pants and we're just going to figure it out as we go, because we know that's
the best way to do it? Or what is your impression sitting there in the project when there's
real questions about how do you migrate something like that, like a piece of technology from
Upstream or Sles, and push it out to Leap? And you know you want to do it, and you've
even kind of publicly committed to doing it, but there's not actually a process or a plan
to do that thing.
99 times out of 100, SUSE are doing that as part of the daily job anyway. So even when
they're working on SLE, they, you know, engineering at SUSE, work on Tumbleweed at the same time.
If they're doing a new thing in SLE, in fact, I think it's still a policy in many cases
where like their internal commit to SLE will get rejected if there isn't a matching one
to Tumbleweed.
Wow.
Okay.
So that, you know, Upstream first is a common policy. In the case of Leap or stuff like
this where it's kind of falling through the cracks because it's not a code thing but kind
of an infrastructure thing, we'll figure it out. I mean it's just a case of timing, syncing,
talking to each other. I'm sure we'll come up with a solution.
Yeah. Yeah. It is an interesting time. Well, I'm glad that, thank you everybody who showed
up to chat about this. Thank you R. Brown and everybody who's been talking about this.
It is really, really, really cool to see this kind of, see a lot more passion and interest
pick up.
There's some great momentum here.
I want to tell you about something else that's got some great passion. Ting, my mobile service
provider and mobile that makes sense. Go to linux.ting.com. Why? Because you like putting
Linux in your history bar. I know you got RedTube in there and stuff like that. Now
you can put Linux in your history bar. linux.ting.com. Get $25 off your first Ting device or $25 in
service credit if you bring your own device like I did. And $25 paid for my first month
of Ting right off the top. It was nuts. Ting is mobile that makes sense because you just
pay for what you use. There's no contract, no determination fee, boomsies and even because
they hate contracts with a passion will help you get out of your existing contract with
their ETF relief program. I love that. That's sweet. Go to linux.ting.com right now to support
this show. Keep us on the air please and also get yourself that discount. Take a look at
some of their different devices there. They have a bunch of good stuff and also when you
go to linux.ting.com, I want you to try out their savings calculator. Plug in your stuff
and see if it makes a good sense. Literally, does it make sense? Are you going to save
some sense? Try it out. I got an email today. I wonder if he's in the chat room. I don't
see him in there. I don't see him in there but I got an email today where he's like,
you know I had a carrier charging me a ton of money. My bill was over $80 after taxes.
Switched to Ting, $30. Same with me. I got three lines about the same story. It's really
nice. Go to linux.ting.com to get started. They got two different networks, GSM and CDMA.
You can choose from some more devices than ever you can bring. And when you bring your
own device, then it's really incredibly, incredibly valuable. But if you go to linux.ting.com,
you can also get $25 off a brand new device that's unlocked. No contract. You pay for
what you use. They got an awesome dashboard and really awesome customer service. And Ting's
all about it. They're not just about bucking the trend on contracts and early termination
fees. They're also about cutting the cord and all that kind of stuff. They have some
great posts about cutting the cord recently and keeping the content. Cut the network but
keep the content. They got a post about that. And then you got to love Kyra. You got to
love Kyra. She's posting up app pics over on the Ting blog and she's got one for your
faces right now. It's called Swappa. What's your phone worth? I'm Kyra and this is the
Ting app of the week. Swappa is an online marketplace where you can buy and sell used
devices. If you've ever wondered how much you'd get for your phone if you were to sell
it, this is the app that will tell you. While you can't buy or sell directly through the
app, it's a perfect price checker and the first of its kind. Just tap to get a realistic
valuation of your used smartphone. Here you can select a specific model and view a pricing
chart of your phone over its lifetime. Tap the orange circle in the bottom right to check
out other devices too. You can use the search bar or search by manufacturers and providers
like Ting. If you're thinking about an upgrade or just wondering how much you could get for
your smartphone, Swappa price is worth checking out. Grab the app for free on Android. You
can find the link in the description below. Thanks for watching and see you soon.
Thank you, Kyra.
Linux.ting.com. Thank you, Kyra. That's right. Linux.ting.com. Go there and try it and support
the show just by checking them out. Linux.ting.com. It's pretty cool. And those are some good
apps and we've had some previous ones before and Kyra's always, I always enjoy having Kyra
come on. I wanted to have the 12 days of Kyra in December but I haven't been able to make
it work out yet. Yeah, but I haven't tried it yet.
Linux.ting.com. Go check out Ting. It really is mobile that makes sense. You support this
show and you finally get out of that really crappy contract where they totally own you.
Linux.ting.com. Wes, I am so effing hoping that in a couple of weeks I'll be sitting
here giving you a review of my Libre or Librem. I don't even remember anymore. Librem. Librem
Prism 15. The Librem Prism 15. Purism. Purism. Thank you. Thank you. 15 will be shipping
in phases. 10 pieces of light gray. What is that? 10 PCs? Really? Only 10? Already shipping
another 10? Either way, I should be getting my Librem or Purism or whatever it is. I can't
even remember because I bought it so long ago. Someday. I should be getting my ultimate
Linux laptop soon to review. This is exciting. I actually am not that super excited anymore.
I was even as... You don't even seem like you believe it's happening. I don't. Because
it's been delayed twice now and I actually needed it. The first time I got delayed, the
first delay was I desperately needed a new laptop because of a work thing we were doing
and I didn't. I like how you say work. We don't know what it is you do for work. Like
a work thing, not this radio station. You know, podcasting. I know, right? Yeah. Well,
the thing about it was, because I've just been thinking about it, my window of opportunity
for getting this laptop has passed and I kind of regret... Now you're getting an Oryx, so...
Right. I want... Actually, now I want an Oryx. Exactly. And I kind of regret funding this
thing. I mean, I wanted to fund and I wanted to get behind something that was the ultimate
Linux laptop. Nice, a MacBook competitor that you can install a bunch of distros on, had
physical switch buttons for the webcam and things like that. You know what, though? It's
going to be the end of the year soon and I've moved on and I'm really kind of bummed that
I got caught up in this. I wanted to do this for a review and so I'm hoping that once this
thing shows up, my enthusiasm returns, but at this point... At this point, it's a little
hmm. Yeah, it really will depend on what shows up at your doorstep and how you like it. Wimpy,
I have not read the recent reviews. What have you seen? I'm not going to say. I'm going
to let you read them for yourself. Oh, no. Secret, secret. It's not secret. If you search
around you'll find it. I just don't want to go down as a purism naysayer. Well, that says
it. Despite the fact that I am. All right. See, when you say that, I think I'm going
to read the reviews and I'm going to be disappointed is what I'm taking away as an impression here
and I don't like that. Oh, man. All right. And I don't know. What should I have done?
As the idealist Linux user, should I not have crowdfunded this? It seems like this was a
good honest effort to try to fund. I think you had a duty to fund it. You know, with
the weight of the Linux action show behind you, this was a big initiative, wasn't it?
It was a bold statement that purism made. You had to back it. You had to get the equipment
and you have to review it. The thing is, is that it was a year ago when it was first tabled
and you can't know a year ago how long this crowdfunding campaign is going to take to
turn into a reality. I think you've done the right thing in terms of, you know, for the
Linux action show, you've done the right thing. Whether or not it was the right thing for
you to do personally or not, you'll be able to tell us when you get the unit and review
it.
Yeah, that is exactly what it is.
Either way, I think we're going to get a really good Chris Last rant.
You know, I've interviewed the founder and I've met him in person. I know he even knows
which laptop is mine. He knows which one is mine. I'm like, okay, I feel like I should
be excited here, but it was a year ago. To be honest with you, like Wimpy said, the enthusiasm
personally has dwindled and professionally I'm still interested. Are you amazed? I don't
know if people can hear it in the background right here. I'm going to turn on my microphone
just for a second. Hold on. Hold on.
It sounds like a fan, really almost.
Yes, the wind.
Are you in a plane?
Yeah, it is really, it is really windy here. I'm amazed that we haven't been knocked offline
yet.
No, it's really, it's really windy here as well.
Yeah, I know.
Really, really windy.
Yeah, I think actually about the same speeds. It is, what about it? What was it? 110 km?
It was, yeah, it was really...
We do miles an hour here. You don't have to convert it.
Oh, you do? Okay. All right. Very nice. Impressive. I think we're about 60, 65 miles per hour
wind here. It is really...
Yeah, yeah, yeah.
I was so proud of myself for having the conversion.
I was. That was impressive. You've been staring at your car dial, haven't you?
No, I Googled it. Yeah. All right. Well, I'll let you guys know if I get it because they're
supposed to be shipping Librem 15 units with dark gray coming with 4K screens. I believe
mine is 1080p.
You should just put this here where this Windows laptop is, just for my sake, really.
Right. I know, really. I'm amazed that it hasn't been deactivated yet.
No, it still shows the watermark.
Wow. I almost feel like I want to keep... I feel like Kramer right now. I want to keep
going until the power knocks us offline.
I know, right? How long can we go?
Right. I feel like we're...
Love the marathon.
We're running on fumes right now. It's damn impressive.
It's a good idea for a larger show.
Yeah. All right. Well, we'll wrap it up there while we... So that way we can actually record
the entire episode and not lose the file. That would probably be a good idea. That would
probably be good because I have lost so many episodes in the past that I can't bear to
lose another one. But I would love to have you join us live. Go over to jblive.tv on
a Tuesday at 2 p.m. Pacific or go to jupiterbroadcasting.com slash calendar, and you get this converted
to your local time zone.
It's amazing.
Also, I'm going to give one more plug for Rover Log 15 for our trip to System76. I say
that because right now, over on the reruns machine over there, I'm looking at 391.
Hey, look at that.
Live from System76. It's very... It's well timed. You know, that was such a cool setup
they had for us with the illuminated desk and all.
It's amazing. And like the nice backing wallpaper. It looks like you're out in Hollywood.
It's their booth setup, and it was super cool. And, you know, this was like all live events.
It was down to the wire to get that work, and it was a lot of fun. But a big thank you
to System76 for having us out there, too.
So anyways, I'll wrap it up by just saying our Mumble Room is an open room. There's no
secret password. There's no secret code you need to know. Just go over to jblive.tv, do
Bang Mumble. You'll get the Mumble server info, and then we just have mods who are awesome,
and I love them, and I want to give them kisses.
Thank you, guys.
Because I yelled at them today. I'm like, what the hell, guys? But no, now I'm saying
I love them.
He loves you. He loves you.
That was in private, but in public I say they're great. That's what I do. And you can talk
to those mods, and they'll check your microphone and see if you can join our virtual lug, and
then come in and share your opinion on stuff. LinuxActionShow.Reddit.com for topics or feedback
or check for the thread for 119 in there. And I think, is there anything else we need
to cover this week, Wes?
I don't think so. I think we've hit it right on the head.
Mumble Room, thank you guys for joining us. And of course, if there's anything we're forgetting,
we'll also have the post show, which we can chat in.
Or please contribute to the subreddit.
Yeah, that does really help quite a bit.
We'll bring it right back up.
Yeah, LinuxActionShow.Reddit.com.
Alright, so as we are recording right now, hopefully this isn't the only show you hear,
because the power just went out again and the lights are flickering.
If so, welcome, goodbye, hello, everything.
I shouldn't have said anything. I apologize, Linux Unplugged 119 is coming to an end right
now while we still have power. My God, I have no idea if we're going to make it. The lights
are flickering.
We'll see if we're here next week. We don't know.
I don't know, but thank you very much for tuning in. Go over to JupiterBroadcasting.com
slash calendar to get live events. JupiterBroadcasting.com slash calendar for all that stuff, and contact
slash contact for emails and slash live for the livestream. It's all slashes.
Everything.
Everything.
Slash, slash, slash.
Wow. Well, hopefully this wasn't the only show we got. And thank you so much for tuning
this week's episode of Linux Unplugged.
We really appreciate it. Come back next week. No power outages.
If we don't get blown away, we'll be here.
See you then.
Yeah, we were unplugged.
Even the Hughes lights got reset. That's how you know it's bad.
My connection to Quossel dropped. What is this?
Now, before everybody writes in and says, good at UPS, listen. Listen, they add line
noise. If you don't want bzzz in your podcast, you don't want Chris running everything on
UPS. You can fit a few in there.
Otherwise, we'll have to get conditioners, and it's a whole thing.
Now, I know our friends across the pond, they probably don't have this power issue we have
here in Washington, where all of our power lines are above ground.
Yeah, who bury things. That's insane.
That's nuts, right?
Yeah.
You can just string them up very loosely on the side of the road.
Oh, wow. That was so funny. Wes and I are just sitting here looking at each other like,
oh, wow, we just lost power. That sucks.
Seriously?
Sorry, guys. Did you all know in the mom room immediately what happened? You all must have.
Yep.
Yeah.
Yeah.
Yeah.
We were just fooled.
Yeah. We were gone.
There was an awkward silence.
And then they're gone.
All right. Well, we should probably wrap up so we can get this file, but thank you guys
very much. Great show.
Absolutely.
Sorry we have to kind of rush out of here, but I don't want to lose the file. Hopefully,
we have more than just this for the show release this week.
Yes.
Oh, come on, Scale Engine. You have a backup. You're our only hope.
Chris, I've got a question for you.
Yes, sir. Yes, sir.
In your time in the trenches helping people move away from Windows and businesses.
Down in the trenches.
What did you use? Did you have a deal with Exchange compatibility?
Oh, man. That's a good question.
Exchange compatibility was, for myself, I'll tell you my personal story.
Yes.
Personally, it was the thing that held up my conversion to Linux the longest on my work
desktop computer.
I can see that.
And now, this goes back to why I have such a soft spot for Crossover, Office, because
they made it possible to not just be connected, but actually use a legitimate outlook.
I started with Evolution and the Exchange data server and all of that, and it was okay,
and it was my preferred way to go, but it just... So many times, little things didn't
work right.
And so, for Crossover, Office to come along and give me actual outlook, even though I
hated Outlook, but to give me actual outlook...
A full-on outlook.
Yeah. Oh, man. That was such a game-changer for me. And then, it became less important
after Exchange 2003, or whatever they called it, where they started to get the Outlook
web access interface a little bit better, and then it became, well, I could just use
the web browser.
You could just use the web browser.
And then, now, today, in 2015, it is not a weird concept at all to say, well, I'll just
check my mail on the web browser.
Right. You already have Gmail in one tab.
Right. But back in 2005, 2004, 2003, you were a maniac. Squirrel Mail was like good web
mail, and that was what you had. And I tried so many times. I tried using Thunderbird and
LDAP and Kmail, and just so many different things I tried to use.
And so, for me, the slow but steady march of companies failing to very often upgrade
their office installation, just the slow but steady pace they have there, meant that Wine
compatibility was almost a guaranteed thing with the version of Outlook they would be
using.
They would have known.
Yeah.
Right.
So, everywhere I went, there was almost always like, if they got to this... Well, what I
eventually did later on is I developed this scale. And on this scale, you could just
use Outlook web access. And on the other end of the scale, you had Run Wine and Outlook,
right?
Right.
And usually in the middle was where Evolution sat, or even a little bit towards the Use
Outlook web mail scale, Thunderbird sat. And so, what I would normally do is I would suss
up... And I'm drawing Wes a diagram here.
It's a beautiful diagram.
Yeah.
I will attest to this.
What I would normally do is I normally found that most users sat in the Thunderbird to
Outlook range or between Evolution, and I would actually usually just avoid Evolution altogether
because I found the stability to be unpredictable.
I see. Yeah.
Now, every now and then, you had your high-ends, which had to go with your wines.
Right.
And then...
They needed everything. They used all those features.
Yeah.
And then now, I think if I was still doing it, I would probably just have them use Outlook
web access.
Yeah.
And that would probably be fine. Why do you ask?
Oh, I was just playing with a tool I found that takes Exchange and translates it into
IMAP, CardDav, CalDav, and LDav.
No.
Yeah.
Now, do you have to run it on the Exchange server?
Nope.
Oh, now you got me.
You can either run it locally or set it up as a transparent...
What's it called?
What's it called?
I'm going to write it down.
DavMail.
Okay. Yeah.
So it makes it like a web-dav thing, huh?
It is Java.
But I had no problem running it.
They have a dev and...
So the DavMail process goes out and connects to an Exchange server over what?
OWA?
Mappy?
It can use OWA, and then it also uses Exchange web services.
Okay.
So you're pretty much going to get even like address book lookup and stuff like that?
Yeah.
You can do address book lookup, calendar.
I haven't tested the full suite, but IMAP works really well.
So your work uses Exchange?
It does, yes.
Yeah.
And yeah, OWA works fine, but there's some stuff where I want to set up some scripts
that can check and do email-related actions.
What about things like out-of-office?
Do you have to go to the webmail to set that still, or do you not?
That's a good question.
Yeah.
I'll have to experiment with that.
Because that's always the thing that was totally...
Right.
It's those little details at the ends.
Yes.
Yeah.
Exchange has gotten a lot easier in the era of smartphones and things like that, but...
And I know Office 365 even has a JSON API now, so if you go that far, then it gets better.
It was really, though... Like you said back when I was in the trenches, it was really
that thing... And I'm specifically reflecting on Exchange 5.5, Exchange 2000, and Exchange
2003, and just watching that... Watching how they had... Microsoft had such a brilliant
lockdown.
Oh, yeah.
It's crazy.
It's all just one big thing.
It was really an active directory solidified all of it, right?
It worked well enough.
Yeah.
It was really interesting.
It was actually... Active directory was perfect, because what it was, was it was a significant
organizational improvement over NT4 and that paradigm.
And it was much more in line with NetWare's eDirectory and others.
And it managed to not only make organizationing more streamlined, but it also could accommodate
acquisitions and mergers that businesses faced.
Sure.
Right.
That was something supported.
You understood how to do it.
Yeah.
You could do acquisition mergers with other companies and integrate them into your active
directory, which was, for the business world, that's a big deal.
And then on top of that, they managed to... If you're going to go active directory, well,
then you have to have a Windows DNS server.
And if you're going to go active directory, you should probably do DHCP on a Windows server,
because that DHCP server will automatically, dynamically update the DNS entries, which
is important.
Oh, I've been playing with that at work as well.
Which is important for active directory to function correctly.
And if you're going to go active directory, you might as well go Exchange, because that's
going to tie into all your user accounts, and that'll make single sign-on possible.
And if you're going to go active directory, you might as well go IIS on your internet
server, because then you can use single sign-on for your internet as well.
And yeah, we'd prefer to use Apache, but single sign-on's a big deal.
We don't want users to have to enter passwords, so we'll go IIS here.
And it's such a brilliant way to lock you in.
It's totally the old model, right?
And it doesn't really apply anymore, and yeah, active directory's still huge and all that
kind of stuff.
I mean, it just is such, it was such a stroke of genius on Microsoft's part, right?
When Windows was going to be everywhere.
Yes.
Yeah, that was something.
And now today, active directory can just simply be a service on Azure.
Yes.
And you know, the LDAP integrations and that kind of stuff, and Linux has been a lot better.
So you've been playing with DHCP and dynamic updates?
Oh, just, there's a Windows component to our network, and just playing with the living
on Linux in that environment.
You know, it was, I remember when Bind actually, I don't remember if it was Bind 9 or, I can't
remember when Bind got it, but I remember when dynamic DNS came to Bind.
And I could deploy a Bind server again on my network and have it dynamically update
the DNS on a Windows server.
And I didn't expect, I don't remember exactly the nature of the improvement, but I didn't
expect an improvement, a noticeable improvement.
What I expected was essentially no change at all from my point of view or the end user's
point of view.
I didn't really think moving to Bind would, I swear to God, Wes, there was an actual performance
improvement in DNS resolution across all of the users, because the way we worked is we
had 110 terminal servers that I was responsible for sitting in one room.
And so all of your users across 40 plus branches come into one room, and then they're hitting
everything at once.
When they log in across all, you know, you have 700 users that log in in one spot on
one LAN all at once.
It really hits it, right?
Yeah, definitely.
Especially back in the day when, you know, things were, you know, crappy processors and
stuff like that, and we didn't have SSDs and any of that kind of stuff.
So if you're going to have any kind of disk I.O., it's a massive SCSI array, and it's
a monster to manage.
And so when Bind came along, just that small, I mean, Bind was around way longer than Windows
DNS, but when Bind dynamic updates came along that interrupted with Active Directory, when
that happened, you could actually witness, like you could sit there and see desktop logins
happen faster, name resolution happen faster.
That's amazing.
It was just like, wow, is everything better under Linux?
Like everything?
I was at DockerCon in Barcelona this week.
Oh, really?
Can you tell us more?
Yeah, man.
It was good.
But the most surreal moment of the entire conference was listening to a Microsoft rep
giving a talk, stood there in a red hat hat about open source and how great Linux was
on Azure.
Whoa.
That's weird.
I don't know how I feel about that.
What was the scene like at DockerCon?
Does it feel like a lot of money was spent, or does it feel like a new startup thing that's
struggling to seem big, or did it feel like it's arrived?
Like, what was your vibe you walked away from DockerCon?
Such a great community.
The DevOps community has such a nice energy around it.
It was a big conference, about 2,000 people.
And there was food everywhere you went.
And there was free beer, which obviously is great in Spain.
And yeah, it was a really great experience.
Definitely recommend going if you can.
And they've announced that the next DockerCon in June will be in your neck of the woods,
Chris, in Seattle.
No.
Oh, cool.
Wes, we should go.
We should definitely go.
Hmm.
Well, you know what?
I'm going to look into that.
I'm going to.
Hmm.
That's interesting.
I've been thinking about scale this year.
So I've been thinking about different conferences.
I think.
Just toying with it.
I think we're not going to do scale this year, which is ridiculous, because it's one of the
largest Linux conventions.
But you know, Noah and I were talking about it on this trip to System76.
And we honestly, there's like a threshold where they start to get too big, and they
get corporate.
Right.
And.
Yeah, then it's more like an industry convention rather than like a user.
And scale's really walking that line.
I think Docker is going to head that way fast.
Yeah.
Yeah, it feels like that.
10 years ago, you were mad if you ran a VM in production, right?
Right.
Now you're mad if you don't.
Right.
I suspect that Docker will go that way much faster because people will note the trends
faster.
You know, we're going to talk about it, but the economies of scale that Docker offers
is just.
I mean, it is like, it's impossible for your CTOs to ignore.
Right.
It's just too attractive.
You mean we don't have to buy new hardware?
Right.
Keep that CapEx down.
They showed a few cool demos, right?
One of them was they managed their Docker containers in Minecraft, so your kid might
like that, Chris.
No kidding.
That's wild.
Dylan.
And another one they showed was a thousand node cluster on AWS deploying 50,000 containers
in 52 minutes.
Whoa.
50,000.
Imagine the DDoS you could start up with, you know.
No kidding.
And the only reason they stopped at a thousand nodes was because that's all that EC2 would
let Docker have.
Oh, really?
That's great.
That is, that must have been quite the demo.
Yeah, it got Apple style applause.
