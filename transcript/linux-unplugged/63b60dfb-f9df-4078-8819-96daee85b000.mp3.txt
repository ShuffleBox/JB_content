Everybody loves ProtonMail and everybody loves WireGuard.
Well ProtonMail figured that out themselves
and they're launching a cool way to help
not only fund WireGuard, but potentially win
a year of service with ProtonVPN.
You like this?
I like this.
You like?
I like.
It sounds like they'll eventually add WireGuard support
for their own ProtonVPN.
Not yet, no promises on exactly when,
but for now you can still show your support
and get one of them lifetime memberships, huh?
I think it's super exciting to watch new technologies
like this develop, and I think they deserve more attention
than they get because these are infrastructure things.
WireGuard is going to securely connect
data centers and workers, and it's just
going to go as an implementation detail for products
in the future.
But it's one of these fundamental enabling
technologies that we just get for free as Linux users.
This is Linux Unplugged, episode 280 for December 18, 2018.
Oh, welcome to Linux Unplugged, your weekly Linux talk show.
It's just got a few more episodes
before it's time to live up to those predictions.
My name is Chris.
My name is Wes.
Hello, Wes.
I was looking through our list, and I'm really
bringing my A game.
I've got to make up for a few bad ones.
I've got to own them.
But that's not what today's episode's about.
No, Wes and I are fresh off the plane,
just got back from Denver, Colorado
to tour the System76 factories and meet Thaleo,
their new line of desktop PCs, born to run Linux.
We had a chance to go there.
I'll save it, but I got some things to say.
I got some stuff to share.
We had some experiences.
It was not what we were expecting.
You agree?
I think that's safe to say.
Yeah, I think that's safe to say.
But before we get there, we'll go through some community news
this week, cover a few housekeeping items,
and towards the end of the show, we'll answer some emails,
follow up on a few projects that people have sent our way,
and give you a few of our own, a few picks that are really
killer, including one by somebody a little surprising
that's impressive as heck.
That's a little tease.
Don't look.
Don't look in the show notes.
Don't spoil it for yourself.
Just wait and see.
It's pretty cool.
But before we go any further, we have
to bring in that virtual lug time appropriate greetings
mumble room.
Good morning.
Hey there.
Hello.
Hello, Brandon, and Bruce, and Fundatils, and KP, MiniMech,
Scott, Sean, Simi, and Xanthrux336.
Very specific there, that one.
Not 386.
336, buddy.
Get it right, Chris.
Come on.
OK, Wes.
Well, I wish we had a, you know, we
need to have a voiceover person do this part for us.
So I'm just going to do it my best, OK?
Previously, on Lunix Unplugged, Wes Payne
attempts to get the keyboardio on fire.
So before we go any further, Wes,
let's open this challenge back up.
This is the episode we have to wrap it up.
Wes Payne, how are you feeling about lighting the keyboardio
on fire?
Well, it's not quite on fire.
It's got some other effects, I think, loaded.
We've just flashed the latest firmware.
So we're up to snuff in that department.
Now to enable some plugins.
All right, I'm looking forward to it.
Keyboardio, of course, is a split keyboard running Linux.
It's got some Arduinos in there connected back
to Wes Payne's ThinkPad running Ubuntu.
And the idea is to install some software on the keyboard that
creates a fire-like effect on the keyboard
to help us celebrate the holidays.
That's the plan, at least.
We'll see if that actually works out.
In fact, why don't we begin our community news
this week with a hell of a story about keyboardio?
I am shocked.
I have this keyboardio because I was
one of the very, very, very early backers
because I met the couple behind the project very early
on at OSCON years ago when they were
on one of their many prototypes.
And they had an update today, day 1,278, words
that they never wanted to hear.
Quote, I'm not saying anything else without a lawyer present.
Things went.
That's never good.
They've had delays.
They've had challenges.
And they figured out the common theme.
They were getting scammed badly.
There's basically no situation which
they wished they never had to say these words they write.
These words are what someone says
after they've gotten caught.
These are the words that our account manager
from the factory that makes the Model 1
said about 6 PM on Tuesday, November 27,
after we'd finally figured out how much she had stolen.
This is a story that, well, I'll just leave it
to you to read, but here's a couple of details.
They had gotten scammed by an account manager that
was working for a Chinese factory that was lying to them.
She had lied to them about having a family.
She even sent pictures of a fake son.
She was no longer an employee at this factory,
but she'd convinced the factory to let her stay on and work
this client.
Just multiple levels of bad relationships and bad deals.
And some of these things that happened
are not totally out of the ordinary over there.
So they didn't set off any alarm bells immediately.
And she was doing this tricky thing
where she would eventually release just enough money.
She'd set up a separate bank account
and gotten the Keyboardio folks to wire their money
to that bank account.
And then when the factory would really start to get upset,
and Keyboardio really needed their key caps
or their keyboards or whatever it was,
she'd put a little money from her bank account
into the factory's bank account.
Right.
So she's sitting there in the middle telling the factory,
oh, we can't pay yet.
We can't pay yet.
Taking this money, hoarding it.
Yeah, and then occasionally paying a little bit out
so that a few people got some keyboards
and it looked like progress was happening.
Yeah.
And then there was instance where maybe 5,000 sets were
ordered by Keyboardio, but she'd put an order in for 2,700
and then skim off the top and take the rest.
So the factory just wouldn't have the parts.
And then when it came time to actually go over there
on November 27th and start talking to people,
it was super awkward because the factory owner and workers,
first of all, didn't speak English.
Second of all, were trying to negotiate with her in a way
where they were playing along with her lives
because they felt like that was the best way to get
the money out of her.
At a certain point, that just stopped working.
Wow.
That's when the lawyers had to get involved.
But they learned that she was no longer
an employee of the factory.
They learned that she had actually quit 18 months prior
to when they discovered all of this.
Wow.
But the factory allowed her to keep the project
as an independent sales agent.
Again, that's not too unusual.
And then the account manager had negotiated aggressive discounts
and price breaks on their behalf,
but hadn't actually passed them on.
When they asked if their account manager had done this
to try with any of her other clients,
like she'd scammed anybody else, the factory owner
told Keyboardio that Keyboardio was the only customer
that she'd had before she'd quit.
Their one and only customer.
In August, they sent back 20 defective circuit boards
to have them troubleshoot and figure out what was wrong.
They never received them.
They never got the boards.
So they never were doing the troubleshooting
why the account manager told them they were.
It's pretty bad news.
It's not catastrophic.
On one hand, it's a lot of money missing.
And they think there's a decent chance that that money's just
gone and never going to be seen again.
But some products, they did manage to ship them.
And they think after this, they're
going to have a better relationship with the factory.
Yeah, they've been over there now.
They've established some new relationships.
It sounds like, at least so far, things
are still going to move forward.
And even if not, the company's in a healthy enough place
that they can continue just probably a little slower
than we would all have liked.
They got some nice perks for patrons.
No, Kickstarter.
What are you, a kickster?
What do you when you back a project?
A backer.
A backer.
Kickstarter backer.
I like kickster.
That's much better.
A kickster.
If you're a kickster of this project
and you fill out their survey, they got some perks
they're giving out too.
It's a long story.
We just skimmed 10% of it.
But I suggest that you go read the rest.
But kind of crazy that this is happening when we just
started randomly talking about the keyboardio on the show.
It was sitting here in the studio,
and we're like, let's do something with that.
That's a keyboard that runs Linux.
Let's do something with it.
Yeah, it really sucks too, because this
isn't one of those, at least it hasn't ever
seemed to be one of those shadier Kickstarter
sort of things.
They've delivered.
They made a very quality product.
So just unfortunate all around.
Yeah, it's interesting how she was eking out just enough
of their money to convince the factory.
She would tell the factory things like, well,
they have to make the shipment in order
to pay you what they owe, even though they had paid.
So oh, man, it's such a shame to see a cool project.
Because the couple behind it that started originally
just didn't have a passion making the best
keyboard possible.
And there are projects that have been,
they've forked what these people have built
and made their own projects.
It's become a bit of a platform too.
So good luck there on that lightning on fire, Wes.
We'll check back in towards the end of the show
and see how you do.
You have one episode of Linux Unplugged remaining.
All right, now on to the rest of the community news.
Didn't think I'd be saying this one anytime soon.
But it looks like you're going to be using the NVIDIA binary
driver with Wayland sooner than you expected, thanks to Mir.
Yeah, Mir 1.1 has been released with EGL streams, KMS support,
and it works with NVIDIA's binary driver.
The canonical developers maintaining the Mir display
server with its modern focus on being a Wayland compositor
have just issued Mir 1.1.
The primary edition of Mir 1.1 is the introduction
of NVIDIA's primary driver support
by means of adding EGL streams, which I barely even understand
what those are.
And this KMS backend that is compatible with the NVIDIA
Linux driver architecture that already exists by NVIDIA.
So it's just working with what they already plug into.
Yeah, basically there's like two different buffer APIs,
one that all the open source drivers use
and is already implemented in all the Wayland compositors
that you use today, and EGL streams,
which is what NVIDIA's driver uses.
And Gnome had already grown some support for this,
and work is in progress for KDE as well.
But that kind of left everyone else out in the cold
unless you were going to implement
this for your custom compositor.
What was it, three months ago, we
were seeing stories about canonical working
to upstream some sort of EGL?
I mean, I just remember seeing that,
and I just went by the writer, and I went, well, who cares?
What does that mean?
But now you see the other shoe drop,
and you're like, oh, this is going
to tie all the way from Wayland, Amir, to Gnome Shell.
There's a whole channel here where you could potentially
get a Gnome Shell environment using Amir Shim talking
to Wayland, talking Wayland, not talking to, but talking
Wayland, with actual NVIDIA binary accelerated graphics.
And I know so many people listening to this show
are going, who the hell wants NVIDIA binary graphics
on their Linux box?
I am there with you.
My utopia, my Lenovo T480 utopia, I feel like,
has been shattered with the introduction
of the NVIDIA binary driver.
Not only have I had that obnoxious system
to UDEV issue, which is being managed at this point,
but there's just other weird things,
like now my displays don't properly line up correctly.
I'd never had some of these issues
that I've had, like stuttering windows,
and having my display not line up correctly
when I'm using the Intel driver.
But I switch over to the NVIDIA binary driver,
and Bob's your uncle, and now I'm having problems.
Don't like it.
No, I mean, that's rough.
But if you do pay a lot for one of those nice NVIDIA cards,
and you want to push a lot of frames,
hopefully better support in the future.
Yeah, I mean, exactly.
You're buying a machine that's got a video card in it,
and you're not going to just waste that $300, $400
component.
And we're trying to get to the world of Wayland.
This is one more step.
It's amazing that Mir can do this,
and it's incredible they got there this fast.
I imagine we'll see even more alternative desktops embedding
Mir just for the support, and make it easy to have something
of your own compositor without having to do all the work.
Asus has begun digging their own grave
by releasing encrypted kernel sources for the Zenfone Max
Pro, Max Pro 2, and M2, and M Max 2, whatever the hell.
Who cares?
It appears that Asus has been releasing
encrypting kernel sources for their Zenfone series.
That's what I'm trying to say.
The encryption apparently came into play
since the last two code releases.
And of course, the real issue here
is this is likely a GPL violation.
Yeah, right.
I mean, if you release an encrypted file,
and no means for anyone to decrypt it, what is the point?
You haven't released anything.
No, it's just dumb.
You know that anyone who wants to buy these phones
because they might be interested in,
they're probably enthusiasts.
Yeah.
And GPL violations are never good.
That's just bad press.
It seems like Asus has got to recognize
that people that are buying their phones are geeks.
You know, like it's a-
How many Asus phone users do you know there?
Yeah.
So I don't know what they're doing with this.
I do have some conspiracy bacon that
sort of ties it all together.
And what the hell do I know?
And I'm just becoming a paranoid old man, apparently.
But if I was going to fry any bacon about what's
going on here, I wonder, Wes, if they're not
trying to get us all nice and ready for a Fuchsia future
where you're not going to be able to get out.
And so they're just, they're taking away
some of the legacy things about how Android phones worked
and getting us ready for a life of Fuchsia.
And I think this is perhaps the first step in getting us all
to eat that shit sandwich.
Is you first get them to take these first few bites.
You haven't had kernel sources in so long anyway.
Who cares?
That's exactly what I'm saying.
That is exactly-
You don't get them on the iPhone.
Right.
We haven't shipped a device, even
when we've been using Android for the last two years.
I mean, let's say it's two years in the future, right?
Why would you expect us to do a Fuchsia?
Of course not.
So when Fuchsia devices ship, it's just the norm.
And this is something that I'm sure Google's-
I mean, you look at across the line,
it's just happening more and more.
But this is a next level.
Like locking on the bootloader is one thing,
but the encrypted kernel sources-
And just why publish them at all?
It's so weird.
Yeah, so it just seems like Asus is off the mark here.
I don't know what's going on, but it
seemed like maybe it was worth talking about,
because you have to be able to make the right choice when
you're purchasing this hardware.
And so it's something to think about.
Factor it in.
Unless you're Westpain.
Unless you're Westpain, then you're probably not
buying an Asus phone, unless you're Westpain.
Well, Westpain has two of them.
Oh, it's more than that now.
That's six.
I keep them one in every pocket.
Ha, ha, ha.
I kid, I kid.
All right, well, I really want to talk about our System76
factory tour, but why don't we start
with a little bit of housekeeping?
Yeah, whoa, boy, whoa.
I just got to mention the user air show.
It's doing so good.
Air.show slash subscribe.
Go subscribe to it, because the boys
have got a new episode coming out this week.
And it is really meshed into a great show.
Popey, Daniel Foray, and Joe Resington on that show
make it so great.
Occasional guests.
I was on there once telling them about my near-death story.
And they come up with really anything about life
and the universe.
They answer questions, hashtag ask air.
You can just do a hashtag ask air.
E-R-R-O. I say air.
It's error.
Hashtag ask error on Twitter, and they'll
answer the questions about Linux or life in general.
It's become that kind of show where
the moment it's released, I listen to it.
It's the first podcast I play as soon as it's released.
It's never too heavy.
You get some good serious topics in there,
but with some laughs in between.
The guys are clicking really good.
It's just a good show.
Air.show slash subscribe, because they'll
have a new one out this week.
So jump in on that stuff.
And then, also worth noting for you students out there
of Linux Academy, this is kind of a cool time
if you've got some downtime in the holiday
or if you want to sneak away from family.
For each learning activity that you complete,
between the 16th of December, so that's a couple days ago,
and the 26th, the day after Christmas,
Linux Academy will donate $1 to St. Jude Children's Research
Hospital for every learning activity that you complete.
So far, and we're just getting into this,
they've raised $3,535.
Nice.
Which means people have completed
3,535 learning activities too, which is kind of great,
because while you're learning, you can also give.
So there's more information on the Linux Academy blog,
but all you have to do to participate
is you just log in and take one of the 20,000 learning
activities that's available.
And once you complete it, it'll donate a buck.
That's pretty nice.
And then, last bit of housekeeping before we move on,
Linux Fest Northwest.
April 26 and 28, we just locked in,
while we were down at System 76, the barbecue.
So the barbecue is going to be on, the great barbecue.
It's on.
I think Saturday night is the night we're doing it.
It's when we did it last year.
And it's outside of Lady Joop's.
Everybody is welcome to come hang out.
BYOD and BYOF, which would be food and drinks.
We'll have some, too.
You want it, bring it.
There'll be some there.
We'll have a bit of a budget for it.
System 76 will have a bit of a budget for it.
So if you can't bring anything, too,
if you've been traveling, you can't bring anything,
still show up, because we'll be able to accommodate.
Also, we've got a drone.
I want to do a drone thing.
I'm going to see if I can't bring two of my drones.
Two grills and two drones.
Have the TV going if we want.
Have some music going.
Bring out the HomePods.
I think you have enough at this point, don't you?
I had to ruin it with something.
Anyways, Linux Fest, its 20th anniversary.
We're going to be there.
We'll be doing live shows.
Joe's flying in.
We're going to do a live.
It'll be the first live Linux action news.
We've never done one.
It might be terrible.
Who knows?
That's breaking down all the rules.
We'll see.
I feel like we got it in us.
Oh, it'll be great.
I feel like we got it in us.
So that's going to be really cool.
We've been saving doing a live Linux action
news for a special occasion.
And I think this is going to be it.
LinuxFestNorthwest.org, their 20th anniversary,
past, present, and future, is the theme this year.
And we're going to have some huge announcements.
You know it's big when we're already planning it,
and it's months out.
So come out.
Check it out.
We'd love to see you there.
LinuxFestNorthwest.org.
OK, I'm done.
Housekeeping is complete.
Had to mention that.
And I really do hope Linux Fest is a big party,
because I think it's just going to be our best one so far.
So I really do hope it all works out.
It's just the best.
I mean, it's the best opportunity
to celebrate all the things we love.
It's a culmination of stuff between the huge announcements
and all the great people that you love.
What could be better?
OK, let's talk about our trip to Denver, Mr. Payne.
So System76 contacted me around the time of about a week
before the Thaleo was officially announced.
They started emailing me back and forth saying, hey,
we've got something coming.
We want to show it to you, because it's kind of a big deal.
And I think a lot of us will remember the initial messaging
was about open hardware.
Open hardware, I think, was the big part of the initial messaging.
And of course, that means I immediately
put my skeptical hat on.
Boom, first thing I do.
It's a big claim, right?
And especially in our terrible world,
we often have pretty high standards
for what open hardware means.
Well, and this is something that we
got into in a few conversations, is there's not
like one accepted definition of open hardware.
Open hardware, I think, in the audience's mind
is the Intel blobs on the board.
But open hardware, in the industry's mind,
is your plans, your diagrams.
The idea, essentially, is could you
take the plans from System76's GitHub page,
go to a metal fab shop, and have them build you out a case?
And the answer is, in this case, is yes.
But that's not, I don't think, a definition
that System76 is necessarily satisfied with.
I think they are trying to push that forward further.
We'll get into that a little bit.
But I thought maybe we'd start with the essentials.
So they contacted us and said, something's coming.
And I said, well, I want to see it.
If I'm going to believe this, if you're going to go build,
I just have been extremely skeptical
about the entire transition to a factory.
Because they're a bunch of lovable hipster geeks
that know how to use Linux.
They can manage an ordering pipeline.
They can work with outside vendors,
assemble a few custom systems, and so on.
We already know how hard, like other things like the Librem.
It's just difficult, especially with laptops and other things,
to get all that stuff open as much as you can.
And it was a new building.
A factory is very different than customizing
some hardware someone else builds for you.
It's a totally different business.
It's a totally different business.
It really is, right?
Yeah.
And it's not like they have a bunch of warehouse experts
and people that know how to manage this huge equipment
on staff.
They're pretty lean operation already.
So it would mean learning those things.
And that just, to me, seems nearly impossible
when you're also trying to launch an operating system
and manage an existing business, support
your existing customers.
I was very skeptical.
So I was like, I got to see this.
You got to show it to me.
I got to see it.
And they said, OK, good enough.
When the factory is ready, we'll fly you guys out.
And you can see it with your own eyes.
That was back in October or so.
I don't remember.
And sure enough, they made good on that deal.
And they flew Wes and I out as well
as six or seven other journalists, I guess,
five or six other journalists, and gave us the full tour.
And prove me wrong.
Prove me wrong.
They're not, I'm not going to sit here and tell you
that they've mastered how to run a factory
and that they're cranking out systems
at an unbelievable volume.
They're still in that learning curve, hockey puck curve
right now.
They're still stuck in that learning curve.
And they're still figuring out how to build these faster.
They're still figuring out the best way
to even lay out the warehouse.
But they are, to be honest, three years ahead of where
I thought they would be.
I mean, I know that was pretty harsh on my part.
But they are cranking out systems.
They are building them.
And they are not sacrificing attention to detail
in the process.
That's the big part right there.
They're not just cranking out any old thing.
They're doing so with a high degree of quality.
So the real reason we came down there
was to see this factory and see Thaleo
and see what it was all about.
And to that end, they really went all out.
So they flew us in.
They set us up in hotels.
Then they brought us in for a Friday tour.
It starts with a back story where
we learn that it's been three years in the making.
And the different industrial design iterations
they went through to get where they're at,
the incorporation of the wood, the look of it.
And they demonstrated how, at the same time,
they had another team running simultaneously,
figuring out the internal components, the arrangement.
But the practical matters.
How do we actually put this together?
Mm-hmm.
And so the way they did this over the last three years
was have these two different tracks of development
running simultaneously and build out a lot of this
at the same time and then come together.
And it really seems to have resulted
in a very high quality PC.
I wrote up a blog, and I have some pictures,
over at linuxunplug.com slash articles.
You can look at the System76 tour,
including a video of them dipping the machines in acid.
The thing that jumped out at me was the clear amount
of enthusiasm about being able to apply all of these lessons
that they were probably very frustrated
by working with other OEMs over the years.
So many of the components that they talked about
were things that had been inspired
by solving problems of past machines that they've shipped.
You can really tell, right?
They've dealt with this.
They haven't been happy.
But there's no solution except if you
can manufacture it yourself.
And sometimes it's small things, like a custom-built,
custom-printed bracket to hold the GPU in place.
And other times, it's just having motherboard standoffs
at a certain height because they know that this is the height
they prefer for their motherboard standoffs.
Thinking about it's easier to service.
It'll be cleaner to get connections.
Mm-hmm.
And they really agonized over every little detail
about the airflow and all of this.
And that was very, very impressive.
But the bigger thing for me that I walked away
from this thinking about was a lot of the same people
that were working there the last time I visited back in 2015
are still working there.
And they have sort of risen to the challenge.
They've all taken on a project that
is bigger than just themselves and kind of pulled together
as a whole company.
And everybody has sort of leveled up in what they're doing
and what they know and what their understanding is.
And in a way, just about every person
has had their hands on these first batch of machines
that have gone out as they've learned this process.
And so this small team was able to really play
to their strengths and raise the bar
and rise to the challenge, I think.
Was that your assessment of it?
Yeah, you can really tell.
I mean, half the tour was kind of Karl's excited kind
of impromptu lecture on how modern manufacturing
at a small scale might work, you know?
Just kind of going through all the pieces that you have to do.
There's some fun pictures out there of you
bending some metal as well, right?
So all kinds of stuff.
But you could just tell he'd put in the time.
And it is as hard as it sounds.
I would be a little daunted by that challenge.
OK, I'll learn all these different components
that you need.
But they've done it.
I mean, yeah, there's still a lot of efficiencies
to be gained figuring things out.
The other part that struck me was they're so excited about it,
it seems like this is what they wanted
to do the whole darn time.
And they haven't gotten there everywhere, right?
There's no custom-built laptop yet.
But you can tell that's what they're
trying to achieve.
Yeah.
So before they get to the laptops,
they have to nail the desktops.
And here's Karl talking a little bit about that process.
We had two directions going at some time.
We had kind of intentionally did them separate
so that one wouldn't hold back the other.
So while Kate was working on design,
R&D was working on mechanical engineering.
The idea was for them to get to a certain point
and then merge the two together.
And this is the beginnings of mechanical design.
You see how different it is when you
think from a mechanical design standpoint
and when you think from a mechanical engineering
to design.
The margins you would imagine are better on desktops.
And I asked Karl, do you sell more laptops
or do you sell more desktops?
And it was a clear, we sell more laptops.
So I said, how then are you making this work?
You set up this whole factory to build desktops
and you sell more laptops than you sell desktops.
He said, yes, but the thing is the sale of the desktops
has financed this entire operation.
And think about what that means for a moment.
It means that a company that sells Linux-only desktops
has been able to successfully finance a company now
for many years, more than 12 years,
and build out a factory, including all of the things
that it means moving staff.
It means building office spaces.
It means setting up factory equipment
that is of an unbelievable industrial scale.
It means learning to work with acid.
All of these things have been financed and lessons learned
by the sale of Linux-running desktop computers.
They haven't taken outside lending.
They've done it with the sale of the desktops.
That's a big achievement right there.
I think that's really nice.
And I think one of the things that really stood out to me
is what a unique individual Carl is.
I mean, I've always felt this way.
But watching him, one of the things
that's interesting about Carl is he gets everyone's attention
by being a soft talker.
So he manages to sort of get the whole room to take it down.
Everybody has to be quiet to listen to Carl speak,
which is an interesting technique.
It would have been real easy to come off like you're bragging,
showing people around the cool new factory you built,
but not at all.
No, there's a humbleness and like a kid in a candy factory
aspect to Carl.
He floats around.
Guys, look at all these cool things.
Aren't you interested?
Yeah, he floats from station to station.
And when we took a break to do some,
we got unrestricted access to the staff.
When we took a break to chat with the staff,
Carl took that opportunity to then start
going around from station to station,
just kind of like a quality check-in.
And you could see him sort of relay what he's
looking for to the staff so they learn what to do
as they're building the systems.
And I think it's been an obsession for him
for the last few months.
They started opening these pre-orders
on the beginning of November, and they were just
shipping them as we were arriving that day.
They were beginning to ship them.
Yeah, some of the first went out then.
But maybe we should talk about the Thaleo hardware
for a moment.
Probably, yeah, that's kind of a big piece.
They're using, I think, any parts you'd be happy to buy
yourself if you're building your own PC,
good off-the-shelf motherboard.
They've gone through and they've battle tested
a few different systems.
But it's nothing you couldn't replace yourself.
It's a standard PSU.
It's just a really good one.
It's a standard motherboard.
It's just a great one.
It has standard CPUs, GPUs, all of that.
The value really is in the whole complete package.
Thaleo's process of being built is mind-numbingly
detail-oriented.
They really focus on every little aspect of the machine,
the feel of the screw holes, the way the case slides down
from the cooling system.
They spent a special, special care trying
to get the power button just right.
Yeah, and they did a great job.
Yeah.
And so there's a process that goes
into building these systems that any geek would be proud of.
And of course, they're great parts,
depending on how you spec them.
They're very fast.
And Wes and I were having this conversation.
It seems like they're doing this huge commitment.
And Linux geeks are often enthusiasts.
They might just want to build their own PC.
I mean, we certainly both have, right?
All the machines in this room have been self-built.
What do you think about that?
Do you think that they're taking a risk here
by this huge investment into this desktop line
when they're trying to sell to a bunch of users
who are just going to go build their own?
It's interesting.
You definitely can go build your own.
And these days, I think of that almost more as something
to do because you want to learn.
You're curious how to put together.
And maybe sometimes because you can't get something
on the market of the quality that you want.
You know, like you want that you're going to have price
or quality.
You're worried just like, well, I could buy that.
But it's not going to come with a great motherboard.
Or I'm going to have to replace that PSU once I
get my graphics card.
I would be hard pressed without turning it
into a really big project to make you a computer as nice.
Oh, for sure, yeah, especially with the wood casing and stuff.
It really is a showpiece.
So I think that has to be the market they're aiming for.
It's to put it up on your desk.
It's for someone who's either an enthusiast or a professional
as well.
I think that could be a big market for them
because it's going to be powerful.
It's quiet.
It has an eye for being servants.
There was some talk about producing some service videos.
It's been built for serviceability
by customer upgradability and serviceability.
It's a big focus of theirs.
Like you said, with the screw holes,
they focus there that using extra durable ones
so that they won't strip.
Yeah, they give you extra parts even
so you can add more components after the fact on your own.
So I think they could make a pretty reasonable play
for just a responsible desktop that you know will
be a five, seven-year machine.
Well, it's kind of like I was saying to you
on the pre-show before we even turn on the mics.
It's like, I'm just kind of feeling like maybe I'm
done distro hopping and desktop hopping.
Like I just I'm ready to move on to a different phase
and just work.
And I feel the same way about my desktops.
I have been building my desktops since the 90s.
And now I'm kind of done doing that.
Like I've done it.
And now I just want to use the computer.
I don't want a project.
I want to just get to work on my other work
that I have, my other projects.
I don't want another one.
So I was really impressed by this machine
when I started thinking about it for my use cases.
I think the other part you have to consider, too,
is so there's the model that we mostly saw.
But there's bigger models of the same form factor, right?
That was the other thing that struck me
is how small the standard Thalia was.
Oh, it's a very compact.
Yeah.
It's like a mini ITX size.
But I don't know if it's actually mini ITX.
But then they have minor and major.
They have different models they're going to be rolling out.
Major and massive?
Yes.
And then there will be a minor.
Minor, which will be more like a NUC, which
is going to be really cool.
That's fascinating.
But they have these really big, beefy machines
with multiple GPUs and tons of fast drives.
So you know that's going for some professional use cases,
right?
So those are going to be people who maybe are doing machine
learning or are managing big arrays of storage.
I can see it playing well there, too,
because you also get that nice wood veneer.
So they've moved into a factory.
They've been developing this thing for three years.
And they're a small business.
Just think about the investment that is.
They have reshaped the company in order to build this thing.
As a business, this may be the biggest risk.
It must be the biggest risk he's ever taken.
It's got to be.
I mean, the whole, I mean, now even their physical layout,
right?
There's a couple of small offices and then
a big old factory building.
And it's also been an ask.
Some of the staff have moved or are moving to get closer now
because there's a different location.
So I said to Carl, is this something
that's going to be around for a while?
Is this the future line of desktop?
So that's exactly what it is.
This is our next decade of machines.
We'll iterate the parts.
They already have ideas for cool thermal, even cooler
thermal designs.
They have ideas for future machines.
But right now, they're just trying
to get this first one out, get it built.
This will be the base platform that they're
going to build on top of for the next 10 years.
And they'll own it.
They own the whole line now.
And they even have their own operating system
that runs on it.
They sure do.
You can start to see where Pop!
OS has a bigger part in the picture here now.
And then, of course, that daughter board.
Yeah, the Thaleo IO board, which is a SAS backplane
and also a controller for the thermal system.
And the thing they're doing that's pretty neat about it
is it can do thermals kind of like the way a Mac does
thermals.
So on Macs, they have the SMC controller
that Apple doesn't release drivers for.
You know, you guys know I hate this.
This is one of the things I caution people.
One of those magic chips.
When they're putting Linux on a MacBook,
you don't get full thermal management.
What you get is the Intel baseline emergency management.
Just to make sure that it doesn't melt in here.
Yeah, because the SMC controller is communicating with Mac OS.
Now, the way System76 has done it is so much better.
So the way System76 has done it is by using open standards.
And it's on this open board that you
can go get all the specs for.
And we have information.
I should put a picture in the blog of it if I haven't.
That's a pretty important component.
You're right, yeah it is.
And it is a SAS backplane.
And they can put multiple cards in if you have multiple drives.
It's pretty cool.
But the best thing it does is it combines data
from the standard Linux temperature interfaces
and the motherboard sensor inputs that are built into the motherboard.
And it can aggregate all of the information.
So the motherboard, for example, it
doesn't know what the utilization of the GPU core is.
And it doesn't know what the GPU core temperature is.
But this little card does because the operating system does.
So it can combine the sensors from the motherboard
and the temperature data from the operating system
and then intelligently drive the fans.
So a basic motherboard controlled system
will rev the fans if your CPU is under load.
But your GPU, screw that, that's on its own.
It's got its own fan, I don't give a crap.
But with this system, without you having to do a damn thing,
it will manage all of it.
It will preemptively turn on the case fans up higher
if the GPU is under a massive load.
It's really cool.
And the other thing that they've done is they've made it really clean
to run all the SATA wires using this thing.
So you plug everything into that and it's just nice and clean,
minimal wires.
Because they designed the whole thing,
the wiring in there is really well thought out.
So it's all exposed and accessible.
You can change it if you need to.
But it's also not in the way you don't have this big cluster of wires
in the middle of a case that you often find.
Yeah.
So the performance, I think, is going to be great.
And the design is literally the best built PC
I've ever seen in my life.
It's just, I mean, I just can't even believe the things
that they are caring to worry themselves about.
That's what I come back to.
This is obviously now their moment.
In the blog post, I put it this way, it's
like letting a dog that just desperately wants to run around and play
finally off the leash.
And that's what System76 is like now with this.
They're just doing all the things they've never been able to do.
And they still have a long journey ahead of them.
They still have much to learn.
They still have to figure out how to build laptops.
And even if this space will work out for them long term or not,
all of these things are still up in the air.
But I walked away from that with a confidence
that they're actually going to pull it off.
Yeah, I'm betting on that group again.
That was how I walked away from that.
OK.
I may even eventually in 2019 be a Thaleo desktop owner.
I could really see myself getting one of these for a workstation.
If they can't, maybe no one can.
Yeah, that too.
That too, I suppose.
I think still they have a lot on their plate.
Pulling off Pop OS and building up the factory
and keeping everybody happy is going to be really tricky.
And the customer demand will be off the hook
if they can get laptops working.
That's going to be.
Yeah, scaling those laptops is obviously
a whole other world of existence with different criteria.
Denver itself is a unique place.
And that plays into a little bit of System76's culture.
I think the other thing that's happening here
is the company is owning its identity a little more.
You see it.
They have the robot artwork now.
They have the sort of the sci-fi theme.
They've brought on Kate, their industrial designer.
And she's really kind of gotten that whole messaging.
Nailed it, I think.
She's really gotten that all together.
One thing I heard them say was lean into the weird.
They're proud of it.
They are who they are.
They're proud of their kind of geeky, nerdy culture.
And they just embrace it.
They just embraced it with failure.
They put the Rocky Mountains on the side of the case.
They put the Unix Epoch solar system time on the exhaust fan.
There's all kinds of little small Easter eggs
throughout everything.
Even, well, I don't want to spoil it for you,
but there's Easter eggs throughout a lot of the stuff
that they've built into this.
There's just things that a company only
does when they're really enjoying what they're doing.
And each person really owns their part of the process.
They own it in a way where they want
to bring something unique to it that represents them.
And it creates a very compelling product.
And I hope there's a market for it.
I hope they sell a whole bunch of Linux running desktops.
I don't even care what version or desktop.
I just hope it's a whole bunch of them.
Because it was pretty neat.
So I guess we should also maybe revisit some
of that open hardware stuff, right?
So some things you can go check out now.
You have a GitHub repo for the whole thing.
It's got things like their bill of materials
and a whole bunch of drawing files
that you could go send to get some of the parts made.
I mean, I think pretty much everything they've got now.
I don't know if it's 100% complete,
but that's what they're working on.
Yeah, and they will iterate, they say,
as they learn through the manufacturing process.
They'll start iterating on those documents.
So the bill of materials and the technical drawings
and all of that is what qualifies them for,
and the daughter board is what qualifies them for,
is it, I can't remember the acronym,
but it's an association.
OSHW.
Thank you.
I was hoping you'd have that.
The Open Source Hardware Association.
Yeah, it's an association that seems reputable.
We did some asking around about people that
are familiar with the matter.
And it actually seems like it's a pretty legit organization.
And you can go reproduce one of these machines.
You'd have to put your own components in it, your own
motherboard and stuff.
But you could.
You'd have to go get your own wood and do all of that.
But if you wanted somebody to chair it,
it was like, I want one that's all white.
I'm like, you could.
Yeah, I mean, more so than in almost any other case.
It's a fascinating world we live in,
where you can go take these plans to a metal shop
and have them build it for you.
Who knows if they would be able to do it to the Precision
System 76 wheel, because this is what they do.
One of the things they were talking about,
the usefulness of that, too, is like, OK,
with the, Carl, what's going on about the unfortunate nature
of the PCI spec and how not everyone really cleanly
super follows all exactly the mounting.
So now there are some open examples of just how
to go build a computer case and know that components will
actually fit and that the tolerances are right
and that you will have built something that's not useless.
Yeah, listening to them describe the lessons learned there
was fascinating.
This, I think, is a bit of a manufacturing success story.
If this could get more traction, I
think there could be some trade magazines that
could tell a fascinating story here, because System 76 has
built a modern factory using industrial 3D printers,
huge, massive laser printers, or, I mean,
laser cutters that draw more power than my entire RV draws.
They have ginormous acid baths and huge baking ovens.
And what they've been able to do is kind of pick and choose
a more modern build workflow.
They don't have like a 30-year factory.
There's not a lot of legacy here.
No legacy.
This is brand new.
So if 3D printing is the best way to build this component,
we'll 3D print it.
And if a laser cutter is the best way to do this,
we'll use this laser cutter.
And I think, including other more modern materials that
are going into the build process,
I think that is, in a way, been their advantage,
because they were able to go with just stuff that's
approachable and runs Linux, too, which is also really cool.
I think there's more to this story
than what our trade covers.
I think there's other trade coverage out there
that could tell a very fascinating story of how
this, essentially, a startup in Denver.
It's a very agile move for their business,
that kind of repositioning.
Now building computers in the United States, too,
which is really neat.
I was really happy to see it's working out for them.
And I hope they can pull it off.
And I think if I was going to make a guess,
they're about a year and a half, two years off
from building laptops.
So I'd say set your expectations accordingly for that one.
That's going to be a little while.
Yeah, just satisfy yourself with a shiny new desktop
you can show off to your friends.
It's better anyways.
It is better anyways.
You guys know what my biggest thing was, is I was happy to report
that even under heavy, heavy load, it was not very loud.
It was very quiet.
It would make a lovely studio machine, wouldn't it?
Gosh, I know.
Get some big, big hard drives in there, too,
so we no longer run out of space when we're recording.
Nice and super fast, so it renders in seconds.
Oh, it'd be great.
Maybe, maybe one day.
They're back on my potential buy list.
I'm back on board.
I think they're doing great.
We have a couple of emails that came into the show, Mr. Payne.
And Mummaroom, feel free to help us answer these
as we go through them.
But we got an XRender tip that came in from Duncan.
And he says, a couple of episodes back,
there was some talk on how to automatically handle
switching between various monitors and dock setups
and the use of XRender scripts to do that.
He said, I got this down, and I think
I found a nicer alternative.
Take a look at Auto Render.
In fact, the man page subs it up pretty nicely.
It basically allows you to plug in monitors, docks,
configure XRenders required using whatever tool you prefer,
then use Auto Render to save that config.
And then next time these specific monitors
are plugged in, Auto Render sets them up automatically,
exactly how you had it.
Take a look at it.
Thanks, Duncan.
That's pretty cool.
Check out Auto Render.
And that's Render with just an R at the end, no ER, of course.
The other one came in, another email
that came in that is following up on MB going proprietary
is MiniDLNA.
This is so cool.
I didn't grab their name on this one.
Did you see?
You might have seen it, Wes.
If you see it earlier on, let me know.
But they write, have you ever covered MiniDLNA, guys?
It's great.
It's a simple streamer that I've used on Linux and FreeNAS.
My son has a player on his iPad, and it plays back just fine.
I use a VPN connection to home, and I stream over Plex.
And it's actually now known as ReadyMedia.
MiniDLNA is its old name.
ReadyMedia is a very simple DLNA universal plug-and-play
streamer that was originally developed actually
for ReadyNAS appliances by, I think a, who makes ReadyNAS?
Netgear employee.
I believe a Netgear employee originally wrote this
for ReadyNAS streaming.
And it's a very minimal DLNA streaming server
that you can throw on any Linux box.
And then if you have a television that has DLNA client
or a PlayStation or Kodi, you can just stream right to it.
No Plex, no MB required.
Very, very nice and simple.
It's called ReadyMedia, previously MiniDLNA,
and it's almost guaranteed already in your repo
as MiniDLNA.
It wasn't mine.
Thank you, Eric, for that email.
Ah, thank you, Eric.
And then last but not least, a streaming solution
submitted by our very own Mr. Wes Payne
has potentially changed travel for the rest of my life.
This is so cool.
Longtime listeners of this show have heard Wes and I
complaining that there's no really good solution for people
in two remote locations to watch the same video
file with synchronized play and pause.
So that way, you can watch together even when you're not
in the same room.
Maybe you and friends want to marathon some Star Trek.
Maybe you and the significant other
are trying to watch a series while you're traveling.
Streama could be just that.
It's a self-hosted streaming media server.
And apparently, it has the ability
to do live sync watching.
And we play around with it a bit.
Yes.
Now, it is not as full featured.
One thing MB did a pretty good job of
is it grew a lot of the features that Plex has.
Not everything, they weren't one for one,
and it has some of its own features.
But it had all that metadata, media information.
Streama's a bit more limited.
You won't find all the support for things like Chromecast
or the popular TV app.
So for right now, it might not be the solution for everything.
Hopefully, there's coming, there's
pull requests for lots of things.
They have issues, so obviously, this is known.
But if you're just watching in the browser,
it was very smooth.
There was a little hiccup here and there,
but with very little effort, you and I were totally synced up.
I could pause, you could pause.
We could scrub, and it would move right along with us.
It would move the other person's playhead.
It was so great.
Setup is really simple.
It's a Java app, so you drop the Java app
in a directory with the videos, and it just
indexes the videos in that directory,
or do you point it at it?
You can just point it at it.
OK.
It's got a YAML configuration.
It's not the simplest thing, but it's also not that complex.
And you just download one file, and it's
got some decent documentation.
It could use more fleshing out in some areas,
but it'll get you up and running.
And it indexes the videos, so it gives you a web UI
to choose from to which video to watch.
Yes, you can manually upload.
You can also configure it to tell it which directory you're
trying to store all the stuff.
Yeah, that's right.
You can drag and drop upload video files.
That is really cool.
So it's not going to be probably your one thing.
It probably won't replace Plex if you're a heavy Plex user,
but it might be just another handy little tool
you have out there.
You've got a few videos, something like that.
You're watching the season of a show, something like that.
And the other thing that's really nice
is you can start it up, you can select it,
and then you can just generate a share URL.
And it's a session URL.
You can send that to people over whatever message.
It also supports anonymous access,
so you could even set it up that way.
That's pretty cool.
So that's Streamya, Streama, which is S-T-R-E-A-M-A.
And of course, we will have a link to that in the show notes.
And yes, before you even ask, of course, it's open source.
It's licensed under the MIT license.
Good find, Wes.
That is going to change the game for us.
I'm very excited about that.
Well, I'll read this next email.
You work on setting your keyboard on fire, OK?
Oh, I'm hard at work over here.
You are.
I should not drop the keyboard on the ground.
You're going to.
It's actually, in some ways, a little more
tricky that it's two pieces.
It really is.
This is not helpful, although it is a neat design.
It is.
It looks really cool.
And the wood is really nice.
You know what it would go really nice with is a Thalia.
It sure.
Oh, man.
Oh, geez.
And then there must be wood mice out there, too.
All right, well, Codyjustcody writes in.
And he says, if systemd was giving me
as many damn problems as it's giving you, Chris,
with that Udev stuff, I would go straight up no systemd,
and I would ban it from my box.
Serious question.
How do you remain patient when stuff like that goes so bad?
How can you tolerate systemd, Codyjustcody asks?
Quick recap.
Previously, on Linux Unplugged, I
have an issue where when I disconnect my eGPU
dock, that's a word for you, my eGPU Thunderbolt 3 dock,
and I boot up my ThinkPad with the dock disconnected,
systemd Udev goes crazy trying to load
the drivers for an NVIDIA card that no longer exists,
because then at that point, I'm on Intel graphics.
And we came up with a quick workaround,
but a couple of people wrote in and have been really
just jumping on the opportunity to abuse systemd here.
And I kind of want to turn this around
to the mumble room for a moment.
Do you guys think that I am just sort of taking the abuse?
Have I just become complacent with systemd
and just rolled over and said there's no getting away
from it?
It didn't even cross my mind to go on a systemd rant
when systemd Udev was eating up all of my CPU.
Or would it just be junk anywhere?
I'd like to know what the mumble room thinks.
Brandon, I don't know.
You're a systemd guy.
What do you think?
I mean, this is a difficult case that you have a plug-in GPU.
That is not a normal case.
Otherwise, I'm so used to systemd now
that I can't even imagine living without.
Yeah, that in part might be it.
Yeah, OK.
I mean, I think the way it works for me
is this isn't an issue with systemd so much as it is a,
yeah, it's a strange setup.
I think that's a good way to put it.
And I'm testing an edge case here.
That's why I got this eGPU dock.
I agree.
It's a complete edge case.
It's not something that is going to be
on every system out there.
You're going to have very few systems that
are going to have what you've got.
Yeah.
And I think that's also why I'm having such performance issues
with my two external monitors.
I have two ASUS 2K monitors that are turned counterclockwise
90 degrees.
So they're vertical.
And then in the middle, I have a 1080P built-in laptop display.
And any time I'm using applications
on the vertically turned monitors, they're really laggy.
Like dragging them around and resizing,
it's like old Mac OS laggy where the whole, it's like jerk,
jerk, jerk, jerk as I resize the window.
It's bad.
And I think part of it is because of this strange setup.
I have them rotated.
They're 2K while the main display is 1080P.
They're going off of the NVIDIA card.
This whole setup is odd.
And it's probably not one that many Plasma developers or KWin
developers have.
And I wonder if this isn't an area where, as Linux users,
we've just kind of come to accept it a little bit.
Oh, you know, it's not a very common setup.
It's an edge case.
But you know, that's not something Mac or Windows users
have to say as much.
Yeah, I was about to say, on the other hand,
there's no reason why you shouldn't
be able to rotate a monitor and have it just work.
It should just work.
But the functional issue is that simply not enough people
in the community that write software are using that setup.
But a commercial company would hire somebody,
would pay somebody to grind that work out.
Unity 7 is famous for having great multi-monitor support.
Like, up to six monitors, it could be rock solid.
And so finally, we asked, why is it?
Why is it that Unity is able to handle fractional scaling
high DPI before any desktop did?
Why does it have great multi-monitor support, even up
to six monitors, even when you're
using proprietary graphics?
Why is it that it's better than everybody else's support?
And they looked at us, and I won't say who,
but they looked at us, and they chuckled a little bit.
And they said, because Mark paid them to do that work,
and he bought them a GPU, and he bought them six monitors,
and he bought them a monitor mount.
And they set up and connected six monitors to their computer,
and then they developed software to support it.
And that's why it was so good.
So we better hope that IBM is providing Red Hat employees
with a whole bunch of Thunderbolt trucks
and vertical monitors.
Please, please, some vertical monitors.
They're great.
If you haven't tried vertical monitors,
they're the best thing ever.
As long as you have landscape, too.
I mean, how many sysadmins do they have?
You'd think they would want that for their log files.
Yeah.
And this may not be an issue under NomeShell.
I don't actually know.
I've never tried it.
Well, and by the same token, there's
no reason why Blue Systems shouldn't be helping develop
Kawin and Plasma to that extent.
Yeah, and maybe that will happen.
You're right.
That could happen.
But I feel like, really, this is one
of the greater unspoken challenges of using
an open source desktop, is there are sometimes deficiencies
in areas that are not very common configurations that
bite people that are maybe trying to sustain
a certain level of work.
I'm getting kind of grumpy having
my computer be really slow.
And the other thing is it's kicking up my CPU fan now,
which normally that never happened on this laptop.
It's not the same machine anymore
with these external monitors.
I unplug these monitors and it's fine, but I'm less effective.
So do I compromise my workflow and become less effective?
Do I struggle through these issues,
or do I start desktop hopping again?
Just not.
None of those are great options.
Not ideal.
Not ideal.
So Kodi, just Kodi, it's not that I'm taking system D abuse.
It's that it seems like whenever it comes to desktop computing,
especially on a laptop, there is just some series
of compromises you make.
And you could look at it the other way.
It's kind of great that I can plug a cable in and have
a dedicated GPU.
That's pretty cool.
And then unplug that cable, and all I have to do
is run one command, and now I'm rocking an internal GPU that
has great battery life.
Like, I get the best of both worlds.
I just have to make a couple of compromises.
Yeah, I think that's just the way it goes, Kodi, just Kodi.
And Chris, there's no reason why you can't keep desktop hopping.
I mean, me, I have a reason to.
That's because I want to bring Ubuntu Studio to all desktops.
OK, fair enough.
Yeah, your reason is that you need
to find out what's the best experience for you.
Yeah, I'm just exhausted by it.
I'm done with it.
That's time you could be getting the other work done.
Yeah, I've got to reload, or I've got to reset a batch.
Make sure you budget 10% of your year for desktop hopping
and trying new file systems.
Yeah, at least you get paid to do it, right?
That's true, although I also get paid to do other things
that I'm not doing when I'm reloading distros.
That's a tough call.
It's a tough call.
It's first Linux world problems, first open source world
problems.
The reality is, too, once I'm about midday and I'm done,
I get to a point in my workflow where I'm not really
rearranging Windows anymore.
Telegram, Slack, Terminal is going here.
Firefox is here.
Chrome is here.
VLC is here.
You get to that steady state of, I've
done all the things I do in a day, and now I'm just operating.
It's fine, and then I'm not moving stuff around,
and it's just great.
Plasma is rock solid that way.
But in the meantime, getting there
is a bit of a challenge, so I like to tinker around
and play with a few different apps on the command line
to remind me why the hell I love Linux so much.
So let's do a couple of app picks before we get out of here.
Our first one comes from a company
that seems to be releasing a lot of open source software
these days, right?
This is a Microsoft project.
Microsoft.
It's called Ether, E-T-H-R, and it's a cross-platform network
performance measurement tool written in Go.
It's either Rust or Go these days.
Wait a minute.
Let's just pause for a second.
Microsoft is releasing a network performance measurement
tool for Linux that's open source and written in Go.
Isn't Go the Google language?
It sure is, buddy.
OK, all right.
I just wanted to make sure I was following this.
The goal of the project is to provide a native tool
for network performance measurements of bandwidth,
connections, packets, latency, loss, and jitter
across multiple protocols.
So you can look at TCP, UDP, HTTP, HTTPS,
and it also works on Windows as well.
This, though, is pretty neat, because Wes,
you were showing me a demonstration of throughput
on HTTP versus TCP.
Yeah, I mean, it's handy that it has that.
Now, it doesn't have support for bandwidth measuring
across everything, like UDP isn't implemented.
So clearly, they're refining some of their capabilities.
But it's very much inspired and feels like Iperf 3,
but with more protocol support.
And simpler, too.
You just grabbed the binary and ran it, right?
Yep.
The other thing that really shocked me
is we all know that an HTTP connection has less throughput
than, say, just a raw TCP connection,
because you've got all the overhead of the HTTP headers
and all that.
But when you ran this tool and you did a test,
it was like a difference of you could get a sustained 1.5
megabits over HTTP, and you could get 11 over TCP.
That's a 10 difference.
It's neat to see that kind of stuff broken out.
And you can also see how damn fast UDP is and all that.
I would actually, I'm thinking that if we still
have that problem back at the LA office,
this would be a handy tool for troubleshooting.
Yeah, the Wi-Fi LAN issue that we were having,
this would be pretty great.
So Ether, a cross-platform by your buddies
now over in Redmond.
What will they think of next?
I don't know, man.
I don't know.
Now, this next one isn't really an open source project.
I don't think it might be.
It's free, though.
It's the coolest, coolest thing.
I saw it going around on the web today,
and I didn't know a super easy way to do this in Linux,
so I thought this could be a handy tool for people.
It's called remove.bg.
And it automatically removes backgrounds
in five seconds from an image.
And it looks like it's really good.
It looks like it's super, super good, actually.
Like, if you spent hours in GIMP,
you would probably not do this good.
It's pretty handy.
It's not perfect.
I tested it with some of our System76 photos,
and it does a decent job.
If you've got something that's kind of light or like holding
a glass, well, it does a bad job with that,
or often hats can throw it off.
But yeah, it's going to do a better job mostly,
especially on things like hair, than I'm ever
going to do in GIMP.
The hair is the hardest part, yep.
Yeah, if you have really what I think
it's looking at contrast and things like that.
So there has to be some clear differentiators
between foreground and background for it to work great.
But this would be a cool way to like meme up
some of the folks from System76 and put them
like in weird spots.
I'm getting some ideas with.
I'm getting some great ideas.
So that is over at remove.bg, and we'll
have a link in the show notes.
If you want to get those picks this week,
and if you've got a pick you'd like to send our way,
please send it in.
linuxunplug.com slash contact, or linuxunplug.reddit.com.
We're monitoring those locations,
and really kind of want to maybe open up the field.
We kind of have our grooves, but we'd
love to get your app picks out there.
Maybe you're looking at stuff we don't even think about.
There's just so many, and honestly, it's
a lot of fun on our side to go just
evaluate these random things, because very surprisingly often
you find a diamond in the rough.
You know, like that mini DLNA that's now ready deal,
ready whatever.
Ready media.
Ready media, thank you.
That's been in my repository this entire time.
I just didn't know it was there.
That's a really good one.
If you've got stuff that supports DLNA,
it's not quite as robust as some of the richer programs
for things like transcoding.
But if you just already have files,
and you want to serve them, boom.
There is a fork of it that will do transcoding.
Oh, nice.
Yeah.
But so what Wes is talking about there
is one limitation of that mini DLNA pick
is that it will only play back on the devices that
support the videos you're put out.
How to say this?
It relies on client-side decoding.
In other words, the TV or the set-top box
has to have that specific codec and support
that particular container.
So if you've got a bunch of weird MKV files,
it may or may not work.
The other problem is DLNA is just kind of a finicky thing,
and a lot of the client implementations
kind of vary in quality depending on the firmware
running on your television, for instance.
But when it works, it works nicely.
All right, Mr. Payne.
Here we go.
Now, two-episode journey in.
First, bringing it up from its baby firmware,
an early build of the firmware.
Flashing it, connecting it from your ThinkPad,
getting on there over the USB-C connection,
then loading in the LED control plugins.
And now, Wes Payne, have you successfully
lit your keyboardio on fire?
Look at that.
I sure have.
Look at that.
Now, OK, Chris, you're probably wondering,
it's only half on fire.
Now, there's actually a bug in the current version
of the firmware and one of the default plugins for it
on the very handy Board Manager API
that they provide to integrate with the Arduino IDE.
So that's nice if you go get the latest one from Git,
that's fixed.
Unfortunately, I didn't have time to do it.
But half of it's on fire.
That'll spread.
That'll spread.
You know, the GIF that I'm playing on the screen
does not do it justice.
It's way smoother and nicer.
It's way nicer.
It actually kind of looks like fires.
It changes hues, and it's one color at the base,
and it flickers and goes up.
You can imagine it's like a really small window
on a bigger fire.
I actually legitimately, when I'm not using my computer,
would love to have that.
That'd be fun, wouldn't it, just sitting at your desk?
Man, that is so cool.
Well done, Wes.
That is a big win for you on the old challenge
you managed to rebuild that thing, basically,
while also doing a live show.
So I'm going to say that is a big congratulations.
Way to get our Linux running keyboard back in action.
That's pretty cool.
And now we have a new reason to follow Keyboardia.
We sure do.
In the meantime, I had no idea that Wes was a pyromaniac.
Yeah, he sure is over there.
He's fighting it on fire.
That's so nice.
That's totally lit.
No, it's only half lit.
Oh, that's horrible.
That's no good at all.
All right.
Well, let's see.
On that particular bombshell, on that particular one,
let's get the heck out of here.
Thanks so much for tuning this week's episode
of the Unplugged program.
We have a lot in store for the holiday episodes coming up.
On the 26th, we're going to be doing our predictions
and answering our previous predictions,
try to get those in before the new year comes.
And then on January 2nd, we'll do our reflection,
our look back on the biggest stories, the biggest
things that happened to Linux.
I love these.
We've got a great list this year.
And then we'll wrap it up with our magic wand wishes.
If we could make anything happen in the open source world,
what would those be?
And I'd love to hear your thoughts.
So join us.
They'll be on the 26th and then on the 2nd.
But thanks so much for being here this week.
See you back here soon.
Tuesday?
I don't know.
Sometime.
And the holidays.
They ruin everything.
Bahambe!
Yeah, it is.
This is the last episode before the holidays.
Happy fricking holidays, everybody.
What?
Yeah, the next episode we'll be back, we'll be after.
Yeah, we should marry Christmas, too.
That's pretty good.
That's crazy.
Man, that is really something.
Well, we had a week to go.
Yeah, I guess that's good.
I think I'm done shopping.
I never am, though, because I'm so bad.
Can't be.
There's always somebodies I forget.
I always forget somebodies, because I don't want anybody
to get me anything, really.
Because all the stuff I want is really expensive anyways.
And then I live in a tiny, tiny, tiny, tiny home.
You don't need extra stuff that you didn't really want anyway.
I don't mean to be so.
The things that I want are, you know.
I mean, I don't know.
I always say that, and then people
think of stuff to give me that's so thoughtful that I don't know.
I'm always really like, aw.
That's probably a short list, though.
And what it is is I'm just a jerk.
That's what it is, I guess.
Mr. Bain, we've got to pick a title.
Oh, guys, come on.
We need your help.
Yeah, we do.
I'm plumb out of ideas.
Oh, it was fun going to System 76, seeing everybody again.
Making plans for our big barbecue at Linux Fest.
That's what I'm looking forward to.
It's just going to be, I bet you they're going
to bring some Thalios to Linux Fest.
They probably should.
Why would they not?
Oh, man.
Yeah, Eric, you're coming, aren't you?
Dude, now that I no longer have a job,
I can definitely be there.
Oh, well, it was on the weekend, man.
Oh, yeah, well, the thing is I worked on the weekends.
Oh.
Well, that's worth it right there, then.
Yeah, well, to be fair, I quit.
I did not, I was not fired.
I quit.
You make sure that's clear.
That's on the record.
That's on the record.
Totally on the record.
Ben got a good one in there, the keyboard drama.
If we're making this one about the keyboard,
that'd be a good one.
I don't know what I'm going to do about this desktop situation.
Part of me really thinks I should just use a desktop.
You might just use a desktop.
And just keep the laptop for laptop things.
That seems like a good idea.
Why didn't I think that?
That is simpler.
That works if you have an office to go to,
but like myself who lives in a trailer, much like Chris
living in an RV, a moto home.
Yeah, yeah, for home.
For home, yeah, you definitely need the laptop.
But for work, you know, that's so backwards, too.
It used to be you need the laptop for work
and then the desktop for home.
Yeah.
Now it's the other way around.
It is totally.
It is totally the other way around.
That's, hey, you know, I don't need all the horsepower
at home because I'm not trying to do as much stuff.
When I'm in the office, I'm at work,
I'm trying to get a million things done
and trying to get it done as fast as possible.
Yeah, I have a relatively powerful laptop, though,
so that way, because I need the horses in order
to do audio processing, clearly.
I have a rack that's like 10 years old
I bought for less than $200 that it does great.
And I just use a laptop that's pretty cheap as basically
a satellite most of the time.
And yeah, there you go.
Yeah, that's kind of what I'm thinking.
That's exactly what I'm, that is exactly the setup.
I mean, you could even use a Chromebook
for what I'm thinking about.
Exactly.
Chris, I meant to jump in.
I'm sorry, Synergy crashed.
Oh, that's so funny.
Wait a minute.
I thought we were supposed to be using
barrier or whatever it is now.
I'm still using Synergy One, but.
All the feels, all the feels.
Do you have thoughts?
Do you have thoughts?
Yeah, so I use.
By the way, for people listening,
I asked him if, Brandon, I asked Brandon
if he thought I was just taking the system to the abuse
and living with it.
Yeah, I don't think so.
But one, I think the, I think most of it is actually.
Now, Thunderbolt docs for Linux users are pretty new.
Like I kind of like, you know, for the most part, it's not.
It is.
Like it hasn't been mainstream in the Linux world.
So I think it's more so drive, more problem,
not necessarily at system D.
I think it's more driver level.
Well, so I think so.
And I am like Nvidia and also Nvidia graphics
for hot plug from my experiences is terrible.
Just asking for trouble.
Well, who expects the GPU to be removed, right?
But also to dovetail on that,
because the best Thunderbolt support right now is in GNOME.
It's not in Plasma.
It's not in any other desktop.
It's in GNOME, unfortunately.
Yeah, that's true too.
All right, let's do one bonus little quiz game
before we go for the day.
All right, chat room, mumble room,
without looking, don't cheat.
What do you guess is the third most popular distribution
on DistroWatch right now?
Number one is Manjaro.
Number two is Linux Mint.
What, without looking,
is the third most popular Linux distribution
as ranked by the totally arbitrary DistroWatch?
I'm just going to plug a boot in his studio.
Yeah, well done, sir, they're getting their value there.
Anybody have any guesses?
Anybody, anybody?
Yeah, I'll tell you what, I was shocked.
I was shocked when I saw this.
Iana Gross is coming in from Bitten.
A solid guess there, Bitten.
That is a solid guess.
Architect comes in with the answer.
Let's go for it, everybody.
MX Linux, MX Linux, the number three Linux on DistroWatch.
MX Linux is a desktop-oriented Linux distribution
based on Debian's Stables branch,
and it's a comprehensive venture between AntX
and the former Mepps Linux communities,
or Meeps, how do you say, what?
You're laughing at me over there.
I know I've got it wrong when Louis starts laughing.
And I didn't plan on reading this.
It uses XFCE for the default desktop.
So there you go, Joe.
You've got a new desktop.
