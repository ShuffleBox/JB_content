Every now and then, I see a post on Reddit
that makes me feel like an inadequate human being.
This post is one of those that I don't think
in my entire life, if I lived another 70 years,
another 80 years, if I lived to be 180,
I could never accomplish this.
This guy made his own smartwatch
from like 3D printed wood or something.
Did you see this?
Yeah, it's incredible.
And that was my first thought too.
In no way will I ever do this.
Wait, you could 3D print wood?
Well, it's like a wood composite.
It's like a mixture.
It is one handsome smartwatch though.
Yeah.
Yeah, you put sawdust in with the plastic filament
and it kind of comes out as like a wood filler.
Oh, so it's got like a grain and stuff.
Yeah, oh, for sure.
Yeah, it looks like a nice wooden watch.
It's a round one that he built himself
and he has all of the models and specs up on Imgur.
Even the printing process,
you can actually watch it get printed.
Yeah, the other impressive part to me is I assume like,
okay, it's gonna put some sort of Android
or some other common platform,
but no, it looks like he wrote all the software himself
in C.
And is it GNU slash Linux?
Let's just say it is.
You wanna just say it is?
No, I think it's all just running on an embedded device.
No, I'm pretty sure it's GNU slash Linux.
Yeah, I'm pretty sure, Wes.
Yeah.
This is Linux Unplugged, episode 300,
recorded early on May 2nd, 2019.
Well, hey there, welcome into your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Mr. Payne, looking dapper in that vest as always.
Oh, thank you.
Let's take a moment right here at the top of the show
and welcome the newbie, our brand new editor.
It's Drew.
Hello, Drew.
Hello, hello.
How do you feel over there coming in?
Great.
It is wonderful to be here.
It's nice to have you here.
Yeah, Drew is our second editor now.
Of course, Joe isn't going anywhere.
Now we are a team with two editors.
Man, we have editing superpowers,
so we have no excuse for bad audio.
I know.
Oh, crap, maybe we shouldn't say that, actually.
And of course, joining me as always here in the studio
is our crew.
Hello, cheese.
Hey, what's going on, man?
How's it going?
Brock's in the front of the line.
Brock's in the front of the line, man.
You know it, baby.
You know it.
Now, also joining us in studio, the one, the only, Joe Rezington.
Hello, Joe.
Hello.
Hello.
Hello, sir.
How are you doing over there?
You feeling better?
Yeah, mostly.
Still a little bit jet lagged, but happy to have Drew on board
taking some of the load.
Yeah, it came in at a good time because-
I mean, you were working crazy hours.
Like, we don't want Joe to kill himself.
We got to take some of the load off.
Yeah, absolutely.
And also very happy to have Alex here.
Hello, Alex.
Hello.
Hello, Mr. Badger.
Good to have you on board as well,
especially for today's topic.
We'll talk about many, many things in today's podcast
as we are one to do, as we are one to do.
But nominally, we wanted to have another shot
at talking about Fedora 30.
We had to give just a quick mention in last week's episode
because our time had been focused on Linux Fest Northwest.
And it was hot off the presses at the time.
Right.
But now we've had a little bit of chance to kick the tires.
And we'll tell you about our perfect Fedora setups
that we've landed on, as well as some really, really cool spins
that I'd never had a chance to play around with before.
And I used this release of Fedora as an excuse to do that.
So I'll tell you about those as well.
But we got to start things off with some community news.
You know how we do, Wes.
There was, I feel like a psychological thriller
being played out by Red Hat against Linux users,
like teasing us, tugging on our strings,
telling us that a new logo was coming.
And then it kind of landed, it sort of landed first
as a community contest to sort of prep everybody
that a logo change was coming.
Get your feet wet, kind of understand
that change is happening.
Don't be too scared.
And then you started seeing these posts on Reddit
and whatnot that was like, the new logo is coming.
What's it going to be like now that IBM has acquired Red Hat?
They're changing the logo.
Blue Hat, right?
Yeah, is the hat going blue?
And then we got the big announcement video
from Red Hat with the cool, hip Red Hat music,
showing the new logo in all these different contexts that
are so awesome with flashy colors and hip people.
How could you not love the new logo?
Ladies and gentlemen, the new Red Hat logo is a Red Hat.
Very controversial decision here.
Who saw that coming?
People seem to really miss Shadow Man, though.
Yeah, Shadow Man is gone.
That is the big difference.
There are some good reasons for that, though.
There were internal people whose entire job it
is to look after the Red Hat brand, of course.
And they ran polls to ask people what they thought
when they saw the Red Hat logo, and word just sinister
came up.
And it's kind of in the name, right?
Shadowy, Shadow Man.
So that was part of the thought process of getting rid of him.
Yeah, and I could absolutely see that being the case
with a team of marketers sitting around saying,
what is bad about our brand?
How can we change it and bring it to a more positive light?
But man, I really like the new logo.
You know what?
I do, too.
Yeah, I do, too.
I wasn't entirely convinced the first time I saw it.
So there's been this internal project
for, I don't know, the best part of a year, maybe longer,
called the Open Brand Project, where they've basically
crowdsourced this design from Red Hatters across the globe.
And as you can imagine, Red Hat is full of opinionated people.
So internal mailing lists have been lighting up
for many months about this.
And I can imagine.
Everybody giving their two penneth about it.
But I think they've done a great job.
I think it looks great.
I actually think it's the perfect move.
Because everybody's all worked up about,
oh, it's going to be a big change because of the IBM
influence and all of that.
And so psychologically, we were all prepared for a shock,
a totally new look.
And then Red Hat comes out.
They're like, nah, it's still a Red Hat.
Yeah, it kind of feels just like a refinement,
more of saying, yeah, let's continue our purpose.
And it obviously does play and fit in a little bit better
compared to all the competitors who play in their space
have similar logos.
I hope this reflects where Red Hat's going
after this whole acquisition, a refinement of what we've
known that is Red Hat.
We'll see.
You know, the thing about it is that this completely predates
anybody's knowledge of IBM.
I mean, Jim apparently only talked to IBM early last year.
And we, of course, only found out late last year.
And this open brand project's been in the works
for a lot longer than that.
So yep.
I agree.
I know.
Good point to make, though.
It should be said that I would really
like to have one of the 1995 logos on a shirt.
Yeah, that's funny.
You want the retro look.
Yeah, with the article we linked, and it's in the IRC.
So if you're hanging out with us there, you can check it out.
But it has their iterations from 95 to 99.
Yeah, the last logo change was in 1999, 20 years.
So I think it's about due, don't you?
Absolutely.
So is anything happening with the building topper?
Oh, you got to wonder.
They have to.
I mean, you got to do a unified look, right?
It's already changed.
There was a whole thing downtown.
You know, news stations, they had a banner.
They had this whole brown banner covering it up with cloth.
And they changed it about two weeks ago.
And journalists picked it up about a week later.
And the internal main list was going, well,
it took them a while to notice.
Well, you know.
And then they had a big ceremony yesterday
where they dropped a cloth off it,
and Jim had a selfie in front of it and all the rest of it.
But it lights up red at night.
How nice is that?
I like that, actually.
So for those listening that don't know,
Alex is a Red Hatter, so he has some.
So he's tracking this, you might say.
I live four miles from the tower, so it's pretty nice.
You think at that distance, you could almost hook up wirelessly.
I'll send the drone off.
Yeah.
Maybe not.
Maybe don't do that.
Well, I'm very, very happy to have Drew on board.
What's great about Drew is pretty much all
of the recent hires we've done have been from the community.
In the most cases, they're from long, long-established community
members, like Cheese has been a community member for 10 years.
How long had you been listening before you came up
for that barbecue many years ago?
Not quite that long, but definitely a couple of years.
Yeah, a couple of years.
Drew is sort of on the other end of that.
He's been a listener for about, what, five, six months, Drew?
A little longer, maybe six, seven.
But in that time frame, yeah.
So right around the Linux Academy acquisition time frame,
I would say, right?
Is that when you kind of started listening?
That's a good sign that he just started listening and then
was willing to come and work with us.
I know, I know.
It's pretty great.
And Drew has already gotten us hyped
to the next level about Reaper and recording
on Linux, which is perfect.
Because Wes and I have already been getting pretty excited.
We've been solving a lot of problems in the studio.
And Reaper has really kind of just
been proven to be a great choice for us.
And so to have Drew join us right
as we're kind of in that hype cycle
already has really kind of taken everybody's excitement
to the next level.
We're sharing tricks and showing each other tips.
And Drew's like blowing our minds with ways
to make Reaper even better.
All the time.
That's pretty good.
And I got a dark theme now for Reaper, so I'm pretty happy.
It looks very professional in here.
So Drew, it's great to have you.
I'm glad you're able to join us for this episode.
Because I know you're going to be traveling back home
pretty soon.
So the timing, it just kind of worked out.
Yeah, me too.
I'm really glad I was able to be here
for a show in the studio as my first show.
Oh, yeah, totally.
That's perfect.
And you're a long, long time desktop Linux user.
Yes.
How long?
About 19, 20 years.
Yeah.
And Fedora is your primary jam.
Although I believe right now on your laptop is Ubuntu 19.04.
Yeah, you know, like most of us, I'll
distro hop a little bit here and there
when something new comes out.
And you've got to have the shiny and see how it ticks.
But I'll probably be back on Fedora 30
by the end of the month.
It was actually Drew talking about his love for Fedora.
He was like, all right, I'm installing 30.
Yeah, you were just sitting down.
And I was impressed.
You got it set up before very long.
Dude.
Yeah, we'll talk about that.
I just, you know, I was like, OK,
I had a good run with Manjaro on the ThinkPad.
Now let's put 30 on there.
And I messaged Joe.
And I told Joe, I'm like, hey, Joe, I'm
going to go ahead and give XFCE on Fedora a spin.
And Joe's like, what'd you tell me, Joe?
What'd you say?
I said, I've never had great experiences with it
because it's a bit too stock.
It's a bit ugly and needs a bit of theming.
But it sounds like you're willing to do that work to theme
it and set it up exactly how you want it.
Well, here's what I said is I said, I'll commit an evening.
If I can get the config and the setup nailed in an evening,
then I'll stick with it and I'll use it.
And I attempted to do just that.
So I'll tell you about how that went
and what I ended up with here in just a little bit.
Well, maybe we'll just do a little more community news
before we get there.
I think this is pretty exciting.
Dell is launching a couple of new Linux-loaded machines,
a Precision 3540 laptop that starts at $700 as well
as some other systems.
You still have that new Dell XPS 9380 developer edition.
It's a beauty, has a lot of performance.
But if the price is too much for you,
Dell has launched their new budget mobile Precision laptop
now with Linux options on there.
Oh, yeah, the 3540.
Now, it starts at just $702 American.
I know, you get a Core i5, UHD Graphics 620,
and unfortunately, a whopping 15-inch 1366 by 768 display.
Also, that comes with 4 gigs of RAM and a 500-gig hard drive.
Now, that doesn't sound great, but you can upgrade $700
as a bottom.
As a starting.
It's not that bad.
Yeah, that means when you've configured it
the way you want it, you're not breaking the bank.
So there's that.
Also, I have some family members,
like my dad, who cites it's OK, but it's
starting to go a little bit for reading fine print on screens.
So some of these resolutions for him.
That might just be fun.
Big text, it's good.
He actually doesn't mind at all.
The savings isn't huge over the Windows 10 edition.
You save about $67 US greenbacks by going
with Ubuntu over Windows 10.
Now, if you're skeptical of the 3540 coming out later
this month, there's going to be the 3541.
That's going to have some nicer options, including a Xeon
processor or Nvidia Quadro Graphics.
Now, both of these ship with 1804,
but they're also certified for RHEL 8.
Isn't that interesting?
Isn't that interesting?
Well, tip of the hat there to Barton George and his team
there at Dell.
That's awesome to see another update coming out.
Perhaps we'll hear more about that very soon from them.
Kind of along those same lines, speaking of Ubuntu,
Canonical has released WLCS.
Any guesses what WLCS stands for?
You have a guess?
Well, I happen to already know.
I know you know.
That's not a fair question.
All right.
All right.
It is the Wayland Conformance Suite.
Now, Ubuntu, as you know, is not currently
using Wayland by default. And it doesn't
look like they're even going to give that a shot again
until Ubuntu 2010.
The option is, of course, still available if you want to give
it a go-skis.
And they're working to set up a compliance suite.
I guess that's like a suite of testing to validate?
Yeah.
Well, I mean, what do we always say about Wayland?
It's the protocol, not the implementation.
It's not a display server.
It's a protocol.
Yeah.
And so it makes sense to be able to test
that things implement that protocol in a standard way.
So you can have multiple implementations,
test them against each other, and test them
against a standard battery of tests.
That does make sense.
So as part of their Wayland interests
and as part of developing the mirror, now with Wayland
support, they've been working on this Wayland Conformance
Suite for testing the Wayland protocols for the conformance
to the written specifications for Wayland.
Now, basically, as I said, it's just
ensuring Wayland compositors behave correctly
against all of the documented specifications
for the protocols.
Now, just this morning, canonical developer Chris
Rogers released the Wayland Conformance Suite 1.0,
and that's why we're talking about it today.
In its current state, there are about 300 tests
to vet Wayland surface events, the Wayland shell protocol,
XDG shell, and a few other things.
Yeah, OK.
I like that.
That's a great idea.
It is, right?
And it's a good example of different interests
working together on some common software that
helps everyone using Wayland.
I happen to also know the developer that's
responsible for some of this.
Chris is a genius, a genius.
This is a brilliant mind that is doing incredible development,
and it's great that Canonical is now
paying him to contribute that towards Wayland
and making it possible to adopt Wayland.
Yeah, right.
This is going to benefit the entire community.
All right.
Now we have something we want to ask the audience.
I bought a Nintendo Switch a while ago
with the intention of putting Linux on it,
but then there's a problem, Wes.
I turned out to love the Switch.
I mean, it is an excellent game playing device,
so I can see how that might happen.
Have you had a chance to try one?
Yeah.
I don't own one, although I have been tempted to purchase one,
but I've played it at friends, and it's great.
Drew, have you had a chance to try one?
I actually haven't ever really played one.
You're going to have to let them.
I mean, do you have it here with you?
Yeah, I did.
Yeah, I always.
I was very skeptical, because it seemed just
like a rip-off tablet.
They were sticking some controllers via Bluetooth
on and having, essentially, a Nintendo label badged on it.
I was wrong about that.
It's a great gaming device, and so I haven't really
taken the plunge to try to put Linux on it yet.
Right, and you've just been satisfied
in its current role.
However, things may be changing, Wes.
I got to get a push from the audience.
I don't want to break my Switch without at least knowing
that the audience wants to know how this works.
So if you would like me to Linux my Switch,
I want you to tweet me at ChrisLAS
or ping me in the Telegram channel,
hashtag Linux the Switch, hashtag Linux the Switch.
Let me know if you want us to attempt
to put Linux on my Nintendo Switch,
because Wes and I are going to need to 3D print
a component to do this.
It's a little involved, could break the Switch.
Who knows, or get you banned.
But we would be using L4T Ubuntu, a friendly Linux
distro for your Switch.
It sounds like it's, I mean, as they call it,
quote unquote, fully featured.
Dock support, Bluetooth, NVIDIA drivers for the GPU, audio,
the Joy-Cons work.
Not if you connect them directly,
but they work when they're remotely connected.
I don't know why that's the case, but it just is.
Wi-Fi display, touch screen, CPU frequency scaling,
so it sounds like the battery life might actually be OK.
Yeah.
And even video accelerated playback.
That's not bad.
It might actually be a useful device.
I don't know.
We haven't tried it yet.
You know what the killer use case for that would be?
Is running, if they have any built for that processor,
would be running emulators to play the Super Nintendo
on my Switch.
All right, let me know.
Hashtag Linux the Switch if you want us to try this.
I'll 3D print the thing for you if you want.
Awesome.
There we go.
Now we've got the hookup.
And I think the first thing you should test is,
will it run Doom?
Yes, of course.
Crisis, dude.
It's got to run crisis.
There you go.
Chris, I think you need a burner switch is what you need.
You need a good switch and a burner switch.
You're right.
The best of both worlds.
You're right.
I need another switch, of course.
For show purposes.
For show purposes.
So what I should do then is strategically wait,
because the rumor is there's going
to be different sized switches, like a Switch XL coming out.
So I get the Switch XL for myself,
and then I dedicate the current Switch
that is hackable to the show.
I mean, it's the right thing to do.
All right, a little housekeeping before we keep going.
Not much this week.
However, we promised it, and we are
beginning to deliver right now.
We have started to post the audio for the LinuxFest
Northwest talks.
You're working on it right now.
I take it.
Yes, absolutely.
There might be something preventing us from doing that,
but it'll be up in just a moment.
Well, the issue is we're trying to upload like 90 megabyte flack
files to GitHub, which is not designed
to hold 90 meg flack files.
But it's happening anyway.
We're going to get it to work, you think?
Oh, yeah, of course.
All right, I'll put a link in the show notes.
It's github.com slash jupyterbroadcasting slash talks.
We have the audio up right now.
As folks that were involved submit their talks to us,
either the slides for like a link to it,
or the PDF of it, or something like that,
we will add those to the GitHub as well.
So you can download the audio, and then
follow along at your own pace with the slides.
Yeah, ideally one place to find all those things.
Yeah, and I plan to do this with future talks, too.
So keep that jupyterbroadcasting slash talks directory
bookmarked, because we'll probably
have more in the future, I think.
Right now, we'll start with Linux Fest Northwest.
So that's github.com slash jupyterbroadcasting slash talks
to find those.
To get the audio and the slides, you can find it all up
in that business.
Now, only one other thing to talk about in the housekeeping,
probably the most important thing, the Friday stream.
Join us.
We'll be back from Red Hat Summit,
and we'll be doing a special back from Boston Friday
stream.
It's going to be a big one.
And up on YouTube right now is the Linux Fest Northwest
pre-party Friday, the family reunion edition.
That's what I call it.
It's a family reunion.
That's adorable.
It really was.
And that's up on YouTube right now,
youtube.com slash jupyterbroadcasting.
And the rumor has it there may soon be a dedicated Friday
stream feed.
What day is that on, though?
I'm not sure.
I think it might be on Fridays.
Might be on Friday.
Such a troll.
It's on Friday.
It's Friday.
It's on Friday.
Yeah, so the thing about the Friday stream
is we have a great crew here now.
And I just wanted to give the audience a chance
to meet the crew, just share stories, kind of just
build relationships with the audience and the crew.
And that's what the Friday stream is about.
So I'm a little more casual, and we
can dive into the diverse number of topics that don't always
make it to the other shows.
Yeah, we often will have in-jokes
that we reference or things of that nature.
And you'll hear the history, and you'll
learn about those in the Friday stream,
as well as, at least for now, a recap of some of the shows.
And we'll play some clips of the shows
and expand on them and follow up a little bit.
It's just a ton of fun.
So check that out, jblive.tv on Fridays,
jupyterbroadcasting.com slash calendar
to get it in your local time zone, as always, as always.
And there you have it.
That's it right there.
That is the extent of the housekeeping, nice and short.
Get it out of here.
Get it out of here.
All right, Fedora 30 has been released.
We've had a bit of fun with it over the last few days.
And I walked away with a pretty great setup.
So I thought, let's sit down here
and talk about it a little bit.
Now, you have, Wes, a very unique configuration.
Perhaps you could describe this as the high performance
Fedora 30 setup.
Yeah, that's right.
I mean, I'm once again running it
out of that persistent memory device,
because it's just so easy and at hand.
You say it casually, like everybody just
knows what you're talking about.
It actually does take a lot of fiddling, too.
So for those of you that have missed the Friday
stream or Coder Radio, one of the ways
that Wes likes to try out software,
you know, if it's just a quick go,
is to build an entire environment in persistent RAM,
which is a funny term to begin with, persistent RAM.
Yeah, and it's not real persistent RAM.
Not a few, not a sheet power off.
It's just emulated, yeah.
But as long as you keep your laptop on, as I generally do,
it works just fine.
So I can boot into it, or right now, as we're doing the show,
I just have it running in a virtual machine,
but out of the same device.
Oh.
So actually, I just set it up using the virtual machine,
right?
Go click through it there while I keep my original OS running.
And then once it's all set up, reboot it.
And then you Kexec into the environment that runs in RAM?
Yeah.
And as long as you don't reboot, you can also add it.
Or you can reboot.
You just can't shut down for a period of time, really.
Kexec is faster and works well, too.
So I do that.
But you can actually just add it to your grub entry.
Reboot.
As long as your machine's not kind of slow,
this might vary per machine.
But on everything I've tried it with, it works pretty reliably.
You can just add it to the grub menu
and then have another OS installed that's
actually just stuck in RAM.
So does it load a base OS, initialize the RAM,
load the OS in the memory, and then boot it?
Well, it basically is just another device, right?
So you need to make sure you add an additional module
unless your kernel actually includes it.
Most of the time, it's a separate module
that you have to load.
So it's the same kernel as the host op, the main OS installed?
Yeah, well, I'm using the Fedora kernel.
Ah, OK.
Yeah, it's just like a new device existing on my system.
It just happens to actually be a reserved block of memory.
So there is some trickiness.
You have to go customize things and make sure,
depending on how your init RAMFS is built,
different systems, like Drawcut for Fedora, for instance,
go add the additional modules you might need
or build a custom kernel if that's your preferred route.
Then you can add that, either use Kexec
or add it to your grub menu.
Away you go.
So when you're installing and you're
going through the Anaconda installer,
what does the disk partitioner see?
Since I did it in a virtual machine,
it just saw a normal disk.
Ah, OK.
Yeah, so it set up LVM like normal.
I just did the plain default Fedora install.
That's so cool.
And then you turn around and load that into RAM.
And then it was already, yeah.
You set up the RAM disk, you boot up,
you have to add a kernel command line parameter that
reserves the RAM and makes it appear
as a device to the system.
Right, OK.
Yeah, and then I just pointed VirtualBox at it
and set it up like normal.
I love how nonchalantly you describe that,
as if it's just something that you casually did.
And I'm sitting here like an animal
running it on physical hardware, like some sort of jerk.
So as a result of that, I had to get a little nitty-gritty
with some of the grub configuration for Fedora.
I was poking around there.
And I noticed one of the changes that they made,
which is this new grub plugin, it
follows the bootloader spec style of configuration.
So now there's a separate, maybe if you've
used systemd boot sort of stuff, you're
familiar with this style.
Instead of under the grub config folder,
it's under the loaders folder.
And it's a simpler setup.
It's just sort of like each line is setting something,
like here's the kernel you're using,
here's the initRAMFS you're using,
any arguments that actually just inherit whatever default
arguments are being passed down.
And that way, instead of having to customize the grub2
configuration, which if any of you out there know
is full featured but a bit complicated to use,
you can easily define multiple entries.
And I think it's going to be a little more resilient
because it does it at boot time.
So you're not relying on this fully bootable host
OS to be able to regenerate all the grub.
We've all had to chroot in, go update grub.
Yeah, if it's just down to some configuration parameters
or something, it just lives on the thing.
And when grub starts, it loads this module,
which reads these entries and generates grub entries.
That's fancy.
I like that.
Nice deep dive there.
Thank you.
The other thing that I think both you and I were really
looking forward to in this release
is the flicker-free boot.
What do you think of that so far?
So far, it's pretty shiny, at least in my experiment.
Yeah, mine has not had flicker-free boot.
And I think in part it's because I'm using XFCE
and I'm not using Wayland.
And you're probably using Wayland, Gnome Shell.
It is really nice.
It is nice.
But I also would be 100% happy just always looking
at the text output of the boot.
Since day one, since the very, very, very, very first moment
I ever tried Linux, one of the first impressions I had
was that boot text flying across the screen
telling me what my computer was actually doing.
And from that very first moment, I've loved it.
And I often will just clear the boot screen.
Yeah, usually, actually, I just said we're both.
So anyway, even if it has a nice boot screen.
Generally, I just leave it until the next time I
have a reason to go into grub.
And then when I'm in there editing the menu entry,
I'll just take it out and I'm like, ah, let's do this now.
While I'm in here.
But Flickr Free Boot is one of the new features
that people are talking a lot about.
Bash 5.0 also shipping in this SOB.
Big update to Python in this, as well as GCC 9.
And of course, last but absolutely not least, Gnome 3.32.
Of course.
I think it's not an exaggeration to say the absolute best
release of Gnome Shell that's ever been released.
I really can't argue with that, right?
I mean, it just feels like a good, solid gnome.
It's fast.
It's been polished up a little bit.
It feels like Gnome 3 has what it was meant to be.
Yeah, and I'll say this.
It's made things awkward for guys like me
that want to kind of keep one toe in the Gnome Shell world
now.
It really means I'm in a position
where I have to run a cutting edge distro.
I'm either on Fedora 30 or Ubuntu 19.04 right now.
Old Gnome won't cut it anymore.
Right.
Well, if I want the latest and greatest Gnome memory
improvements, if I want the latest performance fixes
and the latest stability additions and improvements,
I've got to be running on a later distribution.
No more LTS for me if I want Gnome Shell.
That's an interesting position to be in.
And I would argue that if you're a big Gnome Shell user,
the new additions and improvements to Gnome,
or Gnome 3.32, are kind of worth upgrading.
Thankfully, this will just be solved.
Wait a little while, and next releases
will have the good stuff.
So I said, no, I will not be subject to this rat race.
I will not be subject to this.
And I had an epiphany.
Talking to Drew, it hit me.
I could have the perfect stack, a ThinkPad hardware,
a clean, simple Fedora 30 installation base,
and the XFCE desktop on top of it.
Think about that just from a high level standpoint,
how clean, simple, and efficient that sounds.
It's appealing.
Drew, what is it about Fedora that's
drewing you in over the years?
You see what I did there.
What I like about Fedora is that I really understand
and like how simplified the base OS is.
I never get confused going through trying to figure out
where stuff is because, for example, they've already
solved the slash user slash bin issues,
and they've really kind of tidied up the OS in a way
that really I love.
On top of that, it's modern, and working with flat packs
makes it a really nice distribution to use.
Now, you can run into some issues
if you're trying to run snaps since you
have to go SE Linux permissive if you want to run snaps,
which I don't do SE Linux permissive.
I came from the MSP world.
Security was one of the things that I did, and yeah.
So no snaps for me.
And that is another thing we don't often talk about Fedora,
but I mean, SE Linux is just right there for you
if you do have that background or you do have those concerns.
Right, and I prefer that to App Armor.
I also tend to prefer Firewall D to UFW.
I find both App Armor and UFW, I just
don't, it might just be that I haven't spent enough time
with them, but they feel clunky to me.
And I know that part of that is from my background of coming
from things like doing network engineering,
Firewall D makes a little more sense.
It's better for people like me who
come from that world without a major transition into the way
UFW does it and tries to simplify things and automate
a lot of the processes through apt and apt scripts
when you go to install something,
automatically opening up your Firewall port.
Right, whereas you already know how to do those things.
You're comfortable managing that yourself,
and Firewall D lets you do that.
And now that said, I'm not installing Fedora
on my wife's laptop.
She's getting Ubuntu because it's
easier for somebody who's a little less technically
inclined to really wrap their brain around.
I'm a little curious, as a longtime Fedora user,
how you feel about just the update and support cycle,
especially if you're using it on maybe something
more like a workstation.
Sure.
Well, I always tend to kind of stay up to date.
But then again, that's because I typically know how to fix
things when they break.
I also feel a little more confident.
You and I were talking about this,
using DNF to do those upgrades, because it's
a very implicit process that you go through,
and then it does essentially a preflight check
before it does the upgrade.
I love that.
DNF just feels robust and well-designed.
Yeah.
And that one, you could see how Drew sucked me back
into using Fedora.
Absolutely.
And then I'm like, OK, well, let's try
this ultimate stack.
So I got my ThinkPad going with Fedora 30 on there.
Here's what I found interesting is
Joe's concern was that it would be quite a bit of work
to get it set up.
And Joe, you were kind of half right.
Here's what I was surprised by.
A couple of things were pre-installed
that make it a lot simpler to use XFCE.
Number one, the whisker menu, a current version
of the whisker menu, is installed.
It's just not in the menu by default.
So you have to go hunting for it if you want it.
You can kill the existing menu, right click on the panel,
add item, add whisker menu, good to go.
That's all it takes.
Also, happy to report, the arc and arc dark themes
are pre-installed.
It's using Edwadia by default, and it looks a little rough,
especially with that new background.
The colors, it's just all, it's a little 1990s.
It's like the most stereotypical XFCE first impression.
I don't hate it, but that just might
be because I used to use it looking exactly like that.
So I have a nostalgic love.
So I went and flipped that thing over to arc dark
in about 3.7 seconds, and then went and downloaded the pop OS
icons, installed them, good to go.
Pretty much everything I wanted, Slack, Telegram,
was all available as a flat pack.
I quickly.
You mean all that proprietary software?
Yeah.
And the other thing I was happy to report, it's not flawless,
but it was just a quick DNF install gnome-software.
And I had the whole gnome software downloaded
and installed, which made it really easy
to add the Chrome repository and a bunch of other things
like proprietary drivers, codecs like the Cisco H.264 codec,
as well as download and install updates
and search for applications.
I wouldn't say the integration with gnome software and XFCE
is all that good, but it's functional.
See, this is impressive.
I'm just thinking back to the last days.
And what do you guys always say?
You got to wait a little while after a Fedora release
because some of those alternative repos,
other things, proprietary app support,
they might just not be online.
But here you go, not very long after the release.
I mean, flat packs.
And COPR is now making it so easy for people
to update to the next release.
It's a checkbox to build for the next.
I mean, it's great.
You're right, Drew.
And Wes, you're right.
This is not something that should be missed here.
This is week one of Fedora 30.
And I'm up and working with all of the applications I need.
Granted, it's Intel.
It's Intel hardware.
It's Intel video.
But I've got literally every application
I need to do my job.
I saw you sit down and configure basically the whole thing.
In like 15 minutes.
It did not take very long.
And the great thing about Anaconda,
because you're answering a bunch of questions like time zone
and user and root password and all that in keyboard layout,
you're answering all of that while it's writing the images
to disk.
So by the time you get done answering all of those things,
you're like at 80% installed.
And you just sit back for like three minutes.
And then another 15 minutes after that,
I had a fully configured XFCE desktop
that I am genuinely happy with.
It's just great from top to bottom,
from the hardware, which runs cooler now, the battery
life, which is better.
I got two days.
I'm not even shitting you.
I got two days of battery life at Linux Fest Northwest.
Recording audio, right?
So it's not just like my laptop was sitting there.
Actually, it's doing some work shuffling bytes around.
I have the screen set to about 25%, 30%
running Fedora 30 XFCE Audacity recording from a USB audio
interface for two days straight on one battery charge.
So the battery life is phenomenal.
The machine runs cooler.
The Fedora install is clean and simple.
And XFCE is light and efficient.
It's a brilliant setup.
All right, what's wrong with it?
Well, if you have a high DPI monitor,
it's not going to work for you.
That's probably the biggest flaw with my setup right now.
That's really it, is that XFCE really
falls down with high DPI, where Gnome Shell shines.
And if you have a high DPI display,
it's sort of a deal breaker.
I think that's the biggest drawback right now.
And didn't you have a default browser issue as well?
I did.
Oh, yeah.
Thank you.
I also had a, I can't, I think I did fix this now.
But I had an issue.
Even though I installed Chrome, every link
I would click from any application in XFCE
would launch Firefox.
That's a little bit frustrating.
Even in the preferred applications, I had Chrome set.
You were kind of watching you wander around,
like I set it over here, I set it over here.
I changed the mime types to point to Chrome.
I went all in.
And I think I eventually, it was something like change
alternatives.
I can't remember now.
Update alternatives.
Update alternatives.
That's what it was.
And I think that finally fixed it.
But there was a bit of hunting and pecking and solving
that I did not have to do with Subuntu
that I had to do on the Fedora side.
But it was all within about a 15, 20 minute window.
And I was prepared to spend an evening.
So that's not so bad.
And hey, you know how it works now.
I'll tell you what.
I was looking at some of the different spins of Fedora.
And one name keeps popping up on these a lot.
It's Niels.
But there was a few I looked at.
I wanted to give a special mention to two,
the Fedora Security Lab, which is pretty neat.
I loaded that in a VM and gave it a go.
It's like you would expect.
It is a version of Fedora loaded with a bunch of security tools
and scripts to do network penetration testing and whatnot.
And it's a really cool addition.
Security Lab, we'll have a link to that in the show notes.
I also tried out, because I wanted to compare it
to the XFCE desktop, I tried out the LXQt spin of Fedora.
And it's also very fast, very lightweight.
It's really, really great.
I prefer GTK applications a little bit.
So XFCE is kind of the way I went.
But this was a great spin.
But before we get to Silverblue, which
I think is what we all need to talk about here
while we're talking Fedora 30, I think
we should talk a little bit about some of these other spins,
like the Pantheon edition.
It's not officially a spin yet, but you can install it,
as well as a few others.
And Neil, your name's all over these things when I look at it.
What is your hot take right now on Fedora 30?
And a disclaimer, Neil is a contributor
to Fedora, as well as just about every other project
on the freaking planet.
But a big contributor, Fedora.
So Neil, what do you think about the new Pantheon
packages that are installable and the other spins
that are out there?
What's your hot take, as it were?
Well, I'm actually really excited.
So for the Pantheon desktop, we started this work
with Fabio Valentini, who is the main driver and main
contributor to all of this stuff.
He was doing this back in Fedora 25, 26
when we started this.
And over the course of the last few Fedora releases,
we've just been bulking it up and getting
the basic environment up and going.
And it's just been pretty awesome.
We worked with the elementary OS people
to fix issues that cropped up.
We made it a little bit more portable.
We've contributed things all over the place.
What was the reception from the elementary OS project?
How did they feel about you doing this?
So initially, they were kind of cool to it.
But when we started showing up and providing suggestions,
patches, and actually legit feedback
that not only benefited us in the Fedora side,
but also helping them to make their elementary OS better,
they warmed up pretty quickly to that.
And we've got a fair number of advocates
within the elementary OS team who like the stuff that we do.
And so they're huge fans.
That's awesome.
Yeah, in particular, I want to give a shout out
to Cody Garver, who's the quote unquote system
architect for elementary OS.
He and I have been working closely together
for a couple of years now, along with Fabio,
working on getting all those pieces in place.
And now he manages actually the infrastructure
for producing elementary OS, all the distro patching,
the releasing of all the applications,
and things like that.
And so we worked with him to make sure
that whatever we needed to do to get things fixed
would also work OK on elementary OS's side,
and generally benefit both of us as a whole.
If I wasn't being too presumptuous, I could say,
Fedora's Pantheon desktop is, barring a few things that
are kind of missing due to some quirks and other problems,
is actually about the same level in terms of integration
and polish as what elementary OS was, or is.
That does seem like a bold statement, my friend.
Part of that is being a little bit presumptuous in the sense
that it's not complete.
It doesn't have all the pieces that the elementary OS
experience offers.
For example, unfortunately, App Center
had to be removed for Fedora 30.
There were a bunch of things that
just kind of broke to the point that we needed to pull it out.
It'll be reintroduced later in the Fedora 30 lifecycle.
There'll be a few other things that we're still working on
and chewing through to try to fix.
But it's the most complete experience we've had in a while.
The fact that elementary OS is introducing flat pack support
in the near future will actually make things a little bit more
interesting for us.
There is an old-ish branch somewhere of App Center
with Snap support as well.
And as you may be aware, I am the Snap maintainer for Fedora.
And I have all the integration pieces in place
for being able to enable that.
So one thing we could potentially be looking at
is having all the things.
What's the official story on the, I guess,
what seems to me to be the fundamental issue with Snaps
on Fedora in that they are built around confinement provided
by App Armor.
And Fedora uses SELinux, not App Armor.
So is there some sort of shim that
can be created where App Armor gets translated SELinux?
Is something like that even possible?
Or is Fedora going to be a Snap confinement-free zone?
I hope not.
That defeats the point.
So what most people don't understand
is that Snap is not App Armor native either.
What it does is it has an abstract set of permissions.
Similar to how Android and other mobile OSes work,
it kind of works that way.
And internally, it translates into a mixture
of set comp and App Armor rules.
Now, the App Armor stuff only fully works on Ubuntu
because they have their own changes that are not upstreamed.
And it's been that way forevermore.
But it'll maybe someday change.
But the set comp stuff works.
And there is upcoming in the next feature release,
2.39, the very most basic support for SELinux.
It doesn't do much.
It just mainly enhances the confinement of the SnapD part.
And the Snap confined tools are appropriately guarded.
And so it doesn't throw all kinds of crazy errors
all over the place.
But it's a starting place.
And the idea is that we can build from this.
And if people are interested in making
this work better in Fedora, they can
help with developing this SELinux backend for the SnapD
security system, the Snap confined system.
So there is now the potential in Git Master
for a proper SELinux backend.
It links to libSELinux.
It just doesn't do much with it yet.
And there may be some development that needs to happen
upstream in the SELinux side.
Unfortunately, while I know how to write SELinux policies
and I'm pretty good at it, I can do the security stuff
as good as any other sysadmin who
has to do this kind of thing.
I'm not that good at being able to write
into complex integration logic, translating mechanisms
backwards and forwards, and dealing
with all of those moving parts.
That's not my forte, unfortunately.
No, come on.
All right, well, let me get your hot take on Fedora 30.
Just sort of high level.
What are you pumped about?
And what should we know about that we haven't touched on?
So there's a couple of things that I'm really pumped about.
One of them is it's a really low level piece.
But then again, if you know me, you
know that I love the low level pieces.
We changed the way that grub is configured in Fedora 30
by default. So if you're installing Fedora 30,
your grub configuration will be changed
to using what's called the bootloader spec, which
is something that's been floating around for a few years.
The biggest thing that makes this interesting
is that now all of the loader entries in grub,
or any of the other bootloaders that we would configure,
but mainly grub, are now drop-in files.
And they're compatible with both grub and SD boot.
So if you were on an EFI system, you
could choose between grub or system dboot.
And the configurations would work exactly the same.
But for the most part, it is grub that you're usually using.
It's the one we officially support right now.
But the option is now there.
And there's other boot managers out there in the EFI space
that would be able to support using those drop-in files.
So the big thing is that now that we have that,
we can make it so that we don't have to clobber each other all
the time as other distributions begin
to adopt the bootloader spec.
I've heard from a couple of contributors
on the OpenSUSE side that are interested in bringing
our patches to grub and other pieces
to make it so that the bootloader spec is supported
in OpenSUSE Tumbleweed and adapting YAST
so that it generates bootloader spec entries rather
than manipulating grub.
By doing that, then Fedora and OpenSUSE
can sit side by side without clobbering each other.
And because I already integrated the patches for dealing
with SUSE's boot to snapshot into the Fedora grub,
some time ago, any design that we work on for supporting this
should be able to work on both Fedora and OpenSUSE properly.
But you're still using FreeBSD on your main desktop, right?
Hell no.
What do you take me for?
How great would it have been if you'd said yes, though?
That would have been so funny.
I can't even do that as a joke, and you know it.
But yeah, bootloader spec is one of the big things
that I'm excited about.
And the other thing I'm excited about
is that we're murdering Python 2 in its sleep piece by piece.
Yeah, go on on that, because I touched on that briefly.
So I'm one of the people that have
been working on murdering Python 2 in its sleep.
If you look at the change entry, my name is mentioned.
That's awful, but very good.
So what we've done for Fedora 30 is that we've gone through
and we've looked at the chains of things
that were available in Python 2 and Python 3,
and nothing was using the Python 2 part.
And we went and deleted them.
And I think we've cut a little over maybe 1,500 or so Python
2 modules and packages.
Also, we ported a number of Fedora infrastructure software
from Python 2 to Python 3.
So for example, the Koji build system is now Python 3,
except for a small piece of it that
still needs to be Python 2 for now.
That will be fixed, hopefully, soon.
Our update system, a lot of our compose process tools,
our imaging tools across the board,
like we've done a very drastic switch from Python 2
to Python 3.
I think the only thing that we currently
have in production at this point that's still running on Python
2 is the Fedora account system and the Pagar servers, which
are running on CentOS 7.
Or, well, FAS is running on CentOS 6, or RHEL 6, sorry.
We're actually running on RHEL.
They're running on RHEL 6, and the Pagar servers
are running on RHEL 7.
And so those are the only pieces,
I think, that are still running on Python 2,
because Python 3 hasn't been introduced into RHEL 7 base,
which is coming in the next point.
It's coming in the next point release.
There's a Red Hat bug for it, which
I can provide you a link later to show that it is coming.
So that will help accelerate the death of Python 2,
because it's been used as an excuse for a long time
to not port things, because Red Hat isn't supporting Python 3
in the RHEL 7.
No, no, no, it is.
Port your crap.
And that's a new shirt right there, port your crap.
All right, well, Neil, thank you very much.
Now, continuing along this theme, live here on the show,
prepare yourself.
You ready for this, Mr. Wes Payne?
Can you upgrade one of our most critical servers
in the Jupyter broadcasting infrastructure to Fedora 30
live on the podcast?
I think it's going to be a question of timing, I'm afraid.
Well, we're doing our updates right now,
just to get to a nice up-to-date set up, right?
Oh, OK, yeah, OK, so we were a little behind on the updates.
Not too far, but we had some to do, yeah.
I mean, we've been busy, right, LinuxFest Northwest?
Yeah, blame it on that.
Not the months beforehand where we didn't do any updates.
And then there's a DNF plug-in for doing the system upgrade.
So once we're there, I mean, can I do it?
I can certainly run the command.
OK, when do you think?
Do you think you'll get it before the end of the show?
We're chugging along right now, so there's only one way
to find out.
All right, we'll come back to that.
We'll come back to that.
Stand by, we'll see.
We'll see.
Before we go, Alex, did you have anything
to add to our Fedora blowout here?
I know you're potentially, possibly,
rumor has it, a Fedora user.
Yeah, rumor has it.
So there's been a really interesting development
with something called Fedora Silverblue, actually.
And it's the love child of CoreOS and Fedora.
So it's an immutable desktop OS.
And we've had several immutable server distros,
such as Project Atomic and Rancher, for a while now.
And Silverblue is aimed at those of you
with container-based workflows.
And it targets the development communities above all others.
There's a few things I like about RPMOS Tree.
You can have Atomic upgrades, which is really nice.
Let's say an upgrade balks your system.
It's really easy to roll back with Atomic.
So the way that works is you boot from partition A
into your operating system.
You then use RPMOS Tree to install a new image
onto partition B. Reboot into partition B,
leaving A untouched so that if ever there's an issue,
you just fall back to partition A.
And there's no practical limit on the number of images
that you can have available for this purpose.
So you could reboot to partition Q if you wanted to.
So it allows you to switch between different versions.
I'm doing air quotes.
You can't see it.
Different versions of Fedora, different spins, if you like.
So you could switch between a version of Fedora
but maybe had LXDE included, LXQT, sorry,
included versus XFCE just by rebooting
into a different partition or a different image,
which makes it really nice.
Yeah.
You can layer legacy applications,
package just RPMs over the top.
So that might include things like fonts and printer drivers,
et cetera.
So there is still support for the old school type things.
But the primary method for delivering software
on Silverblue is flat packs.
So we're all familiar with snaps and flat packs and stuff
on this show, I hope, by now.
Even command line applications?
Yes, I believe so.
Things like Vim delivered as a flat pack.
Oh.
Yeah.
So it's really, like I said before,
the love child of CoreOS and Fedora.
And there's some really, really cool stuff in there, yeah.
Yeah, that is a kind of beautiful thing to see.
And it's something that we've been watching pretty carefully.
And I don't know, it's nice to meet.
Can you be our, what do you think, Alex?
Will you be our Silverblue correspondent?
Yes.
Yeah, I like that.
You sound really dedicated.
Oh, I just got the thumbs up from Mr. Westpain.
All right, here we go, ladies and gentlemen.
We're at the prompt.
Do you want to continue?
Yes.
Yes, we do.
I hit Y.
All right, and Enter.
Now, away we go.
And what do we got here?
We're downloading some packages.
Yeah, we're doing some updates first.
Yep, see, we've set up, right?
We're moving to the Fedora 30 repos instead of 29.
So you've installed the DNF upgrade plugin.
Yep, and then we run system upgrade.
Why don't we break this down a little bit?
So the way this works on Fedora
is not necessarily the way it works on Debian,
where you can do a dist upgrade and you can start off.
This actually, you kind of have to tell DNF,
hey buddy, it's time to switch over to 30.
Yeah, exactly.
So now we've started downloading all the new stuff.
So right now we're just in the download state
getting all the packages we'll want
as we upgrade to the new release.
And once that's finished, we'll run system upgrade reboot,
and then it'll reboot and actually upgrade us
and get us to a Fedora 30.
And is it using system D in some way to do this?
My understanding is that it is for the upgrade process,
that it reboots and system D takes it into a state
where then it installs all of the packages
and then reboots again.
Some fancy stuff they do.
It really is.
You know, kind of like Windows a little bit
where you got to do the package upgrades offline,
but I guess it's safer not to have that stuff
loaded in memory.
And I mean, one of the nice things about Fedora
is you upgrade a lot.
So you need it to be reliable,
but it can be reliable because it is actually happening.
It's not, you know, how many Ubuntu users do you know
that skip a few LTSs and they're going from a 12 to an 18,
and it's really painful.
Well, you can't really do that on Fedora.
You don't have five years either, right?
So you've got to keep it up to date.
And that's one of the deals you make
when you deploy a Fedora system.
And our system here, the Orbital system that we have,
that is one of our most valuable machines
that runs many containers that supply production services,
that supply encoding services,
that run the Casta Blast automated encoding system.
All of that is a series of different containers
on our Orbital server running on Fedora 29,
that we are now upgrading to Fedora 30.
If this breaks, we literally will not be able
to publish this show.
I mean, I think Joe is just going to yell at us.
That's going to be the primary outcome.
Please tell me when it's that you took a snapshot
of this before you started.
Yeah, it's-
You did?
Cause we meant to, but I forgot.
I forgot to do that.
Cause if this goes wrong, our FM stream is off the air.
Our publishing system is off the air.
I mean, we're going to have to reboot the FM stream anyway.
So that's-
Are we?
Of course.
Yeah, we're going to reboot the system.
Did you check the disk space though?
That's the question.
Yeah, we're doing fine there.
Okay, all right.
All right, how far are we along now, Wes?
All right, download complete.
Phew.
You know, as we've done this,
it's really hit me how critical this system is.
And if this breaks, we can't use Fedora anymore.
Like if this breaks-
Well, I don't know if that's true.
No, seriously.
Dude, really?
That's pretty extreme.
Have it break every nine months on us or whatever it is?
Really?
That's not-
Well, that's no guarantee it's going to break every time.
If it breaks, I mean, but a five year distribution-
Generally, one takes slightly more precautions
before upgrading-
True.
But a five year distribution by its very nature
needs to be upgraded like this less often
than a Fedora distribution.
And if it breaks once, then that's it for me.
It could break again.
Yeah, it has to be 100% reliable.
That's a myth.
There's no 100% reliability.
It's one thing for an LTS,
like an Ubuntu LTS upgrade to break
because you go five years in between upgrades.
Really, it's always a cost benefit question, right?
There is obviously a cost to having to upgrade more often.
There are upsides too, because, you know,
we just measure, is it worth what we get with Fedora?
You lied to you having cockpit set up and ready to roll.
It was an easy system to manage.
You enjoyed DNF.
I've never had a DNF upgrade fail me yet.
It's just that nothing like this
has ever been on the line before.
I've never had this many important things
on the line before.
Sounds to me like you need to have something ready to go
to replace this system.
Any snowflake that is in that kind of position
that you depend on that much makes me really nervous.
Honestly, we could.
Because it's all containerized.
I mean, we just start all the services somewhere else.
It's fine.
It'll be good.
What version of Fedora did this start out on, by the way?
This one, we might've been a fresh install of 29
because we reconsolidated down onto a Fedora box.
So this one was probably-
There's no ancient behemoth.
Right, but we had been for a long time upgrading
for many, many years.
We just recently decided to start fresh with a new base.
All right, we're ready.
I'm sitting here.
Okay, this is the reboot?
Yeah.
All right, let's do it, Wes.
Hit it.
All right, as I say, it's connection dropped.
Now we just wait.
Now we just wait for it to reboot.
Come on, Fedora.
This is about as on the line as it gets.
And really, it's important that this works
because with the update frequency of Fedora,
this has to work.
Come on.
Not up yet.
It's gotta do all the updates.
It's gotta bring up the console through DigitalOcean.
That's what I'm working on right now.
Okay, good.
All right.
Oh my gosh, Drew, are you totally worried
it's not gonna work right now?
I haven't ever had an experience
where DNF upgrade went horribly wrong.
Oh no.
You know it's gonna go wrong now.
You feel like we got a good shot here?
Yeah, yeah.
Yeah, you don't sound super confident, man.
It has to be better than upgrading from Ubuntu 14.04
to 16.04 where it just rips out PHP without telling you.
Not that you would know, right, Joe?
No, I wouldn't know anything about that.
No, not that I did that with a live production system
and then quickly roll back to a backup or anything.
Well, I'm glad you had a backup.
Good job on you.
That's just admin 101 right there.
Wes, you have a very, very, very serious face right now.
Well, that's just my resting serious face.
Okay, I won't body shame.
I'm sorry.
I'm just very like, I'm reading Wes's face
to try to like interpret like.
Oh, it just rebooted.
Okay, all right.
So we're just.
I'm watching, I got the console up, yeah.
Okay, good, good.
What are you seeing?
Well, just standard, you know, kernel output.
You are. Or detecting devices.
You are as calm as it gets right now.
You are not worried about this at all.
Yeah, it's fine.
I, on the other hand, am having a mild panic attack.
So that's good.
I mean, we got droplets, you know, whatever.
I can spit things out.
This is what I sound like when I'm having.
Sorry, we should have apologized
for one of the FM stream listeners, really.
Oh yeah, we just cut them all off.
This is what I sound like
when I'm having a panic attack, by the way.
I still sound like my regular self.
I'm just exploding with emotions on the inside.
Well, I'm trying to load the upload page
that I used to publish the shows and nothing yet.
Yeah, that means the containers haven't started yet.
That's for the cast a blast system.
Oh God, Wes, oh God.
Oh my God.
I mean, we've had a clean disc mount.
That's always good.
I gotta come over and look.
I gotta come over here and look, stand by.
Okay, all right.
That's just a bunch of system D,
that's just a bunch of system D air messages
on the screen right now.
I mean, they're audit log.
Oh my God.
I just broke one of our most important servers
for a stupid bit on the show.
It's probably system D SE Linux auto relabeling everything.
So just calm yourself, calm your boots.
Okay, all right, I'll go with that.
I like that Drew has legitimately gotten up
out of his seat away from the microphone
so that way he can watch.
Yeah, he's pacing watching Wes's screen right now.
Oh my gosh, Wes, I am literally about to explode.
Please tell me something here.
Oh God.
I mean, it's detecting stuff.
We've figured out we're running under KVM.
Oh God, okay.
So yeah, I mean, it looks like a normal
post upgrade boot process.
It just has a lot to do.
Yeah, surely there's plenty of things going on.
That doesn't look normal.
I've done a lot of Fedora updates.
All those system D messages don't look normal.
Well, there's a lot more system D these days.
I mean, it has taken, eaten over the entire Linux system.
It's usually just a bunch of packages getting upgraded
and then your kernel gets updated,
your grub entries get updated and it reboots.
That's usually what it is.
It's not coming up.
I think we've killed the system
and we need to acknowledge that we have just killed
our production server trying to upgrade to Fedora 30.
So about that snapshot, Wes.
We just had Fedora 30 kill our box.
I mean, we got to wait a while.
We've been here like two minutes, three minutes.
It's been a long time, dude.
And this is a digital ocean droplet
with a massive connection and a fast SSD.
I think we've killed the box.
Oh my God.
It is taking a little while.
I'll give you that.
This music is making it way more tense too though.
Wes, I think this is it.
I think we got to call it.
I think we've killed Orbital.
Yeah, and you'll just have to tune in
and see what the fallout was next episode.
Are they able to publish?
Wait and see.
Are you able to tune in?
At least we're recording this one early
so we can have it fixed by Tuesday.
Oh my gosh.
Wow.
Well, I guess we're going to have a meeting discussing
if we should continue to use Fedora in production.
Wow.
All right.
Well, there's that.
I guess we continue on.
I can't believe we just killed our server.
Should have used Silverblue.
Yeah.
Yeah, that's right.
You know what?
It's for people who like to mess with computers.
Well, on that note, we do have some pics.
We'll get to those in the post-show.
We'll do the pics in the post-show.
Post-show pics.
On that note, I think that's our Fedora 30 review
right there.
Best review ever.
And stick around in the post-show,
coming up in just a few minutes.
We've got some really good pics because it is episode 300.
And while we are breaking servers,
we have got some birthday pics for you
coming up in the post-show.
But join us, not next week,
but the week after for a live show.
We'll be back from Red Hat Summit at jblive.tv.
Go to linuxunplug.com for links,
subscribe links, contact information, and more.
We'll see you back here next Tuesday.
Well, that didn't go as we planned, did it?
Not quite.
All right, well, Wes has got a job to do.
It's doing more now.
Is it?
It's continuing on.
Yeah, there's a lot.
There's a lot.
Perhaps it'll continue on.
You just need to calm yourself, Chris.
It'll calm.
I have faith.
Okay, all right.
Well, in the meantime, how about a couple of extra bonus pics?
Some really good ones this week.
Bonus.
Post-show bonus pics.
I'm going to say it's called Buku.
What do you think?
Yeah, Buku.
Buku.
Buku.
Buku.
Buku.
Buku.
Buku.
Buku.
Buku.
Buku.
Buku.
Buku.
Buku, B-U-K-U is a freaking powerful command line bookmark manager.
It uses Python 3 and SQLite.
I like both those things.
I know, and it looks really good.
It also has Buku server, which exposes a browsable frontend for a local web server.
It can auto-import bookmarks, BukuMarks, as it were, from your browser.
or you can go out and fetch the title and the description
from a bookmarked URL from the web.
You can get started right away and it looks badass.
It is what I would say
a well-designed command line application.
Oh, hey, I'm in.
It's up.
No way.
I don't think I don't think everything started yet.
So like the upload page.
Yeah.
No upload page yet.
No upload page yet.
Okay. All right.
So the host operating systems up at the containers.
But we've got Fedora 30 cloud edition installed.
All right.
Let's see if in the next, before I'm done with the picks,
let's see if Wes can get the containers running.
Our next pick, Drew and I really liked this one.
Wes found it.
Sysctl Explorer.
So Sysctl are different means of configuring certain aspects
of the kernel at runtime.
You know, you can adjust things like in the proxies directory
and a lot of times you just don't even know what's available.
So that's where Sysctl Explorer comes in.
It is a great tool to look up the different things
that you can adjust in real time.
It's a web page to facilitate access
to the different documentation.
It's a work in progress
and it's sort of an MVP state right now,
but you can find it at sysctl-explorer.net.
Or of course we'll have a link in the show nizzles,
which are probably in your podcast player of choice.
I would imagine.
All right, Wes, one more pick to go.
How are you feeling?
Yeah, I think we're up.
No way.
Joe, Joe, can you get the page up?
I can confirm I can see the upload page.
Yeah, good job, Wes.
Damn, brah.
You got it, man, you got it.
So we have a successful Fedora 30 upgrade.
That's good.
That was a lot of fun to build the tension.
Okay, and FM stream should be coming online too.
Welcome back, radio audience.
Let's see if that happens.
Now coming to you from a Fedora 30 installation.
Nicely done, nicely done.
And our last pick is another command line application
that takes a graphical classic
and brings it to the terminal.
Termshark, a terminal user interface
for Tshark inspired by Wireshark.
So this is a beautiful, and I mean it,
beautiful terminal application to do a brilliant job
of monitoring your traffic.
Yes, of course there's TCP dump friends,
but who wants that when you can have a nice end curses
full Wireshark-like interface in your damn terminal.
That's Termshark.
It seems pretty handy.
I've only tried it like a little tiny bit, but.
Gosh, it's nice, dude.
Sometimes loading up the whole Wireshark thing
is like a lot.
Drew, did you see this?
Yeah, just looking at the GitHub page, I love this.
Because there have been so many times
where I've deployed like a Raspberry Pi
or something on a site and run a capture,
and then I've gotta go retrieve that capture,
download it locally, open it in Wireshark.
And parse it, and view it, and filter it.
But if I could go in and look directly on a terminal,
just SSH in, how cool is that?
Super cool, it's so great.
Termshark, and we'll have a link for that
in the show notes as well.
So Wes, are you giving it the old Wes Payne
once over right now?
Indeed, inspecting things.
And how's it looking so far?
How's it looking over there?
Are we?
So far, I think everything's up and running.
I gotta say, I am very, very impressed.
That deserves an eagle.
Fedora30, you once again have impressed?
Except those people that didn't hang around to the post show
don't know that.
Ha, ha, ha, ha, ha, ha, ha.
