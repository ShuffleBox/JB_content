Well, Chris, I almost lost my wallet this weekend.
Oh no, like out and about in town, downtown Seattle?
No, thankfully not.
Actually, this was out in the woods of Issaquah.
Are you kidding me?
I've been out in the woods this weekend.
So we're both out in the woods.
What happened?
Yeah, right.
It's a lovely Pacific Northwest day,
although actually it was kind of soggy,
but misty in the woods in the rain.
And all right, the dogs had suckered me
into taking them out for an adventure in the woods.
Here I am having a great time, getting very damp,
taking some pictures too.
And that's where things went awry.
I get back to the car.
I was going to go to the store, pick up a few things,
do some errands on the way back home after the walk.
And I notice I don't have my wallet.
So of course, I checked the car.
Maybe I left it in there, although I tried
to take it with me on hikes.
And I think to myself, well, I wasn't planning to do this.
Really, I looked at the small dog,
and she gilded me with those cute eyes.
And I thought, all right, all right, I better
take him to the woods today.
So it was plausible that maybe I just left the wallet at home.
I'd never brought it at all.
Right, so you realize before you make it home
that you've lost the wallet, but you've
left the woods at this point.
Oh, yeah.
No, I mean, totally.
I'm like, well, what do I do?
I don't have my wallet.
I don't know that I lost it.
So I drive home.
I search the car again.
Then I search the apartment.
Not there.
Oh, no.
By this time, it's like Sunday, getting to be evening.
We're at quite the latitude up here.
So it's getting dark early.
I basically have just enough time, I think to myself,
is this really worth it?
Is this what I'm going to do?
But I get back in the car.
I drive back to the trailhead.
And then I jog the entire route that I
went on with the dogs looking for this wallet.
And I find it.
So actually, I go right past it.
I go right past it.
I'm getting kind of depressed.
I'm like, what am I going to do when I get back to the car?
Like, I need to buy stuff.
I don't have that much gas left in my car
since I just drove back to the trail.
Oh, man.
And I remember that I took a picture at this spot.
And I think to myself, I had my wallet and my cell phone
in the same pocket.
And I back up to where I think I snapped the picture,
look to the right.
And just there, under some ferns and some leaves,
is my slightly soggier wallet.
Wow.
And it must have been just as it was getting,
I mean, you must have been close to running out of daylight.
Oh, yeah.
I mean, this was probably like 10 minutes to sunset.
My story is not as awesome.
But I got this new mobile router, this new fancy schmancy
mobile router.
And I brought it down to the studio.
And I got it set up.
And I got it all updated.
And I packed it all up.
And I took it back to the RV, which
I had strategically stashed out in the woods
on the edge of signal.
And I'm so proud of myself because I've
got this whole thing.
And I'm going to plug it in.
And I'm going to have a totally usable cell signal out
in the woods.
And look at me.
I'm such a fancy boy.
And I get it out.
I run the ethernet cable to it.
I get ready to shut down my Raspberry Pi that had been
doing the job of this thing.
And I realized I had left the power cord at the studio.
Oh.
And so I seriously, and it's more than an hour drive away.
And I seriously sat there for a solid 45 minutes
debating if I was going to drive my butt back to the studio
just for that power cord.
But ultimately, I decided just to call it a night
and have a chill night in the woods.
Hello, friends, and welcome into your weekly Linux talk show.
My name is Chris.
My name is Wes.
This episode is brought to you by Cloud Guru, the leader
in hands-on learning.
The only way to learn a new skill is by doing.
That's why ACG provides hands-on labs for Cloud Linux
servers and much more.
Get your hands cloudy at acloudguru.com.
Welcome into 3.77.
We have a great show.
Fedora 33 is out this week.
And Wes and I have been really putting it through its paces.
So we'll tell you our thoughts on that.
But we also have some really good community news.
Just some stuff.
Well, maybe not all of it's so good.
But stuff we're definitely going to chew on.
So there's a whole batch of stuff.
I apologize if it smells like pine trees and skunk.
Wes and I have been out in the woods.
Also, Wes, I apologize I set up the Soda Stream in your spot.
But it was on sale for Prime Day.
I had to get a Soda Stream.
And I just can't compete with that carbonation.
No.
No, I like seven squirts, Wes.
I like it really bubbly.
So that's why it's right there.
So if I have any burps, I apologize.
But before we get into that community news and those burps,
I want to say time-appropriate greetings to that mumble room.
Hello, Virtual Lug.
Hello.
Hello.
Hello, everybody.
It's really great to have you in there.
Rockin' 22.
We've been averaging a little higher some weeks,
around 22 some weeks.
And it ebbs and flows.
People have stuff going on in their life.
It's been getting cold out in the woods, way below freezing.
So yeah, let me tell you, it's nice to be down here
in the studio where it's warm and cozy.
And let's start by talking about Linux 5.10.
No, it's not out yet, but it's shaping up
to be a pretty impressive release.
There's a couple of things that are worth noting.
And why we're talking about it today
is it's been confirmed by Greg Kh
that this will be the next LTS kernel, which speculation had
been that it would be Linux 5.9.
But no, my friends, it is going to be 5.10,
which may be a nice thing.
Yeah, right?
Greg Kh announced this at the Linux Foundation's Open Source
Summit Europe.
And I guess, really, we're talking about it because,
once it's released stably, perhaps around mid-December,
it's going to be a kernel that hangs around for a long time
with that LTS support.
So you, I, all of us will probably
be running it for years to come.
Yeah, and Android devices in particular.
And sometimes, when it is a kernel adopted by Android,
it wouldn't be uncommon to see that support extended out
further than just a few years.
I think the other notable thing about 5.10
has to be the Bluetooth bug that we've recently heard about.
It sounds like the complete fix for that vulnerability
is going to be when you have both a BlueZ update
and a kernel update that corresponds with that.
And that particular fix is in 5.10.
So it's going to have that.
But there's also just a plethora of new hardware features
and improvement support that's in 5.10 as well.
The current LTS release, just if you're curious, is Linux 5.4.
And that is expected to be maintained
through the end of 2025.
So when you have 5.10 out there, you're
probably going to at least see it maintained until the end of 2026.
So go build your servers, your LTS distros,
and your enterprise distros, and your Android phones.
Hey, that means we can look forward
to 5.10 on our little Garage Arch server sometime soon.
Yeah, that's right.
Hopefully that takes a little while.
That'll be a dicey upgrade.
Stay tuned, audience.
Also in 5.10, just a side note, XFS is making the long play.
In 5.10, XFS has been updated with what
they call big timestamps, which means it will now support
timestamps out until 2486.
So they're going to be around for a long time.
Oh, yeah.
OK, so previously we were counting things
in seconds since 1970, as maybe you well know.
That runs out in 2038.
Seems like a long time, but 18 years, maybe not really.
But now we've got huge 64-bit nanosecond counters.
Oh, yeah.
Finally, finally.
So there's your long-term storage, or ZFS, or ButterFest.
Just not NTFS.
Do me a favor.
System76 in the news this week also with Pop!
OS 2010.
It came out at the end of last week.
There seems to be a lot of improvements
that take advantage of, like the GNOME Shell 3.38
and the underlying updates in Ubuntu 2010.
But there's also something landing in Pop! Shell
that caught my eye, and it's called stacking.
Similar to tabs in a web browser,
you can stack tiled windows on top of one another.
So you can imagine maybe a multi-tiled window.
And maybe you have a long vertical pane
on the left-hand side.
You could have your web browser there, your notes.
You could have multiple applications there.
And then you can toggle through them
with VIM shortcuts or whatnot.
It sure just keeps getting better and better.
Another one that caught my eye are floating window exceptions,
because sometimes you just have those little weird dialog boxes
that are just too small to really tile efficiently.
And now you can just add that to the exceptions list,
and they're totally exempt from tiling.
You don't have to fuss with turning it off and on.
My use case for that, so it'll be interesting to see
if I can do this, is bookmarklets for tagging
things for various shows.
Those windows always get tiled, and it scrunches everything up
for just this tiny little pop-up where I tag something
and give it a title and hit Enter.
I wonder if there's a bit, but it's spawned by the web browser.
So I wonder if I'll be able to do that.
I wonder if I'll be able to accept that.
We'll see.
Oh, if I didn't mention to the chat room,
as we're going along, do bang, suggest, and title our show,
because that's how we're going to title this thing if you
don't do it.
We can't be trusted.
No.
No, so please do help us title it.
But I want to talk about a story that is really unfortunate.
And we covered it in LAN, a lot of the details about this.
And it is the DMCA takedown of YouTube
DL, which has been removed from GitHub after a DMCA notice.
There's been some developments since Linux Action News,
including some alternative repos and an interview
with one of the original creators.
So I wanted to stop for a moment.
If you're not familiar with the story,
the Recording Association of America, Recording Industry
Association of America, the RIAA,
issued a Digital Millennium Copyright Act takedown
on YouTube DL under the grounds that it could
be used to pirate music videos off of YouTube.
And it's a bit of a spacious argument,
but I'll tell you where they're coming from on their point,
because we want to give you the both sides of it here.
So in most cases, the DMCA notices
are regarding an unauthorized distribution
of a piece of media.
That's typically how a DMCA takedown is done.
You're distributing copyrighted music or copyrighted video.
And then they will use the DMCA takedown requests
that these platforms support.
It's like a tool often that YouTube or Build or GitHub
builds.
They'll use that mechanism to use the DMCA as the grounds
to take down that copyright.
But this notice for YouTube DL is different,
because it's targeting a tool that can be used to reproduce
copyrighted media.
YouTube DL is licensed under the unlicensed license, which
is an anti-copyright license that
promises ownership of the software to the public domain.
And it is usually considered lawful to freely distribute
the software itself because of that license.
Their notice claimed that YouTube DL software
was being used to copy a couple of songs that they cited,
particularly songs that were like a Taylor Swift song
and whatnot that were in the documentation.
Yeah, some of the examples are Taylor Swift, Icona Pop,
and of course Justin Timberlake.
Maybe those aren't the best examples to have.
But at the same time, you're right.
Are we now policing if you violate some other services,
terms of service?
If you violate the JB website terms of service,
not that we have those, I don't think
we could get GitHub to take your code down.
Right, take the entire project down.
And of course, it's still widely available.
It's still widely used.
Last year, the RIAA was able to get five YouTube Ripper sites,
you could put the little URL in there,
got them removed from the Google search engine.
So one of the new developments with this story
since Linux Action News came out is Perchant News interviewed
Philip, I'm going to say, Hajemeister, Hajester.
He's the previous maintainer, Philip is.
And this is an interesting bit in the interview
that I want to call our attention to is I
think there's a broader action that's happening here.
And the RIAA takedown may only be
a function of that broader action.
Because Philip says he received a seize and desist letter
from German lawyers just a couple of weeks ago,
but notes that there's a ton of technical inaccuracies
in the letter.
They don't seem to understand that, for one,
he's no longer the maintainer.
But he can't say a lot about it because it's an ongoing issue.
Perchant News also asked, despite not being the maintainer
anymore, would he change those examples?
I would remove the test cases, he writes.
These videos were never fully downloaded anyways.
They're just automated test cases
where the test downloaded the first 10 kilobytes, which
amounts to a couple of seconds at most.
And this is certainly fair use, but the project
is fully functional without those test cases.
How about that?
It was only downloading the first 10 kilobytes.
I think that's a bit that's been overlooked.
And these are just test case examples.
They're not advocating it, but it
would have been so much better to point to some Creative
Commons content on YouTube instead of a music video.
That just, in retrospect, seems ridiculous.
But I want to say this because I think this issue has been
a little misunderstood, particularly in some
of the Linux journalism slash media space.
But YouTube DL is a tool that maybe is not properly named.
YouTube is one of many sites that this tool supports
downloading from, hundreds of hundreds of sites.
And it is a tool that this podcast
uses to give voice to open source developers
to tens of thousands of listeners.
All these events that get posted online that we clip up,
that process starts with YouTube DL.
And that is absolutely 100% fair use under the DMCA.
I use YouTube DL to back up news clips for fair use
in my unfiltered podcast every single day, every day.
And I pay YouTube a monthly subscription for premium
to just have the privilege of not seeing ads.
So ads aren't really a factor for me.
But I don't think this conversation should be about
the tool's ability to copy a Taylor Swift song
or the tool's ability to download YouTube videos
without seeing ads.
Because that conversation about ad blockers
is a much larger discussion.
And YouTube DL is really not alone in this space.
And that's a broader conversation.
And the ability to download videos from YouTube,
functionality-wise, I think it's an important tool
to back up a very relevant medium right now that
is culturally more relevant than I think we've seen
any cable platform or television platform
because it is a publishing platform for the people.
And the ability to back that up, especially in an era
when more and more is being controlled
in what you're allowed to watch and not allowed to watch
or the fact that things can be taken down
by the creators themselves after the fact,
having a tool that allows you to archive that
is pretty important.
And we have to remember this is free software.
So you can't just squash this one group of people
and claim victory because a dozen more will fork and sprout.
So we have to think about it in a broader way, too.
You know, it also makes me think it's
an important sort of statement about browser lock-in.
If you're acknowledging that you can go to YouTube
and watch this video freely, well,
why can't I use the very same sort of API calls
to interact in the same way, right?
I don't want to get to this future
where YouTube is totally locked in DRM
and you can only access it on your iPhone app.
This is a tricky thing here.
Because I don't know if this is a fair analogy to make,
but I can see a future where there
is US federally mandated encryption backdoors that
are built into products that are capable of encryption.
And I could see a similar process where application Y,
messenger application Y, doesn't support backdoor.
And so therefore, it's a security risk.
And there's some process where they issue a takedown on GitHub
because it doesn't comply with US law.
It becomes a real gray area real quick.
Because what we have here is a recording industry association
that is using music copyright law
to take down open source code on a platform owned by Microsoft.
That's the real big picture here.
And I think this is a horrible precedent that we're seeing.
The takedown functionality, it seems like it's useful.
We looked into it, and there's legitimate known open source
projects on GitHub that issue takedowns under DMCA
against projects that are maybe copying brand or something
like that.
So the takedown process itself seems
like it has some legitimacy.
But how the RIAA is using it here
really reminds me of how they've abused YouTube as well.
But now it's source code, and it matters a hell of a lot more
than cat videos.
Well, yeah.
I need to download and archive those cat videos, Chris.
Yeah.
You know?
See, as someone who's just out in the woods, man,
everything I watched recently was offline.
And for me, it's kind of a nice thing
because I can kind of download and curate
several videos from the creators that I really enjoy.
And I kind of set them aside.
And we make dinner.
And I have them all loaded locally.
And it's a thing.
And it deeply connects me to those content creators.
And the fact that I could use YouTube
to be able to facilitate that is critical in my relationship
and my continued consumption of that content creator's media.
Or maybe you're using a low power device that just
doesn't play well, this full screen video in your browser,
and you want to just play it on the command line
with something that has hardware acceleration.
I'm curious if the Mumble Room has any thoughts
on this particular takedown.
I think probably nobody would disagree that they should
probably consider a name change.
It just seems, and you can see it
in the project's social media communications.
They initially assumed it was Google
that knocked them offline because they just live
in fear of Google constantly.
And then they realized after they read it
that it was the RIAA.
You wouldn't expect it.
Co-what?
You guys are still around?
Yeah, right?
What is this, Napster you're enforcing here?
And Microsoft, I think, should try to own this.
They can distance themselves by saying this is GitHub.
But the reality is that when you bought GitHub,
you get both ends of that relationship.
Yes, right.
And that's kind of the funny part here, too,
is there's been a lot of jokes or mocking or sarcasm
around the, well, it's on GitHub, but it's also Git.
So in one sense, you can't kill it because, well, it's Git.
It's distributed inherently.
But the other side is that there's still
this problem of the defaults.
And right now, GitHub is king.
That's the place where development takes place.
That's the place where issues, discussions, documentation,
the place people go.
And it's a little tricky when it's a giant, layered-up
industry association versus a little, humble, open-source
project.
Really?
ByteBitton, you have thoughts about this.
So I had to laugh about DMCA, about someone made a pull
request towards it, an empty one.
And he did it in such a way where
he made it an empty one that, via that pull request,
you can eventually still pull the entire YouTube downloader
project because it's available through Git.
That's great.
Yeah, I mean, they have their own local copies, too.
The developers are saying, we have recent local copies.
We can obviously host it in other places.
And I can't tell if there is a similar thing we're
seeing happening here where you have,
I feel like we have this issue where it's almost
going to become a matter of survival
that you're on your own self-hosted infrastructure
if you're a project that is skirting the legalities here.
If you're in the gray area, and maybe you're not
going to enforce an encryption backdoor,
or if you are a project like YouTube DL,
you have to maybe consider that you're better off from day one
on your own infrastructure and just training your user base.
That's where you go to find us.
And I know you suffer a little bit from the social network
effect of GitHub.
And you also have to be comfortable enough with Git,
the admin side of things, have the time and the resources
to be able to stand that infrastructure up
and maintain it.
Yeah, and maybe that's an area, as a community,
we can keep improving.
I mean, it is getting easier and easier than ever
to stand up infrastructure.
So there is that aspect of it.
It's so much simpler today than it was a long time ago
that maybe that's changing.
But I wonder, I've never really taken Mastodon seriously
until recently.
And I kind of go, OK, I kind of get it.
Long term, maybe it is better to invest
in owning the infrastructure like that.
And for an open source project, something like GitHub
is just an absolute vital part of the infrastructure
for the project.
And when you think of it holistically,
you think maybe we should really be in charge of that,
even if that means asking for some funding or something
to make it possible.
And I know there's people out in the community.
I know it, that there's people out
in the community that would volunteer to help them build
that infrastructure.
I know that's true.
Because anytime we have an ask about infrastructure,
the community steps up immediately.
And I know YouTube deals probably
got a lot of very passionate fans out there
that would be willing to help it.
So we'll see.
I think this is something, I feel
like there's a bigger trend happening here.
I'm curious, Bitmux, on what your thoughts
are on the network effect versus self-hosting
and having the freedom of being in control
of your own platform.
That's exactly that.
You have to make a choice.
If you're going to take advantage of the network
effect, which is probably one of the strongest
forces in today's world in development and creation
of anything, you're going to gravitate
towards one of the major corporate supported platforms.
And right now, it's interesting.
You have a lot of binary systems.
You have Microsoft or Apple.
You have Amazon or Google.
When it comes to GitHub, you have GitHub or what?
You end up choosing.
Do you want the freedom of self-hosting it
and all of the responsibility that comes along with that?
Or do you want the advantages and the network effect
and not having the responsibility of self-hosting
of just throw it on GitHub and invite all your developer
friends to have a go at it?
Yeah, and you maybe even get more contributors potentially,
which also has a lot of net benefits for the project.
So that has to be a calculus, too.
Neil, you and I have done an extra on GitHub alternatives.
I'm sure you must have thoughts on this.
There are avenues around this.
And I think some of the things going on with the Fediverse
with Forge Fed, which is a protocol in development
to support cross-server interactions and subscriptions
and things like that to essentially build
a decentralized, federated network across Git servers.
That sort of thing, I think, will help.
And Pagar, as I talked about with you in an extra show
several months ago, there's a contributor
who's got funded effort to build an extension for Pagar
specifically to support that model.
And Pagar itself has features built in to support things
like people are forking the project
or maintaining their own clones in their own Git servers.
They can still make branches and send pull requests
to the master repo on another Pagar server.
And Pagar itself doesn't even require the other server
to be using Pagar.
It could just be a plain Git repo on HTTPS or CGit
or whatever.
And as long as the Git URL works and you can clone with it
and the branch is accessible, it can pull it.
And then you can make a remote pull request with that.
And so what I think we need to move towards for projects
is to consider that we shouldn't repeat the mistake that we,
well, we did repeat the mistake we made with SourceForge
with GitHub.
We should try to learn from that and start diversifying.
I kind of feel like it's not just source code hosting.
It's communications with the options of Matrix and Discord
and Slack and Mattermost, et cetera, et cetera, et cetera.
It's social media platforms with Mastodon versus Twitter.
It's PeerTube versus YouTube.
And I don't, maybe versus isn't the right way to put it,
but there is a common theme here amongst all of it.
And it is, and I find myself as time goes on,
again and again, like with, as I have perspective on things,
I look back and go, yeah, it's clear,
that platform was, it was like a limited ride.
And eventually you knew that ride was gonna come to an end.
And I see YouTube is very much that
and social media is very much that.
And long-term to be serious about it,
you should probably own that infrastructure yourself.
And that was really what inspired me
to go hard into Matrix.
But the onboarding has been an issue
where the commercial apps like Discord
have really nailed that.
And it's just a challenge.
It's again, the network effect.
But I also think about this.
The reason why the onboarding is so poor
is because there isn't the drive and interest,
the network effect to push people into improving this.
Like the only reason that these solutions
tend to have weaker user experiences
is that they have weaker levels of investment.
And that's because there's a weaker network effect
because there are people preferring solutions
that already are there and things like that.
And again, it's not necessarily always a bad thing
to do that.
Like I am on Twitter and Mastodon.
I prefer Twitter for the discoverability.
But on the flip side, if it's something
that I essentially care for and have to really depend on,
I really strongly consider the self-hosting avenue
simply so that I have confidence
that I don't lose my data.
I lost all of the stuff I did for Google Plus years ago.
And I recently spun up a personal Pagar
instance for my own usage.
I locked it down so nobody else can log in or do anything.
But it's useful for me for doing issue tracking, workflow
management, and storing mirrors of repos and things like that.
And so I'm doing that for my own personal usage.
And things like Pagar or even like Getty or whatever,
they're easy to set up.
They have easy documentation.
The requirements are low.
I'm running my Pagar instance on one vCPU
and with one gigabyte of RAM and OpenSUSE Elite 15.2
on Linode for basically nothing.
And it's fine.
It performs very well.
And that's the sort of thing that you should consider.
Because I think people think that the administrative efforts
are not worth it or oversized compared
to what they actually might be relative to all the other work
that they have to do.
And it's true that there's the security stuff.
But at some point, you've got to pull the trigger
and start really thinking about your project in a manner
where it's long-term accessible.
Yeah, I agree.
So we'll be keeping an eye on what happens with YouTube DL.
And I'll be thinking, I think we all
will think about this more.
And if the audience has additional thoughts
on this overall trend that we seem
to be seeing across a lot of different mediums,
I'd love to hear it, linuxunplugged.com
slash contact.
This seems like a great moment to thank Linode
for sponsoring the program, linode.com slash unplugged.
Receive a $100 60-day credit towards your new account.
I've been using them for just over two years.
And I was really impressed with how straightforward
it is to spin up infrastructure.
And we were talking about how projects have
easier and easier access to this.
Linode is a great example of this.
I started using it for myself personally.
But then when it was time for Jupiter broadcasting
to go independent, we just built out our infrastructure
on Linode.
But they started in 2003.
They were one of the first companies
in cloud computing, three years before AWS.
And they're independently owned, so you know I love that.
And they're founded on a love for Linux.
And it shows.
And I've got a great example for you.
They already have Fedora 33 up and ready to go.
It released just like a day ago.
It's already up on Linode.
How great is that?
And it really shows.
They embrace a lot of great open source technologies
to make their really awesome cloud dashboard possible.
They also support Linux and open source initiatives.
They're supporters of the Kubuntu project.
They've backed Linux Fest Northwest,
which I am super grateful for.
And now they're backing this show as we go independent.
I mean, you get it, right?
They're really into the community.
You combine that with the fact that Linode's really
just going to make it possible for anything
you want to run on Linux to just run really great in the cloud.
And if you need something for your personal website,
so you can host a portfolio, or maybe you
want a static website that's crazy fast
and you just take advantage of Linode's object storage,
they're going to make that really approachable for you.
I mean, really, if you don't have
a site for your name and a portfolio,
so when people search you, it's probably worth it.
Because otherwise, something else will take that space.
So that's something to consider.
If you're looking for a job, I think
that's probably something you should definitely do.
They start at like $5 a month.
And you can build something on there
that's just crazy fast.
And people are looking at you for a technical job.
That reflects really well on you.
I have absolutely 100% checked out
how candidates have built their website before when
I'm checking them out.
So that's something to consider as well.
So go to linode.com slash unplugged.
Sign up with a $100 60-day credit towards a new account.
That's a really great deal.
If it's meant to run on Linux, you can run it on Linode.
And you can run it really good.
And every single plan comes with their amazing human-powered
customer support.
It's really legit.
So check them out.
Linode.com slash unplugged.
Thank you to everybody who goes there just
to support the show, to let them know you heard about it here
or takes advantage of that offer, a $100 60-day credit
on a new account.
Linode.com slash unplugged.
A couple of more items for us to address.
I thought this was really fascinating
that one password is now out in beta for Linux.
And there's a lot of options in this space
already for Linux users.
Bitwarden's a popular one, of course.
We've covered it plenty on the show.
LastPass is a longtime contender on the Linux desktop.
And one password kind of comes along
at a time where there's already a lot of options.
But they seem to be really going in with full steam.
They've built an app that's written
with a back end in Rust, which we love.
They're proud to use also the, as they say,
incredible ring crypto library to power
end-to-end encryption to keep your data safe.
It looks pretty legit.
Now, before you get too excited, it's
important to remember that this is still a beta.
So expect some sharp turns and sudden drops
as you test this out.
Really, this should be used for testing and validation.
And if you want a, quote unquote,
stable experience on Linux, for now,
you should use the browser version, which I'll tell you,
Chris, that's what I've been doing.
My new day job, well, turns out they're using 1Password.
I'd only experienced the web stuff.
I had no idea this was being planned.
So I'm pretty happy about this.
And I've already got the beta installed this morning.
I think 1Password should be a sponsor on this podcast.
I'm going to say it right up front,
because I really like 1Password.
I think they have the best UI.
And this is what the company makes, right?
They're not part of a larger conglomerate.
This is what they do.
And they have a bunch of corporate users,
because over the last year or two,
they've done a ton of deals with businesses
where businesses just roll out 1Password for all their users.
I've been there, I've done that.
And the other thing they're doing
is kind of an introduction, which
I think shows maybe some insight into the community.
They say, if you work on an open source team that
needs a password manager, open a pull request in our 1Password
open source project repo, and we'll give you
and everyone on your team a free account.
I think they get it.
Well, maybe another sign of that is they're
maintaining signed apt and RPM package repositories
for Debian, Ubuntu, CentOS, Fedora, and Red Hat Enterprise
Linux, as well as the Snap Store.
Plus, if that's not enough for you, there's an app image.
Although, so far, nothing on the Flat Hub.
Now for yourself at home, listener at home,
I think you could really consider
looking at something like Bitwarden, especially
the Bitwarden Rust server that you can run yourself.
I think that's something you should definitely consider.
There's key paths as well that people
like for local password management.
But the reason why I think this is
noteworthy and why we elected to include it in the show
is this kind of is reminiscent of Active Directory getting
added to Ubuntu and having it in Fedora.
It's a way for Linux to plug in with Enterprise.
Or the teams coming to Linux, right?
Kind of the same thing.
You don't get to pick these tools.
They're chosen for you.
And that's kind of what decides if you can use your favorite
desktop or not.
Yeah, oh, and don't worry, Wes.
Yes, it is in the AUR.
I was worried.
Yeah, I know you were concerned about that.
I haven't given it a go myself.
But I guess so.
You've tried it, Wes?
Yeah.
Is it like an Electron app sitting
on top of a Rust back end?
Or is it actually a true native desktop Linux app?
Oh, you know, I didn't get that far.
I just actually tried it out for its features
and was trying to sync up with my existing vaults.
That's a good question.
It's hard to tell from the screenshot.
I can't really.
And I suppose it's fine, as long as it's not
too resource intensive.
You didn't seem to have any performance concerns,
it sounds like.
No, it started up real fast, and away we went.
They say it's this new look they're working on.
It has automatic dark mode selection
based on your GTK theme.
It also supports opening network locations,
like SSH and SMB and FTP locations.
And it will unlock your Linux user account,
including biometrics.
No way.
That's amazing.
What?
No, I got to look into that.
All right, I got to try this.
I got to try this.
That is one thing I think that's exciting,
is just looking at various password managers
over the years, it seems like people really
like one password just for their sort of response.
Very actively developed features, bug fixes,
all go out in a timely manner.
And here, yeah, it seems like they're not
trying to half-ass this Linux support.
It's not just throwing us a bone.
It seems like they really want to make it a platform
that they're willing to support.
X11 clipboard integration and clearing,
also a feature in there for auto-filling passwords.
I got to try this.
If you try this and you like it and you buy something,
you tell them Linux Unplugged sent you
and that they should sponsor this show.
I think this is great.
I really do like seeing big, well, not big,
but independent commercial apps like this
that have really found a niche and gone after it.
I really do like that about them.
So there you go.
I guess I was on the fence, but reading that they claim
you can unlock with your Linux user account,
including biometrics, I got to see that integration.
And then the X11 clipboard integration,
I'm on Wayland presently, but I got to try that too.
That sounds like some sort of Mac fancy magic right there.
I'm just not believing it until I see it.
Does look like there's some Electron happening here.
So surely some of this is written in Rust
and then they're leveraging all the handy UI elements
that Electron provides, but easy install.
I just added the app repo to give that a shot,
but I like that they have an app image.
That seems nice, especially for a machine
that maybe I'm just using for work.
Wonder what the memory usage is on that there app.
You got any data on how much that sucker's taken down?
I mean, I kind of like that the important bits
are written in Rust and then the UI bits
are written in Electron.
I can understand why they're doing that
with multi-platform support, but yeah, not too surprising.
No, nothing much.
Not really showing up on my radar here.
All right, very good.
Well then, Wes, we have a few items.
I know people have been skipping the housekeeping
because I just saw someone in the chat room
who didn't know Unfilter was back.
So don't be skipping the housekeeping.
You know, it's politicals here in the States.
It's politicals right now.
And I'm going to be live streaming the election,
which is like coming at us like a freight train
off the rails like next week at unfilter.show slash live
if you want to watch that train wreck.
I mean, you'll just be streaming nonstop, right?
That's what I assumed.
Yeah, probably for weeks.
No, I'm just going to be there for the night.
I'll make a few predictions on the stream.
You know, we'll do that kind of stuff.
We'll do live commentary.
It's really about having a social outlet
to commiserate this together.
I'll be there with you.
But you know, maybe you'd rather do the Linux thing.
I want to remind you that we do have the Luplug
every Sunday at noon Pacific, 3 p.m. Eastern.
You can see it on our calendar.
Just get the mumble client installed.
We have info for that on our website.
And then you connect to the lobby.
And I think we have kind of a special plan again,
another theme for the Luplug.
Indeed we do.
So you might remember that we had two weeks ago,
we had a talk about browsers
and that was pretty interesting discussion.
So the idea is now to continue with some kind of topic
every two or three weeks.
And next Sunday will be a topic about keyboard shortcuts,
mouse gestures, mouse button configuration
and stuff like that.
I will prepare a little talk
about how I configure my input devices.
And maybe some of you want to tell us
how they configured their keyboard and mouse.
So if you are interested into that topic,
we would love to see you in the lobby in mumble
for our Luplug next Sunday.
And there is something really special.
We might try to record that session too.
Ah, look at you guys getting fancy.
Very good.
Also a reminder, if you want to be a pro JB listener,
we do have the all shows feed.
You can upgrade to the all Jupiter broadcasting shows feed
by searching in your pod catcher of choice
or there's a link at Jupiterbroadcasting.com
and be sure to stay to the post show
because we will get a weather update with Brent
in the post show.
So you want to stick around for that,
but moving right along, extremely excited to say
that Fedora 33 is officially here.
It's Linux distro release week.
Like last week we had Ubuntu 2010.
This week we got Fedora 33.
It's like release week parties, like all around.
It's the release season.
I'm almost distro hung over at this point,
but there's enough in 33 here
that it kind of makes me excited to talk about it.
Wes and I went clean slate after last week's episode.
We went hard into 33 and I kind of just went all deep.
I think we'll start with what's new
because there's some major standout things in this release
that we've been looking forward to
and talking about for weeks.
Obviously, number one headline here is
this is the Fedora that ships to ButterFS as default.
When you install it, the default file system now is ButterFS.
And perhaps a reason to consider reinstalling this time
if you're so interested.
But seeing ButterFS finally ship
in a major Linux distribution,
I think is extremely exciting.
I think it's gotten to the point
where it's a really solid workstation
and VPS and laptop file system.
And that's exactly what they've done here
in the workstation versions of Fedora, it's ButterFS.
Yeah, I mean, we've kind of had
our own little ButterFS journey of late.
And okay, maybe things get more complicated
if you're building out your giant next NAS solution.
But I think you hit it right on the head there.
Do you want a modern file system that's maintained,
that works well and has a lot of nice features?
Well, ButterFS is it.
And having it used by Fedora, used by the folks,
the great people using Fedora,
all of the folks that that means,
that's just more people testing it
in all kinds of configurations and settings and environments.
It's just going to make everything better.
Yeah, and the reality is more and more people are on SSDs.
Well, ButterFS is the file system
that has optimizations for that.
Data compression with modern disk and modern CPUs
can provide lots of not just storage benefits,
but performance benefits, data integrity,
copy on write, snapshots,
being able to send a file system over the network.
It really is a competitive file system.
And I think it's great to see it land in Fedora
as the default.
I think it's a very bold move.
I think it's equally as bold in many ways
as Canonical deciding to ship ZFS.
But while that is fantastic,
what is really exciting about this
is not only is it the default on your root,
but this is a free file system.
I mean, this is clear and free,
totally integrated into the Linux kernel.
So it is truly just a baked in file system
that feels like it's part of Linux.
Yes, right.
No weirdness with module loading
or strange situations you have to debug
because it just doesn't feel like it's part of the system.
No DKMS concerns, right?
It's just in there and you get all those features.
And I've just really, really found it
to be a great file system for my home file servers.
But I'll tell you a little quick story.
I recently went over to Angela's house
to help her with her file server,
which is a Synology, I think.
Synology disk station, if I'm getting my, I'm not sure.
But it's the one that uses ButterFS on the file system.
And she's having some problems connecting to it.
And I figured, well, this thing is six, seven years old.
It's a really old NAS that's ran out in a garage, right?
It's not kept inside in like a perfectly
air conditioned room either.
It's kept out in a garage.
And it's been out in that garage for seven years
with spinning disks.
And I thought, oh boy, I thought I was coming over
to deliver her the bad news
that this thing is finally eating itself
because it's a version of ButterFS
that is from maybe, it's before the five series kernels.
I mean, it's from a very long time ago.
It's really old.
I've done like one or two updates to the OS
in its lifetime.
So it's got a couple of updates on there,
but it's a pretty old version of ButterFS.
A couple of updates.
Yeah.
And so I thought I was gonna have to prepare her
for the bad news that she had lost her data.
And she's not really big on cloud storage.
She likes it all local.
And I was prepared to like, I was bracing
and nothing of the sort.
It was just simply an interface issue.
There was a rogue DHCP server on the network
and the NAS for some reason had grabbed an IP from that
and didn't get its reserved address
from the proper DHCP server.
And it was a really, it was,
when I got back on that NAS and I logged into it,
I looked at the file system and every disk was online
and everything read as healthy.
I had a little bit more appreciation
for ButterFS right there,
because that's seven years of kind of neglect,
but just reliable use and keeping that data safe.
And you combine that with GNOME 3.38.
And I think what we have here is a magic version of Fedora.
33, that's a magic number.
It's pretty impressive with just these two things alone.
Nothing else really combined in the mix.
It is a close to upstream version
with a couple of small Fedora takes on it.
Maybe my favorite is they've done a clever thing
with the background where I'll kind of transition
several times during the day to a different lightning
and color.
I actually don't particularly like any
of the default Fedora experience,
the theming, the background, any of that.
So I can't really sit here and tell you that it is,
it's gonna be the slickest best GNOME Shell implementation
you're gonna find, but it is one of the purest,
which you can very quickly build on top of.
And if you are the type of Linux user
who is okay doing a little bit of that work,
a little legwork, not a lot,
probably two hours of legwork,
if you're familiar with the processes, maybe not even,
you can really hone it in.
Because I kind of like starting with a close to blank slate
and just tweaking the things in GNOME Shell that I want.
Minimal extension experience, you know?
Well, it gives you a nice sort of idea
of what it is like fresh.
You know, if you install a distro
that has a lot of customization, that might be great,
but you're never getting to try
what that stock experience might be.
I mean, you're just lower down the tree.
There's less branching off places
to try radically different things.
Well, and when you are installing extensions,
it's not a bad idea to kind of do them one at a time
and kind of get a sense for it.
Here's what Fedora does that I think is tops.
So I go to the GNOME extension site,
and of course I'm getting this crap
about needing the OS connector installed
for the extensions to work.
And I started thinking to myself, well, for God's sakes,
Fedora doesn't have that installed,
so I go to DNF, install it, and it says it's already installed.
And I sit here and I scratch my chin for a second,
and I go, hang on.
I seem to recall that they put these in the repo,
in some sense, whatever that is.
And many of the GNOME Shell extensions that I use
are in the repo.
So I don't actually have to go to the extension site,
and they get updated via DNF with my other packages,
which is brilliant.
And it's totally the way to manage GNOME Shell extensions
in a way that I think works really well and reliably.
And again, makes GNOME Shell
a little bit more workstation grade,
because the two are generally getting updated together,
if you're lucky.
And I think that's way better than going to a website
and having to remember to go update your extensions
from time to time.
Because it turns out I never do that.
No.
So I'm curious to know what your kind of early impressions
were of Fedora 33 and where you ended up with it.
Oh, I've actually been having a lot of fun.
I'd been enjoying GNOME 3.38 already,
just having played with it the past couple of weeks
since it's been out.
But you're right, there's something really fresh
about Fedora.
It was nice to spend a little time
before I really got the system invested
with all of my default applications,
and just sort of using Firefox, using default GNOME,
exploring the system.
I'm still enjoying, I installed it rather a few times,
which I'll get into later.
But it was really nice to just go through
the GNOME welcome experience.
And I'm just kind of impressed with how,
for a distribution that tests and integrates
all this great upstream open source software,
I'm getting to be really impressed
with how integrated and its own Fedora feels.
It doesn't feel like just a grab bag
of good open source projects.
It feels like a thoughtful, crafted distribution.
Yeah, I really agree with that.
It really does.
From the way the software updates are handled
and the firmware updates, to installing the extensions,
to all of that.
But additionally, it's not so buttoned down
that you can't make it your own pretty quickly
if that's your thing.
I admittedly just went and got the POP theme.
I got the POP icons, I got the POP GTK theme,
I got the auto-tiling extension.
Oh, did you?
I was thinking about that.
What was the experience like?
Because I didn't get down that road all the way.
I mean, it's great.
System76 just puts it all up on GitHub.
So, and now, and now Carl has made it even easier
to install in Fedora 33.
Yes, sir.
I packaged up the POP Shell extension.
It's available as GNOME Shell extension POP Shell
with hyphens in between.
And you can just DNF install it and start using it.
Yeah, so I pulled it off GitHub and built it
because they put the instructions
and it's really easy to do that.
But there was some TypeScript updates that had to be done.
I mean, there was some shenanigans.
So Carl just packaged it all up, makes it even easier.
And I'm a big fan of the look.
I think it makes a really great theme on Fedora 33.
Not to mention with that extension,
there's quite a few of their shortcuts
that conflict with default GNOME shortcuts.
And I had that all handled with G Schema overrides
in the package that you'd have to figure out
those conflicts yourself if you were manually installing it.
That's great.
That's so great.
So I did, you know, I had to do it the hard way,
but now you could do it the easy way.
And that sort of started to complete my experience.
I was impressed too that the flat packs I installed,
they seem to launch fast and adopt the theme that I'm using,
which I'm really grateful for.
So all that just worked really well.
And I was on a Pure Wayland session
because I'm doing this all on Intel hardware
and I found performance to be exceptional.
And it's noticeable now that I can do things
that I couldn't do in Wayland.
My monitor management is sticking,
which is a huge win for me.
If you guys have listened to this show for a while,
you know I've really struggled with my two verticals
and a center monitor setup.
It hasn't been a non-issue using a Thunderbolt dock
hooked up to a laptop running Fedora 33 on Wayland.
It has worked, hallelujah.
And additionally, I have found that performance
has been even better than I got on X.
Videos don't tear, games are playing just fine,
even though they're X Wayland.
It's really good, even with multi-monitors,
which I was concerned about.
I was concerned about a performance hit
with Wayland and multiple monitors,
but it is not so far bared out.
And I'll say lastly, I can tell the functionality's
really gotten there.
I can take screenshots of various applications
and then I can copy and paste them into other applications
and all of that is working.
There's a couple like Shudder,
there's a couple apps that I used to use
that don't work with Wayland,
but for the most part, if you use the built-in tools,
it's brilliant now, Wes, and they all look really good.
It's almost to the point, I mean, okay, yes,
there's all kinds of weird little niche cases
if you're pushing things,
but it feels like it's to the point where I kind of forgot
that I was using Wayland and not X,
at least for my, especially for like my use case
of just using it for work as an actual workstation,
not as a streaming or a test machine.
Yeah, I'll add this into the mix too.
Fedora 33 is the first distro to pioneer Nano
as one of the default text editors as far as I'm aware,
and I think that's a groundbreaking feature, right?
Oh, you would.
And so Nano, by doing so,
makes Fedora accessible to humans,
and now clearly is an easy distribution
to recommend to beginners because Nano.
Also, those of you on the plasma side of Fedora
will be getting early out of memory manager
that was shipped last version,
but was on the GNOME side of the thing,
of the distro, I guess,
and now it's on the plasma side of the distro
if you get the plasma spin.
So that's kind of nice,
and you also get swap on ZRAM by default now,
which should help with performance as well.
Yeah, I noticed that.
Isn't that fancy?
Yeah.
There's one notable other addition
to the Fedora family now in 33, right?
And that's Fedora IoT is now an official edition.
So that's kind of fun if you're out there
potentially building something
that could be in this ecosystem.
It's now a actual official edition,
which I think is just fantastic.
But here's my final sell on Fedora 33.
And this is where I think it is really nailing it right now.
If you are using Arch, by the way,
if you're an Arch user,
and maybe it hasn't been just quite perfect,
if you're a happy Arch user and you're loving it
and you have no concerns at all,
I'm not talking to you.
But if you're an Arch user
and maybe you got bit once or twice,
or you're concerned about it,
a little more rocky than rolling.
Yeah, perhaps you should give Fedora a serious thought
because it sits in this real nice nexus
of close to upstream like Arch is,
really fresh packages,
like you're gonna get new kernel versions
during the lifespan of Fedora.
It's really easy to jump over
to even the raw hide version if you like,
but just with the current version,
you're gonna stay pretty fresh.
But major user land changes,
like changing your version of Plasma or GNOME Shell,
those are done at official versions, like 33.
And you can plan for that.
And you can essentially rely,
in a world where your extensions come from your repo,
and a lot of your applications
are coming from Flat Hub and Flatpaks,
you would be surprised at the success rate you'll have
at doing upgrades, even relatively soon around release.
It really is rock solid.
And so what you have here is a distribution maintained
by a major player in the space.
You have a fairly frequently updated base
with a stable user land that gets updated
to the latest and greatest at every major release
with a package management system
that makes it really practical to actually do all of this.
It's not hard to maintain.
You don't have to be on this rocky rollercoaster of a ride,
but you still get that really sweet nexus
of fresh software, well-supported upstream,
and a wide variety of packages to choose from,
industry support, and also a growing community.
I mean, there's a lot of positives here.
I'm not trying to convince anybody
to switch off of their beloved distro,
but if this sounds like this appeals to you,
I think Fedora 33 could be a serious contender for you.
I can still have my Colonel Hipster dreams.
Fedora 33 gets the stamp of approval from Linux Unplugged.
I'm really loving it.
I had to make it my own to get it there,
but I have no problem doing that.
But it's worth that little bit of investment, I think.
Yeah, okay, maybe it comes a little raw,
unconfigured, perhaps, but it's just built
on such a solid foundation.
And you're right, you're no longer waiting
for software to become available.
Pretty much everything just works.
You can go grab whatever you need.
Feels like you can get, finally,
and this has been true for the past few releases, really,
but it's this happy marriage of, okay,
well, there's probably an RPM that works if you need that,
and of course, a million other ways to get your software.
And you get all the great systems and architecture work
that the Fedora team brings in
and makes the new future of Linux.
I think one of the things that's really changed for Fedora,
from Chris' reviews of the past
where I really struggled with Fedora,
like in the teens, in their early 20s of Fedora releases,
is you didn't have mechanisms like Copper and FlatHub.
And so when you add in the rather expansive now repositories
of Fedora to begin with,
then you add in FlatHub and you add in Copper,
you can pretty much get anything you want.
And AppImage, of course, and Snap's available as well.
You could just install Snap on Fedora.
There's nothing stopping you.
So there's really the software availability
has kind of gone by the wayside.
And the kernel maturity and the desktop environment maturity
is just always a default win for Fedora.
So, you know, while we get here,
when Ubuntu comes out first,
we'll often go through the list of features in 5.8,
and we'll go through the list of features in Gnome Shell.
Of course, Fedora has all those as well.
So it's a very compelling release.
And I think it's, for now, an easy recommend.
And you also get a chance to play with ButterFS,
which, Wes, you put in the doc, and I missed it earlier.
You have a crazy way to run ButterFS from RAM.
Yeah, well, so this is nice.
You know, I like to test out distros sometimes,
run them straight from RAM, and Kexec in there,
just as I get to play with, you know,
it's like the benefits of a virtual machine
where it has a whole disk.
I can try out the default automatic partitioning
and see what happens there.
But I can also just blow it away and try again
if I want to do things differently.
What's nice about having ButterFS installed there
is I can kind of make it work a little nicer
in a hybrid approach,
because I've got everything on ButterFS,
and I actually just sort of changed my setup
to put boot on ButterFS too,
because I'm a madman like that.
But what that meant is, here's my OS running in RAM.
ButterFS has these awesome copy-on-write snapshots, though.
So I take a snapshot,
send that snapshot back to disk as a backup, right?
So in case my computer breaks,
or, you know, of course, these things that I run on RAM,
they're on a UPS, all those normal things.
But in the event of a power failure
or a kernel panic or whatever, think that off.
And then anytime I do updates or system changes
on the system partition,
all I have to do is take advantage of that snapshot diff
and only send the diff,
and I can keep a nice on-disk backup
that I don't ever actually run.
But if I need to, I can take that,
restore it back into memory,
and have a full, fast RAM disk on my computer
system ready to go.
You know, you are just a few short tricks away
from like a bulletproof segment here of,
I'm already seeing it now,
Wes Payne's run your whole system from RAM safely segment.
And then for just extra fun,
we'll say do it as root the entire time as well.
Because why not?
Coming up on a future episode of Linux Unplugged,
Wes loses all his files.
I want to say thank you
to our Unplugged Core contributors, unpluggedcore.com.
You're helping keep Linux Unplugged independent.
And that is appreciated,
not just by your humble hosts here,
but by the listeners of this podcast.
It's a crew of you out there that make that possible.
And you also help reduce the ad load needed.
And we can be a little pickier
about who we choose to make the show profitable.
You also get some perks.
When you become a core contributor,
you get access to two feeds, your choice.
Well, I shouldn't say that
because you could actually do both if you're a maniac,
but feed one is a limited ad version of the show.
Same full production, Joe's touches on there,
just limited ads.
The ones that we contractually obligated are in there,
but going forward with sponsors,
we set them up and we kind of divvy it all up
so that way the shows can be limited in ads for that feed.
And that means if you're not a big fan of the ads,
you get the same great production quality
just without those.
But they're his feed two.
Oh boy.
Now this is nothing like feed one.
Feed two is a mess.
It's horrible.
You wouldn't listen to it.
I encourage you never download feed two.
I kid, but it's the full live stream,
which means anytime we have a screw up
or a pause in the show or anything that's a blemish,
it's still in there.
If we caught something that we would technically have pulled
because maybe we said something that's inaccurate,
we would cut it.
But that, it's all in there.
All the screw ups, full transparency,
but you also get with that a lot more show.
You get all the stuff that maybe gets cut
because we didn't have time,
but you get the pre-show,
which is generally quite a bit of show.
And you get the post-show that is a lot more
than whatever gets released in the public version.
So it's, there's some perks to feed two.
And if you got a long commute, it's pretty great for you.
And it's just a way of saying thank you
for supporting the show.
Unpluggedcore.com.
You can become a core contributor of this here podcast.
Keep us going, keep us independent,
and you get a few perks.
Emails coming into the show.
Francis writes,
hi, in the last episode of Linux Unplugged 376,
you had someone on from System76
to talk about the Thaleo Mega.
As much as I'm a fan of both System76 and Linux Unplugged,
I have issues with not disclosing the fact
that System76 sponsors one of your other shows,
which is Linux Action News.
He says, I know that you have interviewed people
from System76 previously,
and I don't think those interviews were appropriate,
but I feel that there's at least
a perceived conflict of interest.
It just made me uncomfortable listening to the interview
with you not first putting a disclaimer
about your business relationship with System76.
Thanks for your understanding.
Love the shows.
Francis.
Yeah, I knew when I talked about Pop2 is like,
it's awkward because they do sponsor LAN.
They don't sponsor this show,
and I haven't offered this show to System76
because, well, I am not really concerned
about it impacting what I would comment on.
I am concerned about the perception of it.
And so if we talk about something in this show,
it's because we wanna talk about it.
Nobody asks us to talk about it.
It's our choice and our decision.
And I have had a, you guys, if you listen to the show,
I mean, I've had no problem holding back.
Like I went all in on criticism for Pop when it came out.
And the thing about System76 and I,
and really NetJB as a whole,
is our relationship spans like 13 years now, almost.
I was literally one of their first public customers.
So it's kind of beyond, it's beyond like one ad deal.
So one ad deal doesn't really influence
what I say or don't say.
It doesn't hold back my criticism.
That's just how I roll.
That's one of the benefits of me being independent.
But I totally get the perception
and the concern of conflict there.
And so what I always do is if they're an actual sponsor
in that show, I disclose it.
If it's something like that would be like,
say there was some sort of paid promotion,
a paid thing like that, I would 100% always disclose it.
If you don't hear me disclose it,
my general default is just because we chose to do it.
I asked to have her on, I wanted to know about it.
I think System76 is extremely interesting
from a Linux ecosystem perspective
because they have been around for so long.
They've been through the Unity years,
the transition to GNOME,
now they're making their own products more and more.
And I think it's a really interesting,
just bellwether in general for the Linux desktop,
for Linux in business, Linux in education.
So to me, they're a fascinating subject
to follow on that level.
But because they are so relevant,
I also feel like they do make for a great sponsor
because they fit in that nexus of interest
with our audience, a company I know well and believe in,
which means I've vetted them extremely thoroughly.
And they have a legitimate message to get out
that I think is, it's a good product.
So they really, they sit in that kind of sweet spot there.
But we will, as we begin picking on sponsors
and stuff like that, this is kind of new again for us,
we will try to be really receptive to this kind of feedback
because it's, I want to get it right for you guys
and I've got no reason not to be fully upfront with you.
So this is something we will try to learn from
and try to make sure we get right.
And if somebody has some sort of like business relationship
with us that could be perceived as influence,
we'll try to disclose it.
I kind of started playing with that
when we talked about POP,
because I knew there was like,
there's something there about it,
but I don't really have like the words for it yet.
It's like, yeah, they sponsor Linux Action News,
but my thoughts about POP are still my own,
but I don't know how to cover it,
but it's something we're thinking about.
And Francis, I appreciate that kind of feedback.
Wes, do you have like thoughts on, I don't know,
lessons learned, what we could do differently?
No, I mean, I think you're right.
It is a little bit of a strange bundle
in that they are a little closer
than maybe some other sponsors or relationships
and that you've been a customer,
we've gone to events with them, we see them a lot
and know a lot of the folks personally,
but you are right that I think we try
to keep things separate.
And Francis has a great point that
even if we feel these ways internally,
it can only help to make that more transparent
or as transparent as we can be that yes,
we know these folks,
kind of goes with a lot of the projects
where especially over the years,
you reporting on them, following them,
sending emails asking for,
hey, can you clarify these things?
You just develop these relationships
and it's important to make sure the audience knows that
yes, you have those, but you're still gonna say
whatever you want.
Yeah, and I think I really,
I gained more respect for them too
when I really shit on Pop OS.
And they, you know, they didn't like,
I'm sure they didn't like it.
Constructive criticism?
Yeah, like, yeah.
And I admit that I was wrong.
I think it's actually pretty great.
And here I am running the pop theme now on Fedora.
Kat writes in, hi, Chris and Wes.
Why don't we as a community acknowledge
the freaking amazing level of technical support we get
with our software for free?
This week I had a great displeasure
to contact a certain commercial vendor
about a technical issue in their product,
which we paid a lot of money to use.
I couldn't get in touch with any qualified personnel
who could actually understand the problem we were having,
let alone fix it, and had to give up
and debug the issue myself.
Oh, I guess we're not spending enough millions
to be able to have direct lifeline
to whoever is actually writing the product.
This got me thinking about the level of support
we've seen on the Linux kernel mailing list
and so many other places so many times.
It's very easy to get in touch directly with the developers
and who are generally relatively eager to help.
And he has an example, he says,
some guy posted about a hard drive which crapped itself
and totally broke and broke his ButterFest file system.
Okay.
And he says that the ButterFest developer
and a SUSE employee actually responded in a few hours
by writing a custom recovery tool
specifically for this individual's problem.
Isn't that just great, he says.
If this were a commercial project,
you'd have to shell out millions each year
to be able to have that kind of support.
And it's more of the norm than it is the exception.
He says, by the way, you have listeners
even in remote places like Central Asia,
love the show, keep it up.
That is such a great point
and one that I think can also contribute
to developer burnout,
but it is such a level of transparency.
It's one of the reasons I think Wes and I
like covering this space
is because you can actually go to the mailing list.
And a lot of times for a lot of the things we talk about,
especially with Linux Action News, we just email them.
Yeah, right, there's no secrets.
The development's happening out in the open.
The discussion is often out in the open.
And yeah, once you're pushing these commits out there,
it's not that big of a leap
to actually just start conversing with folks.
Oh man, Marty writes in with some feedback
that I was just thinking about on the drive in
from the woods today about how I wanna set up
a local AD Active Directory server
and I wanna try getting an Ubuntu box
and a Fedora 33 box to both plug into it.
I think that'd be pretty cool.
So Marty writes, I was listening to episode 376
and you mentioned Active Directory support
in Ubuntu 2010 and the forthcoming Fedora 33.
I'm a small time Fedora developer,
but I run several different Linux distros,
have for a long time and I run free IPA in my home lab.
And it's remarkably easy to set up.
The best thing about it is that it's available
for my clients and there's clients
in all the major Linux distros as well.
Single sign on reality is here.
Free IPA uses the underlying bits of 389 for LDAP,
MITKRB5 for Kerberos and dog tag for certs.
It's ridiculously simple to get up and running
and get clients joined to it.
It's very convenient.
It also bundles in an LDAP enabled bind,
which allows clients and servers
to both get their own Kerberos secured DNS updates
and do dynamic addressing.
That's pretty great.
He says, I even do domain replication
pretty easily in free IPA.
I run a multi-master on my home lab.
I think it'd be really worthwhile for you to check it out.
Well, hot dang Marty.
I think that seals the deal.
I think that puts it on the project list right there.
Thank you everybody for writing in.
Love the feedback, linuxunplug.com slash contact.
Anything we've talked about
or anything you think we should talk about.
You wanna get something in front of us,
that's where you go.
And last but not least this week,
we have a pic for you that's rather topical.
And it's called Annie,
the fast and simple and clean video downloader.
And you gave it a go this morning, Wes.
I sure did.
You know, it's written in go.
Pluses and minuses, depending on what you think there.
But it did mean that there was a simple little static binary
I could go download and run.
Hey, that's pretty convenient
if you don't wanna go install things somehow else.
Although there are downsides.
But it was super easy to get started.
And honestly, it had some really nice output.
You know, it used the terminal display really well.
Great integrated progress bars.
And as much as I love me some YouTube DL,
there's kind of a lot going on
when it's printing all this information.
And Annie felt a little bit cleaner.
Yep.
I think the flip side here is Annie's definitely younger
and not nearly as full featured as YouTube DL.
I mean, if you've ever looked at the YouTube DL man page
or just the long help options,
can do just about everything.
Annie, it's a little more bare bones.
Yeah, I agree with you though.
I gave it a spin.
I do like the output.
It's gonna require you have FFmpeg installed,
but I'm guessing you already have that.
And it's quick.
I think it launches and downloads faster.
Yeah, you know, also it integrates with the tool
I tend to use sometimes for downloading things, ARIA 2.
Now, if you go that route,
you do have to merge the resulting multi-part files yourself.
But hey, FFmpeg's there anyway.
That's right.
Yep, it's a thing of beauty.
So if you're jonesing for a YouTube DL alternative
and YouTube is the primary use case,
which actually isn't for me, check out Annie.
We'll have a link in the show notes.
It's hosted up on GitHub for now.
Geez.
Also, I encourage you to join us live next week.
Join our mumble room, join our chat room,
or just stream along over at jblive.tv.
We do this noon, Pacific, 3 p.m. Eastern.
See you next week.
Same bad time, same bad station.
And of course, there is that virtual lug
happening on Sunday.
You get your mumble client set up for that
and then you might as well come by Tuesday.
Don't miss it.
And now go try out Fedora 33.
Let us know how it went.
Don't forget, you can also join our Telegram group
if you want to join the conversation after the show.
That's at jupiterbroadcasting.com slash Telegram.
People are chatting in there 24 seven
and it gets pretty geeky.
So go get that.
The show is at Linux Unplugged,
at Linux Unplugged on Twitter, the network's at JupiterSignal.
I'm at Chris LAS.
And check out Wes Payne now on Linux Action News.
Woo, woo, yeah, woo.
Coming up in your feeds.
See you back here next Tuesday.
I'll see you back here next Tuesday.
All right, Brent is here with the report.
Brent, is it snowing in Canada?
Yes, today in the weather it might be cold
for some of us outside, but it's always warm here
in the Jupiter Broadcasting Mumble Room.
There you go.
There you go.
If you do get cold, you can snuggle up close to Brent.
Works great.
Thank you for the update.
You're welcome.
I'll be back to you.
