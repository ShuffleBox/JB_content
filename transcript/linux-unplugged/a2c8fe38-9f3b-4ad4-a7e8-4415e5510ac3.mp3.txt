Wes, it actually happened? We all made it to Denver.
I wasn't sure we would.
I wasn't sure you would actually, ya terrorist.
What happened? You got held up in security.
Oh boy, yes, it was an early flight,
let's say boarding at 4.35 a.m.
I get to the airport, I'm walking to my gate,
I got a TSA pre-check, not too worried,
except I see a giant crowd.
Uh-oh.
I did not budget for this.
Not at four in the morning.
No, right, I checked the app and it said there was no line
like five minutes or less, okay.
Okay, no, no, that's just a bunch of international people
waiting for their own flight,
and for whatever reason, the security check
is passed all of these people with their bags.
I'm going through lines, going through,
and I decided to bring a microphone.
You know, we did the show.
Yep.
We needed to do the show.
Are we using that mic right now?
I'm using that mic right now.
Okay, all right, so it may have been worth it.
I got it through.
I anticipated knowing from your experiences
that there was gonna be a little bit of trouble
with the old TSA and their scanners.
It just happens that the RE320
kind of looks like a pipe bomb on the x-ray.
So here I am thinking about that.
You know, I know that's totally fine.
So I expect this.
I see them start looking at my bag
and I hear them debating.
Like one of them thinks part of the stand
is an extendable baton.
So they're kind of debating,
but another of the TSA agents thinks,
no, no, that's a microphone, that's a microphone.
So they're like betting each other.
Yeah, and then they come over to grab the bag
and I'm like, yeah, yeah, it's a microphone.
She's like, oh, I knew it.
Tells me, you know, you gotta wait for your other bags.
I'll be over here looking for things.
Now, I knew this might happen.
So the microphone right at the top of my bag.
Oh, good thinking.
Turns out though, they're also very interested
in the very dense pieces of the stand.
I didn't think about that.
They're just dumb pieces of metal, right?
There's no complicated electronics.
There's no electronics at all.
All right, so they're rooting around.
I see she's kind of looking through my bags
and eventually gets to the bottom
where the big, heavy base of the stand is,
pulls that out, checks it.
I thought that'd be it, but no,
she keeps looking, keeps looking.
And that's because there's this little extended bit
that actually joins from the microphone to the stand part.
I mean, it is the stand, right?
But what could it be?
It looks so weird on the x-ray.
And I'm trying to be helpful.
Oh, I think I rolled that up.
I think I rolled that up in a shirt.
And she's like, oh, okay.
You know, she offers me to come closer
and like, you know, help look for this thing.
She gets a look of confidence.
Oh, I think I found it.
She reaches in to pull it up.
It's wrapped in my underwear.
Hello friends.
And welcome to your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Wes.
Yes, we are live from a very toasty sound booth
at System76 in Denver, Colorado.
And we have a very special show coming up for you today.
Old and new friends are joining us here in the booth
to chat about various different things.
It's gonna be a great show.
I can't wait to get into it.
I wanna say thank you to a Cloud Guru
for sponsoring this episode.
They are the leader in learning for the cloud, Linux,
and other modern tech skills.
Hundreds of courses and thousands of hands-on labs.
Get certified, get hired, get learning at acloudguru.com.
Yeah, so just like we said, coming up on the show today,
it's a totally different format.
We made the trek out here
and we're gonna chat with our friends about all of that.
There is so much to get into
that we're gonna kinda do this a little bit differently.
So right here at the top,
I wanna say thank you to our friends at Linode,
at linode.com slash unplugged.
You go there to get $100 in 60-day credit
on your new account and you also support the show.
It's a way of letting Linode know,
hey, I heard about this here service
on that Linux Unplugged podcast.
That was worth your time.
That was worth your efforts to sponsor them.
So we appreciate you doing that as well.
Linode is our hosting provider as well,
so we enthusiastically recommend them.
Everything we've built in the last couple of years
has been on Linode.
And this week, right now as we are here,
marks the very prime moment in negotiations
before Jupiter Broadcasting with Independent.
We are one week away from the year anniversary
and Linode was one of the very first companies on board
helping us go independent.
When I contacted them,
they were enthusiastic about joining us
and that has held true the entire time.
When I reached out to them
and started brainstorming about this road trip,
I expected to really kind of have to convince them
of the value and they were 100% on board.
They got designers involved, they got web people involved,
they got people on their marketing crew involved
so we can do giveaways and all kinds of stuff.
They really enthusiastically embraced the community
and that's because they started there.
In 2003, they got into cloud computing
before it was called that because they saw the features
that were landing in Linux itself.
They were developers, they were geeks using this stuff
and they realized there was a way to build out Linux at scale
like nobody had done before.
Now, you flash forward 18 years later,
yeah, yeah, Linode's old enough to vote now,
you fast forward 18 years and they have refined
and focused that strategy to a T.
It is so impressive what they can do
between the dashboard, the performance,
11 data centers around the world
and they have a lot of options for those of you
who maybe have never set up a server before.
One click deployments from their marketplace,
easy tutorials and guides and they're always working
with people out in the community to create videos
and tutorials to help you as well.
But you have to get started, you have to go try it yourself,
you have to see it with your own eyeballs.
Go hook your peepers on it by going to linode.com
slash unplugged, get that $100 for your new account
and try this stuff out.
That's how you learn, that's how you experience something,
go build something, go try something,
maybe go performance test your network
because they've got crazy fast servers
and you can really, really push things.
There's a lot of ways and a lot of different companies
to host something, there's a thousand options out there.
But Linode strikes the balance between performance,
price, the best customer service out there
and their community support.
So go shop local, support the show
and go to linode.com slash unplugged.
Well, I just arrived in Denver today,
but Brent, you've been journeying with Chris
and really the whole clan this entire time.
I think you need to catch me up.
Where do we start, Chris?
Well, you're Uncle Brent now.
Well, that's true, I think just yesterday,
Levi confirmed that status.
I've been sleeping on the sofa in Lady Jupiter, the RV,
and yesterday I wasn't there
and Levi wouldn't have any of it.
Yeah, he noticed, he protested,
he was searching the whole RV nonstop.
I mean, Brent's been with us for 2,000 miles,
about I think a little over.
How many states is that?
Something like that.
So we didn't count, but I went to a bunch of states
that I didn't realize we were going to be going through.
One of those was Wyoming, which was beautiful.
I really appreciate that.
We kind of cruised through most of the,
I guess, southern part of Wyoming
and then we ended up in Nebraska as well
and I had no idea we were gonna end up there,
so I've added that to my list of experiences
and we found a beautiful spot to stay there
and watch the stars and the sunset.
It was your first time to Utah as well, right?
You're right.
Yeah, so we've done Idaho, Oregon, Utah, Wyoming,
and Nebraska.
Washington.
Of course, Washington, and then we came down
Highway 76 into Denver, which was rough as hell
on the rig, really bad.
I mean, that must be a big new part of this.
Obviously, Brent, you kind of travel all over.
Who knows where you are at any one point,
but I don't know if you've traveled exactly this way before.
I have not, and I will say it's my first
sort of somewhat cross-America road trip.
Typically, I'm sort of jetting in somewhere
and having all these great experiences,
but this time, the trip was the experience.
This time, you saw the real America, didn't you?
Yeah.
Hot holes and all.
The stuff that's outside the cities
that just goes on and on and on forever,
and we had different challenges to solve along the way,
generally related to the temperature.
That was always intense,
and Brent just became part of the crew.
We just kind of, we treat it like a low-key submarine
kind of earth vessel is what we do,
because when those slides are in, it's a tight space.
Pressurizing.
Yeah, and there's things, there's certain operations
to cool things down,
and just even moving through the hallway in the RV
is kind of a system you have to adopt.
Yeah, really.
I mean, okay, so there's the adults,
but then there's the children and the dog,
and they're kind of all climbing all over the place.
And we're trying to do the shows on the road,
which Brent was able to join me for a couple of them
and watch me scramble to get technical problems solved
at the last minute.
Oh, yes, that guest appearance
in the most recent self-hosted.
Yep, yep, yep.
So what, I don't know, Brent,
what's your big takeaway from the trip?
Is this a crazy way to get to places and do shows?
Because in some ways, it's kind of torture.
I mean, in some ways, it's very enjoyable.
I think it's a big balance.
The number one thing that stands out for me, actually,
I think would be how wonderful your family is.
I'm just gonna put that out there.
Aw, geez.
You know, I knew that before, but now I really feel that.
Gonna make me blush, Brent.
No.
Blush on a podcast.
But it's true.
You were kind to say, hey, my kids are coming on the trip
now, are you sure you still wanna,
it's okay if you can back out?
And I thought, no, no, this is gonna be great.
And it's even been better than I've expected.
Aw, that's nice to hear.
I mean, the kids love you.
Which kid are you taking back with you?
Levi.
Yeah, no kidding, right?
I think some of my favorite moments
were watching you fight with the kids in the pool.
Pool battles for hours.
I think I lost that one.
Everybody does, we all lose.
And then there was the pool noodle battle
out at the golf course.
Well, there was no pool at the golf course,
so we just made it work.
Yeah, just the noodles.
That was a lot of fun.
And it was great to have you on board
to help solve problems as they came up.
Of course, we had all kinds of little challenges
here and there.
And that really, I think, is the quintessential thing
about a road trip is the bad moments actually matter, too,
because that's when we kind of come together
and have to problem solve and get outside our comfort zone.
And that happens both with relationships
in an emotional way, but also in a technical way.
And then we're problem solving driving, too.
You and I were tandem driving, so you were chasing us.
And we're solving traffic issues,
and we're solving all those kinds of problems
at the same time, too.
And that's a fun way to drive, especially
if you enjoy driving.
It's a different kind of driving that you don't normally
get to do where you're driving in twos, basically, in pairs.
I mean, yeah, you're a team, and you're
sort of actively scouting out and reacting to a new area
you've never been to.
And there was some times where Brent would scout for us
or that kind of stuff.
It was great.
I was taking possession of lanes, as well,
because I could tell, oh, I know we're
going to need to do this soon.
And I knew.
I would look in my mirror and see
you getting over preemptively from, attaboy, Brent.
Yeah, because I could tell you need some space in that thing.
You do, don't you?
Man, so now we part ways here in Denver.
It's an adjustment, because Brent's no longer on board.
You're losing one of your own.
Yeah, and the family is having to adjust to it.
The kids don't like it.
Levi doesn't like it.
There's just always like, thank god.
There's always that sense of loss.
You have to acknowledge the change in your crew.
Yeah, yeah.
And it was fun, because Brent and I, we
recorded recaps and clips along the way of the trip
while memories were fresh.
And then we would organize and store those up
on our Nextcloud instance.
And so we're going to put together, after the trip,
a couple of episodes of the experience itself,
the best and worst moments.
And there are some.
Yeah, I think we're going to do some technical highlights,
some of the equipment.
Some of the tech we used for the trip and all of that.
So that'll all be coming pretty soon.
And we'll have more information about the feeds for that
and all of that.
But Brent, it's going to be sad to see you go.
I'm glad we still have a few days in Denver before we part
our ways.
It's true.
I think I might see you in Colorado Springs at some point
before you head south, right?
Yep.
Then I head down after Colorado Springs.
We're going to leave Denver.
We'll do another round of shows from Colorado Springs
and do some micro meetups there.
And then I'm off to Tucson, kind of off the books,
to go get Lady Joops' slide finally fixed.
Oh, that's the other thing.
Oh, yeah.
Brent had to do this entire trip with the entire family
with a broken living room slide.
We didn't have a living room slide.
This is the first time I saw it this morning.
And I'm used to seeing Joops in her full glory slides out,
you know, set up to party.
Tight.
It's, yeah, it's a bit different.
It's tight.
It's, you know, it's the-
Your living room is gone.
Yeah.
Yeah, the whole room is gone.
And when you have an extra person on board,
you kind of need that.
So congratulations to you for not only surviving,
but thriving on the road trip.
Well, thank you.
It was such a treat to be a part of it.
Mr. Cheese Bacon, welcome back to the show, buddy.
Hey, thanks for having me, guys.
It's great to be back here.
And now an employee at System 76.
Yeah.
So that's pretty great.
Yeah, really, we're back here.
Yeah.
Yeah, it's kind of awesome that the first time we got
to come back in two years, you're now here.
And, you know, we get to hang out.
Yeah, absolutely.
Well, it's great to see you guys,
you know, especially after the pandemic and everything.
And, you know, the stress and things
that go around when, you know, go on when you can't kind of
cohabitate and meet space together.
So it's finally nice to be back together all
vaxxed up and sitting in this hot box.
And having fun, though.
Having a lot of fun.
Yeah, after this, we're going to all run over
to the JB AirBB.
And, you know, I don't know what's going to happen.
Probably something crazy like naps.
Naps?
I think a big cuddle puddle in the living room, right?
Yeah, that's possible.
I think first, there's going to be lunch.
Yes.
So lunch, and then likely naps after lunch.
Yeah.
Especially if it's a high carb lunch.
Maybe we get some brats for lunch.
I mean, that's the thing, when you visit a place
and if there's a cheese bacon there,
you're going to find some tasty eats.
Yeah, you know cheese is making sure, like, we only
go to the good places to eat.
So.
But I'm new here, so I can make no promises.
I know, you've tried a few places.
Yeah, a few.
You and I were chatting yesterday, though,
about how things have really changed
in how you troubleshoot and look things up on Linux.
Not to sound old, but when a lot of us started using Linux,
the only way you could look something up
was really the man page.
Right.
And you kind of had on system documentation.
And that was like this resource that was invaluable.
And today, more and more, you see things like flat packs
and snaps and other software projects that just
don't even bother with man pages or update them at all.
And the on system local manual that
doesn't require an internet connection
is starting to slowly become either un-maintained or even
just a thing of the past, depending on how
the software is distributed.
And I'm wondering how that sits with you guys,
because it struck me as maybe we're losing something here.
For me, too, it kind of started with a physical book, right?
Before I knew how to use man pages,
whatever distro that you purchased
came with a manual that you could then
learn how to use man to look up other tools and information
on other tools, but also gave you a little bit of insight,
maybe a little more in-depth information
than just a man page would give you, like man pages.
You're going to say, TAC-T is this vague thing.
And you're like, well, what is that vague thing?
And back in the day when you were looking up man pages
and stuff like that, it was a little bit more difficult
because if you did try to ask that question, like, hey, guys,
what is TAC-T?
Can somebody kind of spell that out?
Can somebody kind of give me a little bit more detail
on what this is?
So the majority of the time, you get RTFM.
And I'm like, I'm literally RTFM-ing.
It's not in there.
It's not in there.
Can you give me a little bit more information?
So then it was very primitive.
You would go try to look at the project maintainer site,
wherever you grab the tarball from,
if it was some application that you would try to dig
through their documentation, hoping that their documentation
was up to date.
But today, it's different, especially
with the container world.
Should they be in there?
I don't know.
A lot of that stuff is obfuscated away from you
anyway.
So it's not like the days of going in and building out
a stack for something or creating this kind of ecosystem
for something.
You don't really necessarily do that anymore.
Here's a package that has all the stuff,
whether that be a container, a snap, a flat pack, any app
image, whatever.
You're generally only going to get what is there.
And so a lot of the stuff that happens behind the scenes
is kind of obfuscated away, which I think
is another question.
How are you going to learn the stuff if you can't
have an opportunity to really look and dive into it?
It kind of makes me think of IRC in the sense
that what's actually happening, the interaction, the core of it
isn't going away.
We still have things like matrix or Slack these days.
But we're switching how it is.
And man pages, they use weird tools to put them together.
You might not understand the structure
of how to actually navigate and what do these numbers mean?
What are the different sections?
How do I get to them?
How do you actually read through compared
to just looking at a Markdown file or some online
documentation that you're linked to?
It's accomplishing the same purpose,
but in very different means.
And then you have wikis, right?
So ArchWiki, generally a great place.
Ubuntu's forums and support, generally
a great place.
Their knowledge base, generally a great place to go.
And I would say probably easier to keep updated than man pages.
I would say so.
And I would say easier to maintain,
because then you don't have to push the man page to a package
and a package update.
Right, the only way you're updating that manage,
or the only way you're updating that man page
is by updating the package, which has to make it
through the distros repo.
And for some distros, that's going to be a long time.
That could be a process.
So it's much easier just to take 40 seconds
and push that update to a wiki.
And it also, I think, also creates
an opportunity for the community to actually get involved
in documentation and help out a lot more.
That's a good point.
Because you don't necessarily have
to be a maintainer of a package or be
involved in the package itself, and you can still
contribute to documentation or things
that you may have learned.
Yeah, really.
And we seem to keep reinventing these things.
I know there's a ton of different projects,
but PyCrash over in our IRC just linked us to TLDR, right?
And here's another tool that you can use as an alternative to man
pages that kind of gets the same thing across.
But this one often has a lot of examples,
which some man pages sorely lack.
That was my favorite thing in a man page.
And when they didn't have the examples,
I was like, well, what good is this?
Yeah, I need my real world use examples, right?
And I mean, that makes all the difference.
I think there's an opportunity, too, for somebody
like a site similar to TLDR or something,
and I haven't looked at it myself,
but to be able to show typical normal commands
and how they can be used and how you can use TAC whatever
to kind of help you navigate that application
or get more out of it and make it clearer for that process
to happen instead of, like I said,
some super vague, like a developer put
in this super vague sentence.
And you're like, what the?
I don't.
OK, it changes the variable.
After we've talked about it, it kind of makes me feel like it's
man pages time, like they're still valuable,
but their time in the sun has sort of passed.
Like we have so many forms of real time communication
from IRC to matrix to Discord to all the things.
And you've got wikis.
It kind of does feel like maybe we've just
sort of outgrown the man page.
Like it's not, like you still, like when you got to get
a box piece of software, you'd love
to still see a manual in there, and from time to time,
it's very useful.
But it's not the difference between getting like Samba up
and running or not anymore.
Right.
No, I mean, it's definitely not.
And for me, back in the day, whenever
I would struggle with man pages and getting told to RTFM
or whatever, I would oftentimes push to like a nutshell book.
So a command line book or, you know.
Yeah, that's really where the books were useful, right?
Absolutely.
With the examples.
Yeah, because that's what gave you that example, right?
So for a lot of us, that was really starting out.
That was kind of our foray into like, well,
if you're interested in SQL, get a book on SQL.
If you're interested in firewalls,
then get a book on IP tables or whatever.
And because firewalls was especially
one of those ones that was just a tricky pain in the ass,
to be quite honest.
Yeah.
It was bad.
And it took just getting the syntax right
and getting everything right.
I still don't know how to configure IP chains.
But it was just such a struggle.
So having that documentation was crucial back then.
And I still have some of those nutshell books
and command books and stuff like that that hang around
that I will forever have.
Because a lot of those, some of those programs don't.
Some of it is still relevant.
LS isn't really going to change.
I mean, yeah, it may be iterated on a lot.
There's also just something, I don't know,
it's a bit of history, too, those books.
They're a little bit of history.
You know, when I was in my very first, well, no,
my second IT job.
My second IT job, the IT crew, I don't know,
once a quarter, maybe a little more frequently than that,
would take, like all of us, would take a long lunch.
And we'd get food.
And then we would go to the bookstore.
And we'd get the books we need for the software
we were working with for that period of time.
And we'd come back with five or six books.
And we had bookshelves in the IT department
with all of the information on it.
And everybody would kind of get a different book.
Because each book had different examples
and different kind of scenarios or whatever, you know?
So like people would kind of intersperse and get
different books so that you could swap books or still
grab that book or get something out of that book.
And you had the nutshell books, which
were known for certain things.
Then you had the books that were known for helping
you cram for a CERT exam.
And it was just very focused on that.
And then you had the really technical books, and then
the more theoretical stuff.
And you just had to know what kind of book guy you were
and get the right one.
And now they're just, well, now it's just, you know.
She's just asking what TAC-T does on Stack Overflow.
And someone answers that.
Yeah, that's it, right?
You know, I've got to admit, like it's been a long time
since I've gotten an RTFM.
It's been a really long time.
It has gotten better.
It has gotten better.
So the community as a whole has gotten better.
I think the documentation is getting better, especially
with the advent of wikis and stuff.
But then, you know, one day if we ever
get thrust in some sort of apocalyptic scenario,
I guess we're all going to be scrambling
for man pages in paperback books or something again.
Well, on that note, Cheesy, what do you say we go scrounge up
some lunch?
Thank you for coming back on the show, sir.
Hey, thank you guys for having me.
It's good to see you.
Good to see you.
Alex, it is so good to see you in person.
My buddy from Self-Hosted is here in Denver with us.
How you doing, man?
Hello.
How was the trip in?
It was smooth, with a sprinkling of bumpy
as we went across the tropical depression.
That's a good way to put it, actually.
Well, we were thinking like there's a million things you
and I could catch up on.
Really?
But one of our favorite topics that we
talk a lot about on Self-Hosted but don't talk about very much
on this show is one of my favorite free software
projects of all time, and that's Home Assistant.
Yeah, yeah.
Who would have guessed?
I know.
And they recently had an update that
adds a feature that both you and I are extremely excited about.
I can't even imagine the possibilities.
Once I start pulling in energy information
in Home Assistant, the kind of automations
I can build around that are going
to change my life because I'm running off solar in that RV.
So it's energy monitoring.
It's here, it's real, and it's built
into Home Assistant with a new release.
And you've had a chance to look at it.
Yeah, with the August update, so 2021.08,
Home Assistant have added energy monitoring, as we just said.
And out of the box, there are several integrations
that will just work.
And luckily for me, Frank, who is
one of the main Home Assistant developers,
has a solar system with exactly the same integration as I use,
which is the solar edge one.
So for me, it just works.
That's so great.
Yeah, so after the update, I thought
that's the Home Assistant lottery right there.
You know how to pick a project.
Yeah.
So after the update, I ran through a little wizard,
which said pick a bunch of sensors.
For me, it was just a couple of solar edge sensors.
It then does a bunch of smarts on its back end
and integrates with the solar forecast.io plugin
to generate a little graph of what it thinks
the UV power is going to be or whatever.
Oh, that's great.
With my azimuth, with my dangle of my panels
and all that kind of stuff.
So what that would mean for me is
I could kind of plan how we're going to energy
manage for that day.
Because right now, I'm kind of like,
I wait for the sun to come up.
How cloudy is it?
And I just kind of guess as the day goes on.
You're doing it yourself with whatever basic heuristics
you've learned, but you don't have the data.
And now, so yesterday, Lady Joop's got up
to 107 degrees inside.
Yeah, that's hot.
And it was just unbearable.
And I didn't want to run the generator here
in the system 76 parking lot to run the AC.
Because when you run both ACs, you're
looking at almost a 3,000 watt when you also
add in battery charging, a 3,000 watt draw consistently.
And that generates heat.
And when you are already 107 degrees,
you don't want to generate much heat.
You're going to start killing your equipment.
And so we moved in the middle of the morning,
I guess is the way to put it, very early in the morning,
we moved to a spot with shade.
But now, I'm dealing with the fact
that I am sitting around 60% charge.
And I really don't know how long I can stretch that out.
And so something that would give me the ability
to even just forecast like that.
But to take it to the next step, Alex,
I could actually monitor the actual power generation
of the solar system, right?
So not only would I have the forecast,
but I could see what I'm actually
making in Home Assistant.
And that becomes like a source of sensor information
that the system can build automations around.
Have you experimented with that at all?
There's a bunch of stuff, actually, that you can do.
And I'm going to show you in person.
If you want to know what we're talking about,
have a look at the release.
We'll put in the show notes for this.
And the solar generation, you can see there
what the weather forecast has predicted
I'm going to get at my location.
And then what you actually got, right?
Yeah, so you can see the orange underneath, the dotted line.
There's a bit of a delta there.
So at the top, there's like a energy usage panel.
And there's a few bars that say how much you've actually
used versus how much you're returning to the grid.
And then when you are returning to the grid,
you could do some smarts to say, only run my AC unit
when I've got spare capacity over a kill or whatever.
That is brilliant.
OK, so how much of this stuff with this update,
is it just the connection to existing tooling?
Or is it also some of that support
at the dashboarding and the actual software level too?
I was pleasantly surprised.
I opened the GitHub issue on the Solar Edge integration.
And Frank came in and changed a couple lines of code
because some of the templating of the sensors
of that particular integration were a little bit
wonky on release day.
But now, as you can see, it just works just fine.
And the wizard that they walk you through,
when you first do this 08 update,
that wizard says which sensor is the input, which
sensor is the output, all that kind of stuff.
And it takes a minute or two.
And then it adds a new tab on the left-hand side.
Or you've got overview, map, whatever.
There's now an energy tab on the left.
And it just works, yeah.
Jeez, I'm going to have to try that soon.
That's great.
I'm really kind of impressed with the direction
they're taking that stuff because they consistently
come up with new ways of building automations off
of information that I'd never even thought of before.
And if I could just impart one bit of advice
from this episode is if you haven't tried out Home Assistant
yet, throw it in a VM and let it look at your network
and just see what it finds.
And maybe just start playing with that
because you'll be surprised at how many things it
might detect.
If you've got a Chromecast or an Apple TV on your network
or a Plex client and server, it will automatically
figure that out and say, hey, I could integrate automations
around that.
For some reason, let's say you had a multicolored light bulb
in your lounge and you wanted it to turn red every time that
someone was streaming something from your Plex server.
You could do that.
And these are devices that are in totally different
ecosystems.
A Hue bulb talking to a Plex server
doesn't really compute in normal people land.
But in Home Assistant land, you can do it because it
has tendrils.
It has fingers in every single pie of what's
going on on your network.
And it can figure out, oh, this sensor just changed state
from this to that.
And then you write an automation that
says, if this threshold's been exceeded
for x number of minutes, then do this.
So it's essentially it's if this, then that on your LAN
on total and utter steroids.
Right.
And under your complete control and all that information
about when you're doing stuff and when you came and left
and when you turn stuff on, it's not
going out to some cloud provider who's
building a profile about you.
It's staying on your LAN, on your box.
And that, to me, is the ultimate win.
It's amazing how far this has come
and it's kind of lifted the level that you can do.
You can write an easy automation that maybe three years ago,
I'd be rigging something up on a Raspberry Pi
by hand with a custom Python script.
Totally.
Well, Alex, I'm looking forward to going
and doing a little cookout soon.
Yes, me too.
Got any ideas of what we should cook?
Well, we can cook in here.
This room is hot as anything, isn't it?
I'm very grateful they have a sound booth in their factory,
obviously, because it makes this possible.
But there's no ventilation because it's a sound booth.
Have you seen the eye in your thighs?
Now you know why.
Oh, wow.
Aaron Honeycutt from System76 joins us.
Aaron, I think you were on the show like 100 years ago.
I think it's been a while.
I think we have chatted before.
I think I took over a podcast for somebody
at Self in the before times.
OK, OK, all right.
Yeah, in the before times, exactly.
Well, just like a quick recap, what does Aaron do at System76?
I'm a happiness engineer on the support team.
So to anyone who's outside, it's technical support, basically.
Right, OK.
Well, I noticed you have a PineTime on your wrist.
I do.
And I haven't talked to anybody who's actually
using one on the daily.
So I'm curious to get your thoughts on the PineTime.
And how much was it for that watch, too?
It was around $40-ish USD with shipping and everything.
Wow.
I don't even understand how it can be that cheap.
I mean, that's Raspberry Pi money.
Is it worth $40?
So far, I just got it yesterday.
So I can't make solid conclusions.
But I think it's very much worth it,
because I wanted a spiritual successor to Pebble.
I've had Samsung watches.
And I hate having to have all of this Samsung crap on my phone
since I have a Pixel.
I don't have a Samsung phone anymore.
I'm like, I don't want all this crap on my phone, just
notifications.
Yeah.
And has it done the job of replacing
what the Pebble gave you?
So far, I think it's pretty good replacement for it.
I don't know whether I would have.
I had both the e-ink non-color and color Pebble.
So I can't say whether I would prefer one or the other.
But I think it's been a good replacement.
And $40, too, it's worth experimenting with, right?
It's like.
Yeah.
Whether it's going to be good or not is kind of two lunches
right there.
I always wonder with Pine, though,
is the plan to just really put the prices low
and just keep expectations low and keep it that way forever?
Or are they going to eventually start creeping the price up?
Yeah.
I don't know.
It was, it seems like it was in the same price point
when it was non-sealed and dev kit
potential versus the sealed one, which this is the sealed one.
So I don't have access to any programming interfaces
or GOPI pins.
So more consumer version.
Consumer focused version, I feel like.
Which is where they're going to have to take it, right?
Eventually.
So.
Yeah.
I just actually did a firmware update for the first time
earlier because it shipped with 1.2.
So is there like an app on your phone that does that?
I have GadgetBridge.
And then you download the.zip file from GitHub
and then click it to open it on Android.
And then you can choose to open with GadgetBridge.
And then it does the firmware update for you.
And that's progress bar on the app and on the watch.
Nice.
Yeah.
That's not too bad.
That's nice.
I mean, as long as you're comfortable doing those things.
But anybody buying a PineTime?
Probably.
I mean, you wouldn't buy one of those.
But you're also just used to, some people
just download APK files and just install them.
So.
That's true.
So the other thing, you get labeled as a gamer
when I come in here.
Like, oh, yeah, you want to talk about gaming.
I want to talk to Aaron.
Are you a big gamer?
Is that true?
Yeah.
I have a guest stop at home just for work, pleasure,
and gaming.
Multi-purpose, I'll have that.
How have you done in this part shortage drought?
I had everything set up before the drought.
Oh, lucky you.
I have an RX 580.
So I had everything set up with the 8 gig model.
So I was already set up for.
Nice.
You lucky devil.
See, the reason why I ask is people suggested,
people said that we should talk about the Steam Deck
and Wes and I have got a million thoughts on the Steam Deck.
But I'm curious what your first impressions are,
both from a gamer's perspective, but also your personal opinion
as a System76 employee who watches a company produce
hardware on the regular.
You must have some thoughts in both regards.
I love it as the idea.
The first thing that kind of threw me off
was if you look at the HTC Vive, the Vive Index,
on their page, it has its own separate page on steam.com
or steam.com.
This is a whole other website, which is a little bit weird.
What do you take from that?
Like it's outside the ecosystem almost?
It's hard to tell.
I think they're kind of just figuring out
whether they want this as a main thing.
Right, is that a lingering hedge from getting
burned by steam machines, perhaps?
I see, yeah.
And what do you think of it from a hardware standpoint?
I, particularly the hardware, looks really good.
I mean, a lot of gamers, and myself included, my rig
is all AMD.
So I'm like, I'm all in on just AMD hardware
from the get-go.
Yeah, I mean, as a Linux user, it makes things a lot easier.
Yeah, because I don't deal with the pro driver from AMD.
The one from the kernel works perfectly fine for everything.
I've been playing, oh god, playing everything
that I don't need to deal with.
Yeah, I've never needed to reload the pro driver.
People say you've got to have the pro driver.
It doesn't even load on, last I checked,
current Ubuntu anyway, because they're
trying to hit older kernels, and Ubuntu
is too new of a kernel for it.
And they don't want to deal with it for something.
Yeah, I think it also, I honestly
think it has potential as a little portable workstation
for me.
I could see using it to do work.
A coworker brought up that the Nintendo Switch does
720p while mobile, because the screen's on.
A docks turns off the built-in display
to get the 1080 performance difference.
All the videos show that the screen's fully on.
So I'm just wondering how very powered
it's going to be, if you use a desktop placement.
Do you think it's going to be doing double duty,
run the internal screen and an external monitor?
Would it be pushing it too hard?
I'm wondering if they're going to change that later on
and just make it powered off.
It'd just kind of be weird looking at it from just screen
off, though, and it's just docked.
The Nintendo at least covers the front screen up
when they do that, so you don't really notice it.
Yeah, that is a clever way.
I never thought that's why they do that with the dock,
but that's totally wise, so you don't expect that screen there.
Yeah, Valve seems to be really embracing this.
It's a PC, so if a PC can do it, the deck's going to do it.
And that's part of that philosophy, I think.
I kind of want a hybrid model here,
like a game where I can SSH into my servers,
but then I'm actually shooting zombies
that are rogue processes.
That might be a thing.
We should look into that.
That'd actually be pretty great.
I'd like that.
Now I'm just thinking of use cases
if they leave the screen on.
Yeah, I mean, for Steam chat, for one thing, it would be nice.
Or just watching the CPU resources and whatnot
could be handy.
What if you stream from it on Twitch
and then you just watch chat on it?
Yeah.
The ways you can abuse this thing, it's going to be great.
It kind of makes you kind of think
of the ways that you abuse some of the laptops that
have a little split screen above the keyboard.
How do you use that?
I don't know.
Yeah, I'm always looking for more screens.
So if there's a way, I'll go for it.
And the only problem for me for total portability
is, of course, I'd have to have a dock, an external monitor,
and all that.
And so then a laptop just becomes more pragmatic.
But I could see it around the house.
It's kind of interesting on those portable displays
and weather, because Nintendo just limits the spec,
and their dock does the rest with type C.
But if they're following the spec correctly,
you won't really need a dock.
You just get a cable and lay it flat on the desk,
and a portable monitor would work.
Yeah, that's true.
That's true.
Yeah, I could see it.
I also could see it as a decent kids' workstation as well.
Give my kids a deck, and then they plug it
into the dock at home, and they have a full desktop.
And they still have that gaming rig
they've been begging you for.
Well, Aaron, thanks for coming in and chatting with us.
It was good to chat with you.
Yeah, thanks.
Ian, welcome back to the show.
And it's great to actually do this in person.
I know.
It's been a while.
It has.
It's been a long time, I think, since you've been on, too.
And there's been a lot of things happening in desktop land
for System76 since we've chatted.
So I'm really excited to talk about that.
And I got to start with a thing that's on my mind.
And when I asked other people, I said, hey, what should I ask Ian?
This is the question they suggested.
Everyone's curious about Pop OS's transition to GTK4
and what that looks like and how it's going.
Because I imagine there's a lot of work that
has to be done to get things, especially
with the theme and whatnot, to get things working with GTK4.
That's most of what I'm doing with it right now,
is just working on doing the GTK4 port of the theme
to make sure the style sheet is working
and stuff's not falling back on Oddwaiter or anything
like that, because it looks a little strange if you're
expecting your system to look one way.
And all of a sudden, you boot it up,
and one application looks off.
It can be a little jarring if that's.
But it does fall back, though.
That's kind of interesting.
Oh, yeah, no, it's kind of like Flatpak.
If you don't have a Flatpak theme for your current theme
installed, it will fall back on whatever is available.
And it'll always fall back to something.
You won't ever end up with an unthemed, clear, transparent
thing.
I mean, that's reasonable, I suppose.
Good defaults.
Yeah.
Now that I think about it.
It's better to fall back on something that
doesn't match than to fall back on something that doesn't exist.
No kidding.
It's just impossible to see.
I'll take an ugly UI over a broken one.
Yeah, at least one you can use, right?
Well, and Adwaita isn't even ugly.
I mean, it used to be a little, it needed some help
at one point, but they've brought
in some really good designers, and now it looks really good.
So I mean, the pop theme now is actually basically just Adwaita
with some colors changed around and stuff like that.
It's very close, and that helps maintain the compatibility
and stuff as well.
Right, I would imagine the closer you can keep it
upstream, the, well, I guess one way to put it,
is easier your job is.
Oh, absolutely, yeah.
And that's another nice thing about it,
is it makes doing the GTK4 port very easy,
because I can just take the upstream Adwaita theme
and apply our modifications onto it,
and hopefully that translates over pretty nicely and stuff.
How's that going so far?
Pretty good.
So I've been working on it now for a couple days,
and there's pretty good progress.
I'd say it's currently in a this is a usable pop theme right
now.
It looks more or less correct.
There's some weird visual glitches
working on check buttons right now, check boxes and stuff.
I'm so glad someone is.
Yeah, right?
Somebody's got to do that.
I imagine, too, that the transition to GNOME,
or sorry, GNOME 40, must be on the back of your mind
as well with this.
Oh, yeah, absolutely.
They don't necessarily go hand in hand.
More of the GTK4 stuff is more just
to make sure that it's available for applications that
use GTK4 as it stands.
If you install a GTK4 application on pop today,
you'll get an auto waita theme, and that's not
the best situation from our perspective.
Yeah, from a consistency standpoint.
Right.
So we're trying to make sure that for impish, that's
not going to be a huge problem.
And then with GNOME 40, people are probably
aware that with 21.04, like Ubuntu,
we sat out on the initial GNOME 40 release
just to help make sure that everything got stabilized there.
We've got our UX designer here works with the GNOME design
team and stuff like that to help make sure everything's good.
And she was basically just working
with us as a liaison between us and the design team there.
But we wanted to gain some feedback about GNOME 40
and all that kind of stuff.
So we held off on 338 for largely similar reasons
that Ubuntu did.
And as Ubuntu plans to move forward with,
I think it's going to end up being 41 or 42, not GNOME 40
because then they'd be behind.
But we're working on moving that forward as well.
And we have quite a bit of stuff that we
have to work through on that.
Obviously, we have Cosmic, which is our desktop shell extension
stuff that does some relatively large scale
tweaks to GNOME that are tailored more
towards our specific user base, like different target markets,
different products, that kind of thing.
And we're working full steam ahead.
I know that Ian Scott, one of our other developers,
is doing a lot with porting Cosmic to GNOME 40.
Jeremy's doing a lot of that kind of stuff.
So we want to make sure that everything is set up
and ready to go once we're ready to make the switch over
and all that kind of stuff.
So you're saying it's going to be a while until I
have a pop OS based on Plasma.
Yeah.
It's just a dream of mine.
Let's do it.
Let's go.
Easy for us to say, right?
Yeah, very easy for you guys to say.
The entire infrastructure is built on GNOME.
I mean, Cosmic is a GNOME shell extension.
So it seems like this is kind of a test of that model, right?
Of you kind of doing the dance of, well,
how much can we just lay on top in an easy way?
And how much do we really have to keep up with the changes?
Is this hard?
Right, right.
And luckily, with the extension model, it's not too bad.
Most of it translates over pretty easily.
And if there are problems, it doesn't cause the entire shell
to just bug out and crash, especially going
with the GNOME 40 stuff right now.
Cosmic's in kind of a weird state,
and stuff doesn't work right.
But that's the nice thing about doing it that way,
is the base OS is still usable, because it's just an extension.
You just unload the extension, and it works fine.
And then once you get the extension working,
you can load up nicely, and everything works well there too.
And nicely, if you don't like Cosmic,
you can just disable the extensions,
and you get a plain stock GNOME desktop.
Can we talk a little bit about Cosmic?
Absolutely.
Why don't we just start with why Cosmic?
So people might be aware that we, a couple releases ago now,
we introduced PopShell, which was a tiling window manager
extension.
Basically, we wanted to kind of elaborate on that,
and what we would kind of be going
for if we were doing our own desktop shell from scratch.
The extension framework in GNOME Shell
allows us to experiment with that in a way
that it saves development effort on our end,
because we don't have an enormous team.
We're adequately spread.
We know what we can take on, and where we should probably
try to, you know,
Utilize upstream.
Exactly, right.
Don't reinvent the wheel when you don't have to.
Right.
Utilize existing stuff when you can.
And if there's something new that you
want to do on top of that, build on top of it.
Collaborative development is a, that's open source.
That's the whole point.
And so when looking at our customer base,
and our pop OS user base, we wanted
to make something that was tailored specifically
for the kind of person that uses pop OS by default.
And so we would look at, well, what's the kind of changes
that people that run pop OS make?
You know, what kind of things can we
do from a UX perspective to help that type of user?
And we found a couple of things that
were different from the UX goals that GNOME has.
And that's fine.
It's just a different target market.
But we wanted to tailor the experience with your desktop
towards that specific type of user.
And so we started working on Cosmic as a way
to bring those changes about and help cater
to that type of person who's curious about those sort
of specific modifications that make their particular lives
easier using their computer for the things they use it for.
And is it also a bit about maybe being
able to offer a set of consistency to your customers?
Because the Upstream project can change pretty radically,
as it did between 38 and 40.
And there's sort of a layer of consistency
if the shell they're using is Cosmic.
I'm not sure that that's the primary goal.
I mean, I think that you're definitely not
going to see as big of a shift going from Cosmic on 338
to Cosmic on GNOME 40 whatever, just because we're
trying to maintain a certain set of Cosmic experiences.
But at the same time, we don't necessarily
want to hold people back on something if it's not as good.
And if we find a radically different UX pattern that
helps tremendously with usability or discoverability,
something like that, we're not necessarily
going to shy away from implementing that,
even though that's a big change.
And you might otherwise have more consistency
going with the one Upstream to the next Upstream release.
But I guess that could be a nice benefit
for this particular release.
It's going to smooth the transition from 338 to 40
a little bit more.
I would imagine, yeah.
But it's not necessarily the end goal.
We want to make the best experience.
We don't necessarily want to make
experiences that are stagnant or that stay the same.
Consistency can be really good for UX and discoverability.
But sometimes there's a pattern that works better.
And we shouldn't be afraid to deviate from existing norms,
because sometimes you want something better.
And if you never change what you're at,
you're never going to get anything better.
Well said.
Well, Ian, thank you for joining us.
And also, thank you for hosting us here.
This has been great.
Absolutely.
This is the first show I've done in weeks with ethernet.
Yeah.
So thank you.
Oh, no.
Yeah.
Nice to have you guys.
And always, always a pleasure.
Cassidy, welcome back to the show.
It's just been like a couple of days,
it feels like, since we shared it last.
Well, yeah, just one week, I guess, huh?
How has the post-Elementary OS 6 release gone?
It's gone well.
It's been hard to like, I don't know what time is anymore.
This last week, I've put in so much time just
combing through social media and emails and issue reports.
And it's fun when a new release comes out,
because you get this flood.
Yeah, I bet.
Because it's just new and fresh and different.
But then also, it's like, oh, my gosh, there's so much stuff
to take in and address.
It must be a lot to churn through, too,
as you're actually trying to weigh out
what's first impressions versus things that we really
want to focus on later.
Yeah.
Yeah, and it's a huge flood of new users, too.
So it's people who either have never used Elementary OS before
or haven't used it for years, and they're coming back.
And so then these are people who aren't,
they don't know what issues have been filed already.
So they're filing tons of duplicates.
And we're doing our best to hold their hand
to help them file in the right places and stuff.
But inevitably, it's just like a flood.
Noobs.
Yeah.
It's a good problem to have.
It's a great problem to have.
I'm super proud that that is, on release day,
we get all these people who email us.
They reply to their receipt.
So when you buy it on the website,
you can reply to your receipt.
So that's one of the little perks you get for paying.
And we'll do our best to help you out or point you
in the right direction.
And so they'll be like, hey.
So I discovered after purchasing this
that it's based on this thing called Linux.
And we're like, yes, you're the best.
Wow, how do you suppose they found you?
That's incredible.
I don't know.
We have articles in Ars Technica and stuff and Wired.
So I think there's some of that.
There's the tech enthusiast bubble that's like,
Linux is a small bubble inside of that bubble.
And so we're kind of leaking out into the more mainstream,
I guess, which is always cool.
I felt like I saw a lot more people in our Telegram channel
talking about it and trying it out this release.
It seemed like people were ready.
And some of the stuff really resonated with them.
Yeah, a lot of curiosity.
And I think especially the Flatpaks speak
to folks who maybe are experienced Linux users
but haven't dabbled in elementary for a while.
Yeah, yeah.
And it's such a great, one of the biggest things
we've heard as feedback is because we've decided to stick
to the LTS basis because of the stability.
People are like, oh, Ubuntu apps are outdated.
So Flatpak kind of solves that.
You've got your development libraries,
which if you're doing web development,
every web development library has
you install their own package manager anyway.
So you're not using the repo ones anyway.
That's so true.
It's something we don't talk about.
Nobody acknowledges that, really.
Yeah, it's like you've got every single programming language
has its own packaging manager.
So at that point, it doesn't really
matter if those languages aren't totally up to date
in the base.
And then you've got your Flatpak apps on top.
And so you've got a stable base and bleeding edge apps.
And it's kind of a great world to be in.
Yeah, with a nice, clean UI sitting on top of all of it.
Yeah.
Yeah, Wes and I, we gave it a go for Linux Action News.
And we both walked away.
We hadn't talked about it.
And we both walked away from it going,
this is like professional grade now.
It's a professional workstation OS.
With that combination that you just
touched on with the base of LTS, but the freshness
of the user land, and the cleanness of it,
and also some of the work you guys did with notifications
in the terminal, and that kind of stuff.
It just makes all of that a little bit smoother.
Yeah.
Yeah, there's been lots and lots of new little quality
of life features and things we've put into this release.
So that's been really fun to get to that point
where we can do that.
We're going like, we know how to build an OS now.
We've got the basics down.
And now we can work on those quality of life things.
Yeah.
So have you been running it on your framework laptop?
I have been running it on my framework laptop.
Yeah, cat's out of the bag there.
The framework's out, so I can talk about it now.
I've been testing a, it's technically
a pre-production model.
So I can't share exact impressions
of that specific fit and finish, but it's really cool.
It's a really cool project, really cool product itself.
Yeah, the hardware is way, it's super nice, super rigid.
Fit and finish is really good.
That's great.
I have one major complaint, though.
The screen resolution is wrong.
OK, so remind me, I seem to recall
it was like an interesting aspect ratio, right?
It's 3 by 2, which is fine.
I actually kind of really like that now.
Yeah, I think I would too.
I've seen people kind of whatever
who are like die-hard fans of like the 16 by 10
or like the 3 by 2 ratios.
It's like, yeah, whatever.
Like, OK, now I see it.
I don't actually watch that much video on my laptop.
I do a lot more coding and web browsing.
I want some height.
Yeah, it's actually, that's fine.
No, the ratio's fine.
The resolution is like 2,256 by 1,504 at 13 and 1 half inches,
somewhere around there.
So it's like native resolution, everything's tiny,
way too small.
2x scaling, everything's Fisher-Price giant,
huge, chunky, chunky giant.
1.5x scaling, if you've ever followed me on the internet,
half pixels are a lie.
They don't exist.
Even if your software supports it, well, best case scenario,
you have a one pixel line that's drawn by an app,
and it has to decide if that's drawn over one pixel or two
pixels, and it ends up being blurry.
So by having a higher than 1x ratio, but not quite 2x,
you end up actually with blurriness at the pixel level.
So.
This is the exact problem I have on my ThinkPad,
and it drives me crazy.
It's so, yeah.
And like you can work, 1.5, like fractional scaling
is a hardware workaround.
And I understand that it has to exist for that reason,
but it shouldn't.
If you're making a new computer, you
don't choose a resolution where you need fractional scaling.
So that's my big downside on this laptop,
but I've worked around it.
Elementary OS doesn't natively support fractional scaling
at this point, because we're on X,
and there are some ways to do it, but it's kind of hacky.
What we could possibly do is somebody
could spin a framework image that includes some of the hacks,
whatever, as out of the box and supported.
Curious about those modules, though.
I mean, as far as the OS thinks, they're just like USB C
devices, right?
Brilliant.
I want to see everybody adopt the modules.
Like, System76, if you're making a laptop,
adopt those modules, because they're freaking brilliant.
They're USB, I think they're USB 4, and it has four of them,
and they're all full power.
They all support the whole protocol.
They all support the whole display input or output
and power input and everything, fast charging.
It's not like some of them are limited.
You can put whatever.
It's all mix and match.
That's great.
So the cards that I got, they just
sent me were like a full size HDMI, just a USB C pass
through, a mini SD card slot, which I think is interesting,
and a, what was the last one?
Oh, and a storage card, which I think
is actually probably the most brilliant.
It's just like a flash drive that
embeds into your laptop.
So it's a 250 gig flash storage that you can just pop out,
and it has USB C on the end.
So then you can plug it in your phone or any other computer.
Wow.
And that part, I was like, I've probably
used that one the most, because I'm like, oh.
I hadn't even thought about the phone thing.
Yeah, or I've used the HDMI one to plug into another laptop
to get an extra HDMI output, because it's over USB C.
So it's like a display port, whatever.
So it's like dongles, but built in.
As stupid as that sounds, it's kind of brilliant.
If you're going to do the dongle life, that's the way to do it.
That's just really embracing.
Wow.
I never thought about using them on other systems like that.
That is great.
So now I always have these four USB C dongles, basically,
with me, because they're built into my laptop.
But I can plug them into other devices.
I mean, just today, Ryan, we're scrambling here at System76
to try to figure out recording.
And we had to figure out some dongles
to get hardwired ethernet.
Yeah, they talked about doing one ethernet.
It's thin enough they'd have to do the flip down door thing.
But that's why, if you don't need ethernet,
you don't buy that card.
If you need ethernet, you can build it into your laptop.
I think it's so smart.
I just want to see a laptop with six of these.
Just give me six freaking full-powered ports,
and I can put whatever ports I want in them.
And half of them will probably be USB 3.0 for me.
But when I want to swap in whatever port, I can have it.
So rumor has it Westpane may eventually receive one.
It's sort of bad timing, because he's on the trip right now
when they would be shipping it to him.
Yeah, it's a little dicey receiving the package.
We'll see.
We'll see.
But I can't wait to hear more people's thoughts on it.
I was concerned that this was kind of like a Kickstarter
scammy kind of thing, although it felt pretty legit.
But I was just a little concerned.
It felt like it came out of nowhere in some sense.
Now, if you follow the people behind the project,
you realize they've been doing some of these things
for a long time.
But just being a layperson, it was like,
these are lofty goals.
You're really trying hard.
And you're trying to speak my language.
Who can do this?
And we've seen other companies that
are bigger and well-known do similar things.
There's the whole Project Aria, or whatever
it was, at the modular phone.
Motorola did their Motorola phone mods.
And these are big companies.
Because I think the Aria was Google, I think.
But these are big companies who have
tried this whole modular approach,
and it basically never panned out.
And I think if they would have said,
oh, the CPU itself is on its own modular platform,
I'd be like, yeah, that's probably not going to pan out.
But even just the expansion cards,
and then being able to easily access
the RAM, and Wi-Fi, and storage, and stuff,
and making the physical design of the hardware
super easy to open with captive screws and magnets,
there's a lot of smart decisions that even if they went,
like, upside down today, this laptop is still useful.
You could still upgrade it over the years.
And I think that's really cool and important, too.
Cassidy, thank you, sir.
Yeah.
Carl, welcome back to the show.
It feels like it's been a couple of years since we've talked.
It's been way too long, that's for sure.
It has.
And the last time I was here, there
was not nearly as many people or things.
Where are you fitting everything?
It's changed.
Well, we're not.
That's the thing.
So I think it's changed a lot since, well,
but since you were here.
Yeah, we were both back here.
The Thaleo launch, I think?
2018 fall.
Yeah.
Wow, really?
Yeah, so time is moving at a different rate now, isn't it?
It's kind of confusing.
I think of things now with pre-COVID, COVID spike one,
things are going to be great, COVID spike two.
Yeah.
That's how I measure where I am in time.
And we still don't even really know quite if we're, well,
we're not through it yet.
So we still don't really know where it's going.
Has that impacted the business pretty significantly?
It did.
The one thing I could say is I was really
proud of our entire team for how we adapted so quickly to it.
We were pretty used to the engineering way
of communicating through Slack and GitHub
and those type of things.
And so by the time we all moved to our homes to work,
we realized we weren't actually talking to each other in person
anyway.
You're already using the tools.
Right.
Right.
So we were building stuff that way anyway,
even though we were much closer together.
There are things we missed about it,
but some teams really thrive remotely.
The product engineering team is just doing fantastic.
Then we learned that the technical support team,
who I thought this whole time really
needed to be very close to the lab,
could actually thrive working remote
if they had support from the QA team who had lab.
So that ended up working really well.
And so we learned a lot as a company because we
used to hire people, and everyone
had to come to Colorado.
And then we started just hiring anywhere in the United States.
And all of a sudden, it was a lot faster
to hire, a lot easier.
A lot more people to choose from.
A lot more people, right.
So that's a change that's going to stay, you think?
Certainly.
Yeah.
Wow.
That is a big change for you.
Yeah, we found that we, in many respects,
were operating faster and better.
It took some time to get used to.
Things like Thaleo Mega, it was on the cusp of being released.
And then we all went home and figuring
how to design a hardware product remote
was really challenging.
That's what stands out to me here is, right,
you've kind of got different sides of your business.
Sure, you've got customer support.
You've got the more traditional software side of the house.
But then you're building physical hardware here.
How do you make that work?
Well, I can tell you the beginning was very frightening
because we thought they were going to shut us down and send
us home, right?
I mean, all these businesses were being closed.
So that's a frightening prospect to face.
And then we learned that we were considered essential
because with work from home, computers
were necessary to support that.
And so then it meant all the mitigation factors
to make it possible for us to be a safe place
to work during a pandemic.
Right, boy.
So all the deaths were spread far apart.
Everyone was in masks for over a year.
And then finally, the vaccines came along.
And everyone at the factory got vaccinated.
And then the CDC said you could take your mask off.
And all of a sudden, I saw these people
that we had been hired and I've been working with for a year
for the first time.
Wow.
Because I never actually had seen their faces.
And it was liberating.
What an experience.
What a unique, you're going to remember that experience
probably forever.
Striking, yeah.
And amongst all of this, too, there's
the launch of the launch keyboard.
Right.
How did that get impacted by all of that?
Everything slowed down.
So that was the first part was, at least in the beginning.
And then it began to accelerate again.
And like everything in business, everything
costs more and takes longer than you expect.
And the supply shortages must have been horrible.
Or probably still are, right?
Yeah, I have a horror story for the launch for that one.
So when we were ready to launch the product,
we started with 500 because we didn't know what the sales were
going to be.
And we thought that we sold keyboards before,
but we knew it wasn't a reflection of this product
that we were building.
It was something very different.
But we didn't know quite what it would be.
And 500, with our old thing that was just
there for convenience with purchasing a computer,
was it would be a hefty sales for us.
And then we sold it, and then they were all gone in a day.
Wow.
And then so we needed to order more PCBs.
We needed to increase our production.
We went to order the PCBs, and one of the controllers
was out of stock.
So then we did the electrical engineering.
Jeremy and Darrell worked on that
and made the modifications within a day.
Looked at the spec sheets so that it would work.
We went to do validation.
We went to order them.
Another part was out.
We had to do it again.
So we reworked the, this time it was a more important component
that required FCC and CE certification again.
Oh, wow.
So I mean, this isn't a small tweak.
You're redesigning it to some extent.
That's such a serious decision, too.
Yeah, they're not dropping it.
This was the USB controller.
It's not just another drop in there.
Some of the traces needed to be moved, and modifications made.
We had to do a new certification.
We also had to do new validation.
So that was the struggle.
And so what we started doing, which
I think is natural for a lot of companies,
is we started hoarding parts.
So we don't know what our sales are going to be.
We know what it is already, but now we're
telling people it's going to be a couple of months for us
to catch up.
And so we had to.
So we started just buying lots and lots of parts.
When you could get it, you got it.
Yeah, and no one wants to operate that way.
But now I'm thinking, we're doing this because we
want to secure our supply.
But at the same time, we're part of the problem,
just like all of us.
Adding more stress to the system.
Right, we're adding more stress because we're
buying more parts.
But I don't know any way around it other than to do our best
to take care of our customers by buying those parts.
Yeah, it seems like I bet just about everybody
is in that position.
Right.
And so it sort of, in a way, elongates the problem,
but there's no choice around it.
You're right.
Yeah.
Man.
It's tricky.
We hold ourselves as high ethical and moral grounds,
even with our partners, and think about these things
and our impact on the supply chain.
And it's the Wild West today.
So how much of a skill up was it to manufacture a keyboard?
Because I took a quick tour out there,
and it looks like that keyboard literally
starts as a block of aluminum.
It is, right.
It is simply a block of aluminum that gets milled
into its shape, sandblasted, and painted, and parts.
That's a lot of equipment.
Yeah.
And we also don't have nearly the capacity we need either.
So we bought another half million in equipment
that's coming in in the next few weeks,
just to ramp up production for launch itself.
Where is it going to go?
You'll see tomorrow.
All right.
Wow.
Yeah.
I mean, I actually want to buy another launch keyboard.
So you better get that ramped up.
Yeah.
We're getting there.
I think our goal is to get there for the Christmas season.
So mid to late October, we want to be in front of sales.
Right now, we're shipping.
It's mid-August.
We'll be able to ship by the end of September.
I think we can get ahead of sales by mid to late October.
Sure.
The number one thing, I know you hear it, is, well, it's so expensive.
I don't actually necessarily agree with that characterization,
because depending when you get into certain markets,
like headphones and keyboards, you can spend a lot of money.
Is there a long-term System76 roadmap where a $100 launch is on that roadmap?
No.
Just can't build a keyboard good enough?
There is a roadmap for launch.
It just doesn't go down to $100.
I don't think that we can build a product that we would be
proud of that fits with the design and the characteristics of launch itself.
We don't want the quality to be any lower.
So there are things that we can do to bring the price down for another model.
So the launch roadmap includes a model that's going to have a 10-key numpad.
So that'll be coming, I think, both of these are probably first half next year.
So a 10-key, well, we've got to get a production up and running.
And caught up.
But the 10-key, and then another smaller, I believe it's 67-key,
which is going to remove the F row.
So you'd hit the function row underneath the function key with 1, 2, 3, and so forth.
So an even smaller footprint.
Right, an even smaller one.
So that cuts out a bunch of switches.
We're also going to remove the hub from that.
And my hope is we can get that to $199.
So yeah, the idea would be to be able to reach more customers that
need more things and a couple different price points.
Right.
Sounds like it might be a model I'd want to throw in my backpack to take with me,
too.
Yeah.
Yeah, that's OK.
I could really see that.
That's pretty great.
Now, along with all of this, everything we've been talking about,
we've talked about equipment, and we talked about some hiring.
You can use rough terms if you like.
But how big are we looking now for the team size of System76?
I think we have 63 employees.
Wow.
Wow.
Did you ever think?
Did you hope?
I don't know.
The thing about making something like this is that you're so heads
down all the time that they don't think about it much.
You're just solving problems.
We do, we think long term, but the people that you're adding
just feel like a natural extension of this body we've made.
It's a lot harder to communicate with 60 people than it is a dozen, though.
Like that has a lot of challenges associated with that kind of growth.
It does.
But I think what's interesting is the team leaders and most of the teams
have been here for a long time.
Right.
And so we were all the people that were part of that first 12
that built the ethos and the character and the voice
and culture of this company.
And so I was actually just having a conversation earlier today
about this, funny enough.
We had a new director of marketing start.
And she said, you know, I've been all these different places,
and this place, everyone knows why they're here and what they're doing.
And to me, that sounded strange that it's abnormal.
Should just always be that way.
It is not.
It is.
Right.
And I didn't add, thinking on it more, I
think it's because we have that core group that we, instead of,
I don't get up and do speeches or any of the things like that.
I don't talk in Slack about our mission.
I think we all just know it.
And it's in part because the leadership team,
we've been together so long that it just flows to the people that
are growing the company.
You're on the same page anyway.
That's an interesting observation.
And I would concur.
From my perspective, I come back every couple of years,
and a lot of the core team members are still here.
And it's like catching up with old friends.
And that's not true for other places I go.
Usually, it's a new set of faces.
Maybe one or two people are still there.
And I will also say that when we're out in private,
everybody always speaks very highly of you.
So you've been able to foster, I don't know if loyalty is the right word,
but people genuinely seem to care, and they respect you,
and they bought into what is happening here.
And that seems unusually rare to me.
We're the same people sitting here in this booth
that we are when we're having beers afterwards together.
And that goes for our natural state is openness.
Well, it also means you have had to adapt to accommodate some characters, too.
Everybody here really feels like they're unique individuals that are not trying
to fit into some corporate mold.
People are fully expressing themselves and their individuality.
And I could see that being tricky to accommodate sometimes.
I think that's right, except when you have people that are securing themselves.
So what ends up happening is you have a group of a team of smart people
that are both are secure in both their job and what they're doing
and their understanding of things.
And their place in the whole mission.
Right, to the extent that no idea is scary.
You will just simply recognize a better idea
because you understand what you're doing and what we're doing as a team.
So there's not a lot of, well, we might debate and talk through things.
It's frictionless and kind of it just flows organically.
There's not a bunch of politics or second guessing or posturing,
like you just kind of all, it seems like you guys trust each other.
Right.
Now, the question is, as the company grows, can that be maintained?
Do you feel like it can?
So far, we've been able to do that.
I don't see, I think about how we'll do that.
And we are hiring an HR manager with the idea
that that role is going to help onboard people with the culture
and the style and the way we work.
So I guess we are growing up a little bit.
Yeah.
Thinking about those things.
Make it a little bit of a process to make sure people are on board
and all of that.
That kind of makes sense as you grow, though.
Well, Carl, it's been great to catch up.
Thanks for joining us.
Thanks for having me.
Well, that'll do it for this very special episode.
But if you do the Twitter thing, you can follow the show at Linux Unplugged.
The whole network is at Jupiter Signal.
I'm at Wes Payne, and you're at Chris LAS.
And I have to say, there's a whole bunch of other podcasts
you heard from Alex, our self-hosted co-host.
There's Coda Radio over there.
And if you're not catching Linux Action News,
you're missing out on what's going on in the world of Linux
in terms of how it impacts the industry and your daily life.
LinuxActionNews.com.
Go get that.
All of it's over at JupiterBroadcasting.com.
As for this year's show, yeah, we'll be live next week.
We'd love to have you join us.
See you next week.
Same bat time, same bat station.
But as for now, we are all done.
Thank you so much for tuning this special episode of the Unplugged program.
Thank you to everybody who's reached out with messages of support
for this road trip or listeners who had a chance to do a micro meetup with us.
Those have been so much fun, more intimate settings.
We did a diner in Cheyenne recently.
It was great.
Now I have spots to go visit when I return to these places as well.
But the trip does continue.
You can follow us at ColonyTracker.live.
And then don't forget about that meetup.
If you're in the Denver area, it's this Friday
as we record at 4 PM to start trickling in after that
and come hang out with us.
But that does wrap up this edition of the Unplugged program.
Thank you, everyone, so much for tuning in.
And we'll see you back here next Tuesday.
Signing off.
You
