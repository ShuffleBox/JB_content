This is Linux Unplugged, episode 14 for November 12, 2013.
Hi everyone and welcome to Linux Unplugged, the weekly Linux podcast still licking our
wounds from a technical meltdown and basking in the glow of ideals. My name is Chris.
My name is Matt.
Hey there Matt. So we made it, we're on the air. Despite what the technical snafus might
have tried, we've made it. It took a little behind the scenes magic. So last week for
the Linux action show, we had a great interview with Joss from OpenSUSE and we were just marred
in technical issues. We got like a two hour late start while the guest is waiting, he's
got to go catch a flight so total pressure is on. And there we were like literally swapping
hardware, streams going up, streams going down, recording starting and crashing. It
was touch and go. And it's funny because it all comes at a time after where I as a Linux
user and an open source advocate, free software believer had to struggle with going with the
practical solution, right? The solution that the business owner has to go with to do media
content and specifically video production. And I really had to fight this. And I ended
up going with the practical route and then as it all collapsed down around me, I thought
this is what I get. This is what I get. So I'm going to talk about that today because
I think this is in some form or another an issue that a lot of Linux users struggle with.
Oh, I struggle with it every day.
Yeah, I do too actually. And sometimes you walk that line and you win some and you lose
some. But first, at the top of the show, we usually like to do some follow up and I had
a whole bunch of really good follow ups and then I somehow had a copy paste failure and
lost a lot of them. But Ben comes to the rescue. So you might have heard of this little thing
called Linux Format Magazine. Now you might be missing Linux Format. I don't know. I know
I certainly have. But perhaps today you saw a new bat signal up in the sky called Linux
Voice. Well, Linux Voice is an Indiegogo campaign that's just been launched by I believe some
of the guys behind the Linux Format Magazine. And one of those guys, his name is Ben Everett.
Everett, I believe he said it right. And he's joining us right now. Ben, welcome to Linux
Unplugged.
Hi, I'm glad to be here.
Hey, man. Well, thank you, first of all, for joining us literally at the last minute.
Yeah, we just launched the campaign yesterday. It's a really exciting time for us.
Yeah, no kidding. That's why I wanted to get you on. So what are you guys doing here? I
know Linux Format and I know that it was honestly Linux Format was my favorite Linux Magazine
of all of them. I know you guys are trying to raise some funds. What are you trying to
accomplish?
Basically, we want to do more or less what we did with Linux Format, but we'll be free
from the oversight of future so we can do it exactly the way we wanted to do it, which
means a lot more giving back to the community, a lot more community involvement. So if you've
seen the campaign, you'll know we'll be giving 50% of our profits back to the community.
And we'll also be making our content free online after nine months. And it's things
like that that we want to do differently.
Oh, wow. Now, so is this going to be, this is going to be essentially what people are
familiar with from the Linux Format Magazine, sort of rebooted and refined? Is that sort
of what, if I'm envisioning that? Or is this, is this something a little bit different from
Linux Format?
Fundamentally, it'll be the same idea as Linux Format, the same rough layout, the same basic
mix of tutorials, the same, aimed at the same sort of people, but hopefully done better.
Interesting. Now, can you tell me about the podcast aspect of it?
Bellamy there. Hello. Don't forget to push the talk. So now there's going to be a podcast
component of it too, right?
Yeah. I mean, we've been podcasting for a while as Tuck's Radar, then as Linux Lifestyle.
So yeah, we'll just be shifting that over to Linux Voice.
Awesome. So it's a magazine, but it's also something people can put in their ear holes
if they're commuting, something like that.
Exactly.
And you guys have got, as some of the perks, you actually get like a print subscription
too. So there is going to be a print version.
Absolutely. There's this sort of vague rumor that print is dead, but we don't believe that
at all. I mean, print magazines are still selling really well. Linux Format increased
its circulation last year. I mean, digital is obviously great, but print still has got
a lot of life left in it.
Yeah. I think that's awesome. I'm looking at the different tiers here and I'm thinking,
if I'm going to throw down a thing, I'm going to throw it down for a print version. I guess
I'm one of the minority, but for this particular type of content, I think I really like the
idea of being able to thumb through it a little bit. Of course, that's why it's great. It's
also a format in like audio or digital. So if I wanted to throw it on a device, I could.
Well, very good. Very good, Ben. Well, I wish you guys a whole bunch of luck. And of course,
we'll keep tabs on it. And is there anything else you wanted to mention before we go on?
No. Just really encourage everyone to go and check out the campaign on Indiegogo and linuxvoice.com.
Awesome. And we will have a link to it in the show notes. So folks, go over to episode
14 of Linux Unplugged on Jupiter Broadcasting. We'll have a link to the Linux Voice Indiegogo
project. Well, Ben, we're going to go into one bit of feedback that I did grab this week.
You, however, are totally welcome to hang out with us. Part of Linux Unplugged is with
sort of like an online lug aspect to it. We let people hang out and chat with us as we
do the show. So you, sir, are more than welcome to hang out on air if you'd like. Or you can
take off if you need to to get on with your day, because I know you did have to join us
at the last minute. But interesting stuff, guys. So I'll put a link to this in the chat
room right now if folks watching live want to go throw in a little bit. And of course,
we will have it in the show notes. I don't know about you, Matt, but I love the idea
of just having a Linux magazine in print.
I think it's really telling that people are still under the impression that print is dead,
because it's not. I, for one, prefer Linux magazines in print. That's just kind of how
I like to absorb that. And I really love the idea of the model they're running with. I
think it's fantastic. I think it's really cool to see the writers running the show.
I think that's awesome. I think their mission statement of actually giving back to the community
is awesome. I think the whole thing is great.
It is great. It is great. So anyways, you guys can go check that out if you would like.
All right. Well, I did save one email. I don't know how I lost all the other ones, but it
was probably a pretty good one to keep, because it was on our topic of last week. So last
week we talked about the Dark Mail Initiative, and I was pretty bullish on it at first. Now
as I've had some time to reflect on it, I don't know if... I mean, honestly, nobody's
unseated email yet, and that might have been to Adrian's point. He writes, in my main
purpose for this email, after, by the way, he had a bunch of very nice things to say
about the show, but I cut it down to, he said, my main purpose for this email was about the
potential of dark mail. Thank you very much for an informative unplug session on the proposed
new protocol considered for replacing email. I would like to ask if this may also benefit
the world, then it may significantly reduce the amount of spam and fraudulent emails,
if I'm correct, mail could be encrypted with something like private and public keys. Number
one, if the email requires encryption, which takes longer to process before sending, and
will cost more in the spammer's resources, so then would the spammers be less likely to
bomb domains? I don't know if that's necessarily true now, because the type of encryption we're
talking about, not very expensive. Now bit message type stuff is, there's a lot more...
So bit message actually has something called proof of work that you have to complete, a
math question that you have to answer before you're allowed to send, and that, if you've
tried bit message, you've noticed it can sometimes be CPU intensive when you send a message,
that's exactly why. And that becomes just not scalable for spammers, but something like
signing an email with your GPG key, that's not going to slow them down.
No, not even close.
Number two, if the recipient has to decrypt the message, then only a public key of the
sender will successfully reveal the message. This suggests that the spammer pretends to
be eBay, then unless they have eBay's private key message, you'll not be able to decrypt
quickly. That is true. That is a nice thing, is if you have a good key structure set up,
then you can, at least it cuts down on phishing.
Number three, he says, I do not know how public keys will be stored, but I can guess if a
company is requesting tens of thousands of public keys, they're either on a mega legitimate
company or a spammer, and they would get noticed. And that's interesting if you need somebody's
key to send it to them.
Yeah, that's an actually really interesting point.
He says, I'm sure you may think of more ways, but the hope is not only to improve confidentiality
with Dark Mail, but also to reduce spam. We'll see. And he's in Stonehenge, England.
Good stuff.
Yeah, it's some interesting thoughts. I guess after we did the episode, ours ran a piece
about how Lavabit was never all that great security wise. And they tried to kind of,
I thought the timing was a bit of a takedown because they're doing the Dark Mail initiative
and they're not using the same technologies for the Dark Mail initiative that ours was
writing a takedown on.
Yeah, but fax never stops ours before. I mean, they nitpick whatever they want and kind of
laugh it out there. Bam, so I went there. I'm just saying their whole approach is, I
mean, here's the thing about Dark Mail. For it to succeed, it's really, really, really
simple. The services we're already using, if they adopt Dark Mail, it succeeds. If those
services we're already using do not adopt Dark Mail, it'll still succeed, but on a much,
much smaller scale. It'll be much more bulletin board like.
It'll be more Dark Mail. It'll be like TOR a little bit more.
Yeah, exactly. It's going to be like some weird mesh network or something. It's just,
it's going to be very limited.
I think that's it. I think if Yahoo says, hey, Yahoo Mail is going to stand out and
we'll adopt the Dark Mail protocol, or if Google says, you know what? We genuinely are
so pissed off that the NSA broke into our data centers that we'll adopt the Dark Mail
protocol. If those things happen, then I think we got it.
Well, I think it's a great opportunity for Yahoo because they need a way to differentiate
themselves. They're not really a search engine anymore. I mean, they're basically just Bing's
little brother using their stuff.
So they have a real great opportunity here to say, you know what? We're going to cut
the cord. We're going to basically innovate and really shake things up and take some risks.
Being a publicly traded corporation, that's always a little tricky, but I think it's worth
a try.
Or you could be Zimbra and you could be like, you know what? We're going to integrate this.
This is another reason why you want to switch to Zimbra from Exchange.
That would be very helpful. And that would be a really great testing area that if it
succeeds there, then they can expand out.
Yeah. Well, you never know. You just never know, Matt. Well, so look, I got to bear my
soul on a few issues. I went through a self-struggling and evaluation process behind the scenes recently.
Brought me to my core, Matt. Brought me down to my core. I questioned everything.
It was just after you had a little cloud experience with your lost links?
No, no. This was a couple of months ago. It was a couple of months ago and it was right
before I spent a whole bunch of money on a big closed down, locked down system with this
proprietary software that costs way too much money. And I really had to do this deep soul
searching. Do I really, really, really want to do this? Do I really want to spend this
money or, and I was just being practical, or do I want to reduce the scope of the Jupiter
Broadcasting Network and just switch to audio only and just say, you know what? 30, 40%
of our audience, I'm sorry, we love you, but I just can't do video anymore. That would
be gone to YouTube, it would be by YouTube, it would be by video embeds, right? All gone.
We only do audio. And that would be a massive reduction for the network. But I was at this
point where it's like I could spend five grand on a Mac Pro and another grand on Wirecast
and I could build a proprietary, I could build the next version of the proprietary system
that I used to run the network now for recording and streaming. Or I could just say, I'm not
going to do it anymore. I could let my ideal stand through and say, you know what? I can't
do it. I'm just going to do what my ideals allow me to do. Because I'm also the type
of person where if I can't do it well enough, like even maybe initially I can't do it well
enough, but I feel like eventually I'll be good at it, I'll start. But if I feel like
there's not a lot of chance that I'm ever going to have it at the quality level I want,
I'd rather just not do it, right?
Yeah, exactly.
So video production on Linux, I'd rather just not do it.
Well, and I think the one thing we keep running into with people is they say, but you can
do video production under Linux and they point to other popular video podcasts out there,
one specifically to gaming, for example, and they say, well, you can do it that way. And
I think that perhaps this is an opportunity for you to explain why that may not be a good
fit for us.
And you know, so I'm going to talk about that. But I also, I want to talk about how just
in general too, as Linux users, there's always these things that come up that we're like,
oh, my ideals are one thing, but the pragmatism in me is going a different direction. And
sometimes in the long run, you know, you pull an RMS a little bit and it turns out that
maybe-
And the value of this is negative.
Maybe you should have gone with the ideals. But before we talk about that, because that's
sort of the premise, and you know what, maybe I'll also give the background since you were
there.
Oh, yes.
You got to see what people watching live didn't get to see while we were down. You were there.
So I'll also talk about what the hell happened this weekend. A lot of people have been asking
about that. But before we do that, I want to thank our sponsor this week, DigitalOcean.
Now you guys might not be familiar with DigitalOcean now since they were here last week. They're
here again this week, and I'm very, very excited. Now if you're not familiar with DigitalOcean,
DigitalOcean is simple cloud hosting. They have dedicated offerings with the most intuitive
and easy to spin up systems ever. Users can create a cloud server in 55 seconds and pricing
plans start at $5 per month. They get you 512 megs of RAM, a 20 gigabyte SSD drive,
and a CPU, and also a terabyte of transfer. DigitalOcean has data center locations in
New York, San Francisco, and Amsterdam. The interface is simple, intuitive, the control
panel is brilliant, and power users have a bunch of great features too, like Docker support,
replicating backup images.
Oh, nice. I like the Docker support, right?
Oh, dude. Matt, the Docker thing is... We've talked about Docker. It allows me as a sys
admin or it would allow somebody as a developer to create a completely isolated environment
locally on their laptop, on their desktop, test it, get everything working just the way
they want, spend all their time locally working on it, make that Docker snapshot, move it
up to DigitalOcean, and spin it up and have it running on one of their SSD powered VPSs.
Now I'm looking at the Create Droplet screen right now. This gives you an example of how
intuitive their interface is. You give it a host name, so like I could say unplugged
for the host name, and I could choose which one I want. Now I'm going to choose 512 megs
of RAM, 20 gig SSD with a terabyte of transfer. That's $5 a month, and what's awesome right
now, if you use the code LINUX13, lucky number 13, LINUX13, they're going to give you a $10
credit, so you can try out one of these VPSs for free for two months, and the one I spun
up I put up in New York, and I went with an Archbox, but they've also got Ubuntu, CentOS,
Debian, and Fedora. You could also just say it by application. You know, hey, I want a
LAMP server, or give me a Git server, right? This is a good one. I've already got my Docker
created. Create me an Ubuntu 1304 machine with Docker already installed, so I can just
drop it on there, and I am ready to go, or hey, you know what? I need a WordPress blog.
You can click right here. They'll spin one up. It is so cool, and then once you get it
just set up the way you want, you can create that image, so then from that point forward,
you can just spin up additional machines as you need based on that, so like for me, I
started with an Arch machine, got it really nice and minimal, just what I needed, got
a few things set up. I could take an image of that, and then from then on, whenever I
want an Arch machine, I just use that image if I want. It's so awesome. They call them
Droplets. It's really cool. It's based on KVM, which is great, some great Linux technology
using Docker as well. I love all of it, and really, when you're using the code LINUX13,
you can try it out for free. I've been using it recently to do backup recordings of our
live stream, to do BitTorrent sync distributions of the Unfilter Supporter Show, so that way
people get better speeds when they're pulling that down. DigitalOcean also has something
really cool for their community. They have a collection of tutorials on their community
site, and users can submit an article, and if it gets published, that user will get paid
50 bucks, which is pretty neat.
Can't beat that with a stick. It's great all the way around, and I love the fact that you
can do a remote Arch install, and then do BitTorrent sync or something like that. That's
so awesome.
It is really awesome.
The geekiness, it just makes you salivate.
The LINUX13 is where you get started. You can go check it out, and these things, the
fast connection combined with the SSD really does make a difference, and the other thing
I love about it is I've tried other systems in the past, specifically from Rackspace and
Amazon, and both of them have gotchas. Like, oh, here's your DING for your CPU usage. By
the way, you use this much bandwidth, here's the DING.
The great thing about DigitalOcean is I know exactly what my cost is. It's $5 a month,
and if I use 900 megabytes of transfer, if I use a terabyte of transfer, it is $5 a month.
There's not, at the end of the month, this, oh my goodness!
Yeah, surprise!
Yeah, it's a fixed cost. It's exactly what I expect, and because it's there, I keep coming
up with new uses for it all the time. Trust me, you want your own Linux server on demand
up in the cloud, and you can have it in Amsterdam, you can have it in New York, and you can have
it on the West Coast, so go to DigitalOcean.com and use the promo code LINUX13 when you check
out. That lets them know that you appreciate them sponsoring Linux Unplugged, and it also
gets you two months for free if you get that $5 unit, or you could get the big boy for
10 bones a month, and just have it free for that month and just try it out. I'm not going
to judge. You do what you want. You do what you want, and thanks to DigitalOcean for sponsoring
Linux Unplugged.
Big thank you. That's just awesome stuff, and boy, I'll tell you, I've got a couple
of items I might be rolling out onto this here pretty quick.
Boy, howdy, Matt. Boy, howdy. Once you've got it, once you've got a system, there's
like, oh, you know what? I've been kind of wanting to do this. I could do that up there,
and then something else. You know what? I've been wanting to do this. I'll toss that up
there. It's been really cool.
It's like someone just dumped out a big box of Legos with every piece I've ever wanted
directly in front of me that I can build anything I want. It's awesome.
Yeah, it is pretty cool. So this week, I've got to just take a deep breath. We had a rough
Sunday. We had a really rough Sunday. So Friday, we canceled the fo' show, so that way I could
take the studio offline. Okay, I've got to back up even further. I've got to back up
even further. Years ago, when we decided to switch from audio to video, that's when we
made the switch from producing the Linux action show and related shows. At that time, it was
pretty much just Linux action show on Linux. We made the switch from Linux to a Hackintosh.
I thought I could cheat. I thought I would get by, and I wouldn't get a Mac. I wouldn't
be legit. I'd do a Hackintosh, and that sort of made it okay. It meant I wasn't investing
a bunch of money in Apple hardware.
You weren't investing in the hardware, and you still got to get some geek cred.
And I could dual boot Windows and Linux on them. So I used this time, and I was a contractor
back then, and I just made plenty of money, because I was just working crazy hours as
a contractor. I even had a bonus structure set up, so when I went over 40 hours, I made
like a good percentage rev share of the revenue from that client for the month. So I was making
good money, and so within a three or four month period, I spent about $10,000 trying
out different hardware and software configurations under the Macintosh, Linux, and Windows, trying
to come up with a solution to provide real quick, fast production video and live streaming
that I could then turn into these shows.
And I landed after all of that testing on the Mac, and that's when I went with Hackintosh.
And this has been fine, and this is a system that I've evolved and continued to sort of
improve upon throughout the years, till where we're at this summer. Then the summer comes
along and the Hackintosh starts to die. It's just gotten old, and what we need from it
is beyond what the hardware is capable of. And there's no upgrade path for the operating
system, because it probably won't boot if I upgrade it. And now the software we use
is starting to require new versions of the OS, and all of these problems that you run
into. So I'm like, okay, all right. I'm going to do it. I'm going to do it. I'm going to
buy a Mac Pro. I'm going to put the OS on there, and I'm going to load the software
on there, and I'm just going to be a big boy, and I'm just going to swallow the medicine,
right?
I remember this, and I remember right before the purchase, you really weighed out all your
pros and cons and decided you're going to bite the bullet. You're just going to do what
needs to be done. And clearly, this is going to solve all your problems, right?
I looked at the numbers and I said, I really honestly considered for a couple of days dropping
video, because then I wouldn't need to buy the Mac. I wouldn't need to buy the commercial
software. I could go back to doing all the production under Linux, and now that Linux
has gotten even further, it's even better than it was back then, right? So it's like
there's more incentive to do that now than there used to be.
Oh, absolutely.
So I'm thinking, God, I would love to do this. And so for a couple of days, I gave real serious
thought. And everybody listening, think about this. All video production on Jupiter Broadcasting
almost went away, right? Because I really wanted to switch.
And so at the end, after really thinking about it, I knew that that would be just too much
of a loss. People do not like it when you take away things.
No.
Because going from video to audio is a big, totally different animal than going from audio
to video.
From audio to video.
Yeah.
Which is actually an addition versus a subtraction.
Right, right. And so I thought, okay, all right, I got to do it. So I bought the Mac Pro,
which has been marred with certain hardware failures, which I've had all repaired under
warranty, which is now fine. Then I kind of strategically waited to deploy it, because
a new version of the software that Jupiter Broadcasting uses, Wirecast, Wirecast from
Telestream came out. Version 5 came out on September 5, 2013, Matt. And I thought, I'm
going to give this time to cook. Now, I happen to know people who work with it. They worked
with it in beta.
Yeah.
And they gave it the thumbs up.
It's great. Try it.
So I thought, okay, if I'm going to deploy this, I don't want to deploy something that
I'm just going to have to update in a few weeks anyways. So I'm going to go straight
to the new version. It's been out since September. Give this a go. Oh, boy. So there was, there's
a lot of bugs. So this is a case not to go with rolling, right? Because here I am, Mr.
Rolling saying, I went with the new stuff and boy, did I get hit.
Exactly. Yeah, you kind of made someone else's point there. But still, still.
So it had a few features though that would sort of justify it. Like it has X264 support,
much superior video codec, right? And that plays through in like the remote network.
Like right now it is, Wirecast is capturing the screen from a computer that is an entirely
different room in my house than the Wirecast machine is, right? Because it is over the
network, over the gigabit network, and they improved it now so that the network capture
can do 60 frames per second over the network. That's great for games and stuff.
Sure.
So I was like, okay, I kind of want that. And then the last feature they added that
I just thought I just had to have is the ability to take an RTMP stream and pull it in as a
camera source. So when Alan does BSD now up in Canada, I could pull it in and retransmit
it out to all of our endpoints like Roku's, XBMC's, the audio stream. So it gives a more
complete. So I'm like, all right, these are enough compelling features. I know people
have had it in production. I'm going to go ahead and deploy it.
Seems like a great idea.
Yeah. Then I've had nothing but issues. So Friday, or Sunday, I'm sorry. I mean, how
would you describe what was happening, man? I was just...
So let me give you the spectator support. Have you ever seen one of those really angry
monkeys that were in the diapers that swing around from the trees and fling things? That
didn't actually happen. What did happen is Chris worked really hard at trying to find
out what was going on. It was just basically one issue after another with it. Basically,
he would start up the stream, he'd turn around, and then it would drop.
Yeah.
Then he would start it up again. He'd stare at it for a little bit.
He wouldn't touch anything, right? Just look at it.
Never touch it. As soon as the eyes have rolled off of the monitor and he's heading back to
the seat, it's down every time. And after a while, it becomes like a perverse bad joke.
It's like seriously, it's like there's someone out there with a clapper trying to clap, turning
stuff off. It was the weirdest thing. And so yeah, it was very frustrating.
So we actually... I'm an old enterprise IT guy, right? So I'm about what's your disaster
recovery plan during a core IT upgrade. So I spent extra money, doubled up on some hardware
that way it wasn't like... Initially, I was going to be cheap about it. And I was going
to take parts from the Hackintosh, like all the HDMI capture cards and some of the drives,
and I was going to put them in the new Mac Pro so that way I could spend as little as
possible on a Mac Pro.
Yeah.
And then as I thought about my thought, if this doesn't work, I've got mixed new and
old hardware in here and I can't just immediately revert back to the Hackintosh. So I spent
the extra money and got new stuff all for it. And so that way I could swap the two.
So there we were Sunday morning, already an hour late, our guest, Joss, had a flight he
needed to catch. He's in Germany. It's 10 a.m. Pacific time. God only knows what time
it was in Germany at that time. He's waiting on us. We can't even be in the stream to tell
him what's up.
Right.
And I'm too busy fixing to really even tell him what's up. So I think probably at least
five or six times thought, we don't have an episode this week.
Yeah. Chris looked at me dead eyed and said, I honestly, I don't have a solution to this.
What do we do? And of course, I'm thinking, whatever you need to do is cool, but we're
both just kind of shrugging, going, ah, you know, what do we do? What do we do? Yeah.
And so I was like, all right, I'm going to swap back. So I swapped back to the Hackintosh.
I plug the Hackintosh all back up, which never goes as smooth as it's supposed to. Right.
There was little wiggly things that I had to get right. The HDMI capture cards didn't
work. So we had to shut everything off. Everything, all the computers had to be turned off, all
the camera, everything had to go down and turn it all back on. Didn't work. We had to
shut everything down again, turn it all back on. Then it worked the second time.
When watching this, it looked like you were playing Twister.
The Hackintosh has some sort of like GPU problem and it was totally not working. So then after
switching to the Hackintosh, we knew we had to go back. We had to switch back to the new
Mac Pro and try to get that solution, which we just bailed from working. And at this point,
I'm thinking, my God, if we just get it up and a single camera shot on Joss or on the
chat room, we'll just hit record and we'll just print what we get. Right. Exactly. And
so I put the new machine back in, hook everything back up. And of course, there's like random
bugs and wirecasts where all the HDMI interfaces get reassigned every time it restarts. So
that way, what was once the camera is now the Skype machine, which was once the Skype
machine is now the camera, which was once my Bonobo is now the USB webcam.
This just adds, of course, to the already growing workload.
Right. Because then every shot has to be edited that refers to those cameras to now refer
to the new mapping every time. All of this is happening while we're trying to communicate
with the live stream, what's going on, trying to communicate with our guests, get back up
and running, realize it's like one teensy-tinsy little config issue that was a default on
how the audio got encoded, which I didn't even want. It was a change default, I think.
I think it was actually changed without your knowledge. It was applying AAC compression
to the audio, which I didn't want that. I want uncompressed audio. That's how I roll.
Right. And then so changing that resolved the immediate crashing. What I later discovered
through correspondence, I sent them a few of the crash reports from the software. Later
correspondence with the support, I realized, I don't know why this was never a problem
with the previous version, but Wirecast 5 is only a 32-bit application.
Oh, for pizza. Seriously?
I got a machine.
How adorable. 32.
I got a machine with 32 gigs of RAM and then a 32-bit core application.
It's kind of like, wait, what now?
And so it turns out X264, because it can utilize your system more, combined with the Morph
processor threads and memory usage, the two things were just... And I was sending an X264
stream off to Scale Engine for the streaming, because then the live stream would look better.
And again, it was their default setting. So I went with that. And so what I've discovered
now is I fixed that audio compression setting. So it's just doing uncompressed audio. And
I turned off using X264 for the live stream. So now we're using regular H264, the slightly
inferior version of H264. And so far, the machine is now running, according to Wirecast,
at 98% memory usage. That's how close we are. In fact, I'll go check it right now, because
sometimes we even go over a little bit.
So help me to understand that. In almost 2014, they released a new version of an application
designed for pro use that's designed for 32-bit systems. Am I understanding that correctly?
Yeah. Okay. So right now it's using 90...
That's disgusting.
It's using 93% of the memory now. And so there's just an S ton of free RAM sitting on the box
not being used.
Yeah. It's completely not being used, because you can't. I mean, oh my God. I can't fathom
how they would release a new version of an application that's running with standards
from five, 10 years ago.
I think it's... So this is part of the problem is video production software has this massive...
It's like building a car. It has this huge pipeline of production, and they start working
on it back in the day. And then by the time they get it to a point where it's good, they
have all this legacy baggage. And this is why Apple aborted Final Cut 7 and upset everybody.
Well, apparently that's what Wirecast might've needed to do as well, because now they have
all this technical debt that they're stuck with that is really plaguing it. And I looked
back on this and thought, if I had that time, made the decision to just drop video for now
and maybe in a couple of years... Here's the thing though. I honestly don't think video
production will ever come to Linux at the level it is available to the Mac.
Not unless there's a vested interest with high money. No.
A company like Valve, but even then...
It would require a studio that has a falling out with somebody that gets mad enough. But
even then...
One of the reasons why it works for the Mac is because there's this huge ecosystem of
software vendors, like Telestream making Wirecast, like Blackmagic making the Intensity, all
of the capture technology, all the Thunderbolt peripherals, all the USB stuff that all are
designed to work with the Mac. And that takes five, 10, 15 years in the marketplace to develop
businesses around it. There's entire businesses that sell products around that.
I don't think it's ever going to come to Linux. And I think what will happen is we'll just
do it differently. And that will be doable on Linux. I think what we have with Hangouts...
Google now with Hangouts, you can do real time lower thirds. You can do green screening.
You can add all kinds of effects with the cheesy apps. And you can do it all from Linux.
And it's not free. It's not open.
And you're locked into a YouTube experience if you want to pop it out to something. That's
the problem.
But it shows you it can be done. And so maybe down the road, something... It sounds crazy
today, but I think if you would have told people that they do photo management in the
cloud 10 years ago, they'd say you're crazy. I think video editing will become an online
app in a lot of cases. And the more powerful these web browsers get with WebGL and OpenAL
and all these things, I think eventually it's just going to move to something else completely.
And then Linux will just be included at that point.
There are some NOE editors out there that are... They're very, very early days, very
close movie maker level. But I think it shows that, as you point out, it can be done. We
need to basically give it time. I need to win the Powerball and actually drop some coin
into developing a solution of that sort.
I don't think though...
That'd be cool.
I think if you took Final Cut or if you took Adobe Premiere, which might be the more realistic
one, Adobe Premiere.
Right.
If you took that and dropped it on Linux today, I don't actually think it would make much
of a difference.
No, no, no, no. I think that the key is to stop trying to emulate what they're doing
on other operating systems and basically build on what already works for us. Like as you
pointed out, Google Hangouts is a good example. Come up with a cloud-based solution that is
not trying so hard to be something else, but basically utilizes some of the tools we already
have, HTML5, various other stuff on the backend, all these little goodies put together and
find ways of making the technologies that already exist work better and let it grow
organically.
That'd be interesting to see what happens.
So I guess that...
Can I chime in on this?
Yeah.
So I was just thinking, if you're going to move video editing to the cloud, that's going
to need a lot more bandwidth than most people are currently capable of.
Right. But look at the way they do with Hangouts where you connect in, they do the switching
remotely and you stream to them and they record the central location.
That's right.
Yep.
And that's the key. That's the key.
What's LightWorks like nowadays?
Again, it's okay, but the problem is the editor is... I think the editor is a problem that
somebody is going to solve, but it's the hardware ecosystem, it's the codecs, it's all of it.
It's all missing.
It's the ability to put something on a live stream and have all that available on the
go.
Yeah, last time my chat, last time my chat, LightWorks was only 64-bit, but it was pretty
usable.
It was. And I think all video editors on Linux at this point are really good at making clips
and adding transitions and throwing in some goofy effects here and there. They're pretty
good with that, but they don't really solve problems yet.
That's a problem.
Yeah, but LightWorks is a professional program. It's used for like movies, studios, and outside.
The problem we're facing here is we have all the post-production software in the world
on Linux that we could get, but we need software like Wirecast that we can use during a production
like Chris does during his shows.
Yeah. And that's becoming more and more common. You're seeing a lot of people do live production.
And it's just from an economic standpoint, it makes so much more sense if you can produce
things live in real time. And with chat rooms and mumble, you want to be live. You want
to be streaming.
Yeah. And you said about streaming, but you've got YouTube streaming. You've got G+. There's
quite a few other options you could use if you was on about the cloud streaming-wise.
Yeah.
I mean, it's not just much about-
What about the lock-in there though? But yeah.
It's not about-
If you want to go really old school, you've got like Justin.tv.
Right. Yeah.
And you stream.
And you stream, sure.
It's not as much about the service you're using. It's about the effects you can use
and the stuff you can overlay the video and how you can transition stuff and maybe streaming
from another box.
Yeah.
Are you eliminating an intern that needs to go and do all this stuff for you because you
have a dynamic situation that you can do easily and quickly like Chris is able to do at this
point?
Yeah.
Wirecast is really good at like green screening, taking multiple different camera sources,
combining them together, and then doing all of that on consumer purchasable hardware.
That's the big thing.
For me personally, I would use Lightworks with YouTube, with the YouTube streaming feature.
There's an alternative to Wirecast called VidBlaster, but it's much cheaper.
Yeah.
Well, it's cheaper for a reason though.
Yeah.
Yeah.
So VidBlaster was one.
In fact, I've even considered using VidBlaster for some things in studio, like for bringing
a bunch of Skype colors in and doing like a multi-box and then sending that to Wirecast
as a camera source, but VidBlaster is not really a full competitor to Wirecast.
And when I was playing with Lightworks specifically, I was actually one of the early beta testers.
It's good software and it absolutely, yes, it was absolutely used in a number of well
known recognized films for production, actually creating a film.
But it wasn't, to my knowledge, I don't know how it would be used effectively to work with
a live program.
Via YouTube, eh, maybe, kind of, not really.
I don't know.
I mean, I'm not really sure how that provides the kind of functionality we're dealing with
now.
I don't see it.
You know, Lightworks just looks to me like your standard NLE where it's not even made
to do live production.
Right.
It wasn't designed for it, no.
The most I've even seen regarding live production on Linux is, Matt, what was that software
that you've always promoted back when you were a student?
Oh, I was involved with it.
Webcam Studio.
Yeah.
Webcam Studio was, it was kind of like, it's kind of like a Babylon 5 where it was meant
to do one thing and ended up going a completely different direction.
Someone else took over the project and it's kind of just hopping along at a real snail
space.
The problem is just the back end technologies just weren't effective enough.
And no matter what language you wrapped it in, the problem was is that the underlying
tools just weren't quite there.
That being said, that could change over time, but it's just not quite there yet.
The problem I had with it is I would use it one time and it would have one user interface
and the next time you use it, the user interface did a 180.
That was Patrick and we certainly talked about that.
He felt like he wanted to continuously, in his eyes, improve it in a way he felt was
good.
I would have preferred it just stuck to something that was, I don't know, maybe voted on or
just something a little more tame, but he had a vision for it and I think he was just
trying to find what worked for him in his eyes and I can't speak to it specifically,
but I would agree that I really wish it would have stuck to one thing or another because
it was – I had to relearn it too and I was part of the project, so every time he'd
do a new one, I'd be like, oh, I have – the SVN would come out and be like, okay, wait,
what the hell is this?
How is this working?
Where do I find it?
Yeah, it's totally – I totally get where you're coming from there.
Yeah, I think that was part of its failure is it kept changing every other week from
what I saw.
That was part of the failure, yeah.
The other part of the failure that I experienced from most people was that the technology wasn't
universal from like say Fedora to Debian, from Debian to Arch, from this to that to
the other thing.
They had a completely different experience and performance.
It was wrapped in Java, which of course added a whole other layer of challenges and there
are just a lot of – there are a lot of factors.
Yeah.
Yeah, for sure.
Also, going back to LightWorks, you're forgetting too that LightWorks is not an easy program
to learn.
No, it's not though.
The interface is very old school and analog style, so it takes some getting used to, that's
for sure.
Yeah, it is.
Completely agree.
It is very different.
I'm going to stop here for a sec and sort of like rotate the conversation a bit to – this
really came down to probably for me one of my biggest ever like as a Linux user like
moments where I was like, what am I going to do?
This is coming down to like my core beliefs, but also the practical business sense in me
who says, well, I know as a businessman, I'll be cutting my arm off if I drop all video
support.
Well, come down to would you like to eat next month?
I mean, really?
Yeah.
I mean, that's really the meat and potatoes.
You know, so this was – so I want to talk a little bit about like some of the things
we struggle with there and maybe we'll get the Mumbles room take on some of the things
they've run into and maybe if in the end, we aren't all happy if we do stick with the
ideals.
But first, I want to talk about Ting because Ting is a perfect sponsor for the Linux unplugged
crowd.
Ting is mobile that makes sense.
My mobile service provider and Matt's mobile service provider, you can get started by going
over to linux.ting.com.
Now Ting does things really different than most carriers.
First of all, no contracts, no early termination fees.
I know you guys like that quite a bit.
The other part is you're in control.
You own it and you only pay for what you use.
They take your minutes, your messages and your megabytes.
They add them all up at the end of the month and whatever bucket you fall into, well, my
friend, that's what you pay.
Yeah, actually, it is true.
It is true.
You don't have to know somebody in the biz to get a secret deal.
Ting's got your good deal.
You just pay for what you use at Ting and you can get started by going to linux.ting.com.
They got a lot of great devices, some really good devices and testing if you know what
I'm talking about.
This is fun.
Oh, man.
iPhone.
iPhone.
Oh, I had a little...
That too.
Yep.
Boy, we both had a little tickles in our throat.
Oh, my goodness.
Weird.
Yeah.
Weird craziness.
Yeah, and you can always stay up to date on what Ting's up to by going to blog.ting.com.
And I want to say, go over there because you're going to be pretty impressed.
Average Ting bill is $21 a month per line.
Now, did you know that Ting is a shared pool of minutes?
So if you have several phones on a line, you guys all just pay for what you use.
You just pay $6 for the line.
So in my case, if I have myself and my mom on a plan or myself and my wife on a plan,
each of us will just end up paying for whatever we use, but we can share from a pooled set
of minutes.
We can also...
And all these plans include hotspot, tethering, voicemail, picture messaging, caller ID, all
the stuff you'd want.
And they have a...
There's an excellent Ting app and an excellent Ting dashboard on their website to let you
stay on top of all the stuff, add devices, rename devices, remove devices, order new
devices online.
It's really great.
Their online control panel and the Android app together give you so much visibility on
what's going on with your Ting account.
And I'm a year in now, really, almost, 11 months, I think, into my Ting service.
Yeah, about 11 months, I think.
I keep coming back to one of my favorite things about Ting, now that I'm a long-term customer,
is that dashboard.
It's just so well done.
It really sets the bar.
And that's what I'd say about all things Ting.
They set the bar on everything.
They set the bar on customer service.
When you call them, a real person answers the phone.
They set the bar on how they sell to you.
They sell direct, they sell off contract, you own the device.
They set the bar on the way they bill, and they set the bar on their transparency.
People love Ting, and I love Ting.
I think you guys will love it, too.
So go over to linux.ting.com.
That's going to take $25 off your first device.
If you've got a device that's compatible with the Sprint network, go check out the list
of Ting's compatible devices, because they're going to give you $25 on your first month
of service.
And if you're like most Ting switchers, that means your first month's going to be absolutely
free.
So keep that in mind once you discover what a cell service should really actually be like.
You'll never go back.
Even though there's no contracts and no early termination, you're not going to switch.
Because then you are going to be in a position of power.
And as a pro user, I think all of you guys know, it's like getting a Linux box without
root access.
It's just ridiculous.
It's like root access to your carrier.
That's really what it is.
It feels like you have root access to your carrier.
I call these folks.
I have a question or problem.
They are not going to put me on hold and get someone else or deal with whatever.
They're going to solve my issue because they're empowered to do so.
You're the boss.
You're the boss.
Yes.
So a big thank you to Ting for sponsoring Linux Unplugged.
And thanks to you guys for supporting our sponsors, letting them know that you appreciate
them keeping the Ting show, the unplugged show on the air.
And go get started by going to linux.ting.com.
Oh yeah.
Okay.
So I bring this open to the mumble room.
Anybody can chime in any time.
But I honestly, I probably have never struggled like this, like I had a few months ago.
When I tried to do it kind of, because I felt like it was a business thing, I didn't need
to make a big deal about it on there.
I didn't need to say much about it.
I just felt like, I think I bitched to Matt like before we went live, like, oh man, I've
been in a bad mood for about two days.
Oh, I feel you.
And I totally, I totally understand.
I really do.
Yeah.
It's just like, it's a lot of money.
It goes against my ideals.
And that was really part of it was like, I don't, I don't like vote.
I'm a big, I'm a big proponent of voting with your wallet.
Like I really think out of all of the, out of all the things that go on in this world,
one of the few things we have control over is how we spend our money.
That's one of the reasons I recommend Ting.
That's why I recommend System76, because we can vote with our wallets and we can actually
make a difference by how we spend our money.
And I believe that by me spending $5,000 or whatever it was on a Mac Pro was not me voting
appropriately.
That was a bad vote in my opinion.
Not going with an open source system was a bad vote.
And in this case, if Wirecast had been open source, I could have looked at that and could
have determined, holy shit, this is not a 64 bit application.
I'm not going to spend $400 on this.
Oh, no kidding.
Mind you, I still would have bought it even though it was, you know, $400 by the way,
it was the discount cause it was an upgrade.
I originally spent a thousand dollars on it multiple times over.
So I've probably spent $2,000 on this wire, $3,000 on this Wirecast.
And not even, yeah, I was going to say not even counting all the support hardware and
other support factors that go tie into it.
I still would have paid for it if it was open, but I at least could have gone and figured
out on my own if it was 64 bit.
And it was a total black box until I bought it and I took it home and I unwrapped it.
Boom.
There's a 32 bit stinker in the box for me.
Here's what I want to say is with Apple having this push towards everything 64 bit, why did
Wirecast stick with 32 bit?
I think that's just legacy, man.
I think it's because it's so much of what it would be such a fundamental amount of effort
to rewrite it to 64 bit.
They're probably, they said they're working on it, but it's probably a multi-year process
for them or something.
Well, and I think part of the two is they get something that works and then of course
they have to, they have to slowly migrate that out.
So 64 bit could be and have been in the works for a long time now and it's still just not
ready.
So.
If you have to go through the trouble of updating all the libraries and everything that goes
with it.
Yeah.
It's kind of like if you pay $1,000 for an application that you need to step up and do
that.
It is 2014.
Well, and to their credit, you know, like one of their develop, I've actually now been
connected to a developer I believe based because I submitted some bug reports and you know,
so it's kind of funny.
Like in some sense it was a little bit like an open source relationship where I found
a bug, I submitted the bug, the guy who's now taking ownership of the bug is now contacting
me directly and I'm giving him details.
But that's only because I gave him a good bug and because I'm technically literate,
I can troubleshoot with him.
It's because of their convenience.
They're doing it.
I've also had experiences where I've been completely left out unanswered, right?
So I guess I feel like there's more control taken away and when it's a core business function,
that's where it needs to be under your control in the absolute every sense of the word, right?
You really need to be able to guarantee it.
And if it was open source, I feel like that is much easier for myself to guarantee.
Well, I think so because if it's not being done, you have the freedom to go and find
a shop or a person or a developer that will get it done for you.
You can say, look, they're not, you know, this person's not developing it with, what
can we do to basically work around it or to come up with an offshooter?
You know, you have some, you have some tools to work with.
You're not in some weird vendor lock-in situation.
All right, Mumble Room.
So what do you think?
Have maybe tried going audio only for a little while, stuck to my ideal guns and say, no,
this far, no farther?
No, no, no.
Absolutely no.
Absolutely no.
No, no.
I don't think the fans of the Poe Show would have forgiven you.
That's true.
Yes.
Yes, you say?
No, I'm just kidding.
We're not biased at all in any way, shape or form.
Okay.
No, let's put it, let's look at this like a logical sort of way.
Okay.
You are, you're a YouTube sponsor.
So you put your videos out and you put them out onto YouTube.
Well, yes, you could put the audio out on YouTube, but the thing is people probably
wouldn't watch them, to be honest.
Oh, this show is mostly audio only.
Yeah.
But how popular is this show compared to the Linguist Action Show?
I mean, if you look at views on YouTube compared to this, to this show, the Linguist Action
Show is much more popular.
Well, for me personally, I start watching on YouTube and then I found the website and
watched all the back episodes, but if I hadn't saw it on YouTube, I wouldn't have known about
it.
That's really the big thing about YouTube.
YouTube is big about the discovery.
And so YouTube we find brings, people find us on YouTube.
They watch there for a little while and then they transition to the site usually because
they want it on demand.
They want it in their RSS feed or they just want to watch the HTML5 version on the website.
Right.
For a nice callback, I actually found last because of the webcam studio review.
Did you really?
Oh my gosh.
Nice.
I personally found about this on YouTube, but if it was not a video, I wouldn't watch
it.
Right.
Yeah.
I mean, there's a, there's a, and anything I've noticed over the years too, which this
is a little bit of a pro tip for anybody who wants to start a podcast, I suppose, is nobody
shares links to audio shows.
Nobody does.
But if you say something in a YouTube video, people will share a link to that, right?
And the other thing is you can like even link to the time code, which is really nice.
And so like just for people or, or like when, for example, when we did a review of Cinnamon
2, right?
Clem did a post on the, on the Cinnamon blog about it and he doesn't embed the MP3 file.
No, he embeds the YouTube video.
Right.
Exactly.
So I'd say unless you're doing something like a distribution review, the only show I'm really
engaged in visually watching would probably be the Fo' Show.
You talking about my Weiss boobs?
Awkward.
Technically, you just implied it.
No, it's the lower third.
Hey, Chris, I got a quick question for you.
If you had gone audio only, would that have affected the sponsorship at all?
Maybe.
Yeah.
That was, that was a part of the consideration because there'd be less numbers, right?
Yeah.
YouTube isn't so important.
I mean, we love you guys on YouTube.
Don't get me wrong impression.
But I mean like if you came to me and said, sorry, you can no longer publish to YouTube,
I'd be like upset about it, but it would not affect the business.
But you know, if you cut off all videos, like all the downloads, all of the embeds on our
website views, that would impact the numbers.
And so, you know, at least it would affect the rate we probably charge, but it would,
I think, you know, part of it is, is there's just an extra level of cache to being in video,
I suppose.
And I think with the sponsorships, you know, you display the product of like System76,
you display the beautiful machines or you show the phones off for Ting or their website
or how you set up a plan.
Yeah.
Yeah.
What about doing audio for some parts, like during the interviews and stuff and then just
do editing the rest later?
Well, so if you're going to do video, might as well do video.
There's no point doing part of it or doing part of it video.
Yeah.
Go big or go home.
I guess it's funny because here we are, a bunch of Linux users, obviously very passionate
about Linux, but there is a practical element to it, right?
I guess our inner RMS only goes so far.
That's true.
I think it's the side of us that see, you know, the whole open source versus, you know,
free software argument.
It's kind of that point to where the open source folks are a little more in tune with
just wanting to use it because it works or it's providing no vendor lock and it's providing
various benefits where the other crowd might be more about, you know, to hell with convenience.
It's all about ideals.
I guess so.
Yeah.
That's just my view.
Freedom is negative in the practical dimension.
Wow.
That's pretty good actually.
I like that.
It's just negative in the freedom dimension.
All right.
Okay.
So I continue to, it was an interesting technical battle because it also involves, every show
has a profile.
Yeah.
Like, you know, which camera shots, which lower thirds.
This show has a profile for the chat room shot or my screen or whatever, there's a few
other in there, prerecorded or reruns.
And every show has to have a new profile built for it for Wirecast 5.
And that is a ton of work.
So this week has been marred in like the technical problems, you know, hitting just bugs.
And it's funny because there's still bugs that were there from four and they're in five
now too.
You know, so it's like some of the same bugs that used to cause it to crash now new bugs
too.
But on top of that, then it's creating a new profile for every single show before it airs.
Like there was nothing for unplugged until about an hour before the show went on the
air where I recreated everything from scratch.
Yeah.
And those are serious bugs, right?
I mean.
It's wild.
I mean, it has been a process, Matt.
It has been a process.
And so, you know, I go back to, I've been a big advocate of rolling software.
There's obviously when you come into production, there's, there's something to be said about
stop working.
Yeah.
My wife, you know what, when I told my wife, when I told her, I was like, well, I considered
deploying with Wirecast 4, but then I'd probably would have had to do an upgrade.
I probably would have had to upgrade like a month or two down the road or even a few
weeks.
She just looks at me and goes, you could have gone with Wirecast 4?
Noob.
Probably going to call the noob on my wife.
Well, yeah, because she's looking at it through practical eyes being like, why did you make
this more complicated than it needed to be?
I think, you know, I think that's probably how she sees it.
I was like, well, if I got to go, I might as well go to the latest version.
It's been out for weeks.
Oh, and we trusted that, you know, you had a recommendation that it was going to work
and the fact that, you know, it had been out for a few weeks.
We would assume based on its price tag that it would function.
But alas.
Surprise.
I mean, I don't want to know.
So it's funny because even in its sort of current state, it is still more functional
than pretty much anything else.
And it's interesting because I've been using Wirecast really since we went video, right?
Back when I was recording the Linux action show here in this office with webcams and
weird angles and stuff.
And you know, it got very little recognition by the pro industry.
It's a toy.
But now a lot of stuff that is going on live is using Wirecast.
It's totally worked its way into pro level production.
So I think that's good for hopefully the quality of it, but it doesn't seem to have directly
impacted the quality just yet.
So is Wirecast the subscription service or did it pay you once?
No, they're pretty good.
They're pretty good.
You buy the major version and then like, you know, for I had a couple of year run at least.
And so I got every update.
You drop cash once and then you own it.
You don't have to pay a monthly thing.
Yeah, yeah, yeah, yeah, exactly.
And so and then I also got I got I got grandfathered in on the price instead of having to pay a
thousand dollars.
I paid like three ninety or something like that to get the upgrade.
Well, you know, and that includes everything, the virtual sets, the green screen capability,
all of it.
So it's it's pretty functional.
There's an anecdote I just found somebody was asking if there's ever going to be a Linux
version and then reply from the from the one of the community managers or moderators said
you could use a Mac.
Yeah.
Yeah.
Wow.
That's the response.
You know, ironically, if they came up with a Linux version, even if I even if I would
prefer just even if I even if it was still closed source, I'd still prefer to have it
on Linux.
Well, and they would probably be especially as temperamental as it is.
They'd have to bake it in to one release and then every time it's updated, it would have
to be baked in to that release that is then cooperative with it.
It could not work in like, you know, the fact that they still have to work on a 64 bit Mac
version.
Exactly.
Yeah.
So we're so far off.
It doesn't matter.
Right.
I mean, yeah, totally.
Yeah.
You know, so there you go.
There you have it.
I also thought about, you know, going audio only would mean like it'd be way easier to
do shows on location.
Doing audio on location is is diametrically simpler than doing like it's just unbelievably
simpler than doing video.
Yeah.
I mean, I wouldn't have to.
I wouldn't have to drive.
I do what I do now.
You know, pants would be optional.
Right.
You know, if we want to get away with that anyway, your legs are underneath the table.
You could be just in your boxes with like a nice shirt on.
That's true.
That's true.
Well, you know, I mean, Chris has always been great about wearing pants, you know, most
of the time.
Most of the time.
You know, it's you know, unless it's like no pants Friday.
I don't think I've ever done a show with shoes on.
But at least I'm wearing.
Oh, well, you got your comfy slippers.
Yeah.
Sometimes slippers.
Yeah.
Just depends on how cold it gets out there.
Yeah.
I might have missed this one.
Has anybody, have y'all ever looked at open broadcaster software?
Yeah.
Oh, yeah.
Yeah.
Have you ever considered like for doing remote stuff like TriCaster?
Yeah.
TriCaster is another way to go where it's sort of like a dedicated piece of hardware.
But you know, to get into a TriCaster to do what we need, it's starting at ten thousand
dollars.
Yeah.
I was going to say that.
Yeah.
And then it's a Windows 7 box that I have to have in my house.
Which.
But last time we went to the, what was it, the convention that Perlo was putting on,
we actually found, I think a TriCaster alternative we were looking at.
That product.
And again, it was like a Windows 7 type box.
That product was built on Wirecast.
So Wirecast works on Windows or the Mac.
And I think one of the reasons why it's gotten shittier on the Mac is because they've been
working on their Windows version.
Right.
But that is sort of like a combination of things.
Like here's a hardware appliance, we've streamlined it down.
Here's a switcher for it.
Like there's a lot of little more pro level solutions being built up around it.
Yeah.
They just need like an Indiegogo or something for Jupiter Broadcasting to get one.
I'm surprised, I'm surprised I'm asking this, but would Wirecast work on Wine by any chance?
I don't, you know, I couldn't imagine with all the video piping it has, hooks to QuickTime
and whatnot, I would imagine that would be a pretty.
That would be probably harder than bringing Netflix to Wine.
I mean, which was doable and did, but even then it was, the breakage was constant.
Pipelike, we have actually got Netflix working in the Firefox browser.
Just took them, it took so long, they almost have HTML5 now, but yes.
Yeah, I think it was Pipeline.
I also think in some instances, at least some people in Firefox actually had to use a user
agent switcher just because of the old.
Yeah, you do have to switch.
Yeah.
But it works.
Yeah.
I just use a Roku, that runs Linux, I don't know.
I mean, the video production stuff is about as complicated as it gets because it's constantly
pushing the GPU, it's taking in multiple video signals from different sources, it's writing
to disk, it's encoding video and streaming it over the network.
I mean, it is, there's basically, there's no more demanding software out there.
Right now, I've got a pretty high-end Mac Pro out there that's running at almost max
capacity because it all just pushes it.
And of course, it all got crappy when it went to HD.
That's where things really got difficult.
Oh, definitely.
Well, and going back to the whole crowdsourcing campaign, a good example of what that would
actually look like is, let's roll back to the OpenShot campaign and look at where they're
at currently.
Yeah.
It was successful, but they're still trying to build this out in a way that's going to
be practical.
So even if we, you know, that's how big of a project it is.
And like I said earlier, I think, you know, that's only a very small part of the overall
plan.
Yeah, exactly.
But listen, I think we should probably wrap it up because who knows how much longer this
thing's going to run.
But I did have an email I want, I know, no, seriously, we go too long, this thing might
just run out of memory.
See what I say earlier was at 95% and right now it is at, no, it's still sitting at 95%
good.
Oh, it was at 93 earlier, now it's at 95.
All right.
Well, we do have a final email I wanted to touch on before we run.
So this one came in from Jonathan.
He says, thanks for the great show and all the work.
I was hoping you could announce the release of Sonar GNU slash Linux 13.10.
Thanks to the Sonar campaign, we were able to get better sounding voices for the Orca
screen reader.
Wow.
Yeah, this is a distro that is targeted to folks with disabilities.
He says, we're working on some LibreOffice buffs, but not sure when Sonar will release
those.
Sonar has an assistive technology for blind users like the Orca screen reader, screen
magnification for low vision users, a font included for people with dyslexia, an on-screen
keyboard with customizing the mouse for people with low motor skills.
He says, there's also software included for paraplegics to move the cursor of the mouse
just by moving their heads or eyes.
And you can find it at sonargnulinux.com, sonargnulinux.com, we'll have a link to that
in the show notes.
How awesome is that?
That is so cool.
He wanted to help spread the word because they just shipped version 13.10.
That is awesome.
I mean, because I've looked at other projects, I think it was the Adrian set up in the Canopix
and things like that.
Oh, yeah.
You know, I've looked at other stuff like this, but I love the fact that they have better
voices in Orca because that's a big one.
And the fact that they're addressing dyslexia is mind boggling.
I mean, I don't have dyslexia, but I have a laundry list of learning disabilities.
And so for someone like me, that would be awesome, you know, that'd be great.
Yeah, that is really cool.
And so Jonathan sent that in and I might try to remember to give it a mention on last too
just to help extra spread the word because I feel like there's so much opportunity there
and we need to start working on it now because the Microsoft gravy train is drying up and
people aren't going to be sure to Microsoft and we need to have people don't want to or
people are not going to want to use a tablet interface on their desktops and the desktops
aren't going away.
And so people start switching to Linux.
We need to have solutions available for people that have these disabilities.
So sonar gnu slash Linux at sonar gnu linux dot com and we'll have a link to that in the
show notes and you know, congratulations to them for for working on something that really,
you know, probably doesn't get enough acknowledgment, probably doesn't get enough attention.
Well, I love the fact that rather than doing what a lot of other similar projects have
done to where basically they just keep redoing what's already out there.
These guys are not only trying to make it better, but they're actually addressing specific
needs such as better voices and other factors that weren't being addressed previously.
So I love that.
Yeah, absolutely.
Good stuff.
All right, Matt.
Well, that brings us towards the end of this week's unplugged.
Now, don't forget on Sunday we're doing our open Sousa 13 one review.
I think that's going to be good.
Looking forward to that.
And that'll be two weeks of open Sousa love on the big show.
And you guys can join us for that on a Sunday morning.
Don't forget you can join us live for this show, too, for Linux Unplugged.
On Tuesday afternoons, we start at two p.m. Pacific over at jblive.tv.
Jupiter broadcasting dot com slash calendar has it in your local neck of the woods time
zone.
Don't know what that is.
That's time math.
We have time.
Yeah.
Even with time zone changes.
We have time.
Oh, we can also get a hold of us.
Go to Jupiter broadcasting dot com and pop that contact link and send us an email or
visit Linux action show dot reddit dot com.
Matt, I'll talk to you on Sunday.
All right.
Sounds good.
See you then.
All right, everyone.
See you right back here next Tuesday.
We'll see you then.
