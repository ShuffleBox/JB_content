So I got this text message from DHL, the delivery service,
saying, hey, your thing from China is about to arrive.
Are you going to sign for it?
And I'm thinking to myself, thing from China?
What did I order from China?
You ever have this problem?
Or maybe I'm just ordering too many things.
I think you're ordering too many things.
So we open up the box, and we pulled out
what was basically 100 little different parts
that once you assemble it, you have the Clockwork Pi
dev terminal.
This thing's really retro looking.
Yeah, it was super fun to put together, too.
I will admit, we did look at it for about three minutes
once we opened the box and said, what is this thing again?
Why does it have a thermal printer?
Once we dug into it, though, it's actually really great.
They set it up so that you can just build the thing yourself,
which was a fun experience, really.
Yeah, it snaps together.
And I know your son, Dylan, was super interested,
because I was able to, in front of him, just take it all apart.
And then we built it up again.
And it was really fun and modular.
So it's basically, I guess it's Pi-based.
You're going to fill me in.
You got the details in front of you here.
Yeah, Pi 3 base.
So this is the Clockwork Pi dev term.
And it's got a full keyboard on it, which is impressive.
It also has lots of USB inputs, got three USB-As, USB-C power,
and also can run on batteries, lithium batteries.
Yeah, it doesn't come with the lithium batteries,
but they're just a standard size that you can order from Amazon.
And we did just that.
It runs Armbian, which was fun.
That was my first dive into that.
And this expansion port with the thermal printer, I thought,
would be kind of fun.
So we're looking for ideas of what to do with this thing.
It also has a mini trackball at the very top of the keyboard.
A la Blackberry.
Yeah, exactly.
And then on the far right side of the keyboard,
above the Backspace key, it has a X, Y, B, and A
sort of Super Nintendo-style gamepad buttons.
It has arrow key buttons on the far left side of it.
It's pretty fascinating.
I'll be honest, a little tough to type on in that size.
It's true.
It's just right for Dylan's hands.
It was fine once I taped those pencils onto my fingers.
Right.
I just shaved down my nails real good.
And ours also makes a hilariously loud buzzing noise.
It's really too bad when you have it
plugged into the power source, which in this case
is a USB-C power source.
It kind of does that electronic hum that everybody hates.
And so we were thinking of having it in the studio
to control the soundboard for guests and stuff.
But it's just so irritating.
It's too noisy.
It's fine with the battery.
Right.
Once you charge up the batteries, it's totally fine.
So now I'm just thinking there's going
to be some way that we could have something that prints out
on that thermal printer from time to time,
because that's just too much fun.
Someone once suggested the, well,
it was Dylan actually that suggested having the Bitcoin
price once an hour just print out on this thing.
Oh, no.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris.
And my name is Wes.
Hello.
My name is Brent.
Oh, hey, Brent.
Yeah, Wes is actually out on assignment
trying to work out a distribution deal with Spotify
because everybody's doing it.
But this week, we thought maybe it was the perfect moment
to talk about how open source can help save podcasting.
Really, what I mean by that is keep
podcasting independent and decentralized
so it doesn't end up behind these giant corporate platforms
like Spotify.
Not that we have any problem with you choosing
to listen in Spotify.
In fact, we think that's an important aspect.
You should have the right to choose any player you want.
And that's what we're trying to protect here.
And it turns out open source is the key.
So we thought at this point, this time of the year,
maybe we should talk about this.
Because it's something that's what's
going to impact all of you all out there.
And then to help us get through the feedback
after we're done with our interview with Dave,
we have our buddy from Self hosted.
Hello, Alex.
Welcome back to Linux.
Unplug, sir.
I like what you've done with the place.
It's nice.
Yeah.
Cozy.
Well, you know, when Brent's here, projects get done.
They do.
Oh, did we send him the picture of you
and Hadid with the construction in the bathroom?
No, we didn't.
Oh, we shouldn't do that.
Brent's been doing bathroom construction while he's here.
Few renos at the studio.
We did fix the fence, too.
Oh, yeah.
That is actually a good thing.
That fence needed.
It got blown over.
Keeps the dog in the house.
Yeah, the wind was strong that night, Brent.
It's handy having Brent here in multiple ways.
So before we get into the show, before I tell you about what
we've got coming up, we've got to do
a little bit of business here.
We've got to say hello to our virtual time appropriate
greetings, Mumble Room.
Hello.
Hello.
Hello, everybody.
Thank you for being here on a Sunday.
It's nice to see.
We've got about 21 people joining us in there today.
A lot of people just choosing to hang out
in the quiet listening, probably kind of cool on a Sunday.
You know, you pop in, you get a nice high quality opus
codec and low latency, and you get to listen to the show.
And if you want to say something,
you can pop in the On Air channel.
Perfect for doing your Sunday chores.
And it could get even more real if you want
to join us here at the studio.
We have a meetup coming January 30,
right here at our humble little abode.
I have the meetup page up now.
I'm going to use a meetup for this one.
So go to meetup.com slash Jupiter broadcasting
for the event details there.
We're going to make it a birthday party for myself,
a little hangout and chow.
I'm going to encourage people to bring their favorite dish,
although you don't have to.
Food will also be supplied.
We just want to see your smiling faces,
because it's a big number, this one.
Sounds like a podcast potluck to me.
Yeah, it is kind of a podcast potluck.
So what I was thinking, and I haven't really
sorted out all the details yet.
I don't know if people are interested in this.
What I was thinking is people show up around,
what did I put in there, like 11, 11.30, or something
like that AM.
Now, we could do it another way.
But what I was what I was consternating on
is people show up, do the meet and greet, get snacks going,
and then we do a live Linux unplugged.
Put the speaker out there, put the screen up,
and everybody attends a live Linux unplugged.
And then afterwards, we break out all the food
and start eating.
I don't know, that seems like kind of the way to do it.
So if you're interested in attending a live Linux
unplugged, I mean, you'll be out in the other room,
but you'll be listening live.
And you want to then chow down with us for my big four zero,
go to meetup.com slash Jupiter broadcasting.
And if you have a small vessel of flight,
we do have a local airport about 10 minutes from the studio.
It's true.
We have to mention that because in the past, listeners
have flown in for meetups.
That's true.
There's one just here that interrupts us.
You know what?
I mean, we're just saying.
We're just saying.
You never know.
And then before we get in, if you've
been listening recently, before we get into the main topic
today, I just want to give you a brief update on our server.
Just been doing the migration thing.
Although, Brent, this is so tricky when Wes isn't around
because he may have had the solution,
but twice this week, I ended up finding these pieces
of rando software that I just wanted to try out.
You don't install those on the server, do you?
Well, this is where I think maybe I should
have set up a Proxima Xbox.
But I thought, it's safe.
But yeah, I'm going to run it on the server
because I want to hear on the LAN.
But that was not the way to go because all of these just all
assume Docker.
They all, and it's like some of them
are a shell script that assumes you have Docker.
Ultimately, I ended up not doing it on the server
because we're using Podman.
And I ended up doing it on the Linode.
But I ran into it, it was just kind of funny
because we're like, we're going to try doing Podman.
And we have probably 30 containers that are Docker.
And how many have we transitioned successfully so
far?
Two.
Ah.
Yeah, it's been bumpy.
It hasn't been as smooth as I was hoping.
I think Wes would probably be quicker at it, but you know.
You and I are just hopeless, I think.
Well, and you know me, I'm doing five things at once, right?
So I'll actually spend five minutes on the actual task
where Wes will just wait for us all to go to bed
so we stop messaging him, and then he'll just get it done.
So that continues.
We'll have more updates on that soon.
But Brent is also going to put out the word to help
us build a server cabinet.
You're looking for input?
You've got a few ideas.
Yeah, I think we've been thinking about this ever
since these servers showed up is.
We don't want to cook them next summer.
Yeah, that was an issue we were worried about on our trip
to Denver this year was the heat in that garage.
And we even considered keeping the garage
open a little bit throughout the trip, which obviously
has some implications.
So cooking up, I think, in the back of our minds
has been, what is the solution?
And I came up with so far, but I'm looking for some input.
Building a little server cabinet,
it doesn't need to be huge, but it needs to be adequate
and needs to hold, I think, a few servers while we're
doing some migrations.
Possibly as many as three servers.
And I wondered if network equipment
could be thrown in there, too, just to clean things up a little.
Probably should be.
You could always go down the Ikea lack route, the lack rack.
So most servers are 19 inches wide,
and a lack table is exactly 19 inches wide.
Well, I was thinking of using real wood,
but I will explore that.
I was thinking of using cardboard.
It's true, he didn't mention cardboard and hot glue.
I'm like, we've got a lot of boxes.
The thing about the lack setup is it's super cheap.
A lack table is like $15, and lumber prices at the moment,
they're almost back to normal.
I think it's a great suggestion, and I'm
at the phase where I'm looking, just scouring for ideas.
So I would love to check that out.
It sounds like the route I should go if I didn't have a brand.
Mayhaps.
I mean, I built a rack out of two by fours
that's been sat in my basement now
for the last three or four years working just fine.
I mean, that is the beauty of it.
Once you build it once, it's done forever.
And a lot of guys actually that do Bitcoin mining
build these plywood boxes to put their servers in,
and then they have air filters and stuff
like that on the intakes, and just use passive cooling
to pull the air through and cool it sufficiently.
I think in the winter, passive cooling
would be perfect for this box.
The summer, I think there's an opportunity there.
And Alex, I think this might tickle a few of your fancies.
I think there's an opportunity to maybe connect
some kind of cooling mechanism, so maybe a household air
conditioner, but to also connect that
to something like Home Assistant to control it and have
a look at it while, I don't know, Chris,
you're traveling and such.
Get a few ESP boards involved and measure those metrics
and find out what your parameters are.
Sure.
And why could we not share this design?
I'd like it to be approachable.
I have knowledge in building stuff with wood.
Alex, you've done some furniture building and stuff like that.
We should just do a springtime project out here or something.
You know, Alex was telling me that he's
considering buying a CNC.
So this is really where this conversation is going.
I would like to, but they are so expensive.
You know, I have run into some maker spaces
that have CNC's and stuff.
So maybe we could look up one of those.
But anyways, I'm looking for suggestions.
We want it to be climate controlled.
I think having it on casters might
be kind of neat to move it around.
You know, we could build it into the wall, but maybe.
Casters could be nice.
So that's an idea.
Also, where I was going was thinking
about working on this thing.
If it's a sealed box, it's going to be a pain to work on.
So I'm thinking removable front and back panels.
Sure.
You're going to need some working room from time to time.
That's it.
So even if you're doing a big server migration
or adding something to it, you could just roll it out,
take the front and back panels off,
get some access to all the parts and things.
So that's kind of where I was going.
I think our trickiest thing is going
to be cooling because we don't have like an outside wall.
We can drill a hole for venting.
We do have the roof.
Yeah.
Yeah, we could go out.
We could go out the roof.
There's a crawl area up there we could vent into,
which has some vents.
It's possible, although it gets very hot up there.
I think in general, you'd be surprised
with how little active cooling you would need.
Just a little bit of airflow is probably
so that the air isn't stagnant and just reheating itself.
That's probably all you need.
You need a source of fresh air and then a way to exhaust it.
And probably not even in massive volumes either.
That's probably a good point.
I mean, I'm not an expert in doing this kind of stuff.
Just getting the hot air out.
The only problem is all of the air in the garage
is very hot because the garage roof is
exposed to the afternoon sun.
So it just really heats up and the door as well.
We could consider a fresh air intake
as well that pokes out of the garage.
So there are possibilities.
But if anyone has some ideas or has even
built something like this, please.
Linuxonblog.com slash contact would be a great way
to send in your suggestions.
I'm open to receiving photographs and diagrams
and sketches and websites and things.
Things you've tried.
Please.
Hard lessons you've learned.
Please.
Help us keep our servers alive.
Or some crazy thing you want us to try.
Yeah.
Also, I'll just do a mention for extras.show.
Go to extras.show slash subscribe
because we have a couple of things coming up in the feed.
We just published Why Linux Will Win in 20 Years.
That was one of many topics that we covered.
We just had a whole list of topics we were talking about.
We threw them into a randomizer and covered them.
And some stuff that we wouldn't normally think of touching on
came up.
It was good to revisit.
Many of those topics came from listeners in our feedback
forms and were maybe topics that we didn't quite
find a slot for yet in the shows.
But we just threw them all in there
and hit the random button.
And it was really fun.
Yeah.
So check that out.
That'll be at extras.show already.
And then coming up in a couple of days,
it's our Denver road trip memories.
The secret about the Denver road trip
is during the entire trip, Brent and I were recording.
And we got a ton of audio that we've never
played on air before.
And we're going to start publishing some of that.
And the first one goes out just a couple of days
after this episode is published.
And then a few days after that extra is published,
the tech we used for our road trip will be published.
And that's a deep dive into everything
from the automation systems on the RV to the networking gear
that we use, the power tech that we used,
and obviously the recording stuff that we used as well.
So it's like a whole rundown of everything.
And it goes into the good and bad.
I mean, we had some failures that caused us some issues.
So those are always fun to talk about.
Yeah.
So that'll be published on extras.show in a few days.
It's all coming out over there.
And just a little spat of extra content for you,
because we love you.
Linode.com slash unplugged.
Go there to get $100 and 60 day credit on a new account.
And go there to support the show.
And go there to try out Stream 9.
CentOS Stream 9 is now available on Linode.
You could try it out with one of those systems that has MVME
storage.
I mean, I don't know why.
Because honestly, all their systems are screaming fast.
And the price is great.
This is a great time to go sign up for Linode.
It's the beginning of the year.
If you've been listening to the show for a little while
and you've been thinking about doing it,
why not pull the trigger right here in January?
Kick it off with Linode.
So go to Linode.com slash unplugged.
Get that $100 and really try it out.
I mean, Linode's giving you real money there to work with,
because they're confident that if they give you
an amount that lets you spend some time,
you're going to love it.
You're going to see why it's better.
You'll see the super fast systems, the easy deploy,
one-click applications.
I mean, they've been doing this for 18 years.
So as you use the system, you'll start
to appreciate all the small little edge cases
that the experience has brought them.
And the passion for the technology
that underpins all of this, Linux,
is what brought them into this.
And even 18 years later, you can still
see that DNA in the product.
And Linode has learned that customer support is critical.
So they have invested in the absolute best customer
support in the business.
I get notes from listeners all the time.
In fact, please keep sending them in.
Just go to linuxunplugged.com slash contact
and tell us your story with Linode,
because it's great to hear it.
It really has resonated with our community,
because it hits on all those key points.
Performance, customer support, a Linux culture that runs deep.
They support the community.
They support events.
They support a lot of Linux content creators.
And they support projects and free software
that enable all of this.
They really get investing in the entire ecosystem.
So let's go put everything over the top.
Go grab that $100 in credit and support the show.
Go to linode.com slash unplugged.
Chris, you had the opportunity to sit down with Dave Jones.
And he's working over at the Podcast Index.
And it sounds like they're doing some pretty interesting stuff
over there.
Yeah, they're calling it Podcasting 2.0.
And I like it.
I think it's a great name.
It really describes what they're trying to do.
And I thought, this is a topic that impacts all of us.
They're using open source to try to decentralize and keep
podcasting independent for those who want it, to give listeners
the choice of app and way of listening, however you want.
It's, you know, keep it an RSS feed that you consume.
And so we thought, this is a great moment to sit down,
talk about these challenges, maybe more so right now
than ever.
Podcasting is in a precarious place right now.
There's a lot of really big interests
that are trying to influence the market.
There's downward pressure on the price of advertising.
And there's just a lot of podcasts.
Not to mention, certain players in the market
are beginning to move forward with agendas that are really
kind of aimed at locking podcasts up into their silos
and monetizing them even further.
So my guest today is Dave Jones.
And along with Adam Curry, they launched their Podcasting 2.0
initiative about a year and a half ago.
It's a platform that has an index and an umbrella
of open source applications and an API.
So we kicked off the conversation
when I asked Dave what sparked the idea
for a decentralized podcast platform in the first place.
I guess the abbreviated version of that
is that a guy I've been working with for a long time,
widely known in podcasting, co-invented podcasting,
is Adam Curry.
And Adam and I had been friends for probably 10 years or more,
working on various projects around RSS
and feed aggregation and OPML.
And we jointly built a show notes
system for his podcast, The No Agenda Show, which is huge.
Got about a million listeners.
And so we had kind of been through the trenches
in aggregation software and RSS.
But he called me about a year and a half ago and said,
maybe a little bit longer back, said, hey,
this whole thing with Apple sort of controlling the default
search, sort of the yellow pages of podcasting, number one,
makes no sense.
And number two, it's concerning with all the deplatforming
going on and all this kind of thing.
And so what you end up with is this
was supposed to be an open, decentralized system
of podcasting built on RSS.
And that's true.
It mostly operates that way.
But then when you look at, in practice,
where do you go to find podcasts and where
do all those things live, everything
goes to Apple, which is literally the largest
company in the world.
So you have this huge dichotomy here
between what podcasting is supposed
to be at a technical level and what it actually
is in practice.
And he's like, we really need to change this.
And we have the chops to do it.
So why don't we get together and create an index
to begin with, an open directory of podcasts,
and then tie an API to it to where any app developer can
write an app and just hook into it for free.
We'll have it be donation-based and not a paid product.
And then we'll do a podcast to go along with it.
And as we build it, we'll just podcast about what we're doing.
And hopefully, we'll get a whole bunch of app developers
on board that are struggling to pay for all the infrastructure
that it takes to run a back end for a podcast app.
We'll make that easier for them.
And in the process, we'll build this alternative directory
to Apple so that we can take that centralization away.
And then in the process, one of the elements of it
will be we'll give the whole database away.
So I was like, hey, that sounds like a challenge.
Sounds fun to do.
Yeah, let's do it.
And so that's kind of where it was born about a year
and a half ago.
It sounds like Apple was definitely a major influencer.
But how much more critical has this idea
become since Spotify has gotten so invested in podcasting?
And I know you're familiar with the fact
that YouTube just announced they want to get involved
with podcasting.
So the idea of a decentralized podcast
index that's essentially just backed
by people who are motivated by podcasts' best interest, right?
I mean, it's great that Adam Curry is involved.
And I sniffed around on the socials and checked out
a couple of the podcasts.
And the motivation is obvious.
You guys want podcast index to be the place that
is sort of a trusted, not connected
to any particular commercial cornering the market interest.
Yeah, that's right.
So we kind of have our motto, if you want to say,
or mission statement, is preserve, protect, and extend
the open podcasting ecosystem in that it's not just words.
There's sort of meaning behind each one of those.
And what you just mentioned was Spotify.
And then later, Apple coming in and beginning
to wall the garden as well with their subscription product
and that kind of thing.
You've always had this effort to wall
the garden around podcasting.
But really, in the last three to four years,
it's gotten to a fever pitch.
And you now have the CEO of Anchor coming out
and saying they're going to actively push their users away
from RSS.
You don't even get an RSS feed when
you start an Anchor podcast unless you request it.
And supposedly, the reasoning behind that is RSS is antiquated
and it can't give the new modern features
that everybody expects from a platform, which
is completely bogus.
But we had this idea to preserve, protect, and extend
podcasting.
And that's really aimed at that.
Where you've got to fend off those walled gardens.
And to do that, you have to have a directory and an API
that everybody can look into that's not
dependent on one of those guys.
And then you decentralize everything.
Don't keep it a single point of failure
because then you're just recreating the same problems
that those guys have.
And then you build around that a vocal group of people
who are like-minded and also are committed
to the open podcasting preservation.
And then finally, you extend it by creating a namespace,
which is what we've done, and just listening and asking
people, what features does everybody want in podcasting?
Technical features and user-facing features.
We've spent the last year just building out
a comprehensive namespace for RSS that has
all of those features in it.
And I can tell you this, there is no silo or walled garden
Spotify, Apple, anybody you want to name
that has anything close to the feature list
that open RSS has at this point.
The podcasting 2.0 tags are killer.
Let's talk about that.
So this is something that, as a content creator that publishes
everything as a podcast, I have felt like this hasn't really
moved much.
And then we started seeing these siloed platforms
introduce their own proprietary features
to go along with podcasting.
But what you guys have done here with this namespace stuff
is super appealing, like really taking podcast chapters
to the next level, for example, allowing images really
to be displayed in line, not necessarily
even with a particular chapter, but with time markers.
And I love the idea of a sound bite
tag that kind of identifies to the podcast player
that the publisher has said this is like a good little preview
sound bite if you'd like to listen to a bit from the show.
I think that's awesome.
I wish we've had that for years.
And that's just like two of a bunch of really good ideas
that are in there.
But it seems to me you've got to get the podcast apps
to support that stuff, right?
Yeah, and that's always the issue.
Whenever you start a project like this, what happens
is immediately people start pelting you from on high
with XKCD comic references.
You know, you've got 13 specs, and you're
going to create a unifying spec, and now you just got 14 specs.
And you just get all this sort of like, not hostility,
but just sort of negativity around, oh, here's
another standard, and they're going to fix everything.
And then you had the chicken and egg problem
of who's going to support it first, the publisher or the app.
And so there's always that kind of thing.
But what we found out was that it's really necessary
to do some of this stuff, even if it slightly recreates
the wheel in some respects.
And I'll give you a perfect example, something
like the funding tag.
Now, you could do this before the podcast namespace funding
tag.
You could have a link to a PayPal.
There's an atom link called rel="payment,"
and you could do that.
And there was some support for it in apps.
It was, I don't know, 50-50.
But you take a thing like that, and then how
do you actually extend it?
There's nowhere to go to talk to the developers
if you needed to tweak that.
Let's say that you're going to try
to tweak something like Dublin Core, which
is another popular namespace extension for RSS.
That committee or working group or whoever had that,
that thing's gone now.
Same with Media RSS, which was part of Yahoo
back a million years ago.
A lot of these things that exist in RSS as namespace extensions,
they have no more leadership anymore.
They have no working groups.
They have no place that you can go
that if you wanted to modify the spec to meet a modern need,
you can't do it, or there's nobody in charge of that thing
anymore.
It's failed.
So what this is is we will recreate the wheel
in some respects with some of these tags,
but they're modern, and there's a group that now exists
that's in control of it.
You can go and say, hey, I think we need this extension
to be tweaked a little bit, or I think
we need this extra attribute on this RSS tag.
And everybody talks about it, and we all
come up with a solution, and it moves forward.
And so one of the things that you talked about
was the soundbite tag.
That didn't come from us.
That came from Buzzsprout, the hosting company.
They had this idea for a soundbite tag for a long time,
and they popped up into the namespace one day and was like,
hey, we've got this soundbite tag.
We're already using it, but no apps have supported it yet.
And so we're like, yeah, this looks great.
Let's formalize it into an actual namespace declaration
and make it happen.
Same with the transcript tag.
We added the transcript tag so you can just
take any SRT or WebVTT or JSON-based transcript,
and it's just a URL.
You drop it in your feed item, and you can specify it,
and the app can go look for the transcript
and pull a time code to transcript down
and give you close captioning.
And so it's those types of things
where sometimes we're recreating the wheel.
Sometimes we're creating something new.
But the real purpose of the whole thing
is to have an actual group that exists in perpetuity, that's
open source, that's community-led,
without being dependent on any corporate backing, that
will forever be in charge of this spec
and is purely for the benefit of podcasters.
Finally.
This is my livelihood.
I've been doing this for like 14 years.
I mean, I've been doing it since people
were burning MP3 files to CD-ROMs to listen to my shows.
So I really do appreciate it.
And I know that one of the things we've needed to do
is sort of fill out podcasts a little bit,
give them a little bit richer of an experience.
They've kind of just been the same for a while.
And I was really worried that some closed ecosystem was
going to be the only way that was going to move forward,
and consumers would move there because of the features.
But you guys are also doing some other stuff
beyond just the namespace stuff.
Tell me a little bit about Podping,
because that seems like as podcasting gets
way more successful, and you have all these users
with mobile apps and whatnot that are checking in on feeds,
it sounds like Podping is maybe a solution that scales
a little bit better here.
Yeah.
We've tried to, in the second leg of what
we're doing with protecting podcasting,
is decentralizing everything.
So it's really important to decentralize
every bit of our infrastructure so that we don't just become
another single point of failure.
We use IPFS extensively.
We use Activity Pub everywhere we can.
And one of the things we've been doing
is a lot of blockchain work.
And as sysadmins, which my day job is as a sysadmin
in financial services, is you hear blockchain,
and you roll your eyes, and you're like, oh my god,
here we go again.
And it's like the solution without a problem.
But blockchain does have a very narrow use case,
which it can do that really nothing else can do.
And that's where Podping comes in.
And so this whole web 3.0 world, where these distributed apps
are running on blockchain, we found a blockchain
through a guy who's part of our group, and it's called Hive.
The Hive blockchain.
It produces a new block every three seconds.
And what we've done is created an open piece of software.
It's written in Rust.
And it's basically just a web front end
and a blockchain Hive writer on the back end.
And it just takes an authorization token.
So if you had like Jupiter Broadcasting wanted
to inform the whole world every time you published
a new episode or made a significant change
to your feed, you could call out to Podping
with your auth token and just a simple get request
with the feed URL in it.
And the Podping system will take that URL,
write it to the Hive blockchain, and then everybody
in the world can, since it's a public blockchain,
can just read it with a simple Python script.
And within three seconds, everybody knows, hey,
this podcast has just updated, and you don't have to poll.
You don't have to sit there and hammer your RSS feed 25 times
an hour to see, have you published yet?
Have you published yet?
Over and over.
This is a decentralized blockchain-based push
notification system for podcasting.
So yes, what Podping is.
We're pretty jazzed about it because there's
been attempts to do stuff like this in the past.
The most famous attempt is Websub,
which used to be called PubSubHubbub.
And it works.
But the problem is it's a server-based system.
So if my server is not listening all the time,
I don't get your webhook calls when you publish a new episode.
The other issue with Websub is it's subscription-based.
So if I'm monitoring the podcast index,
we have 4 and 1 half million podcast
feeds in our database, that means
I would have to have 4 and 1 half million Websub
subscriptions that would be resubscribing
every 7 to 15 days.
You'd spend all day just resubscribing to feeds.
So this system is purely push-only.
There's no subscriptions.
It's all just public on the blockchain.
So that's one example of some of the supporting technologies
that go along with the podcast index and the namespace
to flesh out this whole thing and make it decentralized.
The last year and the next year are
going to be totally just change everything kind of situations
for advertising and podcasting.
I have a good sense.
I've been reading the tea leaves,
and there's a lot of downward pressure on the price.
Like the CPM?
Yeah.
And there's certain groups out there
that sort of are establishing themselves
as the authority on podcast advertising.
They're declaring the prices are just
like bottom basement fast food prices for podcast advertising.
And so content creators, podcasters,
we get in this situation where it's like,
well, then I got to just take on more sponsors and more
sponsors.
And you get the shows loaded up.
And then you go to dynamic ad insertion and all that.
Yeah.
Yeah.
Pretty soon you start monetizing the back catalog,
and the ads are hard cut in there.
And it's kind of like you end up these podcasters,
and I've tempted fate with this for a little while.
You end up kind of creating content
to serve the sponsors, not to serve the audience.
And I think that's why I really perked up
when I saw that you guys have adopted and are sort
of encouraging people to use a value for value model
to support podcasters.
And you're building tools in there for them.
Quickly, a value for value model is simply
if you get value from the podcaster, from the content,
you give them the value you think it was worth to you.
Value for value, and it's something
that they practice on the No Agenda Show.
And it's a concept that I think is,
it actually does deserve wider adoption.
So what does this mean for the podcast index?
How is monetizing with value for value,
how does all that come together with something that's
an index for podcasts?
The podcasting 2.0 movement is a little all over the map.
It's a little hard to sort of pin down,
but it's really sort of four parts.
It's the podcast index database and the API.
It's the podcast namespace, and then it's
the infrastructure around it, which
is things you mentioned, like Podping and Helipad
and the podcaster wallet and all this other code.
It's all open source.
It's all in our GitHub repository.
Then it's our show that we do every Friday
called Podcasting 2.0.
And for us, as an example, the Podcasting 2.0 show
is value for value.
And we're purely run on donations.
We don't have any advertising.
And we were sort of the first test case of this new technology
that we wanted to push, which is Bitcoin Lightning streaming
payments.
And so if anybody's not familiar with the Lightning
network on Bitcoin, what it is is this so-called Layer 2
technology.
So the Bitcoin blockchain is fantastic,
and we all know why it's trust no one and distributed
and no double spend and all these great things.
But the problem is it's slow.
Transaction times are extremely slow,
and the fees are expensive.
So these Layer 2 technologies have developed Lightning
being the best example.
And so it sits on top of the blockchain
and creates a peer-to-peer distributed network of nodes
that are willing to lock up some funding in channels
between each other.
So what you end up with is a mesh network
of multi-signature wallets, if that makes sense
to anybody listening.
You end up with a mesh network of multi-signature wallets
between nodes so that you can relay payments
between nodes from end to end.
So if I was going to send you, Chris,
if I was going to send you $20 of Bitcoin,
I don't necessarily have to have a direct connection to you.
I could have a connection to three other people who
have a connection to you, and then that payment
can be relayed through the network.
It's awesome technology.
And it's cheap and fast, too, which is key.
Yeah, absolutely, absolutely.
The problem with Lightning was it was invoice-based.
So it's like if I was going to pay you,
you would have to send me an invoice for $20,
and then I would scan the QR code of that invoice
or plug in the text invoice number,
and then it would do the payment.
Well, Adam, about a year ago or so,
found a technology called Keysend,
which is a part of the Lightning protocol.
But it just wasn't super widely used.
It basically just allows you to send random invoiceless
payments to another node.
So if I know your node ID on the network,
I can just send you $20.
And you can't even stop me.
It's not like you can say, I don't want it.
You're going to get it.
So this was perfect.
So what we did was we took the name space, the podcast name
space, and we put in a new tag called the value tag.
And so what I can do is I can take multiple Lightning nodes
and put those into my RSS feed in this tag structure.
And every time somebody listens to my podcast
on a Podcasting 2.0 app that supports this technology,
it will look at those Lightning node IDs
and begin to send streaming Bitcoin back to the creator.
So I can fill up as a listener, if I'm
using a podcast app like Cast-O-Matic or Fountain
or Podfriend or Podverse or one of these apps that support it,
or Breeze, I can take and load up my Bitcoin wallet
on my podcast app with, let's just say, $20.
And I can set an amount like, let's just say,
50 Satoshis a minute.
And then every time I hit Play, it just
starts streaming 50 Satoshis a minute back
through the Lightning network to that podcaster's Lightning
node.
It is super cool.
One of the things that's really amazing to watch as a podcaster,
and we see it every week on our show,
is when people are listening, you
can just look at your Lightning node wallet.
And you can just see those Satoshis coming in.
They're just two Satoshis, 20 Satoshis, 40 Satoshis.
It's just every minute, bing, bing, bing, you're getting paid.
And you know people are listening.
There's a few things I love about this, right?
I mean, number one, there's no middleman.
It's decentralized.
There's no PayPal or Patreon or 13% fee or anything like that.
And the other thing that I think is intriguing
is if you do combine it with a podcast app that has some sort
of wallet functionality.
What is great about sending, like you're saying,
some Satoshis, which is just a part of a Bitcoin,
to a podcaster is that is likely going
to be something that over time will appreciate in value.
So you're giving a really small donation.
Maybe it equals $50 over a year, right?
But if that podcaster were to hold on
to those Satoshis for five years,
it could be worth 100% more than it was at the time you gave it
to them, possibly.
Yeah, 100%.
If Bitcoin continues to trend in the direction it has
trended over the last decade.
And so it's actually giving the podcaster
not only a form of payment that allows
them to bypass advertisers, but it's actually
giving them something that may pay dividends down the road
that they could reinvest in their business
and keep the content creation going.
And it's all done just by following some namespace
standards and then the Bitcoin standard.
I think it's a brilliant system.
And one of the things you guys have done at the podcastindex.org
website is you've highlighted some of the value
for value podcasts there.
And it seems like it's a range.
How much activity are you actually seeing?
Do you get any idea of that?
So what we do is we take a 1% fee on anything
that uses our API.
And that way, we can gauge what's going on.
But the technology itself, it's all just RSS.
It's open source.
So there's people out there doing this
that don't involve us at all.
So we can't really have visibility into that.
But the stuff we do have visibility in,
which is that if a podcast app uses us as their back end
and we put that fee on there, that
is something we can calculate.
And the best we can come up with is
there's about a million SATs a day flowing through the Podcast
Lightning landscape.
So I feel pretty comfortable with that number.
That's also based on what we see.
So you mentioned that people are sending small payments.
And the per minute streaming stuff is small.
But there's also this option called a boost.
And so if you're listening, most of these podcasting 2.0 apps
have a boost button.
And so you hit the boost.
And it says, hey, how many SATs do you want to send?
And it gives you a place to type in a message.
And so since the Lightning network can also have a payload,
it can have arbitrary payloads with it,
we include a JSON message format in there with it.
This is all part of the spec.
It's in the open source namespace docs.
I can be listening to your show.
I can be listening to code or radio.
And I can send you a boost.
And I can say, hey, guys, this episode was awesome.
And you get those SATs, those Satoshis.
And you also see my message and my name
if I choose to show it to you in the sender.
It's just like PayPal or Patreon or Buy Me a Coffee.
But there's no middlemen.
And also, even though the streaming
SATs per minute are small, we've had boosts on our show.
We had one a few weeks ago that was 500,000 SATs.
That's like $250.
This is not chump change, really.
People can send large amounts of money, and it works.
We've had a 500,000 SAT donation.
We've had a 300,000, a 200,000, and a couple of 100,000s.
I mean, it's legit money coming through the system.
And like I said, this is all open spec.
So you don't need us or the podcast index or any
of this stuff to make all this work.
You just stick this stuff in your feed,
and you're off to the races.
Yeah, and even if it's not, that's around with Bitcoin.
I don't want any Bitcoin.
It might not be for everybody, but it doesn't need to be.
Because even with some adoption now,
it'll continue to grow out.
The feature set will get better.
It'll get easier to use.
It'll become more commonplace.
And then if we got in a scenario where
it was the best way to fund somebody,
all of the plumbing has been done.
So I think that's pretty interesting.
I want to talk a little bit about the fundamentals.
So there is some money coming in with maybe some
of the transactions if they use the API, which I'm assuming
goes into fund the infrastructure and all of that.
So there must be a small business
behind this for the tax and all the stuff
you have to do for being a business, right?
Yeah, we decided not to be a non-profit just
because a lot of that stuff's kind of gross.
And a lot of work, too.
Yeah, the 501c3 landscape is just a dumpster fire.
So we're like, hey, we need something to fund this,
and we're going to have to have a business because we are all
hosted at Linode.
So we're like, we're going to have to pay bills
and all this stuff.
So we have an LLC between me and Adam
and another guy who does our bookkeeping and backend stuff.
Mostly, it's really just 20 servers running at Linode
and a whole bunch of elbow grease and manpower
over the last couple of years, year and a half or so
to make it work.
Oh, man, are you managing all those 20 boxes?
Is that your job?
Yeah.
Wow.
Is this a full-time thing for you?
No, no, this is no.
We don't make any money, really.
We make just enough money in income
right now to pay the hosting fees and pay our taxes.
That's about it.
Yeah.
That was our goal for the Lightning stuff,
for the Bitcoin stuff.
The reason that 1% fee is there is so that we can hopefully
fund the index in perpetuity without having
to ever charge for API access and that kind of thing.
That's really the goal.
And as long as that happens, I'm happy because it's
about bigger things than money.
If the API docs are any indication
of the actual quality of the API,
it is probably worth some money.
I mean, this is some impressive work
just documenting all of this.
This is some serious stuff that developers can use
to actually build their app.
That is part of the value for value model.
The value for value model is not just about money.
Adam always says it preacher style.
He says time, talent, and treasure.
And so it really is about that.
So the documentation for the API, I wrote all the API,
but then the documentation for it
came from a guy named Stephen Crater in the Podcasting 2.0
Mastodon group.
And he just popped up and he's like, hey,
I do this for a living.
I'm really good with docs.
I'll do it.
And so he just jumped on the GitHub,
did the documentation repo, put it all
into a nice dynamic format.
I never did any of that.
He spent hours putting it all together.
And that's all work that I didn't have to do.
And man, that is every bit as valuable as money, every bit.
That's an idea the open source community can
wrap their heads around too, which
is what I like so much about this really
feels like the open source community's solution
to solving the centralized podcasting problem.
And man, am I just so happy to see you guys doing well.
Thank you.
I made sure this morning, I went through and looked like,
OK, all of our shows are published.
One, I think I hadn't submitted yet because I'm an idiot.
So I made sure I got that submitted.
And I could tell you guys are putting a lot of work
into it because we just recently launched a network membership
donation option.
And there was a link for Linux Unplugged to go to that.
Yeah, one thing I was looking at in your shows,
and this is a reference to the namespace,
is one of our namespace tags is the alternate enclosure tag.
And that's a fairly new tag.
We do this in phases.
So the namespace, we take submissions
for tag suggestions.
And then we hash it out for two or three months
and then make some decisions and then finalize
a portion of those proposals.
And so we go through these phases.
And the phase three namespace was the most recent one
that was fully closed.
And the alternate enclosure tag is
a way to specify multiple enclosures in a single episode
in a way that you can reference different delivery technologies
and different formats.
So if I had a podcast that had an Ogg Vorbis format,
a video feed, an MP3 feed, and something else,
you could, instead of having four separate RSS feeds
for that, you can have one feed.
And then for each episode, you just
reference each different item.
And so from an app's perspective, the app can see,
OK, this thing has four separate possible enclosures in it.
And oh, the listener wants to see the video.
OK, well, I'll switch video on.
Oh, now they want low bandwidth because they're
going through a congestion area.
OK, I'll switch over to the Ogg format.
And it allows it to do intelligent auto changing
to the listeners what their listener wants without having
to have literally four separate feeds
and publish all those separate feeds
and have the listener keep track of them all.
That's one example of what we're doing
that applies to even something like you because I noticed you
had a lot of different format feeds.
Yeah, a lot of legacy feeds, too.
So you must also then have to be reaching out
to a lot of the podcast platforms
because there's a few of them now, like Fireside,
like the one we use, and try to get those different platforms
to add support for these namespace features.
Are y'all on Dan Benjamin's Fireside?
Yeah.
Yeah, Dan was an early adopter of the namespace.
And he's got a few of those things in there.
He's got, I think, chapters, person.
Seasons, he has a good amount of them, yeah.
Yeah, he's a friend of mine.
And that's an example of the legwork that has to go.
The technology part is only half the battle.
You can write all the specs in the world,
but then you have to go and evangelize them and let
people know and then show them code, give them example code,
talk to developers.
And I think this is where a lot of open source projects
fail, perhaps, is that they're so focused on the tech
that they forget to do the evangelism part.
And just build it and they will come is not true.
That's not how this stuff works.
You have to build it, and then you have to go to conferences.
And then you have to talk to people.
And you have to build relationships
with podcasting hosts and app developers.
It's a lot of work.
But the tech and the writing code is really probably less
than half of what it takes to get a successful project going.
Well, I do appreciate you doing some of that legwork,
because I look at this and I think,
I can't get apps and platforms to adopt this stuff
fast enough.
And I know that Apple and Spotify and probably Google
and YouTube, they're going to be the last to adopt
some of this stuff, I would think.
But the nice thing about our audience is they're technical.
They can go find an app that does support this stuff.
Do you have a favorite podcast app right now that
supports some of these features?
I use them all.
I literally do use them all.
I've got 10 podcast apps on my phone,
because every time one of the developers in our group
comes up with a new app or something new,
I listen to podcasts in probably four different apps a day.
I like them all for different reasons.
They all have different feature sets.
And one thing about that whole idea of,
and we hear this a lot is, well, unless Apple and Spotify
support it, we're not going to spend any time developing it.
You hear that a lot.
But what we have to remind people,
and we've been successful with reminding people
about this in the podcasting world,
is that that is just simply giving your power away
willingly.
The independent podcast ecosystem collectively
is much bigger than those platforms.
Even if those platforms represent 50% of the market
or 40% of the market, you've got 50% to 60%
of the decentralized podcast market over here
on the other side.
And we can move and innovate much faster than those guys
can.
Look at the podcast namespace, really.
In the last year, we have formalized 15 new feature tags
within RSS.
And in that same time frame, Spotify
has given us what exactly?
More dynamic ads?
Yeah, more streaming ad insertion.
That's what I'm saying.
We went into this thinking, OK, the siloed companies,
the walled gardens, they're going to move super fast.
And they're going to innovate quick.
And we have to innovate fast enough to keep track,
to keep pace with them, keep feature parity.
And what we find out really quickly
was that's actually not true.
We pass them with the foot down to the floorboard.
I mean, they move so slow because everything they do
is about shareholder returns and money.
And they cannot innovate as fast as a group
of dedicated open source community members can.
They're good coders.
We can beat them all day long.
And we have.
And so the typical Podcasting 2.0 app,
and there's a big list of them.
If you go to podcastindex.org slash apps,
there's a big list of all of them.
A Podcasting 2.0 app blows Spotify out of the water
with the feature set that it has.
And that's all just community built.
And most of those apps are not profitable.
They're not apps that are where the developer is
making a living doing it.
They're apps that are just passion projects.
And Cast-O-Matic is a perfect example.
It's a really great iOS app.
And the developer of that app is a physician in Italy.
His day job is as a doctor.
And he just works on this thing part time.
And it is a high quality, feature rich app.
And Spotify, last I checked, they don't even have chapters.
I know.
That's what I'm saying.
I mean, it shows this project more than anything else
I've ever been involved in, shows
the power of a nimble, talented, open source community.
Yeah, it couldn't be coming along at a better time either.
So Dave, thank you for your work.
Thank you to the pod father and your whole team over there.
I know it's not a big team.
So sending a lot of good vibes your guys' way,
because I hope it grows, actually.
I hope this becomes a thing and really takes off.
And I hope to see more and more apps and platforms support it
too.
Stay in touch, because I'm on board, man.
Actually, I want to know how to become a Podcast Index
premier network.
Like, how do I go all in?
So maybe we'll chat more.
You get the badge, the Podcasting 2.0 Certified Badge,
man.
We've even got one.
There you go.
OK.
Thanks, Dave.
Thanks, Chris.
Just a real quick housekeeping, because we're getting long.
We're going long, but I just really
enjoyed that chat with Dave.
There's a lot to it.
So we'll do a little follow up.
But first, I wanted to mention we're
doing one last run of the Rando swag bags.
They've got the journal option and the non-journal option.
We're just going to do it for a little bit longer.
So that's at jupitergarage.com.
Also, thank you to our members.
This is right here, a single sponsor episode.
So the members are really what's keeping the show going,
keeping the production going, all of that.
Our community information, like our matrix, our telegram,
our contact information, all of that is at linuxhomeplug.com.
And last but not least, come join us on a Sunday.
Now, the show is moved over to Sundays.
We fire up the stream around noon 30 Pacific time
over at jblive.tv.
All right, so I'm opening it up now to the virtual lug
as we chat about this.
In the show notes today, I'll have some links
to the podcast index, including those new podcasting apps
that Dave was chatting about.
But you know, I was talking to him.
What just kept looping in the back of my mind
is like, this has got to be a way where
we can help free software developers monetize
some of their work.
This Lightning Network solution seems like a great way
to solve one of free software's most common problems.
I mean, we just saw it with the log for J vulnerability.
A couple of developers working for over a decade
never made a dime on something that
propped up tons of industry.
It just happened with basically every major vulnerability
we heard about last year.
It all came down to, oh, yeah, a couple of developers
and they never made a buck.
Like, it seems like maybe it was something
like the Lightning Network where you could send a Satoshi
can be less than a penny.
I mean, these things, I have a link in the show notes.
If you've never heard this term Sat or Satoshi,
and you're like, what, 1,000 Sat's?
That sounds like a lot.
It's not.
I think it's something like you can divide a Bitcoin
100 million times down, and that's what a Satoshi is.
And so you're talking you could send $0.25,
but if maybe log for J has 10,000 people,
send them $0.25, all of a sudden, that matters.
What was really interesting to me in the podcasting iteration
of this was that like ticking counter of getting Satoshis
in as you're listening, and I think there's really
something to that.
I don't know how it translates to open source software
projects.
We did, I think, touch on this slightly last week.
Yeah, it's something that's been coming up more and more,
I think, because of log for J. It's just been on our minds.
Well, I think it's been on our minds for years,
but we've never really had a true potential solution for it.
And what seems unique here is, so the Lightning Network,
the white paper was published in February of 2015,
but adoption has been slow until really about this year,
in combination because Jack Dorsey started upping it
on Twitter and with his new company,
but also because El Salvador did like a pilot, Bitcoin pilot,
and the Lightning Network worked so well for them
that they've now adopted Bitcoin as a currency in El Salvador.
That really put a big focus on the Lightning Network,
and it's really kind of exploded.
And it's all open source code.
It's all free software.
So you've kind of got this decentralized network that's
been built out that allows for super efficient, quick, stupid
cheap payments, and the entire stack is free software.
And it's all auditable because it's on a public ledger.
So you can contribute to a free software project,
and anyone in the world that has access to the internet
can audit that.
This sounds almost like exactly what we've
been hoping for for a long time.
It's like so many different ideals
that I've had festering in my own little brain
all coming together.
And I've got to say, you've been really mentoring me
in some of these concepts this last week or two
since I've been at the studio.
And gosh, am I ever excited about it.
I've got to say, I didn't quite do a dive into it previously,
but I think this podcasting index might be a really nice way
for many of us to just get our feet wet a little bit
and start to get interested in the concepts
and dive a little bit more into how even blockchains could
solve real problems.
Without the hype, right?
Without all of the, it's going to take over the world
and be a new web, right?
It's just like, well, this is a thing that works practically.
And if you apply it in the right application,
just like every other technology we talk about on the show,
like ButterFS, like containers, it's like, yeah,
there's absolutely a use case for that in some workloads.
The Podping software they talk about,
that's using the Hive blockchain, which is essentially
just a decentralized JSON message bus.
It's like D-Bus for the internet, simpler, obviously.
And so the idea is that the podcast client just
checks that Hive blockchain, which
is a super low energy efficient blockchain that
solves the idea of, how do you create a consumable message
bus for the internet?
What really struck me in that conversation
or that bit of the conversation was the efficiency of it.
So it seems like, OK, we're doing things
a certain way with the internet right now,
and then querying servers over and over and over
to see if there's a new podcast episode.
It seems like if we can make the internet much more efficient,
it does tackle some of these things
that we've been worried about, like energy usage of the internet
as a whole or some of these cryptocurrencies,
et cetera, et cetera.
Yeah.
Boy, we could make a whole episode out
of the energy usage thing.
So what I'll do is I'll put a link
to the University of Cambridge's Bitcoin Electricity Consumption
Index.
It's a real time index that they update of Bitcoin's power usage
and gives it to you in perspective of household
consumption and industry consumption.
And they try to track all of the different metrics,
including where the mining is happening and all of that.
So you kind of have an idea of what types of power sources
are powering that mining.
And it's probably not perfect, guys,
because it's a decentralized, anonymized network.
It's pretty hard to get really good numbers.
But Cambridge is doing their best.
And I think when we throw around terms like planet incinerating,
we should probably try to put it in perspective of things
like machine learning.
How much electricity does machine learning take?
How much electricity does Twitch video game streaming,
the entire Twitch network of everybody ramping up their GPUs
and streaming it to everybody whose GPUs are decoding it,
how much energy use does that take?
And does a decentralized, open source currency
built for the internet with no borders so anyone in the world
can send money to anyone else in the world that's totally
backed by cryptography, what is the value of that?
What is the value of sound money?
So I have a link in the show notes
because I think when we're talking about energy
use of these different blockchain technologies,
and there are several kinds.
Bitcoin is a proof of work.
But there are many proof of stake, which use much less
or maybe very little energy usage, depending.
So all of that's in there.
It's worth taking a look at just to have that conversation
with people because I think it's an important conversation.
And so actually having the data and keeping in mind
there's a lot of things in technology
we do that use quite a bit of power.
Right now, we're recording a podcast,
and the CPUs are burning on all these machines in here.
How many computers are just near us right now?
Right.
We don't really think about it.
Or how much power would it take if you bought a Tesla
and you started charging it every night?
And how much power does it take if your significant other also
has an electric car and you're charging both of those
every night?
Is that worth it?
How much power does it take to use Google Photos?
Sure.
And in the case of Bitcoin, there's
the economics that make mining actually more profitable
the cheaper your energy access is.
So I think it's all changing, too.
Like what we consider today as energy use and how it's used
could be completely different in five years
as the economics of Bitcoin mining
drive people to use renewables.
That, I think, is a conversation for a different show.
But it all can be practical implementations.
It doesn't have to be hype.
It doesn't have to be this huge overthrow
the system kind of technology.
It's not an all-some game here, because you
can see with the podcast index, they're
using these things in a very rational, very unique way.
And I took from that chat with Dave
that I think the free software community needs
to rethink some of this stuff.
Like the way we reacted to Mozilla, does that make sense?
Because what we're really talking about
is the alternative is something that's
controlled by banks that are not necessarily
accessible to everyone who wants to participate
in free software.
Kind of the status quo.
And that's not very exciting, is it?
Right.
When we're in the West, this is something
that's hard to really keep in mind,
but in the Western countries, we've
had a good, stable, reliable state currency for a long time.
But that is not true for everywhere else in the world.
And they also don't necessarily get access
to our banking system because of the volatility
of their country's economy.
And so they're really cut off in a lot of major ways.
And they want to participate too, right?
And they should be able to get paid as well for their work.
They deserve that.
When we're talking about these things,
and we're talking about their energy usage,
and what their practical use could be,
and how they don't do anything new, I know it sounds funny.
And I don't love saying it.
But we have to consider we may be
sitting from a position of privilege
if we live in a Western country where we've never really had
to worry about these things yet.
And I think free software could benefit from this technology.
It's weird because the free software community
sort of feels like it's just kind of become about cloud
and Linux and not about all the other free software that's
out there.
That other people are like, we are shunning some technology now
and declaring other technologies allowed.
And we're doing it by Twitter outrage.
Like what just happened with Mozilla.
Mozilla reminded people they accept Bitcoin and Doge.
And the community freaked out.
Original contributors to Mozilla and Gecko
lit them on fire for incinerating the planet.
And all of those people are sitting
from a position of wealth and privilege.
But they don't even see it.
And I think when we talk about the energy consumption,
we have to consider that for some people,
they don't have sound money.
And we might not always have sound money.
Things can change.
Disasters can happen.
History can be made.
And you can also see the practical content
creators getting paid is going to lead to better content.
It's going to lead to more accurate content
when it's funded by the audience.
That serves everyone that produces the show
and that listens to the show.
It takes it away from like Spotify or Squarespace.
And it puts it directly between the audience and the creator
with no one in between, no PayPal, no Patreon, no 5%,
10% GRIFT.
And it's all on a free software system from top to bottom,
from the software you can receive the currency
and to send to the network.
And it's available to anyone in the world.
Doesn't matter what political party, what country line.
If you can get access to the Tor network,
if you can get access to a VPN, if you can get IP routing,
you can get paid.
Then I know we've all heard the stories about the protesters
in China who got shut out of the banking system just recently.
And then they use the lightning network to raise funds.
And they funded their anti-government protests
with Bitcoin after being shut out
by the Chinese financial system, even with China's control
over the internet.
And there's 100 stories of that every day.
And then you see this technology,
how it could help something like the podcast
landscape, which could even be applied to a video platform.
You could take all of the concepts they have
with the podcast index and the monetizing and the namespace
for the RSS feed, and you could build an amazing PeerTube
community around that.
And because it's open source and it's an open spec
and they have amazing documentation and tons
of sample code and open source apps that have already
implemented this, it's all there for us to take it.
But I think our own prejudice about a technology
that we don't understand is preventing us as a community
from adopting this.
And I said it on the live stream,
and I'll say it in the show, this
is a result of a failure of leadership
by the Free Software Foundation.
They should be pioneering a open source free software payment
system to fund free software development.
But they're old, and they're out of touch,
and they're too busy licking their own wounds.
And there's no other leadership in the community
that thinks Foundation essentially
is the centralization of everything else.
And they don't have any reason to change this.
They like the way the payment system works.
They hire the developers they want.
They get paid to write the code they need.
It's a great system for them.
Oh, somebody got left out?
We'll create a brand new foundation.
We'll make sure everything's taken care of for them.
Problem solved.
Problem solved.
No other problems out there.
We did it.
We fixed it, everybody.
Didn't we do good?
Look at our report.
Look at this PDF.
Look how good we did.
That's the alternative.
Because no one is in our community in a position
of leadership championing these ideas,
typical human prejudice have prevented us
from adopting this.
And so things like log4j will just
keep happening over and over and over again.
And in part, it's our own fault, because free software
has become about Linux and the cloud,
and not everything else out there.
And when you shut down new things
because somebody's grifting with an NFT,
you're participating in the same kind of thought
process and suppression that led to Linux FUD.
It's just a new generation of FUD.
So I hope things like the podcast index
get adopted by at least parts of this, right?
Some of it's podcast specific.
I acknowledge that.
But wouldn't it be great if some parts got
adopted by a project that we all know and love,
and we could help those developers live a comfortable
life just doing free software full time?
You caught it there in the interview, Brent.
Dave Jones is helping build this entire decentralized podcast
index, which is the only alternative to Apple, Spotify,
and YouTube, and Google.
The only thing out there that's legitimate and large enough
and has any adoption and has apps that are supporting it,
and he's doing it as a part-time job.
And the funds coming in are only paying for their taxes
and their 20 Linux, and that's it.
And podcasting is an entire industry now.
And we're just doing it over.
We're doing it to free software developers.
It's happening to the podcast ecosystem.
It's because these ginormous rich organizations
or foundations can distort reality
and make everyone expect to get everything for free.
And when it's not easy and when it's something new,
that's gross.
What do you mean they don't accept PayPal?
What do you mean they don't?
No, I'm not doing that.
Until it's inevitable, and it's been rolled out everywhere,
and then everybody will just pretend
like it was obvious all along.
And nobody will own the fact that they were essentially
blocking the adoption.
So that's the end of my rant.
But I thought it was a really thought-provoking conversation
with Dave.
So thank you to Dave and all the work that's
happening over at the Podcast Index.
Whew.
You know what we'll do is we'll put a couple of links
in the show notes.
I tried out Fountain, and I just got another one, too.
I just downloaded Cast-O-Matic, but I haven't tried it yet.
But I tried out Fountain, which is available for iOS
and for the Android.
And it took me, I don't know, like a half hour
to get my sign-up email.
I don't know what that's about.
But once I'm in, it's great, man.
I really like it.
So you can import from Spotify, which is interesting.
Oh, that's nice.
Yeah, this is Fountain.
So if you just want to get off Spotify and try something else,
you don't have to give it up.
You could try it, and it'll import it.
But it'll also import from Apple Podcasts on iOS,
and it'll search the podcast directory.
So I toyed around with the lightning support.
I think I have it turned on.
I have so much to learn about the lightning network stuff
still.
But I love the idea.
And I feel like I want to try to validate it here somehow
once I figure it all out.
And then I want to become an advocate
to monetize free software development with it.
And I don't mean like monetize in a bad way.
I mean make it possible for these developers
not to live on the edge of burnout.
And OK, OK, I'm sorry.
I'm going to just one last point.
I'm so sorry, you guys.
But Brent can attest, this has been eating me alive, hasn't it?
Only for about a week.
I want to give Colonel a chance to jump in.
Colonel, you had a few thoughts on the lightning network.
This is like an area I'm pretty new on.
So I'd love any insights you have.
Right.
So it was actually less of the lightning network,
but almost adapting what they're doing for the podcasts
into funding some of these core technologies that
are being developed by people in their spare time.
So maybe instead of having a paper while you're listening,
maybe it's every time somebody does a poll
against that repository, they can send a few Satoshis.
Or something like that.
So again, it's value for value, but it's based
upon people using that software.
There's so many ways you could do this, really.
It could be as dumb as a GNOME extension
that you put the name of a process
in and say, every time I'm running this process,
send five Satoshis to a free software developer.
It could be as simple as that.
It could be something like the popularity packages in Debian
that look at what you have installed
and what you use most often.
It could give you an output, and then you could have a choice.
Maybe it's a little GTK app, and you click a few buttons,
and you send it off.
And of course, it's written in Rust.
They're all written in Rust, right?
Don't you think?
It almost has to be, I guess.
All right, we'll just leave it at this.
I could really go on and on about it.
Just what really gets me is I talk
to so many of these developers as part of doing the show,
and so many of them are really on the edge of burnout.
They exist the entire time they're doing this.
Anytime anything gets any kind of traction
in this state of perpetual burnout
and tied by obligations between family and work
and their community and free software.
And it can be a really strong pull.
And it, A, is a fragile dynamic,
and B, it makes a person old, and they can't do it forever.
And when you have to juggle feeding your family
and paying your bills and also fulfilling your commitments
to the free software community,
it can be really, really difficult.
And a lot of these developers are just one nasty comment
or divorce or marriage or car accident away
from abandoning their project.
And the ability to solve this in a super efficient way
that uses free software through and through
with no middleman has existed since 2015.
But bigotry and, honestly, misinformation
and uninformed opinion about potential
planet-incinerating power use has led to a block of adoption.
And that's why I get so worked up about this,
because some of the things that we use on a daily basis
are just on the precipice of going away
because they can't figure out a way to make money
and balance their life.
So that's why it just, that's why it matters a lot to me.
But I feel optimistic that this stuff lays the groundwork
for us to solve the problem.
The technology is there, it's sound, it's safe,
and it's being used by millions of people on a daily basis,
some of which are just using it to buy bread
in a market somewhere, and some of which people
are using it to fund content creators
or invoicing for a banana.
I mean, it's a huge range, and it is happening.
It just is gonna require a mindset change and adoption.
And looking past things like ape NFTs that are silly,
it's just gonna take a little time.
But I hope that maybe we're taking the first step
with this episode, because I think it can make
a big difference, and it's something I'd love
to know more about, I'm still learning.
So let us know what you think at linuxunplugged.com
slash contact.
Don't forget, we do have that Luplug.
We're getting together on Sundays and Tuesdays now
at noon Pacific.
And don't miss Linux Action News.
Now at a new prime time for the news,
busting it out towards the end of the week
with all the stuff that happened
with Wes Payne and myself.
Brent, thanks for sitting in Wes's seat.
Oh yeah, he's got some nice butt grooves in this thing.
It's real nice.
I know it.
He's worked it, you know?
He works it.
Every time he sits there, you can just see him.
You can tell because he sits there
and he bites his lip while he does it.
So you know he's working it.
That's how you know.
Links to a lot of what we talked about today
at linuxunplugged.com slash four four zero.
We'd love to have you go through there, peruse it,
learn a little something today,
including that power usage from Cambridge
and more information like podcast index
and some great apps.
And you can actually use the podcastindex.org itself
as a podcast player.
That's interesting.
Yeah, they got a player just built right in.
Of course they do.
If you want a web player, that's pretty awesome.
And we have, I think,
I think we have the Lightning Network set up
for Linux Unplugged now.
It's a bit of an experiment.
Test the waters, if you will.
Thanks so much for joining us on this week's episode
of the Unplugged program.
And we'll see you right back here next Sunday.
This is Unplugged, and we'll see you next week.
All right, we need a title.
We gotta title this thing.
We gotta get it out there,
let people know about the good things
coming to the world of podcasting.
So everybody head on over to jbtitles.com.
JBtitles.com.
And get your boat in.
Come on now, y'all.
Come on in.
Did we get any ideas in the chat room for our new toy?
I didn't see any scroll by.
So for those of you who joined us
a little bit into the show,
we got a little piece of hardware
that came into the studio that we assembled ourselves
called the Clockwork Pi.
And we talked about it in the pre-show,
so I figured we'd end with the post-show with it
with a little bit of info.
So like Brent said, it has Armbian.
The display is running at 480 by 1280.
So it's a real wide and narrow display.
Which I think for gameplay,
because it has these gameplay buttons,
I think might be actually really interesting.
Maybe.
I don't know.
As long as I'd be playing it,
I'll be a four by three Super Nintendo game.
It's got two gigs of RAM in there,
three USB-A ports like you alluded to,
a USB-C and a micro HDMI.
Not to mention a thermal printer.
Well, yeah, of course, which...
But the nice thing about this, I think,
is that there's an opportunity for a lot of expansion.
I know when I was putting the thing together,
there's a whole lot of expansion.
What do you call those?
Connectors and things? Modules?
Modules, sure.
Sure.
So there's a lot of possibility.
I know they have a game-specific add-on to it.
The name of it is passing me now,
but I think there's a lot of opportunity here.
I think it's just that we've run out of ideas
for what to do with it.
Oh, Dan, you've got an updated version with more RAM?
Oh, there's already...
Yeah.
We just got this.
Tell me about it.
Yeah, well, it's about the same device,
except that it's just a little more powerful.
Duh!
That sounds exactly the kind of thing I like.
