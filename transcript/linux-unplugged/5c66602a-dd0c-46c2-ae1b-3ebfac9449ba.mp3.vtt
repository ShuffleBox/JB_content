WEBVTT

00:00.000 --> 00:29.960
Anybody that's listened to the unplugged program for a while knows that part of our secret sauce is our virtual lug and we use an open source program called mumble for the voice chat and anybody is welcome to join us you can just go google search like Jupiter colony mumble guide and as long as you got a working mic and you have headphones and a microphone and we can do a sound check you're welcome to join us and chime in on your opinions about what we talk about but I think for some of you the big hold up has been it's a dirty gooey app who wants a gooey I mean if

00:29.960 --> 00:59.840
you're really listening to unplug program you're probably in a terminal somewhere right I mean you're downloading your podcast using bash Potter you're using links to browse the web you're just doing everything via the command and you're hanging tight hoping we'll have another cool curses based internet interface for you well good news Bernard is a terminal based client for mumble so now you can run mumble on the command line it's a go app it's available up on get and of course it's free and open source you you can even participate in the chat

00:59.840 --> 01:15.040
it's kind of neat looking so you can install Bernard if you have go installed and be up and chatting on the unplugged program by next week this is Linux unplugged episode 262 for August 14th 2018

01:15.040 --> 01:44.960
welcome to Linux unplugged your weekly Linux talk show that's fighting the BSD temptation my name is Chris my name is Wes and my name is Brent hello guys it's great to be with you we have a really fun show so not only do we have our traditional community news some new fancy Linux features my

01:44.960 --> 02:13.760
favorite don't call it a distro update but I listened to a BSD can talk and I was blown away with what they had to say about the tragedy quote unquote of system D and the lesson that the author believes free BSD has to take from system D and the trap they may be leading themselves into right now I've got a couple of clips plus will link to the whole talk it can't wait to get into that and then at the end of the show

02:14.960 --> 02:44.680
after 10 years of using Dropbox every minute knowing one day it would bite me this last week Dropbox announced it was dropping support for encrypted extended for partitions and any file system on Linux that's not extended for and as some of you know I'm a big big user of XFS I think it's a fantastic file system it's what all of my home partitions are formatted in it's what all my main data partitions are formatted you keep reporting reformatting

02:44.680 --> 03:14.520
my hard drive with it that's right I learned from Alan you know Alan used to come around and put everything on ZFS well this week they said no not for you we are dropping support November 7th now trust me I've known this day was coming I've been planning an open source salvation I've been running them in parallel some of them for a couple of years planning this mass exodus but after using a tool for 10 years and building a large production pipeline around it and having a whole team of people that use that software it's

03:14.520 --> 03:44.500
going to take a lot of work so we'll start this week with telling you how you can buy yourself a time some time with a couple of simple and handy little cheats oh trick Dropbox into thinking it's chugging right along on extended for and you don't have to touch a thing plus fedora also has another solution it's a little outside the box but we'll get into that but before we go any further we've got to bring in that virtual log time appropriate greetings mobile room hello hello Eric hello it's a it's a it's a small it's a small mobile gathering.

03:44.520 --> 04:14.520
That happens from time to time last week we had like nearly 20 people in there and this week it's just a couple everyone's out having fun in the summer it's holidays holiday season in Europe it's good it's good to have you back wimpy how was your holiday it was wonderful I had a great time thank you some of the best pictures I've seen in a while on Twitter I mean you got some really great shots on this trip I was I was watching from afar and I was quite impressed yeah we were lucky the weather was amazing the whole time we were away and they were

04:14.520 --> 04:44.300
only a few pictures you'll notice that they were basically on the way to where we were going and on the way back because we were in a very remote village in France with no internet whatsoever so two weeks of complete blackout it was it was great that sounds like an interesting psychological study in a way yeah it took took about 24 hours to adjust but then it was it was great yeah did you feel like you were disconnected did you feel for the first 24 hours like you were missing out to Jeff some foam or what was it at first?

04:44.520 --> 05:14.520
it was it was when we were having discussions about where we were going to do and what we were going to do and I kept picking my phone up and then I was like I can't actually find any of the information that we need to answer these questions and it was like so we have to drive into a town and find a tourist information office and pick up some leaflets how traditional it's very very old school it was sounds wonderful yeah it was good it was really good fun good for you well glad to have you back and let's get into some news let's start things off with a

05:14.520 --> 05:44.520
fresh colonel Santa Linus has dropped 4.18 out there and I just I wanted to mention I don't normally call these out anymore but I just the whole way it was written is sort of noteworthy he says it was a very calm week and arguably I could have just released on schedule last week but we did some minor updates mostly networking but with some VFS race fixes and a couple of driver fixes and some other minor random things you know we just figured it was time so some of these new things I could have just delayed to the next

05:44.520 --> 06:14.520
merge window but they were marked for stable anyways so it just would have caused more backporting anyway with this the merge window for 4.19 is now obviously open can you tell he's wearing slippers while he writes this and the world's most powerful operating system sees its next significant update it's 22 because there's a bunch of other neat stuff in this car and he just did I guess that's not what what he sees people are super hyped about this one that was the other reason I put this in there is a lot of people sharing

06:14.520 --> 06:44.520
the release of 4.18 I mean I know there's some steam controller stuff in there yeah this is the first kernel version for a long time I've been really waiting for this one to drop oh okay tell me why it's all rather selfish this is the one lands all of the enablement for the GPU in the Hades Canyon knock for example so I've been following along with the release candidates on the on the Hades Canyon to have that ticking along but there's a bunch of fixes in there for

06:44.520 --> 07:14.520
AMD stuff generally so the the gentle ascendancy of AMD at the moment in the Linux space is is is marching on in 418 is that is definitely a landmark kernel for that yeah that's what I grok most the excitement was about but I had wondered about the next stuff that's good to hear that is in there because that to me is still something that I hope could work out to be a great box in the studio one day I don't know you know those NUCs have a hidden hit hit sort of hidden

07:14.520 --> 07:44.520
miss track record when it comes to recording sometimes they have noise in them because they're so small so tightly built but we'd love to try mm-hmm yeah I've I've been trying out a new co-working space since I've been back from holiday and some of the desks there have monitors on arms on the backs of the desks so you can plug your laptop in but then I was I was sat there today thinking hang on a minute I could just pack my NUC into my backpack so so tomorrow I'm going to go

07:44.520 --> 08:14.520
to this co-working space with my my NUC and a wireless keyboard and mouse in my backpack and I'm gonna plug plug my NUC in on the desk and use that as my workstation for the day because it's actually no heavier than than my laptop right so what about the video session with poppy I mean if you're in a co-working space how does that work now because I know that was a thing you guys did well I've been so this because it's been so hot in the UK I've actually been working out of

08:14.520 --> 08:44.520
a bar in a local hotel for about the last five weeks because air conditioning right exactly right so I've already got used to you know sitting on conference calls with poppy and other people at work you know in a bar with people you know pouring pints of beer over my shoulder and all the rest of it and I recently discovered this co-working space was was opening up nearby so I've been I've been going there just recently which is obviously more conducive to video calls

08:44.520 --> 09:14.520
and also has a hundred megabit Wi-Fi so hey not too shabby so it's it's good yeah so yeah tomorrow I'm taking the Hades Canyon NUC in and I'm gonna use that as my workstation for the day that's great so there was an announcement with the Android 9 release Android pie that kind of went under the radar tucked away down in the bottom of the mailing list announcement was a note that reads like this I also want to take a moment to introduce myself as

09:14.520 --> 09:44.520
the new tech lead and manager for a a OSP my name is Jeff Bailey and I've been involved in the open source community for more than two decades since I joined the Android team a few months ago I've been learning how we do things and getting understanding of how we could work better with the community this is a new lead for the Android open source project this is coming from opensource.googleblog.com as Jeff notes in his introduction he has a history in the free and open source software world he's been an avid user contributing

09:44.520 --> 10:12.320
maintainer apparently he has been a Ubuntu core developer as well as a Google open source team member and he's done work on Debian as well he also worked for a company called Savannah which for many years distributed some good new software and now he is in charge of the Android open source project seems pretty credentialed it's interesting to see some change in momentum over there in an ecosystem I perceive is maybe a little stagnant at times

10:12.320 --> 10:41.320
mm-hmm mm-hmm and I find it kind of noteworthy that this was just unnoticed for for about a week until I was digging through this and I go wait a minute here let me look into this and here it is and this I didn't see any headlines about this and we now have a that's I wonder what I wonder what might change because he says specifically he's looking for ideas from the community he says he wants to hear from you if you'd like to tweet him your ideas at Jeff Bailey be a

10:41.320 --> 11:11.120
i l e y a OSP on Twitter at Jeff Bailey a OSP on Twitter or you can email him Jeff Bailey plus a OSP at google.com that's pretty direct that is giving you the information right there it's pretty direct so anyways check them out maybe maybe Jeff wants to come on the old show here come on the old unplug program yeah tell us about you know what changes he wants to see made what his imperatives are and what what what what is actually valuable community feedback at that position yeah people

11:11.120 --> 11:41.080
looking for feedback right now over at KD neon the maintainers have begun publishing preview images of neon based on Ubuntu 1804 and this is my favorite don't call it a distribution to distribution right now because you get that classic stability of an Ubuntu LTS that just over the years just gets iterated on top of with a rolling user environment built around the latest plasma goodness and it's been running pretty well for me on a couple systems on my my production systems I'm now on Kubuntu but I've been wondering how long until neon was going to make this

11:41.080 --> 12:10.680
transition because this is the first major transition like this neon has had to make since they existed as a project for their entire existence so far they've been based around 1604 and this is the first time the project is dealing with the transition to a new base would be do you have any thoughts on that I'm sure this will be absolutely fine because Jonathan Riddell was maintaining Kubuntu for years and years and years so this is

12:11.120 --> 12:40.240
not the first time he's been through this and knows how to handle LTS to LTS upgrades and they are taking it pretty calculated they've been in alpha for a while they've been expanding the testing circle and other expanding it once more and if this works out they think the end of August will be when they officially announced the transition to bionic exciting fantastic can't wait to see it I'm really keen to see this 1804 release from them Pope he's been at Academy over the weekend so I'm keen to hear

12:40.240 --> 13:00.960
from him tomorrow everything he learned and found out about whilst he was over there yeah I agree I've been following some of his progress on Twitter too it's been very fascinating William Wold I think is how you say it he's a canonical employee who just posted over on the community.buntu.com site about some big improvements to Mir

13:00.960 --> 13:30.920
yeah including support for the XDG shell protocol which has just landed in Mir and it will ship in the next release this is this is bigger than Mir though because this represents a stability in the Wayland ecosystem yeah I just I just ecosystem it is actually becoming an ecosystem and standards are emerging this is really good for end users and Mir is plugging right into this

13:31.080 --> 14:00.920
this is from Williams Post he writes the switch of both clients and servers to support this protocol is an indication of the Wayland ecosystem that the fact that is maturing because the protocol is marked as stable future revisions will not break backwards compatibility that's huge for and for display servers implementing the protocol this means far less code and easier maintenance is required to support all clients old and new in addition to supporting the latest clients XDG shell stable is a requirement implement the new protocol layer shell layer shell is

14:00.920 --> 14:30.880
written by the sway and wl roots folks and it gives clients a flexible method for drawing non window services such as taskbars notifications and lock screens are just a few examples that are now possible we have not yet begun work on the layer shell support but plan in the near future wow this is exciting it is nice to see Mir going is I mean you know it's it's all kind of happening in the background but it's also neat to see you know the amount that the people over making sway and those other things it really is becoming an ecosystem

14:30.920 --> 15:00.280
with different options out there and you don't just have to be running one of the big major distros anymore when the Ubuntu community hub was established and the Mir team started using that to seek input in the directions that they were going to be taking the project the sway developers were were some of the first people to come and join the discussion there so there's been good collaboration between the Mir team and the sway team and also the Wayland developers

15:01.080 --> 15:19.800
yeah and it's important to emphasize that you know Mir is an active project and it has a lot of momentum behind it Williams a recent member at Canonical very talented developer and I think you'll be hearing some more interesting news from him in in the weeks and months to come

15:19.800 --> 15:37.760
yeah I noticed that I would be interested to chat with William in the future it seems yeah it seems like he joined a few months ago and yeah he joined around the start of the year I met him earlier this year and he came from the Arch community he's the second guy I've met recently who's been recruited into Canonical from the Arch Linux community yeah

15:37.760 --> 16:07.720
mmm poaching some of the best I got a question for Wes and for Brent and for you too wimpy I'll start with you Wes say you're gonna sit down at a computer how do you know if that computer is fast enough for your work well this is a Linux unplugged so is it compiling the Linux kernel no I think for you personally like your workload like you're like how do you assess a computer's potential say somebody gives you a laptop like this happened to Brent when Brent was out here during Linux fest I just gave him the laptop

16:07.760 --> 16:36.760
the Libra 15 I'm like here do your photo work Brent and like how do you know good luck yeah how did you know if that computer I mean other than it's a fairly modern computer how would you know just looking at it if that computer was capable enough of being fast enough for your workload yeah I think for me in that specific case it certainly helped that I was surrounded by a bunch of people that I knew wouldn't put up with slow machines so it turned out that for my workflow it was it was fine

16:36.760 --> 17:06.640
especially that I didn't have a laptop while I was in the US so I'm any laptop is going to do fine but but to answer the question a bit more broadly I think for me there's a there's a set of work loads that I do typically on any computer you know multiple times a week and so if someone's going to give me a laptop I'm going to do a set of workflows that I'm so familiar with I know just sort of intuitively

17:06.640 --> 17:36.640
how long they should take or how they should perform or how snappy they should be and you know that workload is going to be a little bit different for everybody so I'd be interested in hearing everyone else's thoughts or methods but that for me is a tried and tested that makes sense true way of doing it so wimpy you and I have experienced this in another context as well and that is getting review systems in for the Ubuntu podcast or for this show and you have to sort of assess this machine's capability so do you have a couple of go to methods when you sit down at a Linux box to try to figure out what's going on and what's going on and what's going on and what's going on and what's going on and what's going on and what's going on and what's going on and what's

17:36.640 --> 17:51.960
going on come over to us as okay right how fast is this system when we do our reviews on the Ubuntu podcast we usually was revert to benchmarks in in popular games as the means to determine how fast is most of the feedback we got from our listeners when we were figuring out how to review hardware the things that they were most interested in was what's the battery endurance like how hot

17:51.960 --> 17:54.700
feedback we got from our listeners when we were figuring

17:54.700 --> 17:57.800
out how to review hardware, the things that they were most

17:57.800 --> 18:01.740
interested in was, what's the battery endurance like? How hot

18:01.740 --> 18:04.740
does it get? How noisy is it? What's the quality of the

18:04.740 --> 18:09.060
screen? How good is the keyboard? So much more practical

18:09.060 --> 18:12.460
things about you know, the portability and and utility of

18:12.460 --> 18:15.920
the device. And performance doesn't come up very often as a

18:15.920 --> 18:18.780
thing that they're interested in. So we have a few games that

18:18.780 --> 18:21.900
we run through as an indication as to what the performance is

18:21.900 --> 18:25.620
like, right? Personally, when I assess the performance of a

18:25.620 --> 18:28.820
device, it really comes down to compiling and building

18:28.820 --> 18:33.500
software. So when I'm doing work stuff, it's building snaps. And

18:33.500 --> 18:36.000
they usually large snaps, because I work on some

18:36.000 --> 18:38.500
complicated stuff that you know, I don't get to talk about here.

18:38.900 --> 18:42.000
But also, you know, when I'm compiling and building packages

18:42.000 --> 18:44.500
for the multi desktop, you know, I know how long those things

18:44.500 --> 18:47.760
take. And those are the things that I, I would say are the most

18:47.760 --> 18:49.620
CPU intensive things that I do.

18:49.620 --> 18:52.980
Yeah, okay. I think that's a good way to put it. If you if

18:52.980 --> 18:55.620
you if you have a workflow that you're really familiar with,

18:55.620 --> 18:57.540
like the pace of it, because it's just something you've done

18:57.540 --> 18:59.980
a lot. And then you sit down on a machine, you go through it,

18:59.980 --> 19:02.780
you do get a good sense. I saw the chat room was throwing

19:02.780 --> 19:06.060
things out like how much RAM does it have the CPU model?

19:06.460 --> 19:09.420
Those are like what I used to use. Oh, does it have 32 gigs of

19:09.420 --> 19:13.660
RAM? How many electron apps can you open at one time? That's my

19:13.660 --> 19:15.860
benchmark. Yeah, exactly. Well, and that's part of the RAM

19:15.860 --> 19:19.140
thing. But it feels like modern systems are a little more

19:19.140 --> 19:22.500
complicated than that. Because especially with laptops, you've

19:22.500 --> 19:26.300
got thermal throttling to consider. You've got your base

19:26.300 --> 19:29.660
clock plus turbo depending on if it's something that pings one

19:29.660 --> 19:33.220
core versus all the four cores. So there's right and like

19:33.220 --> 19:35.540
there's also responsiveness versus throughput. And what's

19:35.540 --> 19:37.660
more important for how you're going to use that system?

19:37.660 --> 19:43.260
Mm hmm. I bring all this up because this week blender has

19:43.260 --> 19:46.380
reintroduced and I say reintroduced because this if you

19:46.380 --> 19:49.280
have used blender in the past was something that was available

19:49.280 --> 19:52.520
in the past, but they removed it. It's back now in a big way.

19:52.640 --> 19:55.800
It's a benchmark, the blender benchmark. They've built the

19:55.800 --> 19:59.640
bender benchmark platform with a maximum focus on transparency

19:59.640 --> 20:02.400
and privacy. They say they use only free and open source

20:02.400 --> 20:06.120
software, GNU GPL software, everything that is all testing

20:06.120 --> 20:09.000
content is public domain. So it's all licensed public domain.

20:09.200 --> 20:12.040
And the test results are being shared as anonymized public

20:12.040 --> 20:16.040
data. So this is really exciting. And I wanted to use

20:16.040 --> 20:20.040
this as another opportunity to point people over towards what I

20:20.040 --> 20:23.640
think is Michael Larbell's really good work at open

20:23.640 --> 20:26.320
benchmarking.org. The open benchmark tool, which is

20:26.320 --> 20:32.960
available in your distros repository, is is amazing. You

20:32.960 --> 20:35.880
download this, you download this package and you install it. And

20:35.880 --> 20:37.480
then when you run it on the command line, there's GUIs

20:37.480 --> 20:39.920
available as well. It comes up and says, What do you want to

20:39.920 --> 20:44.680
test? And it's, it's everything. It's everything from it will

20:44.680 --> 20:47.680
download a game in the background, run it, benchmark

20:47.680 --> 20:50.120
it. It's everything from it will download different versions

20:50.120 --> 20:52.800
of the Linux kernel, and with different compiling options and

20:52.800 --> 20:55.600
benchmark them and generate the same chart. It generates all

20:55.600 --> 20:59.040
those all those charts that you see at Ferronix are all created

20:59.040 --> 21:03.440
using the open benchmark tool. The other thing it does is it

21:03.440 --> 21:07.000
uploads the benchmark results to a community comparison site,

21:07.280 --> 21:09.760
where there's like 23 million different benchmarks that have

21:09.760 --> 21:12.720
been posted that you can compare your system against. And only

21:12.720 --> 21:16.720
like 1.6 million of them are public, you can choose to keep

21:16.720 --> 21:19.960
them private and just compare against your own systems. It's

21:20.000 --> 21:23.720
so fun to just run a system through this, and really give it

21:23.720 --> 21:28.280
like just a beating. And like, he's stayed on top of getting

21:28.280 --> 21:31.360
things in here, like Linux 4.18 kernel benchmarks are already in

21:31.360 --> 21:34.880
there. So you could even if you don't want to run 418, if you

21:34.880 --> 21:36.920
don't want to switch it out on your distro, you could use open

21:36.920 --> 21:39.920
benchmark to download, build it and do some benchmarking. Like

21:39.920 --> 21:43.640
that's pretty neat. There's also blender tests in there. There's

21:43.640 --> 21:46.920
entire workflows from photo workflows, to development

21:46.920 --> 21:53.000
workflows, to gaming. And it's a great way to just download this

21:53.000 --> 21:55.880
on your box, run your system through a set of paces and get

21:55.880 --> 21:56.920
real numbers out of it.

21:56.960 --> 21:59.400
I like that you have things you can actually compare to and you

21:59.400 --> 22:01.200
know, a certain amount of standardization there. So you

22:01.200 --> 22:02.920
can know that other people are running this, you can run it on

22:02.920 --> 22:04.800
the same thing. And you don't have to be an expert in trying

22:04.800 --> 22:07.840
to set it up to have a good suite of tools there.

22:07.840 --> 22:11.160
Yeah, that's, yeah. And you know, that's a really, it's a

22:11.160 --> 22:12.800
nice thing, because it's constantly updated. So they're

22:12.800 --> 22:16.360
constantly changing it. And you, you don't necessarily know every

22:16.360 --> 22:19.200
test to run. So you want to stress test the IO subsystem,

22:19.240 --> 22:22.960
like you want to just bash on the disk subsystem and the

22:22.960 --> 22:25.480
network subsystem. And you really want to stress those two

22:25.480 --> 22:28.600
things. You could you could put something together, or you could

22:28.600 --> 22:31.760
use scripts they've already created that will that will run

22:31.760 --> 22:34.560
it through its paces. And that and it's just like that at every

22:34.560 --> 22:37.280
level, including encryption, benchmarks, packaging, it's just

22:37.280 --> 22:39.920
great. It's just great. And if you're ever wondering how to

22:39.920 --> 22:43.320
really kind of get the get an assessment out of a system, take

22:43.320 --> 22:48.080
a look at it, and run it against that. I really, I almost I'm

22:48.120 --> 22:50.960
almost wondering if I could look into it. Maybe I maybe I should

22:51.240 --> 22:54.000
try to figure this out. If there's a set of numbers, we

22:54.000 --> 22:56.880
could generate it. So we could compare different laptops over

22:56.880 --> 23:00.120
the years as we review them to see what how they perform. So we

23:00.120 --> 23:02.000
could have like a chart of the fastest laptops.

23:03.000 --> 23:05.960
Yeah, that'd be pretty good. Kind of like a kind of like a

23:05.960 --> 23:08.520
like a leader chart, you know, that we could use that we would

23:08.520 --> 23:11.320
always run the same standard open benchmark on it'd be the

23:11.320 --> 23:13.240
results will be public. So people could audit them if they

23:13.240 --> 23:15.440
wanted. Yeah, maybe a link back to the episode, you can hear the

23:15.440 --> 23:17.720
review of the unit, they could benchmark their own systems

23:17.720 --> 23:21.080
against it. It might be pretty fun. It's like it's like doing

23:21.080 --> 23:24.640
laps around a track with cars and then figure out your benchmarks.

23:26.000 --> 23:28.520
Anyways, moving on. I thought that was pretty neat. I wanted

23:28.520 --> 23:30.640
to give them a plug because it's a great way to see what your

23:30.640 --> 23:34.440
system is capable of, or get a sense of a new box, which I'll

23:34.440 --> 23:37.840
be doing maybe in the near future. A couple of mentions of

23:37.840 --> 23:40.680
some events that are coming up. First up is the Libre

23:40.680 --> 23:45.520
application summit, poorly named LAS. Just gonna let that hang

23:45.520 --> 23:48.320
for a second. Why do I gotta take that? Why do I gotta take

23:48.320 --> 23:51.440
LAS? Why do I gotta do that to me? That's an affront.

23:52.040 --> 23:54.240
I mean, you gave it up, man. You walked away.

23:54.440 --> 23:56.120
Actually, they took it before the show was even over.

23:56.840 --> 23:59.360
Nevermind. That's just, you know, the bell's getting

23:59.360 --> 24:02.800
popular. A lot of dings today. But the nice thing is they just

24:02.800 --> 24:07.040
posted their early event calendars. You can get an idea

24:07.040 --> 24:10.040
of what's going on at the Libre application summit. And I think

24:10.080 --> 24:12.440
Eric, the IT guy, is going to make it down there. You think

24:12.440 --> 24:13.240
it's a lock, Eric?

24:13.920 --> 24:17.760
Yeah, it is. It is a definite thing. I've got my ticket. I'm

24:17.760 --> 24:21.400
volunteering with the GNOME engagement team, and even going

24:21.400 --> 24:24.800
to shack up with one of the System76 guys who's got an

24:24.800 --> 24:26.000
apartment not too far from there.

24:26.240 --> 24:28.560
Nice. You can give a high five to Daniel Foray, too. He'll be

24:28.560 --> 24:30.840
there doing a talk about the elementary app center.

24:30.840 --> 24:33.280
I'm hoping to catch both his and Cassidy's talks.

24:33.320 --> 24:34.440
Oh, yeah, Cassidy's going to be there, too.

24:34.440 --> 24:34.920
Super exciting.

24:34.920 --> 24:38.520
Nice. All right. So you can be our, you'll be our Libre

24:38.520 --> 24:41.320
application summit correspondent. Report back with

24:41.320 --> 24:42.360
what you discover, all right?

24:42.640 --> 24:44.120
I would choose to accept that mission.

24:44.920 --> 24:45.440
Good man.

24:45.960 --> 24:48.520
It's not an impossible mission. In fact, it's the best kind of

24:48.520 --> 24:51.000
mission. So I think this gentleman's name we're going to

24:51.000 --> 24:55.440
talk about now is Benno? Benno? B-E-N-N-O.

24:55.480 --> 24:56.080
Benno.

24:56.080 --> 25:01.720
Benno? Yeah, okay. Benno had a talk at BSDCAN 2018 that was a

25:01.720 --> 25:05.840
few weeks ago. It was back in June, and it was titled The

25:05.840 --> 25:11.040
Tragedy of System D. And he says, System D, to put it mildly,

25:11.040 --> 25:14.400
is controversial. Depending on who you ask, it's either a

25:14.400 --> 25:17.480
complete violation of the Unix philosophy, a bloated pile of

25:17.480 --> 25:21.440
bugs, a complete violation of elegant simplicity, or all of

25:21.440 --> 25:25.160
the above. And he starts a talk that really got my attention.

25:25.160 --> 25:28.720
I'm going to play, it's a 30 minute talk. I'll play about

25:28.880 --> 25:32.120
three minutes of it. But I will link it in the show notes where

25:32.120 --> 25:35.160
you can download the slides and you can watch the entire talk.

25:35.480 --> 25:38.000
But it started really caught my attention. I decided to share it

25:38.000 --> 25:41.440
with the class here, because he brings up something that is not

25:41.440 --> 25:44.560
even related to Linux. It's not related to System D. I think

25:44.560 --> 25:48.400
it's something we all do as tribal animals. We do something

25:48.640 --> 25:52.240
to sort of show our allegiance to a particular tribe or group

25:52.240 --> 25:54.800
that brings down other people. And I think we're probably all

25:54.800 --> 25:55.320
guilty of it.

25:55.920 --> 26:02.680
All right, so I would just like to initially thank everyone on

26:02.680 --> 26:05.080
BSDCAN for inviting me to speak in front of all of you lovely

26:05.080 --> 26:08.560
people. And in full understanding and acknowledgement

26:08.560 --> 26:10.840
of that, thanks. I would like to present a live reading of

26:10.840 --> 26:13.920
Bezels by, Bedazzled by Blockchain by Michael, sorry, no.

26:15.800 --> 26:18.960
George Neville Neal could not be here, and it wouldn't feel right

26:18.960 --> 26:29.080
doing this without him. Which is a tragedy. Link. So, I came up

26:29.080 --> 26:31.720
with the name of this talk around the same time that I came

26:31.720 --> 26:34.800
up with the first sort of rough idea of it. And it seemed to fit

26:34.800 --> 26:38.200
really well, especially when I went to Wikipedia and saw that

26:38.200 --> 26:41.120
you know, tragedy is a form of drama based on human suffering

26:42.000 --> 26:44.320
that invokes an accompanying catharsis or pleasure in

26:44.320 --> 26:46.320
audiences. And I figured there was plenty of drama in here

26:46.320 --> 26:51.240
and suffering to go around in system D. And so, I figured that

26:51.240 --> 26:56.000
it was a good way to go. Another thing that really came into it

26:56.000 --> 26:59.720
when I was developing this talk is this piece by Orin Shaw

26:59.720 --> 27:03.600
called, Contempt Culture. It's a really interesting piece and

27:03.600 --> 27:06.400
it's kind of confronting sometimes because in a lot of

27:06.400 --> 27:08.560
the communities that we're in, part of the way that we show

27:08.560 --> 27:11.760
that we're in the community is by heaping shit on the other

27:11.760 --> 27:16.400
communities. And that kind of sucks. You know, your Python

27:16.400 --> 27:18.640
developers heap crap on the Perl developers and the Perl

27:18.640 --> 27:21.040
developers heap crap on the PHP developers. This piece is very

27:21.040 --> 27:26.480
focused on language stuff, but we kind of do that too. And so,

27:26.480 --> 27:28.880
I highly recommend that everyone reads this. And the

27:28.880 --> 27:33.200
other thing that I think goes into this discussion is the

27:33.200 --> 27:37.520
notion of change. Change threatens a bunch of things.

27:37.520 --> 27:40.560
The most obvious being familiarity. And familiarity

27:40.560 --> 27:43.760
feels really comfortable because it's the thing that we

27:43.760 --> 27:46.800
used to. But occasionally, it's really good to reassess what

27:46.800 --> 27:51.440
the familiar and decide whether we need to change it or not.

27:51.440 --> 27:55.600
I felt his comment there about how we sometimes as a group

27:55.600 --> 28:00.560
will throw shade on another group to sort of show that

28:00.560 --> 28:03.600
we're in, we're in with you, like I think the way you think.

28:03.600 --> 28:08.240
I think that's a really common behavior. And what he's talking

28:08.240 --> 28:11.840
about, obviously, is how the BSD camp has been really

28:11.840 --> 28:14.240
disparaging towards system D. That's really what he's

28:14.240 --> 28:18.480
addressing in this talk. In fact, he starts to, over the

28:18.480 --> 28:22.560
next 15 minutes, he starts to sort of set the audience up.

28:22.560 --> 28:27.440
And mind you, this is a room full of free BSD developers.

28:27.440 --> 28:29.840
The gray beards of the gray beards. In fact, in one of

28:29.840 --> 28:31.840
these clips, you'll hear Alan Jude in the background if you

28:31.840 --> 28:35.120
listen really carefully. And there's some coughing and some

28:35.120 --> 28:38.000
hacking because some of them are a little bit older. And

28:38.000 --> 28:44.400
as I cough and hack. And he's trying to convince them that

28:44.400 --> 28:47.600
they're already on this path. He starts to go through the

28:47.600 --> 28:52.080
history of Unix and shows how the very early init tools have

28:52.080 --> 28:55.840
now morphed from just getting the system up to mounting file

28:55.840 --> 28:59.760
systems, starting network interfaces, and doing much, much

28:59.760 --> 29:04.800
more. And after that this point, he starts to mention that

29:04.800 --> 29:10.240
these complex tools are beginning to create the need for

29:10.240 --> 29:14.160
a system layer in free BSD. So you have the user layer, the

29:14.160 --> 29:17.600
system layer, and the kernel layer. At which system D

29:17.600 --> 29:21.280
essentially introduced a system layer to Linux. User space,

29:21.280 --> 29:25.280
system space, kernel space. And he says we may need something

29:25.280 --> 29:28.240
similar in free BSD. In fact, we're already kind of on our

29:28.240 --> 29:31.840
way. But the thing is that dynamic stuff is often better

29:31.840 --> 29:34.880
managed through user space than it is through kernel code. And

29:34.880 --> 29:37.680
I think that Windows natively understood this from the

29:37.680 --> 29:40.480
beginning. Macos definitely understands that with system D,

29:40.480 --> 29:42.320
you actually understand that there's a layer in there in the

29:42.320 --> 29:45.520
middle called the system layer. Which I'm calling the system

29:45.520 --> 29:50.400
layer. And so system D implements that system layer for

29:50.400 --> 29:54.480
Linux by bringing in a bunch of code that manages various

29:54.480 --> 29:58.880
system functions like network connectivity, time, device

29:58.880 --> 30:03.600
management, and all that kind of things that just don't

30:03.600 --> 30:06.800
necessarily belong in standard user space, but also don't

30:06.800 --> 30:11.120
necessarily belong in the kernel. And the thing is that

30:11.120 --> 30:13.600
on top of that, it doesn't really do it in a way that

30:13.600 --> 30:16.080
everyone finds familiar, which I think is part of the source

30:16.080 --> 30:20.240
of the angst to it. But it does give you an explanation as to

30:20.240 --> 30:23.280
why it sees the need to bring in things like network manager

30:23.280 --> 30:28.400
code, Udev, time, resolver libraries. Because all of those

30:28.400 --> 30:32.080
things are systemic services that are getting provided to

30:32.080 --> 30:38.160
user space. So how did that work out? And then he goes

30:38.160 --> 30:42.880
through and shows the history of system D adoption. He dives

30:42.880 --> 30:46.160
in a little bit to Lenart's history with it turns out

30:46.160 --> 30:50.320
Lenart Pottering, the guy that created system D and was its

30:50.320 --> 30:55.520
primary advocate, was at odds with management. Management

30:55.520 --> 30:58.960
wasn't all that big on it. They had made their choice. They

30:58.960 --> 31:01.760
were perfectly happy with how it was functioning in RHEL and

31:01.760 --> 31:06.080
didn't really see the point in system D. And he said, no, no

31:06.080 --> 31:09.040
trust me, let me show you. And despite pushback from his own

31:09.040 --> 31:10.560
management, he continued to work on it, which is an

31:10.560 --> 31:13.440
interesting part of this clip. And then he starts to get into

31:13.440 --> 31:16.320
some of the most common complaints about system D like

31:16.320 --> 31:18.800
one was just mentioned in the chat room. It runs as PID one

31:18.800 --> 31:21.920
and he has a response to that. But the number one complaint

31:21.920 --> 31:25.040
system D gets, especially from the free BSD camp, because

31:25.040 --> 31:29.440
remember the audience here, is it's just not damn UNIX like.

31:29.440 --> 31:32.160
Moving through the rest of this section, I kind of want to look

31:32.160 --> 31:35.840
at some of the complaints that people have about system D and

31:35.840 --> 31:40.720
just sort of address them a bit. Number one, there's a lot

31:40.720 --> 31:44.640
of suggestions that it violates the UNIX philosophy, which I

31:44.640 --> 31:46.960
usually take to mean that you want to write software that

31:46.960 --> 31:49.280
does one thing and does it well and then connect it to other

31:49.280 --> 31:53.600
things. System D as a project contains a lot of things. System

31:53.600 --> 31:58.080
D as a demon is a thing that reacts to events and starts

31:58.080 --> 32:03.040
things and does it very well. And so you could claim that it

32:03.040 --> 32:05.840
does not actually violate the UNIX philosophy. You could

32:05.840 --> 32:07.680
claim that there's a bit of violation and that it's

32:07.680 --> 32:10.080
bringing all of this extra functionality into the project,

32:10.080 --> 32:12.800
but I think for BSD projects to criticize another project for

32:12.800 --> 32:14.880
bringing a bunch of tangentially linked software into

32:14.880 --> 32:19.280
one repository to manage it collectively, that's a bit

32:19.280 --> 32:23.280
rich. I think that might be one of my favorite parts right

32:23.280 --> 32:28.320
there. It is a bit rich. And he says there is also the issue

32:28.320 --> 32:31.440
of Lenard's personality. It is something that seems to have

32:31.440 --> 32:34.560
triggered a bit of the reaction. I think that's fair.

32:34.560 --> 32:37.360
I mean, it's definitely the communication aspect and how

32:37.360 --> 32:39.920
you go about that. It's a big part of growing and trying to

32:39.920 --> 32:41.760
get adoption for a project like System D.

32:41.760 --> 32:45.920
That's it. So open source communities are fun places.

32:45.920 --> 32:48.800
Ask me how I know.

32:48.800 --> 32:55.040
Is it July 4th yet? So Lenard Pottering looks like an

32:55.040 --> 32:58.880
interesting guy in a bunch of ways. Lots of people don't like

32:58.880 --> 33:05.680
him and I can kind of see why. He tends to wade into a place

33:05.680 --> 33:08.880
with a bunch of ideas that he holds very strongly and then

33:08.880 --> 33:12.240
somehow actually managed to get them implemented and delivered

33:12.240 --> 33:16.400
and in your face. And if you don't like them, it's very hard

33:16.400 --> 33:20.480
to get him to change his mind. The thing is that I've just

33:20.480 --> 33:24.720
described a whole lot of people in open source. Yeah. One

33:24.720 --> 33:27.920
thing I think you have to admire about him is that he

33:27.920 --> 33:30.880
does actually get this stuff done. I mean, for someone to

33:30.880 --> 33:32.640
show up to his management and say, hi, I want to rewrite

33:32.640 --> 33:35.440
init and I think we should do it like this and for them to

33:35.440 --> 33:39.280
go, no. And for him to go, no, no, no, just wait and to

33:39.280 --> 33:41.920
actually go do it and to have it be so successful that it's

33:41.920 --> 33:45.520
spread outside his own project into a whole bunch of other

33:45.520 --> 33:47.680
major Linux projects. I think that actually is quite

33:47.680 --> 33:52.560
impressive. The other thing that I saw is that there are a

33:52.560 --> 33:56.800
bunch of cases where he's dealing with bugs where he does

33:56.800 --> 34:00.640
actually remain incredibly polite given the amount of

34:00.640 --> 34:04.480
stuff that's being thrown at him. There's a famous bug where

34:04.480 --> 34:09.200
it looked like SystemD was misparsing a username that

34:09.200 --> 34:13.040
started with a digit and using the digit which was zero as a

34:13.040 --> 34:16.640
user ID and it turned out that it was actually not being read

34:16.640 --> 34:20.000
as a it was being interpreted as an invalid username and

34:20.000 --> 34:22.000
there's a long discussion about the validity of usernames

34:22.000 --> 34:25.920
and while it does get quite rule lawyer at points, he never

34:25.920 --> 34:29.520
goes into name calling. He's never calling people idiots and

34:29.520 --> 34:31.360
that when you're facing that kind of stuff is quite

34:31.360 --> 34:33.760
admirable given the amount of things like death threats he's

34:33.760 --> 34:37.200
got over this which is not cool. I'm wondering Wimpy if

34:37.200 --> 34:41.520
you have any reaction to his comments about the typical open

34:41.520 --> 34:44.880
source personality there and about how sometimes that causes

34:44.880 --> 34:48.800
some of the reaction to their proposals. This is a really

34:48.800 --> 34:53.520
well thought well reasoned presentation. I'm gonna I'm

34:53.520 --> 34:56.400
gonna go and find the full the full thing and have a listen to

34:56.400 --> 34:59.520
this later. I will have in the show notes for sure. Yeah.

34:59.520 --> 35:03.760
Yeah. What a what a great speaker on that point. Yes. I

35:03.760 --> 35:07.520
mean they're always stereotypes in communities right and

35:07.520 --> 35:13.600
definitely those people exist and anyone who's a leader in

35:13.600 --> 35:18.480
any sphere including open source can in some respects be

35:18.480 --> 35:24.640
put on a pedestal and held up and and celebrated by sections

35:24.640 --> 35:29.440
of the community but you know if you have strong beliefs and

35:29.440 --> 35:32.320
and you and you want to set a project in a particular

35:32.320 --> 35:35.440
direction and you have conviction behind that there

35:35.440 --> 35:38.880
will be another group of people who don't subscribe to your

35:38.880 --> 35:44.960
philosophy who will resist you know what you're trying to do

35:44.960 --> 35:48.720
and you know that that will manifest itself in lots of

35:48.720 --> 35:53.040
different ways but I don't know necessarily that that's open

35:53.040 --> 35:57.840
source. I think that's people I think the difference is yes,

35:57.840 --> 36:01.760
it's human nature and I think one of the things is is because

36:01.760 --> 36:05.920
open source and free software all of this stuff plays out in

36:05.920 --> 36:10.000
the public domain you know the public sphere then we see all

36:10.000 --> 36:13.120
of this interaction happen and all of the fallout and all of

36:13.120 --> 36:17.920
the you know the the drama that that goes along with it. So

36:17.920 --> 36:21.360
you know we're just a microcosm of of humanity in that respect.

36:21.360 --> 36:23.680
Yeah. Yeah. It's fascinating that it just it it affects

36:23.680 --> 36:27.280
everything everything we touch we just mess it up. Yeah. We

36:27.280 --> 36:29.440
have more access and we're maybe more passionate about it

36:29.440 --> 36:33.280
too and we just we just like to talk. It's it's to me also a

36:33.280 --> 36:37.200
data point in where this conversation is now in the free

36:37.200 --> 36:41.600
BSD community because one of the things that's I enjoy is

36:41.600 --> 36:45.200
if you can go back through the history of this show. In fact,

36:45.200 --> 36:49.760
I would I would really just be extremely flattered if somebody

36:49.760 --> 36:54.880
took the time to make a YouTube playlist or sent me the links

36:54.880 --> 36:57.840
of all of the episodes from our past where we covered system

36:57.840 --> 37:01.520
D from essentially its initial idea to the end of the Debian

37:01.520 --> 37:06.000
drama and then Ubuntu's adoption. I would I would be

37:06.000 --> 37:08.240
fascinated to know what episode series that is because I would

37:08.240 --> 37:10.880
love to be able to make a playlist like a one-off feed.

37:10.880 --> 37:15.840
That was every episode in 2015. Yeah. I mean it was just and

37:15.840 --> 37:18.400
but my thought along the entire time was well what the hell are

37:18.400 --> 37:21.360
the free BSD guys going to do because I could see what system

37:21.360 --> 37:24.960
D was trying to solve and so now this to me is a data point

37:24.960 --> 37:28.080
of where they're at in this conversation and it's taking

37:28.080 --> 37:31.360
them a while to get here, but he ends the talk on a couple of

37:31.360 --> 37:33.760
really strong points and there's even more in the full

37:33.760 --> 37:35.920
talk. I'm not giving a full spoiler here. There's more good

37:35.920 --> 37:41.280
stuff in the talk, but he ends on a warning to free BSD users

37:41.280 --> 37:46.720
don't mock system D and don't recruit around system D mocking

37:46.720 --> 37:51.360
system D is the wrong attitude to take. It's not the kind of

37:51.360 --> 37:54.720
sad thing that Linux people have to deal with and how sorry

37:54.720 --> 37:57.200
we are for them that they have system D. We should be looking

37:57.200 --> 38:01.840
at going why did they choose to do that and what I really find

38:01.840 --> 38:07.280
problematic is using system D as a recruiting tool for BSD. I

38:07.280 --> 38:09.920
don't think that that should be done at all because when you

38:09.920 --> 38:12.480
think about the kind of people that we would bring across if

38:12.480 --> 38:20.000
we were to say come to come to BSD we don't change. Or come to

38:20.000 --> 38:22.960
BSD we don't have system D. Oh, but we've just come up with a

38:22.960 --> 38:25.440
really good idea for something that works like it. I don't

38:25.440 --> 38:28.560
think that those are the kind of people that we you know we

38:28.560 --> 38:31.840
don't want to bring that attitude into our our thing and

38:31.840 --> 38:35.600
what again what I said we should be doing instead is

38:35.600 --> 38:40.480
asking why did they see this as necessary and the thing is that

38:40.480 --> 38:42.720
if you look at it like that if you don't see it as all those

38:42.720 --> 38:45.360
poor Linux people with their terrible init system and go

38:45.360 --> 38:47.600
hang on they just did that and I don't understand it. Why did

38:47.600 --> 38:50.320
they do that? What do they see in it? That means that we can

38:50.320 --> 38:52.880
then look at that and start to find things that we can get

38:52.880 --> 38:57.440
out of it. The other thing to be careful of is the next

38:57.440 --> 39:00.720
generation of people the people that come after us they don't

39:00.720 --> 39:04.800
think the way that we think necessarily. A lot of the

39:04.800 --> 39:07.680
people who are now coming into you know IT and software

39:07.680 --> 39:11.280
engineering they're so much more used to APIs and not

39:11.280 --> 39:16.160
library APIs, remote procedure call APIs. They grok things

39:16.160 --> 39:19.040
like containers in ways that may seem quite unfamiliar to

39:19.040 --> 39:22.240
us. That doesn't mean that containers are bad and it

39:22.240 --> 39:23.840
certainly doesn't mean that containers are something that

39:23.840 --> 39:26.480
should be mocked. I heard someone describe Kubernetes as

39:26.480 --> 39:29.600
the POSIX of the cloud and while that may sound ridiculous

39:29.600 --> 39:31.680
at first I think it's a scary thought when you think about

39:31.680 --> 39:35.280
the fact that we can't run Kubernetes.

39:35.280 --> 39:37.920
Ain't that true? Yeah I hadn't thought about that obviously

39:37.920 --> 39:41.440
because it's not my area but that is a big thing. That whole

39:41.440 --> 39:44.160
point don't mock systemd don't recruit based on that because

39:44.160 --> 39:46.480
if you bring in a whole user base that resists change then

39:46.480 --> 39:50.480
it's gonna hurt the project. That's really insightful and

39:50.480 --> 39:54.960
true for all projects. The Linux community need to take a

39:54.960 --> 40:01.040
leaf out of this presentation. The message that's delivered

40:01.040 --> 40:07.120
here about critical thinking about why a project or why a

40:07.120 --> 40:11.600
person or why a distribution has made the choices and

40:11.600 --> 40:17.840
decisions that they've chosen rather than just shitting on it

40:17.840 --> 40:20.400
for the sake of shitting on it because you're not in the

40:20.400 --> 40:24.320
camp of that distribution is a very very positive message to

40:24.320 --> 40:28.560
take away from this. Within the Linux community if you're not

40:28.560 --> 40:32.880
running Arch or you're not running you know Slackware or

40:32.880 --> 40:37.760
you're not running KDE neon you know there's this group of

40:37.760 --> 40:42.160
people that will criticize your choices and this really needs

40:42.160 --> 40:47.520
to stop because if we're Linux users it really doesn't

40:47.520 --> 40:53.680
matter what distribution we've brought into. We all agree on

40:53.680 --> 40:58.160
the fact that Linux is for our purposes the best operating

40:58.160 --> 41:02.400
system available and we should not be throwing shit at one

41:02.400 --> 41:07.920
another over details you know because we look like a bunch of

41:07.920 --> 41:12.320
arsehats from the outside and it's utterly destructive

41:12.320 --> 41:17.280
because the amount of energy that goes into all of this

41:17.280 --> 41:22.720
negative you know product is is pointless. It would be far

41:22.720 --> 41:25.360
better to have you know if you don't agree with what a

41:25.360 --> 41:29.280
project's doing as this guy's just said ask yourself well why

41:29.280 --> 41:32.000
did they do that? What was the reasons that drove them to do

41:32.000 --> 41:34.960
this thing? Maybe try and understand where they're coming

41:34.960 --> 41:37.760
from because there might be something in that. Maybe you

41:37.760 --> 41:41.680
don't believe in that particular technology but as a

41:41.680 --> 41:45.600
technology direction you can see some value in it. Yep I

41:45.600 --> 41:48.480
completely agree perfectly said. I would love for this to

41:48.480 --> 41:51.840
be held up as an example of critical thinking in open

41:51.840 --> 41:54.720
source and how not to sling shit at one another because we

41:54.720 --> 41:57.120
really need to cut that nonsense out. And we can all be

41:57.120 --> 41:59.840
better right if we can if we can productively learn they'll

41:59.840 --> 42:02.560
take some ideas that they like add some new ideas and then we

42:02.560 --> 42:05.280
can learn from that in the future. And it's a high level

42:05.280 --> 42:07.760
perspective and I think that's the that's the perspective that

42:07.760 --> 42:10.800
gets the work done and I loved it. I thought it was a great

42:10.800 --> 42:12.880
talk so I wanted to share it with you guys and we'll have it

42:12.880 --> 42:16.480
linked in the show notes linuxunplug.com slash 262 and

42:16.480 --> 42:19.360
I'll tell you this after listening to that I had been on

42:19.360 --> 42:21.840
the fence. I've decided I'm going to go to meet BSD in

42:21.840 --> 42:25.360
California October 19th and the 20th. I'm going to be down

42:25.360 --> 42:28.640
there. It's going to be at Intel's campus. Oh how cool is

42:28.640 --> 42:31.360
that? Heck yeah yeah. You should consider coming with me.

42:31.360 --> 42:34.640
I bet you we could make that drive in in one day. Yeah I

42:34.640 --> 42:36.400
think we were up to that challenge. We could we could run

42:36.400 --> 42:39.840
down there. We could we could do a text on get our get our

42:39.840 --> 42:43.200
BSD on hang out with Alan Jude record a text nap and then we

42:43.200 --> 42:45.360
could make it back up here. It's at the Santa Clara Intel

42:45.360 --> 42:48.560
campus and it's going to be on October 19th and 20th. I'm

42:48.560 --> 42:50.640
going to go. Let's do it. I think you know after hearing

42:50.640 --> 42:55.360
that I'm like that that that is that is exactly the message.

42:55.360 --> 42:57.680
That is exactly the message we all need to be taking in and

42:57.680 --> 43:00.000
it's that atmosphere which is going to be conducive to open

43:00.000 --> 43:03.760
source development. Plus it'll be good to see Alan. Exactly.

43:03.760 --> 43:06.640
Yeah yeah that's pretty great and you can find links to all

43:06.640 --> 43:09.680
of that in the show notes. Now I also want to talk about

43:09.680 --> 43:13.120
Dropbox this week and a kind of a just a cool temporary

43:13.120 --> 43:15.280
workaround. Even if you're not a Dropbox user something that's

43:15.280 --> 43:20.000
just a neat trick you could do to hide stuff on your computer

43:20.000 --> 43:22.160
and all kinds of other things. So let's take a moment and

43:22.160 --> 43:25.520
thank Ting for making this episode possible Linux dot ting

43:25.520 --> 43:28.640
dot com is where you go when you go there you'll get twenty

43:28.640 --> 43:31.680
five dollars off ting service if you bring a device or twenty

43:31.680 --> 43:34.800
five dollars off a phone ting is smarter than unlimited. If

43:34.800 --> 43:37.840
you use less you pay less. The average ting bill is just twenty

43:37.840 --> 43:40.800
three dollars per month per phone. It's just a fair price

43:40.800 --> 43:44.960
for how much you talk text and data you use. That's it. Six

43:44.960 --> 43:48.400
dollars for the line which is great if you want to have a

43:48.400 --> 43:50.800
couple of family lines or a backup line or if you're a

43:50.800 --> 43:54.720
small business and you need twenty five lines. It's great

43:54.720 --> 43:58.240
and they have nationwide coverage CDMA and GSM. No

43:58.240 --> 44:02.160
contracts no quote unquote agreements nothing weird like

44:02.160 --> 44:05.200
that and you're in control the entire time. You can always see

44:05.200 --> 44:08.240
your usage. You can change different individual aspects of

44:08.240 --> 44:10.560
your service like just turn stuff off if you want. You can

44:10.560 --> 44:14.480
set usage alerts as well. And Ting's not in it to try to push

44:14.480 --> 44:17.520
an app store or a music streaming service. So they

44:17.520 --> 44:20.240
don't really have an agenda of how you use Ting. So they don't

44:20.240 --> 44:22.800
have to push down like a Ting experience with a Ting image

44:22.800 --> 44:25.520
with Ting branding on your phone. And they don't really

44:25.520 --> 44:28.320
care if you just never want to use a text message ever. If you

44:28.320 --> 44:31.040
do everything over WhatsApp or telegram you mean they'll just

44:31.040 --> 44:34.240
like they'll send a text if I want and otherwise they don't

44:34.240 --> 44:36.080
care? They don't even bill you for it. How does that make sense?

44:36.080 --> 44:38.720
Wow. I know I guess that's how it works in some other places in

44:38.720 --> 44:41.040
the world. They are so backwards. Not here in the

44:41.040 --> 44:45.280
states. I wanted to point out if you need a phone right now

44:45.280 --> 44:49.280
and you don't have a thousand dollars to spend on a note why

44:49.280 --> 44:54.480
not look at the GS5 Plus or I'm sorry the G5 S Plus. It's the

44:54.480 --> 44:58.640
Moto G5 S Plus for two hundred and fifty four dollars. You

44:58.640 --> 45:01.680
would own the phone outright when you go to linux.ting.com

45:01.680 --> 45:04.400
because it's it's it's normally 280 but when you go to our

45:04.400 --> 45:09.840
linux.ting.com URL you get it for 254 unlocked multi network

45:09.840 --> 45:13.920
two gigahertz octa core Qualcomm Snapdragon processor

45:13.920 --> 45:18.800
five point five inch IPS display three thousand milliamp

45:18.800 --> 45:23.600
battery and it also has an SD slot so you could put up to

45:23.600 --> 45:27.280
128 gigs of micro SD into it for two hundred and fifty four

45:27.280 --> 45:30.400
dollars. That's a capable phone right there. No contract

45:30.400 --> 45:33.440
nothing and it's just a clean Android experience and you just

45:33.440 --> 45:39.360
pay for what you use. Start by going to linux.ting.com. Oh

45:39.360 --> 45:42.160
you know what I wish I did. I wish I had like a good like I

45:42.160 --> 45:44.960
like an old classic Kyra clip. I feel like some classic Kyra

45:44.960 --> 45:48.080
but I don't think I have any classic Kyra loaded. I don't.

45:48.080 --> 45:50.640
That was just poor planning. I do have look at this though. I

45:50.640 --> 45:53.120
have classic Brent loaded in here. That's interesting.

45:53.120 --> 45:55.120
That's good. I've got that set up so if we ever need some

45:55.120 --> 45:59.440
classic Brent I can always pull that in. That's nice. That's

45:59.440 --> 46:01.760
good. What else do I have in here? Of course I've got

46:01.760 --> 46:06.160
Richard but I digress. He's taking a nap right now. Now

46:06.160 --> 46:08.320
let's take a moment and talk about Linux Academy because

46:08.320 --> 46:11.760
today is a huge day for Linux Academy. I'll get there in a

46:11.760 --> 46:14.400
moment but start going to Linux on go to linuxacademy.com

46:14.400 --> 46:17.520
slash unplugged and sign up for a free seven day trial. It's a

46:17.520 --> 46:20.560
platform to learn everything about Linux and all of this

46:20.560 --> 46:23.200
stuff that runs on top of Linux that you want on your resume

46:23.200 --> 46:25.520
and it's a great time to sign up because they've been adding a

46:25.520 --> 46:29.840
ton of content really working like crazy on this stuff and

46:29.840 --> 46:32.240
there's things they have in the works that I'm not even

46:32.240 --> 46:35.920
supposed to tell you about. I know I can't help it. So I'll

46:35.920 --> 46:37.760
tell you about something that's a little public. There's no

46:37.760 --> 46:43.440
getting around it today. Forbes released their fastest growing

46:43.440 --> 46:47.200
startups and it's like you know at a five so they they narrow

46:47.200 --> 46:51.040
this list down to 5000 companies in the United States

46:51.040 --> 46:54.960
that are just growing like crazy and Linux Academy is on

46:54.960 --> 47:00.480
the list. Whoa. They're on Forbes is 5000 and out of 5000

47:00.480 --> 47:06.560
Linux Academy is ranked 78. And I don't know what the

47:06.560 --> 47:09.200
period of growth is here cuz they don't tell you the scale so

47:09.200 --> 47:12.160
you just have to guess. Alright, Wes, you ready? And

47:12.160 --> 47:14.880
Brent, if if you have a guess too, you're welcome to chime in

47:14.880 --> 47:18.160
cuz I know I teased you in the pre show. Can you guess the

47:18.160 --> 47:21.280
growth percentage for whatever it is? I don't know what year

47:21.280 --> 47:23.920
since they started. I don't know cuz Forbes doesn't say. So

47:23.920 --> 47:26.400
we're just it's who cares but it's just for fun. Can you

47:26.400 --> 47:29.760
guess the growth percentage of Linux Academy as listed on the

47:29.760 --> 47:34.720
Forbes top 5000 fastest growing companies? 200%. 200% is pretty

47:34.720 --> 47:37.600
good. That's pretty good. That is pretty pretty bold. That is

47:37.600 --> 47:40.800
pretty bold. Uh does anybody in the mumble room? Brent, do you

47:40.800 --> 47:42.800
have a guess? What's your guess on Linux Academy's growth

47:42.800 --> 47:45.600
number? Well, what's the uh what's the they're on the list

47:45.600 --> 47:50.720
of total how many? This is Forbes's 5000 fastest growing

47:50.720 --> 47:54.720
companies in America and they're number 78 on the list.

47:54.720 --> 47:57.760
What do you think their growth percentage has been there for

47:57.760 --> 48:01.280
whatever the arbitrary amount of time is? I'm gonna go their

48:01.280 --> 48:05.040
number 78. So I'm gonna go 178. Oh, okay. So Wes is 200

48:05.040 --> 48:07.760
something 178. Wimpy, do you have a guess? Eric, do you have

48:07.760 --> 48:11.920
a guess what what uh what Linux Academy's number is? Uh 250%

48:11.920 --> 48:14.080
250. Alright, it's like prices right here. What do you think

48:14.080 --> 48:19.600
Wimpy? For 300%. Those are all really good bold guesses.

48:19.600 --> 48:21.280
Probably not even. I wouldn't have gone that high. I

48:21.280 --> 48:25.280
wouldn't have gone that high. The official Forbes Inc. 500

48:25.280 --> 48:29.520
fastest growing companies in America growth percentage is

48:29.520 --> 48:38.400
4653.64%. Whoa. What? And I actually think that's based on a

48:38.400 --> 48:41.280
low guess of what the revenue is but that's pretty amazing.

48:41.280 --> 48:47.840
That is pretty amazing. 4000% and they're teaching about

48:47.840 --> 48:50.160
Linux. There's a reason why they're growing like crazy

48:50.160 --> 48:53.600
because let's be honest, one of the hardest things about the

48:53.600 --> 48:56.720
IT industry is the fact that it's changing faster than just

48:56.720 --> 49:00.480
about any other industry in the world. It's sort of the deal

49:00.480 --> 49:04.080
with the devil we all accepted when we got into IT. We all

49:04.080 --> 49:07.280
knew that was the case and Linux Academy is kind of a tool

49:07.280 --> 49:10.160
to help keep you current. It's really due diligence when

49:10.160 --> 49:12.640
you're in IT is keeping your skill set fresh and I think

49:12.640 --> 49:15.600
that's why they're growing like crazy is when you look at the

49:15.600 --> 49:18.960
explosion of cloud-based services like Azure and Open

49:18.960 --> 49:21.680
Stack and AWS and people that are rolling in their on

49:21.680 --> 49:24.400
premises infrastructure and how everything is based around

49:24.400 --> 49:28.800
Linux. It makes sense. They are the go-to platforms to go

49:28.800 --> 49:31.440
there Linux Academy.com slash unplugged sign up for a free

49:31.440 --> 49:36.240
seven-day trial and the upshot of that is. They look good on

49:36.240 --> 49:39.840
the resume now, you know, that's like a recognizable brand

49:39.840 --> 49:42.400
name. Now you went to Linux Academy. Oh, I've heard of

49:42.400 --> 49:45.360
them. Yeah, they're on Forbes list like that's good for Linux

49:45.360 --> 49:47.440
Academy. So congratulations to them for making the list too.

49:47.440 --> 49:51.120
That's pretty great and I want to take a moment and tell you

49:51.120 --> 49:53.760
how you can get a $100 credit at Digital Ocean. So go to

49:53.760 --> 49:57.440
dio.co slash unplugged West goes there every single day. He

49:57.440 --> 49:59.280
signs up with a new email address every single time.

50:00.080 --> 50:02.160
Actually, he doesn't. He uses the same email address so he

50:02.160 --> 50:04.160
never gets the credit. I mean, I already had it open. It was

50:04.160 --> 50:08.240
one of my tabs. You actually did no joke. It has a dashboard

50:08.240 --> 50:11.200
up on there right now. How could you not? It's so great.

50:11.200 --> 50:13.440
Digital Ocean is great for spinning up systems that you

50:13.440 --> 50:14.960
want to try something out for a couple of minutes or

50:14.960 --> 50:16.640
something that you want to put in production for the next few

50:16.640 --> 50:19.360
years. I literally have droplets that have been running

50:19.360 --> 50:24.160
for four plus years. It's great. It's my data center on

50:24.160 --> 50:27.040
demand and it can be yours too. And you can get a $100 credit

50:27.040 --> 50:30.560
that lasts 60 days when you go to dio.co slash unplugged.

50:31.200 --> 50:34.080
Super nice fast systems all running Linux KVM is the

50:34.080 --> 50:37.760
virtualizer. They have enterprise grade SSDs. They

50:37.760 --> 50:40.240
have cloud based firewall so you can block traffic that never

50:40.240 --> 50:43.200
even hits your rig. Easy to use DNS management so you can set

50:43.200 --> 50:45.920
up your domains to point to your droplets. 40 gigabyte

50:45.920 --> 50:49.760
hypervisor connections and data centers all over the world.

50:49.760 --> 50:52.240
And then you top that off with a great dashboard and an easy

50:52.240 --> 50:56.160
to use API. And you're like, OK, good enough. Good to know.

50:56.160 --> 50:58.640
Yeah, here's a couple of the other things. You can get a

50:58.640 --> 51:01.440
great system for three cents an hour. Four gigs of RAM, two

51:01.440 --> 51:05.920
CPUs, 80 gigabyte SSDs, which is an enterprise grade SSD.

51:05.920 --> 51:08.080
It's crazy fast. Three terabytes of transfer. Three

51:08.080 --> 51:11.040
cents an hour. That's great. And then you're like, OK, Chris,

51:11.040 --> 51:12.560
that's enough. I got it. I'm like, well, yeah, but hold on.

51:12.560 --> 51:14.880
There's one more thing. They also have the best

51:14.880 --> 51:17.520
documentation in the industry on top of one click

51:17.520 --> 51:21.520
deployments of things like GitLab and WordPress and Ghost

51:21.520 --> 51:25.520
and many more that you just hit one button and you get if you

51:25.520 --> 51:31.360
had been setting up a WordPress stack as a career, your entire

51:31.360 --> 51:33.520
your entire career when you like, damn, they set it up

51:33.520 --> 51:36.880
exactly like I would. And I say that as somebody who has been

51:36.880 --> 51:39.600
one of the biggest advocates of setting it up yourself so you

51:39.600 --> 51:42.000
know how it works. You know, going through Arch, going

51:42.000 --> 51:44.800
through Gentoo so you know how it works, building a system so

51:44.800 --> 51:47.280
you understand how it works. I now do these one click

51:47.280 --> 51:50.000
deployments because I've gone through and deconstructed. How

51:50.000 --> 51:52.800
do they set it up? What repos are they using? What versions

51:52.800 --> 51:55.360
do they have installed? What are the defaults in the config

51:55.360 --> 51:58.400
files? And it's all the stuff I just would have done. They

51:58.400 --> 52:00.400
really know what they're doing over there. I mean, once you've

52:00.400 --> 52:03.360
learned how to do it, then they've got it for you and you

52:03.360 --> 52:05.360
can trust that they know what they're doing, too. So it's

52:05.360 --> 52:07.920
reliable. You can just deploy a base system and learn, too.

52:07.920 --> 52:09.520
That's what's great about DigitalOcean, especially when

52:09.520 --> 52:13.600
you can get a $100 credit by going to do.co slash unplugged

52:13.600 --> 52:16.560
and a big thank you to DigitalOcean for sponsoring the

52:16.560 --> 52:21.200
unplugged program do.co slash unplugged. All right, so we

52:21.200 --> 52:24.560
covered this on Linux Action News 66 this week. Dropbox is

52:24.560 --> 52:28.080
stopping sinking on any file system other than unencrypted

52:28.080 --> 52:32.160
extended for on November 7th. After 10 years of using

52:32.160 --> 52:35.280
Dropbox, they've finally done something that's going to force

52:35.280 --> 52:39.440
me to abandon Dropbox. Chris, I just switched to Bcash FS.

52:39.440 --> 52:45.360
This is terrible news. Yeah, or Butter FS or ZFS. It is a real

52:45.360 --> 52:50.080
shame. And the explanation from Dropbox is a clown show. They

52:50.080 --> 52:53.920
say a supportive file system is required as Dropbox relies on

52:53.920 --> 52:57.680
extended attributes to identify files in the Dropbox folder and

52:57.680 --> 53:00.880
keep them in sync. We will keep supporting only the most common

53:00.880 --> 53:03.520
file systems that support extended attributes so we can

53:03.520 --> 53:07.040
ensure stability and a consistent experience. Well,

53:07.040 --> 53:09.600
that's the biggest chicken shit reason that they could

53:09.600 --> 53:12.400
possibly give because the file systems they're not going to be

53:12.400 --> 53:15.520
supporting have fantastic support for extended

53:15.520 --> 53:19.360
attributes. It's the most ridiculous on its face answer

53:19.360 --> 53:22.720
they could possibly give. And there's been some speculation

53:22.720 --> 53:25.920
that it actually comes down to how they try to hide your local

53:25.920 --> 53:29.040
encryption key and the fact that they can't do it the same

53:29.040 --> 53:31.680
way they do it on extended for on XFS and things like that. So

53:31.680 --> 53:35.040
there's various speculation to what the real reason is, but

53:35.040 --> 53:37.520
that's the chicken shit answer that they've given us and it has

53:37.520 --> 53:40.800
me upset and I'll I want to take a moment not to defend

53:40.800 --> 53:43.520
Dropbox or encourage anyone to use the service because I am

53:43.520 --> 53:46.560
switching off. That's that's just a foregone conclusion. I

53:46.560 --> 53:50.240
have to. First of all, I'm paying for the business version,

53:50.240 --> 53:52.640
which is a thousand dollars a year. Yeah. Okay. Well, if

53:52.640 --> 53:54.640
you're paying, I mean, then that that does change the value

53:54.640 --> 53:56.880
property. Hell if I'm going to if hell if I'm going to spend

53:56.880 --> 53:58.880
2000 if I'm going to spend a thousand dollars a year on

53:58.880 --> 54:01.280
something that doesn't work the way I want. Here's the reality

54:01.280 --> 54:04.400
that was I have two terabytes in Dropbox. Oh, I've been using

54:04.400 --> 54:07.600
it for 10 years. Everybody who's ever worked for JB in a media

54:07.600 --> 54:11.280
production capacity has all of their work in Dropbox. Every

54:11.280 --> 54:15.360
clip for on filter is stored in Dropbox. The one of the great

54:15.360 --> 54:19.520
features about Dropbox is they pay for the disk. They manage

54:19.520 --> 54:23.840
the disk. I buy a subscription plan and they add the disk and

54:23.840 --> 54:26.240
it works out to be cheaper than it would be to buy the same

54:26.240 --> 54:29.760
amount of disk on a VPS and it even works out to be cheaper.

54:29.760 --> 54:33.200
If I were to buy all of the disk and set it up, it still

54:33.200 --> 54:37.040
works out to be a cheaper price. If you consider that I

54:37.040 --> 54:39.760
also still need sinking, I would like revision copies so I

54:39.760 --> 54:42.400
could do restorations. I would like a web UI so that way I can

54:42.400 --> 54:45.760
view the files when I'm remote all of these things. The cost

54:45.760 --> 54:48.720
ends up being essentially right. You need like a business

54:48.720 --> 54:51.440
class reliable interface to your files. Yeah, all of a sudden

54:51.440 --> 54:54.160
$1000 is not that much. It's really not when you're

54:54.160 --> 54:56.400
considering it. Okay, I'd have to okay. So if I'm using two

54:56.400 --> 54:59.440
terabytes today, I probably want at least a minimum of five

54:59.440 --> 55:01.520
terabytes of space. I'm going to want that to be an array to

55:01.520 --> 55:03.200
array. I'm going to want that to be in a box. I'm going to

55:03.200 --> 55:06.160
want that to be connected and I need to set that up. It's not

55:06.160 --> 55:09.760
that far away from $1000. Even if I use an existing PC, I have.

55:09.760 --> 55:11.760
And you only have so much time in a week to be setting up more

55:11.760 --> 55:16.000
and more free NAS boxes. And then fundamentally there is a

55:16.000 --> 55:19.360
huge advantage to having a local client. So Google Drive

55:19.360 --> 55:21.840
and things like that are not particularly appealing because

55:21.840 --> 55:25.040
when you have a software demon running on your system sinking

55:25.040 --> 55:29.280
folders, what you get in essence is a network file system

55:29.280 --> 55:33.360
that's always available offline. And I can save a file to one

55:33.360 --> 55:37.440
location and it can be tilde slash Dropbox slash music and

55:37.440 --> 55:42.080
it is the same file path on every system I sit down on. And

55:42.080 --> 55:44.880
I can use config files that way. I can use music files that

55:44.880 --> 55:48.560
way. We can do media production that way. I can export to a

55:48.560 --> 55:51.680
folder after we're done recording the show in Dropbox

55:51.680 --> 55:54.400
and it sinks up to a cloud system that Joe can log in

55:54.400 --> 55:57.040
through a web browser and download it. And it's super,

55:57.040 --> 55:59.920
super convenient because it creates an omnipresent network

55:59.920 --> 56:03.280
file system that is fully available offline that can sync

56:03.280 --> 56:07.040
the changes up once you connect. And it does it in a way

56:07.040 --> 56:09.600
that is simple because you can install a client, you log in

56:09.600 --> 56:11.760
with a username and password and it begins immediately

56:11.760 --> 56:14.480
sinking. You need to forget about it. The additional

56:14.480 --> 56:18.320
benefit to Dropbox is it supports something called

56:18.320 --> 56:20.880
selective sync. So I mentioned I have like two terabytes in

56:20.880 --> 56:23.520
Dropbox. That's a lot. There's no system where I would sync

56:23.520 --> 56:26.560
down more than 50 gigs of that because so much of it is

56:26.560 --> 56:29.680
historical stuff. Old assets for shows that we don't have

56:29.680 --> 56:31.920
anymore but we still want to keep around, clips that I don't

56:31.920 --> 56:34.800
use anymore, interviews we've played on the show. I don't

56:34.800 --> 56:37.040
need that on a current system. And you probably have many

56:37.040 --> 56:39.440
machines that just can't store that much anyway. Yeah,

56:39.440 --> 56:42.240
exactly. They're on SSDs these days. Dropbox has a

56:42.240 --> 56:46.160
sophisticated selective sync system. It's simple but it works

56:46.160 --> 56:50.080
really well. And so I can use the storage. I can use the five

56:50.080 --> 56:53.440
terabytes I have allocated in Dropbox to hold stuff that I

56:53.440 --> 56:58.560
don't have on my local laptops. It is also extremely useful

56:58.560 --> 57:01.840
when I'm traveling to be able to pull up like an audio file

57:01.840 --> 57:05.200
or even a video and play it in the Dropbox streaming player in

57:05.200 --> 57:08.240
the web player because I only maybe need to listen to the

57:08.240 --> 57:11.600
first 10 seconds of a file. I don't need to download the

57:11.600 --> 57:14.480
entire file to play that 10 seconds. And if I'm on a mobile

57:14.480 --> 57:18.240
connection, that's a massive difference for me. So Dropbox

57:18.240 --> 57:22.400
has been a very functional tool that has worked with people

57:22.400 --> 57:25.520
that are remote, that are on Windows, that are on Macs, that

57:25.520 --> 57:27.520
are maybe somebody that's working to do art for us for a

57:27.520 --> 57:30.320
little bit that isn't using Linux that wouldn't. As long as

57:30.320 --> 57:32.720
they have a web browser, they can play in your space and they

57:32.720 --> 57:35.600
have access. Yeah, or there is a client available for their

57:35.600 --> 57:38.800
platform. And that's, you know, both have been very beneficial.

57:38.800 --> 57:41.680
You know, like, for example, back when we used to edit video

57:41.680 --> 57:44.880
on Linux, and I mean, I'm sorry, on the Mac. And when the

57:44.880 --> 57:47.520
dark days when when Rekai was our video editor, and he would

57:47.520 --> 57:50.080
all sync, it would sync to a Mac, and he would use on the

57:50.080 --> 57:52.320
Final Cut, because that was our production pipeline back then.

57:52.320 --> 57:54.480
And it meant that I could be sitting down here in the studio

57:54.480 --> 57:57.680
on Linux, and the editor could be on a Mac. And there was no

57:57.680 --> 58:00.480
like concern about cross platform compatibility or

58:00.480 --> 58:04.800
anything like that. And not that that is unheard of. But

58:04.800 --> 58:07.360
keep in mind, I've been I've been using Dropbox since like

58:07.360 --> 58:12.720
2008. So that was a little more uncommon. There was no next

58:12.720 --> 58:16.560
cloud or own cloud. You know, there wasn't a bit torrent sync

58:16.560 --> 58:20.480
back then. So we're talking 10 years ago. And there's how many

58:20.480 --> 58:24.400
tools do you how many software tools do you use today that you

58:24.400 --> 58:28.400
were using just as heavily 10 years ago? Yeah, like three. I

58:28.400 --> 58:31.760
know it's really it's like, so that's where Dropbox fits in our

58:31.760 --> 58:35.440
workflow. It's, it's not irreplaceable. But it is a big

58:35.440 --> 58:37.360
consideration, because then it's not just a matter of

58:37.360 --> 58:41.520
switching out of technology. The next question becomes, how

58:41.520 --> 58:44.400
do I get all of the remote people to install something

58:44.400 --> 58:47.760
else? How do I get all of them to buy in on this? You know,

58:47.760 --> 58:51.200
we're talking nearly half a dozen people that are all over

58:51.200 --> 58:53.840
the world, right? There's also that social factor of Dropbox

58:53.840 --> 58:56.480
because it's been around so long has a lot of investment

58:56.480 --> 58:58.960
already. People already have clients installed. It's kind of

58:58.960 --> 59:01.360
like how Slack ends up. And it's not unusual if you see a

59:01.360 --> 59:03.600
public Dropbox URL when somebody sending you a file,

59:03.600 --> 59:07.040
hey, can you send me that sound clip and I send them a Dropbox

59:07.040 --> 59:09.440
file that's linked? That's not unusual. It's a normal thing.

59:10.320 --> 59:12.640
So there's that aspect of it. So you have the you have like the

59:12.640 --> 59:16.240
human aspect of people adopting it. But you also then have to

59:16.240 --> 59:18.640
ask yourself like, well, if I'm going to move off of Dropbox,

59:18.640 --> 59:21.120
is it time now to go through and clean some of this up?

59:21.120 --> 59:24.720
Such such really some of this be on our free NAS. And some of

59:24.720 --> 59:28.160
this doesn't need to be in a sync system anymore. Should we

59:28.160 --> 59:31.680
reorganize the folder structure? Because, you know, it turns out

59:31.680 --> 59:34.320
we're no longer producing cast a blaster. You know, I'm no

59:34.320 --> 59:37.680
longer doing plan B. But yet all of that stuff is still in the

59:37.680 --> 59:41.040
Dropbox directory structure in the current working shows at the

59:41.040 --> 59:45.760
top level. Yeah. So is it time to go through and refocus that

59:45.760 --> 59:48.240
on to what we're currently doing in the assets we currently

59:48.240 --> 59:52.560
need? But that becomes a massive project. That's a huge

59:52.560 --> 59:56.640
project that's going through a decades legacy of production

59:56.640 --> 59:59.280
and deciding what is current and what needs to be resorted.

59:59.280 --> 01:00:01.920
And it's just a massive undertaking that makes that

01:00:01.920 --> 01:00:06.160
November 7th deadline a little uncomfortable. You see where I'm

01:00:06.160 --> 01:00:11.040
going with this. So the question became, how can we punt that

01:00:11.040 --> 01:00:14.480
down the road just a little bit? Not forever, because this is

01:00:14.480 --> 01:00:16.800
something we absolutely have to address. But if we don't get all

01:00:16.800 --> 01:00:18.960
of these questions answered, because I would hate to move to

01:00:18.960 --> 01:00:22.560
a new system and use a terabyte more of storage than I need.

01:00:22.560 --> 01:00:25.120
Like we just wrapped up production of the unfilter show.

01:00:25.120 --> 01:00:27.920
Do I now need all of the unfiltered clips in Dropbox?

01:00:28.720 --> 01:00:30.880
Probably not. Probably not. But where else do I put them?

01:00:30.880 --> 01:00:35.440
Yep. And where maybe maybe they go on the free NAS. But then I

01:00:35.440 --> 01:00:38.320
need to make I need to slice out space on that. Right? Because

01:00:38.320 --> 01:00:41.360
it's like a terabyte worth of those are just that you manage.

01:00:41.360 --> 01:00:43.120
Yeah. So you lose the convenience there.

01:00:43.120 --> 01:00:46.240
So this is why we wanted to talk about ways to sort of kick the

01:00:46.240 --> 01:00:49.600
can for a little bit. And the first idea that we kind of came

01:00:49.600 --> 01:00:52.320
up with behind the scenes here was, well, what about just

01:00:52.320 --> 01:00:56.720
creating like a sparse file on your file system that was

01:00:56.720 --> 01:00:59.040
formatted as extended for? What do you think of this idea?

01:00:59.040 --> 01:01:01.840
Create a sparse image, which would only use as much as it's

01:01:01.840 --> 01:01:03.760
actually using, right? That's the nice thing about sparse

01:01:03.760 --> 01:01:06.880
images. So if you have a 500 megabyte Dropbox, it would only

01:01:06.880 --> 01:01:09.760
use 500 megs. But you could let it go up to like two gigs or

01:01:09.760 --> 01:01:13.120
whatever. And then you mount that. And then you set your

01:01:13.120 --> 01:01:15.760
Dropbox inside there. So it has to be mounted to boot up. What

01:01:15.760 --> 01:01:17.440
do you think of this? I mean, you can just put it right in

01:01:17.440 --> 01:01:21.040
your, your old F stab there. So, you know, once you've got to

01:01:21.040 --> 01:01:23.040
format it, maybe just stick it somewhere in a convenient place

01:01:23.040 --> 01:01:25.680
that you know, or a secure, do you really call it F stab? Well,

01:01:25.680 --> 01:01:28.560
no, but it's more fun. So yeah, that is. Yeah. So look at the

01:01:28.560 --> 01:01:31.760
truncate command. So you could do truncate dash s two gigs, and

01:01:31.760 --> 01:01:35.520
then you could do something like Dropbox dot ext four, and

01:01:35.520 --> 01:01:39.840
then you use make a fast dot ext four to format that. And then

01:01:39.840 --> 01:01:42.400
create a directory inside there. And you can mount that just as

01:01:42.400 --> 01:01:48.400
a simple pseudo mount Dropbox dot ext four to say like, colon

01:01:48.400 --> 01:01:50.880
backslash Dropbox, and you would have a Dropbox folder that

01:01:50.880 --> 01:01:53.600
would show up that would actually be a mounted sparse

01:01:53.600 --> 01:01:58.320
image. And that isn't that difficult to do, you just move

01:01:58.320 --> 01:02:00.720
your Dropbox to there, you keep on syncing, it's living on your

01:02:00.720 --> 01:02:04.240
XFS partition. Yeah. And then if you put it in F stab, then yeah,

01:02:04.240 --> 01:02:07.840
you know, it'll just happen for you. Or, you know, system D can

01:02:07.840 --> 01:02:11.120
do that too. Speaking of lots of options, it's not ideal, right?

01:02:11.120 --> 01:02:13.200
There's a you just have another layer just to make the

01:02:13.200 --> 01:02:17.520
Dropbox client happy. Yeah. But here's the here's the real rub

01:02:18.000 --> 01:02:21.040
is it's worth keeping in mind that it's also encrypted

01:02:21.040 --> 01:02:23.760
extended for partitions. Now, if you're doing whole disk

01:02:23.760 --> 01:02:28.320
encryption, the entire disk is encrypted, that's getting

01:02:28.480 --> 01:02:33.440
unlocked at boot time. That is sort of beyond the actual

01:02:33.440 --> 01:02:35.840
on the application layer that's being done at the kernel

01:02:35.840 --> 01:02:37.840
layer. I don't think that's going to affect Dropbox. They

01:02:37.840 --> 01:02:40.320
actually haven't been clear about this. But if you're doing

01:02:40.320 --> 01:02:43.600
like just the encryption of your home directory, that's where

01:02:43.600 --> 01:02:45.680
you're going to get screwed. And there are several

01:02:45.680 --> 01:02:47.360
distributions that do that by default, that type of

01:02:47.360 --> 01:02:50.080
encryption. And that's where even if you're on extended for

01:02:50.080 --> 01:02:53.280
you're getting screwed over. You know, if you're in a lot of

01:02:53.280 --> 01:02:56.240
enterprises have a policy have an encrypted home directory.

01:02:56.240 --> 01:03:00.400
And now, it just you're like in a hard between a rock and a

01:03:00.400 --> 01:03:02.800
hard place because your work demands that you have an

01:03:02.800 --> 01:03:05.120
encrypted home directory, but this tool you use to do work

01:03:05.120 --> 01:03:07.600
won't work anymore. So this could be a solution for you,

01:03:07.600 --> 01:03:10.800
Eric or wimpy to either of you have a particular idea of a

01:03:10.800 --> 01:03:14.880
workaround that comes to mind for keeping Dropbox happy. We

01:03:14.880 --> 01:03:17.680
even speculated about ways of fooling to think it's talking to

01:03:17.680 --> 01:03:20.320
extended for regardless of the file system is on with a few

01:03:20.320 --> 01:03:23.120
little library hacker ease. But curious if either of you can

01:03:23.120 --> 01:03:27.840
think of a way to keep Dropbox chumming even if it's a on ZFS

01:03:27.840 --> 01:03:31.200
or XFS. Yeah, I like the I like the idea of sparse files, you

01:03:31.200 --> 01:03:34.880
could use, you know, a QCOW file, you know, something

01:03:34.880 --> 01:03:38.880
that's common to the virtualized environments and

01:03:38.880 --> 01:03:44.800
format it in a similar way so that it grows, you know, with

01:03:44.800 --> 01:03:49.440
the requirement of the storage that you're putting into it. So

01:03:49.440 --> 01:03:54.960
yeah, I like that. I was I was looking so you talked about this

01:03:54.960 --> 01:03:58.080
at the weekend and I was I went back and looked at sync thing to

01:03:58.080 --> 01:04:01.840
see how sync thing has been evolving in in recent years.

01:04:01.840 --> 01:04:05.280
And it's interesting, a recent release of sync thing, so not

01:04:05.280 --> 01:04:10.720
point 14, but point four, seven, actually supports file system

01:04:10.720 --> 01:04:16.240
monitoring within itself now, and doesn't rely on extended

01:04:16.240 --> 01:04:21.280
attributes. So that is a recent change there, like, literally at

01:04:21.280 --> 01:04:26.880
the end of last last month, sort of June, June, this year. So

01:04:26.880 --> 01:04:29.760
there's always, you know, alternatives out there. But

01:04:29.760 --> 01:04:32.400
yeah, lots of people like sync, like Dropbox for all the

01:04:32.400 --> 01:04:37.200
reasons that you you mentioned most most most of which is the

01:04:37.200 --> 01:04:41.040
selective sync capability. Yeah, it's nice. So yes, finding

01:04:41.040 --> 01:04:43.920
finding file system mechanisms. And you said about sudo

01:04:43.920 --> 01:04:46.960
mounting, you know, Dropbox, if you're using it on a desktop

01:04:46.960 --> 01:04:50.560
operating system, wants to use the Dropbox folder in your home

01:04:50.560 --> 01:04:53.200
directory. So there's no requirement for you to mount

01:04:53.200 --> 01:04:57.520
that with sudo, you'd be able to do that. You know, a loopback

01:04:57.520 --> 01:05:01.760
mount. That is a fair point. I think, I think same thing is

01:05:01.760 --> 01:05:04.400
extremely attractive. I've got a couple of candidates, I've

01:05:04.400 --> 01:05:07.840
obviously been running next cloud, next cloud instance for a

01:05:07.840 --> 01:05:11.840
long time now. And sync thing I've played with, I've dabbled

01:05:11.840 --> 01:05:14.640
with the thing I really like about sync thing is I could set

01:05:14.640 --> 01:05:17.520
up individual folders and just sync them to certain systems. So

01:05:17.520 --> 01:05:20.720
it'd be complicated, but it'd be really great. Fedora has a

01:05:20.720 --> 01:05:23.840
suggestion to just go the other direction. They say just

01:05:23.840 --> 01:05:28.320
convert the file system use FS transform. And they give a

01:05:28.320 --> 01:05:31.280
walkthrough on the Fedora magazine website. They say it

01:05:31.280 --> 01:05:34.560
sounds like magic, but you can convert from extended to

01:05:34.560 --> 01:05:39.040
extended three extended for riser FS, or XFS to another type

01:05:39.040 --> 01:05:42.480
in almost any combination. As long as your kernel has support

01:05:42.480 --> 01:05:44.800
for that file system, the one you're coming from and the one

01:05:44.800 --> 01:05:48.160
you're going to it does seem to work. I did just try it and

01:05:48.160 --> 01:05:51.920
converted an XFS system to ext4. Shut up. We only had one

01:05:51.920 --> 01:05:54.880
file in there. But it came through unscathed.

01:05:56.720 --> 01:06:01.520
That is that is a workaround. But I will stop using XFS when

01:06:01.520 --> 01:06:06.160
you remove it from my cold dead fingers because I'm I am wedded

01:06:06.160 --> 01:06:09.920
to XFS. Yeah, it's a it's a great file system. And that's

01:06:09.920 --> 01:06:12.160
why Red Hat Enterprise Linux sets it by default for the home

01:06:12.160 --> 01:06:15.760
partition. It is a tried and true system that's been around

01:06:15.760 --> 01:06:19.200
since the 90s that it's still getting active development. It

01:06:19.200 --> 01:06:21.760
was one that I went to not only because it's super fast with

01:06:21.760 --> 01:06:24.480
small file systems, it keeps itself tidy, but it supported

01:06:24.480 --> 01:06:27.840
extended attributes before extended for was even released.

01:06:27.840 --> 01:06:31.120
And so it just drives me crazy that that is Dropbox's

01:06:31.120 --> 01:06:34.560
explanation. The extended attributes argument is is weak,

01:06:34.560 --> 01:06:38.320
I think, because although there are differences in how the file

01:06:38.320 --> 01:06:41.040
system store extended attributes in the block sizes in the

01:06:41.040 --> 01:06:46.000
I nodes and what have you, that should be transparent through

01:06:47.760 --> 01:06:51.040
the libraries that they're using. Dropbox is implemented

01:06:51.040 --> 01:06:55.120
using Python ostensibly and libR sync. Yeah, that's what I

01:06:55.120 --> 01:06:58.000
thought when I heard that. Or the least I mean, you know, we

01:06:58.000 --> 01:07:00.400
just don't have very much insight or clarity here, but it

01:07:00.400 --> 01:07:02.080
would be helpful if they could lay it out a little bit more

01:07:02.080 --> 01:07:04.400
and then at least make the argument of like, is this not

01:07:04.400 --> 01:07:06.800
possible because of some design decisions that you've made?

01:07:06.800 --> 01:07:09.360
And, you know, they do have a fancy client, right? So simpler

01:07:09.360 --> 01:07:12.640
clients might not need this. Or you just it's just too much

01:07:12.640 --> 01:07:14.640
work and you don't want to spend the resources on Linux. And

01:07:14.640 --> 01:07:16.880
those are different scenarios. I would really like them to be

01:07:16.880 --> 01:07:20.000
more clear about this instead of just one community support rep

01:07:20.000 --> 01:07:21.760
mentioning something in the form and then mentioning

01:07:21.760 --> 01:07:24.800
something later. And then we're left to speculate other than

01:07:24.800 --> 01:07:27.520
you're going to start getting notifications via your Dropbox

01:07:27.520 --> 01:07:30.000
client. It seems it really like rubs in our nose to Mac gets

01:07:30.000 --> 01:07:32.560
two supported file systems and we get one and we're like,

01:07:32.560 --> 01:07:35.040
we're the one with all the file systems. I just talk through

01:07:35.040 --> 01:07:37.120
the kernel. Don't talk directly to the file system. You're

01:07:37.120 --> 01:07:39.520
doing it wrong. That's my that's my general sense. And so

01:07:39.520 --> 01:07:42.320
I've learned two lessons from this and I feel like it's worth

01:07:42.320 --> 01:07:46.480
sharing with you guys. The first lesson I've learned is you

01:07:46.480 --> 01:07:49.120
really if you're on Linux and you're building something like

01:07:49.120 --> 01:07:52.720
an essential workflow, you really have to go with free

01:07:52.720 --> 01:07:55.920
software whenever you can. Now in the past, some of our

01:07:55.920 --> 01:08:00.640
production systems or Macs or Hackintoshes and so Dropbox

01:08:00.640 --> 01:08:03.760
seem perfectly reasonable. If it was 10 years ago, we were

01:08:03.760 --> 01:08:06.480
starting where we are at today with Linux. I don't think I

01:08:06.480 --> 01:08:10.000
would ever have used Dropbox. So you know, keep that in mind

01:08:10.000 --> 01:08:13.360
for your workflow. Some of these companies just are never

01:08:13.360 --> 01:08:15.760
properly incentivized to support Linux users in an

01:08:15.760 --> 01:08:18.880
appropriate way. They can't even give us an appropriate

01:08:18.880 --> 01:08:21.200
response. They don't even have the time of day to give us an

01:08:21.200 --> 01:08:24.240
explanation why they're screwing us. That's where we're

01:08:24.240 --> 01:08:26.240
at. I mean, it's that same thing, right? You don't you get

01:08:26.240 --> 01:08:28.640
the convenience, but you don't get the control and free

01:08:28.640 --> 01:08:31.680
software gives you that back. Yeah. And so that's that's

01:08:31.680 --> 01:08:35.680
just a reinforcement of that lesson. But at the same time

01:08:35.680 --> 01:08:40.160
that that that scorn is tempered with the fact that I

01:08:40.160 --> 01:08:44.880
used this for 10 years. While I always knew this was gonna be a

01:08:44.880 --> 01:08:49.280
problem. I got 10 years of practical use out of this and

01:08:49.280 --> 01:08:52.720
I've only paid for the business account for like the last three

01:08:52.720 --> 01:08:57.520
maybe two. So that's you know, you have to weigh that it did

01:08:57.520 --> 01:09:02.080
burn me in the end. But at the same time, I I managed to not

01:09:02.080 --> 01:09:04.960
have to manage that problem for 10. I managed not to manage

01:09:04.960 --> 01:09:07.600
that problem for 10 years. And you I mean, you might have even

01:09:07.600 --> 01:09:09.840
had a change if you were doing you know, one open source

01:09:09.840 --> 01:09:12.160
project goes out of favor a new one has more features, you

01:09:12.160 --> 01:09:16.480
might have to have to move those files anyway. And I haven't

01:09:16.480 --> 01:09:19.280
been wasting this time. You know, I've been you guys have

01:09:19.280 --> 01:09:21.840
heard me tell the story about my next cloud instance that runs

01:09:21.840 --> 01:09:25.040
on a fedora server on DigitalOcean. I could switch

01:09:25.040 --> 01:09:28.880
over to that I bought their, you know, their their

01:09:28.880 --> 01:09:31.040
attachable block storage additional space. So my next

01:09:31.040 --> 01:09:34.000
block storage, I don't I don't have five terabytes. But I've

01:09:34.000 --> 01:09:37.360
got I've got a few gigs free. So I you know, I have options

01:09:37.360 --> 01:09:40.240
here and I've got till November 7. And I've got other options

01:09:40.240 --> 01:09:42.960
thanks to how powerful Linux is to even kick this can further

01:09:42.960 --> 01:09:46.160
down the road if I have to. So I'm not even totally out of

01:09:46.160 --> 01:09:49.600
options. But it's a good lesson. I feel like there's a mix of a

01:09:49.600 --> 01:09:52.640
lesson here that is there is a practical aspect of this, but

01:09:52.640 --> 01:09:56.720
you have to stay vigilant. And I'm just slightly on the other

01:09:56.720 --> 01:10:00.000
side of vigilance. I'm almost vigilant. But I was really

01:10:00.000 --> 01:10:03.120
hoping because truth is, I think we renewed just two months

01:10:03.120 --> 01:10:08.880
ago. No. Yeah, I was my my and Noah and I have been talking

01:10:08.880 --> 01:10:12.320
about this for months. My intention was to really get off

01:10:12.320 --> 01:10:15.280
the sauce this year. You know, looking at the cost is that's

01:10:15.280 --> 01:10:17.760
why I'm that's why I'm actually familiar with the prices, the

01:10:17.760 --> 01:10:21.440
pricing versus local versus going VPS versus having all to

01:10:21.440 --> 01:10:24.720
speed. You've been working on a C file instance. I knew what

01:10:24.720 --> 01:10:27.680
all of the pricing is because it's something we've been

01:10:27.680 --> 01:10:30.160
looking into for a while. Have you considered tape? We

01:10:30.160 --> 01:10:33.040
could just fill the garage here in the studio with tape. You

01:10:33.040 --> 01:10:36.240
joke. I actually have seriously considered it might be a good

01:10:36.240 --> 01:10:38.880
solution for those video assets. First of all, you can

01:10:38.880 --> 01:10:40.960
get some serious storage on those tapes for a decent

01:10:40.960 --> 01:10:43.280
price, especially if you start buying some of those tapes,

01:10:43.280 --> 01:10:47.120
you know, in bulk off Amazon or get a drive off of eBay. And

01:10:47.120 --> 01:10:49.440
it's that stuff that those standards, those are the same

01:10:49.440 --> 01:10:52.400
standards when I was an episode that would make no, it

01:10:52.400 --> 01:10:57.120
just put old shows on tape. Just me. It has seriously the

01:10:57.120 --> 01:11:00.960
only problem is it seems really, really, really

01:11:00.960 --> 01:11:03.280
shortsighted to take a show that's fundamentally something

01:11:03.280 --> 01:11:05.520
supposed to be distributed on the internet and store the only

01:11:05.520 --> 01:11:07.600
copies on tape in a building that could easily burn down

01:11:07.600 --> 01:11:12.720
because of all the equipment we run 24 seven. So that's my

01:11:12.720 --> 01:11:15.840
only concern with that. But yeah, so there's a few options

01:11:15.840 --> 01:11:20.480
for you. I may actually just consider FS transform for the

01:11:20.480 --> 01:11:24.720
for the for the systems here in the studio. I may just do FS

01:11:24.720 --> 01:11:26.800
transfer. I mean, there probably are systems where I

01:11:26.800 --> 01:11:29.680
agree XFS is a great file system, but there are probably

01:11:29.680 --> 01:11:33.040
systems where you don't care that much about what file

01:11:33.040 --> 01:11:35.920
system it is. And so for that, you know, it does seem to work

01:11:35.920 --> 01:11:39.040
pretty well. I do also think it might be this next year's, you

01:11:39.040 --> 01:11:42.000
know, April Fools prank. Watch out your file system might just

01:11:42.000 --> 01:11:46.000
be butter FS before you know it, buddy. Oh, that'll be the

01:11:46.000 --> 01:11:48.640
day. I think I'll be on ZFS on the desktop before then, but

01:11:48.640 --> 01:11:51.840
we'll have links to sparse bundles, FS transform on all of

01:11:51.840 --> 01:11:56.480
that in the show notes at linuxunplug.com slash 262. And

01:11:56.480 --> 01:12:00.160
yes, go ahead. Take a piss. Give me a hard time. Let me know

01:12:00.160 --> 01:12:02.960
how silly I am for using Dropbox for all these years.

01:12:02.960 --> 01:12:06.640
It's worked out so well. But in the end, I knew this day would

01:12:06.640 --> 01:12:09.680
come. So I'm not I mean, I can't even say I'm super

01:12:09.680 --> 01:12:11.680
surprised. I can't say I'm super shocked. I mean, you've

01:12:11.680 --> 01:12:14.000
talked about it, right? We knew it was going to happen or it

01:12:14.000 --> 01:12:17.280
could. It's just the unfortunate reality that they

01:12:17.280 --> 01:12:19.920
have a lot of work to do. I'm looking forward to the next

01:12:19.920 --> 01:12:23.280
Ubuntu podcast because I assume Mr. Wimpress will return to the

01:12:23.280 --> 01:12:27.040
show. Yes, it will be my glorious return. We're going to

01:12:27.040 --> 01:12:32.240
be recording tomorrow night because as I speak right now, I

01:12:32.240 --> 01:12:36.320
can exclusively reveal that Popeye has just landed. He has

01:12:36.320 --> 01:12:40.320
returned from Academy. So yes, due to the unique way that the

01:12:40.320 --> 01:12:43.440
Ubuntu podcast is produced, we're not recording on a Tuesday

01:12:43.440 --> 01:12:45.440
evening this week. We're recording on a Wednesday.

01:12:46.480 --> 01:12:49.600
Time travel. Very nice. Well, I'm looking forward to it.

01:12:49.600 --> 01:12:52.160
Always a great show. Go check out the Ubuntu podcast to get

01:12:52.160 --> 01:12:56.080
more wimpy and Mr. Popeye as well as Mark. It'll be good to

01:12:56.080 --> 01:13:00.320
hear the regular cast. If you have followed any of our peer

01:13:00.320 --> 01:13:04.560
tube shenanigans, that's thanks to Eric, the IT guy. We have a

01:13:04.560 --> 01:13:07.040
did you rename the channel, Eric, the peer tube instance

01:13:07.040 --> 01:13:09.200
because there has been some other things in the works as

01:13:09.200 --> 01:13:11.280
we're getting ready to set up some really great developer

01:13:11.280 --> 01:13:14.560
resources. So you can find Eric there, but I don't know if we

01:13:14.560 --> 01:13:19.280
have a new URL for it. So no, the peer tube instance is still

01:13:19.280 --> 01:13:21.760
it. No, no, I'm talking about the group where you're setting

01:13:21.760 --> 01:13:24.320
up something new. The new thing you're working on in the group

01:13:24.320 --> 01:13:27.280
that we should be teasing now, you know what I'm talking about.

01:13:27.280 --> 01:13:30.000
So we have a group for peer tube, a telegram group that may

01:13:30.000 --> 01:13:33.520
be transforming to a more developer focus group for

01:13:33.520 --> 01:13:36.080
people that want to work on projects, as well as Eric's

01:13:36.080 --> 01:13:39.200
working on a get lab instance where we're going to consolidate

01:13:39.200 --> 01:13:42.240
our open source projects around Jupiter broadcasting onto that

01:13:42.240 --> 01:13:45.920
with a great URL and something that Eric and I have just

01:13:45.920 --> 01:13:48.400
started talking about, but we'll probably be at that same

01:13:48.400 --> 01:13:52.000
site is essentially an issue tracker for Jupiter broadcasting.

01:13:52.000 --> 01:13:54.160
So I could give you an example right now. The audio stream

01:13:54.160 --> 01:13:56.400
isn't working. That's something we're no, it's something we're

01:13:56.400 --> 01:13:59.600
in progress, but it's not working. So that would be an

01:13:59.600 --> 01:14:01.760
open issue. Hey, I noticed your audio stream isn't working or

01:14:01.760 --> 01:14:03.440
something like that. Like if you had a problem with the website

01:14:03.440 --> 01:14:06.080
or a feed. So it's all things that are in the works. And if

01:14:06.080 --> 01:14:09.680
you want to get involved in that, I'm it's a it's a it's

01:14:09.680 --> 01:14:12.720
telling whatever the telegram short URL is slash peer tube.

01:14:12.720 --> 01:14:14.880
I'm sorry. I think it's like T dot me or something. Let me go

01:14:14.880 --> 01:14:20.800
to T dot me slash peer tube. See if that's it. T dot me. Is

01:14:20.800 --> 01:14:23.040
that it? Nope. It's not that whatever the telegram short

01:14:23.040 --> 01:14:26.160
URL thing is seem to work for me. Oh, yeah. JB peer tube.

01:14:26.160 --> 01:14:28.640
Yeah, that's it. So we're going to start some of the planning

01:14:28.640 --> 01:14:30.960
and work around that. It'll probably get organized in the

01:14:30.960 --> 01:14:33.280
telegram group, not to diminish some of the other chat

01:14:33.280 --> 01:14:36.160
platforms. There's the JB dev IRC and things like that, but

01:14:36.160 --> 01:14:38.240
this is just another avenue for people to organize telegram

01:14:38.240 --> 01:14:41.600
seems to be hot these days. All the kids join the group and I

01:14:41.600 --> 01:14:44.400
need to I need to ban him real quick. I'm going to get it out

01:14:44.400 --> 01:14:50.640
of there. Mm hmm. Now it's really good. Yeah, that's good.

01:14:50.640 --> 01:14:53.440
I'm glad you got in there. Alright. Well, go get more West

01:14:53.440 --> 01:14:56.400
Paine. He's over at tech snap dot systems. You got the

01:14:56.400 --> 01:15:01.040
Twitters too. Oh yeah at West Paine. That's good. So succinct.

01:15:01.040 --> 01:15:04.320
It is you. You are fortunate that you have the unique last

01:15:04.320 --> 01:15:07.920
name like that that you can grab your own name that joined

01:15:07.920 --> 01:15:12.160
early too. I got I had I had something Chris something and I

01:15:12.160 --> 01:15:15.760
lost it. I had I just lost I left Twitter. I'm I'm good with

01:15:15.760 --> 01:15:18.400
Chris last though. So I'm at Chris LAS. You can follow me.

01:15:18.400 --> 01:15:21.680
The whole network is at Jupiter signal. You can follow

01:15:21.680 --> 01:15:24.320
that to find out about show releases and all of that. We do

01:15:24.320 --> 01:15:27.760
this show live on a Tuesday over at jblive.tv Jupiter

01:15:27.760 --> 01:15:30.000
broadcasting dot com slash calendar to get that converted

01:15:30.000 --> 01:15:33.120
to your local time. I usually get the stream kicked off around

01:15:33.120 --> 01:15:36.480
1 30 PM Pacific. So if you just want to do that math, come

01:15:36.480 --> 01:15:38.800
hang out. Yeah. Hang out in the chat room. Hang out in the

01:15:38.800 --> 01:15:42.400
mumble room. Be part of the virtual lug irc.geekshed.net is

01:15:42.400 --> 01:15:44.880
the chat room. Google again like I mentioned at the top of

01:15:44.880 --> 01:15:47.440
the show Jupiter colony mumble setup and you'll get the

01:15:47.440 --> 01:15:50.880
mumble guide get a working mic get a headphones get in there

01:15:50.880 --> 01:15:53.200
chat with us. Tell us what you think about Linux and the

01:15:53.200 --> 01:15:55.760
stories we're covering this week and you can also go to

01:15:55.760 --> 01:15:58.560
Linux unplug dot com slash subscribe for all the ways to

01:15:58.560 --> 01:16:00.960
get the show every week. Thanks for joining us. See you

01:16:00.960 --> 01:16:12.800
back here next Tuesday.

01:16:30.960 --> 01:16:43.040
Get it out of here. Oh Richard. Oh well done everyone.

01:16:43.040 --> 01:16:45.840
Thank you very much. Enjoyed that. It was a good tight group

01:16:45.840 --> 01:16:48.960
this week. It was uh but that worked out. Our syncing

01:16:48.960 --> 01:16:52.800
perspectives. JBtitles.com. JBtitles.com. Let's go

01:16:52.800 --> 01:16:57.920
boat. Tribes of Anit is pretty good. System BSD is also

01:16:57.920 --> 01:17:01.440
pretty good. Those are both really good. I got there and

01:17:01.440 --> 01:17:04.560
they're already tied on the on the boats. JBtitles.com. Don't

01:17:04.560 --> 01:17:09.600
make us pick. Settle this guys. You have those. Dropbox D.

01:17:09.600 --> 01:17:12.400
Dropbox D.

01:17:13.600 --> 01:17:17.280
The Popey has landed. That's also pretty good. Yeah now that

01:17:17.280 --> 01:17:19.280
the show's over everybody go watch the rest of that talk

01:17:19.280 --> 01:17:21.280
because it was a great talk. It's like you know what I gotta

01:17:21.280 --> 01:17:24.080
go to that. It's a yep. That if that's if that's the sort of

01:17:24.080 --> 01:17:27.440
opinions and stuff that they're open to having at a BSD event.

01:17:27.440 --> 01:17:30.960
I'm going plus hang out with Alan Jude. So that never hurts.

01:17:30.960 --> 01:17:33.280
Yeah yeah plus you know what else. I mean not to plus and

01:17:33.280 --> 01:17:35.600
plus here but I like plus and stuff here. It's a great drive.

01:17:35.600 --> 01:17:38.240
You could go down the coast down the Oregon coast. That is

01:17:38.240 --> 01:17:40.640
a great. That's a great drive. That's a great drive. I know.

01:17:40.640 --> 01:17:43.680
So I'm like let's do it. Let's go plus. Go hang out at Intel.

01:17:43.680 --> 01:17:47.280
Alright. Okay. Twist my arm. Twist my freaking arm. And I'm

01:17:47.280 --> 01:17:49.120
sure there's lots of fun exciting stuff happening over

01:17:49.120 --> 01:17:53.760
in that BSD world. It's been a while since we've checked in.

01:17:53.760 --> 01:17:58.640
Yeah right. I'm practicing so I'll blend in in the group.

