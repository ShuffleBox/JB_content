Now that you and I are ThinkPad users,
I'm always on the lookout for like
the ultimate portable ThinkPad.
Of course.
I love our T480s, but you just gotta keep an eye out.
Well, how about the ThinkTiny?
It's a miniature laptop with a 0.96 inch display
and a design that's heavily inspired by the ThinkPad.
It even has a track point in the little middle
kind of fake keyboard area.
Yeah, it's exactly as cute as you think.
Now, to make it, Paul Klinger, the guy behind this,
created a 3D printed case custom
and then crammed a 128 by 64 pixel OLED display
inside there.
As long as an 80 tiny 1614 microcontroller
and a 300 milliamp battery.
Now, despite choosing all those small components,
he still had to make some modifications
because even with the tiny screen,
the circuit board was still too big,
had to saw that right off.
Sure.
You can find instructions, code,
and all the design on his GitHub.
This is actually also his second tiny PC.
The first was a miniature desktop PC replica
with full RGB lighting, of course.
This is really pretty impressive.
Now, I don't know that I could get very much done
on something that small.
Maybe meet in the middle.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Hello, friends, and welcome into Linux Unplugged.
My name is Chris.
My name is Wes.
Hello, Wes.
I didn't mean to catch you mid-sip.
I mean, I'm a thirsty guy sometimes, Chris.
We're working hard today because we have a huge episode.
Yeah, you're not lying.
Wes and I got a real early crack at it today
because there's a lot to get into.
We've got some new hardware in-house.
We have a very special guest joining us
and lots of news to get into, as well as a look at Fedora
Core OS and Ubuntu Core.
And maybe we'll try to differentiate
what those real products are.
Sometimes we've made the mistake here on the old show
of conflating, Wes.
Oh, yeah, but Drew's here to help us set it straight.
He's going to help us un-configurate
our conflations.
Finally.
And we'll be able to more appreciate how these two
products differentiate.
You said it, not me.
So I mentioned we have a special guest this week.
Phil, one of the original founders of the Mangero
project, is joining us in the virtual log today.
Hello, Phil.
Hello, everyone.
Hello.
Thank you for joining us.
And also, big time appropriate greetings
to the rest of that virtual log.
Hello, everybody.
Hello.
Hello.
Hello.
Hello.
Hello.
Greetings.
Well, wow.
Impressive.
Impressive.
Well, wow.
We've got Brent and Byte and Niels in there,
CubicleNate, MiniMech, of course, Phil, CM, and Wimpy.
But joining us here on the studio line, as well,
to help us break all this down, is Alex, Cheese, and Drew.
It's a huge show today.
Hey, guys.
Hey, what's up, dudes?
Hello.
It's a big show.
This is going to be a lot to pull off,
but we're going to try to do it.
And with everyone's help, I think we can.
So let's start with a warm-up story, just
to help us ease into this thing.
The Darling Project has picked up new contributors
and is seeing new code contributed to the project.
You might remember this.
It's a longstanding, although it's
been idle for years, effort to allow Mac OS binaries
to run on Linux.
Think wine, but for Mac OS applications.
Well, this summer, there's been a lot of progress moving along,
including some new developers.
Yeah, that's right.
They just published their quarter two highlights.
And some of those highlights are things like new contributors
coming on board and making progress all over the stack.
They've been stubbing out more frameworks, like AGL, Carbon,
Address Book, Core Services, and Application Services,
and improving AppKit support, including
stuff like nested frameworks.
There's also a fix for 32-bit application support
and a bunch of other low-level bug fixes.
And maybe that doesn't sound exciting,
but you need all of that if you want any of this to work.
Well, and you probably maybe were a little surprised
your 32-bit support in there.
Yeah.
Yeah, that's actually what they think
is going to be one of their secret sauces, one
of their selling points.
It will be for people that want to continue
to run 32-bit Mac software after Apple
goes all 64-bit with Mac OS.
OK, hang on.
Right, roll back a second there.
So the 32-bit support in Mac OS, is that not
a constraint on the kernel?
It's purely a constraint on user space.
Yeah, Apple has not shipped a 32-bit Mac OS environment
for several years now.
They dropped all the 32-bit Mac hardware support back
in Lion, I think, so 10.5, which was five or so years ago,
I think.
It was when I was in college.
So they dropped it quite a long time ago.
And the version that's about to come out
drops the ability to even execute 32-bit applications,
correct?
Right, they're dropping all the user libraries, all the user
applications, all of the remaining shims that
are in the kernel for supporting 32-bit Mac OS ABI.
The binary loader for 32-bit Mac OS objects is getting removed.
All that goes away in Catalina 10.15.
Yeah, right.
OK, OK, right, so let me get this straight.
At a kernel level, executing 32-bit binaries is going away.
Right, on a major commercial platform, correct?
That's fine.
That's their choice.
But I'm just trying to understand
how the heck this Darling project then
executes 32-bit applications when there's
no kernel support for it.
Darling runs on Linux.
It's akin to Wine.
Oh, OK, there we go.
There's my misunderstanding.
So their bet is that people will move to Linux
as well, which is implicit in the statement
that it is going to be their selling factor.
It's that they'll also get people to switch.
Does this mean that it opens up the avenue for possibly having
my Adobe suite on Linux?
I mean, that's the goal, right?
I mean, when you hear this, you think graphical applications.
As I recall, with the Darling project,
initially it's just been command line applications.
But there are AppKit implementations happening,
and they are working on moving things
like carbon core services and support for AGL.
So actually, it does seem to be that the end goal is
the full graphical stack.
I don't think it's possible.
There's just a lot to do there.
Yeah.
The second line on their GitHub page
says, please note that no GUI applications are supported
at the moment.
Right.
And you can appreciate that Wine was successful to a degree
because Windows was stagnant for so many years.
And Mac OS doesn't really have that same characteristic.
It's a much more forward-moving operating system,
and they quickly deprecate support
for things that Microsoft is much slower
to deprecate support for.
And Wine has been successful to a degree because of that.
And they built up the expectation, right?
They're just going to do it, and you have to live with it.
Yeah.
It's a whole other ballgame.
As a former Mac developer, one of the big things
you kind of get educated on as you do software development
for Mac OS is that you expect Apple to break you.
And so over time, you just learn to adapt
to keep rebuilding things, and changing things,
and updating things.
It's very similar to the Linux world,
which is why I get very confused when people are like, well,
Linux is changing so much, and it breaks me all the time.
And as a Mac developer, it's like,
but this is the same experience.
Similar on mobile as well, isn't it?
Less so, actually, because of the versioned SDK stuff.
So the versioned SDK stuff tends to hide that churn
to a lesser extent.
Also, that SDK story on Android is fascinating, right?
Do you know what version of the SDK,
or rather, what version of Android
shipped the SDK that 99% of developers target is?
Is it a 5 series?
You would be wishing it's Android 4.4
is the recommended target to reach
99% of Android devices right now,
as prescribed via Android Studio if you
start creating a new app today.
I think that we should all make those businesses fail.
That's really awful.
That's pretty awful.
All right, well, the ARM platform is, well,
is maybe the future.
I don't know, actually.
That's remained to be seen.
But I have in Studio right now the Raspberry Pi 4 desktop kit.
I picked this up right when it was announced.
It comes with a Raspberry Pi 4, 4 gigabytes of RAM,
a keyboard and a mouse, the Raspberry Pi edition.
And they are cute.
And they are actually pretty great.
It comes with an official Raspberry Pi beginner guide
book, which is a nice book.
I don't know if you got a chance to see it out there.
Yeah, I was coming through there.
I'm impressed.
And it comes with Raspbian on a micro SD 16 gig card.
It's pretty tight.
And it comes with two HDMI cables, micro to regular size,
as well as the USB-C power brick.
And the whole kit is $120 US, I think.
And it arrived a couple of days ago.
And we set it up this morning in the studio.
So we've been testing it all morning.
And it's running a series of punishing Ferronix benchmarks
right now.
Oh, yeah.
We are doing all the different compiling.
And we're going to test the disk IEO.
You did do some early wireless testing.
Yeah, we just had it set up on the wireless here
in the studio.
So we did some basic Iperf tests.
And they weren't too bad.
Now, obviously, this is all taking place
in our environment.
As a comparison, I also ran those tests
on my ThinkPad, which had about double the throughput.
Yeah.
And we were seeing around 80 megabits
over the Wi-Fi, which is a pretty nice upgrade
from the previous.
And I found it sufficient to browse a large remote directory
and copy over a movie file and things like that.
Right.
It may not be the fastest thing in the world,
but it was definitely workable as a desktop.
So I'm going to give it a go for a week.
Starting after this show, I'm going
to run it as my workstation for a week.
And then I'll report back next week with how things went.
Because right now, it's just really early days,
super early impression.
One thing that I guess I just maybe didn't expect,
but perhaps should have known, is
that the Raspbian install that ships on that thing is 32-bit.
So that one of the selling points, obviously,
of the Raspberry Pi 4 is that it's
got that sweet 64-bit four-core processor.
But Raspbian itself is 32-bit.
And I went through my land notes when the story was announced,
and I did have it noted in there that the OS was 32-bit.
But I'd forgotten.
So when it arrived and I booted it up,
I thought I'd be running 64-bit Linux,
because the selling point, it's a 64-bit processor.
That is not the case.
And I think you might have figured out why.
Yeah, well, I found a great blog post
by James Chambers going through how
to get Ubuntu server up and running on the Pi 4
while support is still improving, let's say.
And I guess there's a problem with the SD card driver.
So the RAM is limited to 1 gig in the 64-bit version.
It does otherwise work all right.
You can get it up and booting.
But if you paid for 4 gigs, you probably want 4 gigs.
And of course, 32-bit OSes can address 4 gigs of RAM.
So you're fine.
I mean, it's functionally fine.
There's no real major downside, as far as I can see.
It just wasn't what I expected, because it
was advertised as a 64-bit product.
And it might be something I experiment with,
is trying other OSes on there.
Wimpy, have you done any experiments
with Ubuntu MATE on the Pi 4?
Not enough to qualify a reasonable debate
at the moment, no.
I'm looking forward to running that on there.
I think, ultimately, that'll be my desktop for that system.
But right now, I'll try Raspbian.
So I've had a number of projects going on at the moment.
We spoke about them last week, which was mostly
around the UMPC devices.
And we've got some news about another one of those tomorrow.
And I'm about to head off on two weeks of vacation.
And I'll be taking the Pi 4 with me.
So in the evenings, when I've tucked everyone in bed,
I'll have a bit of a tinker.
And hopefully, I'll have something
when I get back in a few weeks' time.
Great.
Well, in the meantime, I'm going to enjoy Raspbian.
And we'll have a link to the guide
to get 18.04.2 installed on there,
including information about that.
I guess you said it's a SATA driver bug?
SD card driver.
Ah, OK.
You wouldn't be using one of those, would you?
No, you're right.
No, of course not.
No, how would I?
No, of course not.
I do love SD cards on the Raspberry Pi,
because it is 100% floppy disk.
It's so floppy.
It feels like it, yeah.
And the way you eject it from your computer and load it in,
it's just kind of fun.
That takes me back.
It takes me back.
Since the certain models of the Pi 2 and the Pi 3
have had USB booting, I've kind of been persuaded by that.
I use USB devices now.
Yeah.
You were seeing that folks are using eSATA to USB devices
to get large storage.
USB 3 to SATA, and then adding solid state drives.
At least that's what James Chambers suggests, in fact.
OK.
And then they're using that on the Pi 4
to get decent large storage.
That's fast.
There's some options there.
It's fun.
Yeah, it'd be interesting to see just how far you can push
this new, beefier Pi.
Yeah.
But also, I wonder if I could get the thing on wired
ethernet, would it maybe be faster
to use iSCSI or something of that nature?
That's an interesting benchmark, isn't it?
Yeah.
Right now, I'm running just the standard Ferronix test suite
benchmarks.
Love that tool.
You know, we're going to have to do some audio testing
on there, too.
Oh, yeah.
Oh, yeah, because really, that's what
we're going to be using these things for is solving
different problems all around the studio.
Well, so let's chat with Phil, because today,
as we record, there's a pretty big story that's
circulating around the Manjaro community
and the rest of the web.
And that is Manjaro's announcement
that they have struck a partnership
to ship the closed-sourced free office suite by default
in Manjaro Linux.
And I had a chance to take a look at it,
because I'd never really messed around with it.
So I'll share some thoughts on there.
But I thought, let's get Phil on to just get
an idea of what's going on from the top of the project on this.
So Phil, thanks again for coming on the show.
And welcome for your first time on Linux Unplugged.
No problem.
So in your own words, characterize
today's announcement.
Well, it was announced that we have a partnership
with SoftMaker, who is the producer of a free office
and a bunch of other open-source products,
or in the case, also proprietary products.
They ship out in several systems,
like Mac OS, Windows, and also on Linux.
And it features pretty, at least from what I can tell,
pretty sweet compatibility with Microsoft Office
and other commercial office products.
And it has a similar look and feel
to commercial Microsoft desktop office.
That's exactly because they started with Windows,
then moved over to Mac OS, and finally got also to Linux.
And we got approached a couple of weeks ago from them
directly to see how we can include
free office in our distribution.
What appealed to you?
I mean, what was the big motivating factor?
Was part of it the better compatibility?
Similarity to what users migrating to Manjaro
might already be familiar with?
Well, it's a German company, for instance.
And most of us are also from Germany.
So it's just a smaller hub to go to them directly.
And with the talks we had with them,
they offered to adjust the free office software and even
the other products they might sell for our Linux distribution
to make it more compatible.
And if we have some issues with that,
we can present to them directly and have a direct line
to their developers to fix issues if we find something.
Also, they are open to change whatever we might need.
So essentially, there is a business relationship,
or a real actual partnership, between you
and the makers of free office in such
that you have a channel to give feedback and whatnot?
Yes, exactly.
So we start with a free office, and then we
see how that works.
And it was a test balloon with the release candidate five
and six to see, A, how does it work?
How does it look?
So Softmaker also checked it from their side
if it's fit their needs as well.
And then I announced it with RC6 to the public as well.
And now we are in a situation that we have, A, people
who like it, and, B, people who doesn't dislike it.
That's to be expected, I suppose.
Was there a monetary exchange between the Mangero project
and Softmaker for this partnership?
No, it's just the beginning.
So they also have the Softmaker office,
which might be then in consideration
to see what we can do with that.
But for the beginning, it's just the partnership
of we can say what is wrong or what we can improve.
And they will fix it.
And such and based on that, we can build on top of it.
That's really great that they are
willing to work with you at that level.
Because your shipping, Mangero has always
been a very practical distribution
solving problems for the end users
that other distributions don't necessarily solve.
And this is yet another one, making
that a smoother experience.
And the type of user that needs office software
isn't necessarily generally the type of user
that is going to be particularly savvy at solving
compatibility issues and whatnot.
So this seems like a very practical choice
for the end users.
And at the same time, you get a channel.
You get a partnership with this company
to help guide feedback, which seems
like a very, very good opportunity for the project
overall.
So I have to probably address what the big criticism has
been so far, which is, well, why do this when Libre Office is
perfectly capable and it's free software, so therefore,
by default, that's what we all should be supporting?
Well, it's a default. And either way,
we will step out of this stack and say, hey, we will be bold
and try something different as to rest.
So we will be noticed.
This is one of the considerations we did.
And also, the company is 30 years in the business.
And they make a living out of the office sellings.
And they're willing to make it happen for several platforms
and willing to include external considerations
to their products.
And that is one of the considerations
we also made in our decision making,
that the world is changing.
And if a company sees Linux as a platform, it's a plus.
Right, it's a recognition of desktop Linux in a sense,
isn't it?
Exactly, and it shows also to us that the Manchara is
on the map somehow and widely used.
And we were really humbled that a German company is approaching
us, since we're still a hobby project.
So not everybody achieved that.
Wimpy, as a distro maintainer yourself,
I'm curious on your thoughts about the inclusion of Libre
Office as the default, because it's the free version.
I'm somewhat surprised and a little bit dismayed
at the community reaction to this,
because there are many Linux distributions that
ship by default, for example, Google Chrome and Steam.
Nvidia drivers.
Or Nvidia drivers.
That one, I'm not prepared to put in the same category,
to be honest with you, because that's
all about enabling absolute functionality in the device
that you own.
All right, that's fair, actually.
I think that's a really good point.
That is a good distinction.
It's about fundamentally enabling the hardware
that you paid good money for.
Right.
Whereas if you've got Firefox available, why Google Chrome?
And if you've got SuperTuxCart available, why Steam?
Or why not itch.io, also proprietary?
Or why not games from Humble Bundle?
So I think there's a little bit of hypocrisy going on here,
because there seems to be an application class which I'm not
prepared to accept that this is proprietary,
but then there are other applications which is, oh,
that's obviously going to be proprietary, or that's fine.
I want the functionality that that thing gives me.
And you get a free pass on that.
So I can understand where Phil's coming from.
Phil is trying to build the future for Manjaro
and try out new things.
And we should all be trying out new things
and feel that we're in a safe place to do that.
And we shouldn't be lambasted for experimenting or trying
to improve the Linux landscape.
Because after all, since 1994, what
I've been seeking to achieve is computing parity
on my Linux desktop.
And we're very close to getting there these days.
And why stand in the way of achieving that?
Yeah, well said.
I completely agree.
You're right.
It has been.
And in the case of an office suite, a word processor,
spreadsheet, whatever, that seems
like the quintessential get-your-job-done tool.
The quintessential, I don't really care.
You know it opens those for fun, right?
Right.
For me, what I really want to be free
is my core libraries, my kernel, my desktop environment.
I always want to have a free browser option forever.
I always want to have something on my system
that's a free browser, that's always
a big requirement of mine.
I start to get less picky at the more like a layer 7
type basic applications, like an office suite application
or a VLC type video player.
I just don't really care if that's not open source,
as long as the core system, as long
as the fundamentals are free.
But we even have it better than that, right?
Because we do already have great open source implementations.
This move's not really going to, is it going to,
are they arguing that LibreOffice is going
to be really hurt by this?
I don't think so.
I think the development's going to continue
to be active and healthy over there.
And it's still a great choice if you
want to use an office suite.
Phil, this has to be a tight line to walk,
because you've got two sort of conflicting positions here.
You've got folks that want to see you move
the distribution forward.
And you said something there that really caught my attention.
It's a standout feature now, too.
It's a differentiator.
So it could be really good long term for Manjaro,
just because it could get more recognition.
It's going to be something that's
standout different in every single review of Manjaro now.
It's going to call that out.
When people are talking about moving over to Linux,
and they ask, well, what distribution supports my Office
system that's the best, which is legitimately a workflow
for people, Manjaro's name may get mentioned now
at the top of that list.
It could open the distribution up to new categories
and types of users.
So it clearly could be potentially good long term
for the distribution.
At the same time, you've got people
that say don't bite the hand that feeds you.
And it could upset long time members of your community.
I'm curious how you handle that from a creator standpoint.
How do you deal with that?
How do you not get sort of demotivated
when these kind of conflicts arise?
Well, I'm highly motivated with everything.
And the team is strong behind us.
The decision was not made singly by me.
It's also discussed with some of the team members, which
were included in the discussions made with a soft maker.
Can you expand on that a bit?
How does that kind of process work inside the project?
Well, we are currently on the leap
that Manjaro is recognized.
And that's why we will change the structure of Manjaro
itself, because a lot of projects are hobby projects.
Most of us work on the side.
So everybody has a day-to-day job.
And on top, when we come home, we
have to work for Manjaro as well.
So some of those aspects will change in a real manner
real soon.
And based on that, we have more time
to discuss with companies like SoftMaker and others
approaching to make Manjaro as a distribution
secure for the future.
I would love for you to come back and tell me
more about that when you can.
Sure, we'll do that.
So it's no problem for that.
The main reason we made the move with the SoftMaker in general
or general with snaps we did in the past
was canonical at the SnapCraft summit this year
is that commercial products have the problem
to implement their software on the Linux basis,
because we are so differentiated and splittered up.
And snaps, for example, is a baseline
to make the publishers available to say, hey,
this is the standard library.
If you go on that, your product will work out.
And snapd is not only for canonical and Ubuntu anymore.
It will work on other distros.
And we are humbled as Manjaro that we
work with them to make all of those things happen.
Sure, there's Flatpak and AppImages as well.
But the industry needs a standard.
And maybe this is one of the moves.
As a project, do you see the most desktop opportunity
with snaps?
It depends.
In our team and the discussion so far,
snaps has a little bit more features than Flatpaks.
Flatpaks are more from the Red Hat section.
Snaps more from canonical.
So we are currently somehow in the middle of it.
And we have to see which side we go.
It's like in the matrix, the blue or the red pill.
Any pill might be there.
Or we don't take a pill at all, because we don't like drugs.
So it's always your choice.
Yeah, I mean, there is a lot of great applications
now shipping in both.
It is like where we're at now with this whole thing Wimpy
feels a bit like a whirlwind.
And there's more and more opportunity out there.
So Wimpy, I'm curious from your perspective,
where you think snaps could fit in with Manjaro?
Obviously, as Phil has just alluded to,
he joined us at the SnapCraft Summit earlier this year.
And personally, I spent a lot of time working with Phil.
And probably my defense of Phil and Manjaro earlier
betray my true feelings in that I feel I've made a friend
for life having met Phil in Montreal earlier this year.
And that's what happens when you get a bunch of free software
developers in a room together working on stuff.
You do establish relationships and friendships.
And so I want to see Phil and Manjaro succeed.
And I would like to think that what we can bring through snaps
and the relationships we have with significant ISVs
will benefit Manjaro and other Linux distributions as well,
not just Ubuntu.
Because I'm in a weird position at Canonical
in that I work in probably one of only two departments
where we don't actually care just about Ubuntu.
We care about the Linux ecosystem at large.
So I'm in an awkward place.
I really want to see Phil succeed.
I want to see Manjaro succeed.
And I hope that snaps can bring something
to that story for them.
Yeah.
I think that's really neat to see you guys working together.
Yeah, it is.
It is a great example of the groundwork laid by Canonical
that could, in some scenarios, only be used to benefit them.
But really, it does benefit all Linux users
who want diverse platforms.
Well, thank you for helping just clear it up
and coming on the show and talking about it
straight from the source.
I think that helps when there's a lot of different conversations
going on.
I think it's good to get it directly from the project.
As things develop in the future, Phil,
you are welcome to come back on here and share
how things go or other project news that comes up.
We'd love to keep the hailing frequencies open,
as Wes always says.
Sure, why not?
And you're welcome to stick around
for the rest of the show too.
We will also, by the way, have a link to information about Phil
and as well as this release, which
is available for testing right now.
We'll have the link in the show notes
over there, which you can check out.
RockinXSCE4.14pre3.
Ooh, don't tell Joe.
Don't tell Joe, he might have to go check it out.
Well, thank you, Phil, very much.
That was very insightful.
And I think I'm very hopeful that it works out,
because it's a nice differentiator.
I like to see people changing it up a little bit.
And it's neat to see differentiating in a way that's
kind of new, kind of new.
I will say too that as a Manjaro user personally, Phil,
thanks for coming on.
First of all, thanks for starting the project.
And personally, I don't care what
Office software is on my machine,
as long as it gets the job done.
After this news, I gave it a download.
And I like it.
It's quicker than LibreOffice.
It feels lighter.
And it does, you know, it has a ribbon.
It looks a lot like Office.
It looks good, yeah.
And so then we did a little digging
into their revenue model.
It seems pretty safe.
It's not like creepy or anything.
They sell SoftMaker Office directly
if you want to buy the commercial version, which
adds a few features.
And they also have a special like fonts division
that does a special typeface stuff that makes money.
And then they use the free Office
to help people find out about the product
and whatnot in a very competitive space.
It actually makes a lot of sense.
So I think I'm going to leave it installed.
And if I have to use a doc or docx or something, well,
I'll use this instead of Google Docs now.
You know, the funny part about all of this
is I almost never have an Office suite installed
on my machine anyway.
No, I mean, I would legitimately just use Google Docs.
And now I won't.
So in a way, it's sort of, I think,
it's at least an upgrade in privacy.
You're back on desktop Linux.
Ha ha.
So just a couple of items of note, as it were, in the housekeeping this week, I want to get the word out there for UbiCon Europe, which is going to be in Portugal in 71 days as we record.
Yeah, the October.
The October was.
Sounds like fun.
10th through the 13th, 2019.
We'll have a link in the show notes if you want to go to UbiCon Europe.
I don't suppose you're going, Wimpy.
UbiCon Europe, absolutely.
No.
No.
I've got two talks accepted.
Yeah, I'm fully signed up.
Shocker.
Shocker that.
Shocker.
Well, I haven't missed a UbiCon for four years.
Amazing.
Well, go say hi to Wimpy.
Go say hi to Wimpy.
We'll have a link in the show notes if you want to check it out.
Because you've got some time to book your trip, as it were.
Now, what you don't have time for, as you've got to just go right now as you're listening to this, if you've got it on the day of, we, very, very soon, July 31, 11 AM Pacific,
are launching the next generation of free study groups.
This one is the AWS Cloud Practitioner Exam Study Group.
It's a multi-part.
By the time you're done, you can go take the test.
Wow.
For free.
Amazing.
Yeah, meetup.com slash Jupiter Broadcasting for deets on that.
And if you want some stickers and you're going to be at DEFCON, there is a sticker swap going on.
And rumor has it Elle will be at DEFCON with stickers.
Have you heard this rumor?
So not only do you get to hang out with Elle, you also get some swag.
Some stickers.
And there's a good chance, there's a good chance, addendum to this rumor, it'll be show stickers.
I love those.
Yeah, those are pretty good, too.
Check that out.
We'll have information about that sticker swap.
In the show notes, if you're going to DEFCON, you're like, what'd they just say?
What about DEFCON?
We've got the link in the show notes.
I happen to know that the Linux Unplugged sticker fits very nicely on the back of a Pixel 3.
So just pro tip there, pro tip.
You know what we've been finding out is people love the User Air sticker because it has a double meaning.
I mean, it's the podcast, but also it's kind of a funny, kind of a funny saying.
It's a great looking sticker because of Mr. Bacon.
So go get one of those bacon made stickers.
Yeah, we've got some new ones coming out too that we will definitely have for the fest
coming up next year.
And some pretty cool stuff on the way, actually.
And we should mention, if you are in our Telegram channel, or if you're on Telegram, Cheese
has been making some unofficial, well, they're official, but they're like not real stickers
or Telegram stickers.
They could be real stickers.
They may be real stickers in the future.
They're almost more fun somehow.
But they're Telegram stickers and they're awesome.
And there's some really great ones.
So go get that sticker pack too.
Cheese is a, he's just like low key updating it every now and then too.
Like he just like all of a sudden will notice like a new one will pop in there.
You're like, where did this come from?
Suddenly you can communicate all that much better.
Is there like a URL we can, how the hell do people get that?
There it is, a sticker URL that I will drop into the show notes for everybody to grab
them.
Yeah.
Boom.
There we go.
Solves that problem.
Thank you, sir.
Appreciate that.
All right.
Well that, my friends, that is the housekeeping.
And now we're going to talk about something that's ripped right out of the headlines,
as they say, Mr. Wes.
Our very own Drew has been cramming for this segment now for a couple of weeks.
You may have seen the news that Fedora has announced Fedor Core OS, which is the merger
of- What does that even mean?
It's kind of a confusing name.
I love it actually.
I love it just because it brings back Fedora Core, which I'm a nerd.
So it's a new edition built specifically for running containerized workloads at scale.
That is right.
And not to be confused with Silverblue, this is not a desktop operating system.
Not at all.
And it's not meant to be.
Red Hat bought Core OS back in early 2018, and we've all been kind of waiting around
to see what that merger is going to look like as they've been deprecating Project Atomic.
And they're getting close.
It's now in a preview.
It's a functional preview.
You can download it and run it.
And essentially it's exactly what we thought it was going to be.
It is Core OS, which used to be Container OS, but Fedorified with RPM OS tree on the
base and immutable file system, automatic updating, integration with etcd, which isn't
shipped by default.
You have to run it in a container.
But it's built for orchestration platforms, just like Container OS and Core OS after it
were.
So Alex, I want to bring you in just for a moment to help us appreciate where this sort
of fits in in the product line.
Alex's day job is working with OpenShift at Red Hat, so you probably have some good insights
in where we can kind of fit this into the product line.
The operating system matters less than ever.
So with the world of containers, you're treating your infrastructure as cattle rather than
pets.
And if you're not familiar with that phrase, it's to do with immutable infrastructure.
And essentially what that means is everything in your infrastructure environment is treated
as it can just be destroyed at any moment's notice, like a cow, I guess.
It's a bit, when you say it out loud, it sucks a bit, but rather than falling in love with
your server and creating a special little snowflake like you would a pet, you treat
it like a cattle and get rid of it.
So that ethos translates through to the whole ethos behind CoreOS and Project Atomic, which
is what this kind of new version of Fedora is born out of.
So it fits in very, very closely with OpenShift, which is Red Hat's enterprise distro of Kubernetes.
And that allows administrators of Kubernetes clusters, OpenShift in this case, to have
to basically have a turnkey version of Linux that they can just deploy and not really have
to worry.
So it has a lot of automation in it.
And essentially it's just taking the best bits of CoreOS and the best bits of Project
Atomic, slamming them together and spitting out a container-friendly distro.
Now Drew, when you looked at this, was it more Fedora than you expected?
Because it sounds like a big part of this has been moving a lot of those tools over.
So I'm kind of curious about the practicals.
Honestly, no, I don't really feel, it doesn't feel like a Fedora project to me, but part
of it is because I had used CoreOS back when I was working in an MSP and it really feels
more like an extension of that ethos and just kind of Fedora-ified in that it is using familiar
tools right down to things like Podman and Builda.
So the thing that I really want to expand upon is Alex's servers as cattle metaphor
here.
So one important thing to note is once you get one of these up and running, there is
not really any reason to log into a server and make changes.
Instead of doing that, the intention is for you to spin up a replacement server and then
kill the old server that no longer has that change.
So it's very rare, I think, and it's going to be very rare for people to use this on
any kind of bare metal.
It really is targeting virtual infrastructures like KVM or AWS or anything like that.
It even distributed across multiple virtualization hosts.
Because of the way it's built, you can use many of these spread out across the internet
and orchestrate them all together so that you have nodes in multiple data centers and
if any one service goes down, you can automatically fail over to a completely different data center.
It's worth mentioning that one of the core advantages, if you will, is that it's self-updating,
self-maintaining in a sense, because the applications are all isolated in the containers, and it
uses etcd as a key value store that's shared across the cluster.
I mean, it makes it makes Beowulf clusters look adorable, it really does.
And so it's like just at a whole new level.
All right.
Well, I'm interested, Drew, you mentioned getting it set up.
I saw I had to use something called Ignition.
How do I go about actually using Fedora Core OS?
Right.
So when you go to do an installation, like I'm going to use the QEMU example here, they've
got a pre-built QEMU image.
And what you can do is you can point your QEMU launch command at this Ignition file,
which is not handwritten, you've got to write it out in, I think it's YAML.
And then after you've written that, you use something called the Fedora Core OS Config
Transpiler, or FCCT to generate that Ignition file.
So the Ignition file is not meant to be handwritten at all.
It's really more machine readable.
And you can honestly just write it with very human readable text, which then just gets
kind of converted over.
So once you spin it up, the QEMU image is going to pull your config from that file and
automatically set itself up.
And that includes things like user creation, SSH key installation for that user, and system
D units.
And the whole thing is kind of developed around using system D units to build things.
So say you want it to be a Docker host, right?
Well, you can create a system D unit in that configuration file that calls Podman, or Docker
if you want to use Docker, to pull down the image, build it, run it, the whole nine yards.
So just actually, can I touch on something there?
Is this, we've been using containers as a term, but are they actually Docker containers
or is this a Podman based system?
Podman is Red Hat's thing, right?
They're competitor to Docker?
I'm not sure I would say competitor, because Red Hat and Docker are both in the Open Container
Initiative, the OCI.
And what that is doing is trying to make a cross compatible version of containers so
that you could use Docker or Podman to accomplish the same goals.
Ah, okay.
But they're using, in this case, they're using Podman, which would essentially be the tools
behind standing up the containers and managing the containers?
Well, both Docker and Podman are included in the base image for Fedora Core OS.
Now Docker is not the preferred one.
They want you to use Podman because Podman is not running a daemon as root the whole
time.
The entire system can be run with only user permissions.
That's kind of the whole reason behind them creating Podman.
So I don't know if you are familiar, when you're running cockpit, I think you have to
mount the Docker socket.
And that is considered a bit of a security no-no.
Because Podman is daemonless, you don't have to mount anything as root in order to see
what's going on.
So it's a user space thing.
That's the difference.
I see.
Thank you.
And the other thing is Podman was designed with Kubernetes integration in mind, whereas
Docker kind of predates the whole Kubernetes fanfare by a little bit.
And its Kubernetes integration is more of an afterthought than built from the ground
up.
Would you agree with that, Alex?
Yeah, absolutely.
I don't want to poo-poo any of the work that Docker did in the early days, because they
closed that last 10% for containers.
I mean, you look at what the FreeBSD guys had for ages with jails, and we started talking
about containers years after they had them.
And they were smugly sat over there going, you know, we've had this for years, guys.
But Docker closed that gap, and now the industry as a whole has really woken up to the engineering
challenges around containers, and Podman and Builder and Scopio are the end result.
And there's a link in the show doc which talks about there's a growing movement of moving
away from this monolithic daemon, which is Docker, which is all the plumbing and everything
required to run a container, a Docker container, as we always call them, when actually they
are just Linux containers, they're not really Docker containers.
And now we're moving into a world where you have Podman, which is Pod manager, designed
to execute containers.
You have Builder, Build-A-H is how it's spelt, and that's designed to just build containers.
And then you have Scopio, which is designed to do things like tagging and moving images
around all over the place and stuff like that.
So it separates out the various concerns into separately maintainable tools, which has a
huge benefit, if you think about it, of not needing to ship the entire thing when you
only want to update your build tool.
Right?
Or the reverse, if you don't need to build images on your production boxes, you don't
need that there either.
Oh, yeah.
Yeah, that's a great point.
I hadn't thought of that.
I think that's true, because one thing I have in the back of my mind is I think I have made
the mistake of kind of comparing this directly with Ubuntu Core, and they're sort of solving
different problems.
They're entirely different.
They are.
And essentially, the way I look at Ubuntu Core is more of an Internet of Things type
workload than necessarily server host nodes, which is what I think of for Core OS.
You'd agree with that, Wimpy?
Yeah, Ubuntu Core is designed for IoT devices, and Ubuntu via cloud init is designed for
containers and has been for many years.
So to quickly summarize it, the key difference is that Ubuntu Core is targeted more at endpoint
devices, and Fedora Core OS is targeted more at server devices.
That's essentially the gist of it.
Now, you can run Fedora Core OS on a local device.
You can install it on bare metal.
There's just not much reason to.
It's really meant more for virtualization.
But when I spun up Ubuntu Core, the first thing that you notice is that you're not going
to use apt at all.
It's primarily for Snap D, and one of the big use cases that I think is growing is for
kiosks.
That's certainly one of the use cases.
I mean, there is no apt in Ubuntu Core.
It's an entirely new Ubuntu for a new use case.
So everything in Ubuntu Core is a snap.
The kernel is a snap.
The base operating system is a snap.
And the applications that you deploy on it are snaps, and they have to be strictly confined.
So that's the only way you can go.
And yes, there are a number of digital signage organizations using Ubuntu Core to deploy
their products.
Cool.
That sign may be running Linux, and we just don't even know it.
I think the thing where there is some confusion is there is, unless I'm wrong, a common thread
between Silverblue, Fedora Core OS, and Ubuntu Core, and that is the updates are done in
a way where you can roll back.
It's sort of self-updating.
Those are sort of the common elements between all of those, right?
Right.
What you're really looking at is the idea of an immutable file system, which is really
becoming an important aspect for security and stability across a lot of different distributions
these days.
And essentially, what you're looking at is the base file system does not change during
user operation.
The only way to change it is during a reboot by booting into a new image.
And I was not finding strict documentation on how Ubuntu handled this for Ubuntu Core.
So I'm curious, Wimpy, if you had any insight into how it does its image generation for
updates.
For updates of the OS?
Yes.
Okay.
So updates of Ubuntu Core behave exactly like Ubuntu updates for the cloud images, which
is every time we provide an update that patches a security vulnerability, we automatically
spin a new image.
So if you are downloading that image on that day, you get the current version.
And those images are then pushed down.
So in the case of cloud init, they're available via apt updates.
And in the case of Ubuntu Core, they're just atomic updates that just happen.
Right.
Okay.
That makes a lot of sense.
Future.
Yeah.
Right now, Wes, you feel it?
Oh, yeah.
That's kind of great.
What's interesting is we're all arriving at the same solutions, the same style of solutions
to meet the demands of our customers.
So while we're all pursuing a slightly different tech here, this is what modern Linux looks
like now.
It's not just Canonical and Red Hat doing this.
This is what enterprise and industry demands of commercial Linux these days.
Yeah.
And that's why also Manjaro is there and looks which technology is the best to do that.
And strict confinement is also good because most people say, hey, in snaps, there can
be malware.
But if you're in strict confinement, it's confined.
So it's only the application which might be affected, but not the whole system.
Right.
Absolutely.
So modern desktop has to have something in place for that, especially if we really do
want to have the regular quote unquote users join us over here.
We've got to keep them protected.
And how magical is it, Chris, when you take down a server and you have your state stored
somewhere else, bring your server back up somewhere else and just point it at the state,
the volumes on a different storage somewhere and it just works.
The application runtime is separated from the application state.
It's just magical when you do that and it's as you left it.
It really is.
And it's neat to see things scaled down and we're finally getting them scaled down to
work nicely.
Right.
So you can use them to just run little infrastructure at home, still solving basically the same
fundamental problems that are needed when you are Facebook.
I mean, essentially what we've set up here at the studio is a little small business server
for a small team to work out of an office, which is a studio.
And so we have certain data transfer and storage requirements that might be out of the ordinary
than a small business.
But what you're saying there is so true.
This enterprise scale technology that lets you deploy systems all around the globe on
across multiple different clouds is also now approachable by somebody like me.
And Alex, you asked how does it feel?
I can't really equate it because you have to have been there, but I imagine it must
feel like somebody who was a professional chef for their career and they retired and
a few years, like five, 10 years after they retired, the microwave was invented.
Right.
And then you watch how fast people can like warm stuff and it just blows your mind.
That's containers to me on Linux.
Yeah.
You, I mean, when you got out of things, I was only just sort of starting, right?
I mean, you were in the height of the VM world.
Yes.
Oh, big time.
Yesterday we destroyed all of the containers on the server here for a couple of minutes
and then within minutes have them all back up and running, reattached to their config
and good to go.
And you weren't even worried.
The first time you do that, it changes your life.
I swear.
And we just did it yesterday.
Just, you know, I was like, I got to, I got to, I can't even remember what we were.
We were, oh, we were, uh, we were doing a dry run of the full upgrade and security update
process on Fedora and wanted to make sure like everything worked.
And we did the SE Linux troubleshooting and we're doing the whole, we did a whole dry
run on the whole thing, which happened to be a hot run and it worked.
So you know, these days you're mad if you're not using virtualization at scale.
Seven years ago, you were mad if you were considering it.
I feel like containers are at that kind of same point, right?
Where it's reaching a critical velocity, a terminal velocity where you're beginning to
get to that point where you're crazy if you're not doing stuff this way.
Whereas, you know, five years ago, containers were just, you know, fairy dust.
One other thing I wanted to bring up is silver blue.
Silver blue as a workstation was never really meant for standard desktop work.
It was meant for people who are building containers with, I think, an eye towards the release
of Fedora Core OS and the migration from Atomic into the new Core OS future.
So to me, them releasing the silver blue workstation and getting that shipped in a very usable
state was kind of a precursor to what we're getting ready to see, which exactly as Alex
said is about to be all containers all the time.
Wow.
You're right.
So Fedora Core OS will have developers running Fedora Silver Blue, developing the software
to run on Fedora Core OS.
That's right.
Ah, that puts it all in perspective right there.
Thank you, Drew.
Thank you for trying these out and helping us better alliterate the differences between
Ubuntu Core, Fedora Silver Blue, and now Fedora Core OS.
Yeah, I mean, Chris can really say them all.
There's no way he would have got it all right.
You know what, Drew?
We appreciate it.
Thank you very much.
Phil, thank you for coming on the show.
I look forward to hearing the future of the Manjaro project and of course having you back
on here.
Phil, one of the founders of the Manjaro project.
Thank you very much for joining us.
Thanks.
Now, we'd love to have you join us too, jblive.tv.
We do this here show on Tuesdays.
Very soon we're going to have a very special all-in-studio edition.
Oh, I'm excited.
I think that's in two weeks.
Is that right?
Two weeks.
So if you can, put that on your calendar.
Get the times over at jupyterbroadcasting.com slash calendar and all of our links over at
linuxunplugged.com.
Thanks for joining us.
See you next Tuesday.
All right, we've got to go boat.
Jbtitles.com.
All right.
So you know what got me?
It's that sweet new intro Joe made me.
You caught me.
I was like getting a sip of water during the regular intro because my instincts kicked
in and I thought it was longer.
Yeah.
And you do want to wet the palette, right?
Yeah.
Right?
I was trying to prepare for the show.
That's pretty good.
I resisted.
I resisted.
I wanted to do it.
I wanted to say one more thing.
Well, what did you want to say?
Get it in now.
There's actually a third piece to the core OS silver blue thing that was kind of glossed
over and that's that there's a Fedora IOT edition.
And the IOT edition takes the core OS technology and puts it in an even smaller base, even
more reduced and even more simplified for targeting the same use cases that Ubuntu
core does.
And again, it's a container focused workflow because what they're going with is more of
a model of, well, you already have these OCI images and they can be built multi-arch just
like every other reasonable format can or unreasonable format.
And so you can build these targeting ARM, targeting power, targeting x86, MIPS, whatever
you like.
In this case, Fedora is supporting ARM and x86 with this and actually also I686 because
shockingly, and this depresses me to no end, 32-bit x86 is alive in IOT and that hurts
me really bad.
But that world is where a lot of this Fedora IOT stuff is going into is that they're building
an even more reduced functionality targeted for bare metal kind of environment for supporting
these kinds of applications on there because as it turns out, as Ubuntu core also proves,
a containerized confined model for applications can also work well in an IOT space when the
machine is sufficiently powerful, as in the case of kiosk digital signage and stuff like
that.
But the goal there would be, and who knows if it could be accomplished, but the goal
would be that the vendors could then actually maintain and update the applications and the
operating systems would be self-maintaining and we'd maybe actually live in a reality
of standardized IOT devices that have some level of security.
Bingo.
And in fact, next week at Flock, the guy who is primarily leading the Fedora IOT edition,
Peter Robinson, is actually going to be giving a talk about enterprise scale usage of Fedora
IOT edition.
Wimby, I have a question for you.
How does Ubuntu core boot from a kernel snap?
Is there a bootloader that can mount a snap?
A kernel delivered as a snap is just a bunch of files on disk, right?
It's no different from anything else.
It's not magical.
Within the project, we were a little bit surprised when Joey posted a few months ago about the
snap store was a snap and it can install snaps.
Everyone else was like, well, how the bloody hell does that work?
Snapseption.
Yeah, right.
We were like, it's obvious how that works.
It was obvious to us at least, and then it was completely unobvious to everybody else.
There are some things like this and it is a little bit of a paradigm shift, but it's
just snaps are not magic.
They're not voodoo.
It's just another way of getting bits on a disk somewhere.
