How about this for a little bit of troubleshooting?
A second-hand television wiped out the broadband
for an entire village.
And this went on for months and even impacted
neighboring communities at time.
And poor broadband was just a way of life
starting at 7 a.m.
despite repeat visits by engineers
to try to find and fix the fault.
They replaced equipment, large sections of cable even,
but the problems remained.
Local Openreach engineer, Michael Jones,
was determined to find the Aberrosian broadband smoking gun.
And I should note there,
I don't know if I'm saying that town right
because my Welsh is a little rusty.
That's strange.
Well, they say on their blog post about this,
as a last resort,
we decided to bring in a crack squad of engineers
from the chief engineer's office
who were based in other parts of the UK to investigate.
Accommodation was understandably hard to find
due to COVID-19 lockdown,
but we eventually found a field where we camped
and made the 55-mile journey back to the town
the next morning.
They exhausted all avenues.
So they wanted to take a final test
to see if maybe a phenomenon known as shine,
single high-level impulse noise
was causing this interference.
I love this, right?
It's sort of a moonshot like,
okay, we've tried everything we know.
What about this weird random thing?
Well, by using a device called a spectrum analyzer,
we walked up and down the village
in the torrential rain at 6 a.m.
uphill both ways, I'm sure,
to see if we could find an electrical noise
to support our theory.
And at 7 a.m., like clockwork, it happened.
Our device picked up a large burst
of electrical interference in the village.
The source of the electrical noise
was traced to a property in the village.
And it turned out that at 7 a.m. every morning,
the occupant would switch on their old TV,
which would in turn knock out broadband
for the entire village.
As you can imagine,
when we pointed this out to the resident,
they were mortified that their old second-hand TV
was the cause of an entire village's broadband problems.
And they immediately agreed to switch it off
and not use it again.
And since then,
there has been no reported issues with the network.
Hello, friends, and welcome into your weekly Linux talk show.
My name is Chris.
My name is Wes.
Well, hello, Wes Payne.
You are a gentleman that looks good in uniform.
It's looking good on you today.
I thought you might like this cap.
I do.
You know me too well.
Today's episode is brought to you by a Cloud Guru,
the leader in hands-on learning.
The only way to learn a new skill is by doing.
That's why ACG provides hands-on labs
in Cloud Linux servers and much more.
Get your hands cloudy at acloudguru.com.
Well, here we are with episode 372.
And we are going to ask a question that has been evolving
in the back of our minds, I think, for a couple of years.
We ask it with all sincerity.
Is there really just no room for new boutique distributions?
Is it essentially a three distribution world
with Ubuntu derivatives, Arch, Fedora, Red Hat?
There's some Debian flavors.
It's a small world of Linux distributions these days.
And Wes and I recently tried out some really great distributions
and wonder why more people aren't using them.
And so we'll talk about that.
But of course, we have a bunch of community news to get into.
And we have a special guest joining us today,
the CEO of System76, an all-around great guy.
Carl is here.
Hello, Carl.
Welcome back to the Unplugged program.
It's been a while.
Hey, Chris.
Thanks for having me.
Carl, we're going to get into a new story from System76 here
in a little bit.
So feel free to chime in on everything.
But of course, we'll go to the source for that one.
But I wanted to start with some news
that I'm super excited about.
So to help us analyze all of the community news this week,
we have to bring in our team of detectives,
our crew of captains.
Why, yes, it is our virtual lug.
Hello, Mumble Room.
Hello.
Hello.
Hello.
Bienvenido.
Absolutely.
Good to see.
Good to see we got 21 in there.
We're shy a little bit today of a few folks.
I guess they didn't know you're wearing your uniform today.
Or maybe you scared them off, Wes.
I look a little too authoritarian today, I think.
But don't worry.
We're friendly here at Linux Unplugged,
as long as you comply with our orders.
That's right.
Thank you.
Got to make that disclaimer.
All right, now, some news I'm actually super excited about.
I haven't got to mess with it yet.
In fact, I'm not even sure if it's fully shipping anywhere yet.
I just saw this on GitHub and wanted
to talk about it immediately.
It appears that if not right now,
very soon the Raspberry Pi 4 will officially
be able to directly boot from USB.
This sounds pretty cool, Wes, because this
is kind of like the big performance
limitation in my Pi setup.
Yeah, it was.
You know, I think this change is basically
that the support had been in beta,
and now they're finally saying, yeah, all right.
Everyone can use this now.
You don't have to jump through even more hoops.
Although I still think updating the firmware on a Raspberry Pi
is a little non-standard.
And so that part can be a little confusing.
You got to do like a full upgrade
and then use the firmware-specific commands
that OSes like Raspbian have to make sure
that you've got the right firmware
and the right configuration so that you can actually
use these handy new features.
Tricky, tricky firmware.
I think we'll talk more about that in a moment.
But something else I noticed is it,
and I don't know if you saw this,
but it looks like they're playing around
with treating the USB disks or block devices more
like SCSI devices, which could also improve performance.
Have you seen this?
Yeah, it seems like people are taking it seriously,
that you might actually use these things, well,
I guess like you do, Chris, and host your whole home
infrastructure.
And if a whole bunch of the audience is running from USB,
it makes sense to maybe invest in whatever technology
you can find to make that work a little more efficiently.
It's not just a drive there that's
going to have big files from your NAS
that you never access.
It might be your whole OS.
Wes, anyone could have a whole home off-grid internet
hot cache in their house as long as they're
willing to have like four Raspberry Pi.
That's all it takes, four.
Is it really only four?
Actually, at the moment, it's only three.
Once I got on the ButterFS sauce and started
combining my volumes and reloaded everything
onto LTS Ubuntu 20.04, I'm like rocking with less pies
than I ever had to.
It's kind of ridiculous, actually, how great
these Raspberry Pis are.
And now, I can say I have driven them
into the summer of Texas and back, where the booth got up
to 104 degrees in there where these things were running.
And they kept on delivering.
There was a couple of times where thermal throttling kicked
in and the Plex stream cut out or something like that.
But I mean, really, I am very impressed.
They're still running right now.
And I have like no reason to replace them.
Like I fantasized about an x86 system in there,
just one x86 box with Proxmox that runs everything in VMs
and then just keep it super easy to do snapshots
and swap it to a new box.
But the reality is not only have they been problem-free,
but their low power draw is great for somebody
who's trying to run on solar.
So it's kind of just been a win-win.
I think they're really cool.
And so I'm glad to see the community picking up
around them and making them even more serious boxes in a way.
Now it just has all those little architecture problems
to work out.
Yeah.
I mean, it's still probably not an ideal home server,
but with faster disk access coming online,
maybe support for trim, things like that,
it's getting closer.
I was talking to Alex in the old self-hosted podcast
about a future where I netboot these things.
And maybe one Pi has all the storage
and the rest all just netboot.
And in that netboot environment, it could just be one cable
because you can get a PoE hat for Raspberry Pis
and you could power them with the ethernet cable
you're using to supply them networking.
And so I could run all these Pis with just a single clean cable
that goes back to the switch.
That sounds perfect.
And the Raspberry Pi sounds like a great candidate
for being a little netbooting server, right?
I mean, maybe.
We'll see.
I'll see how far I take it.
But the possibilities seem like they're pretty appealing
with the Raspberry Pi platform because it's low power,
because you could run it off PoE,
and now you can netboot or USB boot.
For the kind of setup I'm using,
it just sort of seems to be a perfect little device.
I don't know if I'd recommend it for everybody.
And such a low-cost investment, right?
I mean, you don't have to go all the way
to configuring a smaller x86 system or something like a NUC
and invest in all that, where you're thinking a lot about,
oh, I got to buy extra hardware.
What memory and SSD am I putting in here?
You're just assembling these Pis, you know,
as you've got a few extra bucks here and there
because the price point's so low.
Pretty low risk.
And in fact, the last thing I'll say about it
is because it's not going to break the bank,
even to buy an 8-gigabyte one, when you're comparing it
to the cost of a traditional x86 computer,
and if you just need, like in my case, a test one,
I have, I know it sounds silly, but I basically
have a bench Pi that I just use for testing things
before I roll it out on my home setup.
And it's just sort of one of the things you can do
when the thing just costs $40.
Yes, right.
And I mean, in your old life as a professional admin,
you would have spare machines.
You have backups.
You might have hot standbys.
That's also something that's a little more accessible
in the home lab when your base is a Raspberry Pi
and not a big old x86 server.
Yep.
And actually, to that point, I carry a spare Pi in the RV,
fully ready to go in the case.
All I have to do is just pop in an SD card,
or a USB drive, and it's functional again.
And the idea was that when I went down to Texas,
if I burned out a Pi, because it seemed very possible.
Literally burned out.
Yeah.
I would pull that Pi, pull its storage,
and then pop in the new Pi, which are literally Velcro
to the inside of this booth.
So it's literally, you pull it off,
and you slide in the new one to the Velcro
and just reconnect all of the accessories,
and it just picks up and takes right over.
And because it's a $40 device, for me, it's worth it.
It's like an insurance policy to just have one.
To just have one in the cupboard ready to go.
So there's advantages to it.
But there is those tricky things like the firmware.
Yes.
And that's why it's the perfect opportunity
to chat with Carl Rochelle from System76, who, I got to say,
has really delivered on a promise that didn't seem all
that deliverable.
How often do people say, buy this product from us,
and it's running this type of firmware today,
but we promise one day we'll make it possible for you
to replace that firmware.
That's just often one of those promises that gets missed.
And I think System76 has delivered here.
Because if I'm not mistaken, not only has the OpenFirmware
project at System76 gotten continued development,
which is awesome, but it looks like it's
been widened to previous machines
that have already shipped.
Is that right, Carl?
Well, you're hitting on, I think,
what is the most notable part of this work.
I mean, first, it's quite an achievement
to get OpenFirmware on machines on day zero.
Meaning, when they're available from Intel or AMD,
we have OpenFirmware.
Well, AMD coming soon.
But Intel, we have available on day zero
when the chipsets are available and when the CPUs are available.
And that was quite a lift.
But once you start building the infrastructure
and the knowledge and the know-how to do it,
things start moving faster.
And so being who we are, we like to try
to push it further to more things
that will further liberate our customers and their computers.
And so we went to the OpenEC, which to me
is the most exciting part about all the firmware,
because the EC is what controls the things
that you feel about a machine, like the fan curves,
the hotkeys, and the interaction between the-
And we're talking about the embedded controller here,
right?
Right, the embedded controller.
Yeah, the interaction between the computer,
the hardware, and the operating system,
those things that you really see as a user,
that happens at the EC.
So with the Lemur, when that came out,
that was our first model that had an open source EC
that we wrote all the firmware for.
As you had alluded to, even though all that's super exciting,
something that we were able to do
that I don't think most companies would do
is invest in bringing this technology
to existing customers for products
that we're already shipping,
and we're working on bringing it to customers
whose products we aren't shipping any longer.
So you're going to get those advantages
from that work that we've done,
and we really are starting at a chipset level.
So we can say the chipsets in the current Gazelle
and Adder and Serval were the same chipsets
as the previous models, although there were some changes,
but that means the bulk of the work was done,
so we can port to those previous models,
run through the QC team,
and ship our customers liberated firmware.
Well, congratulations.
So I have a question about that.
But just on the side, Karl,
has Intel's protracted development cycle
enabled this in any way?
No, not really.
What enabled it was Intel reaching out to us
and asking us to partner on making open source firmware.
Oh.
Right, yeah.
Okay, wait a minute.
Hold on, hold on a second.
That's not something I understood about this before.
Intel is aware of what you are doing
and copacetic with it?
Oh, not only that, we have a Slack channel
where we chat with their firmware engineers
How is this a thing?
Yeah, well, that's what got it all rolling.
Wow, that's amazing.
Yeah, they reached out to us and said,
hey, we want to do open firmware.
And then their team came out.
They had, it was quite, it was kind of wild.
Their firmware team came out
and they had this long presentation
that after eight hours, they're like,
okay, let's come back tomorrow.
We have some more to show you.
Wow.
So we cut for the day, we come back the next day,
so we cut for the day, we come back the next morning.
They have like a few more slides to go through
and they were back chatting
and they're like, they say,
hey, so will you guys partner with us on firmware?
And we essentially said, you had us at open source.
So that was enough.
You had us about 12 hours ago.
Well, that's really neat.
I didn't quite realize that.
Yeah, we have access to the documentation
that's necessary to enable hardware,
things like Thunderbolt that we just couldn't do before
that now we're able to do
and offer on products with open firmware.
And now the same thing's happening with AMD.
We're working with Google and AMD
on open source firmware for AMD platforms.
How is that developing?
Is that also going pretty smoothly?
It's going pretty well.
We were working,
well, we've just been working through legal for a moment,
but I think we're past the-
Sure, I bet there's a lot of that.
Yeah, there's a bit of that,
but I think we're past the legal as of this week
and that means, it didn't slow us down too much,
but it does mean certain,
just want to be on good sound footing
when you're doing any kind of open source work.
Sure, absolutely.
Yeah, we'll be able to move more quickly
now that that's past us
and onwards and upwards with open firmware.
Well, so here was my actual original question
before that aside is,
practically speaking as an end user,
what is the benefit for me?
I mean, I like the idea
of the world having a better understanding
of what makes my computer run,
but what is an actual practical benefit that I get?
Right, because this is like a big investment
for you guys, right?
You're putting engineering hours
investing in making all these changes.
What does that mean to a customer?
Right, well, the first thing is
that we can very rapidly respond to our customers
in ways that we couldn't before.
If there's a problem or an enhancement
that we can do through the firmware,
something simple like, for example,
when you close the lemur lid,
with a customer reported to us,
it's a little scary to do,
but if you put enough pressure on the lid,
you can touch one of the keys underneath
on the keyboard and turn on the machine.
So now we can very quickly spin out,
work on a fix and roll that out to our customers
and that keyboard when the lid is shut,
will no longer activate or resume from suspend.
So our response, our ability to respond
is a lot faster.
And the really cool stuff
you're gonna start seeing
coming over the next few months.
That's things like battery thresholds
that are built in to the embedded controller
or can be controlled in the embedded controller
in the operating system.
So in Pop OS, you can do things
to extend your battery life
or the life of your battery.
The life of your battery.
Is that, so are you implying like
charge control settings?
Charge control, right.
Yeah, battery thresholds and charge control.
So...
Oh, that's great.
Yeah, in GNOME settings,
you'll see options for maximum,
charge it all the way up
or charge it 80%
and or maximum battery longevity, 60%.
Oh, that's fantastic.
It's, you know, again,
those are things that you can't do
without control of the firmware.
And then one that I'm really excited about
because I like altering my keyboards.
I like to change the key map around
to things that I'm more efficient with.
So I like to do that.
Are we talking Dvorak here or something else?
No, mostly I like to use,
I like to move around the things
down by the space bar.
Oh, sure.
Yeah, see, I like to use my thumbs when I can
and having alt next to my space bar
is basically useless
and then don't do anything with it.
So with this, with open source firmware
and the embedded controller,
we're working on an application
that will ship as a utility with our products
that you can move the key maps around.
You can create function layers.
You can alter...
Is this firmware level changes?
So it would be persistent or is this...
Right, right. And it's persistent.
So when you save them, it saves it to the EC
and those changes are persistent.
All right, well, I mean,
I bet you have a whole other list,
but you've got me convinced.
So my question is, what is the risk
do you feel like as a company
for reflashing these firmwares
on machines that are in production?
They're out in the wild doing who knows what
connected to who knows what
and you're updating a pretty core part.
That must have been at least some point
of heart burning consternation for a bit
to figure that out.
Well, that is challenging
and it hasn't gone without some hiccups.
Usually what we'd like to do
is roll it out into the factory first.
So that means the factory is going to see
a lot of different configurations
that might not be in the wild
or that are in the wild,
but we're on proprietary firmware.
And through that process,
we can catch a lot of problems
that might happen.
But yeah, it is risky.
And so we also enabled rolling back
so that if there's something
that we haven't caught,
a customer can roll back to price
proprietary firmware.
We can examine what might be the cause
and get it fixed.
Oh, OK.
So there is an escape hatch.
So that's always nice.
That's the best you can really go for
when you're doing these kinds of things,
really.
Wow, well, this is pretty exciting.
So what customers starting now
can get this that didn't have this before?
It looks like it's the Adder workstation
and the Gazelle.
Is that right?
The Adder and the Gazelle.
We're also looking at the previous
generation Adder,
previous generation Oryx.
And I think that's going to probably
fill out the product line for where
our starting point is.
And from there on out,
we will be working with open firmware.
Wow.
Well, I guess my last obligatory question
is, do I have to be on Pop OS
to get these new firmwares?
Or is there a means for people
outside of Pop OS?
Outside of Pop OS to get it too?
No, you can get it with any Linux
distribution or Windows.
You just use a USB stick
and you boot to the USB stick and run it.
It's like a it's like a mini operating
system, really, that will
will update the firmware for you.
Could you do it from within Pop OS,
though?
You can do it from within Pop OS
and you could do it within
I think any Ubuntu base would be
essentially the same.
OK.
The features that we're working on that
to improve the operating system
experience of the hardware experience
through the operating system
with this firmware are things
that we're going to have.
Some of them will be add on applications
like the keyboard mapping
and that that utility.
But we're working upstream with Gnome
on battery thresholds.
We just filed some issues up there
and we're working on design.
So we hope that that's something
that will be usable not only
by System76 customers, but
there are standard interfaces,
kernel interfaces for this.
So that means if we can get
this work done, other laptops
that do have this type of
functionality in their firmware
will be able to take advantage of it, too.
Carl, don't you know how capitalism
supposed to work?
You're supposed to keep all this stuff
for yourself.
You know, I don't think that's
the way to do it anymore.
You might be onto something.
You might be.
Yeah.
You know, I don't know.
You know, this does make me curious.
You know, you guys have been exploring
more, you know, with the Thelio
making your own stuff.
And there's talk maybe someday
of a, you know, in-house laptop
has working at this low level of hardware
given you guys any insights there
to future designs?
It has. Well, in some ways,
in that we want the work that we do
to be as open source as
is possible, given the resources
and supply chain we have.
So we've learned things from that.
But where we've learned,
where I think we're learning more
is actually in our keyboard project,
believe it or not.
Because in that project,
we've designed a PCB.
There's some secret sauce
in the keyboard project
that enables us to learn
some other things
and had great gain experience
with laptops.
But the third thing it does is
we're working on precision milling
with the keyboard.
Oh, sure.
So with precision milling,
we'll have a better understanding
of how to approach laptop chassis design.
What an interesting way to kind of
step to that kind of project
and learning at this level
is not only safer for the business,
but you'll also no doubt
end up making a product
that I think the community would be
interested in purchasing.
So it's kind of a win win.
It's kind of clever, Carl.
I didn't expect all of the perks
that you mentioned with the open firmware.
And I got to say,
I didn't expect the...
I don't know how I missed that detail
about the fact that you guys
were working with Intel,
but all this stuff looks really good.
You know, as long as...
As soon as I can get a laptop
with a 2K screen, Carl,
soon as I think you might have
a new customer.
It's just a dream.
It's a dream.
But it's the panel manufacturers
that need to deliver.
Have you seen the Adder?
I just have to ask.
I don't recall.
I do know about the Adder,
but does it have a dedicated GPU?
It does.
Oh, okay.
Let's see.
I thought it was Intel GPU.
It's dedicated,
but with hybrid graphics
and it has an OLED display
that is the absolute
most gorgeous display.
Really?
Possible.
Yeah.
It's striking.
Really?
I can't even put my laptops next to it.
This might look terrible next to it.
Okay.
Too good.
Yeah.
All right.
All right.
Okay.
I'll have to give that one a look.
Well, Carl, thanks for coming on
and chatting about that.
You're welcome to hang out
for the rest of the show
or you are cleared free
to navigate as Unique.
I'm sure you got lots to do too,
but I appreciate the update on stuff.
He's got keyboard settings to tweak.
Come on, Chris.
Thanks for having me, guys.
Yeah.
Thanks, Carl.
It was great.
Linode.com slash unplugged.
Get a $100 60-day credit
on a new account.
Linode solves the problem of servers,
whether it's a big powerful GPU powered server
or something that just gets a job done
in the background
that you never think about.
They've got the whole range to choose from.
I go with Linode
for not only my personal stuff,
but for all of our
Jupiter broadcasting infrastructure as well.
And Linode costs 30 to 50% less
than competitors like AWS.
And they have a much better interface
and dashboard.
But I think more importantly for us,
Linux is baked into their culture.
You might recall Jeff Dyke,
who was an active Linux contributor,
had developed a technology
called User Mode Linux a decade ago.
Plus now.
Wow.
User Mode Linux allowed developers
create virtual machines
within Linux computers.
And at the time,
single use applications
seemed like the way to go.
But some developers saw a different path.
And one of those developers
was a young technologist
named Christopher Acker.
He saw an opportunity
to use the hypervisor technology
not only to build something
like Salesforce or Amazon,
but to build something
that made cloud computing
less complicated,
less expensive,
and more accessible
to every developer,
regardless of where they're located
or what their resources were.
He built a company around that idea.
And that company is Linode.
They helped pioneer cloud computing.
And now, two decades later,
Linode is the largest independent
open cloud provider in the world
with 11 global data centers.
The culture and experience
in the Linux community
is baked into every aspect
of the company
from their own internal culture,
but also the controls they give you
over the servers themselves.
For my infrastructure,
I generally go with a mid-tier system.
But for the boxes that do encoding,
we went with dedicated CPUs.
And for my system that essentially
just acts as a jump host,
well, that's a $5 a month system.
I take advantage of object storage
is backed by native SSDs
and enterprise grade
40 gigabit connections.
It's really fast.
It's easy to use.
And they're part of the Linux community.
You get started by going
to linode.com slash unplugged.
You get that $100 60 day credit
on your new account
and you're off to the races.
Go see what you can build.
linode.com slash unplugged.
I fantasize about an open power,
you know, like an open power PC laptop.
Who doesn't?
And it turns out
that the Open Power Summit
was this week.
And there has been an update
on the status of a power PC laptop.
It's not power PC
like you used to note.
IBM has really been promoting
how in they are
with how open this thing is.
They also released
a bunch of other stuff
open source over the week.
We'll have a link
to all of the video presentations
which cover a ton
of the announcements
in the show notes.
But the Linux Foundation
had the Open Power Summit
North America edition
is what it's called.
I guess there's multiple editions.
I didn't realize that,
but the recordings are online.
So we're going to leave
most of the homework up to you.
But there was one
that did catch our attention.
Roberto Inocenti provided an update
on the power 64 laptop
and still being worked on
via community donations
as an open hardware platform.
Now we should know
before you get too excited.
Mostly this is R&D right now
as opposed to being focused
on making or selling
a physical product.
But you got to start somewhere.
We have this difficult know
how to solve this
was not simple to find
even already built
body, notebook body.
But at the end,
thanks to Slimbook
we was able to find this solution.
So nowadays we have the possibility
we have designed our motherboard
especially for Slimbook's Eclipse.
This is the model
that is a game oriented
the notebook body.
Yeah, the Slimbook Eclipse chassis
is what they're aiming at.
And they think that it's kind of like
it's kind of like you got to know
the chassis you're building for
to really do all
the electrical stuff properly.
So this is going to great
to just get this nailed down
and they're going to include
a GPU in there.
I don't I don't know where it really
stacks up in the grand scheme of things.
But this entire project
really been going since 2014.
It's it's slow R&D
but there's been various points
along the way where they've
done a community fundraiser
to get over whatever
particular mountain they happen
to be climbing at that moment.
And they're reaching another
one of those moments right now.
And I got to say,
it's not going very well.
This is getting really close
to an actual laptop here,
an actual power PC laptop
that isn't a known good chassis.
But the funding is stalled.
They are aiming for five thousand
and they've got eight hundred and ten
of non-U.S. funny money.
And the reality is,
is that that trajectory,
they're just not going to get there.
There's been a couple of two hundred dollars.
Well, not dollars.
It's funny money.
There's been a couple of donations
here and there.
But I don't think
it's going to make it, Wes.
I don't unless unless this changes
or they get the word out
and this has been running
since the 7th of September.
Unless they get the word out,
I don't think it's going to make it.
Yeah.
I mean, if you're interested,
I guess now's the time.
We were recently debating,
discussing, contemplating
the future after the Nvidia
ARM acquisition.
And we sort of jokingly
threw out open power.
But it does turn out that there's
there's a lot going on in this space
and maybe maybe we all need to be
paying a little more attention
and just investing a little bit more.
Maybe it's a pipe dream.
Maybe everybody just feels like it's
you know, they're writing it off.
It's just it just seems like it's
it's been going since 2014.
And by the time they're done,
it's not even going to be
really a competitive system.
It's just going to be a right.
I mean, you're still in those stages
of trying to get it to work
at all, really, right?
To get it, you know,
get it all pieced together,
get it in the right form factor.
And then by the time you're done,
well, it's hardly going to be
competitive with the latest XPS 13
or system 76 offering.
Yeah, yeah.
Well, OK, speaking of arm.
You know, Endeavor OS,
which born out of integrals.
Well, they're aiming
for an arm launch themselves.
So you'll be able to get
Endeavor OS on arm,
which since Manjaro has been
pretty much the only arch
derivative targeting arm,
they've kind of ran away with it.
But now Endeavor OS realizes
maybe we missed the mark.
Now, we probably should note
that Endeavor OS at the moment
is still a small team,
so they haven't tested it on
all possible arm devices
because that's just crazy.
But if you're, you know,
running like an Odroid
or, of course, a Raspberry Pi 4,
well, then, yeah, you're in luck.
Yeah, let's let's file
Endeavor OS away for talking about
later on in the show today,
because I think that kind of comes up
in the area that we're
going to be talking about.
Yes, in the meantime,
let's do a little housekeeping.
Now, this here program is live
on a Tuesday at noon Pacific
over at jblive.tv.
We were off last week,
but we're back.
I mean, if you get the download,
we were never away.
You won't notice a thing.
But we're back in our regular lifetime,
and we'd love to have you
join us in the Mumble Room.
Also, if you're around on Sunday
at the same time,
just a different day,
the Luplug is going.
You can get in there
and just chat Linux
with like-minded folks
in our Mumble Room lobby.
And then, you know,
your mobile is all set up.
So when you're playing
hooky from work,
you could jump in there
and join us on the show.
That's great.
You're already set up.
Why not do it?
And also, last but not least,
thank you to our members.
Our core contributors are helping
not only this show run independently,
but right now they're helping
do the production.
Like it just wouldn't be possible
without them.
It's it's fantastic.
If you'd like to be a core contributor,
you can go to unpluggedcore.com.
You get two feeds to choose from
the live version,
which is a lot longer of a show.
So if you have a long commute
or you just want more Linux unplugged,
you want to hear all of our mistakes.
Yeah, or, you know,
welcoming guests on as they join us
and we get all set up
and all of our friends
join the Mumble Room.
We all catch up with each other.
That's what's going on there.
And then, of course,
in the post show,
we're usually fired up
about something from the show.
We usually get into something
and it just doesn't make into the show
because we also want to have
a tight edited version
available for everybody.
And if you're a member,
that's where that second feed comes in.
You get a version of that show
with limited ads.
There's some that are contractually
obligated to be in there,
but most aren't.
And we cut them out.
You still get the same great production,
just no ads.
And those are available for our members
at unpluggedcore.com.
Unpluggedcore.com.
Thank you, everybody who joined up.
We really appreciate it.
And Mr. Payne with that.
That's the housekeeping.
Still keeping it pretty tidy these days.
Yeah, it looks good in here.
I got the natural light,
a few more houseplants,
ship shape.
You got houseplants?
Really?
Do you really have houseplants?
Of course.
Huh.
I don't know.
I just I didn't picture you as
not that you wouldn't have houseplants
because I mean,
I'm sure you have a lovely place.
But what I didn't picture
is you being the kind of guy
who takes an afternoon
to go out and buy plants,
you know,
because it's not like you just
it's not like a precision thing
where you just run out
and get a plant.
You got a plant shop.
You got to figure out
what plant place you're going to go to.
You got to get plant maintenance supplies.
And that's where I just didn't really
see you being into it.
Well, it helps when you have
too many friends
who are also into plants
and just offering you cuttings
all the time.
I see.
So they come over and they go,
Wes, plant pushers.
Wes, we got to do something about this.
We got to liven it up in here.
There's no green.
These poor dogs.
Well, OK, so let's talk about
some poor distributions
that despite how interesting
and compelling they might be,
I don't know if they're ever
going to get traction.
It might be my bias.
You may have noticed
in this here program,
we don't do a lot
of distro reviews anymore.
Used to do a lot
of distro reviews.
But now we kind of just
do the big heavy hitters
because I think
and it's just been
an unspoken bias
that may have developed.
I can't really see me
coming on this show
and telling you about
how great Deep in 20 is
and getting more than five percent
of you from actually switching
from your actual
daily driver Linux.
It just doesn't seem
like it's going to happen.
Yeah, you know,
this really started
quite the discussion between us.
Just we were, you know,
Deep in 20 came out
and it was it was on our radar.
We were interested in it.
I mean, there's a lot
about it to like, seemingly,
at least from the bit
that I've played with it.
But yeah, who are we
recommending it for?
And where does that fit
in where Linux is going
and where desktop Linux
fits in 2020?
And here's a scenario for you.
OK, so we're not going to be able
to convince a diehard
arch user or a person
who believes in the elementary
way of designing
an operating system or somebody
who has been an Ubuntu user
and used it for work for years.
We're not going to convince them
that Deep in 20 is something
that's even worth them
really trying because they've
got work to do.
They're set in their ways.
You have people who like to
hobby hop and they'll try it out,
but you're not going to get
actually any real traction.
Like the distribution isn't going
to see millions in growth.
And so then I thought, well,
maybe it's for new users,
new users who are already
not set in their ways.
You know, they're open to the
possibilities that the many,
many distros provide.
But then I thought, wouldn't
that be a disservice to that
end user if you set them up
on a niche distribution
and then expect them to just go
about their computing life
as if they can just get
everything done that they could
if they are on Windows or Mac
or Ubuntu?
No, of course not.
Now, now that they're on this
niche distribution, it's much
harder for them to do any
research and find support,
especially if their Google
foo isn't tuned to years of
Linux searching.
That's just it.
Sure, Deepin has a Debian base,
but if you don't really
understand how all of that
works and you're Googling
specifically for the OS that
your system tells you you're
running, that might be more
trouble.
Well, and how would they even be
able to deduce what the base OS
is? Right.
I mean, that's just they're
just not thinking like that.
That's not how a consumer that
isn't actively selecting and
choosing an operating system
like this conceives of the
construction of the computer.
That's just not that's not where
their head is at.
Right.
So Deepin isn't great for new
users, then necessarily unless
it's a managed environment,
perhaps where there is an
administrator who can guide and
help users.
But that's a pretty niche case
for a pretty niche distribution
all of a sudden.
And so as you whittle it down,
you start to you start to
realize like we really have no
shot of convincing an arch user
to move off arch or a Fedora
user to switch to Ubuntu.
I mean, they may elect on their
own based on some of the
features we talk about, but I
think I just started realizing
there's almost no point to it
other than just for the
technical exploration, which I
enjoy and I think is worth it on
its own.
But it doesn't really seem to go
beyond that.
And and so I can't really fathom
a reality where a distribution
like Deepin or a distribution
like Endeavor OS really has a
shot of ever going beyond a few
hundred thousand users.
You know, Mini Mac over in the
IRC raises the question if if
we're not going to be, you know,
spreading the word, who will?
Yeah, I guess the question,
Brent, is what is their what is
their definition of success?
If it's perhaps to scratch
their own itch, then, you know,
check.
But if it's to attract a rich
community, then there needs to
be a way of spreading that
regularly.
Right.
And maybe there's a fatigue
there, fatigue for finding new
interesting stuff.
Yeah, I could definitely see
that.
And I think there's also the
question of relevancy, the
operating system as a whole.
If you were to just take the
base temperature of the
computing industry, the
importance of the desktop has
rescinded a bit and the
importance of the web browser
and the importance of mobile has
ascended quite a bit.
And I think you have to
consider that has to have some
sort of perceptive knock on
effect on the Linux desktop as
well.
It has to.
You could imply from that that,
well, if the desktop itself has
become less important, then the
operating system it runs has
become less important.
And then the distro has become
less important.
And it's really can I run
Firefox and Chrome?
And then there's the essential
question of what's the base aim
of the distro, Neil?
Like what what market is it
going after?
And to that, that seems like
that's where it appeals to each
individual user.
There's usually two different
aspects.
What is the novel aspect of the
distribution and what is what is
the goal of the distribution?
So, for example, if I take my
preferred distribution Fedora,
the novel part of Fedora is that
it's a community that attempts
to integrate all the software
and make it work together while
simultaneously working with the
upstream projects.
So like things fit together, but
not in a way where nobody else
benefits from it.
Now, then, you know, that's that
fits the novel and the aim
because it's both about bringing
the latest stuff in, which is
which is part of the aim of it to
support, you know, bringing the
latest stuff and making it
available to people.
And, you know, what is the novel
aspect of it is that instead of
just doing it on its own in its
own island, it, you know, it aims
to contribute and benefit the
larger Linux community.
Now, if you look at, let's say,
a pop OS, the system 76 pop OS
platform provides them an
opportunity to to experiment and
develop a more integrated
experience with the hardware and
software.
That doesn't necessarily imply
that it needs to be an Ubuntu
base or a Debian base or Fedora
base or an OpenSUSE base.
But having a platform in that
sense that they can ship with
their hardware allows them to
demonstrate in the best possible
light the possibility of using
their hardware.
I agree with your point to an
extent, except for I would argue
that the Ubuntu base was not only
a safe bet for system 76 and an
encouraging bet for their
existing customers at the point
in time had been using Ubuntu
that shipped with the laptops,
but it also was a signal to
enterprises and customers that
if your software works on
Ubuntu, it'll work on pop OS.
Just like Carl mentioned in the
interview, if you know, if
you're on any Ubuntu base, you
can use the system 76 updater.
That, I think, is a contributing
factor to its success.
But it is also an outlier here
because it is so highly coupled
with the OEM's overall ambitions
and goals that it clearly serves
a purpose in multiple respects.
It's a distribution appealing to
end users.
I have it running myself and I
think it's pretty good.
And it's obviously serving some
of their longer term goals.
So I think pop OS is kind of an
exception here.
Well, actually, it's not an
exception because PC maker,
boutique PC maker that actually
does this.
Tuxedo Computers has Tuxedo OS.
Yeah, but have you looked at
Tuxedo OS?
I think you can make this
argument with Manjaro.
I think Manjaro demonstrates it
was a niche distribution that now
actually has some significant
momentum and hardware deals.
So it's clearly possible.
Elementary OS has seen a similar
trajectory.
Without a combination of purpose,
which, you know, elementary OS is
demonstrating their Pantheon
desktop environment, trying to
show an integrated design centric
user experience, you know, that's
very tightly controlled.
And, you know, without that, with
that, you don't really have a lot
of value.
Deepin attempts to showcase the
Deepin desktop, and maybe they
actually do ship on hardware in
China.
We don't know because we don't
really go down that route.
Like the usual suspects for why a
distribution tends to exist and
has some staying power usually
has to conclude some kind of
purpose that is novel and
distinct, as well as some kind of
avenue in which it satisfies or
fulfills a particular market
demand.
Yeah, we were talking about this
like package managers, desktop
environments, installation,
thoughts to, you know, how you
treat the whole end user
experience.
When we talk about distros, those
all get lumped in together.
So, Brent, let me see if I've got
this right.
You have a distribution that
right. You have if it's serving
the right audience and if it's
built in the right philosophy,
using the right tools with the
distribution and then which
reflects itself in the way
packages are handled and
installed.
But then you also have the
support aspect of it, which I
think for a lot of us in this
conversation is trickier to
think of because we are often our
own support.
Being your own sport also means
finding the answers.
And so I know for my own
trajectory into the Linux world,
I've had to work hard at, you
know, typing into the keyboard,
into the search engine to find a
bunch of answers.
And it seems to me that, you
know, I'm not a crazy super user
like some of our wonderful
guests here, but I've, you know,
been around Linux for a long
time.
And so my ability to find
answers about the little tiny
things that go wrong on any
system has been a big decision
in my choice of which
distribution to run and my
hesitation to jump to some of
the lesser knowns.
And it's too bad that that's a
reality for me personally, and
it may be for many others.
But I, you know, I just want to
get work done most of the time.
Sometimes I play.
But that's a hesitation for me,
for sure.
I have to say, I mean, you know,
there are some resources that I
always go back to.
And it's often the best
resources I find are, and I'd
say in this order, Arch because
of the Arch Wiki, roll your
eyes, then Ubuntu because you
have the Ask Ubuntu community
and all of the related blogs
and then Fedora, which not only
has a big community, but also
has really good documentation.
But I think this is for us,
Wes.
And, you know, a couple
episodes ago, we had Wimpy on
and he got us thinking about
the younger generation like,
you know, my kids age and a
little bit older and a little
bit older than that that are
going to be coming over to
Linux and open source.
The next generation of Linux.
Yeah, yeah.
And you got to wonder what's
where are they going to land?
Yeah, you do have to think about
that, right?
And what makes sense in a world
where we're trying to, you
know, seduce them over to the
to the light side of things?
And I mean, it's not it's
probably not going to be a niche
distro, right?
It's going to be one of the big
ones or maybe not.
OK, how about this for a theory?
The niche distro pulls in the
technologically curious out on
the edges there, like if you
look at it as a sales funnel,
the niche distros are on the
edge of the funnel and then they
get people in because they look
flashy and do something new and
cool.
And then as people try them and
and they get more experience and
more practical, they move
inwards into the funnel.
And by the end, they're coming
out the other end running a
boon to that stuff.
I mean, you're right.
I think that works for the the
very curious or the the folks
who are willing to do more
troubleshooting on themselves.
But the advantage to just
starting with whatever the latest
amount to is, I mean, you've got
all the Stack Overflow answers,
right?
You can Google any random error
that you come up to when you're
trying to first try out this
strange new Linux thing.
And it's just an easier upload
path.
Yeah, and then you obviously see
some specializations getting a
lot of success.
I think that's a clear point.
Brent, you have some examples.
Yeah, what came to mind right
away was the Cali's and the
cubes who just kind of do one
thing and do it really well.
And maybe, you know, that's the
Unix philosophy coming in there.
But we also see some really
popular ones like Raspbian and
the likes that are just
targeting, you know, a small
selection of the problems to
solve. And they're seeing a lot
of success.
So maybe what we're going to see
moving forward is just a lot of
this sort of, you know, if you
want to play in this specific
playground, you know, is
Raspberry Pis and such, then
you have a distro of choice or
two or three, but expecting them
to be your daily driver.
I think we've pretty much sorted
those out for most people.
Cali is a great example.
That's for sure.
Well, I don't know really where
to go with this.
Other than now, I kind of feel
good about niche distros when I
thought of the whole funnel
thing, which kind of made me
feel better.
And I also have to say, just
look at Deepin20.
Yeah, you should.
You really I mean, it looks like
a lovely release.
And I don't want to come off too
harsh here in that I think that
some of the wonderfulness of
Linux is just this.
You know, you have all this free
and open source software that
you can experiment with.
And we have a rich ecosystem of
different contributors all
playing around with things.
And all right, you might not use
Deepin, but down the road, maybe
you use their desktop
environment on your favorite
distro of choice.
I'd also love to get the
audience's perspective on the
future of niche distributions and
this overall topic.
So go to linuxunplug.com slash
contact and drop us a line of
feedback and we'll cover it on a
future episode.
Nathan wrote in, I was listening
to episode 227.
OK, so this is this is 372 right
now.
OK, it was about the one which is
how I like to say it and system
D, which is how I like to say it.
He says, I just wanted to add my
two cents to it.
I'm not as strong as some are
against it.
But he says, I do not want it on
my system personally.
Not all alternative units are
dead, such as open RC, which is
the closest de facto replacement.
Personally, I use six, which is
fast and also maintain interesting.
But he goes on to say what I have
against system D is that it feels
like it intends to replace
everything in which now they have
replaced my home with it.
At this rate, it wouldn't surprise
me if it eventually replaces the
kernel in the future.
This may be a bit dramatic, but I
think you get my idea.
I just like simpler systems
myself. You know, I can certainly
appreciate that.
And that's one of the reasons I
might be drawn to an arch base
distro just to talk about our last
topic a little bit more there.
But really, Nathan, I just
appreciate that you're still you
know, you're listening.
You're giving us feedback, even if
you aren't exactly caught up.
Yeah, I agree with him.
And I also recognize the trouble
it causes.
So since that episode, I think I've
come to the conclusion that Dev
one is it's a good outlet for that
idea of a system.
And what I kind of think would
have been better is if that whole
shenanigans had just left the
Debian project with that.
And that's not a disparaging
remark. I just simply mean let
each project have its own clear
path.
There was a news item we were
debating coverage that is just
some silly technical arguments
going on once again in development
in Debian land around system D.
And it's it's like one of these
super simple maintainer versus
somebody submitting the patch
thing and maintainer has a hard
line position and a bunch of
other people would like this
thing to support both system D
and on system D systems.
And it's just turned into a kind
of a nasty debate that's now
making circulation on social
media and kind of painted
individuals in a bad light.
And it just comes down to this
core conflict around system D and
Debian.
Well, and the issues that, you
know, the trickiness of
managing the support when so
much of upstream has just
totally, you know, gone the
system D way.
And then to what extent are
downstreams obligated to
continue, you know, keeping
support for these other systems,
which to be clear, I think we
should support.
I mean, it's nice that we can
have that diversity folks that
want a simpler system or just
don't buy into the whole system
D mess.
I'm fine with it.
But if you're not, that's cool.
It's interesting to watch what
that means that like what what
buy in do you have from your
users? What is worth it from a
maintainers perspective in
ongoing maintenance to keep
making sure that that works,
especially if maybe at this
point none of the systems that
you actually have access to test
on are using any of those old
units?
Yeah.
And what should their burden be
probably worth addressing this
system D home folder stuff.
Carl, you've experimented a
little bit with it.
My understanding is you install
your distribution and it
immediately takes over your home
folder, removes all your data
and encrypts it with a password
that it doesn't share with you.
Is that is that how you
that is that how it works?
Of course.
Take over the world, right?
No, that's obviously you're
joking that doesn't work at all
like that home.
D is 100% optional and I really
don't get the consternation
about it in the community.
It's if you don't like it,
don't use it.
It's just it's a thing that's
there for you if you want it.
Yeah, absolutely.
And it's one of those things,
too, where you look at it and
you go, oh, yeah, OK, if we were
making an operating system today,
that's just absolutely how we
would do home directories.
So I mean, it makes total sense.
We've covered it in the show
before and why it's cool technology.
So you could always check
our back catalog, but yeah,
it's still early days, too.
There's a lot of integration to go
with PAM and SC Linux and other
things on various distros.
So it's a tool if you don't want
to use it, you can completely ignore
it.
Yeah, but I I do appreciate him
sending that feedback in and I
guess we're just still in this
phase and there are resources
out there for everybody.
It's a big Linux world.
Steve writes in about Emacs comp
speaking of a big world.
Yes, Emacs comp.
Have you heard about the recent
announcement for Emacs comp 2020?
It's a free two day online
Emacs conference scheduled
for the weekend of November
28th and 29th, 2020.
Those of us on the Pacific Coast
have to get up early to catch
the first few sessions, but
recording should be available
online. The conference is
currently asking for proposals
at Emacs comp dot org slash
2020.
That's amazing.
I mean, when you're finally over
nano, Chris, it might be just in
time to join and attend this
conference.
You know, one or two things is
going to happen.
I'm eventually going to win you
over somehow with nano or we're
all just going to be using VS
code on the command line.
Wait for it.
I think the latter is more
likely.
OK, so how did we end up with
this huge
mess of picks?
I'm looking at this like in two
ways, like we could save some of
these and we could just coast for
a while or we could like toss
out a whole batch of them, which
is kind of the one I'm starting
to lean towards just because we
have so many.
But I look at this list.
There's two obvious ones I think
we should do.
Yeah, OK.
I think I know which ones you
mean, but let's find out.
Oh, yeah.
OK, well, that's a clear clue.
That's right.
We got two rust picks.
Now, the first ones for you
server types is the cloud
hypervisor.
It's a rust virtual machine
manager based on Intel's open
source project, if I recall
correctly, called cloud
hypervisor.
And it's a tool written in rust
because, well, it's the language
of choice now.
Well, so I think this is kind of
interesting.
It's early days for the cloud
hypervisor project, but, you
know, we've talked a bit about
firecracker.
Google's got their own sorts of,
you know, tiny little virtual
machine monitors that are
implemented.
And those are really focused on
running these like super
lightweight, containery
workloads.
Right.
But cloud hypervisor is a little
more general.
It wants to handle more of your
day to day like, you know, you
want to run the regular Ubuntu
cloud image on this thing, but
you want to host it.
Cloud hypervisor might be the
virtual machine monitor for you.
And the point about rust is
mostly that, you know,
firecracker and some of the
Google work, they're all powered
by this rust VMM crate.
So it's a shared upstream
library that these are all based
on contributing to.
So it seems like rust is
becoming something of a good
place to do this kind of
development.
Yeah, it's KVM based.
So it checks that box.
They are going for minimal
emulation and lowest latency
possible, low complexity, small
attack surface.
Check, check, check.
Not only are they targeting the
x86 64 platform, but they're
also going for the arm 64
architecture as well with with
obvious functionality differences,
which they've documented.
And you're right.
It actually does look
legitimately like it could be a
great way to self host VMs.
You know, I was mentioning
Proxmox before, but, you know,
there could be a future where
it's something like that instead.
Now, on the other end of the
rust picks, we have song rec,
which is an open source Shazam
client for Linux, which, as you
guessed, is written in rust.
What's kind of notable about
this particular rust app is that
this is a GUI.
It does have it has a command
line version as well, but this
is a graphical desktop rust app
application. Is it like Python
rust? What is this?
Yeah, we were sort of debating
like how common is that?
Because most of the pics that
we've been finding these days.
Well, they're all neat, but
they're all command line apps.
Yeah, all right.
So there you go.
There's a couple now.
Here's a couple more that have
nothing to do with rust at all.
These are pretty cool that we've
been sitting on for a little bit.
So now crazy Chris is giving away
picks. It's more than two picks.
It's going to be probably four
picks. This is one I think is
probably going to improve your
quality of life.
Temp mail, TMP mail, a temporary
email right in your freaking
terminal, right?
I mean, the reason to use this
is obvious. What else do I need
to say? It's a command line
utility that allows you to create
temporary email address and
receive emails to a temporary
email address. It's using was it
one sec mail then their API, I
think.
Oh, they've got a few they've tied
in with proton mail with some of
the other popular sort of just
accounts that let you easily set
up a pseudo anonymous mailbox.
But you don't have to go log into
a, you know, use a set of
different guis on the web.
You've just got one command line
interface.
That's so cool. And really minimal
dependencies. W3M, curl, jq and
knock and you're you're off to the
temporary email races. And that's
pretty neat. All right, I'm looking
at the mix here, Wes. Do you want
to pick our final crazy giveaway?
Oh, more pigs. Let's do it. All
right. Well,
we have too many good options here.
How how to choose?
Well, how about for those self
hoster fans out there? What about
my pass? My PAAS or platform as a
service. It's basically a system to
enable you know, if you've used
something like Heroku, you've
already you're already running
things with Docker compose and
Docker tooling in your local
dev environment. And you want your
own self hosted cloud platform
that's as easy as Docker push. Well,
maybe give my pass a try. It's
powered by Docker traffic, another
one of our favorites. And it really
espouses its excellent analytics.
It's got some dashboards built in
for you so you can actually see
what the heck's going on on your
new platform. Yeah, it does. I love
these. This is really cool. So this
is one this is one I did not open
the tab to. And then I open it up as
you're talking about it. I love
it up as you're talking about it. And
I had not seen these the screenshot
with the all the stats and stuff.
I love this stuff. That's really
cool. So we basically gave people
two picks to just turn their
their network into like their own
AWS is really what we just did. You
know what? You're welcome,
everybody. How about that? So yeah,
this is just sitting on top of
Docker and traffic. It utilizes
let's encrypt to get your SSL TLS
certs and my pass, which I didn't
know really much about it, but looks
pretty cool. Nice pick. That was a
good one, Wes. That was absolutely
what I'm going to say. Right. Oh, if
you've got some you'd like to share
with the community, head over to
Linux unplugged dot com slash
contact or link me up on social
media. I'm at Chris last. What about
you, Wes? I'm at Westpain, our
sponsor, a cloud guru. You can find
them at a slash cloud guru at
YouTube, Twitter or Facebook. Go get
them on social media. The show is
at Linux unplugged. I don't think
it's Linux unplugged show. Some of
them are on the Twitter and then,
of course, the network. That one I
do know for sure at Jupiter signal
links to everything we talked about
today are Linux unplugged dot com
slash three seven two, including
links to our guests and all of that
good stuff. And for our members,
remember, you have special feeds,
limited ad and full live stream
feeds. And you also have that fedor
thirty three bugathon, which is
available as an exclusive download
to our core contributors. The
exclusive thanks to our members
and also thanks to everyone for
tuning this week's episode. Even
if you're not a member, we
sincerely appreciate you listening
or taking advantage of our sponsor
or sharing the show. It means a
lot to us and we never forget that
we talk about the live stream and
we talk about about the members.
But in our hearts, it's you
downloaders. See you next Tuesday.
So we have a complicated
hardware situation we have. We
have one machine that's doing
great, and that's the least
important machine. And then we
have the recording machine that
has bad blocks on the recording
hard drive. And it's also just
sort of shoddily put together. And
now after this weekend, the
Reaper machine seems to be in a
bad state. We had a power outage.
We lost one of our audio
interfaces, and Jack audio has
been wonky ever since that audio
interface died. The machine has
what I can only describe is like
these blink out sessions where
the entire system sort of locks
up in the screen flashes.
Initially, we thought it was
Gnome Shell. So we switched to
plasma and it went away for
about a year. And now it's back
in plasma and it just creates
such a headache. So I got two
machines right now that are in a
super bad shape and no money to
replace them. I'm trying to get
clever. I'm trying to think if
we were to. So this this Reaper
machine is also the machine we
used to do mumble. It's the
machine we do remote interviews
and hosts with and recordings.
How beefy are your individual
machines other than like the I
seven, you know, six core area,
but nothing. Nothing incredibly
powerful because we're not
doing video. How old are they?
Ah, that's that's the problem.
It's been probably I think we
built them in twenty sixteen,
twenty seventeen. All right. I've
just got one question for you,
Chris. Yeah. How many pies have
you ordered? Yeah, just just a
fleet of pies to replace the
West. It's going to take sixty
two pies by my math, but it'll
be totally worth it.
