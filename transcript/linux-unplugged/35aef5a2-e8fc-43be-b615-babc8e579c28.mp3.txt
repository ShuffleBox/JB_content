I was looking at the list of people that are coming
for Linux Fest Northwest.
It is gonna be a huge party.
Brent, you're gonna be here.
I'm super excited, Brent.
You oughta just stay here for a couple extra days,
hang out at the studio.
Yeah, so Chris.
What do you mean, what do you mean, what, what?
What's happening here?
What do you mean, um?
What do you mean, um?
I thought this was a lock.
Yeah, I remember saying, even on the show,
it's in one of the shows that I was not not coming.
I remember specifically saying.
Yeah, not coming.
That's a lock.
I'm in this precarious place now
where my very best photo client is,
has just reached out to me for the exact same dates
as Linux Fest Northwest.
So I'm in a real pickle.
So I may not be there for the festival itself,
but I might like fly from Ottawa
straight to the studio afterwards to see if I can maybe
just catch some of the great people
that are gonna be in town.
Some of the afterglow?
Well, what is it really about?
It's about the people.
That's true.
And Linux Fest is kind of the bonus,
so I'm gonna try to see if I can make that work.
I got an idea.
Okay, I got an idea for you, Brent.
You bring the client to Linux Fest.
They're gonna have a great time.
We'll make sure they get some barbecue.
So how did you know I was also thinking about that?
You're kind of into podcasting, right?
Good man.
So I'm gonna see what I can swing here.
Just give me a few days.
This is Linux Unplugged, episode 289 for February 19th, 2019.
Hello there and welcome into your weekly Linux talk show
that this week is taking a look at the community news
as it is deep diving finally into MX Linux
and saying goodbye to a real trooper of a project.
And then maybe, just maybe wrapping our heads
around that fedora switch to the new C groups.
My name is Chris and joining me every, every single week
is my man, Mr. Wes Payne.
Hello, Wes.
Hello.
Hello, Wes.
It's good to be with you again here in the studio
in a gray, cold Seattle day.
It's easier that way.
We don't have to be distracted.
We're not gonna go run out and play in the sunshine
because there isn't any.
That's true.
That's a good point, Wes.
Hey, what do you think about later on in the show today
talking about what it would take
to make the next big Linux distro?
Oh, you're getting ready to announce your distro finally.
That's right, Chris, last Linux.
No, I'm looking at clear Linux
and I'm looking at some other projects out there
and I'm thinking to myself in 2019,
how do you displace your Ubuntu's of the world?
How do you topple the fedora of the world?
How do you get up there in that upper echelon
of used distributions?
So I thought maybe you and I in the mumble room
could all talk about that in a little bit.
And then there's a, not one, not two,
let's count them right now here live on the show.
One, two, three, that's right, four outrageously good picks.
We may have to end the picks after this, Wes.
Just call it done, yeah, we've peaked.
How are we gonna do better than these picks?
These right here are the very best picks.
And then towards the end of the show,
it's time for us to admit our shame.
We have to look at our dirty, dirty home directories.
When's the last time you went into your home directory
and did a little LSLA?
Well, I did it today earlier before the show.
But before that it had been weeks
and boy, it's a mess in there.
It's like it's not even my own home directory.
It's like it's owned by all the programs on my computer
and not by me.
So in a way, I mean, you would never admit to this,
but you actually are bringing this particular soapbox
to the show.
I have a feeling I'll be the one stepping up on it,
but you brought the box.
You're welcome, buddy.
All right, before we go any further,
we absolutely have to bring in our virtual lug.
Time appropriate greetings, Mumble Room.
Hello, everyone.
Good evening.
Hello, hello, hello.
Hi, good to have you all here.
Thank you for joining us.
Are you both in the studio?
Yeah, yeah.
First time in ages.
I guess it actually has been a while.
It feels like a month or something?
Maybe.
I think the last time before this week I saw you
was it's gotta be last year.
That's true.
How did you know, Brett?
What was the tell?
What was the giveaway?
You both sound like you're in the same room.
Well, that could be interesting.
But also, I have to say, a little behind the scenes,
the bathroom break kind of gives it away.
We went to the bathroom together before the show.
It's true.
It's how we get on sync for the episode.
Yeah, that's how we get our flow going.
All right, well, let's try to dig ourselves
out of that particular hole.
And I wanted to start out with a new release
this week of a distribution that we haven't really
had an excuse to talk about much.
And that's MX Linux.
I've noticed more and more audience members
writing into the show about this particular distribution.
So that's probably what put it on my radar first.
But it's got a few things about it that appeal.
And I thought, you know what?
This new release they have, it's time to give it a go.
So MX 18.1 came out.
It's not a particularly huge release on their part.
It's mostly consisting of bug fixes and application updates
since the 18 release.
One thing of note is it does have that apt fix in there
we covered a few days ago, or a few episodes ago.
But here's what's neat about MX Linux.
And I'll tell you, I think I'm kind of falling
in love right off the top here.
So my bias is strong right now.
It's based off of Debian 9.8, which is a great release.
It's using XFCE as a desktop environment.
But it's a nice, clean, Unity rip-off style XFCE.
Yeah, I mean, I don't think you'd
be able to identify it unless you were a serious desktop
geek.
Yeah, I mean, looking at this right now,
you've got the sidebar launcher.
You've got icons there that are nice.
I've turned on the dark mode for the GTK theme.
It doesn't look anything like it.
It's XFCE, but not like I've ever used it.
Right, I think the biggest thing is you have the sidebar,
but there's no top or bottom bar.
So it's kind of a different feeling.
They've got a conky style background
where I've got my CPU usage and the clock on there.
And the other thing they do is they include a couple of cool
MX tools, like things that manage your boot environment,
or set up the NVIDIA driver, or install codecs.
And they also include a simple MX package installer.
They have a menu system that pops up,
and you go in there, and right in there,
they have the package installer selected.
And in here, they have a stable repo.
They have the MX test repo.
They have Debian backports.
And they have flat packs, all just right here.
And you can do a search in different categories
to see if they have the applications in those particular areas.
And I wanted to try out to see how easy it
would be to install Chrome.
It's a bit of a benchmark of mine.
Like, how quick do I get to Chrome on a desktop environment?
Kind of like a standard proprietary application
that you actually do need.
And in their popular applications category,
when you search for Chrome, it comes right up, right up,
and installs with Flash and all of that.
Really nice.
It reminds me a little bit, I mean,
this is going way, way, way back.
But if you remember the Drac tools in Mandrake,
or if you're familiar with Yast in OpenSUSE,
MX tools is similar to those, but cleaner, simpler, and more
efficient, and probably a little simpler design, too.
There's a few other things in here
that just bring up command line utilities, like quick system
info.
So I'm running it right here.
I decided to put it on my main studio system.
And I got to say, Wes, just using this thing,
I'm going to launch the file manager.
Watch how fast this sucker pops up, pow.
Oh, that was snappy.
No wasted time on boring graphical effects.
You don't even see the border of the window render.
It's just instantaneous.
It's instantaneous.
And of course, it's because we're talking Thunar here.
We're using Thunar, so it's a little lighter weight
and things like that.
But it's still great.
I mean, Thunar's kind of proven itself over the years.
You know what made me do this?
We had those issues recently.
So yesterday.
I thought you were going to say the little Joe
Resington in your ear.
Well, I think that might have made me really kind of,
all right, I'll try out XFCE, damn it.
It's just it's XFCE that doesn't look like a bastard.
That's the part.
I like XFCE, but I don't always like going through all the work
to style it, and theme it, and make it look modern.
It's a bit much.
Yeah.
But we ran into this weird, weird issue.
This is the only system in our studio that's running Neon.
All of our studio systems run Kubuntu 18.04,
with the exception of the presentation system, which
is actually captured by OBS and sent out on the stream.
For that, we like to showcase the latest Plasma,
the latest application releases.
It ends up being something of a test machine at times,
playing with stuff.
So this one was running Neon, Neon,
which has been pretty solid.
It's been running it for over a year.
However, I came back from Texas, got here in the studio,
and I thought, you know what, Self?
Let's do a system update.
It's been a while.
So responsible.
There's new packages to install.
Got to keep the system secure.
And I have two sides to me on this issue.
Part of me is like, don't ever change the systems.
Everything stays static.
Lock it down.
That's the old school mentality.
The least change possible, things won't break.
Yeah.
That would be a very predictable, reliable approach
to managing the studio system, but not the most secure.
But then there's that righteous side of me.
It's like, well, screw this.
If I can't update my operating system and keep it secure,
then it is a clown show.
And these things are connected to the internet, after all.
I literally said that to you yesterday.
You did say exactly those words.
And I mean, it's true, right?
We should be able to do, especially even with Neon,
on an LTS base, we should be able to do
simple security updates.
Yes.
Yes.
I mean, that's why I'm running an LTS.
Exactly.
So, and that's what Neon's based on.
However, I recognize that it is more of a showcase
of new plasma technology.
They certainly wouldn't suggest that you deploy it
in your podcasting studio.
But we had this crazy ass issue yesterday.
After all of the updates were done,
we had this problem where the EFI boot
managing software called EFI Manager Signed, I think it was.
Yeah.
I mean, it was the package that contained
like a bunch of the sign stuff and the shim to do UEFI.
And it wouldn't install.
It wouldn't finish setting up.
Right.
It would not fully get through all of the D package
configuring.
What did we ultimately do to solve that problem?
We booted into a live environment.
Yeah.
We did a little troubleshooting.
And then we just booted into a live environment,
partially, to see like, would it boot?
Yeah.
We suspected it was borked.
And it definitely was.
So I just want to make it clear.
My Ubuntu LTS system borked after I did a system
apt update, upgrade.
Normal way, yeah.
That's all I did is I did sudo apt update, sudo apt upgrade.
I didn't do a dist upgrade.
I just did a sudo apt upgrade.
And what broke wasn't a plasma package.
What broke was some of the low-level boot stuff.
Yeah, we were getting some strange errors about being out
of dist space, despite not actually appearing that way.
And it just wouldn't install.
Also, there was probably a kernel upgrade in there.
So obviously, some complications around trying
to get all the new, like the new kernel in InterRAMFS
linked up with the UEFI system.
End of the day, we had to go chroot into there,
uninstall all of the grub stuff, and do a reinstall.
For some reason, that worked.
Yeah, that did work.
Yeah, I mean, and I knew you and I together
would be able to solve that no problem.
I was not worried about it.
I knew we'd get it recovered.
In fact, I've never had an Ubuntu system that I have not
been able to recover yet.
That has not been an issue.
But there is that thing inside my brain that's like, well,
wait a minute, man.
You didn't do anything weird.
You just did an update and then a reboot,
and your system was completely hosed.
And that's sad with me, because this is my studio.
It sits with me.
So when an opportunity came around
to try something that was perhaps Debian-based,
and now I've learned also is using also a lot.
It's not really like when you go in here,
you're setting also settings, not pulse audio settings,
which could be better for us.
We have had some issues.
That's an angle that does appeal to me, especially simplicity.
The less moving parts, we don't need fancy features,
at least on these machines.
We just need a basic system.
Our laptops, maybe that's one thing, right?
But these systems here that are running 24-7 in the studio,
simplicity.
And MX Linux is super fast.
It's based on Debian, which I trust and know how to use.
And it has a bunch of these tools
that sort of fill in the rough edges that I think you could
look at them in two ways.
In some ways, it's a warning sign
that a distribution needs these tools.
You know, like in here is fixed GPG keys, fixed boot
environment.
Why do we need that?
But at the same time, I just had my boot environment break.
Yeah, right.
So it's not all the way on your own.
It's not arch or gen 2.
You're not left in the weeds, or even just like doing a manual
Debian install.
But I like their phrasing.
They call it a mid-weight distribution, which
you don't hear all the time.
So it's not all the way full featured,
but you have a few niceties.
Well, this is a combination of a couple of projects.
So you've got MIPS in here.
I mean, you remember MIPS Linux and not
MIPS, or not like the MIPS processor, but MIPS or M-E-P-I-S?
Yes.
So you've got a couple of different distros.
Right, and Anti-X too, right?
That's some of the folks from there.
Yes, exactly.
And I think it's a good example of a distribution that
plays well with others, because there's also
like a minimal version of sort of the same group
that people are working on a minimal version of Linux.
And this is a mid-level version of Linux.
And it's a good example of cross-community pollination.
And I think it's kind of what's leading to its success.
Their forms are very active.
You've got the overall support network of Debian.
Right.
Yeah, between the support and the availability of software,
that's huge.
Right, whereas like Ubuntu is ultimately based on Debian,
MX Linux is Debian.
It is a Debian install.
And there is a difference there.
And there is perhaps, perhaps, an end result
that I'll see differently in a simplification
here of our audio stack.
So we'll see.
I'm going to try it for a little while.
Yeah, that's what I was going to ask.
You're going to leave it on here.
Oh, yeah.
Oh, yeah, 100%.
Yeah, I thought I'd throw it on for the day.
And I was going to just have a laugh and call it good.
But damn, that just means Joe's going to be right.
Crap.
Well, I don't know.
I don't know.
That's fine, as long as we do it in our own way, you know.
Right, it's a pretty version of XFCE, right?
And we'll tweak it and stuff.
I'll install Jack on there later.
All right, thanks.
That makes me feel a lot better, Wes.
That makes me feel a little bit better.
Anyways, MX Linux 18.1, if you've
been looking for a new Linux that
is based on a tried and true distro like Debian,
give it a spin.
Give it a spin.
I don't think it's going to, you know,
we're going to ultimately later today,
we're going to talk about what makes the next big distro.
I don't think it's going to be that.
But I think for people like me, I
think it's filling a pretty good use case.
It's almost a nice thing, right?
You don't need it.
You're not looking for a project with huge, ambitious goals.
You want simple.
Yeah.
I really do just want something that just works, Wes.
I just want it to work.
I've never installed gnu slash Linux.
Who brought him in here?
Who brought that guy in here?
Well, we mentioned, you know, Linux.
Yeah, I guess so.
So you may notice, we're sitting around the show today.
And our buddies from Canonical are not here this week.
They're out doing not only, I guess,
what they call an engineering sprint, as it were,
but it's turned into a full-fledged multimedia
production.
So our friends over at Canonical have
been doing these SnapCraft summits for a while.
I went to one.
And it's pretty intense and pretty interesting
because there is a lot of pressure to get work done.
And then there's also a pressure to socialize, too.
You're seeing all these people you don't often get to see.
And you know, they're just a fun bunch.
But it kind of all happens behind closed doors.
It all kind of happens out of the view of the community.
And that's a bit of a shame because I
think there's takeaways from the people that
are involved outside of Canonical that
are there trying to solve their problems.
Like, I got a tremendous amount of insight
talking to some AWS engineers and the Plex packaging
individual at the last SnapCraft summit.
Like, it just opened my eyes to the scale of AWS, which
you always need a resetting.
When you're not intimately familiar with how
the scale of AWS, anytime you get an opportunity
to talk to an AWS engineer and appreciate the scale they're
dealing with, it's mind blowing.
You realize that the units you normally talk in
are way too small.
No, they're adorable is what they are.
They're adorable.
And then the issues that groups like Plex face trying
to package up the Plex server onto Netgear NASes
and onto every individual particular type of operating
system.
No, thank you.
It's crazy.
It's absolute craziness.
But that doesn't translate to a public understanding.
It doesn't really inform the rest of the Linux community
about what these people are trying to solve.
And that's where I think things could be beginning to change,
depending on how much the folks over at Canonical
are willing to share.
But famous internet leaker, Alan Pope,
is live streaming the SnapCraft Summits.
They're calling these a Bootstrap Summit.
Yeah, they say, we've run a few in-person SnapCraft Summits,
bringing together application developers and experts
from SnapCraft and Linux security
to help get software into the Snap store.
Often, it's paired programming.
And they build a Snap together, and that accelerates
the developer's knowledge and understanding.
Right?
It's great.
I mean, that makes a lot of sense,
especially if you're trying to, you know the application.
Someone on their side knows the packaging technology.
I think this would, if Flatpak could pull this off,
this would serve Flatpak really well.
But the goal of SnapCraft Live is
to bootstrap developers in building snaps
and publish them into the Snap store.
We will cover the tools and set up
required best practices and recommended processes.
We also have an opportunity to ask the experts who
sit in the live stream alongside the live session
and ask them questions.
So they will be live streaming some of these.
They've already done one, the kickoff episode.
They built a few simple snaps.
They had a few people sit around and answer some questions.
And they're going to be doing more of this.
There was a second episode on February 13th
where they did a complex application example.
And long term, I think this is a pretty savvy way
to get the word out on what is involved in packaging
software for Linux and what particularly
these universal packaging formats are solving.
Because you have people listening today
that still don't get it.
And I think this kind of thing is maybe, maybe
the move Canonical needs to make to better explain
the value that these bring.
It is interesting, right?
We're watching them try to grow this new ecosystem
of applications.
So it's a whole new marketplace.
Well, and from a business standpoint,
you've got Canonical spending considerable sums of money
flying all these people to Malta.
I mean, there's a big push on this in all kinds
of directions on their side.
So if they can reach more people through these live streams,
that would be a much, much more effective use of their time.
But as an audience, as a viewer, it
gives you an opportunity to get insight
into how software is built and made for Linux.
And I can't stress how informational that can be.
It changed my perspective on so many things
witnessing this firsthand.
And now you can do it via live streams.
It's not necessarily the same exact thing as being there.
But man, that's a heck of a lot better
than what it was before when it was just
all behind closed doors.
So hats off here to Popi for pulling that off.
And hopefully, it gets a little traction.
People go check this out, and it's
something they can keep doing.
Yeah, I hope so.
And more and more, especially, Popi will come on this show.
And by the end of the episode, he's
snapped up some new application.
If you watch this, you can probably
go decipher it and snap up applications
that you might want snapped.
That's true.
Yeah, last week, we covered that Solitaire on the command line.
And then by the before our show notes were done.
Yeah, before the notes were even finalized,
he had snapped up the Solitaire command line application.
Yeah, so go out there, go check out what they're doing,
and really get an insight into what it's
like to ship software for Linux.
And I say thank you to Popi for actually streaming that thing,
because having gone to those, I'd say they're super insightful.
And with a live chat room, you can always ask questions.
Live at Malta!
Now, the next story we have in the community news is a bit,
I don't know how you describe this one, Wes, it's like sad.
It's also extremely encouraging.
And it's a victory story for open source.
And it's an opportunity for a possible new direction.
But it starts with saying goodbye to the maintainer
of the Shorewall project, which is a really brilliant way
to set up IP tables, makes it super simple,
and easy for end users.
So on TechStamp, we were just talking about Firehole,
which is an alternative.
And by far and away, any time you bring that up,
the very first thing that gets said,
unless it's someone who's just trolling you and be like,
just learn IP tables, is go use Shorewall.
It is kind of dominant, unless you're already
doing Firewall D or UFW.
Yeah.
And it's been mentioned a few times on this show.
It doesn't quite get the attention that Firehole does,
or that maybe PSN does.
It's one of those earlier generations
of open source projects, because it has
been around for a long time.
But its website might not be flashy, but it works.
And it's also, it's got some of those core values
that you want from an edge application
like this, something that's just been around,
it's been reliable, steady, maintained.
Well, the Shorewall maintainer, his name is Tom.
Tom Estep.
Estep, yep.
And I did not know this until today.
He's based in Shoreline, Washington.
I drove past his residence, surely, on my way up here.
40 minutes from the studio.
Man, I'd love to buy that guy a beer.
Boy, Tom, if you happen to listen to Linux Unplugged Show,
reach out to me, chris at jupyterbroadcasting.com.
If you ever make it up to Linux Fest Northwest,
I swear to God, man, beer on me.
Or whatever your beverage of choice is.
Could be a glass of water.
We could be halfway.
We'll go to Muckle Tio.
We'll be fine.
I'd like to shake your hand.
So he writes, I'm now in my mid-70s
and have spent almost 50 years in tech-related industries.
More than three years ago, I retired from my position
at Helium Packard Enterprise.
And while I've continued to develop and support Shorewall,
I feel that it is now my time to say goodbye.
Shorewall 5.2.3 will be my last Shorewall release.
If you find problems with that release,
I will attempt to resolve them.
But I am now departing on an extended trip
to visit some, oh man, he won't make it to Linux Fest then.
He's departing on an extended trip
to visit some of the places in the world that I've always
dreamed of seeing.
That's a pretty good reason.
That is.
That is.
You've earned it.
No kidding.
50 years in IT.
And he's survived.
Can you imagine the change he has seen in 50 years?
And then towards the tip of that,
to be working on Linux and IP tables.
Wow.
Yeah, just doing Linux and IP tables for the past 10 years
has been a crazy amount of change, but then 50 years.
With 50 years of perspective, Linux
is still the new operating system.
Sure is, yeah.
That's just mind bending.
I would love to pick his brain about some of those changes.
Yes.
I don't know.
I don't know where this goes next.
The project is a healthy project.
I hope to see it get picked up.
He says, most of all, he ends with, most of all,
I want to thank all of you who have used Shorewall
and who have helped make it better over the years.
You are the ones that I will miss the most.
That's just really sweet.
It really is a great example of open source
and the huge amount of time and investment
that volunteers put into these projects.
And talk about, I mean, just talk about a classy way
to sign off.
Not a rage quit, not a burnout quit, but like, you know,
in my 70s.
Just enough personal information.
Yeah.
And I mean, he does make it clear, too,
that he's happy to help future maintainers.
Like, Shorewall doesn't need to die.
I don't think it will.
I don't think so either.
It's got so much momentum.
Especially if you've got Tom sticking around
willing to answer questions.
I think that makes a huge difference.
Even if he can only do it when he's somewhere
with connectivity as he travels the world.
Various Wi-Fi hotspots around the globe.
Oh, man.
If you use Shorewall, I don't think
you have much to worry about.
Plus, the underlying IP tables is not going anywhere.
It's not going anywhere anytime soon.
That's one of the great things about these.
You know, if you think about this, just as an aside,
in the commercial world, you'd probably
have some sort of custom-grown firewall solution
that is at end of life now.
If the company, if you've got a small business that
develops this product, this happens all the time
in enterprise, if you've got a small business that develops
the product and the guy decides he's going to close up shop,
that's it.
No more releases.
But with open source, you can look at that and go,
yeah, you know, we've got five Shorewall boxes in production,
but they're all using standard IP tables.
So we've got nothing to worry about here.
You can move tables, tools.
You can just save that state.
It doesn't matter.
I think that's pretty cool.
I mean, it just shows some of the wisdom, right?
Like, it doesn't matter if you're using Firehole
or Shorewall or UFW.
Because we have a common kernel interface,
we can use whatever tools we want.
Yep.
That's it.
That is it.
Thank you.
You put that much better than I was.
All right, well, let's talk about a big upgrade.
I've been playing a lot of Mario recently.
I've been playing a lot of Mario.
It's showing.
Yeah.
You're happier.
It's nice.
I am very pleased, too, with the new release of Geary.
Geary 0.13.0.
I thought I was never going to talk about Geary again.
Honestly, I thought the same way.
Not that I didn't want to talk about it.
It just hadn't been updated.
No.
No, and it was getting a little rough.
It was getting a little rough.
But it is under new maintainership now.
And version 0.13 is a major release,
featuring a number of new features,
including some brand new user interfaces for creating
and managing email accounts, integration
with GNOME Online accounts, which, by the way,
means if GNOME Online accounts is broken,
the Geary is also broken.
Side note.
Not that I would know.
Improving and displaying of conversations,
composing new emails, kind of a key feature, improved.
Interacting with other email apps has been improved.
Reporting problems has been improved.
And a number of important bug fixes,
server compatibility fixes, and security fixes.
And the latest version is available as a flat pack.
So you know what I did?
Gave it a go.
Now, I have got about three inboxes that I'll attach.
The inbox that has the least amount of unread messages
is around 4,000 unread messages.
There's about 30,000 read messages.
It's like an iceberg, yeah.
So I can really stress test these applications.
And I got to say, Wes, my order of op
was add my Google account to GNOME Online accounts.
So you're going system wide here, yeah.
Fedora 29, I added it to GNOME Online accounts.
Then I installed the Geary flat pack.
Launched Geary, immediately had all my stuff.
Immediately had everything.
All set up, ready to go.
That's like Apple level slick.
It was.
It was like you log into iCloud on the Mac,
and then you open up Mail, and it's just, I presume.
I actually don't think that actually works on the Mac.
Now, they talk about it, but it should.
It should work like that on the Mac.
But it does with Geary now.
And you know what's crazy about that, right?
I'm putting all of that.
I mean, it's not crazy, but it's great.
I'm putting all of that information
into the GNOME Online account system settings.
And a sandboxed flat pack application
still gets to go find all of that detail.
Right, and respects my dark mode theme, all that stuff.
We have come a long way.
Yeah.
It looks really good.
I sent you a screenshot.
You did.
That was beautiful.
So do you think it'll hang around?
Are you going to keep using it for a bit?
Absolutely.
Yeah.
Wow.
See, because that's a big change,
because I feel like just a month ago,
we were like, there are no desktop email clients to use.
I'm like, I got to buy an iPad to do email,
because I can't even Linux right now.
And we'll see, you know?
We'll see.
You have to wait a little while to find
what little tiny details are wrong.
But I can already tell you, some of the paper cuts
I used to have with the older version of Geary
have been taken care of.
So huge, huge improvement.
Version 13, 0.13 is out.
You can grab it as a flat pack.
And I recommend it.
If you look at the enhancements in this release,
it's literally every major aspect of the application.
Just a huge congratulations to them.
And then while we're talking about great open source
applications getting an update or an upgrade,
our favorite photo management application, well,
maybe one of the favorites, DigiCam 6.00 is released.
And now, Brett, I realized when you and I have talked before,
you're more of a dark table guy.
I was going to say it's our favorite,
but dark table might be our actual favorite, right?
Well, you know, you're including all of us.
For me, definitely dark table has done what I need it to.
But DigiCam does something a little bit different.
So it depends sort of which angle you're coming at.
And some people absolutely love it.
I've used it a lot for more personal side photo
kind of management.
And for that, it certainly works great.
And it's awesome to see the software keep evolving.
So definitely anyone who's looking
for that type of software should check it out.
So you do a breakdown of you have one photo management
application for your personal pictures.
And then for those listening that don't know,
Brent is a professional photographer
that uses Linux for his workflow.
And then you have a separate application
for your pro app, for your pro photo.
So one personal, one pro.
Is that true?
Is that what I just heard?
That is what I alluded to.
But actually what I meant for a bit more detail, what I mean
is that on the personal side of things,
I suggest DigiCam to a bunch of friends and family
to use because dark table is a bit more involved than what
they're looking for.
And DigiCam just kind of makes it easy in ways
that they don't need to sort of understand
what's going on in the back end.
That's really interesting because I'm
kind of curious about that since I mostly
use dark table myself.
I was here, I was like, where's the sweet spot
that DigiCam fits?
Yeah, it depends if like from what I know of you, Wes,
you are probably pretty organized
when it comes to your files.
But some people are just kind of willy nilly with their photos
all over the place.
Applications like DigiCam or the other one that's
passing my mind now, they do a really good job
of just kind of organizing all the photos for you.
Where I'm more of a folder-based organizer
when it comes to projects and stuff like that.
Same, yep.
Yeah, so if you're using your own methods
to sort all of your projects and photos and stuff like that,
then you really just need to point the software
at the folder that you want.
For some people, they just want to take a broad look
at all of their photos all at once
and then sort of dive in from there.
So for that approach, some of this other software
is just a different workflow, I think,
is a different way of looking at it.
I actually think that's a very, very useful differentiating
way of managing your photos that you just pointed out.
Because myself, I have two modes.
I have the ones that I've taken with my DSLR of my kids
at holiday events or something like that.
Something you planned a little more.
You brought the good camera.
Yes.
That's the ones where I put them in folders.
I organize them that way.
Maybe you can go through them and pick through stuff.
Yep.
I manually copy them off the SD card.
And then you've got the cell phone pictures,
which I just blast away at.
And I just want to slam all of those in an application
and just scrub through it from time to time.
And you may have taken one photo one day that you care about,
and then 20 the next day.
So the other application I was thinking about is Shotwell.
It does a good job of just amassing a bunch of photos
in a thumbnail style view and figures out all the date.
You can sort it by date, if you want, or by folder.
So it's just like, oh, I've got these 3,000 photos
from the last year in one folder from my phone
or something like that.
So those applications are great for that kind of thing.
But certainly, they're capable of a lot more than that, too.
And the other nice thing that's appealing for some of us
with DigiCam is that it's a Qt-based application.
So it looks really nice on the plasma desktop.
Well, then I'm just going to have to give it a dress.
Well, version 6.00 now includes support for video file
management.
So videos are essentially just as fully supported
as photos are.
And that's like, OK, Chris, that sounds kind of, well,
to be expected, right?
However, if you think about what they had to pull off,
it actually required, to put it quite simply as they write,
a huge factoring of source code to make this possible.
So you're telling me that videos aren't just
a bunch of moving pictures?
They say the challenge to deal with these videos
was to extract the metadata and then populate
the database in a way that is actually
relevant to the end user.
And they say they started this work in version 5.50,
so the last major release, using the Qt AV framework
to play video files in DigiCam.
Now, Qt AV, for those that don't know,
is just essentially a direct Qt way to get to FFmpeg.
So whatever FFmpeg can play, this
can play, which is really, really nice.
Then they had to build a video thumbnailer.
Yep, yep.
Obviously, right?
Absolutely.
But not something you think of.
And they wanted something, again,
that FFmpeg could help generate the thumbnail
so they could support as many wonky camera formats
as they could possibly support.
And they had to look at the different Qt APIs
to pull that off.
And they had to pick the right one to get that working.
The advanced search tool needs to be
able to search for the metadata in videos.
So they had to get that working.
They had to get that metadata extracted from the videos
into the database to make it searchable.
This is a really good reminder of just,
despite a lot of that metadata filling the same role,
regardless of container format, it's always different.
Yeah, there's always so many edge cases.
Like, there's a standard.
And then there's like six variants to the standard.
And then undocumented semi-official standard.
Right.
Yeah, so much so.
And there's other nice things in this, too.
They've improved their raw file decoding,
so for even more camera support.
Yeah, that's big.
Yeah.
And they've simplified authenticating
with remote web services using OAuth, which I think is cool.
Yeah, that's a good call.
So anyways, it looks like a really solid digicam release.
And I really appreciate that breakdown that Brent did,
because I feel like it actually made me feel a little bit less
like a madman.
Because I felt like I had this sort of bipolar way
to manage my photos.
And it's really just the ones that I've
put a lot of intention into and a lot of thinking behind,
and then the ones that I just blast on my camera.
And that actually might, maybe the solution there for me
is just two different applications.
And I don't know why I never thought of that before,
but it just seems so obvious.
So thank you, Brent.
There you go, community service for you.
Very, very nice, sir.
Thank you very much for that.
Hey, you're in studio.
You got the real bell beside you.
Come on.
Analog bell.
You're right.
Is there a real bell?
What you have to remember is there is no bell.
There is no bell.
Just like there is no system when you're in a C group,
Fedora 31 is planning to use C group's version 2 by default.
All right, I got to come clean here.
Didn't really realize there was a version 1 or version 2,
and didn't realize that distributions
may be considering moving to a new version of this C group
thing.
So maybe if anybody else feels this way,
could you just explain to me what
the difference between a version 1 C group and a version 2 C
group is?
And are there going to be version 3 and 4s?
Actually, and maybe explain what a C group is.
Maybe.
OK, that's a lot there.
But quick lightning refresher, C groups
are part of the magic in the kernel that makes what
we call containers possible.
They're also known as control groups.
What's the difference between a C group and a namespace?
Well, I mean, they basically do different things.
So a namespace sets up basically what you can see.
So you might have a mount namespace showing you
the mounts that you as a process have access to.
And a control group is for controlling access
to resources and limiting those.
So if you want to make sure that your container can only
use x amount of memory, well, you put it in a C group.
So I kind of think of namespaces a little bit
as almost like a VLAN, but that's probably
a bad explanation.
But you can namespace an application
so it exists in this namespace.
Now, a C group, can I use a C group
to control what that namespace can get access
to on the host system?
No, you really do it at the process level.
Oh, really?
Yeah.
And you can go poke at it.
They're both tree structured.
So basically, you'll see in V1, you
had separate trees for different things.
So you have under the CPU C group or the memory C group.
And then you could go add things in there.
C2 is changing to a unified hierarchy.
Version 1 has been around for a while, which is, you know,
we started back in like 2006 at Google.
And so there's just been some growing pains.
It was the first time the kernel was really
experimenting with adding these kinds of in kernel controls
so that you could actually do that.
And like some of the benefits, right,
one of the big ones for memory, you
can have separate out of memory killers.
So you can make sure that even if your Java application goes
crazy, the kernel will never accidentally shoot SSH
by mistake.
So those are some handy features.
But unfortunately, especially because it
had different hierarchies, it meant
you kind of had to keep a lot in your head
as you're like, OK, well, I want to control these six
different things about my processes.
Then I've got to go add them to these separate trees.
Now, it's a lot simpler.
It's more of what they call a purpose-driven design.
So you can make one C group under the new hierarchy
and then add different controllers to it,
depending on what you actually want to control.
OK, so I can add a controller.
What's a controller?
So that's the thing that lets you control CPU or memory.
So is it like a group of resources?
Somewhat.
You can go find all the links to the nitty-gritty details.
The funny part about this, and we're even talking about it
at all, is you as a user, unless you're
doing a lot of container stuff or you're into this stuff,
you're not going to see it.
But what I thought was interesting,
it's another example of Fedora pushing things.
Because C groups v2 is considered
stable-ish in the future from the kernel perspective
in like 2016.
And have we talked about it at all since then?
No, probably not.
You didn't even know.
No.
And that's because no one's really shipping it.
You can enable it, right?
The kernel has it.
So you're telling me we've had version 2 since 2016
and everybody's shipping version 1?
Yeah, pretty much.
And then also, also all the applications
that are going to take advantage of these new kernel features,
well, they can only really count on version 1 being out there.
So a lot of them don't support version 2,
which means then distros don't have a lot of reason
to support version 2 either.
Well, yeah, OK.
Fedora's breaking that cycle.
It sounds like, or at least they're
considering doing that in Fedora 31.
So whether or not you'll actually care,
it might make some of the things.
There are some new features and nice design improvements here.
So systemd will take advantage of those.
Docker will take advantage of those.
In what way does systemd take advantage of those?
Oh, I mean, systemd uses cgroups all over the place
to go constrain stuff.
If you ever look at all those slices on your system
under the hood, it's using cgroups
so that you can keep track of stuff.
That's another way.
Remember those old init scripts where you double forked
your daemon and then it could escape from itself?
That doesn't happen anymore because you're not just trying
to track child processes.
They're contained in a cgroup.
So you might not actually directly notice anything,
but I think it adds to the story of doing
the small little improvements.
We needed to do this, right?
The kernel has done it.
At some point, version one is going to disappear,
but the kernel community hasn't forced user space to change.
So it's nice to see someone doing it.
Yeah, it is nice to see.
At least if nobody else steps up and moves the ball forward,
it's nice to see Fedora do it because there's a potential.
It could eventually end up shipping that way in RHEL.
Yeah, right, down the road once everything's stabilized.
And, you know, surely cgroups v2 isn't perfect.
There'll probably be future changes to the kernel.
Who knows?
But we won't know what changes are needed
until people are really using it.
Yeah, exactly.
Let's go to the virtual lug there.
Neil, I bet you have thoughts on this one.
So the main thing here to consider about the cgroups thing
is that for many years Fedora has been running
in cgroups configured in hybrid mode
through systemd as a controller.
So hybrid mode allows us to offer a unified hierarchy
which provides some aspects of cgroups v2
along with cgroups v1 compatibility
for basically most of the world
which only supports cgroups v1.
So the idea going forward is that
we will switch off the unified hybrid mode
and move fully to the pure cgroups v2 mode.
This means applications will finally be forced to adapt
and actually start working
from the new cgroups v2 controller.
And to be fair, one of the reasons
why it's been taking so long for cgroups to get good
and also to be adopted by things
and also for switching from v1 to v2
is because primarily systemd is the driver
for a lot of the cgroups development.
That's a lot of good context.
Thank you, Neil, I appreciate that.
So this begins to roll out in Fedora 31
which we will see using cgroups version two by default
and we still have 30 to get through.
So it's not like it's gonna like smack us in the face here.
We have, there is time
and I think it's good to get that ball rolling.
And to be fair, at least me personally,
as Chris, you already know this
and some of the rest of the world here may not know
but I am the snapd maintainer in Fedora.
So I maintain the snappy integration and stuff like that.
Snapd is going to currently be broken with cgroups v2
because we leverage cgroups v1 exclusively.
The hybrid mode is what allows us to work
even when we access some aspects of cgroups v2
and now because Fedora 31
is now planning to move to cgroups v2,
we're finally going to start.
Snapd upstream is starting to look at the,
at moving snapd to be able to support cgroups v2.
It's an issue we've known for a little bit over,
well, I wanna say two years now
because the bug was first filed
by one of the system d maintainers
who was doing the first explorations two years ago.
So we've known about the issue.
It's just a matter of like figuring out what we need to do.
And over the last couple of years,
cgroups v2 has filled out more
so that functionality that we require is now available
for us to use in some form.
Maybe not exactly the same way
but we have a means of getting to where we need to go.
I imagine it'll be the same for Flatpak
and many other things
that also in some way leverage cgroups.
That is good to know.
Like as the time has been spent,
it seems like at least on the surface,
it's been in somewhat of preparation for this.
It is also interesting that like
you said roll up pretty quickly.
All right, well, as a result of this,
well, snap stuff is fixed.
Well, that makes it a lot easier for Ubuntu
to start enabling these things.
That's true, that's true.
Mr. Payne, would you go ahead
and hit the seatbelt sign there?
We have a little housekeeping to attend to here on the show.
And I just wanna say meetup.com slash Jupiter Broadcasting.
I never in the history,
in the many, many, many year history of this network,
have we had three simultaneous meetups going at once.
I feel like we've hit a new milestone here.
Don't a big.
We are going big.
So the first one coming up is on March 5th, Tuesday.
It'll be following immediately after Linux unplugged.
We are doing the Linux operating system
fundamentals study group.
The training architect Kenny and Elle
will be joining us to go over
some of the fundamentals of Linux.
This is a course that I have recently released for free
to community members of Linux Academy.
People hate it when I talk about this, but it's not an ad.
This is just part of my day job
that I don't normally talk about here on the air
is working with Elle have released about 22, 23, 24
24 content courses from like lab.
I say content course because it's like labs, it's quizzes,
it's all kinds of stuff and video and audio and all that.
You're just on that content free mission, aren't you?
I have been.
Sneaky soldier you.
And I think my favorite one is,
the student's favorite one I think maybe
is subnetting fundamentals.
Oh, that's a good one.
Yeah.
My favorite one is the Linux operating system fundamentals
because it Kenny goes, if you take the whole course,
which is available for free,
Kenny goes from the world before Linux existed
and the conditions that made it ripe for Linux,
then the launch of Linux, the introduction of GNU.
And now like he goes from all of that to like the cloud
in one course, it's about like an hour and 45 minutes.
Now what's great is we're gonna do that
in a condensed interactive version on March 5th,
immediately following Linux unplug.
We're just gonna keep the mumble room rolling
and Kenny's gonna join us
and we're just gonna go over that.
We're gonna do a study group on the fundamentals of Linux,
like the very basics.
So if you have been using Linux for over a decade
or if you've just found Linux
and want some of the gaps filled in,
you want some of the history,
you wanna interact with somebody
who intimately knows that stuff.
It's like a classroom unplugged.
That's what these study groups are.
Meetup.com slash Jupiter Broadcasting.
And then the other couple of things that we have going,
which is only applicable to those of you in the States,
but it's pretty exciting.
We are, I don't know if I can,
I'm gonna say it, I'll say it, I'll say it.
We are doing two different meetups and I'm pretty sure,
I'm pretty sure that Mr. Popey is officially going to scale.
Wow.
So Popey, I think, I'm pretty sure he's gonna be at scale.
I'm pretty sure he's like logged in.
Well I'm just gonna hold him to it already.
So there, it's done.
Yeah, so we're doing a JB dinner meetup.
I'll be there, Wes will be there,
Elle will be there and all of you,
if you're going to scale, go to meetup.com slash
Jupiter Broadcasting and come hang out with us.
Thank you to Maddie for setting that up, aka Geek Dad.
And then, last but absolutely not least,
I will be driving my home to the beautiful
Bellingham, Washington, parking it in the parking lot
of the Bellingham Technical College and cooking for you.
Along with the great folks over at System 76,
who will be providing meats and other things.
I just say things, so I don't wanna put anything
on the record, but you know what I'm saying, Wes.
You know what I'm saying.
Supplies for a wonderful evening.
That's right, that's right, that's a good way to put it.
And Levi's gonna be there, you're gonna be there.
Yeah, that's right.
The whole JB crew will be there at Linux Fest Northwest
and we are going to do a Lady Joob's barbecue
in the parking lot.
I'm hungry already.
It's gonna be so good.
It's, people are flying in literally
from all over the world for this.
Isn't that something?
It's blowing my mind already.
It is really cool.
And you're gonna be giving a talk at Linux Fest.
Looks like two.
Really? Yeah.
Oh, what are they?
I mean, I know one of them.
Yeah, well, one's like a nerdy dev talk
where we're gonna go from basics and explore
the Lambda calculus and why you might care.
So that one's a little bit nerdier.
And then the other one is gonna be a review
and a basic intro to Linux audio production.
Did you think, I mean, looking back like a year ago,
did you think you would have this level of understanding
like you do now?
No, I did not.
And it's changing every day.
So yeah, Wes has really done a deep dive into Jack
and Pulse, but also editing under Reaper.
Like you're really getting some good experience.
So it's a good time to give a talk on that.
Yeah, you know, it should be a lot of fun
and lots to learn.
Yeah, so meetup.com slash Jupiter broadcasting
for that information.
That's really kind of what we had
in the housekeeping section of the show.
We're just really excited because
I think Linux Fest is gonna be,
it's gonna be really great, not even just for us,
but it's their 20th anniversary.
And that's kind of special.
Yeah, even if you didn't have like all the great people
that we're bringing in, it's just a good time.
Mm-hmm, mm-hmm, yeah.
We'd love to have you there.
Yeah, I know it's not feasible for most of you
because tens of thousands,
and there's many, many more than tens of thousands
of you that listen to this show
and only a couple hundred of you are gonna make it,
but yeah, it's just a lot of fun.
And if you can't make it to that,
consider doing a smaller micro version of that.
Microdose our virtual lug.
Think about that for a second.
You can't get the full Linux Fest Northwest
or the scale experience.
Well, come Microdose over here at Linux Unplugged.
We have a virtual lug.
We interact with these folks all the time.
You just have to pass an audio check from time to time.
I mean, today we didn't even have any mods
because they're all having lives today.
So you just got on air today.
You showed up.
Again, it's unplugged.
Yeah.
And we love having you.
We just, we really do,
and we think it makes for a great community experience.
And it does give you a small version
of what you get in person at Linux Fest Northwest.
Yeah, you get to tell us
when we've just got something horribly wrong.
Yeah, but I mean like Brent,
he wouldn't be kind of trying to figure out
all these crazy ways to like appease his client
and make it to Linux Fest
unless there was some real value there.
I don't want to put you on the spot.
Or it might just be that he hates his house
because he's never been there.
Yeah.
It's the best way to travel.
Have a really terrible home.
That's for sure.
Or just don't have one.
That's been my approach.
Right.
I mean, I don't want to put you on the spot, Brent,
but like what, how do you put a value on,
I'm trying to convince people to come out
and hang out with some Linux users
and talk Linux stuff,
but I don't know how to explain why that's valuable.
It seems like it's a preposterous idea.
Like what kind of money are we?
Who would spend thousands of dollars
to just go talk about Linux?
I could jump in an IRC room and do it for free.
Well, I think it's the intangibles really
that you kind of hit on.
There's something about being face-to-face
with the people in the community that is priceless.
Let's say that, that works well for me personally.
And I think this might be true
for a lot of the community out there.
Last year was my first Linux Fest of any kind.
I had never been to any Linux conference at all before that.
And I just happened to be in the area
when Linux Fest Northwest was happening last year.
And I thought, okay,
I'm going to make a little effort here to try to go.
And for me, that really kick-started my ability
to be a part of the Linux community.
I had been listening to the JB shows for years and years,
but now, I mean, you guys can totally see that.
I was able to put faces to the people
that I hear on the podcasts every week.
And we've developed friendships
with all sorts of people in the community.
And so for me, as a creative,
I didn't quite know how I could help the Linux community
by giving back.
And then once I was at Linux Fest,
it became really clear that my participating in any way
was really helpful.
So I encourage anybody to go to any Linux Fest
or any Linux conference anywhere just to make connections.
And it turns something virtual that we connect online,
but it turns something virtual
into something really tangible and that's super priceless.
It sounds cliche to say,
but we are wired for in-person.
Like you and I have been doing a show together in Mutt.
This feels great doing a show together.
It does, yeah, it's a lot of fun.
It's great because we're in-person.
Like we've developed like a whole way of communicating
that is visual.
It's body cues, it's language.
It's all of that that when you're not in person,
you don't get that.
And it seems so obvious and everybody knows that.
The text conversations don't necessarily have
the same context that in-person conversations have.
I'm not telling you anything you don't know.
You know that.
And yet I'm here to tell you,
I am the biggest recluse.
I honestly would be happy not seeing another human being
for weeks at a time.
I could stay in my room for weeks at a time.
A real homebody.
I am, I don't need it.
Don't need it.
Don't need it.
And yet I'm the one sitting here telling you,
come to these things, it's worth it.
And it is really hard to imagine
what you're missing out, right?
It's like, well, some conferences are not great.
Some are average, not this one.
You, my friend, are a bit of a community success story
in yourself.
Yeah, that's right.
You just decided to come to one of our barbecues
that we had.
For this very show.
And, I mean, how many years ago was that?
Four?
Yeah, I think so.
Wow, that's great.
Four years ago.
That's crazy.
And now you're a full-time employee,
you're doing this as a job,
and we've been doing this show for years together.
Because you showed up to a barbecue.
Totally.
Right?
I just happened to see you having a party at the studio.
Yeah, had you gone to Linux Fest in the past before that?
I had, but that was before I even knew
about Jupiter broadcasting.
Wow.
Who are those jerks over there hogging all the floor
doing a broadcast?
Who's making all that noise?
Yeah.
Yeah, I just, I don't know.
I mean, maybe it changes your life, maybe it doesn't.
But, I mean, you just heard two stories from Brent
and from Wes, and actually three from me too.
If you can make it, it's worth it.
And there's two different events going on,
Scale and Linux Fest Northwest.
And we'll be there.
And I'd love to be part of that story.
So come see us.
Meetup.com slash Jupiter Broadcasting.
All right, hit that sign again.
We got something I want to talk about here.
It's been on my mind for about a good solid year and a half,
and I haven't thought of a way yet to address it.
However, you and I hashed it out earlier today,
and I think we've come to a way to talk about this
that isn't a big downer.
It isn't super depressing.
And the big question that I want to ask the class today,
and I have a way for us to think about this,
so we're gonna frame this a little bit,
but the question that I want to ask the class today is,
how can there ever again be a big distro?
Like an Ubuntu scale distro?
Are we thinking about numbers here,
or does brand count as well?
I actually think both are pretty important metric.
I think both are pretty important.
Because that's kind of what you're asking, right?
Like when do you get another distro
that pushes its way into the marketplace
and becomes one of the distros?
Right, right.
Okay, so a couple of distros come to mind
as pretty big distros.
I think in terms of end user desktop usage,
it's Ubuntu is the undisputed champion.
In mindshare, you've got Fedora, and you've got OpenSUSE,
you've got elementary, which is based on Ubuntu,
you've got a lot of those distros, like Debian,
and you know what tier I'm talking about, that tier.
What else do you see in the enterprise space?
You've got Debian, of course,
and there are Ubuntu's in there for sure,
but what else?
RHEL?
RHEL, yeah.
Well, there's a little guy known as ClearLinux then.
You see that sometimes?
Yeah, you do.
You see container sorts of Linux?
So all of these kind of have a common thread, don't they?
A corporate backer.
Yes, they do.
They all have a big corporate backer
that has a enterprise strategy.
Support contracts, what have you.
Now, the one that you say there, though,
that's maybe not as well known, ClearLinux.
I think that's a great use case.
So let's take a look at ClearLinux.
They just published a video, which is all audio,
so I don't really know why it's a video,
other than the sound effects are pretty good,
but they've published a video
that kind of tries to make the case for ClearLinux.
So let's play this,
and then let's talk about if ClearLinux has a shot,
because A, corporate backer.
There's a clear strategy.
They're optimized for certain types of workloads.
They have clearly,
ha, ha, ha, ha, ha.
Clearly they have a couple of competitive edges,
and they have those intel pockets.
Every application you have runs on an operating system
made up of several parts.
So when you update one part,
it may throw things off balance,
still leave security threats open,
and maybe flat out cause the app to not work.
This means that your team spends time and resources
manually fixing the issue, or you reject the update.
That means stability,
but you may lose out on improved performance in the update.
Whether breach, crash, or latency,
not keeping your OS up to date can have real consequences.
You need ClearLinux, an OS that's secure, performant,
manageable, and customizable.
By scanning for vulnerabilities
and automating the latest security updates,
ClearLinux delivers an environment
designed to minimize breaches without causing slowdowns.
Automated testing checks OS components
for dependency issues.
Since ClearLinux is built
with the end user application in mind,
it ensures that performance optimizations
are done at every layer of the stack,
so that when it comes to end user application performance,
you get the very best without having to worry about it.
Where other distros have updates the size of the entire OS,
ClearLinux software packages
contain only the changed portion, leading to faster updates.
ClearLinux is also easily customizable,
so you can build a custom component,
then use the mixer tool to combine it
with the rest of the OS without recompiling it all.
And finally, having a file structure
that is separated into distinct layers
makes ClearLinux easier to manage.
With performance, security, customization, and manageability,
the ClearLinux OS will be a reliable, stable pillar
for whatever apps you run on it.
Learn more at clearlinux.org.
I've never installed GNU slash Linux.
I mean, that's pretty compelling, right?
I mean, see what those Intel dollars get you there.
Yeah, marketing budget.
Ha ha ha ha ha ha ha ha ha ha ha ha ha ha.
Yeah, that was great.
It sounds really corporate to me though,
in a way that I'm not used to with Linux.
Yeah, oh, you know, you're right.
It is very corporate Linux, isn't it?
It's a product almost, is what it feels like.
It is, yeah.
The ClearLinux thing is kind of funny
because Intel is the steward
of three different Linux distributions
that they back for specific purposes
and have been over the course of the, what, last 15 years,
five or so of them.
So it's weird that ClearLinux now
is suddenly special enough to be considered something
that might be viable when the four of it
that preceded it haven't been,
even though they put the same kind of effort.
So let me put this out there to you then.
So what does it take to make a Linux distribution big?
Because I feel like talking like this,
positioning like this, trying to clearly address a market,
maybe it's containers or servers or Intel-based systems,
like they're clearly addressing a particular market.
They're coming at it with a very measured,
very focused message,
and it's backed by Intel with plenty of billions.
Isn't that what it takes to make
the next successful major Linux distribution?
Mr. Payne, what do you think?
Does ClearLinux have a chance here?
Or are we just locked in?
Like the big Linux players are the big Linux players
and so it will remain forever.
It's a tricky thing to nail down
because it really is, it's a mindshare thing.
It's almost a feeling, right?
It's how you think about it.
It's how people model that distribution in their mind.
And sometimes things start slowly
and build more momentum than you really can appreciate.
And so Clear feels like it's on the cusp.
I don't know how far it's gonna go,
but like when we first started talking about Clear,
which was ages ago,
there were some nice benchmarks out at Ferronix,
but other than that, it was like, yeah, okay,
well, really, what are you bringing?
I kind of still feel that way,
but after we played with it in a bit,
it was a pretty usable system.
Now that's not enough to unseat,
but with time and mindshare, maybe it is.
But I don't know, it does feel pretty locked in
and without some big corporate vendor
deciding that they really wanna play in that space,
which does seem to be what Intel keeps wanting to do.
I don't see it happening anytime soon.
I'll tell you what my insights have given me
at Linux Academy is that there is so much momentum
in the industry around certifications
and qualifications for a job
that it takes certain things reach a point in the industry
and then they become like a benchmark
in which you are measured by.
So like a Red Hat certification or a Docker certification
is extremely valuable when you're trying to get a job.
And so it sort of creates a cycle
where people go to get that training,
they go to get that certification
so they can get those jobs.
So then those jobs are looking
for those particular qualifications.
Right, yeah, you've built that.
And it kind of gets locked in in a way.
The other part too is,
so we're talking about Linux,
but which aspects are we talking about?
Because it's like Alpine is a distribution
that's gotten way more popular.
It's not gonna be the next big Linux,
but we talk about it way more than we used to,
thanks to containers mostly.
I don't know that I see someone like,
is there gonna be a next big desktop Linux?
Or is that Chrome OS?
That was the other thing I was gonna say.
Yeah, is that Chrome OS?
Now on the server, all right,
well, like Amazon Linux,
if you wanna consider that separate or a derivative,
it's kind of unclear at this point.
That doesn't see much use outside of it, but you can.
You've got their virtual desktops as well.
So I could see like stuff on the server happening.
You're right that there are certifications and stuff,
but enough of that now,
I think also ends up being like,
you can still get certified on AWS
and switch out distributions and figure it out, right?
True, yeah.
Yeah, that's interesting.
And if you end up just using
a bunch of configuration management scripts,
then maybe you're not the person who has to know all that.
What you're really kind of saying at the meta level there
is the version of Linux
and the details about the Linux that you use
on the different cloud providers
just simply becomes an implementation detail.
Yeah, I mean, it might matter,
but it only matters to the extent that your tools
are built to use them and take advantage
of whatever features they might have that you need.
Wow, I'm just sitting with that for a second.
I mean, the idea that like,
it doesn't really matter if I'm using Ubuntu or Red Hat,
what really matters is that the cloud scripts that I'm using
or the service provider that I'm using
has the right tools or the right integration.
I don't like the way that feels when I sit with that.
I mean, you are completely right.
It's kind of a success story consequence, right?
Or it's just ubiquitous.
Like Android.
Yeah, it is, mm-hmm.
Wow, geez, you're right.
And then, yeah, and I think you're right too.
Pair that with like Chrome OS is probably the next big desktop.
It is the same thing.
End users could care less that it's based on Gen2
or that when you run a Linux application
that's running some kind of crazy Debian environment
on top of a Gen2 box, like, they don't care.
They just want to use it.
They just want to get their sound working,
which is happening too.
I have Google Drive docs to edit, man, come on.
The key here is partnerships.
Everyone has kind of missed the point.
The Intel thing is only as interesting
as when the first agreements come in
for saying like, this will be happening with this
and this is our recommended solution.
The way SUSE made Enterprise Linux
become a success story in itself
when they pioneered the business model
was that they partnered with companies
to support exotic hardware platforms, exotic designs,
and they started working with doing direct engineering
of migrating systems from legacy Unices
that we don't know about anymore to Linux-based platforms.
And when Red Hat took that model,
they just went and ran with it.
They built on top of it all kinds of other things.
And of course, between the two of them,
they developed a certification programs.
They built life cycles and management
and tooling and infrastructure.
And like when you build all these things together,
you start building an ecosystem.
And the thing that everybody gets wrong,
be it server, desktop, containers, or whatever,
is that you can't be an island.
You have to be an ecosystem.
If you're not developing an ecosystem
or if you're not thinking from the point of view
of making it so people can easily adopt your platform,
your technologies, or become a part of it or a partnership
and or help people pull away from one ecosystem
to pull into the other,
because the friction is relatively low,
but there's this perception that it's really high.
As you can easily move from an Ubuntu system
to a Fedora system, to a CentOS system,
to a SLES system, to an open SUSE system.
And it doesn't really matter all that much
when it comes to like,
oh, your graphical applications are all kind of the same.
The libraries are all there.
You can compile stuff, things like that.
But it matters when you're trying to figure out
what the hell you can use it with.
And if you've got partnerships that say,
okay, these 3D printers,
Red Hat through some of their enthusiastic employees
come together, they build a group,
but they start talking to 3D printers vendors
and they get the drivers written.
And then they put them into the upstream kernel
and then they bring them into Fedora first.
And they talk about it as a Fedora feature.
Then that means that Fedora has an avenue
in which building another arm to their ecosystem.
And then that eventually propagates into RHEL
where the industrial people start taking advantage of it
and building a platform in which they can do commercial
or industrial grade stuff built
on top of 3D printing technologies.
And so like it kind of feeds into this cycle.
And that's just an avenue where volunteer ship
evolves into something that's valuable for the business.
It could easily go the other way too.
It doesn't really matter.
The point is that there's gotta be this connection
between among multiple parties to make it work.
And this is why desktop Linux has never been successful.
Everyone tries to do it as a goddamn island.
There it is.
I was waiting for it.
All right, Neil, hold it there.
We're going to continue on.
I think we'll pick it up in the post-show though.
And we were gonna look at our home folders today,
but I feel like we could save that for next week.
Yeah, that's evergreen.
Yeah, it is.
In fact, maybe why don't we do this?
Go look at your own home folder.
Do an LSLA and just take a look at it.
I want you to look at how many dot folders are in there
versus the dot config directory,
because that's where they're supposed to be, right?
I mean, I guess we'll get into that.
But yes, you'll probably find a lot.
Some will have their own subdirectories.
Maybe there'll be some weird intercasing.
Yeah, if you've got tree, just type tree in your home
and go stare at all the lines.
If you don't have tree, install tree.
Yeah, there you go.
And then run tree on your home directory.
And then listen to episode 290,
because we're gonna be talking about this.
Because Wes and I have to come clean
about our home directories,
and we want you to understand what we're talking about.
So this will be a good exercise for you at home.
But I did promise some great pics.
So let's do those before we get out of here.
First pic this week is something
that I am trying out in studio,
getting ready for the big Linux Fest Northwest.
Here, can I tell you something?
Oh yeah, I will tell a soul.
Don't tell anybody else.
The cone of silence.
Oh, good idea.
They can't hear us outside of that, that's perfect.
So I wanna make it look like we got our shit together.
And I was thinking, maybe we could get
like a couple of media devices set up
just with our content or with some music.
So that way when people are hanging out at the studio,
they got some stuff to listen to.
The space is ready to go.
But we just pretend like we've always had it.
The studio is just, those are built in, yeah.
Yeah, it's always been here.
It's like, we use Linux everywhere obviously.
I don't know what you're thinking about.
Okay. The cone of silence.
Ooh.
So let me tell you about Pi Music Box,
something we use here in the studio.
And it's pretty sweet.
Okay, maybe technically I haven't used it yet,
but I'm about to.
It is a Spotify SoundCloud Google Music player
for the Raspberry Pi.
In fact, I think it even supports Apple AirPlay version 1.0.
And it turns a Raspberry Pi into a media device receiver
with a web interface that works great on both the desktop,
but your mobile device as well.
So guests can come over, they join your wifi,
you give them the URL and then they're up and going.
And they can like cue music up
and they can play their own mixes and stuff like that.
So it's called Pi Music Box.
There's a bunch of stuff, just does a bunch of stuff.
This really seems perfect.
Actually, I had some friends over
and they used a different streaming service than I did.
And they're like, oh, we have this playlist that you should.
And I was like, what?
I'm not set up.
This would be perfect.
Yeah, that kind of thing happens.
And what tends to be the case is the Chromecast
becomes the sort of like unifier.
Everybody's got Chromecast support.
So then it's like whatever you can send to the TV
and play on the TV speakers is what you got.
Not this year.
This year, we're gonna go all out.
So that we'll be using Pi Music Box to deliver that.
Now, this is pretty neat.
You found this one, it's called ETA.
And it's a graphical tool for monitoring progress.
I mean, I don't know that I would call it graphical.
Command line graphical.
They call it graphical.
I don't think the audience would define it as graphical.
You're right.
But it lets you get insights into the progress
of a process that you normally wouldn't get insight,
like a file transfer or like how long something's taking.
The nice part, so it's not like, it's not magic.
You're gonna have to do a little thinking to use it,
but it sets up a framework for a generic way
to get an ETA with a little progress bar.
So if you have some units that are changing
and you have a way to get what the total size should be
in a way to get the current size
of whatever size might mean for your problem set
on one place versus another,
it will draw you a pretty progress bar.
I kind of think one of the things
that it took me a little adjusting to
when I switched to Linux many, many eons ago
was returning nothing was a success.
Right, yeah, right.
When something goes perfectly,
the computer tells you nothing.
Nothing, and it's like, is that, did it work?
And like when it's like a big file copy
and you're just waiting and waiting and waiting.
And you need that, you don't have time to go.
And then like all you get back is the command line.
You're like, okay.
So that's where this could kind of be nice.
I could see that.
So I don't, I've moved beyond.
I'm past that now.
Now I just like PS like a son of a bitch,
but no, I could see how ETA would be very useful.
It is up on GitHub.
We have a link in the show notes, linuxunplug.com,
slash 289.
Now, I feel like we've talked about this next pick before.
Oh, definitely, definitely.
But I did a whole site search and I, nothing.
But either we just are bad at tags.
That could be it.
We should, let's put it in the tags this week.
NetData, the open source real time performance monitoring
and health monitoring application.
If you don't know what NetData is,
then I have failed in my job as a podcaster
and I apologize to you.
So we are trying to make good right now.
This is so, so, so great.
If you got like a VPS somewhere
where you're doing a few things
and wanna know what it's up to,
or maybe you got like a home file server.
It's also great on your laptop.
Oh, absolutely.
Yeah, have you used it recently?
Yeah, it's running on my system right now.
I feel like it just came up in conversation recently.
Yeah, it sure did in the most recent episode of TechSnap.
Yeah, it turns out Jim, he uses it too.
Okay, there you have it.
Go check out that new TechSnap.Systems.
397.
397, Wes and Jim get into some really cool tools
for making your network a little more manageable,
a little more quality of service, if you will.
Something to be proud of.
Yeah, so NetData looks really, really good.
And it is our bad if you're not familiar with it.
I absolutely apologize
because it is an open source darling
and you need to go get it
if you haven't checked out NetData yet.
So ETA, Pi Music Box and NetData.
In the show notes, we have a link towards like a demo of it.
It's just so cool.
It's just so, so cool.
Yeah, you're gonna get lost just playing with graphs.
Yeah, you really could.
I think though, the cool, the thing is I'm gonna take,
I'm gonna take my new Raspberry Pi that I got
and I'm gonna set up this Pi Music Box on it.
I think that's gonna be-
I have one later and I'm gonna do it too because-
Yeah, yeah.
I'm gonna have like, I feel like I need a rack.
Maybe if anybody has a recommendation,
like a rack of Raspberry Pis
because I'm gonna have one Raspberry Pi
doing the music stuff.
And then you got, I wanna do,
here's what I haven't told you about this yet.
I wanna do a dedicated Raspberry Pi for my WireGuard stuff.
Oh yeah, little WireGuard VPN box.
Cause I got WireGuard running on my workstation
in my office, but I feel like now that I'm using it
as much as I am using it,
like it needs to be on a dedicated WireGuard device, right?
So a Raspberry Pi, WireGuard server, perfect, right?
I mean, we might as well set up a Pi-hole server too
just cause why not?
That's true, that's true.
And then last but not least, this Pi music box.
So I want like a four or so rack of Raspberry Pi devices
that could do like wire management and stuff.
If anybody has any recommendations,
go to linuxunplug.com slash contact
or tweet me at Chris LAS
and let me know what you recommend for that kind of thing
because I could see, I could see some of a few.
I mean, I've got like two or three floating around the studio
not being used right now.
They just accumulated.
What happens when you're, I guess, a nerd?
So might as well put them to some good use.
That's right.
All right, Mr. Payne, where do people find
that new TechSnap, revamped TechSnap?
TechSnap.systems.
Very good, very good.
Can they find you on the Twitter?
At Westpane.
Ah, ah, I'm at Chris LAS.
The network is at Jupiter Signal.
And don't forget, go check out Popeye and friends
live from Malta.
We'll have a link in the show notes
if you want to check out their live stream.
That's pretty cool.
That is pretty cool, so go check that out.
Linuxunplug.com slash 289 for all of our links.
We'd love to have you join us live.
Next week, I'll be flying into a remote location
and jumping on the live stream.
So I would love you to make it.
See you then.
Next Tuesday!
We'll be right back with another episode of TechSnap.
Welcome to BSD Unplugged, your weekly BSD talk show
that's too busy getting actual work done
to care about what your silly display server.
My name is Alan.
You know what stings about that clip?
That was like three years ago.
And we're still figuring out the Wayland stuff.
And we've never properly gotten them back, either.
Well, no, I mean, we don't have anything to tell.
No, we don't.
And once Wayland is finalized, I suppose.
Anyways, JBtitles.com, go vote, thank you, Mumble Room.
So I think we had a pickup, but I can't remember
what it was in the post-show.
Do you remember what it was?
I said we'd pick it up in the post-show.
The ecosystem thing.
In the ecosystem.
Ecosystem.
Do you remember what it was, though?
Because ecosystem has got to be the most generic description
of what we were going to talk about.
I was talking about how the reason why
Enterprise Linux is successful is because it's
about partnerships and people and partnerships
and certifications and all these things that feed into each other
to help actually sustain it.
And the reason why desktop Linux has failed
is because everybody tries to approach it like an island.
Now you're saying failed.
I prefer to look at it more as like a slow burn.
And I look at it from an infinite timeline perspective,
in which what we just have to wait for
is the Microsoft Corporation and the Apple Corporation
to fade away, and then the desktop is ours.
Now that we've got a little bit extra time,
you know what I think we should do?
Is we ought to get the audience to send us
some screenshots of all of the dot folders
in the root of their home directory.
You know what I think?
Yeah, I think that's best because you
can have a number that describes it, which is good.
Do that, too.
Yeah, we need the number.
But just seeing the mess.
Yeah, we want to see the mess, the number, all of it.
Take a screenshot.
Go install that tree application if you don't have it.
And then get us a screenshot of your home directory
and tweet me at chrisles, or email into the show
by going to linuxunplug.com slash contact.
I want to see these home directories
because Wes brought a soapbox, and by God, we're
going to use it.
