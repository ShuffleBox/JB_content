1
00:00:00,000 --> 00:00:07,000
This is Linux Unplugged Episode 33 for March 25th, 2014.

2
00:00:30,000 --> 00:00:40,160
Welcome to Linux Unplugged, your weekly Linux talk show that's prepping for the

3
00:00:40,160 --> 00:00:45,160
display revolution. My name is Chris. My name is Matt. Hey there Matt, I've still

4
00:00:45,160 --> 00:00:49,800
got the yellow hat on, the rest of the suits off though. And you know, I just

5
00:00:49,800 --> 00:00:52,920
want to know, I just gotta visualize it. Are you still in the monkey suit?

6
00:00:52,920 --> 00:00:56,760
Monkey suit was a thing until it was bedtime and then the wife kind of drew

7
00:00:56,760 --> 00:00:59,720
the line in the sand and said I'm not gonna do it like they do it on the

8
00:00:59,720 --> 00:01:04,280
animal planet, so that's not happening. So that had to come off, unfortunately. I understand Matt.

9
00:01:04,280 --> 00:01:08,200
Well, now I like the idea this monkey suit is floating around there and it

10
00:01:08,200 --> 00:01:11,660
could always like, there could be another bet down the road and like the monkey

11
00:01:11,660 --> 00:01:16,520
suit looms. You know that if the bet doesn't pan out, they might have to come

12
00:01:16,520 --> 00:01:20,080
back out of retirement. Right. So this week we're gonna kind of pick up on

13
00:01:20,080 --> 00:01:25,400
where we touched on Linux Action Show 305 last week. We talked with Kevin

14
00:01:25,400 --> 00:01:30,760
Gunn from Canonical about Mir. And the day that we ran with that show, there

15
00:01:30,760 --> 00:01:34,520
was a couple of posts, one from another Canonical developer, Bob, who said the

16
00:01:34,520 --> 00:01:37,240
display server doesn't matter and we covered that in the feedback. And then

17
00:01:37,240 --> 00:01:41,920
after that, two succeeding posts came out, one from Martin and one from Aaron

18
00:01:41,920 --> 00:01:47,480
from the KDE camp. They said, oh wait a minute, the display server does matter.

19
00:01:47,480 --> 00:01:51,560
And I'll tell you Matt, I've been thinking about this. In fact, I thought

20
00:01:51,560 --> 00:01:56,800
about this so hard. Get ready for this. I did some exercise. I got

21
00:01:56,800 --> 00:02:01,640
exercise. I put on my new hoodie. Actually I put on the demo print hoodie,

22
00:02:01,640 --> 00:02:05,640
I'm not gonna lie. And I went out, I walked in the rain and I thought, you

23
00:02:05,640 --> 00:02:09,920
know, I wanted to kind of really kind of in the last couple of weeks come to sort

24
00:02:09,920 --> 00:02:14,920
of where I land on the whole Mir debate. Because I for a long time have

25
00:02:14,920 --> 00:02:19,320
been taking the, hell you know what, let him have at it Haas. Let's see how it

26
00:02:19,320 --> 00:02:23,320
goes. Nothing bad with having a little competition out there. It might spur

27
00:02:23,320 --> 00:02:26,120
people into getting their butts in gear and make things better for everybody in

28
00:02:26,120 --> 00:02:29,880
the long run. And now I've thought about it and I realized two things. There's a

29
00:02:29,880 --> 00:02:33,040
headwind of the general, there is a large percentage of the

30
00:02:33,040 --> 00:02:37,200
general audience who just doesn't give a crap. They couldn't care less about Mir

31
00:02:37,200 --> 00:02:41,280
or Wayland or X11 and I want to change that opinion today. So if you consider

32
00:02:41,280 --> 00:02:44,880
yourself one of those people who doesn't really care about Mir, who doesn't really

33
00:02:44,880 --> 00:02:48,600
care about Wayland, I want to correct that. Because that is a mistake on your

34
00:02:48,600 --> 00:02:52,080
part, at least I think, and I want to make the case why you should care and why I

35
00:02:52,080 --> 00:02:56,560
think if this doesn't pan out correctly, it could fundamentally damage Linux,

36
00:02:56,560 --> 00:03:00,680
desktop Linux's success in the future. Okay. And if we don't get this right, and

37
00:03:00,680 --> 00:03:04,880
this is why we have to care, because what is at stake here is taking Linux as a

38
00:03:04,880 --> 00:03:08,720
serious platform. And that could not be a more critical thing right now as all of

39
00:03:08,720 --> 00:03:12,120
these game companies are announcing support for Linux. There was just an

40
00:03:12,120 --> 00:03:16,200
NVIDIA demo today. NVIDIA is up on stage and they're demoing their brand new

41
00:03:16,200 --> 00:03:20,600
product on an Ubuntu desktop machine. It has never been a more critical point in

42
00:03:20,600 --> 00:03:24,520
the Linux desktop ever in the timeline of Linux desktop. And there is something

43
00:03:24,520 --> 00:03:28,360
that is about to happen that has never happened in Linux ever. And if we don't

44
00:03:28,360 --> 00:03:32,240
get it right, Linux is gonna be seen like a joke on the desktop for the rest of

45
00:03:32,240 --> 00:03:36,080
its existence. And I don't, and that is not, I believe, an exaggeration in the

46
00:03:36,080 --> 00:03:40,240
least. In fact, I think it is understating the issue. So if you are somebody who

47
00:03:40,240 --> 00:03:43,040
doesn't think they care about Mir, they don't think they care about Wayland, I

48
00:03:43,040 --> 00:03:46,480
think you got it wrong. And I want to try to change your opinion on that today. And

49
00:03:46,480 --> 00:03:49,040
if it's something you've been kicking around and mulling on for a long time

50
00:03:49,040 --> 00:03:53,360
like Matt and I have, I want to give you a little more to think about. Some more

51
00:03:53,360 --> 00:03:57,040
thoughts and we're gonna play off these recent posts that came

52
00:03:57,040 --> 00:04:01,080
out right as last was wrapping up. And here we are, you know, we're about

53
00:04:01,080 --> 00:04:04,800
a year in since the Mir announcement. And I think it's time to reflect on this

54
00:04:04,800 --> 00:04:08,240
and sort of think about the long-term ramifications of it. So that's what we're

55
00:04:08,240 --> 00:04:12,560
gonna talk about sort of in the second half of this week's show. But first, we

56
00:04:12,560 --> 00:04:16,960
should cover some feedback. And we got a lot of feedback on our Solid XK review.

57
00:04:16,960 --> 00:04:21,800
One of the folks who wrote in and we got, I mean, we got so many. It's great. I love

58
00:04:21,800 --> 00:04:25,280
it. Because we weren't quite sure like if we, you know, should we spend a lot of

59
00:04:25,280 --> 00:04:28,280
time on a small distro? Will people be that interested? Are people, you know,

60
00:04:28,280 --> 00:04:31,560
are the masses only interested in the big distros? And I think our experiment

61
00:04:31,560 --> 00:04:35,880
with Solid XK proves that if you get the right distro, it doesn't matter about the

62
00:04:35,880 --> 00:04:39,240
size. If they've got the right recipe, it's worth talking about. So Dave wrote

63
00:04:39,240 --> 00:04:42,400
in, he says, I've been distro hopping for some time now, looking for the right

64
00:04:42,400 --> 00:04:46,280
one. I think a lot of people can sort of put themselves in that shoe. He said,

65
00:04:46,280 --> 00:04:49,400
inspired by last and Linux unplugged reviews, I got around to taking a look at

66
00:04:49,400 --> 00:04:53,760
Solid X, or actually he looked at Solid K. I liked it so much, I promptly nuked

67
00:04:53,760 --> 00:04:57,760
and paved over my OpenSUSE install. He says, it's a quite well thought out

68
00:04:57,760 --> 00:05:01,520
implemented distro and it's great. And he says, thanks for the great programming.

69
00:05:01,520 --> 00:05:04,880
He loves it. And by the way, he also loves his new hoodie. We got tons of people

70
00:05:04,880 --> 00:05:08,120
that wrote in and said they're trying out Solid and they're really impressed

71
00:05:08,120 --> 00:05:12,760
with it. I think it's that, I think it's that, that rolling release done right. And

72
00:05:12,760 --> 00:05:16,800
I wonder if some of the bigger distros might look at what Solid's doing here and

73
00:05:16,800 --> 00:05:19,560
saying, yeah, maybe there's something we could kind of copy from this, something

74
00:05:19,560 --> 00:05:24,680
we could institutionalize. Because I, I think Linux is at its best when you're

75
00:05:24,680 --> 00:05:29,240
taking advantage of the fundamental fact that Linux is always moving forward as a

76
00:05:29,240 --> 00:05:32,200
whole. I don't mean just the kernel, but obviously the kernel applies here too. But

77
00:05:32,200 --> 00:05:36,240
all of the GNU-utils, everything in Linux is not static. That's one of its

78
00:05:36,240 --> 00:05:40,600
biggest faults and it's also one of its biggest, biggest advantages. And when you

79
00:05:40,600 --> 00:05:45,360
are on a distribution that snapshots Linux in time, like all distributions do

80
00:05:45,360 --> 00:05:48,560
that aren't rolling, you're inherently going against the nature of the

81
00:05:48,560 --> 00:05:52,880
underlying operating system. And what all of, and how the upstream system works

82
00:05:52,880 --> 00:05:56,560
altogether. And that's why a rolling release, if you've been a longtime Linux

83
00:05:56,560 --> 00:05:59,920
user, can be extremely compelling. Because it actually, in some really weird

84
00:05:59,920 --> 00:06:05,480
twisted way, feels more natural. It feels like the way the Linux desktop should be.

85
00:06:05,480 --> 00:06:10,600
And Solid has sort of struck that, that comfortable area with these understandable

86
00:06:10,600 --> 00:06:14,840
update packs. And these, and your core applications on a much more frequent

87
00:06:14,840 --> 00:06:18,040
basis. And I, I don't know if Solid's going to be the one. Because, you know,

88
00:06:18,040 --> 00:06:21,920
it's a small team. But bigger distros could watch this success and learn from

89
00:06:21,920 --> 00:06:23,160
it, I think.

90
00:06:23,160 --> 00:06:26,000
Well, you know, and I look at what they're doing and then I compare it to,

91
00:06:26,000 --> 00:06:29,200
like, a distros I'm using now. And it's, one thing I really like is the fact that

92
00:06:29,200 --> 00:06:33,560
they group those update packs together in nice little tidy packages versus...

93
00:06:33,560 --> 00:06:35,560
You know, okay, I'm going to plan for this.

94
00:06:35,560 --> 00:06:38,120
Right. It's like the laptop that I have sitting here in front of me and I'm going

95
00:06:38,120 --> 00:06:41,160
to, you know, it's like my old netbook, rather. And I boot it up, I know I'm going

96
00:06:41,160 --> 00:06:43,960
to have 50 billion freaking updates that I'm going to have to deal with because I

97
00:06:43,960 --> 00:06:47,520
haven't done it every day. And it's annoying. I mean, it's like, I like the

98
00:06:47,520 --> 00:06:51,160
updates, but it's like, oh my God, enough, right? So I love the fact that by having

99
00:06:51,160 --> 00:06:55,240
them in update packs, you know, that's kind of appealing. I like the fact that I can

100
00:06:55,240 --> 00:06:56,040
schedule it. Yeah.

101
00:06:56,040 --> 00:07:01,080
Now, for me, I get a little endorphin spike every day when I do a packer,

102
00:07:01,080 --> 00:07:05,280
SYU, and I see like 30 packages are going to get updated. And I get even a bigger

103
00:07:05,280 --> 00:07:09,040
endorphin spike when I see like 40, 50, 60 packages are going to be updated and the

104
00:07:09,040 --> 00:07:12,760
net difference is a reduction in total disk usage. That is my favorite thing.

105
00:07:12,760 --> 00:07:18,000
I love seeing that. So for me, like every day, I love updating because I always want

106
00:07:18,000 --> 00:07:20,880
to get new stuff. I always want to look at the new stuff. I want to use the new

107
00:07:20,880 --> 00:07:26,320
stuff. And so far, I haven't been burned big time. Like the biggest burn I've had

108
00:07:26,320 --> 00:07:31,760
is a theme might wonk out on me or virtual box won't start until I figured out, oh,

109
00:07:31,760 --> 00:07:34,320
I need to have the modules auto build when I update my kernel. You know, there

110
00:07:34,320 --> 00:07:38,800
was, I've, I've, I've hit some minor snags that I probably wouldn't have hit on a,

111
00:07:38,840 --> 00:07:43,440
on a more static distribution, but those are so minor compared to the thrill I get

112
00:07:43,440 --> 00:07:47,120
from having, I know it sounds silly, but when I hear an announcement that a brand

113
00:07:47,120 --> 00:07:50,480
new version of Chrome is out and I have it within 15 minutes, that feels pretty

114
00:07:50,480 --> 00:07:54,080
great. You know, and it could be, it's everything. Uh, and, and solid XK, those

115
00:07:54,080 --> 00:07:57,120
were people who don't want to ride that edge so close. I think it's pretty

116
00:07:57,120 --> 00:08:00,760
interesting. I think so. Yeah, I think so. I think the other piece of it, it's like,

117
00:08:00,760 --> 00:08:04,800
the only time I ever really got burned per se was, uh, Chrome did some weird

118
00:08:04,800 --> 00:08:09,200
legacy library issue that arch had way surpassed it. They were done and Chrome

119
00:08:09,200 --> 00:08:12,240
failed to catch up and I had to go to Chromium. That was not that much drama.

120
00:08:12,240 --> 00:08:15,280
It really wasn't a big deal. It's a bit of a pain in your butt. Yeah, but it

121
00:08:15,280 --> 00:08:17,720
wasn't that, you know, but it was, it was like, I needed to do this anyway, so

122
00:08:17,720 --> 00:08:21,640
whatever. You remember we also covered on Linux action show this Sunday, uh, the

123
00:08:21,640 --> 00:08:25,800
Debbie and looking at PPAs. Well, uh, Robert wrote in with some thoughts on

124
00:08:25,800 --> 00:08:29,640
that. He says, I was listening to your podcast as always. I noticed you had my

125
00:08:29,640 --> 00:08:33,240
letter on the Australian national board brand network. He says, but that was on

126
00:08:33,240 --> 00:08:37,080
text, not last. I don't think PPAs are the answer either, but I think there's an

127
00:08:37,080 --> 00:08:40,720
existing solution. Docker is fast becoming a standard for software

128
00:08:40,720 --> 00:08:45,280
delivery that is distro agnostic and reliable. It's already accepted and, and

129
00:08:45,280 --> 00:08:48,400
built into red hat enterprise Linux and there is a red hat certification for

130
00:08:48,400 --> 00:08:52,240
software providers. There is a tool called sub user that uses a config file

131
00:08:52,240 --> 00:08:56,680
and Docker to run an application, even a gooey app in an isolated Docker

132
00:08:56,680 --> 00:09:01,440
container. The sub user allows you to control what the app has access to. I,

133
00:09:01,440 --> 00:09:04,840
you could allow Firefox to access the downloads directory, but not your

134
00:09:04,840 --> 00:09:08,360
documents directory. Sub user is primarily for security, but it uses

135
00:09:08,360 --> 00:09:11,880
standard Docker image. So you could run Docker images without sub user if you

136
00:09:11,880 --> 00:09:15,320
wanted to, but if you're using it with sub user, you could easily control the

137
00:09:15,320 --> 00:09:20,120
isolation from the rest of the OS. Docker is also repository paste like get for

138
00:09:20,120 --> 00:09:24,360
binaries. So it would be a single command to download and use. Imagine if you had

139
00:09:24,360 --> 00:09:28,600
all upstream project release as Docker images, you could run it anywhere on any

140
00:09:28,600 --> 00:09:32,480
distro and not have to worry about breaking anything. The distro repos will

141
00:09:32,480 --> 00:09:36,240
still be important for the core OS stuff, but even the core OS stuff could be put

142
00:09:36,240 --> 00:09:43,280
in Docker images for a try. I like it. I think one of the times we interview the

143
00:09:43,280 --> 00:09:47,120
Docker guys on Koda radio, I specifically asked him and I said, so how

144
00:09:47,120 --> 00:09:51,040
are you guys playing with application delivery? And he said, well, it's not our

145
00:09:51,040 --> 00:09:55,040
core focus right now, but we have been experimenting with it. And it's sort of

146
00:09:55,040 --> 00:09:59,360
like, you know, think of it as a little isolated environment for each

147
00:09:59,360 --> 00:10:04,000
application. And the overhead would only be, I think, I might have this wrong, but

148
00:10:04,000 --> 00:10:08,600
the overhead of a Docker container would only be the differentials from your core

149
00:10:08,600 --> 00:10:13,360
system that don't match up with that Docker. So for example, if there was a GL

150
00:10:13,360 --> 00:10:17,560
library that was the same on your core system that was called for in the Docker

151
00:10:17,560 --> 00:10:20,760
image, it would just use the one on your core system. And because it's not actual

152
00:10:20,760 --> 00:10:24,080
virtualization, it's not like you have the overhead of a VM to run these

153
00:10:24,080 --> 00:10:28,440
applications. So I think it'd be something to play with. And I wonder if

154
00:10:28,440 --> 00:10:31,040
I'd like to hear from folks out there who might already be doing this because

155
00:10:31,040 --> 00:10:35,280
I know it is possible. And so if you're experimenting with application delivery

156
00:10:35,280 --> 00:10:39,600
via Docker, let us know because one of the things that could in theory do, at

157
00:10:39,600 --> 00:10:44,400
least according to the Docker developer, was sort of normalize out a lot of

158
00:10:44,400 --> 00:10:49,120
distro fragmentation. You know, like for example, Steam is doing this in a

159
00:10:49,120 --> 00:10:53,240
sense. There's the Steam environment. Every time you install Steam now, it

160
00:10:53,240 --> 00:10:56,760
installs a Steam runtime environment. That runtime environment looks an awful

161
00:10:56,760 --> 00:11:00,800
lot like an Ubuntu 12.04 install, right? But it's just the files that it needs. Yeah, you know, so

162
00:11:00,800 --> 00:11:04,740
they're already kind... This is essentially what Steam is doing right now. And it

163
00:11:04,740 --> 00:11:07,760
wouldn't be, you know, the chat room saying, oh, it would be really messy on your file

164
00:11:07,760 --> 00:11:10,760
system. Not necessarily. Because you could maybe have all your Docker images

165
00:11:10,760 --> 00:11:13,520
under slash op slash Docker or something like that. You could have an

166
00:11:13,520 --> 00:11:16,620
organizational structure to it where, much like on the Mac, when it's time to

167
00:11:16,620 --> 00:11:20,680
uninstall an application, you just drag that Docker folder that contains the

168
00:11:20,680 --> 00:11:24,760
application to the trash. Because on the Mac, application... When you

169
00:11:24,760 --> 00:11:28,480
drag an application icon to the applications folder to install it on

170
00:11:28,480 --> 00:11:33,840
the Mac OS X, that isn't a one single icon. That's a bundle file. It's a

171
00:11:33,840 --> 00:11:37,280
directory. You can right click on those and say, show package contents. And

172
00:11:37,280 --> 00:11:41,680
they're full of stuff. But the OS represents it as a single icon. So when

173
00:11:41,680 --> 00:11:44,400
you're dragging that single icon to the applications folder, oh, you're

174
00:11:44,400 --> 00:11:48,840
installing the app. But really, you're moving a folder. It's filled

175
00:11:48,840 --> 00:11:52,200
with files and a directory structure. And when you want to remove it, you just

176
00:11:52,200 --> 00:11:56,000
move that folder, but it looks like an app icon, to the trash. Docker could

177
00:11:56,000 --> 00:11:58,880
implement something similar to that. And in fact, it wouldn't even be reliant on

178
00:11:58,880 --> 00:12:02,660
the Docker guys to do that part. The shell guys could do that part, right?

179
00:12:02,660 --> 00:12:06,440
And when you're talking about working in the user restrictions where

180
00:12:06,440 --> 00:12:09,640
you could say, your sandbox, you can only access my downloads folder, not my

181
00:12:09,640 --> 00:12:12,320
documents folder. Well, that's something that the GNOME guys have already

182
00:12:12,320 --> 00:12:15,480
announced they want to do anyways. Sub user sounds a lot like it's already

183
00:12:15,480 --> 00:12:19,440
accomplishing what they want to do in GNOME with cgroups and whatnot. Which is

184
00:12:19,440 --> 00:12:22,880
a really good part of... It's good security hygiene. That way, you know, if you have

185
00:12:22,880 --> 00:12:26,800
an exploit in Firefox, it can't trample your whole system. It makes a lot of

186
00:12:26,800 --> 00:12:29,960
sense. And as long as you have the right access, you could override those kinds of

187
00:12:29,960 --> 00:12:33,800
things. So I think it's an interesting idea. Thanks for sending that in, Robert.

188
00:12:33,800 --> 00:12:38,360
And if you out there, folks, have experimented with deploying something in

189
00:12:38,360 --> 00:12:41,720
Docker, I would really like to hear that. I would like to hear your success

190
00:12:41,720 --> 00:12:45,480
stories, because I've been thinking about it, too. It does sound very

191
00:12:45,480 --> 00:12:50,480
PBI-like or click package-like. It's very similar to those. A little

192
00:12:50,480 --> 00:12:54,280
more isolated, though. And I think, you know, whereas PBI is

193
00:12:54,280 --> 00:13:00,400
specific to PCBSD and click packages will be specific to Ubuntu, this has the

194
00:13:00,400 --> 00:13:04,000
potential of truly being distribution agnostic. And the reason why I think that

195
00:13:04,000 --> 00:13:08,000
is super important is because that's what it's gonna take to get developers

196
00:13:08,000 --> 00:13:11,520
to be willing to put the effort in to make the application. Because when you tell

197
00:13:11,520 --> 00:13:15,560
them, well, you can make your app and you can easily deploy it on PCBSD or you can

198
00:13:15,560 --> 00:13:21,300
easily deploy it on Ubuntu. Yay! You just got a percentage of the market. Woo! But

199
00:13:21,300 --> 00:13:26,280
if you make a Mac for the app, every single Macintosh out there that has the

200
00:13:26,280 --> 00:13:30,480
hardware specs can run that application. And to a developer, that is a type of

201
00:13:30,480 --> 00:13:33,600
guarantee that justifies the amount of effort involved in making that

202
00:13:33,600 --> 00:13:36,560
application and then distributing it. And if you can't guarantee that for Linux,

203
00:13:36,560 --> 00:13:39,320
you're not gonna bring a bunch of developers over. And I know that makes it

204
00:13:39,320 --> 00:13:42,720
sound like developers are lazy, but guess what? Developers are lazy. Come on, developers, you know it.

205
00:13:42,720 --> 00:13:46,200
Well, it's also time is money. It's like, especially if they're doing this as their

206
00:13:46,200 --> 00:13:49,760
job, it's like there's this weird thing called time and they don't have enough

207
00:13:49,760 --> 00:13:53,120
of it. And so they're like, you know, I could spend time with my family or I

208
00:13:53,120 --> 00:13:56,320
could go and make sure that, you know, that 40-person distro over there has a

209
00:13:56,320 --> 00:13:59,440
package. I mean, you know, it's common sense. And you have the openSUSE build

210
00:13:59,440 --> 00:14:04,040
service, which is tempting to like, hey, upload your files here and we'll handle

211
00:14:04,040 --> 00:14:08,000
all the behind-the-scenes stuff to make it work on every distro. That is awesome

212
00:14:08,000 --> 00:14:12,840
for today's problem, but it really seems like it's a patch to a

213
00:14:12,840 --> 00:14:16,080
bigger problem that should be solved. And this, the thing I like about these Docker

214
00:14:16,080 --> 00:14:19,000
images, I don't even know if it would work, but the thing that what I like about it

215
00:14:19,000 --> 00:14:21,960
is I think a lot of times we've always thought, well, the way to really solve

216
00:14:21,960 --> 00:14:25,120
this is to have a universal package manager across all distributions. That's

217
00:14:25,120 --> 00:14:29,080
never gonna happen. No, it's not. It's a nice idea, but I mean, we can't even come

218
00:14:29,080 --> 00:14:33,480
up with, you know, display server correlation between different distros or

219
00:14:33,480 --> 00:14:37,760
even the back-end system, systemd versus upstart. How the hell are we

220
00:14:37,760 --> 00:14:40,280
gonna do that with packaging? And this is going to be the point of our

221
00:14:40,280 --> 00:14:43,720
talk in a little bit. I mean, it's just about to get worse. Well, speaking of

222
00:14:43,720 --> 00:14:48,280
Docker and companies that love Docker, Vodley writes in, he says, hi Chris and

223
00:14:48,280 --> 00:14:51,280
Dom, but he was actually writing for Coderadio, but I snagged this. I finally

224
00:14:51,280 --> 00:14:55,600
got myself a droplet from DigitalOcean and they're fabulous. I was getting a lot

225
00:14:55,600 --> 00:14:58,520
of latency from the New York droplet since I'm in India, so I was able to

226
00:14:58,520 --> 00:15:02,560
switch to Singapore in no time. Nowhere does anyone ever mention that you get to

227
00:15:02,560 --> 00:15:07,080
actually select the architecture of the DigitalOcean droplet. Since I run

228
00:15:07,080 --> 00:15:12,560
a 32-bit laptop, don't ask, he says, I selected a Ubuntu 64-bit up in

229
00:15:12,560 --> 00:15:16,680
the cloud and I'm cross compiling in the cloud. It's pretty awesome. So I want to

230
00:15:16,680 --> 00:15:20,440
take a minute and thank our sponsor, DigitalOcean. The community out there

231
00:15:20,440 --> 00:15:24,320
has been loving DigitalOcean and if you use the promo code Linux Unplugged March,

232
00:15:24,320 --> 00:15:28,360
you can get a $10 credit and try out that $5 DigitalOcean rig for two months.

233
00:15:28,360 --> 00:15:31,720
What is DigitalOcean? Well, DigitalOcean is simple cloud hosting dedicated to

234
00:15:31,720 --> 00:15:34,880
offering the most intuitive way to spin up a cloud server and they are blowing

235
00:15:34,880 --> 00:15:39,640
up because they are offering that sweet spot of perfect services wrapped in an

236
00:15:39,640 --> 00:15:43,880
awesome to use dashboard and backed by incredible technologies. Users can create

237
00:15:43,880 --> 00:15:47,440
a cloud server in 55 seconds, our community does in about 44 seconds

238
00:15:47,440 --> 00:15:52,280
apparently, and pricing plans start about $5 per month. They get you a 512

239
00:15:52,280 --> 00:15:57,320
megs of RAM, a 20 gigabyte SSD, a CPU and a terabyte of transfer. That's your fixed

240
00:15:57,320 --> 00:16:01,600
cost. You know right there, you're going to be paying $5 a month for that. It's

241
00:16:01,600 --> 00:16:04,520
not like some of these other services out there where they count your actual

242
00:16:04,520 --> 00:16:08,120
usage and your bandwidth transfer and your CPU load and boom, your bill is just

243
00:16:08,120 --> 00:16:12,080
like a different bill every single month. DigitalOcean is a fixed cost that you

244
00:16:12,080 --> 00:16:16,100
can easily quantify and DigitalOcean has data center locations in New York, San

245
00:16:16,100 --> 00:16:20,360
Francisco, Amsterdam and now Singapore. Their interface is simple, it's got an

246
00:16:20,360 --> 00:16:24,120
intuitive control panel and power users can actually replicate the whole thing

247
00:16:24,120 --> 00:16:28,440
with their straightforward API and if you use that promo code Linux Unplugged

248
00:16:28,440 --> 00:16:32,960
March, that's Linux Unplugged March to get that $10 credit. Go over there and

249
00:16:32,960 --> 00:16:38,200
check them out. They built this system on top of awesome, awesome technology. They

250
00:16:38,200 --> 00:16:41,960
call it the SSD only cloud and I was just updating my Arch Dropout that I

251
00:16:41,960 --> 00:16:47,440
have up there yesterday. I was getting from the repo 85 megabytes, yeah 85

252
00:16:47,440 --> 00:16:51,960
megabytes a second while I was doing the update and the SSDs man, they just boom,

253
00:16:51,960 --> 00:16:56,000
they just tear right through that. They have tier 1 bandwidth, 55 second

254
00:16:56,000 --> 00:17:00,440
provisioning, it's all running on top of KVM virtualization, they have amazing

255
00:17:00,440 --> 00:17:04,040
hardware and let me tell you when DigitalOcean started up, committing to

256
00:17:04,040 --> 00:17:09,040
SSDs was a major commitment on their part. It was a huge gamble because back

257
00:17:09,040 --> 00:17:12,160
when they started SSD prices, well they're still high, but back then they were even

258
00:17:12,160 --> 00:17:15,480
higher and people looked at them like they're crazy, but they knew that the

259
00:17:15,480 --> 00:17:19,600
performance difference was worth it. Now DigitalOcean also offers private

260
00:17:19,600 --> 00:17:23,840
networking, so you can go, you can have like a web server front-end with private

261
00:17:23,840 --> 00:17:30,080
database servers on the back-end. I just recently updated my DigitalOcean

262
00:17:30,080 --> 00:17:35,760
Droplet with the Quasl back-end. So Quasl is an IRC client for Linux and it

263
00:17:35,760 --> 00:17:39,720
was so easy to install Quasl on my DigitalOcean VPS and now I'm logged

264
00:17:39,720 --> 00:17:42,920
into the IRC chat room all the time and I can connect from multiple machines on

265
00:17:42,920 --> 00:17:47,460
multiple platforms and I'm all sharing the same session routed through my

266
00:17:47,460 --> 00:17:52,640
DigitalOcean VPS. It took me minutes to set up and it offers me so much value in

267
00:17:52,640 --> 00:17:56,280
terms of my productivity in the chat room that I would pay five dollars a

268
00:17:56,280 --> 00:17:59,640
month just for that feature alone. There's so many things you can do with a

269
00:17:59,640 --> 00:18:03,880
DigitalOcean VPS once you get started, everything from deploying it as the

270
00:18:03,880 --> 00:18:07,880
back-end for your production system. There's major sites that run on DigitalOcean,

271
00:18:07,880 --> 00:18:10,560
huge sites on the net run on DigitalOcean for their production back-end.

272
00:18:10,560 --> 00:18:14,320
You can use it to train yourself. Go up there and get yourself an actual server

273
00:18:14,320 --> 00:18:17,080
that has an imaging system so you can snapshot it before you make a big

274
00:18:17,080 --> 00:18:19,680
mistake. You don't have to worry, if you're worried about security

275
00:18:19,680 --> 00:18:22,880
implications and you want to build a web app and you don't want to open up

276
00:18:22,880 --> 00:18:27,040
ports into your LAN, throw it up on a DigitalOcean VPS and DigitalOcean has

277
00:18:27,040 --> 00:18:31,240
awesome support for Docker. You can build your system locally, you can create your

278
00:18:31,240 --> 00:18:34,000
app locally in a Docker image and then publish it up on DigitalOcean. They have

279
00:18:34,000 --> 00:18:38,760
one-click install. DigitalOcean has open-source Dooku, which is their

280
00:18:38,760 --> 00:18:42,080
application deployment system using Docker. So they're involved in the

281
00:18:42,080 --> 00:18:45,520
open-source community, they're using KVM, they're using Linux on the back-end that

282
00:18:45,520 --> 00:18:49,920
you choose between Fedora, CentOS, Ubuntu, Arch. I mean they're an awesome service

283
00:18:49,920 --> 00:18:53,240
and you can get it for five dollars a month and for two months free when you

284
00:18:53,240 --> 00:18:57,200
use our promo code LINUXUNPLUGGEDMARCH. So go over to DigitalOcean.com

285
00:18:57,200 --> 00:19:01,920
LINUXUNPLUGGEDMARCH and a big thank you to DigitalOcean for sponsoring Linux

286
00:19:01,920 --> 00:19:08,680
Unplugged. I love my VPS, Matt. Alright, well changing gears from follow-up to

287
00:19:08,680 --> 00:19:12,880
kind of FYI, Josh writes and he says, hey guys, I found out about a free course

288
00:19:12,880 --> 00:19:16,520
EDX is offering in conjunction with the Linux Foundation a couple weeks ago and

289
00:19:16,520 --> 00:19:19,780
I know this will be the best possible place to get the word out so check it

290
00:19:19,780 --> 00:19:23,040
out. This would be great for the viewer and this would be great for a viewer

291
00:19:23,040 --> 00:19:26,760
that are in going into college next year like me. He says he loves the show, he's a

292
00:19:26,760 --> 00:19:29,600
weekly listener to TechSnapCoderRadio and the Linux shows and I don't know if you

293
00:19:29,600 --> 00:19:32,840
heard about this, Matt, but it's yeah it's a course from EDX who makes online

294
00:19:32,840 --> 00:19:36,400
training and Josh wanted to kind of put this in front of us. I had seen this and

295
00:19:36,400 --> 00:19:39,040
I kind of thought we would cover it once too because I don't know if it's actually

296
00:19:39,040 --> 00:19:42,200
available yet and I thought that's when we'd cover it but I just I kind of wanted

297
00:19:42,200 --> 00:19:45,520
to give people a heads up because it's an introduction course to Linux. Develop a

298
00:19:45,520 --> 00:19:48,240
good working knowledge of Linux using both the graphical interface and

299
00:19:48,240 --> 00:19:52,720
command-line covering the major Linux distribution families. You know what this

300
00:19:52,720 --> 00:19:57,880
used to be like a $2,100 course that's now free so I go take it. Man yeah

301
00:19:57,880 --> 00:20:00,680
holy cow that's a great savings. Yeah I'll put a link to that in the show

302
00:20:00,680 --> 00:20:06,840
notes and the class starts Q3 of 2014 so I you know what I thought about it

303
00:20:06,840 --> 00:20:08,760
because I was going to just cover it when it launched but I was like we might

304
00:20:08,760 --> 00:20:11,680
need to give people a heads up so they can go register so I'll put a link to

305
00:20:11,680 --> 00:20:16,440
that in the show notes if you guys want to register it's a $2,100 value so why

306
00:20:16,440 --> 00:20:20,080
not? Yeah right and it's kind of a no-brainer in its education. It sometimes is

307
00:20:20,080 --> 00:20:23,720
good to relearn some of the basics too. I think that can actually be really

308
00:20:23,720 --> 00:20:30,000
beneficial because if you if you're self-taught I took I can't remember what

309
00:20:30,000 --> 00:20:33,480
the course was called but I went to a one of our local community colleges and

310
00:20:33,480 --> 00:20:38,920
I took a course on sort of the basics of Linux and why the like I'd say 80% of it

311
00:20:38,920 --> 00:20:43,920
was this was years ago but 80% of it was sort of repeat it was good to see how

312
00:20:43,920 --> 00:20:48,000
other people use the tools and and kind of see like the intended implementation

313
00:20:48,000 --> 00:20:51,480
of those tools not the ones I taught myself so if you're kind of in that camp

314
00:20:51,480 --> 00:20:55,160
you might want to check it out it it's a good course and I think it's really cool

315
00:20:55,160 --> 00:20:57,400
they're making available and props to the Linux Foundation I'm not sure if

316
00:20:57,400 --> 00:20:59,760
they paid them for it or if they're just working with them but either way it's

317
00:20:59,760 --> 00:21:03,880
pretty cool. Well however it came about I mean that's a that's a big deal. Yeah so

318
00:21:03,880 --> 00:21:10,640
last last last last last in the past last last last on Sunday well maybe

319
00:21:10,640 --> 00:21:13,520
that's a better way to put it last Sunday we asked hey should hey guys

320
00:21:13,520 --> 00:21:16,840
should we drop should we drop the seasons what do you think you know like

321
00:21:16,840 --> 00:21:24,080
we last last week's last week's episode was season 31 episode 4 I think 5

322
00:21:24,080 --> 00:21:27,640
episode 5 and I can never remember the seasons Matt can never remember the

323
00:21:27,640 --> 00:21:31,120
seasons. And honestly the seasons came about back when we used to take

324
00:21:31,120 --> 00:21:34,000
breaks every 10 episodes which we realized didn't really work very well so

325
00:21:34,000 --> 00:21:37,000
we put out a poll and we embedded this poll in the show notes we made it

326
00:21:37,000 --> 00:21:40,680
available to the to the live stream should hey should we drop seasons in the

327
00:21:40,680 --> 00:21:43,520
Linux action show and just call it the production number so example last week's

328
00:21:43,520 --> 00:21:52,000
episode would be episode 305. 81% of the votes say drop the season number. Only

329
00:21:52,000 --> 00:21:57,880
19% of the votes say keep the season thing out of a total of 608 votes. I mean

330
00:21:57,880 --> 00:22:02,600
it seems like drop the season thing is just a runaway winner. It seems like it

331
00:22:02,600 --> 00:22:07,640
but that seems to have changed from previous inquiries. Yeah big time big big

332
00:22:07,640 --> 00:22:13,120
time I mean in the past this was almost it was reversed it was keep the seasons

333
00:22:13,120 --> 00:22:17,840
part of the I mean it's part of the show's legacy is what I was told and I'm

334
00:22:17,840 --> 00:22:21,560
you know I'm all for I was just worried about making the backlog confusing but

335
00:22:21,560 --> 00:22:25,440
I don't know maybe we'll do like a couple of weeks of transition or

336
00:22:25,440 --> 00:22:28,720
something so that way when people are watching the backlog they'll catch up on

337
00:22:28,720 --> 00:22:34,280
it I'm not quite sure but we'll link this poll if you are I don't know I mean

338
00:22:34,280 --> 00:22:36,680
I think at this time I think there's no pulling it out I think starting next

339
00:22:36,680 --> 00:22:39,580
last I don't know we'll just make the announcement and sort of phase it in I

340
00:22:39,580 --> 00:22:44,840
guess. I think so and I think you know we can we can transition by continuing to

341
00:22:44,840 --> 00:22:51,480
keep the seasons in the text portion like on YouTube and on the show page. I don't know though, see people have suggested that. Does that become confusing?

342
00:22:51,480 --> 00:22:56,200
Well I'll tell you what because part of this I'm being completely selfish here

343
00:22:56,200 --> 00:23:00,040
as part of this is I have a hard time keeping track of it and so I have to

344
00:23:00,040 --> 00:23:04,000
keep keeping track of it if we keep doing that and the other thing is is

345
00:23:04,000 --> 00:23:09,160
it's so long all spelled out that it wraps or gets cut off like on YouTube or

346
00:23:09,160 --> 00:23:12,640
on oh yeah so it'd be kind of nice just to drop it from the way it looks and so

347
00:23:12,640 --> 00:23:16,000
one of the areas I one of I know this is a dumb reason but one of the reasons I

348
00:23:16,000 --> 00:23:20,480
most want to drop the season thing is I hate how it looks on our website it's a

349
00:23:20,480 --> 00:23:24,520
visual thing and so that's kind of like it's the worst of both worlds for me

350
00:23:24,520 --> 00:23:27,440
because I have to keep track of the season thing if we go that way and I

351
00:23:27,440 --> 00:23:30,400
have to continue updating the website with it printed out like that which I

352
00:23:30,400 --> 00:23:33,160
don't like either I know it would be really convenient but that's kind of

353
00:23:33,160 --> 00:23:35,720
like why I brought this up again because that's just that's an old that's an old

354
00:23:35,720 --> 00:23:38,080
thing for me that's just bugged me for years and every time I'm posting the

355
00:23:38,080 --> 00:23:42,640
show I think of it it's like it just gnaws at me so I don't know it's such a

356
00:23:42,640 --> 00:23:46,240
clear decisive vote and you know what somebody in the chat room pointed out is

357
00:23:46,240 --> 00:23:50,320
perhaps the reason why in the past if people voted differently is maybe they

358
00:23:50,320 --> 00:23:52,920
didn't listen to as many podcasts and now they listen to more podcasts and all

359
00:23:52,920 --> 00:23:57,440
the other podcasts are doing numbers when we came up when we came up with the

360
00:23:57,440 --> 00:24:01,480
season thing there weren't a lot of there weren't a lot of examples to look

361
00:24:01,480 --> 00:24:05,160
to on how you should number your shows and we've been it's been going on for

362
00:24:05,160 --> 00:24:08,640
like seven eight years now right so like when we came up with that shenanigans

363
00:24:08,640 --> 00:24:12,800
we didn't have a lot of models to template after and I think now it's it's

364
00:24:12,800 --> 00:24:16,440
a foreign thing it's odd it's weird like people people I think it's one of the

365
00:24:16,440 --> 00:24:20,200
things when you first find the show is a little confusing to follow and it's even

366
00:24:20,200 --> 00:24:23,080
gonna be more confusing and once we switch to the numbers and it's even more

367
00:24:23,080 --> 00:24:26,000
confusing because earlier on it was all numbers and then we went to season then

368
00:24:26,000 --> 00:24:32,040
we're going back to numbers but at at at 81% of the vote I think the people have

369
00:24:32,040 --> 00:24:37,120
spoken well and see for me most of the stuff these days I'm following it on

370
00:24:37,120 --> 00:24:41,520
YouTube just because it's I you know I haven't used a podcatcher in a while it

371
00:24:41,520 --> 00:24:46,000
just it's kind of how I've progressed over and I honestly don't care I mean so

372
00:24:46,000 --> 00:24:49,440
for other shows I don't care what number it is I either have heard this episode or

373
00:24:49,440 --> 00:24:53,360
I haven't hey the top the subject is blank oh hey that's new I'll listen to

374
00:24:53,360 --> 00:24:56,320
it yeah like oh hey that's not new you know the chair was also making some

375
00:24:56,320 --> 00:24:59,600
great points a all our other shows on the network are number based not season

376
00:24:59,600 --> 00:25:02,840
based and Rekind points out that if you think about it it's ten episodes anyway

377
00:25:02,840 --> 00:25:05,760
so you can get the seasons from the episode number so you can figure it out

378
00:25:05,760 --> 00:25:09,160
pretty quick and flash update cheese bacon says that course still costs 250

379
00:25:09,160 --> 00:25:13,000
bucks when you put when you drop it down from 2,500 whatever was it's still a

380
00:25:13,000 --> 00:25:18,120
great value so put that's all have that straw poll in the show notes you have a

381
00:25:18,120 --> 00:25:23,520
few more days to vote but you know if honestly at this point if that if that

382
00:25:23,520 --> 00:25:29,160
keep the season thing creeped up I would just assume it's bots yeah I think it's

383
00:25:29,160 --> 00:25:33,960
done but I in fairness of letting people get their chance to vote it will be in

384
00:25:33,960 --> 00:25:36,920
there because I got a note from somebody who said I didn't really wasn't quite

385
00:25:36,920 --> 00:25:40,800
clear on where I should go to vote and I want to cast my vote so I will put it in

386
00:25:40,800 --> 00:25:43,960
this week's show notes as well links to everything we talk about guys they're

387
00:25:43,960 --> 00:25:47,440
almost always in the show notes we just make it easy that way for you and it's

388
00:25:47,440 --> 00:25:51,160
you just go to Jupiter broadcasting comm you click on the episode you listen to

389
00:25:51,160 --> 00:25:55,560
and scroll down past the download links and I think this is the part that throws

390
00:25:55,560 --> 00:25:58,800
people off is they see the show description and they see the download

391
00:25:58,800 --> 00:26:01,880
links and they think that's the show notes but if you keep scrolling your

392
00:26:01,880 --> 00:26:04,440
page down you'll see links to everything we talked about and

393
00:26:04,440 --> 00:26:09,200
essentially in order that we covered them okay another update the course will

394
00:26:09,200 --> 00:26:12,160
be free when it launches so it's if you want to take the course right now it's

395
00:26:12,160 --> 00:26:17,880
just a discount okay very good lunches whatever yeah why not right okay so I

396
00:26:17,880 --> 00:26:21,480
want to I want to clear some room so we can get into this display server debate

397
00:26:21,480 --> 00:26:25,560
before we do that I want to thank Ting now Ting is mobile that makes sense my

398
00:26:25,560 --> 00:26:28,880
mobile service provider and Matt's mobile service provider Matt I got a I

399
00:26:28,880 --> 00:26:33,420
got a note from Ting saying they they got your banana activated but it's not

400
00:26:33,420 --> 00:26:38,240
gonna be able to do picture messaging so no picture messaging because turns out

401
00:26:38,240 --> 00:26:41,760
banana doesn't have a camera oh my god who'd have thought right I know thought

402
00:26:41,760 --> 00:26:45,000
who would have fortunately the other phone does so right right so go to

403
00:26:45,000 --> 00:26:48,200
linux.ting.com that's where you get started that'll take you to Ting's

404
00:26:48,200 --> 00:26:52,720
website Ting has some really unique approaches to the mobile industry that

405
00:26:52,720 --> 00:26:56,760
this is why I'm a Ting subscriber right here is because I think Ting is gonna

406
00:26:56,760 --> 00:27:00,760
pressure a lot of companies into changing their behavior and we know

407
00:27:00,760 --> 00:27:05,920
that needs to happen no contract no early termination fee and you only pay

408
00:27:05,920 --> 00:27:10,080
for what you use each line is six dollars flat so you get a phone you're

409
00:27:10,080 --> 00:27:14,800
paying six dollars for that phone per month plus taxes and then your usage

410
00:27:14,800 --> 00:27:18,800
it's straightforward I have a couple of phones right now on my Ting account and

411
00:27:18,800 --> 00:27:22,480
it's still cheaper than when I had one phone on one of the other carriers it's

412
00:27:22,480 --> 00:27:25,920
unbelievable they have a savings calculator you can try it out you can go

413
00:27:25,920 --> 00:27:29,800
over there and see what you would say by switching to Ting and if you're in a

414
00:27:29,800 --> 00:27:32,240
contract right now they have an early termination relief program they'll pay

415
00:27:32,240 --> 00:27:36,840
up to $75 per line that you have to get canceled there's some new phones that

416
00:27:36,840 --> 00:27:40,040
have just been announced so keep an eye out on the Ting blog because I think

417
00:27:40,040 --> 00:27:44,840
you'll see an update about those soon and Ting one of the reasons Ting is able

418
00:27:44,840 --> 00:27:48,160
to offer rates as low as they do and focus on the customer experience and

419
00:27:48,160 --> 00:27:51,560
focus on the devices in fact I just recently watched a video with one of

420
00:27:51,560 --> 00:27:55,200
their executives and he said you know for us it comes down to two things that

421
00:27:55,200 --> 00:28:01,040
we're really focused on right now one is devices and two is coverage and if you

422
00:28:01,040 --> 00:28:05,640
haven't checked out the Ting service in a while it might be worth reevaluating

423
00:28:05,640 --> 00:28:09,240
it they're writing on the sprint network and sprint has this program that they've

424
00:28:09,240 --> 00:28:13,880
implemented starting in 2013 it's still going on it's called the sprint network

425
00:28:13,880 --> 00:28:17,960
vision and you can google this and it is sprints plan to consolidate multiple

426
00:28:17,960 --> 00:28:21,000
network technologies into one new seamless network with a goal of

427
00:28:21,000 --> 00:28:25,080
increasing efficiency and enhancing network coverage and as of March 17th

428
00:28:25,080 --> 00:28:31,280
they now provide LTE service in 402 markets nationwide such as Atlanta

429
00:28:31,280 --> 00:28:35,640
Boston Dallas Houston Los Angeles Manhattan Milwaukee Queens Salt Lake

430
00:28:35,640 --> 00:28:41,240
City San Diego right here in the Pacific Northwest I've got awesome LTE up at the

431
00:28:41,240 --> 00:28:45,660
new studio and we're talking tri-band LTE to the good stuff the multi-band

432
00:28:45,660 --> 00:28:50,720
stuff so you've got lots of good signal to work with sprint wants to make 2014

433
00:28:50,720 --> 00:28:55,680
the year that everybody's opinion changes and the thing is is Ting is just

434
00:28:55,680 --> 00:28:58,960
gonna benefit from this immensely because they already have got the

435
00:28:58,960 --> 00:29:04,400
customer service and completely dialed in if you call them at 1 8 5 5 8 4 6 4

436
00:29:04,400 --> 00:29:10,760
3 8 9 that's 1 8 5 5 Ting FTW anytime between 8 p.m. and 8 a.m. Eastern like so

437
00:29:10,760 --> 00:29:15,200
right now if you called Ting's customer support a real person answers the phone

438
00:29:15,200 --> 00:29:19,360
like an actual human being who's gonna solve your problem and let me tell you

439
00:29:19,360 --> 00:29:23,000
something I have been dealing with contractors and companies of

440
00:29:23,000 --> 00:29:27,200
contractors and banks building this new studio I have been on hold and going

441
00:29:27,200 --> 00:29:31,840
through phone trees more than I have in years combined I am so appreciative that

442
00:29:31,840 --> 00:29:35,320
if I ever have an issue with my Ting service I can reach an actual person

443
00:29:35,320 --> 00:29:39,560
right away because my time is valuable I have deadlines myself I don't want to

444
00:29:39,560 --> 00:29:43,280
wait on these companies that I am paying and Ting understands that they can focus

445
00:29:43,280 --> 00:29:46,840
on the customer service they can focus on the device when you buy a device from

446
00:29:46,840 --> 00:29:50,960
Ting you own that device just like you want to own your laptop just like you

447
00:29:50,960 --> 00:29:54,520
want to own your desktop you wouldn't want to pay in a two-year contract where

448
00:29:54,520 --> 00:29:58,040
you're spreading the cost of your laptop out and you don't actually own the

449
00:29:58,040 --> 00:30:01,320
device until the ends of that two-year contract where you just have to re up

450
00:30:01,320 --> 00:30:05,200
anyways it's a system that is designed to extract as much money out of you as

451
00:30:05,200 --> 00:30:10,040
possible and it is a system that artificially hides the actual cost of

452
00:30:10,040 --> 00:30:14,480
these devices it's BS and Ting is trying to change all of that and you can help

453
00:30:14,480 --> 00:30:18,440
take part of that by going to linux.ting.com where they will take $25 off

454
00:30:18,440 --> 00:30:22,960
your first month of service or $25 off your first device go check out that

455
00:30:22,960 --> 00:30:26,920
control panel go check out those devices go check out that savings calculator go

456
00:30:26,920 --> 00:30:29,800
look at their blog for those device updates which you will see very soon

457
00:30:29,800 --> 00:30:35,000
linux.ting.com was where you get started and a big thank you to Ting for

458
00:30:35,000 --> 00:30:39,240
sponsoring Linux Unplugged they got some great videos on that blog right now they

459
00:30:39,240 --> 00:30:42,400
have some app pick videos they got an interview with one of their executives

460
00:30:42,400 --> 00:30:47,440
and they have a they have a giveaway of a Nexus 5 and $400 of Ting credit which

461
00:30:47,440 --> 00:30:51,800
wraps up on March 28th you can find out about all of that over at ting.com

462
00:30:51,800 --> 00:30:55,960
slash blog get started by going to linux.ting.com so that way they know you

463
00:30:55,960 --> 00:30:59,240
heard about it right here on Linux Unplugged and a big thank you to Ting

464
00:30:59,240 --> 00:31:06,880
for sponsoring Linux Unplugged love it okay so we talked with Kevin and I felt

465
00:31:06,880 --> 00:31:13,480
like we got you know a good a good look into where the where the where the where

466
00:31:13,480 --> 00:31:18,840
the mirror team is coming from pretty pretty quickly after that Martin who is

467
00:31:18,840 --> 00:31:23,800
the developer of Kaywin went to his block and said wait a minute wait a

468
00:31:23,800 --> 00:31:28,720
minute hold on guys the display server matters in a really big way he said I

469
00:31:28,720 --> 00:31:33,040
don't know how to put this but the best description is I am shocked I am shocked

470
00:31:33,040 --> 00:31:37,280
the canonical is still not seeing the problems they caused by introducing multiple

471
00:31:37,280 --> 00:31:43,400
display servers he has a great post it's pretty long he documents technically why

472
00:31:43,400 --> 00:31:47,720
you can't rely on the toolkit to interface with the display server he

473
00:31:47,720 --> 00:31:52,320
uses a screenshot application as a great example he's actually got code cited in

474
00:31:52,320 --> 00:31:57,200
his blog post he's totally worth checking out because it from a technical

475
00:31:57,200 --> 00:31:59,840
standpoint if this has been something you've been kicking around and you

476
00:31:59,840 --> 00:32:04,040
really want to see like the proof in the pudding that's a good post but I think

477
00:32:04,040 --> 00:32:09,880
I'll just focus on how he wraps he wraps this blog post by saying in summary

478
00:32:09,880 --> 00:32:13,200
canonical created a huge problem by introducing another display server and

479
00:32:13,200 --> 00:32:17,440
it's affecting all of us and they still are in a denial state it's not a simple

480
00:32:17,440 --> 00:32:22,000
it's not it's not as simple it's not as simple as the toolkit will solve it it

481
00:32:22,000 --> 00:32:24,800
can cause issues everywhere and that affects the development and maintenance

482
00:32:24,800 --> 00:32:29,000
cost of all applications my recommendation to application developers

483
00:32:29,000 --> 00:32:33,720
is to never accept patches for this mess canonical created if they want that

484
00:32:33,720 --> 00:32:38,760
fixed they should do it in their own downstream patches distro specific

485
00:32:38,760 --> 00:32:42,040
problems need to be fixed in the distros I certainly will not accept

486
00:32:42,040 --> 00:32:45,760
patches for frameworks and applications I maintain this is not for political

487
00:32:45,760 --> 00:32:49,640
reasons that is often claimed but for technical ones because I cannot test

488
00:32:49,640 --> 00:32:53,480
patches mirror is not available on Debian and our CI system cannot build

489
00:32:53,480 --> 00:32:57,120
them which is their continuous integration system so he's making a

490
00:32:57,120 --> 00:33:01,760
technical argument here saying look I'm not able to test these properly it's

491
00:33:01,760 --> 00:33:05,760
their responsibility and I think it's disingenuous for them to downplay the

492
00:33:05,760 --> 00:33:10,400
importance of the display server okay you know the way I see it is I

493
00:33:10,400 --> 00:33:12,880
completely agree with the you know he shouldn't have to deal with the patches

494
00:33:12,880 --> 00:33:16,240
and all that I you know hey if you don't want to participate don't you know if I

495
00:33:16,240 --> 00:33:19,200
from a developer point of view I think that makes perfect sense it's like look

496
00:33:19,200 --> 00:33:23,000
you know I'm not gonna even participate in that mess good luck but I'm not doing

497
00:33:23,000 --> 00:33:26,840
it that's that's the right approach has it or will it create problems I don't

498
00:33:26,840 --> 00:33:30,280
think we're there yet I think I think we're definitely speculating but I think

499
00:33:30,280 --> 00:33:34,760
he's got some great points so definitely think you know I agree and I but here's

500
00:33:34,760 --> 00:33:39,720
where I here's where my opinion has begun to diverge from that position that

501
00:33:39,720 --> 00:33:42,320
I have pretty much held since the announcement of mirror because that's

502
00:33:42,320 --> 00:33:45,680
essentially what you just said summarizes my outlook on this whole

503
00:33:45,680 --> 00:33:50,360
thing my a general approach to covering both sides of this debate right I think

504
00:33:50,360 --> 00:33:54,740
you know after talking with canonical after reading these posts after going on

505
00:33:54,740 --> 00:34:01,320
my rainy walk which is now sunny out go figure I've come down much much harder

506
00:34:01,320 --> 00:34:07,520
on this issue and all credit really goes to Aaron Saigo who who created I mean

507
00:34:07,520 --> 00:34:11,400
Martin and Aaron man they tag-team this stuff right and so Aaron comes out with

508
00:34:11,400 --> 00:34:17,080
a sort of a response to Martin's response and he said Martin's response

509
00:34:17,080 --> 00:34:19,800
demonstrates how many application developers will end up having to care

510
00:34:19,800 --> 00:34:23,240
about this kind of thing he made a convincing argument and yet he only

511
00:34:23,240 --> 00:34:26,800
touched on a few examples like the screenshot application but many more

512
00:34:26,800 --> 00:34:31,120
could be added such as using an on-screen display or the OSD as like

513
00:34:31,120 --> 00:34:33,920
what like Clementine does when you change the track and it'll have an on

514
00:34:33,920 --> 00:34:39,680
you know a pop-up of this track is now playing these kind of things like that

515
00:34:39,680 --> 00:34:42,560
like those types of on-screen displays and applications with screen capture

516
00:34:42,560 --> 00:34:46,440
features such as case snapshot or the GIMP these kinds of things are not

517
00:34:46,440 --> 00:34:50,240
generally provided by the toolkits themselves and require interacting with

518
00:34:50,240 --> 00:34:53,160
the display server so anybody who's making those apps can't rely on the

519
00:34:53,160 --> 00:34:57,560
toolkit the OSD use case is quite a little illuminating Aaron says future

520
00:34:57,560 --> 00:35:01,680
versions of plasma will provide a DBUS service that can be used for simple OSD

521
00:35:01,680 --> 00:35:04,880
needs like changing the volume and application getting an on-screen

522
00:35:04,880 --> 00:35:09,160
indication of the volume level I expect in time the services will grow features

523
00:35:09,160 --> 00:35:13,040
to support more sophisticated on-screen display patterns as this will not only

524
00:35:13,040 --> 00:35:16,320
increase desktop integration but provide a way to work around security

525
00:35:16,320 --> 00:35:20,480
restrictions to place systems like Wayland and mirror in force but what happens

526
00:35:20,480 --> 00:35:25,440
when this magical new beat DBUS service doesn't exist like it might not on a

527
00:35:25,440 --> 00:35:30,920
unity desktop here's another example status notifiers or perhaps called app

528
00:35:30,920 --> 00:35:35,640
indicators on Ubuntu this is a DBUS service and it's not available anywhere

529
00:35:35,640 --> 00:35:40,880
the answer until now has been to fall back to legacy x11 specific X embed

530
00:35:40,880 --> 00:35:46,000
method when you don't find the back-end system you need does this affect users

531
00:35:46,000 --> 00:35:49,280
these kinds of things the increase in development burden will will mean users

532
00:35:49,280 --> 00:35:52,120
of certain display systems will experience degraded performance and

533
00:35:52,120 --> 00:35:55,120
features in application application development will slow down as

534
00:35:55,120 --> 00:35:58,240
developers come to grips with the diversity and in turn quality will

535
00:35:58,240 --> 00:36:01,920
suffer as it tends to with multiple code paths when they're not easily tested in

536
00:36:01,920 --> 00:36:06,840
parallel let's let's stop talking about the future for a second and let's talk

537
00:36:06,840 --> 00:36:11,280
about something I think most desktop Linux users who bounce around desktop

538
00:36:11,280 --> 00:36:15,560
environments have experienced you you ever seen this problem at where like you

539
00:36:15,560 --> 00:36:18,920
got it you got an application and it has like a little system tray icon and

540
00:36:18,920 --> 00:36:25,440
maybe that particular developer decided I don't want to implement the the app

541
00:36:25,440 --> 00:36:29,240
indicator support for Ubuntu so when you're in Ubuntu unity desktop you don't

542
00:36:29,240 --> 00:36:32,360
get an icon up in the right hand corner but when you're in KDE you do get the

543
00:36:32,360 --> 00:36:35,400
icon and no maybe it's hit and miss you know you've seen this kind of thing

544
00:36:35,400 --> 00:36:39,040
right oh absolutely absolutely and it's something I've definitely experienced

545
00:36:39,040 --> 00:36:43,800
but it also colors based on the the level of difficulty which direction I'm

546
00:36:43,800 --> 00:36:48,000
going to go through sure because I've certainly had that experience both in

547
00:36:48,000 --> 00:36:53,460
unity and KDE less than no but yeah it's you know certainly certainly happened

548
00:36:53,460 --> 00:36:56,660
sure and see I feel like I've had more success and like almost all of the

549
00:36:56,660 --> 00:37:01,040
little tray icon show up in KDE it's totally hit and miss in unity and no

550
00:37:01,040 --> 00:37:05,040
one's gotten a lot better about it but it's still hitting miss and no and this

551
00:37:05,040 --> 00:37:10,240
itty bitty tiny bit of fragmentation was introduced when a couple of different

552
00:37:10,240 --> 00:37:13,520
desktops decided to implement or really one desktop decided to implement

553
00:37:13,520 --> 00:37:17,480
app indicators differently than the other desktops and even today years

554
00:37:17,480 --> 00:37:22,760
later we still get that wrong and let's let's be clear for what it is it looks

555
00:37:22,760 --> 00:37:28,360
like amateur hour it looks pathetic it's something that the Mac OS or Chrome OS

556
00:37:28,360 --> 00:37:32,440
or Windows would never get wrong and does not ever get wrong it looks

557
00:37:32,440 --> 00:37:35,560
ridiculous and I think we have to be clear when we're having this

558
00:37:35,560 --> 00:37:41,040
conversation that this type of little itty bitty fragmentation has much wider

559
00:37:41,040 --> 00:37:45,720
ramifications and how people appreciate and experience a desktop and this as I'm

560
00:37:45,720 --> 00:37:48,720
going to use this example because it's something we can all relate to and then

561
00:37:48,720 --> 00:37:51,160
we're going to look at the larger ramifications of the fragmentation at

562
00:37:51,160 --> 00:37:54,240
the display server level but what I want us all to think about as we are moving

563
00:37:54,240 --> 00:37:58,640
forward in this conversation is look at the future directory of Linux desktop

564
00:37:58,640 --> 00:38:02,440
Linux quote-unquote desktop Linux competition because it's not Windows it

565
00:38:02,440 --> 00:38:06,240
might be Windows today it might be Windows for the next few years but five

566
00:38:06,240 --> 00:38:10,760
ten years down the road on the high end it's Mac OS 10 on the low end it's

567
00:38:10,760 --> 00:38:15,720
Chrome OS and Android and those desktops would never be caught dead with that

568
00:38:15,720 --> 00:38:19,880
kind of amateur our implementation that was not going to happen and that is our

569
00:38:19,880 --> 00:38:23,120
competition if you look at the forward directory of the trajectory of the

570
00:38:23,120 --> 00:38:26,680
desktop market that's who we're competing against and those platforms

571
00:38:26,680 --> 00:38:31,800
specifically Android Chrome OS and Mac OS 10 already have a worldwide

572
00:38:31,800 --> 00:38:36,520
distribution system with massive amounts of momentum behind them they have stores

573
00:38:36,520 --> 00:38:41,240
in almost every country around the world you can order online they have a brand

574
00:38:41,240 --> 00:38:44,520
image around them and that's what future Linux is going to be competing with

575
00:38:44,520 --> 00:38:48,300
that's what we're competing with and we are not even bringing our a game we're

576
00:38:48,300 --> 00:38:51,920
not even we're not even doing a very good job with our current setup and now

577
00:38:51,920 --> 00:38:56,280
we're about to introduce fragmentation at the core level of the desktop that we

578
00:38:56,280 --> 00:39:02,240
have a never had fragmentation before and B are fundamentally under resourced to

579
00:39:02,240 --> 00:39:06,360
properly develop it as it is the X team already split to have one team work on

580
00:39:06,360 --> 00:39:11,000
x11 and one term one team work on Wayland we'll think about this what if

581
00:39:11,000 --> 00:39:15,120
Ubuntu had in some parallel universe had decided to go with Wayland that would

582
00:39:15,120 --> 00:39:19,320
mean millions of more users banging on Wayland that would mean more bug fixes

583
00:39:19,320 --> 00:39:23,080
more refinement at a higher pace to Wayland making that core part of the

584
00:39:23,080 --> 00:39:26,960
Linux desktop experience more refined more tested more performant all of these

585
00:39:26,960 --> 00:39:29,760
things that matter especially as game developers are moving over to Linux but

586
00:39:29,760 --> 00:39:32,640
instead we are splitting our resource we are splitting our attention we are

587
00:39:32,640 --> 00:39:35,840
splitting our testing we're splitting our development time and at the same

588
00:39:35,840 --> 00:39:38,960
time we introducing all kinds of fragmentations that developers are gonna

589
00:39:38,960 --> 00:39:42,480
have to account for because here's how humans work right you're gonna have your

590
00:39:42,480 --> 00:39:45,320
distribution you're gonna develop on that it's either gonna be a Wayland

591
00:39:45,320 --> 00:39:48,680
based distribution or a mirror based distribution and whatever it is that's

592
00:39:48,680 --> 00:39:51,440
the one you're gonna properly test on because that's the one you use and

593
00:39:51,440 --> 00:39:54,280
that's the one that the features are gonna work correctly on when I go to

594
00:39:54,280 --> 00:39:58,520
the next track in Clementine whichever distro display server the Clementine

595
00:39:58,520 --> 00:40:01,880
developer is using for that's the one I need to use if I want the next track on

596
00:40:01,880 --> 00:40:06,800
screen notification and that's even more amateur hour we are introducing a level

597
00:40:06,800 --> 00:40:10,160
of fragmentation at the core of Linux that will mean that applications are

598
00:40:10,160 --> 00:40:13,640
even more hit and miss now and what they feature does this application have a

599
00:40:13,640 --> 00:40:16,460
screenshot button maybe it does maybe it doesn't depends on what desktop you're

600
00:40:16,460 --> 00:40:19,440
on do you get an on-screen display maybe you do maybe you don't and here's

601
00:40:19,440 --> 00:40:22,520
another reason why you need to care because if you only want to use unity

602
00:40:22,520 --> 00:40:25,400
for the rest of your life then mirrors gonna work great for you but if you ever

603
00:40:25,400 --> 00:40:27,960
want to use Ubuntu with another distribution well you better learn how

604
00:40:27,960 --> 00:40:31,320
to install Wayland you better figure out you're gonna this is gonna be a

605
00:40:31,320 --> 00:40:35,400
explosion in blog posts and how to load Wayland on Ubuntu desktops because

606
00:40:35,400 --> 00:40:39,480
everybody out there that wants to use anything but unity ever is gonna need to

607
00:40:39,480 --> 00:40:42,920
learn how to install Wayland on their Ubuntu machine and that's another reason

608
00:40:42,920 --> 00:40:48,000
why you should care the reasons stack up and this these very issues these these

609
00:40:48,000 --> 00:40:51,840
fundamental issues are exactly the kind of thing that affect users so why I might

610
00:40:51,840 --> 00:40:55,240
not care if it's Mira Wayland I sure as hell care if my application doesn't work

611
00:40:55,240 --> 00:40:58,360
correctly I sure as hell care if I have to spend an hour figuring out install

612
00:40:58,360 --> 00:41:02,960
Wayland on my Ubuntu install so that way I can try out gnome 3 whatever it's it

613
00:41:02,960 --> 00:41:07,920
does absolutely affect users it fundamentally affects users I think it

614
00:41:07,920 --> 00:41:12,320
also slows down adoption in a very serious way because I think over time

615
00:41:12,320 --> 00:41:15,280
yeah and that's that's the piece that I see the bigger because at the end of the

616
00:41:15,280 --> 00:41:19,440
day granted I fall back to my old the market will sort it out and it will but

617
00:41:19,440 --> 00:41:22,440
we shouldn't have to sort it out in the first place I mean that's the big piece

618
00:41:22,440 --> 00:41:26,580
of it right theorists that work spending unneeded time sorting this out when it

619
00:41:26,580 --> 00:41:30,760
shouldn't have been an issue in the first place of all sorted but it's gonna

620
00:41:30,760 --> 00:41:33,760
be like a ten-year process developers are always like all Linux is too

621
00:41:33,760 --> 00:41:37,380
fragmented I don't know what I should target this just changes the equation

622
00:41:37,380 --> 00:41:43,480
even more you look at how 3d games capture the mouse pointer that's gonna

623
00:41:43,480 --> 00:41:47,520
be different between desktops or display environments if that's gonna game

624
00:41:47,520 --> 00:41:51,080
developers are gonna have to think about this kind of stuff and the other thing

625
00:41:51,080 --> 00:41:54,120
is I you know from my old contracting background and Aaron touches on this in

626
00:41:54,120 --> 00:41:57,440
his post and I thought it was really well done he says think about it from an

627
00:41:57,440 --> 00:42:02,640
IT support perspective right you already get people like what I I had several

628
00:42:02,640 --> 00:42:06,360
clients that had Linux on the desktop and you know the question of the

629
00:42:06,360 --> 00:42:09,160
problems would always arise if they one person was on one distro and another

630
00:42:09,160 --> 00:42:12,400
person was another distro one person to have something work another person

631
00:42:12,400 --> 00:42:15,800
wouldn't and then it would be oh well you need the build utils well what's

632
00:42:15,800 --> 00:42:19,120
that called on fedora what's that called on Ubuntu I mean it's already the

633
00:42:19,120 --> 00:42:23,120
diversity that we have there while in some ways in strengthens and empowers

634
00:42:23,120 --> 00:42:27,360
Linux it also from a support standpoint is already too complicated well that's

635
00:42:27,360 --> 00:42:29,840
what's just gonna happen when the display server changes currently as

636
00:42:29,840 --> 00:42:34,200
Aaron writes guides and manuals covering Linux can assume that X org is running

637
00:42:34,200 --> 00:42:38,120
and other troubleshooting tips with that assumption can be in place this is also

638
00:42:38,120 --> 00:42:42,000
one reason why the Linux world is standardizing on system D is such a good

639
00:42:42,000 --> 00:42:46,320
thing support will become easier when we don't have to ask are you using system

640
00:42:46,320 --> 00:42:50,560
with system 5 in it system 7 in it system D right start you just have to

641
00:42:50,560 --> 00:42:53,800
start troubleshooting at that level multiple display systems will produce a

642
00:42:53,800 --> 00:42:57,920
similar result in commercial settings this also translates to more cost

643
00:42:57,920 --> 00:43:01,480
particularly to companies who provide professional IT support for companies

644
00:43:01,480 --> 00:43:05,640
running desktop systems does this matter to users well it means less clear

645
00:43:05,640 --> 00:43:09,720
documentation more difficult support for Linux and higher commercial support

646
00:43:09,720 --> 00:43:14,720
costs so yes I would argue that matters to users and man did that resonate with

647
00:43:14,720 --> 00:43:19,780
me because I have been I have watched Linux go from the ha ha ha joke when I

648
00:43:19,780 --> 00:43:23,440
recommend it to yeah let's implement Linux right and I I have been

649
00:43:23,440 --> 00:43:27,200
advocating the deployment of Linux and businesses for years and I was already

650
00:43:27,200 --> 00:43:31,200
feeling the pushback from like that my doctor clients all wanted max and all my

651
00:43:31,200 --> 00:43:36,120
doctors wanted to get max and I really it is you know as soon as that support

652
00:43:36,120 --> 00:43:39,840
argument is brought up my arguments are clearly deflated because how do you

653
00:43:39,840 --> 00:43:43,920
compete with Apple stores everywhere how do you compete with a you know a

654
00:43:43,920 --> 00:43:47,640
warranty in writing and a system that's honestly less of a moving target it's

655
00:43:47,640 --> 00:43:51,840
really hard to fight against that yep it's a unified experience that I don't

656
00:43:51,840 --> 00:43:55,600
even if we go system D we go way and we go the whole thing we still don't have a

657
00:43:55,600 --> 00:43:59,920
unified experience we don't yeah at any level and it's happening here that it's

658
00:43:59,920 --> 00:44:03,120
happening at a time where we could be coalescing around Wayland we could be

659
00:44:03,120 --> 00:44:06,560
coalescing around system D right and these are major coalitions that could be

660
00:44:06,560 --> 00:44:10,920
happening and exact and he says they get yeah go ahead I was gonna say if they

661
00:44:10,920 --> 00:44:14,760
get those two and they get the packaging figured out you know Bob's your uncle

662
00:44:14,760 --> 00:44:18,960
you're good doubt those three things together would do wonders he Aaron

663
00:44:18,960 --> 00:44:22,360
points out you know this matters to display systems one thing free software

664
00:44:22,360 --> 00:44:25,960
does not have is enough of its graphic developers with X org there were exactly

665
00:44:25,960 --> 00:44:29,320
one place you could contribute to if you wanted to push for the display stack on

666
00:44:29,320 --> 00:44:33,120
a free software operating system such as Linux then Mir came along and introduced

667
00:44:33,120 --> 00:44:36,860
a split in the developer community which means fewer human resources applied to a

668
00:44:36,860 --> 00:44:41,160
topic that really needs every single pair of hands we have instead of one

669
00:44:41,160 --> 00:44:44,400
system that as good as we can make it we'll end up with a slower development

670
00:44:44,400 --> 00:44:48,920
of two systems with the risk of more of them being less than great and I think

671
00:44:48,920 --> 00:44:52,440
this part could be argued because you could say good competition spurs good

672
00:44:52,440 --> 00:44:56,640
innovation but at the same time if you know if you're familiar with the with

673
00:44:56,640 --> 00:45:00,880
the core X development you know how bad that situation is and how much we do

674
00:45:00,880 --> 00:45:05,040
need all hands on deck for that kind of thing and you know Aaron points that

675
00:45:05,040 --> 00:45:08,380
this is obviously no minor task mirror was originally promised to be the

676
00:45:08,380 --> 00:45:13,360
display system of choice and desktop Ubuntu in 2013 10 then it was pushed

677
00:45:13,360 --> 00:45:18,480
back to 2014 04 and now it's pushed out to 2016 04 this is not a trivial sort of

678
00:45:18,480 --> 00:45:23,000
project and making it harder by limiting human resources available is unwise and

679
00:45:23,000 --> 00:45:27,600
I think what we fall back on too often and I think something we can chant

680
00:45:27,600 --> 00:45:31,520
there's a couple of things we chant a lot in the Linux community well yeah

681
00:45:31,520 --> 00:45:34,720
maybe Katie isn't making you happy but you know what it's great cuz you got

682
00:45:34,720 --> 00:45:38,560
choice well that choice is not all that great if none of the choices are awesome

683
00:45:38,560 --> 00:45:43,480
so but you know Saigo says he's hopeful he says I do hold out hope the free

684
00:45:43,480 --> 00:45:46,640
software community is speaking with a singular voice and that voice is saying

685
00:45:46,640 --> 00:45:50,760
after X it's Wayland Wayland itself is still being worked on and has reached a

686
00:45:50,760 --> 00:45:53,840
level of maturity that allows real-world use several of the major

687
00:45:53,840 --> 00:45:57,920
desktop products are well on their way of supporting it as a first-class option

688
00:45:57,920 --> 00:46:01,900
including plasma by KD gnome shell and enlightenment all the major toolkits

689
00:46:01,900 --> 00:46:04,560
upstream have support for Wayland today and Wayland has the broadest driver

690
00:46:04,560 --> 00:46:09,040
support next only to X itself so that's a good point to be made so he's a little

691
00:46:09,040 --> 00:46:11,720
hopeful and he goes on to say the mere team keeps bringing up these topics

692
00:46:11,720 --> 00:46:15,720
although so does the KD team what's up but he says maybe they need to defend

693
00:46:15,720 --> 00:46:22,360
their position so does the KD team I can emphasize with how how they how how I

694
00:46:22,360 --> 00:46:24,800
don't want to repeat what he's saying here but what he says it sure I can

695
00:46:24,800 --> 00:46:27,280
emphasize that they are working on something they truly believe in and

696
00:46:27,280 --> 00:46:30,560
they're being told it's the wrong thing to do he says I feel it is their right

697
00:46:30,560 --> 00:46:34,800
to develop mirror at their heart's content and I cheer their moxie similarly

698
00:46:34,800 --> 00:46:38,560
it is our right as developers and users to choose what to support and what not

699
00:46:38,560 --> 00:46:41,920
to such decision-making is aided by having an accurate and complete

700
00:46:41,920 --> 00:46:45,160
information and it's with that goal in mind that I wrote the post about I

701
00:46:45,160 --> 00:46:49,000
thought this is a great post because I think what we are entering into is an

702
00:46:49,000 --> 00:46:53,720
era of unprecedented fragmentation in the graphical space for Linux and I

703
00:46:53,720 --> 00:46:57,840
wanted and I and I I want to reel it back in here because I'm pretty upset

704
00:46:57,840 --> 00:47:01,200
about this the more I think about this because what I see this potentially as

705
00:47:01,200 --> 00:47:10,360
is I see this as I don't want to use the words I'm thinking of but the these are

706
00:47:10,360 --> 00:47:15,480
politically correct version maybe well it is it is hobbling desktop

707
00:47:15,480 --> 00:47:20,960
applications in order to push forward the Ubuntu agenda because I don't

708
00:47:20,960 --> 00:47:25,560
believe we can we have already seen unity itself introduce a level a level

709
00:47:25,560 --> 00:47:28,680
of fragmentation that is below commercial desktops that would be

710
00:47:28,680 --> 00:47:32,600
intolerable for commercial desktop we have already seen that frankly already

711
00:47:32,600 --> 00:47:37,440
seen the the play out of that so when you introduce some fundamental stuff at

712
00:47:37,440 --> 00:47:42,000
the at the display server level you either have two options as a developer

713
00:47:42,000 --> 00:47:46,560
you try to target both main display servers and one of those targets is

714
00:47:46,560 --> 00:47:50,080
probably not going to be as optimal as the other or you simply ignore one all

715
00:47:50,080 --> 00:47:56,360
together and either scenario users lose so if you don't care about what display

716
00:47:56,360 --> 00:47:59,880
server you're using then you probably ought to stop using Linux because at the

717
00:47:59,880 --> 00:48:03,400
at the end of the day this is going to fundamentally change how the application

718
00:48:03,400 --> 00:48:07,440
landscape looks on Linux and even if it is just one application has an

719
00:48:07,440 --> 00:48:11,560
on-screen display on one display server and doesn't on the other that is enough

720
00:48:11,560 --> 00:48:15,840
to have me upset because that is unacceptable it is not good enough and I

721
00:48:15,840 --> 00:48:20,160
want the most kick-ass display server possible we have the most kick-ass

722
00:48:20,160 --> 00:48:23,400
kernel possible how about we get the rest of the stack as kick-ass as we can

723
00:48:23,400 --> 00:48:27,880
and to sabotage a display server like this for one company's personal gain in

724
00:48:27,880 --> 00:48:31,400
a mobile market that is not likely to be tremendously successful anyways feels

725
00:48:31,400 --> 00:48:35,800
awfully selfish to me right now well you know I honestly and I think even valve

726
00:48:35,800 --> 00:48:39,600
will be included in this I don't think anyone's gonna give a ripping rats butt

727
00:48:39,600 --> 00:48:43,080
about mirror one way or the other going forward I really don't I think just from

728
00:48:43,080 --> 00:48:47,400
the backyard developer guy who's doing this in his boxer shorts down to the

729
00:48:47,400 --> 00:48:50,480
multi-billion dollar corporation I don't I think they're gonna look at this

730
00:48:50,480 --> 00:48:54,580
fundamentally me like you know honestly I'm gonna go whichever way the

731
00:48:54,580 --> 00:48:58,400
community is going whichever way the drop you know the video card vendors are

732
00:48:58,400 --> 00:49:02,200
going whichever way direction they're headed basically it's a numbers game and

733
00:49:02,200 --> 00:49:05,760
so I think this potentially I'm hoping I'm right on this that this could work

734
00:49:05,760 --> 00:49:08,960
itself out fairly early on I'm hoping the more I think about it the more I

735
00:49:08,960 --> 00:49:14,760
think that it's definitely early days and I think something I wanted to kind

736
00:49:14,760 --> 00:49:18,200
of kick around to the mumble room is maybe abstraction can solve because

737
00:49:18,200 --> 00:49:22,640
we're all looking at this with today's set of problems and today's set of tools

738
00:49:22,640 --> 00:49:27,500
to solve this problem and I think also you know something that Martin and Aaron

739
00:49:27,500 --> 00:49:31,580
were trying to make the push is developers are users too and in fact I

740
00:49:31,580 --> 00:49:34,960
think developers make up a good user base of Linux right I think that's

741
00:49:34,960 --> 00:49:38,680
probably who a lot of the developed users are our developers so by impacting

742
00:49:38,680 --> 00:49:41,560
developers you are impacting the users of Linux and I think you're gonna that's

743
00:49:41,560 --> 00:49:44,280
it that's a segment that's gonna continue to outgrow any other segment of

744
00:49:44,280 --> 00:49:49,360
Linux usage but I don't anybody the mumble room want to take a first shot at

745
00:49:49,360 --> 00:49:52,440
this is this a is this a problem that future Chris and Matt aren't even gonna

746
00:49:52,440 --> 00:49:58,120
have to worry about they can ask you a question Chris go for it puppy what's

747
00:49:58,120 --> 00:50:05,760
the single most used display server on Linux right now as in in most in most

748
00:50:05,760 --> 00:50:11,960
deployments back sorry no surface flinger on Android in way more

749
00:50:11,960 --> 00:50:17,480
deployments than anything else Wayland mere or XOR mmm good trick question

750
00:50:17,480 --> 00:50:25,920
poppy surface flinger service flinger is the display server on Android nobody

751
00:50:25,920 --> 00:50:31,240
seems to have told them that they can't have their own internal project for a

752
00:50:31,240 --> 00:50:35,760
display server which is used but don't you think the difference the device but

753
00:50:35,760 --> 00:50:39,440
the difference there do we get why do we get that flag but isn't the difference

754
00:50:39,440 --> 00:50:43,880
there those are that but that's a that's sort of in a sense a whole cloth

755
00:50:43,880 --> 00:50:47,120
creation right where it's a whole new ecosystem with a whole new set of apps

756
00:50:47,120 --> 00:50:51,720
that are designed for that system but on on the Linux just like a bantu phone

757
00:50:51,720 --> 00:50:55,000
yeah exactly if anything the most biggest problem is it's a whole

758
00:50:55,000 --> 00:50:59,200
different paradigm compared to our legacy or at least what everything else

759
00:50:59,200 --> 00:51:03,680
has ever been I mean I think Poby makes a good point but I think that I think

760
00:51:03,680 --> 00:51:08,880
the the subtle difference is that you only have to target search for surface

761
00:51:08,880 --> 00:51:11,560
flinger on Android all right so when you're making your Android apps it's not

762
00:51:11,560 --> 00:51:14,320
really something that even has to be a consideration but on no you don't you

763
00:51:14,320 --> 00:51:18,180
don't because the stack that's abstracted away from you in exactly the

764
00:51:18,180 --> 00:51:22,240
same way that Robert and Robert car have both blogged about that stuff so you

765
00:51:22,240 --> 00:51:25,480
would get away from you by the talk you would disagree then with the assertion

766
00:51:25,480 --> 00:51:29,680
that Saigo and Martin are making that it's not quite as abstract as everyone

767
00:51:29,680 --> 00:51:34,760
would like no I'm suggesting that there are certain edge cases where you need to

768
00:51:34,760 --> 00:51:38,760
know about the underlying fundamental bits and pieces and yeah a screenshot

769
00:51:38,760 --> 00:51:45,040
tool is a real easy shooting fish in a barrel oh you know one to pick because

770
00:51:45,040 --> 00:51:50,400
it obviously needs interaction with the display server but there are way more

771
00:51:50,400 --> 00:51:54,360
applications out there than there are screenshot tools and there are way more

772
00:51:54,360 --> 00:51:58,560
developers out there developing tools with toolkits which will just work on

773
00:51:58,560 --> 00:52:03,480
these display servers and won't have this problem hmm so you say the

774
00:52:03,480 --> 00:52:07,440
canonical has the amount of influence and power that Google has when it comes

775
00:52:07,440 --> 00:52:11,920
to the mobile marketplace is just a little bit of a excessive state did I

776
00:52:11,920 --> 00:52:19,800
say that when it comes to comparing surface slinger to mirror a little bit

777
00:52:19,800 --> 00:52:25,760
it's not actually important I'm suggesting is that that it's it's

778
00:52:25,760 --> 00:52:30,080
entirely possible for someone to come up with a display server on Linux which

779
00:52:30,080 --> 00:52:35,640
isn't Wayland and isn't X and for them to deploy that to a large number of

780
00:52:35,640 --> 00:52:40,760
handsets around the world and it work and for application developers to do

781
00:52:40,760 --> 00:52:44,280
their work on top of that and not really care that it's surface fling underneath

782
00:52:44,280 --> 00:52:48,000
and not X org or Wayland or whatever so I think the fundamental disagreement I

783
00:52:48,000 --> 00:52:53,440
see here is one side thinks that it's really not gonna be that big of an

784
00:52:53,440 --> 00:52:56,960
ramifications for developers or application functionality and another

785
00:52:56,960 --> 00:53:01,040
side seems to disagree with that position the surface area of mobile is

786
00:53:01,040 --> 00:53:07,960
also far smaller in a way that it's very specific its kernel is predefined other

787
00:53:07,960 --> 00:53:13,480
than the cyanogen mods or whatever personally built mods that Android has

788
00:53:13,480 --> 00:53:21,120
otherwise the desktop is very very different there's a lot more and it's a

789
00:53:21,120 --> 00:53:24,080
lot harder to do which is one of the reasons why Mia hasn't landed in the

790
00:53:24,080 --> 00:53:29,080
desktop right and what it's kind of the point you mentioned that if it comes

791
00:53:29,080 --> 00:53:32,520
down to here's a toolkit you can use to build your app and it would guarantee

792
00:53:32,520 --> 00:53:37,240
it'll work that works but that's not a model that Linux is typically gone well

793
00:53:37,240 --> 00:53:42,000
I think I think their argument is is no toolkit is actually that comprehensive

794
00:53:42,000 --> 00:53:46,520
there's there's bugs or there's just gaps in what it's capable of providing

795
00:53:46,520 --> 00:53:52,280
that eventually a special case of unity pretty much only I think their argument

796
00:53:52,280 --> 00:53:55,840
is eventually you know there's there's you have to close a few gaps and when

797
00:53:55,840 --> 00:53:58,480
you do that you got to write directly to the display server you can't write to

798
00:53:58,480 --> 00:54:02,600
the toolkit and I think I think that I think the concept of a perfect toolkit

799
00:54:02,600 --> 00:54:06,400
is sort of sort of like a it's sort of like a dream but I don't think we've

800
00:54:06,400 --> 00:54:11,240
ever in the history of computing achieved the perfect toolkit no and I

801
00:54:11,240 --> 00:54:15,320
agree with the there are going to be holes in every toolkit and there are bits

802
00:54:15,320 --> 00:54:19,920
that we're gonna have to do at the plumbing layer and components that we're

803
00:54:19,920 --> 00:54:24,560
gonna have to provide that won't be provided by Qt we know that and we're

804
00:54:24,560 --> 00:54:29,840
building those as we go and yes it's a bit of a learning exercise for us as

805
00:54:29,840 --> 00:54:38,120
well but I don't think the the criticism is is necessary I don't think it's as

806
00:54:38,120 --> 00:54:44,400
warranted as as some might think it it's in some ways it feels like okay right

807
00:54:44,400 --> 00:54:46,880
we've got them to switch the system D right what's next

808
00:54:46,880 --> 00:54:53,400
I asked me let's see if we can get him to change that one now right yeah I I

809
00:54:53,400 --> 00:54:59,240
guess what I'm worried about is I'm worried that wishful thinking is

810
00:54:59,240 --> 00:55:03,160
influencing that thinking because it in an ideal world I think I think that's

811
00:55:03,160 --> 00:55:07,240
too ideal and I think the history of specifically desktop Linux shows us that

812
00:55:07,240 --> 00:55:11,320
things are very fluid and things are never quite as great as we want them to

813
00:55:11,320 --> 00:55:15,580
be and the idealism usually gives away a little bit of pragmatism and I think at

814
00:55:15,580 --> 00:55:21,160
the end of the day there's a lot of bets on things kind of coming together at the

815
00:55:21,160 --> 00:55:28,320
right time to make all of this work I think I think this is time is coming to

816
00:55:28,320 --> 00:55:33,360
an end soon because I mean they've been alienating and alienating the user base

817
00:55:33,360 --> 00:55:40,840
so much over the years with unity with near with yeah I don't know about that

818
00:55:40,840 --> 00:55:44,720
you know right I hear that a lot when Riley but the thing is is evidence of it

819
00:55:44,720 --> 00:55:48,640
the thing is is you can't discount the massive cloud deployment that Ubuntu has

820
00:55:48,640 --> 00:55:52,240
which will naturally push a lot of developers and sysadmins to want to run

821
00:55:52,240 --> 00:55:56,760
Ubuntu I mean they're doing really great there and I think also I think let's

822
00:55:56,760 --> 00:56:01,720
look at it from us from an all from an alternate perspective what if we fast

823
00:56:01,720 --> 00:56:06,800
forward three years down the road or 2016 or whatever it is where we have

824
00:56:06,800 --> 00:56:10,920
like this great QT based desktop which I think a lot of us think QT has a strong

825
00:56:10,920 --> 00:56:14,040
future ahead of it you know maybe this is a little bit further down the road

826
00:56:14,040 --> 00:56:18,400
but it's sitting on top of system D the only piece that has a lot of questions

827
00:56:18,400 --> 00:56:24,280
is how is I think what people are really worried about is the fragmentation being

828
00:56:24,280 --> 00:56:27,560
introduced at such a critical layer I mean we can all argue about package

829
00:56:27,560 --> 00:56:31,240
names and how they're different between all distributions or the locations of

830
00:56:31,240 --> 00:56:34,200
certain libraries on how they can be different or where the config goes can

831
00:56:34,200 --> 00:56:39,820
be different but we've we as a user base and as developers have never had to

832
00:56:39,820 --> 00:56:44,000
worry about that display layer I mean yes it's it's gotten old and it you know

833
00:56:44,000 --> 00:56:48,560
it's time has come to be replaced but at the same time it has been at least a

834
00:56:48,560 --> 00:56:54,200
consistent thing not just across Linux but also across Linux and the BSDs it is

835
00:56:54,200 --> 00:56:57,800
a consistent aspect for software development when you're targeting these

836
00:56:57,800 --> 00:57:01,520
systems that is now no longer going to be consistent and I think you cannot

837
00:57:01,520 --> 00:57:09,200
accept for that other platform that you keep forgetting about that has more

838
00:57:09,200 --> 00:57:12,920
deployments than all of those well that I mean there is a reality to that but I

839
00:57:12,920 --> 00:57:16,960
you know I'm very focused on the actual desktop aspect of Linux and maybe

840
00:57:16,960 --> 00:57:20,600
you know down the road I mean we're already seeing more and more laptops

841
00:57:20,600 --> 00:57:24,520
that are shipping with Android I just recently saw a post for a full-fledged

842
00:57:24,520 --> 00:57:29,200
desktop with a keyboard mouse and monitor running Android so I mean you

843
00:57:29,200 --> 00:57:32,960
know it could be a fair point that again we don't know what the future has ahead

844
00:57:32,960 --> 00:57:37,440
of us but right now I'm really focused on you know making my desktop version of

845
00:57:37,440 --> 00:57:42,200
Linux better than ever and I'm I'm really worried that if we cock this up

846
00:57:42,200 --> 00:57:47,680
and and if we get this wrong at this critical time with with new types of

847
00:57:47,680 --> 00:57:51,960
companies getting on board and making great products but also all of the

848
00:57:51,960 --> 00:57:55,640
desktop environments are getting to the point now where they're so good that

849
00:57:55,640 --> 00:57:58,880
it's these little things that bug us like the indicators and all this kind of

850
00:57:58,880 --> 00:58:02,880
stuff we're really getting to a good point and if we kind of screw this up I

851
00:58:02,880 --> 00:58:10,320
just Android and Chrome OS and and the Mac are gonna eat us alive so in three

852
00:58:10,320 --> 00:58:16,840
weeks time and thereabouts three weeks and two days I'm going to ship 1404 and

853
00:58:16,840 --> 00:58:22,680
that's gonna have X as the display server right and unity 7 with comp is

854
00:58:22,680 --> 00:58:27,680
everything you know and love or hate depending on your point of view and that

855
00:58:27,680 --> 00:58:33,600
gets support for five years so if you're a game developer you can still write

856
00:58:33,600 --> 00:58:37,000
your same game using your same libraries I don't by the way if you

857
00:58:37,000 --> 00:58:41,000
wanted to put it across to mere STL supports mere as well as supporting

858
00:58:41,000 --> 00:58:47,080
Wayland so it's I don't I think you're painting a rather bleak outlook for

859
00:58:47,080 --> 00:58:53,000
something that's nothing not gonna happen anytime soon that's true I mean

860
00:58:53,000 --> 00:58:57,840
that is not going to be the default on the desktop for some time I think Aaron

861
00:58:57,840 --> 00:59:01,960
was a little bit pessimistic saying mere is pushed back to 1604 you know what I

862
00:59:01,960 --> 00:59:05,960
think it is poppies I think we have been over the years those of us who've been

863
00:59:05,960 --> 00:59:11,360
running desktop Linux as our main desktop for so long now have watched these sort

864
00:59:11,360 --> 00:59:14,640
of peaks and then it's almost like watching the price of Bitcoin man it

865
00:59:14,640 --> 00:59:19,320
it peaks and then it crashes and it peaks and it crashes and we're so gun

866
00:59:19,320 --> 00:59:22,920
shy we've been so we're so we've been whipped so many times now that when we

867
00:59:22,920 --> 00:59:26,400
sniff something that's gonna screw things up there's this really strong

868
00:59:26,400 --> 00:59:31,640
reaction and I you know you mentioned the system to debacle I am seeing a

869
00:59:31,640 --> 00:59:35,000
pivot now in these conversations to more of the technical side and I think you

870
00:59:35,000 --> 00:59:39,920
would agree that one of the things that sort of was really strong on the system

871
00:59:39,920 --> 00:59:43,000
beside of the argument for Debian's in its system was they had the technical

872
00:59:43,000 --> 00:59:46,280
argument and that technical argument was really strong and now you're seeing them

873
00:59:46,280 --> 00:59:50,760
bust that out on the on the display server argument so we talked about this

874
00:59:50,760 --> 00:59:55,680
a few weeks ago where the the Linux community and people who are interested

875
00:59:55,680 --> 01:00:01,300
in Linux news I agree with you are watching you know LW when and watching

876
01:00:01,300 --> 01:00:07,120
for Onyx and and and maybe slash dot if that still exists and and seeing these

877
01:00:07,120 --> 01:00:12,440
news articles about all kinds of you know developments in in various camps

878
01:00:12,440 --> 01:00:17,400
and yeah reacting in the same way that you might react to like coin or Bitcoin

879
01:00:17,400 --> 01:00:23,240
and and I think it's kind of overdone because you know in the past I I've had

880
01:00:23,240 --> 01:00:29,280
people bark at me on Twitter you know complaining that Ubuntu was removing

881
01:00:29,280 --> 01:00:33,880
GIMP from the CD and I remember him saying whoever it was this mythical

882
01:00:33,880 --> 01:00:37,520
person on Twitter say to me mark my words this was the end of Ubuntu

883
01:00:37,520 --> 01:00:42,120
because you're removing GIMP from the CD I mean get real right we've all and

884
01:00:42,120 --> 01:00:46,400
we've all watched like these these huge upsets over stuff that ends up not being

885
01:00:46,400 --> 01:00:51,040
a big one but those have never been something as fundamental as a display

886
01:00:51,040 --> 01:00:56,660
server and I argue that the system D and the upstart one you know that was

887
01:00:56,660 --> 01:01:00,200
brought to a head by the fact that Debian had to make a decision and Debbie

888
01:01:00,200 --> 01:01:02,560
and made that at the end of the day that's less important than display

889
01:01:02,560 --> 01:01:09,560
server itself I mean we're reading any of the news articles over the last three

890
01:01:09,560 --> 01:01:12,640
months there's no way you could think that this was less important than

891
01:01:12,640 --> 01:01:16,200
anything else right well I feel like it is though like in a long-term

892
01:01:16,200 --> 01:01:20,560
ramifications standpoint because what what we really need to do is make the

893
01:01:20,560 --> 01:01:24,800
application experience better and I think what we I think the scenario I

894
01:01:24,800 --> 01:01:30,960
could potentially see playing out is on the unity desktop unity 8 or unity 9 you

895
01:01:30,960 --> 01:01:34,400
know whatever it is at this point like all of those applications are really

896
01:01:34,400 --> 01:01:37,980
gonna be top-tier after they've had a few releases and had some time in the

897
01:01:37,980 --> 01:01:42,120
market they'll they'll really be great and they'll work you know the marriage

898
01:01:42,120 --> 01:01:45,720
between mirror and the desktop environment and even the applications

899
01:01:45,720 --> 01:01:52,200
it's going to feel so refined and cohesive but I what I worry about is is

900
01:01:52,200 --> 01:01:57,200
outside of that I'm worried about certain desktop applications that don't

901
01:01:57,200 --> 01:02:00,240
have the support and I think as people start to wrap their support for certain

902
01:02:00,240 --> 01:02:03,680
features I think as people start to wrap their their minds around that I could

903
01:02:03,680 --> 01:02:07,800
see this erupting to even bigger than the system D debate because it honestly

904
01:02:07,800 --> 01:02:13,000
affects more people potentially well I mean your point is well taken it is

905
01:02:13,000 --> 01:02:17,080
your developers it might you know I don't think my mom's gonna be affected

906
01:02:17,080 --> 01:02:21,080
by this well she knows what display so she doesn't even know what web browser

907
01:02:21,080 --> 01:02:25,000
she uses just clicks the pretty colored icon in the corner of the screen your

908
01:02:25,000 --> 01:02:30,360
mom could be affected by this by she could say come on my on my computer here

909
01:02:30,360 --> 01:02:33,840
I no longer get the Thunderbird pop-up about a new email message I really like

910
01:02:33,840 --> 01:02:37,560
having that and you know what do you have to say to her as well you know the

911
01:02:37,560 --> 01:02:41,160
developers for Thunderbird decided not to implement support for how we do that

912
01:02:41,160 --> 01:02:48,720
in Mir so so in I heard you during your rather breathless rant earlier and talk

913
01:02:48,720 --> 01:02:53,080
about some of the issues that may come up you know the potential issues that

914
01:02:53,080 --> 01:02:56,640
may come up and wait what you got to remember is that we don't develop

915
01:02:56,640 --> 01:03:00,240
Ubuntu in a vacuum it's in all the packages that we put in the archive or

916
01:03:00,240 --> 01:03:05,400
in the archive and coexist with other desktops like Kubuntu KDE like Zubuntu

917
01:03:05,400 --> 01:03:10,160
and Lubuntu and we test a lot of this stuff on different environments it's not

918
01:03:10,160 --> 01:03:14,280
it's not just developed and tested and the developer says oh it works on my

919
01:03:14,280 --> 01:03:19,960
desktop ship it sure it doesn't work quite like that well so I guess the the

920
01:03:19,960 --> 01:03:24,160
end point I'm trying to make is I think probably the biggest takeaway is we have

921
01:03:24,160 --> 01:03:29,640
a lot of time like you mentioned the LTS is about to ship with X and then a lot

922
01:03:29,640 --> 01:03:34,200
can change in that five years that LTS has support but I think I at the same

923
01:03:34,200 --> 01:03:38,160
time you know you can you can look at the past Ubuntu controversies that

924
01:03:38,160 --> 01:03:43,160
really haven't turned out to be that big of a deal and that that doesn't

925
01:03:43,160 --> 01:03:47,200
necessarily mean that every situation moving forward is that is the same thing

926
01:03:47,200 --> 01:03:51,360
that future situations need to be evaluated on their own merits and their

927
01:03:51,360 --> 01:03:56,120
own you know their own impacts and this is a multi-level issue you know you have

928
01:03:56,120 --> 01:04:01,240
the the politics of it which are which are way too hostile already you have the

929
01:04:01,240 --> 01:04:07,400
potential people are just making almost no deal out of this it's making a mole

930
01:04:07,400 --> 01:04:11,440
hill out of a mountain in controversy or at least in contrast compared to the

931
01:04:11,440 --> 01:04:15,520
usual thing they're sweeping it under the carpet as if this is absolutely

932
01:04:15,520 --> 01:04:20,320
unimportant anyone I think this is core that's an interesting I think that's how

933
01:04:20,320 --> 01:04:25,720
I see this right now and at the same time like I'm of a mixed I'm of a mixed

934
01:04:25,720 --> 01:04:30,860
mind on it because I I've also witnessed in open source how a little you know

935
01:04:30,860 --> 01:04:36,000
coke versus Pepsi can benefit the overall desktop and can benefit overall

936
01:04:36,000 --> 01:04:43,200
Linux and so I'm not I'm not staunchly against mirror on on that principle but

937
01:04:43,200 --> 01:04:50,200
what I am staunchly against is having Linux desktop get any more shitty if it

938
01:04:50,200 --> 01:04:56,720
gets if it gets any worse at all we are screwed I mean we have literally we have

939
01:04:56,720 --> 01:05:00,900
literally across the board we have got to be over the next few years it is go

940
01:05:00,900 --> 01:05:05,920
time to play at our a game and I guess what I worry about is if if we are

941
01:05:05,920 --> 01:05:10,040
even playing at our b-minus game because of some differences between

942
01:05:10,040 --> 01:05:15,080
applications on different display servers man the developers will look at

943
01:05:15,080 --> 01:05:18,280
that as an excuse not to develop for Linux end users will look at that as

944
01:05:18,280 --> 01:05:21,940
confusing and make Linux hard to understand and sysadmins and support

945
01:05:21,940 --> 01:05:26,040
people will look at that and say how do I how do I provide cost-effective

946
01:05:26,040 --> 01:05:31,400
support for that and the argument could be made the argument could be made that

947
01:05:31,400 --> 01:05:35,120
if it was all Wayland across the board this wouldn't even be a concern and I

948
01:05:35,120 --> 01:05:37,640
think that at the issue right there when people start thinking about that it gets

949
01:05:37,640 --> 01:05:40,040
them a little fired up you know what I mean it gets them a little something

950
01:05:40,040 --> 01:05:45,280
else competition there should be healthy competition within our ecosystem in a

951
01:05:45,280 --> 01:05:51,000
way mirror was made in haste before Wayland's true potential could be

952
01:05:51,000 --> 01:05:59,640
realized well yeah in the system it's got to be tested I kind of feel like I

953
01:05:59,640 --> 01:06:03,600
kind of feel like no I kind of feel like if mirror was announced two years ago it

954
01:06:03,600 --> 01:06:06,360
would like I think a lot of people I think there's I think this would be a

955
01:06:06,360 --> 01:06:10,360
lot different I think they I think you know you got to give canonical credit

956
01:06:10,360 --> 01:06:15,160
they were early to have whatever they were early supporters of Wayland but I

957
01:06:15,160 --> 01:06:19,480
think you know I understand there's market realities there's products you

958
01:06:19,480 --> 01:06:22,960
need to be able to ship I produce a Linux show on an edit on a Mac I

959
01:06:22,960 --> 01:06:25,840
understand there's compromises that need to be made to produce the product to get

960
01:06:25,840 --> 01:06:28,880
it to the market at a way that's cost-effective and actually deliverable

961
01:06:28,880 --> 01:06:32,440
and I think that is where mirror came out of and that is a completely

962
01:06:32,440 --> 01:06:35,720
reasonable and understandable perspective but the problem is is that

963
01:06:35,720 --> 01:06:39,800
doesn't mean it still doesn't introduce potentially future oddities throughout

964
01:06:39,800 --> 01:06:43,800
the entire desktop I mean it is it is it is fundamentally something that could

965
01:06:43,800 --> 01:06:48,320
happen and if it does happen I just I do not feel like we can afford for it to

966
01:06:48,320 --> 01:06:52,720
happen and so we either have all desktops potentially reduced in

967
01:06:52,720 --> 01:06:55,540
functionality it's some degree even if it's just an on-screen display not

968
01:06:55,540 --> 01:06:58,720
showing up or somehow it all gets abstracted out it all works out and

969
01:06:58,720 --> 01:07:02,840
that's a potential to I don't know two things I want to bring up real quick

970
01:07:02,840 --> 01:07:05,840
because I think we need to take a trip back in time to a little thing that was

971
01:07:05,840 --> 01:07:10,680
called early revisions of Jack okay I remember a very popular newbie

972
01:07:10,680 --> 01:07:14,880
distribution that was absolutely all about Jack to screw everything else this

973
01:07:14,880 --> 01:07:18,160
is what the future is never mind the fact that I could literally load a web

974
01:07:18,160 --> 01:07:21,920
page and break Linux audio that's a big freaking deal I honestly thought it was

975
01:07:21,920 --> 01:07:25,960
the end of Linux as we knew it it was a big problem flash forward to today the

976
01:07:25,960 --> 01:07:29,320
new devil is pulse audio I mean they're different animals granted but they still

977
01:07:29,320 --> 01:07:32,000
interact with your ability to hear sounds on your computer and I suppose

978
01:07:32,000 --> 01:07:36,080
that's poppies point yeah yeah we will work through it now I will advocate

979
01:07:36,080 --> 01:07:41,000
against that yes I do think that if potentially this does create new

980
01:07:41,000 --> 01:07:43,980
problems it's gonna it's gonna drag us through the mud a little longer is it

981
01:07:43,980 --> 01:07:48,760
gonna be the is it gonna be a major problem no I think a major delay yes

982
01:07:48,760 --> 01:07:54,280
major problem not so much but I because I've seen this movie before I'm not that

983
01:07:54,280 --> 01:07:57,480
concerned about it because I've seen audio is a big deal it's a lot like

984
01:07:57,480 --> 01:08:01,200
display if you you know you see you hear those are kind of big deals I think

985
01:08:01,200 --> 01:08:03,720
we'll work through it I think we'll work through it I think we just need to kind

986
01:08:03,720 --> 01:08:08,120
of you know try to kind of come together kumbaya whatever the hell we got it you

987
01:08:08,120 --> 01:08:12,440
could make the argument that maybe pulse audio if it had something to compete

988
01:08:12,440 --> 01:08:14,920
against something to compare itself something to measure against something

989
01:08:14,920 --> 01:08:19,560
to you know live up to maybe it would have taken a different route and perhaps

990
01:08:19,560 --> 01:08:24,360
yeah well it provides me with functionality I want that I can't get without I mean

991
01:08:24,360 --> 01:08:27,360
that's just factually true yeah and I'm willing to say with we have to go

992
01:08:27,360 --> 01:08:29,920
through a growth period maybe there's some oddities like the Thunderbird

993
01:08:29,920 --> 01:08:33,120
notification doesn't show up but in the end if these two things can make each

994
01:08:33,120 --> 01:08:38,800
other better and that creates a more kick-ass display server yeah and we may

995
01:08:38,800 --> 01:08:42,640
have some third option from with your whatever stick with your grass yes or

996
01:08:42,640 --> 01:08:46,160
whatever you know whatever your favorite stable distribution is that sticks with

997
01:08:46,160 --> 01:08:53,360
X until Wayland is ready yes until Mary what happens a year or two years from

998
01:08:53,360 --> 01:08:58,280
now when 1404 is old and still like 12 or 4 is now and he had nothing to switch

999
01:08:58,280 --> 01:09:05,040
to I would say I would like to say I mean my biggest disagreement with Matt's

1000
01:09:05,040 --> 01:09:11,000
point is I think I might have was that you Tyler you might have a little buzz

1001
01:09:11,000 --> 01:09:14,720
there on your line I know Derek Devlin wanted to get a point in yeah I just

1002
01:09:14,720 --> 01:09:18,440
like to interject because I've actually done some research and the differences

1003
01:09:18,440 --> 01:09:23,320
between X Wayland and mere and I see as mere taken a different approach

1004
01:09:23,320 --> 01:09:29,960
technically so X 11 was this huge thing that pretty much initially was very

1005
01:09:29,960 --> 01:09:34,680
small and started patching up and because it was just adding futures that

1006
01:09:34,680 --> 01:09:38,680
in futures and new features the result was the colossal huge amount of software

1007
01:09:38,680 --> 01:09:43,720
that it is today now recent improvements have been stripping those things out

1008
01:09:43,720 --> 01:09:48,080
Wayland actually comes and says we're gonna define a very basic premise and

1009
01:09:48,080 --> 01:09:52,000
you can build on top of it and move to some of the responsibilities that are

1010
01:09:52,000 --> 01:09:57,120
currently being addressed by X and letting that to the compositor or to the

1011
01:09:57,120 --> 01:10:02,720
plugins so Weston is doing kind of that work mere takes a different approach and

1012
01:10:02,720 --> 01:10:08,920
says look developers are used to program against something that actually has these

1013
01:10:08,920 --> 01:10:14,720
futures present and they only deal with a very small subset of these features so

1014
01:10:14,720 --> 01:10:19,280
they will actually only use those and mir says that we are going to provide

1015
01:10:19,280 --> 01:10:24,400
the same rich set of futures however because we are implementing mere with

1016
01:10:24,400 --> 01:10:28,680
those concepts in minds we are actually going to provide a more stable platform

1017
01:10:28,680 --> 01:10:32,040
for that that's why I wanted to interject on this matter because

1018
01:10:32,040 --> 01:10:37,240
technically they approach the problem very differently Wayland moves the

1019
01:10:37,240 --> 01:10:42,640
problem upwards and mirror tries to solve the problem in the same section

1020
01:10:42,640 --> 01:10:48,800
that X was solving in a way and when we actually think about most applications

1021
01:10:48,800 --> 01:10:57,080
yes actually don't mess up with display server and that's a fact current this

1022
01:10:57,080 --> 01:11:02,680
window managers and game developers use libraries and those libraries do Windows

1023
01:11:02,680 --> 01:11:06,600
support Mac support Linux support and those platforms are completely different

1024
01:11:06,600 --> 01:11:11,240
how is that possible it's simply just making an abstraction and from that

1025
01:11:11,240 --> 01:11:15,760
perspective the same way libraries appear to allow cross-pollination of

1026
01:11:15,760 --> 01:11:21,000
code I'm not sure why wouldn't be possible to make for the display servers

1027
01:11:21,000 --> 01:11:25,640
so that's why I was saying that the paradigm of mirrors completely different

1028
01:11:25,640 --> 01:11:31,280
as XOR again Wayland have I think which are normal which composite to a certain

1029
01:11:31,280 --> 01:11:36,840
screen or a certain surface and that is resultantly put on like to the video

1030
01:11:36,840 --> 01:11:41,400
driver and to your screen it takes a completely different approach by having

1031
01:11:41,400 --> 01:11:48,280
a completely different compositor per a window or per UI element and that is a

1032
01:11:48,280 --> 01:11:56,200
what is it a simple no they're all compositing together separately and then

1033
01:11:56,200 --> 01:11:59,960
it actually gets put onto the screen which is why that is slightly more

1034
01:11:59,960 --> 01:12:04,960
pluggable but it's completely more interconnected to each other because

1035
01:12:04,960 --> 01:12:10,360
they're all their own compositor yes it is actually more modular in that sense

1036
01:12:10,360 --> 01:12:15,120
but in the other sense let's let's take the other view I'm the final developer

1037
01:12:15,120 --> 01:12:19,460
I'm consuming one of these compositors so wouldn't I have then if my

1038
01:12:19,460 --> 01:12:23,920
application tends to do some work that matches best with this compositor and

1039
01:12:23,920 --> 01:12:28,280
then matches best with the other one am I not just duplicating my efforts again

1040
01:12:28,280 --> 01:12:33,880
I guess it's really if we are looking at from a technical perspective the

1041
01:12:33,880 --> 01:12:37,840
approach of mirror taking is we have these model and people are used to it

1042
01:12:37,840 --> 01:12:41,160
and there's also another thing I would like actually to point out is a lot of

1043
01:12:41,160 --> 01:12:46,680
people could seem to say that canonical is backing mirror for their company

1044
01:12:46,680 --> 01:12:53,200
issues and they want to solve that in you know going to more a pleasant way

1045
01:12:53,200 --> 01:12:58,440
let's say for their business requirements you might say yes yeah yeah exactly but

1046
01:12:58,440 --> 01:13:04,040
Wayland isn't that innocent either if we think about it because some of the ex

1047
01:13:04,040 --> 01:13:08,240
developers were actually Nokia developers and other companies developers

1048
01:13:08,240 --> 01:13:13,440
which moved to Wayland so I'm not seeing the point there so I wouldn't even say

1049
01:13:13,440 --> 01:13:17,400
that that's an argument at all I think you guys have both heaven's revenge and

1050
01:13:17,400 --> 01:13:20,520
daredevil and I've that's funny the opposite names there I think you both

1051
01:13:20,520 --> 01:13:25,040
have raised some interesting perspectives on how mirror could provide

1052
01:13:25,040 --> 01:13:29,480
solid competition to Wayland and kind of kick Wayland in the ass in a few areas

1053
01:13:29,480 --> 01:13:33,960
to make it you know shore up like if it really truly has a stable ABI API the

1054
01:13:33,960 --> 01:13:39,120
developer I mean that's a huge advantage for for developers that's an example of

1055
01:13:39,120 --> 01:13:43,480
some good competition you know a little injecting some good competition why I

1056
01:13:43,480 --> 01:13:49,760
took the bet go ahead Tyler if you don't mind the point I was trying to make

1057
01:13:49,760 --> 01:13:55,480
earlier again with what Matt was saying about his comparison with the audio

1058
01:13:55,480 --> 01:14:01,200
stuff earlier I think the biggest issue we have with mirror and Wayland

1059
01:14:01,200 --> 01:14:06,440
especially if they're competing against each other is who are the driver

1060
01:14:06,440 --> 01:14:10,760
developers going to cater to you right that's a big part of the picture that

1061
01:14:10,760 --> 01:14:15,680
right now I mean seems to be predominantly in Wayland's favor yes and

1062
01:14:15,680 --> 01:14:21,800
no if you think about it the mere design actually allows the current model of

1063
01:14:21,800 --> 01:14:26,200
proprietary drivers to be more attractive but isn't that supposed to be

1064
01:14:26,200 --> 01:14:30,400
just temporary well another thing is they're competing against each other

1065
01:14:30,400 --> 01:14:33,560
it's still open source though isn't it I mean it can still look at each other's

1066
01:14:33,560 --> 01:14:41,040
code freely borrow from it yes bingo drivers let's say the Nvidia drivers if

1067
01:14:41,040 --> 01:14:44,640
you want to use the good ones they're proprietary and they might end up being

1068
01:14:44,640 --> 01:14:50,840
working only well with Wayland well video has to actually put resources

1069
01:14:50,840 --> 01:14:55,520
towards supporting mirror specifically because that is our only problem in open

1070
01:14:55,520 --> 01:14:59,560
source is the binary blobs of our video drivers almost every other part of our

1071
01:14:59,560 --> 01:15:04,640
ecosystem is open yeah it's a problem we're having with you know with mobile

1072
01:15:04,640 --> 01:15:09,280
devices as well from more so with mobile devices because they all have loads of

1073
01:15:09,280 --> 01:15:13,520
binary blobs to get them working and that's partly why we've gone down the

1074
01:15:13,520 --> 01:15:18,680
road we have of using you know some of the Android driver stack to enable that

1075
01:15:18,680 --> 01:15:25,000
quickly but listen I know I know you you're you're quite keen on impressing

1076
01:15:25,000 --> 01:15:30,720
the point that that we as a Linux community are on the hook for this and

1077
01:15:30,720 --> 01:15:34,640
we've got to you know get this done nobody understands that any more than us

1078
01:15:34,640 --> 01:15:42,080
we've got at least two handset vendors which we're you know gonna be

1079
01:15:42,080 --> 01:15:46,600
contractually obliged to provide software for this year and that puts

1080
01:15:46,600 --> 01:15:50,000
enormous pressure on us to get this right because these things are going to

1081
01:15:50,000 --> 01:15:55,000
be shipping to real people you know proper handsets they can order buy and

1082
01:15:55,000 --> 01:16:00,760
use as their real phone on a daily basis and so we we are very cognizant of of

1083
01:16:00,760 --> 01:16:06,320
that pressure and trying to get the intricate technicalities of those pieces

1084
01:16:06,320 --> 01:16:15,120
working correctly and so yeah we're aware of that I was almost tragic when

1085
01:16:15,120 --> 01:16:21,520
the time of XP is big ending its life we messed up and conquering the world when

1086
01:16:21,520 --> 01:16:25,800
I screwed up but now it's peas end of life is coming up and now we have

1087
01:16:25,800 --> 01:16:30,240
another shot but now canonical has given us another well I probably points out

1088
01:16:30,240 --> 01:16:37,280
those users would be switching to LTS for Linux exactly I think Alan is Alan's

1089
01:16:37,280 --> 01:16:40,520
points well taken most companies have already switched to Windows 7 I would

1090
01:16:40,520 --> 01:16:45,800
like to make another point regarding drivers the good news is AMD does plan

1091
01:16:45,800 --> 01:16:49,600
on going completely open source for the kernel driver and leaving the

1092
01:16:49,600 --> 01:16:53,360
proprietary stuff for the user land right that's a very interesting

1093
01:16:53,360 --> 01:16:57,000
development that could make a maybe maybe you know I don't know if Nvidia is

1094
01:16:57,000 --> 01:17:01,800
even capable of doing the same thing but that could solve this these types of

1095
01:17:01,800 --> 01:17:06,000
problems in a big way and that that was something I didn't mention in Sunday's

1096
01:17:06,000 --> 01:17:09,360
last but that was something I put into consideration is and I wonder if that is

1097
01:17:09,360 --> 01:17:13,080
influencing AMD's decision in doing that is because they're kind of looking at

1098
01:17:13,080 --> 01:17:17,080
the future landscape and going well you know you know what I think the big thing

1099
01:17:17,080 --> 01:17:20,680
is really honestly I think the big thing for Nvidia is they're probably looking

1100
01:17:20,680 --> 01:17:24,320
back and seeing okay well what what direction is the steam box gonna go in

1101
01:17:24,320 --> 01:17:28,320
and whatever that you know I mean sure if steam box decides to go mirror then

1102
01:17:28,320 --> 01:17:32,400
and you know honestly it sounds like there's some compelling reasons around

1103
01:17:32,400 --> 01:17:35,040
the oculus rift and things like that where they might want to go mirror and

1104
01:17:35,040 --> 01:17:38,420
wouldn't that be quite the upset but if I bet you anything Nvidia is watching

1105
01:17:38,420 --> 01:17:42,640
for that and that might make their decision right there I don't know let's

1106
01:17:42,640 --> 01:17:46,240
help you know at the BSD conferences have been a lot of discussion lately

1107
01:17:46,240 --> 01:17:50,960
about the problem of mono cultures there's a few specific products that

1108
01:17:50,960 --> 01:17:55,000
have taken off to the point where they are the only choice for stuff for

1109
01:17:55,000 --> 01:18:00,160
example open SSH is like 95% plus market share other than a couple embedded

1110
01:18:00,160 --> 01:18:05,240
things like drop bear right yeah and there's no alternative

1111
01:18:05,240 --> 01:18:10,360
and that's that's a bad thing so having an alternative to X org isn't

1112
01:18:10,360 --> 01:18:20,200
necessarily a bad thing X X had no alternative for a very long time kind of

1113
01:18:20,200 --> 01:18:26,040
switching tracks though what happens like five ten years now when X stopped

1114
01:18:26,040 --> 01:18:29,400
being supported across the border what will be as he do that's what I'm wondering

1115
01:18:29,400 --> 01:18:33,560
yeah he is a bone yeah what is BSD is playing there Alan do you know we

1116
01:18:33,560 --> 01:18:37,560
already have experimental poor import of Western and Whaler

1117
01:18:37,560 --> 01:18:43,560
oh wow there's nothing we can use it on yet right well that's amazing though

1118
01:18:43,560 --> 01:18:47,880
which is the problem so work is already kind of beginning there I think it's

1119
01:18:47,880 --> 01:18:51,920
gonna be if somebody had an app that we could actually run on it that would be

1120
01:18:51,920 --> 01:18:55,480
helpful yeah that would be really awesome if BSD done that Alan thing even

1121
01:18:55,480 --> 01:18:59,560
before Linux got full support for it that would do wonders in general I think

1122
01:18:59,560 --> 01:19:10,160
oh my god everyone seems to agree that it's a critical time because once we've

1123
01:19:10,160 --> 01:19:17,240
set this it's as an opportunity as well to take on users but actually it's one

1124
01:19:17,240 --> 01:19:22,760
of the reasons to make this a more thought-out decision because it's gonna

1125
01:19:22,760 --> 01:19:27,000
be what will affect us down the road yeah I think I think that's a good point

1126
01:19:27,000 --> 01:19:29,920
and maybe we'll we'll end right there because that's just been a just a great

1127
01:19:29,920 --> 01:19:34,560
conversation I like getting the all perspectives in on this one and I think

1128
01:19:34,560 --> 01:19:38,200
I think it's gonna be a very interesting future and if only there was some way we

1129
01:19:38,200 --> 01:19:42,680
could follow this as it's developed and create a history of it hmm maybe how

1130
01:19:42,680 --> 01:19:47,580
could we do that maybe maybe maybe on your local Linux unplugged and Linux

1131
01:19:47,580 --> 01:19:51,560
action show we'll keep on top of and hopefully we've given you some reasons

1132
01:19:51,560 --> 01:19:55,000
to think about why the display server does or does not matter a little more

1133
01:19:55,000 --> 01:19:59,800
than you had before before we wrap up I wanted to maybe ask your feedback on

1134
01:19:59,800 --> 01:20:03,960
anything we've covered obviously today but also what do you think about Linux

1135
01:20:03,960 --> 01:20:11,680
Mint perhaps using the same Ubuntu LTS base for Linux Mint 17 18 19 and 20

1136
01:20:11,680 --> 01:20:16,920
that's right for the next for the next while Linux Mint would be based on

1137
01:20:16,920 --> 01:20:23,280
Ubuntu 1404 LTS they say they would use that to push forward innovation and

1138
01:20:23,280 --> 01:20:26,600
cinnamon be more active in development on mate and better support mint tools

1139
01:20:26,600 --> 01:20:31,600
and engage in projects we propose we've postponed for years I'd like to know

1140
01:20:31,600 --> 01:20:34,360
what people think about that what do you think Matt is that gonna get really

1141
01:20:34,360 --> 01:20:38,920
boring is that code for we don't want to do stuff I mean I don't know just to me

1142
01:20:38,920 --> 01:20:42,720
it just seems like what's from an end-user point of view what am I really

1143
01:20:42,720 --> 01:20:45,680
getting out of it we're gonna do these cool things okay are we going to the

1144
01:20:45,680 --> 01:20:49,360
point where I don't I don't know are we at the point where the base is good

1145
01:20:49,360 --> 01:20:55,160
enough and so now it's time on yeah well I don't include the desktop

1146
01:20:55,160 --> 01:20:59,760
environment I mean like the base like the kernel you know that the tools like

1147
01:20:59,760 --> 01:21:02,720
the GNU tools all that kind of stuff are we good we had a point now where it's

1148
01:21:02,720 --> 01:21:06,240
good enough because also keep in mind isn't that kind of what the next open

1149
01:21:06,240 --> 01:21:10,040
SUSE releases the guys are not really focusing on the under the hood stuff but

1150
01:21:10,040 --> 01:21:13,680
they're more focusing on the services around open SUSE yeah yeah they kind of

1151
01:21:13,680 --> 01:21:17,440
are okay so let's just for argument say they do that are they going to be also

1152
01:21:17,440 --> 01:21:20,160
stagnating on the kernel and just basically applying little you know

1153
01:21:20,160 --> 01:21:24,360
patches as far as yeah sounds boring to me Matt yeah I mean it's like oh hey I

1154
01:21:24,360 --> 01:21:27,320
gotta do this piece of hardware good thing I got that new kernel oh that's

1155
01:21:27,320 --> 01:21:30,800
right I don't yeah see what I mean it's kind of like that doesn't really make a

1156
01:21:30,800 --> 01:21:34,460
lot of sense well and it's not like the rest of the world standing it standing

1157
01:21:34,460 --> 01:21:37,920
still and it's it's a cool it's a real close balancing act getting those user

1158
01:21:37,920 --> 01:21:41,280
land applications which eventually end up relying on underlying stuff that has

1159
01:21:41,280 --> 01:21:44,440
to be updated sounds like they're doing a simply Memphis to me that's just me

1160
01:21:44,440 --> 01:21:46,440
well let's hear what the audience thinks I'll go over to Jupiter

1161
01:21:46,440 --> 01:21:50,360
broadcasting.com click the contact link choose Linux unplugged from the

1162
01:21:50,360 --> 01:21:53,680
drop-down and send us in your thoughts on that or anything we covered in this

1163
01:21:53,680 --> 01:21:56,880
week's Linux unplugged and don't forget if you'd like to participate in our

1164
01:21:56,880 --> 01:22:02,720
virtual lug hang out with us over at JB live TV we do this on a Tuesday at 2 p.m.

1165
01:22:02,720 --> 01:22:05,760
Pacific go over go over to the calendar you'll get just in your local time zone

1166
01:22:05,760 --> 01:22:11,080
Jupiter broadcasting.com slash calendar Matt on Sunday we'll be we'll be

1167
01:22:11,080 --> 01:22:16,600
chatting with one of the guys behind Gentoo and I'm hoping to have the new

1168
01:22:16,600 --> 01:22:20,120
gnome 312 on my machine I don't know if it'll make it yet but I hope so we'll be

1169
01:22:20,120 --> 01:22:22,680
talking about that thanks so much for tuning this week's episode of Linux

1170
01:22:22,680 --> 01:22:41,840
unplugged we'll see you right back here next Tuesday

