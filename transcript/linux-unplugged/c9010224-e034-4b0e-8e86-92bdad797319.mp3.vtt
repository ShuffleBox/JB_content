WEBVTT

00:00.000 --> 00:05.000
Every time a Debian release reaches end of life, I feel old.

00:05.000 --> 00:11.000
Debian Stretch has officially been, I guess, discontinued is what they call it.

00:11.000 --> 00:16.000
I guess 9.13, which was the last one, came out on July 18th, 2020.

00:16.000 --> 00:22.000
But 9.0 was originally released on June 17th, 2017.

00:22.000 --> 00:25.000
And I don't know, man. I seem like to remember that was a big deal.

00:25.000 --> 00:29.000
Like it was the stretch version because it was like this big important release of Debian.

00:29.000 --> 00:31.000
And now it's end of life.

00:31.000 --> 00:34.000
And that especially makes 2017 feel like a million years ago.

00:34.000 --> 00:38.000
Maybe I'll give it a try. I haven't tried it yet. I should give it a go.

00:38.000 --> 00:41.000
Okay. Yeah. Yeah, right? Yeah.

00:41.000 --> 00:44.000
Wes, you were noticing it shipped with what Linux?

00:44.000 --> 00:45.000
4.9.

00:45.000 --> 00:46.000
4.9.

00:46.000 --> 00:47.000
Right?

00:47.000 --> 00:50.000
Oh, wow. Okay, even that makes me feel old.

00:50.000 --> 00:54.000
And there was a big platform that got deprecated in this release too, right?

00:54.000 --> 00:57.000
Poor old i586.

00:57.000 --> 00:59.000
That's how long it's been.

00:59.000 --> 01:02.000
Everybody was really reeling from that change.

01:02.000 --> 01:04.000
But I mean, it worked out fine.

01:04.000 --> 01:07.000
So we say farewell to Debian Stretch.

01:18.000 --> 01:22.000
Hello, friends, and welcome back to your weekly Linux talk show.

01:22.000 --> 01:23.000
My name is Chris.

01:23.000 --> 01:24.000
My name is Wes.

01:24.000 --> 01:25.000
And my name is Brent.

01:25.000 --> 01:27.000
Hey, guys, guess what?

01:27.000 --> 01:29.000
We're going to have quite the adventure this week.

01:29.000 --> 01:33.000
We'll catch up on what Wes has been up to with his new Raspberry Pi.

01:33.000 --> 01:34.000
Hint, hint.

01:34.000 --> 01:36.000
There may be some kegs that can nix in there. I don't know.

01:36.000 --> 01:42.000
Then we're going to geek out at some tech that's really at the center of just about everything we've really been into these days.

01:42.000 --> 01:44.000
And it just kind of dawned on us this last week.

01:44.000 --> 01:46.000
So we'll tell you about that.

01:46.000 --> 01:49.000
I think you're going to be surprised, actually, about all the different things at the core here.

01:49.000 --> 01:53.000
But then we'll round it out with some boosts and picks and a lot more as we always do.

01:53.000 --> 01:58.000
So before I go any further, I do want to say time-appropriate greetings to our virtual lug.

01:58.000 --> 01:59.000
Hello, Mumble Room.

01:59.000 --> 02:00.000
Hello, hello.

02:00.000 --> 02:01.000
Hello.

02:01.000 --> 02:02.000
Good evening.

02:02.000 --> 02:03.000
Hello, Chris.

02:03.000 --> 02:04.000
Hello.

02:04.000 --> 02:05.000
Hello, everyone.

02:05.000 --> 02:06.000
Hi there.

02:06.000 --> 02:07.000
And hello, everybody up there in the quiet listening.

02:07.000 --> 02:08.000
Nice to have you along.

02:08.000 --> 02:11.000
And of course, everybody watching over at Jupiter.Tube.

02:11.000 --> 02:13.000
Give them a wave, boys.

02:13.000 --> 02:14.000
Give them a wave.

02:14.000 --> 02:15.000
There you go.

02:15.000 --> 02:16.000
That's nice.

02:16.000 --> 02:17.000
That's nice.

02:17.000 --> 02:18.000
I had a fun weekend.

02:18.000 --> 02:21.000
I was really up to several projects, which we'll get into.

02:21.000 --> 02:24.000
See, when you say fun, normally that means something bad happened.

02:24.000 --> 02:29.000
Previously on Linux Unplugged, we talked about this project called Umbral.

02:29.000 --> 02:36.000
And it is sort of a self-hosting platform for a home server that has a whole raft of really awesome apps,

02:36.000 --> 02:42.000
sort of like the best of the best in home self-hosting that is in a Docker container.

02:42.000 --> 02:44.000
And it manages all that for you.

02:44.000 --> 02:47.000
Initially started life as a Bitcoin node.

02:47.000 --> 02:51.000
And then with the more recent release, they separated that stuff out as individual apps.

02:51.000 --> 02:53.000
And so now it's just really an app platform.

02:53.000 --> 03:00.000
And there's things on there like SimpleTorrent and UptimeKuma, Home Assistant, SyncThing, Photoprism,

03:00.000 --> 03:05.000
VaultWarden, Synapse, all that stuff, PyHole, Nextcloud.

03:05.000 --> 03:08.000
All in a slick little UI just a couple of clicks away.

03:08.000 --> 03:11.000
Brand new fancy UI, new architecture.

03:11.000 --> 03:13.000
And I was on the previous version.

03:13.000 --> 03:16.000
And I was on a call with Brent on Friday.

03:16.000 --> 03:18.000
And I'm like, Brent, I really think I want to upgrade this.

03:18.000 --> 03:21.000
But I'm really nervous about it because I don't want it to break.

03:21.000 --> 03:22.000
I told him not to do it.

03:22.000 --> 03:23.000
You did.

03:23.000 --> 03:25.000
So I went ahead and did it, of course, right?

03:25.000 --> 03:29.000
And I'm wondering what you guys would do.

03:29.000 --> 03:35.000
Would you go into the GUI, into the settings, and click the upgrade button in there

03:35.000 --> 03:37.000
and do the upgrade through the interface?

03:37.000 --> 03:44.000
Or would you SSH into the box and do the upgrade through a script that's available

03:44.000 --> 03:49.000
in the application directory of the service, which they may just be calling on the backend?

03:49.000 --> 03:50.000
No.

03:50.000 --> 03:53.000
Actually, step one for me would be backups, backups, backups.

03:53.000 --> 03:54.000
And I wonder if you skipped that step.

03:54.000 --> 03:56.000
No, I did backups.

03:56.000 --> 03:58.000
Have you tried restoring from those backups?

03:58.000 --> 04:00.000
Well, we'll get there.

04:00.000 --> 04:01.000
We'll get there.

04:01.000 --> 04:02.000
We'll get there.

04:02.000 --> 04:03.000
OK.

04:03.000 --> 04:04.000
OK.

04:04.000 --> 04:05.000
But what would you do, Wes?

04:05.000 --> 04:09.000
I mean, are they both equally supported from the vendor?

04:09.000 --> 04:10.000
Are they both blessed methods?

04:10.000 --> 04:13.000
Or is the script sort of a hack?

04:13.000 --> 04:16.000
Well, no, I found this method.

04:16.000 --> 04:17.000
Good question.

04:17.000 --> 04:18.000
That's a really solid question.

04:18.000 --> 04:23.000
I found this method actually in their community troubleshooting guide.

04:23.000 --> 04:27.000
And I don't actually know if this was authored by a staffer or not.

04:27.000 --> 04:32.000
But they give you all of the steps to do the process right here.

04:32.000 --> 04:36.000
And it's clear that they've built this update script because it's in a scripts folder.

04:36.000 --> 04:37.000
There's commands.

04:37.000 --> 04:38.000
You can tell which version to go get.

04:38.000 --> 04:39.000
Nice.

04:39.000 --> 04:40.000
Yeah.

04:40.000 --> 04:42.000
When was that last updated would be a thing I would check right away.

04:42.000 --> 04:44.000
Yeah, it is from like a year ago.

04:44.000 --> 04:46.000
But, you know, I kind of figured the script syntax would be the same.

04:46.000 --> 04:48.000
So I actually decided to go the script route.

04:48.000 --> 04:50.000
Would you have done that or would you have done the GUI?

04:50.000 --> 04:53.000
Yeah, I probably would have just because that's my default.

04:53.000 --> 04:58.000
I've come to this realization that I tend to not like the stuff that tries to hide the

04:58.000 --> 05:02.000
information from me because I want to know what it's doing and what stage it's at and

05:02.000 --> 05:03.000
if there's an error message.

05:03.000 --> 05:05.000
And I would prefer to see that output.

05:05.000 --> 05:06.000
Right.

05:06.000 --> 05:09.000
I mean, it's like if it doesn't work, you're going to have to go hunt for that output anyway

05:09.000 --> 05:10.000
if you want to debug it.

05:10.000 --> 05:11.000
So you might as well just get it.

05:11.000 --> 05:12.000
Right.

05:12.000 --> 05:13.000
So I went the script route.

05:13.000 --> 05:17.000
And actually what they have you do in here, this is a good idea, is first they have you

05:17.000 --> 05:19.000
stop all the containers.

05:19.000 --> 05:21.000
Then they have you do an update to the OS.

05:21.000 --> 05:24.000
And I had a few, I had like 30 updates that needed to be done.

05:24.000 --> 05:25.000
Then they have you reboot.

05:25.000 --> 05:28.000
Then they have you do the upgrade to the actual project.

05:28.000 --> 05:32.000
And I've seen a lot of reports that people are having problems.

05:32.000 --> 05:35.000
And if this breaks, our boost break.

05:35.000 --> 05:36.000
And I love the boost.

05:36.000 --> 05:37.000
So I didn't want this to break.

05:37.000 --> 05:38.000
Yeah, that's what keeps you in a good mood.

05:38.000 --> 05:39.000
So.

05:39.000 --> 05:40.000
It's basically it, dude.

05:40.000 --> 05:41.000
It says boost is coming.

05:41.000 --> 05:43.000
These days and the alcohol.

05:43.000 --> 05:44.000
No, not really.

05:44.000 --> 05:45.000
But just the boost.

05:45.000 --> 05:49.000
So I flipped the switch and it went and it went and it went.

05:49.000 --> 05:52.000
And at the end it came up and it was just fine.

05:52.000 --> 05:56.000
I didn't have to do any restorations or anything like that, but it did get me thinking.

05:56.000 --> 05:59.000
Like, how do I do a test restore?

05:59.000 --> 06:02.000
Because some of the stuff that's in these backups is channel state.

06:02.000 --> 06:06.000
And I can't really do a restore if my main thing is online.

06:06.000 --> 06:07.000
Like that's not going to work.

06:07.000 --> 06:10.000
So I don't know exactly how to test restore this thing.

06:10.000 --> 06:15.000
Now, if you're just using it for, you know, photo prism and next class and stuff like that,

06:15.000 --> 06:16.000
that'll be obvious.

06:16.000 --> 06:18.000
But I'm using it as a lightning node.

06:18.000 --> 06:19.000
I don't know.

06:19.000 --> 06:20.000
Yeah.

06:20.000 --> 06:23.000
Would you have to sort of like take it down, back it up and then try to restore that onto

06:23.000 --> 06:26.000
a new box and let it operate for a while and then back that up?

06:26.000 --> 06:27.000
And I think so.

06:27.000 --> 06:28.000
And I just have to roll forward.

06:28.000 --> 06:29.000
I think so.

06:29.000 --> 06:30.000
I think so.

06:30.000 --> 06:34.000
Brent won't have to worry about any of that because he's going to start out at version

06:34.000 --> 06:40.000
0.5 because after I got that done, I went ahead and I set you up a node, Brent.

06:40.000 --> 06:44.000
So you now have your own node that's all fresh and shiny.

06:44.000 --> 06:45.000
Nice.

06:45.000 --> 06:46.000
It's actually sinking right now.

06:46.000 --> 06:48.000
It's probably about 50 percent done.

06:48.000 --> 06:51.000
It's up on Linode so it sinks super fast.

06:51.000 --> 06:53.000
You gave me the high performance one.

06:53.000 --> 06:54.000
That's great.

06:54.000 --> 06:55.000
Thank you.

06:55.000 --> 06:56.000
Yeah, you definitely have the fastest node.

06:56.000 --> 07:01.000
I have in the show notes, I have Brent's lightning node address.

07:01.000 --> 07:05.000
And if people out there would like to open a channel to Brent so that way he has some

07:05.000 --> 07:08.000
inbound liquidity, that would be fantastic because he's going to need some help with

07:08.000 --> 07:09.000
a brand new node.

07:09.000 --> 07:10.000
It's all free software.

07:10.000 --> 07:12.000
It's a free software payment system.

07:12.000 --> 07:20.000
And what we want to do is the last month we were raising funds for open sets, which is

07:20.000 --> 07:26.000
a 501 C nonprofit that donates sets to free software projects.

07:26.000 --> 07:32.000
And we were doing a 15 percent split, I think somewhere around there, to open sets for the

07:32.000 --> 07:33.000
last month.

07:33.000 --> 07:38.000
So anybody that boosted this show, 15 percent of their boost was going to a free software

07:38.000 --> 07:39.000
charity.

07:39.000 --> 07:42.000
And I think we raised just about $300 for them in total.

07:42.000 --> 07:43.000
That's great.

07:43.000 --> 07:45.000
Thank you everyone out there who boosted.

07:45.000 --> 07:47.000
And I think that's really great.

07:47.000 --> 07:48.000
That's amazing.

07:48.000 --> 07:52.000
I know the folks behind open sets now and I think they're going to put that money to

07:52.000 --> 07:53.000
good use.

07:53.000 --> 07:57.000
I think 100 percent of the funds raised will go to free software, too, which is great.

07:57.000 --> 08:01.000
So for this month we're going to do a different split.

08:01.000 --> 08:05.000
We're going to send 50 percent of the boosts into this show.

08:05.000 --> 08:06.000
Maybe it's 40 percent.

08:06.000 --> 08:07.000
I remember because there's like other cuts in there.

08:07.000 --> 08:10.000
There's the podcast player and there's the index.

08:10.000 --> 08:14.000
But we're going to send a big chunk of the boosts to Brent's new lightning node to help

08:14.000 --> 08:19.000
build up a little bit of a gasoline fund or a petrol fund, if you will, because we want

08:19.000 --> 08:23.000
to do some projects here in the studio and gas has gotten ridiculously expensive.

08:23.000 --> 08:28.000
It's about a two day drive for Brent to get from his place in the Canadian wilderness

08:28.000 --> 08:30.000
to the Pacific Northwest studio.

08:30.000 --> 08:33.000
And we got like that laptop we want to get him set up with.

08:33.000 --> 08:36.000
But we've got we've got a whole list of other projects we want to do before he heads off

08:36.000 --> 08:38.000
to Alex's house.

08:38.000 --> 08:44.000
And so for the next four episodes, as you boost in, we'll send the split off to Brent's

08:44.000 --> 08:48.000
lightning node for his gas fund to come to the studio.

08:48.000 --> 08:51.000
And as a way to help him out as he's doing his travels down here.

08:51.000 --> 08:55.000
So we're going to try this out because one of my grand ideas right is down the road.

08:55.000 --> 08:57.000
We can throw free software projects in there.

08:57.000 --> 08:59.000
We could people who help us with the show in the community.

08:59.000 --> 09:00.000
We can throw them in there.

09:00.000 --> 09:03.000
So this is the beginning of an experimentation here.

09:03.000 --> 09:05.000
And so we're putting your boost to good work.

09:05.000 --> 09:06.000
Thank you, everybody.

09:06.000 --> 09:07.000
Now, Brent, you have your own umbral server.

09:07.000 --> 09:10.000
And one of the things I put on there for you and you're going to love the address.

09:10.000 --> 09:12.000
I don't want to say it publicly, but you're going to love what I came up with.

09:12.000 --> 09:13.000
Great.

09:13.000 --> 09:16.000
I put a hosted element chat client on there.

09:16.000 --> 09:21.000
So now you have your own self hosted web element instance that you could have connected to

09:21.000 --> 09:22.000
the J.B. Matrix.

09:22.000 --> 09:23.000
Now you're talking.

09:23.000 --> 09:24.000
Yeah.

09:24.000 --> 09:25.000
So there's all kinds of good stuff on there.

09:25.000 --> 09:28.000
So you could possibly you could possibly use that for all kinds of things because I put

09:28.000 --> 09:33.000
about 900 gigs of storage on that box.

09:33.000 --> 09:34.000
I'll give you all the logins.

09:34.000 --> 09:35.000
You can change it if you want.

09:35.000 --> 09:38.000
And then probably eventually one day we'll probably migrate it to a system on your land.

09:38.000 --> 09:40.000
We'll figure out how to do that.

09:40.000 --> 09:43.000
Now, as part of this deal, you do have to tell us if you break it.

09:43.000 --> 09:45.000
Oh, I'm good at that.

09:45.000 --> 09:48.000
So we'll see how it goes.

09:48.000 --> 09:53.000
What I'm curious to know and I hope because I think it'll work this way is I think you're

09:53.000 --> 09:56.000
going to get a copy of the boosts if you're in a split.

09:56.000 --> 09:58.000
I think you get the boost message.

09:58.000 --> 10:01.000
So I also installed helipad for you so you can read some of the boosts that come in because

10:01.000 --> 10:03.000
I think that's how it works.

10:03.000 --> 10:04.000
We've never done this before.

10:04.000 --> 10:06.000
So we can test it like after the show.

10:06.000 --> 10:07.000
Yeah.

10:07.000 --> 10:09.000
So I've already I've already added to the podcast index.

10:09.000 --> 10:10.000
The nodes address is already in there.

10:10.000 --> 10:14.000
So it should start effect for this episode and should be trickling out there.

10:14.000 --> 10:15.000
That's amazing.

10:15.000 --> 10:16.000
Umbral is a great project.

10:16.000 --> 10:18.000
It's a it's a really nice, clean setup under the hood.

10:18.000 --> 10:23.000
And I really like that I can SSH in and do that stuff on the command line if I want.

10:23.000 --> 10:27.000
And I've everything I've observed so far seems like a really rational way to build a system

10:27.000 --> 10:28.000
like how I probably do it.

10:28.000 --> 10:30.000
It didn't seem crazy under the hood, right?

10:30.000 --> 10:34.000
Like some scripts, some docker compose going on and otherwise fairly standard.

10:34.000 --> 10:38.000
If you'd like to help out with Brent's travel funds and support the show with the boost,

10:38.000 --> 10:43.000
you can get a new podcast app at new podcast apps dot com or go grab boost CLI.

10:43.000 --> 10:45.000
Do it from the command line.

10:45.000 --> 10:50.000
Or, of course, Breeze at B-R-E-E-Z dot technology and join us there.

10:50.000 --> 10:56.000
But, you know, speaking of getting together and having a good old time.

10:56.000 --> 10:57.000
We have a venue.

10:57.000 --> 11:01.000
It turns out Alex has informed us that for the J.B.

11:01.000 --> 11:03.000
London meetup, we have a venue.

11:03.000 --> 11:07.000
And because I'm a North American, I did have to look up the pronunciation of some of these things.

11:07.000 --> 11:08.000
So here we go.

11:08.000 --> 11:10.000
I'm going to try it out.

11:10.000 --> 11:18.000
So August 5th, 6 p.m. is going to be at the Jubilee Park and Garden on the south bank of the river Hems.

11:18.000 --> 11:19.000
Did I get that?

11:19.000 --> 11:20.000
Near the London Eye.

11:20.000 --> 11:23.000
So apparently that's very, very, very, very central.

11:23.000 --> 11:27.000
And anyone who is thinking of going would probably know exactly where that is.

11:27.000 --> 11:28.000
That's what I was told.

11:28.000 --> 11:29.000
The River Tam?

11:29.000 --> 11:30.000
Is it Tam?

11:30.000 --> 11:31.000
I think he had to look up the word London.

11:31.000 --> 11:34.000
Hems?

11:34.000 --> 11:35.000
Well, good job.

11:35.000 --> 11:36.000
Good job.

11:36.000 --> 11:37.000
Yeah.

11:37.000 --> 11:38.000
All right.

11:38.000 --> 11:46.000
So we're going to be at Jupiter broadcasting and keep an eye on there because we do have a West Coast meetup coming up in September in California.

11:46.000 --> 11:48.000
We'll have more details about that probably next week.

11:48.000 --> 11:50.000
But I just wanted to give this some room.

11:50.000 --> 11:58.000
I don't want to get people you know, I don't want to steal any glory from the London meetup because I want that to flourish and be a big thing because I'd love to maybe have it happen next year and we go.

11:58.000 --> 12:02.000
But we will have a California West Coast meeting coming up very soon.

12:02.000 --> 12:09.000
We'll have more details on that in probably next week's episode.

12:09.000 --> 12:12.000
We've been on a real NixOS bender.

12:12.000 --> 12:13.000
I think that's safe to say.

12:13.000 --> 12:14.000
Yeah.

12:14.000 --> 12:21.000
And we've even been not talking about it on air as much as it's been happening off air because we know not everybody listening cares about NixOS.

12:21.000 --> 12:25.000
And so we've been trying to, you know, come up sometimes.

12:25.000 --> 12:26.000
Yeah.

12:26.000 --> 12:27.000
Pace ourselves.

12:27.000 --> 12:28.000
There we go.

12:28.000 --> 12:29.000
That's a good way to put it.

12:29.000 --> 12:30.000
Yeah.

12:30.000 --> 12:33.000
We've been working with stuff that we've been doing that we want to tell you guys about.

12:33.000 --> 12:42.000
And it really kind of got kicked in the next year when listener Maximilian hit me up on Matrix and offered to send a pie here to Westpain.

12:42.000 --> 12:44.000
I said, yeah, let's let's do it.

12:44.000 --> 12:45.000
That's going to be great.

12:45.000 --> 12:46.000
We've got some ideas for that.

12:46.000 --> 12:47.000
We want to build a router.

12:47.000 --> 12:50.000
We've been having a hard time getting our hands on an actual pie to do this with.

12:50.000 --> 12:51.000
Hot commodity.

12:51.000 --> 12:55.000
And, you know, next thing we knew there was a package here at the studio for you.

12:55.000 --> 12:56.000
So what was it?

12:56.000 --> 12:57.000
I know it was a pie, but tell me more.

12:57.000 --> 13:02.000
Yeah, Raspberry Pi four set up with a very nice metal case, all preconfigured.

13:02.000 --> 13:05.000
It had a power supply in there, pretty much everything you needed to get going.

13:05.000 --> 13:08.000
And it was already ready and set up to boot from USB.

13:08.000 --> 13:11.000
So just choice right there.

13:11.000 --> 13:12.000
That's how you want your Raspberry Pi.

13:12.000 --> 13:13.000
Right.

13:13.000 --> 13:16.000
So you're not using any SD card with this SD card hasn't touched it since I got it.

13:16.000 --> 13:17.000
That's so much better.

13:17.000 --> 13:19.000
Admittedly, I need a better USB.

13:19.000 --> 13:22.000
I need some faster disk going on is a more permanent set up for this thing.

13:22.000 --> 13:25.000
But it was, you know, good enough to get started.

13:25.000 --> 13:27.000
That's a pretty big leap from the last time you set up a pie.

13:27.000 --> 13:28.000
I would imagine.

13:28.000 --> 13:33.000
Yeah, it's been at least two years, maybe, maybe longer since I set up a pie.

13:33.000 --> 13:34.000
Doesn't it feel like it's come more?

13:34.000 --> 13:35.000
It's more advanced now.

13:35.000 --> 13:37.000
It is more advanced.

13:37.000 --> 13:39.000
I forgot about the whole micro HDMI thing.

13:39.000 --> 13:44.000
So so far, I've been relying on network troubleshooting, which is good, which is good.

13:44.000 --> 13:48.000
It's just maybe it's tamped down my adventurousness just just a little bit.

13:48.000 --> 13:51.000
So you got it with, I guess, Raspberry Pi OS on it.

13:51.000 --> 13:54.000
Yeah, it was my first time installing Raspberry Pi OS in ages, too.

13:54.000 --> 13:55.000
Oh, you installed it.

13:55.000 --> 13:56.000
OK.

13:56.000 --> 13:57.000
Yeah, yeah.

13:57.000 --> 13:58.000
Nothing.

13:58.000 --> 13:59.000
Nothing out there.

13:59.000 --> 14:01.000
I just but I went out there like an animal and downloaded Raspberry Pi OS.

14:01.000 --> 14:03.000
Well, I had to verify that it was ready for USB boot.

14:03.000 --> 14:05.000
I thought like stick with the standard stuff.

14:05.000 --> 14:06.000
Right.

14:06.000 --> 14:07.000
And just like, you know, this is the stock.

14:07.000 --> 14:10.000
Plus, I hadn't installed Raspberry Pi OS for a long time.

14:10.000 --> 14:12.000
I think, I mean, since it was Raspbian, actually.

14:12.000 --> 14:13.000
Yeah.

14:13.000 --> 14:14.000
Maybe I played with it for Linux Action News.

14:14.000 --> 14:18.000
But in any case, I hadn't played with it since they kind of changed the default pie user

14:18.000 --> 14:20.000
set up, you know.

14:20.000 --> 14:21.000
So now you got to go in.

14:21.000 --> 14:26.000
You can do that thing where you touch the SSH file to get it to open SSH by default.

14:26.000 --> 14:27.000
Right.

14:27.000 --> 14:31.000
And now you can specify a user comp text or you can just put in sort of the same password

14:31.000 --> 14:33.000
hash that you put in your shadow file.

14:33.000 --> 14:34.000
Right.

14:34.000 --> 14:36.000
Stick that and then reconfigure it.

14:36.000 --> 14:37.000
That's pretty easy.

14:37.000 --> 14:40.000
Also figured out how to tell it not to resize to the whole disk.

14:40.000 --> 14:43.000
There's like one hundred and twenty gig USB drive that I just did.

14:43.000 --> 14:44.000
Yeah.

14:44.000 --> 14:45.000
Didn't need all that.

14:45.000 --> 14:46.000
Yeah.

14:46.000 --> 14:47.000
So it's kind of fun, fun to get reacquainted.

14:47.000 --> 14:53.000
That was pleasant to get started with, but of course, NixOS is the real call here, right?

14:53.000 --> 14:54.000
Yeah.

14:54.000 --> 14:55.000
I mean, that's the question.

14:55.000 --> 14:57.000
We looked at it months ago.

14:57.000 --> 14:59.000
I think it was like three months ago.

14:59.000 --> 15:04.000
And the word at the time was like, it's not really ready or something funky about it.

15:04.000 --> 15:05.000
I can't even remember anymore.

15:05.000 --> 15:07.000
Did you give NixOS a go on it?

15:07.000 --> 15:08.000
Did you try it?

15:08.000 --> 15:09.000
I did.

15:09.000 --> 15:11.000
But disclaimer up front here.

15:11.000 --> 15:15.000
This ended up being just a rabbit hole exploration day.

15:15.000 --> 15:17.000
However long this all took.

15:17.000 --> 15:21.000
So it's not yet to the stage where it's like I'm ready to go say, Chris, you should just

15:21.000 --> 15:23.000
deploy this setup that I've been playing with.

15:23.000 --> 15:25.000
But it's not saying we can't get there or that.

15:25.000 --> 15:27.000
But just I was playing with some limitations.

15:27.000 --> 15:29.000
A USB setup that wasn't ideal.

15:29.000 --> 15:30.000
No HDMI.

15:30.000 --> 15:32.000
So it's like doing everything over the network.

15:32.000 --> 15:37.000
And it's the first time I've kind of been doing ARCH64 stuff for a long time, too.

15:37.000 --> 15:40.000
So I'm getting back in the whole groove of like different architectures.

15:40.000 --> 15:43.000
And I don't have a lot of I don't have a you know, I don't have like an M1 system handy.

15:43.000 --> 15:45.000
I don't have any other ARM boxes on my network at the moment.

15:45.000 --> 15:50.000
So I don't have any other like native platforms to debug or mess with the images from in a way.

15:50.000 --> 15:55.000
So that was kind of interesting to figure out like what changes in my setup and my approach

15:55.000 --> 15:59.000
to messing with Linux when I'm on a different platform.

15:59.000 --> 16:02.000
So are you doing I mean, with no HDMI cable, what do you like?

16:02.000 --> 16:04.000
You're powering this thing on.

16:04.000 --> 16:07.000
You got it plugged into Ethernet, I imagine, because you can't even get on Wi-Fi yet.

16:07.000 --> 16:12.000
And then are you checking your DHCP log to see like what IP got taken to figure out what

16:12.000 --> 16:14.000
you need to even SSH into?

16:14.000 --> 16:15.000
Yeah, pretty much.

16:15.000 --> 16:17.000
And then after that, it worked fine.

16:17.000 --> 16:21.000
Well, actually, I just pulled up the pulled up one of the apps on on your phone to scan

16:21.000 --> 16:23.000
the network and map would work just fine, too.

16:23.000 --> 16:24.000
Yeah, yeah.

16:24.000 --> 16:25.000
That's funny.

16:25.000 --> 16:28.000
I just I just I'm that does feel like you're working with one hand tied behind your back

16:28.000 --> 16:30.000
at least trying to get this thing right.

16:30.000 --> 16:31.000
And it's just like it was all unfamiliar.

16:31.000 --> 16:32.000
And I'm here.

16:32.000 --> 16:34.000
I'm trying to do like six new things at once.

16:34.000 --> 16:39.000
I did go down a little bit of a rabbit hole trying to figure out if Kexec worked.

16:39.000 --> 16:40.000
This is important stuff.

16:40.000 --> 16:41.000
We need to know.

16:41.000 --> 16:46.000
And it seems like the answer is yes, but it's not enabled by default in the Pi kernel.

16:46.000 --> 16:48.000
So you got to you got to go change some stuff.

16:48.000 --> 16:53.000
There's also some weirdness around like kernel properly parking other multiple CPU.

16:53.000 --> 16:56.000
So you might have to add a flag to say, like, just use one CPU.

16:56.000 --> 16:57.000
I was wondering about that.

16:57.000 --> 16:59.000
That does seem like it'd be different on the Pi.

16:59.000 --> 17:04.000
So if you didn't use Raspberry Pi OS, but you had, say, Ubuntu 2204 on there.

17:04.000 --> 17:05.000
So I haven't got it to work yet.

17:05.000 --> 17:09.000
I am going to keep playing with it because I really want this to work for really no reason.

17:09.000 --> 17:10.000
But it just seems fun.

17:10.000 --> 17:12.000
One approach is just recompiling the kernel.

17:12.000 --> 17:14.000
I did actually try that.

17:14.000 --> 17:17.000
Jeff Geerling has a nice little guide and there's a few of them out there, including another guide.

17:17.000 --> 17:25.000
I'll link in the show notes for just like if you want to try setting up a whole Pi image from scratch, like compiling a kernel, finding the firmware blob, setting up the user space stuff.

17:25.000 --> 17:31.000
I thought that was just that's just a neat idea because the Pi images are sometimes a little black magic to me at least.

17:31.000 --> 17:32.000
Oh, NixOS.

17:32.000 --> 17:33.000
Yeah.

17:33.000 --> 17:34.000
Not so smooth or?

17:34.000 --> 17:39.000
Well, so going down the rabbit hole of playing with Kexec when I was building my own kernel.

17:39.000 --> 17:40.000
Yeah.

17:40.000 --> 17:41.000
Trying to get NixOS running, I imagine.

17:41.000 --> 17:42.000
Yeah.

17:42.000 --> 17:44.000
And I didn't want to build the kernel on the Pi, right?

17:44.000 --> 17:45.000
Right.

17:45.000 --> 17:46.000
Because that's going to take forever.

17:46.000 --> 17:47.000
Yeah.

17:47.000 --> 17:52.000
So I ended up figuring out how to go do cross compiled builds, which I don't know if that's something you've played with in your Pi.

17:52.000 --> 17:54.000
No, I don't really build much software on the Pis.

17:54.000 --> 17:57.000
But if I was going to, I think I'd have to figure out this.

17:57.000 --> 18:00.000
So this is where another machine does some of the heavy lifting for you.

18:00.000 --> 18:01.000
Yeah, exactly.

18:01.000 --> 18:06.000
I didn't have access to another ARM machine and I didn't want to use the Pi to do all the software compiling work.

18:06.000 --> 18:14.000
So I spun up a Linode just in a Bantu box and then you just install a couple of GCC packages and then you can install some QEMU packages if you need those as well.

18:14.000 --> 18:16.000
Because you would actually, on Linode, you would, right?

18:16.000 --> 18:17.000
Because it's an x86 machine.

18:17.000 --> 18:18.000
Yeah.

18:18.000 --> 18:21.000
So you would need to build in an ARM VM on that Linode.

18:21.000 --> 18:22.000
Okay.

18:22.000 --> 18:29.000
But then it gets even cooler if you go enable the bin format functionality and QEMU's like user mode abilities.

18:29.000 --> 18:35.000
You can have it transparently use QEMU to execute binaries that are built for the ARM platform.

18:35.000 --> 18:37.000
Wow, it's almost like using QEMU as wine.

18:37.000 --> 18:38.000
Yeah.

18:38.000 --> 18:46.000
And so then like I was able to just download either like the Raspbian or the Raspberry Pi OS image or the NixOS SD image, which we'll talk about in a second,

18:46.000 --> 18:51.000
and then use systemdnspawn to just like launch them up.

18:51.000 --> 18:52.000
Really?

18:52.000 --> 18:53.000
And just sort of transparently emulate it.

18:53.000 --> 18:54.000
That is so cool.

18:54.000 --> 19:00.000
And it just uploads the required source code to this Linode to start the build or did you have to get it up?

19:00.000 --> 19:01.000
Oh no, I set that up.

19:01.000 --> 19:02.000
Ah, okay.

19:02.000 --> 19:03.000
So you get it all up there.

19:03.000 --> 19:04.000
Mm-hmm.

19:04.000 --> 19:05.000
Okay, okay, okay.

19:05.000 --> 19:11.000
So it's not like discc was back in the day that would actually like batch up parts of the work and send it out.

19:11.000 --> 19:15.000
Well, there are like remote workers and remote build things you can do, like especially in the Nix world.

19:15.000 --> 19:19.000
But this was just me manually trying to figure out like, can I rebuild the Pi kernel?

19:19.000 --> 19:20.000
Let's try that.

19:20.000 --> 19:21.000
I love it.

19:21.000 --> 19:22.000
That's a great idea.

19:22.000 --> 19:23.000
Yeah.

19:23.000 --> 19:25.000
Use the CPUs on a Linode, not the Raspberry Pi.

19:25.000 --> 19:30.000
Well, because I'm so used to being able to sort of like chroot into a system and then configure it or change it or manipulate that.

19:30.000 --> 19:32.000
But I couldn't without another ARM box.

19:32.000 --> 19:33.000
I couldn't really do that.

19:33.000 --> 19:36.000
I mean, I could edit text files, but I couldn't run any of the binaries.

19:36.000 --> 19:39.000
So it was a limitation I wasn't used to.

19:39.000 --> 19:42.000
But all of that was sort of a prelude to actually starting to really play with.

19:42.000 --> 19:44.000
I was just getting comfortable again, like with the Pi.

19:44.000 --> 19:50.000
When you first start searching for NixOS in the Pi, you'll see a lot of results, some of which are from the past.

19:50.000 --> 19:56.000
The good news today is it does just work with like the default AR64 SD card image.

19:56.000 --> 20:00.000
So stuff has improved a lot even over the last like year or two.

20:00.000 --> 20:01.000
Right.

20:01.000 --> 20:02.000
That seems like a big step.

20:02.000 --> 20:07.000
Now, one of the gotchas there is that it does, I believe, enable SSH out of the box.

20:07.000 --> 20:10.000
But it doesn't come with a password or an SSH key by default.

20:10.000 --> 20:16.000
So you either need to have a setup where you can configure that, you know, first time from a shell.

20:16.000 --> 20:21.000
Or you can also kind of go in there and manipulate the image a little bit and add one in there.

20:21.000 --> 20:23.000
There's some gotchas there, too.

20:23.000 --> 20:27.000
Or really embrace the NixOS way and just build yourself a new image.

20:27.000 --> 20:34.000
And it turns out there's a lot of great tools out there, too, including some docker scripts that set up like cross compilation for you.

20:34.000 --> 20:35.000
So it sort of spins up.

20:35.000 --> 20:41.000
It's like a docker compose setup that will spin you up a docker that's pre-configured to do these cross compiled builds, pull down everything.

20:41.000 --> 20:44.000
It's got the templates.

20:44.000 --> 20:45.000
The next community, man.

20:45.000 --> 20:47.000
The next community is so crazy.

20:47.000 --> 20:48.000
It is.

20:48.000 --> 20:50.000
So which route did you end up going with and did it work?

20:50.000 --> 20:51.000
That's the question.

20:51.000 --> 20:58.000
They've also got, which I haven't tried, but they've got a packer script in there to spin up an Amazon arm box, which is a great idea.

20:58.000 --> 21:01.000
And then that says they can build like the image in like five or six minutes.

21:01.000 --> 21:02.000
Yeah.

21:02.000 --> 21:03.000
Because it's just running on.

21:03.000 --> 21:04.000
Yeah, right.

21:04.000 --> 21:05.000
Exactly.

21:05.000 --> 21:14.000
So I ended up just playing with trying to modify the existing NixOS image, which is how I kind of doubled down on this whole like, can I mess with the image?

21:14.000 --> 21:23.000
Because when you get to the SD card, it's super minimal out of the box, like the main file system just has the next door and some boot stuff and not much else.

21:23.000 --> 21:25.000
And so.

21:25.000 --> 21:32.000
Face with that, I didn't know immediately, like, how do I if I want to stuff a key in here or something without rebuilding it, how do I do that?

21:32.000 --> 21:36.000
Go not wanting to go down that rabbit fall too far.

21:36.000 --> 21:46.000
I actually ended up just installing Nix sort of the way that we played with when you override a VPS and going that route by first installing Nix on Raspberry Pi OS.

21:46.000 --> 21:48.000
I mean, that's probably the most simple, right?

21:48.000 --> 21:50.000
It's tried and true.

21:50.000 --> 21:52.000
It's a method you and I have done before.

21:52.000 --> 21:53.000
That makes sense.

21:53.000 --> 21:56.000
So you took you overtook the Ubuntu host system essentially is.

21:56.000 --> 21:57.000
Yeah, yeah, exactly.

21:57.000 --> 21:59.000
It's like a bootloader for Nix.

21:59.000 --> 22:11.000
They've got that. Yeah, they've got that neat lust rate set up, and so you can basically just install Nix because you install Nix on pretty much anything and then switch it over to basically using Nix OS bootstrap.

22:11.000 --> 22:20.000
That the Nix Wiki has a lot of good documentation on the specific quirks you need in your configuration next to account for, like the Pi hardware and the bootloader stuff and that kind of thing.

22:20.000 --> 22:23.000
And then do the follow the normal instructions.

22:23.000 --> 22:30.000
There is a little bit of stuff with the with the bootloader itself, because you need, you know, it's the way Raspberry Pi OS and some of the other ones do it.

22:30.000 --> 22:34.000
And the way Nix does it is a little bit different, including where things get mounted.

22:34.000 --> 22:36.000
I bet it's quite a bit different.

22:36.000 --> 22:52.000
But I found that just so installing Nix the normal way from from Raspberry and doing like a takeover that way and then combining that with just popping over the bootloader files from the boot partition on the SD image, which is all set up to like copy all the right firmware blobs and stuff.

22:52.000 --> 22:53.000
That was a winner.

22:53.000 --> 22:57.000
Really?

22:57.000 --> 23:01.000
How long? I mean, how many different like research rabbit holes did it take?

23:01.000 --> 23:07.000
Yeah, I'm still kind of like doing a poor job of explaining this because I've like I've subsumed a whole bunch of knowledge and I haven't.

23:07.000 --> 23:12.000
I'm definitely in that state of like, I need to do this one more five more times.

23:12.000 --> 23:14.000
Well, we will.

23:14.000 --> 23:20.000
I want to I want to build a custom image because I think that's probably something we would we would really do, especially if we could just spin up on like Linode build box.

23:20.000 --> 23:27.000
Yeah, yeah. When we were talking about this last night as you were working on this, I could tell you had been going on it for going for a while.

23:27.000 --> 23:34.000
And it was like, you know, but really, you're saying I just want to get to this point where we'll have like the standard image that we can just deploy on a Raspberry Pi spins up.

23:34.000 --> 23:39.000
It's ready to go. Or, you know, a standard image we could deploy on a Linode and it's ready to go.

23:39.000 --> 23:44.000
Yeah, right. Or you could have an easy template that you could just sort of copy and be like, oh, but I'm going to tweak this one a little bit.

23:44.000 --> 23:46.000
Yeah, it's going to be great when it gets there.

23:46.000 --> 23:52.000
I'm sort of surprised that standard image isn't something that's available already. Surely we're not the only ones who want this.

23:52.000 --> 23:56.000
I mean, with Nix, you get so close just by having a heavily modified configuration file.

23:56.000 --> 23:59.000
You get the base OS on there and then, you know, build off that.

23:59.000 --> 24:05.000
I'm sure hopefully some of the Wiser Nix folks can point me to things I've missed because there were you know, there was a lot of different resources to pull through.

24:05.000 --> 24:10.000
I still need to go through some of the links, but the show notes will have all the things I found useful.

24:10.000 --> 24:15.000
Great, great. I'm going to look at that, too, because I have that compute module that I want to turn into a router here at the studio.

24:15.000 --> 24:21.000
And it just I'd love to have something like Nix on there for for a router device like that really seems like a good solution.

24:21.000 --> 24:31.000
So to Brent's point, you know, you get set up, but then there's all like the little small configuration things, you know, all the little like dot files and all of that stuff.

24:31.000 --> 24:36.000
And that's where Home Manager comes in for Nix OS.

24:36.000 --> 24:39.000
And I have been slowly wrapping my head around Home Manager.

24:39.000 --> 24:45.000
And unfortunately, this is not a criticism, but I do feel like it is a bit of a barrier to entry for new users.

24:45.000 --> 24:51.000
There's usually some really thick language and terminology around some of this stuff and how you get started.

24:51.000 --> 25:02.000
But in short, Home Manager, it was just a it's a straightforward way for a user like me to manage multiple configuration options about my system and have my own set of software installed.

25:02.000 --> 25:10.000
That isn't necessarily system wide or isn't necessarily giving me, you know, maybe I don't necessarily have root privileges or something like that.

25:10.000 --> 25:17.000
So I've just got Home Manager set up on my box and I have a tutorial that I found that I thought really kind of cut through all of the confusing language.

25:17.000 --> 25:21.000
And that's saying something right there. I thought this made it a lot easier.

25:21.000 --> 25:30.000
And the idea is, is that you can essentially manage all of your application settings, your desktop environment settings, the packages that you run on your box.

25:30.000 --> 25:35.000
And you can define them all in a configuration. And then this will maintain it for you.

25:35.000 --> 25:45.000
So you get your base system set up and then you deploy this. And maybe you have it backed by something like Git that has all your files in a repository.

25:45.000 --> 25:50.000
If you may, there's there's a lot of file managers. This is like a manager for everything.

25:50.000 --> 25:57.000
So I've just got it going recently. And I think this is the piece. I don't know if this works in a server context, but I think this is the piece.

25:57.000 --> 26:01.000
It's going to take using it on my laptop from something that I'm I'm getting by with.

26:01.000 --> 26:05.000
But I could see I have edge cases that don't work. And I think this is going to fill those gaps for me.

26:05.000 --> 26:12.000
Yeah, maybe take it from something you'd use for like a kiosk machine or occasional sort of machine to something that's personalized for you.

26:12.000 --> 26:18.000
Exactly. Now is Home Manager Nix specific or can you use it anywhere?

26:18.000 --> 26:20.000
Yeah, it's Nix specific.

26:20.000 --> 26:28.000
Yeah, it sits on top of the Nix package manager and does all that good stuff for you. I'll put a link to the tutorial.

26:28.000 --> 26:34.000
But we should reinforce here, Brent. You can install the Nix package manager in a ton of places, including the distro you're using now.

26:34.000 --> 26:39.000
If we get if we get Nix going on that Dev1, we'll totally put Home Manager on that.

26:39.000 --> 26:41.000
You say if, but I think we must.

26:41.000 --> 26:43.000
Well, I mean, I don't want to force it on you.

26:43.000 --> 26:44.000
We can reflash it.

26:44.000 --> 26:45.000
Oh, yeah, for sure.

26:45.000 --> 26:48.000
I think we should. I think that would be a lovely exploration.

26:48.000 --> 26:53.000
So check out the links in the show notes for that one.

26:53.000 --> 26:59.000
Linode dot com slash unplugged. Go there to get one hundred dollars and sixty day credit on a new account.

26:59.000 --> 27:02.000
And of course, it's a great way to support the show and let them know you heard about it here.

27:02.000 --> 27:06.000
And Linode is the hosting provider for Linux Geeks.

27:06.000 --> 27:11.000
They started in 2003 because they saw some of the virtualization capabilities coming to Linux.

27:11.000 --> 27:15.000
And now, nearly 19 years later, we call this cloud computing.

27:15.000 --> 27:20.000
But they've been there every step of the way, building on the technology because they were Linux Geeks and they loved it.

27:20.000 --> 27:23.000
And now they've built something that's so straightforward to use.

27:23.000 --> 27:26.000
It's so affordable and it's so well supported.

27:26.000 --> 27:29.000
I'm honestly thrilled to have a chance to talk to you about it every single week.

27:29.000 --> 27:35.000
It's really something that I am still passionate about advocating you go try because it's the best hosting I've ever experienced.

27:35.000 --> 27:38.000
I run everything on there because I chose to.

27:38.000 --> 27:41.000
I picked Linode before they were a sponsor and I still use Linode.

27:41.000 --> 27:44.000
I think it's a great opportunity to get one hundred dollars and try it out.

27:44.000 --> 27:47.000
They have an easy to use, powerful cloud dashboard.

27:47.000 --> 27:52.000
I use the absolute heck out of their S3 compatible object storage.

27:52.000 --> 27:54.000
I've got servers deployed in multiple data centers.

27:54.000 --> 27:55.000
They have 11 around the world.

27:55.000 --> 27:59.000
They are their own ISP, so they have super fast networking.

27:59.000 --> 28:03.000
They got a powerful DNS manager, VLAN support, DDoS protection.

28:03.000 --> 28:05.000
If you're so lucky, you have that bad luck.

28:05.000 --> 28:10.000
And pricing that's 30 to 50 percent cheaper than those hyperscalers.

28:10.000 --> 28:17.000
They want to lock you into their esoteric cloud with their crazy esoteric language and their horrible, bad, no good support.

28:17.000 --> 28:25.000
Linode flips all of that on its ear and it does it by taking Linux and making it super accessible to anyone, experts or beginners.

28:25.000 --> 28:28.000
They're dedicated to offering the best virtualized cloud computing.

28:28.000 --> 28:31.000
If it runs on Linux, it runs on Linode.

28:31.000 --> 28:37.000
So go build something, go learn something, go try something and support the show and get that one hundred dollars.

28:37.000 --> 28:40.000
Linode dot com slash unplugged.

28:40.000 --> 28:43.000
That's Linode dot com slash unplugged.

28:47.000 --> 28:52.000
So I know we did get last week and I think this would be maybe a sequel.

28:52.000 --> 28:55.000
It seems that I just couldn't get my head out of get.

28:55.000 --> 29:02.000
Wes has been kindly helping me all week, despite his also being in several deep rabbit holes.

29:02.000 --> 29:10.000
And I had a real aha moment that I think, well, both of you either were involved in or would be interested in.

29:10.000 --> 29:14.000
But also that really tied a bunch of strings for me.

29:14.000 --> 29:16.000
And so I'll give you a little bit of background.

29:16.000 --> 29:22.000
So I was seeing, you know, there's like a hundred thousand tutorials about how to use get.

29:22.000 --> 29:29.000
But what I noticed, because my curious mind just can't let things go, is that they're kind of like surface level.

29:29.000 --> 29:36.000
And I was having a hard time the more I used get on our our new website development,

29:36.000 --> 29:46.000
the more I was realizing that the mental model that I was being taught wasn't quite what I was seeing using the command line.

29:46.000 --> 29:48.000
And so I had to dig a little bit further.

29:48.000 --> 29:51.000
So I started digging into the get internals and how it works.

29:51.000 --> 29:57.000
I have a few wonderful links, but the real aha moment was discovering that

29:57.000 --> 30:03.000
they're not when let's say when you commit something, they're not actually doing deaths,

30:03.000 --> 30:08.000
which is how people often present what a commit is.

30:08.000 --> 30:11.000
What it's actually doing is snapshots.

30:11.000 --> 30:17.000
And that brought me down a whole fascinating rabbit hole of like, wait, wait, wait, wait.

30:17.000 --> 30:19.000
So every commit is a snapshot.

30:19.000 --> 30:21.000
Well, what's it actually like referring to?

30:21.000 --> 30:23.000
And I think we've seen this before.

30:23.000 --> 30:28.000
So that got me thinking, well, maybe maybe gets just like butter a fest sort of,

30:28.000 --> 30:32.000
but just for a project instead of a whole file system.

30:32.000 --> 30:40.000
And so as the rabbit hole continued and Wes and I had very many discussions about testing my assumptions

30:40.000 --> 30:44.000
and what I had been taught and trying to pick his brain about how he understands it

30:44.000 --> 30:48.000
and what mental model he's built up, we we kind of dug into.

30:48.000 --> 30:50.000
Thanks, Wes, for sending me a few resources.

30:50.000 --> 30:51.000
Oh, yeah, which is great.

30:51.000 --> 30:57.000
And apparently, if you dig into a few of these resources, you'll understand get more than 80% of people.

30:57.000 --> 31:00.000
So, you know, I'd like to be the upper 20% if I can.

31:00.000 --> 31:02.000
I'm still a beginner.

31:02.000 --> 31:07.000
But one of the great resources that we found was the Git book that talked about Git internals

31:07.000 --> 31:13.000
and they call it plumbing and porcelain to try to like distinguish between the stuff that you use

31:13.000 --> 31:18.000
and the stuff that's happening, you know, underneath the hood.

31:18.000 --> 31:21.000
One of the quotes that really hit me is the following.

31:21.000 --> 31:26.000
If it isn't clear yet, Git is fundamentally a content addressable file system

31:26.000 --> 31:31.000
with a version control system user interface written on top of it.

31:31.000 --> 31:34.000
And that's when I had that like, aha moment.

31:34.000 --> 31:37.000
I was like, ah, what I suspected is true.

31:37.000 --> 31:41.000
And once you dig into it, that's how it's working.

31:41.000 --> 31:45.000
Another one that Wes sent me was from the GitHub blog.

31:45.000 --> 31:49.000
Commits are snapshots, not diffs is the title of this article.

31:49.000 --> 31:54.000
Another little sentence that got me that same feeling, it writes,

31:54.000 --> 31:56.000
it has a reputation for being confusing.

31:56.000 --> 32:01.000
Users stumble over terminology and phrasing that misguides their expectations.

32:01.000 --> 32:06.000
This is the most apparent in commands that quote, rewrite history,

32:06.000 --> 32:10.000
such as git cherry pick or git rebase.

32:10.000 --> 32:15.000
In my experience, the root cause of this confusion is an interpretation of commits

32:15.000 --> 32:17.000
as diffs that can be shuttled around.

32:17.000 --> 32:21.000
However, commits are snapshots, not diffs.

32:21.000 --> 32:25.000
So that got me digging into like, well, OK, well, how does this work under the hood?

32:25.000 --> 32:30.000
And of course, Wes is really good at suggesting that I go deeper and deeper and deeper.

32:30.000 --> 32:33.000
Never once were you like, no, you know enough, just use it.

32:33.000 --> 32:39.000
It turns out that at the base of Git is the concept of a Merkle tree.

32:39.000 --> 32:45.000
And it seems many, many, many of the technologies we've been looking at in the last six months

32:45.000 --> 32:51.000
and excited about even longer than that also use the concept of Merkle trees as the base.

32:51.000 --> 32:58.000
So ButterFS has that, ZFS, the Bitcoin network, Git, of course,

32:58.000 --> 33:04.000
the Nix package manager and also Geeks as well, the new Geeks and IPFS,

33:04.000 --> 33:10.000
which we've researched a ton and maybe should dig into.

33:10.000 --> 33:13.000
But it turns out all those technologies have the same concept in mind.

33:13.000 --> 33:17.000
And that was just quite the aha moment for me this week.

33:17.000 --> 33:22.000
And I wondered if that had occurred to either of you or what you think about that.

33:22.000 --> 33:24.000
I knew it, but it hadn't occurred to me.

33:24.000 --> 33:30.000
I've definitely heard the term Merkle tree used for ZFS and ButterFS and Bitcoin

33:30.000 --> 33:36.000
and a number of NoSQL projects on a number of occasions.

33:36.000 --> 33:38.000
But I never did the math.

33:38.000 --> 33:40.000
You know, I never put it all together.

33:40.000 --> 33:44.000
And I mean, you said it right there, Brent, like you're basically playing the hits.

33:44.000 --> 33:51.000
ButterFS, ZFS, Git, Nix, Bitcoin.

33:51.000 --> 33:54.000
I mean, like, these are some of our favorite things.

33:54.000 --> 33:56.000
Just fishing for Chris.

33:56.000 --> 33:58.000
And that's like an excerpt of the list.

33:58.000 --> 34:02.000
There's a much longer list if you even just look at the Wikipedia page

34:02.000 --> 34:06.000
that includes a whole bunch of network protocols and all sorts of things.

34:06.000 --> 34:10.000
Gentlemen, we have been eating from the Merkle tree and didn't even realize it.

34:10.000 --> 34:11.000
Well said.

34:11.000 --> 34:12.000
Well, it's tasty fruit.

34:12.000 --> 34:15.000
Brent, I think I've got one more like challenge up if you want to go even deeper.

34:15.000 --> 34:16.000
Bring it.

34:16.000 --> 34:17.000
You know me.

34:17.000 --> 34:19.000
Implement your own Merkle.

34:19.000 --> 34:22.000
Implement your own Merkle tree.

34:22.000 --> 34:26.000
This will require Kexec, won't it?

34:26.000 --> 34:27.000
Sadly, no.

34:27.000 --> 34:28.000
No, we can work it in.

34:28.000 --> 34:29.000
We can work it in.

34:29.000 --> 34:30.000
Never mind.

34:30.000 --> 34:31.000
I take that back.

34:31.000 --> 34:34.000
We'll Kexec into like a Python environment for you.

34:34.000 --> 34:35.000
There we go.

34:35.000 --> 34:36.000
Yeah.

34:36.000 --> 34:38.000
And so this is kind of a new concept for me.

34:38.000 --> 34:42.000
You know, I know you're partly joking there, but what would it take?

34:42.000 --> 34:46.000
Like, is this something you could just write in Python or something?

34:46.000 --> 34:48.000
Or tell me a little bit more if you've got something in mind.

34:48.000 --> 34:49.000
Oh, yeah, absolutely.

34:49.000 --> 34:51.000
I mean, whatever language could do it.

34:51.000 --> 34:55.000
But yeah, I mean, I think it underscores two sort of separate things that are important

34:55.000 --> 34:58.000
building blocks that just like hash functions.

34:58.000 --> 34:59.000
Right.

34:59.000 --> 35:04.000
Those come up all the time in a huge array of applications from just storing data to

35:04.000 --> 35:07.000
obviously keeping things secure and cryptography.

35:07.000 --> 35:11.000
And then on the other side, these tree data structures, which, yeah, like are hugely important

35:11.000 --> 35:14.000
in file storage and file systems of all kinds.

35:14.000 --> 35:17.000
You can combine these in very clever and interesting and fruitful ways.

35:17.000 --> 35:18.000
And they're worth studying more.

35:18.000 --> 35:19.000
I agree.

35:19.000 --> 35:22.000
PixelPimp, I think, puts it really well in our live chat room.

35:22.000 --> 35:28.000
Yet another example of why the most important class in the entire CS program is data structures

35:28.000 --> 35:29.000
and algorithms.

35:29.000 --> 35:30.000
Just saying.

35:30.000 --> 35:31.000
I think he's right.

35:31.000 --> 35:34.000
What is it about this that appeals to us so much?

35:34.000 --> 35:39.000
Because not everybody in the Linux community geeks out on this stuff like we do.

35:39.000 --> 35:41.000
What is happening here?

35:41.000 --> 35:46.000
What is the fundamental thing that this this Merkle tree, this wonderful tree is giving us?

35:46.000 --> 35:48.000
Like, what is it?

35:48.000 --> 35:53.000
Is it the way to store structured information that we can build things on top of that seems

35:53.000 --> 35:55.000
to appeal to us three?

35:55.000 --> 35:58.000
Well, I think it's that combination, the verifiability, right?

35:58.000 --> 36:02.000
The sort of integrity checks that we know what we put in as Linus put it in that talk

36:02.000 --> 36:04.000
we linked last episode.

36:04.000 --> 36:06.000
You trust that what you put in is what you're going to get out.

36:06.000 --> 36:07.000
Right.

36:07.000 --> 36:09.000
But then at the same time, it's that notion of history, right?

36:09.000 --> 36:12.000
Like the commits all reference the commits before them.

36:12.000 --> 36:13.000
Yes.

36:13.000 --> 36:15.000
And same with our file systems or with Git.

36:15.000 --> 36:19.000
I think that connects maybe it's less true with the file systems depending on how you use it.

36:19.000 --> 36:24.000
But for Git, especially in Bitcoin, because you have this verifiability and that history,

36:24.000 --> 36:28.000
you can build these open systems that you don't have to hide away or keep keep scared

36:28.000 --> 36:30.000
because it's baked into the structure.

36:30.000 --> 36:31.000
Yeah, that is that is you really touched.

36:31.000 --> 36:32.000
I think you touched on it right there.

36:32.000 --> 36:34.000
I think that really is it.

36:34.000 --> 36:40.000
I think what has been really fascinating to me is the elegance of these systems.

36:40.000 --> 36:45.000
And it seems like, you know, they're using JAWS, you know, fear not the shahs and other

36:45.000 --> 36:50.000
and other YouTube video that Wes sent my way, which I think we need t shirts with that on

36:50.000 --> 36:51.000
it.

36:51.000 --> 36:55.000
But it's the elegance of how it's all sort of put together.

36:55.000 --> 36:59.000
And, you know, to think that that Linus could just go away for, you know, what did he say

36:59.000 --> 37:02.000
something like six months and, and build something like this?

37:02.000 --> 37:05.000
Well, I'm sure he didn't come up with this out of nowhere.

37:05.000 --> 37:11.000
And yet he took what are some really sound concepts and built it into a system that now

37:11.000 --> 37:16.000
is sort of the default for distributed, you know, contributions to any project, which

37:16.000 --> 37:22.000
I think that's what really gets me is and same as Satoshi is just taking something and

37:22.000 --> 37:27.000
applying it to a new problem and building on top of multiple tools and things like that.

37:27.000 --> 37:28.000
Yeah, that's it.

37:28.000 --> 37:32.000
And then the thing that you end up with or that has been really impressive to me is that

37:32.000 --> 37:36.000
it solves a lot of different problems with elegance.

37:36.000 --> 37:44.000
And so, you know, holding some blob of information, but not duplicating it too often, or only

37:44.000 --> 37:50.000
as required, for instance, but just, you know, not only locally, but also in a distributed

37:50.000 --> 37:51.000
fashion.

37:51.000 --> 37:56.000
So if you think of, you know, forks of a project, well, everybody only has one copy of a very

37:56.000 --> 37:57.000
specific piece of information.

37:57.000 --> 38:02.000
And so even if you, you know, start a whole new project, and that piece of information

38:02.000 --> 38:06.000
is in it, if it exists locally on someone else's system, you don't have to copy it over

38:06.000 --> 38:07.000
the network.

38:07.000 --> 38:12.000
So it's also very there's this efficiency that is also, I think, really beautiful, very

38:12.000 --> 38:13.000
appealing.

38:13.000 --> 38:14.000
Yeah.

38:14.000 --> 38:17.000
And so it as a file system, all of those things obviously really matter.

38:17.000 --> 38:24.000
And so I think it's just like, I think I was odd this week at at how lucky we are to have,

38:24.000 --> 38:27.000
you know, people designing this kind of stuff, and that we get to use it.

38:27.000 --> 38:28.000
It's amazing.

38:28.000 --> 38:29.000
I know what you mean.

38:29.000 --> 38:33.000
You're like, there's been times where I've come across projects, and I'm like, this is

38:33.000 --> 38:37.000
amazing that people can be this intelligent and this, you know, think things through like

38:37.000 --> 38:39.000
this, and it's humbling in a way.

38:39.000 --> 38:40.000
So here's my question.

38:40.000 --> 38:42.000
Now, this is like the meta question.

38:42.000 --> 38:48.000
Now that you've gone down these rabbit holes, and you have a broader fundamental understanding

38:48.000 --> 38:52.000
of the tooling, does it change how you're going to interact with Git, and how you're

38:52.000 --> 38:54.000
going to use Git or GitHub?

38:54.000 --> 38:56.000
Or is it just now background information?

38:56.000 --> 38:58.000
Like, here's what I'm asking, I guess.

38:58.000 --> 39:03.000
Could you have just taken the just taken the easy answer and accepted that and or do you

39:03.000 --> 39:08.000
feel like having gone down this rabbit hole, you're better equipped somehow?

39:08.000 --> 39:09.000
Is there a real difference?

39:09.000 --> 39:10.000
Why are you asking?

39:10.000 --> 39:11.000
Could someone have done that?

39:11.000 --> 39:12.000
Or Brent?

39:12.000 --> 39:14.000
Because I think that's true.

39:14.000 --> 39:15.000
Okay.

39:15.000 --> 39:16.000
I'm just curious.

39:16.000 --> 39:17.000
Is there utility to it?

39:17.000 --> 39:20.000
Or was it just intellectual playtime?

39:20.000 --> 39:25.000
No, I was trying to solve a real problem, which was a lack of understanding of, okay,

39:25.000 --> 39:29.000
so our little website MVP, Stefan made a wonderful demo for us.

39:29.000 --> 39:32.000
And he's hosted this on his, you know, GitHub.

39:32.000 --> 39:35.000
And so I'm trying to contribute and learn Git at the same time, right?

39:35.000 --> 39:36.000
It seems pretty simple.

39:36.000 --> 39:41.000
So Wes suggested I make my own fork, which seems like a totally standard way to help

39:41.000 --> 39:43.000
with open source projects.

39:43.000 --> 39:44.000
Right.

39:44.000 --> 39:45.000
That seems pretty straightforward.

39:45.000 --> 39:48.000
And the GitHub interface, for instance, makes that real easy.

39:48.000 --> 39:54.000
So I, you know, last week, as we noted, made my first contribution and all that works great.

39:54.000 --> 39:57.000
And then I sat down this week and I thought, okay, I'm going to do the next thing that

39:57.000 --> 39:58.000
I want to work on.

39:58.000 --> 40:02.000
And I thought, well, how the heck am I going to get the new stuff that he's done on his

40:02.000 --> 40:04.000
project and bring it over to my, you know?

40:04.000 --> 40:06.000
And so I started looking that up.

40:06.000 --> 40:07.000
The answer should be fairly straightforward.

40:07.000 --> 40:11.000
And it turns out there are like three different standard ways of doing it.

40:11.000 --> 40:17.000
And any resource you look at does it a little differently because, you know, why not?

40:17.000 --> 40:20.000
You can either, like, fetch something and merge it, I guess.

40:20.000 --> 40:23.000
You can do a rebase, which some people are like, yeah, do a rebase.

40:23.000 --> 40:24.000
That's the standard way.

40:24.000 --> 40:26.000
And other people are like, duh, I'd be very careful with rebasing.

40:26.000 --> 40:28.000
You could totally screw things up.

40:28.000 --> 40:33.000
So the whole reason for my going down this rabbit hole, which maybe I should have mentioned

40:33.000 --> 40:37.000
at the start of all this, was to try to understand, like, well, what is this all doing?

40:37.000 --> 40:39.000
And what is it doing?

40:39.000 --> 40:44.000
You know, there's also Git pull, which turns out is just sort of a macro for a few other

40:44.000 --> 40:46.000
functions, Git fetch and Git merge.

40:46.000 --> 40:51.000
And so it's like, well, I need to understand what's actually happening so that not only

40:51.000 --> 40:57.000
am I, you know, using it short term, but I want to understand how to use this tool to

40:57.000 --> 40:59.000
its full potential for the long term.

40:59.000 --> 41:03.000
So I figured, you know, it's easy for me to dive into these rabbit holes.

41:03.000 --> 41:08.000
But that was the real problem I was trying to solve was, well, what is it actually doing?

41:08.000 --> 41:14.000
And why am I having such a hard time figuring out how to sort of do this relatively simple

41:14.000 --> 41:15.000
operation?

41:15.000 --> 41:17.000
I could easily visualize what I want to do.

41:17.000 --> 41:22.000
And yet, it seemed relatively confusing as to which one I should be doing, you know,

41:22.000 --> 41:24.000
if anyways, so that's how I got there.

41:24.000 --> 41:28.000
Yeah, it seemed like you didn't want to just have to have to use these scripts without

41:28.000 --> 41:31.000
understanding what they were doing or the potential consequences.

41:31.000 --> 41:37.000
Yeah, I think I've learned from, for instance, you know, copy and pasting our sync commands

41:37.000 --> 41:41.000
that if you don't understand what it's actually doing, you can, you know, even the slightest

41:41.000 --> 41:43.000
flag can get you in a lot of trouble.

41:43.000 --> 41:49.000
So I've wisely learned that it's better to understand what's happening first and then

41:49.000 --> 41:50.000
implement it.

41:50.000 --> 41:52.000
But I was having a hard time with that because of the conflicted resources.

41:52.000 --> 41:54.000
You deleted the whole MVP, Brent?

41:54.000 --> 41:55.000
How?

41:55.000 --> 41:57.000
It's just a dash D. I don't know.

41:57.000 --> 42:01.000
You know, Brent, the thing that you said in there that I like a lot is you said, well,

42:01.000 --> 42:05.000
if I'm going to use this thing for a while, I should probably learn what I'm actually

42:05.000 --> 42:06.000
doing.

42:06.000 --> 42:09.000
And that's the part that really clicked for me is I really like that mindset.

42:09.000 --> 42:11.000
And I have a very similar mindset.

42:11.000 --> 42:16.000
And it's like it's also having a kind of this confidence that, yeah, you can probably figure

42:16.000 --> 42:17.000
this out.

42:17.000 --> 42:18.000
Right.

42:18.000 --> 42:19.000
You're clever enough to figure this out.

42:19.000 --> 42:23.000
And if you're going to be using this, you should probably know what you're doing.

42:23.000 --> 42:24.000
And I like that.

42:24.000 --> 42:25.000
So I'm really I'm really impressed.

42:25.000 --> 42:29.000
The only thing that's kind of a red flag for me and I'm sure the chat rooms probably pick

42:29.000 --> 42:32.000
this up and I'm sure it's going to be a comment.

42:32.000 --> 42:35.000
So I should probably just bring it up right now because I think you're probably under

42:35.000 --> 42:36.000
the influence.

42:36.000 --> 42:38.000
But I don't know how many times you said I don't know how many times you said it.

42:38.000 --> 42:43.000
Somebody maybe is keeping track, but Wes suggested has come up a lot.

42:43.000 --> 42:48.000
And I'm just a little concerned that perhaps there's a long term campaign by one of the

42:48.000 --> 42:54.000
co-hosts on this show to influence the other co-host to become a closure developer.

42:54.000 --> 42:56.000
That's all.

42:56.000 --> 42:58.000
How did you know that came up as well?

42:58.000 --> 43:01.000
There's like a nice low key campaign by Wes.

43:01.000 --> 43:04.000
He's like, you know, maybe you should check out this.

43:04.000 --> 43:05.000
You know, maybe you'd want to know more about this.

43:05.000 --> 43:08.000
And he's just gently guiding you down a path right now.

43:08.000 --> 43:10.000
I'm not prescribing anything.

43:10.000 --> 43:14.000
I'm just going to try to suggest some, you know, interesting, interesting leads.

43:14.000 --> 43:16.000
I'm on to you, Wes Payne.

43:16.000 --> 43:17.000
I'm on to you.

43:20.000 --> 43:23.000
Bitwarden.com slash Linux.

43:23.000 --> 43:29.000
Get started with a free trial of teams or enterprise or a personal account at Bitwarden.com slash Linux.

43:29.000 --> 43:32.000
I started years ago as an individual user.

43:32.000 --> 43:34.000
Then I became a subscriber when I wanted a few more features.

43:34.000 --> 43:36.000
It's really nice the way you can step it up.

43:36.000 --> 43:38.000
You can absolutely try it for free.

43:38.000 --> 43:40.000
Get a sense of what Bitwarden can do for you.

43:40.000 --> 43:42.000
And they get an idea if the value is there.

43:42.000 --> 43:43.000
I think you'll find it is.

43:43.000 --> 43:45.000
But you have that range.

43:45.000 --> 43:46.000
You have that flexibility.

43:46.000 --> 43:50.000
And our audience is always, I think, a little bit more comfortable with software like this

43:50.000 --> 43:51.000
that's open source.

43:51.000 --> 43:52.000
And Bitwarden is.

43:52.000 --> 43:56.000
It's trusted by millions of individuals as a very active community.

43:56.000 --> 44:01.000
So you have Bitwarden support directly and you also have a big community, including many,

44:01.000 --> 44:05.000
many Linux users like Wes and I that run Bitwarden every single day.

44:05.000 --> 44:09.000
Bitwarden has account switching support to to make it really easy to switch between like a personal

44:09.000 --> 44:11.000
account and your work account.

44:11.000 --> 44:15.000
Or if you're working on a free software project and you want to keep your personal stuff and the project

44:15.000 --> 44:17.000
you're working on separate, Bitwarden is great for that.

44:17.000 --> 44:19.000
They've recently introduced a username generator.

44:19.000 --> 44:21.000
This is just totally great.

44:21.000 --> 44:26.000
So now why not have a unique username and password for every service you use.

44:26.000 --> 44:27.000
Right.

44:27.000 --> 44:32.000
But Bitwarden takes it even a step further and they're now helping you generate a unique email

44:32.000 --> 44:34.000
alias for every service.

44:34.000 --> 44:36.000
And this comes across to the mobile as well.

44:36.000 --> 44:39.000
So if you're on a website, you create a user account, a password, it saves it.

44:39.000 --> 44:41.000
Then you go log in on your mobile device in the app.

44:41.000 --> 44:43.000
They figure all that out for you.

44:43.000 --> 44:47.000
In fact, they make it super easy on Android to switch between accounts while you're doing the

44:47.000 --> 44:48.000
autofill in a login screen.

44:48.000 --> 44:50.000
It's like next level.

44:50.000 --> 44:53.000
And on iOS, I love the face ID integration.

44:53.000 --> 44:54.000
Love that.

44:54.000 --> 44:57.000
It feels like the future is so great.

44:57.000 --> 45:00.000
Using a good password manager might be one of the best things you can do for yourself and your

45:00.000 --> 45:01.000
accounts online.

45:01.000 --> 45:02.000
I mean, you might already know that.

45:02.000 --> 45:04.000
Maybe you haven't pulled the trigger yet, but you probably know that.

45:04.000 --> 45:08.000
Maybe go check it out if you haven't done this yet or maybe someone you know in your life, in

45:08.000 --> 45:11.000
your workplace, friends, family, maybe they need a little bit better password management.

45:11.000 --> 45:15.000
Something like Bitwarden could really make a huge difference for those folks.

45:15.000 --> 45:17.000
And it's easy to get started.

45:17.000 --> 45:19.000
Just visit Bitwarden.com slash Linux.

45:19.000 --> 45:22.000
Try for yourself or your business and support the show.

45:22.000 --> 45:31.000
That's Bitwarden.com slash Linux.

45:31.000 --> 45:39.000
And now, as the French say, it is time for Le Boost.

45:39.000 --> 45:45.000
Bronzewing boosts in six days ago with 1337.

45:45.000 --> 45:47.000
That's LeetSats.

45:47.000 --> 45:51.000
Hey, Chris, take a look at OpenMTCP router.

45:51.000 --> 45:55.000
An open source solution to aggregate multiple internet connections.

45:55.000 --> 45:58.000
You can run it on a Pi and even just add it to your current setup.

45:58.000 --> 46:02.000
Because I think you might want like one more layer of net and that might be perfect.

46:02.000 --> 46:03.000
It's going to be great, actually.

46:03.000 --> 46:08.000
You know, this is what he's saying here is this is like an open source alternative to my Peplink.

46:08.000 --> 46:09.000
That would be a fun project.

46:09.000 --> 46:15.000
And so to be clear, the project name is OpenMTCP router and we'll have a link in the show notes

46:15.000 --> 46:17.000
for that because this looks really cool.

46:17.000 --> 46:21.000
Anybody out there has any experience with this, please let me know.

46:21.000 --> 46:25.000
I would really like to know if that is a viable option.

46:25.000 --> 46:27.000
Another boost from logic.

46:27.000 --> 46:31.000
Six days ago, 500 Satoshis.

46:31.000 --> 46:32.000
Boost.

46:32.000 --> 46:34.000
First, we've got a tip, then a question.

46:34.000 --> 46:38.000
The tip is put underscore no map at the end of your SSID.

46:38.000 --> 46:41.000
Break the Wi-Fi location tracking and increase your privacy.

46:41.000 --> 46:48.000
This is the thing, I guess, but the Google truck would have to respect that no map thing.

46:48.000 --> 46:49.000
That's really good to know.

46:49.000 --> 46:50.000
Good tip.

46:50.000 --> 46:51.000
Yeah, I've never tried that.

46:51.000 --> 46:52.000
It's an ugly hack.

46:52.000 --> 46:54.000
I'm curious about this no map thing.

46:54.000 --> 46:58.000
It seems obscure and not like a standard.

46:58.000 --> 47:00.000
Can you give me some background?

47:00.000 --> 47:05.000
Like why would this work and where would this work and when would it not work?

47:05.000 --> 47:09.000
Because it seems kind of like one of those hacks that only works in a very specific case.

47:09.000 --> 47:13.000
Yeah, I think constitutionally speaking there, Brent, it's not a guarantee.

47:13.000 --> 47:18.000
I think what it is is that when Google and Apple and all these other companies that go around

47:18.000 --> 47:23.000
and do essentially war driving and find locations of APs and tie them to GPS coordinates,

47:23.000 --> 47:26.000
I think they're supposed to just respect this.

47:26.000 --> 47:28.000
Yeah, it turns out I think this one's a Google standard.

47:28.000 --> 47:31.000
Microsoft, for instance, has a different one, which is underscore opt out.

47:31.000 --> 47:36.000
So you could think this article from Android Police suggests you could do both.

47:36.000 --> 47:38.000
You're getting pretty ugly in your SSID, though.

47:38.000 --> 47:42.000
So you have to add a long string of exclusions to your SSID.

47:42.000 --> 47:45.000
I hate that so much.

47:45.000 --> 47:46.000
I hate that so much.

47:46.000 --> 47:47.000
Wow.

47:47.000 --> 47:49.000
That's really horrible.

47:49.000 --> 47:52.000
We'll just all be unique in the order of our exclusions and that's how I'll remember.

47:52.000 --> 47:54.000
Yeah, it's good to know, though.

47:54.000 --> 47:56.000
And a question from this boost.

47:56.000 --> 48:01.000
Love in the live show, but boost in the show versus the last episode.

48:01.000 --> 48:05.000
Is this a workaround way to live boost in the short term at least?

48:05.000 --> 48:12.000
Yeah, so the live boosting is it's near, but we're not there yet.

48:12.000 --> 48:16.000
We have to we have to start generating our own RSS feeds for that.

48:16.000 --> 48:24.000
And I'm going to have a chat with Alex Gates, the podcasting consultant on office hours this coming week about how they are,

48:24.000 --> 48:30.000
how they're doing that right now with PeerTube so that the setup is that you stream to PeerTube and you could do audio or video.

48:30.000 --> 48:40.000
And then that pushes out to the podcasting 2.0 apps and they open up their app like say Podverse and you'll have your list of shows and Linux unplugged would be listed there.

48:40.000 --> 48:42.000
It would just have a live badge next to it.

48:42.000 --> 48:50.000
And then you would hit that and it would just tune the app into the live stream and you could boost sort of like a YouTube super chat during the show.

48:50.000 --> 48:52.000
Yeah, I think that'd be I think it'd be really neat.

48:52.000 --> 48:56.000
So just that functionality alone, I think, is a brilliant, brilliant idea.

48:56.000 --> 49:03.000
Like it's sort of silly that you have to leave your podcast app to listen to a live podcast when you think about it.

49:03.000 --> 49:11.000
It have always been in the podcast app, but because there's been no evolution of the standards, there's been nothing the developers could implement.

49:11.000 --> 49:14.000
We've just come up with solutions that are outside the podcast app.

49:14.000 --> 49:18.000
And I think that has been a detriment to podcasters because imagine.

49:18.000 --> 49:24.000
That means that it puts all of your subscribers, gives them all of the option to tune in live when they want.

49:24.000 --> 49:29.000
And that's also happened to use some other random platform that might be Discord or Twitch or YouTube.

49:29.000 --> 49:31.000
Right. Right. I think that could be really great.

49:31.000 --> 49:37.000
And they're working on tying in cross app comments that are based on things like Activity Pub and whatnot.

49:37.000 --> 49:42.000
So I think also XMPP. So there could be a lot of really cool solutions coming down the pipe.

49:42.000 --> 49:46.000
So we are following it very closely logic, but it's still early days.

49:46.000 --> 49:57.000
That's for sure. Linux Trucker boosted in six days ago with 50,000 sats.

49:57.000 --> 49:59.000
Wow, thank you. That's great.

49:59.000 --> 50:01.000
Linux Trucker, it's nice to hear from you, too.

50:01.000 --> 50:08.000
They just wanted to say thank you for making Atlanta traffic just a little more tolerable each day and every day.

50:08.000 --> 50:17.000
Self hosted, unplugged, LAN encoder, keep the miles rolling and give me plenty of great ideas to fill my time at home, sometimes to the wife's chagrin.

50:17.000 --> 50:20.000
You guys rock. Keep doing what you do. The Linux Trucker.

50:20.000 --> 50:23.000
Thank you, sir. That's very nice of you.

50:23.000 --> 50:29.000
Golden Dragon also wrote in with a boost six days ago, 2222 sats.

50:29.000 --> 50:32.000
A row of ducks.

50:32.000 --> 50:38.000
I would love to get into get, but every time it seems to go, Ari, I have to give it another shot.

50:38.000 --> 50:45.000
Well, we have a bunch of resources. If you're into the internals of get, I'm going to put a bunch of stuff in this week's show notes.

50:45.000 --> 50:50.000
But last week, I think some of the some of the resources we shared are a good place to start.

50:50.000 --> 50:56.000
So, you know, to Golden Dragon, perhaps you like Brent just needed to kind of understand the underlying technology better.

50:56.000 --> 51:00.000
And so that could be that could be the trick boost.

51:00.000 --> 51:06.000
Well, we've got a boost from Gene Bean five days ago, 10000 sats.

51:06.000 --> 51:07.000
Nice. Thank you, Gene Bean.

51:07.000 --> 51:15.000
If you are interested in a GUI for get, even if just for the hard parts like resolving merge conflicts, then check out get cracking.

51:15.000 --> 51:19.000
I love it. And I think it helps ease people into get as well.

51:19.000 --> 51:23.000
But oh, wait, this is a double boost.

51:23.000 --> 51:27.000
1000 additional sats in this message.

51:27.000 --> 51:32.000
LOL. I sent my first boost before hearing the pick was get cracking.

51:32.000 --> 51:38.000
This is hilarious. And Gene Bean, don't feel embarrassed at all, because first of all, thank you for sending the second boost to clarify.

51:38.000 --> 51:43.000
But, you know, the great thing and also the tricky thing is the boost button is in the podcast player.

51:43.000 --> 51:45.000
So you don't have to leave anywhere to send us a comment.

51:45.000 --> 51:49.000
And so we say something and sometimes people comment on it and then we cover it later in the show.

51:49.000 --> 51:54.000
That does happen occasionally, but it gives us another chance to hear from you, which we like.

51:54.000 --> 52:02.000
So there's that, you know, I will note that get cracking is not an open source project, though it can be very beautiful.

52:02.000 --> 52:10.000
I did discover this week that I don't think I mentioned or actually some people wrote in and suggested it K as an open source alternative.

52:10.000 --> 52:14.000
Not quite as beautiful, but kind of tries to accomplish some of the same things.

52:14.000 --> 52:15.000
So give that a shot, too.

52:15.000 --> 52:20.000
You might also try on get, which is like a node app, a similar web app style.

52:20.000 --> 52:22.000
So a lot of options.

52:22.000 --> 52:24.000
All right. All right.

52:24.000 --> 52:27.000
User 386 boosted in five days ago with 5000 sats.

52:27.000 --> 52:29.000
B-O-O-S-T.

52:29.000 --> 52:33.000
Listening to this show got me excited about my career again after it hit a slump.

52:33.000 --> 52:40.000
When I started listening to LUP during the pre Linux Academy days, I was on the help desk answering the same calls day in and day out.

52:40.000 --> 52:42.000
I have been there. I have been there.

52:42.000 --> 52:48.000
I got so burned out dating myself, but I got so burned out fixing virus infected XP machine.

52:48.000 --> 52:52.000
God just drove me crazy. It just drove me crazy.

52:52.000 --> 52:57.000
But user three six is now I'm a sys admin at a decent sized enterprise and I get to tackle new challenges weekly.

52:57.000 --> 53:01.000
Thank you for changing the trajectory of my career and a double PS.

53:01.000 --> 53:03.000
Give that good boy Levi some pets.

53:03.000 --> 53:06.000
He is a good boy. He's such a good boy.

53:06.000 --> 53:09.000
I don't know if we can take credit for that 386, but we do.

53:09.000 --> 53:14.000
We do often hear that we help people, you know, keep their focus, stay excited about the career they're in and double down on it.

53:14.000 --> 53:17.000
And that I think is I think a really good thing.

53:17.000 --> 53:21.000
And if that's a part we can play, then we will gladly do so.

53:21.000 --> 53:23.000
Yeah, keep boosting and tell us more about your adventure sometime.

53:23.000 --> 53:25.000
Yeah, I do keep us updated.

53:25.000 --> 53:31.000
Cospelein boosted in five days ago with 3690 sats like he always does.

53:31.000 --> 53:37.000
Do not I repeat, do not roll back a snapshot on an umbral VM.

53:37.000 --> 53:39.000
Oh, you will lose your sats.

53:39.000 --> 53:42.000
We were mentioning last week, like, how should we do this update with that?

53:42.000 --> 53:44.000
Well, we could take a snapshot with the VM.

53:44.000 --> 53:48.000
He says instead, do a channel state backup and restore that if you need to.

53:48.000 --> 53:55.000
Otherwise, the network will think you're cheating if you try to restore a snapshot and will close your channels and the funds will go to the other party.

53:55.000 --> 53:56.000
Thanks for the show.

53:56.000 --> 53:58.000
Well, that is a really good thing to know.

53:58.000 --> 53:59.000
Mm hmm.

53:59.000 --> 54:01.000
And Cos reached out on Matrix.

54:01.000 --> 54:03.000
He's like, did you see my did you see my booth?

54:03.000 --> 54:04.000
And like, of course, I saw your booth.

54:04.000 --> 54:05.000
Yeah, of course I did.

54:05.000 --> 54:14.000
Like email and maybe Matrix Telegram, maybe Twitter, maybe boost.

54:14.000 --> 54:15.000
Yeah, definitely.

54:15.000 --> 54:16.000
That's your version of doom scrolling.

54:16.000 --> 54:19.000
Yeah, I just wait for it to scroll for me.

54:19.000 --> 54:21.000
Anonymous also sent in a boost four days ago.

54:21.000 --> 54:25.000
One thousand three hundred and thirty seven sats.

54:25.000 --> 54:28.000
Four score and seven boosts ago.

54:28.000 --> 54:32.000
My vote is for ANSI dot sis by a master boot record.

54:32.000 --> 54:34.000
I think they mean for the song.

54:34.000 --> 54:35.000
Chris, do you have this?

54:35.000 --> 54:36.000
I do.

54:36.000 --> 54:37.000
Should we sample it?

54:37.000 --> 54:38.000
Oh, I think we could.

54:38.000 --> 54:40.000
ANSI dot sis by master boot record.

54:40.000 --> 54:43.000
Can you guys kind of guess what sort of vibe this song is going to have?

54:43.000 --> 54:44.000
Does it? Yeah. Yeah.

54:44.000 --> 54:45.000
This is going to be pretty great.

54:45.000 --> 54:47.000
So chat room, let us know what you think about it.

54:47.000 --> 54:56.000
I don't know if this is our winner, but we have been searching for the song that we play before we start the show to get us hyped to do the show every single week.

54:56.000 --> 55:17.000
Is this it?

55:26.000 --> 55:45.000
All right, what do you think, boys?

55:45.000 --> 55:51.000
It sounds like sampling a dial up modem to me, which I kind of like and disk drive parts and stuff.

55:51.000 --> 55:54.000
It's a fun song. Yeah, it might be too intense.

55:54.000 --> 55:57.000
Yeah, like happy or playful.

55:57.000 --> 56:04.000
Yeah. Right. But what I would like one thing I think has going for it is I could see it really pulling us out of whatever mood we were in before.

56:04.000 --> 56:06.000
It's very captures.

56:06.000 --> 56:08.000
This part really sounds like disk drives right here.

56:08.000 --> 56:10.000
But you can kind of hear it, right? Like the searching.

56:10.000 --> 56:18.000
Yeah.

56:18.000 --> 56:21.000
Yeah, I like it.

56:21.000 --> 56:25.000
I could see adding it to our our live stream mix of songs.

56:25.000 --> 56:27.000
I think that's where it would fit really well.

56:27.000 --> 56:32.000
But I don't think it is our start the show song necessarily because both of you and I are a little lukewarm on it.

56:32.000 --> 56:34.000
How are you feeling, Brent?

56:34.000 --> 56:41.000
Yeah, I think you're right. I enjoyed it, but I don't think it's the song that we want to listen to every week for endlessly.

56:41.000 --> 56:45.000
I would say the rest of our lives.

56:45.000 --> 56:50.000
That being said, I think we are honing into better and better suggestions all the time.

56:50.000 --> 56:54.000
You know, we're kind of like narrowing the band of what we're accepting.

56:54.000 --> 56:57.000
And I think they're they're all kind of in that sweet spot.

56:57.000 --> 56:59.000
But we got to we got to keep going.

56:59.000 --> 57:03.000
I can't tell if Brent just complimented or called out the audience for the suggestions.

57:03.000 --> 57:07.000
Both? Yeah.

57:07.000 --> 57:09.000
We love the suggestions. Keep them coming.

57:09.000 --> 57:15.000
MG also boosted in five days ago with 512 sats.

57:15.000 --> 57:18.000
It simply says Airwolf. Yes.

57:18.000 --> 57:21.000
Yeah, we got some votes for Airwolf.

57:21.000 --> 57:26.000
I think Airwolf is my top contender right now, but I still don't know if I could marry it.

57:26.000 --> 57:31.000
You know, definitely wouldn't mind going out to dinner again with Airwolf, especially some of the remixes.

57:31.000 --> 57:34.000
Yeah, if we get some more remixes tossed in, that would help rekindle things.

57:34.000 --> 57:40.000
But like as the holidays get close and we're going to be recording a double or something like that, am I going to want to listen to it twice?

57:40.000 --> 57:43.000
We'll still have the same effect for those double days. Good question.

57:43.000 --> 57:46.000
Yeah. These are the things, man. These are the things we got to think about.

57:46.000 --> 57:54.000
Well, we also got to think about thank you boosts.

57:54.000 --> 58:01.000
Including 321 sats from Bon and a big old thank you boost from Jeff.

58:01.000 --> 58:05.000
23,451 sats.

58:05.000 --> 58:14.000
Dang, Jeff. Thank you. That's great. And also the ram for Brent too.

58:14.000 --> 58:18.000
I feel like that's a baller boost. Thank you everybody who did boost in to support the show.

58:18.000 --> 58:29.000
Don't forget for the next few weeks, your boosts will be split with Brent to help with his travel funds to get down to the studio so we can make some content while gas is super expensive and sats are cheap right now.

58:29.000 --> 58:37.000
So you can boost the dip. You can buy a little more and send them in and make a bigger difference than perhaps you could have a few months ago.

58:37.000 --> 58:41.000
We do have two picks that I want to cover before we get out of here.

58:41.000 --> 58:52.000
We've been talking about pod verse on the show and this is a new free podcast player open source free software that's on iOS, Android and available for the web.

58:52.000 --> 58:57.000
And I had a chat with one of the developers on office hours recently and I asked him Mitch in there.

58:57.000 --> 59:05.000
I said, Mitch, you know, would you consider releasing your web player as an embeddable element that anybody could use on their website?

59:05.000 --> 59:13.000
Because it's one of the best web podcast players I've ever seen and it has great support to visualize chapters and metadata.

59:13.000 --> 59:18.000
And of course, it does support boost and supports playlists and it displays the artwork really nice.

59:18.000 --> 59:22.000
It's just a clean and really nice player and it's open source.

59:22.000 --> 59:24.000
And Mitch said, well, actually, we're already working on it.

59:24.000 --> 59:31.000
And so this week they have released the embeddable podcast player from Podverse.

59:31.000 --> 59:39.000
So you go to Podverse dot FM slash embed and over there they got a player demo that kind of shows you how it works and your options there and how you customize the CSS.

59:39.000 --> 59:48.000
So not only is this just a great podcast client that has a lot of the new podcasting features, but now they've released it as an embeddable player for your website.

59:48.000 --> 59:52.000
And I think we're going to look at it for the new J.B. website as a potential.

59:52.000 --> 59:54.000
Very, very, very excited about that.

59:54.000 --> 01:00:01.000
You know, I did notice that they use the Linux unplugged artwork for their demo and also some of their marketing material.

01:00:01.000 --> 01:00:02.000
That's real kind of them.

01:00:02.000 --> 01:00:07.000
Yeah, I feel like that might be a nod to our conversation on office hours, perhaps, where I asked about that.

01:00:07.000 --> 01:00:14.000
It is really neat to see how quickly these podcasting clients are developing and adding new features.

01:00:14.000 --> 01:00:23.000
Speaking of new features, an application that we talk about on the show from time to time and absolutely love for connecting our VPS together, Nebula.

01:00:23.000 --> 01:00:30.000
This is another mesh networking option that is also based on the noise protocol, I believe, for encryption.

01:00:30.000 --> 01:00:36.000
And Nebula has been a tool that we kind of did a round up, oh, maybe a year and a half, two years ago.

01:00:36.000 --> 01:00:40.000
And just sort of steadily use it and don't talk about it a lot.

01:00:40.000 --> 01:00:45.000
But version 1.60 came out three days ago.

01:00:45.000 --> 01:00:52.000
And in here is a new experimental feature that I guess is one of their most requested feature, but it's the ability for clients to act as a relay.

01:00:52.000 --> 01:00:56.000
So you can really bust through difficult network situations now.

01:00:56.000 --> 01:01:00.000
Right, because if you recall, they've got these lighthouses, but that's really just for like setting up the connections.

01:01:00.000 --> 01:01:03.000
And then the actual traffic was always sent peer to peer.

01:01:03.000 --> 01:01:10.000
But now, presumably with these relays, you could have all kinds of relays set up in your private infrastructure, public infrastructure, whatever you needed to keep the plumbing going.

01:01:10.000 --> 01:01:11.000
Nebula is really cool.

01:01:11.000 --> 01:01:13.000
So we wanted to have an opportunity to mention it on the show.

01:01:13.000 --> 01:01:17.000
So check the link in the show note for that version 1.60 brings that.

01:01:17.000 --> 01:01:23.000
Surely that uses a Merkel tree under the hood somewhere, right?

01:01:23.000 --> 01:01:27.000
I don't know about that, but it does use the noise protocol, which WireGuard also uses.

01:01:27.000 --> 01:01:28.000
So we love that.

01:01:28.000 --> 01:01:32.000
So there's a lot of common threads and themes for our technology that we love.

01:01:32.000 --> 01:01:36.000
All right, gentlemen, is there anything else we need to mention before we get out of here this week?

01:01:36.000 --> 01:01:38.000
I'd say office hours on Tuesday live.

01:01:38.000 --> 01:01:39.000
Sure.

01:01:39.000 --> 01:01:40.000
Office hours Tuesday live.

01:01:40.000 --> 01:01:43.000
Join us over jblive.tv, noon Pacific, 3 p.m.

01:01:43.000 --> 01:01:48.000
Easter is the same time we do up on a Sunday, we just do it on a Tuesday.

01:01:48.000 --> 01:01:49.000
See you next week.

01:01:49.000 --> 01:01:51.000
Same bad time, same bad station.

01:01:51.000 --> 01:01:53.000
And the Mumble rooms open for office hours as well.

01:01:53.000 --> 01:01:56.000
Details of Linux unplugged dot com slash mumble.

01:01:56.000 --> 01:01:57.000
We have the quiet listening room.

01:01:57.000 --> 01:02:02.000
You can hang out and get a super high quality, low latency Opus audio stream.

01:02:02.000 --> 01:02:04.000
Or you can go to Jupiter dot tube and watch the show live.

01:02:04.000 --> 01:02:07.000
Hang out with us over there or get the replay.

01:02:07.000 --> 01:02:10.000
Or of course, Linux unplugged dot com slash subscribe.

01:02:10.000 --> 01:02:14.000
Get the RSS feed and you listen to it whenever the hell you want.

01:02:14.000 --> 01:02:17.000
And last but not least, a huge thank you to our members.

01:02:17.000 --> 01:02:25.000
Our unplugged core keeps us going and get special versions of this show ad free and the full live stream as a special thank you because they matter to us.

01:02:25.000 --> 01:02:28.000
And you can find out more at unplugged core dot com.

01:02:28.000 --> 01:02:30.000
Thanks so much for joining us on this week's episode of the unplugged program.

01:02:30.000 --> 01:02:48.000
See you right back here next week.

01:03:00.000 --> 01:03:15.000
So after this, Wes and I are going to go cook up some food.

01:03:15.000 --> 01:03:17.000
We've got some short ribs that are food.

01:03:17.000 --> 01:03:19.000
They're in the bath right now.

01:03:19.000 --> 01:03:21.000
You know, I still tell people that we make food that way.

01:03:21.000 --> 01:03:23.000
Like, wait, you soak it in water.

01:03:23.000 --> 01:03:24.000
But yeah, but it's in a bag.

01:03:24.000 --> 01:03:26.000
So it's like boiled.

01:03:26.000 --> 01:03:27.000
No, it's not boiled.

01:03:27.000 --> 01:03:29.000
It's like slow cooked.

01:03:29.000 --> 01:03:30.000
That's right.

01:03:30.000 --> 01:03:31.000
It's real slow.

01:03:31.000 --> 01:03:32.000
Real slow.

01:03:32.000 --> 01:03:33.000
It's really what?

01:03:33.000 --> 01:03:35.000
It's what the water has a thermal mass, right?

01:03:35.000 --> 01:03:38.000
And that helps keep it a real steady temperature, right?

01:03:38.000 --> 01:03:41.000
Whereas a slow cooker, I mean, I guess it depends on the slow cooker.

01:03:41.000 --> 01:03:43.000
But with the water, you got the thermal.

01:03:43.000 --> 01:03:44.000
Yeah, right.

01:03:44.000 --> 01:03:46.000
You just keep it real tight, focused.

01:03:46.000 --> 01:03:51.000
So here's how I knew that Wes was probably looking at his DHCP log yesterday.

01:03:51.000 --> 01:03:57.000
Wes is like, he sends me his messages like, there is an ESP home on my Wi-Fi network and I can't figure out what this device is.

01:03:57.000 --> 01:04:01.000
And I think I would know if I added like a smart home device to my network.

01:04:01.000 --> 01:04:02.000
I usually do, right?

01:04:02.000 --> 01:04:03.000
Right.

01:04:03.000 --> 01:04:04.000
Like, you'd know if you replaced your thermostat.

01:04:04.000 --> 01:04:06.000
And so we're sitting there, I'm like, you know, chatting back and forth.

01:04:06.000 --> 01:04:07.000
And what could it be?

01:04:07.000 --> 01:04:08.000
And we're talking about it.

01:04:08.000 --> 01:04:16.000
And I'm thinking like, I don't want to suggest like the obvious because it's kind of insulting to like say like, well, did you put a smart light in anywhere?

01:04:16.000 --> 01:04:18.000
Like, obviously you're thinking of that, right?

01:04:18.000 --> 01:04:19.000
But he figured it out.

01:04:19.000 --> 01:04:20.000
He figured it out.

01:04:20.000 --> 01:04:23.000
And you should tell him what it is.

01:04:23.000 --> 01:04:24.000
I don't want to steal it.

01:04:24.000 --> 01:04:25.000
It's pretty great.

01:04:25.000 --> 01:04:26.000
It's the sous vide.

01:04:26.000 --> 01:04:28.000
The sous vide itself has an ESP home in it.

01:04:28.000 --> 01:04:29.000
No way.

01:04:29.000 --> 01:04:33.000
That's great.

01:04:33.000 --> 01:04:35.000
I want to take it apart now and find it.

01:04:35.000 --> 01:04:36.000
Right.

01:04:36.000 --> 01:04:37.000
I think that's so funny.

01:04:37.000 --> 01:04:40.000
And you do have to, you control this thing with an app.

01:04:40.000 --> 01:04:43.000
So of course they needed a way to get on the network and do all of that.

01:04:43.000 --> 01:04:45.000
And of course the way they do, you know, it's all phoned home too, unfortunately.

01:04:45.000 --> 01:04:47.000
I wish it was open source.

01:04:47.000 --> 01:04:57.000
Because of course I tried to scan it and stuff, but all the ports are closed.

