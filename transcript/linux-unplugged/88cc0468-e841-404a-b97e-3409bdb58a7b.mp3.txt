Hey Wes, did you hear the good news?
No, I don't think so.
Wait, unless you mean Nano 5.5,
but that can't be it, right?
Nano 5.5 Rebecca is out.
Clearly one of the most accomplished pieces of software
with one of the most monumental releases
in free software history.
GNU Nano 5.5 has a new mini bar which will blow you away.
It has a new prompt color which will change your life.
And it has a new set mark match option
that highlights the result of a successful search
that's gonna change the way you search a Nano document.
And they've also brought a no-wrap toggle.
It's Nano, but not like you know it.
It's all new, it's brand new, and it's here to dominate Vi.
Vim?
Emacs?
You know what stood out to me with this release, Chris?
What?
Absolutely nothing.
Well, hello friends, and welcome
into your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Wes.
This episode is brought to you by Cloud Guru,
the leader in hands-on cloud learning.
The only way to lock in a new skill is by doing.
That's what it says right here.
And you can get your hands cloudy at cloudguru.com.
You know it's true, because it's written down.
This is episode 389, which if I recall,
is also the LDAP port number.
So this is episode LDAP, Wes.
Perfect.
It really is.
And also you're absolutely wrong about that Nano thing.
It cuts deep, and I will never forgive.
I mean, it's nice to have stable stuff too, right?
I don't need breaking features
and all kinds of changes each time.
Nano just works, and that's probably
what you want in a text editor.
Probably, probably.
But we actually have a really, really fun tool
that we're gonna talk about today
that's gonna change your Linux game
from this episode forever.
It's a way to enable your distro hopping habit
in a way that may be frankly irresponsible
for us to tell you about, but we're gonna do it anyways.
But before we get there,
we're gonna get to the community news.
And to do that, we gotta say time appropriate greetings
to our Mumble Room.
Hello, Virtual Lug.
Hello.
Howdy.
Hello, everybody.
It's really nice to see all of you.
We got a good crew in there.
They've joined us by going to linuxunplug.com,
clicking our Mumble link,
and getting the deets to connect in.
And Mumble's free software is high quality,
and it's also the lowest latency way
to listen to some of our live streams.
So welcome to episode LDAP.
Guys, are you ready to get started?
Excited.
All right, well, let's talk about something
that I didn't really know, and I feel kind of embarrassed,
but it's changing, so I'll just pretend
like I knew all along that Ubuntu
had world-readable home directories.
And that's changing in Ubuntu 21.04.
They're doing away with this existing practice,
and they're making new user home directories,
I guess, no longer world-readable.
What, Wes, how could this possibly be a thing?
Yeah, okay, well, up to now,
when you made a new home directory,
they were created with 7.5.5 as the permissions.
With this proposed change, it would be 7.5.0.
And if you don't speak octal, well, currently 7.5.5,
that's read, write, execute for the owner,
read and execute for the group,
but also for everybody else.
So with 7.5.0, now it's read, write, execute for the owner,
read and execute for the group,
and nada for everybody else.
Yeah, so I guess at least going back to 2006,
there'd been people that have been asking about this,
and I just somehow even missed that this was a thing.
The original logic seems to be that multi-user systems
had some level of cooperation amongst the users anyways,
and this made it easier, yeah, yes, it does,
to share and access files between users on the same system.
But of course, with Ubuntu on the server,
probably not a good idea, is it?
No, probably not, right?
I mean, sure, there are some of these
like local multi-user systems,
but these days it's more like you're gonna have accounts
running various services,
or you might have untrusted folks
that you just don't want easy access to files
if one particular user gets compromised.
I've always paid close attention
to my.ssh directory and those particular folders,
but I've never really given much concern about it
because for the most part,
I'm just the sole user of a system,
and when we set up a server,
it's pretty much like you and I
and maybe one other person, maybe Alex,
and we are actually cooperating in that regard.
Yeah, that is true.
There are some of those systems,
but at the same time, I think it's often,
at least for our local systems,
often that we all end up with pseudo anyway.
So if I need to access things, I can.
I think it just makes it a little simpler as a default.
You could still go and change your permissions
on your home folders,
as long as you had the right access to do so, of course,
and give folks access,
but I think maybe the argument before from SunSense
was admins knew what they were doing,
and obviously, of course, if you wanna make a folder
that everyone else can't read,
easy to do so as a private folder within your home directory,
but as it becomes easier and easier
to just boot up a random VM in the cloud somewhere
on a hosting provider,
there's probably a lot of users
who have no idea about that, don't think to check,
and are surprised when they find out
that everyone can read their private journal entries.
Very true.
This sort of feels like it's a legacy of old Unix systems.
Yeah, I mean, basically, if you think back
to how Unix first started off with the whole wheel group,
the users group, this was basically a leftover from it.
I mean, the idea that users would be able to share
the same space and share the same home folders
was kind of natural.
Yeah, and I guess it's fair to,
we should point out that Ubuntu's not the only distribution
that does this.
I just didn't really think about it very much.
I don't really think it's gonna affect
any existing installs, right, Wes?
This isn't something they're retroactively doing.
Yeah, it should be pretty safe.
It'd basically be going forward.
If you've upgraded your existing user,
they won't go and change existing permissions.
It'd just be new users you create,
and if you do it right now,
that gives three development releases
and two interim releases before the next LTS,
and so if there do happen to be any kinks,
get those out early.
Yep, that was the point I was just gonna make,
is you do, you wanna figure these things out now.
This is the time to do it,
and I think it makes a lot of sense.
So there was a story that we've been waiting to talk about.
People have been drive-by linking me this
with a little bit of a twist of a knife in the side, too,
as they laugh at me,
because there was recently a pretty significant
performance regression in Kernel 5.10 and ButterFS,
and today, well, actually, I think it was two days ago.
Sunday.
Yeah, Sunday, as we were recording Linux Action News,
Linux 5.10.8 came out.
Yes, it did, and making that very important
is it finally addresses the ButterFS performance regression
that was found in the 5.10 series.
Yeah, I guess it took eight point releases
to get that fixed.
So is this fair?
Because we talk about, oh, finally,
so it was discovered in Christmas, around Christmas,
and now it is the middle of January.
It didn't even go one major Kernel release, right?
And it was during Christmas and New Year's.
So is it really like that big of a deal
that it took eight minor releases
of the 5.10 Kernel release to get this fixed?
And they're like, how many distributions
even shipped this Kernel, really?
Let alone how many users that were at any kind of scale
actually deployed this Kernel.
Probably very few.
And so it really was sort of, in the grand sense, I think,
actually tidied up pretty quickly.
Yeah, no, I think that's a very good point.
It probably didn't affect that many users.
And of course, you could always use a previous Kernel version
if you really needed to.
Of course, this thing is likely to happen sometimes
when your file system support is built into your Kernel.
I guess it's just a problem ZFS users don't have.
But the good news is that it appears
things will get a lot better for ButterFS in 5.11.
But were you clear on what the regression was, Wes?
Because I know that one of the ways they tested it
was by extracting some files on, say, an SSD,
like a high-speed SSD.
And they would see somewhere between a 5 to 20 times
slower performance than expected.
Yeah, it sounds like a while ago they
made a change that would sort of clean up
how they were deallocating stuff that was no longer in use
and reuse some existing infrastructure that they
had in place for flushing inodes or during device
replace and snapshot and sort of leveraging
existing structures within the code base to clean things up.
But unfortunately, that had a downside
of stuff taking 5 to 20 times as long to extract,
because they ended up flushing a lot more than they really
needed to.
And to make it more complicated, a different bug fix
built on this behavior.
And so they couldn't just revert the whole change,
because that had the risk of introducing some other dead
locks in other places.
So the only strategy was to just roll forward,
which is also maybe why this took a little bit longer
than it might otherwise have.
This also was one of those situations
where a lot of people piled onto this story
and were like, look, it's still not good enough.
It's still, look at this.
They just had a performance regression,
as if regressions and little issues here aren't things,
and as if that's not where distributions step in and kind
of provide a bit of guidance before they deploy it.
Like, just sort of forgetting the entire way software
actually gets deployed in the Linux ecosystem,
it was sort of leveraged as an opportunity
to make fun of ButterFS again.
And I struggle to really understand the logic in this.
Like, we're all in this together.
We all want a file system that's capable of things
like compression, encryption, snapshotting, send and receive.
These are just basic volume management.
These are things that we want in a file system
to be a competitive operating system,
and we want them built in.
And ButterFS is the window to that world.
A friend of the show recently had a conversation
with an Oracle executive about the possibility of ever
sending a ZFS upstream and relicensing it to a GPL,
and he was told flat out, never going to happen.
And this was within a week.
That sounds about right to me.
You could take my word for it or not, but it happened.
And it's just ZFS is in a position
where they like it right now, and they're not
going to relicense it, at least according to this one person.
Now, ButterFS is here.
It's functional.
And it also solves use cases that ZFS doesn't.
And I think this is the only other area
I just wanted to touch on, not to get on a whole ButterFS
thing here, but ButterFS is really great on devices
that ZFS isn't a particularly good option for.
ButterFS is fantastic on the SD card in my Raspberry Pi 4
or on the USB disk that I use.
It's fantastic on a laptop with a single SSD.
It works so great as the root file system for our arch server.
It saved our arse several times.
Because it's ButterFS, it always mounts.
So our system boots, even if something
went wrong with the kernel module for ZFS, which happens.
And it also means we get snapshots
after every major upgrade or install in our arch box
automatically, because we've tied in the right tools.
That's all just built in with ButterFS
and just connecting the right dots.
And then we can restore the module.
We can get things working again.
And we can get our ZFS pool back online.
But it means our server comes up.
And we can SSH into it.
And we can resolve the issue.
ButterFS is just undeniably better at that particular use
case for us.
If the root file system were ZFS,
our system wouldn't boot sometimes.
And we solve that and still get compression,
still get encryption, and still get snapshots with ButterFS.
Because it's built right into our kernel.
And it does a great job.
And we're not the only ones that are saying this.
Yeah, true.
I mean, I think just to your earlier point,
the fact that this bug was A, found
is a sign that folks out there are really using it.
And B, that it was fixed relatively quickly
is a sign of good, active maintainership,
that people are using it and that there's resources here
that people want to continue improving the file system.
And at the end of the day, after this patch set in 5.10,
ButterFS is significantly faster than it was in plain 5.9.
So OK, there's dips and valleys, and it goes up and down.
But at the end of the day, we just
keep getting a better and better net file system.
Right, I completely agree.
And it means that in future iterations,
we're just going to be able to build on what's coming in 5.11.
And yeah, I mean, you could poke a little fun
that it took eight minor releases.
But I don't know, Neil, when you consider the fact
that there's holidays in there, it's a pretty quick turnaround.
When it comes to stuff like this, it's really hard.
And Joseph Bastic and I talked once about this.
And he says, what I wouldn't give
for having a standardized, comprehensive storage workload
test, because then we could catch all the things.
And it came up, I think, what, five, six days
before Christmas?
Everybody was already jumping out because holidays.
And even with that, the turnaround time to the initial fix
was still less than 20 days, which is freaking impressive.
That is way faster than any third party
or commercial software vendor has ever
done for me in my entire life.
And another point here about dips and valleys
and whatever with ButterFS, ButterFS
is not the only file system that has ever
suffered these kinds of things.
XFS, for example, in the 5.9 cycle,
got a major data corruption bug that
was introduced midway through and then
had to be fixed after the fact.
It happened again with 5.10 and had to be fixed again.
These are things that happen, major or minor issues.
Data corruption stuff, thankfully,
doesn't happen very often with ButterFS
anymore in terms of new developments and code churn.
But because the kernel's highly integrated
and has a lot of subsystems, and there's a lot of people,
and the development workflow for the Linux kernel
is, in my opinion, pretty awful, it's
impressive how well the Linux kernel continues
to be developed given all of these factors.
So most people weren't even going
to experience this problem because the workload was
very, very specific.
You had to be unpacking a large tarball
with a lot of little files in one basically IO
transaction, which is what led to this particular problem.
And I have been bitten by ButterFS bugs way in the past.
But as a pretty extensive ButterFS user now,
I have it in several.
I have it on laptops.
I have it on pies.
And I have it on server metal.
I wasn't bit in any of those scenarios by this, thankfully.
So again, I don't think it was a wide deployment.
But speaking about the kernel development process
and what that's like, next week on the show,
the executive editor of lwn.net, Jonathan Corbett,
is joining me to talk a little bit about the kernel
development, the state of maintainers,
and also LWN because they have an anniversary coming up.
So that should be a good conversation in episode 390.
So stay tuned for that.
But yeah, I'm glad to see it fixed.
I'm glad to see the performance stuff coming.
And I just kind of feel like we're all on the same team
when it comes to some of these file systems.
And taking a shot at it when it has a bug is, I don't know,
something about it, just something about it.
It didn't sit right with me.
And I think it's where I think the issue is,
and this is my last thought on it.
I'm sorry, but this is just something
I've been reflecting on.
You've got a ButterFS bug in your ear.
Better than somewhere else, I suppose.
I think what you have is you have people
that have different use cases that are looking at a tool,
thinking, well, this isn't the right tool for me.
There's a reason why our large pool runs ZFS.
Because in our estimation, that was the better tool
for that job.
And it has remained that way, despite all the different
operating systems we've tried.
We've always kept ZFS on that pool, and it has served us well.
Yep, it's been great.
We wouldn't reload.
If we got a new brand new disk array,
we would do ZFS again on that.
That's the use case for it.
And I think what you have is you have people
who are not in the right use cases that
are comparing file systems.
And it's an apple to oranges kind of comparison
in that regard.
And it's totally fine if it doesn't work for you, right?
Plenty of file systems I never touch, by and large,
but they are really helpful for other folks, like ex-fats,
say, right?
And that's perfectly all right.
With Linux, we have options and a huge array of options.
I love that.
Linode.com slash unplugged.
Go there to get a $100, 60-day credit towards a new account,
and you support the show.
Linode is our cloud hosting provider,
and Wes and I were having a lot of fun last night.
And thank you, Linode, for the snapshot system,
the way it works.
It really just gives us peace of mind
because we wanted to increase the amount of RAM
and upgrade our Synapse server at the same time.
The software, the RAM, and we wanted to also do the OS.
And so it just was so nice because, first of all,
one button to make a snapshot right before you start.
But what they do that other cloud providers don't
is they give you an opportunity to label it.
So you label that snapshot.
You hit Go.
And then the great thing is there's a notification area
in the dashboard.
It just kind of tucks it up in the corner.
You don't have to see it if you don't want.
But if you click it, it actually gives you
a live progress bar of how the snapshot's going
with time estimation.
So Wes is at home.
I'm at the studio.
I can tell him, all right, we've got four minutes
until the snapshot's done, and then we'll do the upgrade.
And it just works so smooth.
And when we rebooted the system and realized
that we didn't know the root password anymore,
I was able to get on the console and get that resolved
and reset the root password in seconds from their dashboard
and get us back in and get us going.
And I just really appreciated the tools
that Linode made available to us on top of other things
like we have moved Linodes between data centers now,
and that's really cool.
Adding additional memory to our Linode was easy.
We went from 4 gigs to 16 gigs in seconds.
They make all of this really straightforward.
So you don't have to be an expert.
But if you are, you start to see a few things
that when you drill down in the UI, they're there for you
that you can really appreciate.
But what I get out of that is you
can tell they have a love and a passion for this technology.
But really, that's what got them going.
That's why they started in 2003 as the first company
in cloud computing.
They started three years before AWS
because they are Linux users, and they get it.
They get how to build on the technology.
That's what I love about a lot of the vendors
in our community.
And through the years, they've supported events like Linux
Fest Northwest, All Things Open, the Kubuntu Project,
a bunch of others.
Those are the ones that I have seen personally.
And of course, now they're making
it possible for Jupyter Broadcasting
to go independent and give our content away for free.
That is a massive value.
And I just think it's such a great combination
because it's a great service built by Linux users supporting
a Linux business.
And you can get a $100 60-day credit when you
go to linode.com slash unplug.
Go there, support the show, get that $100,
and play around with their object storage.
Just a quick mention, we are going
to be talking a little bit about how
you can use object storage for backups with our pick later.
And it works with any S3 compatible object storage,
which Linode has.
And it's so great because you get fast, reliable storage up
in the cloud without having to manage a server in front of it.
There's a lot of uses for that, including
backups, static websites, and many other things.
So get started at linode.com slash unplugged.
Before we get into the show much further,
I think this is a good moment for us
to take stock and do a little housekeeping.
And I want to start with Minimac,
because he has some updates for us on an upcoming Luplug
session.
Yeah, thanks, Chris.
So now that probably the whole world
knows that we will have a talk about accessibility
tools in Linux next Sunday on Luplug,
the only thing left to me is to reveal
the name of our special guest we have during the talk.
So I have the pleasure to announce
that Daniel Ferre, the founder of the elementary project,
will join us for a Luplug session.
So what can you expect during that talk?
So we will have Justin, a user of our JPMobile community,
and he will share his experience and workflow with assistive
tools in Linux.
And Daniel Ferre will give us an inside view
on how the elementary team tries to make life easier
for people with disabilities.
And maybe Daniel might also give us
an overview on features we can expect in the future elementary
6 release.
Oh, yeah, get some info.
Yeah, yeah, yeah.
There are some really cool things to mention there.
And I hope we will have a really good talk.
Yeah, so that'll be January 24th on Sunday
at noon Pacific, 3 PM Eastern.
And all they need is Mumble, right?
Just join the lobby.
Just join the lobby.
I hope you'll find the time next Sunday.
Just join the lobby.
And if you want, we can do some sound checks
if you want to participate actively during the talk.
So thanks, Chris.
Yeah, looking forward to that.
And we do put the plugs up on the calendar, too.
So if you want to get in your time zone,
just go to jupiterbroadcasting.com.
Slash calendar.
Also, you never know what we might have next.
If you hear the pre-shows, we're always
kind of kicking around new show ideas and whatnot.
So get subscribed to the All Jupiter Broadcasting shows.
One feed, you get Coda Radio, self-hosted, Linux Action News,
and Linux Unplugged.
It's nice.
It's tight.
It's tidy.
And it's a bunch of great content.
That's the All Shows feed.
You can find that at jupiterbroadcasting.com.
And Mr. Bain, I think that's all the housekeeping
we have for this week.
It looks like everything around here is tidy.
It sure does.
Nice job.
So I'm going to say Ventoy.
You think I got it?
Oh, gosh.
I didn't even think to question it.
That's just what I've been calling it all along.
Oh, I question everything I pronounce on the air.
You probably should.
All the time.
I have a complex about it at this point.
So Ventoy is a new bootable USB solution.
It's 100% open source.
It's simple to use.
And you write it to a USB thumb drive.
It creates the Ventoy bootable partition.
And it creates a storage partition,
which you can kind of format as you like.
And then you drop ISOs, just mount it on your desktop,
drop ISOs in this directory on this Ventoy USB stick.
And they show up as bootable options
when you plug it into a PC and boot off of it.
So if you have, say, several ISOs up there,
a grub-looking menu comes up, and each ISO
is listed right there for you to choose.
And it just begins to boot that ISO.
So it's like, you no longer, you write this to your USB stick
once, and then from that point forward,
you just drop ISOs on it.
Yeah, aren't you tired of constantly having to reflash
that same USB drive when you already had Fedora on there,
but now you're putting Ubuntu, and suddenly you
want Fedora again?
It's annoying.
I actually can't tell you how useful this is for a guy like me
who often takes laptops home for a weekend project for the show.
And if I'm not careful, I get in a situation
where I need an ISO, and it takes forever to download
an ISO on my connection.
And I will write, right now, Wes,
I have two different USB thumb drives in my bag.
One is an Arch ISO, and one is an Ubuntu ISO, or maybe Fedora.
I can't remember.
I overwrite them from time to time.
So then I get home, and it's like, oh, I got the wrong one.
And now I'm just going to wait for two hours
while I download an ISO.
This is so much simpler, because I can just put all of them
here at the studio on one thumb drive
and just take that thumb drive with me.
What's also really neat is it's not just ISOs.
Maybe you boot into Windows sometimes,
or you want to have something to help around
with family or friends.
We need to install Windows, perhaps, to re-kick things.
If they've got plugins to boot from VHD files or even.wim
images, that's awesome.
Yeah, and we've kind of toyed around with other things
like this before.
But this is just straight up the simplest.
If you're on Windows, they've got an EXE process
to go through to write the stick.
But on Linux, you download a Bash script.
I mean, there's several ways to do it.
But the simple way is you download their Bash script,
give it a little quick look, and then you run it and just point
it at the thumb drive device.
Make sure you get that right.
Yes.
Yes, don't do dev SDA.
For me, it was dev SDF, because I just have a few drives.
And you just kick it off.
You just execute the shell script,
point, and give it the device path.
And in a few seconds, after it asks you,
are you really sure you want to wipe this thing, it's done.
And it's good to go.
You can tell that this has been a pretty battle tested tool,
because they have a lot of nice options.
So by default, it'll set things up with an MBR still, MBR style,
so that it supports both legacy BIOS and UEFI
right on the same thing.
But if you want to just go full future forward,
you can use GPT and UEFI only if you want.
That's what I did, because I don't have any more legacy BIOS
systems these days, thankfully.
It's nice and consistent.
And in the same way, they set up one sort of grub system
partition where all the stuff that Ventoy uses internally is.
And then you've also got a partition just for all
of your image files.
And by default, that's exFAT, which
I think is designed to be pretty universally accessible.
So if you're trying to boot it on some random Mac
or Windows PC, it'll just work.
And you have access to actually update and add new images
without having to worry about some weird Linux file
system on there.
But on the system I was using, I had an older kernel.
I hadn't set up the exFAT support.
So I just reflashed that to ext4.
And you can do that no problem.
They've got that in the docs.
So if you're just like me and using it on Linux systems,
that might be the route you try.
Yeah, because then you get larger ISO support.
And this thing supports big ISO files.
In fact, I think they said they tested up to 600, more than 600
ISOs on this thing at once.
Wow.
It must be quite the menu to scroll through.
Because it's all really kind of a grub menu.
I wonder, though, if you saw, so when you boot it up,
like a typical boot screen, you got your options
along the bottom.
And some of them are kind of nice.
You can kind of preset some video mode stuff.
And actually, there's some really nice things
that it lets you do.
But did you see what F1 does?
No, I don't think I tried F1.
OK, so this is right up your alley.
Because what F1 does is it copies the contents of ISO
into RAM.
So then you're running the live environment out of RAM.
Instead of using the USB ISO image,
it just copies all of the contents into a RAM disk
and then executes it from scratch.
Like, you get the full boot menu.
You get grub where you can select,
do you want the open source only boot?
Or do you want the one with proprietary drivers?
Like, if your distro asks you that,
you get all of that still.
But just all of the contents of that ISO image
are coming from a RAM disk.
Wow, yeah, it's so cool.
And there's all kinds of other plug-ins
if you want to customize things like add your own theme,
customize how the menu system works.
It's just really well-developed.
Yeah, I'll have to just keep this now as one of my tools.
I used to have, forever ago, a Zantec.
I actually still have it, a Zantec USB 3.0 hard disk
with USB-A plug.
And inside, I put it in a 128 gigabyte, 2 and 1 half inch SSD.
And what it does is it uses a CD-ROM emulation, the USB CD-ROM
emulation.
So when I plug it into a device, it actually shows up as a CD-ROM
and it uses the ISOs that are on that 128 gigabyte SSD
as the CD-ROM contents.
And that's pretty neat, but it's got this tiny little janky
80s style LCD screen that I have to scroll
through all the ISOs and select.
And it's this weird process where you plug it in
and you need power from the bus to select the ISO,
but you want to select the ISO before the system fully posts.
So you either race into it really fast
or you power it up, select the ISO, and then do a soft reboot.
You have to do this whole weird dance with it.
Where this is just you tell the system
to boot off the USB stick, choose your ISO,
and then it's like you had a USB stick that only had
that distribution's image on it.
It's just great.
It's a lot of fun and makes it so much easier to distro hop.
Or just have the different distros
I might need easily available so I
don't have to re-download them like an animal.
It is interesting that some folks in IRC
are commenting they've had problems on older hardware
or even some reports here from Rolf on Skylake laptops.
So far in my testing, and I tried it on pretty much every
system I've got in my house, no problems,
but you do be aware that maybe it won't work everywhere.
But I like the idea of just having this as default.
And OK, I've got extra USB drives if for some reason
it just doesn't work on some machine.
Yep, and like Wes said, it does have UEFI support,
but it also has ARM64 UEFI support.
So if you've got an ARM64.
Fancy.
I know.
I know, Wes.
I know that.
And it has a plug-in framework, which
it did not play around with.
So I guess in theory, you could really
kind of customize this thing quite a bit.
Maybe you're an IT shop.
Yeah, you could imagine having a sort of standard Vento setup
you just give to all of your techs.
They've got it in their bag.
They can boot up to whatever, you know, emergency CDs.
There's even a Vento Live ISO they've
got if you don't have it already set up and just need
an environment to get it installed.
And the thing that's nice too is they
do make it kind of straightforward for Windows
users to get going with this.
That's not something we talk a lot about, but it does matter.
So much easier, right?
Especially if you're just flirting around playing
with Linux.
I mean, here I am using ddrescue in the shell like an animal,
but that's just not very accessible.
Whereas dragging and dropping an ISO file and then rebooting,
that is.
Yeah, and I wonder, like, what are the must-have ISOs you'd
put on something like this?
System rescue CD seems like a pretty solid ISO
to always have on there, regardless,
just in case all of a sudden you need it.
Yeah, definitely.
Or Clonezilla, similar things.
Yeah, yeah, Veritunis is Clonezilla.
That's a good one.
Yeah, that is good.
Good point.
I think too, like, this might actually push me over the edge
to finally get a USB-C thumb drive,
because I'm kind of getting sick and tired of using
adapters and whatnot.
Mm-hmm, yes.
And maybe I'll get like a kind of a higher speed one
if I can.
And 128 gigs would probably be plenty.
I never even, when I had my Zalman, whatever it was,
thing, I never exceeded the 128 gigs.
Because by the time you're using that much space,
the Linux ISOs on there are so old,
they're not really relevant anymore.
You just kind of cycle them out.
So you don't need a ton of space unless you're a maniac.
Tails, PyCrash points out, Tails.
Cassidy in the chat room says, dban.
Yeah, yeah, that, yes, yes, yes, yes.
I once had a situation where I couldn't
get to dban quick enough.
So it was kind of like a, I was working
at this place that was called Dream Dinners.
And they specialized in this online ordering process, which
was brand new back then.
And they specialized in this online ordering process
where you would put together your dinners,
and then you'd go into one of their affiliate kitchens, which
were kind of just all over the place, all over the country.
And you would go in, and you would actually
assemble everything into bags and stuff,
and then take it home and freeze it.
It was kind of nice because they did all the thinking for you,
and they did all the ingredient selection.
But then you could add, if you like a little bit extra garlic,
you'd add a little bit extra garlic.
But they've got it all chopped up, prepared, or precooked,
or whatever needed to happen for those ingredients.
Yeah.
And the instructions you put in there.
And of course, they've got a professional chef or two
in there that answer your questions.
And everything's chilled and clean and all that.
But of course, what people really wanted was they
wanted meals delivered all the way to them.
And they were just one step removed from that.
You had to go to their franchises.
But to power all of this, it's kind of funny.
This is our LDAP episode.
Because to power all of this was a Red Hat Enterprise Linux
setup with LDAP that powered the user logins,
that powered the desktop logins through Samba,
that powered the website back end to manage it all.
It was all done with a single sign-on system that used LDAP.
And we would kind of monitor this system.
And I would kind of run it.
And I was a server guy.
And I had an IT help desk guy.
And it was basically me and him and a developer,
and then eventually two developers.
And that was the entire team.
And this infrastructure ran really great.
I was very proud of it.
Because it was, I guess, what we would now call hybrid.
But we didn't call hybrid back then.
But it was a good chunk of on-premises infrastructure,
but then supplemented with cloud infrastructure
for our front-end web server and database and stuff.
And that was just how I ran it.
And this efficiency group was hired
to come in and make recommendations.
And they came in and they analyzed everything.
And they said, first thing you've got to do
is you've got to switch to ASP.
You've got to drop this PHP stuff.
This is some open source garbage that isn't going anywhere.
You've got to get rid of this.
You need ASP, Active Server Pages.
And you need to run it on IIS.
This back then was probably Server 2003.
And you need to switch to Exchange and Active Directory.
And you need to fire your IT director, which wasn't me.
But they were a friend of the owner.
So instead of firing her, they just transitioned her.
And they brought in this new guy who
was recommended by the company and had worked for Boeing.
And he had just kind of started decimating
the entire infrastructure.
And he and I never really quite got along.
It was one of those things where I'd get in at 637 AM
to make sure everything was working when
the business started.
And then I'd maybe head out at 4 o'clock.
And I was passing him in the stairs.
And he looks over to me and goes,
I can tell who's dedicated by the cars that
are in the parking lot at the end of the day.
Your car usually isn't there.
I'll remember that.
And that's one of the first ways I met him.
And screw him, right?
Because I was actually getting up, commuting down there.
And from Smokey Point, it was a good drive.
Getting down there, and I was making
sure all the systems worked.
And my IT guy, Josh, he and I worked together.
He was there to make sure everybody
got a smooth start in the office.
So the office was there to support
the rest of the infrastructure.
We really went the extra step.
And so when he wanted to remove all of the Linux,
I was just kind of done at that point.
That's when I actually decided I was no longer working
in corporate America, and I was just
going to do independent IT contracting.
That's actually what kicked off my IT contracting career.
So this is about a dozen years ago.
As one of the hiring conditions, when I started that job,
I wanted a System76 laptop.
And so I used the hell out of that laptop.
I ran that entire infrastructure from that System76 laptop,
which made me one of their very early customers, too.
And when I was kind of coming to the realization I was leaving,
I went in, talked to the boss about it.
Said, I think I'm going to move on,
but I want to give you guys a good transition.
He's like, oh, OK, well, all right.
Well, why don't you go to lunch, think about it,
and come back, and we'll talk.
All right, well, there's fish and chips place next door,
so I was happy to go get lunch.
So I'm eating my fish and chips like an idiot
when I should have been downloading DBAN.
But instead, I get back from my lunch,
I sit down on my laptop, and I literally think to myself,
you know, I wonder if he's just going to can my ass.
I better get ready just in case.
And I'm not joking, I launch my web browser
when he comes up to my desk and says,
I'd like you to come into my office.
He fires me on the spot and then doesn't let
me ever go back to my desk.
He goes and boxes my stuff up and takes my laptop,
which was logged in, had my web browser up.
I don't know if the screen had locked or not,
because I didn't see it.
And that was the moment where I was like,
I regret not having DBAN in my bag ready to go,
because I could have popped DBAN in and walked away,
and gone into his office and just let it wipe.
Because if you're not familiar, DBAN audience
is the tool to do like an intelligence agency
grade wipe of your disk.
And I did have, I was talking, I was not happy with him.
So I had emails on there and stuff like that
that were critical of him.
And I didn't want him having that and keeping that.
And some of them were private conversations too in Pidgin.
They weren't like stuff I wanted him to see.
Yeah, so it was a real shame that I couldn't wipe it.
And so having a tool like Ventoy is kind of powerful,
because it means that I could always
have a thumb drive on me that has DBAN on it.
Just right in literally your back pocket.
Always ready to go.
And so I mean, these tools like this
are kind of important for that regard.
You can boot and nuke.
Yeah, good old boot and nuke.
But man, that guy was such a turd.
And then they went out of business, not shortly after that.
Oh, I wonder why.
Yeah, but it was something.
It was one of my better infrastructures.
I wouldn't say it was my best, because I
think I went on to build my best when I was a contractor.
But it was up there.
I was really proud of it.
And that single sign on stuff through LDAP and Samba
worked really good.
Windows desktops, Linux machines, website logins,
all of it was great.
It's so nice when things click like that.
And it just works.
It's reliable.
You feel like the system's actually doing what you need,
and you're serving the business.
And that's the whole goal.
Now I have literally no idea how I would set any of that up.
It's funny, right, that I used to build that and support it.
But today, I'd probably start picking it back up.
But I couldn't tell you right now how I would
set a system up like that.
Oh, it's fine.
It's just a couple of clicks in the cloud.
Ha ha ha.
Oh dear, ohdear.app.
Complete website monitoring from multiple locations
with broken link and mixed content detection
and advanced SSL certificate reporting and a lot more.
Visit ohdear.app and use promo code Linux for a $10 discount
on any plan.
But you can sign up with no credit card required.
So it's when you go to subscribe,
use the promo code Linux.
This is really a tool I could have used a lot back in the day
when I was running infrastructure,
because I want to be the first to know when something isn't
available, not the customer or not even my customer
at the time, which would, of course, be the end users.
Ohdear has global uptime checking
of servers worldwide that report on problems
as soon as they happen.
But the nice thing is you can go deep into the site, too.
They can crawl and index your entire website.
They can detect broken links, which, of course,
can hurt your SEO, but also just don't look good.
And they can probably notify you.
They have a really intelligent scheme around that.
You can also monitor things like your cron jobs
or your window schedule tasks to make sure
that they actually triggered and fired off
like they should have, because that also
can lead to other problems.
And ohdear is always monitoring for performance.
You get the idea of the speed of your website
right now and over time, so you can kind of
see if there's a trend happening.
But what makes ohdear very special is their API.
It lets you configure everything about the application.
Everything you see in your dashboard
can be controlled with their easy-to-use RESTful API.
It's got kick-ass documentation.
And as a bonus, all the changes you make via the API
will be visible in real time on your dashboard.
ohdear is monitoring, and it's a solution
that embraces automation.
So if you're looking at monitoring solutions right now
and you're thinking, I'd really like something
that we can integrate, that we can automate,
that we can deploy as code, you need to check out ohdear.app.
It's ohdear.
It's a comprehensive API.
It means third-party integrations are simple.
It's really easy to get going with command line
clients, Telegram chatbots, SDKs, Terraform providers,
and a lot more.
So right now, head to ohdear.app and start a 10-day,
no-strings-attached trial, no-credit-card required.
You can get set in less than minutes.
And when you do sign up for any plan,
use the promo code LINUX for a $10 discount.
And if they ask, tell them Linux Unplugged sent you.
ohdear.app.
Check them out and use promo code LINUX when you do sign up.
We got a nice batch of feedback.
How about I take the first one, and then you
take the next one?
We just kind of do it like that.
Sounds good to me.
Martin writes in about OpenSUSE and FOSS Adventures.
He says, dear Chris and Wes, I'd like
to give you some feedback on your OpenSUSE feedback.
I'm a longtime JB fan since 2010.
Wow.
That has been a while.
Oh, gee.
That's great.
And he says, he uses OpenSUSE.
I remember when you and Brian were quite positive of OpenSUSE.
Yeah, but I'm not, was Brian just positive
because it got a job later?
I'm not, I don't know.
But he says, when you guys talked about Tumbleweed,
it was quite negative.
But Chris, those are your experiences.
And I think you should be able to voice that.
But I've run OpenSUSE for 10 years, and I love Yast.
I appreciate how Yast works.
It enables my mom to install her HP printer without my help,
who is a total Linux novice.
It's hard to argue with that, right?
That's one less call for tech support.
But what I don't get from that is,
is Yast great for him anymore?
And is that because he's only used Yast,
so he has to keep using Yast?
So Martin, I wouldn't mind a follow-up on that.
But he says, your comments about OpenSUSE documentation,
about the voice and tone and the community,
and about the NVIDIA proprietary drivers,
they were 100% on the mark.
I experienced those pains too.
He goes on to say, that's why I have my blog, Foss Adventures,
to help improve the communication around OpenSUSE.
I try to show others how to solve common problems
in OpenSUSE.
So that's great.
I also love the blog of Cubicle Nate and another open source
user.
Check out cubiclenate.com.
So his website is Foss Adventures,
and then Cubicle Nate has a website at cubiclenate.com.
He says, keep up the great work.
Best regards, Martin.
Super solid feedback, Martin, and that's a great way to,
I mean, that's a great example of how to communicate,
hey, I heard what you said about that distro.
I heard that it doesn't work for you.
Well, that's fine.
Here's why it works for me.
And it's just a real nice, like, I got real value.
I know exactly why he asked works for his mom.
That totally makes sense.
And then he acknowledges that the documentation
and the process around the NVIDIA driver is horrible.
And I think that's such a great way
to engage with somebody who tried a distro,
but maybe had a slightly negative feedback,
some kind of negative experience in that trying process.
And honestly, if this was the experience
that I had primarily received, I don't
think we would have even mentioned
the tone and the feedback.
I don't think that would have even come up.
Right.
But here, we're not arguing.
We're just sharing experiences.
And we can all learn from that.
Now, I like this next one because it's about Neon.
And Plasma 5.21 looks like a barn burner of a good release.
Excited already.
We just kind of did a rundown in Linux Action News,
if you're not familiar with coming in 5.21.
But yeah.
So Nacho writes in.
Wes, take it.
Hey, Chris and team.
I'm just writing to describe my recent experience with KDE
Plasma through KDE Neon.
I heard your predictions episode and all the great things
KDE is bringing and thought I'd give it a try.
I had a 2018 15-inch HP Envy laptop that never fully worked
when I installed Ubuntu proper, Ubuntu Mate, Zubuntu,
and lastly, Deepin.
Well, yeah, really tried those things.
It always had some glitches that I'd
have to put up with when running off
of one of those other distributions.
But KDE Neon worked great.
And I was surprised at how beautiful it all looked stock.
It was a bit rough trying to install the distro in high DPI.
But thankfully, I'm not new to distro hopping.
But once installed, I was pleasantly surprised
and can see why so many people champion
Plasma as their desktop of choice.
Also, shout out to Alan's ThinkPad corner
on Ubuntu podcast.
You can pry it from my cold dead hands.
I'm right there with you.
Thanks again, longtime listener, Nacho.
So Nacho, I'm curious if you had,
you mentioned that you tried a few distros there.
But what you didn't mention was Kubuntu.
And the reason why I ask is because you
say Ubuntu gave you issues.
You mentioned that Mate, Zubuntu, and Deepin all had problems.
But I'm surprised that Neon works for you
because Neon's based on Ubuntu, right?
It's just Ubuntu with the Plasma desktop.
Fancy your newer Plasma.
Yeah, yeah, it's 2004 with newer Plasma.
So I wonder if Kubuntu, now that you've got something working,
it doesn't really matter.
But just for troubleshooting, I'm just
curious to know what was going on there.
But good to know.
And I agree, KD Neon's going to look even more attractive here
in about mid-February when Plasma 5.21 lands.
I'm going to be updating the day it comes out.
So Matthew writes in.
He says, my request is simple.
I really miss Chris's next Tuesday in the outro.
It always makes me smile and look forward
to the next episode.
Can we please bring that back?
Smiles are in short supply this day.
I will try.
I kind of stopped doing it because I just
figure after a while, a gimmick like that
gets annoying if people listen and listen.
But if the people want more Tuesday, Wes.
You have no right to deny these folks.
Yeah, I'll tell them to see you next Tuesday all day long
if that's what they want.
Do you want to take listener Chris's email?
Yeah, I better because otherwise if you read it,
it's just too confusing based on the name.
Hello, Chris, Wes, and the JB family.
Wanted to share an upcoming product release from Lenovo.
And Chris links us over to the ThinkPad X12 Detachable 12-inch
Intel-powered tablet.
Interesting.
Continues on, what do you think of the prospects of Linux
running on Lenovo's?
Answer to the Microsoft Surface Pro.
I've been desirous for years of an all-in-one Linux device
that serves as both my laptop and tablet when needed.
And given that I occasionally run a few VMs and containers
that require x86 hardware, something in the ARM world
just wouldn't work for me.
Thanks for the awesome shows and all that you do.
Life wouldn't be the same without my JB Linux fix.
And I'm curious to hear if you guys would be interested
in something like this.
So this guy is a 12.3-inch detachable tablet-style laptop.
It does come with a little pen that kind of snaps
onto the side of the keyboard.
And it looks pretty lightweight.
It looks like it's probably significantly lighter
than any laptop I've ever had.
And it has also a kick-out stand.
So if you do take the screen mobile,
it does kind of have that Surface-style stand
that snaps out.
Well, it looks like it might even have Intel Xe graphics.
So that's interesting.
Up to 16 gigs of RAM, you can get an i7 in there
or a 1-terabyte NVMe SSD.
So it's not a slouch of a system.
Yeah, that makes sense, right?
It makes sense it would have 11th Gen.
That's nice.
It's a 1920 by 1280 IPS anti-reflective,
anti-smudge, 400 nits Gorilla Glass screen.
Looks like it just has 16 gigs of RAM and a terabyte NVMe.
It may not even be customizable in that regard.
You know, it's funny.
If you would ask me six months ago, I'd be like, nah, nah.
But there might be a place for this in my life.
I am starting to realize that, and I apologize
that I'm making somewhat kind of a car analogy,
but there's a lot of different laptops for different people.
And you've got your commuter laptops.
You've got your truck laptops.
You've got your sports car laptops.
Is this just you trying to explain
why you have so many computers?
I'm buried in laptops at the moment.
Thankfully, only a couple of them are actually owned by me.
But I'll tell you what, having a bunch of different laptops
at one time, it's like never something
I would have just done, right?
I wouldn't just all of a sudden have a bunch of laptops,
because what's the point?
You don't need that many laptops at one time.
But because there have been a bunch in and out for review,
I've got ThinkPads.
I've got Lenovo's.
I've got Asus'.
There's a MacBook.
Like, the whole gamut for, because we're
doing them on code or two.
It's like the whole thing, right?
And that's really been an interesting perspective,
because it's like, well, which one
do I want to drive right now?
I think I'm going to take this one, because I'm
doing this kind of job.
And I could see if I was rich, like Jay Leno,
instead of having a garage full of cars,
I'd have garages full of different kinds of computers
and laptops and stuff.
And I could see a place for this,
because I really like having a tablet when
I am sitting on the couch next to a family member
and we're looking something up.
Or I'm entertaining myself while the kids are
watching some video on the TV.
I like having the flexibility of that.
But they're so limited.
Anytime I want to do anything, like if I want,
I need to go log into my bank account and figure something
out.
Anytime I want to do any serious work, I put the tablet down,
and I go dig out the laptop.
But if this, it'd just be a matter of snapping it
into a base.
Obviously, there'd be UI and desktop environment issues
to work out, which I guess in the real, I guess,
so I guess, Wes, you'd have to look at this in the real world.
That may be a disincentive.
It's getting better.
But it's not like there's a perfect UI for this right now.
That was kind of my main question is,
what would a real Linux experience
be with a modern Linux desktop?
Like, I'm not sure we've optimized
that well for this case.
I don't know.
I don't have any device that's really like this.
So I've not tried it personally.
So at this point, I think picking one up
would probably be on the experimental end.
But that's the first step to figuring something out
that works nicely.
And if Lenovo seems more and more friendly to Linux,
maybe it means the hardware will just work,
and we need to just work on the presentation layer.
If Lenovo was smart, I mean, who am I to say?
But it seems like they would be kind of interested in what
it's like to run Linux on there, because otherwise, they're
competing against Microsoft's own hardware, which, hmm,
you know, the Surface is pretty well known and pretty popular.
And if you're kind of into this form factor,
you're probably pretty inclined to go get the Surface.
And there's been news recently that there
are several performance improvements
and other kinds of improvements for the Surface landing
upstream in the Linux kernel right now.
It seems like it's a popular product.
Yeah, oh, hey, OK.
So we might have more than a few options pretty soon.
Yeah, so we'll see.
All right, so I'll take this last one,
because it's totally on me.
Hang writes, and he says, I noticed.
I noticed that Google Forms were being used for the Tuxes.
Therefore, I did not fill it out.
I was astonished to see that members of an open source
community use proprietary and spyware tools,
such as Google Forms, to conduct surveys.
Have you considered using an open source survey software
rather than closed source proprietary ones
by a data mining company?
What do you think of Cosmo Communicator, Gemini PDA,
and AstroSlide Projects?
There you go.
What, he says, what do you think?
Well, he's right, Hang.
I'm sorry that we used Google Forms.
It was totally a proof of concept.
Here's the idea.
Oh, my gosh, this is a cool idea.
How do we implement it right now,
because we want to talk about it and get it out there?
And how do we implement it in a way where,
once we've all of a sudden decided
to create this extra work for the team,
we can consume the information that the audience in the form
of several hundred submissions will be
palatable and processable by us?
And that's where, when it was like kind of a day
before final go, no go decision, we were like, oh, right.
Well, we know that if we use Google Forms,
we can get it in a spreadsheet that we
can share amongst each other, and then we
can massage the data, which is very much what we did.
And that was really what drove the decision
to use Google Forms.
I don't love it.
And I think what I want to do is just kind of be
a little more intentional, as the end of the year
begins to approach, to just start working on this.
We've got emails from a lot of folks that want to help us.
And I think that's probably when we're
going to rally the troops.
Yes, which we're very grateful for, by the way.
Super grateful.
It's really nice, because I want to do it right.
And now that I know it's worth the time.
Yeah, maybe we called this last year a tuxes beta.
Yeah, because I thought it would be just something we'd do it,
we would enjoy it.
It'd be a way for us to spread a little joy,
and then it'd be done.
But we got contacted by several projects.
We had lots of people write in and say, oh, I
didn't get to vote.
We had people that wanted to kind of have a robust debate
about which winner we had chosen.
There was a lot of people that kind of got engaged.
And so that's great.
That showed us that it was worth the effort.
I actually thought it was going to be a flop.
It was a misread on my part.
And so the Google Forms was a way for us to try it
without standing up something, without really having
to go in deep on something.
But my goals are now to have a dedicated website
in the future, to let you guys know about a week
earlier when the submissions are open,
and to not use Google Forms.
We'll see if we check all those boxes.
All right, well, if you want to get an email in,
go over to linuxunplug.com slash contact.
Wes, why don't we wrap it up with the System76 prediction
before we get out of here.
Kevin writes in with his System76 prediction.
My 2020 prediction.
All right, it's a little late.
But what we're going to allow this one
is that System76 will unveil an in-house designed laptop
in 2021.
Yeah, he's saying that that's what's going to happen in 2021.
I thought this was a fun one since social happiness, AKA Emma,
is in the chat room right now.
I thought it'd be fun.
I'd love to see it.
I think you don't get to laptop without getting to keyboard,
Kevin.
So I think your prediction might be a little ambitious
because I think what we first need to see
is a keyboard that shifts.
And that is such an opportunity to learn
so many lessons about the manufacturing process.
But also, you want a laptop to have a killer keyboard, too.
So you learn about making that component as well.
Plus, you know System76 has a high bar for quality.
So they're not going to push something out
until it's ready.
So that's just why maybe the timeline is going
to be a little longer than we hope.
But I would love to see it just whenever it's possible.
And also, I would buy the hell out of a System76 keyboard.
And I think a lot of people would because you
know they'd do it right.
And then that helps fund the laptop.
I mean, I'm not going on any information.
But it seems like a pretty practical and logical approach
that's likely got a shot.
So I suspect that's it, Kevin.
So maybe 2022.
I don't know.
I mean, you never know.
Maybe.
Maybe.
But I like it.
I like thinking that way because what a moment that
would be when someone in our community
starts building hardware like that that is like a laptop
option.
I mean, who knows what that could be.
And then you'll have one more laptop to buy, Chris.
Just what you needed.
Yeah.
All right.
Just a quick pick.
Really, just a quick pick because we
got to get out of here.
We don't want it to be a long one,
but it's starting to get that way.
Wes found a really handy tool to backup your Postgres databases
into object storage.
Tell us about it, Mr. Payne.
It's called PG Horde.
And yeah, that's basically it.
It's a Postgres backup daemon that's
focused just on Postgres and has a special support
for storing stuff in cloud object stores.
I like this because the database is kind of special for a lot
of web applications.
It's where all of your important data, customer information,
everything that you care.
For us, it's often show notes or other kinds of stuff
that we just don't want to lose.
And it's sure, we run everything in Docker,
and it's pretty easy to back things up that way.
But I like the rich support here.
They've got automatic periodic base backups.
You can integrate with the transaction log.
There's optional standalone hot backup support.
And of course, it just goes and sticks it right in object
storage, which works really nice for us since we're already
leveraging that.
There's encryption support and compression.
And you can restore directly from a compressed and
encrypted file in object storage.
You don't have to download it and do any fancy workflows.
PG Horde just takes care of it.
And I know like half of the things we run in containers,
there's a Postgres running somewhere.
I'm sure that's true for a lot of other folks.
So it seemed negligent that we constantly advertise fun
software to run without also giving you
a tool to help keep it safe.
Absolutely, and this is a good one.
And we've gone on and on about object storage recently,
but we're just finding other useful ways to take advantage
of a system like that.
And it's really simple to just host it even on your own box.
There's open source projects that make your system
essentially look like AWS S3.
And you can just store to a system on your network
using this, or you could store to systems in the cloud.
And because you have things like Linode and Google Cloud,
and obviously AWS, and Azure, and lots of other services
that support object storage, Digital Ocean,
there's a lot you can choose.
So you can kind of shop.
You have a lot of choices there.
So it's PG Horde, and we will have a link
to that in the show notes.
Special thank you to our members, our core contributors
at unplug.core.
You help keep this show independent, let us be choosy.
You give us the leverage to walk away from a deal.
If we have an ad deal that just doesn't seem like it's
the right fit, we don't have to be desperate.
We have our members, and they give us multiple ways
to remain independent.
And we're really, really appreciative of that.
So we give a couple of perks if you become a member
at unpluggedcore.com.
You get a limited ad feed, fully produced, sounds great,
ready to go in the car, just less ads,
a little bit shorter runtime.
There's a second feed that's the exact opposite of all that.
It's the bootleg feed, the full live stream.
Every mess up, every minute we're on air,
it's super long.
It's like double the show.
And there's often a lot of really good conversations
that just don't get captured when you hit record,
because that's human nature.
And that is in that feed.
So you get two choices.
And you can support the show at the same time, unpluggedcore.com.
I would love to have you join us live.
We do this show Tuesdays.
And we do it at noon Pacific, 3 PM Eastern.
See you next week.
Same bat time, same bat station.
And of course, that's at jblive.tv.
You can get Mumble, then participate in the Luplug
and participate in our LiveLug.
And you get a real-time stream.
And it's free software.
It's a free software stack from top to bottom
when you go that route.
That's a win-win-win.
Yeah.
Links to the stuff we talked about today
at linuxunplug.com slash 389.
Our contact page is there as well as all our RSS feeds
and all of that good stuff, including
Matrix and Mumble server info, et cetera, et cetera, et cetera.
But I'll let you figure all that out.
I say it enough.
I don't need to tell you again.
Thanks for joining us.
And we'll see you right back here next Tuesday.
Bye-bye.
JBtitles.com, let's go vote.
See what we want to call this thing.
We need your votes.
So it seemed like we stirred up quite a bit of feedback after the post show last week
when I mentioned my fedora woes.
I heard from folks on Manjaro and other distributions that we're having the same issue where flat
packs are just non-existent to their plasma desktop, not in the launcher, you can't add
them to the menu.
It just doesn't seem, and maybe we found a common thing amongst all of us.
We did a little bugathon off air, I guess, in a way.
Async bugathon over in matrix.
Look at that.
And it seemed like, I don't know who, maybe Neil or Carl, I don't know which one of you
would be best to speak to this, but it seemed like the common thread was everybody had swapped
out their default shell in console, which I don't know how you connect those dots.
But I guess whatever you said is your default shell actually is respected by the rest of
the plasma desktop session.
And for whatever reason, that broke things.
And when you just switch it back to the default, I guess it unbreaks.
I haven't done it yet.
I was thinking maybe I'd try it now live on the show.
I think some of that too was, you know, some folks had changed it with like changing it
system wide in the shell.
I'm not sure how what you normally do when you install Phish versus say you can also
configure just console to launch Phish as your shell.
I think that was maybe the workaround of like, don't change it system wide, but just if you
want to have console or whatever terminal emulator you're using, launch it for you.
Oh, I don't think I do set it system wide.
Hmm.
So maybe that's not it.
Let me see.
I got a lot of user accounts on this one user laptop here.
I did set it in password.
I did change it in password.
I did.
So you're telling me that's where I have to change it.
It's worth a shot anyway.
Switch that back to bash and then.
I don't even remember doing that.
I must have just done it right after install and just got it over with.
You were so sick of not having Phish set up that you just did whatever it took.
I want my auto complete.
Where's?
Once you're spoiled.
I mean, it's hard to go back.
Let me just go edit Etsy password with nano real quick.
Little pro tip for nano.
Tack W for really wide files, which Etsy password is absolutely not.
But you feel like a pro when you do tack W.
I thought you had switched to using micro.
I did.
But with the new release of nano, I'm back on the nano sauce.
Someday we'll get him a decent text editor.
It's when there'll be a terminal only version of VS code.
That's what it'll be.
