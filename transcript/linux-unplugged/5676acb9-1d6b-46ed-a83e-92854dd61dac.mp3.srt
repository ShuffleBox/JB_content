1
00:00:00,000 --> 00:00:04,420
Well, I got a kind of a just your experience style question before we start.

2
00:00:04,420 --> 00:00:09,600
Do you guys think that the LTSs are actually any more stable than a regular

3
00:00:09,600 --> 00:00:12,040
distro for daily use?

4
00:00:12,040 --> 00:00:16,000
Are you talking daily use as a desktop or are we talking on the server?

5
00:00:16,000 --> 00:00:17,120
Definitely desktop.

6
00:00:17,120 --> 00:00:18,120
I don't know.

7
00:00:18,120 --> 00:00:19,800
I mean, not really.

8
00:00:19,800 --> 00:00:24,120
I've seen this going around our Linux and the author says from my experience LTS

9
00:00:24,120 --> 00:00:29,520
releases are not more stable to justify the old packages than the regular ones.

10
00:00:29,520 --> 00:00:31,160
It's like, is it worth the trade off?

11
00:00:31,160 --> 00:00:34,480
I think the real trade off here is that it's the IT team, you know,

12
00:00:34,480 --> 00:00:36,080
they get to support this the whole time.

13
00:00:36,080 --> 00:00:39,400
I don't have a bunch of different users on a bunch of different desktop versions.

14
00:00:39,400 --> 00:00:43,160
But for the individual admin, no, I mean, just keep up with the latest.

15
00:00:43,160 --> 00:00:45,800
Yeah, I think, too, it's like, what do you consider stable?

16
00:00:45,800 --> 00:00:48,920
Is it that the desktop environment doesn't change very often?

17
00:00:48,920 --> 00:00:53,560
Is it an ABI that you can write code against that doesn't change?

18
00:00:53,560 --> 00:00:55,240
Or is it a program crashing?

19
00:00:55,240 --> 00:01:01,080
Because software has bugs regardless, and an LTS version of software could have a bug.

20
00:01:01,080 --> 00:01:03,520
It's the bugs you know versus the bugs you don't.

21
00:01:03,520 --> 00:01:04,520
Right.

22
00:01:04,520 --> 00:01:07,000
I think the question is, what kind of stable do you want?

23
00:01:07,000 --> 00:01:07,520
Step up.

24
00:01:07,520 --> 00:01:09,280
We have a kind for every type.

25
00:01:17,280 --> 00:01:20,160
Hello there, friends, and welcome into your weekly Linux talk show.

26
00:01:20,160 --> 00:01:21,040
My name is Chris.

27
00:01:21,040 --> 00:01:22,080
My name is Wes.

28
00:01:22,080 --> 00:01:26,360
This episode is brought to you by a cloud guru, the leader in learning for the cloud,

29
00:01:26,360 --> 00:01:28,440
Linux and other modern tech skills.

30
00:01:28,440 --> 00:01:32,640
Hundreds of courses, thousands of hands on labs get certified, get hired, get learning

31
00:01:32,640 --> 00:01:34,800
a cloud guru dot com.

32
00:01:34,800 --> 00:01:36,800
Welcome into three ninety two.

33
00:01:36,800 --> 00:01:39,960
We have a lot going on in today's episode.

34
00:01:39,960 --> 00:01:42,560
We're going to get into something kind of personal for me.

35
00:01:42,560 --> 00:01:48,760
I'll talk about that in a little bit and kind of try to get some advice on on a decision

36
00:01:48,760 --> 00:01:52,640
that I need to make from Wes and our virtual lug.

37
00:01:52,640 --> 00:01:56,840
We'll have some community news and kind of an exciting Jupiter broadcasting announcement

38
00:01:56,840 --> 00:01:58,240
is going to be tucked in here as well.

39
00:01:58,240 --> 00:02:00,400
So there's a lot to get into.

40
00:02:00,400 --> 00:02:01,480
Quick question, though.

41
00:02:01,480 --> 00:02:03,320
That advice, that's going to be binding, right?

42
00:02:03,320 --> 00:02:04,520
We get to tell you what to do?

43
00:02:04,520 --> 00:02:06,320
Um, yes.

44
00:02:06,320 --> 00:02:07,320
Perfect.

45
00:02:07,320 --> 00:02:08,320
Yes.

46
00:02:08,320 --> 00:02:10,120
Let's go with yes, Wes.

47
00:02:10,120 --> 00:02:11,120
Let's go with yes.

48
00:02:11,120 --> 00:02:13,680
We might need some help if we're making that kind of decision.

49
00:02:13,680 --> 00:02:18,640
I just feel like those are like pre-show discussions, Wes, not middle of intro discussion.

50
00:02:18,640 --> 00:02:20,960
But for the sake of show, I'm going to go with it.

51
00:02:20,960 --> 00:02:22,640
I'm going to I'm going to do it, Wes.

52
00:02:22,640 --> 00:02:25,600
I mean, you've stepped up and done live arch updates right here on the air.

53
00:02:25,600 --> 00:02:27,440
So I'll step up and say yes.

54
00:02:27,440 --> 00:02:31,780
But before we can get to any of that, we've got to bring in our virtual lug.

55
00:02:31,780 --> 00:02:32,780
Time appropriate.

56
00:02:32,780 --> 00:02:33,780
Greetings.

57
00:02:33,780 --> 00:02:34,780
Mumble room.

58
00:02:34,780 --> 00:02:35,780
Hello.

59
00:02:35,780 --> 00:02:36,780
Hello.

60
00:02:36,780 --> 00:02:37,780
Hello.

61
00:02:37,780 --> 00:02:41,780
I want you to know that I just gave you a personal drum roll on my lap.

62
00:02:41,780 --> 00:02:44,140
So you have that visual now.

63
00:02:44,140 --> 00:02:49,560
Let's get into the news and let's start with at least a little bit of something that came

64
00:02:49,560 --> 00:02:50,760
out of Fosdom this week.

65
00:02:50,760 --> 00:02:54,920
So Fosdom is this ginormous open source event that goes on.

66
00:02:54,920 --> 00:02:59,160
And this year, like so many others, it had to go virtual.

67
00:02:59,160 --> 00:03:03,800
Their videos are trickling out online and will possibly have more coverage in the future.

68
00:03:03,800 --> 00:03:07,480
But there was a centos dojo at Fosdom.

69
00:03:07,480 --> 00:03:08,720
I like the name.

70
00:03:08,720 --> 00:03:10,620
So it got my attention.

71
00:03:10,620 --> 00:03:14,840
And in there, we got some questions answered.

72
00:03:14,840 --> 00:03:19,740
We got some questions that are sort of awkward and left unanswered.

73
00:03:19,740 --> 00:03:25,740
This was the centos virtual dojo that featured several board members from centos.

74
00:03:25,740 --> 00:03:28,360
And I thought we'd go through a couple of their answers.

75
00:03:28,360 --> 00:03:34,920
I'll link to the entire video if you're interested in the show notes at linuxunplug.com slash

76
00:03:34,920 --> 00:03:35,920
392.

77
00:03:35,920 --> 00:03:38,520
But I got a couple of moments for you here.

78
00:03:38,520 --> 00:03:42,700
During this dojo, there was a couple of individuals you're going to be hearing in these clips

79
00:03:42,700 --> 00:03:46,340
that answered some questions from people that were watching live.

80
00:03:46,340 --> 00:03:50,380
And I want to say right up front, it seems like they answered every kind of question

81
00:03:50,380 --> 00:03:55,140
that came at them, even the uncomfortable ones and answered to the best of their ability

82
00:03:55,140 --> 00:03:56,200
right there live.

83
00:03:56,200 --> 00:04:00,640
And that's never, that's never really necessarily an easy thing to do.

84
00:04:00,640 --> 00:04:03,140
And so in these clips that I'm going to play from you, you're going to hear from a couple

85
00:04:03,140 --> 00:04:04,380
of individuals.

86
00:04:04,380 --> 00:04:07,460
You're going to hear from and Carl, if you know better, please correct me, but you're

87
00:04:07,460 --> 00:04:10,860
going to hear from Brian Excelbrit.

88
00:04:10,860 --> 00:04:12,460
Do you know how to say his last name, Carl?

89
00:04:12,460 --> 00:04:13,460
Exelbeard.

90
00:04:13,460 --> 00:04:14,460
Everyone just calls him Bex, though.

91
00:04:14,460 --> 00:04:15,460
B-E-X.

92
00:04:15,460 --> 00:04:16,460
Bex.

93
00:04:16,460 --> 00:04:17,460
Yep.

94
00:04:17,460 --> 00:04:18,740
I was going to say, you may, you may know him as Bex.

95
00:04:18,740 --> 00:04:23,600
He is the Red Hat liaison to centos and he is a centos board member himself.

96
00:04:23,600 --> 00:04:29,900
And he is tossing the question over to Pat Reshecki, again, Carl, please correct if I'm

97
00:04:29,900 --> 00:04:30,900
wrong.

98
00:04:30,900 --> 00:04:31,900
That one I'm not sure about.

99
00:04:31,900 --> 00:04:33,620
I know, I know him as JC Punk in IRC, so.

100
00:04:33,620 --> 00:04:34,620
Yep.

101
00:04:34,620 --> 00:04:35,700
He goes by JC Punk online.

102
00:04:35,700 --> 00:04:41,640
He has been helping with centos officially since 2008 and really unofficially for longer.

103
00:04:41,640 --> 00:04:44,220
He works at the Fermi National Accelerator Laboratory.

104
00:04:44,220 --> 00:04:49,180
He is part of the scientific Linux team and he himself has been a centos board member

105
00:04:49,180 --> 00:04:51,740
since April of 2020.

106
00:04:51,740 --> 00:04:55,760
So we have Brian asking the question and Pat answering.

107
00:04:55,760 --> 00:04:59,440
And the first question that I want to play for you guys is a simple one.

108
00:04:59,440 --> 00:05:03,160
Is centos stream safe for production use?

109
00:05:03,160 --> 00:05:09,020
If I can, the next question that I would pull out is here, which is I'm concerned about

110
00:05:09,020 --> 00:05:13,020
the stability of using stream in production compared to what I used to do now due to the

111
00:05:13,020 --> 00:05:17,040
and I'm going to change the words here, continuously delivered nature of stream.

112
00:05:17,040 --> 00:05:22,160
Can you give me a take on why I should or should not be concerned here?

113
00:05:22,160 --> 00:05:27,200
The packages that go into stream have gone through the internal QA before they land in

114
00:05:27,200 --> 00:05:28,520
stream.

115
00:05:28,520 --> 00:05:34,820
So they should be as safe as when they land in actual rel.

116
00:05:34,820 --> 00:05:39,360
But most importantly is part of what we're trying to aim for with stream is to increase

117
00:05:39,360 --> 00:05:41,840
the amount of internal testing.

118
00:05:41,840 --> 00:05:46,720
And so if you've got something that needs a test, we can try and get that into the RPM

119
00:05:46,720 --> 00:05:51,720
so that it is self tested and get it into the upstream code base that the actual software

120
00:05:51,720 --> 00:05:58,020
is based on to get more internal testing that will not only improve the overall quality

121
00:05:58,020 --> 00:06:03,620
of stream, it will improve the quality of the upstream software that we're packaging.

122
00:06:03,620 --> 00:06:10,560
And so if you're concerned about testing, I would encourage you to help us build tests

123
00:06:10,560 --> 00:06:16,520
to ensure that this software runs beautifully, not just on stream and not just on rel, but

124
00:06:16,520 --> 00:06:19,520
for everyone in the open source community.

125
00:06:19,520 --> 00:06:24,060
The more tests that we can get into upstream code bases, the better the quality will be

126
00:06:24,060 --> 00:06:28,440
for everyone worldwide who uses it, no matter who your platform is.

127
00:06:28,440 --> 00:06:30,320
And now Brian quickly adds to that.

128
00:06:30,320 --> 00:06:34,940
It's not like they're just yoloing the packages into CentOS.

129
00:06:34,940 --> 00:06:40,280
The other piece is that Red Hat engineers are not allowed to commit code to CentOS stream

130
00:06:40,280 --> 00:06:41,280
that is work in progress.

131
00:06:41,280 --> 00:06:43,420
It is expected to be finished code.

132
00:06:43,420 --> 00:06:48,640
So to reiterate what Pat said, we're not putting things like yolo.

133
00:06:48,640 --> 00:06:49,860
It has to actually be ready.

134
00:06:49,860 --> 00:06:52,880
It has to go through a level of acceptance testing.

135
00:06:52,880 --> 00:06:53,880
And criteria.

136
00:06:53,880 --> 00:06:55,820
So it's a little bit of a mixed answer here.

137
00:06:55,820 --> 00:06:58,300
It is we're going to be testing these packages.

138
00:06:58,300 --> 00:07:02,160
We're going to run them through what we currently do in our QA testing.

139
00:07:02,160 --> 00:07:06,680
But at the same time, the answer seems to be, well, if you want it to run on stream,

140
00:07:06,680 --> 00:07:23,800
write the code, but in this case, the code's tests.

141
00:07:23,800 --> 00:07:29,400
I think that might be part of the switch.

142
00:07:29,400 --> 00:07:32,800
There's some quote here that before they kind of just built whatever came out of the Red

143
00:07:32,800 --> 00:07:33,800
Hat process.

144
00:07:33,800 --> 00:07:37,280
Okay, you get the source files, you build them up and ship them in CentOS.

145
00:07:37,280 --> 00:07:41,360
I think maybe some of the part of that is that this is now meant to be more of a collaborative

146
00:07:41,360 --> 00:07:42,360
upstream.

147
00:07:42,360 --> 00:07:47,480
So like, if you're not sure, if you're worried about this new edition, part of that you can

148
00:07:47,480 --> 00:07:51,920
help out by making sure that it is properly tested, that you can say, I need more guarantees

149
00:07:51,920 --> 00:07:55,960
on this package, and I'm going to help add them, which you didn't really have necessarily

150
00:07:55,960 --> 00:07:58,160
an option to do in the old process.

151
00:07:58,160 --> 00:08:04,960
Carl, I feel like maybe some of this is just confusion around the CentOS project using

152
00:08:04,960 --> 00:08:07,800
rolling differently than the rest of us use it.

153
00:08:07,800 --> 00:08:08,800
Definitely.

154
00:08:08,800 --> 00:08:14,980
That was when CentOS Stream 8 was first announced, it was marketed as a rolling release and kind

155
00:08:14,980 --> 00:08:18,320
of tried to co-op the term, I guess would be the way to look at it.

156
00:08:18,320 --> 00:08:22,880
And then, but it's not really rolling, it's rolling in the sense of a major rail release.

157
00:08:22,880 --> 00:08:28,380
So there's no like 8.1, 8.2, but it's not rolling release like you would think of Arch

158
00:08:28,380 --> 00:08:30,560
or like Fedora or Rawhide.

159
00:08:30,560 --> 00:08:31,560
It's not the same thing.

160
00:08:31,560 --> 00:08:32,560
Yeah.

161
00:08:32,560 --> 00:08:37,840
And I think when you understand that, and you understand that every package that's landing

162
00:08:37,840 --> 00:08:44,980
in CentOS Stream goes through the RHEL QA process and RHEL testing, and that they have

163
00:08:44,980 --> 00:08:48,480
this mindset that every package that will land in stream is stable.

164
00:08:48,480 --> 00:08:49,480
Right?

165
00:08:49,480 --> 00:08:53,160
And in a lot of ways that's true because it's kind of getting, it's getting field tested

166
00:08:53,160 --> 00:08:59,760
in Fedora, then it gets promoted up to the Red Hat RHEL developers, and then they submit

167
00:08:59,760 --> 00:09:01,880
it up to stream or whoever else is submitting it up to stream.

168
00:09:01,880 --> 00:09:05,600
I mean, it has gone through multiple layers before it ever hit stream.

169
00:09:05,600 --> 00:09:11,880
And like Carl so perfectly said, it's rolling within the context of RHEL, right?

170
00:09:11,880 --> 00:09:14,320
So you're maybe a point release ahead.

171
00:09:14,320 --> 00:09:17,080
And not just RHEL, a major version of RHEL, right?

172
00:09:17,080 --> 00:09:21,800
Like there can be major changes between like RHEL 8 and RHEL 9, but any changes that are

173
00:09:21,800 --> 00:09:26,720
proposed for CentOS Stream, like they're the changes that you would see within RHEL 8 lifetime.

174
00:09:26,720 --> 00:09:31,380
So things that wouldn't change like the GLibc version or the OpenSSL version, or at least

175
00:09:31,380 --> 00:09:36,840
not change often, that's the kind of changes that you wouldn't see in stream at all.

176
00:09:36,840 --> 00:09:42,200
And I think when people start to wrap their heads around this, they're going to realize

177
00:09:42,200 --> 00:09:48,680
that CentOS Stream is probably a more stable, more production ready distro than most things

178
00:09:48,680 --> 00:09:50,400
out there.

179
00:09:50,400 --> 00:09:55,280
And if you're comfortable with the way Debian operates in terms of their updates, and you

180
00:09:55,280 --> 00:10:00,060
consider that to be a stable enterprise distro, well, then stream is going to be that plus

181
00:10:00,060 --> 00:10:05,920
more QA and more testing, and the entire Fedora distribution doing preliminary deployments

182
00:10:05,920 --> 00:10:08,320
in actual public hands.

183
00:10:08,320 --> 00:10:10,240
That's a pretty hard thing to match there.

184
00:10:10,240 --> 00:10:15,600
And the question really becomes, well, okay, let's say we all wrap our head around stream

185
00:10:15,600 --> 00:10:17,300
and we're getting comfortable with it.

186
00:10:17,300 --> 00:10:22,220
We recognize that now there is a way for just the average citizen to commit something that

187
00:10:22,220 --> 00:10:23,580
could land in RHEL.

188
00:10:23,580 --> 00:10:28,260
It brings RHEL development out into the open, but still provides system administrators with

189
00:10:28,260 --> 00:10:30,120
something that can be used in production.

190
00:10:30,120 --> 00:10:35,200
Okay, all right, I can start to live with this new normal, but there is an elephant

191
00:10:35,200 --> 00:10:36,960
in the room.

192
00:10:36,960 --> 00:10:43,160
And it's quite simply, if the deal was changed on us once, what means the deal can't be changed

193
00:10:43,160 --> 00:10:44,160
again?

194
00:10:44,160 --> 00:10:48,460
And my buddy Noah puts it really well when he says, you end up feeling like you're living

195
00:10:48,460 --> 00:10:50,720
on borrowed time.

196
00:10:50,720 --> 00:10:56,800
And this question came up during the Q&A and to their credit, they actually answered it.

197
00:10:56,800 --> 00:10:57,800
They answered it.

198
00:10:57,800 --> 00:11:02,200
And it's not an easy question to answer because the deal was changed on them, the CentOS board

199
00:11:02,200 --> 00:11:09,080
members, and you can sense the tension and the uncertainty in the room by how long it

200
00:11:09,080 --> 00:11:11,800
actually takes someone to step up and answer the question.

201
00:11:11,800 --> 00:11:17,480
A question has come in about the change of the EOL for a community deliverable during

202
00:11:17,480 --> 00:11:19,760
a release being very unusual.

203
00:11:19,760 --> 00:11:23,960
Is this something that could theoretically happen in the future from your perspective?

204
00:11:23,960 --> 00:11:27,760
I haven't altered this at all.

205
00:11:27,760 --> 00:11:31,000
This is the real time that there was just people looking at each other, not sure how

206
00:11:31,000 --> 00:11:39,280
to answer this question.

207
00:11:39,280 --> 00:11:48,680
It's hard to predict the future, but fundamentally, Stream needs to sort of meet the needs of

208
00:11:48,680 --> 00:11:51,240
our development process.

209
00:11:51,240 --> 00:11:57,680
There needs to be a place where people can push in changes, where people can drive the

210
00:11:57,680 --> 00:12:02,040
release towards what they actually are doing in production.

211
00:12:02,040 --> 00:12:07,440
There hasn't been a great way for people to actually drive the release in the past.

212
00:12:07,440 --> 00:12:13,400
And so I wouldn't expect that Stream is going anywhere, as it's going to be fundamental

213
00:12:13,400 --> 00:12:19,020
to the actual delivery process of RHEL itself.

214
00:12:19,020 --> 00:12:20,360
This is tricky.

215
00:12:20,360 --> 00:12:21,640
How do they answer a question like that?

216
00:12:21,640 --> 00:12:22,640
And who answers it?

217
00:12:22,640 --> 00:12:26,360
So you have this situation where they have to decide, do you want to handle this?

218
00:12:26,360 --> 00:12:27,360
No, I'll handle this.

219
00:12:27,360 --> 00:12:29,760
It's inherent now with virtual conferences.

220
00:12:29,760 --> 00:12:33,240
You've experienced that probably in meetings if you've attended some over video.

221
00:12:33,240 --> 00:12:36,360
You have to give them some understanding here.

222
00:12:36,360 --> 00:12:40,480
But it's a hard question to answer for them, because what the hell do they know?

223
00:12:40,480 --> 00:12:44,760
When the trademark owner decides what they're going to do, and when they decide how they

224
00:12:44,760 --> 00:12:50,060
will fund development time, the project doesn't really have much choice other than to tuck

225
00:12:50,060 --> 00:12:52,160
and roll with it and make the best out of it.

226
00:12:52,160 --> 00:12:55,440
Now, I think the other thing to keep in mind here is we're talking about this.

227
00:12:55,440 --> 00:12:59,600
Mentos 8, as it is in the traditional style, it's still there.

228
00:12:59,600 --> 00:13:00,600
It's not gone.

229
00:13:00,600 --> 00:13:01,600
It hasn't gone anywhere.

230
00:13:01,600 --> 00:13:03,400
It's still there until December.

231
00:13:03,400 --> 00:13:07,680
So we actually are dealing with this way ahead of time in some senses.

232
00:13:07,680 --> 00:13:11,840
It's a short amount of time when you think about migrating thousands of systems.

233
00:13:11,840 --> 00:13:17,480
But it's a long amount of time when you think about a company making their strategic plans

234
00:13:17,480 --> 00:13:19,320
public.

235
00:13:19,320 --> 00:13:25,220
And I appreciate that they think this is good, because it sounds like by their answer here,

236
00:13:25,220 --> 00:13:29,100
they feel like Stream is in a position now where it's sustainable.

237
00:13:29,100 --> 00:13:36,060
It is in a position where it feeds the RailBeast and also makes it a more open source project.

238
00:13:36,060 --> 00:13:37,960
But I'm going to play just a little bit again.

239
00:13:37,960 --> 00:13:40,360
Just feel the awkwardness here.

240
00:13:40,360 --> 00:13:46,060
A question has come in about the change of the EOL for a community deliverable during

241
00:13:46,060 --> 00:13:48,360
a release being very unusual.

242
00:13:48,360 --> 00:13:53,360
Is this something that could theoretically happen in the future from your perspective?

243
00:13:53,360 --> 00:14:09,920
I mean, it's hard to predict the future.

244
00:14:09,920 --> 00:14:10,920
That's a little rough, Wes.

245
00:14:10,920 --> 00:14:15,080
That's like, they don't, you can tell like, they think they've got it figured out now,

246
00:14:15,080 --> 00:14:18,240
but they're not really in control of this piece of the game.

247
00:14:18,240 --> 00:14:19,240
Yeah, right.

248
00:14:19,240 --> 00:14:22,520
I sort of appreciate the candor, honestly.

249
00:14:22,520 --> 00:14:23,520
Because things change.

250
00:14:23,520 --> 00:14:25,640
I mean, things change even at the corporate level, right?

251
00:14:25,640 --> 00:14:27,440
And you do your best.

252
00:14:27,440 --> 00:14:32,840
I'm sure there was a lot of consternation internally about all of these changes.

253
00:14:32,840 --> 00:14:35,440
It's interesting how plain that silence makes it, though.

254
00:14:35,440 --> 00:14:36,440
Yeah.

255
00:14:36,440 --> 00:14:41,960
And Colonel, in some ways, they are being more explicit about their plans around Stream

256
00:14:41,960 --> 00:14:45,280
than they really were about the long term support window for 8.

257
00:14:45,280 --> 00:14:46,280
Yeah.

258
00:14:46,280 --> 00:14:50,640
So one of the things that is not well understood, or I haven't heard talked about a lot, is

259
00:14:50,640 --> 00:14:59,120
that while the EOL was listed on the CentOS page, and that is a Red Hat project, and therefore

260
00:14:59,120 --> 00:15:06,120
falls to Red Hat, that EOL was not actually put there by Red Hat.

261
00:15:06,120 --> 00:15:14,120
It was put there by a community user who assumed, based on other past EOLs, that that's what

262
00:15:14,120 --> 00:15:16,160
the EOL is going to be.

263
00:15:16,160 --> 00:15:22,680
Red Hat itself never actually officially said what the EOL for 8 was going to be.

264
00:15:22,680 --> 00:15:23,680
Yeah.

265
00:15:23,680 --> 00:15:27,480
And Carl could probably speak to this better than I can, but that's one thing that I haven't

266
00:15:27,480 --> 00:15:32,520
heard discussed a lot, is that Red Hat never actually came out and said, this is the EOL

267
00:15:32,520 --> 00:15:33,520
for 8.

268
00:15:33,520 --> 00:15:42,000
They passively endorsed that EOL by not changing it and allowing it to go onto the site.

269
00:15:42,000 --> 00:15:46,720
But that was done by the community, not REL, or Red Hat.

270
00:15:46,720 --> 00:15:50,240
I think that doesn't get talked about a lot, because I'll be quite frank, in my personal

271
00:15:50,240 --> 00:15:57,120
opinion, it's a piss poor excuse, because I think the internal mentality by not listing,

272
00:15:57,120 --> 00:16:01,600
not putting that EOL date up front was, well, we're not sure how long we're going to keep

273
00:16:01,600 --> 00:16:07,700
doing CentOS Linux 8 for, so we just won't put an EOL date, when in reality, in hindsight,

274
00:16:07,700 --> 00:16:11,360
it's easy to say, you should have absolutely said, this isn't going to be supported for

275
00:16:11,360 --> 00:16:16,640
the full 10 years, or even better, set an end of life date then, just leaving it blank

276
00:16:16,640 --> 00:16:21,720
and then letting, having a community member make a reasonable assumption that based on

277
00:16:21,720 --> 00:16:25,600
everything that's happened before with CentOS, that that should have been the end of life

278
00:16:25,600 --> 00:16:26,600
date.

279
00:16:26,600 --> 00:16:29,920
Yeah, it's just a very unfortunate chain of events.

280
00:16:29,920 --> 00:16:34,840
Well, I kind of look at it as a collection of could have done betters.

281
00:16:34,840 --> 00:16:36,740
It's like a basket of could have dones.

282
00:16:36,740 --> 00:16:43,320
Number one is clarify ahead of time what the support window was, or at least update that

283
00:16:43,320 --> 00:16:44,600
Wiki post.

284
00:16:44,600 --> 00:16:50,720
Number two, if I were at some position of power in Red Hat, ha ha, what I would have

285
00:16:50,720 --> 00:16:55,920
done is I would have released the RHEL for developers program, the expanded RHEL for

286
00:16:55,920 --> 00:17:00,480
developers program first, or that would have been the headline, and in there, I would have

287
00:17:00,480 --> 00:17:02,680
said, by the way, CentOS is changing.

288
00:17:02,680 --> 00:17:06,400
That's how I would have managed the message myself, but what do I know?

289
00:17:06,400 --> 00:17:08,680
I just talked to an audience of tens of thousands.

290
00:17:08,680 --> 00:17:11,360
I obviously don't know what I'm talking about, and then the other thing that I would have

291
00:17:11,360 --> 00:17:19,160
tweaked is I would have made real damn sure that Stream wasn't sold as a rolling distribution

292
00:17:19,160 --> 00:17:24,800
because when you say rolling, it conjures arch, and when you conjure arch, it's the

293
00:17:24,800 --> 00:17:30,660
antithesis of what should be on a server, and so much so that Wes and I as a bit use

294
00:17:30,660 --> 00:17:33,840
an arch server here because you shouldn't be doing it.

295
00:17:33,840 --> 00:17:39,720
I mean, it was a ludicrous idea, and it completely was tone deaf with the market.

296
00:17:39,720 --> 00:17:45,800
It's unbelievable that they, a company that provides an enterprise Linux distribution,

297
00:17:45,800 --> 00:17:46,800
didn't get that.

298
00:17:46,800 --> 00:17:52,620
Incredible that it takes some stupid podcaster here in Seattle to tell them that, but if

299
00:17:52,620 --> 00:17:57,180
I wanted extra credit on how I would have made this a lot better, I would have set out

300
00:17:57,180 --> 00:18:02,200
a plan that would have already been in motion that would have demonstrated to people how

301
00:18:02,200 --> 00:18:07,600
a lot of what they want to accomplish on a traditional RHEL or CentOS traditional system

302
00:18:07,600 --> 00:18:12,120
could be accomplished with the universal base image that is based on RHEL.

303
00:18:12,120 --> 00:18:16,360
It's a container that you can run your application inside, kind of like how you can use Alpine

304
00:18:16,360 --> 00:18:18,240
as a base for a container.

305
00:18:18,240 --> 00:18:23,220
You could use the universal base image, which is RHEL, supported by these people at Red

306
00:18:23,220 --> 00:18:29,200
Hat, and you can deploy your applications on arch if you want inside this universal

307
00:18:29,200 --> 00:18:30,200
base image.

308
00:18:30,200 --> 00:18:34,920
So you could have CentOS Stream, it could have daily updates from GitHub directly for

309
00:18:34,920 --> 00:18:39,080
God's sakes, and you could still have your applications in the universal base image,

310
00:18:39,080 --> 00:18:43,760
and somehow in all of this, they haven't properly communicated that.

311
00:18:43,760 --> 00:18:48,720
And I would put that in a basket of obvious things that they could have done better, could

312
00:18:48,720 --> 00:18:56,040
have done, before or with the announcement of CentOS Stream to avoid 90% of all of this.

313
00:18:56,040 --> 00:19:00,720
But somehow, the wrong people were listening, and the wrong people are making decisions,

314
00:19:00,720 --> 00:19:01,720
and this is what we got.

315
00:19:01,720 --> 00:19:06,500
And as a result, all of these alternatives have spun up.

316
00:19:06,500 --> 00:19:09,980
And we talked on LAN about some that are actually shipping now.

317
00:19:09,980 --> 00:19:14,160
We've talked about Rocky Linux, which is getting really close and has a ton of community momentum

318
00:19:14,160 --> 00:19:15,160
around it.

319
00:19:15,160 --> 00:19:20,140
So you have to kind of wonder, how does the core CentOS Team, and particularly the board

320
00:19:20,140 --> 00:19:25,640
members, feel about all of these clones coming along to offer what they used to offer?

321
00:19:25,640 --> 00:19:28,400
And Pat says, they welcome it.

322
00:19:28,400 --> 00:19:35,720
And just to sort of be clear, the folks that are interested in doing rel rebuilds to keep

323
00:19:35,720 --> 00:19:38,600
aid alive, we wish them the best.

324
00:19:38,600 --> 00:19:40,440
We love our open source friends.

325
00:19:40,440 --> 00:19:42,040
I mean, that's really good to hear.

326
00:19:42,040 --> 00:19:44,880
It doesn't sound like, do you think that's true, Carl?

327
00:19:44,880 --> 00:19:48,640
There's not really any ill will towards projects like Rocky Linux?

328
00:19:48,640 --> 00:19:49,640
Absolutely.

329
00:19:49,640 --> 00:19:52,600
We've even been, you know, helping here and there, pointing them in the right direction

330
00:19:52,600 --> 00:19:57,600
of like, hey, you should use git.centos.org for their source code.

331
00:19:57,600 --> 00:20:01,720
Don't get it from source RPMs from a rel subscription, because that's actually against the rel terms

332
00:20:01,720 --> 00:20:02,880
of service.

333
00:20:02,880 --> 00:20:06,260
We publish it in this other place specifically for you to use.

334
00:20:06,260 --> 00:20:07,600
Use it the right way.

335
00:20:07,600 --> 00:20:10,200
And there's even another blog post.

336
00:20:10,200 --> 00:20:11,980
I'll have to find it and link it in the chat.

337
00:20:11,980 --> 00:20:17,780
But Bex, the same guy from the Red Hat liaison to the CentOS board, he put together a blog

338
00:20:17,780 --> 00:20:22,520
post of do's and don'ts for doing your own rel rebuild, basically, to help give them

339
00:20:22,520 --> 00:20:23,840
proper guidance.

340
00:20:23,840 --> 00:20:28,640
We want them to succeed, and nobody wants to get any lawyers involved for doing things

341
00:20:28,640 --> 00:20:29,640
incorrectly.

342
00:20:29,640 --> 00:20:33,960
So the more we can help them to do things right and be successful, the happier everyone

343
00:20:33,960 --> 00:20:34,960
will be.

344
00:20:34,960 --> 00:20:37,680
And you know, the sense I got by watching this dojo video, which will be linked in the

345
00:20:37,680 --> 00:20:42,920
show notes, the team is kind of, I mean, correct me if I'm wrong, the team seems like they

346
00:20:42,920 --> 00:20:48,360
are still committed to CentOS 8 traditional that we know and love.

347
00:20:48,360 --> 00:20:53,260
And it's this time until December is a bit of a gearing up and things are not necessarily

348
00:20:53,260 --> 00:20:54,520
firm.

349
00:20:54,520 --> 00:20:57,520
Like there's, it seems like there's some malleability here.

350
00:20:57,520 --> 00:21:00,080
There's some ideas that are being considered.

351
00:21:00,080 --> 00:21:05,320
It kind of feels like in a way, it's not a reset, but it's a rethink for the project.

352
00:21:05,320 --> 00:21:07,400
And that seems like it could be a positive thing long term.

353
00:21:07,400 --> 00:21:11,020
What are your thoughts, though, as somebody who's in the middle of the storm right now?

354
00:21:11,020 --> 00:21:16,580
I think the biggest takeaway is that CentOS is transitioning, you know, execution and

355
00:21:16,580 --> 00:21:22,160
timing aside, it's transitioning from being downstream of RHEL to upstream of RHEL.

356
00:21:22,160 --> 00:21:27,760
And at a higher level, it's transitioning from being something that is quite frankly

357
00:21:27,760 --> 00:21:34,360
a conflict of interest with RHEL to something that's essential to the RHEL development pipeline.

358
00:21:34,360 --> 00:21:39,120
And that actually protects CentOS long term from any kind of future, you know, management

359
00:21:39,120 --> 00:21:43,240
decisions around whether or not it deserves to exist.

360
00:21:43,240 --> 00:21:46,800
And that's one of the things that, you know, asking now, well, how do we know that CentOS

361
00:21:46,800 --> 00:21:48,640
stream won't go away?

362
00:21:48,640 --> 00:21:52,000
That's the same as asking, how do we know Fedora won't go away?

363
00:21:52,000 --> 00:21:55,920
No one's going to, you know, make you a guarantee that it won't.

364
00:21:55,920 --> 00:21:59,560
But if you understand how the development process actually works, you realize that that's

365
00:21:59,560 --> 00:22:00,760
a ridiculous question.

366
00:22:00,760 --> 00:22:05,240
Like it can't go away now, not easily, and it would be very difficult to change that.

367
00:22:05,240 --> 00:22:09,480
Yeah, that's how I see it, too, which is why in a lot of ways, because I don't run a lot

368
00:22:09,480 --> 00:22:14,280
of CentOS traditional, I feel like it's just a great win for me because my desktop environment

369
00:22:14,280 --> 00:22:19,000
and desktop distro that I like, they're pretty safe and secure.

370
00:22:19,000 --> 00:22:20,740
They're kind of an essential part now.

371
00:22:20,740 --> 00:22:25,420
And CentOS stream moves into a serious contender for me because really, it's just the right

372
00:22:25,420 --> 00:22:27,360
kind of stable and updates for me.

373
00:22:27,360 --> 00:22:31,280
It's funny, too, it makes me think about how, you know, in terms of the RHEL lifecycle,

374
00:22:31,280 --> 00:22:34,960
the LTS lifecycle, it really hasn't been that long, right?

375
00:22:34,960 --> 00:22:39,760
The Red Hat CentOS acquisition first change was in 2014, which was the same year that

376
00:22:39,760 --> 00:22:40,760
RHEL 7 came out.

377
00:22:40,760 --> 00:22:46,360
So it's really only been one, like, major release cycle, or it's all still getting figured

378
00:22:46,360 --> 00:22:47,360
out.

379
00:22:47,360 --> 00:22:50,680
And if this new arrangement means that there's a healthier development community, there's

380
00:22:50,680 --> 00:22:54,800
more open source options for people to find the right system, you know, there's rebuilds

381
00:22:54,800 --> 00:22:59,600
available for the admin who just wants a stable, free RHEL, and there's now a development

382
00:22:59,600 --> 00:23:03,920
community for folks like Facebook who really wanted more input on CentOS.

383
00:23:03,920 --> 00:23:04,920
That's nice.

384
00:23:04,920 --> 00:23:08,080
Well, this leaves me and I know you, Wes, with one question.

385
00:23:08,080 --> 00:23:11,080
All right, so then WireGuard.

386
00:23:11,080 --> 00:23:12,080
WireGuard!

387
00:23:12,080 --> 00:23:13,080
WireGuard!

388
00:23:13,080 --> 00:23:16,560
When do I get WireGuard?

389
00:23:16,560 --> 00:23:17,560
That's what I want.

390
00:23:17,560 --> 00:23:18,560
I want WireGuard!

391
00:23:18,560 --> 00:23:19,560
Just get WireGuard in there.

392
00:23:19,560 --> 00:23:22,560
That's all I'm asking for.

393
00:23:22,560 --> 00:23:25,920
Jeez Louise.

394
00:23:25,920 --> 00:23:27,920
Linode.com slash unplugged.

395
00:23:27,920 --> 00:23:32,480
Go there to get a $100 60 day credit towards a new account and, of course, support the

396
00:23:32,480 --> 00:23:33,480
show.

397
00:23:33,480 --> 00:23:36,160
If you get it here and you're like, hey, man, thanks for supporting the show that I listened

398
00:23:36,160 --> 00:23:37,160
to.

399
00:23:37,160 --> 00:23:39,640
Those guys have been going for like seven years and really appreciate you supporting

400
00:23:39,640 --> 00:23:40,640
them.

401
00:23:40,640 --> 00:23:42,960
Yeah, that's what just visiting Linode.com slash unplugged does.

402
00:23:42,960 --> 00:23:48,560
It gets you $100 of Linode money and it's telling them it's a signal that you support

403
00:23:48,560 --> 00:23:51,240
the show and that you support them supporting us.

404
00:23:51,240 --> 00:23:52,240
That's a lot of support.

405
00:23:52,240 --> 00:23:55,320
It's kind of like a big hug over at Linode.com slash unplugged.

406
00:23:55,320 --> 00:23:57,040
They're our cloud provider.

407
00:23:57,040 --> 00:24:00,280
We've been using them for all of our JB 3.0 infrastructure.

408
00:24:00,280 --> 00:24:03,080
I started a couple of years ago using them personally.

409
00:24:03,080 --> 00:24:07,560
I wanted a cloud provider that seemed like a good member of the Linux community.

410
00:24:07,560 --> 00:24:12,520
And, of course, I had known about Linode forever because they've been around since 2003.

411
00:24:12,520 --> 00:24:15,640
I've seen them at a ton of events and they've supported things like Linux Fest Northwest

412
00:24:15,640 --> 00:24:18,960
and I thought, okay, it's time.

413
00:24:18,960 --> 00:24:24,920
I wanted something that was separate from the other services we had and I went to Linode.

414
00:24:24,920 --> 00:24:29,920
One of the things I personally really liked just as somebody just first experiences is

415
00:24:29,920 --> 00:24:32,800
I loved how many freaking distros they have.

416
00:24:32,800 --> 00:24:33,800
I mentioned Alpine earlier.

417
00:24:33,800 --> 00:24:34,800
Yeah, they got that.

418
00:24:34,800 --> 00:24:35,800
They got Arch.

419
00:24:35,800 --> 00:24:37,280
They got the recent CentOS.

420
00:24:37,280 --> 00:24:39,200
They got Debian releases up the wazoo.

421
00:24:39,200 --> 00:24:40,360
They got same with Fedora.

422
00:24:40,360 --> 00:24:42,640
They got several Fedoras and OpenSUSE.

423
00:24:42,640 --> 00:24:43,640
They got OpenSUSE too.

424
00:24:43,640 --> 00:24:46,960
They got all the versions of Ubuntu you'd want to deploy and more.

425
00:24:46,960 --> 00:24:51,800
It's funny, I even have a couple of Debian boxes from the one click application deployments

426
00:24:51,800 --> 00:24:52,800
for game servers.

427
00:24:52,800 --> 00:24:59,760
But what I really, really got about them, what clicked for me is their love for Linux

428
00:24:59,760 --> 00:25:00,760
and open source.

429
00:25:00,760 --> 00:25:06,240
They're independently owned and they're founded on a love of Linux because, and I say that

430
00:25:06,240 --> 00:25:10,320
in a way that I'd say this network was founded on a love for Linux.

431
00:25:10,320 --> 00:25:12,320
For me, I had to start talking about Linux.

432
00:25:12,320 --> 00:25:13,320
That's what I had to do.

433
00:25:13,320 --> 00:25:14,800
I was doing this awesome stuff.

434
00:25:14,800 --> 00:25:23,200
I was a Windows refugee who's doing this awesome stuff with Linux, saving myself from Windows.

435
00:25:23,200 --> 00:25:27,840
My first real experience was like squid proxy because we cut the bandwidth usage on our

436
00:25:27,840 --> 00:25:30,720
T1 connection just dramatically.

437
00:25:30,720 --> 00:25:35,520
And it was like I did it for free and it was just this huge deal and I just kind of became

438
00:25:35,520 --> 00:25:37,840
enthralled with it and I had to talk about it.

439
00:25:37,840 --> 00:25:41,200
Well, the guys at Linode, they came up with a way to do something even more clever.

440
00:25:41,200 --> 00:25:44,480
They saw where user mode Linux at the time was going, but they saw where the ball was

441
00:25:44,480 --> 00:25:49,200
rolling and they started what was really one of the first cloud computing companies.

442
00:25:49,200 --> 00:25:53,560
And now Linode is dedicated to offering the best virtualized cloud computing out there.

443
00:25:53,560 --> 00:25:55,640
If it runs on Linux, you can run it on Linode.

444
00:25:55,640 --> 00:26:01,440
Some weird custom setups, virtual desktops in the cloud.

445
00:26:01,440 --> 00:26:05,080
I use it for all kinds of back-end infrastructure, but for personal stuff too.

446
00:26:05,080 --> 00:26:09,560
So like a personal website, sure, but you need like a communications hub for your company

447
00:26:09,560 --> 00:26:10,560
that's private.

448
00:26:10,560 --> 00:26:13,260
Yeah, we'll do that too.

449
00:26:13,260 --> 00:26:15,320
But just try it out with that $100 credit.

450
00:26:15,320 --> 00:26:17,600
Go to linode.com slash unplugged.

451
00:26:17,600 --> 00:26:26,240
Go there, get the $100 credit and support the show, linode.com slash unplugged.

452
00:26:26,240 --> 00:26:33,480
So Ubuntu has chosen to backport a rather well-known desktop application, but they're

453
00:26:33,480 --> 00:26:35,600
not using a snap.

454
00:26:35,600 --> 00:26:39,120
They're not using Flatpak and I find this to be fascinating.

455
00:26:39,120 --> 00:26:46,360
So 2004, Ubuntu 2004 LTS shipped with Thunderbird 68, but that version is no longer supported

456
00:26:46,360 --> 00:26:51,200
upstream, which means the Ubuntu developers either have to go figure out how to backport

457
00:26:51,200 --> 00:26:58,320
these new fixes for like security stuff, or they have to just buckle down and go with

458
00:26:58,320 --> 00:27:00,200
Thunderbird 78.

459
00:27:00,200 --> 00:27:05,800
Understandably, the developers decided we're just going to ship Thunderbird 78.

460
00:27:05,800 --> 00:27:09,600
But it's not like a simple decision and that's why I think the packaging matters in this

461
00:27:09,600 --> 00:27:10,600
case, Wes.

462
00:27:10,600 --> 00:27:17,360
Oh, yeah, I mean, 68 to 78, that sounds like a big jump, and it is, and therefore the Ubuntu

463
00:27:17,360 --> 00:27:22,540
devs are warning of some possible disruption to come from this rather big stable release

464
00:27:22,540 --> 00:27:23,540
upgrade.

465
00:27:23,540 --> 00:27:27,860
In particular, say Enigmail, for instance, is deprecated now that Thunderbird actually

466
00:27:27,860 --> 00:27:34,800
has a native PGP solution, finally, and that impacts LTS users relying on that old plugin,

467
00:27:34,800 --> 00:27:39,160
not to mention all the other plugins that may no longer work on 78.

468
00:27:39,160 --> 00:27:44,600
Yeah, and, okay, Wes, come here, I don't want, let's just, let's just have a little side

469
00:27:44,600 --> 00:27:45,600
meeting here.

470
00:27:45,600 --> 00:27:46,600
Huddle close.

471
00:27:46,600 --> 00:27:52,160
The cone of silence.

472
00:27:52,160 --> 00:27:58,560
Maybe we should ask, but this seems like the perfect use case for this technology called

473
00:27:58,560 --> 00:28:05,600
Snaps, which is a software packaging methodology that allows LTS users to safely use new software

474
00:28:05,600 --> 00:28:09,280
on older releases, decoupled from the dependencies.

475
00:28:09,280 --> 00:28:18,680
So if somebody could tell Canonical that they have Snaps, that they could deploy this Thunderbird

476
00:28:18,680 --> 00:28:23,880
as a Snap and not mess up Thunderbird 68, I feel like that'd probably be a good thing,

477
00:28:23,880 --> 00:28:26,680
but I don't want to mention it on the show because that'd be like super embarrassing.

478
00:28:26,680 --> 00:28:30,640
Well, you know, they actually, I guess, I'm looking right now, it looks like there already

479
00:28:30,640 --> 00:28:32,400
is a Thunderbird Snap available.

480
00:28:32,400 --> 00:28:33,960
Yeah, okay, okay, okay.

481
00:28:33,960 --> 00:28:36,960
The cone of silence.

482
00:28:36,960 --> 00:28:41,840
I think that the problem here is do you just leave that old unsupported version left to

483
00:28:41,840 --> 00:28:43,840
rot in your LTS repo?

484
00:28:43,840 --> 00:28:47,840
Actually I really, what I really like about this story is that they are actually shipping

485
00:28:47,840 --> 00:28:54,240
it as a deb because then the existing users will get that upgrade and I think it's really

486
00:28:54,240 --> 00:28:59,880
awesome that Canonical is investing the time and resources to keep that kind of stuff on

487
00:28:59,880 --> 00:29:03,160
the LTS desktop up to date and secure.

488
00:29:03,160 --> 00:29:04,400
It makes it a viable option.

489
00:29:04,400 --> 00:29:09,080
Yeah, and it's interesting to note like this is, it's just sort of an insight into where

490
00:29:09,080 --> 00:29:12,920
Canonical is choosing to spend those development resources, right?

491
00:29:12,920 --> 00:29:17,840
And I guess Thunderbird is worth it to them.

492
00:29:17,840 --> 00:29:19,520
So this is really exciting.

493
00:29:19,520 --> 00:29:25,320
I want to take a minute here in the community news to say our community has something special

494
00:29:25,320 --> 00:29:27,160
happening this week.

495
00:29:27,160 --> 00:29:30,440
This is a local story, you know, like you got your national news and your local news.

496
00:29:30,440 --> 00:29:32,440
Well, this is a local news story.

497
00:29:32,440 --> 00:29:34,360
Coder Radio 400 lands this week.

498
00:29:34,360 --> 00:29:39,280
That's a big milestone for me personally and for Mike and the team here.

499
00:29:39,280 --> 00:29:41,960
400 is no joke when it comes to podcasting.

500
00:29:41,960 --> 00:29:46,480
It's over eight years of shows and that lands later this week.

501
00:29:46,480 --> 00:29:50,160
If you're listening to this on the release day, it lands just a few days after this episode.

502
00:29:50,160 --> 00:29:54,200
So I just wanted to encourage you to head over to coder.show slash subscribe to grab

503
00:29:54,200 --> 00:29:57,040
the feed so you can get it.

504
00:29:57,040 --> 00:30:00,480
I feel like, you know, it took a break for a little bit, but after we went independent

505
00:30:00,480 --> 00:30:03,300
it came back and I think it's better than ever.

506
00:30:03,300 --> 00:30:05,520
Episode 400 is going to be well worth a listen.

507
00:30:05,520 --> 00:30:06,840
We've already recorded it.

508
00:30:06,840 --> 00:30:11,300
Wes joined me on 399 and we had a great time there and we talked about some of the back

509
00:30:11,300 --> 00:30:15,200
end tech, the open source tech we use here at the studio.

510
00:30:15,200 --> 00:30:22,900
And after over two years of like no merch, no swag, just a drought of fun stuff you could

511
00:30:22,900 --> 00:30:23,900
get from JB.

512
00:30:23,900 --> 00:30:25,760
Oh, my clothing, it's rotting away.

513
00:30:25,760 --> 00:30:26,760
I know.

514
00:30:26,760 --> 00:30:28,000
All my old shirts are fading.

515
00:30:28,000 --> 00:30:33,080
Oh, well, we're launching our most ambitious merchandise item ever in episode 400 of Coder

516
00:30:33,080 --> 00:30:34,240
Radio.

517
00:30:34,240 --> 00:30:41,800
There is life before this item and then there is life after this item and all of the details,

518
00:30:41,800 --> 00:30:45,040
all of them will be revealed in Coder Radio 400.

519
00:30:45,040 --> 00:30:48,040
In fact, there may be more than one item.

520
00:30:48,040 --> 00:30:49,880
So check that out later this week.

521
00:30:49,880 --> 00:30:55,320
Just go to coder.show slash subscribe to grab the feed and don't miss this week's episode.

522
00:30:55,320 --> 00:31:00,240
We're super proud to be to 400 episodes and this show is not that far away either, Wes.

523
00:31:00,240 --> 00:31:04,400
So we got to start thinking like, what do we want to do for big 400 here on this show?

524
00:31:04,400 --> 00:31:05,400
Oh, yeah.

525
00:31:05,400 --> 00:31:06,960
We've got eight episodes to go.

526
00:31:06,960 --> 00:31:07,960
Yeah.

527
00:31:07,960 --> 00:31:08,960
Yeah.

528
00:31:08,960 --> 00:31:12,840
So Coder just hit that milestone a little bit before us and we had a lot of fun.

529
00:31:12,840 --> 00:31:13,920
And so keep an eye out.

530
00:31:13,920 --> 00:31:20,400
That'll be it'll be on the Coder feed and will be in the all show feeds later this week.

531
00:31:20,400 --> 00:31:23,600
And we do have a little bit of cleanup to do around here.

532
00:31:23,600 --> 00:31:26,960
I want to mention that our telegram group is still going strong.

533
00:31:26,960 --> 00:31:30,340
We don't talk about it as much these days, but we love it.

534
00:31:30,340 --> 00:31:31,840
And we're in there all the time.

535
00:31:31,840 --> 00:31:35,240
It's a Jupiter broadcasting dot com slash telegram.

536
00:31:35,240 --> 00:31:38,240
Get in there and join the chat, especially if you just recently got telegram, because

537
00:31:38,240 --> 00:31:43,300
I know a lot of you have also the love plug going better than ever.

538
00:31:43,300 --> 00:31:48,840
Every single Sunday, it's noon, Pacific three p.m. Eastern, right in our Mumble room at

539
00:31:48,840 --> 00:31:50,260
the right in the lobby.

540
00:31:50,260 --> 00:31:54,040
And we have all the information on how to join Mumble at Linux unplugged dot com.

541
00:31:54,040 --> 00:32:00,480
And we have the love plug session in your local time at Jupiter broadcasting dot com

542
00:32:00,480 --> 00:32:02,580
slash calendar.

543
00:32:02,580 --> 00:32:06,320
So I also am going to give a special shout out.

544
00:32:06,320 --> 00:32:10,820
If you're if you're looking to reach the audience, we have an opening next month.

545
00:32:10,820 --> 00:32:15,620
J.B. has some sponsor opportunities for members of our audience next month.

546
00:32:15,620 --> 00:32:18,600
So email me Chris at Jupiter broadcasting dot com.

547
00:32:18,600 --> 00:32:22,460
I love to have a situation where somebody who listens to the shows as a product that

548
00:32:22,460 --> 00:32:24,660
our community can benefit from.

549
00:32:24,660 --> 00:32:27,640
And I'd love to hear from you, Chris at Jupiter broadcasting dot com.

550
00:32:27,640 --> 00:32:30,680
And Mr. Bain, I think that's all the cleanup we have this week.

551
00:32:30,680 --> 00:32:33,200
It sure looks tidy around here.

552
00:32:33,200 --> 00:32:39,440
OK, don't call me crazy for this one, but I have an honest question that I want to ask

553
00:32:39,440 --> 00:32:40,920
you guys.

554
00:32:40,920 --> 00:32:44,800
And maybe in a way, I kind of want you to talk me out of it, actually.

555
00:32:44,800 --> 00:32:51,480
I'm thinking about Arch for a family member, and this is something I would never, ever

556
00:32:51,480 --> 00:32:53,920
do in the past.

557
00:32:53,920 --> 00:33:00,940
I always go for the LTS or elementary OS or something that's that's a multi year distro.

558
00:33:00,940 --> 00:33:06,260
But the situation has changed recently and it's got me considering deploying something

559
00:33:06,260 --> 00:33:09,740
much more current for a family member.

560
00:33:09,740 --> 00:33:12,960
It all started because of a laptop.

561
00:33:12,960 --> 00:33:17,400
I'm testing a laptop out for my boy, Dylan, thinking about giving this to him for his

562
00:33:17,400 --> 00:33:19,200
birthday that's coming up soon.

563
00:33:19,200 --> 00:33:21,960
And it's a funny thing, this laptop.

564
00:33:21,960 --> 00:33:27,960
This time a year ago, by any review I read online, it was an absolute nightmare to get

565
00:33:27,960 --> 00:33:30,360
Linux running on this thing.

566
00:33:30,360 --> 00:33:31,680
And I can kind of see why.

567
00:33:31,680 --> 00:33:33,800
It's a Ryzen nine eight core CPU.

568
00:33:33,800 --> 00:33:41,760
It has an Nvidia RTX 2060 Max Q, as well as a built in AMD integrated GPU, a hundred and

569
00:33:41,760 --> 00:33:42,940
twenty eight hertz display.

570
00:33:42,940 --> 00:33:45,120
Not every desktop environment even supports that.

571
00:33:45,120 --> 00:33:48,720
I mean, this thing is a quintessential gaming laptop.

572
00:33:48,720 --> 00:33:52,160
It's the Asus Zephyrus G14.

573
00:33:52,160 --> 00:33:57,240
It's a 14 inch screamer and it's a slick looking rig.

574
00:33:57,240 --> 00:34:00,100
I've seen a lot of people asking online if it's compatible with Linux.

575
00:34:00,100 --> 00:34:04,680
And back in April of 2020, when Jim Salter over at Ars Technica tried it out, our buddy

576
00:34:04,680 --> 00:34:08,800
Jim from the show here, he's been on before, he had all kinds of problems and Jim's not

577
00:34:08,800 --> 00:34:10,800
new to Linux.

578
00:34:10,800 --> 00:34:14,760
He declared it, and I quote, a bust under Linux.

579
00:34:14,760 --> 00:34:16,760
He had trackpad issues.

580
00:34:16,760 --> 00:34:19,240
He had no working GPU acceleration.

581
00:34:19,240 --> 00:34:22,560
And for the hardware that did work, he had like strange driver errors that would be in

582
00:34:22,560 --> 00:34:24,960
the logs, even though things were working.

583
00:34:24,960 --> 00:34:27,920
It just was a complete no recommendation from him.

584
00:34:27,920 --> 00:34:34,280
And it seemed like such a shame, you know, something with a with a great Ryzen CPU and

585
00:34:34,280 --> 00:34:37,680
dedicated graphics and a hundred and twenty eight hertz screen.

586
00:34:37,680 --> 00:34:39,520
That's a special combination.

587
00:34:39,520 --> 00:34:44,840
Well, is it isn't it funny how it works in Linux land?

588
00:34:44,840 --> 00:34:50,080
If you fast forward to the end of 2020, early 2021, and you have a distro that rocks a modern

589
00:34:50,080 --> 00:34:53,840
kernel, the thing's nearly problem free now.

590
00:34:53,840 --> 00:34:54,840
Wow.

591
00:34:54,840 --> 00:34:55,840
Everything basically works.

592
00:34:55,840 --> 00:34:57,520
And I mean, you've seen it, Wes.

593
00:34:57,520 --> 00:34:59,320
It's it's a nice looking rig, too.

594
00:34:59,320 --> 00:35:00,800
Yeah, yeah, it is.

595
00:35:00,800 --> 00:35:02,960
It's got 24 gigs of RAM.

596
00:35:02,960 --> 00:35:05,980
It's got a really fast NVMe disk in it.

597
00:35:05,980 --> 00:35:10,520
That Ryzen CPU has 16 threads, eight physical cores.

598
00:35:10,520 --> 00:35:16,040
And with that hundred and twenty eight hertz screen and that Nvidia GPU, this has literally

599
00:35:16,040 --> 00:35:21,000
become one of the best experiences of desktop Linux that I have ever had.

600
00:35:21,000 --> 00:35:26,800
And I've fallen in love with my son's computer and I don't know what I'm going to do about

601
00:35:26,800 --> 00:35:27,800
this.

602
00:35:27,800 --> 00:35:30,680
I mean, this is going to be really hard to give up.

603
00:35:30,680 --> 00:35:37,880
But the kid loves the game on Linux, and this week he asked me for Arch.

604
00:35:37,880 --> 00:35:39,300
He asked.

605
00:35:39,300 --> 00:35:43,040
And I think, you know, for him, it's obvious he's seen how quickly I can get things up

606
00:35:43,040 --> 00:35:48,600
and going on my computer versus his, which is based on an 1804 base and things are just

607
00:35:48,600 --> 00:35:51,360
a little bit harder to get up and running when you're trying out different launchers

608
00:35:51,360 --> 00:35:53,280
or the latest Nvidia driver.

609
00:35:53,280 --> 00:35:54,280
And he gets that.

610
00:35:54,280 --> 00:35:58,300
He doesn't understand all the details of it, but he understands that his Linux is based

611
00:35:58,300 --> 00:36:03,680
on something that was released in 2018 and my Linux is based on stuff that was released

612
00:36:03,680 --> 00:36:05,320
now.

613
00:36:05,320 --> 00:36:10,480
And he finds that more compelling because he wants to get like launchers from the AUR

614
00:36:10,480 --> 00:36:13,640
and stuff, drivers and stuff like that.

615
00:36:13,640 --> 00:36:15,760
And so my idea was, let's see if this machine works.

616
00:36:15,760 --> 00:36:19,960
And I was pretty skeptical because Jim had had such a hard time with an others as well.

617
00:36:19,960 --> 00:36:24,040
You can find threads all over the Internet of people having this drugs.

618
00:36:24,040 --> 00:36:28,800
And so I thought, well, you know, maybe, you know, because I'm, you know, I'm Mr. Linux

619
00:36:28,800 --> 00:36:29,800
unplugged over here.

620
00:36:29,800 --> 00:36:31,240
Maybe I can get it working.

621
00:36:31,240 --> 00:36:34,800
Chris, LAS, the LAS stands for Linux Action Show.

622
00:36:34,800 --> 00:36:36,200
Hello, ladies.

623
00:36:36,200 --> 00:36:38,320
So I thought maybe I'll get it going.

624
00:36:38,320 --> 00:36:44,000
And but in reality, all I did was download Endeavor OS, which ships with a very modern

625
00:36:44,000 --> 00:36:50,000
kernel, especially their latest release, and use that to boot this laptop.

626
00:36:50,000 --> 00:36:51,740
And everything just worked.

627
00:36:51,740 --> 00:36:55,340
And so then I started to think, well, hang on here.

628
00:36:55,340 --> 00:36:56,340
Should I do this?

629
00:36:56,340 --> 00:37:02,080
I mean, my personal reasons for giving my son Arch on this machine would be over and

630
00:37:02,080 --> 00:37:03,080
over again with gaming.

631
00:37:03,080 --> 00:37:06,920
It seems like it's always been beneficial to have the latest graphics stack and kernel

632
00:37:06,920 --> 00:37:08,760
stack.

633
00:37:08,760 --> 00:37:12,800
There are a few kernel patches that that allow you to control the thermals and the fans and

634
00:37:12,800 --> 00:37:14,280
other things more with the G14.

635
00:37:14,280 --> 00:37:17,320
Of course, that stuff's right there in the AUR.

636
00:37:17,320 --> 00:37:18,320
Super easy.

637
00:37:18,320 --> 00:37:19,320
Just a kernel build away.

638
00:37:19,320 --> 00:37:20,320
Yeah.

639
00:37:20,320 --> 00:37:25,020
So that's nice because it just solves a couple of things and it's just done.

640
00:37:25,020 --> 00:37:28,440
Like I mentioned, there's tons of game launchers that'd be easy for me to set up for him via

641
00:37:28,440 --> 00:37:30,000
the AUR.

642
00:37:30,000 --> 00:37:32,960
And rolling means fresh GNOME shell.

643
00:37:32,960 --> 00:37:37,440
And fresh GNOME means the latest performance improvements that multiple upstream companies

644
00:37:37,440 --> 00:37:38,440
are working on.

645
00:37:38,440 --> 00:37:42,000
And then at the end of the day, of course, my kid has dad grade tech support.

646
00:37:42,000 --> 00:37:43,520
So it's not like I can't help him.

647
00:37:43,520 --> 00:37:45,700
I mean, that's a real factor here.

648
00:37:45,700 --> 00:37:48,920
So I'm wondering, can somebody give me a reason not to do it?

649
00:37:48,920 --> 00:37:52,160
I know your kids are on Fedora and it looks like it's working really well for them.

650
00:37:52,160 --> 00:37:54,480
Your daughter seems to love it.

651
00:37:54,480 --> 00:37:58,480
I guess, is it, am I crazy here?

652
00:37:58,480 --> 00:38:00,160
Should I just be happy with something like Fedora?

653
00:38:00,160 --> 00:38:04,820
Because I have thought like either the most recent Fedora or the most recent Ubuntu and

654
00:38:04,820 --> 00:38:06,400
just stick with that.

655
00:38:06,400 --> 00:38:09,320
I would say go with whatever you're most comfortable with.

656
00:38:09,320 --> 00:38:14,720
I mean, whenever you're the escalation point, whenever you're the support, have them use

657
00:38:14,720 --> 00:38:17,680
whatever is the easiest thing for you to support.

658
00:38:17,680 --> 00:38:19,160
Your kid thinks I should go Fedora.

659
00:38:19,160 --> 00:38:25,000
Yeah, it's going to give you all the rolling, nice updated software you'd get in Arch.

660
00:38:25,000 --> 00:38:27,440
But here's the thing.

661
00:38:27,440 --> 00:38:30,360
Your son won't have pain from his operating system.

662
00:38:30,360 --> 00:38:31,360
Yeah.

663
00:38:31,360 --> 00:38:33,320
I mean, is Arch that bad?

664
00:38:33,320 --> 00:38:36,040
I feel like Endeavor OS makes a lot of takes.

665
00:38:36,040 --> 00:38:40,400
It's very, it gets you installed, it gets you set up with a desktop environment.

666
00:38:40,400 --> 00:38:42,900
And then it's basically like, okay, have at it and it's out of your way.

667
00:38:42,900 --> 00:38:43,900
And it just runs.

668
00:38:43,900 --> 00:38:46,120
I would say it depends on his update hygiene.

669
00:38:46,120 --> 00:38:47,120
Yeah.

670
00:38:47,120 --> 00:38:50,440
How willing is Dylan to be, you know, involved in that sort of maintenance?

671
00:38:50,440 --> 00:38:51,760
Are you the one doing the updates?

672
00:38:51,760 --> 00:38:54,280
Or is he going to be doing that on some kind of basis?

673
00:38:54,280 --> 00:39:00,360
My thought there was maybe go with the LTS kernel and the LTS video drivers, and then

674
00:39:00,360 --> 00:39:03,100
just do updates, you know, a couple times a month.

675
00:39:03,100 --> 00:39:09,200
If you do the LTS, you will probably miss out on some kernel niceties that might help

676
00:39:09,200 --> 00:39:11,560
with his newer components.

677
00:39:11,560 --> 00:39:12,560
True.

678
00:39:12,560 --> 00:39:16,440
Although the LTS kernel I think is, I think in Arch now it's 5.10.

679
00:39:16,440 --> 00:39:18,240
I mean, that's, I'm pretty good at that point.

680
00:39:18,240 --> 00:39:19,240
I mean, maybe that's coming.

681
00:39:19,240 --> 00:39:22,040
It looks like the current is 5.4.

682
00:39:22,040 --> 00:39:27,120
Oh, oh, oh, oh.

683
00:39:27,120 --> 00:39:28,120
I don't know.

684
00:39:28,120 --> 00:39:33,520
I'm running an AMD system and it's very nice to have latest kernel and Mesa stuff.

685
00:39:33,520 --> 00:39:34,520
It helps out a lot.

686
00:39:34,520 --> 00:39:35,520
Oh boy.

687
00:39:35,520 --> 00:39:36,520
Yeah, boy.

688
00:39:36,520 --> 00:39:40,080
If it's 5.4, that's kind of a deal breaker because I think some of the stuff I need is

689
00:39:40,080 --> 00:39:41,760
in later versions.

690
00:39:41,760 --> 00:39:42,760
Hmm.

691
00:39:42,760 --> 00:39:43,760
Okay.

692
00:39:43,760 --> 00:39:48,520
So LTS is out, but PyCrash points out there could be a few other steps I could take to

693
00:39:48,520 --> 00:39:50,400
make Arch a little bit safer to use.

694
00:39:50,400 --> 00:39:51,400
Yeah.

695
00:39:51,400 --> 00:39:57,300
I mean, it will be a great, great opportunity for Dylan to play with his system and learn

696
00:39:57,300 --> 00:39:59,680
a little more about Linux.

697
00:39:59,680 --> 00:40:03,480
And you can just install Snapper like you have on your Arch server.

698
00:40:03,480 --> 00:40:08,600
So he tells me how to roll back with Snapper and he's done.

699
00:40:08,600 --> 00:40:12,600
He rolls back, he fixes problems and it's done.

700
00:40:12,600 --> 00:40:13,600
True.

701
00:40:13,600 --> 00:40:20,040
I feel like what would make Snapper even more perfect with Arch would be if it made a boot

702
00:40:20,040 --> 00:40:21,040
entry.

703
00:40:21,040 --> 00:40:24,360
So you could actually boot into a previous snapshot and just go right back.

704
00:40:24,360 --> 00:40:28,760
So you could just, all he had to do was reboot and go to previous state in grub.

705
00:40:28,760 --> 00:40:31,960
And then I feel like that would be deployment ready for him.

706
00:40:31,960 --> 00:40:36,320
But Minimac, I feel like part of the thing here is he's asking for Arch and this is kind

707
00:40:36,320 --> 00:40:39,760
of an opportunity to like take him further down the Linux path.

708
00:40:39,760 --> 00:40:40,760
Yeah.

709
00:40:40,760 --> 00:40:46,520
I was listening to that story and I just felt as a proud father, you just want to do that.

710
00:40:46,520 --> 00:40:55,160
You know, in German, we have that saying that says the apple just falls next to the tree

711
00:40:55,160 --> 00:40:58,520
and you want your son being a Linux guy.

712
00:40:58,520 --> 00:41:05,680
And Arch, I mean, there is probably a learning curve, but I mean, with a possibility of SSH

713
00:41:05,680 --> 00:41:09,760
connection, you can probably fix some stuff.

714
00:41:09,760 --> 00:41:10,760
True.

715
00:41:10,760 --> 00:41:14,680
That maybe, and let's be honest, you want that.

716
00:41:14,680 --> 00:41:15,680
And it's cool.

717
00:41:15,680 --> 00:41:17,200
That is a good point.

718
00:41:17,200 --> 00:41:21,920
I could probably just do a reverse SSH connection and fix it for him.

719
00:41:21,920 --> 00:41:25,000
And he does, you know, I'm always just a call or a text message or sitting right next to

720
00:41:25,000 --> 00:41:26,000
him.

721
00:41:26,000 --> 00:41:27,000
So that's true.

722
00:41:27,000 --> 00:41:31,880
Although I don't want it to end up being a problem like when I'm super busy and I can't

723
00:41:31,880 --> 00:41:34,560
address it right away, which could happen.

724
00:41:34,560 --> 00:41:38,760
So I don't know, Colonel, maybe there's a bit of a safety in between with Manjaro.

725
00:41:38,760 --> 00:41:39,760
Yeah.

726
00:41:39,760 --> 00:41:44,800
I know that for a lot of gamers, they really like Manjaro because it walks that line of

727
00:41:44,800 --> 00:41:50,600
having the newest stuff, but Manjaro will hold it for a week or two, do a little extra

728
00:41:50,600 --> 00:41:53,720
testing and kind of takes the pain out of Arch.

729
00:41:53,720 --> 00:41:58,880
So it might be a nice happy in between where he's still getting newest stuff.

730
00:41:58,880 --> 00:42:00,160
It's still rolling.

731
00:42:00,160 --> 00:42:05,840
It's still technically sort of Arch, but he doesn't have some of the pain points that

732
00:42:05,840 --> 00:42:11,160
Arch would present where you have to read the blog post before you do your updates and

733
00:42:11,160 --> 00:42:12,160
stuff like that.

734
00:42:12,160 --> 00:42:14,520
I have considered that because you're right for gaming, too.

735
00:42:14,520 --> 00:42:17,080
It really does kind of hit that.

736
00:42:17,080 --> 00:42:21,800
The other thing, too, is that Manjaro has taken a lot of work to actually make gaming

737
00:42:21,800 --> 00:42:24,620
a good experience on Manjaro.

738
00:42:24,620 --> 00:42:25,800
So there's that, too.

739
00:42:25,800 --> 00:42:26,800
Yeah.

740
00:42:26,800 --> 00:42:27,800
That's a fair point.

741
00:42:27,800 --> 00:42:33,080
I have really liked Endeavor OS, but I'm liking it from I forget that it's not just

742
00:42:33,080 --> 00:42:34,080
Vanilla Arch.

743
00:42:34,080 --> 00:42:37,040
I think their ISO sort of hits that perfect balance.

744
00:42:37,040 --> 00:42:42,920
It has some of the latest packages you might need, and they just did an update for 2021.

745
00:42:42,920 --> 00:42:48,760
And so in there, they've got just some nice sensible defaults, and you boot that, and

746
00:42:48,760 --> 00:42:53,640
you get Linux 5.10, and you get a lot of nice new stuff just right out of the box.

747
00:42:53,640 --> 00:42:55,440
And then you're off to the races with Arch.

748
00:42:55,440 --> 00:42:58,840
And some of the other things they do by default that I think all Arch distros should do is

749
00:42:58,840 --> 00:43:01,720
they package reflectors so you get the fastest mirrors possible.

750
00:43:01,720 --> 00:43:04,560
I mean, it's just a solid, solid version of Arch.

751
00:43:04,560 --> 00:43:05,560
But you're right.

752
00:43:05,560 --> 00:43:09,280
If I'm going just for gaming, I could see that.

753
00:43:09,280 --> 00:43:10,280
I could.

754
00:43:10,280 --> 00:43:11,880
Talk me out of it, Carl.

755
00:43:11,880 --> 00:43:16,160
Well, I guess the way I would look at it is that you were talking about when things do

756
00:43:16,160 --> 00:43:21,880
go wrong, Fedora would give you a good boundary there where they still get very fresh software,

757
00:43:21,880 --> 00:43:25,120
still get the latest kernel and graphics drivers all the time.

758
00:43:25,120 --> 00:43:29,520
But for other major changes in the operating system, those are going to be batched up with

759
00:43:29,520 --> 00:43:33,640
the major version upgrades, like going from Fedora 32 to 33.

760
00:43:33,640 --> 00:43:38,240
And you could wait until you're around to do those upgrades, but not doing the system

761
00:43:38,240 --> 00:43:42,760
upgrades, you know, just the regular routine ones he can apply on his own all the time.

762
00:43:42,760 --> 00:43:43,760
Yeah.

763
00:43:43,760 --> 00:43:44,760
Huh.

764
00:43:44,760 --> 00:43:45,760
Man, this is tricky.

765
00:43:45,760 --> 00:43:50,400
I feel like I had all this momentum, and now you guys have basically taken me to the distro

766
00:43:50,400 --> 00:43:51,400
disco.

767
00:43:51,400 --> 00:44:05,960
Distro.

768
00:44:05,960 --> 00:44:08,920
So what I got to do is I got to just try it all out.

769
00:44:08,920 --> 00:44:10,280
So right now I have Arch on there.

770
00:44:10,280 --> 00:44:16,920
So I think before I take Arch off, I crash linked snap pack grub, which is a Pacman hook

771
00:44:16,920 --> 00:44:23,800
to update grub entries if you're running ButterFS, which I don't know if I am or not on that

772
00:44:23,800 --> 00:44:25,000
machine.

773
00:44:25,000 --> 00:44:26,000
So this is cool.

774
00:44:26,000 --> 00:44:27,000
Did you see this, Wes?

775
00:44:27,000 --> 00:44:30,720
It does that bit I was talking about by taking those snapshots and making them grub entries.

776
00:44:30,720 --> 00:44:31,720
Oh, yeah.

777
00:44:31,720 --> 00:44:32,720
Isn't that handy?

778
00:44:32,720 --> 00:44:34,000
I wonder if we should put that on the server.

779
00:44:34,000 --> 00:44:35,560
I'll put a link to it in the show notes.

780
00:44:35,560 --> 00:44:37,440
Let me think about that.

781
00:44:37,440 --> 00:44:38,440
Kick that one around.

782
00:44:38,440 --> 00:44:39,440
See, that seems perfect.

783
00:44:39,440 --> 00:44:43,880
We'll test it out on the server, see if we like it, and if it proves itself reliable,

784
00:44:43,880 --> 00:44:44,880
give it to Dylan.

785
00:44:44,880 --> 00:44:45,880
True.

786
00:44:45,880 --> 00:44:53,240
I'm going to test the laptop for a bit, and then I think I need to give Fedora a spin.

787
00:44:53,240 --> 00:44:54,240
I need to try it.

788
00:44:54,240 --> 00:44:58,640
I need to try it soon, so that way I can get this figured out before his birthday.

789
00:44:58,640 --> 00:45:01,680
And then I got to figure out what the heck I'm going to do for myself.

790
00:45:01,680 --> 00:45:05,560
I'm kind of thinking maybe I might sell my X1.

791
00:45:05,560 --> 00:45:06,640
It's a fine laptop.

792
00:45:06,640 --> 00:45:07,880
You just got that.

793
00:45:07,880 --> 00:45:08,880
I know.

794
00:45:08,880 --> 00:45:09,880
I know.

795
00:45:09,880 --> 00:45:10,880
I know.

796
00:45:10,880 --> 00:45:12,720
But I have to recommend this G14.

797
00:45:12,720 --> 00:45:16,920
If you're comfortable running cutting edge Linux and you want like an Asus laptop that

798
00:45:16,920 --> 00:45:21,360
you can order off Amazon, I mean, the thing's ridiculous.

799
00:45:21,360 --> 00:45:25,520
It plays every single video game I throw at it, but my desktop experience has been super

800
00:45:25,520 --> 00:45:26,520
smooth.

801
00:45:26,520 --> 00:45:31,640
I have gone with GNOME Shell on it because I'm just using it as a single monitor, and

802
00:45:31,640 --> 00:45:34,480
it feels really, really nice and really fast on there.

803
00:45:34,480 --> 00:45:40,040
And I'm using plasma on my workstation class machines that have multiple monitors and multiple

804
00:45:40,040 --> 00:45:43,400
screens or even a single screen, but we're using it for work.

805
00:45:43,400 --> 00:45:45,300
That's plasma these days.

806
00:45:45,300 --> 00:45:51,880
But for like my one-off play machines that are single monitor, I'm finding GNOME Shell

807
00:45:51,880 --> 00:45:53,180
really does the trick.

808
00:45:53,180 --> 00:45:58,220
I really like it, and I've been using that on there, and it seems that it has solid support

809
00:45:58,220 --> 00:46:03,400
for the 120-hertz screen, so everything is just so smooth you want to lick it.

810
00:46:03,400 --> 00:46:04,960
I feel like maybe I've been broken by it.

811
00:46:04,960 --> 00:46:06,520
I don't know if I can go back now.

812
00:46:06,520 --> 00:46:08,120
I'm like that guy now.

813
00:46:08,120 --> 00:46:12,000
It's like you'll be buying a second one pretty soon.

814
00:46:12,000 --> 00:46:14,960
I would love for next-gen Ryzen to be easy to get access to.

815
00:46:14,960 --> 00:46:17,680
That would be perfect.

816
00:46:17,680 --> 00:46:19,200
But I'd love to know your thoughts.

817
00:46:19,200 --> 00:46:21,480
Let me know, linuxunplugged.com.

818
00:46:21,480 --> 00:46:24,080
Have you deployed something like Arch for a family member?

819
00:46:24,080 --> 00:46:26,480
Is that just too crazy?

820
00:46:26,480 --> 00:46:31,040
And is Fedora or maybe the latest Ubuntu a safer kind of bet?

821
00:46:31,040 --> 00:46:37,040
Ironically, he would be happier with GNOME 40 because he's actually used to horizontal

822
00:46:37,040 --> 00:46:40,840
workspace layouts with the very little interaction he does with them because he's currently using

823
00:46:40,840 --> 00:46:47,460
elementary OS, and it's worked fantastic for a long, long time since it came out.

824
00:46:47,460 --> 00:46:52,280
But now it seems like it's getting trickier and trickier for him to do things like run

825
00:46:52,280 --> 00:46:57,880
multiple versions of Java and update the NVIDIA driver, and his frustration translates to

826
00:46:57,880 --> 00:47:00,400
maybe I should try Windows 10.

827
00:47:00,400 --> 00:47:04,340
And so when there was this window of opportunity to say, well, wait a minute, if I can keep

828
00:47:04,340 --> 00:47:07,240
using Linux but Arch makes it easier, maybe I should use Arch.

829
00:47:07,240 --> 00:47:09,720
Dad, will you put Arch on my computer?

830
00:47:09,720 --> 00:47:10,720
What would you do?

831
00:47:10,720 --> 00:47:15,880
Let me know, linuxunplugged.com slash contact.

832
00:47:15,880 --> 00:47:18,880
Thank you to Datadog for sponsoring this episode of the Unplugged program.

833
00:47:18,880 --> 00:47:24,680
First time here on the Unplugged program, so go to datadog.com slash unplugged.

834
00:47:24,680 --> 00:47:29,520
They're the unified monitoring analytics platform for comprehensive visibility into cloud, hybrid,

835
00:47:29,520 --> 00:47:30,520
and multi-cloud environments.

836
00:47:30,520 --> 00:47:34,060
If you have on-premises and in cloud, they can do that.

837
00:47:34,060 --> 00:47:38,080
Before on the show, we've talked about site monitoring, keeping a real good eye on your

838
00:47:38,080 --> 00:47:39,080
site.

839
00:47:39,080 --> 00:47:41,780
Well, of course Datadog can do that, but this is the entire stack.

840
00:47:41,780 --> 00:47:46,760
This is monitoring your whole stack, your OS, your applications, your website, all of

841
00:47:46,760 --> 00:47:48,520
it from top to bottom.

842
00:47:48,520 --> 00:47:51,800
This is make important business decisions kind of monitoring.

843
00:47:51,800 --> 00:47:54,160
Get data to make decisions.

844
00:47:54,160 --> 00:47:57,640
It's data about your entire stack, and you can quickly analyze the performance of your

845
00:47:57,640 --> 00:48:01,820
Linux servers in real time with customizable dashboards, and you can troubleshoot those

846
00:48:01,820 --> 00:48:02,820
issues in seconds.

847
00:48:02,820 --> 00:48:08,600
You can get a unified view of your metrics, your traces, your logs, all in one place.

848
00:48:08,600 --> 00:48:12,760
Datadog started as an effort for the developers to communicate with sysadmins and sysadmins

849
00:48:12,760 --> 00:48:14,560
to communicate with developers.

850
00:48:14,560 --> 00:48:18,960
Seriously, that was the original premise, and they've built in this incredible stack

851
00:48:18,960 --> 00:48:22,640
with turnkey integrations for over 400 technologies.

852
00:48:22,640 --> 00:48:28,760
You can even use Datadog to monitor key Linux metrics and watch it right alongside with

853
00:48:28,760 --> 00:48:34,640
application data and even inside your containers, get insights into container performance.

854
00:48:34,640 --> 00:48:38,160
I mean, I'm talking full stack visibility here.

855
00:48:38,160 --> 00:48:43,200
You get an idea of the health, the performance, all of it.

856
00:48:43,200 --> 00:48:47,580
So start a Datadog trial right now by going to datadog.com slash unplug.

857
00:48:47,580 --> 00:48:52,680
If you start a free trial and you create just one dashboard, you'll get a free t-shirt from

858
00:48:52,680 --> 00:48:55,720
Datadog and you support the show.

859
00:48:55,720 --> 00:48:56,760
It's that easy.

860
00:48:56,760 --> 00:48:57,760
It's that simple.

861
00:48:57,760 --> 00:49:00,400
It's datadog.com slash unplug.

862
00:49:00,400 --> 00:49:05,400
Get an eye on everything and go there too just to see how beautiful they make it.

863
00:49:05,400 --> 00:49:09,840
They really help you visualize all of this in a way that your brain can process and take

864
00:49:09,840 --> 00:49:16,960
action on, datadog.com slash unplugged.

865
00:49:16,960 --> 00:49:21,440
We got a couple of emails in and some follow up about browser sync.

866
00:49:21,440 --> 00:49:24,480
Do you want to take Dan's email there, Mr. Payne?

867
00:49:24,480 --> 00:49:25,880
Hmm, sure do.

868
00:49:25,880 --> 00:49:31,280
Yes, Dan wrote in about browser sync and writes that when Chris mentioned story about Google

869
00:49:31,280 --> 00:49:38,800
cutting off sync support for Chromium, I thought for sure he'd mentioned Eversync or XbrowserSync.

870
00:49:38,800 --> 00:49:45,580
Both have cross browser sync nailed down and the latter being XbrowserSync is FOSS and

871
00:49:45,580 --> 00:49:46,580
self-hostable.

872
00:49:46,580 --> 00:49:48,200
I like that.

873
00:49:48,200 --> 00:49:54,880
So I went and took a little look-a-roo over at XbrowserSync.org and they pitched themselves

874
00:49:54,880 --> 00:49:59,160
as a solution that respects your privacy and gives you complete anonymity.

875
00:49:59,160 --> 00:50:00,160
Anonymity.

876
00:50:00,160 --> 00:50:01,160
Thank you.

877
00:50:01,160 --> 00:50:05,040
I'm not even going to try.

878
00:50:05,040 --> 00:50:06,780
And no signups are required.

879
00:50:06,780 --> 00:50:09,120
There's no personal data that they ever collect, they say.

880
00:50:09,120 --> 00:50:15,520
They say to start syncing you just simply download their XbrowserSync tool or plug-in

881
00:50:15,520 --> 00:50:17,920
and an encryption password and then you create a new sync.

882
00:50:17,920 --> 00:50:21,320
And then that's how you do it is that key you are essentially creating.

883
00:50:21,320 --> 00:50:28,200
And I had not seen XbrowserSync and I guess kind of because I got kind of burned with

884
00:50:28,200 --> 00:50:29,320
X marks.

885
00:50:29,320 --> 00:50:31,660
That's what I used to sync across all my browsers.

886
00:50:31,660 --> 00:50:33,160
It was so nice.

887
00:50:33,160 --> 00:50:40,800
Guys, if you use bookmarks and you use multiple browsers, the Strugs is real.

888
00:50:40,800 --> 00:50:44,320
I have bookmarks in Firefox, I got bookmarks in Chrome.

889
00:50:44,320 --> 00:50:50,180
It's just, it's mismatched and X marks used to keep it all in sync until one day they

890
00:50:50,180 --> 00:50:53,120
just kind of went away because everybody started building this in.

891
00:50:53,120 --> 00:50:55,880
Well, there's a couple of projects out there to solve it.

892
00:50:55,880 --> 00:50:59,800
But I wanted to say, Wes, we got an email into the old Showskies here about using GNOME

893
00:50:59,800 --> 00:51:02,720
Web or Epiphany with Firefox sync.

894
00:51:02,720 --> 00:51:04,920
Oh, you've been using it, huh?

895
00:51:04,920 --> 00:51:06,180
Super good.

896
00:51:06,180 --> 00:51:07,920
Super duper good.

897
00:51:07,920 --> 00:51:12,480
Really nice, really fast, peppy, modern browser.

898
00:51:12,480 --> 00:51:17,080
If you haven't used GNOME Web in a while or Epiphany, whatever you want to call it, you

899
00:51:17,080 --> 00:51:18,920
got to give it a go again.

900
00:51:18,920 --> 00:51:23,800
It's not going to be my primary, but it is definitely a good secondary browser.

901
00:51:23,800 --> 00:51:27,720
It handles the Google Apps fine as far as I can tell.

902
00:51:27,720 --> 00:51:29,080
Low resource usage, Wes.

903
00:51:29,080 --> 00:51:30,520
I'm telling you, it's beautiful, Wes.

904
00:51:30,520 --> 00:51:32,920
If you're on a GNOME desktop, it's beautiful.

905
00:51:32,920 --> 00:51:34,760
Just try it out.

906
00:51:34,760 --> 00:51:35,760
Just saying.

907
00:51:35,760 --> 00:51:37,240
And it syncs with Firefox sync.

908
00:51:37,240 --> 00:51:38,240
All right.

909
00:51:38,240 --> 00:51:41,520
Our next one comes in from Halvers and he writes in about gaming on Wayland.

910
00:51:41,520 --> 00:51:47,800
I recently tried using Wayland to play games on my dual monitor setup using my AMD GPU

911
00:51:47,800 --> 00:51:48,880
and the latest Mesa.

912
00:51:48,880 --> 00:51:56,360
I'm not entirely sure that this is the case, but it felt wrong, like I had massive input

913
00:51:56,360 --> 00:51:59,740
lag or something, even though my frame rates were just fine.

914
00:51:59,740 --> 00:52:02,480
Is this something that could be relevant to talk about here on the show?

915
00:52:02,480 --> 00:52:07,320
Because I'm wondering if it's just me or if I need to stay on X11 for some reason.

916
00:52:07,320 --> 00:52:10,300
With all of the work that's gone into gaming on Linux in recent years, I was sort of sad

917
00:52:10,300 --> 00:52:11,440
to discover this.

918
00:52:11,440 --> 00:52:12,440
Best regards.

919
00:52:12,440 --> 00:52:15,520
Have you done much gaming on Wayland, Wes?

920
00:52:15,520 --> 00:52:18,880
You know, honestly, most of my gaming these days is on Wayland.

921
00:52:18,880 --> 00:52:19,880
Really?

922
00:52:19,880 --> 00:52:20,880
Kind of just switched over.

923
00:52:20,880 --> 00:52:21,880
Now, I'm not a huge gamer.

924
00:52:21,880 --> 00:52:26,160
I don't play a lot of crazy difficult or intensive games necessarily, but a lot of stuff through

925
00:52:26,160 --> 00:52:30,000
Proton and just casually on the weekends or whatever.

926
00:52:30,000 --> 00:52:31,000
It's been fine for me.

927
00:52:31,000 --> 00:52:34,480
I don't have a crazy monitor setup, especially like you with triple multi orientations or

928
00:52:34,480 --> 00:52:35,480
anything.

929
00:52:35,480 --> 00:52:39,000
I've just got two monitors side by side, but I've not noticed this at least.

930
00:52:39,000 --> 00:52:46,640
Gambus or Gabmus in the mumble there, you said you're playing Gnome Wayland games all

931
00:52:46,640 --> 00:52:47,640
the time?

932
00:52:47,640 --> 00:52:53,800
Yeah, I actually, since I got my 5700 XT, I've been playing exclusively on Gnome Wayland

933
00:52:53,800 --> 00:52:59,840
and so far it's been great to the point that when I sporadically need to go back to Xorg

934
00:52:59,840 --> 00:53:05,360
and I just forget that I'm there, I immediately notice when I launch a game and because of

935
00:53:05,360 --> 00:53:11,800
tearing and stuff that doesn't work like I'm used to, I guess it just works better if you

936
00:53:11,800 --> 00:53:17,720
have like a recent AMD GPU, also I'm on Arch by the way, so that may be a thing.

937
00:53:17,720 --> 00:53:19,280
Very nicely done.

938
00:53:19,280 --> 00:53:25,120
So Halvers, you didn't say what desktop environment you're using because I've had two very different

939
00:53:25,120 --> 00:53:27,400
experiences with gaming on Wayland.

940
00:53:27,400 --> 00:53:31,120
Gaming on Wayland with Gnome Shell has been remarkably flawless.

941
00:53:31,120 --> 00:53:35,340
I think I've even mentioned on the show at one point, I was blown away because I was

942
00:53:35,340 --> 00:53:42,600
gaming on Wayland with an AMD GPU that is an eGPU, so I'm using an eGPU while X-Wayland

943
00:53:42,600 --> 00:53:49,520
is running in Wayland and I'm controlling it with a Bluetooth mouse and a wireless headset

944
00:53:49,520 --> 00:53:52,760
and everything was in sync and everything worked.

945
00:53:52,760 --> 00:53:59,120
I mean like, amazing, right, Bluetooth mouse, wireless headset, eGPU, laptop, and it just

946
00:53:59,120 --> 00:54:04,000
was great with Wayland, right, and so I've had that experience and I've also had this

947
00:54:04,000 --> 00:54:09,320
strange experience that you've had where I've had this weird delay and lag and I really

948
00:54:09,320 --> 00:54:13,440
have problems when I have two monitors on plasma.

949
00:54:13,440 --> 00:54:17,960
It seems to be that if I'm on plasma with a single monitor and on Wayland, I don't have

950
00:54:17,960 --> 00:54:22,200
as many problems, but if I'm on plasma with multiple monitors and Wayland and I try to

951
00:54:22,200 --> 00:54:27,960
game because I'm a maniac apparently, then I also experience what you're seeing.

952
00:54:27,960 --> 00:54:31,160
So you didn't say what desktop environment is, but I'm wondering if that plays a role.

953
00:54:31,160 --> 00:54:36,720
It's GNOME, so this is probably to do with, I mean, Wayland, it's weird.

954
00:54:36,720 --> 00:54:43,200
We're used to X-Org where X-Org does most of the window management and not the compositing

955
00:54:43,200 --> 00:54:49,960
necessarily but the compositor for X-Org is typically very close to what X-Org does.

956
00:54:49,960 --> 00:54:55,320
In Wayland, on the other hand, as far as I understand, the desktop environment acts as

957
00:54:55,320 --> 00:55:01,040
a compositor that in turn acts as also a window manager, so everything has to do with the

958
00:55:01,040 --> 00:55:02,040
compositor.

959
00:55:02,040 --> 00:55:06,520
So it makes sense that you will have different experiences depending on the desktop environment

960
00:55:06,520 --> 00:55:09,720
because it's practically a different Wayland implementation.

961
00:55:09,720 --> 00:55:11,560
Right, well said.

962
00:55:11,560 --> 00:55:14,880
And then one last bit of follow up before we get out of the feedback section.

963
00:55:14,880 --> 00:55:16,920
I talked before about MailSpring.

964
00:55:16,920 --> 00:55:22,100
It's a mail client that I use and it has pretty good invite support.

965
00:55:22,100 --> 00:55:25,560
It doesn't have integrated calendar, but it has some nice features.

966
00:55:25,560 --> 00:55:31,560
Overall, it's got kind of this cool slash creepy, like has somebody opened up the email

967
00:55:31,560 --> 00:55:33,880
tracking system and I kind of like it.

968
00:55:33,880 --> 00:55:36,680
It also has integration with LinkedIn, so when you're reading, when you get an email

969
00:55:36,680 --> 00:55:40,840
from somebody, if they are on a popular social network, it'll pull in some of their details.

970
00:55:40,840 --> 00:55:44,840
It is an Electron app, but it's probably one of Linux's most feature complete mail

971
00:55:44,840 --> 00:55:45,840
clients.

972
00:55:45,840 --> 00:55:49,760
It kind of had a slowdown in development recently, but the developer seems to have popped back

973
00:55:49,760 --> 00:55:52,600
up and now we have another update.

974
00:55:52,600 --> 00:55:58,640
A component of what makes MailSpring work really well is this server side sync and the

975
00:55:58,640 --> 00:56:02,920
server side sync is really staying in touch with the Google Apps account that you have.

976
00:56:02,920 --> 00:56:06,060
It's what helps do the really kind of cool slash creepy tracking.

977
00:56:06,060 --> 00:56:09,240
It's a major component of MailSpring.

978
00:56:09,240 --> 00:56:11,360
MailSpring itself, open source.

979
00:56:11,360 --> 00:56:15,120
MailSync, the server component, wasn't until this week.

980
00:56:15,120 --> 00:56:22,580
A day ago, the developer of MailSpring took MailSync GPL and now the server component

981
00:56:22,580 --> 00:56:28,200
of what is one of the better desktop Linux mail apps, right up there with Thunderbird,

982
00:56:28,200 --> 00:56:32,480
now has a GPL3 server component that you can self-host.

983
00:56:32,480 --> 00:56:38,120
It's early days still, but this has been a project that this developer spent five years

984
00:56:38,120 --> 00:56:43,120
of his sweat, tears, and blood building and now it's open source.

985
00:56:43,120 --> 00:56:44,120
Wow.

986
00:56:44,120 --> 00:56:45,120
Good to see, huh?

987
00:56:45,120 --> 00:56:46,120
Yeah.

988
00:56:46,120 --> 00:56:48,480
I mean, it's a nice little bolster for continued development.

989
00:56:48,480 --> 00:56:52,320
I think they write in that update, you know, trying to find the right balance between product

990
00:56:52,320 --> 00:56:57,680
and project and that's definitely not easy in open source.

991
00:56:57,680 --> 00:57:01,000
Makes me wonder, maybe I should give it a shot again because I've sort of just given

992
00:57:01,000 --> 00:57:03,800
up on desktop clients and I'm a webmail guy now.

993
00:57:03,800 --> 00:57:04,800
Yeah.

994
00:57:04,800 --> 00:57:07,840
I tell you, like today I was, before we got on air, I was emailing back and forth with

995
00:57:07,840 --> 00:57:12,920
somebody for something we were talking about today and it sure was nice having that on

996
00:57:12,920 --> 00:57:17,640
a desktop app because while I wanted it, I could turn on desktop notifications, it integrates

997
00:57:17,640 --> 00:57:22,520
in great with that and I could, as soon as that person got back to me, the pop-up came

998
00:57:22,520 --> 00:57:26,940
up on my desktop and I just moved over to that virtual desktop that had the app full

999
00:57:26,940 --> 00:57:30,680
screen and got right back to them and I was like, man, I'm really glad this is a desktop

1000
00:57:30,680 --> 00:57:31,680
app.

1001
00:57:31,680 --> 00:57:35,060
I could do this with a web app, but it's just not quite as nice.

1002
00:57:35,060 --> 00:57:36,180
So Mailspring, it's great.

1003
00:57:36,180 --> 00:57:40,760
Now to have both ends of it open source, now I feel a little bit more comfortable kind

1004
00:57:40,760 --> 00:57:45,120
of giving it a full-throated endorsement, whereas before I was sort of like, oh yeah,

1005
00:57:45,120 --> 00:57:48,400
but you know, there's Thunderbird, but now I'm kind of like, yeah, Thunderbird's great,

1006
00:57:48,400 --> 00:57:51,680
but Mailspring, pretty awesome.

1007
00:57:51,680 --> 00:57:57,240
And then last but not least in the show today, we have a few pics to enthrall you with and

1008
00:57:57,240 --> 00:58:02,200
I don't know, Wes, is there a theme to these pics?

1009
00:58:02,200 --> 00:58:06,240
There certainly is and it wasn't even of our own devising.

1010
00:58:06,240 --> 00:58:15,400
We just got a whole bunch of pics via email and they were all built on Rust.

1011
00:58:15,400 --> 00:58:24,480
Yeah, we have a whole batch of Rust pics and like Wes said, we didn't even do this.

1012
00:58:24,480 --> 00:58:25,680
So you did this to yourselves.

1013
00:58:25,680 --> 00:58:29,600
The first one, and I looked at the other ones pretty closely, but I didn't actually look

1014
00:58:29,600 --> 00:58:34,600
at this first one super closely, but I think it's kind of like a curl or wget clone, but

1015
00:58:34,600 --> 00:58:35,600
in Rust, is that right?

1016
00:58:35,600 --> 00:58:42,280
Yeah, so it's a HTTP clone and if you're not familiar with that, HTTP is a Python application

1017
00:58:42,280 --> 00:58:45,880
that yeah, it's sort of just like a friendly or easy curl to use.

1018
00:58:45,880 --> 00:58:49,860
You know, curl's great, wget's great, they're easy to use, they're scriptable.

1019
00:58:49,860 --> 00:58:55,040
This is a version of that same thing, you're making requests, HTTP requests, but you just

1020
00:58:55,040 --> 00:58:56,040
want it for a human.

1021
00:58:56,040 --> 00:58:58,480
It's for human workflows, you're experimenting with it.

1022
00:58:58,480 --> 00:59:02,080
I use it just about every day because I'm writing a lot of APIs and I want to test them

1023
00:59:02,080 --> 00:59:06,560
and write tests for them and give a nice easy human breakdown of what are the headers, pass

1024
00:59:06,560 --> 00:59:09,920
on JSON files, no problem, all that kind of stuff.

1025
00:59:09,920 --> 00:59:13,080
The biggest pain point for some people though is, well, it's a Python app.

1026
00:59:13,080 --> 00:59:15,160
You can't just go download a package necessarily.

1027
00:59:15,160 --> 00:59:18,280
Maybe you have to install from pip or hope it's packaged in your OS or something like

1028
00:59:18,280 --> 00:59:19,280
that.

1029
00:59:19,280 --> 00:59:23,360
Well, HT is a Rust app, so just head to the GitHub releases page.

1030
00:59:23,360 --> 00:59:29,120
And while you're there, swing over to the FDDF page, the fast dupe finder.

1031
00:59:29,120 --> 00:59:32,960
This is a small Rust command line program to find duplicate files in a directory, but

1032
00:59:32,960 --> 00:59:36,960
recursively, it uses a thread pool to calculate the file hashes in parallel.

1033
00:59:36,960 --> 00:59:42,280
So it's super quick and then it uses a thread pool to make its decisions.

1034
00:59:42,280 --> 00:59:45,560
Duplicates are found by checking the size and then the hashes of parts of files are

1035
00:59:45,560 --> 00:59:46,560
the same size.

1036
00:59:46,560 --> 00:59:50,720
I mean, it looks at them and then takes a byte by byte comparison and then tells you

1037
00:59:50,720 --> 00:59:54,820
which ones are duplicates and it does it all in the blink of an eye.

1038
00:59:54,820 --> 00:59:55,860
It's very impressive.

1039
00:59:55,860 --> 00:59:56,860
That's what I like, right?

1040
00:59:56,860 --> 01:00:00,240
And maybe you don't need this, it's kind of a niche use case, it's just a small little

1041
01:00:00,240 --> 01:00:01,240
app.

1042
01:00:01,240 --> 01:00:03,660
But if you have a file, maybe you're trying to clean up some data, you have a lot of duplicates

1043
01:00:03,660 --> 01:00:04,660
in there.

1044
01:00:04,660 --> 01:00:07,800
And I just think this is a perfect application of Rust because you get those, you know, those

1045
01:00:07,800 --> 01:00:11,240
nice reasonings about concurrency and parallelism, about data safety.

1046
01:00:11,240 --> 01:00:15,760
So you can do some complicated algorithms, implement them well and still end up with

1047
01:00:15,760 --> 01:00:17,280
a tight little binary to run.

1048
01:00:17,280 --> 01:00:18,400
Yeah, word to your mother.

1049
01:00:18,400 --> 01:00:22,400
And also it could be just a simple tool to just go through and find like duplicate files

1050
01:00:22,400 --> 01:00:23,400
or for photos.

1051
01:00:23,400 --> 01:00:26,160
Like say you took a bunch of photos and then you brought you imported them and you got

1052
01:00:26,160 --> 01:00:27,160
some duplicates.

1053
01:00:27,160 --> 01:00:28,160
I know I've done that.

1054
01:00:28,160 --> 01:00:29,200
It could be useful for that.

1055
01:00:29,200 --> 01:00:35,360
But clear the decks because the best we saved for last, we talked about bash top, we've

1056
01:00:35,360 --> 01:00:39,800
talked about pie top, we've talked about bpy top, we've talked about go top, we've talked

1057
01:00:39,800 --> 01:00:42,840
about a lot of top replacements.

1058
01:00:42,840 --> 01:00:45,200
And they always seem to be trying to top each other.

1059
01:00:45,200 --> 01:00:49,760
But when somebody came and wrote one for Rust, they took the other route.

1060
01:00:49,760 --> 01:00:50,880
They took the bottom.

1061
01:00:50,880 --> 01:00:55,320
And that's why this application is called bottom, yet another cross platform graphical

1062
01:00:55,320 --> 01:00:58,920
process and system monitor for your terminal.

1063
01:00:58,920 --> 01:01:00,280
And it's, it's awesome.

1064
01:01:00,280 --> 01:01:05,200
It supports Linux, Mac OS, and even Windows.

1065
01:01:05,200 --> 01:01:08,900
It seems like it's primarily inspired by G top and go top.

1066
01:01:08,900 --> 01:01:11,760
And I of course, put it on my system, and I love it.

1067
01:01:11,760 --> 01:01:15,200
It's so fast and it's got pretty nice mouse support.

1068
01:01:15,200 --> 01:01:18,160
I didn't even realize that but here I was playing with it while you were talking and

1069
01:01:18,160 --> 01:01:21,720
started just scrolling on my you know, just on the trackpad here and it scrolls all you

1070
01:01:21,720 --> 01:01:24,800
can scroll on the graph and change how long of a period you're looking you can scroll

1071
01:01:24,800 --> 01:01:27,520
through the list of processes or temperatures of the sensors.

1072
01:01:27,520 --> 01:01:28,520
Awesome.

1073
01:01:28,520 --> 01:01:29,520
Wow.

1074
01:01:29,520 --> 01:01:30,520
That's cool.

1075
01:01:30,520 --> 01:01:34,280
I totally didn't that is really useful to be able to scroll through the processors there.

1076
01:01:34,280 --> 01:01:35,440
That is really nice.

1077
01:01:35,440 --> 01:01:39,320
They've also got a really rich read me a lot lots of documentations in there, which clearly

1078
01:01:39,320 --> 01:01:40,600
I haven't read yet.

1079
01:01:40,600 --> 01:01:52,460
But if you're looking for a new top, this is a good contender.

1080
01:01:52,460 --> 01:01:57,160
Before we go, I just want to say thank you to our unplugged core contributors unpluggedcore.com

1081
01:01:57,160 --> 01:02:02,080
you keep in the show independent you get that limited ad feed or the full uncut feed.

1082
01:02:02,080 --> 01:02:07,480
All the pre post show like additional show stuff super, super content show.

1083
01:02:07,480 --> 01:02:14,780
Both feeds are available to our members unpluggedcore.com Thank you everybody.

1084
01:02:14,780 --> 01:02:19,400
Also I want to mention that a cloud guru has a course to help you get networking figured

1085
01:02:19,400 --> 01:02:20,680
out on Linux.

1086
01:02:20,680 --> 01:02:24,160
You ever had that where you've had to troubleshoot a networking issue or something like that?

1087
01:02:24,160 --> 01:02:25,880
Well they have a course every day.

1088
01:02:25,880 --> 01:02:29,840
Yeah, they have a they have a course that'll help you feel comfortable and working with

1089
01:02:29,840 --> 01:02:35,120
large variety of different networking tools and configurations and help you manage complex

1090
01:02:35,120 --> 01:02:37,480
Linux network implementations.

1091
01:02:37,480 --> 01:02:41,200
We'll have a link in the show notes for that or you can go to cloud guru.com get good way

1092
01:02:41,200 --> 01:02:45,680
to learn tools like TCP dump Wireshark and a lot more so check the link in the show notes

1093
01:02:45,680 --> 01:02:52,000
if you want to learn deep if you want to go all in on Linux networking and then a pro

1094
01:02:52,000 --> 01:02:54,040
tip before we get out of here.

1095
01:02:54,040 --> 01:02:55,100
Join us online.

1096
01:02:55,100 --> 01:03:00,260
The conversation keeps going at Jupiter broadcasting.com Telegram we have our matrix server info our

1097
01:03:00,260 --> 01:03:06,640
mumble server everything is at Linux unplugged.com and there's an entire network of fantastic

1098
01:03:06,640 --> 01:03:14,600
podcasts that can be found at Jupiter broadcasting.com and just a reminder coder 400 is just around

1099
01:03:14,600 --> 01:03:15,600
the corner.

1100
01:03:15,600 --> 01:03:20,440
Big one West was there live so here he already knows he already knows how exciting it is

1101
01:03:20,440 --> 01:03:24,080
secrets but you're gonna this is not a coder to miss.

1102
01:03:24,080 --> 01:03:25,080
I don't think so.

1103
01:03:25,080 --> 01:03:26,080
I don't think so.

1104
01:03:26,080 --> 01:03:28,700
And why why miss a live production of this show?

1105
01:03:28,700 --> 01:03:30,920
We make this here podcast every Tuesday.

1106
01:03:30,920 --> 01:03:37,840
Join us live at 12 p.m. Pacific 3 p.m. Eastern see you next week same bad time same bad station

1107
01:03:37,840 --> 01:03:44,360
contact page subscriptions all of that info at Linux unplugged.com go there to get all

1108
01:03:44,360 --> 01:03:49,000
of that even if you can't make it live we still appreciate you downloading this podcast

1109
01:03:49,000 --> 01:03:52,480
and we always appreciate it if you can share it's a great way to contribute to the show

1110
01:03:52,480 --> 01:03:56,780
even if you can't do it monetarily you can still share the show somebody that's absolutely

1111
01:03:56,780 --> 01:04:01,720
free and it turns out to be the number one way podcasts get marketed when you think about

1112
01:04:01,720 --> 01:04:05,880
it it's a big ask to listen to like an hour plus show so if somebody you trust tells you

1113
01:04:05,880 --> 01:04:08,760
to listen to it it makes a big difference and that's a great way to support the show

1114
01:04:08,760 --> 01:04:13,340
is we're nearly to 400 ourselves thanks so much for joining us on this week's episode

1115
01:04:13,340 --> 01:04:17,040
of the unplugged program and we'll see you right back here next Tuesday

1116
01:04:43,340 --> 01:04:57,720
all right initiate intense jealousy mode Dalton already has a pre-order for a Starlink kitten

1117
01:04:57,720 --> 01:05:03,840
what the hell didn't those just come out yeah six hours ago um they opened pre-orders

1118
01:05:03,840 --> 01:05:08,920
so it's like well I got nothing to lose I want one where do I go uh the Starlink website

1119
01:05:08,920 --> 01:05:12,660
you can do an order now I'm gonna do it I really think this would be a game changer

1120
01:05:12,660 --> 01:05:16,480
for me I feel like this would be a significant game changer yeah I'm paying like 200 bucks

1121
01:05:16,480 --> 01:05:25,040
a month for maybe 40 megabits per second down so yep yep yep Starlink is gonna be life-changing

1122
01:05:25,040 --> 01:05:29,920
for me see when I go to their webpage though it's just the same old same old same old that

1123
01:05:29,920 --> 01:05:34,360
I've already filled out before I think uh it says ordered the button has changed to

1124
01:05:34,360 --> 01:05:40,800
order now hasn't it oh you're right oh my god oh this is very exciting I'm gonna go

1125
01:05:40,800 --> 01:05:44,860
fill it out when you go through the order now process do they mention anything about

1126
01:05:44,860 --> 01:05:51,840
the ongoing play cost after you've ordered the kit yes 100 a month well 99 whatever okay

1127
01:05:51,840 --> 01:05:58,080
which is so much cheaper than what I pay for like LTE connections and whatnot six LTE connections

1128
01:05:58,080 --> 01:06:03,600
yeah I was gonna say Chris you're probably paid what three or four hundred yeah I uh

1129
01:06:03,600 --> 01:06:11,800
I actually just spent about 95 hours in the woods off grid and it was fantastic oh it

1130
01:06:11,800 --> 01:06:16,620
was wonderful the only thing that really kind of went sideways is that there's like a polar

1131
01:06:16,620 --> 01:06:20,960
vortex as they call it coming into the Pacific Northwest and so the temperatures are going

1132
01:06:20,960 --> 01:06:25,420
down to like negative eight in the area that we were at and so it started to snow Sunday

1133
01:06:25,420 --> 01:06:29,720
night and Monday morning we woke up and we looked around and we thought yeah we better

1134
01:06:29,720 --> 01:06:33,840
get out of here.

