I hope you saved up your Bitcoin, Wes, because Tim Berners-Lee, the creator of the World
Wide Web, is auctioning off his initial source code as an NFT.
Of course.
Nice, right?
I mean, 9500 lines of code of basically the original building blocks for the HTTP protocol
and HTML and the Universal Document Identifier, aka the URI.
It's all being bundled up in one nice, expensive package.
Yeah, you also get an animated visualization of the code and a digital quote-unquote poster
that is quote-unquote signed by Berners-Lee via a graphic signature.
There's also, more interestingly to me though, a take-home letter written by Berners-Lee
in which he reflects on the code and its creation.
Okay, okay.
That might actually be a little bit of history right there.
Yeah, no, I'm just totally getting hung up on the whole NFT thing.
This is wild, what's happening.
I mean, this feels like sacred stuff, but I guess it's kind of cute.
You're getting like a keepsake in a way, a very, very expensive personalized keepsake.
Bidding opens at $1,000 on June 23rd, and the auction will run online until the end
of the month.
So, you know, like I said, get your Bitcoins ready.
It's going to be spendy because it starts at $1,000.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Wes.
I see you're wearing your nostalgia pants today.
Smart move.
I don't know if I mentioned, they're also chaps.
Of course they are, Wes.
You wouldn't go anywhere else.
This episode is brought to you by the all-new Cloud Guru, the leader alerting for the Cloud
Linux and other modern tech skills.
And of course, there's thousands of hands-on labs.
Get certified.
Get hired.
Get learning at a cloudguru.com.
Coming up on the show today, we're living up to our episode number.
It was inspired by one of our virtual love members, Colonel, he said, you know, have
you ever looked up what error code 410 is?
Which it basically just means gone.
What you're looking for here is gone.
And that set the theme for today's episode.
We're going to look at great Linux distros that are no longer with us.
The distros that shaped Wes and I into the Linux users we are today.
So put on your nostalgia pants with us and go back in time because it is a wild ride.
I thought when we got into this, this would be mostly be an exercise in checking out old
and busted software.
And some of these pack surprising features.
In fact, one of the distros I checked out from 2004 has features that just recently
landed in Ubuntu.
But first, with the powers vested in me, I declare a retro time appropriate greetings
to our virtual log.
Hello, Mumble Room.
Hello.
Hello.
Hello.
Hello.
Hello, everybody.
It is good to see you.
In fact, I'd love to be able to see some of you soon in person.
I don't know if you felt it in the wind.
But a JB road trip approaches an epic road trip of a scale like we've never done before.
A quest for our people to reunite a mini JB team reunion.
It can't yet be the full team, but a mini team reunion is happening in August.
And during this, we'd like to have dinner with you.
So right now, we are making plans for two meetups in the month of August.
The first meetup will be in Salt Lake City, August 7.
The second meetup will be in Denver on August 20.
Links to both meetups will be in our show notes.
They are now up on the Jupiter Broadcasting meetup page.
If you are interested in going to either one of these, please consider letting us know
by joining that meetup because, for example, really, if no one really signs up for Salt
Lake City, we probably would just not route to Salt Lake City.
But we have a crowd down there.
And we had promised to return to Salt Lake City because we missed it once in the past.
And there is a pretty big Jupiter Broadcasting crowd down there.
And we're going to try to do it safe.
And we're going to try to meet up again and start connecting with our community.
And we will be hosting an event.
We'll have more details as they come together on the meetup page because it is a bit away.
But we wanted to lock the dates in.
So the first one, Salt Lake City, August 7.
And then the second meeting with meetup will be in Denver on August 20.
And of course, if anything changes, we'll definitely reflect the changes on the meetup
page.
That's the beauty of it.
And we'll keep you guys kind of in the loop via the show, too.
But details and nitty gritties will be on the meetup page.
And I am just elated at the opportunity for members of the team to get back together again.
We have plans for content production, special editions of shows that will be on the road.
All of it's still in the works.
And of course, we're following all the news and safety stuff very closely and trying to
make sure we do the right thing there.
And so all of it's got to remain flexible.
We've learned that over the last year and a half or so, two years.
But that's in the works right now.
And details will be linked up in the show notes at linuxunplug.com slash 410.
And Wes Payne, are you going to bring the dogs out to Denver or are they going to have
to stay home?
Oh, you know, I'll have to think about that.
It might depend on how I get there.
But I'm excited already.
And you know what?
We're telling you now so you don't have an excuse not to join us if you can.
The first day you and I arrive, so as we have to plan for this schedule wise, we're doing
a Linux unplugged in Denver.
Oh, boy.
Of course.
You know, that's kind of stressful when I think about it.
But I guess, see, my plan is I'm taking Lady Joops out there.
So I will bring equipment for you and I to record with me.
So you don't have to worry about that.
You gentlemen.
Joops is right now in the shop, getting a bunch of work done to fix like my slide failure
that I had on my last road trip to get her ready for this Colorado trip.
So we're going to leave Washington, go down through Salt Lake City, and then up to Denver.
And I'm going to attempt to get the Lady Joops tracker going again.
So if people want to do a meet up along the way when possible, we'll try to arrange that
as well.
So more details to come.
But I wanted to get it out early while we had it.
Now it's kind of appropriate today that our first community news item features a piece
of software that I have some real nostalgic connection to.
And that is Pidgin.
Pidgin is a chat program that lets you log into accounts on multiple chat networks from
one app.
And it means you can chat with your friends that are on, well, back in my day, it was
AOL Instant Messenger and an IRC at the same time.
And Pidgin, I first started using game.
I moved to Pidgin.
And it is one of those apps that has played a huge role in my use of the Linux desktop.
And today, the primary developer, Gary, help me with your last name.
Is it?
Well, help me with the last name so I don't embarrass myself.
It's Kramlich.
Gary Kramlich, also known as Grim Online, joins us to talk about what quite bluntly
is probably one of the more destructive trends that could begin to happen to free software.
And I think is easily one of the worst grifts to ever happen on our community.
And it's horrible.
And Gary, I don't even really know where to begin with this story.
From my perspective, what we have here is something that is probably a trend that's
going to continue and get worse.
Can you explain to everyone the highlights of what's happening to the Pidgin project
right now?
Sure.
So on June 1st, I got a tweet from a follower, or I got a mention on Twitter from a follower
from a company named Zero Diem that posted a bounty for a remote code execution bug in
Pidgin and they were offering up to 100,000 US dollars for it.
We had to do a bunch of research because we didn't really know what Zero Diem was.
And it turns out they're an exploit broker, which the way I like to put it is that they're
basically a digital arms dealer.
So what they do is they put bounties out on open source projects to find bugs in them,
and then they pay people for those exploits, and then they sell those exploits to people
that want to use them.
In this case, their customers are typically governments located in North America and Europe.
That's a disturbing thought.
So they're offering a $100,000 bounty for a zero day exploit on Windows or Linux in
Pidgin, and the extremely sad reality is that $100,000 bug bounty for that one bug is more
than the project was able to raise, I would imagine, in multiple years.
Yeah, definitely.
For the past two years, I've actually been working on Pidgin full time, and that started
with me going through savings, and I blew through that pretty fast, obviously.
But then last year, I was able to raise $25,000 for the project, and now all one person has
to do is find a bug in my work and they get four times as much money as the entire project
got in a year.
Yeah, and they're not necessarily going to disclose this bug.
In fact, it's not worth the value to them because if they're offering a bounty of 100,000,
they can sell it for more than that, and they're not going to turn around and give you a bug
report on what gets submitted to them.
They don't want it fixed.
Right, exactly.
That's one of the huge parts, and the other thing I want to note too is they're not necessarily
stopping at one bug, right?
They're looking for as many as they can because they don't want us to fix it.
Right, they'll take multiple submissions.
Right, exactly.
So, when we first heard about this, I went through and started running every single static
analysis tool I could, and we pushed out a release in two days to fix tons of stuff that
the scan built as a tool out of Clang, what that found, and stuff like that, but it's
like we're now getting into fuzzing and stuff like that to try to find other issues that
we can fix that aren't as obvious or found by static analysis.
Yeah, but geez, what a cat and mouse game that is, and again, it's not like these things
don't need to be fixed, but at the same time, the project needs to be able to prioritize
what it's working on, and so this, I imagine, is going to consume essentially all of your
development time.
It's not going to do all, but it has consumed a lot of it.
The one benefit is the bounty is only open from June 1st to August 31st, so there is
a light at the end of the tunnel, but that's still three months of development that is
completely messed up because of this.
I think my concern here, if you'll excuse the pun for Pigeon, is you are a canary in
the coal mine, and that this could become a new form of patent trolling on free software
projects that don't have the infrastructure to fight this.
If Zerodium went after a commercial chat program like Slack, Slack at least has lawyers, and
they could issue non-disclosures, they could fight to shut this down, they could make a
big stink.
Free software projects don't have those kinds of resources to fight like that, and so they're
essentially just left to be picked by vultures, and when we go over all of the things in the
history of this show that can lead to free software developer burnout, this just seems
like a big number one at the top of the list if this starts taking off more.
That's a very, very fair point, but I will point out that we are a very interesting open
source project because we have been litigated against in the past.
That's one of the reasons why the name changed, right?
And we do have a non-profit legal entity above us to deal with this stuff, but how do you
even start?
They're a private company, they're not necessarily doing anything wrong or illegal, right?
Right.
They don't even have to notify you, you just found out because somebody pings you on Twitter.
Right, exactly.
So is there a legal basis for us to try to stop it?
I don't think so, but again, I'm not a lawyer, right?
And there's no way for you to get them to release the information that they do get.
You just have to hope that in your efforts you discover the same bug and fix it.
Right, exactly.
And you imagine this must be happening at a much wider scale and people aren't just
brazenly talking about it on Twitter.
I mean, Zerodium themselves directly tweeted this.
They have this directly posted on their website at zerodium.com slash temporary.html.
They have it right there publicly.
They're not trying to hide it.
Others may not be so overt about it.
This may be a bigger problem than we realize, especially just how brazenly they seem to
be able to operate.
And I'm wondering what's next.
Are you hoping to just hunker down, fix every bug you can, and ride this out until this
window closes?
Regardless, as you mentioned, people are going to be doing this stuff all the time.
Our biggest concern is, of course, our users.
There's a lot of people that were joking around like, oh, I know how to fix the problem.
Just release with a zero day and then fix it and claim the bounty.
And fund the project for two years.
Right.
That would be great.
But morally and ethically, I don't think so.
But the other concern is there's so much going on.
Like I said, our biggest concern is making sure our users are safe.
So while the governments or whoever might be targeting a specific person, this puts
every single user at risk.
And we're not going to sit here and let all of our users be at risk.
Yeah.
So Gary, if there's somebody in the audience who feels like they may be in a position to
help you, what's the most efficient way for them to get a hold of you to try to do that?
Being the developer of a universal chat client, I am essentially everywhere and nowhere.
Including the Jupiter Broadcasting IRC chat room.
Yes, exactly.
There you go.
And on top of that, I'm also in the Jupiter Broadcasting Telegram and Matrix and everywhere
because universal chat clients.
But the easiest way is to find our contact form on Pigeon.im.
You can find a bunch of ways to contact us there.
Okay.
My heart really goes out to you guys because this project, you know, it's a beloved piece
of software and it is such a shame.
It feels like the cheapest, lowest grift possible.
This zero idiom company doesn't even find the exploit themselves.
They pay other people and they sell it as a middleman and then they just devastate free
software projects in their path.
And I appreciate you being willing to come on and talk frankly about all of this.
So that way our audience can be educated about it because there's some that are not able
to talk about it or they're in a different position.
So I hope this goes okay.
And I'd love an update when you have, if you have something that comes up and just want
to ping me and just let me know so I can give the audience an update.
All right, we'll do.
Sounds great.
And thank you for the opportunity to talk to everyone.
Yep.
Yeah, I am.
I am really sad to hear this.
But thank you.
Thank you for all the hard work and thank you for fighting this.
No kidding.
Let's see the parts of open source development no one tells you to expect when you get into
it.
Yeah.
Yeah.
So let's talk about something that's really great to see.
And that is that in Linux 514 when that ships, it will have mainline support for the Raspberry
Pi 400.
Now you recall that is the device that launched in last November as a full Raspberry Pi computer
inside a keyboard.
And I got one and I actually was extremely impressed.
In fact, I think it should be the Raspberry Pi for most people because you just plug in
an HDMI monitor and an Ethernet if you want, you're good to go.
It's a great little device.
And beginning with Linux 514, it looks like everything's just going to play fine right
out of the box with a vanilla kernel.
Yeah.
If you don't recall, the Pi 400 costs around $100 US greenbacks.
But you get a keyboard with a Raspberry Pi built in with four gigs of RAM, a 1.8 gigahertz
quad core Broadcom processor, 16 gigs of storage and crucially, as Chris hinted at there, enough
ports and peripherals to have a fully working computer with just a monitor.
But you're not sacrificing on the Raspberry Pi side.
You're just getting extra.
It feels like a more finished product where the Raspberry Pi feels like a Tinkercad.
And I guess that's a good differentiator, too.
If you want something that's a finished product or the person you're giving it to, maybe they
need something that's more of a finished product.
And everybody that I showed was so impressed that an entire keyboard, a computer was in
the keyboard, like they'd never seen anything like it before.
And I'm like, OK, I guess it's cool.
But they were like, wow.
And I guess now that you're going to have just vanilla 514 support, which means any
distro that uses 514 or later in the future, you can just run on that.
It's nice to see that.
It's kind of a bummer, I guess, that we haven't had it there already since it's been out for
a bit.
But it takes a long time for these kernel versions to filter out to people anyways.
Yeah, that is true.
It's a bit strange because it didn't take that much work to get here.
There wasn't a new kernel driver or anything fancy.
I mean, there was some some new device tree additions specifically for the Pi 400.
But that was just some updates to change the clock speed, use a different Wi-Fi chip and
how power handling worked like it's a pretty small update.
But we've got to know.
Well, we're talking 514.
My favorite file system, XFS, is getting a nice boost.
Feronix Michael Arboman, he covers this stuff like a machine.
He likes XFS almost as much as you do, I think.
Yeah, I think it does.
I think you're right.
I had a big patch series that was sent out by Red Hat is queued for merging in the 514
cycle.
And it's great to see it because there's a lot of scalability improvements in there for
those of us that want to take XFS to bigger and larger things.
Yeah.
How do you like seeing transaction rates go up from around 700k to 1.7 million commits
per second and a reduction in flush operations by two orders of magnitude for metadata heavy
workloads anyway?
You know, Wes, I know how important those flush operations are to you.
I know you got to keep things clean in your file system.
It's complex, difficult to understand and full of tricky stuff.
So that's why I'm really grateful that Larbal went and dug through some of this.
But it looks like we're getting now this into a nice, simple, more usable path.
It's taken a long journey and it has, he's followed it.
It's gotten cleaner and more consistent looking, more compact looking, like faster code and
all of that.
So it's getting to a really good spot now.
I think it's a win win win here where we get a shiny new 514 relatively soon, cleaner code
and better performance.
Man, with ButterFS, ZFS and XFS, I actually I could really see a use case for each one
of those in a disk in my system that makes me want to build like the ultimate Linux storage
box.
Sorry, not sorry, EXT4.
Linode.com slash unplugged.
Go there to get $100 in credit for 60 days on your new account and you support this here
show.
You make it possible for us to do this here podcast and you get $100 in credit on Linode.
It's a great deal.
Linode is our hosting provider for everything we've built in the last couple of years.
Their infrastructure is solid.
It's fast.
It's flexible and you can focus on your project, not your infrastructure.
I also encourage your notes if you want to send them in on your experiences of trying
out Linode.
A listener wrote in to me just the other day and told me that he did a little head to head
with AWS and Linode and Linode's pulled ahead again in performance like they do.
I love getting those kinds of notes and you get 11 data centers to choose from and every
service level is backed by the best customer service.
So if you get a $5 a month rig or you get some fancy AMD epic CPU thing with all this
storage and CPU and compute, you're going to get really great customer service.
I just spun up a machine and what was it?
Just last episode we talked about file run.
I think it was two episodes ago.
It was really recent.
Yeah, we just spun that thing up.
Yeah.
It's a, how would you describe it Wes?
Like it's got user permissions.
It's a file manager in your web browser.
Yeah.
You want like a quick web UI to expose and interact with your file system.
All the stuff you might get on a local system, but exposed over the internet.
And it's really straightforward for people to adopt that just need to exchange a few
files.
We're helping the elementary OS guys get ready for their EDW that's coming up very soon.
And they needed a way to exchange files with participants.
And so we stood that up on a Linode for them and made it really easy for them to get access
to it.
And we thought about other solutions like file sync solutions and standard SFTP and
things like that.
And this was really the most straightforward for everyone and just got them collaborating
immediately.
And Linode makes it so simple.
I deployed the one click Docker system.
You get a couple of distro options when you do that.
I chose Debian.
So I just went with Debian and I hit the one click deploy.
That got all the base system configured, running Docker, good to go.
And then within a couple of minutes, I grabbed the project's Docker compose file, changed
the variables to meet our, you know, our setup needs and fired it up.
It took less time getting this new Linode file exchange box ready to go than it did
for the DNS to change over.
It's really efficient.
You can get in and get your project up and running in an impressive amount of time.
And you can really get in there because the dashboard makes it possible to get down to
the details if you really want or to keep it simple if that's your preference.
So go check them out.
Linode's been around since 2003, every step of the way, making Linux on virtual machines
excellent.
They're dedicated to it and the dedication to Linux is baked into the product as well.
And that resonates and that makes me really comfortable recommending them to you guys.
So head over to linode.com slash unplugged, get that $100 in your account and try out
all of the stuff we've been talking about.
Maybe just go learn something for a little bit or experiment with a distro you've never
tried up on some seriously fast hardware.
There's only one way to start and that's at linode.com slash unplugged.
And now a little bit of housekeeping before we move on.
You heard me talking about meetups or anything really that we mentioned on the show.
If you want more details, you can always hit up our telegram.
There's usually somebody from our community that can answer or one of us is in there that
can answer.
You can find that at Jupiter Broadcasting dot com slash telegram and also your emails.
Keep them coming.
I've been I've been trying to work in a new workflow with emails, so it's a great time
to send them into the show.
I'll just put it that way.
Linux unplugged dot com slash contact to get your emails in here.
And you heard me mention the meetup page.
We should probably give you that URL, too, so you can join us in Salt Lake City or Denver.
That's at meetup dot com slash Jupiter Broadcasting.
Really easy, really simple.
You can find all the details over there and we'd love to see you.
And now, Wes, we go back in time to distros of past.
You and I wanted to kind of experience classic Linux in a way that we haven't felt or seen
in a really long time.
And one of the unique opportunities is a lot of this stuff can be found online and you
can get it running either in a VM or on a piece of hardware.
But then several awesome members of our community stepped up and also provided us with some
ISOs that we were having a hard time getting our hands on from their personal archives,
no less.
Yeah, nerds.
It's awesome.
Do you want to start with Ubuntu 606 just as kind of a baseline?
Because that's where our intro music there just came from.
And it was kind of the first Ubuntu while Ubuntu is still around.
We wanted to set this baseline here and then we're going to talk about distros that are
truly long and gone.
Yeah, I was harkening back and trying to remember what was the first Ubuntu that I actually
used seriously, you know, like day to day.
And it must have been 606 LTS Dapper Drake.
And what a release.
As you go through on Wikipedia and you look at some of the, they've got a great series
of collection of screenshots sort of showing Ubuntu's evolution over the years.
And 606 is where it really starts feeling maybe not modern, but something you immediately
recognize as Ubuntu.
And it got a lot of its, you know, things that we now take for granted in there, like
a network manager that was able to easily switch between wired and wireless has that
for modern.
What a luxury, Wes.
What a luxury.
You mean you don't have to do that at the command line anymore?
I know.
It also kind of stood out to me because already by that time, Ubuntu had a reputation for
working well on desktops, right?
It kind of came out and was like, hey, we're making Debian, we're taking that great collection
of packages, we're simplifying it down, we're making it more human so that if you're new
to all this, you don't want to deal with the command line as much.
We've got that option.
But at the launch, Mark Shuttleworth noted that in 606 LTS, they had worked to bring
that same ease of deployment and configuration to the server.
And so I think 606 also sort of marks not the dominance part, but the rise, the start
of rise of Ubuntu starting to take over the server.
Yeah, absolutely.
And at that point, their influence in a way in the rest of the desktop space was positive
because it encouraged distribution makers to slim down the amount of software packages
they were including.
So early on, you'd have three email clients and four web browsers and three terminals
and just crazy because why not have it all, right?
And internet connections were slow and so you didn't want necessarily to force people
to download stuff.
So you just load it right off the CD, you know, have at it.
The CD is there.
You can have four or five CDs, who cares?
And they just loaded distros up and Ubuntu changed that.
They set a different tone.
Yeah, you could get software off the internet if you wanted.
Now, of course, it does still support the CD and that was a retro thing.
I noticed right off the bat as it detected, I still had the ISO in there and was like,
oh, hey, do you want to use that to install some software, which, yeah, I did.
I got a open office early version going, which was pretty nice.
I was also impressed already by the installer.
It still had a lot of the same features that had that map to pick your time zone.
And if anything, it was more pleasant than modern day.
Sure, it couldn't do as much partition wise, but it was so simple.
Mmm, quick, very quick.
All of these old interfaces are very quick.
I'm just gonna say that right up front so that way we don't have to repeat it over and
over again.
They were stupid fast and they were simpler, but they were stupid fast.
OK, now we're going to talk about distros that are no longer with us and that were very
special.
And I have to start on sacred ground.
I know this is a very special distribution to a lot of you.
Stay a while and listen, Mandrake Mandrake was created in 1998 with the goal of making
Linux easier to use for everyone.
Mandrake was my first Linux love.
I dated Red Hat and Debian on and off a couple of times for a while.
I deployed a Debian server here, a Red Hat box there, tried out something every now and
then in the computer lab, but it wasn't really clicking for me in the desktop space.
But with Mandrake, with Mandrake, I fell in love and we moved in together.
Version 10.1 was their last release before this long saga of transformations and transitions.
It required a partly 32 megabytes of memory.
That's all it needed.
If you wanted some graphical features, they recommended 64 megabytes of RAM.
And Mandrake had a few standout features that other distributions did not have.
And throughout this process, I had an opportunity to try them again.
And they really kind of hold up for most of the some of them are no longer required like
the X11 config stuff, but some of them very much hold up.
And by the way, I will have links in the show notes for a visual tour of Mandrake.
I took screenshots of some of my favorite moments when I was revisiting Mandrake.
And if you're an old Mandrake user like me, you may want to go check it out because I
didn't know what to expect, honestly.
Maybe it was my mood.
I don't know.
I thought I was going to be a little bit disappointed.
I thought I was going to feel a little old and busted, you know, old KDE 3.
It's like playing an old video game or watching an old movie, reading a book you read as a
kid.
They never quite hold up the same, right?
Yeah, exactly.
Be like watching, you know, favorite old movie that just didn't hold up exactly.
And it was quite the experience.
The moment grub came up on the screen with the with the Mandrake theme immediately felt
nostalgic.
I immediately triggered the feels.
Then the boot splash came up and it immediately triggered the feels.
Every step was like I couldn't believe how wired those moments were in my brain because
I haven't thought about those things.
I haven't pictured those things in years.
And then the moment I saw them, it all just came flooding back.
And so 10.1 was a special, special kind of peak Mandrake, in my opinion.
It had Drac Conf, which was a great way to configure multiple aspects of the system.
I'll talk more about that in a moment.
And it had URPMI.
This was the magic that made me fall in love.
It's a wrapper around the RPM package manager, which back in the day, in the late 90s, early
2000s, RPM was rough.
You had to manually resolve your dependencies, you had to go hunt stuff down.
It was called dependency hell and URPMI solved it, essentially turning RPM into apt.
You could search package repos.
You could update your package list, add new repos, which was just an awesome concept at
the time.
It just did stuff other RPM distros could not do, but maintain compatibility with a
lot of the big RPM distros.
It really also had some of the best theming.
It had just these beautiful blues that still just really pop.
The installer is clean and simple and always was.
I mean, having to configure your X settings is always a bit dodgy.
And it just is a classic experience of Linux.
Like when you boot up, it reads out your BOGO MIPS score and tells you how fast your computer
is in BOGO MIPS.
Which I haven't said BOGO MIPS in years, and it used to be like how we measured everything.
And this thing's packing Linux 2.68.
Your whole system, Wes, will crash if you boot it on a dual core system, but you don't
select the SMP kernel.
Remember when you had to do that?
Of course.
Wow.
I mean, you had to be more familiar with your hardware, that's for sure.
Yeah.
But you know, when it didn't work, when X didn't work, I was able to run dracconf on
the command line, which I got screenshots of this, and configure my X11 settings and
save them.
And then just ran init level five, and my desktop loaded right up, and I was back up
and working.
And I have not used dracconf in 100 years, and I was able to fire that thing open and
resolve my ancient Linux problems within a minute.
And I'm just sitting there going, you know what, this tool still holds up.
It's still a good tool.
When you first log into the Mandrake desktop, because this is towards the end of their run,
you get hit with like this long survey that wants to ask you about your Linux experience
so they can try to figure out who you are.
Then you get a pitch to join the Mandrake club, which I was a member of, I will admit.
The Mandrake club is a website that's dedicated to Mandrake users.
They write, signing up for membership brings you exclusive benefits, exclusive access to
forms, exclusive RPMs, product downloads, and discount on Mandrake Linux products and
much more.
And then they pitched the Mandrake online service, which is the latest service provided
by Mandrake soft.
It allows you to keep your computer up to date through centralized automated service.
Yeah, they tried.
They tried.
But KDE 3, you know, it was a classic look back then.
It doesn't quite hold up.
That doesn't look so great.
They had neat things in dracconf, like security audit tools that would check various aspects
of your system to see if they meet standards.
They had backups and restore in dracconf, which it's really nice to have your distribution
solve that back in the day.
They had weird things to like configure your desktop was an entry in the menu bar.
And that opened up KDE 3 system settings, but configure your computer.
So not configure your desktop, but configure your computer would open up the Mandrake Linux
control center.
I guess just I guess that makes sense, but only because I understand how Linux desktops
put together.
Otherwise, that would be so confusing.
That's sort of like one of those things at first when you haven't used it in 100 years,
you look at it and you go, which one do I?
Oh, okay.
Yeah, right.
I'm configuring the entire computer and then you get software update wizards and stuff
like that.
But, you know, when you look back at what it took to get Linux up and running, I can
see why Mandrake with URPMI and dracconf was such a winner.
And when I was talking on social media and on Telegram and whatever, when I was just
mentioning online that we're doing this and asking for ISOs, so many people told me that
Mandrake was their first Linux love and it was nice to visit it and not be disappointed.
I felt like it really was pretty great.
I think the UI looks a little dated, but my next distro was a totally different experience.
But I'd like to hear about your experience with damn small Linux first.
It's so small.
Remember the business card live CD?
That's the whole pitch for that.
Yeah, really.
Like you can fit this stuff on a 50 megabyte live CD.
Now you have to find yourself a CD ROM drive, so I went virtualized on this one.
Yeah, yeah, sure.
But it really is quite impressive.
Now for some history, it had been around for a while, but kind of stopped development in
2012.
So I checked out the latest RC from that just to see what would have the next and last greatest
version of damn small Linux.
What might it be?
And it's kind of interesting because you can tell they've had to keep some of the system
intact.
Like it's still shipping a rather ancient kernel for that time, kernel 2.4, maybe.
Maybe it was 2.6.
Either way, quite old, but there were some modern applications like Firefox.
And despite the UI being, I don't know, unique, how would you describe it, Chris?
Oh, man, not even retro.
Like the most bare bones UI you could have that still like functions as a modern paradigm
of a desktop, I think?
Yeah, I think, yeah.
It's it's it's that it is that it is barely that it is something I mean, you can really
tell they were trying to keep that size down, but it's quite functional.
I spent I don't know, most of an evening just trying to get as much done in damn small Linux
as I could.
And besides not being able to resolve most websites with SSL because it's just too new
of a version or had to accept on like 1000 security certificates, of course, I was impressed
with just how much I could get done.
I mean, you can install this thing to a hard drive if you want, but you can install software
and get it all configured while it's running in memory, too.
And that still works.
I could go in there, configure settings and install new software still to this day.
And that that really impressed me.
That's a high bar.
Actually, not many of these distros can actually claim that I did do a little bit in the next
one I'm about to talk about.
But damn small is such a fascinating story because it's it was based originally on Knoppix
and then it kind of grew in to have some very cool features like around like you're talking
about software installation and backup and stuff.
It eventually got up to about 128 megabytes in size.
But the idea that kind of was popular for a hot minute back in the, you know, 2010,
2011 days, 2012, was this idea that you had these smaller CDs that you could fit in your
wallet that you would hand out at a convention or a business meeting and you could have a
custom damn small environment on there that would maybe like, you know, boot up and bring
them up to a presentation in a web browser or something like that.
Right.
Maybe it's got a demo of your software preinstalled.
Who knows?
Yeah.
Oh, and, you know, for a hot minute, maybe.
But then the thumb drive came along and malware just basically scared everybody, everyone
away from.
That's just it.
I do think it's kind of an interesting era, though, to where you could make Linux small.
You know, I'm sure that stood out to you trying some of these things, too, is just like, OK,
they don't take that much space on disk.
It's great and it's refreshing.
But damn small took that to the next level and I think is from an era where that was
more possible than maybe it is today, at least with the sort of experience we might expect.
So how was the nostalgia factor for that one for you?
Did it hit you in the feels or was it just sort of like kind of like a science experiment?
That seems to be kind of the way these can go.
Yeah, it was a little bit more of a science experiment.
I mean, I definitely did have experience with damn small Linux back in the day, but it was
even back then it felt more like a science experience and it wasn't quite one that I
would use day to day, despite being impressed with a lot of the tech stuff that they've
packed in there.
And yeah, the extensibility is really nice.
That was something they planned in.
They have a whole my damn small Linux program to get things going.
It's impressive.
But ultimately, no, I think if I had to pick, I'd stick on Ubuntu 6.06 for now.
Well, then we go back.
We go way, way back.
I'd like to talk about a distro that was instrumental in me professionally using Linux.
And it was a distribution that was purpose built.
It was a commercial distribution that sometimes cost as much as $100 that you would buy in
a box and then you would install it on your machine and you would input a serial code
into a Linux distro to install it and activate it.
Yeah.
It wasn't quite activated like Windows activation back in the day, but they were very serious
about it.
And it was called Xandros and each edition of Xandros I bought one, two, 3.0 in really
kind of just desperation to get compatibility with a Windows network.
One of the reasons they charged for Xandros was because they included crossover office,
which allowed you to run Windows applications.
And they wired it up such that when you put the office installer into your CD-ROM and
you pop that disc into your box, it would actually execute the auto run on that CD and
begin the setup process exactly like if you would put it on a Windows machine.
Because back in the day, you'd put these CD-ROMs in there, they'd auto run the installer for
you.
Yeah.
That lovely experience was recreated on Xandros with Windows software.
That's the level they were trying to get to with compatibility.
They then later on, and reasons why I continued to purchase it, added features like authenticating
to active directory domains, using PPTP to connect to VPNs on a Windows network, supporting
browsing a Windows file network right there in the browser, in the file browser.
It was a pretty good product and it actually delivered.
So version three that I checked out for this was released in 2004.
This is the last version that Xandros ever released and it's the last version I ever
used.
Xandros 3 was last updated in 2005 and the version I ran was somewhere right there in
the middle.
There's the business edition and there's all these different kinds, but it was really onto
something.
I have to say, 2004 never looked so damn fresh.
I was very impressed.
I'm not joking.
It installed fast and very easy.
The graphical boot splash is clean, but still shows the text output of your boot in a really
elegant way that I think actually looks better than most boot splashes I see today.
Ouch.
It is really good.
It ships with Mozilla 1.7.3, so pre-Firefox, and that means it also ships with Mozilla
Mail, so pre-Thunderbird, and they look surprisingly still the same, at least the Thunderbird one
does.
It had kernel 2.6.9 and it was rocking KDE 3.3.0.
I was able to get that sucker on the network.
I was able to download files off of the internet and browse the local LAN and actually just
kind of sit back and get some work done for a bit.
It's laid out in a really intelligent way that I immediately was able to pick up and
keep using.
It is very much if a group of people focused on just making a viable Windows alternative
for the business market that looked and operates a lot like Windows, including when I logged
in in the morning, I logged in with my Windows NT or Active Directory credentials into my
Xandros desktop.
That level of integration meant that I could then log in and I could launch Outlook, not
Evolution, Outlook, which meant I could do everything my coworkers who were all using
the exchange system could.
Being able to do that and being able to show my boss, because they were very skeptical
of Linux back then because of SCO, and they totally bought into all the SCO hype because
they were a bank, so they were totally afraid of all of the IP stuff, but I was able to
show my boss Xandros as a company, here's the box set that I buy, this is all what they
focus on, and they bought off on it.
They allowed the exception for me to run Linux on my daily driver at work, and that was when
I was freed from Windows back in 2004 in the workplace, and it changed my life.
I was willing to pay $100 a year if it meant I got a new version of Xandros with improved
Windows compatibility.
It had a very special spot for me because it enabled me to go full time.
I could run Linux at home, and I didn't run Xandros at home, I ran Mandrake at home, Mandrake
or Gentoo, and then at work I would run Xandros, which was based on Debian, so I had access
to deb files and I could do apt.
They actually had a pretty good software store where they were selling software and also
had free software available in a software center that they made right there on the desktop
and it was just their own custom app and it worked really well, and the whole package
came together in a way with their own custom theming on top of KDE 3 that I would absolutely
say that that Xandros 3.0 UI holds up today for people who like the traditional desktop
setup for XFCE types.
It's really clean.
I would use that.
You could see a version of Monte that was laid out that way, right?
Yeah, absolutely, and they've done small little tweaks to make it really easy to use.
I'll put the, again, I have a link to the gallery of some of the screenshots I took
that got my nostalgia feels going.
It never really survived.
I don't think they could make it.
I don't think they could make enough money, and now here we are in the future and Fedora
and Ubuntu and other distributions like SUSE have built in Active Directory support.
In fact, that was one of the reasons we eventually transitioned to SUSE Enterprise Linux in that
environment was because of YAS built in Active Directory support for joining or being a domain
controller.
And Xandros was sort of the proof of concept to the executives that a Linux distribution
could do it.
And I have even NTFS file permissions would show up in my file browser when I was looking
at permissions on files, and I was showing this to my boss, and that gave him the confidence
to say, well, okay, if Xandros can do it, then maybe these SUSE guys are onto something
with this YAS, and they moved ahead.
And for a long time, we deployed SUSE Enterprise, simply because Xandros proved the use case
and that was a big deal.
So we can blame Xandros for SUSE.
Okay, got it.
I think so, Wes.
I think that's exactly what the takeaway is from there.
Now, you had a chance to play with a distribution that was also an old favorite of mine.
Yeah, Backtrack.
You know, it just stood out to me because, I don't know, Kali gets talked about a lot,
maybe just because people tell new users not to use it.
But Wi-Fi was still kind of new when I was early days in Linux, you know, it was an exciting
new development, just sort of getting it really deployed, at least at, you know, the nerdy
friends houses anyway.
And naturally, Linux was an avenue where I could go explore and play with that kind of
stuff.
And at the time, Backtrack was hot.
It was first released back in May 2006, and lasted all the way until August of 2012, which
there was a lot of changes in that time period over Linux, but Backtrack was useful, I think,
throughout most of it.
Yeah, and it eventually emerged into what is now Kali Linux, so essentially does live
on.
But Backtrack, it was a little different.
It felt a little different.
Yeah, it did.
I got it going just to test it out on a quick shell and it had a very nice sort of graphical
environment that just presented a terminal to you.
It was framed around in a nice image, it had a little poll quote there at the bottom and
then otherwise let you get straight to business running Aircrack NG, say.
Or Nessus, in my case, or Metasploit, yeah.
I actually used Backtrack to make money.
I was really grateful for the project.
I had paid clients and Backtrack was one of the tools, and one of my favorite things to
do was to use Backtrack to come in and pop someone's FTP server and leave a little file
on there that said, gotcha.
Oh, dear.
Yeah, it was great because it just shocks the client into like, oh, this is something
we need to take seriously and it immediately changed the conversation into this is instead
of a waste of my money and time into this is something we need to address.
I'd bring Backtrack in, I'd bring a couple of laptops in, actually, because I had to
have a Windows box with me too for some of the stuff.
I'd have a couple of laptops, I'd have my own network connection and Backtrack running
on one of them.
It was just such a great tool.
Now, of course, Kali Linux still totally fills that role, but Backtrack was where I got my
start.
Yeah.
It was before I had tuned in really to the sort of philosophical side of free software
that came a little later.
And it was before I had really decided, you know, I still had fun playing with Windows
and I was gaming more at that time.
So I wasn't necessarily all in on the Linux desktop, but Backtrack kind of cemented in
my mind that Linux was useful for more things than that.
And here was this like very flexible, powerful sort of computer sciency tool that I could
have access to for free.
And that's still exciting.
Now will you allow for one more?
Okay.
I feel like there's so many we could talk about.
And if anybody has some suggestions that they want to send in the contact page, we'd consider
another round of this at some point in the future.
But I feel like I should mention Red Hat 9, not Red Hat Enterprise 9, which is what you'll
find if you search for Red Hat 9.
But I'm talking about Red Hat 9, the old Red Hat.
And I again have a album linked in the show notes.
But this is the Red Hat before they went to Fedora, before they went all enterprise.
Red Hat used to actually ship a desktop Linux.
And classic Red Hat desktop started in 1995 and it got all the way to version 9.
So this was the last.
And it was released in March of 2003 with kernel 2.4.20 and GNOME 2.2.
In 2003, Red Hat discontinued Red Hat Linux in favor of Red Hat Linux Enterprise Edition.
And Red Hat Linux 9 was supported for a while.
It's kind of this interesting story.
While it was officially end of life in April 2004, there was a Fedora legacy project that
kept patches going for Red Hat 9 until 2007.
So Red Hat 9 kind of became an infamous release because it was the last.
And then the legacy ports project kept it going for many, many years.
And then it technically stuck around for even longer because it was also the base for Red
Hat Enterprise Linux 3.
Ah, so the CentOS stuff we're going through now, well, we've all done this before.
Yeah, there is like a lot of echoes of history here.
And this distribution itself is sort of infamous for a lot of us old time Linux users because
it's the one.
And the one I tried out was Red Hat 9a Magazine Edition.
This was a thing we used to do back in the day with the CDs, with the magazine and stuff.
And distros would make a magazine edition and do a little bit of branding in there.
And so that part of it, all of that real early part of the startup feels really old school.
But once the graphical install starts up, it's kind of nice.
And I forgot how common it was with these old distros to like prompt you for what type
of install, a personal desktop, which is perfect for computers and laptops at home, or is it
a workstation, a graphical desktop with development and admin tools?
Or would you like to set up a server that has an optional graphical environment and
a few common server services?
Or would you like something custom?
Which is almost always the, I almost just always chose custom anyways.
And like Mandrake, Red Hat asked some basic security questions in their installers that
they no longer ask, like settings for your firewall, what ports you want open, what basic
level of paranoia you want.
And then at the end of the Red Hat 9 install, when everything is all like all the packages
are copied to the file system, you're asked some basic X config options.
Again, always feels like a roll of the dice.
But by this point, I knew how to get that working.
So it was really no problem.
You didn't break your virtualized monitor?
No, you know, that used to be a thing.
But this time I had it down.
And so I reboot, it boots up into X, I get a first time welcome screen that walks me
through a new user setup, much like we get today.
And it asked me if I want to register with the Red Hat network, which is how you got
updates back then, which it does not register with the network, it fails to do so.
And their codec story is rough back then, especially compared to Mandrake and Xandros
trying to play an mp3 file or something like that is such a joke.
It's real bad.
There's just a lot of problems because the copyright and patent situation was really
risky back then.
And so Red Hat really played it safe.
And things like support for NTFS and all of that just was not in there.
You had to go figure that out on your own after the case.
But besides that stuff, which ironically seems like less of an issue today, it holds up.
I think out of all of the distros I looked at, Red Hat 9 has probably the most iconic
classic look.
Version 9 uses the blue curve theme.
And it's kind of an iconic theme.
It holds up.
It's clean.
I bet you there are folks out there that are listening to this podcast and their desktop
looks exactly like this desktop still.
It's just that kind of iconic classic desktop.
It's fun because the other distros I tried were all KDE based.
And Red Hat was Gnome based.
And I really liked those other distro desktops.
But this one, there's something that just felt really clean.
The fonts looked really good.
And it just really felt polished in a way that the others don't.
And some of that is still the same vibe I get off the door today, which is wild to see
it today.
To still be able to connect with that same vibe from something that was released, what
was it, back in 2003.
Red Hat 9 was remarkable in that way.
It really made for a great long term desktop for a lot of people because of that Fedora
legacy ports and then because of RHEL 3.
And so it was that special transition.
And I wouldn't have it any other way than we do now because current distributions obviously
blow all this stuff away and where the Fedora project at, it's just great right now.
But it was so much fun to revisit this and find that it was really quite competent.
It's not a joke.
It's not a grind.
It wasn't old and busted.
I think it shows how much, both how not far we've come in the sense that not really that
much has changed in the computing industry, but I think it also shows how much work it
has taken to get where we are today.
I mean, a lot of work has happened.
It's a little unsettling that what do we have to show for it is shiny your desktops.
But I think that hides a lot of the real, you know, the power, the hardware we take
advantage of now and just how much more consistent and reliable everything is.
Thank you to our core contributors.
This episode, the last episode and the next episode have all been down one sponsor.
So that's three weeks without a potential sponsor that we could have sold in this spot
right now where I'm talking, but we're going to get by and we're going to get by thanks
to our members.
We could use more support.
I mean, I do dream of a day where we just eliminate the sponsor spot right here on the
show and it's entirely financed by our core contributors.
Uh, but so since we're in a tight spot and we're short on sponsors this month, if you'd
like to join and support our core contributors, I am making a summer promo code available.
The promo code is summer simple.
You'll take $1 off the membership cost for the lifetime of your membership.
So that really adds up.
It's still, still supports the show and gives you a great deal for the lifetime of your
membership.
You get access to the limited ad feed or the full live stream bootleg, just like all the
members do.
You get discount codes for selected Jupiter garage items and you help the show stay on
the air and independent.
We'll have a direct link to the summer deal in the show notes, or you can just go to our
core contributor website and, uh, sign up right there, which is at unplugged core.com
and use the promo code summer.
And thank you for your support and thank you to our members for making it possible for
us to do this here show unplugged core.com.
Keep the show on the air.
Well let's reach into the mailbag for some feedback.
Cool Jimmy writes in, I've been running TLP on my T480 since I got it two plus years ago
with a start charge at 50% and a stop at 80% I have the internal battery at 97.8% and external
battery at 98.4% capacity respectively.
Hey congrats.
Cool Jimmy.
That is really good.
And you know, Wes, I think one of the reasons we've been talking about managing your battery
like this is because once the damage is done, it's kind of too late.
Like you got to kind of solve it ahead of time.
So for those of you that don't recall, TLP is a really feature rich command line utility
for Linux.
It helps you manage power and like you'd expect with Linux, it's super customizable.
It really lets you go all in and I've been trying it on my ThinkPad since before my trip
to Montana and well, I had mixed results.
Zach writes in, he says, I just heard the latest episode about TLP and wanted to comment
that there are commands to temporarily disable the charging thresholds.
So I manually set charging thresholds in my TLP config, much like our previous writer
did.
Right.
But you don't have to like go modify that every time just to adjust it, right?
No, and I guess I should have realized that it was in the docs and I missed it.
But thankfully, Zach writes and he says there's a command to temporarily set different charge
thresholds without having to modify your config file.
You do pseudo TLP full charge and that just tells TLP to allow your system to charge all
the way up to full one time.
You can also do things like pseudo TLP set charge to 70 or you can do things like set
to like, you know, 50 percent or totally drain the batteries.
There's another option, there's also a recalibrate option to bring it down and up, which is really
nice to see.
So thank you to Cool Jimmy and Zach for sending those in.
My usage of TLP hasn't gone perfect.
A couple of times it did bite me on my trip to Montana because I would plug my laptop
in.
I had it set to, you know, not charged past, I think, 60 percent and then I would unplug
it, set aside for a day and then go open it up right when I really need it.
And I'd only have like 30 percent battery and I wouldn't be able to get my work done.
So a TLP charge, that changed my game, though, and that helped a lot.
But the other thing about TLP that you have to be careful with is I may have overdone
it a little bit when it came to the CPU scaling.
I think the performance impact is noticeable.
There wasn't a lot of headroom for performance loss to begin with, with my X1 Carbon.
And so when I then slowed down the cores and turned off turbo boost and stuff like that,
I sort of robbed myself of really any kind of performance that was getting me by.
And so I felt it more than I was hoping I would.
So instead what I'm considering is adopting a new tool that I think you guys would be
interested in.
Oh, new tool, huh?
New tool, Wes, new tool.
And it's called Auto CPU Freq.
It's a frequency, right?
It's an automatic CPU scaler based on your battery state, CPU usage, the temperature
of your system, your system load, kind of looks at all of that stuff sort of similar
to the way Mac OS does and rescales things on demand.
It can work in place of TLP or it can work with TLP, which is how I'm using it right
now.
And I definitely have seen an increase in battery life.
But what I'd really like to try is a setup where I don't have TLP installed, I don't
have to bother with it, but I do have the automatic CPU frequency installed.
So I have links to that in the show notes.
Yeah.
See if that's enough to get you by, huh?
Yeah, I'm hoping.
I'm hoping without the performance hit because it scales a little bit faster, it's a little
more dynamic.
And you can, when you're running it, you can put it in a mode where you're getting a report
and where it's watching your system and it'll give you information about your CPU cores
and if turbo boost is enabled or disabled and it will dynamically enable and disable
features that you need or don't need.
And so when you're not pushing your system very much, it'll clock the cores down, it'll
turn off turbo boost, and it'll let your laptop sit power.
But then when you launch something that needs horsepower, it immediately turns turbo boost
back on, it clocks things back up.
It's really dynamic like that.
This looks great.
I'm definitely giving it a try.
Well we have a retro pick for everyone before we go today.
Wes found a way for you all to get your hands on WordPerfect on Linux.
Well really, there's a lot of ways.
This is a great article over on LiveJournal from Liam on Linux, and it just struck me
as a perfect retro pick for our retro episode because I don't know about you, Chris, but
WordPerfect was really my first word processor on DOS, no less, and it kind of introduced
me to the whole concept of word processing.
On the pre-pre-show today, we were watching a Computer Chronicles where WordPerfect was
talked about as just like this total dominant force in the global software marketplace.
They just went on and on.
It's kind of laughing now because I haven't seen it in years, but you know, it would be
really nice to be able to check it out.
How have they done this, Wes?
It's not Wine.
It's not FreeDOS.
It's a whole other way to get WordPerfect.
You know, I want to talk about the Xandros connection.
Did Corel buy Xandros?
Is that what I'm barely vaguely remembering?
It's the other way around.
Oh.
Corel had to discontinue all its Linux efforts, so it sold off Corel Linux OS, which became
Xandros.
Corel Linux OS is the predecessor to Xandros, and then Xandros was then acquired, then acquired
Linspire and merged it into itself, and then ultimately it was acquired and then they shut
it down.
Okay.
I'm surprised you didn't know that, Chris.
Like it was...
I may have at some point.
I just didn't.
Too much retro history.
It was part of the Groklaw thing.
Like the whole stupid SCO thing was, whereas all that stuff kind of was unearthed.
Neil, I've forgotten more about all that than I probably could even keep track of, but it
does vaguely all ring a bell.
That all does kind of ring a bell.
The more you guys talk about it, it does.
That was what I entered the open source world in.
So like it will remain fresh on my mind basically forever.
They've done like a script here that you basically, you grab this script, right?
And it pulls down, I don't know, like a DOS environment.
What's it doing, Linus?
How's it making this happen?
Well, it depends.
There's, if you want to go explore, there is a word perfect for ancient Mac classic.
If you want to try that, that's a little tricky.
The one that lived the longest, I guess, is the Linux version.
So that's what a lot of the article kind of explores.
It explores the neat history with Corel and some of the contributions even that Corel
had contributed to the wine project, say.
So definitely go read the whole article because there's a lot in there.
At the end, there's kind of a call for help to figure out the best way to get the Linux
stuff running.
The author did get it going in a very old version of Linux on a VM and tried to get
it containerized.
But so far, that's proving tricky because it's like pre Ubuntu 8.04.
Man, if it's not StarOffice, I just couldn't care, I guess.
That's what was exposed today.
I'm a StarOffice guy, always have been.
Big StarOffice fan.
All right, well, if you have any nostalgia picks for us or distros that you recommend
we check out, you can tweet them at the show too if you like.
We are at Linux Unplugged or you can go to linuxunplugged.com slash contact.
The whole network is on Twitter at Jupiter Signal and there's a whole network of shows
out there.
I got a telegram this morning from a long time listener in Australia, a shout out to
you sir, who said, I've been listening to Linux Unplugged forever and I didn't even
know self-hosted existed and I just checked it out and now I'm binging it.
So I mean like, you know, I feel like maybe I should mention that we have some other podcasts
like a Linux news podcast that covers all of the important Linux news every week.
If there's something you didn't hear us talk about here, well, we probably covered it in
Linux Action News in detail.
So check out linuxactionnews.com as well.
And we'd love to have you join us live.
We do this here podcast live on Tuesdays.
See you next week.
Same bat time, same bat station.
That's right.
Join us at 12 PM Pacific, 3 PM Eastern over at jblive.tv or I guess you can do that thing
on Twitch.
You probably know how it works better than I do.
Twitch.com slash Jupiter broadcasting for that low latency stream.
That's right.
It's the low latency video.
There's also YouTube.
Who knew?
But you could subscribe over there, I guess, and get notifications when we're live.
Man, who just doesn't love notifications?
Get them all while you can.
Go get them.
Go get notified or just download it when we release every Tuesday where it sounds better
and Joe's put a lot of work into it.
That works too.
Thanks for joining us on this week's episode of the Unplugged program and we'll see you
right back here next Tuesday.
Okay, JBtitles.com.
You know, that doubly goes for all these retro distros we talked about today.
It's really about how you use it.
It really was.
That was sometimes the best part was solving a series of problems like Xandros by default
wasn't grabbing an IP over DHCP.
It saw my network adapter once I got the right driver loaded, but didn't just go get an IP.
I had to go into the config and tell it to use, yes, it's okay to use DHCP.
And then it didn't take the DNS servers from DHCP, even though obviously my DHCP server
offers them up.
But I had to then go into the DNS configuration in their little GUI and tell it, use these
DNS servers.
It just totally disregarded what the DHCP server supplied.
Well, because back then there wasn't necessarily support for DNS auto configuration via DHCP.
Yeah.
And like, and the wireless support was so new.
It was just so hit and miss.
Yeah.
Oh my God.
I used Endus wrapper until 2009 because Wi-Fi was so bad up until like 2011 or so.
Yeah.
It was such a factor back then.
And you could see each distribution was taking a different crack at trying to solve the problem,
but it was just like, there was only so much they could do.
It was pretty bad.
