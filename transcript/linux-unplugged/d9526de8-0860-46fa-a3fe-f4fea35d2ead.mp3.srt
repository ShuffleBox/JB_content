1
00:00:00,000 --> 00:00:07,000
This is Linux Unplugged, Episode 21 for December 31st, 2013.

2
00:00:30,000 --> 00:00:40,800
Hi, everyone, and welcome to Linux Unplugged, your weekly Linux podcast that's popping a

3
00:00:40,800 --> 00:00:45,120
beer cap like it's a bottle of champagne. My name is Chris.

4
00:00:45,120 --> 00:00:46,120
My name is Matt.

5
00:00:46,120 --> 00:00:50,260
Hey, Matt. Here we are on the precipice of 2014, and our crystal balls have been shined

6
00:00:50,260 --> 00:00:55,760
once again. We are joined by our virtual lug, our mumble room. They're going to throw in

7
00:00:55,760 --> 00:00:59,540
some predictions. Plus, we just did a big batch of predictions, a huge episode, almost

8
00:00:59,540 --> 00:01:03,640
like an hour, 50-minute episode on Sunday of the Linux action show, where we threw down

9
00:01:03,640 --> 00:01:08,240
our predictions for 2014, and then immediately, one of the reasons we actually created this

10
00:01:08,240 --> 00:01:12,440
show is because we get off air, and then I go, oh, crap. Oh, I should have mentioned

11
00:01:12,440 --> 00:01:16,720
X. I should have mentioned Y. So, I got a few more predictions we got to get to. Plus,

12
00:01:16,720 --> 00:01:20,760
there's been a couple of things that happened this week that also kind of just clicked,

13
00:01:20,760 --> 00:01:23,800
and said, oh, man, this is actually going to play out big in 2014. So, we'll talk about

14
00:01:23,800 --> 00:01:29,840
that. Plus, CES is moments away, and we have reason to believe that a couple of things

15
00:01:29,840 --> 00:01:33,560
that we're going to talk about today in our predictions will bear fruit in CES just a

16
00:01:33,560 --> 00:01:36,280
couple of weeks away. So, I'm looking forward. It's going to be a good way to end the year.

17
00:01:36,280 --> 00:01:41,200
It's our last episode of 2013. So, I think it's going to be a good one, Matt.

18
00:01:41,200 --> 00:01:42,200
Definitely.

19
00:01:42,200 --> 00:01:44,960
All right. So, before we get to all of that, before we get to all of our crazy crystal

20
00:01:44,960 --> 00:01:49,360
ball rubbing, I want to follow up with a couple of things that were sent into the show. There

21
00:01:49,360 --> 00:01:53,120
was so much email to go through. I tried to kind of boil it down to just a few topics

22
00:01:53,120 --> 00:01:57,040
because we recorded two episodes last week. So, it's actually been a couple of weeks or

23
00:01:57,040 --> 00:02:02,080
one week since we sat down. And so, there was a lot to get through, but I tried to boil

24
00:02:02,080 --> 00:02:06,160
it down to just a few things of follow up. So, to start with, I wanted to read the email

25
00:02:06,160 --> 00:02:11,760
that Zach sent in because in last episode, we talked a lot about the Chromecast. And

26
00:02:11,760 --> 00:02:16,640
in that conversation, XBMC came up, but I think it deserves a little extra attention

27
00:02:16,640 --> 00:02:20,400
here, and so did Zach. So, here, I says, hey, guys, just wanted to respond to the Chromecast

28
00:02:20,400 --> 00:02:26,560
XBMC talk. I use XBMC all the time, and I would love to see XBMC rise to the same popularity

29
00:02:26,560 --> 00:02:31,200
as Chromecast and Plex. The only real problem with XBMC right now is the lack of out of

30
00:02:31,200 --> 00:02:36,480
box functionality. Now, do you think, do you think Chromecast and Plex are already more

31
00:02:36,480 --> 00:02:38,560
popular than XBMC, Matt?

32
00:02:38,560 --> 00:02:41,520
Here's a simple rule to follow when in doubt with these things, and this is a rule I live

33
00:02:41,520 --> 00:02:45,280
by and usually cheeses people off, but it's pretty accurate for the most part. If something's

34
00:02:45,280 --> 00:02:50,720
easy to use, it's going to rise to the top. Not because it's better, that's interpretative,

35
00:02:50,720 --> 00:02:54,640
but because people perceive it as easier to use and perceive it to be better. Plex being

36
00:02:54,640 --> 00:02:58,440
a great example of that in Chromecast. Personally, I've been playing with the Chromecast, and

37
00:02:58,440 --> 00:02:59,440
I do have thoughts on that.

38
00:02:59,440 --> 00:03:00,440
Oh, really?

39
00:03:00,440 --> 00:03:05,280
Yeah, as far as like, you know, because I think, like, XBMC and Chromecast are completely

40
00:03:05,280 --> 00:03:10,400
different animals doing completely different things, but they definitely share different

41
00:03:10,400 --> 00:03:14,800
levels of difficulty and or ease of use, depending on how you look at it. But yeah, XBMC I think

42
00:03:14,800 --> 00:03:19,640
is awesome as Debian is awesome. That doesn't mean you're going to get grandma to use it

43
00:03:19,640 --> 00:03:21,120
without some support there.

44
00:03:21,120 --> 00:03:28,120
Yeah, and I, you know, I think part of the killer problem that Plex solved was that Roku

45
00:03:28,120 --> 00:03:32,040
front end, because you can buy a Roku that even if at the end of the day Plex doesn't

46
00:03:32,040 --> 00:03:36,740
work out for you and the family or whoever else has to use the TV, the Roku still does

47
00:03:36,740 --> 00:03:41,160
a ton of other things. So you're not totally married to one solution, whereas if you go

48
00:03:41,160 --> 00:03:45,040
to XBMC, you got to build a PC, you got to set all that up, you got to hook that up to

49
00:03:45,040 --> 00:03:48,320
your or maybe a Raspberry Pi if you're geeky. But again, regular consumers aren't going

50
00:03:48,320 --> 00:03:49,320
to do that.

51
00:03:49,320 --> 00:03:50,320
Right.

52
00:03:50,320 --> 00:03:54,600
Whereas Plex is is not quite consumer level, but it's getting pretty close, where you could

53
00:03:54,600 --> 00:03:58,960
have somebody that ships a free like you could have an IX system that ships a free NAS box

54
00:03:58,960 --> 00:04:02,600
with Plex preinstalled and says automatically streams to your Roku and they could just put

55
00:04:02,600 --> 00:04:05,920
that on the box and essentially the consumer would only have to do startup Plex on the

56
00:04:05,920 --> 00:04:06,920
Roku.

57
00:04:06,920 --> 00:04:10,600
Oh, yeah. Well, and I still believe honestly, Raspberry Pi is the right kind of storage

58
00:04:10,600 --> 00:04:15,560
attached to it. Slap a sticker on it. It's, you know, Billy Bob's media box. Yeah. Plug

59
00:04:15,560 --> 00:04:20,080
it in. You're done. Yeah. I think there's a market for 60 bucks. Sure. Absolutely. So

60
00:04:20,080 --> 00:04:25,280
he goes on to say, as things are, XBMC can do a lot of things, but sucks, sucks, such

61
00:04:25,280 --> 00:04:30,280
functionality requires a researching how to do it and downloading the corresponding add-ons,

62
00:04:30,280 --> 00:04:33,800
which usually aren't listed in the default add-ons. If XBMC would provide a more complete

63
00:04:33,800 --> 00:04:38,120
and prettier add-on manager, they would have a way better off than they are right now.

64
00:04:38,120 --> 00:04:43,080
New users won't want to connect to XBMC hub to get legally questionable add-ons. The add-on

65
00:04:43,080 --> 00:04:47,960
system is a little awkward. Like we have, there's a Jupiter broadcasting app in XBMC

66
00:04:47,960 --> 00:04:52,320
for Roku. Jeez. See, it's confusing to talk about. There's an app for XBMC for Jupiter

67
00:04:52,320 --> 00:04:54,560
broadcasting, but you got to dig for it a little bit.

68
00:04:54,560 --> 00:04:58,360
Exactly. And as far as, you know, people not being willing to dig for something that's

69
00:04:58,360 --> 00:05:03,140
legally questionable, that's not entirely accurate, but I would say that it depends

70
00:05:03,140 --> 00:05:07,520
how hard or easy it is to get to. Cause if a good homework assignment for everybody in

71
00:05:07,520 --> 00:05:12,040
the audience is to go to the cord cutters subreddit and you're going to find people

72
00:05:12,040 --> 00:05:16,460
that barely know how to work their Blu-ray players running Plex. I mean, these folks

73
00:05:16,460 --> 00:05:20,560
are brand new to this stuff. So I think that there's absolutely, and of course they have

74
00:05:20,560 --> 00:05:22,960
no problem how they get their media as long as they don't feel like they're going to

75
00:05:22,960 --> 00:05:23,960
get pinched on it.

76
00:05:23,960 --> 00:05:26,780
Well, and here's the other thing he points out is he says XBMC would do better off if

77
00:05:26,780 --> 00:05:31,180
they could have official plugins from like Hulu and Netflix, right?

78
00:05:31,180 --> 00:05:33,280
And I would think that would give them a real advantage. Yeah.

79
00:05:33,280 --> 00:05:37,720
Because again, I go back to the Roku and Plex with Plex, I get all of my local content and

80
00:05:37,720 --> 00:05:41,580
it's such a great setup. Plus the library is centralized. So if I have multiple Rokus,

81
00:05:41,580 --> 00:05:46,160
they're all sharing the same metadata, the same, you know, watch played status, the resume

82
00:05:46,160 --> 00:05:50,760
locations are all shared amongst all of the Rokus. Roku is great because it's tiny. It's

83
00:05:50,760 --> 00:05:56,380
silent. It runs Linux. It's cheap ish. And, and, and then I can hit the home button and

84
00:05:56,380 --> 00:05:59,000
I can launch the Netflix app. And that's a huge deal.

85
00:05:59,000 --> 00:06:03,120
Yeah, you can get a, you can get an entry level Roku for 39 bucks. You can go up to

86
00:06:03,120 --> 00:06:06,440
99 or up and higher if you want to. But I mean, you out of, out of the gate, you can

87
00:06:06,440 --> 00:06:10,460
walk into it very comfortably. I think for like, it's an LTE for 39 bucks and that's

88
00:06:10,460 --> 00:06:13,960
quite reasonable. And it comes with a remote. There's something to be said to that.

89
00:06:13,960 --> 00:06:19,040
Yeah. Yeah. And the Roku 3 comes with a really cool remote with a, with a headphone connection,

90
00:06:19,040 --> 00:06:25,700
which is great for a late night TV. And so that said, you know, I was just thinking about

91
00:06:25,700 --> 00:06:30,640
the, the new studio that we'll be building in early 2014 or rebuilding, I guess you could

92
00:06:30,640 --> 00:06:34,880
put it. And one of the things I'm going to have in there is TV service for clips for

93
00:06:34,880 --> 00:06:39,180
unfilter. And I was thinking about how I'm going to be ingesting that media and how I'll

94
00:06:39,180 --> 00:06:43,980
be displaying it. And one of the things that did cross my mind was, you know, maybe a TV

95
00:06:43,980 --> 00:06:47,700
with all of the clips on there with XBMC sitting in front of that. And then I could

96
00:06:47,700 --> 00:06:51,840
sit down on a TV and process all the clips on the TV using XBMC. I don't, I'm still

97
00:06:51,840 --> 00:06:52,840
working through it.

98
00:06:52,840 --> 00:06:53,840
That's interesting.

99
00:06:53,840 --> 00:06:56,960
It made it, you know, there's, there's so many, it's almost, you know, you almost put

100
00:06:56,960 --> 00:06:59,640
it really well when you sit and you can look at it like Debian because as Debian could

101
00:06:59,640 --> 00:07:06,080
be used for a base, XBMC can be used for a base for, you know, display systems, for billboards,

102
00:07:06,080 --> 00:07:10,000
for all, you know, home, home entertainment, all kinds of things. So XBMC totally has a

103
00:07:10,000 --> 00:07:14,040
place and I like it a lot and it just depends on what use case. But you know, as far as

104
00:07:14,040 --> 00:07:20,840
like spouse approval factor and really, I mean, to be totally frank, you know, my four-year-old

105
00:07:20,840 --> 00:07:27,200
son and my two-year-old daughter can use the Roku, right? And they can't really use XBMC

106
00:07:27,200 --> 00:07:28,960
and that really is kind of a big deal.

107
00:07:28,960 --> 00:07:36,080
Well, we used to, we have a hacked Apple TV that we used to run XBMC on and it, the spouse

108
00:07:36,080 --> 00:07:40,280
wasn't exactly enthused with it. She used it, she tolerated it, it was fine. Plex, on

109
00:07:40,280 --> 00:07:44,180
the other hand, there's no comparison. So I think, I think you really nailed it. Once

110
00:07:44,180 --> 00:07:49,000
you actually introduce non-geeks into the situation who are not on pedestals, chirping

111
00:07:49,000 --> 00:07:54,160
the same old chirpy stuff and actually looking at it factually, Plex really is the easier

112
00:07:54,160 --> 00:07:55,960
choice and it's great.

113
00:07:55,960 --> 00:07:59,280
Even though it's a little uglier than XBMC, like, especially on the Roku, it's...

114
00:07:59,280 --> 00:08:04,360
Oh, it's horribly ugly on a Roku, yeah. It's hideous. But it's really, really sexy on the

115
00:08:04,360 --> 00:08:08,720
Android app or even on the, when you run it in your browser, it looks really great there.

116
00:08:08,720 --> 00:08:12,640
Yeah, the Roku app needs a dire, dire, needs to be addressed in a big way.

117
00:08:12,640 --> 00:08:16,040
I think that might be a limitation of the Roku SDK or something, but yeah, it's awful.

118
00:08:16,040 --> 00:08:17,040
It might be, yeah.

119
00:08:17,040 --> 00:08:21,920
Yeah. All right, well, we got a correction that came in from Mike from episode 20, so

120
00:08:21,920 --> 00:08:26,780
two weeks back. He said, hey, unpluggers, at the beginning of episode 20, the topic

121
00:08:26,780 --> 00:08:30,480
of licensing Ubuntu packages for the Mint project came up. He said, no one could think

122
00:08:30,480 --> 00:08:35,040
of an example of any projects that rebuilt the source, but that is wrong. The Trisco

123
00:08:35,040 --> 00:08:39,280
project often purges non-free packages from Ubuntu repos and then rebuilds some of those

124
00:08:39,280 --> 00:08:46,760
packages and de-blobs them. These are mirrored and corrected packages are hosted on the FSF

125
00:08:46,760 --> 00:08:49,680
mirror for Trisco to use. Just wanted to let you know. Thanks, guys.

126
00:08:49,680 --> 00:08:53,200
Yeah, Mike, one of the things that was different and Popey made this point when he was on the

127
00:08:53,200 --> 00:09:00,180
show last week or two weeks ago, was that Mint is pointing at Ubuntu repo. So they're

128
00:09:00,180 --> 00:09:06,360
using Ubuntu servers, Ubuntu bandwidth, Ubuntu packages. They're not taking the packages,

129
00:09:06,360 --> 00:09:11,160
rebuilding them all, sent to us or Trisco style and hosting them on their own servers.

130
00:09:11,160 --> 00:09:15,800
So an analogy would be, so one group of people would be like hot linking to an image where

131
00:09:15,800 --> 00:09:18,920
another group of people might be saving the image to their desktop and they're using it

132
00:09:18,920 --> 00:09:20,520
on their own servers. That would be the difference there.

133
00:09:20,520 --> 00:09:23,760
So I guess what Canonical is saying is, hey, you want a hot link, you need to have a license,

134
00:09:23,760 --> 00:09:24,760
I guess.

135
00:09:24,760 --> 00:09:26,800
Right. You're incurring cost to us.

136
00:09:26,800 --> 00:09:30,480
To me, it didn't seem like a huge deal to Clem. It doesn't seem like a huge deal to

137
00:09:30,480 --> 00:09:34,760
me, but it's something we'll keep an eye on. Yeah. Okay. One last bit of feedback before

138
00:09:34,760 --> 00:09:40,480
we get into the balls here. This one came in from James and he had some thoughts on

139
00:09:40,480 --> 00:09:45,520
the topic of Ubuntu as a rolling distro, which keeps coming up and Mark recently in an interview

140
00:09:45,520 --> 00:09:49,760
suggested that maybe after 1504 you might see something a little more like a rolling

141
00:09:49,760 --> 00:09:50,760
release from Ubuntu.

142
00:09:50,760 --> 00:09:53,600
So this has got people thinking and James is one of them. He says, hey guys, happy new

143
00:09:53,600 --> 00:09:57,840
year. I heard you talking about a number of times about the perceived issue with Ubuntu

144
00:09:57,840 --> 00:10:02,960
because you can't always get the latest stuff. Well, I was a 15 year Slackware veteran until

145
00:10:02,960 --> 00:10:08,080
I changed to Ubuntu in 2008. I tested and continue to test other distros, but I still

146
00:10:08,080 --> 00:10:12,720
use Ubuntu because I think it's time for Linux to just work. And I find that Ubuntu

147
00:10:12,720 --> 00:10:17,480
gives me that. And also I want to build up an experience to support others. That makes

148
00:10:17,480 --> 00:10:23,360
sense. Yeah, definitely. However, I do want the latest packages. So I have run the dev

149
00:10:23,360 --> 00:10:29,040
version since 11.10 was released. Canonical has a policy that the dev versions work every

150
00:10:29,040 --> 00:10:34,040
day and it does. I get one failure each cycle when the X server is updated and I have to

151
00:10:34,040 --> 00:10:39,960
upgrade my Nvidia driver, but that's it. It works flawlessly. It means I get the new stuff

152
00:10:39,960 --> 00:10:44,840
and then when the new distros released, I already have experience if people need help.

153
00:10:44,840 --> 00:10:48,360
If I upgrade as soon as the new repo is available, which means I'm on production releases for

154
00:10:48,360 --> 00:10:53,040
only about one to two weeks at the start of each cycle, Ubuntu works great as a rolling

155
00:10:53,040 --> 00:10:58,480
release. So what James is saying is my trick essentially is I run the production version

156
00:10:58,480 --> 00:11:02,520
for a couple of weeks and then once it's back up and they're working on the beta version

157
00:11:02,520 --> 00:11:07,660
again, I just upgrade my repos and I run the beta version. I was going to ask the mumble

158
00:11:07,660 --> 00:11:11,240
room, does anybody in here ever do that with their distro where you run the stable version

159
00:11:11,240 --> 00:11:15,640
for maybe a couple of weeks and then you jump to the beta version?

160
00:11:15,640 --> 00:11:24,640
Yeah, I am running CrunchBang and I immediately went into Jesse because the stable of Debian

161
00:11:24,640 --> 00:11:29,880
didn't have everything I wanted and then I launched into CID and I'm still experimenting

162
00:11:29,880 --> 00:11:32,600
to see how it's going to go.

163
00:11:32,600 --> 00:11:38,000
I did this myself for a period of time with the Ubuntu's where I would run the stable

164
00:11:38,000 --> 00:11:42,160
version for a few weeks and then I would just switch. For a while what I would do is I would

165
00:11:42,160 --> 00:11:45,120
wait until after the first beta release. That's what it was. It was more than a few weeks.

166
00:11:45,120 --> 00:11:49,200
I would wait until after beta one was out for a couple of days and then I would switch

167
00:11:49,200 --> 00:11:52,440
over to that and then I would ride that all the way to the finish line and I did that

168
00:11:52,440 --> 00:11:56,280
for three or four releases in a row, like the same installation, just kept doing it

169
00:11:56,280 --> 00:12:03,880
and it worked okay but what really I ran into constantly is a lot of instructions assume

170
00:12:03,880 --> 00:12:09,320
a certain version of Ubuntu and they're already having a hard time, the instructions you find

171
00:12:09,320 --> 00:12:13,440
online, you have a hard time finding anything that applies to the absolute latest version.

172
00:12:13,440 --> 00:12:19,120
Usually it's one or two releases behind and then you just add an extra layer of anomaly

173
00:12:19,120 --> 00:12:23,080
when you're running a rolling release that isn't even out yet and stuff is a different

174
00:12:23,080 --> 00:12:27,440
version and stuff is in a different spot. So for me I just kept banging my head into

175
00:12:27,440 --> 00:12:29,520
that. Did you ever try this Matt?

176
00:12:29,520 --> 00:12:35,120
Not with, no, not in that exact thing but I have run into that when it comes to documentation

177
00:12:35,120 --> 00:12:38,400
and things like that. It's always interesting to try and nail that down so for me it was

178
00:12:38,400 --> 00:12:39,800
always a little bit different.

179
00:12:39,800 --> 00:12:45,040
Yeah, yeah. And you know I've thought about trying it again actually with the Fedora release

180
00:12:45,040 --> 00:12:51,020
and I tried it really briefly during our OpenSUSE 13.1 review. I switched over to their rolling

181
00:12:51,020 --> 00:12:56,280
and it went fine but I only did it for a few days. So I kind of feel like if you're going

182
00:12:56,280 --> 00:12:58,800
to go rolling you should go with a distro designed to be rolling.

183
00:12:58,800 --> 00:13:02,800
Well that would be my thinking because otherwise you're essentially doing a work around. I

184
00:13:02,800 --> 00:13:07,000
mean if Ubuntu really wants to make their distro the very best it can be they need to

185
00:13:07,000 --> 00:13:13,960
address the PPA problem. The existing management tools for PPAs is pretty craptacular. It's

186
00:13:13,960 --> 00:13:19,120
not that great. PPAs as an idea are great. Unfortunately what happens when one goes down

187
00:13:19,120 --> 00:13:24,520
there's no system in place to alert people. Hey by the way this is dead. Put out an alert

188
00:13:24,520 --> 00:13:25,600
that something's going to be done.

189
00:13:25,600 --> 00:13:28,800
This is something the Mint project has addressed but it's not an Ubuntu proper.

190
00:13:28,800 --> 00:13:32,060
No it's not and so I think that's something that they need to really look at because I

191
00:13:32,060 --> 00:13:36,120
don't see them as really needing to go rolling release because it's not their target goal

192
00:13:36,120 --> 00:13:40,060
but I do think that they need to address having more bleeding edge packages when it comes

193
00:13:40,060 --> 00:13:46,080
to stuff like OpenShot, Firefox, various software types. I think that would really help out.

194
00:13:46,080 --> 00:13:51,120
The backend stuff like lib this and lib that you know that's neither here nor there. That's

195
00:13:51,120 --> 00:13:55,240
obviously a PPA kind of thing but yeah I don't know. It's going to be interesting to see

196
00:13:55,240 --> 00:13:57,520
how they work it out but it's something that they're not addressing and I think they're

197
00:13:57,520 --> 00:13:59,160
going to have to eventually.

198
00:13:59,160 --> 00:14:01,800
Hopefully or maybe click packages will save us all.

199
00:14:01,800 --> 00:14:06,040
That would be. Hey you remember click you know.

200
00:14:06,040 --> 00:14:07,960
I do. I do. I do remember clicking.

201
00:14:07,960 --> 00:14:08,960
That was not horrible.

202
00:14:08,960 --> 00:14:11,640
I also remember clicking and running as it were.

203
00:14:11,640 --> 00:14:12,640
Yes.

204
00:14:12,640 --> 00:14:16,640
Old joke there for you all.

205
00:14:16,640 --> 00:14:20,640
You have to be apt to get that.

206
00:14:20,640 --> 00:14:25,440
Oh geez. Hey you know what I got to do before we make everybody tune out is I want to say

207
00:14:25,440 --> 00:14:29,840
thank you to Ting.com who is sponsoring this episode of Linux Unplugged. Ting is my mobile

208
00:14:29,840 --> 00:14:34,920
service provider and Matt's mobile service provider. Why? Why? It's easy. No contracts,

209
00:14:34,920 --> 00:14:38,800
no early termination fees and the thing that really keeps me around is Ting is pay for

210
00:14:38,800 --> 00:14:43,960
what you use. They don't have to worry about things like or I don't have to worry about

211
00:14:43,960 --> 00:14:47,860
things like paying into a contract where I'm not using that fully.

212
00:14:47,860 --> 00:14:55,520
So previously I had two phones on a smartphone plan $120 a month. Now I have two phones both

213
00:14:55,520 --> 00:15:02,780
smartphones an HTC One and a Nexus 5 on Ting and I'm paying around $25-$30 a month it depends.

214
00:15:02,780 --> 00:15:06,160
So what Ting does is they take your minutes, your messages and your megabytes and they

215
00:15:06,160 --> 00:15:10,200
add those up at the end of the month and whatever bug that you fall into, whatever actual usage

216
00:15:10,200 --> 00:15:17,120
you have, that's what you pay. It's brilliant. So some months I have 50 text messages. Some

217
00:15:17,120 --> 00:15:22,480
months I have 200 text messages. Why would I have to pay a thousand text message plan

218
00:15:22,480 --> 00:15:26,480
if I don't need it? It drives me crazy and Ting solves all of that.

219
00:15:26,480 --> 00:15:30,680
Plus Ting has devices that are fresh and hot right now. There are some carriers that don't

220
00:15:30,680 --> 00:15:35,360
even have like the HTC One yet. Ting is already supporting the Nexus 5. You can pick it up

221
00:15:35,360 --> 00:15:38,800
from the Google Play Store. You buy it directly from Google. You bring it over to the Ting

222
00:15:38,800 --> 00:15:42,800
network. Now you have a phone you fully own on a network that's paid for what you use

223
00:15:42,800 --> 00:15:47,400
with no contracts or no early termination fees. Hot spot tethering built into your plan.

224
00:15:47,400 --> 00:15:49,980
You just pay for your data usage. It makes a ton of sense.

225
00:15:49,980 --> 00:15:55,400
So here's how you get started. You go to linux.ting.com. That's going to take $25 off your first device

226
00:15:55,400 --> 00:15:58,680
or if you've already got a Sprint compatible device and you want to bring it over to Ting,

227
00:15:58,680 --> 00:16:03,080
just check to make sure it's compatible with the Ting network and then they'll take $25

228
00:16:03,080 --> 00:16:06,040
off your first month of service. That's a pretty awesome deal. They've got a savings

229
00:16:06,040 --> 00:16:09,560
calculator. You can plug that in and see how much you'd save.

230
00:16:09,560 --> 00:16:12,600
One of the things you'll notice when you're visiting the Ting site, go to linux.ting.com

231
00:16:12,600 --> 00:16:18,000
to get started, is they are an awesome company. They have their blog where they're posting.

232
00:16:18,000 --> 00:16:21,200
They're very transparent about their business, how they work, about future advances. They

233
00:16:21,200 --> 00:16:26,080
talk about rolling out tri-band LTE and what devices on the Ting network like my Nexus

234
00:16:26,080 --> 00:16:30,420
5 support tri-band LTE right now and what the benefits of something like that are. They

235
00:16:30,420 --> 00:16:34,840
often will pick some of the best apps, some of my favorite ones on Android like BeyondPod.

236
00:16:34,840 --> 00:16:38,200
They'll feature those on the blog. There's a lot of great stuff over here that you can

237
00:16:38,200 --> 00:16:42,120
keep visiting and once you become a Ting customer, you'll appreciate this level of information

238
00:16:42,120 --> 00:16:50,920
from your carrier and Ting has great customer service as well. If you call Ting at 1-855-846-4389,

239
00:16:50,920 --> 00:16:54,900
any time between 8am or 8pm Eastern, a real personal answer to the phone and help you

240
00:16:54,900 --> 00:16:59,740
out and you also have a fantastic dashboard that gives you the tools you need to control

241
00:16:59,740 --> 00:17:03,000
your own account, you'll probably be surprised at the kind of functionality you can get in

242
00:17:03,000 --> 00:17:08,300
there and how clear and easy a cell phone company can make your billing and information

243
00:17:08,300 --> 00:17:13,680
like that. Once you see this stuff, you'll never be able to go back to anybody else.

244
00:17:13,680 --> 00:17:17,680
It's just their stuff. Ting is so far ahead of everybody else. You got to check them out.

245
00:17:17,680 --> 00:17:22,320
So go to linux.ting.com and a big thank you to Ting for sponsoring Linux Unplugged. I

246
00:17:22,320 --> 00:17:26,160
hear from people all the time who switched over to Ting and are totally thrilled and

247
00:17:26,160 --> 00:17:30,000
you can be one of them. linux.ting.com. Thank you to Ting.

248
00:17:30,000 --> 00:17:34,160
Actually I have a recent Ting story, real short one. Here recently I had it issued where

249
00:17:34,160 --> 00:17:37,720
I did something dumb on my phone and I couldn't figure it out. You know, imagine that, right?

250
00:17:37,720 --> 00:17:40,800
I mean do something foolish. I did something foolish. I was like, okay, well I'm gonna

251
00:17:40,800 --> 00:17:45,400
give these guys a call and see what's going on. Half a ring, not even a full ring. A person

252
00:17:45,400 --> 00:17:49,400
that, you know, actually is very well spoken, very easy to understand. I get up on the phone,

253
00:17:49,400 --> 00:17:53,720
ask them a question. Within like, I don't know, three seconds, they gave me numbers

254
00:17:53,720 --> 00:17:57,240
to start pressing into my phone. Pressed it in, boom, problem solved. That was the end

255
00:17:57,240 --> 00:18:00,880
of the conversation. Asked me if anything else, happy holidays, blah, blah, blah. We

256
00:18:00,880 --> 00:18:04,160
were done. I couldn't believe it. Someone values their time. It's the way to go.

257
00:18:04,160 --> 00:18:07,840
Yeah, no kidding, right? And if you just get sick of dealing with customer service reps

258
00:18:07,840 --> 00:18:09,400
and we sound like they're reading a script, this is such a...

259
00:18:09,400 --> 00:18:11,520
Or they're trying to upsell you. God, that's my big pet peeve.

260
00:18:11,520 --> 00:18:16,120
You know, Mail Hauler in the chat room says that he went from $100 a month to around $20

261
00:18:16,120 --> 00:18:17,520
a month when he switched to Ting.

262
00:18:17,520 --> 00:18:18,520
Wow.

263
00:18:18,520 --> 00:18:19,520
Yeah.

264
00:18:19,520 --> 00:18:20,520
Nice.

265
00:18:20,520 --> 00:18:21,520
That's a nice savings and with the beginning of the new year, it's a better time than

266
00:18:21,520 --> 00:18:25,800
now to get started and I think you'll see why I've been so happy with my Ting service.

267
00:18:25,800 --> 00:18:30,120
All right, so I'm bringing in the mumble room here. I wanted to start, you know, one thing

268
00:18:30,120 --> 00:18:34,960
I realized after this week's Linux action show, I made a huge mistake.

269
00:18:34,960 --> 00:18:35,960
Get it out of here.

270
00:18:35,960 --> 00:18:41,160
I completely, completely forgot to make a Wayland type prediction. And I know Ron's

271
00:18:41,160 --> 00:18:44,040
in the chat room here has a Wayland prediction as well, but I want to lay mine out and then

272
00:18:44,040 --> 00:18:51,440
we'll turn it over to him. So I think you're going to see in 2014, it's not, I don't know

273
00:18:51,440 --> 00:18:58,120
if competition is the right word, but if you're a distro out there, Ubuntu isn't in this camp.

274
00:18:58,120 --> 00:19:01,720
If you're a distro out there shipping this year, say the second round of releases in

275
00:19:01,720 --> 00:19:06,560
2014 and you don't have decent, some decent Wayland implementation that people can try

276
00:19:06,560 --> 00:19:11,400
out, even if it's sort of like what Fedora did this time around, that's going to be like

277
00:19:11,400 --> 00:19:15,640
a check mark in the anti column in the reviews. Like the people are reviewing it, we'll look

278
00:19:15,640 --> 00:19:19,280
at that and go, oh, well you can't even play with Wayland in this release. Like that's,

279
00:19:19,280 --> 00:19:23,520
that's going to become like one of the competitive features for distributions to have in there.

280
00:19:23,520 --> 00:19:27,460
Maybe not the first release of 2014, but their second release of 2014. Now, Ron's, I know

281
00:19:27,460 --> 00:19:31,200
you had a Roins. I'm not sure if I'm saying that right. I'm sure I'm not saying that right,

282
00:19:31,200 --> 00:19:34,320
but I know you had a Wayland prediction. What is it?

283
00:19:34,320 --> 00:19:39,840
I believe that in maybe, as I said, the second term of releases, um, in 2014, we're going

284
00:19:39,840 --> 00:19:47,720
to see possibly maybe gen two or the more bleeding edge distros to have such good Wayland

285
00:19:47,720 --> 00:19:53,920
support. Um, maybe for arch, the arch build system that is simple as rebuilding the package

286
00:19:53,920 --> 00:20:00,560
with Wayland support and getting, of course, Gnome and KDE support Wayland will have, so

287
00:20:00,560 --> 00:20:05,120
you don't have to run X client soon. It'll be pure Western Wayland.

288
00:20:05,120 --> 00:20:10,840
Do you think maybe like mid 2014, all of the gnome packages on my arch installation will

289
00:20:10,840 --> 00:20:15,160
update with Wayland support. And then at that point, all's I have to do is go over to the

290
00:20:15,160 --> 00:20:19,360
arch wiki, look at the article about switching over to Wayland and make the switch and I'm

291
00:20:19,360 --> 00:20:20,360
ready to go.

292
00:20:20,360 --> 00:20:21,360
Yeah.

293
00:20:21,360 --> 00:20:28,200
That's bold. So you're thinking I could actually run my whole desktop in 2014. You think like,

294
00:20:28,200 --> 00:20:30,960
what about like, what about like, uh, graphics drivers?

295
00:20:30,960 --> 00:20:37,560
Well, if you're on Intel, um, the Western Wayland drivers have already, um, solid Intel

296
00:20:37,560 --> 00:20:39,360
supports them. Um,

297
00:20:39,360 --> 00:20:45,280
I was gonna say, what about the Radeon drivers on the open source drill?

298
00:20:45,280 --> 00:20:50,400
Well, the open source drivers have, uh, of course going to adopt Wayland quicker than

299
00:20:50,400 --> 00:20:55,960
the proprietary ones, but it really, maybe we could see the proprietary one supporting

300
00:20:55,960 --> 00:21:04,400
Mia simply because steam, um, they want to support Ubuntu, but the open source drivers,

301
00:21:04,400 --> 00:21:06,440
they will support standard, which is Wayland.

302
00:21:06,440 --> 00:21:10,240
All right. Well, let me ask you guys this. Cause, uh, Corky in the chat room is saying

303
00:21:10,240 --> 00:21:15,120
that Wayland. And I think he means in terms of performance will be better than X 11 by

304
00:21:15,120 --> 00:21:22,520
December of 2014. I happen to disagree. I think at the, I think in December of 2014

305
00:21:22,520 --> 00:21:29,320
we'll have the pharaonic benchmarks and they'll show that X still has on games, the lead,

306
00:21:29,320 --> 00:21:30,520
but it's closer.

307
00:21:30,520 --> 00:21:33,640
I would say it's closer. Yeah. I mean, cause you got to figure out what's excellence, what,

308
00:21:33,640 --> 00:21:36,640
30 years, something like that. I mean, you know, it's got a little bit of a head start.

309
00:21:36,640 --> 00:21:39,920
Right. I think all these games are going to be using some sort of, you know, X Wayland

310
00:21:39,920 --> 00:21:45,720
compatibility and they're all going to be, I mean, for a long time, like years. So I

311
00:21:45,720 --> 00:21:51,320
just, I think like, like you'll see like, uh, I don't know, maybe you'll see like the

312
00:21:51,320 --> 00:21:56,920
window managers and the compositing, like all that kind of cleans up as a lot faster,

313
00:21:56,920 --> 00:22:00,540
but the stuff people actually use where they really need high performance, like so window

314
00:22:00,540 --> 00:22:06,580
draws will be faster, right? That'll be great. Menus and blurs and textures will be faster,

315
00:22:06,580 --> 00:22:11,240
but like games that I installed from steam will not actually see any big benefit from

316
00:22:11,240 --> 00:22:12,240
this in 2014.

317
00:22:12,240 --> 00:22:18,000
I've got one, uh, I've got one Wayland prediction for 2014 and that is the monkey suit.

318
00:22:18,000 --> 00:22:22,720
Oh yeah. No, that's going to happen. Yeah. That's hanging up in the closet right now,

319
00:22:22,720 --> 00:22:23,720
actually.

320
00:22:23,720 --> 00:22:28,640
I just like to expand on what you said. If you look at the way Wayland works, basically

321
00:22:28,640 --> 00:22:34,280
it's a protocol. Western is its implementation. So if you want your fancy window managers

322
00:22:34,280 --> 00:22:41,080
like, um, awesome to work in Wayland, you basically write a Western plugin for that.

323
00:22:41,080 --> 00:22:49,160
I imagine Gnome and KDE, um, their compositors are Mutter and Kaywin, their window managers.

324
00:22:49,160 --> 00:22:54,720
That's basically just a plugin for Wayland, um, or Western. That's all it is.

325
00:22:54,720 --> 00:23:00,440
I think, um, I think in 2014 you're going to see a lot more apps, um, adding Wayland

326
00:23:00,440 --> 00:23:06,560
support and then in 2015 it's going to be refinement time and then by 2016 and it's

327
00:23:06,560 --> 00:23:10,280
going to be refined and you're going to start seeing a lot more people actually using Wayland

328
00:23:10,280 --> 00:23:11,280
on distros.

329
00:23:11,280 --> 00:23:15,960
So you think it's not until 2016 that we're going to have the sweet, sweet life of performance

330
00:23:15,960 --> 00:23:18,120
and optimizations and all that kind of stuff?

331
00:23:18,120 --> 00:23:23,720
Yeah, because there's still a lot of apps and, and, and applications that haven't, uh,

332
00:23:23,720 --> 00:23:28,600
you know, added the support for Wayland yet. And I think that's going to be all, all during

333
00:23:28,600 --> 00:23:35,560
2014 and then in 2015 it's just going to be refining those packages and then 2016 it's,

334
00:23:35,560 --> 00:23:39,920
it's, it's going to be refined. It's going to be available and it's going to be easier

335
00:23:39,920 --> 00:23:45,360
to use than ever. It's still going to have some flaws, but it'll be, it'll be pretty

336
00:23:45,360 --> 00:23:46,360
good.

337
00:23:46,360 --> 00:23:49,320
All right. I think this one's pretty easy to make. Uh, SteamOS doesn't go anywhere near

338
00:23:49,320 --> 00:23:52,720
Wayland in 2014. All X all the time.

339
00:23:52,720 --> 00:23:56,640
Yeah. Yeah. Why would they, they have no reason to, um, their, their goal is not to try and

340
00:23:56,640 --> 00:23:59,760
push Wayland. Their goal is to get you to play video games. Right? Yeah, exactly. You

341
00:23:59,760 --> 00:24:05,000
know, seems kind of obvious. Yeah. Yeah. Uh, yeah, go ahead.

342
00:24:05,000 --> 00:24:11,720
Just like the, I don't, I'm not, um, I'm doubting anyone's knowledge here, but porting apps

343
00:24:11,720 --> 00:24:17,120
over to Wayland isn't as difficult as it sounds. If the toolkit supports Wayland, getting your

344
00:24:17,120 --> 00:24:19,840
programs for Wayland is not going to be too difficult.

345
00:24:19,840 --> 00:24:24,280
It's just a matter of doing it right on a matter of motivation. Quite honestly, it'll

346
00:24:24,280 --> 00:24:28,760
depend too. Like, so stuff that like stuff that really only uses cutie or GTK to get,

347
00:24:28,760 --> 00:24:31,720
you know, what it needs on the screen, they're going to almost have the work done for them

348
00:24:31,720 --> 00:24:37,200
by, by the upstream toolkit. But, uh, you know, things like video games, that's not

349
00:24:37,200 --> 00:24:42,280
necessarily the same thing or, or certain things like I would think a Lightworks comes

350
00:24:42,280 --> 00:24:47,080
to mind or blender. I'm not quite sure what the situation is there or anything that kind

351
00:24:47,080 --> 00:24:51,800
of has some customizations where they've either written their own toolkit or they've made

352
00:24:51,800 --> 00:24:55,040
changes to it. You know, those kinds of apps I'm thinking about where they just don't quite

353
00:24:55,040 --> 00:25:01,160
look like any other Linux desktop app. I think those kinds of things will struggle in 2014

354
00:25:01,160 --> 00:25:07,200
with Wayland. Yes. Well, the games, if OpenGL and SDL support Wayland and the games written

355
00:25:07,200 --> 00:25:11,600
in SDL and OpenGL chances are that game's going to be able to be ported over fairly

356
00:25:11,600 --> 00:25:16,620
simply. Yeah. I know that's what people say. And I still come back to the, everybody seems

357
00:25:16,620 --> 00:25:20,000
to think that developers are thinking, Oh goodie, we get to port something over something

358
00:25:20,000 --> 00:25:23,280
we didn't have to a month ago. No one cares. I mean, I don't think they really give a

359
00:25:23,280 --> 00:25:28,840
rat's butt. They're just now porting everything over to Linux now and they're getting, they're

360
00:25:28,840 --> 00:25:32,520
getting X support now and now they're gonna have to switch to Wayland. Well, if I'm them,

361
00:25:32,520 --> 00:25:36,600
I'm going to take my sweet time. If they do it right and they write to the, the underlying

362
00:25:36,600 --> 00:25:40,160
subsystems like OpenGL and all that kind of stuff. And then all you have to have is the

363
00:25:40,160 --> 00:25:44,120
change made at that level. And then everything that uses that will then use the new technology.

364
00:25:44,120 --> 00:25:47,560
But I think it's, I don't think it's as clear cut as that with some of this stuff. And I

365
00:25:47,560 --> 00:25:51,880
think the motivation is really the key issue. You know, end users are looking forward to

366
00:25:51,880 --> 00:25:55,800
this. Developers are thinking, God, I just got this work and leave me alone. Here's my

367
00:25:55,800 --> 00:26:00,400
big hope for Wayland. It's not really a prediction, but I really hope that if they do eventually

368
00:26:00,400 --> 00:26:05,800
get proprietary drivers, that a new version of Wayland doesn't necessarily break the proprietary

369
00:26:05,800 --> 00:26:09,560
driver like it did in Xorg. I don't think so. Because you know, this is a, you know,

370
00:26:09,560 --> 00:26:12,840
cause what they're going to have is protocol level support, right? So if you write to this

371
00:26:12,840 --> 00:26:16,160
version of the protocol, you get this. And then they just have a new version of the protocol,

372
00:26:16,160 --> 00:26:20,000
which gives you the new features. They shouldn't have to deprecate the old version. I wouldn't

373
00:26:20,000 --> 00:26:24,500
think, but you know, I look at this and during the last live stream on Sunday, we played

374
00:26:24,500 --> 00:26:29,280
this Intel video and the whole time and the whole video, Intel's talking about Wayland

375
00:26:29,280 --> 00:26:34,760
and it's a very nice sort of like infograph meets YouTube. And, and really what they,

376
00:26:34,760 --> 00:26:41,820
what they care about is digital signs, infotainment in cars, mobile devices. In fact, the Linux

377
00:26:41,820 --> 00:26:46,000
desktop in this video, all about Wayland is not even mentioned once, not a single desktop

378
00:26:46,000 --> 00:26:50,040
app, not anything about the Linux desktop at all. And so what I, what that to me means

379
00:26:50,040 --> 00:26:55,080
is the corporate backing isn't going to be on the desktop side of things. There's not

380
00:26:55,080 --> 00:26:59,040
going to be a lot of people spending a lot of money on moving over desktop applications

381
00:26:59,040 --> 00:27:02,800
to support that. So that two things that means to me is X Wayland is going to be around for

382
00:27:02,800 --> 00:27:07,420
a long time. That's pretty obvious. But the second thing that that I think unfortunately

383
00:27:07,420 --> 00:27:12,920
means is maybe, unfortunately or not, is all our hopes are in the toolkits, the QT guys

384
00:27:12,920 --> 00:27:18,320
and the GTK guys and what they do. And all hopes depend on them to do it right because

385
00:27:18,320 --> 00:27:22,760
they're going to bring everything along with them that uses those toolkits. And I think,

386
00:27:22,760 --> 00:27:28,320
oh, sorry. I think the proprietary drivers, you're probably going to see like an alpha

387
00:27:28,320 --> 00:27:34,400
release for proprietary drivers in 2015 I'd say, cause these guys aren't really going

388
00:27:34,400 --> 00:27:38,800
to jump on the bandwagon so quick. I mean, these companies, they're really slow.

389
00:27:38,800 --> 00:27:41,840
Intel might, right? I mean, Intel might, but yeah.

390
00:27:41,840 --> 00:27:45,520
If they can see a clear, clear cut benefit, absolutely. They'll jump all over it. Otherwise

391
00:27:45,520 --> 00:27:46,520
they don't care.

392
00:27:46,520 --> 00:27:50,800
I just, I mean, I've been burned so many times by Wayland predictions. Like if you go back

393
00:27:50,800 --> 00:27:54,600
over the years, a few years in a row, I've made Wayland predictions that just didn't

394
00:27:54,600 --> 00:27:59,180
pan out, but I kind of feel like this is the year that it does. And I, it's almost the

395
00:27:59,180 --> 00:28:03,700
more dangerous thing to say famous last words, but I just, it feels like things are more

396
00:28:03,700 --> 00:28:07,160
serious this time. There's more money behind it. There's more momentum and there's more

397
00:28:07,160 --> 00:28:09,120
of a recognized need too.

398
00:28:09,120 --> 00:28:14,880
I predict that we're going to keep predicting about Wayland for another three or four years.

399
00:28:14,880 --> 00:28:18,760
Yeah, I agree with that. That's true.

400
00:28:18,760 --> 00:28:21,200
What do you guys think about Mir?

401
00:28:21,200 --> 00:28:25,640
Yeah, we should probably talk about Mir a little bit, huh? We should, yeah.

402
00:28:25,640 --> 00:28:28,800
What do you think about that island out there in the sea?

403
00:28:28,800 --> 00:28:33,320
Well, so now that we look at it, I think it's pretty clear that Mir is an Ubuntu specific

404
00:28:33,320 --> 00:28:40,800
solution because just like we mentioned how QT and GTK and others will be building in

405
00:28:40,800 --> 00:28:45,360
the backend support to move over to Wayland, Unity will have the backend hooks to talk

406
00:28:45,360 --> 00:28:49,320
to Mir. And if you don't have something written to talk to Mir, you're not going to run on

407
00:28:49,320 --> 00:28:53,280
top of Mir unless you do it through xMir.

408
00:28:53,280 --> 00:28:58,840
And so it's going to be, it's almost hard to compare the two because Mir is only going

409
00:28:58,840 --> 00:29:02,760
to be on Ubuntu and we know we're not really going to see much of it in 2014.

410
00:29:02,760 --> 00:29:06,000
I think we're going to, I think it's probably going to keep pace with, I mean to a degree

411
00:29:06,000 --> 00:29:10,240
with only Ubuntu specific monkey suits happening either way. But I think it's in an Ubuntu

412
00:29:10,240 --> 00:29:13,360
specific sort of way, I think that it's going to be kind of like an upstart versus system

413
00:29:13,360 --> 00:29:18,200
D situation to where they kind of run in tandem. They're running alongside of each other and

414
00:29:18,200 --> 00:29:22,280
everybody's kind of doing their own thing, but I don't see explosive activity.

415
00:29:22,280 --> 00:29:26,920
They're almost not in, you know, now that I look at it after we've had a few months,

416
00:29:26,920 --> 00:29:33,960
actually half the year to sort of think about it, it's not in competition with Wayland.

417
00:29:33,960 --> 00:29:39,400
Wayland is on its own track. It has its, you know, it's a wider industry proposition.

418
00:29:39,400 --> 00:29:45,960
Mir's actual specific success is if it achieves exactly or even barely what they need for

419
00:29:45,960 --> 00:29:51,560
Ubuntu. And if it accomplishes that, it is technically successful because it's not a

420
00:29:51,560 --> 00:29:52,760
Wayland competitor.

421
00:29:52,760 --> 00:29:57,880
Wayland is a solution for all of Linux and for multiple types of devices. Mir is a solution

422
00:29:57,880 --> 00:29:58,880
for Ubuntu.

423
00:29:58,880 --> 00:29:59,880
Yeah.

424
00:29:59,880 --> 00:30:06,960
So basically, Microsoft is going to get less and less attention over the year 2014 and

425
00:30:06,960 --> 00:30:09,240
Canonical is going to become more like Microsoft.

426
00:30:09,240 --> 00:30:11,600
No, that's Google's job.

427
00:30:11,600 --> 00:30:12,600
Oh!

428
00:30:12,600 --> 00:30:16,900
No, it's going to be Google this, Google that. I mean, it's going to be Chromebooks and Android

429
00:30:16,900 --> 00:30:20,840
devices in the tech news for the next, for 2014. It's going to dominate it. Just watch.

430
00:30:20,840 --> 00:30:27,320
All right. Well, I got a couple of predictions along that line. Specifically, like the mobile

431
00:30:27,320 --> 00:30:29,920
stuff. So is there any other thoughts on Mir or Wayland before we move to another?

432
00:30:29,920 --> 00:30:37,040
Well, I was going to say, I'm kind of wondering if with there being XMir and XWayland, whether

433
00:30:37,040 --> 00:30:45,200
developers won't just stick with X, so their applications can work on both. So we'll have

434
00:30:45,200 --> 00:30:51,880
those better solutions, but not applications that actually take advantage of them.

435
00:30:51,880 --> 00:30:57,880
Our desktop environments will speak directly to the display server and all the applications

436
00:30:57,880 --> 00:31:01,280
we run on top of them will be using an X11 compatibility thing.

437
00:31:01,280 --> 00:31:02,880
It's going to be a long time, guys.

438
00:31:02,880 --> 00:31:06,600
Yeah. None of this happens. You're going to have to hold a stick up to see any of it move.

439
00:31:06,600 --> 00:31:12,320
I think what you might start to see, if we're really lucky at the end of 2014, we'll see

440
00:31:12,320 --> 00:31:18,240
that the XWayland stuff and the XMir stuff is able to take advantage of so many efficiencies

441
00:31:18,240 --> 00:31:23,200
by replacing the display server underneath that maybe performance will be equal or even

442
00:31:23,200 --> 00:31:24,200
better.

443
00:31:24,200 --> 00:31:29,280
I mean, that'd be awesome. If we have such efficiencies in new code design, because everybody

444
00:31:29,280 --> 00:31:34,080
knows Xorg is such a beast, that if by totally getting rid of all of that plumbing and having

445
00:31:34,080 --> 00:31:39,000
a cleaner pipeline that goes directly from the desktop to the display driver to the kernel

446
00:31:39,000 --> 00:31:43,040
to the hardware, et cetera, et cetera, that whole path is much more efficient.

447
00:31:43,040 --> 00:31:46,240
Even though you're running something through emulation, just like we've all seen sometimes

448
00:31:46,240 --> 00:31:50,320
when you run a wine game under Linux, it actually performs better than it does under Windows

449
00:31:50,320 --> 00:31:53,960
in certain circumstances, maybe we'll see that same kind of thing happen with stuff

450
00:31:53,960 --> 00:31:57,160
running under X emulation on these new display servers.

451
00:31:57,160 --> 00:31:58,160
Yeah.

452
00:31:58,160 --> 00:32:03,560
All right. Well, before we get to our next category of predictions, I got a little prediction

453
00:32:03,560 --> 00:32:08,640
for all of you guys. This is going to be... Actually, I'm not even kidding. This is really going

454
00:32:08,640 --> 00:32:12,640
to be the year where we all continue to build out our own cloud, and that's why I'm so happy

455
00:32:12,640 --> 00:32:17,800
that DigitalOcean is a sponsor of Linux Unplugged, because they are going to enable this for

456
00:32:17,800 --> 00:32:22,200
a lot of us. DigitalOcean is simple cloud hosting dedicated to offering the most intuitive

457
00:32:22,200 --> 00:32:25,680
and easy way to spin up a cloud server, and you get root access to this thing when they

458
00:32:25,680 --> 00:32:26,680
spin this up.

459
00:32:26,680 --> 00:32:31,160
Now, check this out. Users can create a cloud server in 55 seconds, and pricing plans start

460
00:32:31,160 --> 00:32:36,000
at only $5 per month, which gets you 512 megs of RAM, a 20 gigabyte SSD, and a terabyte

461
00:32:36,000 --> 00:32:40,640
of transfer. You think about all the different types of devices you can put Linux on. When

462
00:32:40,640 --> 00:32:45,820
you put a Linux box out there with 512 megs of RAM and a 20 gig SSD, that thing can... As

463
00:32:45,820 --> 00:32:51,640
a server, you will be amazed at the performance you can get out of a Linux box in these conditions.

464
00:32:51,640 --> 00:32:56,640
I've got a box up there right now that's doing all kinds of backend. Frequently, I have it

465
00:32:56,640 --> 00:33:01,480
recording a second backup copy of our live stream in case we have an outage. I have it

466
00:33:01,480 --> 00:33:05,800
distributing files for the Unfilter show. Gigabytes. Gigabytes and gigabytes and gigabytes

467
00:33:05,800 --> 00:33:11,980
of files now, like 20 gigabytes worth of files that it's constantly sending out and distributing

468
00:33:11,980 --> 00:33:16,560
to our Unfilter supporters. I have all kinds of different tasks that I can spin up on it

469
00:33:16,560 --> 00:33:22,840
really quick. When you're paying $5 a month, there's so many great advantages of productivity

470
00:33:22,840 --> 00:33:29,120
and testing and just experimentation and training and self-learning that $5 is just an insane

471
00:33:29,120 --> 00:33:32,880
value. DigitalOcean has data centers in New York, San Francisco, and Amsterdam. You can

472
00:33:32,880 --> 00:33:35,960
distribute it out as you want. I've picked New York. That way, I have something on the

473
00:33:35,960 --> 00:33:40,720
other side of the coast. Their interface is simple. They have an intuitive control panel.

474
00:33:40,720 --> 00:33:44,520
Power users can even set up and replicate it on their own by using their straightforward

475
00:33:44,520 --> 00:33:50,000
API. DigitalOcean also offers a vast collection of tutorials in their community section on

476
00:33:50,000 --> 00:33:55,960
their site. Users who submit articles can get $50 per published piece. Here's a great

477
00:33:55,960 --> 00:34:00,800
article. This hit our Linux action show subreddit this week. How to create a Beowulf cluster

478
00:34:00,800 --> 00:34:04,320
using a.212.04 VPS instances on DigitalOcean.

479
00:34:04,320 --> 00:34:05,320
Nice.

480
00:34:05,320 --> 00:34:07,320
A Beowulf cluster, Matt.

481
00:34:07,320 --> 00:34:10,920
Wow. Wow. They really went there. Okay, that's awesome.

482
00:34:10,920 --> 00:34:16,920
I know. How cool is that? It really is, right? I'm pretty impressed by that. I don't know

483
00:34:16,920 --> 00:34:21,800
if I'd be using that, but for the training aspect of it, it's actually kind of a great

484
00:34:21,800 --> 00:34:27,360
opportunity. The way DigitalOcean pricing works is for $5, you get $5 a month, you get

485
00:34:27,360 --> 00:34:30,800
a quantified cost, you get a machine you can always access. If you just want to do some

486
00:34:30,800 --> 00:34:36,000
basic testing, they also offer hourly pricing. If you're working on an open source project

487
00:34:36,000 --> 00:34:40,160
or I mean, gosh, maybe it's closed source.

488
00:34:40,160 --> 00:34:43,100
It's negative in the freedom dimension.

489
00:34:43,100 --> 00:34:48,040
You could upload it to DigitalOcean, use the hourly pricing, and have people all over the

490
00:34:48,040 --> 00:34:51,560
world bang on it for a while, give you real world performance reports. You don't have

491
00:34:51,560 --> 00:34:55,640
to worry about configuring your firewall. Look at these prices. I mean, it's unbeatable

492
00:34:55,640 --> 00:35:00,600
what you can do. The great thing is the control panel is so nice you can, like what I've done,

493
00:35:00,600 --> 00:35:05,120
I have an arch server, yes, I said arch, set up on DigitalOcean and I image that sucker

494
00:35:05,120 --> 00:35:08,720
and when I want to deploy another one, I can just redeploy that image. It's ready to go.

495
00:35:08,720 --> 00:35:12,960
It's super quick. You combine that with pay-as-you-go pricing, that's going to be really easy.

496
00:35:12,960 --> 00:35:17,880
Here's how you get started. Go over to DigitalOcean.com. Check out what we've been talking about. If

497
00:35:17,880 --> 00:35:22,000
you have a bad memory, just go to any recent episode of Linux Unplugged. Go down to the

498
00:35:22,000 --> 00:35:25,640
show notes. We have a banner right there for DigitalOcean and if you use our promo code

499
00:35:25,640 --> 00:35:29,240
Linux Unplugged December. Now, it's going to work for a little bit longer, but take

500
00:35:29,240 --> 00:35:33,480
advantage of this while you can. Linux Unplugged December. You'll get a $10 credit. That'll

501
00:35:33,480 --> 00:35:37,840
let you try out the $5 server for two months or you can get the $10 server for one month.

502
00:35:37,840 --> 00:35:42,100
I've been using the $5 server for a few months now and it's awesome. It's great. I really

503
00:35:42,100 --> 00:35:47,560
like it. Go to DigitalOcean.com, Linux Unplugged December to get that $10 credit and I think

504
00:35:47,560 --> 00:35:51,400
you're going to be really impressed. This is really an awesome service and the performance

505
00:35:51,400 --> 00:35:55,360
has been great. I just updated my Archbox last night and I just sit there and I watch

506
00:35:55,360 --> 00:35:59,760
those download speeds as it writes those transactions to the SSD and I'm just like, oh gosh, yes.

507
00:35:59,760 --> 00:36:04,600
And here's something I could see someone using it for too. Let's say you have an Arch install

508
00:36:04,600 --> 00:36:09,600
and you're thinking, oh, you know, I want to actually try, I read mixed signals in this

509
00:36:09,600 --> 00:36:12,200
one package and I'm not really sure if it's going to build right. I don't really want

510
00:36:12,200 --> 00:36:15,560
to hose my system, but I want just kind of a test bed to test out different packages

511
00:36:15,560 --> 00:36:18,560
that maybe have an iffy history. It's a great place to do that kind of stuff. You don't

512
00:36:18,560 --> 00:36:21,980
have to be super geeky with it. You can use it as a tool just to try things out where

513
00:36:21,980 --> 00:36:25,200
you don't want to do it on your main computer. And the snapshots make it easy to roll back.

514
00:36:25,200 --> 00:36:29,880
Pirate Ghost. Pirate Ghost in our chat room, which is a great name, says, I have 11 VPSs

515
00:36:29,880 --> 00:36:36,180
on DigitalOcean. Nice. How about that? They also are pretty cool about, he says, helping

516
00:36:36,180 --> 00:36:40,840
him with working on open source projects. That's cool. Yeah. So big thanks to DigitalOcean

517
00:36:40,840 --> 00:36:47,440
for sponsoring Linux Unplugged. Okay. So this is kind of a spinoff of the prediction I made

518
00:36:47,440 --> 00:36:52,680
on Sunday, but I want to revisit this in light of a story that came out and I didn't cover

519
00:36:52,680 --> 00:36:56,600
it in last because it didn't really seem, at the time when I thought about it at first,

520
00:36:56,600 --> 00:37:00,720
it didn't seem Linux specific enough to me to talk about it on the Linux Action Show.

521
00:37:00,720 --> 00:37:04,080
But now that I think about the larger ramifications of this story, I actually think it's very

522
00:37:04,080 --> 00:37:10,440
much going to become a Linux story. And what I'm talking about is these recent published

523
00:37:10,440 --> 00:37:16,460
reports from Der Spiegel that the NSA is intercepting laptops and other hardware like routers and

524
00:37:16,460 --> 00:37:21,200
firewalls purchased online and they can intercept the package when it leaves the company you

525
00:37:21,200 --> 00:37:27,280
buy it from, say Dell, and they will install malware, in some cases hardware, in some cases

526
00:37:27,280 --> 00:37:34,120
software, to do whatever the hell they want. The report indicates also, by the way, some

527
00:37:34,120 --> 00:37:39,120
of the companies including this, let me see, I'll find it right here. Oh, here we go. Dell's

528
00:37:39,120 --> 00:37:45,120
in there. Shocker! Yeah, I know, right? Western Digital, Seagate, Juniper Networks, MacStore,

529
00:37:45,120 --> 00:37:51,280
Samsung, Hawaii, and Microsoft are included in companies in this report that says they

530
00:37:51,280 --> 00:37:56,160
worked with. The report even indicates the NSA can even exploit air reports from Microsoft

531
00:37:56,160 --> 00:37:59,800
Windows operating systems by intercepting the air reports and determining what is wrong

532
00:37:59,800 --> 00:38:04,000
with the target's computer and then the NSA can attack it with Trojans or other malware.

533
00:38:04,000 --> 00:38:09,400
That's just so sleazy. To gain physical access, the NSA reportedly worked with the CIA and

534
00:38:09,400 --> 00:38:15,080
the FBI on sensitive missions that sometimes included flying NSA agents on FBI jets to

535
00:38:15,080 --> 00:38:18,880
plant wiretaps that gets them to their destination at the right time so they can help disappear

536
00:38:18,880 --> 00:38:24,280
again undetected after even as little of a half hour's work, the report notes. So what

537
00:38:24,280 --> 00:38:30,040
you have here is machines, and here's an example of what they call a hardware implant. One

538
00:38:30,040 --> 00:38:34,720
of the products the NSA appears to use, compromises target's computer, is codenamed Cottonmouth,

539
00:38:34,720 --> 00:38:39,280
and it's been available since 2009. It's a USB hardware implant that secretly provides

540
00:38:39,280 --> 00:38:43,880
the NSA with remote access to the compromised machine. Some of these, like you format the

541
00:38:43,880 --> 00:38:49,040
machine, you wipe the master boot record, you delete the petition table, some of these

542
00:38:49,040 --> 00:38:54,680
actually will reinstall themselves after you wipe. Now everything appears to be sort of

543
00:38:54,680 --> 00:39:01,340
targeting Windows. You look at a lot of this stuff, and once again, it's requiring either

544
00:39:01,340 --> 00:39:05,980
cooperation with the manufacturer or the fact that they can take advantage of zero-day exploits

545
00:39:05,980 --> 00:39:13,800
or whatever it is. I read this and I think these NSA leaks, in 2014, what we'll see is

546
00:39:13,800 --> 00:39:19,840
security becoming a sexy feature that companies are going to compete on. Linux and open source

547
00:39:19,840 --> 00:39:25,480
will inherently be better suited to meet and increase demand there, and I think specifically

548
00:39:25,480 --> 00:39:29,920
you're going to see a lot of new secure chat programs, file transfers will explode, secure

549
00:39:29,920 --> 00:39:33,360
file transfers are going to explode in 2014. We're going to have our pick of our litter,

550
00:39:33,360 --> 00:39:37,140
and some of them will be closed source, but a lot of them, because what's going to happen

551
00:39:37,140 --> 00:39:40,080
is first you'll have a first round of stuff that's closed source. You've already seen

552
00:39:40,080 --> 00:39:42,920
a few of these new chat programs that have come out that have been closed source, and

553
00:39:42,920 --> 00:39:47,080
the first thing everybody now says is, well, it's not open source, how can I trust it?

554
00:39:47,080 --> 00:39:51,360
Everybody's saying that now. So the next competitive step people are going to have to make in order

555
00:39:51,360 --> 00:39:55,440
to check that box off and be competitive is they're going to have to go open source. So

556
00:39:55,440 --> 00:40:01,120
as a result of trying to chase these sexy features they can sell to consumers, they'll

557
00:40:01,120 --> 00:40:05,080
open source the software so that way they can say, well, here's the software, it's open

558
00:40:05,080 --> 00:40:07,760
source, pay us for the service.

559
00:40:07,760 --> 00:40:10,960
So I mean, here's the bigger thing that I see exploding with that, because all these

560
00:40:10,960 --> 00:40:16,540
things are great, and unless you know how to audit code, and I sure as hell don't, open

561
00:40:16,540 --> 00:40:19,960
source or closed source, that's awesome, but even if it starts out open source, you

562
00:40:19,960 --> 00:40:23,120
get it on your system that's perhaps already infected with something that you don't know,

563
00:40:23,120 --> 00:40:27,600
so you've taken benign software on an infected system that's got some weird hardware hack

564
00:40:27,600 --> 00:40:28,600
thing going on.

565
00:40:28,600 --> 00:40:33,280
Here's what I see being successful. Someone opens up a consultant firm that will actually

566
00:40:33,280 --> 00:40:37,600
audit your hardware. That's what I want to see. I want to see someone that actually

567
00:40:37,600 --> 00:40:41,280
– that people can vet that can actually see what they're doing and actually have

568
00:40:41,280 --> 00:40:45,920
a success record to look at. I think that's probably the only real defense against this,

569
00:40:45,920 --> 00:40:51,360
because you can – otherwise, it's just peanuts and beer at that point. Peanuts make

570
00:40:51,360 --> 00:40:55,820
you thirsty. You're going to have more beer. Or the security industry with the firewall

571
00:40:55,820 --> 00:40:58,400
programs and various security programs you see in Windows.

572
00:40:58,400 --> 00:40:59,400
You can see that, but you do have the advantage –

573
00:40:59,400 --> 00:41:00,400
I'm not buying it.

574
00:41:00,400 --> 00:41:03,200
You have the advantage, like what happened with the – I mean, I see what you're saying

575
00:41:03,200 --> 00:41:07,280
there. You and I would not really be able to check it, but you have the example of the

576
00:41:07,280 --> 00:41:10,200
TrueCrypt project where enough in the community could get together and say, we're going

577
00:41:10,200 --> 00:41:11,440
to audit this as a community.

578
00:41:11,440 --> 00:41:16,400
Oh, yeah. It's great coming down to your computer, but what if – and again, look

579
00:41:16,400 --> 00:41:20,600
how – I hate to be paranoid, but look what's already happening. What if you have a setup

580
00:41:20,600 --> 00:41:23,540
on your computer you're not aware of that takes a benign program that's completely

581
00:41:23,540 --> 00:41:28,140
safe and makes it unsafe on your computer? It becomes a mood issue.

582
00:41:28,140 --> 00:41:35,160
This is more of a threat, I think, with Windows. What you have to do is you have to make best

583
00:41:35,160 --> 00:41:39,080
efforts, your best rational effort that you can make. The first thing is if you're really

584
00:41:39,080 --> 00:41:40,080
paranoid about security –

585
00:41:40,080 --> 00:41:41,600
Yeah, stop using Windows.

586
00:41:41,600 --> 00:41:45,960
You do. You seriously have to consider, well, if I really care about this, I should probably

587
00:41:45,960 --> 00:41:50,020
stop using Windows. It doesn't guarantee that some Linux box won't have something

588
00:41:50,020 --> 00:41:51,640
on there that is monitoring you and maybe –

589
00:41:51,640 --> 00:41:53,920
But Windows is slow-hanging fruit, certainly.

590
00:41:53,920 --> 00:41:58,520
Wouldn't it – what would really be scary is if some distro by default shipped it so

591
00:41:58,520 --> 00:42:02,080
that everything you typed into the launcher was sent over the network that somebody could

592
00:42:02,080 --> 00:42:06,120
capture. That would almost be insecure right out of the box and be really freaky, and if

593
00:42:06,120 --> 00:42:09,920
that ever got popular, it would be a heyday for the NSA. But as long as nothing like that

594
00:42:09,920 --> 00:42:10,920
happens.

595
00:42:10,920 --> 00:42:15,000
Yeah, I think at this point, Linux is definitely low-hanging fruit, or Windows is low-hanging

596
00:42:15,000 --> 00:42:20,120
fruit, and I think Linux is probably generally pretty safe at this point. That's not to

597
00:42:20,120 --> 00:42:22,800
say that embedded programs and things might not be an issue later on.

598
00:42:22,800 --> 00:42:23,800
Mumble – go ahead, Ryan.

599
00:42:23,800 --> 00:42:27,440
Create a hardware test, call it the Snowden test.

600
00:42:27,440 --> 00:42:28,440
There you go.

601
00:42:28,440 --> 00:42:32,600
Yeah, yeah. You plug it in and it runs a Snowden audit.

602
00:42:32,600 --> 00:42:33,600
Exactly.

603
00:42:33,600 --> 00:42:35,560
Make a little humming sound.

604
00:42:35,560 --> 00:42:36,920
Yeah, yeah, yeah.

605
00:42:36,920 --> 00:42:40,640
I think we just all need to learn how to build our own computers and make processors.

606
00:42:40,640 --> 00:42:41,640
Oh, geez.

607
00:42:41,640 --> 00:42:47,600
Absolutely. I got my clean room ready and I got my suit, so I'll get right on that.

608
00:42:47,600 --> 00:42:54,040
Maybe open source hardware will become a more popular thing because you can audit the hardware.

609
00:42:54,040 --> 00:42:57,120
What about something that sits on your network and is watching your machine?

610
00:42:57,120 --> 00:42:58,120
That would be the most effective.

611
00:42:58,120 --> 00:43:02,640
Like at the firewall level. Like this firewall includes packet inspection where we'll alert

612
00:43:02,640 --> 00:43:05,280
you if it looks like something's leaking from your computer.

613
00:43:05,280 --> 00:43:07,280
That would make the most sense to me because –

614
00:43:07,280 --> 00:43:08,280
Yeah.

615
00:43:08,280 --> 00:43:09,280
AT&SA.

616
00:43:09,280 --> 00:43:14,280
Yeah. I mean, it could be a marketing opportunity for PF Sense.

617
00:43:14,280 --> 00:43:18,240
I mean, at the end of the day, as Heaven's Revenge points out in the chat room, it's

618
00:43:18,240 --> 00:43:21,280
completely spot on. If someone wants to do something badly enough, they're going to

619
00:43:21,280 --> 00:43:25,480
do it. I mean, that's just what it is. All you can do is minimize that damage by using

620
00:43:25,480 --> 00:43:26,480
Linux.

621
00:43:26,480 --> 00:43:28,440
That's right. Yeah, exactly. That's where I go back to you just have to make the rational

622
00:43:28,440 --> 00:43:32,280
compromise. So you can't go tinfoil hat. You can't install a Faraday cage in your

623
00:43:32,280 --> 00:43:37,960
house. But what you can do is – we could. But again, there's like diminishing returns,

624
00:43:37,960 --> 00:43:44,000
right? But what you could do is use Linux. Use an open source email program. Use open

625
00:43:44,000 --> 00:43:50,760
hardware if you can. And I think that just – that base fact will drive human behavior

626
00:43:50,760 --> 00:43:54,400
towards open source and Linux. Not like – I don't know if it's going to be some sort

627
00:43:54,400 --> 00:43:59,400
of mass hysteria, but when you have decision makers, people who are designing systems for

628
00:43:59,400 --> 00:44:04,760
businesses that need to be secure, CEOs who are paranoid about corporate espionage and

629
00:44:04,760 --> 00:44:08,600
things like this. Because all these things the NSA is doing, some private company could

630
00:44:08,600 --> 00:44:09,600
do as well.

631
00:44:09,600 --> 00:44:10,600
That's true.

632
00:44:10,600 --> 00:44:15,580
In fact, in some cases, we have now documented evidence that the NSA has weakened industry

633
00:44:15,580 --> 00:44:19,280
standards to make their job easier and other attackers could just take advantage of those

634
00:44:19,280 --> 00:44:25,000
weaknesses too. Hello, RSA. Right? So it's one of these things where because the vulnerability

635
00:44:25,000 --> 00:44:28,920
exists, it's not just the NSA that can take advantage of it. So there's like all of

636
00:44:28,920 --> 00:44:32,840
these reasons that just stack up. And the rational person that really is concerned about

637
00:44:32,840 --> 00:44:36,600
this would have to – I mean, I think the decision you come to is some sort of open

638
00:44:36,600 --> 00:44:39,360
source system. Maybe it's not Linux. Maybe it's BSD.

639
00:44:39,360 --> 00:44:40,360
Exactly.

640
00:44:40,360 --> 00:44:41,360
But I think –

641
00:44:41,360 --> 00:44:44,680
The NSA uses Git for their software that exploits people.

642
00:44:44,680 --> 00:44:46,480
It's probably all CVS.

643
00:44:46,480 --> 00:44:49,800
Yeah, right. Microsoft Bob.

644
00:44:49,800 --> 00:44:55,240
Yeah. Anybody else have any NSA-related predictions in the chat room?

645
00:44:55,240 --> 00:44:59,400
I just want to say that you don't want to put tinfoil on your head because it will increase

646
00:44:59,400 --> 00:45:02,760
the signal. You want to put a wet towel. That's all I got to say.

647
00:45:02,760 --> 00:45:07,320
Good to know. Good to know. Good to know. All right. Well, any other predictions, Jerem?

648
00:45:07,320 --> 00:45:08,800
I'm opening up the floor now.

649
00:45:08,800 --> 00:45:09,800
Yeah.

650
00:45:09,800 --> 00:45:10,800
Go ahead.

651
00:45:10,800 --> 00:45:11,800
I've got a prediction about Canonical.

652
00:45:11,800 --> 00:45:12,800
Oh, okay. Let's do it.

653
00:45:12,800 --> 00:45:19,560
Yeah. And that is that I think by the end of next year, Canonical might announce that

654
00:45:19,560 --> 00:45:21,840
they're going to make their own kernel.

655
00:45:21,840 --> 00:45:22,840
So not a fork?

656
00:45:22,840 --> 00:45:25,040
That is optimized for mirror.

657
00:45:25,040 --> 00:45:30,640
It could be a fork, but I think that they're going to feel like they can't control Linux

658
00:45:30,640 --> 00:45:34,120
and they want something that is custom-tailored to their needs for mirror and stuff.

659
00:45:34,120 --> 00:45:38,920
So they'll have the Ubuntu kernel that's like a snapshot of like the semi-latest kernel

660
00:45:38,920 --> 00:45:41,520
that was out at the time they make this decision?

661
00:45:41,520 --> 00:45:42,520
Yes, exactly.

662
00:45:42,520 --> 00:45:43,520
Can I interject?

663
00:45:43,520 --> 00:45:44,520
Yeah.

664
00:45:44,520 --> 00:45:46,400
If Popey was here, he would add the Ubuntu Canonical.

665
00:45:46,400 --> 00:45:48,440
He is. He is here.

666
00:45:48,440 --> 00:45:53,840
Well, I'm sure he's going to add that Ubuntu has no intentions or never will modest by

667
00:45:53,840 --> 00:45:54,840
–

668
00:45:54,840 --> 00:45:59,000
So we took our kernel and we connected it to our display server and then connected it

669
00:45:59,000 --> 00:46:07,480
to our upstart in its system and then we just called it all one thing, the Ubuntu base.

670
00:46:07,480 --> 00:46:13,760
So I think first of all, you need to clarify what BitPuffin was suggesting because what

671
00:46:13,760 --> 00:46:17,440
I heard BitPuffin say and what Chris said were two different things.

672
00:46:17,440 --> 00:46:18,440
Yeah.

673
00:46:18,440 --> 00:46:19,440
No, I was just joking.

674
00:46:19,440 --> 00:46:20,440
Yeah.

675
00:46:20,440 --> 00:46:23,760
I heard and it sounds like he's trying to say that Canonical is going to turn Ubuntu

676
00:46:23,760 --> 00:46:25,400
into their own system completely.

677
00:46:25,400 --> 00:46:26,400
I can't see it.

678
00:46:26,400 --> 00:46:27,400
It's too much.

679
00:46:27,400 --> 00:46:30,880
Well, I think they would still like try to maintain some kind of Linux compatibility

680
00:46:30,880 --> 00:46:32,960
like they do with Xmerve.

681
00:46:32,960 --> 00:46:35,240
But BitPuffin, don't they have the best of both worlds right now?

682
00:46:35,240 --> 00:46:39,600
They get one of the best kernels out there developed by a different team and then they

683
00:46:39,600 --> 00:46:44,000
can pick the version they want to run and they can run that version for as long as they

684
00:46:44,000 --> 00:46:48,360
want to run it and do whatever patches they need to do to keep it secure.

685
00:46:48,360 --> 00:46:50,920
And so they can kind of do that now without having –

686
00:46:50,920 --> 00:46:52,400
That's exactly what we do.

687
00:46:52,400 --> 00:46:53,400
Yeah.

688
00:46:53,400 --> 00:46:58,080
We take a kernel and then we apply patches to it and that's our kernel.

689
00:46:58,080 --> 00:46:59,800
That seems like path least resistance, yeah.

690
00:46:59,800 --> 00:47:04,440
So I guess BitPuffin, for your prediction to work, you'd have to have some sort of decision

691
00:47:04,440 --> 00:47:09,520
the kernel team was making that was inherently incompatible with Ubuntu's goals.

692
00:47:09,520 --> 00:47:15,740
Yeah, something like that but also that they realize that Linux is a huge train that they

693
00:47:15,740 --> 00:47:20,360
really don't have any control over and if they want to have their own stuff, they're

694
00:47:20,360 --> 00:47:26,120
going to have to fork and stuff but then they can realize that Linux is like – it covers

695
00:47:26,120 --> 00:47:30,760
so many stuff that they don't really need and bending Linux to be the way that they

696
00:47:30,760 --> 00:47:34,560
would maybe need it to be would require it to –

697
00:47:34,560 --> 00:47:35,560
The herd kernel.

698
00:47:35,560 --> 00:47:36,560
A lot of more work basically.

699
00:47:36,560 --> 00:47:37,560
Yeah.

700
00:47:37,560 --> 00:47:38,560
I don't think that's –

701
00:47:38,560 --> 00:47:41,520
So maybe they would feel better to start from scratch and implement things that – ways

702
00:47:41,520 --> 00:47:43,840
that benefit them.

703
00:47:43,840 --> 00:47:48,440
I don't think that they can make a kernel that anywhere compares to Linux kernel.

704
00:47:48,440 --> 00:47:52,440
Maybe they could license the Microsoft kernel, 2014 Canonical Science License Agreement with

705
00:47:52,440 --> 00:47:53,440
Microsoft.

706
00:47:53,440 --> 00:47:57,240
I think you're kind of – yeah, it's kind of going like a ReactOS type of thing.

707
00:47:57,240 --> 00:48:00,280
So we're going to see what, Ubuntu NT edition?

708
00:48:00,280 --> 00:48:06,800
I would say if anyone is going to fork Linux, it's going to be the Mint guys because they

709
00:48:06,800 --> 00:48:08,120
just like forking stuff.

710
00:48:08,120 --> 00:48:09,740
No, it's going to be Google.

711
00:48:09,740 --> 00:48:13,760
This just strikes me and I hear this a lot.

712
00:48:13,760 --> 00:48:18,840
I don't want you to say this on IRC and it says this on podcast, this is – shock for

713
00:48:18,840 --> 00:48:22,600
you, you're not the first person to suggest this.

714
00:48:22,600 --> 00:48:28,000
I hear this a lot and it seems to be the natural exaggeration of well, Canonical will fork

715
00:48:28,000 --> 00:48:36,320
X next or whatever X might be and it's just the natural most exaggerated, most ridiculous

716
00:48:36,320 --> 00:48:38,920
thing you can possibly suggest.

717
00:48:38,920 --> 00:48:39,920
It's the end point.

718
00:48:39,920 --> 00:48:40,920
Yeah, but I've never made a fork.

719
00:48:40,920 --> 00:48:41,920
It's the end point.

720
00:48:41,920 --> 00:48:47,600
Canonical is going to fork Atari, sure.

721
00:48:47,600 --> 00:48:48,600
Now I want it to happen.

722
00:48:48,600 --> 00:48:52,800
Now that we've recorded all of this and then BitPuff to emerge totally victorious.

723
00:48:52,800 --> 00:48:54,920
I think it just comes down to practicality too.

724
00:48:54,920 --> 00:48:58,160
Yeah, it's just more beneficial not to.

725
00:48:58,160 --> 00:48:59,160
And –

726
00:48:59,160 --> 00:49:00,160
Adapt just need be.

727
00:49:00,160 --> 00:49:01,160
Because if you look –

728
00:49:01,160 --> 00:49:02,160
Everything else has already been done.

729
00:49:02,160 --> 00:49:08,320
There's already a fork of Firefox in Debian and there's already a fork of OpenOffice

730
00:49:08,320 --> 00:49:09,320
as LibreOffice.

731
00:49:09,320 --> 00:49:10,800
Everything has already been done.

732
00:49:10,800 --> 00:49:14,960
So the one thing left to do that the only company that's so ridiculously outrageous

733
00:49:14,960 --> 00:49:16,760
that would do it must be Canonical.

734
00:49:16,760 --> 00:49:17,760
Well, okay.

735
00:49:17,760 --> 00:49:18,760
I agree with you.

736
00:49:18,760 --> 00:49:19,760
There won't be.

737
00:49:19,760 --> 00:49:24,120
No, but I think that they would provide an experience which is like when they write the

738
00:49:24,120 --> 00:49:28,880
display server, they kind of write it so that Unity works well with Mirror and Mirror works

739
00:49:28,880 --> 00:49:29,880
well with Unity.

740
00:49:29,880 --> 00:49:34,920
I would think that they would want to do something similar with the core system kernel stuff

741
00:49:34,920 --> 00:49:35,920
too.

742
00:49:35,920 --> 00:49:36,920
So the other direction would be –

743
00:49:36,920 --> 00:49:37,920
Kind of integrated.

744
00:49:37,920 --> 00:49:40,760
Is you could take – So the Apple rationale was – Well, because you could look at it

745
00:49:40,760 --> 00:49:42,320
from the Mac OS X standpoint.

746
00:49:42,320 --> 00:49:43,400
They built their own display server.

747
00:49:43,400 --> 00:49:47,080
They built their own kernel and then they have a BSD user land tools.

748
00:49:47,080 --> 00:49:51,320
And so that's the extension of what you're saying is you'd have Canonical builds the

749
00:49:51,320 --> 00:49:54,320
Ubuntu desktop to build the display server and then they have a Linux user land tool

750
00:49:54,320 --> 00:49:57,240
base but it's an Ubuntu kernel.

751
00:49:57,240 --> 00:49:59,240
Yeah, I just don't see that.

752
00:49:59,240 --> 00:50:00,240
Not in 2014.

753
00:50:00,240 --> 00:50:01,240
No.

754
00:50:01,240 --> 00:50:02,240
Not at all.

755
00:50:02,240 --> 00:50:03,240
I don't think there would be an announcement or something.

756
00:50:03,240 --> 00:50:04,240
Oh, right.

757
00:50:04,240 --> 00:50:05,240
Maybe the year after.

758
00:50:05,240 --> 00:50:06,240
Maybe a couple of years.

759
00:50:06,240 --> 00:50:07,240
Maybe 2020.

760
00:50:07,240 --> 00:50:09,240
Now I see Mark Shuttleworth in a Buck Rogers thing twirling through space.

761
00:50:09,240 --> 00:50:10,600
I mean it's going to be something like that.

762
00:50:10,600 --> 00:50:13,200
No, it just practically doesn't make any sense.

763
00:50:13,200 --> 00:50:19,480
The reason that I think they would never do that is because I mean they're not extremely

764
00:50:19,480 --> 00:50:20,480
rich.

765
00:50:20,480 --> 00:50:21,480
They're not billionaires.

766
00:50:21,480 --> 00:50:24,840
I mean you have to take – if you're going to make your own kernel, you have to really

767
00:50:24,840 --> 00:50:29,120
make sure everything works exactly like the Linux kernel was working before on Ubuntu

768
00:50:29,120 --> 00:50:32,920
and they just – I don't think they have the resources for that.

769
00:50:32,920 --> 00:50:36,480
I would imagine them working the GNU user land before they forked the kernel.

770
00:50:36,480 --> 00:50:38,360
I mean look at Android.

771
00:50:38,360 --> 00:50:39,360
And why fork that down?

772
00:50:39,360 --> 00:50:40,360
Yeah, I can see that.

773
00:50:40,360 --> 00:50:41,360
It's down deep, you know?

774
00:50:41,360 --> 00:50:42,360
Yeah, if anybody's –

775
00:50:42,360 --> 00:50:43,560
Did I just give Popey an idea?

776
00:50:43,560 --> 00:50:46,680
If anybody's going to fork – no, but seriously, if anybody's going to fork the Linux kernel,

777
00:50:46,680 --> 00:50:49,160
it would be Google for Android, right?

778
00:50:49,160 --> 00:50:50,160
Yeah.

779
00:50:50,160 --> 00:50:51,600
And they could probably pull it off.

780
00:50:51,600 --> 00:50:53,560
But even they aren't doing it necessarily.

781
00:50:53,560 --> 00:50:57,960
I mean they are using certain things from it without going that deep into it.

782
00:50:57,960 --> 00:50:58,960
They only fork what they have to.

783
00:50:58,960 --> 00:51:00,720
Well, they don't want to make Linus swear at them.

784
00:51:00,720 --> 00:51:01,720
I think it's –

785
00:51:01,720 --> 00:51:02,720
Yeah, exactly.

786
00:51:02,720 --> 00:51:03,720
Well, they don't have to.

787
00:51:03,720 --> 00:51:04,720
Yeah.

788
00:51:04,720 --> 00:51:05,720
All right.

789
00:51:05,720 --> 00:51:06,720
Monica loves the Linux kernel.

790
00:51:06,720 --> 00:51:08,200
Last call for 2014 predictions.

791
00:51:08,200 --> 00:51:09,200
Anybody have –

792
00:51:09,200 --> 00:51:10,200
Oh, sure.

793
00:51:10,200 --> 00:51:18,520
If I may restate Ant's predictions for Ubuntu, no companies will use Ubuntu in one and a

794
00:51:18,520 --> 00:51:19,520
half years.

795
00:51:19,520 --> 00:51:22,720
Ubuntu in general will be dead in two years.

796
00:51:22,720 --> 00:51:23,720
What?

797
00:51:23,720 --> 00:51:24,720
Whoa.

798
00:51:24,720 --> 00:51:25,720
Based on –

799
00:51:25,720 --> 00:51:26,720
This is not his predictions.

800
00:51:26,720 --> 00:51:27,720
Not his, yeah.

801
00:51:27,720 --> 00:51:28,720
Let me –

802
00:51:28,720 --> 00:51:29,720
They're Ant's.

803
00:51:29,720 --> 00:51:36,280
I think it would probably be more accurate to say that these were the drunken ramblings

804
00:51:36,280 --> 00:51:39,120
of Ant, which they could well be the drunken ramblings of anyone.

805
00:51:39,120 --> 00:51:40,120
Yeah, there you go.

806
00:51:40,120 --> 00:51:41,120
These podcasts are probably the drunken ramblings of us.

807
00:51:41,120 --> 00:51:46,880
I'm not going to say anything negative regarding Ubuntu, but I am going to say that in the

808
00:51:46,880 --> 00:51:51,800
year 2014, openSUSE is probably going to get even more popular than it did in 2013.

809
00:51:51,800 --> 00:51:52,800
Okay.

810
00:51:52,800 --> 00:51:53,800
All right.

811
00:51:53,800 --> 00:51:54,800
Yeah, I know it is.

812
00:51:54,800 --> 00:51:58,880
Ubuntu is going to be more popular in 2014 than it was in this previous year, which I

813
00:51:58,880 --> 00:51:59,880
agree with.

814
00:51:59,880 --> 00:52:00,880
They're all going to be more popular.

815
00:52:00,880 --> 00:52:01,880
Yeah.

816
00:52:01,880 --> 00:52:05,200
Look, I think at the end of the day, when I load Linux on someone's computer that doesn't

817
00:52:05,200 --> 00:52:10,520
know Linux yet, I load Ubuntu on there no matter how I feel about it because it's going

818
00:52:10,520 --> 00:52:11,520
to be easier for them.

819
00:52:11,520 --> 00:52:12,520
Woo-hoo.

820
00:52:12,520 --> 00:52:16,760
Got a woo-hoo of approval there.

821
00:52:16,760 --> 00:52:21,400
I predict that Amazon is going to get tired of everybody using their affiliate system,

822
00:52:21,400 --> 00:52:24,560
so they're going to make their own distro, make their own browsers, and their own search

823
00:52:24,560 --> 00:52:25,560
engine.

824
00:52:25,560 --> 00:52:26,560
Brilliant.

825
00:52:26,560 --> 00:52:27,560
Yeah, right.

826
00:52:27,560 --> 00:52:33,200
Hey, haven't they got their own distro on their Amazon Kindle Fire and their own affiliate

827
00:52:33,200 --> 00:52:34,200
revenue system there?

828
00:52:34,200 --> 00:52:35,200
Technically, yeah.

829
00:52:35,200 --> 00:52:36,200
Yeah.

830
00:52:36,200 --> 00:52:37,200
Actually, I think you're right.

831
00:52:37,200 --> 00:52:38,200
I didn't think of it that way.

832
00:52:38,200 --> 00:52:39,200
Now, here's a good question.

833
00:52:39,200 --> 00:52:40,520
They're all Android forks, so technically, yeah.

834
00:52:40,520 --> 00:52:44,360
What was different between the year affiliate system and the way it's integrated into the

835
00:52:44,360 --> 00:52:45,960
Dash?

836
00:52:45,960 --> 00:52:50,560
Product placement because they're actually advertising products, yeah, and not just shop

837
00:52:50,560 --> 00:52:51,560
here.

838
00:52:51,560 --> 00:52:53,320
So, okay, last call for predictions before...

839
00:52:53,320 --> 00:52:54,320
I got one real quick.

840
00:52:54,320 --> 00:52:55,320
Okay.

841
00:52:55,320 --> 00:52:56,320
All right.

842
00:52:56,320 --> 00:52:59,040
In education, Linux has always been really big, but I think it's going to become even

843
00:52:59,040 --> 00:53:04,640
bigger with things like the Pi and the Chromebook becoming so cheap that schools realize that

844
00:53:04,640 --> 00:53:10,600
the contracts they have with Microsoft are ridiculous and move from proprietary to open

845
00:53:10,600 --> 00:53:11,600
source software.

846
00:53:11,600 --> 00:53:12,600
Yeah.

847
00:53:12,600 --> 00:53:14,040
I think schools have a lot...

848
00:53:14,040 --> 00:53:16,520
They're also just reinvesting in existing hardware.

849
00:53:16,520 --> 00:53:19,960
As XP goes away, that's going to be big for schools.

850
00:53:19,960 --> 00:53:20,960
Oh, yeah.

851
00:53:20,960 --> 00:53:27,160
And especially businesses, too, when XP goes away, where are they going to go with their

852
00:53:27,160 --> 00:53:28,160
custom software?

853
00:53:28,160 --> 00:53:32,080
Why not have somebody develop custom software for them on Linux rather than upgrading that

854
00:53:32,080 --> 00:53:33,880
to Windows 7 or 8?

855
00:53:33,880 --> 00:53:38,280
I would bet they're going to stay on XP until they have a massive just fallout from all

856
00:53:38,280 --> 00:53:42,840
kinds of horrible things that they're going to be attacked because there's a lot of things

857
00:53:42,840 --> 00:53:48,560
that if you notice, there's been some studies that said the hackers or the virus writers

858
00:53:48,560 --> 00:53:52,600
are waiting for the thing to drop support so they can attack massively.

859
00:53:52,600 --> 00:53:53,600
Yeah.

860
00:53:53,600 --> 00:53:56,840
So probably about next year is when they'll realize that should change.

861
00:53:56,840 --> 00:54:01,800
If I put my contracting hat on, I can already picture a client that's asking me to mitigate

862
00:54:01,800 --> 00:54:03,880
the risk and not migrate the OS.

863
00:54:03,880 --> 00:54:08,640
So they'll say, do what you can, firewall it, clock it down, protect it, let's monitor

864
00:54:08,640 --> 00:54:12,760
it, put an antivirus on there, and we'll run the risk because it's in our land and we're

865
00:54:12,760 --> 00:54:14,560
just going to keep it until it dies.

866
00:54:14,560 --> 00:54:15,900
And I can see that happening.

867
00:54:15,900 --> 00:54:20,040
So it's not going to be 2014 won't be like this, boom, everybody switched from XP.

868
00:54:20,040 --> 00:54:23,440
It's going to be a slow thing that picks up momentum in 2014.

869
00:54:23,440 --> 00:54:27,320
But I do think we're going to get lots of a blaster worm like alerts in the paper and

870
00:54:27,320 --> 00:54:28,320
things like that.

871
00:54:28,320 --> 00:54:31,360
You know, we're going to, I'm sure you guys remember that blaster worm thing that happened.

872
00:54:31,360 --> 00:54:33,280
That's actually what my name is based on.

873
00:54:33,280 --> 00:54:34,280
Really?

874
00:54:34,280 --> 00:54:35,280
That's funny.

875
00:54:35,280 --> 00:54:36,280
Yeah.

876
00:54:36,280 --> 00:54:37,280
The patch was released the whole time.

877
00:54:37,280 --> 00:54:38,280
That's what blew my mind.

878
00:54:38,280 --> 00:54:39,760
It was out there the whole time and no one applied it.

879
00:54:39,760 --> 00:54:40,760
Just like, really?

880
00:54:40,760 --> 00:54:41,760
Yeah.

881
00:54:41,760 --> 00:54:47,760
Don't banks and stuff have like custom software that they use for on Windows XP that they're

882
00:54:47,760 --> 00:54:52,360
probably afraid to migrate to Windows 7 because it's got to be, you know, it's got to be changed.

883
00:54:52,360 --> 00:54:55,280
Before it was on XP, it was on Scoboxes.

884
00:54:55,280 --> 00:54:57,760
Like so they've had to move it before.

885
00:54:57,760 --> 00:55:00,840
This has happened to them before, it'll happen again.

886
00:55:00,840 --> 00:55:04,720
And in some ways you could make the argument, hey, if you move to Linux, this is just an

887
00:55:04,720 --> 00:55:05,720
organic piece.

888
00:55:05,720 --> 00:55:06,720
They'll just continue to exist.

889
00:55:06,720 --> 00:55:09,720
It doesn't come to an end like some of these other products do.

890
00:55:09,720 --> 00:55:14,320
It makes me kind of afraid that some of these banks might stay on XP.

891
00:55:14,320 --> 00:55:15,320
They will.

892
00:55:15,320 --> 00:55:16,320
Oh yeah.

893
00:55:16,320 --> 00:55:17,320
There's banks on 2000k.

894
00:55:17,320 --> 00:55:21,200
I mean, I'm seriously, at least that I've seen, at least as soon as a year ago.

895
00:55:21,200 --> 00:55:24,960
A few years ago, I would walk into a Bank of America and they would have Mac Pluses

896
00:55:24,960 --> 00:55:30,080
there from the 80s with text terminals, you know, and so they, yeah, they'll, that was

897
00:55:30,080 --> 00:55:31,080
just the ATM.

898
00:55:31,080 --> 00:55:32,080
Yeah.

899
00:55:32,080 --> 00:55:33,080
There's only a few.

900
00:55:33,080 --> 00:55:35,960
It wasn't recent, but it was a few years ago.

901
00:55:35,960 --> 00:55:40,000
I'd just like to add a little bit you said about education.

902
00:55:40,000 --> 00:55:46,080
Getting Linux, from my experience, getting Linux in the door for education is quite difficult

903
00:55:46,080 --> 00:55:53,640
simply because there's not enough people who know about Linux to supply classes and stuff

904
00:55:53,640 --> 00:55:54,640
like that.

905
00:55:54,640 --> 00:55:56,640
Canada actually would prove that wrong.

906
00:55:56,640 --> 00:55:59,880
I mean, it's based on the Canadians that I've known and the Canadians I've worked with and

907
00:55:59,880 --> 00:56:01,440
also just reading news articles on it.

908
00:56:01,440 --> 00:56:05,320
It seems like various provinces in Canada have actually had a lot of success.

909
00:56:05,320 --> 00:56:09,360
Yeah, I think it depends on a local company who can work with the school district, you

910
00:56:09,360 --> 00:56:10,360
know.

911
00:56:10,360 --> 00:56:11,360
It depends where.

912
00:56:11,360 --> 00:56:16,200
If you have a school district who has some big fatty IT contract with some company who

913
00:56:16,200 --> 00:56:18,520
sucks off Microsoft's tip, they're going to come in there and they're going to sell more

914
00:56:18,520 --> 00:56:19,520
Microsoft software.

915
00:56:19,520 --> 00:56:24,800
But, you know, you get some local guy who maybe can help do some, you know, IT development

916
00:56:24,800 --> 00:56:28,120
with the school district if they don't have a strong in-house IT and they like Linux,

917
00:56:28,120 --> 00:56:29,120
it could happen.

918
00:56:29,120 --> 00:56:36,560
Well, I went to a school who, the admins were very into Linux and they run Linux and all

919
00:56:36,560 --> 00:56:41,280
the servers, anything that wasn't a desktop and the only reason they wouldn't run it on

920
00:56:41,280 --> 00:56:45,200
the desktop is because teachers want their software.

921
00:56:45,200 --> 00:56:49,860
They don't want to use LibreOffice or GIMP and for the purposes of teaching photo editing

922
00:56:49,860 --> 00:56:57,440
or word processing, LibreOffice and GIMP are perfectly fine solutions, you don't need Photoshop.

923
00:56:57,440 --> 00:56:59,200
Microsoft's going to solve that problem for us though.

924
00:56:59,200 --> 00:57:05,120
With Windows 8, you don't have your own, I mean, you do technically, but the UI is going

925
00:57:05,120 --> 00:57:11,260
to continue to change so much and, you know, these Metro applications are not up to snuff.

926
00:57:11,260 --> 00:57:12,480
They're not what people want.

927
00:57:12,480 --> 00:57:13,480
They're not Photoshop.

928
00:57:13,480 --> 00:57:15,780
They're not, you know, they're not full replacements yet.

929
00:57:15,780 --> 00:57:20,280
So that's going to help with that a little bit when you're faced with that stark of a

930
00:57:20,280 --> 00:57:24,840
change anyways, then it's still a lot of change to switch to Linux, but you're already dealing

931
00:57:24,840 --> 00:57:27,920
with so much change that it's not a huge leap, I would think.

932
00:57:27,920 --> 00:57:33,080
I think another, what we're going to see coming up is, we saw some of this in 2013, but I

933
00:57:33,080 --> 00:57:37,720
think GNOME 3 is going to even further just find its place as a desktop environment in

934
00:57:37,720 --> 00:57:38,720
2014.

935
00:57:38,720 --> 00:57:39,720
I could see that.

936
00:57:39,720 --> 00:57:40,720
I could see that.

937
00:57:40,720 --> 00:57:41,720
I think it's going to be a good year for GNOME.

938
00:57:41,720 --> 00:57:43,720
Well, and I think schools will continue to do stuff.

939
00:57:43,720 --> 00:57:48,440
I mean, like you have iTalk for classroom work, Moodle, which if you apply a theme to

940
00:57:48,440 --> 00:57:52,400
it, it's actually not too terrible, but out of the box, Moodle is just painful to look

941
00:57:52,400 --> 00:57:53,400
at.

942
00:57:53,400 --> 00:57:54,400
I get that.

943
00:57:54,400 --> 00:57:55,400
It's painful to use too.

944
00:57:55,400 --> 00:57:58,160
I've actually run it a few times, but yeah, I think the tools are out there for schools.

945
00:57:58,160 --> 00:58:00,600
It just takes time and it takes financial motivation sometimes.

946
00:58:00,600 --> 00:58:01,600
Yeah.

947
00:58:01,600 --> 00:58:02,600
Yeah.

948
00:58:02,600 --> 00:58:03,600
And yeah, there's a lot of things at play.

949
00:58:03,600 --> 00:58:07,160
So before we jump out of the Mumber Room, is it 2014 for anybody in here yet?

950
00:58:07,160 --> 00:58:09,920
I know it is for Aviator Continuity in our chat room right now.

951
00:58:09,920 --> 00:58:10,920
He's been there for seven hours.

952
00:58:10,920 --> 00:58:11,920
He's been in 2014.

953
00:58:11,920 --> 00:58:12,920
We are in 2014.

954
00:58:12,920 --> 00:58:13,920
Oh, well, congratulations.

955
00:58:13,920 --> 00:58:14,920
Welcome.

956
00:58:14,920 --> 00:58:15,920
And hello from the past.

957
00:58:15,920 --> 00:58:16,920
All right.

958
00:58:16,920 --> 00:58:17,920
Poppy only has an hour left.

959
00:58:17,920 --> 00:58:18,920
Yeah.

960
00:58:18,920 --> 00:58:19,920
Yeah.

961
00:58:19,920 --> 00:58:20,920
I thought BitPuffin was going to cross over during the show, but I can't remember.

962
00:58:20,920 --> 00:58:21,920
Yeah, he did.

963
00:58:21,920 --> 00:58:22,920
He did.

964
00:58:22,920 --> 00:58:23,920
He did.

965
00:58:23,920 --> 00:58:24,920
Five minutes ago.

966
00:58:24,920 --> 00:58:25,920
Yay.

967
00:58:25,920 --> 00:58:26,920
Well, happy 2014, Bit.

968
00:58:26,920 --> 00:58:27,920
Okay, guys.

969
00:58:27,920 --> 00:58:39,840
Well, before we go, I got to read a little email, so I'm going to get to that right now.

970
00:58:39,840 --> 00:58:42,360
But it came from Tim, and he's calling us out, Matt.

971
00:58:42,360 --> 00:58:44,640
Now we get these from time to time.

972
00:58:44,640 --> 00:58:47,400
Last time it was about Debbie, and this time it's about Slackware.

973
00:58:47,400 --> 00:58:49,960
He says, I rarely hear you guys mention Slackware.

974
00:58:49,960 --> 00:58:54,560
I've been a Slackware user for many years and would love to see you guys do a Slackware

975
00:58:54,560 --> 00:58:55,560
challenge.

976
00:58:55,560 --> 00:58:59,200
I have a lot of people turned off by the fact that Slackware package managers not even handle

977
00:58:59,200 --> 00:59:00,340
dependencies.

978
00:59:00,340 --> 00:59:05,140
But I would like to think that you guys, as Arch users, would realize that there's a benefit

979
00:59:05,140 --> 00:59:09,560
to knowing exactly what is on your system because you installed it.

980
00:59:09,560 --> 00:59:16,720
These days, building and finding Slackware packages is as easy as ever with slackbuilds.org

981
00:59:16,720 --> 00:59:19,520
and sbopkg.org.

982
00:59:19,520 --> 00:59:24,240
He says most of Slackware's team keeps an up-to-date repository of commonly used pre-built

983
00:59:24,240 --> 00:59:28,840
packages, and he gives a Wiki link to that, as a Linux user, Slackware user supporter,

984
00:59:28,840 --> 00:59:29,840
and a huge fan of your shows.

985
00:59:29,840 --> 00:59:32,760
I'd just like to see you guys give it some loveskis.

986
00:59:32,760 --> 00:59:36,400
Now we did give it the love spotlight on last during our OpenSUSE review.

987
00:59:36,400 --> 00:59:37,400
Yes.

988
00:59:37,400 --> 00:59:43,040
So here's the thing about Slackware, Matt, is when we make these switches, these challenges,

989
00:59:43,040 --> 00:59:45,600
I have to straight up use these for a while.

990
00:59:45,600 --> 00:59:46,600
Right.

991
00:59:46,600 --> 00:59:47,600
And here's the thing.

992
00:59:47,600 --> 00:59:48,600
He mentioned a couple tools.

993
00:59:48,600 --> 00:59:49,600
I've never really cared.

994
00:59:49,600 --> 00:59:54,240
I played with Gentoo a little bit, okay, Portage, whatever, but Slackware I've never had a reason

995
00:59:54,240 --> 00:59:55,240
to.

996
00:59:55,240 --> 00:59:59,240
Now the tools he mentioned specifically regarding that, because he lost me at dependency stuff,

997
00:59:59,240 --> 01:00:03,680
I will literally gargle glass shards before I chase down dependencies.

998
01:00:03,680 --> 01:00:05,160
It's 2014, kids.

999
01:00:05,160 --> 01:00:06,600
I'm not doing it.

1000
01:00:06,600 --> 01:00:09,000
Arch doesn't make me chase down that stuff.

1001
01:00:09,000 --> 01:00:10,000
It doesn't.

1002
01:00:10,000 --> 01:00:11,680
It's providing an effective experience for me.

1003
01:00:11,680 --> 01:00:12,800
I don't use it because it's geeky.

1004
01:00:12,800 --> 01:00:15,360
I use it because I'm lazy, and it appeals to me.

1005
01:00:15,360 --> 01:00:16,360
So that's okay.

1006
01:00:16,360 --> 01:00:18,080
There is a little bit of that.

1007
01:00:18,080 --> 01:00:21,720
That is part of my motivation to using Arch is I don't like tracking down the stuff and

1008
01:00:21,720 --> 01:00:24,720
everything I want in the repos.

1009
01:00:24,720 --> 01:00:29,960
I'm not totally opposed to trying Slackware, probably not in the immediate future, but

1010
01:00:29,960 --> 01:00:35,920
I do kind of feel like it's sort of like the thing I've just never really got into, and

1011
01:00:35,920 --> 01:00:38,320
I need to give it a fair go.

1012
01:00:38,320 --> 01:00:40,040
I've never had the motivation.

1013
01:00:40,040 --> 01:00:41,040
I just, I can't.

1014
01:00:41,040 --> 01:00:42,040
It's in the back of my mind.

1015
01:00:42,040 --> 01:00:46,600
I'm more likely to revisit Gentoo, honestly, as weird as that sounds, because I mean, Portage,

1016
01:00:46,600 --> 01:00:47,600
I've done this.

1017
01:00:47,600 --> 01:00:50,200
I mean, it's not like my ideal thing, but I can deal with it.

1018
01:00:50,200 --> 01:00:54,240
But I don't really get my, I don't really see the Slackware advantage, I guess is one

1019
01:00:54,240 --> 01:00:55,240
of them.

1020
01:00:55,240 --> 01:00:56,280
Knowing what's in my stuff, I don't care.

1021
01:00:56,280 --> 01:00:57,920
I love that it's there.

1022
01:00:57,920 --> 01:00:58,920
It's open source.

1023
01:00:58,920 --> 01:01:02,520
I'm going to, you know, at some level, the NSA is going to do what they're going to do,

1024
01:01:02,520 --> 01:01:03,520
whatever.

1025
01:01:03,520 --> 01:01:04,520
I'm just not that concerned about it.

1026
01:01:04,520 --> 01:01:05,520
I just want it to work.

1027
01:01:05,520 --> 01:01:10,200
The other thing, too, is I understand, I do kind of see what you're saying, you know exactly

1028
01:01:10,200 --> 01:01:11,200
what's on your system.

1029
01:01:11,200 --> 01:01:16,920
But that, to me, also isn't a huge requirement in the sense of library bloat or anything

1030
01:01:16,920 --> 01:01:17,920
like that.

1031
01:01:17,920 --> 01:01:22,520
So I don't want to put it down, because I respect anybody who chooses to use it.

1032
01:01:22,520 --> 01:01:25,160
But for myself, it's never quite resonated.

1033
01:01:25,160 --> 01:01:26,160
And I'm still going to give it some thought.

1034
01:01:26,160 --> 01:01:27,840
I might try it, maybe in the summer, I might give it a go.

1035
01:01:27,840 --> 01:01:32,760
I mean, if Arch burns me or something, or whatever variation of Arch I'm using happens

1036
01:01:32,760 --> 01:01:35,840
to burn me or something, yeah, then I might have an interest in actually pursuing it.

1037
01:01:35,840 --> 01:01:38,060
At this point, I need a motivation.

1038
01:01:38,060 --> 01:01:42,560
For me, I was, you know, burnt out on PPA, so I was just, it was just time to try something

1039
01:01:42,560 --> 01:01:43,560
new.

1040
01:01:43,560 --> 01:01:44,560
OpenSUSE was cool.

1041
01:01:44,560 --> 01:01:45,560
I had a lot of fun with that.

1042
01:01:45,560 --> 01:01:46,560
And I wanted to roll into something new.

1043
01:01:46,560 --> 01:01:47,560
But I'm kind of happy where I'm at.

1044
01:01:47,560 --> 01:01:48,560
I don't know.

1045
01:01:48,560 --> 01:01:49,560
Yeah.

1046
01:01:49,560 --> 01:01:50,560
I just don't know.

1047
01:01:50,560 --> 01:01:51,560
All right.

1048
01:01:51,560 --> 01:01:55,520
Well, as we wrap, one thing I wanted to mention is I think it's going to be an awesome year

1049
01:01:55,520 --> 01:01:56,520
for QT.

1050
01:01:56,520 --> 01:01:57,520
Yeah.

1051
01:01:57,520 --> 01:01:58,520
QT.

1052
01:01:58,520 --> 01:01:59,520
QT.

1053
01:01:59,520 --> 01:02:02,800
And I don't know what that'll mean for the GNOME desktop.

1054
01:02:02,800 --> 01:02:04,880
And I'd like to hear your guys' thoughts on that.

1055
01:02:04,880 --> 01:02:12,240
What do you think is QT's success going to come at the cost of quality GTK applications

1056
01:02:12,240 --> 01:02:13,240
on Linux?

1057
01:02:13,240 --> 01:02:16,400
Because, you know, when I sit there and I use the GNOME desktop, one of the things that

1058
01:02:16,400 --> 01:02:21,600
brings me back to KDE frequently is KWin's awesome, for one.

1059
01:02:21,600 --> 01:02:26,640
And number two is I feel like QT is the way of the future, and that slowly over the next

1060
01:02:26,640 --> 01:02:31,880
couple of years, my favorite applications are going to be replaced with QT versions,

1061
01:02:31,880 --> 01:02:34,500
and I should just get on the KDE bandwagon now.

1062
01:02:34,500 --> 01:02:35,800
So I'd like to hear your guys' thoughts on that.

1063
01:02:35,800 --> 01:02:37,560
That's my question for you out there in the audience.

1064
01:02:37,560 --> 01:02:41,440
You can go over to jupyterbroadcasting.com, pop the contact link, and leave your feedback.

1065
01:02:41,440 --> 01:02:45,080
And here's the other question, and this one I really want you to give some thought.

1066
01:02:45,080 --> 01:02:51,580
Does Groupthink, or maybe call it Management by Consensus, tamper open source innovation?

1067
01:02:51,580 --> 01:02:56,800
So does backlash to aggressive and sometimes new or risky ideas inhibit bold innovation

1068
01:02:56,800 --> 01:02:58,660
sometimes in open source?

1069
01:02:58,660 --> 01:03:00,080
Here's an example.

1070
01:03:00,080 --> 01:03:03,120
So Debian cannot get off the pot about their init system.

1071
01:03:03,120 --> 01:03:06,240
You know, they can't just choose systemd.

1072
01:03:06,240 --> 01:03:14,980
Even though choosing systemd, by the data I can tell, would only impact 0.8% of their

1073
01:03:14,980 --> 01:03:16,360
user base negatively.

1074
01:03:16,360 --> 01:03:21,520
That would be the ones that have a BSD derivative, and that's using voluntary stats.

1075
01:03:21,520 --> 01:03:27,440
0.8% of their user base would be affected by the switch to systemd, but the entire Linux

1076
01:03:27,440 --> 01:03:30,800
ecosystem could be benefited by it, not just Debian.

1077
01:03:30,800 --> 01:03:36,680
Yet they can't make the call because of this group, debate, groupthink, management by consensus

1078
01:03:36,680 --> 01:03:39,460
aspect that a lot of open source projects are driven by.

1079
01:03:39,460 --> 01:03:40,760
So I want to get people to email in.

1080
01:03:40,760 --> 01:03:41,760
You have any thoughts?

1081
01:03:41,760 --> 01:03:45,560
Well, here's the first thing that comes to mind, and it's adorable that people think

1082
01:03:45,560 --> 01:03:47,000
Debian does anything quickly.

1083
01:03:47,000 --> 01:03:49,120
I just find that just adorable.

1084
01:03:49,120 --> 01:03:50,120
It's Debian.

1085
01:03:50,120 --> 01:03:52,160
You know, they move at Debian pace.

1086
01:03:52,160 --> 01:03:53,160
But why is that?

1087
01:03:53,160 --> 01:03:56,600
Is that because of this groupthink, management by consensus, consortium?

1088
01:03:56,600 --> 01:04:01,520
That's part of it, but also because of the fact that they have what's working for them

1089
01:04:01,520 --> 01:04:02,520
now.

1090
01:04:02,520 --> 01:04:07,080
They like to take their time and really slog through everything at a snail's pace.

1091
01:04:07,080 --> 01:04:08,320
And I don't mean that in a negative way.

1092
01:04:08,320 --> 01:04:09,560
I mean, that's just how they operate.

1093
01:04:09,560 --> 01:04:14,200
I think you could look at a lot of things in the open source development where you could

1094
01:04:14,200 --> 01:04:19,720
see that the group debating really trivial stuff really slowed stuff down.

1095
01:04:19,720 --> 01:04:24,000
And then there's good examples where somebody comes along and Lenart says, boom, we're going

1096
01:04:24,000 --> 01:04:27,840
to do system D. And then all of a sudden, there's a bunch of energy behind system D.

1097
01:04:27,840 --> 01:04:30,600
Or Mark comes out and says, hey, you know what, we're going to build our own display

1098
01:04:30,600 --> 01:04:31,600
server.

1099
01:04:31,600 --> 01:04:35,360
And even though a lot of people can disagree, there is this declaration at the top, and

1100
01:04:35,360 --> 01:04:39,160
the focus is made, the commitment is made, and the team gets to work.

1101
01:04:39,160 --> 01:04:43,000
And you can see this play out in some commercial companies like Apple.

1102
01:04:43,000 --> 01:04:47,200
And then you have the other side where Microsoft, where they just can't seem to really execute

1103
01:04:47,200 --> 01:04:49,080
because they have all this middle management.

1104
01:04:49,080 --> 01:04:52,040
And I'm wondering if maybe the open source community suffers from a little bit middle

1105
01:04:52,040 --> 01:04:53,040
management.

1106
01:04:53,040 --> 01:04:54,040
You can't take it all out.

1107
01:04:54,040 --> 01:04:55,040
But I want to know what the audience thinks.

1108
01:04:55,040 --> 01:04:58,640
So go over to jupyterblogcasting.com, pop that contact link, choose Linux Unplugged from

1109
01:04:58,640 --> 01:05:02,420
the dropdown, send us your feedback for next week's episode of Linux Unplugged.

1110
01:05:02,420 --> 01:05:06,960
And we will read that during the top of the show next week on the show.

1111
01:05:06,960 --> 01:05:07,960
I think that'll be a good topic.

1112
01:05:07,960 --> 01:05:11,080
It's just something I've been kicking around as I've been watching the system D stuff and

1113
01:05:11,080 --> 01:05:12,080
Miren Wayland.

1114
01:05:12,080 --> 01:05:13,080
Let's put it out there.

1115
01:05:13,080 --> 01:05:14,080
See what people think.

1116
01:05:14,080 --> 01:05:15,080
Yeah.

1117
01:05:15,080 --> 01:05:16,080
All right, Matt.

1118
01:05:16,080 --> 01:05:18,280
Well, coming up on Sunday, I got kind of a surprise.

1119
01:05:18,280 --> 01:05:19,280
Oh yeah?

1120
01:05:19,280 --> 01:05:20,280
Yeah.

1121
01:05:20,280 --> 01:05:22,000
I'm not going to announce it yet because I'm not sure it's going to work out.

1122
01:05:22,000 --> 01:05:23,160
So we're going to cover it if it works out.

1123
01:05:23,160 --> 01:05:24,160
But I'll talk to you about it.

1124
01:05:24,160 --> 01:05:25,160
All right.

1125
01:05:25,160 --> 01:05:26,160
So we'd love to hear from you.

1126
01:05:26,160 --> 01:05:27,160
Don't forget.

1127
01:05:27,160 --> 01:05:28,160
You can join us live.

1128
01:05:28,160 --> 01:05:31,960
The Linux Unplugged show is live on the Tuesdays over at jblive.tv, 2pm Pacific.

1129
01:05:31,960 --> 01:05:36,280
Go to jupyterblogcasting.com, slash calendar to get that in your local neck of the woods.

1130
01:05:36,280 --> 01:05:37,280
We'll convert it for you.

1131
01:05:37,280 --> 01:05:38,280
All right, everyone.

1132
01:05:38,280 --> 01:05:40,280
Well, thank you so much for tuning this week's episode of Linux Unplugged.

1133
01:05:40,280 --> 01:05:41,280
Matt, I'll see you on Sunday.

1134
01:05:41,280 --> 01:05:42,280
Okay?

1135
01:05:42,280 --> 01:05:43,280
Sounds good.

1136
01:05:43,280 --> 01:05:44,280
See you then.

1137
01:05:44,280 --> 01:05:45,280
All right, everyone.

1138
01:05:45,280 --> 01:05:46,280
Thank you so much.

1139
01:05:46,280 --> 01:05:48,280
Have a great week.

