You're a Star Trek fan, Wes.
You know about synthohol.
It seemed like an impossibility.
You could have a beer that was made with synthohol,
and you could feel the effects of booze
without actually getting fully drunk.
Well, yeah, it sounds amazing.
I want that.
I enjoy a drink from time to time.
But we all have to admit, like, there are consequences,
both personal and social.
But how many times do you hear, like,
in the open source and free software community,
free isn't beer, or let's go have a beer.
Like, everybody's always talking about beer.
It's pervasive in our society.
It really is.
Yeah, well, there is a guy out there whose last name is Nut,
really.
David Nut.
Yeah, we'll have this linked in the show notes.
He's got an ambitious plan to bring, like,
a synthohol to the market.
Safe synthetic alcohol substitute called Alkarell.
He's kind of actually been playing with this for a long
time with the so-called holy grail of molecules,
at least if you really want to develop
this one specific molecule.
It's also called AlkaSynth.
And really, what they're aiming for
is something that provides the relaxing and socially
lubricating qualities of alcohol that we all know and love,
but without the hangovers, health issues,
or the risk of getting paralytic.
If that was really true, especially
that social lubrication there, I think
we would all have to drink this before we
start doing the show, you know?
Absolutely, why not?
I mean, right now, all I have is this damn whiskey to sip on.
This is Linux Unplugged, episode 294 from March 26, 2019.
Oh, hello there, and welcome to your weekly Linux talk show
that might be a little too ambitious this week.
My name is Chris.
My name is Wes.
I don't know, Wes.
I'm looking through this list, and I'm saying it's too much.
But this week, on your Unplugged program,
we'll go through some community news,
including the release of the most important text
editor ever created, and an OS.
Well, a distro?
They call it an OS.
It's really a distro that seems to be getting
a little bit of controversy.
When's the last time you've heard
about a controversial distro?
Oh, it's been a while.
That's funny, because the press is calling it
a controversial OS.
But no, no, it's a distro, and we'll tell you more about it
in a little bit.
And then, later on, have you ever heard of a tainted kernel?
You might be one of those Linux users out there right now that
has a dirty, tainted kernel.
We'll tell you what the heck that is, what causes that,
and why the kernel team doesn't want nothing to do with it,
and what you can do afterwards.
And then, later on, in the show, we'll
talk about advocacy in a way that is actually effective.
How do you convert people to Linux in a way that sticks
and is going to succeed?
I think a lot of times in our community,
we get so excited about Linux that we are a little pushy.
And we try to convince certain people that
might not be ideal candidates.
So later on in the episode, I want
to outline maybe who isn't ideal to run Linux,
and the folks that are ideal, and how you can succeed
in switching them to Linux.
This is something that we've been talking about for weeks
internally.
It's not always easy, right?
That's the thing is, it's complicated,
and we're all blinded by our passions to some degree, right?
Yeah.
I do want people in my life to use Linux,
but like anything else, you've got
to think a little carefully about it.
Yeah.
I've got confessions to make later in the show.
But before we go any further, we've
got to bring in that Mumble Room Time appropriate greetings
virtual lug.
Hello.
Hello, everyone.
Hello.
Well organized.
Hello.
I liked that.
I liked that.
And also, coming in in high fidelity remote studio quality
cheese and Elle with us.
Hello, guys.
Hey.
Hello.
And Gal.
Hi, there.
So we have so much to start with.
I'm very excited about the topics today
because a lot of times we start getting on a topic,
and I don't know, it just takes a while to go like,
why don't we talk about this on air?
Like, this is one of those weeks.
So I'm pretty excited to get started.
But I do want to start with some very, very, very good news.
It's kind of fun to start with something sort of nice.
I want to say a big happy birthday from the team here.
Happy birthday.
Woo!
Yeah.
We got some birthdays this week.
First of all, big happy 21st birthday.
You are now legal to drink in the US of A to curl.
Oh, yeah.
A wonderful curl.
Everybody loves curl.
Who doesn't?
I mean, I literally use it, I think, every single day.
Actually, 4 billion internet users, at least at one point,
and 1.5 current installations per internet-connected human
on Earth.
I don't know how they know these numbers.
Yeah, that is a question, some of these, perhaps.
But they're all very impressive.
669 persons have authored patches that have been merged.
And that kind of just shows curl's hit the sweet spot.
It's just such a useful utility.
It's on the right layer of complexity and ease of use
that you can write complex automated scripts.
We're doing some of that with curl.
Or you can just use it on the command line
to download your favorite MP3 shows.
Yeah, well said.
It really is a tool.
It's a perfect example of a Unix slash Linux staple.
It's one of those staple utilities.
And it now consists of 160,000 lines of code
with over 24,000 commits.
So it's an active project still, which is great.
And 1,927 different persons have helped out so far
over the years.
See, I like that too, because they call it out separately.
And you can see that the community is not just people
getting patches merged, right?
Like people writing tutorials, talking about it, evangelizing,
or just filing bug reports.
That all helps.
You want to know a couple of nerdy stats?
Yes, I do.
OK, so 50 different build environments for curl
are currently checked by their analyzer.
And they are spending upwards of 20 to 25 CPU hours
per commit checking it, per commit.
Well, yeah, see, they are taking a lot of time
to get that going.
And it's impressive that that's a lot of build configurations.
Yeah, and I guess they're going to have a party.
There's going to be a party out there.
I don't know.
I feel like it's something we could do a little more of
on the show is talk about these tools
that we use even when we don't know we're using them.
Like you might be using a package manager that's
using curl in the background to pull down a package.
Or maybe you're using YouTube DL and it's using curl.
Or there's all kinds of different use cases for curl.
So there's a lot of tools like that.
Also, I want to take a moment, and it's not
somebody that anybody listening to the show
is directly familiar with, but a member of our Jupiter
broadcasting community, Tyler, he's
been with the community for over 10 years.
It's his birthday today.
And I just want to say happy birthday to Tyler.
Happy birthday, Tyler.
He's a great guy.
Yeah, geez, you know Tyler.
He's just a great guy.
He's a wonderful guy.
He's all about the JB community and has been
and was really one of the first people
that I interacted with whenever I joined the community myself.
Yeah, and I guess I just want to take a little,
I want to try to make a little more effort this year
to thank the people that have been with us
for a really long time.
And I know there's a lot of you out there,
and Tyler's just one of many.
So thank you to all of you.
To Tyler, happy birthday to Tyler.
Also, by the way, Leonard Nimoy's birthday today.
Oh, wonderful.
The late-note Leonard Nimoy would have been,
I believe, 88 today.
Not that I'm a huge Star Trek fan or anything.
Now can we talk about the most important news of the week?
Are you good with this?
I knew you would want to get here,
and OK, let's get it over with.
Ladies and gentlemen, it is my pleasure
to announce that Nano 4.0 is released.
Yes, GNU Nano 4.0, the Rope of Sands edition, is out.
OK, that's a cool name.
Never mind, I changed my mind.
It is a super cool name.
I got nothing.
I got nothing.
I think the biggest thing for me,
and for what I've seen a lot of people talking about,
is that first thing on the list here, an overlong line
is no longer automatically hard wrapped.
And that's just like, you might have a preference about that,
but before, boom, just new lines injected into whatever
you were looking at.
And that's one of the reasons I never could use it.
I just think it's funny that that's what you've noticed.
What I noticed is smooth scrolling now one line at a time
has become the default. That's what I noticed.
See, OK, so there's some wheel rims.
There's some real rims for everyone.
So Wes now hosts the TechSnap program
with Jim Salter, who's an author over at Ars Technica.
And it's just really turned into a great production.
And it means that I don't get a chance now
to chat with you about some of these stories
that we traditionally would have talked about.
Yeah, that's true.
So I wanted to get your opinion on what
you think about this ASUS story this week, where hackers
hijacked the ASUS software updates
to install backdoors on thousands of Windows PCs.
I mean, the obvious pitch here is
this would never happen on Linux.
But I just think this is an insane story.
Researchers estimate that half a million Windows machines
received the malicious backdoor through the ASUS update server,
although the attackers appear to have been targeting maybe
only 600 of those systems.
Yeah, that's one of the weird aspects here.
And Kaspersky first found this and has started writing up.
And there will be.
They're going to publish at a conference coming up
a whole big breakdown.
That's not out yet.
But what researchers thought was weird, this is fairly clever.
Basically, they've gotten some keys from ASUS,
and then were able to have stuff that masqueraded
as legitimate updates that would pass all those verification
checks and just be installed on users' end machines.
Once that was there and they'd planted that,
then they specifically checked for MAC addresses
on network cards like they'd pre-identified them.
And only if they matched a set list did they then
go phone home to a command and control server
and install more software.
All right, so this is fascinating.
So Kaspersky Labs uncovered this attack back in January
after adding a new supply chain to technology,
like detection, that I guess is looking
at machines in production.
Yeah, I mean, supply chain attacks
are becoming more common and are a big deal.
So is this related to the buzzword I've heard
thrown around, Shadowhammer?
I've heard Shadowhammer a lot recently.
How is Shadowhammer related to this?
Yeah, that's what they're calling this.
And I think it actually might also refer partially
to some of the people behind it.
Like the group name might be Shadowhammer?
Interesting.
Because some of the people involved
or suspected threat actors here, there's
been similar looking attacks in the past.
So this is not entirely new.
It is just sort of wide scale.
And Kaspersky really wanted to publish it, obviously,
because they've improved some fixes in their software.
Yeah.
And I think it highlights a major issue that
is built into human beings, is we trust brands.
And you see a brand name.
It's a known vendor.
It's an update coming from ASUS.
And it's signed.
Why wouldn't you think that's safe?
And it kind of makes me want to eat a little bit of my hat.
Because System76 recently announced a firmware update
system that was based around the blockchain
to validate if it was valid.
And if the firmware update wasn't valid,
it has a rollback mechanism.
I kind of said, yeah, come on.
Just use LVFS.
So Emma is joining us.
She's in the Mumble Room right now.
And I think this is kind of interesting
that you guys were looking at an update mechanism that sort of
looks at if something is verifiably secure.
Now, Emma, have you had issues with firmware updates?
And has this been something that you guys have been considering
could happen?
I haven't had any issues or have customers report any issues.
But I think the firmware is the lowest-level software
that you can access.
So it's important for that to be the most secure.
Right, because it's doing things you're not even aware of.
You have no idea what's going on there.
And so I do like the idea of removing
a little bit of the brand trust out of the picture.
I mean, that's what it shows here, right?
Even with cryptography, you can have
stuff that helps you ensure that it was signed with the right key.
But you're entirely reliant on that organization
and basically what comes down to people and procedures
to maintain the security of that key and really
all the infrastructure in between.
So at that side, if we don't use additional technology,
this could happen to LVFS or any of our package repos.
I was going to ask if you think LVFS could be susceptible
to something like this.
I'm sure Richard Hughes would argue that there
is some precautions in place.
And that's where it can be a mixed bag between,
do you rely on centralization so that you
can have more resources dedicated to distributing
firmware from many sources?
Or do you go another route where you want multiple options
so that if that is compromised, well,
system 76, for instance, wouldn't be affected?
My understanding, too, is that this isn't necessarily
completely solved because ASUS still hasn't invalidated two
of the compromised certificates, which means the attackers,
or I suppose anyone else really that figures this out,
could potentially still abuse this.
Yes, which is kind of unfortunate.
They stole two certificates, it looks like,
one that expired last year, and then there
was still one valid one.
And so far, that hasn't been invalidated.
So I don't know why ASUS is kind of dropping the ball there.
It must be because it's going to break something.
Yeah, probably there's a process they need to go to do,
update, get new keys that they can trust in their system
before they can invalidate that one.
I imagine they're relying on it.
Man, the Windows ecosystem is such a hot mess.
Wow.
It's so gross with all these different updaters.
When you get a Windows machine out of the box,
there's three or four different installation interfaces,
install wizards, and MSI installers,
and custom written installers.
And then there's the vendor's driver updates and firmware
updates, and then the Intel updates.
There's like Windows updates.
The culture makes you accept those things as normal.
You know, I think Elle often says that Linux
has too many repositories.
She'll often say, like, every time the solution
is add another repository.
But then I think about that situation on Windows,
and I think, I don't know if I'd like that any better.
No.
No.
Wow, ASUS.
So we're all getting Macs?
Is that what you're saying?
Yeah, and then we'll get no updates.
I mean, then we're really trusting the manufacturer
with their keys baked in.
Yeah, as long as you're good with a driver from four years
ago for your video card, then you're set.
All right, well, I guess we can move on.
But I just thought that was a fascinating story
that Windows users.
Also, just as like a slight PSA, if you have any reason
to think you're one of those 600 people that
may have been targeted, they do have a little website
that we'll have linked where you can go enter your Mac
and check.
I was chatting with somebody that works at Linux Academy who
runs Linux as their main desktop but has an ASUS system running
Windows for gaming.
And he's like, I'm not so sure.
I might be one of these.
So yeah, it could be you.
It could be, because you just never know.
Anyways, so there's a distribution.
I'm not going to go with the vernacular the media is using.
There's a distribution out there these days that
is causing a bit of controversy, and it's
called SIGINT OS, Signals Intelligent OS.
Signals intelligence would be sort of like a spy trade
craft term for intelligence about communications.
And SIGINT OS is an Ubuntu-based distribution
with a number of built-in intelligence applications
for software-defined radios, amongst a bunch
of other things.
Yeah, that's kind of what's interesting is,
by all accounts, it seems to be very well executed,
a built-in GUI that grants easy access to just
all the common tools that they've got ahead
and installed for you, things like an FM and GPS transmitter,
a jammer, a GSM base station search tool,
and an IMS eye catcher.
Now, that sounds interesting.
So it's a competitor to Kali, but it's focusing right there.
What you just talked about is cellular technology and GPS
technology.
Yeah, right, and then that's kind of interesting.
They've targeted this specific thing.
It also has teased an LTE search and LTE decoder tool,
which that could be very interesting.
We've seen more and more flaws in those cellular protocols
over the years.
Yeah, I'm not quite clear on if you can just
download this distro and start scanning for LTE devices
if you have LTE equipment.
It sounds like you need a license
from the distribution provider.
Oh, interesting.
Yeah, I mean, when you get into some of these things,
there are various legal requirements,
so I could see why they might be worried about that.
And we've got to say, like you said,
there was some controversy and such.
It's always going to bring up the debate around tools
can be used for good and for bad.
So if you're a legitimate researcher,
we should be probing for security in these products.
You could also abuse it.
The other way to put that, too, because you're right,
and the other way to think about that
is where is the line of enablement?
Where are you enabling casual people
to abuse systems versus empowering administrators
to check their own systems or people that
are doing penetration testing?
And this distribution, I think, kind of walks that line.
It's a two gigabit, two gigabit, like I feel like the oldest
person in the room when I do gigabytes versus megabytes.
It's a two gigabyte ISO file, which is, to me,
even still seems like a lot.
I appreciate that it's not now, but to me, it does.
I mean, it's still kind of a lot.
I just remember trying to fit them on CDs, you know?
And you don't want to download that on mobile.
Or dial-up.
The thing where I kind of feel like they maybe
crossed the line is this GUI that they
include to find LTE base stations and the IME
numbers of phones.
That isn't necessarily a bad thing,
but what's the practical use case for that?
When do you need to survey LTE stations
and try to collect the identification
numbers of phones?
That's fair, although the part that gets me about it
is, especially for wireless things,
those are just signals passing through you and your device.
It's another network signal.
And you can record it, and then you can just.
Now, where the line gets more gray, in my opinion,
is when you start actively communicating back
and interacting with the system.
Acting as a base station, injecting false information,
or even just recording private information.
Hm.
That's a, yeah, that's.
Right, like you can record an FM station for personal play
mate, because that's how you play the thing
in the first place.
Also, just a mention here that it's still
using Unity 7 for the desktop on this distro.
I just think that's great.
I mean, we're going to come back to this,
but it's a practical tool, I guess.
I like how it also, it's all wrapped up
in this beautiful little GUI.
But I'm pretty sure the FCC would have
some problems with Jammer.
That's what I'm thinking.
You know, some of these tools, I think
it's maybe a little too far.
Yeah, that's what I'm thinking.
It's probably pushing it, especially
when it comes to the cellular network stuff.
That's crossing a line.
But to Wes's point, I kind of feel
like this is becoming more and more the standard way
we network.
Cellular networking is becoming the way more and more people
are connected.
Yes, it's become almost an important public utility,
in a sense, even though it's not treated that way.
And we should, I think in particular,
there has been a dearth of testing.
These have been very proprietary and controlled
because there's only a couple main players that have access
and either make or use the tech.
So I would like to see more research done.
That doesn't mean I want people jamming my cell phone, which
is exactly what I do not want.
I know, because that's really going to be annoying.
If that becomes commonplace, well, what we're going to see
is an arms race, and the cellular carriers
will have to be able to innovate and update
their networks at a way faster pace than they do now.
But maybe this is the kind of thing
that will force that to happen.
6G, here we go.
Yeah, forget 5G.
Well, who wouldn't want to jam someone
that's on their phone and stuck in traffic or something
like that, right?
That's just burning up your time.
And so let me just jam the entire freeway.
I suppose there's also an opportunity for encryption
to succeed here, Brent.
Yeah, it feels to me like when you open up
some of these networks to some testing
from some white hat hackers, then it
may push the envelope a little bit,
because some of these networks have been in sync for a long time.
And so I would love to see encryption a little bit
everywhere for everybody's benefit.
And you're seeing that a little bit more
with encrypted messengers and stuff on our cell phones.
So why can't the cell networks be better than they are?
The technology seems to be there.
Yeah.
I could see if screwing around with the cell networks
becomes more accessible, it could force their hand.
But the short-term result would be
it is people that are pranking you,
like you go to a group event and all the cells get jammed
and nobody has any data.
Ha, ha, millennials can't use Instagram.
That's how it'll be justified.
But the reality is that's actually
a very important communications tool.
So there will be short-term losses.
But long-term, you're going to force the cellular networks
to react.
I think the other thing that I can't actually speak to,
but we should think about is how does it affect the landscape?
What other tools exist that have similar capabilities?
So if you are even a little bit motivated in the prankster
mindset, is this unique in making it easy for you
to do this?
Or is it just better executed for professionals
that want to use it?
And I don't know.
I don't use these tools personally, so I can't say.
This is an area that I haven't messed around with.
Kali Linux and going after network systems.
In fact, I spent some time about a solid year and a half,
really, because for six months, it
was sort of like trying it out.
But for a solid year, I did contracting
as a penetration tester.
And one of the absolute most enjoyable things I did really
was so much fun to drop a text file on a Windows server
desktop saying, I've owned you, or get access to.
Man, I remember the time that I found the FTP server
that the clinics, like they have one
of these big multi-function printer
fact scanner huge units from Xerox that you get
a monthly price.
And Xerox is just kind of hangs out
because it's always broken.
And it was FTPing the images of client records
to a server with no password.
Plain text FTP, no password.
This is great.
And by hiring me, I was able to sort of outline
these issues to them.
And they were able to get them fixed up before anybody
actually exploited that.
And I was using things like Kali Linux.
I don't remember Kali Linux's.
It wasn't always called Kali back then.
It was called something else.
Do you remember what it was called?
There was another name for Kali.
And in the project, there was a change.
But I used it for ages.
And that's a very valuable tool.
And we will see where this goes.
Siginsos is kind of a fun name, too.
All right.
There is some really important stuff we need to cover.
A lot in housekeeping this week.
I want to start by saying, if you're looking for work
and you are a Ruby on Rails developer,
or maybe you love yourself some Angular,
or you're willing to learn some Angular,
Linux Academy is hiring right now for several positions.
Remote, full time, full benefits.
It's a great company to work for, linuxacademy.com
slash careers.
If you are a Ruby on Rails developer,
or an Angular guy or gal that wants
to be involved in developing future additions to Linux
Academy platform.
Yeah.
I mean, that's it, right?
Like, come aboard, help make the platform better,
and everything gets better.
You get to directly help train more Linux users, which
is one of my favorite things about the job.
linuxacademy.com slash careers.
I would really encourage you, if you're thinking about a change,
do it.
Do it.
Because first of all, there are so many great things
about remote work.
Not to make housekeeping super long,
but cheese just recently transitioned
to working from home.
And I'm curious, cheese, does it feel like freedom?
What is it?
If you could sum it up just really briefly.
Yeah, really briefly.
I mean, it's different.
I quickly learned that my dogs do not
observe daylight savings time, that one of my dogs
get aggravated if I change it from Judge Judy.
One of my dogs gets really upset about that.
That's a complicated dog, man.
Yeah, they don't have a concept of work time versus play time.
How's the commute now?
The commute is wonderful.
It's about 10 feet.
But I do go through a regular get dressed,
put on regular clothes, as if I'm going
to go into an office somewhere.
It is a little different whenever you're time off,
because your house is still where you work.
But it's cool.
I have an opportunity to go to the beach.
And I did that this past weekend just
to disconnect from everything.
And it was great.
You know what I find that I've only started doing,
even just recently, and I know you do this,
is going somewhere to work.
Oh, yeah.
Like a restaurant or a coffee shop or something like this.
I always thought that was such a MacBook using, coffee drinking.
But it actually is.
There's an energy you get by the people working around you.
I know that sounds weird, but you're around other people.
It's a change in pace.
And then at some point, you probably
want to go home, which can be a nice stimulus to just be
productive and wrap up.
You're like, OK, well, I came here to get this work done.
You kind of get your work done.
And then you can have a nice walk home, decompress.
Yes, and I'll go do XYZ at the coffee shop.
And then when I get back to the studio,
I'm going to work on this.
I separate it up that way, too.
So I think it's gotten me more active in my local community,
because it's not coming home from work
and then dreading going back out.
I actually get excited about going and seeing other people.
So I've become a lot more active in the meetups near me.
Interesting.
I can kind of see that, too.
That is one of the other things you have to be wary of, right?
You don't have an office anymore.
It's just you at your home.
You know, what I have found, too,
is I will get a different kind of work done
when I'm in office, like down at Linux Academy
versus back here at the studio.
Both good, just different.
That's interesting.
Just different kinds of work.
Anyways, let's keep going, because I was
going to try to make this brief.
If you are thinking about going to Linux Fest Northwest,
and you should be.
You have until the 31st, I think it is, of this month?
Yes, the end of this month.
OK.
May.
March.
March.
We're a mess.
I'm going to confuse it, yeah.
The end of this month.
It's March 31st.
If you want to do a fancy sponsored Linux Fest Northwest
shirt, like you want to help out the fest
and get a fancy shirt out of it, they've got an $80 shirt.
I know it seems like a lot, but it's
because you're kind of contributing to Linux Fest,
which is a completely 100% lug run event.
The Bellingham Linux Users Group is
what puts Linux Fest together, right?
It's not a foundation.
It's not a corporation.
It's not a group of companies in the Pacific Northwest.
It is the guys at the Bellingham Linux.
And you're not making anyone a red chair.
You're just helping make the conference a little bit better.
Yeah.
So we'll have a link in the show notes,
because it's kind of like first come, first serve.
And it looks like they're going to have
a cool design for it, too.
So I just want to give them a mention,
because I think it'd be kind of cool if you're thinking
about going, or you just love the idea of something
like that.
And then obviously, I need to remind everybody
that Ansible is a thing, and that we will have a study group
on Ansible next week.
Meetup.com slash Jupiter Broadcasting
for details on that.
And I'm happy to say it's going to be hosted
by our very own L and Wes Payne.
Hey, that's us.
That is you guys.
And I think that's going to be great, because first of all,
I know you're a great presenter.
And second of all, I know you have a lot of hands
on with this kind of stuff.
And so if you want to learn a little more about Ansible,
we'll have the time and date.
It's 1 o'clock our time, which is before Linux Unplugged.
Before Linux Unplugged.
We're trying it at a different time, before the show.
And we'll learn some stuff about Ansible.
And then we can unwind with an excellent little Linux
Unplugged.
Absolutely.
And I want to put an invite out there
to anybody who is experienced with Ansible or a bit
of an Ansible pro.
Please consider joining our Mumble Room
and help answering questions.
Because we'd like to answer a lot of questions.
There is our early indicators that this
is a topic that people are pretty interested in.
And we've got 50 people already signed up for the meetup.
And I think it's something that people are trying
to wrap their heads around.
And we really want to help the community learn and figure
this stuff out.
It's like we've expanded from being a virtual Lug
to now we have like a virtual Birds of a Feather session.
So it's just going to be a place to talk about and learn
Ansible.
That's exactly it.
That is exactly it.
The virtual, and a lot of times Lugs
will have people come in and present stuff.
And it's just, it's expanding that.
And it's expanding that.
And calling it a virtual Birds of a Feather session
is actually, that's a pretty good way to describe it.
And down the road, as we kind of figure this out,
I could absolutely see us opening this kind of thing
up to community contributors that
would like to cover a topic that they're an expert on.
It's not just limited to Linux Academy, Training Architects,
or Westpane.
We're going to open up to the community.
We're just kind of getting familiar with how to do this.
And I think this study group is going to be a good one.
The Ansible Fundamental Study Group, next Tuesday,
one hour before our regular Linux Unplugged Lifetime.
That's 1 PM Pacific.
Of course, we have all the details at meetup.com
slash Jupiter Broadcasting.
That's going to be pretty cool.
I think that's going to be a good one.
I'm looking forward to it.
Now, I also want to mention that DebConf 19 is
making a call for proposals.
If you'd like to present a DebConf this year,
well, now is the time.
It's from July 14th and 19th.
So go get that submitted.
We will have a link in the show notes for DebConf stuff.
Oh, wouldn't that be neat?
You've got a cool event coming up, it sounds like, too.
Oh, yeah.
In May, I think it is.
It is in May, yeah.
What is it?
I guess we should probably tell people.
I mean, why not?
If they're going to be there, they
can come say hi to you and L. L.
Do you remember the details on is it Kubicon and when it is?
May 20th through 24th in Barcelona, Spain.
Boom.
How about that, an event in Barcelona, Spain.
Come say hi to Wes and L. What a lovely place to have an event.
I'll be here holding down.
This is weird to sit one out.
Yeah, that is weird.
Never really done that before.
Hey, if anyone finds us, I want to go on another ghost tour.
So I will organize that.
Just ping me, and I will get that happening.
Awesome, a ghost tour in Spain.
Wow, that would really be next level, actually.
I love that.
So there you go.
Details in the show notes, if you
want to know more, which is in your podcast player of choice
or over at linuxunplugged.com slash 294.
Now, I wanted to cover a couple of things in the show
that I feel like maybe people have run into that we've never
talked about.
Because to be honest, we have a bit of a bias on this show.
And there's just no way around it.
We've all been using desktop Linux for years now.
And I didn't think it stopped me from recognizing
deficiencies or where desktop Linux wasn't super strong.
But I got to say, with Jason Evangelo from Choose Linux
doing this challenge, this distro challenge,
and working closely with Elle as she tries out
the different distributions.
And both of them are completely technical.
Both of them are very familiar with operating systems.
Competent debuggers.
Yeah, and just to watch the different kind of issues
they've run into.
It's kind of been like little, oh, yeah, mm, right.
It's been a lot of that.
It's been a lot of like, oh, yeah, that's right.
That's just something I've learned to avoid.
Mm, oh, yeah, that problem.
Yeah, I just put an Intel card in.
Now that's what I do, oh, yeah.
Oh, for that, yeah, if I'm going to have more than three
monitors, I just do it on a desktop.
Yeah, these are all the things I've
internalized that I just sort of forgive Linux for now.
And I'm watching it from fresh perspectives
and from fresh eyes.
And one of the more interesting ones,
one of the more interesting issues that cropped up
was Elle's tainted kernel.
And I honestly hadn't heard of this.
And I'm imagining, I'm just picturing it, Elle.
You're sitting there looking at your logs,
trying to debug what was going on.
I mean, there must have been some issue
you were trying to solve.
And then you see tainted kernel.
Take me through what happened.
Why were you debugging?
And what was the experience going through the logs
and seeing that?
So I'd love to tell you that I was actually
debugging at the time.
But all I did was open the lid to my computer.
I log in, and suddenly I've got this pop-up telling me
that my kernel is tainted.
No additional information, no click here for more.
Like a GNOME notification came down
saying you have a tainted kernel, like a desktop
notification?
A system alert.
Wow.
Yeah, so I'm like, OK.
So I start looking in logs, and I'm
trying to grep the word tainted out of system logs,
and I can't find anything.
So I'm thinking maybe I'm just not
looking in the right place.
I'm looking at journal CTL.
I keep missing my old VAR log messages so badly
in that moment.
Oh, I know.
I know.
That is the one thing.
I miss VAR log messages so much.
For clarification, it's Fedora, right?
And in what version?
Fedora 29.
And I was following Jason's challenge,
so we were running GNOME for GNOME.
Right, of course.
I believe it was a 4.20 kernel.
Yeah, OK.
So yeah, I get in there, and I'm looking at logs.
And since I can't find anything, I
do what I hopefully every other admin does, and I go to Google.
I'm about three pages in, and I can't
find any official documentation.
So then I start looking at just forums,
and I narrow it down to either I've
installed proprietary drivers, which I haven't made a change,
or my system is completely hosed, and I've been owned.
There was no in-between ground.
Wow.
And just to clarify, had this just been a stock Fedora
install, like you hadn't gone through the process in GNOME
software where you install proprietary stuff?
And you just have Intel graphics, right?
Yep, I've just been following everything as traditional
as I could get it.
So I, till this moment, cannot tell you
what changed that suddenly has this alert going off.
So I close it out, and I'm thinking, OK, I do an update.
I turn off the computer.
I reboot it.
I want to say I did it three times,
because I think I actually did, just to be safe.
And I come back, and suddenly I have another kernel error
with no additional information, just kernel error.
So I close it out.
I turn it off.
I turn it back on again, and we're back
to the tainted system message.
So at that point, I'm thinking, OK,
this must be really bad, because they keep notifying me
every time I turn it on.
And it's when I start asking you guys,
is there a tool that I can use to test my kernel's integrity?
And is this even something I should be doing?
I hadn't heard the term tainted kernel,
but then doing searching, I realized
it's been around for a little bit.
And it really kind of comes from the, I mean,
from what I could kind of grok searching on it,
from the perspective of the kernel developers,
considering the kernel to be tainted.
Would you say that's accurate?
Yeah.
And I think one thing we should think about here
is when you load a module, you're
loading like a part of the kernel, right?
You get access to kernel memory, the kernel space.
You can do some pretty dangerous things.
And so if you do have some weird condition,
and you're trying to debug the kernel,
that might not be useful, right?
If you've loaded some weird proprietary driver
that the kernel developers can't see or touch or really access,
who knows what it did to memory?
And that might have been causing the fault.
So they want to know that's one access, but it could also be.
And I think this is what happened in L's case.
It was just a warning, right?
So something went wrong.
The atheros driver didn't like some change
when it came back up from sleep in this particular kernel
version, emitted a warning, and then that
is enough to say, look, something unusual
happened with the kernel.
So even though the atheros driver is open source, and it's
Yeah, it's not just related to license or proprietary.
It's really just to understand in the debugging
context, did something weird happen
to this kernel that won't actually help us?
Or another way to put that would be,
where's the line of responsibility?
Is it the kernel developer's responsibility?
Is it the distro maintainer's responsibility?
Or is it the driver developer's?
I mean, there's even stuff where the BIOS can send a signal
that there's been some weird machine check exception.
And that can be considered the kernel tainted,
because again, who knows what happened?
But I kind of feel like it does highlight and really underscore
how this system isn't really built for end users,
necessarily.
So if I honestly, even myself, if I saw a tainted kernel,
I would think I've been compromised in some way.
I would immediately start Google searching
and probably figure it out eventually.
But I would look at that and think, something is bad.
Either my system is busted, or I have been hacked
or compromised.
Maybe that repository I just added.
You start going and looking for problems.
Which could be useful, but also might just be a rabbit hole.
Like, Elle, were you experiencing Wi-Fi problems before this?
Or was your Wi-Fi generally working?
No, and I didn't have any problems even after it started.
All I had to go on was that one error message.
So it wasn't even a problem.
So is this maybe a case of Fedora
just being a little over-aggressive
in displaying information?
Maybe other distros are having the same warning.
They're just not telling you about it?
It's like a computer that's a hypochondriac.
You start searching for a problem when there is none that exists.
I looked at this, and of course, my response was,
well, I would have put an Intel chip in there.
That's what I would have.
And that's such a typical Linux user response.
And I hate to be that guy.
Oh, I just would have.
Just pop open the back of your XPS
and put an Intel chip in there.
Yeah, right.
We can't tell people to do that.
Some of us are fine, but other people.
Sometimes people don't need their system.
They don't own it.
It's a work system.
They can't.
And that's where I think we're going to move on to this
as we keep discussing.
But it's OK to present how you can do that to get better
and more compatible hardware.
But you can't expect that everyone's
going to have the means or access or control to do that.
Yeah.
So I guess that would probably be a good segue
to talk about the thing that we've been discussing
internally recently.
About every three months or so, somebody
discovers that Jim Zimlin, the head of the Linux Foundation,
has a MacBook.
And they try to get a few clicks from it.
And they try to get a bunch of outrage going.
And it creates this really nasty dialogue
in the different places where the community has its dialogues.
And we all know where those places are.
And a lot of the times, it comes down to,
like, here's a couple of headlines.
We're not going to link to these articles in the show notes
because, again, it's clickbait.
But there's headlines.
And I guess if you really want it, you could go read it.
But here's a headline.
Jim Zimlin, head of Linux Foundation, friend or foe,
uses Mac OS.
And it's got some really solid logic in the article
as you read through it, like things like fun fact
and other things like that.
Here's another article headline.
Jim Zimlin's Linux Foundation still does not
care about Linux desktops.
Boom.
Just dropping it right there.
And I've kind of been that guy.
You could probably put a highlight reel together
of me being like, why are there so many MacBooks at Linux
events and giving people hard times?
Like, probably a good, solid few minutes
of years of me saying that.
So I've been there.
I understand.
But there is sort of a line, I think.
And as Linux becomes more and more dominant on the server,
there will be more and more users
that come to Linux for very practical reasons
for their job, to create software
to run on those servers in the cloud.
And they don't really care about your free software
or your open source.
And it doesn't mean that there isn't an opportunity
to educate them, but it means you could scare them away.
And I'm going to tell you, I have an example
that we're going to talk about here in a moment.
But before we get there, I want to talk about something that
was published on March 23rd.
Funny enough, Wes, did you notice it actually says
published March 23rd slash 24th?
Maybe it was published at midnight.
By Richard Stallman.
I've never installed GNU slash Linux.
And I think this is the root cause here.
It goes back to the beginning of the free software movement.
It is in our DNA.
It is fundamentally at the root of our culture.
So perhaps it is unfixable.
But I want to read something.
And I would like you, listener, to draw your own conclusions.
You can read the entire piece.
We'll have it linked in the show notes.
I'll read a highlight.
I'll try not to do a Richard Stallman voice.
And I guess I should say the context of this
is Richard Stallman is talking about install fests.
And he writes, if users have to wrestle
with this choice between installing
proprietary software and free software only,
then they should draw at least a moral lesson from it
and maybe get a better computer later.
But when the install fest makes compromises
on the user's behalf, say it shelters the user
from a moral decision, the user never
sees something other than convenience is at stake.
In effect, the install fest makes the deal with the devil
on the user's behalf.
There's a couple of things in here
that I already find fascinating.
We start with the assumed that for everyone,
this is a moral decision and a moral lesson.
So that's an assumed in this conversation, which I actually
think could be debated.
You could also debate if it should or shouldn't
be a moral decision, but I think it's not
a moral decision for everybody.
And the compromises that the install fest
is making on the user's behalf would
be the compromises that make Linux work on the machine
that they're installing it.
The difference between Wi-Fi or no Wi-Fi.
You come to an install fest because you
want to leave with a working Linux system.
Otherwise, you just do it at home.
So he goes on to write.
Oh, and then obviously, I should point out
the deal with the devil.
We're invoking religious language here, the devil.
Also, just as a point here, it makes
it sound like this is a deal that's signed forever,
but you can install truly free software later.
That's the whole problem here is you can start with Ubuntu,
and we all distro hop.
Sometimes that includes distributions
from the Free Software Foundation.
Yeah, that's true.
You could learn, get inspired, and move on.
Absolutely.
In fact, I think that's the way it generally happens.
So Richard Stallman has a proposal.
He says, I propose the install fest show users exactly what
deal they're making.
Let them talk to the devil individually.
My new idea is that the install fest
could allow the devil to hang around off
at a corner of the hall or the next room.
Then he writes in brackets, actually,
a human being wearing a sign saying, the devil, maybe
some horns.
Like, have some fun with it, he's suggesting.
Have some fun with this one.
The devil would offer to install non-free drivers
in the user's machine to make more parts of the computer
function.
Take that in for a second.
The devil would install non-free drivers in the user's machine
to make more parts of the computer function.
It's almost an admission right there in itself,
but it's the devil doing it.
That's the devil.
The devil would explain to the user
the cost of this using non-free unjust programs.
The install fest would tolerate the devil's presence,
but not officially sponsor the devil
or publicize the devil's availability.
He goes on to say, I should note,
that Richard Stallman says he does not
approve of the devil's work here.
And he wraps it up with, what is to stop the devil
from offering to install something
like GNU slash Linux distros, such as Ubuntu,
which offers the user other attractive non-free programs,
not solely ones needed for the machine's hardware
to function at all.
That's a concern he has.
I mean, does that make Ubuntu worse than the devil?
The devil might install Ubuntu.
And then here's the reason why that's not good.
Because it installs programs that are not solely
just necessary for the machine to function, barely function
at all.
If you are installing software beyond that
to get the bare necessary functions,
then you're making a deal with the devil.
That is our problem.
This is not a religious thing.
These are tools.
These are tools made by human beings.
These are not religious objects.
There are moral questions about their usage and software.
Absolutely.
But this, I see over and over again.
And I'm redacting the names to protect the innocent.
Because to be honest with you, I mean,
maybe we see this on a twice-monthly basis,
really, where somebody comes in and they say,
Chris, I'm so frustrated, or Wes, I'm so frustrated.
I've been trying to get so-and-so to switch to Linux,
and they're just not listening.
They won't even try it.
We've seen that.
Yeah, absolutely.
And sometimes you listen and you go, yeah, OK,
boy, that does sound like a good use case.
Yeah, they just leave my office.
You put Ubuntu or put Fedora on there, and they're good to go.
And then sometimes it doesn't make any sense.
And I realize now that I was that person.
I did this.
So what I'm about to talk about, I want to make clear,
I was this person.
I think probably many of us have been.
Yeah, I got excited, man.
Because Linux is exciting.
It's a great operating system.
You can go back into the history of these shows.
And my advocacy and mandating Linux
be used for every task is laid out
to bear in front of everybody.
But I've had to think about it.
I've got to be honest with you.
In part, because of issues we've had in the studio,
if I'm going to be effective in my job,
I need to self-analyze and realize
where I failed to properly consider the situation.
And we don't need to go into details
about the problems we've had.
If you guys are interested, you can email into the show
and ask us.
But we've had a range of issues that we're kind of starting
to get a handle on now.
But just operational things, right?
Nothing core to the content of the shows,
just stuff that are little details
that we have to do every day to make the stuff happen.
Yeah, like you discover, oh, this was a design decision
and also that's now creating this problem.
Or Pulse isn't talking to this when this application is
talking directly to the internet.
You discover all these little weird problems
that make it kind of obvious that there's not a lot of people
doing what we're doing.
You can make it work, but there's
not a business and ecosystem around this.
And I want to make it clear.
I think Linux is maybe one of the most important software
projects in the world, in the history of humanity,
and probably the most important free software project.
And as somebody who's run many Linux servers
and still has them running and is very happy,
I think it is the best operating system for servers.
Why do you suppose that is?
Why is Linux so goddamn good on the server,
and yet it's sometimes a little hit and miss on the desktop?
Sometimes you get tainted kernels.
Sometimes you get these issues that crop up.
Why is it hit and miss where Pulse audio sometimes
creates a Barry White effect, and to the live stream,
we sound like three octaves lower than we actually
are because it's failed to communicate properly
with the audio hardware, but yet the server side
can generate billions of dollars in revenue
and get 99.9999% uptime.
Why is that, Wes?
Part of it, I think, has to do a little bit with complexity
and the assumption of how skilled or knowledgeable you
need to be to operate the system,
now that we've made leaps and bounds there in the server.
But when you think about how it started taking off,
it was a free, useful tool that you could just install.
And if you had the know-how to get it installed and up
and running, you could be very effective at it.
You could replace really expensive other rigs
that you had to buy with just cheap Intel equipment.
Right.
And I would say, too, one of the things that
makes Android successful, the Linux underpinnings there,
and Linux successful on the server, is a massive ecosystem
of contributors from companies like Amazon, and Microsoft,
and Intel, and Qualcomm, and Samsung.
And the list goes on and on.
Everybody knows the big list of contributors that are.
Big list of diverse contributors
from different fields that are all interested in this core
underpinning.
Right.
And that translates to them spending money on developer
time to write code to contribute to these areas of the free
software stack.
And it's the whole range from things
that are application server-side things
all the way down to the kernel that makes
it work better on ARM devices.
It's a whole range where there is
a network of interdependent and competing businesses
that have economic incentives to contribute code
to this free software code base.
Those economic incentives do not exist in the audio and video
production side, where you're trying
to do real-time audio or video in a fairly complicated setup,
maybe with multiple interfaces, six, seven, 10 tracks at once.
And you're audio in on one interface,
audio out on another interface, but they have the same name.
That is not an area where there is an economy of companies,
some of the largest companies in the world, contributing code.
Pulse Audio does not have that benefit.
Neither does Video for Linux.
They are great projects that have had developers that
have been committed to them for a very long time.
Man, am I grateful.
And they've come a long way.
I mean, it's a lot better than it used to be.
And we have things come in, like PipeWire,
that just look fantastic.
But again, there is maybe a company or two.
And they're less mission critical, too.
So you can put up with that if your employee's desktop,
occasionally the sound doesn't quite work right,
but it's a bigger deal when your kernel crashes on your server.
And I don't think any of this is unusual.
I think it's perfectly fine to expect maybe
that the audio system on Linux isn't quite as solid as it
is on a top 500 computer running a compute project,
or the web server and database application stacks that
are completely rock solid don't quite match up
to how video capture works on Linux.
It seems incredibly reasonable when you look at it
in that context.
I think it's natural, right?
Because it is a successful free open source project,
it can be taken in all the directions that people want to.
You just have to have contributors.
So the more contributors you have in each direction,
then it can grow there.
But I didn't see it.
See, I didn't see it.
Because I let what was a faith in my advocacy for Linux
blind me to what is a simple economic market reality.
I think it's confusing, too, because we're
talking about general computers here, right?
But we're also talking about specific tools or workflow.
Some of the stuff that we use for a computer, like in audio,
that could be a piece of equipment on the rack.
And we don't have the same conversation
to the same degree about that.
And I want to try to use Linux for all the things
because I think it's a great platform
and it's easy for me to be like, I could do audio editing
on Windows, but I would prefer to figure out
how to do it on Linux.
That doesn't mean that Linux is the best at it.
And if my whole job and only focus was audio production,
then I probably wouldn't choose Linux
just because there aren't some of the tools I might need.
Right, and I didn't give that consideration
even though this is my business.
And to be clear, we're not ripping Linux out.
We're going to try to make this work.
We think we can get this.
I just now look back at it, and I
realize that this was a blind spot that I had.
My advocacy for Linux blinded me to what
was obvious limitations just given the market
realities of the situation.
And so I got a note in on Telegram
in our Jupyter broadcasting group about, Chris,
I'm super frustrated because I can't get Adam Curry to switch
to Linux.
And I looked at the situation, I said, you know, man,
I think what really is going on here
is there's really zero incentive for someone
to make a switch for that workflow when you're recording,
you're live streaming, you're editing.
Linux is great, but it's not necessarily better
than Windows at that job.
And there is a cost to switching because he
would have to change recording applications and editing
applications.
He would have to learn a new desktop
and a new operating system.
Like, there's a cost.
And he just wants to get the show done.
He just wants to make money.
That's where it is, right?
There's always a cost, and there's
going to be some cost-benefit curve,
and you have to decide, like, where does it make sense
and where is it good enough?
So I get notes from other podcasters
that have the same thing, and the kind of general response
is like, man, the Linux community is really nagging me.
Like, they're just really nagging me constantly.
They say, you guys do it on Linux,
but it doesn't seem worth it to me.
And I don't recommend that they switch when they write to me
because I don't feel like it would be necessarily
a successful transition.
I think for advocacy to be successful,
we need to advocate in a new way, in a different way,
something that is less like just blind advocacy where we're
saying, yeah, Linux can do every job in every situation.
That's true in most cases.
You can probably make it work, right?
And that's right.
That's the difference between saying, like,
you can do it on Linux, and you should do it on Linux.
Bingo.
And if you're trying to recommend something
to somebody, you're trying to get them to switch,
you've got to think about the workflow.
And you've got to think about what your approach is.
First of all, you can't just go all in crazy,
like switch everything at once.
But you also have to consider, is Linux
the right tool for that job?
Because for them, it's not a moral decision.
It's not something that speaks to who they are
and how they feel about the future of software
and computers.
It's simply a tool like their blender is a tool.
Yeah, right.
And I imagine that most people who
find the philosophy of free software interesting
did not come to it, did not come to these tools because
of the philosophy, right?
They probably learned about the philosophy
after they started using some of these tools.
You're only going to do that if you stick around,
because the tool is effective.
And I think we should, I kind of feel like we
should be as a community, we should be OK with the fact
that it's not great at video games.
It gets better, but X11 has issues,
and video card drivers have issues,
and software availability has issues.
It's not the best at video production and podcast
production.
It's usable, it's doable, but it has issues.
Like we should acknowledge that, so that way when
you do recommend Linux to somebody,
it's a successful transition.
Yeah, be honest about expectations, right?
So that people aren't sad and depressed,
or think bad about Linux, and just be like,
here's the things that's great at,
and here are some things that you might struggle at,
or if that's what you really need to do,
maybe this isn't a good fit.
And I feel like, too, on top of that,
it's clear there are workloads that Linux is great at.
Absolutely.
And clear winners.
And that's where you double down,
and you just have to be careful in your advocacy.
You have to take a slow approach,
and demonstrate success, and show your workflow working.
A slow approach is it, right?
Because this isn't a one and done deal.
You can make inroads, right?
Maybe first you set up a code box,
and tell people that it's Linux.
They get a little trust there.
Then you set up a new machine that is Linux,
and you say, here you go.
It's great for browsing the web on the couch, have at it.
You can do this gradually in a way
where people can learn to trust it, enjoy it.
And then is the time, once you see
that this is a great tool with a great ecosystem of tools,
you can start explaining how a lot of that's
possible because of free and open source philosophy.
Yeah, exactly.
All right, let's start going around the horn here
and see what other people think.
So let's start with Mr. Bacon, because you've been
in the community for a long time.
You've seen the different types of pushy advocacy
versus subtle advocacy.
And I'd love to hear your thoughts on this.
One thing, and I think this can kind of go across the board,
is that the IRC room, or Telegram, or forums,
or whatever community that you're a part of,
if somebody is asking for help, be that guy that actually
reaches out and tries to give some help.
Don't be the guy that RTFMs them,
or is elitist and says they should
use this instead of that.
Try to help guide them to the path.
But one thing I would say, as far as the advocacy goes,
is that I think that there's, like you said,
there's different approaches.
There's always the tool for the job.
Linux is rock solid on the server side of things.
It's getting there on the desktop.
And some of these companies actually put their money
where their mouth is.
So you have System76, I'm sure Emma could speak to that.
They're actually integrating Core Boot now.
You have people like Purism as well.
And they're slowly advocating these things
for us to be able to utilize and give us the tools that we need.
But they're not pushy about it.
And I think being overly preachy,
and I know that I was whenever I first
started using Linux as well, but being overly preachy
is really going to do nothing but drive people away
from it.
I'm curious, too, we'll get to the folks in the Mumbroom
here in a second, but, Elle, one of the things
I've noticed as you've been documenting your issues
and talking about them on your Twitter account
is there are sometimes the typical, like,
why didn't you just do this, noob?
And then there's sometimes, like, people take it
as a mentoring moment.
And that seems to be the big difference.
So strangely enough, this is actually the topic
that I'm discussing in my talk at Linux Fest.
And the name of my talk is, you know,
strengthening your community by poisoning the well.
And that's kind of been the way that I
feel my entire journey in Linux has been,
is I go out and I do something that I'm so proud of.
Like, hey, I'm trying out this new OS.
And I run into one little bug, and I go out
and I ask for help, and all I get is, well, it's obvious.
You ran into it because, you know,
why aren't you using Arch?
Why are you using KDE?
It's always, why did you do this,
instead of turning it around and going, OK, you know what?
I haven't run into this issue.
I feel that people are almost afraid to admit
what they haven't experienced and what they don't know.
So when I find those people, you know,
I call them my Twitter family that turn around and go,
I don't know, but I'll help you troubleshoot.
Or I do know, I ran into this, you're not alone.
I always jump on those experiences
because those are the people that I feel
are going to change the way this community is run.
Yeah, and it is really like one opportunity at a time
to begin to change that.
Brent, I'd like to hear your experiences, too,
because I know you've been ramping up your Linux usage
for years now.
Yeah, and before I get into that,
I have a question for Emma.
Emma, is this kind of a new experience for you?
I'm assuming you were using Windows previously.
Did you run into problems there?
And when you did, how was that process for you?
Switching was actually really easy.
Like you guys were saying, people
can approach it as a mentor or a bully, really.
And I had all my people at System76
showing me how to do things constantly,
never being negative about anything
or making me feel dumb.
I always felt empowered after I switched.
And I never missed Windows.
Not once.
Amen.
And Elle, what about your experience?
So mine is a little bit different.
I spent a majority of my time off the grid.
So Linux was actually my first OS.
I did not use Windows before I moved on to Linux.
Wow.
That is so awesome.
It is really cool, yeah.
And she went hardcore into the whole Red Hat route, too.
And she could teach us a few things about RHEL.
Let me tell you.
Oh, I bet.
So I'm curious now to hear your story, Brent.
Yeah, well, I, as many of us, kind of
went through lots of different operating systems,
from Windows doing photo stuff there,
and then moved to Mac OS doing photo stuff there
for many years, and then to Linux
just because I thought it could serve me a little bit better.
But I've been also, for many years,
helping other users move to Linux as well.
And I find that the best approach
is to take a humble one, right?
Just because I'm convinced that it's the best tool for me,
I know is not true, because I have these unique properties
about myself compared to, let's say,
my family or friends around me.
I'm super curious.
I've been dabbling with computers my entire life.
And so I can't assume that the everyday computer
user is going to have any of those same properties.
And so what I've noticed is really helpful
is trying to use empathy to approach it
from their direction.
So OK, my mom, for instance, uses her computer for email
and browsing Pinterest and things like that.
These are not things I do, but OK, in this environment,
is this going to do what she needs
and just get out of her way, right?
So seeing the computer more as a tool and less like a hobby
really helped me to move people successfully
and on a path, a gentle path, that I can really enjoy as well.
That makes sense.
I'd be curious how you see photography
and audio seem like there's some parallels there.
So I'd be curious, like, Linux certainly,
I mean, you use Linux for some of your professional things,
but how do you feel about recommending it
as the platform for photography?
Yeah, I think that's a really important question.
I see the chat room's asking that too.
When I first started on Linux, I found
it was a little bit more in its infancy,
and that was started full time on Linux
doing all of my professional stuff,
so exclusively on Linux, I think, around 2012.
So it's wild.
But I was watching Linux before then and the tools
and trying to see, so that's the moment where I decided, OK,
this has everything a user like me who's
fine with tinkering needs.
And just last year, I gave a little bit of a talk
here at a MakersFest.
And when I gave that talk, the whole intention
was to show the photo tools on Linux
to try to encourage anyone to get access to them.
And what the tools can do now, because they've
come a long way, is they break down the barrier of entry
to photography, so anyone with almost any computer
can get access to some really professional tools.
And the really neat thing was that the class
was filled with people who showed up at the MakersFest,
so there were retired dads who were just dabbling
in photography as a pastime.
There were kids who were just trying to check everything out
just to play.
And so I ended up giving a talk to the most widespread user
base possible, and everybody caught on to it.
So that, to me, really proved, OK, I'm showing dark table
and I'm showing five super simple aspects of it,
but it can really reach out to all of these users
if you present it in a way that's gentle
and has the right progression.
And the kids caught on the fastest, which was great.
So OK, someone who, I think they were like 10 or 11,
so I was like, OK, they can start at almost any age,
and that's a perfect age to start dabbling in creative arts.
So photography is great, right?
And but then the people who had way less computer experience
also, after a little while and some pointers and stuff,
started picking up.
So that, to me, was really the proof that, OK, photography
on Linux is there.
And this every day, and I never have
to tinker with the photography software anymore.
The things I'm tinkering with are more advanced.
And the photography, when I need to get to it,
I can just get to it, and it's a production machine for that.
So I would say anybody in photography, at least,
it's a great time to move or at least try it.
Yeah, and it's more and more categories over time.
Linux is a better and better tool for that.
And I think, Brent, that was an amazing breakdown
of the things you need to do to evaluate, right?
You can't just assume it's going to work.
You need to be practical about it.
And the other thing is it demonstrates
what I think is maybe I would love
to be a key takeaway from this conversation
is show a successful workflow.
Demonstrate being successful at a task.
And that can be the biggest sales pitch in itself,
right there.
I think you really got to get this right.
It's our responsibility, as experienced Linux users,
to sell this tool in a way where it can succeed.
I think, Wes, you were talking about it earlier in our chat.
I just copied your quote here.
This is great.
You said, it's about being honest about tooling.
And if you want the Linux experience to be good,
you need to recommend it in situations where it can succeed.
Yeah, I mean, it's not fair to people
we recommend this to, to have to experiment and fight.
And if they want that, OK.
Or you can support them while they do that.
That's great.
But that's not for everyone.
So try to find situations where it's going to be a great fit.
There are many, because Linux is great at many things.
Then you can earn some trust, and people open up after that.
Yeah.
Do you know what?
I think we got another soapbox in here.
Get that out of here.
Let's just get that out of here.
All right, I know the mumble room has more to say.
Maybe we'll carry it over to the post-show.
But I want to make that to be right there.
I think that's the key message to drive home right there.
We can continue the conversation in the post-show.
But I think that's the takeaways, is as experienced
Linux users, we need to be good stewards.
We need to get this right.
I think Elle says it perfectly.
Sometimes you just have to be willing to admit to everyone
that Linux sucks sometimes, and it's OK.
Perfect.
There you go.
I love it.
Most important free software project in the world, I say.
At least in my opinion.
But make sure that when you recommend it,
it's going to succeed.
That's what you've got to do.
For the sake of everyone.
That's right.
All right, go get more Wes Payne over at TechSnap.
We talked about that earlier, TechSnap.Systems.
He's also at Wes Payne.
I'm at Chris Elias, the network at Jupiter Signal.
Man, we've got so much, really so many things to say now.
I guess we need a longer outro.
Yeah, we do.
But I'll just leave you with this.
Join us a little early next week for that Ansible study group.
I think that's going to be really valuable.
So I think we'll just make that the final word.
Oh, and of course, also, see you right back here next Tuesday.
Ah!
Oh!
Hey, Unplugged Program, alright, Mr. Payne, we gotta get everybody to go over JB Titles.
Go vote!
Now, exercise those voting rights we've given you.
So while everybody's voting on the titles, I know, I always plug at JBtitles.com, but
we gotta get a good title.
I wanna see what you guys think about NextDoc2, which promises to turn your smartphone into
a laptop.
It's a nice aluminum laptop filled with battery, so it charges your phone too.
Big trackpad, nice keyboard, HD screen, and it works with a few of those Android devices
where you can plug it in and it extends to the device or like a Raspberry Pi.
NextDoc doesn't only work with smartphones.
With the full size HDMI in port, the new NextDoc still supports many PCs and Raspberry Pis,
creating fully functional computers at a revolutionarily low cost.
Thanks to the new USB Type-C port, we can also develop better integrated PC sticks so
that you can use NextDoc with the processor and operating system of your choice.
Imagine an enduring, sustainable computer that you can simply upgrade and customize
as the years go by.
By separating processor and operating system from the physical interface, we hope to start
a paradigm shift in consumer electronics, where computers can be adapted rather than
becoming obsolete, generating less electronic waste for the environment.
So you can upgrade your smartphone and you still get the same screen, same battery, same
keyboard.
I think the 90s are calling us back.
It does feel like history is repeating itself a little bit.
Well, it's got 754 backers with 24 days left to go.
You know what also interests me about that is that back in the early days of the Raspberry
Pi Gen 1, a lot of people were using Motorola's old Laptop to do the same exact thing.
It is actually kind of nice with a Raspberry Pi.
It is actually kind of nice.
I actually would like one of these for a Raspberry Pi.
I don't know what the final price would be.
What's the difference than attaching a nice keyboard and thing to your iPad?
I guess the flexibility here, because you can pick what you interface with.
Yeah, yeah.
And I guess the whole, like, it has USB-C and it works with the smartphones and supports
that too.
That is kind of nice.
I wish convergence ever becomes a thing.
