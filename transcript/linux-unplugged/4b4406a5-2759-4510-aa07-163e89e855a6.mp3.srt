1
00:00:00,000 --> 00:00:03,000
You realize you've got three different distributions in front of you right now?

2
00:00:03,000 --> 00:00:07,000
You've got Nix, you've got Arch, and you've got Ubuntu going on right now.

3
00:00:07,000 --> 00:00:10,000
This is a busy day for Wes Payne.

4
00:00:10,000 --> 00:00:13,000
He's like frantically trying to get things installed.

5
00:00:13,000 --> 00:00:16,000
How are you doing over there? I know it's a big task for today's show.

6
00:00:16,000 --> 00:00:21,000
Well, plan A didn't work out just yet, but plan B? Going to plan?

7
00:00:21,000 --> 00:00:26,000
Plan A required me nuking and paving my perfectly awesome Fedora 36 setup.

8
00:00:26,000 --> 00:00:29,000
That was going to happen regardless of the plan.

9
00:00:29,000 --> 00:00:30,000
Okay, maybe.

10
00:00:30,000 --> 00:00:35,000
So then I put Arch on there because we wanted some newfangled kernel patches for today's show.

11
00:00:35,000 --> 00:00:39,000
And I look over there, and you're loading Nix on that thing.

12
00:00:49,000 --> 00:00:52,000
Hello, friends, and welcome back to your weekly Linux talk show.

13
00:00:52,000 --> 00:00:53,000
My name is Chris.

14
00:00:53,000 --> 00:00:54,000
My name is Wes.

15
00:00:54,000 --> 00:00:55,000
And my name is Brent.

16
00:00:55,000 --> 00:01:04,000
Hello, gentlemen. Coming up on the show today, HP has announced a new laptop that ships with Pop OS aimed at developers.

17
00:01:04,000 --> 00:01:06,000
We'll share our thoughts on that.

18
00:01:06,000 --> 00:01:12,000
And then why we're getting excited about BcacheFS and how it compares to ButterFS.

19
00:01:12,000 --> 00:01:14,000
Your workstation's got a new file system inbound.

20
00:01:14,000 --> 00:01:21,000
If you do anything in media production or have large files or perhaps gaming, you're going to want to stay tuned to this.

21
00:01:21,000 --> 00:01:24,000
And then we'll round out the show with some boosts and picks and a lot more.

22
00:01:24,000 --> 00:01:29,000
So before we go any further, let's say time appropriate greetings to our virtual Linux users group.

23
00:01:29,000 --> 00:01:31,000
Hello, Mumble Room.

24
00:01:31,000 --> 00:01:32,000
Hello.

25
00:01:32,000 --> 00:01:33,000
Hello, Chris.

26
00:01:33,000 --> 00:01:34,000
Hello, Wes.

27
00:01:34,000 --> 00:01:36,000
And hello, Brent.

28
00:01:36,000 --> 00:01:38,000
Hi, everyone.

29
00:01:38,000 --> 00:01:39,000
Good to have you here.

30
00:01:39,000 --> 00:01:42,000
Our Mumble Room is open every Sunday when we do the show.

31
00:01:42,000 --> 00:01:43,000
Mumble is free software.

32
00:01:43,000 --> 00:01:48,000
And we have a quiet listening lobby if you just want a low latency Opus audio stream.

33
00:01:48,000 --> 00:01:50,000
And then, of course, we have the on air area.

34
00:01:50,000 --> 00:01:54,000
And then we use Mumble for office hours and other productions here on the network.

35
00:01:54,000 --> 00:01:55,000
So it's always nice to have it ready to go.

36
00:01:55,000 --> 00:01:58,000
And we often have community events on there, too.

37
00:01:58,000 --> 00:02:01,000
We have more details at Linux Unplugged dot com slash Mumble.

38
00:02:01,000 --> 00:02:12,000
Speaking of meetups and community, though, it looks like Alex is putting together a London meetup for Saturday, August 6, 2022 in the London area.

39
00:02:12,000 --> 00:02:15,000
We'll have details at meetup dot com slash Jupiter Broadcasting.

40
00:02:15,000 --> 00:02:17,000
Oh, I wish I could go.

41
00:02:17,000 --> 00:02:19,000
Oh, my goodness.

42
00:02:19,000 --> 00:02:20,000
Me, too.

43
00:02:20,000 --> 00:02:21,000
So go in our Stead audience.

44
00:02:21,000 --> 00:02:23,000
Make sure Alex won't be there by himself.

45
00:02:23,000 --> 00:02:24,000
Yeah.

46
00:02:24,000 --> 00:02:25,000
Make sure it's a party.

47
00:02:25,000 --> 00:02:26,000
Take some pictures.

48
00:02:26,000 --> 00:02:27,000
Share them.

49
00:02:27,000 --> 00:02:28,000
Make us jealous.

50
00:02:28,000 --> 00:02:30,000
So that way we have to go to the next one.

51
00:02:30,000 --> 00:02:33,000
I already have something booked for that first week of August.

52
00:02:33,000 --> 00:02:35,000
I want to go so badly.

53
00:02:35,000 --> 00:02:41,000
But if you're in the London area or anywhere near there and you'd like to go, we'll have the details at meetup dot com slash Jupiter Broadcasting.

54
00:02:41,000 --> 00:02:45,000
I think Alex is still taking input from the community, too, on ideas and whatnot.

55
00:02:45,000 --> 00:02:46,000
Yeah.

56
00:02:46,000 --> 00:02:47,000
So now's the time to put your input in.

57
00:02:47,000 --> 00:02:50,000
If you think you might be available or want to make it.

58
00:02:50,000 --> 00:02:52,000
But we all just got done traveling.

59
00:02:52,000 --> 00:02:54,000
All of all three of us were just traveling.

60
00:02:54,000 --> 00:02:56,000
And we survived.

61
00:02:56,000 --> 00:02:57,000
We did.

62
00:02:57,000 --> 00:02:59,000
Honestly, sometimes I don't know how we do it.

63
00:02:59,000 --> 00:03:02,000
That last bit of my drive was really crazy.

64
00:03:02,000 --> 00:03:07,000
But we all had, I think, a pretty decent trip considering what could have gone wrong.

65
00:03:07,000 --> 00:03:11,000
Brent, I believe you successfully smuggled back something from the United States into Canada.

66
00:03:11,000 --> 00:03:13,000
Do you want to out yourself?

67
00:03:13,000 --> 00:03:15,000
You say something like it was only one thing.

68
00:03:15,000 --> 00:03:17,000
So I'm not exactly sure which one you're talking about.

69
00:03:17,000 --> 00:03:18,000
Any hints?

70
00:03:18,000 --> 00:03:20,000
Oh, you tell us.

71
00:03:20,000 --> 00:03:22,000
Well, it's that one extra organ.

72
00:03:22,000 --> 00:03:25,000
Oh, actually, I wonder which one you're latching on to.

73
00:03:25,000 --> 00:03:38,000
But maybe one of the one that's exciting me is Alex gave me a phone that is not like a potato, which a potato on fire, which I think is a really good thing.

74
00:03:38,000 --> 00:03:40,000
Your last one here was actively hazardous to those around you.

75
00:03:40,000 --> 00:03:43,000
Yeah, I mean, it's a good conversation starter.

76
00:03:43,000 --> 00:03:50,000
Yeah, I mean, I've heard stories of battery expansion, but I've never actually seen one that bad in person and then seen somebody continue to use it.

77
00:03:50,000 --> 00:03:53,000
So I'm surprised they even let you on the airplane with that bomb.

78
00:03:53,000 --> 00:03:55,000
It keeps my thigh warm, you know.

79
00:03:55,000 --> 00:03:57,000
Well, so are you going to transition to the new phone now?

80
00:03:57,000 --> 00:03:59,000
You got a whole strategy.

81
00:03:59,000 --> 00:04:04,000
Well, you know, I know Drew's listening and I got into a car accident trying to get the lovely phone he gave me.

82
00:04:04,000 --> 00:04:05,000
So thank you, Drew.

83
00:04:05,000 --> 00:04:10,000
And then basically Alex had one for me as well because they're both sweethearts.

84
00:04:10,000 --> 00:04:14,000
And he said I couldn't live in his house anymore if I didn't switch phones.

85
00:04:14,000 --> 00:04:20,000
So he forced me to switch to this new wonderful one plus six that he had kicking around like he does.

86
00:04:20,000 --> 00:04:26,000
I got to say, Chris, like the transition was the thing that I was dreading.

87
00:04:26,000 --> 00:04:35,000
I feel like we're so used to having the desktop and things are, I don't know, seem much easier to transition there than they do on an Android phone.

88
00:04:35,000 --> 00:04:36,000
And I was right.

89
00:04:36,000 --> 00:04:41,000
It was a total pain and I haven't even moved everything over and I just so cringy.

90
00:04:41,000 --> 00:04:47,000
It was just I tried a few, you know, pieces of software that are trying to help you and none of them worked.

91
00:04:47,000 --> 00:04:55,000
And some people will say, well, Google has this thing where you just, you know, backs up your entire phone and then gives it back to you.

92
00:04:55,000 --> 00:04:57,000
But that's not in my realm of interest.

93
00:04:57,000 --> 00:05:04,000
So I did it the old way and I had to, you know, peck at the phone for about six six different sessions.

94
00:05:04,000 --> 00:05:09,000
It's probably a little more challenging because you're trying to do this, I would imagine, without using Google services.

95
00:05:09,000 --> 00:05:14,000
Yeah. Well, I figure, you know, you should be able to do this on the local network, right?

96
00:05:14,000 --> 00:05:18,000
I guess you should. Oh, it's painful. Yeah, it's painful.

97
00:05:18,000 --> 00:05:23,000
And the other thing is, I don't think I'm maybe a representative regular user.

98
00:05:23,000 --> 00:05:31,000
I would imagine we all have so many different little I have like two or three VPN different types of VPNs on there now.

99
00:05:31,000 --> 00:05:36,000
And that's just a small example of all the different crazy stuff I'm working with on there.

100
00:05:36,000 --> 00:05:40,000
So you do make your own life difficult. Maybe that's a nice way to put it.

101
00:05:40,000 --> 00:05:43,000
You know, though, I think once you're done, it's going to be worth it. That's a good phone.

102
00:05:43,000 --> 00:05:46,000
It's going to last you a good while, especially how long you get out of these phones.

103
00:05:46,000 --> 00:05:58,000
It'll be a worthwhile transition. And every time you do these transitions to at least for me, I always find like, oh, I need to do a better job at figuring out my two factor stuff or I need to do a better job at making sure this is backed up.

104
00:05:58,000 --> 00:06:04,000
So it's, you know, in a way, it's better to identify this stuff now than just when your phone actually caught on fire.

105
00:06:04,000 --> 00:06:12,000
I did also take the opportunity to install lineage on there, which I haven't used since the cyanogen mod days way back.

106
00:06:12,000 --> 00:06:17,000
I had like a dream that I installed it on. It's nice to catch up like that, too.

107
00:06:17,000 --> 00:06:23,000
Yeah. So I'm so far they just came out with a new version is a little bit buggy, but they've been putting out updates like crazy.

108
00:06:23,000 --> 00:06:26,000
So I'm excited to find out how that's going to be.

109
00:06:26,000 --> 00:06:29,000
I would love to hear your experience with that as time goes on.

110
00:06:29,000 --> 00:06:33,000
We'll be able to do a little bit of a long term look back and see what you think.

111
00:06:33,000 --> 00:06:37,000
Wes, you were on assignment last week, assignment to party.

112
00:06:37,000 --> 00:06:40,000
Tell the class where you went and how it went.

113
00:06:40,000 --> 00:06:42,000
Yes, I was in the fine city of New Orleans.

114
00:06:42,000 --> 00:06:45,000
That's nice. It was warm, I imagine.

115
00:06:45,000 --> 00:06:48,000
Yes. 91 and incredibly sticky.

116
00:06:48,000 --> 00:06:56,000
The last day I was there, which I chose to sort of wander around as much as I could, but I was quite tired for the ride home worked out nicely.

117
00:06:56,000 --> 00:06:58,000
No, it was great. I mean, amazing food, amazing drinks.

118
00:06:58,000 --> 00:07:00,000
But there was one drink I didn't I didn't get to have.

119
00:07:00,000 --> 00:07:05,000
So it's curious maybe if there's any audience members out there who have good places in mind next time I'm back.

120
00:07:05,000 --> 00:07:09,000
And that's the the Ramos gin fizz. Oh, that sounds great.

121
00:07:09,000 --> 00:07:12,000
It's tall, creamy, citrusy with sky high foam.

122
00:07:12,000 --> 00:07:19,000
You've got gin, lemon, lime, cream, simple syrup, orange blossom water, egg white and soda.

123
00:07:19,000 --> 00:07:26,000
Egg white? The original recipe calls for 12 minutes of shaking.

124
00:07:26,000 --> 00:07:29,000
It's more of a meringue at that point.

125
00:07:29,000 --> 00:07:31,000
It does sound like a dessert.

126
00:07:31,000 --> 00:07:36,000
But, you know, you want a good one. And it's it's mostly these days considered a brunch drink, is my understanding.

127
00:07:36,000 --> 00:07:44,000
So you need to find a place that, you know, has a bar staff who's willing to make you this this fancy ass drink and make it for you at like 11 a.m.

128
00:07:44,000 --> 00:07:48,000
That's very true. Well, I'm glad you got a chance to go down there and enjoy yourself.

129
00:07:48,000 --> 00:07:55,000
That sounds really like I have probably a handful of places in the US that I've never been to that are really high on my list.

130
00:07:55,000 --> 00:07:57,000
And that's definitely one of them. Sounds like it was probably a really good time.

131
00:07:57,000 --> 00:08:01,000
Did you, Wes, did you enjoy any music while you were there? It seems like that would be a thing to do.

132
00:08:01,000 --> 00:08:05,000
Oh, yeah, of course I did. I mean, you'd have to be an idiot not to.

133
00:08:05,000 --> 00:08:10,000
Well, you just wander around the French Quarter and there's music spilling out of all the doorways.

134
00:08:10,000 --> 00:08:17,000
So that does sound really nice. That's great for somebody who likes to walk around to like yourself and you take it all in.

135
00:08:17,000 --> 00:08:20,000
Well, maybe one day we'll do a meet up down there. Get a chance to check it out.

136
00:08:20,000 --> 00:08:28,000
You can show me around. I also have a story on my travels that involves a drink because you know how I am when I read like usernames.

137
00:08:28,000 --> 00:08:30,000
Super accurate. Yeah. Very good at pronunciations.

138
00:08:30,000 --> 00:08:36,000
And I'm very, very good at figuring out people's usernames and reading them completely accurately and pronouncing them accurately.

139
00:08:36,000 --> 00:08:42,000
And so that really good skill I have apparently also applies to like looking up restaurants.

140
00:08:42,000 --> 00:08:48,000
And I kid you not. I found a place called Mamosas and I didn't even think of Mamosas, right?

141
00:08:48,000 --> 00:08:53,000
Because I'm an idiot and I don't know what's wrong with how I read, but that's just how my brain works.

142
00:08:53,000 --> 00:08:57,000
So I like let's go get breakfast to this place called Mamosas.

143
00:08:57,000 --> 00:09:05,000
We show up and of course it's like a brunch place that specializes on all of these different Mamosas and a bunch of other really good things.

144
00:09:05,000 --> 00:09:14,000
That sounds like a great find. And I got myself like a pomegranate Mamosa and it was fantastic and just really hit the spot.

145
00:09:14,000 --> 00:09:19,000
So I was in southern Oregon in the Grants Pass area and it was beautiful.

146
00:09:19,000 --> 00:09:24,000
You know, mid May, mid to late May. It's just such a gorgeous time down there.

147
00:09:24,000 --> 00:09:30,000
And I was getting some repairs done. Brent knows that we just took horrendous damage coming into Denver.

148
00:09:30,000 --> 00:09:35,000
And it resulted in some of my suspension kind of just getting smashed.

149
00:09:35,000 --> 00:09:40,000
And so I was just getting the last bits of that fixed up and then I was getting upgraded leaf springs put in.

150
00:09:40,000 --> 00:09:45,000
So now JOOPS is better equipped for the rougher road conditions that seem to be out there.

151
00:09:45,000 --> 00:09:49,000
And I think in part the roads have just gotten worse since I've gotten the RV.

152
00:09:49,000 --> 00:09:51,000
There's just a lot of infrastructure that needs work.

153
00:09:51,000 --> 00:09:55,000
So when I take her in, I get her fixed and I tend to do a little upgrading.

154
00:09:55,000 --> 00:09:58,000
And now I've got these really new robust custom made leaf springs put in there.

155
00:09:58,000 --> 00:10:03,000
And I've got a bunch of Kony shocks and all this really nice stuff like Sumo springs and sway bars.

156
00:10:03,000 --> 00:10:09,000
I mean, she's really, she's really dialed in. She's a better drive than the day she came off the lot.

157
00:10:09,000 --> 00:10:13,000
No doubt about it. And we're just wrapping up.

158
00:10:13,000 --> 00:10:16,000
And we thought we'd get out of there Tuesday evening. I figured I'd get back up here.

159
00:10:16,000 --> 00:10:22,000
I'd be here for Self Hosted and the Bitcoin Dad podcast and we'd be we'd be good to go.

160
00:10:22,000 --> 00:10:27,000
Tuesday evening rolls around like, you know, guys, this is taking a bit longer than we expected.

161
00:10:27,000 --> 00:10:29,000
Do you think you'd be OK heading out Wednesday?

162
00:10:29,000 --> 00:10:32,000
Well, yeah, you know, it's fine. We've got our home here.

163
00:10:32,000 --> 00:10:35,000
I'll contact Wes. We'll figure out how we're going to record land.

164
00:10:35,000 --> 00:10:37,000
We'll get it all. We'll get it all solved.

165
00:10:37,000 --> 00:10:39,000
Wednesday comes rolling by.

166
00:10:39,000 --> 00:10:44,000
Oh, man, guys. So here's the thing. We have we found this. We think we should probably get this fixed.

167
00:10:44,000 --> 00:10:47,000
It's pretty important for your steering. It's going to be an issue if you don't solve it.

168
00:10:47,000 --> 00:10:52,000
And in the back of my mind, I know all these shops, they're booked out till the end of September.

169
00:10:52,000 --> 00:10:56,000
So if we want to go on a J.B. road trip this summer, I got to get this fixed now.

170
00:10:56,000 --> 00:11:03,000
Now or never. Now or never, Wes. I mean, literally, they're all booked out till the end of September because I've called around.

171
00:11:03,000 --> 00:11:07,000
Let's take care of it. So Thursday day goes by. They get it all taken care of.

172
00:11:07,000 --> 00:11:12,000
We're looking really good. They want to do a test drive. So we schedule all that for Friday morning.

173
00:11:12,000 --> 00:11:17,000
I think we're going to get it. We're going to get out of here. It's going to be fine. Should be all right.

174
00:11:17,000 --> 00:11:20,000
As they're wrapping up doing their test drive.

175
00:11:20,000 --> 00:11:30,000
Can you guys can one of you guess a completely unrelated system that exploded that left us stranded and put us right up against the last minute?

176
00:11:30,000 --> 00:11:33,000
And it's not Levi. No, Levi was good.

177
00:11:33,000 --> 00:11:38,000
Completely unrelated to the work we're doing, just as they're about to wrap up, just as we're about to pull out of the lot.

178
00:11:38,000 --> 00:11:42,000
We had literally another system in the RV blow up.

179
00:11:42,000 --> 00:11:47,000
Any guesses? Anybody have a guess? I have a guess from trends.

180
00:11:47,000 --> 00:11:51,000
I'll call them trends. And I don't want to say that this might be it.

181
00:11:51,000 --> 00:11:57,000
But is it related to a clear fluid that gives life to most things on Earth?

182
00:11:57,000 --> 00:12:01,000
Water? No. No. Really? I was sure it was going to be water.

183
00:12:01,000 --> 00:12:03,000
Thankfully, it was not water. Well, that's good.

184
00:12:03,000 --> 00:12:17,000
No, we had a hydraulic line that we use for our jacks rip open and spew hydraulic fluid all over the motor and the transmission, which created a tremendous amount of smoke.

185
00:12:17,000 --> 00:12:21,000
And there is a lot of hydraulic fluid, so it just dumped.

186
00:12:21,000 --> 00:12:28,000
But here's the other thing. When the hydraulic system is pulling the jacks up, that's when it pressurizes.

187
00:12:28,000 --> 00:12:33,000
And so the jacks began to fall down because the system was losing pressure as the RV is moving.

188
00:12:33,000 --> 00:12:37,000
So then the pump kicks in in overtime to pull the jacks back up.

189
00:12:37,000 --> 00:12:44,000
Right. So then it's just it's just pumping as much hydraulic fluid through the system as it possibly can because it's trying to keep those jacks up.

190
00:12:44,000 --> 00:12:52,000
And so there is just fluid dumping all out the bottom of dupes, all right down over the transmission, because that's right where the hydraulic lines run over is the transmission.

191
00:12:52,000 --> 00:12:55,000
The transmission, of course, is like one hundred and seventy five degrees.

192
00:12:55,000 --> 00:13:01,000
So it ignites. Right. We're getting we're getting we're getting like close to like full on combustion.

193
00:13:01,000 --> 00:13:06,000
This all happens in the lot of the shop. So we stop the rig, shut it all down.

194
00:13:06,000 --> 00:13:10,000
We figure out the hydraulic pump is running like crazy. We go out there, we disconnect it from power.

195
00:13:10,000 --> 00:13:15,000
So it shuts down. We let everything cool down. It's a mess.

196
00:13:15,000 --> 00:13:18,000
And then we're trying to figure out what went wrong.

197
00:13:18,000 --> 00:13:29,000
And you look through you follow the hydraulic line through the engine up over the transmission where they have it hooked to the chassis with like a loop that's running through a metal loop.

198
00:13:29,000 --> 00:13:35,000
And that metal that metal loop had a little bit of a rubber on there to help to help just keep things from rubbing.

199
00:13:35,000 --> 00:13:43,000
But that rubber had fallen off. And so these hydraulic hoses were just chafing against a metal loop over the transmission.

200
00:13:43,000 --> 00:13:45,000
And so it just cut them until they burst.

201
00:13:45,000 --> 00:13:51,000
Yeah. So totally unrelated to the work. But they told us that they've had customers rigs burned down.

202
00:13:51,000 --> 00:13:56,000
You're so lucky this happened where it did and when it did. Imagine we were on the road or something.

203
00:13:56,000 --> 00:14:00,000
I know. I imagine I was on the freeway. Oh, my. If it was even hotter out.

204
00:14:00,000 --> 00:14:06,000
Not only that, but then the shop like sprung into action. They brought the rig back into the shop.

205
00:14:06,000 --> 00:14:11,000
They personally like the techs personally went over to another business in town,

206
00:14:11,000 --> 00:14:19,000
brought them our busted line and had that shop manufacture us a custom new line to fit, which is more robust.

207
00:14:19,000 --> 00:14:23,000
And then they brought it back and hooked it all up for us and got us out of there by the afternoon.

208
00:14:23,000 --> 00:14:28,000
So we can make it back here for the kids and do the show. Just a huge, huge win.

209
00:14:28,000 --> 00:14:31,000
Henderson's lineup in Grants Pass, Oregon. Totally recommend them.

210
00:14:31,000 --> 00:14:35,000
And now, you know, not only that, but juice is in better shape than ever with the suspension.

211
00:14:35,000 --> 00:14:42,000
But for a hot moment there, it got really treacherous. So I'm glad I'm glad that they took care of it for us.

212
00:14:42,000 --> 00:14:46,000
I'm glad it happened there in the parking lot, literally in the parking lot where we could react quick.

213
00:14:46,000 --> 00:14:52,000
We could jump out, figure out what's going on, disconnect the power to the pump and and take care of it before anything got on fire.

214
00:14:52,000 --> 00:14:56,000
And if she was up to full temperature, who knows what would have happened? I don't know.

215
00:14:56,000 --> 00:15:03,000
I know I'm always telling you the horror stories here on the show. I feel like I'm looking at the chat room right now and I feel like the chat room is like,

216
00:15:03,000 --> 00:15:06,000
oh, my God, this sounds like a disaster. First of all, yeah, don't get an RV.

217
00:15:06,000 --> 00:15:14,000
But second of all, what I don't tell you is like all of the great memories and the cool places we'd park and, you know, all that stuff that happens all the time.

218
00:15:14,000 --> 00:15:17,000
I'm just telling you about the really dramatic things that are fun to share on air.

219
00:15:17,000 --> 00:15:23,000
But we are looking forward to a West Coast summer road trip coming up later this year.

220
00:15:23,000 --> 00:15:28,000
And I want to be ship shape and we want to do several meet ups down the road.

221
00:15:28,000 --> 00:15:36,000
So we're going to have more details about that. We're brainstorming and planning that in the office hours podcast, which you can catch at office hours dot here.

222
00:15:36,000 --> 00:15:41,000
But let's talk about Linux for a moment. It's for people who like to mess with computers.

223
00:15:41,000 --> 00:15:45,000
So HP has announced the HP Dev one.

224
00:15:45,000 --> 00:15:53,000
It is an AMD powered Linux laptop, has an AMD Ryzen seven pro processor.

225
00:15:53,000 --> 00:16:04,000
It also has an AMD GPU, a 14 inch anti-glare display, one terabyte of NVMe storage by default, 16 gigs of RAM by default.

226
00:16:04,000 --> 00:16:12,000
But perhaps the most interesting detail about this laptop is that it ships with Pop OS pre-installed.

227
00:16:12,000 --> 00:16:15,000
Pop OS from System 76 is pre-installed on this laptop.

228
00:16:15,000 --> 00:16:28,000
And our understanding is that this has been a relationship that has been months in the making and includes System 76's staff training a team at HP to support Pop OS.

229
00:16:28,000 --> 00:16:34,000
And then a contract or something in place that keeps System 76 as a backup to HP support.

230
00:16:34,000 --> 00:16:39,000
So if you have an issue with this HP Dev one, you go through HP and then they can escalate to System 76.

231
00:16:39,000 --> 00:16:42,000
I have two questions that come to mind from this.

232
00:16:42,000 --> 00:16:49,000
Minimac, I'm curious what your reaction is hearing Pop OS pre-installed on a HP developer laptop.

233
00:16:49,000 --> 00:16:52,000
Yeah, we talked about that in the pre-show.

234
00:16:52,000 --> 00:17:07,000
I was asking myself, could it be that Pop OS has become like a new stable standard for the user that expects that in five years from now his desktop will look the same as it does right now?

235
00:17:07,000 --> 00:17:17,000
We had the same thing like five years ago. If you installed Ubuntu, you could be sure that in two or four years your system would still look the same.

236
00:17:17,000 --> 00:17:20,000
And that starts to change a little bit.

237
00:17:20,000 --> 00:17:29,000
So Pop OS could become some kind of standard for Linux entry user. I don't know.

238
00:17:29,000 --> 00:17:37,000
I mean, you could see a I see what you're saying with like the cosmic desktop could create a standard user interface.

239
00:17:37,000 --> 00:17:40,000
You combine that with something like an Ubuntu LTS base.

240
00:17:40,000 --> 00:17:46,000
I think the other kind of big question there is why Pop OS, right?

241
00:17:46,000 --> 00:17:51,000
You have you have sort of the assumed standard for developer laptops for years.

242
00:17:51,000 --> 00:17:59,000
If you go by the original of this formula, which is the Sputnik is stock Ubuntu. In fact, that was a very intentional choice.

243
00:17:59,000 --> 00:18:04,000
Dell had to learn the hard way not to do a custom Linux, and they took that feedback in from the community.

244
00:18:04,000 --> 00:18:07,000
And one of the lessons they internalized was that you do stock Ubuntu.

245
00:18:07,000 --> 00:18:12,000
But now we see someone going down this path in 2022 and they've chosen Pop OS.

246
00:18:12,000 --> 00:18:15,000
And Brent, I'm curious to know your thoughts about this choice.

247
00:18:15,000 --> 00:18:20,000
I'm a little puzzled. I mean, I love this choice, but I'm a little puzzled because.

248
00:18:20,000 --> 00:18:31,000
HP is kind of, you know, they've been around a while and Pop OS, while they really know their stuff, as we know, is a relatively new distribution.

249
00:18:31,000 --> 00:18:42,000
So it feels like a gamble maybe on their part, although it does sound like they're building a nice connection with those building the software on both sides.

250
00:18:42,000 --> 00:18:47,000
It sounds like a really nice, from what we know, relationship that's happening there.

251
00:18:47,000 --> 00:18:56,000
So it's not like they're just going into it blind. But I'm curious who, you know, they must have looked at choices and landed on Pop OS.

252
00:18:56,000 --> 00:19:00,000
And I have many more questions that I I guess have answers at this point.

253
00:19:00,000 --> 00:19:07,000
And maybe we'll gather some of those in the future. It feels both exciting and kind of like risky at the same time.

254
00:19:07,000 --> 00:19:14,000
And surprising, right? Because there is the obvious element of somewhat cross competition and hardware here.

255
00:19:14,000 --> 00:19:19,000
You could argue that maybe the CUDA laptop is competitive with the dev one or something.

256
00:19:19,000 --> 00:19:27,000
And so there is maybe a clever, like a fox strategy at play here by system 76. I agree with Brent. I've got a lot of questions.

257
00:19:27,000 --> 00:19:33,000
I've been pondering this. I have the sense that system 76 will probably answer any questions we have to the best of their ability.

258
00:19:33,000 --> 00:19:38,000
I just haven't asked them yet because I'm still kind of processing this. What about you?

259
00:19:38,000 --> 00:19:47,000
Actually, in one hand, it's kind of comforting knowing that, you know, system 76 by this point kind of knows their way around this exact task and sector.

260
00:19:47,000 --> 00:19:52,000
And how would I feel about, you know, let's say HP wanted to do this but didn't have their help.

261
00:19:52,000 --> 00:19:59,000
I could see this going kind of kind of poorly if they don't have their their beat on the Linux community in the same way.

262
00:19:59,000 --> 00:20:03,000
And I guess the Sputnik model, I mean, it's old, right? Sputnik happened a long time ago.

263
00:20:03,000 --> 00:20:10,000
And this is a sign that people are not sure exactly where Canonical's focus is.

264
00:20:10,000 --> 00:20:16,000
Not saying they're not in the desktop space, but it's just a different world for them than it was when Sputnik launched.

265
00:20:16,000 --> 00:20:21,000
Yeah, it is. And, you know, when Sputnik launched, everybody was all about the Intel chipset.

266
00:20:21,000 --> 00:20:26,000
And now everybody would love to see a really nice Ryzen laptop. And that's exactly what HP is doing here.

267
00:20:26,000 --> 00:20:28,000
So that's kind of interesting.

268
00:20:28,000 --> 00:20:36,000
And I wonder if in a world of supply chain shortages and whatnot, if this isn't an area that system 76 could apply a little bit of leverage,

269
00:20:36,000 --> 00:20:43,000
because they probably know the needs of a manufacturer like HP better than most shops because they're a hardware manufacturer themselves.

270
00:20:43,000 --> 00:20:48,000
So that makes them sort of a sort of specially suited to interface with for a job like this.

271
00:20:48,000 --> 00:20:54,000
You know, I wonder as well if from HP's perspective, this might be a nice distinguishing factor.

272
00:20:54,000 --> 00:21:00,000
Nobody else is really doing this yet, and though it is kind of exciting. So maybe that's a that's a good thing for HP.

273
00:21:00,000 --> 00:21:05,000
Yeah, it does. It does add sort of a special value that the other laptops don't have.

274
00:21:05,000 --> 00:21:09,000
You mentioned support as well, which is kind of an exciting add on, isn't it?

275
00:21:09,000 --> 00:21:14,000
Yeah, this is still really early, too. We just know basically everything we've told you.

276
00:21:14,000 --> 00:21:21,000
Yeah, I'd really like to be able to go try out some configuration here because, I don't know, I'm not super wowed by the base.

277
00:21:21,000 --> 00:21:27,000
Some of the marketing materials like a little it's a little much, you know, they're really trying to hit this like dev line up hard,

278
00:21:27,000 --> 00:21:30,000
but it's not that shiny in that respect.

279
00:21:30,000 --> 00:21:34,000
Yeah, it feels like it's not quite hitting the note they're looking for.

280
00:21:34,000 --> 00:21:37,000
It's coming across a little too obvious, a little too on the nose.

281
00:21:37,000 --> 00:21:41,000
But, you know, you can see how these have these organizations work, right?

282
00:21:41,000 --> 00:21:44,000
They've identified a category of user.

283
00:21:44,000 --> 00:21:49,000
And the great thing about dev is it's kind of like the way Apple uses the term pro.

284
00:21:49,000 --> 00:21:54,000
I think a lot of people just buy the dev edition that are considered themselves technical.

285
00:21:54,000 --> 00:21:57,000
Yeah, I'm technical. I need I need the fancy one, right?

286
00:21:57,000 --> 00:22:04,000
Yeah. And so it's sort of a it's sort of a term that they can kind of use that tells pretty much anybody who's an enthusiast.

287
00:22:04,000 --> 00:22:06,000
This might be the machine for you.

288
00:22:06,000 --> 00:22:09,000
You know, I look at this kind of stuff from the lens of media production.

289
00:22:09,000 --> 00:22:11,000
We do all of our media production on Linux.

290
00:22:11,000 --> 00:22:20,000
And so one of the things that we do to try to make that as smooth as possible is we try to use hardware that's well supported by the kernel, you know, stuff that's just baked in.

291
00:22:20,000 --> 00:22:24,000
And the shortcut to that is just use stuff that has open source drivers.

292
00:22:24,000 --> 00:22:30,000
And that's the nice thing about this AMD hardware is the GPU driver is open source.

293
00:22:30,000 --> 00:22:34,000
And that solves so many of the stability problems on desktop Linux right there.

294
00:22:34,000 --> 00:22:38,000
So, you know, that's it's that's what makes it appealing to me.

295
00:22:38,000 --> 00:22:40,000
We'll have a link if you want to check it out.

296
00:22:40,000 --> 00:22:44,000
Send us your questions. Linux Unplugged dot com slash contact or boost them into the show.

297
00:22:44,000 --> 00:22:55,000
We'll collect some of them and then try to open up some communications between HP System 76 and get some answers for you all.

298
00:22:55,000 --> 00:23:00,000
Linode dot com slash unplugged. Go there to get one hundred dollars in 60 day credit on a new account.

299
00:23:00,000 --> 00:23:08,000
Yeah, you go there to support the show. Linode is a sponsor I am thrilled to work with because I honestly feel like they've been part of my secret sauce.

300
00:23:08,000 --> 00:23:14,000
Bringing Jupiter broadcasting independent again, going from zero to one hundred miles per hour, right?

301
00:23:14,000 --> 00:23:19,000
Demerging and creating a new business and keeping everything going, keeping all the lights going.

302
00:23:19,000 --> 00:23:22,000
It's like it's like fixing the bus as it's going down the road.

303
00:23:22,000 --> 00:23:33,000
And it would not have been possible without spinning up infrastructure at Linode and the tooling to do that, their API, the command line clients, the pricing, the support behind it.

304
00:23:33,000 --> 00:23:35,000
It all plays a factor.

305
00:23:35,000 --> 00:23:41,000
They've been focused on this for nearly 19 years, making it possible to just run applications on Linux and make it work great.

306
00:23:41,000 --> 00:23:50,000
And of course, I love the fact that they make it super simple to run any distribution you'd really want to, including the latest centos stylings out there, as we could call them.

307
00:23:50,000 --> 00:23:56,000
And of course, when you take advantage of our offer by going to Linode dot com slash unplugged, you get that hundred dollars.

308
00:23:56,000 --> 00:24:02,000
So you could try deploying some of their epic processor systems, try out their super fast rigs.

309
00:24:02,000 --> 00:24:06,000
They've got 11 data centers around the world. They have MVME PCI storage available.

310
00:24:06,000 --> 00:24:09,000
Of course, they've got SSDs and everything as well.

311
00:24:09,000 --> 00:24:15,000
I mean, the options and the tiers are going to fit perfectly with what you need, either for a personal site or something for your business.

312
00:24:15,000 --> 00:24:18,000
And I can say that because that's exactly what I do.

313
00:24:18,000 --> 00:24:21,000
I've got systems up there that just act as support systems to my RV.

314
00:24:21,000 --> 00:24:26,000
So that way I can synchronize and move data up into the cloud and then down to my RV over cellular connections.

315
00:24:26,000 --> 00:24:29,000
I use Linode to sort of like support infrastructure.

316
00:24:29,000 --> 00:24:35,000
I consider them like my orbital systems that are supporting my RV, and I personally pay for that.

317
00:24:35,000 --> 00:24:40,000
But over on the J.B. side of the house, we've been deploying to our audience and hitting higher numbers than ever.

318
00:24:40,000 --> 00:24:43,000
And Linode's been scaling with us all along the way.

319
00:24:43,000 --> 00:24:46,000
So they're for something personal or something for your business.

320
00:24:46,000 --> 00:24:51,000
They've got the infrastructure for you and they're not trying to lock you into some esoteric, crazy platform.

321
00:24:51,000 --> 00:24:57,000
Go try something, go learn something and go support the show and go try out the best cloud hosting in the business

322
00:24:57,000 --> 00:25:02,000
and get $100 while you do it. Just go to linode.com slash unplugged.

323
00:25:06,000 --> 00:25:10,000
Now, gentlemen, I was just listening to the Linux action news this morning before we came on air,

324
00:25:10,000 --> 00:25:14,000
and you were talking quite excitedly about BcashFS.

325
00:25:14,000 --> 00:25:18,000
And I'm curious if Wes got his paws deep, deep into this.

326
00:25:18,000 --> 00:25:20,000
This is something that we've been following for a while.

327
00:25:20,000 --> 00:25:25,000
Wes and I are both big fans of Kent Overstreet, the primary developer of BcashFS,

328
00:25:25,000 --> 00:25:36,000
because he's creating a file system that could be a great replacement for my beloved XFS and ButterFS in one file system.

329
00:25:36,000 --> 00:25:43,000
You know, something that supports copy on write, something that has snapshots, but also really good performance.

330
00:25:43,000 --> 00:25:45,000
I mean, I think that's what attracts you to it as well, right?

331
00:25:45,000 --> 00:25:47,000
It's another chance at a modern file system.

332
00:25:47,000 --> 00:25:52,000
You know, I mean, even ButterFS, which is pretty gosh darn new in terms of, you know, file systems.

333
00:25:52,000 --> 00:25:57,000
It started a long, a long time ago and has seen many different eras at this point.

334
00:25:57,000 --> 00:26:01,000
And we have new ideas. We've learned a lot in the intervening years.

335
00:26:01,000 --> 00:26:08,000
BcashFS is kind of neat because it comes from Bcash, which was already sort of almost the bottom half of a file system.

336
00:26:08,000 --> 00:26:12,000
You know, it had a lot of the similar operations already sort of implemented in the kernel.

337
00:26:12,000 --> 00:26:16,000
Now, you know, there needed to be some updates, and that's part of the work that Kent has been doing,

338
00:26:16,000 --> 00:26:20,000
is sort of modernizing and improving things as the kernel has changed over the years there as well.

339
00:26:20,000 --> 00:26:23,000
But it means it, you know, wasn't totally starting from scratch.

340
00:26:23,000 --> 00:26:31,000
It's just kind of adding a lot of the nicer file system stuff on top, which means not saying go put a bunch of precious data in BcashFS.

341
00:26:31,000 --> 00:26:33,000
Let's get that out of the way right now.

342
00:26:33,000 --> 00:26:35,000
But it's come a surprisingly long way.

343
00:26:35,000 --> 00:26:40,000
And I think in today's episode, we're just suggesting if you're curious,

344
00:26:40,000 --> 00:26:44,000
it's getting a little easier to actually give it a try and maybe even use it.

345
00:26:44,000 --> 00:26:48,000
Yeah, this is it's now entering the we want to be confident when we switch to this.

346
00:26:48,000 --> 00:26:51,000
So let's start trying this out years in advance.

347
00:26:51,000 --> 00:26:54,000
I've lost track of how many years you and I have been tracking BcashFS.

348
00:26:54,000 --> 00:26:55,000
It's been a long time.

349
00:26:55,000 --> 00:26:58,000
Yeah, you know, Kent's got a Patreon.

350
00:26:58,000 --> 00:26:59,000
He gives some some updates.

351
00:26:59,000 --> 00:27:03,000
But, you know, depending on how things are going, that's maybe a couple of times a year.

352
00:27:03,000 --> 00:27:08,000
What changed recently is he gave a presentation at a conference about it,

353
00:27:08,000 --> 00:27:12,000
and then LWN did a great write up of sort of detailing what they were talking about.

354
00:27:12,000 --> 00:27:17,000
Yeah, we recap that in Linux Action News, and we'll also have it linked here in the show notes.

355
00:27:17,000 --> 00:27:19,000
So you can read up on it.

356
00:27:19,000 --> 00:27:24,000
But the long and the short is, is that there's been some big work done

357
00:27:24,000 --> 00:27:27,000
and we're getting within the home stretch for mainlining it.

358
00:27:27,000 --> 00:27:32,000
So perhaps in the next six months to a year, we're going to see it land in the Linux kernel.

359
00:27:32,000 --> 00:27:38,000
Along with that, we're also, you know, getting an opportunity.

360
00:27:38,000 --> 00:27:43,000
To really see how something like this comes along in the free software community.

361
00:27:43,000 --> 00:27:45,000
I was just speculating before the show started.

362
00:27:45,000 --> 00:27:50,000
I wonder how much money Apple spent developing APFS.

363
00:27:50,000 --> 00:27:52,000
I think I read somewhere.

364
00:27:52,000 --> 00:27:54,000
We don't really know. They don't share these details, right?

365
00:27:54,000 --> 00:27:59,000
But I think I read somewhere they spent five to six years internally developing APFS.

366
00:27:59,000 --> 00:28:04,000
You got to figure they had probably at least somewhere between three to a dozen engineers,

367
00:28:04,000 --> 00:28:07,000
perhaps more, a project manager at least.

368
00:28:07,000 --> 00:28:13,000
How many millions do you suppose Apple spent developing APFS?

369
00:28:13,000 --> 00:28:18,000
And we've been watching BcashFS created out in the open.

370
00:28:18,000 --> 00:28:21,000
A file system that has a focus on performance.

371
00:28:21,000 --> 00:28:25,000
In fact, Kent says that some of the early adopters of BcashFS

372
00:28:25,000 --> 00:28:29,000
are video production shops that need multiple 4k streams.

373
00:28:29,000 --> 00:28:31,000
They're already using it.

374
00:28:31,000 --> 00:28:35,000
And we've watched this rollout and we're going to see it land in the Linux kernel.

375
00:28:35,000 --> 00:28:38,000
A multi-year project.

376
00:28:38,000 --> 00:28:40,000
And we get it for absolutely free.

377
00:28:40,000 --> 00:28:43,000
We get it for free as users and we can see the whole thing be made.

378
00:28:43,000 --> 00:28:45,000
And this is truly how free software works.

379
00:28:45,000 --> 00:28:48,000
And so that's one of the reasons we've watched this project too.

380
00:28:48,000 --> 00:28:53,000
But now it's really not that hard to get a module installed on a current Linux box

381
00:28:53,000 --> 00:28:55,000
and get BcashFS support.

382
00:28:55,000 --> 00:29:00,000
So you built a custom Nix OS image, which is one of the nice things you can do with Nix.

383
00:29:00,000 --> 00:29:04,000
Yeah, okay. So one way or another you're going to have to get a new kernel.

384
00:29:04,000 --> 00:29:11,000
Do some kernel building anyway and get the BcashFS patches integrated in.

385
00:29:11,000 --> 00:29:13,000
How you want to do that, you know, you have a few options.

386
00:29:13,000 --> 00:29:15,000
But yeah, Nix OS makes it super easy.

387
00:29:15,000 --> 00:29:19,000
Arch is another good candidate because there's both the user space tools

388
00:29:19,000 --> 00:29:22,000
and the kernel packaged up in the AUR.

389
00:29:22,000 --> 00:29:26,000
But of course, you got to still build that.

390
00:29:26,000 --> 00:29:31,000
And Nix, Nix has the Linux testing kernel with BcashFS available

391
00:29:31,000 --> 00:29:34,000
and built in in their caches already.

392
00:29:34,000 --> 00:29:37,000
So that makes it really pretty darn quick to get it up and going

393
00:29:37,000 --> 00:29:39,000
and built and installed and available.

394
00:29:39,000 --> 00:29:43,000
And then because Nix is awesome, you can follow some directions in the Nix OS Wiki

395
00:29:43,000 --> 00:29:47,000
to build yourself a custom installer ISO.

396
00:29:47,000 --> 00:29:51,000
And then you can just right there, just in the same way you would on your system,

397
00:29:51,000 --> 00:29:54,000
you can specify like, hey, I want this kernel, I want these things installed.

398
00:29:54,000 --> 00:29:57,000
So when we started thinking, all right, it's time,

399
00:29:57,000 --> 00:30:01,000
we've been sort of, you know, oohing and ahhing from the sidelines for ages now.

400
00:30:01,000 --> 00:30:04,000
Let's try and get our hands at least a little bit dirty and try this stuff out.

401
00:30:04,000 --> 00:30:05,000
How are we going to do it?

402
00:30:05,000 --> 00:30:08,000
I don't know, it didn't seem like making you and Brent sign up

403
00:30:08,000 --> 00:30:11,000
for custom compiling your own kernel wasn't necessarily fair.

404
00:30:11,000 --> 00:30:12,000
Thank you.

405
00:30:12,000 --> 00:30:15,000
It seemed like a nice easy way to try to like bridge the gap a little bit

406
00:30:15,000 --> 00:30:17,000
because here's an ISO you could just boot up in a virtual machine

407
00:30:17,000 --> 00:30:21,000
or on real hardware, and then you would have that stuff ready to go.

408
00:30:21,000 --> 00:30:23,000
This is why we were really attracted to Nix OS.

409
00:30:23,000 --> 00:30:27,000
Picture what he just said and apply it to something like a workstation or server environment.

410
00:30:27,000 --> 00:30:32,000
He has the primitives to build his own distro using the Nix tooling,

411
00:30:32,000 --> 00:30:38,000
and his distro comes preloaded with BcacheFS and the Ferronix test suite and stuff like that.

412
00:30:38,000 --> 00:30:44,000
But we could just as easily have a distro that comes preloaded with our specific Linux desktop environment,

413
00:30:44,000 --> 00:30:48,000
our favorite Linux application for recording audio, which is called Reaper,

414
00:30:48,000 --> 00:30:53,000
Mumble, and a web browser, and you could have a ready to go ISO image

415
00:30:53,000 --> 00:30:57,000
that just deploys the absolute latest versions of all that stuff on a box

416
00:30:57,000 --> 00:31:00,000
that Wes cooks up ahead of time.

417
00:31:00,000 --> 00:31:03,000
Now we're doing it for testing, which I could see us doing this more often too, right?

418
00:31:03,000 --> 00:31:05,000
This opens up a whole new world for us.

419
00:31:05,000 --> 00:31:06,000
So how is it going?

420
00:31:06,000 --> 00:31:08,000
Yeah, I will also just say a little bit more with the Nix love.

421
00:31:08,000 --> 00:31:11,000
That was like 12 lines because you just say like, hey, import the Nix config

422
00:31:11,000 --> 00:31:14,000
for the existing graphical GNOME install environment

423
00:31:14,000 --> 00:31:16,000
and then customize these couple of things.

424
00:31:16,000 --> 00:31:19,000
So, you know, I put Nano on there for you guys.

425
00:31:19,000 --> 00:31:20,000
Thank you.

426
00:31:20,000 --> 00:31:22,000
Thank you for doing that, Wes.

427
00:31:22,000 --> 00:31:23,000
We do appreciate that.

428
00:31:23,000 --> 00:31:25,000
I noticed Vim in there too, though.

429
00:31:25,000 --> 00:31:26,000
Oh, yeah.

430
00:31:26,000 --> 00:31:27,000
Well, I mean, I'm not a monster.

431
00:31:27,000 --> 00:31:33,000
So we wanted to maybe do a little A and B between BcacheFS and ButterFS.

432
00:31:33,000 --> 00:31:35,000
We also just kind of wanted to get some general numbers.

433
00:31:35,000 --> 00:31:38,000
So we're going to play around with this, and we thought maybe one of the ways

434
00:31:38,000 --> 00:31:41,000
we could kind of get some workstation-based performance metrics

435
00:31:41,000 --> 00:31:43,000
would be to throw the Ferronix test suite at it.

436
00:31:43,000 --> 00:31:45,000
So you got that loaded on there now?

437
00:31:45,000 --> 00:31:46,000
I'm working on that at the moment.

438
00:31:46,000 --> 00:31:48,000
Oh, okay, okay.

439
00:31:48,000 --> 00:31:52,000
Well, it's going to take a long time to run is the main problem.

440
00:31:52,000 --> 00:31:54,000
So we do have FIO as well.

441
00:31:54,000 --> 00:31:58,000
But maybe we should see like what all do we want to run?

442
00:31:58,000 --> 00:32:02,000
Because part of my ideas here with Arch as well was maybe we put you on

443
00:32:02,000 --> 00:32:05,000
BcacheFS's route and see what happens there.

444
00:32:05,000 --> 00:32:08,000
I think there's kind of an open question of exactly all the ways

445
00:32:08,000 --> 00:32:10,000
we might want to evaluate this new file system.

446
00:32:10,000 --> 00:32:11,000
Right.

447
00:32:11,000 --> 00:32:14,000
Yeah, there's like how does it do in just high-demand burst performance?

448
00:32:14,000 --> 00:32:16,000
How does it do as a daily driver?

449
00:32:16,000 --> 00:32:19,000
How does it do over a sustained period of time?

450
00:32:19,000 --> 00:32:22,000
Because it already has – not everything's there.

451
00:32:22,000 --> 00:32:24,000
Like send and receive, not there yet.

452
00:32:24,000 --> 00:32:28,000
There's some optimizations that you'll see in the docs,

453
00:32:28,000 --> 00:32:31,000
which also need improvement that haven't been applied yet.

454
00:32:31,000 --> 00:32:33,000
But there's already compression support.

455
00:32:33,000 --> 00:32:35,000
There's already multi-device support.

456
00:32:35,000 --> 00:32:37,000
There's already encryption support baked in.

457
00:32:37,000 --> 00:32:43,000
There's already snapshots baked in and seemingly like kind of different snapshots.

458
00:32:43,000 --> 00:32:45,000
So that's where it's neat too.

459
00:32:45,000 --> 00:32:47,000
Okay. I like this.

460
00:32:47,000 --> 00:32:49,000
Very similar user space interface as ButterFS.

461
00:32:49,000 --> 00:32:51,000
So you can just create a new subvolume.

462
00:32:51,000 --> 00:32:53,000
They're called subvolumes.

463
00:32:53,000 --> 00:32:56,000
You can either create an empty subvolume or you can create one as a snapshot

464
00:32:56,000 --> 00:32:59,000
of another subvolume and by default they're writable.

465
00:32:59,000 --> 00:33:03,000
And then you can snapshot those again so you can make like trees of snapshots

466
00:33:03,000 --> 00:33:05,000
however you like.

467
00:33:05,000 --> 00:33:07,000
And they're very cheap to create.

468
00:33:07,000 --> 00:33:09,000
At least here's what the docs say.

469
00:33:09,000 --> 00:33:13,000
They're not based on cloning of copy-on-write B-trees as with ButterFS,

470
00:33:13,000 --> 00:33:18,000
but instead are based on versioning of individual keys in the B-trees.

471
00:33:18,000 --> 00:33:21,000
Many thousands or millions of snapshots can be created

472
00:33:21,000 --> 00:33:23,000
with the only limitation being disk space.

473
00:33:23,000 --> 00:33:25,000
So I guess have at it.

474
00:33:25,000 --> 00:33:27,000
So that's part of the stuff too.

475
00:33:27,000 --> 00:33:30,000
Like it'd be nice to maybe run some performance benchmarks on, you know,

476
00:33:30,000 --> 00:33:34,000
some of these XFS, say, ButterFS and Bcache

477
00:33:34,000 --> 00:33:37,000
and then go a little crazy with big files on there,

478
00:33:37,000 --> 00:33:40,000
put a bunch of snapshots, change some things in those snapshots.

479
00:33:40,000 --> 00:33:43,000
Yeah, like which one snapshots faster?

480
00:33:43,000 --> 00:33:45,000
Which one ends up eating my disk up more?

481
00:33:45,000 --> 00:33:47,000
Well, yeah, does it get sluggish after that?

482
00:33:47,000 --> 00:33:49,000
Does it start to take a long time to take a snapshot?

483
00:33:49,000 --> 00:33:50,000
Yeah.

484
00:33:50,000 --> 00:33:53,000
So BcacheFS also, like I mentioned earlier,

485
00:33:53,000 --> 00:33:57,000
is a modern copy-on-write file system which is what you want.

486
00:33:57,000 --> 00:33:59,000
In general, they've gone for a really clean, simple,

487
00:33:59,000 --> 00:34:02,000
and high-performance implementation of copy-on-write.

488
00:34:02,000 --> 00:34:06,000
So again, you're getting features that ZFS and ButterFS have,

489
00:34:06,000 --> 00:34:10,000
but you're getting them with an implementation towards performance.

490
00:34:10,000 --> 00:34:14,000
And BcacheFS itself is architected more like a file system

491
00:34:14,000 --> 00:34:17,000
that lives on top of a relational database

492
00:34:17,000 --> 00:34:19,000
with tables for the different file system data types.

493
00:34:19,000 --> 00:34:21,000
So you have different tables in there for your extents,

494
00:34:21,000 --> 00:34:24,000
your inodes, your extended attributes, et cetera.

495
00:34:24,000 --> 00:34:27,000
So it can look it up super fast.

496
00:34:27,000 --> 00:34:28,000
Now, before we do any benchmarks,

497
00:34:28,000 --> 00:34:31,000
we do want to see how things line up performance-wise.

498
00:34:31,000 --> 00:34:33,000
I know Brent's got some questions.

499
00:34:33,000 --> 00:34:36,000
I've got some questions, but I'll hand the mic over to Brent.

500
00:34:36,000 --> 00:34:37,000
Go ahead.

501
00:34:37,000 --> 00:34:38,000
Get your questions in, Brent.

502
00:34:38,000 --> 00:34:39,000
Okay.

503
00:34:39,000 --> 00:34:41,000
Well, I think my very first question is,

504
00:34:41,000 --> 00:34:46,000
I heard rumors that there might be some Rust connection here,

505
00:34:46,000 --> 00:34:48,000
maybe in a client or something,

506
00:34:48,000 --> 00:34:50,000
or they're trying to interact in a really nice way.

507
00:34:50,000 --> 00:34:51,000
Is that true?

508
00:34:51,000 --> 00:34:53,000
The Rust connection I think that you're thinking of

509
00:34:53,000 --> 00:34:57,000
is there is conversations about using some of the kernel's

510
00:34:57,000 --> 00:34:59,000
upcoming Rust support with BcacheFS.

511
00:34:59,000 --> 00:35:02,000
Sounds like Kent is definitely interested there.

512
00:35:02,000 --> 00:35:04,000
And I guess there's maybe already some Rust

513
00:35:04,000 --> 00:35:06,000
in some of the user space stuff.

514
00:35:06,000 --> 00:35:08,000
I would assume there's some features in Rust

515
00:35:08,000 --> 00:35:10,000
that are helpful in this case.

516
00:35:10,000 --> 00:35:13,000
I don't know any of it, but it seems to me like

517
00:35:13,000 --> 00:35:15,000
those two might be a really nice complement.

518
00:35:15,000 --> 00:35:17,000
Well, there's also just, I mean, besides all the, you know,

519
00:35:17,000 --> 00:35:22,000
fancy compiler stuff and memory tracking and wrangling,

520
00:35:22,000 --> 00:35:24,000
you just get a nice developer experience, you know?

521
00:35:24,000 --> 00:35:27,000
It's got modern tooling with cargo.

522
00:35:27,000 --> 00:35:29,000
And you've got people who are excited to work in it and learn it.

523
00:35:29,000 --> 00:35:31,000
You've got momentum there too,

524
00:35:31,000 --> 00:35:32,000
which I think makes a difference.

525
00:35:32,000 --> 00:35:35,000
And so you take something that's new like BcacheFS

526
00:35:35,000 --> 00:35:38,000
and you kind of work with something that's got a lot of excitement

527
00:35:38,000 --> 00:35:41,000
like Rust, and you can kind of see how it makes sense

528
00:35:41,000 --> 00:35:42,000
for some developers.

529
00:35:42,000 --> 00:35:45,000
Kent said that if other developers are passionate

530
00:35:45,000 --> 00:35:47,000
about getting Rust support in the Linux kernel,

531
00:35:47,000 --> 00:35:49,000
that they should speak up more because they want to see that happen.

532
00:35:49,000 --> 00:35:50,000
Although it's going to happen.

533
00:35:50,000 --> 00:35:52,000
It's definitely going to happen.

534
00:35:52,000 --> 00:35:54,000
I think my second question is

535
00:35:54,000 --> 00:35:57,000
maybe more of a philosophical exploration.

536
00:35:57,000 --> 00:36:01,000
I know for like the last decade we've been talking about sort of,

537
00:36:01,000 --> 00:36:04,000
you know, quote unquote, modern file systems,

538
00:36:04,000 --> 00:36:07,000
and ZFS and BUNNERFS have been wonderful.

539
00:36:07,000 --> 00:36:09,000
I'm sure there are others I don't know about.

540
00:36:09,000 --> 00:36:12,000
Personally, I feel like I'm always behind on that game,

541
00:36:12,000 --> 00:36:14,000
but my question then becomes—

542
00:36:14,000 --> 00:36:16,000
You're still running ext3? Wow.

543
00:36:16,000 --> 00:36:20,000
Right? It's so stable, well understood, question mark.

544
00:36:20,000 --> 00:36:23,000
I guess my question is, do you think there will be a point

545
00:36:23,000 --> 00:36:27,000
at which we have all of the file systems we need?

546
00:36:27,000 --> 00:36:30,000
You know, some of the recent features that have come out

547
00:36:30,000 --> 00:36:33,000
in modern file systems are really, really helpful.

548
00:36:33,000 --> 00:36:36,000
But is there an end, you know, is there an end point?

549
00:36:36,000 --> 00:36:38,000
Or are we just going to consistently keep getting new

550
00:36:38,000 --> 00:36:42,000
and newer and newer file systems every, you know, five to ten years?

551
00:36:42,000 --> 00:36:45,000
It may be hard to separate that question from the underlying technology too.

552
00:36:45,000 --> 00:36:48,000
You know, like some stuff like F2FS sort of came around

553
00:36:48,000 --> 00:36:51,000
when Flash really became popular.

554
00:36:51,000 --> 00:36:55,000
To some extent, if the systems that we, you know,

555
00:36:55,000 --> 00:36:59,000
are storing things to change, then maybe our file systems have to.

556
00:36:59,000 --> 00:37:04,000
In a vacuum, I don't know, that might depend on our, you know,

557
00:37:04,000 --> 00:37:07,000
how many new cool theoretical or implementation tricks

558
00:37:07,000 --> 00:37:09,000
have we come up to make them faster.

559
00:37:09,000 --> 00:37:11,000
Yeah, I know that there are also just different approaches

560
00:37:11,000 --> 00:37:15,000
developers take depending on the type of storage medium.

561
00:37:15,000 --> 00:37:18,000
There is just different things about spinning rust

562
00:37:18,000 --> 00:37:20,000
than there is about an NVME storage drive.

563
00:37:20,000 --> 00:37:23,000
And so you can optimize a file system for those differences

564
00:37:23,000 --> 00:37:25,000
and take advantage of that performance.

565
00:37:25,000 --> 00:37:28,000
And I think because we're always looking for faster performance

566
00:37:28,000 --> 00:37:33,000
and storage is generally increasing, I would imagine,

567
00:37:33,000 --> 00:37:36,000
and because you're always seeing different types of application workloads

568
00:37:36,000 --> 00:37:38,000
with different file requirements,

569
00:37:38,000 --> 00:37:42,000
I'd imagine we're always going to see new file systems coming around.

570
00:37:42,000 --> 00:37:47,000
But the ones that really solve the high-end workstation use case,

571
00:37:47,000 --> 00:37:49,000
I think those are a little more rare.

572
00:37:49,000 --> 00:37:51,000
I wanted it to be ButterFS.

573
00:37:51,000 --> 00:37:57,000
I think ButterFS works great on like a laptop SSD or on a Raspberry Pi.

574
00:37:57,000 --> 00:38:00,000
But maybe BcacheFS could be even better for that role.

575
00:38:00,000 --> 00:38:02,000
I feel like you could go too far.

576
00:38:02,000 --> 00:38:05,000
You know, you could always have new file systems all the time.

577
00:38:05,000 --> 00:38:08,000
But experience has shown us that I think the Linux kernel is actually,

578
00:38:08,000 --> 00:38:10,000
they're very careful about this kind of thing,

579
00:38:10,000 --> 00:38:13,000
and they don't just let any file system in.

580
00:38:13,000 --> 00:38:16,000
And Overstreet has been working on this for years

581
00:38:16,000 --> 00:38:20,000
to try to make this perfect as close as it can be to perfect.

582
00:38:20,000 --> 00:38:24,000
It's kind of funny in that regard because he's being quite cautious

583
00:38:24,000 --> 00:38:27,000
around when to submit for mainlining.

584
00:38:27,000 --> 00:38:29,000
Yeah, because nothing's going to be perfect software-wise.

585
00:38:29,000 --> 00:38:32,000
But it's as close to stables he can get it before he submits it.

586
00:38:32,000 --> 00:38:34,000
To the point that some of the other file system developers are like,

587
00:38:34,000 --> 00:38:37,000
hey, are you going to get this thing in or what?

588
00:38:37,000 --> 00:38:40,000
Because even some of the ButterFS folks have said,

589
00:38:40,000 --> 00:38:42,000
look, there's some stuff we might want to copy or learn from

590
00:38:42,000 --> 00:38:45,000
that you've been doing here that we might be able to take advantage of.

591
00:38:45,000 --> 00:38:50,000
Yeah, that'd be nice to see too.

592
00:38:50,000 --> 00:38:53,000
So yeah, I think it's always going to be evolving, Brent.

593
00:38:53,000 --> 00:38:57,000
And I think there's just some for the different jobs and different hardware.

594
00:38:57,000 --> 00:38:58,000
That makes sense.

595
00:38:58,000 --> 00:39:02,000
I mean, as long as there's someone to maintain it, then it's all right.

596
00:39:02,000 --> 00:39:04,000
Well, let's hope there's always someone.

597
00:39:04,000 --> 00:39:06,000
All right, with those questions out of the way,

598
00:39:09,000 --> 00:39:11,000
let's see how it stacks up.

599
00:39:11,000 --> 00:39:17,000
ButterFS, BcashFS, BcashFS still in the pre-release phase.

600
00:39:17,000 --> 00:39:22,000
ButterFS, years in development, now in production.

601
00:39:22,000 --> 00:39:26,000
Compared side-by-side, how'd they do, Westpain?

602
00:39:26,000 --> 00:39:30,000
ButterFS has the edge.

603
00:39:30,000 --> 00:39:31,000
Oh!

604
00:39:31,000 --> 00:39:33,000
Perhaps an unexpected result.

605
00:39:33,000 --> 00:39:43,000
563 megabytes per second compared with 531 for the newbie BcashFS.

606
00:39:43,000 --> 00:39:46,000
Well, not too surprising, I suppose, really, right?

607
00:39:46,000 --> 00:39:50,000
I mean, you got ButterFS on that system, years of production optimization.

608
00:39:50,000 --> 00:39:53,000
But you know, that seems kind of already decently competitive.

609
00:39:53,000 --> 00:39:56,000
Now these are early numbers and we're just doing basic benchmarks here.

610
00:39:56,000 --> 00:39:57,000
And default mount options.

611
00:39:57,000 --> 00:39:58,000
That's right.

612
00:39:58,000 --> 00:39:59,000
I haven't customized a darn thing.

613
00:39:59,000 --> 00:40:02,000
Now we could throw XFS in here just to see.

614
00:40:02,000 --> 00:40:04,000
You got enough room on there?

615
00:40:04,000 --> 00:40:05,000
I could do that, yeah.

616
00:40:05,000 --> 00:40:06,000
Okay.

617
00:40:09,000 --> 00:40:11,000
All right, Westpain.

618
00:40:11,000 --> 00:40:13,000
How long will it take Westpain?

619
00:40:13,000 --> 00:40:15,000
I can barely get a sentence out today,

620
00:40:15,000 --> 00:40:18,000
so we'll see how long it takes him to get a partition out.

621
00:40:18,000 --> 00:40:19,000
Oh, it's already partitioned.

622
00:40:19,000 --> 00:40:20,000
Now we got FIO running.

623
00:40:20,000 --> 00:40:21,000
Oh, okay.

624
00:40:21,000 --> 00:40:23,000
Well, I just stole the ButterFS partition.

625
00:40:23,000 --> 00:40:24,000
Oh, yeah.

626
00:40:24,000 --> 00:40:27,000
You know, we should mention while that benchmark is running,

627
00:40:27,000 --> 00:40:30,000
there is a BcashFS convert function.

628
00:40:30,000 --> 00:40:31,000
Like, you can convert.

629
00:40:31,000 --> 00:40:32,000
You can migrate.

630
00:40:32,000 --> 00:40:33,000
Yeah.

631
00:40:33,000 --> 00:40:38,000
So far, I've only tried it with ext4, but we could try it with this.

632
00:40:38,000 --> 00:40:39,000
It's kind of neat though.

633
00:40:39,000 --> 00:40:42,000
You know, it kind of takes up the rest of the remaining space with its own file

634
00:40:42,000 --> 00:40:44,000
and then does some neat sort of offset tricks.

635
00:40:44,000 --> 00:40:49,000
So then you can go in, mount the new file system,

636
00:40:49,000 --> 00:40:54,000
take a look at its backup that basically gets you backup of your old file system.

637
00:40:54,000 --> 00:40:59,000
And then if that all looks good, delete the old stuff and reclaim your space.

638
00:40:59,000 --> 00:41:00,000
Okay, Westpain.

639
00:41:00,000 --> 00:41:01,000
I think your time is just about up.

640
00:41:01,000 --> 00:41:06,000
How did BcashFS compare to the tried and true XFS,

641
00:41:06,000 --> 00:41:10,000
which has been around for decades, finely tuned,

642
00:41:10,000 --> 00:41:16,000
refined a file system I've used in production on terabytes and terabytes of data?

643
00:41:16,000 --> 00:41:20,000
At the moment, you can't shrink either of them, so they share that in common.

644
00:41:20,000 --> 00:41:21,000
Oh.

645
00:41:21,000 --> 00:41:23,000
How do they do performance-wise?

646
00:41:23,000 --> 00:41:24,000
Which one stacks up?

647
00:41:24,000 --> 00:41:34,000
Oh, I'm sorry to say XFS looks like it's the coal year winner by about 100 megs per second.

648
00:41:34,000 --> 00:41:40,000
Yeah, so bottom of the bunch is BcashFS, our newbie and somehow already a new favorite.

649
00:41:40,000 --> 00:41:42,000
531 megs.

650
00:41:42,000 --> 00:41:45,000
ButteButterFS is next at 563.

651
00:41:45,000 --> 00:41:49,000
And then at the top is XFS 629.

652
00:41:49,000 --> 00:41:51,000
Look, guys, we're going to bounce back from this.

653
00:41:51,000 --> 00:41:53,000
We're going to build back this file system even better.

654
00:41:53,000 --> 00:41:55,000
We're going to optimize.

655
00:41:55,000 --> 00:41:56,000
It's going to be fine.

656
00:41:56,000 --> 00:41:58,000
We're going to recover from this.

657
00:41:58,000 --> 00:42:01,000
I believe in Kent and the folks that contribute to this file system.

658
00:42:01,000 --> 00:42:04,000
It's early days.

659
00:42:04,000 --> 00:42:07,000
But it's not about performance before they submit to the kernel.

660
00:42:07,000 --> 00:42:09,000
It's probably more about stability.

661
00:42:09,000 --> 00:42:13,000
Maybe the performance stuff doesn't really start getting worked out until it's on a lot of different systems.

662
00:42:13,000 --> 00:42:15,000
If you are going to start poking around with this,

663
00:42:15,000 --> 00:42:19,000
there is a PDF doc, sort of like a maintainer administrator's guide.

664
00:42:19,000 --> 00:42:23,000
And well worth a read, there's a lot of some details about the underlying structure

665
00:42:23,000 --> 00:42:26,000
and what's different compared to stuff you might know like ButterFS or ZFS.

666
00:42:26,000 --> 00:42:30,000
And yeah, you'll see in there that there's definitely a lot of optimizations that Kent's got ideas about

667
00:42:30,000 --> 00:42:35,000
that are sort of planned, but just haven't been dotted those eyes yet.

668
00:42:35,000 --> 00:42:36,000
And I'll say this, too.

669
00:42:36,000 --> 00:42:40,000
BcashFS has followed that tradition that ZFS followed

670
00:42:40,000 --> 00:42:44,000
where they really tried to get it rock solid and build on top of it

671
00:42:44,000 --> 00:42:47,000
and not have something they're trying to fix after the fact all the time,

672
00:42:47,000 --> 00:42:51,000
which I think is where some of the criticisms toward ButterFS have come from.

673
00:42:51,000 --> 00:42:52,000
Oh, here we go.

674
00:42:52,000 --> 00:42:55,000
I'm just going to migrate this XFS file system to BcashFS now that we're done with it.

675
00:42:55,000 --> 00:42:56,000
Yeah, we're not.

676
00:42:56,000 --> 00:42:58,000
So you can do ButterFS as far as we know.

677
00:42:58,000 --> 00:43:00,000
ButterFS, Extended4, and XFS.

678
00:43:00,000 --> 00:43:03,000
I haven't tried ButterFS yet, but I could.

679
00:43:03,000 --> 00:43:04,000
I mean, I'm just curious.

680
00:43:04,000 --> 00:43:06,000
But it's exciting to watch this be developed.

681
00:43:06,000 --> 00:43:11,000
And it is, for us, a moment just because it is getting so close.

682
00:43:11,000 --> 00:43:13,000
Kent just did that update, which we'll link to.

683
00:43:13,000 --> 00:43:14,000
It's nigh.

684
00:43:14,000 --> 00:43:16,000
And I think when it ships, we'll give it another look

685
00:43:16,000 --> 00:43:19,000
to see if the performance situation has changed at all,

686
00:43:19,000 --> 00:43:21,000
see what the stability situation is looking like.

687
00:43:21,000 --> 00:43:23,000
And maybe in the meantime, we'll keep it on that system for a while.

688
00:43:23,000 --> 00:43:24,000
Yeah.

689
00:43:24,000 --> 00:43:25,000
Why not?

690
00:43:25,000 --> 00:43:26,000
Yeah.

691
00:43:26,000 --> 00:43:27,000
Play around with it.

692
00:43:27,000 --> 00:43:28,000
Play around with the snapshots.

693
00:43:28,000 --> 00:43:29,000
Because that's part of the story, too.

694
00:43:29,000 --> 00:43:31,000
This is one test of many.

695
00:43:31,000 --> 00:43:34,000
And so we can throw the Ferronix Workstation benchmark at it.

696
00:43:34,000 --> 00:43:36,000
We could see what the snapshot performance is like and get a better picture.

697
00:43:36,000 --> 00:43:39,000
I'd also really like to play with some of its multi-disc support

698
00:43:39,000 --> 00:43:42,000
because it's got its own take on erasure coding.

699
00:43:42,000 --> 00:43:45,000
It's got its own version of RAID 5.6 sort of functionality

700
00:43:45,000 --> 00:43:50,000
that's totally a bit different than the failed ButterFS take,

701
00:43:50,000 --> 00:43:53,000
which is exciting on its own and the way that CFS does it, too.

702
00:43:56,000 --> 00:43:58,000
Bitwarden.com slash Linux.

703
00:43:58,000 --> 00:44:02,000
Go there to get started with a free trial of Teams, Enterprise, or a personal plan.

704
00:44:02,000 --> 00:44:06,000
Just try it out right now by going to Bitwarden.com slash Linux.

705
00:44:06,000 --> 00:44:10,000
This is the easiest way for you as an individual or your team or your business

706
00:44:10,000 --> 00:44:14,000
to share, store, and synchronize sensitive data.

707
00:44:14,000 --> 00:44:15,000
And Bitwarden is open source.

708
00:44:15,000 --> 00:44:18,000
It's trusted by millions of individuals, teams, and organizations.

709
00:44:18,000 --> 00:44:22,000
It's what Wes and I use to manage our passwords and our secrets.

710
00:44:22,000 --> 00:44:24,000
And we got an email in from listener Brett.

711
00:44:24,000 --> 00:44:28,000
He said, you know, I tried out Bitwarden after you guys mentioned it on the show.

712
00:44:28,000 --> 00:44:30,000
I loved it so much for my personal use.

713
00:44:30,000 --> 00:44:32,000
I even got the paid tier to support them.

714
00:44:32,000 --> 00:44:33,000
And then I went one step further.

715
00:44:33,000 --> 00:44:37,000
I managed to convince my manager of the awesomeness of Bitwarden

716
00:44:37,000 --> 00:44:40,000
and then the CIO, which resulted in me getting to roll out

717
00:44:40,000 --> 00:44:44,000
the self-hosted Enterprise instance for our entire IT team.

718
00:44:44,000 --> 00:44:47,000
I don't know how we managed without it now.

719
00:44:47,000 --> 00:44:49,000
Brett, I totally know what you mean.

720
00:44:49,000 --> 00:44:52,000
In fact, it's a little scary to think how it used to get managed before Bitwarden.

721
00:44:52,000 --> 00:44:53,000
It's great for individuals.

722
00:44:53,000 --> 00:44:54,000
It's great for teams.

723
00:44:54,000 --> 00:44:58,000
It's even great for your friends and family because having secure passwords,

724
00:44:58,000 --> 00:45:01,000
having a unique secure password at every site and service they use

725
00:45:01,000 --> 00:45:06,000
is probably the number one thing everyday users could do to keep themselves protected.

726
00:45:06,000 --> 00:45:08,000
And now Bitwarden has added a username generator.

727
00:45:08,000 --> 00:45:11,000
So now you can have a unique random username and password

728
00:45:11,000 --> 00:45:13,000
at every site and service you use.

729
00:45:13,000 --> 00:45:16,000
And they just make it all so simple and straightforward.

730
00:45:16,000 --> 00:45:18,000
I love using Bitwarden.

731
00:45:18,000 --> 00:45:20,000
It's really taken my security game to the next level.

732
00:45:20,000 --> 00:45:24,000
Once I added my two-factor token codes in there, please.

733
00:45:24,000 --> 00:45:26,000
I can't believe I wasn't doing it this way before.

734
00:45:26,000 --> 00:45:29,000
And I love the fact that I can self-host if I want that option too.

735
00:45:29,000 --> 00:45:34,000
And they've got a big community of DIYers and folks using the cloud service.

736
00:45:34,000 --> 00:45:36,000
And the pricing is absolutely reasonable.

737
00:45:36,000 --> 00:45:39,000
So go try it out for free as an individual user

738
00:45:39,000 --> 00:45:42,000
or go get a free trial for teams and enterprise plans.

739
00:45:42,000 --> 00:45:44,000
It's all available over at Bitwarden.com slash Linux.

740
00:45:44,000 --> 00:45:48,000
Individual or team, enterprise or just yourself.

741
00:45:48,000 --> 00:45:49,000
Go try it out.

742
00:45:49,000 --> 00:45:51,000
Start practicing better security.

743
00:45:51,000 --> 00:45:55,000
Or maybe send that link to someone you know who needs to start doing that.

744
00:45:55,000 --> 00:45:58,000
Bitwarden.com slash Linux.

745
00:46:02,000 --> 00:46:04,000
Once again, we got some great feedback.

746
00:46:04,000 --> 00:46:08,000
You can go to linuxunplugged.com slash contact to send some of that.

747
00:46:08,000 --> 00:46:10,000
Thank you very much.

748
00:46:10,000 --> 00:46:13,000
Peter wrote in with some great suggestions,

749
00:46:13,000 --> 00:46:16,000
continuing the conversation on booting ARM.

750
00:46:16,000 --> 00:46:20,000
So in Linux Unplugged 4.5.6 and also 4.5.7,

751
00:46:20,000 --> 00:46:25,000
where the issue of booting an ARM and the general fragmentation of the ARM platform was discussed,

752
00:46:25,000 --> 00:46:30,000
he mentions that there's a great project that, in his opinion,

753
00:46:30,000 --> 00:46:34,000
needs to be mentioned in this context called TauBoot.

754
00:46:34,000 --> 00:46:36,000
That's TauBoot.org.

755
00:46:36,000 --> 00:46:39,000
TauBoot has the goal of making booting on ARM boring,

756
00:46:39,000 --> 00:46:41,000
which I think in this case is probably a good thing.

757
00:46:41,000 --> 00:46:46,000
It's a U-Boot distribution that implements EBBR for UEFI,

758
00:46:46,000 --> 00:46:50,000
like booting, and is a true game changer for the devices it supports,

759
00:46:50,000 --> 00:46:55,000
notably the Pine64 PinePhone Pro and the PineBook Pro.

760
00:46:55,000 --> 00:46:59,000
Installing the generic ARM64 Fedora image on the PineBook Pro was a breeze.

761
00:46:59,000 --> 00:47:06,000
Now I can use Grub on my ARM notebook and press a key to boot from SD card or USB instead.

762
00:47:06,000 --> 00:47:11,000
Bonus, he says, TauBoot was started by Samuel Dion Riel,

763
00:47:11,000 --> 00:47:15,000
who's a NixOS Committer and the founder of mobile NixOS.

764
00:47:15,000 --> 00:47:16,000
That is so neat.

765
00:47:16,000 --> 00:47:23,000
You know, my dream setup is netbooting a bunch of like CM4s or something in the studio.

766
00:47:23,000 --> 00:47:28,000
Like you turn on the studio, they all netboot into like an OS that's living on the server somewhere.

767
00:47:28,000 --> 00:47:30,000
Boot to Reaper, perfect.

768
00:47:30,000 --> 00:47:33,000
Yeah, I don't know why I've always been into that, but I always have.

769
00:47:33,000 --> 00:47:39,000
I've always loved the idea of essentially just a thin client on the front end

770
00:47:39,000 --> 00:47:43,000
and then a centralized backend server that I control, that I update the image on,

771
00:47:43,000 --> 00:47:45,000
that we deploy once and then everything gets it.

772
00:47:45,000 --> 00:47:48,000
We can build some sweet NixOS pixie images, that's for sure.

773
00:47:48,000 --> 00:47:49,000
Totes good, totes.

774
00:47:51,000 --> 00:47:54,000
And now it is time for Le Boost.

775
00:47:54,000 --> 00:47:59,000
Hey, I want to mention for, I don't know, the next few weeks at least,

776
00:47:59,000 --> 00:48:03,000
we are doing a 15% split with all of our boosts.

777
00:48:03,000 --> 00:48:08,000
So this is something that's possible with the value for value block in the podcasting 2.0 namespace.

778
00:48:08,000 --> 00:48:12,000
We have added the OpenSATS organization to our split.

779
00:48:12,000 --> 00:48:20,000
So when you boost the show, 15% of your SATS will go to support contributors for free and open source projects.

780
00:48:20,000 --> 00:48:24,000
The OpenSATS Foundation is a nonprofit.

781
00:48:24,000 --> 00:48:31,000
100% of the money that they raise goes to free software projects that are taking Lightning payments.

782
00:48:31,000 --> 00:48:34,000
And there's some projects in there that I think are really great.

783
00:48:34,000 --> 00:48:38,000
A BTC pay server, Sparrow, several other projects in there that I think are fantastic.

784
00:48:38,000 --> 00:48:44,000
And so I just want to encourage the idea of using these splits to help support open source development.

785
00:48:44,000 --> 00:48:48,000
And so we're going to throw 15% of your SATS over to OpenSATS.

786
00:48:48,000 --> 00:48:51,000
All you got to do is send us a boost and they get a contribution for, I don't know,

787
00:48:51,000 --> 00:48:55,000
I think we'll do it for like three weeks or something like that while we experiment with this.

788
00:48:55,000 --> 00:49:00,000
Michael wrote in with a boost with 15,000 SATS. Thank you.

789
00:49:00,000 --> 00:49:05,000
He writes, Hi, Chris and team. I have listened to JB podcast since 2012 and love it.

790
00:49:05,000 --> 00:49:06,000
2012, that's a long time.

791
00:49:06,000 --> 00:49:08,000
It's older than you are, Brent.

792
00:49:08,000 --> 00:49:10,000
Nearly.

793
00:49:10,000 --> 00:49:13,000
I hope you find a good, sustainable way for you and your team.

794
00:49:13,000 --> 00:49:17,000
I like the value for value model with the pay SATS while streaming. Thanks.

795
00:49:17,000 --> 00:49:18,000
Well, thank you, Michael.

796
00:49:18,000 --> 00:49:24,000
Yeah, the value for value model has been something that I think is resonating really well with some of you out there.

797
00:49:24,000 --> 00:49:26,000
Some people are still warming up to the idea.

798
00:49:26,000 --> 00:49:30,000
But I think when we expand the idea to free software, it's really going to be magic.

799
00:49:30,000 --> 00:49:34,000
We got a double boost from Michael.

800
00:49:34,000 --> 00:49:35,000
I didn't even know that was allowed.

801
00:49:35,000 --> 00:49:40,000
Yeah, a double boost, 3000 SATS, and he just was feeling the value for the NVIDIA coverage.

802
00:49:40,000 --> 00:49:41,000
This is a good example.

803
00:49:41,000 --> 00:49:44,000
Like he listened to our coverage on LAN and Linux unplugged.

804
00:49:44,000 --> 00:49:49,000
I think he got a better understanding out of that, and he wanted to return that value with 3000 SATS.

805
00:49:49,000 --> 00:50:01,000
And he sent a note specifically thanking us for LUP 458 coverage, which Christian joined us for that to help cover some of the deets with NVIDIA's new driver situation, which is really exciting.

806
00:50:01,000 --> 00:50:08,000
The Golden Dragon boosted in with 1111 SATS just to make it hard for us to read.

807
00:50:08,000 --> 00:50:12,000
The more and more I hear about this foray into putting the kernel stuff is open source.

808
00:50:12,000 --> 00:50:17,000
The more excited I get for the future of the Linux desktop experience.

809
00:50:17,000 --> 00:50:21,000
Currently, I have to use a script to control my GPU cooling fans.

810
00:50:21,000 --> 00:50:26,000
So maybe once this is complete, this will just work flawlessly.

811
00:50:26,000 --> 00:50:31,000
I'd love to see these kinds of things improve now that the driver itself will be open source.

812
00:50:31,000 --> 00:50:39,000
I could see a future where it doesn't matter if you have an Intel GPU, if you have an AMD GPU, if you got an NVIDIA GPU.

813
00:50:39,000 --> 00:50:45,000
You could be in your desktop environment, like say, GNOME Shell, where they have those new power modes, those three different power modes.

814
00:50:45,000 --> 00:50:53,000
And I could see a future where when you choose a power mode, it has actual input over how your GPU behaves, the whole stack.

815
00:50:53,000 --> 00:50:56,000
I think that future is nigh.

816
00:50:56,000 --> 00:51:00,000
Yeah, but if people don't have to write weird UDEV rules, how will they ever learn?

817
00:51:00,000 --> 00:51:05,000
Yeah, and it does probably kill a whole generation of bash scripters.

818
00:51:05,000 --> 00:51:08,000
Back in my day, Wes, back in my day.

819
00:51:08,000 --> 00:51:11,000
Marcel wrote in with one, two, three, four sets.

820
00:51:11,000 --> 00:51:14,000
Thanks for the level headed coverage on the NVIDIA stuff.

821
00:51:14,000 --> 00:51:17,000
Most things I see online are extremely entitled.

822
00:51:17,000 --> 00:51:19,000
Wow. Yeah, I know.

823
00:51:19,000 --> 00:51:25,000
I think if we're hostile to NVIDIA's first major foray into open source, they won't be likely to go further.

824
00:51:25,000 --> 00:51:30,000
We should thank them, not dismiss the whole thing because they didn't open source the firmware.

825
00:51:30,000 --> 00:51:38,000
I guess I too was a little surprised at first that we went so quickly to, oh, well, this doesn't matter because the firmware.

826
00:51:38,000 --> 00:51:43,000
But then I realized that now I think I think people are a little jaded.

827
00:51:43,000 --> 00:51:45,000
They've heard promises and commitments before.

828
00:51:45,000 --> 00:51:48,000
They've seen things specifically around GPU driver promises before.

829
00:51:48,000 --> 00:51:53,000
And I think there is just some skepticism that's built up over the years around that.

830
00:51:53,000 --> 00:51:55,000
And so then I kind of then I kind of understood it.

831
00:51:55,000 --> 00:51:59,000
I, however, remain very optimistic about this entire thing.

832
00:51:59,000 --> 00:52:06,000
I think the evolution of more of these controls being baked into the firmware has been in the works for years.

833
00:52:06,000 --> 00:52:09,000
I don't think NVIDIA did anything new or different here.

834
00:52:09,000 --> 00:52:15,000
I don't know if I love it, but I love the idea of at least everything on my machine being open source and free software.

835
00:52:15,000 --> 00:52:19,000
Yeah. I mean, maybe it cements us forever in this world of big old binary blobs.

836
00:52:19,000 --> 00:52:22,000
But we work unfortunately kind of there already.

837
00:52:22,000 --> 00:52:25,000
Yeah, that might be true. And at least they're going to work well. Right.

838
00:52:25,000 --> 00:52:28,000
Yeah. Yeah. Yeah. I suppose I suppose that could be true.

839
00:52:28,000 --> 00:52:30,000
I don't know how I feel about that.

840
00:52:30,000 --> 00:52:31,000
You know, I feel like that's a topic.

841
00:52:31,000 --> 00:52:42,000
The firmware topic is something I'd like to talk to more people about that work in the industry and maybe get a more, you know, a more nuanced take on it because that does feel like a pretty complicated issue.

842
00:52:42,000 --> 00:52:47,000
We did get a double boost from the Golden Dragon to this week.

843
00:52:47,000 --> 00:52:48,000
Double boosting today. Yeah.

844
00:52:48,000 --> 00:52:53,000
Conversation on tail scale makes me want to swap from zero tier over to this.

845
00:52:53,000 --> 00:52:57,000
I don't think as many people knew about tail scale as I thought, which is great.

846
00:52:57,000 --> 00:52:59,000
I use the crap out of it.

847
00:52:59,000 --> 00:53:02,000
I think it's a fantastic, fantastic service.

848
00:53:02,000 --> 00:53:06,000
I tell you what, I was using tail scale on this trip even for sure.

849
00:53:06,000 --> 00:53:08,000
B-O-O-S-T.

850
00:53:08,000 --> 00:53:10,000
We did get some thank you boosts.

851
00:53:10,000 --> 00:53:17,000
Twelve hundred sixty three sats total from Cass Peeland and Robert Hand, who just wanted to say thank you or streaming in sats while we were doing the show.

852
00:53:17,000 --> 00:53:25,000
If you'd like to send a boost into the show and support independent content on a totally free and open network with no middleman,

853
00:53:25,000 --> 00:53:30,000
you can go to newpodcastapps.com and grab one of those and then you just load up that lightning wallet and send them in.

854
00:53:30,000 --> 00:53:33,000
And good news, the sats are cheap right now.

855
00:53:33,000 --> 00:53:34,000
Sats are going to be on sale this summer.

856
00:53:34,000 --> 00:53:39,000
Same old sats just now on sale.

857
00:53:39,000 --> 00:53:41,000
Now, there's no official pick this week.

858
00:53:41,000 --> 00:53:44,000
We wouldn't we wouldn't have any backup picks, would we?

859
00:53:44,000 --> 00:53:46,000
Yeah, I got one right here in my back pocket.

860
00:53:46,000 --> 00:53:47,000
You got a sneaky pick.

861
00:53:47,000 --> 00:53:49,000
And it's one I'm surprised hasn't come up before.

862
00:53:49,000 --> 00:53:57,000
OK, so here I am on my on my flight, right, getting ready to go on vacation, sitting next to my traveling buddy.

863
00:53:57,000 --> 00:54:00,000
And then it turns out that a family kind of got separated.

864
00:54:00,000 --> 00:54:01,000
They'd like to sit together.

865
00:54:01,000 --> 00:54:02,000
No big deal.

866
00:54:02,000 --> 00:54:04,000
I'm happy to make that move.

867
00:54:04,000 --> 00:54:07,000
But we were kind of planning to to plan a couple of projects together.

868
00:54:07,000 --> 00:54:09,000
You know, we're going to use the plane time.

869
00:54:09,000 --> 00:54:14,000
So we thought, well, it'd be nice to at least still be able to to chat with each other.

870
00:54:14,000 --> 00:54:17,000
There's got to be a way to do that on Android, right?

871
00:54:17,000 --> 00:54:21,000
In comes the pick Briar secure messaging anywhere.

872
00:54:21,000 --> 00:54:23,000
And this was like a really handy little app.

873
00:54:23,000 --> 00:54:24,000
Of course, it's on F-Droid.

874
00:54:24,000 --> 00:54:27,000
But as they note here, there's back on the Google Play Store again.

875
00:54:27,000 --> 00:54:32,000
So it was super easy to get even just while like last minute waiting for pushback on the plane.

876
00:54:32,000 --> 00:54:33,000
Right. And it's really neat.

877
00:54:33,000 --> 00:54:38,000
Like we could just you know, before we separated, we could scan a QR code to get ourselves authenticated with each other.

878
00:54:38,000 --> 00:54:42,000
And you could do that either totally offline or you can do it.

879
00:54:42,000 --> 00:54:46,000
You know, it has a mode for doing that if you happen to be next to each other as well.

880
00:54:46,000 --> 00:54:50,000
And then after that, we could do it either with Wi-Fi or Bluetooth right on the plane.

881
00:54:50,000 --> 00:54:52,000
It'll do a peer to peer Bluetooth network.

882
00:54:52,000 --> 00:54:55,000
Yeah, really. And it just pretty much just worked.

883
00:54:55,000 --> 00:54:56,000
That is cool.

884
00:54:56,000 --> 00:54:59,000
So you didn't even need a Wi-Fi connection to chat.

885
00:54:59,000 --> 00:55:01,000
No, no.

886
00:55:01,000 --> 00:55:04,000
That'll be limited, of course, by the strength of your Bluetooth and such.

887
00:55:04,000 --> 00:55:05,000
But I was impressed.

888
00:55:05,000 --> 00:55:10,000
Like, I don't know how super feature rich it was, but I was in a pinch and in a pinch it was there for me.

889
00:55:10,000 --> 00:55:13,000
So maybe worth a shot if you're in that kind of offline situation.

890
00:55:13,000 --> 00:55:15,000
It's called Briar Briar.

891
00:55:15,000 --> 00:55:17,000
So we'll put a link to that in the show notes.

892
00:55:17,000 --> 00:55:23,000
The show notes can be found at Linux Unplugged dot com slash four or five nine or generally in your podcast app of choice as well.

893
00:55:23,000 --> 00:55:25,000
Of course, you can just scroll down and find them there.

894
00:55:25,000 --> 00:55:31,000
But I like I like to tell you about the website because that's where you go to get things like our mumble server info.

895
00:55:31,000 --> 00:55:37,000
That's where you go to get the contact page, our RSS feeds and of course, any of our previous episodes.

896
00:55:37,000 --> 00:55:43,000
So I do like to mention you go to Linux Unplugged dot com slash four or five nine for that info.

897
00:55:43,000 --> 00:55:45,000
And don't miss Linux Action News.

898
00:55:45,000 --> 00:55:50,000
There's always something in there going on every single week in the world of free software, open source and Linux.

899
00:55:50,000 --> 00:55:52,000
So Wes Payne and I break it down for you.

900
00:55:52,000 --> 00:55:53,000
It's like a companion show.

901
00:55:53,000 --> 00:55:55,000
That's right.

902
00:55:55,000 --> 00:55:56,000
Lean, mean, just what you need to know.

903
00:55:56,000 --> 00:55:58,000
We don't waste your time.

904
00:55:58,000 --> 00:56:00,000
None of this tomfoolery they have on love.

905
00:56:00,000 --> 00:56:01,000
That's right.

906
00:56:01,000 --> 00:56:02,000
None of that tomfoolery.

907
00:56:02,000 --> 00:56:03,000
See you next week.

908
00:56:03,000 --> 00:56:06,000
Same bad time, same bad station.

909
00:56:06,000 --> 00:56:09,000
And of course, I'd love to have you join us live on a Sunday.

910
00:56:09,000 --> 00:56:13,000
We do it noon Pacific, three p.m. Eastern over JB live dot TV.

911
00:56:13,000 --> 00:56:15,000
You never know what we got cooking up.

912
00:56:15,000 --> 00:56:16,000
There's usually a lot more show.

913
00:56:16,000 --> 00:56:17,000
You can become a member.

914
00:56:17,000 --> 00:56:19,000
Support this production.

915
00:56:19,000 --> 00:56:22,000
Give us the runway to make choices with the sponsors we want to work with.

916
00:56:22,000 --> 00:56:27,000
And as a thank you, we got two feeds ad free and of course, the full live stream.

917
00:56:27,000 --> 00:56:30,000
And don't worry that ad feed's not going away.

918
00:56:30,000 --> 00:56:32,000
I make one comment one time.

919
00:56:32,000 --> 00:56:33,000
You scared people.

920
00:56:33,000 --> 00:56:34,000
I did.

921
00:56:34,000 --> 00:56:38,000
No, we make both feeds available as a thank you for supporting Unplugged Core dot com.

922
00:56:38,000 --> 00:56:40,000
If you want to become a member.

923
00:56:40,000 --> 00:56:43,000
Thanks so much for joining us on this week's episode of the Unplugged program.

924
00:56:43,000 --> 00:57:10,000
We'll see you right back here next week.

925
00:57:13,000 --> 00:57:28,000
You know, Chris, office hours, is that coming up on Tuesday?

926
00:57:28,000 --> 00:57:29,000
This here Tuesday.

927
00:57:29,000 --> 00:57:30,000
Oh, geez, Brent.

928
00:57:30,000 --> 00:57:31,000
What?

929
00:57:31,000 --> 00:57:32,000
What?

930
00:57:32,000 --> 00:57:33,000
What?

931
00:57:33,000 --> 00:57:34,000
I was just thinking about your hair and I thought.

932
00:57:34,000 --> 00:57:35,000
Oh, yeah.

933
00:57:35,000 --> 00:57:36,000
I better get in.

934
00:57:36,000 --> 00:57:37,000
I better take a shower, huh?

935
00:57:37,000 --> 00:57:38,000
No, no, no.

936
00:57:38,000 --> 00:57:41,000
I mean, if you got it in the URL, you got to make sure it's like.

937
00:57:41,000 --> 00:57:43,000
I need CG hair.

938
00:57:43,000 --> 00:57:44,000
I know.

939
00:57:44,000 --> 00:57:50,000
Yeah, I didn't pick the dot hair as a as like it's just that it was like that or I can't

940
00:57:50,000 --> 00:57:51,000
remember.

941
00:57:51,000 --> 00:57:52,000
It was something else really.

942
00:57:52,000 --> 00:57:53,000
Oh, power shell.

943
00:57:53,000 --> 00:57:54,000
No, limo.

944
00:57:54,000 --> 00:57:57,000
It was like my because I didn't want to spend a lot of money.

945
00:57:57,000 --> 00:58:00,000
And office hours is a really common term.

946
00:58:00,000 --> 00:58:01,000
Horrible name.

947
00:58:01,000 --> 00:58:03,000
Worst, worst podcast name ever, actually.

948
00:58:03,000 --> 00:58:08,000
And I didn't want to spend money on the domain because, you know, I mean, this is just a

949
00:58:08,000 --> 00:58:09,000
thing I'm doing.

950
00:58:09,000 --> 00:58:13,000
So I like how normally you're like, you know, a new podcast.

951
00:58:13,000 --> 00:58:14,000
It's a new relationship.

952
00:58:14,000 --> 00:58:15,000
Yeah.

953
00:58:15,000 --> 00:58:16,000
You got to take it seriously.

954
00:58:16,000 --> 00:58:17,000
It's a marriage.

955
00:58:17,000 --> 00:58:20,000
And then this was sort of like this was a fling Thursday afternoon.

956
00:58:20,000 --> 00:58:21,000
Yeah.

957
00:58:21,000 --> 00:58:22,000
Yeah.

958
00:58:22,000 --> 00:58:25,000
This this is this is the podcast that when I'm traveling to a particular town that I

959
00:58:25,000 --> 00:58:41,280
often know you're doing this show.

