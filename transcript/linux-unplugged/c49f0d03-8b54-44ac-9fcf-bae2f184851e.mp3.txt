It's been a while since we've done a Kickstarter
on the show here.
This is AI War 2, it has 696 backers.
They're going for quite a bit of money.
Yeah, they're only 10%.
Yeah, they're going for like $300,000
and they've only got 29K,
but they still have 29 days to go.
I wasn't so sure about this one.
And then I watched the video and I think I'm all in.
Plus also day one Linux support, they claim,
which I'm a big fan of, so check this out.
Okay, when did you last feel proud of winning a game?
AI War can be that game.
Your fleets are surrounded deep in enemy territory.
Come out of nowhere, strike,
and then disappear back to your own planet.
But do not get cocky.
Look, you're trying not to be noticed
and an easy target isn't always a smart target.
The AI essentially plays a board game like RISC.
You're playing a grand strategic RTS.
I love it.
If the AI ever decides you're a big enough threat,
you're dead.
So you basically lay low.
You lay low.
Wait, the first AI War?
Well, you already know all that.
So what's new?
Well, there's better performance,
better networking, better multi-threading.
We're adding modability.
The graphics are better and they're in 3D.
And they actually perform better.
We're cleaning up the UI
and making sure that you can tweak or mod it.
We've even added technologies
that let you customize your ships.
The sense of scale is much larger.
Isolated planets, well, they've now become solar systems.
Lonely units, well, they're now squads.
This thing is pretty neat.
They just took everything up to 11.
And something tells me that crowdfunding
may be a bigger topic in today's episode
of The Unplugged Show.
So with that, let's get started.
This is Linux Unplugged episode 166
for October 11th, 2016.
Welcome to Linux Unplugged,
your weekly Linux talk show
that's feeling a little negative
in the freedom dimension.
My name is Chris.
My name is Wes.
Hello, Mr. Wes.
Hello.
This is negative.
We have a great show today.
There's gonna be a theme that you might notice
that'll just sort of pop up
as we roll through. Look what we did.
And of course, we've got our open source project update,
some big news.
I'm really excited to talk to some of our old friends
to cover a few big accomplishments.
There is a Whalen story tucked in here
that I'm excited about.
But also, let's get real.
Will you get real with me for a moment?
Can we get real? I'll try.
Let's do it.
We're gonna have to talk about Mate.
Things are changing here.
Things are going big.
Big league.
Momentum.
Huge.
I think there's actually a legitimate transition,
not to just joke around about it,
but I think there's actually
something massive happening here.
I wanna talk about it today.
Also, later on in the show,
we're gonna run some interviews
with an individual named Andy.
And Andy will talk about how his company
generates new leads by fixing bugs in open source.
So they submit bug patches,
they see their names on that bug patch,
and oh, I gotta work with that company,
and they end up getting consulting business.
It's a new way to make money with open source
that's a lot like the old way,
with a few tweaks, using large-scale projects.
We'll talk about it in today's Unplugged.
So there will be a lot to cover.
But before we go any further,
it is our duty to bring in that virtual log,
time-appropriate greetings, Mumble Room.
Happy Christmas.
Greetings, Mumble Room.
Hey, Mumble Room.
Hello.
Happy Christmas.
Hey!
Yes, hello, everybody.
And some of them are joining us in a beer,
and we are drinking today vanilla cream.
Lights out.
An extra stout.
This is a hell of a beer, Wes.
It is a little bit extra.
It is a little extra.
I have these 7.7%.
And you know, that vanilla cream makes it nice and smooth.
So it's really a very drinkable beer.
Mr. Pope, you'll be drinking a Christmas beer,
and we'll be drinking a vanilla cream.
Let me just have another one.
From Bend, Oregon, too.
So it's another.
Just our neighbors in the South.
You have yet to bring,
you've only brought local beer so far.
I think there was one exception that was in Wyoming.
Oh, really?
There's that Melvin, which was very good.
I like Wyoming, so we'll allow it.
We'll let that slide, yeah.
We will allow it, yeah.
There is much to cover today,
and I wanna start with one of the interesting updates.
And it really required a huge investment
here on the Unplugged program.
We had to put in a lot of extra wiring,
additional conduit.
It's a mess.
And unfortunately, if everything works as planned,
the next few moments of the show may be absolutely silent,
but it's imperative that we get an update
from a friend of the show,
so we're gonna introduce a new feature,
the cone of silence.
The cone of silence.
Ooh.
Come on, Mr. Ike, step into the cone here.
How do you do?
Hello, sir.
Welcome back to the show.
It's been a little while.
It has indeed, and I apologize in advance,
but my voice is almost completely gone.
Yeah, it's kind of adorable.
We'll forgive you.
You're kind of adorable like that.
So I constructed this cone of silence.
I don't think any, it's just us.
Nobody can hear us in here.
And I wanted to get a little update
on what you guys are doing over on the Soulless Project.
I noticed some back and forth on Twitter about the Patreon,
and I noticed some back and forth about ISOs.
What's going on over there,
and what secrets do you want to just share between you and I?
So this is what we agreed on Twitter earlier on,
like nobody else can hear us, and this is not recorded.
Did you not hear?
I have the cone of silence.
It's the cone of silence.
This is a private, personal moment.
Just us three.
It's completely confidential.
There's three of us now.
Okay.
Oh, yeah.
I snuck in under the coat.
And I think Josh might have gotten a key, too.
Right, I think so.
Yeah, but.
Okay, so the room's getting bigger, but okay.
Either way, it's totally private.
Recently, we've been building up to the 1.2.1 release,
and I know for a lot of people by now,
they're probably thinking 1.2.1
has got to be phantomware by now, but it is happening,
and now we're got into the last 10%,
and the last 10% is always the hardest.
That 90% before, you know, you race through that.
You're generating news all the time.
So the most recent news for us over the last few days,
mainly last night, actually,
I finished up LVM2, an encryption support and installer,
which is something that people have been requesting
for a long time.
So now in the Solus installer,
we can do full disk encryption automatically for them.
Oh, that's great.
Yeah, which is like LVM2 on top of looks.
It's very, very simple.
They can choose to use LVM2,
and then they can choose to additionally encrypt it as well.
That's awesome.
So that literally landed just last night,
and about five or six o'clock this morning,
I actually finished the encryption support.
So it was a bit of a late night.
And while you're sick, nonetheless, too.
Yeah, I mean, it was easier to do that
than to deal with being sick, to be honest with you.
Boy, isn't that the truth.
How are you feeling like the crowdfunding's going
in Patreon?
You know, it's something we've been talking about here
behind the scenes a lot.
And I've been more and more worried
that it might not be the right platform for a large project,
even, you know, a project that wants to become large one day.
What are your experiences so far?
Well, I think I'm gonna have to agree with you there.
I mean, we've had Patreon for a long while.
At the moment, I think it's hovering just over 550 bucks
a month or something.
Now, that's been running up for a few months.
So basically, I didn't take anything out from it
for about five or six months now,
just to let it build up, you know, like a rainy day fund.
And at the moment, there's like 2,500 in there.
So you can kind of see the picture
that it does fluctuate quite a lot.
And, you know, it gets to the end of the month,
and then suddenly 15, 20 pledges have gone.
So it's not a reliable source of income at all.
And 550 or whatever it is at the moment,
it's not gonna cut it, you know, yourself.
So, I mean, it's been funded out in my own pocket now
for a very long time.
So that's servers, that's even my electric for,
you know, I'm running like a big Xeon server
under my desk here as well.
We got several servers, we got the websites, SSL certificates.
And then there's the hardware as well.
So by no means does it cover it,
but it's kind of one of those ones with Solus.
We never set out to be financially successful.
It's just, well, there was a comment on Twitter
earlier on because I was very surprised,
but oh my God, Ubuntu actually put a post up asking
about the future of Linux desktop and was it Solus?
Which was a bit of a jaw hit the floor moment.
It's like, that's all my God, Ubuntu.
But then someone said, they put it there very well,
is that Solus is now mainstream.
It's like, you're kind of right.
It's not like Solus was a year ago
where nobody knew what it was.
You know, everyone kind of knows what Solus is now.
They've all heard about it.
So it's one of the more mainstream Linux distributions.
Everyone knows it's for the desktop.
It's always-
It sure has happened fast though.
Yeah, I mean, a lot faster than we intended it to,
to be honest with you.
So that's why we have to add things now.
Is there, I guess, do you want to just do a plug
for the Patreon right here, since we just mentioned it,
since we might as well if people are curious
about the project, where do they go?
Yeah, I mean, if people go to patreon.com forward slash
solus, then you can support one of us poor little devs,
you know, like we get locked in the cage
and we get abused thoroughly.
So just a few dollars a month and you'll help us
to keep the lights on.
Yeah, all right.
I relinquished-
The Cone of Silence.
The Cone of Silence.
It's done.
Back Bumble Room.
Wimpy, I kind of wanted to ask you too,
if you don't mind commenting on your thoughts
on Patreon as a source for funding an open source project.
So I picture that maybe the potential audience member
being somebody who has a project they're working on
that does have a set amount of users
that does have a certain cost to run it
and they want to keep it going and keep it sustainable.
How's your experience been with Patreon?
Yeah, Patreon has been a positive experience
and certainly is responsible for about 50% of the money
that gets invested into Ubuntu Marte.
Oh, wow.
And then there's the PayPal supporters.
There's between three and 400 people
giving some money each month.
And then we've got some corporate sponsorship
on top of that as well.
Yeah, so it's part of a blend.
But the Patreon is the amount that you can actually rely on
because you know month to month what's going to be coming in.
And that has been essential in supporting the project
when we went through a very popular period
where we were paying for all of our hosting and bandwidth
and that was expensive.
The Patreon got us through that.
Now we've got the sponsorship with Bytemark.
All of that money can be pushed towards funding development
projects now.
And so that's the thing I'm most excited about now
as we, this month is the last month
that we have any overhead
from our previous hosting platform
and we can benefit fully from the Bytemark sponsorship.
So that means that the full crowdfunding
or nearly the full crowdfunding,
there's a few odds and ends that we have to pay for,
but a lot of the crowdfunding can now go towards development.
Yeah, that's, I think that's an interesting way to look at it
as it's an important part of a blend overall.
And it's definitely like it's the number you can see
that you're gonna, you have a good estimation.
I mean, there's gonna be some,
there's gonna be probably some declines,
but you've got a good estimation of what you're facing.
Maybe like a little bit.
Fluctuation month to month, you get an idea, yeah.
And like Heike said, you know, keep some money in reserve
for unexpected expenses.
Well, let's remember this conversation
when we get to the Matei update
coming on a little bit later in the show.
But before somebody freaks out in the chat room,
we're gonna do a gaming update
because the chat room's losing their crap right now.
Oh my gosh, Wes, they're having a panic attack in there.
It's not our fault, Gabe's been pressuring us, so.
Mad Max is actually shipping on Linux in the world.
I believe it's called, maybe it's just Mad Max.
I don't know if it has a sub name,
but October 20th for Linux and the Mac, the Mac?
What is that?
I don't, I'm not familiar with that.
That might be a version of.
Is that like Windows 8?
It's not suitable for gaming, that's for sure.
No, you don't play, oh, oh, oh, those are those,
all right, that company that used to sell computers.
I thought it was called Next.
I thought they make iPhones now.
It's the stuff that comes with cheese.
Ba-dum-bum-bum, so that's pretty cool.
So there you go, there's your October 20th,
one week out heads up about the outlandish,
post-apocalyptic world of Mad Max.
You can go get your hands on it.
And you know, have some fun, have some fun.
I was just poking fun at the Mac.
In fact, we're gonna, why don't we talk a little bit
about the Mac here in a moment?
But before we do that, I'm gonna mention
that I'm gonna be at MeetBSD November 11th through the 12th,
so basically 30 days, right, a month from now.
That is great.
Yeah, and if you're in the area, it's down by Berkeley.
If you're down in that area and wanna say hi,
let me know, hit me up on Twitter.
And if you're gonna be at MeetBSD,
you probably should go register.
So you're gonna bring like a Linux laptop?
Oh yeah, I'm bringing Lady Joops full of all Linux gear
to the BSD conference.
Hell yeah, oh yeah, I'm not going ashamed.
I'm going, there's a problem.
What'd you think about like putting true OS
on one of your laptops or something, just to blend in?
No, no, I like my backlighting and my keys to work,
so I don't have any interest in that.
You're interested in, you know,
like recent CPU graphics support?
Those kinds of things, yeah.
The ability to run an Electron app would be nice.
But I actually am really curious to see
where their heads are at and how the BSD community
does one of these things.
Because I've gone to a lot of Linux events,
I'm kinda curious to see what the differences are
between a Linux community event and a BSD community event.
And I think this is the one to go to.
It is, just from what I've heard a bit coming up,
it sounds like it's gonna be a wonderful event.
And also, the format is one that I think is
particularly appealing to me as somebody who doesn't
have a lot of experience going to these conferences
because this is a mixed, un-conference format,
where there's scheduled talks
and there's also just community driven,
like this is what we care about events.
So from your perspective, it's kind of an outsider.
It's a lot more accessible.
There's a lot more to jump into.
Technical talks and.
Yeah, yeah.
So there you go.
So you can find out more at meetbsd.com
if you're gonna be down in the area.
It's at the Clark Kerr campus.
I'm probably saying that wrong.
It's Clark Care or something,
which is not, I don't think it's on the actual main
UC Berkeley campus.
I should probably get that figured out.
You should get that figured out.
Yeah, you're gonna have to.
That's what, you're gonna have to get there.
I don't know if you realize that.
I'm hoping that that's what NAV is for.
No, I'll drive, I'm gonna drive us
to about 45 minutes away and then listener Ben
is being nice enough to let me borrow his car.
Oh, really?
Oh, well thank you listener Ben, that's awesome.
Ben, he's actually been in the Rover log before.
Oh, right.
Yeah, he might get another appearance
in the Rover log again.
But so that's sort of my plan
and then maybe meet up with folks.
I'm just gonna be down there for a few days,
but if you're in the Berkeley area
and wanna hang out and say hi,
that could be a lot of fun.
So meetbsd.com if you wanna hang out and chat
and let me know what you think about,
you know, whatever's on your mind,
particularly in the Linux world.
Digitalocean.com, that's what's on my mind.
Go there and use our promo code
to get a $10 credit.
Go over to digitalocean.com
and remember, if you use our promo code,
it's one word, all lowercase,
you get yourself a $10 credit, DO Unplugged.
You apply that $10 credit to your account
and then you can drive the $5 rig two months for free
or run one of their hourly machines
and just run that balance until you're done with it.
It's really kinda cool
and there's like no risk there to that.
Right, you don't get overages,
you don't get like, it's just,
they'll turn it off if you stop paying,
but that's just fine.
Yeah, and it's a great way
to try out the DigitalOcean services
to see if it works for you.
And they have data centers in New York,
San Francisco, Singapore, Amsterdam,
London, Toronto, Germany, India.
They have a really nice interface
to manage all of this.
It's very simple, but yet very powerful.
They have great, powerful machines
that'll all use SSD storage.
They have an interface that rocks,
but they have an API that matches.
And one of the semi-recent features
that I think is really great
and answered a lot of people's questions
is this block storage.
You can attach block storage up to 16 terabytes,
all of it, resizable, SSD backed, super cool.
Play with that.
And also, I had an MB server
right up there for a long time,
and this would be something,
I don't even have to have something massive,
but just like the kids' movie collection,
so it's available when we're traveling,
would be wonderful.
You know, I've really been enjoying it.
It seems like they're picking and choosing,
something like AWS or Azure,
or the bigger cloud platforms,
they have a thousand and one features.
Very complicated, lots of documentation.
DigitalOcean seems to be taking the best,
like the floating IPs, like the block storage,
they're kind of taking the best of the bunch.
So you have the features you need,
but in a simple interface,
something you can understand and get going in 10 minutes.
And it, I mean, less, way less than that.
Probably a minute.
I think that might be why I keep creating droplets,
is when I just wanna try out something
I found on GitHub even,
and I don't wanna bother putting that on my machine
for security reasons, for simplicity reasons, or whatever.
You just don't wanna install some more things
that you don't need.
Yeah, and I can just spin it up in seconds
on DigitalOcean, try it out,
and then keep it or destroy it.
And you get that public IP, right?
You don't have to worry about firewalls,
you don't have to just like, boom.
Super cool, and they make managing DNS,
if you wanna go that route, really easy too.
And adding your SSH keys, all of it's great.
All with different Linux droplets you can deploy and enjoy.
DigitalOcean.com, just use our promo code,
DOUNPLUGGED, that's one word, lowercase.
And a big thank you to DigitalOcean
for sponsoring the unplugged program, DOUNPLUGGED.
So we were teasing Mac OS.
And I do actually have something kind of newsworthy
to talk about with Mac OS.
But before we get there.
Before we talk about that.
Just a fun little thing.
Just an interesting diversion
because I've seen this floating around
for a couple of weeks now,
and you've probably heard of it before,
but if you haven't, I think you're gonna enjoy this.
It's Xenix, and it was Microsoft's Unix back in the day.
Microsoft, before they got all DOS happy,
first experimented with creating
a Unix-based operating system.
And they called it Xenix,
and it was part of a messy breakup
between AT&T and IBM, so it didn't really work out.
But back in the late 1970s,
Microsoft entered into an agreement with AT&T Corporation
to license Unix from AT&T.
While the company didn't sell the OS to anybody in public,
it licensed it to other OEMs like Intel, SCO, and Tandy.
It's fun to hear that name.
As Microsoft had to face legal trouble
due to the use of the Unix name,
the company renamed it
and came up with its own Unix distribution.
So AT&T licensed Unix,
was passed around to other OEMs
as Xenix.
However, in the early 1980s,
IBM was looking for an OS to power its x86 PC.
As IBM didn't want to maintain any titles,
I'm sorry, any ties with the recently split up AT&T,
Xenix was automatically rejected.
Bum bum.
To fulfill the tech giant's demand,
Microsoft, they scrambled and they bought 86 DOS
from a Seattle computer products company
and managed to convince IBM to use it in their systems.
Slowly, Microsoft began to lose interest in Xenix
and then traded the full rights of Xenix to SCO later on,
because they were one of the partners.
And that is how Microsoft started to create a Unix,
was almost made at the base of their desktop operating.
And then they went all wrong.
But because IBM didn't want to have any ties to AT&T.
Boy, those Unix wars sure were messy.
They were dirty.
I mean, we live in such a simpler, more open,
I'm very thankful for it.
I don't think a lot of us have a perspective
of how dirty they were.
No, right?
And I mean, like you still had all the Unix goodness
if you were lucky enough to be able to afford it
and have a big enough system to run it on,
but those were different times.
Back in my day.
All right, so now speaking of a Unix desktop
that doesn't make a very good Unix,
Mac OS 10.12 has a broken poll.
A broken poll.
The poll function, which actually breaks things like curl.
So curl doesn't work on Mac OS anymore.
Which that actually does suck quite a bit.
Wow.
Yeah.
Yeah, that sucks.
And I thought this first comment from ITP on Hacker News
was pretty well put.
He says, I can't say I'm surprised.
I used to be responsible for the port and upkeep
of relatively low-level products on OS 10.
It was far and away the most troublesome platform.
We would frequently run into bugs
that had been reported on open radar for years
without having been addressed.
Offhand, I remember spending the better part of two days
trying to understand a bug that was traced
to a core routine issue.
OS 10 was just not saving a required register
known and reported for five major versions of the OS.
I remember discovering the unnamed semaphores.
I remember discovering the unnamed semaphores
don't work on OS 10.
Also, I'm not surprised the poll would be broken,
nor am I surprised it was broken again
because it's been broken in the past.
The only thing that surprised me anymore
is how many people continue to insist
that Mac OS, or now just Mac OS, is a great Unix.
It might be a nice desktop,
but it is definitely not a great Unix.
And I think that is the takeaway point.
It might make a great desktop,
but don't fool yourself into thinking
you're getting a great Unix desktop,
power workstation or something.
It's not that.
I think at least part of that is when they started
building Mac OS X, and for a long time,
they compete with what the Unix kernel,
or Linux kernel, Linux user land was doing, right?
And you got this nice UI, you got Photoshop,
you got all that on the platform,
as well as you could run Bash and curl
and all that thing in a shell.
But they haven't spent any time or energy or money
on working on that user land on those kind
of kernel features like pull or any of that.
And the BSDs, Linux, we're all moving on
and doing more things.
And so suddenly you're like, well.
But what's weird about it is they're breaking stuff
in their Unix land that they just simply wouldn't touch,
wouldn't be broken.
But they're like, they won't just leave it be.
They're breaking it almost proactively,
which is super frustrating.
Now, this is a segue, but then you combine that
with their shocking lack of hardware updates.
You start to wonder, what is their long-term vision
for the Mac OS platform and for their Intel machines?
And so it's within that context
that our next story comes up.
Linus was talking about ARM.
He was at a fireside chat.
He was talking with David Rusling,
who is the Chief Technology Officer of ARM Tools.
And so this guy.
He knows ARM.
This guy really knows ARM.
And so he's asking Linus questions about ARM.
And Linus is being very honest.
He's like, you know, ARM doesn't really excite me.
Which is interesting, too, just given Linus's history
with, you know, one, Linux, and two, his history
designing processor architectures and stuff.
And he talked about not just because of the instruction
that he says is more than that, it's the whole ecosystem.
So I grabbed just a little bit of the interview
so we could hear it here on the show.
I'll just play a moment of it.
And this is, I'll link to the show notes, too,
if you want to watch the entire thing.
This is no bad thing.
Do you have a favorite architecture?
That's a very obvious question.
I mean, x86 is still the one I favor most.
And the reason for that is the PC.
Not because of the architecture.
It's because of the infrastructure.
It's because it's there and it's open.
And it's open in a way that no other architecture is.
And it turns out the instruction set
and the core of the CPU is not very important.
And it's one of those big differentiating factors
that people kind of fixate on,
but it really doesn't matter very much.
I think that's interesting.
What matters is all the infrastructure
around that instruction set.
And x86 right now has all that infrastructure.
And it has it at a lot of different levels.
ARM obviously has it on the low end.
There's no question that if you're in mobile,
you are pretty much ARM,
and we can start forgetting about MIPS and everybody else.
I've been personally, obviously, pretty disappointed in ARM.
Not as an instruction set,
although I've had my issues there too.
But as a hardware platform,
it's still not very pleasant to deal with.
And it goes on.
He says, of course, you guys know that.
You guys are working with ARM all the time.
So now we segue from this, talking about ARM,
to talking about Wes's $9 computer,
the Chip, which he's brought into the studio here.
So Wes bought the Chip,
which you might've heard us talk about before at getchip.com.
It's the world's first $9 computer.
And you got it right here in your hot little hands, Wes.
Tell me about it.
I just showed up in the mail.
It got sent to my old address.
It's itty bitty.
It is itty bitty.
I also got the HDMI adapter.
I've really only plugged it in a tiny amount.
But they do kinda come with, unlike say the Pi,
they have a little plastic bottom already.
So it's kinda, it's a little more rough and ready to go.
So it came with that plastic bottom?
You didn't add that on, huh?
Nope.
Huh, that's nice.
Did you really pay nine bucks though?
Well, no, I paid like $21, I think,
with the HDMI output adapter.
Oh, okay.
Yeah, so it has a gigahertz processor,
Wi-Fi BGN built in, four gigs of high-speed storage.
Is that an SD card that came with it?
Is that when they say high-speed storage,
they mean an SD card on the USB bus?
Is that high-speed storage?
I'm not sure.
Chip comes with storage on board, ah.
There we go.
Yeah, well, there's no need to purchase.
So it actually is high-speed storage.
Yes, exactly.
Bluetooth 4.0, and yeah, you got it with the HDMI port,
and it comes with 512 megabytes of RAM.
Anybody in the mummer room got their hands
on this thing yet?
This chip?
I will say, well, I don't know what I'm gonna quite do
with it, I bought it mostly to support it.
Oh, go on.
Whoa, whoa, I think that was a, hello?
I think that was a Cylon.
It might've been a Cylon.
It might've been a Cylon, we're compromised.
That might've been a chip.
We're compromised.
Yeah.
Yeah.
Have you seen the Pocket chip, though?
Their little case around it?
I was gonna ask you if you were tempted to get that.
Yeah, you know, and I have a friend who has one,
and it's pretty cool.
It's a, he's still kind of learning Linux,
but he, it's like a great little platform
to have on the bus, you know, playing with Linux.
You have a real shell, you can do stuff.
It also seems like something that Noah might be interested
in, just knowing how much he wants to have
a real Linux computer in his back pocket all of the time.
That's true.
And it's not like, you know, it's not like a full laptop
or anything, but you could get a lot done.
I could imagine doing some SSH and then doing real work
or building things or, you know, like bouncing some servers
or whatever you need to do.
Is it a QWERTY keyboard or is it,
oh no, it's not, it's, well, it has a QWERTY layout.
It's like a multifunction keyboard.
Yeah.
So this would be an obvious thing to do
with your chip computer, is the Pocket chip.
So I think that's a really smart move they did,
was they're like, well, we'll just sell a great accessory
for it to give people something to do with it.
And the Pocket chip's 69 bucks.
You know, and I do still like like the Onion Omega stuff
that Alan was talking about.
I think that's maybe a more interesting platform.
But when this was first coming out,
it seems like an interesting kind of middle ground
between, you know, like the Arduino microcontroller layer
and then something more like a Raspberry Pi.
This seems more friendly for some reason.
Like the pitch of it is more a fun toy kind of thing.
That's, you know, kind of neat.
And I mean, maybe that's the Pocket chip
that's kind of giving me that vibe
because it makes it seem more like a game, more like a toy.
So if you don't use it, if you don't get the Pocket chip,
what's sort of your use case for something like this?
For a $9, I mean, you got a gigahertz and 512 megs of RAM.
I mean, it's a gigahertz on,
but damn, that's amazing for even 20 bucks.
You know, I really don't have a use case yet.
So if anyone in the audience has something
that you want me to try, I'd be happy to.
I'm going to try to find somewhere
I can put it around the house.
It does have HDMI out, so I will test like,
what does that kind of look like?
What can you play with that?
But it also has the Bluetooth and Wi-Fi built in.
So I could see it, you know, if you have any,
it does have a USB port here.
So like any kind of sensor or anything else
that was integrated over USB
that you wanted to put on your network,
or, you know, like we were talking about
that USB IP kernel support with Linux.
Kind of that'd be great for that.
You could plug that right in here,
just set it right next to it.
If it's, that'd be really an interesting use case for it.
Tiny remote sensors or remote IP USB could be game changer.
But it's, you know, that's the nice thing
where it's like you're not writing C++ code
and compiling it to run on,
or do we know you're like, it's the Linux user land.
That is really cool.
Yourwiseass, you had a comment, go ahead.
Yeah, I'm pinging to the outside and doing speed tests
so it can tweet if my speed sinks below a certain level.
So you're kind of keeping an eye on your ISP
and kind of getting a little bit of a heads up
when they're not delivering what you're paying for.
That's pretty clever. Exactly.
Yeah, I like that.
Oh, maybe that's why I should do that too.
You know, I'm on a, at Lady Jupiter.
Oh, I wonder, and I would love suggestions
on maybe the best tool to do this, or tools.
But at Lady Jupiter, my internet connection
slowly degrades over a period of few days.
And it seems to be based on my usage
because what solves it every single time
is I reboot the MiFi.
I restart the MiFi, I pull the battery out,
put it back in, let it boot up,
then I plug into the cradle point.
I was gonna say, is this some sort of traffic shaping?
But it doesn't seem like it, no.
I don't know.
I don't know if it is, and maybe when I reestablish
a connection to the network, it clears.
That could be a possibility.
Or it is like the operating system
on this little MiFi device could be completely
falling apart. Right.
And maybe it's like running out of RAM or whatever.
And you know, maybe that WiFis aren't,
or MiFis or whatever, aren't quite designed
for the throughput that you put through them.
Sure.
Or there's memory leaks.
You know, I have a, I'm gonna do a video
on all of this stuff one day.
I'm excited for it.
But I'm still building it all out,
but I have a WeBoost cellular booster
that captures all LTE bands from all carriers,
brings them into Lady Jupiter,
and then amplifies them by 60 dB.
Yeah, it's awesome.
So I can go from one bar to four bars.
How big is that?
Not big, not big.
Wow.
The trickiest thing about it is the antenna
that receives the wireless signals
and the little thing in Lady Jupiter
that's rebroadcasting the signals,
the two can never meet.
And if the booster main antenna
is even picking up the rebroadcaster,
it totally shuts down.
Right, yep.
It does a feedback loop and it totally.
And in an RV, that is a particular challenge
because basically the RV is barely long
as the minimum requirements are
for these things to be a part.
So I have a booster coming into this MiFi.
It's blasting it with a bunch of signal.
And so when everything's going great,
I'll get 23 megabits maybe on a.
That's not bad, especially for parking in the boonies.
Yeah, exactly.
I am on the coast.
I am literally on, I walk, I walk,
I walk 10 minutes and I'm in the ocean.
So I'm like far out in the boonies as it can be.
And to go from one bar to four is 20 megabits.
I was like, oh God, this makes this usable.
This is like.
I have the internet.
Yeah, and then a few days into it,
I'm down to two megabits.
So of course, stupid Chris,
first thing I'm thinking is well,
maybe my antenna fell down.
So I'm climbing back up on my roof.
Yeah, I'm troubleshooting the connections.
You're all the way at layer one.
Yeah, I'm redoing all the connections
and still two megabits, two megabits.
I'm like, well shit, this is just as bad as it was
before I got the booster.
Like what the hell's going on here?
And then as a part of my troubleshooting,
I left, I did every piece individually
so I could determine what was the cause.
And of course, I made sure to troubleshoot the MiFi
sort of separately.
And sure enough, huge difference after a clean reboot.
And it's better with the booster,
but even without the booster,
I could get six, seven megabits
and it would go down to like two megabits.
And now with the booster, after I reboot,
I get like 22 megabits.
But after about five days, I don't know what's on it.
Yeah, I feel like that's one of the last things.
It's older, I think.
We have these weird proprietary little things
that join us to the LTE networks.
I wonder if like, has Noah experienced any of that
with his like ThinkPads built in?
I don't know.
But see, maybe, see this is running 24 seven
continuously for days.
It's your gateway.
Yeah, and then I have stuff that's all on the land
that I have stuff that determines
what goes out over the internet,
but the actual connection itself is open
and running all the time.
So I've been wondering if there would be
a good open source tool to easily warn me
when it's dropped below a certain threshold.
So like if I could monitor,
but I don't want the act of testing it
to eat up the precious amount of bandwidth I do have
because over the MiFi, it's not just the speed,
but anything that introduces additional latency or traffic
sort of degrades the connection for everybody.
It's not like 20 megabits on a cable connection.
So I would love to be able to test that and map it
and alert myself when it starts to say
get down like the five megabit range or something
without having to also stress the connection all the time.
That's a good question.
You know, because I've kind of wondered about that too.
Like it would be nice to just have that,
something that makes it really easy
to kind of see your graphs of like upstream bandwidth.
So I was thinking a Raspberry Pi of types of sorts
that would, so I don't know.
If anybody has a suggestion,
tweet me at Chris LAS or something like that
that I could run on a Pi or run on,
or I guess I could run it on the laptop.
I mean, cause there is always the worst case scenario
where you run a cron job with a speed test.
Yeah, yeah.
Yeah, just use speed test.
If the results are below this,
but it'd be cooler to have something
that like also graphs the output, a thresholding,
and I mean, you could always send it
into something like Graphite or Grafana.
Mm-hmm, mm-hmm.
Yeah, that would be, yeah,
something that would give me sort of a historical,
like this is where you're starting to get down.
And then maybe you can kind of observe the trends
and really figure out what's going on.
Those guys over at the Ubuntu podcast
have been getting suggestions from their audience
on things to do with their Pis.
So if you pick up from there.
Yeah, if one comes your way,
that sounds like it would maybe solve my problem.
Mr. Popey or Mr. Wimpy, pass it along to me,
cause I'd be really curious to know
if there's a set of tools out there
or even like a ready-built distro for network monitoring.
That seems like that should be a thing
that would run on a Raspberry Pi image or something.
Well, we've had a bumper crop of feedback
on the Raspberry Pi stuff.
For the next episode, it's been running and running
for weeks since we asked for it.
Yeah, and the projects are getting
more and more interesting.
I will catch the next one
that if there's another batch of it.
Not that I wasn't going to anyway.
Before we go much further, while I'm talking about Mifis,
why not mention my friends over at the Ting network?
Oh, you see how we just did that right there?
Sneak it in there.
Linux.ting.com, that's where you go to support the show
and get the discount, linux.ting.com.
We'll take $25 off your first device,
or we'll give you $25 in service credit
if you bring a device.
What's nuts about Ting is their customer service.
Have I ever played this video here on this here show, Wes?
This video from the Ting customer service.
This is what it's like.
We look at it a lot, but.
This is what it's like.
No, this is the video right here.
Thanks for calling Ting.
This is Isabelle speaking.
How can I help you?
Hello?
Thanks for calling Ting.
This is Isabelle speaking.
How can I?
Hey, this is Isabelle at Ting.
For service in English, press one.
Para el servicio en espanol, presione dos.
To talk about phones, press one.
To talk about something else, press two.
To speak to an operator, press zero.
Please hold while we direct your call
to the first available agent.
Your time is up.
Please hold while we direct your call to the first available agent.
Your time is important to us.
Thank you for your patience.
I assume they include this in all of their training videos.
That's what the people want.
Thanks for calling Ting.
This is Isabelle speaking.
How can I help you?
Oh, wow.
That was quick.
That's really good.
Linux.ting.com, so they have really great customer service.
They have a super good dashboard to manage all this.
And I don't know if I mentioned it yet,
they also have CDMA and GSM services.
That is the most exciting part right there.
And then no locked devices, no contracts,
no determination fee.
I think this is super nice,
because if you want to go really high-end phones,
and it's one that after you use it for a bit,
you want to be able to hand it down to somebody
or give it to somebody else,
this kind of structure makes the continued viability
of a phone like that last way longer
than these quote-unquote agreements you get in now
with the carriers.
Oh, man.
And it's way easier to understand.
Yes.
And then on the other spectrum,
it's really easy to do like the budget value phones.
They just did a blog post for what they call 5 Whys,
smartphone choices for less than $200.
And they have the list broken out here on their blog.
I feel like the Blue Life 1X
probably doesn't get enough discussion.
It's got a 5.2-inch 1080p IPS display
with a 424-pixel density, which is actually...
That is not bad.
...pretty high-end, yeah.
It's got Gorilla Glass 3 scratch resistance, too,
which is not bad, and a decent camera on it,
and it's got full GSM 12-band compatibility.
And it's $158.
No contract, no determination fee.
I almost kind of want that just as like a backup phone
in case I break my bank, right?
Yeah, and $6 for the line.
Yeah, that's great.
And then just your usage.
You just pay for your usage.
Check them out, linux.ting.com,
and a big thank you to Ting
for sponsoring the Unplugged program.
You've got to go to linux.ting.com to get the discount
and to support the show.
And thank you, everybody, for doing that,
and thanks to Ting for sponsoring us.
Holy moly.
You know, I did just purchase myself a Pixel.
Ah, you did it.
You know, I think it'll be running on Ting.
Now, did you...so you did the play, or did you...
How did you...did you do that, yeah?
Yep, yep.
I bought it right from Google.
Really?
Yep, and one for the wife.
Oh, man, I can't...oh, really?
Yeah, and she's going...
She's moving from iOS.
Wow.
So that'll be an interesting story as it develops.
I'll be really curious to hear your feedback
on User Air 7, which will come out probably pretty soon.
We talking about the Pixel in there?
Yeah, Swizz putting his marriage on the line there.
Yeah, right?
Well, hey, that was her idea.
Really?
Yes.
What pushed her over?
Well, I mean, her current iPhone has, like,
damaged screen kind of a little bit.
It's not bad, but it's, like, she was ready for a new phone.
What version of iPhone is it?
But she wasn't...iPhone 6.
So she...oh, okay.
I mean, it wasn't a bad phone at all,
but she just didn't seem interested in the 7,
and she, like, looked at it, and she was like, okay.
Yeah, yeah.
Yeah, I think...
The first thing she said was, like,
it looks like an iPhone, so it's probably this...
Specifically an iPhone 6, actually.
Exactly.
With a really tacky two-tone back.
But other than that...
Other than that.
I actually am really curious to hear what you think about the shape,
because I think I'm really going to dig that wedge shape.
I know, I think I am, too.
It's kind of sexy.
Yeah, and it's going to probably feel good on the table.
So I'll be leaving vicariously through you.
Mr. Wimpy, you don't happen to have, oh, I don't know,
an Ubuntu Touch device still, do you?
I do, several.
And now I've been negligent in checking in with you over the last few weeks.
I think we've had, like, a three-week break.
But how has, so far, your Ubuntu phone experience gone?
Popi switched his main driver over...
Or Popi, I'm sorry, Wimpy.
I'm sure Popi has, too, actually.
I think that's why.
Wimpy switched his main driver...
You don't use it as your main phone?
No.
What?
Okay, well, I want to hear about that, too.
But let me get back to Wimpy for a second.
So Wimpy switched his main driver over to Ubuntu Touch.
And one of the big areas I wanted to hear about from Wimpy was, like,
how does it work with managing podcasts and doing your audio in the car?
Because that's a big, big function for me and the phone.
Agreed.
So, Wimpy, it's been a few weeks.
I've been negligent.
I'm kind of curious why you are...
I'm kind of curious how it's gone.
And then I'll get to Popi and find out why he hasn't been using it.
But how is your experience so far the last few weeks since we've chatted?
So in terms of all of the, you know, doing the social network stuff
and email and looking up websites and all of that sort of thing,
that's all just fine.
Is that mostly native apps or is that web apps?
A mixture.
Yeah, okay.
Yeah, it depends what it is.
There's, like, a native app for Reddit.
There's native apps for some things and wrapped web apps.
But what's happening now is that those wrapped web apps
are starting to have native elements embedded within them.
So it's still a web app, but it's got more of the native controls
integrated with the web experience.
So that's noticeable in things like some of the new Twitter apps
and the Google Plus apps and things like that.
So Google Plus, are they doing something specifically to enable that
in their web app or is this a new feature of the...
Yeah, so the developers of these apps are embedding their own controls
that exercise parts of Google Plus to make it feel more like
a native application.
That's nice to see.
Yeah, it's pretty cool.
The new Google Plus app I'm using is very good.
So it sounds like the ecosystem is really not doing badly at all.
It's kind of coming together right before your very eyes.
It is.
You know, it's slowly, things are improving.
Although to your earlier question, if your use case is podcasting
in the car, I can't recommend it.
How come?
The Bluetooth is not reliable enough and the native podcasting app
is not reliable enough at the moment.
So I'm still using my Pocket Cast web app to do my podcast listening.
And you're just wiring it in?
Well, I've had a change in circumstances so I don't need to have it work
with the car anymore.
I just need to get this.
I'm a bit old-fashioned.
I plug headphones into my phone in order to listen to things.
Headphones, I'm not familiar with that.
Is that a new thing?
Yeah.
No, it's an old thing that's going out of fashion fast apparently.
Apparently.
Haven't you heard about lightning already?
Come on.
So how about the really boring stuff like long-term performance?
Is it staying fairly consistent and battery life?
So battery life, it comfortably lasts me a day.
Although my podcast wrapper for Pocket Casts has to force keep the screen
on to ensure that the podcast keeps playing.
So obviously you're going to take a battery hit if you do lots of that
without charging in between.
But if you're not doing that sort of thing,
I always have Bluetooth enabled.
I have it paired with my two Pebble watches and it's always connected to
Wi-Fi and 4G and it comfortably lasts the day.
You know, more than comfortably lasts the day.
That's wonderful.
So no regrets overall?
No regrets.
I'm pleased I've done it.
I've certainly seen sort of the rough edges,
but I went into this knowing that I was going to encounter rough edges
and that I wanted to help to identify them and solve them.
So, you know, that's what I'm doing.
Yeah.
I have a question.
Something that seems interesting,
like we've talked a lot about it as like a replacement platform rendering.
I'm just curious, how much do you use the fact that it's, you know,
a little bit more like desktop Linux?
Do you do things on the Ubuntu system that might require root on Android
or might require weird workarounds on Android that are easier on the Ubuntu system?
Not really.
The only thing I do is on the tablet, I do have that connected.
So I've got the wireless screen dongle for one of the screens upstairs and downstairs.
And I do use the tablet to cast the screen to those.
And on the phone, I do that occasionally, mostly for the fun factor.
But the terminal experience is, you know,
much more Linux than anything and the other devices.
So I do use that from time to time.
That's really quite good.
That's great.
So the enthusiast in me kind of wishes I just had an extra phone to mess around with right now.
That's kind of where I'm at with this.
So thank you for letting me pick your brain on that.
Wendy, don't go far because I want to talk about a few other things here in a second.
But I cannot go any further right now without taking a moment and asking Poby.
I secretly use Arch Linux.
Poby, out of anybody in the Mumble Room that I thought would be using Ubuntu on their phone as their daily driver,
I just incorrectly assumed it would be you.
I'm kind of curious maybe why you don't.
And I hope the answer is not for competitive research because that feels like a cop-out.
Don't say it.
So I have on my desk a Pro5 running Ubuntu.
It's always right here on my desk and I do daily updates.
And I use my Pro5 for podcasting.
So I use the native podcast app, Podbird.
I don't know if I just don't experience the same bugs as Martin does,
but it seems to work OK for me for like just playing a show and like playing whatever most recent things I want.
I don't use it as my daily driver mainly – well, for two main reasons.
One, I have banking apps and other things that they just aren't available on.
I do have that problem too.
My bank has an app.
I can make my own apps for that.
I have a bank – there's also an app for my kids' bank as well.
So we have this whole pocket money thing where the kids can earn money and it's managed through a phone app.
And that's –
I now want to be one of your kids.
Yeah.
How do we get on that list?
You don't – oh, man, I'm cracking the whip.
I'll send you down the mine or the chimney or something.
So you probably don't want to do that.
Oh, OK.
I'll trade you some panels.
And that's – well, the only other one is WhatsApp for a couple of people,
but not many people I talk to on WhatsApp.
But yeah, it really is just a few key apps that I can't use on a Ubuntu phone really.
That's the killer.
It is always on.
It's always sat here.
I'm always carrying it with me, but it's not the one that's got my SIM in it.
So if you phone me, it will be my Android phone that rings.
It won't be the –
So rumor has it you'll be traveling in November to a canonical event.
Would that be something where you might maybe bring an Ubuntu touch phone with you for that thing?
Or do you still bring a different phone?
I carry multiple phones everywhere I go.
I used to be there.
Sometimes when we go – there's a UK Ubuntu group where we have –
we meet up every year and go on a train where they sell – it's an old steam train –
where they sell beer on the train.
All right. OK.
We call it the beer train.
It's called the real ale train, right?
And we all go on there and drink beer.
But there's a couple of games that we play on Android and on iOS, which you need a wireless network.
And I pull out my trusty BQE 4.5 and turn on hotspot, and everyone connects to my Ubuntu phone.
And we're all playing with the Ubuntu phone being my wireless access point.
So it has some uses that I just wouldn't – I wouldn't have another device with me that was battery powered
that was a wireless access point that I could just pull out my bag and turn that on and use it.
So I use it for some weird niche things.
It's just not necessarily the one that will ring if you phone me.
Interesting.
Yeah.
I've definitely done that for a while too.
I've had phones that are either for testing or when I had – for a long time I had a Blackberry for work.
Chris, that's insane.
The other thing is the camera.
The camera app isn't fantastic.
It's missing some features.
And I take a fair number of photos of my kids and my cats, of course, and other nonsense.
And I need a reliable camera app to do that.
I don't want to be that guy in five years' time who doesn't have photos of his kids because he was religiously tied to one phone.
Oh, yeah.
That would be hard.
Yeah, yeah.
That would be a tough thing to live with.
But, I mean, if you're the reason the Ubuntu phone became the next big thing, maybe it's worth it.
Maybe.
Okay.
This is a good pick.
I can't see myself running it.
That's not a price I'm willing to pay.
So let's talk about – let's just talk about the elephant that's been in the room.
There is –
It's a really pretty elephant.
Yeah.
There is a trend where I think a lot of times in open source something gets forked.
And we almost have a visceral immediate reaction to laugh it off.
Now every now and then there's exceptions.
I don't know if that necessarily happened when Nextcloud forked, for example.
But most of the time I think if you had heard that the GNOME project has moved on and declared
that GNOME 2 is old and busted and that in order to have a desktop of the future it must
be left behind and a bunch of neckbeards came along and said, well, this will not stand.
We're going to fork this GNOME 2 GTK2 desktop and we're going to keep it alive.
I think a lot of people would have looked at that.
I mean, if you remove everything that's happened in the last few years and if you just – you
looked at that concept in its just raw naked form, I think a lot of people would say, that's
ridiculous.
Once again, open source is splitting its resources.
Nobody's focusing on the right thing.
People are going off to their different camps.
And it would be a laughable idea.
Why would you take this old desktop paradigm that's old and busted that obviously needs
to be replaced, which is, again, a bunch of assumptions being made, and try to fork it?
That's a waste of everybody's time.
But yet, here we are, 2016, and I think the Mate desktop is one of the most relevant desktops
in the Linux landscape.
I think it's one of the most widely used Linux desktops.
It's had, thanks to the Raspberry Pi, a huge surge on lower-end hardware.
Massive deployment.
It's made a lot of us – since its launch now, a lot of us go, why do people run XFCE again?
I mean, it's literally taken that spot.
Very well said.
It's about, I believe, I believe it is currently transitioning into a totally different stage.
And I think you're going to see a lot of it very soon.
You could probably start beginning to play with a lot of it when Ubuntu 16.10 Mate edition
ships.
I'll let Wimpy talk about that.
I don't want to put words in his mouth, but I think this will probably be a chance for
you to get to see a lot of this.
There's some big things that are coming, including what seems to be essentially a from-scratch
reworking of Ubuntu Mate to go to GTK 3.
I mean, this is taking a desktop that was designed around a traditional desktop paradigm
in technology and moving it to be completely technologically compatible with the latest
Linux desktop, at least for GTK 3, while keeping an existing work paradigm that obviously tens
of millions of users prefer.
Isn't that a fascinating thing?
You know, clearly there was a – when it was created, there was clearly this community
of people that said, like, well, wait, this is still working for us.
So it's very interesting to watch it evolve.
Because at first it almost felt like a stick-in-the-mud position.
Yeah, you know, like anachronism almost, but functional.
But clearly they're very interested in taking on new technical things.
It's just that there's also things they want to keep and refine.
It is almost – it is almost so obvious in retrospect that I think we've almost missed
what an interesting transition this is.
And so I think there's a couple of things happening here.
There's work happening upstream with Mate itself that's impacting any distro that can run it.
And then there's a lot of work specifically going into Ubuntu Mate.
And so before I put too many of the wrong concepts out there, I want to just make sure
that I don't say anything more before I go to Wimpy and say, Wimpy, can you kind of enlighten
us as what's going on with this GTK 3 transition and why does it matter to end users?
And then could you eventually get to where we can end up seeing it?
OK.
It's a long way now.
Yeah, so Mate was obviously forked from GNOME 2 using the GTK 2 toolkit,
and it's been that way for a long, long time.
And behind the scenes, GTK 3 support has been added, and we were getting very close.
And after the 1604 release, I really wanted to shift to GTK 3 because I felt we needed
to make that jump.
Otherwise, we'd procrastinate and sit on it for longer.
And so I spoke with the Debian maintainer and the Fedora maintainer back in March, April time.
And we agreed a timeline that suited all three distributions to make the jump to a
Mate GTK 3 implementation so that we could all roll together with that.
Well, in fact, Debian unstable is actually the first to benefit.
So Debian unstable got the full Mate 1.16 built against GTK 3 at the weekend.
It landed in Ubuntu 1610 archives on Monday, and it's in Fedora, what will be Fedora 25.
So those are three major distributions that are doing that.
And then you've also got the hot and sexy new independent distros like Solus,
who when they go shopping for an alternative desktop environment spot that Mate is now GTK 3
and it's using modern technologies and it's underpinning.
Why does that matter to me, Wimpy, as Fedora or as Solus?
Why do I care if it's GTK 3 versus GTK 2?
Well, the main reason that you want GTK 3 is because it's the gateway to even more newer technologies.
Things like high DPI and eventually things like Wayland and Mia.
And isn't that sort of maybe the most important thing to note is high DPI and Wayland are not possible otherwise?
I mean, how else can you accomplish it with GTK 2? Is there any possibility?
Not really. I mean, you can do font scaling and things, but generally speaking, no, it's not really there in GTK 2.
And there's a whole raft of other reasons, but it's not just GTK 3.
You know, along the way, it's all the other technologies that have since been phased out or are being phased out
that Mate has been adopting in order to keep it current and relevant so that it moves with the latest technologies.
So, you know, Mate looks like GNOME 2 always did, even now with the GTK 3 implementation.
In my opinion, it looks a little bit more polished because we've got some niceties from GTK 3 that weren't there in GTK 2.
But it looks and works exactly like it did with GTK 2.
And that's quite a nifty achievement, I think.
Because what people miss is that the Mate team are preserving our desktop cultural heritage by sticking with this project.
It's not particularly glamorous to continually maintain a project that is effectively complete.
You know, because the objective of the project has been completed.
We're just making sure it continues to work and it continues.
Okay, so that's interesting.
So are you saying, in a sense, by keeping Mate relevant in terms of like the GTK – by moving GTK 3,
supporting things like Wayland and high DPI, but keeping the basic workflow the same,
it sort of is the best way to pay respect and tribute and keep that workflow and that paradigm alive.
Not to enshrine it in like glass and never change it.
It's a living document, right?
Keep it going, keep it living.
Yeah, exactly.
And the thing is that that paradigm that GNOME 2 used, it is built on good design principles that still stand today.
There are different ways that you can interact with computing devices.
And the way that that user interaction works in GNOME 2 and now Mate is well tested, well thought and has years of work behind it.
So it doesn't mean it should be thrown out just because it's an old idea.
After all, we're using operating systems that are based on old ideas that came up within the 60s and 70s.
Just because it's an old idea doesn't mean it's a bad idea.
The other thing I think of when I think of GNOME 2 and Mate is I think of low resources,
low memory footprint, low CPU overhead, low GPU requirements.
Is there a way to honor that and make it still appealing to low end devices like Raspberry Pis,
but still keep it modern with GTK 3 and those things?
That's a little more challenging now.
There's some additional memory overhead with using GTK 3 as opposed to GTK 2.
Certainly it's targeting the Raspberry Pi 3 is still possible.
That's not an issue.
But in terms of Ubuntu Mate, which has got a lot of additional scaffolding around it because it's got, you know,
full accessibility stack and a whole load of other bits and pieces in the 1704 cycle, I'm going to put some thought into
how we can retain the rich feature set, but rein in some of that excess in memory consumption,
but without compromising the user experience.
So that's going to be a goal for 1704.
Interesting. And 1610 is what? Next week, if everything goes?
Two days. Two days from now.
Two days?
The 13th. Yeah.
Oh, OK. Wow. I should get it installed and start kicking the tires and see how it goes.
If you go to the CD image, are you familiar with cdimage.ubuntu.com?
Yeah, you can get the daily live from there.
If you get the Ubuntu Mate daily live, which is built today, that is our release candidate.
And I'm really hoping that that won't change, that that is the version that will be the final version.
I am downloading it right now. Very cool.
Yeah, I have been looking forward to trying out the 1610 release because I usually jump in earlier.
But this time I decided since there wasn't like a feature that I was just freaking out about,
I would wait till the release candidate stage. So I'm ready to jump in.
I will also toss a link in the show notes. So there we go.
Well, interesting, Wimpy. And so I guess kind of zooming out a few levels
and kind of getting back to an overall theme that we've had this episode.
This to me seems like we've recently had a huge burst, even more so in the last few years.
But really just honestly, if you look at the last six to seven, eight months,
it feels like there's been a massive burst in development in Mate, which is benefiting a lot of distros.
You mentioned Fedora. But also, I think it's obvious that it's going to benefit Ubuntu Mate as well.
And so there's been work that's getting done.
And I think part of it is probably thanks to a form of crowdfunding that you've been doing
over at the Ubuntu Mate project, like you mentioned earlier, a blending of crowdfunding.
And I gather you're devoting some of this funding towards the development.
And I'm kind of curious if you could kind of just recap how that works for the audience and really like,
why not just hire somebody over at, why not take some of these funds you're raising
and just hire somebody to sit there and work on this stuff full time for you?
Well, you can do that. You can hire people.
And that is still a Patreon goal for Ubuntu Mate, if we get to a specific funding level,
we'll have somebody work full time on it. That's an aspiration.
But in getting there, I've actually found that you can get an awful lot of good momentum
by breaking down small projects and handing off small projects to individuals
and funding these discrete pockets of work.
And during the 1610 development cycle, so that's been running from basically the beginning of May
until the end of October, the Ubuntu Mate crowdfunding has paid out about $6,200
to open source developers to work specifically on Mate desktop and Ubuntu Mate projects.
And that has made a massive difference to the project momentum
because I was originally planning to complete this transition to GTK3 at the end of the 1704 cycle.
End of 1704?
At the end of 1704, which is in June next year.
So you're a little ahead of schedule.
We're six months ahead of schedule.
So I planned that for a year we would just do that transition to GTK3
and all the other bits that we needed to port to GTK3.
But all of that work has been done and all of it has been funded
from the investment that the Ubuntu Mate project gets.
And also I key noticed I'm using the word investment.
I read what you wrote about that and I've changed all the language I use on the Ubuntu Mate website
and what I say to say investment rather than donate,
which is a little hat tip to Ikey and some sensible thinking that he shared.
That is really smart.
Because it really is an investment.
It is and it's not technically a donation because it's not tax deductible.
So that's a really good use of the word.
And it hasn't been an investment, hasn't it?
Because now look, that's a huge leap ahead in the schedule there.
Yeah, so what we're going to focus on now for Ubuntu Mate specifically.
In the 1704 cycle, Ubuntu Mate is just going to be about bug fixes, refinement and polish.
Not going to concentrate on bringing in new features and expanding the scope of the project.
Just make what we've achieved in this 1610 cycle move into GTK3 more reliable, more robust
more stable and true to the origins of the project.
So that's what 1704 is going to be.
So a bit of a yawner by comparison, but I think important work that we have now afforded the time to do.
And I've been setting up with some of the core Mate developers.
We're going to do some bounty source type funding to expand the scope of this project sponsorship.
And I'm hoping that we'll be able to invest even more money in independent developers and open source developers
that are interested in working on Mate and Ubuntu Mate over the next six months.
See that puts you in a very cool place where at least some of your funding comes from this community Patreon angle
and then you kind of get to help shepherd it and then through bounty source or other things
then kind of give back to the community in a way where the whole thing is self supporting and growing.
And when I post our monthly summaries, I explain who the developers are that have received money
how much they've received, what they worked on and I also put their distro affiliation
and you'll notice in there that there are people from Debian, people from Fedora, people from OpenSUSE
and the most recent open, let's say, open content creator that has been rewarded through that program is Rotten
who's done some work for us just recently.
And also from Drupal Broadcasting.
Yeah, and I'll give you an insight what Rotten's been working on is retouching some image assets
which are our first baby steps to high DPI support.
That's awesome.
That is, oh man.
Good man, Rotten.
Mr. Tonell.
Mr. Tonell.
I now call him.
So that's, Wimpy, that's a huge amount of progress and I say good on you for taking 1704 release cycle
and tightening it up because let's be honest, the expectation with the Ubuntu Batte distribution
isn't going to be rapid, crazy, revolutionary change every single release.
There's going to be a certain point where people just want something that works really well to be refined
and refined and refined and I look forward to the process and watching that.
So I'm obviously going to have to try out 1610, obviously.
Before we get off of 1610 completely, I know RMH, you had something I wanted to get to
but I think I'll take it in the post-show because we're running long.
But I did want to put a feeler out there and I'm kind of hoping you guys can help set my expectation
for Unity 8 on 1610 because I know one of the headline features is Unity 8 will be available as an optional session
and I'm kind of curious how I should set my expectations during the review process.
I have a feeling I should set them low but I also don't want to just set them so low that anything's fine.
I don't know where this should be at so I would love to hear both Popey and Wimpy's thoughts
and anybody else's thoughts on it. Popey, can I start with you and say what do you know about this
and have you tried it and what do you think I should set my expectations towards?
I haven't tried it yet. I'm only running 1604 here so for anyone who wants to try the Unity 8 session
it will be an option in 1610, not the default.
Now do I have to have Intel hardware for it to work?
Intel or the Nouveau video driver on Nvidia. I've not tried AMD because I haven't touched AMD for years.
It also works in KVM, QEMU and VMware Fusion. I don't think it works in VirtualBox but it works in KVM, QEMU.
It doesn't work in VirtualBox or with the Nvidia proprietary drivers yet
but I have seen that people are actively working on that right now.
So in terms of expectations...
And apps too. What do you think? Include the apps I might try.
So I think the default is just going to be pretty much the same apps that are available on the phone, the default apps.
So the same, the Ubuntu web browser, calendar clock, calculator, terminal, those kind of like the basic apps.
No, not that much.
Oh really?
Yeah, it's the basic session is what you're going to get.
So I'm testing at the moment the 1610 image behind me
and the pre-installed apps that you'll have are the settings, the browser and the terminal.
And one other thing I can't remember without moving across the office and looking.
I'm going to have a launcher, right? I'm going to have a launcher.
Yeah, and the launcher. So fairly minimal.
But I'm expecting that you'll find that there'll be some documentation coming along fairly soon after the release
that will explain how to install more of the Unity 8 apps and what have you.
I'm wondering, should I, can I expect my Xapps to work? Will Xmere be a thing that's functional?
Yeah, but you'll need to install some things. So there's a technology called Libertine.
You'll need to install Libertine and Libertine Scope or Scope Libertine. I forget which way around the name of the packages.
Once you've installed that through the Libertine manager, which will appear in the app launcher,
you can create a container and it does that for you.
You just give it a name and once you've created your container, you can then install Debs into that container through a UI.
So if you know that you want HexChat, you just type in when it says, what do you want to install?
You just type HexChat in, hit enter. It installs that into the container and adds an icon to your desktop apps scope.
And you'll be able to launch HexChat and that will open.
And for example, today I've installed Chromium just fine and HexChat and LibreOffice and all of those sorts of things.
So the functions to do that stuff exist and through Libertine, you can also enable third party repositories and PPAs.
So I haven't tested this yet, but I was going to have a go a bit later is, you know,
getting things like Google Chrome and Steam running to see if I can get those going up inside Exmere.
But so far, everything I've tried works just fine.
And that's what I'm using to sort of get my traditional desktop applications.
What exactly is Libertine specifically?
Libertine itself is a container. Is it a Chirrut?
It creates Lexd containers and then launches those applications and binds them to Exmere.
Sounds like a snap.
Almost. Not quite.
So you can create many containers.
So you could create one container for each application or you could create one container and install lots of different applications inside it.
Oh, OK. So it's sort of like a bottle in a sense.
Yeah.
And an interface to help bind it to the system.
Yeah. And then, of course, you've got snaps as well because underneath it's just up into 1610.
So you can snap install bits and pieces.
So if there are snaps out there that are using Mia, then, you know, they will work.
Interesting. And I think I'm going to kick the tires, but I suspect it probably won't be the main driver for me.
This is the first steps. It's not by any means the full Unity 8 desktop experience.
So that means it's 1610, though, is shipping with Exmere.
So they're both in there and they're both usable if you have an open source driver.
Yep.
Hey, that's cool.
Yeah. So, boy, isn't that interesting? Fedora's got Wayland in 25 and 1610 has got Mir.
And I don't – it's not like the two were like competing with each other.
It's just sort of how it worked out.
It's just how it worked out, yeah.
Maybe we'll have to compare them side by side.
Oh, Wes, I love that idea. We should totally try it out.
Just see, because we have a couple of Intel rigs around here with the open source driver.
And I think that Bonobo right there is like in the sweet spot with the Novu driver.
So that might be a way to go.
Well, I'll report back and see how it goes.
Right.
We'll see. That'll be part of the review, but not the review, I suspect.
Now, before we go any further, I do want to play the interview that we had for you.
And I want to mention Linux Academy for making the rest of the show possible.
Go to LinuxAcademy.com slash unplugged.
Go there to learn about a platform built by Linux enthusiasts, educators, and developers
that came together and said, let's help spread Linux.
LinuxAcademy.com slash unplugged is where you go to support this show.
And now with a new seven-day free trial.
Oh, woo. Oh, boy.
A seven-day free trial, which means no risk.
Get in there, try it out.
Google be addicted.
Go wrap your head around something.
They've got these quick starts, too, if you don't have a lot of time.
You can go deep dive into something.
And of course, if you ever get stuck, instructor mentoring is available.
And I love their video courses, because not only are they self-paced, in-depth courses,
but you can download and take their comprehensive study guides and bring them with you.
And they have everything. It's like, you know, you prefer the long-form articles.
You prefer videos.
They have everything you might need.
And the community is growing like crazy, stacked full of Jupyter broadcasting members.
And speaking of the community, they now have external profiles.
This is big, because not only is Linux Academy going up in stature,
so just linking to Linux Academy looks good on your resume,
but now you can actually visually demonstrate in a public way what you've accomplished,
which is great if you have a current employer that's helping you with your training.
Yep. Or you need to prove that you've got the skills for that new promotion.
This is brilliant.
LinuxAcademy.com slash unplugged is where you go.
And check out their video they have posted over there, too.
Whether you're an experienced sysadmin or new to the world of Linux, Azure and AWS,
OpenStack and DevOps, a sharp skill set is an absolute necessity to succeed.
Meet Linux Academy, an online Linux and cloud training platform
that uses self-paced video courses and hands-on labs
to give you real-world experience for a wide range of skills.
Train for your certification, learn the latest DevOps tools,
and grow your skill set to do better work.
Linux Academy is not just a video library.
Our scenario-based server labs and quiz system allow you to learn hands-on.
We also have full-time human instructors who answer questions
and help you earn that certification or promotion at work.
We add new training every week so you'll always be up to date on the latest tech.
Sysadmins of every experience level use Linux Academy to stay on the bleeding edge of the Linux ecosystem.
You should, too.
LinuxAcademy.com slash unplugged now with a seven-day free trial.
And by the way, if you're going to be at Compute Midwest, go say hi to Linux Academy.
LinuxAcademy.com slash unplugged.
And a big thank you to Linux Academy for sponsoring the unplugged program.
And a big un-thank you to my neighbor for mowing the lawn right in the middle of an ad read.
This is lup time. Everyone knows that.
I mean, even what's crazy, too, is I think...
You need like an outside the studio, like an on-air light.
Yeah, right.
It wouldn't do anything, but it'd be very cool.
Now, answer me this. Are you not sitting inside a soundproof insulated room?
Yes, I absolutely am. Is this the world's loudest lawnmower?
This is an intense amount of soundproofing in here. There is an intense amount.
All right. So that's neither here nor there. We need to move on.
I could do a whole podcast on why lawnmowers are the evil thing ever.
But I want to talk about our friend Andy from InnoCybe.
Wes and I had a chat to chance with Andy.
And InnoCybe is a pure play Open Daylight partner.
They're going all in on Open Daylight.
They seem like one of the leaders.
Yeah. And their story is a fascinating one.
I have a couple of clips from the interview.
I want to start with how by contributing upstream to Open Daylight,
by closing bugs, by fixing little things here, by submitting patches,
they ended up getting leads, and they ended up getting contracts and making money.
And I thought that was sort of a fascinating answer to the question that we often ask,
how do you make money with something that's free? How do you make money with open source?
And so this is a little insight into that.
People typically will find out about InnoCybe because they see our names
on the committers lists of the different projects, and then if they need help with an ODL project,
then they typically call us.
And so I would say that now people have definitely gone beyond the POC stage,
the proof of concept stage, and they're deploying real things in production.
And that's why we help them do that with our platform,
get them to a commercial grade type of production deployment really quickly.
So that's a really interesting thing there.
So you're picking up some customers because they're seeing the commits,
and they're seeing the names on the commits, and they're saying,
look at this work they're doing here. I want to work with them. I want to pick their brains.
And then that's one of the ways the business relationship gets established?
That's exactly right. I mean, ODL is similar to other large open source projects
in that it's very powerful and flexible, and there's a lot of things you can do with it.
And then one of the negative things of that is it's really powerful and flexible,
and there's a lot you can do with it. So you can get yourself in trouble pretty quickly.
And so we help people stay out of trouble and kind of stay between the guardrails
of what works, what doesn't work, what project is going to be useful for their specific use case.
And we're sort of their lifeline into ODL.
So they're able to sort of make money around this open platform from a contributing standpoint.
And I wondered then, once that transforms into a client,
what is really their main value? And you were kind of getting at this question too when we were there.
You're like, how do you add value since Open Daylight is an open platform,
the documentation is all out there, anyone can use it.
Why do you need to pay contractors, third-party companies?
Yeah, why am I hiring you? And this is probably true for all major open source projects, is the answer.
I thought this was a good one.
Great question. So I'd say one thing that's really common is because it's open source
and it's sort of enticingly easy to get started, you can start down a wrong path.
And not necessarily a wrong path, but it's just that what you're creating might be great for a lab environment.
You need to understand how to really scale it.
Yeah, for scaling and getting into production and making sure it's a very robust solution
that is not going to fail in corner cases, that sort of thing, that requires a different approach.
And so when you're looking at things from a professional quality type of thing,
that's often where we see that if we can get involved sooner, it's better to shorten the path to production quality.
It was nice of Andy to chat with us and get an insight in how a company can make a decent living
by supporting an open source project.
Which then goes right back and supports that platform.
The more people that are making money on it, the healthier future it'll have.
So there's a lot of different ways, and somehow, there's a lot of different ways to crack this particular egg.
And I just realized that they have eggs on there.
And then I just sort of realized why they have – I was trying to – like as I said,
I was like, why do they have a cracked egg on there?
Ah, because the omelet reference.
Yeah, there's a lot of ways to make an omelet between Patreon, direct funding, Bitcoin,
and commercial contracts and sponsorships.
And somehow, by the time we get to the end of this episode, we had a theme.
We ended up with a freaking theme on the Unplugged show that was totally unplanned,
but yet somehow magically worked out.
Unplugged.
Yeah, that'd be – wow, that's actually – that could be like our slogan was.
Yeah, right?
Let's go with that.
Well, so thank you for listening to this week's episode of the Unplugged program.
Thank you to Andy for coming on.
Thank you to Ike for letting us chat in the cone of silence.
Sorry that didn't make it into the rest of the show for everybody else.
And of course, thank you to Mr. Wimpy for chatting with us and for Mr. Popey for letting me pick his brain today.
I thought that was good to see him again. I hadn't been talking to him.
And to the rest of our wonderful Mumble Room.
Just one of those things.
Love those guys so much in that Mumble Room. All of them.
Thank you, guys.
All of them. Let's chat more, guys. Let's do it more.
Come back maybe next week.
We could even have a post-show.
Oh, that's a great idea. Let's try that.
Okay, everybody, thanks for tuning in to this week's episode of the Unplugged program.
See you next week.
And don't forget to tune in live at jimmylive.tv.
All right, jimmytitles.com.
jimmytitles.com.
All right, thank you, everybody. Thank you.
That was a lot of fun.
Mumble Room, I love you. You're fantastic.
Now, I wanted to go to RMH, though, because he had something during the show that I wanted to punt to the post-show.
So, I forgot what your point was, sir, but the floor is yours.
Yeah, thanks.
Basically, what I was saying is that there are a lot of people in the service industry like Noah,
and I'm getting started with my own enterprise, and we are all just using this open source software
mainly because it's free for the customer, so no licensing stuff, and we get regular updates and things like that.
And in my business plan, I actually have 10% of my income dedicated to giving back to the community.
Whatever I'm using most or deploying most for that month, I try to give back what I earned.
And I think it's pretty important that we who use the software that gets created for free for us, for use, that we give back.
Yeah, that's great.
That is. Good on you.
We've been experimenting more and more here with giving back to open source.
It's been a mixed bag for us.
I mean, good, but people usually take the code we use, and then they create something that competes with us,
so that's when I was like, well, okay.
But at the same time –
That's part and parcel, right?
Yeah, exactly.
So Linux Winter Developments and Vintage GTK3 are all towards the top.
I like Linux Winter Developments.
I think that must be a reference back to Popeye's beer.
How is that going, Popeye?
All gone.
Excellent work.
I'm on my last vanilla cream right now.
So there you go.
Good on you, gentlemen, for both of you for recording double episodes and then still making it.
Thank you very much.
That is a lot.
I don't think we'll be around next week because we're both –
Traveling.
Yeah.
Wow, already?
No, not traveling next week.
What's next week?
There's the sprint.
Oh, it is.
I thought that was in –
We have a sprint in the Netherlands.
Oh, that is.
Yep, yep, yep.
So –
We will miss you.
Yeah, we will, but I'd kind of love to know how that goes.
And aren't you guys having some press there this time or some bloggers or something?
So there might actually be coverage during the event.
Is that right?
There's going to be some community people invited, and we encourage them to blog about
their experience and talk about stuff.
Good, great.
There's someone from the elementary project with some KDE people and, yeah, various people
going.
Excellent.
Be sure to bring your score on the 40-yard dash.
Is that the first time you guys have done that?
No.
We have one in Heidelberg a couple of months ago.
So that was at the Snap one?
July.
Yeah.
And this is another Snap one, Snappy Sprint.
I mean, but there's going to be a whole load of other people.
But specifically people that are in the press or like in blogs are going to be there, not
just –
No, I don't think we've got journalists, but we're encouraging those people who are
there to share their experience.
To blog.
Oh, okay.
Good.
Yeah.
Yeah.
I thought the stuff that came out of the Snap Sprint was like the most information I'd
ever seen out of an event like that.
And it was a super good one for that to happen because it was a bunch of different projects
coming together to work on Snap packages.
So it seemed like –
That's really an inflection point for the community there.
And you know, some companies are very clever.
They intentionally bring like favored bloggers along to blog about it so that way they get
great coverage.
And I kind of thought maybe you guys are going that direction.
But also I kind of like the idea of just saying, no, just the people that attend, please do
blog about it.
Please share what you've done here.
Because –
It does feel like – to some people, they probably don't even know that this isn't
like the second time you've ever done this.
I think some people don't know that you guys get together and do this from time to time
at all.
I mean, it's not the second one you've ever done, right?
Yeah.
No, we do sprints all the time.
Exactly.
There's like – I think there's five in a row in that one venue.
Right.
There's one right now and then we're joining next week and so on.
Do you see why that is an important thing for the general Linux user base to know that
even happens?
Because it shows an output of canonicals, money, and resources to further development
of their platform and it brings different people together.
That seems like something that I would be bragging about a lot more –
Right.
I realize it's to further your own goals and to work on stuff.
But at the same time, it seems like a perfect opportunity to brag about some of the progress
and work that's being done and the outreach that happens.
So I don't understand why it doesn't get better coverage.
So I mean, it can be quite intense.
There's a whole load of sessions over the week.
We schedule like a tightly packed one hour to two hour sessions throughout the week.
It's quite an intense amount of work that gets done and then that gets decompressed
at the end of the week and some announcements come out of that.
Maybe some press comes out of it.
But we rely on the people coming to blog about it because people have different perspectives
and people join different sessions.
So you know, I might be in one session about Snap upstream related stuff and then Martin
will be in something related to desktop apps.
And so if we both blogged about it, you'd get a different perspective from either of
us, which is why we encourage everyone who goes to blog about it because we get multiple
perspectives with each person coming from their own project as well.
Although I would argue – I mean, that's absolutely the way to do that.
But I would argue that it's not enough because really the only time that gets any reasonable
dissemination is if a larger outlet then picks up that developer's blog and covers it on
their medium.
And –
Right.
But it depends.
It depends how interesting that content is.
If it was like –
Sure.
Yeah.
We sat in a room and –
Right.
And figured out some API or something.
Nobody gives a toss about that.
But unless it's like inside baseball, it's not interesting unless there's some big decision.
Maybe if there was an upstream there who said, okay, we're fully committing to this and
we're going to deliver all of our apps or something like that.
Yeah, for sure.
Although I kind of still disagree because you look at the Open Daylight Summit.
That was pretty much just what you described and we've still got like three plus weeks
of content out of it and they got quite a bit of exposure out of it because for me,
I wouldn't be the one going to the Sprint event.
But if I were going to the Sprint event to cover the development, I would build a story
around the people that are there and the work that's getting done, not the decisions that
were made.
So I think it just depends on the outlet.
I mean I know that's – but you've got work to do.
I guess my point is it's just there's a lot of good damn work getting done and it's
not getting enough attention.
Exactly.
And I just wish we could solve that problem.
And it's also not remaining popular developers that have blogs in the sense of like a big
time developer who also keeps track of stuff they do on a blog and most of the time they
maybe make one blog a year or something like that.
And so no one's paying attention to it so there's no traction.
So yeah, they might blog about it but if the vast majority of people aren't looking then
it doesn't really matter because if Canonical just did it where they just asked every blogger
to do it and if they did submit like an email and then they just made an aggregate page,
like here's all the blogs about it, check them out, that would be good.
Like planet.abuntu.com for example, that's where you can find it.
Right.
But most people don't even use that.
Yeah.
I mean your best bet is Softpedia picks it up or Chris notices it and things like that.
I mean that's really kind of your best bet.
And the only reason I think I get a little righteous, just like 5% righteous about it
is when I get a whiff of an injustice I start to get a little worked up.
And so the injustice that I see here is – the perfect lens to look at this is just the absolute
talking points bullshit that came out after Snap packages were announced.
People couldn't get – first of all, people that weren't involved with it couldn't get
the terminology right.
They attacked Canonical for not working with the community.
Just all of the typical talking points that roll out when a Canonical initiative is announced
and I honestly feel like the work that gets done at some of these events would be a – so
it would be a visceral demonstration that goes against that narrative.
Right.
And it's like even if you don't agree with this like the people are doing real work and
there's momentum and a community behind it.
I'll speak to my PR people, Chris.
I'm sure.
I'm sure.
I'm sure.
Oh well, the lawnmower guy is here so that means I think we're all done.
We'll go with Linux Winter Developments I guess.
