Anybody that's listened to the unplugged program for a while knows that part of our secret sauce is our virtual lug and we use an open source program called mumble for the voice chat and anybody is welcome to join us you can just go google search like Jupiter colony mumble guide and as long as you got a working mic and you have headphones and a microphone and we can do a sound check you're welcome to join us and chime in on your opinions about what we talk about but I think for some of you the big hold up has been it's a dirty gooey app who wants a gooey I mean if
you're really listening to unplug program you're probably in a terminal somewhere right I mean you're downloading your podcast using bash Potter you're using links to browse the web you're just doing everything via the command and you're hanging tight hoping we'll have another cool curses based internet interface for you well good news Bernard is a terminal based client for mumble so now you can run mumble on the command line it's a go app it's available up on get and of course it's free and open source you you can even participate in the chat
it's kind of neat looking so you can install Bernard if you have go installed and be up and chatting on the unplugged program by next week this is Linux unplugged episode 262 for August 14th 2018
welcome to Linux unplugged your weekly Linux talk show that's fighting the BSD temptation my name is Chris my name is Wes and my name is Brent hello guys it's great to be with you we have a really fun show so not only do we have our traditional community news some new fancy Linux features my
favorite don't call it a distro update but I listened to a BSD can talk and I was blown away with what they had to say about the tragedy quote unquote of system D and the lesson that the author believes free BSD has to take from system D and the trap they may be leading themselves into right now I've got a couple of clips plus will link to the whole talk it can't wait to get into that and then at the end of the show
after 10 years of using Dropbox every minute knowing one day it would bite me this last week Dropbox announced it was dropping support for encrypted extended for partitions and any file system on Linux that's not extended for and as some of you know I'm a big big user of XFS I think it's a fantastic file system it's what all of my home partitions are formatted in it's what all my main data partitions are formatted you keep reporting reformatting
my hard drive with it that's right I learned from Alan you know Alan used to come around and put everything on ZFS well this week they said no not for you we are dropping support November 7th now trust me I've known this day was coming I've been planning an open source salvation I've been running them in parallel some of them for a couple of years planning this mass exodus but after using a tool for 10 years and building a large production pipeline around it and having a whole team of people that use that software it's
going to take a lot of work so we'll start this week with telling you how you can buy yourself a time some time with a couple of simple and handy little cheats oh trick Dropbox into thinking it's chugging right along on extended for and you don't have to touch a thing plus fedora also has another solution it's a little outside the box but we'll get into that but before we go any further we've got to bring in that virtual log time appropriate greetings mobile room hello hello Eric hello it's a it's a it's a small it's a small mobile gathering.
That happens from time to time last week we had like nearly 20 people in there and this week it's just a couple everyone's out having fun in the summer it's holidays holiday season in Europe it's good it's good to have you back wimpy how was your holiday it was wonderful I had a great time thank you some of the best pictures I've seen in a while on Twitter I mean you got some really great shots on this trip I was I was watching from afar and I was quite impressed yeah we were lucky the weather was amazing the whole time we were away and they were
only a few pictures you'll notice that they were basically on the way to where we were going and on the way back because we were in a very remote village in France with no internet whatsoever so two weeks of complete blackout it was it was great that sounds like an interesting psychological study in a way yeah it took took about 24 hours to adjust but then it was it was great yeah did you feel like you were disconnected did you feel for the first 24 hours like you were missing out to Jeff some foam or what was it at first?
it was it was when we were having discussions about where we were going to do and what we were going to do and I kept picking my phone up and then I was like I can't actually find any of the information that we need to answer these questions and it was like so we have to drive into a town and find a tourist information office and pick up some leaflets how traditional it's very very old school it was sounds wonderful yeah it was good it was really good fun good for you well glad to have you back and let's get into some news let's start things off with a
fresh colonel Santa Linus has dropped 4.18 out there and I just I wanted to mention I don't normally call these out anymore but I just the whole way it was written is sort of noteworthy he says it was a very calm week and arguably I could have just released on schedule last week but we did some minor updates mostly networking but with some VFS race fixes and a couple of driver fixes and some other minor random things you know we just figured it was time so some of these new things I could have just delayed to the next
merge window but they were marked for stable anyways so it just would have caused more backporting anyway with this the merge window for 4.19 is now obviously open can you tell he's wearing slippers while he writes this and the world's most powerful operating system sees its next significant update it's 22 because there's a bunch of other neat stuff in this car and he just did I guess that's not what what he sees people are super hyped about this one that was the other reason I put this in there is a lot of people sharing
the release of 4.18 I mean I know there's some steam controller stuff in there yeah this is the first kernel version for a long time I've been really waiting for this one to drop oh okay tell me why it's all rather selfish this is the one lands all of the enablement for the GPU in the Hades Canyon knock for example so I've been following along with the release candidates on the on the Hades Canyon to have that ticking along but there's a bunch of fixes in there for
AMD stuff generally so the the gentle ascendancy of AMD at the moment in the Linux space is is is marching on in 418 is that is definitely a landmark kernel for that yeah that's what I grok most the excitement was about but I had wondered about the next stuff that's good to hear that is in there because that to me is still something that I hope could work out to be a great box in the studio one day I don't know you know those NUCs have a hidden hit hit sort of hidden
miss track record when it comes to recording sometimes they have noise in them because they're so small so tightly built but we'd love to try mm-hmm yeah I've I've been trying out a new co-working space since I've been back from holiday and some of the desks there have monitors on arms on the backs of the desks so you can plug your laptop in but then I was I was sat there today thinking hang on a minute I could just pack my NUC into my backpack so so tomorrow I'm going to go
to this co-working space with my my NUC and a wireless keyboard and mouse in my backpack and I'm gonna plug plug my NUC in on the desk and use that as my workstation for the day because it's actually no heavier than than my laptop right so what about the video session with poppy I mean if you're in a co-working space how does that work now because I know that was a thing you guys did well I've been so this because it's been so hot in the UK I've actually been working out of
a bar in a local hotel for about the last five weeks because air conditioning right exactly right so I've already got used to you know sitting on conference calls with poppy and other people at work you know in a bar with people you know pouring pints of beer over my shoulder and all the rest of it and I recently discovered this co-working space was was opening up nearby so I've been I've been going there just recently which is obviously more conducive to video calls
and also has a hundred megabit Wi-Fi so hey not too shabby so it's it's good yeah so yeah tomorrow I'm taking the Hades Canyon NUC in and I'm gonna use that as my workstation for the day that's great so there was an announcement with the Android 9 release Android pie that kind of went under the radar tucked away down in the bottom of the mailing list announcement was a note that reads like this I also want to take a moment to introduce myself as
the new tech lead and manager for a a OSP my name is Jeff Bailey and I've been involved in the open source community for more than two decades since I joined the Android team a few months ago I've been learning how we do things and getting understanding of how we could work better with the community this is a new lead for the Android open source project this is coming from opensource.googleblog.com as Jeff notes in his introduction he has a history in the free and open source software world he's been an avid user contributing
maintainer apparently he has been a Ubuntu core developer as well as a Google open source team member and he's done work on Debian as well he also worked for a company called Savannah which for many years distributed some good new software and now he is in charge of the Android open source project seems pretty credentialed it's interesting to see some change in momentum over there in an ecosystem I perceive is maybe a little stagnant at times
mm-hmm mm-hmm and I find it kind of noteworthy that this was just unnoticed for for about a week until I was digging through this and I go wait a minute here let me look into this and here it is and this I didn't see any headlines about this and we now have a that's I wonder what I wonder what might change because he says specifically he's looking for ideas from the community he says he wants to hear from you if you'd like to tweet him your ideas at Jeff Bailey be a
i l e y a OSP on Twitter at Jeff Bailey a OSP on Twitter or you can email him Jeff Bailey plus a OSP at google.com that's pretty direct that is giving you the information right there it's pretty direct so anyways check them out maybe maybe Jeff wants to come on the old show here come on the old unplug program yeah tell us about you know what changes he wants to see made what his imperatives are and what what what what is actually valuable community feedback at that position yeah people
looking for feedback right now over at KD neon the maintainers have begun publishing preview images of neon based on Ubuntu 1804 and this is my favorite don't call it a distribution to distribution right now because you get that classic stability of an Ubuntu LTS that just over the years just gets iterated on top of with a rolling user environment built around the latest plasma goodness and it's been running pretty well for me on a couple systems on my my production systems I'm now on Kubuntu but I've been wondering how long until neon was going to make this
transition because this is the first major transition like this neon has had to make since they existed as a project for their entire existence so far they've been based around 1604 and this is the first time the project is dealing with the transition to a new base would be do you have any thoughts on that I'm sure this will be absolutely fine because Jonathan Riddell was maintaining Kubuntu for years and years and years so this is
not the first time he's been through this and knows how to handle LTS to LTS upgrades and they are taking it pretty calculated they've been in alpha for a while they've been expanding the testing circle and other expanding it once more and if this works out they think the end of August will be when they officially announced the transition to bionic exciting fantastic can't wait to see it I'm really keen to see this 1804 release from them Pope he's been at Academy over the weekend so I'm keen to hear
from him tomorrow everything he learned and found out about whilst he was over there yeah I agree I've been following some of his progress on Twitter too it's been very fascinating William Wold I think is how you say it he's a canonical employee who just posted over on the community.buntu.com site about some big improvements to Mir
yeah including support for the XDG shell protocol which has just landed in Mir and it will ship in the next release this is this is bigger than Mir though because this represents a stability in the Wayland ecosystem yeah I just I just ecosystem it is actually becoming an ecosystem and standards are emerging this is really good for end users and Mir is plugging right into this
this is from Williams Post he writes the switch of both clients and servers to support this protocol is an indication of the Wayland ecosystem that the fact that is maturing because the protocol is marked as stable future revisions will not break backwards compatibility that's huge for and for display servers implementing the protocol this means far less code and easier maintenance is required to support all clients old and new in addition to supporting the latest clients XDG shell stable is a requirement implement the new protocol layer shell layer shell is
written by the sway and wl roots folks and it gives clients a flexible method for drawing non window services such as taskbars notifications and lock screens are just a few examples that are now possible we have not yet begun work on the layer shell support but plan in the near future wow this is exciting it is nice to see Mir going is I mean you know it's it's all kind of happening in the background but it's also neat to see you know the amount that the people over making sway and those other things it really is becoming an ecosystem
with different options out there and you don't just have to be running one of the big major distros anymore when the Ubuntu community hub was established and the Mir team started using that to seek input in the directions that they were going to be taking the project the sway developers were were some of the first people to come and join the discussion there so there's been good collaboration between the Mir team and the sway team and also the Wayland developers
yeah and it's important to emphasize that you know Mir is an active project and it has a lot of momentum behind it Williams a recent member at Canonical very talented developer and I think you'll be hearing some more interesting news from him in in the weeks and months to come
yeah I noticed that I would be interested to chat with William in the future it seems yeah it seems like he joined a few months ago and yeah he joined around the start of the year I met him earlier this year and he came from the Arch community he's the second guy I've met recently who's been recruited into Canonical from the Arch Linux community yeah
mmm poaching some of the best I got a question for Wes and for Brent and for you too wimpy I'll start with you Wes say you're gonna sit down at a computer how do you know if that computer is fast enough for your work well this is a Linux unplugged so is it compiling the Linux kernel no I think for you personally like your workload like you're like how do you assess a computer's potential say somebody gives you a laptop like this happened to Brent when Brent was out here during Linux fest I just gave him the laptop
the Libra 15 I'm like here do your photo work Brent and like how do you know good luck yeah how did you know if that computer I mean other than it's a fairly modern computer how would you know just looking at it if that computer was capable enough of being fast enough for your workload yeah I think for me in that specific case it certainly helped that I was surrounded by a bunch of people that I knew wouldn't put up with slow machines so it turned out that for my workflow it was it was fine
especially that I didn't have a laptop while I was in the US so I'm any laptop is going to do fine but but to answer the question a bit more broadly I think for me there's a there's a set of work loads that I do typically on any computer you know multiple times a week and so if someone's going to give me a laptop I'm going to do a set of workflows that I'm so familiar with I know just sort of intuitively
how long they should take or how they should perform or how snappy they should be and you know that workload is going to be a little bit different for everybody so I'd be interested in hearing everyone else's thoughts or methods but that for me is a tried and tested that makes sense true way of doing it so wimpy you and I have experienced this in another context as well and that is getting review systems in for the Ubuntu podcast or for this show and you have to sort of assess this machine's capability so do you have a couple of go to methods when you sit down at a Linux box to try to figure out what's going on and what's going on and what's going on and what's going on and what's going on and what's going on and what's going on and what's going on and what's
going on come over to us as okay right how fast is this system when we do our reviews on the Ubuntu podcast we usually was revert to benchmarks in in popular games as the means to determine how fast is most of the feedback we got from our listeners when we were figuring out how to review hardware the things that they were most interested in was what's the battery endurance like how hot
feedback we got from our listeners when we were figuring
out how to review hardware, the things that they were most
interested in was, what's the battery endurance like? How hot
does it get? How noisy is it? What's the quality of the
screen? How good is the keyboard? So much more practical
things about you know, the portability and and utility of
the device. And performance doesn't come up very often as a
thing that they're interested in. So we have a few games that
we run through as an indication as to what the performance is
like, right? Personally, when I assess the performance of a
device, it really comes down to compiling and building
software. So when I'm doing work stuff, it's building snaps. And
they usually large snaps, because I work on some
complicated stuff that you know, I don't get to talk about here.
But also, you know, when I'm compiling and building packages
for the multi desktop, you know, I know how long those things
take. And those are the things that I, I would say are the most
CPU intensive things that I do.
Yeah, okay. I think that's a good way to put it. If you if
you if you have a workflow that you're really familiar with,
like the pace of it, because it's just something you've done
a lot. And then you sit down on a machine, you go through it,
you do get a good sense. I saw the chat room was throwing
things out like how much RAM does it have the CPU model?
Those are like what I used to use. Oh, does it have 32 gigs of
RAM? How many electron apps can you open at one time? That's my
benchmark. Yeah, exactly. Well, and that's part of the RAM
thing. But it feels like modern systems are a little more
complicated than that. Because especially with laptops, you've
got thermal throttling to consider. You've got your base
clock plus turbo depending on if it's something that pings one
core versus all the four cores. So there's right and like
there's also responsiveness versus throughput. And what's
more important for how you're going to use that system?
Mm hmm. I bring all this up because this week blender has
reintroduced and I say reintroduced because this if you
have used blender in the past was something that was available
in the past, but they removed it. It's back now in a big way.
It's a benchmark, the blender benchmark. They've built the
bender benchmark platform with a maximum focus on transparency
and privacy. They say they use only free and open source
software, GNU GPL software, everything that is all testing
content is public domain. So it's all licensed public domain.
And the test results are being shared as anonymized public
data. So this is really exciting. And I wanted to use
this as another opportunity to point people over towards what I
think is Michael Larbell's really good work at open
benchmarking.org. The open benchmark tool, which is
available in your distros repository, is is amazing. You
download this, you download this package and you install it. And
then when you run it on the command line, there's GUIs
available as well. It comes up and says, What do you want to
test? And it's, it's everything. It's everything from it will
download a game in the background, run it, benchmark
it. It's everything from it will download different versions
of the Linux kernel, and with different compiling options and
benchmark them and generate the same chart. It generates all
those all those charts that you see at Ferronix are all created
using the open benchmark tool. The other thing it does is it
uploads the benchmark results to a community comparison site,
where there's like 23 million different benchmarks that have
been posted that you can compare your system against. And only
like 1.6 million of them are public, you can choose to keep
them private and just compare against your own systems. It's
so fun to just run a system through this, and really give it
like just a beating. And like, he's stayed on top of getting
things in here, like Linux 4.18 kernel benchmarks are already in
there. So you could even if you don't want to run 418, if you
don't want to switch it out on your distro, you could use open
benchmark to download, build it and do some benchmarking. Like
that's pretty neat. There's also blender tests in there. There's
entire workflows from photo workflows, to development
workflows, to gaming. And it's a great way to just download this
on your box, run your system through a set of paces and get
real numbers out of it.
I like that you have things you can actually compare to and you
know, a certain amount of standardization there. So you
can know that other people are running this, you can run it on
the same thing. And you don't have to be an expert in trying
to set it up to have a good suite of tools there.
Yeah, that's, yeah. And you know, that's a really, it's a
nice thing, because it's constantly updated. So they're
constantly changing it. And you, you don't necessarily know every
test to run. So you want to stress test the IO subsystem,
like you want to just bash on the disk subsystem and the
network subsystem. And you really want to stress those two
things. You could you could put something together, or you could
use scripts they've already created that will that will run
it through its paces. And that and it's just like that at every
level, including encryption, benchmarks, packaging, it's just
great. It's just great. And if you're ever wondering how to
really kind of get the get an assessment out of a system, take
a look at it, and run it against that. I really, I almost I'm
almost wondering if I could look into it. Maybe I maybe I should
try to figure this out. If there's a set of numbers, we
could generate it. So we could compare different laptops over
the years as we review them to see what how they perform. So we
could have like a chart of the fastest laptops.
Yeah, that'd be pretty good. Kind of like a kind of like a
like a leader chart, you know, that we could use that we would
always run the same standard open benchmark on it'd be the
results will be public. So people could audit them if they
wanted. Yeah, maybe a link back to the episode, you can hear the
review of the unit, they could benchmark their own systems
against it. It might be pretty fun. It's like it's like doing
laps around a track with cars and then figure out your benchmarks.
Anyways, moving on. I thought that was pretty neat. I wanted
to give them a plug because it's a great way to see what your
system is capable of, or get a sense of a new box, which I'll
be doing maybe in the near future. A couple of mentions of
some events that are coming up. First up is the Libre
application summit, poorly named LAS. Just gonna let that hang
for a second. Why do I gotta take that? Why do I gotta take
LAS? Why do I gotta do that to me? That's an affront.
I mean, you gave it up, man. You walked away.
Actually, they took it before the show was even over.
Nevermind. That's just, you know, the bell's getting
popular. A lot of dings today. But the nice thing is they just
posted their early event calendars. You can get an idea
of what's going on at the Libre application summit. And I think
Eric, the IT guy, is going to make it down there. You think
it's a lock, Eric?
Yeah, it is. It is a definite thing. I've got my ticket. I'm
volunteering with the GNOME engagement team, and even going
to shack up with one of the System76 guys who's got an
apartment not too far from there.
Nice. You can give a high five to Daniel Foray, too. He'll be
there doing a talk about the elementary app center.
I'm hoping to catch both his and Cassidy's talks.
Oh, yeah, Cassidy's going to be there, too.
Super exciting.
Nice. All right. So you can be our, you'll be our Libre
application summit correspondent. Report back with
what you discover, all right?
I would choose to accept that mission.
Good man.
It's not an impossible mission. In fact, it's the best kind of
mission. So I think this gentleman's name we're going to
talk about now is Benno? Benno? B-E-N-N-O.
Benno.
Benno? Yeah, okay. Benno had a talk at BSDCAN 2018 that was a
few weeks ago. It was back in June, and it was titled The
Tragedy of System D. And he says, System D, to put it mildly,
is controversial. Depending on who you ask, it's either a
complete violation of the Unix philosophy, a bloated pile of
bugs, a complete violation of elegant simplicity, or all of
the above. And he starts a talk that really got my attention.
I'm going to play, it's a 30 minute talk. I'll play about
three minutes of it. But I will link it in the show notes where
you can download the slides and you can watch the entire talk.
But it started really caught my attention. I decided to share it
with the class here, because he brings up something that is not
even related to Linux. It's not related to System D. I think
it's something we all do as tribal animals. We do something
to sort of show our allegiance to a particular tribe or group
that brings down other people. And I think we're probably all
guilty of it.
All right, so I would just like to initially thank everyone on
BSDCAN for inviting me to speak in front of all of you lovely
people. And in full understanding and acknowledgement
of that, thanks. I would like to present a live reading of
Bezels by, Bedazzled by Blockchain by Michael, sorry, no.
George Neville Neal could not be here, and it wouldn't feel right
doing this without him. Which is a tragedy. Link. So, I came up
with the name of this talk around the same time that I came
up with the first sort of rough idea of it. And it seemed to fit
really well, especially when I went to Wikipedia and saw that
you know, tragedy is a form of drama based on human suffering
that invokes an accompanying catharsis or pleasure in
audiences. And I figured there was plenty of drama in here
and suffering to go around in system D. And so, I figured that
it was a good way to go. Another thing that really came into it
when I was developing this talk is this piece by Orin Shaw
called, Contempt Culture. It's a really interesting piece and
it's kind of confronting sometimes because in a lot of
the communities that we're in, part of the way that we show
that we're in the community is by heaping shit on the other
communities. And that kind of sucks. You know, your Python
developers heap crap on the Perl developers and the Perl
developers heap crap on the PHP developers. This piece is very
focused on language stuff, but we kind of do that too. And so,
I highly recommend that everyone reads this. And the
other thing that I think goes into this discussion is the
notion of change. Change threatens a bunch of things.
The most obvious being familiarity. And familiarity
feels really comfortable because it's the thing that we
used to. But occasionally, it's really good to reassess what
the familiar and decide whether we need to change it or not.
I felt his comment there about how we sometimes as a group
will throw shade on another group to sort of show that
we're in, we're in with you, like I think the way you think.
I think that's a really common behavior. And what he's talking
about, obviously, is how the BSD camp has been really
disparaging towards system D. That's really what he's
addressing in this talk. In fact, he starts to, over the
next 15 minutes, he starts to sort of set the audience up.
And mind you, this is a room full of free BSD developers.
The gray beards of the gray beards. In fact, in one of
these clips, you'll hear Alan Jude in the background if you
listen really carefully. And there's some coughing and some
hacking because some of them are a little bit older. And
as I cough and hack. And he's trying to convince them that
they're already on this path. He starts to go through the
history of Unix and shows how the very early init tools have
now morphed from just getting the system up to mounting file
systems, starting network interfaces, and doing much, much
more. And after that this point, he starts to mention that
these complex tools are beginning to create the need for
a system layer in free BSD. So you have the user layer, the
system layer, and the kernel layer. At which system D
essentially introduced a system layer to Linux. User space,
system space, kernel space. And he says we may need something
similar in free BSD. In fact, we're already kind of on our
way. But the thing is that dynamic stuff is often better
managed through user space than it is through kernel code. And
I think that Windows natively understood this from the
beginning. Macos definitely understands that with system D,
you actually understand that there's a layer in there in the
middle called the system layer. Which I'm calling the system
layer. And so system D implements that system layer for
Linux by bringing in a bunch of code that manages various
system functions like network connectivity, time, device
management, and all that kind of things that just don't
necessarily belong in standard user space, but also don't
necessarily belong in the kernel. And the thing is that
on top of that, it doesn't really do it in a way that
everyone finds familiar, which I think is part of the source
of the angst to it. But it does give you an explanation as to
why it sees the need to bring in things like network manager
code, Udev, time, resolver libraries. Because all of those
things are systemic services that are getting provided to
user space. So how did that work out? And then he goes
through and shows the history of system D adoption. He dives
in a little bit to Lenart's history with it turns out
Lenart Pottering, the guy that created system D and was its
primary advocate, was at odds with management. Management
wasn't all that big on it. They had made their choice. They
were perfectly happy with how it was functioning in RHEL and
didn't really see the point in system D. And he said, no, no
trust me, let me show you. And despite pushback from his own
management, he continued to work on it, which is an
interesting part of this clip. And then he starts to get into
some of the most common complaints about system D like
one was just mentioned in the chat room. It runs as PID one
and he has a response to that. But the number one complaint
system D gets, especially from the free BSD camp, because
remember the audience here, is it's just not damn UNIX like.
Moving through the rest of this section, I kind of want to look
at some of the complaints that people have about system D and
just sort of address them a bit. Number one, there's a lot
of suggestions that it violates the UNIX philosophy, which I
usually take to mean that you want to write software that
does one thing and does it well and then connect it to other
things. System D as a project contains a lot of things. System
D as a demon is a thing that reacts to events and starts
things and does it very well. And so you could claim that it
does not actually violate the UNIX philosophy. You could
claim that there's a bit of violation and that it's
bringing all of this extra functionality into the project,
but I think for BSD projects to criticize another project for
bringing a bunch of tangentially linked software into
one repository to manage it collectively, that's a bit
rich. I think that might be one of my favorite parts right
there. It is a bit rich. And he says there is also the issue
of Lenard's personality. It is something that seems to have
triggered a bit of the reaction. I think that's fair.
I mean, it's definitely the communication aspect and how
you go about that. It's a big part of growing and trying to
get adoption for a project like System D.
That's it. So open source communities are fun places.
Ask me how I know.
Is it July 4th yet? So Lenard Pottering looks like an
interesting guy in a bunch of ways. Lots of people don't like
him and I can kind of see why. He tends to wade into a place
with a bunch of ideas that he holds very strongly and then
somehow actually managed to get them implemented and delivered
and in your face. And if you don't like them, it's very hard
to get him to change his mind. The thing is that I've just
described a whole lot of people in open source. Yeah. One
thing I think you have to admire about him is that he
does actually get this stuff done. I mean, for someone to
show up to his management and say, hi, I want to rewrite
init and I think we should do it like this and for them to
go, no. And for him to go, no, no, no, just wait and to
actually go do it and to have it be so successful that it's
spread outside his own project into a whole bunch of other
major Linux projects. I think that actually is quite
impressive. The other thing that I saw is that there are a
bunch of cases where he's dealing with bugs where he does
actually remain incredibly polite given the amount of
stuff that's being thrown at him. There's a famous bug where
it looked like SystemD was misparsing a username that
started with a digit and using the digit which was zero as a
user ID and it turned out that it was actually not being read
as a it was being interpreted as an invalid username and
there's a long discussion about the validity of usernames
and while it does get quite rule lawyer at points, he never
goes into name calling. He's never calling people idiots and
that when you're facing that kind of stuff is quite
admirable given the amount of things like death threats he's
got over this which is not cool. I'm wondering Wimpy if
you have any reaction to his comments about the typical open
source personality there and about how sometimes that causes
some of the reaction to their proposals. This is a really
well thought well reasoned presentation. I'm gonna I'm
gonna go and find the full the full thing and have a listen to
this later. I will have in the show notes for sure. Yeah.
Yeah. What a what a great speaker on that point. Yes. I
mean they're always stereotypes in communities right and
definitely those people exist and anyone who's a leader in
any sphere including open source can in some respects be
put on a pedestal and held up and and celebrated by sections
of the community but you know if you have strong beliefs and
and you and you want to set a project in a particular
direction and you have conviction behind that there
will be another group of people who don't subscribe to your
philosophy who will resist you know what you're trying to do
and you know that that will manifest itself in lots of
different ways but I don't know necessarily that that's open
source. I think that's people I think the difference is yes,
it's human nature and I think one of the things is is because
open source and free software all of this stuff plays out in
the public domain you know the public sphere then we see all
of this interaction happen and all of the fallout and all of
the you know the the drama that that goes along with it. So
you know we're just a microcosm of of humanity in that respect.
Yeah. Yeah. It's fascinating that it just it it affects
everything everything we touch we just mess it up. Yeah. We
have more access and we're maybe more passionate about it
too and we just we just like to talk. It's it's to me also a
data point in where this conversation is now in the free
BSD community because one of the things that's I enjoy is
if you can go back through the history of this show. In fact,
I would I would really just be extremely flattered if somebody
took the time to make a YouTube playlist or sent me the links
of all of the episodes from our past where we covered system
D from essentially its initial idea to the end of the Debian
drama and then Ubuntu's adoption. I would I would be
fascinated to know what episode series that is because I would
love to be able to make a playlist like a one-off feed.
That was every episode in 2015. Yeah. I mean it was just and
but my thought along the entire time was well what the hell are
the free BSD guys going to do because I could see what system
D was trying to solve and so now this to me is a data point
of where they're at in this conversation and it's taking
them a while to get here, but he ends the talk on a couple of
really strong points and there's even more in the full
talk. I'm not giving a full spoiler here. There's more good
stuff in the talk, but he ends on a warning to free BSD users
don't mock system D and don't recruit around system D mocking
system D is the wrong attitude to take. It's not the kind of
sad thing that Linux people have to deal with and how sorry
we are for them that they have system D. We should be looking
at going why did they choose to do that and what I really find
problematic is using system D as a recruiting tool for BSD. I
don't think that that should be done at all because when you
think about the kind of people that we would bring across if
we were to say come to come to BSD we don't change. Or come to
BSD we don't have system D. Oh, but we've just come up with a
really good idea for something that works like it. I don't
think that those are the kind of people that we you know we
don't want to bring that attitude into our our thing and
what again what I said we should be doing instead is
asking why did they see this as necessary and the thing is that
if you look at it like that if you don't see it as all those
poor Linux people with their terrible init system and go
hang on they just did that and I don't understand it. Why did
they do that? What do they see in it? That means that we can
then look at that and start to find things that we can get
out of it. The other thing to be careful of is the next
generation of people the people that come after us they don't
think the way that we think necessarily. A lot of the
people who are now coming into you know IT and software
engineering they're so much more used to APIs and not
library APIs, remote procedure call APIs. They grok things
like containers in ways that may seem quite unfamiliar to
us. That doesn't mean that containers are bad and it
certainly doesn't mean that containers are something that
should be mocked. I heard someone describe Kubernetes as
the POSIX of the cloud and while that may sound ridiculous
at first I think it's a scary thought when you think about
the fact that we can't run Kubernetes.
Ain't that true? Yeah I hadn't thought about that obviously
because it's not my area but that is a big thing. That whole
point don't mock systemd don't recruit based on that because
if you bring in a whole user base that resists change then
it's gonna hurt the project. That's really insightful and
true for all projects. The Linux community need to take a
leaf out of this presentation. The message that's delivered
here about critical thinking about why a project or why a
person or why a distribution has made the choices and
decisions that they've chosen rather than just shitting on it
for the sake of shitting on it because you're not in the
camp of that distribution is a very very positive message to
take away from this. Within the Linux community if you're not
running Arch or you're not running you know Slackware or
you're not running KDE neon you know there's this group of
people that will criticize your choices and this really needs
to stop because if we're Linux users it really doesn't
matter what distribution we've brought into. We all agree on
the fact that Linux is for our purposes the best operating
system available and we should not be throwing shit at one
another over details you know because we look like a bunch of
arsehats from the outside and it's utterly destructive
because the amount of energy that goes into all of this
negative you know product is is pointless. It would be far
better to have you know if you don't agree with what a
project's doing as this guy's just said ask yourself well why
did they do that? What was the reasons that drove them to do
this thing? Maybe try and understand where they're coming
from because there might be something in that. Maybe you
don't believe in that particular technology but as a
technology direction you can see some value in it. Yep I
completely agree perfectly said. I would love for this to
be held up as an example of critical thinking in open
source and how not to sling shit at one another because we
really need to cut that nonsense out. And we can all be
better right if we can if we can productively learn they'll
take some ideas that they like add some new ideas and then we
can learn from that in the future. And it's a high level
perspective and I think that's the that's the perspective that
gets the work done and I loved it. I thought it was a great
talk so I wanted to share it with you guys and we'll have it
linked in the show notes linuxunplug.com slash 262 and
I'll tell you this after listening to that I had been on
the fence. I've decided I'm going to go to meet BSD in
California October 19th and the 20th. I'm going to be down
there. It's going to be at Intel's campus. Oh how cool is
that? Heck yeah yeah. You should consider coming with me.
I bet you we could make that drive in in one day. Yeah I
think we were up to that challenge. We could we could run
down there. We could we could do a text on get our get our
BSD on hang out with Alan Jude record a text nap and then we
could make it back up here. It's at the Santa Clara Intel
campus and it's going to be on October 19th and 20th. I'm
going to go. Let's do it. I think you know after hearing
that I'm like that that that is that is exactly the message.
That is exactly the message we all need to be taking in and
it's that atmosphere which is going to be conducive to open
source development. Plus it'll be good to see Alan. Exactly.
Yeah yeah that's pretty great and you can find links to all
of that in the show notes. Now I also want to talk about
Dropbox this week and a kind of a just a cool temporary
workaround. Even if you're not a Dropbox user something that's
just a neat trick you could do to hide stuff on your computer
and all kinds of other things. So let's take a moment and
thank Ting for making this episode possible Linux dot ting
dot com is where you go when you go there you'll get twenty
five dollars off ting service if you bring a device or twenty
five dollars off a phone ting is smarter than unlimited. If
you use less you pay less. The average ting bill is just twenty
three dollars per month per phone. It's just a fair price
for how much you talk text and data you use. That's it. Six
dollars for the line which is great if you want to have a
couple of family lines or a backup line or if you're a
small business and you need twenty five lines. It's great
and they have nationwide coverage CDMA and GSM. No
contracts no quote unquote agreements nothing weird like
that and you're in control the entire time. You can always see
your usage. You can change different individual aspects of
your service like just turn stuff off if you want. You can
set usage alerts as well. And Ting's not in it to try to push
an app store or a music streaming service. So they
don't really have an agenda of how you use Ting. So they don't
have to push down like a Ting experience with a Ting image
with Ting branding on your phone. And they don't really
care if you just never want to use a text message ever. If you
do everything over WhatsApp or telegram you mean they'll just
like they'll send a text if I want and otherwise they don't
care? They don't even bill you for it. How does that make sense?
Wow. I know I guess that's how it works in some other places in
the world. They are so backwards. Not here in the
states. I wanted to point out if you need a phone right now
and you don't have a thousand dollars to spend on a note why
not look at the GS5 Plus or I'm sorry the G5 S Plus. It's the
Moto G5 S Plus for two hundred and fifty four dollars. You
would own the phone outright when you go to linux.ting.com
because it's it's it's normally 280 but when you go to our
linux.ting.com URL you get it for 254 unlocked multi network
two gigahertz octa core Qualcomm Snapdragon processor
five point five inch IPS display three thousand milliamp
battery and it also has an SD slot so you could put up to
128 gigs of micro SD into it for two hundred and fifty four
dollars. That's a capable phone right there. No contract
nothing and it's just a clean Android experience and you just
pay for what you use. Start by going to linux.ting.com. Oh
you know what I wish I did. I wish I had like a good like I
like an old classic Kyra clip. I feel like some classic Kyra
but I don't think I have any classic Kyra loaded. I don't.
That was just poor planning. I do have look at this though. I
have classic Brent loaded in here. That's interesting.
That's good. I've got that set up so if we ever need some
classic Brent I can always pull that in. That's nice. That's
good. What else do I have in here? Of course I've got
Richard but I digress. He's taking a nap right now. Now
let's take a moment and talk about Linux Academy because
today is a huge day for Linux Academy. I'll get there in a
moment but start going to Linux on go to linuxacademy.com
slash unplugged and sign up for a free seven day trial. It's a
platform to learn everything about Linux and all of this
stuff that runs on top of Linux that you want on your resume
and it's a great time to sign up because they've been adding a
ton of content really working like crazy on this stuff and
there's things they have in the works that I'm not even
supposed to tell you about. I know I can't help it. So I'll
tell you about something that's a little public. There's no
getting around it today. Forbes released their fastest growing
startups and it's like you know at a five so they they narrow
this list down to 5000 companies in the United States
that are just growing like crazy and Linux Academy is on
the list. Whoa. They're on Forbes is 5000 and out of 5000
Linux Academy is ranked 78. And I don't know what the
period of growth is here cuz they don't tell you the scale so
you just have to guess. Alright, Wes, you ready? And
Brent, if if you have a guess too, you're welcome to chime in
cuz I know I teased you in the pre show. Can you guess the
growth percentage for whatever it is? I don't know what year
since they started. I don't know cuz Forbes doesn't say. So
we're just it's who cares but it's just for fun. Can you
guess the growth percentage of Linux Academy as listed on the
Forbes top 5000 fastest growing companies? 200%. 200% is pretty
good. That's pretty good. That is pretty pretty bold. That is
pretty bold. Uh does anybody in the mumble room? Brent, do you
have a guess? What's your guess on Linux Academy's growth
number? Well, what's the uh what's the they're on the list
of total how many? This is Forbes's 5000 fastest growing
companies in America and they're number 78 on the list.
What do you think their growth percentage has been there for
whatever the arbitrary amount of time is? I'm gonna go their
number 78. So I'm gonna go 178. Oh, okay. So Wes is 200
something 178. Wimpy, do you have a guess? Eric, do you have
a guess what what uh what Linux Academy's number is? Uh 250%
250. Alright, it's like prices right here. What do you think
Wimpy? For 300%. Those are all really good bold guesses.
Probably not even. I wouldn't have gone that high. I
wouldn't have gone that high. The official Forbes Inc. 500
fastest growing companies in America growth percentage is
4653.64%. Whoa. What? And I actually think that's based on a
low guess of what the revenue is but that's pretty amazing.
That is pretty amazing. 4000% and they're teaching about
Linux. There's a reason why they're growing like crazy
because let's be honest, one of the hardest things about the
IT industry is the fact that it's changing faster than just
about any other industry in the world. It's sort of the deal
with the devil we all accepted when we got into IT. We all
knew that was the case and Linux Academy is kind of a tool
to help keep you current. It's really due diligence when
you're in IT is keeping your skill set fresh and I think
that's why they're growing like crazy is when you look at the
explosion of cloud-based services like Azure and Open
Stack and AWS and people that are rolling in their on
premises infrastructure and how everything is based around
Linux. It makes sense. They are the go-to platforms to go
there Linux Academy.com slash unplugged sign up for a free
seven-day trial and the upshot of that is. They look good on
the resume now, you know, that's like a recognizable brand
name. Now you went to Linux Academy. Oh, I've heard of
them. Yeah, they're on Forbes list like that's good for Linux
Academy. So congratulations to them for making the list too.
That's pretty great and I want to take a moment and tell you
how you can get a $100 credit at Digital Ocean. So go to
dio.co slash unplugged West goes there every single day. He
signs up with a new email address every single time.
Actually, he doesn't. He uses the same email address so he
never gets the credit. I mean, I already had it open. It was
one of my tabs. You actually did no joke. It has a dashboard
up on there right now. How could you not? It's so great.
Digital Ocean is great for spinning up systems that you
want to try something out for a couple of minutes or
something that you want to put in production for the next few
years. I literally have droplets that have been running
for four plus years. It's great. It's my data center on
demand and it can be yours too. And you can get a $100 credit
that lasts 60 days when you go to dio.co slash unplugged.
Super nice fast systems all running Linux KVM is the
virtualizer. They have enterprise grade SSDs. They
have cloud based firewall so you can block traffic that never
even hits your rig. Easy to use DNS management so you can set
up your domains to point to your droplets. 40 gigabyte
hypervisor connections and data centers all over the world.
And then you top that off with a great dashboard and an easy
to use API. And you're like, OK, good enough. Good to know.
Yeah, here's a couple of the other things. You can get a
great system for three cents an hour. Four gigs of RAM, two
CPUs, 80 gigabyte SSDs, which is an enterprise grade SSD.
It's crazy fast. Three terabytes of transfer. Three
cents an hour. That's great. And then you're like, OK, Chris,
that's enough. I got it. I'm like, well, yeah, but hold on.
There's one more thing. They also have the best
documentation in the industry on top of one click
deployments of things like GitLab and WordPress and Ghost
and many more that you just hit one button and you get if you
had been setting up a WordPress stack as a career, your entire
your entire career when you like, damn, they set it up
exactly like I would. And I say that as somebody who has been
one of the biggest advocates of setting it up yourself so you
know how it works. You know, going through Arch, going
through Gentoo so you know how it works, building a system so
you understand how it works. I now do these one click
deployments because I've gone through and deconstructed. How
do they set it up? What repos are they using? What versions
do they have installed? What are the defaults in the config
files? And it's all the stuff I just would have done. They
really know what they're doing over there. I mean, once you've
learned how to do it, then they've got it for you and you
can trust that they know what they're doing, too. So it's
reliable. You can just deploy a base system and learn, too.
That's what's great about DigitalOcean, especially when
you can get a $100 credit by going to do.co slash unplugged
and a big thank you to DigitalOcean for sponsoring the
unplugged program do.co slash unplugged. All right, so we
covered this on Linux Action News 66 this week. Dropbox is
stopping sinking on any file system other than unencrypted
extended for on November 7th. After 10 years of using
Dropbox, they've finally done something that's going to force
me to abandon Dropbox. Chris, I just switched to Bcash FS.
This is terrible news. Yeah, or Butter FS or ZFS. It is a real
shame. And the explanation from Dropbox is a clown show. They
say a supportive file system is required as Dropbox relies on
extended attributes to identify files in the Dropbox folder and
keep them in sync. We will keep supporting only the most common
file systems that support extended attributes so we can
ensure stability and a consistent experience. Well,
that's the biggest chicken shit reason that they could
possibly give because the file systems they're not going to be
supporting have fantastic support for extended
attributes. It's the most ridiculous on its face answer
they could possibly give. And there's been some speculation
that it actually comes down to how they try to hide your local
encryption key and the fact that they can't do it the same
way they do it on extended for on XFS and things like that. So
there's various speculation to what the real reason is, but
that's the chicken shit answer that they've given us and it has
me upset and I'll I want to take a moment not to defend
Dropbox or encourage anyone to use the service because I am
switching off. That's that's just a foregone conclusion. I
have to. First of all, I'm paying for the business version,
which is a thousand dollars a year. Yeah. Okay. Well, if
you're paying, I mean, then that that does change the value
property. Hell if I'm going to if hell if I'm going to spend
2000 if I'm going to spend a thousand dollars a year on
something that doesn't work the way I want. Here's the reality
that was I have two terabytes in Dropbox. Oh, I've been using
it for 10 years. Everybody who's ever worked for JB in a media
production capacity has all of their work in Dropbox. Every
clip for on filter is stored in Dropbox. The one of the great
features about Dropbox is they pay for the disk. They manage
the disk. I buy a subscription plan and they add the disk and
it works out to be cheaper than it would be to buy the same
amount of disk on a VPS and it even works out to be cheaper.
If I were to buy all of the disk and set it up, it still
works out to be a cheaper price. If you consider that I
also still need sinking, I would like revision copies so I
could do restorations. I would like a web UI so that way I can
view the files when I'm remote all of these things. The cost
ends up being essentially right. You need like a business
class reliable interface to your files. Yeah, all of a sudden
$1000 is not that much. It's really not when you're
considering it. Okay, I'd have to okay. So if I'm using two
terabytes today, I probably want at least a minimum of five
terabytes of space. I'm going to want that to be an array to
array. I'm going to want that to be in a box. I'm going to
want that to be connected and I need to set that up. It's not
that far away from $1000. Even if I use an existing PC, I have.
And you only have so much time in a week to be setting up more
and more free NAS boxes. And then fundamentally there is a
huge advantage to having a local client. So Google Drive
and things like that are not particularly appealing because
when you have a software demon running on your system sinking
folders, what you get in essence is a network file system
that's always available offline. And I can save a file to one
location and it can be tilde slash Dropbox slash music and
it is the same file path on every system I sit down on. And
I can use config files that way. I can use music files that
way. We can do media production that way. I can export to a
folder after we're done recording the show in Dropbox
and it sinks up to a cloud system that Joe can log in
through a web browser and download it. And it's super,
super convenient because it creates an omnipresent network
file system that is fully available offline that can sync
the changes up once you connect. And it does it in a way
that is simple because you can install a client, you log in
with a username and password and it begins immediately
sinking. You need to forget about it. The additional
benefit to Dropbox is it supports something called
selective sync. So I mentioned I have like two terabytes in
Dropbox. That's a lot. There's no system where I would sync
down more than 50 gigs of that because so much of it is
historical stuff. Old assets for shows that we don't have
anymore but we still want to keep around, clips that I don't
use anymore, interviews we've played on the show. I don't
need that on a current system. And you probably have many
machines that just can't store that much anyway. Yeah,
exactly. They're on SSDs these days. Dropbox has a
sophisticated selective sync system. It's simple but it works
really well. And so I can use the storage. I can use the five
terabytes I have allocated in Dropbox to hold stuff that I
don't have on my local laptops. It is also extremely useful
when I'm traveling to be able to pull up like an audio file
or even a video and play it in the Dropbox streaming player in
the web player because I only maybe need to listen to the
first 10 seconds of a file. I don't need to download the
entire file to play that 10 seconds. And if I'm on a mobile
connection, that's a massive difference for me. So Dropbox
has been a very functional tool that has worked with people
that are remote, that are on Windows, that are on Macs, that
are maybe somebody that's working to do art for us for a
little bit that isn't using Linux that wouldn't. As long as
they have a web browser, they can play in your space and they
have access. Yeah, or there is a client available for their
platform. And that's, you know, both have been very beneficial.
You know, like, for example, back when we used to edit video
on Linux, and I mean, I'm sorry, on the Mac. And when the
dark days when when Rekai was our video editor, and he would
all sync, it would sync to a Mac, and he would use on the
Final Cut, because that was our production pipeline back then.
And it meant that I could be sitting down here in the studio
on Linux, and the editor could be on a Mac. And there was no
like concern about cross platform compatibility or
anything like that. And not that that is unheard of. But
keep in mind, I've been I've been using Dropbox since like
2008. So that was a little more uncommon. There was no next
cloud or own cloud. You know, there wasn't a bit torrent sync
back then. So we're talking 10 years ago. And there's how many
tools do you how many software tools do you use today that you
were using just as heavily 10 years ago? Yeah, like three. I
know it's really it's like, so that's where Dropbox fits in our
workflow. It's, it's not irreplaceable. But it is a big
consideration, because then it's not just a matter of
switching out of technology. The next question becomes, how
do I get all of the remote people to install something
else? How do I get all of them to buy in on this? You know,
we're talking nearly half a dozen people that are all over
the world, right? There's also that social factor of Dropbox
because it's been around so long has a lot of investment
already. People already have clients installed. It's kind of
like how Slack ends up. And it's not unusual if you see a
public Dropbox URL when somebody sending you a file,
hey, can you send me that sound clip and I send them a Dropbox
file that's linked? That's not unusual. It's a normal thing.
So there's that aspect of it. So you have the you have like the
human aspect of people adopting it. But you also then have to
ask yourself like, well, if I'm going to move off of Dropbox,
is it time now to go through and clean some of this up?
Such such really some of this be on our free NAS. And some of
this doesn't need to be in a sync system anymore. Should we
reorganize the folder structure? Because, you know, it turns out
we're no longer producing cast a blaster. You know, I'm no
longer doing plan B. But yet all of that stuff is still in the
Dropbox directory structure in the current working shows at the
top level. Yeah. So is it time to go through and refocus that
on to what we're currently doing in the assets we currently
need? But that becomes a massive project. That's a huge
project that's going through a decades legacy of production
and deciding what is current and what needs to be resorted.
And it's just a massive undertaking that makes that
November 7th deadline a little uncomfortable. You see where I'm
going with this. So the question became, how can we punt that
down the road just a little bit? Not forever, because this is
something we absolutely have to address. But if we don't get all
of these questions answered, because I would hate to move to
a new system and use a terabyte more of storage than I need.
Like we just wrapped up production of the unfilter show.
Do I now need all of the unfiltered clips in Dropbox?
Probably not. Probably not. But where else do I put them?
Yep. And where maybe maybe they go on the free NAS. But then I
need to make I need to slice out space on that. Right? Because
it's like a terabyte worth of those are just that you manage.
Yeah. So you lose the convenience there.
So this is why we wanted to talk about ways to sort of kick the
can for a little bit. And the first idea that we kind of came
up with behind the scenes here was, well, what about just
creating like a sparse file on your file system that was
formatted as extended for? What do you think of this idea?
Create a sparse image, which would only use as much as it's
actually using, right? That's the nice thing about sparse
images. So if you have a 500 megabyte Dropbox, it would only
use 500 megs. But you could let it go up to like two gigs or
whatever. And then you mount that. And then you set your
Dropbox inside there. So it has to be mounted to boot up. What
do you think of this? I mean, you can just put it right in
your, your old F stab there. So, you know, once you've got to
format it, maybe just stick it somewhere in a convenient place
that you know, or a secure, do you really call it F stab? Well,
no, but it's more fun. So yeah, that is. Yeah. So look at the
truncate command. So you could do truncate dash s two gigs, and
then you could do something like Dropbox dot ext four, and
then you use make a fast dot ext four to format that. And then
create a directory inside there. And you can mount that just as
a simple pseudo mount Dropbox dot ext four to say like, colon
backslash Dropbox, and you would have a Dropbox folder that
would show up that would actually be a mounted sparse
image. And that isn't that difficult to do, you just move
your Dropbox to there, you keep on syncing, it's living on your
XFS partition. Yeah. And then if you put it in F stab, then yeah,
you know, it'll just happen for you. Or, you know, system D can
do that too. Speaking of lots of options, it's not ideal, right?
There's a you just have another layer just to make the
Dropbox client happy. Yeah. But here's the here's the real rub
is it's worth keeping in mind that it's also encrypted
extended for partitions. Now, if you're doing whole disk
encryption, the entire disk is encrypted, that's getting
unlocked at boot time. That is sort of beyond the actual
on the application layer that's being done at the kernel
layer. I don't think that's going to affect Dropbox. They
actually haven't been clear about this. But if you're doing
like just the encryption of your home directory, that's where
you're going to get screwed. And there are several
distributions that do that by default, that type of
encryption. And that's where even if you're on extended for
you're getting screwed over. You know, if you're in a lot of
enterprises have a policy have an encrypted home directory.
And now, it just you're like in a hard between a rock and a
hard place because your work demands that you have an
encrypted home directory, but this tool you use to do work
won't work anymore. So this could be a solution for you,
Eric or wimpy to either of you have a particular idea of a
workaround that comes to mind for keeping Dropbox happy. We
even speculated about ways of fooling to think it's talking to
extended for regardless of the file system is on with a few
little library hacker ease. But curious if either of you can
think of a way to keep Dropbox chumming even if it's a on ZFS
or XFS. Yeah, I like the I like the idea of sparse files, you
could use, you know, a QCOW file, you know, something
that's common to the virtualized environments and
format it in a similar way so that it grows, you know, with
the requirement of the storage that you're putting into it. So
yeah, I like that. I was I was looking so you talked about this
at the weekend and I was I went back and looked at sync thing to
see how sync thing has been evolving in in recent years.
And it's interesting, a recent release of sync thing, so not
point 14, but point four, seven, actually supports file system
monitoring within itself now, and doesn't rely on extended
attributes. So that is a recent change there, like, literally at
the end of last last month, sort of June, June, this year. So
there's always, you know, alternatives out there. But
yeah, lots of people like sync, like Dropbox for all the
reasons that you you mentioned most most most of which is the
selective sync capability. Yeah, it's nice. So yes, finding
finding file system mechanisms. And you said about sudo
mounting, you know, Dropbox, if you're using it on a desktop
operating system, wants to use the Dropbox folder in your home
directory. So there's no requirement for you to mount
that with sudo, you'd be able to do that. You know, a loopback
mount. That is a fair point. I think, I think same thing is
extremely attractive. I've got a couple of candidates, I've
obviously been running next cloud, next cloud instance for a
long time now. And sync thing I've played with, I've dabbled
with the thing I really like about sync thing is I could set
up individual folders and just sync them to certain systems. So
it'd be complicated, but it'd be really great. Fedora has a
suggestion to just go the other direction. They say just
convert the file system use FS transform. And they give a
walkthrough on the Fedora magazine website. They say it
sounds like magic, but you can convert from extended to
extended three extended for riser FS, or XFS to another type
in almost any combination. As long as your kernel has support
for that file system, the one you're coming from and the one
you're going to it does seem to work. I did just try it and
converted an XFS system to ext4. Shut up. We only had one
file in there. But it came through unscathed.
That is that is a workaround. But I will stop using XFS when
you remove it from my cold dead fingers because I'm I am wedded
to XFS. Yeah, it's a it's a great file system. And that's
why Red Hat Enterprise Linux sets it by default for the home
partition. It is a tried and true system that's been around
since the 90s that it's still getting active development. It
was one that I went to not only because it's super fast with
small file systems, it keeps itself tidy, but it supported
extended attributes before extended for was even released.
And so it just drives me crazy that that is Dropbox's
explanation. The extended attributes argument is is weak,
I think, because although there are differences in how the file
system store extended attributes in the block sizes in the
I nodes and what have you, that should be transparent through
the libraries that they're using. Dropbox is implemented
using Python ostensibly and libR sync. Yeah, that's what I
thought when I heard that. Or the least I mean, you know, we
just don't have very much insight or clarity here, but it
would be helpful if they could lay it out a little bit more
and then at least make the argument of like, is this not
possible because of some design decisions that you've made?
And, you know, they do have a fancy client, right? So simpler
clients might not need this. Or you just it's just too much
work and you don't want to spend the resources on Linux. And
those are different scenarios. I would really like them to be
more clear about this instead of just one community support rep
mentioning something in the form and then mentioning
something later. And then we're left to speculate other than
you're going to start getting notifications via your Dropbox
client. It seems it really like rubs in our nose to Mac gets
two supported file systems and we get one and we're like,
we're the one with all the file systems. I just talk through
the kernel. Don't talk directly to the file system. You're
doing it wrong. That's my that's my general sense. And so
I've learned two lessons from this and I feel like it's worth
sharing with you guys. The first lesson I've learned is you
really if you're on Linux and you're building something like
an essential workflow, you really have to go with free
software whenever you can. Now in the past, some of our
production systems or Macs or Hackintoshes and so Dropbox
seem perfectly reasonable. If it was 10 years ago, we were
starting where we are at today with Linux. I don't think I
would ever have used Dropbox. So you know, keep that in mind
for your workflow. Some of these companies just are never
properly incentivized to support Linux users in an
appropriate way. They can't even give us an appropriate
response. They don't even have the time of day to give us an
explanation why they're screwing us. That's where we're
at. I mean, it's that same thing, right? You don't you get
the convenience, but you don't get the control and free
software gives you that back. Yeah. And so that's that's
just a reinforcement of that lesson. But at the same time
that that that scorn is tempered with the fact that I
used this for 10 years. While I always knew this was gonna be a
problem. I got 10 years of practical use out of this and
I've only paid for the business account for like the last three
maybe two. So that's you know, you have to weigh that it did
burn me in the end. But at the same time, I I managed to not
have to manage that problem for 10. I managed not to manage
that problem for 10 years. And you I mean, you might have even
had a change if you were doing you know, one open source
project goes out of favor a new one has more features, you
might have to have to move those files anyway. And I haven't
been wasting this time. You know, I've been you guys have
heard me tell the story about my next cloud instance that runs
on a fedora server on DigitalOcean. I could switch
over to that I bought their, you know, their their
attachable block storage additional space. So my next
block storage, I don't I don't have five terabytes. But I've
got I've got a few gigs free. So I you know, I have options
here and I've got till November 7. And I've got other options
thanks to how powerful Linux is to even kick this can further
down the road if I have to. So I'm not even totally out of
options. But it's a good lesson. I feel like there's a mix of a
lesson here that is there is a practical aspect of this, but
you have to stay vigilant. And I'm just slightly on the other
side of vigilance. I'm almost vigilant. But I was really
hoping because truth is, I think we renewed just two months
ago. No. Yeah, I was my my and Noah and I have been talking
about this for months. My intention was to really get off
the sauce this year. You know, looking at the cost is that's
why I'm that's why I'm actually familiar with the prices, the
pricing versus local versus going VPS versus having all to
speed. You've been working on a C file instance. I knew what
all of the pricing is because it's something we've been
looking into for a while. Have you considered tape? We
could just fill the garage here in the studio with tape. You
joke. I actually have seriously considered it might be a good
solution for those video assets. First of all, you can
get some serious storage on those tapes for a decent
price, especially if you start buying some of those tapes,
you know, in bulk off Amazon or get a drive off of eBay. And
it's that stuff that those standards, those are the same
standards when I was an episode that would make no, it
just put old shows on tape. Just me. It has seriously the
only problem is it seems really, really, really
shortsighted to take a show that's fundamentally something
supposed to be distributed on the internet and store the only
copies on tape in a building that could easily burn down
because of all the equipment we run 24 seven. So that's my
only concern with that. But yeah, so there's a few options
for you. I may actually just consider FS transform for the
for the for the systems here in the studio. I may just do FS
transfer. I mean, there probably are systems where I
agree XFS is a great file system, but there are probably
systems where you don't care that much about what file
system it is. And so for that, you know, it does seem to work
pretty well. I do also think it might be this next year's, you
know, April Fools prank. Watch out your file system might just
be butter FS before you know it, buddy. Oh, that'll be the
day. I think I'll be on ZFS on the desktop before then, but
we'll have links to sparse bundles, FS transform on all of
that in the show notes at linuxunplug.com slash 262. And
yes, go ahead. Take a piss. Give me a hard time. Let me know
how silly I am for using Dropbox for all these years.
It's worked out so well. But in the end, I knew this day would
come. So I'm not I mean, I can't even say I'm super
surprised. I can't say I'm super shocked. I mean, you've
talked about it, right? We knew it was going to happen or it
could. It's just the unfortunate reality that they
have a lot of work to do. I'm looking forward to the next
Ubuntu podcast because I assume Mr. Wimpress will return to the
show. Yes, it will be my glorious return. We're going to
be recording tomorrow night because as I speak right now, I
can exclusively reveal that Popeye has just landed. He has
returned from Academy. So yes, due to the unique way that the
Ubuntu podcast is produced, we're not recording on a Tuesday
evening this week. We're recording on a Wednesday.
Time travel. Very nice. Well, I'm looking forward to it.
Always a great show. Go check out the Ubuntu podcast to get
more wimpy and Mr. Popeye as well as Mark. It'll be good to
hear the regular cast. If you have followed any of our peer
tube shenanigans, that's thanks to Eric, the IT guy. We have a
did you rename the channel, Eric, the peer tube instance
because there has been some other things in the works as
we're getting ready to set up some really great developer
resources. So you can find Eric there, but I don't know if we
have a new URL for it. So no, the peer tube instance is still
it. No, no, I'm talking about the group where you're setting
up something new. The new thing you're working on in the group
that we should be teasing now, you know what I'm talking about.
So we have a group for peer tube, a telegram group that may
be transforming to a more developer focus group for
people that want to work on projects, as well as Eric's
working on a get lab instance where we're going to consolidate
our open source projects around Jupiter broadcasting onto that
with a great URL and something that Eric and I have just
started talking about, but we'll probably be at that same
site is essentially an issue tracker for Jupiter broadcasting.
So I could give you an example right now. The audio stream
isn't working. That's something we're no, it's something we're
in progress, but it's not working. So that would be an
open issue. Hey, I noticed your audio stream isn't working or
something like that. Like if you had a problem with the website
or a feed. So it's all things that are in the works. And if
you want to get involved in that, I'm it's a it's a it's
telling whatever the telegram short URL is slash peer tube.
I'm sorry. I think it's like T dot me or something. Let me go
to T dot me slash peer tube. See if that's it. T dot me. Is
that it? Nope. It's not that whatever the telegram short
URL thing is seem to work for me. Oh, yeah. JB peer tube.
Yeah, that's it. So we're going to start some of the planning
and work around that. It'll probably get organized in the
telegram group, not to diminish some of the other chat
platforms. There's the JB dev IRC and things like that, but
this is just another avenue for people to organize telegram
seems to be hot these days. All the kids join the group and I
need to I need to ban him real quick. I'm going to get it out
of there. Mm hmm. Now it's really good. Yeah, that's good.
I'm glad you got in there. Alright. Well, go get more West
Paine. He's over at tech snap dot systems. You got the
Twitters too. Oh yeah at West Paine. That's good. So succinct.
It is you. You are fortunate that you have the unique last
name like that that you can grab your own name that joined
early too. I got I had I had something Chris something and I
lost it. I had I just lost I left Twitter. I'm I'm good with
Chris last though. So I'm at Chris LAS. You can follow me.
The whole network is at Jupiter signal. You can follow
that to find out about show releases and all of that. We do
this show live on a Tuesday over at jblive.tv Jupiter
broadcasting dot com slash calendar to get that converted
to your local time. I usually get the stream kicked off around
1 30 PM Pacific. So if you just want to do that math, come
hang out. Yeah. Hang out in the chat room. Hang out in the
mumble room. Be part of the virtual lug irc.geekshed.net is
the chat room. Google again like I mentioned at the top of
the show Jupiter colony mumble setup and you'll get the
mumble guide get a working mic get a headphones get in there
chat with us. Tell us what you think about Linux and the
stories we're covering this week and you can also go to
Linux unplug dot com slash subscribe for all the ways to
get the show every week. Thanks for joining us. See you
back here next Tuesday.
Get it out of here. Oh Richard. Oh well done everyone.
Thank you very much. Enjoyed that. It was a good tight group
this week. It was uh but that worked out. Our syncing
perspectives. JBtitles.com. JBtitles.com. Let's go
boat. Tribes of Anit is pretty good. System BSD is also
pretty good. Those are both really good. I got there and
they're already tied on the on the boats. JBtitles.com. Don't
make us pick. Settle this guys. You have those. Dropbox D.
Dropbox D.
The Popey has landed. That's also pretty good. Yeah now that
the show's over everybody go watch the rest of that talk
because it was a great talk. It's like you know what I gotta
go to that. It's a yep. That if that's if that's the sort of
opinions and stuff that they're open to having at a BSD event.
I'm going plus hang out with Alan Jude. So that never hurts.
Yeah yeah plus you know what else. I mean not to plus and
plus here but I like plus and stuff here. It's a great drive.
You could go down the coast down the Oregon coast. That is
a great. That's a great drive. That's a great drive. I know.
So I'm like let's do it. Let's go plus. Go hang out at Intel.
Alright. Okay. Twist my arm. Twist my freaking arm. And I'm
sure there's lots of fun exciting stuff happening over
in that BSD world. It's been a while since we've checked in.
Yeah right. I'm practicing so I'll blend in in the group.
