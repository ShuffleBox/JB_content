All right. Well, you remember that old 3D pinball game on Windows?
I mean, just about one of the only good things on Windows.
Yeah. Well, someone managed to decompile it, get it running on Linux and put it on GitHub.
Oh, yeah. Yeah. You know, I should see if I can get a build of that.
I'm going to try real quick. See if we can get that.
I mean, we're not doing anything else right now.
You might as well. Actually, it was updated recently to a resizable window, scalable graphics.
Fancy. Yeah. Actually, pretty easy.
All right, Wes. Brace yourself. Let's see if we can launch it.
Let's find out. We'll find out live together.
Oh, this is great. OK, let's give it a shot.
Let's see if it works.
This is amazing. Look at that.
Uh oh, mumble room. You might just have to do the show without us today.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris. My name is Wes.
And my name is Brent. Hello, gentlemen.
Pinball aside, the show must go on.
And this episode is brought to you by a cloud guru, the leader in learning for the cloud,
Linux and other modern tech skills, hundreds of courses and thousands of hands on labs.
Get certified, get hired, get learning at a cloud guru dot com.
Coming up on the show today.
Well, I just got done trying out the Pop OS 2110 beta on my Raspberry Pi 400.
And Jeremy from System 76 is going to stop by in a moment to chat with us about it.
Plus, we'll also have our thoughts on the perfect Linux laptop right now.
A little bit of community news in the show, as always, some pics and more.
So just get right to it before we do anything else.
Before I even attempt to introduce Jeremy, let's say time appropriate greetings to our virtual luck.
Hello, mumble room.
Hello, Brent.
Namaskaram.
Hello. Hello. Nice to see some solid numbers in there today.
And they all wear matching outfits. Wow.
I don't know how they coordinate that, but it is impressive.
You know, that matrix channel is useful for all kinds of things.
That's pretty great.
Well, so this last week, Pop OS 2110 entered the beta phase.
And, you know, we've been keeping an eye on things because it had been teased that there might be a Raspberry Pi version.
And sure enough, it appears an image for the Raspberry Pi for Pop OS 2110 has been published.
As soon as we saw that, well, we just had to reach out to Jeremy Saller, principal engineer at System 76 and Pop OS maintainer.
And he joins us now. Jeremy, welcome back to the show.
Thanks for having me. I love being here.
Thank you for being here. And I know behind the scenes you told us you're a little under the weather
and you still made it. So we really appreciate it.
And I had to reach out to you last minute, too, because as a Pi fan, I was pretty happy to see this.
I think the Raspberry Pi with external SSD storage as the primary disk is starting to get to a pretty usable desktop state.
Like it's in the zone now. But I tried this out with an SD card, Jeremy, and it's definitely usable, but it's slower for sure.
And I'm wondering, as you've been tinkering with this, do you see storage the way storage works right now in the Pi as one of the limiting factors for like a butter smooth desktop Linux experience?
Yeah, so I've been I'm the primary person behind this.
I've been working on it in kind of pieces of chunks of time that I can cut out of my normal Pop OS duties.
And I do everything on an SD card because I want to see how bad it is for the average person.
I'm still using the Pi 400. So the the recommended configuration is the Pi 400, because it has a slight CPU overclock with four gigabytes of RAM or more and using an SD card.
And yeah, definitely the weakest part of the whole solution is the storage speed.
If you start using a I have an external 10 gigabit per second USB 3.2 Gen 2 NVMe adapter.
That's a lot of jargon, but it's fast. It's probably 100 times faster than an SD card.
So when I'm using that, it definitely, definitely improves the experience to the point where I feel it is similar to a laptop from about five years ago, a kind of lower end laptop from about five years ago.
Which is fairly impressive when you consider the entry price of the Raspberry Pi, right?
Absolutely. For 100 bucks, you can't really do much better.
So I mean, I have to ask this question, right?
This is the obvious question, but aren't you just making it easier for people to not buy system 76 machines by doing this?
Absolutely not. And, you know, I thought the same thing, like, is this going to cannibalize our market?
And I feel that when people have a low cost entry point, when they do finally have the budget for a more powerful computer, where are they going to go?
They're going to come back to the manufacturers of the operating system that they love.
And I know this happens.
So I think we've only amplified the thirst for our products among our customer base because they already had Raspberry Pis.
They already had our products. It was a very, you know, closed Venn diagram of the two, making them happy, only amps up our products even more.
Yeah, not to be cliche about it, but it is it's a it's a halo effect.
Right. OK, so I was curious because I'm not I'm not a developer and you're pretty deep into this stuff.
Do you find that it makes the X86 version of Pop OS better by doing these kinds of ports and working to get it up on the Raspberry Pi?
It definitely does. Part of the porting process was to do a complete 2110 has a lot of changes, and we haven't really explained those well yet.
And there's a lot of low level changes that have happened that you're going to see later on when we explain it.
So we are going to be switching to the stable kernel releases.
We're working on releasing the 5.14.13 kernel currently on 2110 that will hopefully have us on the mainline kernel indefinitely.
So rather than utilizing the Ubuntu kernel and then applying patches to it, the intention of that is to have a closer link with the upstream kernel development.
The major blocker to that is the NVIDIA driver. That's one of the changes. Another change is we're moving off Launchpad and we are moving our repositories to our own server apt.pop-os.org because Launchpad had all the build infrastructure for ARM64 already, we didn't have that.
So we actually took a System76 Starling server, which we did not, honestly, we did not sell very many of, but it was one of our previous ARM offerings, and set it up as a build server so we could do ARM64 builds, and we re-architected the packaging of Pop!
We re-architected the packaging of Pop! OS to allow for Pop! Server, a server edition of Pop! OS. So all of this stuff happening basically because of the Raspberry Pi port, and we also redid our build system to write it in Rust and to ensure that it was able to spit out builds for X86, for ARM64, and hopefully in the future for RISC-V6.
So that all adds up to a lot of low-level changes to ensure that we are in place for what I see the architectures of the future being, which are ARCH64, RISC-V64, GC.
That's quite a bit of knock-on effect. I didn't expect all of that. I'd like to jump back just to the Launchpad transition. So this is everything, right? This is the build tools, this is the bug tracking, and this is also the package hosting.
All of that was moved off for 2110, so now it's all in-house Pop! OS stuff. That means we still do use the Ubuntu mirrors for Ubuntu packages, but all of the Pop! OS packages, which is about 100 packages, are coming from our own app.pop-os.org server.
So if I understand you, essentially the next release will be based on 22.04, which will be an LTS Ubuntu land, but you're going to maybe be using a different kernel from upstream, a mainline kernel with an LTS Ubuntu land on top of it?
Yeah, we hope to continue. We're actually hoping to release that 5.14 kernel even on 20.04 LTS, so we'll be backporting it to our prior LTS release as well.
The intention is that Pop! OS will be the distribution that will run on any hardware possible with absolutely no compromises, and the biggest compromise with the Ubuntu kernel development cycle is the SRU process and the fact that new hardware can take at least two weeks, but usually a month, to get support.
And the biggest problem with the Fedora process, which does something similar to what we're trying to do, is they don't really care about the NVIDIA driver.
And I understand from their position why that would be the case. Anybody shipping the 5.14 kernel right now does not care about the NVIDIA driver.
That includes Arch, that includes Fedora. The reason is that the NVIDIA driver has no stable configuration, no bugless configuration that works on the 5.14 kernel.
The last NVIDIA driver that was released, the 470.74 driver, had issues with G-Sync. It was the first driver to support 5.14, so you're either breaking G-Sync configurations or you are releasing the 5.14 kernel. You can't do both.
So our intention with switching to the mainline kernel is to ensure that these regressions don't happen as often, that we have as close to mainline as possible Linux kernel that also supports all of the available hardware in the entire desktop ecosystem.
I mean, that obviously would make Pop OS compelling to both gamers, but like you said, people that want other architectures. But the big but that I see is it seems like it really puts a lot more of the burden of testing on you guys.
So are you thinking like you'll have some people in-house running the kernels for a bit, testing them, dogfooding them? Or what are your thoughts on how to accomplish the testing aspect?
I think it's very important for us to increase the size of our team, and we're doing that now. So we just put out a job posting for Pop OS developers. The only requirements are that you know Rust and that you have a good internet connection.
We wanted to limit the requirements so we would get as many applicants as possible, and we're going to be hiring multiple people from that role. It's not just one person being hired from that role.
So we're going to build out the engineering team, and I believe Neil has something to talk about. I might have misspoken on Fedora, so I'd love to hear that.
Yeah, so we absolutely do care about the NVIDIA driver with the latest kernel stuff. Part of the complexity here is really getting NVIDIA to care. From a community perspective, we try to engage and make sure that things are patched, and we try to do the best we can in terms of testing.
The major complexity issue we have right now is that, for example, you brought up G-Sync. I don't know anybody on the team that actually checks this stuff that actually has a G-Sync monitor and knows how to correctly test for G-Sync.
It's not a question of whether or not Fedora wants to care about it or not. It's a question of, we just don't know how to. We don't know how to test and make sure that that works.
I completely understand the amount of hardware out there to test, and the reality is NVIDIA doesn't really care that much, so they're happy to leave. When 5.14 came along, it took them three months to make an NVIDIA driver that actually worked on 5.14, and then it had the G-Sync regression.
The big problem is NVIDIA, but I feel that if there is somebody like System76 that does have the ability to test, and we do the same thing, we try to do the same thing Fedora is doing, we get to mainline kernels, then maybe it won't be such a problem for Arch and Fedora anymore if we're all targeting mainline kernels.
We can start saying, hey, as a team, as a desktop distribution team, Fedora, Arch, PopOS, and all the others, this new kernel has regressions with the NVIDIA driver.
We know that a significant portion of the desktop Linux market is using NVIDIA cards, even if the upstream Linux developers are willing to break the NVIDIA driver, we still do have to have something that works for the people who have NVIDIA GPUs.
Absolutely.
That's always been one of the best and most important roles that I think distro maintainers can take, and I know you guys also have customers that you want to keep happy, which is one of the reasons why I think it actually ends up working out for all end users.
Wow, there's a lot to unpack there, Jeremy.
It seems like there's a lot of things in motion, including things like a pop server and other things that may be down the pipe.
I'm wondering if you have any other kind of anecdotes to share with the Raspberry Pi, like expectations you might want to set or anything like that, because we're going to link to it in the show notes, and I have a feeling some people will check it out after the show.
Well, I'm pretty happy with it, just based on trying out Raspberry Pi OS and Ubuntu on the Pi, both Ubuntu server and Ubuntu desktop on the Pi.
I think it stacks up well compared to those.
You definitely need the four gigabytes RAM or more, and I would definitely prefer if people were trying USB 3.0 or faster storage.
Other than that, it's pretty much stock pop desktop.
We haven't really made many changes at all to adapt it for the Raspberry Pi, other than making sure all the packages we're building for ARM64.
Right.
Very good.
Well, I enjoy it.
I think it makes for my ideal little use for the Pi 400 right now is kind of like an emergency go to machine that has my email accounts, my calendar, my web browser logged into my profile.
Even if I forget my laptop or my desktop is crashed for some reason, it's like it's my go bag of computers that is standing by.
And I think the pop desktop is kind of perfect on there.
So I just think the way it all works with the launcher and all of that has been ideal.
Jeremy, thanks for coming on the show and explaining all this to us.
Yeah, thanks for having me.
If you were wondering how you would know which games might work best on the deck versus those that might not.
Well, it seems Valve has a solution.
This week, they announced the Steam Deck Verified program.
This seems like a pretty good idea, right?
Because how were we as consumers, especially if you're not maybe as savvy as a news follower, like how would you really know what games work best on the deck or not?
And it seems like this is probably going to solve that.
Right. And it strikes me that we have inspired with the deck, it seems, a lot of Windows users to try Linux.
We've had some listeners that have been Windows users for a long time who are currently trying out the deck.
You see the Linus Tech Tips folks taking out a Linux challenge right now.
That's probably the most prominent one. That's probably the one I should have.
Of course.
But like the Linus Tech Tips challenge, a lot of people are missing the forest through the trees.
And this is something I've observed in the notes that we've received and something I've observed watching the Linus Tech Tips Linux switch challenge.
What Valve has done here with the deck is they've created a carefully crafted set of hardware and software to make sure that the end user gets a great experience.
And they've built for Linux.
But a lot of these switch challengers, and I don't mean anything disparaging if you're a listener, you've got to understand you're cobbling together hardware that you've had forever that you bought specifically for Windows.
And you're getting frustrated when it doesn't work, which is a bit akin to like being a Windows user forever and then going out and getting one of these new Macs and then being frustrated that the hardware you bought to work with your Windows box doesn't work with your Mac.
Like, that'd be silly. Everybody would just take that as obvious on its face.
Well, yeah, you bought something that only works with Windows. Of course, it doesn't work with your fancy new M1X Mac or whatever.
So it's sort of like that same philosophy isn't being applied to the Linux switch.
Like Linux is just expected to work with everything, I guess.
And I mean, that would be awesome, but it's just not happening.
For most things, it does, right? For an incredible array of hardware. But unfortunately, hardware and drivers matter, and sometimes it just doesn't work.
Yeah. And I mean, I'd love it to, but it's like you're missing the point here.
I don't know. I see people struggling with this, and I think this is a great idea.
So the DECK really does teach us to get this working.
You need a curated set of hardware. You need a set of drivers you know that work.
And then putting a certified for the DECK program on top of this, it also kind of gives developers like a goalpost now, right?
Developers kind of have an idea of, well, what do we need to do to be DECK compatible?
Is it just Proton? Is there something more to it?
Like there's actually something to accomplish now for game developers.
And for consumers, I would assume there'll hopefully be a list that gets compiled either by Valve or someone.
And consumers can check that list before they buy a DECK, I would think.
Yeah. Hopefully this, you know, assuades any fears right now and makes both sides of the marketplace a little more interested in investing.
I'm curious, Brent, if you're in the market for a new machine.
One of our emails later in the show is about an ideal Linux laptop.
And Apple just announced these M1 Pro and M1 Macs based.
Macs? A Macs Mac. Are you curious? Are you tempted to get a Macs Mac, Brent?
I saw all the notes in our show notes ahead of time because I have that insight.
I got really excited. My antennae are tingling.
So I will say Alex and I built this sort of Franken X250 of mine here in front of me.
But it's just right. It's just disappointing.
So I'm really looking forward to getting something else and to, you know, with all of the offerings we've seen come out in the last few months.
I'm actually happy to say it's going to be a hard choice.
Yeah, I was kind of kidding about buying a MacBook, but we may be nearing a future where you could actually buy a current MacBook from Apple and get it home and put Linux on it.
We don't know yet, but it seems Asahi Linux feels like they have a good shot.
They feel like they've got a chance of getting this working.
You know, that actually feels a little bit unbelievable to me because it feels like only a month or two ago we were talking about, you know, the very beginnings of having that work be done.
And how are we where we are now? It seems fabulous is the only word.
I know. We don't know for sure if these new machines will work.
No, we do not. Although it sounds like Hector Martin has ordered a new MacBook with one of these shiny new SOCs in it and is going to do a live bring up stream sometime soon.
So, yeah, fingers crossed, right? I mean, this is going to be a test of some of their design, some of their projections that, you know, the unique setup of this Apple Silicon might make this process going forward easier.
And now we kind of just have to hope.
Yeah, there are some unique ways that Apple set it up in such that a lot of what runs the internals of the M1 SOC is done in hardware.
And so the OS doesn't have to be directly in control, but it has to have interfaces to that.
And they think because some of those interfaces haven't changed since very, very early in Apple's SOC days, they think there's a good chance that Apple won't change them for the next iteration just to keep things simpler for Mac OS development.
And knock on effect to that is it means a lot of the work they've done to bring Linux up on the M1, which is not all upstream, but a very significant amount of it is now upstream and the rest is pending upstream.
They think a lot of that work that they've done may just automatically apply to the new chips that Apple just announced.
And like Wes said, Hector is so confident that he's going to live stream it.
I think it's like next week or sometime you have to check his Twitter feed, but that'll be interesting.
He's just going to do it live and he's going to troubleshoot and work his way through it.
And the reason why we mentioned this is I think we have to acknowledge that from a technological standpoint, these are pretty impressive chips. What Apple is accomplishing here with performance to power ratio is really good to see, actually.
And I hope it drives the rest of the industry.
And getting Linux onto that, I think, is going to be pretty significant because not only does it open up new hardware to more people and that on its face, more choice I think is always a good thing.
And if you don't think choice is a good thing, you're probably not very happy as a Linux user.
And then secondarily, I think just from a repairability and a lifespan and also a data forensic and security standpoint.
Just nerdery, too, right? I mean, like you put Linux on here and look at how much already we've learned more than we would have learned from Apple directly by Hector and the team's efforts, right?
Like we know so much more about the internals.
It's not that it doesn't feel weird, right, Brent?
But it's compelling hardware and it does, especially for a photographer, it does sort of address a specific market use.
Yeah, and I remember a time not even so long ago when we were all quite disappointed in Apple's hardware and then they just kind of leapfrogged everybody into this stuff.
It's really impressive to see and exciting.
I haven't been excited about Mac stuff for a long time.
I agree.
In fact, on Koda Radio, I was quite critical of their Mac hardware over the last few years, especially the early butterfly keyboard systems that only had 16 gigs of RAM.
And now that we're seeing systems that can support 10 cores and 64 gigs of RAM, now you're starting to speak my language.
I start to take notice, too, when you're talking about doing all of that around 35 watts.
I find that unbelievable.
So I very much like to see my favorite operating system on there.
And I think the Asahi Linux team has probably got a pretty good shot.
I think if you were in Vegas and you were betting, I think the odds are on them.
But there's something else going on this year along with all of this stuff about new architectures and ARM in the background.
And let's be honest, in the space that actually makes money for Linux, the server market's in a bit of an upheaval.
And we've all kind of learned the lesson of how important a community enterprise Linux distribution is.
So we're keeping an eye on what's going on in that space as the December deadline for traditional CentOS approaches.
And this week, it looks like the AMA Linux folks have done the undoable.
Nobody would take this challenge on well and stick with it, I should say.
Jack, it sounds like AMA Linux is introducing a new migration tool.
And if I follow, it means I could migrate, say, from older versions of rail, potentially even like version seven to AMA Linux or what?
Tell me how this works.
Yeah, hey, so from versions of CentOS to really any enterprise Linux derivative distribution.
So that's AMA Linux, Oracle, even CentOS itself, and also Rocky Linux.
That's amazing.
You're telling me that I could just use this to get my butt off of rail seven on to just sent off stream.
Yes, if you wanted to, we're not billing it as a conversion away from rail.
Right. Right. Of course.
Why would you that be suicidal?
Well, I mean, it's not that's not what we're after.
And I think that's not the audience for it.
But I think it's more anyone that's still running like CentOS seven.
And we hope that eventually we'll be able to support CentOS six and maybe even an earlier version to just, you know,
come up to a newer version and, you know, bring their stuff into modernity.
Oh, my gosh. I can't I don't think I can express to you the level of gratitude I would have felt back in the day when I was administering rail systems.
And this was before they adopted Yammer, obviously DNF and moving older rail systems to newer rail systems.
Or what I used to end up having to do the hard way was hard migrate as an existing rail box to CentOS.
And it was almost always a couple of versions of rail behind.
So, I mean, it was to say it was an all nighter is an understatement.
So a tool like this.
Well, I just I'd be buying you guys all the beers right now.
So congratulations, because not a lot of people want to take this on because it seems like something that is fraught with landmines.
Listen, you still need to be careful.
You still need to make sure that, you know, you're following like sysadmin best practices and make backups.
And, you know, you may want to do like a dry run in the sandbox or something.
But, yeah, I mean, it's it's definitely doable if you're smart about it.
And I think that as time goes on, you know, listen, we're doing this as a community wide project.
So I think that as more people get involved, as more people test it and as more people contribute back, it will only get better and only get easier over time.
That's nice. And, yeah, I have no doubt that anyone in our audience, especially anyone who's been using CentOS or rail that's getting pretty old, they're going to do a dry run.
I have faith in them. Well, thanks for coming out and explaining this.
I know it's a busy day over there for you, Jack. So it's good to get the scoop directly.
So that way I didn't miss up the details. And it's a great tool to see. So thanks for joining us.
Yeah, absolutely. And if anyone wants more info, check out on the Linux dot org slash elevate.
And, you know, where we look forward to working with everyone across the EL derivative community.
So hopefully this is something that, you know, us, Oracle, Rocky, even Santos and Rell themselves can all contribute to.
And we definitely look forward to that. I think that's something that's, you know, a little bit missing in the community today.
So hopefully this is something we can all come together on Lino dot com slash unplug.
Go there to get one hundred dollars and sixty day credit on a new account.
And you go there to support the show listener support.
And this is one of the ways you can support the show is what lets us stay independent and stay true to our listeners.
It's by your support. And you can do that by going to Lino dot com slash unplug and you get one hundred dollars and sixty day credit.
Lino is my favorite way to host something. I've been using them for over a couple of years now and I absolutely wholeheartedly recommend them.
Even if they weren't a sponsor, I'd still tell you this is the place to go. Don't tell Lino that though.
You know, it makes sense, really. They're independent. That always checks a box with me.
They've been around forever, 18 years, which is forever in Internet time.
And they have remained focused on their mission to make computing simple, affordable and accessible to all in the cloud.
And that's led to a best in class experience. Nobody checks all of the boxes. Lino checks.
Oh, yeah, there's lots of ways to host stuff.
And some companies check some of the boxes and some of those boxes are pretty important boxes, but nobody checks all of them.
And when you get one hundred dollars in credit, you can go see what I'm talking about.
Lino dot com slash unplug. For example, go deploy a next cloud server, maybe a Minecraft server.
Go build up a development environment or do what I do all the time and A.B.
test stuff, different distros or different projects.
I've mentioned this before to you, but one of my favorite activities on Linode is trying out several different permutations of a project and picking the one I like the most.
I did this a bit ago when we were looking at infrastructure options and I wanted to try out various different WordPress configurations.
But to get WordPress really fast, like, you know, rank really well in the Google search kind of fast, you got to kind of have to tweak it a little bit.
And Linode has a one click that I ended up going with that was better than anything else I built myself, which is all based on top of the light speed stack.
You'd be really impressed by how fast you can actually get WordPress going on Linode.
And it doesn't take like a crazy expensive box either. In fact, their prices are 30 to 50 percent cheaper than the major hypervisors out there that want to lock you into their system anyways.
And they have an easy to use cloud dashboard that's so much more straightforward than anything else those guys have cooked up.
I don't know what they're doing over there. It must be designed by like a committee of 100 over there.
And then Linode layers on top. Great services you're going to eventually find are just invaluable, like S3 compatible object storage at fantastic prices.
DDoS protection, VLAN support, a powerful DNS manager and so much more that, you know, us nerds really appreciate.
But don't worry if you're brand new, you've never even spun up a server.
They've got stuff that'll work for you, too, like those one click deployments and a really nice interface.
And the best part, and even as pros use this sometime, the best customer support in the business.
Man, I can't tell you how nice it is when your production stuff is having an issue to have somebody you can call that's willing to help.
Linode is great and it could be part of your multi cloud strategy or it can be your cloud like it is for us.
And they've been supporting open source initiatives that we love from the very beginning.
Like Kubuntu or the all things open conference, which Linode is at this week, or my beloved Linux Fest Northwest, which I hope will return to in person soon.
Either way, Linode is dedicated to offering the best in virtualized cloud computing.
If it runs on Linux, it runs on Linode.
So go to linode.com slash unplugged, get that one hundred dollars and support the show. Linode dot com slash unplugged.
We do have some housekeeping, some things to take care of around here, and I want to say right up front, thank you, members.
We had a couple of people sign up last week, long timers, and it's awesome to see that.
If you've been thinking about supporting unplugged core dot com, go there, join us.
You get two feed options, a limited ad feed, nice and tight, same fold, Joe touch, just a shorter run time.
Or the big sucker, the live show, which as of right now is already an hour long.
So it's a lot more show and it's going to keep on going, too.
So you get that. There's tons of good content in there.
In fact, the businessmen in me says I should be monetizing that content or at least cutting it up and sharing it more often.
I may every now and then share a special one, but part of it is the loose atmosphere.
It's the version we just shouldn't be releasing.
Yeah. It's like the stuff you say because you're not releasing it. Right.
And then you release it.
Well, to our members, because we know that they get us right.
Like they get us. They're supporting us. So cool.
Yeah. So like a lot of trust in this member.
That's what it is. It's like we trust that they get us and that we can say stuff in front of them.
And so that's that's sort of one of the benefits of being a member.
UnpluggedCore.com to sign up for that. We'd love your feedback. We want to integrate more of it.
In fact, it's something that I'm trying to stay on top of more and more.
So please do Linux Unplugged.com slash contact for that.
Our Matrix community is continuing to grow.
This I'm really getting excited more and more about Matrix.
You know, there's a lot of platforms that are great. I'm on Discord. I'm on Telegram.
But I feel like long term Matrix is solving a lot of problems and opening a lot of doors.
Why not get in on that Linux Unplugged.com slash Matrix.
Go there. Join. There's a there's a lot of group.
There's all kinds of there's new spaces that kernels worked on that are beautiful.
So you can if you're just a Linux Unplugged listener, you can just focus in on that.
It's great. So that's over at Linux Unplugged.com slash Matrix.
And then I mentioned that love plug that happens on Sundays at noon Pacific in our Mumble room.
Details at Linux Unplugged.com slash Mumble so you can sign up.
And then the nice thing is you get to hang out with like minded Linux users and then you got a Mumble client that's already good to go.
So like perhaps you like Jose who joined us in Denver and has made it to the Mumble room today.
Jose, tell everybody where you're from.
I'm from Puerto Rico. I'm a self-taught web developer.
I have a freelance shop and I want a Raspberry Pi in Denver.
That's right. You did win the Raspberry Pi. And what time is it where you're at right now?
Right now, it's almost three thirty in the afternoon. It's basically Puerto Rico.
It's basically Eastern time, but we don't have daylight savings.
So that's the same time the whole year.
Jose's making in the middle of his workday. I'm just saying be like Jose.
You know, just take a long lunch and come join us on a Tuesday sometime.
You're not feeling great. Maybe something went wrong. Come hang out with your Linux friends.
Go get our Mumble set up. Linux Unplugged.com slash Mumble. Be like Jose.
Be a long time listener. And then eventually one of these days you can just pop you get an afternoon.
You can pop in. It's great. And you hang out and chat with us directly.
And you also, kind of a nice benefit, get the lowest latency, highest quality audio live stream.
Straight from the source. With all of our extra mistakes.
Hey, well, how about some feedback, huh?
Yeah.
Eric writes in and says Garuda saved his butt.
I'm a big fan of Arch on my personal laptop, so I've been testing out some of your recommendations like Endeavor OS and Garuda.
Well, I'm at my first in-person conference this week in over two years.
And I updated my laptop before leaving.
Didn't think much of it till I got to my hotel and tried to use my laptop.
Uh oh.
While updating my system really meant I ran Pac-Man, S.Y.U. and didn't check any outputs.
Oh, man.
When I got to my hotel, it wouldn't boot because there were no kernels to be found.
Oh, no.
Luckily, I had my handy dandy vent toy USB stick and started trying to set up my true environment.
When I realized Garuda had been taking ButterFS snapshots.
Heck yeah.
I proceeded to reboot my laptop, selected a previous snapshot, logged in, restored it, rebooted again, and I was up and running as if nothing had happened.
Man, isn't that what we've been talking about right here on the show?
Why? Why we needed to up our file system game a little bit just to make these things more reliable workstations.
And yeah, he's rolling the dice with an update right before he leaves.
It sounds like one of my moves, but it was pretty nice that he can roll back, huh?
Yeah, no kidding.
Now, there is one thing Eric did know that he was very grateful that there's just this tight integration between Pac-Man and TimeShip and grub and all of that set up for you in Garuda.
Yeah.
He did just have one complaint, though, and I thought maybe you could inform him here, Chris.
This is also the first distro that I'm sticking with that uses KDE as the desktop environment.
And boy, is it sluggish on my laptop with an Intel N5000.
Do you have any plasma performance tips I can try?
Hmm. Hmm. Hmm.
So the that's one of those silver edition Intel processors that has like a one gigahertz or one point one gigahertz frequency.
It's pretty rough. It bursts up to two point seven.
But depending on your cooling, like it won't necessarily hold that for very long.
It is low power, though. That is that is nice. That's rough.
You can go into the you may have seen this already, but you can go into the compositor settings and you can try different versions of OpenGL.
You can also there's a there's an option there to speed up the animations or slow down the animations.
And I would recommend you play with that.
And I'm trying to think, is anybody in the Mumble Room have any plasma performance tips and any tips or ideas for making plasma run just a little bit quicker?
You know, I have turned off you know, you mentioned animations and stuff.
I go through and turn all that stuff off.
Like Wimpy was saying last week, sometimes it's nice to just have it be a little bit snappier.
I think maybe my laptop's a bit more performant, but I still it just makes a big difference, I find, on Katie.
And so I'd give that a shot. Go through all the settings and turn them low or off is even better if you can and if you don't care about that stuff.
Yeah. And you would know you're struggling with low end hardware at the moment.
I know. I know. I'm making it though. It's going OK.
Counterintuitively, I would make sure that you are not falling back to CPU rendering compositing.
Yeah. If you're rendering on OpenGL, you'll actually get better performance than you would if you're on, say, X render or no compositing at all.
Because when you have no compositing or you're using X to do compositing, you will force the CPU to do all of the work instead of offloading it to the GPU.
And I'll take it one step further, Neil, depending on how good your GPU is. And in the end, 5000, this might not apply.
But if you have a more modern Intel GPU or any of the larger commercial GPUs, having some animation actually kind of papers over the loading time of the window in a way.
Because if you just turn off all animations, you will get the absolute fastest. The machine can draw that on the screen. Absolutely.
But that's not always a satisfying speed, to tell you the truth. And with the animation effect, like a little fade in or whatever it is, kind of papers over your perception of that a little bit.
Because the window is actually still rendering and drawing as it's fading in. And that just makes it a smoother process.
You don't always get a performance improvement.
And I actually find I become more sensitive of how my system's performing when I turn off all the animations because I can clearly see it struggling.
But it really depends on your combination of CPU and GPU. And it's just something you have to go through and kind of mess around with.
But if you have any tips, Linux Unplugged dot com slash contact, maybe we can compile them together.
Brian wrote in with a neat new tip about functionality in the kernel. He says you mentioned he's talking to me that you were trying out a battery charge threshold on your laptop using TLP.
And then I would forget to use TLP full charge almost all the time.
This bit me on the road trip and I'd go to use my laptop and it would have at best like a 65 percent charge. Right.
It's no good. But Brian points out that this functionality was recently exposed by the kernel.
So you don't actually need TLP to do this anymore. And then you can trigger the charge or charge threshold with system D.
And you can start as you could. He includes a unit file as an example.
You can start and stop a service that sets the thresholds or sets it to full charge. And he says I even automate it with a hotkey.
That's a pretty neat idea. And I didn't realize that battery charge threshold settings have been exposed by the kernel and that system D knew what to do with that.
That's awesome. Looks like it's nothing too crazy in the system to set up just using bash to echo some values under slash this.
But hey, that's the that's the power of Linux. Right. Oh, I see.
So he's using system D to orchestrate just like when to kick off a script or something like that.
Yeah. When it starts, it'll, you know, kind of set that. And then when it stops, it'll set things back.
Back in my day, we used cron. Yeah, that's one option to cron is bad.
You want to take Danny's? Well, Danny might find that last tip handy because he's shopping for a new laptop.
I'm a longtime Mac user who's dabbled with Linux since 2006. I need a new laptop and was wanting to run Linux Mint Cinnamon or Manjaro KDE.
But I also need to run some older Mac apps like Adobe CS5.
Should I make sure I buy Intel or is AMD OK if I use something like Quick EMU?
I'd love to buy MacBook Air M1 if I can afford it. But does Quick EMU work on it as well?
Thanks for any help, Danny. Hmm. At first when he said I wanted I want either Linux Mint Cinnamon or Manjaro KDE, I was like, what?
That is two opposite sides. But then I realized actually kind of what I like about Cinnamon is it's kind of like some of the best stuff about KDE and a GTK desktop.
So then I started it started to click. I still think it's kind of strange, though.
It's a pretty big dichotomy between Mint and Manjaro.
So he may want to revisit exactly what he wants out of a distribution and consider Fedora.
Hey, sometimes you like what you like.
You know, if you get a CPU that supports the right virtualization extensions, which is pretty much most all of them now for desktops and laptops, it should work either way.
AMD or Intel. I wonder, though, if you have considered if you want Adobe CS5, you didn't see what other older Mac apps.
So this may not apply. But Adobe CS5 is also available for Windows.
And Wine is probably going to be a lot better time than a whole VM, right? Because Wine means not only are you running it natively on your system,
but you're also going to have access to your local native file system.
And so that's a lot simpler to work with. And it's going to work a lot more than you'd expected on the Mac.
But you absolutely can go QuickMU on the M1 platform. It's not completely done yet.
But check out UTM. It's a virtual machine manager for Mac that sits on top of QuickMU.
And we have our QMU and we have a link in the show notes and they tout Linux support in there.
It looks basic, but covering most of what you'd want from something like this.
And it absolutely can run Mac OS. That's maybe one of the advantages.
But you have to be on the M1 system.
So perhaps it's a future scenario where you get Asahi Linux or some Asahi Linux enabled distribution on there and then you could install UTM and have a go.
Or use UTM and Mac OS and run Linux in that and run Windows in that.
I would strongly also look at the System76 Lemur Pro. I'd also consider the Framework laptop.
Oh yeah, Framework would be good. Their marketplace just opened. It seems like that's rolling out nicely.
Yeah. XPS 13 perennial option, check those out.
What was that laptop that you tried out, that gaming laptop that I think what Dylan has now?
Yeah, yeah, yeah. The Asus.
Yeah, the Asus, the G14. It's like one rev behind.
But it's got a decent RTX 2060 or 3060 in there and it has a 120Hz screen.
And as long as you're using something that's got like kernel 512 or 513, everything works out of the box.
Dylan's been really happy with it.
So, Manjaro KDE might work?
Yeah, yeah, that totally would. I don't think, I definitely want to double check Mint because I don't think
2004 based distros work out of the box on the G14.
But anything a little newer, like a newer version of POP or newer or 2110 Ubuntu, that would totally work.
That's totally doable.
We got several recommendations for different YouTube archival tools.
That was pretty nice.
Fefe sent in his. It's called YTCC and it's a command line tool to keep track of your favorite playlists on YouTube
and then archive them to custom folders based on your settings.
We'll have a link to that in the show notes.
He says it's command line only, but you set up the playlist you want to track and then you run it as a cron job
or maybe a unit in system D and it will go fetch new videos just periodically for you and store them locally.
Yeah, it can be YouTube channels, SoundCloud, RSS feeds.
And I love that this is kind of just a standalone tool.
You know, maybe you want a whole system.
But if you want to roll something yourself, you've kind of gotten to automation.
You want to do some of that yourself.
YTCC might just be a nice piece of that.
Hmm, very much.
And I was thinking about this is I wish we had a way in Matrix to have like maybe there is, but not a Wiki per se.
But wouldn't it be amazing if we had a simple way to submit things like this that the audience sends us
and keep a list in Matrix somewhere and maybe the other pics that we do just like a pics room we make somewhere.
Yeah, it needs the key would be some buddy would have to be able to maintain it because these lists always,
always end up maintained ever every single list that any podcast ever starts.
It's not just us.
Eventually it gets unmaintained.
And I'd love to find a solution to that.
Probably something with the blockchain.
Brent, do you want to take our last email from Marcel?
Marcel has created a neat tool as well.
He writes, I wanted to share this system status message of the day generator I made with a friend.
And of course, it's written in rust.
I don't know if you click through the link that he sent us Brent, but it's beautiful.
You log into your box and his message of the day generator gives you a beautifully formatted weather report.
It shows you what your uptime is, if your SSL start is active, your file system usage, the last couple of logins.
And if you have failed a ban, it'll give you like a super brief summary of failed a ban.
And the last time that was checked.
And it man, it's like one of these things that I just love because it's a simple rust app with zero runtime dependencies.
And it just looks great.
So we obviously have to put this on the new server West.
Oh, yeah, I think so.
I mean, it looks so shiny, a nice reminder every time you log in and rust.
I kind of love in the read me here, the author says, I got stuck in dependency hell one too many times trying to update interpreted alternatives.
E.g. something like Python, probably.
And that's how it ended up in rust.
That's great.
You know, I kind of got back into having something in my message of the day, which shows up when you first log into the console or when you first open up a terminal.
And I was using Geruda Linux and they auto start neo fetch and give you the neo fetch output, which is great, but takes a beat every now and then to do its analysis and run.
And of course, you know, I'm a speed hound.
So what I like about what Marcel's built here is it's so simple and it's so fast.
It really by the time your terminal is done, it's loaded and it gives you that output.
It's it's really choice and it's in the A.U.R.
I want to take just a bit here and mention that our friends over at Cloud Guru have a certified entry level Python programmer certification course.
Python power so much of what we often talk about on this show and getting a solid entry level Python understanding is invaluable.
And why not get certified in the process if you want a cloud guru has the certified entry level Python programmer certification,
a great way to learn about Python data types, control flow structures, data collections, functions and generators and a lot more.
By the time you complete the course, you should feel more than comfortable taking and passing the certified entry level Python programmer certification exam.
And more importantly, you'll have a good understanding of the fundamentals of Python programming.
We'll have a link in the sponsored section of the show notes or you can go to cloud guru dot com and search for a certified entry level Python programmer certification, a cloud guru dot com.
Well, Chris, I thought you might need just one more rust pick today. Somehow these have been sneaking in all episode.
Not that I'm complaining, but this one also involves wire guard.
Enter one ton across platform user space wire guard port forwarder that requires no system network configurations.
What? How can this be a thing, Wes? How can you set up a wire guard VPN with no network configuration?
Is it just like a user space go app that has to get it? It's still creating a network connection. I don't understand.
Yeah. So the use case here is let's say you have an existing wire guard end point, something like a router running wire guard.
And you have a peer on the wire guard network that's running a TCP server.
If you want to be able to access that TCP service from a second computer, that's not part of your wire guard setup.
And for some reason, you can't install wire guard on.
Maybe you don't have root access. Maybe it's some server that you really don't want to install things on or, you know, it's just not blessed in some way.
Yeah, sure. That's where one ton enters the picture.
And it's using a bunch of neat libraries in rust that basically implements its own user space TCP stack to make this magic happen.
Oh, wow. That must have been a hell of a project. That's impressive.
This reminds me a lot of that tool we talked about years ago, sShuttle, that made sort of a quasi VPN connection through SSH without needing any super fancy setup.
But this sounds so much more elegant.
Yeah, I haven't had a chance to give it a shot yet, but I definitely will.
So small TCP is the TCP stack they're using. And then it's it's also using boring ton, which is that cloud flare rust implementation of wire guard.
So much rust. It's ridiculous. I can't even anymore. I feel like this is the productification. I'm trying to think of the right term.
This is what we expected to start happening around wire guard once it got mainlined and we started to see wire guard filter out into the general population.
Something else that comes to mind that the audience is super excited about right now is tail scale.
And that's another product that truly is like a product with a service and a good user experience that sits on top of wire guard.
Now we have this one ton which lets you participate in a wire guard network without even having administrative access to your box.
I could see how that'd be super useful in a corporate environment.
This is really neat. And there's other products out there built on wire guard.
And it's sort of like it's like the it's like the sort of valve certified stamp for the deck.
This is like the you can trust the crypto stamp for a VPN product, assuming they're not using a bastard implementation of wire guard.
It means I can kind of trust the fundamentals of the software is running on top of.
And I like the idea of of that specifically, because then I don't have to worry about if tail scales done some weird crypto that they can crack or they can read or or is going to get broken by some script kitty.
Because I know that they're using something that's tried and true and test. And if it gets updated, that update goes out everywhere.
And that makes these products, I think, to to me, just a little more trustworthy. I love to see this.
It's also kind of the you know, one of the reasons we love open source is like we can we can have this shared base that we all get to use.
And that just levels the playing field and raises things up so that, yeah, a whole bunch of other parties can build neat stuff on top without having to reinvent the wheel each time.
Yeah, I mean, and for me, you know, on Linux, like that's great. I prefer to go the route where it's built into the kernel.
I prefer to go to the route where I could use it with my other tools and all that kind of stuff.
I totally appreciate the use case for that. But I'd say with all of these, just double check that, you know,
they're not using some crazy esoteric wire guard or some crazy esoteric port or something like that.
You know, make sure it's it's good industry standard stuff. And that's a big part of the due diligence now, I think.
So there you have it. And we'd love your picks. Let us know Linux unplugged dot com slash contact or join our telegram group, which is going all the time.
That's a Jupiter broadcasting dot com slash telegram.
You'll see several of the hosts in there throughout the week and drop links and interact with folks.
But if you absolutely want to get in the show, that contact page, that's really the way to do it.
And if you do the Twitter thing, you can also follow the show at Linux unplugged.
The network is at Jupiter signal where you can get notifications about the entire network.
Yes, there are other podcasts on the network and they release throughout the week.
This is a self hosted week, too, I think. So at the end of the week, towards the end of the week,
there's going to be a quarter radio first and then there'll be a new self hosted.
And if you if you follow us on Twitter, you find out so much to look forward to.
Yeah, there's also one of those fancy combined show feeds, right?
Where do people get that? That's a good idea. Go get the all shows feed.
In fact, if you go to Jupiter broadcasting dot com, there's a shows menu there with all the feeds for all the shows listed, including the all shows feed.
So that's really the pro tip. All the Carter all in one. It's up to you. That's right. That's right.
And you're always welcome to join us live. We do the show on Tuesdays at noon, Pacific three p.m.
Eastern at J.B. Live TV. We'd love to have you. See you next week.
Same bad time. Same bad station. Indeed. Go get yourself some Linux action news.
Go find out what's going on every single week in the world of Linux and open source.
Linux action news dot com links to what we talked about today at Linux unplugged dot com slash four to eight.
That's where you get all the infos. You want that Raspberry Pi image of Pop OS?
You get it over there that on the Linux transition tool that's linked to Linux unplugged dot com slash four to eight.
While you're there, hit that contact page, get the subscribe button, all that stuff.
Thanks so much for joining us on this week's episode of the unplugged program.
And we'll see you right back here next Tuesday, Tuesday, Tuesday, Tuesday.
All right, J.B. Titles dot com, go pick our show title.
Brent, it's so nice to have you back. You've been traveling. You've had incidents that have happened.
I mean, it's been a bit. I am home for the first time in like four months.
Like you're your real actual home. Yeah, yeah, yeah, yeah. My cats are here and I'm here. It's weird.
It doesn't it doesn't really feel like home anymore. I got to say that's the strangest feeling.
But I got to say, it feels good to be back.
And I also want to say one of the crazy incidents that I ran into was I got into quite a scary car crash a few weeks after our Denver meetup.
And I was near Denver when that happened. And I just wanted to say huge thanks to the whole J.B. community.
I got so wonderfully overwhelmed with messages from people in different ways, just saying, hey, man, hope you're doing all right.
And so got tons of love, lots from the self-hosted Discord, some from the Telegram group and people just messaging me just to say, hey, hope you're OK.
And I really appreciate that. It's exactly what I needed at that time. So thank you. Thank you, everyone. Super, super appreciate it.
I'm totally fine, by the way, miraculously. So I'll be here more regularly.
That is really good. Yeah. When we saw the pictures, it was one of those is one of those accidents you look at and you're like, how did he walk away from that?
There's not much of a car left there. And for anyone who's been in a car crash, this is my first, which I would not recommend it by any means.
And it just is a scary thing. And it's one of those crashes for me where it just replayed in my head for about two weeks.
So it's a pretty bad one. I bet. Do you even know a few weeks later?
Yeah, I definitely do. I'm physically totally fine, but I got to say, like, super traumatic. And Chrissy and I were talking about how exactly the accident I had was one of your worst nightmares, which is, you know, traveling down the interstate and something just another car just appears in front of you.
There's not a single thing you can do except crash directly into them going at highway speeds.
And, you know, I was driving a Subaru at the time, and I'm pretty sure that thing kept me alive. And so thank you to the technology and those things.
Thank you to the engineers at Subaru. They kept Brent alive.
