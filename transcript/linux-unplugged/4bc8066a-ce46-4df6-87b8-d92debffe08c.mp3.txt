Hey Chris, did you see the Gnome Foundation received a whole bunch of money lately?
Yeah, they got $400,000 in total, like $300,000 is going to the foundation and another $100,000 is going to GIMP.
That's awesome. It's all coming from this mysterious handshake.org.
I gotta be honest, Wes, I did not know about handshake.org, I don't think, before I saw this.
Kind of a sleeper project, but it's interesting.
Yeah, it is. It's kind of promising what has always been hoped for, which is decentralized, permissionless naming.
Like DNS and certificate trusts, and it works with DNS in a way.
Put that another way, an experimental peer-to-peer root DNS server.
This is very fascinating and a great idea.
I'd love to know more about them, so we might reach out in the future and have a chat with them, but yeah, this is great.
Even if we haven't heard about them, that they have this kind of money to slosh around,
not only seems to benefit us a lot, but does make me think like, okay, what's going on over there?
Hmm, perhaps this will relate to something else we're going to talk about today.
Strokes the beard randomly.
This is Linux Unplugged, episode 261 for August 7th, 2018.
Welcome to Linux Unplugged, your weekly Linux talk show that's fully staffed and ready to podcast.
My name is Chris.
My name is Wes.
And my name is Brent.
Hello, guys, we have a great show coming up today.
261 is packed full of great community good news, really, including new features that are coming to Linux,
great news for friends of the show, new features that are surprising even Microsoft,
and hope for those of us that want to play Windows games on Linux,
as well as a couple of great apps, an update on our community PeerTube instance,
and a breakdown of what's got our attention in the new Android Pie release.
That's a ton of stuff this week.
Absolutely packed.
And not only do you have your humble hosts, myself, Wes, and Brent,
but you have that virtual log, time appropriate greetings, Mumble Room.
Hello, what's up?
Greetings, hello.
I don't know if it comes across, but that's a full room this week.
I'm excited too, I think they're raring to go.
I'm raring to go, Wes.
Tell you what, I've been out there in the heat, charging myself like Superman,
preparing myself to podcast this week,
because the news has even reached the halls of Microsoft.
It's undeniable the power of developers on Linux.
July ended with 3.97 million starts of PowerShell Core,
82% of which were all on Linux.
They were expecting those numbers to be reversed,
and they thought it would be on Windows 10.
This is from a little birdie tells me that would be in a position to know
that they were expecting the numbers to be the exact opposite.
They thought that Linux would be around 20%,
and Windows 10 would be around 80-ish percent.
I mean, that's how it normally goes.
And they got the numbers back from the, you know,
insight metrics that they collect,
and 82% of the PowerShell start instances happened on Linux boxes.
That's a, I mean, that's Microsoft's own shell, okay?
I mean, that's why that really gets me.
It's not like it's Bash, okay?
It's PowerShell.
I'm really curious to know what all those people are using it for.
I mean, not that they are not legitimate uses.
I'm just genuinely interested.
See, I've always had a theory, the whole PowerShell Core coming to Linux thing
was really a gift to system administrators who wanted to use Linux
and still manage a bunch of Windows boxes.
And I wonder if that's a bit of what's going on here.
Oh, sure. Yeah, it's your little open source tie-in into that system.
There's also certain things about PowerShell that are very appealing
when you compare it to certain other shell environments,
which I am not an expert to get into,
but we did cover that in a past episode, if people want to know.
I just thought that was a fascinating stat to start with right there.
I also love hearing that 82% of anything is on Linux.
I think that's a really good thing for us.
That's very true. That is very true.
I want to give a special shout out to not one,
but two fine gentlemen from the Elementary OS Project.
Hello to Dan and Cassidy. Good to have you guys here.
How's it going, Bill?
Guys, I feel like we should start on a journey.
I want to go on a journey with you guys to talk about where we're at.
But the reason why they're both here, one of the reasons, at least I assume,
is last week Cassidy announced that after quite a while at System76,
he is going full time at Elementary OS.
And that's massive.
For anybody who's ever had a side passion project
that they were super committed to,
there's always been that agony to go full time.
I'm pretty familiar with that.
So Cassidy, I'm just super happy for you, man,
because I can imagine how good that must feel.
So congratulations.
Thank you. Yeah, I'm really stoked.
So we are going to get to that,
as well as some other potentially interesting community news.
But the crew voted,
and we decided to start with just a bit of a TechSnap security notice in a way.
Really here, it's this vulnerability notice
for a flaw in the Linux kernel TCP implementation,
which makes it vulnerable to an easy denial of service attack.
Linux kernel versions 4.9 and above can be forced to make a very expensive call
to the TCP collapse queue and the TCP prune queue calls
for every single incoming packet,
which would lead to a denial of service.
They say can, but of course that would.
An attacker can induce a denial of service condition
by sending specially modified packets within ongoing TCP sessions.
Maintaining the denial of service condition requires continuous 2A TCP sessions
on a reachable port.
Thus, the attacks cannot be performed using spoofed IPs.
But the impact is a remote attacker may be able to trigger
a denial of service condition against a system with an open port
and it's on anything above kernel 4.9.
Yeah, that's rough, especially if you're running a server out there on the internet.
It looks like with less than two kilopackets per second of an attack traffic,
you can then just totally, totally load a box, delay all the network traffic.
That's not really good if you are trying to surf webpages.
This is how podcast wars will be fought in the future
once they become big business franchises.
That's so funny to even think.
The podcast wars, when it's just five podcast companies left,
they began exploiting old Linux boxes on the internet
with denial of service attacks.
I mean, when you're too busy making podcasts to patch your box,
that's your problem.
Who can patch?
Who can patch?
Anyways, the crew wanted to get you.
The crew being those of us that chatted about it earlier today,
which was a few of us thought, you know what?
If we're going to talk about this on the show,
we should probably get it out there in sort of like the more you know kind of thing.
And there's no real workaround except an updated kernel.
So go look for those.
Yeah.
OK, now here's the news I've been avoiding,
even though it's the beginning of the show,
I've been delaying to get to this point
because I feel like it's going to be perceived as an attack
and it is not an attack, it is an analysis.
And we start with a piece that was written
about common causes of Fedora workstation crashes
and the fact that they have been traced back to Gnome, Shell,
JavaCrypt extension, JavaScript extensions crashing.
So here's the scenario.
And this is a write up that we'll have linked in the show notes
at linuxunplug.com slash 261 if you would like to read it yourself
or if you've been experiencing some instability issues.
Now this is predominantly the worst on Fedora 28
because it's using Wayland.
And here's the scenario.
A Gnome shell extension crashes.
That takes out the shell.
When the shell goes out, it takes out Mutter,
which is the thing that's talking Wayland,
that is the display server, and you lose your entire desktop
because a shell extension crashed.
That's very upsetting.
And so the developers have started
talking about ways to potentially resolve this issue.
There's been a few different discussions really.
So this isn't any one particular developer's idea.
It's been kicked around a lot, even at this year's Gwadek.
The idea could be to perhaps just sort of enhance
the existing behavior in Gnome Shell
where when it crashes and it comes back,
the shell, when it comes back, all extensions are disabled.
And it is up to the user to sort of go through and play
Russian roulette and re-enable their extensions
until they get to the thing that crashes.
Of course, we all know in the real world,
you don't crash immediately often.
It's a day or two later.
So it's really hard to actually figure out which one it is,
even if you're checking the logs.
But that's sort of the most easy course to take
is you just sort of change the way
the shell crash behavior works.
Another possibility that has been considered
is decoupling Gnome Shell and Mutter.
But obviously, that would require major architecture
changes, something we've talked about on this show before,
and also likely changes in the way extensions behave
and the creation of some sort of IPC communication
system in the background.
Then there's a third proposal, perhaps in some ways
the easiest proposal, but the most controversial proposal.
And that's discontinuing unlimited extensions,
introducing a limited API they can use.
Instead of hot patching, because this is how it works right now,
like the old Mac OS Classic extensions that literally hot
patched Mac Classic, right now extensions on Gnome Shell
are hot patching the Gnome Shell code itself.
Obviously, this is risky.
And if you introduced an API that the extensions could use,
and you could even limit that API,
it would mean that basically all of the existing extensions
would have to be completely re-implemented,
and likely some of their feature sets
that they take advantage of now, because they can just
insert themselves into the code of the shell,
they would lose that access, and that functionality
would be gone.
So this is a difficult point that Gnome is approaching.
And they're not necessarily taking any action right now.
These are just things that they're concerned about.
And there's also a conversation at the same time.
And again, just discussions.
And this is how this is supposed to work.
And we should give them the space and the room
to make these discussions.
But also ongoing right now are discussions
around removing the theme capability from Gnome.
I'm going to let that sit in for a second.
One theme, their theme.
No more custom distro themes.
And that's a big one.
Think about how Canonical sort of makes their Gnome shell
theirs.
Fedora puts their touch on it as well.
Everybody does.
And that's sort of a kind of distinguishing feature
of Gnome 3 in a way.
And really that distinguishing choice
is one of the standout features of the Linux desktop,
to have to have that level of choice.
But I have seen what an absolute shit show that code really is.
You're hot patching CSS.
You're going in there, and you're yanking out
lines of code in CSS and putting in new ones.
And then you're reloading the shell
and seeing what the hell happens if the shell even loads again.
That's how you create a Gnome shell theme.
And the way anybody gets it done right now is they fork.
That's why everybody forks themes now.
Because so much of that super crazy ass hard initial work
has been done.
So people are just building on top of other themes now.
Because you got to kind of be a masochist
to go back and do that to yourself.
And I watched somebody do it at a canonical event.
Let me tell you, that was one of the things that,
I'm not joking, made me switch to Plasma.
When I saw how that was being done, I completely lost faith.
And that was one of the things that made me switch to Plasma.
When I saw that, I went, holy shit.
So I can understand why they would
want to get rid of that functionality entirely.
Not only that, but it creates consistency
for developers.
And it solves security potentially and stability
issues potentially.
And it solves a problem they call visual fragmentation,
which sounds just great.
Across the Gnome desktop ecosystem
exists visual fragmentation.
And it's very real.
And it's a problem for app developers.
Since very few distributions ship Gnome as is,
it's hard to determine what visual identity Gnome is.
And therefore, it's difficult to know what visual system
to build your applications for.
The biggest offenders continue to be downstream projects
that theme Gnome extensively by overriding the default icons
and style sheets and insist that part of their own brand
identity.
But so long as that practice carries on,
this fragmentation will continue.
Now, I thought to myself, holy crap.
That would be a massive change.
And I was really curious to know what won Mr. Daniel
Ford, I thought.
So I went to his Twitter feed.
And he says, you have to think about the fact
that Gtk, I should say, Gtk+, is used outside of Gnome.
And that right there, I think, brings
this whole thing into perspective
is it really underscores how in the bag Gtk is, Gtk+,
that toolkit is, for Gnome.
It really is the Gnome Shell desktop toolkit.
And what do you think about this entire proposal, Dan?
Do you think it's going to go anywhere?
Do you think it's just sort of skunkworks talk right now?
Or are you concerned this may actually
progress into something that could
be difficult for elementary OS to deal with?
Because I would have to imagine you guys really
rely on these mechanisms quite a bit
to create the elementary look.
So we actually went out to Guadec.
And we participated in the talk, the theming kind of discussion
API overall talk.
The takeaway is that there's a lot of different parties
that have competing interests.
There's Gnome as a platform.
There are other Gtk platforms like elementary.
There are Gnome downstreams like Ubuntu and Pop OS.
We have app developers.
And we have users.
And they all have different things they care about.
And the kind of overarching theme of the discussion
is, how can we make everyone happy?
And I don't think that there's anyone
on the either inside or outside of Gnome
that wants to introduce a sweeping change that's
going to make any of these parties really upset.
I think we're all trying to work together.
And the kind of overarching idea that came out of that talk
was, we need to make it easier for downstreams from Gnome
to write style sheets that are fully compatible with Adwaita
so they can keep doing their branding
without adding an extra burden for developers.
So is that your way of saying something's going to change,
but it probably won't be the end of the world for people
that want to have their own downstream identity?
I'm not necessarily sure something
will change as far as the internals of Gtk.
But I think that in terms of more and better documentation
or more and better tooling.
Oh, OK, I follow you.
That would be a really positive development.
Yeah, so I think that everybody wants
to make sure that everybody's freedoms are still
preserved, right?
It's a real pain for developers if we start locking down
things, because then it makes our development environment
hostile, right?
That's not fun.
So nobody really wants to do that.
We want to make sure that third-party developers have
a stable and consistent platform to target.
So if they choose to write an app for GNOME,
that it works how GNOME apps should work.
And if they choose to write an app for elementary,
that it works how elementary apps should work.
We just want to make sure that our developers have
something sane to target.
And it seems that the way to do that
is to make it easy for people to write
style sheets that are compatible with Adwaita or style
sheets that are more compatible with elementary OS.
All right, OK.
So you've convinced me I won't be making a prediction
at the end of the year that elementary OS announces
the switch to Qt in 2020.
So OK, all right, I'm convinced for now.
So do you have any other comments or thoughts
on this story?
I know one of their concerns was visual fragmentation.
Do you have any thoughts about that
as an issue for the GNOME desktop?
You have your Ubuntu look now.
You got your Fedora look now.
SUSE looks a certain way.
Antigros looks there a certain way.
They all are shipping a GNOME shell,
but they all do look a little different.
Even the way they function is a bit different
due to different extension implementations
or lack thereof in some cases.
Do you have any thoughts on that particular concern
just as GNOME shell as a brand, as an identity itself?
Yeah, I think that people who try
to make the conversation about branding
like don't understand the problem.
It's not about branding at all.
And people try to get down on designers
and talk about control.
And it's not really about control either.
The thing is, when we started that discussion,
everybody in the room had an example
of an application on their computer
that was broken because it was developed against a style
sheet that they weren't running.
And so that's what the problem is that's trying to be solved.
It's not necessarily about branding.
Like, yeah, Ubuntu wants to have their brand, but it's also
about trying to make a good experience.
Yeah, it isn't about trying to take away people's ability
or enforce a brand or anything like that.
It's about making sure that applications aren't broken
is what we all care about.
A fundamental level of consistency
so that you actually have a platform.
Yeah, we just want you to load an application
and not have a spinner that's crazy huge
or text that's invisible.
Or style sheets are super powerful,
and they can make your app look really crappy.
And then developers get complaints from users.
And then they're like, hey, what the hell?
You changed the style sheet that I built my app against,
and now it doesn't work.
And we're trying to make people happy,
and it's a super hard problem.
Yeah, Pobi, I don't know about you,
but I feel like I've seen this movie before.
It kind of goes something like this.
Hey, here's an idea, and then the internet freaks out.
You're going to take away my toy.
And then it kind of ends up being not quite as big of a deal
as everybody expected it.
Do you think that's what's happening here,
or do you think this could be a major shift?
Considering the talk about extensions, too.
So this is one of the pitfalls of us
doing open source development.
You can imagine that there are massive bun fights
inside Apple and inside Google and inside Microsoft
when they're talking about their OSs.
And all the relevant parties and all the people
who have vested interest in whatever that feature is
will all be discussing this.
And then it comes to a conclusion,
and a decision is made, and the solution is published.
Whereas with open source, you have
people who have different vested interests
from different parties, like Dan and Cassidy
from Elementary and people from Endless
and people from Canonical and people from Red Hat,
all getting together and discussing this stuff in the open.
And when there's a whole load of peanut gallery outside
who are getting snippets of conversations from one party,
from one side of the conversation,
and then rebroadcasting that, it doesn't help,
because everyone has a slightly different perspective.
Dan has a different perspective than I would, I'm sure.
So yeah, it's totally exactly.
What's the name of that gal who went and observed
the monkeys forever?
What was that gal?
She fell in love with a monkey.
She loved a monkey.
What was that?
Come on.
Come on.
That's Jane Goodall.
Yeah.
Yeah.
Thank you, Brent.
Yeah.
Yeah, I feel like that's got to be our approach with this stuff.
We can get the binoculars out.
We can get ourselves a fancy jungle suit
and all that kind of stuff.
But we only can really observe.
We can only observe here.
The process is the process.
They will go through whatever process that is.
And we just happen to get to watch it.
And it's a neat opportunity for us, especially for podcasters.
But it is a really hard line to walk,
because taking away themes and taking away extensions
causes an emotional reaction.
And then you want to respond to that.
So I think it's a, my point is it's just,
I think sometimes these things start somewhere
that can be scary to the end user in a degree.
And I don't mean to say that to belittle people,
but it is kind of like a, it's a jarring thing.
Maybe that's a better word.
It's jarring to the end user.
I don't know.
I think part of your observation,
like the fact that we can observe what's going on, yes,
we can.
But it's open source.
You could also get involved.
There's nothing stopping someone doing a Google Summer of Code
project to isolate and separate out extensions
or build something that does some validation of extensions
or captures the trace of an extension
at the point when it falls over or something.
There's plenty of opportunities to improve what we have.
It doesn't have to be, well, we're
going to have to throw this away.
There's an opportunity, because it's open source,
for people to get involved.
But it's difficult when there's lots of parties.
Yeah, OK.
So just, we don't have to spend a lot more time on this.
But while I have your ear, one more question to you
is, wouldn't we be better off if it was all just one look
and one standard and it was sort of the way Windows and Mac
are?
I'm not saying I want it that way.
But I am saying, if your goal is to attract more developers
and more end users, wouldn't that be better?
I don't know, would it?
I mean, which project gets to decide
what that one look would be?
Well, the Gnome project.
Right.
And maybe other people have, so long
as there's a feedback loop there that
allows people who are consumers of the work
that the Gnome project do to feedback.
And there is at Guardec, and there are mailing lists,
and there's IRC, and all kinds of ways to feedback to Gnome
to say, hey, look, that's not working.
We need to do something else.
That's exactly what is happening now,
is this extension thing isn't working.
This theme thing isn't working.
People are providing feedback.
It doesn't have to be, yeah, they
could come up with one theme.
But consumers would decide whether that's a good theme
or not, really, and you'd find out.
And this is part of the process.
As much as we sometimes, you and I hate it,
but it is part of the process just to watch
and see where they go and talk about it a little bit,
I think it is worth exploring.
I think it's worth exploring the way they do extensions.
I think they're a reasonable way to extend a desktop when
you have a team that does have limited resources.
I mean, they did just get some money,
but it's only going to last them so long.
And development takes time and money.
It takes years.
So when you have those realities,
extensions bypass that, and you don't
have to wait on that core team to bring
in functionality to the desktop.
So I think they have merit.
And ironically, I'm sure just totally coincidentally,
really, there was a post on how the Plasma project does
their extensions.
Is that right?
Yeah, and it was, you'd be surprised to learn
it may be technically superior.
Yeah, surprise, surprise, spoiler alert.
And anyways, this conversation goes on.
And I say, let's all just wait and see.
Don't worry.
And these developers are also users of the desktop.
They're not going to break their own desktop.
So we'll see where this goes.
I actually am really happy to see them asking
some of these hard questions.
I cover it more on Coder Radio this week.
Not safe for work, in a not safe for work way,
just as a warning to you if you want to go listen to it.
And I think this is a technical debt
that Gnome has needed to pay off for a long time.
And now they're looking at that bill and going, OK, right.
So how are we actually going to pay for this?
What solution do we want to implement?
What pain are we willing to endure?
And that's the conversation's beginning.
And it's a necessary one.
So I'm all for it.
I think that's where this is leading.
It just starts at a place where it may startle you a little bit.
It may be a bit jarring.
Right, and as always, we see the parts
that bubble up into the surface of drama.
And work continues all the while.
Yeah, no kidding, right?
Yeah.
Speaking of work continuing, so Mr. Cassidy joins us.
He's here as now a full-time employee of Elementary OS.
Normally, I would say Cassidy James is here from System 76,
and he works over at Elementary OS.
But now I say, formerly of System 76,
now joining us on the show is Mr. Cassidy James
of Elementary OS.
Hey, how's it going?
Hey, congratulations.
So I grok that the project was the benefactor
of a recent contribution.
And you guys must have looked at the numbers
and said, hey, I think I can make that work full time.
Is that essentially what happened?
Yeah, I mean, it's multiple things
that came together kind of all at once.
We've had great success with OS purchases from the website,
app purchases from App Center, and other avenues
like Patreon and Bounty Source.
And then on top of that, we had a really generous person
from the community, from the elementary community,
who liked what we were doing and reached out and said,
hey, I'd like to help you guys out.
What can I do?
And we worked with them and just figured out
that bringing another person on full time
was the right thing at the right time, and that's me.
Wow, wow, wow, wow.
Congratulations.
Huge.
Thank you.
Super exciting.
And I think you guys, one of the reasons I love it
is, first of all, both you and Daniel
obviously super committed to the project here.
And you have a good product.
I have my son on it still, and it's just been a solid product.
It's a good product.
I think what you guys have needed is more execute power.
Let me tell you, somebody who is in that same exact position,
I think that's what you've needed.
And bringing you on gives the project more power
to execute on certain things.
So it sounds like some of those things,
because you call them out in your blog,
is spending time with app developers and other parties
to keep elementary OS financially sustainable.
So that sort of came across to me as a bit vague.
Essentially, what I read from that
is you're going to do a little developer advocacy,
try to maybe reach out to a few developers
and convince them to bring their application over to elementary.
Am I interpreting that right?
Yeah.
So there's really three areas of focus
I've had over the past few years and looking
to continue focusing on those areas.
It's the writing and communicating with people.
We do monthly App Center spotlights on our medium,
monthly progress reports of development.
We do developer tips, articles, things like that.
So writing, I love to write.
And Dan and I both tag team on the Medium site quite a bit.
So that's one way of outreaching to developers.
But then there's also the more direct interaction
with developers.
That's helping people bring their apps to App Center,
focusing on the developer experience of App Center
dashboard itself.
Those areas are really interesting,
and I haven't had as much time to focus on them.
And so it's great to be full time now
being able to focus on that.
And then the third thing, which is
I've always been doing with elementary,
is design guidance and input, obviously.
Work on the human interface guidelines, sketches.
Something I've started doing more recently
is organization-wide projects to improve the overall experience.
So it's kind of a scattershot, and it's kind of all over.
But that's kind of what's exciting about it,
is that I'm pretty deeply involved
in different parts of elementary.
And now being able to focus full time on that, I think,
means a lot more meaningful results from that.
Yeah, and you may find you start digging in on something,
and you get a lot of traction there.
And that's something you'll have flexibility
to dedicate time to now.
Whereas before, it would have been like, well,
how the hell am I ever going to be able to pull that off?
Exactly.
There's one in there that we haven't really talked about.
And I bet you're not going to tell me much,
but I just got to ask, dedicate time
to working with OEMs with an S.
What was that about?
So this is something I've been doing on the side.
There's several OEMs out there who ship elementary OS
as an option.
I think, what is it?
Tuxedo computers.
There's one called Obsidian.
There's Slimbook that you can order elementary OS on.
And I've been talking with them, obviously,
because we're really interested in getting their feedback
as an OEM.
That's a really unique perspective
where you're directly interacting with customers,
paying customers of hardware who are paying $1,000 or however
much for a computer.
So I haven't had the time personally
to dedicate to that in the past, but being
able to actually interact with them and talk to them about it
would be a great thing, I think, for everybody,
for people who want to purchase a computer with elementary
preloaded.
Right.
I hope to see that expand.
That'd be really cool.
All right.
So let's get Dan in here for a second.
So Dan, I mean, obviously, you and Cassidy are friends,
but there must have been other people you could hire.
So what made you think Cassidy was the right one
with some limited resources?
You got time.
You got some flexibility now.
All of a sudden, this guy comes in.
He says, hey, if I can help out somehow.
Was it specifically, but you have to hire Cassidy?
Or was it your thought, no, you know what?
This is the way to go.
This is the right call.
So we've had a lot of internal discussions
about what kind of skill set should our next hire have.
And there's been a lot of talk about, well,
they need to be a developer.
Or, well, maybe we need somebody who is good at marketing.
Or, well, maybe we need another designer,
because our design team has so many things that we just
don't have time to get to.
And our developers are making it up,
and we're stacking technical debt, right?
Yeah, yeah.
And so there's all these conversations about,
who should our next hire be, and what should they be good at?
And kind of the beautiful thing about hiring Cass
is he'll never admit it, but he's great at everything.
Cass is an amazing UX designer.
Cass actually is a developer, and he has published a couple
apps in App Center.
You see all of his blog posts on our blog.
He helps me manage all of our social media accounts.
He's really good at putting people together.
He has all this great insider knowledge
of how a hardware company works.
He's kind of this amalgam of knowledge of everything.
It's a really, really great opportunity
to be able to hire him on, to be honest.
Yeah, I think so.
And the man grows a good beard, too, which never hurts.
That doesn't hurt.
Plus 10 hireability right there.
Yeah, yeah.
So Cassie, are you going to stay in the Colorado area,
or what are your plans long term?
Are you going to move out to the coast,
or are you going to stay put?
Well, I'm pretty rooted here in Denver, Colorado.
I love it here.
My family vacationed here growing up almost every year,
so I really love it here.
So I'm planning on staying here.
My wife has a job out here as well,
so we're pretty rooted here.
I know Dan has been lightweight looking at apartments
and things in the Denver area, so that
might be an interesting move at some point.
We'll have to see.
Yeah, that's not a bad idea, Dan.
Although right now, you're kind of on my route
for certain places I go, so we get
to hang out from time to time.
I'd be a little disappointed, but I could make a trip
to Denver, I suppose.
Then I get to hang out with both of you guys, so.
And then you'd be there with System76, too.
Yeah.
Exactly.
Now it's a party.
Now that would definitely be a party.
I'll bring the fish.
It'll be a good time.
All right, guys.
Well, congrats to both of you.
I think it's going to be really good for the project.
Looking forward to the new release, too.
I mean, think about it.
The future releases with both of you
there working on that kind of stuff.
And I hope you find a path to sustainability,
so that way this position remains.
It's something you can keep doing, Cassidy,
because I think that'd be really great, too.
Obviously, for not just you, but for the project as well.
So everybody go, when the new release comes out,
put a little dollar amount in there for Cassidy
and for Daniel for the whole project, because.
Keep this gravy train coming.
Yeah, well, at least keep food on their plates, I suppose.
Speaking of keeping foods on plates,
why don't we do a little food keeping here for the program?
do.co slash unplugged.
You can go there and get a $100 credit for the Digital Ocean
platform.
Infrastructure on demand in less than 55 seconds.
You can build and deploy a lot in 60 days with a $100 credit.
So go to do.co slash unplugged.
I'm trying to come up with a new way to describe Digital Ocean.
Do you have anything that comes to mind?
Because I can say it's like super crazy fast,
all SSD-based infrastructure that you can spin up on demand.
That is accurate, yeah.
But I feel like I need something new.
Some spice?
Yeah, something to change it up.
You know what I mean?
Like something that has a beat, something that's exciting,
something that's fresher than me.
Because I feel like we could use a little freshness.
I don't know.
I'll tell you what, I'll just mix a little something live.
Oh, you've got a little secret sauce for us?
Yeah, you just play backup, OK?
You do my backups.
Digital Ocean's cloud computing platform
was designed with simplicity in mind,
giving development teams the ability
to easily manage infrastructure.
That's why thousands of businesses around the world
are building, deploying, and scaling their applications
faster and more efficiently on Digital Ocean.
Using our simple control panel or API,
you and your team can seamlessly go
from deploying to scaling highly available web, mobile,
PaaS, DBaaS, or machine learning applications.
In just a matter of seconds, quickly
set up one to thousands of virtual machines,
easily secure servers and enable performance monitoring,
and effortlessly attach more storage.
Plus, you'll always know exactly what
you'll be paying every month with a predictable flat pricing
structure across all global data center regions.
By using Digital Ocean, you'll get the infrastructure
experience that development teams
will love with the features your business needs.
Sign up for Digital Ocean today and experience simplicity
at scale.
Man, you nailed that, Wes.
Good job, dude.
I know what I'm doing.
So also, just to give you a mention,
they have a new guide up they posted a couple days ago
by using a CDN to speed up static content delivery.
And when you look at the pricing of Digital Ocean
and you look at the ways you could utilize Digital Ocean
and the benefits of using a CDN, it's a no-brainer way
to use Digital Ocean, especially if you go to dio.co
slash unplugged to get that $100 credit.
Did you say $100?
$100 credit.
What?
I say $100 sometimes.
I know.
You know what else is fantastic is those great folks.
So great I had to move my microphone arm in there.
Did you catch that?
I wanted to give you a little studio ambiance.
It's Linux Academy.
Those people over at Linux Academy,
they are hardworking folk.
LinuxAcademy.com slash unplugged.
I just got a little sneak peek at something
that's coming down the pipe.
Oh, niggly piggly.
It's so cool.
I might reach out to them and try
to set up an interview here in the near future
to have them do a little overview of one
of these things they're working on.
I just so desperately want to say what it is,
but I don't think I'm allowed to because it's in development.
You know how they feel about that stuff.
But they're always working on stuff.
It's a platform to learn about Linux.
Anything that Linux runs on or that you can run Linux with
or on top of or inside of it, I mean, it's, yeah.
That's a giant list.
Turns out it's most of Microsoft's stuff these days.
Woo.
Cool.
Yeah, and they've got courseware on that as well as AWS
and OpenStack and, of course, the Linux Essentials
and the Google Cloud Platform and Docker
and trying to wrap your head around big data
or just basic DevOps concepts, really.
And now, really, some great courseware for reals, really.
I like saying really.
On security.
So go check it out, linuxacademy.com slash unplugged.
It's pretty, pretty, pretty great.
And they're always working on new stuff.
They're always building new content.
They're always adding new features.
You get a lot out of your subscription.
So linuxacademy.com slash unplugged.
You can sign up for a free seven-day trial,
even if life's busy.
They've got a course scheduler.
They'll work with your busy day and days and days and days.
I understand.
But they'll work with you on that.
That's like the hardest part, when you're like, OK,
I want to learn something.
Now I've got to go find the resources to learn.
No, it's just right there.
It pops up.
You log in.
You keep reading.
There's also something that just makes it real,
when you just see, this concept is going
to take me two hours to master.
And then I go, oh, OK, two hours.
I can do that.
Yeah, I can do that.
And then you can get study tools.
And you can get lesson audio.
And they've got videos and interactive diagrams
and all of that stuff.
So it's a great platform.
And it gets you ready for the big certs.
It's got instructor mentoring, human beings that help you
if you need help.
Yeah, it's great.
Human beings.
You're real humans.
I would never have thought.
I know.
Powered by Linux.
linuxacademy.com slash unplugged.
Speaking of powered by Linux, Ting.
Yeah, the Ting infrastructure runs on Linux.
linux.ting.com.
linux.ting.com.
That's where you go to save $25 off a device
if you want to buy one from Ting.
And I'll tell you more about that here in a second,
because they've got a good one.
Or if you bring one, they've got CDMA and GSM.
You get $25 in service credit.
Pay for what you use wireless as Ting's secret sauce.
It's a fair price for however much you talk, text, and data
you use.
And there's no contracts, no early termination fees,
no quote unquote agreements.
And you can manage the entire thing.
Turn stuff on and off, individual services even,
like text messages on or off, right from their control panel.
It's super, super easy.
You can set usage alerts.
They have fantastic customer service.
But I wanted to tell you about a great deal right now.
If you just want to get a nice, clean, performant Android
phone that's going to get updates for a little while,
friends, I'd like you to consider the Motorola G6 Play.
I've talked about the Moto series before.
They're the ones where I legitimately
don't mind the skin.
It's so minimal.
It's not getting in your way.
You don't feel like spending $800 on a smartphone.
Which I don't.
But you'd like to have something that's no contract,
that you're not paying for monthly.
I do.
Yeah, linux.ting.com.
Then you go to their store page.
You can get the Moto G6 Play for $174.
You own it.
And then you just pay for your usage.
That's it.
That's awesome.
Yeah, no contract.
It's multi-network too.
So if GSM is better in your area or CDMA,
you can utilize that.
It's really, really nice.
It's got a fingerprint scanner.
It's got a bunch of nice features built in,
like an SD card reader, 13 megapixel rear camera,
4,000 milliamp battery.
They say you can get 36 hours on a single charge
with that sucker.
And it's got a Snapdragon quad core processor in it.
It's a great phone.
And you can own the whole dang thing for $174.
That's not bad.
That is not bad.
And you can go up to 128 gigs with microSD.
Whoa.
I think it comes with 32 gigs built in,
but you can go up to 128.
If you can get off that got to have the latest and greatest
sort of ride, then this is a secret weapon
to save in some money.
It really is nice, 5.7 IPS screen.
It's a higher, it's a 1440 by 720,
which is not bad for a 5.7 when you're not trying
to kill battery life all day.
You know, if this podcasting thing doesn't work out,
you could be just a phone salesman.
I think you've got it.
I really like these phones.
When you find the right phone, it's like, I don't know.
Something about it, it's like, this
because everybody's always buying
like the iPhone or the Samsungs or the Pixels.
The easy choices.
Yeah, and it's like, oh, cool.
So you spend $1,000 on a phone.
But if you didn't need X, Y, whatever that one thing is,
you could get these motos, and they're just great phones.
$174, linux.ting.com.
All right, I've said my piece.
I just think that's a great phone and a great service.
I get excited, Wes.
I can't help it.
I love gadgets.
Not as much as I love Linux and free software.
So I don't mix those two together.
I have not bought an Android device since the Nexus 6P.
It's been a while.
It may change.
After a while, the OnePlus is starting
to look better and better.
It is.
But I got to save my pennies right now
because I think this week's news has sealed the deal for me
on buying a ThinkPad.
As you guys know, I've been on the fence for weeks.
We had Barton on last week.
And we were talking about the XPSs,
plus my XPS has been one of the best computers I've ever owned.
It's still my daily driver for so many things.
I prepped today's show on my XPS 13.
I took it down to Texas.
Just a solid system.
And one of the things I love about my XPS 13
is I get firmware updates through Nome Software.
And Plasma Project has announced that they're
bringing that same functionality to Discover.
So you'll be able to get beautiful firmware updates
on the Plasma desktop.
And I know it's silly.
But that's something that really matters to me.
It makes it feel like a complete consumer product in a way
that just hasn't really been there on Linux before.
I just love LVFS.
And I love that my XPS 13 got firmware updates that way.
You mean saying that I don't have to boot into DOS
to update my firmware anymore is somehow good for Linux?
I don't get it.
Or the modern version of that really
is you have to keep your Windows partition around.
That sucks.
And so it is such a censure for me
now that Lenovo has joined the LVFS project.
And the laptop I've been looking at, the T480,
is on the supported list of hardware.
And I got a couple of notes, emails,
with screenshots from listeners.
They're like, hey, I just got this on my ThinkPad
two days before this went public.
Oh, it just shows up.
Yeah, I guess the timing went that the images started
showing up in the stable repos while Richard was on vacation
so he couldn't get back to write the blog post on time.
But he writes, bringing Lenovo to LVFS has been a lot of work.
It needed changes to the low-level FW update
library, which is fwupd, and even LVFS admin portal itself
for various vendor-defined reasons.
I love that term.
In other words, they had particulars
they wanted taken care of.
He says, we've been working in semi-secret for a long time,
and I'm sure it's been frustrating to all involved
not being able to speak openly about the grand plan.
But I do think Lenovo should be applauded for their work done
so far due to the enormity of the task
rather than chastise about being to the party
a little late.
Then he writes, if anyone from HP is reading this,
you're now officially late.
This is, to me, this is the censure for that T480.
But there's only one person here who
I believe has authority to speak on this topic,
and that would be Popey, because he owns 35.
Hello, Popey.
Did you have any hint this was coming?
And when you saw the news, how excited were you?
I was very excited.
It's always good to see more hardware appearing in the LVFS.
Do you think this is indicative of other things that
may be in the works at Lenovo?
I don't know.
I know it's something that Richard has
been working on for a long time.
We had him in the office recently
when we had a GNOME software design sprint.
He came in for a day, and we chatted over some stuff,
and he was telling us a little bit about the amount of work
that goes on to get companies on board with LVFS.
And it's certainly a labor of love for him.
So it's really good to see he's succeeded with Lenovo.
Boy, do we appreciate it.
Amazing.
It just makes a difference for so many users in such a big way.
It's such an appreciated.
Not having to boot into Windows or create some shonky boot disk
and get your firmware that way.
Just pressing a button, reboot.
And it's cross-distro, which is also
so great for somebody like me who
seems to not be able to last more than a year on a distro
anymore, which is actually a lot better than it used to be.
Just accept it now.
There's nothing wrong with it.
I am really elated by this news.
What do you think of my choice poppy on the T480?
You think that's a solid choice for a travel laptop?
It's an excellent choice, of course.
Hey, that's all I need.
Validation.
Yeah.
OK.
I feel good.
With the poppy-approved little stamp out.
That's like when I discovered that Jeremy Clarkson bought
a VW Golf.
I'm like, oh, that kind of validates my new interest.
That's how I feel poppy is with the ThinkPads.
He's like my Jeremy Clarkson for ThinkPads.
He has earned it.
Oh, my god.
Please, no.
I thought you'd like that.
All right, well, moving on, just a few other things.
Eric, the IT guy, is in the Mumble Room today.
And you may recall that name because not only does he
chime in from time to time, but he chatted with me
a few weeks back about Jupiter Broadcasting's efforts
around setting up PeerTube.
And he is back with many encoding jobs
later to give us kind of an update on where things are at
and some other things that are in the works.
So Eric, thanks once again for all your work on the PeerTube
stuff.
And where do you think we should start with the update?
Yeah, I try and chime in whenever my son's not
playing with my mixer.
Yeah, that is always fun when he reaches for the EQ.
So just you know what I do is I just swat at them.
I find that where he just swatted them.
They seem to learn.
Wes is looking at me like, I think you're joking.
But he's like, no one, Chris.
I'm not sure.
Well, it helps that Dylan's a natural broadcaster.
So you don't need to worry about him.
He's quick.
He dodges.
That's what, that's what.
Yeah, yeah, all right.
So what do you think, Eric?
Where do we start with the PeerTube?
Is there any significant new developments?
I know there's been some back end changes.
We've had a whole bunch of encoding jobs going.
Kind of the 30,000 foot view, we've
rebuilt PeerTube about three times
on three different setups and operating systems.
And we've settled on Ubuntu.
And we've got a nice big VM, thanks to some
of the guys in the community.
They've donated a huge VM with, I think, 16 cores.
If you're on the Macedon server, you've
seen that about every couple of hours,
a new video is being posted as I'm
going through 10 plus years of Jupyter broadcasting
backlog, where in the next few days,
transcoding jobs should finish for BSD now.
I don't know if anybody watches that, but it's there.
Nice.
I kid.
I kid.
I love you guys.
That was solid, dude.
Well done.
Nicely delivered.
So we're, I think, I think, ask Noah's up there.
BSD now is almost done.
Several of the other shows are done,
and then the rest are on their way.
So once the active shows have all
had their backlogs ported over, then I
want to try and start on some of the shows that
aren't active anymore.
So we've got the entire catalog there at some point.
Yeah, and this started as, hey, YouTube
is pulling down our stuff sometimes,
or man, wouldn't it be great to just help lend
some attention towards a project that is helping replace YouTube?
Because we've talked about the issues of that,
especially for free software coverage.
And so that's really, I think, where Eric and I started
with this.
But then we started going, wouldn't it
be really great if you could go to one place
and have the entire archive available, at least as far
as we have it in video?
And so that, I mean, I can't imagine the amount of CPU heat
that work must be creating, Eric.
So how long does that take?
Is that a manual process?
Are you SCPing MP4 files around, or how are you
doing that part?
So what's fun is it's a two-step process right now.
So for the backlog, PeerTube is using YouTube DL.
And it's got a scripted job that I run and just point to.
There's the Jupyter feed web page
that I just point the YouTube DL script towards.
And so it'll pull in the backlog.
But then manually, once I catch the tweet
that a new show has been published,
I go up, pull down the current.
So when this episode gets published,
I'll go down and pull that down with WGIT
and then SCP it up to the server and manually,
or actually manually, add it in through the web UI.
And there's been some people notice that when I do that,
there's a disclaimer that the video hasn't
been transcoded yet, so quality is not so great.
We've actually, as a community, been submitting pull requests
for new features.
And one of the new features that we have requested
is the ability to basically set importance.
So I want the server to be busy all the time.
So if you don't have anything that's
been published in the last week, chew on the backlog.
But as soon as one of the new shows gets published,
I want you to drop everything else you're working on
and go and transcode this.
That's a great idea.
I need to double check on it.
But they just sent out an email, PeerTube did,
earlier this afternoon, stating that version 1.0 beta 3 was
just released.
So we should be expecting a full version here
within the next couple of weeks with a lot of really nice
features and bug fixes.
And they're changing up some of the things on the back end.
I mean, this project has exploded.
I don't think they had a clue just how popular this
was going to be.
Well, yeah.
I was just looking at their active instance site, which
I'll have linked in the show notes.
You can see the other PeerTube instances out there.
And there's a whole bunch of them taken off.
A lot of 1.0 versions.
So it's good to see that they're still chugging away.
Because I know that they've been super busy with their fundraiser
stuff.
Well, so what's the site people go
to to kind of see some of the hard work you've been doing?
What's the URL?
So the official URL is getjupiter.com.
And that's a restricted instance.
That is official Jupyter broadcasting content only.
But if you jump over to peertube.linuxrocks.online,
it's tied into the Linux Rocks Macedon instance.
And that is where community members
can submit videos, things they've seen,
things they've produced.
I know there's a couple of us, like myself, who haven't done,
who are getting our feet wet with podcasts that have uploaded
a few videos just so we've got somewhere to publish it and say,
hey, go check out this video and tell me what you think.
And did we end up implementing the chapters, or not
the chapters, but the channel?
So if you want to just see all of Linux unplugged,
you can just go to that channel.
How does that work?
Because if you go there right now, it's all BSD now
all the time.
And like you said, nobody watches that.
So is there a facility for that on PeerTube?
They're still fleshing out some of the functionality
around channels.
But if you go to getjupiter.com and you register for an account,
I know, another account.
I'm sorry, but that's how it works.
If you register a new account, you can actually
subscribe to individual channels.
So if you want to get that Noah guy,
you can just go and subscribe to Ask Noah and get those.
That's the only thing people listen to around here.
So OK.
Well, Eric, thank you very much.
We should probably keep moving because we
want to also talk about Android P and get to some pics.
But I really do appreciate that work.
So getjupiter.com is where people will see it.
And I think it's good timing because I
think it's going to play into our overall plan
to get our back catalog in shape one day.
Well, and one last quick note, that effort for PeerTube
has actually led to another project
that we've been working on, a couple of us,
where Jupyter Broadcasting now has an official GitLab
instance that we're managing.
So at some point, we're going to move all the PeerTube scripts,
perhaps a code for JBots, the caster soundboard,
things like that, we're going to be hosting on Jupyter
Broadcasting hosted instances.
With a cool URL.
It's the great GitHub Exodus.
We're just a little late to the party.
We're a little late to the Exodus party.
But yeah, we're setting it all up.
We'll have our own official site.
So if you hear us talking about, which I have a suspicion,
there will be more projects added to that list
in the near future.
Well, maybe not in the near future,
but in the distant future.
It'll just be one resource you go to.
So if it's the soundboard, if it's the, yeah.
It's so easy.
Yeah, the bot and all that kind of stuff.
Yeah, so that's all stuff Eric's been helping us with,
set up the back end stuff.
And it's kind of bringing together
several initiatives, which is great.
So all right.
Well, check out more of that, and I'll
have links to what Eric was talking about in the show notes.
Keep up the good work, Eric, and everybody else helping Eric.
And let's talk about Android P for a moment.
It was released this week.
And I don't have a lot to really cover on it,
other than I noticed a few things that stand out,
other than your typical new features,
like adaptive battery and adaptive brightness.
So adaptive.
There's a lot of, there's a big vibe
of monitoring you in this thing.
So like app actions, which will predict
what you want to do next based on your other activity.
Or application slices, which try to figure out
what you're searching for and show you content from an app.
And there's also this new dashboard
that helps you understand how you're spending
your time on your device.
And the app timer that lets you set limits on apps
and graze out the icon on your home screen
when you've used it too much.
Too much Twitter for you, Wes.
I know.
Oh, god.
I'm so embarrassed.
And then there's other nice features,
like do not disturb, which silences visual interruptions.
And then there's the wind down mode,
which turns on a nightlight, and then turns on do not disturb,
and then fades the screen to grayscale.
I'm willing to try that out.
We'll see.
But the digital well-being stuff is a little scary to me.
And I don't know if it's just me being RMS,
or if this isn't just the mecca of metrics for Google
to collect here.
Imagine now all of the things they
can add to the profile that's already enormous
that they have about you, all of these things about how you
because in order to monitor all of this stuff,
they've had to build in hooks to watch.
And then they have to be collecting this information
and storing it and storing it in a dashboard.
It seems like it would just be almost negligent for them
not to also eventually have a copy of that information,
even if in this first release they don't.
I mean, right, yeah.
You just want more data.
That's kind of the rule.
And it's all being sold to us under the premise
of digital well-being.
Well, I mean, you can't.
How are you going to do all your machine learning
if you don't have all the data, Chris?
Yeah, that's true.
You've got to have all the data.
Bobi, have you flashed all of your Android devices
with Android P?
Are you running it on everything now and got the frame?
No.
No, because as is always the case,
I am bottom of the pile because I've got a OnePlus 3T.
So I seriously doubt that will get in Android P anytime soon.
Yeah, I joke, though, but it is kind of a serious thing.
It's like, now we wait.
Now we wait for the code dump.
And then we wait for all the other lag of the projects
that are based off that code dump to actually catch up.
It is not quite.
I mean, it is far better than the alternative in many ways.
But it is not quite the glorious free open source ecosystem
that perhaps we once naively thought long ago.
So Cassidy, you've been giving it a go, though, quite seriously.
I'd be curious to know about your first impressions,
including maybe some of the new nav stuff
if you had a chance to give it a go.
Yep.
I got the update over the air yesterday.
And I've actually really been enjoying it.
The new navigation is optional and off by default
on existing hardware.
But I guess it's going to be the default on new hardware
from Google, at least, in the future.
But I turned it on.
I really enjoy it.
I actually really enjoy the digital well-being stuff.
Oh, yeah.
I think I have a different perspective on this maybe
because we do something similar.
And we've done it for a long time,
just really not as well fleshed out, I guess,
in elementary OS.
And that's the tool called Zeitgeist,
which is something that, on your device,
it tracks what you open, what files you access,
what applications you use.
It keeps all of that information on the device.
But then that can power some really interesting things
in the OS.
And we've been talking, actually, how we could expand
our privacy settings to be more like this digital well-being
where the user's in control of what apps they themselves can
open when.
And we have something called parental controls right now.
And we've been talking about maybe rebranding
that as something like digital well-being
because I think it's a really interesting topic of setting
restrictions for yourself for how you use your device.
Devices these days are made to be so addicting
that I think it can be important to impose limits on yourself
as long as it's you doing it and it stays on the device locally.
Yeah, I really have no problem with people setting
their own limits on themselves if they
have control over those limits.
It seems like it kind of speaks a little bit about trust.
The idea, as you describe it, coming from you,
it sounds very interesting.
But I think maybe some of this is just you.
It's a concern.
I don't know if it's actually even an issue.
It, to me, is just when I hear it,
I can't help but wonder it a little bit.
And there's this voice in the back of my head
that always goes, well, RMS was usually right about this stuff.
It could be nothing, right?
It could be nothing.
And I think, too, if you have a hard time with controlling
how much you use these devices, building something in
is probably good.
And I think the intention here from the companies
is a good one, I think.
So yeah.
So Android P, coming to a phone near you in 2021.
But you can go read about it with the link in our show
notes.
It does look like a nice refresh.
If I had a phone it would run on, I'd give it a go.
There's some good security improvements baked in as well,
and runtime stuff.
In fact, the one that I noticed, I think you called it out
in our chat, was that it is now using TLS by default
and DNS over TLS.
That's nice.
More encryption.
Yeah.
Yeah, I do not mean to besmirch the good name of Android P,
because as everyone knows, we love P.
Right?
It's just complicated.
It's, yeah.
Yeah, it is.
It's a complicated relationship.
So let's make things easy for a little bit with a snap.
There is a new app that I found this week in the Snap store,
I guess.
And it's called Transitions DJ.
And it is a, to me, I guess, I don't mean to say it badly.
I don't mean to talk it down, but it's
like a light version of Mix, M-I-X-X-X.
It's nice.
It's a cool little app, and it's used for mixing music.
It's great for live production or just making a mix
that you like.
It has cross fading, tempo adjustment, looping, cue points,
tempo synchronization.
And it also has a online database
it can pull down of song structures that you can use.
Really?
You get the beats and the bars and the beats
and the bars and the phrases to help you mix it up.
And it's a snap to install.
It's really, it's actually quite literally a snap.
You just do snap, install, transitions, DJ.
And then you'll be the star of the party.
Yeah, so that looks pretty cool.
That is neat.
Yeah, you got a summer party.
Then there's a tool that I didn't know anything about,
but I knew it was something the Intercept was working on.
That's the outfit that Glenn Greenwald works for and others.
And their parent company, First Look Media,
has been investing in a tool to help them manage
PGP encrypted emails.
But not the emails so much themselves, but the keys.
From the beginning of First Look Media,
they've been using PGP or GBG encryption
for all of their emails.
And they've tried to make it as simple as possible
by creating a new open source tool called GPG Sync.
They've developed it in order to offload
the most complex part of encrypted email, the key
management part of encrypted email.
And they take it out really away from the users,
the fiddling from the users, and they kind of move it
into the IT staff realm.
So this is sort of a pick for those of you in IT
that might want to solve this for your end users.
So here's how it works.
GPG Sync is designed to make it so everyone
within your organization always has
the correct public keys for everyone else
in your organization without even having to think about it.
I want that.
I want that right now.
Yeah, I was thinking like, and I heard this, like,
oh, we could use this here.
That'd be kind of cool.
We could all be talking encrypted.
Although we just don't really.
When's the last time you've emailed me or I've emailed you?
Ever?
Very rarely.
Probably once.
Maybe once, yeah.
I think about it twice.
Yeah, that's weird.
It's very odd.
Yeah, so the tech staff generates a PGP key called
the authority key.
And they also recommend you use YubiKey with this.
They create a list of all the PGP fingerprints
that all members of the organizations
should keep updated called a key list.
They digitally sign the key list with the authority key.
And then they upload both the key list and the signature
to a website that is accessible from a public URL.
All members of the organizations then
install GPG Sync and subscribe to that key list.
You can also subscribe to as many key lists as you'd like.
So if you had multiple projects or companies
you were working with, they could all
have their own key list.
And you could subscribe to them.
You can stay up to date on all of them
from multiple organizations.
When someone joins your organization,
the tech staff helps them generate the PGP key,
adds their fingerprint to the key list,
and re-signs it with the authority key.
And then they upload it to the same URL.
If a user migrates to a new key, the tech staff
adds their new fingerprint to the key list,
and also leaves their old one on the list as well.
And now each member of your organization
doesn't have to track down everyone else's public keys
and make sure they're authentic.
You don't even have to hold regular key signing parties,
though you probably could.
The users don't actually have to do anything.
They just write encrypted emails to their colleagues,
and it just works.
That's pretty neat.
Yeah, so you're just delegating trust
to IT, which you do for so many other things
anyway in an organization like that.
And it's just a nice way to keep it all in sync.
And in a Windows organization, you
are the domain admins have access to all that stuff.
They get master keys.
So yeah, there you go.
There you go.
It's called GPG sync, and version 0.20 came out this week.
So congratulations to First Lock Media
for putting that together.
So there's a couple of app picks for you.
How about that?
Boom, boom, boom.
A couple of app picks right there, pow, pow, pow.
And you can find all of those at linuxunplug.com.
Slash 261.
Wow, how about that?
261, Wes.
Good job.
Holy smokes, holy smokes.
Well, that just about brings us to the end
of this week's broadcast.
If you want to get more Wes Payne, go check out what?
Techsnap?
Yeah, techsnap.systems.
Nice.
If you want a little more poppy, he
was just recently on Late Night Linux
in their most recent episode.
Did a fine job there.
And also, that excellent Ubuntu podcast.
So you always can check out more poppy at there as well,
ubuntupodcast.org.
And you can find Cassidy and Dan.
It will have links to their social profiles
and their websites in our show notes.
So you can get their stuff there.
And Brent, is there anything you want
to mention before we get out of here this week?
Anywhere you want to send folks?
Yeah, I think sending people to at BrentGervais on Twitter
is a good place.
Just come and say hi if you don't have anything better
to say, but I'd love to say hi.
Check that.
All right, very good, sir.
All right, you know, one of these days,
we've got to get another barbecue planned.
OK, get another barbecue planned.
We need it.
Yeah, smoked meats.
We do need it.
Hey, I encourage you to follow me on Twitter too.
Why not?
We're all doing it, at chrislas.
The network is at Jupiter Signal.
And if you join us live on Tuesdays,
you get a nice Linux rounded meal,
because the pre-show starts around 1.30 Pacific time.
And then the show starts around 2 PM-ish.
And then we tend to go till about 3, 3.30-ish,
whatever that might be.
And then we hang out till that Noah Chalaya guy shows up.
And then we do a little handoff to him,
and the Ask Noah program fires up.
It's a beautiful, beautiful afternoon of Linux.
Now, a lot of people say, but Chris, I got to work.
And to that I say, no, you don't.
Just put this on in the background.
And you say, and they come to you and say,
why aren't you working?
You say, boss, this is my extended training.
Don't you want me to be better at my job?
And if they say no to that, then you're
working at the wrong place.
All right, thanks so much for tuning this week's episode
of the Unplugged program.
I hope you enjoyed everything.
Don't forget, links are on the Linux Unplugged website.
Our live stream is at jblive.tv.
You can also get it on our YouTube channel
at youtube.com slash Jupiter Broadcasting.
Thanks so much for being here.
See you back here next Tuesday.
I'll see you guys next time.
Here we go.
Oh, yeah, yeah.
We're bringing it in now for a landing.
Soft, gentle, JB landing.
Yeah, keep your seats buckled.
And drink it if you still got it,
because I'll probably smack into the ground a little hard.
I tend to do that.
Well, thank you, everybody, for making it to the show today.
What are we going to do for $300?
I know it's a ways off, but if we start talking about it now,
you know what I'm saying?
We have time to execute something great.
I'm putting that out there.
What are we going to do for $300?
All right, jbtitles.com.
And what are we going to do for titles?
Write the heck down.
Let's go.
Thank you, Mumba Room.
You guys were great.
A rowdy riotous Mumba Room.
Anybody cooking like we are?
It's, what do you say, probably 83 in here, 84 in here
right now, maybe?
My entire state is on fire.
That's, that is.
Literally.
Yeah.
Yeah, that's awful.
I mean, that's what we need here in Europe to rain.
Rain would be really good.
Yeah.
Rain is hot as balls.
I appreciate that everybody's suffering with this thing.
That's nice.
That's good.
That's why we do this, to distract us all.
I'm not suffering right now, and yet I still
have my glass of wine.
And now it's pretty decent, because we
have half the midnight here.
So it's pretty cool now.
It's good.
Yeah, I bet.
Well, that's, you know, when you're
on vacation and in the Mumba Room,
that's real dedication right there, I got to say.
You're the best.
I'm your servant.
All right.
Well, now let's pick a title then.
And then I think we've checked all of our boxes.
I liked there was something, Gnome Gnome on the Range.
That was one that went by at one point.
Tech Mav.
Yeah, we got to get the boat going.
It's a long one.
We need your help to sort this out.
We can't pick from a series of ones.
I resisted the urge to ask when the release is
going to be Dan and Cassidy.
You know, I didn't.
I saw you squirming.
It was on your mind.
I just wanted to say, I believe Dan's birthday came and went,
and that was the deadline, as far as I was concerned.
When it's ready, as always.
Just a thanks to Jess when it's ready.
