Ah, Wes.
The Cone of Silence.
In our rush to plan two episodes, we didn't prepare pre-shows for either one of them.
I thought you were bringing the pre-show.
Yeah, I thought Alex was bringing the pre-show.
We've been, like, livestreaming for 45 minutes.
How do we not have a pre-show?
Normally they just happen.
I don't think that's how podcasting works, Wes.
I wish I could hear those guys, but they're in, like, a Cone of Silence.
Hello, friends, and welcome in to your Unplugged program.
My name is Chris.
My name is Wes.
Hello, Wes.
I am elated about today's episode.
There's a lot going on.
We have a real treat today.
We're checking in with Hayden Barnes, who is intimately involved with the Windows subsystem for Linux
and now works at Canonical.
We'll talk about some of the big things coming to that surprisingly more and more prominent platform.
Hold on.
Did I just call it a platform?
That's actually a thing now.
We'll tell you what's going on there, what their interest is,
and some of the big things that are about to happen just even in early 2020 that we've got to wrap our heads around.
So it's a great time.
It's been just over a year since Hayden was on the show.
And a lot has changed.
Mm-hmm.
Mm-hmm.
But before we go any further, I got to say how you doing to Alex and Cheesy.
Hello, gents.
Hello.
How are you doing?
I'm all right.
I'm pretty good.
We're recording doubles today live.
So it's a big, big live day.
Extra unplugged.
I should say, though, that we will not be live for the next few weeks.
So check the calendar because we're going into holiday mode.
So it is with some honor for the last time this year I say hello, virtual lug, and time appropriate greetings.
Hello.
Hello, everybody.
We've got a good showing in there today, and we have a lot to get into.
So let's start with the community news.
And I wanted to just talk a little bit about GNOME 3.4.
Yes, I know it's already out.
It's not news anymore.
Although not everybody has it yet.
But there was something in the last round of reviews and discussions that got missed.
And it's a simple thing, but I think it shows some promise.
And I wanted to give it some attention.
And so that is the new extensions tool that is now built into GNOME Shell.
It's a tool just conveniently called GNOME Dash Extensions that makes it easier to create and manage GNOME Shell extensions.
And you can go in there and turn them off, turn them on, much like the UI in GNOME Tweaks.
But this is something actually built into the shell now and doesn't require you to install GNOME Tweaks.
Yeah, it looks like it comes with a lot of nice everyday features that you actually want to use when you're making an extension.
So it's less of an arcane process and something that's provided first class support from upstream.
I think it's a sign perhaps of a seriousness.
The project is starting to take extensions, and this is the first step.
So that's kind of why I wanted to give it a little attention.
Because I didn't mention it when GNOME Shell shipped, when version 3.4 shipped.
But I thought it's something we should talk about.
But now I want to tell you about what's coming in GNOME Shell 3.36, the next version.
And that's big for those of you that have multiple GPUs, particularly if one of those is an NVIDIA GPU.
Oh, yes.
GNOME developer Bastion Nocera has been cleaning up the switcheroo control code so that it doesn't rely on the kernel's VGA switcheroo.
And so that it can support more than two GPUs, hey, that's nice, and better support of handling main and secondary options and configuration.
But the big addition for end users is proprietary NVIDIA support.
That's nice. It's nice.
I'm a child that I just find the actual project name is switcheroo control.
That's awesome.
Adorable.
That is.
And so in recent releases of Mudder, they've made particular changes in how it handles multiple GPUs and rendering and the logic around that and how the shell is handling external GPUs.
There's like a lot of stealth GPU work being done in GNOME Shell right now.
And there's some general cleanups and improvements in the way it communicates with other applications.
So the entire GNOME Shell will handle GPU switching much smoother in 3.36.
It's not all the way there, but a lot better.
It's just getting more and more stable.
It doesn't feel like all the little pieces that we've been worrying about in GNOME Shell, they're getting patched up.
Of course, none of that matters if you're WireGuard, ZFS, Python, Redis, and many other things just go away, which could potentially happen for some.
There is a, I mean, a very apparently hardworking maintainer for a bunch of very important PPAs for the Ubuntu ecosystem.
Like I mentioned, ZFS, WireGuard, Python, 2.7 through 3.7, Perl 6, Open JDK, a bunch of other stuff that's really important.
And he's had it.
The maintainer, his first name's Jonathan, is sick and tired of commercial companies, presumably large commercial companies,
coming to him and asking for help and refusing to pay for his time.
And so as such, he has announced that he is flipping his PPA repositories private.
He writes, I will be removing most of my PPAs from public access due to the continued and persistent abuse by companies using these packages for commercial gain
with flagrant disregard to the knowledge and effort required to maintain them.
These companies are quite happy to charge thousands of dollar sign currency per month for their product slash service.
But when they make a request, will absolutely not pay someone else for their time.
And then he finishes it with a nice solid, this is why we can't have nice things, just to really kind of get it in there.
And I am really torn on this one because for me, it bubbles up a lot of the frustrations I have with the Ubuntu ecosystem right now
in such that it brings a lot of questions to my mind.
Oh, you're talking from the end user perspective here, just as a consumer of Ubuntu.
Yeah, I'm frustrated that this quote unquote enterprise grade platform that I can somehow deploy and get 10 years of support for,
but yet something as critical as Perl or Python or OpenJDK or Wirecard or ZFS can just be pulled because a developer is having a bad day.
Like, why has this not been solved yet by Canonical?
Why have snaps not matured to the point where they solve this problem?
Why are we still even dealing with PPAs in nearly 2020?
And the reality of it is the market is wholly dependent on the PPA sauce to make Ubuntu a practical operating system at scale.
That's the reality of it. And it's dangerous.
PPAs full stop are dangerous.
They're dangerous from a stability standpoint, as in this case, as just proven by this particular PPA author.
But what if they were dangerous in another way?
A way that hasn't really happened that we know of, but could be extremely devastating.
What if instead of rage quitting in a public forum, that developer decides to screw somebody and they put something malicious in those bills?
We don't really have a clear understanding of the trust model with these PPAs, but yet we're putting them in production.
I'm frustrated that this isn't solved.
I'm frustrated that Ubuntu has grown to the size it is and they haven't gotten over the line on this.
And I'm frustrated that one angry developer can screw with a whole bunch of people's day like this.
I also am frustrated that he expects to get paid.
And I know that's a really controversial thing to say, and I wish he would get paid.
I wish that the market dynamics were such that every bug request that comes in had a tip amount automatically attached to it, and you could put 15 bucks on a bug request.
I wish it was like that.
But he signed up for a job to be a free maintainer of free software, regardless of who the user is.
Whether it's individual Chris or if it's a multi-billion dollar corporation, you don't pick and choose who the user of free software is.
I will note that in the post, it specifically stresses that it's not just about money.
It's about donations, sponsorships, employment.
That's all money.
It is money, but 20 percent time.
I mean, I think there's a more effort being, you know, if development was being pushed upstream to help maintain these PPAs.
Because the other thing here is I think you're missing a part where PPAs are definitely used at scale.
But if you're a real big player, this doesn't matter to you.
You can set up, you have engineer time that you can throw and fix your own problems.
It's the people deploying it in the middle who have taken on the risk of trusting PPAs.
I think that might be a safe majority.
But not a lot of shops have the time to set up their own local repos and get all their developers to put all their dependencies in those repos.
And then make sure they're all on the systems that are on the network.
Like it's definitely doable, especially with a Debian system.
But I don't know.
I bet a lot of organizations just say, ah, screw it.
Just add the PPA.
It's got everything you need.
I think it happens a lot.
Oh, yeah, of course you do.
I'm just saying the ones in the middle are the ones that are affected by this the most because they lack the ability to pivot in an easy way.
And I totally completely understand that, you know, here's this guy.
He's doing volunteer work, right?
He's got a lot of other things going on in his life.
This isn't how he gets paid.
And now with these kinds of requests and changes and pleas to support something that takes an extremely large amount of time, he's being put off by this.
He's being put out.
He's being asked to work a full time job and he's not getting compensated for it.
It's not fair.
What's the alternative, though?
You know, do Canonical pay him for that work?
Is that a sustainable model for Canonical?
Maybe, maybe not.
Do you go to an AUR style model?
Do you not provide them at all?
You know, what's the alternative?
I think there's two issues.
The first issue is that's the job he signed up for.
So while it's not fair and it asks for way more than it should.
That also doesn't take into account like you don't always know what you're signing up for when you start a project or start.
I'm going to maintain this PPA for me and my friends or my company.
And then in two years, it's giant.
Well, that was very much the case for me with Linux server.
Right.
So when does it transition to a responsibility from I'm just doing this?
My answer would be to that is that it's a systemic issue that it's not solvable by the individual maintainer.
It has to be solved at the system level.
And I was joking when I said it, but I mean, why the hell not?
Why not be able to throw a cold 50 on a bug and say whoever fixes this bug gets to claim that 50 bucks?
It's a bug bounty program.
There's systems out there.
Elementary OS uses one.
There's systems out there for this.
But like so many things, we just fail to adopt and move because the tooling is good enough.
We got a job to do.
And here we are.
But now the end result is people that are using Ubuntu in production have a less reliable, less stable system now.
Or they always did.
But it's you're more aware of it now.
Yeah.
Right.
Because it's always been a problem.
It's not like it's just that we're really feeling that there was always a risk anytime you've added a PPA.
They can't let this stand.
They can't let this guy pull WireGuard and ZFS and Python and Redis.
Ansible.
He's the maintainer for Ansible on Ubuntu.
That's kind of a big deal.
So then the other question is you're talking about snaps.
Are there room?
Why are these PPAs needed?
Obviously a lot of these are already in the repositories in older LTS style versions.
And then there are other means.
Is it just that the people who are actually responsible for the projects are not doing that work to package them and provide them in ways their users.
Or is it not possible to use snaps to supply ZFS and WireGuard?
I genuinely don't know the answer to that.
I mean it seems like there's been a lot of exploration in core snaps.
Yeah.
I'm not sure.
But I would assume that's how you would add support for it to Ubuntu core.
But I don't know.
Well and I think that you could extend this to beyond PPAs.
If you look at other forums like GitHub where a lot of projects run into the same issue where someone's just developing it out of their own will and want.
And then it gets used by these larger corporations and they're up against the same thing.
Where they're doing a project that they like to do and then now there's demands being brought on them.
I think GitHub has done a pretty good job though in the way that they handle it.
And they have begun to sponsor certain projects and developers.
And I could definitely see that being the same scenario with PPAs or things like them.
Yeah it's unfortunate that we keep circling back to this.
I'm thinking about the open SSL developer story too.
Every couple of years, every couple of months this comes up.
I think it's actually worse here because it is further down the food chain.
He's not even the one that's developing the software.
He's packaging it for one distribution.
Now it happens to be a large one.
But this issue happens across all the distributions.
And it's even more pronounced in some smaller niche distributions.
Where you're really, you're just not registering on the Linux Foundation's radar or on whoever.
Because you're not actually writing the code.
You're just packaging it.
It is an absolutely, fundamentally vital role for the consumers of the distribution.
Right, that's what I'm talking about right now.
Right.
So it's a real humdinger because it's sort of a thankless position.
The person who is constantly keeping something up to date in a distribution,
satisfying dependencies, resolving bugs and quirks that are applicable to that distribution,
it's a never ending job.
Right, you're taking on both not having direct control over the software
and interacting with all the downstream consumers.
I think in this particular scenario, perhaps now that Jonathan has gotten enough attention,
maybe he could start a Patreon.
But that's not going to solve it for everybody.
And there's a lot of Patreon fatigue out there.
Yeah, he's got a link to a Ko-fi post.
So there are some options there.
But you're right, that's not, I mean, that's clearly not a solution that's working universally.
This is a topic contributing to open source development that we're going to touch on pretty early in 2020
that we have some big thoughts on and some things to talk about.
But I think for now, we should probably just move forward because it's a really difficult situation.
You can see it from his perspective.
You can see it from the end consumer's perspective.
Nobody wins.
But it's one of our key challenges in our ecosystem right now.
But one of the benefits of our ecosystem is we see a lot of innovation.
And the popcorn pocket computer or pocket popcorn computer, something like that, could be just that.
Imagine a device dedicated to a terminal in your pocket.
A full QWERTY keyboard with a 1920 by 1080 IPS 4.9 5-inch screen.
Oh.
So it's meant for terminals.
Yeah, QWERTY keyboard.
QWERTY, 1.2 gigahertz quad-core ARM processor, 2 gigs of RAM.
I can work with that.
Lots of different connectivity options, lots of different connectivity options, as well as four USB-C connectors.
Whoa.
This is a real device.
It's called the Pocket Popcorn Computer.
And it's available as sort of a pre-order Kickstarter now.
I was about to say, how do I get me one?
I know.
It looks really good.
And geez, they've made some devices before.
They've shipped hardware.
So this isn't their first product.
Yeah, so I'm not 100% sure it's done by the same creators, Next Thing Co.
I was looking, or Next Thing Company, I was looking to see if it was some of those creators.
And I'm not 100% sure.
But this is very similar to the Pocket Chip.
The Pocket Chip Pro actually used the same CPU.
You know, I'm curious.
I think it would be a neat device to have.
The keyboard, the renderings, everything, it looks pretty slick.
I like how they've managed to put such a nice screen in a small device.
Like you said, they're about halfway to being funded right now.
I think it would be a neat device to have.
I just don't know, for me, if it would be incredibly useful.
Yeah, if you're doing a lot of support over terminals, if you're doing a lot of remote work over SSH,
I think it might be a no-brainer.
Yeah, I mean, with the Pocket Chip, which I had, it was an inexpensive device, like $70 or $80.
The keyboard wasn't great.
It was kind of an afterthought anyway.
It was a neat device, but it wasn't really a practical device.
Like I wouldn't really use it to get any work done,
whereas this particular device looks a little better.
It looks like they've actually put some thought into the keyboard.
You know what I like?
I'm digging the fact that it has as many USB-C ports as a MacBook Pro.
Amazing.
Yeah, that is incredible.
And it's got a 3200 milliamp hour battery.
It's got LoRa, the GNSS built into it.
So, I mean, you've got a lot of other options there that you didn't have with the Pocket Chip.
So I think it's definitely a neat device.
You know, I'll wait for you guys to pick it up.
Maybe since Chris and I picked up the PinePhone, maybe Wes can pick this up and let us know how it goes.
Yeah, there you go, Wes.
I kind of would love one just sort of bouncing around my glove box whenever I needed it.
I'm curious if anyone in the Mumble Room would buy a device like this.
So it fits in, you know, a bag.
It's pretty thin.
They focused on giving it a pretty nice QWERTY keyboard,
so it's got a decent Enter key, Shift, Escape, Tab.
And, you know, the CPU has been around.
It's been optimized.
It's totally capable of what they're promising in this thing.
I mentioned IoT, too, which kind of makes sense.
You could see carrying this out from the field.
Maybe you're trying to troubleshoot with some devices
and you walk up and attach to it and away you go.
And with a 3,200 milliamp battery, this thing is going to go for quite a while.
So it's sort of like a go-to, you know it's going to work.
All I need is like a rugged case so I don't break it.
So they've raised $20,000.
They're trying to get to $50,000 to launch this thing.
Okay.
So they're about halfway-ish.
The pricing, once it's done, would sort of fall around $199,000 for right now,
if you do the pre-order for a device.
And if you want one with the LoRa radio and the Wi-Fi and all of the fancy radios,
that one's $299,000.
Okay.
That's not terrible.
I mean, we're in sort of like what, Chromebook territory?
Yeah, I suppose so.
Two gigs of RAM, 32 gigabytes of built-in, plus an expandable microSD slot,
4.9-inch, 4.95, 1080 screen IPS.
I kind of like it.
I don't have a need for it.
Like, geez, it's like I don't do a lot of SSH that I wouldn't just do from a tablet
or from my desktop.
Right.
When I need it, my phone works.
It's not super pleasant, but it's not.
If I didn't have an iPad, I think I would do this.
I ended up getting an iPad just mostly so I could watch videos on airplanes,
which I would not be able to use this for.
So that's the main use.
I've got to catch up on my shows, Wes, on my stories.
It should be said, too, that it runs Debian 10 with a mainline kernel.
It's compatible with Gadget OS, Buildroot.
The keyboard is an open source keyboard, and the LED controller firmware is also open.
So the device itself seems like it's a pretty open device,
and some of the other little firmware bits are open and available
where you don't get that on some other open source hardware.
So I think that is pretty neat as well, that they're opening it up completely.
So we'll see where it goes, you know?
We'll put a link in the show notes if you are curious yourself.
Really, I like the whole aesthetic overall.
So even if this one's not for me, I'm excited to see.
Hopefully this project is successful and then we see more things like it.
Yeah, absolutely.
Well, before we go any further, before we get into a big housekeeping
and before we jump into the future of WSL, how about a round of applause?
Hello to Mr. Big Daddy Linux, Rocco joining us in the Mumba Room.
Hello, Rocco.
Hey, Chris, how are you?
You have perfect timing.
This is exactly the moment in the show I wanted to mention that this week
on Rocco's Linux Spotlight, it's my turn.
I'll be coming out with a video with Rocco and I chatting about everything.
It's great.
So perfect timing, Rocco.
Welcome to the show.
Well, it didn't feel like perfect timing because I was pretty late,
but I guess it works out.
We're just sitting here running our mouths, you know?
It takes us a while to get to the important stuff.
Well, speaking of the important stuff, the interview that we had
the talk that we had was absolutely awesome.
If anybody wants to know anything about you and your history,
we covered pretty much everything from your history into Linux
to your sysadmin days to a great story on your nightmare scenario.
That was fabulous.
Well, I really enjoyed it and I appreciated the opportunity
because the two joys I have on the weekend right now
are Brunch with Brent and Linux Spotlight.
So it was great to be able to participate.
And also, you got to me before Brent did, so congratulations.
Another round of applause on that.
Hey now, hey now.
But no, it's really a great show.
Jill's been on there.
Jill was on Linux Spotlight and on Brunch with Brent.
And you get a good sort of flavor of people that are talked about a lot
on these shows across a lot of the different podcasts.
You'll hear people's names get dropped or mentioned.
And so this just sort of fills in the background.
I'm still getting my way through the recent Wimpy episode that's fantastic.
Good to have you here and you're welcome to hang out with us.
So we're going to be chatting about stuff and all that
and doing a little housekeeping.
We have some big news ourselves.
But so Raka, when does that video come out?
Let's finish that business.
When's that out and where do people find it?
So you can go to bigdaddylinux.com for the links or the YouTube channel.
But it comes out Wednesday, December 18th at 6 a.m. Eastern time.
There you go.
Maybe we'll get an updated link in the show notes when that's out there.
We can do that.
We sure can.
Yeah.
And that's stuff that, you know, if you've been listening for a little bit,
you may have heard bits and pieces of my history,
but we never really sat down and put it all in one place either.
So it's a good opportunity to do that.
Well, now with that said, we do have ourselves a little bit of housekeeping
to get into this week.
First of all, a huge announcement.
I am elated to announce – this is my word today, elated.
It's the second usage.
I need a new one.
I am – give me a new one, Wes.
You don't want to burn words out.
No, no.
I don't want to say excited because I'm done using excited for the rest of the year.
Jumping for joy.
I'm pretty lazy.
Pretty lazy.
I haven't seen you jump in a while.
Damn it, Wes.
Oh, dang it.
I am –
Thrilled.
Thank you.
Ecstatic.
I am thrilled to announce that a cloud guru at Linux Academy are joining forces as one.
This is a huge announcement.
We'll have a link in the show notes to check it out.
And I'm here to tell you this is going to be great for Linux content.
This is a huge area of commitment for them going forward.
As we record a frequently asked questions in the work, put it all together,
and they'll have that out like later in the week.
We'll put that in the show notes too.
Yeah, we could do that.
And also, if you just follow on social or check the blogs, a lot of information there.
Huge.
Huge.
There's a lot more core stuff.
That's just like massive, but right now, right now it's the holidays.
So we don't have a lot to say.
We're going to get through the holidays, and then we'll follow up.
But we'll have links in the show notes for more information.
Massive.
Talk about a massively growing area too.
So much stuff going on there.
Now, we have ourselves quite the guest on Brunch with Brent.
Brent, this episode, this episode that you just did with Jason,
inspired a whole other episode of this program that's coming up soon in the feeds.
But Jason joined Brent.
Now, Jason, I'm going to go for it, Brent.
I'm going to go for it.
Uh-oh.
You could do this.
Speziac.
Speziac.
Speziac.
Very good.
I'm sorry, Jason.
I'm sorry.
There's a bell over there.
You can ring for us.
Yeah, I got bells.
I got bells for days.
So Jason.
You done it.
Jason contacted us and just said, hey, just so you know, I'm watching.
All right, listen.
Probably doesn't watch, huh?
And I really like the podcast.
By the way, I do a little bit in the business, and I use Linux to record it.
I'm like, oh yeah, what do you do?
Everything.
Everything.
Jason is a well-established voice actor who's been involved in many cartoons that I cherish
officially, and many other things, including great video games and Hollywood productions.
And he does his work on Linux.
So Brent sat down with a brunch with Jason, and it's so good.
We're doing a two-parter.
So part one is out now.
I listened to it on my way in and was like, I had to pause it and write down an idea for
the show just by listening.
It's so great.
It's so good.
Because Jason's really been around for a long time.
He's been a Linux advocate since the early days.
And so there's some trips down nostalgia lane that really, really made me smile.
And then part two is coming out later this week.
It's a two-part brunch.
You guys must have been really full by the end, Brent.
Hey, you got to serve the good stuff for the good guests.
So I pulled out all the stops.
That must have been a thrill, huh?
Yeah.
You know, it was such a treat that he got in contact with us and just said, hey, how
are you guys doing?
I've been listening for a while.
And our chat, I knew the moment he and I got connected on the phone to say hello initially
that our chat was going to be really great.
And it did not, it totally, brunch was well served, let's put it that way.
Yes.
That's why we're all going to get seconds, right?
I will serve seconds to everyone.
Yeah.
Part two is going to be great too, but part one's out now.
So totally worth checking out.
He's hilarious as of course, many voices, but at the same time, just a lot of insight
into the Linux desktop and community.
And he's really put his heart into it.
A deep thinker too.
And you get a deep thinker with Brent together and it's magic.
It's magic.
Just take off the rest of the afternoon.
You might as well.
And you may have to pause it and take notes.
So just prepare yourself for that.
But you get that at extras.show.
That's where the brunch with Brent's premiere extras.show.
And that one in particks is extras.show slash lucky four zero.
If you want to get that and listen to that.
Now I also want to let you know that, uh, our daily Linux news podcast, Linux headlines
every single weekday, three minutes or less, all the news that's happening in that day,
it will be off throughout the holiday season.
So you just said every single weekday.
I know I did, didn't I?
With an asterisk, but you just couldn't see it cause it's an audio podcast.
So that's your bad, not mine.
Uh, Monday, December 23rd through Friday, January 3rd, we are taking headlines off.
I just wanted to let you know here because if you're not listening to headlines, then
you've made a mistake in your life and I'm not going to point, I won't bring it up again,
but now that we've talked about it, you probably should fix it.
So Linux headlines, you got to get that.
All right.
Now we don't need to talk about this again.
Okay.
Done.
It's good.
I think we're all clear on this and just so you know, it's taking some time off and I
forgive you for not listening.
But now that we've talked about this, you're definitely gonna be listening cause it's,
it's a great show.
It's a great show.
Anything else West?
Now that I've shamed everybody.
I don't know.
That got weird.
Yeah.
We better just move on.
I know.
Linux headlines.show for that.
And um, you know, it's the holiday season.
You got to cut me some slack.
That is our holiday housekeeping right there.
It's really festive.
Wes.
I think I just got some marker on my shirt.
Yeah.
There should be lots of good holiday content to keep everyone pleased and we'll be hitting
it hard in the new year.
We will be off air live streamies, but we will be on air RSS feedies.
So we will still be posting to the site, to the feeds.
We'll still have content for you because I'm a manic that won't let anybody rest ever.
We can't stop.
No, it's I drink diet coke all day long.
We're not sure, but we think if the podcast drops below 55 miles per hour, it'll blow
up.
Also subscribers.
That is part of the equation.
Thank you.
Also, uh, thank you to everybody who came to the new live stream time.
You know, uh, I was really kind of worked up about it because a bedrock aspect of this
show is our virtual lug and our chat room.
And so I fought tooth and nail for many years not to ever change the time, but there's just
a lot of factors and including, and everyone on the team knows this now.
It's so funny.
You guys all know me so well now I am just sharper and more with it earlier in the day
than I am in the afternoon.
I'm an old man and by about two, three o'clock I'm not on my game anymore.
Right.
And we tried the nap live stream and it just didn't perform.
So the new lifetimes worked out really well and I just really appreciate everyone who's
come over to jblive.tv on a Tuesday.
We recognize you have to take time out and it means a lot when you show up.
It does.
Uh, and we can get that in your time zone at jupitabroadcasting.com slash calendar.
And of course there's the IRC room, which is also a huge part of this, that chat room.
Wes and I are reading the entire time the show is going at just like Alex and cheese
and everybody else's.
We're watching that as we go and they're absolutely a fundamental part of the show.
Our titles come from our chat room.
So this is my last live show of 2019 and everything else after this will be prerecorded.
So I just wanted to take this opportunity and say thank you so much because it really
does make this show and I hope you can join us in 2020.
Now with that said, let's transition into a little future casting for 2020 because Wes
and I have been reading the tea leaves, watching the industry news, and we've seen a lot of
hubbub development around the windows subsystem for Linux, especially since version two lands
in early 2020.
And with that, there is industry support forming, including Canonical has made a strategic hire.
They've opened another position and they have declared that WSL is an official platform
that they will support much like AWS, as well as a few other key industry players and a
big event is all just around the corner.
So this seemed like the perfect moment after a year and change to bring Hayden Barnes back
on the show and see what's going on and what big changes have happened in his life.
Well Hayden, welcome back to the program.
Thank you for having me on Linux Unplugged again, this is great.
So a lot of has changed since we chatted, but I think the last time we were on, it might
have been with your chat with Joe talking about Penguin at the time, right?
I think now it's actually called the, it's out, it's like WSL Linux.
It's called WSL Linux now, right?
Or do we swap it to Penguin?
Fill me in.
It was WLinux and then we became Penguin.
Got you.
You can tell I'm not a big Windows user, but I'm fascinated about the potential of WSL,
especially version two.
And I understand you've had a bit of a job change too since the last time we talked.
I have.
I've recently joined Canonical as the developer advocate for Ubuntu on WSL and Hyper-V.
That's great.
But to me it also seems to speak to a much larger commitment on Canonical's part to the
Windows subsystem for Linux.
That must have been a surprising conversation when that started.
It was.
Canonical is leveling up on WSL, devoting more resources to it, more advocacy, more
engineering, certainly more than any other mainstream Linux distribution.
Do you think it's the transition to WSL2 and the KVM backend that made it just such a clearly
viable platform for them, or is it just simply the reach?
What are your thoughts on that part of it?
Well, it's the opportunity to engage new Linux users, and that's what WSL is.
It's an onboarding experience into the Linux ecosystem.
Not necessarily desktop Linux, although some of our users do go there, but to Linux on
server, Linux on IoT, Linux on mobile.
But seeing the commitment to WSL from Microsoft with WSL2, which is powered by Hyper-V, certainly
I think helped Canonical make that decision that this is a platform they wanted to continue
investing in and growing.
That's great.
I think it's pretty clever on Canonical's part.
That's very insightful because there's a bit of a barrier to get over to look at this and
say, this is something we could make an official platform.
We could target it like we do AWS and really see an opportunity there.
How has it been on the other end of that?
Working with Microsoft on things that are maybe a little esoteric or affect only a single
distribution or implementation of Linux on WSL, how receptive are they to this large
company?
WSL is just a small part of a much bigger product for them.
Do you end up talking to a wall or have you seen reception to concerns and issues and
fixes and things like that?
Microsoft is incredibly receptive to everything that we've asked of them.
Adding new features, supporting, helping us track down bugs, whether we were at Penguin
or here at Ubuntu, the team on the WSL team have been amazing.
I actually worked with several different teams at Microsoft on various projects and every
single one of them has been incredibly positive, incredibly receptive to collaboration.
Is people involved in WSL across teams in Microsoft, across multiple teams?
Well, I don't just work with WSL, I also work on Hyper-V and we have some other friends
at Microsoft and other areas we collaborate on.
I've been part of those conversations as well and it's been great.
There's a lot of opportunity for collaboration and there's some that people might be aware
of like the Skype Snap in the Snap store, Azure Storage Explorer is there.
We hope to bring teams there shortly.
What people don't realize is that the default Linux images, GitHub actions are Ubuntu and
that's something developed between Canonical and Microsoft.
Really collaboration between Canonical and Microsoft is nothing new, this is just a new
entry point and how that works.
It seems to be somewhat of a growth of an ongoing thing that's benefited both companies.
But the reason I was asking you about the specifics of that is just simply I've known
Microsoft basically my entire life growing up here in the Redmond area and there are
times when a company will launch the initiative and they will not properly staff it and they
will not respond to requests and emails, they wouldn't cooperate with the community simply
because they didn't have the time.
Then there's other initiatives, which it sounds like these are among them, where they have
properly staffed them and supported them and made them a priority within the company.
I think that speaks pretty good to the future of that thing.
I think it's pretty clever, like I said earlier, to expand that.
That kind of leads me to the conference.
There's an actual WSL conference in the works, what can you tell me about that?
That's WSL Conf, it's scheduled March 10th and 11th.
Our first conference will be at Redmond on the campus of Microsoft headquarters.
That is a conference I began organizing for my position at Penguin and I brought it over
with me to Canonical.
It is sponsored by Canonical and hosted by Microsoft and we are gathering for two days
and it is shaping up to be two days of just incredibly intense informational sessions
and workshops on what everyone is doing on WSL, things you can accomplish on WSL, web
development, IoT, InfoSec, Kubernetes, so much Kubernetes.
Wow.
Yeah.
Good.
Wes and I have registered and we have our press passes, so we'll be there.
Yeah, looking forward to it.
Yeah, absolutely.
I am curious with your new position though, what's going on with Penguin?
Is that still actively being developed?
It is.
The goal with Penguin and the startup around at Whitewater Foundry was to create an independent,
sustainable, open source startup and I think we definitely met that goal.
It had a revenue stream, it has now continued on through leadership change and it was profitable
from day one.
In terms of this ongoing discussion we've been having in open source about funding development
and I think we've added something to that showing how stores can contribute to that
and solve some of those issues.
So it's continuing now, one of the team members, Carlos Ramirez, who's a former contributor
to Wine, has taken over the leadership position.
They've published a complete roadmap for 2020 and we had products in the pipeline when I
made the leap and those have since launched, including Raft, which is the GUI management
tool for WSL distros for Windows 10.
Well that's really neat.
It's nice to see that it's sustainable and that Penguin's going to stick around for a
while and we can keep getting benefit out of that.
And they're going to continue developing the Fedora Remix for WSL as well.
They're going to be able to put more resources into that than we were able to under my leadership.
So they're growing and expanding.
So that switch to Canonical, we proved a point in that you could build this sustainable independent
open source startup and that we met that goal.
And then we also wanted WSL to be taken more seriously by the major players and we certainly
met that goal.
So I felt comfortable moving on from that position.
We never needed a big buyout or anything because we never took any VC money.
It was always funded by the users.
But I can move now to Canonical and from this position I have more resources and a bigger
platform to continue advocating for WSL and WSL users.
And bring all of that experience to one of the world's largest operating systems.
It's really a fantastic kind of move on, not just your part but their part too.
So looking at your crystal ball since you have access and control to everything that
will happen with WSL, no questions asked obviously.
Where do you see things going in 2020 for this thing that a lot of us are still trying
to wrap our heads around?
Well, for most users, 2020 is when WSL 2 will launch, which is the WSL that's powered by
Hyper-V components.
It's not required like Hyper-V Manager is on Pro, it will work across all SKUs of Windows
10, but it's there and it is powered by a Linux kernel.
So you get performance improvements.
This was a major architecture overhaul in V2.
Yeah, you just do much cooler things.
So 2020 is when that will launch for most users.
It's available now in the fast and the slow ring for Windows 10.
Of course, of course.
But that will hopefully be launching in the spring.
And then here at Ubuntu, we have some interesting ideas that we hope to implement in our distro
in 2020.
We're seeing on that.
I love to hear that.
Maybe maybe a peekaboo at WSL Conf.
I mean, I'm just saying going to be in the area.
We'll see.
Yeah.
Okay.
Okay.
Well, Hayden, I really appreciate your patience as I work through understanding this, because
I'm very excited about the potential of it.
And you are really good at explaining it to me and obviously have a great depth of knowledge
with it.
A passionate advocate.
Thank you so much.
Yeah.
So do keep us in the loop as stuff develops too.
And can't wait to shake hands at WSL Conf.
Really looking forward to it.
Thank you for coming and giving Penguin that initial boost by having us on Linux Unplugged
and Jupyter broadcasting podcasts and for joining us as this journey continues.
Hey, man, you bet.
We recognize we know good work when we see it.
Absolutely.
We got an eye for quality.
But also, you should know that Kali Linux is going to be there and Penguin is going
to be there.
So it's everyone is going to be there.
The registration is going to probably fill up soon.
We're working on a live stream option for people who can't make it to Redmond.
That's great.
If that does materialize, do let us know.
We'll try to let people out there know about it.
Sure.
If you want to do the live stream, you can go ahead and register instead of registering
general admission, register live stream online.
Good to know.
Good to know.
Well, I have links to that in the show notes.
Hayden, good to chat with you again.
Thank you.
Thank you so much.
I'm excited about the conference because it's here in our backyard, first of all, so not
much travel required.
Yeah, really, we have to go.
Well, I don't know about that.
But it was really good to hear from Hayden and get a little update on where that's at.
I got to be honest, when I'm chatting with him, my Windows 10, my Windows ignorance kind
of starts to show.
It's been a long time.
Almost motivated enough to try it.
But I gave it a go a while back and that was enough for me.
I know it's difficult when you already have all the Linux you need and want right in front
of you.
But it is nice to see that it's getting easier and easier to have that even if you have to
use or want to use Windows for other parts of your life.
I'd like to see you take a Windows challenge.
Oh my gosh, I've done it once for Coder.
So I have done it.
I'm shocked that WSL 2 isn't out there for everybody yet because I feel like it was at
the beginning of this year we tried it.
So it's just not my cup of tea.
I can appreciate people like it.
It's just not my cup of tea.
It's not for me.
But the thing he said in that interview that jumped out at me and I noticed it jumped out
at you too was when we asked him, what's Canonical's like motivation here?
And he said, we want to get to the Linux users that are using WSL.
They see it as a whole new generation of Linux users.
Well, and that kind of reminded me of what we were talking about when we talked about
this before from the Microsoft world, right?
Where it's also sort of onboarding for Azure, which is running Linux.
And so it's just when you have it at hand, when you can use it right there on your system,
you can easily pivot and jump to other ecosystems.
Huh.
Huh.
That's what I say.
I think it's a good move.
Well, I'll tell you what, the cafeteria at that venue looks awesome.
You'll have to let me know how the food is.
You know, if Microsoft's involved, the chances are that the cafeteria is pretty good.
That's for sure.
They know how to eat over there.
I think it's a test of our sort of pragmatism sometimes as a community too, because it is
weird.
I mean, you mentioned even in the interview that we're still, you know, wrapping your
head around what it is, but I think so far it's clear, like when you talk to Hayden and
other people who use it and are involved, these are the same, these are the same folks
who love Linux.
There's just another platform.
We're going to get into this more next week.
But and Jason talks about this too and his brunch with Brent in a way that really made
me recollect a little bit.
It's just, I made a statement in this week's Linux Action News that is, it's really kind
of stuck with a lot of people.
I've gotten a lot of comments about it and I've thought about it a few times since I
said it, but I had this really weird realization while we were recording that my desktop right
now is better because of Microsoft.
My Linux desktop is better because of Microsoft.
I really like Visual Studio Code.
It's nice.
It's cute.
It's cool, which I'm thrilled about.
I mean, I like VS Code too.
It's the holidays, Wes.
I'm sorry.
I know.
Some things are sacred.
I still SSH on the systems and you've aliased nano to vim.
Oh, Wes, I love you.
The only pleasure I get from it, from it all, is watching you struggle every time you sit
down on a system that doesn't have vim and you type vim over and over and over.
It's just what my brain reaches for when I need to change a file.
The great thing is on systems where vim is installed, generally Vi is automatically aliased
to vim, so you could have just taught yourself Vi all along and you'd be good to go on any
system.
I know.
The fingers do what they want.
And it never ends.
It's great.
So I get mine, but I really have no words for this whole thing, this whole phenomenon,
this whole WSL on Windows and how the numbers are getting ridiculous.
But I'm being told numbers by certain developers that seem impossible.
So I don't know.
I don't really.
So I'm really curious.
I mean, we know Windows is in all kinds of places, right?
I've been even told that somebody has a million installs.
Wow.
I just don't know if I buy that.
Seems impossible.
But I'm sure you can see why Canonical would be interested in having a strong presence
there.
Yeah.
I mean, the Windows base is huge.
So it is a big market.
But I think I believe WSL Conf will serve as sort of a catalyst for my brain.
Like it'll all kind of crystallize in my brain when we go to WSL Conf.
We shall see.
That'll be coming up.
We have a link to that in the show notes if you're in the area and you want to go.
Or if you're in the area and just want to say hi to Wes and I.
Yeah, we're always up for that.
I mean, I don't know.
It's not, you know, it's not out of the question.
We might want to go out to lunch, say hi to a few people.
We like snacks.
Damn right we do.
All right.
Let's get into some feedback.
This is what we've been doing here at Linux Unplugged dot com slash contact.
And we got some feedback in about our grub butter fs advice.
And I will just say, while we're doing a little follow up feedback here, we just got done
with the big old upgrade.
Get ready for this.
The other day, a new kernel, new wire guard, new ZFS on Linux and a new system D in one
round of updates.
Those are all the things that we use.
That's basically I mean, if you add a Docker in there, then that would be the whole system.
This was a massive first update in production for our new arch server and Wes Payne.
How did it do?
Fantastic.
We've got a few little things, mostly ordering issues to iron out between some some containers
that aren't quite starting right.
But I mean, that's it.
And that's just because it's a new system.
So good.
It was so good.
And it did the snapshots as the package upgrades before and after were happening.
So I'm very pleased with that.
So two weeks in service still rocking.
And we did our first major like upgrade all of the core system components that did break
once or once or twice actually on fedora.
Sometimes those what would happen is it would install the new kernel.
But the DKMS modules would be for the running kernel at the time of the upgrade.
It would reboot and you'd have to reinstall anything that used DKMS and then it would
build against the running kernel.
However, if you can't boot because it didn't build the modules, you got a chicken and an
egg.
That's what happened to us.
Anyways, Nikolai writes in.
Hello, Chris and Wes.
I run on ButterFS and since Chris's ButterFS nightmare, which was years ago, when I lost
the system to ButterFS, and then it was like right before the episode two, so I came on
all guns blazing, just fired up and pissed off like half of the SUSE community.
First Ubuntu, then Arch.
My current Arch Linux desktop is from May of 2016 with two MVME drives in a RAID 0.
I have my server on Arch and ButterFS since October of 2018 with RAID 1.
I use RAID 1 for the system and RAID 10 for my data.
I've had no issues with ButterFS.
I want to mention that SUSE's grub is patched to boot the default sub volume, which will
be your system after a snap or rollback.
So that's good to know.
After you ran snap or rollback and reboot, you should edit it in the grub menu.
He's given us tutorials on how to use the snaps.
Yeah.
And you know, it's probably good advice as we as we've mentioned, we have not yet tested
that little safety net.
Because what he's saying here is if you don't do this right during a snap or rollback, you'll
end up in a read only system.
And so this is his solution to that.
So if this happens to you, we'll have a link in the show notes for that.
Yeah, we'll have to test a rollback here one of these weeks.
You know what, fair enough.
I brought this on myself when when we decided to use ButterFS.
All the people that have been using ButterFS this entire time, they totally earned the
told you so moment, didn't they?
So you know what, I'll take your told you so's, go ahead, give them to me.
I earned it.
You're right.
It's fine.
As long as you use it right.
Problem was, I was holding it wrong.
I acknowledge it now.
It's not your fault.
It's not ButterFS's fault.
It's my fault for holding ButterFS wrong.
All right, Wes, do you want to read this second email that comes into the old show skis here?
Oh, it's not an email.
It's a feedback on Reddit.
I haven't mentioned the subreddit in about 15 years.
They're still out there from six from now Dooley Dooley writes in five days ago to the
show.
No, don't do this with CFS, NFS, Libver, D, Docker.
You have way too many low level moving parts to juggle.
March is going to be a constant nightmare.
I stick with my original recommendation of Debian or CentOS.
Hearing about the struggles with Fedora is no surprise.
Oh, there's a whole new wing of I told you so's in the waiting.
I won't lie, when I told Jim of TechSnap about it, he rolled his eyes.
I mean, I couldn't see, but I could hear the eye roll over the microphone.
I mean, I want to remind everyone, the premise here is we're doing this so you don't have
to.
We know this is not necessarily a good idea.
We are testing a theory.
If you take a belt and suspenders approach to arch and you build a simple system, is
it maintainable over the long term?
Now what I like about this is what Dooley is saying is you haven't built a simple system,
right?
That's his that's his core criticism.
He's saying you're using look, guys, you got NFS, you got ZFS, you got Libver, D and you
got Docker.
It's too many moving parts.
Well, do we have liberty?
We did on the previous system.
We didn't set up any VMs this time.
We don't have any VMs.
So we're only containers on this one.
And then net data on the host.
He missed Samba though, so you know, it kind of works out to be the same.
And actually, we haven't set up NFS yet.
Now that I think about it, we haven't really needed to because the rare occasions I just
connect over Samba now, like a monster, which is fine.
It works.
Yeah, it's fine.
I think I argue his premise.
I think a Samba ZFS Docker base is not too much.
Yeah, there's enough things that aren't, you know, exceptional, I guess WireGuard out of
the tree.
That'll be nice when it goes.
WireGuard on that list, too, right?
Yes.
Okay, that ZFS, I feel like ZFS is the biggest outlier is additional complexity in the fact
that it's, you know, it's kind of foreign as its own admin style and regime, right?
But we're we both used it for a long time, and I think are willing to adopt that.
I think it's funny.
It's funny because of our perspectives, because you and I and the audience, we really know
the source material.
But if you're an enterprise user from the outside, they would laugh at us because ZFS
is clearly more safe of a choice than ButterFS.
And here we're arguing that it's the riskier choice, because we're talking about it from
a kernel modules and update standpoint.
And they're talking about it from a data integrity standpoint.
And so it's not like we're talking about, you know, Larry's crazy open source project
here.
We're talking about Samba, Docker, ZFS, like production grade, impacts millions of people
if they screw up kind of thing.
So yes, it is a bit of a moving risk because there's a lot of pieces in there, but they're
all kind of enterprise grade pieces.
The other part to the thing we liked about Arch was was the simplicity in that we we
know exactly what we've installed on the machines.
We have a sense of exactly what we have to maintain and what's what isn't there to move.
It's so simple that both you and I in our head can we have it memorized, how it's set
up, how the partition scheme is laid out and what software is installed just off the top
of our heads.
And I particularly like how simple things like make package, you know, package builds
are in the sense of like if if we have a problem like, you know, the AR AR package goes missing
or isn't maintained anymore, those are all easy to build because they're laid right out
there.
We know how to use the tools that make up the distro.
That's I think the key thing.
And that's again, why I go back to we're doing this so you don't have to, because we're comfortable
doing those kinds of things.
We're comfortable booting into a separate operating system and then cherooting in here
and recovering and repairing it.
We're comfortable reloading kernel modules if they don't load properly after a boot,
etc, etc.
Most people don't want to fuss with that for good reason.
We want to fuss with this stuff temporarily, at least for a while.
So we can see if there are benefits, because what happened here was, is I said Fedora is
not a good server OS.
We can't use like like right here, like like Dooley says, I had no surprises hearing about
the struggles with Fedora.
No surprise to me.
That's a stereotype right there.
And I challenged it and we put Fedora on there.
And it changed the game.
That server went from an idle storage appliance to something that's fundamentally integrated
into our day to day workflow.
And it changes everything.
And so with that, I learned that I had a incorrect stereotype.
It was absolutely doable.
You just had to take the right precautions.
And I thought, well, what's the next big stereotype I have about how you run a Linux server?
And it was Arch.
It's not the distro.
It's how you use it.
Oh, my God, amazing.
So anyways, Linux Unplugged dot com slash contact.
Get your feedback in here, because I love having that.
And it's just it's a great source of conversation, too.
And even if we don't get it on the air, we always read it.
We do read it.
So Cheezy is going to wrap us up today with a command line utility that will finally allow
you to uninstall your browser forever.
Absolutely.
But before that, I'd just like to say I think you're still both savages for using Arch on
the server.
I mean, I get it.
I'm glad that you're doing it.
Like you said, you're doing it so that I don't have to.
No, no, no, no, no, no, no, no, no.
So look, you know, the thing about Arch is it's just taking Linux to its ultimate conclusion,
isn't it?
It's like the end game.
That's the Linux singularity.
What do you mean?
Well, you have full control over everything.
You know, if something doesn't work, it's your fault.
You know, with Apple, with a normal distribution, you're almost subscribing to like the Apple
style approach of letting other people make those decisions for you.
But with Arch, if something breaks, it's on you and it's your fault.
And I kind of like that about it.
There's also and I have a hard time articulating this, so I have not said it on air.
But I've tried to say it to Wes, and he knows what I mean because he's experienced it.
But there is something to the fact that if you're starting from zero, it's often easier
to get going than when you're starting from 80 percent done.
Right.
Well, you don't have to discover when you go on some systems, some distro, you're like,
OK, well, I know I need this piece.
How have they configured it and you configure it?
It's not configured.
And you're like, well, where does that matter?
Well, recently on my workstation, I needed to set up containers and I needed to set up
virtualization.
The Arch Wiki is so damn good.
And when you're just when you're starting with nothing, it's just a few commands these
days to get any of this stuff working.
And you don't have to wonder, like, how do I get it working in this scenario or in this
configuration?
It's not working.
So you just turn it on and you set it up.
And it's genuinely simple almost every single time.
And I can't I can't give that like a name or a phrase or I can't put it in like a catchy
way.
But it actually makes setting up complicated services like virtualization and containers
and ZFS and all of that stuff simpler.
Because you're just starting from a point of zero.
And I know that seems weird.
And I know that if you're if you're new to Linux or you only use GUI tools, that sounds
like some sort of heebie-jeebie command line nonsense.
But I swear to I swear to I swear to the command line simpler.
And because you always have the latest version of whatever it is, whenever you're looking
at some cool guide or some Reddit post or something else that got you excited about
doing whatever it is you're doing.
You don't have to go and compile anything because it's already in the repo.
I will give you that.
And I will say that I think that ZFS is the silver lining in this.
As long as you don't destroy the pool, I think everything will be perfectly fine.
So it did build the modules correctly before it rebooted.
We had the modules ready to go and we rebooted them right there.
Exactly.
All right.
So let's ramp up to a pick that I set up as a really with a completely ridiculous premise
to begin with.
Yeah.
So if you don't need a browser anymore, obviously you still need Wikipedia and maybe on your
pocket chip computer, you got a terminal.
Hey, I like it.
So this week's pick is Wicket.
It's written in Node.js and needs to be installed via NPM.
But it's a cool little command line tool.
If you just need to get a summary of a Wikipedia entry, it's super quick.
Wicket and then Linux or Wicket and Arch or Wicket and ZFS, whatever you're looking
for, you'll be able to pull that out really quick.
So for me, I'm an avid user of Wikipedia.
I love Wikipedia.
That being said, since it is the holiday season, you should consider if you've used Wikipedia
over the last year, maybe throw in a couple of bucks.
I think right now they're the average donation of like $2.75 will go a long way.
So check that out and donate if you can.
But Wicket is a great little command line tool that I suggest everyone pick up if they
are avid Wikipedia readers.
I mean, I just kind of like that.
I might not use it all the time, but it depends on your context when you can keep those context
switches down.
If it means I can just stay in the terminal, look up something real quick and get back
to what I was working on.
That's great.
So anytime you can do something in a drop down Quake style terminal, you gain a couple
of cool points.
Oh yeah, instant nerd cred.
Just Wicket.
Wicket real good.
Just Wicket.
Good pick, Cheesy.
Thank you.
That's pretty neat.
All right.
Well, I think that brings us to the end of this week's Unplugged program.
I say go get some more Wes Payne and Jim Salter.
Jim also writes for Ars Technica, so he's got a bunch of great posts over there.
I think Jim has a nice level-headed take on the recent Librem 5 developments, and he finally
gave the Eero Wi-Fi system a go.
I know, wasn't that great?
He likes it.
It was satisfying to hear because I've been waiting for him to review the Eero Wi-Fi because
it's such a weird product because of that cloud dependency, but yet such a solid freaking
Wi-Fi network.
It's so frustrating.
You can't argue with performance.
You can't.
So go get more of that at TechSnap.Systems.
And of course, you've got to get some brunch, extras.show.40.
Go listen to part one.
It got my wheels turning.
And if you've been around for a little while, it'll get you really nostalgic.
And if you've missed the early days of Linux, it'll fill you in on some really great edge
pieces of history.
So check that out at extras.show.40.
And last but not least, go check out my spotlight with Rocco, his YouTube channel, Big Daddy
Linux coming out on Wednesday right after the show goes live.
Thanks so much for joining us on this here Unplugged program.
We won't be live next Tuesday.
We'll have an episode for you.
So have a great holiday and we'll see you live back here January.
Sounds like a beagle.
Are you sick?
Wounded?
The Drifter in the chatroom massive will review last year's predictions.
You bet.
We've got new predictions in the can.
We've got a review.
I hope I do better this year.
Yeah, that will be coming out over the holiday season.
And there's like, I know there's a couple of wins in there, but I was just reviewing
them and there's also some embarrassing calls.
You had a really bold one.
I don't know if you remember.
I do.
Yeah.
Yeah.
So that's coming up.
Yeah, that'll be in a very future episode.
You got to go big and then eventually you go home anyway.
Yeah.
Yeah.
You went big.
Also, there's one where you got like unusually, you and I both did this once where we got
like really hyper specific, which I don't know why we did that.
I thought the judge sort of required that he was a little bit of a judge with a strong
ruling hammer.
Which is good.
We want that in the judge.
Bang, bang, bang.
Oh, Joe.
