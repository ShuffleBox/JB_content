Congratulations!
A big congratulations to the Linux Foundation.
They announced a game engine today.
Did you see this, Wes?
I did.
Very exciting.
Apparently donated from AWS.
Oh, very great.
There's no version for Linux, though.
Not yet.
I mean, they're working on it.
Of course.
I mean, at this point, it's kind of the corporate friendly
software foundation, right?
Oh, hey, friends.
Welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Wes.
Is that a cheese steak you've got there?
Unfortunately, none for you.
No, no.
I thought we'd talked about this.
Well, this episode is brought to you
by the all-new Cloud Guru.
They are the leader in learning for the Cloud
Linux and other model tech skills.
Hundreds of courses and thousands of hands-on labs.
Get certified, get hired, get learning at acloudguru.com.
Well, coming up on the show today, we all know it's true.
We hate to admit it, but the Linux server
is what makes the money.
It's not the desktop.
In fact, it's where all the corporate sponsored,
for the most part, nearly all corporate sponsored development
time goes.
But there has been a change and something we've
covered on the show before.
And Linux server admins don't really
know where to turn next, especially those that got
themselves all caught up in the Red Hat ecosystem.
They are stuck between some hard choices.
And if you go by apparent community size,
Rocky Linux has a lot of momentum at this time.
But this choice is a critical one,
and we thought we needed to consider the entire picture.
So last week, we ran a new segment on the show
that we actually cut.
And we cut it for completion's sake
because we decided we wanted to play it in today's episode.
And it provoked a strong discussion
after the show that took place after we
stopped the official recording.
And we thought we should take both the new segment
and the response to that new segment
and play it in one single episode for you.
This week, we're going to play that cut information,
that cut story, and that response.
And we hope that after this episode,
you're going to look at the Linux server landscape, which
is exceedingly important for something that we all love.
We hope you're going to look at it a little differently.
Even if you're not an admin yourself
or in the Red Hat ecosystem, I think
there's some questions that get posed that we should all
listen to and all consider and stuff
that those of us who've been using Linux for a long time
know at our core is probably extremely critical.
So we're going to get to all of that.
We're going to have some community news.
But first, we have to say time-appropriate greetings
to our virtual lug.
Hello, Mumble Room.
Hello, Mumble Room.
Whoa.
There's a lot of you in there.
Great to see all of you.
Thank you so much for making it.
Shout out to Poppy and Wimpy.
We haven't seen you for a while.
Welcome back, gentlemen.
Nice to be here again.
Absolutely.
And we hope that you're having an excellent day
and had a great weekend.
I set off for a little adventure this weekend.
And I have some good news and some bad news.
It's going to be another little quick story time
before we get into the show.
Stay a while and listen.
So I decided to spend the 4th of July out in the woods,
let Levi kind of get away from the fireworks
because the little pup doesn't really like all the explosion.
And well, I'll tell you the bad news first.
The wife lady and I were heading off, going to go get set up.
And we kind of just, even though we know better,
even though we're not noobs anymore,
we made some critical mistakes.
And as we were leaving from our home base,
we kind of were in a rush and didn't pay attention
to a couple of things.
And like a good boy, I thought I had everything figured out.
I knew I was in a rush, and I knew I was in a time crunch.
So I went around, and I tried to make sure everything
was all put away.
I collected all my tech gadgets and put them
in a little basket and made sure everything that was stowed
need to be stowed.
And I thought, OK, I was doing everything.
And my wife, Adia, she's in a car behind me.
I'm going down the road in Lady Joops in the RV.
And I'm thinking, this is going to be a great trip
because we're going to test some stuff for the road trip
to Salt Lake City in Denver, get an idea how the power
system is still holding up after a year or so,
really put everything through its paces.
And I'm about 25 minutes or so into the drive,
and I'm pulling off the highway into a gas station.
And I hear a rush of water behind me.
And I turn around, and I find an indoor tidal wave
rushing down the center of Lady Joops,
like a wave of water coming at me.
Thankfully, I was already pulling off the highway
because I had to jump into action.
So I pull off.
I park the RV immediately.
There's nearly standing water in the RV at this point,
total worst case danger zone for RVs.
So I was rushing into the back.
I can almost instinctively figure out what's happened.
I think I already know.
And as I'm getting back there, I hear the bzzz, bzzz, bzzz,
which is our water pump as it's pumping away and pumping away.
I open the back door.
It's kind of like this one move.
I open my back door, and I flip off
the water pump, which should have been off,
a critical mistake.
My eyes knew exactly where to go.
I look right at the sink that I'd put my tech basket in that
had all my gadgets.
Every charger I have, every brick, a game controller
we have, a tablet, everything.
Just put it all in this basket, and everything
was floating in a bath of water because the water had been
pouring right into this basket.
And I look up, and my old 2013 MacBook Pro
had slid across the counter.
It runs Arch, by the way, and hit the water handle
and turned the water on.
And it's a heavy old laptop, a big, old MacBook
from the older days when they were thick and heavy.
And it slid off and hit the handle in just a way
that it managed to turn it on.
And it must have been going for almost 15 minutes
because we managed to pump somewhere between 15 and 20
gallons of water into the RV.
I mean, first it filled the basket.
Then it filled the sink.
And then it just started overflowing and overflowing.
And we spent about an hour trying to get all that dried up.
And man, all of the gadgets are pretty much wrecked.
In like one fell swoop, I basically
took out nearly every gadget I own, not my phone,
not my ThinkPad.
But everything else essentially got
wiped out in this one moment.
It's like your own water-based EMP device, betrayed
by your own MacBook, no less.
This is horrible.
My old trusty 20th, you know, the one I walk, the one I'm like,
this is how they used to build them,
with a good keyboard and ports.
And it runs Linux.
And now that bastard, it wrecked everything.
And of course, it's still good to go.
Oh, it survived?
No way.
Yeah, it survived.
Yeah, it got a little bit of water on the screen.
But I let it dry, and it's working just fine.
I can't believe it.
Five days later, everything in the RV seems OK.
We got it pretty dry.
Thankfully, we were already pulling over.
And my wife was in the RV with me
within minutes, getting everything wiped down
and all of that.
So wow.
But just to have like, you know, like I had a fire tablet
that I had been carrying around because I use it
for Home Assistant.
And I was walking around, turning off things,
and setting automations.
And I set it in the basket.
So this guy just didn't want it to be loose.
Gone.
Wasted.
All of it.
Just wasted.
So that's how I started my 4th of July weekend.
But I do have some good news.
Good news, everyone.
While my slide issues are not fixed yet,
and I was hoping to get them fixed before the Denver trip,
thanks to Virtual Lug member Kernel's help right there,
he turned me on to the Vroom system.
And I've contacted the creator of the Vroom slide system,
who is an RVer, like me, who had the same slide system I do.
And it broke on his first trip.
And he's a mechanical engineer.
And he just said, screw it, I'm going to build a better system.
And now he has.
I don't know if very many people have ever installed these
before.
It looks pretty new.
So I'm kind of rolling the dice here.
But I'm hoping it's going to be like the final solution.
But the issue is, you know, with the way the timing worked out
with the upcoming road trip, we're
not going to get in there until after the road trip.
So that means all through Salt Lake City and Denver.
And until September, we're not going to have a living room.
But the road show will go on.
And we'll still have a great time.
We'll still make content from the road.
It'll just be a little more cramped.
You want to come and stay in there, right, Wes?
Of course.
While you're beta testing a new slide system, no problem.
Bring the dogs, too, Wes.
We'll just have a big old sleepover.
So yeah, there you go.
That's what's going on.
People have been asking for an update.
I wasn't really going to cover much.
But that's some progress, at least.
I want to get to the community news this week.
And let's start with IBM's president and former Red Hat
boss, Jim Whitehurst, stepping down.
Just about three years on the nose
since the announcement of the IBM acquisition.
And that president position at IBM
is the classical position someone takes in the company
before they become CEO.
So a lot of us expected Whitehurst was in line
to be CEO.
In fact, the board had arranged it
so he would become president.
So it kind of seemed like the board was preparing
for Whitehurst while there was an interim CEO.
And Wall Street seemed to like this idea as well,
because when the news was announced on a Friday,
IBM stock dropped 4%.
But now IBM's chief and interim CEO
is apparently becoming the permanent CEO.
Avid Krishna has managed to work at IBM since 1990, 31 years.
How about that?
Old-timer, yeah.
Yeah.
And it's kind of wild.
The Financial Times, which sometimes has a paywall,
depending on how many times you've clicked a link,
but they have an interview with Krishna that is, wow,
is this telling.
He was going to be the transitional exec,
but then it seems, with this Financial Times interview,
we'll have a link to that, it seems
like maybe he worked with the board
to work Whitehurst out and become the new CEO.
And there's some quotes in here that are remarkable.
And the article says that IBM is now doubling down
on IBM's current path under Krishna's leadership.
Quote, this is Krishna.
He's done amazing for us, but he wasn't
going to be here forever.
Speaking in the interview with Financial Times, he added,
acquired CEOs normally only last a year or two.
And then he went on to suggest that,
while he had been in the running to succeed him,
any hope of that had been dashed as the company's board has now
backed him in the next stage of IBM's overhaul.
And then he points in the interview
to the fact that the board had named him as chair
of executive earlier in the year as a sign of that
was backing him, and that the shakeup now
is about building a leadership team to take IBM where
I'm leading it, he says.
He's got an idea, he's got a vision,
and it wasn't Whitehurst.
It's his vision, and it's all about the cloud.
This Financial Times interview basically
makes it sound like Krishna worked Whitehurst out.
It does, doesn't it?
I mean, it's quite telling.
And especially when you think of Krishna
being one of the people internally who was pushing
for the Red Hat acquisition, you got to wonder,
maybe this was part of his personal plan for a long time,
and it seems to be working out for him, at least.
Yeah, everybody always says that Krishna
was the one that was pushing the CEO at the time
for the Red Hat acquisition.
But if you've ever worked in a big company,
you know what I'm about to say rings true.
Big companies are really good at grabbing
on to a narrative that's out there right now
and spinning it to make the new leadership seem competent.
And so the Red Hat acquisition was still fresh.
It was still new when he was the new interim CEO.
And it just seems natural to me that a 110-year-old company
that knows how to message would latch onto a narrative
like that and use it to promote the new boss,
regardless of how true it may or may not be.
So I don't put a lot of stock in the idea
that Krishna was the man behind the merger.
It's definitely possible, but I feel
like that's gotten a life of its own that I don't completely
agree with.
I'd like to see some proof of it,
because what I've seen here is a 30-year-long company
man who is well-liked and has done good in the cloud
division.
But he seems very much like a traditionalist in this space.
The Mayor, I know you want to jump in.
I want to give you a chance to sound off.
I helped Jim Whitehurst when he transitioned
into CEO at Red Hat.
And one thing, one time I was traveling with him,
and one thing that he told me was,
and I think this is kind of the same thing that's
going on here.
When he was at Delta, he sort of thought
that he was in line to be the next CEO as well.
And then once it became abundantly clear
that they weren't going to tap him for that,
he was basically out.
And he's a very ambitious guy, and he has his vision,
and he has his leadership style.
And I think that he just doesn't want to be in any other position
aside from the top.
So I think that's pretty much what happened here exactly
again.
Yeah, and it's telling that it's three years on the nose, which
maybe suggests there was some deal in place.
And when that had wrapped up, and he
wasn't going to get the job he wanted, he decided to leave.
And I think that the mayor, thank you for that insight.
He's, if you don't know, because it
was cut from last week's episode,
but it'll be in this week's episode,
the mayor is the community manager over at Alma Linux.
And so he has some insight into this world.
And when Jim was at Red Hat, after the acquisition,
a lot of us in the community thought, OK, well,
he's kind of like a firewall.
Between a 110-year-old company and a young,
modern Red Hat that has to be super flexible.
And I worry that with Whitehurst gone,
that leadership firewall that defends the culture of Red Hat
is also gone.
And I think that the traditional model of IBM
is not compatible with the innovative model
that Red Hat has to use.
And I grabbed a couple of clips of Whitehurst from a TED Talk,
just a couple of short clips, we'll link the full talk,
that really encapsulate what I'm talking about here.
And this is a clip of Jim Whitehurst explaining
the culture shock that he felt just a couple of weeks
after he left Delta and switched to Red Hat.
It was not like any other traditional large company
he'd ever been at.
I began to realize something significant was happening
my second week on the job at Red Hat.
I was in a meeting talking to the team about our strategy
for an area called virtualization.
For those of you who aren't in technology,
virtualization was the thing everybody
was talking about before they were talking about the cloud.
And through this, I had the senior team
and a bunch of the engineers kind of walking
through our strategy and the what's and the whys of it.
And about halfway through the meeting,
one of the engineers, one of the most junior engineers,
just took a pause and said,
look, I know this is what we're doing,
but this is absolutely the wrong direction.
And he didn't stop there.
He kept going and going and going
about why we were wrong and how wrong we were.
And I'm looking across the room
because this room had his boss and his boss's boss
and his boss's boss's boss waiting for a reaction.
And there was a reaction,
I would call it a point and counterpoint,
which is a very polite way to say we had a huge argument.
But at the end of the meeting,
everybody walked out like this was normal.
Now, I'm two weeks out of being
in a very traditional organization.
And I have to tell you, I was sitting here thinking
this is the most bizarre thing that I had ever seen.
I would hazard at Delta and frankly most large organizations
and many of you know what I mean here,
if a person to the CEO in front of their boss,
their boss's boss and their boss's boss's boss said
what these people are doing is completely wrong,
that person would have clearly been fired
by the end of the day.
And to be honest, maybe killed before the end of the meeting.
But everybody acted like this was normal.
And I remember going home that night and talking to my wife
and I said, I have come into this most bizarre,
strange company.
I've clearly been brought in to clean it up.
And it wasn't just this, a couple of weeks later,
I asked about doing a research report in an area.
And a couple of weeks later, when I asked about
where that was, the team very happily and merrily said,
yeah, we thought it was a bad idea.
So we decided not to do that.
So first I really like, what's like,
do I have like a mutiny on my tab?
But they're so friendly and they're like positive
about not doing what I told them to do.
And so before I had a chance to impose
kind of the traditional management structure,
which I had learned so well and honed so well,
I thought, well, you know what?
Red Hat's been really successful before I got there.
I at least need to step back and observe.
And so my management consulting kicked in
and that's what I did.
And I have to say, I felt a little bit,
like an anthropologist tossed into some odd ecosystem.
And I really had to hold myself back
from wanting to inject myself.
And I have to say the first few months at Red Hat
were, I think it's fair to say shocking.
It was just so different than anything
I'd ever been used to.
And I realized my role as a leader
was going to look nothing like
what I'd been used to in the past.
My role as a leader would look nothing like
what I was used to in the past.
And the other thing he says in there is that
when I came in, I started to think
my job was going to be to clean this up.
I think that is such a typical manager reaction.
And I don't think it is a typical reaction
to think maybe I'm the one that needs to change.
I think that's anti-typical.
And so when I look at IBM and I look at their leadership
and I look at their culture and I look at the fact
that they're 110 year old company,
I think maybe people running IBM
are not the right people to run Red Hat.
When I look at Red Hat, they're a young innovative company
that's had to be extremely adaptable.
This had to respond in internet time.
IBM has failed to do that.
That's why they don't have a stronghold
in the cloud right now.
That's why they needed to buy a company
at the expense that they paid for Red Hat.
Like they were desperate.
It was a desperate move.
And Whitehurst touches on one more thing.
He follows up on that story and it's a demonstration
of the kind of agility you need to have to run Red Hat.
Let me come back to that story about the engineer.
About three months after that initial conversation,
so I was about three and a half months on the job,
that same team came back to me and said,
you know what, it turns out he was right.
Circumstances have changed in the marketplace
and we need to now go pursue this other direction.
And by the way, we need to go buy a company to do it
and we need to go do that quickly.
And so let's get going.
And that all happened without me asking it to be revisited
or from some planning process.
It just emerged as circumstances had changed
and so we needed to change direction.
I think it's important that the people in that room,
not a single one of them, was apologetic or defensive.
They weren't like me.
They had been there for a while.
They recognized that in a volatile,
more dynamic environment, when circumstances change,
you have to be ready to change.
So success isn't about having the best ideas
or making all the right decisions.
Success is making a lot of decisions,
but being open and transparent and non-defensive enough
to be willing to change those decisions
when circumstances warrant.
That's what's key.
And I fear, although I have no guarantee,
I have no way to actually know for sure,
but I fear that perhaps IBM's leadership
won't be up to that particular kind of leadership challenge.
And if that's the case, it gives me concern long-term
about what kind of impact that could have on Linux
and particularly some of the projects
that Red Hat's involved in
that are the harder bits of work on Linux.
I want everybody to get a chance to jump in.
Wes, did you have any thoughts on that
before I go to the virtual log?
It's sad to see a strong and eloquent person
who can kind of describe open source
and how open source can work with business
and all of the interesting insights
that you just highlighted.
That was a big voice within IBM,
or at least people that had to take him seriously
while he was there.
So I think you're right that there are at least fewer
of those advocates now.
Right, and I do worry that as mergers go,
that could be a bad trend, but maybe not, we'll see.
Perhaps IBM will simply just have too much going on
to care what Red Hat does.
Neil, what are your thoughts?
So I wanna bring up the counterpoint
that you can't be 100 plus years old
and not be able to have an adaptable bone in your body.
Companies don't survive for more than a century
by staying still.
They learn to react, they adapt and do things.
While I'm a little concerned personally
about Jim Whitehurst leaving,
there are all kinds of unrelated reasons
why he might wanna leave.
Maybe it is about like not being at the top like Jack said,
but it might also be the great resignation effect.
There are lots and lots of people
changing their focus in life.
But I will say that about IBM is that
being over 100 years old means you have to make pivots
and changes and adapt at a level
that most companies can't do.
And I haven't met Arvind Krishna.
I don't know anything about him,
but I would imagine that being at IBM for 33 years,
that means that he's seen IBM shift in major ways
over the past three decades
from doing mainframes to personal computers
to software services to business consulting
to the cloud and managed services
and all these sorts of things.
Like there's a ton of pivoting going on
in those three decades.
Maybe they weren't all successful,
but I think the more important aspect
is that IBM is still here and they still keep trying.
And yes, there's still some cause for concern.
I'm a little worried myself because Red Hat
is a fantastic leader in free and open source
and they do a good job of adapting
to their realities on the ground
and working to provide high quality solutions.
But that's not to say IBM can't do that too.
I think it's more of a question of whether Arvind
when he, as being the CEO of IBM
will actually learn from the Red Hat folks
about how he should handle the Red Hat business unit.
Cause you know, like it or not,
Red Hat is a business unit of IBM,
semi-autonomous and could run on its own.
It has its own legal, has its own HR,
has its own finance, has its own executives.
IBM runs it somewhat independently,
like a lot of the other business units.
That's why they're business units.
So I would be mildly concerned,
but I'm also more of the wait and see camp
and we'll see how it goes.
Like IBM has been around for over a century.
They've gotta be doing something right.
Yeah, I think that's pretty reasonable.
That's a reasonable position.
And it kind of makes me hopeful
that they will let Red Hat be Red Hat
and continue to do their thing.
Because I think the whole ecosystem thrives
when we have really strong companies that are like,
I think of Canonical in that group
and I think of SUSE in that group
and I think of Red Hat kind of in this class of companies
that are doing some of the really hard work
that has to get done to make Linux a contender.
And we just want as many companies
in that mix as possible, I think.
And I hope that Red Hat can continue to do that.
And so that's why what we're about to talk about
is just, it has so many knock-on ramifications.
And this is part of, I think,
why the choice has gotten harder for server admins.
And I go back to just how critical
the server space is for Linux.
So it's with this change in leadership
that we're going to continue the conversation
in this episode.
But first,
linoad.com slash unplugged.
Go there to get $100 in credit for 60 days
on your new account and support the show.
Linoad's also making our road trip possible
for our team reunion.
We're going to all get together in Denver.
You're invited to Salt Lake City and Denver
to meet up with us.
Linoad's going to be there in Denver.
They're going to have a spot.
They're going to be giving out some swag
and perhaps some treats and goodies too.
So if you're going to be in the Denver area,
come out and say hi to Linoad.
They'll join us out there
because they are helping make the trip possible,
including some of the tech we'll be using
that we'll be talking about in a little bit.
I don't really actually, I don't know when yet,
but I'm working on it.
I'll tell you soon though,
and we'll tell you how they made it possible.
So go to meetup.com slash Jupiter Broadcasting for that.
And go to linoad.com slash unplugged
to get the $100 in credit for your new account.
We're hosting everything for JB 3.0 on Linoad.
I started using them almost three years ago now personally
because everything for JB was on different providers
and different infrastructure.
And I wanted to set up something for myself,
for like game servers and SSH
and just like my own set of things.
And I had seen Linoad around forever
making community events like our team reunion possible.
And so I knew that they were in the community events
that were like actual, real, true community events.
You know, not just like events that are put on
by like large corporations,
but the whole range of ones where like,
it's just a small community and Linoad had a booth there.
And there was an event I was at
where like they were the one booth
that was like really kind of taking the event seriously
and had good stuff and making great conversation.
While some of the other vendors
weren't even staying at their booth,
they were just like off snacking on barbecue.
And I remembered thinking like,
well, you know what?
Linoad's really putting effort into this.
And they had a good looking booth and they had it down.
And I thought, I'm gonna try them out.
And so I did, and I didn't get $100 in credit.
I paid with my own monies and I loved it.
I thought they had the best dashboard out there.
It was nice and clean.
They had the fastest VPSs out there.
They got 11 data centers to choose from.
They've really got the system dialed in.
People often ask like,
well, what's the number one reason you switched to Linoad?
And I suppose maybe I might say
it's probably because of speed, maybe.
But now that I've used it for a while,
it's really because I trust running our production stuff
on Linoad.
Like when it has been crazy hot here
in the Pacific Northwest recently,
I am really glad that the stuff that makes it possible
for you guys to get our shows
and all of the services that support
the production of our shows,
I'm really glad they're up on Linoad.
And you can get a system for like $5 a month
and they're 35 to 50% cheaper
than the major cloud providers out there.
And it was like 120 degrees recently in the studio garage.
I just had to shut down our NASA, I just turned it off.
I turned off the modem too.
I mean, it was like 120 in there, right?
Meanwhile, the Linoad systems are sitting there
in their perfectly temperature controlled data centers
with their 40 gigabit connections,
just humming right along, you know?
And like, there's a lot of reasons.
So go try out the $100 and see what you get.
You know, play with it.
Just experiment like I did originally.
I was just curious.
I wanted to try it out,
but now you can do that with $100 for 60 days.
That's great.
And you can really put something up there
and really bang on it and see what it can do.
So go to linoad.com slash unplugged.
Get that $100 for your new account
and you support the show.
There are a lot of different options for hosting,
but Linoad does it all.
And they do it better than everybody else,
including their object storage, their interface
and their fantastic customer service.
linoad.com slash unplugged.
So let's get into the story that we cut last week.
We didn't cut it because it was like so spicy
and, you know, Wes, well, I mean, Wes did swear a lot.
That happened.
Yeah, I know.
I came in a little hot, whoops.
You get fired up about enterprise distros.
That's your thing.
I do.
Yeah.
And we actually were just gonna play it on the show.
It was normal because we were just talking
about Rocky Linux's 8.4 Gold Master.
And it was, you know, they'd hit their main release
and that was a good moment.
We were happy for them and thought, okay,
let's get it in the show.
You know, we'll have this,
we'll document the moment they actually hit the release
because I felt for a long time that the long tail
is what's really gonna reveal
if these enterprise distros are standing up.
Like what I mean by that is it's like a three
or four or five year game
before you're gonna have a really good sense
which one of these is a RHEL replacement, right?
This is the enterprise we're talking about.
But we wanted to cut the segment anyways
because we felt it was better in completion
to play the segment itself.
And then the reaction we got a little bit after that
that we felt was like a really good transparent conversation
that was informative.
And so we started the coverage.
I'm gonna play it for you now.
Talking about the initial response
that Rocky was seeing from their release.
Yeah, sounds like within 72 hours of that launch,
Rocky's assets have been downloaded nearly 70,000 times.
Hey, that sounds like some excitement out there.
Yeah, and that's from the mirrors
that they can get numbers from.
That doesn't really count trackers for torrents
or maybe other mirrors that are just providing downloads.
This post also took some time to clarify a little bit
about the structure
of the Rocky Enterprise Software Foundation
which is a public benefit corporation formed in Delaware,
where else, right?
Backed by a board of advisors with access control policies
that utilize the principle of least privilege
and separation of duty
so that no action can be taken unilaterally
not even by the owner, Gregory Kurtzler.
So it sounds like there's some work here to try to say,
look, yes, we're trying to do this above board.
Here's how our structure is.
You can decide if you like it.
Yeah, and so there's two key bits of information
in what you just told us there.
Number one, they're a public benefit corporation.
Now that's different than a charity, but it's notable.
We'll come back to that.
And number two, they are clarifying
that Greg is the legal owner of that foundation
and of Rocky Linux.
And so the way a public benefit corporation works
is after you've spent the money on what the project is,
the additional remaining revenue, the way I understand it
goes to pay out the staff, including the owner.
That's just important to note
because when we're looking at these different distributions
and there's gonna be several of them,
we need to understand how the entire structure
around them works.
How does the support model work?
How does the public governance model work?
And what is the revenue angle for each participant involved?
And so we start now to get some insights
into what maybe could be the revenue model.
That doesn't mean that Rocky Linux isn't great
and that it's not gonna be a fantastic distribution
because don't you want the people involved
to be living happy, well-off lives?
I mean, if they create a well-loved product
that is successful in the market,
it seems fair that they should
have a comfortable living from that.
So I don't really have a problem with the structure,
but I felt like we just didn't have a lot of clarity
in the past around the structure.
And now we do.
And now I feel like all the cards
are out there on the table.
Well, now it matters, I think,
how they actually communicate, right?
We've got this little clarification here,
but really what it comes down to is like,
if you're asked to give money to this foundation,
if you're trying to support things,
is it still made clear to those in the future, right?
That's a great point too.
And as long as we're all clear about it,
I say more power to them, move forward.
And I hope we continue to see this pattern of transparency.
And I think we've also witnessed a bit of a tweak
in the Rocky Linux's approach to community.
They seem to be pretty passionate.
I've heard from a couple of them
who wanted to kind of allay some of my concerns
and they approached me with a very reasonable,
friendly dialogue.
And we exchanged a bit of a back and forth
and I had a good experience there.
And so I like that they're taking those steps,
but at the same time, we have to sit back
and kind of watch and see how all commitments are met,
how this thing plays out for a long time
before any one particular winner is declared
as the traditional CentOS replacement.
Because really, the game is still afoot.
And this is just the starting line right now
with Rocky Linux hitting version 8.4.
We're just getting started.
Yeah, we'll see you in like four years, I guess.
Yeah, maybe, right?
I mean, Enterprise 7, I don't know how long you wait.
I think you just sort of sit back and watch, I suppose,
but it is a tricky one.
Now, you might not expect it,
but that topic provoked quite the response
that we thought needed to be in the show.
Alma Linux's community manager joined us
and shared his perspective after we wrapped up last week.
So the following discussion took place
on the live stream after the show.
And just a note, we have reached out to Rocky Linux.
I emailed their community contact
and invited them on the show.
I haven't heard back from them yet,
but that invite does remain open.
I think that it's kind of important to note
that the situation there seems a little bit problematic
because you're not any better off
than when Red Hat owned Centos, right?
I mean, it's still owned by one entity, by one person,
and they can decide to do whatever they wanna do with it.
Now, they can say that, yes, we have a board of advisors.
By the way, advisors are not directors.
So it doesn't mean that they really have
any particular say in what happens.
And then they can decide to do
whatever they want with it tomorrow.
So you're not any better off than when Red Hat owned Centos.
I think that's a very big problem.
Yeah, I suppose people would just argue
that they have more faith in the mission
of the Rocky Foundation than they do of Red Hat
to steward it, I suppose.
I guess that's their decision to make,
but yeah, it's a fair point, right?
So in the contrast with Alma Linux,
just for an example,
how would the decision to end producing the distribution came?
Say it's 25 years down the road
and everybody's using Fusion now.
How would that process work
with the governance model of Alma?
So we have a board, a governing board.
It's an open board.
We're gonna announce additional membership guidelines
so that additional people can join that board.
Think the plan is to ultimately have that be at 13 members.
So it'll be a nice mix of people from within the community
versus corporate interests as well.
And really just anybody that has any interest in the distro.
And then, let's say 25 years down the line,
we decided that we wanna stop making the distribution.
That's a decision for the board to make.
I'm assuming it would be proposed and there would be a vote.
And if the votes came back,
the majority or whatever it is
that we decided to do to vote on it,
and that's what the board wanted to do,
then things would wind down.
It's a vote process basically there.
Yeah, I mean, it's a real community process.
They're people that have an interest, have a say,
they get to decide what happens.
We're all in this debacle
because that's not how Santos originally was.
Or not originally, well, once Red Hat took over,
that's not how it was.
There was one party that held all the keys
and that's not really changing at all
with Rocky's governance model.
So some people might say, I think it's great
that they're trying to make money off it
and that this is the way they set it up.
But I just think that as a community,
we need to look a little bit more broadly
and think about what we value.
And to me, at least that comes back to
community ownership, stakeholder ownership,
the community gets to drive and decide what the future is.
That's really a very, very important point
that I think many people may not realize yet
and they may be purposely turning a blind eye.
As you touched on there,
isn't it like, doesn't the composition of that
kind of matter, like if it,
I could imagine a version where the corporate interests
were dominating that if they had the voting control set?
I can kind of speak a little bit about this
because the OpenSUSE project is structured similarly,
though it is of course owned by SUSE
and not legally separated, blah, blah, blah, blah, blah.
The board is actually set up in such a way
that it is not possible for a single corporate entity
to have majority membership in the board.
And whether that's good or bad,
one thing that rule basically preys on the thought pattern
that companies don't actually like
working together very much.
They have a hard time figuring out
how to collaborate at a business level.
And by making it so that there is not a path
for a clear majority for any particular company,
they would essentially have to build a coalition
to make something to happen,
which means effectively the community
would have to have a say in it
and would have to agree to it anyway.
Is there kind of a protection against one particular entity,
perhaps Cloud Linux,
having significant influence on the board like that?
Yeah, so we're actually in the process
of putting together the membership guidelines
for participation on the board.
And that is definitely one of the principles there.
I mean, our plan is to completely dilute Cloud Linux.
Like I know when things first came out,
like everything in the press said,
Cloud Linux, Cloud Linux, Cloud Linux.
Well, that's because Cloud Linux started it,
but the plan is to totally dilute Cloud Linux
and exactly like Neil was talking about,
it should be based off consensus
and based off what the community wants.
So that's totally what we're planning on doing.
Okay, so it sounds like it's not fully firm yet,
but it's getting worked out.
Let's say the board now was always meant to be provisional
because first of all, we need to form a structure.
Legal documents need to be filled out,
bylaws need to be set up and accepted.
So that was all meant to be provisional
while we work on the membership essentially.
And then once we have the membership in place,
that's when we'll have elections
and we will invite everybody
to participate in those elections.
Okay, I track your point earlier too.
I think when you see the reaction that we saw
when Red Hat announced that they'd be discontinuing
the traditional release model of CentOS,
people reacted in a way like they were shocked
at the arrangement.
Like all of a sudden, the reality of the arrangement
hit them right in the face.
And it does feel like one of the lessons learned
when you're looking back at that initial shock is,
oh yeah, there was a single entity
that was in total unilateral control ultimately
that could make decisions like this.
And if we are gonna move to something else,
and I think that's why a lot of people
looked at something like Debian,
even though it's a significantly big transition,
I think people looked at Debian and said,
that's a governance model that perhaps insulates
from these kinds of surprises.
And I think, so your point that you're making is,
if you're gonna move to another system besides CentOS,
and you're looking for CentOS like compatibility,
the governance model is something you need to consider
because that was what ultimately bit everyone
in the butt originally.
And if people are able to look at the board structure
and see that while cloud Linux is involved,
they don't necessarily control things,
that I think could be a really big deal.
But you have to, you're right in the sense
that you have to make people aware
that it's something they even need to consider
because right now, what Rocky Linux has,
I think going for it in a pretty powerful way
is this narrative about one of the original co-founders.
And because the original co-founder of this original idea
is involved, that makes Rocky Linux significant.
Now, I can't really throw shade on them
for leveraging a positive spin,
a narrative that they've been given.
Like that's, they've been given a gift in that regard
and they're using it.
And I can't really give them a hard time for it
because that's, most people would.
Yeah, exactly.
Well, I don't think we should give way to any spin
because I think the truth is the truth.
And I don't wanna get into that right now,
but there's certainly been a lot of spin,
which I don't wanna, that's not what I'm about.
I'm about building bridges and about doing the right thing.
And I think that for anyone that cares about free
and open source software and cares about the community,
look, I get it, I understand.
People want free RHEL, right?
That's what people want.
And that's why everyone was up in arms
because people like RHEL and people want RHEL to be free.
But I think if you really care about community
and you really care about free and open source software,
and you really care about this movement
that took close to two decades to build,
to get to where we've gotten,
I think you need to really take a solid look
at what are the leadership structures?
What are the ownership structures?
And ask yourself, what does that really mean to me?
If you're all about just getting free software
and just taking it and running with it
and doing what you wanna do with it,
then I hear that argument too.
But I think if you really care about things,
you need to take a deeper look
and really ask yourself what values you stand for
and what this all means to you, and then make a decision.
Yeah, and this is something that has bothered me a lot
about this whole Sandhouse conversation as well, right?
So I work in Fedora and I work in OpenSUSE
and I work in CentOS,
and all three of those are owned by corporate entities
that don't really have formal legal separation.
And everything is just like a promise more or less, right?
I work under that structure as it is today.
In general, I am fairly comfortable with that
because if you understand the dynamics
of what's going on in a particular,
in the developer side of the community,
then it tends to be fine.
So in Fedora, we don't really have those conversations
anymore about Fedora being its governance
being problematic or whatnot, because it's clearly not.
It's clearly been fine for almost 18 years now.
It's not an issue anymore.
For CentOS, the thing with them is
throughout most of its history,
and I don't wanna name specific examples,
but throughout most of its history,
it has had a very troubled governance,
even before Red Hat.
It has had a very troubled governance.
It's been a very difficult project
to maintain and bring up.
And you can go back and see the specific examples.
But today, something that's been consistent
with the CentOS project is that the CentOS project
wasn't a project for contributing to.
Like when Lance Davis created the project
with the others, including Greg,
they made it really to be a platform
that they would consume to bootstrap Chaos Linux.
And Chaos was supposed to be the real platform in the end,
and nobody was interested in Chaos.
And so CentOS won out because people just wanted something
that they would use and didn't really wanna contribute to.
And that particular mindset stuck through
as CentOS broke out of Chaos.
And that also opens up the question,
like as Jack said, what are your values?
What do you stand for?
What are you trying to achieve here?
The biggest problem that I've always had with CentOS,
the reason why it was never interesting to me
up until a couple of years ago,
is that there's nothing I can do with it.
It was not meaningful to me as someone who wanted
to make the free and open source software better
and more accessible and all those sorts of things.
The CentOS stream effort changes that dynamic
and makes it possible to do that sort of thing
without really breaking the stability promise
that they offer.
And the problem that I have with how all of this stuff
has been going down is that nobody is thinking of it
in the sense of what would make the community healthy.
It's all about, what did they screw up for me?
Because it is not sustainable to have one
and maybe half a person building an entire distribution
by themselves for everyone to consume
and then complain about when something isn't exactly right
or whatever.
Building a Linux distribution is super difficult.
And I think people had expectations
that they shouldn't have had in the first place.
And I know from personal experience
that the substitution effect is real.
And that substitution effect has created a lot more damage
than I think people actually know.
Like I don't wanna get into specifics about it
because that's really complicated and kind of gory
and that's not what I'm here to talk about.
But I think this as disruptive as it is,
is a good course correction.
Like I sit in both the Rocky and the Alma communities
and as well as being in CentOS,
working in the Hyperscale SIG and stuff like that,
which Hyperscale SIG,
a thing that was never possible before now.
Like that's a huge win.
I've talked to the Alma Linux folks, Jack and many others,
and something that stood out to me was Cloud Linux
and other people participating in the Alma Linux community,
first and foremost are actually engineers
that know how to solve problems and they write code
and they have a business that supports all this stuff.
And they have set up themselves
so that they will be able to contribute directly
to CentOS Stream and to RHEL
whenever something is broken with something from Red Hat.
And that is something we have never, ever, ever had
with a RHEL clone, ever.
Really a new era, huh?
Guys, that's a driving principle for us
that everyone should know that.
I think that there is a ton of good that can be done now
that could not be done before.
And I think that we're not only looking to benefit
from the downstream portion of the relationship,
but we really solidly feel and Neil has seen this
and he's spoken to people about it.
That needs to be a driving force
about what a good CentOS replacement distribution
needs to become in order for the community
to maintain its health.
And I think that that's one of our guiding principles.
I hadn't really considered the fact
that your role could be a significant contribution
to what ultimately will land in RHEL.
And by doing so, you'll be able to solve problems
not just yourselves, but other RHEL users.
And because the way the CentOS stream model now works
is people can now make an impact at that point
that'll ultimately end up in RHEL.
And that being open like that,
I think is the aspect of this transition to CentOS stream
that the community hasn't realized yet.
I think until we've moved past like December 31st
or whatever the end date is,
I think the community just won't wrap its head around
the fundamental shift that's happened here.
And so, Jack, this is my analysis, if you will.
Number one, Rocky Linux got a great start
with that narrative.
Number two, Alma Linux, just because of the timing
and just how things just naturally played out,
really initially got brand recognition as Cloud Linux.
And I think that's a potential headwind.
Then you combine that headwind
with people haven't actually realized the value
of having significant engineers and contributors
in the CentOS stream ecosystem yet.
And so it seems to me,
like it's just gonna be one of these,
you'll have to grind it out and get there
and sort of earn attention over time
because it's sort of like the initial cards that were dealt
perhaps aren't as favorable as they could have been.
But ultimately, when you look at the entire picture,
it seems clear, I think,
what will draw people to Alma Linux.
But it seems like it's gonna take a little bit
for people to appreciate all the value.
You're definitely true in a certain sense.
And I think that the whole spin with the press
was a little bit one-sided,
but I mean, that's nothing that we can control, right?
We can only do what we can do.
And I think on the other end of the spectrum,
we certainly have a great narrative as well.
I mean, like we have core team members
that have been rebuilding RHEL for almost 15 years.
Like that's pretty significant.
We have a ton of experience.
Like we were able to rebuild eight, four
in like three and a half days.
That's phenomenal, you know?
And I think that's one element that was also missing
from the narrative overall.
And I'm very comfortable with us having to earn our keep.
I think we're not trying to rest on our laurels.
We're not trying to spin anything.
We're not trying to have people trust us blindly,
none of that.
I think we're here to work.
And the best thing we can do is continue doing that
good work, continue being members of the community,
continue building for the community,
and just earn people's trust and build bridges.
That's what we're all about.
I think now CentOS has earned its name
more than it ever has before.
It is the community enterprise operating system
because the community has the ability to contribute,
develop, and deliver an enterprise Linux platform.
We've never had that before.
And I'm gonna just spread a little bit
and talk about OpenSUSE too.
OpenSUSE Leap is doing the same thing.
Now we have both top tier enterprise Linux platforms
moving their models so that they're more community centric.
The Red Hat one is a little bit more painful
because the user base is just worse
in the sense that they are not used
to actually working in the project.
And now that's gonna have to change.
And CentOS Stream is fine, even for the average person,
not really doing much of anything with it.
But it's also now, if there is a problem,
there's an opportunity to fix it.
That is powerful.
That is important.
That is how free software survives.
To Neil's comment about it being actually honoring its name
and being a community enterprise distribution,
now we finally have a setup where all real derivatives
can actually work together in the CentOS community
and make the entire ecosystem better,
not just their own derivative.
That's something we've never had before.
And also, following up from Neil's other comment
about just having a handful of people working on CentOS,
that's what a lot of people don't seem to understand
is that there was never an incentive for RHEL
to staff up the CentOS engineering effort at all.
It was, they were kind of competing
with themselves in a way.
But now with the transition of making RHEL derived
from CentOS in a way, now with the CentOS 9 effort,
you're seeing all of these RHEL teams come together
and work on this, and there are orders of magnitude
more people getting involved working on it than ever before.
To me, that's crucial to CentOS's long-term health,
even though it's a change that not everyone likes.
That was just the start of the conversation, really.
The community of enterprise Linux is changing.
And I think coming out into the open more than ever before.
We hope Greg or anyone from Rocky Linux
will take us up on our invitation
and join us on an episode to chat about this more.
Linux.entropy.works, use promo code LUB13 and save 15%.
I'm so excited to have Entropy as a sponsor
for Linux Unplugged because I always say shop local
in the Linux community when you can.
And Entropy is a development shop
that puts desktop Linux first.
They're an industry-leading mobile
and web development studio based in the UK
with global clients including Mars Wrigley,
Walmart, MediaCom, the Financial Times.
I mean, they're just trusted by the biggest names
in media and content,
but it's not all about those big global corporates either.
Entropy loves working with smaller businesses and startups
to realize some truly outstanding mobile desktop
and web applications.
They can do it all.
And yeah, they run it all on Linux and open source.
They're a team of distro hoppers and Linux hardware nerds.
Everything they do goes back to love
for the Linux community.
Some of their key tooling includes Ruby on Rails
for web development and Flutter for mobile and desktop.
Yeah, yeah, that includes the Linux desktop.
They've pioneered some of the most complex Flutter apps
ever built and they're shipping globally.
They have integrated machine learning and image recognition
at the back end of these Flutter apps.
They really know their stuff
and I think they're pretty excited
about where this all is going.
With Flutter, Entropy rapidly builds apps for iOS,
for Android and for the desktop platforms
like Windows and Mac OS and of course, the Linux desktop.
And they can do it in no time.
In fact, they're already one of the global leaders
in Flutter development with dozens of deployments
in the last year alone.
So, if you're thinking of taking the plunge
into Flutter for Linux, maybe for Linux desktop
or for the other platforms,
or if you're a small or large business
that just wanna get into the game
with an outstanding app on any number of platforms,
Entropy is always ready for a chat.
They love to discuss your ideas
and they'll just share their opinions with you
even if that doesn't necessarily develop into a project.
Just get in touch and chat mobile, Flutter
or even ask them about their latest favorite distro.
They love all that stuff.
So, to get started, Entropy is offering listeners
of Linux Unplugged 15% off their first project.
A mobile app, a web app or, yeah, build a Linux app,
anything, you'll get 15% off.
Use the promo code LUP13.
Just head to linux.entropy.works,
fill out the contact form, use promo code LUP13
and they'll get in touch and there's never any pressure.
They're always happy to just discuss your project,
chat about Linux or maybe even chat about
your favorite Linux podcast.
That's linux.entropy.works, promo code LUP13
and a big thank you to Entropy for coming on here,
being part of the community and helping us all shop locally
for our app development.
linux.entropy.works, promo code LUP13.
Well, speaking of Flutter, we've had some feedback.
Mr. Light fixture wrote back in,
Hello, Chris and Wes.
My initial response to Flutter as a whole
had kind of been, oh great, another one of these.
But as time goes on, I'm warming up to the idea
of a ubiquitous cross-platform toolkit for designing apps
that isn't dependent on the browser.
Because yeah, definitely better than Electron
and that whole mess.
My first time hearing about Fuchsia, I was skeptical.
The discourse at the time was about replacing Linux
as a new developer darling.
And so I sort of went on thinking about Zircon
as how it would stack up directly against Linux.
For a long time, I thought of it like,
well, how could the Zircon kernel possibly catch up
with the software integrations
and the hardware compatibility in Linux?
I mean, enough to supplant it anyway.
But as you said on the show,
they don't really have the same goals.
Linux kind of tries to be everything for everyone.
Zircon was never really meant to be a drop-in replacement.
It has no intention of supporting everything
that Linux supports.
So while this new platform diverting developer time
at large companies away from Linux is definitely a shame,
I'm not sure I see a future
where Linux will ever really be neglected.
If things continue like this,
Linux's quality of trying to be everything for everyone,
I think, is almost guaranteed to have developers
far in the future motivated to keep it alive
because it'll be the only thing that does support
all this esoteric stuff that just isn't profitable
for the other big platforms to maintain.
In the past, many technologies have died
because they lost or maybe never had a common thread
from which to maintain compatibility with what came after.
But today, I think we're assured in a way
that we'll still be able to support so many things
as long as we still have Linux.
Yeah, I've been shifting my opinion on this too, Wes.
Mr. Lightfixer points out that,
like we talked about last week,
we kind of started kind of skeptical
and have started to shift,
and part of it was when we were playing with Fuchsia.
But the other part that honestly
made a pretty big impact on me,
and I think it's telling, is I tried it myself.
And I think that probably had trying Flutter
and building a stupid little hello world app
made me realize, oh man, if people had access to this,
we could actually get some pretty good,
pretty quick applications that weren't all Electron.
And that I think is like the underlying thing
that was really motivating me.
And I don't actually still feel like Flutter
is a perfect solution because some of the things
that it relies on are getting a little long in the tooth.
However, that seems like a solvable problem to me.
And the fact that you have Google and Canonical behind it,
it makes me reflect on that conversation we had
with the Lutris developer.
And you recall he said, for a little while,
it was like Canonical was really leading
with the Linux desktop.
And so you just kind of followed what they did
when Unity was kind of at its peak
and developers didn't really know how to come into Linux.
But I remember I'd have these conversations with Mike
from Coder Radio too.
You know, you could kind of look at what Canonical
was doing design-wise with Unity and take clues from that.
We kind of lost that recently.
And he's still like in that mindset, the Lutris developer,
he didn't know where to go from here.
And I thought perhaps we're seeing Canonical recapture
a little bit of that mindset and a little bit
of that direction with their announcement
and endorsement of Flutter.
And then when I was talking with Entropy
about the applications they've been building in Flutter,
I started to realize like they're actually
like building custom apps for businesses
that want to like to have some data workload or something.
Like it, maybe it might be, in this case,
it was machine learning and image recognition.
And they want to be able to run it on Mac, Windows and Linux
because they have all three in their environment.
That's not a necessarily uncommon thing.
Like that could be a scenario that's kind of common
in the enterprise environment.
You've got multiple, multiple OSs.
Maybe it's just Mac and Windows,
or maybe it's just Windows and Linux.
And you've got mobile in there too.
And you want to create something
that's essentially native on each platform.
You look at your options out there.
You've got Electron, but I don't know.
I feel like things are awkward in Electron world.
Microsoft seems to be in love
with their edge powered web view thing.
And I'm kind of done with Electron apps.
I have been tolerant for a long time,
but I'm kind of ready to have something smaller,
faster and lighter and something more approachable.
So I agree with Mr. Light fixture.
I think it's worth reconsidering.
No, I think you're right.
I mean, there has been this question of,
well, you want to make a desktop Linux app,
how do you do it?
There are a lot of options.
It's hard to feel a sense of any momentum
in one particular area.
And then you're going to have to go dive into that thing.
Maybe it should decay, you're going the cute route
and figure out how do I make cross compatibility work
and which versions do I target and how do I get it to run?
And Flutter has a lot of answers there.
And yeah, there are probably a lot of old timers
or traditionalists out there,
to some extent, myself included
that view it with some skepticism,
especially because of the big names involved.
But if there does sprout a legitimate community
of open source users developing apps,
and if it makes these apps available on Linux,
I think it could be quite the pragmatic win.
Something has to give.
I look at what Microsoft is doing
and they've opened the floodgates for the Windows App Store.
Any app, any payment model, any way you've built it,
you can sell it now in the Windows App Store in Windows 11.
And then I look at the Apple model and it's not as open,
but it's if you want to build an app for the iPad
and the iPhone, you can also now ship it on the Mac
and you can run iPhone apps on the Mac.
And so it opens up for developers
when you're looking at potential customers with wallets,
it opens it up to a lot of customers.
They don't really see anything that really enables that
for Linux right now,
without some sort of enabling technology like Flutter.
I'm curious, Wimpy, if you have thoughts,
maybe I'm way off on this topic.
Yeah, obviously I was involved in the early sort of stages
of Canonical working with Google on Flutter.
And a lot of what you're saying is obviously very true.
Flutter is the fastest growing developer platform right now.
And it provides an opportunity to deliver
a developer experience on the Linux desktop
that has a lot of developer traction behind it
and a lot of interest.
And I think it will become what Electron has become.
Electron has been a great equalizer.
I mean, you were just saying that you're over Electron,
but because of Electron, we have a lot of applications
on Linux that we wouldn't have had
were it not for that cross-platform compatibility
that it provides,
even though it requires some sort of heavy lifting.
Even things like Steam are based on Ceph for all of the UI,
which is the forerunner to Electron
and Spotify uses Ceph as well.
And love it or hate it, big brand apps like Slack
and what have you and Discord
have enabled computing parity on the desktop
that we've not had for a long, long time.
And I think Flutter will be the extension of that
because there are so many large organizations
building their apps in Flutter now,
and they can build their apps in Flutter
for mobile and desktop and web.
And I think Linux will continue to see fair treatment
as a result.
We have seen more games
when game engines support multiple platforms
and we've seen more apps as Electron has come around,
but Popeye, I'm curious if you think
maybe we're trading one evil master for another,
because it's always possible
that Microsoft whips Electron into shape
with their edge rendering engine,
and maybe they'd be a better overlord
than Google is with Flutter.
I think it's not unreasonable to hedge our bets
and diversify a little bit.
We have toolkits ourselves.
We've got GTK, we've got Qt,
we've got others to develop our own things.
And yeah, I don't think it's unreasonable
to welcome these other, as you say,
corporate overlords at arm's length at all
and make it possible for developers.
Like Martin said, these technologies are popular,
insanely popular.
And I think it's rather blinkered not to open the door
to have those technologies enabled on the Linux desktop
because if we don't, then we will continue to be
an also-ran and we will continue to have no-killer apps
for the desktop, because right now we don't have any,
and we don't have robust professional toolkits
to enable people to develop them, in my mind.
And I don't think it's gonna take away
from a native GTK application, if you will,
or a Qt application, because the developer
that's gonna choose Flutter or Electron
likely was never gonna choose those other toolkits,
simply because of the requirements of the application.
Maybe, that's, I mean, without speaking to each developer,
I mean, you can certainly surmise that.
It's not an unreasonable and outrageous accusation to make
that someone probably would choose a technology
that's backed by a very large company
with a lot of comprehensive developer documentation
and mindshare and developer advocates
over something that's been around for 20 years
and keeps changing and is not well-documented
and there isn't a huge community.
And by the word huge, I mean different
from the size of the Linux community, like much larger.
So I don't think it's an unreasonable suggestion
to make that people would go for those technologies,
just the same as developers went for Electron,
because it was quick and easy to bootstrap up an application.
Okay, negatives aside, it was quick and easy
for people to get started.
Yeah, really, I mean, I do back-end development mostly,
some web development and I know not that much
except as a Linux desktop user
and Electron is the thing I've used
to make handy tools for myself
and I could see Flutter really being that
because there's not a ton of money in desktop Linux.
I can't take the time to become an expert in doing that
unless I want it to be my main hobby.
But if there are tools that are well-supported
that let me leverage what developer time I have
and also get it on the Linux desktop,
that seems like a nice tool.
We wanna get your emails, your feedback,
let us know what you think on any topic
or what you'd like us to cover, linuxunplug.com slash contact.
Last week you asked us about Landlock and we responded
and that coverage is in this week's Linux Action News,
along with our thoughts on the situation around Audacity
and several other stories in the world of Linux this week
at linuxactionnews.com.
So really in this, I just wanted to say, just the basics,
we'd love to hear from you at our contact page.
We have the Telegram group
where the conversation's going all the time,
jupyterbroadcasting.com slash telegram.
And last but not least, the Luplug.
I popped in there for a little bit last Sunday
as I was out for a walk.
We had a great conversation in there
and the Luplug goes every single Sunday at noon Pacific.
We have it on the calendar that gets converted
to your local time at jupyterbroadcasting.com slash calendar.
And if you'd like to join our Mumble Room,
get in the conversation as they're happening,
we have information for our Mumble Room
at linuxunplug.com slash mumble.
The show's live on Tuesdays at noon Pacific
and that's also at jupyterbroadcasting.com slash calendar
to get converted in your local time.
Well, earlier Neil mentioned the CentOS
special interest group for hyperscalers
and we wanted to follow up on that a bit
here in the pick section.
Davida Kavelka of Facebook
presented at this year's CentOS Dojo at Fosdom
all about this SIG's efforts,
why it's being founded,
and why Facebook wanted to get involved.
CentOS runs everywhere at Facebook.
It runs on all hosts and all the containers.
75% of the fleet as of yesterday morning
is currently running on CentOS stream eight.
The rest is running on CentOS seven
and is in the course of getting updated.
We use CentOS as a stable base.
And then for components that we want to track more quickly,
we take backwards and we update them as needed.
So for example, we do a lot of work internally with systemd.
So for systemd, we will have an internal backward
that we maintain that tracks systemd master
and that we deploy.
We also use things like Apple
to get access to packages from Fedora
and we contribute to Apple when needed.
We don't run the right kernel.
We run the upstream kernel from Linus
with our internal configuration for our hardware
and our kernel folks try to contribute
to the upstream kernel directly as much as possible.
That's a lot of CentOS servers running at Facebook.
And so we put this in the pick this week
to just kind of keep this episode on a theme
because now it's beginning to look like
there's something to at least keep an eye on,
maybe grab an ISO soon.
This is an interesting problem that Facebook had.
They were taking CentOS and then essentially slapping in
a kernel from Linus, some back ports from Fedora
and trying to get it really modern.
They were essentially solving the problem
I was trying to solve when I switched to Gentoo
in frustration over a decade ago in the enterprise.
It's funny, it hasn't really been solved yet.
But now with the way that CentOS is being built
and the way it's being composed,
there's kind of an opportunity here for different groups
to build up these alternative ideas
that maybe get adopted, maybe they never do.
But the CentOS hyperscaler effort is building a CentOS
with faster moving packages, some back ports in there.
We're mentioning it this week because ISOs are out,
but we're keeping an eye on it long-term
as a possible workstation here in the studio.
So we'll let you know, we have a link in the show notes
for information about that.
I say at this phase, keep an eye on it, see where it goes.
It's pretty neat to see a version of CentOS
that maybe has some more current stuff in it,
could kind of sit in that sweet spot,
especially with the plasma desktop.
If you'd like to get ahold of us on Twitter,
this show is at Linux Unplugged.
The whole network is on Twitter at Jupiter Signal.
And the entire network is at jupiterbroadcasting.com.
We got a website now, Wes, brand new.
Fancy, I think there might even be SSL.
Oh gosh, I don't know about that.
I think it's just a fad, so I didn't bother.
Instead, we're just doing all of our stuff over HTTP forever.
Send us your PGP keys and we'll get back to you
with a signed MP3 in a couple of days.
Yeah, good enough, good enough.
Also, join us live, we're here every Tuesday.
See you next week, same bad time, same bad station.
And of course, if you haven't caught Linux Action News,
you gotta go check it out this week.
More stories, stuff that before the show,
people are like, are you gonna talk about this?
No, we already talked about it in Linux Action News.
We already talked about it, so go check that out.
Links to everything we talked about today
over at linuxunplugged.com slash 413,
including our mumble room, our contact page,
our subscriptions if you wanna get
in your podcast catcher of choice.
All of that's over there at the Linux Unplugged website,
another website.
You know, they're just cropping up everywhere.
Somebody's gonna need to build some sort of way
we can find them all.
Anyways, thanks so much for joining us.
See you right back here next Tuesday.
We'll be right back with a new episode of Linux Unplugged.
ChibiTitles.com, let's go boat.
Let's pick a title for this thing.
Conversations continuing on in the chat room.
I hope it hasn't devolved in the chat room to the point
where we can't have an open, transparent conversation
on the show.
That would be a shame, but perhaps.
Dildan, I know you had a point you wanted to make
about Maui Plus and.NET, or Maui and.NET,
maybe being a contender to Flutter?
Yeah, it's a multi-platform app UI.
It's an evolution of Xamarin using all the native toolkits.
Does this mean I can have Tomboy back for my notes?
Possibly.
I missed some of those.NET applications.
What was it?
What was the one called?
Banshee.
Banshee, yes.
Banshee was a great music player.
Even today, I pulled it out with just a week or two ago
because I got the nostalgia goggles and it is still,
I think, the best jukebox that I've ever used.
Yeah, I loved it.
I actually was so happy with a lot of those early.NET apps
and I never really quite agreed with all the mono hate,
but I did understand the uncomfortable position
and with all of the IP crap that was going on back then.
So you gotta remember,
that stuff was really in the air back then.
I understand why it went down the way it did.
And it makes me wonder if there isn't just
some built-in resistance to Maui
and just.NET apps in general still on Linux.
Well, at least with Maui, the main complaint people have
is that it steals the name from another toolkit
that already exists.
Right, right, yeah, there's that too.
You know, there's a lot of names out there, it's hard.
They could have picked a better name.
It's not like they don't have an army of lawyers
to figure this stuff out.
Right, and a search engine
to just do a kind of a quick check.
Right, like before Microsoft announced it
being called Maui, the original Maui from the KDE project
was the top result and now it is not.
I know how they feel.
There's a group out there that have stolen my name
and they know who they are and I'm still salty about it.
