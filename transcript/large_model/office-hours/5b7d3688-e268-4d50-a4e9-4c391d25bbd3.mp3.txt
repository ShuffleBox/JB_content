Well, so far, we're streaming, we're recording, the mixer seems to be working.
It's like we didn't have a massive power outage last night.
Except that you did.
Yeah.
Oh, I hate it.
So I get home last night and I get a message on my phone like such and such system is unreachable,
which is how I know something's gone wrong.
Either the internet is out or the studio doesn't have power.
And do you know what my first thought was when I realized the studio doesn't have power?
No, please tell me.
You're not going to be surprised.
Oh, the node.
The node.
Yeah.
Yeah, the node.
I was like, no.
I think it was in January we were talking about a battery backup for that thing.
I guess you never got that out of your Amazon cart.
Yeah.
I just didn't want to turn it off.
You know, that's the thing at the uptime.
And then of course, when I have forced uptime, all I want to do is get it back online as
fast as freaking possible.
So then it's like, that's not the time, you know, so I got to get it back up because it
went down like at 6 p.m. and I didn't make it to the studio until 7 a.m.
I think power probably came back somewhere around 4 a.m.
That's a lot of downtime.
Yeah.
So I make a beeline to the node worried that maybe some of my channels have been forcibly
closed because if you're offline for too long, it can happen.
Somebody can close their channel to you and then you don't have the inbound liquidity
you need and all that kind of thing.
It's a bad it's a bad deal.
Because as a node, your reputation is in part based on your availability and all of that.
It's you know, the network tracks that kind of stuff.
And so I got that sucker back online.
But because it's an older machine, it took about 20 minutes before everything fully came
back.
It was a nail biting 20 minutes.
And it's like, what do I do?
And I'm running through the scenarios.
What do I do?
What do I do?
So tell me about your backups.
Yeah, I know exactly.
Like check the backups.
You know, grit.
And then then I got the studio working after I got that.
So I see the order of priorities here.
It's office hours with me, Chris.
Hello, everyone.
Welcome back into the office.
Oh, it's nice.
I've been back for a little bit now.
So everything's just the way I like it.
We've made a little bit of a mess over in the corner.
Well, it's not weird.
And I appreciate everybody for making it in and it's going to be a special show today.
Hey, Brantley.
Hello.
Tell me why it's special today.
Well, you got all these penguins in here, which I thought was kind of interesting.
Yeah, they're just they're AI generated.
I have to wear a suit as well.
You were supposed to.
I sent you a memo.
The problem is, is that you're traveling.
So I think it's back at your other office on the other side of Canada.
Right.
We got to get a better system for that.
No, we have a special show today because really, one of the MVPs of the Jupiter Broadcasting
community is joining us today.
You've heard us talk about Elray on the air in context of working on our website.
But Elray joins us today, a.k.a.
Alex.
Hello, Alex.
Welcome in to the office.
It's great to have you here.
Hi.
Thank you.
It's very cozy with all these dogs around.
Yeah.
OK.
There are a few dogs and penguins, I admit.
I like I like it.
I like it to have animals.
It's totally it's snuggly.
It's makes the kids happy, very nice and cozy.
And they've all been trained to be quiet, you know, so there's there's really no downside
to it.
Pretty impressive.
So thank you for joining us, Elray.
I'm looking forward to chatting about the website.
We're going to do a little push to production while we're live today on the show.
We'll tell everybody about that in a little bit.
The early signals are coming in for the big media companies that it's going to be a brutal
winter for media profits, especially in the United States.
So far, nearly three thousand media jobs have been cut this year, with more than one third
coming from the news media industry in particular.
It looks like ad sales for the large media companies are way down viewership as well.
Ad sales down.
I don't know if it's an indication of where the rest of the media market goes, if where
the dinosaurs lead the rest go, or if it's just going to affect the most expensive legacy
media first, that's a bit of a wait and see.
The word that people are using is a chilling in the ad market, which is like a way to say
like demand is like slowing down for ads, which inevitably will will begin to impact
content creators.
OK.
And do you have theories like is it obviously because the economy is down a little bit and
therefore Big Corp doesn't have money to sink into this?
It's everybody's a little feeling a little tight on money, right?
I think everybody has a little less money to spend.
And so probably advertisers aren't getting the results that they want to see consistently
from some of these outlets.
And some of these outlets are very expensive, so they are big cost centers.
And advertising is one of those things that you can kind of quickly cut back on and see
the return.
You know, and without really having to do anything else, you can cut advertising and
save money.
I don't know.
It'll be interesting to see what happens.
I think Adam Curry, the pod father, believes that this is going to develop into probably
a harder and harder time for podcasting and YouTube advertising.
I'm not totally sure of that.
It's definitely possible.
I feel like we're at a fork in the road in in the 2008 financial crisis.
In the last big downturn that I saw, it initially affected podcast advertising.
But the route that advertisers chose was to focus more on independent media and and social
media because it was such a smaller cost.
And so they cut back their advertising on the radio and on television and they began
advertising more on YouTube, podcasts, blogs, and that grew over the years because they
were getting pretty good return for the spend.
They went for the value advertising.
I don't know if that's going to be the case this time around, because now the rates to
advertise on a YouTube channel are outlandish and the lot of podcasts charge outlandish
prices, too, for for their for their sponsorship rates, so I don't know if the and I also don't
know if the situation is the same.
It's a global downturn this time, so that could affect things as well.
I don't know.
I guess this is something I think we should maybe just keep our eye on.
I wouldn't panic.
But I think it's something to keep our eye on because it could affect our friends and
maybe eventually could it could eventually blow back on to JB.
We're pretty far down that stack when you're looking at like CNN and BBC.
We're pretty far down that stack.
I mean, but it is also just a prediction at this point, right?
So as we've seen in the last few years, anything can happen.
Yeah, anything could happen.
And it could also end up being a good thing for value for value podcasts and encouraging
those concepts and pushing people from that were kind of on the fence of, well, I don't
know about that, to kind of maybe switching over to supporting the shows and content they
like and going value for value.
That's actually exactly one of the things that I was going to talk about if I was asked
about it was, for me, giving financially has been difficult, specifically in my what I've
been able to do for my job, but this is the best way that I think I can give back is by
actually doing the technical, helping out with the website, trying to automate scripts
and code and other things, because that's where my acumen is at.
So it's just the easiest way for me to give back.
And it's super valuable.
And now we talk about you all the time on our shows, so look at that.
But it's been great for for JB.
It's been a and probably has been more impactful than a monetary donation would be, unless
it was a significant one that we go hire somebody for a while.
Here's what I think happens.
I think when when these kinds of things happen, you know, however you want to say it, times
get tougher, things change, I think communities that support each other, people turn to that
kind of stuff.
You know, like example is I've noticed my little neighborhood where we usually park
jupes has become a little tighter, you know, we're sharing garden tips and space for some
people and we're keeping an eye on each other's yards and there's a little bit more sharing
than there was a few years ago, pre pandemic and stuff like that.
And that community has become a little bit stronger.
And I feel like value for value is a framework for a bunch of people on the Internet to wrap
their heads around something we can all agree on a common set of ideas to participate.
It's a common language.
It's a common mindset.
So, you know, when I say value for value already interprets that as well, I can't necessarily
contribute financially right now, but I can contribute technical skills.
Somebody else might interpret that as well, I could contribute financially right now because
I don't have the time and somebody else might interpret that as well, I can make a few clips
for the guys to give the boost segments, even more sounds to make it even more dynamic and
keep that flowing.
Right.
And there's just it's a community coming together around something.
The most important aspect of all of it is it keeps the creators.
It keeps them focused on their community.
It keeps them genuine to their community.
It keeps them in touch with their community.
It keeps them grounded, right?
It keeps us talking to real people at working on stuff instead of instead of getting lost
in the echo chamber of social media and Twitter and the and the arguments and the fights and
all of the super polarized things over there or instead of, you know, letting it get to
your head that a million people, four million people, five million people are downloading
your stuff instead of like getting carried away with that stuff.
It keeps you grounded.
It's like more like working, working with the land than it is, you know, working up
in the concept level.
And I think as a content creator, it's really important that you stay grounded, you stay
connected to real people, you stay working in the community.
And value for value is a framework that keeps the creator in that headspace.
It lets people participate in a way they would otherwise not.
And so if there is an economic downturn, I feel like JB is probably well positioned because
we've been talking about these ideas for a while.
We would have to see it increase from where we're at right now in support.
But I actually have a pretty strong sense that our community would step up, those who
could, and they would step up in each way that they are capable of.
So when I see this news about the legacy media struggling, I think that sucks.
I hope it doesn't hurt JB.
I hope it doesn't hurt our friends in this space who rely solely on advertising.
But I think we're going to weather it.
Even if we had to slim down a little bit, depending on how bad it got, like we would
still weather, we would still have that core community support.
So it's also an insurance policy, you know, in a way.
The more we integrate value for value, it's an insurance policy that an economic downturn
can't come in and blow us away and take out what we've built.
It's a stronger foundation.
Yeah, I guess I feel a lot better about it now that I think about it.
So maybe it's good news.
I don't know.
And on that same, on that, did you have anything you wanted to add, Alex?
I was just going to say, you just sometimes have to make sure you set ground rules about
not allowing your neighbor to push away a food order you ordered ahead of time.
Yes, that is true.
To be to be fair to the neighbors, the neighbor's friend, which made it even more obnoxious.
Like, what do you know?
You're just visiting.
What do you know?
That's a big Instacart order, too.
But there is more good news out there.
Recently since we got together on October 19th, Pocket Cast announced that the mobile
apps are going open source.
Pocket Cast is one of the beloved podcast apps out there, so it's really fantastic to
see this.
They launched back in 2010.
And I think there is definitely not a huge portion of our audience, but a significant
portion of our audience who loves Pocket Cast.
So to see Automatic, the folks that also own WordPress, make this announcement, a lot
of people in our audience took note.
Now, I feel like we still have a second shoe to drop here with Pocket Cast.
I think what really makes Pocket Cast tick is its back end infrastructure.
And that's not open source still.
It's also not clear what Pocket Cast intends to do with their index.
If they plan to continue to develop that index, if they want to make it more widely available,
or if they plan to integrate maybe the podcast index and stop maintaining yet another podcast
index.
Obviously, my preference would be they use the podcast index and not their own independent
database.
Also, it's, I think, remains yet to be seen how much they're going to support podcasting
2.0.
Yeah, I definitely think that if they're trying to be more open source oriented, definitely
going with what you're saying would be what they're trying to actually shoot for.
What do you think their incentive was to open source the apps themselves and not really
mention anywhere about the back end?
I wonder, is this part of a long term plan or is this, I'm curious, what do you think
the incentive is here?
Well, you know, the automatic folks generally do publish a lot of their stuff as open source
like WordPress and whatnot.
So there's maybe, you know, maybe this is just the company's culture to a degree.
I think there's also the advantages, as we've seen, if you open up an app to the community
of contributors, they're going to start being able to work on stuff that you just didn't
have the bandwidth for.
And then I think there's also the competitive aspect.
On iOS, Apple Podcast is king.
And then there's a lot of really great alternative podcast apps.
And with the new podcast apps that have come up, there's even more options now.
And something like Podverse, for example, that's GPL.
Something like AntennaPod, also open source.
So you have to figure there was a bit of a competitive analysis they must have done too
as well and thought, well, in order for us to stay relevant, this is the direction we
have to go.
We need these new features added pretty quick.
I do believe they've been chatting with Dave and Adam a bit.
So hopefully that means they're open to the idea of the Podcasting 2.0 stuff.
That would be nice.
I don't know if I've said this publicly, but I've said it privately.
For me, the Podcasting 2.0 features are a matter of competitiveness in a way, right?
Like it's a way you could look at it is a podcast is a product and that product needs
to be as good as possible.
And I've always prided on JB featuring the cutting edge stuff that podcasting has available
whenever whenever there is something.
Maybe it's I mean, for a long time, we just pushed having video versions available that
most people weren't doing.
And then after that, it's silly things like pushing the edge of what you can do with an
encoded file and embedding chapters.
And then we would take things further and further just because we have an audience that
frankly likes that stuff.
You know, they know how to use that stuff.
They have tooling for that stuff.
They want it.
So let's go and podcasting 2.0 and all of the options in there, like alternative enclosures,
host information, transcripts, cloud chapters, live tag, value for value, so on and so forth
are, in my opinion, features I want our shows to have and they make our shows more competitive.
They make them more feature complete.
And so as a podcaster, I'm going to be talking about the apps that make my shows shine and
I'm not going to be talking about the apps as much that don't because I don't think there's
as good of an experience over there.
And so when you think about the fact that apps that have podcasting 2.0 features are
basically getting free advertising on every podcast that's implementing podcasting 2.0
features, it'd be a pretty good idea for Pocket Cast to include those features because then
you're just going to get mentioned across a whole array of podcasts and a lot of them
are like the cutting edge podcasts that follow the latest trends that are doing the new stuff.
Not that we're like some hipster podcast company thing, but I want to have that stuff.
I want to have transcripts.
I want to have cloud chapters.
I want to have an alternative enclosure.
I mean, we have MP4 versions.
We can make Opus versions.
There's a lot we could do with that.
And then at the same time, it's always better for the user or client experience whenever
it's all integrated into the actual app.
It's always more enjoyable.
Like you said, you've been giving them free advertising, but it also makes people want
to listen to your podcast more too.
I hope so.
I think it's silly that we've been sending people outside the podcast app for so many
years.
You just haven't had the option of having that stuff in there.
You want to listen live, go to somewhere else outside your podcast app.
You want to contribute, go somewhere else outside your podcast app.
It's so crazy when you think about it.
Nobody else would do that.
Ever since I had moved to Podverse, every time you guys had mentioned me on a show,
I always clip it.
And then I can send it to my dad or my wife or anyone, and they can see me getting referenced
on a podcast.
So it's been really awesome.
This is going to be a long clip then.
Yeah.
The beautiful thing about clips too, and that's a feature I should mention more often, is
it helps with discovery.
Right?
Like say that was a show on a topic that a family member was interested in.
You could send them a quick clip.
Look what these people are saying about this topic you're interested in, and then they
could become a listener.
I used to have a hack around that for the old Castbox app that I had.
I would, in the Castbox app, create a comment with a timestamp, and then I would send that
link to someone else, and they'd click the timestamp to jump to the specific spot that
I was trying to tell them about.
Yeah, I've certainly used firesides, like I guess on their web instance, they have a
means of doing timestamping as well.
It's a little clumsy, but it works.
Chris that gets me thinking about, I think you've been hoping for us to do some RSS feed
generation.
I don't want to jump to the website too soon, but I just want to ask you, do you have an
idea of time frame that you'd love to have that feature?
Hmm.
Well, I mean, if I were going to like wave a magic wand, I'd like to have it ready for
office hours 16.
But I don't think we're there yet.
Because Wes and I, every time we talk about it, we discover a lot more we have to figure
out.
But I actually think we have it pretty well figured out at this point.
The issue is, once we start generating our own RSS feed, we're basically off fireside.
We're using them for the CDN, but we could point at another CDN, and we're basically
done with fireside.
And so then that brings up the issue of, well, crap, the whole website works by generating
off of what we post on fireside.
So we're trying to figure out a way to do it in a staged approach where, well, we'll
keep fireside in the loop for a while.
We'll take the feed that fireside generates as like the base feed, then we'll generate
on top of that the additional tags that we want, because we're going to probably also
add our own JB namespace tags so we can have information that the website might need that
maybe gets from fireside right now and other things.
So eventually, we could pull all that info that the website needs to generate from just
the RSS feed of the show.
But so initially, it'll be, we'll keep fireside, we'll take fireside's feed, we'll consume
that, generate our own feed with our own stuff, like the podcasting 2.0 namespace stuff in
there, and then put that up on a CDN.
Then when we're ready, when everything's ready to be flipped public in the publishing pipeline,
the feed will flip public.
Maybe we'll do a pod ping.
We'll have to look into that.
I don't know exactly how that works.
And then slowly but surely, we'll just fade out the fireside portion, and we'll just generate
the entire feed ourselves, but we can do it in a staged approach, because we also need
to solve a CDN.
We have to figure out what we want to do for a CDN, and we also have to make sure that
the website can be generated from the feed instead of fireside.
And you know, I hate to do it, because fireside's a pretty good product, and it's a good price,
except for LUP pays a sneaky private rate that they don't tell you about, unless you
get bonkers downloads, and then they contact you, and you have to pay a bonkers price.
So LUP doesn't get a great price, but all the other shows pay a pretty good price for
the amount of downloads we get, and downloads are really fast, in my opinion.
I feel like the MP3s just slam onto my phone when I go to listen.
I love that.
And it's been pretty good, but it's been really unreliable recently.
Coderadio didn't publish on time this week, because fireside had a mistake.
We had an error, like three weeks in a row, Coderadio's been hit.
Linux Action News has been hit a few weeks in a row, too, where it just doesn't publish
on time, because it gets hung up on their system.
And then, I think the part that is the final, like, we've got to get rid of fireside, is
we put a request in about it for them to address it, and it sometimes takes them three to four
days before they get back to us.
Now imagine if we just waited three to four days for a show to publish.
Everybody would think the show's gone.
You know, they think something happened.
It would be ridiculous, not to mention, you know, it wouldn't perform properly for the
sponsors.
It's crazy.
It's suicide.
It'd be different if it was kind of like a side hobby thing, but you're a business.
That's not typically how businesses get treated.
And it's not what we'd expect when, you know, you're paying for a monthly service, and part
of that is support.
Especially at the bonkers price.
Although it doesn't seem to happen as much on Love.
Well now you know why.
Go figure, right?
I guess.
If only they had a network membership then.
Yeah.
Yeah.
That's the other thing, is there's features that have been promised literally before we
merged with Linux Academy in 2019 that we're still waiting on, or 2018, whenever that was.
I can't remember.
But basically, years now, we've been waiting on like a network page.
That's why we stalled the building of the new website for a while, is because we were
told that they would be generating a network page.
You could put all your shows into a network, and then it would create a homepage for all
your shows.
And we're like, well, okay, that'll be great.
That's exactly what we want.
And it never came.
And it never came.
And then we just finally gave up.
And then we got the word from Scale Engine, that hey, we're shutting down your WordPress.
We're like, well, this is quite the pickle.
So now we're kind of there with the hosting aspect.
I don't think we're going to jump immediately, but I think we're building towards that.
And it was just kind of working all of that out, and what it all affects, and what it
really means for us.
And the tooling we'll have to build on the back end, because Fireside has a UI we use,
and things like that.
But we'll get there.
We can do it in pieces.
It's interesting to hear you talk about the publishing side of things, because I didn't
know how do you author whenever a new podcast is going to come out?
Do you schedule it?
It sounds like you do, now that you've mentioned it.
And then how can we build the website around that flow to help enable you be able to still
use the new website, but then also take advantage of all the different features that you're
wanting?
So I imagine, we'll see, is, well, this is still up in the air.
But one option we will have is sort of, we have show docs, right?
Like this episode that we're recording right now has a markdown document that we construct
in HedgeDoc that contains an outline of roughly what we want to talk about today and a few
other extra information, like your Twitter profile link and your GitHub profiling, things
that are just metadata for the show.
And so we kind of have everything we need for the show post in there.
What we're missing is just a few bits of information that we could put in there in some sort of
structure, like episode title, episode date, in a structured way that something could read.
And then our thinking is that what we'll do is upload that to the GitHub repo.
That'll be a repo probably for this.
And once it's in that repo, like a GitHub action kicks off and begins the whole process
there.
Or maybe either the website gets built from that.
There's also something like we could generate a website, the website stuff too, from that
information possibly.
We could just do the generation from that information.
The other option is we just publish the RSS feed and the RSS feed gets updated and the
website generates off of that too.
So probably you, Alex, me, Brent, and Wes probably just all jump on a call at some point
and hash some of that out, you know, kick around a few ideas because we're pretty flexible.
And Wes could pretty much build anything we need on the back end to accommodate it.
So true.
We have good options.
You know, Dementor here in the live chat mentions, hey, Chris, why don't you do a Kickstarter
or something to build an open source version of Fireside?
We've heard this come up a few times.
Yeah, I think, you know, the way you would do that, right, is build it out for JB, make
it work.
And then it'd be another project to like identify what would have to be changed to make it portable.
And you know, you swap out, you swap out art, swap out names.
Like what would have to be changed to make that accomplished?
And then figure out from there what kind of a project we're looking at.
And if that's even something that would cost us anything, if it's worth raising funds for
like, you know, that would be down the road because it's very technical at the moment.
We'd have to string a lot of different technologies together because we're using a lot of different
primitives together to build what we want.
We're not creating all the tools, but we're sure stringing a lot of tools together, essentially.
Yeah.
And that's actually the way you were talking about like authoring content and those other
things.
It makes it really tricky because you don't, I'm sure you guys don't want to share the
information too soon before the actual episode drops.
But if you didn't have that concern, it could all just be inside of GitHub and like a statically
hosted CMS or a serverless CMS, which is just, you host it on the actual website and it's
static and you just log into it.
And it transparently creates pull requests and other things based on your identity in
GitHub, which would be where you could add all those extra specific tags that you want
to for each post.
But it also has to look into your tooling.
So there's solutions around what you guys are talking about.
It's just trying to figure out the best way to put it all together and what enables you
the most.
And I think what we'll do, and maybe inevitably, is start with office hours as a bit of a let's
try this approach.
I'll probably come on here and be like, okay, we've got a new feed.
If you want to try out the new feed, go subscribe over here and let's see how it works.
And then if we get that working, we'll probably try to figure it out for everything else from
there.
Because office hours is kind of the test.
It'd be a great time to rename the show, too.
So like if you subscribe to the new feed, you get the new name.
And if you're on the old feed, you got the old name.
That'd be weird.
That's how you bait people into switching.
Maybe.
Let's say give them more incentive.
Yeah, yeah, yeah, maybe.
All right.
Well, we will figure it out.
We have more website stuff to get to.
So before we get there, I want to thank Linode for sponsoring this episode of office hours.
Linode.com slash Jupiter to get $100 credit for 60 days on a new account.
It's a great way to try things out.
We run our whole website infrastructure on there.
Everything we're talking about, let's build and it's running on Linode.
You know what else we run over there that I don't mention as much, but it has been absolutely
100% rock solid.
We use Linode for video streaming as well.
Pyrotube runs on Linode and I am very impressed.
They have plans specifically for streaming as well with really generous bandwidth plans,
transparent pricing, making it super easy for you to get things set up and running.
They have a couple of different open source projects, video streaming and audio like radio
station style, too.
If you want to be an internet DJ, I've been floored, absolutely floored at what our Pyrotube
instance has been able to handle.
Of course, recently on Linux Unplugged, we deployed one of their cloud GPU rigs.
That was fun.
You know, if you're just an individual, you want a blog or a gaming server, Linode's great
for that as well.
They make it super simple to get started.
Maybe you've been doing this for 20 years, maybe it's your first server.
You're going to be able to figure it out.
You get over there, you'll figure it out.
And with that $100, you can actually really try something.
Maybe deploy one of their systems and set up a snapshot and a backup and get a sense
of what that's like.
Get an idea of how fast it is to copy things around.
Maybe go deploy your own media server, you know, like they have a jellyfin one click
deployment.
Go try it out.
Linode.com slash Jupiter.
That's where you go.
Simple, affordable and accessible to everyone.
Linode.com slash Jupiter.
All right, so let's get into the website, gentlemen.
You ready?
Do you want to do a live deployment?
And I think the way we should do this is first tell everybody what it is we're deploying
and maybe while we're doing that, get it ready because we're doing it all live.
But who would like to take on the job of explaining what we're about to deploy and why it's super
shiny?
And if you're watching live, pretty soon you'll be able to refresh and see it in real time.
I feel like Elray should take this one.
All right.
Elray, the guest of the show, tell us about this work and has it mostly all been yourself
as well that has been doing it?
Definitely not.
I appreciate the early congratulations.
But I've helped out a little bit from some of the PRs and added a few features.
But should we give some shout outs?
Yeah, I actually have a bunch of shout outs.
OK.
All right.
Good, good, good.
But I didn't I didn't realize you had a flow.
I like it.
I just want to make sure we give credit where credit is due.
No, I appreciate it.
Thank you.
Because it's important.
We changed the default branch for the GitHub repo.
Well, Brent did.
Changed the default branch from main to develop.
And if anyone else is familiar with the technology called Git flow, that's kind of the mechanism
as to how we're going to be merging.
So people create feature branches or forks off of the actual main repo.
They merge to develop and then develop, then gets merged into main.
And so in this particular instance, we're taking all of the changes that have been batched
up from I think it's probably the last office hours.
And we're taking all those changes and we're going to be synchronizing it over to main.
And specifically, the Jupyter broadcasting repo is actually a little bit different.
Because typically, that is the only way people commit is that you go from feature branch
to develop to main.
Since Jupyter broadcasting needs to have a little bit of a different workflow, whenever
new episodes get released, it's important that the main branch continues to get updates
of the new episodes that are released.
So that's been a bit of a tricky issue that we're trying to still figure out.
CG base player had caught it and submitted an issue initially, I had noticed it but hadn't
submitted it.
So that's still something we're figuring out.
But for now, just merging directly from develop to main, even with those extra commits works
perfectly fine.
Well, typically does.
You're updating the production site, but you don't want to push the changes and you also
have to put those same changes on the development site like a new episode.
So that is yeah, probably hard not to sneak in changes and updates, I would imagine with
that setup.
It's been a bit of a funny change of mentality, I think, because now there are a few different
things happening in different places.
Like for instance, the scraper that goes and grabs information off a fireside at this time,
every time we publish a new episode, that is still committing its changes and updates
to the main branch.
So that hasn't really even changed.
But what that means is that this development branch that we have is kind of outdated in
terms of the episodes because they don't ever really show up there.
But that's not really why we have it.
We have this development branch to integrate new features and be able to test them there
before we push them to the actual main website.
And I think it's a maybe a maturing of the way that we are developing the website because
previously we were sort of pushing every single change to the development site whenever we
decided to merge it and that was a little risky and we did run into a few issues that
needed some quick fixing, you know?
Running with scissors, as they say, my friend, it's great, you know?
Nothing's faster than just publishing straight to production.
Yeah, no.
I was about to say, I might have been the cause for some of those issues a few times.
I think we all have been.
Yeah, no, it's good.
I agree.
Having a test branch, having a development branch is a really good idea.
But I guess it's a pretty big change to make after the fact.
It probably would have been easier to start that way, I suppose.
Yeah, I think, hmm, I wonder.
For me, it was easier to start the other way, only because I was new to GitHub.
And I feel like maybe for some new contributors, that was also the case.
But I wonder, Alray, for you, if you have a different opinion there.
The easiest way to get the most amount of impact is the most important thing to start
out with.
So I think while in theory, doing a develop branch first and doing the whole Git flow
workflow is easier, long term.
But if it's harder to start out with, then it's more important for you to actually start
out with.
We had started discussing the idea of essentially having a more mature deployment strategy once
we did start to have issues.
And so the community has been slowly expanding its maturity for the project in general.
And I think having the community grow with the project has been a really awesome experience
just to be able to actually enjoy and see people mature.
It's been neat from our vantage point as well.
So what we're publishing today while we're live is this structural change.
And is there new things also going live?
We're taking from the development branch and taking some of that stuff and actually sending
it out to production today?
Is that what's happening?
Well, we have already implemented that change.
So people have been committing their new pull requests to the develop branch for what about
two weeks now?
I think since the last office hours ish.
Maybe even longer than that.
It might have been there was a bit of a hairy period there where everyone was a little confused
and we had to do some finicky work.
But now it's just like, you don't even think about it, you know, someone putting a new
commit and it just defaults to the place it should go and it has been working well.
There is, it does mean there's an extra step, which is that from time to time, we as the
maintainers need to synchronize all of the new PRS that we've merged and accepted.
We need to synchronize those to production.
Because otherwise, they're just sitting there in that develop branch, not doing anything.
And so that's what we're doing today is we're taking a number of pull requests that have
come in in the last two weeks and pushing it to production.
Are we ready?
Well, it kind of freaks me out because there are something like 74 commits and typically
that makes me very uncomfortable.
So if it's going to break, it'll be spectacular if it breaks.
Yeah, absolutely.
And it's from you know, if you just browse quickly, there are many different authors
in here.
And for me, that's kind of a new way to look at things because I'm used to like a pull
request, typically having one author, maybe another offers author sneaked in there and
added a little change.
But to see, you know, it's smart.
I mean, it's tagged as a piece of cake seems that's makes it sound simple.
What could go wrong?
I think that seems a little deceiving, doesn't it?
I feel like I feel like we should do it.
Well, it is true that all of this has already been vetted.
And there's been some amazing conversation happening in each pull request.
And it has already been tested and everything.
So in theory, when I hit merge, it should just work.
But I, you know, I'm always hesitant.
So I'm just gonna hit it.
Here we go.
Confirming.
Success.
All right.
Now it should, it'll take a little bit to deploy, but we'll test it in a sec.
Yeah, it's got to build now.
It's got to build.
So in about a minute or two, we should have a new website update.
So that's kind of exciting.
I'm looking forward to it.
And it means that the updates to the website are actually quite large.
Like there's a there are several features that will be added at a time.
So you can almost see it as like a point release or something.
So it's kind of exciting.
We have had some cool features land.
Should we chat about those a little bit while we wait for it to build?
Is there any that jump out to you, Alex?
I actually was able to commit.
One of the main reasons why we had started to switch over from the only main branch to
using the develop is that and it's still a work in progress for everyone else.
But all of the changes that we now merge into develop actually go to a deploy preview.
And so we're able to see all the changes visually from the repo be built out on a third party
site and actually be able to audit them from there.
So we're still working on it worked on my repository, of course, for some reason, whenever
we tried to implement it on the main JB website repository, it's no longer working.
But we are working on making it to where all PRS actually get their own deploy preview
instance.
So that way, whenever people are reviewing PRS, they can just click on the deploy preview
link and be able to actually see the visual changes before they approve or accept it.
Currently, we're having to do it a bit more archaically to where we pull it down and review
each individual change manually on our local machines.
So it'll be a nice adjustment once that actually gets fully working.
That sounds like it'll make things a little quicker.
I noticed, too, something that we really appreciated because we didn't even really ask for it.
But yet it landed was the automated sponsor page work.
This is the kind of stuff that is a great example of just making the JB workflow smoother
behind the scenes.
And we didn't have to do anything.
This is great.
It was just this was chance that did this.
That's what I wanted to do.
I shout out the chance this PR specifically whenever he started it and he did an actual
pull request.
I was like, wow, this is really amazing.
He actually had done a lot of the Hugo functionality, almost everything that he did.
I was like, wow, that's almost exactly how I would have thought to implement it.
That's that's perfect.
So it was really awesome to see that happen.
And he did an amazing job with that.
I think my first comment, even though I did ask for some changes, was like, wow, I was
really excited about this PR whenever I was reviewing it.
So where we were like, that's a great idea, somebody that gets it.
And I think didn't we learn about it, Brent, during the road trip?
We're like, wow, here we are.
You know, we're hustling on the road trip and the improvements keep rolling into the
website.
Yeah, I was bouncing around in the passenger seat and I was like, Chris, you got to see
what they're doing over here.
And I know we did a little bit in the last office hours.
But now it's well, in theory, assuming what we just did is going to production properly,
it's actually live.
And it's not perfect.
There's still things we need to tweak still, but it's like 90% there.
And I think it's a wonderful thing for us.
I was I think the reason this came was I was sitting in the passenger seat of lady jupes
driving down I-5 and like an animal, I was changing the sponsorship page manually.
And in my pull request to do such I was like, can someone please make it so that this is
the last time I need to do this and chance stepped up so thank you chance.
That's great.
Yes, thank you chance very much.
For this specific PR, not necessarily a shout out, but something that I'm very happy.
Initially Kyle Potts had done the initial contribution for our end to end testing.
And I was going to simply kind of refactor a little bit of stuff after he had submitted
the PR.
But then we had the issue of the JB matrix had failed for its actual check.
And so I went and I added a check for that.
And that spurred into a whole spiral.
Yeah, it sure did.
Oh, man.
It spurred into a whole spiral of I created a test that whenever I ran it worked locally.
But whenever I did it through the CI on GitHub, it failed.
And it also failed whenever we were running specifically it against the actual website.
So it failed in the most important use case.
And in a very odd instance, that it works locally, but it didn't work, even though we
were using the same exact things.
So I ended up reworking how we're doing end to end testing completely.
So that way, it's imitating the exact same way that we're deploying a Docker container
using nginx.
I am doing the exact same way that we're doing it for the website locally as well now.
So we are no longer running into that issue.
That's great.
And I think that's just another example of like, I was I was partly worried that when
we released the website, you know, on that live day when we hit go and everything went
live for the very first day, I was worried that all of our energy that we had produced
as a community was going to kind of peter out because it was like, okay, we all got
together and made this really amazing website and had the basic features that we needed.
And, you know, we had a checklist of features, and most of those had been checked off.
And I didn't know if that energy would have continued for a few months past that live
date.
What was that end of August?
And it's actually kind of been the opposite.
You know, some people have gotten busy and have had to step away for a bit.
But really, the community just keeps showing up and keeps throwing features at this website
that we didn't even really know we needed.
And actually, it turns out, they're amazing.
And even like the end to end test, for example, someone, you know, cowpots came in and created
that and was like, Oh, this is an amazing contribution, we definitely need it.
And then Elray, you just like took that concept and shaped it to make it even better.
And it's just like, amazing to watch this website just keep growing and keep getting
better really, in all aspects.
And also, it's great, because the website really is for the audience, it's not really
for us as much.
So we don't always have a great grasp of what people want out of our own website.
As stupid as that sounds, it's actually true.
We don't really, unless we tell ourselves and force ourselves, use the website, go use
the website, like it's just, we don't, we have all this stuff, it's right here on my
file server, right?
It's just not the way we think about it.
So it's really great to have somebody that has the perspective of an audience member,
looking at it, making this better for audience members.
That part of it is really, I think, the secret sauce of this website, because it's just not
something we have eyes on in that way.
As hard as we try, we just, just not where our minds at.
So that's pretty great.
Well, okay.
I think it's deployed.
Is it?
How do we know?
I refreshed and it loaded.
So that seemed like a good sign.
So one of the ways that, or one of the things we actually need to work on improving, the
way that I know that it went live is because underneath Linux Unplugged, it says Linux
or Linode cloud hosting instead of just Linode.
That's something we're going to work on.
It's part of the automated sponsorship.
So some of these things, actually, I think it's a good sign that we're not noticing because
it means nothing broke.
Yeah.
Yeah.
It's up.
It's up.
Well done.
Well, you know what you get?
You get a happy applause.
Yeah.
There they go.
See how happy they are.
Oh, they love it.
Oh man.
They love it so much.
They're happy.
They're very happy about it.
Well done.
One of the other small things that wasn't something I don't think anyone would have
noticed unless actually running into this issue is that specifically for CoderRadio,
they use the tag of C sharp.
And whenever you tried to click on that, since there's a symbol in there and the pound sign
can be interpreted by the actual address bar, it screwed up being able to navigate to it.
And you could only navigate to C whenever you clicked on C sharp.
Frickin CoderRadio.
I know.
They're monsters over there.
But now you can click on whenever you see C sharp as a tag, you can click on it and
it actually goes to C sharp.
What a fascinating way to view Jupyter broadcasting topics is by tag.
I never really do that, but we sure talk about Nextcloud a lot.
Look at all these shows where we talk about Nextcloud.
Linux Action News episode three.
How about that?
Oh my.
Yeah.
The whole reason why I ended up finding that was because I was trying to deploy on Netlify
and they said you couldn't have pound signs in file names and I was like, what?
What do you mean?
There are no pound signs.
And then it was because they were taking the generated content and using that instead and
they had that restriction.
So that was the only reason why that was found.
It was because it was preventing me from trying to implement the deploy preview months earlier.
Back in my day, you only had eight characters in a file name and it was all lowercase.
Actually weren't they all uppercase?
Sure.
Either way.
Go for it.
Elray, I have some questions for you.
Give me a sense from your perspective of what the community around this website project
has been like.
Cause I know we have a perspective, which is that you guys are awesome, but I'm curious.
It seems like you've worked on some other projects, both professionally and maybe some
open source stuff as well.
So can you give us a sense from, you know, you on the other side over there, what it's
been like?
Well, first off, I think everyone else in the audience is really awesome.
So I will definitely say that I don't know if I am, but they are for sure.
Humble.
So it's been really interesting to kind of see the passing of the torch.
So I know that initially Stefan and Cairo were the main people that were kind of driving
this initiative.
And as I started to kind of contribute more and try to be more of a serious contributor,
I was able to help them out.
And now people are mentioning helping me out by reviewing things and it feels weird, but
it's been really awesome is that as I've become more of a serious contributor and trying to
contribute in other ways, like creating issues or commenting on different people's PRs that
I've slowly been given more privileges as well.
And that's helped open how I can continue to give more value for the value you guys
give me already.
So I've become more of a initial drive by contributor to being I would consider myself
probably maintain a maintainer.
And so initially, I actually had been messaging Stefan about, hey, I wanted to do this thing
that I noticed because of something that you had done for your initial MVP.
And that was before it was actually changed to the official MVP.
And so I had tried to start working on it, and then I got super loaded with work.
And so I wasn't able to actually work on it at all.
And it continued to progress forward.
And so I was able to months later, come back and then started being more of a serious contributor.
And as I had my workload lighten up.
So it went from me really wanting to help out and not being able to and then eventually
finding the time to actually be more of a serious contributor.
It's been really awesome to kind of see, as I've made this journey, other people are certain
to make their journeys at different points as well.
The community has continued to just be amazing.
So I remember I was going back to, I think it was Chance's, Chance M's first PR, whenever
he was telling me something about white space, and it was going to reference that for another
PR that someone had done.
And whenever I had, and I often feel this way, I'm more of a vocal critic, because there's
some of the technical things that people are new to.
And so just trying to kind of help guide them, I end up pointing out a lot of things whenever
other people just kind of tend to approve it because it aesthetically looks good, which
is the part that I actually struggle with.
So it's good that there are people that do that.
See, but you say critic there, but I've watched your contributions.
And I would say they're more, I would call it more mentorship, because you tend to be
like, hey, this is great, and it works.
But this might be a more Hugo way of doing it, or this may be a more, you have this special
term that I love that I can't remember that is about only having things in one place,
but get used a bunch of times and
idempotent or reusable or dry.
Dry, that's the one.
There you go.
You hit it.
Yeah.
So I would call you, you know, you've been an amazing mentor in this project as well
that I've really appreciated.
So don't be too hard on yourself.
I definitely try to.
But I remember reviewing his first PR and there were quite a few comments.
And then like I had made the comment earlier of, I saw his latest PR and I was astounded
with how amazing it was.
So it was, it's been awesome to kind of see people contribute and continue to grow in
their technical knowledge and acumen about the project and becoming more serious contributors
as well.
So it's been really awesome to kind of see that progression from the outside, the maturity
of JB's repository specifically, it's been an ever growing thing.
I've contributed a little bit to one contribution to the Ansible communities repository for
a specific small change that was failing over there.
And they have like an entire automated CI system and other things.
So like they're really mature.
And I'd say we're definitely at least in the middle because we do have automated things
where we're doing checks and other things to make sure that we're continuing to improve
and giving fast feedback to users.
So we've definitely got, we're growing and we're not there to the finish line yet, but
we're definitely at least probably, I'd say 50% for the maturity of what I would consider
a mature open source project.
Oh, we're all grown up.
Look at that.
At least halfway there.
Well, it's better than where we were before.
Okay.
Well, that brings me to, I think maybe one last question, which is what can we do better?
Because I feel like, you know, okay, we're 50% there, but there's a lot of room to grow.
So from a, less from a features in the website perspective, but more from a, you know, how
we're helping people contribute and how we're managing contributions perspective, what do
you think is the next step for us?
There's definitely a few different ways to proceed.
One of them that I think I've attempted to do it in the past, but just haven't really
had any time to do it currently is figuring out a way to make the issues be in a more
interpretable layout.
So currently everyone kind of just has to peruse issues directly inside of GitHub, which
can be difficult for people if they're just trying to do a quick contribution here or
there, figuring out a way to either use the projects tab inside of GitHub or something
like that.
So where we can point people towards, Hey, if you want to do something, this is where
you go.
And it's easy to see, these are the things that need to be worked on.
These are the things that currently being worked on and the labels that Brent has made
has definitely helped and it helps kind of give a fast feedback.
It's just being able to kind of give like a higher overview of like what is available.
That's a really good point.
And that's been suggested to me previously.
I've spent some time in that project's view and it's been mentioned that that would be
a really great thing to have.
I just haven't quite wrapped my head around it yet, so I think I got some homework there.
Definitely.
It's a good suggestion.
It's a good suggestion.
I could definitely see that being a way to like, okay, I want to get started.
Where do I start?
And I can see that being a way to help people figure that out.
I think another thing that as we continue to mature how people contribute to us, integrating
tests as people integrate contributions is going to be important.
So for example, CGBasePlayer, he did a contribution recently and he actually submitted a test
for it as well.
And I was like, oh, I wasn't expecting that.
It was really awesome to actually see his contribution and see that the accompanying
test was there.
I had mentioned it on the issue saying, hey, it'd be a good idea to have a test there as
well.
And that was for the form submission issue, I just remembered, where if you hit submit
and it failed, the actual submit button would disappear past the iframe.
In the contact form.
Yeah, in the contact form.
So he actually made a test for it as well, which was really awesome.
Somebody's got to write that test.
So yeah, that's great.
All right.
Well, let's get to some boosts.
True Grits boosted in.
Four score and seven boosts ago.
With an enterprise boost.
Yeah, 1701 sat something I've noticed as a listener is that on your road trips, you try
and cram a bunch of traveling into a short period of time.
What if you tried to space out the trips and stay in places for just a bit longer or maybe
drive shorter distances at a time?
Also how large of a project would it be to just lose the remote connection to the studio
and just record everything at the RV?
To me, sounds like that would solve a lot of issues.
Why didn't you think any of that, Brent?
This is actually a multi-year conversation we've been having.
And these seem like obvious solutions.
However, it turns out that there is a lot more complexity in the background than we
tend to lead on all the time.
Some of that complexity is just like other outside factors that we can't even control.
Yeah, you know, family, kids, jobs, show production schedules.
That's truly what sets the pace of a road trip.
We start with a road trip plan that's like a month plus long and then we figure out how
to whittle it down to just as quick as possible because we just feel, I feel like there's
no better way to age me than just to constantly put me into a pressure cooker.
And so why not just get right to it?
It's just that, you know, I got three young kids, so there's that element of it and it's
just the way it is.
But we will always be experimenting with ways to make it more sustainable.
I think we're working on a path to sustainability.
And as far as doing the shows in the RV, if we have really solid connectivity, like Starlink's
really rocking or something like that, we have and can do.
But if we have limited connectivity, like say maybe we only have a singular LTE connection,
maybe it's only like at half strength, then it's actually a little bit better to offload
a lot of like the streaming and the remote connectivity to the studio.
And then we just have to establish one decent quality Opus audio stream to the studio.
And as long as the Internet connection is powerful enough to just get that Opus audio
back and forth, we can do a show and then we can mix in the studio and whatnot.
Of course, it requires a whole bunch of remote tools and whatnot.
But when I am an older man, probably, you know, 10 years from now and maybe less, who
knows, times seem to be flying with the kids.
But when the kids are older and dad isn't, you know, awesome and great to hang out with
and they've got their own friends and their own things and their own cars, maybe I will
go for longer road trips.
You never know.
That's that'll be my might be a little podcasting nomad.
Yeah.
And that'll be my reconciliation for the fact that my kids don't have anything to do with
me.
Rustic Castaversa comes in with a thousand sats.
So I know this whole episode has been about tough travel, of course, last week's episode.
But if you ever thought about doing a ham show with Noah, there is a museum in Minnesota
that works and would be really a cool place to do the show.
It's called the Pavek, P-A-V-E-K Museum.
I'll have a link in the show notes, Minnesota's source for the history of electronic communication.
That actually looks like a really cool place to do a show from.
Wow.
Chris, I had never considered doing the show in a museum.
We always pictured like a theater or I love this all of a sudden.
It's way cool.
You know, we have a really cool museum of electricity about 30, 40 minutes north of
the studio.
Really?
You've never mentioned this to me before.
It used to be the after party for Linux Fest Northwest when it was a smaller event.
And they've got they've got a Tesla cage in there where they'll you know, you can stand
in there and they'll zap you with lightning and it goes all over the cage.
And they've got tons of old radio stuff in there.
So every time someone does a boost, it'll zap us.
Oh, that'd be cool.
As long as you got the Tesla coil charged up, as long as you got lightning network,
it's pretty awesome.
Yeah, it is.
Wise Papa John used it.
Two thousand sats.
Love the show, guys.
It started on self hosted over a year ago and I still haven't found a Raspberry Pi
for sale.
But thanks for everything else, fellas.
And by the way, if anyone is in the Memphis area, he also sent another 222 sats and has
a Pi for sale.
Let's talk.
Well, Chris, you mentioned a new little computer that you got in Linux Unplugged.
What was the name of it?
Right.
The old Droid H3.
Brantley.
What do they say?
The Raspberry Pi color.
Yeah, we'll see.
I have it in for testing.
My RAM and MVME drive are supposed to arrive today, maybe while we're doing the show.
So I'm going to hustle up on getting that going and I'll report back because I'm pretty
excited about it.
I'm done with the Pi, I think.
I think I'm I mean, I have I have no ill will towards the Pi, but I just think I'm moving
on from the Pi with this with that old Droid H3.
Two SATA ports plus MVME.
That's pretty good.
The only thing that would make it better is if it had built in Wi-Fi.
It does not, but it does have four USB ports.
And if it had Intel NICs instead of Realtek NICs.
But I'm just happy they're not on the USB bus.
Austin Matt boots in with 69, 69 SATs.
Coming in hot with the boost.
Here's a show name idea.
Captain's Quarters.
Kind of keeps the same vibes as Office Hours, spatially at least.
Everyone's coming in to hang out in your quarters.
And it also kind of keeps it up with a potential space theme with a little Star Trek vibe.
I like it.
I think Captain's Quarters would suffer from the same issue that Office Hours suffers from.
Right.
But at least we're with our crew.
Yeah, I like that.
I do like the idea that the J.B. audience we call our crew.
But everybody's going to expect us to talk about Star Trek constantly.
Don't we?
You know, it's like it'd be a Captain Pike hair review podcast where we only talk about
Captain Pike's great hair and how to get my hair to the level of Captain Pike's great
hair.
Yeah, I like the idea, though.
I like I get where you're going, Austin Matt, with like the vibe and this and the space
connection.
I think I think the new name should keep that up.
So do keep the suggestions coming in.
If you would.
J.L.T.
Gordon boost in twenty five hundred sats boost.
How about TNG, the next generation as a show name?
And you could do TNG dot Jupiter broadcasting dot com space related.
And it's clear it's about Jupiter broadcasting.
So J.B. the next generation.
You know what?
It worked for one show that seemed to be pretty popular.
So maybe maybe.
And it looks like Gene Bean is our baller booster this episode with thirteen thousand
three hundred and seventy sats.
Hot take while you're still talking.
The consumable website is something I really like the idea of, but I want it to still work
if I'm using a hosting company like Buzzsprout.
I love the idea of using it as the feed, as a source of truth for large portions of it,
though.
I just want to be able to offload things like download infrastructure and host to a hosting
provider.
Yeah, you get a you get a half ding on that one.
I agree, Gene Bean.
When we're looking at this, that seems to be the tricky bit.
These MP3 files are big in relative terms to HTTP, general types of traffic, and you
want them to be very fast and you want them to be fast.
If you're in New Zealand, you want them to be fast.
If you're in Australia, you want them to be fast.
If you're in Austin, right, it's it's a tricky problem to solve when you consider that the
nature of a podcast is that when it gets released, it's potential that tens of thousands of people
go hit that file.
It's usually spread out over a 24 hour period, so it's not quite that bad.
But you don't you don't want the downloads to be slow because I've been that guy who's
out in the car just like waiting for that that MP3 to finish downloading so I can start
my drive and just thinking, why don't they have a better CDN?
I don't want you to ever worry about that with JB stuff.
So I agree, Gene Bean, that is the tricky part.
I am considering Cloudflare R2 on top of maybe like Linode object storage or something like
that.
Going to experiment with office hours.
I basically I've come to the conclusion that we got to eff around to find out.
And depending on how much we eff around, that's how much we'll find out.
And so I'm going to eff around with office hours and find out is the conclusion I've
come to.
This is where we break things.
Yeah.
Yeah.
So I am boosting with a thousand sats.
Just testing boost CLI.
Actual boost coming soon.
You know what?
Wow.
Any boost with boost CLI is an actual boost.
That is a baller boost in a totally different way.
I hoard that which your kind covet.
Yeah, that's it.
That's it.
Boost CLI is a whole suite of competence.
You get boost CLI working and you've got, you basically should get hired.
In my opinion, if somebody came in and said, yeah, I got boost CLI, you're hired, you got
a job.
Yeah, you should, you should easily get a job.
If you're having troubles getting a job, have them call me, I'll explain it to them.
All right.
So a pag dot boosted in with 3,333 sats.
Boost!
Hi you all.
Chris likes to recommend breeze for those who don't want to switch to a new podcast
app.
Well, I am a happy user of antenna pod and I don't want to switch.
My issue with breeze is that I really haven't found an easy way just to use it for plain
old boosting.
To actually send the boost, I got to go find your episode, press play, then send the boost
in.
Not to mention, he's probably already listening to the podcast and antenna pod while he's
doing it.
So there's like that whole issue.
Here's the trick that works for pag dot or page dot or pag, pag day pod verse allows
me not only to boost without playing the podcast, but I can actually do it from my PC and don't
have to bother with my dang phone.
I added the dang part.
That's a great tip.
And I've been noticing more and more folks out there are using pod verse.
And actually you can go to the episode webpage on our new site and just click the lightning
bolt on the player and it'll take you right to there.
So new features for the website.
We haven't I don't think I've covered that yet part, but that's one of the things it's
been in draft PR for I don't know how long and I've wanted to go tackle it.
I just haven't had a chance to go do it to integrate value for value on the actual website.
Yeah, it's really awesome.
We should we should talk new features here in a sec.
That's a that's a that's probably top on my list.
And then peg dot page dot I think you're about to get corrected here, Chris.
Just a short boost.
They sent three hundred and thirty three stats.
Just a short boost on the pronunciation of my name.
You're mispronouncing the G. It's pronounced like the G in dig.
So it's peg doc.
Peg dot.
Because dig.
Peg.
I don't know.
I think you got it.
I don't know.
I think you got it.
You think?
I need to know.
I need to know.
Thank you to everybody who sent a boost in or sent some stream streaming some stats.
We appreciate all of you.
Thank you very much.
You can grab a new podcast app at new podcast apps dot com and send a boost in or just go
to Podverse.
That's a GPL open source podcast player that's got a Web version and you can boost from there.
I love Albi.
The Albi extension makes it all possible.
Albi.
You'll learn all about it.
It's it's a whole new world of technology.
It's all decentralized.
It's all self-hosted.
No company can cut you off.
It's a beautiful thing.
And it incentivizes creators to respond directly to their audience.
And on our side, when those boosts come in, it's a smile on our face every single time.
So thank you everybody who goes to new podcast apps, grabs one and sends a boost into the
show.
We got 250 stats too from Tepalus who enjoyed the behind the scenes troubleshooting information
we talked about last week.
That's kind of our idea here.
Office Hours is really a podcast for J.B. community members.
We're not really trying to reach anybody else.
It's great if they want to listen, probably half the stuff probably doesn't make sense
if they do.
Yeah.
So before we get out of here, let's talk about like, you know, some new stuff that you'd
like to see.
Alex and Brent.
I mean, we talked about value for value in the browser.
That sounds tricky just because, like, how do you I guess you need a way to select which
show you're boosting.
Like, I'm picturing the UI on that because booster based are tied to a particular episode.
So you need like a message box, an episode selector, something like that.
And maybe then it would read the value tag from the feed for that episode.
So I haven't looked into all the specifics yet, but I figured we would try and take kind
of a similar approach to how Podverse actually implements it in their website.
So just kind of have a form on the side.
And again, I mentioned I'm not the aesthetic one.
So I'm only thinking of functionality.
Team effort.
Exactly.
So if you had like a form on the side that would just automatically for that episode
that you're on, choose all the necessary information and submit it the exact same way.
So that was what I was mentally thinking.
But again, I haven't super dug into a lot of this stuff.
So I suppose, yeah, that makes sense.
And you could even just infer it based on the episode you're watching.
I picture something like Jupiter broadcasting dot com slash boost.
And so it's just one spot you go to.
So you don't have to, like, go to the individual episode page if you don't want you could just
go to the boost page.
OK, well, how about keep that idea?
And on every episode page and also show page, you just have a giant boost button.
And when you click it, it pre fills out the form, you know, takes you there and pre fills
out the form.
I don't know how to do that.
That's someone else's job.
But the button should probably be like twelve eighty by seven twenty inside.
I mean, just and it flashes red.
Right.
Yeah.
Real big button.
Yeah.
Maybe like just have the button marquee or you've probably seen that website where you
go to click the button and it moves.
We could do that just like a couple of times to really make them want it, you know, make
sure I recently saw a movie that the A.I. from the phone.
I can't remember what it's called, but the A.I. from the phone.
He was trying to power off the phone and the button moved every time he went to go touch
the actual power off button.
It was hilarious.
There you go.
It's the way the future.
Basically, that's what we have now is slow phones.
You know, when the U.I. changes, Chris, I know that's one of your pet peeves.
I hate that.
I hate that.
Or websites where the JavaScript finished on the button, it moves right as you're going
to click and you click on something else and you got to go back and it does it again.
And oh, next has been doing that to me recently.
Now they think about it.
I hate that so freaking much.
All right.
Alex and Brett, is there anything else we want to talk about while we are gathered together
in the office?
Well, I wanted to ask you what feature you're looking forward to the most, but I think I
know the answer.
Yeah.
The value stuff.
I think one day definitely the boost stuff.
That would be great.
I think it would also be really cool to just revisit the idea of a live tracker on our
website for like a future trip.
Like if we go to do a venue and we drive there, why not have the live tracker going?
You know, so that kind of stuff.
I could see a live tracker page and we would just have to.
I think we have a lot of the plumbing on the back end for own tracks and everything still
in place.
We just don't have it publishing anywhere.
I'm not positive.
Nothing's precious.
We could always redo it, too.
But that could be fun for something that maybe for when we're doing events like a meetup
or a road trip, like an event page that people could go to to get information about the meetups
or get information about the road trip that we're on and see the route.
Something like that could be.
So it's not just whatever gets mentioned in the show.
There's actually something physical to go look at.
But there's nothing like I have firm around that and there's no timelines.
But OK, another example could be Linux Fest Northwest.
If that comes back and we go, it'd be cool to have a dedicated Linux Fest Northwest page
to find out information where we're going to be at, maybe have the live stream embedded
there.
Something.
Well, that would kind of integrate into what you were talking about for having the community
build kind of like a system to help organize those things.
Right.
Well, like a meetup dot com alternative.
Yeah.
Yeah.
Yeah.
Oh, yeah.
Yeah.
That's a big one.
Letting the community self organize their own meetups.
Every single meetup we go to.
It's true.
People always say we should keep doing this, even if the JB guys can't make it.
We should keep doing this.
You guys want to keep doing this?
Oh, yeah.
I want to keep doing this.
I want to keep doing this.
But the issue is, is they all go their separate ways and it just doesn't really happen.
But if we had something there and every time we heard them, we could say, all right, go
here, organize it.
We'll help you get it set up.
I think people would keep going that they when they go to the meetups are like, shit,
this is so great.
I want to do this all the time.
Let's do this every week, guys.
But then you get back to your life, you get busy, you don't have that connection.
You go back to the two dimensional Internet stuff and you forget about it.
And if we could just jump on it and if we could if we could tell people, go here, get
it organized.
And then for our own stuff, we had a tool to use as well, because like Alex is going
to be at all things open.
We kind of debate, like, is that worth using the meetup page?
Is it not?
But if we just had a spot that was ours for this stuff, it seems it feels like it'd be
a no brainer.
We would just put everything on there.
Yeah, I agree completely.
So yeah, that's high on my list, too.
I have a feature that I'd like to see.
And it was one we meant to do and just kind of couldn't, and that is to integrate the
archive back into the website.
That stuff's been missing because we made some hard decisions to say, well, let's put
the site live with the current shows, because the archive, it turned out, was a bigger project
than we had anticipated.
And sounds about right.
You know, Stefan did a lot of work, mostly, I think, in archiving some of that stuff,
but also in just thinking about how to integrate it, because it actually turns out not that
straightforward.
And then got busy, which is completely okay, Stefan, we still love you.
But I think now's the time to do a little bit of work there.
It would be great to have some of those archive shows be available for audience members to
rediscover.
I know for us, sometimes it's fun to dig back into some of those really old Linux action
show episodes, or even the Linux Unplugged episodes, just to see how silly we sounded.
Me, me.
How silly I sounded.
Yeah, you sound like a young little kid with his voice turned up high.
That's true.
Who wouldn't want to download that?
Yeah, we better get that posted super fast.
No, I agree.
It would be good to have.
I've thought, too, it would be nice to have a way to expose chapter title information,
too, potentially.
I don't know.
I'm still on the fence on that.
Because it isn't the Podverse player, you know, you have you have the chapters.
Drew works super hard on those amazing titles.
So I know.
Yeah.
But we're really in a good spot with it.
I think we're in a really good space.
So super grateful.
This is one of my, you know, absolute favorite experiences with an open source project for
obvious reasons.
But it really just has been.
The community has been great.
I think I'm wondering if if there isn't something Alex, maybe this is a good way to wrap up
maybe a final question to you is do you feel like building an open source project around
something it has sort of been the key to making this work?
I'm curious to know your thoughts there, because some open source projects start and they kind
of go nowhere and other ones, they they kind of get momentum and steam and life to them.
And I'm I'm wondering what you think the differentiator is there.
Yeah, I definitely think, one, it's people dedicated to actually wanting to do some type
of value for value exchange.
So having not necessarily even the direction of, oh, hey, we need a new website, but just
helping out JB in general is something that I think has continued to give people more
incentive to come back and contribute and to actually see their changes get deployed
and seeing fast responses from the website and stuff.
It's it gives them a kind of a sense of accomplishment as they're continuing to contribute as well,
which also then makes them want to contribute again.
So I think specifically, whenever this whole journey started, saying that it was dedicated
for the website specifically, allowed people to have something to centralize.
So I do think having that kind of driving factor, not only, hey, it's a JB project,
but it's also, hey, we need a new website, and we kind of need it urgently because we're
going to be losing our hosting provider.
So calling out to the community and being like, hey, we need help and allowing people
to actually help has really allowed people to feel involved in being a part of the actual
team.
Yeah.
And I can also see there's something nice about you contribute something, you actually
get to see the difference.
You know, a lot of a lot of things all of us probably experience and work on is there's
a lot of things we'll tool away at in our day job or in our regular life and you work
at it and you work at it and you work at it.
You don't necessarily see the fruit of that labor.
You don't necessarily see the return and the payoff and the completion aspect of it.
And when it's a project like this and we're moving pretty quick and we're integrating
those changes and we're deploying them on a pretty regular basis, you could put some
work into it.
And a couple of weeks later, you know, thousands of people are using something you just worked
on.
And I think there's something to that, too, that can be kind of satisfying.
I hope people find it satisfying because we are super grateful.
And kind of speaking to the thousands of people using it, the stats or the plausible instance
that Alex deployed is still out there.
So periodically I check that and I'm like, wow, thousands of people are actually using
it.
You can actually see the statistics being shown.
You mean it's not just the three of us?
And I hope it continues to grow.
Right.
Because we've had many, many years of sending people to all of the other websites, the show
specific websites, YouTube, Twitch, and now we're kind of saying, come back home.
You know, we've rebuilt the storefront.
Come on home again.
And it's going to take a little while to re-habituate people because they, you know, a lot of people
just listen on their podcast app.
If they're going to go to the website at all, they just bring up the notes and click a link.
They don't even have to go to a website.
But if they do, they go to the show page.
And I think over time that'll start to change.
As we begin to move away from Fireside too, we'll probably redirect the individual show
sites like a Linux Unplugged or OfficeHours.hair.
We'll probably redirect that to the sub show page on the JB website once things are ready
and it's time for Fireside to go.
So then that will also see in theory a little bit of an increase in traffic when we do that
as well.
So it's all coming and I'm glad we have something built for them when they get here.
You know, I'd say I think one of my favorite things about this project has been that it
has given me a new way to hang out with our audience.
And we're building something together, which is really fun, too.
It's not, you know, Chris, we get the feeling often that it's, you know, sometimes we publish
an episode and you don't always get that feedback that there's someone else out there.
Or if you do, it's like Twitter or YouTube comments.
That's what I was saying earlier.
It's like as a content creator, you get this really weird echo chamber source of your most
feedback.
But the fun part is with this website project, at least for me personally, it's felt like
most of the energy has been in a like a two way exchange is conversations happening.
And we're building this thing together.
And there's a bunch of people like huddled around talking about how to best accomplish
a certain feature or solve some bug or something.
And it's like, I'm just getting to know our audience members in a totally different way.
And I love that stuff.
And up until we actually had issues with a deployment one time, I hadn't actually seen
Alex on a video from Self Hosted.
I hadn't actually seen him before.
And we hopped on a video call to kind of troubleshoot it out.
And that was my first time ever actually seeing Alex.
I've heard his voice for years, but that was the first time I had seen it.
Yeah, that's always an experience.
So it's been really cool from my perspective as well, getting actually to I mean, it's
the whole reason why I ended up getting brought on this specific podcast episode.
So it's been really cool.
It's more of that meetup kind of energy.
You know, it's that it's that kind of vibe, that meetup vibe a little bit, but, you know,
in a different context.
All right, gentlemen, we should wrap it up there.
But thank you for the work today specifically.
But thank you for all of the work and everybody out there contributing and anybody considering
you can find the Jupiter Broadcasting dot com repo on our GitHub.
We'll put a link to that stuff in the show notes as well.
So you have all of that over at office hours dot hair slash 15.
Heck yeah.
I have a feeling that they mean I love it, but it's not it's not going to be around forever
with the name change.
It might have to change.
I don't know.
Maybe we should keep it.
You know, just the domain like so the long timers feel a little Easter egg.
Yep.
Love it.
Yeah.
The old schoolers.
Yeah, they'll know.
All right, everybody.
Thank you very much for joining us.
That does mean office hours are closed, so you got to get out of here.
I only got so much room and honestly, I don't like leaving my pants on.
So you got to go.
You got to go.
Thanks for being here.
