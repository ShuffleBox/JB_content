1
00:00:00,000 --> 00:00:01,360
So far, I think I hate Shinobi.

2
00:00:01,360 --> 00:00:02,080
Oh, no.

3
00:00:02,080 --> 00:00:03,480
I thought I was going to love it.

4
00:00:03,480 --> 00:00:03,920
Yeah.

5
00:00:03,920 --> 00:00:04,420
No.

6
00:00:04,420 --> 00:00:05,040
I think I hate it.

7
00:00:05,040 --> 00:00:06,160
You're supposed to love it.

8
00:00:06,160 --> 00:00:06,660
I know.

9
00:00:06,660 --> 00:00:09,840
And I went and I bought all the cameras before I even tried it.

10
00:00:09,840 --> 00:00:12,800
So I got five Wwisecams.

11
00:00:12,800 --> 00:00:16,080
I reflashed all of the Wwisecams to the RTSP firmware,

12
00:00:16,080 --> 00:00:19,360
so that way I could just stream directly from them over my LAN.

13
00:00:19,360 --> 00:00:23,560
I got a Raspberry Pi 4 dedicated to the Shinobi installation,

14
00:00:23,560 --> 00:00:25,920
set up the Shinobi DVR software.

15
00:00:25,920 --> 00:00:27,600
Or I guess it's not technically DVR.

16
00:00:27,600 --> 00:00:32,120
It's whatever the term is for a closed circuit recording system.

17
00:00:32,120 --> 00:00:34,160
Got it all loaded up.

18
00:00:34,160 --> 00:00:35,560
And I'm just not thrilled.

19
00:00:35,560 --> 00:00:38,020
First of all, by default, it doesn't support motion detection.

20
00:00:38,020 --> 00:00:41,920
That's a plug-in, which is broken right now on ARM.

21
00:00:41,920 --> 00:00:46,840
And it, just three cameras, is slamming the Pi,

22
00:00:46,840 --> 00:00:48,920
maxed out all the cores on the Pi.

23
00:00:48,920 --> 00:00:50,480
That's a real shame.

24
00:00:50,480 --> 00:00:53,960
I mean, I've used Shinobi a little bit.

25
00:00:53,960 --> 00:00:54,680
I'm not an expert.

26
00:00:54,680 --> 00:00:56,920
I've got three Wwisecams feeding into it here,

27
00:00:56,920 --> 00:00:58,760
and it's running on my big Xeon downstairs.

28
00:00:58,760 --> 00:01:01,560
But the interface is a little bit confusing,

29
00:01:01,560 --> 00:01:02,860
I've found at times, right?

30
00:01:02,860 --> 00:01:04,400
So when you're trying to pull in the feeds,

31
00:01:04,400 --> 00:01:06,480
you have to set all sorts of parameters.

32
00:01:06,480 --> 00:01:09,960
Yeah, and I think I may have some finessing to do there.

33
00:01:09,960 --> 00:01:12,560
And I probably should also mention the big caveat

34
00:01:12,560 --> 00:01:14,040
that I did.

35
00:01:14,040 --> 00:01:16,620
I broke my own rule with using the Raspberry Pi 4

36
00:01:16,620 --> 00:01:20,080
in production, and I did not put Raspbian on it.

37
00:01:20,080 --> 00:01:22,040
Because I'm not super comfortable with Raspbian,

38
00:01:22,040 --> 00:01:24,800
and when it does big updates and stuff,

39
00:01:24,800 --> 00:01:27,000
I don't have experience with it to trust it.

40
00:01:27,000 --> 00:01:30,480
I'd rather use, like, an LTS Ubuntu or a CentOS,

41
00:01:30,480 --> 00:01:33,380
something that I just have more faith in.

42
00:01:33,380 --> 00:01:35,480
And I let that doubt get to me.

43
00:01:35,480 --> 00:01:40,840
And I loaded it with a community build of Ubuntu 18.04 LTS

44
00:01:40,840 --> 00:01:43,720
that swaps out Ubuntu's kernel and puts the Raspbian kernel

45
00:01:43,720 --> 00:01:44,420
in.

46
00:01:44,420 --> 00:01:47,680
And I thought, maybe this will work pretty well.

47
00:01:47,680 --> 00:01:50,200
Maybe it'll support all the drivers, but maybe it's not.

48
00:01:50,200 --> 00:01:54,120
And so today, I brought the Raspberry Pi in with me,

49
00:01:54,120 --> 00:01:55,080
into the studio.

50
00:01:55,080 --> 00:01:56,760
I'm going to reflash it over to Raspbian,

51
00:01:56,760 --> 00:01:59,400
reset up Shinobi on that, and then

52
00:01:59,400 --> 00:02:01,680
see if maybe I have better GPU acceleration,

53
00:02:01,680 --> 00:02:03,760
because I need to pull in more cameras than three.

54
00:02:03,760 --> 00:02:05,600
And so if it can only do three cameras,

55
00:02:05,600 --> 00:02:08,060
I don't think I'm going to do a Pi for every three cameras.

56
00:02:08,060 --> 00:02:09,800
I think I'd have to go to x86.

57
00:02:09,800 --> 00:02:11,060
Yeah, that's a bit expensive.

58
00:02:11,060 --> 00:02:13,640
Are you running into issues when you load up

59
00:02:13,640 --> 00:02:17,760
the UI, the web interface, or is it just constantly slammed?

60
00:02:17,760 --> 00:02:20,720
It's definitely worse when the web UI is up,

61
00:02:20,720 --> 00:02:23,480
but it's still very slammed, even when I don't have the web

62
00:02:23,480 --> 00:02:24,880
UI running.

63
00:02:24,880 --> 00:02:26,780
The other thing is, is in Shinobi,

64
00:02:26,780 --> 00:02:29,560
I'm seeing more frame loss, like chunks of the video

65
00:02:29,560 --> 00:02:31,700
go missing, like with encoding errors.

66
00:02:31,700 --> 00:02:34,840
I do not have that same problem when I open up the same video

67
00:02:34,840 --> 00:02:37,960
stream and just pass the URL to MPV or VLC.

68
00:02:37,960 --> 00:02:39,280
Opens right up, no problem.

69
00:02:39,280 --> 00:02:39,880
Yeah.

70
00:02:39,880 --> 00:02:41,560
If I had a tiling window manager,

71
00:02:41,560 --> 00:02:45,800
and I could just put eight versions of VLC,

72
00:02:45,800 --> 00:02:47,040
that might work well.

73
00:02:47,040 --> 00:02:48,440
So you know what I've done in the meantime,

74
00:02:48,440 --> 00:02:50,840
and it's not great, but I've pulled the RTSP

75
00:02:50,840 --> 00:02:52,380
feeds into Home Assistant.

76
00:02:52,380 --> 00:02:53,460
Oh, how's that working?

77
00:02:53,460 --> 00:02:53,960
Pretty good.

78
00:02:53,960 --> 00:02:54,720
I get real time.

79
00:02:54,720 --> 00:02:55,680
I don't get recording.

80
00:02:55,680 --> 00:02:58,760
But I now just have a tab in my Home Assistant dashboard

81
00:02:58,760 --> 00:03:01,960
called Security, where I've put my motion sensors,

82
00:03:01,960 --> 00:03:04,880
my outside cameras, and my inside cameras all on one tab.

83
00:03:04,880 --> 00:03:06,780
I tap that, and it pulls them all up.

84
00:03:06,780 --> 00:03:08,560
So it's really nice just to get a look

85
00:03:08,560 --> 00:03:11,800
at the state of things, that it works really well for that.

86
00:03:11,800 --> 00:03:14,320
We haven't really touched on your camera setup much yet,

87
00:03:14,320 --> 00:03:15,820
and I think we'll probably get to it

88
00:03:15,820 --> 00:03:19,920
in a future episode of the perfect IP camera,

89
00:03:19,920 --> 00:03:23,400
the perfect POE camera, if such a thing even exists, right?

90
00:03:23,400 --> 00:03:23,960
Oh, totally.

91
00:03:23,960 --> 00:03:25,800
Yeah, we can totally do a dedicated episode.

92
00:03:25,800 --> 00:03:29,700
I'm holding on to this why stuff just for a little bit longer,

93
00:03:29,700 --> 00:03:31,280
because I'd really like to figure out

94
00:03:31,280 --> 00:03:33,200
how to make it work for people, because these

95
00:03:33,200 --> 00:03:37,120
are $25 cameras that you can put RTSP support on.

96
00:03:37,120 --> 00:03:39,840
And they make for such a great addition to your home security.

97
00:03:39,840 --> 00:03:42,720
And they support person detection, motion detection.

98
00:03:42,720 --> 00:03:45,600
They have two-way speakers and a microphone, obviously,

99
00:03:45,600 --> 00:03:47,060
for $25.

100
00:03:47,060 --> 00:03:49,240
And you can completely run them offline

101
00:03:49,240 --> 00:03:50,520
on your own local LAN.

102
00:03:50,520 --> 00:03:52,220
So I'm going to stick with it for a bit,

103
00:03:52,220 --> 00:03:54,320
see if I can't tweak my Shinobi config, because I'd

104
00:03:54,320 --> 00:03:56,020
love to come on the show and tell people

105
00:03:56,020 --> 00:03:58,780
how to get it all rocking on a Pi with Wyze cams.

106
00:03:58,780 --> 00:04:02,220
Because for $100, you could have a full camera security system.

107
00:04:02,220 --> 00:04:05,660
For the price of one, not even one Nest Cam.

108
00:04:05,660 --> 00:04:06,640
Yeah.

109
00:04:06,640 --> 00:04:08,860
The other thing is I was not able to get

110
00:04:08,860 --> 00:04:10,520
Shinobi running in a container.

111
00:04:10,520 --> 00:04:12,360
I've had, like, that's the first application

112
00:04:12,360 --> 00:04:14,280
where I bailed on the container approach

113
00:04:14,280 --> 00:04:15,400
and built it on the host.

114
00:04:15,400 --> 00:04:19,080
Bro, you should hook up your container expert over here.

115
00:04:19,080 --> 00:04:20,920
No, I thought about bugging you, actually.

116
00:04:20,920 --> 00:04:23,120
But I thought you were dealing with your own container

117
00:04:23,120 --> 00:04:24,840
issues at the time, so I didn't want to bother you.

118
00:04:24,840 --> 00:04:25,640
Oh, probably, yeah.

119
00:04:25,640 --> 00:04:28,120
Actually, interestingly enough, so I

120
00:04:28,120 --> 00:04:32,280
mentioned stat ping in an episode recently.

121
00:04:32,280 --> 00:04:36,140
And Joe Ressington pinged me a few hours after it aired

122
00:04:36,140 --> 00:04:40,160
and went, Alex, your stat ping is down.

123
00:04:40,160 --> 00:04:41,880
And I'm like, no.

124
00:04:41,880 --> 00:04:44,480
I thought I'd been DDoSed by the show audience or something.

125
00:04:44,480 --> 00:04:47,300
But it turned out I'd actually just been a bit honey badger

126
00:04:47,300 --> 00:04:49,200
with the updates.

127
00:04:49,200 --> 00:04:51,120
The ironic badger goes honey badger.

128
00:04:51,120 --> 00:04:51,760
Right.

129
00:04:51,760 --> 00:04:53,480
So I have this.

130
00:04:53,480 --> 00:04:57,000
I use Docker Compose to do all of my container management.

131
00:04:57,000 --> 00:05:01,280
I just log in randomly and just do Docker Compose pull,

132
00:05:01,280 --> 00:05:03,160
Docker Compose up.

133
00:05:03,160 --> 00:05:05,800
And that's my update process for updating my apps.

134
00:05:05,800 --> 00:05:07,640
It's as simple as that.

135
00:05:07,640 --> 00:05:09,080
I probably should script it, right?

136
00:05:09,080 --> 00:05:12,120
I should probably have DigitalOcean do a backup,

137
00:05:12,120 --> 00:05:15,140
or what's it called, a snapshot via the API,

138
00:05:15,140 --> 00:05:18,120
and then do the updates, and then have some kind of sanity

139
00:05:18,120 --> 00:05:19,080
checks afterwards.

140
00:05:19,080 --> 00:05:21,800
But I'm not doing this for business.

141
00:05:21,800 --> 00:05:24,000
I'm doing this for my own personal pleasure.

142
00:05:24,000 --> 00:05:25,040
You do know better.

143
00:05:25,040 --> 00:05:26,560
You're just choosing not to do it.

144
00:05:26,560 --> 00:05:28,680
I just couldn't be bothered, yeah.

145
00:05:28,680 --> 00:05:29,960
All the config is in Ansible.

146
00:05:29,960 --> 00:05:33,160
So at least I have it all stored in Git somewhere.

147
00:05:33,160 --> 00:05:34,680
So I'm not going to lose it overnight.

148
00:05:34,680 --> 00:05:37,280
But anyway, the interesting issue with this one

149
00:05:37,280 --> 00:05:38,660
was I logged into the droplet.

150
00:05:38,660 --> 00:05:42,480
I was actually in a hotel room in Florida at the time,

151
00:05:42,480 --> 00:05:45,960
connected via my slate, WireGuard VPN,

152
00:05:45,960 --> 00:05:48,760
the little travel router, connected back

153
00:05:48,760 --> 00:05:50,640
to my house in Raleigh.

154
00:05:50,640 --> 00:05:53,680
I'm ordering another one of those slates.

155
00:05:53,680 --> 00:05:56,080
We talked about it recently, like two episodes ago.

156
00:05:56,080 --> 00:05:58,960
But this is a little OpenWRT powered box

157
00:05:58,960 --> 00:06:02,320
that has WireGuard support and CAPTCHA support.

158
00:06:02,320 --> 00:06:04,320
So you can throw it on a hotel Wi-Fi,

159
00:06:04,320 --> 00:06:07,280
VPN up all your traffic, and that

160
00:06:07,280 --> 00:06:09,480
becomes the access point for every device in your room.

161
00:06:09,480 --> 00:06:11,920
I'm traveling mid-November, and I'm picking one of those up

162
00:06:11,920 --> 00:06:12,600
for the trip.

163
00:06:12,600 --> 00:06:13,480
Good shout.

164
00:06:13,480 --> 00:06:14,640
I swear I should be on commission.

165
00:06:14,640 --> 00:06:18,400
I think I've sold about 15 of those devices since then.

166
00:06:18,400 --> 00:06:19,080
Really?

167
00:06:19,080 --> 00:06:21,320
Too bad they don't have an affiliate deal or something.

168
00:06:21,320 --> 00:06:22,280
Yeah, right.

169
00:06:22,280 --> 00:06:24,960
So anyway, I logged into the droplet via SSH,

170
00:06:24,960 --> 00:06:26,760
and I looked at the logs for the container,

171
00:06:26,760 --> 00:06:28,480
and it said, schema error.

172
00:06:28,480 --> 00:06:32,120
You're now running Postgres 12 instead of 11.

173
00:06:32,120 --> 00:06:37,320
Statping was running against Postgres 11.

174
00:06:37,320 --> 00:06:41,200
So it was just a case of going into the Docker compose file,

175
00:06:41,200 --> 00:06:43,640
adding a tag, because currently I didn't actually

176
00:06:43,640 --> 00:06:47,080
have any tags specified, so it was just pulling latest.

177
00:06:47,080 --> 00:06:51,160
And so it rolled back from version 12 to version 11

178
00:06:51,160 --> 00:06:53,040
in about eight seconds.

179
00:06:53,040 --> 00:06:55,080
When it pulled the old image down again,

180
00:06:55,080 --> 00:06:58,280
I pressed Docker compose up, and lo and behold,

181
00:06:58,280 --> 00:07:00,000
Statping came straight back up.

182
00:07:00,000 --> 00:07:01,040
Isn't that amazing?

183
00:07:01,040 --> 00:07:02,640
Oh, it's so good.

184
00:07:02,640 --> 00:07:06,680
Are you able to fully appreciate how much better that

185
00:07:06,680 --> 00:07:08,840
is than the old way of doing things,

186
00:07:08,840 --> 00:07:11,080
where if you installed everything via package,

187
00:07:11,080 --> 00:07:14,360
it would have spewed libraries all over your system,

188
00:07:14,360 --> 00:07:17,240
and it would have been a massive uncoupling to walk back,

189
00:07:17,240 --> 00:07:20,640
especially if other components or applications on the system

190
00:07:20,640 --> 00:07:22,800
were dependent on that package?

191
00:07:22,800 --> 00:07:25,480
Less than five minutes from diagnosing the issue

192
00:07:25,480 --> 00:07:27,760
to having it resolved.

193
00:07:27,760 --> 00:07:30,120
I mean, luckily for me, the database

194
00:07:30,120 --> 00:07:32,760
hadn't updated its schema itself automatically

195
00:07:32,760 --> 00:07:34,960
or anything like that, but just rolling back

196
00:07:34,960 --> 00:07:38,040
the image of the database was super duper easy.

197
00:07:38,040 --> 00:07:40,940
So if you want a sales pitch for why containers

198
00:07:40,940 --> 00:07:43,320
are great, that's definitely up there.

199
00:07:43,320 --> 00:07:47,440
Containers today on the self-hosted podcast.

200
00:07:47,440 --> 00:07:51,080
That's the container corner segment for today.

201
00:07:51,080 --> 00:07:52,480
I have another thing I need to admit

202
00:07:52,480 --> 00:07:55,800
is my current storage setup is already

203
00:07:55,800 --> 00:07:57,840
starting to fail me because I'm starting

204
00:07:57,840 --> 00:07:59,940
to do multiple disks attached directly

205
00:07:59,940 --> 00:08:02,840
to the Pi, each Pi, which is now three of them.

206
00:08:02,840 --> 00:08:03,760
Via USB?

207
00:08:03,760 --> 00:08:05,640
Yeah, USB 3.

208
00:08:05,640 --> 00:08:08,060
I don't have super high performance requirements

209
00:08:08,060 --> 00:08:11,040
because I'm accessing these mostly over Wi-Fi, so.

210
00:08:11,040 --> 00:08:12,480
It's just a reliability thing.

211
00:08:12,480 --> 00:08:17,160
I've just seen USB devices drop off the bus for no reason.

212
00:08:17,160 --> 00:08:18,800
That never happens with SATA.

213
00:08:18,800 --> 00:08:21,480
If you run a machine for 100 days,

214
00:08:21,480 --> 00:08:24,720
I would way more bet on a USB disk disappearing than a SATA

215
00:08:24,720 --> 00:08:27,960
just wouldn't disappear unless the disk fails.

216
00:08:27,960 --> 00:08:31,480
The other thing is I don't have enough storage for the cameras.

217
00:08:31,480 --> 00:08:34,040
I don't need a lot of disk, but I'd

218
00:08:34,040 --> 00:08:37,680
like probably at least three solid days worth of storage

219
00:08:37,680 --> 00:08:39,520
so I can go back if something happens.

220
00:08:39,520 --> 00:08:41,040
A week would be ideal.

221
00:08:41,040 --> 00:08:43,640
But also, I need to accommodate things like Plex, which

222
00:08:43,640 --> 00:08:48,480
holds my books, my audio books, my music, my videos,

223
00:08:48,480 --> 00:08:51,360
about a terabyte of local media, and some pictures I

224
00:08:51,360 --> 00:08:53,400
need to accommodate, some notes.

225
00:08:53,400 --> 00:08:56,440
I've also got things like Docker configs

226
00:08:56,440 --> 00:09:00,960
and the containers-related data that I all need to store.

227
00:09:00,960 --> 00:09:02,160
And I don't know if I should.

228
00:09:02,160 --> 00:09:04,720
What I've done so far is I've got,

229
00:09:04,720 --> 00:09:08,040
when on sale, these Samsung MV and E

230
00:09:08,040 --> 00:09:11,400
drives that are bus-powered over USB 3.0 and they're tiny.

231
00:09:11,400 --> 00:09:13,320
I'm holding one up to you now on Telegram.

232
00:09:13,320 --> 00:09:14,320
I've just sent you a picture.

233
00:09:14,320 --> 00:09:16,240
That's the SanDisk one you have there, right?

234
00:09:16,240 --> 00:09:18,280
It's not even half the size of a credit card.

235
00:09:18,280 --> 00:09:18,920
No.

236
00:09:18,920 --> 00:09:20,640
And it's ruggedized.

237
00:09:20,640 --> 00:09:22,560
It sort of has a rubber coating.

238
00:09:22,560 --> 00:09:26,080
And it's also very well-rated in terms of performance

239
00:09:26,080 --> 00:09:27,280
with the Raspberry Pi.

240
00:09:27,280 --> 00:09:30,360
I just recently went through some disk benchmarks.

241
00:09:30,360 --> 00:09:32,360
Here's the other thing that really, really

242
00:09:32,360 --> 00:09:34,680
is a tricky thing for me in the RV.

243
00:09:34,680 --> 00:09:36,960
Is whatever disk solution I implement

244
00:09:36,960 --> 00:09:40,840
needs to be able to withstand a level four

245
00:09:40,840 --> 00:09:42,680
earthquake on the Richter scale.

246
00:09:42,680 --> 00:09:45,440
Because when I drive, that's essentially

247
00:09:45,440 --> 00:09:48,440
what the conditions inside the RV is, is a level four

248
00:09:48,440 --> 00:09:49,280
earthquake.

249
00:09:49,280 --> 00:09:52,360
And so the disks, ideally, could stay online while we drive,

250
00:09:52,360 --> 00:09:54,120
because I might have the children on board

251
00:09:54,120 --> 00:09:56,720
and they'd like to watch television or use the services

252
00:09:56,720 --> 00:09:58,120
while we're going down the road.

253
00:09:58,120 --> 00:10:00,480
Man, that would have made road trips so great as a kid.

254
00:10:00,480 --> 00:10:03,240
Can you even imagine just having, not just,

255
00:10:03,240 --> 00:10:05,640
you know, I mean, when I was a kid,

256
00:10:05,640 --> 00:10:07,560
we used to play games in the car like,

257
00:10:07,560 --> 00:10:10,040
count the number plates that start with the letter L,

258
00:10:10,040 --> 00:10:11,120
you know?

259
00:10:11,120 --> 00:10:11,680
Right.

260
00:10:11,680 --> 00:10:14,000
Meanwhile, they've got Wi-Fi with internet.

261
00:10:14,000 --> 00:10:16,600
And they've got a Plex library of their favorite shows.

262
00:10:16,600 --> 00:10:19,360
And they have a total blank check to marathon them,

263
00:10:19,360 --> 00:10:20,600
because what else can they do?

264
00:10:20,600 --> 00:10:23,240
Kids these days don't even know they're born, Chris.

265
00:10:23,240 --> 00:10:25,560
I know.

266
00:10:25,560 --> 00:10:28,920
And so I need to accommodate all these different factors.

267
00:10:28,920 --> 00:10:31,280
So it kind of seems like I need to go solid state.

268
00:10:31,280 --> 00:10:34,520
Yeah, you probably do, right?

269
00:10:34,520 --> 00:10:37,520
And solid state's getting there, you know?

270
00:10:37,520 --> 00:10:39,840
Linus Tech Tips did a video not that long ago

271
00:10:39,840 --> 00:10:42,760
about a new 3.84 terabyte.

272
00:10:42,760 --> 00:10:45,360
I mean, it's four terabytes to all intents and purposes.

273
00:10:45,360 --> 00:10:50,120
SSD released by, I think it was either Samsung or SanDisk,

274
00:10:50,120 --> 00:10:51,360
probably Samsung.

275
00:10:51,360 --> 00:10:53,840
But they're still $500 a pop.

276
00:10:53,840 --> 00:10:55,960
Whereas these one terabyte ones that you're talking about,

277
00:10:55,960 --> 00:11:00,320
the ruggedized ones, they're about $100 a pop or something.

278
00:11:00,320 --> 00:11:03,360
I mean, it's not cheap, but it's enough now that I can move.

279
00:11:03,360 --> 00:11:07,120
So my use case for the little SSD that I have

280
00:11:07,120 --> 00:11:10,800
is my photo library lives on here for each year.

281
00:11:10,800 --> 00:11:13,120
So every year, I'll rotate my photo library.

282
00:11:13,120 --> 00:11:15,800
When I'm traveling, I just have everything

283
00:11:15,800 --> 00:11:18,320
that I've shot this year with me physically,

284
00:11:18,320 --> 00:11:20,240
and everything else is at home.

285
00:11:20,240 --> 00:11:22,160
And generally speaking, that works pretty well.

286
00:11:22,160 --> 00:11:26,320
So at the end of each year, I'll rotate my photos.

287
00:11:26,320 --> 00:11:27,840
And drone footage is an exception,

288
00:11:27,840 --> 00:11:30,640
because it's so much bigger, but just images

289
00:11:30,640 --> 00:11:31,840
fit just fine on here.

290
00:11:31,840 --> 00:11:34,520
Do you only keep the year's images on that disk,

291
00:11:34,520 --> 00:11:36,840
or do you also store them somewhere else?

292
00:11:36,840 --> 00:11:39,360
Oh, so yeah, I mean, I'd be a loser

293
00:11:39,360 --> 00:11:42,040
if I only had one copy of my photos from this year, right?

294
00:11:42,040 --> 00:11:42,960
This wasn't clear.

295
00:11:42,960 --> 00:11:44,800
I was getting upset for a second.

296
00:11:44,800 --> 00:11:47,280
Yeah, no, so generally, whilst I'm traveling,

297
00:11:47,280 --> 00:11:49,080
my use case is quite straightforward.

298
00:11:49,080 --> 00:11:51,040
And I actually did a post about this on my blog

299
00:11:51,040 --> 00:11:53,920
very recently about my photography workflow.

300
00:11:53,920 --> 00:11:56,960
And I talk a little bit in there about how my backup situation

301
00:11:56,960 --> 00:11:59,760
works, and how by the time it's all said and done,

302
00:11:59,760 --> 00:12:04,080
I've probably got about six or seven copies of this data,

303
00:12:04,080 --> 00:12:06,800
all automatic once it hits my server back in Raleigh.

304
00:12:06,800 --> 00:12:09,960
It just then all sort of spiders webs out across the internet.

305
00:12:09,960 --> 00:12:11,480
We should put a link to that in the show notes

306
00:12:11,480 --> 00:12:13,480
to that blog post, because that could also

307
00:12:13,480 --> 00:12:15,400
help answer the ask SSH we're going

308
00:12:15,400 --> 00:12:17,480
to get to in a little bit.

309
00:12:17,480 --> 00:12:20,680
Yeah, OK, I mean, so the way I look at it is,

310
00:12:20,680 --> 00:12:22,400
I have a couple of options here, is

311
00:12:22,400 --> 00:12:25,520
I could just hang a terabyte disk off of each Pi,

312
00:12:25,520 --> 00:12:27,880
so about $300 worth of disk.

313
00:12:27,880 --> 00:12:29,640
That's not the end of the world when you're

314
00:12:29,640 --> 00:12:32,080
talking about a network storage solution in terms of price,

315
00:12:32,080 --> 00:12:34,920
but it's not very elegant.

316
00:12:34,920 --> 00:12:38,920
Then I'm wondering if it's just ridiculous and crazy to buy

317
00:12:38,920 --> 00:12:41,320
yet another Raspberry Pi.

318
00:12:41,320 --> 00:12:41,960
Probably.

319
00:12:41,960 --> 00:12:45,760
And then make that thing an iSCSI host for the biggest

320
00:12:45,760 --> 00:12:48,360
disk or the most amount of disk I can attach to it.

321
00:12:48,360 --> 00:12:52,400
Can't you just get a 512 gig SD card these days?

322
00:12:52,400 --> 00:12:54,980
Yeah, so the way I tend to use the SD card and the Raspberry

323
00:12:54,980 --> 00:12:58,720
Pis is just the root file system is on the SD card.

324
00:12:58,720 --> 00:13:00,180
Because I'm just so paranoid they're

325
00:13:00,180 --> 00:13:01,160
going to just die on me.

326
00:13:01,160 --> 00:13:02,840
Yeah, I've had a few do that, especially

327
00:13:02,840 --> 00:13:04,800
in power loss situations.

328
00:13:04,800 --> 00:13:06,240
That can be a real issue.

329
00:13:06,240 --> 00:13:08,800
So I kind of feel like, just like a lot of times in a server,

330
00:13:08,800 --> 00:13:10,800
I'll have a small internal SSD.

331
00:13:10,800 --> 00:13:12,080
Yeah, I'd do the same.

332
00:13:12,080 --> 00:13:15,240
Yeah, the array is on a pool of disks.

333
00:13:15,240 --> 00:13:19,240
So I had thought about taking a Raspberry Pi 4,

334
00:13:19,240 --> 00:13:23,240
attaching like three or four disks to it,

335
00:13:23,240 --> 00:13:25,720
and then sharing that out over Samba NFS

336
00:13:25,720 --> 00:13:28,160
and making an iSCSI target as well.

337
00:13:28,160 --> 00:13:31,600
And you know, we talk with the developer of MergerFS

338
00:13:31,600 --> 00:13:34,520
in an upcoming Jupyter Extra that will probably

339
00:13:34,520 --> 00:13:36,360
be released the week this episode comes out.

340
00:13:36,360 --> 00:13:39,280
And MergerFS could potentially be a solution here.

341
00:13:39,280 --> 00:13:41,040
There's a lot of ways I could go with this.

342
00:13:41,040 --> 00:13:42,200
So I'm kind of hoping you can give me

343
00:13:42,200 --> 00:13:44,160
some of your thoughts on just disks in general.

344
00:13:44,160 --> 00:13:48,040
If MergerFS maybe would be a good use case for me,

345
00:13:48,040 --> 00:13:50,560
especially since I'm dealing with more limited amounts

346
00:13:50,560 --> 00:13:52,140
of RAM and hardware.

347
00:13:52,140 --> 00:13:54,840
And I know that you and I have been talking offline a lot

348
00:13:54,840 --> 00:13:57,240
about your storage setup.

349
00:13:57,240 --> 00:13:58,880
So give me an advice here, Doctor.

350
00:13:58,880 --> 00:14:00,040
What's your prescription?

351
00:14:00,040 --> 00:14:01,360
Well, over the years, I mean, I've

352
00:14:01,360 --> 00:14:03,000
talked about on my brunch with Brent,

353
00:14:03,000 --> 00:14:05,920
I talked about how there was a 1.5 terabyte hard drive that

354
00:14:05,920 --> 00:14:06,400
failed.

355
00:14:06,400 --> 00:14:08,320
And that's kind of what led me down this rabbit

356
00:14:08,320 --> 00:14:09,520
hole of self-hosting.

357
00:14:09,520 --> 00:14:12,920
And I've bought a lot of hard drives over the years.

358
00:14:12,920 --> 00:14:14,200
I was trying to calculate it.

359
00:14:14,200 --> 00:14:16,080
But I think I probably bought somewhere

360
00:14:16,080 --> 00:14:18,760
in the region of 30 to 40 three and a half inch drives.

361
00:14:18,760 --> 00:14:21,800
Just this is my personal purchase history.

362
00:14:21,800 --> 00:14:23,640
Yeah, I hate to think how much disk

363
00:14:23,640 --> 00:14:26,760
I've bought over the years for the JB Productions.

364
00:14:26,760 --> 00:14:30,120
Oh, so I've got a few rituals that I follow.

365
00:14:30,120 --> 00:14:32,280
I've got a few thoughts.

366
00:14:32,280 --> 00:14:38,080
I've read a lot of posts on Reddit, on different forums.

367
00:14:38,080 --> 00:14:39,840
And this is just my personal experience

368
00:14:39,840 --> 00:14:43,720
over the last five, six, seven years of doing this stuff.

369
00:14:43,720 --> 00:14:45,920
I appreciate some people have different opinions,

370
00:14:45,920 --> 00:14:48,360
but these are mine.

371
00:14:48,360 --> 00:14:54,320
And I think a lot of it boils down to several key things.

372
00:14:54,320 --> 00:14:57,160
And I cover a lot of this stuff in the perfect media service

373
00:14:57,160 --> 00:15:01,640
series that's on the linuxserver.io blog.

374
00:15:01,640 --> 00:15:04,360
There's a few things you need to take into consideration.

375
00:15:04,360 --> 00:15:08,680
First of all, what are your requirements?

376
00:15:08,680 --> 00:15:12,040
Are you running high performance databases?

377
00:15:12,040 --> 00:15:13,720
Probably not if you're self-hosting.

378
00:15:13,720 --> 00:15:17,440
But things like Plex take a surprising amount of I.O.

379
00:15:17,440 --> 00:15:21,160
So if you're going to put your Plex metadata directory

380
00:15:21,160 --> 00:15:23,840
onto a spinning Rust drive, you'll

381
00:15:23,840 --> 00:15:26,000
notice a significant speed bump if you then

382
00:15:26,000 --> 00:15:27,560
put that onto an SSD later on.

383
00:15:27,560 --> 00:15:29,520
So there are just different use cases,

384
00:15:29,520 --> 00:15:31,960
even within a home setup, that you might want to consider.

385
00:15:31,960 --> 00:15:34,200
Also, I think it's worth mentioning

386
00:15:34,200 --> 00:15:36,520
there are ways you could even set up spinning Rust

387
00:15:36,520 --> 00:15:37,880
to get pretty good throughput.

388
00:15:37,880 --> 00:15:41,760
You may miss out on data integrity or protection.

389
00:15:41,760 --> 00:15:45,520
For example, forever, for editing,

390
00:15:45,520 --> 00:15:50,640
I will use a bunch of as fast as I can get spinning Rust.

391
00:15:50,640 --> 00:15:52,360
Usually 10,000 RPM is what I go for.

392
00:15:52,360 --> 00:15:53,440
I know I can get slightly faster,

393
00:15:53,440 --> 00:15:54,680
but I go for 10,000 usually.

394
00:15:54,680 --> 00:15:57,040
So not as fast, I should say.

395
00:15:57,040 --> 00:15:59,520
The exact opposite of what I just said.

396
00:15:59,520 --> 00:16:01,520
And I'll put those suckers in a RAID 0.

397
00:16:01,520 --> 00:16:03,360
Fantastic performance.

398
00:16:03,360 --> 00:16:08,400
Then I make sure that the disk pool is labeled scary RAID.

399
00:16:08,400 --> 00:16:10,080
I call it scary RAID.

400
00:16:10,080 --> 00:16:10,640
Good.

401
00:16:10,640 --> 00:16:12,000
Oh, I like it.

402
00:16:12,000 --> 00:16:13,560
So for those that aren't familiar,

403
00:16:13,560 --> 00:16:16,320
RAID 0 is striped across both disks.

404
00:16:16,320 --> 00:16:18,720
So if either of those disks fail,

405
00:16:18,720 --> 00:16:22,360
or any of the disks in the RAID 0 array fail, you're boned.

406
00:16:22,360 --> 00:16:23,160
Yeah.

407
00:16:23,160 --> 00:16:25,680
And so that scary RAID label always

408
00:16:25,680 --> 00:16:28,800
reminds me, don't trust anything on that array,

409
00:16:28,800 --> 00:16:30,240
because you could lose it any time.

410
00:16:30,240 --> 00:16:34,160
Now, when you're working on a video project, in theory,

411
00:16:34,160 --> 00:16:37,360
you have your source materials still either on the camera

412
00:16:37,360 --> 00:16:40,120
or on the OBS machine or however you were doing it.

413
00:16:40,120 --> 00:16:43,440
And so if my array were to go away during a project,

414
00:16:43,440 --> 00:16:45,520
I would just have to redo that project.

415
00:16:45,520 --> 00:16:48,560
But I think a lot of this stuff is a little old school

416
00:16:48,560 --> 00:16:50,320
in terms of thinking nowadays.

417
00:16:50,320 --> 00:16:54,880
SSDs, terabyte SSDs are in that $100 sweet spot.

418
00:16:54,880 --> 00:16:57,520
And we're not talking that long ago.

419
00:16:57,520 --> 00:17:00,880
We're talking two, three years where a terabyte

420
00:17:00,880 --> 00:17:03,080
was $300 or $400.

421
00:17:03,080 --> 00:17:04,960
And that's just not realistic.

422
00:17:04,960 --> 00:17:08,320
I'm not going to spend that much on that price per gigabyte.

423
00:17:08,320 --> 00:17:11,040
Which leads me nicely on to my other consideration.

424
00:17:11,040 --> 00:17:14,240
You need to decide what the capacity requirements are.

425
00:17:14,240 --> 00:17:16,960
So if you're working on video, like Chris,

426
00:17:16,960 --> 00:17:21,000
you're going to be needing hundreds of gigabytes

427
00:17:21,000 --> 00:17:22,880
for a single project, potentially.

428
00:17:22,880 --> 00:17:26,120
It is funny, because when we switched to primarily doing

429
00:17:26,120 --> 00:17:29,780
audio, all of a sudden, I had to do this huge shift on it.

430
00:17:29,780 --> 00:17:31,880
We had so much additional storage,

431
00:17:31,880 --> 00:17:34,040
because we had projected for the next couple of years

432
00:17:34,040 --> 00:17:35,080
using video.

433
00:17:35,080 --> 00:17:37,000
And then we made a transition to audio.

434
00:17:37,000 --> 00:17:38,760
And then all of a sudden, I win a year

435
00:17:38,760 --> 00:17:40,200
without having to buy disks.

436
00:17:40,200 --> 00:17:41,080
It was beautiful.

437
00:17:41,080 --> 00:17:44,440
And now, in the RV with my limited options,

438
00:17:44,440 --> 00:17:46,400
I think about storage in a different way.

439
00:17:46,400 --> 00:17:49,600
I think, what do I need immediately available,

440
00:17:49,600 --> 00:17:53,540
versus what can I store in a colder storage that's

441
00:17:53,540 --> 00:17:55,320
remote and slower to get to?

442
00:17:55,320 --> 00:17:57,160
So I kind of even break it up to,

443
00:17:57,160 --> 00:18:00,240
what do I need as hot files versus cold files?

444
00:18:00,240 --> 00:18:02,940
And so the hot files, I'll put on the SSDs.

445
00:18:02,940 --> 00:18:06,280
And the cold files, I'll store on spinning rest somewhere.

446
00:18:06,280 --> 00:18:08,160
Like here in the studio, we have plenty of spinning rest

447
00:18:08,160 --> 00:18:08,800
storage.

448
00:18:08,800 --> 00:18:10,640
So the other thing to consider is

449
00:18:10,640 --> 00:18:13,000
that there's an article by a chap called,

450
00:18:13,000 --> 00:18:15,880
and I'm going to butcher this name, Laurentius.

451
00:18:15,880 --> 00:18:17,620
And this is from January 2016.

452
00:18:17,620 --> 00:18:20,680
And it's actually been something which

453
00:18:20,680 --> 00:18:25,040
has influenced my strategy in how I've purchased hard drives

454
00:18:25,040 --> 00:18:26,040
pretty much since then.

455
00:18:26,040 --> 00:18:27,200
It's like a thought model, huh?

456
00:18:27,200 --> 00:18:27,700
Yeah.

457
00:18:27,700 --> 00:18:29,800
And this post is entitled, The Hidden Cost

458
00:18:29,800 --> 00:18:32,840
of Using ZFS for Your Home NAS.

459
00:18:32,840 --> 00:18:35,480
Now, I want to underscore the last two words,

460
00:18:35,480 --> 00:18:37,400
for your home NAS.

461
00:18:37,400 --> 00:18:38,960
I'm not talking about small business.

462
00:18:38,960 --> 00:18:42,240
I'm not talking about your use case here, Chris.

463
00:18:42,240 --> 00:18:43,920
I'm talking about people like me that

464
00:18:43,920 --> 00:18:47,600
have a media server which has five, six, seven, eight, nine

465
00:18:47,600 --> 00:18:53,280
disks in it that stores media that is written once

466
00:18:53,280 --> 00:18:55,280
and read a few times.

467
00:18:55,280 --> 00:18:59,160
Things like drone footage, ripped media, music,

468
00:18:59,160 --> 00:19:01,680
that kind of stuff, right?

469
00:19:01,680 --> 00:19:03,960
The performance is not critical.

470
00:19:03,960 --> 00:19:06,840
So a lot of the benefits that you get with ZFS

471
00:19:06,840 --> 00:19:08,760
kind of pale into insignificance.

472
00:19:08,760 --> 00:19:11,760
But the thrust of his blog post here,

473
00:19:11,760 --> 00:19:13,640
and I totally agree with this, is

474
00:19:13,640 --> 00:19:18,760
that when I'm expanding my NAS over the last few years,

475
00:19:18,760 --> 00:19:22,880
I tend not to buy more than one or two drives at the same time.

476
00:19:22,880 --> 00:19:26,160
I tend to buy one drive every, if I know I'm expanding,

477
00:19:26,160 --> 00:19:30,000
I'll buy a drive every month or two.

478
00:19:30,000 --> 00:19:32,760
Generally speaking, over the last couple of years,

479
00:19:32,760 --> 00:19:36,400
I've bought a drive every six to seven months or so.

480
00:19:36,400 --> 00:19:38,060
Now, with ZFS, that's just not going to work,

481
00:19:38,060 --> 00:19:42,840
because you need to preallocate your VDevs and your pools

482
00:19:42,840 --> 00:19:45,240
and all that kind of stuff up front.

483
00:19:45,240 --> 00:19:48,040
So you need to have drives that are the same size.

484
00:19:48,040 --> 00:19:49,640
You need to ideally have drives that

485
00:19:49,640 --> 00:19:52,120
are the same brand and firmware model

486
00:19:52,120 --> 00:19:55,520
so that there's not some kind of random problem

487
00:19:55,520 --> 00:19:58,880
occurs at the hardware level there.

488
00:19:58,880 --> 00:20:02,380
And so for me, it really makes the ZFS kind of sell

489
00:20:02,380 --> 00:20:05,680
a lot more difficult, because purchasing multiple drives

490
00:20:05,680 --> 00:20:09,280
at once is not realistic.

491
00:20:09,280 --> 00:20:12,640
Now, then I moved to America, and I had access to Best Buy.

492
00:20:12,640 --> 00:20:15,080
And they have this wonderful thing

493
00:20:15,080 --> 00:20:18,120
called the Western Digital Easy Store.

494
00:20:18,120 --> 00:20:20,400
And this has really changed the game for me.

495
00:20:20,400 --> 00:20:26,040
So I now have access to 10 terabyte hard drives,

496
00:20:26,040 --> 00:20:27,840
10 terabyte drives.

497
00:20:27,840 --> 00:20:30,080
Just one drive is 10 terabytes.

498
00:20:30,080 --> 00:20:31,840
My entire array used to be 10 terabytes.

499
00:20:31,840 --> 00:20:35,920
But anyway, for $160 or $170.

500
00:20:35,920 --> 00:20:39,360
The caveat is it comes in like a USB enclosure.

501
00:20:39,360 --> 00:20:41,880
So it's like an external hard drive.

502
00:20:41,880 --> 00:20:43,440
But you can pop those bad boys out

503
00:20:43,440 --> 00:20:46,140
of those cases in 10 minutes flat.

504
00:20:46,140 --> 00:20:48,560
And then you have, to all intents and purposes,

505
00:20:48,560 --> 00:20:52,680
a white label Western Digital 10 terabyte hard drive.

506
00:20:52,680 --> 00:20:54,560
They're generally of decent quality disk, too,

507
00:20:54,560 --> 00:20:57,280
because they don't want them popping and then having

508
00:20:57,280 --> 00:20:59,060
a consumer RMA.

509
00:20:59,060 --> 00:21:02,440
There is also like a slight electrical bit of work

510
00:21:02,440 --> 00:21:04,760
that has to be done to the disk once you deshuck it.

511
00:21:04,760 --> 00:21:05,880
Well, that's an interesting one.

512
00:21:05,880 --> 00:21:08,400
So I think you're referring to the 3.3 volt mod

513
00:21:08,400 --> 00:21:09,440
that you might have to do.

514
00:21:09,440 --> 00:21:10,480
That's what it was, yeah.

515
00:21:10,480 --> 00:21:14,280
And this is actually in the SATA spec, the SATA power spec.

516
00:21:14,280 --> 00:21:15,920
I read a post on this a few months ago,

517
00:21:15,920 --> 00:21:17,840
so I might get the details a little bit wrong.

518
00:21:17,840 --> 00:21:19,720
But the gist is this.

519
00:21:19,720 --> 00:21:23,120
Enterprise Gear uses the 3.3 volt rail

520
00:21:23,120 --> 00:21:25,560
to reset failing hardware.

521
00:21:25,560 --> 00:21:28,600
So if you're a hard drive in a data center,

522
00:21:28,600 --> 00:21:31,400
you don't necessarily want to have to be power cycled

523
00:21:31,400 --> 00:21:33,680
physically by a human coming in and pushing a button

524
00:21:33,680 --> 00:21:35,320
and all that kind of stuff.

525
00:21:35,320 --> 00:21:38,280
Data centers need a way to reset hardware

526
00:21:38,280 --> 00:21:39,800
without physically being present.

527
00:21:39,800 --> 00:21:41,720
And the way in which hard drives do that

528
00:21:41,720 --> 00:21:43,840
is on the 3.3 volt rail.

529
00:21:43,840 --> 00:21:46,720
So in a server situation, if that disk

530
00:21:46,720 --> 00:21:49,800
receives a signal on the 3.3 volt rail,

531
00:21:49,800 --> 00:21:52,600
it will reboot just that disk.

532
00:21:52,600 --> 00:21:56,260
Now, most consumer power supplies over the last decade

533
00:21:56,260 --> 00:21:59,440
have either omitted that rail

534
00:21:59,440 --> 00:22:01,240
or just not followed the SATA spec

535
00:22:01,240 --> 00:22:02,740
for trying to save money

536
00:22:02,740 --> 00:22:04,400
because nobody really uses it for power.

537
00:22:04,400 --> 00:22:07,120
They just use it for that use case.

538
00:22:07,120 --> 00:22:10,960
But some power supplies do respect the SATA spec.

539
00:22:10,960 --> 00:22:13,240
And if yours is one of those,

540
00:22:13,240 --> 00:22:15,080
you need to do one of two things.

541
00:22:15,080 --> 00:22:17,420
The first option is you can either just cut

542
00:22:17,420 --> 00:22:20,160
the 3.3 volt wire, which is what I did.

543
00:22:20,160 --> 00:22:23,440
I actually made some custom SATA power connectors,

544
00:22:23,440 --> 00:22:26,680
which omitted that wire altogether.

545
00:22:26,680 --> 00:22:31,280
You can buy, I think it's a one to five SATA power splitter

546
00:22:31,280 --> 00:22:32,760
thing on Amazon.

547
00:22:32,760 --> 00:22:36,800
And then you can use the DIY SATA power connectors

548
00:22:36,800 --> 00:22:38,720
and just sort of pull the cable down inside it

549
00:22:38,720 --> 00:22:41,200
and slice and cut the connectors for you.

550
00:22:41,200 --> 00:22:44,320
It takes about half an hour to do five the first time

551
00:22:44,320 --> 00:22:46,400
and then you get quicker after that.

552
00:22:46,400 --> 00:22:48,960
Just be careful you get the wires in the right order

553
00:22:48,960 --> 00:22:51,280
because if you put the 12 volt rail on the five volt thing,

554
00:22:51,280 --> 00:22:53,000
you're gonna let the magic smoke out.

555
00:22:53,000 --> 00:22:54,160
Not that you would know.

556
00:22:54,160 --> 00:22:56,280
No, I actually don't, but yeah, thankfully.

557
00:22:56,280 --> 00:22:58,200
I was very careful when I checked with a multimeter

558
00:22:58,200 --> 00:22:59,560
that I got it all correct.

559
00:23:00,480 --> 00:23:01,440
The other thing you can do,

560
00:23:01,440 --> 00:23:03,640
and there are plenty of videos on YouTube on this,

561
00:23:03,640 --> 00:23:06,720
is you can actually get a piece of Kapton tape

562
00:23:06,720 --> 00:23:09,560
or something like electrical tape or something

563
00:23:09,560 --> 00:23:13,500
and cover a couple of the power pins on the drive itself.

564
00:23:13,500 --> 00:23:15,960
So that's a very, very non-destructive mod.

565
00:23:15,960 --> 00:23:17,280
And that will just prevent the drive

566
00:23:17,280 --> 00:23:19,960
from being able to receive that 3.3 volt signal

567
00:23:19,960 --> 00:23:22,440
and it will just work as you would expect.

568
00:23:22,440 --> 00:23:23,480
That's not so bad.

569
00:23:23,480 --> 00:23:26,280
I do agree with your overall assessment

570
00:23:26,280 --> 00:23:29,080
that if you're going to implement ZFS,

571
00:23:29,080 --> 00:23:30,360
you need to go into it knowing

572
00:23:30,360 --> 00:23:31,960
that when you wanna add capacity,

573
00:23:31,960 --> 00:23:33,760
you'll be buying multiple disks at a time.

574
00:23:33,760 --> 00:23:35,880
And this for me is the beauty of merger FS.

575
00:23:35,880 --> 00:23:38,760
So we spoke to Antonio during the JB sprint.

576
00:23:38,760 --> 00:23:41,240
Drew and Brent and I had a chance to sit down with him

577
00:23:41,240 --> 00:23:43,520
and ask him some questions.

578
00:23:43,520 --> 00:23:46,040
I've worked quite closely with him on a few things

579
00:23:46,040 --> 00:23:47,880
like some of my blog posts, for example,

580
00:23:47,880 --> 00:23:50,240
like I've submitted them to him for review

581
00:23:50,240 --> 00:23:51,840
and made sure that it's all technically accurate

582
00:23:51,840 --> 00:23:53,320
and that kind of thing.

583
00:23:53,320 --> 00:23:55,720
But where merger FS comes in and the magic of it really

584
00:23:55,720 --> 00:23:59,280
is you can have any number of mismatched drives,

585
00:23:59,280 --> 00:24:02,240
any file system, it could be a USB drive,

586
00:24:02,240 --> 00:24:05,120
it can be a SATA drive, it could be a CD-ROM drive,

587
00:24:05,120 --> 00:24:07,760
it could be an R-Clone mount point,

588
00:24:07,760 --> 00:24:11,080
and you can combine all of those different things

589
00:24:11,080 --> 00:24:12,760
under a single mount point.

590
00:24:12,760 --> 00:24:17,760
So I use slash mount slash storage as my pool mount point.

591
00:24:18,160 --> 00:24:21,200
And under there, I have 12 different disks

592
00:24:21,200 --> 00:24:23,560
combined and an R-Clone mount point

593
00:24:23,560 --> 00:24:25,800
and the ZFS stuff that I have on my system

594
00:24:25,800 --> 00:24:27,160
all in one place.

595
00:24:27,160 --> 00:24:29,280
And does merger FS manage the parity as well?

596
00:24:29,280 --> 00:24:31,600
Does it keep things, like if a disk fails?

597
00:24:31,600 --> 00:24:36,600
No, merger FS is just a fuse layer user space file system

598
00:24:37,200 --> 00:24:42,120
that combines all of those mount points underneath it.

599
00:24:42,120 --> 00:24:44,240
If you want parity, which is the thing

600
00:24:44,240 --> 00:24:46,760
that lets you rebuild from drive failures,

601
00:24:46,760 --> 00:24:49,200
I use SnapRaid for that for my media

602
00:24:49,200 --> 00:24:51,640
and then ZFS for the really important stuff.

603
00:24:52,680 --> 00:24:54,200
We'll cut a SnapRaid later, I think,

604
00:24:54,200 --> 00:24:59,200
but in short, it takes a snapshot of the state

605
00:24:59,520 --> 00:25:01,160
of the drives at a moment in time

606
00:25:01,160 --> 00:25:06,160
and calculates the parity data for those drives.

607
00:25:07,280 --> 00:25:11,200
I think in terms of the other options that you've got

608
00:25:11,200 --> 00:25:14,000
that do have similar functionality,

609
00:25:14,000 --> 00:25:18,720
UnRAID will support multiple mismatched drive sizes as well.

610
00:25:18,720 --> 00:25:21,360
The advantage of UnRAID is it has real-time parity

611
00:25:21,360 --> 00:25:24,160
calculation instead of snapshot.

612
00:25:24,160 --> 00:25:26,520
Downside is it's not open source.

613
00:25:26,520 --> 00:25:29,280
So, you know, and you have to buy a license.

614
00:25:29,280 --> 00:25:32,360
So it depends on what floats your boat there.

615
00:25:33,360 --> 00:25:36,120
Open Media Vault will support merger FS

616
00:25:36,120 --> 00:25:38,120
and SnapRaid out of the box,

617
00:25:38,120 --> 00:25:39,240
but you'll have to go through the GUI

618
00:25:39,240 --> 00:25:40,640
and configure it yourself.

619
00:25:40,640 --> 00:25:42,640
I like that for you, that's a downside.

620
00:25:42,640 --> 00:25:44,960
For some people listening, they're like,

621
00:25:44,960 --> 00:25:46,960
oh God, it's got a GUI, thank goodness.

622
00:25:46,960 --> 00:25:48,680
Yeah, well, I'm the sort of guy

623
00:25:48,680 --> 00:25:49,920
that puts everything in Ansible.

624
00:25:49,920 --> 00:25:51,840
Yeah, and if you just take the time

625
00:25:51,840 --> 00:25:54,400
to learn the configuration syntax,

626
00:25:54,400 --> 00:25:56,040
it will last with you forever.

627
00:25:56,040 --> 00:25:59,360
And it is simpler and quicker and easier to back up.

628
00:25:59,360 --> 00:26:01,720
Somebody was asking me in the JB Telegram the other day

629
00:26:01,720 --> 00:26:03,360
about how to configure Samba.

630
00:26:03,360 --> 00:26:05,440
And I just dropped them in my Samba config file.

631
00:26:05,440 --> 00:26:06,680
I was like, there you go, done.

632
00:26:06,680 --> 00:26:09,880
You know, it's 30 lines worth of text and it's done.

633
00:26:09,880 --> 00:26:12,120
Right, it's worth recapping for a moment.

634
00:26:12,120 --> 00:26:14,400
There's a lot to consider.

635
00:26:14,400 --> 00:26:15,760
How fast you need the disk to be,

636
00:26:15,760 --> 00:26:17,920
how much storage you need,

637
00:26:17,920 --> 00:26:20,760
what other kind of usage requirements you have.

638
00:26:20,760 --> 00:26:23,640
Then you have how much storage you plan to add to it,

639
00:26:23,640 --> 00:26:26,160
how much it will change and what your budget is.

640
00:26:26,160 --> 00:26:29,160
You have how critical the data is.

641
00:26:29,160 --> 00:26:33,440
Is it okay to put it on one disk?

642
00:26:33,440 --> 00:26:35,160
Maybe if you got a really good backup,

643
00:26:35,160 --> 00:26:36,840
but you need to consider what your options are

644
00:26:36,840 --> 00:26:38,360
if you need to go with a RAID.

645
00:26:38,360 --> 00:26:39,440
One is non-CRS.

646
00:26:39,440 --> 00:26:40,920
Right, one is none.

647
00:26:40,920 --> 00:26:43,520
And then you have other things to consider as well,

648
00:26:43,520 --> 00:26:47,960
like ZFS versus a different file system,

649
00:26:47,960 --> 00:26:50,520
if you have enough RAM, I mean, there's a lot to it, Alex.

650
00:26:50,520 --> 00:26:54,160
So how do you really get to any of these answers

651
00:26:54,160 --> 00:26:56,560
without being really intimately familiar

652
00:26:56,560 --> 00:26:58,880
with what your setup requirements are?

653
00:26:58,880 --> 00:27:01,200
Like for me, I'm sitting here parsing this thinking,

654
00:27:01,200 --> 00:27:04,520
well, what should I do for my storage solution?

655
00:27:04,520 --> 00:27:06,640
Because I have all these weird use cases.

656
00:27:06,640 --> 00:27:11,240
One use case is camera recording, which is fairly high IO.

657
00:27:11,240 --> 00:27:14,920
The other is notes, like I have this huge spectrum

658
00:27:14,920 --> 00:27:19,280
of like super low IO and super intense IO.

659
00:27:19,280 --> 00:27:21,160
I want everything redundant

660
00:27:21,160 --> 00:27:24,280
and I don't have a lot of backup options either.

661
00:27:24,280 --> 00:27:26,240
So other than offsite,

662
00:27:26,240 --> 00:27:28,760
which I won't always have connectivity.

663
00:27:28,760 --> 00:27:32,160
And I also have that whole problem of a level four earthquake.

664
00:27:32,160 --> 00:27:35,120
Yeah, I'm a massive MergerFS fan boy.

665
00:27:35,120 --> 00:27:37,960
I tried dozens and dozens of other things

666
00:27:37,960 --> 00:27:39,360
over the three or four years,

667
00:27:39,360 --> 00:27:42,200
previous to settling on it in 2016.

668
00:27:42,200 --> 00:27:45,920
And I've just, it's just been absolutely rock solid, right?

669
00:27:45,920 --> 00:27:48,120
And I actually hate it when people use that phrase,

670
00:27:48,120 --> 00:27:50,920
rock solid, but it's never missed a beat.

671
00:27:50,920 --> 00:27:53,840
I haven't ever had to go in and tweak it.

672
00:27:53,840 --> 00:27:56,760
There's not been any random hidden files created

673
00:27:56,760 --> 00:28:01,160
like with MHDDFS, for example, is another one I tried.

674
00:28:03,160 --> 00:28:04,680
It's just been flexible, right?

675
00:28:04,680 --> 00:28:07,400
So anything I've needed to bend it to do,

676
00:28:07,400 --> 00:28:10,720
I've been able to get MergerFS to do it with no data loss,

677
00:28:10,720 --> 00:28:12,600
no having to copy files and have,

678
00:28:12,600 --> 00:28:15,560
you know that slide puzzle you get

679
00:28:15,560 --> 00:28:17,760
where you've got to move the little cubes around.

680
00:28:17,760 --> 00:28:18,600
Yeah.

681
00:28:18,600 --> 00:28:21,160
If you're migrating from one ZFS pool to another,

682
00:28:21,160 --> 00:28:22,760
you actually have to play that game

683
00:28:22,760 --> 00:28:24,520
with your data sometimes, right?

684
00:28:24,520 --> 00:28:27,400
Where you're trying to re-architect a VDEV

685
00:28:27,400 --> 00:28:30,080
that you built knowing what you knew at the time

686
00:28:30,080 --> 00:28:30,920
when you built it,

687
00:28:30,920 --> 00:28:32,920
but it turns out three years later,

688
00:28:32,920 --> 00:28:36,400
oh, oops, that's not the most optimal thing to do.

689
00:28:36,400 --> 00:28:38,160
It's not the most optimal way to do it.

690
00:28:38,160 --> 00:28:39,000
True.

691
00:28:39,000 --> 00:28:41,440
That is a bit of an issue I'm having now

692
00:28:41,440 --> 00:28:44,040
with the storage here at the studio.

693
00:28:44,040 --> 00:28:45,920
I feel like it's less of a problem

694
00:28:45,920 --> 00:28:47,840
in a more static environment

695
00:28:47,840 --> 00:28:49,200
where things don't change as much.

696
00:28:49,200 --> 00:28:51,280
Like for example, ours is architected

697
00:28:51,280 --> 00:28:53,880
for these huge, huge like storage requirements

698
00:28:53,880 --> 00:28:55,640
around production video.

699
00:28:55,640 --> 00:28:56,880
And we just don't have that anymore.

700
00:28:56,880 --> 00:28:57,880
And now I'm looking at it going,

701
00:28:57,880 --> 00:28:59,920
oh man, I think I need to redo this.

702
00:28:59,920 --> 00:29:01,040
Flexibility, man.

703
00:29:01,040 --> 00:29:02,840
That's where MergerFS really wins out.

704
00:29:02,840 --> 00:29:03,680
Yeah.

705
00:29:03,680 --> 00:29:04,840
I really don't want to have to deal with that.

706
00:29:04,840 --> 00:29:05,680
I really don't.

707
00:29:05,680 --> 00:29:06,520
But at the same time,

708
00:29:06,520 --> 00:29:08,800
I feel like if it's super important and critical,

709
00:29:08,800 --> 00:29:10,400
I'm still going to end up dealing

710
00:29:10,400 --> 00:29:12,840
with these limitations of ZFS, if you will.

711
00:29:12,840 --> 00:29:13,680
But the thing is, right,

712
00:29:13,680 --> 00:29:18,040
so MergerFS, the reason it wins out so heavily for me

713
00:29:18,040 --> 00:29:20,840
is it supports any file system underneath it.

714
00:29:20,840 --> 00:29:23,840
So if you want to have ZFS on a pair of drives

715
00:29:23,840 --> 00:29:26,640
and then pool it with a bunch of other EXT4 drives

716
00:29:26,640 --> 00:29:30,320
or XFS drives, MergerFS will just handle that

717
00:29:30,320 --> 00:29:31,600
absolutely fine.

718
00:29:31,600 --> 00:29:34,040
And then using the policies that MergerFS has,

719
00:29:34,040 --> 00:29:36,760
you can say only write this data to a drive

720
00:29:36,760 --> 00:29:39,160
that already has that existing directory.

721
00:29:39,160 --> 00:29:40,120
So the way that I do it

722
00:29:40,120 --> 00:29:42,320
for all of my Docker app data, for example,

723
00:29:42,320 --> 00:29:46,160
is I tell it through the file system table, the FFSTAB,

724
00:29:46,160 --> 00:29:48,880
only create that directory on that drive.

725
00:29:48,880 --> 00:29:51,880
So it's existing path, most free space.

726
00:29:51,880 --> 00:29:53,840
But you're not allowed to create that directory

727
00:29:53,840 --> 00:29:55,520
on a drive where it doesn't already exist.

728
00:29:55,520 --> 00:29:59,080
The operation should just fail and you'll alert me to that.

729
00:29:59,080 --> 00:30:01,080
So I'm not going to end up with files

730
00:30:01,080 --> 00:30:02,880
scattered around multiple different disks.

731
00:30:02,880 --> 00:30:05,560
Here's the other thing that really, really wins

732
00:30:05,560 --> 00:30:06,960
on MergerFS for me.

733
00:30:06,960 --> 00:30:09,840
I can pull that drive from one system

734
00:30:09,840 --> 00:30:12,440
and I go and stick it into any other Linux box

735
00:30:12,440 --> 00:30:14,000
and it will just be able to be read.

736
00:30:14,000 --> 00:30:15,080
It's just a disk with files.

737
00:30:15,080 --> 00:30:15,920
Yeah, right.

738
00:30:15,920 --> 00:30:17,200
Unlike a ZFS array,

739
00:30:17,200 --> 00:30:19,280
which I have to bring the whole pool over

740
00:30:19,280 --> 00:30:20,320
and then import it

741
00:30:20,320 --> 00:30:23,040
and it now belongs to that operating system.

742
00:30:23,040 --> 00:30:25,360
And you have to hope that you've got the correct ZFS version

743
00:30:25,360 --> 00:30:26,200
and blah, blah, blah.

744
00:30:26,200 --> 00:30:27,080
You're kind of winning me over,

745
00:30:27,080 --> 00:30:29,080
especially for my home setup use case.

746
00:30:29,080 --> 00:30:30,200
It's just flexible

747
00:30:30,200 --> 00:30:32,760
and it will support hot plug of USB devices.

748
00:30:32,760 --> 00:30:34,760
You know, this, like whatever I come up with

749
00:30:34,760 --> 00:30:35,880
may not work out

750
00:30:35,880 --> 00:30:38,000
because it may be a bit of a roll of the dice.

751
00:30:38,000 --> 00:30:39,120
I'm not even sure if I'm going to stick

752
00:30:39,120 --> 00:30:40,600
with Raspberry Pis long-term.

753
00:30:40,600 --> 00:30:42,800
I mean, I really hope it works for my use case.

754
00:30:42,800 --> 00:30:44,520
It's very low commitment, right?

755
00:30:44,520 --> 00:30:47,040
And for those of you with commitment issues,

756
00:30:47,040 --> 00:30:49,800
you know, it's a really easy,

757
00:30:49,800 --> 00:30:51,520
really easy thing to get started with.

758
00:30:51,520 --> 00:30:55,640
Yeah, I think step one will be listening to your interview

759
00:30:55,640 --> 00:30:58,320
with the MergerFS dev when that comes out on extras.

760
00:30:58,320 --> 00:31:01,400
And then step two would be for me to get you

761
00:31:01,400 --> 00:31:02,600
to send your config over.

762
00:31:02,600 --> 00:31:04,480
So I can just read what that looks like.

763
00:31:04,480 --> 00:31:06,400
It's one line in your FS tab.

764
00:31:06,400 --> 00:31:08,160
I'll try and see if I can get it in the show notes.

765
00:31:08,160 --> 00:31:09,000
No, your merger,

766
00:31:09,000 --> 00:31:11,240
there must be a merger FS config file somewhere.

767
00:31:11,240 --> 00:31:12,360
Nope, it's in my FS tab.

768
00:31:12,360 --> 00:31:13,840
I'm literally SSHing in now.

769
00:31:13,840 --> 00:31:15,120
I'm going to put it to you on telegram

770
00:31:15,120 --> 00:31:15,960
and send it to you.

771
00:31:15,960 --> 00:31:16,800
Oh my gosh.

772
00:31:16,800 --> 00:31:17,960
One line.

773
00:31:17,960 --> 00:31:19,080
All right, I got to check this out.

774
00:31:19,080 --> 00:31:21,520
So do you think this would be ridiculous?

775
00:31:21,520 --> 00:31:26,480
Raspberry Pi four with two, two terabyte SSDs

776
00:31:26,480 --> 00:31:28,680
hanging off of it on the USB three bus.

777
00:31:28,680 --> 00:31:30,280
And then on the USB two bus,

778
00:31:30,280 --> 00:31:32,600
a parody disc, like a one terabyte.

779
00:31:32,600 --> 00:31:33,640
Can I do that with SnapRaid?

780
00:31:33,640 --> 00:31:35,160
Can you have a separate parody disc?

781
00:31:35,160 --> 00:31:36,600
That's what you need to do, yeah.

782
00:31:36,600 --> 00:31:39,600
So, okay, we're going to get into SnapRaid now.

783
00:31:39,600 --> 00:31:40,640
Okay, you made me do it.

784
00:31:40,640 --> 00:31:41,720
Well, let's do a brief lick

785
00:31:41,720 --> 00:31:43,480
because we should do a whole episode once I try it too.

786
00:31:43,480 --> 00:31:44,560
Yeah, yeah, yeah.

787
00:31:44,560 --> 00:31:47,400
So SnapRaid, the parody disc has to be as big

788
00:31:47,400 --> 00:31:49,480
or larger than your largest data disc.

789
00:31:49,480 --> 00:31:51,720
Okay, okay.

790
00:31:51,720 --> 00:31:52,960
That's a lot of discs everybody.

791
00:31:52,960 --> 00:31:54,160
That's the requirement.

792
00:31:55,560 --> 00:31:56,800
Okay, all right.

793
00:31:56,800 --> 00:31:59,080
But SnapRaid will support up to six parody drives

794
00:31:59,080 --> 00:32:00,640
if you are really paranoid.

795
00:32:00,640 --> 00:32:02,360
I think people should let me know at Chris LAS,

796
00:32:02,360 --> 00:32:05,040
am I crazy to set up a Raspberry Pi storage server

797
00:32:05,040 --> 00:32:07,600
with disc running off the USB bus?

798
00:32:07,600 --> 00:32:09,760
Is there a SATA hat for the Raspberry Pi four?

799
00:32:09,760 --> 00:32:12,400
Because I'd love to get a Raspberry Pi SATA hat.

800
00:32:12,400 --> 00:32:14,560
So I think to me at this point,

801
00:32:14,560 --> 00:32:18,040
you're pushing what the Pi is really suitable for.

802
00:32:18,040 --> 00:32:19,840
Damn it, I know, I know.

803
00:32:19,840 --> 00:32:21,560
I'm wondering if you shouldn't just build

804
00:32:21,560 --> 00:32:24,960
a hundred dollar used X86 system.

805
00:32:24,960 --> 00:32:27,240
I built for my PF sense a little while ago,

806
00:32:27,240 --> 00:32:32,240
an i5, I think third gen system for a hundred bucks.

807
00:32:34,280 --> 00:32:35,960
I mean, maybe for the storage, I could see it.

808
00:32:35,960 --> 00:32:39,600
I just, if I think if I did the storage over iSCSI,

809
00:32:39,600 --> 00:32:43,280
all the Pis are ethernet gigabit wired in.

810
00:32:43,280 --> 00:32:45,360
And on the Pi four, it's on its own bus now.

811
00:32:45,360 --> 00:32:48,480
So, and it seems fully capable.

812
00:32:48,480 --> 00:32:50,720
Here is the reason why I'm being resistant

813
00:32:50,720 --> 00:32:52,680
to the idea of going somewhere else.

814
00:32:52,680 --> 00:32:55,440
They're disposable at 25, $35.

815
00:32:55,440 --> 00:32:59,440
They're inside a seat, they're inside my dinette seat

816
00:32:59,440 --> 00:33:01,620
and it gets hot in the summer in there.

817
00:33:01,620 --> 00:33:03,240
I mean, they might just burn up over time,

818
00:33:03,240 --> 00:33:05,320
but all I have to do is pull out the SD card,

819
00:33:05,320 --> 00:33:08,480
pop in the SD card into a new replacement Pi

820
00:33:08,480 --> 00:33:10,120
and I'm out 35 bucks.

821
00:33:10,120 --> 00:33:12,520
If I have to replace them once every year or two,

822
00:33:12,520 --> 00:33:14,040
that's pretty reasonable.

823
00:33:14,040 --> 00:33:16,920
Plus the way I've done it is I've Velcroed them

824
00:33:16,920 --> 00:33:18,240
because they're so little.

825
00:33:18,240 --> 00:33:21,480
I Velcroed them to the wall of the seat inside.

826
00:33:21,480 --> 00:33:24,280
It's a wood, how would you explain this?

827
00:33:24,280 --> 00:33:26,200
It's a dinette seat, but people don't know what a dinette is.

828
00:33:26,200 --> 00:33:28,140
It's a booth, it's a booth.

829
00:33:28,140 --> 00:33:31,560
It's a booth seat with a hollow inside

830
00:33:31,560 --> 00:33:32,720
that you can take the cushion off

831
00:33:32,720 --> 00:33:35,120
and take the board off the top of the booth

832
00:33:35,120 --> 00:33:36,680
and it's all empty inside.

833
00:33:36,680 --> 00:33:41,680
And praise be to Thor, this is where they decided

834
00:33:42,280 --> 00:33:47,000
to install my subwoofer for the sound system,

835
00:33:47,000 --> 00:33:49,120
which is on an inverter.

836
00:33:49,120 --> 00:33:52,980
And to power this one small subwoofer,

837
00:33:52,980 --> 00:33:55,500
they ran an entire AC outlet

838
00:33:55,500 --> 00:33:58,080
into the inside of this booth seat.

839
00:33:58,080 --> 00:34:00,720
So there is an AC plug on the inverter

840
00:34:00,720 --> 00:34:02,720
that runs off of my house batteries.

841
00:34:02,720 --> 00:34:04,320
Wait, wait, wait, wait, wait, wait.

842
00:34:04,320 --> 00:34:06,900
Doesn't the Pi run on DC power?

843
00:34:06,900 --> 00:34:09,360
Yes, that's for a future episode, Alex.

844
00:34:09,360 --> 00:34:10,200
Okay.

845
00:34:10,200 --> 00:34:13,900
Once I go solar, I've got to get everything on DC.

846
00:34:13,900 --> 00:34:14,740
Okay.

847
00:34:14,740 --> 00:34:16,520
But right now I just have, I have a surplus,

848
00:34:16,520 --> 00:34:17,360
well not a surplus,

849
00:34:17,360 --> 00:34:21,160
but I have 200 amp hour lithium ion batteries.

850
00:34:21,160 --> 00:34:24,440
So I can get about 12 to 18 hours

851
00:34:25,320 --> 00:34:27,520
of using the RV off battery power.

852
00:34:27,520 --> 00:34:28,640
I wonder how long you could run

853
00:34:28,640 --> 00:34:31,020
just a Pi four off that battery for.

854
00:34:31,020 --> 00:34:31,920
Years probably.

855
00:34:31,920 --> 00:34:33,200
Very, very long time

856
00:34:33,200 --> 00:34:35,420
because a 3800 milliamp battery

857
00:34:35,420 --> 00:34:38,780
supposedly will run it for like 16 hours.

858
00:34:40,120 --> 00:34:42,160
So there's a plug inside this booth seat

859
00:34:42,160 --> 00:34:43,040
and I have every,

860
00:34:43,040 --> 00:34:44,840
so I have installed all of my equipment

861
00:34:44,840 --> 00:34:46,220
inside this booth seat.

862
00:34:46,220 --> 00:34:48,720
I have my switch Velcroed to the wall of it,

863
00:34:48,720 --> 00:34:52,600
my router, all three Raspberry Pis,

864
00:34:52,600 --> 00:34:53,840
the discs that are attached to them,

865
00:34:53,840 --> 00:34:56,160
their USB hubs, everything's Velcroed in

866
00:34:56,160 --> 00:34:58,600
really nice and secure and snug,

867
00:34:58,600 --> 00:35:01,040
but don't call it Velcro, it's loop and hook.

868
00:35:01,040 --> 00:35:02,760
And so I'd hate to go away from that.

869
00:35:02,760 --> 00:35:03,600
Yeah.

870
00:35:03,600 --> 00:35:07,720
You know, you have a very unique set of requirements.

871
00:35:08,600 --> 00:35:11,600
I don't think most people need to drive their data

872
00:35:11,600 --> 00:35:14,960
down the road every week, but you know, if you do.

873
00:35:14,960 --> 00:35:16,240
I think you'd be surprised.

874
00:35:16,240 --> 00:35:19,000
Digital nomads are a bigger and bigger,

875
00:35:19,000 --> 00:35:20,720
bigger work demo.

876
00:35:20,720 --> 00:35:22,780
People who, because really what I'm doing

877
00:35:22,780 --> 00:35:24,560
is I'm trying to build a system for anybody

878
00:35:24,560 --> 00:35:26,480
who needs to work and travel at the same time.

879
00:35:26,480 --> 00:35:27,880
Mine's gonna be at a larger scale,

880
00:35:27,880 --> 00:35:29,600
but the concepts are applicable to anybody

881
00:35:29,600 --> 00:35:31,200
who works and travels.

882
00:35:31,200 --> 00:35:32,940
And so I am trying to solve these in a way

883
00:35:32,940 --> 00:35:37,360
that is low power, works off of maybe solar

884
00:35:37,360 --> 00:35:40,680
and is as best as possible noiseless.

885
00:35:41,960 --> 00:35:43,600
I don't know, you might be right though.

886
00:35:43,600 --> 00:35:44,720
I'd like to hear what the audience thinks

887
00:35:44,720 --> 00:35:46,280
I should do for my storage setup.

888
00:35:46,280 --> 00:35:48,480
Yeah, you can use the hashtag ask SSH.

889
00:35:48,480 --> 00:35:50,640
Now, speaking of the hashtag,

890
00:35:50,640 --> 00:35:54,020
Matty McGraw wrote in through JB Telegram,

891
00:35:54,020 --> 00:35:56,440
for data security, I want to do mirroring

892
00:35:56,440 --> 00:35:59,280
of my data does, directories.

893
00:35:59,280 --> 00:36:01,280
Is ZFS the best choice?

894
00:36:01,280 --> 00:36:04,400
I don't have tons of RAM.

895
00:36:04,400 --> 00:36:05,640
You know, I recently did some testing

896
00:36:05,640 --> 00:36:07,680
that shows that if you have even like 16 gigs of RAM,

897
00:36:07,680 --> 00:36:08,860
you'd probably be all right

898
00:36:08,860 --> 00:36:11,280
with certain storage mounts in reason.

899
00:36:11,280 --> 00:36:12,760
It really kind of scales to how much storage

900
00:36:12,760 --> 00:36:13,800
you have with CFS.

901
00:36:13,800 --> 00:36:15,440
I think in the old days, the recommendation

902
00:36:15,440 --> 00:36:16,480
that I certainly recall,

903
00:36:16,480 --> 00:36:17,800
and maybe we should hit Alan up

904
00:36:17,800 --> 00:36:19,700
for an up-to-date recommendation,

905
00:36:19,700 --> 00:36:21,440
was one gig per terabyte.

906
00:36:21,440 --> 00:36:23,400
I don't know if that still holds true now or what.

907
00:36:23,400 --> 00:36:25,120
Ish, I think is the old recommendation.

908
00:36:25,120 --> 00:36:27,000
But I think the other question

909
00:36:27,000 --> 00:36:30,080
that is embedded within the question is,

910
00:36:30,080 --> 00:36:33,120
if you want data integrity, do you have to go with CFS?

911
00:36:33,120 --> 00:36:35,880
Let's say it's like pictures of the family

912
00:36:35,880 --> 00:36:38,280
and you know, they're just irreplaceable.

913
00:36:38,280 --> 00:36:41,960
Does that, is your only option using ZFS?

914
00:36:41,960 --> 00:36:43,460
I don't know, I think after our conversation today,

915
00:36:43,460 --> 00:36:44,300
it might not be.

916
00:36:44,300 --> 00:36:47,320
Let's take the MergerFS SnapRaid situation, right?

917
00:36:47,320 --> 00:36:48,720
SnapRaid does checksumming.

918
00:36:48,720 --> 00:36:52,000
So every time it calculates parity,

919
00:36:52,000 --> 00:36:54,820
it is checking the integrity of those files

920
00:36:54,820 --> 00:36:56,460
at the file level, not the block level,

921
00:36:56,460 --> 00:36:58,560
which is where ZFS wins out.

922
00:36:58,560 --> 00:37:01,280
But what's interesting is that

923
00:37:01,280 --> 00:37:02,800
you can do your SnapRaid scrub,

924
00:37:02,800 --> 00:37:04,960
which has much the same kind of connotations

925
00:37:04,960 --> 00:37:09,960
as a ZFS scrub, which again, just checks the checksums

926
00:37:10,440 --> 00:37:13,360
and makes sure that the file integrity is there.

927
00:37:13,360 --> 00:37:16,760
You do get things like compression with CFS,

928
00:37:16,760 --> 00:37:20,480
you get encryption, and obviously you get bit rob protection,

929
00:37:20,480 --> 00:37:21,480
which is one of their favorite things.

930
00:37:21,480 --> 00:37:24,240
But really that just means it's checking the data.

931
00:37:24,240 --> 00:37:26,760
And you get other things that are more advanced

932
00:37:26,760 --> 00:37:28,160
that can be really great for backup,

933
00:37:28,160 --> 00:37:30,040
like ZFS send and receive.

934
00:37:30,040 --> 00:37:33,080
And data sets, I'm falling in love with data sets.

935
00:37:33,080 --> 00:37:34,640
Yeah.

936
00:37:34,640 --> 00:37:37,480
However, if this is not, if everything,

937
00:37:37,480 --> 00:37:40,420
if the words we just used do not excite you,

938
00:37:40,420 --> 00:37:41,960
it may not be the file system for you.

939
00:37:41,960 --> 00:37:43,440
That could just be the measure you use.

940
00:37:43,440 --> 00:37:47,680
And I am such a big believer in using systems

941
00:37:47,680 --> 00:37:49,300
that you are comfortable administering

942
00:37:49,300 --> 00:37:51,200
and keeping up to date and secure

943
00:37:51,200 --> 00:37:53,060
if you choose to self host.

944
00:37:53,060 --> 00:37:56,480
This is why I took FreeNAS off of our storage server

945
00:37:56,480 --> 00:37:57,500
here at the studio.

946
00:37:57,500 --> 00:37:59,080
FreeNAS is a great product.

947
00:38:00,300 --> 00:38:03,520
I am not the right type of user for FreeNAS.

948
00:38:03,520 --> 00:38:05,320
When I have a problem with my system,

949
00:38:05,320 --> 00:38:08,040
my troubleshooting technique is to get a command line

950
00:38:08,040 --> 00:38:10,840
and look at the logs, look at the output of the system

951
00:38:10,840 --> 00:38:13,440
and start troubleshooting and start fixing.

952
00:38:13,440 --> 00:38:14,760
That breaks FreeNAS.

953
00:38:14,760 --> 00:38:16,760
You need to use FreeNAS through the GUI.

954
00:38:16,760 --> 00:38:17,940
It's not my use case.

955
00:38:17,940 --> 00:38:21,480
I also, I'm not as familiar with FreeBSD as I am with Linux.

956
00:38:21,480 --> 00:38:23,600
And if it's my super valuable data,

957
00:38:23,600 --> 00:38:25,520
I want it to be on a system that I know how,

958
00:38:25,520 --> 00:38:27,760
like Alex said, I know how to rip the hard drive out,

959
00:38:27,760 --> 00:38:30,360
put it in another system and get to that data.

960
00:38:30,360 --> 00:38:32,000
I gotta know how to do that.

961
00:38:32,000 --> 00:38:34,840
And what ended up happening is once we flipped that thing

962
00:38:34,840 --> 00:38:38,200
over to Linux, I used it a hundred times more.

963
00:38:38,200 --> 00:38:40,420
We've now got so many applications on there.

964
00:38:40,420 --> 00:38:44,480
We've got backups, we've taken care of things

965
00:38:44,480 --> 00:38:47,920
like getting properly signed SSL certificates.

966
00:38:47,920 --> 00:38:50,560
Like it just went, it went much further than I was expecting.

967
00:38:50,560 --> 00:38:53,200
And once I switched to a system I was comfortable with.

968
00:38:53,200 --> 00:38:55,340
So Maddy, that's my number one advice.

969
00:38:55,340 --> 00:38:57,640
I know you've got some experience with Linux.

970
00:38:57,640 --> 00:39:00,720
So I would recommend maybe not doing FreeNAS.

971
00:39:00,720 --> 00:39:02,640
I would also recommend maybe looking

972
00:39:02,640 --> 00:39:04,060
at something like SnapRaid.

973
00:39:04,060 --> 00:39:06,160
You don't need mergerFS to use SnapRaid

974
00:39:06,160 --> 00:39:08,800
if you just want the snapshotting

975
00:39:08,800 --> 00:39:10,560
and backup capabilities of SnapRaid.

976
00:39:10,560 --> 00:39:13,120
And then look into getting that data offsite.

977
00:39:13,120 --> 00:39:16,040
So this is an important thing to focus on,

978
00:39:16,040 --> 00:39:17,280
which you're looking at right now.

979
00:39:17,280 --> 00:39:21,480
But like we mentioned earlier in the show, one is none.

980
00:39:21,480 --> 00:39:22,920
And two is not enough really.

981
00:39:22,920 --> 00:39:24,960
No, no, it really isn't.

982
00:39:24,960 --> 00:39:26,140
But the other thing to consider, right?

983
00:39:26,140 --> 00:39:27,780
Let's say that he went really simple

984
00:39:27,780 --> 00:39:30,320
and used something like rsync just to copy data

985
00:39:30,320 --> 00:39:32,920
from one place to another, one server to another,

986
00:39:32,920 --> 00:39:33,920
one directory to another.

987
00:39:33,920 --> 00:39:36,960
It doesn't really matter, rsync doesn't care.

988
00:39:36,960 --> 00:39:39,160
What you've got to think about is let's say

989
00:39:39,160 --> 00:39:42,320
that you have some kind of, what's that?

990
00:39:42,320 --> 00:39:45,280
Is it crypto malware or something?

991
00:39:45,280 --> 00:39:46,580
Oh yeah, sure enough you mean, yeah.

992
00:39:46,580 --> 00:39:49,160
Crypto ransomware, ransomware, thank you.

993
00:39:49,160 --> 00:39:50,500
Thank you, Brain.

994
00:39:50,500 --> 00:39:53,040
So let's say you have some ransomware situation, right?

995
00:39:53,040 --> 00:39:55,840
Where the files on your source of truth,

996
00:39:55,840 --> 00:39:58,080
your main system get encrypted

997
00:39:58,080 --> 00:40:00,200
and you don't know how to unencrypt them

998
00:40:00,200 --> 00:40:04,660
or you delete something or you just generally screw up, right?

999
00:40:04,660 --> 00:40:07,220
If you have a script

1000
00:40:07,220 --> 00:40:10,340
which is automatically overwriting data

1001
00:40:10,340 --> 00:40:13,400
at the other end every time, like rsync would,

1002
00:40:14,400 --> 00:40:17,680
you're also going to sync the encrypted copy

1003
00:40:17,680 --> 00:40:20,940
potentially over the top of your quote unquote backup.

1004
00:40:20,940 --> 00:40:23,700
Or a damaged file or deleted files potentially,

1005
00:40:23,700 --> 00:40:24,980
depending on how you have it set up.

1006
00:40:24,980 --> 00:40:26,520
There's a lot of ways that it could break.

1007
00:40:26,520 --> 00:40:28,580
So this is one of the things where ZFS send

1008
00:40:28,580 --> 00:40:29,580
would come into play

1009
00:40:29,580 --> 00:40:31,720
because you'd have data sets to play with.

1010
00:40:31,720 --> 00:40:34,020
And you could just roll back to the old data set

1011
00:40:34,020 --> 00:40:35,900
before the ransomware happened.

1012
00:40:35,900 --> 00:40:38,660
But is that a common problem?

1013
00:40:38,660 --> 00:40:41,420
I mean, the deletion thing is probably quite common

1014
00:40:41,420 --> 00:40:44,500
for people, but there are tools like our snapshot

1015
00:40:44,500 --> 00:40:48,900
that will do similar sorts of things on a non ZFS system.

1016
00:40:48,900 --> 00:40:50,620
There's a lot of options to be honest.

1017
00:40:50,620 --> 00:40:52,620
Alex and I both like to use duplicati

1018
00:40:52,620 --> 00:40:54,620
as a way to back up some of our server stuff.

1019
00:40:54,620 --> 00:40:56,220
Yes, how did I forget duplicati?

1020
00:40:56,220 --> 00:40:58,740
Yeah, I use that every day and it just works.

1021
00:40:58,740 --> 00:41:01,300
But it suffers from the same situation, right?

1022
00:41:01,300 --> 00:41:03,940
If my source of truth here gets encrypted

1023
00:41:03,940 --> 00:41:05,060
or I delete something,

1024
00:41:05,060 --> 00:41:07,780
it's going to also delete it on the other end.

1025
00:41:07,780 --> 00:41:10,260
The nice thing about applications like duplicati,

1026
00:41:10,260 --> 00:41:13,180
another one that's super great for local backups

1027
00:41:13,180 --> 00:41:15,480
is backup PC, been using it,

1028
00:41:16,620 --> 00:41:20,340
I think since like 2008, 2005, I love it.

1029
00:41:20,340 --> 00:41:24,060
Backup PC and duplicati will support revisions,

1030
00:41:24,060 --> 00:41:24,980
which is really nice.

1031
00:41:24,980 --> 00:41:27,380
So you can revert back.

1032
00:41:27,380 --> 00:41:30,620
You can also have it configured not to do that.

1033
00:41:30,620 --> 00:41:32,500
So that's why it's important to go through it.

1034
00:41:32,500 --> 00:41:34,100
When you decide to self host,

1035
00:41:34,100 --> 00:41:35,340
this is going to be like my soapbox

1036
00:41:35,340 --> 00:41:36,820
for like the first 10 episodes.

1037
00:41:36,820 --> 00:41:37,940
When you decide to self host,

1038
00:41:37,940 --> 00:41:40,540
you're taking on a little additional responsibility.

1039
00:41:40,540 --> 00:41:41,420
You got to check these things.

1040
00:41:41,420 --> 00:41:43,660
Do I have revisions and stuff like that?

1041
00:41:43,660 --> 00:41:46,660
But here's the thing, when it breaks, it's on you,

1042
00:41:46,660 --> 00:41:49,740
not some massive data breach like Equifax

1043
00:41:49,740 --> 00:41:50,580
or something like that, right?

1044
00:41:50,580 --> 00:41:52,940
Like it's your fault.

1045
00:41:52,940 --> 00:41:56,500
And I actually kind of appreciate the honesty of that.

1046
00:41:56,500 --> 00:41:59,260
There's also the reality that you're not nearly the target

1047
00:41:59,260 --> 00:42:01,740
that Equifax is or Amazon, right?

1048
00:42:01,740 --> 00:42:06,140
You're almost in some ways enjoying the obscurity,

1049
00:42:06,140 --> 00:42:07,340
I would say.

1050
00:42:07,340 --> 00:42:10,660
And I kind of like it to be on me,

1051
00:42:10,660 --> 00:42:11,820
because it is my stuff.

1052
00:42:11,820 --> 00:42:13,860
It's just a digital version of my stuff,

1053
00:42:13,860 --> 00:42:17,020
just like the security of my home is on me.

1054
00:42:17,020 --> 00:42:18,540
So I prefer it that way.

1055
00:42:18,540 --> 00:42:20,900
I'd rather not outsource the security of my house

1056
00:42:20,900 --> 00:42:22,820
or my RV or the studio.

1057
00:42:22,820 --> 00:42:26,260
So yeah, I think it's a little more stress,

1058
00:42:26,260 --> 00:42:29,020
but it's also very gratifying.

1059
00:42:29,020 --> 00:42:30,460
Like when my setup,

1060
00:42:30,460 --> 00:42:32,340
when this stuff I'm doing in the RV works,

1061
00:42:32,340 --> 00:42:35,860
like with Home Assistant, it genuinely gives me joy.

1062
00:42:35,860 --> 00:42:37,140
Like it just gives me so much joy.

1063
00:42:37,140 --> 00:42:40,060
And I feel like I know I've done a good job,

1064
00:42:40,060 --> 00:42:41,900
like with the wire running for the cameras,

1065
00:42:41,900 --> 00:42:43,580
I'm proud of that.

1066
00:42:43,580 --> 00:42:44,900
Where I mounted things,

1067
00:42:44,900 --> 00:42:46,860
how I've done the pies are mounted

1068
00:42:46,860 --> 00:42:48,500
and run the wires for that, I'm proud of that.

1069
00:42:48,500 --> 00:42:50,420
Like I've put craftsmanship into it.

1070
00:42:50,420 --> 00:42:52,860
It's given me an opportunity at the end of the day

1071
00:42:52,860 --> 00:42:55,300
to come home and work on something for an hour or two

1072
00:42:55,300 --> 00:42:57,260
that gives me genuine satisfaction.

1073
00:42:57,260 --> 00:43:00,620
And it also improves our digital wellbeing.

1074
00:43:00,620 --> 00:43:01,500
So there you are, Matty.

1075
00:43:01,500 --> 00:43:03,780
I'm sure we've just completely made that

1076
00:43:03,780 --> 00:43:05,180
even more complicated for you

1077
00:43:05,180 --> 00:43:08,140
by giving you 15 more different options.

1078
00:43:08,140 --> 00:43:11,420
You see, why wouldn't everyone want to hashtag ask SSH

1079
00:43:11,420 --> 00:43:12,820
and get their question on the show?

1080
00:43:12,820 --> 00:43:13,820
Exactly.

1081
00:43:13,820 --> 00:43:17,060
So you can get more of the show at selfhosted.show.

1082
00:43:17,060 --> 00:43:19,100
I'm on Twitter at ironicbadger.

1083
00:43:19,100 --> 00:43:20,460
I'm at Chris LAS.

1084
00:43:20,460 --> 00:43:22,580
The network is at Jupiter signal.

1085
00:43:22,580 --> 00:43:24,780
And don't forget extras, extras.show

1086
00:43:24,780 --> 00:43:27,180
with our merger FS interview coming up,

1087
00:43:27,180 --> 00:43:29,860
probably already out by the time you're hearing this episode.

1088
00:43:29,860 --> 00:43:31,660
And also a plug for another brunch

1089
00:43:31,660 --> 00:43:32,980
that was excellent recently

1090
00:43:32,980 --> 00:43:34,900
was the Alan Jude Brunch with Brent.

1091
00:43:34,900 --> 00:43:39,100
So, you know, he talks more about ZFS of course,

1092
00:43:39,100 --> 00:43:39,940
cause it's Alan.

1093
00:43:39,940 --> 00:43:42,180
Yes, and his free BSD stuff.

1094
00:43:42,180 --> 00:43:44,300
And yeah, that'd probably be a fun episode

1095
00:43:44,300 --> 00:43:45,660
for people that are into self hosting.

1096
00:43:45,660 --> 00:43:46,500
Great, great point.

1097
00:43:46,500 --> 00:43:48,140
Yeah, check out Brunch with Brent and Alan.

1098
00:43:48,140 --> 00:43:49,060
That was a good one.

1099
00:43:49,060 --> 00:43:52,900
And then one final JB plug is techsnap.systems.

1100
00:43:52,900 --> 00:43:56,140
Yes, talk about getting simple explanations

1101
00:43:56,140 --> 00:43:58,540
of how these complicated ZFS things work.

1102
00:43:58,540 --> 00:44:01,500
Jim Salter is a master at explaining ZFS.

1103
00:44:01,500 --> 00:44:02,340
He's really good.

1104
00:44:02,340 --> 00:44:07,340
And particularly techsnap414 is all about ZFS.

1105
00:44:08,020 --> 00:44:10,260
And I really enjoyed the snapshot discussion.

1106
00:44:10,260 --> 00:44:12,980
And 415 is gonna be about benchmarking,

1107
00:44:12,980 --> 00:44:14,260
which should be really interesting.

1108
00:44:14,260 --> 00:44:15,100
Absolutely.

1109
00:44:15,100 --> 00:44:17,540
So thanks everybody for listening.

1110
00:44:17,540 --> 00:44:22,540
That was selfhosted.show slash five.

