Coming up on Self Hosted 14, Wendell's back, he joins us and we talk about the perfect low power
home server, some great ideas for a firewall, and why Alex has orange knobs all over his office.
I'm Chris.
And I'm Alex.
And this is Self Hosted 14.
Welcome back to Self Hosted.
It's great to be here with episode 14.
And Alex, we have a special one today.
Another one.
I know.
Another special episode.
I feel like every episode is special.
It's like I used to say every show was a big show, but now they're not as long.
So now they're just special shows.
But this one really is because Wendell is joining us.
He was on episode one and we knew we'd want to have him back.
So Wendell, welcome back to the Self Hosted podcast.
How's it going?
I've been following the show and it's very, there are so many people that are like, yes,
self hosted.
Before we start, Alex, we had something we had to cut from last week's episode.
Do you want to just maybe start with that?
A little tip you had with, I think it was SSH Shuttle or SSH Shuttle.
SSH Shuttle is one of those tools.
I've used it for several years now.
And obviously this predates WireGuard being a thing and it lets me tunnel traffic over
SSH and essentially creates a poor man's VPN over SSH.
So I used to use it a lot when I worked in a bank and they had a very restrictive outbound
SSH policy.
So I used to use that in conjunction with Corkscrew out on port 443 to make all my traffic
look like what was SSL traffic.
And then I could route all my DNS through that tunnel as well and get to any website
I wanted.
The point for me being was I could actually get to my homeland very easily that way.
I wasn't really too worried about going to silly sites at work, but yeah, it's a tool
that I've used for many years.
And I've had a blog post sat in drafts for what must be four years at this point.
And I looked at it.
I sat at Nashville airport last week and I thought, you know what?
I need to publish this post.
So here we go.
Good.
We'll link that up in the old show notes.
That's a great tool.
I might actually play around with that myself.
So thank you.
It's really nice.
I use it a lot for Red Hat stuff.
We have an internal VPN that we have to connect to and I have a droplet that's running that's
perma connected to that VPN.
And so when I want to route traffic through the internal VPN to view the intranet or whatever,
I have a bash alias that routes all my traffic for those few minutes through the tunnel and
then through the droplet into Red Hat.
And it works really nicely.
That's a great tip.
That's something I'm going to check out.
Now, I had a realization this week that I wanted to share with you guys.
Curious if this happens to you.
So at home, I have several Raspberry Pi 4s that I set up doing various different jobs.
I think I've talked about it quite a bit on the show, but I had a realization that the
details of how I set it all up are already beginning to fade.
Do you have this happen where you just you go all out on something?
It's like a passion project and then the details fade away.
I'll give you one better.
You go all out on a passion project and then you're like, oh, wait.
And then this just random thought occurs to you.
And then it's like, I know instead of putting this in the wiring closet with everything
else, I'll put it here and then you open up that cabinet and there's already one there.
And it's like, did I already do this and forget?
I don't think that's ever happened to me that I've forgotten a piece of hardware exists.
But I could, you know, having been to your place, I can imagine that that's happened
once or twice.
Yeah, it's sort of a reminder that you're kind of predictable in a sense because I've
also done that with like, oh, I need to save something on the computer and I'll download
a PDF and I'll go to put it in a very specific place so that way I can get to it later.
And I'll open the directory and the PDF is already there and I've already done it.
I just completely forgot that.
Yeah, that's where I'm at.
And I did do some documentation.
So I'm not totally out in the woods, but I'm looking at it now and I'm thinking, I wish
I would have done this through some sort of automated deployment because the scenario
I now fear is I've become super dependent on this hardware.
And I'm just concerned about hardware failure.
And if there's a hardware failure because they are Raspberry Pis, they are swappable.
So in theory, I could just take a dead one out, put a full who even cares what's wrong,
right?
Just buy an extra one, swap out the dead one, put in a good one and then have something
reset it up completely as per some system.
And I just haven't done that.
And now I'm regretting it.
Yeah, that's why that's where I am right now.
I've got the four gig Raspberry Pi with the POE hat with the fixed USB-C power and all
of that. And it's like, yes, finally.
And I've been experimenting with the watchdog thing for about the last six months or so,
like six or eight months.
And the watchdog thing works really well.
But you can also ethernet boot the Raspberry Pi.
And so it's like, do I even need storage for the Raspberry Pi at this point?
Because that's another point of failure.
And maybe I can just be like, no, this Mac address boots and has this hat attached to
it.
And I can just sort of go from there.
Do you still need the SD card for that, though?
Even for pixie booting?
You might just for like the bootloader or whatever.
There's nothing actually stored.
Like you wouldn't need to do anything, although it may be able to load from the EEPROM because
some of the documentation online is like, oh, there's an EEPROM that blah, blah, blah.
And it's like, does that actually work?
I don't know.
I haven't gotten there yet.
Can I trace back a little bit?
What's the watchdog thing?
On the Raspberry Pi, you can load a kernel module that if you don't poke the watchdog
every 10 seconds, it will hard reset the Raspberry Pi.
So if the Raspberry Pi locks up or has some sort of hardware failure or overheats or something,
it will just reset itself.
And that's not going to cause any issues with the SD card corrupting itself or?
Well, that's why I want a PXE boot.
Ah, yes.
Yep.
If not PXE boot, the SD card should be completely read only, maybe mechanically read only.
And just a super, super, super minimal boot environment.
Although there's the security consideration with that.
But I'd rather just completely raw boot and deal with it from there.
Right.
And then you could just have another SD card standing by if that one were to die for some
reason.
Just if it's such a minimal boot environment, doesn't need to do much.
But how do I do all of this?
Like, what is too much for a home project?
I don't want to create another monster that within six months, I'll forget how it's set
up.
That's what I'm worried about.
That's where I am, too, because it's like, I don't know.
For me, most of the Raspberry Pi stuff is just information logging and monitoring in
a tiny, tiny little bit of control.
So like, you know, the amazing Grafana dashboard that's like, this is what the boiler is doing.
This is the pressure.
And this is the thing over time.
And this is the other stuff that's happening.
Yeah, it's not the end of the world if you lose it.
What do you guys tend to use for that kind of thing?
Like config management?
You know, my personal flavor is Ansible and mixed with a bit of Terraform sometimes.
What do you use?
Ansible mostly.
Although, there are a few scripts that are just a bash script piped into SSH with keys.
That's my setup.
That's me over here.
I don't think there's anything wrong with that, really.
I mean, if you're being a super elite hacker, like Popey last week was giving me a hard
time that I'm an elite hacker because I like IRC.
No, I don't think that's true.
But I think bash scripts do have their place.
And coming back to your point, Chris, sometimes if you build a complex house of cards that
you don't fully understand, you then don't touch it.
So the magic bullet to making config management work for me is that you have to ensure every
change you make to a system is made through that config management tool.
So if you want to install just one package, you add that to your dictionary of packages
or whatever, run Ansible, and it goes and installs that one package.
I'm going to explain Ansible very briefly for those that aren't familiar with it.
It's an SSH-based tool that is a declarative state type tool.
So you say, I want my system to look like this.
I want it to have these packages.
I want Samba config to look like this, et cetera.
You run the Ansible playbook command.
It SSHs out to all of your different hosts and does all of the stuff based on what's
in the playbooks.
Once the playbooks have executed, the host state should match what is declared in the
playbook, hence the declarative state name.
And so if you let that config drift on those nodes from the declared state in the infrastructure
as code type playbooks that you've written, you end up with this config drift between
the two and it becomes really hard quite quickly to reconcile those differences unless you're
quite strict about it.
Even things like just minor point upgrades to the underlying distro can cause a problem
and then it's like, oh, I didn't really want to spend three hours troubleshooting this
today.
Yeah, that's a thing as that happens.
So what are you thinking, Chris?
You want to do that for your pies now?
Yeah, although I am worried that's a bit much.
But is it?
So here's what my alternative is, is like an image-based approach.
Once a month, I pull out the SD cards and it's very manual.
So it's very unlikely, isn't it?
I mean, even just saying it out loud, I started to think it's a bad idea, but that's what
I was thinking was just images and then Duplicati gets the config data.
Offsite and the actual large data is stored on a spinning disk, or actually it's a solid
state disk, not an SD card.
So the OS really just has to get back to base.
Then I could pull down the latest containers, restore the configs with Duplicati, but it's
a lot of manual work.
That's probably a good couple of hours.
And that's it for me, like containers have changed how disposable my hosts are.
I don't really care if my host dies because all my data lives on some persistent storage
somewhere else and the application is separated from it.
So, yeah, I almost, yeah, I don't know.
And I don't know what point I should pull the eject lever and just say, OK, I have to
go to some massive management system or if I just...
Ansible is not a massive management system.
I think if you've never used it before, there is this kind of fog.
Yeah, but it's like half a day's effort, I think, to, you know, demist the fog.
Oh, really?
Yeah, I'll give you some help.
All right, then that might be the route I want to go.
If you think it's not...
See, that's kind of...
I just didn't want to have to bite off like a whole new thing, but I actually don't mind
picking up something new, really.
If it's not so bad, I could do it.
Now, let's talk about hardware whilst we have Mr. Wendell with us.
One of your recent videos was all about the new Fractal case.
They've gone in a really interesting way, really interesting direction.
Yeah, well, it's the Fractal Define 7 XL and the 7.
And the 7 XL, I wasn't expecting to like it.
It's just a giant tower case.
I wasn't expecting to like it as much as I did.
But it was like, man, this case would be perfect if it had wheels.
It's like, is there a wheels option?
And they're like, no.
And it's like, wait, I have a 3D printer.
I can fix this.
So I 3D printed my own adapters for the feet.
And so I went through a couple iterations.
Like, this is like an early iteration.
But it sort of centers the wheel actually on the screw.
Because I thought that would be a little mechanically stronger.
But it turns out sort of this like saddle thing is a better approach.
And then I ended up 3D printing a donut shaped hole in the foot
so that you can feed a zip tie through it.
And the whole thing will go inside the case.
And you can screw and zip tie the foot to the case.
And then you've got the wheel that will go in like this.
And so you can have a really nice case on wheels.
That just looks like an office chair caster, like a roller blade wheel or something.
Yeah, that's literally this is like you can order these on Amazon.
So like if you have hardwood floors, you're not supposed to use office
chair casters on hardwood floors because it'll wear a hole in it.
You get these.
And that's literally what this is.
It's just an office chair caster that goes in there.
And then this screws into the bottom of the fractal case.
And then you have a pretty nice full tower case that's really heavy and will roll around.
Now, is there a way you could figure out a reason to charge $400 for those wheels?
Because I knew you were going to go there.
No, it's like $35 on Amazon and like a dollar of plastic.
So hmm, OK, also 3D printed an M.2 hot swap.
So like not really hot swap, but like for like a U.2 device and so you just zip tie
the connector in the end here and then the U.2 two and a half inch NVMe SSD just slides in.
And so I've got these laying in the bottom of the case as well.
And so it's like, oh, I need to pop in a different Linux distro or whatever.
I'll just pop out my main hard drive and pop in a new hard drive and it's PCIe connected
and it's out of the way and it's nice.
That is great.
And these are those wonderful Intel, what, four terabyte SSDs that you found?
Yeah, they're on eBay, right?
Yeah, I bought a few of those.
They're hard to get now, but yeah, yeah, it turns out they're they're kind of nice.
And this has got standard two and a half inch drive, like screw holes in it.
So you just screw this in the same way that you would a two and a half inch drive.
And it's a lot taller, obviously.
Doesn't that look like a TIE fighter to you, Chris?
Yeah, I could.
That's a good way to describe it.
Yeah, visualize a TIE fighter, folks, and that's kind of what it looks like.
That's a great idea.
I got to get one.
Yeah, I think zip ties are really underrated in kind of low, low budget things like this.
I use them for all my drones and stuff.
They're a major mechanical component of the Prusa 3D printers.
Yes, they are.
Yeah, yeah, I have two sat behind me.
I have one of the minis and the i3.
I love it.
Yeah, that's what these were printed on.
It works.
It works really well for what it is.
So slight tangent about 3D printing for a moment.
How did you get into 3D printing?
I needed to make things that didn't exist.
When I got a 3D printer, it was very early in the MakerBot days when they were open source
and you could kind of get it out of the laser cut wood.
And the first 3D printer that I had was basically made out of laser printer parts
because it was like, oh, step promoters, laser printer.
Yeah.
I thought that I would be doing a lot more creative stuff with it because I was pretty
good with AutoCAD because I had some experience with CNC machining.
Are you still using AutoCAD now?
No, no.
I made these with just Tinkercad, which is infuriating because it doesn't give you a
CLI interface.
With AutoCAD, it sort of taught me to just not even use the mouse, to just visualize
the part that I wanted to build and start typing coordinates.
Because using the calipers and doing the CNC thing, and that works brilliantly with AutoCAD
when you're going to do that.
But if you need to use the mouse, it's not good.
90% of what I make in the 3D printer is parts for something that I've lost or something
to fix something.
So I've got a bookshelf, I've got a bunch of bookshelves that have adjustable shelves
and sometimes I'll put tall things in and so I'll take a shelf out and then I'll rearrange
and then it's like, OK, I need to put that shelf back in and the little plastic things
are gone.
And they're not just pegs, they're like the ones that the shelf snaps into it.
And so I have about seven different models of those and it's like, oh, time to rearrange
the shelf.
I'll just go and 3D print some more clips and that's just what I do.
Right next to me here, I have a pair of Ikea Lack tables.
I'm going to point them on the webcam to you both and they are stacked together with two
or no, well, obviously four, one for each leg, 3D printed things with a couple of screws
and it is brilliant.
And then my 3D printer station behind me, you can see all the orange, everything orange
is 3D printed and designed in, I use Fusion 360, which...
Oh yeah, the hobby license for that is nice.
The hobby license only lasts a year.
It's the education license that's in perpetuity.
So you've got to be careful with that.
But it's annoying because it tethers me to windows and I've got Adobe stuff and Fusion
360 that tethers me to windows, which gives me an excuse to do PCI pass through, but I'd
really rather not have to.
You know, it could be worse.
Yeah, at least it works, Alex.
For the most part.
It's funny you say anything orange was 3D printed.
There's just your whole office is covered in orange little things everywhere.
You put it all together.
Yeah, kind of is.
I've got a few videos that are coming out and the first one is on something called the
Iron Fireman and I think I'm going to take an old thermostat because it's literally,
it's a coal loader for the boiler, but the thermostat part of it still works, but it's
mercury switch on a spring, so it's not super sensitive.
I think I'm going to retrofit that.
Did you see the Hackaday mod that was the rotary dial cell phone?
I'm going to try to take a Raspberry Pi W and shove it inside this thermostat and modernize
it and 3D print all the stuff to make it actually kind of nice.
But there's a tiny, tiny little OLED SPI screen that is just about as wide as the thermostat
and it is taking every fiber of my being to resist having some kind of a thing to where
when you get close there's a proximity or something and a servo causes the screen to
lift out of the thermostat.
But it's so anachronistic because it's just a brass cover with some knobs for setting
day and night temperature, but it's like you get close to it and I want an OLED screen
to just pop up out of it and then powered from a piece of Cat 6 or something and that
would be amazing.
That would be really great.
I want that too.
That does sound awesome.
I want that.
Well, I kind of have a hardware question that's a bit of a conundrum, so maybe I could pick
both your brains on this one.
I think my next piece of hardware for my home setup, it's got to be my edge device, my
firewall.
So right now I have that GL, what's it called?
The GL Net, those little tiny routers, Alex, that we've talked about before on the show?
Yeah, the new version that we mentioned, I forget what episode it was, like two or three
or something, the Slates.
Yes, the Slates.
That's it.
Which I really like because it has a great UI that lets you switch between multiple upstream
network options.
So MiFi, Wi-Fi, Cat 5, whatever, you can just switch between them through their GUI.
But if you don't like that, you can drop under the hood and it's got a nice Linux command
line and it works pretty well.
But it's very appliance based.
It's not very flexible.
And the number one issue I have with it is although it touts some level of WireGuard
support, there doesn't seem to be quite what I want.
So I'm thinking about building, I don't know anymore if I should go with OpenSense or
PFSense, but I'm thinking about building a new edge device that also has WireGuard support
that would allow me to select multiple networks from different options at different times.
But let me keep all of the devices behind the LAN.
You know, they stay the same, their IPs don't change.
And that the edge device needs to provide DNS for the LAN so I can resolve all the LAN
devices by name.
Those basic kinds of things, so obviously DHCP, DNS, I'd even like to provide NTP for
the home network.
But some of the key things I'd want is low power if possible, low noise is a requirement
and even fanless would be ideal.
Is this a thing that exists?
I would probably, it's not fanless, but it's a lot of horsepower.
I'd probably go with like the Ryzen Embedded, which is probably like way, way, way extreme
maximum overkill for your needs.
But you can spin up microcontainers and microservices.
Like you can start with PFSense, but then you can expand that into a full free BSD
installation, but maintain the PFSense GUI, because that will give you containers.
And then you can start running jails and then inside the jail you can start running Docker
and stuff like that.
Because I've been experimenting with modifying PFSense to be able to better support things
like LAN cache for steam caching.
Yes.
So like I did this work with Dr. Ian Cutress at Anandtech and the Chinese servers.
And so like these are, you know, sort of the forbidden technology.
It's like, this is, you know, don't do business with these companies, blah, blah, blah.
But it's like, I must explore the technology.
And so that's on a secure network.
And the way that works is there's a PFSense machine that has a VPN connection and all
of the traffic is tunneled, but it's also logged.
So like every packet in and out is logged.
And it doesn't matter what protocol it is, because sometimes you can hide things in non-IP
protocol stuff because people always forget about that.
Or, you know, like weird, like, oh, this looks like one of those really weird, you know,
like IGMP packets and it's completely benign.
And it's like, oh, no, this is actually a way to exfiltrate data.
Yeah, it's like, yeah, it's not good.
So I've got a fairly elaborate setup on PFSense where it has, you know, the LAN interface
and then it has like the red zone and then it has, you know, a bunch of other interfaces
and a couple of VLANs.
And there's more stuff running on PFSense than you normally would for things like packet
capture and analysis and IDS.
And those things chew up a fair bit of horsepower.
A really super inexpensive option are those ultra small form factor DELs.
Like you can get, you know, a Haswell or Ivy Bridge.
I mean, Intel mitigations aside, but you can get Intel, you can get like the Ivy Bridge
or Haswell micro form factor DELs now for like a hundred bucks and throw in eight or
16 gigs of RAM in those.
And they're not fanless, but they're whisper quiet, at least until one of the fans die.
Throw in a quad port NIC and you can do a lot with that.
That's a great suggestion.
Yeah, as long as it's fairly quiet, really, that's probably fine.
And you can also just, you know, roll straight Linux on it if you want.
That's an option.
And not bother with the whole PFSense stuff.
Yeah, that has also crossed my mind is just do a Linux box and then just roll bind, do
wire guard by hand, set up DHCP.
It's in fact, roll Linux box and maybe put PyHole on there to just make a few things
easy in a container.
Yeah, like having the whole thing.
That's that's where I'm going is like not even doing very much on the host at all.
Literally everything is container.
Everything is, you know, Docker compose or Ansible or whatever.
And if those containers all live on one machine, great.
And if those containers need to be split up across a couple of different machines, great.
But all of it sort of works together because like the PyHole and the LAN cache for Steam
game caching and other game caching and all of that, all of that magic depends on DNS.
Plus, you also want the DNS experience to be like the most amazing thing ever, because
if your local DNS resolver is garbage, your whole Internet experience is going to feel
like garbage.
So you want that to be as good and fast as possible, and maybe it's worth having a premium
device for that.
That is very good point.
Can you talk a little more about the steam cache aspect and how it requires DNS?
Because that's something I definitely want to get set up.
It's been on my to do list for a long time, and so I'm curious what I'll need to accommodate
DNS wise to enable it.
There's a GitHub repository for LAN cache that sort of goes into detail with everything,
but Steam will do a DNS lookup for a record that is expected to be rewritten by your ISP
or local provider or whatever, and you can just do it yourself.
And it does not depend on HTTPS, there's no encryption, nothing like that.
And so if you rewrite that DNS request and you have a corresponding web server that can
proxy requests, then Steam is designed to work with the caching system.
It's just normally it's like your ISP that's going to be doing the caching, but in this
case it's you that's going to be doing the caching.
And generally that's true with Blizzard and Activision and a bunch of other games.
Sometimes HTTPS becomes a problem because they'll forget and they'll enable required
HTTPS, and so any HTTPS traffic that you have is proxied but not cached because it's encrypted,
and that encryption is sort of temporal, so it might be able to cache it, but then if
it goes to playback that cache later, it's sort of nonsensical at that point in time,
so the fact that it was cached encrypted data doesn't really help you.
But most game providers will let you do that, and Windows Update is the same way.
It manages its own integrity checking, so it doesn't need HTTPS, and so you can get
your Windows updates if you have Windows machines on your network or your family has Windows
machines or whatever.
Same thing with repositories, so our local, the same container that is doing Steam caching,
also with DNS magic, we're caching Debian and Fedora.
And so it's just completely transparent, and it's like it's going to download the package
and it's going to do its own integrity checking on the package, even though the connection's
not encrypted, but because the connection's not encrypted, I can have that local cache.
And so it's like, oh, it's time to update Debian.
Oh, that's happening at a gigabit per second.
That's nice.
Yeah, really.
Have you tried it with Ubuntu, or is it just Debian proper?
No, yeah, no, you can totally do it with Ubuntu, you can totally do it with any other distro
where you can set up an HTTP non-S mirror, and then that URL will be cached if you do
some DNS magic.
Guys, that sounds nice.
Yeah, I definitely want to do the Steam cache one, because there are times when I'm on a
MiFi, it's just so brutal, it's so bad, and I just think to myself, why haven't I set
that Steam cache up yet?
And that would be a good reason to have an Edge device with a little more horsepower,
is to do kind of that stuff.
Asrock has a, it's like the Desk Mini A320, I think.
It's an APU, but it's got two 3.5 inch bays, and I really, really want to add an M.2 SSD
and two 4 terabyte mechanical hard drives to that, so that it's like a cheap system.
And that could be my travel cache system, because I find myself in the same situation
a lot of the time, where I'm somewhere, and maybe I'm going to go to Computex, and maybe
I want to do hardware testing in my hotel room, but the hotel room connection is garbage,
and I need terabytes and terabytes of Fire Strike and games and crap like that.
What if I could plug the hardware or laptop or whatever it is I'm testing in with a local
connection, and I've got my little six inch cube of information, basically, and it's just
shoving all of the information that I could possibly ever need onto the machine to be
tested at wire speed, and then I don't have to worry about it.
That's glorious.
I love that idea.
I'm making a project list over here, Alex.
I've got a list of stuff I'm writing down over here.
All right, I'm going to do that.
You can add that to the pile of shame.
The things I'll do one day.
I was watching a video, I think it was Jay's Two Cent, where we went behind the scenes
at one of these massive LAN parties, where he was talking with the networking team about
how they ran fiber to each row of people doing LAN, and they had the LAN cache there, and
that was really interesting, because he was talking about, I think it was Origin that
uses HTTPS, which meant that they couldn't cache that one particular vendor.
There have been a lot of complaints for that.
I think that was Kane and Max CFM, and those guys for Dreamhack, because Kane does a lot
of work for Dreamhack, and they get the world record on the LAN cache speed.
It was 45 or 55 gigabytes per second, I think, or was it gigabit?
It might have been gigabit.
It was fast.
It was insanely fast.
Even Linus's mega, crazy, super SSD server might struggle going much faster than that.
Wendell, you said something in there earlier that I thought would be worth touching on.
Sounds like you're doing sort of my approach of minimum viable Linux for the host OS.
It's just a really base install for your system, and then everything's either VM or containers?
Yeah, because repeatability, and ain't nobody got time for that.
Yeah, no kidding, right?
I know.
Well, and also, it's less to update, it's less to break, it's less security attack surface.
There's a lot of benefits to it.
The one thing that drives me insane about Docker containers is they never have good
internal log management, and you will need that for incident response.
So I usually have things on the Docker side of it for Docker Compose.
It's like, okay, I'm just going to go ahead and map those directories to the host, but
I'm also actually going to bother with log shipping to a machine on the network that's
super hardened, just so that there's a logging device.
And then it's like, hey, I'm not getting a heartbeat from this machine, but I started
getting emails, like something may, and it's, you know, a lot of the time it's just that
machine locked up or the power went out and the battery on the other thing is lasting
a little bit longer.
But that's a great thing to do with the Raspberry Pi as well, because it's not x86.
So like the ScriptKitty binary exploit is like, oh, it's Raspberry Pi.
You can't just, you know, upload a binary and ELF binary to it and have it actually
work correctly.
Right.
And the fact that you can, you know, store the logs or export the logs or send it to
something else or just have it stored there on that device, then it's like, it's nice
because it's just right there on a separate device and it's hard to sort of compromise
that and everything else.
So let's get to a little bit of feedback.
I have an email here from Ian.
Thanks for writing in, Ian at Ask SSH.
It's to do with hardware and he would like to know with all the AMD hardware releases
right now, it's kind of hard to keep track of what is good for a low power server.
What would you recommend as the best bang for budget AMD based system right now for
a 24 seven based system?
Best bang for the buck is probably the Ryzen 1600 AF.
If you can find it, it's like 89 bucks and it's technically a 2600 because the 1600 on
the old process sold so well, they're like, eh, we'll call it 1600 AF and it's a little
slower than a 2600 so it didn't quite make the cut for a 2600 but it is essentially 2600
and that CPU is incredible, an incredible, you know, bang for the buck because it's basically
a 2000 series Ryzen.
Where does that fit broadly speaking?
I'm fairly familiar with the Intel lineup.
What's the Intel kind of comparative chip there?
Probably one of the Xeon E3s but it's actually going to be faster than just about all of
the Xeon E3s that are available.
Is that in single or multi-thread?
Single thread is going to be close.
It might slightly favor Intel.
If you want to beat Intel in single thread with that Xeon E3, you could go with the Ryzen
5 3600 and that's going to be a six core and that will handily outperform any Xeon E3 available
today.
Back to Ian's question, he's talking about the 24 by 7 piece.
What's the sort of idle energy draw on these things?
It depends on the motherboard and it depends on the implementation.
If you go like super, super, super low power, which actually is a little tricky to do on
Ryzen because you have to have a power supply that properly supports C6 and some power supplies
that advertise the C6 deep sleep don't actually support the C6 deep sleep and some power supplies
implement the C6 deep sleep as turn on this big old bank of resistors just to keep things
ready in case the system wakes up, which generates heat so it doesn't actually consume less power.
You got to really look at the power graph because it's like, oh, it's 80 plus gold or
it's 80 plus bronze or it's 80 plus platinum.
When you start playing with the 1% power utilization, that power efficiency goes to like 50% or 30%.
So like literally half the energy that you're burning just goes to idle.
DC to DC converters in that case might actually be a better choice, like one of the micro
power supplies if you really, really want to be super frugal on the power, but it also
depends a lot on the motherboard in terms of like the actual CPU itself.
It's on the order of like one or two Watts per core while on the 3000 series plus whatever
the IO die is using.
So like the CPU itself in its lowest power state can be around like four or five Watts,
maybe less than that, but it really depends on the rest of the system.
Wow.
That's like Raspberry Pi level.
Yeah.
Well, it's not doing anything.
So I mean,
Yeah, no, but my Xeons downstairs are doing nothing and they're sucking down 150 Watts
each.
Thank you very much.
Your power usage is not going to be five Watts at the wall, no matter what you do, it's just
that the power usage is going to be dominated by everything else in the system other than
the CPU.
Sure.
So just keeping the NVMe on standby is going to be five Watts.
Oh, that's good to know.
I didn't know that.
And now a logical question to follow that, and this one's from me.
What sort of motherboards would we be looking at?
Is there anything with IPMI?
Yes.
ASRock.
ASRock rack.
Thank you.
They have an X470 and X570 board.
The X470 board has dual Intel 10 gig optional and you don't really pay that much more like
the board plus a 10 gig card, you know, is like 350, 300, 350, something like that.
And so three to $400 for that board.
It's great.
It's got the AST 2500, same exact thing that you'd have in a server.
Full RAM, full VGA implementation and with the American mega trends flavored implementation
of the IPMI.
It's got all the features, the watchdog, SSH access, command line, the whole nine yards,
but it's an AM4 platform and they just came out with the X570 version, but I haven't been
able to source it.
I think it's a little more, I think it's like on the order of $600 and I think that's just
an availability issue, not like an actual expected end user cost.
But the 470 version is totally fine unless you need PCIe 4 or even more PCIe bandwidth.
I assume those boards require DDR4, do they?
Yeah.
Yep.
Yep.
Okay.
Good to know.
So what a total system is going to cost you 400 for the board, a hundred ish for the CPU
and then what 150 for 32 gigs of RAM?
You can get unbuffered UDIMs.
So I'd probably budget closer to 200 for the RAM and get unbuffered ECC.
Okay.
That's not bad though.
That's a lot of performance for that money.
And that would be a solid box.
Yeah.
And I think your idle current consumption on that, if you've got a good power supply,
would probably be around 65 Watts.
That's not bad at all.
Very good.
Yeah.
All right.
I want to go build one of those.
So that's good.
Add that to the pile.
Yeah.
Add that to the list of shame.
I can give you a poor man's IPMI and that is a serial port.
So here's the project for you.
Maybe we can do a video on this because I already got all the stuff to do this.
I just got to document it.
Okay.
So Raspberry Pi zero or regular Raspberry Pi if you want.
The GPIO pin is wired into reset RS232 is connected to the RS232 on the host machine.
The Raspberry Pi is available on a separate network or the same network depending on whatever
you want to do.
So the Raspberry Pi has enough wherewithal to reset the machine and it will at least
get you to grub.
So you can get grub on the serial terminal and do whatever you need to do as far as manipulating
or booting the machine.
That's a really great idea.
Can you mount ISOs that way?
Is that a thing you can do?
If you wanted to do ISOs, you can't do ISOs over the serial port.
What you do there is you put a USB stick in your computer that already has everything
that you need to recover or if your motherboard has like one of those onboard micro SD cards.
Not bootable, but you put that or bootable if you want, but you put that in there that
has that stuff that you need on it already and then you hardwire the BIOS to only boot
from the built-in hard drive and not consider other options.
And then from the grub prompt, you can specify the other partition on the USB stick and use
that as a recovery.
I can see it now.
I'm ringing my wife when I'm at work.
Hey, wife, I've forgotten to plug my USB stick in.
Please go and plug it in.
Thank you.
Yeah, it's not as good as an ASPEED 2500, but for, you know, $15, it's not bad.
And it retrofits to any board with a serial port.
Yeah.
Yeah, you should do a video on that.
I think people would love that.
That's a great idea.
Alex, is there anything else on our list today?
Well, when we went to see you, Wendell, I swear you talked a little bit about a Bluetooth
low-energy presence detection beacon.
I finished that.
There's a write-up of that on the forum and I haven't released the video, but probably
by the time this is out, I will have released it.
Forgetfulness is the only reason that I haven't released it, but that's on the Linux channel
and there's a write-up on the forum.
It's Bluetooth low-energy presence detection for like your house or whatever.
And this is really the only Internet of Things stuff that I get into that is like genuinely
like super useful because it's like, okay, if I'm in the workshop, I want some certain
things to happen automatically, and if I leave the workshop and go into the house, whatever,
and the Wi-Fi is not good enough, and Wi-Fi also is like, oh, I'm outside, and it's like,
you're inside.
It's like, I'm really not, but okay, that's fine.
So it would be nice if when I'm outside, the outside lights are on, and if I'm inside,
it doesn't care about the state of the outside lights.
So the logic there is very simple.
It's like if outside and outside lights are not on, turn on outside lights, but if inside
don't care about outside lights.
If they're on, leave them on.
If they're off, turn them off, or leave them off, but don't mess with the state of it.
If I transition from inside to outside, turn them on.
If I transition from not there to outside, turn them on.
If I transition from not there to inside, it's probably fine to leave them alone.
So Bluetooth low-energy works better for that in my experience than Wi-Fi and pretty much
every other technology that I've tried.
And so are you just carrying your phone in your pocket and it's picking that up, or do
you carry a special...
No, just...
There's no special tiles or anything you need to carry?
No, you can.
The tiles do actually work a little better than the phone because sometimes the phone
puts the Bluetooth thing to sleep to save power, but generally the phone works fine.
They do track people going through shopping centers and shopping malls and stuff using
these Bluetooth beacons.
Cruise ships use a lot of them as well, airports.
So this stuff is being used commercially, so we may as well make use of it at home,
right?
Yeah.
And you can combine stuff like that.
I love the idea of it being Bluetooth LE because you're right, that is going to work better
than Wi-Fi and you can put it all around your house.
The other thing that I've done around the studio, I've got one that I'll show it to
you guys.
It's right here.
I have these little NFC tags around the studio and when I go into an area, I put my phone
on that NFC tag and then it triggers a Home Assistant automation for me for that area.
I like the idea of supplementing location awareness from Bluetooth with these tags too
for manual overrides and whatnot.
I just want to put one in my mailbox to know when the mailman comes.
When you start to think in terms of Bluetooth low energy tags or even just QR codes, like
printed QR codes, suppose that there was no effort at all involved.
It's like I'm in the kitchen, it's like, oh, it's grocery shopping day, what all do I need?
You just open the pantry and there's a sticker on the inside of the door.
If you can effortlessly take out your phone, hey phone, it's grocery store day, but the
abbreviated way to say, hey phone, it's grocery store day, not even tapping an icon or finding
the app among the thousands and thousands of apps on the phone with the completely stupid
user interface of scroll, scroll, scroll, scroll, scroll.
It's just like I've opened the pantry, phone, look at this, it's like, oh, it must be grocery
day.
Correct phone, let's go down the checklist of things that I usually buy.
Yeah, the one that I just did recently is I exit out the studio, I tap that with the
phone and it sends a text message to the wife with an estimated time of arrival and then
it waits five minutes and then it brings up Waze and my podcast player.
And that's just all.
So that way I'm down the road and I'm clear of the Wi-Fi network so I don't have to wait
for the phone to figure out the Wi-Fi network versus LTE network, I'm clear of that and
then those other apps open up and they have a data connection and it kicks off just fine.
Imagine a Bluetooth low energy beacon when you're sitting at your couch in front of your
big screen TV and you just touch your phone to the thing and then you're in Plex and it's
like not only are you in Plex, but you're in Plex controlling the giant TV.
You didn't have to fiddle with finding the app and cast to this and the other thing,
it literally is just, it knows.
Damn you Wendell.
I haven't done that, I've tried to set that up and it turns out that's actually kind of
a hard problem, but that's because we're using rocks and sticks to try to bang out these
human interfaces and we really need somebody to come along and just set all this garbage
on fire and start over.
Yeah, it does feel a lot like a stone age sometimes, like we humans are still the critical
translation layer and sometimes not so perfect.
I although think we have a theme here gentlemen and it's essentially automate whatever you
can really, that's what the theme is here.
Yeah, has been throughout the show I guess, hasn't it?
The subtext of that for me is can you do this in such a way that it is unlikely to bother
you at least for years and years into the future?
Like can I set this thing up so that it works and is largely automated and I just don't
have to worry about it anymore?
And I could see at some point, because the Amazon grocery delivery thing in my area has
gotten to the point where I really want to take some time off and build an interface
for like a Kroger, Walmart, and Meyer, and Amazon and just have them all fighting with
each other for my API grocery list.
And I don't want to buy everything from the API because I really do like to walk around
the produce section and the bakery and like hand pick a few things.
But in terms of like grocery procurement, I would really like to have an application
that is, hey, if you buy two extra cartons of Charmin this week, it's going to be 15%
less overall and it's like, great, make it so AI that's handling that for me.
Yes.
I would love that.
Yeah.
I just have all of that be handled.
But the fact that you have three different grocery APIs that you can interface with,
you literally can leverage that.
And if enough people do that, it's going to be a race to the bottom and it's going to
be glorious in terms of pricing.
Probably bad in terms of local businesses, but probably good in terms of consumer pricing.
Should we approve Wendell's time off request for that?
Yeah, I'll approve that.
Yeah.
As long as we get early access.
Well, that's probably it for us today, isn't it, Alex?
Yeah, I think so.
So thanks very much for listening.
You can find us on Twitter at self-hosted show.
And of course, self-hosted.show is the website, self-hosted.show slash subscribe for all the
ways to get new episodes.
And Wendell, give the people a way to catch what you do.
Youtube.com slash level one techs or level one techs.com.
And definitely, I'm looking for volunteers to build the AI hotel from Altered Carbon.
I've got two Tesla V100s we can load into that AI and so it's just start doing all this
stuff for us.
And it's like, great, sounds good.
Let's do it.
Of course you are.
Why wouldn't you be looking to do that?
I think it's a great idea.
Yeah, do go and check those forums out over on the level one techs site.
They are a font of wonderful, wonderful information.
And if nothing else, you can 3D print feet that you can't use on anything except fractal
cases.
And so thanks for listening.
That was self-hosted episode 14.
