WEBVTT

00:00.000 --> 00:03.440
we were getting ready to start the show. And it kind of took like a philosophical angle. And I

00:03.440 --> 00:08.080
said, hold on, save it for the show, Alex. You said you've come to a life decision.

00:08.080 --> 00:10.160
So I think we should all prepare ourselves here on the show.

00:10.800 --> 00:15.760
Well, a little bit. Yeah. I mean, we spoke to Matt as part of the Adventurous Way YouTube channel

00:15.760 --> 00:21.120
a few episodes ago, and I've been watching his progress on his Vermont property about building

00:21.120 --> 00:25.440
itself, building his house and everything like that. And, you know, I'm living in a very nice

00:25.440 --> 00:31.360
house in suburbia in Raleigh. It's very nice. On paper, I have no reason not to like this house,

00:31.920 --> 00:37.520
except for the fact that at least once a week, I get woken up by my neighbor's lawn crew at like

00:37.520 --> 00:43.760
seven, seven 30 a.m. Such a first world problem. But when you work from home and stuff like that,

00:43.760 --> 00:49.280
like, legitimately, I'm not always awake at that time, even with, you know, barely a one year old.

00:49.280 --> 00:54.080
I mean, she does wake up often before that. But just the amount I don't think I'd really

00:54.080 --> 01:00.160
appreciate it before I moved to suburbia, just how much yard work people do. Leaf blowers are

01:01.360 --> 01:04.400
I'm developing a pathological hatred of them. Let's put it that way.

01:04.960 --> 01:10.560
Boy, I got to say, I don't think I've been I don't think I've been happier to hear something

01:10.560 --> 01:15.840
in a long time because I thought I was the only one and I kind of felt like a crazy person. No,

01:15.840 --> 01:20.480
man, it's the worst. And when you're trying to record podcasts on a daily basis, I don't know

01:20.480 --> 01:27.680
what it is, but it's like it's like people have gotten tool crazy and there's a competition in

01:27.680 --> 01:33.280
my neighborhood to have like the loudest, most powerful, most gas powered tool possible to do

01:33.280 --> 01:40.000
the job. It's those two stroke engines. And I know that even if we do move somewhere else and

01:40.000 --> 01:45.040
this is the decision that we've come to is that we're probably some point next year going to look

01:45.040 --> 01:51.680
towards buying a piece of land, maybe in the Appalachians somewhere, although that's totally

01:51.680 --> 01:56.400
up for debate. But the decision we've come to is that in order to facilitate the land purchase,

01:57.120 --> 02:00.960
we're going to buy an RV. Oh, I thought you're going to say Bitcoin.

02:06.000 --> 02:10.000
Oh, I see. Like you're going to do like a tour, a land tour. Well, this is it. You know,

02:10.000 --> 02:13.520
the Appalachians, the bit we want to live in anyway, is probably that right at the southern

02:13.520 --> 02:19.440
tip, sort of Knoxville, Atlanta, that sort of that sort of side, you know, not too far from

02:19.440 --> 02:25.120
the tail of the dragon, actually. And that's five, six hours drive from here. So if we wanted

02:25.120 --> 02:30.240
to go and look at a piece of land that just came on the market, say, you know, that is a long day's

02:30.240 --> 02:36.560
driving. Whereas if we had a van, we could park it down that that neck of the woods, leave it down

02:36.560 --> 02:40.880
there. And then we don't need to worry about hotels. We don't need to worry about all sorts

02:40.880 --> 02:45.840
of stuff. And then if and when we do buy the piece of land, we've got somewhere we can actually park

02:45.840 --> 02:50.720
the RV and kind of stay a bit off grid and all that kind of stuff really is what we're thinking.

02:50.720 --> 02:56.400
So, you know, I like it because you are a work from home guy. And and what work from home really

02:56.400 --> 03:02.000
means is work online. And so, you know, one of the things we could totally do is deck your van

03:02.000 --> 03:07.600
out or whatever it is with a solid internet connection and good Wi-Fi, because, man,

03:07.600 --> 03:12.880
if that's not an area that I that I haven't spent years figuring out now,

03:12.880 --> 03:16.080
I feel like I could launch a consulting business just on mobile connectivity,

03:16.080 --> 03:19.760
but we could totally get your rig dialed in and then you could work from the road

03:20.480 --> 03:24.400
and, you know, kind of make that kind of thing a little more doable so you don't have to take

03:24.400 --> 03:27.920
vacation all the time when you're doing it, too. Well, that's just it. Yeah, we're not looking for

03:27.920 --> 03:34.320
like a lady dupe size type thing, you know, like a huge bus type thing, but maybe a class C or

03:34.320 --> 03:38.080
something like that. Like in England, it would be called like a camper van or something, not like

03:38.080 --> 03:43.840
a sprinter size at the next size up, you know, medium size. So we could still drive it into

03:43.840 --> 03:48.560
national parks and stuff like that in the future if we wanted to, you know, not take up half the

03:48.560 --> 03:54.000
parking lot. I'll tell you what, you might want to get in the Starlink queue now. Yeah, that's what

03:54.000 --> 04:00.240
I'm hearing. It sounds pretty bad. I'm pretty grateful I got it when I did. And then not only

04:00.240 --> 04:05.120
not only am I grateful that I got in the queue when I did for Starlink, but did you see that

04:05.120 --> 04:11.360
they updated the Starlink dish and now it it is smaller and I suspect uses less power, which

04:11.360 --> 04:16.880
sounds really nice, but it doesn't come with built in Ethernet anymore. That's like a it's

04:16.880 --> 04:22.880
an additional purchase and I think it might even be like a USB Ethernet deal now. So how does that

04:22.880 --> 04:28.720
work? Isn't the whole point that it just plugged into a firewall or some description? I mean,

04:28.720 --> 04:35.520
that's what made it huge for me, right? Because I'm a Starlink is one of four different simultaneous

04:35.520 --> 04:40.000
possible Internet connections that I have. And so being able to manage that in one router is very

04:40.000 --> 04:45.280
nice for. Yeah, you have four different Internet connections. I'm counting a Wi-Fi connection with

04:45.280 --> 04:50.240
that. But yeah, but that is true. That's pretty baller. It doesn't mean they're all none of them

04:50.240 --> 04:56.480
are faster. That's I have sometimes played around with combining all of them, but weakest link and

04:56.480 --> 05:01.440
all that. But you know what I mean? Like it is really nice to just I run Ethernet from the back

05:01.440 --> 05:09.920
of Dishi right into my Pepway. And for me, that is that was such a nice thing for me that they

05:09.920 --> 05:16.800
that they did that because essentially that means that dish. Is not only doing all of the work of

05:16.800 --> 05:22.880
connecting to the Starlink network. But it's also doing the DHCP relay. It's like it's doing the

05:22.880 --> 05:29.360
modem business, too, and their router, while a pretty good little router. That ran open WRT

05:30.400 --> 05:35.520
is is actually unnecessary unless you don't have a firewall already, but now they've made that

05:35.520 --> 05:40.320
little router necessary. So there's one more component and I would not be able to manage it

05:40.320 --> 05:45.760
as well. So I'm glad I got it from that from that point, too, but I do worry it means when they do

05:45.760 --> 05:52.720
finally release their mobile RV slash boat dish, which they are working on, they'll probably have

05:52.720 --> 05:58.640
a similar setup, which is probably what I'll have to switch to. Well, I'll buy the V1 stuff off you.

05:58.640 --> 06:05.200
There you go. There you go. You heard it right here. Hey. All right. So you text me during the

06:05.200 --> 06:12.480
week and I was I was out doing stuff and I got a text saying, hey, hey, Alex, hey, hey, hey, Alex,

06:12.480 --> 06:17.760
a hedge doc is down. You know, that's what we use for all of our internal show notes and stuff like

06:17.760 --> 06:23.200
that to collaborate. And you were just warming up to record lap when it is Tuesday morning here in

06:23.200 --> 06:27.840
the Pacific Northwest. Busy morning for us. And of course, that's always the worst time to have

06:27.840 --> 06:32.480
something go down. Right. Because everybody's coming online here. Wes and Brent and I are all

06:32.480 --> 06:37.600
kind of getting online in the morning and we're looking at the doc and it's not working. And

06:38.320 --> 06:43.360
this happens when you self host things. I mean, it's nothing's 100 percent when you use a service

06:43.360 --> 06:48.960
that is hosted by a company either. Because, you know, when you think about it, all they're doing

06:48.960 --> 06:54.320
is self hosting it, just perhaps, you know, putting a bit of a veneer in front of it for you.

06:54.880 --> 07:00.320
And you would hope some standards and good practices and good organization behind the

07:00.320 --> 07:08.480
scenes. Maybe. I don't know. I suppose. Yeah. You hope they have some infrastructure as code

07:08.480 --> 07:14.880
and you hope they have a support system. I have all those things. You know, I am your SRE in

07:14.880 --> 07:20.560
effect. And it still happened. Yeah. So what happened was we use on the node. We have an

07:20.560 --> 07:26.720
external disk which I formatted to ZFS so that I can do all the remote replications from the cloud

07:26.720 --> 07:31.120
of all the databases and stuff, backing up things like hedge doc and the pastebin that we use and

07:31.120 --> 07:36.880
all the other self hosted stuff that's on that server. It comes back to my my disk. So I do

07:36.880 --> 07:43.600
replication with ZFS. Turned out for some reason, my Gmail password that was doing the notifications

07:43.600 --> 07:49.680
of disk being full had stopped working and I hadn't noticed. And so I logged in to have a look

07:49.680 --> 07:55.120
at this disk on my phone via tail scale, by the way, that was a huge, huge boon for tail scale.

07:55.120 --> 08:00.160
Like I hadn't set up the wire guard profiles on my phone after downgrading it to Android 10. I

08:00.160 --> 08:04.640
talked about in the last episode and I was like, oh, no, how do I get access to this box? And

08:04.640 --> 08:10.880
the tail scale saved the day. So anyway, the ZFS drive was full. So in the end, it was a simple

08:10.880 --> 08:16.240
matter of logging into the Linode web interface, adding an extra 50 gig to that disk, which is just

08:16.240 --> 08:21.920
so easy. I mean, I did it on my phone in, you know, I was watching my daughter in the tumble gym

08:22.960 --> 08:28.080
through the glass. And I was trying to do it all on like juice SSH trying to do all these, you know,

08:28.080 --> 08:33.200
extends FS, blah, blah, blah, blah, blah. And, you know, in the end, I sat down with a real keyboard

08:33.200 --> 08:38.640
at home and 15 minutes later, the problem was solved. But let that be a lesson, kids. You've

08:38.640 --> 08:45.120
got to set up monitoring, alerting, but also monitor your monitoring because if that ain't

08:45.120 --> 08:49.600
working, if your alerting isn't working, then you're going to get a text from an angry Chris.

08:50.160 --> 08:54.560
It's funny that like a couple of outages that we've talked about on the show, both were like

08:54.560 --> 09:00.880
Google account related. That's not lost on me. That's kind of interesting. But the other thing

09:00.880 --> 09:05.040
that I've been thinking is like, I wonder if we could convert the back end storage for HedgeDock

09:05.040 --> 09:09.760
to object storage. That's what we've done with a couple of other things like next cloud. And the

09:09.760 --> 09:18.880
only downside is you got to watch your disk usage because it'll just grow and grow and grow. And

09:18.880 --> 09:22.560
the great thing is object storage will just grow and grow with it. But you don't want it to get

09:22.560 --> 09:27.120
out of control because that could raise the cost. So there's but, you know, we're talking markdown

09:27.120 --> 09:33.360
documents when it comes to HedgeDock. So you wonder there a little bit. But yeah, and we do

09:33.360 --> 09:37.600
kind of take note. OK, yep, that's one more thing we need to add to the monitoring setup. OK, yeah,

09:37.600 --> 09:44.480
we missed that one. You know, we were we were able to actually scramble and just use the public

09:44.480 --> 09:50.400
instance of HedgeDock. I realized like, well, I guess I guess I could go use that. And by the way,

09:50.400 --> 09:55.600
if you're not using HedgeDock and you you like the collaborative editing features of Google Docs,

09:55.600 --> 10:01.280
but like something that does markdown, man, as a team, do we just use the crap. It's so solid as

10:01.280 --> 10:06.880
well. I mean, there was nothing wrong with the app. It was just out of disk space. Yeah, I have

10:06.880 --> 10:11.760
been on the other side. I haven't really had an outage so much. I mean, you could chalk this up.

10:11.760 --> 10:16.960
This is truly maybe a bit of self-hosting regret. Like out of all the things I've self-hosted

10:16.960 --> 10:22.160
recently, I pretty much feel like they were all a solid decision except for Matrix,

10:22.160 --> 10:30.480
specifically the Synapse server. And I think that if I was just setting up a Matrix server

10:30.960 --> 10:40.160
for the J.B. team. Or like my family or friends or a small project, it would be problem free,

10:40.160 --> 10:47.440
practically, man, it'd be really easy. But that's not what I did. I set up with, of course,

10:47.440 --> 10:53.600
the help of Wes, a Matrix server for the Jupiter Broadcasting community at Colony.JupiterBroadcasting.com.

10:54.560 --> 11:04.800
So Matrix is this new open source implementation of. Well, gosh, it's hard to explain because

11:04.800 --> 11:09.680
Matrix itself is not a chat. It has chat clients like we have web clients, right? So there's

11:09.680 --> 11:15.440
Element, which is a Matrix client. And in the Element Matrix client, it's a lot like Discord

11:15.440 --> 11:24.720
or Slack. If you're familiar with those kinds of group chats or IRC of days gone, but a little

11:24.720 --> 11:29.440
more, a little more modern with a lot of the inline chat features that people expect. And

11:29.440 --> 11:33.680
on top of that, there's other features like VoIP calling and file transfer and all kinds

11:33.680 --> 11:37.840
of things. Matrix itself is a protocol with a series of functionalities. I mean, you could use

11:37.840 --> 11:42.720
Matrix. It's a big thing though, isn't it, is that it's decentralized. Yes, and it's federated. So

11:42.720 --> 11:48.720
there's a Matrix.org server. We have a Colony.JupiterBroadcasting.com server. There's a Fedora server.

11:48.720 --> 11:54.400
There's a GNOME server, much like you'd have your own IRC server. You can run your own Matrix server,

11:54.400 --> 11:59.760
much like we have a Discord server, right? But that Discord server runs on Discord systems and

11:59.760 --> 12:05.200
it's managed by Discord. The difference with Matrix is you get all that Discord like functionality,

12:05.200 --> 12:15.760
but you host it, you run it. But a federated chat system like this is no small task because it has

12:15.760 --> 12:20.000
to be aware of what the rest of the federation is doing. You have to have user accounts that can

12:20.000 --> 12:26.400
exist on both systems. And what ends up getting exposed is a lot of paper cuts for managing the

12:26.400 --> 12:32.240
system. Like here's an example of just what happened this morning. And this isn't a big deal,

12:32.240 --> 12:36.320
right? But this is just what happened this morning. I got a message saying, hey, Chris,

12:36.320 --> 12:41.600
I noticed that the logo image, the PNG that you're using for your Matrix space,

12:43.280 --> 12:49.840
it's too large for some servers. And so we're getting reports that your logo isn't displaying

12:49.840 --> 12:58.000
for a fair amount of users. And, you know, that's like, oh, OK, well, I guess I'll upload a smaller

12:58.000 --> 13:02.640
image, right? But there's really no standard there. Different clients have been different

13:02.640 --> 13:10.160
restrictions. Servers have different restrictions. And it's a great example of a daily little task

13:10.160 --> 13:14.400
you have to do, like some little small tweak or adjustment to participate in the wider Matrix

13:14.400 --> 13:20.240
community that probably should just be handled by software. Like I should be able to upload a five

13:20.240 --> 13:26.240
megabyte PNG and server side software resizes it. And maybe it resizes it into three different

13:26.240 --> 13:32.400
sizes that are common sizes, right? Or it says it kicks back an error message on the client.

13:32.400 --> 13:39.120
And it says, hey, man, upload a smaller picture. Here is some suggested file sizes. But you get

13:39.120 --> 13:44.000
none of that. What you get is you upload a picture. Turns out that picture is too large.

13:44.000 --> 13:48.960
What's the appropriate size? Don't know. Just depends on what different people have said. So,

13:48.960 --> 13:53.920
you know, take a good guess and then just find out it doesn't work and then go back and fix it.

13:53.920 --> 13:59.600
And it's just sort of this unrefined paper cut experience. And it's a thousand different examples

13:59.600 --> 14:07.680
of that. And even with a team of moderators, Wes and myself, I still get I get looped into like

14:07.680 --> 14:11.840
daily jobs to take care of. And some I've been postponing now for weeks because I just don't

14:11.840 --> 14:19.120
have time. Meanwhile, we have three different Discord instances out there. You know, the self

14:19.120 --> 14:24.240
hosted one, there's a JB one, there's an unfiltered one. And I probably I probably have to do two

14:24.240 --> 14:28.640
things a year with those instances. Right. I mean, the same thing there. We have some community

14:28.640 --> 14:34.560
moderators and folks like yourself, Alex, that are involved. But in terms of like my involvement,

14:34.560 --> 14:41.280
it's like two things a year for each instance where with Matrix, it's damn near daily. And that

14:41.280 --> 14:47.600
really just doesn't scale very well. And it clearly is an ongoing server maintenance task as well,

14:47.600 --> 14:50.960
because there's quite a bit of storage that we were constantly compensating for because

14:51.520 --> 14:56.720
we have to store images and videos and stuff that people upload and chat logs and all of that and

14:56.720 --> 15:01.040
storage or whatever it might be. The Synapse server itself is under frequent development. So

15:01.040 --> 15:05.280
even like right now, I need an update. I just updated it last week. There's an update right

15:05.280 --> 15:10.320
now for it. Right. Not a big deal. In fact, it's been really smooth. It hasn't kicked out any

15:10.320 --> 15:14.880
problems. And we have it all in Docker containers. And the upgrade has always gone really well to

15:14.880 --> 15:20.480
its credit. And there are server side tools to help minimize the database and whatnot. But again,

15:20.480 --> 15:25.680
you have to go employ those tools yourself on the command line manually. And it's just

15:25.680 --> 15:34.240
disheartening because as a self-hosting advocate, it's so clear to me now that I've been running

15:34.240 --> 15:40.240
Matrix for a little while, a Synapse server, that it is exponentially simpler to just go the

15:40.240 --> 15:46.880
Discord or Slack route than it is the Matrix route. And when the core functionality of what

15:46.880 --> 15:51.280
you're looking for is just an ability for you and your community to communicate, it's so much

15:51.280 --> 15:57.360
simpler to use something else besides Matrix. And I hate saying that because I want the free

15:57.360 --> 16:01.920
software, new standard thing to win. And I love that you can run your own and it's federated.

16:02.480 --> 16:08.480
So I think what my advice would be for people out there that want to self-host a Matrix instance,

16:08.480 --> 16:14.240
is most of the time what you want is something small for your team that uses your domain name.

16:14.240 --> 16:19.200
Don't open it up to the world. For people that want to participate with you, but don't yet have

16:19.200 --> 16:24.000
a Matrix account, have them just sign up at matrix.org. That's what I should have done.

16:24.000 --> 16:30.240
I should have set up a Matrix server with a small team, just the JB team. And then all the rest of

16:30.240 --> 16:33.680
the community just went out and got matrix.org, got accounts anywhere else they wanted, like they

16:33.680 --> 16:38.720
could already, or their own Matrix server. Instead, we opened it up to the world because

16:38.720 --> 16:44.400
I wanted to make it easier for the audience. And in doing so, we created something that has nearly

16:44.400 --> 16:50.800
daily maintenance tasks required. And I mean, just not everybody wants to sign up for that.

16:50.800 --> 16:54.880
Thankfully, we are willing to participate in that because, again, I think this is an important

16:54.880 --> 16:58.880
thing. And I really think it's something like some projects could manage or companies could

16:58.880 --> 17:04.640
easily manage. And there are hosted solutions out there as well. But I do regret the way we deployed

17:04.640 --> 17:09.120
it. Looking back at it, the jupyterbroadcasting.com Matrix server should have just been for

17:09.120 --> 17:15.280
jupyterbroadcasting.com staff. And then we would just connect using the federation system and have

17:15.280 --> 17:19.040
everybody else participate. Because we already have people from all different kinds of servers,

17:19.040 --> 17:24.960
their own, self-hosted, or hosted, and they're participating in our chat room. And I could have

17:24.960 --> 17:29.280
just done that for everything. I'm not going to reverse course now. And I still appreciate the

17:29.280 --> 17:35.840
ability to learn from it. But I do have some regrets. I think you just highlighted the exact

17:35.840 --> 17:44.320
reason why I went with Discord. It was a bit of a dictatorship style decision that we took to say,

17:44.320 --> 17:49.040
right, this is the self-hosted podcast, and yet we're going to make that compromise and go for

17:49.040 --> 17:55.280
Discord. But I think you've just articulated very, very clearly that we made the right call

17:55.280 --> 18:01.200
with that server. As I mentioned at the beginning of the show, we had an outage with some of our

18:01.200 --> 18:05.200
production infrastructure that we used to make the shows this week. And the last thing I really want

18:05.200 --> 18:12.080
to be doing is futzing around with that stuff when it's not a planned situation. An outage or

18:12.080 --> 18:16.880
something like that. And if JB's primary audience communication community platform,

18:16.880 --> 18:23.120
for the show is down, shows are down, then who's got to get out of bed and fix it? It'd be one of

18:23.120 --> 18:31.200
us, me, you, Wes, somebody like that. There's nobody else to do that work. So I just, at the

18:31.200 --> 18:38.880
end of the day, we are making podcasts. We aren't necessarily system admins. And it's just a

18:38.880 --> 18:42.640
compromise. It's not a perfect situation. And I think you've just hit the nail on the head.

18:42.640 --> 18:52.720
But on a happier note, Linux Unplugged 4.33, you, Wes, and Brent covered Jellyfin. And I'm sorry I

18:52.720 --> 18:56.400
couldn't make it that day. There was just a lot going on with work and stuff like that. And it's

18:56.400 --> 19:02.400
during the day for me, so I couldn't make it. But I have been trying Jellyfin for the last couple

19:02.400 --> 19:09.760
of weeks. And I've got to say, it's really come a very, very long way. So thank you very much for

19:09.760 --> 19:15.280
putting that episode out. And anybody in the audience that is a Plex diehard, like I am,

19:15.280 --> 19:21.120
really, and has dismissed Jellyfin as not being fit for purpose, if you haven't looked at it in

19:21.120 --> 19:25.280
at least a year, I would strongly suggest that you do because it's come a very long way,

19:25.280 --> 19:30.160
particularly stuff like the Android TV client. It's not perfect. I've had a few crashes, a few

19:30.160 --> 19:35.680
stutters here and there. But on the whole, I would say for people like me who are willing to put up

19:35.680 --> 19:42.320
with that stuff, Jellyfin's pretty much there. So LinuxUnplugged.com slash 433 to go and hear what

19:42.320 --> 19:44.000
the rest of the team think about that one.

19:44.000 --> 19:51.680
Linode.com slash SSH. Go there to get $100 in 60 day credit on a new account. And you go there

19:51.680 --> 19:56.240
to support this here show. Linode is fast and reliable cloud hosting. You've got to try it,

19:56.240 --> 20:01.520
maybe for your next project or use it as a research and development lab like I have been this week.

20:01.520 --> 20:07.440
And honestly, Linode, you got me because of the performance. I mean, when I first started using

20:07.440 --> 20:12.800
Linux before they were a sponsor, I didn't have like an obligation or a sense of like, I got to

20:12.800 --> 20:17.680
do it here. No, it was just I chose Linode because I compared it to other things and they had the

20:17.680 --> 20:22.880
best performance and the best prices and the best dashboard. Now it turns out they also have the

20:22.880 --> 20:29.200
best customer service and they love the technology all of this is built on. So that sort of permeates

20:29.200 --> 20:34.560
the company culture. That's stuff I've learned now a couple of years later. It's really great

20:34.560 --> 20:39.920
to to watch Linode go. They've been doing this for 18 years and they are not staying still.

20:39.920 --> 20:46.640
They have been rolling out PCIe MVME storage and it is a game changer for certain types of

20:46.640 --> 20:52.400
applications. If you think yours might be one of them, like a database or maybe an e-commerce site,

20:52.400 --> 20:57.520
something that needs a lot of access to the disk, simultaneous connections, that kind of stuff,

20:57.520 --> 21:04.080
MVME can be so great. Way more IOPS per gigabyte than traditional storage. So if you're a

21:04.080 --> 21:07.920
performance hound or you've got an application that you think could really take advantage

21:07.920 --> 21:14.160
of Linode's new storage, go to linode.com slash ssh and sign up. Get that $100 credit and now you're

21:14.160 --> 21:18.720
a customer. Contact their customer support and start working with them on MVME storage options.

21:18.720 --> 21:23.840
See what makes the most sense for your application. They have absolute experts there that can help

21:23.840 --> 21:27.760
you figure this stuff out. And they have 11 data centers around the world. You're going to find

21:27.760 --> 21:32.880
something that's near you, your friends, your family, or your customers. And they are their own

21:32.880 --> 21:36.960
ISP. So the nice thing there is if you want to have something in multiple different data centers,

21:36.960 --> 21:42.880
the connection between those data centers is screaming fast. Every single time I have a Linode

21:42.880 --> 21:49.040
system and I do a system update, I just am so thrilled at the experience of downloading packages

21:49.040 --> 21:54.560
because they do it locally. They cache the packages there. It downloads so fast, my terminal can

21:54.560 --> 22:00.320
hardly keep up with the package updates flying by my screen. That kind of stuff, I just love it. And

22:00.320 --> 22:05.360
they're just really simple to use too. Like you can go get something up and going like the new

22:05.360 --> 22:11.840
next cloud release in like minutes. It's kind of ridiculous, really, considering how long it used

22:11.840 --> 22:17.280
to take. Take it back in my day. Or you can do it all yourself. Then you can go to the next cloud

22:17.280 --> 22:20.560
or you can do it all yourself. Then you can kind of have the back in my day experience.

22:21.120 --> 22:26.160
Go learn something, go try it, maybe put it in production. Linode.com slash SSH.

22:28.800 --> 22:33.120
Time for a Docker segment then. I don't think we've talked too much about containers and Docker

22:33.120 --> 22:39.520
and that kind of stuff in a while. And you've been trying out Portainer. I just can't see the

22:39.520 --> 22:47.200
point of a Docker GUI, but can you? I started to get it. This comes in all the time. I tried

22:47.200 --> 22:53.040
two Docker GUIs this week actually. So my first one is Portainer. That's probably the most common

22:53.040 --> 22:58.080
one that we get an email about. Or something goes by in Discord maybe. I hear about Portainer all

22:58.080 --> 23:05.040
the time. And it clicked with me a little bit more this time, Alex. When I pointed Portainer

23:05.760 --> 23:12.720
at systems that I haven't been using in a while, like somebody else maintains them,

23:12.720 --> 23:18.320
and then I wanted to poke in and see what's going on. So from a discovering what's going on

23:19.120 --> 23:23.520
and that kind of stuff, Portainer was pretty neat. Now, if you're not familiar with Portainer,

23:23.520 --> 23:29.760
it is a web UI that sits on top of, it runs in Docker, and it sits on top of your Docker host,

23:29.760 --> 23:35.680
or it can connect to a remote Docker system, either via the Docker API or their Portainer

23:35.680 --> 23:42.640
agent, or just through direct Azure integration if that's your choice. And then what you get is

23:43.200 --> 23:50.640
a management GUI that's pretty sophisticated. And it substitutes some common Docker parlances like

23:50.640 --> 23:57.120
Docker compose files for Portainer stacks and things like that. And it gives you a way to

23:57.120 --> 24:03.040
visualize everything going on Docker wise on your system. And you can look at multiple systems. So

24:03.040 --> 24:06.960
that's one thing that's kind of nice is you can install Portainer like I did to my Compute Module

24:06.960 --> 24:14.320
4 on my OpenSUSE Dumbleweed install. And then I added other remote Docker hosts to that Portainer

24:14.320 --> 24:22.800
instance. And that's kind of nice, right? I like that. And I tried really hard to love it because

24:22.800 --> 24:31.120
I thought, boy, wouldn't it be neat to just bring all of the JB systems into one Portainer management

24:31.120 --> 24:37.040
instance and keep tabs on all of them. Because in total, I don't know, 30, 40 containers of

24:37.040 --> 24:44.320
different applications that we're running. I would say 70% of those are for behind the scenes

24:44.960 --> 24:55.520
software that we use to produce the shows, maybe 60%. And I don't know how diligent we are about

24:55.520 --> 25:00.240
staying on top of those updates. We are good about the public facing stuff, but not so good about the

25:00.240 --> 25:05.360
internal stuff. And so I kind of like the idea of just bringing it all under one management roof.

25:06.720 --> 25:11.920
But man, you know, Alex, and I don't know, I know you don't have the love for Portainer either,

25:11.920 --> 25:18.400
but I found it frustrating and tedious to use. You know, I have to say on my remote systems,

25:18.400 --> 25:23.280
I have to enable Docker swarm. I have to install their agent. You have to have Docker of a certain

25:23.280 --> 25:29.360
version. So immediately, that means some rail boxes are out. And I found the entire thing to

25:29.360 --> 25:37.920
just be about 15 layers of lacquer on top of something that I just didn't need anything.

25:38.720 --> 25:44.480
It was too complicated for what I need and also too restrictive at the same time. And it felt like

25:44.480 --> 25:49.920
a lot of fuss to get it up and going. And I don't really see it scaling out itself long-term without

25:49.920 --> 25:54.800
getting to like some paid version of Portainer, which I really have zero interest in doing.

25:54.800 --> 25:59.040
And so I found myself sort of hitting the walls of using it within the first couple of days.

25:59.040 --> 26:05.920
And I felt bad because we've gotten so many positive emails from the audience about it.

26:05.920 --> 26:10.480
I really wanted to love it. I thought I'd figured out my angle on it. And at the end of it, I thought,

26:10.480 --> 26:16.400
I'm not going to use this. I just don't like it. And I'm curious to know why it didn't stick for

26:16.400 --> 26:21.920
you. Well, they do offer a paid service. You know, their business model from the beginning has been

26:22.640 --> 26:27.440
their community edition is available for free. And then you have a business edition as well,

26:27.440 --> 26:32.000
which probably has extra Chrome or support or something on it. Yeah, there seems to be several

26:32.000 --> 26:37.440
features that are in the Portainer business only edition. But yeah, they have a community one that

26:37.440 --> 26:43.040
does allow unlimited nodes. I think I'm still biased against them because in the very early

26:43.040 --> 26:47.600
days of Linux server.io, I reached out to these guys and said, hey, you've got a whole bunch of

26:47.600 --> 26:54.240
templates. Why don't you feature our templates on your like template store thing? And eventually

26:54.240 --> 27:00.400
we worked with them and got the Linux server containers to show up in their official template

27:00.400 --> 27:06.480
store. And then they just went dead on us. They just went quiet on us for no real reason that I

27:06.480 --> 27:11.760
could ever discern and just quietly dropped support for all of our templates without telling us

27:11.760 --> 27:18.400
anything. So I wasn't best pleased with them after that. And after a, you know, a project or a company

27:18.400 --> 27:22.320
does something to burn you a bit like that, you know, they've got to go a long way to

27:22.320 --> 27:28.320
restore the goodwill and good faith. And for me, I don't necessarily find a huge amount of value

27:28.320 --> 27:35.760
in a Docker GUI anyway, because Compose does everything that I need to and some. Maybe that's

27:35.760 --> 27:40.560
just making me out to be a bit of a curmudgeon troglodytes. I don't know.

27:42.560 --> 27:43.600
Old man Alex.

27:43.600 --> 27:49.600
Yeah, maybe. But you know, at the end of the day, it all it's doing is adding complexity,

27:49.600 --> 27:53.200
you know, and this is true for a lot of GUIs, you know, Unraid is one of them, TrueNavScale is

27:53.200 --> 28:01.040
another, OpenMediaVault, Portainer, a lot of these things that you can use to self-host different

28:01.040 --> 28:07.600
services. You've got to learn their specific quirks and incantations of how that particular

28:07.600 --> 28:14.240
developer expected you to go through their particular UX flow. And if you don't follow that,

28:14.240 --> 28:18.400
you can very quickly end up in a situation where, oh, well, you should have just clicked this,

28:18.400 --> 28:23.920
you should have just checked, or you could have, well, I didn't, okay? And now it doesn't work.

28:23.920 --> 28:28.000
So, you know, the other angle is, it's not repeatable.

28:28.960 --> 28:32.480
So this is what I was going to ask you, it's like, aren't we kind of solving the wrong

28:32.480 --> 28:37.120
problem here with this? I mean, it's not to give you an opportunity for an Ansible rant, but

28:38.640 --> 28:40.720
shouldn't we be solving this from a different direction?

28:41.680 --> 28:47.440
Yeah, it's a solution looking for a problem, it really is. And you should have,

28:47.440 --> 28:50.960
and this is, I'm just going to go in the closet over there and get my soapbox,

28:52.400 --> 28:58.720
you should have all of your container definitions in a source control repository,

28:58.720 --> 29:02.640
some kind of version controlled Git repository, to be honest.

29:03.600 --> 29:07.920
There is no real reason why, even if all you're doing is just copying and pasting

29:07.920 --> 29:13.760
your Docker compose file from your system that you manually go in and edit once a week,

29:13.760 --> 29:19.040
once a month, whatever it is, and then just copy and paste that into GitHub and click save.

29:19.040 --> 29:25.040
There is no reason why you shouldn't be doing that. And that will get you 99% of the way towards

29:25.520 --> 29:32.240
doing what a lot of big companies do anyway. So, you know, I just look at Portainer and I lump it

29:32.240 --> 29:38.400
in with a lot of other GUIs and I think, what are you doing that I couldn't do myself? And the

29:38.400 --> 29:46.800
answer frequently is nothing. Let me see if this shifts your opinion. Alright, couldn't you make

29:46.800 --> 29:52.000
that same argument for open sense? Like, imagine somebody who's super familiar with firewalls and

29:52.000 --> 29:56.560
routing and all of that on Linux, like they just live and breathe it. They would probably look at

29:56.560 --> 30:00.400
a solution like open sense and go, yeah, it's kind of the same thing. That's my opinion. See,

30:00.880 --> 30:05.200
that's the perspective I was trying to take at it. Yeah, no, I totally agree. And it's for that

30:05.200 --> 30:12.400
reason that I separated out my DHCP and DNS whenever episode it was a few months ago onto a

30:12.400 --> 30:16.960
Raspberry Pi, which has been super solid and is living in version control. And now if I want to

30:16.960 --> 30:22.720
update a DHCP lease, I just go in and edit the file and my continuous integration deploys the

30:22.720 --> 30:26.960
stuff and off I go, you know, but that's not for everybody. You know, those skill sets, you know,

30:26.960 --> 30:33.440
they do require a bit of knowledge about how, you know, CI systems work and all the rest of it. But

30:33.440 --> 30:37.680
just editing a config file is pretty straightforward. And I think a lot of people would

30:37.680 --> 30:45.200
be kind of amazed at how simple something like IP tables actually is to, to operate if they just

30:45.200 --> 30:53.120
took the time to learn it. I just wonder if maybe the argument isn't spend that time learning

30:53.120 --> 31:02.800
something like, like GitHub and Git or Ansible or some system instead of spending the time learning

31:02.800 --> 31:09.360
Portainer. Not that Portainer is bad, but if you could learn some sort of configuration management

31:09.360 --> 31:14.880
where you could deploy your systems repeatedly and you could make a central change and then deploy

31:14.880 --> 31:20.880
that change. If you could take the time you spent learning Portainer and just learn how to properly

31:20.880 --> 31:27.360
utilize something like change control and change management with Git, that would be a skill set

31:27.360 --> 31:31.120
that would pay dividends for all your systems, right? And not just your Docker ones.

31:31.120 --> 31:36.080
And here's another benefit, which may or may not apply to you in your specific situation.

31:36.960 --> 31:45.120
But I wrote a role for Ansible that spits out a rendered Docker compose YAML file three,

31:45.120 --> 31:50.160
four years ago, just, just about when I was emigrating actually. And since then, I've been

31:50.160 --> 31:56.400
using that role almost daily to create new compose files, not just for my server, but for the servers

31:56.400 --> 32:02.960
I have in England, the service I manage for JB, the service I manage for other people. And so I've

32:02.960 --> 32:09.200
built essentially a self-hosting framework or a Docker compose kind of framework in Ansible.

32:09.920 --> 32:15.520
And so for me, if I were to spin up a new server, I just transpose that role to that specific task,

32:15.520 --> 32:19.920
insert my variables for that specific host. And I don't even have to think about all the other

32:19.920 --> 32:25.040
stuff that I've set up over the last three or four years. That's a given, that's done. I never have

32:25.040 --> 32:30.960
to think twice about what list of default packages I have on a specific box. Like I know that I've

32:30.960 --> 32:38.000
got HTOP, I know that I've got, you know, all these other things on there. And that just truly is the

32:38.000 --> 32:42.320
power of config management. I don't really expect to get onto config management in this

32:42.320 --> 32:50.000
conversation, but here we go anyway. So this isn't a specific rant against Portainer in particular,

32:50.800 --> 33:00.480
but more a rant about GUIs and non-repeatable UX flows and stuff like that. You know, if you have

33:00.480 --> 33:06.000
to click through a wizard to set something up and then you don't get a repeatable experience at the

33:06.000 --> 33:13.920
end of it, it's not for me. Backblaze.com slash SSH. Get peace of mind knowing your files are

33:13.920 --> 33:19.520
backed up securely in the cloud with Backblaze. You guys know Backblaze. Now go get a free trial,

33:19.520 --> 33:26.000
no credit card required, and support the show. Backblaze.com slash SSH. Unlimited computer

33:26.000 --> 33:31.360
backup for your Mac or your PCs for just $7 a month. Your documents, your music, your photos,

33:31.360 --> 33:36.000
your videos, your drawings, your projects, all of your data. And the nice thing is with Backblaze,

33:36.000 --> 33:40.640
you can restore your files anywhere. They have web restore, they have an app for restore,

33:41.440 --> 33:46.960
and if it's a lot of data, if you ever get in that position, they even have a restore by mail

33:46.960 --> 33:52.080
program. You purchase a hard drive, they'll overnight it via FedEx. After you restore it,

33:52.800 --> 33:58.640
you can return the hard drive for a refund. How great is that? And one of the things we've heard

33:58.640 --> 34:01.680
from the audience when they started trying out Backblaze is the mobile app is just a great way

34:01.680 --> 34:05.360
to get access to your files that you wouldn't normally have on quote unquote cloud storage,

34:06.000 --> 34:10.640
and they're stored there securely. In fact, over 50 billion files have been restored for Backblaze

34:10.640 --> 34:16.640
customers. How cool is that? So go get a fully featured, no credit card required trial at

34:16.640 --> 34:22.400
Backblaze.com slash SSH. Visit Backblaze.com slash SSH so they know you came from here,

34:22.400 --> 34:27.440
supporting the show, you know, all that kind of good stuff, and you get that 15 day free trial.

34:27.440 --> 34:32.480
That's nice, isn't it? You guys know Backblaze. Now it's a chance to try it out 15 days for free.

34:32.480 --> 34:36.800
Backblaze.com slash SSH. Go there, play around with it, and start protecting yourself from

34:36.800 --> 34:40.960
potential bad times. Start today at Backblaze.com slash SSH.

34:42.960 --> 34:46.960
All right, at the risk of my soapbox not quite being put away properly,

34:48.160 --> 34:52.320
there was another GUI appeared on Reddit. I think it was this morning or yesterday.

34:52.960 --> 34:54.800
Lazy Docker. Have you tried this one out?

34:54.800 --> 34:58.720
I had to after I saw it take off in the Discord. I saw somebody going on about it and I thought,

34:58.720 --> 35:05.200
let's go try it out because it's a simple Go app and it's a command line tool. So I put some

35:05.200 --> 35:11.680
screenshots in the show notes if you want to see it on my CM4. And well, let's see,

35:11.680 --> 35:16.640
where to go with this one. Alex, I actually kind of like Lazy Docker. First of all,

35:16.640 --> 35:21.120
you can also get it pretty easily on the Mac or Windows. It's in Chocolaty and it's in Brew.

35:21.120 --> 35:25.200
So that's really nice. And then, of course, if you're on GNU slash Linux, you just need to have

35:25.200 --> 35:33.520
Go installed and you just run the binary. And what you get is an Ncurses style clickable interface

35:33.520 --> 35:40.160
that lists your running services, containers, images, and volumes. And then so, for example,

35:40.160 --> 35:45.520
you could click if you have mouse support in your console or if you're SSH from a desktop

35:45.520 --> 35:53.840
that has a mouse, you click the running service, you can get your config information or you can get

35:53.840 --> 35:58.880
your Docker compose file or you can get process information or you can even get like a top style

35:58.880 --> 36:03.840
chart. I'm going to go and check this out. This looks really pretty cool, actually.

36:04.720 --> 36:09.600
Yeah, I actually thought it was not bad because it's so simple because most systems already have

36:09.600 --> 36:16.640
Go these days. You can just curl it right down to a box and run it. And what I got out of this that

36:16.640 --> 36:22.000
I was hoping to get with Portainer, but what really got it with Lazy Docker was it was a

36:22.000 --> 36:26.560
great way to jump on a system that I haven't been logged into for six to nine months and just get

36:26.560 --> 36:32.880
an overview of what's going on, where the Docker volumes are at, what processes are in there.

36:32.880 --> 36:38.720
And I have to say, when I did that, I discovered that one of the containers was constantly

36:38.720 --> 36:43.680
restarting every few minutes and I hadn't noticed because it had been up every time I connected to

36:43.680 --> 36:50.080
it and I wasn't actively looking at anything. I wasn't checking the logs for that container and I

36:50.080 --> 36:55.040
hadn't gone in and looked at that particular one. I just was on the box and got an overview.

36:55.040 --> 36:59.040
And thanks to Lazy Docker, I noticed that, oh, yeah, look at this one. This one's restarting

36:59.040 --> 37:04.000
every few minutes. Let's go see what's going on. And I could see the logs and everything right

37:04.000 --> 37:11.360
there. This is 100% the only use case for a GUI that makes sense to me. It's just that dashboard

37:11.360 --> 37:16.080
aspect. You can look at a graph, you can look at whatever, and it gives you just that big picture

37:16.080 --> 37:22.080
that a terminal kind of sort of sometimes gives you. But this has some nice extra features.

37:22.880 --> 37:26.000
Yeah. And you could do it over an SSH connection, which I really appreciate.

37:26.880 --> 37:31.920
Portainer, it's nice to be able to centralize everything and have it web-based and there is a

37:31.920 --> 37:38.800
time and a place for a web-based tool. But there's also a very important time and place for something

37:38.800 --> 37:44.480
that runs inside an SSH connection like you just recently did. Sometimes you just have SSH, you

37:44.480 --> 37:49.760
don't have a lot of options and you need it to be there on the command line. And that's what Lazy

37:49.760 --> 37:54.400
Docker did for me. And the fact that I discovered one of my containers was having an issue was just

37:54.400 --> 38:02.000
kind of a bonus. And it's a great way to reconnect or I guess what, re-associate yourself with what

38:02.000 --> 38:06.880
the hell's going on on a box if you haven't been on there in a little bit. I've got another one

38:06.880 --> 38:13.360
for you that is part of Docker actually. Just log into a box that's running a few containers and

38:13.360 --> 38:21.120
type docker stats. It's pretty much like htop or top, I suppose, for all of your containers.

38:21.120 --> 38:26.400
It will show you the name of the container, the CPU usage, the amount of memory that's being used,

38:26.400 --> 38:32.320
NetIO, BlockIO, all that kind of stuff. And also how many PIDs that particular container's created.

38:32.320 --> 38:38.000
So I can see for example here that Plex needs 140 PIDs within that container.

38:38.880 --> 38:43.280
Whereas say something like a SimpleEngineX container is like seven.

38:43.280 --> 38:52.720
Yeah. Oh, this is great. I'm looking right now. Oh my gosh. Some of these are such hogs.

38:53.600 --> 38:58.400
It's shocking how bad some of these are. The Java apps in particular. So the worst offender

38:58.400 --> 39:03.600
for me, I've got BookSonic running and I've actually used Docker Compose's spec to limit

39:03.600 --> 39:09.760
it to one gigabyte of RAM. So for those of you that don't know, BookSonic is an audiobook friendly

39:09.760 --> 39:17.840
version of the subsonic Java-based server that is now like a decade old or more. And this thing,

39:17.840 --> 39:25.840
it runs like a pig. I mean, it's using 900 megs of RAM to just sit there and do nothing.

39:29.440 --> 39:33.280
You know what we need is, do you remember like there was the, maybe you don't, this might have

39:33.280 --> 39:40.560
been before your time, Alex, but in the old init systems of Linux, of yore, there was like this

39:40.560 --> 39:50.000
Xynet D. And what it was is it was like this master process that would open a port on behalf

39:50.000 --> 39:56.320
of a service on your system, but to save resources, it would leave the service stopped until it

39:56.320 --> 40:01.600
received a connection on that port. And then it would start the service in the background

40:01.600 --> 40:06.080
and forward the connection and make it all transparent to the end client. So the first

40:06.080 --> 40:10.480
time maybe it would be slow for the end user, but their connection would get forwarded once

40:10.480 --> 40:13.520
the service came on and everything would connect from then on, it would be fast.

40:13.520 --> 40:17.120
And what we need is something like that for Docker containers, because I have a similar

40:17.120 --> 40:22.320
thing where I have containers that I use a couple of times a month, but they're running 24 seven.

40:23.360 --> 40:28.480
Yeah. I mean, for me, that's stuff like invoice Ninja that I use to invoice clients. You know,

40:28.480 --> 40:32.720
I do it on a batch once a month and then it's running for the entirety of the rest of the month

40:32.720 --> 40:38.640
and there's really no reason for that. So I'm sure there are projects out there to launch

40:38.640 --> 40:43.280
containers on demand. If you know of one, please let us know at self hosted dot show slash contact.

40:44.320 --> 40:54.560
I guess maybe we could wrap up our Docker dazzle, if you will, with a talk about dozzle and a couple

40:54.560 --> 40:58.960
of other things like the fact that Docker compose has some changes that come in. I mean, we could

40:58.960 --> 41:04.880
just make it a whole Docker extravaganza. I don't know. Maybe we start with dozzle dot dev.

41:05.520 --> 41:10.240
Yeah, this one's pretty great. Actually, it's a real time Docker container log viewer in the

41:10.240 --> 41:15.520
browser. It doesn't require anything terribly special apart from mounting the Docker socket.

41:15.520 --> 41:20.960
So usual provisos apply there in terms of security. You can mount it through a proxy.

41:20.960 --> 41:25.280
That's probably the safest way to do that. But essentially what it does is it lists all

41:25.280 --> 41:29.920
of your containers on the left hand side. It says you can see which ones are running,

41:30.800 --> 41:34.480
when their last restart was, all that kind of stuff. But then you just click on the container

41:34.480 --> 41:39.760
and it shows you the logs as if you were doing Docker logs name of service. And that's pretty

41:39.760 --> 41:45.520
much it. That's all it does, but it does it really, really well. Yeah, and it helps you

41:45.520 --> 41:51.120
search through the log and find stuff. It has this really nice real time search function that

41:51.120 --> 41:56.960
is super useful. And after my experience I had earlier with realizing that one of my

41:56.960 --> 42:02.080
containers was actually restarting frequently, kind of realized I could use something like this.

42:02.080 --> 42:07.200
So I'm going to take a look at dozzle and and maybe, maybe I'll throw it on a machine.

42:07.840 --> 42:11.440
I talked about this one on Linux action news, but it's worth noting here since we're kind of

42:11.440 --> 42:20.720
on a roll. Docker compose is changing from like a standalone Python thing to inside Docker itself.

42:20.720 --> 42:24.880
So I think the way it's going to work, Alex, is existing Docker compose commands will just kind

42:24.880 --> 42:30.000
of map to the new Docker compose commands. But instead of it being like Docker dash compose,

42:30.000 --> 42:35.360
the new proper syntax will just be Docker space compose because it's now inside the Docker app

42:35.360 --> 42:39.760
and not a separate thing. Yeah, just as if Docker needed to be even more monolithic,

42:39.760 --> 42:45.680
they are un-breaking out the separate project that is Docker compose and bringing it in house.

42:45.680 --> 42:48.880
So I think this is a largely a bit of tech debt that they're addressing here.

42:49.440 --> 42:54.160
If you go way, way, way back in the annals, Docker compose actually started its life as

42:54.160 --> 42:59.760
a project named fig. And then it was renamed to Docker compose. And it became what we know today.

43:00.960 --> 43:06.640
You know, in terms of this change here, not a lot is going to change besides the invocation that

43:06.640 --> 43:12.960
you need to need to use. Although they do say that if you still use the hyphen, so Docker hyphen

43:12.960 --> 43:19.040
compose, they're going to put in an alias that will effectively just it will just continue working as

43:19.040 --> 43:24.240
you expect. And there should be full backwards compatibility with existing compose files,

43:24.240 --> 43:30.320
although there have been some small changes to the Docker compose spec. So if you're seeing errors,

43:30.320 --> 43:35.040
that could well be why. More than likely, though, it's probably your YAML indentation that you've

43:35.040 --> 43:41.200
screwed up. So make sure you enable white space in your editor. It's still in beta. So you know,

43:41.840 --> 43:45.840
take that for what you will, you know, here be dragons, all that kind of stuff.

43:46.960 --> 43:52.160
But there are some nice things in it. You know, largely, though, like I say, it's a it's a tech

43:52.160 --> 43:59.040
debt style, addressing tech debt style release. And there isn't much really in terms of new

43:59.040 --> 44:04.080
features here for normal people. But the developers are very excited. Well, and it's really how it

44:04.080 --> 44:09.520
always should have been. It is it does make sense. So for me, Docker compose was what made it click.

44:10.400 --> 44:17.200
Because a simpleton like myself now has directories that are backupable that are just

44:17.200 --> 44:23.760
loaded with YAML files that just describe my infrastructure. And that's it right there, man.

44:23.760 --> 44:29.280
Like as soon as I went like, oh, and you know how damn handy it is to be able to just cat a file and

44:29.280 --> 44:33.920
say like, where did I end up mounting? Oh, right. That thing points over here for storage. OK, well,

44:33.920 --> 44:38.880
that's where I have to go on the file system. I do that crap all the time. So for me,

44:38.880 --> 44:45.520
Docker compose was this massive upgrade. It took my occasional use to Docker from like every

44:45.520 --> 44:49.600
now and then I'll fire something up to check it out to like this is how I deploy things now

44:49.600 --> 44:57.680
because that Docker compose file, it is a plain text way for me to just visualize how an application

44:57.680 --> 45:03.200
is built and what it uses. And I love it. And so I'm glad to actually see it become like an official

45:03.200 --> 45:07.440
part of the main Docker app, actually, because it means it's going to be around forever and you

45:07.440 --> 45:11.600
start to see support and things like Podman for Docker compose. So it's starting to become more

45:11.600 --> 45:15.040
than just a Docker thing. And I think that's great, too. Now, if you want to hear more about

45:15.040 --> 45:19.760
that, you know, the LinuxActionNews.com slash 209 where Chris and Wes break that down in a bit more

45:19.760 --> 45:27.440
detail for you. I wrote a blog post a little while ago about how I can manage monolithic

45:27.440 --> 45:33.360
Docker compose file. So I'm the type of guy that tends to slam my 30 containers all into one

45:33.360 --> 45:39.280
massive file. I know some people have different preferences with when it comes to managing these

45:39.280 --> 45:45.520
things through stacks, and what have you, but I found a feature that got added to Docker compose,

45:45.520 --> 45:52.720
I'm not quite sure when, called profiles. And in essence, this allows you to address multiple

45:52.720 --> 45:58.080
services within a monolithic file itself. I can give each container a specific profile, like a

45:58.080 --> 46:04.720
tag in the YAML of like test or prod or something like that. And I can address all of my test

46:04.720 --> 46:10.960
containers within one massive file, as if it were part of just a smaller stack. Probably limited

46:10.960 --> 46:16.720
use if you're using stacks, and you know, what stacks do, you create a directory, you put the

46:16.720 --> 46:24.080
YAML file inside that directory. And each compose file is in each directory is what's called a stack

46:24.080 --> 46:28.560
and compose will treat that as like a separate entity. And one of the new features in Docker

46:28.560 --> 46:36.240
compose v2 is that you can actually enter those directories and list different stacks, like PS

46:36.240 --> 46:41.920
processes and LS and, you know, see what different containers are part of different stacks. That does

46:41.920 --> 46:48.320
make compose even a bit more useful. But if you want to find out about the profiles, I wrote a

46:48.320 --> 46:54.320
blog post. Good link will be in the show notes at selfhosted.show slash five nine. So as always,

46:54.320 --> 46:59.600
a big thank you to our SRE subscribers, you make this show possible over at self hosted.show slash

46:59.600 --> 47:04.640
SRE. We do every episode, we do a little post show where Chris and I talk about some

47:05.760 --> 47:10.160
some fun stuff. What are we talking about this week? Well, Wendell sent you a KVM.

47:10.160 --> 47:14.480
Oh, that's right. Yes. Yeah. Yeah, we're gonna be talking about that. I have such a such a goldfish

47:14.480 --> 47:19.280
brain. Sometimes we talked about that half an hour ago. I got it right up here. But also,

47:19.280 --> 47:23.120
we've got a live stream coming up as well, where Chris is going to start putting together his first

47:23.120 --> 47:29.600
ESP based device with ESP home. Yeah, that's right. It's gonna be it's gonna be awesome. I've been

47:29.600 --> 47:34.320
wanting to do something like this for a long time. And I was I was complaining Alex like, man, if you

47:34.320 --> 47:38.080
lived here, I know you just be over here on we'd have this thing built like a weekend. And then

47:38.080 --> 47:41.840
he's like, well, let's just jump on a call and do it. And then we thought, wouldn't it be awesome

47:41.840 --> 47:45.840
to hang out with our members? We haven't figured out all the tech yet. But we'll have more

47:45.840 --> 47:49.760
information soon, like in the post show, and we'll make a members post to to let people know what's

47:49.760 --> 47:54.400
going on when we have it all dialed in. We'll do it before the end of 21. How about that as a

47:54.400 --> 48:00.480
promise? I like it. That's a good idea. Goals, Alex goal. Alright, now if you want to send us in

48:00.480 --> 48:04.160
your feedback, you can get a self hosted dot show slash contact. That's the place to go to get in

48:04.160 --> 48:09.840
touch with us. And as always, you can find me on Twitter at ironic badger. There you go. I'm at

48:09.840 --> 48:14.720
Chris LAS on there the podcast itself. That's at chill to add at self hosted show. What is it? I

48:14.720 --> 48:18.080
don't know. I can barely say it. I'm kind of feeling like I'm done plugging the Twitter now

48:18.080 --> 48:24.320
the jacks out. I feel like we should be out Alex. Alright, everybody, thanks for listening and not

48:24.320 --> 48:34.880
going on Twitter. That was self hosted dot show slash 59.

