Coming up on today's show, we have good news, everyone.
I check out Lychee's latest release and Chris licks a stamp and sends it.
All of it.
I'm Alex.
I'm Chris, and this is Self-Hosted 27.
Episode 27 feels like a lucky one, Alex, because around the time this comes out,
it'll be our one year anniversary.
Happy birthday to us.
Can you believe it?
I mean, in some ways it feels like we've been doing this forever.
In some ways it feels like it's been six months.
God, they grow up so fast, don't they?
You know what else this means?
It means it was a year since you and I went to see Wendell.
Right.
On that road trip.
What a different world it was.
I could use a nice road trip like that.
Me too.
Well, we have a lot to talk about.
I'm going to try to convince you to adopt something.
So let me start by saying thank you to a cloud guru for sponsoring this episode.
If you're looking to make a high paying career move into the cloud, no better
place to start than a certification.
ACG has helped more than 2 million people skill up on cloud, AWS, Azure,
GCP exam preps also available.
They've got you covered.
Get going at a cloud guru.com.
Alex, as we record this show, some people may know this, others may not, but a cloud
guru and Jupiter Broadcasting have made a mutual decision to separate and restore
Jupiter Broadcasting's independent media status.
This de-merger will allow Jupiter Broadcasting and a cloud guru to dedicate
their resources to specialize in content they do best.
Jupiter Broadcasting in creating Linux and open source podcasts, content catered
to enthusiasts and industry professionals, and a cloud guru in creating comprehensive
hands-on multi-cloud computing.
Linux and DevOps training for businesses and individuals.
A cloud guru and Jupiter Broadcasting share many commonalities such as a passion
we have for our respective missions and an investment we make in creating
accessible, accurate, and engaging content that makes a difference to our audience.
We also share a belief in the importance of giving back to the open source
community, as such a cloud guru will continue its support of Jupiter
Broadcasting with a sponsorship arrangement, and we'll continue to explore
future content collaboration opportunities.
So we are an independent company again.
And as part of that, we have been rolling out some new shows.
Linux Action News just relaunched.
I'm very excited about that.
So am I.
That was one of my favorite ways of just, you know, dipping my toe into the pool
of Linux news every week.
That's a funny visual.
And then Coder Radio also just relaunched.
We just recorded our second episode.
So that's out right about now as well.
What's funny about my toes?
It's not so much that it's like the Linux news pool and what that might actually
look like.
I'm picturing a pool with a lot of algae, you know, a really gross one that needs
to be washed a little bit.
Maybe some ducks came and crapped in it.
I'm staying out of this.
You're going to have to find a shovel, man.
I just love it.
I just, the Linux people know I love, so I get to have a little bit of fun as part
of this transition to independent.
Some of our shows are launching membership feeds.
Predominantly, these are limited ad feeds that will have some
additional value as well.
The idea being is that we want to help for production of the shows
and keep them sustainable.
Jupiter Broadcasting will live and die on the success of some of the multiple
sources of income that I can come up with.
And so the idea being is we don't want the only way we live and die being
sponsorships, we're very grateful for our sponsorships.
And if you can't afford to be a member or a member of all of our shows, that's
fine, just, we appreciate you listening and engaging with a sponsor if it seems
like an appropriate fit, if you can't afford to support the show and you want
to help keep us going, and in addition to getting a limited ad version of the show,
you will also get a bonus post-show, we'll include the bonus post-show
that isn't included anywhere else.
If you want to join us, we have a limited time code and we've come up with a name
for the team that we think is pretty great.
It's going to be the Self-Hosted Site Reliability Engineers.
So you go to selfhosted.show slash SRE to sign up.
It is $5 a month.
And if you use the code SSH, we'll take a dollar off indefinitely.
So it's $4 a month indefinitely.
If you use the promo code SSH at self-hosted.show slash SRE, you become
a site reliability engineer for the show.
You get a limited ad version of the show.
Plus you also get the post-show included with that one feed and you just subscribe
to that and that's your version of the show fully produced, just limited ads,
the post-show just for you and you help keep us going.
It's $5 right now.
You might want to get in on that because if for some reason in the future,
in the, in, you know, in year two of this show or something, we decided to go to
weekly, we'd probably bring the membership price up to help cover that cost.
So you might want to lock that price in while you can at self-hosted.show slash SRE.
Thank you to everybody who is in a position to support us there.
And if you can't, your support by listening, sharing the show with someone
you like, or engaging in those sponsors is all the thanks we need.
And we appreciate that too.
Absolutely.
I couldn't be more delighted in the news that JB is independent again.
I think that's fantastic for everybody involved.
So, uh, I thank anybody in advance that sees fit to throw a bone or two, are we?
Thank you, Alex too, because you know, it's doing these shows is what makes it
possible and it just means this is, this is my full-time thing now.
It's a lot right now.
Like honestly, it's overwhelming at the moment and it's touch and go.
I don't know if we'll make it the next three months and I don't know if we'll
make it six months after that.
I'm hopeful, but it is really quite touch and go.
And I know it's touch and go for a lot of people out there, but I'm hoping
these memberships not only give us like a little additional runway.
So if maybe a week, we don't have a sponsor, we can still cover the
cost of running the show that'd be ideal.
But additionally, maybe it can go towards paying the hosts a little bit of beer
money for doing the show, which I think would be really, that's, that's my kind
of hope, I don't think it's going to make us millionaires, but I hope it covers
the cost of an editor and maybe gives you and I a little beer money, you know?
Wouldn't that be nice?
Reminds me of only fools and horses in the UK to watch as a kid.
And David Jason was one day Rogers will be millionaires.
That won't mean anything to you, but to anybody from England will
know exactly what I'm talking about.
No, but I'm going to, I'm over here scratching my lottery tickets.
Sorry.
What was that?
I kid, but also I do have something in the works for like a, um, a bundle for
the network, if this isn't for you yet, or you want everything, stay tuned.
There will probably be upgrade options or something like that as well.
But I do have some ideas around that to try to give everybody one bundle package
you could get and you get all the shows feeds and all of that, but that's in the
works, we'll have more information about that in the meantime, self hosted that
show slash SRE, it's a new beginning.
It's, it's fun and kind of coincidental that it's right here at the year.
Mark too.
Do we start playing 2001 space Odyssey now?
I haven't been thinking about it more and more.
Actually, I have a project for you, Chris, and it has a name
with questionable pronunciation.
So it's perfect for you.
Oh, okay.
I'll give it a go.
You ready?
I'm ready.
Yes.
I'm going to say, okay.
It's L Y C H E E.
I'm going to say lychee.
You bastard.
You copied me.
That's not what you said five minutes ago.
Well, I was either that or lychee.
I just wasn't, I could be lychee.
Oh, I think lychee, I've, I've always said lychee to myself.
Okay.
Oh, okay.
All right.
But the whole big thing was you were going to get it wrong, but I don't think
you did, so good job, Chris.
Although for all you know, you have a wrong true.
Yes.
Well, I mean, you are speaking to the guy that read Hermione as Hermione for about
the first two Harry Potter books.
So, but that's, that's not what really matters.
What matters is this is a self hosted photo gallery.
Yes, sir.
So light room and those kinds of things come with the photo gallery.
Those kinds of things come with built-in galleries and stuff like that.
But obviously if you stop paying Adobe, those galleries go away.
That's what happened to me.
I stopped paying Adobe for a bit and my galleries went away and I'm like,
this is probably a solved problem in the self-hosted space.
And yes, there are tons, and I do mean tons of photo galleries, but for me,
none are quite as simple and just fit the bill of doing nothing except for just
displaying my image in a distraction-free way with basic album support.
And that's what Lychee does fantastically well, I think.
So if you head over to gallery.selfhosted.show, I am in the process of hopefully by
the time the episode airs, setting up a gallery for you all to go and have a look
at what Lychee looks like, but in the meantime, you can go and take a look at
their GitHub there at lychee.org as well.
And it's a fully open source photo gallery app.
And I think it's the best of the bunch.
It's clean.
It's really easy to navigate and the UI is clean and it has various size thumbnails
for the images, which really displays them nicely.
Like you have this one at the beach and it's a super wide shot of birds flying
along the water, and it displays that one as a large panorama in the list.
It does a really good job of doing that and making it all work.
This is super slick.
Now, my question for you is how are these photos stored on the backend?
Is it just looking at a directory and then indexing them and presenting them?
Or are you uploading them through a web form?
Like, what's that like?
Well, come on, you know me, if it doesn't run in a container, I
don't generally run it at all.
Okay, of course.
So I'm running it out of a Docker container, a Linux container.
Someone actually wrote in and told me off for calling them Docker containers.
You know, they're not Docker containers, Alex.
They're Linux containers.
I know.
I swear.
I even said in the episode that Docker is the Kleenex of containers
and someone still wrote in anyway.
Thank you for writing in.
I love hearing from you all, but I do know the difference between a
Linux container and Docker container.
Thank you.
Right.
Going back to Lychee.
Yeah, it's running out of a container.
I do a volume bind mount to the images.
So I'll go and sign in.
And once I'm signed in as my admin user, I am able to create albums and
upload through the web interface.
So you can import via link from a server.
Oh, I haven't tried that one or Dropbox.
Oh, interesting.
That's not bad.
Those are a couple of good options really.
Yeah.
So this action will, if you import from a server, you point it to a
folder or sub folder, which will be located in the following directory.
So I assume that means a volume that you've bind mounted.
So this is probably a way to import entire directory structures
worth of pictures at once.
So I didn't know that feature existed until just now.
That's great.
That does seem nice.
And Lychee just released.
Well, I say just in 2020 time.
Anyway, just released a new release in April version four, lots of changes in
there, so head over to GitHub and take a look at some of them.
So in our off-air conversations, I have kind of grok that you are an anti-Syncite.
You don't like the SyncThing project.
I know you've got a experience from BitTorrent Sync back in the day.
You obviously have experience with Nextcloud and I'd like to take a minute to
try to convince you and maybe a couple of people in the audience to give
SyncThing another try.
If it's been a little while, it might be worth a go.
I too, like you had tried it, gave it a decent like 30 day try, actually a couple
of times and both times walked away very frustrated and decided I wasn't going to
use it.
If you're not familiar with SyncThing, it is a continuous file synchronization
program.
It synchronizes files between two or more computers in real time.
It uses encryption.
There is no cloud storage.
It is from machine to machine.
It has a peer-to-peer discovery network.
It uses an open protocol.
It's open source and it's private.
There's no data stored anywhere else that could be indexed or
inventoried or reviewed.
It uses a key system for authentication.
It's overall, once you set it up, fairly just simple and just goes.
It's really kind of set it and forget it kind of background stuff.
So I'm looking at your server now.
You shared with me fish sticks.
Yes, that's what we've called your server.
You shared with me this through SyncThing and you gave me a code, like an ID.
If there's no middleman, how did my server reach your server to do that initial
key exchange behind firewalls?
Which is so cool, isn't it?
So if you actually just watch the logs, when you first fire up your SyncThing
server, you can see it doing a peer-to-peer discovery mechanism.
There's a shared directory amongst them that they can use to discover each other.
And it's incredible, actually, when you think about it, how fast that actually works.
In that initial key exchange, there's a third-party server somewhere, surely.
Like my server is talking to a shared directory.
Does that mean every SyncThing in the world is also talking to that shared directory?
So it's like a phone book for SyncThings?
In a sense, there is a SyncThing discovery server that finds peers on the internet.
So it's a peer-to-peer system.
And so there's a couple of directory servers they can check, and then they very
quickly populate and discover them.
In fact, it's very impressive when you think about it, how fast it does populate.
So the project just maintains a global cluster for public use that by default,
SyncThing just uses.
But you can point it at any discovery server you want, or you can tell it not to do that at all.
It's exchanging these keys, though, so it's nice and encrypted, it's secure.
And then there's a network of community-contributed relay servers as well.
So if you're behind some particular tricky NAT, like I am in the RV, it will automatically
help your relay server join that pool and get discovered by the other SyncThing
servers and actually make the Sync session start even behind a double NAT.
That's also a community-contributed thing that by default uses those community
servers, but you could point at something else.
So there's no hosted service that I'm connected to that's going to go away when
some company buys another company or something?
No, and not only that, but there's really no one company that goes down that takes
this out.
But for me, one of the areas I've relied on SyncThing a lot recently is the
transferring files with my clients that maybe are producing media.
So I have chrislash.com consulting and I have a handful of clients, some that are
doing video, mostly audio, but some that are doing video.
And these are really large files because they're, they're recording raw files, and
then they're asking me to like cut them up or do something with them.
And we looked at it and for cloud storage, like through Dropbox or OneDrive, or even
using something where you'd upload it and download it, it's very exciting.
It's very expensive for these 40 gig files, and there's like maybe a couple of them
and they take forever to upload and download.
So it was just a light above the head kind of moment, you know, where the light
goes on.
And I realized, holy crap, this is the perfect job for SyncThing because there's
no cloud provider, so there's no cost there.
Both my editing system and the system they're recording on have copious amounts
of free space, terabytes of free space.
So why not just have them go directly to each other?
I don't need a cloud server in the middle that it's also syncing to.
I don't need a big suite of software like Nextcloud offers sitting on top of my sync.
I just want this computer's file system writing to this computer's file system.
And the more I use SyncThing, the more it feels like it creates this pervasive
universal network file system for me.
I wonder how much, you know, storing my 40 terabytes on Dropbox would cost me.
Yeah, a lot.
Yeah, a lot.
And then so I can just pick a directory and give you a link, which is effectively
what we're doing with SyncThing.
Right.
Yeah.
I mean the, the cost alone of, of, you know, S3 or a Dropbox or a Google Drive
for that amount of storage is, yeah, this is quite compelling.
I have to be honest.
There's the peace of mind aspect of it too.
Right now I'm getting ready for a road trip and there'll be a good portion where
we go off grid, that's kind of like just something we do kind of on the regular
now and after chatting with you, it dawned on me, you know, I'm a fan of Open
Audible, I don't have all that stuff at my RV, but I have it here at the studio.
I can use SyncThing to lift and move all of my audio books that I want to listen
to on this road trip and it just does it in the background as the bandwidth that
the RV allows and it just does it silently and, and patiently to a Raspberry Pi.
And it creates this network syncing effect where I can move whatever I want,
even if it could potentially flag some copyright bot, even though I own it,
right, I own that stuff, I bought it.
I just want to listen to it in a different device, but it
would still trigger a bot.
I don't have to, I don't have any of that worries with SyncThing.
So is everything encrypted then between different servers when you're syncing?
Yes, it is.
And, um, they have a open bounty program that try to encourage people to discover
issues and they have a dedicated security page at syncthing.net that gives
you front and center information on how to report issues, where to get their
keys, if you need to verify something or sign something and how to report bugs.
Just all boom right there.
They take it pretty seriously from what I can tell.
And they have a foundation that they've created behind the project as well that
puts out annual reports and has created bylaws and seems to really run the
operations of the project for them.
So I'll tell you what I'm going to do.
I'm going to set a reminder for, let's say four months time.
And we'll check back in at an episode in about four months.
And you can ask me whether I've switched or not, I don't know.
I'm skeptical.
I'm tempted.
I am tempted.
And I tell you my, my main use case for syncing files around would be my
MacBook pro where I keep all my photos and stuff like that.
Yeah.
My general workflow is, you know, if I go out and take some pictures, I'll
import them onto the Mac book, edit them directly on that SSD.
And then as I'm making those edits, you know, that creates a sidecar XMP
files and stuff like that, if it would send it back then to my NAS as like
a read only situation, that's my primary use case for something like this.
Where I ran into some issues was when it was trying to index existing
content, that's particularly, you know, I've got about two terabytes worth
of very small files to index for, for pictures, for photos.
And, uh, it seems to just choke down on that for a couple of days on the
server side and then again on the laptop side as well, so it, because I only
wanted a one way sync, uh, it seemed to struggle a bit, so I actually be really
interested to know how it handles a bunch of files because that was the
Achilles heel of BitTorrent sync.
I don't remember if you recall.
I actually bought BitTorrent sync, uh, when you had it on and filter
probably half a year, half a decade ago.
Yeah, me too.
Um, but you throw it like in a director with a lot of files and it was just a
mess and then, um, I changed to Resilio sync, right.
And then Resilio sync.
Yep.
My tip for success is have a master server of truth, something that's online
when the other ones come online.
What I messed up, I think in the past is I had was mostly using sync thing on
laptops and they would be on and offline at various times and what would come
online and it just, I think it just caused problems.
Now I run it continuously in the RV and continuously on the NAS, but I'm also
considering tossing it up on a VPS to just make sure I always have a source of
truth up there, not syncing the files, but running as my own discovery server and
something they call an introducer server that will automatically introduce a
client to all of your other nodes.
Thinking about trying that.
So, all right, now you got me.
That's a, that's pretty cool.
And if you need some cloud hosting, check out lino.com slash SSH.
If you go to lino.com slash SSH, you'll get a $100 60 day credit towards a new
account.
This is a great opportunity to try out Linode.
They have 11 data centers around the world, enterprise grade hardware, and
next generation super fast network.
And Linode has a really easy to use interface and lots of distributions to
choose from and a ton of good pricing options starting at a $5 a month shared
rig, but they also have dedicated CPU plans, GPU compute plans.
They'll even integrate with orchestration management.
They have Terraform as well.
I'm reliably informed.
That's pretty cool.
And Kubernetes support is also in there.
So really you have the whole gamut.
They also have stack scripts, which are community scripts to spin up different
parts of infrastructure that are really easy to read and easy to create your own.
They have one click app deployments as well, but obviously you can just do the
traditional deploy a machine.
Then get running on top of that.
They have block storage.
So if you'd like to do something like we're doing with our next cloud setup
and use block storage or object storage on the backend, it's really nice.
They have both options available.
As an example, I'll use object storage for show notes when there's media that
we have in line in the show notes, Wes gave me this idea and it works so easy.
You just upload something to the object storage, generate a URL.
They have a Linode command line application, so you can just point it at
a file and tell it to market as public and you just hit enter and it does the
upload, it publishes it in the object storage.
It generates the URL for you.
And then I just dropped that right there in the show notes.
It's really slick.
Linode.com slash SSH.
Go there, get a hundred dollars, 60 day credit for a new
account and support the show.
That's Linode.com slash SSH and thanks to Linode for sponsoring
the self-hosted podcast.
Thank you indeed.
Push notifications.
This is something that has been a solved problem for a long time.
And somebody asked me in, in the self-hosted discord last week, how I
handle push notifications and I thought, well, doesn't everyone just use pushover?
I actually never have, I have heard of it.
I have to be honest.
I've never really thought of what a great use case would be other than possibly
alerts from some systems, some software.
Alerts is the primary use case.
I would say for a while, actually I was using it for home assistant notifications.
I also wrote a little script, which is on GitHub under the
name Ironic Badger slash bootlace.
A little Python script, which lets you send notifications from a Linux or any,
any Python capable system, I suppose.
What I use that for is to announce when my Linux boxes are booted.
So my remote server at my dad's house in England, for example, every time
that boots, the at reboot cron job is to call bootlace, which sends me a push
over notification, and that's really useful for a remote server.
You kind of piqued my attention there with the system D service.
So a service that I have on every box I essentially deploy now is a system D
unit that creates a self repairing SSH tunnel back to a Linode machine of mine
that is always on, always persistent.
So I could jump to machines from that one VPS, wherever I'm at.
Does that make sense?
You follow me, a jump post or a bastion type server, right.
And where I could see an advantage here is if there was a way within that
setup to generate an alert, when that tunnel has con has gone down or something,
if there's a way to hook in at that level of the Linux system, well, guess what?
I wrote a blog post.
Oh, Alex, that's perfect.
LinkedIn, the show notes, it uses my bootlace script, which was one of my sort
of junior programming assignments at, uh, at university.
So, uh, it just, you need to generate a couple of tokens from the push over
interface, and then once you've got those tokens, you just add it to your cron
with the at reboot to start with, and then just call the script from there.
It looks like at the core of it, you can generate a push notification just
by presenting the token, the user and calling a certain URL.
Yeah, that's pretty much it.
So push over, have an API, which when I wrote this tool, you know, several years
ago, there wasn't a lot in this space.
Push over's API was a lot more basic too.
Whereas now, if you go to the pusher of a website and have a look at their API
documentation, you can call this thing using curl from the command line, or you
can use Pearl, Ruby, PHP.
They've got a whole bunch of documentation, which, you know, curls installed on every
system, so that might be the way to go.
Chris.
Pretty neat.
All right.
I will give it a look.
I've heard of it before, and now that it's gotten your recommendation, I
think it's worth a look.
I posted this blog post in the discord and, uh, straight away, as is always the
way somebody said, why didn't you do it this way?
And I'm like, well, I didn't know about this way.
And this was, uh, rock Cedars, Roxas, Roxas, I'm sorry.
One of our listeners from Norway, anyway, he's very active in the discord.
Lovely chap.
He gave me a link to a GitHub repo called Karen see app rise, and that is
in the show notes as a link.
And this thing is like the universal notification library for literally
anything you'd want to do.
You can send messages to me.
Twitter, Facebook, XBMC, Slack pushover is one of those funnily enough.
Push bullets.
Another one next cloud, uh, matter most if this, then that.
So you could have an if this, then that event trigger when your server uses app
price, which you could then put in a script when it reboots and it's fantastic.
It sounds cliche, but I really like that.
You can send it to Slack because then I actually will see it.
I have to have that up every day anyways.
So I don't know whether it's because I've heard it so many times
with that little, but it does.
Yeah.
That little three dot noise it makes.
Oh, does it trigger you?
Does it get you?
Gives me nightmares.
Yeah.
Yeah.
Yeah, I know.
I, I've actually muted it.
So, you know, what have you and I said a lot, I don't know how many people have
said it on the show, but you and I have said a lot that somebody should create
a store and just take these.
Tasmoto compatible devices and pre flash them and start selling them as a product.
In fact, we've even said, maybe we should just do it.
Dang it.
Maybe we should just do it.
Well, a listener out there in the self-hosted community has taken it upon
himself to do just that.
And he has launched cloud free dot shop.
And it looks like one of the first things he's done is add a
cloud-free smart plug.
Check this thing out.
Okay.
So he's created it for $9 and he's pre flashed it was with Tasmota.
And, uh, it's essentially just set as a base image ready to go.
And he reached out to you, didn't he?
Via the discord again.
Yes.
All good things apparently start on discord this week.
So David reached out to me via discord and said, Hey, thanks for the great idea.
I've, I've turned your great idea into my next big thing.
I think he's at college, so some of, some of the funds from this for him, for
example, will go to towards his college fees, tuition, I suppose you call it here.
Don't you?
Now here's the question, Alex, did he give you a hookup for the audience?
He did indeed.
You can support the show by using the coupon code self-hosted at checkout.
That's all on word self-hosted.
Well, that's great.
That's really cool.
He says he's got a lot in stock too.
I, uh, I think this is nice because the no cloud forever.
Pair directly with home assistant via MQTT.
That is my kind of language right there.
Just imagine taking one of these things out of the box and it never, ever talks
to anything outside your house ever in its entire life.
That's like going back 10, 15 years, you know, now we've got toasters
that talk to the cloud.
We've got fridges, smart plugs, light bulbs, you name it.
This thing will be 100% owned by you.
There's no way you're going to be able to do that.
And owned by you, there's no business models at play your data.
I mean, I don't know what companies are doing with my power socket, turning
on and off schedule anyway, but I suppose meta metadata is, is, is powerful.
So yeah, even just knowing when you're home and active is useful.
Yeah, I suppose so.
And then there's the angle of you, this, this device is yours until
it physically stops working.
Whereas as we've seen with many different IOT vendors, they can basically cut
you off at any moment that their business model decides, right.
And when it comes to something in the home, you know, that's,
that is a big deal for me.
I still have a few of those TP links that work great, but I would imagine.
I would never be able to set them up again if I had to, for some
reason, and TP link had pulled the, uh, the, the Casa app or whatever.
Where's the incentive for TP link.
If you haven't bought a new physical piece of hardware in 20 years,
that'd be a record for me.
I meant from them, like it's, it's the planned obsolescence
model, literally in action.
So while we're talking about hardware, there was that group
by for the power monitoring PI.
That's right.
Yeah.
I almost forgot.
Uh, and I honestly did forget last episode.
So I'm very sorry, David, two Davids, this is a different David.
This is the power monitoring David I'm talking about.
So he set up a website over at power-monitor.dallbrecht.tech that
that link is in the show notes because I completely butchered that, but this
is now essentially a web store.
You can go and buy your DIY power monitor kit for $30.
What the group by form that you all filled out enabled us to do was, well,
I say us David's done all the work.
All I did was literally give, give him a plug.
What David's done is he's actually built he's he's known how many
orders are going to come in.
Approximately, and he's been able to order all those components in, put
them in little baggies, design a custom PCB.
So everything that you need is over at that link in the show notes.
You can buy the, um, the CT clamps, the current transformer clamps, the
things that actually do the reading of the power, um, you can buy the
power adapters as well as the actual power monitor kit itself.
So total cost I would imagine would be in the region of a hundred bucks.
By the time you've got everything set up, you've got the power
time, you've got everything that you need.
The actual power monitoring kit itself is $30 as priced on the website.
He gave me a code that was for all of the self-hosted people that were
part of the group by to get an exclusive $10 off.
Now we don't make anything from this.
This isn't a sponsorship or anything like that.
It's literally just a cool project.
I saw on Reddit, which I got in touch with the author and here we are.
The coupon code is all one word self-hosted.
It's actually kind of cool that the community is working
on these hardware projects and either you're reaching out to them
or they're reaching out to us and we're chatting and getting details
and they're creating codes for our audience.
I mean, that's pretty cool, man.
Well, I think we're in an interesting kind of time for open source.
I was listening to a point that you and Mike made in Coder this week about
how VS code is kind of the universal development operating system, if you
like, that kind of struck a chord with me.
Like I've stopped fussing with my tools now.
I kind of, I just use VS code everywhere.
And I get on with real work far more often because I'm not chopping
and changing the whole time.
Yeah.
And I think that that shift has, has opened it up to a lot more people who
are also hardware tinkerers and software tinkerers, and they're bringing these
two passions together and if they're doing it from a Windows 10 machine with
WSL, it's no big deal.
It's just, it's totally normal now.
It's not just only people on Linux that can know how to tell them that
into a USB device, you know, it's opening it up to more people.
And I think that's pretty awesome too.
I have a question that I put out there, and if you have an answer,
self-hosted.show slash contact or tweet me at Chris Lass.
I have a DC powered, it's a awning system.
It goes, you know, brings my RV awning out and then you push down
and it brings my RV awning in.
So it's like a rocker switch and it's a DC power system that powers the motor.
I had to, before the show today, drive home, unlock my front door, sit there
and hold the button down so that my awning would come in and then close
the door, lock my RV back up and drive back down to the studio because the
wind just randomly started picking up above 30 miles per hour and that's
enough to really damage something like that.
Cause it's basically like a huge wing alongside of my RV and it just, as I'm
driving there, I'm thinking to myself, there has got to be a way to either
make this accessible via home assistant.
So I could just remote into home assistant and trigger it, or even like
a sensor, like a wind sensor could trigger it, which is how they do it on
newer RVs that have fancy awnings.
They have wind sensors built in.
Is it a low voltage switch?
It must be.
I'm not sure because what I do for my garage door is I have a, uh, what's it
called a SONOFF SV, SONOFF safe voltage, I think is what it stands for.
And this will do like 12 or 24 volts or something like that.
Don't quote me on that.
I think it's that region anyway.
Um, maybe it's five, I think it's five volts.
I'm sure this must be 12 volts what I'm working with.
And using ESP home, I'm able to set a switch to stay open or closed for a
certain amount of time in software, you know, with a delay or something like that.
If I had a contact sensor, so I knew it was, yeah, that'd be tricky because
you have to hold it just for a certain time to open or close it.
That is tricky.
Well, you know how long that is, right?
So you just program in hold button for 7.2 seconds or something.
Yeah.
And it will just keep the relay close for that length of time.
You come up here, let's wire it in.
I love other suggestions to self hosted that show slash contact.
Maybe there's a solution there cause I'd love to solve it.
I kind of started to, um, pull back on the RV automation stuff.
Like I thought maybe I'd taken it far enough.
And then I came across a dude who's automated like everything, every bay
door, flushing his tanks, everything's automated, everything's automated.
And then I thought, okay, there's something to aspire to.
I got to get ahold of that guy.
Here is motivation enough for home for home automation.
Anything that gets you further away from your own poop.
No kidding.
You don't want to even know the stories, Alex.
You really don't.
I'm now imagining the absolute worst case scenarios.
So I'm going to try to get ahold of that guy, uh, and get some ideas from him.
Uh, I know this is something that's developing more.
I'm seeing more and more people talk about it.
People have contacted me.
It's a thing.
So there's, they're selling them like crazy.
The RVs right now, some of them are nerds buying them and they want
to do crazy things like automation.
Now there are a couple of other options for people who
wanted to do power monitoring.
I actually set one up about three months ago from circuit
set up.us and they make, uh, an integrated board.
You can buy, you know, pre-made pre-soldered board, which
connects up to an ESP 32.
This thing sells for about $70 and that gives you six channels of monitoring.
So it's, you know, 60 ish 65.
So it's about $70 for the board.
CT clamps are again, about 10 bucks, same as the, um, other group buy products.
That we talked about with David and, um, this thing, I'll tell you what, because
it's just running on the node MCU, okay.
The ESP 32 variant, it's been solid, really, really good.
And I have it connected to my AC units.
And so in my home assistant, you know, AC cards, I'm able to get real-time
information about how many Watts each AC unit is pulling and, and then I use
that against my utility, you know, the electricity cost times that by kilowatt
hours, whatever, and so I can see I've spent exactly $1.83 on air conditioning
today, it's actually not as bad when you do the actual math, I'm like, yeah, I'd
pay two bucks to be really comfortable.
Yep.
Yeah.
Now the power draw and whatnot, that's a whole other, uh, discussion, but you're
probably going to have a lot more to talk about than that, but I'm going to
you're probably going to have a lot more to talk about that in the future, I'd
imagine.
Yeah, I think so.
I mean, that particular one was inspired by a video over on Digiblur's YouTube
channel, which there's a link to in the show notes, but I had some other
listeners write in when I mentioned I was going to do a sort of mini roundup
of the energy monitoring options, open energy monitor.org.
Now this thing is super duper cool.
Does exactly what it says on the tin.
It lets you monitor things that consume or create energy.
So solar is supported, EV charging, you can monitor your heat pump.
They have all sorts of different things, uh, sort of like recommended builds
almost, so if you go over to their shop, they have a bunch of different options
that you can buy, you know, there's Raspberry Pi shields, web connected
base stations, man, if you're a nerd, this is right up your street.
Now this one happens to be based in the UK.
So if that matters to you, then, uh, there's another option for you there.
They also have guides though, even if you don't want to buy anything that
could be really useful, including integrating them with Node-RED or MQTT.
So this is interesting because I very, very much would like to get as detailed
as possible insights into what is drawing power.
I was out in the woods just a couple of weeks ago and my system is using 500
Watts of power and I don't have anything unusual on my fridge isn't running.
I I'm not running anything strange, but all of a sudden 500 Watts
of power being consumed.
What the hell is using 500 Watts?
You didn't buy one of those new Nvidia GPUs did you?
I never did figure out what it was actually.
It just eventually stopped.
Whatever it was, it just stopped.
Oh, oh, and then the night before you see, cause we were a little rust.
We were a little rusty the night before we had left the water heater in electric
mode and it draws like 900 Watts while it's heating the tank and that
kept going all night long, a little dashboard, you know, a little bit
of information would go a long ways here.
This is so cool.
So open energy monitor.org.
We'll have a link in the show notes, but I'm just looking at the guides
alone, even though I don't buy a single thing, this could really be helpful.
Yeah.
Now the fundamental thing about all three of these different options is
that they all pretty much utilize.
Largely speaking the same technology.
They're using these CT clamps and these are little transformers that basically
clip around an electric cable, monitor the electric field going through that
cable and outputs a very low voltage, which you're, you can use a headphone
jack or something on the other end of the CT clamp and the chip will monitor
the voltage coming off of the clamp.
And then you can extrapolate from those pieces of information, how
many amps are being drawn and that's it.
That's really cool.
Boy, I've gotten some good stuff out of this episode.
Thank you, Alex.
And thank you out there to the community who have been getting in touch with us.
Again, that's selfhosted.show slash discord or selfhosted.show slash
contact if you just want to fill out a form.
I want to thank a cloud guru for sponsoring this episode.
You know, a cloud guru now includes cloud playgrounds.
This means for Azure or AWS or the Google cloud platform, if you want to learn, if
you want to get hands-on experience, if you want to create sandboxes and try
things, experiment and break things, you can do that now on ACG's credit card, not
yours that has bit me once before one time and one time only, I accidentally
got myself like nearly a $300 bill because I was just trying to learn AWS.
This was a little while ago.
It was very embarrassing.
It was, it was really embarrassing.
A former colleague of mine has that beat though.
I think his bill was like three and a half thousand dollars in a month.
Oh my goodness.
Yeah.
Yeah, so you got to be careful with that.
Yeah.
So this, and it's a nice resource because it's built in with all of the other
things on the training platform.
It's just one click to a fast, fresh, disposable cloud environment at your
fingertips, go to a cloud guru.com to check it out.
And thanks to a cloud guru for sponsoring this episode of self-hosted.
Also, I'm going to give a shout out for our Twitter handle at
self-hosted show on Twitter.
You'll get announcements about new releases or anything news related to the
show.
It's also a great way to ping us for questions.
If you like to do the Twitter thing and you're not on the discord or don't want
to do a contact form, we got all the options these days, Alex.
So many options.
Well, why they're over there.
How do they follow you?
I'm at ironic Badger on Twitter.
Get that.
I'm at Chris Lass and the network is at Jupiter signal links for everything we
talked about today or at self-hosted.show slash 27.
