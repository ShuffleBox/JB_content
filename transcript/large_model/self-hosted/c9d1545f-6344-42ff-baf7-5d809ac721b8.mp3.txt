Coming up on today's Self Hosted, Chris figures out how hot is too hot, I attempt to perform an extreme remote firewall install, and we share some of our favourite SSH tricks. I'm Alex.
And I'm Chris, and this is Self Hosted 24.
I have squirrels on my mind.
Okay.
Squirrel mail.
Go on then.
Well, I am not happy about this Google news. Have you seen this Gmail news?
What's that? That they're rolling everything all into Gmail?
One big productivity suite. And I'm just not, not having it. I just want email. I want decent web email, but I don't want to host it myself, I don't think. So that's when squirrel mail came to mind.
We've been over this before, Chris. I think we decided that self hosting email wasn't worth the trouble. What's changed?
Here's what I'm thinking is, instead of hosting the email myself, I just want a really nice web based IMAP client, something that would render well on mobile, that I could add all of my Google accounts to, of which there are minty for the various shows.
There are plenty I should say, many and plenty minty, and I bring them all into one web mail client, where I can just check that one web mail client, and I want something nice, that is clean, ideally could even support GPG encryption but not required.
You know what I mean? Does sound appealing. I mean, I'm sure there's plenty of ways to skin this particular turkey, but next cloud mail comes to mind.
Yeah, and round cube also came to mind. I know, I think round cube might be my top contender, but I bet the people in Discord might know.
Selfhost.show.discord. I'd like to know if you have an IMAP client that you really like or something, whatever, just plugs into Google. That's really all it has to do so I can get out of their email client, but still take advantage of their infrastructure.
So speaking of the Discord, we had some really interesting discussions over there this week about the best way to install Docker.
It's changed a lot over the years because Docker decided to change their versioning, I think maybe two or three years ago at this point, which broke a bunch of package repositories.
And if you type apt install docker in Ubuntu these days, it doesn't give you the latest version. It's really confusing. What do you think?
There are a lot of ways to install Docker on a Linux box. In some ways, it's almost easier on Mac and Windows because there's just one sort of official way for end users or consumers to deploy it.
But on Linux, you can just go through the process of adding Docker's repos and they have documentation on that.
Or, and I think this was really the crux of the discussion on Discord, you can use what they call their convenience script, which is just essentially curling a git-docker.sh file and then just running it with pseudo privileges.
And it goes through the process of setting up everything, removing conflicting packages if necessary, adding GPG keys, getting the repos configured, pulling down the software, installing it all.
It does all of it for you. But no one is generally that comfortable with just running an arbitrary script from the Internet, even when it's from a project as well known as Docker.
What's the worst that could happen? Pipe to curl, pipe to bash, pseudo, you know?
I admit it, though, Alex, when I set up Docker on the Raspberry Pis, I went with the convenient script because I just I wanted to be sure I had the right repos and the right packages for the Raspberry Pi platform.
Yeah, so the script that you're talking about, I think, is served at git.docker.com. And this basically gives you at the top, there's a very short little disclaimer.
And you can pipe this. Basically, they don't recommend you curl, pipe to bash. They recommend you save it locally, chmod it and then run the script, which is perfectly fine.
And the fact that you're going to git.docker.com looking at the script you're about to actually download, I think for me, that removes a lot of the anxiety.
Like, for example, when you're going to go and install Homebrew on Mac OS, for example, their lead installation method is curl this script and pipe it to pseudo bash so that you can install whatever this script on the Internet is.
Now, the reason that that's bad is that sometimes web hosts get hacked or malicious code is injected into the script.
And if you're a bad guy hacker, you might not replace the entire script. You might just add a couple of small lines down in the corner that nobody notices.
And so the whole purpose of verifying the scripts using the SHA hash that is there is to verify that the code you're looking at on the screen is actually the code that was downloaded and there wasn't some clever injection going on somewhere.
Yeah, I think it's for me, it's variations of seriousness, because another tool where I sort of abuse the bash, curl, download a shell script and go thing is one of my absolute favorite data visualizers for system metrics net data.
Mm hmm. Top installation source. Right. That's there. That's the one liner. And God, I'm such a hypocrite.
I realize now I know I definitely curl pipe to bash on a more regular occurrence than I think I should say.
Yeah, like I was saying, though, I would assign various like gradients of risk to my systems.
I have boxes that are pretty unimportant, like quite literally a laptop that's come in for review.
It's going to be in the studio for one week, and we're just totally punishing this machine to try to get all of the performance data we can from it.
I'll bash curl net data on that thing without a second thought.
Now, if it's a primary system that has private information, I often will try to go a more traditional route, especially if it's an arch box.
I'll see if it's just in the A.U.R.
If it's a went to box, I'll see if there's a PPA or a snap before I ever go that route. But you just have to kind of assess the risk in these each individual cases.
And remember that the installation is just one spot where you're vulnerable.
But a lot of times these things we're installing install other tools that bring all kinds of dependencies with them and have their own package repositories.
So really, it's a rabbit hole, Alex. Always, always a rabbit hole with self hosting.
Another rabbit hole you could go down if you want to install Docker in a repeatable way is to use Ansible.
So I've used the Jeff Geerling Ansible role from Ansible Galaxy for the best part of two or three years at this point.
Just works flawlessly. So that's another route you could take.
Like that. Another reason I should be using Ansible right there.
One of many. So how was the heat? You're back from Texas.
We did pretty well. Spoiler alert. Nothing died. Nothing died. So that's good.
We did get up to one hundred and four point nine in the server booth.
Hold on. Hold on. I'm going to have to do the maths on that. One hundred and five to Celsius. Forty forty point five Celsius.
That is what? So that's ambient air temperature. That's inside the server seat.
That's inside the booth. Yeah. The server seat. That's high.
It is. And I think I might have seen it thermal throttle a little.
I might have seen some thermal throttle in action when we were watching Plex and we lost the playback session and then had to reconnect.
And it took a little while to reestablish. It just seemed like things were running a little slow.
So I think thermal throttling did kick in in that in that situation.
But for the most part, the human venting procedure worked between Hedi and I.
We managed to usually vent it every single day.
So what we do is when we had the AC running and cranking, we'd vent it because the AC is right above it.
So it can blow in there pretty well. And then we try to ride that as long as we could.
But that was nice. It was nice that it didn't die. I did run a reduced load.
So now that I'm back in the Pacific Northwest, Shinobi's back online. Sync thing is running again.
So it's, you know, back to full operational status now.
I'm just picturing all of your gear breathing a sigh of relief going, oh, thank goodness.
We're back home where the temperature isn't just hot.
I know. I wouldn't be surprised if I shortened the life of power bricks and maybe my router.
You know, you don't really know, right? I could have just cut a couple of years off their life.
But so does going down the road.
It's amazing, the Texas heat, really. I think it was Carl George was saying in the Telegram group
that the value of a parking spot in Texas is not valued by how close it is to the shop.
It's valued by the shade.
When we were driving home, we were heading west and that west and north often.
And that meant that the sun in the afternoon when it was its hottest was on the driver's side of the RV.
But it was it was slow cooking you.
Oh, oh, it got so bad. And the AC even in the dash can only do so much.
So it got to the point where it's basically blowing warm air at me.
That sounds gross.
We just could barely, barely stay alive because it was so hot.
We just couldn't get comfortable some days. So we very much started taking like strategic parking spots as much as we could,
which meant we ended up staying in a few areas that were fully off grid, which is really what I built the system for.
It worked great. Plex is a bit of a pain in the neck.
If you have multiple profiles, like I have a parents profile and a kid profile and you select it when Plex launches.
And I think it uses their online service for that authentication.
And so you can be a bit of a diva trying to load that screen, huh? Oh, my gosh.
So in those cases, we just fell back to Cody. I don't blame you.
Yeah. And then I just have to remember to go back and, oh, yeah, Marcus watched Marcus watched.
Yeah, because he can't even use the Plex plug in encoding in that scenario.
It just it doesn't work. So Cody saved the day in that case.
And then just an aside, when we got back, I was sort of concerned that our outdoor Z wave devices wouldn't work
after being disconnected from the controller for 50 days because they get marked in home assistant as the term isn't offline.
It's some other term like dysfunctional or disconnected or something.
I think it's disconnected. So, you know, when I would look at my devices, I'd see all of my outside stuff,
which is a handful of devices marked as disconnected. And I just didn't like the error message.
And I've done trips where I've been gone for a couple of weeks and come back and they reconnected fine.
But I thought 50 days, you know, this this may never work. I may have to redo my Z wave setup.
And I got home and I completely had forgotten about it until I was walking around outside and I noticed my automatic sunset lighting coming on.
And I thought, oh, yeah. So not only did it just pick right up, but it's working with the automations just like it always did to it.
It just connected. No problem. And I can go in and I can do a Z wave repair network.
But if you're looking for yet another option to control outdoor stuff and for some reason,
maybe Wi-Fi doesn't work or the devices aren't available, I give a hearty recommendation for Z wave because it may even work for like holiday equipment.
Maybe you only bring it out for certain times a year.
And I think it would just connect right back up and all the automations would pick right up.
Don't have any Z wave stuff. Sorry, Z wave. It I don't know.
I when I when I moved into this house, I wanted to investigate Zigbee and Z wave and all those different protocols.
But in the end, they ended up sticking with Wi-Fi because I've just not had any issues with it.
It just just works fine. And I don't know if that makes a difference you being in a tin can or anything to the Wi-Fi signals and stuff.
But, you know, for the most part, I ended up using Z wave for sensors.
That's an interesting use case because I I generally speaking when I'm building a sensor, it's a temperature sensor or something like that.
Or everything I build is based around an ESP8266 pretty much.
And for the most part, they they just need Wi-Fi, you know, 2.4 gig Wi-Fi.
They just work. I think like 90 percent of my devices are on Wi-Fi.
But I think early on, a lot of the manufacturers that do outdoor stuff like lighting and sprinkler controls and whatnot, I think they just went all in on Z wave.
So a lot of the outdoor equipment that I have found that is ruggedized and rubberized and all of that is Z wave.
And then these Aotech sensors that I love so much are both USB powered or lithium battery operated.
And when you go with a lithium battery and you use Z wave as the radio, you get a year battery life off one of those little lithiums.
It just looks like a Duracell. Oh, man, that does sound good. Yeah.
Aren't they like a mesh style thing? They all communicate to each other, don't they?
That's the other thing that works really nice about them for outdoor devices is each one.
Well, depends on if you buy the right type, but they can extend the mesh network.
And so that's why it's probably a good idea that I run a repair on my network, because when you tell Home Assistant to repair the Z wave network, the nodes sort of rediscover their positioning and kind of set up a new mesh.
And if you've had a device missing for a while and then you bring it back online, it's generally a good idea to run that repair so that the mesh network is stronger.
I really need to investigate some Z wave stuff.
I kind of feel like maybe it's sort of at the end of its era.
You know, there's there's new standards coming out from Google and Apple and I don't know.
And I think most stuff now has enough horsepower and battery life to support just Wi-Fi always on.
So it's sort of maybe on the decline, but I really like the ones I have.
They sure do work reliably.
And I just got a little stick that plugs right into my Raspberry Pi and Home Assistant detects it and just manages the whole Z wave network for me.
I can manage all the particulars, like how often a device updates right through the Home Assistant UI.
How did you manage remote access whilst you were gone, like SSH tunnels and stuff like that?
Yeah, I am a fan of the good old simple SSH tunnel.
When I'm coming into the studio, that's WireGuard.
That's all the connections into the studio.
I'll use WireGuard and I love it, man.
I've got it on my phone. I've got it on my tablet. I got it on my laptop.
But if I want to connect into the RV remotely, which does come up, especially when there's things that I forget at home on my file server, you know, sometimes SCP gets the job done, Alex.
We've all been there.
I've talked about this before on Linux Unplugged, but I don't think I've ever mentioned my super sweet self-repairing SSH tunnel powered by SystemD setup.
I was trying to get another S in there.
But it is what I have, and I have a couple of resource links in the show notes, and I set this up on all of my, well, all my systems, really, for the most part.
I've started doing this on my laptop, too, because it's just, I like having a backdoor in.
And what I have done is set up a SystemD unit file that starts as a service in the background and it does an SSH connection to a DigitalOcean droplet.
And then from wherever I'm at, I can use that DigitalOcean droplet as a jump host.
I log into that droplet and then I jump to whichever machine I like based on the port number I've assigned it.
And that gets around your carrier grade NAT problems.
Absolutely, because the connection is it's being initiated like on the Raspberry Pi or on the laptop and it's SSHing outbound and then it's connecting to the droplet.
So it's not an inbound connection to the RV.
It's an outbound connection and SystemD monitors that.
And if it goes down, it restarts it automatically.
That's really nice. I think I've used something similar when I wanted to kind of get out from behind a corporate firewall.
I probably shouldn't have done that. It was probably very much against their I.T. policy.
I did the same thing, though. I even had like a whole virtual Linux box I used to remote desktop into so I could watch YouTube.
Oh, yeah. Yeah, that was it.
You see, you know, back in the dark ages before mobile phones were a thing, like text messaging your wife was a pain in the butt.
Whereas now it's just so easy. You don't really even think about that kind of stuff.
But you can you know, once you've got an SSH tunnel set up, you can you can route everything through it.
So, I mean, I've mentioned SSH shuttle before, for example.
But there's all sorts of stuff you can do, like remote port forwarding or local port forwarding.
So let's say you have a database running on a system and you want to give your friend access just, you know,
whilst you're doing some dev work or something, you could do remote port forwarding so that they could connect on their local system to a port.
And it's as if they're on your machine for a few minutes.
There's some really cool stuff you can do with SSH. Maybe we'll touch on it one day.
Yeah. And I'm also happy to report that port forwarding works through a jump host, which is fantastic for me.
So I can get to my sync thing, Webman UI from the studio and I can set up a sync between the studio and the RV from just the one location.
It's really pretty great. And the kind of peace of mind, too, that I have this private low end dedicated droplet.
And that's the only thing my RV is connecting to.
And then I can manage what systems I allow a connection in from.
And so it's a pretty nice compromise of functionality and security and digital oceans, you know, firewalls and all that kind of stuff.
I mean, you can lock it down really quite a lot. And it's sometimes you end up locking yourself out.
I've definitely not done that and had to reset the root password before.
But yeah, I've done all sorts of similar stuff.
And you just feel like you're in what's it called, Mr. Robot or something when you're doing this kind of stuff, don't you?
Especially when you're doing port forwarding through a jump host. That actually feels kind of cool.
It boggles the mind when I pull up a Web page that's hosted on a Raspberry Pi inside a dinette booth in an RV that's connected over a MiFi that's being relayed through a droplet in San Francisco.
So are you familiar with the SSH config file?
Yeah.
There's a command you can put in there for each of your hosts called proxy jump.
And that will let you transparently use that jump host that you mentioned.
So, for example, let's say you have a host called server.
You put in host server and then you type SSH server.
You can put all sorts of parameters in there like user, port number, host name, that kind of stuff.
So you don't have to type the IP address in every time, for example.
You can just type SSH server and it will go straight to that IP address.
Another one you can do is proxy jump.
And so you can start chaining multiple SSH hosts together.
And I'm just looking through my config here and to get into my dad's house, I have about four or five different hops.
I think it's five.
So I go from here to my bastion server in my LAN, which then goes to a DigitalOcean droplet,
which then goes to the OpenSense firewall, which I'll come on to shortly at my dad's house, which then goes to the host inside the LAN.
So there's like five different hops there.
And each of those hops only permits traffic from a specific place and a specific IP address on the LAN side anyway.
And so I like to think, even though it's a really complex house of cards, sometimes it's actually quite secure doing that.
Very similar to what I'm doing.
I did not add it to my config file, though, and that is a super good tip.
I think I will, because why not save myself typing extra commands?
That's great. I love that.
I need to write a blog post on ProxyJump because I'll post you a little bit in Telegram right now.
And you can take a look and you can see how you can chain these different things together and take a look.
I think we may have ourselves a future topic there.
But I heard you tease OpenSense.
A little bit. Yeah.
Yeah. So when I moved into this house, I was running PFSense and sometime in January or February, I don't remember, pre the event.
I don't really remember much before the event.
I switched to OpenSense purely because it supports WireGuard.
It's the only reason I switched. And PFSense, to my knowledge, still doesn't.
For this, you know, what's it been, four or five month period, I've had OpenSense at my house and PFSense at my dad's house.
That's been working fine. And we had an open VPN server for our iPlayer usage and that kind of stuff.
But I thought, come on, it would be cool to have OpenSense in both places and then set up a site to site WireGuard VPN.
And what that means is that I can now type in IP addresses of my dad's remote LAN subnet and access them on my local laptop on my LAN as if I'm in England.
Oh, that's the dream. That's the dream, Alex.
It's pretty cool, I must admit.
So I owe my dad a beer or two because as part of that thought process, obviously, I had to replace PFSense remotely.
Now you think about this. I want to paint you a picture for a moment.
Oh, God, I am already thinking about it.
You want to remote install a firewall that only has serial console access.
So think about what you need here. You need a null modem cable.
So I'm running this on an APU2D, I think is what it's called, PC Engine's integrated system.
OK.
So I need a serial null modem cable to convert the serial console output to USB.
I need him to get his ThinkPad, put it next to that box in a cupboard dangling an ethernet cable out the side.
I need him to get me a USB stick so I can flash OpenSense onto that and then get him to put that into the APU2 so I can boot from that.
But think about this, right? When you're installing a firewall, what don't you have?
Internet access, Alex.
Correct.
And so my damn arse thought it would be a good idea to try and remotely install a firewall from America in my dad's cupboard in England when he barely has 3G in his house.
Oh, no.
So he and I were resorted to SMS text for a few, maybe about half an hour, whilst we tried to figure out which cable wasn't quite plugged in correctly.
And I was expecting to be reduced to Telegram so at least we could send pictures, but no, we were reduced to SMS and MMS didn't seem to work.
So, yeah, that was a fun half hour.
I really apologize to my father for putting him through that.
So I've got him plugged directly into the Virgin Media modem in modem mode, so there's no NAT going on or anything.
So the ThinkPad itself has a WAN IP address, so you don't want to do that for very long on a Windows machine.
And then I'm connected via TeamViewer into his laptop doing the install of OpenSense through Putty and a console session, which went flawlessly.
It took about 20 minutes to install OpenSense. That was no big deal.
And then the moment of truth comes. You have to unplug the laptop and plug the firewall in in the correct order and trying to make sure that the WAN port was connected to what it was before.
And there's just a lot of stuff that could go wrong.
And there's just that puckering moment where you're like, right, disconnect it, go on, just try.
And then you just pray that there's internet. And there was this horrible five minutes where he wasn't getting a WAN IP address, he was getting a 192.168.100.10, which I think means that the Virgin modem hadn't detected that the Mac had changed or something.
So I got him to power cycle the Virgin Media modem and it worked.
Wow. Wow. It would have been incredible if you could have had like a camera and, you know, Telegram, like you were saying, like that would have made it so much simpler because you could at least exchanged pictures of what was on the screen.
Yes. Yep. It reminds me of a project I heard once that was a Python script that would take SSH commands in over SMS.
So you couldn't interact with it, but you could send commands over SMS.
My old UK server that I didn't bring with me when I emigrated is at my dad's house.
And that's I power it on once or twice a week, do my ZFS remote replication backup and turn it off.
Now I do that over a WireGuard VPN site to site. So it's even better than before.
But yeah, I don't know. There's got to be some way of doing a backup like that. But in reality, how often are you reinstalling a firewall?
Well, in this case, would it have helped? Right. Because you were taking out the Internet connection. So even if you had some sort of remote management card in that server or you had a second PC there that you could get a complete remote desktop session, it would have been disconnected when you took down the firewall.
True. Yeah. I need a backup Internet connection. That's what I need.
You know what you need is a modem. Just a good old dial up modem.
Yeah, maybe. Maybe it actually would have worked in this case since you're just dealing with a serial console. But that was as ridiculous as it sounds.
Back in the day, what we did, what I had to do, I would have clients that had really serious business like they have to transfer medical records on this particular hour.
And they had a T1 line, which was one point five megabits, I think. And it was a thousand dollars a month. And it would go out. It would go out.
That is painful. Oh. And their backup was a fifty six K modem that was actually sufficient.
It was just slower. But the T1 was supposed to be for reliability.
And I remember just thinking how funny it was because we had these procedures where after the transfer was done, the office lady would go around and unplug the phone from the back of the modem.
And then like an hour before the procedure was to start, she'd go up to it and plug the modem back in.
And that was the security control. I went for a hotel for a little while.
And I remember the night management manual had it. You have to go and replace the tapes in the backup server.
And I thought, oh, yeah, we had we had people that shared that job.
It was there. They were on tape duty and they'd had to drive it down to the alternative location, rotate the tapes and drive it down.
Crazy. So talking of backups and stuff like that briefly, one of the coolest features I discovered in OpenSense, besides the native WireGuard support, is you can back up your config files natively to next cloud.
We'll all be dipped. It sends it to next cloud. Have you seen how large it is? It must be pretty small, right?
It's a few kilobytes of XML. Let me go and have a look.
You could just run that forever then and never have to worry about eating up your space. That's great.
It versions it every day. So the file names have, you know, config firewall dot KTZ dash date stamp timestamp at 1 a.m.
It's one hundred and twenty kilobytes every day. So I think I can probably swing that.
Now, do you have that pointed at another backup, Alex? One is none.
Yes, but it's it's already my firewall backup. I mean, I mean, do I need to back that up more? I don't know. I don't think so.
No, I just I just as the guy who recently deleted some data, I have to give you a hard time. That's my job now.
Yeah. Well, I actually think having lost most of the previous weekend, actually previous week to getting the site to site VPN working, I am going to make sure I back this up with my life.
Right. Because the open sentence documentation, God love it. Particularly the bit for WireGuard was about two years old.
And so a lot of it was kind of in the right ballpark, but didn't really work properly.
The site to site VPN thing is still old, so I'm going to rewrite that.
But I've rewritten the man page for OpenSense and WireGuard, and that was merged this week.
So it's one of my first proper like major open source documentation contributions.
No kidding. You didn't tell me that. I'm really pleased with that one.
That's a solid contribution to because I was sort of turned off from OpenSense when I reviewed that and I thought this looks really out of date.
Maybe it isn't complete. Maybe it's not very good. And I kind of just moved on.
I'm not joking. It wasn't complete and it wasn't very good.
So, yeah. Wow. That's so great.
Hopefully the new one is there. And I just want to underscore that point to people.
Anybody that's listening that's wondering how they get started with contributing to open source.
There are many, many ways you can do it. Code is just one and arguably one of the least important ways.
I mean, obviously without code, there's nothing.
But somebody said to me on Discord earlier when I pointed at the pull request that they were like, oh, that's really cool.
Because when I'm maintaining a project and I'm the guy that knows the intricacies of this particular plugin,
the last thing I want to be doing is fielding user requests about the baby stuff, the basics.
And equally, I don't want to be writing that stuff either.
I would rather that it was someone like you came along and did a good job writing the documentation that frees me up to do what I'm good at.
And I hadn't really thought of it quite so clearly as that, so concisely as that.
Yeah, it has a real benefit long term because it means less questions, which means that developer is saving time. That's huge, really.
Yeah, so I found that the whole merge process only took a few days.
So for those of you that aren't on GitHub all day, every day for your day job, the process is really straightforward.
You go to the repo that you want to contribute to.
So in this case, it's the open sense docs repo.
You press the fork button up in the top right hand corner, which then creates a full copy, a snapshot effectively of that Git repo at that moment in time under your username.
You're then free to make all the changes in the world that you want for as long as you want.
If it's a particularly busy repo, try not to make it more than a few days because otherwise things will get out of sync and you'll have to have resolve merge conflicts.
But in this case, there's not very much churn in the open sense docs repo.
So it was on my computer for like a week and that was that was no problem.
So once I'd finished writing the article, the next thing that I did was I opened what's called a pull request, merge request, pull request.
They kind of mean the same thing. It's just semantics.
And what that does is it asks permission of the open sense repo owners permission to say this guy, Ironic Badger, wants to make these changes to your repo.
Is that OK? And we had a little bit of back and forth about some of the wording and a few tweaks here and there.
And I made a few changes based on his comments. And after a few days, wouldn't you know it? Merged.
And that's it. You're a contributor to open source. It's as simple as that.
This really makes me appreciate an aspect of self-hosting that we've never really touched on.
And that is you can actually make a difference on the projects in a way that is maybe even not code related and it benefits more self-hosters and it makes what you use better.
That's just an opportunity you don't have when you use a service that's hosted, say, on Google's cloud or Apple's cloud or whatever it might be.
There's just no opportunity for you to have any voice there. You have no impact on its direction.
And almost all the software that we run on our servers for self-hosting stuff is open source.
It's free software and you can actually make a difference. That's a big deal with self-hosting that we don't talk about much.
It does feel scary.
Even sat in this chair as a guy that has been working in DevOps now for five, six years, whatever it is, as my day job.
I still got a little bit nervous when I pushed that merge request button, that pull request button, because you're putting yourself out there.
You're putting yourself out there for judgment and sometimes people are going to say no.
But in my experience in general, most people are just happy that somebody else is contributing.
If it's a good quality contribution, then just go for it. Give it a go. What have you got to lose?
There has to be more things like this that our community could have an impact with various self-hosted open source software.
It's maybe something for further discussion down the road.
Now, you're all about power monitoring and stuff like that, aren't you?
I have been getting more and more into it, yeah. I don't have a great solution now that's tied in with Home Assistant.
I have a Victron system that has an app that gives me all kinds of data, but it just lives there.
Now, I'm not going to go into the full details in this episode. We'll save it for a future episode.
But I would like to draw our listeners' attention to a 100% open source hardware and software Raspberry Pi whole home power monitor project by user David00 over on Reddit.
Okay. Well, this is starting to check some boxes.
Yeah. Yeah. So like I say, we are going to save the full reveal for this thing for probably a couple of episodes time.
But in the meantime, please check the show notes for the link to a flyer that David's put together.
Now, we don't stand to make any money out of this, David or I, we're just trying to get together a group buy.
So the reason we're doing this is because there are a bunch of you need to buy a few circuit boards, get some custom circuit boards made up,
some fuses, a few components, nothing major and some Raspberry Pis.
And at the quantities that, you know, just one or two units would be, it's not really cost effective.
But if we're able to get, you know, 50 to 100 people together that are interested in building these things, then it starts to make a lot more sense.
And we're looking at sort of the $20 price range for a kit here.
So what this thing allows you to do is it allows you to monitor the energy going into and out of your house and then export that to a Telegraph Influx Grafana stack.
And then obviously that will be compatible with Home Assistant as well.
You can monitor up to six individual circuits. You can see in real time how much power they're using, you know, current wattage, all that kind of stuff and voltage.
So if you are at all interested in monitoring solar, it will also monitor inbound as well as outbound power.
So there's all sorts of different things you can do with this.
I wonder if it'd be compatible with my setup. I'm going to seriously look at this thing.
Now, I think the next step for everybody is to, if you are at all interested in this project, take a look at the link in the show notes
and then reach out to me on Twitter at Ironic Badger or self-hosted at JupiterBroadcasting.com on the email and just let me know what you think.
And if that $20 price point is of interest to you, if we get enough interest, we're going to put together a group buy probably and then get these things shipped out.
And maybe we could come to some agreement because there is going to be some kind of soldering required.
So there is a slight downside, I'm sorry to say, that you might have to do some self, you know, some assembly.
But I think it's a good starter project for a lot of people.
And there isn't really much else like it out there on the market in that similar price bracket.
It looks pretty cool. So the idea is that it's a tool that will give you real time information on your power consumption.
Solar is on here, too. Generator status. That's awesome.
That's exactly what I need. And monitor six individual circuits. So that's I wonder how that would work for me.
This is pretty neat. The PDF is pretty cool.
The way that you monitor the actual current usage is you use what's called a CT clamp and that basically just clips over the cable.
So there's an electrical field generated as current flows through a cable.
And what these CT clamps are able to do is measure that somehow. I think that's just incredible.
You don't need to splice into the cables or anything like that.
And what these CT clamps generate is a very small voltage somewhere between zero and one volts.
And then there's an integrated controller chip that reads that value and interprets that to say, OK, well, that means there's three amps flowing at this voltage.
Therefore, you're using this number of watts. Super simple to do.
And hopefully we can get some interest. Yeah.
So it's not very invasive to set it up, it sounds like. No, no.
And then the software to actually do like all the data collection and whatnot is also open source.
It's a cool little project. You can put me down. Put me down. All right.
I thought you'd be interested. Yeah, I like it. Looking at the GitHub project, too.
I like what I like what I see up there as well. We'll put links to all that stuff in the show notes.
And yeah, please let me know if you're interested. Yeah, I could always use another Raspberry Pi.
No, what have I done? You know, it's funny, too, is the RV might be in good, good shape now, heat wise.
But now the studio heats up because the afternoon where we have the studio servers in the garage and the sunlight just bakes that garage in the afternoon.
So it's about 92 degrees out there right now. And I went out and set up one of those portable air conditioners.
So from the fire into the frying pan, Alex. Always, always the way.
Well, before we officially in self-hosted 24, I'll mention the contact page self-hosted dot show slash contact.
And while I'm on a roll, self-hosted dot show slash Discord for the community.
And so, yeah, please do go and check out the Discord. It's hopping these days.
We've got nearly 1500 members. It's getting pretty crazy over there.
So thanks very much for listening, everyone. That was self-hosted 24.
