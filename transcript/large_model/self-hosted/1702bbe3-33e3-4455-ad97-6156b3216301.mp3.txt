Coming up on Self Hosted 13, Alan Pope from Canonical joins us and Alex crashes a drone
into a tree.
I'm Chris.
And I'm Alex.
And this is Self Hosted, episode 13.
Welcome back to Self Hosted, everyone.
We start today with a special guest, Mr. Alan Pope.
Hey, Popey.
Hey, how you doing, guys?
Great.
I appreciate you coming on.
And honestly, I think our topic today, I think you're going to make me put my words in my
emotive when you have to eat what you said, because today Popey is going to join us and
convince us why IRC is not dead.
When I went on air and said IRC is totally dead, but I was actually just being a little
click baity.
So I appreciate you being here.
You triggered me, Chris.
You triggered me.
Alex, before we started the show, you and I were talking drones, and I discovered this
week that you managed to crash a drone into a tree.
And a car park and a building.
And so to be clear, it's not one of the DJI balloon simulator drones.
It's a racing drone made of carbon fiber that does 70 miles an hour.
And yeah, this thing ended up in a tree.
And there's a video in the show notes, one of my buddies made, where we have to fly another
drone with a rope tied to it over the tree I'd crashed into to actually shake the damn
thing out of it.
So yeah, that was a lot of fun.
That was my Sunday.
So you threw another drone at that drone?
We tied a piece of string or a rope to the bottom of another drone that I have, flew
it over the tree that it was stuck in, did a sort of loop-de-loop to try and tie it in
some kind of like a Maypole style situation around the tree, and then used the quad that
had just flown over with the rope as like an anchor, like a barb fishing hook or whatever,
to shoot the tree.
And it all came down and I didn't lose any drones.
The only thing that happened was I snapped an arm off the drone, which sounds like a
big deal, except for the fact the frames that I use have a lifetime warranty.
So I just email them a picture and they send me a new one for five bucks every time I actually
have to cover shipping.
Do you send them a picture of the drone in the tree or just the drone that's broken?
You have to send them a picture of the carnage.
I posted it on Twitter about how I cracked the arm of this thing, but you can maybe see
how I can bend this thing.
That doesn't look like it should do that.
No, that's pretty bad.
We will put a video to this in the show notes.
Were you trying to use toilet paper at first to recover this thing?
It looks like toilet paper, but it's actually a piece of AT&T rope that they use.
Like fishing string through cable.
It can hold like 2,000 pounds or something crazy.
So you were being a fancy fly boy and you were flying too close to the trees.
What happened?
Yeah.
Or I just ran out of talent and... Well, I have no excuse because I flew my
drone into the side of a barn the other day.
Can I say the tree leapt out at me?
I think barns are inanimate, aren't they?
Yeah.
Yeah.
Totally.
Totally.
Well now, before we prove why I was wrong about IRC, you have been writing recently
and I have been sneaking into your computer at night, checking your documents and following
along.
I don't know if I should be creeped out about this or... I think I'm creeped out.
Well, you did give me pseudo access after all.
Oh yeah.
Yeah.
Maybe I should revoke that.
But Docker Compose workflows has been on your mind.
It's funny that this came up in the show because this week I've been told by a couple of individuals
that Docker is dead and I asked them if they've met my friend Docker Compose because I think
it's sort of breathed new life into people using Docker online.
Every project you see now, somebody dropped some Docker Compose example along with it.
Why do they think Docker is dead though?
That's what I want to know.
I am the worst person to ask about Docker because I never use it for anything.
Well that's the way.
Hold on.
That's a good perspective.
I think there's one service that I installed, two services that I installed via Docker and
that's only because that's the upstream supported way of doing it and I couldn't find a better
way and that's Mastodon and Discourse and they were both upstream supported ways.
So that's what I used.
I don't feel part of a Docker ecosystem or I don't feel like a power user or anything.
I just pasted a command in a terminal and the service started and I was like, okay,
I'm done.
But that's how it goes the first few times, right?
With anything, not just Docker.
And that's really what it's supposed to be like, you know, if you're consuming some software
and you want to start a service, you just want to run a command.
You want to run whatever the right command is to get the thing working and then walk
away and leave it and then come back to it three months later and think, how did I set
this thing up?
I've got to do some software updates on this and I don't know.
I had to relearn like how to do it all and that was a learning curve.
But yeah, once you get over that, it's fine.
Yeah, that's a very fair assessment of it.
That's really true.
I just recently went back to a system I set up a couple of months ago and went, oh, oh
right.
I have this URL.
I go to admin it.
I have this URL where I go to use it.
Okay.
Yeah, right.
I can remember all of this.
And maybe that's part of what appeals to me about some of these newer install techniques
like using Docker Composes.
I can go read a compose file and it's all in YAML and I can have a pretty good understanding
of what it's doing.
But Alex, to answer your question, I think it's a combination of answers.
Fundamentally, Docker isn't doing anything that other technologies can't do because it's
relying on underpinning technologies that are built into the operating system.
So a lot of different vendors have different takes on how to solve this problem.
And a lot of times they are better integrated into their overall product than Docker itself
is.
And when you combine the technical aspects of what a container actually is and how any
Linux host operating system or many other OSs now can run them and the fact that many
distributions have a preferred container technology that tends to work better on their distribution
and ecosystem, I think it's understandable that people kind of see Docker as sort of
being pointless, not necessary.
And then you have the VM crowd as well, who is maybe not even totally bought off on the
idea of running applications in containers when they could just run it in a VM system.
I was about to argue with you that various different people didn't have their own versions
of container runtimes.
And then I realized that Red Hat have their own, Docker have their own, VMware have bought
Pivotal, so they're going to have their own, so yeah, you're totally right.
I can see why people might come to that conclusion.
And if I was on the Red Hat platform, I might use Podman.
And I could be wrong, but if I'm on Ubuntu, I'd probably use LXD.
Yep, I use LXD for everything.
Right.
And there's even nice scripts or applications built around those tools to make setting up
environments super quick and fast and kind of a no brainer when you're on those platforms.
So my thrust for bringing this up really was that one of the first questions I see and
hear from people getting into containers for the first time is, is there a UI?
Is there a GUI?
Is there a web app that I can run that exposes this stuff to me?
And my general answer is you don't need one.
What do you think?
Do noobs need a UI?
What are noobs doing running containers?
They're running unraid boxes or free NAS boxes or...
Which have web UIs, don't they?
Or Raspberry Pis.
Running what though?
You don't, nobody, nobody goes out to install a Raspberry Pi.
You go out because there's an appliance that you want to put on a Raspberry Pi, or there's
some device you want to build around a Raspberry Pi.
Or you just think, hmm, that's $25, I'm going to buy one.
And then what should I do with it when it arrives?
And put it in a drawer with all the others.
I have got a couple of Raspberry Pis here in service.
One is my DNS, so it does Pi-hole and blocks adverts and stuff.
That has a web UI.
I almost never use it because I just don't care.
It just works.
Like if I have to whitelist something, then yeah, I consider myself expert.
So I could use the command line, but the web UI is nicer.
And for other things that I run on a Pi, they have web UIs as well.
So I don't know, I think it's just a nicer experience.
I could see the argument for being hardcore and doing it on the command line because it's,
you know, you have total control and power.
But I also quite like a pretty graph now and then.
I don't necessarily disagree in a couple of ways.
And I recently got a note from a listener who said, Chris, you're always advocating
people just use the command line.
And I have kind of in the last year and a half sort of transitioned to just learn the
command line because it's sort of a universal tool that will always work.
But working with team members that learn in different ways than I learn here on our podcast
team, I realized that for some of them, they want to see what the end result is that they
could achieve if they invest the time to learn the whole stack.
So if they can do something that gets them deploying software and turning on things and
actually using the end product that gets them excited and motivated, it's worth it.
So they'll use a GUI to sort of skip learning how to get on the command line, learning how
to run Docker and end up running the application.
And they'll go right to using the application.
They go from zero to using the application.
They go, okay, this is great.
This is worth it.
And then they kind of walk it back.
So in that way, I kind of think, yes, it is important to have a GUI tool because different
people learn differently and some people are extremely visual learners.
But I want to just sort of caveat all of that with, I just want to remind us that sometimes
some groups do actually put some form of design into their tools.
I remember, I think I might even have been having a conversation with you, Poppy, about
having folks at Canonical look at the syntax of the snap commands or the Docker folks,
they look at the syntax of the Docker commands to actually see if it logically makes sense.
There is some design that goes into command line tools to make them more usable.
So some tools are more usable than others on the command line.
I think for me, it's not necessarily about being a hardcore elite super hacker.
It's about having some way to repeatably rebuild my system when it goes tits up.
I love committing text files to Git and just being able to copy paste whatever that Docker
run command.
I mean, this is how I started.
I used to run one Docker run command after another and just keep that in a GitHub repo
in a text file.
I used Fig when that was new and Docker compose was new.
And as it's gone on, Docker compose has matured.
And now I manage something like 30, 35 containers on a single host with one interface to it.
And for me, I have a single text file now, it's a YAML file admittedly, not a text file.
I have a single file which defines what every single container on my system looks like.
And if I want to add a new container, I have to add maybe eight lines of code because I
figured out what the syntax of that YAML is.
Now that's investment I've made to learn that.
And I will fully admit that for a completely new user, that's not realistic.
However, I think simply asking, is there a UI like Portainer or something like that?
Using that as your crutch rather than actually investing in learning how the underlying stuff
works, over time will bite you in the bum because it's just that question of when you
want to redeploy something, how do you do it?
I mean, taking a few steps to address that, I've started writing a Wiki at home as we
discussed last episode, keeping notes as Chris is doing now, all these things, but nothing
beats the source of truth, which is the file that you use to deploy the application itself.
And for me, compose.yaml is the one.
I think you're two steps ahead of me.
I've just started a Wiki at home to keep track of some of these things because I've now been
bitten in the butt where I, like I said, didn't remember how I set up the Mastodon instance.
And now I have to revisit the thing because I've got to clean it up or upgrade it or something.
And I think we're in a similar state along that course.
But I think what a lot of people are doing is they want to get to the goal, as Chris
says, they just want to have that appliance working.
They want to have that thing installed and they want the fast track to get it in.
And what they don't have is the blessing of experience that you've had of things going
tits up over and again, and you learning from that experience and deciding to write stuff
down so that the next time it does, or hopefully it doesn't, you've got a document that you
can refer to to get your system back in order.
And my pie hole has never broken, but it is a Raspberry Pi sat in a warm room and it's
using an SD card for its storage.
So inevitably it's going to fail at some point, right?
And I couldn't tell you off the top of my head how I installed that thing.
I probably just did curl pipe to bash or something like that.
I think appliances are a different use case altogether though.
I'm more talking about those people on FreeNAS, on Unraid, or maybe people like Open Media
Vault users or people like me that just run Debian with some stuff, actually Ubuntu these
days that'll make you happy, as my server OS, and I just run a bunch of containers on
top of that.
The other thing to think about, of course, is discoverability.
App stores have shown us that people like to browse through a list of stuff and click
on buttons and install things to try them out.
There are some good resources that I use to kind of counteract the gooey discoverability
versus the command line stuff.
One of those is the awesome self-hosted list, which we'll link to in the show notes.
And the other is a list of containers published by the linuxserver.io team.
That's at fleet.linuxserver.io.
And you can actually just look through the list and it will take you through to the project
page and show you how to deploy each one and all that kind of stuff.
And even when I was actively involved in that project, which I'm not anymore, I used to
find containers on there all the time.
I didn't even know they would have been working on.
So, there are ways to find this stuff, even if you don't have a UI.
I think that's a good point is now the Linux ecosystem has matured to the point where we
have these different app stores and places people can go and browse a list of applications,
whether they're containerized or not, is light years ahead of where we were going and finding
all the individual components and compiling them from scratch like animals.
Now it is a point and click user interface and you can stand up a service or a bunch
of services really super easily these days.
Too easily, maybe sometimes.
Well, yes, I'm a danger to myself.
I mean, what I mean by that is that if the barrier to entry is so low that you set something
up and you have no idea how you did it, in six months time, maybe you set Nextcloud up
using a snap or a container or whatever it is and you go, where's my actual data live?
And you don't really understand how you did it and you wipe the wrong drive and oops,
it's easy done.
Yeah.
And the bigger worry is if other people depend on that service, like if you set up a public
service like a Mastodon instance and other people are using it and you haven't kept up
with your security updates or you haven't set it up using the best practices, then people
might come knocking on your door because their data is compromised or their features are
not available anymore.
And of course, it's going to happen on a weekend.
When you're away from a keyboard and your only interface to your Docker containers is
SSH on your mobile phone.
This is why you need an IRC room filled with community members.
And of course, everyone knows that IRC is exploding with popularity in 2020.
Oh, Chris.
So I made the bodacious claim, although I was a little out there, that IRC was dead.
And that actually came from a Fosdom talk where a member at Fosdom said, I'm not joining
your open source community because it's on IRC.
I'm of the GitHub generation and I want to use Discord.
I want to use Twitter.
I want to use discourse, but I don't want to use IRC.
Oh, my friends, we all chat on Slack.
We don't chat on IRC.
And he threw up some numbers like 13 million Slack users versus 400,000 IRC users.
But there is a tinge of sadness when I talk about this because obviously you can self
host IRC and you can run other things in IRC as well.
How many of those Slack users actually want to be there versus the IRC users, though?
Yeah, fair enough.
I'd say a decent percentage are there simply because their employer mandates it.
Yeah, I mean, there are some definite communities that use Slack, but you're probably right.
Same with teams.
It was a big number for teams.
Yeah, I've been in slacks where it was the network effect.
There was one individual who pushed everyone towards a Slack.
And the second they left the company, everyone left that Slack completely.
So nobody is in that Slack anymore as a result of it being actually not what anyone wanted
it to use.
And I realise, I appreciate that there are younglings who are using new modern tools,
like you say, like Slack and Twitter and discourse, and that's fine.
But it turns out there are still existing communities that have been around for a long
time who do still have a presence on IRC.
And it's actually not that painful to use IRC.
Yeah, okay, if you're advocating for the use of ERC or BitChecks or one of the, you know,
more quirky IRC clients, then for a new user, it's a bit frosty.
But there are plenty of other ways to access IRC that are not quite as comparable with
Slack, but nowhere near as frosty as it used to be.
IRC Cloud is a great example of a very modern IRC client that I like to use.
It does a lot of the things that Slack does, like image previews, URL previews, avatars,
all just based on IRC.
And the thing that pains me the most, and obviously our live stream for Jupiter Broadcasting
still IRC, the community is going right now, it's just over my shoulder, is it's all text.
At the end of the day, it's all beautiful, wonderful, gorgeous text.
And I would think that would be extremely appealing to the community at large.
I think there's certainly a compelling argument for getting down to raw ASCII.
There are times when I sometimes want to paste an animated GIF or, you know, something richer
in an IRC channel, but really you've got to think about all the other people in the room.
What is the purpose of this channel?
Why does it exist?
It exists to discuss the development of a piece of software.
And you've got a whole bunch of people from different cultures, perhaps different connectivity.
And if you're respectful of those and just use text, then it's accessible to everyone.
Absolutely, and you could layer on client richness on top of that.
So if you're someone that wants to see that animated GIF get a preview, then you could
elect to use a client that shows that.
Right.
I mean, if I'm using IRC Cloud, which I have done for a couple of years now, it feels very
much like the more modern, richer clients.
Actually I think Slack have not really done an awful lot in the last couple of years.
And that's given an opportunity for some of the other clients to catch up.
Whether it is the newer IRC clients or things like Mattermost and Discourse and Rocket Chat,
a lot of them are catching up with the richness that Slack has.
So they're getting to be mostly on a par.
And yeah, I will concede IRC is a bit behind all of the others, but there are still, like
I say, a bunch of projects that are still on IRC, and so sometimes if you're working
in the open source world, as we do, it's useful to maintain a presence on IRC so you can talk
to these people.
It does one thing, it does one thing really, really well.
And there is the saying that there'll be a few things left after a nuclear holocaust,
cockroaches and IRC.
And maybe ham radio.
I mean, I look at IRC, it's almost like it's the communications protocol and then the client
can add the richness.
I know I've just said that, but I mean, think about it.
One of the traditional complaints about IRC is that, well, I'm on mobile and I have varying
connectivity so it's hard for me to follow a conversation, Slack handles that really
well.
Well, no.
An IRC client that has a server log that is keeping track of the conversation and logging
it to a SQL database and then disseminates it to a client when it reconnects works perfectly
well.
Quozzel can do that.
You can host it yourself.
It's doable today.
I've used Quozzel for many years and the app that makes it the best IRC experience in my
opinion is Quozzel Droid.
Red Hat use it for most of their internal communications.
So I'm on eight, 10 hours a day and I get all the notifications through to my phone
and it just works.
It's just great.
I went for an alternative approach and I used to use IRC or I-R-S-S-I if you want to spell
it out.
I used to run that on my VPS and I would miss notifications when smart, I've been using
it since before smartphones were a thing and when smartphones became a thing, I quite liked
the idea of having that connectivity to IRC on the phone and I didn't get the notifications.
There's an app in the Android App Store called IRC Notifier and you load a plug-in into IRC
and then authenticate it with your Android device and from that point onwards, you get
push notifications through to your phone when people mention your name or highlight you
in some way or PM you on IRC.
So I started to get that availability of the messages people were sending me and the conversations
people were having.
I didn't feel left out of the conversations but the problem was I couldn't then reply
because they were just notifications and so I did find myself leveraging that SSH client
on my phone and I would SSH into the VPS and use IRC inside a screen session so that I
could bash out a quick reply to someone if it was urgent and then disconnect from SSH
when I'm done.
Okay, when you say all that, I know why people are switching to Discord.
And that's quite brutal, I mean that is between 10 and 15 years ago I was doing that.
I remember being on holiday 15 years ago with my daughter in a pram and getting a push notification
on IRC but something was going on and while I'm pushing my daughter along with one hand
I'm typing in my SSH password on my phone with the other and getting into IRC but it's
possible but things have moved on a bit now and we now have better ways of being on IRC.
The juxtaposition of you, Popey, on one hand you're advocating for UIs to make things simpler
and on the other hand we're talking about SSH passwords on IRC from our phone.
Yeah, I'm not complaining, I love the fact that I could SSH to my VPS from walking along,
having a stroll around the Isle of Wight with my daughter, that was great.
So what do you use for IRC on iOS, Chris, because that was one of the major pain points
I had.
I got iOS in the fall last year in autumn and I just couldn't get away with any clients
that really were as good as Quasildroid.
Quasildroid does look really good so I don't know if this is as good but I just use the
IRC Cloud client for iOS which is just a native IRC app.
I think I might have some unique requirements in that the Red Hat IRC stuff I have to be
on a VPN to connect to it so IRC Cloud wouldn't really work for that use case.
That's sort of the tricky thing is you can both roll your own solution and you have to
roll your own solution with IRC in that regard.
So I'm not going to sit here and try to say it's as easy as all of the other alternatives.
It might even honestly be easier to set up a Mattermost server than an IRC server these
days but there's other aspects of IRC that I don't know what we would do if say we switch
to Discord I guess we would rewrite JBot I guess I don't know.
The bot aspect is a very nice thing about IRC and it feels like it's a Wild West you
can do whatever you want whereas with these other platforms you have to get an integration.
And I think that's one of the reasons why Slack took off so well with open source developers
is you could press a couple of buttons and you'd have an integration that told you whether
your Jenkins was operating correctly and whether your code was landing and if someone had reviewed
your code and so for developers Slack with a few integrations was a very compelling argument
against oh well IRC and I have to write some Python to make my own bot or go and find a
bot that someone's made and create a new IRC account and all that nonsense.
I could totally see why that's more compelling.
So the whole reason we're really talking about IRC and the reason that Popeys on the show
today is he reached out to me a few days ago about something he's just put into a snap
is that right?
Yeah it's actually been a snap for a while but we've improved it.
It's an IRC client shall we say but it's a web front end so you can effectively think
of it as self-hosted IRC cloud so you install it it's called the lounge and it's a fork
of a previous project that was called Shout IRC.
You install the lounge on your own machine you create an account for every user who's
going to use it so multiple users can use that IRC client and then you just point your
web browser at it and log in.
Once you've logged in you can then sign into all your different IRC networks and the connection
is then maintained from that the lounge server to all of those IRC networks and so you don't
have to run any client anywhere because the lounge is the client and all you need to do
is point a web browser at it and you're an IRC and you can point a web browser at it
from anywhere like from your desktop or from your phone.
So I have a Chrome window on my my desktop but it could just as easily be Firefox or
any other browser and that window points to my lounge server which is connected to all
my IRC but then I also have a similar browser window on my phone which points to exactly
the same URL and connects to all the same IRC channels.
So I can be on exactly the same IRC channels on my phone in a browser with the rich content
that you see with you know images showing up and stuff like that that you would see
in something like IRC cloud or you know other modern chat systems.
It's made a real change to me because I'm now self-hosting my own IRC client again instead
of relying on IRC cloud but also I can access it from anywhere on the phone and the desktop.
That's great I like that a lot and it's something that the Linux server team containerized quite
some time ago so you can get it in a container as well if that's more up your street.
It looks like the UI is really sharp too it probably is I would even say competitive with
IRC cloud do would you agree having used it?
Yeah I went through a process last week of disconnecting from all my IRC networks in
IRC cloud and closing it and now I only use the lounge.
The thing that I love about it is because it's self-hosted I feel a lot more safe it's
logging everything on my own server and a change that we made last week to the snap
because we've got it published in the snap store we integrated certbot into the snap
so now once you've installed the lounge you can then put an SSL cert on it with one line
and then it puts a cron job on your system automatically and it will just keep refreshing
that SSL cert so I've now got SSL between me and my lounge server whether I'm on my
phone or I'm on the desktop and then from my lounge server to my IRC networks I've got
an SSL connection there as well so I feel a lot happier.
I always had this nagging thing in the back of my head that I was there's nothing wrong
with IRC cloud it's great but all my IRC logs are hosted on IRC cloud and there was that
little twinge in the back that I just thought I don't like this.
You're kind of losing one of the best things about IRC by doing it on IRC cloud and I do
it out of convenience but I think of this weekend I'm gonna make the switch to this
this looks so so nice do you happen to recall what the database back in that it's storing
all of this in?
The logs are free text stored on your file system I love that it also does push notifications
because it's in a browser I just press the button to say enable push notifications and
now on my phone I get notifications when people mention me on IRC I click on them and it takes
me straight into the browser window it feels like an app you know it's it's just a browser
window just like all the cool kids use these days.
It's so nice to see something like this that you can host yourself ah I love this kind
of stuff Poppy I love it the lounge we'll have a link in the show notes of course I
don't know if I'll switch from my beloved causal droid but we'll see I'm gonna I'm gonna
try that and spin it up at least.
People who use IRC who have used it for years are often totally wedded to the solution they've
got like IRC for me I don't care what IRC client anyone else uses this is God's own
IRC client and you will never make me move from it right but you'll hear people just
as passionate about Quossel or any of the others the guys in France at Canonical have
their favorite IRC client and that all the guys in France seem to use the same one and
all the guys in the UK all seems to use IRC I don't know why whether the translations
are better or different or what I don't know but people are super passionate about their
IRC client which is a thing you never get with slack because there are no really first
class alternative clients for it it's just not a thing you just don't have that choice
right yeah it's very true that's a good point so Chris I have a question for you yes sir
why are you in your dressing gown oh outing me like this on the show the furnace is broken
in the studio and I'm doing a podcast when it's 30 degrees outside so I figured you know
I'd get comfortable and put my robe on so the furnace broke in your RV and the studio
in the same week well the furnace in the studio has been going out for the last couple of
years and it was just this winter that it kind of gave the ghost out you know just like
some sort of like final thing happened and it's just falling apart it works but it only
it only heats the upstairs so like 50% of the studio is livable good job heat rises
hey I know but when I do get it fixed I'm gonna need somewhere to document the fix Alex
do we have perhaps a wiki the self-hosted wiki is in full flow we have a group now with
about 15 or 16 people already since the last episode who have started contributing their
free time chatting all day every day about what you know different technology stacks
to use for now we're using mkdocs but we are trying to decide whether to use that platform
or another one called Hugo which is a static site generator that might have some more customization
when it comes to theming but we're early enough in the process that what we're really looking
for right now is good solid content and we're not trying to reproduce stuff that's already
out there on the internet you know we don't want to provide a list of self-hosted apps
because the awesome self-hosted list already does that what we're looking to do is actually
provide you know code snippets docker compose for example snippets of maybe the lounge or
causal like we talked about on this episode just to help people break down that barrier
of entry of self-hosting some of this stuff you know I flashed some tasmota devices the
other week so I'm in the middle of writing up a little page to go on there about tasmota
and what it is and why you might like it but also we'll link back to the particular episodes
in which we talk about certain stuff as well so one of the things I quite often get is
oh which episode did you talk about cameras I don't want to go through the show notes
one by one but if I can search it in the wiki and find the episode that way that's one of
the problems we're trying to solve with this wiki but I've been delighted with the response
I must have had 30 or 40 different emails or telegram messages from people just in this
last few days alone so if you want to be part of it you can go to wiki.selfhosted.show which
will take you to the github pages hosted site we are going to host it ourselves but for
now it's on github pages and be part of it help us choose the tech stack choose what
content goes in there and what the different directory structures and layout and all that
kind of stuff looks like it's going to be a crowdsourced thing so if you want to have
input now is the time I'm really happy to see people that are getting involved with
this it's like really that telegram groups almost too much at this point for me this
is completely throwing me I've got my own wiki on like poppy.com it's just a docu wiki
that I use for keeping some notes but I've also been using Hugo for another project and
now you've mentioned it I'm thinking why don't I just replace my wiki with a Hugo instance
and then I could do it all nicely in markdown I can just use standard git tools to commit
my changes and then automate pushing it live such a good idea use github issues and pull
requests and all that kind of stuff no I just commit to master because it's my it's my wiki
I could do what the hell I want what was it you called me earlier a leet hacker hardcore
leet hacker yeah that must be you now yeah so you're loving Hugo huh oh yeah there's
a theme I'm using on one of my sites I think it's called paper and it automatically changes
light to dark throughout the day so when I refresh the browser if I if it's in the evening
I know it's the evening because the browser just all dims nicely it's really really nice
that is slick don't look out the window and see what the light level is no just look at
your browser yeah who needs it we can automate that my blind is closed I can't see outside
I never never do that so how will the self-hosted podcast end up self-hosting it's self-hosted
wiki stay tuned and find out but in the meantime wiki dot self-hosted dot show if you want
to get involved I guess we kind of need to get a sense of what the interest is to kind
of get an idea of what the traffic's going to be to then decide how we're going to host
it so that's the phase we're in right now it's looking really great though so that's
super neat that's really cool so pope where should people go to find more of you throughout
the week oh gosh well they can go to my wiki I have a contact page but that might be moving
can they find your last will and testament there I had a very funny email actually from
a gentleman who was it no it was on Twitter honey I need to set up a wiki yep that was
great that was very funny Twitter exchange but yes we need to have a morbid conversation
in case something ever happens to me we need a wiki darling yes of course pope you're on
user error which is one of my favorite podcasts yes absolutely oh thank you yes it's lovely
having a an argument with Dan and Joe about all kinds of random stuff we enjoy hearing
the audience questions and trying to answer them so if people have questions for us just
ping us in the JB telegram with hashtag ask error or on Twitter or anywhere we'll probably
spot it I am delighted by how often you are voicing exactly what is in my head even you
are all the way across the pond all the way over there that's worrying it is a bit actually
isn't it it's really quite something you really often echo my thoughts on very many topics
but you deliver them better than I would so it really it is one of my favorite shows as
well and of course rumor has it the Ubuntu podcast may be coming back soon so of course
Ubuntu podcasts it's more than a rumor we're recording first episode of season 13 next
week as we record this boom oh announcing season 13 on ssh 13 I like it right there yes
very nice very nice well thank you Poppy for making it thanks for having me on
