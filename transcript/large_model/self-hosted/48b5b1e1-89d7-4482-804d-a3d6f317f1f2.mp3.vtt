WEBVTT

00:00.000 --> 00:01.360
So far, I think I hate Shinobi.

00:01.360 --> 00:02.080
Oh, no.

00:02.080 --> 00:03.480
I thought I was going to love it.

00:03.480 --> 00:03.920
Yeah.

00:03.920 --> 00:04.420
No.

00:04.420 --> 00:05.040
I think I hate it.

00:05.040 --> 00:06.160
You're supposed to love it.

00:06.160 --> 00:06.660
I know.

00:06.660 --> 00:09.840
And I went and I bought all the cameras before I even tried it.

00:09.840 --> 00:12.800
So I got five Wwisecams.

00:12.800 --> 00:16.080
I reflashed all of the Wwisecams to the RTSP firmware,

00:16.080 --> 00:19.360
so that way I could just stream directly from them over my LAN.

00:19.360 --> 00:23.560
I got a Raspberry Pi 4 dedicated to the Shinobi installation,

00:23.560 --> 00:25.920
set up the Shinobi DVR software.

00:25.920 --> 00:27.600
Or I guess it's not technically DVR.

00:27.600 --> 00:32.120
It's whatever the term is for a closed circuit recording system.

00:32.120 --> 00:34.160
Got it all loaded up.

00:34.160 --> 00:35.560
And I'm just not thrilled.

00:35.560 --> 00:38.020
First of all, by default, it doesn't support motion detection.

00:38.020 --> 00:41.920
That's a plug-in, which is broken right now on ARM.

00:41.920 --> 00:46.840
And it, just three cameras, is slamming the Pi,

00:46.840 --> 00:48.920
maxed out all the cores on the Pi.

00:48.920 --> 00:50.480
That's a real shame.

00:50.480 --> 00:53.960
I mean, I've used Shinobi a little bit.

00:53.960 --> 00:54.680
I'm not an expert.

00:54.680 --> 00:56.920
I've got three Wwisecams feeding into it here,

00:56.920 --> 00:58.760
and it's running on my big Xeon downstairs.

00:58.760 --> 01:01.560
But the interface is a little bit confusing,

01:01.560 --> 01:02.860
I've found at times, right?

01:02.860 --> 01:04.400
So when you're trying to pull in the feeds,

01:04.400 --> 01:06.480
you have to set all sorts of parameters.

01:06.480 --> 01:09.960
Yeah, and I think I may have some finessing to do there.

01:09.960 --> 01:12.560
And I probably should also mention the big caveat

01:12.560 --> 01:14.040
that I did.

01:14.040 --> 01:16.620
I broke my own rule with using the Raspberry Pi 4

01:16.620 --> 01:20.080
in production, and I did not put Raspbian on it.

01:20.080 --> 01:22.040
Because I'm not super comfortable with Raspbian,

01:22.040 --> 01:24.800
and when it does big updates and stuff,

01:24.800 --> 01:27.000
I don't have experience with it to trust it.

01:27.000 --> 01:30.480
I'd rather use, like, an LTS Ubuntu or a CentOS,

01:30.480 --> 01:33.380
something that I just have more faith in.

01:33.380 --> 01:35.480
And I let that doubt get to me.

01:35.480 --> 01:40.840
And I loaded it with a community build of Ubuntu 18.04 LTS

01:40.840 --> 01:43.720
that swaps out Ubuntu's kernel and puts the Raspbian kernel

01:43.720 --> 01:44.420
in.

01:44.420 --> 01:47.680
And I thought, maybe this will work pretty well.

01:47.680 --> 01:50.200
Maybe it'll support all the drivers, but maybe it's not.

01:50.200 --> 01:54.120
And so today, I brought the Raspberry Pi in with me,

01:54.120 --> 01:55.080
into the studio.

01:55.080 --> 01:56.760
I'm going to reflash it over to Raspbian,

01:56.760 --> 01:59.400
reset up Shinobi on that, and then

01:59.400 --> 02:01.680
see if maybe I have better GPU acceleration,

02:01.680 --> 02:03.760
because I need to pull in more cameras than three.

02:03.760 --> 02:05.600
And so if it can only do three cameras,

02:05.600 --> 02:08.060
I don't think I'm going to do a Pi for every three cameras.

02:08.060 --> 02:09.800
I think I'd have to go to x86.

02:09.800 --> 02:11.060
Yeah, that's a bit expensive.

02:11.060 --> 02:13.640
Are you running into issues when you load up

02:13.640 --> 02:17.760
the UI, the web interface, or is it just constantly slammed?

02:17.760 --> 02:20.720
It's definitely worse when the web UI is up,

02:20.720 --> 02:23.480
but it's still very slammed, even when I don't have the web

02:23.480 --> 02:24.880
UI running.

02:24.880 --> 02:26.780
The other thing is, is in Shinobi,

02:26.780 --> 02:29.560
I'm seeing more frame loss, like chunks of the video

02:29.560 --> 02:31.700
go missing, like with encoding errors.

02:31.700 --> 02:34.840
I do not have that same problem when I open up the same video

02:34.840 --> 02:37.960
stream and just pass the URL to MPV or VLC.

02:37.960 --> 02:39.280
Opens right up, no problem.

02:39.280 --> 02:39.880
Yeah.

02:39.880 --> 02:41.560
If I had a tiling window manager,

02:41.560 --> 02:45.800
and I could just put eight versions of VLC,

02:45.800 --> 02:47.040
that might work well.

02:47.040 --> 02:48.440
So you know what I've done in the meantime,

02:48.440 --> 02:50.840
and it's not great, but I've pulled the RTSP

02:50.840 --> 02:52.380
feeds into Home Assistant.

02:52.380 --> 02:53.460
Oh, how's that working?

02:53.460 --> 02:53.960
Pretty good.

02:53.960 --> 02:54.720
I get real time.

02:54.720 --> 02:55.680
I don't get recording.

02:55.680 --> 02:58.760
But I now just have a tab in my Home Assistant dashboard

02:58.760 --> 03:01.960
called Security, where I've put my motion sensors,

03:01.960 --> 03:04.880
my outside cameras, and my inside cameras all on one tab.

03:04.880 --> 03:06.780
I tap that, and it pulls them all up.

03:06.780 --> 03:08.560
So it's really nice just to get a look

03:08.560 --> 03:11.800
at the state of things, that it works really well for that.

03:11.800 --> 03:14.320
We haven't really touched on your camera setup much yet,

03:14.320 --> 03:15.820
and I think we'll probably get to it

03:15.820 --> 03:19.920
in a future episode of the perfect IP camera,

03:19.920 --> 03:23.400
the perfect POE camera, if such a thing even exists, right?

03:23.400 --> 03:23.960
Oh, totally.

03:23.960 --> 03:25.800
Yeah, we can totally do a dedicated episode.

03:25.800 --> 03:29.700
I'm holding on to this why stuff just for a little bit longer,

03:29.700 --> 03:31.280
because I'd really like to figure out

03:31.280 --> 03:33.200
how to make it work for people, because these

03:33.200 --> 03:37.120
are $25 cameras that you can put RTSP support on.

03:37.120 --> 03:39.840
And they make for such a great addition to your home security.

03:39.840 --> 03:42.720
And they support person detection, motion detection.

03:42.720 --> 03:45.600
They have two-way speakers and a microphone, obviously,

03:45.600 --> 03:47.060
for $25.

03:47.060 --> 03:49.240
And you can completely run them offline

03:49.240 --> 03:50.520
on your own local LAN.

03:50.520 --> 03:52.220
So I'm going to stick with it for a bit,

03:52.220 --> 03:54.320
see if I can't tweak my Shinobi config, because I'd

03:54.320 --> 03:56.020
love to come on the show and tell people

03:56.020 --> 03:58.780
how to get it all rocking on a Pi with Wyze cams.

03:58.780 --> 04:02.220
Because for $100, you could have a full camera security system.

04:02.220 --> 04:05.660
For the price of one, not even one Nest Cam.

04:05.660 --> 04:06.640
Yeah.

04:06.640 --> 04:08.860
The other thing is I was not able to get

04:08.860 --> 04:10.520
Shinobi running in a container.

04:10.520 --> 04:12.360
I've had, like, that's the first application

04:12.360 --> 04:14.280
where I bailed on the container approach

04:14.280 --> 04:15.400
and built it on the host.

04:15.400 --> 04:19.080
Bro, you should hook up your container expert over here.

04:19.080 --> 04:20.920
No, I thought about bugging you, actually.

04:20.920 --> 04:23.120
But I thought you were dealing with your own container

04:23.120 --> 04:24.840
issues at the time, so I didn't want to bother you.

04:24.840 --> 04:25.640
Oh, probably, yeah.

04:25.640 --> 04:28.120
Actually, interestingly enough, so I

04:28.120 --> 04:32.280
mentioned stat ping in an episode recently.

04:32.280 --> 04:36.140
And Joe Ressington pinged me a few hours after it aired

04:36.140 --> 04:40.160
and went, Alex, your stat ping is down.

04:40.160 --> 04:41.880
And I'm like, no.

04:41.880 --> 04:44.480
I thought I'd been DDoSed by the show audience or something.

04:44.480 --> 04:47.300
But it turned out I'd actually just been a bit honey badger

04:47.300 --> 04:49.200
with the updates.

04:49.200 --> 04:51.120
The ironic badger goes honey badger.

04:51.120 --> 04:51.760
Right.

04:51.760 --> 04:53.480
So I have this.

04:53.480 --> 04:57.000
I use Docker Compose to do all of my container management.

04:57.000 --> 05:01.280
I just log in randomly and just do Docker Compose pull,

05:01.280 --> 05:03.160
Docker Compose up.

05:03.160 --> 05:05.800
And that's my update process for updating my apps.

05:05.800 --> 05:07.640
It's as simple as that.

05:07.640 --> 05:09.080
I probably should script it, right?

05:09.080 --> 05:12.120
I should probably have DigitalOcean do a backup,

05:12.120 --> 05:15.140
or what's it called, a snapshot via the API,

05:15.140 --> 05:18.120
and then do the updates, and then have some kind of sanity

05:18.120 --> 05:19.080
checks afterwards.

05:19.080 --> 05:21.800
But I'm not doing this for business.

05:21.800 --> 05:24.000
I'm doing this for my own personal pleasure.

05:24.000 --> 05:25.040
You do know better.

05:25.040 --> 05:26.560
You're just choosing not to do it.

05:26.560 --> 05:28.680
I just couldn't be bothered, yeah.

05:28.680 --> 05:29.960
All the config is in Ansible.

05:29.960 --> 05:33.160
So at least I have it all stored in Git somewhere.

05:33.160 --> 05:34.680
So I'm not going to lose it overnight.

05:34.680 --> 05:37.280
But anyway, the interesting issue with this one

05:37.280 --> 05:38.660
was I logged into the droplet.

05:38.660 --> 05:42.480
I was actually in a hotel room in Florida at the time,

05:42.480 --> 05:45.960
connected via my slate, WireGuard VPN,

05:45.960 --> 05:48.760
the little travel router, connected back

05:48.760 --> 05:50.640
to my house in Raleigh.

05:50.640 --> 05:53.680
I'm ordering another one of those slates.

05:53.680 --> 05:56.080
We talked about it recently, like two episodes ago.

05:56.080 --> 05:58.960
But this is a little OpenWRT powered box

05:58.960 --> 06:02.320
that has WireGuard support and CAPTCHA support.

06:02.320 --> 06:04.320
So you can throw it on a hotel Wi-Fi,

06:04.320 --> 06:07.280
VPN up all your traffic, and that

06:07.280 --> 06:09.480
becomes the access point for every device in your room.

06:09.480 --> 06:11.920
I'm traveling mid-November, and I'm picking one of those up

06:11.920 --> 06:12.600
for the trip.

06:12.600 --> 06:13.480
Good shout.

06:13.480 --> 06:14.640
I swear I should be on commission.

06:14.640 --> 06:18.400
I think I've sold about 15 of those devices since then.

06:18.400 --> 06:19.080
Really?

06:19.080 --> 06:21.320
Too bad they don't have an affiliate deal or something.

06:21.320 --> 06:22.280
Yeah, right.

06:22.280 --> 06:24.960
So anyway, I logged into the droplet via SSH,

06:24.960 --> 06:26.760
and I looked at the logs for the container,

06:26.760 --> 06:28.480
and it said, schema error.

06:28.480 --> 06:32.120
You're now running Postgres 12 instead of 11.

06:32.120 --> 06:37.320
Statping was running against Postgres 11.

06:37.320 --> 06:41.200
So it was just a case of going into the Docker compose file,

06:41.200 --> 06:43.640
adding a tag, because currently I didn't actually

06:43.640 --> 06:47.080
have any tags specified, so it was just pulling latest.

06:47.080 --> 06:51.160
And so it rolled back from version 12 to version 11

06:51.160 --> 06:53.040
in about eight seconds.

06:53.040 --> 06:55.080
When it pulled the old image down again,

06:55.080 --> 06:58.280
I pressed Docker compose up, and lo and behold,

06:58.280 --> 07:00.000
Statping came straight back up.

07:00.000 --> 07:01.040
Isn't that amazing?

07:01.040 --> 07:02.640
Oh, it's so good.

07:02.640 --> 07:06.680
Are you able to fully appreciate how much better that

07:06.680 --> 07:08.840
is than the old way of doing things,

07:08.840 --> 07:11.080
where if you installed everything via package,

07:11.080 --> 07:14.360
it would have spewed libraries all over your system,

07:14.360 --> 07:17.240
and it would have been a massive uncoupling to walk back,

07:17.240 --> 07:20.640
especially if other components or applications on the system

07:20.640 --> 07:22.800
were dependent on that package?

07:22.800 --> 07:25.480
Less than five minutes from diagnosing the issue

07:25.480 --> 07:27.760
to having it resolved.

07:27.760 --> 07:30.120
I mean, luckily for me, the database

07:30.120 --> 07:32.760
hadn't updated its schema itself automatically

07:32.760 --> 07:34.960
or anything like that, but just rolling back

07:34.960 --> 07:38.040
the image of the database was super duper easy.

07:38.040 --> 07:40.940
So if you want a sales pitch for why containers

07:40.940 --> 07:43.320
are great, that's definitely up there.

07:43.320 --> 07:47.440
Containers today on the self-hosted podcast.

07:47.440 --> 07:51.080
That's the container corner segment for today.

07:51.080 --> 07:52.480
I have another thing I need to admit

07:52.480 --> 07:55.800
is my current storage setup is already

07:55.800 --> 07:57.840
starting to fail me because I'm starting

07:57.840 --> 07:59.940
to do multiple disks attached directly

07:59.940 --> 08:02.840
to the Pi, each Pi, which is now three of them.

08:02.840 --> 08:03.760
Via USB?

08:03.760 --> 08:05.640
Yeah, USB 3.

08:05.640 --> 08:08.060
I don't have super high performance requirements

08:08.060 --> 08:11.040
because I'm accessing these mostly over Wi-Fi, so.

08:11.040 --> 08:12.480
It's just a reliability thing.

08:12.480 --> 08:17.160
I've just seen USB devices drop off the bus for no reason.

08:17.160 --> 08:18.800
That never happens with SATA.

08:18.800 --> 08:21.480
If you run a machine for 100 days,

08:21.480 --> 08:24.720
I would way more bet on a USB disk disappearing than a SATA

08:24.720 --> 08:27.960
just wouldn't disappear unless the disk fails.

08:27.960 --> 08:31.480
The other thing is I don't have enough storage for the cameras.

08:31.480 --> 08:34.040
I don't need a lot of disk, but I'd

08:34.040 --> 08:37.680
like probably at least three solid days worth of storage

08:37.680 --> 08:39.520
so I can go back if something happens.

08:39.520 --> 08:41.040
A week would be ideal.

08:41.040 --> 08:43.640
But also, I need to accommodate things like Plex, which

08:43.640 --> 08:48.480
holds my books, my audio books, my music, my videos,

08:48.480 --> 08:51.360
about a terabyte of local media, and some pictures I

08:51.360 --> 08:53.400
need to accommodate, some notes.

08:53.400 --> 08:56.440
I've also got things like Docker configs

08:56.440 --> 09:00.960
and the containers-related data that I all need to store.

09:00.960 --> 09:02.160
And I don't know if I should.

09:02.160 --> 09:04.720
What I've done so far is I've got,

09:04.720 --> 09:08.040
when on sale, these Samsung MV and E

09:08.040 --> 09:11.400
drives that are bus-powered over USB 3.0 and they're tiny.

09:11.400 --> 09:13.320
I'm holding one up to you now on Telegram.

09:13.320 --> 09:14.320
I've just sent you a picture.

09:14.320 --> 09:16.240
That's the SanDisk one you have there, right?

09:16.240 --> 09:18.280
It's not even half the size of a credit card.

09:18.280 --> 09:18.920
No.

09:18.920 --> 09:20.640
And it's ruggedized.

09:20.640 --> 09:22.560
It sort of has a rubber coating.

09:22.560 --> 09:26.080
And it's also very well-rated in terms of performance

09:26.080 --> 09:27.280
with the Raspberry Pi.

09:27.280 --> 09:30.360
I just recently went through some disk benchmarks.

09:30.360 --> 09:32.360
Here's the other thing that really, really

09:32.360 --> 09:34.680
is a tricky thing for me in the RV.

09:34.680 --> 09:36.960
Is whatever disk solution I implement

09:36.960 --> 09:40.840
needs to be able to withstand a level four

09:40.840 --> 09:42.680
earthquake on the Richter scale.

09:42.680 --> 09:45.440
Because when I drive, that's essentially

09:45.440 --> 09:48.440
what the conditions inside the RV is, is a level four

09:48.440 --> 09:49.280
earthquake.

09:49.280 --> 09:52.360
And so the disks, ideally, could stay online while we drive,

09:52.360 --> 09:54.120
because I might have the children on board

09:54.120 --> 09:56.720
and they'd like to watch television or use the services

09:56.720 --> 09:58.120
while we're going down the road.

09:58.120 --> 10:00.480
Man, that would have made road trips so great as a kid.

10:00.480 --> 10:03.240
Can you even imagine just having, not just,

10:03.240 --> 10:05.640
you know, I mean, when I was a kid,

10:05.640 --> 10:07.560
we used to play games in the car like,

10:07.560 --> 10:10.040
count the number plates that start with the letter L,

10:10.040 --> 10:11.120
you know?

10:11.120 --> 10:11.680
Right.

10:11.680 --> 10:14.000
Meanwhile, they've got Wi-Fi with internet.

10:14.000 --> 10:16.600
And they've got a Plex library of their favorite shows.

10:16.600 --> 10:19.360
And they have a total blank check to marathon them,

10:19.360 --> 10:20.600
because what else can they do?

10:20.600 --> 10:23.240
Kids these days don't even know they're born, Chris.

10:23.240 --> 10:25.560
I know.

10:25.560 --> 10:28.920
And so I need to accommodate all these different factors.

10:28.920 --> 10:31.280
So it kind of seems like I need to go solid state.

10:31.280 --> 10:34.520
Yeah, you probably do, right?

10:34.520 --> 10:37.520
And solid state's getting there, you know?

10:37.520 --> 10:39.840
Linus Tech Tips did a video not that long ago

10:39.840 --> 10:42.760
about a new 3.84 terabyte.

10:42.760 --> 10:45.360
I mean, it's four terabytes to all intents and purposes.

10:45.360 --> 10:50.120
SSD released by, I think it was either Samsung or SanDisk,

10:50.120 --> 10:51.360
probably Samsung.

10:51.360 --> 10:53.840
But they're still $500 a pop.

10:53.840 --> 10:55.960
Whereas these one terabyte ones that you're talking about,

10:55.960 --> 11:00.320
the ruggedized ones, they're about $100 a pop or something.

11:00.320 --> 11:03.360
I mean, it's not cheap, but it's enough now that I can move.

11:03.360 --> 11:07.120
So my use case for the little SSD that I have

11:07.120 --> 11:10.800
is my photo library lives on here for each year.

11:10.800 --> 11:13.120
So every year, I'll rotate my photo library.

11:13.120 --> 11:15.800
When I'm traveling, I just have everything

11:15.800 --> 11:18.320
that I've shot this year with me physically,

11:18.320 --> 11:20.240
and everything else is at home.

11:20.240 --> 11:22.160
And generally speaking, that works pretty well.

11:22.160 --> 11:26.320
So at the end of each year, I'll rotate my photos.

11:26.320 --> 11:27.840
And drone footage is an exception,

11:27.840 --> 11:30.640
because it's so much bigger, but just images

11:30.640 --> 11:31.840
fit just fine on here.

11:31.840 --> 11:34.520
Do you only keep the year's images on that disk,

11:34.520 --> 11:36.840
or do you also store them somewhere else?

11:36.840 --> 11:39.360
Oh, so yeah, I mean, I'd be a loser

11:39.360 --> 11:42.040
if I only had one copy of my photos from this year, right?

11:42.040 --> 11:42.960
This wasn't clear.

11:42.960 --> 11:44.800
I was getting upset for a second.

11:44.800 --> 11:47.280
Yeah, no, so generally, whilst I'm traveling,

11:47.280 --> 11:49.080
my use case is quite straightforward.

11:49.080 --> 11:51.040
And I actually did a post about this on my blog

11:51.040 --> 11:53.920
very recently about my photography workflow.

11:53.920 --> 11:56.960
And I talk a little bit in there about how my backup situation

11:56.960 --> 11:59.760
works, and how by the time it's all said and done,

11:59.760 --> 12:04.080
I've probably got about six or seven copies of this data,

12:04.080 --> 12:06.800
all automatic once it hits my server back in Raleigh.

12:06.800 --> 12:09.960
It just then all sort of spiders webs out across the internet.

12:09.960 --> 12:11.480
We should put a link to that in the show notes

12:11.480 --> 12:13.480
to that blog post, because that could also

12:13.480 --> 12:15.400
help answer the ask SSH we're going

12:15.400 --> 12:17.480
to get to in a little bit.

12:17.480 --> 12:20.680
Yeah, OK, I mean, so the way I look at it is,

12:20.680 --> 12:22.400
I have a couple of options here, is

12:22.400 --> 12:25.520
I could just hang a terabyte disk off of each Pi,

12:25.520 --> 12:27.880
so about $300 worth of disk.

12:27.880 --> 12:29.640
That's not the end of the world when you're

12:29.640 --> 12:32.080
talking about a network storage solution in terms of price,

12:32.080 --> 12:34.920
but it's not very elegant.

12:34.920 --> 12:38.920
Then I'm wondering if it's just ridiculous and crazy to buy

12:38.920 --> 12:41.320
yet another Raspberry Pi.

12:41.320 --> 12:41.960
Probably.

12:41.960 --> 12:45.760
And then make that thing an iSCSI host for the biggest

12:45.760 --> 12:48.360
disk or the most amount of disk I can attach to it.

12:48.360 --> 12:52.400
Can't you just get a 512 gig SD card these days?

12:52.400 --> 12:54.980
Yeah, so the way I tend to use the SD card and the Raspberry

12:54.980 --> 12:58.720
Pis is just the root file system is on the SD card.

12:58.720 --> 13:00.180
Because I'm just so paranoid they're

13:00.180 --> 13:01.160
going to just die on me.

13:01.160 --> 13:02.840
Yeah, I've had a few do that, especially

13:02.840 --> 13:04.800
in power loss situations.

13:04.800 --> 13:06.240
That can be a real issue.

13:06.240 --> 13:08.800
So I kind of feel like, just like a lot of times in a server,

13:08.800 --> 13:10.800
I'll have a small internal SSD.

13:10.800 --> 13:12.080
Yeah, I'd do the same.

13:12.080 --> 13:15.240
Yeah, the array is on a pool of disks.

13:15.240 --> 13:19.240
So I had thought about taking a Raspberry Pi 4,

13:19.240 --> 13:23.240
attaching like three or four disks to it,

13:23.240 --> 13:25.720
and then sharing that out over Samba NFS

13:25.720 --> 13:28.160
and making an iSCSI target as well.

13:28.160 --> 13:31.600
And you know, we talk with the developer of MergerFS

13:31.600 --> 13:34.520
in an upcoming Jupyter Extra that will probably

13:34.520 --> 13:36.360
be released the week this episode comes out.

13:36.360 --> 13:39.280
And MergerFS could potentially be a solution here.

13:39.280 --> 13:41.040
There's a lot of ways I could go with this.

13:41.040 --> 13:42.200
So I'm kind of hoping you can give me

13:42.200 --> 13:44.160
some of your thoughts on just disks in general.

13:44.160 --> 13:48.040
If MergerFS maybe would be a good use case for me,

13:48.040 --> 13:50.560
especially since I'm dealing with more limited amounts

13:50.560 --> 13:52.140
of RAM and hardware.

13:52.140 --> 13:54.840
And I know that you and I have been talking offline a lot

13:54.840 --> 13:57.240
about your storage setup.

13:57.240 --> 13:58.880
So give me an advice here, Doctor.

13:58.880 --> 14:00.040
What's your prescription?

14:00.040 --> 14:01.360
Well, over the years, I mean, I've

14:01.360 --> 14:03.000
talked about on my brunch with Brent,

14:03.000 --> 14:05.920
I talked about how there was a 1.5 terabyte hard drive that

14:05.920 --> 14:06.400
failed.

14:06.400 --> 14:08.320
And that's kind of what led me down this rabbit

14:08.320 --> 14:09.520
hole of self-hosting.

14:09.520 --> 14:12.920
And I've bought a lot of hard drives over the years.

14:12.920 --> 14:14.200
I was trying to calculate it.

14:14.200 --> 14:16.080
But I think I probably bought somewhere

14:16.080 --> 14:18.760
in the region of 30 to 40 three and a half inch drives.

14:18.760 --> 14:21.800
Just this is my personal purchase history.

14:21.800 --> 14:23.640
Yeah, I hate to think how much disk

14:23.640 --> 14:26.760
I've bought over the years for the JB Productions.

14:26.760 --> 14:30.120
Oh, so I've got a few rituals that I follow.

14:30.120 --> 14:32.280
I've got a few thoughts.

14:32.280 --> 14:38.080
I've read a lot of posts on Reddit, on different forums.

14:38.080 --> 14:39.840
And this is just my personal experience

14:39.840 --> 14:43.720
over the last five, six, seven years of doing this stuff.

14:43.720 --> 14:45.920
I appreciate some people have different opinions,

14:45.920 --> 14:48.360
but these are mine.

14:48.360 --> 14:54.320
And I think a lot of it boils down to several key things.

14:54.320 --> 14:57.160
And I cover a lot of this stuff in the perfect media service

14:57.160 --> 15:01.640
series that's on the linuxserver.io blog.

15:01.640 --> 15:04.360
There's a few things you need to take into consideration.

15:04.360 --> 15:08.680
First of all, what are your requirements?

15:08.680 --> 15:12.040
Are you running high performance databases?

15:12.040 --> 15:13.720
Probably not if you're self-hosting.

15:13.720 --> 15:17.440
But things like Plex take a surprising amount of I.O.

15:17.440 --> 15:21.160
So if you're going to put your Plex metadata directory

15:21.160 --> 15:23.840
onto a spinning Rust drive, you'll

15:23.840 --> 15:26.000
notice a significant speed bump if you then

15:26.000 --> 15:27.560
put that onto an SSD later on.

15:27.560 --> 15:29.520
So there are just different use cases,

15:29.520 --> 15:31.960
even within a home setup, that you might want to consider.

15:31.960 --> 15:34.200
Also, I think it's worth mentioning

15:34.200 --> 15:36.520
there are ways you could even set up spinning Rust

15:36.520 --> 15:37.880
to get pretty good throughput.

15:37.880 --> 15:41.760
You may miss out on data integrity or protection.

15:41.760 --> 15:45.520
For example, forever, for editing,

15:45.520 --> 15:50.640
I will use a bunch of as fast as I can get spinning Rust.

15:50.640 --> 15:52.360
Usually 10,000 RPM is what I go for.

15:52.360 --> 15:53.440
I know I can get slightly faster,

15:53.440 --> 15:54.680
but I go for 10,000 usually.

15:54.680 --> 15:57.040
So not as fast, I should say.

15:57.040 --> 15:59.520
The exact opposite of what I just said.

15:59.520 --> 16:01.520
And I'll put those suckers in a RAID 0.

16:01.520 --> 16:03.360
Fantastic performance.

16:03.360 --> 16:08.400
Then I make sure that the disk pool is labeled scary RAID.

16:08.400 --> 16:10.080
I call it scary RAID.

16:10.080 --> 16:10.640
Good.

16:10.640 --> 16:12.000
Oh, I like it.

16:12.000 --> 16:13.560
So for those that aren't familiar,

16:13.560 --> 16:16.320
RAID 0 is striped across both disks.

16:16.320 --> 16:18.720
So if either of those disks fail,

16:18.720 --> 16:22.360
or any of the disks in the RAID 0 array fail, you're boned.

16:22.360 --> 16:23.160
Yeah.

16:23.160 --> 16:25.680
And so that scary RAID label always

16:25.680 --> 16:28.800
reminds me, don't trust anything on that array,

16:28.800 --> 16:30.240
because you could lose it any time.

16:30.240 --> 16:34.160
Now, when you're working on a video project, in theory,

16:34.160 --> 16:37.360
you have your source materials still either on the camera

16:37.360 --> 16:40.120
or on the OBS machine or however you were doing it.

16:40.120 --> 16:43.440
And so if my array were to go away during a project,

16:43.440 --> 16:45.520
I would just have to redo that project.

16:45.520 --> 16:48.560
But I think a lot of this stuff is a little old school

16:48.560 --> 16:50.320
in terms of thinking nowadays.

16:50.320 --> 16:54.880
SSDs, terabyte SSDs are in that $100 sweet spot.

16:54.880 --> 16:57.520
And we're not talking that long ago.

16:57.520 --> 17:00.880
We're talking two, three years where a terabyte

17:00.880 --> 17:03.080
was $300 or $400.

17:03.080 --> 17:04.960
And that's just not realistic.

17:04.960 --> 17:08.320
I'm not going to spend that much on that price per gigabyte.

17:08.320 --> 17:11.040
Which leads me nicely on to my other consideration.

17:11.040 --> 17:14.240
You need to decide what the capacity requirements are.

17:14.240 --> 17:16.960
So if you're working on video, like Chris,

17:16.960 --> 17:21.000
you're going to be needing hundreds of gigabytes

17:21.000 --> 17:22.880
for a single project, potentially.

17:22.880 --> 17:26.120
It is funny, because when we switched to primarily doing

17:26.120 --> 17:29.780
audio, all of a sudden, I had to do this huge shift on it.

17:29.780 --> 17:31.880
We had so much additional storage,

17:31.880 --> 17:34.040
because we had projected for the next couple of years

17:34.040 --> 17:35.080
using video.

17:35.080 --> 17:37.000
And then we made a transition to audio.

17:37.000 --> 17:38.760
And then all of a sudden, I win a year

17:38.760 --> 17:40.200
without having to buy disks.

17:40.200 --> 17:41.080
It was beautiful.

17:41.080 --> 17:44.440
And now, in the RV with my limited options,

17:44.440 --> 17:46.400
I think about storage in a different way.

17:46.400 --> 17:49.600
I think, what do I need immediately available,

17:49.600 --> 17:53.540
versus what can I store in a colder storage that's

17:53.540 --> 17:55.320
remote and slower to get to?

17:55.320 --> 17:57.160
So I kind of even break it up to,

17:57.160 --> 18:00.240
what do I need as hot files versus cold files?

18:00.240 --> 18:02.940
And so the hot files, I'll put on the SSDs.

18:02.940 --> 18:06.280
And the cold files, I'll store on spinning rest somewhere.

18:06.280 --> 18:08.160
Like here in the studio, we have plenty of spinning rest

18:08.160 --> 18:08.800
storage.

18:08.800 --> 18:10.640
So the other thing to consider is

18:10.640 --> 18:13.000
that there's an article by a chap called,

18:13.000 --> 18:15.880
and I'm going to butcher this name, Laurentius.

18:15.880 --> 18:17.620
And this is from January 2016.

18:17.620 --> 18:20.680
And it's actually been something which

18:20.680 --> 18:25.040
has influenced my strategy in how I've purchased hard drives

18:25.040 --> 18:26.040
pretty much since then.

18:26.040 --> 18:27.200
It's like a thought model, huh?

18:27.200 --> 18:27.700
Yeah.

18:27.700 --> 18:29.800
And this post is entitled, The Hidden Cost

18:29.800 --> 18:32.840
of Using ZFS for Your Home NAS.

18:32.840 --> 18:35.480
Now, I want to underscore the last two words,

18:35.480 --> 18:37.400
for your home NAS.

18:37.400 --> 18:38.960
I'm not talking about small business.

18:38.960 --> 18:42.240
I'm not talking about your use case here, Chris.

18:42.240 --> 18:43.920
I'm talking about people like me that

18:43.920 --> 18:47.600
have a media server which has five, six, seven, eight, nine

18:47.600 --> 18:53.280
disks in it that stores media that is written once

18:53.280 --> 18:55.280
and read a few times.

18:55.280 --> 18:59.160
Things like drone footage, ripped media, music,

18:59.160 --> 19:01.680
that kind of stuff, right?

19:01.680 --> 19:03.960
The performance is not critical.

19:03.960 --> 19:06.840
So a lot of the benefits that you get with ZFS

19:06.840 --> 19:08.760
kind of pale into insignificance.

19:08.760 --> 19:11.760
But the thrust of his blog post here,

19:11.760 --> 19:13.640
and I totally agree with this, is

19:13.640 --> 19:18.760
that when I'm expanding my NAS over the last few years,

19:18.760 --> 19:22.880
I tend not to buy more than one or two drives at the same time.

19:22.880 --> 19:26.160
I tend to buy one drive every, if I know I'm expanding,

19:26.160 --> 19:30.000
I'll buy a drive every month or two.

19:30.000 --> 19:32.760
Generally speaking, over the last couple of years,

19:32.760 --> 19:36.400
I've bought a drive every six to seven months or so.

19:36.400 --> 19:38.060
Now, with ZFS, that's just not going to work,

19:38.060 --> 19:42.840
because you need to preallocate your VDevs and your pools

19:42.840 --> 19:45.240
and all that kind of stuff up front.

19:45.240 --> 19:48.040
So you need to have drives that are the same size.

19:48.040 --> 19:49.640
You need to ideally have drives that

19:49.640 --> 19:52.120
are the same brand and firmware model

19:52.120 --> 19:55.520
so that there's not some kind of random problem

19:55.520 --> 19:58.880
occurs at the hardware level there.

19:58.880 --> 20:02.380
And so for me, it really makes the ZFS kind of sell

20:02.380 --> 20:05.680
a lot more difficult, because purchasing multiple drives

20:05.680 --> 20:09.280
at once is not realistic.

20:09.280 --> 20:12.640
Now, then I moved to America, and I had access to Best Buy.

20:12.640 --> 20:15.080
And they have this wonderful thing

20:15.080 --> 20:18.120
called the Western Digital Easy Store.

20:18.120 --> 20:20.400
And this has really changed the game for me.

20:20.400 --> 20:26.040
So I now have access to 10 terabyte hard drives,

20:26.040 --> 20:27.840
10 terabyte drives.

20:27.840 --> 20:30.080
Just one drive is 10 terabytes.

20:30.080 --> 20:31.840
My entire array used to be 10 terabytes.

20:31.840 --> 20:35.920
But anyway, for $160 or $170.

20:35.920 --> 20:39.360
The caveat is it comes in like a USB enclosure.

20:39.360 --> 20:41.880
So it's like an external hard drive.

20:41.880 --> 20:43.440
But you can pop those bad boys out

20:43.440 --> 20:46.140
of those cases in 10 minutes flat.

20:46.140 --> 20:48.560
And then you have, to all intents and purposes,

20:48.560 --> 20:52.680
a white label Western Digital 10 terabyte hard drive.

20:52.680 --> 20:54.560
They're generally of decent quality disk, too,

20:54.560 --> 20:57.280
because they don't want them popping and then having

20:57.280 --> 20:59.060
a consumer RMA.

20:59.060 --> 21:02.440
There is also like a slight electrical bit of work

21:02.440 --> 21:04.760
that has to be done to the disk once you deshuck it.

21:04.760 --> 21:05.880
Well, that's an interesting one.

21:05.880 --> 21:08.400
So I think you're referring to the 3.3 volt mod

21:08.400 --> 21:09.440
that you might have to do.

21:09.440 --> 21:10.480
That's what it was, yeah.

21:10.480 --> 21:14.280
And this is actually in the SATA spec, the SATA power spec.

21:14.280 --> 21:15.920
I read a post on this a few months ago,

21:15.920 --> 21:17.840
so I might get the details a little bit wrong.

21:17.840 --> 21:19.720
But the gist is this.

21:19.720 --> 21:23.120
Enterprise Gear uses the 3.3 volt rail

21:23.120 --> 21:25.560
to reset failing hardware.

21:25.560 --> 21:28.600
So if you're a hard drive in a data center,

21:28.600 --> 21:31.400
you don't necessarily want to have to be power cycled

21:31.400 --> 21:33.680
physically by a human coming in and pushing a button

21:33.680 --> 21:35.320
and all that kind of stuff.

21:35.320 --> 21:38.280
Data centers need a way to reset hardware

21:38.280 --> 21:39.800
without physically being present.

21:39.800 --> 21:41.720
And the way in which hard drives do that

21:41.720 --> 21:43.840
is on the 3.3 volt rail.

21:43.840 --> 21:46.720
So in a server situation, if that disk

21:46.720 --> 21:49.800
receives a signal on the 3.3 volt rail,

21:49.800 --> 21:52.600
it will reboot just that disk.

21:52.600 --> 21:56.260
Now, most consumer power supplies over the last decade

21:56.260 --> 21:59.440
have either omitted that rail

21:59.440 --> 22:01.240
or just not followed the SATA spec

22:01.240 --> 22:02.740
for trying to save money

22:02.740 --> 22:04.400
because nobody really uses it for power.

22:04.400 --> 22:07.120
They just use it for that use case.

22:07.120 --> 22:10.960
But some power supplies do respect the SATA spec.

22:10.960 --> 22:13.240
And if yours is one of those,

22:13.240 --> 22:15.080
you need to do one of two things.

22:15.080 --> 22:17.420
The first option is you can either just cut

22:17.420 --> 22:20.160
the 3.3 volt wire, which is what I did.

22:20.160 --> 22:23.440
I actually made some custom SATA power connectors,

22:23.440 --> 22:26.680
which omitted that wire altogether.

22:26.680 --> 22:31.280
You can buy, I think it's a one to five SATA power splitter

22:31.280 --> 22:32.760
thing on Amazon.

22:32.760 --> 22:36.800
And then you can use the DIY SATA power connectors

22:36.800 --> 22:38.720
and just sort of pull the cable down inside it

22:38.720 --> 22:41.200
and slice and cut the connectors for you.

22:41.200 --> 22:44.320
It takes about half an hour to do five the first time

22:44.320 --> 22:46.400
and then you get quicker after that.

22:46.400 --> 22:48.960
Just be careful you get the wires in the right order

22:48.960 --> 22:51.280
because if you put the 12 volt rail on the five volt thing,

22:51.280 --> 22:53.000
you're gonna let the magic smoke out.

22:53.000 --> 22:54.160
Not that you would know.

22:54.160 --> 22:56.280
No, I actually don't, but yeah, thankfully.

22:56.280 --> 22:58.200
I was very careful when I checked with a multimeter

22:58.200 --> 22:59.560
that I got it all correct.

23:00.480 --> 23:01.440
The other thing you can do,

23:01.440 --> 23:03.640
and there are plenty of videos on YouTube on this,

23:03.640 --> 23:06.720
is you can actually get a piece of Kapton tape

23:06.720 --> 23:09.560
or something like electrical tape or something

23:09.560 --> 23:13.500
and cover a couple of the power pins on the drive itself.

23:13.500 --> 23:15.960
So that's a very, very non-destructive mod.

23:15.960 --> 23:17.280
And that will just prevent the drive

23:17.280 --> 23:19.960
from being able to receive that 3.3 volt signal

23:19.960 --> 23:22.440
and it will just work as you would expect.

23:22.440 --> 23:23.480
That's not so bad.

23:23.480 --> 23:26.280
I do agree with your overall assessment

23:26.280 --> 23:29.080
that if you're going to implement ZFS,

23:29.080 --> 23:30.360
you need to go into it knowing

23:30.360 --> 23:31.960
that when you wanna add capacity,

23:31.960 --> 23:33.760
you'll be buying multiple disks at a time.

23:33.760 --> 23:35.880
And this for me is the beauty of merger FS.

23:35.880 --> 23:38.760
So we spoke to Antonio during the JB sprint.

23:38.760 --> 23:41.240
Drew and Brent and I had a chance to sit down with him

23:41.240 --> 23:43.520
and ask him some questions.

23:43.520 --> 23:46.040
I've worked quite closely with him on a few things

23:46.040 --> 23:47.880
like some of my blog posts, for example,

23:47.880 --> 23:50.240
like I've submitted them to him for review

23:50.240 --> 23:51.840
and made sure that it's all technically accurate

23:51.840 --> 23:53.320
and that kind of thing.

23:53.320 --> 23:55.720
But where merger FS comes in and the magic of it really

23:55.720 --> 23:59.280
is you can have any number of mismatched drives,

23:59.280 --> 24:02.240
any file system, it could be a USB drive,

24:02.240 --> 24:05.120
it can be a SATA drive, it could be a CD-ROM drive,

24:05.120 --> 24:07.760
it could be an R-Clone mount point,

24:07.760 --> 24:11.080
and you can combine all of those different things

24:11.080 --> 24:12.760
under a single mount point.

24:12.760 --> 24:17.760
So I use slash mount slash storage as my pool mount point.

24:18.160 --> 24:21.200
And under there, I have 12 different disks

24:21.200 --> 24:23.560
combined and an R-Clone mount point

24:23.560 --> 24:25.800
and the ZFS stuff that I have on my system

24:25.800 --> 24:27.160
all in one place.

24:27.160 --> 24:29.280
And does merger FS manage the parity as well?

24:29.280 --> 24:31.600
Does it keep things, like if a disk fails?

24:31.600 --> 24:36.600
No, merger FS is just a fuse layer user space file system

24:37.200 --> 24:42.120
that combines all of those mount points underneath it.

24:42.120 --> 24:44.240
If you want parity, which is the thing

24:44.240 --> 24:46.760
that lets you rebuild from drive failures,

24:46.760 --> 24:49.200
I use SnapRaid for that for my media

24:49.200 --> 24:51.640
and then ZFS for the really important stuff.

24:52.680 --> 24:54.200
We'll cut a SnapRaid later, I think,

24:54.200 --> 24:59.200
but in short, it takes a snapshot of the state

24:59.520 --> 25:01.160
of the drives at a moment in time

25:01.160 --> 25:06.160
and calculates the parity data for those drives.

25:07.280 --> 25:11.200
I think in terms of the other options that you've got

25:11.200 --> 25:14.000
that do have similar functionality,

25:14.000 --> 25:18.720
UnRAID will support multiple mismatched drive sizes as well.

25:18.720 --> 25:21.360
The advantage of UnRAID is it has real-time parity

25:21.360 --> 25:24.160
calculation instead of snapshot.

25:24.160 --> 25:26.520
Downside is it's not open source.

25:26.520 --> 25:29.280
So, you know, and you have to buy a license.

25:29.280 --> 25:32.360
So it depends on what floats your boat there.

25:33.360 --> 25:36.120
Open Media Vault will support merger FS

25:36.120 --> 25:38.120
and SnapRaid out of the box,

25:38.120 --> 25:39.240
but you'll have to go through the GUI

25:39.240 --> 25:40.640
and configure it yourself.

25:40.640 --> 25:42.640
I like that for you, that's a downside.

25:42.640 --> 25:44.960
For some people listening, they're like,

25:44.960 --> 25:46.960
oh God, it's got a GUI, thank goodness.

25:46.960 --> 25:48.680
Yeah, well, I'm the sort of guy

25:48.680 --> 25:49.920
that puts everything in Ansible.

25:49.920 --> 25:51.840
Yeah, and if you just take the time

25:51.840 --> 25:54.400
to learn the configuration syntax,

25:54.400 --> 25:56.040
it will last with you forever.

25:56.040 --> 25:59.360
And it is simpler and quicker and easier to back up.

25:59.360 --> 26:01.720
Somebody was asking me in the JB Telegram the other day

26:01.720 --> 26:03.360
about how to configure Samba.

26:03.360 --> 26:05.440
And I just dropped them in my Samba config file.

26:05.440 --> 26:06.680
I was like, there you go, done.

26:06.680 --> 26:09.880
You know, it's 30 lines worth of text and it's done.

26:09.880 --> 26:12.120
Right, it's worth recapping for a moment.

26:12.120 --> 26:14.400
There's a lot to consider.

26:14.400 --> 26:15.760
How fast you need the disk to be,

26:15.760 --> 26:17.920
how much storage you need,

26:17.920 --> 26:20.760
what other kind of usage requirements you have.

26:20.760 --> 26:23.640
Then you have how much storage you plan to add to it,

26:23.640 --> 26:26.160
how much it will change and what your budget is.

26:26.160 --> 26:29.160
You have how critical the data is.

26:29.160 --> 26:33.440
Is it okay to put it on one disk?

26:33.440 --> 26:35.160
Maybe if you got a really good backup,

26:35.160 --> 26:36.840
but you need to consider what your options are

26:36.840 --> 26:38.360
if you need to go with a RAID.

26:38.360 --> 26:39.440
One is non-CRS.

26:39.440 --> 26:40.920
Right, one is none.

26:40.920 --> 26:43.520
And then you have other things to consider as well,

26:43.520 --> 26:47.960
like ZFS versus a different file system,

26:47.960 --> 26:50.520
if you have enough RAM, I mean, there's a lot to it, Alex.

26:50.520 --> 26:54.160
So how do you really get to any of these answers

26:54.160 --> 26:56.560
without being really intimately familiar

26:56.560 --> 26:58.880
with what your setup requirements are?

26:58.880 --> 27:01.200
Like for me, I'm sitting here parsing this thinking,

27:01.200 --> 27:04.520
well, what should I do for my storage solution?

27:04.520 --> 27:06.640
Because I have all these weird use cases.

27:06.640 --> 27:11.240
One use case is camera recording, which is fairly high IO.

27:11.240 --> 27:14.920
The other is notes, like I have this huge spectrum

27:14.920 --> 27:19.280
of like super low IO and super intense IO.

27:19.280 --> 27:21.160
I want everything redundant

27:21.160 --> 27:24.280
and I don't have a lot of backup options either.

27:24.280 --> 27:26.240
So other than offsite,

27:26.240 --> 27:28.760
which I won't always have connectivity.

27:28.760 --> 27:32.160
And I also have that whole problem of a level four earthquake.

27:32.160 --> 27:35.120
Yeah, I'm a massive MergerFS fan boy.

27:35.120 --> 27:37.960
I tried dozens and dozens of other things

27:37.960 --> 27:39.360
over the three or four years,

27:39.360 --> 27:42.200
previous to settling on it in 2016.

27:42.200 --> 27:45.920
And I've just, it's just been absolutely rock solid, right?

27:45.920 --> 27:48.120
And I actually hate it when people use that phrase,

27:48.120 --> 27:50.920
rock solid, but it's never missed a beat.

27:50.920 --> 27:53.840
I haven't ever had to go in and tweak it.

27:53.840 --> 27:56.760
There's not been any random hidden files created

27:56.760 --> 28:01.160
like with MHDDFS, for example, is another one I tried.

28:03.160 --> 28:04.680
It's just been flexible, right?

28:04.680 --> 28:07.400
So anything I've needed to bend it to do,

28:07.400 --> 28:10.720
I've been able to get MergerFS to do it with no data loss,

28:10.720 --> 28:12.600
no having to copy files and have,

28:12.600 --> 28:15.560
you know that slide puzzle you get

28:15.560 --> 28:17.760
where you've got to move the little cubes around.

28:17.760 --> 28:18.600
Yeah.

28:18.600 --> 28:21.160
If you're migrating from one ZFS pool to another,

28:21.160 --> 28:22.760
you actually have to play that game

28:22.760 --> 28:24.520
with your data sometimes, right?

28:24.520 --> 28:27.400
Where you're trying to re-architect a VDEV

28:27.400 --> 28:30.080
that you built knowing what you knew at the time

28:30.080 --> 28:30.920
when you built it,

28:30.920 --> 28:32.920
but it turns out three years later,

28:32.920 --> 28:36.400
oh, oops, that's not the most optimal thing to do.

28:36.400 --> 28:38.160
It's not the most optimal way to do it.

28:38.160 --> 28:39.000
True.

28:39.000 --> 28:41.440
That is a bit of an issue I'm having now

28:41.440 --> 28:44.040
with the storage here at the studio.

28:44.040 --> 28:45.920
I feel like it's less of a problem

28:45.920 --> 28:47.840
in a more static environment

28:47.840 --> 28:49.200
where things don't change as much.

28:49.200 --> 28:51.280
Like for example, ours is architected

28:51.280 --> 28:53.880
for these huge, huge like storage requirements

28:53.880 --> 28:55.640
around production video.

28:55.640 --> 28:56.880
And we just don't have that anymore.

28:56.880 --> 28:57.880
And now I'm looking at it going,

28:57.880 --> 28:59.920
oh man, I think I need to redo this.

28:59.920 --> 29:01.040
Flexibility, man.

29:01.040 --> 29:02.840
That's where MergerFS really wins out.

29:02.840 --> 29:03.680
Yeah.

29:03.680 --> 29:04.840
I really don't want to have to deal with that.

29:04.840 --> 29:05.680
I really don't.

29:05.680 --> 29:06.520
But at the same time,

29:06.520 --> 29:08.800
I feel like if it's super important and critical,

29:08.800 --> 29:10.400
I'm still going to end up dealing

29:10.400 --> 29:12.840
with these limitations of ZFS, if you will.

29:12.840 --> 29:13.680
But the thing is, right,

29:13.680 --> 29:18.040
so MergerFS, the reason it wins out so heavily for me

29:18.040 --> 29:20.840
is it supports any file system underneath it.

29:20.840 --> 29:23.840
So if you want to have ZFS on a pair of drives

29:23.840 --> 29:26.640
and then pool it with a bunch of other EXT4 drives

29:26.640 --> 29:30.320
or XFS drives, MergerFS will just handle that

29:30.320 --> 29:31.600
absolutely fine.

29:31.600 --> 29:34.040
And then using the policies that MergerFS has,

29:34.040 --> 29:36.760
you can say only write this data to a drive

29:36.760 --> 29:39.160
that already has that existing directory.

29:39.160 --> 29:40.120
So the way that I do it

29:40.120 --> 29:42.320
for all of my Docker app data, for example,

29:42.320 --> 29:46.160
is I tell it through the file system table, the FFSTAB,

29:46.160 --> 29:48.880
only create that directory on that drive.

29:48.880 --> 29:51.880
So it's existing path, most free space.

29:51.880 --> 29:53.840
But you're not allowed to create that directory

29:53.840 --> 29:55.520
on a drive where it doesn't already exist.

29:55.520 --> 29:59.080
The operation should just fail and you'll alert me to that.

29:59.080 --> 30:01.080
So I'm not going to end up with files

30:01.080 --> 30:02.880
scattered around multiple different disks.

30:02.880 --> 30:05.560
Here's the other thing that really, really wins

30:05.560 --> 30:06.960
on MergerFS for me.

30:06.960 --> 30:09.840
I can pull that drive from one system

30:09.840 --> 30:12.440
and I go and stick it into any other Linux box

30:12.440 --> 30:14.000
and it will just be able to be read.

30:14.000 --> 30:15.080
It's just a disk with files.

30:15.080 --> 30:15.920
Yeah, right.

30:15.920 --> 30:17.200
Unlike a ZFS array,

30:17.200 --> 30:19.280
which I have to bring the whole pool over

30:19.280 --> 30:20.320
and then import it

30:20.320 --> 30:23.040
and it now belongs to that operating system.

30:23.040 --> 30:25.360
And you have to hope that you've got the correct ZFS version

30:25.360 --> 30:26.200
and blah, blah, blah.

30:26.200 --> 30:27.080
You're kind of winning me over,

30:27.080 --> 30:29.080
especially for my home setup use case.

30:29.080 --> 30:30.200
It's just flexible

30:30.200 --> 30:32.760
and it will support hot plug of USB devices.

30:32.760 --> 30:34.760
You know, this, like whatever I come up with

30:34.760 --> 30:35.880
may not work out

30:35.880 --> 30:38.000
because it may be a bit of a roll of the dice.

30:38.000 --> 30:39.120
I'm not even sure if I'm going to stick

30:39.120 --> 30:40.600
with Raspberry Pis long-term.

30:40.600 --> 30:42.800
I mean, I really hope it works for my use case.

30:42.800 --> 30:44.520
It's very low commitment, right?

30:44.520 --> 30:47.040
And for those of you with commitment issues,

30:47.040 --> 30:49.800
you know, it's a really easy,

30:49.800 --> 30:51.520
really easy thing to get started with.

30:51.520 --> 30:55.640
Yeah, I think step one will be listening to your interview

30:55.640 --> 30:58.320
with the MergerFS dev when that comes out on extras.

30:58.320 --> 31:01.400
And then step two would be for me to get you

31:01.400 --> 31:02.600
to send your config over.

31:02.600 --> 31:04.480
So I can just read what that looks like.

31:04.480 --> 31:06.400
It's one line in your FS tab.

31:06.400 --> 31:08.160
I'll try and see if I can get it in the show notes.

31:08.160 --> 31:09.000
No, your merger,

31:09.000 --> 31:11.240
there must be a merger FS config file somewhere.

31:11.240 --> 31:12.360
Nope, it's in my FS tab.

31:12.360 --> 31:13.840
I'm literally SSHing in now.

31:13.840 --> 31:15.120
I'm going to put it to you on telegram

31:15.120 --> 31:15.960
and send it to you.

31:15.960 --> 31:16.800
Oh my gosh.

31:16.800 --> 31:17.960
One line.

31:17.960 --> 31:19.080
All right, I got to check this out.

31:19.080 --> 31:21.520
So do you think this would be ridiculous?

31:21.520 --> 31:26.480
Raspberry Pi four with two, two terabyte SSDs

31:26.480 --> 31:28.680
hanging off of it on the USB three bus.

31:28.680 --> 31:30.280
And then on the USB two bus,

31:30.280 --> 31:32.600
a parody disc, like a one terabyte.

31:32.600 --> 31:33.640
Can I do that with SnapRaid?

31:33.640 --> 31:35.160
Can you have a separate parody disc?

31:35.160 --> 31:36.600
That's what you need to do, yeah.

31:36.600 --> 31:39.600
So, okay, we're going to get into SnapRaid now.

31:39.600 --> 31:40.640
Okay, you made me do it.

31:40.640 --> 31:41.720
Well, let's do a brief lick

31:41.720 --> 31:43.480
because we should do a whole episode once I try it too.

31:43.480 --> 31:44.560
Yeah, yeah, yeah.

31:44.560 --> 31:47.400
So SnapRaid, the parody disc has to be as big

31:47.400 --> 31:49.480
or larger than your largest data disc.

31:49.480 --> 31:51.720
Okay, okay.

31:51.720 --> 31:52.960
That's a lot of discs everybody.

31:52.960 --> 31:54.160
That's the requirement.

31:55.560 --> 31:56.800
Okay, all right.

31:56.800 --> 31:59.080
But SnapRaid will support up to six parody drives

31:59.080 --> 32:00.640
if you are really paranoid.

32:00.640 --> 32:02.360
I think people should let me know at Chris LAS,

32:02.360 --> 32:05.040
am I crazy to set up a Raspberry Pi storage server

32:05.040 --> 32:07.600
with disc running off the USB bus?

32:07.600 --> 32:09.760
Is there a SATA hat for the Raspberry Pi four?

32:09.760 --> 32:12.400
Because I'd love to get a Raspberry Pi SATA hat.

32:12.400 --> 32:14.560
So I think to me at this point,

32:14.560 --> 32:18.040
you're pushing what the Pi is really suitable for.

32:18.040 --> 32:19.840
Damn it, I know, I know.

32:19.840 --> 32:21.560
I'm wondering if you shouldn't just build

32:21.560 --> 32:24.960
a hundred dollar used X86 system.

32:24.960 --> 32:27.240
I built for my PF sense a little while ago,

32:27.240 --> 32:32.240
an i5, I think third gen system for a hundred bucks.

32:34.280 --> 32:35.960
I mean, maybe for the storage, I could see it.

32:35.960 --> 32:39.600
I just, if I think if I did the storage over iSCSI,

32:39.600 --> 32:43.280
all the Pis are ethernet gigabit wired in.

32:43.280 --> 32:45.360
And on the Pi four, it's on its own bus now.

32:45.360 --> 32:48.480
So, and it seems fully capable.

32:48.480 --> 32:50.720
Here is the reason why I'm being resistant

32:50.720 --> 32:52.680
to the idea of going somewhere else.

32:52.680 --> 32:55.440
They're disposable at 25, $35.

32:55.440 --> 32:59.440
They're inside a seat, they're inside my dinette seat

32:59.440 --> 33:01.620
and it gets hot in the summer in there.

33:01.620 --> 33:03.240
I mean, they might just burn up over time,

33:03.240 --> 33:05.320
but all I have to do is pull out the SD card,

33:05.320 --> 33:08.480
pop in the SD card into a new replacement Pi

33:08.480 --> 33:10.120
and I'm out 35 bucks.

33:10.120 --> 33:12.520
If I have to replace them once every year or two,

33:12.520 --> 33:14.040
that's pretty reasonable.

33:14.040 --> 33:16.920
Plus the way I've done it is I've Velcroed them

33:16.920 --> 33:18.240
because they're so little.

33:18.240 --> 33:21.480
I Velcroed them to the wall of the seat inside.

33:21.480 --> 33:24.280
It's a wood, how would you explain this?

33:24.280 --> 33:26.200
It's a dinette seat, but people don't know what a dinette is.

33:26.200 --> 33:28.140
It's a booth, it's a booth.

33:28.140 --> 33:31.560
It's a booth seat with a hollow inside

33:31.560 --> 33:32.720
that you can take the cushion off

33:32.720 --> 33:35.120
and take the board off the top of the booth

33:35.120 --> 33:36.680
and it's all empty inside.

33:36.680 --> 33:41.680
And praise be to Thor, this is where they decided

33:42.280 --> 33:47.000
to install my subwoofer for the sound system,

33:47.000 --> 33:49.120
which is on an inverter.

33:49.120 --> 33:52.980
And to power this one small subwoofer,

33:52.980 --> 33:55.500
they ran an entire AC outlet

33:55.500 --> 33:58.080
into the inside of this booth seat.

33:58.080 --> 34:00.720
So there is an AC plug on the inverter

34:00.720 --> 34:02.720
that runs off of my house batteries.

34:02.720 --> 34:04.320
Wait, wait, wait, wait, wait, wait.

34:04.320 --> 34:06.900
Doesn't the Pi run on DC power?

34:06.900 --> 34:09.360
Yes, that's for a future episode, Alex.

34:09.360 --> 34:10.200
Okay.

34:10.200 --> 34:13.900
Once I go solar, I've got to get everything on DC.

34:13.900 --> 34:14.740
Okay.

34:14.740 --> 34:16.520
But right now I just have, I have a surplus,

34:16.520 --> 34:17.360
well not a surplus,

34:17.360 --> 34:21.160
but I have 200 amp hour lithium ion batteries.

34:21.160 --> 34:24.440
So I can get about 12 to 18 hours

34:25.320 --> 34:27.520
of using the RV off battery power.

34:27.520 --> 34:28.640
I wonder how long you could run

34:28.640 --> 34:31.020
just a Pi four off that battery for.

34:31.020 --> 34:31.920
Years probably.

34:31.920 --> 34:33.200
Very, very long time

34:33.200 --> 34:35.420
because a 3800 milliamp battery

34:35.420 --> 34:38.780
supposedly will run it for like 16 hours.

34:40.120 --> 34:42.160
So there's a plug inside this booth seat

34:42.160 --> 34:43.040
and I have every,

34:43.040 --> 34:44.840
so I have installed all of my equipment

34:44.840 --> 34:46.220
inside this booth seat.

34:46.220 --> 34:48.720
I have my switch Velcroed to the wall of it,

34:48.720 --> 34:52.600
my router, all three Raspberry Pis,

34:52.600 --> 34:53.840
the discs that are attached to them,

34:53.840 --> 34:56.160
their USB hubs, everything's Velcroed in

34:56.160 --> 34:58.600
really nice and secure and snug,

34:58.600 --> 35:01.040
but don't call it Velcro, it's loop and hook.

35:01.040 --> 35:02.760
And so I'd hate to go away from that.

35:02.760 --> 35:03.600
Yeah.

35:03.600 --> 35:07.720
You know, you have a very unique set of requirements.

35:08.600 --> 35:11.600
I don't think most people need to drive their data

35:11.600 --> 35:14.960
down the road every week, but you know, if you do.

35:14.960 --> 35:16.240
I think you'd be surprised.

35:16.240 --> 35:19.000
Digital nomads are a bigger and bigger,

35:19.000 --> 35:20.720
bigger work demo.

35:20.720 --> 35:22.780
People who, because really what I'm doing

35:22.780 --> 35:24.560
is I'm trying to build a system for anybody

35:24.560 --> 35:26.480
who needs to work and travel at the same time.

35:26.480 --> 35:27.880
Mine's gonna be at a larger scale,

35:27.880 --> 35:29.600
but the concepts are applicable to anybody

35:29.600 --> 35:31.200
who works and travels.

35:31.200 --> 35:32.940
And so I am trying to solve these in a way

35:32.940 --> 35:37.360
that is low power, works off of maybe solar

35:37.360 --> 35:40.680
and is as best as possible noiseless.

35:41.960 --> 35:43.600
I don't know, you might be right though.

35:43.600 --> 35:44.720
I'd like to hear what the audience thinks

35:44.720 --> 35:46.280
I should do for my storage setup.

35:46.280 --> 35:48.480
Yeah, you can use the hashtag ask SSH.

35:48.480 --> 35:50.640
Now, speaking of the hashtag,

35:50.640 --> 35:54.020
Matty McGraw wrote in through JB Telegram,

35:54.020 --> 35:56.440
for data security, I want to do mirroring

35:56.440 --> 35:59.280
of my data does, directories.

35:59.280 --> 36:01.280
Is ZFS the best choice?

36:01.280 --> 36:04.400
I don't have tons of RAM.

36:04.400 --> 36:05.640
You know, I recently did some testing

36:05.640 --> 36:07.680
that shows that if you have even like 16 gigs of RAM,

36:07.680 --> 36:08.860
you'd probably be all right

36:08.860 --> 36:11.280
with certain storage mounts in reason.

36:11.280 --> 36:12.760
It really kind of scales to how much storage

36:12.760 --> 36:13.800
you have with CFS.

36:13.800 --> 36:15.440
I think in the old days, the recommendation

36:15.440 --> 36:16.480
that I certainly recall,

36:16.480 --> 36:17.800
and maybe we should hit Alan up

36:17.800 --> 36:19.700
for an up-to-date recommendation,

36:19.700 --> 36:21.440
was one gig per terabyte.

36:21.440 --> 36:23.400
I don't know if that still holds true now or what.

36:23.400 --> 36:25.120
Ish, I think is the old recommendation.

36:25.120 --> 36:27.000
But I think the other question

36:27.000 --> 36:30.080
that is embedded within the question is,

36:30.080 --> 36:33.120
if you want data integrity, do you have to go with CFS?

36:33.120 --> 36:35.880
Let's say it's like pictures of the family

36:35.880 --> 36:38.280
and you know, they're just irreplaceable.

36:38.280 --> 36:41.960
Does that, is your only option using ZFS?

36:41.960 --> 36:43.460
I don't know, I think after our conversation today,

36:43.460 --> 36:44.300
it might not be.

36:44.300 --> 36:47.320
Let's take the MergerFS SnapRaid situation, right?

36:47.320 --> 36:48.720
SnapRaid does checksumming.

36:48.720 --> 36:52.000
So every time it calculates parity,

36:52.000 --> 36:54.820
it is checking the integrity of those files

36:54.820 --> 36:56.460
at the file level, not the block level,

36:56.460 --> 36:58.560
which is where ZFS wins out.

36:58.560 --> 37:01.280
But what's interesting is that

37:01.280 --> 37:02.800
you can do your SnapRaid scrub,

37:02.800 --> 37:04.960
which has much the same kind of connotations

37:04.960 --> 37:09.960
as a ZFS scrub, which again, just checks the checksums

37:10.440 --> 37:13.360
and makes sure that the file integrity is there.

37:13.360 --> 37:16.760
You do get things like compression with CFS,

37:16.760 --> 37:20.480
you get encryption, and obviously you get bit rob protection,

37:20.480 --> 37:21.480
which is one of their favorite things.

37:21.480 --> 37:24.240
But really that just means it's checking the data.

37:24.240 --> 37:26.760
And you get other things that are more advanced

37:26.760 --> 37:28.160
that can be really great for backup,

37:28.160 --> 37:30.040
like ZFS send and receive.

37:30.040 --> 37:33.080
And data sets, I'm falling in love with data sets.

37:33.080 --> 37:34.640
Yeah.

37:34.640 --> 37:37.480
However, if this is not, if everything,

37:37.480 --> 37:40.420
if the words we just used do not excite you,

37:40.420 --> 37:41.960
it may not be the file system for you.

37:41.960 --> 37:43.440
That could just be the measure you use.

37:43.440 --> 37:47.680
And I am such a big believer in using systems

37:47.680 --> 37:49.300
that you are comfortable administering

37:49.300 --> 37:51.200
and keeping up to date and secure

37:51.200 --> 37:53.060
if you choose to self host.

37:53.060 --> 37:56.480
This is why I took FreeNAS off of our storage server

37:56.480 --> 37:57.500
here at the studio.

37:57.500 --> 37:59.080
FreeNAS is a great product.

38:00.300 --> 38:03.520
I am not the right type of user for FreeNAS.

38:03.520 --> 38:05.320
When I have a problem with my system,

38:05.320 --> 38:08.040
my troubleshooting technique is to get a command line

38:08.040 --> 38:10.840
and look at the logs, look at the output of the system

38:10.840 --> 38:13.440
and start troubleshooting and start fixing.

38:13.440 --> 38:14.760
That breaks FreeNAS.

38:14.760 --> 38:16.760
You need to use FreeNAS through the GUI.

38:16.760 --> 38:17.940
It's not my use case.

38:17.940 --> 38:21.480
I also, I'm not as familiar with FreeBSD as I am with Linux.

38:21.480 --> 38:23.600
And if it's my super valuable data,

38:23.600 --> 38:25.520
I want it to be on a system that I know how,

38:25.520 --> 38:27.760
like Alex said, I know how to rip the hard drive out,

38:27.760 --> 38:30.360
put it in another system and get to that data.

38:30.360 --> 38:32.000
I gotta know how to do that.

38:32.000 --> 38:34.840
And what ended up happening is once we flipped that thing

38:34.840 --> 38:38.200
over to Linux, I used it a hundred times more.

38:38.200 --> 38:40.420
We've now got so many applications on there.

38:40.420 --> 38:44.480
We've got backups, we've taken care of things

38:44.480 --> 38:47.920
like getting properly signed SSL certificates.

38:47.920 --> 38:50.560
Like it just went, it went much further than I was expecting.

38:50.560 --> 38:53.200
And once I switched to a system I was comfortable with.

38:53.200 --> 38:55.340
So Maddy, that's my number one advice.

38:55.340 --> 38:57.640
I know you've got some experience with Linux.

38:57.640 --> 39:00.720
So I would recommend maybe not doing FreeNAS.

39:00.720 --> 39:02.640
I would also recommend maybe looking

39:02.640 --> 39:04.060
at something like SnapRaid.

39:04.060 --> 39:06.160
You don't need mergerFS to use SnapRaid

39:06.160 --> 39:08.800
if you just want the snapshotting

39:08.800 --> 39:10.560
and backup capabilities of SnapRaid.

39:10.560 --> 39:13.120
And then look into getting that data offsite.

39:13.120 --> 39:16.040
So this is an important thing to focus on,

39:16.040 --> 39:17.280
which you're looking at right now.

39:17.280 --> 39:21.480
But like we mentioned earlier in the show, one is none.

39:21.480 --> 39:22.920
And two is not enough really.

39:22.920 --> 39:24.960
No, no, it really isn't.

39:24.960 --> 39:26.140
But the other thing to consider, right?

39:26.140 --> 39:27.780
Let's say that he went really simple

39:27.780 --> 39:30.320
and used something like rsync just to copy data

39:30.320 --> 39:32.920
from one place to another, one server to another,

39:32.920 --> 39:33.920
one directory to another.

39:33.920 --> 39:36.960
It doesn't really matter, rsync doesn't care.

39:36.960 --> 39:39.160
What you've got to think about is let's say

39:39.160 --> 39:42.320
that you have some kind of, what's that?

39:42.320 --> 39:45.280
Is it crypto malware or something?

39:45.280 --> 39:46.580
Oh yeah, sure enough you mean, yeah.

39:46.580 --> 39:49.160
Crypto ransomware, ransomware, thank you.

39:49.160 --> 39:50.500
Thank you, Brain.

39:50.500 --> 39:53.040
So let's say you have some ransomware situation, right?

39:53.040 --> 39:55.840
Where the files on your source of truth,

39:55.840 --> 39:58.080
your main system get encrypted

39:58.080 --> 40:00.200
and you don't know how to unencrypt them

40:00.200 --> 40:04.660
or you delete something or you just generally screw up, right?

40:04.660 --> 40:07.220
If you have a script

40:07.220 --> 40:10.340
which is automatically overwriting data

40:10.340 --> 40:13.400
at the other end every time, like rsync would,

40:14.400 --> 40:17.680
you're also going to sync the encrypted copy

40:17.680 --> 40:20.940
potentially over the top of your quote unquote backup.

40:20.940 --> 40:23.700
Or a damaged file or deleted files potentially,

40:23.700 --> 40:24.980
depending on how you have it set up.

40:24.980 --> 40:26.520
There's a lot of ways that it could break.

40:26.520 --> 40:28.580
So this is one of the things where ZFS send

40:28.580 --> 40:29.580
would come into play

40:29.580 --> 40:31.720
because you'd have data sets to play with.

40:31.720 --> 40:34.020
And you could just roll back to the old data set

40:34.020 --> 40:35.900
before the ransomware happened.

40:35.900 --> 40:38.660
But is that a common problem?

40:38.660 --> 40:41.420
I mean, the deletion thing is probably quite common

40:41.420 --> 40:44.500
for people, but there are tools like our snapshot

40:44.500 --> 40:48.900
that will do similar sorts of things on a non ZFS system.

40:48.900 --> 40:50.620
There's a lot of options to be honest.

40:50.620 --> 40:52.620
Alex and I both like to use duplicati

40:52.620 --> 40:54.620
as a way to back up some of our server stuff.

40:54.620 --> 40:56.220
Yes, how did I forget duplicati?

40:56.220 --> 40:58.740
Yeah, I use that every day and it just works.

40:58.740 --> 41:01.300
But it suffers from the same situation, right?

41:01.300 --> 41:03.940
If my source of truth here gets encrypted

41:03.940 --> 41:05.060
or I delete something,

41:05.060 --> 41:07.780
it's going to also delete it on the other end.

41:07.780 --> 41:10.260
The nice thing about applications like duplicati,

41:10.260 --> 41:13.180
another one that's super great for local backups

41:13.180 --> 41:15.480
is backup PC, been using it,

41:16.620 --> 41:20.340
I think since like 2008, 2005, I love it.

41:20.340 --> 41:24.060
Backup PC and duplicati will support revisions,

41:24.060 --> 41:24.980
which is really nice.

41:24.980 --> 41:27.380
So you can revert back.

41:27.380 --> 41:30.620
You can also have it configured not to do that.

41:30.620 --> 41:32.500
So that's why it's important to go through it.

41:32.500 --> 41:34.100
When you decide to self host,

41:34.100 --> 41:35.340
this is going to be like my soapbox

41:35.340 --> 41:36.820
for like the first 10 episodes.

41:36.820 --> 41:37.940
When you decide to self host,

41:37.940 --> 41:40.540
you're taking on a little additional responsibility.

41:40.540 --> 41:41.420
You got to check these things.

41:41.420 --> 41:43.660
Do I have revisions and stuff like that?

41:43.660 --> 41:46.660
But here's the thing, when it breaks, it's on you,

41:46.660 --> 41:49.740
not some massive data breach like Equifax

41:49.740 --> 41:50.580
or something like that, right?

41:50.580 --> 41:52.940
Like it's your fault.

41:52.940 --> 41:56.500
And I actually kind of appreciate the honesty of that.

41:56.500 --> 41:59.260
There's also the reality that you're not nearly the target

41:59.260 --> 42:01.740
that Equifax is or Amazon, right?

42:01.740 --> 42:06.140
You're almost in some ways enjoying the obscurity,

42:06.140 --> 42:07.340
I would say.

42:07.340 --> 42:10.660
And I kind of like it to be on me,

42:10.660 --> 42:11.820
because it is my stuff.

42:11.820 --> 42:13.860
It's just a digital version of my stuff,

42:13.860 --> 42:17.020
just like the security of my home is on me.

42:17.020 --> 42:18.540
So I prefer it that way.

42:18.540 --> 42:20.900
I'd rather not outsource the security of my house

42:20.900 --> 42:22.820
or my RV or the studio.

42:22.820 --> 42:26.260
So yeah, I think it's a little more stress,

42:26.260 --> 42:29.020
but it's also very gratifying.

42:29.020 --> 42:30.460
Like when my setup,

42:30.460 --> 42:32.340
when this stuff I'm doing in the RV works,

42:32.340 --> 42:35.860
like with Home Assistant, it genuinely gives me joy.

42:35.860 --> 42:37.140
Like it just gives me so much joy.

42:37.140 --> 42:40.060
And I feel like I know I've done a good job,

42:40.060 --> 42:41.900
like with the wire running for the cameras,

42:41.900 --> 42:43.580
I'm proud of that.

42:43.580 --> 42:44.900
Where I mounted things,

42:44.900 --> 42:46.860
how I've done the pies are mounted

42:46.860 --> 42:48.500
and run the wires for that, I'm proud of that.

42:48.500 --> 42:50.420
Like I've put craftsmanship into it.

42:50.420 --> 42:52.860
It's given me an opportunity at the end of the day

42:52.860 --> 42:55.300
to come home and work on something for an hour or two

42:55.300 --> 42:57.260
that gives me genuine satisfaction.

42:57.260 --> 43:00.620
And it also improves our digital wellbeing.

43:00.620 --> 43:01.500
So there you are, Matty.

43:01.500 --> 43:03.780
I'm sure we've just completely made that

43:03.780 --> 43:05.180
even more complicated for you

43:05.180 --> 43:08.140
by giving you 15 more different options.

43:08.140 --> 43:11.420
You see, why wouldn't everyone want to hashtag ask SSH

43:11.420 --> 43:12.820
and get their question on the show?

43:12.820 --> 43:13.820
Exactly.

43:13.820 --> 43:17.060
So you can get more of the show at selfhosted.show.

43:17.060 --> 43:19.100
I'm on Twitter at ironicbadger.

43:19.100 --> 43:20.460
I'm at Chris LAS.

43:20.460 --> 43:22.580
The network is at Jupiter signal.

43:22.580 --> 43:24.780
And don't forget extras, extras.show

43:24.780 --> 43:27.180
with our merger FS interview coming up,

43:27.180 --> 43:29.860
probably already out by the time you're hearing this episode.

43:29.860 --> 43:31.660
And also a plug for another brunch

43:31.660 --> 43:32.980
that was excellent recently

43:32.980 --> 43:34.900
was the Alan Jude Brunch with Brent.

43:34.900 --> 43:39.100
So, you know, he talks more about ZFS of course,

43:39.100 --> 43:39.940
cause it's Alan.

43:39.940 --> 43:42.180
Yes, and his free BSD stuff.

43:42.180 --> 43:44.300
And yeah, that'd probably be a fun episode

43:44.300 --> 43:45.660
for people that are into self hosting.

43:45.660 --> 43:46.500
Great, great point.

43:46.500 --> 43:48.140
Yeah, check out Brunch with Brent and Alan.

43:48.140 --> 43:49.060
That was a good one.

43:49.060 --> 43:52.900
And then one final JB plug is techsnap.systems.

43:52.900 --> 43:56.140
Yes, talk about getting simple explanations

43:56.140 --> 43:58.540
of how these complicated ZFS things work.

43:58.540 --> 44:01.500
Jim Salter is a master at explaining ZFS.

44:01.500 --> 44:02.340
He's really good.

44:02.340 --> 44:07.340
And particularly techsnap414 is all about ZFS.

44:08.020 --> 44:10.260
And I really enjoyed the snapshot discussion.

44:10.260 --> 44:12.980
And 415 is gonna be about benchmarking,

44:12.980 --> 44:14.260
which should be really interesting.

44:14.260 --> 44:15.100
Absolutely.

44:15.100 --> 44:17.540
So thanks everybody for listening.

44:17.540 --> 44:22.540
That was selfhosted.show slash five.

