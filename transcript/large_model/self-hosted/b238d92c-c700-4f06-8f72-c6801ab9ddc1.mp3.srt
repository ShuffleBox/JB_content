1
00:00:00,000 --> 00:00:04,800
This episode is brought to you by the all new A Cloud Guru, the leader in learning for Cloud,

2
00:00:04,800 --> 00:00:09,280
Linux and other modern tech skills. Hundreds of courses, thousands of hands-on labs.

3
00:00:09,280 --> 00:00:13,040
Get certified, get hired, get learning at acloudguru.com.

4
00:00:14,800 --> 00:00:20,640
This is a bit of an awkward one. Chris just messaged me and said that he's poured 15 gallons

5
00:00:20,640 --> 00:00:25,280
of water all over his MacBook Pro for some reason. I don't know why he'd go ahead and do that.

6
00:00:25,280 --> 00:00:29,600
So we have a backup host today. We have Morgan joining us from Florida. Hello, Morgan. How are

7
00:00:29,600 --> 00:00:34,960
you? You know, a little hot, a little sweaty, but it's what I'm used to. Nothing compared to

8
00:00:34,960 --> 00:00:39,920
the Pacific Northwest this week. Yeah, I can't complain about that. At least I have AC. Yeah,

9
00:00:39,920 --> 00:00:44,000
yeah. Down in Florida, I mean, you kind of have to have it, right? So Morgan,

10
00:00:44,000 --> 00:00:49,040
you last joined us on episode 18 to talk about doorbells. So does that make you our resident

11
00:00:49,040 --> 00:00:54,400
doorbell correspondent? Well, seeing how the doorbell died on me and I think it was actually

12
00:00:54,400 --> 00:01:00,000
the heat that killed it, maybe. All right. Well, let's talk about doorbells, shall we?

13
00:01:00,000 --> 00:01:07,120
Last time you were on, you were testing one of the cloud-free doorbells for us. And how's that

14
00:01:07,120 --> 00:01:14,480
been going? So a couple months ago, I would say back in April, I went to check to see if a package

15
00:01:14,480 --> 00:01:20,000
was left at my door and I noticed that I couldn't connect to the doorbell. So I fired up the,

16
00:01:20,000 --> 00:01:25,040
you know, Unifi app and I noticed it disconnected at about seven something in the morning the day

17
00:01:25,040 --> 00:01:30,240
before. You check the actual doorbell itself, it still has power, it works,

18
00:01:31,200 --> 00:01:37,280
but the camera doesn't work. So, you know, I go on the website, no real help. There's a forum,

19
00:01:37,280 --> 00:01:42,320
because as you guys know, this is a generic relabeled camera. So I go on the website,

20
00:01:42,320 --> 00:01:48,480
the EZViz website, and I start taking a look and there's like 10 or 12 different ways to save it,

21
00:01:48,480 --> 00:01:53,680
to bring it back. Nothing. You know, I couldn't get it to come back. You know, we were super

22
00:01:53,680 --> 00:02:00,320
concerned about heat and it just died on me. You know, I pulled out the SD card and I threw it in

23
00:02:00,320 --> 00:02:05,840
there and, you know, I had it set to just record nonstop. And sure enough, like right at 7am in

24
00:02:05,840 --> 00:02:12,000
the morning, it just died on me. You know, the SD card's fine, but it just died. To check that

25
00:02:12,000 --> 00:02:17,200
it wasn't the transformer, I replaced the transformer, I replaced the electronic doorbell

26
00:02:17,200 --> 00:02:25,040
itself. Everything was fine, just the camera. So I don't know if, you know, I just got unlucky.

27
00:02:25,040 --> 00:02:29,360
You know, the model I had had an issue with it. I've seen other people talk about how they have

28
00:02:29,360 --> 00:02:35,440
them in Arizona and they reach temperatures a lot higher than what I have, but unfortunately for me,

29
00:02:35,440 --> 00:02:41,600
it died. Is yours in direct sunlight? It is in direct sunlight for the last hour or two of the

30
00:02:41,600 --> 00:02:48,480
day. Luckily, my front door faces west and, you know, the houses are two stories. So with the

31
00:02:48,480 --> 00:02:54,000
trees, usually the last two hours of the day and it doesn't get enough direct sunlight to get too

32
00:02:54,000 --> 00:02:58,960
hot. But again, as we mentioned on the original show, it's hot to the touch, you know, so that

33
00:02:58,960 --> 00:03:04,160
was a concern and maybe that's the reason why it bit the bullet. Well, I mean, on the flip side,

34
00:03:04,160 --> 00:03:10,480
I've been using the EZViz branded version of this doorbell for the last year or so at my house.

35
00:03:10,480 --> 00:03:15,520
And as you say, it runs a bit warm, but I've not had any issues with it dropping out or

36
00:03:16,080 --> 00:03:21,440
stopping working or anything like that. I guess it's just based on your field research,

37
00:03:21,440 --> 00:03:26,480
it's just a matter of timing. The downside is there's not a lot of options out there

38
00:03:26,480 --> 00:03:33,280
other than these EZViz clones. RCA makes an EZViz clone and a lot of people are saying that the

39
00:03:33,280 --> 00:03:38,320
firmware is actually a little bit better. You know, Wyze just came out with a camera and

40
00:03:38,320 --> 00:03:44,000
unfortunately, you know, Wyze did a little bit of trickery. You know, there's a USB port that they

41
00:03:44,000 --> 00:03:48,080
cover with a sticker that they don't tell you that's there. You know, there's a YouTube video

42
00:03:48,080 --> 00:03:53,200
that shows you how to access that and it's actually really great for, you know, places like an RV,

43
00:03:54,160 --> 00:04:02,960
but it's cloud storage only. You know, there's no SD card port. So you're in a situation where

44
00:04:02,960 --> 00:04:09,360
you're really being forced into the cloud. And the only viable option that I can find is back to

45
00:04:09,360 --> 00:04:15,920
the EZViz clone. And to be honest with you, I've run without a doorbell camera for a while because

46
00:04:15,920 --> 00:04:22,480
I don't want to buy something that I know is not going to be good. So I may find myself again in

47
00:04:22,480 --> 00:04:29,920
the next few days with yet another EZViz clone, or I may go with the RCA. The RCA one that seems

48
00:04:29,920 --> 00:04:34,960
to be the one that everybody recommends. Yeah, it's interesting. Looking at the Wyze website,

49
00:04:34,960 --> 00:04:41,200
they've started making pretty much everything. I've seen a smartwatch from them recently and

50
00:04:41,200 --> 00:04:46,400
doorbell on top of the cameras and all that kind of stuff. So they're really expanding their

51
00:04:46,400 --> 00:04:52,640
business pretty aggressively at the moment. And I'm not sure how to feel about it. Like they

52
00:04:52,640 --> 00:05:00,720
obviously made their name with these really cheap, affordable $20 little cameras that most people

53
00:05:00,720 --> 00:05:05,040
use. And I've still got a couple in this house that have got the RTSP firmware on them. They

54
00:05:05,040 --> 00:05:13,520
work great. But the version threes, the company says the RTSP firmware is air quotes coming soon.

55
00:05:14,080 --> 00:05:20,560
And that was six months ago and yeah, it hasn't come soon yet. So I don't know why is it kind of

56
00:05:20,560 --> 00:05:26,720
on thin ice with me. So I'd be wary of going down that route just for that reason alone.

57
00:05:26,720 --> 00:05:34,800
There's definitely a market right now for somebody to come in and make a doorbell that is just

58
00:05:34,800 --> 00:05:41,760
bare bones. It does what you need, SD slot, powered either by batteries or powered by a transformer

59
00:05:42,640 --> 00:05:49,040
and has the ability to be connected to stream. The future is getting you into that monthly payment.

60
00:05:49,040 --> 00:05:53,920
And the more features they strip out, the better chance that you're going to make that monthly

61
00:05:53,920 --> 00:05:59,600
payment. And it's really unfortunate and it makes home labs and self-hosting even harder.

62
00:06:00,320 --> 00:06:04,960
I don't know what's going to happen if EasyViz stops selling the clones. I mean, that model is,

63
00:06:04,960 --> 00:06:08,800
I think, a little over two years now. It doesn't look like they're looking to come out with a new

64
00:06:08,800 --> 00:06:16,960
one. Planned obsolescence is a real problem. And I think one of the things we can do to kind of help

65
00:06:16,960 --> 00:06:25,520
the environment in that respect from pointless e-waste is, I suppose on the one hand is consume

66
00:06:25,520 --> 00:06:31,840
less, buy less stuff that we don't need. I mean, our doorbells have functioned fine for 30 years

67
00:06:31,840 --> 00:06:36,560
as just a little switch with a wire going to a little bell in the hallway. The fact that we're

68
00:06:36,560 --> 00:06:40,320
sat here talking about them having a camera in them and all sorts of circuitry and stuff when

69
00:06:40,320 --> 00:06:46,560
there's a global chip crisis is very much a first world problem. But on the other hand,

70
00:06:46,560 --> 00:06:53,200
I think these companies can do a lot more to help us help them really in having open devices and

71
00:06:53,200 --> 00:07:00,080
open firmwares. And I saw some news today come out of the UK about this right to repair bill

72
00:07:00,080 --> 00:07:06,080
that they've passed and how it's unbelievable. The right to repair bill they've passed doesn't

73
00:07:06,080 --> 00:07:13,360
include laptops and phones, which are two of the most important devices that people upgrade

74
00:07:13,360 --> 00:07:18,640
regularly. Fridges and washing machines and all that kind of stuff are important, of course,

75
00:07:18,640 --> 00:07:25,280
because they're very bulky and refrigerant and all that kind of stuff. It's not endless to

76
00:07:25,280 --> 00:07:31,680
manufacture this stuff. But yeah, I think there's some kind of ethical responsibility that these

77
00:07:31,680 --> 00:07:42,080
manufacturers have to start playing the game. But it's all about where's the incentive? Let's take

78
00:07:42,080 --> 00:07:48,960
Samsung, for example. If they make a smartphone and it lasts three years, they foot exactly

79
00:07:48,960 --> 00:07:57,360
0% of the bill to recycle, to dispose of that item. They sell me the phone, I use it for a

80
00:07:57,360 --> 00:08:02,560
little bit and I throw it in the bin. The transaction so far as Samsung is concerned is

81
00:08:02,560 --> 00:08:09,520
I've bought the phone. There's no consequence for them if I throw it in the bin after a day

82
00:08:09,520 --> 00:08:18,000
or after three years. I think until we have a way of getting companies attached to their

83
00:08:19,040 --> 00:08:24,880
environmental footprint, if that's even the right word, the waste that their products generate by

84
00:08:24,880 --> 00:08:30,560
failing prematurely, this cycle is just going to perpetuate. That's a good point. The other thing

85
00:08:30,560 --> 00:08:37,520
you're taking into consideration is you have CEOs of major car manufacturers who are guilt tripping

86
00:08:37,520 --> 00:08:43,120
cryptocurrency miners for wasting electricity without taking into consideration of how does

87
00:08:43,120 --> 00:08:47,120
the electricity get produced that then powers the very car he sells.

88
00:08:47,920 --> 00:08:51,280
I wonder who you could be talking about there. I think his name begins with E and ends with

89
00:08:51,280 --> 00:08:57,360
Lon, right? Possibly. But that's another topic for another day. And I don't want to get attacked

90
00:08:57,360 --> 00:09:03,440
on a Twitter account I don't have. Well, speaking of Twitter, Home Assistant announced this week

91
00:09:03,440 --> 00:09:08,240
that they're going to be working on an official two year integration. This is pretty cool. So

92
00:09:08,240 --> 00:09:13,760
two year the manufacturer are going to be actually writing software that is compatible out of the

93
00:09:13,760 --> 00:09:19,920
box with Home Assistant. I've struggled to deploy Home Assistant. And it's not because I don't want

94
00:09:19,920 --> 00:09:26,480
to use it. It's because I just can't make up my mind what product to go with. And I think the

95
00:09:26,480 --> 00:09:33,600
biggest issue that I'm having is I want to host my own solutions. But I don't want to get vendor

96
00:09:33,600 --> 00:09:40,880
lock in. I don't want to go with something that requires me to do a hack install. I want something

97
00:09:40,880 --> 00:09:46,000
that's just going to be easy. I can take out of the box, I can connect it to my Wi Fi, I can wire

98
00:09:46,000 --> 00:09:51,600
it into my device. And then I can go into Home Assistant, I click a wizard and it's done. And

99
00:09:51,600 --> 00:09:55,440
I've talked to a lot of other people who are in the same situation. We have a lot of really

100
00:09:55,440 --> 00:10:00,640
intelligent people who are out there that are very tech savvy, but they don't want the hassle

101
00:10:00,640 --> 00:10:08,480
of having to configure XML files or JSON, or, you know, installing firmware, etc, etc. It is a pain

102
00:10:08,480 --> 00:10:16,560
and it's the biggest roadblock that I see to get people to adapt. So to hear that somebody's going

103
00:10:16,560 --> 00:10:21,760
to come out and design something that is going to work directly with Home Assistant is integrated

104
00:10:21,760 --> 00:10:27,440
integrated into their firmware is phenomenal. What's really exciting about this piece of news

105
00:10:28,000 --> 00:10:33,360
is that they say that they're going to do the cloud API first with a local API to follow.

106
00:10:33,360 --> 00:10:38,480
Now, I love me a good local API, because I don't see why if I have a light bulb next to me on my

107
00:10:38,480 --> 00:10:44,720
desk, why does it need to go all the way to a data center in outer Mongolia, and then come back to my

108
00:10:44,720 --> 00:10:50,160
desk again? I mean, it's got to travel six feet. So why don't we just why don't we just do that?

109
00:10:50,160 --> 00:10:54,080
Why do we need to go out and in again? So that's very exciting to me too.

110
00:10:54,080 --> 00:10:57,520
Yeah, I totally agree. And it's interesting what you're saying about a local API.

111
00:10:58,320 --> 00:11:03,680
When you got me hooked on Shelly's, and I wired a couple Shelly's into control some lights around

112
00:11:03,680 --> 00:11:10,480
the house. The first thing I did is I timed it. How long does it take to tell Alexa to turn off

113
00:11:10,480 --> 00:11:17,200
the light? Compared to how long does it take to open the app and I click the lights off and they

114
00:11:17,200 --> 00:11:25,040
turn off. And these are seconds that we're talking about. But just the idea that it's instantaneous,

115
00:11:25,600 --> 00:11:30,640
right? We're not having to transverse the internet. I have no idea who's looking at my packets,

116
00:11:30,640 --> 00:11:38,800
what Amazon is trying to do with what I just said. But the idea that it's local, it's in your house.

117
00:11:38,800 --> 00:11:44,880
If you lose internet, you can still control your lights. Can't do that when you're cloud connected.

118
00:11:44,880 --> 00:11:48,160
We've probably got some people listening that are going, yeah, what was wrong with a light switch?

119
00:11:48,160 --> 00:11:50,800
I mean, you could control your lights without the internet with a light switch.

120
00:11:51,520 --> 00:11:56,160
But you can't automate a light switch particularly well. I suppose you could have a child and get

121
00:11:56,160 --> 00:12:00,560
them to walk over and flick the switch. But that's quite an expensive solution really, isn't it?

122
00:12:00,560 --> 00:12:07,760
Yeah, and I have six lights that are embedded in the ceiling where I watch our movies. And sometimes

123
00:12:07,760 --> 00:12:13,760
I want four of them on, or I want the two behind me on. And previously, they were all wired to an

124
00:12:13,760 --> 00:12:18,800
on and off switch. And I really don't want to be in a situation where I need to run six, eight

125
00:12:18,800 --> 00:12:24,160
switches to get what I want. But I spent a day, ran some wires, installed some shellies. And

126
00:12:24,960 --> 00:12:30,080
when I say turn off one, two, three, and four, they turn off.

127
00:12:30,080 --> 00:12:31,120
Bada bing, bada boom.

128
00:12:31,760 --> 00:12:36,240
A couple months ago, I finally decided that I was going to pull out the wallet

129
00:12:36,240 --> 00:12:41,840
and make some purchases and build a home server. Now, I had a home lab that I previously talked

130
00:12:41,840 --> 00:12:48,000
about before, but it was just that it was a lab. I tore it up, broke it a lot. It broke a lot.

131
00:12:48,560 --> 00:12:55,920
So it wasn't something that I could reliably count on to host services that my kids

132
00:12:56,560 --> 00:13:03,680
need every day to watch movies, TV, to listen to music, all that good stuff.

133
00:13:03,680 --> 00:13:05,440
Really important stuff, right?

134
00:13:05,440 --> 00:13:12,880
The things that keep them from driving me insane. So, Alex, you had a UNAZ that you had bought

135
00:13:13,600 --> 00:13:18,800
and you didn't need anymore. So I graciously, for a decent price, took that off your hands.

136
00:13:19,600 --> 00:13:27,280
And I set it up, got it all built, slapped in a bunch of spinning disks, set up merger FS.

137
00:13:27,840 --> 00:13:34,080
Well, I didn't go to perfectmediaserver.com and I didn't read the directions. So I totally didn't

138
00:13:34,080 --> 00:13:39,440
set up merger FS properly. And I found out that we really couldn't stream two or three

139
00:13:39,440 --> 00:13:43,040
movies at a time because they just weren't handling the bandwidth. And I was like,

140
00:13:43,040 --> 00:13:48,800
what did I do wrong? And then I realized, genius, everything's going to one disk.

141
00:13:48,800 --> 00:13:53,120
You're trying to stream a bunch of movies at one time. People are trying to listen to music.

142
00:13:53,120 --> 00:13:59,040
It's just not going to work. So I had to find something that would let me properly rebalance.

143
00:13:59,040 --> 00:14:07,840
And off to Google I went. And so I fell upon merger FS-tools. It's over on GitHub, fantastic,

144
00:14:07,840 --> 00:14:14,640
easy to set up, clone the repository, and within seconds, everything's being rebalanced across my

145
00:14:14,640 --> 00:14:18,400
drives. Yeah, these tools are really great actually. And there's a few of them. It's

146
00:14:18,400 --> 00:14:27,040
mergerFS.ctl.fsoc.dupe. And the first one is mergerFS.ctl. This is a wrapper around the

147
00:14:27,040 --> 00:14:33,840
mergerFS ex-attra interface. Essentially what this lets you do is add and remove drives as well as

148
00:14:33,840 --> 00:14:39,040
get info about the array that's in there. And print things like your version and your mount

149
00:14:39,040 --> 00:14:43,760
point and stuff like that. Pretty useful if you need it. Probably most people won't need that one,

150
00:14:43,760 --> 00:14:52,960
but it's there if you do. The next one is mergerFS.fsoc. So mergerFS, FS check,

151
00:14:52,960 --> 00:14:58,080
audit permissions, ownership of files and directories in a mergerFS mount. And then

152
00:14:58,080 --> 00:15:01,840
one of the great tools that I really like is mergerFS.dupe.

153
00:15:01,840 --> 00:15:06,240
No, no, no, hold on, hold before we sweep this under the carpet, we've got to clear this up.

154
00:15:06,240 --> 00:15:12,800
FSoc or FS check. If you have an opinion on this, let us know at self-hosted show on Twitter,

155
00:15:12,800 --> 00:15:13,280
please.

156
00:15:13,280 --> 00:15:16,000
I don't know. I think FSoc sounds a little dirty.

157
00:15:16,000 --> 00:15:23,920
FSCK. All right, mergerFS.dupe. This one duplicates files and directories across different branches

158
00:15:23,920 --> 00:15:30,800
in a pool. The selected file can be duplicated using the dupe option. So this could be useful

159
00:15:30,800 --> 00:15:37,280
if you're not using something like SnapRaid for kind of parity type redundancy. This one would

160
00:15:37,280 --> 00:15:41,920
literally physically duplicate a file across X number of disks.

161
00:15:41,920 --> 00:15:46,720
And then of course, you have the follow up to that, which is mergerFS.ddupe. ddupe does as it

162
00:15:46,720 --> 00:15:52,720
says, it finds removed duplicate files across pools. You can set up ignore, ddupe, and strict

163
00:15:52,720 --> 00:16:00,080
options to target specific use cases. I can tell you this one I use right away because as I was

164
00:16:00,080 --> 00:16:05,840
copying pictures over, I copy them from my Mac, I copy them from my Fedora box. And I knew that I

165
00:16:05,840 --> 00:16:09,040
had them in multiple places because as they say, if you don't have three copies,

166
00:16:09,040 --> 00:16:10,400
It may as well not exist.

167
00:16:10,400 --> 00:16:17,040
The first thing I did is I ran the ddupe because this became my fourth copy. And there was no point

168
00:16:17,040 --> 00:16:21,760
in having multiple of the same files everywhere. It was really quick. I was really surprised.

169
00:16:22,560 --> 00:16:27,920
One of the things I like about the ddupe tool is by default, it doesn't actually delete anything.

170
00:16:27,920 --> 00:16:33,920
You have to explicitly set execute mode, which for fat fingered people who don't read the docs

171
00:16:33,920 --> 00:16:36,320
like me on occasion, that's a good thing.

172
00:16:36,320 --> 00:16:42,320
And then again, as I originally mentioned, there's the mergerFS balance, probably the best feature

173
00:16:42,320 --> 00:16:46,720
you're going to run into. It's going to make sure that your data is balanced equally across the

174
00:16:46,720 --> 00:16:51,040
pool. You can set a defined range. I think the default is like 2%.

175
00:16:51,680 --> 00:16:57,360
So the last one is mergerFS.consolidate. And this does the complete opposite of balance, really.

176
00:16:57,360 --> 00:17:02,480
It takes things from multiple places and puts them and co-locates them all onto one single drive.

177
00:17:02,480 --> 00:17:06,320
That one requires rsync. I think there's a couple of others that require rsync as well.

178
00:17:06,320 --> 00:17:10,560
But obviously under the hood, it's just doing some rsync magic to copy that stuff around.

179
00:17:10,560 --> 00:17:14,320
It's definitely great. Like I said, if you're running mergerFS in your home lab,

180
00:17:14,880 --> 00:17:18,800
definitely check it out. I'm sure there's going to be at least one tool in there that's going to

181
00:17:18,800 --> 00:17:19,300
help you out.

182
00:17:21,040 --> 00:17:26,880
linode.com slash SSH. Go there to get a $100 60-day credit on your new Linode account.

183
00:17:26,880 --> 00:17:32,000
Linode is the largest independent cloud provider, and it's the largest cloud provider in the world.

184
00:17:32,000 --> 00:17:37,040
Now, no matter what skill level you're at, what technology stack you use, Linode can help your

185
00:17:37,040 --> 00:17:41,680
ideas come to life on the web. If you run into any trouble getting set up, Linode comes with

186
00:17:41,680 --> 00:17:47,280
amazing 24-7 customer support by phone or ticket, along with hundreds of guides and tutorials to

187
00:17:47,280 --> 00:17:53,280
help you get started. Linode has an easy to use and powerful cloud dashboard, S3 compatible object

188
00:17:53,280 --> 00:17:59,040
storage, cloud firewalls, simple one-click application deployments, super fast networking,

189
00:17:59,040 --> 00:18:04,560
and so much more. Linode started in 2003 as one of the first companies in cloud computing,

190
00:18:04,560 --> 00:18:09,680
three years before AWS and other enterprise providers. They're independently owned and founded

191
00:18:09,680 --> 00:18:15,120
on a love for Linux. And I tell you, when you use Linode and you dig into some of their more advanced

192
00:18:15,120 --> 00:18:21,360
stuff, by the way, did you know they will let you boot your own ISOs? Oh, yes. If you want to run

193
00:18:21,360 --> 00:18:27,440
some esoteric thing from 20 years ago, you can try and do that on Linode. So go to linode.com

194
00:18:27,440 --> 00:18:34,320
slash SSH and get a $100 60-day credit on your new Linode account. That's linode.com slash SSH.

195
00:18:37,040 --> 00:18:42,720
One of the downsides of having a home lab and then a media server is I needed permission to

196
00:18:42,720 --> 00:18:48,000
buy it and I needed permission to where to put it. So the downside is it's next to my desk and

197
00:18:48,000 --> 00:18:53,280
it's in a small little hole. And I have my three monitors and my Mac book, and then I have my

198
00:18:53,280 --> 00:18:59,600
desktop for work. And I have so many cables, and I'm constantly in a situation where

199
00:19:00,080 --> 00:19:06,080
when I need to hook up to the UNAZ, I'm unplugging a cable, same thing with the ESXi box,

200
00:19:06,080 --> 00:19:13,120
and I need a solution. But I need a solution that really works. I don't want the old style KVM

201
00:19:13,120 --> 00:19:17,360
where you're running all these cables and you're pushing a button. I want something that works with

202
00:19:17,360 --> 00:19:25,280
a modern monitor, HDMI, and something that just works. Well, I was actually talking with Wendell

203
00:19:25,280 --> 00:19:29,760
about this the other night because he did a video on Pi KVM and I sort of messaged him afterwards

204
00:19:29,760 --> 00:19:36,640
and said, you know what would be really great is if I could take that single Pi4 that I've got

205
00:19:36,640 --> 00:19:44,160
acting as a KVM unit and control three or four systems with it. I'm like, well, surely this

206
00:19:44,160 --> 00:19:49,120
should be possible with an HDMI switcher, but I tried a couple in the past and they need you

207
00:19:49,120 --> 00:19:53,040
to actually be physically present to push the button on the front of the damn thing to change

208
00:19:53,040 --> 00:19:58,560
the input from system one to system two, three, four, whatever. But the really nice thing about

209
00:19:58,560 --> 00:20:07,440
the unit that I've put in the show notes, it's a four port HDMI switch. It was about $60. And this

210
00:20:07,440 --> 00:20:12,960
thing lets you use a keyboard shortcut to change input. So I just press control, control one,

211
00:20:12,960 --> 00:20:19,680
control, control two, and that changes the input on the KVM switch. So how I've got it wired up is

212
00:20:19,680 --> 00:20:29,280
the HDMI goes from the server out into the input of input one on the switch. And then it comes from

213
00:20:29,280 --> 00:20:37,280
the switch output port into the capture port on the Raspberry Pi4 through the CSI bridge. Now,

214
00:20:37,280 --> 00:20:42,000
I've written a blog post about this, of course, because that's what I seem to spend my spare time

215
00:20:42,000 --> 00:20:46,800
doing. And I put a link to it in the show notes with a little diagram in case that is a little

216
00:20:46,800 --> 00:20:52,400
confusing to follow by my talking, but it takes about five minutes to wire up and put together.

217
00:20:53,360 --> 00:20:58,160
And yeah, it just, it just works, Morgan. That's the really cool thing. I can now switch between

218
00:20:58,160 --> 00:21:04,880
my server and my other server and my Raspberry Pi3 that's doing DNS. And they all just appear

219
00:21:04,880 --> 00:21:10,400
in the browser. It's like magic. Does it have the ability to record? Can you record the output?

220
00:21:10,400 --> 00:21:15,360
I don't think it does. You can record macros so you can record different keyboard, you know,

221
00:21:15,360 --> 00:21:19,200
sequences and mouse sequences and that kind of thing, but I don't think it will let you record

222
00:21:19,200 --> 00:21:25,360
the actual stream, although it's a WebRTC based system. So I would wonder if there's some kind

223
00:21:25,360 --> 00:21:30,400
of a stream that we could hook into with VLC or something and maybe do it like that. If you know

224
00:21:30,400 --> 00:21:34,240
the answer to that again, write in and let us know at selfhosted.show slash contact.

225
00:21:35,360 --> 00:21:40,160
Now you're much more of a sysadmin than I am. I would say you've got a bit of a background

226
00:21:40,160 --> 00:21:44,560
working in all sorts of different places, cruise ships and hospitals and all sorts of places,

227
00:21:44,560 --> 00:21:50,320
right? So you've probably run into email gateway issues when servers are trying to notify you that

228
00:21:50,320 --> 00:21:56,400
they've failed. That's always been one of the fun parts about working in a data center. Most of my

229
00:21:56,400 --> 00:22:00,880
employment has been with exchange and you always run into these systems that just need an open

230
00:22:00,880 --> 00:22:06,400
relay or as anybody knows, open relays are a little bit dangerous in the world. So you're

231
00:22:06,400 --> 00:22:13,040
always looking for a good solution for an SMTP gateway that isn't expensive.

232
00:22:13,040 --> 00:22:16,800
Or you can do what most people do and just copy their Gmail password around onto various

233
00:22:16,800 --> 00:22:20,480
boxes and have it connect that way. I mean, what's the worst that can happen?

234
00:22:20,480 --> 00:22:24,960
Yeah, when you're working from your home, but what happens when you're working in a data center?

235
00:22:24,960 --> 00:22:26,800
You're probably going to get that blocked.

236
00:22:26,800 --> 00:22:31,360
Probably. Yeah. So I have an app pick for you that might tickle your fancy. This one's called

237
00:22:31,360 --> 00:22:37,360
MailRise and this is an SMTP gateway for notifications. Essentially it plugs into an

238
00:22:37,360 --> 00:22:43,600
app we've mentioned before called AppRise. So this MailRise application kind of sits in the middle

239
00:22:43,600 --> 00:22:48,720
listening for emails, you know, syslog emails, whatever it might be, failures coming in from

240
00:22:48,720 --> 00:22:54,880
various different system services. And when it receives the email, it reacts to that and then

241
00:22:54,880 --> 00:23:01,520
connects to AppRise. So you can talk to any of the 60 plus notification services that AppRise

242
00:23:01,520 --> 00:23:07,840
supports. So, you know, Telegram, Slack, Discord, you name it. For those of you who are new to the

243
00:23:07,840 --> 00:23:13,920
show or possibly missed that episode, AppRise is a great tool that allows you to send notifications

244
00:23:13,920 --> 00:23:19,360
to almost all the most popular notification services today. Think Telegram, Discord,

245
00:23:19,360 --> 00:23:25,200
Slack, Reddit, for those people who are really cool. It's a one notification library to rule

246
00:23:25,200 --> 00:23:32,480
them all. And what's great is the tool MailRise, as Alex said, sits in front of that and is an

247
00:23:32,480 --> 00:23:39,040
SMTP gateway. So there's a lot of applications that really don't have the ability to have that

248
00:23:39,040 --> 00:23:43,920
newer feature and MailRise gives you that by allowing you to send emails to the SMTP gateway

249
00:23:43,920 --> 00:23:50,640
and then you can send it off. So when your laundry is done, you can send an email and

250
00:23:50,640 --> 00:23:54,240
post it on Reddit to let everybody know I now have clean clothes.

251
00:23:54,800 --> 00:24:00,720
Hooray for that. And that, you know, we live in the future. We can monitor Morgan's laundry

252
00:24:00,720 --> 00:24:10,800
schedule via Reddit. And speaking of the cloud, cloudfree.shop has some exciting news this week.

253
00:24:10,800 --> 00:24:15,840
They have released their version two smart plugs. So these are really cool. They've got

254
00:24:15,840 --> 00:24:22,160
energy monitoring built right in. And of course they run TAS motor out of the box. And you know,

255
00:24:22,160 --> 00:24:26,960
the best thing about the company, it's a small family owned business run by one of our very own

256
00:24:26,960 --> 00:24:31,440
listeners. Now you can go to cloudfree.shop and use the coupon code self-hosted so that they know

257
00:24:31,440 --> 00:24:37,280
that we sent you and you also get a dollar off per plug as well. So that's cloudfree.shop

258
00:24:37,280 --> 00:24:43,920
with the coupon code self-hosted. Mike writes to us. Hey guys, love the show.

259
00:24:43,920 --> 00:24:48,240
I'm a long time Linux user and administrator, but I have to admit I've fallen a little behind

260
00:24:48,240 --> 00:24:53,040
on the whole container craze. That's understandable Mike. I'm very comfortable with VMs.

261
00:24:53,040 --> 00:24:58,000
They always made logical sense to me. You have a virtual disk image, probably something with

262
00:24:58,000 --> 00:25:03,040
some metadata in it, and you get to run as a full fledged system. Something about the whole

263
00:25:03,040 --> 00:25:08,560
Docker runs X and it just magically happens without specifying any parameters just struck

264
00:25:08,560 --> 00:25:14,240
me as creepy. Regardless, I've used them a little bit inside of firewall for land services,

265
00:25:14,240 --> 00:25:18,400
but I'm wondering if there are best practices that either of you use. For instance, when you're

266
00:25:18,400 --> 00:25:23,120
running multiple containers with persistence, where would you put the compose file? Do you have

267
00:25:23,120 --> 00:25:28,320
any tips for organizing container volumes on CFS? I've looked around and I haven't found any good

268
00:25:28,320 --> 00:25:33,360
articles. Just lots of run Docker compose up and magic happens, which is disconcerting in a

269
00:25:33,360 --> 00:25:39,280
production environment to me. That's the beautiful thing of Docker is it is just magic. For some

270
00:25:39,280 --> 00:25:45,680
people, that's exactly what they need. For your average person running an Unraid box or a small

271
00:25:45,680 --> 00:25:52,960
Raspberry Pi who's not working in this stuff day to day, being able to do Docker run Plex or

272
00:25:52,960 --> 00:25:58,480
whatever it is without having to juggle half a dozen bash scripts and eight different versions of Java

273
00:25:58,480 --> 00:26:06,240
and all this kind of crap. That's exactly where Docker is going to win. Also developers, if they're

274
00:26:06,240 --> 00:26:11,680
trying to do multiple different versions of an application development lifecycle all at once.

275
00:26:12,320 --> 00:26:17,520
I've got three different builds and I'm trying to figure out which one is causing my production

276
00:26:17,520 --> 00:26:23,120
systems to go down. It's very easy to isolate and roll back a container that way because it's a

277
00:26:23,120 --> 00:26:30,080
declarative build. I understand there are some more old school people around that don't like

278
00:26:30,080 --> 00:26:37,440
that approach because it is a little more opaque than you've been used to. However, I would say

279
00:26:38,160 --> 00:26:42,560
the reason it appears opaque is because perhaps you haven't quite taken the amount of time you

280
00:26:42,560 --> 00:26:50,080
need to look into where that container originated from. Sometimes you can go and look at the Docker

281
00:26:50,080 --> 00:26:54,880
file in the open source community and see basically a Docker file is like a recipe.

282
00:26:54,880 --> 00:27:02,400
It's a glorified bash script essentially and say app install this package, create this user,

283
00:27:02,400 --> 00:27:09,600
install this particular library and on the whole those containers work pretty well. This is a

284
00:27:09,600 --> 00:27:17,120
problem that used to exist that I haven't seen really be a problem for quite some time now is

285
00:27:17,840 --> 00:27:22,640
a lot of containers used to get uploaded to Docker Hub without a Docker file. You had to just trust

286
00:27:22,640 --> 00:27:26,960
that they weren't going to run a crypto miner on you or something like that. That problem largely

287
00:27:26,960 --> 00:27:32,400
seems to have gone away. There are lots of different places you can go. Linux server.io is one

288
00:27:32,400 --> 00:27:37,200
of them. You can go to obviously Docker's website as well for some documentation there.

289
00:27:37,200 --> 00:27:42,240
I'm going to say something that's probably not going to be popular, but I don't think

290
00:27:42,240 --> 00:27:48,880
containers are solution for everything. And it's Alex and I know containers are what puts roof

291
00:27:48,880 --> 00:27:53,680
over our heads. And I will honestly tell you again, I don't think containers are the solution

292
00:27:53,680 --> 00:28:00,480
for everything. You don't always need to build a server and install Docker or Podman and run a

293
00:28:00,480 --> 00:28:07,280
container on it. Sometimes you can just install the DBN, the dev files or the RPM files and configure

294
00:28:07,280 --> 00:28:14,720
yourself. However, what containers do is it makes it easier to install services that work together.

295
00:28:15,600 --> 00:28:19,440
If you have a service that goes out and queries, it does a search for a file,

296
00:28:20,800 --> 00:28:25,280
injects that download file into the download service. The download service then downloads

297
00:28:25,280 --> 00:28:31,200
the file. Another service grabs the file, reads the metadata, processes it. That's going to be

298
00:28:31,200 --> 00:28:36,000
really difficult. How do we know that all three of those services require the same version of libc?

299
00:28:36,560 --> 00:28:42,320
How do we know that they require a specific version of go, et cetera, et cetera. You don't

300
00:28:42,320 --> 00:28:46,160
want to run into the situation where you're constantly looking at dependencies. And that's

301
00:28:46,160 --> 00:28:51,920
what containers do. So if you're doing a standalone box or standalone application,

302
00:28:51,920 --> 00:28:57,120
yeah, doing the fat install is perfectly fine. But whenever you want to make sure that everything's

303
00:28:57,120 --> 00:29:01,760
going to work together and they're not going to butt heads, that's the real reason why containers

304
00:29:01,760 --> 00:29:07,920
were created. Now, to answer your question about Docker compose files, the way I do it,

305
00:29:07,920 --> 00:29:13,280
and I'm sure Alex does it his way, is if the services need to speak to each other,

306
00:29:13,280 --> 00:29:20,160
they're in the same compose file. I run 10 or 12 containers on my home lab. And if the service does

307
00:29:20,160 --> 00:29:25,200
not need to talk to each other, it gets its own compose. That's the way that I've always done it.

308
00:29:25,200 --> 00:29:32,080
There's no reason for me to do a Docker compose up with Adguard in the same exact compose as Plex.

309
00:29:32,080 --> 00:29:35,440
They don't need to talk to each other. They don't need to be on the same Docker network.

310
00:29:35,440 --> 00:29:37,280
They can live in different Docker compose files.

311
00:29:37,920 --> 00:29:42,000
I once had a colleague tell me that Docker was a solution looking for a problem.

312
00:29:43,120 --> 00:29:48,880
Back then, this was like six years ago. I got really hot and steamy under the collar about this

313
00:29:48,880 --> 00:29:53,440
because Docker was the new hotness and I could see that it was going to solve all the world's

314
00:29:53,440 --> 00:29:58,160
problems. And with a little bit of hindsight, I think I kind of agree with him in some ways.

315
00:29:59,040 --> 00:30:06,000
It definitely has its use cases, but there are also places where VMs are probably better.

316
00:30:06,800 --> 00:30:11,760
Now, coming to another part of Mike's question, he asks about tips for organizing container

317
00:30:11,760 --> 00:30:17,360
volumes on ZFS. I just create a data set per app, Mike. It's as simple as that.

318
00:30:17,360 --> 00:30:24,640
You can set quotas. You can do snapshots using Jim Salter's Sanoid tool. I have it set to do,

319
00:30:24,640 --> 00:30:29,600
I think, four hours worth of app data, snapshots, and then keep a daily snapshot and a monthly and

320
00:30:30,240 --> 00:30:35,680
an annual snapshot. The only thing to be aware of there is if you're doing something like InfluxDB

321
00:30:35,680 --> 00:30:41,840
or some kind of really chatty time series container or database that generates a lot of data,

322
00:30:42,400 --> 00:30:46,720
those snapshots will take up a lot of space because of how copy on write works.

323
00:30:46,720 --> 00:30:51,120
So just make sure you're familiar with that concept before you dive into that one.

324
00:30:51,920 --> 00:30:55,200
Ivan writes in, do you guys host your own email server?

325
00:30:55,200 --> 00:30:59,040
And what are your thoughts on this? This might be a good idea for the show.

326
00:31:00,480 --> 00:31:07,600
I can tell you on a personal note, I love Gmail. Why do I love Gmail? It's easy. They read my

327
00:31:07,600 --> 00:31:13,680
emails. They tell me what I want to buy. It works on my phone and they give me a bunch of storage.

328
00:31:13,680 --> 00:31:20,320
But I can also tell you my private email is for my family only. I don't give it out to anybody

329
00:31:20,320 --> 00:31:26,560
who isn't related to me by marriage or by blood. And I run, therefore, my own email server. It's

330
00:31:26,560 --> 00:31:33,200
been $5 a month. It's on Linode. I recommend everybody use it. Do you, I want you to contact

331
00:31:33,200 --> 00:31:41,040
me for a job offer? I have a Gmail. Do I want to sign up for FPNL? Gmail. Do I want to send pictures

332
00:31:41,040 --> 00:31:47,920
to my mom, my kids, personal email? I know that no one's ever going to get a hold of it. I know

333
00:31:47,920 --> 00:31:54,160
that I'm not going to have to worry about getting spam because again, that's what Gmail is for. It's

334
00:31:54,160 --> 00:32:00,240
for spam filtering. My email that I host is for family only. It's for things that I want for me

335
00:32:00,240 --> 00:32:07,280
and only my family. And I recommend everybody to do the same. Again, it's $5 a month. Super easy

336
00:32:07,280 --> 00:32:14,000
to set up. I like Gmail too. It just works. So Thomas writes in with networking on his mind,

337
00:32:14,800 --> 00:32:20,400
I wondered if either of you have touched VLANs on home networks. I just got two Netgear smart POE

338
00:32:20,400 --> 00:32:25,440
switches and I'm thinking about how best to segment my network. I've got a NUC with Fedora on it and

339
00:32:25,440 --> 00:32:32,640
a Windows laptop. I've also got a NAS running some containers and I make use of WireGuard and Plex

340
00:32:32,640 --> 00:32:38,240
on there as well. I've also got a Wi-Fi network that has a Google Nest and a pair of smart scales.

341
00:32:39,280 --> 00:32:44,480
Thanks for an interesting show and inspiration for my home network. Thomas. VLANs in the home network

342
00:32:45,920 --> 00:32:51,920
is an interesting topic. I think for 90 plus percentage of the world, you don't need them

343
00:32:53,120 --> 00:32:58,720
until you start considering IoT devices and how insecure they are and who can get access to them.

344
00:32:58,720 --> 00:33:04,800
And the second you have IoT devices that are a huge gaping security hole, you need to segment them.

345
00:33:04,800 --> 00:33:09,600
And that's where VLANs come in. And that's the number one thing I do. My Wyze cameras,

346
00:33:09,600 --> 00:33:18,720
their own separate VLAN and SSID. My EcoVac smart vacuum on its own SSID and its own VLAN,

347
00:33:19,280 --> 00:33:25,040
because I want to segment anything on my network that is going to potentially open me up to attack.

348
00:33:25,040 --> 00:33:29,840
The other reason why I use VLANs is again, as I mentioned, I have a home lab. I have all these

349
00:33:29,840 --> 00:33:35,360
services running. Sometimes I have multiple THCP that I'm testing, et cetera. I don't want that to

350
00:33:35,360 --> 00:33:41,680
conflict with my home network. So that's where VLANs come in. I use VLANs for DMZ, things that

351
00:33:41,680 --> 00:33:48,480
I want to expose outside my network. VLANs are really about segmentation. Take what you need,

352
00:33:48,480 --> 00:33:56,160
that needs to talk to each other and put it on its own VLAN. And that's the way you should think

353
00:33:56,160 --> 00:34:02,080
about it. Somehow I've managed to avoid the temptation of VLANs this whole time, because it

354
00:34:02,080 --> 00:34:05,760
requires a bit of extra hardware or a bit more advanced hardware. So you've got to have a couple

355
00:34:05,760 --> 00:34:14,400
of switches that support VLANs and something to configure them at the router level as well. So

356
00:34:14,400 --> 00:34:17,920
it's not just a plug and play thing. You've got to have a bit more about you to do it. And I've

357
00:34:17,920 --> 00:34:23,440
just swept that one under the carpet and just opened up a bigger subnet and put things in

358
00:34:23,440 --> 00:34:27,920
different subnets and just prayed and hoped for the best, really. That's been my approach.

359
00:34:29,040 --> 00:34:36,400
I'm sure that most people who are running home labs, they have Ubiquiti, Microtech. A lot of

360
00:34:36,400 --> 00:34:40,560
the equipment that we already have can do it. That's a good point. I think the biggest issue

361
00:34:40,560 --> 00:34:47,920
is that people look at VLANs and they're a little hesitant because they're afraid of what it can do.

362
00:34:47,920 --> 00:34:53,040
I can definitely tell you I've gotten VLANs wrong and I've made a mess of things,

363
00:34:53,040 --> 00:34:54,640
but that's what a home lab is for.

364
00:34:54,640 --> 00:35:00,000
Break some eggs. All right. Well, thank you very much for joining us this week, Morgan. It was a

365
00:35:00,000 --> 00:35:04,560
very, very last minute that we had to call upon you because we generally record the night before

366
00:35:04,560 --> 00:35:08,960
the show goes out on the Friday morning. So we didn't have much time after Chris's laptop

367
00:35:08,960 --> 00:35:15,760
got flooded. Also, a big thank you to our members over at selfhosted.show.sre. You can go over there

368
00:35:15,760 --> 00:35:21,200
and support the show. Obviously, we do appreciate that because it goes straight into the JB coffers

369
00:35:21,200 --> 00:35:25,120
to support the network directly, so we don't have to have as many sponsors on the shows.

370
00:35:25,840 --> 00:35:29,840
Speaking of which, we have to thank A Cloud Guru, and you can find them just about anywhere on

371
00:35:29,840 --> 00:35:35,680
social media. They are slash A Cloud Guru on Facebook, YouTube, Twitter, just about everywhere.

372
00:35:35,680 --> 00:35:39,680
So for all the different ways to go and get in touch with us, you can go to selfhosted.show

373
00:35:39,680 --> 00:35:43,280
slash contact is the place to go to get in touch with us, and you can find me on Twitter

374
00:35:43,280 --> 00:35:47,920
at ironicbadger. And I don't have social media because I don't want to be canceled.

375
00:35:51,040 --> 00:35:55,200
Oh, well, I know you troll people on Reddit on a regular basis, but you can also find the show

376
00:35:55,200 --> 00:36:06,080
at selfhosted.show. Thanks for listening, everybody. That was selfhosted.show slash 48.

