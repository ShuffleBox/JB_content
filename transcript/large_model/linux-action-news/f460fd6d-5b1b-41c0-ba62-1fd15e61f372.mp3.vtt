WEBVTT

00:00.000 --> 00:16.080
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.080 --> 00:20.280
This is episode 96, recorded on March 10th, 2019. I'm Chris.

00:20.280 --> 00:21.280
And I'm Joe.

00:21.280 --> 00:27.720
Hello, Joe. Good to be connected with you live from Scale17x here in Pasadena, California.

00:27.720 --> 00:31.480
We have so much to get into this week, some of which I've actually got a chance to talk

00:31.480 --> 00:36.680
to the people involved with the stories. But let's start out with a brand new fresh release

00:36.680 --> 00:37.680
of Ubuntu Touch.

00:37.680 --> 00:41.880
Yeah, it's not a massive release, but it is important in a sense of they are really starting

00:41.880 --> 00:48.480
to polish the OS now and concentrating on the Morph browser, which given that there

00:48.480 --> 00:53.200
aren't that many apps available and you're using the web for quite a lot of things is

00:53.200 --> 00:54.480
very important.

00:54.480 --> 00:58.280
I'm just happy to see that they launched an experimental system-wide dark theme.

00:58.280 --> 01:02.040
Yeah, I thought you might notice that one, yeah.

01:02.040 --> 01:05.680
I like the name of their app store too. It's called the Open Store, which I thought was

01:05.680 --> 01:09.740
kind of nice. They say during this cycle too, they re-enabled automated testing on their

01:09.740 --> 01:15.240
continuous integration system. And then they watched as some packages failed to build,

01:15.240 --> 01:19.440
which then they got to working on those things. I think it's nice to see them improving things

01:19.440 --> 01:25.520
like testing, automated testing, and also traditional testing. But as a project, one

01:25.520 --> 01:30.080
of the things that strikes me that you don't often see is how clearly they call out the

01:30.080 --> 01:37.340
individual contributors. And even in the changelog, they don't break it out by date or a bug number,

01:37.340 --> 01:41.160
they break it out by contributor. And then they individually list which each contributor

01:41.160 --> 01:45.960
of the project got into this particular release. And I don't really see that very often.

01:45.960 --> 01:51.160
Yeah, they're very community focused. The whole thing is very much community effort,

01:51.160 --> 01:57.440
isn't it? And I remember when they first took over after Canonical dropped the project,

01:57.440 --> 02:02.600
suddenly my perspective changing on it and being much more forgiving of it as a community

02:02.600 --> 02:09.800
project rather than as a commercial one. But they really have continued over the months

02:09.800 --> 02:16.040
and years to make it more and more stable, better and better and more and more viable

02:16.040 --> 02:22.160
as a platform. It's very tricky to compete with iOS and Android, obviously. But I think

02:22.160 --> 02:29.680
that there is quite a large niche market for this. And as they continue to get better,

02:29.680 --> 02:34.080
hopefully they will get an OEM deal because that's the hump they need to get over. They

02:34.080 --> 02:40.880
need to have this shipping on an actual device that isn't flashed after market. And are they

02:40.880 --> 02:43.120
going to be able to do that? I really hope so.

02:43.120 --> 02:47.080
Yeah, that's a wait and see thing. But I think for me, one of the reasons I like to keep

02:47.080 --> 02:52.480
talking about this project is it's a brilliant example of open source doing something commercial

02:52.480 --> 02:59.600
software can't. And that is over time, slowly, methodically growing a project, growing a

02:59.600 --> 03:04.800
community, adding features, and just plugging away at something that doesn't necessarily

03:04.800 --> 03:09.560
have an immediate commercial success tied to it. There's not like a three year plan

03:09.560 --> 03:14.000
here to make a billion dollars. And that's not something the commercial mobile space

03:14.000 --> 03:18.560
will even bother with anymore. There's just no company that could afford to do that. And

03:18.560 --> 03:23.400
it's something open source is uniquely good at because they can play that really long

03:23.400 --> 03:24.400
game.

03:24.400 --> 03:28.120
Yeah, well, you reports definitely are playing the long game with Ubuntu Touch. And I suppose

03:28.120 --> 03:30.440
you could say the same of purism.

03:30.440 --> 03:34.960
Purism is making headlines this week when they announced, get ready for it, convergence.

03:34.960 --> 03:41.160
They say we are now announcing that purism's PureOS is convergent, and has laid the foundation

03:41.160 --> 03:46.120
for all future applications to run on both the Librem 5 phone and the Librem laptops

03:46.120 --> 03:49.120
from the same PureOS release.

03:49.120 --> 03:53.720
Well, I'm sitting here podcasting, recording and I'm going to edit it on my phone that

03:53.720 --> 03:56.360
they shipped to me. Oh, no, hang on. They haven't actually shipped the phone yet. How

03:56.360 --> 03:58.160
can they be convergent?

03:58.160 --> 04:01.900
I mean, so there's a couple of things here. I think they're getting a lot of feedback

04:01.900 --> 04:05.600
that the term convergence has been tossed around before and that they didn't invent

04:05.600 --> 04:10.700
it, which fair enough. Their version of convergence is it they say it's a term used to describe

04:10.700 --> 04:16.720
similar functioning of an app across different platforms. They say many software companies

04:16.720 --> 04:21.680
have been eager to make their software convergent because it brings a consistent look and feel,

04:21.680 --> 04:26.600
as well as the exact same functionality for apps to run on your phone and your computer.

04:26.600 --> 04:30.720
So they are kind of acknowledging in that particular statement that other companies

04:30.720 --> 04:31.720
have tried this.

04:31.720 --> 04:35.700
Well, the couple of videos they've got on this post really do show that the GNOME applications

04:35.700 --> 04:42.480
can be resized and kind of dynamically adapt to the different form factors. So I suppose

04:42.480 --> 04:48.440
it's not all hype, but I am still somewhat skeptical that you're going to be able to

04:48.440 --> 04:55.000
get a proper mobile experience and a laptop desktop experience with the same applications.

04:55.000 --> 05:00.200
Well, Purism had a booth here at Scale17x. And I had a chance to chat a couple of times

05:00.200 --> 05:05.160
with Todd Weaver, the CEO and founder, but also Kyle Rankin, who's their chief of security

05:05.160 --> 05:11.640
officer. And he gave me a solid, comprehensive overview of their new Purism boot system.

05:11.640 --> 05:15.520
But we did chat briefly about these convergent stuff because, you know, it's in the news

05:15.520 --> 05:19.120
and I knew we were going to be talking about this. And he says this really goes back to

05:19.120 --> 05:23.920
the work they've been doing for quite a while now on Lib Handy, which is a mobile adaptive

05:23.920 --> 05:29.160
presentation library for GTK Plus and GNOME. They've been involved with that for a while.

05:29.160 --> 05:33.400
And they've already packaged it up for Pure OS. And I believe it's also upstream in the

05:33.400 --> 05:38.240
Debian repository. And there's some flat packs of it as well. This is kind of like a library

05:38.240 --> 05:43.860
that GTK developers can use to make their applications responsive, sort of like a web

05:43.860 --> 05:47.920
app can be responsive, where you can resize your web browser, and the web application

05:47.920 --> 05:54.840
will rescale to match the size of the window. This is a similar functionality for GTK applications.

05:54.840 --> 05:59.440
And they seem to believe in it pretty heavily. And it does seem like a solid contribution

05:59.440 --> 06:03.440
to the upstream GNOME project, because this isn't just a Purism thing. This is something

06:03.440 --> 06:07.720
they're contributing upstream. And it's kind of nice functionality to have. Even if we're

06:07.720 --> 06:12.000
kind of laughing about using the name convergence and this theoretical world where we're using

06:12.000 --> 06:15.880
the same applications on the Librem 5 phone and the desktops, like we can kind of poke

06:15.880 --> 06:22.120
fun at that idea. But the core actual effort, like the manifestation of this vision is an

06:22.120 --> 06:26.560
upstream library now that GTK developers can use to resize apps and make it responsive.

06:26.560 --> 06:27.560
That's cool.

06:27.560 --> 06:31.760
Oh, it is. And they're very keen to open source absolutely everything they do and try and

06:31.760 --> 06:36.440
get as much upstream as possible. And it is really good to see that in a project. But

06:36.440 --> 06:42.880
here's the but. They haven't shipped a phone yet. They're hyping something which doesn't

06:42.880 --> 06:50.080
actually exist yet. And I'm sure that once the phone ships and we see it in action, it

06:50.080 --> 06:55.720
will be impressive. But it just feels too early to be doing this. And they are just

06:55.720 --> 06:59.560
so good at building the hype train, aren't they? We just end up talking about them all

06:59.560 --> 07:00.560
the time.

07:00.560 --> 07:04.640
Yeah, this is part of that. This is something they've been working on for a while. And it's

07:04.640 --> 07:09.080
sort of strategically messaged at the right time as they're building towards something

07:09.080 --> 07:14.240
here. Side note, I did get my hands on the libram five dev kit here at scale.

07:14.240 --> 07:16.480
And how was PRS running on that then?

07:16.480 --> 07:20.840
Well, I couldn't answer that. They didn't have it booting. In fact, they'd remove the

07:20.840 --> 07:25.160
battery, I think in part to make sure it wouldn't power on and also to reduce the weight, because

07:25.160 --> 07:30.000
the battery is quite large. It's a it's like a, you know, just a dev kit. So it's not like

07:30.000 --> 07:36.280
a custom designed flat battery. It's a it looks like a big old battery. And the object

07:36.280 --> 07:40.800
itself was pretty large in the hand because it's not quite cut down to size yet. And there's

07:40.800 --> 07:44.120
heat sinks attached to the back of it and stuff like that. But the screens about the

07:44.120 --> 07:46.960
size of the like the pixel of the large pixel.

07:46.960 --> 07:48.320
Oh, the XL or whatever?

07:48.320 --> 07:52.360
Yeah, yeah, the XL. But yeah, I was a little disappointed. It wasn't booting. I was I was

07:52.360 --> 07:55.680
hoping that since since it'd been about a month since Fossum by the time they got to

07:55.680 --> 07:57.600
scale, they'd have a functional one.

07:57.600 --> 08:01.500
That does add to my skepticism, I must say, because I thought that by now they'd have

08:01.500 --> 08:09.080
something very functional on that dev kit and not having a battery in it. That doesn't

08:09.080 --> 08:10.080
look good to me.

08:10.080 --> 08:15.080
No, no, I felt the same way. However, talking to Kyle, their chief security officer, he

08:15.080 --> 08:19.720
seemed really sharp and the things that they're thinking about and trying to build look pretty

08:19.720 --> 08:24.120
good. So they they may have a they may have a good team there might just things might

08:24.120 --> 08:30.280
just end up being on a protracted schedule, you know, and maybe that's OK. Maybe we end

08:30.280 --> 08:34.360
up we might still end up getting the same end product just might take a lot longer.

08:34.360 --> 08:37.680
Well, anyone who's listened to user error would know that I would have been checking

08:37.680 --> 08:41.520
it out. I would have grabbed my anchor battery and the relevant cable and slightly plugged

08:41.520 --> 08:44.440
it in and had a good play with it.

08:44.440 --> 08:45.440
That's clever.

08:45.440 --> 08:47.480
Yeah, I'm surprised you didn't think of that. Oh, well.

08:47.480 --> 08:51.820
Just a couple of more stories that are rounding out the mobile Linux landscape and one that

08:51.820 --> 08:54.200
may be coming to a device near you.

08:54.200 --> 09:00.720
Yeah, MaruOS 0.6 has been released. And although this is primarily mobile, it's running on

09:00.720 --> 09:05.560
my Nexus 5, for example, and you can also run it on a Nexus 5X. What's really great

09:05.560 --> 09:11.520
about it is it's a lineage based ROM, but then you plug in a screen and a keyboard and

09:11.520 --> 09:15.200
mouse and suddenly you have a Debian desktop with Xfce.

09:15.200 --> 09:19.040
Well slow down there sport. Isn't it news with this release? I could be wrong, but I

09:19.040 --> 09:23.240
thought it was this one where they finished rebuilding and rebasing on a slimmed down

09:23.240 --> 09:25.480
lineage like that's kind of one of the new features, isn't it?

09:25.480 --> 09:29.600
Yeah, it was just based on the Android open source project before, whereas now it's based

09:29.600 --> 09:34.880
on lineage, which gives you a couple of extra lineage features. And it also makes it more

09:34.880 --> 09:41.240
portable to other devices. And although we haven't actually seen any new devices yet,

09:41.240 --> 09:45.840
the whole point of this is that it's going to be much easier to do so. So we should see

09:45.840 --> 09:47.920
some soon, hopefully.

09:47.920 --> 09:53.040
I kind of chuckle over here, but that is the idea and it does make sense that we'll get

09:53.040 --> 09:54.040
there.

09:54.040 --> 09:57.480
But as I said, I've been checking this out and it is great. I've been following the project

09:57.480 --> 10:03.320
for a couple of years now and it always just amazes me that you can have a Debian desktop.

10:03.320 --> 10:08.960
I mean, it's not that complicated. It's just running in containers and sharing the kernel.

10:08.960 --> 10:13.160
And so because you've got this ancient kernel on a Nexus 5, it means you don't have things

10:13.160 --> 10:19.180
like snaps working properly. And there are a few other things that don't work, like audio.

10:19.180 --> 10:24.760
But it is still amazing to me that it's not even particularly laggy, this Debian desktop.

10:24.760 --> 10:30.040
Obviously it uses the best desktop environment in the world, XFCE, so it's going to be super

10:30.040 --> 10:35.960
smooth. But it is surprising on a device of this age and power and RAM and specs generally,

10:35.960 --> 10:40.000
that you can have a fully functional Linux desktop and it actually work well.

10:40.000 --> 10:44.280
Yeah, fair enough. That is true. That is surprising. I know that one of the other things that they

10:44.280 --> 10:48.680
added with this release is you can now hook up a mouse or keyboard over USB, where in

10:48.680 --> 10:53.040
the past you were limited to Bluetooth devices. Did you get a chance to try that?

10:53.040 --> 10:57.520
No, I've just got a little Bluetooth keyboard with a little touchpad on it that I always

10:57.520 --> 11:01.840
use for it. So no, I haven't tried that. And I didn't get around to trying the Chromecast

11:01.840 --> 11:07.800
support either, which means that you don't actually have to plug in a screen anymore.

11:07.800 --> 11:11.120
So I really am keen to test it, but I don't have a Chromecast. I'll have to go around

11:11.120 --> 11:15.360
to my parents' place and check it out on their Chromecast.

11:15.360 --> 11:18.920
Well congratulations to the Maroo Project for getting 0.6 out. That's kind of making

11:18.920 --> 11:23.120
me want to go get the old Nexus out of the drawer and give it a go. You can get the latest

11:23.120 --> 11:29.040
version on their download page as well as a guide to walk you through the entire process,

11:29.040 --> 11:33.680
which we have linked in the show notes at linuxactionnews.com slash 96.

11:33.680 --> 11:39.040
Well on the more mainstream side of the Android street, this week on the Android developers

11:39.040 --> 11:45.160
blog, Google have posted about a new monetization method for devs, which involves giving users

11:45.160 --> 11:51.800
the option to watch video adverts instead of actually paying for things.

11:51.800 --> 11:56.260
Have you ever seen this? We've got like a free game and you die or something happens

11:56.260 --> 12:02.240
and it's like, watch a video and get extra gems or get another replay or resume your

12:02.240 --> 12:08.240
progress and if you watch the video, it's like a 30 second Google ads ad video thing

12:08.240 --> 12:13.680
and then it takes you back to the game and you get whatever reward, whatever incentive

12:13.680 --> 12:19.560
they promise to make you watch that ad. This is on my kids' games all the time too. They'll

12:19.560 --> 12:25.560
just sit there and watch the videos. They love it. They think it's a great deal. So

12:25.560 --> 12:31.120
far this has been up to each individual developer to implement in their own fancy, however they

12:31.120 --> 12:35.600
want to do it. And so what Google's doing now is, hey, let's just give you a system

12:35.600 --> 12:43.560
wide Google play based API to do this and then we can all make money. And the only people

12:43.560 --> 12:50.000
that lose are the users, Joe, the users win by getting cool rewards in their games.

12:50.000 --> 12:54.040
Google play is excited to announce the rewarded products, a new product type now available

12:54.040 --> 12:59.480
in the open beta in your play console have added developers.

12:59.480 --> 13:03.600
It does feel like some black mirror episode or something, doesn't it? Where you saw forced

13:03.600 --> 13:04.600
to watch these videos.

13:04.600 --> 13:08.200
Yeah, I actually think it's going to be horrible for Android because there's already so much

13:08.200 --> 13:13.640
pressure for all of the apps to be free and all of these weirdo ways they try to monetize.

13:13.640 --> 13:17.620
This is sort of like a blessed way now and you're just going to get tons and tons of

13:17.620 --> 13:21.640
Google ads videos and Google's making money on both ends of the deal because when you

13:21.640 --> 13:25.240
put it on the Google ads network, they're making money and when you do a transaction

13:25.240 --> 13:29.600
through the Google play API, they're taking a cut. So it's just wonderful for them.

13:29.600 --> 13:34.440
It really is them doubling down on it being a sort of budget OS though, isn't it? It's

13:34.440 --> 13:39.520
not premium like iOS where you just expected to spend the couple of bucks or whatever for

13:39.520 --> 13:46.800
the app. This is just them really accepting that it is a second rate monetization system.

13:46.800 --> 13:51.800
It seems that way to me and it also seems like it's going to lead to a lot more advertisements

13:51.800 --> 13:52.800
on the platform.

13:52.800 --> 13:57.400
I do wonder if you've got root and add away, whether you'll be able to say, yes, I'll watch

13:57.400 --> 13:59.720
the video and then it just won't load and it'll skip it.

13:59.720 --> 14:04.660
I hope so. That would be great actually. Not that I want to steal or anything like that,

14:04.660 --> 14:09.720
but also I don't want ads on my phone. I really don't. I don't like having ads on my mobile

14:09.720 --> 14:16.320
device. And so I would be much more inclined to root after years and years now of not rooting.

14:16.320 --> 14:18.280
This would probably put me back into that camp.

14:18.280 --> 14:22.920
The thing is though, it looks like this is going to be an option for people. It's either

14:22.920 --> 14:28.960
pay and have this freemium model and pay for your rewards or go the advertising route.

14:28.960 --> 14:30.920
It's kind of choice, which is good, isn't it?

14:30.920 --> 14:34.480
Well, it's up to the developer. It's up to the developer if they want to offer that.

14:34.480 --> 14:38.480
I would love for that to be the way it goes, Joe, but I'm skeptical.

14:38.480 --> 14:42.880
Yeah, I suppose they'll have metrics, won't they? These devs for how many people actually

14:42.880 --> 14:47.720
are paying for these add-ons in the apps and it's probably not a lot of people on Android.

14:47.720 --> 14:51.000
And so I think this is going to be very popular with them.

14:51.000 --> 14:54.760
Well the consumer market might be a hot mess for Google, but the enterprise market seems

14:54.760 --> 15:00.640
like it could be shaping up quite nicely for Google's Glass. Yes, Google Glass, a new generation

15:00.640 --> 15:01.640
even.

15:01.640 --> 15:06.840
Yeah, we talked about this way back on episode 11 of Linux Action News when they had a kind

15:06.840 --> 15:14.080
of second generation at the time, Google Glass, which was very much aimed at industry. And

15:14.080 --> 15:19.120
now there are some leaks of a second generation of that device, essentially the third generation

15:19.120 --> 15:23.720
of Google Glass, which means it obviously must have done well for them. And they have

15:23.720 --> 15:26.440
finally found the niche for Google Glass.

15:26.440 --> 15:30.020
Just as an aside, one of the things about this story that jumps out to me is now we

15:30.020 --> 15:36.360
have the second most prominent augmented reality product in the market that is focused solely

15:36.360 --> 15:43.840
at the enterprise. Recently, Microsoft announced HoloLens 2, which also is focused at the

15:43.840 --> 15:48.760
enterprise. And now here we have Google Glass Enterprise Edition. And these latest leaks

15:48.760 --> 15:54.160
seem to indicate it's a nice upgrade. First of all, the biggest change is USB-C. You're

15:54.160 --> 15:59.360
getting USB-C for charging. That seems pretty nice. But according to 9to5Google, there's

15:59.360 --> 16:03.200
other things that are pretty big upgrade in this thing too. It's going to go with a Snapdragon

16:03.200 --> 16:10.520
710. It's going to have onboard LTE 802.11ac. The camera is going to go from an 8 megapixel

16:10.520 --> 16:17.760
sensor to a 32 megapixel sensor with 4K video recording. They're also upgrading the RAM

16:17.760 --> 16:24.720
from 2 gigs to 3 gigs. It's essentially a mid to high range Android smartphone in a

16:24.720 --> 16:28.360
very specific form factor that wraps around your brain noodle.

16:28.360 --> 16:34.100
And so, of course, this means yet more Linux in industry and enterprise, not only on the

16:34.100 --> 16:39.800
device itself, but also you've got to figure it's connecting to servers and uploading the

16:39.800 --> 16:46.080
data and downloading the data. And the chances are that's going to be running on Linux probably

16:46.080 --> 16:48.400
on AWS or at least in the cloud somewhere.

16:48.400 --> 16:53.040
Oh, yeah, for sure. It's Linux all the way down. And let's also be clear, this isn't

16:53.040 --> 16:57.480
going to stay in the enterprise forever. Soon we'll be all walking around with Linux computers

16:57.480 --> 17:02.400
connected to the cloud wrapped around our head. I'm not sure how I feel about that.

17:02.400 --> 17:08.440
But why don't we change gears and talk about the biggest story of the week? And that is

17:08.440 --> 17:14.560
Microsoft announcing the open sourcing of Windows calculator.

17:14.560 --> 17:18.580
Now that's how everyone has covered this, right? The fact that, oh, it's just a joke

17:18.580 --> 17:26.880
and it's the most minor part of Windows. But there's actually a more nuanced take on this.

17:26.880 --> 17:33.520
And it's right there in Microsoft's post about this. And they say, reviewing the calculator

17:33.520 --> 17:39.000
code is a great way to learn about the latest Microsoft technologies like Universal Windows

17:39.000 --> 17:46.880
Platform, XAML, and Azure Pipelines. And that is the crux of this. It's not just them doing

17:46.880 --> 17:53.960
it for fun. It's to try and entice devs in and to say, look, this is an example of some

17:53.960 --> 17:59.080
of the legacy code of actually doing the calculation stuff. But here's how it actually ties into

17:59.080 --> 18:03.620
Windows 10. This is the example code that you can then use to build your applications

18:03.620 --> 18:08.280
to learn about how to build applications. And so it's a way of pulling people in. And

18:08.280 --> 18:10.960
therefore, I think it's a very smart move by Microsoft.

18:10.960 --> 18:15.080
Yeah, it is. It is a great way to sort of dip your toes in without it being overwhelming.

18:15.080 --> 18:19.480
And the thing is, is that it's sort of a fascinating application. Because in some ways, it's a

18:19.480 --> 18:25.120
very modern designed Windows application. But some elements of it, like core parts of

18:25.120 --> 18:30.160
the code base, go all the way back to 1995. I was chatting with Mark Goodner, who is the

18:30.160 --> 18:34.940
program manager for Visual Studio at Microsoft here at scale. And he and I were joking about

18:34.940 --> 18:39.480
what's going to be the next application that Microsoft is going to open source. And he

18:39.480 --> 18:42.440
and I are pulling for it to be Minesweeper. I think that'd be pretty awesome.

18:42.440 --> 18:43.440
Solitaire, maybe.

18:43.440 --> 18:49.080
One of the things that is interesting about this is there is already a whole bunch of

18:49.080 --> 18:53.960
issues that has been submitted against this. In fact, Microsoft has already merged some

18:53.960 --> 19:00.660
of the community fixes into the upstream code base. It is, in all senses, a genuine open

19:00.660 --> 19:02.040
source project now.

19:02.040 --> 19:07.960
It's weird to think that, isn't it? That Microsoft have got a properly open source project of

19:07.960 --> 19:13.960
any kind, never mind all of the other ones they've got. If you told us that 10 years

19:13.960 --> 19:17.200
ago, we would have just not believed you.

19:17.200 --> 19:22.600
Yeah, pretty much. I would be really actually fascinated to see if they open source future

19:22.600 --> 19:28.840
versions. And will this ship in the next major version of Windows, the next major version

19:28.840 --> 19:35.160
of calc.exe that gets updated? Will it be this version that has been patched by community

19:35.160 --> 19:40.980
members? My sense is it will be. And then we will have an official Microsoft Windows

19:40.980 --> 19:46.720
application that is being modified, improved and updated by the open source community.

19:46.720 --> 19:51.640
It's not a big deal when it's calc.exe. But if it's MMC.exe, or something that's much

19:51.640 --> 19:55.480
more significant, like a control panel applet or something, that all of a sudden starts

19:55.480 --> 19:57.000
to become a very big deal.

19:57.000 --> 20:02.640
Could it possibly be the tip toeing towards open sourcing the whole shell, if not the

20:02.640 --> 20:07.120
NT kernel? Seems unlikely, but it's what a lot of people hope.

20:07.120 --> 20:10.920
I'm not going that far yet. I'm not going that far. It could end here. And I think it's

20:10.920 --> 20:16.240
worth remembering it's MIT licensed. It's not like they're GPLing all the things here.

20:16.240 --> 20:20.320
I still don't believe they're building towards a Windows shell that runs on top of a Linux

20:20.320 --> 20:25.040
device. At least not yet. I think today it's just calc.exe.

20:25.040 --> 20:29.960
However, like many, many efforts out of Microsoft, when you dig into it, you realize this has

20:29.960 --> 20:34.400
been in the works for a really long time. Like just the basics were up on GitHub back

20:34.400 --> 20:39.200
in January. We're only finding out about it now. But things like Visual Studio Code and

20:39.200 --> 20:44.720
.NET Core were in works for four or five years before they were ever public. So whatever

20:44.720 --> 20:49.840
their next move is, it's already been in the works for quite a while. And when we find

20:49.840 --> 20:54.160
out about it, it'll be after months and months of them working on it. So it's a weird thing

20:54.160 --> 20:58.560
to think about. But right now, the next move is already well underway. And it's just up

20:58.560 --> 20:59.920
to us to figure out what it is.

20:59.920 --> 21:04.280
Well, I'm going to go out on a limb and have a wild prediction that they will open source

21:04.280 --> 21:08.800
the whole shell. And then within a couple of days, someone will get it running on the

21:08.800 --> 21:09.800
next.

21:09.800 --> 21:15.480
I tell you what, if they package that up, I give it a go. Why not? I've tried crazier

21:15.480 --> 21:16.480
things.

21:16.480 --> 21:20.160
So, before we get out of here then, I know you're going to talk about it on LUP in a

21:20.160 --> 21:24.240
couple of days. But what's the kind of take home message from your experience at scale

21:24.240 --> 21:25.240
then?

21:25.240 --> 21:27.580
Well, first and foremost, it was awesome to see everybody. Thank you, everybody that came

21:27.580 --> 21:32.160
out and said hi, and joined the meetup. We had a great dinner. But my overall big theme

21:32.160 --> 21:37.160
about this year's scale was the cloud. And I don't even think it was intentional on the

21:37.160 --> 21:43.160
part of the scale organizers. I just think it's what the community contributed as talks.

21:43.160 --> 21:47.680
And even the talks that weren't specifically about the cloud had tangential connections

21:47.680 --> 21:54.180
to the cloud. There was representation there from Purism and System76 for the Linux desktop,

21:54.180 --> 21:58.400
but the hallway track this year was the best it's ever been.

21:58.400 --> 22:02.520
There was elements to this year's scale that I think were just, first of all, should be

22:02.520 --> 22:06.200
replicated by all other conferences, but just made it one of the best scales ever. I'm going

22:06.200 --> 22:09.320
to talk more about it on Linux Unplugged because we also had Wes and Elle. They were here with

22:09.320 --> 22:13.280
me and want to get their thoughts on it too. We'll do a little story time on this week's

22:13.280 --> 22:14.280
Linux Unplugged.

22:14.280 --> 22:18.220
I look forward to it. But I'm not surprised that it was all about the cloud because follow

22:18.220 --> 22:22.560
the money. That's where the money is in Linux, right? So people are going to be talking about

22:22.560 --> 22:23.560
that.

22:23.560 --> 22:27.480
Yeah, we'll be talking about that and a lot more. And so will we, Joe. Go to linuxactionnews.com

22:27.480 --> 22:31.440
slash subscribe to your audience member for all the ways to get new episodes of this here

22:31.440 --> 22:32.440
show.

22:32.440 --> 22:35.200
And go to linuxactionnews.com slash contact for ways to get in touch.

22:35.200 --> 22:39.720
And we're doing more study groups. We have one coming up on March 17th for Kubernetes

22:39.720 --> 22:45.440
and much, much more. Go to meetup.com slash Jupiter Broadcasting for our MeetSpace meetups

22:45.440 --> 22:48.280
and our online virtual study group meetups.

22:48.280 --> 22:52.400
And if you're anywhere near Reading in the UK, on Saturday the 16th of March, so coming

22:52.400 --> 22:57.080
up very soon, the Ubuntu podcast we're having a get together and I'll be at that. So come

22:57.080 --> 22:58.080
and say hello.

22:58.080 --> 23:02.340
We'll be back next Monday with our weekly take on the latest Linux and open source news.

23:02.340 --> 23:04.480
I'm at Chris LAS.

23:04.480 --> 23:06.360
I'm at Joe Rissington.

23:06.360 --> 23:09.120
Thank you for joining us and we'll see you next week.

23:09.120 --> 23:35.200
See you later.

