Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 103, recorded on April 28th, 2019.
I'm Chris.
And I'm Joe.
Hello, Joe.
Good to be in studio with you.
Happy Linux Fest Northwest weekend.
Yeah, it's pretty strange to be actually looking at you while I'm doing this.
Well, it also means that we were running around barbecuing and festing a whole bunch.
But never fear, we still have some stories for you.
Let's kick things off with a big Docker Hub hack story.
It appears that a Docker Hub hack has exposed data of 190,000 Docker Hub users.
Yeah, this is kind of a breaking story.
We only really became aware of it on Friday evening.
So the details are a little bit sketchy at the moment.
But whichever way you look at this, it does not look good for Docker.
The whole thing really came to light when Docker started emailing customers around April
25.
They wrote, on Thursday, April 25, 2019, we discovered an unauthorized access to a single
Docker Hub database storing a subset of non-financial user data.
That's according to the director of Docker support in the email.
But they did say the hacker had access to the database for only a short moment, which
meant about 190,000 users or around 5% of their entire user base for Docker Hub.
Now, if you are a Docker Hub user, there are some warnings that have been issued and some
steps you can take to somewhat mitigate this.
Yeah, that same director of support went on to say for users with auto builds that may
have been impacted, they've revoked the GitHub tokens and access keys.
And they're asking you to reconnect your repositories and check your security logs for like a GitHub
login to see if anything has been accessed.
You'll also have to reconnect the OAuth for automated builds and you'll have to roll over
affected passwords and API keys that were stored in private repos.
That's just good practice, not required, but it's something you probably need to do.
And of course, last but absolutely not least, change your password on Docker Hub.
Now, there's been a lot of criticism online, obviously Reddit, they've been going crazy
about this.
And one particular thing that stood out to me was the lack of two-factor authentication
with Docker Hub, which is a feature that was requested four years ago and still hasn't
been implemented.
But it's not clear whether that would have actually helped in this situation.
There's some argument there.
I don't think it would have helped completely, but come on, it can't hurt to have two-factor
turned on.
Two-factor just is always a great idea.
In this particular case, if the attacker gets a database with hashed passwords, then they're
still going to have that data, which means they'll know what passwords you used.
And if you use that anywhere else or anything that might be exploitable because maybe the
two-factor system isn't perfect, it's just not a complete solution.
But you're right, this was requested 43 months ago, 43 months people have been asking for
two-factor authentication.
It'd be good.
It would be good.
I don't know if it necessarily would have changed much here.
You'd still want to go change your passwords and whatnot, but yeah, let's get that going
Docker Hub.
You know what?
If you're going to be at the enterprise level, that's something you need to do.
This is really not the Docker story that I expected to be talking about right now because
earlier in the week, they announced a new partnership with Arm.
Yeah, it's funny you say that because they're really excited about this.
I bet they are a little disappointed that this isn't the lead story and Arm is really
making a big stink out of this as well.
It's this new capability they're all excited about, which will work for applications that
are written in JavaScript or, you know, node, Python, Java, C++, Ruby,.NET Core, Go, Rust
and PHP.
Then next week, or the week that you listen to this, will be a tech preview that Docker
will host at its annual North American Developer Conference in San Francisco.
Elle will be there from our crew and there they will demonstrate the capability for developers
to build and assemble Docker image stacks on their laptop and then the applications
inside of which will be compiled and executable on Arm servers.
Think of like the Amazon A1 instances that are often cheaper than the x86 machines.
There's some immediate cost savings benefit there.
Now it's not all Arm processors.
This is an extension of the Arm Neoverse platform.
We've talked about that before, but these are the Arm chips that are targeted at the
data center, the enterprise.
And Arm's whole pitch here is, hey, look, now you've got a solution that goes from the
data center all the way to the IoT Edge device.
It's Arm all the way down and now you can manage those crazy IoT applications with containers.
That'll solve it all, containers.
And Docker is more than happy now with their new enterprise focus.
They just got done relining their business around enterprise.
What was it back in the end of February?
They laid off a bunch of people and really said, okay, now it's all about the enterprise.
Well, this is a manifestation of that.
And I guess it's not a horrible idea.
I just, as time has gone on, I've become more of a skeptic.
Remember when we covered that story where Linus really kind of broke down why he doesn't
think Arm and the data center is ever really going to make sense?
At least at the application level, he convinced me.
Linus is a smart man.
He knows what he's talking about.
And it's not that I don't see uses for Arm in the data center, because that'd be a stupid
thing to say.
They're already here today.
It's just I am not as personally thrilled by this idea.
I don't really foresee a future where enterprise grade applications can be created on one
platform built for a completely separate platform and then deployed without something not going
quite right.
Well, that is true.
But they're trying to lower the barrier of entry here.
They're trying to take at least one of those problems away by making it trivial.
Because you could already do this with tools that are available for Linux.
But what they're doing is just packaging all that stuff together to make it super easy
for developers to not even have to think about it.
And yes, okay, the argument that Torval's made about testing on a different platform
and the problems that you're going to have does make sense.
But also, the bottom line makes a lot more sense.
And if you can deploy applications for significantly less cost on Arm-based machines, then companies
are just going to do that.
And they're just going to swallow the cost of the bugs that crop up.
And they're just going to have to work through that.
Well, and I'll give it this.
If you're working with.NET Core and Ruby and Java and Python, you're going to have
probably a pretty good chance this is going to work fine.
And enabling developers to build on an x86 platform and then deploy on an Arm platform
is likely going to mean more use cases for Arm, more deployments of Arm when you reduce
one of those barriers.
So it's obviously clearly a good business idea.
I'm just, I guess, from an end user's perspective, not thrilled at what I'm likely going to be
consuming.
You know, like, this is probably going to be half-assed, overloaded, slow-bloated hardware
for a very long time until, at least at the edge devices, the hardware in there gets a
lot better.
I know I'm a skeptic of this kind of stuff.
I really should try to see more positive aspects of this.
But to me, it just seems like a perfect platform to shovel crap into a container and throw
it down on an underpowered Arm device.
Don't be so cynical.
That's my job, isn't it?
So something that we talked about on the Friday stream was something that surprised me, I
must say, that Apple reportedly spends more than $30 million a month on AWS.
I think there's a bigger metastore going on here, too, that is going to create a new level
of cloud lock-in.
So the report claims the amount Apple spent on AWS during the first quarter of 2019 is
up 10% over previous year.
If the current usage levels persist, then the firm will have spent a total of $360 million
on procuring services from Amazon this year alone.
It's also further claimed by the report, and there's a source in there that they're using
for this, that Apple has made a five-year commitment to spend at least, in quotes, $1.5
billion with AWS.
So this is the bigger part of the story because I've had recent experience with a couple
of companies that have been approached by either Google Cloud or Amazon, offering them
a sweetheart deal if they move off of a competitor.
So in the case of Google Cloud, the offer was to move off of AWS, and in the case of
AWS, the offer was to move off of Azure.
So if you move off of Azure, we'll cut you a sweetheart deal, you lock that in for this
many years, and now you're an exclusive AWS customer.
They're going around to large companies, but not companies that are significantly large.
We know of a company that has been approached with an offer like this, including there's
some money involved in all of it.
It's a really sweet deal.
And there were media reports back in February that suggested that Apple was cutting ties
with Microsoft.
Some security documentation was updated that removed mentions of Azure in the documentation,
and then we see this story.
And this is a similar story that we just saw from an IPO and another story we saw recently.
These stories keep coming out, and I think what is happening here is Amazon and Google
and Microsoft are building their fences and trying to land as many whales exclusive to
their platform, to their cloud platform, as possible.
And I think that's what's happening here, and you're going to end up with a whole new
era of lock-in.
Well, that goes back to IBM's strategy with the hybrid cloud approach and how they keep
going on about that.
I've been speaking to sysadmins here at the fest, and they are all very concerned about
lock-in.
And a lot of their managers are basically forcing them down this route, and they're
just not comfortable with that.
And you can see IBM's pitch against this sort of thing.
And it seems to be almost the cloud wars right now.
And it's not a surprise that Apple has gone down the cloud route.
They have tried to build new data centers, and they realize that it's more hassle than
it's worth.
They may as well pay that premium to use the cloud, because otherwise you end up with these
protracted planning permission issues and disputes with contractors and everything.
And so their data center expansion plans have just not gone how they wanted.
So I'm not surprised that they're cutting deals with the likes of Amazon Web Services
to just move on from that and just chuck it in the cloud and forget about it.
Well, and we are going into a big era of services.
Everyone wants to monetize that monthly user, and they've got to build out and expand content
and services around that.
And they're not the only ones.
A lot of businesses are getting into streaming and this kind of stuff, and it's all going
to require big fat internet pipes with large internet providers and hosts like Amazon.
It's going to be a bonanza.
It is a bit of a cloud war.
And maybe this is probably not true, but maybe they're all rallying around right now trying
to get ahead of the IBM Red Hat acquisition.
Because they are uniquely positioning themselves as the anti-lock-in vendor solution.
And so maybe they're trying to get as much lock-in as possible.
There's a funny thing that happened in my neighborhood a decade ago for a brief, beautiful
moment in time, Verizon, our local ISP, was coming in and digging ditches and laying fiber.
It was so beautiful, Joe, beautiful fiber optic internet service right to the home.
And I kid you not, two days before they started digging ditches in my neighborhood, Comcast
reps brought a van.
They all jumped out of the van and spread out around our neighborhood and tried to get
everybody set into a two-year contract because they knew in two or three days the Verizon
diggers would be here running fiber to everybody's home.
And they wanted to get ahead of that.
And that could be what we're seeing happen here with Amazon right now, with AWS.
Well, that's what Google is attempting to do with Anthos.
We talked about that a couple of weeks ago.
But I've spoken to people about that here at The Vest.
And they're concerned that Google is trying to give you the illusion of choice and the
illusion that you're not being locked in, but the keys to the mechanism that allow you
to spread your data around the various clouds and have some on-prem are held by Google.
And so you are essentially locked in there.
So that's their attempt at combating this.
Whereas maybe Amazon's attempt is just offer some sweet deals for people and just get them
locked in and have them just not worry about the lock-in because the deal is so much better
than not being locked in.
Which is even crazier to think that $30 million a month might be a good deal.
That's why everybody just needs to switch to NextCloud Joe and host it themselves and
save about $29 million a month, depending on their size.
It'll vary.
Yeah.
Well, now with NextCloud 16, they've got machine learning-based security.
Ooh.
We were having a laugh about this at The Vest, too, because not that it's not cool.
It's just the actual suggestion was, it was Alan Judy said, you know, if you were to launch
fail to ban, you know, that tool fail to ban for SSH logins today, you would say it's machine
learning.
Yeah.
Because it's looking at IPs and learning who's trying to attack you.
And that's essentially what we're talking about here.
Yeah.
They call it suspicious login detection.
And it uses a locally trained neural network to detect attempts to log in by a malicious
actor.
There's also other systems in here, like a share recommendation system or whatnot.
But I wanted to focus in on the security thing because this is really cool.
So it does use this locally trained neural network.
So there's no sending off to remote cloud servers or anything like that.
I absolutely appreciate that.
The app tracks successful logins on the instance for a set period of time.
The default is 60 days.
And then it uses the generated data to train its own neural network.
As soon as the first model is trained, the app starts classifying logins from then on.
So it's always learning.
Should it detect a password login classified as suspicious by that now trained model, it
will add that entry, the login entry, to a suspicious login table, including the timestamp,
the request URL, the ID of the client, all of that that it can collect.
And then the user will get a notification.
And the system administrator will be able to see that information in the log.
When the user is notified, they can go to the security section in their settings.
They can terminate that suspicious setting, immediately clear it out.
And then they'll proceed to set a new password.
The administrator can also opt to take action, like disabling the user account or having
the option to just force it to change their password.
And that machine learning stuff also sort of does apply to their new recommendation
and sharing system.
Like, hey, I've noticed you often share these types of files with this person.
And it'll make suggestions around that.
But the suspicious login one, I think, is probably the one that has the most user appeal.
Because honestly, when you have something like Nextcloud exposed to the web, that is
a useful feature.
One new feature that jumped out at me was in the mobile client.
Instead of having to manually enter the server details and the login and password, you can
now just scan a QR code and it just automatically logs you in.
That seems just like a no brainer at this point.
I haven't tried this new feature out.
But if you have found some issues with storage speed, especially on large instances that
are using object storage solutions, there has been a series of improvements on how Nextcloud
handles that code and should result in improved snappiness, they say.
That's funny you mentioned snappiness.
I would have normally tried this.
We've been very busy with the fest.
I did have a quick look to see if the snap had been updated to 16.
Unfortunately, it hasn't yet.
So I wasn't able to even quickly test this.
But I do look forward to doing those tests when I get back to the UK.
Because it feels like Nextcloud is starting to really mature now.
And it's something that I need to give a proper assessment to.
Because it's been a long time since I properly tested it.
And I wasn't very impressed with the consistency of it at the time.
Because it only has to not work once for me to not want to use it.
But maybe now's the time that it could go into production.
I don't know.
I need to test it.
Yeah, it seems Cheese Bacon on our team has been having some success with it.
He uses it to manage some of his photos and share some assets that he creates for the
team.
And yeah, he did it through the snap.
So he's running version 15 through the snap.
And it seems like it's worked.
I've tried it out a bit, the older version, through the snap so that I thought it would
maybe self-update and whatnot.
And I found it remarkably simple to get going.
There's so many different ways now to use Nextcloud, from hosted to container images
to snaps or just traditional installations, that if you've been toying with the idea,
you'll find an installation, I guess, methodology that is approachable, regardless of your skill
level.
We are rolling out this update to 16 in a staged fashion.
So don't be surprised if it takes a while to get updated to it.
But you can switch to the beta channel if you want it sooner rather than later.
And to bring it all back around, our last story of the week is another success story.
Well, I guess for the hacker.
Yeah, this is the French government's fork of Riot, which I think is called Chap or
Chap.
I don't know.
I'm not good at French.
Which is a matrix client.
And we talked about this a few weeks ago, how they were moving all of the messaging
infrastructure to matrix, which is a huge win for open source in government.
But unfortunately, it seems they didn't do an amazing job of the implementation of this.
No, the issue really came down to something pretty simple.
And it resulted in the app getting compromised within about an hour.
That's rough, Joe.
Yeah, it was really just a simple email parsing mistake in a Python script that parsed input
to validate if this was a government email address or not.
And it would issue a token that would be sent to an address that the attacker could get
changed or could influence and then get access to the chat system and have his way with it.
And you know, the thing is, is they haven't been dissuaded.
They say the French government will continue to roll it out.
They want to encourage people to stop using WhatsApp and Telegram for any informal communications
between government employees, agencies, and some handpicked non government organizations
and contractors.
So they're still going to use it.
They just got to fix that Python script problem.
Yeah.
It was quite embarrassing for them, though, because some of the groups and stuff they've
got in there are just like, what are they doing?
Like sharing pictures of yellow things and stuff.
They're bonding, Joe.
They're bonding.
It's team building, Joe.
Yeah.
I suppose we probably share worse things in our Slack.
I don't know about things of yellow pictures of things, but we definitely have some weird
things in our threads.
That's true.
And it's funny that the hacker calls himself Elliot Anderson and he's obviously obsessed
with Mr. Robot.
Yeah.
Yeah.
It's about half a Linux fest in Northwest.
And it was a great fest.
Thank you everybody who made it out this year.
We had our biggest barbecue ever.
Well over 100 people out there that we were cooking for and we had to go out and do emergency
pizza runs.
Yeah, I think more like 300 really came.
It was an amazing party.
And yeah, look out for the pictures of Noah on Twitter in a pink leotard or swimming costume.
It happened.
It happened.
It was a great fest.
We learned a lot.
I had a bunch of good conversations.
We were able to record some of our talks and all of that.
So keep your ears out for updates on that in the future.
But in the meantime, be sure to go to linuxactionnews.com slash subscribe for all the ways to get new
episodes every single week.
And go to linuxactionnews.com slash contact for ways to get in touch with us.
Now we'll be back next Monday with our weekly take on the latest Linux and open source news.
I am at Chris LAS.
I'm at Joe Rissington.
Thank you for joining us and we will see you next week.
Until then, have a great day, and we'll see you later.
