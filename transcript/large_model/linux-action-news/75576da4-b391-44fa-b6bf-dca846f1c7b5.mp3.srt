1
00:00:00,000 --> 00:00:08,620
Hello, and welcome to Linux Action News, episode 202, recorded on August 15, 2021.

2
00:00:08,620 --> 00:00:09,620
I'm Chris.

3
00:00:09,620 --> 00:00:10,620
And I'm Wes.

4
00:00:10,620 --> 00:00:11,620
Hello, Wes.

5
00:00:11,620 --> 00:00:17,620
Live from a very flat and very warm golf course in Nebraska, let's do the news.

6
00:00:17,620 --> 00:00:25,740
After two years, one month, and nine days of development, Debian 11 is here with support

7
00:00:25,740 --> 00:00:30,640
for the next five years and a total of nine architectures.

8
00:00:30,640 --> 00:00:35,400
Debian can now be installed in 76 languages, with most of them available in both the text

9
00:00:35,400 --> 00:00:38,520
based and graphical user interfaces.

10
00:00:38,520 --> 00:00:42,540
And of course, a new release of Debian is notable because of the distribution's wider

11
00:00:42,540 --> 00:00:47,500
impact on the Linux community and all of the projects that are downstream of it.

12
00:00:47,500 --> 00:00:51,820
And we all kind of know that when a package ships in Debian, you know it has been tried,

13
00:00:51,820 --> 00:00:58,540
it has been tested, and this release contains over 11,294 new packages.

14
00:00:58,540 --> 00:01:05,560
It also has official exFAT support, and finally, persistent journal functionality.

15
00:01:05,560 --> 00:01:10,480
And along with all of that, it ships Linux 5.10, the LTS kernel, and Debian 11 Bullseye

16
00:01:10,480 --> 00:01:17,980
comes ready to install some kind of not so fresh desktops, I have to be honest.

17
00:01:17,980 --> 00:01:25,280
It has GNOME 3.38, it has Plasma 5.20, Mate 124, and XFCE 4.16.

18
00:01:25,280 --> 00:01:31,480
And with GNOME 41 on the horizon, that makes 3.38 look a little old.

19
00:01:31,480 --> 00:01:34,640
But for those of you out there looking for something that's going to be supported for

20
00:01:34,640 --> 00:01:40,200
a while and ships with that older paradigm, perhaps this is a great solution for you.

21
00:01:40,200 --> 00:01:45,360
Something that's a little more fresh is that the live image now includes the calamaris

22
00:01:45,360 --> 00:01:49,460
independent installer as well as the standard Debian one.

23
00:01:49,460 --> 00:01:54,960
But going in the opposite direction, Bullseye will soon be available on physical media.

24
00:01:54,960 --> 00:02:01,080
Yeah, that's right, DVDs, CD-ROMs, and even Blu-rays if you want.

25
00:02:01,080 --> 00:02:07,420
And of course, work has already started on the next release, Debian 12 Bookworm, which

26
00:02:07,420 --> 00:02:10,880
should arrive sometime in 2023.

27
00:02:10,880 --> 00:02:15,900
Well another item that we'll be anticipating over the next few years is an increased investment

28
00:02:15,900 --> 00:02:17,840
in eBPF.

29
00:02:17,840 --> 00:02:22,120
That's the in-kernel virtual machine, and it has been solving more and more problems

30
00:02:22,120 --> 00:02:25,000
and that has not gone unnoticed.

31
00:02:25,000 --> 00:02:29,680
The Linux Foundation along with Microsoft and other partners are now forming, you guessed

32
00:02:29,680 --> 00:02:32,960
it, the eBPF Foundation.

33
00:02:32,960 --> 00:02:36,200
Another foundation, who would have thought?

34
00:02:36,200 --> 00:02:41,660
Debian members this time around include Facebook, Google, ISOvalent, yes Microsoft, and of course

35
00:02:41,660 --> 00:02:42,660
Netflix.

36
00:02:42,660 --> 00:02:48,680
They're all using eBPF for something, and in some cases, many somethings.

37
00:02:48,680 --> 00:02:55,280
Facebook is using eBPF as the primary software-defined load balancer in its data centers, and Google

38
00:02:55,280 --> 00:03:02,200
is using Cilium to bring eBPF-based networking and security to its managed Kubernetes offerings.

39
00:03:02,200 --> 00:03:07,080
And speaking of those cats over at Facebook, Alexei Starovoitov, the co-creator and maintainer

40
00:03:07,080 --> 00:03:13,520
of eBPF and a kernel developer at Facebook, was quoted as saying this in the announcement,

41
00:03:13,520 --> 00:03:19,040
eBPF is a revolutionary technology that allows us to modify the operating system behavior

42
00:03:19,040 --> 00:03:24,700
in real time without risky or expensive kernel code changes.

43
00:03:24,700 --> 00:03:29,800
It has a remarkable impact on our ability to iterate quickly on everything from networking

44
00:03:29,800 --> 00:03:34,960
to security and containerization, where once you might have had to compile a custom driver

45
00:03:34,960 --> 00:03:40,040
or even build your own kernel, now you can just do it at runtime with eBPF.

46
00:03:40,040 --> 00:03:45,200
And while originally all this only worked in the Linux kernel, Microsoft has been bringing

47
00:03:45,200 --> 00:03:51,840
eBPF to Windows, and eBPF continues to be adapted for a wide array of other environments

48
00:03:51,840 --> 00:03:52,840
too.

49
00:03:52,840 --> 00:03:57,400
According to the Linux Foundation's press release, the eBPF Foundation will expand the

50
00:03:57,400 --> 00:04:02,220
significant level of contributions already being made to extend the powerful capabilities

51
00:04:02,220 --> 00:04:07,360
of eBPF and help it grow beyond Linux.

52
00:04:07,360 --> 00:04:10,680
Grow beyond Linux.

53
00:04:10,680 --> 00:04:13,240
That's a weird sentence coming from the Linux Foundation.

54
00:04:13,240 --> 00:04:15,040
I wonder if that was their intention.

55
00:04:15,040 --> 00:04:20,720
It almost reads like the Linux Foundation is being used to funnel free software innovations

56
00:04:20,720 --> 00:04:23,640
into the pockets of their corporate donors.

57
00:04:23,640 --> 00:04:27,840
And maybe this is one of those moments that shows us what the real incentive is for rich

58
00:04:27,840 --> 00:04:32,280
companies like Microsoft to kick money to the Linux Foundation every year.

59
00:04:32,280 --> 00:04:36,200
They get some fantastic code that makes their commercial products even better, and they

60
00:04:36,200 --> 00:04:39,220
get labeled as a friend of Linux while doing it.

61
00:04:39,220 --> 00:04:44,160
For better or worse, you know, these foundations are really a way for them to contribute, yes,

62
00:04:44,160 --> 00:04:47,640
but also influence these projects and the code bases.

63
00:04:47,640 --> 00:04:53,040
I think we just have to hope and kind of bet that at the end of the day, their agenda also

64
00:04:53,040 --> 00:04:54,440
benefits the wider community.

65
00:04:54,440 --> 00:05:00,280
I mean, either way, it does seem like more resources are going to go towards eBPF.

66
00:05:00,280 --> 00:05:04,600
And there is an eBPF summit coming up this next Wednesday and Thursday.

67
00:05:04,600 --> 00:05:09,640
It's a virtual event targeted at DevOps, SecOps, platform architects and developers.

68
00:05:09,640 --> 00:05:13,880
And a friend of the show, Brandon Gregg, will be there and plenty of other eBPF wizards.

69
00:05:13,880 --> 00:05:17,640
And the talks are guaranteed to be absolutely fascinating.

70
00:05:17,640 --> 00:05:20,440
eBPF talks always are.

71
00:05:20,440 --> 00:05:27,080
And speaking of fantastic Linux kernel technologies, going on for more than one year now is the

72
00:05:27,080 --> 00:05:33,480
effort to bring KVM virtualization to the RISC-V architecture, something that's critical

73
00:05:33,480 --> 00:05:36,640
there's ever going to be future enterprise adoption.

74
00:05:36,640 --> 00:05:42,120
The patch set is up to its 19th revision already, but it's not clear if it's actually ready

75
00:05:42,120 --> 00:05:43,120
for mainline.

76
00:05:43,120 --> 00:05:47,200
If I asked you to guess who was sponsoring this work to port KVM to RISC-V, would you

77
00:05:47,200 --> 00:05:52,560
guess Western Digital because that's who is leading this effort and really for a while

78
00:05:52,560 --> 00:05:53,560
now.

79
00:05:53,560 --> 00:05:57,720
And it makes sense when you realize that there's RISC-V chips even in their hard drives.

80
00:05:57,720 --> 00:06:00,280
So they've really got an invested interest here.

81
00:06:00,280 --> 00:06:04,380
However, to put things in perspective, there's still some major technical hurdles that have

82
00:06:04,380 --> 00:06:05,380
to be tackled.

83
00:06:05,380 --> 00:06:08,120
So we're really going to have to wait some time before we see this.

84
00:06:08,120 --> 00:06:11,480
I mean, it is a new architecture after all.

85
00:06:11,480 --> 00:06:17,160
In the meantime, though, Western Digital has also been working on porting KVM tool to RISC-V.

86
00:06:17,160 --> 00:06:22,800
And really, this is just for demonstrating the sort of initial working version, but it's

87
00:06:22,800 --> 00:06:27,280
also there as an early testing ground for developers who might want to try it.

88
00:06:27,280 --> 00:06:31,120
Listeners of this show know another area of kernel development that we have been keeping

89
00:06:31,120 --> 00:06:37,040
an eye on is support for Apple's M1 system on a chip and its future iterations.

90
00:06:37,040 --> 00:06:41,640
The ASHI Linux team has been leading that charge and their most recent progress report

91
00:06:41,640 --> 00:06:44,600
has some significant milestones they seem to have reached.

92
00:06:44,600 --> 00:06:48,960
And Hector Martin, the founder of the project, has also been live streaming his adventures

93
00:06:48,960 --> 00:06:54,720
in real time porting to the M1, recently recapping a lot of information.

94
00:06:54,720 --> 00:06:58,000
Welcome to the hypervisor recap stream.

95
00:06:58,000 --> 00:07:06,400
And so in this stream, I'll be going over what I did over the past 13 streams, which

96
00:07:06,400 --> 00:07:08,240
were basically me writing a hypervisor.

97
00:07:08,240 --> 00:07:15,120
So I'm going to explain why I did that and how it all works.

98
00:07:15,120 --> 00:07:22,280
They're building a hypervisor, mostly in Python, with some C, of course, in order to snoop

99
00:07:22,280 --> 00:07:27,280
on macOS and learn how it interacts with the hardware.

100
00:07:27,280 --> 00:07:32,080
Like Alyssa and some of the other Mesa folks have been working on the user space side.

101
00:07:32,080 --> 00:07:39,000
So they've been working on figuring out the shaders, how the draw commands work, how to

102
00:07:39,000 --> 00:07:41,680
make the GPU do different things.

103
00:07:41,680 --> 00:07:42,880
But all of that is in user space.

104
00:07:42,880 --> 00:07:50,480
So in macOS, they're looking at how the libraries, the metal libraries in macOS work, how they

105
00:07:50,480 --> 00:07:51,480
talk to the hardware.

106
00:07:51,480 --> 00:07:54,280
But then there's the kernel side that has to take those commands from the user space

107
00:07:54,280 --> 00:07:58,720
and actually send them to the hardware and also initialize the GPU and deal with virtual

108
00:07:58,720 --> 00:08:02,140
memory and context switching and all that.

109
00:08:02,140 --> 00:08:04,000
And so that's what the hypervisor is for.

110
00:08:04,000 --> 00:08:08,600
So now that we have this, the next step is going to be starting to write those MIO tracers

111
00:08:08,600 --> 00:08:10,860
that are specific to the GPU things.

112
00:08:10,860 --> 00:08:14,160
Think of the amount of work they're doing here before they even really get started.

113
00:08:14,160 --> 00:08:18,440
They're building a hypervisor for the M1 platform.

114
00:08:18,440 --> 00:08:23,120
That's like the pre-work before they can even get to their work and figure out how to write

115
00:08:23,120 --> 00:08:27,720
these drivers for the Apple hardware without looking at the Mac driver code.

116
00:08:27,720 --> 00:08:31,300
And that can be tricky because you could see how looking at the code could give you some

117
00:08:31,300 --> 00:08:33,060
good insights.

118
00:08:33,060 --> 00:08:36,320
But Hector Martin points out that's not always the best route to go.

119
00:08:36,320 --> 00:08:40,220
So they have built this hypervisor layer that sits between macOS and the hardware.

120
00:08:40,220 --> 00:08:43,600
So they are in fact not attempting to run Linux in the hypervisor.

121
00:08:43,600 --> 00:08:45,280
No, no, no, no.

122
00:08:45,280 --> 00:08:48,080
They are running macOS in the hypervisor.

123
00:08:48,080 --> 00:08:51,080
So that way they can sit between and see how it behaves.

124
00:08:51,080 --> 00:08:53,240
Basically what we can do is one of two things.

125
00:08:53,240 --> 00:09:00,680
We can either reverse engineer the software that Apple wrote, which would be like decompiler

126
00:09:00,680 --> 00:09:07,560
and disassembling the macOS source code, sorry, the macOS drivers.

127
00:09:07,560 --> 00:09:09,200
Some of it is open source, but very little.

128
00:09:09,200 --> 00:09:11,080
Most of the drivers are closed source.

129
00:09:11,080 --> 00:09:13,220
Only the core kernel is open source.

130
00:09:13,220 --> 00:09:16,580
So that doesn't help us with all the interesting hardware.

131
00:09:16,580 --> 00:09:21,420
So we'd have to decompile or disassemble the actual drivers, but that runs into legal issues.

132
00:09:21,420 --> 00:09:27,520
And honestly, it's not a lot of fun because usually the information that you need to figure

133
00:09:27,520 --> 00:09:33,420
out how hardware works is a small part of what the driver is doing.

134
00:09:33,420 --> 00:09:34,520
There's going to be a lot of code.

135
00:09:34,520 --> 00:09:35,940
There's going to be a lot of complexity.

136
00:09:35,940 --> 00:09:40,540
There's going to be a lot of stuff that doesn't really get to the point basically.

137
00:09:40,540 --> 00:09:45,220
It doesn't, you know, you have to read through pages and pages of code to understand how

138
00:09:45,220 --> 00:09:47,020
it's doing one little thing.

139
00:09:47,020 --> 00:09:53,200
Hypervisor still has an unofficial goal of getting the GPU going by the end of the year.

140
00:09:53,200 --> 00:09:57,560
The user space side of the video driver is already passing 90% of the tests.

141
00:09:57,560 --> 00:10:01,880
So right now it's really just the kernel side that's missing.

142
00:10:01,880 --> 00:10:06,440
But with this new hypervisor and those neat snooping capabilities, the team feels that

143
00:10:06,440 --> 00:10:10,100
that goal isn't actually as far off as it might seem.

144
00:10:10,100 --> 00:10:13,860
One of the interesting things about the M1 platform so far, and you just learn so much

145
00:10:13,860 --> 00:10:18,700
by reading what the Ashi Linux team is writing or watching Hector's streams, it's remarkable

146
00:10:18,700 --> 00:10:20,660
and it's so much detail.

147
00:10:20,660 --> 00:10:25,240
And what they have discovered is Apple has put a lot of the functionality that would

148
00:10:25,240 --> 00:10:29,540
typically be in software in the operating system via a driver, and they've baked it

149
00:10:29,540 --> 00:10:34,900
into the firmware, essentially making it simpler to run alternative operating systems on the

150
00:10:34,900 --> 00:10:40,380
M1 hardware because the driver software has to do a lot less.

151
00:10:40,380 --> 00:10:44,620
It also means, though, they have to be very careful about how they manage firmware on

152
00:10:44,620 --> 00:10:49,100
the M1 platform because Apple has the luxury of just blasting out the latest firmware and

153
00:10:49,100 --> 00:10:50,940
requiring that macOS use that.

154
00:10:50,940 --> 00:10:55,340
But in Linux land, we like to separate out kernel and firmware so you can go ahead and

155
00:10:55,340 --> 00:10:59,260
upgrade your kernel without having to also upgrade your firmware at the same time.

156
00:10:59,260 --> 00:11:01,020
It's a totally different way of working.

157
00:11:01,020 --> 00:11:02,820
They have to solve that problem.

158
00:11:02,820 --> 00:11:06,340
But additionally, it's not just video card and booting, right?

159
00:11:06,340 --> 00:11:10,380
There's a lot of other hardware inside that machine that has to get up and working.

160
00:11:10,380 --> 00:11:16,760
And the good news is the M1 PCIe driver is now under review in the Linux kernel.

161
00:11:16,760 --> 00:11:21,300
It's very early days, but this driver was created by both the Corellium and Ashi Linux

162
00:11:21,300 --> 00:11:24,540
team and it's bringing up aspects of the system.

163
00:11:24,540 --> 00:11:29,860
Yeah, once this driver gets merged, assuming it does, Linux should see support for USB

164
00:11:29,860 --> 00:11:34,220
type A ports as well as Ethernet on the M1 family.

165
00:11:34,220 --> 00:11:38,620
It also helps a long support for Wi-Fi and Bluetooth, we're going to need that, although

166
00:11:38,620 --> 00:11:42,340
more work is still needed before there's real support.

167
00:11:42,340 --> 00:11:46,100
And we should just say, don't expect these updates too soon.

168
00:11:46,100 --> 00:11:51,260
This new PCIe driver is blocked by a GPIO driver that's still considered very much a

169
00:11:51,260 --> 00:11:52,980
work in progress.

170
00:11:52,980 --> 00:12:08,260
So for now, the PCIe driver is just a request for comments.

171
00:12:08,260 --> 00:12:09,700
Linode.com slash LAN.

172
00:12:09,700 --> 00:12:12,620
Go there to get $100 in credit and support the show.

173
00:12:12,620 --> 00:12:16,580
No matter what skill level you're at or what technology stack you use, Linode can help

174
00:12:16,580 --> 00:12:19,260
your ideas come to life on the web.

175
00:12:19,260 --> 00:12:23,900
And if you ever have any trouble, Linode has the best customer support in the business.

176
00:12:23,900 --> 00:12:27,820
Awarded by the people and along with hundreds of guides and tutorials, you're going to get

177
00:12:27,820 --> 00:12:29,980
up and going in no time.

178
00:12:29,980 --> 00:12:31,700
Linode feels like part of our team.

179
00:12:31,700 --> 00:12:35,220
Behind the scenes, it's what makes JB possible.

180
00:12:35,220 --> 00:12:38,780
If it weren't for these spots, you'd never know that Linode is making all this infrastructure

181
00:12:38,780 --> 00:12:40,300
hum because it just runs.

182
00:12:40,300 --> 00:12:44,220
It's fast, it's reliable, and it's making your experience great.

183
00:12:44,220 --> 00:12:47,640
Linode's been easy to use and has a powerful cloud dashboard.

184
00:12:47,640 --> 00:12:52,660
With S3 compatible object storage, cloud firewalls, and simple one click application deployments

185
00:12:52,660 --> 00:12:57,660
with their super fast networking, they are their own ISP, and so much more, you'll find

186
00:12:57,660 --> 00:13:00,300
there's tons of uses of that $100 credit.

187
00:13:00,300 --> 00:13:05,280
So go over there to Linode.com slash LAN and get that credit and support the show.

188
00:13:05,280 --> 00:13:10,300
Their one click Minecraft server lets you specify features like NPCs, game mode, all

189
00:13:10,300 --> 00:13:15,000
the critical little things you need to set up all in one nice easy to use screen.

190
00:13:15,000 --> 00:13:20,180
And you know, 66% of companies save money working with a mix of alternative cloud providers

191
00:13:20,180 --> 00:13:23,100
instead of just relying on one big old hyperscaler.

192
00:13:23,100 --> 00:13:25,620
Linode can be part of your multi cloud strategy.

193
00:13:25,620 --> 00:13:27,620
That's why you got to check it out for yourself.

194
00:13:27,620 --> 00:13:37,300
Linode.com slash LAN.

195
00:13:37,300 --> 00:13:38,300
Linux.ting.com.

196
00:13:38,300 --> 00:13:42,040
Thank you to Ting for sponsoring this episode of the Linux Action News.

197
00:13:42,040 --> 00:13:46,060
If you're sick of overpaying for cell service, go see how much you could save and then take

198
00:13:46,060 --> 00:13:50,020
25 bucks off of that at Linux.ting.com.

199
00:13:50,020 --> 00:13:52,960
Ting is an MVNO or a mobile virtual network operator.

200
00:13:52,960 --> 00:13:58,960
That means Ting mobile customers get the same access as the customers of say, the big networks,

201
00:13:58,960 --> 00:14:01,840
but with better customer service and at a lower cost.

202
00:14:01,840 --> 00:14:06,260
With Ting mobile, you get the same coast to coast coverage as you would with the big guys,

203
00:14:06,260 --> 00:14:08,380
but you just pay less for it.

204
00:14:08,380 --> 00:14:11,180
And Ting's plans are way simpler and straightforward.

205
00:14:11,180 --> 00:14:16,040
In fact, I love their new set 12 plan, which gives you 12 gigs of data with unlimited talk

206
00:14:16,040 --> 00:14:18,760
and text for just 35 bucks a month.

207
00:14:18,760 --> 00:14:22,940
And a good family plan is hard to find, but with Ting's flex plans, they address this

208
00:14:22,940 --> 00:14:25,740
particular pain point in a way only Ting can.

209
00:14:25,740 --> 00:14:30,300
You add as many lines to your account as you need, you just pay 10 bucks per line.

210
00:14:30,300 --> 00:14:34,900
Every line gets unlimited texts and calls and every line shares that same pool of data.

211
00:14:34,900 --> 00:14:39,740
And if you need two, 20 or a lot more gigs, Ting's got a perfect plan for you.

212
00:14:39,740 --> 00:14:44,320
And every plan gets access to Ting's award winning customer service with nationwide LTE

213
00:14:44,320 --> 00:14:49,540
and 5G coverage, plus the freedom of no contracts ever.

214
00:14:49,540 --> 00:14:52,700
It's simple to switch to Ting, pretty much any phone works on Ting, so just head over

215
00:14:52,700 --> 00:14:57,260
to linux.ting.com, check your current phone, create an account, pick the plan that's right

216
00:14:57,260 --> 00:14:58,260
for you.

217
00:14:58,260 --> 00:15:02,140
And then Ting will send you a SIM card, you pop that in, you get activated in minutes.

218
00:15:02,140 --> 00:15:05,740
Cutting your phone bill in half has never been easier with Ting's brand new plans.

219
00:15:05,740 --> 00:15:07,980
The next generation of Ting mobile is here.

220
00:15:07,980 --> 00:15:15,780
So see how much you could save and then take 25 bucks off of that at linux.ting.com.

221
00:15:15,780 --> 00:15:26,060
After 484 days since the release of Ubuntu 2004, elementary OS 6 Odin was announced this

222
00:15:26,060 --> 00:15:27,060
week.

223
00:15:27,060 --> 00:15:33,500
Now, we don't typically talk about desktop distribution releases in Linux action news.

224
00:15:33,500 --> 00:15:39,500
But with version 6, we really think elementary OS is a serious workstation contender.

225
00:15:39,500 --> 00:15:45,100
And even though it's been a while since Ubuntu 2004's release, with elementary's unique take,

226
00:15:45,100 --> 00:15:52,060
their clean and sharp UI, and now the use of flat packs, this latest release is actually

227
00:15:52,060 --> 00:15:53,820
a pragmatic work machine.

228
00:15:53,820 --> 00:15:57,340
And of course, with every major release, there's been some really nice improvements and they

229
00:15:57,340 --> 00:15:59,260
really nail it every time.

230
00:15:59,260 --> 00:16:03,140
Wes and I gave the new release a spin and a few things jumped out at us.

231
00:16:03,140 --> 00:16:06,700
And I have to start with the visual stuff because this is an area the team puts a lot

232
00:16:06,700 --> 00:16:08,100
of attention into.

233
00:16:08,100 --> 00:16:13,420
And with this release, we now see a system wide dark theme that works in a way that respects

234
00:16:13,420 --> 00:16:19,020
application developers theming choices, and also includes accent colors that you can choose

235
00:16:19,020 --> 00:16:23,860
when you're choosing dark theme and just make the important UI elements really pop out to

236
00:16:23,860 --> 00:16:24,860
you.

237
00:16:24,860 --> 00:16:26,100
So your eyeball goes right to them.

238
00:16:26,100 --> 00:16:29,500
And man, if that doesn't just kind of add up over time, as you're working through the

239
00:16:29,500 --> 00:16:33,340
interface, it starts just saving you just slices of time here and there.

240
00:16:33,340 --> 00:16:36,920
And the new notifications redesign also kind of plays into that.

241
00:16:36,920 --> 00:16:39,340
And now they are including a new task app.

242
00:16:39,340 --> 00:16:41,780
I've actually gotten my hands on this app previously.

243
00:16:41,780 --> 00:16:46,060
And one of the things I like about it is it's a native GTK app that syncs with the Todoist

244
00:16:46,060 --> 00:16:51,020
service, which is kind of nice because the quote unquote native or I guess you could

245
00:16:51,020 --> 00:16:54,080
say vendor made Todoist app is an electron app.

246
00:16:54,080 --> 00:16:56,100
So having a native GTK app syncs with it.

247
00:16:56,100 --> 00:16:59,340
Well, man, if that isn't just diamonds, I don't know what is.

248
00:16:59,340 --> 00:17:03,780
Also, LVFS firmware support now baked in to their system settings.

249
00:17:03,780 --> 00:17:06,860
So you can update your devices, rewritten mail.

250
00:17:06,860 --> 00:17:10,100
You remember this started as Geary and they have redesigned this.

251
00:17:10,100 --> 00:17:14,740
And I've also been watching this project as it's been developed and it's come so far.

252
00:17:14,740 --> 00:17:20,060
If you need a nice, clean, totally, totally simple email client, it's a great one for

253
00:17:20,060 --> 00:17:21,060
that.

254
00:17:21,060 --> 00:17:22,540
And then there's also been improvements to their terminal.

255
00:17:22,540 --> 00:17:26,300
I always like seeing that kind of stuff and some smart paste protection, which I like

256
00:17:26,300 --> 00:17:31,740
because I put family members on elementary OS, better keyboard shortcuts and also terminal

257
00:17:31,740 --> 00:17:35,580
now has better integration with the notification settings.

258
00:17:35,580 --> 00:17:39,940
With this release, you can also take easy screenshots of a window from its title bar,

259
00:17:39,940 --> 00:17:42,300
which I just think is a great idea.

260
00:17:42,300 --> 00:17:43,300
Love that.

261
00:17:43,300 --> 00:17:46,620
And there's a desktop context menu when you give a right click on your desktop that lets

262
00:17:46,620 --> 00:17:50,100
you configure both your desktop and your display right there.

263
00:17:50,100 --> 00:17:54,020
I think this is a great balance between design and available options in the menu where you

264
00:17:54,020 --> 00:17:58,020
can configure what makes sense without giving you every option.

265
00:17:58,020 --> 00:18:03,260
They've also changed their philosophy around installation, saying now every install is

266
00:18:03,260 --> 00:18:04,260
an OEM install.

267
00:18:04,260 --> 00:18:05,900
What does that mean?

268
00:18:05,900 --> 00:18:11,820
Well, user creation and customization, that's all handled after you've installed and rebooted.

269
00:18:11,820 --> 00:18:14,100
It's a really clean, straightforward installation.

270
00:18:14,100 --> 00:18:16,000
It's an area the team worked a lot on.

271
00:18:16,000 --> 00:18:20,220
So I went through it this time and paid a lot of attention to each screen.

272
00:18:20,220 --> 00:18:22,940
And I don't know if I've ever seen a better done installer, period.

273
00:18:22,940 --> 00:18:27,580
And I like the way they handle everything from installing the base OS to trying it to

274
00:18:27,580 --> 00:18:30,280
encrypting your user directory and setting up your user account.

275
00:18:30,280 --> 00:18:32,020
It's all really nice.

276
00:18:32,020 --> 00:18:38,260
Another shift they've made in elementary OS 6 is accessibility features are just features

277
00:18:38,260 --> 00:18:39,660
of the operating system.

278
00:18:39,660 --> 00:18:43,440
And I think that's a mind shift that the community needs to make in general.

279
00:18:43,440 --> 00:18:48,100
And elementary OS 6 also includes improved performance just across the desktop in general.

280
00:18:48,100 --> 00:18:49,380
And I don't say that lightly.

281
00:18:49,380 --> 00:18:52,060
I definitely noticed it in my testing.

282
00:18:52,060 --> 00:18:57,380
In fact, it was one of those moments where I went, oh, okay, this is going to be something

283
00:18:57,380 --> 00:19:01,240
I'm really going to have to try out for a while because it seems that their work to

284
00:19:01,240 --> 00:19:06,980
get elementary OS on the Pinebook Pro and Raspberry Pi builds has resulted in net performance

285
00:19:06,980 --> 00:19:08,880
improvements for all of us.

286
00:19:08,880 --> 00:19:10,980
Who would have thought?

287
00:19:10,980 --> 00:19:12,900
Now I should add, I like the installer.

288
00:19:12,900 --> 00:19:13,900
I agree with that.

289
00:19:13,900 --> 00:19:17,180
It's a really good work, but I think you should know it's still a little rough around the

290
00:19:17,180 --> 00:19:18,480
edges in a few places.

291
00:19:18,480 --> 00:19:23,940
I had some random leg spikes and I was kind of surprised to see that the advanced partitioning,

292
00:19:23,940 --> 00:19:27,380
if you go that route, it actually just spawns Gparted.

293
00:19:27,380 --> 00:19:28,380
Yeah.

294
00:19:28,380 --> 00:19:30,060
That part does feel a little bit of like hands up.

295
00:19:30,060 --> 00:19:31,060
All right.

296
00:19:31,060 --> 00:19:33,500
If you're hitting the advanced button, we're just going to assume you know what you're

297
00:19:33,500 --> 00:19:34,500
doing.

298
00:19:34,500 --> 00:19:35,500
Have Gparted.

299
00:19:35,500 --> 00:19:36,500
Here you go.

300
00:19:36,500 --> 00:19:37,500
Yeah.

301
00:19:37,500 --> 00:19:38,500
I was kind of torn.

302
00:19:38,500 --> 00:19:39,500
On one hand, it looked a little bit off.

303
00:19:39,500 --> 00:19:43,820
It didn't quite match the clean UI they have and actually the theming support didn't quite

304
00:19:43,820 --> 00:19:45,740
play nicely with it at times.

305
00:19:45,740 --> 00:19:49,420
But on the other hand, honestly, especially if I'm installing something like Fedora with

306
00:19:49,420 --> 00:19:54,020
Anaconda, I just skip using the built in stuff and use Gparted anyway.

307
00:19:54,020 --> 00:19:56,620
So I think at the end of the day, it's just a practical choice.

308
00:19:56,620 --> 00:19:57,620
Yeah.

309
00:19:57,620 --> 00:20:01,060
And I could see them just opting to go that route for now instead of investing a lot of

310
00:20:01,060 --> 00:20:04,620
time into an area that probably most of their users aren't taking advantage of.

311
00:20:04,620 --> 00:20:07,820
I bet most are just using the basic partitioning built in.

312
00:20:07,820 --> 00:20:12,620
I would have led with gesture support being probably my favorite thing that they've done

313
00:20:12,620 --> 00:20:16,260
because I'm really getting into gesture support on all of my desktop environments.

314
00:20:16,260 --> 00:20:20,000
I even bought a trackpad to do that for my desktop.

315
00:20:20,000 --> 00:20:26,680
But instead, I'm going to give like the MVP, like the award of this release to what they've

316
00:20:26,680 --> 00:20:28,600
done with Flatpaks.

317
00:20:28,600 --> 00:20:33,180
When they decided to integrate Flatpaks, they did it at a level no other distribution I've

318
00:20:33,180 --> 00:20:34,340
ever seen has done.

319
00:20:34,340 --> 00:20:40,260
And what I'm talking about here is they have one spot in your system settings where you

320
00:20:40,260 --> 00:20:44,780
can go and see all of the portal permissions that different Flatpaks have and you can turn

321
00:20:44,780 --> 00:20:47,900
off access to different things in one spot.

322
00:20:47,900 --> 00:20:52,920
Every app is listed with what they can do in one place for the user to interact with.

323
00:20:52,920 --> 00:20:53,920
And it's brilliant.

324
00:20:53,920 --> 00:20:58,500
And in a way, it's one of those things that once you see you go, Oh, this is obvious.

325
00:20:58,500 --> 00:20:59,500
Everybody should be doing this.

326
00:20:59,500 --> 00:21:04,180
And I would not be surprised at all to see something like this land in GNOME system settings

327
00:21:04,180 --> 00:21:06,860
eventually, or maybe it's already on its way.

328
00:21:06,860 --> 00:21:10,420
It really is impressive, and it's the kind of thoughtfulness and high level integration

329
00:21:10,420 --> 00:21:13,940
work that we've come to expect from the team behind elementary.

330
00:21:13,940 --> 00:21:18,680
I also really appreciated that while flat hub is not enabled out of the box, it's really

331
00:21:18,680 --> 00:21:21,700
easy to sideload whatever Flatpak app you might want.

332
00:21:21,700 --> 00:21:25,340
And it even offers to clean up the Flatpak ref file for you.

333
00:21:25,340 --> 00:21:26,980
So they put thought in there.

334
00:21:26,980 --> 00:21:30,200
And then your sideloaded apps just show up in the app center anyway.

335
00:21:30,200 --> 00:21:31,700
So it's all a nice experience.

336
00:21:31,700 --> 00:21:35,720
Yeah, you don't feel like you're being penalized for going outside the app center.

337
00:21:35,720 --> 00:21:40,760
And that's a good thing right now because the software center is, it's a bit empty right

338
00:21:40,760 --> 00:21:42,900
now as we wait for developers to update their apps.

339
00:21:42,900 --> 00:21:47,740
So having easy access to flat hub and easy access to sideloaded Flatpaks and then integrating

340
00:21:47,740 --> 00:21:51,540
them thoughtfully bridges that gap right now and kind of speaks to what you and I were

341
00:21:51,540 --> 00:21:56,380
saying when you add all of these things up, the clean UI, the GTK based desktop that isn't

342
00:21:56,380 --> 00:22:01,500
GNOME shell, the Flatpak integration, the performance improvements, the new usability

343
00:22:01,500 --> 00:22:06,020
features and accessibility features, it really is just like this great work machine that

344
00:22:06,020 --> 00:22:09,340
you can just sit down and start busting through your work really fast.

345
00:22:09,340 --> 00:22:12,980
And you know, I think it won't be long until you start seeing developers update their apps

346
00:22:12,980 --> 00:22:17,100
and that software center starts filling up with apps that are native Linux apps for elementary

347
00:22:17,100 --> 00:22:18,100
OS 6.

348
00:22:18,100 --> 00:22:22,900
Now, if you're interested, but you want a little bit more tweakability, we kind of suggest

349
00:22:22,900 --> 00:22:26,120
that maybe you check out Pantheon tweaks.

350
00:22:26,120 --> 00:22:28,860
Just don't tell Dan and Cass we told you to.

351
00:22:28,860 --> 00:22:33,460
I mean, sometimes the guy just needs a minimize button, but don't tell him we said it.

352
00:22:33,460 --> 00:22:37,340
In the meantime, get every episode of Linux action news go to linuxactionnews.com slash

353
00:22:37,340 --> 00:22:42,020
subscribe for all the ways to get those new episodes and the linuxactionnews.com slash

354
00:22:42,020 --> 00:22:45,820
contact to let us know which tweaks you use.

355
00:22:45,820 --> 00:22:52,660
Today we're recording in Nebraska, but tomorrow who knows follow our road trip live at colonytracker.live

356
00:22:52,660 --> 00:22:56,220
and hit that micro meetup link if we are going to be in your area.

357
00:22:56,220 --> 00:22:58,340
We do have some swag on board after all.

358
00:22:58,340 --> 00:23:04,340
And don't forget, join us for the upcoming Denver meetup this Friday, meetup.com slash

359
00:23:04,340 --> 00:23:06,100
Jupiter broadcasting.

360
00:23:06,100 --> 00:23:08,120
If you can't make it, though, don't worry.

361
00:23:08,120 --> 00:23:13,680
This show will be back next Monday with our weekly take on the latest Linux and open source

362
00:23:13,680 --> 00:23:15,180
news.

363
00:23:15,180 --> 00:23:16,380
Thanks for joining us.

364
00:23:16,380 --> 00:23:33,620
And that's all the news for this week.

