WEBVTT

00:00.000 --> 00:16.460
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.460 --> 00:20.880
This is Episode 74, recorded on October 7th, 2018.

00:20.880 --> 00:21.880
I'm Chris.

00:21.880 --> 00:22.880
And I'm Joe.

00:22.880 --> 00:23.880
Hello, Joe.

00:23.880 --> 00:28.480
It's good to be connected with you, and it's a good week for all of us fans of big storage

00:28.480 --> 00:29.480
setups.

00:29.480 --> 00:32.080
Is this going to be on our Linux laptop or in the enterprise?

00:32.080 --> 00:36.160
Yeah, Red Hat's Stratus storage project has reached 1.0 stable.

00:36.160 --> 00:38.280
So this 1.0 milestone is a pretty big deal.

00:38.280 --> 00:39.520
Not all the features are there.

00:39.520 --> 00:42.280
We're not even talking full RAID capability yet.

00:42.280 --> 00:47.260
But soon, the conversation will change and comparisons will start to be made to the feature

00:47.260 --> 00:54.320
set of ZFS or ButterFS, but with much more flexible file system support and using a bunch

00:54.320 --> 00:58.200
of existing established safe tools on Linux to accomplish this.

00:58.200 --> 01:01.880
So Project Stratus is going to be a big deal when everything's all done, and it's going

01:01.880 --> 01:04.400
to be free and available to all Linux users.

01:04.400 --> 01:11.360
The key phrase there is going to be, because even at 1.0, it's not mature at all, is it

01:11.360 --> 01:12.360
really?

01:12.360 --> 01:14.640
You mentioned not having RAID support.

01:14.640 --> 01:20.080
That is a big deal, and that's not going to come until version 2.0.

01:20.080 --> 01:23.120
And the ZFS feature parity, that's not going to come until 3.0.

01:23.120 --> 01:28.560
So this is definitely one to watch, but I think that it's very much the testing phase

01:28.560 --> 01:29.560
right now, isn't it?

01:29.560 --> 01:32.000
It's not anywhere near ready for production.

01:32.000 --> 01:34.320
But don't be too surprised if it comes along quickly.

01:34.320 --> 01:38.620
A lot of the groundwork is now done with this 1.0 milestone, and some of the things they

01:38.620 --> 01:43.480
need to get some of that RAID support and feature set are existing tools in Linux.

01:43.480 --> 01:47.980
Remember here, Stratus itself is not a file system, so we don't have the delay and lag

01:47.980 --> 01:51.240
time of creating a file system and making sure it's safe like we've been watching with

01:51.240 --> 01:52.240
ButterFS.

01:52.240 --> 01:58.680
In fact, multiple independent file systems can be created and used and managed with Stratus.

01:58.680 --> 02:00.080
It's pretty great like that.

02:00.080 --> 02:04.920
So this isn't some big science project where we have to watch the creation of a new file

02:04.920 --> 02:06.400
system we'll use for 20 years.

02:06.400 --> 02:10.420
It's the bringing together of some existing tools and creating the services around them

02:10.420 --> 02:13.000
to have an API and management tools.

02:13.000 --> 02:16.200
That could progress fairly quickly, especially with the backing of Red Hat.

02:16.200 --> 02:17.480
Yeah, that's true.

02:17.480 --> 02:22.120
And they are targeting XFS as the main supported file system for now, which makes you happy

02:22.120 --> 02:23.120
presumably.

02:23.120 --> 02:24.120
Yeah, absolutely.

02:24.120 --> 02:25.120
You knew that.

02:25.120 --> 02:26.680
You knew that when you saw that, didn't you?

02:26.680 --> 02:27.680
Yep.

02:27.680 --> 02:29.960
Yeah, that's probably one of my favorite things about it.

02:29.960 --> 02:31.600
In fact, I'd love to dig more into this.

02:31.600 --> 02:34.880
I've been following this on Linux Unplugged since they announced it.

02:34.880 --> 02:39.640
And obviously, I'm a big fan of this because it's a very Linux solution to this problem

02:39.640 --> 02:45.840
to finally get parity features with ZFS and have ButterFS as promise, but be able to use

02:45.840 --> 02:51.080
a file system that I choose like XFS and have a programmatic API that people can use to

02:51.080 --> 02:55.480
set things up, which is going to make management of Linux systems and their disk automatable

02:55.480 --> 02:56.480
and scalable.

02:56.480 --> 02:58.980
Clearly, I'm just very excited about it.

02:58.980 --> 02:59.980
Lots of potential.

02:59.980 --> 03:03.320
I hope to have the opportunity to talk to Andy Grover, who's been the main voice behind

03:03.320 --> 03:04.640
this project since it started.

03:04.640 --> 03:10.440
It is interesting, though, that once this becomes mature and gets rolled into RHEL,

03:10.440 --> 03:15.080
you're going to have three very different approaches to the same problem on the three

03:15.080 --> 03:16.080
main distros.

03:16.080 --> 03:21.280
You're going to have Stratus on Red Hat, ButterFS on SUSE, and ZFS on Ubuntu.

03:21.280 --> 03:22.800
Yeah, that crossed my mind, too.

03:22.800 --> 03:25.120
It's three very different approaches.

03:25.120 --> 03:30.640
Of course, Project Stratus could get widespread adoption, Debian could adopt it, and then

03:30.640 --> 03:33.120
it'd probably pretty quickly show up in a future Ubuntu release.

03:33.120 --> 03:35.960
I'm sure the Ubuntu folks will be fine with that.

03:35.960 --> 03:39.960
But it is initially going to be three very different approaches.

03:39.960 --> 03:45.060
The one thing that will give Stratus an eventual heads up, besides the fact that major parts

03:45.060 --> 03:48.720
of it are written in Rust, which is awesome, is that API.

03:48.720 --> 03:52.820
I know I've mentioned it a few times now, but that is a big deal for orchestration systems

03:52.820 --> 03:57.840
and management to be able to standardize how your Linux boxes that you deploy in seconds

03:57.840 --> 04:00.200
can have their entire drive set up.

04:00.200 --> 04:05.440
I really had my eyes opened when I had a conversation with an AWS engineer who said, we frequently

04:05.440 --> 04:10.960
have customers that spin up multiple thousands of Ubuntu systems at once.

04:10.960 --> 04:14.080
And he said, that's why when you hear about them cutting down the boot time, it's not

04:14.080 --> 04:15.400
for your laptop.

04:15.400 --> 04:20.920
It's for all these AWS instances that need to scale up immediately at 3,000 at once booting.

04:20.920 --> 04:25.480
And when you have that many systems that you're managing that you create and destroy in a

04:25.480 --> 04:29.760
day, programmatically setting up all of the disk storage has been a bespoke solution for

04:29.760 --> 04:32.840
each distribution and each setup for each shop for years now.

04:32.840 --> 04:37.360
And this is going to bring it all unified together, and you'll start seeing Chef and

04:37.360 --> 04:41.640
Puppet and Ansible how-to guides that get this stuff going in no time.

04:41.640 --> 04:46.880
But potentially for the desktop as well, that API means that it could easily be built into

04:46.880 --> 04:52.480
GUI tools as well that would make provisioning disks really straightforward for end users.

04:52.480 --> 04:57.060
But you're right that really the enterprise stuff is where this is targeted.

04:57.060 --> 05:02.640
And so the GUI user end of things is probably going to be a kind of afterthought and probably

05:02.640 --> 05:05.000
made by third parties rather than Red Hat.

05:05.000 --> 05:06.440
I wouldn't be so sure.

05:06.440 --> 05:11.240
I wouldn't be too surprised ways down the road to see support show up in gnome disks,

05:11.240 --> 05:12.240
something like that.

05:12.240 --> 05:13.240
I could see that.

05:13.240 --> 05:14.240
Yeah.

05:14.240 --> 05:15.240
Yeah.

05:15.240 --> 05:19.600
Well, speaking of Ansible and Red Hat, Red Hat is bridging the gap between the old style

05:19.600 --> 05:24.320
server management and the future DevOps in the cloud style management.

05:24.320 --> 05:27.000
And that's what their next update to Red Hat satellite.

05:27.000 --> 05:31.140
So the quick and short of this announcement, for those of you in IT, this new tool will

05:31.140 --> 05:37.120
integrate Red Hat's enterprise management tools with Ansible's automation tools, which

05:37.120 --> 05:42.360
means sysadmins can now use the Red Hat satellite interface to manage RHEL with Ansible's remote

05:42.360 --> 05:45.280
execution and state management.

05:45.280 --> 05:47.020
Also Ansible playbooks.

05:47.020 --> 05:50.360
So you could be automatically generating machines like a madman or lady.

05:50.360 --> 05:54.920
Well, at the other end of the Red Hat world, you've got Fedora on the desktop.

05:54.920 --> 05:58.080
And one of their devs has posted a question for people.

05:58.080 --> 06:03.880
He wants to gather some data regarding hibernation on laptops, because that has traditionally

06:03.880 --> 06:09.240
been something in Linux where we've just assumed that it's not going to work very well.

06:09.240 --> 06:11.520
But he's got some thing pads where it does work.

06:11.520 --> 06:15.320
And he's got some other machines where it doesn't work brilliantly.

06:15.320 --> 06:19.640
And so he wants to get some data together to see, is this a problem?

06:19.640 --> 06:22.040
And if so, we'll have to get this sorted.

06:22.040 --> 06:25.040
This is one of those opportunities where you can make a small impact in the open source

06:25.040 --> 06:27.900
community even if you don't write a single line of code.

06:27.900 --> 06:30.960
So with a little information and a little help, they might be able to get to the bottom

06:30.960 --> 06:33.360
and hunt down the great hibernate bug.

06:33.360 --> 06:37.720
Yeah, so there'll be a link in the show notes, linuxactionnews.com slash 74.

06:37.720 --> 06:39.720
So go and help out there.

06:39.720 --> 06:42.960
But let's switch gears and talk about Windows 10.

06:42.960 --> 06:46.260
Why are we going to talk about Windows 10 on a Linux show, Chris?

06:46.260 --> 06:49.040
Because they got a feature that I wish we would have thought of first, Joe.

06:49.040 --> 06:51.680
It is something that is connected to Android.

06:51.680 --> 06:54.720
And it'll bring Android apps essentially to the Windows desktop.

06:54.720 --> 06:59.120
The feature, which Microsoft is referring to as app mirroring, it shows up in Windows

06:59.120 --> 07:01.200
as an app called, quote, your phone.

07:01.200 --> 07:03.200
And it seems to work best with Android for now.

07:03.200 --> 07:07.720
Although Microsoft did announce the ability to transfer web pages from the iPhone to Windows

07:07.720 --> 07:09.200
10 desktop.

07:09.200 --> 07:15.880
But in a sense, it is a remote projection of the app from your Android device.

07:15.880 --> 07:20.420
And of course, because it's Microsoft, they have a tweet where they showed a work case

07:20.420 --> 07:25.900
where you're stuck in a boring meeting and you just can't stop that texting.

07:25.900 --> 07:30.920
So you call up the texting app from your Android phone and you mirror it to your Windows 10

07:30.920 --> 07:35.240
app, and you reply to text messages while you're in that boring meeting from your Windows

07:35.240 --> 07:36.240
10 machine.

07:36.240 --> 07:38.880
It reminds me a lot of KDE Connect.

07:38.880 --> 07:40.700
Yeah, although this is the whole app.

07:40.700 --> 07:42.940
It's actually remote VNC style.

07:42.940 --> 07:46.240
Although it seems to be, if you look at the videos, much smoother.

07:46.240 --> 07:50.520
It seems to be well performing, like better than even, say, RDP performs.

07:50.520 --> 07:54.640
And so since it's the entire app, it has all of your chat history, all of the emojis, whatever

07:54.640 --> 07:58.120
you might not have on one machine that's on another machine, you know, all that little

07:58.120 --> 07:59.120
stuff.

07:59.120 --> 08:00.120
It's all going to be there.

08:00.120 --> 08:03.280
There are no real details of how this is going to work.

08:03.280 --> 08:08.320
So I mean, maybe we'll never get to see how this works with it being Windows, but it seems

08:08.320 --> 08:10.560
like some sort of sorcery to me.

08:10.560 --> 08:15.320
I suppose we'll find out fairly soon because it's going to be in the October updates, which

08:15.320 --> 08:19.040
well, there was an update recently, wasn't there, which they had to pull.

08:19.040 --> 08:21.160
So maybe we'll be waiting a little bit longer.

08:21.160 --> 08:25.000
All these years later, Microsoft still having that problem with Windows.

08:25.000 --> 08:28.160
Thankfully my Linux box hasn't had any issues like that in a long time.

08:28.160 --> 08:33.200
So one other thing I note about this is it's limited right now, apparently, to the Android

08:33.200 --> 08:39.900
stock texting and photo apps and one specific iPhone web page transfer app.

08:39.900 --> 08:41.640
So it's not all the apps on your phone.

08:41.640 --> 08:45.440
It's ones that they have built some sort of specific support for.

08:45.440 --> 08:49.760
That might also indicate why it's so performant, but it does add to the mystery a bit.

08:49.760 --> 08:52.240
And it makes me want that same damn thing on Linux.

08:52.240 --> 08:56.080
Well, good luck running that if you've got lineage on your phone is all I can say.

08:56.080 --> 08:58.360
I don't suppose that's going to work very well.

08:58.360 --> 09:00.240
It's interesting because Google went the other way.

09:00.240 --> 09:06.080
They got Android apps working on Chrome OS and Linux apps instead of projecting apps

09:06.080 --> 09:07.080
onto the Chromebook.

09:07.080 --> 09:09.440
So they kind of they took a different route.

09:09.440 --> 09:10.440
Hmm.

09:10.440 --> 09:14.600
Well, speaking of Microsoft, you might recall from back in April, they announced something

09:14.600 --> 09:17.600
called Azure Sphere OS, which was Linux based.

09:17.600 --> 09:20.120
Well, now they're actually shipping the hardware for that.

09:20.120 --> 09:21.120
Yeah.

09:21.120 --> 09:24.440
And just for 85 US greenbacks, you can order a development kit right now if you're in the

09:24.440 --> 09:25.440
US.

09:25.440 --> 09:27.280
So worldwide availability.

09:27.280 --> 09:31.080
If there is worldwide availability, it's a different skew of the kid, it appears.

09:31.080 --> 09:39.320
But this Azure Sphere OS deal is fascinating to me because it to me it represents the next

09:39.320 --> 09:41.360
generation of IoT devices.

09:41.360 --> 09:44.540
I hope I hope I didn't just make people tune out by saying IoT.

09:44.540 --> 09:50.000
But it really is sort of in a different league of IoT device.

09:50.000 --> 09:55.080
And it's got a really fascinating multi-core setup where they've isolated the Wi-Fi and

09:55.080 --> 09:57.880
network stack in what they're calling a core.

09:57.880 --> 10:02.080
And the hardware encryption module, which has to be signed and verified by Microsoft

10:02.080 --> 10:06.240
and the hardware OEM, is in its own core.

10:06.240 --> 10:10.200
And then the Linux Azure Sphere OS is in its own core.

10:10.200 --> 10:15.280
And Microsoft claims that if you say pop the Wi-Fi stack, you do not necessarily then get

10:15.280 --> 10:18.640
access to the OS or the hardware encryption.

10:18.640 --> 10:22.920
It's got a design that's pretty fascinating and they paint the most boring picture in

10:22.920 --> 10:23.920
the world.

10:23.920 --> 10:27.080
And it's clear to me this is how these devices are going to be used.

10:27.080 --> 10:33.760
On Microsoft's Azure Sphere OS documentation website, they outline a use case where a dishwasher

10:33.760 --> 10:38.860
manufacturer embeds one of these in there and monitors the temperature of the dry and

10:38.860 --> 10:40.240
wash cycles.

10:40.240 --> 10:44.200
And if the temperature starts to fluctuate, it then assumes there could be a fault and

10:44.200 --> 10:46.120
it runs a diagnostic.

10:46.120 --> 10:50.760
All meanwhile, security updates and management is all happening through Azure.

10:50.760 --> 10:56.120
The whole idea with this Azure Sphere OS device is that it's part of an ecosystem that involves

10:56.120 --> 10:59.520
cloud connectivity and other components.

10:59.520 --> 11:01.800
But that's why I say it kind of makes it a different level device.

11:01.800 --> 11:02.800
It's kind of a new tier.

11:02.800 --> 11:03.800
Yeah.

11:03.800 --> 11:07.480
And obviously they want you to connect it to Azure, their cloud, so they can make the

11:07.480 --> 11:08.480
money there.

11:08.480 --> 11:13.980
But they do claim that it will be open enough that you'll be able to use other cloud providers

11:13.980 --> 11:19.640
or even potentially on premises, which we'll have to see exactly how that works out.

11:19.640 --> 11:21.720
But that's kind of a good sign, isn't it?

11:21.720 --> 11:22.720
Yeah.

11:22.720 --> 11:26.400
And I think it's necessary for certain types of use cases like devices that go inside government

11:26.400 --> 11:27.740
facilities or hospitals.

11:27.740 --> 11:31.040
There may just be certain requirements where you're going to eventually have to support

11:31.040 --> 11:32.900
on-premises management.

11:32.900 --> 11:35.460
One thing to note right now, a little disappointing.

11:35.460 --> 11:40.360
It's fun to see Microsoft building a Linux-based OS and then shipping it on hardware.

11:40.360 --> 11:44.220
That's kind of fun for those of us that have been around since, well, the 80s.

11:44.220 --> 11:51.160
But it's a little disappointing to see that it requires Windows 10 and full Visual Studio

11:51.160 --> 11:53.700
to actually develop with this thing.

11:53.700 --> 11:58.080
It would be great to see support for Visual Studio code somehow or even just support for

11:58.080 --> 12:00.520
using Linux to build for this thing.

12:00.520 --> 12:02.620
I'd love to see them at least get there.

12:02.620 --> 12:04.560
This thing's in early days now, so perhaps they will.

12:04.560 --> 12:09.360
Well, although it does say in the documentation that Windows 10 and Visual Studio are a requirement

12:09.360 --> 12:13.440
for this, I did read in some of the marketing material that you can develop for it however

12:13.440 --> 12:16.520
you want in just a standard text editor.

12:16.520 --> 12:18.800
And I think that is a bit of a problem here.

12:18.800 --> 12:22.040
The communication has been a little bit opaque.

12:22.040 --> 12:25.480
It's not exactly clear what this Linux-based OS is.

12:25.480 --> 12:27.480
We don't know what kernel it's going to be.

12:27.480 --> 12:31.040
I remember when you spoke to someone from Microsoft called Galen Hunt.

12:31.040 --> 12:36.080
Unfortunately, that was an off-air interview, but you kind of spoke about it on Linux Unplugged

12:36.080 --> 12:37.080
episode 245.

12:37.080 --> 12:41.640
He had said to you it was going to be an upstream kernel, and they were going to aggressively

12:41.640 --> 12:42.760
track that.

12:42.760 --> 12:47.280
Whereas now in the marketing material, it says a custom Linux kernel.

12:47.280 --> 12:50.880
So I don't know, perhaps that's just changed in the last few months.

12:50.880 --> 12:54.760
I don't know if that necessarily suggests it's not still aggressively tracking an upstream

12:54.760 --> 12:59.400
kernel, because they have built this thing to be pretty rapidly updated via the Azure

12:59.400 --> 13:00.700
Sphere management.

13:00.700 --> 13:04.560
So I could still see them calling it a custom kernel, even though it's something that's

13:04.560 --> 13:06.700
just really upstream with some modifications.

13:06.700 --> 13:11.660
I do also recall in that conversation, I tried to get some specifics on what kernel modifications

13:11.660 --> 13:13.200
they were making.

13:13.200 --> 13:15.000
And some of it had to do with backup and restore.

13:15.000 --> 13:17.400
Some of it was for hardware encryption support.

13:17.400 --> 13:21.280
And there was a few other, oh yeah, crash metric collection with some other modifications

13:21.280 --> 13:22.280
they had made.

13:22.280 --> 13:27.120
And they felt that that was enough of a change to call it a custom kernel, if I recall.

13:27.120 --> 13:28.120
Right.

13:28.120 --> 13:29.120
Okay.

13:29.120 --> 13:31.560
Well, I mean, that's the one thing that we are going to get source code to here.

13:31.560 --> 13:33.760
They have to give us the kernel source, don't they?

13:33.760 --> 13:34.760
Yeah, it's true.

13:34.760 --> 13:35.760
We'll find out in due course.

13:35.760 --> 13:37.480
That's something to watch for, I suppose.

13:37.480 --> 13:38.480
Yeah.

13:38.480 --> 13:42.280
I do remember at the time thinking about what Canonical are doing.

13:42.280 --> 13:45.360
Because Canonical obviously are known for Ubuntu on the desktop and that does make them

13:45.360 --> 13:46.360
some money.

13:46.360 --> 13:51.680
But the whole Snaps thing is not about bringing things like Spotify to the desktop, although

13:51.680 --> 13:54.480
that's a nice kind of side benefit.

13:54.480 --> 14:00.040
As far as I'm aware, Snaps are really targeted at IoT and that's where they're making their

14:00.040 --> 14:01.040
real money.

14:01.040 --> 14:02.040
Yeah.

14:02.040 --> 14:03.040
I'm not so sure about that.

14:03.040 --> 14:06.680
I think Snaps are definitely built with IoT devices in mind.

14:06.680 --> 14:11.880
But I think it seems to me, at least, Canonical's approach has become a multi-spectrum approach

14:11.880 --> 14:15.000
where they want Snaps for desktop, server, and IoT.

14:15.000 --> 14:18.920
As far as where they make their money from, I don't know if that's true either about IoT

14:18.920 --> 14:21.600
being a big revenue source, but I could be wrong.

14:21.600 --> 14:22.640
I think it's just a component.

14:22.640 --> 14:26.480
And I think that's why Snaps are also just as important, say, on the server, if maybe

14:26.480 --> 14:28.000
not even more important these days.

14:28.000 --> 14:30.920
Yeah, but the IoT comes hand in hand with the server, doesn't it?

14:30.920 --> 14:31.920
And that's the whole point.

14:31.920 --> 14:33.280
That's the whole point of Microsoft doing this.

14:33.280 --> 14:38.080
They're not making money selling these devices for $90 or whatever.

14:38.080 --> 14:43.120
They're making the money on the backend, tying people into Azure and charging them an arm

14:43.120 --> 14:44.120
and a leg for it.

14:44.120 --> 14:45.120
Yeah.

14:45.120 --> 14:48.320
And the whole pipeline is going to be based around Azure.

14:48.320 --> 14:53.840
So if you are a manufacturer of that dishwasher and you want to submit a new firmware to your

14:53.840 --> 14:57.600
devices, well, it's all going through the Azure pipeline where you submit it, getting

14:57.600 --> 15:03.480
it signed, getting it checked, getting it delivered over the CDN, that's all done through

15:03.480 --> 15:04.480
Azure.

15:04.480 --> 15:08.480
That's the benefit is these companies don't have to invent their own distribution mechanism

15:08.480 --> 15:12.400
for firmwares to devices over the internet, which they suck at.

15:12.400 --> 15:16.400
But the flip side is you're going to be paying for that convenience.

15:16.400 --> 15:19.280
And it just really is going to be up to Microsoft to how market competitive they want to make

15:19.280 --> 15:20.280
that price.

15:20.280 --> 15:25.520
You could really see a future here where developers are tightly integrated with GitHub and Microsoft's

15:25.520 --> 15:27.840
product pipeline and Visual Studio Code.

15:27.840 --> 15:32.500
And IoT device manufacturers are tightly integrated all the way to the IoT device end.

15:32.500 --> 15:36.960
From when they develop the code and create the code and publish it on GitHub to when

15:36.960 --> 15:42.160
it ships in that dishwasher, it's Microsoft services from end to end.

15:42.160 --> 15:43.360
Yeah, exactly.

15:43.360 --> 15:47.800
And that is a real competitor to what Canonical are trying to do.

15:47.800 --> 15:52.400
And obviously Microsoft have got a lot more money and resources to make this thing happen.

15:52.400 --> 15:59.280
But it does feel like direct competition to what at least my understanding was Canonical's

15:59.280 --> 16:06.800
kind of long term play was, which is the Internet of Things devices tied into Ubuntu on the

16:06.800 --> 16:13.940
back end on servers that they are supporting, not selling directly like Microsoft are with

16:13.940 --> 16:18.600
Azure, but getting them into the Ubuntu ecosystem and making their money there.

16:18.600 --> 16:23.600
Well, Joe, if I were to channel my inner shuttle worth here for a moment, I think I'd start

16:23.600 --> 16:29.000
this reply by describing the potentially billions of IoT devices that could be shipping in the

16:29.000 --> 16:31.280
next five to 10 to 20 years.

16:31.280 --> 16:33.920
And I would describe the size of that market to you.

16:33.920 --> 16:38.600
And then I would come around with something like, there's plenty of fish to go around

16:38.600 --> 16:41.160
and we'll be serving different customer niches.

16:41.160 --> 16:44.580
There's going to be a lot of companies that don't want to get into a month to month contract

16:44.580 --> 16:46.900
with Microsoft to manage a few devices.

16:46.900 --> 16:48.820
They're going to want to control that stack top to bottom.

16:48.820 --> 16:52.560
And the part they suck the most at shipping software.

16:52.560 --> 16:54.200
That's what they've solved with snaps.

16:54.200 --> 16:55.920
I think that's what my inner shuttle worth would tell you.

16:55.920 --> 17:01.440
Yeah, and I think that is a reasonable point, actually, that the market is big enough.

17:01.440 --> 17:07.040
And you're not necessarily going to get one player completely dominating it.

17:07.040 --> 17:09.960
And so there's probably room for both of them.

17:09.960 --> 17:14.520
And I would imagine Microsoft will be going after a bigger market than Canonical.

17:14.520 --> 17:16.480
But Canonical have got big ambitions, haven't they?

17:16.480 --> 17:22.320
And that's why it kind of came to mind that they are in direct competition here.

17:22.320 --> 17:23.400
But maybe they're not.

17:23.400 --> 17:30.480
Maybe the markets are subtly different enough that there is enough money to go around here

17:30.480 --> 17:31.480
and enough of the market.

17:31.480 --> 17:34.240
Yeah, it feels like there is some competition, some crossover.

17:34.240 --> 17:38.680
I mean, it's worth noting, again, Microsoft's product runs on Linux and obviously Canonical's

17:38.680 --> 17:39.920
solution will be Linux based.

17:39.920 --> 17:43.720
And that's interesting to be competing head to head in that area.

17:43.720 --> 17:48.600
Microsoft has the resources and they have the scale, but Canonical has the flexibility.

17:48.600 --> 17:50.920
That company can turn on a dime.

17:50.920 --> 17:55.880
And it's just something that a company the size of Microsoft is not as capable of doing.

17:55.880 --> 17:59.960
They've been demonstrating a lot of flexibility, I'd say, in the last five to six years and

17:59.960 --> 18:05.200
adapting to the market in a way that is pretty impressive for a company their size.

18:05.200 --> 18:10.920
I've lived here in Washington and have family members and friends that work at Microsoft

18:10.920 --> 18:14.120
and have watched this transition take place.

18:14.120 --> 18:15.760
And I have also made a big transition.

18:15.760 --> 18:19.360
I used to be one of the biggest Microsoft haters out there.

18:19.360 --> 18:21.560
And now I'm sitting here going, damn, look at them.

18:21.560 --> 18:24.840
They're moving pretty quick and they're doing some slick stuff and they're making the right

18:24.840 --> 18:26.400
call on a lot of this.

18:26.400 --> 18:28.120
But you can't beat Canonical.

18:28.120 --> 18:32.760
They've got that size, they've got that flexibility, and they've got that drive and they've got

18:32.760 --> 18:34.080
that motivation.

18:34.080 --> 18:35.400
So I think they're going to be fine.

18:35.400 --> 18:36.600
They'll carve out a good market.

18:36.600 --> 18:39.380
And the reality is they have a good system.

18:39.380 --> 18:44.560
The Ubuntu core system, the SNAP systems, all of that is pretty good with the LTS support.

18:44.560 --> 18:46.280
And then you can also get support contracts from them.

18:46.280 --> 18:47.280
It's a good solution.

18:47.280 --> 18:51.020
It just depends on the size and scale of the manufacturer and probably the cost of device

18:51.020 --> 18:52.020
that they're trying to make.

18:52.020 --> 18:58.080
Well, one thing to watch out for with this Azure Sphere OS is if that starts supporting

18:58.080 --> 19:03.800
SNAPs, then that to me is a red flag about who might just be buying Canonical rather

19:03.800 --> 19:04.960
than the IPO.

19:04.960 --> 19:07.840
That's the canary in the IoT coal mine, is what you're saying?

19:07.840 --> 19:09.680
Yep, that's what I'm saying.

19:09.680 --> 19:10.680
That's not bad.

19:10.680 --> 19:11.680
I like that.

19:11.680 --> 19:12.680
We'll keep track of that.

19:12.680 --> 19:15.160
Well, just to wrap up the show, a story of Node, which actually is still available for

19:15.160 --> 19:20.680
comment by you, the Node.js Foundation and the JS Foundation have announced their intent

19:20.680 --> 19:21.680
to merge.

19:21.680 --> 19:27.760
And they're holding a Q&A session at the Node.js Interactive conference on October 10.

19:27.760 --> 19:33.040
So if you want to get involved and have questions, anyone attending is welcome to ask questions.

19:33.040 --> 19:36.400
And you can also submit them anonymously ahead of time if you'd like.

19:36.400 --> 19:38.440
Yeah, this seems pretty likely to happen to me.

19:38.440 --> 19:42.080
It just seems like a logical step to take, really.

19:42.080 --> 19:44.640
Why not pool your resources together?

19:44.640 --> 19:48.400
And it's good to see that they haven't just announced we're doing this.

19:48.400 --> 19:49.760
This is a new governance structure.

19:49.760 --> 19:51.720
This is a new financial structure.

19:51.720 --> 19:55.400
They want to get some feedback first from the community.

19:55.400 --> 19:57.400
I suppose, first of all, is this a good idea?

19:57.400 --> 20:00.520
I can't see many people being against this as an idea.

20:00.520 --> 20:04.440
But it's more the details, really, I think, where they're looking for community feedback,

20:04.440 --> 20:06.080
just so they can get this merger right.

20:06.080 --> 20:07.880
Yeah, I wonder if anybody could object.

20:07.880 --> 20:12.320
I would love to know, because I don't think I'm connected deeply enough to either one

20:12.320 --> 20:13.320
of these communities.

20:13.320 --> 20:18.120
Let us know your thoughts at linuxactionnews or linuxactionnews.com slash contact.

20:18.120 --> 20:19.240
But I'll tell you what they think.

20:19.240 --> 20:24.740
They say a tighter alignment of communities will expand the scope of the current foundations

20:24.740 --> 20:30.480
and enable greater support for Node.js and a broader range of JavaScript projects.

20:30.480 --> 20:33.840
If you read between the lines, Joe, it seems like the different boards had been flirting

20:33.840 --> 20:37.440
several times already, kind of talking about how could we work more together.

20:37.440 --> 20:39.480
And then boom, merger time.

20:39.480 --> 20:40.480
Happens, Joe.

20:40.480 --> 20:41.480
It happens.

20:41.480 --> 20:46.260
Yeah, it's also worth noting that they talk about an umbrella structure and the two sides

20:46.260 --> 20:51.440
of it still having independence, technically, but just being able to pool the resources

20:51.440 --> 20:52.840
that they need.

20:52.840 --> 20:57.200
So to me, that sounds like quite a sensible approach, if they can keep the technical sides

20:57.200 --> 20:58.800
separate.

20:58.800 --> 21:02.300
Without a question, that's a story that we'll be keeping an eye on and seeing how that develops.

21:02.300 --> 21:06.680
If you'd like to catch this show every single week and see what other stories are developing,

21:06.680 --> 21:11.040
go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

21:11.040 --> 21:14.800
And go to linuxactionnews.com slash contact for ways to get in touch.

21:14.800 --> 21:19.480
We'll be back next Monday with our weekly take on the latest Linux and open source news.

21:19.480 --> 21:21.200
I'm at Chris LAS.

21:21.200 --> 21:22.920
I'm at Joe Rissington.

21:22.920 --> 21:25.680
Thank you for joining us and we'll see you next week.

21:25.680 --> 21:44.000
See you later.

