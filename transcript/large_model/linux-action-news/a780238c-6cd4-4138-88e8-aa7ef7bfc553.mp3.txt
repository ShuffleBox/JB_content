Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 57, recorded on June 10th, 2018.
I'm Chris.
And I'm Joe.
Hello, Joe.
It's good to be connected with you one last time from Austin, Texas.
And we're going to start this week's episode with news that was still reverberating at Texas
Linux Fest this weekend.
It's Microsoft buying GitHub.
Yeah, this was brewing just before we recorded last time, but it became official on the Monday.
And it seems to have sent shockwaves throughout the whole FOSS community, doesn't it?
Shockwaves might actually be putting it mildly.
Even though it's sort of cliche to say it, it really is true.
It was probably the number one conversation starter at Texas Linux Fest is what do you
think of Microsoft buying GitHub?
And then everybody had an opinion.
And you've seen that also reflect online.
And they are pretty varying opinions from people bailing from GitHub to GitLab or something
like it, to people thinking that perhaps it's going to be a good investment long term and
that GitHub was going to get purchased anyway, so it might have well been Microsoft.
And a couple of interesting points were brought up.
A few folks said to me, well, I'm just glad it's not Google, and I'm just glad it's not
Amazon.
But I think for myself right now, I'm sort of in a wait and see period, curious to see
what Nat Friedman does with it, and I could see it going good or bad.
I think ultimately, it's not a good thing.
When Microsoft gets involved with anything, it's not a good thing, is it?
And I think that if I had any code on GitHub, I would be migrating it or at least backing
it up on another service like GitLab.
But I think that not much is going to change, at least in the short term, because they can't
afford the ill will of making huge changes to it right now.
The changes that we're going to see are going to be over probably two, three, four, five
years where these Microsoft features and connections to Azure and stuff are going to be sort of
drip fed into it bit by bit, and then it may become unrecognizable down the line.
I don't think that's fair to say, though, because I don't think it will be unrecognizable.
I think that the core functionality will still remain, and I think that they're just going
to add stuff to it that most people who don't want it will just be able to ignore.
It is hard to say where GitHub would have gone in the future had they remained independent,
which may have been my preference, but Microsoft still would have had substantial influence
over the platform.
If you just look at the raw numbers, Microsoft has almost 5,000 unique committers to different
open source projects on GitHub, 5,000 different employees at Microsoft that are committing
to different projects.
That's a huge number.
Yeah, but that doesn't necessarily mean that they have influence over the platform.
See, I disagree.
I think it does.
I think, and Microsoft points out that they're the most active organization on GitHub.
They're the biggest company on there with two million commits.
I think it's naive to say that the largest creators or the largest providers or whatever
category we're talking about of a service, whoever's the biggest customer to that service
has influence over the platform.
I've also noticed a definite split.
A lot of the developers I've talked to through CoderRadio's email inbox, but also here at
Texas Linux Fest, they're sort of nonchalant, I guess.
They're more wait and see, but a lot of the enthusiasts, people that have enthusiast projects
or are not necessarily full-time developers, they seem to be reacting more negatively.
I think a lot of people who just use this as a tool to do their work, and they may be
already using other Microsoft tools, they're not nearly as concerned.
People that were using it as a place to store a passion project seem to be much more concerned,
and I think maybe those people needed a good reminder about centralization of services
to begin with.
Well, I remember in the predictions episode that we did at the end of last year, you talked
about this split between pragmatists and idealists, and I think that this is a perfect example
of that.
People's reaction does seem to be quite polarized between, meh, whatever, and the sky is falling,
we need to move off to GitLab straight away.
I think that you're right, it is more of the passion projects, the free software people,
but then you have to question, as you said, why were they on there in the first place?
Because it is not a free software platform, there are big parts of it that are proprietary,
and maybe it's a good thing that it's shaken them into realizing that they probably oughtn't
to be there.
I mean, that said, I would have definitely moved my code off there, or at least backed
it up, as I said, so I could see why they've done that, but I think that the bigger, more
pragmatic projects are just not going to do that, are they?
They're just going to see what happens, and it is decentralized enough, it's quite a hassle
to move away from GitHub, but because Git itself is potentially decentralized, you can
migrate relatively easily.
I want to go back to a point you just made, though.
Why were they on there in the first place?
Why are they using Slack?
Why are they using Discord?
I think this is a great time for open source projects and free software to look at the
different services they're using, the centralized services, because it's likely Slack's going
to get bought one day, too, and then are we going to have another round of freakouts?
Do we learn nothing from this lesson?
This is a great moment to stop and reevaluate, and I don't think this is a loss for GitHub.
I don't think these projects that are concerned about this were the right fit to begin with.
They probably should have been on a different self-hosted platform to begin with, so I think
this will balance itself out.
We'll probably stop talking about it in a few months.
Just around then, Nat Friedman will actually take over towards the end of the year, and
then things, I think, will start to get interesting.
But what do you think about this $7.5 billion price tag?
Yeah, isn't that something?
Now that's in stock for Microsoft.
That's Microsoft's stock value of $7.5 billion, but the way these Azure services seem to be
selling, that's probably going to be going in the right direction.
That's a huge number, and I've heard it's many multitudes larger than their actual revenue
and worth.
Well, yeah, if you look at how many premium subscribers they have and stuff, it's just
nowhere near that.
It seems to be massively overvalued.
Is it just because Microsoft have just got all the money in the world that can just afford
it, or have they seen something that the rest of us haven't?
Well, I think a lot of us have seen it.
I just don't think anyone's made a move on it.
Think about where GitHub sits in the workflow, how central that is, and how it sits between
many different services.
It's really a valuable position.
Because they were an independent operator for so long, they're built into so many workflows
from the AUR to people deploying their websites.
It's such a key part of software development for so many different shops, and it's been
so platform agnostic for so long that that made it very valuable, because the developers
could use it as sort of this middle layer.
And I think Microsoft had realized that because they put so much of their stuff on there.
I had a couple of little birdies tell me from Microsoft that they're going to mutiny if
Microsoft screws this up, because so many people now inside Microsoft use it for their
own projects, plus the projects they're contributing to that are open source, that if Microsoft
were to mess it up, it would destroy their workflow internally.
Well, yeah, that's another reason why they aren't going to screw this up, or are very
unlikely to, along with the goodwill factor.
They don't want the ill will from developers all over the world.
There are people, especially in our circles, who have freaked out and moved away, but all
the pragmatists that we talked about, they are probably quite skeptical and keeping one
eye on it and will be ready to jump ship if major changes are made.
So it's not just the people within Microsoft that are probably, you know, half planning
a mutiny.
But it just seems so unlikely that they would do that.
They wouldn't have spent that much money on something that they wanted to fundamentally
change.
I was joking at Texas Linux Fest when people would start the conversation, and sort of
the way I would wrap it up is I'd say, if I were Microsoft, I'd take all this money
that I have and I just set some aside and say, we're just going to let this run just
to prove to all those skeptics that we weren't going to screw it up.
And they'll just do it to make a point.
This could be their way to buy reputation long term into the software development community
and specifically the open source, maybe not free software, communities.
And so they could really just play a long game here of proving everyone wrong.
And that would almost be worth the purchase in itself.
Well, yeah, and it's not likely to lose value, is it?
So they could probably offload it at some point in the future if they had to.
And there'll probably be at least a small amount of revenue coming in, it'll probably
pay for itself.
So yeah, it seems like a relatively small price to pay.
I mean, it's a lot of money, don't get me wrong, but for Microsoft to buy that Goodwill,
potentially not.
But if they do mess it all up, we can all revolt by switching to React OS.
One of the best little projects out there just got even cooler.
Yeah, it's not been long since we talked about React OS and you tried it out and were very
impressed with it.
And they've hit a major milestone now.
It can be built by itself.
So rather than having to use Windows or another Unix-like system to build it, you can do it
from within React OS.
So it's a self-hosting operating system now.
Yeah, and it will create a live CD for you.
It'll mount it.
And they say in their tweet to announce it, it even builds with a USB stack, which just
is so Windows.
It's wonderful.
The thing is, though, this is a milestone that iOS devices haven't even reached yet.
So it's pretty impressive if you think about it in that context.
Well, yeah, and Android.
Can you build that on Android?
I don't think you can.
Can you?
You know, I've made that claim before.
And then we got a bunch of well, actuallys where people had all these different ways
they can pull it off.
So I don't think there's an official way, but people seem to have figured out a way.
But I can't think of a way you could do it with iOS.
Yeah, and look how mature that is as an operating system.
But I think that says more about the control that Apple want to have over it rather than
the technical limitations of it.
So really, what it is, this is all building.
This is one of the many things they're building towards ReactOS 0.49, which will have general
kernel fixes, shell improvements, and really some good bug fixes to the Win32 subsystem,
as well as your favorite, Joe, those little balloon pop-up error messages that they sort
of started with Windows 7, you know, the little down by the.
I just love this project, and it's so cool.
And so this is part of it, is getting ReactOS to a place where it can build itself.
The developers can now start continuing to just develop on ReactOS and actually create
new builds right there.
But we as end users have the benefit of being able to generate those live CDs.
I think this is really neat.
And think about the possibilities for building rescue systems for your friends and family
in the future.
It's going places, Joe.
Well, yeah, if they're lucky, they might even get bought by Microsoft, eh?
Speaking of going places, TrueOS seems to be going into new territory.
And there's a bit of a fork at play here.
We're not quite sure exactly what the situation is.
I'm sure our friends over at BSD Now will update us when they return from BSD Can.
But it appears there's a shift in focus for TrueOS.
Yeah, they say that they're going to focus on a core operating system, but then they
clarify that, no, it's not going to be called CoreOS.
They know there's already something that exists with that name.
But it isn't clear, really.
The communication is a bit muddled.
They talk about it becoming a downstream fork of FreeBSD and much more of a general OS rather
than the desktop OS that we're used to.
And in order to have a desktop-focused version of it, they are creating a new project called
Project Trident.
Right.
So they essentially have two new systems here.
TrueOS is turning into something else.
And the desktop version that was TrueOS is becoming Project Trident.
And Project Trident is going to continue to be sort of a FreeBSD graphical-based Lumina
desktop project led by Chris Moore, producer of Q5SYS from Jupiter Broadcasting.
I believe Chris Moore's brother, as well as another individual.
They're going to continue Trident, which will be a Lumina-based FreeBSD desktop.
And then TrueOS over time, they say, is going to go modular, more core-centric, perfect
for do-it-yourself advanced users that will use OpenRC and LibreSSL.
And it'll have a JSON-based manifest, integrated procedure and package tools, and a bunch of
other things that you can use to reproduce systems for mass deployment.
And it seems to be an effort to, as they actually put it, innovate on FreeBSD and make it more
modern.
Well, that somewhat answers the question as to what value this adds over FreeBSD.
But it was always about being really easy to use and being a sort of hassle-free way
to get into BSD, whereas if it's now going to be potentially more powerful and more configurable,
it's going to be much less easy to use for people, isn't it?
So at that point, surely you would just use FreeBSD.
This is like the tip of the iceberg of some of the questions I have.
Like it's really, there seems to be some sort of fork here.
There's a separation of the teams.
Chris Moore, who was originally involved with the founding of TrueOS, will no longer be
involved with it.
I just have a bunch of questions.
I did reach out to Alan Jude and our friends over there to see if they could give us the
scoop because they were at BSD Can.
But they're traveling back right now from it.
So when he lands, I might get an update from him.
And if I do, I'll try to slip it into this week's Linux Unplugged.
deo.co action.
That's the landing page to get a $100 credit to try out DigitalOcean for 60 days when you
sign up with a new account.
It's a simple and scalable computing platform with industry-leading price to performance,
predictable costs, and optimized types of compute.
You can get my favorite rig for $0.03 an hour, or you can go grab their $15 a month where
you mix and match the components to exactly what you need.
But for me, personally, $0.03 an hour is what I go with.
And then if I need a system with additional storage, I attach that block storage, and
it works fantastic.
DigitalOcean also has data centers all over the world.
They have enterprise-grade SSDs, they have a great API, and they have a fantastic dashboard.
It makes it simple for beginners or experts to deploy systems in minutes.
They have cloud firewalls that block the traffic at the edge devices so it never even touches
your rig, and they have 40 gigabit connections coming in to the hypervisors.
Plus, they have add-on things like monitoring, alerting, that you can check on to see what
the performance of your rig is, 99.9% SLA because that's just how DigitalOcean rolls,
and fantastic documentation, and a huge community.
And they support tons of open source projects.
I really think they should have a page where they just list a few of the projects because
I just met half a dozen this weekend where their infrastructure is provided by DigitalOcean.
So they're a fantastic member of the open source community.
It's a great value with predictable pricing, and when you go to dio.co slash action, you
can get a $100 credit to try it out for free for 60 days when you sign up with a new account.
It's mind-blowing.
As somebody who used to go throw huge servers into racks and pay thousands of dollars for
a T1 connection, I just can't even believe what I'm seeing today, and you can try it
out for a long time with a $100 credit when you go to dio.co slash action.
Okay, so there's been a bit of controversy in the KDE world this week.
The maintainer of Kaywin, Martin Fleursa, has stepped down.
Yeah, bit of a shame, isn't it?
I really respected Martin.
He's obviously a very knowledgeable developer, and I've always liked reading his posts about
the rationale behind some of the decisions they've made from Kaywin, and I've always
appreciated that he's been willing to get in the conversation.
So I think it is a loss, but things do change, and he says, I currently really just follow
up on reviews.
I hardly contribute code anymore.
I think it's time to pass the torch, he writes, and we'll have his resignation letter in the
show notes if you want to read it, linuxactionnews.com slash 57.
But he goes in and says, there's current things that I'm concerned with with the direction
of the Plasma Desktop and the project in general.
And he says, but in the end, I'll still be around, and I'll still be helping out.
So it's nice to see this, and I say, here's the concerns.
Here's what I think of somebody who's been here for a long time.
This is something we need to be talking about.
I'm not rage quitting.
I'll still be around, but good luck.
I'm passing the torch.
Yeah, it's good to see him not just storming off, although he does make some quite strong
points in here, specifically about the VDG, the visual design group, talking about how
they make decisions without consulting the relevant domain experts, and he's just not
happy with how they have been working.
Yeah, and you know, the strongest point I think he tries to make in his resignation
letter is he says they're on the road to KDE 3's problems with configuration nightmares
and unmaintainable code.
He's worried that they're too focused on trying to make everyone happy, and instead of just
trying to focus on like 90% of making everyone happy and keep everything maintainable and
keep it tight and long term, that would be more sustainable, and he thinks that was the
initial direction of the project, but they've deviated from those goals in an effort to
just try to get as much usability baked in as the project could possibly get, is get
as much visual uplift as possible, get as many features to make as many people happy
as possible, and he thinks that's not the right direction.
But did you see the comments from Alessandro Longo about how the idea that the visual design
group is one entity is a bit spurious?
Yeah, I agree, and also I think that a large part of the Plasma Desktop's current success
and the reason why it appeals to me is because a lot of the work the visual design group
has done, and I think it is an important part of the project.
You know, perhaps it's just a changing of the guard, where there's a shift now where
the visual design group has a little more sway, has a little more influence because
of their success, but he may still have valid points that they still have to consult domain
experts and make sure things are done correctly from a technical standpoint.
Both parties are probably in the right in this particular case.
Yeah, that's probably the case.
But one thing that's great about the KDE project is their involvement with the community.
And Plasma Mobile is one of the most exciting aspects of KDE.
It's to me one of the best things that they're working on, but it has suffered a little bit
from onboarding issues and getting people involved with it.
And so now they have decided to try and make that process easier and have launched Find
Your Own Way.
This is actually a pretty good milestone to see the project getting to, where they've
gotten to a point where they can look back at themselves and say, what are the barriers
to people getting involved with our project?
In their post, they talk about streamlining onboarding of new contributors, setting up
three new goals, working with the KDE promo team and all of that.
But the overarching goal here is more contributors to the project, getting more information about
devices, and really just try to get the word out still.
I think it's a great first step.
And if you look at the website, it's so simply laid out.
Do you want to help us with outreach?
No.
Is there anything else I can do?
System development.
Oh, yeah.
Tell me more about it.
And then it's broken down into further categories, and it's a really simple way to get people
to the right place where they need to be on Fabricator.
So I'm hoping that more developers and just contributors generally will be attracted by
this because Plasma Mobile, for me, is one of the great hopes for mobile Linux.
And I really want to see it succeed.
And anything that is going to make that more of a reality, I think it's got to be a good
thing.
And we round out the show this week with a story about Dev1.
They have a brand new release, ASCII 2.0, which I was so excited to try out for this
here show.
I loaded over a MiFi and set it up in a VM while my laptop was on battery just so I could
kick the tires, Joe.
Wow.
That's commitment.
I did not expect Dev1 to get to a 1.0 release, never mind a 2.0.
So color me shocked, quite frankly.
This of course is the fork of Debian that has no system D. There's a little bit of an
asterisk there.
There are some little bits of system D in it to some extent, but it is mostly system
D free Debian.
And it is pretty much just Debian Stretch, except with no system D in it.
Right.
Debian Stretch.
Debian 9.
In other words, the Debian that was released on June 17, 2017, almost exactly a year ago
as we record this episode.
And that's really kind of where the fun begins with this distribution.
I really encourage you to give it a go.
Go ahead and give it a download.
I love my first experiences, you know, when you're in the live environment.
And it's like, OK, this isn't too bad of an XFC experience.
I kind of enjoy this.
So I go and fire up the graphical, quote unquote, installer.
And I'm immediately hit with a question.
Would you like to use SU or sudo?
Note, this does not affect how you administer your system.
And that's all I get.
I don't know if I would want to use sudo or SU.
So thinking I like root all the time, I hit SU naturally.
Then it prompts me for the root password, which is accessible in a text document that
you double click on the desktop that opens it up in a terminal text editor.
So you can read the username and password once you read the manual.
Now it's a typical tour password, so not too surprising there.
So once I type in my password, it starts the installation.
And then I check the boxes of things I want, like do I want a home partition?
Do I want to use encryption, stuff like that.
And then it says, OK, choose your partitioner.
Would you like to use gparted?
How about fdisk?
And you then proceed to set up your disks.
And it's just a great time.
I encourage any of you to give it a go.
For extra bonus points, try setting it up on a high DPI monitor.
That's extra fun.
Do I detect a hint of sarcasm in your voice here?
It was enjoyable from the standpoint of like when I went to the Computer History Museum
and I got to see a whole bunch of old systems and see them operating.
And it was enjoyable from that standpoint.
It was comical from a standpoint of somebody who wants to sit down and get their machine
going and get working immediately.
I'm clearly not their demographic, but I could see somebody who wouldn't mind going through
that.
It was sort of fun in a way.
Well, I had a go at that live image that has the installer in it, and it just didn't work.
It went through it all and then just wouldn't boot from that partition.
So then I downloaded the installer image, and that was just Debian, as far as I'm concerned,
a rebranded Debian with no system day, of course.
And it's got XFC by default, which I love.
So I could actually use it once you get the installer image rather than the live one.
I installed it today on hardware.
I could easily continue setting that up and tweak it just the way I want it, and I'd be
happy to use it.
I wouldn't even notice the difference really between that and a regular Debian.
Of course, there's no GNOME available for it.
There's various other desktops, including Mate, which I tried out, and that was all
fine.
But GNOME has got the dependency on system day, hasn't it?
So yeah, I don't think this is aimed at the mainstream Linux audience, is it?
No, no.
But the name is great, ASCII.
That's fun.
And there was one thing I did not get a chance to play with before the show is they have
options for, quote, console productivity with hundreds of CLI and text utilities.
I would love to know more about that.
I did not get a chance to play with that.
And the other thing that I thought was just sort of neat is since they're ripping out
system D, you get to pick what init system you want to use.
So you get to pick different init systems with dev1 and version 2.0 ASCII.
I know they're trying to make a practical old style Unix admins distro, but it's turning
out to be like a fun experiment in how like an alternative reality version of Linux could
have gone in a parallel universe.
Well, it seems to have an audience.
Otherwise it wouldn't have got to 2.0, would it?
I expected it to wither and die.
And it seems to be going relatively strong.
OK, it's a little bit behind or a fair bit behind the Debian release schedule.
But there must be people using this, man.
It seems it's found a bit of a home with some embedded devices because I count five derivatives
of the project now and a couple of them are for like microservice, small like network
machines.
And they've got official images for stuff like the pie as well.
So it's being used by more people than you would imagine, I think.
Well, I hope they enjoy themselves.
More power to them.
I had some good fun with it.
I just want to say thank you to everybody who came out and said hi at Texas Linux Fest.
Lots and lots of fans of the show there, Joe.
Everybody talked about Linux Action News.
So that was super cool.
We got we had many great meetups, actually, who had several nights of great meetups.
It was a ton of fun.
And my journey now continues on.
I'm heading up to Keller, Texas, to meet up with Linux Academy at their office.
So you can continue to follow my journey at jupyterbroadcasting.com slash Rover.
And this is my last show from Austin, Texas.
Yeah, and I had a great time at Foss Talk Live last night.
That's why I sound a little bit hungover today, I'm afraid.
No, no.
Yeah, I know, right.
And met a ton of listeners there of, you know, the various shows that I do.
So yeah, that was really cool.
And check out fostalk.com for the various live shows that were recorded there.
They'll eventually get posted there.
And yeah, if you didn't come this time, do come next year because it was a real blast.
And you can get every new episode of the show by going to linuxactionnews.com slash subscribe.
And if you want to get in contact, linuxactionnews.com slash contact.
And support the entire network and everything we're doing at our Patreon page, patreon.com
slash jupytersignal.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Rissington.
Thank you for joining us and we'll see you all next week.
See you later.
