WEBVTT

00:00.000 --> 00:16.180
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.180 --> 00:20.640
This is episode 55, recorded on May 27th, 2018.

00:20.640 --> 00:21.640
I'm Chris.

00:21.640 --> 00:22.640
And I'm Joe.

00:22.640 --> 00:23.640
Hello, Joe.

00:23.640 --> 00:27.760
We have so many things to get into, including some game changing technologies.

00:27.760 --> 00:29.320
When's the last time you heard me say that?

00:29.320 --> 00:32.280
Well, we're going to start this week with some good old releases.

00:32.280 --> 00:37.760
Yeah, OpenSUSE Leap 15 is being released, hot on the heels of version 42.3.

00:37.760 --> 00:39.720
What?

00:39.720 --> 00:41.840
That naming system doesn't make any sense.

00:41.840 --> 00:47.060
Yeah, well, release numbers aside, this is the next major release of OpenSUSE Leap.

00:47.060 --> 00:53.120
This is version 15, as Joe just said, and it's based on the enterprise grade SLES.

00:53.120 --> 00:58.560
And it brings in that new partitioner, and it also moves to firewall D, as well as introduces

00:58.560 --> 01:03.040
a new system role, a classic server or a transactional server role.

01:03.040 --> 01:04.040
Here's what's really neat.

01:04.040 --> 01:08.000
When you go transactional server, you go to a read only root file system.

01:08.000 --> 01:11.320
And when you're booting Leap up, say maybe you're troubleshooting, there is an option

01:11.320 --> 01:13.480
now to boot Leap in read only mode.

01:13.480 --> 01:16.460
Yeah, I was only kind of joking about the numbers there.

01:16.460 --> 01:20.840
It's the reason that it's changed to 15 is to sync it up with the enterprise version

01:20.840 --> 01:25.800
SLES, which is going to be coming out in a few months, and that's going to be 15.

01:25.800 --> 01:30.440
And what jumped out at me as being the most significant change is that you're going to

01:30.440 --> 01:37.360
be able to upgrade from OpenSUSE 15 to SUSE Linux Enterprise 15 if you want to start paying

01:37.360 --> 01:38.360
them.

01:38.360 --> 01:43.840
So it's kind of like giving you the first hit free and getting you sucked in with OpenSUSE,

01:43.840 --> 01:48.960
and then now it's going to be trivial to upgrade to the enterprise version, which I think is

01:48.960 --> 01:51.640
a pretty good strategy from them.

01:51.640 --> 01:55.600
I think this might be a better take on the CentOS Red Hat Enterprise model.

01:55.600 --> 02:01.260
So I've been in situations myself where I went in for a client, and they had a bunch

02:01.260 --> 02:05.580
of CentOS servers they installed, and over time they ended up becoming very valuable

02:05.580 --> 02:06.640
to the business.

02:06.640 --> 02:10.920
And now the conversation starts, how do we sneaky upgrade these things to RHEL and then

02:10.920 --> 02:12.100
get support for them?

02:12.100 --> 02:17.260
And you start looking at swapping out repositories, and it is possible, but it's dodgy.

02:17.260 --> 02:22.040
And now you have from SUSE an official path, hey, you want to try out Leap as a really

02:22.040 --> 02:27.040
powerful SLE based workstation, and now you've decided that either on your server or your

02:27.040 --> 02:29.200
workstation that it's worth paying for.

02:29.200 --> 02:35.160
Here is an official upgrade path to the enterprise supported, we'll give you a support contract

02:35.160 --> 02:37.060
version of SUSE.

02:37.060 --> 02:39.360
That's a good strategy.

02:39.360 --> 02:41.160
Embrace that behavior of your users.

02:41.160 --> 02:45.340
Yeah, and I like the fact that there's only one installation image, and you can just pick

02:45.340 --> 02:49.880
whether you want a desktop version or the server version or the new transactional update

02:49.880 --> 02:50.880
server.

02:50.880 --> 02:55.920
I gave Leap 15 a kick of the old tires for this episode of Linux Action News, and I was

02:55.920 --> 02:59.400
both impressed and a little surprised by a couple of things.

02:59.400 --> 03:03.180
I'll start with the things that I was a little lukewarm on.

03:03.180 --> 03:08.040
The installer, while competent, feels to me of a bygone era.

03:08.040 --> 03:10.600
It probes my FireWire devices.

03:10.600 --> 03:14.480
Before I go anywhere in the installer, I have to configure my network interface.

03:14.480 --> 03:18.980
I feel like the installer is making me do tasks that the kernel's already figured out

03:18.980 --> 03:20.760
and done the work for.

03:20.760 --> 03:25.000
Yet we're still giving me a UI to manage it.

03:25.000 --> 03:26.880
It's obviously detected my network interface.

03:26.880 --> 03:29.520
It obviously is detecting my FireWire and USB ports.

03:29.520 --> 03:32.140
Why do we need to set them all up and probe them?

03:32.140 --> 03:33.360
Try to get an IP address.

03:33.360 --> 03:37.640
If the IP address isn't assigned by a DHCP server, then prompt the user to configure

03:37.640 --> 03:39.080
the network interface.

03:39.080 --> 03:40.880
But instead it starts with that.

03:40.880 --> 03:44.900
When I open up the update manager, the first thing I get is an error message about my missing

03:44.900 --> 03:47.720
CD ISO image or media.

03:47.720 --> 03:48.720
It's awkward.

03:48.720 --> 03:50.600
It's Linux of the past.

03:50.600 --> 03:54.220
But then there's a bunch of forward-thinking things that are built in, like the way it

03:54.220 --> 03:55.640
manages your disk.

03:55.640 --> 03:59.660
It uses XFS and ButterFS pretty intelligently, and it's mixed throughout.

03:59.660 --> 04:06.000
And you will not find a more polished from boot to desktop experience.

04:06.000 --> 04:07.800
Nobody nails it like SUSE.

04:07.800 --> 04:12.560
Before the grub menu selection even comes up, they've beat everyone else at the game.

04:12.560 --> 04:16.180
And then the little loading bar that comes up for loading your kernel and the entire

04:16.180 --> 04:19.160
boot process is so, so slick.

04:19.160 --> 04:22.420
And there's little things they've thought of, little edge cases that they've covered

04:22.420 --> 04:26.280
in Yast and other places that really kind of make you smile.

04:26.280 --> 04:28.920
So it's a kind of a mixed bag for me when it comes to SUSE.

04:28.920 --> 04:34.480
I feel the legacy of a Linux distribution that's been around since before Xorg was

04:34.480 --> 04:37.880
automatically configured and before network cards were automatically configured.

04:37.880 --> 04:39.480
I feel that legacy.

04:39.480 --> 04:43.880
But I also can see a future-looking distribution that's thought of things that other distributions

04:43.880 --> 04:45.360
haven't implemented yet.

04:45.360 --> 04:49.960
So with Leap 15, I'm left kind of in this sort of awkward position, but I could definitely

04:49.960 --> 04:54.320
see it working as a great workstation for a lot of SUSE users and for people that want

04:54.320 --> 04:57.160
something they can install once and keep using for years.

04:57.160 --> 05:02.240
Well, one thing that we will almost certainly be using in the future is LXQt.

05:02.240 --> 05:05.780
And this week LXQt 0.13 was released.

05:05.780 --> 05:10.040
And for me, this is the release that makes it absolutely usable.

05:10.040 --> 05:14.000
It was kind of getting there before, but there were a few little things that annoyed me about

05:14.000 --> 05:16.360
it, but they seem to have all been fixed.

05:16.360 --> 05:20.800
And now I can just add it to the list of desktops that I would be happy to use.

05:20.800 --> 05:27.240
Yeah, the other thing that's great about LXQt 0.13.0 is it's now ready for Qt 5.11, which

05:27.240 --> 05:30.020
is a modern version of the Qt toolkit.

05:30.020 --> 05:33.340
And something else they've done that's going to make it easy for distribution maintainers

05:33.340 --> 05:37.840
to sort of add their own polish is they've moved some of the default configs to user

05:37.840 --> 05:43.040
share LXQt, and now distributions can override default settings by putting their configurations

05:43.040 --> 05:45.200
in slash XE slash LXQt.

05:45.200 --> 05:49.320
It seems like a small change, but that's the little seed that gets planted for distributions

05:49.320 --> 05:52.080
to build a great desktop around LXQt.

05:52.080 --> 05:57.040
Well, one of those distributions is Lubuntu, and they are going to be using this by default

05:57.040 --> 05:58.920
in 18.10.

05:58.920 --> 06:03.000
And the daily image that I tried today was working absolutely fine.

06:03.000 --> 06:05.200
I was really surprised by that.

06:05.200 --> 06:09.040
It's so early on in the cycle, but it already feels ready to me.

06:09.040 --> 06:14.180
And I would highly recommend that you check it out, even if it's only live, because this

06:14.180 --> 06:20.100
is potentially going to be a great alternative to Plasma in the Qt world.

06:20.100 --> 06:25.880
And if you want just a very simple workstation desktop environment that's a classic paradigm,

06:25.880 --> 06:28.680
shall we say, then definitely check it out.

06:28.680 --> 06:32.560
I'm more and more interested in minimal desktop setups these days, not necessarily for my

06:32.560 --> 06:37.560
main workstation, but for some of my work systems that just run a couple of applications

06:37.560 --> 06:38.840
24-7.

06:38.840 --> 06:42.960
It feels like a minimal desktop environment that's based on some modern toolkit technology

06:42.960 --> 06:44.640
is the way to go.

06:44.640 --> 06:51.000
But that all said, I am not 100% yet sold on LXQt.

06:51.000 --> 06:52.080
I think it's a great project.

06:52.080 --> 06:54.960
I think it's remarkable the progress they've made.

06:54.960 --> 06:59.920
But having loaded Plasma Desktop, like the full-fledged Plasma Desktop on really old

06:59.920 --> 07:07.320
hardware that really has no right to perform at all under modern desktop Linux, full Plasma

07:07.320 --> 07:09.160
Desktop did fine.

07:09.160 --> 07:12.960
And I'm going to throw in behind what Jonathan Riddle said in his interview with you in the

07:12.960 --> 07:15.040
recent Late Night Linux Extra.

07:15.040 --> 07:17.960
I think it's surprisingly low resources.

07:17.960 --> 07:23.260
And I think it is a myth from years gone by that the Plasma Desktop is bloated.

07:23.260 --> 07:28.380
And I would actually challenge people to load the Plasma Desktop on old hardware and sit

07:28.380 --> 07:32.000
back and watch how it gracefully degrades itself to a state that you won't even notice

07:32.000 --> 07:33.000
it's degraded.

07:33.000 --> 07:34.600
It still seems like you're getting great features.

07:34.600 --> 07:35.800
It's a modern desktop.

07:35.800 --> 07:39.120
But yet, the CPU and memory usage is surprisingly low.

07:39.120 --> 07:40.560
Well, yeah, that is true.

07:40.560 --> 07:42.680
But competition is always a good thing, isn't it?

07:42.680 --> 07:48.360
And hopefully, if LXQt gains some traction, it will drive Plasma to be even better than

07:48.360 --> 07:49.360
it is already.

07:49.360 --> 07:50.360
Yeah.

07:50.360 --> 07:53.320
And like I said, for some systems, like my studio production systems, I want my desktop

07:53.320 --> 07:55.520
environment doing as little as possible.

07:55.520 --> 07:58.240
But I still want it to be modern and have decent features.

07:58.240 --> 08:02.680
And I think LXQt, more than any other project right now, could be hitting that sweet spot.

08:02.680 --> 08:07.840
Well, I don't know about you, but my init system is missing one crucial feature.

08:07.840 --> 08:10.560
And that is the ability to run containerized services.

08:10.560 --> 08:11.920
Well, good news, Joe.

08:11.920 --> 08:13.920
And this might be the big news of the week.

08:13.920 --> 08:19.520
A new functionality is coming to systemd, as well as a new utility, Portable CTL.

08:19.520 --> 08:24.280
And portable services are going to be an incremental improvement, as Lenart puts it, over traditional

08:24.280 --> 08:29.080
system services, making two new facets of container management actually possible that

08:29.080 --> 08:30.880
you didn't know you needed until you heard it.

08:30.880 --> 08:36.520
Number one, the bundling of applications, i.e. packaging up multiple services, their

08:36.520 --> 08:40.800
binaries and all of their dependencies into a single image, and then running them directly.

08:40.800 --> 08:42.780
Now, this isn't a Docker container.

08:42.780 --> 08:45.080
We're talking about system services here.

08:45.080 --> 08:46.840
It'll have stricter default policies.

08:46.840 --> 08:48.200
This is number two.

08:48.200 --> 08:49.640
And it will be sandboxed.

08:49.640 --> 08:54.920
The primary tool for interfacing with portable services will be the new Portable CTL program.

08:54.920 --> 08:58.220
It's currently shipped in user lib systemd portable CTL.

08:58.220 --> 08:59.480
It's not in your path.

08:59.480 --> 09:03.360
If you have current version of systemd, it's not yet considered officially part of the

09:03.360 --> 09:04.360
systemd interfaces.

09:04.360 --> 09:05.360
It is a preview.

09:05.360 --> 09:09.520
Now, don't get too concerned, because portable services are not actually bringing anything

09:09.520 --> 09:11.160
inherently new to the table.

09:11.160 --> 09:16.140
All they're doing is really putting together a set of known concepts in a nicer way that

09:16.140 --> 09:18.840
addresses specific user cases.

09:18.840 --> 09:23.720
So what technically is a portable service, you're going to be hearing more about this.

09:23.720 --> 09:30.160
And it's ultimately just an OS tree inside of a directory tree inside of a raw disk image

09:30.160 --> 09:32.600
containing a Linux file system.

09:32.600 --> 09:33.600
That's it.

09:33.600 --> 09:39.080
Now, the tree is called an image, and it can be, quote, attached or detached from a system.

09:39.080 --> 09:43.440
When it is attached, the specific systemd units from the image are made available on

09:43.440 --> 09:44.440
the host system.

09:44.440 --> 09:48.720
Then it pretty much just behaves exactly like a locally installed system service.

09:48.720 --> 09:54.000
When it is detached, these units are then removed from the host, and they leave no artifacts

09:54.000 --> 09:59.200
around other than like logs and run commands and all your traditional metrics.

09:59.200 --> 10:03.920
Now that image, that OS tree image, it can really be created with any standard Linux

10:03.920 --> 10:04.920
tool.

10:04.920 --> 10:06.060
There's nothing proprietary.

10:06.060 --> 10:09.640
You just need a little image with some metadata, and you're done.

10:09.640 --> 10:14.680
The portable services concept ultimately will not provide a fully isolated environment like

10:14.680 --> 10:17.640
a VM or a potential container does.

10:17.640 --> 10:22.840
Instead, from the beginning, they're more like regular system services that can be controlled

10:22.840 --> 10:27.800
with the same tools and are exposed in the same way that all the infrastructure is.

10:27.800 --> 10:31.120
So that's great, because that means they can be used with the same management utilities

10:31.120 --> 10:33.680
that already exist, which is huge for enterprise.

10:33.680 --> 10:38.200
The main difference is that they use a different root directory than the rest of the system.

10:38.200 --> 10:42.920
So the intention is not to run code in a different isolated world from the host, like a container

10:42.920 --> 10:48.200
or a VM would, but to run in the same world, in the same environment as the rest of the

10:48.200 --> 10:53.620
system, but with simply stricter access controls on what the service can see and do.

10:53.620 --> 10:58.840
And lastly, really, the big point of differentiation between a container and a portable service

10:58.840 --> 11:00.320
is they're just regular services.

11:00.320 --> 11:04.640
They will not be running as PID 1 like a Docker container does, but they're just a normal

11:04.640 --> 11:06.120
process on your system.

11:06.120 --> 11:09.840
Well, I've seen a lot of criticism and debate about this.

11:09.840 --> 11:12.040
Feature creep is something that keeps coming up.

11:12.040 --> 11:13.600
A lot of people keep saying that.

11:13.600 --> 11:19.360
Don't you think that this is kind of a bit beyond what an init system should be doing?

11:19.360 --> 11:25.840
And SystemD is growing beyond just an init system and taking over too much of the Linux

11:25.840 --> 11:27.160
stack here.

11:27.160 --> 11:32.120
I've heard people joking about SystemD slash Linux instead of GNU slash Linux.

11:32.120 --> 11:35.920
And this kind of feels more towards that to me.

11:35.920 --> 11:38.200
Yeah, that could be an argument that could be made.

11:38.200 --> 11:42.280
I would say, though, this is getting really back to its core functionality.

11:42.280 --> 11:45.120
This is really about portable inits.

11:45.120 --> 11:49.440
The only thing this is really adding is the ability to have init scripts that are contained

11:49.440 --> 11:53.200
within an image that you can attach and detach with a SystemD command.

11:53.200 --> 11:54.860
That's what's happening here.

11:54.860 --> 11:57.320
It's like when you launch a snap, it's mounting the file system.

11:57.320 --> 11:58.320
It runs the application.

11:58.320 --> 11:59.880
When you're done, it goes away.

11:59.880 --> 12:04.880
When you attach this portable service, those system files, those SystemD service files,

12:04.880 --> 12:07.120
they just become available to your SystemD installation.

12:07.120 --> 12:09.440
And when you detach it, they go away.

12:09.440 --> 12:13.600
It's just now instead of having to have everything in one directory, you can attach these images.

12:13.600 --> 12:15.520
So it's kind of more back to its core duty.

12:15.520 --> 12:16.880
I don't know, man.

12:16.880 --> 12:20.000
First he came for my audio stack and I said nothing.

12:20.000 --> 12:21.560
And then he came for my init.

12:21.560 --> 12:23.880
And now he's just coming for even more.

12:23.880 --> 12:24.880
It just...

12:24.880 --> 12:27.400
Hey, you know, actually, PulseAudio is pretty good these days.

12:27.400 --> 12:32.600
Yeah, to be fair, Pulse has improved dramatically since it was prematurely introduced into most

12:32.600 --> 12:36.680
distros.

12:36.680 --> 12:38.600
LinuxAcademy.com.

12:38.600 --> 12:43.560
Go there to support the Linux Action News program and sign up for a free seven-day trial

12:43.560 --> 12:46.700
of a platform that is built to learn more about Linux.

12:46.700 --> 12:51.080
And not just give you the hard data, but to also help you develop skills and encourage

12:51.080 --> 12:52.400
critical thinking.

12:52.400 --> 12:57.360
That's why they have hands-on, self-paced, in-depth courses that spin up cloud servers

12:57.360 --> 12:58.600
as you need them.

12:58.600 --> 13:03.200
Scenario-based labs give you experience on real servers, and they have full-time instructors

13:03.200 --> 13:05.200
that can help you whenever you get stuck.

13:05.200 --> 13:09.640
I'm packing after this show, and I'm heading down to Texas.

13:09.640 --> 13:10.640
Number one on my list...

13:10.640 --> 13:14.960
Well, it's Texas Linux Fest now, but number two on my list is hanging out.

13:14.960 --> 13:18.440
Maybe number 1.2, and it's in there, is going to Linux Academy.

13:18.440 --> 13:24.000
I'm very, very excited to stop by Linux Academy's home base and shake some hands, meet some

13:24.000 --> 13:28.540
folks and install some Linux, because this is a company that truly cares about Linux.

13:28.540 --> 13:31.140
That's why I'm making the trip in the first place.

13:31.140 --> 13:32.300
And you can see it throughout.

13:32.300 --> 13:35.600
That's why they're paying for full-time human beings to answer your questions.

13:35.600 --> 13:39.720
That's why they're currently and constantly building new stuff and updating their old

13:39.720 --> 13:43.320
content, always making your subscription more and more valuable.

13:43.320 --> 13:47.880
One of the things I love is that they've created a flashcard system that's forkable by the

13:47.880 --> 13:48.880
community.

13:48.880 --> 13:52.240
They can make flashcards that are better and better and better within the community, and

13:52.240 --> 13:53.500
they share all of it.

13:53.500 --> 13:57.360
It's such a cool system, and it's full of Jupyter Broadcasting members, so go check

13:57.360 --> 13:58.360
it out.

13:58.360 --> 13:59.360
LinuxAcademy.com.

13:59.360 --> 14:18.240
It's been a pretty bad week for Essential.

14:18.240 --> 14:21.780
That's the company that was founded by Andy Rubin, who, of course, was one of the co-founders

14:21.780 --> 14:23.620
of Android.

14:23.620 --> 14:26.280
They put out one phone last year.

14:26.280 --> 14:28.880
It didn't do excellently.

14:28.880 --> 14:33.960
There were promises of other devices, like a home assistant and add-ons for the phone,

14:33.960 --> 14:36.760
clip-on cameras, that sort of thing.

14:36.760 --> 14:42.620
And now it looks like the next phone that they were going to bring out has been canceled,

14:42.620 --> 14:46.080
and maybe the company's going to go up for sale.

14:46.080 --> 14:50.800
And obviously, they're putting on a brave face and trying to say that everything's fine.

14:50.800 --> 14:51.800
Don't worry.

14:51.800 --> 14:54.120
But it doesn't look good for them, does it?

14:54.120 --> 14:55.120
No, it really doesn't.

14:55.120 --> 14:57.640
In fact, two different media outlets are reporting this.

14:57.640 --> 15:02.000
Essential is kind of denying with a non-denial.

15:02.000 --> 15:06.640
But Bloomberg, the one we have linked in the show notes, linuxactionnews.com 55, says that

15:06.640 --> 15:11.400
current discussions are focused on a sale of the entire company, including its patent

15:11.400 --> 15:17.680
portfolio, hardware products, like the original smartphone and the upcoming smartphone device,

15:17.680 --> 15:21.800
and the camera attachment for the phone that had been teased since the first phone.

15:21.800 --> 15:23.240
All of that to be sold.

15:23.240 --> 15:28.400
You have to ask the question, what does this mean for startups in the Android world?

15:28.400 --> 15:29.400
Have they just done it wrong?

15:29.400 --> 15:33.720
I mean, you look at something like OnePlus, and they are going from strength to strength.

15:33.720 --> 15:38.800
They've recently put out their OnePlus 6, and that seems to be getting really good reviews

15:38.800 --> 15:40.880
and everything.

15:40.880 --> 15:45.340
Did he just start out with too much hype in the first place with Essential?

15:45.340 --> 15:48.240
Is that what has caused this problem?

15:48.240 --> 15:50.800
Yeah, I think that is definitely true.

15:50.800 --> 15:53.880
I reserve judgment still on the OnePlus.

15:53.880 --> 15:58.120
I would love to get some real numbers on how they're doing as a company.

15:58.120 --> 16:03.120
And it seems like everybody, like yourself, always says the OnePlus is such a great product.

16:03.120 --> 16:06.800
And then I'm in several Telegram groups, and I'll hear people talk about how, oh, yeah,

16:06.800 --> 16:10.480
the camera never works, or this has always been a problem with mine.

16:10.480 --> 16:14.540
Or it seems like there's a lot of little quality control issues that are never surfaced in

16:14.540 --> 16:15.540
these reviews.

16:15.540 --> 16:19.000
But when you own a OnePlus for more than a year, little things seem to creep up.

16:19.000 --> 16:20.440
And I've just heard a lot of reports of that.

16:20.440 --> 16:23.400
Her own one and myself could be completely wrong, but I've definitely heard a lot of

16:23.400 --> 16:24.400
that.

16:24.400 --> 16:26.960
And when I look at how the Essential phone did it, I can't think of anybody else doing

16:26.960 --> 16:27.960
it right.

16:27.960 --> 16:32.800
We have this love letter over on xtadevelopers.com to the Essential, and they talk about some

16:32.800 --> 16:34.840
of the things Essential got right.

16:34.840 --> 16:37.560
And it looks like they nailed it.

16:37.560 --> 16:39.440
A, be updating, yes.

16:39.440 --> 16:41.520
Full trouble support, yes.

16:41.520 --> 16:45.240
Direct unlock sales from Essential or Amazon, boom, right when you buy it.

16:45.240 --> 16:47.840
No obnoxious branding on the device.

16:47.840 --> 16:52.200
And you can even get early builds of the OS before they've shipped them, if you want to

16:52.200 --> 16:54.640
run them, directly from Essential.

16:54.640 --> 16:57.960
How more can you nail it for a high-end Android phone for the enthusiast?

16:57.960 --> 17:00.900
Yeah, it's kind of like the old Nexus phones, isn't it?

17:00.900 --> 17:05.560
It's pretty much stock Android, very developer-friendly.

17:05.560 --> 17:10.560
You'd think that they would have sold just hundreds of thousands, millions of these,

17:10.560 --> 17:12.760
but they just haven't sold those numbers.

17:12.760 --> 17:17.520
And don't forget that this was the first phone that shipped with the notch, which now you're

17:17.520 --> 17:21.200
going to struggle to buy a high-end phone without a notch this year.

17:21.200 --> 17:22.200
Right.

17:22.200 --> 17:26.320
And honestly, I wouldn't be surprised if Apple or Samsung started shipping one of their flagship

17:26.320 --> 17:30.500
phones with ceramic very soon, and the Essential beat them to it by years.

17:30.500 --> 17:32.600
If you recall, it's made out of ceramic and titanium.

17:32.600 --> 17:36.040
I mean, the thing is designed beautifully.

17:36.040 --> 17:41.760
It's got Andy Rubin behind it, and yet it appears they may have only sold 20,000 devices.

17:41.760 --> 17:45.120
Yeah, I would have thought they would have sold a lot more than that, but I suppose it

17:45.120 --> 17:50.800
was quite expensive when it came out, although the price did drop after a few months significantly.

17:50.800 --> 17:54.180
And so again, I thought they would have sold more then, but maybe people just don't really

17:54.180 --> 17:57.520
want to take a chance on the first generation of these things.

17:57.520 --> 18:01.500
So we'll definitely have to keep an eye on this one, I think, because I think over the

18:01.500 --> 18:06.360
next week or two, we're going to see a lot more details coming out about this and whether

18:06.360 --> 18:09.240
they're actually going to be able to sell the company.

18:09.240 --> 18:11.400
The next few weeks will be the most revealing.

18:11.400 --> 18:13.120
What happens to Essential?

18:13.120 --> 18:18.240
And I think this is a good moment to just ask, is there much of an enthusiast market?

18:18.240 --> 18:21.680
Because low cost devices with great distribution are selling.

18:21.680 --> 18:24.520
Yeah, those low end phones do seem to sell in pretty well.

18:24.520 --> 18:29.120
But if a vast are to be believed, then some of them are being shipped with malware pre

18:29.120 --> 18:35.520
installed on them, which is pretty terrible, including ZTE phones.

18:35.520 --> 18:42.120
And as we know, ZTE are not in great shape at the moment, thanks to the US government.

18:42.120 --> 18:44.560
Yeah, also Arcos and my phone.

18:44.560 --> 18:47.160
And this doesn't surprise me at all.

18:47.160 --> 18:48.320
I wish it did.

18:48.320 --> 18:49.360
We've seen this a lot.

18:49.360 --> 18:51.440
And it almost always goes down like this.

18:51.440 --> 18:53.280
It's a two part app.

18:53.280 --> 18:57.520
First of all, it consists of just the dropper part, just this small part that just looks

18:57.520 --> 18:58.520
normal.

18:58.520 --> 18:59.520
There's nothing malicious about it.

18:59.520 --> 19:03.840
It goes out to the internet, it checks on some HTTP servers, maybe, but that's it.

19:03.840 --> 19:04.880
No big deal.

19:04.880 --> 19:06.920
So it passes automated scans.

19:06.920 --> 19:10.900
And then once the system's active, and the smart ones, they wait a little while.

19:10.900 --> 19:15.880
But once the system's active by the end user, it launches in the background, and it downloads

19:15.880 --> 19:16.920
the payload.

19:16.920 --> 19:20.320
And the payloads all kinds of fun things, perhaps something that exploits the latest

19:20.320 --> 19:24.400
flaw in Android, which the latest flaw could be something that's three years old.

19:24.400 --> 19:28.960
Or perhaps it's something that downloads a crypto miner, and it tries to burn through

19:28.960 --> 19:31.120
your battery life to mine Monero.

19:31.120 --> 19:33.880
It's a range of functionality that these things do.

19:33.880 --> 19:37.560
And they often are almost undetectable by the user, they might not be in the launcher.

19:37.560 --> 19:40.600
And the only way you could even see if they're installed is if you go into the system settings,

19:40.600 --> 19:43.240
and you actually look at the applications through that view.

19:43.240 --> 19:47.080
And a lot of times on the system, there's nothing really left behind that seems too

19:47.080 --> 19:51.600
obvious because they'll name them something after like a game asset file, or an image

19:51.600 --> 19:52.600
file.

19:52.600 --> 19:55.240
So you can't really tell even by browsing your file system.

19:55.240 --> 19:59.720
From time to time, they'll leave little XML manifest files around that contain information

19:59.720 --> 20:01.840
about what URL to download from.

20:01.840 --> 20:07.240
And in the case of the malware that was shipping on the ZTE, Arcos, and my phones, the author

20:07.240 --> 20:14.520
had actually hard coded the URL to get the payload, which is like the laziest, most basic

20:14.520 --> 20:16.540
way to do this kind of thing.

20:16.540 --> 20:20.520
But Avast found that, and they were able to build some metrics around that.

20:20.520 --> 20:23.900
And then from that, they were able to find it on a bunch of these phones.

20:23.900 --> 20:27.960
What it really comes down to is just a lack of quality control from these companies because

20:27.960 --> 20:32.800
they pump them out so cheaply, the margins are so small, that they just don't have time

20:32.800 --> 20:39.640
to check all the code that they're getting from third parties, which you do get, you

20:39.640 --> 20:43.080
would hope at least, with the higher end flagship phones.

20:43.080 --> 20:45.480
And it's not really surprising at this low end.

20:45.480 --> 20:51.140
You just kind of wish that the phone industry would have learned the lessons of the PC industry

20:51.140 --> 20:54.960
because we've seen this same thing happen there with Windows devices that are racing

20:54.960 --> 20:56.720
to the bottom for price.

20:56.720 --> 21:01.900
Even recently, Lenovo had the Superfish exploit that was shipped on thousands of computers

21:01.900 --> 21:03.640
that essentially had malware built in.

21:03.640 --> 21:08.600
This is a continuing problem that the industry knew about, but yet continues to replicate

21:08.600 --> 21:12.360
those mistakes because, I suppose, the economics of the industry.

21:12.360 --> 21:16.560
It does remind us all, though, that if you can, if you're technically capable of, it

21:16.560 --> 21:20.520
might just be best to replace those images that these devices come with with something

21:20.520 --> 21:21.520
that you trust.

21:21.520 --> 21:24.160
Well, that's exactly what I did with my old Chromebook.

21:24.160 --> 21:28.640
I installed gallium OS, but maybe I won't need to run gallium OS in the future in order

21:28.640 --> 21:32.680
to run Linux applications on this old Chromebook of mine.

21:32.680 --> 21:36.680
After Google I.O., we thought that this was going to be limited to really high end Chromebooks.

21:36.680 --> 21:39.840
And they said available on pixels soon and things like that.

21:39.840 --> 21:44.720
But thanks to an issue that was found on Chromium's public bug tracker, it appears that this new

21:44.720 --> 21:49.560
Linux apps on Chrome OS functionality won't be limited to just the newest highest end

21:49.560 --> 21:50.560
devices.

21:50.560 --> 21:54.640
Now, there was some grounds for us thinking it might be because the Linux apps on Chrome

21:54.640 --> 21:58.320
OS require Linux kernel 4.4.

21:58.320 --> 22:04.960
But in this issue on Chromium's bug tracker, we see work is being done to back work features

22:04.960 --> 22:09.600
from 4.4 and some of the modules, specifically VSOC, which is required for all of this to

22:09.600 --> 22:15.560
work, to Linux kernel 3.14, which happens to be the kernel that a couple of popular

22:15.560 --> 22:17.760
Samsung Chromebooks run.

22:17.760 --> 22:23.560
Apparently, Samsung wants in on the Linux app goodness on their Chromebooks.

22:23.560 --> 22:29.480
And so work has begun on Google's part to back port the stuff from 4.4 to 3.14.

22:29.480 --> 22:36.320
So if your Chromebook runs kernel 3.14 or newer, perhaps possibly, it may also get access

22:36.320 --> 22:37.320
to these Linux apps.

22:37.320 --> 22:39.560
You may not have to buy a thousand dollar pixel book.

22:39.560 --> 22:43.960
That's suddenly going to make the used market for those Chromebooks more appealing, isn't

22:43.960 --> 22:44.960
it?

22:44.960 --> 22:45.960
Yeah, definitely.

22:45.960 --> 22:47.400
I mean, we don't really know the extent of the back porting.

22:47.400 --> 22:49.920
So we'll have to figure out what that is.

22:49.920 --> 22:54.240
Some kernel modules or platform generations just may not make the cut because they just

22:54.240 --> 22:57.600
are not fast enough or they can't run the right kernel.

22:57.600 --> 23:01.680
But nonetheless, this news does mean that older Chromebooks will not necessarily suffer

23:01.680 --> 23:03.640
from obsolescence just yet.

23:03.640 --> 23:06.480
So that used market did just get a little more valuable.

23:06.480 --> 23:09.360
It's just not quite time to pull the trigger on a Chromebook yet, I think.

23:09.360 --> 23:12.240
Yeah, it's going to be a while, as we talked about last week.

23:12.240 --> 23:16.880
But as always, when that news lands or anything like it in Linux or the open source world,

23:16.880 --> 23:18.280
we'll tell you about it right here on the show.

23:18.280 --> 23:22.320
Go to LinuxActionNews.com slash subscribe for all the ways to get new episodes.

23:22.320 --> 23:24.500
I'll be in Texas June 8th through the 9th.

23:24.500 --> 23:26.920
If you're in the Austin area, you're going to Texas Linux Fest.

23:26.920 --> 23:27.920
Let me know.

23:27.920 --> 23:32.040
And we have a telegram group for all the folks in the area, JupiterBroadcasting.com slash

23:32.040 --> 23:33.040
Texas.

23:33.040 --> 23:37.120
Yeah, and go to LinuxActionNews.com slash contact for ways to get in touch with us.

23:37.120 --> 23:40.400
And please consider supporting the entire network and everything we do to spread the

23:40.400 --> 23:44.640
word about Linux and open source at Patreon.com slash Jupiter Signal.

23:44.640 --> 23:48.400
We'll be back next Monday with our weekly take on the latest Linux and open source news.

23:48.400 --> 23:50.200
I'm at Chris LAS.

23:50.200 --> 23:51.880
I'm at Joe Ressington.

23:51.880 --> 23:55.000
Thank you for joining us, and we will see you next week.

23:55.000 --> 24:15.440
Have a great day, guys.

