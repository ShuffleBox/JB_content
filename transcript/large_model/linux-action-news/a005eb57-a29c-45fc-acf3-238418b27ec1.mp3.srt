1
00:00:00,000 --> 00:00:16,600
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

2
00:00:16,600 --> 00:00:22,480
This is episode 100, recorded on April 7th, 2019. I'm Chris.

3
00:00:22,480 --> 00:00:23,480
And I'm Joe.

4
00:00:23,480 --> 00:00:29,880
Hello, Joe, and happy episode 100. We kick it off with Chef celebrating our episode,

5
00:00:29,880 --> 00:00:34,440
obviously, by going 100% open source. At least, that's the headline.

6
00:00:34,440 --> 00:00:39,960
That is the headline. And it is true that now, Chef, instead of being open core and

7
00:00:39,960 --> 00:00:45,040
having a bunch of proprietary add-ons, everything that they do will be Apache 2 licensed. So

8
00:00:45,040 --> 00:00:51,380
it's all going completely 100% open source. However, the binaries are going to be paid

9
00:00:51,380 --> 00:00:54,280
for only. So this is very much the red hat model.

10
00:00:54,280 --> 00:00:58,720
Yeah. So to clarify that, you can get the binaries for free, I believe, but you cannot

11
00:00:58,720 --> 00:01:04,360
use them for commercial use without paying. But like in the case of RHEL, the source code

12
00:01:04,360 --> 00:01:08,760
is available. So you could grab the source code, build it yourself, but then in that

13
00:01:08,760 --> 00:01:13,720
case, you can't call it Chef. You have to call it something else, like Joe's orchestration.

14
00:01:13,720 --> 00:01:18,640
And maybe just as a background for people, if you're not familiar, Chef is a, well, it's

15
00:01:18,640 --> 00:01:23,440
a company, but it's also an open source project. It's one of the major configuration management

16
00:01:23,440 --> 00:01:29,480
systems on Linux and now also Windows. It's built in Ruby and Erlang, and it's one of

17
00:01:29,480 --> 00:01:34,840
the popular orchestration management suites. And this is a very competitive market. And

18
00:01:34,840 --> 00:01:39,760
so I think Chef is trying to differentiate themselves here. And the RHEL model has been

19
00:01:39,760 --> 00:01:41,040
proven successful.

20
00:01:41,040 --> 00:01:46,440
Well, just last week we talked about how they hit $3 billion, red hat, in revenue. So obviously

21
00:01:46,440 --> 00:01:50,680
they're doing something very right. And so it's not a surprise to see other companies

22
00:01:50,680 --> 00:01:52,240
following their model.

23
00:01:52,240 --> 00:01:56,880
Chef's talking up a big game here. They say their development process is going to go more

24
00:01:56,880 --> 00:02:02,880
open. They'll share more details about their roadmap, feature backlogs, and other future

25
00:02:02,880 --> 00:02:08,800
product developments. And all of Chef's commercial offerings will be based on the same open source

26
00:02:08,800 --> 00:02:14,360
code everybody else has access to. And they say, you know, this is solving a lot of problems

27
00:02:14,360 --> 00:02:18,840
for us, one of which being it was just getting really difficult for Chef to explain which

28
00:02:18,840 --> 00:02:24,560
parts of the software were open source and which were not. And now this is solved. And

29
00:02:24,560 --> 00:02:31,320
you've seen Redis and MongoDB all try to take different stabs at this kind of problem recently.

30
00:02:31,320 --> 00:02:35,960
And their solutions sort of got grief, right? They were going more closed down, whereas

31
00:02:35,960 --> 00:02:37,680
Chef has gone the other direction here.

32
00:02:37,680 --> 00:02:41,520
Yeah, this will satisfy the FOSS zealots, for want of a better word, the people who

33
00:02:41,520 --> 00:02:48,000
want everything to be completely open source free software. But by enforcing their trademark

34
00:02:48,000 --> 00:02:53,320
policy, they're really protecting their revenue stream here. So it's, I think, a very sharp

35
00:02:53,320 --> 00:02:57,960
move of them, because it means that they're not going to get the blowback that the likes

36
00:02:57,960 --> 00:03:02,060
of Redis Labs and Mongo have got. But at the same time, they are protecting their business.

37
00:03:02,060 --> 00:03:05,060
It seems to be a very good strategy.

38
00:03:05,060 --> 00:03:10,800
I think worst case scenario here is that the distributions that have Chef in the repositories

39
00:03:10,800 --> 00:03:14,760
are going to have to rename that to, you know, something else. And maybe the community will

40
00:03:14,760 --> 00:03:20,240
come up with a new name that sounds familiar, like kitchen. I don't know. Would it be great

41
00:03:20,240 --> 00:03:24,480
if we could predict what it's going to be right here on the show? But I'm just not familiar

42
00:03:24,480 --> 00:03:28,200
enough with the terminology in the kitchen. But there might be something like this, because,

43
00:03:28,200 --> 00:03:32,200
you know, it's based on recipes and all. That's like the whole vernacular. So if distributions

44
00:03:32,200 --> 00:03:35,000
could come up with a different name, then I think that solves the biggest problem we

45
00:03:35,000 --> 00:03:39,480
have now. Because according to the license, they are now, it's Apache 2, they can distribute

46
00:03:39,480 --> 00:03:41,840
as much as they like, just don't call it Chef.

47
00:03:41,840 --> 00:03:45,520
Well, also, they do have to remove any references to Chef in the source code.

48
00:03:45,520 --> 00:03:47,240
Right. And branding, any branding.

49
00:03:47,240 --> 00:03:51,660
Yeah, which isn't an insignificant job. Every time they release a new version, someone's

50
00:03:51,660 --> 00:03:55,080
going to have to go through and remove all that. I suppose you could probably just script

51
00:03:55,080 --> 00:03:59,760
that fairly easily. But it's something that they have to think about. And it's a bit of

52
00:03:59,760 --> 00:04:02,600
a headache for the distributions.

53
00:04:02,600 --> 00:04:08,480
But certainly not an unfamiliar problem. We've seen this even with Firefox, of course, there's

54
00:04:08,480 --> 00:04:12,760
lots of I mean, look at CentOS and scientific Linux. I mean, this is this is something that

55
00:04:12,760 --> 00:04:17,520
is a known domain. But I'm not trying to take away from the work, it probably will be tedious.

56
00:04:17,520 --> 00:04:21,960
I think there will be organizations that will just build it themselves and won't pay for

57
00:04:21,960 --> 00:04:26,500
it. But I think they're the kind of organizations, the smaller ones that wouldn't have paid anyway.

58
00:04:26,500 --> 00:04:30,680
And so I don't think Chef is going to actually lose out anything here. And it'll be very

59
00:04:30,680 --> 00:04:36,440
interesting to see how Amazon deals with this, whether they will just rebrand it as something,

60
00:04:36,440 --> 00:04:41,440
or whether they'll just pay Chef to license it, which would be potentially a very good

61
00:04:41,440 --> 00:04:44,520
revenue stream for them. And presumably what they're hoping will happen.

62
00:04:44,520 --> 00:04:50,280
And a great PR move by Amazon. Yeah, it would be smart for them. And they could afford it.

63
00:04:50,280 --> 00:04:54,880
Yeah, exactly. It's not like they can't afford it. So I don't know, I think Amazon will just

64
00:04:54,880 --> 00:04:58,800
make their own version of it, unfortunately, but we'll have to wait and see on that one.

65
00:04:58,800 --> 00:05:04,040
Well, let's move on to one of the stories that has had lots of turns. And this is the

66
00:05:04,040 --> 00:05:12,760
long going lawsuit with VMware over their use of GPL code in their VMware ESX bare metal

67
00:05:12,760 --> 00:05:14,400
virtual machine hypervisor.

68
00:05:14,400 --> 00:05:18,880
Yeah, we found out this week that that lawsuit is finally over for the same reasons it was

69
00:05:18,880 --> 00:05:23,720
last time. And that wasn't even getting into the nuts and bolts of the argument. It was

70
00:05:23,720 --> 00:05:29,120
simply insufficient evidence presented to the court, or rather, evidence presented in

71
00:05:29,120 --> 00:05:31,280
such a way that they just wouldn't accept it.

72
00:05:31,280 --> 00:05:35,720
Yeah, also, there's appears to have been a comment by the judge during oral hearings

73
00:05:35,720 --> 00:05:42,120
that the judge had concerns that this was a case being brought on ideological grounds,

74
00:05:42,120 --> 00:05:48,520
I'm paraphrasing a bit, and suggested because of that, that it be settled outside of court,

75
00:05:48,520 --> 00:05:52,720
which isn't likely that's not a solid start to a case. And then really, this goes all

76
00:05:52,720 --> 00:05:58,560
the way back to 2006. So this, this already failed once this was an appeal, and now that's

77
00:05:58,560 --> 00:06:05,280
failed. And VMware, by all accounts was clearly in violation of the GPL. I believe it's Christopher

78
00:06:05,280 --> 00:06:09,520
Hillwig, I'm not probably getting the pronunciation wrong there. But he spotted Linux source code

79
00:06:09,520 --> 00:06:16,360
being used illegally in VMware in 2006. And the way he put it is, quote, VMware uses a

80
00:06:16,360 --> 00:06:23,320
badly hacked 2.4 kernel with a big binary blob hooked into it, giving a derived work

81
00:06:23,320 --> 00:06:29,920
of the Linux kernel that is not legally redistributable. And that is, I believe, true. But they failed

82
00:06:29,920 --> 00:06:33,320
to make a compelling argument. They failed. Well, this is according to coverage in the

83
00:06:33,320 --> 00:06:36,980
German newspapers, which I'll have linked in the show notes, they failed to really present

84
00:06:36,980 --> 00:06:41,600
a solid argument. It was things like, well, here's my git information. And here's the

85
00:06:41,600 --> 00:06:44,800
git information of this and this project. And just, you know, look at looking at yourself.

86
00:06:44,800 --> 00:06:48,480
It's right there. It's just right there. I mean, that kind of stuff is not going to win

87
00:06:48,480 --> 00:06:54,640
a case like this. And it sets a bad precedent here. I hate to say this, but this was a huge

88
00:06:54,640 --> 00:07:00,160
waste of the Conservancy's money. Because they were the ones behind financing this.

89
00:07:00,160 --> 00:07:05,440
And what do I know? But what may have been established here is now a new precedent. Essentially,

90
00:07:05,440 --> 00:07:13,360
if you are a minor contributor to a very large code base, say 2% of the Linux kernel is yours,

91
00:07:13,360 --> 00:07:18,280
and you have some copyright or some claim over that 2%. What the judge said here essentially

92
00:07:18,280 --> 00:07:23,960
is that's not enough for you to bring this case. You have not been unduly affected enough.

93
00:07:23,960 --> 00:07:28,400
That is essentially precedence now, which is a massive problem for contributors of many

94
00:07:28,400 --> 00:07:33,280
open large open source projects. This is this could potentially be a disservice to the open

95
00:07:33,280 --> 00:07:39,180
source free software community long term, because this is obviously any large corporation

96
00:07:39,180 --> 00:07:44,520
that's using a large project could now fight on these grounds. It's very disappointing.

97
00:07:44,520 --> 00:07:46,560
And it's definitely not the result we wanted to see.

98
00:07:46,560 --> 00:07:50,880
Well, no, it's not the result we wanted to see. And it does seem to set that precedent

99
00:07:50,880 --> 00:07:55,200
in Germany, at least. But for other jurisdictions, who knows?

100
00:07:55,200 --> 00:07:58,840
Germany's a favorite spot, though, because often the rulings there, then sort of get

101
00:07:58,840 --> 00:08:03,960
trickled down to all of the other Western style nations, at least, according to the

102
00:08:03,960 --> 00:08:08,560
Conservancy's fact. But I think what we have here, Joe, just just to really underscore

103
00:08:08,560 --> 00:08:13,320
this is we have a proven GPL violator who just got away with it, even though they went

104
00:08:13,320 --> 00:08:14,320
through the court system.

105
00:08:14,320 --> 00:08:19,240
Well, yeah, I mean, I'm not a lawyer, and I don't even play one on a podcast. But yeah,

106
00:08:19,240 --> 00:08:23,060
my understanding is that they were in violation of the GPL and have got away with it.

107
00:08:23,060 --> 00:08:27,200
And they've essentially admitted as much now, because VMware has released a statement saying

108
00:08:27,200 --> 00:08:33,680
they'll in a future version, be removing that GPL code. And I think what we have here is

109
00:08:33,680 --> 00:08:40,400
we have a large player in the Linux Foundation, VMware. And we have another large player say

110
00:08:40,400 --> 00:08:45,600
like Red Hat, who's in the Linux Foundation. And if you were to look at the overall Linux

111
00:08:45,600 --> 00:08:51,440
source code, there is a lot of Red Hat contributions and copyrights, because employees of Red Hat,

112
00:08:51,440 --> 00:08:55,880
when they join Red Hat, sign over the copyright to the code they produce for Red Hat to the

113
00:08:55,880 --> 00:09:02,680
corporation. So those copyrights are all Red Hats. Red Hat hypothetically could have a

114
00:09:02,680 --> 00:09:09,600
large majority of code contribution of the Linux kernel because of this. And they would

115
00:09:09,600 --> 00:09:14,640
be the perfect company to then bring that to bear in court. But I believe because they're

116
00:09:14,640 --> 00:09:20,960
all part of the same pack, they're all part of the Let's Make Money Linux Foundation pack.

117
00:09:20,960 --> 00:09:26,560
Nobody took action. And it was up to one individual, Christopher Hilwig, who simply was unable

118
00:09:26,560 --> 00:09:33,120
to go up against OmegaCorp, who is a significant contributor to the Linux Foundation. And they

119
00:09:33,120 --> 00:09:37,000
clearly knew they were in violation because now they're removing that code anyways. And

120
00:09:37,000 --> 00:09:38,000
they got away with it.

121
00:09:38,000 --> 00:09:44,160
It is very disappointing. But there's one kind of strange aspect to this. You may remember

122
00:09:44,160 --> 00:09:51,360
Patrick McHardy, who is another kernel contributor. And he threatened a bunch of lawsuits in Germany

123
00:09:51,360 --> 00:09:56,580
over this GPL compliance stuff. And he was basically just trying to shake down companies

124
00:09:56,580 --> 00:09:58,200
for money, profit basically.

125
00:09:58,200 --> 00:09:59,200
Yeah, I remember.

126
00:09:59,200 --> 00:10:05,120
And so he didn't get very far. Now, one of the companies that he tried to sue was I think

127
00:10:05,120 --> 00:10:10,080
Geniatech or Geniatech, something like that. And their defense lawyer was a fellow called

128
00:10:10,080 --> 00:10:15,400
Till Yeager, who happens to be the person who represented Christopher in this case.

129
00:10:15,400 --> 00:10:20,080
So he was on the other side last time. And now he's on the side of Christopher. So you'd

130
00:10:20,080 --> 00:10:25,080
think that he would have enough experience to know what evidence was required and how

131
00:10:25,080 --> 00:10:29,400
to submit that evidence. So it's all very strange.

132
00:10:29,400 --> 00:10:32,120
He's an arms dealer selling arms to both sides.

133
00:10:32,120 --> 00:10:39,000
I would never go so far as to say that. But yeah, I mean, as usual, I'm sure he made plenty

134
00:10:39,000 --> 00:10:44,560
of money out of this as do all lawyers with these things. And Conservancy are the ones

135
00:10:44,560 --> 00:10:46,960
who have had to foot the bill by the looks of things.

136
00:10:46,960 --> 00:10:51,240
Yeah, I mean, in a way, the Conservancy is getting the end result they wanted. And to

137
00:10:51,240 --> 00:10:56,360
make to make it clear, I believe and take the Conservancy at their word that they attempted

138
00:10:56,360 --> 00:11:00,880
like hell, to try to solve this thing out of court. They tried to provide solutions

139
00:11:00,880 --> 00:11:05,400
to VMware that they just didn't want to take. And so now, they've essentially gotten the

140
00:11:05,400 --> 00:11:09,840
result they wanted at the very beginning of all of this. It was just VMware is doing it

141
00:11:09,840 --> 00:11:11,880
voluntarily after getting off scot-free.

142
00:11:11,880 --> 00:11:15,260
And I do take their word that that's what they're interested in. They're not interested

143
00:11:15,260 --> 00:11:18,960
in making a bunch of money. They just want people to be in compliance. They don't want

144
00:11:18,960 --> 00:11:23,680
people to violate the license so that the whole community can benefit from the changes

145
00:11:23,680 --> 00:11:29,200
that they make. And so while this is disappointing, as you say, at least they did eventually get

146
00:11:29,200 --> 00:11:33,360
the outcome they wanted. I mean, it sounds like VMware would have just done that anyway.

147
00:11:33,360 --> 00:11:36,000
And they could have saved themselves a bunch of money and hassle.

148
00:11:36,000 --> 00:11:40,780
Well, from the enterprise to your pocket, how about this one? Running Android next to

149
00:11:40,780 --> 00:11:45,080
Wayland applications? What, Joe? What? Wayland on Android? What?

150
00:11:45,080 --> 00:11:51,200
Yeah, this is a new thing called Sperve, which runs a whole Android stack on Linux, which

151
00:11:51,200 --> 00:11:59,680
allows you to run, therefore, Android applications, but on Linux with Wayland, with direct hardware

152
00:11:59,680 --> 00:12:02,520
access and full hardware acceleration.

153
00:12:02,520 --> 00:12:07,920
Man, you just got to love all the different use cases people come up with for containers.

154
00:12:07,920 --> 00:12:11,680
It feels like there's something every week. So this is, yeah, you take Android, you put

155
00:12:11,680 --> 00:12:16,000
it in a container environment, but it's a little different. It has, like Joe said, direct

156
00:12:16,000 --> 00:12:22,000
hardware access. And that was a choice they made for performance. Now, there are drawbacks,

157
00:12:22,000 --> 00:12:27,240
including some security risks, but using direct hardware access grants them increased GPU

158
00:12:27,240 --> 00:12:31,320
and CPU performance. So you got to think about what your use case is for something like this.

159
00:12:31,320 --> 00:12:35,360
Do you want to have a super secure Android environment or do you want to run Android

160
00:12:35,360 --> 00:12:39,360
applications in your Linux Wayland environment with full acceleration?

161
00:12:39,360 --> 00:12:43,400
They have a whole device infrastructure that they've put in place. In fact, they're taking

162
00:12:43,400 --> 00:12:47,480
advantage of a lot of stuff that's built into Android. And they've come up with bridges,

163
00:12:47,480 --> 00:12:51,400
for example, like when you start up the Android container, they have a bridge that connects

164
00:12:51,400 --> 00:12:58,600
the virtual Android machine to your host Pulse audio stack. And they have a hardware compositor,

165
00:12:58,600 --> 00:13:02,960
which does the same thing with Wayland, creates another bridge. And they say that a lot of

166
00:13:02,960 --> 00:13:07,880
the underlying protocols are conceptually a lot like Wayland that they're dealing with

167
00:13:07,880 --> 00:13:16,240
for the graphics stack. So it's pretty straightforward to then translate their hardware compositor

168
00:13:16,240 --> 00:13:20,400
into Wayland's protocol. And that's essentially what they have their compositor doing is just

169
00:13:20,400 --> 00:13:24,440
talking Wayland, taking the Android stuff in and then talking Wayland. And they have

170
00:13:24,440 --> 00:13:29,020
a video on their website and it's really slick. I mean, you got angry birds. What else do

171
00:13:29,020 --> 00:13:30,520
you need? Angry birds, Joe.

172
00:13:30,520 --> 00:13:35,480
Yeah. What else do you need five years ago? It's a good demonstration to be fair.

173
00:13:35,480 --> 00:13:39,200
Yeah. I mean, they're moving it around on the Linux desktop. They got the terminal up,

174
00:13:39,200 --> 00:13:43,080
they got different apps up and then boom, here's angry birds. It's neat.

175
00:13:43,080 --> 00:13:48,760
Now this is early days. It's not kind of primetime ready yet. But a couple of things that jumped

176
00:13:48,760 --> 00:13:54,640
out at me from their future plans. The first one is making it work properly on x86 with

177
00:13:54,640 --> 00:14:01,800
Ubuntu, which is interesting for a bit of kind of hacking around and playing with. But

178
00:14:01,800 --> 00:14:07,720
the really interesting one was that they want to make it work on the iMX8M with the naviv

179
00:14:07,720 --> 00:14:11,640
graphics driver. Now what does that mean if they get that working?

180
00:14:11,640 --> 00:14:13,200
Is that the Librem 5 stack?

181
00:14:13,200 --> 00:14:18,780
Indeed it is. So that could potentially bring Android apps to the Librem 5, which would

182
00:14:18,780 --> 00:14:24,080
suddenly make it a much more attractive proposition. Get F-Droid working on there and suddenly

183
00:14:24,080 --> 00:14:26,120
you've unlocked a whole bunch of apps.

184
00:14:26,120 --> 00:14:30,260
Hmm. That's an interesting future cast in there, Joe. That could have some nice positive

185
00:14:30,260 --> 00:14:35,640
effects for the Librem 5. I like where they're going with this. I think you got to remember

186
00:14:35,640 --> 00:14:40,920
though, there is a certain amount of overhead to run an entire Android operating system

187
00:14:40,920 --> 00:14:43,040
just so you can use an app.

188
00:14:43,040 --> 00:14:47,680
Keep in mind that that is what you're doing here. It's not like Wine where you're just

189
00:14:47,680 --> 00:14:51,760
running the application and translating the application calls. You're starting up an entire

190
00:14:51,760 --> 00:14:53,360
Android stack in a container.

191
00:14:53,360 --> 00:14:57,640
Yeah, that's not going to be great for battery life, is it? And performance generally.

192
00:14:57,640 --> 00:15:03,560
No. No, I wouldn't think so. And it could potentially mean more security risks as well

193
00:15:03,560 --> 00:15:07,240
because there's a complete operating system stack there.

194
00:15:07,240 --> 00:15:13,000
Yeah. But at least it makes playing with and hacking on the Librem 5 a little bit more

195
00:15:13,000 --> 00:15:17,080
attractive even if it doesn't make it more attractive from a mainstream point of view.

196
00:15:17,080 --> 00:15:21,760
Sure. And I could also see it being handy for Android development on Linux. You're developing

197
00:15:21,760 --> 00:15:28,200
an app. It wouldn't be a very good test case, but it definitely could be a great way while

198
00:15:28,200 --> 00:15:31,960
you're just building your application, getting the UI laid out. You could run it right there

199
00:15:31,960 --> 00:15:38,180
on your desktop. That seems pretty compelling. So I could see all educational use cases,

200
00:15:38,180 --> 00:15:40,800
all kinds of use cases for this thing. I mean, I'd play with it.

201
00:15:40,800 --> 00:15:46,120
Yeah, it definitely is one to watch and hopefully in the near future. But let's look back to

202
00:15:46,120 --> 00:15:51,280
the past of mobile development on Linux and Mer.

203
00:15:51,280 --> 00:15:58,200
Not mere, but mer. M-I-R is something different. M-E-R is something different. This week we're

204
00:15:58,200 --> 00:16:01,720
talking about the M-E-R version, the mobile project.

205
00:16:01,720 --> 00:16:08,320
Because this week, Mer and Sailfish OS have merged. Of course, Mer was a pretty big part

206
00:16:08,320 --> 00:16:14,120
of Sailfish OS anyway, and most of the recent contributions have come from Yola. So it's

207
00:16:14,120 --> 00:16:16,560
not a huge surprise that they've come together.

208
00:16:16,560 --> 00:16:20,360
This isn't really news that's going to impact anybody's life out there. Well, no, I shouldn't

209
00:16:20,360 --> 00:16:27,280
say anybody, but most of our lives. But it is a fascinating story from a history standpoint.

210
00:16:27,280 --> 00:16:33,800
Mer began many years ago, really as a demonstration project. Then it was sort of shut down and

211
00:16:33,800 --> 00:16:40,880
they shifted to MeeGo. And then when MeeGo stopped, they reincarnated Mer again. And

212
00:16:40,880 --> 00:16:48,120
then that became essentially the core of Sailfish OS, which now Yola uses in their devices and

213
00:16:48,120 --> 00:16:54,920
is actually in production. It's a weird, twisty story. And there has been, at certain points

214
00:16:54,920 --> 00:17:00,040
in time in history, really incredible projects that sprung up and were very usable and then

215
00:17:00,040 --> 00:17:06,080
were collapsed and then merged and then reincarnated. And I guess at the end, it sort of ends up

216
00:17:06,080 --> 00:17:07,080
where we started.

217
00:17:07,080 --> 00:17:12,180
I've spoken to some members of the UbiPorts community about this, and they had dabbled

218
00:17:12,180 --> 00:17:18,280
with Mer a bit previously, but are generally concentrating on Halium now. So that was my

219
00:17:18,280 --> 00:17:23,400
kind of concern. Is it going to affect them? And I think the answer is not really. And

220
00:17:23,400 --> 00:17:28,680
the sense there was watch and wait, really. No firm conclusion as to whether this is a

221
00:17:28,680 --> 00:17:35,280
good or bad thing. It just seems inevitable, really, that this was going to happen because

222
00:17:35,280 --> 00:17:40,720
they were doing so much work on it and pretty much no one else was. So why not merge them?

223
00:17:40,720 --> 00:17:44,520
And even Yola themselves say that Mer has served its purpose and can retire.

224
00:17:44,520 --> 00:17:49,920
Right. It's served the community well. Speaking of UbiPorts, though, they have some big news.

225
00:17:49,920 --> 00:17:53,920
They finally have their very own official foundation.

226
00:17:53,920 --> 00:17:58,220
Yeah, this has been a long time coming. They've been working on it since pretty much they

227
00:17:58,220 --> 00:18:04,040
took over from Canonical. And it just turns out that it is very, very complicated, particularly

228
00:18:04,040 --> 00:18:09,640
in Germany, where they've done this to get all the paperwork sorted. But now they've

229
00:18:09,640 --> 00:18:13,800
finally done it. They can move forward and their finances will be a lot less stressful

230
00:18:13,800 --> 00:18:17,160
and crucially much more stable in the long term.

231
00:18:17,160 --> 00:18:20,940
They write in the post that we'll have linked in the notes that the foundation provides

232
00:18:20,940 --> 00:18:27,400
the project's benefits such as structure, new funding and merchandising opportunities,

233
00:18:27,400 --> 00:18:31,240
which is good for sustainability. And if you're out there and you're listening and you're

234
00:18:31,240 --> 00:18:36,440
kind of skeptical, you don't really see the place of UbiPorts and what the purpose is,

235
00:18:36,440 --> 00:18:39,600
I'd encourage you to take a couple of minutes and go read this post. They do a bit of a

236
00:18:39,600 --> 00:18:43,700
victory lap and give you a brief overview of some of the milestones that they've achieved

237
00:18:43,700 --> 00:18:50,160
since they took the project over on April 5, 2017. It's pretty damn impressive. And

238
00:18:50,160 --> 00:18:56,200
they're getting there in a slow, methodical, release-by-release improvement approach. We

239
00:18:56,200 --> 00:19:02,200
could end up seeing in a couple of years time, at least, a general purpose, open source,

240
00:19:02,200 --> 00:19:09,560
fully functional, free phone operating system that this community has put out and this foundation

241
00:19:09,560 --> 00:19:13,600
sort of gives them the basis to keep that sustainable.

242
00:19:13,600 --> 00:19:18,680
Yeah, and it means that now they could do a deal with an OEM and put out an actual phone

243
00:19:18,680 --> 00:19:20,160
if they wanted to.

244
00:19:20,160 --> 00:19:25,680
Interesting. I hadn't really thought about that. But that would be really cool if that

245
00:19:25,680 --> 00:19:30,240
were to develop. Something like the PinePhone, I think, is a group they've worked with the

246
00:19:30,240 --> 00:19:34,560
Pine people a bit. If you could order up a phone, even if it wasn't daily driver, I'd

247
00:19:34,560 --> 00:19:37,840
love to play with something if the price was reasonable, just to get an idea where they're

248
00:19:37,840 --> 00:19:39,120
going and stay on top of it.

249
00:19:39,120 --> 00:19:43,720
Yeah. I mean, even if it could be someone like BQ, like Canonical worked with, the thing

250
00:19:43,720 --> 00:19:48,360
is until they had this financial structure in place, they weren't really legitimate in

251
00:19:48,360 --> 00:19:53,880
a way. They couldn't do those kind of deals, not easy at least. Whereas now, they've got

252
00:19:53,880 --> 00:19:59,080
that solid foundation and they could potentially do deals like that. And realistically, not

253
00:19:59,080 --> 00:20:05,360
much is actually going to change beyond perceptions. But the thing is, perceptions are very important

254
00:20:05,360 --> 00:20:07,440
and it makes them seem legit now.

255
00:20:07,440 --> 00:20:13,480
Yeah, especially when they're dealing with commercial OEMs. That's critical. Congratulations

256
00:20:13,480 --> 00:20:17,720
to them. It's just cool to see them tick on. The only thing is, though, it doesn't have

257
00:20:17,720 --> 00:20:19,000
enough blockchain, Joe.

258
00:20:19,000 --> 00:20:24,600
Oh, yeah, definitely. Everything needs more blockchain. And the EU strikes again. This

259
00:20:24,600 --> 00:20:26,640
time they've launched the Blockchain Association.

260
00:20:26,640 --> 00:20:33,840
Oh, yeah. This is a big deal. The International Association of Trusted Blockchain Applications

261
00:20:33,840 --> 00:20:39,800
has grown out of months of forums and roundtables held by the Commission to create a strategy

262
00:20:39,800 --> 00:20:45,080
around emerging technology. As the adoption of blockchain, they write, continues across

263
00:20:45,080 --> 00:20:50,960
a wide range of sectors, the European Commission has made a priority to study the potential

264
00:20:50,960 --> 00:20:56,480
impact and encouraging it across a number of initiatives. A hundred organizations in

265
00:20:56,480 --> 00:20:57,480
this.

266
00:20:57,480 --> 00:21:03,160
Yeah. Well, it kind of goes to show that it's not just about Bitcoin. We've talked a few

267
00:21:03,160 --> 00:21:11,520
times about how blockchain technology and distributed ledgers are not just about cryptocurrencies.

268
00:21:11,520 --> 00:21:18,600
It's way more than that. It's really boring stuff like shipping and distribution and logistics.

269
00:21:18,600 --> 00:21:24,040
And there's certain areas where it just really shines as essentially a distributed database.

270
00:21:24,040 --> 00:21:29,820
Right. It's a distributed ledger or database that is verifiable by crypto. And so that

271
00:21:29,820 --> 00:21:37,240
means even competing companies or banks that don't trust each other can rely on the information,

272
00:21:37,240 --> 00:21:40,720
assuming it's a sound implementation. But you know, I was looking at the organizations

273
00:21:40,720 --> 00:21:48,640
that were involved. Anheuser-Busch, the Bud Light Company. I guess maybe shipping. You

274
00:21:48,640 --> 00:21:50,920
know, they got to ship a lot of beer, I suppose.

275
00:21:50,920 --> 00:21:56,740
Yeah, exactly. They got to ship a lot of ingredients and beer and everything. And yeah, it just

276
00:21:56,740 --> 00:22:01,520
totally makes sense for these companies to adopt this technology. And whenever you have

277
00:22:01,520 --> 00:22:07,440
got billions of dollars in an industry, you need to have these organizations that oversee

278
00:22:07,440 --> 00:22:13,920
it and that these members will come together and cooperate in. And it just goes to show

279
00:22:13,920 --> 00:22:17,200
that this stuff has been really taken seriously now.

280
00:22:17,200 --> 00:22:21,640
Do you think it adds like commercial legitimacy? You know, in the eyes of corporations that

281
00:22:21,640 --> 00:22:23,440
might want to be implementing blockchain?

282
00:22:23,440 --> 00:22:29,240
Definitely, yeah. I think that like with the Ubiports thing, perceptions are very important.

283
00:22:29,240 --> 00:22:36,240
And even if nothing really changes in practical terms, just having this organization in place

284
00:22:36,240 --> 00:22:41,960
does give the whole industry and the whole area of the industry of blockchain credibility.

285
00:22:41,960 --> 00:22:47,560
Yeah, I guess, you know, I hadn't really thought about it, but you're right. It's sort of a

286
00:22:47,560 --> 00:22:54,560
stamp of approval that we recognize this as a business technology. And, boy, corporations

287
00:22:54,560 --> 00:22:55,560
love that kind of thing.

288
00:22:55,560 --> 00:23:00,800
Yeah, I think you're gonna see more and more companies adopt this technology because it

289
00:23:00,800 --> 00:23:06,960
actually does serve a very important purpose. It's not exciting, like running Android apps

290
00:23:06,960 --> 00:23:13,360
on Wayland or whatever. But it's just the plumbing, the nuts and bolts of how the globalized

291
00:23:13,360 --> 00:23:17,600
economy is actually going to work going into the 22nd century.

292
00:23:17,600 --> 00:23:23,000
Yeah, I think where I still kind of get like a little bit of, as we would say here in the

293
00:23:23,000 --> 00:23:28,440
States, heebie-jeebies from these kinds of stories is blockchain is kind of like cloud

294
00:23:28,440 --> 00:23:35,480
now. It's really all in the details. How are they verifying those transactions? Is it truly

295
00:23:35,480 --> 00:23:40,160
distributed? Is it under the control of one corporation or one government entity? Like

296
00:23:40,160 --> 00:23:45,780
all of the implementation details are really what matter when it comes to blockchain technology.

297
00:23:45,780 --> 00:23:52,520
And we just get this generic blockchain description, which is supposed to invoke some sort of impressed,

298
00:23:52,520 --> 00:23:57,840
oh, they're using crypto. But I'm left thinking, you know, if they don't have the right verification

299
00:23:57,840 --> 00:24:03,460
system, then it doesn't matter. It's worthless. And of course, they don't go into the details.

300
00:24:03,460 --> 00:24:07,920
Are they going to be setting up servers, crunching crypto in data centers? Have they come up

301
00:24:07,920 --> 00:24:12,820
with a different, less CPU or GPU intensive way to verify that still just as cryptographically

302
00:24:12,820 --> 00:24:16,400
sound and can't be hacked? Like, what are the details here? We don't know. It's just

303
00:24:16,400 --> 00:24:17,400
blockchain.

304
00:24:17,400 --> 00:24:22,200
Well, I suppose it's a bit like cloud that can mean anything from one VM that you have

305
00:24:22,200 --> 00:24:29,240
rented and resold to AWS and everything in between. And it is all in the implementation

306
00:24:29,240 --> 00:24:35,000
details. But I like to think that this association will set some standards and answer some of

307
00:24:35,000 --> 00:24:36,000
those questions.

308
00:24:36,000 --> 00:24:41,000
Yeah, fair point. That would actually be a really good use of a commission like this.

309
00:24:41,000 --> 00:24:45,720
Like that's, I think that would be, that's a great idea. I'm going to watch and see.

310
00:24:45,720 --> 00:24:50,280
Because that does seem to be the critical part. And perhaps, perhaps maybe that some

311
00:24:50,280 --> 00:24:54,360
sort of consensus can be reached if there is a government regulation of some effect

312
00:24:54,360 --> 00:24:58,580
in place. Interesting, you know, because the technology moves so fast. So that's going

313
00:24:58,580 --> 00:25:02,560
to be challenging for them to keep up with. But I'm sure that you use up to the challenge,

314
00:25:02,560 --> 00:25:03,560
right Joe?

315
00:25:03,560 --> 00:25:08,200
And it's funny that the the image used to illustrate this is a bunch of interconnected

316
00:25:08,200 --> 00:25:14,400
lines of the the map of the EU and you can see that Switzerland's missing in the middle.

317
00:25:14,400 --> 00:25:23,400
But then there's the UK off the coast of France hasn't been deleted just yet.

318
00:25:23,400 --> 00:25:27,120
That'll be a big blockchain update. Lots of verification. Well, in the meantime, we'll

319
00:25:27,120 --> 00:25:31,280
have more stories every single week. Go to linuxactionnews.com slash subscribe for all

320
00:25:31,280 --> 00:25:33,000
the ways to get new episodes.

321
00:25:33,000 --> 00:25:36,960
And go to linuxactionnews.com slash contact for ways to get in touch with us.

322
00:25:36,960 --> 00:25:41,680
And if you're a full stack Ruby on Rails developer, check out linuxacademy.com slash careers.

323
00:25:41,680 --> 00:25:48,320
They are hiring for full time remote positions for full stack Ruby on Rails developers. Also,

324
00:25:48,320 --> 00:25:54,180
just a quick plug skis for Linux Fest Northwest coming up very soon at the end of this month.

325
00:25:54,180 --> 00:25:58,000
We're gonna all be there. And we'd love to see you. We'll have tons of Jupiter broadcasting

326
00:25:58,000 --> 00:26:03,800
talks going on. We'll have a booth. We'll have a live stream. Joe and I will be there. It'll

327
00:26:03,800 --> 00:26:08,760
be a great time. linuxfestnorthwest.org for more information and meetup.com slash Jupiter

328
00:26:08,760 --> 00:26:11,760
broadcasting for our parking lot barbecue details.

329
00:26:11,760 --> 00:26:15,720
And just a quick shout out to cheese bacon, the newest member of our Jupiter broadcasting

330
00:26:15,720 --> 00:26:21,040
team who has done an absolutely fantastic job working with the Linux Academy art department

331
00:26:21,040 --> 00:26:25,080
to do all of the assets, all the new logos. They're all looking fantastic.

332
00:26:25,080 --> 00:26:30,400
Yeah, the new art is sharp. Check out the new dark theme to over at Jupiter broadcasting.com.

333
00:26:30,400 --> 00:26:36,280
Yeah, the design team and Mr. Bacon did a great job. Now we'll be back next Monday with

334
00:26:36,280 --> 00:26:41,000
our weekly take on the latest Linux and open source news. I'm at Chris LAS.

335
00:26:41,000 --> 00:26:42,600
I'm at Joel Rissington.

336
00:26:42,600 --> 00:26:45,560
Thank you for joining us. And we'll see you next week.

337
00:26:45,560 --> 00:27:03,560
See you later.

