Hello, and welcome to Linux Action News, episode 236, recorded on April 13th, 2022.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
It's been a long four years now since the introduction of SUSE Linux Enterprise 15,
and many are wondering, what's next?
Well, it seems SUSE does have some plans for a next-generation operating system in the
works, dubbed Adaptable Linux Platform, or ALP, and it's expected that this new skunkworks
effort will eventually become the successor to SUSE Linux Enterprise.
This is Stefan Billard noted in today's announcement.
SLEE 15 is a great general purpose operating system, yet challenges with some use cases,
now places of deployment, and the type of enhancement requests show that it's time
for a successor.
You see terms like radical changes sprinkled in the announcement, but as for what all those
changes might actually entail, SUSE is still being a little bit tight-lipped on that, at
least publicly.
We really didn't get much, but they did give us a little hint in their announcement where
they noted, quote, another important point is that we intend to split what was more generic.
Everything is closely intertwined into two parts, one smaller hardware enabling piece,
a kind of host OS, and the layer and supporting applications, which will be containers and
VM-based.
If that sounds appealing to you, well, thankfully, it doesn't sound like we're going to have
to wait too long to find out a bit more.
SUSE is pledging to do the development of this new effort all out in the open and say
they're going to share some more details in the upcoming weeks.
Well up until now, all installs of Raspberry Pi OS have had a little problem, a default
user called Pi, and probably like a lot of you out there, I never really liked this.
Even just knowing a valid user ID on a system is just not ideal from a security standpoint.
With this, among several other issues that some of which still remain, I've never really
been comfortable recommending the official Pi OS to our audience.
But with the latest release of Raspberry Pi OS, that default Pi user is finally being
removed.
Instead, you'll be able to create a user the first time you boot a newly flashed Raspberry
Pi OS image.
In fact, that previously dismissible first run wizard, well, that's now mandatory so
you can create your new account.
And don't worry if you're a headless Raspberry Pi user like myself, that Raspberry Pi imager
tool that's so famous out there, well, that actually lets you pre-configure a user now
that will get written to the image before you write it to the SD card.
The good news is, if you don't use the imager like me, you can also pre-configure the user
account by just adding a text file to the boot folder on the SD card that'll just define
that information.
We'll have the details in the link in the show notes.
It's a small inconvenience really, I think, for a much-needed security improvement.
And it's also nice to see Bluetooth is in better shape for early setup.
And now users have the ability to try out Mudder running on Wayland if they'd like to
test that configuration.
We don't cover every pipeline release, but we do always love a good excuse to talk about
it.
This week, Pipewire 0.3.50 gave us just that reason.
Among the batch of your always-nice-to-see bug fixes and minor improvements, one item
in particular opens up Pipewire to more advanced audio editing workflows.
Yeah, it seems like a silly, maybe even simple thing on the surface, but without this, audio
editors on Linux were limited in some critical ways with the audio effect plugins they could
use while using a Pipewire backend.
Previously, Wine applications that were talking to Jack would crash, and now that has been
fixed with this Pipewire release.
And while this has a lot of perks for many types of users, including gamers out there,
it opens up Windows-based VST plugins to Linux audio editors that are using the Pipewire
stack.
Why, you might ask, is this Linux-based show talking about Windows plugins?
Well, that's because, unfortunately, in the land of content production, a really good
plugin can sometimes be the difference between a lost episode or a saved episode, an inaudible
interview or a really great guest.
And in some cases, you don't even have to go to Windows.
It's surprisingly usable to run some of those Windows plugins right on Linux directly in
your audio editor, routed through Wine.
Something we've been doing for a couple years now, at least when we have to.
Yeah, only when we have to, but it's so great to have that.
And that has meant for us, we've kept Pipewire out of our Jack-based audio workflow on our
editing systems.
But with this version of Pipewire, that may be changing.
And realistically, it's just great to see these kinds of improvements because previous
audio systems on Linux really took a lot longer to get these kinds of features that made pro
workflows doable.
It maybe even took eight, 10 years before some of these features landed.
And we're seeing these kinds of things be addressed much earlier in the Pipewire cycle.
That's really exciting to see.
OpenSSH 9.0 has been released.
This build is primarily a bug fix release, but it also switches to a new quantum computer
proof key exchange protocol by default and includes a number of SFTP changes.
Most notably of which, SCP has finally been switched from using its old vulnerable legacy
protocol to using SFTP on the backend.
This is good news, but do be aware, it's not entirely backwards compatible.
It really is just nice to see these bug fixes and these porting updates.
I think I and maybe some of us take for granted that OpenSSH works just about everywhere,
but that actually takes a lot of maintenance.
It takes a lot of work to keep this thing secure.
And if that quantum computer proof key exchange protocol caught your attention like it did
mine, we'll have more information about that in the show notes.
It's sort of as you might suspect, the idea by the project is to kind of figure this stuff
out now and be prepared by the time a sufficiently advanced quantum computer is available, at
best case scenario, maybe even have quantum resistant software already deployed out in
the wild.
It's pretty interesting stuff, sci-fi stuff, link in the show notes.
While the talk lately around riser FS has been about deprecating the older code from
the Linux kernel, it seems riser development is actually continuing on.
One of the standout features of riser 5 is a new method for parallel scale out of the
file system.
According to Shishkin, this capability is inspired more from networked file systems
rather than traditional RAID storage arrays.
It's still early days and this latest update provides a few numbers on what the performance
might be like.
Not sure where it's going to go, it's certainly interesting research.
And also makes me think, perhaps the rumors of riser's death have been greatly exaggerated.
You might have seen some tantalizing NVIDIA Linux headlines going by this week, including
reports of a brand new open source NVIDIA driver.
And it's true, but with a big catch.
You see, in NVIDIA's latest Linux for Tegra code drop, some interested parties discovered
a new open source kernel driver that had never previously been published.
This driver isn't based on the existing nouveau driver, but rather appears to be derived from
an internal code base with some references going all the way back to the 90s.
Yeah, 1993, it seems, that's something we've always speculated that NVIDIA had these complicated
license deals with third parties in their code that just went back years.
Well, this would kind of seem to maybe confirm that suspicion.
Now, before we get too excited, at least for now, this kernel driver appears to be limited
to their Tegra graphics hardware.
If you try to load this module for a desktop NVIDIA graphics card, well, you're just going
to get errors.
But Michael Larble over at Ferronix noted that when you do look at the driver's source
code, there's actually references in there to many desktop GPUs and, well, other GPUs
that are just outside the Tegra context altogether.
Who knows what that means.
Also making a few waves this week, was NVIDIA finally publishing the signed firmware images
for their RTX 30 Ampere graphics processors.
This is big news because those signed images are required if you want to enable better
hardware support and you're using the free NUVO driver.
NVIDIA first introduced the GeForce 30 series back in September of 2020 and their hardware
has been built in such a way that it requires this signed firmware to just even unlock certain
functionality from the free graphics driver.
So even if the NUVO driver project has the support, it doesn't matter unless NVIDIA
unlocks it from this firmware standpoint.
And even with these signed images now available, there's still complications around reclocking
the GPU because it starts with some rather low boot clock frequencies and you've got
to do a complicated dance to get higher ones enabled.
And those complications around power management in the context of signed firmware images have
meant that the GTX 900 series and newer hasn't been able to operate with the open source
driver at those optimal clock frequencies.
And that means, to date, the best open source driver support remains with the GTX 700 Kepler
series as well as the GTX 750 Maxwell graphics cards that don't happen to have these firmware
restrictions.
It's also worth noting, unfortunately, that after a year and a half of waiting for these
signed firmware images to be published, we're now just a few months away from NVIDIA releasing
the GeForce RTX 40 series.
And then this process has to start all over again.
This is just not good enough
in
the long run.
support the show.
Linode.com slash LAN.
It's Linode.com slash LAN to get $100 in 60 day credit on a new account and Linode.com
slash LAN to support the show and kick the tires.
Linode.com slash LAN.
And a Linux sized thank you to Ting.
Linux dot Ting dot com.
If you're sick of overpaying for cell service, go see how much you can save and then take
$25 off of that at Linux dot Ting dot com.
Ting's been my mobile service provider since 2013 and it's obvious.
They got the big nationwide coverage, multiple networks, LTE and 5G, nation to nation networks,
you know what I'm talking about, but at great prices and unbeatable customer service.
That's the Ting secret recipe.
They're an MVNO, so they get to focus on you, not building towers and relationships with
legal people in the local jurisdictions.
It's a whole mind shit for them and so they get to focus on things like customer service,
innovative plans, combining multiple networks, making sure you could do everything from their
dashboard and every single plan gets access to Ting's award winning customer service and
nationwide LTE and 5G service.
Ting was also named the number one carrier by Consumer Reports in 2021 because they have
this great combination.
It's simple to switch to Ting, start saving money right now because pretty much any phone
will work so you can likely take your existing phone or you can pick up a new one for a great
price and take 25 bucks off by visiting Linux dot Ting dot com.
Go check your phone, create an account and pick the plan that's right for you.
Linux dot Ting dot com.
For our last story today, we thought we'd take a look at the Debian Project's efforts
to implement the User Merge.
If you don't regularly dive into the Linux file system layout, well here's a little refresher.
The User Merge is a plan initially popularized by Leonard Pottering back in 2012 that aims
to simplify the file system layout of Linux distributions and increase their compatibility
with other Unix-like operating systems.
At its core, it's a pretty straightforward plan.
The basic idea is you take any files that you have under slash bin and you move all
of them to slash user slash bin.
Then you turn slash bin itself into just a symbolic link that points at slash user slash
bin.
That way, regardless of which location a program is trying to find the binary, it's gonna find
it.
You can just do the same thing for other top-level directories like slash sbin or slash lib.
But ever since this idea got introduced to the Debian Project some six years ago, it
has turned into a point of contention within the community.
Some recent events have maybe prolonged that pain, but perhaps the end is in sight.
Fedora, Arch, Ubuntu, and many other distros have made this change already.
And made it a while ago.
Fedora 17 made this change in 2012.
Arch made this change in 2013.
But the Debian Project has taken a more incremental approach and seemingly run into issues at
every step of the way.
This is kind of a classic Debian story in a way.
Their technical committee has chosen a direction for the distribution, decided we're gonna
have it in this release, but has actually no authority to quote-unquote force these
developers to spend their time working on it.
In fact, the Debian Constitution does not allow the committee to override a developer's
decision.
So if they decide for a packaging reason or some legitimate reason this isn't gonna work,
they can't make them do the work.
It's also a classic Debian story in the sense that Debian just seems to really be struggling
to do something that other distributions pulled off ages ago, and I get no joy in saying this.
And just like many times before, like you dig into the issue, it's like, okay, there's
some pretty understandable reasons here.
They've run into some problems, I get it.
But at the end of the day, you can't help just think to yourself, I wish they could
just get more done because other people have solved this problem.
Yeah, I definitely feel your pain there.
I think maybe the flip side is it highlights how different Debian is as a project than
many of the distributions that we otherwise use.
There isn't a giant commercial interest behind it that can kind of just pull the strings
or hire developers to get the things they want to see implemented done.
And if you compare it to something like Arch, well, Arch is just simple, they usually don't
have problems sort of taking things or making changes and just forcing users to adapt.
But Debian takes a different approach.
They have a lot of stakeholders, they have a huge deployment base, and they take the
time to flush these things out in the open.
And that, much like democracy, can take a really long time.
But I think maybe one of the advantages here is, even though it sucks that there's disagreements
and there's people with strong opinions about which way this should go, it does mean that
there's still a very passionate base of Debian developers.
They might be slowing things down here, but at least for the long-term play, I'm glad
they exist.
Yeah, the process can add a lot of time and maybe even be a little messy, a little organic
at times.
I think in the back of my mind, I worry that perhaps where the idea originated has played
a factor in people's acceptance of the idea.
It came out of the SystemD community back in 2012, and back in 2012, anything that came
out of the SystemD community or Lenart Potter indirectly was really controversial.
And so I kind of wonder if that didn't maybe set things off in the wrong direction.
What ends up happening here, Wes, is the technical committee just looks sort of silly.
You know, they set a goal for Debian 10, it doesn't happen.
They set a goal for Debian 11, it's not going to happen.
Debian 12 is not going to happen, and now they're thinking, well, maybe we can get it
done in Debian 13 Trixie when that starts.
It's sort of just completely ineffective.
There needs to be what seems like some sort of compromise, right?
Some kind of line that says, okay, we've decided this, and this is what we're going to do,
and if you're not on board, you kind of move on.
But there's no mechanism in this kind of democracy setup.
What they need, Wes, is a ruler with an iron fist.
I'm kidding, obviously.
Or maybe as Jake Edge over at LWI, who did some great reporting on this story, suspects
it seems like maybe some sort of project elder, you know, someone who's been a long time,
could maybe shepherd this, do a little evangelizing, try to do some organization.
That might be the thing we need in a kind of democracy.
I don't know.
I'm disappointed too, but I think we'll just have to wait and see.
That's an interesting insight, isn't it?
Maybe somebody who could own this thing and drive it and advocate for it.
Yeah, I could see that working.
And if you look back over Debian's history, those kinds of initiatives that have had an
owner like that, had an advocate like that, somebody who can communicate the benefits
and respond to people who have concerns in an open way, in a non-hostile way, has generally
proved to be the most successful route in Debian.
But as of now, it seems like maybe we'll see it land in Debian 13.
Maybe we're starting to see things get addressed, but I think if you're a Debian user and you
are concerned about these kinds of things and you just like to understand the process
a little better, we'll have a link in the show notes for you.
But isn't this just an interesting contrast to have, like you said, just different distributions
that serve different roles.
You have Fedora implementing this in Fedora 17 back in 2012, and here we are in 2022 and
we're still watching Debian debate how they're going to implement it.
Maybe we're not still having this discussion in 2032.
No kidding.
Stay tuned to find out by going to LinuxActionNews.com slash subscribe for this story and all the
other stories we'll cover today and into the future.
And LinuxActionNews.com slash contact Royce to get in touch.
Get a new podcast app, newpodcastapps.com.
Grab one that supports Boost and send a message into the show.
And we'll be back next week with our take on the latest Linux and open source news.
Thanks for joining us.
And that's all the news for this week.
