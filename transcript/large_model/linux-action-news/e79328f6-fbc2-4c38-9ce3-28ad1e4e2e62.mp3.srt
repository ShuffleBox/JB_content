1
00:00:00,000 --> 00:00:05,240
Hello, and welcome to Linux Action News.

2
00:00:05,240 --> 00:00:08,920
Episode 155, recorded on September 20th, 2020.

3
00:00:08,920 --> 00:00:09,920
I'm Chris.

4
00:00:09,920 --> 00:00:10,920
And I'm Joe.

5
00:00:10,920 --> 00:00:11,920
Hello, Joe.

6
00:00:11,920 --> 00:00:12,920
Good to be connected with you.

7
00:00:12,920 --> 00:00:15,600
And we start this week with a brand new shiny GNOME.

8
00:00:15,600 --> 00:00:22,800
Yeah, there's quite a lot of GNOME news this week, but yeah, 3.38, Orbis, has been released.

9
00:00:22,800 --> 00:00:26,440
Lots of small improvements that add up to a pretty good GNOME release.

10
00:00:26,440 --> 00:00:27,440
Absolutely.

11
00:00:27,440 --> 00:00:33,440
As a result of six months of hard work by the GNOME community, 27,000 changes, 901 different

12
00:00:33,440 --> 00:00:34,720
contributors.

13
00:00:34,720 --> 00:00:38,360
And for users of the desktop, there's a lot of quality of life improvements.

14
00:00:38,360 --> 00:00:44,160
I'll tell you the couple that jump out to me is the revamped screen capture app is great.

15
00:00:44,160 --> 00:00:47,760
They've redone the way screen recording works using PipeWire now.

16
00:00:47,760 --> 00:00:51,360
That's really awesome to see that because you know I'm a big PipeWire fan.

17
00:00:51,360 --> 00:00:57,840
We just recently did a update on PipeWire with the developer in Linux Unplugged 3.70

18
00:00:57,840 --> 00:01:01,520
and just totally refreshed my excitement for the way PipeWire is going.

19
00:01:01,520 --> 00:01:05,240
So it's great to see efficiencies built into GNOME now, just thanks to the hard work that's

20
00:01:05,240 --> 00:01:06,600
gone into PipeWire.

21
00:01:06,600 --> 00:01:09,160
But I'll tell you the one that surprised me, Joe.

22
00:01:09,160 --> 00:01:14,760
This time around, I decided to spend a little time with GNOME Maps.

23
00:01:14,760 --> 00:01:19,840
And I got to say, I really like, and I think they're using OpenStreetMap, I really like

24
00:01:19,840 --> 00:01:24,380
the way it displays street labels and highway labels.

25
00:01:24,380 --> 00:01:27,680
It is clearer and easier to read than Google Maps.

26
00:01:27,680 --> 00:01:29,080
And it's nice having it in a native app.

27
00:01:29,080 --> 00:01:32,960
And I've never given Maps really a fair shake.

28
00:01:32,960 --> 00:01:34,440
I just thought, oh, this is interesting.

29
00:01:34,440 --> 00:01:37,540
But unless I was using this on a phone, I don't really get it.

30
00:01:37,540 --> 00:01:41,160
But now when I was trying to like research a route and stuff, I just found it the easiest

31
00:01:41,160 --> 00:01:44,800
to read and the fastest because it's right there on my device.

32
00:01:44,800 --> 00:01:45,960
I actually really like it.

33
00:01:45,960 --> 00:01:48,880
I've been using it on Fedora 33 for a couple of weeks.

34
00:01:48,880 --> 00:01:53,840
For me, what stands out are the little changes they've made, like adding restart as an option

35
00:01:53,840 --> 00:01:59,600
in the system menu and allowing you to put the battery percentage next to the icon.

36
00:01:59,600 --> 00:02:07,160
It's just those little things that GNOME 3 is now so mature that they can focus on adding

37
00:02:07,160 --> 00:02:12,560
those little details to it and tweaking it in little ways to just polish all of the rough

38
00:02:12,560 --> 00:02:13,680
edges off.

39
00:02:13,680 --> 00:02:16,360
I like the ratio we're getting with these releases.

40
00:02:16,360 --> 00:02:21,600
There is a solid ratio of back end performance improvements that are still in that noticeable

41
00:02:21,600 --> 00:02:27,280
category, which if you think about often time, software improvements for performance are

42
00:02:27,280 --> 00:02:32,280
really minor and their net effect can sometimes be felt, but individual fixes aren't typically

43
00:02:32,280 --> 00:02:33,280
felt.

44
00:02:33,280 --> 00:02:37,120
But we are still in that phase with GNOME Shell where individual fixes can still be

45
00:02:37,120 --> 00:02:38,120
felt.

46
00:02:38,120 --> 00:02:41,560
And that's exciting because as an end user, I know that each release gets a little bit

47
00:02:41,560 --> 00:02:42,560
better.

48
00:02:42,560 --> 00:02:46,760
But if you mix in the UI improvements, the quality of life improvements with that, and

49
00:02:46,760 --> 00:02:50,160
I think you get a good ratio and it makes the desktop kind of compelling for somebody

50
00:02:50,160 --> 00:02:55,220
like me who's been on Plasma for a while, I'm looking at this thinking when it ships

51
00:02:55,220 --> 00:03:00,760
in the distros I end up using, I may actually switch back to GNOME with this release.

52
00:03:00,760 --> 00:03:07,440
Also in part because GNOME Web is becoming a more usable secondary browser for me.

53
00:03:07,440 --> 00:03:12,240
I have my primary browser, I have three browsers, I just got so many accounts that I log into

54
00:03:12,240 --> 00:03:17,440
I got like work browsing, personal browsing and fun browsing, or just like I want to have

55
00:03:17,440 --> 00:03:21,520
a web page up or maybe this is just an inbox and that's where the tertiary or secondary

56
00:03:21,520 --> 00:03:25,800
browser comes in and GNOME Web is kind of getting there for me.

57
00:03:25,800 --> 00:03:29,680
There's been a number of improvements in this cycle and I can't believe I'm actually saying

58
00:03:29,680 --> 00:03:32,300
this, but it's kind of appealing to me.

59
00:03:32,300 --> 00:03:36,800
I did play around with the applications grid and how you can reorder it now and you can

60
00:03:36,800 --> 00:03:40,080
drag icons on top of each other and make folders.

61
00:03:40,080 --> 00:03:46,160
I found that a little bit buggy, like once I'd made a folder I had to go back to the

62
00:03:46,160 --> 00:03:50,920
desktop and then back into the application grid for it to work.

63
00:03:50,920 --> 00:03:55,540
This was on the daily image of Ubuntu 2010 though, so I'm not sure exactly where that

64
00:03:55,540 --> 00:03:56,540
bug lies.

65
00:03:56,540 --> 00:04:01,320
Hopefully it'll be fixed by the time it comes out, but I do like that customization because

66
00:04:01,320 --> 00:04:06,580
GNOME traditionally hasn't been that customizable, so anything that adds customizability is going

67
00:04:06,580 --> 00:04:08,200
to be good in my book.

68
00:04:08,200 --> 00:04:13,080
True, and while we're talking about issues with 3.38, keep in mind this one also ships

69
00:04:13,080 --> 00:04:14,120
with a new tracker.

70
00:04:14,120 --> 00:04:16,440
That's the file system indexer.

71
00:04:16,440 --> 00:04:21,360
This could be fine, but it also could have some performance trade-offs.

72
00:04:21,360 --> 00:04:23,340
I have not properly tested this yet.

73
00:04:23,340 --> 00:04:25,200
I'm not saying that it does.

74
00:04:25,200 --> 00:04:29,760
I'm saying this is an area that requires further testing and monitoring here at JB and then

75
00:04:29,760 --> 00:04:33,560
I'll be able to report on the full impact, but it's going to take a little bit because

76
00:04:33,560 --> 00:04:36,840
you got to build up this index, you got to use it for a while, so this is one of those

77
00:04:36,840 --> 00:04:42,400
things where performance implications of this might not be felt until weeks into usage of

78
00:04:42,400 --> 00:04:43,400
3.38.

79
00:04:43,400 --> 00:04:47,480
However, the project seems to be pretty happy about it, and they say some of the major improvements

80
00:04:47,480 --> 00:04:52,340
in Tracker 3 is that the search engine and database make the Flatpak application sandbox

81
00:04:52,340 --> 00:04:57,680
more secure by allowing control over what kinds of data your apps can search and query,

82
00:04:57,680 --> 00:05:01,360
so you have a little more control there as well, or potentially as an end user I would

83
00:05:01,360 --> 00:05:05,480
think you could just turn it off and say Tracker can't index this app at all, if that's your

84
00:05:05,480 --> 00:05:06,480
preference.

85
00:05:06,480 --> 00:05:10,680
But you know, I tried this out on my little Vivo book, which is pretty old, I think it's

86
00:05:10,680 --> 00:05:16,960
like a second generation i3, so it's really not very powerful, and it did feel a bit sluggish,

87
00:05:16,960 --> 00:05:22,400
but then I logged out, changed the session to Xubuntu, and it was much faster.

88
00:05:22,400 --> 00:05:28,200
I know, okay, maybe that's not the target hardware for it, but it's still, for all the

89
00:05:28,200 --> 00:05:32,640
performance improvements, it's still not going to compete with something like XFCE.

90
00:05:32,640 --> 00:05:37,160
Do you think you perceive just the rendering time, like animating things in and out, as

91
00:05:37,160 --> 00:05:41,600
a performance difference, where I would assume in XFCE there is no fade in or fade out of

92
00:05:41,600 --> 00:05:45,840
menus of any such, it's just as fast as it can render to the screen?

93
00:05:45,840 --> 00:05:47,480
That could be it, possibly.

94
00:05:47,480 --> 00:05:54,240
It could be just a feeling, but even websites seem to be quicker, as if there was just more

95
00:05:54,240 --> 00:05:58,360
resources to go around, because this laptop I'm talking about, it's an old i3, it's only

96
00:05:58,360 --> 00:06:04,960
got 4 gigabytes of RAM, not upgradable, so you really need something light, and it could

97
00:06:04,960 --> 00:06:05,960
be perception.

98
00:06:05,960 --> 00:06:10,440
I don't know, I didn't do any benchmarks, but I just went back into XFCE and just felt

99
00:06:10,440 --> 00:06:14,280
much more at home, and things just felt much quicker.

100
00:06:14,280 --> 00:06:15,280
Yeah, fair enough.

101
00:06:15,280 --> 00:06:19,280
I mean, I could see there's probably not only your experience with it and your familiarity

102
00:06:19,280 --> 00:06:23,320
with it, but I could see on a lower end system the GPU's doing less stuff, maybe it does

103
00:06:23,320 --> 00:06:25,120
render things a little faster.

104
00:06:25,120 --> 00:06:31,520
For me, I'm comparing it to Plasma as my daily driver, but I'm also very familiar with Gnome

105
00:06:31,520 --> 00:06:37,800
Shell, and so I see this as a performance improvement from where I've been at, which

106
00:06:37,800 --> 00:06:40,880
is kind of funny, so that's my experience, it's like, oh, this is great.

107
00:06:40,880 --> 00:06:46,080
Yeah, well I'm sure on my 10th Gen i5 desktop it would be absolutely fine, but I wanted

108
00:06:46,080 --> 00:06:50,800
to test it on some older hardware to see how these performance improvements have worked,

109
00:06:50,800 --> 00:06:56,640
and I think it is faster than it once was, but it still just can't compete with desktops

110
00:06:56,640 --> 00:06:59,280
that are just older-fashioned, I suppose.

111
00:06:59,280 --> 00:07:04,360
I'm curious what your older-fashioned preference thinks about the new Gnome versioning scheme,

112
00:07:04,360 --> 00:07:05,560
so get ready for this.

113
00:07:05,560 --> 00:07:11,880
The next version of Gnome due to be released in March 2021 will be Gnome 40.

114
00:07:11,880 --> 00:07:18,840
Well, one thing is it's going to stop people saying 3.38 when they mean 3.38, so that's

115
00:07:18,840 --> 00:07:19,840
good.

116
00:07:19,840 --> 00:07:23,960
And I think that it ultimately makes more sense.

117
00:07:23,960 --> 00:07:26,800
At first I thought, this is ridiculous, what are you doing?

118
00:07:26,800 --> 00:07:32,080
But then if you actually read what Emmanuel Bassi says about this in his post on the Gnome

119
00:07:32,080 --> 00:07:38,960
Discourse, you realize that it does make sense, because I was expecting Gnome 4 to be when

120
00:07:38,960 --> 00:07:45,640
they changed to GTK 4, but what he's saying is that they don't want to have huge changes

121
00:07:45,640 --> 00:07:50,320
happen at specific milestone numbers.

122
00:07:50,320 --> 00:07:55,060
They want it to be much more incremental, and they don't want to have a huge change

123
00:07:55,060 --> 00:08:00,480
like from Gnome 2 to Gnome 3, which was just a complete paradigm shift.

124
00:08:00,480 --> 00:08:09,160
They want to gradually introduce things, and making it 40.1.2.3 makes more sense to do

125
00:08:09,160 --> 00:08:10,160
that, I think.

126
00:08:10,160 --> 00:08:11,680
Yeah, that's a compelling argument.

127
00:08:11,680 --> 00:08:16,480
I will admit my reaction was also sort of like, what the hell, and then my second reaction

128
00:08:16,480 --> 00:08:21,160
was, have they talked to the OpenSUSE folks who are trying to undo the 4.2 versioning

129
00:08:21,160 --> 00:08:23,160
scheme that they came up with?

130
00:08:23,160 --> 00:08:25,440
Maybe they should synchronize.

131
00:08:25,440 --> 00:08:26,720
Don't even get me started on OpenSUSE.

132
00:08:26,720 --> 00:08:31,360
I could not tell you what version they want of anything, I'd have to look it up.

133
00:08:31,360 --> 00:08:38,360
At least with Gnome, it was obvious that this is 38 now, and you know that the even numbers

134
00:08:38,360 --> 00:08:42,400
are stable releases, the odd numbers are development releases.

135
00:08:42,400 --> 00:08:47,560
But Emmanuel makes the point in this post as well, that those even odd numbering things

136
00:08:47,560 --> 00:08:51,320
don't really make any sense anymore, because everything's developed with continuous integration

137
00:08:51,320 --> 00:08:55,280
and stuff that no one's really using the development releases anymore.

138
00:08:55,280 --> 00:08:58,200
No, the more and more of the world is moving to rolling.

139
00:08:58,200 --> 00:08:59,200
Rolling or CI.

140
00:08:59,200 --> 00:09:00,200
It is.

141
00:09:00,200 --> 00:09:01,200
I know.

142
00:09:01,200 --> 00:09:04,680
I'm just teasing you a little bit.

143
00:09:04,680 --> 00:09:09,440
Honestly, I think you've got to read this post, because he does lay it out in such logical

144
00:09:09,440 --> 00:09:14,240
detail, and you might be thinking, no, that's just ridiculous if you only read the headline

145
00:09:14,240 --> 00:09:18,800
like I did, and it sounds like you did as well, but I was convinced by this.

146
00:09:18,800 --> 00:09:22,940
And he says in that post as well, we're not changing the way GTK is versioned.

147
00:09:22,940 --> 00:09:29,120
So that kind of when you realize, okay, yeah, that would have been confusing to have Gnome

148
00:09:29,120 --> 00:09:34,000
4 and GTK 4, but not really have them be one in the same and not have them connected.

149
00:09:34,000 --> 00:09:37,240
He preemptively answers in this post his question.

150
00:09:37,240 --> 00:09:39,200
This is nonsensical.

151
00:09:39,200 --> 00:09:41,480
Why do you want to change the versioning scheme at all?

152
00:09:41,480 --> 00:09:42,480
It's just numbers.

153
00:09:42,480 --> 00:09:46,660
And his answer is, numbers, like words, have meaning and tell a story.

154
00:09:46,660 --> 00:09:50,280
With a change in the versioning scheme, we wish to communicate the fact that Gnome doesn't

155
00:09:50,280 --> 00:09:55,680
see major versions of the development platform as the driving force behind major changes

156
00:09:55,680 --> 00:10:00,560
in the user experience, and that radical changes to the user experience are going to be introduced

157
00:10:00,560 --> 00:10:07,240
progressively, so that we can refine and iterate them over time, instead of dumping them in

158
00:10:07,240 --> 00:10:09,100
our user's lap.

159
00:10:09,100 --> 00:10:14,640
So what this really means for end users of Gnome Desktop is in March 2021, what it says

160
00:10:14,640 --> 00:10:19,240
in the Gnome version in the about section of Gnome Control Center, we'll say 40.

161
00:10:19,240 --> 00:10:21,120
That's really the end user impact here.

162
00:10:21,120 --> 00:10:25,120
Yeah, and there won't be a huge change when GTK 4 comes.

163
00:10:25,120 --> 00:10:29,660
They're going to try and make it less of a huge upsetting change.

164
00:10:29,660 --> 00:10:35,200
Maybe this is more reflective of the position Gnome has as a bit of a workstation OS on

165
00:10:35,200 --> 00:10:38,400
almost every OEM system that ships with Linux right now.

166
00:10:38,400 --> 00:10:42,960
Well, yeah, and every big distro that's shipping a desktop is shipping Gnome.

167
00:10:42,960 --> 00:10:49,040
But also making this workstation grade is finally addressing the extensions.

168
00:10:49,040 --> 00:10:52,680
I think there's a clear market for Gnome Shell extensions.

169
00:10:52,680 --> 00:10:57,640
They add clear utility and value to my desktop experience, and it seems many others.

170
00:10:57,640 --> 00:11:02,840
And so there is a bit of an initiative to reboot the project's approach to extensions.

171
00:11:02,840 --> 00:11:06,000
Yeah, and they're calling it extensions rebooted.

172
00:11:06,000 --> 00:11:07,560
What is extensions rebooted?

173
00:11:07,560 --> 00:11:13,520
It is an attempt to address the myriad of issues around the Gnome Shell extension ecosystem.

174
00:11:13,520 --> 00:11:19,080
Primarily, they want to build a process around how extensions are accepted into the extensions

175
00:11:19,080 --> 00:11:22,040
website and how they are supported.

176
00:11:22,040 --> 00:11:26,560
Rather than being the free for all that it has been, they want some order out of the

177
00:11:26,560 --> 00:11:27,560
chaos.

178
00:11:27,560 --> 00:11:31,880
And I don't know if this is manifesting so much as like, here's a stable Gnome extensions

179
00:11:31,880 --> 00:11:33,880
API for you to use.

180
00:11:33,880 --> 00:11:39,840
But it may manifest as proper documentation on how extensions work and reasonable expectations

181
00:11:39,840 --> 00:11:45,360
to be an extensions developer, how to participate in the Gnome extensions community, a CI pipeline

182
00:11:45,360 --> 00:11:50,080
that has a virtual machine on the back end that can spin the desktop up in multiple versions

183
00:11:50,080 --> 00:11:55,720
and test these things, centralizing extensions for break testing on the Gnome GitLab space,

184
00:11:55,720 --> 00:11:59,240
and potentially maybe even creating a forum for extension developers and extension writers

185
00:11:59,240 --> 00:12:01,700
to work together for a Gnome release cycle.

186
00:12:01,700 --> 00:12:05,640
They all kind of go off into their own individual extension islands right now, and then just

187
00:12:05,640 --> 00:12:07,160
rush to update.

188
00:12:07,160 --> 00:12:10,800
There's some collaboration, but not nearly as much as there could be.

189
00:12:10,800 --> 00:12:15,120
And if maybe the project could even facilitate just those things, I could see that potentially

190
00:12:15,120 --> 00:12:16,560
going a really long way.

191
00:12:16,560 --> 00:12:21,400
Yeah, just starting the conversation and getting people together could be enough to at least

192
00:12:21,400 --> 00:12:25,620
improve the situation where you're not worrying whether your extensions are going to break

193
00:12:25,620 --> 00:12:26,620
every update.

194
00:12:26,620 --> 00:12:28,400
Yeah, very much so.

195
00:12:28,400 --> 00:12:33,520
Sharing some of that work to get the extensions working with the next release could be a huge

196
00:12:33,520 --> 00:12:35,600
relief for the community.

197
00:12:35,600 --> 00:12:39,360
And if this initiative really, like you say, does nothing other than just get these individual

198
00:12:39,360 --> 00:12:44,580
developers talking to each other and collaborating, that made itself just be a success and improve

199
00:12:44,580 --> 00:12:46,320
the situation on Gnome.

200
00:12:46,320 --> 00:12:50,840
I mean, if I had a checklist of things I'd love to see, it'd be everything we just discussed.

201
00:12:50,840 --> 00:12:54,800
And also, here's a stable API for you to use.

202
00:12:54,800 --> 00:12:55,800
You just might not be there.

203
00:12:55,800 --> 00:12:59,280
And maybe I'm just naive, but it seems like that would be fantastic.

204
00:12:59,280 --> 00:13:03,300
But absent of that, all of this initiative seems like it really could get us a long way

205
00:13:03,300 --> 00:13:08,960
to improving that experience, which as a potential switcher back to Gnome Shell, making sure

206
00:13:08,960 --> 00:13:13,400
the extensions I choose stick around really matters to me.

207
00:13:13,400 --> 00:13:18,280
Because I have put a ton of work into whittling down the ones I use to just the essentials.

208
00:13:18,280 --> 00:13:21,640
And the ones I stick with, I really want, I really want.

209
00:13:21,640 --> 00:13:25,260
But I always know in the back of my mind, it's a risk that they could go away with the

210
00:13:25,260 --> 00:13:26,260
next release.

211
00:13:26,260 --> 00:13:30,640
Yeah, I always worry about that when I'm using Gnome every day.

212
00:13:30,640 --> 00:13:33,480
Now you're more worried about what's going on with Chromebooks.

213
00:13:33,480 --> 00:13:39,540
How do you think you say this one, lacrosse?

214
00:13:39,540 --> 00:13:45,800
I think I would say lacrosse, as in the game, where you have those sticks with the baskets

215
00:13:45,800 --> 00:13:46,800
on them, maybe.

216
00:13:46,800 --> 00:13:50,480
Yeah, I would prefer it to be Lacroix, which I wish I had right now.

217
00:13:50,480 --> 00:13:59,560
But this kind of has been spotted by 9to5Google, who caught changes in the upstream ChromeOS

218
00:13:59,560 --> 00:14:00,560
code, right?

219
00:14:00,560 --> 00:14:04,020
Yeah, this has kind of been filtering through various news sites with different people picking

220
00:14:04,020 --> 00:14:07,380
up on different aspects of it over the last couple of weeks.

221
00:14:07,380 --> 00:14:09,560
But it caught my attention this week.

222
00:14:09,560 --> 00:14:16,420
And the crux of it is that Google are in the process of decoupling Chrome, the browser,

223
00:14:16,420 --> 00:14:18,020
from ChromeOS.

224
00:14:18,020 --> 00:14:21,200
And that means that they can be updated independently.

225
00:14:21,200 --> 00:14:27,960
So what Google is doing is creating a Linux desktop that runs a web browser application.

226
00:14:27,960 --> 00:14:31,640
Yeah, rather than it being completely baked into it.

227
00:14:31,640 --> 00:14:36,880
Like we saw with Firefox OS, where you could only update the browser by updating the whole

228
00:14:36,880 --> 00:14:39,500
system, which didn't make any sense.

229
00:14:39,500 --> 00:14:44,180
But with Google's frequent updates with Chromebooks, that's not really been a problem up until

230
00:14:44,180 --> 00:14:45,240
now.

231
00:14:45,240 --> 00:14:51,560
But maybe they're thinking longer term here, that once they stop supporting a particular

232
00:14:51,560 --> 00:14:56,600
Chromebook, the OS doesn't get any updates, but they can at least update the browser potentially,

233
00:14:56,600 --> 00:14:58,100
if it's decoupled.

234
00:14:58,100 --> 00:14:59,640
That has to be part of this.

235
00:14:59,640 --> 00:15:01,640
Some Chromebooks, you know, eight years of support.

236
00:15:01,640 --> 00:15:03,960
That's a long time to update the OS.

237
00:15:03,960 --> 00:15:09,560
So I could also see wanting to decouple that just for testing purposes and shipping purposes.

238
00:15:09,560 --> 00:15:13,360
But something else that's kind of interesting in this story is part of what's making this

239
00:15:13,360 --> 00:15:19,240
possible for Googles to do with a fully accelerated setup the way they want is utilizing Wayland.

240
00:15:19,240 --> 00:15:25,240
So in this new, separated Linux distro with a Chrome browser on top of it, all of the

241
00:15:25,240 --> 00:15:30,320
native 3D accelerated experience that they guarantee on a Chromebook today is going to

242
00:15:30,320 --> 00:15:33,160
be delivered with Chrome on Wayland.

243
00:15:33,160 --> 00:15:34,160
Yeah.

244
00:15:34,160 --> 00:15:37,600
When I was reading this, it was almost like I could hear your bell ringing in my head

245
00:15:37,600 --> 00:15:38,600
when I saw that.

246
00:15:38,600 --> 00:15:43,840
I thought, hmm, this means that Chrome, which is the most popular browser and let's face

247
00:15:43,840 --> 00:15:50,000
it is very well used on Linux, not by me personally as a full time browser, but nevertheless it's

248
00:15:50,000 --> 00:15:51,000
still installed.

249
00:15:51,000 --> 00:15:57,300
But it means that Chrome on Linux is going to get first class support from Google.

250
00:15:57,300 --> 00:16:01,060
They're going to really care about this on Wayland as well.

251
00:16:01,060 --> 00:16:05,080
This is good news for the Linux desktop if you use Chrome.

252
00:16:05,080 --> 00:16:06,240
And I have to caveat that.

253
00:16:06,240 --> 00:16:11,000
Obviously there are a lot of people who will only use free software and default to Firefox,

254
00:16:11,000 --> 00:16:15,480
but I think there's a lot of people out there on the Linux desktop running the Chrome browser

255
00:16:15,480 --> 00:16:17,720
and this is very good news for those people.

256
00:16:17,720 --> 00:16:18,720
Yeah.

257
00:16:18,720 --> 00:16:22,600
It seems to me that you could look at this as potentially Google acknowledging that there

258
00:16:22,600 --> 00:16:27,960
is a important division of users that they want for their browser that are on the Linux

259
00:16:27,960 --> 00:16:33,160
desktop and the best way to deliver the best version of Chrome is to focus on the Linux

260
00:16:33,160 --> 00:16:36,960
desktop app and then ship that on their Chrome OS distro.

261
00:16:36,960 --> 00:16:42,360
They note in their lacrosse documents that they do expect there to be a slight performance

262
00:16:42,360 --> 00:16:47,040
impact by this change because instead of it all being one integrated piece where the browser

263
00:16:47,040 --> 00:16:51,960
is literally integrated with their display manager, Chrome browser will have to use APIs

264
00:16:51,960 --> 00:16:54,680
to now communicate with its Chrome host OS.

265
00:16:54,680 --> 00:17:00,760
And so they warn of maybe a one to two millisecond skew in performance.

266
00:17:00,760 --> 00:17:05,080
Now I don't know really at the end of the day how you even know if you're a Chrome OS

267
00:17:05,080 --> 00:17:06,360
user this has happened.

268
00:17:06,360 --> 00:17:09,720
It may just be one day Chrome OS updates and they've just separated the two and there's

269
00:17:09,720 --> 00:17:13,040
really no obvious front end user experience to it.

270
00:17:13,040 --> 00:17:14,040
But I agree with you.

271
00:17:14,040 --> 00:17:18,560
I think this is great news for Chrome users of Linux and to me it suggests that Google

272
00:17:18,560 --> 00:17:23,820
sees a larger market here that they need to address and that their current half-assed

273
00:17:23,820 --> 00:17:28,840
approach to Chrome on Linux is insufficient and this is them getting their game together

274
00:17:28,840 --> 00:17:34,400
for the Linux desktop and that to me is even a louder signal than this what seems to be

275
00:17:34,400 --> 00:17:36,800
a much overlooked move for Chrome OS.

276
00:17:36,800 --> 00:17:37,800
I disagree.

277
00:17:37,800 --> 00:17:41,480
I'm afraid I don't think they particularly care about the Linux desktop.

278
00:17:41,480 --> 00:17:46,720
I know that it's growing and it's a valuable segment of the market because there's a lot

279
00:17:46,720 --> 00:17:50,800
of developers and IT professionals and all the rest of it is in Linux but I think there

280
00:17:50,800 --> 00:17:56,320
are far far more people using Chrome OS and I think that it's much more of a sort of happy

281
00:17:56,320 --> 00:18:00,040
byproduct that it's going to be good for the Linux desktop.

282
00:18:00,040 --> 00:18:02,440
I don't think that was forefront in their mind at all.

283
00:18:02,440 --> 00:18:08,680
I think it was all about Chrome OS and making that easier to update and support longer term.

284
00:18:08,680 --> 00:18:10,380
Maybe that is extremely possible.

285
00:18:10,380 --> 00:18:17,480
The one thing that gives me pause with that is they knew going in to building these Chromebooks

286
00:18:17,480 --> 00:18:22,180
and building Chrome OS and signing up for eight years of support they knew this would

287
00:18:22,180 --> 00:18:23,180
be a problem.

288
00:18:23,180 --> 00:18:25,340
Those engineers at Google are very clever.

289
00:18:25,340 --> 00:18:30,720
And so they've now decided to fundamentally change the way they architect that OS in a

290
00:18:30,720 --> 00:18:34,800
radical way and it's a pretty big shift and something's driving that.

291
00:18:34,800 --> 00:18:41,140
It's either the technology to enable that only now recently exists, Wayland, or they've

292
00:18:41,140 --> 00:18:46,160
had a rethink of how they're treating the Linux ecosystem in general and they just want

293
00:18:46,160 --> 00:18:51,440
to forgive the saying essentially kill two browser birds with one browser stone.

294
00:18:51,440 --> 00:18:52,440
Maybe.

295
00:18:52,440 --> 00:18:53,440
Maybe.

296
00:18:53,440 --> 00:18:56,400
Linux.ting.com.

297
00:18:56,400 --> 00:18:57,400
What is Ting?

298
00:18:57,400 --> 00:18:58,400
It's simple wireless.

299
00:18:58,400 --> 00:19:01,120
Just six dollars a month plus your usage on top of that.

300
00:19:01,120 --> 00:19:04,680
What I love about it for me is I'm here at the studio pretty much all the time.

301
00:19:04,680 --> 00:19:05,680
Maybe it's a problem.

302
00:19:05,680 --> 00:19:09,720
And then I head home and in both locations I'm on Wi-Fi.

303
00:19:09,720 --> 00:19:12,000
Why would I pay for data when I'm not using it?

304
00:19:12,000 --> 00:19:13,960
And I'm pretty good at thinking stuff to my phone too.

305
00:19:13,960 --> 00:19:17,280
So that's also like for the tech crowd a leg up.

306
00:19:17,280 --> 00:19:21,040
You pay for what you use a fair price for how much you talk, text and data you use.

307
00:19:21,040 --> 00:19:24,760
They have nationwide coverage, three different carriers coast to coast you can choose from.

308
00:19:24,760 --> 00:19:28,280
I currently am on Verizon but in the past T-Mobile was better for where I sat but I'm

309
00:19:28,280 --> 00:19:29,680
in a new location now.

310
00:19:29,680 --> 00:19:32,240
And something I love about Ting is no contracts.

311
00:19:32,240 --> 00:19:34,000
They don't lock you into a commitment.

312
00:19:34,000 --> 00:19:36,120
You could try Ting risk-free.

313
00:19:36,120 --> 00:19:38,240
Start by going to linux.ting.com.

314
00:19:38,240 --> 00:19:43,560
You'll get a $25 service credit or $25 towards a device and they have a really easy way for

315
00:19:43,560 --> 00:19:44,560
you to check your phone.

316
00:19:44,560 --> 00:19:47,920
When you go to linux.ting.com there's a check your phone link right there.

317
00:19:47,920 --> 00:19:51,120
Just put in your information and that'll give you a pretty good snapshot of your starting

318
00:19:51,120 --> 00:19:52,400
position with Ting.

319
00:19:52,400 --> 00:19:54,960
And then once you do sign up, because I think you'll probably want to when you look at the

320
00:19:54,960 --> 00:19:57,100
pricing, you're in complete control.

321
00:19:57,100 --> 00:19:58,920
You can see your usage at a glance.

322
00:19:58,920 --> 00:20:01,800
You can set usage alerts which is really handy for kid devices.

323
00:20:01,800 --> 00:20:05,740
Think about that too for family members who are not heavy phone users but you want them

324
00:20:05,740 --> 00:20:06,960
to stay connected.

325
00:20:06,960 --> 00:20:08,840
Ting is perfect.

326
00:20:08,840 --> 00:20:10,000
I'm looking at you mom.

327
00:20:10,000 --> 00:20:13,200
And people love using Ting because the customer support is there when you need it.

328
00:20:13,200 --> 00:20:17,400
That dashboard makes things simple and they have a bunch of great devices to choose from.

329
00:20:17,400 --> 00:20:21,680
From a SIM card by itself all the way up to the Galaxy S10 down to a flip phone.

330
00:20:21,680 --> 00:20:22,680
They have the flip phone.

331
00:20:22,680 --> 00:20:26,880
You can also get the iPhone SE directly from Ting but I think a lot of people in our audience

332
00:20:26,880 --> 00:20:31,200
they bring a device because then you can take that $25 credit, you apply it to your account

333
00:20:31,200 --> 00:20:35,840
and it'll likely cover your first month because like the average Ting bill is $23 a month.

334
00:20:35,840 --> 00:20:40,480
You just get started at linux.ting.com.

335
00:20:40,480 --> 00:20:45,120
Well bad news for anyone who was waiting for Firefox send to come back and even worse news

336
00:20:45,120 --> 00:20:47,000
if you also used Firefox notes.

337
00:20:47,000 --> 00:20:49,160
Yeah, double whammy this week.

338
00:20:49,160 --> 00:20:54,060
Now Firefox send was my favorite of the recent tools when they looked like they were going

339
00:20:54,060 --> 00:20:55,920
into different service categories.

340
00:20:55,920 --> 00:21:01,280
And I think it got a loyal audience and I'd used it several times but unfortunately Mozilla

341
00:21:01,280 --> 00:21:06,280
writes some abusive users were beginning to use send to ship malware and conduct spear

342
00:21:06,280 --> 00:21:07,660
phishing attacks.

343
00:21:07,660 --> 00:21:13,240
So this summer they took send offline to address that and they're just kind of leaving it offline.

344
00:21:13,240 --> 00:21:16,600
And I always wondered when they launched it how are they were going to solve this problem.

345
00:21:16,600 --> 00:21:17,600
Yeah, exactly.

346
00:21:17,600 --> 00:21:18,600
You didn't have to sign up or anything.

347
00:21:18,600 --> 00:21:20,360
It was so convenient to use.

348
00:21:20,360 --> 00:21:23,000
It just seemed obvious that it would be abused.

349
00:21:23,000 --> 00:21:26,240
Now it is an open source project so someone may conceivably fork it.

350
00:21:26,240 --> 00:21:32,080
There are some neat like command line implementations already out there and I'll just give a friendly

351
00:21:32,080 --> 00:21:36,300
plug for magic wormhole little quick command line app that I love to send files to folks

352
00:21:36,300 --> 00:21:37,740
just peer to peer.

353
00:21:37,740 --> 00:21:43,000
And notes was a browser extension that you could use to sync text between your computer

354
00:21:43,000 --> 00:21:47,680
and your phone and it was all encrypted and everything and it was well loved by a small

355
00:21:47,680 --> 00:21:49,560
number of people by the sounds of things.

356
00:21:49,560 --> 00:21:55,960
But I just don't think that it had the adoption to justify its existence, which we have to

357
00:21:55,960 --> 00:22:00,240
expect to see more of this as Mozilla have shed a bunch of staff, they're looking to

358
00:22:00,240 --> 00:22:02,960
cut costs, they're going to be casualties.

359
00:22:02,960 --> 00:22:06,000
It sort of makes sense and I think Mozilla is pretty upfront about it in this post.

360
00:22:06,000 --> 00:22:11,400
They say it was essentially us working out our sync back end and we needed a project

361
00:22:11,400 --> 00:22:14,720
that wasn't people's super important passwords.

362
00:22:14,720 --> 00:22:18,680
So it was notes but you know we figured out the tech and now we don't really have the

363
00:22:18,680 --> 00:22:22,720
resources to run it and I think it's pretty fair on that one.

364
00:22:22,720 --> 00:22:27,160
And send also in the grand scheme of things is it looks like a high cost low return kind

365
00:22:27,160 --> 00:22:29,760
of project and it's completely fair they killed it.

366
00:22:29,760 --> 00:22:34,440
One could argue maybe should never have launched but that's a separate discussion and I would

367
00:22:34,440 --> 00:22:38,000
love to see some projects fork this and people have their own self-hosted implementations

368
00:22:38,000 --> 00:22:39,000
of it.

369
00:22:39,000 --> 00:22:41,680
So that's not a bad contribution to the world in the end.

370
00:22:41,680 --> 00:22:44,200
Yeah we can add it to our self-hosted pocket instances.

371
00:22:44,200 --> 00:22:47,800
Oh hang on, still waiting for the source code on that one.

372
00:22:47,800 --> 00:22:50,160
You know they get a lot of goodwill with that one.

373
00:22:50,160 --> 00:22:54,200
But you know I've got a friend who's somewhat interested in Linux and hasn't quite made

374
00:22:54,200 --> 00:22:59,200
the switch yet and he said to me that he used both of these and he was very annoyed that

375
00:22:59,200 --> 00:23:05,480
they were being shut down and it was just yeah okay thanks Mozilla, yet more disappointment.

376
00:23:05,480 --> 00:23:09,240
Yeah that's completely understandable from an end user standpoint who's relying on this.

377
00:23:09,240 --> 00:23:12,360
I think what you're seeing here is Mozilla's had to make some hard choices and we're still

378
00:23:12,360 --> 00:23:14,920
watching the fallout from that.

379
00:23:14,920 --> 00:23:18,720
Yeah and I think there's going to be a lot more hard choices to come and ultimately that's

380
00:23:18,720 --> 00:23:20,120
probably good.

381
00:23:20,120 --> 00:23:26,520
They should be focusing on their core products, the browser, maybe Thunderbird as well and

382
00:23:26,520 --> 00:23:30,800
the products that are going to make the money, the services and everything, not on all of

383
00:23:30,800 --> 00:23:34,820
these folly ideas I suppose you could say.

384
00:23:34,820 --> 00:23:38,720
And I think there are going to be more casualties here as they realize that they have to cut

385
00:23:38,720 --> 00:23:40,880
costs and focus more.

386
00:23:40,880 --> 00:23:46,440
And ultimately that's the only thing that's going to save them I think long term is focus.

387
00:23:46,440 --> 00:23:49,240
That's the scope of the problem we're talking about.

388
00:23:49,240 --> 00:23:56,200
It's not lost on me and it's not lost on Joe that almost every week there is another piece

389
00:23:56,200 --> 00:24:00,880
to the story about Mozilla on this show and that's remarkable if you think about it.

390
00:24:00,880 --> 00:24:06,200
That is the unwinding of a very complicated story that we are all seeing play out in front

391
00:24:06,200 --> 00:24:11,600
of us happening in real time and this is another piece in that chain.

392
00:24:11,600 --> 00:24:15,640
And I suspect the links earlier made these links inevitable.

393
00:24:15,640 --> 00:24:17,680
It doesn't mean that Firefox isn't still shipping.

394
00:24:17,680 --> 00:24:22,400
In fact Firefox 81 is now rolling out to users of the Play Store on Android.

395
00:24:22,400 --> 00:24:25,560
Yeah and this is something that you need to update to.

396
00:24:25,560 --> 00:24:31,520
If you've been stuck on 68 deliberately because you know that a bunch of things have changed

397
00:24:31,520 --> 00:24:37,100
and let's face it they're not improvements it's a bad idea to stick on 68.

398
00:24:37,100 --> 00:24:43,380
You need to update because simply being connected to the same LAN as an attacker and having

399
00:24:43,380 --> 00:24:48,360
the browser open is enough to make you pretty vulnerable.

400
00:24:48,360 --> 00:24:51,720
Sticking around on version 68 that's something that people are doing on the Android platform

401
00:24:51,720 --> 00:24:52,720
right now?

402
00:24:52,720 --> 00:24:58,440
Yeah there was a huge gap between Firefox 68 on Android and Firefox 79 where they were

403
00:24:58,440 --> 00:25:03,860
keeping 68 updated while they worked on 79 and then they dropped 79 and pretty much

404
00:25:03,860 --> 00:25:08,940
everyone hated it because they just pulled out all the features and so at least my understanding

405
00:25:08,940 --> 00:25:13,860
is there are a bunch of people who are still stuck on 68 kind of waiting for things to

406
00:25:13,860 --> 00:25:19,340
shake out a little bit but really you'd be foolish to do so now with this vulnerability

407
00:25:19,340 --> 00:25:20,340
out there.

408
00:25:20,340 --> 00:25:24,980
The developer that found this Chris Mobley has released a proof of concept so there's

409
00:25:24,980 --> 00:25:31,000
that aspect of this as well which means this is easier for malintended developers let's

410
00:25:31,000 --> 00:25:32,680
say to replicate.

411
00:25:32,680 --> 00:25:37,040
The target just simply has to have the Firefox application running on the phone.

412
00:25:37,040 --> 00:25:38,040
That's it.

413
00:25:38,040 --> 00:25:39,560
You don't need to access any malicious website.

414
00:25:39,560 --> 00:25:41,960
You don't have to click any malicious link.

415
00:25:41,960 --> 00:25:45,000
There's no man-in-the-middle application required.

416
00:25:45,000 --> 00:25:50,000
They can just simply be in a coffee shop the classic cliche coffee shop on the Wi-Fi and

417
00:25:50,000 --> 00:25:53,960
the malicious intender can trick Firefox on your phone into triggering Android's intent

418
00:25:53,960 --> 00:25:57,580
URIs with zero user interaction.

419
00:25:57,580 --> 00:26:02,660
Now the good news is Chris has already reported this issue directly to Mozilla and it's encouraging

420
00:26:02,660 --> 00:26:04,860
to see that they responded right away.

421
00:26:04,860 --> 00:26:09,140
He writes they were quite pleasant to work with providing some good info on where exactly

422
00:26:09,140 --> 00:26:14,100
they think the bug came from and he goes on to say that if you find a Firefox bug he definitely

423
00:26:14,100 --> 00:26:15,920
recommends sending it straight to them.

424
00:26:15,920 --> 00:26:20,680
He says the process was very easy the team members are smart and friendly and it was

425
00:26:20,680 --> 00:26:25,080
a good way to support the project and it helped shape the way people use the web.

426
00:26:25,080 --> 00:26:28,960
That is great to hear that when Mozilla does find out about an issue they seem to handle

427
00:26:28,960 --> 00:26:29,960
it with a lot of grace.

428
00:26:29,960 --> 00:26:33,580
I'm not surprised to hear that at all I've often heard a lot of good things about the

429
00:26:33,580 --> 00:26:35,360
people working at Mozilla.

430
00:26:35,360 --> 00:26:39,340
Well get ready to live with the new Microsoft normal they have submitted a series of patches

431
00:26:39,340 --> 00:26:44,460
to the Linux kernel with the aim being to create a complete virtualization stack with

432
00:26:44,460 --> 00:26:48,060
Linux with the Microsoft hypervisor.

433
00:26:48,060 --> 00:26:52,820
We're talking here Linux running in the root partition with direct access to hardware that

434
00:26:52,820 --> 00:26:55,500
doesn't require Windows for Hyper-V.

435
00:26:55,500 --> 00:27:00,700
Yeah these patches are just RFC request for comments at this stage so this isn't happening

436
00:27:00,700 --> 00:27:06,120
just yet but this is the very first beginnings of it and as you say this means that once

437
00:27:06,120 --> 00:27:11,940
all this gets pushed into the kernel you won't have to have Windows on the root partition

438
00:27:11,940 --> 00:27:18,340
of Hyper-V you can have a complete Linux stack asterisk apart from Hyper-V running on Azure

439
00:27:18,340 --> 00:27:24,180
or potentially other places like maybe Windows subsystem for Linux.

440
00:27:24,180 --> 00:27:25,180
Maybe.

441
00:27:25,180 --> 00:27:32,900
Someone else interesting in this RFC is Microsoft's principal software engineer acknowledged publicly

442
00:27:32,900 --> 00:27:39,180
that quote we drew inspiration from the Zen code in Linux noting that Hyper-V's architecture

443
00:27:39,180 --> 00:27:42,260
is more similar to Zen than it is to KVM.

444
00:27:42,260 --> 00:27:47,260
I just think that's noteworthy having that acknowledgement on the public record that

445
00:27:47,260 --> 00:27:51,700
Zen inspired Hyper-V and a lot of people have good things to say about Hyper-V.

446
00:27:51,700 --> 00:27:56,740
Yeah and it's yet more acknowledgement from Microsoft that Linux is very important and

447
00:27:56,740 --> 00:28:01,100
we'll link to a register article about this and there's something towards the end of it

448
00:28:01,100 --> 00:28:07,100
that really jumped out at me and that was that Windows 10 is on a path to becoming hybrid

449
00:28:07,100 --> 00:28:12,980
Windows slash Linux system and it made me think about how years ago people would predict

450
00:28:12,980 --> 00:28:19,080
that the next version of Windows would be Linux based and they just cut away all the

451
00:28:19,080 --> 00:28:23,740
dead wood all the old compatibility kind of do an Apple pretty much and maybe have some

452
00:28:23,740 --> 00:28:28,760
sort of compatibility layer but base their desktop on Linux and I also know that's ridiculous

453
00:28:28,760 --> 00:28:36,540
that couldn't happen but the more I read about WSL 2 and Azure and Hyper-V the more I think

454
00:28:36,540 --> 00:28:42,860
that maybe just maybe that is where they're going but they're not going to do it overnight

455
00:28:42,860 --> 00:28:47,500
they're not going to have a big Apple style reveal and that's it we're getting rid of

456
00:28:47,500 --> 00:28:52,340
x86 and going to ARM and just deal with it over two years.

457
00:28:52,340 --> 00:28:56,680
It's going to be just creeping bit by bit they'll make the developer story better and

458
00:28:56,680 --> 00:29:02,380
better with the Linux kernel and they'll put more and more stuff over to that until eventually

459
00:29:02,380 --> 00:29:07,740
the NT stuff will just fall by the wayside and you'll end up with a Linux desktop.

460
00:29:07,740 --> 00:29:10,260
I mean is that crazy of me to think that?

461
00:29:10,260 --> 00:29:15,340
I think so I mean I don't want to be the guy that was like no it's never going to happen

462
00:29:15,340 --> 00:29:22,340
and then like in two years it happens but I think this is all about Azure still and

463
00:29:22,340 --> 00:29:28,020
yeah these changes will definitely eventually trickle down to desktop Windows 10 but if

464
00:29:28,020 --> 00:29:34,460
you look at this I believe what they are trying to do is solve a problem for Azure customers

465
00:29:34,460 --> 00:29:39,700
and that is right now if you go run VMs on Azure even if they're Linux VMs underneath

466
00:29:39,700 --> 00:29:44,200
it all they're running on a Windows box and that ultimately has performance limitations

467
00:29:44,200 --> 00:29:48,440
especially when you're trying to scale and that is a limiting factor I think in my opinion

468
00:29:48,440 --> 00:29:54,340
what do I know for Azure and now they can offer a quote complete virtualization stack

469
00:29:54,340 --> 00:30:00,300
with Linux end quote I think that's a key thing for them and along with that they've

470
00:30:00,300 --> 00:30:04,960
also ported Intel's open source cloud hypervisor tool which is a virtual machine monitor written

471
00:30:04,960 --> 00:30:12,160
in rust that normally runs on KVM but they've ported it over to Hyper-V but it's early still

472
00:30:12,160 --> 00:30:15,760
but I think it's an indicator of where their head is at with this is they're looking at

473
00:30:15,760 --> 00:30:22,240
this very much from a services offering standpoint I could see it trickling down all the way

474
00:30:22,240 --> 00:30:27,700
to desktop but I don't know if it has as much practice there because in reality you kind

475
00:30:27,700 --> 00:30:33,260
of achieve this with dual booting right I mean in a way so I don't know for sure I think

476
00:30:33,260 --> 00:30:38,900
it could indicate a future trend line but I'm still not buying the rumor that one day

477
00:30:38,900 --> 00:30:44,300
we're gonna see an official desktop Linux for Microsoft I just I think the GPL is not

478
00:30:44,300 --> 00:30:49,980
necessarily attractive to them in the desktop context in the server side development tools

479
00:30:49,980 --> 00:30:54,380
area I think they're comfortable with it now I don't see that with them on the desktop

480
00:30:54,380 --> 00:31:01,740
yet and going all Linux and shipping the Linux environment means touching a lot of GPL code

481
00:31:01,740 --> 00:31:06,560
yes but they're already doing that they're already shipping Linux kernel updates via

482
00:31:06,560 --> 00:31:11,460
Windows update yeah because it's GPL 2 not 3 and maybe they were worried that it might

483
00:31:11,460 --> 00:31:15,540
switch over to 3 and that would cause them a lot more problems but it's pretty clear

484
00:31:15,540 --> 00:31:20,260
that at least while Torvalds are still around it's going to be GPL 2 and I can't imagine

485
00:31:20,260 --> 00:31:25,540
the Linux Foundation wanting to go the GPL 3 route yeah and so that problem seems to

486
00:31:25,540 --> 00:31:31,860
be solved and I'm not talking two years that's ridiculous I'm talking 10 plus years I'm talking

487
00:31:31,860 --> 00:31:38,620
very very slowly piecemeal bit by bit it starts to rely more and more on the Linux kernel

488
00:31:38,620 --> 00:31:43,460
I don't know I still think it's it's unlikely but it's it seems that it's possible it now

489
00:31:43,460 --> 00:31:49,140
looks like it's possible for the first time to me and the question I think is what happens

490
00:31:49,140 --> 00:31:55,180
if the kernel team says nice but no thanks will Microsoft run their own fork of the kernel

491
00:31:55,180 --> 00:31:59,100
that seems like something they are capable of doing they already do with Azure sphere

492
00:31:59,100 --> 00:32:03,820
so perhaps they would do this for Azure virtualization options as they would just be a Microsoft

493
00:32:03,820 --> 00:32:09,540
kernel and you're right you're like at that point they're so deep in a GPL code that I

494
00:32:09,540 --> 00:32:14,980
think my concern may not be founded because they're about as GPL as it's going to get

495
00:32:14,980 --> 00:32:19,620
now they're right in there with the kernel you know I don't think that these patches

496
00:32:19,620 --> 00:32:25,460
will be rejected because as long as it doesn't affect anything else then it doesn't really

497
00:32:25,460 --> 00:32:29,120
matter and as long as the code is up to scratch and Microsoft's got enough experience now

498
00:32:29,120 --> 00:32:34,020
with dealing with Torvalds and team I don't think that that's going to be a problem right

499
00:32:34,020 --> 00:32:38,940
and they're a valuable member of the Linux Foundation which pays a couple of those paychecks

500
00:32:38,940 --> 00:32:43,780
on the Linux kernel team and I think it's a clever strategy to go in and say it's a

501
00:32:43,780 --> 00:32:50,300
lot like Zen it's you know it's like Zen but with some differences I suppose and whatever

502
00:32:50,300 --> 00:32:53,700
happens with that story and everything else we've been tracking this week we'll keep you

503
00:32:53,700 --> 00:32:58,580
updated we'll keep an eye on it go to linuxactionnews.com subscribe for all the ways to get this particular

504
00:32:58,580 --> 00:33:03,180
show but maybe even better yet go get the all Jupiter broadcasting shows feed you can

505
00:33:03,180 --> 00:33:06,680
get it on the main site or just search in your podcast client not only do you get this

506
00:33:06,680 --> 00:33:12,140
show but anything new we launch you'll get it there first and you can go to linuxactionnews.com

507
00:33:12,140 --> 00:33:16,220
slash contact for ways to get in touch with us we'll be back next Monday with our weekly

508
00:33:16,220 --> 00:33:21,060
take on the latest Linux and open source news you can find me at chrislass.com and you can

509
00:33:21,060 --> 00:33:41,660
find me at joelress.com thanks for joining us and we will see you next week see you later

