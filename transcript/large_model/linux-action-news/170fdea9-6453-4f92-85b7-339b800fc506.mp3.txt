Hello, and welcome to Linux Action News, episode 244, recorded on June 8th, 2022.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
We start with the lizard party this week.
SUSECON 2022 is live as we record, and one of the first things announced, the SUSE Linux
Enterprise 15 Service Pack 4.
Yeah, don't call it a point release.
No, it's a service pack, but really grabbing the headlines for this release is their back-end
switch to the open-source NVIDIA kernel driver.
Now mind you, this is really more for server usage at this point, not for desktops and
gaming.
Yeah, SUSE's reason for using the open-source NVIDIA GPU kernel driver at this point is
really their focus on the cloud-native world, saying, quote, SLEE 15 SP4 is the first major
Linux distribution to deliver it.
Oh, they're clearly excited about that.
And I guess, I mean, fair play, right?
The NVIDIA open GPU kernel driver is already considered production-ready, at least for
data-centered GPUs with the R515 proprietary user-space driver components.
And rounding out some of the other new features, SUSE Linux Enterprise 15 SP4 does meet Google's
SLSA for supply chain compliance, I know you were worried about that, and it adds support
for AMD secure virtualization encrypted state, well, and really a lot more.
And less than 24 hours after SLEE 15 dropped, OpenSUSE Leap 15.4 has already been released.
Yeah, as you're probably already aware, OpenSUSE Leap 15.4 is built from the same sources as
SLEE 15 SP4.
OpenSUSE Leap 15.4 introduces Leap Micro 5.2, which is the newest version of their lightweight
operating system designed for containers and virtualized workloads, you guessed it, in
the cloud.
This latest Leap also introduces improved multimedia codec installation via Cisco's
OpenH264, open source graphics driver improvements, and the inclusion of the NVIDIA RTX 30 signed
firmware packages.
Rounding out the workstation experience, 15.4 includes KDE Plasma 524, GNOME 41, Enlightenment
0.25, and Mate 126.
Back in March, we covered the beta release of Element Call, the voice and video conferencing
solution that's powered by Matrix, but one of the issues we observed was the lack of
end-to-end encryption, and it seems this week, that's been fixed.
Yeah, now initially the Element team shipped with end-to-end encryption disabled because
it limited their ability to debug the new feature, and anyone who's tried to debug,
you know, an API call over HTTPS that you don't control will totally get that.
But with the beta phase kind of wrapping up, and the need for that kind of low-level debugging
being judged as low, the team has felt comfortable enabling end-to-end encryption, which means
your calls over Matrix can only be decrypted by the sender and the receiver, there's no
man in the middle with the keys to your call.
I like that, and the Element team also announced support for spatial audio, saying it was one
of the most fun features to work on, so it allows you to move a video participant around
their tiles, you can move them around on your screen, and when you have this experimental
spatial audio feature enabled, each participant's audio will sound as if it's coming from where
their tile is positioned on your screen.
But the feature that really caught my attention is this walkie-talkie mode.
This release introduces a whole new experimental way of communicating on Element call.
When creating a call, you have the option to choose between a standard video call that
we're all used to, or this new walkie-talkie call option.
If you opt for that version, videos are disabled and everyone is muted by default.
To speak, you gotta push the push to talk button, which you can do either by pressing
it on the screen directly, or by holding the space bar if you're on a test stop.
The catch, though, is that just like a real, physical walkie-talkie or two-way radio, only
one person can speak at a time.
When someone else is speaking, your push to talk button will be disabled, and if you try
to push it, you'll hear a nice little warning beep.
In the announcement, they kind of explained some of the motivation for introducing this
feature.
They say that, well, there's a lot of people out there, such as taxi drivers, truckers,
construction workers, emergency services personnel, and so on, that are just, they're used to
using radio communications.
And they'd like to move away from traditional hardware and on to secure encrypted software
solutions that they can run on any device they choose.
Yeah, that makes sense.
And it's just kind of neat to see how quickly the Element and Matrix folks can iterate now
that they've got some of the bones in place, you know, once you've kind of got the spec
figured out, you start developing these features, I don't think this will be the last neat little
addition built on top of the new calling abilities.
I could also see a dedicated lightweight app that sort of just implemented that feature,
at least, you know, before it rolls out to more clients.
That'd be great.
I'm surprised we're not using a walkie-talkie right now, Wes.
I mean, you could picture like an Android app that's just a big button.
It's just a radio button, right?
I think that'd be a great one.
I'd use the crap out of that with my kids.
Yeah, I think we all would.
I mean, who wants that background noise and breathing anyway?
We should also note that there's lots of work going on to embed Element Call into Element
itself.
Replacing Jitsi is the default conferencing system.
But before you get too excited, this is a two-step process.
First you've got to embed Element Call kind of in the same way that Jitsi is embedded
today.
So you can get rid of Jitsi and then have an embedded Element Call that basically functions
mostly the same way as Jitsi did before.
After that, it's gonna get embedded in a much more tightly integrated way so that it shares
the same underlying matrix stack as the parent Element app, which means you can share access
control and an encryption verification, all the rest of those nice Element features.
And that's not it.
I mean, that's all we're going to highlight today, but there is a lot going on over at
Element and even more so somehow in the wider matrix ecosystem.
Things have just really shifted in the next gear of adoption, and if you haven't yet tried
it, now might be a great time.
Just a double heads up for you, starting with Fedora 34 users, well, I regret to inform
you that your time to move on has arrived.
Fedora 34 reached its end of life a couple of days ago, as we record June 7th, 2022.
And for Ubuntu 21.10 users, well, your clock is ticking too, but you do have just a bit
longer.
21.10 reaches end of life on July 14th, 2022.
Now the good news is that I have heard from multiple folks in the audience that the upgrades
from the latest Fedora and Ubuntu from those end of life releases has actually been pretty
smooth on average.
And a quick little update on the much-anticipated HP Dev1, the popOS-powered AMD-based Linux
laptop.
Not only is it available for ordering now, but shipments seem to be going out pretty
darn quick.
For those of you not familiar with the HP Dev1, the system ships in one default configuration,
which is equipped with an 8-core AMD Ryzen 7 Pro processor, 1TB of PCI and BME storage,
and 16GB of RAM.
That comes with a 14-inch 1000-nit 1080p display at the price point of $1,099, and is only
available in the US for now.
If that piques your interest, you can catch the dev perspective from Michael Dominic's
first hands-on Encoderadio 469, and an old Linux Saltz take this coming Sunday on Linux
Unplugged 462.
Linode makes it possible, simple, affordable, accessible to all of us, enterprises or individuals,
to deploy and manage your projects in the cloud.
Everything we've built in the last couple of years here at JB, we've done it up on Linode.
Our latest projects, they're done on Linode.
Linode's been at this for nearly 19 years, iterating to make it better and better.
And they have some of the best performance with 11 data centers around the world.
Back in May, they launched their managed database service.
That's a great service.
It gives developers access to some popular databases in the cloud, and it shifts some
of the responsibility of maintenance and monitoring onto Linode.
And this week, they're rounding out the offering with Postgres and MongoDB.
And I'm not kidding you.
I'm taking this one, and I'm going to go for it.
I think we're going to move some of our databases to their managed Postgres.
We love Postgres, and I love the way Linode runs their infrastructure.
So you put those two things together, and I think that's just going to make it great.
And you know what?
The reliability for us has been 100%.
And the monitoring is fantastic.
We recently deployed JupyterTube, our PeerTube instance, and I get all kinds of interesting
metrics in their dashboard and alerts when things go a little awry.
It's been really nice.
And I hear from you out there all the time that they have the best support in the business.
So go get that $100.
Build something, try something, learn something, and support the show.
You go to linode.com slash LAN.
Jupyter.party, become a member, support independent content, and get access to all the show's
special feeds, including an ad-free feed of Linux Action News.
That's Jupyter.party to support all the Jupyter broadcasting shows.
And our final story might have been the biggest surprise this week.
As part of Apple's Worldwide Developer Conference, taking place as we record, they've updated
their developer documentation and revealed a tool that enables x86 applications to run
on ARM, but not just Apple's version of ARM, no, any ARM system modern enough to support
at least version 8.2 of the ARM instruction set.
Most of us know this as Rosetta 2, and it's been shipping on M1 Macs since M1 Macs shipped.
And it enables those computers to run code that's built for x86 machines, and those
are ARM-based systems.
But what seems to be new here is Apple has created a Rosetta binary for Linux, intended
to enable running x86 Linux containers and x86 Linux applications on an Apple SOC.
And what's really surprising here is it does not require an Apple CPU, which kind of puts
to bed the myth that Apple's system on a chip had something special baked in specifically
to enable Rosetta and to enable Rosetta's impressive performance.
But no, it seems that what you really need is just a goshdarn modern ARM CPU.
Performance is what we're talking about here.
I mean, that's the big deal, a speed improvement for containers with x86 code in there is going
to be massive because so far, that compatibility has been achieved with slow QMU emulation
that is emulating an entire x86 system.
What's just not so clear is how useful this will be ultimately for those of us running
Linux that aren't on a Mac.
It seems like you might expect getting a Mac with macOS Ace Ventura installed to get access
to the Rosetta Linux binary.
This is definitely early days, but what we've gleaned from the documentation and from some
of the intrepid adventurers who are testing this out is that functionally, you first have
to install Rosetta on the Mac.
Then you mount a shared directory that contains the Rosetta Linux binary into your Linux
virtual machine.
That gets you this shiny new Rosetta Linux binary, which really is an ARM Linux ELF executable
that Apple has created.
But to get it to actually work, you have to do some registration funny business in your
Linux system.
This is done using a feature added to Linux way back in kernel 2.1.43 and later named
the bin-format-misc-module.
According to the patch notes at the time, this feature enables a system administrator
to register interpreters for various binary formats based on a magic number or their file
extension and then cause the appropriate interpreter to be invoked whenever a matching file is
executed.
So, you know, once you've set this up, you've got Rosetta mounted in, you've got it registered
with the system, your kernel is going to see that you're trying to execute an x86 binary
and automatically call the Rosetta to run it for you.
Yeah, it's interesting to see it go this direction.
And it kind of also seems to suggest that Apple plans to keep Rosetta 2 around a lot
longer than they did version one for the PowerPC to Intel transition.
We'll see really where this goes.
What would really be great is to see Apple open this up to the wider ecosystem to publish
this up on GitHub or something like that, ship this as a standalone component that doesn't
require Mac OS so that way developers could put it into their containers while they're
composing them and perhaps would ease the transition from Intel to ARM.
But I won't hold my breath for that one.
If it does happen, though, we'll let you know about that or well, anything else that happens
in the world of Linux and open source news.
So be sure you go to LinuxActionNews.com slash subscribe for all the ways to get new episodes.
And LinuxActionNews.com slash contact for ways to get in touch.
Don't miss this week's episode of Office Hours, a special guest stops by and tells
us about a new open source podcasting app for Android and iOS.
As for us, we'll be back next week with our take on the latest Linux and open source news.
Thanks for joining us.
That's all the news for this week.
