WEBVTT

00:00.000 --> 00:08.600
Hello, and welcome to Linux Action News, episode 147, recorded on March 1st, 2020.

00:08.600 --> 00:09.600
I'm Chris.

00:09.600 --> 00:10.600
And I'm Joe.

00:10.600 --> 00:11.600
Hello, Joe.

00:11.600 --> 00:12.600
Good to be connected with you.

00:12.600 --> 00:17.160
We start with Collabra, who's brought smooth editing to Android and iOS this week.

00:17.160 --> 00:24.720
Yes, finally, a full feature office suite on Android and iOS that is open source.

00:24.720 --> 00:28.360
Yeah, that was the part I was going to underscore, is that's what's so great about this.

00:28.360 --> 00:33.880
The Android and iOS apps are fully open source, and you get full editing features, rich copy

00:33.880 --> 00:35.560
and paste support.

00:35.560 --> 00:39.320
And I decided to load it up on the old iPhone to give it a go.

00:39.320 --> 00:44.320
And to their credit, it immediately populated with recent documents I've edited on this

00:44.320 --> 00:49.600
iPhone that I've saved to the local files, file stores, whatever they call it on iOS.

00:49.600 --> 00:53.960
And it reads them all, I can open them right up, it recognizes this is a markdown document,

00:53.960 --> 00:55.160
I can go in here and edit.

00:55.160 --> 00:59.120
I don't love the way it displays on the phone screen, but if I was on a tablet, this would

00:59.120 --> 01:00.120
be fully usable.

01:00.120 --> 01:05.000
Yeah, I tried it out on Android, and I didn't have any local files for it to open.

01:05.000 --> 01:08.040
So I just was starting from scratch.

01:08.040 --> 01:11.980
And it's okay, it works reasonably well at this stage.

01:11.980 --> 01:14.900
It's nowhere near as good as Google Docs.

01:14.900 --> 01:16.840
So there's a way to go here.

01:16.840 --> 01:19.280
But this is a very important first step.

01:19.280 --> 01:25.260
Because although we've had Collabra as an app before on Android, it was pretty much

01:25.260 --> 01:26.400
read only.

01:26.400 --> 01:31.480
The editing features were very much experimental and just didn't work very well.

01:31.480 --> 01:33.700
Whereas now, it does work.

01:33.700 --> 01:35.560
It's a little bit clunky.

01:35.560 --> 01:39.800
There's a lot of room for improvement, but I'm very happy to see it.

01:39.800 --> 01:43.720
Yeah, clearly competing against Google Docs or Apple's pages is going to be a challenge.

01:43.720 --> 01:47.880
It's an uphill battle to take on the very own platform creators apps.

01:47.880 --> 01:50.680
It's just always a rough fight.

01:50.680 --> 01:54.360
But in the open source ecosystem, this is playing an important role.

01:54.360 --> 01:58.680
But additionally, you can see the network effect and value that Collabra Office users

01:58.680 --> 02:01.580
on the desktop would have with a mobile app now.

02:01.580 --> 02:03.520
And so they'll likely be the top users of this.

02:03.520 --> 02:09.800
It might not skyrocket to the charts on Play or on Apple Store, but it will be very useful

02:09.800 --> 02:12.120
for the established Collabra Office user base.

02:12.120 --> 02:15.000
Yeah, and they're not trying to make this some open source island.

02:15.000 --> 02:21.400
It will work with things like Nextcloud, but it will also work with Dropbox and proprietary

02:21.400 --> 02:22.400
services.

02:22.400 --> 02:24.960
So they are making it easy to switch over.

02:24.960 --> 02:28.520
And I think the most important thing here is that they're rolling this into their paid

02:28.520 --> 02:34.120
for product, Collabra Online, as a very important part of that product.

02:34.120 --> 02:38.880
And they have a clear business model here, which will hopefully lead to this being successful

02:38.880 --> 02:40.460
long term.

02:40.460 --> 02:43.800
As you can probably imagine, this was no small task.

02:43.800 --> 02:50.560
We'll have a link in the show notes at linuxactionnews.com slash 147 to Michael Meeks' blog where he writes

02:50.560 --> 02:56.840
about the process of taking this desktop application, prototyping it for mobile, and then eventually

02:56.840 --> 02:58.880
shipping it as a mobile application.

02:58.880 --> 03:00.600
It's full of really cool geeky details.

03:00.600 --> 03:05.520
Yeah, and the very first screenshot in it shows you how long this has been going because

03:05.520 --> 03:07.840
it looks quite old school.

03:07.840 --> 03:11.360
Those of us in the States have a new default rolling out to Firefox.

03:11.360 --> 03:14.360
Yes, DNS over HTTPS.

03:14.360 --> 03:19.140
We've talked quite a lot about this, but now it is default in the United States.

03:19.140 --> 03:23.780
It's not going to be default anywhere else for the foreseeable future.

03:23.780 --> 03:29.360
But now if you're a Firefox user and you don't change any of your settings, all your DNS requests

03:29.360 --> 03:31.200
are going to Cloudflare.

03:31.200 --> 03:35.520
I've been using this since we first started talking about it just so I could get some

03:35.520 --> 03:37.020
real hands on experience.

03:37.020 --> 03:42.440
And I have not noticed any difference except the one time we rebooted the pie hole here

03:42.440 --> 03:46.760
at the studio and DNS was down for all of the machines, it was still working in Firefox.

03:46.760 --> 03:49.200
And I thought, oh yeah, right.

03:49.200 --> 03:51.560
But I was thinking maybe I'd see a performance improvement or something.

03:51.560 --> 03:53.240
I don't notice any difference.

03:53.240 --> 03:58.520
So they write on the Mozilla blog, which we'll link to again, DNS is a database that links

03:58.520 --> 04:03.200
a human friendly name such as www.mozilla.org to a computer friendly series of numbers

04:03.200 --> 04:04.640
called IP addresses.

04:04.640 --> 04:08.520
By performing a lookup in this database, your web browser is able to find websites on your

04:08.520 --> 04:13.940
behalf because of how DNS was originally designed decades ago.

04:13.940 --> 04:18.500
Browsers doing DNS lookups for websites, even encrypted HTTPS sites had to perform these

04:18.500 --> 04:21.480
lookups without encryption.

04:21.480 --> 04:24.560
At the creation of the internet, these kinds of threats to people's privacy and securities

04:24.560 --> 04:27.640
were known, but not yet exploited.

04:27.640 --> 04:34.040
Today we know that unencrypted DNS is not only vulnerable to spying, but is being exploited.

04:34.040 --> 04:38.660
And so we are helping the internet to make a shift to a more secure alternative.

04:38.660 --> 04:44.980
We do this by performing DNS lookups in an encrypted HTTPS connection.

04:44.980 --> 04:46.680
So I read two things from this, Joe.

04:46.680 --> 04:50.000
Number one, they're kind of making the case of maybe we should have always done it this

04:50.000 --> 04:51.060
way.

04:51.060 --> 04:57.120
And number two, I still feel like the Mozilla organization as a whole is trying to signal

04:57.120 --> 05:01.640
to us that they know about something going on with DNS, but they don't want to publicly

05:01.640 --> 05:05.200
say what it is because they kind of sneak these lines in here.

05:05.200 --> 05:09.680
Like DNS is not only vulnerable to spying, but is being exploited.

05:09.680 --> 05:12.640
They sneak these lines into a lot of these posts, like they know about something that

05:12.640 --> 05:13.960
they're not publicly sharing.

05:13.960 --> 05:17.080
Are you talking about the Snowden revelations?

05:17.080 --> 05:23.440
Maybe or maybe through Firefox metrics or conversations with ISPs, they've learned of

05:23.440 --> 05:29.440
a lot of DNS tomfoolery going on out there for advertising purposes, spying purposes.

05:29.440 --> 05:34.600
I honestly get the sense this is almost a move to protect against government he's dropping.

05:34.600 --> 05:38.800
I don't know if that's going way out there with the old conspiracy bacon, but it almost

05:38.800 --> 05:40.500
feels like that's what this actually is.

05:40.500 --> 05:44.440
When you change a default like this for this many users at this aggressive of a pace, but

05:44.440 --> 05:48.780
you also are constantly making your case, I start to think maybe there's a bigger picture

05:48.780 --> 05:52.200
here that Mozilla is trying to very cleverly communicate to us.

05:52.200 --> 05:57.440
Much like this is an odd comparison, but much like how Canonical is trying to say, hey,

05:57.440 --> 06:03.240
these 32-bit libraries and software are not being properly tested and the backports may

06:03.240 --> 06:05.200
not even be working properly.

06:05.200 --> 06:06.840
We can't guarantee this is secure.

06:06.840 --> 06:12.560
They can't say that, but they try to say it in their own language in the post when they're

06:12.560 --> 06:14.520
talking about deprecating 32-bit support.

06:14.520 --> 06:18.220
They try to communicate it without sounding alarms.

06:18.220 --> 06:19.920
It feels like that's what Mozilla is doing here.

06:19.920 --> 06:27.240
But this is not without its controversy because what they're doing is centralizing DNS.

06:27.240 --> 06:34.000
They argue, and I don't buy the argument, that DNS is centralized anyway because in the US

06:34.000 --> 06:41.040
you have so few ISPs, but at least you have four or five, whereas this by default is pushing

06:41.040 --> 06:46.640
everything through Cloudflare, a company which they say they trust and they have a legal

06:46.640 --> 06:51.380
agreement in place saying that Cloudflare are not going to sell this data or do anything

06:51.380 --> 06:53.400
nefarious with it.

06:53.400 --> 06:58.840
But detractors are saying this is centralizing something which is not centralized at the

06:58.840 --> 06:59.840
moment.

06:59.840 --> 07:03.240
Yeah, and that is, I think, a valid argument.

07:03.240 --> 07:05.920
Of course, the counter argument could be, well, it's software.

07:05.920 --> 07:11.260
They could add 100 DOE servers and then they could have Firefox randomly pick them every

07:11.260 --> 07:12.640
time it does a query.

07:12.640 --> 07:13.920
That could be done.

07:13.920 --> 07:18.640
But Burt Herbert, the founder of PowerDNS, he's one of the vocal opponents of Mozilla

07:18.640 --> 07:19.640
turning this on.

07:19.640 --> 07:23.520
He told the Register in an interview, quote, I find it highly disappointing that Mozilla

07:23.520 --> 07:29.280
has decided on behalf of all users, it deems American, that this was a good idea.

07:29.280 --> 07:35.120
So while encrypted DNS is great, it matters a great deal who you encrypt your DNS to.

07:35.120 --> 07:39.280
Mozilla has dark patterned the choice, so almost everyone will take the new default.

07:39.280 --> 07:43.120
Essentially, they're saying, we decided it's best that you send all your DNS queries to

07:43.120 --> 07:44.360
Cloudflare.

07:44.360 --> 07:51.240
He goes on to add, it's far easier to defend DOE the protocol than to defend DOE the land

07:51.240 --> 07:52.240
grab.

07:52.240 --> 07:53.880
Which is a pretty valid point, isn't it?

07:53.880 --> 07:58.720
I don't think anybody disagrees with it in principle as a technology.

07:58.720 --> 08:00.000
It's just the implementation.

08:00.000 --> 08:06.860
And yes, they have added Next DNS as an alternative, but defaults are king and people will stick

08:06.860 --> 08:07.860
to them.

08:07.860 --> 08:14.200
And so the vast majority of Firefox users in the US will now be using Cloudflare.

08:14.200 --> 08:16.880
And I can see why that makes people uncomfortable.

08:16.880 --> 08:24.200
But that said, anyone who really cares about it, and if you are the admin for an organization,

08:24.200 --> 08:31.320
it's not impossible to completely disable this, or to switch to your own provider, there's

08:31.320 --> 08:33.360
nothing stopping you rolling your own.

08:33.360 --> 08:37.400
So I can understand why Mozilla have done this with Firefox, but I also understand why

08:37.400 --> 08:39.480
some people are annoyed about it.

08:39.480 --> 08:44.720
I think it's quite telling that whilst I have experimented with this, I checked to see if

08:44.720 --> 08:48.000
I'd left it on and I hadn't yesterday.

08:48.000 --> 08:51.040
And I don't think that I will be enabling it.

08:51.040 --> 08:52.400
I don't know why that is.

08:52.400 --> 08:57.880
I just have this strange feeling about Cloudflare.

08:57.880 --> 09:03.040
And I have no evidence for it, but I just feel it's telling that I'm not using this.

09:03.040 --> 09:05.400
And if I was there, I would probably turn it off.

09:05.400 --> 09:10.200
So I think that's fundamentally what it comes down to, is who do you trust less?

09:10.200 --> 09:18.120
And that's why this is such a hard conversation, because my ISP, my upstream DNS is Comcast.

09:18.120 --> 09:23.440
I may trust Cloudflare more than Comcast, at least in 2020.

09:23.440 --> 09:25.600
In 2025, I may feel differently.

09:25.600 --> 09:29.600
But I guess because I put faith in Mozilla's ability to lock them down on this agreement,

09:29.600 --> 09:33.560
which we have talked about in the past, we have reviewed, and does look very legitimate.

09:33.560 --> 09:37.640
And both organizations publicly claim that they have agreed to this.

09:37.640 --> 09:43.680
As long as that remains in place, I trust Cloudflare more than I trust Comcast.

09:43.680 --> 09:48.840
I do kind of see this, I guess I could buy, I should put it, that this is a land grab

09:48.840 --> 09:50.760
by Cloudflare.

09:50.760 --> 09:56.960
But because it took us a total of 45 seconds for us to set up our own Doze server, and

09:56.960 --> 10:00.400
then plug it into Firefox, it's not that big of a deal.

10:00.400 --> 10:07.080
They would just take something like PFSense, and PyHole, and OpenSense, and Linksys routers

10:07.080 --> 10:13.200
to build in Doze servers that would be handed out to clients over DHCP, and this centralization

10:13.200 --> 10:14.480
problem starts to go away.

10:14.480 --> 10:19.840
Yeah, so I suppose the argument is they needed a centralized way to push it out on a big

10:19.840 --> 10:21.000
scale.

10:21.000 --> 10:26.200
But this will hopefully drive people to accept this as the way forward.

10:26.200 --> 10:31.120
And hopefully, as you say, start building it into routers and make it a universal thing

10:31.120 --> 10:32.780
that isn't centralized.

10:32.780 --> 10:36.920
It's one of these technology problems that is easily solvable, but not until you get

10:36.920 --> 10:39.600
people actually using the protocol.

10:39.600 --> 10:44.400
And I think your point there about scale is the one that we should probably end this on.

10:44.400 --> 10:49.480
Fundamentally, who else could handle that scale of users?

10:49.480 --> 10:53.920
There's got to be only a few companies in the world, and Cloudflare is built to be one

10:53.920 --> 10:54.920
of them.

10:54.920 --> 10:55.920
Yeah.

10:55.920 --> 10:56.920
I think you said something.

10:56.920 --> 11:01.120
When you said, it took us 45 seconds to do it, you mean it took Wes 45 seconds.

11:01.120 --> 11:06.280
Yeah, it totally did, because I think that container took 20 seconds to download to begin

11:06.280 --> 11:07.280
with.

11:07.280 --> 11:14.240
But a bit of Firefox news that got lost in all this this week is that they have rolled

11:14.240 --> 11:17.940
out for Mac and Linux users a new sandbox system.

11:17.940 --> 11:22.840
Get out your open source bingo card and cross off Rust, because we've got another Rust solution

11:22.840 --> 11:23.840
for you.

11:23.840 --> 11:29.320
I saw on the post here that they continue to make extensive usable sandboxing and Rust

11:29.320 --> 11:32.040
in Firefox, but each has its limitations.

11:32.040 --> 11:37.680
You have process level, and that works well for sandboxing large, pre-existing components.

11:37.680 --> 11:40.240
But it consumes a lot of resources.

11:40.240 --> 11:45.400
You see this in Chrome, and you kind of see a more sparing approach in Firefox today.

11:45.400 --> 11:52.520
Now Rust is lightweight, but rewriting millions of lines of code in C++, it would take years

11:52.520 --> 11:55.020
and set Firefox back competitively.

11:55.020 --> 11:58.900
They make an example here on their website about the graphite font shaping library.

11:58.900 --> 12:04.260
Now this guy's tricky, because Firefox uses that to render certain complex fonts.

12:04.260 --> 12:08.800
It's too small, though, to put in its own process with all that overhead.

12:08.800 --> 12:11.500
And yet it can be a bit of a memory hazard.

12:11.500 --> 12:15.460
It sort of gets around the process isolation as it is right now.

12:15.460 --> 12:21.260
So that's why they've launched Joe RL Box, which is WebAssembly meets Rust to break off

12:21.260 --> 12:26.880
like individual library type components to isolate those little bits and pieces that

12:26.880 --> 12:29.080
could be exploited even with process isolation.

12:29.080 --> 12:34.160
Yeah, and as you say, this is initially just being used for the graphite font library,

12:34.160 --> 12:40.320
but it is generic enough that it can be used for other stuff within Firefox and potentially

12:40.320 --> 12:41.640
in other applications as well.

12:41.640 --> 12:43.160
And obviously it's all open source.

12:43.160 --> 12:45.200
Yeah, powered by WebAssembly and Rust.

12:45.200 --> 12:47.740
So you know this thing's going to get a lot of attention.

12:47.740 --> 12:52.320
And the beautiful thing is, is it lands on Linux first in Firefox 74.

12:52.320 --> 12:58.960
We get it on Linux and Mac users get it in 75 with Windows support coming sometime soon

12:58.960 --> 12:59.960
in the future.

12:59.960 --> 13:06.640
They're all using Edge anyway, so, you know, all right, well, while we're talking about

13:06.640 --> 13:12.400
the web, Tim Berners-Lee has got this crazy new idea that most of us didn't think was

13:12.400 --> 13:13.400
going anywhere.

13:13.400 --> 13:15.240
But this week, he got Bruce Schneier on board.

13:15.240 --> 13:17.280
Well, that's kind of the tricky thing.

13:17.280 --> 13:21.520
I think Schneier has been working with Inrupt for a little while, but this week was his

13:21.520 --> 13:22.600
public outing.

13:22.600 --> 13:27.080
Inrupt, he writes, think of that as basically the red hat of Solid.

13:27.080 --> 13:31.560
So Solid is the base, and then they are going to package it up and implement it.

13:31.560 --> 13:36.440
Solid was that idea that was Web 3.0 or whatever it would be, like it'd be a replacement to

13:36.440 --> 13:42.480
the web we have today, where your data lives in a pod that's totally controlled by you.

13:42.480 --> 13:47.940
And that could be a pod that's hosted on a cloud pod hosting provider, or it's running

13:47.940 --> 13:53.560
on your LAN, Schneier even daydreams that potentially one day routers would come with

13:53.560 --> 13:55.880
little pod receivers on them.

13:55.880 --> 14:03.520
But the idea is you grant granular access to the data in your pod to whoever you want.

14:03.520 --> 14:08.160
So instead of it being in a bazillion different databases all over the web, just totally disperse

14:08.160 --> 14:13.360
everywhere where you have different security issues and whatnot, you control it all.

14:13.360 --> 14:17.160
So if your insurance company wants to have access to your fitness data, you grant it

14:17.160 --> 14:18.160
through your pod.

14:18.160 --> 14:21.360
And if you don't want them to have access, you don't grant it.

14:21.360 --> 14:25.840
Similarly, like you want to share vacation photos with friends, it'll all be pod access.

14:25.840 --> 14:28.960
And then you'd need something that sits on top of this and kind of makes it all connected

14:28.960 --> 14:29.960
together.

14:29.960 --> 14:33.580
The idea is to be completely distributed if possible.

14:33.580 --> 14:40.120
And I guess this in rep company is bringing together a bunch of big names to try to really

14:40.120 --> 14:42.640
lend some credibility to this whole solid idea.

14:42.640 --> 14:46.560
Yeah, Bruce Schneier joined as chief of security architecture, but there's some other people

14:46.560 --> 14:50.160
who are involved with this now who've got a lot of experience in the industry.

14:50.160 --> 14:54.880
But you know, the more I read about this, the more I feel that I don't get it.

14:54.880 --> 15:02.440
I just feel a bit dumb, maybe it just it feels like this great idea that is just beyond me.

15:02.440 --> 15:07.060
Whether they're not explaining it properly, or I'm dumb, at least that was what I was

15:07.060 --> 15:12.520
feeling until I read a post on the Greater Manchester Combined Authority site.

15:12.520 --> 15:18.780
This is a huge metropolitan area in the north of England, where they talk about using this

15:18.780 --> 15:26.480
technology to safeguard the data of young children of around two and a half years.

15:26.480 --> 15:29.720
And suddenly all kind of clicked into place for me.

15:29.720 --> 15:32.360
That is probably one of the ideal examples.

15:32.360 --> 15:34.240
So good on them.

15:34.240 --> 15:40.640
My issue here is if this were to be successful, it would, it would require a lot of big corporations

15:40.640 --> 15:45.840
getting on board and acting in a way that would reduce value.

15:45.840 --> 15:50.240
For example, the data that Facebook owns, or the data that Google owns is truly their

15:50.240 --> 15:51.760
primary value.

15:51.760 --> 15:54.240
They build everything around that.

15:54.240 --> 15:56.760
Why would they not want to keep that?

15:56.760 --> 16:00.560
Even Schneier writes on his blog, quote, I believe this will fundamentally alter the

16:00.560 --> 16:06.100
balance of power in the world where everything is a computer and everything is producing

16:06.100 --> 16:08.160
data about you.

16:08.160 --> 16:11.000
What we're talking about here, and I'd love to see this happen.

16:11.000 --> 16:12.000
I want to make this clear.

16:12.000 --> 16:17.280
I mean, I would be, I would be happy to see this happen, totally 100%, but we're talking

16:17.280 --> 16:21.880
about a fundamental shift where things go away from being controlled by corporations

16:21.880 --> 16:24.640
and back to being controlled by users.

16:24.640 --> 16:29.640
And it just doesn't seem like that's the general trend line of the internet these days.

16:29.640 --> 16:35.000
Well, Thomas Carburn writing on the register nailed it as far as I'm concerned.

16:35.000 --> 16:39.280
He wrote, all it will take is to win over the businesses that profit from the current

16:39.280 --> 16:44.920
status quo and the internet users who have consistently traded privacy and control for

16:44.920 --> 16:48.200
free services and delegation of responsibility.

16:48.200 --> 16:50.680
I mean, the register is always quite snarky.

16:50.680 --> 16:55.760
And so it kind of goes with my sense of humor, but that really just sums it all up.

16:55.760 --> 16:57.240
Yeah, that's all it'll take.

16:57.240 --> 16:58.240
That's all.

16:58.240 --> 17:03.120
Well, something else that didn't get a huge amount of coverage and I think should have

17:03.120 --> 17:08.900
got more is that Azure Sphere has hit general availability now.

17:08.900 --> 17:09.900
It's been a little while.

17:09.900 --> 17:14.500
Microsoft initially introduced Azure Sphere, which is that whole Microsoft services paired

17:14.500 --> 17:19.880
with Linux running on a system on a chip with different OSes and security models.

17:19.880 --> 17:22.040
They did that back in 2018.

17:22.040 --> 17:27.280
The technology evolved out of a research project that was started back in 2017.

17:27.280 --> 17:30.240
You remember, it's essentially a three component system.

17:30.240 --> 17:35.500
It's got a processor storage and memory, and that connects back to an Azure service that

17:35.500 --> 17:42.540
guarantees 10 years of support and metrics for failure analysis and log retrieval and

17:42.540 --> 17:49.520
ideally a service package that makes it possible to keep IoT devices out in the marketplace

17:49.520 --> 17:55.200
and out in the field, secure, up to date, and even potentially detect possible security

17:55.200 --> 17:56.200
issues or failures.

17:56.200 --> 18:03.560
I think why this is really important is that this is a Linux first product from Microsoft.

18:03.560 --> 18:06.040
Can you even have imagined that five years ago?

18:06.040 --> 18:07.040
Right.

18:07.040 --> 18:10.160
And the other thing that's kind of fascinating about it, it's their Linux.

18:10.160 --> 18:12.840
It's a Microsoft distro running on this thing.

18:12.840 --> 18:14.760
I kind of would love to see that.

18:14.760 --> 18:18.200
Does it count as a distro if it's only on their microcontroller?

18:18.200 --> 18:19.320
I don't know.

18:19.320 --> 18:22.120
Did we ever consider Linux running on the TiVo A distro?

18:22.120 --> 18:25.500
I'd say no, but it's something.

18:25.500 --> 18:27.520
I'd still like to see it.

18:27.520 --> 18:31.800
Microsoft's distinguished engineer and managing director of Azure Sphere, that's actually

18:31.800 --> 18:36.120
the title, said, quote, IoT is in the science fair stage.

18:36.120 --> 18:40.360
Every enterprise is doing at least one experiment here, but security is really keeping them

18:40.360 --> 18:42.000
from going to scale.

18:42.000 --> 18:43.480
And that's what Microsoft's trying to solve.

18:43.480 --> 18:47.840
The adults have come to the room and they're now going to sell the components for you to

18:47.840 --> 18:51.820
build a device, either be a washing machine, which is what some of their preview customers

18:51.820 --> 18:59.120
built were clothes washing machines that just keep track of health and power usage and all

18:59.120 --> 19:01.680
of that that some reason need Wi-Fi.

19:01.680 --> 19:05.600
You want something like that to be supported for at least 10 years, and you want it to

19:05.600 --> 19:06.600
be solid.

19:06.600 --> 19:10.800
You don't want to be the brand that brought some malware into your home because you bought

19:10.800 --> 19:13.120
a Wi-Fi connected washing machine.

19:13.120 --> 19:14.120
Not good for the brand.

19:14.120 --> 19:16.480
So Microsoft's customers are those people.

19:16.480 --> 19:20.800
Mary Jo Foley has a really good write up and she covers a bunch of the things that have

19:20.800 --> 19:26.200
happened, including they've added support for the IMX8 ARM CPU, which is fascinating

19:26.200 --> 19:31.440
because they think it's well suited to artificial intelligence, graphics, and richer UI experiences.

19:31.440 --> 19:32.440
Hello Librem 5.

19:32.440 --> 19:33.440
I thought that was interesting.

19:33.440 --> 19:37.080
So you could get the same CPU and an Azure device running Linux.

19:37.080 --> 19:40.080
Yeah, I hope it's got a good heat sink.

19:40.080 --> 19:42.560
And probably a pretty good power source, I would hope.

19:42.560 --> 19:49.840
Yeah, but the IMX8 is designed for this kind of installation, something that's mains powered,

19:49.840 --> 19:53.840
and it's got great Linux support, so it's no surprise that Microsoft have added support

19:53.840 --> 19:54.840
for it.

19:54.840 --> 19:59.180
Well, speaking of small device surprises, there was a birthday surprise for Raspberry

19:59.180 --> 20:00.180
Pi users.

20:00.180 --> 20:05.600
Yeah, to celebrate the eighth birthday, they've lowered the price of the two gigabyte version

20:05.600 --> 20:09.580
of the Raspberry Pi 4 to only $35.

20:09.580 --> 20:14.200
They will keep the one gigabyte version around for industrial customers, but that's going

20:14.200 --> 20:19.440
to stay at $35, so it makes no sense for a consumer to buy the one gigabyte version and

20:19.440 --> 20:22.560
the four gigabyte one is going to stay at $55 as well.

20:22.560 --> 20:31.720
So really what's happening here is the default $35 standard priced Pi is now really fast

20:31.720 --> 20:33.680
and with two gigabytes of RAM.

20:33.680 --> 20:35.680
Yeah, it's not bad.

20:35.680 --> 20:40.920
And if you consider inflation, when the Raspberry Pi originally launched, that $35 is nearly

20:40.920 --> 20:42.560
$40 today.

20:42.560 --> 20:47.440
So you're effectively getting all the improvements for a $5 price cut, as they point out on the

20:47.440 --> 20:48.440
post.

20:48.440 --> 20:53.440
So the one gigabyte model sticking around for industrial and commercial customers, as

20:53.440 --> 20:59.400
they put it, and staying at the $35 price is kind of a surprising move.

20:59.400 --> 21:03.800
I'm curious to know why a two gig model wouldn't work where a one gig model works today.

21:03.800 --> 21:07.720
There must be applications where too much memory is bad.

21:07.720 --> 21:10.320
I mean, it totally seems possible.

21:10.320 --> 21:15.840
I can only think that possibly the extra power draw of two gigabytes, it's only a tiny bit,

21:15.840 --> 21:21.760
but if you have done a lot of calculations based on exact numbers, then maybe you might

21:21.760 --> 21:23.800
want to stick to the one gigabyte one.

21:23.800 --> 21:28.680
And if you've certified it, maybe you'd have to go through a whole new process.

21:28.680 --> 21:30.440
So maybe it's that.

21:30.440 --> 21:35.920
That's what I was thinking is maybe it's just how this business works.

21:35.920 --> 21:40.280
You got a product, you certify it and you know, you build it to spec and if you deviate

21:40.280 --> 21:42.920
from that spec, it has to be recertified.

21:42.920 --> 21:48.360
They write though that we expect most users to opt for the larger memory variants since

21:48.360 --> 21:50.480
there's no price advantage.

21:50.480 --> 21:52.520
So we'll see how long it sticks around.

21:52.520 --> 21:56.760
But I think it opens up a real nice spot in the lineup for an eight gigabyte Pi.

21:56.760 --> 21:58.200
I know that's what I was thinking.

21:58.200 --> 22:02.880
If only they'd drop that four gigabyte price slightly and then bring in the eight one,

22:02.880 --> 22:06.760
but it doesn't look like they're going to do that anytime soon.

22:06.760 --> 22:10.440
I'd pay 80 bucks for an eight gig Pi, I think.

22:10.440 --> 22:12.120
For me, it'd be a slam dunk upgrade.

22:12.120 --> 22:16.560
I just pop out the SD cards and pop them in the new one because my installs are already

22:16.560 --> 22:17.560
64 bit.

22:17.560 --> 22:19.400
Yeah, that's the beauty of the Pi's.

22:19.400 --> 22:24.040
You could take that same SD card and put it in my original one that has 256 megabytes

22:24.040 --> 22:25.040
of RAM.

22:25.040 --> 22:30.680
It reminds me honestly of the good old days where I would have a boot disk, a boot floppy

22:30.680 --> 22:35.280
disk to get my OS up and then I would have to switch over to the game and I would have

22:35.280 --> 22:42.040
to eject the OS disk and then put in a floppy disk for the game until I became a real baller

22:42.040 --> 22:48.560
and I got two floppy disk drives and then I could have an OS drive and a game drive

22:48.560 --> 22:51.760
and don't even get me started on how fast I can install an operating system.

22:51.760 --> 22:55.920
Yeah, and it meant you could copy those Linux installation disks really easily as well.

22:55.920 --> 23:01.720
Don't copy that floppy Joe, unless it's open source.

23:01.720 --> 23:06.880
But one quick thing to mention is on the FAQs, the question is, is this a permanent price

23:06.880 --> 23:07.880
cut?

23:07.880 --> 23:08.880
And they say yes.

23:08.880 --> 23:13.320
If a lot of this is to do with the fluctuations in RAM pricing, it's not going to go back

23:13.320 --> 23:14.320
up again.

23:14.320 --> 23:15.320
I love it.

23:15.320 --> 23:16.320
Yeah.

23:16.320 --> 23:19.200
They're passing the savings of the drop in price to us and they must look at it from

23:19.200 --> 23:22.780
a business standpoint and figure, okay, this is going to stay this way for a while.

23:22.780 --> 23:24.800
We can make this price change.

23:24.800 --> 23:27.400
They're really conscious about that $35 price point.

23:27.400 --> 23:28.400
Yeah, massively.

23:28.400 --> 23:32.720
So that's why they were reluctant to change their system on a chip and make it possible

23:32.720 --> 23:35.100
to do the four gigabyte one.

23:35.100 --> 23:41.440
That looks like they've finally found a way to have two gigabytes of RAM for $35.

23:41.440 --> 23:42.720
Imagine that five years ago.

23:42.720 --> 23:45.400
I know and imagine this in another five years.

23:45.400 --> 23:46.920
Yeah, very exciting.

23:46.920 --> 23:48.600
Well, that just about wraps us up.

23:48.600 --> 23:52.800
So be sure you go to linuxactionnews.com slash subscribe for all the ways to get new episodes

23:52.800 --> 23:56.440
and linuxactionnews.com slash contact for ways to get in touch with us.

23:56.440 --> 24:00.760
We'll be back next Monday with our weekly take on the latest Linux and open source news.

24:00.760 --> 24:02.560
I'm at Chris LAS.

24:02.560 --> 24:04.240
I'm at Joe Rissington.

24:04.240 --> 24:06.840
Thanks for joining us and we will see you next week.

24:06.840 --> 24:34.840
See you later.

