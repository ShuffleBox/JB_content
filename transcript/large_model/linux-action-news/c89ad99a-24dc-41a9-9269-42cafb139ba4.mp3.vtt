WEBVTT

00:00.000 --> 00:15.960
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:15.960 --> 00:20.400
This is episode 21 recorded on October 1st, 2017.

00:20.400 --> 00:21.400
I'm Chris.

00:21.400 --> 00:22.400
And I'm Joe.

00:22.400 --> 00:23.400
Hello, Joe.

00:23.400 --> 00:27.960
I'm very happy to say I'm back from New York and we get to start this episode out with

00:27.960 --> 00:30.160
a Runs Linux this week.

00:30.160 --> 00:33.320
The new Atari console is going to run Linux.

00:33.320 --> 00:34.680
This thing actually is kind of nice.

00:34.680 --> 00:38.120
It's the Atari box and it's got a wood front, so I'm sold.

00:38.120 --> 00:41.000
Yeah, it does look kind of cool and retro.

00:41.000 --> 00:42.800
It's got Linux on there, of course.

00:42.800 --> 00:48.800
Atari says it lets them be more open because they get to use Linux.

00:48.800 --> 00:52.360
I guess that's probably true only in the sense that they didn't have to create their own

00:52.360 --> 00:53.680
operating system.

00:53.680 --> 00:58.600
The box draws heavily from the Atari 2600, which obviously hits that retro soft spot

00:58.600 --> 01:03.560
for me, and it comes preloaded with, quote, tons of classic Atari retro games.

01:03.560 --> 01:07.960
Yeah, but because it runs Linux, it's going to be able to run loads of modern stuff as

01:07.960 --> 01:08.960
well in theory.

01:08.960 --> 01:15.320
Yeah, and it's going to have four USB ports, so you could hook up maybe a disk with additional

01:15.320 --> 01:19.760
ROMs, a mouse and a keyboard or other USB peripherals to play with that.

01:19.760 --> 01:22.900
But it's got this weird launch that they're doing.

01:22.900 --> 01:28.840
The Atari box is going to launch first on Indiegogo in the coming weeks with an unspecified

01:28.840 --> 01:35.400
goal, and then later on in late spring of 2018, it's going to ship retail for around

01:35.400 --> 01:38.600
$250, US greenbacks.

01:38.600 --> 01:40.840
So what is it going to launch at Indiegogo at?

01:40.840 --> 01:45.720
If it's going to be any less than that, then it can't be very high spec'd, can it?

01:45.720 --> 01:49.720
Yeah, and if it's going to be cheaper than Indiegogo, it might be a good time to jump

01:49.720 --> 01:50.720
in.

01:50.720 --> 01:55.040
But if you're going to have a very powerful box to play these old games, you're not going

01:55.040 --> 01:58.640
to be running the most latest Dolphin emulator or something like that.

01:58.640 --> 02:03.200
Oh, well, yeah, you can play old Atari games on a Raspberry Pi, so you don't need hardly

02:03.200 --> 02:07.040
any power at all, but if you want to play modern games, if you want to get Steam going

02:07.040 --> 02:12.440
on there, then you're probably going to need more than $250 worth of hardware.

02:12.440 --> 02:14.960
I'm going to be interested to take a look at it.

02:14.960 --> 02:18.880
I'd probably more than even playing the games would like to just go under the hood and see

02:18.880 --> 02:23.320
what distro did they choose, which kernel is it shipping, how did they implement it?

02:23.320 --> 02:25.160
It just feels like this came out of nowhere.

02:25.160 --> 02:26.360
See what else it can do.

02:26.360 --> 02:27.360
Yeah, yeah.

02:27.360 --> 02:31.600
And maybe it'll be running Ubuntu, although probably not Ubuntu 17.10, though we did get

02:31.600 --> 02:32.920
the final beta this week.

02:32.920 --> 02:38.000
Yeah, I had a quick look at it, and I didn't want to give it too much of a play because

02:38.000 --> 02:42.400
I think we should probably do a review or at least talk about the final release, but

02:42.400 --> 02:44.120
it's looking really good to me.

02:44.120 --> 02:50.600
Yeah, and the thing that I'm happy to see got included is kernel 4.13, which is the

02:50.600 --> 02:56.840
version of the Linux kernel that has AppArmor baked in, which is a key part of snap confinement,

02:56.840 --> 02:58.860
so now that's mainline to the Linux kernel.

02:58.860 --> 03:02.040
And just overall, it feels very polished.

03:02.040 --> 03:04.680
All the work that they've put into it has paid off.

03:04.680 --> 03:08.800
Well, maybe you'll be upset about this, Joe, because they're officially dropping 32-bit

03:08.800 --> 03:11.700
desktop ISO images with 17.10.

03:11.700 --> 03:15.320
This has been going around quite a lot on Google Plus and everything.

03:15.320 --> 03:19.860
People are panicking, but the reality is that it's just the ISO images that they're dropping.

03:19.860 --> 03:22.700
They're not dropping the 32-bit archive.

03:22.700 --> 03:25.060
The flavors are not dropping 32-bit ISOs.

03:25.060 --> 03:32.400
This is only Ubuntu proper, and you can still upgrade to 17.10 because the archive is still

03:32.400 --> 03:33.400
there.

03:33.400 --> 03:35.680
It's just literally they're not building the ISO and hosting it.

03:35.680 --> 03:39.240
Okay, true enough, but don't you think that also is going to lead to less users testing

03:39.240 --> 03:42.760
this stuff and an overall degrading of the 32-bit experience?

03:42.760 --> 03:46.680
Well, is anyone really testing it anyway, is the question.

03:46.680 --> 03:49.200
Isn't it just a kind of waste of resources at this point?

03:49.200 --> 03:55.100
I mean, fair enough, Lubuntu or Zubuntu even, or even Ubuntu Marte would work reasonably

03:55.100 --> 04:01.320
well on an old 32-bit machine, but the server makes sense for 32-bit, especially if it's

04:01.320 --> 04:06.280
containerized or whatever because it's smaller, but I just can't see any use case for 32-bit

04:06.280 --> 04:11.080
full-blown Ubuntu desktop because the only machine I've got that's 32-bit only, it'd

04:11.080 --> 04:16.000
just be dog slow to run gnome on that, so I just don't see the issue.

04:16.000 --> 04:20.160
I think that's a good point, and like you said, there's going to be other ways to get

04:20.160 --> 04:26.420
32-bit support, and I would not be surprised if the container use case keeps 32-bit packages

04:26.420 --> 04:30.960
alive for quite a while, and other things like gaming will also require 32-bit libraries,

04:30.960 --> 04:34.000
which you'll still be able to install on your 64-bit distribution.

04:34.000 --> 04:39.760
Yeah, and also, if you really want to have full-blown Ubuntu, you can just get the minimal

04:39.760 --> 04:42.080
or the net install and build it up that way.

04:42.080 --> 04:44.440
It just means you won't have a 32-bit live image.

04:44.440 --> 04:45.440
Right.

04:45.440 --> 04:49.160
Yeah, and let's be honest, that's how real hardcore Ubuntu users do it, right, Joe?

04:49.160 --> 04:50.160
Right?

04:50.160 --> 04:52.880
I do occasionally, but not normally.

04:52.880 --> 04:56.760
Speaking of hardcore, you know, the Kaywin project is pretty hardcore, and they're looking

04:56.760 --> 05:01.740
at the future and saying, hey, let's see if we can't get Kaywin and Wayland running without

05:01.740 --> 05:06.480
any X tentacles, no X Wayland support, no X dependencies.

05:06.480 --> 05:11.280
Well, this is surely what they need to do regardless, right, and now they're just finally

05:11.280 --> 05:12.560
getting around to doing it.

05:12.560 --> 05:16.760
Yeah, it is sort of funny because it's like fixing the barn door before we even have cows

05:16.760 --> 05:22.280
in this particular case, but the general idea here is getting Kaywin X11 free, so that way

05:22.280 --> 05:27.960
the code that isn't loaded cannot interfere, which is a direct quote from the Kaywin maintainer.

05:27.960 --> 05:32.520
The whole idea here obviously is to reduce exposure to attack surfaces, code dependency

05:32.520 --> 05:38.000
problems, legacy code, and build towards the future where we're Wayland 100%.

05:38.000 --> 05:43.200
Now having just sat in a room full of people that are hacking away on Wayland issues, I

05:43.200 --> 05:47.040
feel like that future is further away than most of us think.

05:47.040 --> 05:52.160
It's not necessarily going to be in the next year or so, but good on them for working on

05:52.160 --> 05:54.040
this problem before it's really even necessary.

05:54.040 --> 05:59.720
Yeah, well someone needs to lead the way and it's good to see that it is happening in KDE

05:59.720 --> 06:00.720
land.

06:00.720 --> 06:06.240
One of the most surprising stories this week was that the LTS kernel is now going to be

06:06.240 --> 06:11.160
supported for six years instead of two, which is just a massive difference.

06:11.160 --> 06:14.200
Yeah, I'd say this is the story that I was most pleased to see this week too.

06:14.200 --> 06:18.400
This is going to have really great benefits and it's going to have a few downsides, I

06:18.400 --> 06:19.400
suspect.

06:19.400 --> 06:23.080
Traditionally, the long-term support kernel was supported for two years, and now Greg

06:23.080 --> 06:25.280
Kh will be maintaining it for six years.

06:25.280 --> 06:29.680
Beginning with the current 4.4 LTS cycle, it will be extended for six years.

06:29.680 --> 06:33.840
The current 4.4 LTS cycle, underscore that for a moment.

06:33.840 --> 06:38.920
Meanwhile, Linux 4.14 is the next LTS that's currently being worked on that would then

06:38.920 --> 06:42.600
be supported until 2023.

06:42.600 --> 06:43.680
That's a long time.

06:43.680 --> 06:48.080
Is the world even going to still be going by that point, but at least our Android phones

06:48.080 --> 06:49.920
will benefit from this, eh?

06:49.920 --> 06:50.920
Definitely.

06:50.920 --> 06:54.600
This is obviously a move that I think was influenced by Google and Google's Project

06:54.600 --> 06:57.120
Treble, which we have talked about on this show.

06:57.120 --> 07:00.880
When we were talking about Project Treble and doing research, I seem to recall coming

07:00.880 --> 07:06.320
across a discussion thread that implied that Google was campaigning upstream to the Linux

07:06.320 --> 07:08.280
kernel community for this change.

07:08.280 --> 07:12.560
I don't know if this is made solely for Google though, because I could see this having big

07:12.560 --> 07:17.900
ramifications for business, especially in the server and in the media production space.

07:17.900 --> 07:22.440
That's the positive side, obviously, and the positive ramifications for Project Treble.

07:22.440 --> 07:27.500
I am concerned that this will cause some system on a chip manufacturers to essentially sit

07:27.500 --> 07:33.680
on their hands and not bother updating patches and kernel drivers for anything other than

07:33.680 --> 07:38.300
the LTS releases, which could cause quite a bit of problems with the pace of standard

07:38.300 --> 07:41.640
Linux kernel development that most distributions end up shipping.

07:41.640 --> 07:46.080
But surely the changes that you're talking about there don't really affect most of the

07:46.080 --> 07:52.440
distros that are shipping, for example, x86 versions of Linux, because that's all drivers

07:52.440 --> 07:54.640
and stuff that's just not even relevant.

07:54.640 --> 07:56.280
You could be right on the x86 side of things.

07:56.280 --> 07:58.840
I'm not sure if this will have a huge impact either way.

07:58.840 --> 08:03.360
I'm thinking primarily about the ARM side of things, where new devices come out that

08:03.360 --> 08:08.400
support some new feature or some new radio, and they require enablement via a newer version

08:08.400 --> 08:13.880
of the kernel, but all of the other system chips in that device are dragging their feet

08:13.880 --> 08:14.940
with the software.

08:14.940 --> 08:19.960
That could cause some sort of weird back porting or forking of the kernel for these devices.

08:19.960 --> 08:23.440
I guess that's sort of in a straw man argument, so this is going to be one of those wait and

08:23.440 --> 08:24.440
see issues.

08:24.440 --> 08:27.080
So it's not really worth getting all that worked up about, but when it comes to these

08:27.080 --> 08:31.960
system on a chip vendors, I've learned to expect the least.

08:31.960 --> 08:36.360
I suppose, but maybe it will lead to more standardization because if you've got drivers

08:36.360 --> 08:42.680
in the kernel and as you say, if you've got one device that needs newer firmware, then

08:42.680 --> 08:45.160
maybe they won't ship that newer device.

08:45.160 --> 08:50.800
Maybe they'll ship something that's more tried and tested and you'll end up with more standardization

08:50.800 --> 08:55.920
and it'll just be cheaper for them to work alongside all the other OEMs to have a kind

08:55.920 --> 09:01.440
of more standard set of components in these devices.

09:01.440 --> 09:02.680
You are a communist, Joe.

09:02.680 --> 09:03.680
You are a communist.

09:03.680 --> 09:04.680
No, I'm kidding.

09:04.680 --> 09:07.760
I think that could very well be true.

09:07.760 --> 09:11.380
If only there was some sort of mechanism where the code could be shared and then everybody

09:11.380 --> 09:13.400
could benefit and contribute back to it.

09:13.400 --> 09:17.400
That might just make things work out.

09:17.400 --> 09:22.280
But back to the x86 side of things, the first thing I thought about was Red Hat and RHEL

09:22.280 --> 09:26.700
because at the moment they are supporting the kernel for like 10 years and having to

09:26.700 --> 09:28.520
pay people for that.

09:28.520 --> 09:30.240
This is going to save them a bunch of money.

09:30.240 --> 09:35.160
Not just Red Hat, SUSE, Canonical, any distribution that's maintaining a quote unquote long term

09:35.160 --> 09:39.580
supporter enterprise kernel could switch over to this branch now and then just apply their

09:39.580 --> 09:41.720
minimal set of patches on top of it.

09:41.720 --> 09:42.720
It's going to be great for them.

09:42.720 --> 09:46.400
Yeah, I do wonder about hardware enablement and stuff and how that's going to work.

09:46.400 --> 09:53.160
But yeah, I think it will be ultimately at least a little bit less work for them.

09:53.160 --> 09:54.940
Linux Academy dot com slash unplugged.

09:54.940 --> 09:58.740
Go there to support the show and sign up for a free seven day trial to a platform that

09:58.740 --> 10:04.240
is designed to teach you more about Linux and open source technologies and all of the

10:04.240 --> 10:06.740
quote unquote stacks on top of that.

10:06.740 --> 10:11.160
And I guess when I say stacks, I mean things like AWS, Azure, OpenStack, and of course

10:11.160 --> 10:14.640
all of the individual components of Linux itself.

10:14.640 --> 10:18.520
Linux Academy gives you self-paced, in-depth video courses on every Linux cloud and DevOps

10:18.520 --> 10:19.520
topic.

10:19.520 --> 10:22.060
One of the things that's really valuable is they have hands on scenario based labs that

10:22.060 --> 10:27.280
give you experience on real servers and instructors, real human beings that are ready and available

10:27.280 --> 10:28.280
to help you when you get stuck.

10:28.280 --> 10:31.160
And if you're going for certifications, they have great courseware on that.

10:31.160 --> 10:34.540
They have mobile applications so you can learn on the go, comprehensive study guides you

10:34.540 --> 10:38.820
can download with you, virtual servers they spin up on demand, and much, much more.

10:38.820 --> 10:40.420
It's a platform to learn more about Linux.

10:40.420 --> 10:41.420
You get it.

10:41.420 --> 10:43.800
They also have public profiles to demonstrate your achievements.

10:43.800 --> 10:47.200
It's a great way to learn more about Linux and advance your career.

10:47.200 --> 10:49.200
Linux Academy dot com slash unplugged.

10:49.200 --> 10:51.600
Go there to sign up for a free seven day trial.

10:51.600 --> 10:57.800
Support the show and go to Linux Academy dot com slash unplugged.

10:57.800 --> 11:01.560
Nextcloud's done a whole bunch of work on integrating end to end encryption.

11:01.560 --> 11:05.800
They're working on a new version of the Nextcloud client software.

11:05.800 --> 11:07.920
It's in preview right now.

11:07.920 --> 11:11.160
And it's going to be a final feature in Nextcloud 13.

11:11.160 --> 11:12.960
And it's client side encryption.

11:12.960 --> 11:17.160
Yeah, this is potentially massive for them, especially in enterprise where that stuff

11:17.160 --> 11:18.640
is really, really important.

11:18.640 --> 11:21.660
OK, as a home user, it's nice to have encryption.

11:21.660 --> 11:24.040
In the enterprise, it's absolutely essential.

11:24.040 --> 11:28.000
And they really go out of their way to say this is end to end encryption done on the

11:28.000 --> 11:29.000
client side.

11:29.000 --> 11:33.080
There's no middleman, no web interfaces that can get compromised, no server side decrypting

11:33.080 --> 11:35.520
that's possible without the client keys.

11:35.520 --> 11:38.600
And the solution works on a per folder level.

11:38.600 --> 11:44.820
They say it does have a server assisted but fully secure key management system with support

11:44.820 --> 11:49.640
for creating an offline administrator recovery key, which could be kept in a physically separated

11:49.640 --> 11:51.280
location like a safe.

11:51.280 --> 11:53.000
And this is neat, Joe.

11:53.000 --> 11:56.800
Users get warned if that recovery key is ever enabled.

11:56.800 --> 11:59.340
Yeah, that is very nice.

11:59.340 --> 12:01.520
Obviously this is something that's going to need a lot of testing.

12:01.520 --> 12:05.320
And they also make it clear that this is in preview mode right now and they're seeking

12:05.320 --> 12:06.320
feedback.

12:06.320 --> 12:07.480
I want to try this, though.

12:07.480 --> 12:12.120
I really want to give it a go, encrypt a few folders and just try it out for a while, because

12:12.120 --> 12:15.280
this is exactly the kind of feature set we want from Nextcloud.

12:15.280 --> 12:18.840
And it's something that Dropbox simply can't offer because of their business model.

12:18.840 --> 12:19.840
Yeah.

12:19.840 --> 12:23.240
And you know, I really like the attitude that they have with this.

12:23.240 --> 12:28.120
They say, security being as hard as it is, we expect some harsh criticism, but we look

12:28.120 --> 12:32.160
forward to the constructive feedback which will enable us to improve and fine tune our

12:32.160 --> 12:33.740
design and implementation.

12:33.740 --> 12:38.080
They're basically saying, look, there's people out there who know a lot more about this than

12:38.080 --> 12:42.760
us and please try it out, poke holes in it and tell us what we've done wrong, rather

12:42.760 --> 12:45.960
than having an arrogant attitude of we've done this great thing.

12:45.960 --> 12:48.680
You know, I really like to see that humble attitude.

12:48.680 --> 12:49.680
Yeah.

12:49.680 --> 12:52.760
They've integrated support for an audit log as well, which is a great feature when you're

12:52.760 --> 12:54.940
building a feature set like this.

12:54.940 --> 12:59.080
They also have a revoking key system, again, a great feature to have built in from the

12:59.080 --> 13:00.540
very beginning.

13:00.540 --> 13:02.120
This really looks like it could be a hit.

13:02.120 --> 13:06.040
All of the basic stuff you want in your first implementation is there.

13:06.040 --> 13:09.600
And now it's just a matter of refining it and making sure it's a solid implementation.

13:09.600 --> 13:15.560
I've invited Joss and Frank from Nextcloud to come on next week's, or I guess this week's,

13:15.560 --> 13:18.780
Linux Unplugged to tell me about it, because I've got a few more questions specifically

13:18.780 --> 13:21.200
about the administrative side of things.

13:21.200 --> 13:23.880
And then I think I'm going to get my hands on this and I'm going to deploy it myself.

13:23.880 --> 13:25.120
I look forward to listening to that.

13:25.120 --> 13:27.120
Yeah, that should be good.

13:27.120 --> 13:29.600
So let's talk about Microsoft.

13:29.600 --> 13:33.320
They've been in the news a lot over the last week or so.

13:33.320 --> 13:37.960
Well, in fact, over the last few years, really, they've been creeping more and more into the

13:37.960 --> 13:39.640
Linux space.

13:39.640 --> 13:44.560
And you've got a few small things like SQL Server is now finally available for Linux.

13:44.560 --> 13:46.080
We've talked about that when it was announced.

13:46.080 --> 13:48.040
Now it's fully out there.

13:48.040 --> 13:51.200
You can deploy it on your Linux server.

13:51.200 --> 13:53.600
And also there's a new Skype for Linux preview.

13:53.600 --> 13:59.640
But for me, the biggest story is Microsoft becoming a premium sponsor of the OSI, the

13:59.640 --> 14:02.460
open source initiative.

14:02.460 --> 14:08.960
Microsoft are really embracing, aren't they, the Linux and open source world, or at least

14:08.960 --> 14:10.120
seemingly so.

14:10.120 --> 14:11.120
Indeed.

14:11.120 --> 14:14.380
So first of all, context, the OSI launched in 1998.

14:14.380 --> 14:20.160
It is known for taking a largely pragmatic approach to open source.

14:20.160 --> 14:23.140
And it advocates for open source in business and government.

14:23.140 --> 14:28.240
They also review open source licenses, which are often specific to vendors to ensure that

14:28.240 --> 14:30.920
they conform to community norms and expectations.

14:30.920 --> 14:34.360
So now Microsoft has become a premium sponsor of this organization.

14:34.360 --> 14:36.480
They've been working together for a couple of years.

14:36.480 --> 14:40.840
When Microsoft announced some recent licenses, they tossed it over to the OSI to make sure

14:40.840 --> 14:43.880
that they were legit, like back in like 2005 even.

14:43.880 --> 14:48.720
And now as a premium sponsor, Microsoft's joining the likes of Google, HPE, Adblock

14:48.720 --> 14:52.960
Plus, GitHub, a bunch of others.

14:52.960 --> 14:58.000
They are technically a higher level sponsor to the OSI than Red Hat, the Linux Foundation,

14:58.000 --> 15:01.160
Mozilla, or HP themselves.

15:01.160 --> 15:07.400
And that is surprising, isn't it, that the Linux Foundation are not a bigger sponsor.

15:07.400 --> 15:11.560
You know, Joe, I've been to quite a few events in the last couple of years.

15:11.560 --> 15:15.560
And Microsoft has been at all of them in a major way.

15:15.560 --> 15:18.440
And they are either there funding for the community get together, or they're there with

15:18.440 --> 15:22.040
a booth, or they have their developers there coordinating with people.

15:22.040 --> 15:24.800
Obviously, I just got back from the Ubuntu rally.

15:24.800 --> 15:28.540
And there I met one of the Skype for Linux developers.

15:28.540 --> 15:32.720
And we were talking about different packaging solutions and talking about a particular bug

15:32.720 --> 15:36.520
that was affecting the current LTS of Ubuntu.

15:36.520 --> 15:39.000
And he's a Linux user.

15:39.000 --> 15:40.000
He's a Linux user.

15:40.000 --> 15:43.240
He's a Microsoft Windows guy that's developing in a Linux VM.

15:43.240 --> 15:45.360
I mean, this is just his world.

15:45.360 --> 15:48.240
To him, there's no OS war to fight.

15:48.240 --> 15:50.520
He's just making a product for Linux users.

15:50.520 --> 15:54.840
And I think Microsoft is working at that level in a lot of different areas in the organization

15:54.840 --> 15:55.840
now.

15:55.840 --> 15:57.840
They've sort of lost the passion for the desktop war.

15:57.840 --> 16:04.200
Yeah, I mean, aren't Microsoft a different company from the company involved with Bomber

16:04.200 --> 16:07.800
saying that Linux was cancer and all that kind of stuff?

16:07.800 --> 16:14.000
Is it really a totally different outlook from the company, or is there something more sinister

16:14.000 --> 16:15.000
going on?

16:15.000 --> 16:19.200
Because that's what some people seem to think.

16:19.200 --> 16:23.400
Whereas looking at it from a pragmatic point of view and a kind of realistic business point

16:23.400 --> 16:29.900
of view, the war for the desktop, as you say, they don't really care about that anymore.

16:29.900 --> 16:33.840
They care much more about the cloud and stuff.

16:33.840 --> 16:40.120
And as long as Azure is doing well, then they're fairly happy.

16:40.120 --> 16:46.240
And if that means having to embrace Linux, then they're just going to have to do that.

16:46.240 --> 16:51.320
Well, outlets like Tech Republic debate if Microsoft is going to love Linux to death,

16:51.320 --> 16:56.200
and they throw headlines around about Shuttleworth and Stallman disagreeing about Microsoft and

16:56.200 --> 16:57.400
Linux.

16:57.400 --> 17:01.400
In the background, while that conversation is going on, Microsoft has learned how to

17:01.400 --> 17:03.020
make money on Linux.

17:03.020 --> 17:06.920
And they're one of the few US companies that genuinely makes a big profit on Linux.

17:06.920 --> 17:08.000
I mean, just look at the math.

17:08.000 --> 17:10.200
They've now joined the Linux Foundation.

17:10.200 --> 17:12.080
They've now joined the OSI.

17:12.080 --> 17:17.280
All major Linux distributions can now run on Azure, including Debian, Red Hat, Ubuntu,

17:17.280 --> 17:18.280
et cetera.

17:18.280 --> 17:23.160
And Microsoft is sending developers and money to all of these open source events to get

17:23.160 --> 17:28.280
their developers sitting next to other developers creating open source code.

17:28.280 --> 17:33.160
It's one of these situations where this debate, this discussion we're having, doesn't match

17:33.160 --> 17:35.340
the reality of the marketplace.

17:35.340 --> 17:39.800
Just like the debate between Unity 7 and Gnome never really matched the fact that in the

17:39.800 --> 17:43.840
marketplace, millions and millions and millions of Ubuntu machines are being sold.

17:43.840 --> 17:46.440
And they don't care what it ships with, they're just getting their work done.

17:46.440 --> 17:50.560
Meanwhile, in the tech sphere, we have these conversations constantly about these aspects

17:50.560 --> 17:54.880
that we find interesting, but don't actually impact the marketplace.

17:54.880 --> 17:58.800
And you look at this, Microsoft's not doing it out of the goodness of their heart, they're

17:58.800 --> 18:02.680
doing it because they figured out how to turn a profit by working like this.

18:02.680 --> 18:06.280
And I suppose everyone benefits in a sense.

18:06.280 --> 18:12.360
It's just very hard for me to accept that everyone can benefit in the Linux world from

18:12.360 --> 18:20.680
Microsoft because just the history, that history is so...

18:20.680 --> 18:22.800
They're just the enemy, aren't they, traditionally?

18:22.800 --> 18:28.520
And if you look at it from a realistic point of view, you're right, but I think that as

18:28.520 --> 18:35.660
a Linux community, it's just so difficult for us to look to Microsoft and see anything

18:35.660 --> 18:39.520
other than the evil company who called us cancer.

18:39.520 --> 18:44.940
But I suppose we have to ask ourselves, what did we expect to happen if Linux won?

18:44.940 --> 18:46.620
And Linux has won the server space.

18:46.620 --> 18:48.400
This is exactly what would happen.

18:48.400 --> 18:52.560
And I don't think Microsoft's really competing on the desktop space with Linux anymore because

18:52.560 --> 18:55.920
they probably view the Mac as a much bigger threat.

18:55.920 --> 19:00.920
And so their desktop efforts now are focused on their Surface hardware, which is more of

19:00.920 --> 19:03.540
a direct competitor with the MacBook line.

19:03.540 --> 19:07.860
And on the server, they're playing ball because that's how you make money in the server space

19:07.860 --> 19:09.040
where Linux has won.

19:09.040 --> 19:15.520
Well, except how do you explain WSL, the Windows subsystem for Linux, if that is not them being

19:15.520 --> 19:17.720
worried about Linux as a competitor on the desktop?

19:17.720 --> 19:22.060
Ah, but that's just about creating web apps which run on Linux servers.

19:22.060 --> 19:25.000
It's really about the developer's tool chain matching what's on production.

19:25.000 --> 19:28.420
So if they have Ubuntu systems, they want to have Ubuntu in the runtime on Windows.

19:28.420 --> 19:31.640
It's not so much about going after Ubuntu on the desktop.

19:31.640 --> 19:32.640
Isn't it though?

19:32.640 --> 19:35.380
Isn't it trying to keep people in Windows?

19:35.380 --> 19:41.280
If you're, for example, dual booting for your games and maybe for exchange support or whatever

19:41.280 --> 19:47.360
in Windows, but then you're doing your development in Ubuntu or some other Linux distro, or you're

19:47.360 --> 19:51.320
thinking of getting a new machine and you buy it with Windows.

19:51.320 --> 19:56.120
And then you think, well, I've got the subsystem, that's all I really need, why bother setting

19:56.120 --> 19:57.120
up that other partition?

19:57.120 --> 20:01.320
I bet you that's a nice benefit to the strategy, but I don't get the sense that that's the

20:01.320 --> 20:03.400
core strategy of the Windows subsystem for Linux.

20:03.400 --> 20:07.400
If it was, there would probably have been more of an emphasis on running GUI applications

20:07.400 --> 20:12.080
or they would have bundled a Wayland or X Wayland server or an X11 server.

20:12.080 --> 20:14.580
But is that not coming down the road?

20:14.580 --> 20:16.360
It really should if they're not working on that.

20:16.360 --> 20:18.280
I mean, it seems like a good strategy to me.

20:18.280 --> 20:21.440
If you've got the subsystem, you might as well take a few shots at your competitor if

20:21.440 --> 20:22.440
you can.

20:22.440 --> 20:23.440
It's already there.

20:23.440 --> 20:24.920
If I were Microsoft, I'd be doing it.

20:24.920 --> 20:30.440
Yeah, but would that maybe upset the likes of Ubuntu, you know, Canonical, if they've

20:30.440 --> 20:37.600
worked hard with them for just this one aspect of it that's kind of, as you say, not a direct

20:37.600 --> 20:44.200
competitor on the desktop, for then suddenly to be able to run GUI apps and potentially

20:44.200 --> 20:46.320
even a desktop environment.

20:46.320 --> 20:51.820
At that point, you've got basically almost like a dual boot system without needing to

20:51.820 --> 20:52.820
dual boot.

20:52.820 --> 20:56.760
You know, I had that same thought, and I asked around a little bit.

20:56.760 --> 21:02.320
And the sense I've gotten from people at Canonical, you know, do you consider this a threat?

21:02.320 --> 21:04.680
Are you worried about this taking away Ubuntu on the desktop?

21:04.680 --> 21:06.940
You're doing all this work now, then Microsoft.

21:06.940 --> 21:11.920
The sense I get is, no, no, the reason why people choose to run Ubuntu on their desktop

21:11.920 --> 21:16.560
and on their workstations is because they're sick and tired of using Windows.

21:16.560 --> 21:19.200
And it's just, they're done with it.

21:19.200 --> 21:22.280
And they want something that's just going to let them get their work done, that matches

21:22.280 --> 21:24.660
production, and that's why they're choosing Ubuntu.

21:24.660 --> 21:28.960
And until Windows is no longer Windows, they're not really concerned about it, doesn't sound

21:28.960 --> 21:30.200
like to me.

21:30.200 --> 21:31.200
Maybe they're right, maybe they're wrong.

21:31.200 --> 21:35.380
Well, yeah, I would never choose Windows if I could, if I had the choice.

21:35.380 --> 21:38.580
And while Linux continues to exist, I would keep using it.

21:38.580 --> 21:39.680
But then I'm not a developer.

21:39.680 --> 21:46.040
So I don't know, in my mind, the typical developer plays games as well in their spare time.

21:46.040 --> 21:49.400
Maybe that's a stereotype, but yeah, I could see it.

21:49.400 --> 21:56.600
And that the fact is that with Steam, okay, you can get a few games running on Linux,

21:56.600 --> 21:59.300
but just gaming is better on Windows.

21:59.300 --> 22:04.160
And so that's just what I have in my mind of who the subsystem is aimed at.

22:04.160 --> 22:10.960
It's aimed at developers who like to play games and have a Windows machine.

22:10.960 --> 22:15.100
And it's just trying to pull them into that Windows world full time.

22:15.100 --> 22:16.100
I don't think you're wrong.

22:16.100 --> 22:17.160
I think it is partially that.

22:17.160 --> 22:22.400
But more so, I think it's about freeing developers from being locked inside Linux VMs all day,

22:22.400 --> 22:26.400
and getting them back inside their desktop, and reducing the overhead of having a bunch

22:26.400 --> 22:27.720
of Linux VMs.

22:27.720 --> 22:30.480
And I think that's why they're working on being able to run multiple different Linux

22:30.480 --> 22:35.080
distributions in windowed mode, so you have SUSE next to Ubuntu, just like you would if

22:35.080 --> 22:36.160
you're doing VMs.

22:36.160 --> 22:38.400
That's what they're targeting right now.

22:38.400 --> 22:41.080
Could see it going that direction, or I could just see them adding features that makes it

22:41.080 --> 22:43.520
more and more competitive to the Linux desktop.

22:43.520 --> 22:47.140
But I think it's more so about that developer who's stuck in the VM.

22:47.140 --> 22:48.140
That's my take on it.

22:48.140 --> 22:49.840
Yeah, I think realistically you're right.

22:49.840 --> 22:54.800
I think that there are far fewer dual booters than I like to think when if you've got a

22:54.800 --> 22:58.800
decent laptop with loads of RAM, you're just going to be running a bunch of VMs.

22:58.800 --> 23:02.600
So yeah, I suppose you're right, that takes away those VMs and the overhead, as you say.

23:02.600 --> 23:04.840
So maybe I'm just dreaming.

23:04.840 --> 23:08.400
And besides, while we're figuring all of this out, Bill Gates is switching to Android, and

23:08.400 --> 23:09.400
that's...

23:09.400 --> 23:14.560
Yeah, that was quite a big story in some parts this week, wasn't it?

23:14.560 --> 23:17.160
For me, I just can't get too excited about that.

23:17.160 --> 23:19.720
I mean, he's not going to use an iPhone, is he, at the end of the day?

23:19.720 --> 23:20.720
I suppose not.

23:20.720 --> 23:22.680
And so he's not going to use...

23:22.680 --> 23:23.680
What's the alternative?

23:23.680 --> 23:26.240
He's not going to use a Sailfish phone, is he?

23:26.240 --> 23:29.680
I was going to say he could switch to Blackberry, but then I realized those run Android too.

23:29.680 --> 23:32.000
So you're right, he's pretty much stuck.

23:32.000 --> 23:34.760
Maybe if we wouldn't ask Tim Cook, they'd give him an iPhone X early and then he could

23:34.760 --> 23:36.520
at least have a status symbol.

23:36.520 --> 23:40.240
If you want a status symbol, you should have a new episode of Linux Action News in your

23:40.240 --> 23:42.640
pod feeder every single week.

23:42.640 --> 23:47.000
Go to linuxactionnews.com slash subscribe for all the ways to get your status symbol,

23:47.000 --> 23:48.520
aka the show.

23:48.520 --> 23:54.280
Yeah, and go to linuxactionnews.com slash contact if you want to get in touch with us.

23:54.280 --> 23:58.720
And also please consider supporting the network and all of our future work over at patreon.com

23:58.720 --> 24:00.600
slash jupitersignal.

24:00.600 --> 24:04.640
We'll be back next Monday with our weekly take on the latest Linux and open source news.

24:04.640 --> 24:06.160
I'm at Chris LAS.

24:06.160 --> 24:07.480
I'm at Joe Rissington.

24:07.480 --> 24:09.720
Thank you for joining us and we'll see you next week.

24:09.720 --> 24:27.880
See you later.

