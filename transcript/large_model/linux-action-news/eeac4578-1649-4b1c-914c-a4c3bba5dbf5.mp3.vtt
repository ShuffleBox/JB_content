WEBVTT

00:00.000 --> 00:10.780
Hello, and welcome to Linux Action News. Episode 252, recorded on August 3rd, 2022. I'm Chris.

00:10.780 --> 00:11.780
And I'm Wes.

00:11.780 --> 00:15.020
Hello, Wes. Let's do the news.

00:15.020 --> 00:20.700
There has been a lot of chatter as we record about a, quote, massive widespread malware

00:20.700 --> 00:29.140
attack on GitHub. Steven Lacy on Twitter reported finding, quote, over 35,000 infected code

00:29.140 --> 00:31.320
hits on GitHub.

00:31.320 --> 00:36.860
But it turns out things might not be as bad as the internet seemed to initially think.

00:36.860 --> 00:42.640
A false alarm of sorts. There is a problem, but maybe not as bad as originally thought.

00:42.640 --> 00:48.580
The infected repositories were just simply forks and clones of projects. And GitHub seemed

00:48.580 --> 00:53.380
to be really quick to clean it up, faster than I've ever seen any service provider clean

00:53.380 --> 00:54.380
things up.

00:54.380 --> 00:59.180
Yeah, they definitely deserve some props on this one. I saw the reporting tweet floating

00:59.180 --> 01:03.720
around last night, but by the time I saw it and tried to click a few links, I was already

01:03.720 --> 01:05.800
getting 404s.

01:05.800 --> 01:11.000
We're not entirely sure of the motivation of these malware actors, but this attack vector

01:11.000 --> 01:16.340
seems like it might be trying to target users who type in related code snippets into their

01:16.340 --> 01:22.880
favorite search engine, and then happen to land on these malicious random GitHub repositories.

01:22.880 --> 01:27.800
As discovered by Steven Lacy when accidentally browsing through one of these infected fake

01:27.800 --> 01:29.880
clones himself.

01:29.880 --> 01:34.440
The attacker amended the most recent commit and modified it with malicious code. It's

01:34.440 --> 01:39.440
possible they planned to then inject that code into the original forked project, but

01:39.440 --> 01:44.680
that's just an educated guess based on what the researchers have found.

01:44.680 --> 01:51.200
This kind of confusion is possible by amending or committing changes in just the right manner,

01:51.200 --> 01:55.840
letting attackers impersonate another GitHub user and make it look like the commit came

01:55.840 --> 02:02.060
from them, at least in an attacker controlled repository. Behind the scenes, this is done

02:02.060 --> 02:06.560
by locally changing certain environment variables to obtain the username and email address of

02:06.560 --> 02:12.200
the user the attacker would like to impersonate, and then push those phony commits up to their

02:12.200 --> 02:13.200
repo.

02:13.200 --> 02:17.320
Yeah, actually a similar trick was used back in January to make it appear as though Linus

02:17.320 --> 02:24.180
Torvalds was claiming to be Satoshi Nakamoto, the creator of Bitcoin. But the researchers

02:24.180 --> 02:28.800
who dug into this say this is actually kind of becoming more and more of a problem. They

02:28.800 --> 02:33.880
end their report with the following quote, we are seeing more and more large scale attacks

02:33.880 --> 02:44.600
on the open source ecosystem. Those attacks can easily fool an unsuspecting developer.

02:44.600 --> 02:50.880
It's time for a Steam Deck update. And there's plenty to talk about this week. Starting with

02:50.880 --> 02:56.720
the release of SteamOS 3.3, which has your typical array of bug fixes and other minor

02:56.720 --> 03:02.760
enhancements, but also solves user experience issues with the Deck.

03:02.760 --> 03:07.640
Indeed, audio and Bluetooth fixes probably being the biggest quality of life improvements

03:07.640 --> 03:13.440
for the Deck owners out there. But for me personally, it's tweaks to the virtual keyboard.

03:13.440 --> 03:19.960
Bring it Valve, bring it. Firefox is also now available as a flat pack. And as always,

03:19.960 --> 03:24.760
you'll love to see some nice updated Radeon graphics drivers making the update and 3.3

03:24.760 --> 03:29.880
has that. But perhaps most importantly, it seems that Valve is just shipping more of

03:29.880 --> 03:31.680
these things than ever.

03:31.680 --> 03:36.080
Of course, we've also been keeping an eye on the Decks impacts to Linux's overall Steam

03:36.080 --> 03:41.880
market share. Michael Harbel over at Ferronix reports that during June, Steam on Linux usage

03:41.880 --> 03:50.160
hit a multi-year high point of 1.18%. And that growth continued in July, with Linux

03:50.160 --> 04:00.120
gaming reaching a market share of 1.23%. That's an increase of 0.05% over just a month. Meanwhile,

04:00.120 --> 04:06.280
Windows is at 97% and macOS at 1.74.

04:06.280 --> 04:11.760
The reason why those relatively small numbers for Linux are actually impressive is you have

04:11.760 --> 04:17.520
to take in account the rest of Steam's market share continues to grow. So that Linux growth

04:17.520 --> 04:22.680
is in despite of the Windows growth. But also the speed at which we are seeing that number

04:22.680 --> 04:28.640
tick up is increasing. And it seems in no small part thanks to the Deck.

04:28.640 --> 04:35.560
And the software side of things that's coming together to meet that new demand. DXVK 1.10.3

04:35.560 --> 04:40.640
has been released, which is part of the latest version of Proton, which of course, powers

04:40.640 --> 04:45.920
Steam Play, letting you play those shiny Windows games under our beloved Linux.

04:45.920 --> 04:50.280
I think the most notable thing though with the updates to DXVK for us, at least in our

04:50.280 --> 04:54.120
opinion, is the implementation of shared fences, which is required for getting videos to work

04:54.120 --> 04:58.920
within the Halo Infinite Windows game, which is very popular right now. But Halo isn't

04:58.920 --> 05:03.220
the only game that's going to benefit from the updates. It is getting all of the attention

05:03.220 --> 05:08.520
and the headlines right now because it's like the big title. But DXVK 1.10.3 also fixes

05:08.520 --> 05:13.960
a regression that caused rendering issues in all Direct3D11 games, such as Wes's beloved

05:13.960 --> 05:21.180
Ninja Blade and Need for Speed 3. You can find my review of the Steam Deck in episode

05:21.180 --> 05:31.440
467 of Linux Unplugged. Yeah, we got them links in the notes.

05:31.440 --> 05:37.520
Debconf 22 in Kosovo recently wrapped up and Lenovo's Mark Pearson, who leads the company's

05:37.520 --> 05:43.240
Linux initiatives, talked in person about their 2022 platform support for Linux and

05:43.240 --> 05:46.120
their progress over the past year.

05:46.120 --> 05:52.240
And kind of right off the bat, Mark kind of makes it clear that 2021 was a rough year

05:52.240 --> 05:58.440
for Lenovo's Linux team, with multiple problems hitting them kind of all at once. He said

05:58.440 --> 06:02.740
Lenovo's Linux engineers were just challenged with one problem after another, like refresh

06:02.740 --> 06:08.320
problems with the OLED displays, Wi-Fi changes, Intel networking driver issues, AMD power

06:08.320 --> 06:13.240
problems that had to be sorted out, and of course, NVIDIA driver issues that caused the

06:13.240 --> 06:19.060
laptops to fail, energy certifications, and then on top of all of that, the dreaded supply

06:19.060 --> 06:22.100
chain shortages that hit everybody.

06:22.100 --> 06:27.360
But it seems like their luck may be turning around in 2022. And Mark pointed out that

06:27.360 --> 06:35.400
there are now over 36 Lenovo systems certified to run Linux in 2022.

06:35.400 --> 06:39.200
I listen to quite a few Linux podcasts and talk to a lot of people and there was quite

06:39.200 --> 06:43.440
a bit of sort of like Lenovo's giving up on Linux with some of the comments that I heard

06:43.440 --> 06:47.600
last year that really isn't true. And if you're interested, I can explain what happened last

06:47.600 --> 06:54.280
year and last year was rough. But yeah, we are still the Lenovo Linux team is very busy.

06:54.280 --> 06:57.400
So I actually thought, I hope I'm not gonna get into trouble for this, but I thought I'd

06:57.400 --> 07:01.200
actually put up some of what we do just so you can sit there and go, yeah, they do not.

07:01.200 --> 07:06.720
So we actually have 36 plus platforms and I put them on the side there. They're roughly

07:06.720 --> 07:12.560
so Intel ones, AMD and workstation, a mix of them, but I put them separately. Not in

07:12.560 --> 07:17.740
the list is we also have ThinkCenter platforms. Previously, I've never really talked about

07:17.740 --> 07:21.540
ThinkCenter because they were not doing Linux properly, but they are now. They are putting

07:21.540 --> 07:25.480
firmware on LVFS, doing all the right things.

07:25.480 --> 07:30.860
And that is excellent news indeed. He also told the conference attendees that Lenovo

07:30.860 --> 07:36.360
continues building closer relationships with the OEM hardware vendors with aims to improve

07:36.360 --> 07:42.160
Linux support and compatibility, which thankfully was one thing that did not seem to slow down

07:42.160 --> 07:43.160
in 2021.

07:43.160 --> 07:49.240
You know, I think the entire talk is worth a listen. It's about 45 ish minutes long

07:49.240 --> 07:54.360
and in there it gives you insights into just how hard it is to make hardware. That's always

07:54.360 --> 07:58.920
worth kind of reminding ourselves, but also I feel like you get insights into what is

07:58.920 --> 08:04.240
really different about building hardware to run Linux versus building hardware to run

08:04.240 --> 08:09.680
Windows and the different processes involved for drivers and hardware fixes. I found that

08:09.680 --> 08:18.080
to be particularly fascinating and yes, we got a link in the show notes.

08:18.080 --> 08:22.500
Recently we told you about a Fedora change proposal to officially support the Raspberry

08:22.500 --> 08:30.840
Pi 4, including full accelerated graphics. Well, this week the Fedora Engineering and

08:30.840 --> 08:38.460
Steering Committee signed off on this now official support for the Pi 4.

08:38.460 --> 08:43.480
For a bit of background, up to now the Raspberry Pi 4 really hasn't been a significant focus

08:43.480 --> 08:49.920
of the Fedora workstation due to various patches not being upstreamed. Most notably of course

08:49.920 --> 08:56.080
waiting on the open source 3D graphics bits to make it upstream in the kernel. But now

08:56.080 --> 09:02.280
that those bits are finally coming together, work begins on Fedora 37 to support the Raspberry

09:02.280 --> 09:13.960
Pi 4 Model B, the Raspberry Pi 400 and the Raspberry Pi CM4 Compute Module.

09:13.960 --> 09:19.520
Linode.com slash LAN. Go there to get $100 in 60 day credit on a new account and you

09:19.520 --> 09:24.720
go there to support the show. Linode is fast, reliable cloud hosting with the best support

09:24.720 --> 09:30.320
in the business. Real humans all day, every day that can help you. Linode is how we run

09:30.320 --> 09:35.560
everything that we've built in the last few years in the cloud. And like us, Linode

09:35.560 --> 09:40.100
loves Linux. They use it every day throughout the company, throughout their environment

09:40.100 --> 09:44.860
and they build it into their tools. You can really tell as a Linux user, it's a company

09:44.860 --> 09:51.520
that gets Linux. That was the base that they used to build Linode nearly 19 years ago and

09:51.520 --> 09:58.000
today nobody has them matched. And the great thing is they're 30 to 50% cheaper than the

09:58.000 --> 10:01.940
hyperscalers that just want to lock you into their platforms and are always trying to upsell

10:01.940 --> 10:06.240
you on their next thing. They've always got a fancy name for all those crazy things

10:06.240 --> 10:07.240
too.

10:07.240 --> 10:11.700
But on top of all of that, Linode has the best performance and they've got 11 data

10:11.700 --> 10:16.280
centers for you to choose from with great features like object storage, cloud firewall

10:16.280 --> 10:21.180
backups, Kubernetes and Terraform support and a lot more. But really I think the best

10:21.180 --> 10:26.800
way to see it is to try it yourself. As they used to say, go kick the tires, go build something,

10:26.800 --> 10:32.560
go learn something, try it yourself and see what I've been talking about. So go to linode.com

10:32.560 --> 10:39.480
slash lan, get that $100 for 60 days on a new account and really try it. That's linode.com

10:39.480 --> 10:45.360
slash lan.

10:45.360 --> 10:51.080
And a big thank you to Kalyde for making this episode possible. Kalyde.com slash lan. Kalyde

10:51.080 --> 10:56.760
is an endpoint security solution that uses the most powerful untapped resource in IT

10:56.760 --> 11:01.400
into users. When you're trying to achieve security goals, maybe for a third party audit

11:01.400 --> 11:06.560
or your own compliance standards, the conventional wisdom has been to treat every device like

11:06.560 --> 11:14.320
Fort Knox loaded up with software and policies. Old school device management tools like MDMs,

11:14.320 --> 11:21.080
they force disruptive agents onto your machines, onto your devices. They slow down performance

11:21.080 --> 11:28.040
and they treat privacy as a bolted on afterthought. And it really tends to drive users nuts. It

11:28.040 --> 11:34.000
turns IT admins and users into enemies. Plus they really create their own security problems

11:34.000 --> 11:38.760
often and you kind of almost have like shadow IT people in the organization trying to make

11:38.760 --> 11:44.580
it all work. It's just a mess. Kalyde does things differently. Instead of forcing changes

11:44.580 --> 11:50.240
on users, Kalyde sends them security recommendations via Slack. Kalyde will automatically notify

11:50.240 --> 11:55.840
your team when their device might be insecure and it'll give them step-by-step instructions

11:55.840 --> 12:00.520
on how to solve whatever the problem might be. And by reaching out to employees via friendly

12:00.520 --> 12:05.040
Slack DM and then educating them about the company policies, well Kalyde can help you

12:05.040 --> 12:11.700
build a culture where everyone is contributing to security because everyone understands how

12:11.700 --> 12:19.000
and why to do it. They get the reasons for the policies. And for IT admins, well Kalyde

12:19.000 --> 12:24.160
provides a single dashboard that lets you monitor the security of your entire fleet.

12:24.160 --> 12:28.680
Whether they're running on a Mac, Windows, or you bet, Linux as well. You can see at

12:28.680 --> 12:33.360
a glance which employees have their disks encrypted, their OS up to date, and a password

12:33.360 --> 12:39.600
manager installed. That makes it easy to prove compliance to auditors, customers, or leadership.

12:39.600 --> 12:44.920
So that's Kalyde, user-centered cross-platform endpoint security for teams that Slack. You

12:44.920 --> 12:50.480
can meet your compliance goals by putting users first. Visit Kalyde.com slash LAN to

12:50.480 --> 12:54.360
find out how. And if you go there, they'll hook you up with a goody bag which includes

12:54.360 --> 13:00.560
a free t-shirt just for activating a free trial. So it's Kalyde.com slash LAN. That's

13:00.560 --> 13:08.120
K-O-L-I-D-E.com slash L-A-N.

13:08.120 --> 13:14.200
Linux 5.19 was released this week after a one-week delay to deal with the fallout from

13:14.200 --> 13:22.520
the retbleed mitigations. Work on 5.19 was contributed to by 2,086 developers. That's

13:22.520 --> 13:29.480
a new record, beating the 2,062 developers who contributed to the 5.13 cycle. Of those

13:29.480 --> 13:36.320
developers, 278 made their very first kernel contribution, which is always wonderful to

13:36.320 --> 13:37.720
see.

13:37.720 --> 13:44.360
As for the release in its totality, Linus referred to it lovingly, we assume, as quote,

13:44.360 --> 13:48.560
a mixed bag of various odds and ends.

13:48.560 --> 13:53.880
An odds and sods release, it truly, truly was. But there's some interesting data in

13:53.880 --> 13:58.760
here that LWN pulled out. We'll link to it. The top contributors for this release has

13:58.760 --> 14:05.560
been changing over the last few releases, and AMD's growing Linux team is really coming

14:05.560 --> 14:13.320
in at the top of the list now by a pretty big margin. AMD accounted for 37.9% of the

14:13.320 --> 14:18.920
lines of code changed in this release of the Linux kernel, followed by Intel and then Lenovo

14:18.920 --> 14:26.800
at 6.5% and 4.9% respectively, and then Meta coming in at third place with 4.3% of the

14:26.800 --> 14:30.400
lines of code changed in Linux 5.19.

14:30.400 --> 14:35.080
There is some odds and sods notable features in here. Z-standard compression for firmwares

14:35.080 --> 14:38.720
here. That seems to be spreading everywhere throughout Linux these days, and it just offers

14:38.720 --> 14:43.240
space savings when you're trying to get the most you can out of a firmware, perhaps on

14:43.240 --> 14:47.600
an IoT device. Laptops equipped with Intel's Skylake through Comet Lake chips are going

14:47.600 --> 14:51.280
to run cooler. You're going to have better battery life after this update. That's always

14:51.280 --> 14:58.600
nice. And then the Apple M1 NVMe controller and Apple eFuses driver have also been merged

14:58.600 --> 15:00.840
into 5.19.

15:00.840 --> 15:06.080
And speaking of that shiny new Apple hardware, perhaps one of the more notable things about

15:06.080 --> 15:12.680
this latest release is that Linus released it from an ARM MacBook, writing in the announcement

15:12.680 --> 15:13.680
quote,

15:13.680 --> 15:19.100
On a personal note, the most interesting part here is that I did the release and am writing

15:19.100 --> 15:23.200
this on an ARM64 laptop.

15:23.200 --> 15:29.480
It's something I've been waiting for for a long time, and it's finally reality, thanks

15:29.480 --> 15:35.440
to the Asahi team. We've had ARM64 hardware around running Linux for a long time, but

15:35.440 --> 15:40.880
none of it has really been usable as a development platform until now.

15:40.880 --> 15:45.740
It's the third time I'm using Apple hardware for Linux development. I did it many years

15:45.740 --> 15:53.320
ago for PowerPC development on a PPC970 machine, and then a decade plus ago when the MacBook

15:53.320 --> 15:57.040
Air was the only real thin and light around.

15:57.040 --> 16:02.040
And now, as an ARM64 platform.

16:02.040 --> 16:06.480
Not that I've used it for any real work, I literally have only been doing test builds

16:06.480 --> 16:10.480
and boots and now the actual release tagging.

16:10.480 --> 16:16.400
But I'm trying to make sure the next time I travel, I can travel with this as a laptop,

16:16.400 --> 16:20.880
and finally dogfooding the ARM64 side too.

16:20.880 --> 16:26.440
And the ARM64 Linux community celebrated around the world with that news, and the Asahi project

16:26.440 --> 16:33.080
on Twitter confirmed that Linus is using an M2 MacBook Air running the ARM64 build of

16:33.080 --> 16:34.080
Fedora.

16:34.080 --> 16:39.080
Linus, of course, uses his own kernel builds with the Asahi branch merged in. If you're

16:39.080 --> 16:45.880
curious how he did that, the Asahi Linux documentation actually has a list of guides for most likely

16:45.880 --> 16:48.580
your favorite distro. We'll have a link to that in the notes.

16:48.580 --> 16:53.480
But I should probably make it clear, it's still not daily driver. It's at a stage where

16:53.480 --> 16:57.800
it's totally worth investing your time and energy into make things work and make them

16:57.800 --> 17:04.640
better. And if you are up for that, I say go for it. But just be aware, it's not quite

17:04.640 --> 17:07.920
daily driver for the rest of us.

17:07.920 --> 17:12.560
Don't worry though, we'll be keeping our eye on it, testing it, playing with it, and let

17:12.560 --> 17:16.960
you know when it seems ready to use, at least to us.

17:16.960 --> 17:21.480
Also interesting for those of us who follow these kinds of nerdy things, Linus stated

17:21.480 --> 17:28.480
that 5.19 might be the end of the 5 series kernel, writing quote, I'll likely call it

17:28.480 --> 17:35.140
6.0, since I'm starting to worry about getting confused by big numbers again.

17:35.140 --> 17:41.920
He always does this. I swear from like the early Linux 2 years, he was he was just kind

17:41.920 --> 17:47.440
of, I think, shocked by the big reaction to big changes. And I don't know, maybe I'm maybe

17:47.440 --> 17:50.720
I'm making something out of nothing here. But it seems like he always does this. Oh,

17:50.720 --> 17:55.760
it's no big deal. I'm just changing the version number because it's a big number. And I kind

17:55.760 --> 17:59.760
of love that he always claims that because I bet it is partially true. I kind of believe

17:59.760 --> 18:02.120
it to a degree.

18:02.120 --> 18:07.800
But it also just happens that the next version of the Linux kernel, whatever version number

18:07.800 --> 18:13.240
you give it, is going to be a whopper of a new release. I mean, we've got new IOU ring

18:13.240 --> 18:17.960
features in there that the enterprise is clamoring for. There's more improvements to the Apple

18:17.960 --> 18:22.960
SOC support that's going to make it even better for Linus himself. There's a really good chance

18:22.960 --> 18:28.040
the real time preempt RT patches land in this next release. And there's been significant

18:28.040 --> 18:33.200
plumbing for RISC-V improvements for Docker workloads, as well as those XFS improvements

18:33.200 --> 18:38.000
we told you about recently are going to land. And then quite possibly the most notable thing

18:38.000 --> 18:43.120
is that Rust support we've been talking about for what seems like 100 years might actually

18:43.120 --> 18:49.040
land in this next release. So all of that might actually warrant a bigger than normal

18:49.040 --> 18:54.040
version number bump. I don't know. Just my opinion, though. We'll see because he said

18:54.040 --> 18:59.320
likely, and Linus gets to do whatever he wants. So as always, we'll keep an eye on that kernel

18:59.320 --> 19:03.720
team and we'll keep you posted on what actually ships. So don't miss a single episode. Be

19:03.720 --> 19:09.300
sure you go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

19:09.300 --> 19:13.920
And linuxactionnews.com slash contact to let us know what nickname you think Linus should

19:13.920 --> 19:17.320
give to this next release.

19:17.320 --> 19:22.460
And don't miss this Friday's Office Hours. It's a spicy one that we want you to hear.

19:22.460 --> 19:27.120
Or you can go catch it right now unedited on Jupiter.Tube.

19:27.120 --> 19:32.280
As for this show, well, we'll be back next week with our take on the latest Linux and

19:32.280 --> 19:34.240
open source news.

19:34.240 --> 19:52.720
Thanks for joining us. That's all the news for this week.

