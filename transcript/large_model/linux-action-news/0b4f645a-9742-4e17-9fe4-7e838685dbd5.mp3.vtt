WEBVTT

00:00.000 --> 00:08.480
Hello, and welcome to Linux Action News, episode 201, recorded on August 8th, 2021.

00:08.480 --> 00:09.480
I'm Chris.

00:09.480 --> 00:10.480
And I'm Wes.

00:10.480 --> 00:15.440
Hello, Wes, from a very warm downtown Salt Lake City, let's do the news.

00:15.440 --> 00:21.300
As we approach the 30th anniversary of our dear Linux, Google's security team is taking

00:21.300 --> 00:25.760
a look at what might still be missing from the project.

00:25.760 --> 00:30.600
Google security team member Kees Cook wrote a blog post calling for more organizations

00:30.600 --> 00:35.280
to devote a greater number of engineers to the upstream Linux kernel.

00:35.280 --> 00:39.640
Besides acknowledging the need for more upstream kernel developers, the post also encourages

00:39.640 --> 00:46.080
vendors that are building devices and products around Linux to use the latest stable or LTS

00:46.080 --> 00:47.080
kernel.

00:47.080 --> 00:53.060
Noting that stable kernel releases see close to 100 new fixes each week, but given that

00:53.060 --> 00:58.080
rate of change, unfortunately, vendors are not consistently picking up the latest fixes.

00:58.080 --> 01:03.440
And in some cases, they're just trying to cherry pick the quote unquote, important ones.

01:03.440 --> 01:07.560
Realistically, Google's Android ecosystem contributed to a lot of the devices out there

01:07.560 --> 01:12.160
shipping in this cherry picked fix state with weird kernels.

01:12.160 --> 01:15.680
And so in that regard is good to actually see Google putting effort into this and drawing

01:15.680 --> 01:17.520
attention to this problem.

01:17.520 --> 01:21.840
And it legitimately does seem to be an area of focus for Google recently, even despite

01:21.840 --> 01:24.560
their increased efforts around fuchsia.

01:24.560 --> 01:29.840
This call for more engineers is in addition to Google's recent backing of rust in the

01:29.840 --> 01:35.520
Linux kernel, which is also initiative limited by manpower and one that Google is doing something

01:35.520 --> 01:37.100
about.

01:37.100 --> 01:40.960
So this blog post calling for more than just kernel developers, it makes a lot of sense.

01:40.960 --> 01:46.320
It also calls for more code review, it calls for more testing, it calls for more infrastructure

01:46.320 --> 01:48.000
around the Linux kernel.

01:48.000 --> 01:51.680
And it also draws attention to the shortage of engineers who can work on security and

01:51.680 --> 01:55.280
compiler tool chain development, a very complicated area.

01:55.280 --> 01:58.960
And when I was reading this post, I couldn't help but take away an underlying message that

01:58.960 --> 02:03.720
cook clearly feels that this one bug at a time technique vendors currently follow just

02:03.720 --> 02:09.120
isn't going to scale and something automated at a grander scale is required.

02:09.120 --> 02:14.040
Google estimates that the Linux kernel needs at least another 100 engineers focused on

02:14.040 --> 02:17.440
security and on those important tool chains.

02:17.440 --> 02:22.680
Now cook does partly blame the C programming language for some of this, saying with Linux

02:22.680 --> 02:28.440
written in C, it will continue to have a long tail of associated problems and that's one

02:28.440 --> 02:32.800
reason rust keeps coming up in regards to the Linux kernel.

02:32.800 --> 02:37.740
Even beyond the kernel, cook thinks that things like the MITRE common vulnerability and exposures

02:37.740 --> 02:42.800
list or CVE list used to track and assess the importance of security issues and bugs

02:42.800 --> 02:47.720
doesn't really think that's up to the task since not all security flaws actually get CVE

02:47.720 --> 02:48.720
assigned.

02:48.720 --> 02:51.960
And when they do, it's not always in a timely manner.

02:51.960 --> 02:56.240
As far as cook and the team at Google seem to see it, the only solution is to continually

02:56.240 --> 02:59.600
update to the latest version of the stable released kernel.

02:59.600 --> 03:05.000
As cook put it in the blog post, quote, performing continuous kernel updates faces enormous resistance

03:05.000 --> 03:08.320
within an organization due to fear of regression.

03:08.320 --> 03:11.000
I love the point that he makes in this post.

03:11.000 --> 03:15.280
He believes that the problem with updating is not that the kernel might cause a regression,

03:15.280 --> 03:20.480
it's that vendors don't have sufficient test coverage and automation to know if something

03:20.480 --> 03:21.960
is going to break.

03:21.960 --> 03:27.040
And cook points out that testing just has to take priority over individual fixes.

03:27.040 --> 03:30.840
Another issue with the whole mess we're in right now is that many vendors are still using

03:30.840 --> 03:35.280
old kernels and then are forced to backport whatever quote unquote important fixes that

03:35.280 --> 03:36.820
they identify.

03:36.820 --> 03:40.060
And that just means there's a whole bunch of redundant work going on as multiple engineers

03:40.060 --> 03:44.640
at different companies fix essentially the same problem.

03:44.640 --> 03:48.040
And unfortunately, this is not an issue going away.

03:48.040 --> 03:53.680
Cook notes that Google's fuzzing tool called Syscaller is currently reporting nearly 1000

03:53.680 --> 03:56.480
possible issues in the kernel.

03:56.480 --> 04:01.360
About 400 or so of those are fixed every year, and that's good, but the number is growing

04:01.360 --> 04:05.280
by over 100 per year as new ones are found.

04:05.280 --> 04:09.200
Also in Linux security news this week, your favorite web browser had a significant security

04:09.200 --> 04:14.640
flaw found that results in your site login info being sent in clear text and it seems

04:14.640 --> 04:18.360
the symptoms discovered have remained unreported for quite some years.

04:18.360 --> 04:21.880
So update your package cache because this one's going to need a patch.

04:21.880 --> 04:26.920
The venerable and irreplaceable Lynx browser, well at least the version from the Debian

04:26.920 --> 04:33.480
Experimental and Debian 8 Archive, will transmit a username and password in clear text even

04:33.480 --> 04:36.240
when the site in question is already using SSL.

04:36.240 --> 04:41.560
Yeah, when a user has a URL where they've prepended the username and password to it,

04:41.560 --> 04:45.240
Lynx just happily sends that in the clear text and you can easily pick it up with a

04:45.240 --> 04:46.240
tool like Wireshark.

04:46.240 --> 04:51.600
I mean, we're having some fun here, but in actuality, this may be a serious issue impacting

04:51.600 --> 04:54.800
some server side workloads and of course Richard Stallman.

04:54.800 --> 05:00.180
I guess we'll just have to put that week with Lynx challenge on hold for now.

05:00.180 --> 05:05.200
In more serious security news, Intel might have a series of patches that could improve

05:05.200 --> 05:08.400
security in your virtual machines.

05:08.400 --> 05:14.120
As part of their work around Trust Domain Extensions or TDX support for Lynx, Intel

05:14.120 --> 05:19.160
engineers are proposing a driver filter option which would allow administrators to set up

05:19.160 --> 05:24.400
allow and deny lists of drivers that can or cannot be loaded by a booted kernel.

05:24.400 --> 05:30.640
The goal here is to reduce the attack surface within a guest virtual machine while still

05:30.640 --> 05:34.600
using the same kernel as the host machine.

05:34.600 --> 05:39.120
When booting the guest, via the kernel command line, the admin can just specify the specific

05:39.120 --> 05:42.480
drivers that are allowed to be loaded by that kernel.

05:42.480 --> 05:46.760
Or alternatively, a list of drivers that kernel shouldn't load, depending on how you want

05:46.760 --> 05:47.760
to configure things.

05:47.760 --> 05:52.520
Now, don't worry, by default, Intel's proposal won't change any of the regular behavior

05:52.520 --> 05:57.220
of the kernel, but it would add a new handy framework that should make it straightforward

05:57.220 --> 06:01.860
to specify what kernel drivers are permitted without having to actually remove any modules

06:01.860 --> 06:31.720
from the virtual machine or even rebuild a custom kernel just for that.

06:32.240 --> 06:38.120
This new release brings another level of maturity to the project with plenty of new features.

06:38.120 --> 06:43.680
But the biggest user-facing change in this release has got to be support for Bluetooth

06:43.680 --> 06:49.080
audio devices automatically switching between headset and audio profiles.

06:49.080 --> 06:50.560
Hallelujah Wes!

06:50.560 --> 06:54.240
If you've ever been disappointed with the audio quality of a Bluetooth headset when

06:54.240 --> 06:59.600
you have paired it to your Lynx machine, this is just going to make such a huge difference.

06:59.600 --> 07:01.920
It is so fantastic to see this change.

07:01.920 --> 07:05.960
I remember when I got my first pair of Bluetooth headphones and tried them with Lynx before

07:05.960 --> 07:11.160
trying them with any other system, and I was legitimately worried they might be broken.

07:11.160 --> 07:12.720
It just sounded so bad.

07:12.720 --> 07:13.720
Oh man.

07:13.720 --> 07:18.560
I mean, okay, yeah, I was eventually able to fix it, but I know my way around PAVU control,

07:18.560 --> 07:21.460
and I don't think many Linux users really do.

07:21.460 --> 07:25.920
But for those who do, there are also some exciting improvements to support pro audio

07:25.920 --> 07:30.880
workflows in this release, including support for multiple sample rates, as well as a whole

07:30.880 --> 07:35.160
batch of general and performance-specific improvements.

07:35.160 --> 07:39.720
Another story that we've pledged to follow is Samsung's in-kernel Samba server.

07:39.720 --> 07:43.800
Because as you already know, turning your kernel into a file server always listening

07:43.800 --> 07:47.880
for remote connections is awesome and could never go wrong.

07:47.880 --> 07:52.800
But today, like a dirty web browser, Samba is implemented in user space.

07:52.800 --> 07:58.120
But the wizards over at Samsung have been pursuing an SMB file server implemented in

07:58.120 --> 08:04.560
kernel space, with an aim for better performance and wiring up new features such as RDMA support

08:04.560 --> 08:07.780
that can be implemented with ease inside the kernel.

08:07.780 --> 08:12.420
Another motivating factor for Samsung is achieving a smaller footprint and a narrower scope of

08:12.420 --> 08:15.120
features when compared to Samba.

08:15.120 --> 08:16.120
How's it going?

08:16.120 --> 08:21.080
Well, the seventh round of patches were posted this past Thursday, with the hopes of getting

08:21.080 --> 08:25.960
KSMBD, as they're calling it, upstreamed into the mainline kernel soon.

08:25.960 --> 08:31.960
Now, clearly, this is not a full Samba server meant to replace a big enterprise Samba installation

08:31.960 --> 08:34.760
doing a lot of complicated tasks.

08:34.760 --> 08:39.600
But while I can hear Chris laughing right now, I wouldn't be too surprised if this

08:39.600 --> 08:55.160
ends up on one of his Raspberry Pi's before long.

08:55.160 --> 09:14.080
So, let's get to it.

09:14.080 --> 09:17.400
This year alone, they've released custom images to general availability, making it easier

09:17.400 --> 09:22.000
for customers to create, store, and deploy one image across multiple machines.

09:22.000 --> 09:26.960
They added two free security solutions, including the Cloud Firewall and Private VLANs, and

09:26.960 --> 09:31.560
for developers, they've extended the tools to support Kubernetes, Terraform, and Ansible

09:31.560 --> 09:37.480
modules, all while having one of the cleanest and easiest to use UIs in the business.

09:37.480 --> 09:42.400
Linode lets you turn any idea into something you can actually bring to life on the web.

09:42.400 --> 09:46.900
And if you ever get in any trouble, well, they have the best support team.

09:46.900 --> 09:53.120
Their support team won five Stevie Awards, including the coveted People's Choice Award.

09:53.120 --> 09:55.160
There's nobody that doesn't like Linode.

09:55.160 --> 09:58.340
They have hundreds of guides and tutorials to help you get started as well, then once

09:58.340 --> 10:02.560
you're up and running, you can take advantage of those advanced features like S3 compatible

10:02.560 --> 10:06.720
object storage, and their super fast SSDs.

10:06.720 --> 10:11.720
Linode was recently reviewed by Cloud Spectator as having the fastest CPUs in the industry.

10:11.720 --> 10:16.880
I mean, they compared all of the major cloud providers, and Linode beat them all.

10:16.880 --> 10:20.880
Their one-click Minecraft server lets you specify features like NPCs, game mode, and

10:20.880 --> 10:25.040
critical game specifications with a simple one-click deployment.

10:25.040 --> 10:29.960
So go to linode.com slash LAN and get that $100 60-day credit on your new account, and

10:29.960 --> 10:30.960
you support the show.

10:30.960 --> 10:32.880
It's a great way to learn, too.

10:32.880 --> 10:36.600
If you want to try something, you could do a nice side-by-side comparison, kick it off

10:36.600 --> 10:44.040
on Linode, and pick the winner, linode.com slash LAN.

10:44.040 --> 10:46.440
Linux dot ting dot com.

10:46.440 --> 10:48.520
Are you sick of overpaying for cell service?

10:48.520 --> 10:49.520
Because you should be.

10:49.520 --> 10:54.480
The duopoly out there has wrecked the market, so Ting's here to bring us all a breath of

10:54.480 --> 10:55.480
fresh air.

10:55.480 --> 11:00.160
In fact, for a limited time, you can sign up for Ting's unlimited plan.

11:00.160 --> 11:03.560
Just pay $25 a month for the first three months.

11:03.560 --> 11:07.760
That's $20 off the standard unlimited plan, and it's quite the offer.

11:07.760 --> 11:09.520
Of course, there's a plan for everybody.

11:09.520 --> 11:14.720
Ting's set 12 plan gives you 12 gigs of data with unlimited talk and text for just $35

11:14.720 --> 11:15.720
a month.

11:15.720 --> 11:19.760
So, I know a good family plan is hard to find, and Ting's got you covered there.

11:19.760 --> 11:23.980
If you use 2 gigs, or if you use 20 gigs, there's a perfect Ting plan for you.

11:23.980 --> 11:29.720
And every plan gets access to Ting's award-winning customer service with nationwide LTE and 5G

11:29.720 --> 11:30.720
coverage.

11:30.720 --> 11:34.880
Plus, the freedom of no contracts covered.

11:34.880 --> 11:35.880
That's awesome.

11:35.880 --> 11:39.080
And there's three great networks to choose from, so it's simple to switch to Ting.

11:39.080 --> 11:41.720
Pretty much any phone will work with Ting.

11:41.720 --> 11:44.260
You just start by going to linux.ting.com.

11:44.260 --> 11:47.840
You get $25 off, and you can check your current phone, see if it's compatible.

11:47.840 --> 11:51.360
Create an account, pick the plan that's right for you, and then Ting will send you a SIM

11:51.360 --> 11:54.520
card that you pop in your phone, and you get activated in minutes.

11:54.520 --> 11:57.240
Their dashboard makes it simple, makes it straightforward.

11:57.240 --> 11:58.460
It sets the bar.

11:58.460 --> 12:03.520
And cutting your phone bill in half has never been easier with Ting's brand new plans.

12:03.520 --> 12:05.960
Go check out the new Shiny and save $25.

12:05.960 --> 12:08.480
It's the next generation of Ting Mobile.

12:08.480 --> 12:10.680
It's here, and it's awesome.

12:10.680 --> 12:19.720
Linux.ting.com Gaming isn't really a focus of this show,

12:19.720 --> 12:23.040
and not something we really plan to expand into.

12:23.040 --> 12:30.160
But it is an area of major Linux development this week, and the wider implications might

12:30.160 --> 12:34.580
be some of the biggest news in the Linux desktop for years.

12:34.580 --> 12:39.120
As the general tech sector begins to react to the Steam Deck, we're seeing more and

12:39.120 --> 12:43.840
more positive coverage of the Linux OS powering that hardware.

12:43.840 --> 12:50.360
Recently, Linus Sebastian of Linus Tech Tips visited Bell's office in Bellevue, Washington.

12:50.360 --> 12:57.120
And during that visit, Sebastian was given unprecedented access to Deck prototype hardware.

12:57.120 --> 13:02.120
Out of all the tests performed, something we've all been very interested in stood out.

13:02.120 --> 13:09.160
Plugging in a monitor via USB-C and getting access to that sweet, sweet Plasma desktop.

13:09.160 --> 13:13.000
I would like to try USB-C DisplayPort in.

13:13.000 --> 13:14.000
Is it worth a shot?

13:14.000 --> 13:15.000
All right.

13:15.000 --> 13:16.760
Hey, it should be fine.

13:16.760 --> 13:18.640
That's famous last words right there, hey?

13:18.640 --> 13:24.320
If it doesn't work, if this even makes it into the video, we're not...

13:24.320 --> 13:25.460
Just like that!

13:25.460 --> 13:30.880
So if you weren't already convinced that this is a full-fat PC, just in a handheld form

13:30.880 --> 13:33.200
factor, well, this should pretty much do it.

13:33.200 --> 13:34.200
So can I just...

13:34.200 --> 13:36.680
I'm gonna switch to external screen, right?

13:36.680 --> 13:37.680
That sounds right?

13:37.680 --> 13:41.080
Because it's not a laptop, but the OS we're running thinks it's a laptop.

13:41.080 --> 13:46.560
And if you were curious if it's gonna run 4K 60 hertz, that's your answer right there.

13:46.560 --> 13:47.560
I think...

13:47.560 --> 13:48.560
Ooh, it might be at 30 right now.

13:48.560 --> 13:49.560
It's hard to tell.

13:49.560 --> 13:50.560
I'm so used to...

13:50.560 --> 13:53.880
No, it's at 60 hertz!

13:53.880 --> 13:55.180
Freaking awesome!

13:55.180 --> 13:56.180
Just like that!

13:56.180 --> 13:58.040
How relieved are you guys right now?

13:58.040 --> 14:02.040
While watching the video, I was also really interested in getting a sense of the gaming

14:02.040 --> 14:03.040
performance.

14:03.040 --> 14:09.400
I mean, after all, I will probably use this more as a portable PC than a gaming console,

14:09.400 --> 14:13.800
but how well the Steam Deck Games is gonna make or break this device.

14:13.800 --> 14:15.640
The game's running really smoothly though.

14:15.640 --> 14:21.240
I've been extremely pleased with the gaming experience and everything I've tried so far.

14:21.240 --> 14:26.520
But I think the big breakthrough here, the one we see rippling throughout the tech press,

14:26.520 --> 14:32.200
is really on display in a different video on the Linus Tech Tips channel, the WAN show

14:32.200 --> 14:33.520
from August 6th.

14:33.520 --> 14:37.440
This is kind of like, it's like that, but on ROIDs, right?

14:37.440 --> 14:42.360
The smallest form factor gaming PC, because it's more than just a handheld console.

14:42.360 --> 14:45.100
It is a full-fledged PC.

14:45.100 --> 14:51.720
The fact that it has a USB-C docking connector on it means that you can power this thing,

14:51.720 --> 14:58.880
it's two USB power delivery off of a device that can run a display, peripherals, high-speed

14:58.880 --> 14:59.880
networking.

14:59.880 --> 15:01.040
The sky is the freaking limit.

15:01.040 --> 15:05.280
It is running a desktop-grade Linux operating system.

15:05.280 --> 15:11.280
All Valve has done is they've put a bunch of development work into their Proton, it's

15:11.280 --> 15:17.960
not an emulator, it's more like a translation layer between DirectX and, well, whether it's

15:17.960 --> 15:21.440
Vulkan or OpenGL, I guess it doesn't really matter, to Proton.

15:21.440 --> 15:24.020
Because both of those are supported on Linux.

15:24.020 --> 15:28.360
So they've put this development work into this kind of, this translation layer, and

15:28.360 --> 15:33.960
then this, you know, basically what is Steam big picture skin that runs on top of the translation

15:33.960 --> 15:38.440
layer to play your games, but other than that, it's just Linux.

15:38.440 --> 15:41.080
It's just, it's running freaking Linux.

15:41.080 --> 15:44.480
You know, unlike what Nintendo allows you to do, you can say, hey, look, I actually

15:44.480 --> 15:48.240
don't want to play games right now, and you can do whatever the f*** you want.

15:48.240 --> 15:49.840
That is so cool.

15:49.840 --> 15:52.920
It's just a computer, man.

15:52.920 --> 15:58.560
It was a major bug fix week over at the KDE project with many fixes to their core apps

15:58.560 --> 16:00.200
and the touchscreen experience.

16:00.200 --> 16:03.780
The project really appears to be making a solid effort to get things ready for the Steam

16:03.780 --> 16:04.780
Deck.

16:04.780 --> 16:10.080
Yeah, our friend Nate Graham notes in his most recent This Week in KDE blog post, we're

16:10.080 --> 16:13.600
really trying to improve the stability of our software now that it's starting to be

16:13.600 --> 16:17.760
used in more third-party products like the Steam Deck.

16:17.760 --> 16:22.600
The idea is that this will hopefully become a virtuous cycle of better and more stable

16:22.600 --> 16:27.160
products leading to more use, leading to even better and more stable products.

16:27.160 --> 16:30.240
And Linux gaming isn't all about Valve and the Steam Deck either.

16:30.240 --> 16:37.920
Lutris 0.5.9 Beta 1 is out and it's a killer update to this open source Linux game manager.

16:37.920 --> 16:43.620
And I think the really big feature here amongst a ton of stuff in this release is support

16:43.620 --> 16:45.860
for the Epic Game Store.

16:45.860 --> 16:50.260
But really, even if you don't have any Epic games, there's so much good stuff in this

16:50.260 --> 16:55.400
release of Lutris, it's worth checking out if you haven't grabbed Lutris in a while.

16:55.400 --> 17:01.720
Speaking of improvements, the schedule for this year's XDC21 X.org Developers Conference

17:01.720 --> 17:03.240
was posted this week.

17:03.240 --> 17:07.920
The conference is, once again, a virtual event, given the state of the pandemic.

17:07.920 --> 17:10.800
But thankfully, it's still going forward.

17:10.800 --> 17:16.000
Michael Arable over at Ferronix points out that Intel are again organizing much of the

17:16.000 --> 17:20.080
event, as well as Intel being the sole Platinum sponsor this time.

17:20.080 --> 17:22.840
Yeah, it's a bit of a shame to hear that.

17:22.840 --> 17:29.420
I wish this conference got more support because the list of topics alone is very impressive.

17:29.420 --> 17:33.640
And some of them, like several of them, I'd argue, are discussing hard problems that are

17:33.640 --> 17:36.720
critical to Linux's desktop success in the future.

17:36.720 --> 17:37.720
No kidding.

17:37.720 --> 17:40.440
We need some of these issues tackled.

17:40.440 --> 17:44.760
The event itself runs from the 15th to the 17th of September.

17:44.760 --> 17:48.240
Here's just a taste of some of those important topics.

17:48.240 --> 17:53.360
The current state of reverse engineering the GPU found in Apple's M1.

17:53.360 --> 17:55.960
Updates on the Raspberry Pi Vulkan driver.

17:55.960 --> 18:01.120
And perhaps directly to your point, Chris, David Edmondson with KDE will be talking about

18:01.120 --> 18:06.840
ongoing work and an early proof of concept for increasing Wayland robustness so if that

18:06.840 --> 18:11.640
compositor crashes, doesn't have to bring down your entire desktop session.

18:11.640 --> 18:14.160
Yes, please.

18:14.160 --> 18:16.600
And just like so many talks in there just look really good.

18:16.600 --> 18:19.520
Like they're clearly tackling these problems.

18:19.520 --> 18:23.880
They're thinking about things that I wondered if anybody was going to address and they are

18:23.880 --> 18:27.520
bringing up issues that, of course, I had never had any idea about.

18:27.520 --> 18:31.720
So again, it's the 15th to the 17th and we'll have a link for more information in the show

18:31.720 --> 18:32.720
notes on that.

18:32.720 --> 18:36.440
Seems like there could be a lot of good info, so we will try to keep an eye on it as well.

18:36.440 --> 18:39.980
Even if something develops out of there, of course, cover it for you.

18:39.980 --> 18:44.280
But before we go, I just wanted to say thank you to everyone who made it out to our Salt

18:44.280 --> 18:45.280
Lake City meetup.

18:45.280 --> 18:46.280
It was a blast.

18:46.280 --> 18:49.000
It's been a long time since we've been able to do something like this.

18:49.000 --> 18:51.960
And we had folks there that were just learning Linux for the first time.

18:51.960 --> 18:55.280
Like they came to the meetup because they wanted to understand more about Linux and

18:55.280 --> 18:57.040
they've heard there was this community.

18:57.040 --> 19:01.340
And so they came to our meetup and she had a great time and she walked away not only

19:01.340 --> 19:03.320
a listener but now a new Linux user.

19:03.320 --> 19:05.760
But of course, we also had security analysts there.

19:05.760 --> 19:06.760
We had developers.

19:06.760 --> 19:07.760
We had engineers.

19:07.760 --> 19:11.720
We had folks that made it from Wyoming, Montana, Idaho, all the Salt Lake City.

19:11.720 --> 19:13.440
And of course, we had locals.

19:13.440 --> 19:14.440
And Brent was there with me.

19:14.440 --> 19:20.280
He was the swag master handing out stickers and shirts, which were well received.

19:20.280 --> 19:23.680
There's some pictures of that on my Twitter feed at Chris Lass, if you want to see some

19:23.680 --> 19:24.680
of those.

19:24.680 --> 19:30.400
Or join our telegram group for frequent trip updates, jupitabroadcasting.com slash telegram.

19:30.400 --> 19:33.200
Yeah, how else are you going to get your Levi fix?

19:33.200 --> 19:37.000
We do have a few more shows from Salt Lake City, Coder Radio and Linux Unplugged.

19:37.000 --> 19:39.600
They will be live if everything goes as planned.

19:39.600 --> 19:43.580
So you can get the times for that at jupitabroadcasting.com slash calendar.

19:43.580 --> 19:48.360
But by the time we are recording the next Linux action news, we'll be just outside the

19:48.360 --> 19:49.600
Denver area.

19:49.600 --> 19:55.320
You can keep tabs on our journey over at colonytracker.live and hit that micro meetup link if you're going

19:55.320 --> 19:56.760
to be in our route.

19:56.760 --> 20:00.200
Maybe if the timing works out, we can catch up and grab a bite or say hi and get some

20:00.200 --> 20:01.200
swag.

20:01.200 --> 20:02.200
We have swag on board.

20:02.200 --> 20:05.920
Or if you have any hot route tips, if you see where we're going and think we should

20:05.920 --> 20:09.600
know about some construction or some problem along the way, that micro meetup form could

20:09.600 --> 20:12.000
technically work for that as well.

20:12.000 --> 20:16.280
But for this here podcast, you're going to want to go to linuxactionnews.com slash subscribe.

20:16.280 --> 20:19.440
So that way you get every new episode as we release it.

20:19.440 --> 20:23.900
And linuxactionnews.com slash contact for ways to keep in touch.

20:23.900 --> 20:27.800
If you enjoy Linux action news and you think you know someone who might also enjoy the

20:27.800 --> 20:31.520
show, maybe they're in the biz and they need to stay up to date on what's going on, send

20:31.520 --> 20:34.280
them a link to your favorite episode and help spread the word.

20:34.280 --> 20:40.640
We'll be back next Monday with our weekly take on the latest Linux and open source news.

20:40.640 --> 20:41.640
Thanks for joining us.

20:41.640 --> 21:02.080
And that's all the news for this week.

