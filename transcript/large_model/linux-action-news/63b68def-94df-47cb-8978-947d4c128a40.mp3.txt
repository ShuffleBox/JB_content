Hello, and welcome to Linux Action News, episode 149, recorded on March 14th, 2020.
I'm Joe.
I'm Drew.
And I'm Wes.
Yeah, while Chris is driving his house across the country, I thought, do I want to do this
with Wes or Drew?
And I thought, why not both?
So thank you both for joining me, it's much appreciated.
You're very welcome.
Double the fun.
So let's start with Firefox 74, which has been released.
Yeah, and while it seems like it's a pretty boring release on the outside, there actually
is a lot going on on the inside that really does need to be discussed.
The biggest change to my eye is the removal of TLS 1.0 and 1.1, which has been announced
since October 2018, and is finally happening in modern browsers.
Yeah, they say on the Mozilla hacks blog, you'll need to make sure your web server supports
TLS 1.2 or 1.3 going forward.
But they also say note for a couple of release cycles and longer for Firefox ESR, the secure
connection failed error page will feature an override button allowing you to enable
TLS 1.0 and 1.1 in cases where your server is not yet upgraded, but you won't be able
to rely on it for too long.
And you know, I really think this is a good way of going about it.
It's a little conservative in that it still allows these older protocols to be used.
But it also gives some time for people to complain to the websites that are posting
these errors to say, hey, maybe you should upgrade.
To be fair, even pretty old installations at this point support TLS 1.2.
So it's not going to affect that many servers, is it?
Well, to be honest, I've been running Firefox 74 for a few days now, and I haven't come
across a single page that I've had this error with.
So it seems to me like we're not going to have a huge amount of breakage across the
web with this.
Lazy sys admins, you know who you are.
The other big change with Firefox 74 is with add-ons.
And from now on, add-ons can only be installed by the user.
They can't be installed by an application.
So say you install Skype, installs its Firefox extension, well, it's not going to be able
to do that anymore, which is a welcome change.
In addition, you can now manage those sideloaded extensions right in the regular extensions
menu.
Yeah, this is a huge change that I really think is a great direction for them to be
going in, partially because there are plenty of malicious apps out there that can put in
some pretty nasty stuff.
And this really goes a long way in sidestepping that kind of issue.
But it is worth noting that companies who install extensions by default can still do
it through policy.
That hasn't been removed yet.
Yeah.
And they say on the Mozilla add-ons blog that Linux distros will be able to continue to
deploy extensions to users and that they will continue to support self-distributed extensions.
So it doesn't require developers to put their extensions in the addons.mozilla.org repository.
And users can install extensions from other sites if they want to.
So it's not like they're completely locking it down, they're just tightening things up
a bit.
I've been impressed with that approach from Mozilla for a while, including with their
response to DNS over HTTPS, where they're trying to make some changes that really respect
the privacy of individual users, but they're clearly also thinking about these large enterprise
deployment scenarios.
But come on, we've really buried the lead here.
The main new feature is that they've now made it easy to import your bookmarks and history
from Microsoft Edge.
That's a browser I still have yet to try out, but hey, at least they're keeping up with
the times.
Yeah.
I mean, I was kind of joking, but then there are potentially quite a lot of Edge users.
And yeah, it is Firefox keeping up with the times.
So yeah, well done.
And Edge is due to arrive on Linux sometime soon.
Yeah, I'm really looking forward to trying it.
I got it running in Wine when it was Windows only and it worked all right.
I mean, it's just like Chromium, you know?
Yeah.
And as we've talked about before on the show, who do you trust more, Microsoft or Google?
It's kind of a coin toss at this point, I think.
Another little addition for the Firefox here before we leave this topic is that they've
made some changes to their Facebook container.
You can actually now add exceptions for specific sites that you want to be able to connect
to your Facebook instance, which I actually got to use just last night while ordering
a pizza.
Oh, now you're making me hungry, Drew.
Presumably while you were eating your pizza, you were checking out Gnome 3.36 then.
Yeah, actually I downloaded a copy of the Rawhide edition of Silverblue just to kind
of check it out and loaded it on my test laptop and gave it a little spin.
First of all, the changes that they've made to Adwaita are fantastic.
I think that the whole desktop, the new icons, the new dropdown menus, everything is really
looking very modern, very slick, and just downright pretty.
But the real thing that is making the headlines here is how fast it is.
Gnome 3.36 is so fast.
And it's really evident anytime that you have an animation running, like bringing up all
of your applications from the tray, that is so smooth and so fast that you could be forgiven
for thinking that you were on something like XFCE.
You know, I have to agree.
I've been trying this out on the Ubuntu 2004 daily, so my experience was not quite stock.
But both the new slick login screen really impressed me, and they finally fixed the hidden
suspend option where you had to hold shift to actually be able to suspend your computer.
It's all fixed up.
It really feels like the most polished release of Gnome yet.
There's a new Gnome extensions app then.
Yeah, actually, and it's a pretty nice little app.
And it's really making it harder for me to justify installing the Gnome tweaks application,
because one of the biggest reasons to do that was to manage your extensions.
Well, with this new extensions app having been blessed by the Gnome developers, you
no longer even really need to do that.
Not that I use very many extensions anyways, but it is nice to have them all in one place.
Though I do wonder why they didn't just integrate that in the settings panel.
One change I did appreciate in settings is that the privacy section now lists applications
that have been granted permission to access things like location services, your camera
and microphone.
Access can be revoked on a per app basis, which is nice to see, especially when we're
already used to things like this from mobile devices.
Yeah, that is very nice to see.
And Jory over at OMG Ubuntu has done a nice write up for this release, which we'll link
to in the show notes, which is at linuxactionnews.com slash 149.
Now it's a shame Chris isn't here because we could have our own version of Rustwatch.
Let's talk about Bottle Rocket, which is Amazon's new free and open source Linux based operating
system meant for hosting containers.
Yeah, they finally got with the times and tried to build a simpler operating system
and one that comes with a single step update mechanism, which is similar to technology
we've seen in things like Project Atomic and CoreOS.
Yeah, on the GitHub page it says rather than a package manager that updates individual
pieces of software, Bottle Rocket downloads a full file system image and reboots into
it.
It can automatically roll back if boot failures occur and workload failures can trigger manual
rollbacks.
This really does feel a lot like CoreOS and what used to be Project Atomic and now that
those two have merged, you know, ContainerOS from Red Hat, but with some interesting tricks
that I'm kind of intrigued to see how they work in practice.
It does seem like this competition space is getting a little warmer than I expected it
to be.
I was a little put off at first, I'll admit, because a lot of the default configuration
is very Amazon specific, I mean, it is an Amazon project after all, but in their charter
they stress Bottle Rocket is open because the best OS can only be built through collaboration.
It's not a Kubernetes distro, nor an Amazon distro.
Yeah, it is MIT licensed, but I do wonder how much this will be used outside of Amazon
services.
Yeah, as an example of that, Bottle Rocket does not come with an SSH server in the image.
It does have a control container sitting outside that, but right now the only one that exists
is integrated with AWS SSM management.
But you can run your own control or admin container and that can be where the SSH server
is running.
Yeah, it is nice to see that they've thought of some of these things and they've really
tried to make Bottle Rocket simple so that if other cloud providers or open source organizations
try to adopt it, it's ready to go.
Now one nice thing for people who are running this on AWS is Amazon is providing three years
of support for any of the Bottle Rocket builds that they provide, which I think is a pretty
nice offering.
Really, my main takeaway is everyone seems to be recognizing that containers are basically
the default way to build and ship applications and you want a minimal OS that's focused on
running them.
One hugely popular technology for those containers is Docker, but Docker the company have struggled
historically to make any money, but they've come out this week with a new plan.
And this comes hot off the heels of Docker shedding its enterprise division over to Mirantis.
So this is them trying to improve the Docker tooling and improve Docker Hub to become sort
of a one-stop shop to keep things moving quickly from you developing it on your local workstation
and then putting it in the cloud.
Well, at the time of that sale to Mirantis, they talked about how they wanted to focus
on the developer and it was almost like Steve Ballmer style, developers, developers, developers.
And they haven't really fully outlined their plan.
This is more of a kind of sketch of a plan, I think, of how they're going to do that.
Interestingly, they actually have published their roadmap for the first time and it's
over on GitHub and publicly accessible.
It's just a little Kanban board, but it shows you what they're focusing on, which I think
is a good step.
Speaking of GitHub, this whole thing kind of reminds me of Microsoft's play buying
GitHub.
I think Docker really wants to be a go-to tool at dev time and, you know, selling off
the enterprise business to Mirantis is maybe a recognition that, oh, that whole operational
thing.
We kind of lost that game.
Everyone's already using Kubernetes or a number of other options and Swarm, it never really
took off.
But the best part about Docker has always been how easy it is to onboard people and
get developers building containers.
Yeah, Justin Graham writing on the Docker blog this week asked the question, how are
they going to do this?
And he answered it by saying, by focusing on the developer experience through Docker
desktop, partnering with the ecosystem and making Docker Hub the nexus for all integrations,
configuration and management of the application components which constitute your apps and
microservices.
And he also said, we will expand Docker Hub to help you manage all the application components
you generate as part of development and deployment.
So yeah, the plan is to offer a monthly software as a service subscription model that will
take everything from code all the way up to deployment in the cloud.
I liked the focus on the CLI.
He went on to write, we also want you to be able to access and interact with services
upstream, things like registry, continuous integration and deployment without having
to leave the CLI.
Although I think that really means without having to stop using the Docker CLI.
Well, with them also trying to make Docker Hub, quote, the central point for the ecosystem
of tools to partner with us in delivering you a great experience.
That makes sense.
They want you to be within their ecosystem as much as possible.
And I think the Docker CLI and the Docker Hub aspects are probably going to be a big
part of this play.
They want to try to have you publishing to their platform directly from their platform
as easily as possible.
It all sounds nice in theory, but I do wonder how successful this will be when there is
plenty of competition in this space.
I suppose Docker is a big name, but to what extent are they going to be able to monetize
it?
I don't know, but I suppose we'll see.
Once you've got a bunch of containers up and running, you're going to want to host them
somewhere.
And it looks like VMware wants to be the company to do that for you.
They've got their new Tanzu Kubernetes grid and a lot of new features in vSphere 7 to
drive people towards hosting containers directly rather than doing the traditional kind of
virtual machine hosting that they've been so good at for many years.
Yeah, included in this is a major re-architecture of vSphere with vSphere 7, which finally has
Kubernetes and containers right at the heart of it.
So you can manage your traditional VM infrastructure and your new fashioned container infrastructure
side by side with the same interface and same APIs.
And really, I think this is a recognition on the part of VMware that Kubernetes, while
super useful, it's honestly a bit too low level for a lot of business organizations.
And they want helpful tooling that can tie in with whatever they're already using and
manage that across environments or across clouds.
Yes, it really feels kind of like the one tool to tie everything together.
Not only can it handle Kubernetes clusters that you're running in the cloud, but you
can also manage things that are running on bare metal.
Realistically, this is the kind of orchestration platform that I think a lot of people have
been waiting for.
This just screams hybrid cloud to me, and that seems to be at least what IBM thinks
is the future.
Yeah, I think there are still a lot of quote unquote legacy businesses out there that do
have on premises deployments, but are looking to effectively leverage cloud services.
And unless you're a tech company directly, you might not have all the staff and DevOps
engineers on hand to integrate Kubernetes and your deployment software and your software
to manage your project management and something like JIRA.
All of that is pretty complicated and you either have to pay people to make it work
for you or pay VMware.
Now one other thing that they're launching is the new Tanzu application catalog, which
interestingly is pulling in a lot of open source software from Bitnami as something
that you can do as a prepackaged deployment.
The service has been around for a little while, and it started out as Project Galleon back
in August of last year.
But now it seems like they're rolling it into the Tanzu brand.
Yeah, I think this is another play to sort of simplify and standardize.
You don't have to custom create deployments in Kubernetes or even the Docker containers
themselves.
If you're using this catalog of apps, you know that as long as you're using the catalog,
whichever of your many teams that are using it, they'll all be running the same software,
which has the same supportability.
Well one thing's for sure, I think VMware is really making a play to try to hang on
to its existing customers that do still have those on-premise deployments and bring them
into the hybrid cloud and get them to integrate with Kubernetes since that is the new big
buzzword and a lot of people really are looking to leverage that technology.
This could be a really good play for VMware and a really good way for them to stay relevant
as more and more stuff moves up into the cloud.
Yeah, I think VMware are acutely aware that they are in danger of becoming a legacy company,
and so this is their play to stay relevant.
Well speaking of legacy, you guys remember Firefox OS, that phone operating system that
Mozilla had created way back when?
Well it never quite really died, it became something called KaiOS and now Mozilla is
getting back in the game to help KaiOS thrive.
KaiOS is based on Gecko, the same engine that powers the Firefox browser, and this new partnership
means they can improve things like security and performance that frankly have kind of
been lagging.
Yeah, they're looking at it trying to optimize the OS performance across the board and they're
also trying to get it up to date with newer technologies, like making sure that it can
connect to things like TLS 1.3.
Now I've actually had hands on with the KaiOS phone and it is quite an impressive operating
system for feature phones.
They're kind of calling it smart feature phones, which is that kind of gray area where it's
kind of a dumb phone but it does have some internet capabilities.
And what jumped out at me was that Google and Facebook were interested in this insofar
as you had some Google apps on there and you had WhatsApp as well.
And with these big players being involved and with them having shipped 120 million devices
running KaiOS, you can see why Mozilla are now interested again because they're kind
of looking at this thinking, well, if they're going to be using technology that we developed,
maybe we should help them keep it up to date and secure and everything.
If this takes off, it's not really a great look for Mozilla, them using an outdated Gecko.
But it's good to see that things will remain open source.
Joe Hildebrand, Mozilla's vice president of web platform said, this partnership will
ensure KaiOS remains a robust and secure web platform by bringing their version of Gecko
more up to date and keeping it up to date with the latest features, website compatibility
and security fixes.
And KaiOS say that all changes and improvements will be open sourced under Mozilla's public
license.
So all the help that Mozilla is going to give them isn't just going to disappear into a
proprietary black hole.
Open source at its best.
While staying on the mobile topic, there was some pretty bad news for the Android custom
ROM community this week.
And that is that Magisk may no longer be able to hide bootloader unlocking from apps.
If you're not familiar with Magisk, it's a little piece of magic software that basically
applies to Google's safety net attestation API and can sit a level below the Google Play
framework and tell any app that asks that, no, your phone's not rooted.
It's totally trustworthy.
Unfortunately, it seems like Google has slowly started to rely on the hardware roots of trust
it's mandated in recent Android phones to get around this.
Which is something that we knew could well be coming.
And now it seems that it has happened, at least for most phones, it seems that some
phones don't implement it properly.
And so there are some workarounds, specifically some OnePlus phones.
But it seems that ultimately, we are headed for a future where you won't be able to use
some banking apps, and some other things like Pokemon Go, if your phone is rooted, or even
if it has the bootloader unlocked.
I found with some banking apps, they won't work, some will work.
And that's without using Magisk.
And so I'm kind of glad that I've developed a workflow where I haven't tried to hide the
fact that my phone's rooted.
But I kind of always thought that, well, Magisk is there.
And with specifically the Magisk hide option, I could potentially use some apps that I can't
now.
But I think this quote from John Woo, the developer of Magisk says it all, he says,
let's face it, fun is over, guys.
Yeah, and what this really means for regular people out there is that some apps which do
check this will fail to work, things like banking apps, and possibly even some things
like mobile device management that companies use, which anybody who works for a company
that has a bring your own device policy might suddenly get flagged as an unsafe employee,
which can create some friction with the employer, and may require them to essentially unroot
their device and go back to using regular old Android releases, which is never really
what you want.
Well, I think it's what most people want and use.
I think very few people in the grand scheme of things do root their phones, but people
who want complete control over it, like me, are the ones who are going to be affected
by this.
And this is once again, Android becoming more locked down and more like the iPhone, really.
It's becoming less of a tinkerers operating system.
Remember back in the nexus days where you could buy a phone blessed by Google and run
whatever you wanted on it, whereas they're making it that little bit harder and harder
as time goes by.
And I don't think it's them deliberately doing that.
I think it's them making Android more secure and sort of just not really caring about the
customer community.
It's not them trying to make it difficult.
It's just them not trying to make it easy.
Right.
I mean, when you live in a world and have to compete against iOS, what else are you
going to do?
You already have the hardware chips.
I'm sure application developers are out there asking, why aren't you using them?
John Woo seems pretty disheartened by this and even put up a Twitter poll asking if people
were still willing to use Magisk and it was 84% yes, because Magisk is not just about
hiding root and hiding the fact that you've got an unlocked bootloader.
It has a lot more features and root in of itself is useful.
So it's good to see the community encouraging him to continue development.
It does look like Magisk hide will be disabled by default now because it's pretty much pointless,
but it is still an option.
So you can try it at least maybe it will work on your phone.
Well, WSL conf has been in the news this week going on as a virtualized conference amid
the COVID-19 outbreak.
And one of the big things that's come up is how Linux kernel updates are going to work
in WSL2.
Yeah, WSL2 will soon be officially available as part of Windows 10 version 2004, but as
part of that change, Microsoft has decided to remove the Linux kernel from being integrated
into the underlying Windows operating system and instead deliver it using Windows update.
So hang on, are you telling me that I'll be able to get kernel updates, Linux kernel updates
for the Windows subsystem for Linux 2 through Windows update?
That is just absurd.
You know, I was of two minds on this, Joe.
The first and probably because I'll admit I did attend WSL conf was, oh, yeah, you know,
that makes sense.
They've already got this update infrastructure, why not ship it that way?
But then I remembered, this is Windows.
Yeah, this is Microsoft distributing Linux kernels via Windows update.
And it's absurd for two reasons, one, just the sheer fact that we've just come this far
now that Microsoft is so invested in Linux that they are distributing kernels via Windows
update.
And the other is that there are just better ways to update a Linux kernel.
It's something that we've had cracked for quite some time on our side, haven't we?
I wonder if part of the change here is because of the legacy of the Windows subsystem for
Linux, you know, in version one, they weren't shipping a kernel, they were actually relying
on a translation layer in Windows itself.
And I think that meant that the distributions that were targeting the subsystem for Linux
didn't concern themselves with the kernel at all, it was all user land.
Maybe this is a play to sort of keep that in shape.
There's also an argument to be made that isn't the Windows update mechanism kind of a package
manager?
Well, I suppose so.
But surely it would make more sense to update the kernel within the VM.
It's all a Hyper-V VM these days.
So there's not really any reason why you couldn't just use the Linux distros package manager
to update it, is there?
I think the main reason is that as far as I know, these are all running Microsoft compiled
kernels.
So that might mean more integration with those various distros build systems where here Microsoft's
got it all in their control.
Well that and the idea, I believe, is for these WSL2 running VMs to have deep hooks
into the host.
So in that sense, it does kind of make sense to have the guest really rely on what the
host is providing as far as the kernel, just to avoid having some other kernel slip in
that's not going to talk correctly.
It all just seems too bizarre to me, the fact that you can run a proper Linux kernel, or
at least something close to it in Windows, I don't think I'll ever get over that.
But we'll keep watching how that develops and how everything else does in the Linux
and open source world, and you can go to linuxactionnews.com slash subscribe for all the ways to get new
episodes.
And the linuxactionnews.com slash contact for ways to get in touch.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Drew Rissington.
I'm at Drew of Doom.
And I'm at Westpane.
See you later.
