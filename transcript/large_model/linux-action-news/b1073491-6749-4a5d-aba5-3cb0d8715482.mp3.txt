Hello, and welcome to Linux Action News, episode 140, recorded on January 12th, 2020.
I'm Chris.
And I'm Joe.
Hello, Joe.
Good to be connected with you.
And we start things out with a pretty high-profile exit.
Yeah, Bruce Perens has quit the OSI, the open source initiative.
He was one of the original founders of that.
And he's not happy with how things have been going there.
It seems like the crux of this issue stems back to a license that was drafted about a
year ago, called the Cryptographic Autonomy License, or the CAL.
And it was on the behalf of a distributed software platform called Holo.
This was submitted to the open source initiative for approval as a open source definition compliant
license.
And that's where the debate begins, and is ultimately left to the co-founder Bruce Perens
resigning and leaving the organization.
Yeah, not doing it quietly either, throwing around terms like stuffing the ballot box.
Yeah, there's a lot of history here, it seems, and different interpretations of events depending
on who you talk to.
And full credit to The Register, we'll have a link to their article.
They sourced as many individuals in the story as they could to try to get the broadest picture
possible.
It seems like from Bruce's standpoint, he felt the organization was heading towards
accepting a license that didn't respect freedom fully, and maybe even more importantly, contributed
to like an abundance of free software licenses, an overabundance of free software licenses
that could be leading to confusion for developers.
Yeah, he sees it as proliferation of software licenses.
And he told The Register that he believes only three licenses are necessary, the AGPLv3,
and Apache v2, which would certainly simplify things, I think, a little bit too much.
But I do get where he's coming from.
There are way too many software licenses.
Yeah, I kind of agree.
I mean, those maybe are not enough, the ones he's outlined.
But his point is that it's harmful to the community to have too many because it creates
a legal burden for developers where they have to consult a lawyer to ship software.
That might sound extreme.
However, that was a ongoing point of conversation in the Coder Radio podcast about that very
issue.
And it really is something developers have to struggle with, especially if it contributes
to their bottom line.
He's also quoted by The Register saying, most people who develop open source don't have
access to lawyers.
One of the goals for open source was you could use it without having to hire a lawyer.
You could put open source software on your computer and run it.
And if you don't redistribute or modify it, you don't really have to read the license.
His main contention here around this cryptographic license, this new one that led to this resignation,
is that that license has language around how user data is handled.
And it specifically puts a burden on the user of the licensed software to make certain kinds
of data available to users on demand.
It's sort of a GDPR inspired type license.
And there's a pretty solid argument for that.
But Bruce's core point is you can't expect a single developer or a couple of developers
that are working on a project to be able to necessarily always abide by this certain provision.
It restricts freedom.
But the software landscape is changing.
And what we're talking about with the Cal license is a different type of software that
is distributed, that is peer to peer.
And arguably, you do need a new license for that.
Yeah, that's the thing.
I completely agree that there's too many licenses.
At the same time, it kind of seems like there is a need for a license exactly like this.
And that's most likely the argument you could make for every single one of those licenses
that's out there.
And so then I start to think, well, is it the end of the world for the developer to
have to do a little research before they try to make their income on an application?
I don't think it is.
I think enough of the world has bended to the laziness of developers that maybe on this
one thing, they could be asked to spend a day or two googling.
But imagine if we only had the three licenses that he talks about, we'd have no issues with
ZFS.
It would have already been on all the test shows.
Man, that's a utopia, isn't it?
When you think about it, and you could just keep it all in your head, all of the differences
and the requirements, you could just keep it all in your head.
It really would be nice.
Doesn't seem practical, especially with things like blockchain and peer-to-peer software.
It does seem like things change and you need software licenses to adapt to the new realities.
But it would be nice to consolidate some of the existing licenses and maybe trim some
of that fat.
But then you've got a lot of software out there that's already licensed with them.
So it's not an easy thing to do.
Yeah, fair point.
Well, let's transition to something that's apparently almost impossible to do, and that's
to go pure system D for Debian, because we have results on their init system diversity
vote.
Yeah, after quite a complex and seemingly fair voting process, they went for proposal
B, which is system D, but we support exploring alternatives.
So pretty much where they were before this whole vote thing.
No one wins.
Well, I don't know.
Here's the language of proposal B that I think matters, quote, the Debian project recognizes
that system D service units are preferred configuration for describing how to start
a service.
However, Debian remains an environment where developers can use and explore and develop
alternate init systems and alternatives to system D features.
Now here's the key line.
Those interested in exploring such alternatives need to provide the necessary development
and packaging resources to do that work.
Later on, they write packages should include service units or init scripts to start daemons
and services.
Packages may use system D's facilities at a package maintainer's discretion, provided
it's consistent with other policy requirements.
This sounds like they're codifying the way things kind of have been.
With the exception, the kind of give I see here is as a project, we will make space for
alternatives if people show up to do the work, we have now made a policy to make space for
you.
Is that how you read it?
Yeah, I think so.
And it seems like quite a kind of roundabout way of not ultimately supporting much more
than system D. You're putting in the policy to say, if you want to do it, have at it,
but realistically, is anyone going to do that?
Probably not.
So it's kind of a win for system D only, which, how I read the original proposals from Sam
Hartman, the Debian project lead, it feels like that's the direction that he wanted to
go with it, to just double down on system D and just finally end that debate.
Whereas this is keeping the door open, but I think you're not going to have that many
people who really step up and provide those development resources.
Yeah, this does kind of seem like not enough for either side.
But imagine for a moment, if we could just snap our fingers and say all of the folks
from the dev one community come back over to Debian and just put all of your efforts
in maintaining the alternative packages.
Now Debian has codified room for them, like that they would make space for them.
Obviously this is sort of saying, show up and do the work and we'll make space, otherwise
we're going to continue on for system D.
But not firmly, like as somebody like myself, what I see here is perhaps a vulnerability
in the design of an open source community, where they can't just take decisive action,
whatever it might be, and then strike forward and build an innovative product on top of
that.
However, the bigger picture version of the Linux landscape tells me that this is precisely
what Debian is for and derivatives, especially popular ones like Ubuntu can take decisive
action with upstart or system D. And that's really where they can add a lot of value.
And it's sort of perfect if you look at the overall landscape of Linux, that some distribution
is thinking very deeply about this question because it is supremely important.
It is probably one of the most important components of a Linux system right now.
And so thinking about this matters and I don't really know where else you can allow space
for it other than in Debian.
I mean, there's projects like Gentoo and others that add tremendous value, but Debian's at
a scale where it really actually kind of matters too.
That's what I think is terrific here.
Well, it's interesting that you talk about Debian and Ubuntu.
Ubuntu has been around for 27 years, let's say 30, round it up.
What's more likely to still be around in 30 years, Debian or Ubuntu?
I'd say both.
At this point, there will still be Ubuntu systems in production in 30 years.
They may be running old releases, but they'll absolutely still be running because that's
just the way those kinds of things work.
I wonder, boy Joe, if we could go on the record now and then check in on a 30-year production,
that would really be something.
No, I think they probably will both still be around, but just serving different needs
really.
And I think Debian, although it does have something of a flaw in that there's no dictator,
that's also what's good about it and why it will ultimately probably keep going indefinitely.
Yeah, I think you'll have Debian, you'll have Red Hat, and they'll all be dynamic environments
you can spin up on your Fuchsia system in seconds.
Probably, yeah.
They'll end up being a Fuchsia version of Debian, like with the herd.
It's just one of the user land environments.
Oh, you want one of those apps?
Yeah, sure, no problem.
Fuchsia supports that.
Well, before we get to that Fuchsia future, we've still got Android.
And something we reported on last year was the search engine ballot, where if you buy
an Android phone in Europe, the first time you turn it on, it's going to give you a selection
screen of which search provider you want to use.
And now we know what those search providers are going to be.
This is so Google.
It's so beautiful.
Google is profiting at the expense of competition because they've managed to turn this thing
into an auction.
So the search engines that are shown to users will vary for each EU country with the selection
screen described as a fourth price auction system.
Each provider tells Google how much it's willing to pay the company every time a user selects
their product as the default.
So when you select DuckDuckGo, they pay out a little bit.
The three highest bidders are then shown to users with the chosen provider paying Google
the amount offered by the fourth highest bid.
The process is then repeated every four months.
Well, apparently Microsoft didn't really feel like playing game in a lot of these different
EU countries.
And so they're at the bottom of the list.
I think they're only in one market.
And it's a bunch of search engines I've never heard of.
The whole thing seems kind of a mess.
Yeah, this is very much Google obeying the letter of the EU law and not the spirit of
it, as you say, profiting from it.
And DuckDuckGo are not very happy about it.
Even though they're having to pay, they're still doing it begrudgingly.
And it really is cheeky of Google to have done this, I think, but they obviously think
they can get away with it.
Yeah, well, they are.
They are.
It's so Google, if this is if you followed Google as a company, and if you've read Into
the Plex, this is so in Google's wheelhouse, this whole auction system, and they can then
claim it's fair market prices and not Google setting the price.
It's how they also run AdWords.
That's all auction based as well and YouTube ads, all that's auction based.
Yeah, it's almost like they're treating this selection as an advert, which it kind of is
really.
Well, it is.
It's their software platform that's in front of users that is placing other companies that
compete with them.
Now, they were supposed to do it because they're a monopoly and they've figured out a way to
make money from it.
But it is probably some of the most valuable real estate you could buy as one of these
companies because it sets everything to that as the default.
Well, arguably, one of the other prime bits of real estate on an Android phone are the
pre-installed apps.
And if you get a cheap government subsidized phone in the US, then you might be getting
some nasty ones pre-installed.
This is shameful.
This is a story I would expect out of China.
And in fact, some of the software has ties to China.
But these are phones that have been subsidized by the US government.
Some of them are called Obama phones as a bit of a joke because they were launched in
2008.
Well, it was expanded in 2008, really.
And it's a low end UMX U686CL phone provided by the Virgin Mobile Assurance Wireless program.
The upside is you get an Android phone for $35.
The downside is it's loaded with not one, but two different kinds of horrible software,
including a fake auto update system that installs ads.
It's shameful.
And it's fundamentally one of the core issues I have with the Android platform.
Is it scale?
It's used to abuse users.
And Malwarebytes are calling it malware.
Well, they would, wouldn't they?
I am hesitant to say that myself because Virgin have come out and said specifically that they
don't consider it to be malware.
So I think it's left up to the reader and listener to decide.
But either way, it's apps that most people are not going to want on their phones.
I mean, of course, they're going to say that the moment you log into the mobile device,
the quote unquote wireless update app starts auto installing crap.
And it's stuff that doesn't take any user consent.
There's no agree to do any of this.
There's no OK.
And once it's loaded, it's an app variant of ad ups, which is from a Chinese based company
that just loads your Android device up with ads on the home screen, in the notifications
app, it overrides apps and websites.
It's extremely aggressive.
And a lot of it does location tracking, too.
And it just starts installing the moment you install it.
And there are so many other instances of these low cost Android phones from a variety of
different providers and manufacturer that do this.
Blue, BLU, is one of the most infamous, where they installed a powerful backdoor and a root
kit and downloaders on 26 different phone models from various manufacturers that white
labeled their devices that were sold by mainstream carriers.
Android at the low end is user hostile.
And it's so upsetting to see Linux used this way to abuse the users.
It doesn't empower the users, it abuses them.
And honestly, people would be better buying used iPhones off of eBay than they would be
getting these $35 Android devices.
And that's so awful to have to say on a Linux podcast that Apple with their iOS devices
that you could buy used on eBay is a safer route to go if you're a consumer looking for
a cheap device than a phone you could go into a Virgin store or Verizon and buy directly.
It's mind boggling.
Yeah, arguably, you could say go down the lineage route, but for most consumers, that's
just not an option.
They don't have the technical skills to do that.
It's not even in the realm of possibility for them.
Not only are they barely even aware of a concept of an operating system, but the idea to reload
it is so far above and beyond their capabilities in terms of research or connecting to the
computer or even conceptualizing the idea of an operating system in an image file.
It's so far beyond them.
It's not even a possibility.
And that's why I say for them, it's got to be iOS.
Now for savvy users, people that listen to this podcast that could go buy a used Android
device and reload it with Linux, yeah, sure, go for it.
But lineage on there, have at it.
It's going to be great.
But you can't expect people that are buying these subsidized devices to know how to do
that.
I mean, they're struggling with just basic malware on their phones now.
It really, it just has for years, Joe, it's just really upset me to see Linux abused like
this through Android.
Like it's, it's great that Linux is in so many pockets.
And it's great that it's brought so many OEMs into contributing to the Linux kernel.
But there has been a human cost.
And it's this kind of stuff.
And it's even worse in other countries.
Yeah, and Google could put a stop to this, at least with devices that they're certifying
and allowing to have the Google Play stuff on there, they could put some rules in to
stop it.
And they could enforce those rules and make sure that OEMs do not get away with this.
It's such a shame because by the time mobile devices came around, we knew how to do things
better.
We had lived through the era of horrible Windows OEMs loading PCs up with crap.
And we had recognized what a flaw that was, especially groups like Google who are trying
to do things differently.
And here we are.
And it's just Windows and Mac OS all over again, only in the mobile space.
Well, don't worry, machine learning and deep learning is going to save us from all this.
And Amazon has got just the thing for that.
You know it's legit, Joe, because it's got a dot science TLD.
It's Amazon dot science.
So this is for real here.
It's called AutoGluon.
And it's named after what, Joe?
You looked this up.
I didn't look it up.
I knew that a gluon was a subatomic particle.
Nerd.
Yeah, no, OK.
And so that's where it gets its name from.
And so they've open sourced this AutoML library that automates deep learning and machine learning
for real world applications involving image and text and certain types of data sets.
So what does that mean in practical sense?
Well, in practical sense, if you're on a Linux system and you've got Python, you can pull
this down now and you can start throwing it at images and it will start recognizing the
crap in those images, like people, motorbikes, tree.
So that's one of the many things it can do.
But what it's doing on the back end is what Amazon says is the real magic.
The part where they're saying they're democratizing machine learning is because they've built
a system that figures out a lot of the hard stuff, a lot of the tweaking where you try
something, it doesn't work, you retry it, you tweak it a little bit, modify this, run
it again, it doesn't work, and you iterate on that 100 times.
They call this hyperparameters.
And they say it represents a considerable number of choices the developers must make
when they're constructing a neural network.
Joe and I have this problem all the time when we're building our neural networks to do podcasting
for us.
It involves all kinds of selections, like the number of layers in the neural network,
how these layers should be connected, like the architecture of that network even, and
then how to train each individual network, what data sets to use, all of that is automated
by this library, this Python library that you pull down on your Linux box.
And it looks at what you're trying to do and it runs through these scenarios and solves
a lot of these problems for you, tries different things very fast, and gets it all set up.
Essentially now, what their pitch is, and of course, the proof will be in the results,
but their pitch is the developers don't have to manually experiment with hundreds of individual
choices that must be made when you're designing a deep learning model.
They'll just simply click, specify when they'd like to have their trained model ready, and
it runs.
And this is open source, it's Apache licensed, so you can run it on your own machine.
But I wonder why Amazon might be giving this to the community?
Maybe to run these instances on AWS and make a lot of money?
Machine learning as a service, Joe.
It does seem like anyone can benefit from this, though.
It really simplifies it down to just a few lines of code.
And it feels like even I could maybe get started with this.
I had that same thought when I looked at it, I was like, oh, I could actually throw this
at some of my Shinobi surveillance footage and actually just have it start auto-tagging
stuff in there.
I was like, wow, this is super approachable.
And one of the things I like about it is right now, it only works on Linux.
They're going to support other operating systems, like that's totally on the roadmap.
But this is like cutting edge stuff.
And it's so cool that Linux is the only supported OS right now.
It just really is a reaffirmation of the state of Linux in this area of computing.
Yeah.
Linux first.
Yeah.
It's great.
I mean, they'll get it for the other platforms.
But it's just, it's so, I don't know, it feels so great to be on this side of it for once.
And it's been like this for a little while with this kind of stuff.
And if anyone out in the audience gets a chance to play around with this and has some fun,
do let us know.
So go to linuxactionnews.com contact and tell us how you're using it.
I have actually now looked it up and I know a little bit more about what a gluon is.
It's an elementary particle that acts as the exchange particle or gauge boson for the strong
force between quarks.
Right.
The gauge boson.
And don't forget, you can go to linuxactionnews.com slash subscribe for all the ways to get new
episodes.
And be sure to get your weekday update with Linux headlines at linuxheadlines.show.
Think of it as a sunsetter for your evening.
In three minutes or less, everything happened in Linux and open source that day.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I am at Chris LAS.
I'm at Joe Rissington.
Thanks for joining us.
We'll see you next week.
See you later.
