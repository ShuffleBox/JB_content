Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 100, recorded on April 7th, 2019. I'm Chris.
And I'm Joe.
Hello, Joe, and happy episode 100. We kick it off with Chef celebrating our episode,
obviously, by going 100% open source. At least, that's the headline.
That is the headline. And it is true that now, Chef, instead of being open core and
having a bunch of proprietary add-ons, everything that they do will be Apache 2 licensed. So
it's all going completely 100% open source. However, the binaries are going to be paid
for only. So this is very much the red hat model.
Yeah. So to clarify that, you can get the binaries for free, I believe, but you cannot
use them for commercial use without paying. But like in the case of RHEL, the source code
is available. So you could grab the source code, build it yourself, but then in that
case, you can't call it Chef. You have to call it something else, like Joe's orchestration.
And maybe just as a background for people, if you're not familiar, Chef is a, well, it's
a company, but it's also an open source project. It's one of the major configuration management
systems on Linux and now also Windows. It's built in Ruby and Erlang, and it's one of
the popular orchestration management suites. And this is a very competitive market. And
so I think Chef is trying to differentiate themselves here. And the RHEL model has been
proven successful.
Well, just last week we talked about how they hit $3 billion, red hat, in revenue. So obviously
they're doing something very right. And so it's not a surprise to see other companies
following their model.
Chef's talking up a big game here. They say their development process is going to go more
open. They'll share more details about their roadmap, feature backlogs, and other future
product developments. And all of Chef's commercial offerings will be based on the same open source
code everybody else has access to. And they say, you know, this is solving a lot of problems
for us, one of which being it was just getting really difficult for Chef to explain which
parts of the software were open source and which were not. And now this is solved. And
you've seen Redis and MongoDB all try to take different stabs at this kind of problem recently.
And their solutions sort of got grief, right? They were going more closed down, whereas
Chef has gone the other direction here.
Yeah, this will satisfy the FOSS zealots, for want of a better word, the people who
want everything to be completely open source free software. But by enforcing their trademark
policy, they're really protecting their revenue stream here. So it's, I think, a very sharp
move of them, because it means that they're not going to get the blowback that the likes
of Redis Labs and Mongo have got. But at the same time, they are protecting their business.
It seems to be a very good strategy.
I think worst case scenario here is that the distributions that have Chef in the repositories
are going to have to rename that to, you know, something else. And maybe the community will
come up with a new name that sounds familiar, like kitchen. I don't know. Would it be great
if we could predict what it's going to be right here on the show? But I'm just not familiar
enough with the terminology in the kitchen. But there might be something like this, because,
you know, it's based on recipes and all. That's like the whole vernacular. So if distributions
could come up with a different name, then I think that solves the biggest problem we
have now. Because according to the license, they are now, it's Apache 2, they can distribute
as much as they like, just don't call it Chef.
Well, also, they do have to remove any references to Chef in the source code.
Right. And branding, any branding.
Yeah, which isn't an insignificant job. Every time they release a new version, someone's
going to have to go through and remove all that. I suppose you could probably just script
that fairly easily. But it's something that they have to think about. And it's a bit of
a headache for the distributions.
But certainly not an unfamiliar problem. We've seen this even with Firefox, of course, there's
lots of I mean, look at CentOS and scientific Linux. I mean, this is this is something that
is a known domain. But I'm not trying to take away from the work, it probably will be tedious.
I think there will be organizations that will just build it themselves and won't pay for
it. But I think they're the kind of organizations, the smaller ones that wouldn't have paid anyway.
And so I don't think Chef is going to actually lose out anything here. And it'll be very
interesting to see how Amazon deals with this, whether they will just rebrand it as something,
or whether they'll just pay Chef to license it, which would be potentially a very good
revenue stream for them. And presumably what they're hoping will happen.
And a great PR move by Amazon. Yeah, it would be smart for them. And they could afford it.
Yeah, exactly. It's not like they can't afford it. So I don't know, I think Amazon will just
make their own version of it, unfortunately, but we'll have to wait and see on that one.
Well, let's move on to one of the stories that has had lots of turns. And this is the
long going lawsuit with VMware over their use of GPL code in their VMware ESX bare metal
virtual machine hypervisor.
Yeah, we found out this week that that lawsuit is finally over for the same reasons it was
last time. And that wasn't even getting into the nuts and bolts of the argument. It was
simply insufficient evidence presented to the court, or rather, evidence presented in
such a way that they just wouldn't accept it.
Yeah, also, there's appears to have been a comment by the judge during oral hearings
that the judge had concerns that this was a case being brought on ideological grounds,
I'm paraphrasing a bit, and suggested because of that, that it be settled outside of court,
which isn't likely that's not a solid start to a case. And then really, this goes all
the way back to 2006. So this, this already failed once this was an appeal, and now that's
failed. And VMware, by all accounts was clearly in violation of the GPL. I believe it's Christopher
Hillwig, I'm not probably getting the pronunciation wrong there. But he spotted Linux source code
being used illegally in VMware in 2006. And the way he put it is, quote, VMware uses a
badly hacked 2.4 kernel with a big binary blob hooked into it, giving a derived work
of the Linux kernel that is not legally redistributable. And that is, I believe, true. But they failed
to make a compelling argument. They failed. Well, this is according to coverage in the
German newspapers, which I'll have linked in the show notes, they failed to really present
a solid argument. It was things like, well, here's my git information. And here's the
git information of this and this project. And just, you know, look at looking at yourself.
It's right there. It's just right there. I mean, that kind of stuff is not going to win
a case like this. And it sets a bad precedent here. I hate to say this, but this was a huge
waste of the Conservancy's money. Because they were the ones behind financing this.
And what do I know? But what may have been established here is now a new precedent. Essentially,
if you are a minor contributor to a very large code base, say 2% of the Linux kernel is yours,
and you have some copyright or some claim over that 2%. What the judge said here essentially
is that's not enough for you to bring this case. You have not been unduly affected enough.
That is essentially precedence now, which is a massive problem for contributors of many
open large open source projects. This is this could potentially be a disservice to the open
source free software community long term, because this is obviously any large corporation
that's using a large project could now fight on these grounds. It's very disappointing.
And it's definitely not the result we wanted to see.
Well, no, it's not the result we wanted to see. And it does seem to set that precedent
in Germany, at least. But for other jurisdictions, who knows?
Germany's a favorite spot, though, because often the rulings there, then sort of get
trickled down to all of the other Western style nations, at least, according to the
Conservancy's fact. But I think what we have here, Joe, just just to really underscore
this is we have a proven GPL violator who just got away with it, even though they went
through the court system.
Well, yeah, I mean, I'm not a lawyer, and I don't even play one on a podcast. But yeah,
my understanding is that they were in violation of the GPL and have got away with it.
And they've essentially admitted as much now, because VMware has released a statement saying
they'll in a future version, be removing that GPL code. And I think what we have here is
we have a large player in the Linux Foundation, VMware. And we have another large player say
like Red Hat, who's in the Linux Foundation. And if you were to look at the overall Linux
source code, there is a lot of Red Hat contributions and copyrights, because employees of Red Hat,
when they join Red Hat, sign over the copyright to the code they produce for Red Hat to the
corporation. So those copyrights are all Red Hats. Red Hat hypothetically could have a
large majority of code contribution of the Linux kernel because of this. And they would
be the perfect company to then bring that to bear in court. But I believe because they're
all part of the same pack, they're all part of the Let's Make Money Linux Foundation pack.
Nobody took action. And it was up to one individual, Christopher Hilwig, who simply was unable
to go up against OmegaCorp, who is a significant contributor to the Linux Foundation. And they
clearly knew they were in violation because now they're removing that code anyways. And
they got away with it.
It is very disappointing. But there's one kind of strange aspect to this. You may remember
Patrick McHardy, who is another kernel contributor. And he threatened a bunch of lawsuits in Germany
over this GPL compliance stuff. And he was basically just trying to shake down companies
for money, profit basically.
Yeah, I remember.
And so he didn't get very far. Now, one of the companies that he tried to sue was I think
Geniatech or Geniatech, something like that. And their defense lawyer was a fellow called
Till Yeager, who happens to be the person who represented Christopher in this case.
So he was on the other side last time. And now he's on the side of Christopher. So you'd
think that he would have enough experience to know what evidence was required and how
to submit that evidence. So it's all very strange.
He's an arms dealer selling arms to both sides.
I would never go so far as to say that. But yeah, I mean, as usual, I'm sure he made plenty
of money out of this as do all lawyers with these things. And Conservancy are the ones
who have had to foot the bill by the looks of things.
Yeah, I mean, in a way, the Conservancy is getting the end result they wanted. And to
make to make it clear, I believe and take the Conservancy at their word that they attempted
like hell, to try to solve this thing out of court. They tried to provide solutions
to VMware that they just didn't want to take. And so now, they've essentially gotten the
result they wanted at the very beginning of all of this. It was just VMware is doing it
voluntarily after getting off scot-free.
And I do take their word that that's what they're interested in. They're not interested
in making a bunch of money. They just want people to be in compliance. They don't want
people to violate the license so that the whole community can benefit from the changes
that they make. And so while this is disappointing, as you say, at least they did eventually get
the outcome they wanted. I mean, it sounds like VMware would have just done that anyway.
And they could have saved themselves a bunch of money and hassle.
Well, from the enterprise to your pocket, how about this one? Running Android next to
Wayland applications? What, Joe? What? Wayland on Android? What?
Yeah, this is a new thing called Sperve, which runs a whole Android stack on Linux, which
allows you to run, therefore, Android applications, but on Linux with Wayland, with direct hardware
access and full hardware acceleration.
Man, you just got to love all the different use cases people come up with for containers.
It feels like there's something every week. So this is, yeah, you take Android, you put
it in a container environment, but it's a little different. It has, like Joe said, direct
hardware access. And that was a choice they made for performance. Now, there are drawbacks,
including some security risks, but using direct hardware access grants them increased GPU
and CPU performance. So you got to think about what your use case is for something like this.
Do you want to have a super secure Android environment or do you want to run Android
applications in your Linux Wayland environment with full acceleration?
They have a whole device infrastructure that they've put in place. In fact, they're taking
advantage of a lot of stuff that's built into Android. And they've come up with bridges,
for example, like when you start up the Android container, they have a bridge that connects
the virtual Android machine to your host Pulse audio stack. And they have a hardware compositor,
which does the same thing with Wayland, creates another bridge. And they say that a lot of
the underlying protocols are conceptually a lot like Wayland that they're dealing with
for the graphics stack. So it's pretty straightforward to then translate their hardware compositor
into Wayland's protocol. And that's essentially what they have their compositor doing is just
talking Wayland, taking the Android stuff in and then talking Wayland. And they have
a video on their website and it's really slick. I mean, you got angry birds. What else do
you need? Angry birds, Joe.
Yeah. What else do you need five years ago? It's a good demonstration to be fair.
Yeah. I mean, they're moving it around on the Linux desktop. They got the terminal up,
they got different apps up and then boom, here's angry birds. It's neat.
Now this is early days. It's not kind of primetime ready yet. But a couple of things that jumped
out at me from their future plans. The first one is making it work properly on x86 with
Ubuntu, which is interesting for a bit of kind of hacking around and playing with. But
the really interesting one was that they want to make it work on the iMX8M with the naviv
graphics driver. Now what does that mean if they get that working?
Is that the Librem 5 stack?
Indeed it is. So that could potentially bring Android apps to the Librem 5, which would
suddenly make it a much more attractive proposition. Get F-Droid working on there and suddenly
you've unlocked a whole bunch of apps.
Hmm. That's an interesting future cast in there, Joe. That could have some nice positive
effects for the Librem 5. I like where they're going with this. I think you got to remember
though, there is a certain amount of overhead to run an entire Android operating system
just so you can use an app.
Keep in mind that that is what you're doing here. It's not like Wine where you're just
running the application and translating the application calls. You're starting up an entire
Android stack in a container.
Yeah, that's not going to be great for battery life, is it? And performance generally.
No. No, I wouldn't think so. And it could potentially mean more security risks as well
because there's a complete operating system stack there.
Yeah. But at least it makes playing with and hacking on the Librem 5 a little bit more
attractive even if it doesn't make it more attractive from a mainstream point of view.
Sure. And I could also see it being handy for Android development on Linux. You're developing
an app. It wouldn't be a very good test case, but it definitely could be a great way while
you're just building your application, getting the UI laid out. You could run it right there
on your desktop. That seems pretty compelling. So I could see all educational use cases,
all kinds of use cases for this thing. I mean, I'd play with it.
Yeah, it definitely is one to watch and hopefully in the near future. But let's look back to
the past of mobile development on Linux and Mer.
Not mere, but mer. M-I-R is something different. M-E-R is something different. This week we're
talking about the M-E-R version, the mobile project.
Because this week, Mer and Sailfish OS have merged. Of course, Mer was a pretty big part
of Sailfish OS anyway, and most of the recent contributions have come from Yola. So it's
not a huge surprise that they've come together.
This isn't really news that's going to impact anybody's life out there. Well, no, I shouldn't
say anybody, but most of our lives. But it is a fascinating story from a history standpoint.
Mer began many years ago, really as a demonstration project. Then it was sort of shut down and
they shifted to MeeGo. And then when MeeGo stopped, they reincarnated Mer again. And
then that became essentially the core of Sailfish OS, which now Yola uses in their devices and
is actually in production. It's a weird, twisty story. And there has been, at certain points
in time in history, really incredible projects that sprung up and were very usable and then
were collapsed and then merged and then reincarnated. And I guess at the end, it sort of ends up
where we started.
I've spoken to some members of the UbiPorts community about this, and they had dabbled
with Mer a bit previously, but are generally concentrating on Halium now. So that was my
kind of concern. Is it going to affect them? And I think the answer is not really. And
the sense there was watch and wait, really. No firm conclusion as to whether this is a
good or bad thing. It just seems inevitable, really, that this was going to happen because
they were doing so much work on it and pretty much no one else was. So why not merge them?
And even Yola themselves say that Mer has served its purpose and can retire.
Right. It's served the community well. Speaking of UbiPorts, though, they have some big news.
They finally have their very own official foundation.
Yeah, this has been a long time coming. They've been working on it since pretty much they
took over from Canonical. And it just turns out that it is very, very complicated, particularly
in Germany, where they've done this to get all the paperwork sorted. But now they've
finally done it. They can move forward and their finances will be a lot less stressful
and crucially much more stable in the long term.
They write in the post that we'll have linked in the notes that the foundation provides
the project's benefits such as structure, new funding and merchandising opportunities,
which is good for sustainability. And if you're out there and you're listening and you're
kind of skeptical, you don't really see the place of UbiPorts and what the purpose is,
I'd encourage you to take a couple of minutes and go read this post. They do a bit of a
victory lap and give you a brief overview of some of the milestones that they've achieved
since they took the project over on April 5, 2017. It's pretty damn impressive. And
they're getting there in a slow, methodical, release-by-release improvement approach. We
could end up seeing in a couple of years time, at least, a general purpose, open source,
fully functional, free phone operating system that this community has put out and this foundation
sort of gives them the basis to keep that sustainable.
Yeah, and it means that now they could do a deal with an OEM and put out an actual phone
if they wanted to.
Interesting. I hadn't really thought about that. But that would be really cool if that
were to develop. Something like the PinePhone, I think, is a group they've worked with the
Pine people a bit. If you could order up a phone, even if it wasn't daily driver, I'd
love to play with something if the price was reasonable, just to get an idea where they're
going and stay on top of it.
Yeah. I mean, even if it could be someone like BQ, like Canonical worked with, the thing
is until they had this financial structure in place, they weren't really legitimate in
a way. They couldn't do those kind of deals, not easy at least. Whereas now, they've got
that solid foundation and they could potentially do deals like that. And realistically, not
much is actually going to change beyond perceptions. But the thing is, perceptions are very important
and it makes them seem legit now.
Yeah, especially when they're dealing with commercial OEMs. That's critical. Congratulations
to them. It's just cool to see them tick on. The only thing is, though, it doesn't have
enough blockchain, Joe.
Oh, yeah, definitely. Everything needs more blockchain. And the EU strikes again. This
time they've launched the Blockchain Association.
Oh, yeah. This is a big deal. The International Association of Trusted Blockchain Applications
has grown out of months of forums and roundtables held by the Commission to create a strategy
around emerging technology. As the adoption of blockchain, they write, continues across
a wide range of sectors, the European Commission has made a priority to study the potential
impact and encouraging it across a number of initiatives. A hundred organizations in
this.
Yeah. Well, it kind of goes to show that it's not just about Bitcoin. We've talked a few
times about how blockchain technology and distributed ledgers are not just about cryptocurrencies.
It's way more than that. It's really boring stuff like shipping and distribution and logistics.
And there's certain areas where it just really shines as essentially a distributed database.
Right. It's a distributed ledger or database that is verifiable by crypto. And so that
means even competing companies or banks that don't trust each other can rely on the information,
assuming it's a sound implementation. But you know, I was looking at the organizations
that were involved. Anheuser-Busch, the Bud Light Company. I guess maybe shipping. You
know, they got to ship a lot of beer, I suppose.
Yeah, exactly. They got to ship a lot of ingredients and beer and everything. And yeah, it just
totally makes sense for these companies to adopt this technology. And whenever you have
got billions of dollars in an industry, you need to have these organizations that oversee
it and that these members will come together and cooperate in. And it just goes to show
that this stuff has been really taken seriously now.
Do you think it adds like commercial legitimacy? You know, in the eyes of corporations that
might want to be implementing blockchain?
Definitely, yeah. I think that like with the Ubiports thing, perceptions are very important.
And even if nothing really changes in practical terms, just having this organization in place
does give the whole industry and the whole area of the industry of blockchain credibility.
Yeah, I guess, you know, I hadn't really thought about it, but you're right. It's sort of a
stamp of approval that we recognize this as a business technology. And, boy, corporations
love that kind of thing.
Yeah, I think you're gonna see more and more companies adopt this technology because it
actually does serve a very important purpose. It's not exciting, like running Android apps
on Wayland or whatever. But it's just the plumbing, the nuts and bolts of how the globalized
economy is actually going to work going into the 22nd century.
Yeah, I think where I still kind of get like a little bit of, as we would say here in the
States, heebie-jeebies from these kinds of stories is blockchain is kind of like cloud
now. It's really all in the details. How are they verifying those transactions? Is it truly
distributed? Is it under the control of one corporation or one government entity? Like
all of the implementation details are really what matter when it comes to blockchain technology.
And we just get this generic blockchain description, which is supposed to invoke some sort of impressed,
oh, they're using crypto. But I'm left thinking, you know, if they don't have the right verification
system, then it doesn't matter. It's worthless. And of course, they don't go into the details.
Are they going to be setting up servers, crunching crypto in data centers? Have they come up
with a different, less CPU or GPU intensive way to verify that still just as cryptographically
sound and can't be hacked? Like, what are the details here? We don't know. It's just
blockchain.
Well, I suppose it's a bit like cloud that can mean anything from one VM that you have
rented and resold to AWS and everything in between. And it is all in the implementation
details. But I like to think that this association will set some standards and answer some of
those questions.
Yeah, fair point. That would actually be a really good use of a commission like this.
Like that's, I think that would be, that's a great idea. I'm going to watch and see.
Because that does seem to be the critical part. And perhaps, perhaps maybe that some
sort of consensus can be reached if there is a government regulation of some effect
in place. Interesting, you know, because the technology moves so fast. So that's going
to be challenging for them to keep up with. But I'm sure that you use up to the challenge,
right Joe?
And it's funny that the the image used to illustrate this is a bunch of interconnected
lines of the the map of the EU and you can see that Switzerland's missing in the middle.
But then there's the UK off the coast of France hasn't been deleted just yet.
That'll be a big blockchain update. Lots of verification. Well, in the meantime, we'll
have more stories every single week. Go to linuxactionnews.com slash subscribe for all
the ways to get new episodes.
And go to linuxactionnews.com slash contact for ways to get in touch with us.
And if you're a full stack Ruby on Rails developer, check out linuxacademy.com slash careers.
They are hiring for full time remote positions for full stack Ruby on Rails developers. Also,
just a quick plug skis for Linux Fest Northwest coming up very soon at the end of this month.
We're gonna all be there. And we'd love to see you. We'll have tons of Jupiter broadcasting
talks going on. We'll have a booth. We'll have a live stream. Joe and I will be there. It'll
be a great time. linuxfestnorthwest.org for more information and meetup.com slash Jupiter
broadcasting for our parking lot barbecue details.
And just a quick shout out to cheese bacon, the newest member of our Jupiter broadcasting
team who has done an absolutely fantastic job working with the Linux Academy art department
to do all of the assets, all the new logos. They're all looking fantastic.
Yeah, the new art is sharp. Check out the new dark theme to over at Jupiter broadcasting.com.
Yeah, the design team and Mr. Bacon did a great job. Now we'll be back next Monday with
our weekly take on the latest Linux and open source news. I'm at Chris LAS.
I'm at Joel Rissington.
Thank you for joining us. And we'll see you next week.
See you later.
