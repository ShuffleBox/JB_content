WEBVTT

00:00.000 --> 00:09.920
Hello, and welcome to Linux Action News, episode 131, recorded on November 10, 2019. I'm Joe.

00:09.920 --> 00:10.920
And I'm Wes.

00:10.920 --> 00:14.480
Hello, Wes. Thank you very much for stepping in while the boss is away.

00:14.480 --> 00:15.480
Thanks for having me.

00:15.480 --> 00:19.720
Google have been up to quite a lot this week. So let's start with them giving quite a few

00:19.720 --> 00:22.560
Chromebooks a fair bit of extra support.

00:22.560 --> 00:26.780
It's definitely good news, but a bit of a mixed bag. Depending on what particular model

00:26.780 --> 00:32.160
you happen to have, most models received another year of support, but others got only another

00:32.160 --> 00:35.560
six months, and some lucky ones received two more years.

00:35.560 --> 00:41.800
There were some models that had already been abandoned, which have been resurrected. Unfortunately,

00:41.800 --> 00:47.960
not my C720, which remains abandoned, and so will live on with gallium OS.

00:47.960 --> 00:53.320
Right, that kind of highlights why this matters, Joe. Chromebooks, unlike perhaps other devices

00:53.320 --> 00:59.580
that you may be familiar with, have a strange fixed lifecycle, right? I mean, Google, after

00:59.580 --> 01:04.400
they've certified a new platform for Chromebooks, they set an end date, and that's when your

01:04.400 --> 01:06.120
security updates are no more.

01:06.120 --> 01:11.160
Well, it's a little bit like smartphone style updates that you get that fixed window that

01:11.160 --> 01:16.600
is generally much shorter than, say, a Windows or Mac device. And I think that's the crux

01:16.600 --> 01:20.680
of this here. They're really looking to push further into the enterprise and education

01:20.680 --> 01:24.000
markets, and those markets won't stomach these short support cycles.

01:24.000 --> 01:29.320
Right, you've got to include whatever refresh rate they've got internally for the hardware,

01:29.320 --> 01:31.800
otherwise they probably won't choose your platform.

01:31.800 --> 01:34.880
And you would imagine that's the kind of feedback their sales reps would have been getting,

01:34.880 --> 01:36.720
and so this is the result of that.

01:36.720 --> 01:40.580
Probably matters, too, if you've bought one of the more high-end Chromebooks. I mean,

01:40.580 --> 01:45.920
Chrome OS has gained a lot of features. It's now very usable as a sort of high-end workstation.

01:45.920 --> 01:51.700
And while you might be okay with your budget model expiring after four years, I'd like

01:51.700 --> 01:53.720
longer life and a significant investment.

01:53.720 --> 01:57.600
Yeah, they have been adding a lot of features, and this week they announced a couple more.

01:57.600 --> 02:02.640
The big one for me is virtual desktops that they're calling virtual desks, something we've

02:02.640 --> 02:07.080
had for a long time in Linux, but something that Chrome OS has really lacked.

02:07.080 --> 02:11.480
Yeah, Linux has had this feature for quite a long time, but we've seen most other major

02:11.480 --> 02:16.360
operating systems playing catch-up, so it's nice to see Chrome OS join the club. All you

02:16.360 --> 02:20.640
have to do is open the overview and tap New Desk in the top right-hand corner, so it's

02:20.640 --> 02:26.460
a fairly accessible feature, and it works just as you might expect. I'm also very pleased

02:26.460 --> 02:31.160
to see they've added some keyboard shortcuts if you're not a big fan of the mouse.

02:31.160 --> 02:34.700
They've also added a bit of a convergence feature where you can now make phone calls

02:34.700 --> 02:40.000
on your Android phone originating with phone numbers on the Chrome OS device.

02:40.000 --> 02:45.840
Makes me think of some of the slick integrations on that other platform we won't name.

02:45.840 --> 02:50.600
Yeah, they've also added some improvements to printing. Now, I've never tried to do that

02:50.600 --> 02:54.380
on a Chromebook before, but I've heard that it wasn't the easiest.

02:54.380 --> 02:59.080
As someone who tries to avoid printing whenever possible, anything that makes it easier is

02:59.080 --> 03:03.960
very much welcome. They say that compatible printers will just automatically show up,

03:03.960 --> 03:08.800
no setup needed, although I'm not quite sure where that list of compatible printers is.

03:08.800 --> 03:13.080
Yeah, they call it print without hassle. That just doesn't exist in my mind.

03:13.080 --> 03:14.080
No.

03:14.080 --> 03:19.080
Yeah, I'll believe it when I see it. But on the mobile side of things, Google have seemingly

03:19.080 --> 03:23.760
put their hands up to the fact that Android has a bit of a malware problem.

03:23.760 --> 03:29.200
Yeah, this week they've announced a partnership with three antivirus firms, ESET, Lookout

03:29.200 --> 03:33.560
and Zimperium, to create what they're calling the App Defense Alliance.

03:33.560 --> 03:38.640
Now, they already have a thing called Play Protect, which is something of a black box

03:38.640 --> 03:42.600
to me. I don't know exactly how it works. I don't think anyone does, really, apart from

03:42.600 --> 03:43.600
Google.

03:43.600 --> 03:45.720
You just got to wave your hands and say, machine learning.

03:45.720 --> 03:51.440
Yeah, machine learning. But that is obviously not enough because I keep reading almost on

03:51.440 --> 03:58.400
a weekly basis about an app that was downloaded 25,000 times, 100,000 times, that was some

03:58.400 --> 04:05.160
sort of malware. And so these three companies all have competing products for Android security.

04:05.160 --> 04:09.440
And all three of them have a different approach. And so it's kind of typical Google, isn't

04:09.440 --> 04:15.240
it? Instead of just having one solution, let's have three competing solutions and somehow

04:15.240 --> 04:16.840
that will work well.

04:16.840 --> 04:21.040
That does sound like Google, although some diversity can go a long way. You're right,

04:21.040 --> 04:25.960
all of these companies already do this sort of scanning. But before this agreement, they

04:25.960 --> 04:29.800
were doing it after the fact, right? They were trying to identify malware out in the

04:29.800 --> 04:34.960
wild. With this partnership, before apps actually get to the Play Store, they'll have to go

04:34.960 --> 04:38.080
through all four different protection engines.

04:38.080 --> 04:43.720
So in theory, this will stop the malware before even gets into the Play Store. But it's funny

04:43.720 --> 04:49.320
that the VP of Android security and privacy, Dave Kleidermacher, said, when you're at the

04:49.320 --> 04:54.680
massive scale we have in these platforms, when you can even get 1% incremental improvement,

04:54.680 --> 05:01.160
it matters. So they're not necessarily looking to catch all the malware, but even a 1% improvement

05:01.160 --> 05:02.640
would be massive for them.

05:02.640 --> 05:07.200
With 2.5 billion Android devices out there, they do have a point.

05:07.200 --> 05:11.680
Yeah, and Tony Anscombe from ESET said that they're likely to be scanning many thousands

05:11.680 --> 05:18.360
of apps per day. So it really does go to show the scale of the whole Android ecosystem.

05:18.360 --> 05:23.320
Yeah, there's a lot of investment here. And they started working on this two years ago.

05:23.320 --> 05:27.000
We don't know anything about the finances of this. Presumably, the companies are making

05:27.000 --> 05:31.080
a fair bit, but they're also getting access to a lot of data, which is always valuable.

05:31.080 --> 05:35.160
Right, the more apps they scan, the better they can improve their own databases, which

05:35.160 --> 05:40.240
makes their products better too. And hopefully, makes the Play Store a bit better at the same

05:40.240 --> 05:41.240
time.

05:41.240 --> 05:46.960
Hopefully, but realistically, this is an arms race. And okay, this is really stepping up

05:46.960 --> 05:53.800
Google side of the arms race, but people will always find new ways to sneak crafty malware

05:53.800 --> 05:54.800
into the Play Store.

05:54.800 --> 05:59.720
Yeah, there's no getting around that. Even if it is a semi curated environment, think

05:59.720 --> 06:02.560
twice before installing just any app.

06:02.560 --> 06:08.920
Yeah, good advice. And think twice before getting into VR, I would say, as we had a

06:08.920 --> 06:15.000
bit more evidence this week that VR is not really panning out to be the success a lot

06:15.000 --> 06:16.400
of people hoped it would be.

06:16.400 --> 06:23.560
Oh, Joe, you must be talking about the open sourcing of Google's cardboard VR headset,

06:23.560 --> 06:27.400
which I'll note comes just a month after they dropped Daydream.

06:27.400 --> 06:32.920
Yeah, Daydream was they're quite fancy VR headset, which is not supported by the new

06:32.920 --> 06:39.840
Pixel 4 phones. And now they're open sourcing cardboard, the libraries and SDK for that.

06:39.840 --> 06:44.520
And it feels to me that although they say they're going to continue to contribute to

06:44.520 --> 06:50.120
it, or they may continue to contribute to it, realistically, this is one of those cases

06:50.120 --> 06:57.440
where things are sort of put out to pasture by being open sourced. And realistically,

06:57.440 --> 07:02.160
I can't see many people wanting to necessarily work on it, because it's almost an admission

07:02.160 --> 07:04.600
that it's just a dead platform at this stage.

07:04.600 --> 07:09.320
That's one way to look at it. Certainly. I am pleased that at least some remnants will

07:09.320 --> 07:14.000
remain even if they never invest again, right? We've got the bones of the project here open

07:14.000 --> 07:18.040
source, and perhaps some artists or enthusiasts, people just looking to play around can make

07:18.040 --> 07:23.240
use of that. And I think having it open source is just better than having it die closed.

07:23.240 --> 07:26.440
Oh, definitely. Yeah, I wish more people would do that.

07:26.440 --> 07:31.520
You are right. It seems like maybe it was time for cardboard to die. You know, it was

07:31.520 --> 07:37.200
launched five years ago. And while VR has certainly not taken off, as many may have

07:37.200 --> 07:42.720
thought it might, cardboard was very early in this whole timeline and presented a device

07:42.720 --> 07:48.600
that you could play around with, try to get an idea at the base stages of what might work

07:48.600 --> 07:55.560
in the VR world. These days, the price has come down on much better VR tech. And I think

07:55.560 --> 07:59.200
there's just less reason for cardboard to exist.

07:59.200 --> 08:07.200
Yeah, but that said, we still don't have a truly wireless and truly portable VR solution.

08:07.200 --> 08:12.040
Whereas we all have these phones in our pockets with relatively high resolution displays that

08:12.040 --> 08:18.560
are totally wireless and can just slide into this cheap, like $20 or less cardboard headset.

08:18.560 --> 08:23.960
And you can have very, very cheap VR, it might not be the best. But I've played with it and

08:23.960 --> 08:29.560
it was pretty fun. It's a novelty. It's not something I'm going to do all the time. But

08:29.560 --> 08:36.080
I think there is still a huge gap between cardboard and even the cheapest proper VR

08:36.080 --> 08:37.080
solutions.

08:37.080 --> 08:42.160
Yeah, you're right. It had a unique place in the market. And I played with it a bit

08:42.160 --> 08:48.320
too. I've even got one of those plastic headset models you can find on eBay or Amazon. And

08:48.320 --> 08:54.340
it's not amazing. But it was fun to play with. I hope we'll see more releases from Google.

08:54.340 --> 08:59.880
They mentioned perhaps a Unity SDK package in the future. And really, the only thing

08:59.880 --> 09:03.840
that will continue to make cardboard relevant is the community wanting to use it.

09:03.840 --> 09:08.160
Yeah, well, we can hope and like you said, it's much better that they abandon it by open

09:08.160 --> 09:13.640
sourcing it than not. And with the Apache 2 license that it's under, it could potentially

09:13.640 --> 09:17.960
live on as some commercial products, although they are going to be quite restrictive about

09:17.960 --> 09:23.520
the Google Cardboard trademark. You have to be a bit careful that you can use the term

09:23.520 --> 09:28.880
Google Cardboard, but not implying that it's official. But I think that's fairly standard

09:28.880 --> 09:30.440
for this sort of thing.

09:30.440 --> 09:35.600
Well, something that hasn't been abandoned is Ubuntu 14.04. It ran out of support in

09:35.600 --> 09:41.600
April, but thanks to Canonical's ESM program, which is extended security maintenance, you

09:41.600 --> 09:49.320
can get support for it up to 2022. Up to now, you've had to pay for that. But this week,

09:49.320 --> 09:53.800
Canonical announced that you can now get free access to that for up to three machines.

09:53.800 --> 09:58.760
Or up to 50 machines if you're an official Ubuntu member. With that, you're going to

09:58.760 --> 10:04.460
get fixes for high and critical severity CVEs for the most commonly used server packages.

10:04.460 --> 10:08.500
And you'll have access to Canonical's live patch technology, which permits users to apply

10:08.500 --> 10:10.520
critical kernel patches without rebooting.

10:10.520 --> 10:16.140
And they've got a new client for this, which is just called UA for Ubuntu Advantage. And

10:16.140 --> 10:19.000
so I tried this out, I installed 14.04.

10:19.000 --> 10:22.120
Something tells me you already had an installation lying around, Joe.

10:22.120 --> 10:25.760
I haven't actually, I recently updated one to 16.04. But I'm not telling you where that

10:25.760 --> 10:35.040
is. But I installed a fresh 14.04.6 and fully updated it, rebooted, checked for updates

10:35.040 --> 10:39.960
again, it said there weren't any, but if you're part of this Ubuntu Advantage, you can get

10:39.960 --> 10:46.660
them. And so I signed up for that and put in my key, which was really easy. And then

10:46.660 --> 10:50.240
suddenly I had a bunch more updates, and I was completely up to date.

10:50.240 --> 10:53.440
It does seem like they put in a lot of work to make this fairly seamless.

10:53.440 --> 10:58.760
Yeah, definitely. It was really, really easy to do it. The only thing is, I wasn't sure

10:58.760 --> 11:05.040
how I could get rid of that machine, how I could kind of uncouple it from my account.

11:05.040 --> 11:11.320
Because having kind of deleted that VM, does that mean that it's there forever, and I've

11:11.320 --> 11:15.460
kind of wasted one of my lives, as it were? I don't know, the documentation wasn't that

11:15.460 --> 11:16.460
clear on that.

11:16.460 --> 11:21.700
Yeah, this is an area of Ubuntu I'm not too familiar with, because unless you need these

11:21.700 --> 11:25.920
updates or already have a support relationship with Canonical, you just didn't have access

11:25.920 --> 11:26.920
to it before.

11:26.920 --> 11:30.320
Yeah, we generally talk about the kind of new and shiny stuff. But I think the reality

11:30.320 --> 11:36.160
is that there is a lot of infrastructure out there that is running on old versions of Ubuntu

11:36.160 --> 11:41.920
and old versions of various other distros as well. And it's this extra long term support

11:41.920 --> 11:47.760
that makes you a proper enterprise company. And that's why Canonical started offering

11:47.760 --> 11:55.080
the paid tiers for this, I think is part of their plan to IPO. And I think that what we've

11:55.080 --> 12:01.000
got here is them giving people a free taste of it to kind of hook them in and realize,

12:01.000 --> 12:07.080
actually, this is good that we can rely on Ubuntu being updated for a seriously long

12:07.080 --> 12:15.620
time. It's not clear whether 16.04 and 18.04 are going to get this free ESM arrangement.

12:15.620 --> 12:17.400
So we'll have to wait and see on that one.

12:17.400 --> 12:22.880
Nevertheless, it does seem like a goodwill and good PR move. I imagine from the perspective

12:22.880 --> 12:29.160
of a small business or perhaps a nonprofit who still got a 14.04 machine running somewhere,

12:29.160 --> 12:32.040
depending on it, this makes you pretty happy.

12:32.040 --> 12:37.120
Well, there have been some significant changes since 14.04 came out. That was still using

12:37.120 --> 12:39.360
upstart, no system D back then.

12:39.360 --> 12:44.800
It really is a new era. And even with this support, I think these organizations will

12:44.800 --> 12:47.600
still have to confront an update sometime.

12:47.600 --> 12:52.680
Well 2022. So you know, a couple of years to get yourself sorted and get on to 16.04

12:52.680 --> 12:55.240
and then face the same problem in another couple of years.

12:55.240 --> 12:57.120
Yeah, there's no escaping updates.

12:57.120 --> 13:01.680
Well, from the old to the very new, something that created a lot of buzz this week, something

13:01.680 --> 13:08.720
that's really cool, Splitter. This is from the French music streaming service Deezer.

13:08.720 --> 13:14.120
And it takes a music track and separates it into its constituent parts, for the most part,

13:14.120 --> 13:15.320
actually very well.

13:15.320 --> 13:20.380
Yeah, sounds like we both had a chance to give it a shot. It's really easy to get running.

13:20.380 --> 13:25.960
It's a Python application using TensorFlow. And then they have access to some private

13:25.960 --> 13:31.180
data sets that they've used to train all these models. So the tool basically downloads the

13:31.180 --> 13:36.040
model and runs it against whatever input file you've got, which could be a wave or a flack

13:36.040 --> 13:37.040
or MP3.

13:37.040 --> 13:40.800
Yeah, they've got access to tons of data for this because well, they're a music streaming

13:40.800 --> 13:46.340
service. And that made me wonder, does this only work with commercial music that they

13:46.340 --> 13:53.160
had trained the engine on? And the reality is no, I tried some of my own tracks and some

13:53.160 --> 14:00.640
more obscure stuff. And it really does work. I mean, the asterisk here is it's not studio

14:00.640 --> 14:05.880
quality drums, studio quality guitar, studio quality vocals. But I think it's good enough

14:05.880 --> 14:07.520
to do a remix or something.

14:07.520 --> 14:12.280
Right. It seemed particularly effective at pulling the drum lines out. And while the

14:12.280 --> 14:17.400
vocals were at times a bit eerie, which makes sense considering how well optimized our own

14:17.400 --> 14:23.740
brains are at detecting human vocals, as a tool to pull the vocals out of a file, some

14:23.740 --> 14:26.040
things I tried worked surprisingly well.

14:26.040 --> 14:32.440
Well, I'm not sure about it being really easy to get going. It took me probably about 10

14:32.440 --> 14:38.400
or 15 minutes of messing around to get conda to work something that I'd not used before.

14:38.400 --> 14:42.280
It's not just a case of calling the git repository and run a binary or anything.

14:42.280 --> 14:46.480
I will note and maybe this would have helped you there are Docker images available both

14:46.480 --> 14:52.200
for the CPU optimized version and the GPU optimized version, which is even faster.

14:52.200 --> 14:56.680
Of course, that's the route you went down. You're all over Docker. So yeah, okay, that

14:56.680 --> 14:59.680
makes sense. Yeah, that would be very easy. But I wanted to do it the other way. For some

14:59.680 --> 15:05.200
reason. I'm just awkward. You mentioned the GPU there. With the right graphics card and

15:05.200 --> 15:11.400
the right drivers, you can get it to go 100 times as fast as on the CPU. And the CPU was

15:11.400 --> 15:17.000
for me on a fairly old laptop, about real time ish.

15:17.000 --> 15:23.040
Yeah, and even on the CPU, it really wasn't that slow. I ended up spending a couple hours

15:23.040 --> 15:27.400
and throwing 20 or so tracks at it. And I had a great time. So even if you're not going

15:27.400 --> 15:33.720
to use it to remix or as a sample somewhere, it's just a neat application of technology.

15:33.720 --> 15:38.240
And somewhat unique in this space. And being open source, there's a lot of commercial tools

15:38.240 --> 15:44.120
that can do some of these same things, but you don't often get access to how it works.

15:44.120 --> 15:49.240
Now I mostly tried it with the splitting into five different stems, but you can just separate

15:49.240 --> 15:55.560
the backing track and the vocals. Or you can do a four stem version. But I would highly

15:55.560 --> 15:59.800
recommend the five stem because that gives you a piano, which more often than not is

15:59.800 --> 16:06.400
not a piano. It's just really cool, really eerie sounds that have come from all sorts

16:06.400 --> 16:09.280
of sources within the track.

16:09.280 --> 16:13.280
One angle on this tool I hadn't considered before is somewhat interesting just to try

16:13.280 --> 16:19.160
to analyze how these pieces are put together and what the model thinks they should be.

16:19.160 --> 16:23.960
Well, yeah, as someone who at least used to mix quite a lot of music tracks, this could

16:23.960 --> 16:28.560
be really handy to assess your mix and see how you've done it. It's not necessarily going

16:28.560 --> 16:34.760
to dictate the decisions that you make, but it is a good extra data point with regards

16:34.760 --> 16:38.540
how you've separated the various frequencies within your mix.

16:38.540 --> 16:43.760
Now while most of us don't have access to the private data sets, Deezer does. They include

16:43.760 --> 16:48.920
all the technology in the open source release to go train this model on your own data. And

16:48.920 --> 16:51.120
I wonder if we'll see any interesting results there too.

16:51.120 --> 16:55.320
Yeah, I suspect that this is only going to get better as more people train it and contribute

16:55.320 --> 16:59.640
to the open source project. And it is great to see that we do have an open source implementation

16:59.640 --> 17:03.960
of this rather than it all being locked away. So yeah, I think this is definitely one to

17:03.960 --> 17:09.300
watch. Much like our last story is definitely one to watch. And that is that Microsoft's

17:09.300 --> 17:14.020
Edge browser is going to be released for Linux. It's official. I know I'm looking forward

17:14.020 --> 17:15.240
to it, Wes, are you?

17:15.240 --> 17:19.980
Well, I'm looking forward to giving it a try. Anyway, I don't think it's going to replace

17:19.980 --> 17:26.380
my main browser. But it seems like Microsoft is genuinely interested in making this a good

17:26.380 --> 17:27.880
experience for all platforms.

17:27.880 --> 17:31.440
Yeah, and this was announced in your neck of the woods, wasn't it at their Ignite conference

17:31.440 --> 17:32.440
in Seattle?

17:32.440 --> 17:37.920
Yeah, although unfortunately, I wasn't there to catch it in person. There is a video available

17:37.920 --> 17:44.120
if you're curious. It's also not as surprising as it may seem because the new Microsoft Edge

17:44.120 --> 17:46.720
is powered by chromium under the hood.

17:46.720 --> 17:51.840
Yeah, it's using the blink engine. So it's not a huge stretch to get it onto Linux you

17:51.840 --> 17:58.040
wouldn't have thought. But in that video, they announced it and kind of were expecting

17:58.040 --> 18:04.500
a reaction that they didn't quite get, which is quite funny. But, you know, I could see

18:04.500 --> 18:09.800
this being relatively successful. And a lot of people would scoff at that. And just the

18:09.800 --> 18:14.660
idea of edge coming to Linux seems to be funny to most people. But when you really think

18:14.660 --> 18:21.360
about it, yes, we've got Firefox and Chromium. But sometimes you need to use Chrome for things.

18:21.360 --> 18:27.400
Source Connect, which we sometimes use, for example. Now, if that worked in edge, it would

18:27.400 --> 18:33.840
make me stop and think, whose proprietary browser would I prefer to use? Evil Company

18:33.840 --> 18:41.840
A, Google, or Evil Company B, Microsoft? Honestly, I don't know. There's not much in it really.

18:41.840 --> 18:47.360
Yeah, you know, at that level, it's probably worth just giving it a shot. I was able to

18:47.360 --> 18:53.760
test it out under wine, which worked surprisingly well. And I mean, it was a it was a fine browsing

18:53.760 --> 18:58.720
experience. In particular, I noticed they had really easy access to get a voice narration

18:58.720 --> 19:01.520
of the page. And it was surprisingly decent.

19:01.520 --> 19:06.500
All right, that's a nice accessibility feature. How did it compare to Chrome then?

19:06.500 --> 19:13.040
It felt like a slightly lighter, more optimized version of Chrome with a little bit of the

19:13.040 --> 19:15.480
Microsoft Windows aesthetic put on top.

19:15.480 --> 19:19.880
Now I am curious. I will have to try this once it comes out. We don't really have any

19:19.880 --> 19:25.360
further details on when that's going to be. But yeah, I'll give it a go. It'd be interesting

19:25.360 --> 19:29.680
if you could try Source Connect in there and some other web apps that seemingly require

19:29.680 --> 19:34.120
Chrome and see if Microsoft have managed to crack that aspect of it.

19:34.120 --> 19:40.560
Now you're thinking it's also already available to try on Mac or Windows or iOS or Android

19:40.560 --> 19:43.280
basically everywhere but Linux.

19:43.280 --> 19:47.800
But realistically, I'm staring at these show notes in Firefox and I think I will be for

19:47.800 --> 19:49.640
quite some time to come.

19:49.640 --> 19:50.640
Same here.

19:50.640 --> 19:54.040
Well, we'll follow the progress of Edge on Linux along with all the other stories in

19:54.040 --> 19:59.480
the open source world. So go to linuxactionnews.com slash subscribe so you don't miss any future

19:59.480 --> 20:00.720
episodes.

20:00.720 --> 20:04.800
And linuxactionnews.com slash contact for ways to get in touch.

20:04.800 --> 20:08.520
We'll be back next Monday with our weekly take on the latest Linux and open source news.

20:08.520 --> 20:10.120
I'm at Westpane.

20:10.120 --> 20:31.320
And I'm at Jyresington. Thanks for joining us and we'll see you next week.

