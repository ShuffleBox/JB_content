1
00:00:00,000 --> 00:00:08,920
Hello, and welcome to Linux Action News, episode 167, recorded on December 13th, 2020.

2
00:00:08,920 --> 00:00:09,920
I'm Chris.

3
00:00:09,920 --> 00:00:10,920
And I'm Wes.

4
00:00:10,920 --> 00:00:11,920
Hello, Wes.

5
00:00:11,920 --> 00:00:13,000
Let's do the news.

6
00:00:13,000 --> 00:00:17,040
And let's start with this huge news with CentOS.

7
00:00:17,040 --> 00:00:21,840
Red Hat has announced that the future of CentOS is Stream.

8
00:00:21,840 --> 00:00:23,760
It's CentOS, Wes, but not as we know it.

9
00:00:23,760 --> 00:00:29,160
Yeah, this is certainly a complex story, and we'll cover all the angles, but let's start

10
00:00:29,160 --> 00:00:30,160
with some context.

11
00:00:30,160 --> 00:00:37,480
CentOS has a long history, starting 16 years ago, way back in 2004, with its first release,

12
00:00:37,480 --> 00:00:39,200
version 2.

13
00:00:39,200 --> 00:00:42,960
CentOS stands for Community Enterprise Linux Operating System.

14
00:00:42,960 --> 00:00:48,240
And the project was a hit, offering a binary compatible and subscription-free distribution

15
00:00:48,240 --> 00:00:51,400
built from the Red Hat Enterprise Linux source code.

16
00:00:51,400 --> 00:00:57,000
With one major caveat, of course, and that was that Red Hat's proprietary branding and

17
00:00:57,000 --> 00:00:59,520
logos, everything of that nature was removed.

18
00:00:59,520 --> 00:01:05,240
And also another big one, especially in production workloads, no Red Hat commercial support.

19
00:01:05,240 --> 00:01:09,320
But CentOS still managed to appeal to a broad market of developers, tinkers, and definitely

20
00:01:09,320 --> 00:01:13,460
people who just wanted to try out the platform before they paid for the platform.

21
00:01:13,460 --> 00:01:19,460
And CentOS also became famous along that way for some rough patches, some things that weren't

22
00:01:19,460 --> 00:01:22,560
necessarily ideal for an enterprise distribution.

23
00:01:22,560 --> 00:01:29,200
I think maybe more notable is on July 31st, 2009, the CentOS project leader disappeared.

24
00:01:29,200 --> 00:01:34,280
And to kind of give you a taste of how things were back then, the post starts, this is just

25
00:01:34,280 --> 00:01:40,040
the first sentence, quote, the future of the CentOS Linux project appears in jeopardy,

26
00:01:40,040 --> 00:01:44,600
as the project leader, Lance Davis, has dropped off the face of the earth, end quote.

27
00:01:44,600 --> 00:01:49,480
Yeah, like many open source projects, there's some troubles along the way, especially around

28
00:01:49,480 --> 00:01:54,760
control and organization of the project, but that didn't slow CentOS down.

29
00:01:54,760 --> 00:01:59,320
In 2010, they'd overtaken Debian to become the most popular Linux distribution for web

30
00:01:59,320 --> 00:02:03,840
servers, controlling almost 30% of the Linux web at that time.

31
00:02:03,840 --> 00:02:06,960
Yeah, Debian managed to claim some of that back later.

32
00:02:06,960 --> 00:02:12,960
And of course, now in 2020, according to W3Techs, as far as web servers go, Ubuntu has 47.6%

33
00:02:12,960 --> 00:02:14,160
of the market today.

34
00:02:14,160 --> 00:02:19,360
But CentOS, still in a strong number two with 18.8% of web servers that are active on the

35
00:02:19,360 --> 00:02:21,760
web today, still very actively used.

36
00:02:21,760 --> 00:02:26,400
The next real notable thing that happened was January 27th, 2014.

37
00:02:26,400 --> 00:02:32,260
Red Hat Aqua hired some of the CentOS development team and the branding and the copyrights.

38
00:02:32,260 --> 00:02:35,640
So it was essentially a purchase, but in a kind of open source project style.

39
00:02:35,640 --> 00:02:40,120
And at the time they said that Red Hat and the CentOS project would, quote, join forces

40
00:02:40,120 --> 00:02:47,120
to spread, I'm sorry, join forces to speed up open source innovation, end quote.

41
00:02:47,120 --> 00:02:48,720
I don't think they quite said it like that though.

42
00:02:48,720 --> 00:02:53,200
Now you add just a little bit more flair, as you do.

43
00:02:53,200 --> 00:02:57,760
Now from there CentOS continued on until the next big era in announcement, which was last

44
00:02:57,760 --> 00:03:03,400
year in September of 2019, when CentOS Stream was announced and promised to transform the

45
00:03:03,400 --> 00:03:06,200
development experience within CentOS.

46
00:03:06,200 --> 00:03:10,720
And that brings us to this week, December 8th, 2020.

47
00:03:10,720 --> 00:03:17,620
Red Hat has announced that the CentOS project is shifting its entire focus to CentOS Stream.

48
00:03:17,620 --> 00:03:22,400
What has changed as of this week is the standard release of CentOS is going away in December

49
00:03:22,400 --> 00:03:24,240
2021.

50
00:03:24,240 --> 00:03:26,960
There will not be a CentOS Linux 9.

51
00:03:26,960 --> 00:03:34,300
Updates for CentOS Linux 8, the standard distribution will continue until December 31st, 2021.

52
00:03:34,300 --> 00:03:42,200
And CentOS Stream 9 will launch in Q2 of 2021 as part of the RHEL 9 development process.

53
00:03:42,200 --> 00:03:47,680
The significant change here is that CentOS will no longer be built from RHEL and instead

54
00:03:47,680 --> 00:03:53,080
RHEL will be built from CentOS because going forward, CentOS means CentOS Stream.

55
00:03:53,080 --> 00:03:57,080
In the past, we use that to refer to what was basically just the rebuild of Red Hat

56
00:03:57,080 --> 00:04:00,620
Enterprise Linux, but CentOS is now CentOS Stream.

57
00:04:00,620 --> 00:04:03,720
You won't have traditional releases going forward into the future.

58
00:04:03,720 --> 00:04:07,420
You won't have a new CentOS 7.3 or 8.3.

59
00:04:07,420 --> 00:04:10,320
It's just going to be CentOS Stream.

60
00:04:10,320 --> 00:04:15,460
The way to think about it now is it is the bridge of development between Red Hat Enterprise

61
00:04:15,460 --> 00:04:17,000
Linux and Fedora.

62
00:04:17,000 --> 00:04:21,720
Fedora is where operating system development and fundamentals happens.

63
00:04:21,720 --> 00:04:24,940
Stream is where the entire product is developed and refined.

64
00:04:24,940 --> 00:04:28,200
And RHEL is where it is shipped, Red Hat Enterprise Linux.

65
00:04:28,200 --> 00:04:30,520
This is a big departure from the way things have been.

66
00:04:30,520 --> 00:04:33,880
And the reaction to this has been massive.

67
00:04:33,880 --> 00:04:39,000
I've broken it down into four components and I want to start with the communication because

68
00:04:39,000 --> 00:04:42,160
I think that's one of the number one complaints is this was communicated poorly.

69
00:04:42,160 --> 00:04:45,960
And Red Hat has attempted to address this and individual members of Red Hat have made

70
00:04:45,960 --> 00:04:51,480
some really great blog posts after the fact that really help clarify all of this.

71
00:04:51,480 --> 00:04:55,800
So we've had the benefit of reading those and can consolidate and relay it.

72
00:04:55,800 --> 00:04:58,760
But if you'd like, we do have some in the show notes.

73
00:04:58,760 --> 00:05:03,400
They've added significantly more to the conversation since the original announcement.

74
00:05:03,400 --> 00:05:07,680
It's a real shame these didn't come out before or with the announcement or they didn't lead

75
00:05:07,680 --> 00:05:11,480
the announcement because they really clarify a few things.

76
00:05:11,480 --> 00:05:16,040
But additionally, if you zoom out and I think it's unfortunate because it speaks badly for

77
00:05:16,040 --> 00:05:20,040
Red Hat is I think the echo chamber got them on this one.

78
00:05:20,040 --> 00:05:24,840
They were a little blindsided by this and they didn't really think big picture here

79
00:05:24,840 --> 00:05:30,080
because they could have done a strategy that would have potentially just significantly

80
00:05:30,080 --> 00:05:31,840
lessen the blow of this thing.

81
00:05:31,840 --> 00:05:34,680
Just you know, here's an example.

82
00:05:34,680 --> 00:05:41,400
And Red Hat spent from now until RHEL 9, which is due in 2022.

83
00:05:41,400 --> 00:05:43,280
So let's just say a year and a half and change.

84
00:05:43,280 --> 00:05:48,560
Let's say they spent the next year, year and a half and change showing the world how you

85
00:05:48,560 --> 00:05:53,920
could take their universal base image, which is based on RHEL, and you could run that on

86
00:05:53,920 --> 00:05:56,480
sent off stream and have a good time.

87
00:05:56,480 --> 00:06:00,320
Or if they showed different use cases of people running sent off stream and how boring it

88
00:06:00,320 --> 00:06:02,880
is and how it's essentially the same experience.

89
00:06:02,880 --> 00:06:07,300
Yeah, I mean, part of the problem here, I think, is that sent off stream had partially

90
00:06:07,300 --> 00:06:12,200
been branded as something of a rolling release, although in the context of the RHEL universe.

91
00:06:12,200 --> 00:06:15,320
And that meant people didn't really think you could be trusted in production, that it

92
00:06:15,320 --> 00:06:17,960
was right for that use case at all.

93
00:06:17,960 --> 00:06:21,600
And we haven't heard much about stream really, at least in the larger community since it

94
00:06:21,600 --> 00:06:22,660
was released last year.

95
00:06:22,660 --> 00:06:27,080
So being told that's your new operating system without really understanding it, that's a

96
00:06:27,080 --> 00:06:28,080
little bit scary.

97
00:06:28,080 --> 00:06:33,320
But you use that year and a half to correct the misconception that stream is rolling.

98
00:06:33,320 --> 00:06:36,480
I mean, I've seen comparisons to Arch, which is ridiculous.

99
00:06:36,480 --> 00:06:37,480
It doesn't make sense.

100
00:06:37,480 --> 00:06:41,140
I think when people try this, they're going to be surprised at how boring it is.

101
00:06:41,140 --> 00:06:43,800
So correcting that misconception.

102
00:06:43,800 --> 00:06:48,280
And then last, well, actually, two more things they could have done is they are working on

103
00:06:48,280 --> 00:06:52,760
a free Red Hat Enterprise Linux program with less production restrictions.

104
00:06:52,760 --> 00:06:54,160
It's almost out.

105
00:06:54,160 --> 00:06:55,880
They could have launched that first.

106
00:06:55,880 --> 00:07:00,880
And then lastly, and probably most importantly, and how it should have gone down, is this

107
00:07:00,880 --> 00:07:06,120
could have waited, easy for me to say, until CentOS 9 slash RHEL 9 and make the change

108
00:07:06,120 --> 00:07:07,800
at a major version.

109
00:07:07,800 --> 00:07:12,600
Because one of the number one things we've got in via email is people have just migrated

110
00:07:12,600 --> 00:07:13,600
to CentOS 8.

111
00:07:13,600 --> 00:07:14,600
Yeah, exactly.

112
00:07:14,600 --> 00:07:15,600
They're looking at that.

113
00:07:15,600 --> 00:07:18,000
They know that there's a long support cycle, or at least there used to be.

114
00:07:18,000 --> 00:07:21,160
And so they could take some time to make the shift in their own time when they were ready,

115
00:07:21,160 --> 00:07:23,520
start playing around in the new version of the release.

116
00:07:23,520 --> 00:07:28,560
And when you've just found out that all that work is maybe wasted, ouch.

117
00:07:28,560 --> 00:07:33,880
One of our matrix chatters said that he had a day that was like none other because he

118
00:07:33,880 --> 00:07:34,960
saw the news.

119
00:07:34,960 --> 00:07:38,400
And later that day, they were going to have a meeting about migrating to CentOS 8.

120
00:07:38,400 --> 00:07:43,180
And like, within the span of one day, the next year long migration plan was just completely

121
00:07:43,180 --> 00:07:44,180
thrown out.

122
00:07:44,180 --> 00:07:46,280
And like, he's got no idea what we're doing now.

123
00:07:46,280 --> 00:07:49,040
We just, it was, I mean, it just it disrupted a lot of people.

124
00:07:49,040 --> 00:07:54,400
So not getting a good solid heads up and then reducing the perceived support window, even

125
00:07:54,400 --> 00:07:58,320
if it wasn't, you know, even if it wasn't written in stone, if it wasn't confirmed,

126
00:07:58,320 --> 00:07:59,320
for sure.

127
00:07:59,320 --> 00:08:06,420
The perceived support window from 2029 to 2021, I mean, it's a massive reduction, right?

128
00:08:06,420 --> 00:08:10,640
So it's it's one of those situations where if you could have prepped people a little

129
00:08:10,640 --> 00:08:14,040
more for that coming, could have given them the logic and the reasoning and could have

130
00:08:14,040 --> 00:08:18,200
made them more comfortable with what they're transitioning to and given them more options

131
00:08:18,200 --> 00:08:22,000
to get free rel, all of that would have made this a lot smoother.

132
00:08:22,000 --> 00:08:26,080
So the communication strategy from Red Hat was like amateur hour.

133
00:08:26,080 --> 00:08:27,200
They rushed it.

134
00:08:27,200 --> 00:08:30,460
And you got to think that's the result of the echo chamber.

135
00:08:30,460 --> 00:08:34,820
And I think the change in that life support commitment cycle also leads to this amount

136
00:08:34,820 --> 00:08:38,840
of reaction, making that kind of change, regardless of how it was communicated, was going to upset

137
00:08:38,840 --> 00:08:39,840
people.

138
00:08:39,840 --> 00:08:44,240
Yeah, one of the big changes here is that CentOS stream support will only be five years.

139
00:08:44,240 --> 00:08:49,080
And five years is pretty great for you know, community provided support, but it's not 10.

140
00:08:49,080 --> 00:08:52,640
And if that's what you're used to, maybe you're deploying stuff that's in environments that

141
00:08:52,640 --> 00:08:56,360
you don't touch or service often, just it's just a different paradigm.

142
00:08:56,360 --> 00:08:57,360
Yep.

143
00:08:57,360 --> 00:08:58,360
That's that is true.

144
00:08:58,360 --> 00:09:00,000
I'd say that's like the top third complaint.

145
00:09:00,000 --> 00:09:03,800
And the top fourth complaint out of a top four here is that people are convinced stream

146
00:09:03,800 --> 00:09:07,840
is going to be less stable than Red Hat Enterprise Linux.

147
00:09:07,840 --> 00:09:12,840
I think this is going to be one of those we'll just see Red Hat is making the case that no,

148
00:09:12,840 --> 00:09:13,840
not really.

149
00:09:13,840 --> 00:09:16,920
We're doing everything through the same continuous integration testing.

150
00:09:16,920 --> 00:09:20,620
We're still having all of the same validation requirements for what goes into CentOS stream

151
00:09:20,620 --> 00:09:22,560
that goes into RHEL itself.

152
00:09:22,560 --> 00:09:26,600
And Red Hat's trying to make the argument that it's this engineering process that has

153
00:09:26,600 --> 00:09:32,440
led to RHEL stability, not the not not like the order in which the packages move through

154
00:09:32,440 --> 00:09:33,440
different distributions.

155
00:09:33,440 --> 00:09:38,000
Yeah, in many ways, this is a modernization, right, embracing some of the cloud workflows,

156
00:09:38,000 --> 00:09:40,340
modern DevOps workflows here.

157
00:09:40,340 --> 00:09:42,400
Previously a lot of this work was hidden at Red Hat.

158
00:09:42,400 --> 00:09:44,180
We didn't see how exactly RHEL got built.

159
00:09:44,180 --> 00:09:47,840
But if you think about it, when you're trying to build this stable enterprise operating

160
00:09:47,840 --> 00:09:52,640
system, you can only tolerate so much change in the layer just above it when you're trying

161
00:09:52,640 --> 00:09:55,520
to build all these pieces together, integrate them and test them.

162
00:09:55,520 --> 00:09:58,760
So I don't think there's a huge incentive for that to break all the time.

163
00:09:58,760 --> 00:10:03,720
Okay, maybe some things will happen, but there were bugs and issues in CentOS as a rebuild

164
00:10:03,720 --> 00:10:04,720
as well.

165
00:10:04,720 --> 00:10:09,800
Well, and RHEL actually had an issue that shipped in production with that boothole flaw

166
00:10:09,800 --> 00:10:13,800
recently that caused some Red Hat Enterprise Linux systems not to boot.

167
00:10:13,800 --> 00:10:15,920
It happens even at the RHEL level.

168
00:10:15,920 --> 00:10:20,920
And if you take away the change that a lot of sysadmins that maybe even have millions

169
00:10:20,920 --> 00:10:25,200
of deployments just had the land that just shifted under them, and we look at what this

170
00:10:25,200 --> 00:10:30,080
means for Red Hat Enterprise Linux, I think this is kind of interesting because it does

171
00:10:30,080 --> 00:10:35,240
in a sense, it moves the future of Red Hat Enterprise Linux out into the open and gives

172
00:10:35,240 --> 00:10:40,920
people a way to develop against that, like the Podman team, for example, is working with

173
00:10:40,920 --> 00:10:44,040
much more, it's a much more faster paced project.

174
00:10:44,040 --> 00:10:48,400
It's working with a lot newer technologies than the rest of traditional RHEL.

175
00:10:48,400 --> 00:10:52,400
And so for them, something like CentOS Stream gives them a pace that they can develop at

176
00:10:52,400 --> 00:10:57,100
and have it ready when RHEL 9 ships, but it still goes through all the same validation

177
00:10:57,100 --> 00:10:58,100
and testing.

178
00:10:58,100 --> 00:11:03,520
That could be, if that works out right, that could be really just fine.

179
00:11:03,520 --> 00:11:08,520
People could end up converting to Stream, which is apparently very simple to do.

180
00:11:08,520 --> 00:11:13,440
Just gone through it once on a test system, it was very obvious and very simple.

181
00:11:13,440 --> 00:11:17,220
I don't know if it would be harder on a system that's been around for a year or two that

182
00:11:17,220 --> 00:11:24,200
maybe has more technical debt, it could be, but it's a supported migration path from standard

183
00:11:24,200 --> 00:11:27,840
CentOS 8 to CentOS Stream 8.

184
00:11:27,840 --> 00:11:32,600
And if you make that change, I think you're going to find it's pretty basic.

185
00:11:32,600 --> 00:11:34,880
It feels just like regular CentOS.

186
00:11:34,880 --> 00:11:38,860
It also provides some more ways of actually working with the upstream community.

187
00:11:38,860 --> 00:11:43,520
Because if you're a RHEL customer or just using CentOS, you didn't have a great pipeline

188
00:11:43,520 --> 00:11:47,620
for getting in some of those fixes if you did run into a bug or you wanted a new feature.

189
00:11:47,620 --> 00:11:50,580
But now with Stream, it's open, everything's out in the open.

190
00:11:50,580 --> 00:11:55,060
You can contribute, you can submit bugs, submit fixes, submit patches, and actually get influence

191
00:11:55,060 --> 00:11:59,460
and fix your own problems potentially or work with Red Hat and the open source community

192
00:11:59,460 --> 00:12:03,260
around it to improve things for the next version of the software you're going to be running.

193
00:12:03,260 --> 00:12:05,440
And that wasn't really available before.

194
00:12:05,440 --> 00:12:06,440
Yeah.

195
00:12:06,440 --> 00:12:09,040
So that is obviously a clear improvement.

196
00:12:09,040 --> 00:12:15,120
I think additionally, as a Fedora user, what I like about it is it kind of supplies a buffer

197
00:12:15,120 --> 00:12:18,600
between the community and the suits.

198
00:12:18,600 --> 00:12:20,880
CentOS Stream is where they're going to focus.

199
00:12:20,880 --> 00:12:23,500
It's where the attention is going to go for getting things ready.

200
00:12:23,500 --> 00:12:28,680
And it lets Fedora just be Fedora and not have to worry about trying to get itself into

201
00:12:28,680 --> 00:12:32,200
a shippable state that is enterprise supportable, et cetera, et cetera.

202
00:12:32,200 --> 00:12:35,540
They can continue to innovate and they can try to make the best product there.

203
00:12:35,540 --> 00:12:39,880
That then leads to CentOS where the suit pressure is applied, right?

204
00:12:39,880 --> 00:12:45,460
All of the expectations of the business get focused and it kind of keeps that heat away

205
00:12:45,460 --> 00:12:49,960
from what is now a daily desktop driver for me.

206
00:12:49,960 --> 00:12:53,440
And so I kind of like this arrangement from a Fedora user standpoint.

207
00:12:53,440 --> 00:12:55,040
It helps keep Fedora weird.

208
00:12:55,040 --> 00:13:01,800
Well, and I think we've seen speculation that, oh, if this is the end of Fedora, because

209
00:13:01,800 --> 00:13:04,840
if they did this to CentOS, then they're going to do it to Fedora next.

210
00:13:04,840 --> 00:13:10,600
But actually, it makes Fedora a critical part of the fundamental operating system development

211
00:13:10,600 --> 00:13:16,160
that needs to happen, has to happen in a space that still gets used, it still requires shipping

212
00:13:16,160 --> 00:13:20,760
a product because at the end, they're trying to get it to something that they can turn

213
00:13:20,760 --> 00:13:22,680
into an enterprise product.

214
00:13:22,680 --> 00:13:26,200
And that means Fedora is critical for that early phase development.

215
00:13:26,200 --> 00:13:28,680
And it means I keep getting fresh, cool stuff.

216
00:13:28,680 --> 00:13:29,680
Yeah, exactly.

217
00:13:29,680 --> 00:13:30,680
Right.

218
00:13:30,680 --> 00:13:34,120
I mean, you're not going to just enable system D, home D on CentOS stream because it doesn't

219
00:13:34,120 --> 00:13:35,120
make sense.

220
00:13:35,120 --> 00:13:36,120
You haven't tried it out.

221
00:13:36,120 --> 00:13:37,320
You don't know what all the implications or downsides are.

222
00:13:37,320 --> 00:13:41,840
But Fedora can be a place where that kind of more wild out in the open development can

223
00:13:41,840 --> 00:13:44,040
actually take place with fewer risks.

224
00:13:44,040 --> 00:13:49,400
And so you'll have, I think, a fair amount of users who will be very disappointed.

225
00:13:49,400 --> 00:13:54,560
And I think you're going to have a lot of sysadmins out there who had their trust violated,

226
00:13:54,560 --> 00:13:58,160
and it's probably never going to be forgotten.

227
00:13:58,160 --> 00:14:03,480
Like some of the famous moments in the past of CentOS or CentOS, this is yet another one

228
00:14:03,480 --> 00:14:04,840
of those.

229
00:14:04,840 --> 00:14:08,600
And I think long term, they're probably going to be OK.

230
00:14:08,600 --> 00:14:12,460
You're probably going to have most users who are cost sensitive that have something in

231
00:14:12,460 --> 00:14:16,000
production just make the switch, and then you'll have some that defect to the Ubuntu

232
00:14:16,000 --> 00:14:21,480
and the Seusses out there, or purchase a Red Hat Enterprise Linux subscription.

233
00:14:21,480 --> 00:14:26,680
And of course, there are some new open source rebuilds in the work to try and take the place

234
00:14:26,680 --> 00:14:30,000
of what the former name of CentOS meant.

235
00:14:30,000 --> 00:14:31,000
We'll see.

236
00:14:31,000 --> 00:14:34,480
I guess that'll be a factor of how stable Stream is, if that works for companies, and

237
00:14:34,480 --> 00:14:39,520
if a legitimate and strong enough open source community forms over in those new areas.

238
00:14:39,520 --> 00:14:40,520
Yeah.

239
00:14:40,520 --> 00:14:42,480
We should probably get to a couple of the forks in a moment.

240
00:14:42,480 --> 00:14:45,760
But I was just thinking, Wes, as we were talking about this, the other thing that you have

241
00:14:45,760 --> 00:14:51,440
to keep in mind is all of this is happening while AWS is coming along and gobbling up

242
00:14:51,440 --> 00:14:55,720
more and more of the traditional server market share, and more and more applications are

243
00:14:55,720 --> 00:15:00,480
just getting shipped as containers, and people could care less what the distribution is.

244
00:15:00,480 --> 00:15:05,600
And you have to wonder if in that new world, if a free version of your operating system

245
00:15:05,600 --> 00:15:09,760
isn't maybe more important than ever to stay competitive and to get user base.

246
00:15:09,760 --> 00:15:16,640
And that's the thing is, if Red Hat doesn't keep those users, somebody like AWS, who's

247
00:15:16,640 --> 00:15:21,400
now offering Amazon Linux, which is based on Red Hat Enterprise Linux.

248
00:15:21,400 --> 00:15:22,400
Indeed.

249
00:15:22,400 --> 00:15:26,140
Comes along and says, oh, by the way, now we also have some on-premises offering, so

250
00:15:26,140 --> 00:15:29,520
you can use the same management tools for your on-premises install as you do the ones

251
00:15:29,520 --> 00:15:30,680
up in AWS Cloud.

252
00:15:30,680 --> 00:15:36,740
And oh, by the way, you can deploy Amazon Linux, and it's a supported RHEL clone.

253
00:15:36,740 --> 00:15:41,360
And they may be risking some market loss to essentially the cloud in this move as well.

254
00:15:41,360 --> 00:15:45,740
Yeah, it is a time to be relevant and to be easy to try things out, right?

255
00:15:45,740 --> 00:15:50,560
Will CentOS Stream have that same sort of understanding that you can click that when

256
00:15:50,560 --> 00:15:53,440
you see it in your dashboard of whatever cloud you're using to spin up a new instance to

257
00:15:53,440 --> 00:15:55,000
play around for your next project?

258
00:15:55,000 --> 00:15:59,360
Is it going to have an appeal to you that you're actually going to want to use?

259
00:15:59,360 --> 00:16:03,840
One of the former co-founders of CentOS has launched Rocky Linux.

260
00:16:03,840 --> 00:16:08,480
It's already become the number one project on GitHub over the weekend, lots of excitement

261
00:16:08,480 --> 00:16:10,300
and activity.

262
00:16:10,300 --> 00:16:15,720
And Cloud Linux, which is made by a cloud hosting provider, has also come along and

263
00:16:15,720 --> 00:16:20,040
said, we're going to offer Cloud Linux, and we already have the staff and the team to

264
00:16:20,040 --> 00:16:21,040
maintain it.

265
00:16:21,040 --> 00:16:22,040
We're ready to go.

266
00:16:22,040 --> 00:16:26,920
So just overnight, practically, you've had at least two, and I've seen a third pop up

267
00:16:26,920 --> 00:16:27,920
as well.

268
00:16:27,920 --> 00:16:32,680
Well, and you know Oracle is advertising their unspeakable Linux as well.

269
00:16:32,680 --> 00:16:33,680
Right.

270
00:16:33,680 --> 00:16:37,320
Everybody like woke up and tried to take advantage of the situation and said, hey, check us out.

271
00:16:37,320 --> 00:16:43,600
And by the way, we have a newer kernel if you want it to with ButterFS support.

272
00:16:43,600 --> 00:16:46,880
That was actually part of their pitch.

273
00:16:46,880 --> 00:16:50,800
Everybody's going to try to, you know, everybody who's going to try to take advantage of this

274
00:16:50,800 --> 00:16:54,720
now, this vacuum in the market for this, because clearly there was people that wanted CentOS.

275
00:16:54,720 --> 00:16:56,800
It was a very popular distribution.

276
00:16:56,800 --> 00:16:59,340
It served a need.

277
00:16:59,340 --> 00:17:02,400
And somebody will come along and offer it.

278
00:17:02,400 --> 00:17:06,280
Maybe Red Hat will step up and they'll refine their free Red Hat Enterprise project.

279
00:17:06,280 --> 00:17:09,880
Maybe they'll get more people using the universal base image.

280
00:17:09,880 --> 00:17:14,840
Or maybe people are just going to switch to Rocky Linux 9 when it comes out.

281
00:17:14,840 --> 00:17:16,320
Only time will tell on that one.

282
00:17:16,320 --> 00:17:21,080
But this is all going to be stuff we'll be following here on Linux Action News.

283
00:17:21,080 --> 00:17:22,760
linode.com slash LAN.

284
00:17:22,760 --> 00:17:27,240
Go there to get a $100 60 day credit towards a new account and go there to support the

285
00:17:27,240 --> 00:17:28,240
show.

286
00:17:28,240 --> 00:17:29,780
Linode is our cloud server provider.

287
00:17:29,780 --> 00:17:33,640
And because the price is so great, it makes it possible for a small team to have killer

288
00:17:33,640 --> 00:17:34,640
infrastructure.

289
00:17:34,640 --> 00:17:38,700
And personally, one of the things that I think is great about Linode is all of the distributions

290
00:17:38,700 --> 00:17:39,700
they support.

291
00:17:39,700 --> 00:17:42,480
I recently converted a CentOS 8 bucks to CentOS Stream.

292
00:17:42,480 --> 00:17:47,400
They got all the Alpines, Arches, recent CentOS releases, Debian's, Fedora's, OpenSUSE's,

293
00:17:47,400 --> 00:17:48,400
and Ubuntu's.

294
00:17:48,400 --> 00:17:50,320
Oh my, they've got it all.

295
00:17:50,320 --> 00:17:55,780
If you need a personal server for a blog or a portfolio, or maybe a game server, VPN server,

296
00:17:55,780 --> 00:17:58,400
they got systems that start at $5 a month.

297
00:17:58,400 --> 00:18:01,980
When you go to linode.com slash LAN, you get a $100 credit.

298
00:18:01,980 --> 00:18:05,960
Now you can really build out some infrastructure, maybe something for your business.

299
00:18:05,960 --> 00:18:09,960
You'd be surprised with 11 data centers around the world, you can get a server right next

300
00:18:09,960 --> 00:18:12,360
to your clients and serve them super fast.

301
00:18:12,360 --> 00:18:17,480
But what I love about Linode beyond their great dashboard, the 40 gigabit connections,

302
00:18:17,480 --> 00:18:23,120
native SSDs on the hypervisors, what I really like about them and trust about them is their

303
00:18:23,120 --> 00:18:25,320
love for Linux and open source.

304
00:18:25,320 --> 00:18:29,480
Creating Linux and open source initiatives has been a key part of Linode's core from

305
00:18:29,480 --> 00:18:30,480
the beginning.

306
00:18:30,480 --> 00:18:34,880
They've sponsored projects like Kubuntu, the All Things Open conference, and of course,

307
00:18:34,880 --> 00:18:37,220
our beloved Linux Fest Northwest.

308
00:18:37,220 --> 00:18:39,000
And you know, they started before AWS.

309
00:18:39,000 --> 00:18:43,540
They've been in this game for a long time because they followed the goal.

310
00:18:43,540 --> 00:18:45,680
They followed what they loved about Linux.

311
00:18:45,680 --> 00:18:48,800
They followed their passion.

312
00:18:48,800 --> 00:18:51,880
And that led them to create Linode.

313
00:18:51,880 --> 00:18:56,440
And then through their success, they've supported key parts of the open source ecosystem.

314
00:18:56,440 --> 00:19:00,240
And now this is your humble show and I invite you to go check them out and see what I've

315
00:19:00,240 --> 00:19:02,660
been talking about, linode.com slash LAN.

316
00:19:02,660 --> 00:19:05,780
You go there, you get the $100 60 day credit towards a new account.

317
00:19:05,780 --> 00:19:10,560
You support the show and you get a cloud provider that's dedicated to offering the best virtualized

318
00:19:10,560 --> 00:19:11,560
cloud computing.

319
00:19:11,560 --> 00:19:16,600
If it runs on Linux, it runs on Linode, linode.com slash LAN.

320
00:19:16,600 --> 00:19:21,080
Also, thank you to Ting for sponsoring this here show.

321
00:19:21,080 --> 00:19:22,520
Linux.ting.com.

322
00:19:22,520 --> 00:19:27,960
I've talked about Ting for a long time, but right now is truly the best time to switch

323
00:19:27,960 --> 00:19:28,960
to Ting.

324
00:19:28,960 --> 00:19:33,280
It's the next generation of Ting mobile and you could save more than ever and get $25

325
00:19:33,280 --> 00:19:35,880
off when you go to linux.ting.com.

326
00:19:35,880 --> 00:19:39,160
Ting is a mobile provider that just makes sense.

327
00:19:39,160 --> 00:19:44,220
And now they have plans with data that starts unlimited at $15 and $45 depending on what

328
00:19:44,220 --> 00:19:45,220
you need.

329
00:19:45,220 --> 00:19:50,000
So if you use two gigabytes or 20 gigabytes, well, there's a perfect Ting plan for you

330
00:19:50,000 --> 00:19:51,000
and your family now.

331
00:19:51,000 --> 00:19:54,400
They made a lot of improvements, but don't worry, all of the core stuff that I've always

332
00:19:54,400 --> 00:19:56,400
talked about Ting, it's still there.

333
00:19:56,400 --> 00:19:59,240
They still got the award winning customer service.

334
00:19:59,240 --> 00:20:04,920
They still have nationwide LTE and now 5G coverage and still no contracts ever.

335
00:20:04,920 --> 00:20:09,440
Ting mobile customers can now choose from three different plans based on your data needs.

336
00:20:09,440 --> 00:20:11,000
It's really simple to switch to Ting.

337
00:20:11,000 --> 00:20:15,600
You're going to wonder why all cell phone providers don't have to do it this way.

338
00:20:15,600 --> 00:20:17,560
Ting sets the bar so hard.

339
00:20:17,560 --> 00:20:18,560
You got to try it.

340
00:20:18,560 --> 00:20:20,100
Go to linux.ting.com.

341
00:20:20,100 --> 00:20:23,580
You can check your current phone, you create an account, pick a plan that's right for you,

342
00:20:23,580 --> 00:20:25,200
and they're just going to mail you a SIM card.

343
00:20:25,200 --> 00:20:28,580
You pop that in your phone and you're activated in minutes.

344
00:20:28,580 --> 00:20:29,720
Or you can get something new too.

345
00:20:29,720 --> 00:20:32,280
They have a Ting store where you can get devices directly.

346
00:20:32,280 --> 00:20:34,500
Cutting your phone bill in half has never been easier.

347
00:20:34,500 --> 00:20:38,680
It's really awesome to watch Ting make this big transition, to really step it up.

348
00:20:38,680 --> 00:20:44,320
I mean, unlimited data plans starting around $15 and going to $45.

349
00:20:44,320 --> 00:20:45,320
That's crazy.

350
00:20:45,320 --> 00:20:46,480
I can't even believe that's on there.

351
00:20:46,480 --> 00:20:50,960
And with the ease to manage your account through their dashboard, there's really no reason

352
00:20:50,960 --> 00:20:52,960
not to try it.

353
00:20:52,960 --> 00:20:54,420
linux.ting.com.

354
00:20:54,420 --> 00:20:57,460
Go there, support the show, and get $25 off.

355
00:20:57,460 --> 00:21:01,120
And thank you to everybody who supports our sponsors to make it possible for independent

356
00:21:01,120 --> 00:21:04,360
media, to give our shows away for free, to cover our costs.

357
00:21:04,360 --> 00:21:05,480
It makes all of the difference.

358
00:21:05,480 --> 00:21:10,600
Thank you to our sponsors, linode.com slash lan and linux.ting.com.

359
00:21:10,600 --> 00:21:13,520
And thank you everyone who supports those sponsors.

360
00:21:13,520 --> 00:21:19,640
linux.ting.com, linode.com slash lan.

361
00:21:19,640 --> 00:21:26,360
For the past five years, Google has been quietly developing a new operating system, Fuchsia,

362
00:21:26,360 --> 00:21:28,400
from the ground up.

363
00:21:28,400 --> 00:21:33,440
Starting this week, Google's Fuchsia OS is now being developed more openly, including

364
00:21:33,440 --> 00:21:37,240
accepting contributions from the public.

365
00:21:37,240 --> 00:21:41,280
Last year, Google quietly launched an official Fuchsia development website for the project,

366
00:21:41,280 --> 00:21:46,640
aiming to teach developers how best to work on the operating system and, to a much lesser

367
00:21:46,640 --> 00:21:49,400
extent, how to make apps.

368
00:21:49,400 --> 00:21:53,520
All throughout the last four years, though, Fuchsia has been something of a secretive

369
00:21:53,520 --> 00:21:58,520
skunkworks project, with Google remaining surprisingly quiet about its purpose.

370
00:21:58,520 --> 00:22:00,440
And that's sort of the big change this week.

371
00:22:00,440 --> 00:22:05,720
The company is making something of a splash with Fuchsia on the Google open source blog,

372
00:22:05,720 --> 00:22:08,840
and they're making an opening call for developers to contribute to the project.

373
00:22:08,840 --> 00:22:15,080
In fact, this is really the first formal announcement of the Fuchsia operating system's existence

374
00:22:15,080 --> 00:22:16,840
and how Google plans to use it.

375
00:22:16,840 --> 00:22:22,280
They say in this post, Fuchsia is a long term project for a general purpose open source

376
00:22:22,280 --> 00:22:23,600
operating system.

377
00:22:23,600 --> 00:22:28,760
And today we're expanding Fuchsia's open source model to welcome contributions from the public.

378
00:22:28,760 --> 00:22:35,020
The blog goes on to continue to say, Fuchsia is designed to prioritize security, upgradability,

379
00:22:35,020 --> 00:22:39,600
and performance, and is currently under active development by the Fuchsia team.

380
00:22:39,600 --> 00:22:44,860
We have been developing Fuchsia in the open, by their definition, I guess that's true,

381
00:22:44,860 --> 00:22:49,640
because they go on to say in their Git repository for the last four years, you can browse the

382
00:22:49,640 --> 00:22:54,280
repository history, they give you the URL, which we have, and you can see how Fuchsia

383
00:22:54,280 --> 00:22:55,760
has evolved over time.

384
00:22:55,760 --> 00:23:00,880
They finish by saying, we are laying this foundation from the kernel up to make it easier

385
00:23:00,880 --> 00:23:06,460
to create long lasting secure products and experiences.

386
00:23:06,460 --> 00:23:11,560
Perhaps more importantly, for both interested developers and us, the general public, Google

387
00:23:11,560 --> 00:23:14,920
now has a public roadmap for Fuchsia's development.

388
00:23:14,920 --> 00:23:19,080
On it, you can see things like the projects that the Fuchsia team is actively undertaking,

389
00:23:19,080 --> 00:23:21,880
such as the revamp of their component system.

390
00:23:21,880 --> 00:23:27,760
Yeah, you know, they keep talking about how their goal is to have a robust, secure, general

391
00:23:27,760 --> 00:23:30,960
purpose operating system for production.

392
00:23:30,960 --> 00:23:35,240
Gosh Wes, that sounds an awful lot like Linux, but they don't want you to get confused.

393
00:23:35,240 --> 00:23:36,240
This isn't for toys.

394
00:23:36,240 --> 00:23:40,920
They say on the site, Fuchsia's goal is to power production devices and products used

395
00:23:40,920 --> 00:23:43,000
for business critical applications.

396
00:23:43,000 --> 00:23:48,080
As such, Fuchsia is not a playground for experimental operating system concepts.

397
00:23:48,080 --> 00:23:53,880
Instead, the platform roadmap is driven by practical use cases arising from partner and

398
00:23:53,880 --> 00:23:55,480
product needs.

399
00:23:55,480 --> 00:23:59,960
And that felt like a little bit of a, I know you've all been saying this is our playground,

400
00:23:59,960 --> 00:24:03,880
but we're actually building this to be a production OS on day one.

401
00:24:03,880 --> 00:24:09,340
And again, that to me reads as exactly the market that Linux is addressing.

402
00:24:09,340 --> 00:24:12,160
So you're wondering why Fuchsia?

403
00:24:12,160 --> 00:24:18,440
I'm wondering, I'm wondering if Fuchsia isn't like, this is my Fuchsia conspiracy bacon,

404
00:24:18,440 --> 00:24:25,120
but I'm wondering if Fuchsia isn't kind of like a backup plan for the Linux kernel and

405
00:24:25,120 --> 00:24:30,240
maybe the Linux kernel team not going along with them in the future, sort of how you can

406
00:24:30,240 --> 00:24:34,300
kind of have a plan B that helps you apply pressure in negotiations.

407
00:24:34,300 --> 00:24:38,720
If someone knows you've got a credible threat, then they're more likely to concede and compromise

408
00:24:38,720 --> 00:24:41,540
versus if they think they have power over you.

409
00:24:41,540 --> 00:24:46,880
And I wonder if this isn't Google's credible threat, like a way to bargain a little bit

410
00:24:46,880 --> 00:24:50,640
and say, well, if you guys don't go this way, we're just going to focus all in on Fuchsia.

411
00:24:50,640 --> 00:24:55,720
It is interesting, and I think either way, it's clearly, they've learned a lot in their

412
00:24:55,720 --> 00:24:59,440
wide scale deployments of Linux, and I think a lot of that knowledge is going into some

413
00:24:59,440 --> 00:25:00,440
of Fuchsia's development.

414
00:25:00,440 --> 00:25:06,560
I mean, I think particularly of their long history developing containers and other deployment

415
00:25:06,560 --> 00:25:11,160
methodologies and security things like gVisor for Linux and having to deal with Linux security

416
00:25:11,160 --> 00:25:15,720
issues, their work on Android, and also now all those smaller devices they ship in their

417
00:25:15,720 --> 00:25:20,520
Google Home platform, Chromecast, those especially seem like ripe targets for Fuchsia.

418
00:25:20,520 --> 00:25:22,200
Oh yeah, for sure.

419
00:25:22,200 --> 00:25:23,560
And they've been really clever.

420
00:25:23,560 --> 00:25:30,580
A lot of the development languages and methodologies that people use to write for Fuchsia are gaining

421
00:25:30,580 --> 00:25:32,180
traction elsewhere in the market.

422
00:25:32,180 --> 00:25:36,920
Google has very cleverly been playing the long game on this one and got people to adopt

423
00:25:36,920 --> 00:25:39,280
these technologies well ahead of Fuchsia's release.

424
00:25:39,280 --> 00:25:47,400
So you may see in 2021 some actual smoke to this fire and adoption uptick may be pretty

425
00:25:47,400 --> 00:25:50,960
relatively simple, since a lot of people are already using the languages and tools that

426
00:25:50,960 --> 00:25:51,960
Fuchsia OS uses.

427
00:25:51,960 --> 00:25:55,760
Yeah, I think that'll be the next question is, is it easy for me to actually get Fuchsia

428
00:25:55,760 --> 00:25:58,600
deployed somewhere and run my apps on it?

429
00:25:58,600 --> 00:26:03,560
Until that happens, I don't really see it overtaking Linux for general application deployment,

430
00:26:03,560 --> 00:26:06,800
but certainly could make some inroads in specialized sectors.

431
00:26:06,800 --> 00:26:07,800
We'll see what happens.

432
00:26:07,800 --> 00:26:12,040
But bringing us a little closer to home, we do end the show today with a brand new shiny

433
00:26:12,040 --> 00:26:18,760
kernel, Linux 5.10 is released and besides being the last kernel release of 2020, this

434
00:26:18,760 --> 00:26:24,500
is also a significant milestone because it's a long term support version of the Linux kernel

435
00:26:24,500 --> 00:26:28,840
to be maintained for at least five years and it's also just a big sucker.

436
00:26:28,840 --> 00:26:34,120
Yeah, Linux 5.10 LTS is likely to be the kernel used in operating system releases like Debian

437
00:26:34,120 --> 00:26:38,040
11 and Magia 8, among many others.

438
00:26:38,040 --> 00:26:42,960
Although I should note that Fedora 34 and Ubuntu 21.04, well, those are more likely

439
00:26:42,960 --> 00:26:46,120
to see Linux 5.11.

440
00:26:46,120 --> 00:26:49,520
As for Linux 5.10, well, the merge window closed in October.

441
00:26:49,520 --> 00:26:54,480
Yeah, and this is one of the largest kernel releases in recent times, so there's a lot

442
00:26:54,480 --> 00:26:55,480
to dig into.

443
00:26:55,480 --> 00:26:59,640
Michael Arbel over at Phyronix has been doing a yeoman's amount of work to dig through some

444
00:26:59,640 --> 00:27:03,040
of this, but we grabbed a couple of our favorite things in here.

445
00:27:03,040 --> 00:27:06,840
There's a lot of continued work in Intel's forthcoming Rocket Lake and Alder Lake hardware

446
00:27:06,840 --> 00:27:12,760
to get that ready for day one Linux support and AMD Zen 3 platform users got temperature

447
00:27:12,760 --> 00:27:14,800
monitoring now built into Linux.

448
00:27:14,800 --> 00:27:21,960
But the thing that I'm really excited for is Raspberry Pi VC4 support is now baked into

449
00:27:21,960 --> 00:27:23,760
mainline Linux.

450
00:27:23,760 --> 00:27:29,420
Yeah, this Raspberry Pi 4 display support is really nice to see and the timing works

451
00:27:29,420 --> 00:27:36,040
out well because Mesa 20.3 introduced the V3DV Vulkan driver for the Raspberry Pi 4

452
00:27:36,040 --> 00:27:38,360
support, which is a story we talked about last week.

453
00:27:38,360 --> 00:27:44,360
Yeah, now we're seeing that Mesa and that Vulkan driver come together all in the Linux

454
00:27:44,360 --> 00:27:49,000
kernel, which is just a big deal for Raspberry Pi 4 users.

455
00:27:49,000 --> 00:27:50,000
Like yourself.

456
00:27:50,000 --> 00:27:51,380
Yep, I'm very happy about it.

457
00:27:51,380 --> 00:27:54,560
But you must be pretty excited about the Creative Labs Sound Blaster stuff.

458
00:27:54,560 --> 00:28:01,680
Oh yeah, the Creative Labs Sound Blaster AE-7 sound card is finally supported under Linux

459
00:28:01,680 --> 00:28:04,560
thanks to the work of the open source community.

460
00:28:04,560 --> 00:28:08,400
And isn't that nice, like Linux is still a place where if you have a device that you

461
00:28:08,400 --> 00:28:12,120
want work, you can get the code made, well, you can get it shipped.

462
00:28:12,120 --> 00:28:14,600
Wes is always going on about a Sound Blasters.

463
00:28:14,600 --> 00:28:18,640
Just like I've always been going on about my Nintendo Switch controllers, I got those

464
00:28:18,640 --> 00:28:20,720
Nintendo Switch Pro controllers.

465
00:28:20,720 --> 00:28:21,720
They're expensive.

466
00:28:21,720 --> 00:28:26,080
I would love to be able to use them with Linux instead of having to get like the Xbox controller.

467
00:28:26,080 --> 00:28:33,320
And now, no like side module needed, no more DKMS for me baked right into 510 is support

468
00:28:33,320 --> 00:28:36,680
for the Nintendo Switch Joy-Cons and Pro controllers.

469
00:28:36,680 --> 00:28:39,280
Should be working for both USB and Bluetooth.

470
00:28:39,280 --> 00:28:41,280
Obviously, I haven't tested this yet.

471
00:28:41,280 --> 00:28:46,680
It's all thanks to the new Nintendo HID driver and you even get rumble support and gyro data.

472
00:28:46,680 --> 00:28:47,680
Oh, neat.

473
00:28:47,680 --> 00:28:50,440
That seems like another great reason I should pick up a Switch.

474
00:28:50,440 --> 00:28:53,280
Yes, yes, yes, it is, Wes, yes, it is.

475
00:28:53,280 --> 00:28:59,000
There's some also good security improvements in 510, including some hardening against possible

476
00:28:59,000 --> 00:29:02,060
DMA attacks by external PCI Express devices.

477
00:29:02,060 --> 00:29:03,640
That's nice to see.

478
00:29:03,640 --> 00:29:08,000
And a neat feature we're now stealing from the BSDs that they've had for years, which

479
00:29:08,000 --> 00:29:11,000
is the no SIM follow mount option.

480
00:29:11,000 --> 00:29:12,000
Merry Christmas us.

481
00:29:12,000 --> 00:29:18,320
Yes, and now we are onward to Linux 5.11 merge window with many fancy new features on tap,

482
00:29:18,320 --> 00:29:19,600
which we will keep an eye on.

483
00:29:19,600 --> 00:29:24,600
It's doing the second week, so you'll see people landing some stuff in there just before

484
00:29:24,600 --> 00:29:26,560
the Christmas holiday break.

485
00:29:26,560 --> 00:29:31,540
So you may expect the kernel team to be a little more strict than usual about accepting

486
00:29:31,540 --> 00:29:37,320
already properly tested ready code, not anything that looks a little shaky because nobody wants

487
00:29:37,320 --> 00:29:38,320
their holiday wrecked.

488
00:29:38,320 --> 00:29:39,320
No, right?

489
00:29:39,320 --> 00:29:41,520
I don't want a broken Linux kernel under my Christmas tree.

490
00:29:41,520 --> 00:29:45,840
Well, that does bring us to the end of this week's episode, but go to linuxactionnews.com

491
00:29:45,840 --> 00:29:49,920
slash prescribe for all the ways to get new episodes as we update you on these stories

492
00:29:49,920 --> 00:29:52,040
as you know they're going to develop.

493
00:29:52,040 --> 00:29:56,080
And linuxactionnews.com slash contact for ways to get in touch.

494
00:29:56,080 --> 00:30:02,880
And why not join the new Coda radio happy hour jblive.tv Mondays at 5 PM 8 PM Eastern.

495
00:30:02,880 --> 00:30:05,480
Join us for a special live stream and hangout.

496
00:30:05,480 --> 00:30:10,280
We'll be back next Monday with our weekly take on the latest Linux and open source news.

497
00:30:10,280 --> 00:30:30,360
Thanks for joining us and we will see you next week.

