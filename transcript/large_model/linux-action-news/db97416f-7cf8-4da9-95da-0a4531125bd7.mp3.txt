Hello, and welcome to Linux Action News, episode 165, recorded on November 29th, 2020.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
And let's start with this prolonged AWS outage that took down a big chunk of the internet
and I think a lot of us felt.
Yeah, it was the addition of some new servers to AWS's backend that triggered a cascading
set of errors that caused a whole bunch of problems in their Northern Virginia region.
Yeah, based on the scale of outages and the number of services and applications impacted,
you would may have thought it was all of AWS that was down.
But it was just this one aspect, this area in the Northern Virginia region.
The company was attempting to add a modest amount of new capacity to its Amazon Kinesis
service that customers use to process things like real time data, including video, audio,
or even application logs.
To get over this, well, of course, you gotta go implement the fix and then restart a bunch
of servers.
In Amazon's case, a relatively small piece of their system they described as many thousands
because Amazon.
And that's a small number for them.
Indeed.
Ah, the real problem here is that, well, Amazon uses Amazon services, right?
I mean, if you have AWS, you're going to use AWS.
And so other services relied on Kinesis to get their work done, things like their Cognito
authentication offering.
Oh, also, there was some some kind of shenanigans going on with the status dashboard, which
wasn't really giving us clear information at the time.
And there's various conversations online that seem to be kind of implying its internal politics
that were maybe de-incentivizing employees from properly updating the dashboard.
Yeah, it does seem like there's a pattern sometimes due to technical reasons, like at
least this time sounds like Cognito since they're using Kinesis, well, Cognito is used
to log in and update the dashboard.
So it might be some technical reasons, but in general, I'd say AWS is never quick to
update their status.
I mean, you could see how that if you're a staffer in AWS infrastructure, and you have
to change your dashboard status to offline, that very likely triggers a whole series of
events and processes that put your department and you in particular in the minutia for quite
a while.
And you just want to avoid that, I can imagine you don't need another target on your back,
even if it's the right thing to do.
Yeah.
This also, every time this happens, it's like this huge deal, like, oh, my gosh, most of
the web is offline.
And there was one of these articles that we have linked in the show notes that just had
a long litany of apps and services that were offline.
And every time this happens, it seems like it affects us more and more like we never
learned the lessons from the last outage.
Right.
I mean, we're not we're still not relying on less cloud services, right?
One of the services and companies that was really affected badly is those Roomba vacuums
that the whole service and the management, all of it goes through that region.
And so you have people tweeting that they literally couldn't vacuum their house because
AWS was down.
That's 2020 for you.
I also admit it affected me not only some of the services I use, but I will shamefully
admit to you right here that I rely on the echo here in the studio for the Amazon Guard
service.
Are you familiar with this?
Oh, yeah.
They're a little security offering, right?
Yeah.
It turns each echo into like a listening station that listens for glass breaking or doors opening
or people talking or smoke detectors or CO2 alarms going off.
And if they go off, it will alert you.
But additionally, you can build routines and automations around that.
So when I arrive at the studio and I tell the echo that I'm home, it turns on a series
of lights.
It turns off all of the cameras and it stops the listening.
And when I'm leaving, I tell it that and it resumes all of those functions.
And I like that because when I'm gone or especially when I'm traveling, there can be no one at
the studio for days.
And so I like to keep an eye on how things are going.
Nice to have a, yeah, right.
And this guard is just kind of like an extra layer of nice to know supplemental security.
It's not like what I rely on, but it's just nice to have that monitoring.
When I arrived at the studio Wednesday morning and I invoked the echo to turn off the guarding
service and it waits and it waits.
And then I get this hilarious air in retrospect that says, sorry, I can't stop guarding.
And I look around and all of the, they have these, they have like this sentry flashing
light ring on them when they're monitoring the house.
And so they have like this Cylon ring that goes around and around.
And I look around and they're still doing it.
And they were doing it all day.
I couldn't get them to stop.
And the problem is some events trigger alarms.
So if you start speaking, you don't know if it's going to suddenly turn back on and start.
And occasionally I do speak in the studio, so you start speaking and it detects speaking.
So then it sets off the alarm, but then you can't, you can't tell it to stop because the,
the data center was down.
Plus you can't tell it to stop recording you.
You can't, I mean, it's a good thing this thing isn't the one opening the door lock
for you.
Right.
Right.
So it affected them for a huge portion of the day.
It, I thought within, you know, when it first happened with, Oh, I'll try again in 10 minutes.
And then when that didn't work, I thought, well, it'll be working within an hour.
And then when that didn't work, I thought, well, what am I going to do?
I had to unplug one of them.
Do we just have to accept maybe at this point that that's the level of reliability we're
okay with?
Like we all make a fuss about it.
We don't like it.
Obviously it's kind of embarrassing for Amazon when this happens, but it both doesn't happen
that often and happens with some regularity.
So we know that it happens and we're still taking the design route of designing, assuming
we will basically have an always on connection to the cloud and we're still buying the products
based on those things.
Right.
And like in my case, I don't actually seriously consider that a security system, but it's
a nice to have addition.
And because of this somewhat failure rate and the one I just experienced, I'll never
rely on it as my only security system.
It's just never, I'm never going to take it that seriously.
And I think there is that calculus when you, like even for JB as a business, if we're going
to host a service, it will occasionally those services may have outages and I have to weigh
that outage against, well, what if I was running it myself and would I be, would I be just
as reliable?
Would I have, would I struggle during updates to actually even achieve their uptime and
what, where do I land on that math?
And I think we all have to kind of make that judgment.
But you have to figure like for companies like Roomba and all the other services, Roomba
was kind of the joke example, but all the other services that were down, including some
banking infrastructure, it's a pretty significant risk.
And maybe it, maybe it will lead to a hybrid cloud future because the way the obvious solution
here is to have some redundant hosting.
Like I joked on our pre-show discussion, but if AWS was hosting their status dashboard
on say Linode, they could have at least updated.
And there is some sound reasoning to use multiple providers or to mix self-hosting with cloud
hosting.
And I think if you, if reliability and control are high priorities, you've got to make a,
you've got to make a decision there.
And I think you would think every time there's something like this happens, it would reinforce
that.
But as I said at the beginning of this, it clearly hasn't more things were affected than
ever before this time.
And maybe some services like Netflix learned their lesson, but a whole bunch of new services
and applications came online that didn't learn that lesson.
They have to figure it out all over again.
Yeah.
That's, that's a bit unfortunate because there is such a better way to design this.
I mean, the nature of the internet and TCP IP actually really, really plays to the strength
of reliability and reroutability.
But when you silo up everything like this, it just sort of negates some of those inherent
benefits of the way the internet is architected.
You're kind of giving some of those benefits up.
Well, I guess we'll just be here to report on the next time it happens.
Well, speaking of the cloud, Canonical has published a series of LTS Docker images.
They're calling it a portfolio of curated secure Ubuntu based container applications
on, well, what else, Docker Hub.
And they come with up to 10 years of extended security support from Canonical.
I guess it might be worth mentioning, not necessarily all of these are free though.
Yeah, there will be several images available from this new set that will be free, at least
during the normal sort of five year standard security maintenance period.
But there will also be images available exclusively to paying Canonical customers, but still served
through Docker Hub.
That's interesting.
It's like you get it and then license it kind of model.
And could be a good revenue source for Canonical.
There's also a bit of a nice get for them in this deal.
They essentially now own the LTS namespace on Docker Hub.
Yeah.
You know, you want to go just pull the latest developer focused Ubuntu release on Docker,
Docker run Ubuntu slash Redis, say you're running a Redis container.
Well, if you want the LTS version of that, once these are out and available, that's just
going to be LTS slash Redis.
And hey, that's a pretty prominent namespace, at least for the developer crowd.
Yeah, really.
And who isn't going to want to build off the LTS if it's that easy?
And then also a bit of a note about rate limiting, which we'd covered previously on the show.
Yeah, you know, in the start of November, Docker fully implemented the rate limiting
that they'd been talking about doing before where, you know, if you're an anonymous user,
there will now be rate limits.
These images, well, they'll all be excluded from that.
I guess Canonical is footing the bill for this one.
lino.com slash land.
Go there to get a $100 60 day credit towards your new account.
Simplify your cloud infrastructure with our hosting provider, lino.com slash land.
We're the largest independent cloud for anyone, developers, new users, or seasoned admins.
They started in 2003 as one of the first companies in cloud computing, three years before AWS.
That's right.
That's right.
Because they loved Linux and they saw where it was going.
And as they grew as a company, they began to support more and more open source initiatives
and that put them on my radar.
So a couple of years ago, I had an opportunity to try out Linode.
I started setting up my infrastructure there and I got hooked.
And now that's where we build out all of our business infrastructure and my personal infrastructure.
And with 11 data centers worldwide, you're going to find just the right spot to deploy
for you or your clients.
And you'll rest easily knowing that Linode's built in monitoring tools have you covered.
You'll get email alerts if something goes wrong.
There's dashboards that give you metrics you can check to see what's been going on with
performance.
Oh, and speaking of their dashboard, this is pretty nice.
They have a cloud firewall that's in beta and they're looking for users to test and
provide feedback on the cloud firewall.
So if you're already a Linode customer, check it out.
It's active in the Sydney and Mumbai data centers.
So perhaps you could spin up a Linode and try it.
Their cloud firewall works on an allow list with an implicit deny rule.
So when it's enabled, it blocks all the inbound traffic by default.
Only network traffic that meets the parameters of your configuration will pass through.
You could also do outbound rules if you'd like.
So go bang on a form, let it know.
Like it started by going to linode.com slash land.
Get that $100 60 day credit, $100 is going to get you really far because you'd be surprised
how much you can do with just a $5 a month Linode.
You know what I like about it?
They've got backups available if you need that because I don't know that I trust you
to always do the backups.
I don't have to.
I trust Linode.
I know.
And that is trusted as well placed because those backups have come in handy.
And unlike entry level service providers, Linode doesn't try to lock you into the backend
where you can't get access to certain things that you need to get the job done.
I have re-imaged a box from the ground up using their instructions and they let you
get in there, give you full backend access to customize and control your server to fit
your needs.
And of course they integrate with infrastructure management tools.
So if you do infrastructure by code, they've got you covered and their S3 compatible object
storage is fast and super convenient, especially when you use their command line tools to upload
and manage files.
It's really great.
That's the whole package.
So try it out at linode.com slash land.
See why that's where we build all of our infrastructure now.
Linode.com slash land and a big thanks to Linode for sponsoring Linux Action News.
There's an exciting new mail client coming to the Linux desktop.
One catch though, it's actually the Vivaldi web browser.
Well, okay, exciting is one way to put it.
Potential, I would say maybe, I did give it a go.
The Vivaldi browser has been promising a mail client since like 2015.
The founder came from Opera and was a big fan of their whole integrated mail client
and they since 2015 said it would be a robust, efficient, lightweight and good looking email
client.
Back then they were calling it M3 and it would be integrated into Vivaldi.
Well, we waited patiently and it has arrived, Mr. Payne.
Yeah, the name M3 may be a tribute to the long abandoned Opera mail client known as
M2 and this is a technical preview.
It's not a separate standalone application, but it's built right into Vivaldi itself.
Don't make the same mistake I did though, you can't just go download the regular version
of Vivaldi.
Getting it working requires downloading a specific snapshot version or higher, 2115.4
at least at the time of this article.
Get the browser, then you have to go to Vivaldi colon slash slash experiments, type that in
a little magic Vivaldi URL in the URL bar, there you have a toggle to enable the new
web client.
That last step was the bit that got me for a little bit because I went in, so when you're
reading on Vivaldi's website, they have a download link that just automatically gets
placed at the bottom of your web browser, often like cookie warnings, only there it's
download Vivaldi and I thought, well, this must be the release they're talking about.
Yes, I did the same.
No, no, that's the stable version, you want the snapshot, so I went and got that and then
I turned on the Vivaldi experiments and mail and it's also an RSS reader.
It's a feed reader too, it's not just email and it's a straight up basic IMAP pop three
client right now, but with some serious potential like filters, specific support for being on
mailing lists and managing some of the mail you get as a mailing list subscriber.
It has things that are kind of table stakes for a classic IMAP email client and it looks
all right.
The problem is, is there a bit of a situation where Google has in an effect limited the
amount of people that can log in using Vivaldi Mail to Google services and so not only does
the Vivaldi Mail client itself not support Google apps with a custom domain very well,
it just fails at auto detection on that completely, but when you plug in an at Gmail address,
you can't log in and go through the setup because Google has blocked account sign-ins
from that and the request has been pending from Vivaldi for like something like nine
months and Google just hasn't addressed it and so now you get greeted with this rather
nasty error message.
So when you get the typical Google sign on screen, but then after you give it your password,
after you do your two factor, you go through the whole rigamarole, you get an error message
screen that says, sign in with Google is temporarily disabled for this app.
This app has not been verified yet by Google in order to use Google sign-in.
Thanks.
I mean, that's just got to hurt any potential adoption.
I mean, I have other accounts than Gmail accounts, but I also have some Gmail accounts I need
to check.
Yeah.
I mean, Gmail is just a monster these days.
If you're on Fastmail or another IMAP provider, it's going to work great.
It's going to be no problem and you will get a really table stakes email client.
There's just no way in, there's no reason for someone like me to switch right now.
My daily email drivers are Geary, Thunderbird and web Gmail and it just doesn't beat those
and Thunderbird as of release 78 no longer requires an extension to do GPG encryption
and that's a massive feature for me.
So Thunderbird is looking more attractive than ever and it's beyond just a table stakes.
It's advanced.
Oh yeah.
I mean, yeah, certainly.
And then for just easy, super simple, quick and manages a giant inbox, Geary continues
to be a real champ for me.
And the wonderful thing about Geary is when you configure your Google account in GNOME
online accounts, it automatically sets Geary up.
Just picks that up, right?
So you just launched Geary and it's already configured and it's already downloading your
email.
You've never had to do a thing.
It's so beautiful, Wes.
It's so beautiful.
I don't think we're supposed to have things like that on the Linux desktop.
So then you go over to Vivaldi Mail to no fault of their own, but because of the way
the Google fortress works, you get like the exact opposite experience where you go through
all the rigmarole and then it completely fails and then the developers, because they have
no choice, they're like shrug, nothing we can do, hope it changes.
But if you use regular IMAP, you're good, which is kind of a rough thing when you're
launching your technical preview.
But at the same time, what are they supposed to do?
Sit around.
It works.
The technical part works.
Yeah.
And until they ship, it probably won't put enough pressure on Google to fix it.
But I did use the browser again for a bit.
And if you haven't given the Vivaldi browser a go on Linux and you've been using the web
for a few years, it's pretty fun.
It is a power user's web browser.
From everything from mouse gesture support to a bunch of really fun, nitty, gritty kind
of support for things that people that have been on the web forever would love.
But then additionally, it has nice features like notes and all of that.
It feels like a lot to me.
It is a complicated, packed application, but it still often remains snappy and quick.
So it's a pleasant browsing experience.
Also it's nice to see that they've got Linux support for both ARM32 and ARM64.
So hey, run it over there too.
Well actually, I think it's worth just underscoring is one of the things that has impressed me
about Vivaldi is they have been really dedicated to supporting Linux and targeting advanced
features in Linux and supporting GPU acceleration.
They have released this snapshot for multiple Linux distros with multiple build ARM32 64
bit.
It is first class Linux support.
And there really is space for a good mail client.
And if the technical preview is looking this solid, if you can already say it's a table
stakes email client, a technical preview, then what's version two going to look like?
And what about version three?
And it's going to get more and more compelling, no doubt about it.
And if it's a passion of the founder, then it's likely going to get a lot of investment
as a project.
And so within a year or two, we may have an extremely competent mail client on Linux
through the Vivaldi browser.
And it harkens me back to like the Netscape communicator era where everything was bundled
like that.
Right.
This is just your portal to the wider internet.
Do you remember that?
I mean, that's how it started.
That's how it was for a long period of time as network or I'm sorry, Netscape communicator
came with a feed reader.
It came with an email client and it came with a web browser.
And that was the communicator suite.
And for a while, Internet Explorer was linked very closely to Outlook Express.
They were kind of a pair.
And then as the web browser matured, we kind of lost that model.
And maybe some of the anti-compete stuff around Internet Explorer maybe pushed that too.
And now here we are looking into 2021 and 2022 thinking maybe one of the best ways to
deliver a brand new email client to Linux is through a web browser.
Well just skip the step where you package it as a separate electron application and
build it right in.
I mean, it clearly is using a lot of the same features and technologies web browser.
And the feed reader is not a table stakes feed reader.
It is a very basic, minimal feed reader that's obviously using a lot of the same inbox tech.
And it's not even really adequate.
But if you have very minimal feed needs, only one or two or three RSS feeds and you only
want to use one application to do it all, it would do that job.
That breaking change coming to SystemD that we warned you about two episodes ago, well,
it's been released with SystemD 247.
This is really only going to impact you if you have custom Udev rules.
Your distribution of choice is likely going to fix this before it ever lands on your box.
But if you have made some customized changes to Udev, you may want to look into that.
But with the bad in 247, there's also quite a bit of good.
We'll link to the release notes in our show notes because there's a ton in there.
But a couple that jumped out at us we thought would be worth talking about.
And one of them is SystemD OOMD.
This is a new service that's added for monitoring resource allocation.
And OOMD, which stands for out of memory daemon, that will kill processes when memory and swap
pressure is above defined limits where your machine starts to really feel like trash.
Now it is an experimental feature right now, so don't worry.
It's not going to just start killing processes on your box.
It's not enabled unless you're in developer mode, and it's going to be quite a bit before
everything's refined.
But we have seen some distributions play with these, and now we see something happening
at the SystemD level, which we expected.
But it's nice to see it arriving, and it seems like a lot of thought was put into it.
It's neat, too, because it's using the PSI or pressure stall information, which is like
a new heuristic metric that Facebook got added to the kernel to try to figure out these out-of-memory
situations.
And look at all the fruit that that's been born, right?
Yeah, it's also made me start watching my machine memory more, just as we've talked
about these stories.
I've been kind of curious, how much memory do I actually use?
But there's a couple other nice things landing, too.
Yeah, this is pretty small, but I thought it was a nice sort of set the mood for some
of the work going on here, which is that SystemD has done some work to limit the runtime dependencies
and how you can bring those in.
So some stuff for working with QR codes or for setting up encrypted disks, those have
all been changed to rely on DLOpen.
And so if that's installed on the system, at runtime, SystemD will try to open that
dependency, load the code, and use that library.
But if not, it just fails gracefully.
And really, this is supposed to be useful for general purpose distributions so that
you can pull in fewer dependencies.
Like if you're never going to use those features, before this, you still had to bring those
in even at runtime, not just for building it.
After this, well, if you're not going to use them, you don't ever have to install them.
Are we starting to see a bit of modularizing coming to SystemD, where everybody kind of...
I think the top complaint for SystemD is this giant monolith that you put on my box that's
responsible for all these things, but this almost sounds like they're trying to break
it up a little bit and modularize it.
Is that the goal?
Well, I think at least just maybe refining some of those boundaries, right?
That you can determine a set of things that you really need for essential behavior and
features and some things that are nice to have, maybe essential for some activities,
but don't necessarily need to be loaded by the core.
And this is refining those boundaries.
Linux.ting.com.
There has never been a better time to try Ting Mobile.
Everything has just gotten better about Ting.
It's the next generation of Ting Mobile.
So if you've been on the fence, if you've been thinking it's time to upgrade your mobile
game, we'll try them out.
You will be impressed.
Get talk and text for just $10 a month and then data plans starting at $15 and unlimited
from $45 a month.
So if you're two gigs or you need 20 gigs or whatever it is, there's now a perfect Ting
plan for you and your family.
And no need to worry.
The only thing that's changed is a lower monthly phone bill.
You still get access to Ting's award-winning customer service with nationwide LTE and 5G
coverage, plus no contracts ever.
And you guys know that I love that.
And Ting Mobile customers can now choose from three different plans based on their data
needs.
And it's so simple to switch to Ting.
It's such an easy process.
And then you start saving right away.
And pretty much any phone is going to work on Ting now.
You just go to linux.ting.com.
You check your current phone.
You create an account.
You pick a plan that's right for you.
And when you go to linux.ting.com, you're going to get $25 to work with.
And if everything works out and your current phone works, Ting will just send you a SIM
card.
You can go in in minutes, or you can look at some brand new phones, some really good
deals on phones from Ting directly, too.
Cutting your phone bill in half has never been easier with Ting Mobile.
They got brand new plans, and they really rock.
It's the next generation of Ting Mobile.
It's here, and you should go see how much you can save and get $25 off by going to linux.ting.com.
There has never been a better time to be a Ting customer or try out Ting.
Thanks to Ting for sponsoring Linux Action News.
And thanks to everybody who visits linux.ting.com.
Just a quick note that Paragon, the authors of the original closed source NTFS Fuse driver,
have been working on an open source read write driver for the Linux kernel.
That's now in its 13th iteration as a patch set, and hopes are looking up that it might
actually get merged.
What I like about this story is it is a great demonstration of how a company can start to
work to try to gain the trust of the kernel team and eventually reach inclusion in the
Linux kernel.
We don't know if that's going to happen yet, but the chances are looking pretty good because
they've really been working on this thing, and they've also committed to long term support
of the code base and feature improvements.
And they already have a roadmap of features they want, which means we are going to potentially
have a future where we have excellent read write NTFS support on Linux to the point where
you could have slash bin and program files on the same disk.
The same partition.
Wow.
All right.
NTFS on route.
Here we come.
While we are talking about Microsoft, it appears they are working on a software solution that
would allow Android app developers to package up whole cloth their Android app, ship it
on the Windows Store, and then allow Windows 10 desktop users to run it.
This is ringing awful familiar, Wes.
The new initiative is called Project Latte, and it appears to be in the works right now.
And I think it's utilizing some interesting WSL technology.
Yeah, it's kind of fascinating because while Project Latte uses some tech invented for
the second generation of the Windows subsystem for Linux, the Windows subsystem for Linux
itself actually got its start in an unreleased project known as Project Astoria, which was
aiming to bring Android applications to run on Windows 10 mobile way back in the day.
So it's come full circle.
It really has.
That's funny.
But of course, the biggest obstacle here with running Android apps would be the graphical
elements and getting those into the Windows environment.
But in WSL 2, Microsoft begun working on a project that's named WSL G.
Right.
Are you following me so far?
WSL?
Yeah, got it.
It's a lot of WSL, but it stands for WSL Graphics Architecture, and it utilizes a built-in
Wayland display server to run Linux GUI apps.
I have a bit of audio here from one of the developers of Microsoft, Steve Provenost,
and he discusses a little bit of how it works.
In a nutshell, what we're doing is we're taking Westin, we're taking this RDP backend, and
we're extending it to teach it how to basically do remote application.
So instead of remoting the desktop, we remote individual window, and then we can take those
window and integrate them with the rest of the Windows desktop.
And some of the architectural changes they made to WSL in WSL 2 allow for this thing
that they call a system distribution.
And we're introducing this concept of the system distro, which is essentially a distro
that we package together that has all the components we need.
So it has Westin and X-Wayland and Pulse Audio, and it has all the dependencies that it needs,
but it runs kind of isolated from the user distro.
And we just project like the virus socket and environment variable, et cetera, the user
distro needs in order to connect to it.
It's sort of like a container, except that we don't actually use a kind of container
like a Docker container or something like this.
We're really running in like an isolated, like mountain bit space.
And this is the tech that allows you to run all kinds of different distros right next
to each other at the same time on the same box.
And you could see how they could extend this to pretty easily run Android if they just
get a supported kernel in there and build the right distro environment.
Very clever.
And this seems to be like another notch in Microsoft's unwillingness to allow Chromebooks
to cede any ground.
You know, if Chromebooks can run Linux apps and run Android apps, then by God, Windows
10 will too.
And it just seems to be this cat and mouse game.
Yeah.
I mean, long gone are the days where you were focused solely on native Windows apps.
Now it's like, okay, we'll take anything.
Just run it on Windows.
Well, you know, we've always seen this just be a smashing success.
These mobile apps on desktop.
So I'm sure it'll be great.
Well, the question is, Chris, would you rather have a virtualized Android app or an Electron
app?
Hmm.
That is a that is a question for the ages, Mr. Payne.
That's what that is.
That's a that's a rock and a hard place right there.
That brings us to the end of today's episode.
Check out LinuxActionNews.com slash subscribe for all the ways to get new episodes.
And LinuxActionNews.com slash contact for all the ways to get in touch.
And if you haven't yet upgraded the ultimate J.B. experience and get the all shows feed.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us.
We'll see you next week.
