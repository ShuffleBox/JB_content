1
00:00:00,000 --> 00:00:08,840
Hello, and welcome to Linux Action News, episode 186, recorded on April 25, 2021.

2
00:00:08,840 --> 00:00:09,840
I'm Chris.

3
00:00:09,840 --> 00:00:10,840
And I'm Wes.

4
00:00:10,840 --> 00:00:11,840
Hello, Wes.

5
00:00:11,840 --> 00:00:12,840
Let's do the news.

6
00:00:12,840 --> 00:00:17,160
In our top story this week, the University of Minnesota has been banned from contributing

7
00:00:17,160 --> 00:00:18,980
to the Linux kernel.

8
00:00:18,980 --> 00:00:23,640
Over the past year, the university appears to have been conducting research on the kernel

9
00:00:23,640 --> 00:00:28,400
and is weeks away from publishing a paper based on that research, titled

10
00:00:28,400 --> 00:00:34,040
Stealthily Introducing Vulnerabilities in Open Source Software via Hypocrite Commits

11
00:00:34,040 --> 00:00:39,660
Conducted in August of 2020, the research aimed to find what the researchers call immature

12
00:00:39,660 --> 00:00:44,400
vulnerabilities, which are sections of code that could be slightly tweaked to introduce

13
00:00:44,400 --> 00:00:48,680
a serious bug, like a use-after-free-memory issue.

14
00:00:48,680 --> 00:00:54,520
The researchers then sent in those so-called hypocrite commits, which are small, stealthy

15
00:00:54,520 --> 00:01:00,760
patches that attempt to fix a minor but real issue, while in fact upgrading an immature

16
00:01:00,760 --> 00:01:04,280
vulnerability into a real vulnerability.

17
00:01:04,280 --> 00:01:09,520
Fast forward from last year to early April 2021, when a new patch was submitted by a

18
00:01:09,520 --> 00:01:16,320
PhD candidate at the University of Minnesota, it was a new, small, innocent-seeming patch.

19
00:01:16,320 --> 00:01:22,180
Events developed further on the 19th when veteran kernel contributor Al Vero rebuked

20
00:01:22,180 --> 00:01:27,460
that candidate for submitting a fix that does not fix anything.

21
00:01:27,460 --> 00:01:33,640
In the email thread, he suggested this contribution pointed to two possibilities, writing

22
00:01:33,640 --> 00:01:38,480
Plainly put, the patch demonstrates either a complete lack of understanding or somebody

23
00:01:38,480 --> 00:01:40,780
not acting in good faith.

24
00:01:40,780 --> 00:01:46,560
If it's the latter, may I suggest the esteemed sociologists to f**k off and stop testing

25
00:01:46,560 --> 00:01:49,920
the reviewers with deliberately spewed excrements.

26
00:01:49,920 --> 00:01:56,160
Al Vero suspected that the useless patch from the student was likely to be part of that

27
00:01:56,160 --> 00:01:58,560
hypocrite commit research.

28
00:01:58,560 --> 00:02:03,680
Greg K.H. seemed to agree and advise them not to waste the kernel maintainer's time

29
00:02:03,680 --> 00:02:06,520
with such patches, writing

30
00:02:06,520 --> 00:02:09,540
Please stop submitting known invalid patches.

31
00:02:09,540 --> 00:02:14,200
Your professor is playing around with the review process in order to achieve a paper

32
00:02:14,200 --> 00:02:16,740
in some strange and bizarre way.

33
00:02:16,740 --> 00:02:18,320
This is not okay.

34
00:02:18,320 --> 00:02:24,520
It's wasting our time and we will have to report this again to your university.

35
00:02:24,520 --> 00:02:30,080
Seemingly unaware of the larger context around the previously conducted research, the initial

36
00:02:30,080 --> 00:02:37,200
reaction from the university was defensive, claiming the kernel team was hostile to newbies.

37
00:02:37,200 --> 00:02:41,400
That seems to have been something of a last straw for Greg, who stated he

38
00:02:41,400 --> 00:02:47,160
will now have to ban all future contributions from your university and rip out your previous

39
00:02:47,160 --> 00:02:53,800
contributions as they were obviously submitted in bad faith with the intent to cause problems.

40
00:02:53,800 --> 00:02:59,400
After various back and forth exchanges, on April 24th, the research team released an

41
00:02:59,400 --> 00:03:03,100
open letter to the Linux community, writing

42
00:03:03,100 --> 00:03:08,480
We sincerely apologize for any harm our research group did to the Linux kernel community.

43
00:03:08,480 --> 00:03:13,420
Our goal was to identify the issues with the patching process and ways to address them.

44
00:03:13,420 --> 00:03:18,320
And we are very sorry that the method used in the hypocrite commits paper was inappropriate.

45
00:03:18,320 --> 00:03:22,160
As many observers have pointed out to us, we made a mistake by not finding a way to

46
00:03:22,160 --> 00:03:27,320
consult with the community and obtain permission before running this study.

47
00:03:27,320 --> 00:03:31,640
We did that because we knew we could not ask the maintainers of Linux for permission or

48
00:03:31,640 --> 00:03:35,040
they would be on the lookout for the hypocrite patches.

49
00:03:35,040 --> 00:03:39,520
There also seems to be something of a small mob coming in for Greg.

50
00:03:39,520 --> 00:03:43,960
There was much internal discussion on how best to handle the university's patches, both

51
00:03:43,960 --> 00:03:46,080
past and future.

52
00:03:46,080 --> 00:03:50,920
In particular, though, Brad Spangler seems to be calling for Greg KH to be removed from

53
00:03:50,920 --> 00:03:54,040
the kernel's code of conduct committee.

54
00:03:54,040 --> 00:03:58,840
It's probably worth pointing out that in my opinion, Brad's maybe not a good faith actor

55
00:03:58,840 --> 00:04:00,680
in this.

56
00:04:00,680 --> 00:04:02,380
He runs GR Security.

57
00:04:02,380 --> 00:04:03,420
You can look them up.

58
00:04:03,420 --> 00:04:04,680
You may recognize the name.

59
00:04:04,680 --> 00:04:07,960
They're known for constantly butting heads with the Linux kernel developers.

60
00:04:07,960 --> 00:04:09,680
I think there's bad blood there.

61
00:04:09,680 --> 00:04:11,640
Yeah, I think you're right about that.

62
00:04:11,640 --> 00:04:13,960
Where do things stand now, though?

63
00:04:13,960 --> 00:04:19,760
Well, we're waiting for several things, including updates from the university's review of the

64
00:04:19,760 --> 00:04:26,400
approval process and specifics on the hypocrite commits that were accepted.

65
00:04:26,400 --> 00:04:29,240
Those details are being withheld right now.

66
00:04:29,240 --> 00:04:34,800
The researchers claiming it would reveal identities of those involved, but it's made it hard

67
00:04:34,800 --> 00:04:37,720
to have all the details we need to really analyze what happened here.

68
00:04:37,720 --> 00:04:41,080
Yeah, they don't want to necessarily dock somebody further.

69
00:04:41,080 --> 00:04:44,700
But the other things we're waiting for, I would point out, is the university was sent

70
00:04:44,700 --> 00:04:50,880
a letter from the Linux Foundation on Friday, April 23rd, which outlines how they can regain

71
00:04:50,880 --> 00:04:54,200
the trust essentially of the Linux kernel community.

72
00:04:54,200 --> 00:04:57,000
And that's just kind of the answer right now from the team.

73
00:04:57,000 --> 00:04:59,680
Respond to the letter and then we'll proceed.

74
00:04:59,680 --> 00:05:01,680
So that's the facts.

75
00:05:01,680 --> 00:05:04,360
Now for our analysis.

76
00:05:04,360 --> 00:05:11,760
This started out to me anyway as a technical issue, but really it's become a human issue.

77
00:05:11,760 --> 00:05:14,460
The kernel community's trust was violated.

78
00:05:14,460 --> 00:05:18,800
They feel burned, time was wasted, and if things had gone differently, they might have

79
00:05:18,800 --> 00:05:21,080
also just been embarrassed by this research.

80
00:05:21,080 --> 00:05:24,760
They weren't given an opportunity to have a voice to change how it might have gone or

81
00:05:24,760 --> 00:05:26,400
ask them not to do it in the first place.

82
00:05:26,400 --> 00:05:27,960
Yeah, that's a good point.

83
00:05:27,960 --> 00:05:32,040
And this would have been revealed, this big paper, soon at the IEEE Symposium on Security

84
00:05:32,040 --> 00:05:35,040
and Privacy, which starts May 23rd.

85
00:05:35,040 --> 00:05:38,000
So it would have been unveiled in front of a large audience.

86
00:05:38,000 --> 00:05:42,320
It may have been a bit of a bombshell had this whole thing not happened.

87
00:05:42,320 --> 00:05:46,720
If not for this kerfuffle we're now talking about, this paper kind of just would have

88
00:05:46,720 --> 00:05:48,280
been a news item in itself.

89
00:05:48,280 --> 00:05:49,800
It probably would have been on this show.

90
00:05:49,800 --> 00:05:53,820
But now, well now the paper's kind of going to be a flop, isn't it?

91
00:05:53,820 --> 00:05:57,520
It's going to be covered in kerfuffle stink.

92
00:05:57,520 --> 00:06:00,880
And partly that may well be deserved.

93
00:06:00,880 --> 00:06:06,320
But I have to ask, what about the questions the research was trying to address?

94
00:06:06,320 --> 00:06:10,360
How vulnerable is the kernel to patches from malicious actors?

95
00:06:10,360 --> 00:06:13,660
That's probably something we should ask, even if we don't think this line of research was

96
00:06:13,660 --> 00:06:15,640
a good way to go about answering it.

97
00:06:15,640 --> 00:06:19,380
Yeah, even if it's something that's further up the user stack, maybe it doesn't have quite

98
00:06:19,380 --> 00:06:20,800
the resources.

99
00:06:20,800 --> 00:06:24,920
I think that's kind of the downside to how the research team handled this is now the

100
00:06:24,920 --> 00:06:30,600
reaction to it and the correction to it has prevented what is probably a pretty valuable

101
00:06:30,600 --> 00:06:32,520
conversation.

102
00:06:32,520 --> 00:06:38,620
And while we don't know everything right now and putting aside how the research was conducted,

103
00:06:38,620 --> 00:06:44,540
it seems like reading through all of this that there was code that got accepted in 2020

104
00:06:44,540 --> 00:06:46,700
and was not caught by the maintainer.

105
00:06:46,700 --> 00:06:49,880
It might validate that this attack vector really is possible.

106
00:06:49,880 --> 00:06:51,840
I'm sure we've known about this, right?

107
00:06:51,840 --> 00:06:55,400
We know nation state actors have targeted the kernel before, but what we don't have

108
00:06:55,400 --> 00:06:58,700
a great picture of is how well has that worked?

109
00:06:58,700 --> 00:07:04,120
Now these were all pretty small, seemingly trivial patches, but I'd like to know more.

110
00:07:04,120 --> 00:07:08,920
Yeah, and I think the researchers had them rolled back, they emailed in, oh no, we caught

111
00:07:08,920 --> 00:07:12,520
something, we need to fix this, before it was actually committed to the actual kernel

112
00:07:12,520 --> 00:07:13,520
tree.

113
00:07:13,520 --> 00:07:17,200
It didn't seem like there was any, at least of these three, nothing made it to a distribution

114
00:07:17,200 --> 00:07:18,540
or anything.

115
00:07:18,540 --> 00:07:21,200
And they self-corrected before it went too far.

116
00:07:21,200 --> 00:07:25,800
I would agree that it seems like if you take their paper at good faith here, that was always

117
00:07:25,800 --> 00:07:26,800
their intent.

118
00:07:26,800 --> 00:07:29,400
They didn't ever want to actually add new vulnerabilities to the kernel, they were just

119
00:07:29,400 --> 00:07:33,220
trying to see if they could get maintainers to say, looks good.

120
00:07:33,220 --> 00:07:35,720
In some senses, it's like, oh yeah, obviously.

121
00:07:35,720 --> 00:07:41,520
If you pretend to be a good actor for a while and then you sneak in some code, a busy maintainer

122
00:07:41,520 --> 00:07:43,280
is going to let that in.

123
00:07:43,280 --> 00:07:46,520
That's not a big surprise, breaking news, ha ha.

124
00:07:46,520 --> 00:07:50,880
But at the same time, it does kind of raise the question, could we build better tooling?

125
00:07:50,880 --> 00:07:54,180
Is there something we could do that's maybe automated that would be checking for these

126
00:07:54,180 --> 00:07:55,860
kinds of things?

127
00:07:55,860 --> 00:08:01,120
And I think the real crime, the unspoken crime here that we haven't said out loud is they

128
00:08:01,120 --> 00:08:02,920
burned kernel developer time.

129
00:08:02,920 --> 00:08:06,360
They took, they used, they stole kernel developer time.

130
00:08:06,360 --> 00:08:10,580
And those maintainers and the developers of the kernel are so busy that that should be

131
00:08:10,580 --> 00:08:12,200
a crime against humanity.

132
00:08:12,200 --> 00:08:16,560
And that's the unspoken part that we haven't said out loud yet, is that's really what happened

133
00:08:16,560 --> 00:08:17,560
here.

134
00:08:17,560 --> 00:08:21,480
And that's the crime they've committed essentially, because nothing ever made it into production.

135
00:08:21,480 --> 00:08:27,560
Well on a happier note, while Greg was off dealing with that kerfuffle, Linus was hard

136
00:08:27,560 --> 00:08:30,640
at work on a shiny new kernel.

137
00:08:30,640 --> 00:08:36,320
That's right, after a week delay, the Linux 5.12 kernel has been released.

138
00:08:36,320 --> 00:08:41,680
Linus Torvalds wrote in a brief announcement, thanks to everybody who made last week, very

139
00:08:41,680 --> 00:08:48,200
calm indeed, which just makes me feel much happier about the final 5.12 release.

140
00:08:48,200 --> 00:08:55,440
Linux 5.12 brings Intel variable rate refresh, Radeon RX 6000 series overclocking support,

141
00:08:55,440 --> 00:09:02,800
and of course, mainline support for the Nintendo 64.

142
00:09:02,800 --> 00:09:04,280
Linode.com slash LAN.

143
00:09:04,280 --> 00:09:09,680
Go there to receive a $100 60-day credit towards your new account, and of course, you go there

144
00:09:09,680 --> 00:09:11,140
to support the show.

145
00:09:11,140 --> 00:09:13,920
Linode is the largest independent cloud computing provider.

146
00:09:13,920 --> 00:09:17,200
But really, Linode is where you go if you just want to spin something up on the web

147
00:09:17,200 --> 00:09:19,400
for yourself, for your company.

148
00:09:19,400 --> 00:09:24,320
Maybe it's a portfolio, maybe it's the backend infrastructure for your company's website.

149
00:09:24,320 --> 00:09:29,120
I've been using them for just over about two and a half years, and they're the only company

150
00:09:29,120 --> 00:09:31,680
I recommend for people that want to host something online.

151
00:09:31,680 --> 00:09:36,320
No matter what skill level you're at, or what technology stack you use, Linode can help

152
00:09:36,320 --> 00:09:38,560
your ideas come to life on the web.

153
00:09:38,560 --> 00:09:41,080
If you run into any trouble, well I've got good news.

154
00:09:41,080 --> 00:09:46,320
They have the absolute best customer service, 24-7 by phone or ticket, they're going to

155
00:09:46,320 --> 00:09:50,280
help you, along with hundreds of guides and tutorials to make sure you have the confidence

156
00:09:50,280 --> 00:09:52,280
to put something into production.

157
00:09:52,280 --> 00:09:55,900
And Linode is easy to use, while still being powerful.

158
00:09:55,900 --> 00:10:01,440
They got started in 2003, and they have focused on one thing and one thing only, and made

159
00:10:01,440 --> 00:10:03,120
it fantastic.

160
00:10:03,120 --> 00:10:09,180
They've added features where it makes sense, like S3-compatible object storage, cloud firewalls,

161
00:10:09,180 --> 00:10:13,200
and a great selection of simple one-click application deployments.

162
00:10:13,200 --> 00:10:19,920
And all of it is backed by super fast networking, 11 data centers, crazy quick SSDs, AMD epic

163
00:10:19,920 --> 00:10:24,980
CPUs for their dedicated CPU rigs, and of course, they have dedicated GPU machines and

164
00:10:24,980 --> 00:10:27,480
systems that are just $5 a month.

165
00:10:27,480 --> 00:10:29,480
That's why you got to go check it out for yourself.

166
00:10:29,480 --> 00:10:33,640
There's so many good things you can do with Linode, so many different things you can try,

167
00:10:33,640 --> 00:10:36,320
or can also just be a great platform to learn.

168
00:10:36,320 --> 00:10:40,920
Go see why Jupiter Broadcasting has chosen to host everything we've built for JB 3.0

169
00:10:40,920 --> 00:10:41,960
at Linode.

170
00:10:41,960 --> 00:10:44,200
It's not even a question of where we're going to host it.

171
00:10:44,200 --> 00:10:49,260
We know, before the conversation even gets started, we're going to host it at Linode.

172
00:10:49,260 --> 00:10:54,720
So go to linode.com slash LAN, get that $100 60-day credit on your new account, and of

173
00:10:54,720 --> 00:10:58,000
course, you support the show.

174
00:10:58,000 --> 00:11:00,680
Linode.com slash LAN.

175
00:11:00,680 --> 00:11:05,960
Right on schedule, Canonical released Ubuntu 21.04 this week.

176
00:11:05,960 --> 00:11:12,980
It comes with GNOME 3.38.5 and is powered by the Linux 5.11 kernel.

177
00:11:12,980 --> 00:11:19,120
It has some notable new defaults, including Wayland and private home directories, as well

178
00:11:19,120 --> 00:11:24,720
as improved Active Directory integration and a new power mode selector in GNOME settings.

179
00:11:24,720 --> 00:11:28,280
Yeah, the new power mode selector, it looks pretty good.

180
00:11:28,280 --> 00:11:33,480
One of the great aspects, though, of a new Ubuntu release is there's a lot of flavors

181
00:11:33,480 --> 00:11:34,740
that release as well.

182
00:11:34,740 --> 00:11:37,920
So that's a lot to cover, but we want to give you a high level.

183
00:11:37,920 --> 00:11:42,320
The new Ubuntu 21.04 features XFCE 4.16.

184
00:11:42,320 --> 00:11:47,700
Ubuntu Budgie now comes with Budgie Desktop 10.5.2, Kubuntu comes with that delicious

185
00:11:47,700 --> 00:11:54,440
Plasma 5.21, and Lubuntu has LXQt 0.16.0.

186
00:11:54,440 --> 00:12:00,440
The mainline Ubuntu and all of the flavors will be supported until February 2022.

187
00:12:00,440 --> 00:12:04,600
If you'd like our take on this new release, we gave it a spin over in Linux Unplugged.

188
00:12:04,600 --> 00:12:06,760
Episode 402.

189
00:12:06,760 --> 00:12:12,200
Also this week, Canonical shared new details on their recently reformed community team.

190
00:12:12,200 --> 00:12:16,940
In a blog post, they wrote, over the past month or so, the beginnings of a new community

191
00:12:16,940 --> 00:12:22,960
team has been taking shape inside Canonical with the specific purpose of serving the community.

192
00:12:22,960 --> 00:12:27,640
On Friday, the team held a live stream to answer questions and featured a member of

193
00:12:27,640 --> 00:12:31,000
the Yaru theme team as a special guest.

194
00:12:31,000 --> 00:12:34,600
This was hopefully the first of regular streams.

195
00:12:34,600 --> 00:12:40,840
If so, you can watch future events live on YouTube via the Ubuntu On-Air YouTube channel

196
00:12:40,840 --> 00:12:44,400
and ask the team questions via Ubuntu discourse.

197
00:12:44,400 --> 00:12:45,840
But all in all, it's a really good release.

198
00:12:45,840 --> 00:12:46,840
Seems super solid.

199
00:12:46,840 --> 00:12:50,960
GNOME 3.3.8 has gotten some nice refinements in this version.

200
00:12:50,960 --> 00:12:54,120
And isn't it nice to see them back on Wayland?

201
00:12:54,120 --> 00:12:58,400
I think we remember when they tried Wayland before and it didn't work out and now Canonical

202
00:12:58,400 --> 00:13:02,760
is doing it in a way where they have time before the next LTS to work out the kinks.

203
00:13:02,760 --> 00:13:04,160
I guess they've learned something.

204
00:13:04,160 --> 00:13:05,160
I hope.

205
00:13:05,160 --> 00:13:07,160
And I hope it works out for them.

206
00:13:07,160 --> 00:13:13,360
But speaking of Wayland, Fedora 34 is just hours away from release as we record.

207
00:13:13,360 --> 00:13:17,040
And there was a prior blocking bug before, but they fixed it.

208
00:13:17,040 --> 00:13:18,040
They got it addressed.

209
00:13:18,040 --> 00:13:22,480
And so in Friday's Go-No-Go meeting, they determined, yes, 34 is fit for release.

210
00:13:22,480 --> 00:13:26,800
Among the changes in 34, of course, is the use of pipeline for all audio needs rather

211
00:13:26,800 --> 00:13:27,800
than pulse audio.

212
00:13:27,800 --> 00:13:31,640
But RFS transparent compression is now enabled by default.

213
00:13:31,640 --> 00:13:35,520
SystemD OOMD is now handling those tight memory situations.

214
00:13:35,520 --> 00:13:40,440
And the plasma spin is on Wayland by default, expanding Fedora's Wayland by default on the

215
00:13:40,440 --> 00:13:42,640
top tier desktop spins.

216
00:13:42,640 --> 00:13:50,800
Fedora 34 is also introducing an ARCH64 based Fedora KDE Plasma desktop spin.

217
00:13:50,800 --> 00:13:54,480
And while that's a mouthful, something tells me you're pretty excited about it, Chris.

218
00:13:54,480 --> 00:13:56,720
I'm thinking that's going on my Pi 400.

219
00:13:56,720 --> 00:14:02,720
We'll have a complete review of the new release in Tuesday's Linux Unplugged, episode 403.

220
00:14:02,720 --> 00:14:08,240
And just a quick note for you Red Hat fans out there, Red Hat Summit 2021 is taking place

221
00:14:08,240 --> 00:14:11,280
this week, April 27th and 28th.

222
00:14:11,280 --> 00:14:17,560
Well, believe it or not, also speaking of Wayland, Microsoft has shipped a preview version

223
00:14:17,560 --> 00:14:21,420
of WSL with graphical Linux application support.

224
00:14:21,420 --> 00:14:26,240
It's called WSLG for short, which is available in the latest Windows 10 Insider builds and

225
00:14:26,240 --> 00:14:32,480
features an OpenGL accelerated rendering pipeline using a custom RDP virtual channel between

226
00:14:32,480 --> 00:14:37,560
the Western RDP server and the client running on the Windows host.

227
00:14:37,560 --> 00:14:43,480
And yet in this process, Microsoft has been upstreaming patches to free RDP.

228
00:14:43,480 --> 00:14:45,480
That's not all though.

229
00:14:45,480 --> 00:14:50,820
Also under the hood is a mini Linux distro, which Microsoft is spinning up behind the

230
00:14:50,820 --> 00:14:57,320
scenes whenever a user launches a new Linux GUI app called CBL Mariner, which stands for

231
00:14:57,320 --> 00:14:59,320
Common Base Linux.

232
00:14:59,320 --> 00:15:05,760
It's also the distro Microsoft uses for containers in Azure's Kubernetes service.

233
00:15:05,760 --> 00:15:11,440
Inside that distro is all the goodies you might need for a modern audio visual enabled

234
00:15:11,440 --> 00:15:15,800
Linux desktop application from PulseAudio to Wayland.

235
00:15:15,800 --> 00:15:21,780
And rather impressively, the open source WSL DVC plugin, which retrieves a list of Linux

236
00:15:21,780 --> 00:15:26,480
GUI applications and creates links for them in the Windows start menu.

237
00:15:26,480 --> 00:15:31,080
I don't know why Wes, but that was the part that surprised me the most because we knew

238
00:15:31,080 --> 00:15:32,680
this graphical support was coming.

239
00:15:32,680 --> 00:15:38,140
We had seen some of their early talks on it, but when I actually sat down on a Windows

240
00:15:38,140 --> 00:15:43,320
box with this enabled and saw that there was like Audacity listed in the start menu that

241
00:15:43,320 --> 00:15:47,600
was actually the Linux version, I guess it was just a level of integration beyond what

242
00:15:47,600 --> 00:15:48,600
I expected.

243
00:15:48,600 --> 00:15:49,600
Same here.

244
00:15:49,600 --> 00:15:52,600
It really is impressive and it seems to be one of the goals they're striving through

245
00:15:52,600 --> 00:15:57,080
throughout this whole WSL project is how do we make this as seamless as possible from

246
00:15:57,080 --> 00:16:01,160
better file sharing across both services to now, yeah, we don't want to run applications

247
00:16:01,160 --> 00:16:04,080
as if they're installed in Windows.

248
00:16:04,080 --> 00:16:08,900
Also nice to see that they're adding a new set of command line tools to make it easier

249
00:16:08,900 --> 00:16:10,120
to manage WSL.

250
00:16:10,120 --> 00:16:11,560
I thought that was pretty nice.

251
00:16:11,560 --> 00:16:15,000
I don't know if it's complete, though, because it seems like not everything was installed

252
00:16:15,000 --> 00:16:19,000
properly when I used the command line tools, but I like where they're going because it's

253
00:16:19,000 --> 00:16:23,520
going to make like just WSL dash dash install and you got a base system up and going.

254
00:16:23,520 --> 00:16:28,900
You will need to be in the Windows Insider program to have access, but it is a big usability

255
00:16:28,900 --> 00:16:33,720
improvement from the rather large set of obscure Windows command lines you otherwise have to

256
00:16:33,720 --> 00:16:37,840
use to enabling features with disom, things like that to get it to work, which is not

257
00:16:37,840 --> 00:16:39,920
as friendly for your Linux users out there.

258
00:16:39,920 --> 00:16:43,960
This always stokes the debate of is this going to make people less inclined to use the Linux

259
00:16:43,960 --> 00:16:50,240
desktop now that you can you can have WSLG on Windows, you can have three or four different

260
00:16:50,240 --> 00:16:57,360
distros in terminal Windows and you can install Linux applications, your favorite Linux applications,

261
00:16:57,360 --> 00:16:59,520
and run them with OpenGL acceleration.

262
00:16:59,520 --> 00:17:05,160
Oh, and just kind of ironically, I suppose they're also going to be Wayland.

263
00:17:05,160 --> 00:17:09,640
So when you run your Linux applications on Windows, you're using Wayland to make it possible.

264
00:17:09,640 --> 00:17:13,520
That's how Microsoft is actually bridging the GUI gap, if you will, and I think that's

265
00:17:13,520 --> 00:17:14,520
remarkable.

266
00:17:14,520 --> 00:17:17,280
Well, this was kind of the last large gap.

267
00:17:17,280 --> 00:17:21,780
I mean, yes, you could do it, but you had to hack it all together yourself.

268
00:17:21,780 --> 00:17:26,240
This makes the whole thing feel a much more integrated as you touched on, but also more

269
00:17:26,240 --> 00:17:27,240
of like a real distro.

270
00:17:27,240 --> 00:17:30,960
I mean, it feels like, you know, Microsoft is shipping this sort of well contained and

271
00:17:30,960 --> 00:17:33,640
thought through system that's kind of fully featured.

272
00:17:33,640 --> 00:17:38,760
I mean, if Ubuntu 2104 wasn't running Wayland, I mean, they'd be behind Microsoft.

273
00:17:38,760 --> 00:17:40,320
You burned Canonical.

274
00:17:40,320 --> 00:17:45,400
But all kidding aside, the experience definitely isn't perfect yet.

275
00:17:45,400 --> 00:17:50,400
I had more than a few issues, including WSLG not installing at all and requiring me to

276
00:17:50,400 --> 00:17:54,040
totally remove WSL before I could get it working again.

277
00:17:54,040 --> 00:17:56,760
And I know you ran into a few issues with setup as well.

278
00:17:56,760 --> 00:18:00,820
Yep, essentially, it just was an incomplete installation because I was trying that new

279
00:18:00,820 --> 00:18:04,380
command line tool, which, like I say, I think that's a good direction to go.

280
00:18:04,380 --> 00:18:08,920
But when you're working with the early preview builds, it's it's beta.

281
00:18:08,920 --> 00:18:09,920
It's definitely beta.

282
00:18:09,920 --> 00:18:14,160
For instance, you also need to make sure you get upgraded specific drivers that enable

283
00:18:14,160 --> 00:18:17,960
the sort of virtual GPU support to make this really efficient.

284
00:18:17,960 --> 00:18:23,280
And at least in Ubuntu, you still have to install all of the sort of normal user land

285
00:18:23,280 --> 00:18:28,520
libraries which adds, I don't know, another 700 megs to your little Linux distro there,

286
00:18:28,520 --> 00:18:31,660
despite the fact that a lot of that's being handled by Microsoft.

287
00:18:31,660 --> 00:18:36,460
There's just no doubt about it when you and I were going back and forth over chat as we

288
00:18:36,460 --> 00:18:41,000
were getting our Windows boxes set up, it is kind of arcane.

289
00:18:41,000 --> 00:18:46,280
When you set up a Windows box from scratch, from from zero, it feels like you've time

290
00:18:46,280 --> 00:18:48,240
traveled back to the 90s.

291
00:18:48,240 --> 00:18:53,160
And I totally appreciate that's not the experience for 99% of Windows consumers.

292
00:18:53,160 --> 00:18:55,660
They buy a machine and Windows is loaded on it.

293
00:18:55,660 --> 00:19:01,000
And so I'm never really going to voluntarily run Windows really, no matter how good WSL

294
00:19:01,000 --> 00:19:02,400
gets.

295
00:19:02,400 --> 00:19:06,000
I'm just kind of hopeful it means in the end we have more Linux users, at least in some

296
00:19:06,000 --> 00:19:07,000
form.

297
00:19:07,000 --> 00:19:08,000
Right.

298
00:19:08,000 --> 00:19:10,160
I think that's kind of where we have to hope is maybe you're a gamer who really needs to

299
00:19:10,160 --> 00:19:13,480
have Windows because that's where all of your games run the best.

300
00:19:13,480 --> 00:19:17,680
Or perhaps you're at work and well, Windows is the workstation that's provided to you.

301
00:19:17,680 --> 00:19:20,640
Maybe you even want to target Linux, but you didn't have a great way to do that.

302
00:19:20,640 --> 00:19:25,480
You didn't have IT staff and you had to build you up a Linux development test workstation.

303
00:19:25,480 --> 00:19:27,520
That's all taken care of for you now.

304
00:19:27,520 --> 00:19:32,600
And it kind of seems like developing desktop Linux apps is one of the use cases Microsoft

305
00:19:32,600 --> 00:19:34,680
has built this in mind.

306
00:19:34,680 --> 00:19:35,680
Isn't that interesting?

307
00:19:35,680 --> 00:19:39,360
They emphasize that a little bit in their video talking about this.

308
00:19:39,360 --> 00:19:41,240
And you know what I think it's for?

309
00:19:41,240 --> 00:19:42,240
What?

310
00:19:42,240 --> 00:19:43,240
Microsoft Outlook.

311
00:19:43,240 --> 00:19:47,700
Their Outlook developers aren't Linux desktop users, but I believe down in my core that

312
00:19:47,700 --> 00:19:51,640
they're working on a brand new version of Outlook.

313
00:19:51,640 --> 00:19:54,380
We already know they're working on an Electron version, but I think they're working on a

314
00:19:54,380 --> 00:19:56,520
version that they're going to bring over to Linux.

315
00:19:56,520 --> 00:20:02,760
The job one is getting the in-house Microsoft developers up to date with WSLG and then once

316
00:20:02,760 --> 00:20:06,800
they have the infrastructure in place, they can actually start working on the Linux desktop

317
00:20:06,800 --> 00:20:07,800
port.

318
00:20:07,800 --> 00:20:12,800
I see your desktop Linux email client master plan.

319
00:20:12,800 --> 00:20:19,520
If you'd like to learn more about WSLG without going through the pain of installing Windows,

320
00:20:19,520 --> 00:20:23,640
you might want to check out a video we'll have linked from Microsoft product manager

321
00:20:23,640 --> 00:20:29,920
Craig Llewellyn where he demos things like using gedit to browse and edit files on his

322
00:20:29,920 --> 00:20:38,920
Windows system and record in WSL with audacity sound coming from the Windows host.

323
00:20:38,920 --> 00:20:40,520
Linux.ting.com.

324
00:20:40,520 --> 00:20:43,720
Go see how much you could save and get $25 off.

325
00:20:43,720 --> 00:20:47,040
They have plans that'll work for a family or plans that'll work for an individual or

326
00:20:47,040 --> 00:20:49,080
plans that'll work for your small business.

327
00:20:49,080 --> 00:20:50,680
I love their new flex plan.

328
00:20:50,680 --> 00:20:54,400
I think it's great because you can have as many lines as you need on your account and

329
00:20:54,400 --> 00:20:57,160
then it's just $10 additional per line.

330
00:20:57,160 --> 00:21:01,840
Every line gets unlimited texts and calls and every line shares the same pool of data

331
00:21:01,840 --> 00:21:05,380
either LTE or glorious 5G.

332
00:21:05,380 --> 00:21:09,640
If we use two gigs or 20 gigs or more, there's a perfect Ting plan for you and every plan

333
00:21:09,640 --> 00:21:15,600
gets access to Ting's award winning, crushing it customer service and their nationwide LTE

334
00:21:15,600 --> 00:21:20,460
and 5G network coverage and the best part, no contracts ever.

335
00:21:20,460 --> 00:21:23,360
What I love about Ting is they have three different networks to choose from and right

336
00:21:23,360 --> 00:21:25,240
now I'm on the Verizon network.

337
00:21:25,240 --> 00:21:28,920
I've moved around depending on the coverage, but I love that they have so many different

338
00:21:28,920 --> 00:21:31,400
options and here's a truth bomb for you.

339
00:21:31,400 --> 00:21:33,220
It's simple to switch to Ting.

340
00:21:33,220 --> 00:21:36,140
Pretty much any phone works because they support so many networks.

341
00:21:36,140 --> 00:21:37,160
So here's what you do.

342
00:21:37,160 --> 00:21:40,920
Get your Ninja outfit on and then head over to linux.ting.com.

343
00:21:40,920 --> 00:21:44,880
Check your current phone, create an account, pick the plan that's right for you and when

344
00:21:44,880 --> 00:21:49,200
you're all done, Ting will send you a SIM card that you pop in your phone and you get

345
00:21:49,200 --> 00:21:51,080
activated in minutes.

346
00:21:51,080 --> 00:21:55,560
So go try it out right now at linux.ting.com.

347
00:21:55,560 --> 00:22:03,520
This past week, our little Linux powered helicopter made three successful flights on Mars.

348
00:22:03,520 --> 00:22:09,000
And what's remarkable about all of this is that Linux, an open source, is at the core

349
00:22:09,000 --> 00:22:13,800
of everything making this possible.

350
00:22:13,800 --> 00:22:19,160
That right there is the team celebrating video sent back to the ground using FFmpeg to put

351
00:22:19,160 --> 00:22:21,720
the process and prepare it for them.

352
00:22:21,720 --> 00:22:30,840
And FFmpeg is one of thousands of open source projects inside these rovers and the rotocopter.

353
00:22:30,840 --> 00:22:36,880
And that's something that JPL and GitHub CEO Nat Friedman wanted to recognize.

354
00:22:36,880 --> 00:22:43,000
And so they worked with JPL to go through the list to look at all of the projects and

355
00:22:43,000 --> 00:22:49,120
discover the nearly 12,000 developers on GitHub who contributed to different aspects of engineering

356
00:22:49,120 --> 00:22:51,680
the new open source software stack.

357
00:22:51,680 --> 00:22:57,160
And those developers they've identified will now have a swanky badge on their profile.

358
00:22:57,160 --> 00:22:58,760
Definitely something to be proud of.

359
00:22:58,760 --> 00:23:03,240
And I appreciate the work GitHub did here just because we know open source is long and

360
00:23:03,240 --> 00:23:07,600
deep and maybe you contributed to some small library somewhere you have no idea and it

361
00:23:07,600 --> 00:23:09,440
was on another planet.

362
00:23:09,440 --> 00:23:14,160
At first, like skeptical pants, Chris was like, a badge, badges, we don't need no freaking

363
00:23:14,160 --> 00:23:15,200
badges.

364
00:23:15,200 --> 00:23:20,840
And then I realized, actually, Chris, if you were to browse somebody's GitHub profile and

365
00:23:20,840 --> 00:23:25,280
you saw that badge on there, I actually think I'd be legit impressed.

366
00:23:25,280 --> 00:23:27,680
And so then I actually kind of think it's neat and you're right, they did have to do

367
00:23:27,680 --> 00:23:29,360
some digging.

368
00:23:29,360 --> 00:23:30,360
It's kind of a cool story.

369
00:23:30,360 --> 00:23:34,800
And I am just, I am just so thrilled that the three successful flights of this Linux

370
00:23:34,800 --> 00:23:40,260
powered rotocopter and what a milestone that this is for Linux in general and in future

371
00:23:40,260 --> 00:23:41,260
space missions.

372
00:23:41,260 --> 00:23:43,680
I mean, we just, we just saw history right here.

373
00:23:43,680 --> 00:23:46,200
I guess that's just what I love about doing this show.

374
00:23:46,200 --> 00:23:49,000
There's history being made every single week and we try to capture it.

375
00:23:49,000 --> 00:23:53,480
Go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

376
00:23:53,480 --> 00:23:57,920
And linuxactionnews.com slash contact for ways to get in touch.

377
00:23:57,920 --> 00:23:59,240
You heard us mention it earlier.

378
00:23:59,240 --> 00:24:01,080
Don't miss Linux Unplugged 403.

379
00:24:01,080 --> 00:24:05,360
It's our review of Fedora 34 and why not join us live if you can make it?

380
00:24:05,360 --> 00:24:09,800
Tuesday, 12pm Pacific, 3pm Eastern at jblive.tv.

381
00:24:09,800 --> 00:24:15,320
We'll be back next Monday with our weekly take on the latest Linux and open source news.

382
00:24:15,320 --> 00:24:41,640
Thanks for joining us and we will see you next week.

