1
00:00:00,000 --> 00:00:08,920
Hello, and welcome to Linux Action News, episode 255, recorded on August 24th, 2022.

2
00:00:08,920 --> 00:00:10,120
I'm Chris.

3
00:00:10,120 --> 00:00:11,120
And I'm Wes.

4
00:00:11,120 --> 00:00:12,120
Hello, Wes.

5
00:00:12,120 --> 00:00:13,360
Let's do the news.

6
00:00:13,360 --> 00:00:19,440
We start this week with a story for those of us with just too dang many CPU cores and

7
00:00:19,440 --> 00:00:21,640
not enough time.

8
00:00:21,640 --> 00:00:27,720
Multiple efforts are now underway to improve the boot time for ARM or RISC-V systems that

9
00:00:27,720 --> 00:00:30,560
use Kexec.

10
00:00:30,560 --> 00:00:34,840
Every now and then we have a story that I feel like was custom written for Wes Payne.

11
00:00:34,840 --> 00:00:40,240
We recently even covered another effort underway by the folks at TikTok to optimize how the

12
00:00:40,240 --> 00:00:45,040
kernel image compression is handled during a Kexec boot or shutdown.

13
00:00:45,040 --> 00:00:49,560
But now there's new work seemingly underway from either an individual or at least a small

14
00:00:49,560 --> 00:00:51,580
group sharing a Gmail account.

15
00:00:51,580 --> 00:00:58,200
And this new set of patches allows the kernel to bring down CPU cores in parallel.

16
00:00:58,200 --> 00:01:04,320
Before we get into the details, a little background for those of you maybe not Kexec enthusiasts.

17
00:01:04,320 --> 00:01:10,060
It's an abbreviation for kernel execute, and it allows an admin to reboot or boot into

18
00:01:10,060 --> 00:01:16,520
an entirely different new kernel without going through the usual posting process of a typical

19
00:01:16,520 --> 00:01:17,520
startup.

20
00:01:17,520 --> 00:01:23,960
So, this lets you perform faster system reboots, get to skip all that slow hardware initialization,

21
00:01:23,960 --> 00:01:29,720
or you can boot into a very different kernel perhaps to perform a function like crash recovery.

22
00:01:29,720 --> 00:01:38,900
Now, currently carrying out a Kexec reboot on RISC-V or a 64bit ARM system, well it can

23
00:01:38,900 --> 00:01:44,560
be a little bit painful, at least if you're lucky enough to have a high core count system,

24
00:01:44,560 --> 00:01:51,920
since each CPU core is shut down one at a time, one after another.

25
00:01:51,920 --> 00:01:56,680
To underscore that point, the patch author points out that with this new work, an 80

26
00:01:56,680 --> 00:02:01,080
core ARM server can do a Kexec reboot in just one second.

27
00:02:01,080 --> 00:02:03,840
Previously, that took almost 15 seconds.

28
00:02:03,840 --> 00:02:07,760
Yeah, now you add that up like across infrastructure like AWS.

29
00:02:07,760 --> 00:02:12,000
Oh man, now you're talking a real savings.

30
00:02:12,000 --> 00:02:15,060
That's a game changer for some of these big cloud providers.

31
00:02:15,060 --> 00:02:20,040
And other architectures like x86-64 and Power, well yeah, no surprise there.

32
00:02:20,040 --> 00:02:23,760
They've already solved this a little while ago when using Kexec, so they're not currently

33
00:02:23,760 --> 00:02:27,880
bottlenecked by that serialized style of shutdown of the CPU cores.

34
00:02:27,880 --> 00:02:33,000
So with a bit of luck, these 10 patches could soon be mainlined, and well, at least our

35
00:02:33,000 --> 00:02:35,240
Westpane will be delighted about it.

36
00:02:35,240 --> 00:02:40,600
But one thing that I'd like a little more clarity about is if these two efforts have

37
00:02:40,600 --> 00:02:42,000
any connection at all.

38
00:02:42,000 --> 00:02:47,480
It seemed on first pass they didn't, but I think I'd like more details there.

39
00:02:47,480 --> 00:02:50,220
Yeah, it is a little bit curious.

40
00:02:50,220 --> 00:02:55,120
Why all this work on Kexec just right now?

41
00:02:55,120 --> 00:02:59,160
Perhaps it's the intersection of some of these new architectures really gaining in popularity

42
00:02:59,160 --> 00:03:04,420
lately, and then perhaps also a bit of Kexec being viewed as something of a curiosity,

43
00:03:04,420 --> 00:03:08,080
at least by us desktop dominant folks at times.

44
00:03:08,080 --> 00:03:13,560
But I suspect it may see more use in production than we really give it credit for.

45
00:03:13,560 --> 00:03:18,680
But as always, if you have more details, or heck, if you're using Kexec in production,

46
00:03:18,680 --> 00:03:26,920
let us know in our matrix room or linuxactionnews.com slash contact.

47
00:03:26,920 --> 00:03:31,320
And speaking of RISC-V devices, Star 5 Tech out of Shenzhen, China has launched their

48
00:03:31,320 --> 00:03:37,440
first Kickstarter to fund a small board computer in the spirit of a Raspberry Pi, but loaded

49
00:03:37,440 --> 00:03:39,440
with a RISC-V chip.

50
00:03:39,440 --> 00:03:46,120
And I have to say, it's been a really long time since a crowd funder sucked me in and

51
00:03:46,120 --> 00:03:47,760
I funded anything.

52
00:03:47,760 --> 00:03:54,760
But the Vision 5 II got me, I have backed a unit that claims it will ship in November.

53
00:03:54,760 --> 00:04:04,540
At the core of that unit, well, it's the Star 5 64-bit CPU, featuring quad Si5 1.5GHz cores.

54
00:04:04,540 --> 00:04:10,200
And in a larger change from the Vision 5 II's predecessor, this thing's got an Imagination

55
00:04:10,200 --> 00:04:16,040
BXE432 graphics processing unit, which should do some of the heavy lifting if you're using

56
00:04:16,040 --> 00:04:18,600
this for desktop or graphical workloads.

57
00:04:18,600 --> 00:04:24,480
Yeah, so the device itself, it's in a rough footprint of a Raspberry Pi, I'll say.

58
00:04:24,480 --> 00:04:32,880
But unlike the Pi, the Vision 5 II also has eMMC on board and an M.2 keyslot for an SSD.

59
00:04:32,880 --> 00:04:42,160
As well as a standard 40-pin GPIO header, HDMI, multiple USB, and two, yes two, ethernet

60
00:04:42,160 --> 00:04:43,160
ports.

61
00:04:43,160 --> 00:04:49,440
Now, the Kickstarter is offering a super early bird special version which has different ethernet

62
00:04:49,440 --> 00:04:50,560
ports.

63
00:04:50,560 --> 00:04:55,280
One supports 10 or 100 megabits, while the other is gigabit only.

64
00:04:55,280 --> 00:04:58,680
But all other aspects remain the same.

65
00:04:58,680 --> 00:05:05,320
Impressively, the Kickstarter has already reached its goal and within 24 hours to boot.

66
00:05:05,320 --> 00:05:16,680
Aiming to hit 28k from the start, the campaign has raised nearly 40k as we record.

67
00:05:16,680 --> 00:05:19,720
Just a quick note to let you know about an important election coming up.

68
00:05:19,720 --> 00:05:24,580
The 2022 election for members of the Linux Foundation's Technical Advisory Board, known

69
00:05:24,580 --> 00:05:29,400
as TAB, will be held during the Linux Plumbers Conference coming up on September 12th to

70
00:05:29,400 --> 00:05:30,960
the 14th.

71
00:05:30,960 --> 00:05:36,720
The TAB represents the kernel development community to the Linux Foundation and beyond,

72
00:05:36,720 --> 00:05:40,440
and holds a seat on the Foundation's Board of Directors.

73
00:05:40,440 --> 00:05:44,040
The call for nominees for this year's election has already gone out.

74
00:05:44,040 --> 00:05:51,060
The deadline for nominations is September 12th.

75
00:05:51,060 --> 00:06:09,360
And yes, it's still mainly written in Perl.

76
00:06:09,360 --> 00:06:13,360
As you might expect, Webmin 2.0 has been in the works for years.

77
00:06:13,360 --> 00:06:18,160
Initially, the goal of the 2.0 release was focused on removing the legacy support that

78
00:06:18,160 --> 00:06:21,560
had built up over the many years of development.

79
00:06:21,560 --> 00:06:27,520
But as time has gone on, Webmin 2.0 has become more of an incremental update over the 1 series.

80
00:06:27,520 --> 00:06:31,440
There are some nice visual improvements for sure, support for multiple versions of Webmin

81
00:06:31,440 --> 00:06:38,340
installed on a system with SystemD, and it's great to see support for AMD CPU temperatures.

82
00:06:38,340 --> 00:06:45,080
You know, just in general, it's impressive to see a project continue on after 25 years.

83
00:06:45,080 --> 00:06:47,560
It's still developed, it's still in use.

84
00:06:47,560 --> 00:06:50,720
We should just take a moment to acknowledge that this is providing a lot of value to folks

85
00:06:50,720 --> 00:06:52,200
out there.

86
00:06:52,200 --> 00:06:57,440
In this particular release, the project seems to be focusing on enforcing HTTP strict transport

87
00:06:57,440 --> 00:07:04,240
security as well as adding better HTTP to HTTPS redirects when you've got SSL enabled.

88
00:07:04,240 --> 00:07:10,320
That's a good thing to see on your remote web interface to admin your box.

89
00:07:10,320 --> 00:07:12,040
I'm really glad they enabled that.

90
00:07:12,040 --> 00:07:15,680
I also though, I'm just really happy to see the project continue.

91
00:07:15,680 --> 00:07:18,520
And it's not like they haven't had any releases over the years, we're having a bit of fun

92
00:07:18,520 --> 00:07:19,520
here.

93
00:07:19,520 --> 00:07:25,360
In fact, their previous release, version 1.999-2 was released on August 4th, and the release

94
00:07:25,360 --> 00:07:29,280
before that, July 25th, and July 13th before that.

95
00:07:29,280 --> 00:07:34,480
So really the 1.0 series has seen many updates over the years.

96
00:07:34,480 --> 00:07:37,360
It's just not something I use anymore.

97
00:07:37,360 --> 00:07:42,960
But there was a time in the early 2000s when Webmin helped me bridge that gap in a world

98
00:07:42,960 --> 00:07:47,320
where I had Windows and Linux servers and I needed to transition, especially when I

99
00:07:47,320 --> 00:07:51,720
was learning Linux service management and things like XynetD and Apache virtual hosts

100
00:07:51,720 --> 00:07:54,080
and the basics of Samba.

101
00:07:54,080 --> 00:07:59,000
Webmin gave me a UI to figure that stuff out, and having a standard tool I could load on

102
00:07:59,000 --> 00:08:08,240
my Red Hat boxes, my Debian machines, and my Mandrake systems was really valuable.

103
00:08:08,240 --> 00:08:12,520
The Latpack 1.14.0 is out this week.

104
00:08:12,520 --> 00:08:16,800
It's the culmination of several months of work by dozens of people, and it brings a

105
00:08:16,800 --> 00:08:22,120
variety of lower level improvements, as well as correcting an issue that could lead to

106
00:08:22,120 --> 00:08:23,120
memory corruption.

107
00:08:23,120 --> 00:08:25,520
Well, that's always good to see.

108
00:08:25,520 --> 00:08:29,920
You know, there's a lot in 1.14, but I think what our listeners are going to find most

109
00:08:29,920 --> 00:08:33,440
interesting are the improvements to the command line tools.

110
00:08:33,440 --> 00:08:37,520
I've always sort of personally felt that the command line interface to Flatpak wasn't quite

111
00:08:37,520 --> 00:08:42,640
as good as it could be, and did not always expose all of the information that the user

112
00:08:42,640 --> 00:08:43,640
needed.

113
00:08:43,640 --> 00:08:49,320
So now with 1.14, the command line interface has seen many improvements, a couple of them

114
00:08:49,320 --> 00:08:50,960
I think are essential.

115
00:08:50,960 --> 00:08:56,000
One is the user will now be properly informed of apps that are using an end of life runtime

116
00:08:56,000 --> 00:08:57,000
extension.

117
00:08:57,000 --> 00:09:00,000
That's good for security reasons, obviously.

118
00:09:00,000 --> 00:09:05,340
And when the user uses the uninstall command, it will now ask for confirmation before removing

119
00:09:05,340 --> 00:09:10,400
a runtime or runtime extension that another Flatpak is depending on.

120
00:09:10,400 --> 00:09:14,840
Yeah, that's a pretty big deal right there.

121
00:09:14,840 --> 00:09:20,320
But really, maybe the bigger picture with Flatpaks is, I think we've hit the era of

122
00:09:20,320 --> 00:09:21,320
polish.

123
00:09:21,320 --> 00:09:26,800
You know, the base technology of delivering containerized applications, that's basically

124
00:09:26,800 --> 00:09:27,800
solved.

125
00:09:27,800 --> 00:09:32,720
At this point, we can ship just about any application in one of these universal formats,

126
00:09:32,720 --> 00:09:36,200
even something as complicated as, say, Steam.

127
00:09:36,200 --> 00:09:40,380
And Flatpak seems to have wider and wider community adoption just about every single

128
00:09:40,380 --> 00:09:42,520
week it seems these days.

129
00:09:42,520 --> 00:09:43,760
I think you're right, Wes.

130
00:09:43,760 --> 00:09:52,000
I think the challenges that still need to be solved now are social ones.

131
00:09:52,000 --> 00:09:56,720
We rarely draw attention to individual releases of web browsers.

132
00:09:56,720 --> 00:10:02,560
But with Firefox 104, released on August 23rd, there was a feature we thought you might like

133
00:10:02,560 --> 00:10:04,760
to know about.

134
00:10:04,760 --> 00:10:08,880
Among a few others, like commercial desktops getting the ability to measure the actual

135
00:10:08,880 --> 00:10:14,800
power usage of a website, one thing we're all getting is a new feature for the Firefox

136
00:10:14,800 --> 00:10:16,720
UI itself.

137
00:10:16,720 --> 00:10:20,720
Or maybe I should say, it's a lack of features?

138
00:10:20,720 --> 00:10:26,000
Starting with version 104, when Firefox is hidden under another window or minimized,

139
00:10:26,000 --> 00:10:31,960
the entire UI will be throttled for performance and for improved battery impact.

140
00:10:31,960 --> 00:10:35,400
Much like how idle background tabs get throttled already.

141
00:10:35,400 --> 00:10:40,200
Overall, Firefox has had a string of excellent releases lately.

142
00:10:40,200 --> 00:10:49,360
And if you haven't checked it out for a bit, it really might be time to revisit the Fox.

143
00:10:49,360 --> 00:10:51,440
Linode.com slash LAN.

144
00:10:51,440 --> 00:10:55,400
Go there to get $100 in 60-day credit on a new account, and it's just a great way to

145
00:10:55,400 --> 00:10:57,720
support the show while trying something great out.

146
00:10:57,720 --> 00:11:01,680
This here show is made possible by you taking advantage of our sponsors, and Linode is one

147
00:11:01,680 --> 00:11:06,200
that we can enthusiastically endorse here on the show.

148
00:11:06,200 --> 00:11:10,640
They started in 2003 as one of the few companies that saw where Linux and its virtualization

149
00:11:10,640 --> 00:11:15,420
capabilities are going, and now, nearly 19 years later, they're the best place to host

150
00:11:15,420 --> 00:11:21,240
your application, your data, and to run your service or website, game, whatever it might

151
00:11:21,240 --> 00:11:22,240
be.

152
00:11:22,240 --> 00:11:23,600
Linode's always adding new features.

153
00:11:23,600 --> 00:11:25,160
They recently added Kali Linux.

154
00:11:25,160 --> 00:11:27,560
Maybe you want to do a little remote audit.

155
00:11:27,560 --> 00:11:29,840
That's actually a great idea, by the way.

156
00:11:29,840 --> 00:11:33,200
People used to pay me good money to go and do remote audits of their network.

157
00:11:33,200 --> 00:11:34,640
How do you think I did it back in the day?

158
00:11:34,640 --> 00:11:36,760
I'll tell you how I did it, like an animal.

159
00:11:36,760 --> 00:11:40,680
I had an actual physical server in a rack at a data center, and I was paying for the

160
00:11:40,680 --> 00:11:41,680
power.

161
00:11:41,680 --> 00:11:43,440
I was paying for the internet connection.

162
00:11:43,440 --> 00:11:46,360
It was awful when I had to go in there and fix the server, too.

163
00:11:46,360 --> 00:11:49,840
It's so funny how Linode has completely changed the game and made infrastructure that's fast

164
00:11:49,840 --> 00:11:54,760
and reliable and well-priced so accessible.

165
00:11:54,760 --> 00:11:57,920
And they've done everything they can over the years to just lower the barriers of entry

166
00:11:57,920 --> 00:12:03,760
so anybody who's never even set up a server, or pros who were racking and stacking 20 years

167
00:12:03,760 --> 00:12:06,320
ago, they all can use Linode.

168
00:12:06,320 --> 00:12:07,920
They've really struck that balance.

169
00:12:07,920 --> 00:12:10,840
And if you need the more advanced stuff, they've got it.

170
00:12:10,840 --> 00:12:12,000
They've got VLAN support.

171
00:12:12,000 --> 00:12:13,280
They've got cloud firewalls.

172
00:12:13,280 --> 00:12:15,080
They've got S3 compatible object storage.

173
00:12:15,080 --> 00:12:21,080
They've got an elegant API, but something that they've got that nobody else has got.

174
00:12:21,080 --> 00:12:25,400
And I was actually talking to a friend in another company in the Linux ecosystem, and

175
00:12:25,400 --> 00:12:33,080
they said to me, our goal is to get our community game as half as good as Linode's.

176
00:12:33,080 --> 00:12:35,480
They went on to say, we see Linode at every community event.

177
00:12:35,480 --> 00:12:38,680
We see Linode sponsoring projects and not going out there and making a big deal about

178
00:12:38,680 --> 00:12:39,680
it.

179
00:12:39,680 --> 00:12:40,680
They're just helping a project out with infrastructure.

180
00:12:40,680 --> 00:12:46,000
You know, like here at JB, they're making it possible for our West Coast road tour.

181
00:12:46,000 --> 00:12:49,000
Now, you know, yeah, we make a big stink about it, but it's not like Linode goes and puts

182
00:12:49,000 --> 00:12:50,000
out on blast.

183
00:12:50,000 --> 00:12:52,560
Oh, look what we're doing over here.

184
00:12:52,560 --> 00:12:56,080
They do it because it's an investment in the community, and that community pays dividends

185
00:12:56,080 --> 00:12:57,080
for them for years.

186
00:12:57,080 --> 00:12:58,960
They've seen it for 19 years.

187
00:12:58,960 --> 00:12:59,960
They get it.

188
00:12:59,960 --> 00:13:01,800
And on top of that, they're just super fast.

189
00:13:01,800 --> 00:13:06,100
They have 11 data centers around the world, and they're 30 to 50% cheaper than the major

190
00:13:06,100 --> 00:13:07,840
hyperscalers out there.

191
00:13:07,840 --> 00:13:08,840
So go get $100.

192
00:13:08,840 --> 00:13:09,840
Support the show.

193
00:13:09,840 --> 00:13:10,840
Kick the tires.

194
00:13:10,840 --> 00:13:11,840
Really try it.

195
00:13:11,840 --> 00:13:12,840
That's what you can do with that $100.

196
00:13:12,840 --> 00:13:14,320
So go take advantage of it.

197
00:13:14,320 --> 00:13:17,560
Sign up today, linode.com slash LAN.

198
00:13:17,560 --> 00:13:19,320
Get that $100, support the show.

199
00:13:19,320 --> 00:13:27,200
One more time, support the show at linode.com slash L-A-N.

200
00:13:27,200 --> 00:13:32,280
And a big warm thank you to Kalyde, Kalyde.com slash LAN.

201
00:13:32,280 --> 00:13:37,240
Kalyde is endpoint security solutions that use the most powerful untapped resource in

202
00:13:37,240 --> 00:13:38,800
all of IT.

203
00:13:38,800 --> 00:13:41,240
No, it is not kryptonite.

204
00:13:41,240 --> 00:13:42,800
It is end users.

205
00:13:42,800 --> 00:13:46,640
And if you're trying to achieve security goals just for your own internal reasons, maybe

206
00:13:46,640 --> 00:13:51,040
you have an audit, maybe you got a new boss, maybe you just like to know where things stand.

207
00:13:51,040 --> 00:13:56,360
Well, the traditional way has been get an agent on every machine, run some sort of network-wide

208
00:13:56,360 --> 00:13:57,360
audit.

209
00:13:57,360 --> 00:14:01,920
And these things would always bring their own security issues with them, inevitably.

210
00:14:01,920 --> 00:14:03,800
They always do.

211
00:14:03,800 --> 00:14:06,380
And they also slow down the user's machine.

212
00:14:06,380 --> 00:14:08,560
They pit IT against the end user.

213
00:14:08,560 --> 00:14:13,160
It is a very uncomfortable dynamic, and I have been on both ends of it.

214
00:14:13,160 --> 00:14:15,760
Kalyde does things differently.

215
00:14:15,760 --> 00:14:22,240
Instead of forcing changes on users, Kalyde sends them security recommendations via Slack.

216
00:14:22,240 --> 00:14:26,620
Kalyde will automatically notify your team when their device is insecure, and it'll give

217
00:14:26,620 --> 00:14:30,280
them step-by-step instructions on how to solve the problem.

218
00:14:30,280 --> 00:14:35,400
And by reaching out to employees via friendly Slack DM and educating them about company

219
00:14:35,400 --> 00:14:40,260
policies, Kalyde actually helps you build a culture where everyone contributes to security

220
00:14:40,260 --> 00:14:45,160
because everyone understands it and why they're doing it.

221
00:14:45,160 --> 00:14:48,280
You're reasonable humans, just tell them.

222
00:14:48,280 --> 00:14:52,280
And for IT admins, Kalyde provides a single dashboard that lets you monitor the security

223
00:14:52,280 --> 00:14:53,640
of your entire fleet.

224
00:14:53,640 --> 00:14:57,440
Maybe it's a Mac, maybe it's Windows, hopefully it's Linux.

225
00:14:57,440 --> 00:14:58,440
Kalyde supports it all.

226
00:14:58,440 --> 00:15:03,120
And you can see it at a glance which employees have their disks encrypted, all their OS updates

227
00:15:03,120 --> 00:15:06,600
installed, and a password manager installed as well.

228
00:15:06,600 --> 00:15:11,120
Makes it easy to prove compliance to your auditors, to yourself, to customers, leadership,

229
00:15:11,120 --> 00:15:12,400
whoever it need be.

230
00:15:12,400 --> 00:15:13,800
So that's Kalyde.

231
00:15:13,800 --> 00:15:18,060
User-centered cross-platform endpoint security for teams that slack.

232
00:15:18,060 --> 00:15:21,480
You can meet your compliance goals by putting users first.

233
00:15:21,480 --> 00:15:25,240
So visit Kalyde.com slash LAN to find out how.

234
00:15:25,240 --> 00:15:29,760
When you go there, they'll hook you up with a goodie bag including a free t-shirt just

235
00:15:29,760 --> 00:15:32,360
for activating a free trial.

236
00:15:32,360 --> 00:15:42,400
That's Kalyde, so go check it out, K-O-L-I-D-E dot com slash L-A-N.

237
00:15:42,400 --> 00:15:48,960
We end this week with an update on the journey to a fully OpenGL accelerated Linux desktop

238
00:15:48,960 --> 00:15:52,120
on the Apple M-series hardware.

239
00:15:52,120 --> 00:15:57,040
Alyssa Rosenzweig has been involved with the Asahi Linux project for nearly two years,

240
00:15:57,040 --> 00:16:02,240
working on reverse engineering Apple M-series graphics support, has shared a new status

241
00:16:02,240 --> 00:16:03,240
update.

242
00:16:03,240 --> 00:16:08,640
And it seems something of a milestone has been reached.

243
00:16:08,640 --> 00:16:14,520
Neverball West, the old classic Neverball game in all of its OpenGL glory, rendered

244
00:16:14,520 --> 00:16:17,200
on the open source Mesa Asahi driver.

245
00:16:17,200 --> 00:16:21,320
Now understand that this OpenGL driver is actually running on Mac OS while using the

246
00:16:21,320 --> 00:16:24,520
standard proprietary Mac OS kernel driver.

247
00:16:24,520 --> 00:16:30,040
The hope here is that once the Apple Silicon kernel graphics driver for Linux begins taking

248
00:16:30,040 --> 00:16:36,040
shape, this Mesa OpenGL driver will, with just a little bit of work, start functioning

249
00:16:36,040 --> 00:16:41,440
under Linux rather than only being functional on Mac OS.

250
00:16:41,440 --> 00:16:46,200
And make no mistake, this is still quite the achievement.

251
00:16:46,200 --> 00:16:50,400
In our most recent update, Rosenzweig writes about the process of reverse engineering the

252
00:16:50,400 --> 00:16:56,680
behavior of Apple's Metal driver, since, of course, Apple provides no hardware documentation.

253
00:16:56,680 --> 00:17:02,560
No, and surprise, surprise, the documentation for Metal, well, according to Rosenzweig,

254
00:17:02,560 --> 00:17:05,760
is really kind of two versions out there.

255
00:17:05,760 --> 00:17:10,360
They say they have one version for the public developers to consume that documents things

256
00:17:10,360 --> 00:17:12,960
for a developer targeting the App Store.

257
00:17:12,960 --> 00:17:19,040
But she believes there's a second version inside Apple that is, quote, an internal API

258
00:17:19,040 --> 00:17:22,760
adding back features that Apple doesn't want you using.

259
00:17:22,760 --> 00:17:27,520
And while Apple does not publish those features or any kind of documentation on those internal

260
00:17:27,520 --> 00:17:33,520
APIs, the team found a, quote, glimpse behind the curtain.

261
00:17:33,520 --> 00:17:38,160
The undocumented classes and methods making up Apple's internal Metal API, of course,

262
00:17:38,160 --> 00:17:41,680
are still available in the production Metal binaries.

263
00:17:41,680 --> 00:17:46,680
To use them, a developer only needs the missing headers, and fortunately, Objective-C symbols

264
00:17:46,680 --> 00:17:51,900
contain enough information to reconstruct the header files, allowing Rosenzweig to experiment

265
00:17:51,900 --> 00:17:58,080
with undocumented methods that have extra functionality inherited from OpenGL.

266
00:17:58,080 --> 00:18:01,920
Now all of this is very exciting, but we should probably be clear.

267
00:18:01,920 --> 00:18:06,620
First engineering a driver stack requires years of work.

268
00:18:06,620 --> 00:18:11,000
You gamers out there should probably be prepared to wait a few more years before you'll really

269
00:18:11,000 --> 00:18:13,720
be satisfied with GPU driver performance.

270
00:18:13,720 --> 00:18:20,120
Yep, and the Asahi developers will be the first to tell us, temper our expectations.

271
00:18:20,120 --> 00:18:24,520
But for those of us who would be satisfied with enough functionality for an accelerated

272
00:18:24,520 --> 00:18:31,000
desktop environment, a working web browser, and maybe a few older games, Rosenzweig thinks

273
00:18:31,000 --> 00:18:37,440
they might be there by the end of this year, saying, quote, I'm optimistic I will have

274
00:18:37,440 --> 00:18:42,600
native OpenGL 2.1 in Asahi Linux by the end of the year.

275
00:18:42,600 --> 00:18:45,800
That's enough to accelerate your desktop environment and browser.

276
00:18:45,800 --> 00:18:49,720
It's also enough to play older games like Neverball.

277
00:18:49,720 --> 00:18:55,220
Even without fancy features, GPU acceleration means smooth animations and better battery

278
00:18:55,220 --> 00:18:56,720
life.

279
00:18:56,720 --> 00:19:00,160
That'd be a heck of a thing to see, especially if they do it by the end of the year.

280
00:19:00,160 --> 00:19:04,480
That would be really impressive, and in my opinion, pretty much the best case scenario

281
00:19:04,480 --> 00:19:05,880
for work like this, I'd say.

282
00:19:05,880 --> 00:19:09,200
I mean, I'd be blown away, honestly.

283
00:19:09,200 --> 00:19:13,320
And I wouldn't be surprised if the project doesn't make a funding push to try to hire

284
00:19:13,320 --> 00:19:18,400
Rosenzweig full time so she can really get this thing across the finish line.

285
00:19:18,400 --> 00:19:19,400
Well keep an eye on it.

286
00:19:19,400 --> 00:19:23,080
Keep an eye on everything else going on in the world of Linux and open source, so don't

287
00:19:23,080 --> 00:19:24,080
miss a single episode.

288
00:19:24,080 --> 00:19:30,480
Go to linuxactionnews.com slash subscribe for all the ways to get every single release.

289
00:19:30,480 --> 00:19:35,520
And linuxactionnews.com slash contact for ways to get in touch.

290
00:19:35,520 --> 00:19:36,840
Did we miss a story this week?

291
00:19:36,840 --> 00:19:40,800
Boost in with a new podcast app and tell us what you'd like to have heard us cover.

292
00:19:40,800 --> 00:19:46,360
We'll be back next week with our take on the latest Linux and open source news.

293
00:19:46,360 --> 00:19:47,520
Thanks for joining us.

294
00:19:47,520 --> 00:20:05,120
And that's all the news for this week.

