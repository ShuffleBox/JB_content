Hello, and welcome to Linux Action News, episode 201, recorded on August 8th, 2021.
I'm Chris.
And I'm Wes.
Hello, Wes, from a very warm downtown Salt Lake City, let's do the news.
As we approach the 30th anniversary of our dear Linux, Google's security team is taking
a look at what might still be missing from the project.
Google security team member Kees Cook wrote a blog post calling for more organizations
to devote a greater number of engineers to the upstream Linux kernel.
Besides acknowledging the need for more upstream kernel developers, the post also encourages
vendors that are building devices and products around Linux to use the latest stable or LTS
kernel.
Noting that stable kernel releases see close to 100 new fixes each week, but given that
rate of change, unfortunately, vendors are not consistently picking up the latest fixes.
And in some cases, they're just trying to cherry pick the quote unquote, important ones.
Realistically, Google's Android ecosystem contributed to a lot of the devices out there
shipping in this cherry picked fix state with weird kernels.
And so in that regard is good to actually see Google putting effort into this and drawing
attention to this problem.
And it legitimately does seem to be an area of focus for Google recently, even despite
their increased efforts around fuchsia.
This call for more engineers is in addition to Google's recent backing of rust in the
Linux kernel, which is also initiative limited by manpower and one that Google is doing something
about.
So this blog post calling for more than just kernel developers, it makes a lot of sense.
It also calls for more code review, it calls for more testing, it calls for more infrastructure
around the Linux kernel.
And it also draws attention to the shortage of engineers who can work on security and
compiler tool chain development, a very complicated area.
And when I was reading this post, I couldn't help but take away an underlying message that
cook clearly feels that this one bug at a time technique vendors currently follow just
isn't going to scale and something automated at a grander scale is required.
Google estimates that the Linux kernel needs at least another 100 engineers focused on
security and on those important tool chains.
Now cook does partly blame the C programming language for some of this, saying with Linux
written in C, it will continue to have a long tail of associated problems and that's one
reason rust keeps coming up in regards to the Linux kernel.
Even beyond the kernel, cook thinks that things like the MITRE common vulnerability and exposures
list or CVE list used to track and assess the importance of security issues and bugs
doesn't really think that's up to the task since not all security flaws actually get CVE
assigned.
And when they do, it's not always in a timely manner.
As far as cook and the team at Google seem to see it, the only solution is to continually
update to the latest version of the stable released kernel.
As cook put it in the blog post, quote, performing continuous kernel updates faces enormous resistance
within an organization due to fear of regression.
I love the point that he makes in this post.
He believes that the problem with updating is not that the kernel might cause a regression,
it's that vendors don't have sufficient test coverage and automation to know if something
is going to break.
And cook points out that testing just has to take priority over individual fixes.
Another issue with the whole mess we're in right now is that many vendors are still using
old kernels and then are forced to backport whatever quote unquote important fixes that
they identify.
And that just means there's a whole bunch of redundant work going on as multiple engineers
at different companies fix essentially the same problem.
And unfortunately, this is not an issue going away.
Cook notes that Google's fuzzing tool called Syscaller is currently reporting nearly 1000
possible issues in the kernel.
About 400 or so of those are fixed every year, and that's good, but the number is growing
by over 100 per year as new ones are found.
Also in Linux security news this week, your favorite web browser had a significant security
flaw found that results in your site login info being sent in clear text and it seems
the symptoms discovered have remained unreported for quite some years.
So update your package cache because this one's going to need a patch.
The venerable and irreplaceable Lynx browser, well at least the version from the Debian
Experimental and Debian 8 Archive, will transmit a username and password in clear text even
when the site in question is already using SSL.
Yeah, when a user has a URL where they've prepended the username and password to it,
Lynx just happily sends that in the clear text and you can easily pick it up with a
tool like Wireshark.
I mean, we're having some fun here, but in actuality, this may be a serious issue impacting
some server side workloads and of course Richard Stallman.
I guess we'll just have to put that week with Lynx challenge on hold for now.
In more serious security news, Intel might have a series of patches that could improve
security in your virtual machines.
As part of their work around Trust Domain Extensions or TDX support for Lynx, Intel
engineers are proposing a driver filter option which would allow administrators to set up
allow and deny lists of drivers that can or cannot be loaded by a booted kernel.
The goal here is to reduce the attack surface within a guest virtual machine while still
using the same kernel as the host machine.
When booting the guest, via the kernel command line, the admin can just specify the specific
drivers that are allowed to be loaded by that kernel.
Or alternatively, a list of drivers that kernel shouldn't load, depending on how you want
to configure things.
Now, don't worry, by default, Intel's proposal won't change any of the regular behavior
of the kernel, but it would add a new handy framework that should make it straightforward
to specify what kernel drivers are permitted without having to actually remove any modules
from the virtual machine or even rebuild a custom kernel just for that.
This new release brings another level of maturity to the project with plenty of new features.
But the biggest user-facing change in this release has got to be support for Bluetooth
audio devices automatically switching between headset and audio profiles.
Hallelujah Wes!
If you've ever been disappointed with the audio quality of a Bluetooth headset when
you have paired it to your Lynx machine, this is just going to make such a huge difference.
It is so fantastic to see this change.
I remember when I got my first pair of Bluetooth headphones and tried them with Lynx before
trying them with any other system, and I was legitimately worried they might be broken.
It just sounded so bad.
Oh man.
I mean, okay, yeah, I was eventually able to fix it, but I know my way around PAVU control,
and I don't think many Linux users really do.
But for those who do, there are also some exciting improvements to support pro audio
workflows in this release, including support for multiple sample rates, as well as a whole
batch of general and performance-specific improvements.
Another story that we've pledged to follow is Samsung's in-kernel Samba server.
Because as you already know, turning your kernel into a file server always listening
for remote connections is awesome and could never go wrong.
But today, like a dirty web browser, Samba is implemented in user space.
But the wizards over at Samsung have been pursuing an SMB file server implemented in
kernel space, with an aim for better performance and wiring up new features such as RDMA support
that can be implemented with ease inside the kernel.
Another motivating factor for Samsung is achieving a smaller footprint and a narrower scope of
features when compared to Samba.
How's it going?
Well, the seventh round of patches were posted this past Thursday, with the hopes of getting
KSMBD, as they're calling it, upstreamed into the mainline kernel soon.
Now, clearly, this is not a full Samba server meant to replace a big enterprise Samba installation
doing a lot of complicated tasks.
But while I can hear Chris laughing right now, I wouldn't be too surprised if this
ends up on one of his Raspberry Pi's before long.
So, let's get to it.
This year alone, they've released custom images to general availability, making it easier
for customers to create, store, and deploy one image across multiple machines.
They added two free security solutions, including the Cloud Firewall and Private VLANs, and
for developers, they've extended the tools to support Kubernetes, Terraform, and Ansible
modules, all while having one of the cleanest and easiest to use UIs in the business.
Linode lets you turn any idea into something you can actually bring to life on the web.
And if you ever get in any trouble, well, they have the best support team.
Their support team won five Stevie Awards, including the coveted People's Choice Award.
There's nobody that doesn't like Linode.
They have hundreds of guides and tutorials to help you get started as well, then once
you're up and running, you can take advantage of those advanced features like S3 compatible
object storage, and their super fast SSDs.
Linode was recently reviewed by Cloud Spectator as having the fastest CPUs in the industry.
I mean, they compared all of the major cloud providers, and Linode beat them all.
Their one-click Minecraft server lets you specify features like NPCs, game mode, and
critical game specifications with a simple one-click deployment.
So go to linode.com slash LAN and get that $100 60-day credit on your new account, and
you support the show.
It's a great way to learn, too.
If you want to try something, you could do a nice side-by-side comparison, kick it off
on Linode, and pick the winner, linode.com slash LAN.
Linux dot ting dot com.
Are you sick of overpaying for cell service?
Because you should be.
The duopoly out there has wrecked the market, so Ting's here to bring us all a breath of
fresh air.
In fact, for a limited time, you can sign up for Ting's unlimited plan.
Just pay $25 a month for the first three months.
That's $20 off the standard unlimited plan, and it's quite the offer.
Of course, there's a plan for everybody.
Ting's set 12 plan gives you 12 gigs of data with unlimited talk and text for just $35
a month.
So, I know a good family plan is hard to find, and Ting's got you covered there.
If you use 2 gigs, or if you use 20 gigs, there's a perfect Ting plan for you.
And every plan gets access to Ting's award-winning customer service with nationwide LTE and 5G
coverage.
Plus, the freedom of no contracts covered.
That's awesome.
And there's three great networks to choose from, so it's simple to switch to Ting.
Pretty much any phone will work with Ting.
You just start by going to linux.ting.com.
You get $25 off, and you can check your current phone, see if it's compatible.
Create an account, pick the plan that's right for you, and then Ting will send you a SIM
card that you pop in your phone, and you get activated in minutes.
Their dashboard makes it simple, makes it straightforward.
It sets the bar.
And cutting your phone bill in half has never been easier with Ting's brand new plans.
Go check out the new Shiny and save $25.
It's the next generation of Ting Mobile.
It's here, and it's awesome.
Linux.ting.com Gaming isn't really a focus of this show,
and not something we really plan to expand into.
But it is an area of major Linux development this week, and the wider implications might
be some of the biggest news in the Linux desktop for years.
As the general tech sector begins to react to the Steam Deck, we're seeing more and
more positive coverage of the Linux OS powering that hardware.
Recently, Linus Sebastian of Linus Tech Tips visited Bell's office in Bellevue, Washington.
And during that visit, Sebastian was given unprecedented access to Deck prototype hardware.
Out of all the tests performed, something we've all been very interested in stood out.
Plugging in a monitor via USB-C and getting access to that sweet, sweet Plasma desktop.
I would like to try USB-C DisplayPort in.
Is it worth a shot?
All right.
Hey, it should be fine.
That's famous last words right there, hey?
If it doesn't work, if this even makes it into the video, we're not...
Just like that!
So if you weren't already convinced that this is a full-fat PC, just in a handheld form
factor, well, this should pretty much do it.
So can I just...
I'm gonna switch to external screen, right?
That sounds right?
Because it's not a laptop, but the OS we're running thinks it's a laptop.
And if you were curious if it's gonna run 4K 60 hertz, that's your answer right there.
I think...
Ooh, it might be at 30 right now.
It's hard to tell.
I'm so used to...
No, it's at 60 hertz!
Freaking awesome!
Just like that!
How relieved are you guys right now?
While watching the video, I was also really interested in getting a sense of the gaming
performance.
I mean, after all, I will probably use this more as a portable PC than a gaming console,
but how well the Steam Deck Games is gonna make or break this device.
The game's running really smoothly though.
I've been extremely pleased with the gaming experience and everything I've tried so far.
But I think the big breakthrough here, the one we see rippling throughout the tech press,
is really on display in a different video on the Linus Tech Tips channel, the WAN show
from August 6th.
This is kind of like, it's like that, but on ROIDs, right?
The smallest form factor gaming PC, because it's more than just a handheld console.
It is a full-fledged PC.
The fact that it has a USB-C docking connector on it means that you can power this thing,
it's two USB power delivery off of a device that can run a display, peripherals, high-speed
networking.
The sky is the freaking limit.
It is running a desktop-grade Linux operating system.
All Valve has done is they've put a bunch of development work into their Proton, it's
not an emulator, it's more like a translation layer between DirectX and, well, whether it's
Vulkan or OpenGL, I guess it doesn't really matter, to Proton.
Because both of those are supported on Linux.
So they've put this development work into this kind of, this translation layer, and
then this, you know, basically what is Steam big picture skin that runs on top of the translation
layer to play your games, but other than that, it's just Linux.
It's just, it's running freaking Linux.
You know, unlike what Nintendo allows you to do, you can say, hey, look, I actually
don't want to play games right now, and you can do whatever the f*** you want.
That is so cool.
It's just a computer, man.
It was a major bug fix week over at the KDE project with many fixes to their core apps
and the touchscreen experience.
The project really appears to be making a solid effort to get things ready for the Steam
Deck.
Yeah, our friend Nate Graham notes in his most recent This Week in KDE blog post, we're
really trying to improve the stability of our software now that it's starting to be
used in more third-party products like the Steam Deck.
The idea is that this will hopefully become a virtuous cycle of better and more stable
products leading to more use, leading to even better and more stable products.
And Linux gaming isn't all about Valve and the Steam Deck either.
Lutris 0.5.9 Beta 1 is out and it's a killer update to this open source Linux game manager.
And I think the really big feature here amongst a ton of stuff in this release is support
for the Epic Game Store.
But really, even if you don't have any Epic games, there's so much good stuff in this
release of Lutris, it's worth checking out if you haven't grabbed Lutris in a while.
Speaking of improvements, the schedule for this year's XDC21 X.org Developers Conference
was posted this week.
The conference is, once again, a virtual event, given the state of the pandemic.
But thankfully, it's still going forward.
Michael Arable over at Ferronix points out that Intel are again organizing much of the
event, as well as Intel being the sole Platinum sponsor this time.
Yeah, it's a bit of a shame to hear that.
I wish this conference got more support because the list of topics alone is very impressive.
And some of them, like several of them, I'd argue, are discussing hard problems that are
critical to Linux's desktop success in the future.
No kidding.
We need some of these issues tackled.
The event itself runs from the 15th to the 17th of September.
Here's just a taste of some of those important topics.
The current state of reverse engineering the GPU found in Apple's M1.
Updates on the Raspberry Pi Vulkan driver.
And perhaps directly to your point, Chris, David Edmondson with KDE will be talking about
ongoing work and an early proof of concept for increasing Wayland robustness so if that
compositor crashes, doesn't have to bring down your entire desktop session.
Yes, please.
And just like so many talks in there just look really good.
Like they're clearly tackling these problems.
They're thinking about things that I wondered if anybody was going to address and they are
bringing up issues that, of course, I had never had any idea about.
So again, it's the 15th to the 17th and we'll have a link for more information in the show
notes on that.
Seems like there could be a lot of good info, so we will try to keep an eye on it as well.
Even if something develops out of there, of course, cover it for you.
But before we go, I just wanted to say thank you to everyone who made it out to our Salt
Lake City meetup.
It was a blast.
It's been a long time since we've been able to do something like this.
And we had folks there that were just learning Linux for the first time.
Like they came to the meetup because they wanted to understand more about Linux and
they've heard there was this community.
And so they came to our meetup and she had a great time and she walked away not only
a listener but now a new Linux user.
But of course, we also had security analysts there.
We had developers.
We had engineers.
We had folks that made it from Wyoming, Montana, Idaho, all the Salt Lake City.
And of course, we had locals.
And Brent was there with me.
He was the swag master handing out stickers and shirts, which were well received.
There's some pictures of that on my Twitter feed at Chris Lass, if you want to see some
of those.
Or join our telegram group for frequent trip updates, jupitabroadcasting.com slash telegram.
Yeah, how else are you going to get your Levi fix?
We do have a few more shows from Salt Lake City, Coder Radio and Linux Unplugged.
They will be live if everything goes as planned.
So you can get the times for that at jupitabroadcasting.com slash calendar.
But by the time we are recording the next Linux action news, we'll be just outside the
Denver area.
You can keep tabs on our journey over at colonytracker.live and hit that micro meetup link if you're going
to be in our route.
Maybe if the timing works out, we can catch up and grab a bite or say hi and get some
swag.
We have swag on board.
Or if you have any hot route tips, if you see where we're going and think we should
know about some construction or some problem along the way, that micro meetup form could
technically work for that as well.
But for this here podcast, you're going to want to go to linuxactionnews.com slash subscribe.
So that way you get every new episode as we release it.
And linuxactionnews.com slash contact for ways to keep in touch.
If you enjoy Linux action news and you think you know someone who might also enjoy the
show, maybe they're in the biz and they need to stay up to date on what's going on, send
them a link to your favorite episode and help spread the word.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us.
And that's all the news for this week.
