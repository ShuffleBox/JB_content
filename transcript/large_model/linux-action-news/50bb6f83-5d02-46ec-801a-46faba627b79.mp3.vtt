WEBVTT

00:00.000 --> 00:09.560
Hello, and welcome to Linux Action News, Episode 257, recorded on September 6th, 2022.

00:09.560 --> 00:10.680
I'm Chris.

00:10.680 --> 00:11.680
And I'm Wes.

00:11.680 --> 00:12.680
Hello, Wes.

00:12.680 --> 00:14.640
Let's do the news.

00:14.640 --> 00:20.440
Linux users living the enterprise lifestyle in a Windows shop felt the sting of the Microsoft

00:20.440 --> 00:26.560
strategy text this week when they discovered the Teams app for Linux is being discontinued.

00:26.560 --> 00:32.600
Yeah, that stings for a lot of users because it can already be pretty tough as a Linux

00:32.600 --> 00:35.500
user to exist in that kind of environment.

00:35.500 --> 00:40.480
And apps like Teams can be sort of like a cold drink of water to a user stuck in a compatibility

00:40.480 --> 00:41.480
desert.

00:41.480 --> 00:44.680
I guess I'm just slightly surprised by this.

00:44.680 --> 00:48.700
I'm not shocked, but I am slightly surprised since a big deal was made about Teams coming

00:48.700 --> 00:54.280
to Linux in the first place, but when you realize that Microsoft doesn't even make a

00:54.280 --> 00:59.280
native version of Teams for Windows, how much support can you really expect for their Linux

00:59.280 --> 01:00.280
port?

01:00.280 --> 01:03.840
In the announcement, Microsoft informed Linux users that they had figured out what their

01:03.840 --> 01:08.640
next best option would be saying, quote, we found the best way to act on this is to offer

01:08.640 --> 01:14.800
a Teams Progressive Web App, a PWA, on Linux as a new feature of our current web client,

01:14.800 --> 01:18.840
which we'll be making available to our Linux customers in the coming months.

01:18.840 --> 01:26.200
While that was a considerably insufficient answer to many, and the upset here has been

01:26.200 --> 01:31.920
notable, the real story is why Microsoft is making this change.

01:31.920 --> 01:40.520
It appears to be related to moving Teams off of Electron and onto Microsoft's edge-based

01:40.520 --> 01:49.080
WebView2, which at least as of this recording, has no Linux or Mac OS support.

01:49.080 --> 01:54.160
Yeah, and I think a lot of people felt, okay, well then just keep supporting the Linux version

01:54.160 --> 01:57.520
until the WebView2 port is ready.

01:57.520 --> 02:01.080
And I don't know a lot of Linux users that love Electron, and I don't really know if

02:01.080 --> 02:06.520
WebView2 is significantly better because it's still web technologies, although indications

02:06.520 --> 02:09.960
seem to be that it is at least notably better than Electron.

02:09.960 --> 02:15.360
I think for some, just losing an application like this isn't a great answer for them, and

02:15.360 --> 02:19.880
while they were hoping for something other than Electron, this isn't what they were asking

02:19.880 --> 02:20.880
for.

02:20.880 --> 02:24.840
But you know, I guess the question I have to the audience, is it such a bad pill to

02:24.840 --> 02:32.840
swallow to use a web app if it means long-term better technology will be used?

02:32.840 --> 02:38.560
Microsoft notes, quote, Teams PWA is an evolution of our Linux web experience.

02:38.560 --> 02:42.560
It offers the best of the web with key functionalities of client.

02:42.560 --> 02:47.400
Things like zero install, lightweight, and a rich set of features.

02:47.400 --> 02:53.400
But it's still in a web browser, which is a deal breaker for some, and has led to a

02:53.400 --> 02:57.240
sizable amount of online pushback.

02:57.240 --> 03:02.660
Maybe this will accelerate Microsoft's Linux port of WebView2, and they do currently list

03:02.660 --> 03:07.020
that as a major update they plan for the future.

03:07.020 --> 03:17.260
But in the meantime, I'm afraid your web app is now a web app.

03:17.260 --> 03:20.880
Arch users took another one in the face this week, so the rest of the Linux world doesn't

03:20.880 --> 03:22.000
have to.

03:22.000 --> 03:27.400
It seems a recent grub issue impacts many Arch and Arch derivative ties.

03:27.400 --> 03:32.200
This takes a little bit of setup to understand, but it all started when some grub developers

03:32.200 --> 03:36.520
were trying to improve support for EFI systems.

03:36.520 --> 03:41.600
Specifically a handy dandy menu option that allows users to reboot directly into the system

03:41.600 --> 03:42.600
firmware.

03:42.600 --> 03:45.240
Maybe you've seen it on your system, in fact.

03:45.240 --> 03:49.000
You've got your Linux Mint entry, you've got your Nix OS entry, and then maybe if your

03:49.000 --> 03:53.020
system supports it, you've got a little menu entry that just reboots us right into the

03:53.020 --> 03:55.140
BIOS interface.

03:55.140 --> 04:01.180
Now before this most recent series of patches to grub, this firmware reboot option was only

04:01.180 --> 04:07.560
really available if grub had detected that your system supported it at grub installation

04:07.560 --> 04:13.780
time, not at run time, not at boot time, but whenever you happen to have installed grub.

04:13.780 --> 04:16.840
And this meant that if your system happened to have grub installed when you were booting

04:16.840 --> 04:22.080
via legacy boot, or maybe you'd copied things over, or you'd switched to EFI down the road,

04:22.080 --> 04:26.500
well even if your system supported it, you weren't going to get that option.

04:26.500 --> 04:31.920
To address that, this series of grub updates change that behavior to instead check at run

04:31.920 --> 04:37.280
time, see if the system booted through EFI, see if it supported rebooting into the firmware,

04:37.280 --> 04:40.040
and if it did, display the menu entry.

04:40.040 --> 04:45.700
Okay, all good, and to do this grub relies on a command known as fw setup.

04:45.700 --> 04:50.740
Now previously this command was only available if UEFI support was found at the installation

04:50.740 --> 04:53.220
time like Wes had said.

04:53.220 --> 04:58.240
As part of these recent updates and patches, grub started using this command in just more

04:58.240 --> 05:05.760
scenarios, and as such, it made it so that, and as such, it was enabled for all installations

05:05.760 --> 05:11.000
rather than only systems where UEFI support had been detected during install.

05:11.000 --> 05:16.800
Unfortunately, the result of all of these different changes meant that on some arch

05:16.800 --> 05:22.920
and arch type systems, after you did a system update, it was possible that your grub configuration

05:22.920 --> 05:28.460
would reflect this new pattern of having fw setup available, but unless you'd intervened

05:28.460 --> 05:33.040
and manually run grub install yourself, or if a friendly package manager out there had

05:33.040 --> 05:39.280
done it for you, you might not actually have fw setup available, and that of course could

05:39.280 --> 05:41.460
break your boot.

05:41.460 --> 05:47.720
That's not good, nobody wants a broken boot, and the thing is, this was kind of tricky,

05:47.720 --> 05:53.540
maybe nearly impossible to catch in testing, and didn't really get discovered until a larger

05:53.540 --> 05:59.280
user base started using it in production, because this issue just simply did not impact

05:59.280 --> 06:05.480
all grub users, it did not impact new installs, and to make things even more problematic,

06:05.480 --> 06:11.480
a lot of arch users, especially the cutting edge arch users, aren't even using grub.

06:11.480 --> 06:17.140
But you know, it is what it is, and thankfully the issue now has been caught, and if you

06:17.140 --> 06:20.760
wound up with an unbootable system, first of all, thank you for taking it in the face

06:20.760 --> 06:25.760
so we don't have to, and second of all, we have what seems to be the most popular fix

06:25.760 --> 06:30.720
linked in our show notes.

06:30.720 --> 06:39.120
It's been a few releases since we last highlighted a new Pipewire release, but 0357 just shipped

06:39.120 --> 06:43.040
this week with a few fantastic features.

06:43.040 --> 06:48.160
As an Opus fan, I was really happy to see that Pipewire can now send and receive Opus

06:48.160 --> 06:51.300
data over Bluetooth, that's great.

06:51.300 --> 06:57.640
But perhaps even better, or at least immediately practical, an AAC decoder was added so that

06:57.640 --> 07:03.440
Pipewire can now also function as an A2DP AAC receiver.

07:03.440 --> 07:07.600
That seems really useful for little gadgets you might want to build, turn a Raspberry

07:07.600 --> 07:10.520
Pi into an A2DP receiver.

07:10.520 --> 07:14.200
I can also imagine there's a lot of uses for that in automotive Linux.

07:14.200 --> 07:18.360
And of course, you got the list of always good to see bug fixes every single time.

07:18.360 --> 07:23.680
And like you said, Wes, we don't cover every Pipewire release, but they tend to be so great

07:23.680 --> 07:25.960
that we debate doing so every time.

07:25.960 --> 07:29.280
And this one just got put over the top with those two new features alone.

07:29.280 --> 07:33.320
There's been a lot of improvements to tooling around Pipewire, various module improvements,

07:33.320 --> 07:36.040
and of course, fixes going into Pipewire core.

07:36.040 --> 07:42.040
The great thing is, the API and the ABI are compatible with previous releases of Pipewire

07:42.040 --> 07:47.400
in the 3 series.

07:47.400 --> 07:56.400
Some big milestones to report this week, starting with Nmap 7.93, the 25th anniversary edition

07:56.400 --> 07:58.720
that's just been released.

07:58.720 --> 08:06.040
Gordon Leon, founder and lead Nmap developer wrote, quote, 25 years ago, I released the

08:06.040 --> 08:12.720
first version of Nmap in a Frac article named The Art of Port Scanning.

08:12.720 --> 08:17.880
I never thought I'd still be at it a quarter of a century later.

08:17.880 --> 08:23.960
But that's because I also didn't anticipate such a wonderful community of users and contributors

08:23.960 --> 08:27.360
spanning those decades.

08:27.360 --> 08:32.800
You've helped Nmap blossom from a fairly simple port scanner to a full featured network discovery

08:32.800 --> 08:37.580
application trusted by millions of users every day.

08:37.580 --> 08:40.680
So thanks for that.

08:40.680 --> 08:49.240
And another milestone is a big happy birthday to SUSE, which turned 30 this week.

08:49.240 --> 08:54.700
And as a gift, we're reminded just what SUSE stands for.

08:54.700 --> 09:04.480
It's Software und Systementwicklung, or Software and Systems Development in English.

09:04.480 --> 09:10.080
Linode.com slash LAN, go there to get $100 in 60 day credit on a new account.

09:10.080 --> 09:12.680
It's just a great way to support the show too, because you're getting yourself something,

09:12.680 --> 09:15.640
trying out something cool, supporting the show.

09:15.640 --> 09:17.760
Linode is fast, reliable cloud hosting.

09:17.760 --> 09:21.000
It's the best option out there with the best support in the business.

09:21.000 --> 09:23.640
Real humans all the time, every day.

09:23.640 --> 09:25.600
What else is structured like Linode?

09:25.600 --> 09:30.000
Linode's how we run everything we've built, including our new website that builds and

09:30.000 --> 09:32.080
is published on Linode.

09:32.080 --> 09:37.040
Linode's S3 compatible object storage is how we run the backend for our next cloud storage

09:37.040 --> 09:41.640
so we're not constantly worried about checking disk space and undeleted files and things

09:41.640 --> 09:42.640
like that.

09:42.640 --> 09:47.640
And Linode is 30 to 50% cheaper than the major hyperscalers out there that just want to adopt

09:47.640 --> 09:52.440
you and basically make you one of their own, assimilate you into the collective.

09:52.440 --> 09:56.600
You will become one with the Borg, but with Linode, resistance is futile.

09:56.600 --> 10:01.500
They can be part of your multi-cloud strategy since they are 30 to 50% cheaper after all.

10:01.500 --> 10:06.080
So go build something, go learn something, go try one of their 11 data centers around

10:06.080 --> 10:07.080
the world.

10:07.080 --> 10:11.220
Maybe their cloud firewall, their simple backups, or their Kubernetes support.

10:11.220 --> 10:12.840
Go try it for yourself and support the show.

10:12.840 --> 10:19.160
So go to Linode.com slash LAN, get that $100 in 60 day credit and kick the tires for yourself.

10:19.160 --> 10:21.960
There's a reason they've been around for a long time on this show.

10:21.960 --> 10:23.520
Our listeners love Linode.

10:23.520 --> 10:25.040
I know you will too.

10:25.040 --> 10:26.580
So go support the show and try it out.

10:26.580 --> 10:33.520
One more time, Linode.com slash LAN.

10:33.520 --> 10:35.400
Collide.com slash LAN.

10:35.400 --> 10:40.320
Collide is endpoint security that uses the most powerful untapped resource in IT.

10:40.320 --> 10:41.640
It's end users.

10:41.640 --> 10:45.120
So if you're trying to achieve security goals for yourself or a third party audit, maybe

10:45.120 --> 10:50.000
the new boss, whatever it is, the conventional wisdom in the past would have been to deploy

10:50.000 --> 10:54.840
some sort of device management software, lock every device down like it's Fort Knox, employ

10:54.840 --> 11:00.580
these policies from afar, and of course put a little performance overhead on their system,

11:00.580 --> 11:06.480
introduce possible new points of security vulnerabilities and end users hate it.

11:06.480 --> 11:08.580
Well, Collide does things differently.

11:08.580 --> 11:14.640
Instead of forcing changes on the users, Collide sends them security recommendations via Slack.

11:14.640 --> 11:18.280
Collide will automatically notify your team when their devices are insecure and give them

11:18.280 --> 11:22.140
a step-by-step instruction on how to solve that problem.

11:22.140 --> 11:26.960
And by reaching out to employees via a friendly Slack DM and then educating them about company

11:26.960 --> 11:31.960
policies, Collide can help you build a culture in which everyone contributes to security

11:31.960 --> 11:35.680
because everyone understands how and why to do it.

11:35.680 --> 11:39.360
And for IT admins, Collide provides a single dashboard that lets you monitor the security

11:39.360 --> 11:45.120
of your entire fleet, whether they're running on a Mac, Windows, or yeah, you bet, Linux.

11:45.120 --> 11:49.120
You can see at a glance which employees have their disencrypted, their OS up to date, and

11:49.120 --> 11:55.040
a password manager installed, making it easy to prove compliance to your auditors, customers,

11:55.040 --> 11:56.040
and leadership.

11:56.040 --> 12:02.560
So that's Collide, user-centered, cross-platform endpoint security for teams that Slack.

12:02.560 --> 12:06.020
You can meet your compliance goals by putting users first.

12:06.020 --> 12:11.200
Visit collide.com slash LAN to find out how, and you go to that link, you try it out, they're

12:11.200 --> 12:16.120
going to hook you up with a goody bag, which includes a free t-shirt, which is basically

12:16.120 --> 12:18.440
how I've built out my entire wardrobe.

12:18.440 --> 12:19.440
And you know what?

12:19.440 --> 12:20.440
I ain't hating that game.

12:20.440 --> 12:22.560
Get a free t-shirt just for activating a free trial.

12:22.560 --> 12:34.600
So go to collide.com slash LAN, that's K-O-L-I-D-E.com slash L-A-N, collide.com slash LAN.

12:34.600 --> 12:39.720
For our last story this week, we're going underwater.

12:39.720 --> 12:46.440
Subsea Cloud, a company proposing to put commercial data centers in deep ocean waters, has moved

12:46.440 --> 12:49.960
closer to a physical launch.

12:49.960 --> 12:55.600
The company plans to install a pod near Port Angeles in Washington state.

12:55.600 --> 13:01.880
That very first pod will start with a 20-foot shipping container at around 30 feet underwater,

13:01.880 --> 13:10.000
holding 800 servers, although eventually hoping to scale that operation to 100 such pods.

13:10.000 --> 13:14.280
This might sound familiar because another local company tried this before.

13:14.280 --> 13:19.480
Microsoft wrapped up a multi-year experiment in 2020.

13:19.480 --> 13:23.360
The overarching goal of Project Natick is to evaluate the feasibility of underwater

13:23.360 --> 13:24.360
data centers.

13:24.360 --> 13:28.040
Phase one was just to be able to figure out can we get computers into a container and

13:28.040 --> 13:31.840
can we deploy them in the water without it leaking and do the computers survive and how

13:31.840 --> 13:33.320
well do they last.

13:33.320 --> 13:41.680
Phase two was to show that we can make it in a manufacturable production scale component.

13:41.680 --> 13:48.000
So the container behind me, it fits on a trailer, it fits on a cargo ship and it allows us to

13:48.000 --> 13:52.680
actually build up this data center to any size that we want.

13:52.680 --> 13:58.240
And Microsoft's tests found the underwater data center had a lower failure rate than

13:58.240 --> 14:01.400
the identical test unit on land.

14:01.400 --> 14:05.440
So far as we've been monitoring this and the data center that we have on land that are

14:05.440 --> 14:10.520
using the same components, we see one-eighth the failure rate in the ocean data center

14:10.520 --> 14:12.280
than we do on land.

14:12.280 --> 14:16.520
Now Microsoft attributes that difference in failure rate primarily to just the very stable

14:16.520 --> 14:23.160
temperatures and humidity conditions under the sea, but also, frankly, no humans to make

14:23.160 --> 14:26.540
mistakes and bump things plays a factor as well.

14:26.540 --> 14:32.560
But unlike Microsoft, Subsea Cloud does not use a pressure vessel, instead it uses a more

14:32.560 --> 14:37.740
conventional shipping container with pressure equalized between the inside and outside.

14:37.740 --> 14:42.240
That not only lowers costs, but it actually turns out to be more effective in dissipating

14:42.240 --> 14:43.720
thermal load as well.

14:43.720 --> 14:48.560
And now Subsea Cloud wants to commercialize this idea, so the company is starting small,

14:48.560 --> 14:50.360
both in scope and depth.

14:50.360 --> 14:55.320
That first data center pod in Port Angeles will be known as Jules Verne.

14:55.320 --> 15:00.600
Inside Jules Verne, there's space for about 16 standard issue data center racks, accommodating

15:00.600 --> 15:03.000
about 800 servers.

15:03.000 --> 15:10.140
Additional capacity, if and when required, is delivered by just adding another pod.

15:10.140 --> 15:12.440
And don't worry, they're not skimping on the connection.

15:12.440 --> 15:17.400
The pod to shore link in this deployment provides 100 gigabits.

15:17.400 --> 15:23.640
I can't help but kind of love this idea because as a sysadmin, as a, as a deployer, you get

15:23.640 --> 15:27.180
to pick and choose what goes into the pod.

15:27.180 --> 15:28.180
It's your systems.

15:28.180 --> 15:34.560
And you get an idea of that from the Subsea CEO Maxi Reynolds, who says, quote, data center

15:34.560 --> 15:37.580
space rental is similar to just leasing an office space.

15:37.580 --> 15:42.080
Our leasable spaces provide our tenants network connections, stable power supply, cooling

15:42.080 --> 15:43.680
and security systems.

15:43.680 --> 15:48.320
And then she goes on to say, quote, we ensure the facility is capable of providing the required

15:48.320 --> 15:50.380
IT services when being underwater.

15:50.380 --> 15:54.120
We build, deploy and maintain the Subsea data centers.

15:54.120 --> 15:58.640
And you just know there's not going to be very many Windows boxes down there.

15:58.640 --> 16:01.600
Nobody wants Windows underwater.

16:01.600 --> 16:05.340
Maybe like us, though, you're wondering what the environmental impact of an underwater

16:05.340 --> 16:07.120
data center might be.

16:07.120 --> 16:12.440
Well, both Microsoft and Subsea Cloud say it's a net positive.

16:12.440 --> 16:18.280
According to Subsea, there are significant savings in electrical use, which matters because

16:18.280 --> 16:23.320
at three percent of the global electricity supply, data centers have the same carbon

16:23.320 --> 16:26.280
footprint as the aviation industry.

16:26.280 --> 16:32.160
Subsea claims their data centers reduce the typical CO2 a traditional data center emits

16:32.160 --> 16:35.480
by 40 percent.

16:35.480 --> 16:40.000
Forty percent at scale is a massive difference.

16:40.000 --> 16:44.680
And for one thing, that's achieved because there's no air conditioning and the entire

16:44.680 --> 16:47.440
thing is passively cooled.

16:47.440 --> 16:49.220
That's massive right there.

16:49.220 --> 16:51.640
The other thing is they don't use any water.

16:51.640 --> 16:55.920
In fact, the focus is keeping water out.

16:55.920 --> 17:00.200
Inside the servers are also immersed in a dielectric coolant, an oil which conducts

17:00.200 --> 17:06.020
heat but not electricity, and the Subsea pods are designed to passively disperse heat rather

17:06.020 --> 17:11.200
than using pumps to move the oil around, which you typically would see in a land-based immersion

17:11.200 --> 17:12.200
cooling system.

17:12.200 --> 17:17.320
And I think what's kind of tragic and ironic about land-based data centers, you know, all

17:17.320 --> 17:21.920
of them, is that they actually use millions of gallons of water a day.

17:21.920 --> 17:27.080
And studies have shown that over half of that water is estimated to be potable water.

17:27.080 --> 17:31.240
The Subsea data center uses no water.

17:31.240 --> 17:35.960
But what happens if something goes wrong, or a customer wants to replace one of their

17:35.960 --> 17:36.960
servers?

17:36.960 --> 17:43.880
Well, according to Subsea, customers can schedule periodic maintenance, including server replacement,

17:43.880 --> 17:49.100
and they say it should take between 4 to 16 hours for a team to get to the site, bring

17:49.100 --> 17:54.740
up the required pod or pods, and then replace any equipment.

17:54.740 --> 17:59.640
As for the lifespan of these underwater server rooms though, Subsea says the lifespan of

17:59.640 --> 18:04.960
the actual data center pod itself, the environment containing the servers, that should be around

18:04.960 --> 18:06.600
20 years.

18:06.600 --> 18:11.440
But of course, in line with a typical server lifespan and deployment, each pod would likely

18:11.440 --> 18:16.480
live on the seafloor for 3 to 5 years, as they're going to need to rotate the hardware

18:16.480 --> 18:19.940
in and out to keep up with the times.

18:19.940 --> 18:24.540
And Subsea says they build this with one or two failures being totally fine and they can

18:24.540 --> 18:27.680
continue on, but yeah, they have to build it so they can pull it out.

18:27.680 --> 18:31.680
And when they pull it out, they also have to drain it of all of that oil.

18:31.680 --> 18:33.440
So it's a big job.

18:33.440 --> 18:38.520
Subsea hopes that Jules Verne is going to kind of prove all of this stuff out for customers,

18:38.520 --> 18:42.040
and maybe attract the attention of some of the big hyperscalers out there.

18:42.040 --> 18:44.440
I think that's one of their strategies.

18:44.440 --> 18:48.820
It seems that this is really all just a first step, with deployments in the Gulf of Mexico

18:48.820 --> 18:54.240
and other locations already being considered, but we can't help find the entire idea of

18:54.240 --> 18:56.520
Linux Underwater totally fascinating.

18:56.520 --> 18:58.720
We'll keep an eye on it, see where it goes.

18:58.720 --> 19:04.440
So don't miss any updates to this or anything going on in the world of Linux, go to linuxactionnews.com

19:04.440 --> 19:08.200
slash subscribe for all the ways to get new episodes.

19:08.200 --> 19:13.520
And linuxactionnews.com slash contact for ways to get in touch.

19:13.520 --> 19:19.080
The new Jupiter Broadcasting website has launched, if you haven't checked it out, jupitabroadcasting.com,

19:19.080 --> 19:23.560
poke at it, find what's broken, and then go submit a GitHub issue, please.

19:23.560 --> 19:25.400
We'd appreciate the feedback.

19:25.400 --> 19:26.400
As for this show?

19:26.400 --> 19:27.400
Well, don't worry.

19:27.400 --> 19:32.960
We'll be back next week with our take on the latest Linux and open source news.

19:32.960 --> 19:33.960
Thanks for joining us.

19:33.960 --> 19:53.960
That's all the news for this week.

