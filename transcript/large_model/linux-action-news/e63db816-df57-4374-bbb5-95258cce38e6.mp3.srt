1
00:00:00,000 --> 00:00:16,460
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

2
00:00:16,460 --> 00:00:20,880
This is Episode 74, recorded on October 7th, 2018.

3
00:00:20,880 --> 00:00:21,880
I'm Chris.

4
00:00:21,880 --> 00:00:22,880
And I'm Joe.

5
00:00:22,880 --> 00:00:23,880
Hello, Joe.

6
00:00:23,880 --> 00:00:28,480
It's good to be connected with you, and it's a good week for all of us fans of big storage

7
00:00:28,480 --> 00:00:29,480
setups.

8
00:00:29,480 --> 00:00:32,080
Is this going to be on our Linux laptop or in the enterprise?

9
00:00:32,080 --> 00:00:36,160
Yeah, Red Hat's Stratus storage project has reached 1.0 stable.

10
00:00:36,160 --> 00:00:38,280
So this 1.0 milestone is a pretty big deal.

11
00:00:38,280 --> 00:00:39,520
Not all the features are there.

12
00:00:39,520 --> 00:00:42,280
We're not even talking full RAID capability yet.

13
00:00:42,280 --> 00:00:47,260
But soon, the conversation will change and comparisons will start to be made to the feature

14
00:00:47,260 --> 00:00:54,320
set of ZFS or ButterFS, but with much more flexible file system support and using a bunch

15
00:00:54,320 --> 00:00:58,200
of existing established safe tools on Linux to accomplish this.

16
00:00:58,200 --> 00:01:01,880
So Project Stratus is going to be a big deal when everything's all done, and it's going

17
00:01:01,880 --> 00:01:04,400
to be free and available to all Linux users.

18
00:01:04,400 --> 00:01:11,360
The key phrase there is going to be, because even at 1.0, it's not mature at all, is it

19
00:01:11,360 --> 00:01:12,360
really?

20
00:01:12,360 --> 00:01:14,640
You mentioned not having RAID support.

21
00:01:14,640 --> 00:01:20,080
That is a big deal, and that's not going to come until version 2.0.

22
00:01:20,080 --> 00:01:23,120
And the ZFS feature parity, that's not going to come until 3.0.

23
00:01:23,120 --> 00:01:28,560
So this is definitely one to watch, but I think that it's very much the testing phase

24
00:01:28,560 --> 00:01:29,560
right now, isn't it?

25
00:01:29,560 --> 00:01:32,000
It's not anywhere near ready for production.

26
00:01:32,000 --> 00:01:34,320
But don't be too surprised if it comes along quickly.

27
00:01:34,320 --> 00:01:38,620
A lot of the groundwork is now done with this 1.0 milestone, and some of the things they

28
00:01:38,620 --> 00:01:43,480
need to get some of that RAID support and feature set are existing tools in Linux.

29
00:01:43,480 --> 00:01:47,980
Remember here, Stratus itself is not a file system, so we don't have the delay and lag

30
00:01:47,980 --> 00:01:51,240
time of creating a file system and making sure it's safe like we've been watching with

31
00:01:51,240 --> 00:01:52,240
ButterFS.

32
00:01:52,240 --> 00:01:58,680
In fact, multiple independent file systems can be created and used and managed with Stratus.

33
00:01:58,680 --> 00:02:00,080
It's pretty great like that.

34
00:02:00,080 --> 00:02:04,920
So this isn't some big science project where we have to watch the creation of a new file

35
00:02:04,920 --> 00:02:06,400
system we'll use for 20 years.

36
00:02:06,400 --> 00:02:10,420
It's the bringing together of some existing tools and creating the services around them

37
00:02:10,420 --> 00:02:13,000
to have an API and management tools.

38
00:02:13,000 --> 00:02:16,200
That could progress fairly quickly, especially with the backing of Red Hat.

39
00:02:16,200 --> 00:02:17,480
Yeah, that's true.

40
00:02:17,480 --> 00:02:22,120
And they are targeting XFS as the main supported file system for now, which makes you happy

41
00:02:22,120 --> 00:02:23,120
presumably.

42
00:02:23,120 --> 00:02:24,120
Yeah, absolutely.

43
00:02:24,120 --> 00:02:25,120
You knew that.

44
00:02:25,120 --> 00:02:26,680
You knew that when you saw that, didn't you?

45
00:02:26,680 --> 00:02:27,680
Yep.

46
00:02:27,680 --> 00:02:29,960
Yeah, that's probably one of my favorite things about it.

47
00:02:29,960 --> 00:02:31,600
In fact, I'd love to dig more into this.

48
00:02:31,600 --> 00:02:34,880
I've been following this on Linux Unplugged since they announced it.

49
00:02:34,880 --> 00:02:39,640
And obviously, I'm a big fan of this because it's a very Linux solution to this problem

50
00:02:39,640 --> 00:02:45,840
to finally get parity features with ZFS and have ButterFS as promise, but be able to use

51
00:02:45,840 --> 00:02:51,080
a file system that I choose like XFS and have a programmatic API that people can use to

52
00:02:51,080 --> 00:02:55,480
set things up, which is going to make management of Linux systems and their disk automatable

53
00:02:55,480 --> 00:02:56,480
and scalable.

54
00:02:56,480 --> 00:02:58,980
Clearly, I'm just very excited about it.

55
00:02:58,980 --> 00:02:59,980
Lots of potential.

56
00:02:59,980 --> 00:03:03,320
I hope to have the opportunity to talk to Andy Grover, who's been the main voice behind

57
00:03:03,320 --> 00:03:04,640
this project since it started.

58
00:03:04,640 --> 00:03:10,440
It is interesting, though, that once this becomes mature and gets rolled into RHEL,

59
00:03:10,440 --> 00:03:15,080
you're going to have three very different approaches to the same problem on the three

60
00:03:15,080 --> 00:03:16,080
main distros.

61
00:03:16,080 --> 00:03:21,280
You're going to have Stratus on Red Hat, ButterFS on SUSE, and ZFS on Ubuntu.

62
00:03:21,280 --> 00:03:22,800
Yeah, that crossed my mind, too.

63
00:03:22,800 --> 00:03:25,120
It's three very different approaches.

64
00:03:25,120 --> 00:03:30,640
Of course, Project Stratus could get widespread adoption, Debian could adopt it, and then

65
00:03:30,640 --> 00:03:33,120
it'd probably pretty quickly show up in a future Ubuntu release.

66
00:03:33,120 --> 00:03:35,960
I'm sure the Ubuntu folks will be fine with that.

67
00:03:35,960 --> 00:03:39,960
But it is initially going to be three very different approaches.

68
00:03:39,960 --> 00:03:45,060
The one thing that will give Stratus an eventual heads up, besides the fact that major parts

69
00:03:45,060 --> 00:03:48,720
of it are written in Rust, which is awesome, is that API.

70
00:03:48,720 --> 00:03:52,820
I know I've mentioned it a few times now, but that is a big deal for orchestration systems

71
00:03:52,820 --> 00:03:57,840
and management to be able to standardize how your Linux boxes that you deploy in seconds

72
00:03:57,840 --> 00:04:00,200
can have their entire drive set up.

73
00:04:00,200 --> 00:04:05,440
I really had my eyes opened when I had a conversation with an AWS engineer who said, we frequently

74
00:04:05,440 --> 00:04:10,960
have customers that spin up multiple thousands of Ubuntu systems at once.

75
00:04:10,960 --> 00:04:14,080
And he said, that's why when you hear about them cutting down the boot time, it's not

76
00:04:14,080 --> 00:04:15,400
for your laptop.

77
00:04:15,400 --> 00:04:20,920
It's for all these AWS instances that need to scale up immediately at 3,000 at once booting.

78
00:04:20,920 --> 00:04:25,480
And when you have that many systems that you're managing that you create and destroy in a

79
00:04:25,480 --> 00:04:29,760
day, programmatically setting up all of the disk storage has been a bespoke solution for

80
00:04:29,760 --> 00:04:32,840
each distribution and each setup for each shop for years now.

81
00:04:32,840 --> 00:04:37,360
And this is going to bring it all unified together, and you'll start seeing Chef and

82
00:04:37,360 --> 00:04:41,640
Puppet and Ansible how-to guides that get this stuff going in no time.

83
00:04:41,640 --> 00:04:46,880
But potentially for the desktop as well, that API means that it could easily be built into

84
00:04:46,880 --> 00:04:52,480
GUI tools as well that would make provisioning disks really straightforward for end users.

85
00:04:52,480 --> 00:04:57,060
But you're right that really the enterprise stuff is where this is targeted.

86
00:04:57,060 --> 00:05:02,640
And so the GUI user end of things is probably going to be a kind of afterthought and probably

87
00:05:02,640 --> 00:05:05,000
made by third parties rather than Red Hat.

88
00:05:05,000 --> 00:05:06,440
I wouldn't be so sure.

89
00:05:06,440 --> 00:05:11,240
I wouldn't be too surprised ways down the road to see support show up in gnome disks,

90
00:05:11,240 --> 00:05:12,240
something like that.

91
00:05:12,240 --> 00:05:13,240
I could see that.

92
00:05:13,240 --> 00:05:14,240
Yeah.

93
00:05:14,240 --> 00:05:15,240
Yeah.

94
00:05:15,240 --> 00:05:19,600
Well, speaking of Ansible and Red Hat, Red Hat is bridging the gap between the old style

95
00:05:19,600 --> 00:05:24,320
server management and the future DevOps in the cloud style management.

96
00:05:24,320 --> 00:05:27,000
And that's what their next update to Red Hat satellite.

97
00:05:27,000 --> 00:05:31,140
So the quick and short of this announcement, for those of you in IT, this new tool will

98
00:05:31,140 --> 00:05:37,120
integrate Red Hat's enterprise management tools with Ansible's automation tools, which

99
00:05:37,120 --> 00:05:42,360
means sysadmins can now use the Red Hat satellite interface to manage RHEL with Ansible's remote

100
00:05:42,360 --> 00:05:45,280
execution and state management.

101
00:05:45,280 --> 00:05:47,020
Also Ansible playbooks.

102
00:05:47,020 --> 00:05:50,360
So you could be automatically generating machines like a madman or lady.

103
00:05:50,360 --> 00:05:54,920
Well, at the other end of the Red Hat world, you've got Fedora on the desktop.

104
00:05:54,920 --> 00:05:58,080
And one of their devs has posted a question for people.

105
00:05:58,080 --> 00:06:03,880
He wants to gather some data regarding hibernation on laptops, because that has traditionally

106
00:06:03,880 --> 00:06:09,240
been something in Linux where we've just assumed that it's not going to work very well.

107
00:06:09,240 --> 00:06:11,520
But he's got some thing pads where it does work.

108
00:06:11,520 --> 00:06:15,320
And he's got some other machines where it doesn't work brilliantly.

109
00:06:15,320 --> 00:06:19,640
And so he wants to get some data together to see, is this a problem?

110
00:06:19,640 --> 00:06:22,040
And if so, we'll have to get this sorted.

111
00:06:22,040 --> 00:06:25,040
This is one of those opportunities where you can make a small impact in the open source

112
00:06:25,040 --> 00:06:27,900
community even if you don't write a single line of code.

113
00:06:27,900 --> 00:06:30,960
So with a little information and a little help, they might be able to get to the bottom

114
00:06:30,960 --> 00:06:33,360
and hunt down the great hibernate bug.

115
00:06:33,360 --> 00:06:37,720
Yeah, so there'll be a link in the show notes, linuxactionnews.com slash 74.

116
00:06:37,720 --> 00:06:39,720
So go and help out there.

117
00:06:39,720 --> 00:06:42,960
But let's switch gears and talk about Windows 10.

118
00:06:42,960 --> 00:06:46,260
Why are we going to talk about Windows 10 on a Linux show, Chris?

119
00:06:46,260 --> 00:06:49,040
Because they got a feature that I wish we would have thought of first, Joe.

120
00:06:49,040 --> 00:06:51,680
It is something that is connected to Android.

121
00:06:51,680 --> 00:06:54,720
And it'll bring Android apps essentially to the Windows desktop.

122
00:06:54,720 --> 00:06:59,120
The feature, which Microsoft is referring to as app mirroring, it shows up in Windows

123
00:06:59,120 --> 00:07:01,200
as an app called, quote, your phone.

124
00:07:01,200 --> 00:07:03,200
And it seems to work best with Android for now.

125
00:07:03,200 --> 00:07:07,720
Although Microsoft did announce the ability to transfer web pages from the iPhone to Windows

126
00:07:07,720 --> 00:07:09,200
10 desktop.

127
00:07:09,200 --> 00:07:15,880
But in a sense, it is a remote projection of the app from your Android device.

128
00:07:15,880 --> 00:07:20,420
And of course, because it's Microsoft, they have a tweet where they showed a work case

129
00:07:20,420 --> 00:07:25,900
where you're stuck in a boring meeting and you just can't stop that texting.

130
00:07:25,900 --> 00:07:30,920
So you call up the texting app from your Android phone and you mirror it to your Windows 10

131
00:07:30,920 --> 00:07:35,240
app, and you reply to text messages while you're in that boring meeting from your Windows

132
00:07:35,240 --> 00:07:36,240
10 machine.

133
00:07:36,240 --> 00:07:38,880
It reminds me a lot of KDE Connect.

134
00:07:38,880 --> 00:07:40,700
Yeah, although this is the whole app.

135
00:07:40,700 --> 00:07:42,940
It's actually remote VNC style.

136
00:07:42,940 --> 00:07:46,240
Although it seems to be, if you look at the videos, much smoother.

137
00:07:46,240 --> 00:07:50,520
It seems to be well performing, like better than even, say, RDP performs.

138
00:07:50,520 --> 00:07:54,640
And so since it's the entire app, it has all of your chat history, all of the emojis, whatever

139
00:07:54,640 --> 00:07:58,120
you might not have on one machine that's on another machine, you know, all that little

140
00:07:58,120 --> 00:07:59,120
stuff.

141
00:07:59,120 --> 00:08:00,120
It's all going to be there.

142
00:08:00,120 --> 00:08:03,280
There are no real details of how this is going to work.

143
00:08:03,280 --> 00:08:08,320
So I mean, maybe we'll never get to see how this works with it being Windows, but it seems

144
00:08:08,320 --> 00:08:10,560
like some sort of sorcery to me.

145
00:08:10,560 --> 00:08:15,320
I suppose we'll find out fairly soon because it's going to be in the October updates, which

146
00:08:15,320 --> 00:08:19,040
well, there was an update recently, wasn't there, which they had to pull.

147
00:08:19,040 --> 00:08:21,160
So maybe we'll be waiting a little bit longer.

148
00:08:21,160 --> 00:08:25,000
All these years later, Microsoft still having that problem with Windows.

149
00:08:25,000 --> 00:08:28,160
Thankfully my Linux box hasn't had any issues like that in a long time.

150
00:08:28,160 --> 00:08:33,200
So one other thing I note about this is it's limited right now, apparently, to the Android

151
00:08:33,200 --> 00:08:39,900
stock texting and photo apps and one specific iPhone web page transfer app.

152
00:08:39,900 --> 00:08:41,640
So it's not all the apps on your phone.

153
00:08:41,640 --> 00:08:45,440
It's ones that they have built some sort of specific support for.

154
00:08:45,440 --> 00:08:49,760
That might also indicate why it's so performant, but it does add to the mystery a bit.

155
00:08:49,760 --> 00:08:52,240
And it makes me want that same damn thing on Linux.

156
00:08:52,240 --> 00:08:56,080
Well, good luck running that if you've got lineage on your phone is all I can say.

157
00:08:56,080 --> 00:08:58,360
I don't suppose that's going to work very well.

158
00:08:58,360 --> 00:09:00,240
It's interesting because Google went the other way.

159
00:09:00,240 --> 00:09:06,080
They got Android apps working on Chrome OS and Linux apps instead of projecting apps

160
00:09:06,080 --> 00:09:07,080
onto the Chromebook.

161
00:09:07,080 --> 00:09:09,440
So they kind of they took a different route.

162
00:09:09,440 --> 00:09:10,440
Hmm.

163
00:09:10,440 --> 00:09:14,600
Well, speaking of Microsoft, you might recall from back in April, they announced something

164
00:09:14,600 --> 00:09:17,600
called Azure Sphere OS, which was Linux based.

165
00:09:17,600 --> 00:09:20,120
Well, now they're actually shipping the hardware for that.

166
00:09:20,120 --> 00:09:21,120
Yeah.

167
00:09:21,120 --> 00:09:24,440
And just for 85 US greenbacks, you can order a development kit right now if you're in the

168
00:09:24,440 --> 00:09:25,440
US.

169
00:09:25,440 --> 00:09:27,280
So worldwide availability.

170
00:09:27,280 --> 00:09:31,080
If there is worldwide availability, it's a different skew of the kid, it appears.

171
00:09:31,080 --> 00:09:39,320
But this Azure Sphere OS deal is fascinating to me because it to me it represents the next

172
00:09:39,320 --> 00:09:41,360
generation of IoT devices.

173
00:09:41,360 --> 00:09:44,540
I hope I hope I didn't just make people tune out by saying IoT.

174
00:09:44,540 --> 00:09:50,000
But it really is sort of in a different league of IoT device.

175
00:09:50,000 --> 00:09:55,080
And it's got a really fascinating multi-core setup where they've isolated the Wi-Fi and

176
00:09:55,080 --> 00:09:57,880
network stack in what they're calling a core.

177
00:09:57,880 --> 00:10:02,080
And the hardware encryption module, which has to be signed and verified by Microsoft

178
00:10:02,080 --> 00:10:06,240
and the hardware OEM, is in its own core.

179
00:10:06,240 --> 00:10:10,200
And then the Linux Azure Sphere OS is in its own core.

180
00:10:10,200 --> 00:10:15,280
And Microsoft claims that if you say pop the Wi-Fi stack, you do not necessarily then get

181
00:10:15,280 --> 00:10:18,640
access to the OS or the hardware encryption.

182
00:10:18,640 --> 00:10:22,920
It's got a design that's pretty fascinating and they paint the most boring picture in

183
00:10:22,920 --> 00:10:23,920
the world.

184
00:10:23,920 --> 00:10:27,080
And it's clear to me this is how these devices are going to be used.

185
00:10:27,080 --> 00:10:33,760
On Microsoft's Azure Sphere OS documentation website, they outline a use case where a dishwasher

186
00:10:33,760 --> 00:10:38,860
manufacturer embeds one of these in there and monitors the temperature of the dry and

187
00:10:38,860 --> 00:10:40,240
wash cycles.

188
00:10:40,240 --> 00:10:44,200
And if the temperature starts to fluctuate, it then assumes there could be a fault and

189
00:10:44,200 --> 00:10:46,120
it runs a diagnostic.

190
00:10:46,120 --> 00:10:50,760
All meanwhile, security updates and management is all happening through Azure.

191
00:10:50,760 --> 00:10:56,120
The whole idea with this Azure Sphere OS device is that it's part of an ecosystem that involves

192
00:10:56,120 --> 00:10:59,520
cloud connectivity and other components.

193
00:10:59,520 --> 00:11:01,800
But that's why I say it kind of makes it a different level device.

194
00:11:01,800 --> 00:11:02,800
It's kind of a new tier.

195
00:11:02,800 --> 00:11:03,800
Yeah.

196
00:11:03,800 --> 00:11:07,480
And obviously they want you to connect it to Azure, their cloud, so they can make the

197
00:11:07,480 --> 00:11:08,480
money there.

198
00:11:08,480 --> 00:11:13,980
But they do claim that it will be open enough that you'll be able to use other cloud providers

199
00:11:13,980 --> 00:11:19,640
or even potentially on premises, which we'll have to see exactly how that works out.

200
00:11:19,640 --> 00:11:21,720
But that's kind of a good sign, isn't it?

201
00:11:21,720 --> 00:11:22,720
Yeah.

202
00:11:22,720 --> 00:11:26,400
And I think it's necessary for certain types of use cases like devices that go inside government

203
00:11:26,400 --> 00:11:27,740
facilities or hospitals.

204
00:11:27,740 --> 00:11:31,040
There may just be certain requirements where you're going to eventually have to support

205
00:11:31,040 --> 00:11:32,900
on-premises management.

206
00:11:32,900 --> 00:11:35,460
One thing to note right now, a little disappointing.

207
00:11:35,460 --> 00:11:40,360
It's fun to see Microsoft building a Linux-based OS and then shipping it on hardware.

208
00:11:40,360 --> 00:11:44,220
That's kind of fun for those of us that have been around since, well, the 80s.

209
00:11:44,220 --> 00:11:51,160
But it's a little disappointing to see that it requires Windows 10 and full Visual Studio

210
00:11:51,160 --> 00:11:53,700
to actually develop with this thing.

211
00:11:53,700 --> 00:11:58,080
It would be great to see support for Visual Studio code somehow or even just support for

212
00:11:58,080 --> 00:12:00,520
using Linux to build for this thing.

213
00:12:00,520 --> 00:12:02,620
I'd love to see them at least get there.

214
00:12:02,620 --> 00:12:04,560
This thing's in early days now, so perhaps they will.

215
00:12:04,560 --> 00:12:09,360
Well, although it does say in the documentation that Windows 10 and Visual Studio are a requirement

216
00:12:09,360 --> 00:12:13,440
for this, I did read in some of the marketing material that you can develop for it however

217
00:12:13,440 --> 00:12:16,520
you want in just a standard text editor.

218
00:12:16,520 --> 00:12:18,800
And I think that is a bit of a problem here.

219
00:12:18,800 --> 00:12:22,040
The communication has been a little bit opaque.

220
00:12:22,040 --> 00:12:25,480
It's not exactly clear what this Linux-based OS is.

221
00:12:25,480 --> 00:12:27,480
We don't know what kernel it's going to be.

222
00:12:27,480 --> 00:12:31,040
I remember when you spoke to someone from Microsoft called Galen Hunt.

223
00:12:31,040 --> 00:12:36,080
Unfortunately, that was an off-air interview, but you kind of spoke about it on Linux Unplugged

224
00:12:36,080 --> 00:12:37,080
episode 245.

225
00:12:37,080 --> 00:12:41,640
He had said to you it was going to be an upstream kernel, and they were going to aggressively

226
00:12:41,640 --> 00:12:42,760
track that.

227
00:12:42,760 --> 00:12:47,280
Whereas now in the marketing material, it says a custom Linux kernel.

228
00:12:47,280 --> 00:12:50,880
So I don't know, perhaps that's just changed in the last few months.

229
00:12:50,880 --> 00:12:54,760
I don't know if that necessarily suggests it's not still aggressively tracking an upstream

230
00:12:54,760 --> 00:12:59,400
kernel, because they have built this thing to be pretty rapidly updated via the Azure

231
00:12:59,400 --> 00:13:00,700
Sphere management.

232
00:13:00,700 --> 00:13:04,560
So I could still see them calling it a custom kernel, even though it's something that's

233
00:13:04,560 --> 00:13:06,700
just really upstream with some modifications.

234
00:13:06,700 --> 00:13:11,660
I do also recall in that conversation, I tried to get some specifics on what kernel modifications

235
00:13:11,660 --> 00:13:13,200
they were making.

236
00:13:13,200 --> 00:13:15,000
And some of it had to do with backup and restore.

237
00:13:15,000 --> 00:13:17,400
Some of it was for hardware encryption support.

238
00:13:17,400 --> 00:13:21,280
And there was a few other, oh yeah, crash metric collection with some other modifications

239
00:13:21,280 --> 00:13:22,280
they had made.

240
00:13:22,280 --> 00:13:27,120
And they felt that that was enough of a change to call it a custom kernel, if I recall.

241
00:13:27,120 --> 00:13:28,120
Right.

242
00:13:28,120 --> 00:13:29,120
Okay.

243
00:13:29,120 --> 00:13:31,560
Well, I mean, that's the one thing that we are going to get source code to here.

244
00:13:31,560 --> 00:13:33,760
They have to give us the kernel source, don't they?

245
00:13:33,760 --> 00:13:34,760
Yeah, it's true.

246
00:13:34,760 --> 00:13:35,760
We'll find out in due course.

247
00:13:35,760 --> 00:13:37,480
That's something to watch for, I suppose.

248
00:13:37,480 --> 00:13:38,480
Yeah.

249
00:13:38,480 --> 00:13:42,280
I do remember at the time thinking about what Canonical are doing.

250
00:13:42,280 --> 00:13:45,360
Because Canonical obviously are known for Ubuntu on the desktop and that does make them

251
00:13:45,360 --> 00:13:46,360
some money.

252
00:13:46,360 --> 00:13:51,680
But the whole Snaps thing is not about bringing things like Spotify to the desktop, although

253
00:13:51,680 --> 00:13:54,480
that's a nice kind of side benefit.

254
00:13:54,480 --> 00:14:00,040
As far as I'm aware, Snaps are really targeted at IoT and that's where they're making their

255
00:14:00,040 --> 00:14:01,040
real money.

256
00:14:01,040 --> 00:14:02,040
Yeah.

257
00:14:02,040 --> 00:14:03,040
I'm not so sure about that.

258
00:14:03,040 --> 00:14:06,680
I think Snaps are definitely built with IoT devices in mind.

259
00:14:06,680 --> 00:14:11,880
But I think it seems to me, at least, Canonical's approach has become a multi-spectrum approach

260
00:14:11,880 --> 00:14:15,000
where they want Snaps for desktop, server, and IoT.

261
00:14:15,000 --> 00:14:18,920
As far as where they make their money from, I don't know if that's true either about IoT

262
00:14:18,920 --> 00:14:21,600
being a big revenue source, but I could be wrong.

263
00:14:21,600 --> 00:14:22,640
I think it's just a component.

264
00:14:22,640 --> 00:14:26,480
And I think that's why Snaps are also just as important, say, on the server, if maybe

265
00:14:26,480 --> 00:14:28,000
not even more important these days.

266
00:14:28,000 --> 00:14:30,920
Yeah, but the IoT comes hand in hand with the server, doesn't it?

267
00:14:30,920 --> 00:14:31,920
And that's the whole point.

268
00:14:31,920 --> 00:14:33,280
That's the whole point of Microsoft doing this.

269
00:14:33,280 --> 00:14:38,080
They're not making money selling these devices for $90 or whatever.

270
00:14:38,080 --> 00:14:43,120
They're making the money on the backend, tying people into Azure and charging them an arm

271
00:14:43,120 --> 00:14:44,120
and a leg for it.

272
00:14:44,120 --> 00:14:45,120
Yeah.

273
00:14:45,120 --> 00:14:48,320
And the whole pipeline is going to be based around Azure.

274
00:14:48,320 --> 00:14:53,840
So if you are a manufacturer of that dishwasher and you want to submit a new firmware to your

275
00:14:53,840 --> 00:14:57,600
devices, well, it's all going through the Azure pipeline where you submit it, getting

276
00:14:57,600 --> 00:15:03,480
it signed, getting it checked, getting it delivered over the CDN, that's all done through

277
00:15:03,480 --> 00:15:04,480
Azure.

278
00:15:04,480 --> 00:15:08,480
That's the benefit is these companies don't have to invent their own distribution mechanism

279
00:15:08,480 --> 00:15:12,400
for firmwares to devices over the internet, which they suck at.

280
00:15:12,400 --> 00:15:16,400
But the flip side is you're going to be paying for that convenience.

281
00:15:16,400 --> 00:15:19,280
And it just really is going to be up to Microsoft to how market competitive they want to make

282
00:15:19,280 --> 00:15:20,280
that price.

283
00:15:20,280 --> 00:15:25,520
You could really see a future here where developers are tightly integrated with GitHub and Microsoft's

284
00:15:25,520 --> 00:15:27,840
product pipeline and Visual Studio Code.

285
00:15:27,840 --> 00:15:32,500
And IoT device manufacturers are tightly integrated all the way to the IoT device end.

286
00:15:32,500 --> 00:15:36,960
From when they develop the code and create the code and publish it on GitHub to when

287
00:15:36,960 --> 00:15:42,160
it ships in that dishwasher, it's Microsoft services from end to end.

288
00:15:42,160 --> 00:15:43,360
Yeah, exactly.

289
00:15:43,360 --> 00:15:47,800
And that is a real competitor to what Canonical are trying to do.

290
00:15:47,800 --> 00:15:52,400
And obviously Microsoft have got a lot more money and resources to make this thing happen.

291
00:15:52,400 --> 00:15:59,280
But it does feel like direct competition to what at least my understanding was Canonical's

292
00:15:59,280 --> 00:16:06,800
kind of long term play was, which is the Internet of Things devices tied into Ubuntu on the

293
00:16:06,800 --> 00:16:13,940
back end on servers that they are supporting, not selling directly like Microsoft are with

294
00:16:13,940 --> 00:16:18,600
Azure, but getting them into the Ubuntu ecosystem and making their money there.

295
00:16:18,600 --> 00:16:23,600
Well, Joe, if I were to channel my inner shuttle worth here for a moment, I think I'd start

296
00:16:23,600 --> 00:16:29,000
this reply by describing the potentially billions of IoT devices that could be shipping in the

297
00:16:29,000 --> 00:16:31,280
next five to 10 to 20 years.

298
00:16:31,280 --> 00:16:33,920
And I would describe the size of that market to you.

299
00:16:33,920 --> 00:16:38,600
And then I would come around with something like, there's plenty of fish to go around

300
00:16:38,600 --> 00:16:41,160
and we'll be serving different customer niches.

301
00:16:41,160 --> 00:16:44,580
There's going to be a lot of companies that don't want to get into a month to month contract

302
00:16:44,580 --> 00:16:46,900
with Microsoft to manage a few devices.

303
00:16:46,900 --> 00:16:48,820
They're going to want to control that stack top to bottom.

304
00:16:48,820 --> 00:16:52,560
And the part they suck the most at shipping software.

305
00:16:52,560 --> 00:16:54,200
That's what they've solved with snaps.

306
00:16:54,200 --> 00:16:55,920
I think that's what my inner shuttle worth would tell you.

307
00:16:55,920 --> 00:17:01,440
Yeah, and I think that is a reasonable point, actually, that the market is big enough.

308
00:17:01,440 --> 00:17:07,040
And you're not necessarily going to get one player completely dominating it.

309
00:17:07,040 --> 00:17:09,960
And so there's probably room for both of them.

310
00:17:09,960 --> 00:17:14,520
And I would imagine Microsoft will be going after a bigger market than Canonical.

311
00:17:14,520 --> 00:17:16,480
But Canonical have got big ambitions, haven't they?

312
00:17:16,480 --> 00:17:22,320
And that's why it kind of came to mind that they are in direct competition here.

313
00:17:22,320 --> 00:17:23,400
But maybe they're not.

314
00:17:23,400 --> 00:17:30,480
Maybe the markets are subtly different enough that there is enough money to go around here

315
00:17:30,480 --> 00:17:31,480
and enough of the market.

316
00:17:31,480 --> 00:17:34,240
Yeah, it feels like there is some competition, some crossover.

317
00:17:34,240 --> 00:17:38,680
I mean, it's worth noting, again, Microsoft's product runs on Linux and obviously Canonical's

318
00:17:38,680 --> 00:17:39,920
solution will be Linux based.

319
00:17:39,920 --> 00:17:43,720
And that's interesting to be competing head to head in that area.

320
00:17:43,720 --> 00:17:48,600
Microsoft has the resources and they have the scale, but Canonical has the flexibility.

321
00:17:48,600 --> 00:17:50,920
That company can turn on a dime.

322
00:17:50,920 --> 00:17:55,880
And it's just something that a company the size of Microsoft is not as capable of doing.

323
00:17:55,880 --> 00:17:59,960
They've been demonstrating a lot of flexibility, I'd say, in the last five to six years and

324
00:17:59,960 --> 00:18:05,200
adapting to the market in a way that is pretty impressive for a company their size.

325
00:18:05,200 --> 00:18:10,920
I've lived here in Washington and have family members and friends that work at Microsoft

326
00:18:10,920 --> 00:18:14,120
and have watched this transition take place.

327
00:18:14,120 --> 00:18:15,760
And I have also made a big transition.

328
00:18:15,760 --> 00:18:19,360
I used to be one of the biggest Microsoft haters out there.

329
00:18:19,360 --> 00:18:21,560
And now I'm sitting here going, damn, look at them.

330
00:18:21,560 --> 00:18:24,840
They're moving pretty quick and they're doing some slick stuff and they're making the right

331
00:18:24,840 --> 00:18:26,400
call on a lot of this.

332
00:18:26,400 --> 00:18:28,120
But you can't beat Canonical.

333
00:18:28,120 --> 00:18:32,760
They've got that size, they've got that flexibility, and they've got that drive and they've got

334
00:18:32,760 --> 00:18:34,080
that motivation.

335
00:18:34,080 --> 00:18:35,400
So I think they're going to be fine.

336
00:18:35,400 --> 00:18:36,600
They'll carve out a good market.

337
00:18:36,600 --> 00:18:39,380
And the reality is they have a good system.

338
00:18:39,380 --> 00:18:44,560
The Ubuntu core system, the SNAP systems, all of that is pretty good with the LTS support.

339
00:18:44,560 --> 00:18:46,280
And then you can also get support contracts from them.

340
00:18:46,280 --> 00:18:47,280
It's a good solution.

341
00:18:47,280 --> 00:18:51,020
It just depends on the size and scale of the manufacturer and probably the cost of device

342
00:18:51,020 --> 00:18:52,020
that they're trying to make.

343
00:18:52,020 --> 00:18:58,080
Well, one thing to watch out for with this Azure Sphere OS is if that starts supporting

344
00:18:58,080 --> 00:19:03,800
SNAPs, then that to me is a red flag about who might just be buying Canonical rather

345
00:19:03,800 --> 00:19:04,960
than the IPO.

346
00:19:04,960 --> 00:19:07,840
That's the canary in the IoT coal mine, is what you're saying?

347
00:19:07,840 --> 00:19:09,680
Yep, that's what I'm saying.

348
00:19:09,680 --> 00:19:10,680
That's not bad.

349
00:19:10,680 --> 00:19:11,680
I like that.

350
00:19:11,680 --> 00:19:12,680
We'll keep track of that.

351
00:19:12,680 --> 00:19:15,160
Well, just to wrap up the show, a story of Node, which actually is still available for

352
00:19:15,160 --> 00:19:20,680
comment by you, the Node.js Foundation and the JS Foundation have announced their intent

353
00:19:20,680 --> 00:19:21,680
to merge.

354
00:19:21,680 --> 00:19:27,760
And they're holding a Q&A session at the Node.js Interactive conference on October 10.

355
00:19:27,760 --> 00:19:33,040
So if you want to get involved and have questions, anyone attending is welcome to ask questions.

356
00:19:33,040 --> 00:19:36,400
And you can also submit them anonymously ahead of time if you'd like.

357
00:19:36,400 --> 00:19:38,440
Yeah, this seems pretty likely to happen to me.

358
00:19:38,440 --> 00:19:42,080
It just seems like a logical step to take, really.

359
00:19:42,080 --> 00:19:44,640
Why not pool your resources together?

360
00:19:44,640 --> 00:19:48,400
And it's good to see that they haven't just announced we're doing this.

361
00:19:48,400 --> 00:19:49,760
This is a new governance structure.

362
00:19:49,760 --> 00:19:51,720
This is a new financial structure.

363
00:19:51,720 --> 00:19:55,400
They want to get some feedback first from the community.

364
00:19:55,400 --> 00:19:57,400
I suppose, first of all, is this a good idea?

365
00:19:57,400 --> 00:20:00,520
I can't see many people being against this as an idea.

366
00:20:00,520 --> 00:20:04,440
But it's more the details, really, I think, where they're looking for community feedback,

367
00:20:04,440 --> 00:20:06,080
just so they can get this merger right.

368
00:20:06,080 --> 00:20:07,880
Yeah, I wonder if anybody could object.

369
00:20:07,880 --> 00:20:12,320
I would love to know, because I don't think I'm connected deeply enough to either one

370
00:20:12,320 --> 00:20:13,320
of these communities.

371
00:20:13,320 --> 00:20:18,120
Let us know your thoughts at linuxactionnews or linuxactionnews.com slash contact.

372
00:20:18,120 --> 00:20:19,240
But I'll tell you what they think.

373
00:20:19,240 --> 00:20:24,740
They say a tighter alignment of communities will expand the scope of the current foundations

374
00:20:24,740 --> 00:20:30,480
and enable greater support for Node.js and a broader range of JavaScript projects.

375
00:20:30,480 --> 00:20:33,840
If you read between the lines, Joe, it seems like the different boards had been flirting

376
00:20:33,840 --> 00:20:37,440
several times already, kind of talking about how could we work more together.

377
00:20:37,440 --> 00:20:39,480
And then boom, merger time.

378
00:20:39,480 --> 00:20:40,480
Happens, Joe.

379
00:20:40,480 --> 00:20:41,480
It happens.

380
00:20:41,480 --> 00:20:46,260
Yeah, it's also worth noting that they talk about an umbrella structure and the two sides

381
00:20:46,260 --> 00:20:51,440
of it still having independence, technically, but just being able to pool the resources

382
00:20:51,440 --> 00:20:52,840
that they need.

383
00:20:52,840 --> 00:20:57,200
So to me, that sounds like quite a sensible approach, if they can keep the technical sides

384
00:20:57,200 --> 00:20:58,800
separate.

385
00:20:58,800 --> 00:21:02,300
Without a question, that's a story that we'll be keeping an eye on and seeing how that develops.

386
00:21:02,300 --> 00:21:06,680
If you'd like to catch this show every single week and see what other stories are developing,

387
00:21:06,680 --> 00:21:11,040
go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

388
00:21:11,040 --> 00:21:14,800
And go to linuxactionnews.com slash contact for ways to get in touch.

389
00:21:14,800 --> 00:21:19,480
We'll be back next Monday with our weekly take on the latest Linux and open source news.

390
00:21:19,480 --> 00:21:21,200
I'm at Chris LAS.

391
00:21:21,200 --> 00:21:22,920
I'm at Joe Rissington.

392
00:21:22,920 --> 00:21:25,680
Thank you for joining us and we'll see you next week.

393
00:21:25,680 --> 00:21:44,000
See you later.

