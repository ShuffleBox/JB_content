WEBVTT

00:00.000 --> 00:09.280
Hello and welcome to Linux Action News, episode 193, recorded on June 13th, 2021.

00:09.280 --> 00:10.280
I'm Chris.

00:10.280 --> 00:11.280
And I'm Wes.

00:11.280 --> 00:12.280
Hello, Wes.

00:12.280 --> 00:13.280
Let's do the news.

00:13.280 --> 00:20.040
We start this week with the major usability improvements landing in Plasma 5.22, including

00:20.040 --> 00:26.400
considerable investment in Wayland support, with standout features such as Kwin now supporting

00:26.400 --> 00:30.520
variable refresh rate and FreeSync screens.

00:30.520 --> 00:35.480
This is a nice improvement if you have multiple monitors with different refresh rates, as

00:35.480 --> 00:38.760
each screen can now be configured individually.

00:38.760 --> 00:46.680
Finally, and both Wayland and X11 users get this one, if you have more than one screen,

00:46.680 --> 00:52.220
new windows now open on the screen where your cursor is located.

00:52.220 --> 00:57.560
Another nice feature to see is adaptive panel transparency, which didn't work on my Plasma

00:57.560 --> 01:03.600
5.22 install, but the idea is that it adaptively changes when you maximize or reduce windows

01:03.600 --> 01:05.960
and make your background look all nice and pretty.

01:05.960 --> 01:08.120
I just think that's a nice quality of life thing in there.

01:08.120 --> 01:12.440
There's some Krunner improvements too that show how much text is being displayed, and

01:12.440 --> 01:13.440
that's fantastic.

01:13.440 --> 01:17.160
And of course, because this is Plasma, there's all these little things you can tweak now.

01:17.160 --> 01:21.080
The system clock looks a little bit sharper in the way it displays your events and dates

01:21.080 --> 01:24.680
and the way you can move between months and years is a lot nicer.

01:24.680 --> 01:28.100
Those kinds of things, it's good to see that in there, but the big feature that really

01:28.100 --> 01:33.180
stood out to me is what they call the speed dial now in system settings.

01:33.180 --> 01:37.760
It's the first page that opens when you bring up the Plasma system settings, and it's kind

01:37.760 --> 01:42.480
of like the most common things you're going to want to tweak in Plasma.

01:42.480 --> 01:47.840
Not everything that I tweak, but like 80%, and it's the first screen that comes up.

01:47.840 --> 01:51.120
So what they've done is right at the top, they've put, do you want a light theme or

01:51.120 --> 01:52.120
a dark theme?

01:52.120 --> 01:53.120
Okay.

01:53.120 --> 01:56.440
The next option down, what do you want your animation speed throughout Plasma to be?

01:56.440 --> 02:00.240
And then the next section down there, which is super handy for new Plasma users, would

02:00.240 --> 02:04.300
you like a double click or a single click to launch files?

02:04.300 --> 02:06.060
Because that can throw people off.

02:06.060 --> 02:10.840
And then they also have a slider in here that is a little unusual, but I kind of like it

02:10.840 --> 02:11.840
Wes.

02:11.840 --> 02:13.760
It's called the send user feedback and you slide it.

02:13.760 --> 02:16.240
At first it's disabled by default, it's disabled, right?

02:16.240 --> 02:19.040
But then you slide it over to basic system information.

02:19.040 --> 02:20.040
Okay.

02:20.040 --> 02:24.440
Then you slide it over further, basic system information and usage statistics.

02:24.440 --> 02:27.080
You're getting a little more personal.

02:27.080 --> 02:29.240
There's two more notches to go though, Wes.

02:29.240 --> 02:34.020
So we take it up another notch and it says detailed system information and basic usage

02:34.020 --> 02:36.960
statistics.

02:36.960 --> 02:42.640
And then the last notch, when I set it to blast, detailed system information and usage

02:42.640 --> 02:45.200
statistics.

02:45.200 --> 02:46.200
I don't know exactly.

02:46.200 --> 02:50.360
I'd love to know, like, what does that mean in terms of network sending and how often

02:50.360 --> 02:51.360
it's checking?

02:51.360 --> 02:53.480
How much data and what are the keys in there?

02:53.480 --> 02:54.520
When does it collect it?

02:54.520 --> 02:55.840
When does it transmit it?

02:55.840 --> 02:58.060
Because I'm kind of tempted to support the Plasma project.

02:58.060 --> 03:02.560
I don't mind sending them some detailed information about my old Linux box here that I'm running

03:02.560 --> 03:05.160
this on and letting them know.

03:05.160 --> 03:09.480
And so that kind of stuff is in here in this new quick settings or what they call speed

03:09.480 --> 03:10.480
dial.

03:10.480 --> 03:14.400
But then when you go into system settings, it's labeled as quick settings, but then they

03:14.400 --> 03:19.800
have more launching off icons you can click to get to things like the general behavior,

03:19.800 --> 03:21.900
the window behavior, the compositor stuff.

03:21.900 --> 03:26.080
It really makes getting in here and changing some of the basic stuff nice and quick.

03:26.080 --> 03:30.440
But the other thing I noticed, and I actually had to change my theme back, I had to like

03:30.440 --> 03:32.080
change it and change it back.

03:32.080 --> 03:35.800
And then I noticed that the breeze theme is looking a lot tighter.

03:35.800 --> 03:39.240
And I don't know how long, how many updates I've gone without maybe doing this toggle

03:39.240 --> 03:44.240
of my themes, but the system icons look so much better down in the tray.

03:44.240 --> 03:45.680
The launch bar looks a lot cleaner.

03:45.680 --> 03:47.520
The windows look a lot cleaner.

03:47.520 --> 03:51.080
And the light theme is extremely pleasant now.

03:51.080 --> 03:54.840
And I'm actually thinking about switching back to light theme in Plasma.

03:54.840 --> 03:55.840
Your dark theme, Chris.

03:55.840 --> 03:56.840
I know.

03:56.840 --> 03:57.840
This makes no sense.

03:57.840 --> 03:58.840
I know.

03:58.840 --> 03:59.840
Better alert the Twitterverse.

03:59.840 --> 04:00.840
The brand is changing.

04:00.840 --> 04:01.960
We're going light theme.

04:01.960 --> 04:03.640
It's actually just really, it's just really elegant.

04:03.640 --> 04:07.840
They've just nailed this release and they're already working on the next one.

04:07.840 --> 04:15.080
And so is the GNOME project with version 40.2 being released this week.

04:15.080 --> 04:21.560
While there wasn't an official 40.1 release, 40.2 comes with lots of fixes and improvements

04:21.560 --> 04:26.600
for your favorite applications, as well as general performance enhancements across the

04:26.600 --> 04:27.600
board.

04:27.600 --> 04:29.240
That's nice to see.

04:29.240 --> 04:33.840
Improved touch interactions have been added to the app grid, as well as a solution for

04:33.840 --> 04:38.200
those of us who use fingerprint readers that were having some authentication failures.

04:38.200 --> 04:41.560
But what I thought was nice to see were the improvements in Mudder.

04:41.560 --> 04:45.600
There was a performance improvement for Nvidia users, improvements for those of you who use

04:45.600 --> 04:50.960
fractional scaling and want to do screencasting, even some gamma correction issues were solved

04:50.960 --> 04:51.960
in there.

04:51.960 --> 04:56.520
Overall, GNOME software seemed to receive a lot of attention too during this cycle.

04:56.520 --> 05:01.240
It now comes with better support for flat packs and improved air reporting when on low

05:01.240 --> 05:02.240
disk space.

05:02.240 --> 05:06.400
So I guess, yeah, that actually is, those are nice things to see in there.

05:06.400 --> 05:10.360
It's nice to know why that install didn't work at the very least.

05:10.360 --> 05:11.360
Yeah it is.

05:11.360 --> 05:15.440
And GNOME software also saw improved automatic downloads for pending updates and improvements

05:15.440 --> 05:17.200
to search query speeds.

05:17.200 --> 05:21.760
I actually was wondering if GNOME software was going to get the old retirement, but these

05:21.760 --> 05:26.320
improvements along with featured app carousel improvements and other things that have landed

05:26.320 --> 05:30.640
and just general bug fixes when you go through the change log for GNOME software make me

05:30.640 --> 05:35.240
think it's actually more alive than ever and it's going to be sticking around.

05:35.240 --> 05:40.560
There have also been some nice performance improvements across the stack, including some

05:40.560 --> 05:50.040
important fixes for say a nasty 100% CPU usage issue in the GNOME display manager login screen,

05:50.040 --> 05:57.240
a different high CPU use issue in Getit the text editor, and a fix for a memory leak in

05:57.240 --> 06:04.440
GNOME calendar's time zone monitoring code.

06:04.440 --> 06:05.960
Linode.com slash LAN.

06:05.960 --> 06:09.240
Go there to get $100 in 60 day credit and you support the show.

06:09.240 --> 06:12.120
No matter what skill level you're at, you're going to find that Linode makes it possible

06:12.120 --> 06:15.080
for your ideas to come to life on the web.

06:15.080 --> 06:17.760
Everything we've built for JB now runs on Linode.

06:17.760 --> 06:24.600
In fact, just Friday we deployed a brand new shiny purpose built $5 a month Linode.

06:24.600 --> 06:28.640
We're working with some friends of ours who are putting together an online virtual event

06:28.640 --> 06:33.440
and they need a way to collaborate with the different speakers and they don't really need

06:33.440 --> 06:36.640
something as complicated as a full syncing solution.

06:36.640 --> 06:40.200
That's where FileRun came in and it just took minutes to get up and running on Linode.

06:40.200 --> 06:45.120
It's a self-hosted file manager, beautiful web UI makes it really easy to pull down files

06:45.120 --> 06:47.440
for different users and upload stuff.

06:47.440 --> 06:51.560
It got them collaborating in minutes and it's running on Linode in the Texas data center.

06:51.560 --> 06:54.400
Nice and centralized to everybody who's working on the project.

06:54.400 --> 06:58.800
And of course Linode has data centers, 11 of them, all around the world.

06:58.800 --> 07:03.000
Crazy fast connections between each data center because they are their own ISP.

07:03.000 --> 07:07.860
They are the largest independent cloud computing provider and they've been around since 2003.

07:07.860 --> 07:13.400
This file server idea that we had was a conversation and 10 minutes later we had the server deployed,

07:13.400 --> 07:16.620
15 minutes after that we had the application up and going.

07:16.620 --> 07:20.200
It took longer for the DNS to switch over than it did for us to get the entire stack

07:20.200 --> 07:21.260
up and running.

07:21.260 --> 07:25.400
And a lot of our Linode builds use their S3 compatible object storage on the back end

07:25.400 --> 07:29.300
so that way it grows with our needs without us having to tinker with it every single day.

07:29.300 --> 07:31.440
I love that about Linode.

07:31.440 --> 07:35.920
I can have systems that are one click deployed, super easy to manage, or rigs that I build

07:35.920 --> 07:38.640
from scratch with any distribution I like.

07:38.640 --> 07:41.220
So try it out, see what we've been talking about.

07:41.220 --> 07:46.040
It's just linode.com slash LAN to get that $100 in credit and support the show.

07:46.040 --> 07:52.840
Linode.com slash LAN.

07:52.840 --> 07:58.380
A seven-year-old privilege escalation bug that could lead to root access came to light

07:58.380 --> 07:59.720
this week.

07:59.720 --> 08:04.600
Kevin Backhouse, a member of the GitHub Security Lab, wrote an extensive summary on the GitHub

08:04.600 --> 08:09.800
blog and he's the one who discovered this flaw in Pollkit.

08:09.800 --> 08:14.040
Pollkit is a toolkit for defining and handling authorizations on your Linux box.

08:14.040 --> 08:19.560
It's used for allowing unprivileged processes to speak to privileged processes.

08:19.560 --> 08:23.600
And it's installed by default on most of your local Linux distributions.

08:23.600 --> 08:29.860
The vulnerability enables an unprivileged local user to get a root shell on the system.

08:29.860 --> 08:34.600
It's easy to exploit with just a few standard command line tools.

08:34.600 --> 08:39.540
It seems the bug was introduced seven years ago and first shipped with Pollkit version

08:39.540 --> 08:41.800
0.113.

08:41.800 --> 08:48.560
However, many of the most popular Linux distributions didn't ship the vulnerable version until a

08:48.560 --> 08:49.560
little more recently.

08:49.560 --> 08:53.480
The nuance there is a little boring, but depending on like if you're based on Debian or something,

08:53.480 --> 08:58.100
it took a little while for this to work its way into every distribution, but it's pretty

08:58.100 --> 08:59.600
much there now.

08:59.600 --> 09:03.000
Because it's been around for seven years, that's not so good.

09:03.000 --> 09:07.800
So if you're not familiar with Pollkit, think of it as something that's essentially playing

09:07.800 --> 09:09.480
the role of a judge on your system.

09:09.480 --> 09:14.320
Like trying to decide if something that requires higher privileges, like say creating a new

09:14.320 --> 09:18.820
user account for example, if it's allowed, if that creation should happen, if the access

09:18.820 --> 09:20.960
to those privileges should be allowed.

09:20.960 --> 09:24.560
For some requests, Pollkit will make an instant decision to allow or deny.

09:24.560 --> 09:27.780
And then for others, you've probably seen this on your system, it'll pop up a dialogue

09:27.780 --> 09:31.960
box so the administrator can grant authorization by entering their password.

09:31.960 --> 09:38.240
Clearly an important system service, and that's why this bug being around for seven years

09:38.240 --> 09:43.920
and being kind of simple to exploit, makes this a noticeable issue.

09:43.920 --> 09:47.920
And really the vulnerability is surprisingly easy to exploit.

09:47.920 --> 09:52.760
I mean you just need a few things you've already got like bash, the kill command, and dbus

09:52.760 --> 09:53.760
send.

09:53.760 --> 09:55.560
How do you go about it?

09:55.560 --> 10:00.460
Well it's triggered by starting a dbus send command trying to talk to Pollkit.

10:00.460 --> 10:06.360
But you kill it while Pollkit is still in the middle of processing your request.

10:06.360 --> 10:11.400
I mean we're talking small windows of milliseconds here to trigger the bug, but if you know where

10:11.400 --> 10:17.640
to poke and when, you can be well on your way to popping root on the box.

10:17.640 --> 10:22.080
So why does killing that dbus send command cause this authentication bypass?

10:22.080 --> 10:28.880
Well it comes down to just how Pollkit has been built and essentially the series of sequences

10:28.880 --> 10:33.520
it goes through when an authentication event is triggered.

10:33.520 --> 10:36.940
And it's really the timing of this that triggers the bug.

10:36.940 --> 10:40.520
That's what really matters with this one because it turns out that Pollkit asks the dbus daemon

10:40.520 --> 10:43.420
for the UID of the requesting process.

10:43.420 --> 10:48.200
And it makes that request multiple times using different code paths.

10:48.200 --> 10:52.920
While most of those code paths handle this error just fine, one of those code paths does

10:52.920 --> 10:54.000
not.

10:54.000 --> 10:58.120
So if you happen to kill the dbus send command early, it gets handled by the correct code

10:58.120 --> 11:01.100
path and the request is rejected.

11:01.100 --> 11:07.680
To trigger the vulnerable code path though, you have to disconnect at just the right moment.

11:07.680 --> 11:14.120
And because there are multiple processes involved here, timing of that right moment varies from

11:14.120 --> 11:15.800
one run to the next.

11:15.800 --> 11:20.000
That's why it usually takes a few tries for the exploit to succeed.

11:20.000 --> 11:23.200
But with a little scripting help, that's no problem.

11:23.200 --> 11:29.220
This is a fun one to read up on and the summary on the GitHub blog that Kevin Backhouse did

11:29.220 --> 11:30.220
is great.

11:30.220 --> 11:33.360
It walks you through his thought process.

11:33.360 --> 11:36.360
It walks you through the different distributions that are impacted.

11:36.360 --> 11:39.700
Like if you're on Ubuntu 18.04 right now, you're not affected by this.

11:39.700 --> 11:42.960
But if you're on 20.04, you are.

11:42.960 --> 11:45.280
So there's some nuance to it.

11:45.280 --> 11:47.660
But the entire journey is fascinating.

11:47.660 --> 11:52.040
And every now and then a couple of times a year, somebody takes the time to really do

11:52.040 --> 11:56.040
a proper write up on how they discovered a bug like this.

11:56.040 --> 11:57.760
And this is one of those examples.

11:57.760 --> 12:00.520
It's a great read and it's an educational read too.

12:00.520 --> 12:05.520
And really, it's just a pretty good primer on Polkit in general.

12:05.520 --> 12:10.840
And hey, at least we finally have a good reason for sticking with 18.04 in the studio.

12:10.840 --> 12:14.360
Of course, the relevant distribution patches are all going out right now.

12:14.360 --> 12:16.400
So make sure you get updated.

12:16.400 --> 12:20.600
Another area of development that Wes and I have followed for a while now is real time

12:20.600 --> 12:22.120
support in the Linux kernel.

12:22.120 --> 12:28.320
In fact, when we had a conversation with the Mars helicopter operations lead from JPL,

12:28.320 --> 12:35.360
he relayed to us that one of the most important developments in Linux for use in space applications

12:35.360 --> 12:37.760
is real time kernel support.

12:37.760 --> 12:40.560
So we've been kind of following real time support for a while.

12:40.560 --> 12:44.620
It seems maybe the news in that area isn't so good.

12:44.620 --> 12:49.640
There has been talk over 2020 about actually getting that functionality merged into the

12:49.640 --> 12:53.420
Linux kernel, but really hasn't materialized and hasn't happened.

12:53.420 --> 12:58.440
And now it looks like due to a lack of funding, we're at risk of some of that code never getting

12:58.440 --> 13:00.320
patched into the Linux kernel.

13:00.320 --> 13:06.040
The preempt RT patch set is around 200 out of tree patches that kind of have to be maintained

13:06.040 --> 13:07.040
on the side.

13:07.040 --> 13:13.400
And as you might imagine, with a fast moving kernel, that is not an easy task.

13:13.400 --> 13:19.200
What we learned recently, however, is an update on the status of those mainlining efforts.

13:19.200 --> 13:25.520
And unfortunately, that status is that although the preempt RT patch set has made some significant

13:25.520 --> 13:30.200
strides, right now it's stalled due to a funding gap.

13:30.200 --> 13:35.880
And that funding gap needs to be closed if mainlining is ever going to happen.

13:35.880 --> 13:40.240
And as you know, Chris, there are more and more important applications that really would

13:40.240 --> 13:44.280
like to see this code both maintained and mainlined.

13:44.280 --> 13:48.240
Unfortunate to hear this, Wes, I've always thought of real time support in the context

13:48.240 --> 13:52.760
of media production because it's something we talk about when it comes to audio latency.

13:52.760 --> 13:58.000
But it wasn't until we talked to Tim Kenam and he helped me understand how necessary

13:58.000 --> 14:00.320
real time is for certain industrial uses.

14:00.320 --> 14:01.440
Yeah, really.

14:01.440 --> 14:05.960
There are applications that just aren't suitable to deploy Linux in if you don't have these

14:05.960 --> 14:08.720
kinds of real time guarantees.

14:08.720 --> 14:15.240
We learned about the funding gap from a presentation by Thomas Gleixner at an ELISA, or Enabling

14:15.240 --> 14:18.720
Linux in Safety Applications Summit last month.

14:18.720 --> 14:19.720
Oh, yes.

14:19.720 --> 14:20.720
Yes.

14:20.720 --> 14:23.800
That's a group that the Linux Foundation put together back in February of 2019.

14:23.800 --> 14:28.040
A bunch of different companies that are interested in using Linux in their day to day operations

14:28.040 --> 14:29.040
and in their equipment.

14:29.040 --> 14:33.720
They have a GitHub page even, where they have some code specifically around automotive and

14:33.720 --> 14:36.120
other areas and some documentation.

14:36.120 --> 14:40.520
I think we've just got to hope that one or multiple of these companies hear Thomas's

14:40.520 --> 14:48.400
cry and step up to help.

14:48.400 --> 14:50.080
Linux.ting.com.

14:50.080 --> 14:52.360
Are you tired of fussing with mobile?

14:52.360 --> 14:56.320
Would you like your cellular plans to be a solved problem?

14:56.320 --> 14:57.920
Ting is mobile done better.

14:57.920 --> 15:01.760
Break out of the boring carrier duopoly and try Ting.

15:01.760 --> 15:05.880
Go to linux.ting.com and get $25 off.

15:05.880 --> 15:09.320
Ting has some great plans for individuals and for families.

15:09.320 --> 15:14.720
Their new set 12 plan includes 12 gigs of data, unlimited talk and text, all for just

15:14.720 --> 15:17.040
$35 a month.

15:17.040 --> 15:19.960
They have lots of different plans though, so if you need two gigs or 20 gigs, there's

15:19.960 --> 15:21.800
a perfect Ting plan for you.

15:21.800 --> 15:27.720
And every line comes with Ting's award winning customer service, multiple nationwide LTE

15:27.720 --> 15:33.300
and 5G networks for you to choose from, and you never have to worry about contracts.

15:33.300 --> 15:34.600
It's simple to switch to Ting.

15:34.600 --> 15:38.180
Pretty much any phone will work because of their wide network support, which means you

15:38.180 --> 15:42.640
pick the network that works best in your area and your phone's likely already compatible.

15:42.640 --> 15:46.880
Just head to linux.ting.com to check your current phone, create an account and pick

15:46.880 --> 15:49.080
a plan that's just right for you.

15:49.080 --> 15:52.440
Once you put in the info for your SIM, get all that stuff figured out, Ting will send

15:52.440 --> 15:55.640
you a SIM card, you pop in your device and you're good to go.

15:55.640 --> 15:59.640
Or maybe it's time to get a brand new device, or maybe something simpler.

15:59.640 --> 16:04.800
Either way, cutting your phone bill in half has never been easier with Ting's brand new

16:04.800 --> 16:05.800
plans.

16:05.800 --> 16:10.440
The next generation of Ting Mobile is here, and I can tell you as a long time Ting customer,

16:10.440 --> 16:12.920
there's never been a better time to try it.

16:12.920 --> 16:14.320
So try it and save.

16:14.320 --> 16:17.520
Go to linux.ting.com.

16:17.520 --> 16:23.720
That's linux.ting.com.

16:23.720 --> 16:27.800
Hello System 0.5 has been released.

16:27.800 --> 16:42.240
A macOS inspired free PSD desktop for those looking to leave the Mac.

16:42.240 --> 16:47.080
Once upon a time there was the Macintosh, a friendly machine designed by geniuses like

16:47.080 --> 16:50.360
Steve Jobs, Bill Atkinson and Andy Hertzfeld.

16:50.360 --> 16:54.260
Over time the geniuses went away and things went downhill.

16:54.260 --> 16:58.200
Going back to some of the original design philosophies of the early Macintosh, the Mac

16:58.200 --> 17:01.300
was reborn with the introduction of the iMac.

17:01.300 --> 17:06.720
With macOS 10 it went on to become the most powerful yet intuitive workstation with a

17:06.720 --> 17:10.400
user interface so slick you wanted to lick it.

17:10.400 --> 17:12.020
Then genius left.

17:12.020 --> 17:16.440
What had started simple and pleasant is again turning complicated and messy.

17:16.440 --> 17:19.600
They say it is a system being designed for mere mortals.

17:19.600 --> 17:23.920
That was Simon Peter and they're working on an open source system that is welcoming to

17:23.920 --> 17:28.760
switchers from the Mac who have become disenfranchised with the direction of the platform.

17:28.760 --> 17:30.760
And from there it only got worse.

17:30.760 --> 17:36.320
With so-called platform security that in reality secures nothing but their own revenue stream,

17:36.320 --> 17:38.880
they are not helping you, the user.

17:38.880 --> 17:42.600
They're locked in and locked down is getting worse and worse.

17:42.600 --> 17:47.640
You are no longer free to own your devices and to do with them as you like.

17:47.640 --> 17:51.280
It feels more like you are a guest on devices rented to you.

17:51.280 --> 17:58.040
Now it is 0.5 but Wes and I decided to give Hello System a try and it's definitely clean

17:58.040 --> 17:59.040
and minimal.

17:59.040 --> 18:00.260
That's for sure.

18:00.260 --> 18:03.960
But you know if you're looking for something based on FreeBSD and you want a desktop that

18:03.960 --> 18:09.820
kind of gets out of your way, they're onto something here and it very much is reminiscent

18:09.820 --> 18:14.720
of the early macOS design UI, very early versions of macOS.

18:14.720 --> 18:18.300
You mean before it became more of a mobile inspired operating system?

18:18.300 --> 18:22.160
You could say that, in fact that's sort of what guides their design decisions.

18:22.160 --> 18:27.560
A desktop is not a mobile phone, hence let's not water down our user interfaces with design

18:27.560 --> 18:30.880
elements made for anything else but the mouse.

18:30.880 --> 18:33.760
And I can appreciate their perspective on this.

18:33.760 --> 18:38.640
You know at first glance you're like okay well why do we need another desktop environment,

18:38.640 --> 18:43.520
this is just one of many and I could theme an existing Qt environment to look like a

18:43.520 --> 18:46.640
Mac because this is all based on Qt as well from what I could see.

18:46.640 --> 18:52.160
And I kind of agree until I started reading into their ideas and I started kind of processing

18:52.160 --> 18:53.800
some of the project's goals.

18:53.800 --> 18:56.800
Let's talk about the goals of Hello System.

18:56.800 --> 19:02.640
I never quite remember whether it was Leonardo da Vinci or Steve Jobs who said simplicity

19:02.640 --> 19:05.000
is the ultimate sophistication.

19:05.000 --> 19:08.040
But in any case I wholeheartedly agree.

19:08.040 --> 19:11.600
Setting the language of the keyboard should be no more complicated than clicking on the

19:11.600 --> 19:13.380
name of the language.

19:13.380 --> 19:17.680
One click or even better the keyboard should just tell the computer its language, zero

19:17.680 --> 19:19.080
clicks.

19:19.080 --> 19:20.920
Less is more.

19:20.920 --> 19:23.620
Every pixel on the screen should serve a purpose.

19:23.620 --> 19:27.640
Every animation in the user interface should convey sense.

19:27.640 --> 19:30.520
Simple yet powerful is where we want to be.

19:30.520 --> 19:35.880
Our objective is to be both easy to use for mere mortals yet powerful under the hood for

19:35.880 --> 19:37.440
advanced users.

19:37.440 --> 19:41.560
Simon goes on to talk about supporting old Macs to bring life to old iMacs that have

19:41.560 --> 19:47.120
been abandoned by Apple as they age out or as they transition to their own platform.

19:47.120 --> 19:52.000
But I think what resonated with me was the idea of creating a welcoming user-friendly

19:52.000 --> 19:53.700
free BSD desktop environment.

19:53.700 --> 19:58.360
Not that there's a few out there of course, but this seems to actually have some real

19:58.360 --> 20:00.560
momentum behind it.

20:00.560 --> 20:05.760
They have a very well-defined project strategy, a well-defined goal, and very clear ideas

20:05.760 --> 20:07.440
of what goes in this and what doesn't.

20:07.440 --> 20:12.480
I think it's safe to say it's still early days, but yeah, I was kind of impressed with

20:12.480 --> 20:14.760
how well everything hung together.

20:14.760 --> 20:20.320
You can tell that there is a grand unified dream here somewhere, even if all the pieces

20:20.320 --> 20:21.800
aren't quite there yet.

20:21.800 --> 20:25.320
You know, if you're comfortable with free BSD or you wanted to experiment with free

20:25.320 --> 20:27.600
BSD, it is one version behind at this point.

20:27.600 --> 20:33.040
But if you like minimal Linux desktop environments like Xfce or LXQt, I think this would be

20:33.040 --> 20:34.840
appealing to you.

20:34.840 --> 20:39.480
And I like their long-term direction with this thing, so I actually thought I'd come

20:39.480 --> 20:40.920
on here and be really snarky.

20:40.920 --> 20:43.360
I thought that would be my take of this thing.

20:43.360 --> 20:46.480
Because, you know, another thing that looks like the Mac.

20:46.480 --> 20:52.240
But I like the idea of specifically creating a landing place for these Mac users who are

20:52.240 --> 20:54.000
getting frustrated with Apple.

20:54.000 --> 20:57.020
It's not everybody, you know, and it may not be millions of people.

20:57.020 --> 21:01.880
But to have some kind of landing pad that recreates a familiar Unix environment and

21:01.880 --> 21:06.240
has a familiar design ethos, it kind of makes sense.

21:06.240 --> 21:08.740
These disgruntled, I'm trying to think of another word for it, Wes, but you know, these

21:08.740 --> 21:13.600
disgruntled Mac users can go buy a ThinkPad and they can throw a hello system on there

21:13.600 --> 21:14.860
and be perfectly happy.

21:14.860 --> 21:16.880
Are the majority of them going to do it?

21:16.880 --> 21:17.880
No.

21:17.880 --> 21:21.400
But it doesn't seem like that much more of a stretch than trying to design an environment

21:21.400 --> 21:23.740
that's welcoming to Windows users.

21:23.740 --> 21:28.080
And perhaps it might be a catalyst for getting some newer hardware support in that free BSD

21:28.080 --> 21:29.080
kernel.

21:29.080 --> 21:30.080
I don't think that would hurt.

21:30.080 --> 21:34.520
When I first tried this out, Wes, I tried it in my VM and the results were mixed.

21:34.520 --> 21:36.480
So then I went and moved it over to my ThinkPad.

21:36.480 --> 21:39.560
And this totally makes sense, but it is a little confusing on the ThinkPad.

21:39.560 --> 21:42.640
They've designed it to use the command key like on the Mac.

21:42.640 --> 21:45.240
So to close a window, it's command W or command Q.

21:45.240 --> 21:46.720
I see what they're doing.

21:46.720 --> 21:50.660
I mean, it totally makes sense, but it was a little trippy on the ThinkPad to try to

21:50.660 --> 21:51.760
figure that out.

21:51.760 --> 21:53.980
They're just really getting started here.

21:53.980 --> 21:56.960
They're tweaking the look, they're tweaking the theme, they're fixing bugs.

21:56.960 --> 22:00.980
They're getting things like when you close the notebook lid, it actually goes to sleep

22:00.980 --> 22:01.980
by default.

22:01.980 --> 22:06.680
Like that's just been turned on now and they're kind of nailing down those kinds of basic

22:06.680 --> 22:11.180
fundamentals and digging into this project just a little bit to see who's involved.

22:11.180 --> 22:15.680
I noticed app image developer Pro Bono is involved with this project.

22:15.680 --> 22:19.560
And I think that gives it a good shot, like somebody who's got some real credentials and

22:19.560 --> 22:21.960
has shipped code that people are actually using.

22:21.960 --> 22:26.240
But on top of that, it makes me think it could be a great way to distribute applications

22:26.240 --> 22:30.340
that are self-contained on the system a lot like the Mac does.

22:30.340 --> 22:34.000
That could be a clever use of app image in a system like this that's integrated pretty

22:34.000 --> 22:38.080
core to the overall method to get software on and off the box.

22:38.080 --> 22:42.660
I actually don't know if that's the case because the Wi-Fi just totally did not work on my

22:42.660 --> 22:46.760
ThinkPad, so I didn't add or remove any software during my test.

22:46.760 --> 22:50.320
But top-to-bottom integration with app image since Pro Bono is involved just seems like

22:50.320 --> 22:52.000
an obvious direction this thing could go.

22:52.000 --> 22:56.960
With all these small independent desktop efforts, I think it's kind of important to think about

22:56.960 --> 22:58.840
really what are the goals here?

22:58.840 --> 23:03.160
And yeah, it'd be pretty neat if a hello system really took off and that's what we were doing

23:03.160 --> 23:05.520
the show on, say, or using on our laptops.

23:05.520 --> 23:07.360
It seems kind of like a long shot though.

23:07.360 --> 23:12.400
It does, at least based on all the other projects that have tried the very same.

23:12.400 --> 23:18.040
But regardless of that, it's interesting just as an academic, a philosophical, or even an

23:18.040 --> 23:24.720
artistic exercise to express possible visions of what the desktop could or may be.

23:24.720 --> 23:28.760
And you never know, there might be some hello system features that make it into a future

23:28.760 --> 23:31.560
Linux desktop or even the Mac.

23:31.560 --> 23:36.360
Yeah, it doesn't necessarily have to have millions and millions of users to move the

23:36.360 --> 23:40.960
needle and kind of be a vote for a way that computing should work.

23:40.960 --> 23:46.680
It kind of acts as a counterbalance to mobilize every UI element possible.

23:46.680 --> 23:48.840
So it's kind of great just in that regard.

23:48.840 --> 23:49.840
There's always fun developments.

23:49.840 --> 23:55.080
It's one of the things I love about free software and open source operating systems is you can

23:55.080 --> 24:00.600
go back in time if you want and go check out the classic days of macOS as if you're going

24:00.600 --> 24:02.200
to build it again today.

24:02.200 --> 24:05.480
And we love following that kind of stuff and all of the other things that matter in the

24:05.480 --> 24:07.700
world of Linux and open source.

24:07.700 --> 24:12.440
So check out linuxactionnews.com slash subscribe for all the ways to get new episodes of this

24:12.440 --> 24:13.520
here show.

24:13.520 --> 24:17.680
And linuxactionnews.com slash contact for ways to keep in touch.

24:17.680 --> 24:24.160
Jupiter Garage, the bearded tux joggers have become an audience favorite.

24:24.160 --> 24:27.120
Go check them out at JupiterGarage.com.

24:27.120 --> 24:32.280
We'll be back next Monday with our weekly take on the latest Linux and open source news.

24:32.280 --> 24:52.880
Thanks for joining us and we will see you next week.

