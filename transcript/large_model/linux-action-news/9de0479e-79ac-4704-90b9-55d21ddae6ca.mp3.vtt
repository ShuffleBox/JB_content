WEBVTT

00:00.000 --> 00:09.240
Hello, and welcome to Linux Action News, episode 183, recorded on April 4th, 2021. I'm Chris.

00:09.240 --> 00:10.240
And I'm Wes.

00:10.240 --> 00:14.200
Hello, Wes. Did you dodge all the pranks and fake releases for April Fools?

00:14.200 --> 00:17.880
Well, I think we'll see today the proof is in the podcast pudding.

00:17.880 --> 00:19.560
Alright, let's do the news.

00:19.560 --> 00:24.840
And we start with something that's definitely not a prank, although it was announced around

00:24.840 --> 00:32.720
April Fools, right on schedule, Alma Linux's initial release is here.

00:32.720 --> 00:37.480
This first version is based on Red Hat Enterprise Linux 8.3 sources.

00:37.480 --> 00:42.940
And as you probably remember, Alma Linux launched with the codename Project Linux when Red Hat

00:42.940 --> 00:49.340
announced CentOS was shifting focus from CentOS Linux to CentOS Stream, which tracks just

00:49.340 --> 00:51.880
ahead of the current RHEL release.

00:51.880 --> 00:57.880
Now under a new name, Alma Linux OS is here with its very first release.

00:57.880 --> 01:02.120
Yeah, congratulations to them and hitting it right on time to that's impressive to see

01:02.120 --> 01:04.440
that makes them first to market with this.

01:04.440 --> 01:11.440
Cloud Linux is the company behind Alma Linux, and they started in 2009 to provide a customized

01:11.440 --> 01:17.160
version of RHEL, their own version of RHEL that was purpose built for their customers,

01:17.160 --> 01:19.960
multi tenancy web and server hosting companies.

01:19.960 --> 01:23.800
So they were essentially selling the shovels to the hosting companies that were doing the

01:23.800 --> 01:24.800
mining.

01:24.800 --> 01:29.680
And when the Red Hat news about the change in CentOS status came out, they were just

01:29.680 --> 01:34.920
perfectly positioned to spring into action because their work pipeline was building this

01:34.920 --> 01:35.920
already.

01:35.920 --> 01:37.000
That's what they had been doing.

01:37.000 --> 01:40.840
So they were first to market with this stable traditional CentOS clone because it was so

01:40.840 --> 01:43.600
in line with their existing business practice.

01:43.600 --> 01:48.120
As exciting as all that is, though, Chris, there's another piece of this announcement

01:48.120 --> 01:50.400
that might be just as important.

01:50.400 --> 01:52.600
You might be right, Wes, long term.

01:52.600 --> 01:56.760
So what it is, is the company announced the formation of a nonprofit organization that

01:56.760 --> 02:02.260
will go around the distribution, and it's aptly named the Alma Linux Open Source Foundation.

02:02.260 --> 02:08.200
And it's this group that's going to take over managing the Alma Linux project going forward,

02:08.200 --> 02:13.360
although Cloud Linux will still be involved and has even committed a one million dollar

02:13.360 --> 02:16.760
annual endowment to support the project.

02:16.760 --> 02:22.880
They've recently hired a former Red Hat employee and Fedora engineer to run the community.

02:22.880 --> 02:26.560
And this governing board they're putting together, I'm mixed on it, Wes.

02:26.560 --> 02:31.360
Yeah, it sounds like it'll be mostly made up of Cloud Linux staff, but there are going

02:31.360 --> 02:36.200
to be two additional members that will be selected by the Alma Linux community itself.

02:36.200 --> 02:41.040
Yeah, a couple of members just from outside of Alma Linux that are part of the nonprofit,

02:41.040 --> 02:45.960
a couple of members of the staff from Cloud Linux, and then I guess down the road, these

02:45.960 --> 02:47.960
other community members will join.

02:47.960 --> 02:53.280
But to me, Wes, it seems like a clear attempt to appeal to the people that are still kind

02:53.280 --> 02:58.840
of in shock by all of the CentOS changes and perhaps skeptical of a corporate entity running

02:58.840 --> 03:03.040
this type of distribution now, and maybe are a little more inclined to go with something

03:03.040 --> 03:04.460
backed by a community.

03:04.460 --> 03:08.320
It feels like they're trying to say, well, we will now be all of those things.

03:08.320 --> 03:12.800
We will have the one million dollar resources of Cloud Linux and some of the staff, and

03:12.800 --> 03:16.200
we have a community governance board which will guide the distribution.

03:16.200 --> 03:20.520
Yeah, or at least I think there's the sense that they want to do this the right way, that

03:20.520 --> 03:25.320
they appreciate the open source model and the open source community, and they acknowledge

03:25.320 --> 03:26.880
like, okay, well, we should probably have a foundation.

03:26.880 --> 03:27.880
We should have a board.

03:27.880 --> 03:29.680
We should have folks involved with the community.

03:29.680 --> 03:31.640
It's definitely a positive thing, I think, to see that.

03:31.640 --> 03:34.800
Yeah, I mean, the intention seems good here.

03:34.800 --> 03:40.080
It does to me still feel there's been a lot of benefit from the corporate resources to

03:40.080 --> 03:44.400
get this bootstrapped, and it's all happened very quickly, again, to their credit.

03:44.400 --> 03:49.220
But I just, I think it takes time to build legitimate community and that interaction

03:49.220 --> 03:54.040
and to see, you know, over a couple of releases maybe, or at least a few more months, is there

03:54.040 --> 03:55.040
back and forth?

03:55.040 --> 03:56.760
How does the development work?

03:56.760 --> 03:58.880
What's the nature of this new community?

03:58.880 --> 03:59.880
Right.

03:59.880 --> 04:01.440
This is truly chapter one.

04:01.440 --> 04:03.500
Everything that's been before this was just like the epilogue.

04:03.500 --> 04:09.140
This is now what is living this distribution like going forward.

04:09.140 --> 04:14.520
And it's ironic because the benchmark might actually be the least you can tell, like the

04:14.520 --> 04:18.400
less and less you can tell you're on a different distribution, the better a job they're doing.

04:18.400 --> 04:22.280
And they're trying to make it appealing to people to convert from RHEL or CentOS to them

04:22.280 --> 04:23.280
and make scripts available.

04:23.280 --> 04:28.080
But you got to think it's a job well done when you can't tell you've switched, which

04:28.080 --> 04:29.080
is kind of funny.

04:29.080 --> 04:30.440
You look at it, that's kind of funny.

04:30.440 --> 04:35.760
But I think they recognize what this is.

04:35.760 --> 04:39.020
This is a once in a lifetime opportunity.

04:39.020 --> 04:44.760
This is like parallel universe kind of opportunity, like when and how else who could have seen

04:44.760 --> 04:51.240
this giant opening coming in the super established enterprise grade Linux server distro market.

04:51.240 --> 04:52.900
It was locked down tight.

04:52.900 --> 04:57.480
And now all of a sudden this company we've never heard of until about a year ago, well,

04:57.480 --> 05:02.520
a little bit not even that long ago, comes along and they have the first crack at what

05:02.520 --> 05:07.360
could be one of the major Linux server distros.

05:07.360 --> 05:09.440
When else do you see an opportunity like this open up?

05:09.440 --> 05:13.840
And the fact that they executed in four months, it puts them I think at the front of the list

05:13.840 --> 05:14.840
right now.

05:14.840 --> 05:15.840
Yeah, I think it does.

05:15.840 --> 05:17.840
And clearly they sense that this was an opportunity.

05:17.840 --> 05:22.760
I mean, you weren't just going to go unseat the classic version of CentOS by yourself,

05:22.760 --> 05:23.760
right?

05:23.760 --> 05:24.760
No.

05:24.760 --> 05:27.720
It took Red Hat deciding they wanted to change the focus for this to exist.

05:27.720 --> 05:30.740
They should probably feel good about how quickly they've dived in here.

05:30.740 --> 05:35.640
And how good they are positioned, because it was already kind of in line with their

05:35.640 --> 05:36.960
existing business model.

05:36.960 --> 05:40.160
So this was a process that they've already built and established.

05:40.160 --> 05:44.520
And so just expanding on that wasn't a matter of spinning up everything from scratch like

05:44.520 --> 05:45.520
it is for Rocky Linux.

05:45.520 --> 05:48.720
It was just simply investing in what they've already done.

05:48.720 --> 05:49.720
Right.

05:49.720 --> 05:52.840
Build it out a little better in the public view, transition things out into the open

05:52.840 --> 05:54.720
and make it a little more generic.

05:54.720 --> 06:01.200
And they have the benefit of having the organizational aspects of a company to help just staff the

06:01.200 --> 06:03.680
things that need done to get something like this going.

06:03.680 --> 06:09.200
I mean, even getting a governance board established takes many, many hours of work behind the

06:09.200 --> 06:10.200
scenes.

06:10.200 --> 06:12.820
And they have people who get paid to do that work.

06:12.820 --> 06:16.360
And so they're kind of giving you the promise or the kind of the guarantee you get by having

06:16.360 --> 06:23.040
a company with a revenue model behind it and the advantage of having community governance.

06:23.040 --> 06:27.080
But it's really going to be one of these things where we're going to have to be a year or

06:27.080 --> 06:31.720
two down the road to see how all of these different CentOS clones are contending.

06:31.720 --> 06:35.840
And if any of them have deviated much, if they try to add their own value or whatever

06:35.840 --> 06:40.520
it might be that makes them different, because their core value is going to be as close to

06:40.520 --> 06:46.480
RHEL as possible, which means there's not a lot of area in there for them to offer differentiated

06:46.480 --> 06:47.480
value.

06:47.480 --> 06:51.920
And of course, there's still also, you know, CentOS is around, Stream exists.

06:51.920 --> 06:55.140
And how do you feel about this, you know, this new brand new community and foundation

06:55.140 --> 06:58.560
versus something more established like Red Hat itself?

06:58.560 --> 06:59.920
That's still up in the air.

06:59.920 --> 07:06.080
Along with that is not just CentOS as a project, but also is this Stream model perhaps a better

07:06.080 --> 07:11.120
model for servers today, especially servers where a lot of the workload is either virtualized

07:11.120 --> 07:13.000
or containerized.

07:13.000 --> 07:17.360
Maybe it makes a little more sense to go the core OS route and have a little bit more frequently

07:17.360 --> 07:19.320
updated base OS.

07:19.320 --> 07:25.800
And CentOS will provide just that, but still be a very enterprise focused distribution.

07:25.800 --> 07:31.120
So it could actually end up being perfectly usable for most people.

07:31.120 --> 07:35.000
And none of these CentOS clones ever ended up picking up that many users in mass because

07:35.000 --> 07:36.000
of that.

07:36.000 --> 07:38.840
Just wait and see.

07:38.840 --> 07:45.200
Like a bad movie remake, this week, IBM and Red Hat were sued for copyright and antitrust

07:45.200 --> 07:49.240
violations from a SCO group successor, Zinus.

07:49.240 --> 07:54.720
They formed around the SCO group's zombie corpse about a decade ago.

07:54.720 --> 07:57.940
And this week they thought, hey, let's reignite a decades old fight.

07:57.940 --> 08:04.680
So they sued IBM and Red Hat for alleged copyright antitrust violations, claiming that, quote,

08:04.680 --> 08:10.760
first, IBM stole Zinus's intellectual property and used that stolen property to build and

08:10.760 --> 08:14.720
sell a product to compete with Zinus itself.

08:14.720 --> 08:21.760
And second, stolen property in IBM's hand, IBM and Red Hat illegally agreed to divide

08:21.760 --> 08:27.040
the relevant market and use their growing market powers to victimize consumers, innovative

08:27.040 --> 08:30.160
competitors and innovation itself.

08:30.160 --> 08:31.440
My goodness.

08:31.440 --> 08:36.880
The complaint from the Virgin Islands based company further contends that after the two

08:36.880 --> 08:42.920
companies conspired in their evil boardrooms to divide the market up, IBM then did their

08:42.920 --> 08:49.600
master move and acquired Red Hat to really solidify its evil genius position.

08:49.600 --> 08:55.640
Now, of course, the SCO group way back in 2003 made a similar intellectual property

08:55.640 --> 09:01.400
claim at the time, arguing that the SCO group owned the rights to AT&T's Unix and Unixware

09:01.400 --> 09:07.960
operating system source code, and that Linux versions 2.4 and 2.5 at the time were just

09:07.960 --> 09:12.880
unauthorized derivatives of Unix.

09:12.880 --> 09:17.640
And that IBM violated its contractual obligations by distributing Linux.

09:17.640 --> 09:24.240
I can't help but just have a toot about this one, because I remember this from the days

09:24.240 --> 09:26.360
gone by where this originally went down.

09:26.360 --> 09:32.320
You know, back in 2001, SCO, which was this plucky little Unix company, joined forces

09:32.320 --> 09:36.880
with a plucky little Linux company called Caldera to form what they thought was going

09:36.880 --> 09:41.760
to be like this major, serious Unix approach to Linux that would compete with Red Hat.

09:41.760 --> 09:45.840
Instead, it took them about two years or so to drive the thing into the ground.

09:45.840 --> 09:51.400
And then SCO sued IBM in an all-out legal attack to essentially try to derive some

09:51.400 --> 09:53.880
value from the IP they held.

09:53.880 --> 10:00.200
And as I recall, and probably many of you do as well, that drug on for years.

10:00.200 --> 10:02.600
And it got to a point where it got ridiculous.

10:02.600 --> 10:07.580
I had clients who started to doubt the use of Linux because SCO actually made claims

10:07.580 --> 10:12.320
that they would sue individual Linux users for infringement.

10:12.320 --> 10:15.800
Despite those claims, things did not exactly go well.

10:15.800 --> 10:22.920
SCO lost battle after battle, and was eventually forced to file for bankruptcy in 2007.

10:22.920 --> 10:27.800
But what is notable is that while some of the claims have been dismissed, its case against

10:27.800 --> 10:30.440
IBM remains essentially unresolved.

10:30.440 --> 10:34.960
I always wondered if this would come back to bite us.

10:34.960 --> 10:37.920
So let's fast forward to 2011.

10:37.920 --> 10:42.240
They went bankrupt in 2007, we fast forward to 2011, and really the only thing left of

10:42.240 --> 10:48.480
value in SCO is its Unix operating system, which they sold to Unixis, or Unisys?

10:48.480 --> 10:50.920
The original name of Xenius.

10:50.920 --> 10:51.920
Right.

10:51.920 --> 10:55.240
That acquisition, which at the time seemed a little strange, kind of makes sense when

10:55.240 --> 10:59.600
you figure that SCO's Unix products, like Open Server and Unixware, still had a small

10:59.600 --> 11:01.720
but real market share.

11:01.720 --> 11:08.080
But the ironic thing is, is at the time, the Xenius people said, we have no interest in

11:08.080 --> 11:17.400
SCO's quote, worthless lawsuits, and in 2016, the CEO Sean Snyder said, we are not SCO.

11:17.400 --> 11:20.080
We are investors who bought the products.

11:20.080 --> 11:26.360
We did not buy the ability to pursue litigation against IBM, and we have absolutely no interest

11:26.360 --> 11:27.360
in that.

11:27.360 --> 11:28.360
Now, what changed?

11:28.360 --> 11:31.320
You know, because that's a pretty bold statement.

11:31.320 --> 11:36.900
Well, kind of like the old SCO Caldera situation fell apart.

11:36.900 --> 11:41.560
They also have fallen upon hard times and now have officially released a statement that

11:41.560 --> 11:47.000
says, well, this case is about Xenius and the theft of our intellectual property.

11:47.000 --> 11:52.680
It is also about market manipulation that has harmed consumers, competitors, the open

11:52.680 --> 11:55.800
source community, and innovation itself.

11:55.800 --> 12:01.320
These copyright claims go back almost two decades now, and seem like they've lost time

12:01.320 --> 12:02.640
after time.

12:02.640 --> 12:05.680
But digging into this again, I was looking at it, it seems like the litigation is based

12:05.680 --> 12:11.840
off of specific Unixware and open server operating systems and code that came into existence

12:11.840 --> 12:15.220
after September 19th, 1995.

12:15.220 --> 12:18.720
So not the earlier Unix code, but after that point.

12:18.720 --> 12:24.040
So when an IBM spokesperson was reached for comment, Doug Shelton responded with the following.

12:24.040 --> 12:29.840
Xenius's copyright allegations merely rehash the stale claims of its predecessor, whose

12:29.840 --> 12:34.820
copyright Xenius purchased out of bankruptcy and have no merit.

12:34.820 --> 12:39.020
Xenius's antitrust allegations brought against IBM and Red Hat, the world's largest open

12:39.020 --> 12:42.640
source company, similarly defy logic.

12:42.640 --> 12:48.000
IBM and Red Hat will aggressively defend the integrity of the open source development process

12:48.000 --> 12:52.880
in the inherent choice and thus competition that open source fosters.

12:52.880 --> 13:00.040
Not only does it defy logic, as IBM puts it, but Xenius provides really zero proof of this

13:00.040 --> 13:06.400
claim that IBM and Red Hat conspired to divide up the Unix and Linux market between them

13:06.400 --> 13:11.560
and then the grand finale was IBM's ninja move to buy Red Hat to consolidate its market

13:11.560 --> 13:12.560
share.

13:12.560 --> 13:19.800
No, it seems more like IBM's purchase of Red Hat was a desperate move to stay relevant.

13:19.800 --> 13:25.840
And of course, Xenius's version of reality doesn't explain the rise of Debian, Ubuntu,

13:25.840 --> 13:29.360
or all the other server distros.

13:29.360 --> 13:38.520
Linode makes cloud computing simple, affordable, and accessible.

13:38.520 --> 13:42.000
I realized the other day Linode is really part of our team.

13:42.000 --> 13:47.400
They make what we do behind the scenes possible, and if it weren't really for these spots,

13:47.400 --> 13:52.040
you'd never know that we use Linode because, like all great infrastructure, the users never

13:52.040 --> 13:53.040
really notice it.

13:53.040 --> 13:58.080
It's just fast, reliable, and it makes your experience great, and that's one of the many

13:58.080 --> 14:02.480
reasons Linode is our favorite hosting provider.

14:02.480 --> 14:06.920
Linode is also the largest independent cloud computing provider.

14:06.920 --> 14:09.860
They've been in this since 2003, and they've got it right.

14:09.860 --> 14:14.800
They make it easy for you to give your creations their own personal space on the internet.

14:14.800 --> 14:18.900
No matter what skill level you're at or what technology stack you use, Linode can help

14:18.900 --> 14:24.160
your ideas come to life on the web, and if you run into any trouble, they have the best

14:24.160 --> 14:25.160
support.

14:25.160 --> 14:30.520
Linode comes with whatever level account you have, one server, or a whole bunch of servers.

14:30.520 --> 14:37.480
You get 24-7 customer support by phone, ticket, chat, along with hundreds of super high-quality

14:37.480 --> 14:42.640
tutorials to help you get started, and Linode is easy to use while also having a powerful

14:42.640 --> 14:44.240
cloud dashboard.

14:44.240 --> 14:47.980
One of the features I love is their S3-compatible object storage.

14:47.980 --> 14:51.200
It's great for all kinds of applications, so that's why you gotta go and check it out

14:51.200 --> 14:54.840
for yourself and get that $100 credit and support the show.

14:54.840 --> 14:57.480
Sign up today at linode.com slash LAN.

14:57.480 --> 15:02.280
Get that $100 60-day credit towards your new account and support the show, of course.

15:02.280 --> 15:06.440
That's linode.com slash LAN.

15:06.440 --> 15:13.240
Canonical has released a community preview of Ubuntu on Windows as a sandbox for experimenting

15:13.240 --> 15:20.320
with new features and functionality on Windows Subsystem for Linux 2, aka the Weasel.

15:20.320 --> 15:25.840
Now, if you're not familiar, Ubuntu on Windows is normally installed via the Microsoft Store,

15:25.840 --> 15:29.120
and only LTS releases are available.

15:29.120 --> 15:34.560
Yeah, now this new preview that Canonical is cooking up is only available by a special

15:34.560 --> 15:39.440
sneaky link, which of course we have in the show notes, and it's a frequently updated

15:39.440 --> 15:46.320
build of Ubuntu that is based on 21.04, which is expected to release on April 22nd.

15:46.320 --> 15:51.760
This setup is specifically more user-friendly for the WSL environment, and it uses a utility

15:51.760 --> 15:56.480
called Ubuntu Weasel with many features that are experimental, and this allows Windows

15:56.480 --> 16:01.240
users to tinker with settings such as how Windows drives are mounted and other kind

16:01.240 --> 16:05.440
of text-based options to make life in Weasel more satisfying.

16:05.440 --> 16:11.040
Now, Canonical said that the preview is important to match the speed of innovation in open source

16:11.040 --> 16:15.300
and test new features with the community at a faster pace.

16:15.300 --> 16:20.520
That's another way of saying we feel like this platform has a community that is large

16:20.520 --> 16:26.340
enough that wants to build applications on Ubuntu, but they want the latest Ubuntu so

16:26.340 --> 16:33.240
they can supposedly, in theory, I guess hypothetically, develop future Ubuntu applications from the

16:33.240 --> 16:37.120
Windows desktop, because that's why they would need access to the development versions of

16:37.120 --> 16:42.260
Ubuntu is if they're writing applications, but they're using it via Weasel on Windows,

16:42.260 --> 16:47.720
so they're writing Linux applications on Windows for a version of Linux that hasn't been released

16:47.720 --> 16:48.720
yet.

16:48.720 --> 16:52.240
Now, maybe you're writing a server-side app that you're just trying to, you know, plan

16:52.240 --> 16:53.720
ahead a little bit.

16:53.720 --> 16:54.720
Hmm.

16:54.720 --> 16:55.720
Okay.

16:55.720 --> 16:56.720
Yeah, okay.

16:56.720 --> 16:58.900
That does make more sense for the server side, although how many servers are going to be

16:58.900 --> 17:00.960
based off of 2104?

17:00.960 --> 17:04.460
But they'll be based on future LTSs, and maybe you want to make sure you're catching up with

17:04.460 --> 17:06.080
libraries to get ahead of changes.

17:06.080 --> 17:11.760
Right, you get the kinks worked out on this system before it's close to the LTS time,

17:11.760 --> 17:14.920
and then by the time it's LTS time, you have this system kind of worked out and people

17:14.920 --> 17:20.400
know how to use it, and you know, maybe these scripts to make it better under Weasel are

17:20.400 --> 17:22.080
even more fleshed out.

17:22.080 --> 17:27.400
Though to your point, one feature that is eagerly awaited right now is official support

17:27.400 --> 17:30.000
for a GUI on Weasel 2.

17:30.000 --> 17:36.960
Now, last year at Build 2020 in May, a Microsoft program manager did say that adding Linux

17:36.960 --> 17:42.320
GUI app support is on the roadmap, and that their goal is for a user to be able to run

17:42.320 --> 17:48.480
Linux GUI apps on the desktop seamlessly alongside Windows apps.

17:48.480 --> 17:54.160
We've heard little sense, perhaps there will be more at this upcoming build, but what we

17:54.160 --> 17:59.680
do know is Microsoft's implementation is going to communicate with an RDP client on the Windows

17:59.680 --> 18:00.680
host.

18:00.680 --> 18:05.960
Sadly, no sign of this yet in the new Windows community preview, but there is an intriguing

18:05.960 --> 18:12.480
option to include legacy GUI integration, though we should note that requires a third

18:12.480 --> 18:13.480
party X server.

18:13.480 --> 18:20.040
Well, just in time, because it might be just one giant leap away from finally getting rid

18:20.040 --> 18:26.080
of our X servers, Wes, because this week, NVIDIA proposed Mesa patches to support alternative

18:26.080 --> 18:31.960
generic buffer manager backends, which I read as Wayland support is nigh.

18:31.960 --> 18:37.800
Boy, oh boy, yeah, it looks like NVIDIA is finally taking the GBM route for supporting

18:37.800 --> 18:42.520
Wayland compositors with their proprietary driver.

18:42.520 --> 18:48.540
For years, NVIDIA was resisting using GBM, and instead proposed using an alternative

18:48.540 --> 18:50.640
called EGL streams.

18:50.640 --> 18:56.180
Now, some compositor, like Gnome's Mudder, did implement EGL streams, but it's been kind

18:56.180 --> 19:01.000
of only a mild success, really hit and miss, and a lot of Wayland compositors were not

19:01.000 --> 19:04.440
exactly keen to implement an NVIDIA specific solution.

19:04.440 --> 19:08.120
Yeah, it was like this package deal that people didn't like because they were pushing this

19:08.120 --> 19:14.160
new Unix device memory allocator interface to try to address some shortcomings of GBM

19:14.160 --> 19:18.000
and they thought, well, maybe we could learn a few things from what we liked about EGL

19:18.000 --> 19:19.000
and bring it forward.

19:19.000 --> 19:22.800
But there really hasn't been much to report on that front, doesn't seem like they got

19:22.800 --> 19:28.540
much traction and without much changing now, NVIDIA with the version 470 of their driver

19:28.540 --> 19:34.640
series has Wayland improvements that are expected and will introduce DMA buffer passing support,

19:34.640 --> 19:40.640
which is the clearest sign yet that they are actually going the GBM route, which is exciting

19:40.640 --> 19:45.200
because that's where most of the community momentum is for this solution.

19:45.200 --> 19:50.600
We got an update when NVIDIA's James Jones, longtime contributor to Linux drivers and

19:50.600 --> 19:55.240
Wayland related efforts on their side, sent out a work in progress merge request that

19:55.240 --> 20:00.800
would allow Mesa to discover and load alternative GBM back ends.

20:00.800 --> 20:05.360
And it seems like the only reason NVIDIA would be working on this GBM back end discovery

20:05.360 --> 20:11.680
and loading code was if they were planning to, perhaps already done internally, implement

20:11.680 --> 20:15.200
GBM support for their proprietary Linux driver.

20:15.200 --> 20:19.740
Yeah, this doesn't take away the need for the proprietary driver.

20:19.740 --> 20:25.800
So it's still not as simple a solution as an Intel Linux box or an AMD Radeon style

20:25.800 --> 20:29.160
system where you just boot up the system and it just works out of the box.

20:29.160 --> 20:32.120
You still have to load the NVIDIA proprietary driver here.

20:32.120 --> 20:39.520
But NVIDIA being willing to make this compromise actually, truly for realsies opens the door

20:39.520 --> 20:47.020
to use Wayland on the proprietary NVIDIA driver, which means by summer, end of summer ish,

20:47.020 --> 20:51.680
the classic age old problem that prevented Wayland adoption amongst a ginormous swath

20:51.680 --> 20:53.960
of the Linux population could be resolved.

20:53.960 --> 20:57.960
And it could be a problem of the past that just is no longer a problem.

20:57.960 --> 21:03.920
With this contribution and that recent GPU pass-through contribution, does this mean

21:03.920 --> 21:08.580
we have to hate NVIDIA less?

21:08.580 --> 21:10.680
Linux.ting.com.

21:10.680 --> 21:13.540
New year, new plans, same incredible service.

21:13.540 --> 21:17.440
And you know, a good family plan is hard to find, but not at Ting.

21:17.440 --> 21:22.800
Ting's newest flex plan addresses this particular pain point in a very customer friendly kind

21:22.800 --> 21:23.800
of way.

21:23.800 --> 21:27.200
Add as many lines on your account as you need, it's just $10 per line.

21:27.200 --> 21:29.920
Every line has unlimited texting calls.

21:29.920 --> 21:35.680
Every line shares the same pool of LTE or 5G, and you just pay $5 per gigabyte as you

21:35.680 --> 21:36.680
need.

21:36.680 --> 21:40.360
But if you need two gigs or 20 gigs, there's a perfect Ting plan for you.

21:40.360 --> 21:46.320
And every plan gets access to Ting's award-winning customer service with nationwide LTE and 5G

21:46.320 --> 21:47.320
coverage.

21:47.320 --> 21:53.000
Plus, the thing I love the most, the freedom of no contracts ever.

21:53.000 --> 21:55.980
And now Ting has three great networks to choose from.

21:55.980 --> 21:56.980
It's simple to switch to Ting.

21:56.980 --> 22:01.760
I've been on the Verizon network and it was easy to go to linux.ting.com, check my current

22:01.760 --> 22:06.560
phone, I created an account, got the plan dialed in, and then Ting sent me a SIM card

22:06.560 --> 22:09.700
that I just popped into my phone and it was active in minutes.

22:09.700 --> 22:13.320
You can do it all through their beautiful website, but if you ever need support, they're

22:13.320 --> 22:15.160
right there to help you.

22:15.160 --> 22:19.620
Cutting your phone bill in half has never been easier with Ting's mobile plans.

22:19.620 --> 22:21.680
Check out the Flex plan and much more.

22:21.680 --> 22:23.400
It's the next generation of Ting mobile.

22:23.400 --> 22:24.400
It's here.

22:24.400 --> 22:30.560
So go see how much you could save and get $25 off at linux.ting.com.

22:30.560 --> 22:34.440
Thanks to Ting for supporting Linux Action News and thanks to everyone who supports this

22:34.440 --> 22:39.440
show by going to linux.ting.com.

22:39.440 --> 22:41.900
Good news in GTK Town.

22:41.900 --> 22:47.020
There's a new library in the works that should be a boon to anyone looking to create a modern

22:47.020 --> 22:48.900
GNOME application.

22:48.900 --> 22:52.460
But to understand why, we need a little bit of context.

22:52.460 --> 22:59.440
For the past 20 years, GNOME has had Human Interface Guidelines, or HIG for short, but

22:59.440 --> 23:04.140
implementing them has been a lot of manual work for application developers.

23:04.140 --> 23:09.600
And it's tricky because developers have been told, yeah, just go create a GTK application.

23:09.600 --> 23:14.920
How do you create a, quote unquote, GNOME looking GTK application?

23:14.920 --> 23:17.360
Elementary OS has Granite.

23:17.360 --> 23:22.680
And there are some things out there that GTK developers can use like Lib Handy and a few

23:22.680 --> 23:26.880
others that have cropped up over the years like Lib Dazzle.

23:26.880 --> 23:33.680
But it's not really a clear signal on this is how you go create a GNOME looking and GNOME

23:33.680 --> 23:35.240
design following application.

23:35.240 --> 23:37.800
It just really hasn't existed.

23:37.800 --> 23:42.400
Developers have clearly needed some kind of blessed library that implements the HIG and

23:42.400 --> 23:44.860
what a standard GNOME application should look like.

23:44.860 --> 23:49.820
This new LibAdoita library intends to be that missing code.

23:49.820 --> 23:55.400
It's going to be implemented as a direct GTK for continuation and replacement of Lib Handy.

23:55.400 --> 23:58.680
And it's going to be developed by those same current developers.

23:58.680 --> 24:00.200
Replacement of Lib Handy is a big deal.

24:00.200 --> 24:03.840
And I don't think when Lib Handy first came along, they thought it would be this way to

24:03.840 --> 24:05.480
create standard looking applications.

24:05.480 --> 24:10.600
But it clearly has been something that the GTK ecosystem developers have needed.

24:10.600 --> 24:13.700
Now the library not quite ready to be used yet.

24:13.700 --> 24:16.440
There's still some fixes and remaining issues that have to be worked out.

24:16.440 --> 24:20.320
They're going to write up a migration guide and then they'll start releasing an alpha

24:20.320 --> 24:21.560
that people can target.

24:21.560 --> 24:28.000
But what's key here is that this LibAdoita library is going to follow revisions of the

24:28.000 --> 24:30.600
GNOME Shell Human Interface Guideline.

24:30.600 --> 24:34.520
And it will have a release schedule that tracks with GNOME's release schedule.

24:34.520 --> 24:38.560
And each version of the library will target a specific version of GNOME and the first

24:38.560 --> 24:41.640
stable version being released alongside GNOME 41.

24:41.640 --> 24:43.280
Dang it, Chris.

24:43.280 --> 24:44.880
Just when you started learning Flutter.

24:44.880 --> 24:48.320
Somehow I'm going to make due, Wes, because a well-known GNOME developer has been chipping

24:48.320 --> 24:54.420
away at making OBS Studio work completely under Wayland that includes things like capturing

24:54.420 --> 24:58.640
monitor and windows, even on the Wayland composite desktop.

24:58.640 --> 24:59.640
It's here.

24:59.640 --> 25:00.640
It's awesome.

25:00.640 --> 25:01.640
It's a release candidate.

25:01.640 --> 25:03.520
It's a major milestone for the Linux Wayland desktop.

25:03.520 --> 25:06.560
Yeah, I think this is one of those checkboxes.

25:06.560 --> 25:09.960
There's just a number of Linux users out there and they need to have before they're actually

25:09.960 --> 25:11.260
ready for Wayland.

25:11.260 --> 25:15.600
And it's nice to see all the hard work that's had to go in both to the OBS project itself,

25:15.600 --> 25:20.280
but also all the plumbing underneath things like pipe wire and portals that are required

25:20.280 --> 25:24.820
to make this not only work, but eventually be better and more secure than it could have

25:24.820 --> 25:26.600
ever been on X11.

25:26.600 --> 25:29.040
Well, they weren't April fooling around.

25:29.040 --> 25:32.040
Arch actually has an installer now.

25:32.040 --> 25:34.640
And you know us, we had to give it a go.

25:34.640 --> 25:35.640
Yeah, you know we did.

25:35.640 --> 25:36.640
We had to try it.

25:36.640 --> 25:40.940
You download the standard Arch ISO image and then just run Arch install and get kind of

25:40.940 --> 25:44.380
like a guided basic installation.

25:44.380 --> 25:45.920
It's not going to do much fancy for you.

25:45.920 --> 25:47.940
No, it's a Python application.

25:47.940 --> 25:51.880
You can also install it with PIP or all the other ways to get Python apps if you like.

25:51.880 --> 25:54.760
But I like they've included it by default, huh?

25:54.760 --> 25:59.860
And no, there's not a lot of extensibility right now, at least not in the built in.

25:59.860 --> 26:03.560
But because it's Python, they've got some documentation for scripting it yourself.

26:03.560 --> 26:07.280
If you want to totally customize it, that has some interesting potential.

26:07.280 --> 26:10.660
Yeah, because when you're kind of done answering all of its questions, it essentially just

26:10.660 --> 26:13.460
generates a big JSON output of what's going to happen to your machine.

26:13.460 --> 26:18.580
So I would think you could take that and pipe that back to the Arch installer on another

26:18.580 --> 26:20.880
machine and just kind of replicate your setup.

26:20.880 --> 26:25.300
Yeah, and you can use it as a library directly if you want to go fully custom, say, for your

26:25.300 --> 26:27.400
fleet of Arch servers you're building.

26:27.400 --> 26:29.320
Of course, obviously, who wouldn't be?

26:29.320 --> 26:33.280
And I'll say this, it's not like going to blow you away.

26:33.280 --> 26:38.480
But by the time you're done, you'll have a fully booting graphical Arch Linux desktop.

26:38.480 --> 26:42.460
Pretty minimal, but there and it takes about 15 minutes.

26:42.460 --> 26:44.480
There is one gotcha we ran into, though.

26:44.480 --> 26:48.260
We were testing things out in a virtual machine, I'll admit.

26:48.260 --> 26:50.260
Haven't tried it on bare metal yet.

26:50.260 --> 26:52.460
It only seems to support EFI.

26:52.460 --> 26:55.380
So watch out you BIOS booters out there.

26:55.380 --> 26:56.380
It's legacy.

26:56.380 --> 27:00.440
But of course, that's what we got by default in the virtual machine tells you things are

27:00.440 --> 27:02.020
done and ready to reboot.

27:02.020 --> 27:04.820
Oh, no, my friend, you don't come back from that.

27:04.820 --> 27:05.820
Who would have thought it?

27:05.820 --> 27:08.940
Arch with its own official installer and it's really, you know what, it's not bad.

27:08.940 --> 27:11.340
We'll have a link to the project repository too.

27:11.340 --> 27:14.880
There's always a lot going on those to go to LinuxActionNews.com slash subscribe for

27:14.880 --> 27:21.020
all the ways to get new episodes and LinuxActionNews.com slash contact for ways to keep in touch.

27:21.020 --> 27:24.340
Now don't miss Linux Unplugged 400 this week.

27:24.340 --> 27:27.660
Wes and I have been brewing up something special.

27:27.660 --> 27:32.840
We'll be back next Monday with our weekly take on the latest Linux and open source news.

27:32.840 --> 27:51.220
Thanks for joining us and we will see you next week.

