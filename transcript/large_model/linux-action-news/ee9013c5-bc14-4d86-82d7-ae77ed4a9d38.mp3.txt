Hello, and welcome to Linux Action News, episode 265, recorded on November 2, 2022.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
We start this week with that open SSL vulnerability we told you to keep an eye out for.
Well, it turns out, actually, two high-severity vulnerabilities have now been disclosed.
The critical issues include an x509 email address 4-byte buffer overflow and a separate
x509 email address variable length buffer overflow.
Now the one that you're probably thinking of, the one that caused the delay in the Fedora
release, that's CVE-2022-3602, if you'd like to go look it up.
Now it turns out, after further analysis, they decided to downgrade it as just a high-severity
issue.
Additionally, research done before the public was notified seems to demonstrate that platforms
which implement stack overflow protections can take these issues from a risk of remote
code execution to just a risk of an application crash.
Still not great, but a whole lot better.
Yeah, definitely take that over remote code execution.
The project, open SSL, still does warn everyone, though, that they can't really account for
every platform and compiler combination out there in their testing.
So it might still be theoretically possible to trigger a buffer overflow that results
in remote code execution in some circumstances, even with protections in place.
So USC Linux users out there, don't get too smug.
And that's why users of OpenSSL 3.0.0 through 3.0.6 are highly encouraged to upgrade to
3.0.7 as soon as possible.
Now if you're curious about the timeline of all this like we were, so that's CVE-2022-3602.
That was reported in private to the OpenSSL project on the 17th of this October by a username
Polar Bear, who was performing an audit of the OpenSSL code.
Now another individual did a subsequent analysis later on the 18th of October, and they found
a second independently triggerable issue, which has been labeled CVE-2022-3786.
Then on the 25th of October, the OpenSSL project notified various organizations about these
vulnerabilities under their pre-notification policy.
And then we got version 3.0.7 of OpenSSL, which contains the fixes for these issues
on the 1st of November.
And special thanks to our buddy Alex.
Jupyter Broadcasting's info machines were upgraded this morning, and we're very happy
to report everything went smoothly.
Now keep in mind that Linux 6.1 is not even out yet, but that doesn't stop the world from
looking at the code and seeing where Linux 6.2 is going.
And as always, when you're this far along in the development process, there is quite
a bit going on in the development branch.
Among many other things, work has been going on at Google on a, quote, lazy RCU implementation,
which is aiming to reduce power usage, and it might just land in 6.2.
If you're not familiar, RCU is the read-copy-update synchronization mechanism that's built into
the kernel.
This seems like a perfect time for this.
We've got Linux successful on the Steam Deck.
Of course, the Linux kernel powers Android.
Batchy prices are an area of big concern right now.
So I feel like the community should think of Linux 6.2 as the lazy kernel.
So here's what making the RCU lazy really means.
It means batching callbacks and other activities and then flushing them after a certain delay.
Batching them all up when the memory pressure gets to a certain point or after a certain
amount of time has expired means reducing power usage by the kernel by up to 5 to 10
percent.
Which is pretty significant.
The reason is, quite simply, you're not waking the whole system up all the time every single
time something comes up.
Instead, you hold onto them, sort of a common practice on some mobile operating systems,
and then you send them all in a batch.
And by doing that, you wake up the CPU less and you save a lot of power.
Sticking with Linux 6.2 a bit longer, it seems mainline support for the Apple M1 Pro, Macs,
and Ultra hardware should be landing this time around.
Hey, it looks like the patches for Apple's fanciest SoCs, which is quite notably I think
for people out there, really kind of translates to the Mac Studio system, that landed.
That code is there and it may be in Linux 6.2.
That is assuming everything can get in there and the Asahi team hasn't spoiled their relationship
with upstream.
Yeah, some context on that.
In a now deleted tweet, Asahi Linux lead Hector Martin took to Twitter to vent about, quote,
arguing with kernel maintainers.
Going on to say he recently spent six hours arguing on IRC with an upstream developer.
Yeah, and then Hector followed that up with another tweet saying, quote, like dude, if
you aren't going to step into my world and actually understand what I'm trying to do
here, just suck it up and act my patch.
It's not my job to drag you kicking and screaming until you either give up or have a light bulb
moment.
And it seems some on the kernel team have noticed that thread and apparently did not
take very kindly to the tweets.
It really would be a shame if these kinds of things resulted in a slowdown of progress
on this important work just due to personal issues between teams.
But sadly, it would not be the first time we've seen that.
I think one of the really great aspects of basing your infrastructure and tooling on
open source is that you can watch and plan to see what's coming down the pipe and build
accordingly, like we just did with the kernel.
And you can watch for stuff that's anywhere in the stack, or you can watch for stuff that
just Westpain is excited about.
And BcashFS is certainly one of those.
Yes, it is.
And things are just looking better and better.
On Friday, BcashFS developer Kent Overstreet published a new status update.
And while the file system has been in development since 2015, progress has really been picking
up of late.
In his most recent update, Overstreet noted that the on disk format changes are finally
starting to slow down, which is an important development if you want a file system that
doesn't change things out from under you.
Yeah, and it also is an important milestone for tooling to get built around that file
system.
I mean, I know we're not quite there yet.
It'll be ready when it's ready.
But it does feel like we're getting within throwing distance and just getting to this
milestone where all of that's getting finalized.
That's huge.
Also, Overstreet has a completely rewritten allocator in here now that's been developed
to address issues that were less than ideal with the previous allocator.
And Overstreet notes that the new allocator is much more scalable and simpler as well.
Yeah, that definitely seems to be one of the bigger recent developments, as well as snapshots,
having stabilized recently, and RAID 5 and 6 support, which is now quote, getting close
to usable.
And performance, let's not forget that.
Don't bury the lead here.
I know that's one of the reasons you've always been fascinated by the potential performance
of BcashFS.
And it seems some work has been going into that area, continues to go into that area.
But just recent work has resulted in a 50% improvement for 4K direct random writes.
This is all going pretty smooth.
We don't have any timelines yet.
But it does mean that Chris is bearish on Extended 4 and bullish on BcashFS.
Back in late 2020, FreeBSD introduced a WireGuard driver and the development cycle of FreeBSD
13.
But then during the FreeBSD 13 release candidate phase, that very same driver was removed over
concerns about the quality of the implementation.
Well, this week, a new WireGuard driver has landed with many fixes and improvements over
that old code from 2020.
Something crucial about this new work is that it was developed in cooperation with the upstream
WireGuard developers led by Jason Donenfeld.
And with this merge, there's now 7,600 new lines of fancy WireGuard kernel driver in
the mainline FreeBSD repo, which should be included with FreeBSD 14.
And for those of you on a current FreeBSD release, well, don't worry, the WireGuard
module is also available via FreeBSD Ports.
Leno.com slash LAN.
That's where you go to get $100 in 60 day credit on a new account.
And it's a great way to support the show while you're checking out something great.
Linode is fast, reliable cloud hosting with the best support in the business.
It's what I choose to use for everything we've deployed recently.
Our whole team knows how to use Linode now.
Their API is super easy to integrate with our scripts.
We can have systems take snapshots before we make any major changes and we can just
integrate it with our infrastructure management tools.
We upgraded to the new open SSL vulnerability in just minutes, thanks to the tooling that
we can use at Linode.
So when I say we love it, I mean it.
And it's 30 to 50% cheaper than the hyperscalers out there that just want to lock you into
their crazy platforms.
And you guys know I come on here every single week and I tell you Linode's getting better
and it's true.
I mean, can you imagine what it's going to be like today?
They have 11 data centers around the world and they're going to double that.
And more, really.
They have a concept for micro data centers that's coming out soon too that you'll hear
more about.
So check it out.
It's a great time to get started.
Leno.com slash LAN.
When you get that $100, you support the show and you can try out the world's best platform
to run Linux and applications on Linux.
There are a lot of options in the market, but none of them.
None of them check all the boxes.
And Linode has the staying power.
You build it once, you deploy it on Linode, it lasts forever.
Linode.com slash LAN.
Kalyde.com slash LAN.
Kalyde is endpoint security that takes advantage of your most powerful untapped resource in
IT.
End users.
And when you're trying to achieve security goals for yourself or a third party audit,
a lot of times shops have gone to old school tools, MDMs that force disruptive agents onto
employees' devices.
The old way of doing things, you lock it down like it's Fort Knox.
You often introduce new vulnerabilities thanks to that software and horrible performance
that turns IT and end users against each other.
Kalyde does things differently.
Instead of forcing changes on users, Kalyde sends them security recommendations via Slack.
It'll automatically notify your team when their devices are insecure, and then Kalyde
gives them step-by-step instructions on how to solve that problem.
So by reaching out to employees via a friendly Slack DM and educating them about policies
that your company follows, Kalyde can help you build a culture in which everyone contributes
to security because everyone understands how and why to do it.
And for IT admins, you get a fantastic dashboard.
Kalyde lets you monitor your entire fleet, Mac, Windows, or Linux.
At a glance, you can see the state of your machines and make sure they're following the
policies that you care about.
And you can prove compliance to your auditors, customers, and your leadership.
So that's Kalyde.
User-centered, cross-platform, endpoint security for teams that Slack.
You can meet your compliance goals by putting users first.
Visit Kalyde.com slash LAN to find out how.
You go there, you sign up for a free trial, they'll give you a goody bag that includes
a free t-shirt.
I'd like a free t-shirt right now.
I could use a free t-shirt.
So go try it out, support the show, and do security better and differently with Kalyde.
K-O-L-I-D-E dot com slash LAN.
Kalyde dot com slash LAN.
Last week, we covered the formation of GITTI Limited.
As they put it, a company to help ensure the goals of the project are met.
However, over the last week, we've seen a number of issues raised by the GITTI development
community.
It seems a good number of them were surprised by the announcement and published an open
letter demanding, quote, restitution of the GITTI project after the takeover announced
on 25 October.
The open letter stresses that the group behind it actually supports the creation of the for-profit
company.
It seems their core issue resolves around the ownership of the domains and the trademarks.
They state in the letter that they, quote, want to believe this is an honest mistake
and ask that a non-profit organization owned by the GITTI community is created, and that
the GITTI trademark and domains are transferred to that non-profit, and that the name of the
company is changed to avoid any confusion with the non-profit.
However, it seems no response was given within a satisfactory time period, and the authors
of the letter have stated they have no alternative but to fork the project under a new name,
writing, quote, this unfortunately concludes the GITTI open letter has failed, and there
is no alternative but forking the project under a new name with a healthy democratic
governance, exactly as it was before 25 October in the GITTI project.
But this time in the context of an incorporated non-profit that provides a legal framework.
In my opinion, surprise and disappointment are the general themes that I get when reading
this open letter.
They state that it was the community who elected these folks last year who are now creating
this new company, and it seems that the authors of the open letter believe that they should
be the ones retaining ownership of those domains and trademarks, and I can totally understand
that and see that from the community's perspective.
It's sort of a form of guaranteed ultimate control.
But I also just can't see a for-profit business that currently has possession of those things
willfully giving them up unless they're just truly bought into the community message and
ideas overall.
But I don't know, Wes, to me, this seems like a direct conflict of interest.
Yeah, it's a complicated scenario.
You know, you got to think of the risk that you have, obviously, having community members
develop a fork, take efforts away from developing, you know, the main existing GITTI project.
That's a real threat.
But on the other hand, what they're proposing is a more complicated structure.
And I could see, I'm not saying this is my position, but I could see how the founders
of the for-profit company don't quite see the benefit.
I suppose in one sense, it's asking the question, what is the future of the project?
Is it a for-profit entity that is happening to make an open source project?
Or is it an open source project first that also has a for-profit company there to support
that effort?
Those are different models.
And I think with all the surprise and maybe lack of communication, it's hard to know exactly
what the intentions are here.
They may be good, but it's just hard to say.
I think what you just articulated there is what the community and this for-profit organization
are going to go through the process of figuring out with this.
And I was wondering when we covered the story last week if we'd see a fork out of this.
And it seems like it's 50-50 with these types of announcements.
And unfortunately, this is one that's going to result in a fork.
I say unfortunately just because you always hate to see any kind of talent, time, skills
diffused out.
I mean, this has been a project that many folks in the Jupiter Broadcasting community
and the larger sort of open source tech world, they use and rely on and have trusted for
years now.
So definitely, it's concerning.
Yeah.
We'll see where it goes.
It could work out for the best.
Sometimes these things do, or perhaps it all gets resolved.
These are the interesting bits.
There's a bit of a theme in this week's episode is this stuff in open source is all out in
the open for all of us to watch.
And so we get to document it in real time.
And that's the goal of this show.
We try to pull out the little bits and nuggets that are happening in this world that we think
really matter to you this week and can help inform you in your career and in your passion.
So go to linuxactionnews.com slash subscribe for all the ways to get new episodes every
single week.
And linuxactionnews.com slash contact for ways to get in touch.
If we missed a story, something you'd like to hear about, boost in with a new podcast
app at newpodcastapps.com and tell us about it.
Don't worry.
We'll be back next week with our take on the latest Linux and open source news.
Thanks for joining us.
And that's all the news for this week.
